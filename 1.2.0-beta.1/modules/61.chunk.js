webpackJsonp([61],{1715:function(t,e,n){"use strict";var o=this&&this.__decorate||function(t,e,n,o){var i,d=arguments.length,a=d<3?e:null===o?o=Object.getOwnPropertyDescriptor(e,n):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(t,e,n,o);else for(var r=t.length-1;r>=0;r--)(i=t[r])&&(a=(d<3?i(a):d>3?i(e,n,a):i(e,n))||a);return d>3&&a&&Object.defineProperty(e,n,a),a};Object.defineProperty(e,"__esModule",{value:!0});var i=n(0),d=n(265),a=function(){function t(){this.htmlCode=n(2469),this.javascriptCode=n(2470),this.codepen={html:this.htmlCode,htmlAttributes:{"ng-controller":"ComponentListDemoCtrl as vm"},js:[this.javascriptCode]}}return t}();a=o([i.Component({selector:"uxd-component-list-ng1",template:n(2107)}),d.DocumentationSectionComponent("ComponentsComponentListNg1Component")],a),e.ComponentsComponentListNg1Component=a},1716:function(t,e,n){"use strict";var o=this&&this.__decorate||function(t,e,n,o){var i,d=arguments.length,a=d<3?e:null===o?o=Object.getOwnPropertyDescriptor(e,n):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(t,e,n,o);else for(var r=t.length-1;r>=0;r--)(i=t[r])&&(a=(d<3?i(a):d>3?i(e,n,a):i(e,n))||a);return d>3&&a&&Object.defineProperty(e,n,a),a},i=this&&this.__metadata||function(t,e){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(t,e)};Object.defineProperty(e,"__esModule",{value:!0});var d=n(0),a=n(19),r=n(266),l=n(144),s=n(267),c=n(1715),p=n(269),m=n(268),u=[c.ComponentsComponentListNg1Component],h=[{path:"**",component:s.DocumentationCategoryComponent,data:{category:l.ResolverService.resolveCategoryData(l.DocumentationPage.Components,"Component List")}}],f=function(){function t(t,e){e.registerResolver(t)}return t}();f=o([d.NgModule({imports:[p.WrappersModule,m.TabsModule,r.DocumentationComponentsModule,a.RouterModule.forChild(h)],exports:u,declarations:u,entryComponents:u}),i("design:paramtypes",[d.ComponentFactoryResolver,l.ResolverService])],f),e.ComponentsListModule=f},2107:function(t,e){t.exports='<uxd-component-list-wrapper></uxd-component-list-wrapper>\n\n<hr>\n\n<p>The <code>component-list</code> directive allows you to add or remove instances of the same component. \nIt should be given an <code>ng-model</code> containing an array. If the array has any items components will initially be created for those values.\nThis array will be updated when a new field is added or when a component changes its model.</p>\n\n<p>You should provide the html for the component you want to duplicate in a <code>component</code> tag inside the <code>component-list</code> directive. \nEach component will have a property called <code>model</code> available in its scope. \nYour component should update this property which will update the <code>ng-model</code> on the <code>component-list</code>.</p>\n\n<tabset>\n    <tab heading="HTML">\n        <uxd-snippet [code]="htmlCode" language="html"></uxd-snippet>\n    </tab>\n    <tab heading="JavaScript">\n        <uxd-snippet [code]="javascriptCode" language="javascript"></uxd-snippet>\n    </tab>\n</tabset>\n\n<p>Use the following attributes to customize the behavior of the component:</p>\n\n<div class="demo-attributes table-responsive">\n<table class="table m-t">\n  <tbody><tr>\n    <th>Name</th>\n    <th>Type</th>\n    <th>Binding</th>\n    <th>Description</th>\n    <th>Optional</th>\n  </tr>\n  <tr>\n    <td class="attribute">min-components</td>\n    <td>number</td>\n    <td>variable</td>\n    <td>Specifies the minimum number of components that will be displayed. If no values have been set for these components in the <code>ng-model</code> then the default value they will be given is null. The default value is 0.</td>\n    <td>true</td>\n  </tr>\n  <tr>\n    <td class="attribute">max-components</td>\n    <td>number</td>\n    <td>variable</td>\n    <td>Specifies the maximum number of components that will be displayed. The add button will be disabled when the limit has been reached. By default there is no limit.</td>\n    <td>true</td>\n  </tr>\n  <tr>\n    <td class="attribute">button-text</td>\n    <td>string</td>\n    <td>literal</td>\n    <td>Specifies the text to be displayed beside the add button. The default text is \'Add a field\'.</td>\n    <td>true</td>\n  </tr>\n  <tr>\n    <td class="attribute">on-add</td>\n    <td>function</td>\n    <td>variable</td>\n    <td>If specified the function will be called when a new item is being added to the list.</td>\n    <td>true</td>\n  </tr>\n  <tr>\n    <td class="attribute">on-remove</td>\n    <td>function</td>\n    <td>variable</td>\n    <td>If specified the function will be called when an item is being removed from the list.</td>\n    <td>true</td>\n  </tr>\n</tbody>\n</table>\n</div>'},2469:function(t,e){t.exports='<div class="row">\n    <div class="col-md-6">\n        <component-list ng-model="vm.components">\n            <component>\n                <input type="text" class="form-control" placeholder="Enter text" ng-model="model">\n            </component>\n        </component-list>\n    </div>\n</div>'},2470:function(t,e){t.exports="angular.module('app').controller('ComponentListDemoCtrl', ComponentListDemoCtrl);\n\nfunction ComponentListDemoCtrl() {\n    var vm = this;\n\n    vm.components = [];\n}\n"}});
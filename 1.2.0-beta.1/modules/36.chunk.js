webpackJsonp([36],{1725:function(t,e,n){"use strict";var o=this&&this.__decorate||function(t,e,n,o){var a,r=arguments.length,d=r<3?e:null===o?o=Object.getOwnPropertyDescriptor(e,n):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)d=Reflect.decorate(t,e,n,o);else for(var i=t.length-1;i>=0;i--)(a=t[i])&&(d=(r<3?a(d):r>3?a(e,n,d):a(e,n))||d);return r>3&&d&&Object.defineProperty(e,n,d),d};Object.defineProperty(e,"__esModule",{value:!0});var a=n(0),r=n(265),d=function(){function t(){this.htmlCode=n(2490),this.cssCode=n(2489),this.javascriptCode=n(2491),this.codepen={html:this.htmlCode,htmlAttributes:{"ng-controller":"DraggableCardsListViewDemoCtrl as vm"},css:[this.cssCode],js:[this.javascriptCode]}}return t}();d=o([a.Component({selector:"uxd-draggable-cards-list-view-ng1",template:n(2114),styles:[n(2976)],encapsulation:a.ViewEncapsulation.None}),r.DocumentationSectionComponent("ComponentsDraggableCardsListViewNg1Component")],d),e.ComponentsDraggableCardsListViewNg1Component=d},1726:function(t,e,n){"use strict";var o=this&&this.__decorate||function(t,e,n,o){var a,r=arguments.length,d=r<3?e:null===o?o=Object.getOwnPropertyDescriptor(e,n):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)d=Reflect.decorate(t,e,n,o);else for(var i=t.length-1;i>=0;i--)(a=t[i])&&(d=(r<3?a(d):r>3?a(e,n,d):a(e,n))||d);return r>3&&d&&Object.defineProperty(e,n,d),d};Object.defineProperty(e,"__esModule",{value:!0});var a=n(0),r=n(265),d=function(){function t(){this.htmlCode=n(2493),this.cssCode=n(2492),this.javascriptCode=n(2494),this.codepen={html:this.htmlCode,htmlAttributes:{"ng-controller":"DraggableCardsDemoCtrl as vm"},css:[this.cssCode],js:[this.javascriptCode]}}return t}();d=o([a.Component({selector:"uxd-draggable-cards-ng1",template:n(2115),styles:[n(2977)],encapsulation:a.ViewEncapsulation.None}),r.DocumentationSectionComponent("ComponentsDraggableCardsNg1Component")],d),e.ComponentsDraggableCardsNg1Component=d},1727:function(t,e,n){"use strict";var o=this&&this.__decorate||function(t,e,n,o){var a,r=arguments.length,d=r<3?e:null===o?o=Object.getOwnPropertyDescriptor(e,n):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)d=Reflect.decorate(t,e,n,o);else for(var i=t.length-1;i>=0;i--)(a=t[i])&&(d=(r<3?a(d):r>3?a(e,n,d):a(e,n))||d);return r>3&&d&&Object.defineProperty(e,n,d),d},a=this&&this.__metadata||function(t,e){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(t,e)};Object.defineProperty(e,"__esModule",{value:!0});var r=n(0),d=n(19),i=n(266),c=n(144),l=n(267),s=n(1726),h=n(1725),p=n(269),u=n(268),g=[s.ComponentsDraggableCardsNg1Component,h.ComponentsDraggableCardsListViewNg1Component],b=[{path:"**",component:l.DocumentationCategoryComponent,data:{category:c.ResolverService.resolveCategoryData(c.DocumentationPage.Components,"Draggable Cards")}}],m=function(){function t(t,e){e.registerResolver(t)}return t}();m=o([r.NgModule({imports:[p.WrappersModule,u.TabsModule,i.DocumentationComponentsModule,d.RouterModule.forChild(b)],exports:g,declarations:g,entryComponents:g}),a("design:paramtypes",[r.ComponentFactoryResolver,c.ResolverService])],m),e.ComponentsDraggableCardsModule=m},2023:function(t,e,n){e=t.exports=n(9)(void 0),e.push([t.i,".draggable-card-list-demo {\n  width: 100%;\n  height: 470px;\n}\n.workbook-col {\n  width: 180px;\n}\n.workbook-col span {\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n.items-col {\n  width: 58px;\n}\n.last-accessed-col {\n  width: 125px;\n}\n.author-col {\n  width: 121px;\n}\n.draggable-example {\n  background-color: #FAFAFA;\n}\n.card-content {\n  width: 100%;\n  height: 100%;\n  padding-top: 5px;\n}\n.card-content .chart-container {\n  display: inline-block;\n  width: 60px;\n  height: 60px;\n  vertical-align: top;\n}\n.card-content .text-container {\n  display: inline-block;\n  width: calc(100% - 70px);\n  padding-left: 10px;\n}\n.card-content .text-container .status {\n  width: 100%;\n  height: 15px;\n  line-height: 12px;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  color: #4b4d4e;\n}\n",""])},2024:function(t,e,n){e=t.exports=n(9)(void 0),e.push([t.i,".draggable-card-demo {\n  width: 400px;\n  height: 500px;\n}\n.card-content {\n  width: 100%;\n  height: 100%;\n  padding-top: 5px;\n}\n.card-content .chart-container {\n  display: inline-block;\n  width: 60px;\n  height: 60px;\n  vertical-align: top;\n}\n.card-content .text-container {\n  display: inline-block;\n  width: calc(30%);\n  padding-left: 10px;\n}\n.card-content .text-container .status {\n  width: 100%;\n  height: 15px;\n  line-height: 12px;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  color: #4b4d4e;\n}\n.card-content .text-container .description {\n  width: 100%;\n  height: 44px;\n  overflow: hidden;\n  font-size: 14px;\n}\n",""])},2114:function(t,e){t.exports='<uxd-draggable-cards-list-view-wrapper></uxd-draggable-cards-list-view-wrapper>\n\n<hr>\n\n<p>The above example shows how the draggable cards control can be used to interact with another control such as a List View. \nThe code below was used to produce the above example.</p>\n\n<tabset>\n    <tab heading="HTML">\n        <uxd-snippet [code]="htmlCode" language="html"></uxd-snippet>\n    </tab>\n    <tab heading="JavaScript">\n        <uxd-snippet [code]="javascriptCode" language="javascript"></uxd-snippet>\n    </tab>\n    <tab heading="CSS">\n        <uxd-snippet [code]="cssCode" language="css"></uxd-snippet>\n    </tab>\n</tabset>'},2115:function(t,e){t.exports='<uxd-draggable-cards-wrapper></uxd-draggable-cards-wrapper>\n\n<hr>\n\n<p>The Draggable Cards control is created using the <code>draggable-cards</code> directive.\nIt allows a series of panels to be displayed in a vertical list. \nPanels can be selected or reordered, with the ability to add edit or remove functionality.</p>\n\n<tabset>\n    <tab heading="HTML">\n        <uxd-snippet [code]="htmlCode" language="html"></uxd-snippet>\n    </tab>\n    <tab heading="JavaScript">\n        <uxd-snippet [code]="javascriptCode" language="javascript"></uxd-snippet>\n    </tab>\n    <tab heading="CSS">\n        <uxd-snippet [code]="cssCode" language="css"></uxd-snippet>\n    </tab>\n</tabset>\n\n<p>The <code>draggable-cards</code> directive should contain card elements. There are two types of card element: <code>fixed-card</code> and <code>draggable-card</code>.</p>\n\n<p>A <code>fixed-card</code> can have a title and a subtitle only and cannot be moved. The <code>fixed-card</code> elements are grouped together at the top of the list.</p>\n\n<p>A <code>draggable-card</code> can have also have a title and a subtitle. Additionally, they will have reorder controls on the left side of the card. \nEdit and remove buttons will also be added if functions are specified for these events. \nThe main content of the card should be specified inside the <code>draggable-card</code> element.</p>\n\n<h4 id="options">Options</h4>\n\n<p>The <code>draggable-cards</code> directive can have the following attributes to configure it:</p>\n<div class="demo-attributes table-responsive">\n<table class="table m-t">\n  <tbody><tr>\n    <th>Name</th>\n    <th>Type</th>\n    <th>Binding</th>\n    <th>Description</th>\n    <th>Optional</th>\n  </tr>\n  <tr>\n    <td class="attribute">direction</td>\n    <td>string</td>\n    <td>literal</td>\n    <td>Can be set to \'left\' or \'right\'. This will change the side the callout will display on a selected card.</td>\n    <td>true</td>\n  </tr>\n  <tr>\n    <td class="attribute">allow-reordering</td>\n    <td>boolean</td>\n    <td>variable</td>\n    <td>If specified, this will show or hide the reordering controls on the card. If this option is not specified the default value is true</td>\n    <td>true</td>\n  </tr>\n  <tr>\n    <td class="attribute">allow-editing</td>\n    <td>boolean</td>\n    <td>variable</td>\n    <td>If specified, this will show or hide the edit button on a card. Note, the edit button will not appear if an edit function has not been specified. If this option is not specified the default value is true.</td>\n    <td>true</td>\n  </tr>\n  <tr>\n    <td class="attribute">allow-removing</td>\n    <td>boolean</td>\n    <td>variable</td>\n    <td>If specified, this will show or hide the remove button on a card. Note, the remove button will not appear if a remove function has not been specified. If this option is not specified the default value is true.</td>\n    <td>true</td>\n  </tr>\n  <tr>\n    <td class="attribute">on-select</td>\n    <td>function</td>\n    <td>variable</td>\n    <td>If specified, this function will be called when a card is clicked. The function should accept one parameter which will contain the scope of the selected card.</td>\n    <td>true</td>\n  </tr>\n  <tr>\n    <td class="attribute">on-remove</td>\n    <td>function</td>\n    <td>variable</td>\n    <td>If specified, this function will be called when the remove button is clicked on a card. The function should accept one parameter which will contain the scope of the card. In this function you should remove the item from the array of draggable cards in the controller (see sample code). The remove button will not appear on any cards if this has not been set.</td>\n    <td>true</td>\n  </tr>\n  <tr>\n    <td class="attribute">on-edit</td>\n    <td>function</td>\n    <td>variable</td>\n    <td>If specified, this function will be called when the edit button is clicked on a card. The function should accept one parameter which will contain the scope of the card. The edit button will not appear on any cards if this has not been set.</td>\n    <td>true</td>\n  </tr>\n  <tr>\n    <td class="attribute">on-reorder</td>\n    <td>function</td>\n    <td>variable</td>\n    <td>If specified, this function will be called when a card is moved. The function should accept one parameter which will contain an array of the card scopes in their new order.</td>\n    <td>true</td>\n  </tr>\n</tbody></table>\n</div>\n<p><br></p>\n\n<p>The <code>fixed-card</code> and <code>draggable-card</code> elements can have the following attributes to configure it:</p>\n<div class="demo-attributes table-responsive">\n<table class="table m-t">\n  <tbody><tr>\n    <th>Name</th>\n    <th>Type</th>\n    <th>Binding</th>\n    <th>Description</th>\n    <th>Optional</th>\n  </tr>\n  <tr>\n    <td class="attribute">card-title</td>\n    <td>string</td>\n    <td>variable</td>\n    <td>This will set the title text on the card.</td>\n    <td>true</td>\n  </tr>\n  <tr>\n    <td class="attribute">card-subtitle</td>\n    <td>string</td>\n    <td>variable</td>\n    <td>This will set the text to the right of the title on the card.</td>\n    <td>true</td>\n  </tr>\n  <tr>\n    <td class="attribute">card-selected</td>\n    <td>boolean</td>\n    <td>variable</td>\n    <td>If set to true this card will be selected by default. Only one card should have this set to true.</td>\n    <td>true</td>\n  </tr>\n  <tr>\n    <td class="attribute">disable-remove</td>\n    <td>boolean</td>\n    <td>variable</td>\n    <td>If set to true the remove button will be greyed out and unclickable.</td>\n    <td>true</td>\n  </tr>\n  <tr>\n    <td class="attribute">disable-edit</td>\n    <td>boolean</td>\n    <td>variable</td>\n    <td>If set to true the edit button will be greyed out and unclickable.</td>\n    <td>true</td>\n  </tr>\n  <tr>\n    <td class="attribute">card-icons</td>\n    <td>object</td>\n    <td>variable</td>\n    <td>Contains the attributes to add additional icons and functions alongside the card title.</td>\n    <td>true</td>\n  </tr>\n</tbody></table>\n</div>\n\n<p>The following attributes are contained in the <code>card-icons</code> object.</p>\n<div class="demo-attributes table-responsive">\n<table class="table m-t">\n  <tbody><tr>\n    <th>Name</th>\n    <th>Type</th>\n    <th>Binding</th>\n    <th>Description</th>\n    <th>Optional</th>\n  </tr>\n  <tr>\n    <td class="attribute">icon</td>\n    <td>string</td>\n    <td>variable</td>\n    <td>The icon class to display the icon.</td>\n    <td>false</td>\n  </tr>\n  <tr>\n    <td class="attribute">tooltip</td>\n    <td>string</td>\n    <td>variable</td>\n    <td>This will be displayed in the tooltip when the icon is hovered.</td>\n    <td>true</td>\n  </tr>\n  <tr>\n    <td class="attribute">tooltipPlacement</td>\n    <td>string</td>\n    <td>variable</td>\n    <td>Can be set to <code>top</code>, <code>bottom</code>, <code>right</code> or <code>left</code> with top set as default.</td>\n    <td>true</td>\n  </tr>\n  <tr>\n    <td class="attribute">click</td>\n    <td>function</td>\n    <td>variable</td>\n    <td>This will be called when the icon is clicked.</td>\n    <td>false</td>\n  </tr>\n  <tr>\n    <td class="attribute">disabled</td>\n    <td>boolean</td>\n    <td>variable</td>\n    <td>If set to true the icon will be greyed out and unclickable.</td>\n    <td>true</td>\n  </tr>\n</tbody></table>\n</div>\n'},2489:function(t,e){t.exports=".draggable-card-list-demo {\n    width: 100%;\n    height: 470px;\n}\n\n.workbook-col {\n    width: 180px;\n}\n\n.items-col {\n    width: 58px;\n}\n\n.last-accessed-col {\n    width: 125px;\n}\n\n.author-col {\n    width: 121px;\n}\n\n.draggable-example {\n    background-color: #FAFAFA;\n}\n.card-content {\n  width: 100%;\n  height: 100%;\n  padding-top: 5px;\n}\n\n.card-content .chart-container {\n  display: inline-block;\n  width: 60px;\n  height: 60px;\n  vertical-align: top;\n}\n\n.card-content .text-container {\n  display: inline-block;\n  width: calc(100% - 70px);\n  padding-left: 10px;\n}\n\n.card-content .text-container .status {\n  width: 100%;\n  height: 15px;\n  line-height: 12px;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  color: #4b4d4e;\n}"},2490:function(t,e){t.exports='<div class="demo row draggable-example">\n\n    <div class="col-sm-5 p-l-nil">\n        <div class="draggable-card-list-demo">\n            <draggable-cards on-select="vm.onSelect" direction="right">\n\n                <fixed-card ng-repeat="card in ::vm.fixedCards" card-title="card.name" card-subtitle="card.count" card-selected="card.selected"></fixed-card>\n\n                <draggable-card ng-repeat="card in ::vm.draggableCards" card-title="card.name" card-icons="card.icons" card-subtitle="card.count"\n                    card-selected="card.selected">\n                    <div class="card-content">\n                        <div class="chart-container">\n                            <flot dataset="card.data" options="card.options"></flot>\n                        </div>\n                        <div class="text-container">\n                            <p class="m-b-nil status" ng-bind="::card.status" overflow-tooltip></p>\n                            <p class="m-b-nil description text-muted" ng-bind="::card.description" overflow-tooltip></p>\n                        </div>\n                    </div>\n                </draggable-card>\n\n            </draggable-cards>\n        </div>\n    </div>\n\n    <div class="col-sm-7">\n        <div class="table-responsive">\n            <table class="table table-hover">\n                <thead class="table-header-dark">\n                    <tr>\n                        <th></th>\n                        <th>Workbook</th>\n                        <th>Items</th>\n                        <th>Last Accessed</th>\n                        <th>Author</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr ng-repeat="item in vm.items">\n                        <td class="text-center">\n                            <div class="listview-page-icon"></div>\n                        </td>\n                        <td class="workbook-col" ng-bind="item.workbook"></td>\n                        <td class="item-col" ng-bind="item.items"></td>\n                        <td class="last-accessed-col" ng-bind="item.lastAccessed"></td>\n                        <td class="author-col" ng-bind="item.author"></td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    </div>\n</div>'},2491:function(t,e){t.exports="angular.module('app').controller('DraggableCardsListViewDemoCtrl', DraggableCardsListViewDemoCtrl);\n\nDraggableCardsListViewDemoCtrl.$inject = ['$scope', '$colorService'];\n\nfunction DraggableCardsListViewDemoCtrl($scope, $colorService) {\n    var vm = this;\n\n    var flotChartColors = {\n        accent: $colorService.getColor('accent').toRgb(),\n        grey5: $colorService.getColor('grey5').toRgb(),\n        other: $colorService.getColor('accent').setAlpha(0.5).toRgba()\n    };\n\n    var labelColor = '#333';\n\n    vm.availableItems = [{\n        workbook: 'Privileged documents',\n        items: 35,\n        lastAccessed: 'Jul 14, 2013',\n        author: chance.name(),\n        category: 'Privileged'\n    }, {\n        workbook: 'Work Product',\n        items: 60,\n        lastAccessed: 'Jan 12, 2013',\n        author: chance.name(),\n        category: 'Privileged'\n    }, {\n        workbook: 'Hold',\n        items: 22,\n        lastAccessed: 'Aug 4, 2013',\n        author: chance.name(),\n        category: 'Privileged'\n    }, {\n        workbook: 'For export',\n        items: 35,\n        lastAccessed: 'June 29, 2013',\n        author: chance.name(),\n        category: 'Privileged'\n    }, {\n        workbook: 'Executive Email',\n        items: 11,\n        lastAccessed: 'Dec 24, 2013',\n        author: chance.name(),\n        category: 'Protected'\n    }, {\n        workbook: 'Work Product',\n        items: 99,\n        lastAccessed: 'Jan 12, 2013',\n        author: chance.name(),\n        category: 'Protected'\n    }, {\n        workbook: 'Hold',\n        items: 12,\n        lastAccessed: 'Nov 12, 2013',\n        author: chance.name(),\n        category: 'Protected'\n    }, {\n        workbook: 'Workbook 7',\n        items: 44,\n        lastAccessed: 'Feb 1, 2013',\n        author: chance.name(),\n        category: 'Relevant'\n    }, {\n        workbook: 'Workbook 10',\n        items: 55,\n        lastAccessed: 'Apr 2, 2013',\n        author: chance.name(),\n        category: 'Relevant'\n    }, {\n        workbook: 'Workbook 8',\n        items: 66,\n        lastAccessed: 'May 3, 2013',\n        author: chance.name(),\n        category: 'Relevant'\n    },];\n\n    vm.items = [];\n\n    vm.onSelect = function (itemScope) {\n        var category = itemScope.card.name;\n\n        //if the selected category is all then show all available items\n        if (category === 'All') {\n            vm.items = vm.availableItems;\n        } else {\n            vm.items = vm.availableItems.filter(function (item) {\n                return item.category === category;\n            });\n        }\n        $scope.$digest();\n    };\n\n    vm.fixedCards = [{\n        name: 'All',\n        count: '(10)',\n        selected: true\n    }];\n\n    vm.draggableCards = [{\n        name: 'Protected',\n        count: '(3)',\n        status: '15% unique, 10% shared',\n        description: 'NYC Preliminary Production 1 created from the protected items.',\n        selected: false,\n        data: [{\n            data: 25,\n            color: [flotChartColors.accent]\n        }, {\n            data: 15,\n            color: [flotChartColors.other]\n        }, {\n            data: 18,\n            color: [flotChartColors.grey5]\n        }],\n        options: getChartOptions('13.2M'),\n        icons: [{\n            icon: 'hpe-folder',\n            tooltip: 'Folder',\n            click: function () {\n                //do stuff here when icon is clicked\n            }\n        }, {\n            icon: 'hpe-bookmark',\n            click: function () {\n                //do stuff here when icon is clicked\n            }\n        }]\n    }, {\n        name: 'Privileged',\n        count: '(4)',\n        status: '7% unique, 10% shared',\n        description: 'NYC Production 2 created as a follow up to Production 1.',\n        selected: false,\n        data: [{\n            data: 10,\n            color: [flotChartColors.accent]\n        }, {\n            data: 5,\n            color: [flotChartColors.other]\n        }, {\n            data: 85,\n            color: [flotChartColors.grey5]\n        }],\n        options: getChartOptions('6.5M')\n    }, {\n        name: 'Relevant',\n        count: '(3)',\n        status: '65% unique, 12% shared',\n        description: 'NYC Production 3 Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.',\n        selected: false,\n        data: [{\n            data: 60,\n            color: [flotChartColors.accent]\n        }, {\n            data: 15,\n            color: [flotChartColors.other]\n        }, {\n            data: 25,\n            color: [flotChartColors.grey5]\n        }],\n        options: getChartOptions('33.2M')\n    }];\n\n    function getChartOptions(label) {\n        return {\n            series: {\n                pie: {\n                    show: true,\n                    innerRadius: 0.7,\n                    centerLabel: {\n                        show: true,\n                        color: labelColor,\n                        text: label,\n                        font: 'Source Sans Pro',\n                        fontSize: 15,\n                        textBaseline: 'middle'\n                    },\n                    stroke: {\n                        width: 0\n                    }\n                }\n            }\n        };\n    }\n}\n"},2492:function(t,e){t.exports=".draggable-card-demo {\n    width: 400px;\n    height: 500px;\n}\n\n.card-content {\n    width: 100%;\n    height: 100%;\n    padding-top: 5px;\n}\n\n.card-content .chart-container {\n    display: inline-block;\n    width: 60px;\n    height: 60px;\n    vertical-align: top;\n}\n\n.card-content .text-container {\n    display: inline-block;\n    width: calc(100% - 70px);\n    padding-left: 10px;\n}\n\n.card-content .text-container .status {\n    width: 100%;\n    height: 15px;\n    line-height: 12px;\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    color: #4b4d4e;\n}\n\n.card-content .text-container .description {\n    width: 100%;\n    height: 44px;\n    overflow: hidden;\n    font-size: 14px;\n}"},2493:function(t,e){t.exports='<div class="demo row">\n    <div class="draggable-card-demo p-l-md">\n        <draggable-cards allow-reordering="vm.allowReordering" allow-editing="vm.allowEditing" allow-removing="vm.allowRemoving" on-edit="vm.onEdit" on-remove="vm.onRemove" on-select="vm.onSelect" on-reorder="vm.onReorder" direction="right">\n            <fixed-card ng-repeat="card in ::vm.fixedCards" card-title="card.name" card-subtitle="card.count" card-selected="card.selected"></fixed-card>\n\n            <draggable-card ng-repeat="card in vm.draggableCards" card-title="card.name" card-subtitle="card.count" card-selected="card.selected">\n            <div class="card-content">\n                <div class="chart-container">\n                <flot dataset="card.data" options="card.options"></flot>\n                </div>\n                <div class="text-container">\n                <p class="m-b-nil status" ng-bind="::card.status" overflow-tooltip></p>\n                <p class="m-b-nil description text-muted" ng-bind="::card.description" overflow-tooltip></p>\n                </div>\n            </div>\n            </draggable-card>\n        </draggable-cards>\n    </div>\n</div>'},2494:function(t,e){t.exports="angular.module('app').controller('DraggableCardsDemoCtrl', DraggableCardsDemoCtrl);\n\nDraggableCardsDemoCtrl.$inject = ['$scope', '$colorService'];\n\nfunction DraggableCardsDemoCtrl($scope, $colorService) {\n    var vm = this;\n\n    var flotChartColors = {\n        accent: $colorService.getColor('accent').toRgb(),\n        grey5: $colorService.getColor('grey5').toRgb(),\n        other: $colorService.getColor('accent').setAlpha(0.5).toRgba()\n    };\n\n    vm.allowEditing = true;\n    vm.allowRemoving = true;\n    vm.allowReordering = true;\n\n    var labelColor = '#333';\n\n    vm.onReorder = function () {\n        //do stuff here when cards are reordered\n    };\n\n    vm.onSelect = function () {\n        //do stuff here when a card is selected\n    };\n\n    vm.onEdit = function () {\n        //do stuff here when the edit button is clicked\n    };\n\n    vm.onRemove = function (itemScope) {\n\n        //find the matching card\n        var idx = vm.draggableCards.indexOf(itemScope.card);\n\n        //remove and the item\n        vm.draggableCards.splice(idx, 1);\n\n        //ensure update occurs\n        $scope.$digest();\n    };\n\n    vm.fixedCards = [{\n        name: 'All',\n        count: '(8)',\n        selected: false\n    }, {\n        name: 'No Category',\n        count: '(2)',\n        selected: false\n    }];\n\n    vm.draggableCards = [{\n        name: 'Protected',\n        count: '(6)',\n        status: '15% unique, 10% shared',\n        description: 'NYC Preliminary Production 1 created from the protected items.',\n        selected: true,\n        data: [{\n            data: 25,\n            color: [flotChartColors.accent]\n        }, {\n            data: 15,\n            color: [flotChartColors.other]\n        }, {\n            data: 18,\n            color: [flotChartColors.grey5]\n        }],\n        options: getChartOptions('13.2M')\n    }, {\n        name: 'Privileged',\n        count: '(4)',\n        status: '7% unique, 10% shared',\n        description: 'NYC Production 2 created as a follow up to Production 1.',\n        selected: false,\n        data: [{\n            data: 10,\n            color: [flotChartColors.accent]\n        }, {\n            data: 5,\n            color: [flotChartColors.other]\n        }, {\n            data: 85,\n            color: [flotChartColors.grey5]\n        }],\n        options: getChartOptions('6.5M')\n    }, {\n        name: 'Relevant',\n        count: '(2)',\n        status: '65% unique, 12% shared',\n        description: 'NYC Production 3 Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.',\n        selected: false,\n        data: [{\n            data: 60,\n            color: [flotChartColors.accent]\n        }, {\n            data: 15,\n            color: [flotChartColors.other]\n        }, {\n            data: 25,\n            color: [flotChartColors.grey5]\n        }],\n        options: getChartOptions('33.2M')\n    }, {\n        name: 'Proprietary',\n        count: '(3)',\n        status: '7% unique, 10% shared',\n        description: 'NYC Production 4 Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.',\n        selected: false,\n        data: [{\n            data: 7,\n            color: [flotChartColors.accent]\n        }, {\n            data: 5,\n            color: [flotChartColors.other]\n        }, {\n            data: 87,\n            color: [flotChartColors.grey5]\n        }],\n        options: getChartOptions('5.4M')\n    }, {\n        name: 'Reviewed',\n        count: '(2)',\n        status: '65% unique, 12% shared',\n        description: 'NYC Production 5 Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.',\n        selected: false,\n        data: [{\n            data: 60,\n            color: [flotChartColors.accent]\n        }, {\n            data: 10,\n            color: [flotChartColors.other]\n        }, {\n            data: 30,\n            color: [flotChartColors.grey5]\n        }],\n        options: getChartOptions('36.0M')\n    }];\n\n    function getChartOptions(label) {\n        return {\n            series: {\n                pie: {\n                    show: true,\n                    innerRadius: 0.7,\n                    centerLabel: {\n                        show: true,\n                        color: labelColor,\n                        text: label,\n                        font: 'Source Sans Pro',\n                        fontSize: 15,\n                        textBaseline: 'middle'\n                    },\n                    stroke: {\n                        width: 0\n                    }\n                }\n            }\n        };\n    }\n}\n"},2976:function(t,e,n){var o=n(2023);t.exports="string"==typeof o?o:o.toString()},2977:function(t,e,n){var o=n(2024);t.exports="string"==typeof o?o:o.toString()}});
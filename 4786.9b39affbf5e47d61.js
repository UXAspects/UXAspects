(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[4786],{4629:C=>{C.exports={snippet:'<span class="token selector">.btn-container.demo-color-picker-close</span> <span class="token punctuation">{</span>\n  <span class="token property">margin</span><span class="token punctuation">:</span> 0 8px 8px<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.btn-container.demo-color-picker-close > button</span> <span class="token punctuation">{</span>\n  <span class="token property">width</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n',example:".btn-container.demo-color-picker-close {\n  margin: 0 8px 8px;\n}\n\n.btn-container.demo-color-picker-close > button {\n  width: 100%;\n}\n"}},14786:(C,O,u)=>{"use strict";u.r(O),u.d(O,{ComponentsColorModule:()=>an});var w=u(93965),x=u(28212),F=u(82312),d=u(5779),j=u(26059),N=u(67647),I=u(893),z=u(38052),B=u(16488),H=u(27185),n=u(17931),U=u(12954),Y=u(13363),R=u(34554),L=u(75637),G=u(62329),V=u(3725),W=u(81367),K=u(79017),X=u(78170),T=u(67034),$=u(70584),J=u(27520),Q=u(99250),Z=u(65698),q=u(32034),M=u(81838);function nn(S,_){if(1&S){const f=n.RV6();n.j41(0,"div",56)(1,"button",57),n.bIt("click",function(){n.eBV(f);const h=n.XpG();return n.Njj(h.close())}),n.EFF(2,"Accept"),n.k0s()()}}let A=class en extends B.j{constructor(_){super(u(80756)),this.playground={files:{"app.component.html":this.snippets.raw.appHtml,"app.component.ts":this.snippets.raw.appTs,"app.component.css":this.snippets.raw.appCss},modules:[{imports:["ColorPickerModule, MenuModule"],library:"@ux-aspects/ux-aspects"}]},this.columns=4,this.buttonStyle="circle",this.buttonSize="md",this.showTooltips=!1,this.showInput=!1,this._colorNames=[["Primary","Accent","Secondary","Alternate1","Alternate2","Alternate3","Vibrant1","Vibrant2"],["Grey1","Grey2","Grey3","Grey4","Grey5","Grey6","Grey7","Grey8"]],this.colors=this._colorNames.map(f=>f.map(r=>new d.tM$(r,_.resolve(r)))),this.selected=this.colors[0][0]}close(){this.menuTrigger?.closeMenu()}onColorPickerSelectedChange(){this.showInput||this.close()}static{this.\u0275fac=function(f){return new(f||en)(n.rXU(d.lrM))}}static{this.\u0275cmp=n.VBU({type:en,selectors:[["uxd-color-picker"]],viewQuery:function(f,r){if(1&f&&n.GBs(d.xbz,5),2&f){let h;n.mGM(h=n.lsd())&&(r.menuTrigger=h.first)}},standalone:!1,features:[n.Vt3],decls:190,vars:26,consts:[["colorPickerDropdown",""],[1,"demo-color-picker-container"],["type","button","aria-label","Select a color",1,"btn","button-secondary","dropdown-toggle",3,"uxMenuTriggerFor"],[1,"ux-color-picker-button-preview"],["name","chevron-down"],[1,"m-l-lg"],["id","color-picker-dropdown"],["uxMenuInitialFocus","",3,"selectedChange","inputSubmit","colors","selected","columns","buttonStyle","buttonSize","showTooltips","showInput"],["class","btn-container demo-color-picker-close",4,"ngIf"],[1,"uxd-customize-example"],["heading","Customize Example...",1,"accordion-chevron"],[1,"row","uxd-customize-row"],[1,"col-md-2","col-sm-3"],["for","columns"],[1,"col-md-4","col-sm-9"],["name","columns",3,"valueChange","value","min"],[1,"col-md-3","col-sm-6"],[3,"valueChange","value"],["for","buttonStyle"],["option","circle",3,"valueChange","value"],["option","square",3,"valueChange","value"],["for","buttonSize"],["option","sm",3,"valueChange","value"],["option","md",3,"valueChange","value"],["option","lg",3,"valueChange","value"],["routerLink","/components/buttons","fragment","dropdowns"],["routerLink","/components/utilities","fragment","color-service"],["tableTitle","Inputs"],["uxd-api-property","","name","colors","type","(ColorPickerColor | string)[] | (ColorPickerColor | string)[][]"],["uxd-api-property","","name","selected","type","ColorPickerColor"],["uxd-api-property","","name","columns","type","number","defaultValue","6"],["uxd-api-property","","name","buttonStyle","type","'square' | 'circle'","defaultValue","circle"],["uxd-api-property","","name","buttonSize","type","'sm' | 'md' | 'lg'","defaultValue","md"],["uxd-api-property","","name","showTooltips","type","boolean","defaultValue","false"],["uxd-api-property","","name","showInput","type","boolean","defaultValue","false"],["uxd-api-property","","name","inputMode","type","'hex' | 'rgba'","defaultValue","hex"],["uxd-api-property","","name","colorAriaLabel","type","(color: ColorPickerColor) => string"],["uxd-api-property","","name","switchModeAriaLabel","type","(mode: ColorPickerInputMode) => string"],["uxd-api-property","","name","inputAriaLabel","type","(mode: ColorPickerInputMode) => string"],["tableTitle","Outputs"],["uxd-api-property","","name","selectedChange","type","ColorPickerColor"],["uxd-api-property","","name","inputSubmit","type","void"],["uxd-api-property","","name","inputModeChange","type","'hex' | 'rgba'"],["uxd-api-property","","name","constructor","args","name: string, value: string, inputMode?: 'hex' | 'rgba'"],["uxd-api-property","","name","name","type","string"],["uxd-api-property","","name","hex","type","string"],["uxd-api-property","","name","rgba","type","string"],["uxd-api-property","","name","r","type","number"],["uxd-api-property","","name","g","type","number"],["uxd-api-property","","name","b","type","number"],["uxd-api-property","","name","a","type","number"],[3,"minimal"],["heading","HTML"],[3,"content"],["heading","TypeScript"],["heading","CSS"],[1,"btn-container","demo-color-picker-close"],["type","button",1,"btn","button-primary",3,"click"]],template:function(f,r){if(1&f){const h=n.RV6();n.j41(0,"div",1)(1,"button",2)(2,"span",3),n.EFF(3," \xa0 "),n.k0s(),n.nrm(4,"ux-icon",4),n.k0s(),n.j41(5,"span",5),n.EFF(6," Selected: "),n.j41(7,"code"),n.EFF(8),n.k0s(),n.EFF(9," \u2014 "),n.j41(10,"code"),n.EFF(11),n.k0s()()(),n.j41(12,"ux-menu",6,0)(14,"ux-color-picker",7),n.mxI("selectedChange",function(t){return n.eBV(h),n.DH7(r.selected,t)||(r.selected=t),n.Njj(t)}),n.bIt("selectedChange",function(){return n.eBV(h),n.Njj(r.onColorPickerSelectedChange())})("inputSubmit",function(){return n.eBV(h),n.Njj(r.close())}),n.k0s(),n.DNE(15,nn,3,0,"div",8),n.k0s(),n.j41(16,"div",9)(17,"ux-accordion")(18,"ux-accordion-panel",10)(19,"div",11)(20,"div",12)(21,"label",13),n.EFF(22,"columns"),n.k0s()(),n.j41(23,"div",14)(24,"ux-number-picker",15),n.mxI("valueChange",function(t){return n.eBV(h),n.DH7(r.columns,t)||(r.columns=t),n.Njj(t)}),n.k0s()(),n.j41(25,"div",16)(26,"ux-checkbox",17),n.mxI("valueChange",function(t){return n.eBV(h),n.DH7(r.showInput,t)||(r.showInput=t),n.Njj(t)}),n.EFF(27,"showInput"),n.k0s()(),n.j41(28,"div",16)(29,"ux-checkbox",17),n.mxI("valueChange",function(t){return n.eBV(h),n.DH7(r.showTooltips,t)||(r.showTooltips=t),n.Njj(t)}),n.EFF(30,"showTooltips"),n.k0s()()(),n.j41(31,"div",11)(32,"div",12)(33,"label",18),n.EFF(34,"buttonStyle"),n.k0s()(),n.j41(35,"div",14)(36,"ux-radio-button",19),n.mxI("valueChange",function(t){return n.eBV(h),n.DH7(r.buttonStyle,t)||(r.buttonStyle=t),n.Njj(t)}),n.EFF(37,"circle"),n.k0s(),n.j41(38,"ux-radio-button",20),n.mxI("valueChange",function(t){return n.eBV(h),n.DH7(r.buttonStyle,t)||(r.buttonStyle=t),n.Njj(t)}),n.EFF(39,"square"),n.k0s()(),n.j41(40,"div",12)(41,"label",21),n.EFF(42,"buttonSize"),n.k0s()(),n.j41(43,"div",14)(44,"ux-radio-button",22),n.mxI("valueChange",function(t){return n.eBV(h),n.DH7(r.buttonSize,t)||(r.buttonSize=t),n.Njj(t)}),n.EFF(45,"sm"),n.k0s(),n.j41(46,"ux-radio-button",23),n.mxI("valueChange",function(t){return n.eBV(h),n.DH7(r.buttonSize,t)||(r.buttonSize=t),n.Njj(t)}),n.EFF(47,"md"),n.k0s(),n.j41(48,"ux-radio-button",24),n.mxI("valueChange",function(t){return n.eBV(h),n.DH7(r.buttonSize,t)||(r.buttonSize=t),n.Njj(t)}),n.EFF(49,"lg"),n.k0s()()()()()(),n.nrm(50,"hr"),n.j41(51,"p"),n.EFF(52," A color picker can be added using the "),n.j41(53,"code"),n.EFF(54,"ux-color-picker"),n.k0s(),n.EFF(55," component. The example above shows the color picker hosted in a "),n.j41(56,"a",25),n.EFF(57,"dropdown button"),n.k0s(),n.EFF(58,"; however, it could equally be added to a modal or side panel. Colors can be picked from a pre-determined swatch, or optionally edited in hex or RGBA format with a live preview. This example constructs a swatch of UX Aspects theme colors using the "),n.j41(59,"a",26),n.EFF(60,"color service"),n.k0s(),n.EFF(61,".\n"),n.k0s(),n.j41(62,"p"),n.EFF(63," The following properties can be used to customize and interact with "),n.j41(64,"code"),n.EFF(65,"ux-color-picker"),n.k0s(),n.EFF(66,".\n"),n.k0s(),n.j41(67,"uxd-api-properties",27)(68,"tr",28)(69,"p"),n.EFF(70,"The collection of colors to display in the color swatch."),n.k0s(),n.j41(71,"p"),n.EFF(72," Colors can be specified either as a string, which is the hex or RGBA value of the color; or as a "),n.j41(73,"code"),n.EFF(74,"ColorPickerColor"),n.k0s(),n.EFF(75," object, which allows a name to be associated with the color. See below for details of the "),n.j41(76,"code"),n.EFF(77,"ColorPickerColor"),n.k0s(),n.EFF(78," class. "),n.k0s(),n.j41(79,"p"),n.EFF(80," This property is either a one-dimensional or two-dimensional array. If a two-dimensional array is provided, the colors will be split into rows, providing more control over the appearance of the swatch. "),n.k0s()(),n.j41(81,"tr",29),n.EFF(82," The currently selected color. If this is one of the colors in the "),n.j41(83,"code"),n.EFF(84,"colors"),n.k0s(),n.EFF(85," collection, it will be visually highlighted in the swatch. It will also be shown in the input panel, if enabled (see "),n.j41(86,"code"),n.EFF(87,"showInput"),n.k0s(),n.EFF(88,"). Note that this will always be a "),n.j41(89,"code"),n.EFF(90,"ColorPickerColor"),n.k0s(),n.EFF(91," object, even if plain strings are provided to the "),n.j41(92,"code"),n.EFF(93,"colors"),n.k0s(),n.EFF(94," property. See below for details of the "),n.j41(95,"code"),n.EFF(96,"ColorPickerColor"),n.k0s(),n.EFF(97," class. "),n.k0s(),n.j41(98,"tr",30),n.EFF(99," The number of columns to display in the color swatch. Set this to -1 if the width should be specified by a stylesheet instead, e.g. to provide a responsive layout. "),n.k0s(),n.j41(100,"tr",31),n.EFF(101," The style of the color swatch buttons. "),n.k0s(),n.j41(102,"tr",32),n.EFF(103," The size of the color swatch buttons. Three size variants are currently supported. "),n.k0s(),n.j41(104,"tr",33),n.EFF(105," Whether to show tooltips above the color swatch buttons. These contain the color name if provided; otherwise the color hex/RGBA value. "),n.k0s(),n.j41(106,"tr",34),n.EFF(107," Whether to show the hex/RGBA input panel. "),n.k0s(),n.j41(108,"tr",35),n.EFF(109," The default input mode to display in the input panel. The user can switch modes using the toggle button. "),n.k0s(),n.j41(110,"tr",36),n.EFF(111," Define a function that returns an aria-label for a "),n.j41(112,"code"),n.EFF(113,"ColorPickerColor"),n.k0s(),n.EFF(114,". "),n.k0s(),n.j41(115,"tr",37),n.EFF(116," Define a function that returns an aria-label for the button that switches input modes. "),n.k0s(),n.j41(117,"tr",38),n.EFF(118," Define a function that returns an aria-label for the input control. "),n.k0s()(),n.j41(119,"uxd-api-properties",39)(120,"tr",40),n.EFF(121," Emitted when the user changes the selected color, either by clicking a color swatch button, or entering a valid color value into the input panel text field. "),n.k0s(),n.j41(122,"tr",41),n.EFF(123," Emitted when the user presses enter in the input panel text field. This can be used to commit a color change and/or close a popup. "),n.k0s(),n.j41(124,"tr",42),n.EFF(125," Emitted when the user changes the colour input mode. "),n.k0s()(),n.j41(126,"h4"),n.EFF(127,"ColorPickerColor"),n.k0s(),n.j41(128,"p"),n.EFF(129," This is the type used by "),n.j41(130,"code"),n.EFF(131,"ux-color-picker"),n.k0s(),n.EFF(132," to define available colors and return the selected color. This provides access to the hex and RGBA values of any color, as well as individual color components.\n"),n.k0s(),n.j41(133,"uxd-api-properties")(134,"tr",43)(135,"ul")(136,"li")(137,"code"),n.EFF(138,"name"),n.k0s(),n.EFF(139,": The human readable name of the color."),n.k0s(),n.j41(140,"li")(141,"code"),n.EFF(142,"value"),n.k0s(),n.EFF(143,": The hex or RGBA value of the color. If this cannot be parsed then an error will be thrown. "),n.k0s(),n.j41(144,"li")(145,"code"),n.EFF(146,"inputMode"),n.k0s(),n.EFF(147,": Whether "),n.j41(148,"code"),n.EFF(149,"value"),n.k0s(),n.EFF(150," is in hex or RGBA format. If this is specified, then the format of "),n.j41(151,"code"),n.EFF(152,"value"),n.k0s(),n.EFF(153," will be preserved, e.g. if short-form hex strings should not be expanded. "),n.k0s()()(),n.j41(154,"tr",44),n.EFF(155," The human readable name of the color. "),n.k0s(),n.j41(156,"tr",45),n.EFF(157," The hex value of the color. "),n.k0s(),n.j41(158,"tr",46),n.EFF(159," The RGBA value of the color. "),n.k0s(),n.j41(160,"tr",47),n.EFF(161," The red value of the color (0-255). "),n.k0s(),n.j41(162,"tr",48),n.EFF(163," The green value of the color (0-255). "),n.k0s(),n.j41(164,"tr",49),n.EFF(165," The blue value of the color (0-255). "),n.k0s(),n.j41(166,"tr",50),n.EFF(167," The alpha value of the color (0.0-1.0). "),n.k0s()(),n.j41(168,"h4"),n.EFF(169,"Classes"),n.k0s(),n.j41(170,"p"),n.EFF(171,"The following classes are provided to help style components surrounding the color picker."),n.k0s(),n.j41(172,"ul")(173,"li")(174,"code"),n.EFF(175,"ux-color-picker-button-preview"),n.k0s(),n.EFF(176,": An inline color sample which can be added to the popup button. "),n.k0s(),n.j41(177,"li")(178,"code"),n.EFF(179,"ux-color-picker-dropdown"),n.k0s(),n.EFF(180,": Additional styling for a dropdown container."),n.k0s()(),n.j41(181,"h4"),n.EFF(182,"Example Code"),n.k0s(),n.j41(183,"ux-tabset",51)(184,"ux-tab",52),n.nrm(185,"uxd-snippet",53),n.k0s(),n.j41(186,"ux-tab",54),n.nrm(187,"uxd-snippet",53),n.k0s(),n.j41(188,"ux-tab",55),n.nrm(189,"uxd-snippet",53),n.k0s()()}if(2&f){const h=n.sdS(13);n.R7$(),n.Y8G("uxMenuTriggerFor",h),n.R7$(),n.xc7("background-color",r.selected.rgba),n.R7$(6),n.JRh(r.selected.hex),n.R7$(3),n.JRh(r.selected.rgba),n.R7$(3),n.Y8G("colors",r.colors),n.R50("selected",r.selected),n.Y8G("columns",r.columns)("buttonStyle",r.buttonStyle)("buttonSize",r.buttonSize)("showTooltips",r.showTooltips)("showInput",r.showInput),n.R7$(),n.Y8G("ngIf",r.showInput),n.R7$(9),n.R50("value",r.columns),n.Y8G("min",-1),n.R7$(2),n.R50("value",r.showInput),n.R7$(3),n.R50("value",r.showTooltips),n.R7$(7),n.R50("value",r.buttonStyle),n.R7$(2),n.R50("value",r.buttonStyle),n.R7$(6),n.R50("value",r.buttonSize),n.R7$(2),n.R50("value",r.buttonSize),n.R7$(2),n.R50("value",r.buttonSize),n.R7$(135),n.Y8G("minimal",!1),n.R7$(2),n.Y8G("content",r.snippets.compiled.appHtml),n.R7$(2),n.Y8G("content",r.snippets.compiled.appTs),n.R7$(2),n.Y8G("content",r.snippets.compiled.appCss)}},dependencies:[U.M,Y.k,R.P,L.h,w.bT,G.H,V.p,W.N,K.G,X.R,T.B0,$.Z,J.x,Q.h,Z.d,F.Wk,q.f,M.j],styles:[".demo-color-picker-container[_ngcontent-%COMP%]{margin-bottom:370px}.btn-container.demo-color-picker-close[_ngcontent-%COMP%]{margin:0 8px 8px}.btn-container.demo-color-picker-close[_ngcontent-%COMP%] > button[_ngcontent-%COMP%]{width:100%}"]})}};A=(0,z.Cg)([(0,H.zo)("ComponentsColorPickerComponent")],A);const tn=[A],sn=[{path:"**",component:N.i,data:{category:I.a.resolveCategoryData(I.E.Components,"Color")}}];let an=(()=>{class S{constructor(f,r){r.registerResolver(f,tn)}static{this.\u0275fac=function(r){return new(r||S)(n.KVO(n.OM3),n.KVO(I.a))}}static{this.\u0275mod=n.$C({type:S})}static{this.\u0275inj=n.G2t({imports:[d.h6p,d.q4,d.T8H,d.YG7,w.MD,j.f,x.YN,d.opy,d.EkW,d.Mk0,d.KoZ,F.iI.forChild(sn),d.w9h]})}}return S})()},28775:C=>{C.exports={snippet:'<span class="token keyword">import</span> <span class="token punctuation">{</span> Component<span class="token punctuation">,</span> ViewChild <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@angular/core\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> ColorPickerColor<span class="token punctuation">,</span> ColorService<span class="token punctuation">,</span> MenuTriggerDirective <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@ux-aspects/ux-aspects\'</span><span class="token punctuation">;</span>\n\n@<span class="token function">Component</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token literal-property property">selector</span><span class="token operator">:</span> <span class="token string">\'app-root\'</span><span class="token punctuation">,</span>\n  <span class="token literal-property property">templateUrl</span><span class="token operator">:</span> <span class="token string">\'app.component.html\'</span><span class="token punctuation">,</span>\n  <span class="token literal-property property">styleUrls</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">\'app.component.css\'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">AppComponent</span> <span class="token punctuation">{</span>\n  @<span class="token function">ViewChild</span><span class="token punctuation">(</span>MenuTriggerDirective<span class="token punctuation">)</span> menuTrigger<span class="token operator">?</span><span class="token operator">:</span> MenuTriggerDirective<span class="token punctuation">;</span>\n\n  <span class="token literal-property property">colors</span><span class="token operator">:</span> ColorPickerColor<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n  <span class="token literal-property property">selected</span><span class="token operator">:</span> ColorPickerColor<span class="token punctuation">;</span>\n  columns <span class="token operator">=</span> <span class="token number">4</span><span class="token punctuation">;</span>\n  buttonStyle <span class="token operator">=</span> <span class="token string">\'circle\'</span><span class="token punctuation">;</span>\n  buttonSize <span class="token operator">=</span> <span class="token string">\'md\'</span><span class="token punctuation">;</span>\n  showTooltips <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\n  showInput <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">private</span> readonly _colorNames <span class="token operator">=</span> <span class="token punctuation">[</span>\n    <span class="token punctuation">[</span>\n      <span class="token string">\'Primary\'</span><span class="token punctuation">,</span>\n      <span class="token string">\'Accent\'</span><span class="token punctuation">,</span>\n      <span class="token string">\'Secondary\'</span><span class="token punctuation">,</span>\n      <span class="token string">\'Alternate1\'</span><span class="token punctuation">,</span>\n      <span class="token string">\'Alternate2\'</span><span class="token punctuation">,</span>\n      <span class="token string">\'Alternate3\'</span><span class="token punctuation">,</span>\n      <span class="token string">\'Vibrant1\'</span><span class="token punctuation">,</span>\n      <span class="token string">\'Vibrant2\'</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n    <span class="token punctuation">[</span><span class="token string">\'Grey1\'</span><span class="token punctuation">,</span> <span class="token string">\'Grey2\'</span><span class="token punctuation">,</span> <span class="token string">\'Grey3\'</span><span class="token punctuation">,</span> <span class="token string">\'Grey4\'</span><span class="token punctuation">,</span> <span class="token string">\'Grey5\'</span><span class="token punctuation">,</span> <span class="token string">\'Grey6\'</span><span class="token punctuation">,</span> <span class="token string">\'Grey7\'</span><span class="token punctuation">,</span> <span class="token string">\'Grey8\'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">colorService</span><span class="token operator">:</span> ColorService</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span>colors <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>_colorNames<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">row</span> <span class="token operator">=></span>\n      row<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">colorName</span> <span class="token operator">=></span> <span class="token keyword">new</span> <span class="token class-name">ColorPickerColor</span><span class="token punctuation">(</span>colorName<span class="token punctuation">,</span> colorService<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>colorName<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span>selected <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>colors<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span>menuTrigger<span class="token operator">?.</span><span class="token function">closeMenu</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token function">onColorPickerSelectedChange</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>showInput<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n',example:"import { Component, ViewChild } from '@angular/core';\nimport { ColorPickerColor, ColorService, MenuTriggerDirective } from '@ux-aspects/ux-aspects';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: 'app.component.html',\n  styleUrls: ['app.component.css'],\n})\nexport class AppComponent {\n  @ViewChild(MenuTriggerDirective) menuTrigger?: MenuTriggerDirective;\n\n  colors: ColorPickerColor[][];\n  selected: ColorPickerColor;\n  columns = 4;\n  buttonStyle = 'circle';\n  buttonSize = 'md';\n  showTooltips = false;\n  showInput = false;\n\n  private readonly _colorNames = [\n    [\n      'Primary',\n      'Accent',\n      'Secondary',\n      'Alternate1',\n      'Alternate2',\n      'Alternate3',\n      'Vibrant1',\n      'Vibrant2',\n    ],\n    ['Grey1', 'Grey2', 'Grey3', 'Grey4', 'Grey5', 'Grey6', 'Grey7', 'Grey8'],\n  ];\n\n  constructor(colorService: ColorService) {\n    this.colors = this._colorNames.map(row =>\n      row.map(colorName => new ColorPickerColor(colorName, colorService.resolve(colorName)))\n    );\n    this.selected = this.colors[0][0];\n  }\n\n  close(): void {\n    this.menuTrigger?.closeMenu();\n  }\n\n  onColorPickerSelectedChange(): void {\n    if (!this.showInput) {\n      this.close();\n    }\n  }\n}\n"}},38052:(C,O,u)=>{"use strict";function j(s,t,a,e){var c,p=arguments.length,o=p<3?t:null===e?e=Object.getOwnPropertyDescriptor(t,a):e;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(s,t,a,e);else for(var i=s.length-1;i>=0;i--)(c=s[i])&&(o=(p<3?c(o):p>3?c(t,a,o):c(t,a))||o);return p>3&&o&&Object.defineProperty(t,a,o),o}u.d(O,{Cg:()=>j}),"function"==typeof SuppressedError&&SuppressedError},54175:C=>{C.exports={snippet:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>demo-color-picker-container<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span>\n    <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span>\n    <span class="token attr-name">aria-label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Select a color<span class="token punctuation">"</span></span>\n    <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>btn button-secondary dropdown-toggle<span class="token punctuation">"</span></span>\n    <span class="token attr-name">[uxMenuTriggerFor]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>colorPickerDropdown<span class="token punctuation">"</span></span>\n  <span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>ux-color-picker-button-preview<span class="token punctuation">"</span></span> <span class="token attr-name">[style.background-color]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>selected.rgba<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n      <span class="token entity named-entity" title="&nbsp;">&amp;nbsp;</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ux-icon</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>chevron-down<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ux-icon</span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>\n\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>m-l-lg<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n    Selected: <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>code</span><span class="token punctuation">></span></span>{{selected.hex}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>code</span><span class="token punctuation">></span></span> <span class="token entity named-entity" title="&mdash;">&amp;mdash;</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>code</span><span class="token punctuation">></span></span>{{selected.rgba}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>code</span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ux-menu</span> <span class="token attr-name">#colorPickerDropdown</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>color-picker-dropdown<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ux-color-picker</span>\n    <span class="token attr-name">[colors]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>colors<span class="token punctuation">"</span></span>\n    <span class="token attr-name">[(selected)]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>selected<span class="token punctuation">"</span></span>\n    <span class="token attr-name">(selectedChange)</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>onColorPickerSelectedChange()<span class="token punctuation">"</span></span>\n    <span class="token attr-name">[columns]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>columns<span class="token punctuation">"</span></span>\n    <span class="token attr-name">[buttonStyle]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>buttonStyle<span class="token punctuation">"</span></span>\n    <span class="token attr-name">[buttonSize]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>buttonSize<span class="token punctuation">"</span></span>\n    <span class="token attr-name">[showTooltips]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>showTooltips<span class="token punctuation">"</span></span>\n    <span class="token attr-name">[showInput]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>showInput<span class="token punctuation">"</span></span>\n    <span class="token attr-name">(inputSubmit)</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>close()<span class="token punctuation">"</span></span>\n    <span class="token attr-name">uxMenuInitialFocus</span>\n  <span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ux-color-picker</span><span class="token punctuation">></span></span>\n\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">*ngIf</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>showInput<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>btn-container demo-color-picker-close<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>btn button-primary<span class="token punctuation">"</span></span> <span class="token attr-name">(click)</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>close()<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Accept<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ux-menu</span><span class="token punctuation">></span></span>\n',example:'<div class="demo-color-picker-container">\n  <button\n    type="button"\n    aria-label="Select a color"\n    class="btn button-secondary dropdown-toggle"\n    [uxMenuTriggerFor]="colorPickerDropdown"\n  >\n    <span class="ux-color-picker-button-preview" [style.background-color]="selected.rgba">\n      &nbsp;\n    </span>\n    <ux-icon name="chevron-down"></ux-icon>\n  </button>\n\n  <span class="m-l-lg">\n    Selected: <code>{{selected.hex}}</code> &mdash; <code>{{selected.rgba}}</code>\n  </span>\n</div>\n\n<ux-menu #colorPickerDropdown id="color-picker-dropdown">\n  <ux-color-picker\n    [colors]="colors"\n    [(selected)]="selected"\n    (selectedChange)="onColorPickerSelectedChange()"\n    [columns]="columns"\n    [buttonStyle]="buttonStyle"\n    [buttonSize]="buttonSize"\n    [showTooltips]="showTooltips"\n    [showInput]="showInput"\n    (inputSubmit)="close()"\n    uxMenuInitialFocus\n  ></ux-color-picker>\n\n  <div *ngIf="showInput" class="btn-container demo-color-picker-close">\n    <button type="button" class="btn button-primary" (click)="close()">Accept</button>\n  </div>\n</ux-menu>\n'}},80756:(C,O,u)=>{var w={"./app.css":4629,"./app.html":54175,"./app.ts":28775,"docs/app/pages/components/components-sections/color/color-picker/snippets/app.css":4629,"docs/app/pages/components/components-sections/color/color-picker/snippets/app.html":54175,"docs/app/pages/components/components-sections/color/color-picker/snippets/app.ts":28775};function x(d){var j=F(d);return u(j)}function F(d){if(!u.o(w,d)){var j=new Error("Cannot find module '"+d+"'");throw j.code="MODULE_NOT_FOUND",j}return w[d]}x.keys=function(){return Object.keys(w)},x.resolve=F,C.exports=x,x.id=80756}}]);
(window.webpackJsonp=window.webpackJsonp||[]).push([[42],{GQbq:function(n,a,s){var t={"./app.css":"YcI1","./app.html":"pZgt","./app.ts":"uGiJ","./data.ts":"MgHq"};function p(n){var a=o(n);return s(a)}function o(n){if(!s.o(t,n)){var a=new Error("Cannot find module '"+n+"'");throw a.code="MODULE_NOT_FOUND",a}return t[n]}p.keys=function(){return Object.keys(t)},p.resolve=o,n.exports=p,p.id="GQbq"},MgHq:function(n,a){n.exports={snippet:'<span class="token keyword">import</span> <span class="token punctuation">{</span> Injectable <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@angular/core\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token string">\'chance\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> chance <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Chance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n@<span class="token function">Injectable</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">TimelineChartService</span> <span class="token punctuation">{</span>\n\n    <span class="token keyword">private</span> _dataset<span class="token operator">:</span> Chart<span class="token punctuation">.</span>ChartPoint<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n    <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">const</span> date <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token number">2014</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> idx <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> idx <span class="token operator">&lt;</span> <span class="token number">63</span><span class="token punctuation">;</span> idx<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n\n            <span class="token keyword">let</span> value<span class="token operator">:</span> number<span class="token punctuation">;</span>\n\n            <span class="token keyword">if</span> <span class="token punctuation">(</span>date<span class="token punctuation">.</span><span class="token function">getFullYear</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token number">2014</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                value <span class="token operator">=</span> chance<span class="token punctuation">.</span><span class="token function">integer</span><span class="token punctuation">(</span><span class="token punctuation">{</span> min<span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span> max<span class="token operator">:</span> <span class="token number">100</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token punctuation">}</span>\n\n            <span class="token keyword">if</span> <span class="token punctuation">(</span>date<span class="token punctuation">.</span><span class="token function">getFullYear</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token number">2015</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                value <span class="token operator">=</span> chance<span class="token punctuation">.</span><span class="token function">integer</span><span class="token punctuation">(</span><span class="token punctuation">{</span> min<span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span> max<span class="token operator">:</span> <span class="token number">150</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token punctuation">}</span>\n\n            <span class="token keyword">if</span> <span class="token punctuation">(</span>date<span class="token punctuation">.</span><span class="token function">getFullYear</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token number">2016</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                value <span class="token operator">=</span> chance<span class="token punctuation">.</span><span class="token function">integer</span><span class="token punctuation">(</span><span class="token punctuation">{</span> min<span class="token operator">:</span> <span class="token number">50</span><span class="token punctuation">,</span> max<span class="token operator">:</span> <span class="token number">300</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token punctuation">}</span>\n\n            <span class="token keyword">if</span> <span class="token punctuation">(</span>date<span class="token punctuation">.</span><span class="token function">getFullYear</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token number">2017</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                value <span class="token operator">=</span> chance<span class="token punctuation">.</span><span class="token function">integer</span><span class="token punctuation">(</span><span class="token punctuation">{</span> min<span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span> max<span class="token operator">:</span> <span class="token number">400</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token punctuation">}</span>\n\n            <span class="token keyword">if</span> <span class="token punctuation">(</span>date<span class="token punctuation">.</span><span class="token function">getFullYear</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token number">2018</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                value <span class="token operator">=</span> chance<span class="token punctuation">.</span><span class="token function">integer</span><span class="token punctuation">(</span><span class="token punctuation">{</span> min<span class="token operator">:</span> <span class="token number">450</span><span class="token punctuation">,</span> max<span class="token operator">:</span> <span class="token number">800</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token punctuation">}</span>\n\n            <span class="token keyword">if</span> <span class="token punctuation">(</span>date<span class="token punctuation">.</span><span class="token function">getFullYear</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token number">2019</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                value <span class="token operator">=</span> chance<span class="token punctuation">.</span><span class="token function">integer</span><span class="token punctuation">(</span><span class="token punctuation">{</span> min<span class="token operator">:</span> <span class="token number">250</span><span class="token punctuation">,</span> max<span class="token operator">:</span> <span class="token number">600</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token punctuation">}</span>\n\n            <span class="token keyword">this</span><span class="token punctuation">.</span>_dataset<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span> x<span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span>date<span class="token punctuation">)</span><span class="token punctuation">,</span> y<span class="token operator">:</span> value <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            date<span class="token punctuation">.</span><span class="token function">setMonth</span><span class="token punctuation">(</span>date<span class="token punctuation">.</span><span class="token function">getMonth</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token function">getDataset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> Chart<span class="token punctuation">.</span>ChartPoint<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token operator">...</span><span class="token keyword">this</span><span class="token punctuation">.</span>_dataset<span class="token punctuation">]</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n<span class="token punctuation">}</span>',example:"import { Injectable } from '@angular/core';\nimport 'chance';\n\nconst chance = new Chance();\n\n@Injectable()\nexport class TimelineChartService {\n\n    private _dataset: Chart.ChartPoint[] = [];\n\n    constructor() {\n        const date = new Date(2014, 1, 0);\n\n        for (let idx = 0; idx < 63; idx++) {\n\n            let value: number;\n\n            if (date.getFullYear() === 2014) {\n                value = chance.integer({ min: 10, max: 100 });\n            }\n\n            if (date.getFullYear() === 2015) {\n                value = chance.integer({ min: 10, max: 150 });\n            }\n\n            if (date.getFullYear() === 2016) {\n                value = chance.integer({ min: 50, max: 300 });\n            }\n\n            if (date.getFullYear() === 2017) {\n                value = chance.integer({ min: 100, max: 400 });\n            }\n\n            if (date.getFullYear() === 2018) {\n                value = chance.integer({ min: 450, max: 800 });\n            }\n\n            if (date.getFullYear() === 2019) {\n                value = chance.integer({ min: 250, max: 600 });\n            }\n\n            this._dataset.push({ x: new Date(date), y: value });\n            date.setMonth(date.getMonth() + 1);\n        }\n    }\n\n    getDataset(): Chart.ChartPoint[] {\n        return [...this._dataset];\n    }\n\n}"}},YcI1:function(n,a){n.exports={snippet:'<span class="token selector">.main-chart</span> <span class="token punctuation">{</span>\n    <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>\n    <span class="token property">max-height</span><span class="token punctuation">:</span> 250px<span class="token punctuation">;</span>\n    <span class="token property">margin-bottom</span><span class="token punctuation">:</span> 32px<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.timeline-chart</span> <span class="token punctuation">{</span>\n    <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>\n    <span class="token property">max-height</span><span class="token punctuation">:</span> 75px<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>',example:".main-chart {\n    position: relative;\n    max-height: 250px;\n    margin-bottom: 32px;\n}\n\n.timeline-chart {\n    position: relative;\n    max-height: 75px;\n}"}},gSwD:function(n,a,s){"use strict";s.r(a),s.d(a,"ChartsTimelineChartModule",(function(){return N}));var t,p=s("tyNb"),o=s("7Q8i"),e=s("KLty"),c=s("XtaT"),l=s("T/2f"),u=s("YZ8U"),i=s("AVdU"),r=s("yHOM"),k=s("nmfD"),m=s("fXoL"),d=function(n,a){var s="function"==typeof Symbol&&n[Symbol.iterator];if(!s)return n;var t,p,o=s.call(n),e=[];try{for(;(void 0===a||a-- >0)&&!(t=o.next()).done;)e.push(t.value)}catch(c){p={error:c}}finally{try{t&&!t.done&&(s=o.return)&&s.call(o)}finally{if(p)throw p.error}}return e},h=new k.Chance,b=function(){function n(){this._dataset=[];for(var n=new Date(2014,1,0),a=0;a<63;a++){var s=void 0;2014===n.getFullYear()&&(s=h.integer({min:10,max:100})),2015===n.getFullYear()&&(s=h.integer({min:10,max:150})),2016===n.getFullYear()&&(s=h.integer({min:50,max:300})),2017===n.getFullYear()&&(s=h.integer({min:100,max:400})),2018===n.getFullYear()&&(s=h.integer({min:450,max:800})),2019===n.getFullYear()&&(s=h.integer({min:250,max:600})),this._dataset.push({x:new Date(n),y:s}),n.setMonth(n.getMonth()+1)}}return n.prototype.getDataset=function(){return function(){for(var n=[],a=0;a<arguments.length;a++)n=n.concat(d(arguments[a]));return n}(this._dataset)},n.\u0275prov=m.Lb({token:n,factory:n.\u0275fac=function(a){return new(a||n)}}),n}(),g=s("+gXg"),y=s("2RDK"),f=s("COk8"),C=(t=function(n,a){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,a){n.__proto__=a}||function(n,a){for(var s in a)Object.prototype.hasOwnProperty.call(a,s)&&(n[s]=a[s])})(n,a)},function(n,a){function s(){this.constructor=n}t(n,a),n.prototype=null===a?Object.create(a):(s.prototype=a.prototype,new s)}),x=function(n,a){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(n,a)},v={year:"numeric",month:"long",day:"numeric"},w=[function(n){function a(a,t){var p=n.call(this,s("GQbq"))||this;return p._dataService=a,p._colorService=t,p.lineChartData=p._dataService.getDataset(),p.lineChartOptions={responsive:!0,maintainAspectRatio:!1,animation:{duration:0},elements:{line:{tension:0}},scales:{xAxes:[{ticks:{fontSize:12},type:"time",gridLines:{display:!1},time:{unit:"month"}}],yAxes:[{ticks:{beginAtZero:!0,max:1e3,stepSize:250,padding:8,fontSize:12},gridLines:{tickMarkLength:8}}]}},p.lineChartColors=[{backgroundColor:p._colorService.getColor("alternate3").setAlpha(.8).toRgba(),borderColor:"transparent",pointRadius:0,pointHitRadius:0,borderWidth:1}],p.timelineChartData=p._dataService.getDataset(),p.timelineChartOptions={responsive:!0,maintainAspectRatio:!1,animation:{duration:0},elements:{line:{tension:0}},scales:{xAxes:[{type:"time",gridLines:{display:!1},time:{unit:"month",stepSize:6},ticks:{fontSize:12}}],yAxes:[{display:!1}]},timeline:{handles:{tooltip:{label:function(){var n=p.lineChartData;return{rangeLower:n[0].x.toLocaleDateString([],v),rangeUpper:n[n.length-1].x.toLocaleDateString([],v)}}}},selectionColor:p._colorService.getColor("alternate3").setAlpha(.15).toRgba(),onChange:function(n,a){p.lineChartData=p._dataService.getDataset().filter((function(s){return s.x.getTime()>=n.getTime()&&s.x.getTime()<=a.getTime()}))},range:{lower:new Date(2017,6,15),upper:p.lineChartData[p.lineChartData.length-1].x,minimum:864e7,maximum:1105956e5,tooltip:{label:function(){var n=p.lineChartData;return n[0].x.toLocaleDateString([],v)+" - "+n[n.length-1].x.toLocaleDateString([],v)}}}}},p.playground={files:{"app.component.ts":p.snippets.raw.appTs,"app.component.html":p.snippets.raw.appHtml,"app.component.css":p.snippets.raw.appCss,"timeline-chart.service.ts":p.snippets.raw.dataTs},modules:[{library:"chart.js"},{imports:["ChartsModule"],library:"ng2-charts"},{imports:["ColorServiceModule","TimelineChartModule"],library:"@ux-aspects/ux-aspects"}]},p}return C(a,n),a.\u0275fac=function(n){return new(n||a)(m.Pb(b),m.Pb(o.v))},a.\u0275cmp=m.Jb({type:a,selectors:[["uxd-charts-timeline-chart"]],features:[m.yb([b]),m.wb],decls:130,vars:15,consts:[[1,"main-chart"],["baseChart","","height","250","chartType","line",3,"data","options","colors","legend"],[1,"timeline-chart"],["baseChart","","height","75","chartType","line",3,"data","options","colors","legend"],["tableTitle","Timeline Options"],["uxd-api-property","","name","backgroundColor","type","string"],["uxd-api-property","","name","selectionColor","type","string"],["uxd-api-property","","name","range","type","object"],["uxd-api-property","","name","onChange","type","(min: Date, max: Date) => void"],["uxd-api-property","","name","keyboard","type","object"],["uxd-api-property","","name","handles","type","object"],["tableTitle","Range Options"],["uxd-api-property","","name","lower","type","Date",3,"required"],["uxd-api-property","","name","upper","type","Date",3,"required"],["uxd-api-property","","name","minimum","type","number","defaultValue","0"],["uxd-api-property","","name","maximum","type","number","defaultValue","Infinity"],["uxd-api-property","","name","tooltip","type","object"],["tableTitle","Handles Options"],["uxd-api-property","","name","foregroundColor","type","string"],["uxd-api-property","","name","focusIndicatorColor","type","string"],["tableTitle","Keyboard Options"],["uxd-api-property","","name","step","type","number","defaultValue","30 days"],[3,"minimal"],["heading","HTML"],[3,"content"],["heading","TypeScript"],["heading","CSS"],["heading","Service"]],template:function(n,a){1&n&&(m.Vb(0,"div",0),m.Nc(1,"\n    "),m.Vb(2,"canvas",1),m.Nc(3,"\n    "),m.Ub(),m.Nc(4,"\n"),m.Ub(),m.Nc(5,"\n\n"),m.Vb(6,"div",2),m.Nc(7,"\n    "),m.Vb(8,"canvas",3),m.Nc(9,"\n    "),m.Ub(),m.Nc(10,"\n"),m.Ub(),m.Nc(11,"\n\n"),m.Qb(12,"hr"),m.Nc(13,"\n\n"),m.Vb(14,"p"),m.Nc(15,"\n    Timeline Charts can be added using the "),m.Vb(16,"code"),m.Nc(17,"ng2-charts"),m.Ub(),m.Nc(18," library. The "),m.Vb(19,"code"),m.Nc(20,"chart.js"),m.Ub(),m.Nc(21," library needs to be imported and the "),m.Vb(22,"code"),m.Nc(23,"ChartsModule"),m.Ub(),m.Nc(24,"\n    needs to be added to the appropriate "),m.Vb(25,"code"),m.Nc(26,"NgModule"),m.Ub(),m.Nc(27,".\n"),m.Ub(),m.Nc(28,"\n"),m.Vb(29,"p"),m.Nc(30,"\n    To add Timeline functionality the "),m.Vb(31,"code"),m.Nc(32,"TimelineChartModule"),m.Ub(),m.Nc(33," should be imported from the "),m.Vb(34,"code"),m.Nc(35,"@ux-aspects/ux-aspects"),m.Ub(),m.Nc(36," library.\n"),m.Ub(),m.Nc(37,"\n\n"),m.Vb(38,"p"),m.Nc(39,"The a "),m.Vb(40,"code"),m.Nc(41,"timeline"),m.Ub(),m.Nc(42," object should be added to the chart options to configure the chart:"),m.Ub(),m.Nc(43,"\n\n"),m.Vb(44,"uxd-api-properties",4),m.Nc(45,"\n    "),m.Vb(46,"tr",5),m.Nc(47,"\n      Specify a background color for the chart area.\n    "),m.Ub(),m.Nc(48,"\n    "),m.Vb(49,"tr",6),m.Nc(50,"\n        Specify a color for the selected region.\n    "),m.Ub(),m.Nc(51,"\n    "),m.Vb(52,"tr",7),m.Nc(53,"\n        Specify the selected range and range limits.\n    "),m.Ub(),m.Nc(54,"\n    "),m.Vb(55,"tr",8),m.Nc(56,"\n        Specify a callback that will be triggered when the selected range changes.\n    "),m.Ub(),m.Nc(57,"\n    "),m.Vb(58,"tr",9),m.Nc(59,"\n        Specify options related to keyboard accessibility.\n    "),m.Ub(),m.Nc(60,"\n    "),m.Vb(61,"tr",10),m.Nc(62,"\n        Specify the appearance of the drag handles.\n    "),m.Ub(),m.Nc(63,"\n"),m.Ub(),m.Nc(64,"\n\n"),m.Vb(65,"uxd-api-properties",11),m.Nc(66,"\n    "),m.Vb(67,"tr",12),m.Nc(68,"\n        Specify the lower boundary of the selection.\n    "),m.Ub(),m.Nc(69,"\n    "),m.Vb(70,"tr",13),m.Nc(71,"\n        Specify the upper boundary of the selection.\n    "),m.Ub(),m.Nc(72,"\n    "),m.Vb(73,"tr",14),m.Nc(74,"\n        Specify the minimum allowed range in milliseconds.\n    "),m.Ub(),m.Nc(75,"\n    "),m.Vb(76,"tr",15),m.Nc(77,"\n        Specify the maximum allowed range in milliseconds.\n    "),m.Ub(),m.Nc(78,"\n    "),m.Vb(79,"tr",16),m.Nc(80,"\n        Specify the text to return in the tooltip. Use label() to return a string.\n    "),m.Ub(),m.Nc(81,"\n"),m.Ub(),m.Nc(82,"\n\n"),m.Vb(83,"uxd-api-properties",17),m.Nc(84,"\n    "),m.Vb(85,"tr",5),m.Nc(86,"\n        Specify the handle background color.\n    "),m.Ub(),m.Nc(87,"\n    "),m.Vb(88,"tr",18),m.Nc(89,"\n        Specify the handle foreground color.\n    "),m.Ub(),m.Nc(90,"\n    "),m.Vb(91,"tr",19),m.Nc(92,"\n        Specify the handle focus indicator color.\n    "),m.Ub(),m.Nc(93,"\n    "),m.Vb(94,"tr",16),m.Nc(95,"\n        Specify the text to return in the tooltip. Use label() to return an object with rangeLower and rangeUpper as the text to be displayed for the lower and upper handles respectively.\n    "),m.Ub(),m.Nc(96,"\n"),m.Ub(),m.Nc(97,"\n\n"),m.Vb(98,"uxd-api-properties",20),m.Nc(99,"\n    "),m.Vb(100,"tr",21),m.Nc(101,"\n        Specify how much a handle should move (in milliseconds) when an arrow key is pressed.\n    "),m.Ub(),m.Nc(102,"\n"),m.Ub(),m.Nc(103,"\n\n"),m.Vb(104,"p"),m.Nc(105,"The following code can be used to create the example above:"),m.Ub(),m.Nc(106,"\n\n"),m.Vb(107,"ux-tabset",22),m.Nc(108,"\n    "),m.Vb(109,"ux-tab",23),m.Nc(110,"\n        "),m.Qb(111,"uxd-snippet",24),m.Nc(112,"\n    "),m.Ub(),m.Nc(113,"\n\n    "),m.Vb(114,"ux-tab",25),m.Nc(115,"\n        "),m.Qb(116,"uxd-snippet",24),m.Nc(117,"\n    "),m.Ub(),m.Nc(118,"\n\n    "),m.Vb(119,"ux-tab",26),m.Nc(120,"\n        "),m.Qb(121,"uxd-snippet",24),m.Nc(122,"\n    "),m.Ub(),m.Nc(123,"\n\n    "),m.Vb(124,"ux-tab",27),m.Nc(125,"\n        "),m.Qb(126,"uxd-snippet",24),m.Nc(127,"\n    "),m.Ub(),m.Nc(128,"\n"),m.Ub(),m.Nc(129,"\n")),2&n&&(m.zb(2),m.nc("data",a.lineChartData)("options",a.lineChartOptions)("colors",a.lineChartColors)("legend",!1),m.zb(6),m.nc("data",a.timelineChartData)("options",a.timelineChartOptions)("colors",a.lineChartColors)("legend",!1),m.zb(59),m.nc("required",!0),m.zb(3),m.nc("required",!0),m.zb(37),m.nc("minimal",!1),m.zb(4),m.nc("content",a.snippets.compiled.appHtml),m.zb(5),m.nc("content",a.snippets.compiled.appTs),m.zb(5),m.nc("content",a.snippets.compiled.appCss),m.zb(5),m.nc("content",a.snippets.compiled.dataTs))},directives:[e.a,g.a,y.a,o.Md,o.Hd,f.a],styles:[".main-chart[_ngcontent-%COMP%]{position:relative;max-height:250px;margin-bottom:32px}.timeline-chart[_ngcontent-%COMP%]{position:relative;max-height:75px}"]}),a=function(n,a,s,t){var p,o=arguments.length,e=o<3?a:null===t?t=Object.getOwnPropertyDescriptor(a,s):t;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)e=Reflect.decorate(n,a,s,t);else for(var c=n.length-1;c>=0;c--)(p=n[c])&&(e=(o<3?p(e):o>3?p(a,s,e):p(a,s))||e);return o>3&&e&&Object.defineProperty(a,s,e),e}([Object(r.a)("ChartsTimelineChartComponent"),x("design:paramtypes",[b,o.v])],a)}(i.a)],D=[{path:"**",component:l.a,data:{category:u.b.resolveCategoryData(u.a.Charts,"Timeline Chart")}}],N=function(){function n(n,a){a.registerResolver(n,w)}return n.\u0275mod=m.Nb({type:n}),n.\u0275inj=m.Mb({factory:function(a){return new(a||n)(m.Zb(m.j),m.Zb(u.b))},imports:[[e.b,o.w,c.a,p.i.forChild(D),o.Nd,o.Sd]]}),n}()},pZgt:function(n,a){n.exports={snippet:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>main-chart<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>canvas</span> <span class="token attr-name">baseChart</span>\n            <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>250<span class="token punctuation">"</span></span>\n            <span class="token attr-name">[data]</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>lineChartData<span class="token punctuation">"</span></span>\n            <span class="token attr-name">[options]</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>lineChartOptions<span class="token punctuation">"</span></span>\n            <span class="token attr-name">[colors]</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>lineChartColors<span class="token punctuation">"</span></span>\n            <span class="token attr-name">[legend]</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>false<span class="token punctuation">"</span></span>\n            <span class="token attr-name">chartType</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>line<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>canvas</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>timeline-chart<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>canvas</span> <span class="token attr-name">baseChart</span>\n            <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>75<span class="token punctuation">"</span></span>\n            <span class="token attr-name">[data]</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>timelineChartData<span class="token punctuation">"</span></span>\n            <span class="token attr-name">[options]</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>timelineChartOptions<span class="token punctuation">"</span></span>\n            <span class="token attr-name">[colors]</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>lineChartColors<span class="token punctuation">"</span></span>\n            <span class="token attr-name">[legend]</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>false<span class="token punctuation">"</span></span>\n            <span class="token attr-name">chartType</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>line<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>canvas</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>',example:'<div class="main-chart">\n    <canvas baseChart\n            height="250"\n            [data]="lineChartData"\n            [options]="lineChartOptions"\n            [colors]="lineChartColors"\n            [legend]="false"\n            chartType="line">\n    </canvas>\n</div>\n\n<div class="timeline-chart">\n    <canvas baseChart\n            height="75"\n            [data]="timelineChartData"\n            [options]="timelineChartOptions"\n            [colors]="lineChartColors"\n            [legend]="false"\n            chartType="line">\n    </canvas>\n</div>'}},uGiJ:function(n,a){n.exports={snippet:'<span class="token keyword">import</span> <span class="token punctuation">{</span> Component <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@angular/core\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> ColorService<span class="token punctuation">,</span> TimelineChartOptions <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@ux-aspects/ux-aspects\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> TimelineChartService <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'./timeline-chart.service\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> <span class="token constant">DATE_LOCALE_OPTIONS</span> <span class="token operator">=</span> <span class="token punctuation">{</span>\n    year<span class="token operator">:</span> <span class="token string">\'numeric\'</span><span class="token punctuation">,</span>\n    month<span class="token operator">:</span> <span class="token string">\'long\'</span><span class="token punctuation">,</span>\n    day<span class="token operator">:</span> <span class="token string">\'numeric\'</span>\n<span class="token punctuation">}</span> <span class="token keyword">as</span> <span class="token keyword">const</span><span class="token punctuation">;</span>\n\n@<span class="token function">Component</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    selector<span class="token operator">:</span> <span class="token string">\'app\'</span><span class="token punctuation">,</span>\n    templateUrl<span class="token operator">:</span> <span class="token string">\'./app.component.html\'</span><span class="token punctuation">,</span>\n    styleUrls<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">\'./app.component.css\'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n    providers<span class="token operator">:</span> <span class="token punctuation">[</span>TimelineChartService<span class="token punctuation">]</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">AppComponent</span> <span class="token punctuation">{</span>\n\n    lineChartData<span class="token operator">:</span> Chart<span class="token punctuation">.</span>ChartPoint<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>_dataService<span class="token punctuation">.</span><span class="token function">getDataset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    lineChartOptions<span class="token operator">:</span> Chart<span class="token punctuation">.</span>ChartOptions <span class="token operator">&amp;</span> Chart<span class="token punctuation">.</span>ChartLineOptions <span class="token operator">=</span> <span class="token punctuation">{</span>\n        responsive<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n        maintainAspectRatio<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n        animation<span class="token operator">:</span> <span class="token punctuation">{</span>\n            duration<span class="token operator">:</span> <span class="token number">0</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        elements<span class="token operator">:</span> <span class="token punctuation">{</span>\n            line<span class="token operator">:</span> <span class="token punctuation">{</span>\n                tension<span class="token operator">:</span> <span class="token number">0</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        scales<span class="token operator">:</span> <span class="token punctuation">{</span>\n            xAxes<span class="token operator">:</span> <span class="token punctuation">[</span>\n                <span class="token punctuation">{</span>\n                    ticks<span class="token operator">:</span> <span class="token punctuation">{</span>\n                        fontSize<span class="token operator">:</span> <span class="token number">12</span><span class="token punctuation">,</span>\n                    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n                    type<span class="token operator">:</span> <span class="token string">\'time\'</span><span class="token punctuation">,</span>\n                    gridLines<span class="token operator">:</span> <span class="token punctuation">{</span>\n                        display<span class="token operator">:</span> <span class="token boolean">false</span>\n                    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n                    time<span class="token operator">:</span> <span class="token punctuation">{</span>\n                        unit<span class="token operator">:</span> <span class="token string">\'month\'</span>\n                    <span class="token punctuation">}</span>\n                <span class="token punctuation">}</span>\n            <span class="token punctuation">]</span><span class="token punctuation">,</span>\n            yAxes<span class="token operator">:</span> <span class="token punctuation">[</span>\n                <span class="token punctuation">{</span>\n                    ticks<span class="token operator">:</span> <span class="token punctuation">{</span>\n                        beginAtZero<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n                        max<span class="token operator">:</span> <span class="token number">1000</span><span class="token punctuation">,</span>\n                        stepSize<span class="token operator">:</span> <span class="token number">250</span><span class="token punctuation">,</span>\n                        padding<span class="token operator">:</span> <span class="token number">8</span><span class="token punctuation">,</span>\n                        fontSize<span class="token operator">:</span> <span class="token number">12</span><span class="token punctuation">,</span>\n                    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n                    gridLines<span class="token operator">:</span> <span class="token punctuation">{</span>\n                        tickMarkLength<span class="token operator">:</span> <span class="token number">8</span>\n                    <span class="token punctuation">}</span>\n                <span class="token punctuation">}</span>\n            <span class="token punctuation">]</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n    lineChartColors<span class="token operator">:</span> Array<span class="token operator">&lt;</span>Chart<span class="token punctuation">.</span>ChartDataSets<span class="token operator">></span> <span class="token operator">=</span> <span class="token punctuation">[</span>\n        <span class="token punctuation">{</span>\n            backgroundColor<span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>_colorService<span class="token punctuation">.</span><span class="token function">getColor</span><span class="token punctuation">(</span><span class="token string">\'alternate3\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setAlpha</span><span class="token punctuation">(</span><span class="token number">0.8</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toRgba</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n            borderColor<span class="token operator">:</span> <span class="token string">\'transparent\'</span><span class="token punctuation">,</span>\n            pointRadius<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>\n            pointHitRadius<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>\n            borderWidth<span class="token operator">:</span> <span class="token number">1</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n    timelineChartData<span class="token operator">:</span> Chart<span class="token punctuation">.</span>ChartPoint<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>_dataService<span class="token punctuation">.</span><span class="token function">getDataset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    timelineChartOptions<span class="token operator">:</span> Chart<span class="token punctuation">.</span>ChartOptions <span class="token operator">&amp;</span> Chart<span class="token punctuation">.</span>ChartLineOptions <span class="token operator">&amp;</span> TimelineChartOptions <span class="token operator">=</span> <span class="token punctuation">{</span>\n        responsive<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n        maintainAspectRatio<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n        animation<span class="token operator">:</span> <span class="token punctuation">{</span>\n            duration<span class="token operator">:</span> <span class="token number">0</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        elements<span class="token operator">:</span> <span class="token punctuation">{</span>\n            line<span class="token operator">:</span> <span class="token punctuation">{</span>\n                tension<span class="token operator">:</span> <span class="token number">0</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        scales<span class="token operator">:</span> <span class="token punctuation">{</span>\n            xAxes<span class="token operator">:</span> <span class="token punctuation">[</span>\n                <span class="token punctuation">{</span>\n                    type<span class="token operator">:</span> <span class="token string">\'time\'</span><span class="token punctuation">,</span>\n                    gridLines<span class="token operator">:</span> <span class="token punctuation">{</span>\n                        display<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n                    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n                    time<span class="token operator">:</span> <span class="token punctuation">{</span>\n                        unit<span class="token operator">:</span> <span class="token string">\'month\'</span><span class="token punctuation">,</span>\n                        stepSize<span class="token operator">:</span> <span class="token number">6</span>\n                    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n                    ticks<span class="token operator">:</span> <span class="token punctuation">{</span>\n                        fontSize<span class="token operator">:</span> <span class="token number">12</span><span class="token punctuation">,</span>\n                    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n                <span class="token punctuation">}</span>\n            <span class="token punctuation">]</span><span class="token punctuation">,</span>\n            yAxes<span class="token operator">:</span> <span class="token punctuation">[</span>\n                <span class="token punctuation">{</span>\n                    display<span class="token operator">:</span> <span class="token boolean">false</span>\n                <span class="token punctuation">}</span>\n            <span class="token punctuation">]</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        timeline<span class="token operator">:</span> <span class="token punctuation">{</span>\n            handles<span class="token operator">:</span> <span class="token punctuation">{</span>\n                tooltip<span class="token operator">:</span> <span class="token punctuation">{</span>\n                    <span class="token function-variable function">label</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n                        <span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>lineChartData<span class="token punctuation">;</span>\n                        <span class="token keyword">const</span> rangeLower <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token operator">&lt;</span>Date<span class="token operator">></span>data<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>x<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toLocaleDateString</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token constant">DATE_LOCALE_OPTIONS</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n                        <span class="token keyword">const</span> rangeUpper <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token operator">&lt;</span>Date<span class="token operator">></span>data<span class="token punctuation">[</span>data<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>x<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toLocaleDateString</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token constant">DATE_LOCALE_OPTIONS</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n                        <span class="token keyword">return</span> <span class="token punctuation">{</span>rangeLower<span class="token punctuation">,</span> rangeUpper<span class="token punctuation">}</span><span class="token punctuation">;</span>\n                    <span class="token punctuation">}</span>\n                <span class="token punctuation">}</span> <span class="token keyword">as</span> any\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            selectionColor<span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>_colorService<span class="token punctuation">.</span><span class="token function">getColor</span><span class="token punctuation">(</span><span class="token string">\'alternate3\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setAlpha</span><span class="token punctuation">(</span><span class="token number">0.15</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toRgba</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n            <span class="token function-variable function">onChange</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">min<span class="token operator">:</span> Date<span class="token punctuation">,</span> max<span class="token operator">:</span> Date</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n                <span class="token keyword">this</span><span class="token punctuation">.</span>lineChartData <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>_dataService<span class="token punctuation">.</span><span class="token function">getDataset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token parameter">point</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n                    <span class="token keyword">return</span> <span class="token punctuation">(</span>point<span class="token punctuation">.</span>x <span class="token keyword">as</span> Date<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">>=</span> min<span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span>\n                        <span class="token punctuation">(</span>point<span class="token punctuation">.</span>x <span class="token keyword">as</span> Date<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;=</span> max<span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            range<span class="token operator">:</span> <span class="token punctuation">{</span>\n                lower<span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token number">2017</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n                upper<span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>lineChartData<span class="token punctuation">[</span><span class="token keyword">this</span><span class="token punctuation">.</span>lineChartData<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>x <span class="token keyword">as</span> Date<span class="token punctuation">,</span>\n                minimum<span class="token operator">:</span> <span class="token number">8_640_000_000</span><span class="token punctuation">,</span> <span class="token comment">// 100 days</span>\n                maximum<span class="token operator">:</span> <span class="token number">110_595_600_000</span><span class="token punctuation">,</span> <span class="token comment">// 3.5 years</span>\n                tooltip<span class="token operator">:</span> <span class="token punctuation">{</span>\n                    <span class="token function-variable function">label</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n                        <span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>lineChartData<span class="token punctuation">;</span>\n                        <span class="token keyword">const</span> rangeLower <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token operator">&lt;</span>Date<span class="token operator">></span>data<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>x<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toLocaleDateString</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token constant">DATE_LOCALE_OPTIONS</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n                        <span class="token keyword">const</span> rangeUpper <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token operator">&lt;</span>Date<span class="token operator">></span>data<span class="token punctuation">[</span>data<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>x<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toLocaleDateString</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token constant">DATE_LOCALE_OPTIONS</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n                        <span class="token keyword">const</span> label <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>rangeLower<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> - </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>rangeUpper<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span>\n\n                        <span class="token keyword">return</span> label<span class="token punctuation">;</span>\n                    <span class="token punctuation">}</span>\n                <span class="token punctuation">}</span> <span class="token keyword">as</span> any\n            <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n    <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter"><span class="token keyword">private</span> _dataService<span class="token operator">:</span> TimelineChartService<span class="token punctuation">,</span> <span class="token keyword">private</span> _colorService<span class="token operator">:</span> ColorService</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n',example:"import { Component } from '@angular/core';\nimport { ColorService, TimelineChartOptions } from '@ux-aspects/ux-aspects';\nimport { TimelineChartService } from './timeline-chart.service';\n\nconst DATE_LOCALE_OPTIONS = {\n    year: 'numeric',\n    month: 'long',\n    day: 'numeric'\n} as const;\n\n@Component({\n    selector: 'app',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.css'],\n    providers: [TimelineChartService]\n})\nexport class AppComponent {\n\n    lineChartData: Chart.ChartPoint[] = this._dataService.getDataset();\n\n    lineChartOptions: Chart.ChartOptions & Chart.ChartLineOptions = {\n        responsive: true,\n        maintainAspectRatio: false,\n        animation: {\n            duration: 0\n        },\n        elements: {\n            line: {\n                tension: 0\n            },\n        },\n        scales: {\n            xAxes: [\n                {\n                    ticks: {\n                        fontSize: 12,\n                    },\n                    type: 'time',\n                    gridLines: {\n                        display: false\n                    },\n                    time: {\n                        unit: 'month'\n                    }\n                }\n            ],\n            yAxes: [\n                {\n                    ticks: {\n                        beginAtZero: true,\n                        max: 1000,\n                        stepSize: 250,\n                        padding: 8,\n                        fontSize: 12,\n                    },\n                    gridLines: {\n                        tickMarkLength: 8\n                    }\n                }\n            ]\n        }\n    };\n\n    lineChartColors: Array<Chart.ChartDataSets> = [\n        {\n            backgroundColor: this._colorService.getColor('alternate3').setAlpha(0.8).toRgba(),\n            borderColor: 'transparent',\n            pointRadius: 0,\n            pointHitRadius: 0,\n            borderWidth: 1\n        }\n    ];\n\n    timelineChartData: Chart.ChartPoint[] = this._dataService.getDataset();\n\n    timelineChartOptions: Chart.ChartOptions & Chart.ChartLineOptions & TimelineChartOptions = {\n        responsive: true,\n        maintainAspectRatio: false,\n        animation: {\n            duration: 0\n        },\n        elements: {\n            line: {\n                tension: 0\n            },\n        },\n        scales: {\n            xAxes: [\n                {\n                    type: 'time',\n                    gridLines: {\n                        display: false,\n                    },\n                    time: {\n                        unit: 'month',\n                        stepSize: 6\n                    },\n                    ticks: {\n                        fontSize: 12,\n                    },\n                }\n            ],\n            yAxes: [\n                {\n                    display: false\n                }\n            ]\n        },\n        timeline: {\n            handles: {\n                tooltip: {\n                    label: () => {\n                        const data = this.lineChartData;\n                        const rangeLower = (<Date>data[0].x).toLocaleDateString([], DATE_LOCALE_OPTIONS);\n                        const rangeUpper = (<Date>data[data.length - 1].x).toLocaleDateString([], DATE_LOCALE_OPTIONS);\n                        return {rangeLower, rangeUpper};\n                    }\n                } as any\n            },\n            selectionColor: this._colorService.getColor('alternate3').setAlpha(0.15).toRgba(),\n            onChange: (min: Date, max: Date) => {\n                this.lineChartData = this._dataService.getDataset().filter(point => {\n                    return (point.x as Date).getTime() >= min.getTime() &&\n                        (point.x as Date).getTime() <= max.getTime();\n                });\n            },\n            range: {\n                lower: new Date(2017, 6, 15),\n                upper: this.lineChartData[this.lineChartData.length - 1].x as Date,\n                minimum: 8_640_000_000, // 100 days\n                maximum: 110_595_600_000, // 3.5 years\n                tooltip: {\n                    label: () => {\n                        const data = this.lineChartData;\n                        const rangeLower = (<Date>data[0].x).toLocaleDateString([], DATE_LOCALE_OPTIONS);\n                        const rangeUpper = (<Date>data[data.length - 1].x).toLocaleDateString([], DATE_LOCALE_OPTIONS);\n                        const label = `${rangeLower} - ${rangeUpper}`;\n\n                        return label;\n                    }\n                } as any\n            }\n        }\n    };\n\n    constructor(private _dataService: TimelineChartService, private _colorService: ColorService) { }\n}\n"}}}]);
(self.webpackChunk_ux_aspects_ux_aspects_docs=self.webpackChunk_ux_aspects_ux_aspects_docs||[]).push([[2304],{1915:function(n){n.exports={snippet:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>checkbox-container<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ux-checkbox</span> <span class="token attr-name">[(value)]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>checkModel.option1<span class="token punctuation">"</span></span> <span class="token attr-name">[disabled]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>disableCheck<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n        Option1\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ux-checkbox</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ux-checkbox</span> <span class="token attr-name">[(value)]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>checkModel.option2<span class="token punctuation">"</span></span> <span class="token attr-name">[indeterminateValue]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>indeterminateValue<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n        Option2\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ux-checkbox</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ux-checkbox</span> <span class="token attr-name">[(value)]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>checkModel.option3<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n        Option3\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ux-checkbox</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ux-checkbox</span> <span class="token attr-name">[(value)]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>checkModel.option4<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n        Onsectetur adipiscing elit. Inte adipiscing elit onsectetur adipiscing elit. Inte adipiscing elit\n        onsectetur adipiscing elit. Inte adipiscing elit onsectetur adipiscing elit. Inte adipiscing elit\n        onsectetur adipiscing elit. Inte adipiscing elit onsectetur adipiscing elit.\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ux-checkbox</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>m-t<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>code</span><span class="token punctuation">></span></span>checkModel.option1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>code</span><span class="token punctuation">></span></span> is <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>em</span><span class="token punctuation">></span></span>{{ checkModel.option1 }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>em</span><span class="token punctuation">></span></span>.\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>code</span><span class="token punctuation">></span></span>checkModel.option2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>code</span><span class="token punctuation">></span></span> is <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>em</span><span class="token punctuation">></span></span>{{ checkModel.option2 }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>em</span><span class="token punctuation">></span></span>.\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>code</span><span class="token punctuation">></span></span>checkModel.option3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>code</span><span class="token punctuation">></span></span> is <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>em</span><span class="token punctuation">></span></span>{{ checkModel.option3 }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>em</span><span class="token punctuation">></span></span>.\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>code</span><span class="token punctuation">></span></span>checkModel.option4<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>code</span><span class="token punctuation">></span></span> is <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>em</span><span class="token punctuation">></span></span>{{ checkModel.option4 }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>em</span><span class="token punctuation">></span></span>.\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>btn-container m-t<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>btn button-primary<span class="token punctuation">"</span></span> <span class="token attr-name">(click)</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>disableCheck = !disableCheck<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n        {{ disableCheck ? "Enable Option1" : "Disable Option1" }}\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>\n\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>btn button-secondary<span class="token punctuation">"</span></span> <span class="token attr-name">(click)</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>checkModel.option2 = indeterminateValue<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n        Set Option2 to indeterminate state\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n',example:'<div class="checkbox-container">\n    <ux-checkbox [(value)]="checkModel.option1" [disabled]="disableCheck">\n        Option1\n    </ux-checkbox>\n    <ux-checkbox [(value)]="checkModel.option2" [indeterminateValue]="indeterminateValue">\n        Option2\n    </ux-checkbox>\n    <ux-checkbox [(value)]="checkModel.option3">\n        Option3\n    </ux-checkbox>\n    <ux-checkbox [(value)]="checkModel.option4">\n        Onsectetur adipiscing elit. Inte adipiscing elit onsectetur adipiscing elit. Inte adipiscing elit\n        onsectetur adipiscing elit. Inte adipiscing elit onsectetur adipiscing elit. Inte adipiscing elit\n        onsectetur adipiscing elit. Inte adipiscing elit onsectetur adipiscing elit.\n    </ux-checkbox>\n</div>\n\n<p class="m-t">\n    <code>checkModel.option1</code> is <em>{{ checkModel.option1 }}</em>.\n    <code>checkModel.option2</code> is <em>{{ checkModel.option2 }}</em>.\n    <code>checkModel.option3</code> is <em>{{ checkModel.option3 }}</em>.\n    <code>checkModel.option4</code> is <em>{{ checkModel.option4 }}</em>.\n</p>\n\n<div class="btn-container m-t">\n    <button class="btn button-primary" (click)="disableCheck = !disableCheck">\n        {{ disableCheck ? "Enable Option1" : "Disable Option1" }}\n    </button>\n\n    <button class="btn button-secondary" (click)="checkModel.option2 = indeterminateValue">\n        Set Option2 to indeterminate state\n    </button>\n</div>\n'}},26622:function(n){n.exports={snippet:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>checkbox-container<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ux-checkbox</span> <span class="token attr-name">[(value)]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>checkModel.option1<span class="token punctuation">"</span></span> <span class="token attr-name">[disabled]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>disableCheck<span class="token punctuation">"</span></span> <span class="token attr-name">[simplified]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>simplified<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n        Option1\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ux-checkbox</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ux-checkbox</span>\n        <span class="token attr-name">[(value)]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>checkModel.option2<span class="token punctuation">"</span></span>\n        <span class="token attr-name">[indeterminateValue]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>indeterminateValue<span class="token punctuation">"</span></span>\n        <span class="token attr-name">[simplified]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>simplified<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n        Option2\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ux-checkbox</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ux-checkbox</span> <span class="token attr-name">[(value)]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>checkModel.option3<span class="token punctuation">"</span></span> <span class="token attr-name">[simplified]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>simplified<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n        Option3\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ux-checkbox</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ux-checkbox</span> <span class="token attr-name">[(value)]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>checkModel.option4<span class="token punctuation">"</span></span> <span class="token attr-name">[simplified]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>simplified<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n        Onsectetur adipiscing elit. Inte adipiscing elit onsectetur adipiscing elit. Inte adipiscing elit\n        onsectetur adipiscing elit. Inte adipiscing elit onsectetur adipiscing elit. Inte adipiscing elit\n        onsectetur adipiscing elit. Inte adipiscing elit onsectetur adipiscing elit.\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ux-checkbox</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>m-t<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>code</span><span class="token punctuation">></span></span>checkModel.option1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>code</span><span class="token punctuation">></span></span> is <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>em</span><span class="token punctuation">></span></span>{{ checkModel.option1 }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>em</span><span class="token punctuation">></span></span>.\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>code</span><span class="token punctuation">></span></span>checkModel.option2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>code</span><span class="token punctuation">></span></span> is <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>em</span><span class="token punctuation">></span></span>{{ checkModel.option2 }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>em</span><span class="token punctuation">></span></span>.\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>code</span><span class="token punctuation">></span></span>checkModel.option3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>code</span><span class="token punctuation">></span></span> is <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>em</span><span class="token punctuation">></span></span>{{ checkModel.option3 }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>em</span><span class="token punctuation">></span></span>.\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>code</span><span class="token punctuation">></span></span>checkModel.option4<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>code</span><span class="token punctuation">></span></span> is <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>em</span><span class="token punctuation">></span></span>{{ checkModel.option4 }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>em</span><span class="token punctuation">></span></span>.\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>btn-container m-t<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>btn button-primary<span class="token punctuation">"</span></span> <span class="token attr-name">(click)</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>disableCheck = !disableCheck<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n        {{ disableCheck ? "Enable Option1" : "Disable Option1" }}\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>\n\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>btn button-secondary<span class="token punctuation">"</span></span> <span class="token attr-name">(click)</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>checkModel.option2 = indeterminateValue<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n        Set Option2 to indeterminate state\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>\n\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>btn button-accent<span class="token punctuation">"</span></span> <span class="token attr-name">(click)</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>simplified = !simplified<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n        {{ simplified ? "Disable Simplified Style" : "Enable Simplified Style" }}\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n',example:'<div class="checkbox-container">\n    <ux-checkbox [(value)]="checkModel.option1" [disabled]="disableCheck" [simplified]="simplified">\n        Option1\n    </ux-checkbox>\n    <ux-checkbox\n        [(value)]="checkModel.option2"\n        [indeterminateValue]="indeterminateValue"\n        [simplified]="simplified">\n        Option2\n    </ux-checkbox>\n    <ux-checkbox [(value)]="checkModel.option3" [simplified]="simplified">\n        Option3\n    </ux-checkbox>\n    <ux-checkbox [(value)]="checkModel.option4" [simplified]="simplified">\n        Onsectetur adipiscing elit. Inte adipiscing elit onsectetur adipiscing elit. Inte adipiscing elit\n        onsectetur adipiscing elit. Inte adipiscing elit onsectetur adipiscing elit. Inte adipiscing elit\n        onsectetur adipiscing elit. Inte adipiscing elit onsectetur adipiscing elit.\n    </ux-checkbox>\n</div>\n\n<p class="m-t">\n    <code>checkModel.option1</code> is <em>{{ checkModel.option1 }}</em>.\n    <code>checkModel.option2</code> is <em>{{ checkModel.option2 }}</em>.\n    <code>checkModel.option3</code> is <em>{{ checkModel.option3 }}</em>.\n    <code>checkModel.option4</code> is <em>{{ checkModel.option4 }}</em>.\n</p>\n\n<div class="btn-container m-t">\n    <button class="btn button-primary" (click)="disableCheck = !disableCheck">\n        {{ disableCheck ? "Enable Option1" : "Disable Option1" }}\n    </button>\n\n    <button class="btn button-secondary" (click)="checkModel.option2 = indeterminateValue">\n        Set Option2 to indeterminate state\n    </button>\n\n    <button class="btn button-accent" (click)="simplified = !simplified">\n        {{ simplified ? "Disable Simplified Style" : "Enable Simplified Style" }}\n    </button>\n</div>\n'}},37971:function(n){n.exports={snippet:'<span class="token keyword">import</span> <span class="token punctuation">{</span> Component <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@angular/core\'</span><span class="token punctuation">;</span>\n\n@<span class="token function">Component</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    selector<span class="token operator">:</span> <span class="token string">\'app\'</span><span class="token punctuation">,</span>\n    templateUrl<span class="token operator">:</span> <span class="token string">\'./app.component.html\'</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">AppComponent</span> <span class="token punctuation">{</span>\n    checkModel <span class="token operator">=</span> <span class="token punctuation">{</span>\n        option1<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n        option2<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n        option3<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n        option4<span class="token operator">:</span> <span class="token boolean">false</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n    simplified <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\n    indeterminateValue <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>\n    disableCheck <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>',example:"import { Component } from '@angular/core';\n\n@Component({\n    selector: 'app',\n    templateUrl: './app.component.html'\n})\nexport class AppComponent {\n    checkModel = {\n        option1: true,\n        option2: false,\n        option3: false,\n        option4: false\n    };\n\n    simplified = false;\n    indeterminateValue = -1;\n    disableCheck = false;\n}"}},90770:function(n){n.exports={snippet:'<span class="token keyword">import</span> <span class="token punctuation">{</span> Component <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@angular/core\'</span><span class="token punctuation">;</span>\n\n@<span class="token function">Component</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    selector<span class="token operator">:</span> <span class="token string">\'app\'</span><span class="token punctuation">,</span>\n    templateUrl<span class="token operator">:</span> <span class="token string">\'./app.component.html\'</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">AppComponent</span> <span class="token punctuation">{</span>\n    checkModel <span class="token operator">=</span> <span class="token punctuation">{</span>\n        option1<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n        option2<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n        option3<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n        option4<span class="token operator">:</span> <span class="token boolean">false</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n    indeterminateValue <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>\n    disableCheck <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n',example:"import { Component } from '@angular/core';\n\n@Component({\n    selector: 'app',\n    templateUrl: './app.component.html'\n})\nexport class AppComponent {\n    checkModel = {\n        option1: true,\n        option2: false,\n        option3: false,\n        option4: false\n    };\n\n    indeterminateValue = -1;\n    disableCheck = false;\n}\n"}},80700:function(n){n.exports={snippet:'<span class="token selector">.expanding-textarea-demo</span> <span class="token punctuation">{</span>\n    <span class="token property">max-height</span><span class="token punctuation">:</span> 87px<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>',example:".expanding-textarea-demo {\n    max-height: 87px;\n}"}},88448:function(n){n.exports={snippet:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>row<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>col-md-6 col-xs-12<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>textarea</span> <span class="token attr-name">uxAutoGrow</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>form-control expanding-textarea-demo<span class="token punctuation">"</span></span>\n                  <span class="token attr-name">rows</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Enter text<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>textarea</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n',example:'<div class="row">\n    <div class="col-md-6 col-xs-12">\n        <textarea uxAutoGrow class="form-control expanding-textarea-demo"\n                  rows="1" placeholder="Enter text"></textarea>\n    </div>\n</div>\n'}},26917:function(n){n.exports={snippet:'<span class="token keyword">import</span> <span class="token punctuation">{</span> Component <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@angular/core\'</span><span class="token punctuation">;</span>\n\n@<span class="token function">Component</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    selector<span class="token operator">:</span> <span class="token string">\'app\'</span><span class="token punctuation">,</span>\n    templateUrl<span class="token operator">:</span> <span class="token string">\'./app.component.html\'</span><span class="token punctuation">,</span>\n    styleUrls<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">\'./app.component.css\'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">AppComponent</span> <span class="token punctuation">{</span>\n\n<span class="token punctuation">}</span>',example:"import { Component } from '@angular/core';\n\n@Component({\n    selector: 'app',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.css'],\n})\nexport class AppComponent {\n\n}"}},59721:function(n){n.exports={snippet:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">[formGroup]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>demoForm<span class="token punctuation">"</span></span> <span class="token attr-name">novalidate</span><span class="token punctuation">></span></span>\n\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>form-group row<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>col-sm-4<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">[uxFloatLabel]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>username<span class="token punctuation">"</span></span> <span class="token attr-name">mode</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>input<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>User Name<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">#username</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>username<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>form-control<span class="token punctuation">"</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>User Name<span class="token punctuation">"</span></span>\n                <span class="token attr-name">formControlName</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>username<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>form-group row<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>col-sm-4<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">[uxFloatLabel]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>location<span class="token punctuation">"</span></span> <span class="token attr-name">[value]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>locationValue<span class="token punctuation">"</span></span> <span class="token attr-name">mode</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>input<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Location<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>input-group<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">#location</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>location<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>form-control ux-float-input<span class="token punctuation">"</span></span>\n                    <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Location<span class="token punctuation">"</span></span> <span class="token attr-name">formControlName</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>location<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>input-group-btn<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>btn btn-icon button-primary<span class="token punctuation">"</span></span>\n                        <span class="token attr-name">(click)</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>locationValue = <span class="token punctuation">\'</span>Here<span class="token punctuation">\'</span><span class="token punctuation">"</span></span>\n                        <span class="token attr-name">aria-label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Current Location<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ux-icon</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>location<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ux-icon</span><span class="token punctuation">></span></span>\n                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span>',example:'<form [formGroup]="demoForm" novalidate>\n\n    <div class="form-group row">\n        <div class="col-sm-4">\n            <label [uxFloatLabel]="username" mode="input">User Name</label>\n            <input type="text" #username id="username" class="form-control" placeholder="User Name"\n                formControlName="username">\n        </div>\n    </div>\n\n    <div class="form-group row">\n        <div class="col-sm-4">\n            <label [uxFloatLabel]="location" [value]="locationValue" mode="input">Location</label>\n            <div class="input-group">\n                <input type="text" #location id="location" class="form-control ux-float-input"\n                    placeholder="Location" formControlName="location">\n                <div class="input-group-btn">\n                    <button type="button" class="btn btn-icon button-primary"\n                        (click)="locationValue = \'Here\'"\n                        aria-label="Current Location">\n                        <ux-icon name="location"></ux-icon>\n                    </button>\n                </div>\n            </div>\n        </div>\n    </div>\n\n</form>'}},39298:function(n){n.exports={snippet:'<span class="token keyword">import</span> <span class="token punctuation">{</span> Component <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@angular/core\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> FormGroup<span class="token punctuation">,</span> FormBuilder <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@angular/forms\'</span><span class="token punctuation">;</span>\n\n@<span class="token function">Component</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    selector<span class="token operator">:</span> <span class="token string">\'app\'</span><span class="token punctuation">,</span>\n    templateUrl<span class="token operator">:</span> <span class="token string">\'app.component.html\'</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">AppComponent</span> <span class="token punctuation">{</span>\n\n    demoForm<span class="token operator">:</span> FormGroup<span class="token punctuation">;</span>\n\n    <span class="token keyword">get</span> <span class="token function">locationValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> string <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>demoForm<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">\'location\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>value<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword">set</span> <span class="token function">locationValue</span><span class="token punctuation">(</span><span class="token parameter">value<span class="token operator">:</span> string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>demoForm<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">\'location\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setValue</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">formBuilder<span class="token operator">:</span> FormBuilder</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>demoForm <span class="token operator">=</span> formBuilder<span class="token punctuation">.</span><span class="token function">group</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n            <span class="token string">\'username\'</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">\'\'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n            <span class="token string">\'location\'</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">\'\'</span><span class="token punctuation">]</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>',example:"import { Component } from '@angular/core';\nimport { FormGroup, FormBuilder } from '@angular/forms';\n\n@Component({\n    selector: 'app',\n    templateUrl: 'app.component.html'\n})\nexport class AppComponent {\n\n    demoForm: FormGroup;\n\n    get locationValue(): string {\n        return this.demoForm.get('location').value;\n    }\n\n    set locationValue(value: string) {\n        this.demoForm.get('location').setValue(value);\n    }\n\n    constructor(formBuilder: FormBuilder) {\n        this.demoForm = formBuilder.group({\n            'username': [''],\n            'location': ['']\n        });\n    }\n}"}},16158:function(n){n.exports={snippet:'<span class="token selector">ux-input-dropdown</span> <span class="token punctuation">{</span>\n    <span class="token property">width</span><span class="token punctuation">:</span> 400px<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.radio-button-container</span> <span class="token punctuation">{</span>\n    <span class="token property">padding</span><span class="token punctuation">:</span> 16px 4px<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">ux-radio-button</span> <span class="token punctuation">{</span>\n    <span class="token property">padding</span><span class="token punctuation">:</span> 4px 12px<span class="token punctuation">;</span>\n    <span class="token property">margin-bottom</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n',example:"ux-input-dropdown {\n    width: 400px;\n}\n\n.radio-button-container {\n    padding: 16px 4px;\n}\n\nux-radio-button {\n    padding: 4px 12px;\n    margin-bottom: 0;\n}\n"}},15745:function(n){n.exports={snippet:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>row<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>col-md-5<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ux-input-dropdown</span>\n            <span class="token attr-name">[(selected)]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>selected<span class="token punctuation">"</span></span>\n            <span class="token attr-name">[dropdownOpen]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>dropdownOpen<span class="token punctuation">"</span></span>\n            <span class="token attr-name">[disabled]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>disabled<span class="token punctuation">"</span></span>\n            <span class="token attr-name">(dropdownOpenChange)</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>dropdownOpenChange($event)<span class="token punctuation">"</span></span>\n            <span class="token attr-name">[(filter)]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>filter<span class="token punctuation">"</span></span>\n            <span class="token attr-name">[allowNull]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>allowNull<span class="token punctuation">"</span></span>\n            <span class="token attr-name">[maxHeight]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>maxHeight<span class="token punctuation">"</span></span>\n            <span class="token attr-name">[placeholder]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>placeholder<span class="token punctuation">"</span></span>\n            <span class="token attr-name">aria-label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Filter input<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ng-template</span> <span class="token attr-name">#displayContent</span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b</span><span class="token punctuation">></span></span>Selection:<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b</span><span class="token punctuation">></span></span> {{ selected ? selected.name : \'(none)\' }}\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ng-template</span><span class="token punctuation">></span></span>\n\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>radio-button-container<span class="token punctuation">"</span></span>\n                 <span class="token attr-name">uxTabbableList</span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ux-radio-button</span>\n                    <span class="token attr-name">uxTabbableListItem</span>\n                    <span class="token attr-name">*ngFor</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>let option of filteredOptionList<span class="token punctuation">"</span></span>\n                    <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>group<span class="token punctuation">"</span></span>\n                    <span class="token attr-name">[(value)]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>selected<span class="token punctuation">"</span></span>\n                    <span class="token attr-name">[option]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>option<span class="token punctuation">"</span></span>\n                    <span class="token attr-name">(keydown.space)</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>selectOption($event, option)<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">[innerHTML]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>option.name | highlightSearch: filter<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ux-radio-button</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ux-input-dropdown</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n',example:'<div class="row">\n    <div class="col-md-5">\n\n        <ux-input-dropdown\n            [(selected)]="selected"\n            [dropdownOpen]="dropdownOpen"\n            [disabled]="disabled"\n            (dropdownOpenChange)="dropdownOpenChange($event)"\n            [(filter)]="filter"\n            [allowNull]="allowNull"\n            [maxHeight]="maxHeight"\n            [placeholder]="placeholder"\n            aria-label="Filter input">\n\n            <ng-template #displayContent>\n                <b>Selection:</b> {{ selected ? selected.name : \'(none)\' }}\n            </ng-template>\n\n            <div class="radio-button-container"\n                 uxTabbableList>\n                <ux-radio-button\n                    uxTabbableListItem\n                    *ngFor="let option of filteredOptionList"\n                    name="group"\n                    [(value)]="selected"\n                    [option]="option"\n                    (keydown.space)="selectOption($event, option)">\n                    <span [innerHTML]="option.name | highlightSearch: filter">\n                    </span>\n                </ux-radio-button>\n            </div>\n\n        </ux-input-dropdown>\n    </div>\n</div>\n'}},5552:function(n){n.exports={snippet:'<span class="token keyword">import</span> <span class="token punctuation">{</span> Component<span class="token punctuation">,</span> Pipe<span class="token punctuation">,</span> PipeTransform <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@angular/core\'</span><span class="token punctuation">;</span>\n\n\n@<span class="token function">Pipe</span><span class="token punctuation">(</span><span class="token punctuation">{</span> name<span class="token operator">:</span> <span class="token string">\'highlightSearch\'</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">HighlightSearch</span> <span class="token keyword">implements</span> <span class="token class-name">PipeTransform</span> <span class="token punctuation">{</span>\n    <span class="token function">transform</span><span class="token punctuation">(</span>text<span class="token operator">:</span> string<span class="token punctuation">,</span> filter<span class="token operator">:</span> string<span class="token punctuation">)</span><span class="token operator">:</span> string <span class="token punctuation">{</span>\n        <span class="token keyword">const</span> highlightIndex <span class="token operator">=</span> text<span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>filter<span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">return</span> <span class="token punctuation">(</span>highlightIndex <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">?</span>\n            text <span class="token operator">:</span>\n            text<span class="token punctuation">.</span><span class="token function">substr</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> highlightIndex<span class="token punctuation">)</span> <span class="token operator">+</span>\n            <span class="token string">\'&lt;b>\'</span> <span class="token operator">+</span> text<span class="token punctuation">.</span><span class="token function">substr</span><span class="token punctuation">(</span>highlightIndex<span class="token punctuation">,</span> filter<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">\'&lt;/b>\'</span> <span class="token operator">+</span>\n            text<span class="token punctuation">.</span><span class="token function">substr</span><span class="token punctuation">(</span>highlightIndex <span class="token operator">+</span> filter<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n\n@<span class="token function">Component</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    selector<span class="token operator">:</span> <span class="token string">\'app\'</span><span class="token punctuation">,</span>\n    templateUrl<span class="token operator">:</span> <span class="token string">\'./app.component.html\'</span><span class="token punctuation">,</span>\n    styleUrls<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">\'./app.component.css\'</span><span class="token punctuation">]</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">AppComponent</span> <span class="token punctuation">{</span>\n\n    selected<span class="token operator">:</span> RadioOption<span class="token punctuation">;</span>\n    optionList<span class="token operator">:</span> ReadonlyArray<span class="token operator">&lt;</span>RadioOption<span class="token operator">></span> <span class="token operator">=</span> <span class="token punctuation">[</span>\n        <span class="token punctuation">{</span> name<span class="token operator">:</span> <span class="token string">\'One\'</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> name<span class="token operator">:</span> <span class="token string">\'Two\'</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> name<span class="token operator">:</span> <span class="token string">\'Three\'</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> name<span class="token operator">:</span> <span class="token string">\'Four\'</span> <span class="token punctuation">}</span>\n    <span class="token punctuation">]</span><span class="token punctuation">;</span>\n    filteredOptionList<span class="token operator">:</span> ReadonlyArray<span class="token operator">&lt;</span>RadioOption<span class="token operator">></span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>optionList<span class="token punctuation">;</span>\n    <span class="token keyword">private</span> _filter<span class="token operator">:</span> string <span class="token operator">=</span> <span class="token string">\'\'</span><span class="token punctuation">;</span>\n    <span class="token keyword">get</span> <span class="token function">filter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> string <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>_filter<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword">set</span> <span class="token function">filter</span><span class="token punctuation">(</span><span class="token parameter">value<span class="token operator">:</span> string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>_filter <span class="token operator">=</span> value<span class="token punctuation">;</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>filteredOptionList <span class="token operator">=</span>\n            value <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>value<span class="token punctuation">.</span>length <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">?</span>\n                <span class="token keyword">this</span><span class="token punctuation">.</span>optionList<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token parameter">option</span> <span class="token operator">=></span> <span class="token punctuation">(</span>option<span class="token punctuation">.</span>name<span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>value<span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">></span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">:</span>\n                <span class="token keyword">this</span><span class="token punctuation">.</span>optionList<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n    allowNull<span class="token operator">:</span> boolean <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\n    disabled<span class="token operator">:</span> boolean <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\n    dropdownOpen<span class="token operator">:</span> boolean <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\n    maxHeight<span class="token operator">:</span> string <span class="token operator">=</span> <span class="token string">\'400px\'</span><span class="token punctuation">;</span>\n    placeholder<span class="token operator">:</span> string <span class="token operator">=</span> <span class="token string">\'Type to search...\'</span><span class="token punctuation">;</span>\n\n    <span class="token function">selectOption</span><span class="token punctuation">(</span>event<span class="token operator">:</span> KeyboardEvent<span class="token punctuation">,</span> option<span class="token operator">:</span> RadioOption<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>selected <span class="token operator">=</span> option<span class="token punctuation">;</span>\n        event<span class="token punctuation">.</span><span class="token function">preventDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token function">dropdownOpenChange</span><span class="token punctuation">(</span>value<span class="token operator">:</span> boolean<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>dropdownOpen <span class="token operator">=</span> value<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">export</span> <span class="token keyword">interface</span> <span class="token class-name">RadioOption</span> <span class="token punctuation">{</span>\n    name<span class="token operator">:</span> string<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n',example:"import { Component, Pipe, PipeTransform } from '@angular/core';\n\n\n@Pipe({ name: 'highlightSearch' })\nexport class HighlightSearch implements PipeTransform {\n    transform(text: string, filter: string): string {\n        const highlightIndex = text.toLowerCase().indexOf(filter.toLowerCase());\n        return (highlightIndex < 0) ?\n            text :\n            text.substr(0, highlightIndex) +\n            '<b>' + text.substr(highlightIndex, filter.length) + '</b>' +\n            text.substr(highlightIndex + filter.length);\n    }\n}\n\n\n@Component({\n    selector: 'app',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n    selected: RadioOption;\n    optionList: ReadonlyArray<RadioOption> = [\n        { name: 'One' }, { name: 'Two' }, { name: 'Three' }, { name: 'Four' }\n    ];\n    filteredOptionList: ReadonlyArray<RadioOption> = this.optionList;\n    private _filter: string = '';\n    get filter(): string {\n        return this._filter;\n    }\n\n    set filter(value: string) {\n        this._filter = value;\n        this.filteredOptionList =\n            value && (value.length > 0) ?\n                this.optionList.filter(option => (option.name.toLowerCase().indexOf(value.toLowerCase()) > -1)) :\n                this.optionList;\n    }\n    allowNull: boolean = false;\n    disabled: boolean = false;\n    dropdownOpen: boolean = false;\n    maxHeight: string = '400px';\n    placeholder: string = 'Type to search...';\n\n    selectOption(event: KeyboardEvent, option: RadioOption): void {\n        this.selected = option;\n        event.preventDefault();\n    }\n\n    dropdownOpenChange(value: boolean): void {\n        this.dropdownOpen = value;\n    }\n}\n\nexport interface RadioOption {\n    name: string;\n}\n"}},30558:function(n){n.exports={snippet:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>input-group<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>form-control<span class="token punctuation">"</span></span>\n        <span class="token attr-name">mask</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>000-00-000-0000-0<span class="token punctuation">"</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>ISBN 1<span class="token punctuation">"</span></span>\n        <span class="token attr-name">aria-label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>ISBN 1 13 digits only<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>help-block<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>000-00-000-0000-0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>input-group<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>form-control<span class="token punctuation">"</span></span>\n        <span class="token attr-name">mask</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>(000) 000-0000<span class="token punctuation">"</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Telephone Number<span class="token punctuation">"</span></span>\n        <span class="token attr-name">aria-label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Telephone number 10 digits only<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>help-block<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>(000) 000-0000<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>input-group<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>form-control<span class="token punctuation">"</span></span>\n        <span class="token attr-name">mask</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>09/09/9999<span class="token punctuation">"</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Date<span class="token punctuation">"</span></span>\n        <span class="token attr-name">aria-label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Date<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>help-block<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>09/09/9999<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>input-group<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>form-control<span class="token punctuation">"</span></span>\n        <span class="token attr-name">mask</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>099.099.099.099<span class="token punctuation">"</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>IP Address<span class="token punctuation">"</span></span>\n        <span class="token attr-name">aria-label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>IP address<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>help-block<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>099.099.099.099<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n',example:'<div class="input-group">\n    <input type="text" class="form-control"\n        mask="000-00-000-0000-0" placeholder="ISBN 1"\n        aria-label="ISBN 1 13 digits only">\n\n    <span class="help-block">000-00-000-0000-0</span>\n</div>\n\n<div class="input-group">\n    <input type="text" class="form-control"\n        mask="(000) 000-0000" placeholder="Telephone Number"\n        aria-label="Telephone number 10 digits only">\n\n    <span class="help-block">(000) 000-0000</span>\n</div>\n\n<div class="input-group">\n    <input type="text" class="form-control"\n        mask="09/09/9999" placeholder="Date"\n        aria-label="Date">\n\n    <span class="help-block">09/09/9999</span>\n</div>\n\n<div class="input-group">\n    <input type="text" class="form-control"\n        mask="099.099.099.099" placeholder="IP Address"\n        aria-label="IP address">\n\n    <span class="help-block">099.099.099.099</span>\n</div>\n'}},25179:function(n){n.exports={snippet:'<span class="token keyword">import</span> <span class="token punctuation">{</span> Component <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@angular/core\'</span><span class="token punctuation">;</span>\n\n@<span class="token function">Component</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    selector<span class="token operator">:</span> <span class="token string">\'app\'</span><span class="token punctuation">,</span>\n    templateUrl<span class="token operator">:</span> <span class="token string">\'./app.component.html\'</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">AppComponent</span> <span class="token punctuation">{</span>\n\n<span class="token punctuation">}</span>',example:"import { Component } from '@angular/core';\n\n@Component({\n    selector: 'app',\n    templateUrl: './app.component.html'\n})\nexport class AppComponent {\n\n}"}},10410:function(n){n.exports={snippet:'<span class="token selector">.number-picker-component-demo</span> <span class="token punctuation">{</span>\n    <span class="token property">width</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>',example:".number-picker-component-demo {\n    width: 100px;\n}"}},82617:function(n){n.exports={snippet:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>Selecting an integer:<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ux-number-picker</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>number-picker-component-demo<span class="token punctuation">"</span></span> <span class="token attr-name">min</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>-10<span class="token punctuation">"</span></span> <span class="token attr-name">max</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>10<span class="token punctuation">"</span></span>\n                  <span class="token attr-name">[formControl]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>form.controls[<span class="token punctuation">\'</span>integer<span class="token punctuation">\'</span>]<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ux-number-picker</span><span class="token punctuation">></span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text-error<span class="token punctuation">"</span></span> <span class="token attr-name">*ngIf</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>form.controls[<span class="token punctuation">\'</span>integer<span class="token punctuation">\'</span>].invalid<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ux-icon</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>alert<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ux-icon</span><span class="token punctuation">></span></span> Enter a number between -10 and 10.\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>m-t-md<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Selecting a decimal:<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ux-number-picker</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>number-picker-component-demo<span class="token punctuation">"</span></span> <span class="token attr-name">step</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0.5<span class="token punctuation">"</span></span> <span class="token attr-name">min</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span> <span class="token attr-name">max</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>10<span class="token punctuation">"</span></span>\n                  <span class="token attr-name">[formControl]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>form.controls[<span class="token punctuation">\'</span>decimal<span class="token punctuation">\'</span>]<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ux-number-picker</span><span class="token punctuation">></span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text-error<span class="token punctuation">"</span></span> <span class="token attr-name">*ngIf</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>form.controls[<span class="token punctuation">\'</span>decimal<span class="token punctuation">\'</span>].invalid<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ux-icon</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>alert<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ux-icon</span><span class="token punctuation">></span></span> Enter a number between 0 and 10.\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>',example:'<p>Selecting an integer:</p>\n\n<ux-number-picker class="number-picker-component-demo" min="-10" max="10"\n                  [formControl]="form.controls[\'integer\']"></ux-number-picker>\n\n<p class="text-error" *ngIf="form.controls[\'integer\'].invalid">\n    <ux-icon name="alert"></ux-icon> Enter a number between -10 and 10.\n</p>\n\n<p class="m-t-md">Selecting a decimal:</p>\n\n<ux-number-picker class="number-picker-component-demo" step="0.5" min="0" max="10"\n                  [formControl]="form.controls[\'decimal\']"></ux-number-picker>\n\n<p class="text-error" *ngIf="form.controls[\'decimal\'].invalid">\n    <ux-icon name="alert"></ux-icon> Enter a number between 0 and 10.\n</p>'}},10040:function(n){n.exports={snippet:'<span class="token keyword">import</span> <span class="token punctuation">{</span> Component <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@angular/core\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> FormBuilder<span class="token punctuation">,</span> Validators<span class="token punctuation">,</span> FormGroup <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@angular/forms\'</span><span class="token punctuation">;</span>\n\n@<span class="token function">Component</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    selector<span class="token operator">:</span> <span class="token string">\'app\'</span><span class="token punctuation">,</span>\n    templateUrl<span class="token operator">:</span> <span class="token string">\'./app.component.html\'</span><span class="token punctuation">,</span>\n    styleUrls<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">\'./app.component.css\'</span><span class="token punctuation">]</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">AppComponent</span> <span class="token punctuation">{</span>\n    form<span class="token operator">:</span> FormGroup<span class="token punctuation">;</span>\n    \n    <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">formBuilder<span class="token operator">:</span> FormBuilder</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n\n        <span class="token keyword">this</span><span class="token punctuation">.</span>form <span class="token operator">=</span> formBuilder<span class="token punctuation">.</span><span class="token function">group</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n            integer<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> Validators<span class="token punctuation">.</span><span class="token function">compose</span><span class="token punctuation">(</span><span class="token punctuation">[</span>Validators<span class="token punctuation">.</span>required<span class="token punctuation">,</span> Validators<span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">,</span> Validators<span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n            decimal<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> Validators<span class="token punctuation">.</span><span class="token function">compose</span><span class="token punctuation">(</span><span class="token punctuation">[</span>Validators<span class="token punctuation">.</span>required<span class="token punctuation">,</span> Validators<span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span> Validators<span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">]</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>',example:"import { Component } from '@angular/core';\nimport { FormBuilder, Validators, FormGroup } from '@angular/forms';\n\n@Component({\n    selector: 'app',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n    form: FormGroup;\n    \n    constructor(formBuilder: FormBuilder) {\n\n        this.form = formBuilder.group({\n            integer: [0, Validators.compose([Validators.required, Validators.min(-10), Validators.max(10)])],\n            decimal: [0, Validators.compose([Validators.required, Validators.min(0), Validators.max(10)])]\n        });\n    }\n}"}},66063:function(n){n.exports={snippet:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">uxRadioButtonGroup</span> <span class="token attr-name">[(value)]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>selected<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>radio-button-container<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ux-radio-button</span>\n        <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>group<span class="token punctuation">"</span></span>\n        <span class="token attr-name">[option]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>radioOptions.option1<span class="token punctuation">"</span></span>\n        <span class="token attr-name">[disabled]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>disabled<span class="token punctuation">"</span></span>\n        <span class="token attr-name">[simplified]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>simplified<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n        Option1\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ux-radio-button</span><span class="token punctuation">></span></span>\n\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ux-radio-button</span>\n        <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>group<span class="token punctuation">"</span></span>\n        <span class="token attr-name">[option]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>radioOptions.option2<span class="token punctuation">"</span></span>\n        <span class="token attr-name">[simplified]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>simplified<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n        Option2\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ux-radio-button</span><span class="token punctuation">></span></span>\n\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ux-radio-button</span>\n        <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>group<span class="token punctuation">"</span></span>\n        <span class="token attr-name">[option]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>radioOptions.option3<span class="token punctuation">"</span></span>\n        <span class="token attr-name">[simplified]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>simplified<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n        Option3\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ux-radio-button</span><span class="token punctuation">></span></span>\n\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ux-radio-button</span>\n        <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>group<span class="token punctuation">"</span></span>\n        <span class="token attr-name">[option]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>radioOptions.option4<span class="token punctuation">"</span></span>\n        <span class="token attr-name">[simplified]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>simplified<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n        Option four onsectetur adipiscing elit. Inte adipiscing elit onsectetur\n        adipiscing elit. Inte adipiscing elit onsectetur\n        adipiscing elit. Inte adipiscing elit onsectetur adipiscing elit.\n        Inte adipiscing elit onsectetur adipiscing elit.\n        Inte adipiscing elit onsectetur adipiscing elit.\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ux-radio-button</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>m-t<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>code</span><span class="token punctuation">></span></span>radioModel<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>code</span><span class="token punctuation">></span></span> is <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>em</span><span class="token punctuation">></span></span>{{ selected }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>em</span><span class="token punctuation">></span></span>.\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>btn button-primary m-r-xs<span class="token punctuation">"</span></span> <span class="token attr-name">(click)</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>disabled = !disabled<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n        {{ disabled ? \'Click to enable Option1\' : \'Click to disable Option1\' }}\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>\n\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>btn button-accent<span class="token punctuation">"</span></span> <span class="token attr-name">(click)</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>simplified = !simplified<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n        {{ simplified ? \'Disable Simplified Style\' : \'Enable Simplified Style\' }}\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>',example:'<div uxRadioButtonGroup [(value)]="selected" class="radio-button-container">\n    <ux-radio-button\n        name="group"\n        [option]="radioOptions.option1"\n        [disabled]="disabled"\n        [simplified]="simplified">\n        Option1\n    </ux-radio-button>\n\n    <ux-radio-button\n        name="group"\n        [option]="radioOptions.option2"\n        [simplified]="simplified">\n        Option2\n    </ux-radio-button>\n\n    <ux-radio-button\n        name="group"\n        [option]="radioOptions.option3"\n        [simplified]="simplified">\n        Option3\n    </ux-radio-button>\n\n    <ux-radio-button\n        name="group"\n        [option]="radioOptions.option4"\n        [simplified]="simplified">\n        Option four onsectetur adipiscing elit. Inte adipiscing elit onsectetur\n        adipiscing elit. Inte adipiscing elit onsectetur\n        adipiscing elit. Inte adipiscing elit onsectetur adipiscing elit.\n        Inte adipiscing elit onsectetur adipiscing elit.\n        Inte adipiscing elit onsectetur adipiscing elit.\n    </ux-radio-button>\n</div>\n\n<p class="m-t">\n    <code>radioModel</code> is <em>{{ selected }}</em>.\n</p>\n\n<div>\n    <button class="btn button-primary m-r-xs" (click)="disabled = !disabled">\n        {{ disabled ? \'Click to enable Option1\' : \'Click to disable Option1\' }}\n    </button>\n\n    <button class="btn button-accent" (click)="simplified = !simplified">\n        {{ simplified ? \'Disable Simplified Style\' : \'Enable Simplified Style\' }}\n    </button>\n</div>'}},81122:function(n){n.exports={snippet:'<span class="token keyword">import</span> <span class="token punctuation">{</span> Component <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@angular/core\'</span><span class="token punctuation">;</span>\n\n@<span class="token function">Component</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    selector<span class="token operator">:</span> <span class="token string">\'app\'</span><span class="token punctuation">,</span>\n    templateUrl<span class="token operator">:</span> <span class="token string">\'./app.component.html\'</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">AppComponent</span> <span class="token punctuation">{</span>\n\n    selected <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">;</span>\n\n    radioOptions <span class="token operator">=</span> <span class="token punctuation">{</span>\n        option1<span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span>\n        option2<span class="token operator">:</span> <span class="token string">\'string\'</span><span class="token punctuation">,</span>\n        option3<span class="token operator">:</span> <span class="token punctuation">{</span>\n            test<span class="token operator">:</span> <span class="token number">1</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        option4<span class="token operator">:</span> <span class="token string">\'Wrap-Text\'</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n    disabled <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\n    simplified <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\n\n<span class="token punctuation">}</span>',example:"import { Component } from '@angular/core';\n\n@Component({\n    selector: 'app',\n    templateUrl: './app.component.html'\n})\nexport class AppComponent {\n\n    selected = 100;\n\n    radioOptions = {\n        option1: 100,\n        option2: 'string',\n        option3: {\n            test: 1\n        },\n        option4: 'Wrap-Text'\n    };\n\n    disabled = false;\n    simplified = false;\n\n}"}},80070:function(n){n.exports={snippet:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>container-fluid<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>row<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>col-md-12<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h4</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text-black p-t-md p-b-md<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Single Value Sliders<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h4</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>col-md-6 p-r-md p-b-md<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text-black p-b-md<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Button Handle - Custom Labels<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ux-slider</span> <span class="token attr-name">[value]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>slider1.value<span class="token punctuation">"</span></span> <span class="token attr-name">[options]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>slider1.options<span class="token punctuation">"</span></span> <span class="token attr-name">[disabled]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>disabled<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ux-slider</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>col-md-6 p-l-md p-b-md<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text-black p-b-md<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Line Handle - Callout on Drag<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ux-slider</span> <span class="token attr-name">[value]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>slider2.value<span class="token punctuation">"</span></span> <span class="token attr-name">[options]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>slider2.options<span class="token punctuation">"</span></span> <span class="token attr-name">[disabled]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>disabled<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ux-slider</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>hr</span><span class="token punctuation">></span></span>\n\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>row<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>col-md-6 p-r-md p-b-md<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text-black p-b-md<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Narrow - Track Styling - Snapping<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ux-slider</span> <span class="token attr-name">[value]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>slider3.value<span class="token punctuation">"</span></span> <span class="token attr-name">[options]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>slider3.options<span class="token punctuation">"</span></span> <span class="token attr-name">[disabled]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>disabled<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ux-slider</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>col-md-6 p-l-md p-b-md<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text-black p-b-md<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Narrow - Gradient Track Styling - Callout on Hover<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ux-slider</span> <span class="token attr-name">[value]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>slider4.value<span class="token punctuation">"</span></span> <span class="token attr-name">[options]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>slider4.options<span class="token punctuation">"</span></span> <span class="token attr-name">[disabled]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>disabled<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ux-slider</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>hr</span><span class="token punctuation">></span></span>\n\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>row<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>col-md-12<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h4</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text-black p-t-md p-b-md<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Range Value Sliders<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h4</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>col-md-6 p-r-md p-b-md<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text-black p-b-lg<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Range Track - Persistent Callout<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ux-slider</span> <span class="token attr-name">[value]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>slider5.value<span class="token punctuation">"</span></span> <span class="token attr-name">[options]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>slider5.options<span class="token punctuation">"</span></span> <span class="token attr-name">[disabled]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>disabled<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ux-slider</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>col-md-6 p-l-md p-b-md<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text-black p-b-lg<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Range Track Style - Custom Callout Styles<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ux-slider</span> <span class="token attr-name">[value]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>slider6.value<span class="token punctuation">"</span></span> <span class="token attr-name">[options]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>slider6.options<span class="token punctuation">"</span></span> <span class="token attr-name">[disabled]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>disabled<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ux-slider</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>hr</span><span class="token punctuation">></span></span>\n\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>row<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>col-md-12<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h4</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text-black p-t-md p-b-md<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Range Slider with Text Inputs<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h4</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>col-md-12<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ux-slider</span>\n                <span class="token attr-name">[value]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>slider7.value<span class="token punctuation">"</span></span>\n                <span class="token attr-name">(valueChange)</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>valueHasChanged($event)<span class="token punctuation">"</span></span>\n                <span class="token attr-name">[options]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>slider7.options<span class="token punctuation">"</span></span>\n                <span class="token attr-name">[disabled]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>disabled<span class="token punctuation">"</span></span>\n            <span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ux-slider</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>row m-t-sm p-t-xs<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>col-sm-2<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span>\n                <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span>\n                <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>form-control m-b<span class="token punctuation">"</span></span>\n                <span class="token attr-name">aria-label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Slider lower range value<span class="token punctuation">"</span></span>\n                <span class="token attr-name">[(ngModel)]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>lowerValue<span class="token punctuation">"</span></span>\n                <span class="token attr-name">[disabled]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>disabled<span class="token punctuation">"</span></span>\n                <span class="token attr-name">(blur)</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>updateValues()<span class="token punctuation">"</span></span>\n                <span class="token attr-name">(keyup.enter)</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>updateValues()<span class="token punctuation">"</span></span>\n            <span class="token punctuation">/></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>col-sm-offset-8 col-sm-2<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span>\n                <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span>\n                <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>form-control m-b<span class="token punctuation">"</span></span>\n                <span class="token attr-name">aria-label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Slider upper range value<span class="token punctuation">"</span></span>\n                <span class="token attr-name">[(ngModel)]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>upperValue<span class="token punctuation">"</span></span>\n                <span class="token attr-name">[disabled]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>disabled<span class="token punctuation">"</span></span>\n                <span class="token attr-name">(blur)</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>updateValues()<span class="token punctuation">"</span></span>\n                <span class="token attr-name">(keyup.enter)</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>updateValues()<span class="token punctuation">"</span></span>\n            <span class="token punctuation">/></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n',example:'<div class="container-fluid">\n    <div class="row">\n        <div class="col-md-12">\n            <h4 class="text-black p-t-md p-b-md">Single Value Sliders</h4>\n        </div>\n\n        <div class="col-md-6 p-r-md p-b-md">\n            <p class="text-black p-b-md">Button Handle - Custom Labels</p>\n            <ux-slider [value]="slider1.value" [options]="slider1.options" [disabled]="disabled"></ux-slider>\n        </div>\n        <div class="col-md-6 p-l-md p-b-md">\n            <p class="text-black p-b-md">Line Handle - Callout on Drag</p>\n            <ux-slider [value]="slider2.value" [options]="slider2.options" [disabled]="disabled"></ux-slider>\n        </div>\n    </div>\n\n    <hr>\n\n    <div class="row">\n        <div class="col-md-6 p-r-md p-b-md">\n            <p class="text-black p-b-md">Narrow - Track Styling - Snapping</p>\n            <ux-slider [value]="slider3.value" [options]="slider3.options" [disabled]="disabled"></ux-slider>\n        </div>\n        <div class="col-md-6 p-l-md p-b-md">\n            <p class="text-black p-b-md">Narrow - Gradient Track Styling - Callout on Hover</p>\n            <ux-slider [value]="slider4.value" [options]="slider4.options" [disabled]="disabled"></ux-slider>\n        </div>\n    </div>\n\n    <hr>\n\n    <div class="row">\n        <div class="col-md-12">\n            <h4 class="text-black p-t-md p-b-md">Range Value Sliders</h4>\n        </div>\n\n        <div class="col-md-6 p-r-md p-b-md">\n            <p class="text-black p-b-lg">Range Track - Persistent Callout</p>\n            <ux-slider [value]="slider5.value" [options]="slider5.options" [disabled]="disabled"></ux-slider>\n        </div>\n        <div class="col-md-6 p-l-md p-b-md">\n            <p class="text-black p-b-lg">Range Track Style - Custom Callout Styles</p>\n            <ux-slider [value]="slider6.value" [options]="slider6.options" [disabled]="disabled"></ux-slider>\n        </div>\n    </div>\n\n    <hr>\n\n    <div class="row">\n        <div class="col-md-12">\n            <h4 class="text-black p-t-md p-b-md">Range Slider with Text Inputs</h4>\n        </div>\n\n        <div class="col-md-12">\n            <ux-slider\n                [value]="slider7.value"\n                (valueChange)="valueHasChanged($event)"\n                [options]="slider7.options"\n                [disabled]="disabled"\n            ></ux-slider>\n        </div>\n    </div>\n\n    <div class="row m-t-sm p-t-xs">\n        <div class="col-sm-2">\n            <input\n                type="text"\n                class="form-control m-b"\n                aria-label="Slider lower range value"\n                [(ngModel)]="lowerValue"\n                [disabled]="disabled"\n                (blur)="updateValues()"\n                (keyup.enter)="updateValues()"\n            />\n        </div>\n        <div class="col-sm-offset-8 col-sm-2">\n            <input\n                type="text"\n                class="form-control m-b"\n                aria-label="Slider upper range value"\n                [(ngModel)]="upperValue"\n                [disabled]="disabled"\n                (blur)="updateValues()"\n                (keyup.enter)="updateValues()"\n            />\n        </div>\n    </div>\n</div>\n'}},36299:function(n){n.exports={snippet:'<span class="token keyword">import</span> <span class="token punctuation">{</span> Component <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@angular/core\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> SliderValue<span class="token punctuation">,</span> SliderOptions<span class="token punctuation">,</span> ColorService<span class="token punctuation">,</span> SliderStyle<span class="token punctuation">,</span> SliderCalloutTrigger<span class="token punctuation">,</span> SliderSize<span class="token punctuation">,</span> SliderSnap<span class="token punctuation">,</span> SliderType <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@ux-aspects/ux-aspects\'</span><span class="token punctuation">;</span>\n\n@<span class="token function">Component</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    selector<span class="token operator">:</span> <span class="token string">\'app\'</span><span class="token punctuation">,</span>\n    templateUrl<span class="token operator">:</span> <span class="token string">\'./app.component.html\'</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">AppComponent</span> <span class="token punctuation">{</span>\n\n    slider1<span class="token operator">:</span> SliderExample<span class="token punctuation">;</span>\n    slider2<span class="token operator">:</span> SliderExample<span class="token punctuation">;</span>\n    slider3<span class="token operator">:</span> SliderExample<span class="token punctuation">;</span>\n    slider4<span class="token operator">:</span> SliderExample<span class="token punctuation">;</span>\n    slider5<span class="token operator">:</span> SliderExample<span class="token punctuation">;</span>\n    slider6<span class="token operator">:</span> SliderExample<span class="token punctuation">;</span>\n    slider7<span class="token operator">:</span> SliderExample<span class="token punctuation">;</span>\n\n    lowerValue<span class="token operator">:</span> number <span class="token operator">=</span> <span class="token number">25</span><span class="token punctuation">;</span>\n    upperValue<span class="token operator">:</span> number <span class="token operator">=</span> <span class="token number">75</span><span class="token punctuation">;</span>\n\n    disabled<span class="token operator">:</span> boolean<span class="token punctuation">;</span>\n\n    <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">colorService<span class="token operator">:</span> ColorService</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n\n        <span class="token keyword">this</span><span class="token punctuation">.</span>slider1 <span class="token operator">=</span> <span class="token punctuation">{</span>\n            value<span class="token operator">:</span> <span class="token number">50</span><span class="token punctuation">,</span>\n            options<span class="token operator">:</span> <span class="token punctuation">{</span>\n                track<span class="token operator">:</span> <span class="token punctuation">{</span>\n                    ticks<span class="token operator">:</span> <span class="token punctuation">{</span>\n                        major<span class="token operator">:</span> <span class="token punctuation">{</span>\n                            steps<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n                            labels<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n                            <span class="token function-variable function">formatter</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n                                <span class="token keyword">if</span> <span class="token punctuation">(</span>value <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                                    <span class="token keyword">return</span> <span class="token string">\'Minimum\'</span><span class="token punctuation">;</span>\n                                <span class="token punctuation">}</span>\n                                <span class="token keyword">if</span> <span class="token punctuation">(</span>value <span class="token operator">===</span> <span class="token number">50</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                                    <span class="token keyword">return</span> <span class="token string">\'Default\'</span><span class="token punctuation">;</span>\n                                <span class="token punctuation">}</span>\n                                <span class="token keyword">if</span> <span class="token punctuation">(</span>value <span class="token operator">===</span> <span class="token number">100</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                                    <span class="token keyword">return</span> <span class="token string">\'Maximum\'</span><span class="token punctuation">;</span>\n                                <span class="token punctuation">}</span>\n                            <span class="token punctuation">}</span>\n                        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n                        minor<span class="token operator">:</span> <span class="token punctuation">{</span>\n                            show<span class="token operator">:</span> <span class="token boolean">false</span>\n                        <span class="token punctuation">}</span>\n                    <span class="token punctuation">}</span>\n                <span class="token punctuation">}</span>\n            <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n        <span class="token keyword">this</span><span class="token punctuation">.</span>slider2 <span class="token operator">=</span> <span class="token punctuation">{</span>\n            value<span class="token operator">:</span> <span class="token number">3.8</span><span class="token punctuation">,</span>\n            options<span class="token operator">:</span> <span class="token punctuation">{</span>\n                handles<span class="token operator">:</span> <span class="token punctuation">{</span>\n                    style<span class="token operator">:</span> SliderStyle<span class="token punctuation">.</span>Line<span class="token punctuation">,</span>\n                    callout<span class="token operator">:</span> <span class="token punctuation">{</span>\n                        trigger<span class="token operator">:</span> SliderCalloutTrigger<span class="token punctuation">.</span>Drag<span class="token punctuation">,</span>\n                        <span class="token function-variable function">formatter</span><span class="token operator">:</span> <span class="token parameter">value</span> <span class="token operator">=></span> value <span class="token operator">?</span> value<span class="token punctuation">.</span><span class="token function">toFixed</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">:</span> value\n                    <span class="token punctuation">}</span>\n                <span class="token punctuation">}</span><span class="token punctuation">,</span>\n                track<span class="token operator">:</span> <span class="token punctuation">{</span>\n                    min<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>\n                    max<span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">,</span>\n                    ticks<span class="token operator">:</span> <span class="token punctuation">{</span>\n                        major<span class="token operator">:</span> <span class="token punctuation">{</span>\n                            steps<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n                            labels<span class="token operator">:</span> <span class="token boolean">true</span>\n                        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n                        minor<span class="token operator">:</span> <span class="token punctuation">{</span>\n                            steps<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>\n                            labels<span class="token operator">:</span> <span class="token boolean">false</span>\n                        <span class="token punctuation">}</span>\n                    <span class="token punctuation">}</span>\n                <span class="token punctuation">}</span>\n            <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n        <span class="token keyword">this</span><span class="token punctuation">.</span>slider3 <span class="token operator">=</span> <span class="token punctuation">{</span>\n            value<span class="token operator">:</span> <span class="token number">4</span><span class="token punctuation">,</span>\n            options<span class="token operator">:</span> <span class="token punctuation">{</span>\n                track<span class="token operator">:</span> <span class="token punctuation">{</span>\n                    min<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>\n                    max<span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">,</span>\n                    height<span class="token operator">:</span> SliderSize<span class="token punctuation">.</span>Narrow<span class="token punctuation">,</span>\n                    ticks<span class="token operator">:</span> <span class="token punctuation">{</span>\n                        snap<span class="token operator">:</span> SliderSnap<span class="token punctuation">.</span>All<span class="token punctuation">,</span>\n                        major<span class="token operator">:</span> <span class="token punctuation">{</span>\n                            steps<span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">,</span>\n                            labels<span class="token operator">:</span> <span class="token boolean">true</span>\n                        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n                        minor<span class="token operator">:</span> <span class="token punctuation">{</span>\n                            steps<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>\n                            labels<span class="token operator">:</span> <span class="token boolean">true</span>\n                        <span class="token punctuation">}</span>\n                    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n                    colors<span class="token operator">:</span> <span class="token punctuation">{</span>\n                        lower<span class="token operator">:</span> colorService<span class="token punctuation">.</span><span class="token function">getColor</span><span class="token punctuation">(</span><span class="token string">\'accent\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toHex</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n                    <span class="token punctuation">}</span>\n                <span class="token punctuation">}</span>\n            <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n        <span class="token keyword">this</span><span class="token punctuation">.</span>slider4 <span class="token operator">=</span> <span class="token punctuation">{</span>\n            value<span class="token operator">:</span> <span class="token number">60</span><span class="token punctuation">,</span>\n            options<span class="token operator">:</span> <span class="token punctuation">{</span>\n                handles<span class="token operator">:</span> <span class="token punctuation">{</span>\n                    style<span class="token operator">:</span> SliderStyle<span class="token punctuation">.</span>Line<span class="token punctuation">,</span>\n                    callout<span class="token operator">:</span> <span class="token punctuation">{</span>\n                        trigger<span class="token operator">:</span> SliderCalloutTrigger<span class="token punctuation">.</span>Hover<span class="token punctuation">,</span>\n                        <span class="token function-variable function">formatter</span><span class="token operator">:</span> <span class="token parameter">value</span> <span class="token operator">=></span> value <span class="token operator">?</span> value<span class="token punctuation">.</span><span class="token function">toFixed</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">:</span> value\n                    <span class="token punctuation">}</span>\n                <span class="token punctuation">}</span><span class="token punctuation">,</span>\n                track<span class="token operator">:</span> <span class="token punctuation">{</span>\n                    height<span class="token operator">:</span> SliderSize<span class="token punctuation">.</span>Narrow<span class="token punctuation">,</span>\n                    ticks<span class="token operator">:</span> <span class="token punctuation">{</span>\n                        major<span class="token operator">:</span> <span class="token punctuation">{</span>\n                            steps<span class="token operator">:</span> <span class="token number">50</span>\n                        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n                        minor<span class="token operator">:</span> <span class="token punctuation">{</span>\n                            steps<span class="token operator">:</span> <span class="token number">10</span>\n                        <span class="token punctuation">}</span>\n                    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n                    colors<span class="token operator">:</span> <span class="token punctuation">{</span>\n                        higher<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">\'#fdf690\'</span><span class="token punctuation">,</span> <span class="token string">\'#f14a50\'</span><span class="token punctuation">]</span>\n                    <span class="token punctuation">}</span>\n                <span class="token punctuation">}</span>\n            <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n        <span class="token keyword">this</span><span class="token punctuation">.</span>slider5 <span class="token operator">=</span> <span class="token punctuation">{</span>\n            value<span class="token operator">:</span> <span class="token punctuation">{</span>\n                low<span class="token operator">:</span> <span class="token number">1234</span><span class="token punctuation">,</span>\n                high<span class="token operator">:</span> <span class="token number">9876</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            options<span class="token operator">:</span> <span class="token punctuation">{</span>\n                type<span class="token operator">:</span> SliderType<span class="token punctuation">.</span>Range<span class="token punctuation">,</span>\n                handles<span class="token operator">:</span> <span class="token punctuation">{</span>\n                    callout<span class="token operator">:</span> <span class="token punctuation">{</span>\n                        trigger<span class="token operator">:</span> SliderCalloutTrigger<span class="token punctuation">.</span>Persistent<span class="token punctuation">,</span>\n                        <span class="token function-variable function">formatter</span><span class="token operator">:</span> <span class="token parameter">value</span> <span class="token operator">=></span> value <span class="token operator">?</span> value<span class="token punctuation">.</span><span class="token function">toFixed</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">:</span> value\n                    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n                    keyboard<span class="token operator">:</span> <span class="token punctuation">{</span>\n                        minor<span class="token operator">:</span> <span class="token number">50</span>\n                    <span class="token punctuation">}</span>\n                <span class="token punctuation">}</span><span class="token punctuation">,</span>\n                track<span class="token operator">:</span> <span class="token punctuation">{</span>\n                    height<span class="token operator">:</span> SliderSize<span class="token punctuation">.</span>Narrow<span class="token punctuation">,</span>\n                    min<span class="token operator">:</span> <span class="token number">1000</span><span class="token punctuation">,</span>\n                    max<span class="token operator">:</span> <span class="token number">10000</span><span class="token punctuation">,</span>\n                    ticks<span class="token operator">:</span> <span class="token punctuation">{</span>\n                        major<span class="token operator">:</span> <span class="token punctuation">{</span>\n                            show<span class="token operator">:</span> <span class="token boolean">false</span>\n                        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n                        minor<span class="token operator">:</span> <span class="token punctuation">{</span>\n                            show<span class="token operator">:</span> <span class="token boolean">false</span>\n                        <span class="token punctuation">}</span>\n                    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n                    colors<span class="token operator">:</span> <span class="token punctuation">{</span>\n                        range<span class="token operator">:</span> colorService<span class="token punctuation">.</span><span class="token function">getColor</span><span class="token punctuation">(</span><span class="token string">\'accent\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toHex</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n                    <span class="token punctuation">}</span>\n                <span class="token punctuation">}</span>\n            <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n        <span class="token keyword">this</span><span class="token punctuation">.</span>slider6 <span class="token operator">=</span> <span class="token punctuation">{</span>\n            value<span class="token operator">:</span> <span class="token punctuation">{</span>\n                low<span class="token operator">:</span> <span class="token number">22</span><span class="token punctuation">,</span>\n                high<span class="token operator">:</span> <span class="token number">76</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            options<span class="token operator">:</span> <span class="token punctuation">{</span>\n                type<span class="token operator">:</span> SliderType<span class="token punctuation">.</span>Range<span class="token punctuation">,</span>\n                handles<span class="token operator">:</span> <span class="token punctuation">{</span>\n                    style<span class="token operator">:</span> SliderStyle<span class="token punctuation">.</span>Line<span class="token punctuation">,</span>\n                    callout<span class="token operator">:</span> <span class="token punctuation">{</span>\n                        trigger<span class="token operator">:</span> SliderCalloutTrigger<span class="token punctuation">.</span>Hover<span class="token punctuation">,</span>\n                        background<span class="token operator">:</span> colorService<span class="token punctuation">.</span><span class="token function">getColor</span><span class="token punctuation">(</span><span class="token string">\'alternate1\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toHex</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n                        <span class="token function-variable function">formatter</span><span class="token operator">:</span> <span class="token parameter">value</span> <span class="token operator">=></span> value <span class="token operator">?</span> value<span class="token punctuation">.</span><span class="token function">toFixed</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">:</span> value\n                    <span class="token punctuation">}</span>\n                <span class="token punctuation">}</span><span class="token punctuation">,</span>\n                track<span class="token operator">:</span> <span class="token punctuation">{</span>\n                    height<span class="token operator">:</span> SliderSize<span class="token punctuation">.</span>Narrow<span class="token punctuation">,</span>\n                    ticks<span class="token operator">:</span> <span class="token punctuation">{</span>\n                        major<span class="token operator">:</span> <span class="token punctuation">{</span>\n                            steps<span class="token operator">:</span> <span class="token number">25</span>\n                        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n                        minor<span class="token operator">:</span> <span class="token punctuation">{</span>\n                            steps<span class="token operator">:</span> <span class="token number">5</span>\n                        <span class="token punctuation">}</span>\n                    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n                    colors<span class="token operator">:</span> <span class="token punctuation">{</span>\n                        range<span class="token operator">:</span> colorService<span class="token punctuation">.</span><span class="token function">getColor</span><span class="token punctuation">(</span><span class="token string">\'alternate1\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toHex</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n                    <span class="token punctuation">}</span>\n                <span class="token punctuation">}</span>\n            <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n        <span class="token keyword">this</span><span class="token punctuation">.</span>slider7 <span class="token operator">=</span> <span class="token punctuation">{</span>\n            value<span class="token operator">:</span> <span class="token punctuation">{</span>\n                low<span class="token operator">:</span> <span class="token number">25</span><span class="token punctuation">,</span>\n                high<span class="token operator">:</span> <span class="token number">75</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            options<span class="token operator">:</span> <span class="token punctuation">{</span>\n                type<span class="token operator">:</span> SliderType<span class="token punctuation">.</span>Range<span class="token punctuation">,</span>\n                handles<span class="token operator">:</span> <span class="token punctuation">{</span>\n                    style<span class="token operator">:</span> SliderStyle<span class="token punctuation">.</span>Line<span class="token punctuation">,</span>\n                    callout<span class="token operator">:</span> <span class="token punctuation">{</span>\n                        trigger<span class="token operator">:</span> SliderCalloutTrigger<span class="token punctuation">.</span>Hover<span class="token punctuation">,</span>\n                        background<span class="token operator">:</span> colorService<span class="token punctuation">.</span><span class="token function">getColor</span><span class="token punctuation">(</span><span class="token string">\'accent\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toHex</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n                        <span class="token function-variable function">formatter</span><span class="token operator">:</span> <span class="token parameter">value</span> <span class="token operator">=></span> value <span class="token operator">?</span> value<span class="token punctuation">.</span><span class="token function">toFixed</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">:</span> value\n                    <span class="token punctuation">}</span>\n                <span class="token punctuation">}</span><span class="token punctuation">,</span>\n                track<span class="token operator">:</span> <span class="token punctuation">{</span>\n                    ticks<span class="token operator">:</span> <span class="token punctuation">{</span>\n                        snap<span class="token operator">:</span> SliderSnap<span class="token punctuation">.</span>All<span class="token punctuation">,</span>\n                        major<span class="token operator">:</span> <span class="token punctuation">{</span>\n                            steps<span class="token operator">:</span> <span class="token number">25</span>\n                        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n                        minor<span class="token operator">:</span> <span class="token punctuation">{</span>\n                            steps<span class="token operator">:</span> <span class="token number">5</span>\n                        <span class="token punctuation">}</span>\n                    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n                    colors<span class="token operator">:</span> <span class="token punctuation">{</span>\n                        range<span class="token operator">:</span> colorService<span class="token punctuation">.</span><span class="token function">getColor</span><span class="token punctuation">(</span><span class="token string">\'accent\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toHex</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n                    <span class="token punctuation">}</span>\n                <span class="token punctuation">}</span>\n            <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token function">updateValues</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>slider7<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>slider7<span class="token punctuation">.</span>value <span class="token keyword">as</span> SliderValue<span class="token punctuation">;</span>\n\n        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">isNaN</span><span class="token punctuation">(</span><span class="token function">Number</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>lowerValue<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token keyword">this</span><span class="token punctuation">.</span>slider7<span class="token punctuation">.</span>value<span class="token punctuation">.</span>low <span class="token operator">=</span> <span class="token function">Number</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>lowerValue<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n\n        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">isNaN</span><span class="token punctuation">(</span><span class="token function">Number</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>upperValue<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token keyword">this</span><span class="token punctuation">.</span>slider7<span class="token punctuation">.</span>value<span class="token punctuation">.</span>high <span class="token operator">=</span> <span class="token function">Number</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>upperValue<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token function">valueHasChanged</span><span class="token punctuation">(</span><span class="token parameter">value<span class="token operator">:</span> SliderValue</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>slider7<span class="token punctuation">.</span>value <span class="token operator">=</span> value<span class="token punctuation">;</span>\n\n        <span class="token keyword">this</span><span class="token punctuation">.</span>lowerValue <span class="token operator">=</span> value<span class="token punctuation">.</span>low<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>upperValue <span class="token operator">=</span> value<span class="token punctuation">.</span>high<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n<span class="token punctuation">}</span>\n\n<span class="token keyword">interface</span> <span class="token class-name">SliderExample</span> <span class="token punctuation">{</span>\n    value<span class="token operator">:</span> number <span class="token operator">|</span> SliderValue<span class="token punctuation">;</span>\n    options<span class="token operator">:</span> SliderOptions<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n',example:"import { Component } from '@angular/core';\nimport { SliderValue, SliderOptions, ColorService, SliderStyle, SliderCalloutTrigger, SliderSize, SliderSnap, SliderType } from '@ux-aspects/ux-aspects';\n\n@Component({\n    selector: 'app',\n    templateUrl: './app.component.html'\n})\nexport class AppComponent {\n\n    slider1: SliderExample;\n    slider2: SliderExample;\n    slider3: SliderExample;\n    slider4: SliderExample;\n    slider5: SliderExample;\n    slider6: SliderExample;\n    slider7: SliderExample;\n\n    lowerValue: number = 25;\n    upperValue: number = 75;\n\n    disabled: boolean;\n\n    constructor(colorService: ColorService) {\n\n        this.slider1 = {\n            value: 50,\n            options: {\n                track: {\n                    ticks: {\n                        major: {\n                            steps: [0, 50, 100],\n                            labels: true,\n                            formatter: (value) => {\n                                if (value === 0) {\n                                    return 'Minimum';\n                                }\n                                if (value === 50) {\n                                    return 'Default';\n                                }\n                                if (value === 100) {\n                                    return 'Maximum';\n                                }\n                            }\n                        },\n                        minor: {\n                            show: false\n                        }\n                    }\n                }\n            }\n        };\n\n        this.slider2 = {\n            value: 3.8,\n            options: {\n                handles: {\n                    style: SliderStyle.Line,\n                    callout: {\n                        trigger: SliderCalloutTrigger.Drag,\n                        formatter: value => value ? value.toFixed(1) : value\n                    }\n                },\n                track: {\n                    min: 1,\n                    max: 5,\n                    ticks: {\n                        major: {\n                            steps: [1, 5],\n                            labels: true\n                        },\n                        minor: {\n                            steps: 1,\n                            labels: false\n                        }\n                    }\n                }\n            }\n        };\n\n        this.slider3 = {\n            value: 4,\n            options: {\n                track: {\n                    min: 0,\n                    max: 5,\n                    height: SliderSize.Narrow,\n                    ticks: {\n                        snap: SliderSnap.All,\n                        major: {\n                            steps: 5,\n                            labels: true\n                        },\n                        minor: {\n                            steps: 1,\n                            labels: true\n                        }\n                    },\n                    colors: {\n                        lower: colorService.getColor('accent').toHex()\n                    }\n                }\n            }\n        };\n\n        this.slider4 = {\n            value: 60,\n            options: {\n                handles: {\n                    style: SliderStyle.Line,\n                    callout: {\n                        trigger: SliderCalloutTrigger.Hover,\n                        formatter: value => value ? value.toFixed(0) : value\n                    }\n                },\n                track: {\n                    height: SliderSize.Narrow,\n                    ticks: {\n                        major: {\n                            steps: 50\n                        },\n                        minor: {\n                            steps: 10\n                        }\n                    },\n                    colors: {\n                        higher: ['#fdf690', '#f14a50']\n                    }\n                }\n            }\n        };\n\n        this.slider5 = {\n            value: {\n                low: 1234,\n                high: 9876\n            },\n            options: {\n                type: SliderType.Range,\n                handles: {\n                    callout: {\n                        trigger: SliderCalloutTrigger.Persistent,\n                        formatter: value => value ? value.toFixed(0) : value\n                    },\n                    keyboard: {\n                        minor: 50\n                    }\n                },\n                track: {\n                    height: SliderSize.Narrow,\n                    min: 1000,\n                    max: 10000,\n                    ticks: {\n                        major: {\n                            show: false\n                        },\n                        minor: {\n                            show: false\n                        }\n                    },\n                    colors: {\n                        range: colorService.getColor('accent').toHex()\n                    }\n                }\n            }\n        };\n\n        this.slider6 = {\n            value: {\n                low: 22,\n                high: 76\n            },\n            options: {\n                type: SliderType.Range,\n                handles: {\n                    style: SliderStyle.Line,\n                    callout: {\n                        trigger: SliderCalloutTrigger.Hover,\n                        background: colorService.getColor('alternate1').toHex(),\n                        formatter: value => value ? value.toFixed(0) : value\n                    }\n                },\n                track: {\n                    height: SliderSize.Narrow,\n                    ticks: {\n                        major: {\n                            steps: 25\n                        },\n                        minor: {\n                            steps: 5\n                        }\n                    },\n                    colors: {\n                        range: colorService.getColor('alternate1').toHex()\n                    }\n                }\n            }\n        };\n\n        this.slider7 = {\n            value: {\n                low: 25,\n                high: 75\n            },\n            options: {\n                type: SliderType.Range,\n                handles: {\n                    style: SliderStyle.Line,\n                    callout: {\n                        trigger: SliderCalloutTrigger.Hover,\n                        background: colorService.getColor('accent').toHex(),\n                        formatter: value => value ? value.toFixed(0) : value\n                    }\n                },\n                track: {\n                    ticks: {\n                        snap: SliderSnap.All,\n                        major: {\n                            steps: 25\n                        },\n                        minor: {\n                            steps: 5\n                        }\n                    },\n                    colors: {\n                        range: colorService.getColor('accent').toHex()\n                    }\n                }\n            }\n        };\n    }\n\n    updateValues() {\n        this.slider7.value = this.slider7.value as SliderValue;\n\n        if (!isNaN(Number(this.lowerValue))) {\n            this.slider7.value.low = Number(this.lowerValue);\n        }\n\n        if (!isNaN(Number(this.upperValue))) {\n            this.slider7.value.high = Number(this.upperValue);\n        }\n    }\n\n    valueHasChanged(value: SliderValue) {\n        this.slider7.value = value;\n\n        this.lowerValue = value.low.toString();\n        this.upperValue = value.high.toString();\n    }\n\n}\n\ninterface SliderExample {\n    value: number | SliderValue;\n    options: SliderOptions;\n}\n"}},13711:function(n){n.exports={snippet:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ux-slider</span> <span class="token attr-name">[(value)]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>value<span class="token punctuation">"</span></span> <span class="token attr-name">[options]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>options<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ux-slider</span><span class="token punctuation">></span></span>',example:'<ux-slider [(value)]="value" [options]="options"></ux-slider>'}},81482:function(n){n.exports={snippet:'value<span class="token operator">:</span> number <span class="token operator">=</span> <span class="token number">50</span><span class="token punctuation">;</span>',example:"value: number = 50;"}},37519:function(n){n.exports={snippet:'value<span class="token operator">:</span> SliderValue <span class="token operator">=</span> <span class="token punctuation">{</span>\n    low<span class="token operator">:</span> <span class="token number">25</span><span class="token punctuation">,</span>\n    high<span class="token operator">:</span> <span class="token number">75</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>',example:"value: SliderValue = {\n    low: 25,\n    high: 75\n};"}},97066:function(n){n.exports={snippet:'options<span class="token operator">:</span> SliderOptions <span class="token operator">=</span> <span class="token punctuation">{</span>\n    type<span class="token operator">:</span> SliderType<span class="token punctuation">.</span>Value<span class="token punctuation">,</span>\n    handles<span class="token operator">:</span> <span class="token punctuation">{</span>\n        style<span class="token operator">:</span> SliderStyle<span class="token punctuation">.</span>Button<span class="token punctuation">,</span>\n        callout<span class="token operator">:</span> <span class="token punctuation">{</span>\n            trigger<span class="token operator">:</span> SliderCalloutTrigger<span class="token punctuation">.</span>None<span class="token punctuation">,</span>\n            background<span class="token operator">:</span> <span class="token string">\'#464646\'</span><span class="token punctuation">,</span>\n            color<span class="token operator">:</span> <span class="token string">\'#fff\'</span><span class="token punctuation">,</span>\n            formatter<span class="token operator">:</span> <span class="token punctuation">(</span>value<span class="token operator">:</span> number<span class="token punctuation">)</span><span class="token operator">:</span> string <span class="token operator">|</span> <span class="token parameter">number</span> <span class="token operator">=></span> value\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    track<span class="token operator">:</span> <span class="token punctuation">{</span>\n        height<span class="token operator">:</span> SliderSize<span class="token punctuation">.</span>Wide<span class="token punctuation">,</span>\n        min<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>\n        max<span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span>\n        ticks<span class="token operator">:</span> <span class="token punctuation">{</span>\n            snap<span class="token operator">:</span> SliderSnap<span class="token punctuation">.</span>None<span class="token punctuation">,</span>\n            major<span class="token operator">:</span> <span class="token punctuation">{</span>\n                show<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n                steps<span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span>\n                labels<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n                formatter<span class="token operator">:</span> <span class="token punctuation">(</span>value<span class="token operator">:</span> number<span class="token punctuation">)</span><span class="token operator">:</span> string <span class="token operator">|</span> <span class="token parameter">number</span> <span class="token operator">=></span> value\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            minor<span class="token operator">:</span> <span class="token punctuation">{</span>\n                show<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n                steps<span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">,</span>\n                labels<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n                formatter<span class="token operator">:</span> <span class="token punctuation">(</span>value<span class="token operator">:</span> number<span class="token punctuation">)</span><span class="token operator">:</span> string <span class="token operator">|</span> <span class="token parameter">number</span> <span class="token operator">=></span> value\n            <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        colors<span class="token operator">:</span> <span class="token punctuation">{</span>\n            lower<span class="token operator">:</span> <span class="token string">\'#f2f2f2\'</span><span class="token punctuation">,</span>\n            range<span class="token operator">:</span> <span class="token string">\'rgba(96,121,141, 0.75)\'</span><span class="token punctuation">,</span>\n            higher<span class="token operator">:</span> <span class="token string">\'#f2f2f2\'</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>',example:"options: SliderOptions = {\n    type: SliderType.Value,\n    handles: {\n        style: SliderStyle.Button,\n        callout: {\n            trigger: SliderCalloutTrigger.None,\n            background: '#464646',\n            color: '#fff',\n            formatter: (value: number): string | number => value\n        }\n    },\n    track: {\n        height: SliderSize.Wide,\n        min: 0,\n        max: 100,\n        ticks: {\n            snap: SliderSnap.None,\n            major: {\n                show: true,\n                steps: 10,\n                labels: true,\n                formatter: (value: number): string | number => value\n            },\n            minor: {\n                show: true,\n                steps: 5,\n                labels: false,\n                formatter: (value: number): string | number => value\n            }\n        },\n        colors: {\n            lower: '#f2f2f2',\n            range: 'rgba(96,121,141, 0.75)',\n            higher: '#f2f2f2'\n        }\n    }\n};"}},80748:function(n){n.exports={snippet:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>row<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>col-md-12<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h4</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text-black p-t-md p-b-md<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Range Slider with Text Inputs<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h4</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>col-md-12<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ux-slider</span> <span class="token attr-name">[value]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>value<span class="token punctuation">"</span></span> <span class="token attr-name">(valueChange)</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>valueHasChanged($event)<span class="token punctuation">"</span></span> \n            <span class="token attr-name">[options]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>options<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ux-slider</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>row m-t-sm p-t-xs<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>col-sm-2<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>form-control m-b<span class="token punctuation">"</span></span> <span class="token attr-name">[(ngModel)]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>lowerValue<span class="token punctuation">"</span></span> \n            <span class="token attr-name">(blur)</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>updateValues()<span class="token punctuation">"</span></span> <span class="token attr-name">(keyup.enter)</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>updateValues()<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>col-sm-offset-8 col-sm-2<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>form-control m-b<span class="token punctuation">"</span></span> <span class="token attr-name">[(ngModel)]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>upperValue<span class="token punctuation">"</span></span> \n            <span class="token attr-name">(blur)</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>updateValues()<span class="token punctuation">"</span></span> <span class="token attr-name">(keyup.enter)</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>updateValues()<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>',example:'<div class="row">\n\n    <div class="col-md-12">\n        <h4 class="text-black p-t-md p-b-md">Range Slider with Text Inputs</h4>\n    </div>\n\n    <div class="col-md-12">\n        <ux-slider [value]="value" (valueChange)="valueHasChanged($event)" \n            [options]="options"></ux-slider>\n    </div>\n</div>\n\n<div class="row m-t-sm p-t-xs">\n    <div class="col-sm-2">\n        <input type="text" class="form-control m-b" [(ngModel)]="lowerValue" \n            (blur)="updateValues()" (keyup.enter)="updateValues()">\n    </div>\n    <div class="col-sm-offset-8 col-sm-2">\n        <input type="text" class="form-control m-b" [(ngModel)]="upperValue" \n            (blur)="updateValues()" (keyup.enter)="updateValues()">\n    </div>\n</div>'}},94160:function(n){n.exports={snippet:'<span class="token keyword">import</span> <span class="token punctuation">{</span> Component <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@angular/core\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span>\n    SliderValue<span class="token punctuation">,</span> SliderOptions<span class="token punctuation">,</span> ColorService<span class="token punctuation">,</span> SliderStyle<span class="token punctuation">,</span>\n    SliderCalloutTrigger<span class="token punctuation">,</span> SliderSnap<span class="token punctuation">,</span> SliderType\n<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@ux-aspects/ux-aspects\'</span><span class="token punctuation">;</span>\n\n@<span class="token function">Component</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    selector<span class="token operator">:</span> <span class="token string">\'my-slider-example\'</span><span class="token punctuation">,</span>\n    templateUrl<span class="token operator">:</span> <span class="token string">\'./slider.component.html\'</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">SliderExampleComponent</span> <span class="token punctuation">{</span>\n\n    value<span class="token operator">:</span> SliderValue <span class="token operator">=</span> <span class="token punctuation">{</span>\n        low<span class="token operator">:</span> <span class="token number">25</span><span class="token punctuation">,</span>\n        high<span class="token operator">:</span> <span class="token number">75</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n    options<span class="token operator">:</span> SliderOptions<span class="token punctuation">;</span>\n\n    lowerValue<span class="token operator">:</span> number <span class="token operator">=</span> <span class="token number">25</span><span class="token punctuation">;</span>\n    upperValue<span class="token operator">:</span> number <span class="token operator">=</span> <span class="token number">75</span><span class="token punctuation">;</span>\n\n    <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">colorService<span class="token operator">:</span> ColorService</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n\n        <span class="token keyword">this</span><span class="token punctuation">.</span>options <span class="token operator">=</span> <span class="token punctuation">{</span>\n            type<span class="token operator">:</span> SliderType<span class="token punctuation">.</span>Range<span class="token punctuation">,</span>\n            handles<span class="token operator">:</span> <span class="token punctuation">{</span>\n                style<span class="token operator">:</span> SliderStyle<span class="token punctuation">.</span>Line<span class="token punctuation">,</span>\n                callout<span class="token operator">:</span> <span class="token punctuation">{</span>\n                    trigger<span class="token operator">:</span> SliderCalloutTrigger<span class="token punctuation">.</span>Hover<span class="token punctuation">,</span>\n                    background<span class="token operator">:</span> colorService<span class="token punctuation">.</span><span class="token function">getColor</span><span class="token punctuation">(</span><span class="token string">\'accent\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toHex</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n                    <span class="token function-variable function">formatter</span><span class="token operator">:</span> <span class="token parameter">value</span> <span class="token operator">=></span> value <span class="token operator">?</span> value<span class="token punctuation">.</span><span class="token function">toFixed</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">:</span> value\n                <span class="token punctuation">}</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            track<span class="token operator">:</span> <span class="token punctuation">{</span>\n                ticks<span class="token operator">:</span> <span class="token punctuation">{</span>\n                    snap<span class="token operator">:</span> SliderSnap<span class="token punctuation">.</span>All<span class="token punctuation">,</span>\n                    major<span class="token operator">:</span> <span class="token punctuation">{</span>\n                        steps<span class="token operator">:</span> <span class="token number">25</span>\n                    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n                    minor<span class="token operator">:</span> <span class="token punctuation">{</span>\n                        steps<span class="token operator">:</span> <span class="token number">5</span>\n                    <span class="token punctuation">}</span>\n                <span class="token punctuation">}</span><span class="token punctuation">,</span>\n                colors<span class="token operator">:</span> <span class="token punctuation">{</span>\n                    range<span class="token operator">:</span> colorService<span class="token punctuation">.</span><span class="token function">getColor</span><span class="token punctuation">(</span><span class="token string">\'accent\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toHex</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n                <span class="token punctuation">}</span>\n            <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token function">updateValues</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n\n        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">isNaN</span><span class="token punctuation">(</span><span class="token function">Number</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>lowerValue<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token keyword">this</span><span class="token punctuation">.</span>value<span class="token punctuation">.</span>low <span class="token operator">=</span> <span class="token function">Number</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>lowerValue<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n\n        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">isNaN</span><span class="token punctuation">(</span><span class="token function">Number</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>upperValue<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token keyword">this</span><span class="token punctuation">.</span>value<span class="token punctuation">.</span>high <span class="token operator">=</span> <span class="token function">Number</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>upperValue<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token function">valueHasChanged</span><span class="token punctuation">(</span><span class="token parameter">value<span class="token operator">:</span> SliderValue</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>value <span class="token operator">=</span> value<span class="token punctuation">;</span>\n\n        <span class="token keyword">this</span><span class="token punctuation">.</span>lowerValue <span class="token operator">=</span> value<span class="token punctuation">.</span>low<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>upperValue <span class="token operator">=</span> value<span class="token punctuation">.</span>high<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n<span class="token punctuation">}</span>',example:"import { Component } from '@angular/core';\nimport {\n    SliderValue, SliderOptions, ColorService, SliderStyle,\n    SliderCalloutTrigger, SliderSnap, SliderType\n} from '@ux-aspects/ux-aspects';\n\n@Component({\n    selector: 'my-slider-example',\n    templateUrl: './slider.component.html'\n})\nexport class SliderExampleComponent {\n\n    value: SliderValue = {\n        low: 25,\n        high: 75\n    };\n\n    options: SliderOptions;\n\n    lowerValue: number = 25;\n    upperValue: number = 75;\n\n    constructor(colorService: ColorService) {\n\n        this.options = {\n            type: SliderType.Range,\n            handles: {\n                style: SliderStyle.Line,\n                callout: {\n                    trigger: SliderCalloutTrigger.Hover,\n                    background: colorService.getColor('accent').toHex(),\n                    formatter: value => value ? value.toFixed(0) : value\n                }\n            },\n            track: {\n                ticks: {\n                    snap: SliderSnap.All,\n                    major: {\n                        steps: 25\n                    },\n                    minor: {\n                        steps: 5\n                    }\n                },\n                colors: {\n                    range: colorService.getColor('accent').toHex()\n                }\n            }\n        };\n    }\n\n    updateValues() {\n\n        if (!isNaN(Number(this.lowerValue))) {\n            this.value.low = Number(this.lowerValue);\n        }\n\n        if (!isNaN(Number(this.upperValue))) {\n            this.value.high = Number(this.upperValue);\n        }\n    }\n\n    valueHasChanged(value: SliderValue) {\n        this.value = value;\n\n        this.lowerValue = value.low.toString();\n        this.upperValue = value.high.toString();\n    }\n\n}"}},41386:function(n){n.exports={snippet:'<span class="token selector">ux-tag-input > ol > li.ux-tag</span> <span class="token punctuation">{</span>\n    <span class="token property">padding</span><span class="token punctuation">:</span> 0 8px<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.ux-icon-tag</span> <span class="token punctuation">{</span>\n    <span class="token property">margin-right</span><span class="token punctuation">:</span> 8px<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>',example:"ux-tag-input > ol > li.ux-tag {\n    padding: 0 8px;\n}\n\n.ux-icon-tag {\n    margin-right: 8px;\n}"}},76008:function(n){n.exports={snippet:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>row m-b-md<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>col-md-12 form-group-validate has-feedback<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ux-tag-input</span> <span class="token attr-name">#tagInput</span>\n                <span class="token attr-name">[(tags)]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>tags<span class="token punctuation">"</span></span>\n                <span class="token attr-name">[(input)]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>input<span class="token punctuation">"</span></span>\n                <span class="token attr-name">[addOnPaste]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>addOnPaste<span class="token punctuation">"</span></span>\n                <span class="token attr-name">[disabled]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>disabled<span class="token punctuation">"</span></span>\n                <span class="token attr-name">[enforceTagLimits]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>enforceTagLimits<span class="token punctuation">"</span></span>\n                <span class="token attr-name">[freeInput]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>freeInput<span class="token punctuation">"</span></span>\n                <span class="token attr-name">[minTags]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>minTags<span class="token punctuation">"</span></span>\n                <span class="token attr-name">[maxTags]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>maxTags<span class="token punctuation">"</span></span>\n                <span class="token attr-name">[placeholder]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>placeholder<span class="token punctuation">"</span></span>\n                <span class="token attr-name">[showTypeaheadOnClick]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>showTypeaheadOnClick<span class="token punctuation">"</span></span>\n                <span class="token attr-name">[tagDelimiters]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>tagDelimiters<span class="token punctuation">"</span></span>\n                <span class="token attr-name">[tagPattern]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>tagPatternRegExp<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ux-typeahead</span> <span class="token attr-name">*ngIf</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>typeaheadEnabled<span class="token punctuation">"</span></span>\n                    <span class="token attr-name">[filter]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>input<span class="token punctuation">"</span></span>\n                    <span class="token attr-name">[options]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>allTags<span class="token punctuation">"</span></span>\n                    <span class="token attr-name">[disabledOptions]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>tags<span class="token punctuation">"</span></span>\n                    <span class="token attr-name">[dropDirection]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>dropDirection<span class="token punctuation">"</span></span>\n                    <span class="token attr-name">[multiselectable]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span>\n                    <span class="token attr-name">[selectFirst]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>selectFirst<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ux-typeahead</span><span class="token punctuation">></span></span>\n\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ux-tag-input</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">*ngIf</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>tagInput.validationErrors.tagRangeError<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>validation-error-text<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ux-icon</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>alert<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ux-icon</span><span class="token punctuation">></span></span>\n                Required: number of tags between {{tagInput.validationErrors.tagRangeError.min}}\n                and {{tagInput.validationErrors.tagRangeError.max}}.\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">*ngIf</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>tagInput.validationErrors.inputPattern<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>validation-error-text<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ux-icon</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>alert<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ux-icon</span><span class="token punctuation">></span></span>\n                Expected format: {{tagInput.validationErrors.inputPattern.pattern.source}}\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ux-accordion</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ux-accordion-panel</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>accordion-chevron<span class="token punctuation">"</span></span> <span class="token attr-name">heading</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Customize Example...<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>row<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>col-md-4 col-sm-12<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ux-checkbox</span> <span class="token attr-name">[(value)]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>addOnPaste<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>addOnPaste<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ux-checkbox</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>col-md-4 col-sm-12<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ux-checkbox</span> <span class="token attr-name">[(value)]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>disabled<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>disabled<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ux-checkbox</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>col-md-4 col-sm-12<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ux-checkbox</span> <span class="token attr-name">[(value)]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>enforceTagLimits<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>enforceTagLimits<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ux-checkbox</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>row m-t-md<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>col-md-4 col-sm-12<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>minTags<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>minTags<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ux-number-picker</span> <span class="token attr-name">[(value)]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>minTags<span class="token punctuation">"</span></span> <span class="token attr-name">min</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span> <span class="token attr-name">[max]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>maxTags<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ux-number-picker</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>col-md-4 col-sm-12<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>maxTags<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>maxTags<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ux-number-picker</span> <span class="token attr-name">[(value)]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>maxTags<span class="token punctuation">"</span></span> <span class="token attr-name">[min]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>minTags<span class="token punctuation">"</span></span> <span class="token attr-name">max</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1000<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ux-number-picker</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>col-md-4 col-sm-12<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>tagPattern<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>tagPattern<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>tagPattern<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>form-control<span class="token punctuation">"</span></span> <span class="token attr-name">[(ngModel)]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>tagPattern<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>row m-t-md<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>col-md-4 col-sm-12<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>placeholder<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>placeholder<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>placeholder<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>form-control<span class="token punctuation">"</span></span> <span class="token attr-name">[(ngModel)]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>placeholder<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>col-md-4 col-sm-12<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>tagDelimiters<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>tagDelimiters<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>tagDelimiters<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>form-control<span class="token punctuation">"</span></span> <span class="token attr-name">[(ngModel)]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>tagDelimiters<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>row m-t-md<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>col-sm-12<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ux-checkbox</span> <span class="token attr-name">[(value)]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>typeaheadEnabled<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Enable Typeahead<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ux-checkbox</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>row m-t-md<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>col-md-4 col-sm-12<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ux-checkbox</span> <span class="token attr-name">[(value)]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>freeInput<span class="token punctuation">"</span></span> <span class="token attr-name">[disabled]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>!typeaheadEnabled<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>freeInput<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ux-checkbox</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>col-md-4 col-sm-12<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ux-checkbox</span> <span class="token attr-name">[(value)]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>selectFirst<span class="token punctuation">"</span></span>\n                    <span class="token attr-name">[disabled]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>!typeaheadEnabled<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>selectFirst<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ux-checkbox</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>col-md-4 col-sm-12<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ux-checkbox</span> <span class="token attr-name">[(value)]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>showTypeaheadOnClick<span class="token punctuation">"</span></span>\n                    <span class="token attr-name">[disabled]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>!typeaheadEnabled<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>showTypeaheadOnClick<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ux-checkbox</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>row m-t-md<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>col-md-4 col-sm-12<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>dropDirection<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>dropDirection<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ux-radio-button</span> <span class="token attr-name">[(value)]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>dropDirection<span class="token punctuation">"</span></span> <span class="token attr-name">option</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>down<span class="token punctuation">"</span></span>\n                    <span class="token attr-name">[disabled]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>!typeaheadEnabled<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>down<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ux-radio-button</span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ux-radio-button</span> <span class="token attr-name">[(value)]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>dropDirection<span class="token punctuation">"</span></span> <span class="token attr-name">option</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>up<span class="token punctuation">"</span></span>\n                    <span class="token attr-name">[disabled]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>!typeaheadEnabled<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>up<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ux-radio-button</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ux-accordion-panel</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ux-accordion</span><span class="token punctuation">></span></span>',example:'<div class="row m-b-md">\n    <div class="col-md-12 form-group-validate has-feedback">\n        <form>\n            <ux-tag-input #tagInput\n                [(tags)]="tags"\n                [(input)]="input"\n                [addOnPaste]="addOnPaste"\n                [disabled]="disabled"\n                [enforceTagLimits]="enforceTagLimits"\n                [freeInput]="freeInput"\n                [minTags]="minTags"\n                [maxTags]="maxTags"\n                [placeholder]="placeholder"\n                [showTypeaheadOnClick]="showTypeaheadOnClick"\n                [tagDelimiters]="tagDelimiters"\n                [tagPattern]="tagPatternRegExp">\n\n                <ux-typeahead *ngIf="typeaheadEnabled"\n                    [filter]="input"\n                    [options]="allTags"\n                    [disabledOptions]="tags"\n                    [dropDirection]="dropDirection"\n                    [multiselectable]="true"\n                    [selectFirst]="selectFirst">\n                </ux-typeahead>\n\n            </ux-tag-input>\n            <span *ngIf="tagInput.validationErrors.tagRangeError" class="validation-error-text">\n                <ux-icon name="alert"></ux-icon>\n                Required: number of tags between {{tagInput.validationErrors.tagRangeError.min}}\n                and {{tagInput.validationErrors.tagRangeError.max}}.\n            </span>\n            <span *ngIf="tagInput.validationErrors.inputPattern" class="validation-error-text">\n                <ux-icon name="alert"></ux-icon>\n                Expected format: {{tagInput.validationErrors.inputPattern.pattern.source}}\n            </span>\n        </form>\n    </div>\n</div>\n\n<ux-accordion>\n    <ux-accordion-panel class="accordion-chevron" heading="Customize Example...">\n        <div class="row">\n            <div class="col-md-4 col-sm-12">\n                <ux-checkbox [(value)]="addOnPaste">addOnPaste</ux-checkbox>\n            </div>\n            <div class="col-md-4 col-sm-12">\n                <ux-checkbox [(value)]="disabled">disabled</ux-checkbox>\n            </div>\n            <div class="col-md-4 col-sm-12">\n                <ux-checkbox [(value)]="enforceTagLimits">enforceTagLimits</ux-checkbox>\n            </div>\n        </div>\n        <div class="row m-t-md">\n            <div class="col-md-4 col-sm-12">\n                <label for="minTags">minTags</label>\n                <ux-number-picker [(value)]="minTags" min="0" [max]="maxTags"></ux-number-picker>\n            </div>\n            <div class="col-md-4 col-sm-12">\n                <label for="maxTags">maxTags</label>\n                <ux-number-picker [(value)]="maxTags" [min]="minTags" max="1000"></ux-number-picker>\n            </div>\n            <div class="col-md-4 col-sm-12">\n                <label for="tagPattern">tagPattern</label>\n                <input type="text" name="tagPattern" class="form-control" [(ngModel)]="tagPattern">\n            </div>\n        </div>\n        <div class="row m-t-md">\n            <div class="col-md-4 col-sm-12">\n                <label for="placeholder">placeholder</label>\n                <input type="text" name="placeholder" class="form-control" [(ngModel)]="placeholder">\n            </div>\n            <div class="col-md-4 col-sm-12">\n                <label for="tagDelimiters">tagDelimiters</label>\n                <input type="text" name="tagDelimiters" class="form-control" [(ngModel)]="tagDelimiters">\n            </div>\n        </div>\n        <div class="row m-t-md">\n            <div class="col-sm-12">\n                <ux-checkbox [(value)]="typeaheadEnabled">Enable Typeahead</ux-checkbox>\n            </div>\n        </div>\n        <div class="row m-t-md">\n            <div class="col-md-4 col-sm-12">\n                <ux-checkbox [(value)]="freeInput" [disabled]="!typeaheadEnabled">freeInput</ux-checkbox>\n            </div>\n            <div class="col-md-4 col-sm-12">\n                <ux-checkbox [(value)]="selectFirst"\n                    [disabled]="!typeaheadEnabled">selectFirst</ux-checkbox>\n            </div>\n            <div class="col-md-4 col-sm-12">\n                <ux-checkbox [(value)]="showTypeaheadOnClick"\n                    [disabled]="!typeaheadEnabled">showTypeaheadOnClick</ux-checkbox>\n            </div>\n        </div>\n        <div class="row m-t-md">\n            <div class="col-md-4 col-sm-12">\n                <label for="dropDirection">dropDirection</label>\n                <ux-radio-button [(value)]="dropDirection" option="down"\n                    [disabled]="!typeaheadEnabled">down</ux-radio-button>\n                <ux-radio-button [(value)]="dropDirection" option="up"\n                    [disabled]="!typeaheadEnabled">up</ux-radio-button>\n            </div>\n        </div>\n    </ux-accordion-panel>\n</ux-accordion>'}},17993:function(n){n.exports={snippet:'<span class="token keyword">import</span> <span class="token punctuation">{</span> Component <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@angular/core\'</span><span class="token punctuation">;</span>\n\n@<span class="token function">Component</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    selector<span class="token operator">:</span> <span class="token string">\'app\'</span><span class="token punctuation">,</span>\n    templateUrl<span class="token operator">:</span> <span class="token string">\'./app.component.html\'</span><span class="token punctuation">,</span>\n    styleUrls<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">\'./app.component.css\'</span><span class="token punctuation">]</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">AppComponent</span> <span class="token punctuation">{</span>\n    tags <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">\'Alpha\'</span><span class="token punctuation">,</span> <span class="token string">\'Beta\'</span><span class="token punctuation">,</span> <span class="token string">\'Kappa\'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n    allTags <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">\'Alpha\'</span><span class="token punctuation">,</span> <span class="token string">\'Beta\'</span><span class="token punctuation">,</span> <span class="token string">\'Gamma\'</span><span class="token punctuation">,</span> <span class="token string">\'Delta\'</span><span class="token punctuation">,</span> <span class="token string">\'Epsilon\'</span><span class="token punctuation">,</span> <span class="token string">\'Zeta\'</span><span class="token punctuation">,</span> <span class="token string">\'Eta\'</span><span class="token punctuation">,</span> <span class="token string">\'Theta\'</span><span class="token punctuation">,</span> <span class="token string">\'Iota\'</span><span class="token punctuation">,</span> <span class="token string">\'Kappa\'</span><span class="token punctuation">,</span>\n        <span class="token string">\'Lambda\'</span><span class="token punctuation">,</span> <span class="token string">\'Mu\'</span><span class="token punctuation">,</span> <span class="token string">\'Nu\'</span><span class="token punctuation">,</span> <span class="token string">\'Xi\'</span><span class="token punctuation">,</span> <span class="token string">\'Omicron\'</span><span class="token punctuation">,</span> <span class="token string">\'Pi\'</span><span class="token punctuation">,</span> <span class="token string">\'Rho\'</span><span class="token punctuation">,</span> <span class="token string">\'Sigma\'</span><span class="token punctuation">,</span> <span class="token string">\'Tau\'</span><span class="token punctuation">,</span> <span class="token string">\'Upsilon\'</span><span class="token punctuation">,</span> <span class="token string">\'Phi\'</span><span class="token punctuation">,</span> <span class="token string">\'Chi\'</span><span class="token punctuation">,</span>\n        <span class="token string">\'Psi\'</span><span class="token punctuation">,</span> <span class="token string">\'Omega\'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n    input<span class="token operator">:</span> string<span class="token punctuation">;</span>\n\n    addOnPaste<span class="token operator">:</span> boolean <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>\n    disabled<span class="token operator">:</span> boolean <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\n    enforceTagLimits<span class="token operator">:</span> boolean <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\n    freeInput<span class="token operator">:</span> boolean <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>\n    minTags<span class="token operator">:</span> number <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>\n    maxTags<span class="token operator">:</span> number <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>\n    tagPatternRegExp<span class="token operator">:</span> RegExp<span class="token punctuation">;</span>\n    <span class="token keyword">get</span> <span class="token function">tagPattern</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> string <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>tagPatternRegExp <span class="token operator">?</span> <span class="token keyword">this</span><span class="token punctuation">.</span>tagPatternRegExp<span class="token punctuation">.</span>source <span class="token operator">:</span> <span class="token string">\'\'</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n    <span class="token keyword">set</span> <span class="token function">tagPattern</span><span class="token punctuation">(</span><span class="token parameter">value<span class="token operator">:</span> string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token keyword">try</span> <span class="token punctuation">{</span>\n                <span class="token keyword">this</span><span class="token punctuation">.</span>tagPatternRegExp <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RegExp</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                <span class="token keyword">this</span><span class="token punctuation">.</span>tagPatternRegExp <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>\n            <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n            <span class="token keyword">this</span><span class="token punctuation">.</span>tagPatternRegExp <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n    placeholder<span class="token operator">:</span> string <span class="token operator">=</span> <span class="token string">\'Add a tag\'</span><span class="token punctuation">;</span>\n    tagDelimiters<span class="token operator">:</span> string <span class="token operator">=</span> <span class="token string">\' ,\'</span><span class="token punctuation">;</span>\n    typeaheadEnabled<span class="token operator">:</span> boolean <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\n    selectFirst<span class="token operator">:</span> boolean <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>\n    dropDirection<span class="token operator">:</span> <span class="token string">\'up\'</span> <span class="token operator">|</span> <span class="token string">\'down\'</span> <span class="token operator">=</span> <span class="token string">\'down\'</span><span class="token punctuation">;</span>\n    showTypeaheadOnClick<span class="token operator">:</span> boolean <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>',example:"import { Component } from '@angular/core';\n\n@Component({\n    selector: 'app',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n    tags = ['Alpha', 'Beta', 'Kappa'];\n\n    allTags = ['Alpha', 'Beta', 'Gamma', 'Delta', 'Epsilon', 'Zeta', 'Eta', 'Theta', 'Iota', 'Kappa',\n        'Lambda', 'Mu', 'Nu', 'Xi', 'Omicron', 'Pi', 'Rho', 'Sigma', 'Tau', 'Upsilon', 'Phi', 'Chi',\n        'Psi', 'Omega'];\n\n    input: string;\n\n    addOnPaste: boolean = true;\n    disabled: boolean = false;\n    enforceTagLimits: boolean = false;\n    freeInput: boolean = true;\n    minTags: number = 1;\n    maxTags: number = 10;\n    tagPatternRegExp: RegExp;\n    get tagPattern(): string {\n        return this.tagPatternRegExp ? this.tagPatternRegExp.source : '';\n    }\n    set tagPattern(value: string) {\n        if (value) {\n            try {\n                this.tagPatternRegExp = new RegExp(value);\n            } catch (e) {\n                this.tagPatternRegExp = null;\n            }\n        } else {\n            this.tagPatternRegExp = null;\n        }\n    }\n    placeholder: string = 'Add a tag';\n    tagDelimiters: string = ' ,';\n    typeaheadEnabled: boolean = false;\n    selectFirst: boolean = true;\n    dropDirection: 'up' | 'down' = 'down';\n    showTypeaheadOnClick: boolean = false;\n}"}},74018:function(n){n.exports={snippet:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ng-template</span> <span class="token attr-name">#demoTagTemplate</span> <span class="token attr-name">let-tag</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>tag<span class="token punctuation">"</span></span> <span class="token attr-name">let-index</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>index<span class="token punctuation">"</span></span> <span class="token attr-name">let-api</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>api<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ux-icon</span> <span class="token attr-name">[name]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>tag.icon<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ux-icon</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>ux-tag-text<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>{{tag.text}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">*ngIf</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>api.canRemoveTagAt(index)<span class="token punctuation">"</span></span>\n            <span class="token attr-name">uxFocusIndicator</span>\n            <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span>\n            <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>ux-tag-remove<span class="token punctuation">"</span></span>\n            <span class="token attr-name">[disabled]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>disabled<span class="token punctuation">"</span></span>\n            <span class="token attr-name">(click)</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>api.removeTagAt(index); $event.stopPropagation();<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ux-icon</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>close<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ux-icon</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ng-template</span><span class="token punctuation">></span></span>',example:'<ng-template #demoTagTemplate let-tag="tag" let-index="index" let-api="api">\n    <ux-icon [name]="tag.icon"></ux-icon>\n    <span class="ux-tag-text">{{tag.text}}</span>\n    <button *ngIf="api.canRemoveTagAt(index)"\n            uxFocusIndicator\n            type="button"\n            class="ux-tag-remove"\n            [disabled]="disabled"\n            (click)="api.removeTagAt(index); $event.stopPropagation();">\n        <ux-icon name="close"></ux-icon>\n    </button>\n</ng-template>'}},60661:function(n){n.exports={snippet:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>toggleswitch-container<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ux-toggleswitch</span> <span class="token attr-name">[(value)]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>toggleSwitches.option1<span class="token punctuation">"</span></span> <span class="token attr-name">[disabled]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>toggleSwitchDisable<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n        Toggle 1\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ux-toggleswitch</span><span class="token punctuation">></span></span>\n\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ux-toggleswitch</span> <span class="token attr-name">[(value)]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>toggleSwitches.option2<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Toggle 2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ux-toggleswitch</span><span class="token punctuation">></span></span>\n\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ux-toggleswitch</span> <span class="token attr-name">[(value)]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>toggleSwitches.option3<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Toggle 3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ux-toggleswitch</span><span class="token punctuation">></span></span>\n\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ux-toggleswitch</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>toggleswitch-lg<span class="token punctuation">"</span></span> <span class="token attr-name">[(value)]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>toggleSwitches.option4<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n        Large Toggle\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ux-toggleswitch</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>m-t-md<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>code</span><span class="token punctuation">></span></span>toggleSwitches.option1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>code</span><span class="token punctuation">></span></span> is <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>em</span><span class="token punctuation">></span></span>{{toggleSwitches.option1}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>em</span><span class="token punctuation">></span></span>.\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>code</span><span class="token punctuation">></span></span>toggleSwitches.option2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>code</span><span class="token punctuation">></span></span> is <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>em</span><span class="token punctuation">></span></span>{{toggleSwitches.option2}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>em</span><span class="token punctuation">></span></span>.\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>code</span><span class="token punctuation">></span></span>toggleSwitches.option3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>code</span><span class="token punctuation">></span></span> is <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>em</span><span class="token punctuation">></span></span>{{toggleSwitches.option3}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>em</span><span class="token punctuation">></span></span>.\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>code</span><span class="token punctuation">></span></span>toggleSwitches.option4<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>code</span><span class="token punctuation">></span></span> is <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>em</span><span class="token punctuation">></span></span>{{toggleSwitches.option4}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>em</span><span class="token punctuation">></span></span>.\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>btn button-primary<span class="token punctuation">"</span></span> <span class="token attr-name">(click)</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>toggleSwitchDisable = !toggleSwitchDisable<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n  {{toggleSwitchDisable ? \'Click to enable Toggle 1\' : \'Click to disable Toggle 1\'}}\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>',example:'<div class="toggleswitch-container">\n    <ux-toggleswitch [(value)]="toggleSwitches.option1" [disabled]="toggleSwitchDisable">\n        Toggle 1\n    </ux-toggleswitch>\n\n    <ux-toggleswitch [(value)]="toggleSwitches.option2">Toggle 2</ux-toggleswitch>\n\n    <ux-toggleswitch [(value)]="toggleSwitches.option3">Toggle 3</ux-toggleswitch>\n\n    <ux-toggleswitch class="toggleswitch-lg" [(value)]="toggleSwitches.option4">\n        Large Toggle\n    </ux-toggleswitch>\n</div>\n\n<p class="m-t-md">\n    <code>toggleSwitches.option1</code> is <em>{{toggleSwitches.option1}}</em>.\n    <code>toggleSwitches.option2</code> is <em>{{toggleSwitches.option2}}</em>.\n    <code>toggleSwitches.option3</code> is <em>{{toggleSwitches.option3}}</em>.\n    <code>toggleSwitches.option4</code> is <em>{{toggleSwitches.option4}}</em>.\n</p>\n\n<button class="btn button-primary" (click)="toggleSwitchDisable = !toggleSwitchDisable">\n  {{toggleSwitchDisable ? \'Click to enable Toggle 1\' : \'Click to disable Toggle 1\'}}\n</button>'}},17400:function(n){n.exports={snippet:'<span class="token keyword">import</span> <span class="token punctuation">{</span> Component <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@angular/core\'</span><span class="token punctuation">;</span>\n\n@<span class="token function">Component</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    selector<span class="token operator">:</span> <span class="token string">\'app\'</span><span class="token punctuation">,</span>\n    templateUrl<span class="token operator">:</span> <span class="token string">\'./app.component.html\'</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">AppComponent</span> <span class="token punctuation">{</span>\n    toggleSwitches<span class="token operator">:</span> any<span class="token punctuation">;</span>\n    toggleSwitchDisable<span class="token operator">:</span> boolean<span class="token punctuation">;</span>\n\n    <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n\n        <span class="token keyword">this</span><span class="token punctuation">.</span>toggleSwitches <span class="token operator">=</span> <span class="token punctuation">{</span>\n            option1<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n            option2<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n            option3<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n            option4<span class="token operator">:</span> <span class="token boolean">false</span>\n        <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n        <span class="token keyword">this</span><span class="token punctuation">.</span>toggleSwitchDisable <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>',example:"import { Component } from '@angular/core';\n\n@Component({\n    selector: 'app',\n    templateUrl: './app.component.html'\n})\nexport class AppComponent {\n    toggleSwitches: any;\n    toggleSwitchDisable: boolean;\n\n    constructor() {\n\n        this.toggleSwitches = {\n            option1: true,\n            option2: false,\n            option3: false,\n            option4: false\n        };\n\n        this.toggleSwitchDisable = false;\n    }\n}"}},47856:function(n){n.exports={snippet:'<span class="token selector">.input-typeahead-form</span> <span class="token punctuation">{</span>\n    <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.drop-direction-up</span> <span class="token punctuation">{</span>\n    <span class="token property">margin-top</span><span class="token punctuation">:</span> 250px<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n',example:".input-typeahead-form {\n    position: relative;\n}\n\n.drop-direction-up {\n    margin-top: 250px;\n}\n"}},94494:function(n){n.exports={snippet:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>row<span class="token punctuation">"</span></span> <span class="token attr-name">[class.drop-direction-up]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>dropDirection === <span class="token punctuation">\'</span>up<span class="token punctuation">\'</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>col-md-12 has-feedback<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>input-typeahead-form<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">[(ngModel)]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>input<span class="token punctuation">"</span></span>\n                   <span class="token attr-name">[ngModelOptions]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{standalone: true}<span class="token punctuation">"</span></span>\n                   <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Enter Text<span class="token punctuation">"</span></span>\n                   <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>form-control<span class="token punctuation">"</span></span>\n                   <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span>\n                   <span class="token attr-name">(click)</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>dropdownOpen = true<span class="token punctuation">"</span></span>\n                   <span class="token attr-name">(keydown)</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>typeaheadKeyService.handleKey($event, typeahead)<span class="token punctuation">"</span></span>\n                   <span class="token attr-name">(keydown.escape)</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>dropdownOpen = false<span class="token punctuation">"</span></span>\n                   <span class="token attr-name">(blur)</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>dropdownOpen = false<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ux-typeahead</span> <span class="token attr-name">#typeahead</span>\n                          <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>typeahead-example<span class="token punctuation">"</span></span>\n                          <span class="token attr-name">[(open)]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>dropdownOpen<span class="token punctuation">"</span></span>\n                          <span class="token attr-name">[filter]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>input<span class="token punctuation">"</span></span>\n                          <span class="token attr-name">[options]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>loadOptionsFn<span class="token punctuation">"</span></span>\n                          <span class="token attr-name">[openOnFilterChange]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span>\n                          <span class="token attr-name">[pageSize]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>40<span class="token punctuation">"</span></span>\n                          <span class="token attr-name">[selectOnEnter]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>selectOnEnter<span class="token punctuation">"</span></span>\n                          <span class="token attr-name">[selectFirst]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>selectFirst<span class="token punctuation">"</span></span>\n                          <span class="token attr-name">[dropDirection]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>dropDirection<span class="token punctuation">"</span></span>\n                          <span class="token attr-name">(optionSelected)</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>input = $event.option<span class="token punctuation">"</span></span>\n                          <span class="token attr-name">[(recentOptions)]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>recentOptions<span class="token punctuation">"</span></span>\n                          <span class="token attr-name">[recentOptionsMaxCount]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>recentOptionsMaxCount<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ux-typeahead</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n',example:'<div class="row" [class.drop-direction-up]="dropDirection === \'up\'">\n    <div class="col-md-12 has-feedback">\n        <form class="input-typeahead-form">\n            <input [(ngModel)]="input"\n                   [ngModelOptions]="{standalone: true}"\n                   placeholder="Enter Text"\n                   class="form-control"\n                   type="text"\n                   (click)="dropdownOpen = true"\n                   (keydown)="typeaheadKeyService.handleKey($event, typeahead)"\n                   (keydown.escape)="dropdownOpen = false"\n                   (blur)="dropdownOpen = false">\n\n            <ux-typeahead #typeahead\n                          class="typeahead-example"\n                          [(open)]="dropdownOpen"\n                          [filter]="input"\n                          [options]="loadOptionsFn"\n                          [openOnFilterChange]="true"\n                          [pageSize]="40"\n                          [selectOnEnter]="selectOnEnter"\n                          [selectFirst]="selectFirst"\n                          [dropDirection]="dropDirection"\n                          (optionSelected)="input = $event.option"\n                          [(recentOptions)]="recentOptions"\n                          [recentOptionsMaxCount]="recentOptionsMaxCount">\n            </ux-typeahead>\n        </form>\n    </div>\n</div>\n'}},35446:function(n){n.exports={snippet:'<span class="token keyword">import</span> <span class="token punctuation">{</span> Component <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@angular/core\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token string">\'chance\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> TypeaheadKeyService <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@ux-aspects/ux-aspects\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> <span class="token keyword">of</span> <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'rxjs\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> delay <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'rxjs/operators\'</span><span class="token punctuation">;</span>\n\n@<span class="token function">Component</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    selector<span class="token operator">:</span> <span class="token string">\'app\'</span><span class="token punctuation">,</span>\n    templateUrl<span class="token operator">:</span> <span class="token string">\'app.component.html\'</span><span class="token punctuation">,</span>\n    styleUrls<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">\'./app.component.css\'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">AppComponent</span> <span class="token punctuation">{</span>\n\n    values<span class="token operator">:</span> ReadonlyArray<span class="token operator">&lt;</span>string<span class="token operator">></span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n    dropdownOpen<span class="token operator">:</span> boolean <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\n    selectOnEnter<span class="token operator">:</span> boolean <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>\n    dropDirection<span class="token operator">:</span> <span class="token string">\'auto\'</span> <span class="token operator">|</span> <span class="token string">\'up\'</span> <span class="token operator">|</span> <span class="token string">\'down\'</span> <span class="token operator">=</span> <span class="token string">\'down\'</span><span class="token punctuation">;</span>\n    selectFirst<span class="token operator">:</span> boolean <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>\n    recentOptions<span class="token operator">:</span> ReadonlyArray<span class="token operator">&lt;</span>string<span class="token operator">></span><span class="token punctuation">;</span>\n    recentOptionsMaxCount<span class="token operator">:</span> number <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">;</span>\n\n    input<span class="token operator">:</span> string <span class="token operator">=</span> <span class="token string">\'\'</span><span class="token punctuation">;</span>\n\n    loadOptionsFn <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">loadOptions</span><span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token comment">/** Load the options and filter the them */</span>\n    <span class="token function">loadOptions</span><span class="token punctuation">(</span>pageNum<span class="token operator">:</span> number<span class="token punctuation">,</span> pageSize<span class="token operator">:</span> number<span class="token punctuation">,</span> filter<span class="token operator">:</span> string<span class="token punctuation">)</span><span class="token operator">:</span> Promise<span class="token operator">&lt;</span>ReadonlyArray<span class="token operator">&lt;</span>string<span class="token operator">>></span> <span class="token punctuation">{</span>\n\n        <span class="token comment">// get the values for the current page based on the filter text provided</span>\n        <span class="token keyword">const</span> values <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>values<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token parameter">tag</span> <span class="token operator">=></span> tag<span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>filter<span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">!==</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>\n            <span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span>pageNum <span class="token operator">*</span> pageSize<span class="token punctuation">,</span> <span class="token punctuation">(</span>pageNum <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">*</span> pageSize<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token comment">// return the values after a delay to simulate server response time</span>\n        <span class="token keyword">return</span> <span class="token keyword">of</span><span class="token punctuation">(</span>values<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">delay</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toPromise</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter"><span class="token keyword">public</span> typeaheadKeyService<span class="token operator">:</span> TypeaheadKeyService<span class="token operator">&lt;</span>string<span class="token operator">></span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n\n        <span class="token comment">/* Adding values to typeahead list */</span>\n        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> index <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> index <span class="token operator">&lt;</span> <span class="token number">200</span><span class="token punctuation">;</span> index<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token keyword">this</span><span class="token punctuation">.</span>values <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span><span class="token keyword">this</span><span class="token punctuation">.</span>values<span class="token punctuation">,</span> chance<span class="token punctuation">.</span><span class="token function">name</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n\n<span class="token punctuation">}</span>',example:"import { Component } from '@angular/core';\nimport 'chance';\nimport { TypeaheadKeyService } from '@ux-aspects/ux-aspects';\nimport { of } from 'rxjs';\nimport { delay } from 'rxjs/operators';\n\n@Component({\n    selector: 'app',\n    templateUrl: 'app.component.html',\n    styleUrls: ['./app.component.css'],\n})\nexport class AppComponent {\n\n    values: ReadonlyArray<string> = [];\n\n    dropdownOpen: boolean = false;\n    selectOnEnter: boolean = true;\n    dropDirection: 'auto' | 'up' | 'down' = 'down';\n    selectFirst: boolean = true;\n    recentOptions: ReadonlyArray<string>;\n    recentOptionsMaxCount: number = 5;\n\n    input: string = '';\n\n    loadOptionsFn = this.loadOptions.bind(this);\n\n    /** Load the options and filter the them */\n    loadOptions(pageNum: number, pageSize: number, filter: string): Promise<ReadonlyArray<string>> {\n\n        // get the values for the current page based on the filter text provided\n        const values = this.values.filter(tag => tag.toLowerCase().indexOf(filter.toLowerCase()) !== -1)\n            .slice(pageNum * pageSize, (pageNum + 1) * pageSize);\n\n        // return the values after a delay to simulate server response time\n        return of(values).pipe(delay(1000)).toPromise();\n    }\n\n    constructor(public typeaheadKeyService: TypeaheadKeyService<string>) {\n\n        /* Adding values to typeahead list */\n        for (let index = 0; index < 200; index++) {\n            this.values = [...this.values, chance.name()];\n        }\n    }\n\n}"}},85491:function(n,a,t){var s={"./app.html":1915,"./app.keppel.html":26622,"./app.keppel.ts":37971,"./app.ts":90770};function e(n){var a=p(n);return t(a)}function p(n){if(!t.o(s,n)){var a=new Error("Cannot find module '"+n+"'");throw a.code="MODULE_NOT_FOUND",a}return s[n]}e.keys=function(){return Object.keys(s)},e.resolve=p,n.exports=e,e.id=85491},17341:function(n,a,t){var s={"./app.css":80700,"./app.html":88448,"./app.ts":26917};function e(n){var a=p(n);return t(a)}function p(n){if(!t.o(s,n)){var a=new Error("Cannot find module '"+n+"'");throw a.code="MODULE_NOT_FOUND",a}return s[n]}e.keys=function(){return Object.keys(s)},e.resolve=p,n.exports=e,e.id=17341},89766:function(n,a,t){var s={"./app.html":59721,"./app.ts":39298};function e(n){var a=p(n);return t(a)}function p(n){if(!t.o(s,n)){var a=new Error("Cannot find module '"+n+"'");throw a.code="MODULE_NOT_FOUND",a}return s[n]}e.keys=function(){return Object.keys(s)},e.resolve=p,n.exports=e,e.id=89766},5357:function(n,a,t){var s={"./app.css":16158,"./app.html":15745,"./app.ts":5552};function e(n){var a=p(n);return t(a)}function p(n){if(!t.o(s,n)){var a=new Error("Cannot find module '"+n+"'");throw a.code="MODULE_NOT_FOUND",a}return s[n]}e.keys=function(){return Object.keys(s)},e.resolve=p,n.exports=e,e.id=5357},82576:function(n,a,t){var s={"./app.html":30558,"./app.ts":25179};function e(n){var a=p(n);return t(a)}function p(n){if(!t.o(s,n)){var a=new Error("Cannot find module '"+n+"'");throw a.code="MODULE_NOT_FOUND",a}return s[n]}e.keys=function(){return Object.keys(s)},e.resolve=p,n.exports=e,e.id=82576},60028:function(n,a,t){var s={"./app.css":10410,"./app.html":82617,"./app.ts":10040};function e(n){var a=p(n);return t(a)}function p(n){if(!t.o(s,n)){var a=new Error("Cannot find module '"+n+"'");throw a.code="MODULE_NOT_FOUND",a}return s[n]}e.keys=function(){return Object.keys(s)},e.resolve=p,n.exports=e,e.id=60028},53574:function(n,a,t){var s={"./app.html":66063,"./app.ts":81122};function e(n){var a=p(n);return t(a)}function p(n){if(!t.o(s,n)){var a=new Error("Cannot find module '"+n+"'");throw a.code="MODULE_NOT_FOUND",a}return s[n]}e.keys=function(){return Object.keys(s)},e.resolve=p,n.exports=e,e.id=53574},57407:function(n,a,t){var s={"./app.html":80070,"./app.ts":36299,"./sample1.html":13711,"./sample1.ts":81482,"./sample2.ts":37519,"./sample3.ts":97066,"./sample4.html":80748,"./sample4.ts":94160};function e(n){var a=p(n);return t(a)}function p(n){if(!t.o(s,n)){var a=new Error("Cannot find module '"+n+"'");throw a.code="MODULE_NOT_FOUND",a}return s[n]}e.keys=function(){return Object.keys(s)},e.resolve=p,n.exports=e,e.id=57407},19232:function(n,a,t){var s={"./app.css":41386,"./app.html":76008,"./app.ts":17993,"./tag-template.html":74018};function e(n){var a=p(n);return t(a)}function p(n){if(!t.o(s,n)){var a=new Error("Cannot find module '"+n+"'");throw a.code="MODULE_NOT_FOUND",a}return s[n]}e.keys=function(){return Object.keys(s)},e.resolve=p,n.exports=e,e.id=19232},22582:function(n,a,t){var s={"./app.html":60661,"./app.ts":17400};function e(n){var a=p(n);return t(a)}function p(n){if(!t.o(s,n)){var a=new Error("Cannot find module '"+n+"'");throw a.code="MODULE_NOT_FOUND",a}return s[n]}e.keys=function(){return Object.keys(s)},e.resolve=p,n.exports=e,e.id=22582},76893:function(n,a,t){var s={"./app.css":47856,"./app.html":94494,"./app.ts":35446};function e(n){var a=p(n);return t(a)}function p(n){if(!t.o(s,n)){var a=new Error("Cannot find module '"+n+"'");throw a.code="MODULE_NOT_FOUND",a}return s[n]}e.keys=function(){return Object.keys(s)},e.resolve=p,n.exports=e,e.id=76893},2304:function(n,a,t){"use strict";t.r(a),t.d(a,{ComponentsInputControlsModule:function(){return vn}});var s,e=t(56475),p=t(65410),o=t(94121),l=t(3955),c=t(7606),u=t(26966),i=t(95892),r=t(36941),k=t(86093),d=t(62536),m=t(29872),g=t(95490),x=t(70734),h=t(95445),f=(s=function(n,a){return(s=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,a){n.__proto__=a}||function(n,a){for(var t in a)Object.prototype.hasOwnProperty.call(a,t)&&(n[t]=a[t])})(n,a)},function(n,a){if("function"!=typeof a&&null!==a)throw new TypeError("Class extends value "+String(a)+" is not a constructor or null");function t(){this.constructor=n}s(n,a),n.prototype=null===a?Object.create(a):(t.prototype=a.prototype,new t)}),v=function(n,a){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(n,a)};function b(n,a){if(1&n){var t=m["\u0275\u0275getCurrentView"]();m["\u0275\u0275elementContainerStart"](0),m["\u0275\u0275text"](1,"\n        "),m["\u0275\u0275elementStart"](2,"div",16),m["\u0275\u0275text"](3,"\n            "),m["\u0275\u0275elementStart"](4,"ux-checkbox",17),m["\u0275\u0275listener"]("valueChange",(function(n){return m["\u0275\u0275restoreView"](t),m["\u0275\u0275nextContext"]().checkModel.option1=n})),m["\u0275\u0275text"](5,"\n                Option1\n            "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](6,"\n            "),m["\u0275\u0275elementStart"](7,"ux-checkbox",18),m["\u0275\u0275listener"]("valueChange",(function(n){return m["\u0275\u0275restoreView"](t),m["\u0275\u0275nextContext"]().checkModel.option2=n})),m["\u0275\u0275text"](8,"\n                Option2\n            "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](9,"\n            "),m["\u0275\u0275elementStart"](10,"ux-checkbox",19),m["\u0275\u0275listener"]("valueChange",(function(n){return m["\u0275\u0275restoreView"](t),m["\u0275\u0275nextContext"]().checkModel.option3=n})),m["\u0275\u0275text"](11,"\n                Option3\n            "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](12,"\n            "),m["\u0275\u0275elementStart"](13,"ux-checkbox",19),m["\u0275\u0275listener"]("valueChange",(function(n){return m["\u0275\u0275restoreView"](t),m["\u0275\u0275nextContext"]().checkModel.option4=n})),m["\u0275\u0275text"](14,"\n                Onsectetur adipiscing elit. Inte adipiscing elit onsectetur adipiscing elit. Inte adipiscing elit\n                onsectetur adipiscing elit. Inte adipiscing elit onsectetur adipiscing elit. Inte adipiscing elit\n                onsectetur adipiscing elit. Inte adipiscing elit onsectetur adipiscing elit.\n            "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](15,"\n        "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](16,"\n\n        "),m["\u0275\u0275elementStart"](17,"p",20),m["\u0275\u0275text"](18,"\n            "),m["\u0275\u0275elementStart"](19,"code"),m["\u0275\u0275text"](20,"checkModel.option1"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](21," is "),m["\u0275\u0275elementStart"](22,"em"),m["\u0275\u0275text"](23),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](24,".\n            "),m["\u0275\u0275elementStart"](25,"code"),m["\u0275\u0275text"](26,"checkModel.option2"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](27," is "),m["\u0275\u0275elementStart"](28,"em"),m["\u0275\u0275text"](29),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](30,".\n            "),m["\u0275\u0275elementStart"](31,"code"),m["\u0275\u0275text"](32,"checkModel.option3"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](33," is "),m["\u0275\u0275elementStart"](34,"em"),m["\u0275\u0275text"](35),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](36,".\n            "),m["\u0275\u0275elementStart"](37,"code"),m["\u0275\u0275text"](38,"checkModel.option4"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](39," is "),m["\u0275\u0275elementStart"](40,"em"),m["\u0275\u0275text"](41),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](42,".\n        "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](43,"\n\n        "),m["\u0275\u0275elementStart"](44,"div",21),m["\u0275\u0275text"](45,"\n            "),m["\u0275\u0275elementStart"](46,"button",22),m["\u0275\u0275listener"]("click",(function(){m["\u0275\u0275restoreView"](t);var n=m["\u0275\u0275nextContext"]();return n.disableCheck=!n.disableCheck})),m["\u0275\u0275text"](47),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](48,"\n\n            "),m["\u0275\u0275elementStart"](49,"button",23),m["\u0275\u0275listener"]("click",(function(){m["\u0275\u0275restoreView"](t);var n=m["\u0275\u0275nextContext"]();return n.checkModel.option2=n.indeterminateValue})),m["\u0275\u0275text"](50,"\n                Set Option2 to indeterminate state\n            "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](51,"\n        "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](52,"\n    "),m["\u0275\u0275elementContainerEnd"]()}if(2&n){var s=m["\u0275\u0275nextContext"]();m["\u0275\u0275advance"](4),m["\u0275\u0275property"]("value",s.checkModel.option1)("disabled",s.disableCheck),m["\u0275\u0275advance"](3),m["\u0275\u0275property"]("value",s.checkModel.option2)("indeterminateValue",s.indeterminateValue),m["\u0275\u0275advance"](3),m["\u0275\u0275property"]("value",s.checkModel.option3),m["\u0275\u0275advance"](3),m["\u0275\u0275property"]("value",s.checkModel.option4),m["\u0275\u0275advance"](10),m["\u0275\u0275textInterpolate"](s.checkModel.option1),m["\u0275\u0275advance"](6),m["\u0275\u0275textInterpolate"](s.checkModel.option2),m["\u0275\u0275advance"](6),m["\u0275\u0275textInterpolate"](s.checkModel.option3),m["\u0275\u0275advance"](6),m["\u0275\u0275textInterpolate"](s.checkModel.option4),m["\u0275\u0275advance"](6),m["\u0275\u0275textInterpolate1"]("\n                ",s.disableCheck?"Enable Option1":"Disable Option1","\n            ")}}function y(n,a){if(1&n){var t=m["\u0275\u0275getCurrentView"]();m["\u0275\u0275elementContainerStart"](0),m["\u0275\u0275text"](1,"\n        "),m["\u0275\u0275elementStart"](2,"div",16),m["\u0275\u0275text"](3,"\n            "),m["\u0275\u0275elementStart"](4,"ux-checkbox",24),m["\u0275\u0275listener"]("valueChange",(function(n){return m["\u0275\u0275restoreView"](t),m["\u0275\u0275nextContext"]().checkModel.option1=n})),m["\u0275\u0275text"](5,"\n                Option1\n            "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](6,"\n            "),m["\u0275\u0275elementStart"](7,"ux-checkbox",25),m["\u0275\u0275listener"]("valueChange",(function(n){return m["\u0275\u0275restoreView"](t),m["\u0275\u0275nextContext"]().checkModel.option2=n})),m["\u0275\u0275text"](8,"\n                Option2\n            "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](9,"\n            "),m["\u0275\u0275elementStart"](10,"ux-checkbox",26),m["\u0275\u0275listener"]("valueChange",(function(n){return m["\u0275\u0275restoreView"](t),m["\u0275\u0275nextContext"]().checkModel.option3=n})),m["\u0275\u0275text"](11,"\n                Option3\n            "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](12,"\n            "),m["\u0275\u0275elementStart"](13,"ux-checkbox",26),m["\u0275\u0275listener"]("valueChange",(function(n){return m["\u0275\u0275restoreView"](t),m["\u0275\u0275nextContext"]().checkModel.option4=n})),m["\u0275\u0275text"](14,"\n                Onsectetur adipiscing elit. Inte adipiscing elit onsectetur adipiscing elit. Inte adipiscing elit\n                onsectetur adipiscing elit. Inte adipiscing elit onsectetur adipiscing elit. Inte adipiscing elit\n                onsectetur adipiscing elit. Inte adipiscing elit onsectetur adipiscing elit.\n            "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](15,"\n        "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](16,"\n\n        "),m["\u0275\u0275elementStart"](17,"p",20),m["\u0275\u0275text"](18,"\n            "),m["\u0275\u0275elementStart"](19,"code"),m["\u0275\u0275text"](20,"checkModel.option1"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](21," is "),m["\u0275\u0275elementStart"](22,"em"),m["\u0275\u0275text"](23),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](24,".\n            "),m["\u0275\u0275elementStart"](25,"code"),m["\u0275\u0275text"](26,"checkModel.option2"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](27," is "),m["\u0275\u0275elementStart"](28,"em"),m["\u0275\u0275text"](29),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](30,".\n            "),m["\u0275\u0275elementStart"](31,"code"),m["\u0275\u0275text"](32,"checkModel.option3"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](33," is "),m["\u0275\u0275elementStart"](34,"em"),m["\u0275\u0275text"](35),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](36,".\n            "),m["\u0275\u0275elementStart"](37,"code"),m["\u0275\u0275text"](38,"checkModel.option4"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](39," is "),m["\u0275\u0275elementStart"](40,"em"),m["\u0275\u0275text"](41),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](42,".\n        "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](43,"\n\n        "),m["\u0275\u0275elementStart"](44,"div",21),m["\u0275\u0275text"](45,"\n            "),m["\u0275\u0275elementStart"](46,"button",22),m["\u0275\u0275listener"]("click",(function(){m["\u0275\u0275restoreView"](t);var n=m["\u0275\u0275nextContext"]();return n.disableCheck=!n.disableCheck})),m["\u0275\u0275text"](47),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](48,"\n\n            "),m["\u0275\u0275elementStart"](49,"button",23),m["\u0275\u0275listener"]("click",(function(){m["\u0275\u0275restoreView"](t);var n=m["\u0275\u0275nextContext"]();return n.checkModel.option2=n.indeterminateValue})),m["\u0275\u0275text"](50,"\n                Set Option2 to indeterminate state\n            "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](51,"\n\n            "),m["\u0275\u0275elementStart"](52,"button",27),m["\u0275\u0275listener"]("click",(function(){m["\u0275\u0275restoreView"](t);var n=m["\u0275\u0275nextContext"]();return n.simplified=!n.simplified})),m["\u0275\u0275text"](53),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](54,"\n        "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](55,"\n    "),m["\u0275\u0275elementContainerEnd"]()}if(2&n){var s=m["\u0275\u0275nextContext"]();m["\u0275\u0275advance"](4),m["\u0275\u0275property"]("value",s.checkModel.option1)("disabled",s.disableCheck)("simplified",s.simplified),m["\u0275\u0275advance"](3),m["\u0275\u0275property"]("value",s.checkModel.option2)("indeterminateValue",s.indeterminateValue)("simplified",s.simplified),m["\u0275\u0275advance"](3),m["\u0275\u0275property"]("value",s.checkModel.option3)("simplified",s.simplified),m["\u0275\u0275advance"](3),m["\u0275\u0275property"]("value",s.checkModel.option4)("simplified",s.simplified),m["\u0275\u0275advance"](10),m["\u0275\u0275textInterpolate"](s.checkModel.option1),m["\u0275\u0275advance"](6),m["\u0275\u0275textInterpolate"](s.checkModel.option2),m["\u0275\u0275advance"](6),m["\u0275\u0275textInterpolate"](s.checkModel.option3),m["\u0275\u0275advance"](6),m["\u0275\u0275textInterpolate"](s.checkModel.option4),m["\u0275\u0275advance"](6),m["\u0275\u0275textInterpolate1"]("\n                ",s.disableCheck?"Enable Option1":"Disable Option1","\n            "),m["\u0275\u0275advance"](6),m["\u0275\u0275textInterpolate1"]("\n                ",s.simplified?"Disable Simplified Style":"Enable Simplified Style","\n            ")}}function S(n,a){1&n&&(m["\u0275\u0275elementStart"](0,"tr",28),m["\u0275\u0275text"](1,"\n        If set to "),m["\u0275\u0275elementStart"](2,"code"),m["\u0275\u0275text"](3,"true"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](4," the checkbox will be displayed without a border and background.\n    "),m["\u0275\u0275elementEnd"]())}var w=function(n){function a(){var a=n.call(this,t(85491))||this;return a.sliderValue=50,a.sliderOptions={type:"value",handles:{style:"button",callout:{trigger:"none",background:"#464646",color:"#fff",formatter:function(n){return n}}},track:{height:"wide",min:0,max:100,ticks:{snap:"none",major:{show:!0,steps:10,labels:!0,formatter:function(n){return n}},minor:{show:!0,steps:5,labels:!1,formatter:function(n){return n}}},colors:{lower:"#f2f2f2",range:"rgba(96,121,141, 0.75)",higher:"#f2f2f2"}}},a.playground=function(){return{files:{"app.component.ts":a.snippets.raw.appTs,"app.component.html":a.snippets.raw.appHtml},modules:[{imports:["CheckboxModule"],library:"@ux-aspects/ux-aspects"}]}},a.checkModel={option1:!0,option2:!1,option3:!1,option4:!1},a.simplified=!1,a.indeterminateValue=-1,a.disableCheck=!1,a}return f(a,n),a.\u0275fac=function(n){return new(n||a)},a.\u0275cmp=m["\u0275\u0275defineComponent"]({type:a,selectors:[["uxd-components-checkbox"]],features:[m["\u0275\u0275InheritDefinitionFeature"]],decls:66,vars:6,consts:[[3,"ngSwitch"],[4,"ngSwitchDefault"],[4,"ngSwitchCase"],["tableTitle","Inputs"],["uxd-api-property","","name","value","type","any","defaultValue","false"],["uxd-api-property","","name","indeterminateValue","type","any","defaultValue","-1"],["uxd-api-property","","name","simplified","type","boolean","defaultValue","false",4,"ngIf"],["uxd-api-property","","name","clickable","type","boolean","defaultValue","false"],["uxd-api-property","","name","required","type","boolean","defaultValue","false"],["tableTitle","Outputs"],["uxd-api-property","","name","valueChange","type","any"],[3,"minimal"],["heading","HTML"],[3,"content"],["heading","TypeScript"],["language","javascript",3,"content"],[1,"checkbox-container"],[3,"value","disabled","valueChange"],[3,"value","indeterminateValue","valueChange"],[3,"value","valueChange"],[1,"m-t"],[1,"btn-container","m-t"],[1,"btn","button-primary",3,"click"],[1,"btn","button-secondary",3,"click"],[3,"value","disabled","simplified","valueChange"],[3,"value","indeterminateValue","simplified","valueChange"],[3,"value","simplified","valueChange"],[1,"btn","button-accent",3,"click"],["uxd-api-property","","name","simplified","type","boolean","defaultValue","false"]],template:function(n,a){1&n&&(m["\u0275\u0275elementContainerStart"](0,0),m["\u0275\u0275text"](1,"\n    "),m["\u0275\u0275template"](2,b,53,11,"ng-container",1),m["\u0275\u0275text"](3,"\n\n    "),m["\u0275\u0275template"](4,y,56,16,"ng-container",2),m["\u0275\u0275text"](5,"\n"),m["\u0275\u0275elementContainerEnd"](),m["\u0275\u0275text"](6,"\n\n"),m["\u0275\u0275element"](7,"hr"),m["\u0275\u0275text"](8,"\n\n"),m["\u0275\u0275elementStart"](9,"p"),m["\u0275\u0275text"](10,"In an Angular application, "),m["\u0275\u0275elementStart"](11,"code"),m["\u0275\u0275text"](12,"ngModel"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](13," may be used to bind the control to a form."),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](14,"\n\n"),m["\u0275\u0275elementStart"](15,"p"),m["\u0275\u0275text"](16,"The following attributes can be set to customize the behavior of the control."),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](17,"\n\n"),m["\u0275\u0275elementStart"](18,"uxd-api-properties",3),m["\u0275\u0275text"](19,"\n    "),m["\u0275\u0275elementStart"](20,"tr",4),m["\u0275\u0275text"](21,"\n        Determines if the checkbox should be checked, unchecked or indeterminate.\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](22,"\n    "),m["\u0275\u0275elementStart"](23,"tr",5),m["\u0275\u0275text"](24,"\n        If "),m["\u0275\u0275elementStart"](25,"code"),m["\u0275\u0275text"](26,"value"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](27," is set to the indeterminate value specified using this attribute, it will\n        neither display the checkbox as checked or unchecked, and will instead show the indeterminate\n        variation.\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](28,"\n    "),m["\u0275\u0275template"](29,S,5,0,"tr",6),m["\u0275\u0275text"](30,"\n    "),m["\u0275\u0275elementStart"](31,"tr",7),m["\u0275\u0275text"](32,"\n        If set to "),m["\u0275\u0275elementStart"](33,"code"),m["\u0275\u0275text"](34,"true"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](35," the checkbox will not toggle state when clicked.\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](36,"\n    "),m["\u0275\u0275elementStart"](37,"tr",8),m["\u0275\u0275text"](38,"\n        If set to "),m["\u0275\u0275elementStart"](39,"code"),m["\u0275\u0275text"](40,"true"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](41," the checkbox will be marked as required.\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](42,"\n"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](43,"\n\n"),m["\u0275\u0275elementStart"](44,"uxd-api-properties",9),m["\u0275\u0275text"](45,"\n    "),m["\u0275\u0275elementStart"](46,"tr",10),m["\u0275\u0275text"](47,"\n        Emits when value has been changed.\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](48,"\n"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](49,"\n\n"),m["\u0275\u0275elementStart"](50,"p"),m["\u0275\u0275text"](51,"The code used for the above example is shown below:"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](52,"\n\n"),m["\u0275\u0275elementStart"](53,"ux-tabset",11),m["\u0275\u0275text"](54,"\n    "),m["\u0275\u0275elementStart"](55,"ux-tab",12),m["\u0275\u0275text"](56,"\n        "),m["\u0275\u0275element"](57,"uxd-snippet",13),m["\u0275\u0275text"](58,"\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](59,"\n    "),m["\u0275\u0275elementStart"](60,"ux-tab",14),m["\u0275\u0275text"](61,"\n        "),m["\u0275\u0275element"](62,"uxd-snippet",15),m["\u0275\u0275text"](63,"\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](64,"\n"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](65,"\n")),2&n&&(m["\u0275\u0275property"]("ngSwitch",a.theme),m["\u0275\u0275advance"](4),m["\u0275\u0275property"]("ngSwitchCase",a.SiteThemeId.Keppel),m["\u0275\u0275advance"](25),m["\u0275\u0275property"]("ngIf",a.theme===a.SiteThemeId.Keppel),m["\u0275\u0275advance"](24),m["\u0275\u0275property"]("minimal",!1),m["\u0275\u0275advance"](4),m["\u0275\u0275property"]("content",a.snippets.compiled.appHtml),m["\u0275\u0275advance"](5),m["\u0275\u0275property"]("content",a.snippets.compiled.appTs))},directives:[e.NgSwitch,e.NgSwitchDefault,e.NgSwitchCase,g.$,x.S,e.NgIf,l.TabsetComponent,l.TabComponent,h.j,l.CheckboxComponent,l.DefaultFocusIndicatorDirective],encapsulation:2}),a=function(n,a,t,s){var e,p=arguments.length,o=p<3?a:null===s?s=Object.getOwnPropertyDescriptor(a,t):s;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(n,a,t,s);else for(var l=n.length-1;l>=0;l--)(e=n[l])&&(o=(p<3?e(o):p>3?e(a,t,o):e(a,t))||o);return p>3&&o&&Object.defineProperty(a,t,o),o}([(0,d.cG)("ComponentsCheckboxComponent"),v("design:paramtypes",[])],a)}(k.u),E=function(){var n=function(a,t){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,a){n.__proto__=a}||function(n,a){for(var t in a)Object.prototype.hasOwnProperty.call(a,t)&&(n[t]=a[t])})(a,t)};return function(a,t){if("function"!=typeof t&&null!==t)throw new TypeError("Class extends value "+String(t)+" is not a constructor or null");function s(){this.constructor=a}n(a,t),a.prototype=null===t?Object.create(t):(s.prototype=t.prototype,new s)}}(),C=function(n,a){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(n,a)},T=function(n){function a(){var a=n.call(this,t(17341))||this;return a.playground={files:{"app.component.html":a.snippets.raw.appHtml,"app.component.ts":a.snippets.raw.appTs,"app.component.css":a.snippets.raw.appCss},modules:[{imports:["AutoGrowModule"],library:"@ux-aspects/ux-aspects"}]},a}return E(a,n),a.\u0275fac=function(n){return new(n||a)},a.\u0275cmp=m["\u0275\u0275defineComponent"]({type:a,selectors:[["uxd-expanding-text-area"]],features:[m["\u0275\u0275InheritDefinitionFeature"]],decls:37,vars:3,consts:[[1,"row"],[1,"col-md-6","col-xs-12"],["uxAutoGrow","","rows","1","placeholder","Enter text",1,"form-control","expanding-textarea-demo"],[3,"minimal"],["heading","HTML"],[3,"content"],["heading","CSS"]],template:function(n,a){1&n&&(m["\u0275\u0275elementStart"](0,"div",0),m["\u0275\u0275text"](1,"\n    "),m["\u0275\u0275elementStart"](2,"div",1),m["\u0275\u0275text"](3,"\n        "),m["\u0275\u0275element"](4,"textarea",2),m["\u0275\u0275text"](5,"\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](6,"\n"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](7,"\n\n"),m["\u0275\u0275element"](8,"hr"),m["\u0275\u0275text"](9,"\n\n"),m["\u0275\u0275elementStart"](10,"p"),m["\u0275\u0275text"](11,"\n    Expanding textareas have the same functionality as regular textareas however with the additional feature that they can\n    grow in height as more content is added to them.\n"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](12,"\n\n"),m["\u0275\u0275elementStart"](13,"p"),m["\u0275\u0275text"](14,"\n    To set a limit on how large the textarea can grow add a "),m["\u0275\u0275elementStart"](15,"code"),m["\u0275\u0275text"](16,"max-height"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](17," using CSS.\n    If the content becomes larger than the max height a vertical scrollbar will appear.\n"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](18,"\n\n"),m["\u0275\u0275elementStart"](19,"p"),m["\u0275\u0275text"](20,"To create an expanding textarea use the "),m["\u0275\u0275elementStart"](21,"code"),m["\u0275\u0275text"](22,"uxAutoGrow"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](23," directive."),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](24,"\n\n"),m["\u0275\u0275elementStart"](25,"ux-tabset",3),m["\u0275\u0275text"](26,"\n    "),m["\u0275\u0275elementStart"](27,"ux-tab",4),m["\u0275\u0275text"](28,"\n        "),m["\u0275\u0275element"](29,"uxd-snippet",5),m["\u0275\u0275text"](30,"\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](31,"\n    "),m["\u0275\u0275elementStart"](32,"ux-tab",6),m["\u0275\u0275text"](33,"\n        "),m["\u0275\u0275element"](34,"uxd-snippet",5),m["\u0275\u0275text"](35,"\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](36,"\n"),m["\u0275\u0275elementEnd"]()),2&n&&(m["\u0275\u0275advance"](25),m["\u0275\u0275property"]("minimal",!1),m["\u0275\u0275advance"](4),m["\u0275\u0275property"]("content",a.snippets.compiled.appHtml),m["\u0275\u0275advance"](5),m["\u0275\u0275property"]("content",a.snippets.compiled.appCss))},directives:[l.AutoGrowDirective,l.TabsetComponent,l.TabComponent,h.j],styles:[".expanding-textarea-demo[_ngcontent-%COMP%] {\n  max-height: 87px;\n}"],changeDetection:0}),a=function(n,a,t,s){var e,p=arguments.length,o=p<3?a:null===s?s=Object.getOwnPropertyDescriptor(a,t):s;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(n,a,t,s);else for(var l=n.length-1;l>=0;l--)(e=n[l])&&(o=(p<3?e(o):p>3?e(a,t,o):e(a,t))||o);return p>3&&o&&Object.defineProperty(a,t,o),o}([(0,d.cG)("ComponentsExpandingTextAreaComponent"),C("design:paramtypes",[])],a)}(k.u),O=function(){var n=function(a,t){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,a){n.__proto__=a}||function(n,a){for(var t in a)Object.prototype.hasOwnProperty.call(a,t)&&(n[t]=a[t])})(a,t)};return function(a,t){if("function"!=typeof t&&null!==t)throw new TypeError("Class extends value "+String(t)+" is not a constructor or null");function s(){this.constructor=a}n(a,t),a.prototype=null===t?Object.create(t):(s.prototype=t.prototype,new s)}}(),q=function(n,a){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(n,a)},I=function(n){function a(a){var s=n.call(this,t(89766))||this;return s.playground={files:{"app.component.html":s.snippets.raw.appHtml,"app.component.ts":s.snippets.raw.appTs},modules:[{imports:["FloatLabelModule"],library:"@ux-aspects/ux-aspects"}]},s.demoForm=a.group({username:[""],location:[""]}),s}return O(a,n),Object.defineProperty(a.prototype,"locationValue",{get:function(){return this.demoForm.get("location").value},set:function(n){this.demoForm.get("location").setValue(n)},enumerable:!1,configurable:!0}),a.\u0275fac=function(n){return new(n||a)(m["\u0275\u0275directiveInject"](p.FormBuilder))},a.\u0275cmp=m["\u0275\u0275defineComponent"]({type:a,selectors:[["uxd-float-label"]],features:[m["\u0275\u0275InheritDefinitionFeature"]],decls:119,vars:8,consts:[["novalidate","",3,"formGroup"],[1,"form-group","row"],[1,"col-sm-4"],["mode","input",3,"uxFloatLabel"],["type","text","id","username","placeholder","User Name","formControlName","username",1,"form-control"],["username",""],["mode","input",3,"uxFloatLabel","value"],[1,"input-group"],["type","text","id","location","placeholder","Location","formControlName","location",1,"form-control","ux-float-input"],["location",""],[1,"input-group-btn"],["type","button","aria-label","Current Location",1,"btn","btn-icon","button-primary",3,"click"],["name","location"],["tableTitle","Inputs"],["uxd-api-property","","name","uxFloatLabel","type","HTMLInputElement",3,"required"],["uxd-api-property","","name","value","type","any"],["uxd-api-property","","name","mode","type","'focus' | 'input'","defaultValue","focus"],[3,"minimal"],["heading","HTML"],[3,"content"],["heading","TypeScript"]],template:function(n,a){if(1&n&&(m["\u0275\u0275elementStart"](0,"form",0),m["\u0275\u0275text"](1,"\n\n    "),m["\u0275\u0275elementStart"](2,"div",1),m["\u0275\u0275text"](3,"\n        "),m["\u0275\u0275elementStart"](4,"div",2),m["\u0275\u0275text"](5,"\n            "),m["\u0275\u0275elementStart"](6,"label",3),m["\u0275\u0275text"](7,"User Name"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](8,"\n            "),m["\u0275\u0275element"](9,"input",4,5),m["\u0275\u0275text"](11,"\n        "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](12,"\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](13,"\n\n    "),m["\u0275\u0275elementStart"](14,"div",1),m["\u0275\u0275text"](15,"\n        "),m["\u0275\u0275elementStart"](16,"div",2),m["\u0275\u0275text"](17,"\n            "),m["\u0275\u0275elementStart"](18,"label",6),m["\u0275\u0275text"](19,"Location"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](20,"\n            "),m["\u0275\u0275elementStart"](21,"div",7),m["\u0275\u0275text"](22,"\n                "),m["\u0275\u0275element"](23,"input",8,9),m["\u0275\u0275text"](25,"\n                "),m["\u0275\u0275elementStart"](26,"div",10),m["\u0275\u0275text"](27,"\n                    "),m["\u0275\u0275elementStart"](28,"button",11),m["\u0275\u0275listener"]("click",(function(){return a.locationValue="Here"})),m["\u0275\u0275text"](29,"\n                        "),m["\u0275\u0275element"](30,"ux-icon",12),m["\u0275\u0275text"](31,"\n                    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](32,"\n                "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](33,"\n            "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](34,"\n        "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](35,"\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](36,"\n\n"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](37,"\n\n"),m["\u0275\u0275element"](38,"hr"),m["\u0275\u0275text"](39,"\n\n"),m["\u0275\u0275elementStart"](40,"p"),m["\u0275\u0275text"](41,"\n    Float Labels allow for placeholders that will move to remain visible when the user is typing in the input field.\n    This pattern is useful for forms where having separate labels for inputs is undesirable, and allows the user to keep\n    the context of an input field even after they have entered a value.\n"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](42,"\n\n"),m["\u0275\u0275elementStart"](43,"p"),m["\u0275\u0275text"](44,"\n    Add the "),m["\u0275\u0275elementStart"](45,"code"),m["\u0275\u0275text"](46,"uxFloatLabel"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](47," directive to the "),m["\u0275\u0275elementStart"](48,"code"),m["\u0275\u0275text"](49,"label"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](50," element, and bind it to the associated\n    "),m["\u0275\u0275elementStart"](51,"code"),m["\u0275\u0275text"](52,"input"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](53," element. The "),m["\u0275\u0275elementStart"](54,"code"),m["\u0275\u0275text"](55,"ux-float-input"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](56," class can be used to style the "),m["\u0275\u0275elementStart"](57,"code"),m["\u0275\u0275text"](58,"input"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](59," if it\n    is part of an input group.\n"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](60,"\n\n"),m["\u0275\u0275elementStart"](61,"p"),m["\u0275\u0275text"](62,"\n    The following properties can be used to configure "),m["\u0275\u0275elementStart"](63,"code"),m["\u0275\u0275text"](64,"uxFloatLabel"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](65,":\n"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](66,"\n\n"),m["\u0275\u0275elementStart"](67,"uxd-api-properties",13),m["\u0275\u0275text"](68,"\n    "),m["\u0275\u0275elementStart"](69,"tr",14),m["\u0275\u0275text"](70,"\n        The "),m["\u0275\u0275elementStart"](71,"code"),m["\u0275\u0275text"](72,"input"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](73," element associated with the label.\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](74,"\n    "),m["\u0275\u0275elementStart"](75,"tr",15),m["\u0275\u0275text"](76,"\n        The model value which is bound to the input. This is required if the input is updated programmatically, to\n        ensure that the label is positioned correctly. The code below shows how to bind this in a reactive form.\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](77,"\n    "),m["\u0275\u0275elementStart"](78,"tr",16),m["\u0275\u0275text"](79,"\n        "),m["\u0275\u0275elementStart"](80,"p"),m["\u0275\u0275text"](81,"\n            Determines which events cause the label to be raised.\n        "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](82,"\n        "),m["\u0275\u0275elementStart"](83,"ul"),m["\u0275\u0275text"](84,"\n            "),m["\u0275\u0275elementStart"](85,"li"),m["\u0275\u0275elementStart"](86,"code"),m["\u0275\u0275text"](87,"focus"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](88,": The label is raised on focus, and remains raised while the input contains text."),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](89,"\n            "),m["\u0275\u0275elementStart"](90,"li"),m["\u0275\u0275elementStart"](91,"code"),m["\u0275\u0275text"](92,"input"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](93,": The label is raised when the user enters text. This mode is designed to be used in\n                combination with the "),m["\u0275\u0275elementStart"](94,"code"),m["\u0275\u0275text"](95,"input"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](96," "),m["\u0275\u0275elementStart"](97,"code"),m["\u0275\u0275text"](98,"placeholder"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](99," attribute."),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](100,"\n        "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](101,"\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](102,"\n"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](103,"\n\n"),m["\u0275\u0275elementStart"](104,"p"),m["\u0275\u0275text"](105,"\n    The following code is used to create the example above:\n"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](106,"\n\n"),m["\u0275\u0275elementStart"](107,"ux-tabset",17),m["\u0275\u0275text"](108,"\n    "),m["\u0275\u0275elementStart"](109,"ux-tab",18),m["\u0275\u0275text"](110,"\n        "),m["\u0275\u0275element"](111,"uxd-snippet",19),m["\u0275\u0275text"](112,"\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](113,"\n    "),m["\u0275\u0275elementStart"](114,"ux-tab",20),m["\u0275\u0275text"](115,"\n        "),m["\u0275\u0275element"](116,"uxd-snippet",19),m["\u0275\u0275text"](117,"\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](118,"\n"),m["\u0275\u0275elementEnd"]()),2&n){var t=m["\u0275\u0275reference"](10),s=m["\u0275\u0275reference"](24);m["\u0275\u0275property"]("formGroup",a.demoForm),m["\u0275\u0275advance"](6),m["\u0275\u0275property"]("uxFloatLabel",t),m["\u0275\u0275advance"](12),m["\u0275\u0275property"]("uxFloatLabel",s)("value",a.locationValue),m["\u0275\u0275advance"](51),m["\u0275\u0275property"]("required",!0),m["\u0275\u0275advance"](38),m["\u0275\u0275property"]("minimal",!1),m["\u0275\u0275advance"](4),m["\u0275\u0275property"]("content",a.snippets.compiled.appHtml),m["\u0275\u0275advance"](5),m["\u0275\u0275property"]("content",a.snippets.compiled.appTs)}},directives:[p["\u0275NgNoValidate"],p.NgControlStatusGroup,p.FormGroupDirective,l.FloatLabelDirective,p.DefaultValueAccessor,p.NgControlStatus,p.FormControlName,l.DefaultFocusIndicatorDirective,l.IconComponent,g.$,x.S,l.TabsetComponent,l.TabComponent,h.j],encapsulation:2}),a=function(n,a,t,s){var e,p=arguments.length,o=p<3?a:null===s?s=Object.getOwnPropertyDescriptor(a,t):s;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(n,a,t,s);else for(var l=n.length-1;l>=0;l--)(e=n[l])&&(o=(p<3?e(o):p>3?e(a,t,o):e(a,t))||o);return p>3&&o&&Object.defineProperty(a,t,o),o}([(0,d.cG)("ComponentsFloatLabelComponent"),q("design:paramtypes",[p.FormBuilder])],a)}(k.u),M=function(){var n=function(a,t){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,a){n.__proto__=a}||function(n,a){for(var t in a)Object.prototype.hasOwnProperty.call(a,t)&&(n[t]=a[t])})(a,t)};return function(a,t){if("function"!=typeof t&&null!==t)throw new TypeError("Class extends value "+String(t)+" is not a constructor or null");function s(){this.constructor=a}n(a,t),a.prototype=null===t?Object.create(t):(s.prototype=t.prototype,new s)}}(),V=function(n,a){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(n,a)};function D(n,a){if(1&n&&(m["\u0275\u0275text"](0,"\n                "),m["\u0275\u0275elementStart"](1,"b"),m["\u0275\u0275text"](2,"Selection:"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](3)),2&n){var t=m["\u0275\u0275nextContext"]();m["\u0275\u0275advance"](3),m["\u0275\u0275textInterpolate1"](" ",t.selected?t.selected.name:"(none)","\n            ")}}function R(n,a){if(1&n){var t=m["\u0275\u0275getCurrentView"]();m["\u0275\u0275elementStart"](0,"ux-radio-button",34),m["\u0275\u0275listener"]("valueChange",(function(n){return m["\u0275\u0275restoreView"](t),m["\u0275\u0275nextContext"]().selected=n}))("keydown.space",(function(n){var a=m["\u0275\u0275restoreView"](t).$implicit;return m["\u0275\u0275nextContext"]().selectOption(n,a)})),m["\u0275\u0275text"](1,"\n                    "),m["\u0275\u0275elementStart"](2,"span",35),m["\u0275\u0275pipe"](3,"highlightSearch"),m["\u0275\u0275text"](4,"\n                    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](5,"\n                "),m["\u0275\u0275elementEnd"]()}if(2&n){var s=a.$implicit,e=m["\u0275\u0275nextContext"]();m["\u0275\u0275property"]("value",e.selected)("option",s),m["\u0275\u0275advance"](2),m["\u0275\u0275property"]("innerHTML",m["\u0275\u0275pipeBind2"](3,3,s.name,e.filter),m["\u0275\u0275sanitizeHtml"])}}var j=function(){function n(){}return n.prototype.transform=function(n,a){var t=n.toLowerCase().indexOf(a.toLowerCase());return t<0?n:n.substr(0,t)+"<b>"+n.substr(t,a.length)+"</b>"+n.substr(t+a.length)},n.\u0275fac=function(a){return new(a||n)},n.\u0275pipe=m["\u0275\u0275definePipe"]({name:"highlightSearch",type:n,pure:!0}),n}(),N=function(n){function a(){var a=n.call(this,t(5357))||this;return a.optionList=[{name:"One"},{name:"Two"},{name:"Three"},{name:"Four"}],a.filteredOptionList=a.optionList,a._filter="",a.allowNull=!1,a.dropdownOpen=!1,a.disabled=!1,a.maxHeight="400px",a.placeholder="Type to search...",a.playground={files:{"app.component.html":a.snippets.raw.appHtml,"app.component.ts":a.snippets.raw.appTs,"app.component.css":a.snippets.raw.appCss},modules:[{imports:["HighlightSearch"],library:"./app.component",declaration:!0},{imports:["AccordionModule","CheckboxModule","NumberPickerModule","RadioButtonModule","InputDropdownModule"],library:"@ux-aspects/ux-aspects"}]},a}return M(a,n),Object.defineProperty(a.prototype,"filter",{get:function(){return this._filter},set:function(n){this._filter=n,this.filteredOptionList=n&&n.length>0?this.optionList.filter((function(a){return a.name.toLowerCase().indexOf(n.toLowerCase())>-1})):this.optionList},enumerable:!1,configurable:!0}),a.prototype.selectOption=function(n,a){this.selected=a,n.preventDefault()},a.prototype.dropdownOpenChange=function(n){this.dropdownOpen=n},a.\u0275fac=function(n){return new(n||a)},a.\u0275cmp=m["\u0275\u0275defineComponent"]({type:a,selectors:[["uxd-components-input-dropdown"]],features:[m["\u0275\u0275InheritDefinitionFeature"]],decls:173,vars:17,consts:[[1,"row"],[1,"col-md-5"],["aria-label","Filter input",3,"selected","dropdownOpen","disabled","filter","allowNull","maxHeight","placeholder","selectedChange","dropdownOpenChange","filterChange"],["displayContent",""],["uxTabbableList","",1,"radio-button-container"],["uxTabbableListItem","","name","group",3,"value","option","valueChange","keydown.space",4,"ngFor","ngForOf"],[1,"btn","button-primary","dropdown-placeholder",3,"click"],[1,"row","uxd-customize-example"],[1,"col-md-12"],["heading","Customize Example...",1,"accordion-chevron"],[1,"row","uxd-customize-row"],[1,"col-md-2","col-sm-12"],["type","text",1,"form-control",3,"ngModel","ngModelChange"],[1,"col-md-4","col-sm-12"],[3,"value","valueChange"],[1,"col-md-3","col-sm-12"],["tableTitle","Inputs"],["uxd-api-property","","name","filter","type","string"],["uxd-api-property","","name","selected","type","T[]"],["uxd-api-property","","name","hideFilter","type","boolean","defaultValue","false"],["uxd-api-property","","name","maxHeight","type","string | number"],["uxd-api-property","","name","placeholder","type","string","defaultValue","Type to filter..."],["uxd-api-property","","name","aria-label","type","string"],["uxd-api-property","","name","dropdownOpen","type","boolean"],["uxd-api-property","","name","disabled","type","boolean","defaultValue","false"],["tableTitle","Outputs"],["uxd-api-property","","name","filterChange","type","string"],["uxd-api-property","","name","selectedChange","type","T[]"],["uxd-api-property","","name","dropdownOpenChange","type","boolean"],[3,"minimal"],["heading","HTML"],[3,"content"],["heading","TypeScript"],["heading","CSS"],["uxTabbableListItem","","name","group",3,"value","option","valueChange","keydown.space"],[3,"innerHTML"]],template:function(n,a){1&n&&(m["\u0275\u0275elementStart"](0,"div",0),m["\u0275\u0275text"](1,"\n    "),m["\u0275\u0275elementStart"](2,"div",1),m["\u0275\u0275text"](3,"\n\n        "),m["\u0275\u0275elementStart"](4,"ux-input-dropdown",2),m["\u0275\u0275listener"]("selectedChange",(function(n){return a.selected=n}))("dropdownOpenChange",(function(n){return a.dropdownOpenChange(n)}))("filterChange",(function(n){return a.filter=n})),m["\u0275\u0275text"](5,"\n\n            "),m["\u0275\u0275template"](6,D,4,1,"ng-template",null,3,m["\u0275\u0275templateRefExtractor"]),m["\u0275\u0275text"](8,"\n\n            "),m["\u0275\u0275elementStart"](9,"div",4),m["\u0275\u0275text"](10,"\n                "),m["\u0275\u0275template"](11,R,6,6,"ux-radio-button",5),m["\u0275\u0275text"](12,"\n            "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](13,"\n\n        "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](14,"\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](15,"\n"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](16,"\n\n"),m["\u0275\u0275elementStart"](17,"button",6),m["\u0275\u0275listener"]("click",(function(){return a.selected=a.filteredOptionList[0]})),m["\u0275\u0275text"](18,"\n    Select first element\n"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](19,"\n\n"),m["\u0275\u0275elementStart"](20,"div",7),m["\u0275\u0275text"](21,"\n    "),m["\u0275\u0275elementStart"](22,"div",8),m["\u0275\u0275text"](23,"\n        "),m["\u0275\u0275elementStart"](24,"ux-accordion"),m["\u0275\u0275text"](25,"\n            "),m["\u0275\u0275elementStart"](26,"ux-accordion-panel",9),m["\u0275\u0275text"](27,"\n                "),m["\u0275\u0275elementStart"](28,"div",10),m["\u0275\u0275text"](29,"\n                    "),m["\u0275\u0275elementStart"](30,"div",11),m["\u0275\u0275text"](31,"\n                        "),m["\u0275\u0275elementStart"](32,"label"),m["\u0275\u0275text"](33,"maxHeight"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](34,"\n                    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](35,"\n                    "),m["\u0275\u0275elementStart"](36,"div",11),m["\u0275\u0275text"](37,"\n                        "),m["\u0275\u0275elementStart"](38,"input",12),m["\u0275\u0275listener"]("ngModelChange",(function(n){return a.maxHeight=n})),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](39,"\n                    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](40,"\n                "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](41,"\n                "),m["\u0275\u0275elementStart"](42,"div",10),m["\u0275\u0275text"](43,"\n                    "),m["\u0275\u0275elementStart"](44,"div",13),m["\u0275\u0275text"](45,"\n                        "),m["\u0275\u0275elementStart"](46,"ux-checkbox",14),m["\u0275\u0275listener"]("valueChange",(function(n){return a.allowNull=n})),m["\u0275\u0275text"](47,"allowNull"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](48,"\n                    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](49,"\n                "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](50,"\n                "),m["\u0275\u0275elementStart"](51,"div",10),m["\u0275\u0275text"](52,"\n                    "),m["\u0275\u0275elementStart"](53,"div",15),m["\u0275\u0275text"](54,"\n                        "),m["\u0275\u0275elementStart"](55,"ux-checkbox",14),m["\u0275\u0275listener"]("valueChange",(function(n){return a.disabled=n})),m["\u0275\u0275text"](56,"disabled"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](57,"\n                    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](58,"\n                "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](59,"\n                "),m["\u0275\u0275elementStart"](60,"div",10),m["\u0275\u0275text"](61,"\n                    "),m["\u0275\u0275elementStart"](62,"div",13),m["\u0275\u0275text"](63,"\n                        "),m["\u0275\u0275elementStart"](64,"ux-checkbox",14),m["\u0275\u0275listener"]("valueChange",(function(n){return a.dropdownOpen=n})),m["\u0275\u0275text"](65,"dropdownOpen"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](66,"\n                    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](67,"\n                "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](68,"\n                "),m["\u0275\u0275elementStart"](69,"div",10),m["\u0275\u0275text"](70,"\n                    "),m["\u0275\u0275elementStart"](71,"div",11),m["\u0275\u0275text"](72,"\n                        "),m["\u0275\u0275elementStart"](73,"label"),m["\u0275\u0275text"](74,"placeholder"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](75,"\n                    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](76,"\n                    "),m["\u0275\u0275elementStart"](77,"div",13),m["\u0275\u0275text"](78,"\n                        "),m["\u0275\u0275elementStart"](79,"input",12),m["\u0275\u0275listener"]("ngModelChange",(function(n){return a.placeholder=n})),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](80,"\n                    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](81,"\n                "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](82,"\n            "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](83,"\n        "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](84,"\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](85,"\n"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](86,"\n\n"),m["\u0275\u0275element"](87,"hr"),m["\u0275\u0275text"](88,"\n\n"),m["\u0275\u0275elementStart"](89,"p"),m["\u0275\u0275text"](90,"\n    The "),m["\u0275\u0275elementStart"](91,"code"),m["\u0275\u0275text"](92,"ux-input-dropdown"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](93," component is a drop-down with flexible content.\n    The content of the drop-down can be transcluded; the display of the closed\n    component should be inserted into an "),m["\u0275\u0275elementStart"](94,"code"),m["\u0275\u0275text"](95,"ng-template"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](96," with name\n    "),m["\u0275\u0275elementStart"](97,"code"),m["\u0275\u0275text"](98,"displayContent"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](99,".\n"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](100,"\n"),m["\u0275\u0275elementStart"](101,"p"),m["\u0275\u0275text"](102,"\n    The following can be used to customize and interact with the component:\n"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](103,"\n\n"),m["\u0275\u0275elementStart"](104,"uxd-api-properties",16),m["\u0275\u0275text"](105,"\n    "),m["\u0275\u0275elementStart"](106,"tr",17),m["\u0275\u0275text"](107,"\n        If specified, the filter string will be set to the given value.\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](108,"\n    "),m["\u0275\u0275elementStart"](109,"tr",18),m["\u0275\u0275text"](110,"\n        If specified, the items provided will be selected.\n        To programmatically modify the selection, assign a new array object to this property.\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](111,"\n    "),m["\u0275\u0275elementStart"](112,"tr",19),m["\u0275\u0275text"](113,"\n        If "),m["\u0275\u0275elementStart"](114,"code"),m["\u0275\u0275text"](115,"true"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](116,", the filter field is not displayed.\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](117,"\n    "),m["\u0275\u0275elementStart"](118,"tr",20),m["\u0275\u0275text"](119,"\n        Maximum height of the drop-down.\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](120,"\n    "),m["\u0275\u0275elementStart"](121,"tr",21),m["\u0275\u0275text"](122,"\n        Placeholder to display inside the filter field.\n        "),m["\u0275\u0275elementStart"](123,"b"),m["\u0275\u0275text"](124,"Note:"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](125," The default value is not localized!\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](126,"\n    "),m["\u0275\u0275elementStart"](127,"tr",22),m["\u0275\u0275text"](128,"\n        Aria label of the filter field. If not specified, the placeholder will be used.\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](129,"\n    "),m["\u0275\u0275elementStart"](130,"tr",23),m["\u0275\u0275text"](131,"\n        If set to "),m["\u0275\u0275elementStart"](132,"code"),m["\u0275\u0275text"](133,"true"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](134," this will programmatically show the typeahead dropdown.\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](135,"\n    "),m["\u0275\u0275elementStart"](136,"tr",24),m["\u0275\u0275text"](137,"\n        Controls the disabled state of the input-dropdown.\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](138,"\n"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](139,"\n\n"),m["\u0275\u0275elementStart"](140,"uxd-api-properties",25),m["\u0275\u0275text"](141,"\n    "),m["\u0275\u0275elementStart"](142,"tr",26),m["\u0275\u0275text"](143,"\n        Emits when the filter term changes. The event will contain the new filter string.\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](144,"\n    "),m["\u0275\u0275elementStart"](145,"tr",27),m["\u0275\u0275text"](146,"\n        Emits when the selection changes. The event will contain the new selected items.\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](147,"\n    "),m["\u0275\u0275elementStart"](148,"tr",28),m["\u0275\u0275text"](149,"\n        This event will be triggered when the dropdown is shown or hidden. The event will contain a boolean representing the visibility of the dropdown.\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](150,"\n"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](151,"\n\n\n"),m["\u0275\u0275elementStart"](152,"p"),m["\u0275\u0275text"](153,"The sample code for the above example is:"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](154,"\n\n"),m["\u0275\u0275elementStart"](155,"ux-tabset",29),m["\u0275\u0275text"](156,"\n    "),m["\u0275\u0275elementStart"](157,"ux-tab",30),m["\u0275\u0275text"](158,"\n        "),m["\u0275\u0275element"](159,"uxd-snippet",31),m["\u0275\u0275text"](160,"\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](161,"\n    "),m["\u0275\u0275elementStart"](162,"ux-tab",32),m["\u0275\u0275text"](163,"\n        "),m["\u0275\u0275element"](164,"uxd-snippet",31),m["\u0275\u0275text"](165,"\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](166,"\n    "),m["\u0275\u0275elementStart"](167,"ux-tab",33),m["\u0275\u0275text"](168,"\n        "),m["\u0275\u0275element"](169,"uxd-snippet",31),m["\u0275\u0275text"](170,"\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](171,"\n"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](172,"\n")),2&n&&(m["\u0275\u0275advance"](4),m["\u0275\u0275property"]("selected",a.selected)("dropdownOpen",a.dropdownOpen)("disabled",a.disabled)("filter",a.filter)("allowNull",a.allowNull)("maxHeight",a.maxHeight)("placeholder",a.placeholder),m["\u0275\u0275advance"](7),m["\u0275\u0275property"]("ngForOf",a.filteredOptionList),m["\u0275\u0275advance"](27),m["\u0275\u0275property"]("ngModel",a.maxHeight),m["\u0275\u0275advance"](8),m["\u0275\u0275property"]("value",a.allowNull),m["\u0275\u0275advance"](9),m["\u0275\u0275property"]("value",a.disabled),m["\u0275\u0275advance"](9),m["\u0275\u0275property"]("value",a.dropdownOpen),m["\u0275\u0275advance"](15),m["\u0275\u0275property"]("ngModel",a.placeholder),m["\u0275\u0275advance"](76),m["\u0275\u0275property"]("minimal",!1),m["\u0275\u0275advance"](4),m["\u0275\u0275property"]("content",a.snippets.compiled.appHtml),m["\u0275\u0275advance"](5),m["\u0275\u0275property"]("content",a.snippets.compiled.appTs),m["\u0275\u0275advance"](5),m["\u0275\u0275property"]("content",a.snippets.compiled.appCss))},directives:[l.InputDropdownComponent,l.TabbableListDirective,e.NgForOf,l.DefaultFocusIndicatorDirective,l.AccordionComponent,l.AccordionPanelComponent,p.DefaultValueAccessor,p.NgControlStatus,p.NgModel,l.CheckboxComponent,g.$,x.S,l.TabsetComponent,l.TabComponent,h.j,l.RadioButtonComponent,l.TabbableListItemDirective],pipes:[j],styles:["ux-input-dropdown[_ngcontent-%COMP%] {\n  width: 400px;\n}\n.radio-button-container[_ngcontent-%COMP%] {\n  padding: 16px 4px;\n}\n.radio-button-container[_ngcontent-%COMP%]   ux-radio-button[_ngcontent-%COMP%] {\n  padding: 4px 12px;\n  margin-bottom: 0;\n}\n.dropdown-placeholder[_ngcontent-%COMP%] {\n  margin-top: 216px;\n}"]}),a=function(n,a,t,s){var e,p=arguments.length,o=p<3?a:null===s?s=Object.getOwnPropertyDescriptor(a,t):s;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(n,a,t,s);else for(var l=n.length-1;l>=0;l--)(e=n[l])&&(o=(p<3?e(o):p>3?e(a,t,o):e(a,t))||o);return p>3&&o&&Object.defineProperty(a,t,o),o}([(0,d.cG)("ComponentsInputDropdownComponent"),V("design:paramtypes",[])],a)}(k.u),P=function(){var n=function(a,t){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,a){n.__proto__=a}||function(n,a){for(var t in a)Object.prototype.hasOwnProperty.call(a,t)&&(n[t]=a[t])})(a,t)};return function(a,t){if("function"!=typeof t&&null!==t)throw new TypeError("Class extends value "+String(t)+" is not a constructor or null");function s(){this.constructor=a}n(a,t),a.prototype=null===t?Object.create(t):(s.prototype=t.prototype,new s)}}(),F=function(n,a){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(n,a)},L=function(n){function a(){var a=n.call(this,t(82576))||this;return a.playground={files:{"app.component.html":a.snippets.raw.appHtml,"app.component.ts":a.snippets.raw.appTs},modules:[{imports:["NgxMaskModule"],library:"ngx-mask",forRoot:!0}]},a}return P(a,n),a.\u0275fac=function(n){return new(n||a)},a.\u0275cmp=m["\u0275\u0275defineComponent"]({type:a,selectors:[["uxd-components-input-mask"]],features:[m["\u0275\u0275InheritDefinitionFeature"]],decls:86,vars:2,consts:[[1,"input-group"],["type","text","mask","000-00-000-0000-0","placeholder","ISBN 1","aria-label","ISBN 1 13 digits only",1,"form-control"],[1,"help-block"],["type","text","mask","(000) 000-0000","placeholder","Telephone Number","aria-label","Telephone number 10 digits only",1,"form-control"],["type","text","mask","09/09/9999","placeholder","Date","aria-label","Date",1,"form-control"],["type","text","mask","099.099.099.099","placeholder","IP Address","aria-label","IP address",1,"form-control"],["href","https://github.com/JsDaddy/ngx-mask"],[3,"minimal"],["heading","HTML"],[3,"content"]],template:function(n,a){1&n&&(m["\u0275\u0275elementStart"](0,"div",0),m["\u0275\u0275text"](1,"\n    "),m["\u0275\u0275element"](2,"input",1),m["\u0275\u0275text"](3,"\n    "),m["\u0275\u0275elementStart"](4,"span",2),m["\u0275\u0275text"](5,"000-00-000-0000-0"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](6,"\n"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](7,"\n\n"),m["\u0275\u0275elementStart"](8,"div",0),m["\u0275\u0275text"](9,"\n    "),m["\u0275\u0275element"](10,"input",3),m["\u0275\u0275text"](11,"\n    "),m["\u0275\u0275elementStart"](12,"span",2),m["\u0275\u0275text"](13,"(000) 000-0000"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](14,"\n"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](15,"\n\n"),m["\u0275\u0275elementStart"](16,"div",0),m["\u0275\u0275text"](17,"\n    "),m["\u0275\u0275element"](18,"input",4),m["\u0275\u0275text"](19,"\n    "),m["\u0275\u0275elementStart"](20,"span",2),m["\u0275\u0275text"](21,"09/09/9999"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](22,"\n"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](23,"\n\n"),m["\u0275\u0275elementStart"](24,"div",0),m["\u0275\u0275text"](25,"\n    "),m["\u0275\u0275element"](26,"input",5),m["\u0275\u0275text"](27,"\n    "),m["\u0275\u0275elementStart"](28,"span",2),m["\u0275\u0275text"](29,"099.099.099.099"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](30,"\n"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](31,"\n\n"),m["\u0275\u0275element"](32,"hr"),m["\u0275\u0275text"](33,"\n\n"),m["\u0275\u0275elementStart"](34,"blockquote"),m["\u0275\u0275text"](35,"\n    "),m["\u0275\u0275elementStart"](36,"p"),m["\u0275\u0275elementStart"](37,"strong"),m["\u0275\u0275text"](38,"Note"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](39,": If you are using this component in your application, you will need to install "),m["\u0275\u0275elementStart"](40,"strong"),m["\u0275\u0275text"](41,"ngx-mask"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](42," manually."),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](43,"\n    "),m["\u0275\u0275elementStart"](44,"p"),m["\u0275\u0275text"](45,"Refer to "),m["\u0275\u0275elementStart"](46,"a",6),m["\u0275\u0275text"](47,"ngx-mask"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](48," for complete documentation."),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](49,"\n"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](50,"\n\n"),m["\u0275\u0275elementStart"](51,"p"),m["\u0275\u0275text"](52,"An input mask can be useful when you want to restrict the format of the string a user can input. To create an input mask\n    add a "),m["\u0275\u0275elementStart"](53,"code"),m["\u0275\u0275text"](54,"mask"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](55," attribute with a valid format string."),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](56,"\n\n"),m["\u0275\u0275elementStart"](57,"p"),m["\u0275\u0275text"](58,"The format string can take the following values:"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](59,"\n\n"),m["\u0275\u0275elementStart"](60,"ul"),m["\u0275\u0275text"](61,"\n    "),m["\u0275\u0275elementStart"](62,"li"),m["\u0275\u0275text"](63,"0 - digits (numbers)"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](64,"\n    "),m["\u0275\u0275elementStart"](65,"li"),m["\u0275\u0275text"](66,"9 - digits (numbers), but optional"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](67,"\n    "),m["\u0275\u0275elementStart"](68,"li"),m["\u0275\u0275text"](69,"A - letters (uppercase or lowercase) and digits"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](70,"\n    "),m["\u0275\u0275elementStart"](71,"li"),m["\u0275\u0275text"](72,"S - only letters (uppercase or lowercase)"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](73,"\n"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](74,"\n\n"),m["\u0275\u0275elementStart"](75,"p"),m["\u0275\u0275text"](76,"The code below can be used to create the example above:"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](77,"\n\n"),m["\u0275\u0275elementStart"](78,"ux-tabset",7),m["\u0275\u0275text"](79,"\n    "),m["\u0275\u0275elementStart"](80,"ux-tab",8),m["\u0275\u0275text"](81,"\n        "),m["\u0275\u0275element"](82,"uxd-snippet",9),m["\u0275\u0275text"](83,"\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](84,"\n"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](85,"\n")),2&n&&(m["\u0275\u0275advance"](78),m["\u0275\u0275property"]("minimal",!1),m["\u0275\u0275advance"](4),m["\u0275\u0275property"]("content",a.snippets.compiled.appHtml))},directives:[c.MaskDirective,l.DefaultFocusIndicatorDirective,l.TabsetComponent,l.TabComponent,h.j],encapsulation:2,changeDetection:0}),a=function(n,a,t,s){var e,p=arguments.length,o=p<3?a:null===s?s=Object.getOwnPropertyDescriptor(a,t):s;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(n,a,t,s);else for(var l=n.length-1;l>=0;l--)(e=n[l])&&(o=(p<3?e(o):p>3?e(a,t,o):e(a,t))||o);return p>3&&o&&Object.defineProperty(a,t,o),o}([(0,d.cG)("ComponentsInputMaskComponent"),F("design:paramtypes",[])],a)}(k.u),_=function(){var n=function(a,t){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,a){n.__proto__=a}||function(n,a){for(var t in a)Object.prototype.hasOwnProperty.call(a,t)&&(n[t]=a[t])})(a,t)};return function(a,t){if("function"!=typeof t&&null!==t)throw new TypeError("Class extends value "+String(t)+" is not a constructor or null");function s(){this.constructor=a}n(a,t),a.prototype=null===t?Object.create(t):(s.prototype=t.prototype,new s)}}(),A=function(n,a){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(n,a)};function H(n,a){1&n&&(m["\u0275\u0275elementStart"](0,"p",20),m["\u0275\u0275text"](1,"\n    "),m["\u0275\u0275element"](2,"ux-icon",21),m["\u0275\u0275text"](3," Enter a number between -10 and 10.\n"),m["\u0275\u0275elementEnd"]())}function U(n,a){1&n&&(m["\u0275\u0275elementStart"](0,"p",20),m["\u0275\u0275text"](1,"\n    "),m["\u0275\u0275element"](2,"ux-icon",21),m["\u0275\u0275text"](3," Enter a number between 0 and 10.\n"),m["\u0275\u0275elementEnd"]())}var B=function(n){function a(a){var s=n.call(this,t(60028))||this;return s.playground={files:{"app.component.ts":s.snippets.raw.appTs,"app.component.html":s.snippets.raw.appHtml,"app.component.css":s.snippets.raw.appCss},modules:[{imports:["NumberPickerModule"],library:"@ux-aspects/ux-aspects"}]},s.form=a.group({integer:[0,p.Validators.compose([p.Validators.required,p.Validators.min(-10),p.Validators.max(10)])],decimal:[0,p.Validators.compose([p.Validators.required,p.Validators.min(0),p.Validators.max(10)])]}),s}return _(a,n),a.\u0275fac=function(n){return new(n||a)(m["\u0275\u0275directiveInject"](p.FormBuilder))},a.\u0275cmp=m["\u0275\u0275defineComponent"]({type:a,selectors:[["uxd-components-number-picker"]],features:[m["\u0275\u0275InheritDefinitionFeature"]],decls:97,vars:8,consts:[["min","-10","max","10",1,"number-picker-component-demo",3,"formControl"],["class","text-error",4,"ngIf"],[1,"m-t-md"],["step","0.5","min","0","max","10",1,"number-picker-component-demo",3,"formControl"],["tableTitle","Inputs"],["uxd-api-property","","name","id","type","string"],["uxd-api-property","","name","value","type","number"],["uxd-api-property","","name","step","type","number | (value: number, direction: StepDirection) => number","defaultValue","1"],["uxd-api-property","","name","min","type","number","defaultValue","-Infinity"],["uxd-api-property","","name","max","type","number","defaultValue","Infinity"],["uxd-api-property","","name","precision","defaultValue","15","type","number"],["uxd-api-property","","name","placeholder","type","string"],["uxd-api-property","","name","required","type","boolean","defaultValue","false"],["tableTitle","Outputs"],["uxd-api-property","","name","valueChange","type","number"],[3,"minimal"],["heading","HTML"],[3,"content"],["heading","TypeScript"],["heading","CSS"],[1,"text-error"],["name","alert"]],template:function(n,a){1&n&&(m["\u0275\u0275elementStart"](0,"p"),m["\u0275\u0275text"](1,"Selecting an integer:"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](2,"\n\n"),m["\u0275\u0275element"](3,"ux-number-picker",0),m["\u0275\u0275text"](4,"\n\n"),m["\u0275\u0275template"](5,H,4,0,"p",1),m["\u0275\u0275text"](6,"\n\n"),m["\u0275\u0275elementStart"](7,"p",2),m["\u0275\u0275text"](8,"Selecting a decimal:"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](9,"\n\n"),m["\u0275\u0275element"](10,"ux-number-picker",3),m["\u0275\u0275text"](11,"\n\n"),m["\u0275\u0275template"](12,U,4,0,"p",1),m["\u0275\u0275text"](13,"\n\n"),m["\u0275\u0275element"](14,"hr"),m["\u0275\u0275text"](15,"\n\n"),m["\u0275\u0275elementStart"](16,"p"),m["\u0275\u0275text"](17,"\n    The "),m["\u0275\u0275elementStart"](18,"code"),m["\u0275\u0275text"](19,"ux-number-picker"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](20," component provides a way in which users can easily select a number value from a specified\n    range by clicking the up and down buttons, using the up/down arrow keys or by using the mouse wheel while hovering over\n    the control once it has focus.\n"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](21,"\n\n"),m["\u0275\u0275elementStart"](22,"p"),m["\u0275\u0275text"](23,"The number picker behavior can be customized by using the following attributes:"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](24,"\n\n"),m["\u0275\u0275elementStart"](25,"uxd-api-properties",4),m["\u0275\u0275text"](26,"\n    "),m["\u0275\u0275elementStart"](27,"tr",5),m["\u0275\u0275text"](28,"\n        Sets the id of the number picker. The child "),m["\u0275\u0275elementStart"](29,"code"),m["\u0275\u0275text"](30,"input"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](31," will have this value with a "),m["\u0275\u0275elementStart"](32,"code"),m["\u0275\u0275text"](33,"-input"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](34," suffix as its id.\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](35,"\n    "),m["\u0275\u0275elementStart"](36,"tr",6),m["\u0275\u0275text"](37,"\n        Sets the value displayed in the number picker component.\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](38,"\n    "),m["\u0275\u0275elementStart"](39,"tr",7),m["\u0275\u0275text"](40,"\n        Defines the amount the number picker should increase or decrease when the buttons or arrow keys are used.\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](41,"\n    "),m["\u0275\u0275elementStart"](42,"tr",8),m["\u0275\u0275text"](43,"\n        Defines the minimum value the number picker can set.\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](44,"\n    "),m["\u0275\u0275elementStart"](45,"tr",9),m["\u0275\u0275text"](46,"\n        \tDefines the maximum value the number picker can set.\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](47,"\n    "),m["\u0275\u0275elementStart"](48,"tr",10),m["\u0275\u0275text"](49,"\n        Define the precision of floating point values.\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](50,"\n    "),m["\u0275\u0275elementStart"](51,"tr",11),m["\u0275\u0275text"](52,"\n        The placeholder text which appears in the text input area when it is empty.\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](53,"\n    "),m["\u0275\u0275elementStart"](54,"tr",12),m["\u0275\u0275text"](55,"\n        If set to "),m["\u0275\u0275elementStart"](56,"code"),m["\u0275\u0275text"](57,"true"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](58," the number picker will be marked as required.\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](59,"\n"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](60,"\n\n"),m["\u0275\u0275elementStart"](61,"uxd-api-properties",13),m["\u0275\u0275text"](62,"\n    "),m["\u0275\u0275elementStart"](63,"tr",14),m["\u0275\u0275text"](64,"\n        If two way binding is used this value will be updated any time the number picker value changes.\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](65,"\n"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](66,"\n\n"),m["\u0275\u0275elementStart"](67,"p"),m["\u0275\u0275text"](68,"The number picker component can be disabled using the "),m["\u0275\u0275elementStart"](69,"code"),m["\u0275\u0275text"](70,"disabled"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](71," attribute. It also supports "),m["\u0275\u0275elementStart"](72,"code"),m["\u0275\u0275text"](73,"ngModel"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](74,"    for use within forms."),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](75,"\n\n"),m["\u0275\u0275elementStart"](76,"p"),m["\u0275\u0275text"](77,"The following code can be used to create the example shown above:"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](78,"\n\n"),m["\u0275\u0275elementStart"](79,"ux-tabset",15),m["\u0275\u0275text"](80,"\n    "),m["\u0275\u0275elementStart"](81,"ux-tab",16),m["\u0275\u0275text"](82,"\n        "),m["\u0275\u0275element"](83,"uxd-snippet",17),m["\u0275\u0275text"](84,"\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](85,"\n    "),m["\u0275\u0275elementStart"](86,"ux-tab",18),m["\u0275\u0275text"](87,"\n        "),m["\u0275\u0275element"](88,"uxd-snippet",17),m["\u0275\u0275text"](89,"\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](90,"\n    "),m["\u0275\u0275elementStart"](91,"ux-tab",19),m["\u0275\u0275text"](92,"\n        "),m["\u0275\u0275element"](93,"uxd-snippet",17),m["\u0275\u0275text"](94,"\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](95,"\n"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](96,"\n")),2&n&&(m["\u0275\u0275advance"](3),m["\u0275\u0275property"]("formControl",a.form.controls.integer),m["\u0275\u0275advance"](2),m["\u0275\u0275property"]("ngIf",a.form.controls.integer.invalid),m["\u0275\u0275advance"](5),m["\u0275\u0275property"]("formControl",a.form.controls.decimal),m["\u0275\u0275advance"](2),m["\u0275\u0275property"]("ngIf",a.form.controls.decimal.invalid),m["\u0275\u0275advance"](67),m["\u0275\u0275property"]("minimal",!1),m["\u0275\u0275advance"](4),m["\u0275\u0275property"]("content",a.snippets.compiled.appHtml),m["\u0275\u0275advance"](5),m["\u0275\u0275property"]("content",a.snippets.compiled.appTs),m["\u0275\u0275advance"](5),m["\u0275\u0275property"]("content",a.snippets.compiled.appCss))},directives:[l.NumberPickerComponent,p.NgControlStatus,p.FormControlDirective,e.NgIf,g.$,x.S,l.TabsetComponent,l.TabComponent,h.j,l.IconComponent],encapsulation:2}),a=function(n,a,t,s){var e,p=arguments.length,o=p<3?a:null===s?s=Object.getOwnPropertyDescriptor(a,t):s;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(n,a,t,s);else for(var l=n.length-1;l>=0;l--)(e=n[l])&&(o=(p<3?e(o):p>3?e(a,t,o):e(a,t))||o);return p>3&&o&&Object.defineProperty(a,t,o),o}([(0,d.cG)("ComponentsNumberPickerComponent"),A("design:paramtypes",[p.FormBuilder])],a)}(k.u),z=function(){var n=function(a,t){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,a){n.__proto__=a}||function(n,a){for(var t in a)Object.prototype.hasOwnProperty.call(a,t)&&(n[t]=a[t])})(a,t)};return function(a,t){if("function"!=typeof t&&null!==t)throw new TypeError("Class extends value "+String(t)+" is not a constructor or null");function s(){this.constructor=a}n(a,t),a.prototype=null===t?Object.create(t):(s.prototype=t.prototype,new s)}}(),G=function(n,a){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(n,a)},K=function(n){function a(){var a=n.call(this,t(53574))||this;return a.selected=100,a.radioOptions={option1:100,option2:"string",option3:{test:1},option4:"Wrap-Text"},a.disabled=!1,a.simplified=!1,a.playground={files:{"app.component.html":a.snippets.raw.appHtml,"app.component.ts":a.snippets.raw.appTs},modules:[{imports:["RadioButtonModule"],library:"@ux-aspects/ux-aspects"}]},a}return z(a,n),a.\u0275fac=function(n){return new(n||a)},a.\u0275cmp=m["\u0275\u0275defineComponent"]({type:a,selectors:[["uxd-components-radio-button"]],features:[m["\u0275\u0275InheritDefinitionFeature"]],decls:135,vars:16,consts:[["uxRadioButtonGroup","",1,"radio-button-container",3,"value","valueChange"],["name","group",3,"option","disabled","simplified"],["name","group",3,"option","simplified"],[1,"m-t"],[1,"btn","button-primary","m-r-xs",3,"click"],[1,"btn","button-accent",3,"click"],["tableTitle","Radio Button Inputs"],["uxd-api-property","","name","value","type","any"],["uxd-api-property","","name","option","type","any"],["uxd-api-property","","name","simplified","type","boolean","defaultValue","false"],["uxd-api-property","","name","clickable","type","boolean","defaultValue","false"],["uxd-api-property","","name","name","type","string"],["uxd-api-property","","name","required","type","boolean","defaultValue","false"],["tableTitle","Radio Button Outputs"],["uxd-api-property","","name","valueChange","type","any"],["tableTitle","uxRadioButtonGroup Inputs"],["tableTitle","uxRadioButtonGroup Outputs"],[3,"minimal"],["heading","HTML"],["language","html",3,"content"],["heading","TypeScript"],["language","javascript",3,"content"]],template:function(n,a){1&n&&(m["\u0275\u0275elementStart"](0,"div",0),m["\u0275\u0275listener"]("valueChange",(function(n){return a.selected=n})),m["\u0275\u0275text"](1,"\n    "),m["\u0275\u0275elementStart"](2,"ux-radio-button",1),m["\u0275\u0275text"](3,"\n        Option1\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](4,"\n\n    "),m["\u0275\u0275elementStart"](5,"ux-radio-button",2),m["\u0275\u0275text"](6,"\n        Option2\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](7,"\n\n    "),m["\u0275\u0275elementStart"](8,"ux-radio-button",2),m["\u0275\u0275text"](9,"\n        Option3\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](10,"\n\n    "),m["\u0275\u0275elementStart"](11,"ux-radio-button",2),m["\u0275\u0275text"](12,"\n        Option four onsectetur adipiscing elit. Inte adipiscing elit onsectetur adipiscing elit. Inte adipiscing elit onsectetur\n        adipiscing elit. Inte adipiscing elit onsectetur adipiscing elit. Inte adipiscing elit onsectetur adipiscing elit.\n        Inte adipiscing elit onsectetur adipiscing elit.\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](13,"\n"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](14,"\n\n"),m["\u0275\u0275elementStart"](15,"p",3),m["\u0275\u0275text"](16,"\n    "),m["\u0275\u0275elementStart"](17,"code"),m["\u0275\u0275text"](18,"radioModel"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](19," is "),m["\u0275\u0275elementStart"](20,"em"),m["\u0275\u0275text"](21),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](22,".\n"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](23,"\n\n"),m["\u0275\u0275elementStart"](24,"div"),m["\u0275\u0275text"](25,"\n    "),m["\u0275\u0275elementStart"](26,"button",4),m["\u0275\u0275listener"]("click",(function(){return a.disabled=!a.disabled})),m["\u0275\u0275text"](27),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](28,"\n\n    "),m["\u0275\u0275elementStart"](29,"button",5),m["\u0275\u0275listener"]("click",(function(){return a.simplified=!a.simplified})),m["\u0275\u0275text"](30),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](31,"\n"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](32,"\n\n"),m["\u0275\u0275element"](33,"hr"),m["\u0275\u0275text"](34,"\n\n"),m["\u0275\u0275elementStart"](35,"p"),m["\u0275\u0275text"](36,"\n    A radio button can be created by using the "),m["\u0275\u0275elementStart"](37,"code"),m["\u0275\u0275text"](38,"ux-radio-button"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](39," component placed inside a\n    "),m["\u0275\u0275elementStart"](40,"code"),m["\u0275\u0275text"](41,"uxRadioButtonGroup"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](42,". In order to use the radio button in a reactive form, define the\n    "),m["\u0275\u0275elementStart"](43,"code"),m["\u0275\u0275text"](44,"formControlName"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](45," property on the "),m["\u0275\u0275elementStart"](46,"code"),m["\u0275\u0275text"](47,"uxRadioButtonGroup"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](48," element. The following\n    attributes can be used to configure the appearance and behavior of the component:\n"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](49,"\n\n"),m["\u0275\u0275elementStart"](50,"uxd-api-properties",6),m["\u0275\u0275text"](51,"\n    "),m["\u0275\u0275elementStart"](52,"tr",7),m["\u0275\u0275text"](53,"\n        This should be a two way binding and will store the currently selected option. Each radio button in the same\n        group should have the same "),m["\u0275\u0275elementStart"](54,"code"),m["\u0275\u0275text"](55,"value"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](56," variable.\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](57,"\n    "),m["\u0275\u0275elementStart"](58,"tr",8),m["\u0275\u0275text"](59,"\n        This should contain the value that this radio button represents. This will be stored in the "),m["\u0275\u0275elementStart"](60,"code"),m["\u0275\u0275text"](61,"value"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](62,"\n        variable when the radio button is selected. No two radio buttons should have the same "),m["\u0275\u0275elementStart"](63,"code"),m["\u0275\u0275text"](64,"option"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](65,"\n        value within the same group of radio buttons.\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](66,"\n    "),m["\u0275\u0275elementStart"](67,"tr",9),m["\u0275\u0275text"](68,"\n        If set to "),m["\u0275\u0275elementStart"](69,"code"),m["\u0275\u0275text"](70,"true"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](71," the checkbox will be displayed without a border and background.\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](72,"\n    "),m["\u0275\u0275elementStart"](73,"tr",10),m["\u0275\u0275text"](74,"\n        If set to "),m["\u0275\u0275elementStart"](75,"code"),m["\u0275\u0275text"](76,"true"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](77," the checkbox will not toggle state when clicked.\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](78,"\n    "),m["\u0275\u0275elementStart"](79,"tr",11),m["\u0275\u0275text"](80,"\n        Specify the value for the name property of the input element. Use the same value for multiple radio buttons\n        to group them together and allow keyboard navigation.\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](81,"\n    "),m["\u0275\u0275elementStart"](82,"tr",12),m["\u0275\u0275text"](83,"\n        If set to "),m["\u0275\u0275elementStart"](84,"code"),m["\u0275\u0275text"](85,"true"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](86," the radio button will be marked as required.\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](87,"\n"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](88,"\n\n"),m["\u0275\u0275elementStart"](89,"uxd-api-properties",13),m["\u0275\u0275text"](90,"\n    "),m["\u0275\u0275elementStart"](91,"tr",14),m["\u0275\u0275text"](92,"\n        Emits when the value has been changed.\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](93,"\n"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](94,"\n\n"),m["\u0275\u0275elementStart"](95,"uxd-api-properties",15),m["\u0275\u0275text"](96,"\n    "),m["\u0275\u0275elementStart"](97,"tr",7),m["\u0275\u0275text"](98,"\n        This should be a two way binding and will store the currently selected option.\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](99,"\n"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](100,"\n\n"),m["\u0275\u0275elementStart"](101,"uxd-api-properties",16),m["\u0275\u0275text"](102,"\n    "),m["\u0275\u0275elementStart"](103,"tr",14),m["\u0275\u0275text"](104,"\n        Emits when the value has been changed.\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](105,"\n"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](106,"\n\n"),m["\u0275\u0275elementStart"](107,"p"),m["\u0275\u0275text"](108,"\n    In addition to the options listed above, a radio button can be disabled using the "),m["\u0275\u0275elementStart"](109,"code"),m["\u0275\u0275text"](110,"disabled"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](111," attribute. You can also provide\n    the radio button with a "),m["\u0275\u0275elementStart"](112,"code"),m["\u0275\u0275text"](113,"name"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](114," or "),m["\u0275\u0275elementStart"](115,"code"),m["\u0275\u0275text"](116,"id"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](117," if required.\n"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](118,"\n\n"),m["\u0275\u0275elementStart"](119,"p"),m["\u0275\u0275text"](120,"The following code can be used to create the example above:"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](121,"\n\n"),m["\u0275\u0275elementStart"](122,"ux-tabset",17),m["\u0275\u0275text"](123,"\n    "),m["\u0275\u0275elementStart"](124,"ux-tab",18),m["\u0275\u0275text"](125,"\n        "),m["\u0275\u0275element"](126,"uxd-snippet",19),m["\u0275\u0275text"](127,"\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](128,"\n    "),m["\u0275\u0275elementStart"](129,"ux-tab",20),m["\u0275\u0275text"](130,"\n        "),m["\u0275\u0275element"](131,"uxd-snippet",21),m["\u0275\u0275text"](132,"\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](133,"\n"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](134,"\n")),2&n&&(m["\u0275\u0275property"]("value",a.selected),m["\u0275\u0275advance"](2),m["\u0275\u0275property"]("option",a.radioOptions.option1)("disabled",a.disabled)("simplified",a.simplified),m["\u0275\u0275advance"](3),m["\u0275\u0275property"]("option",a.radioOptions.option2)("simplified",a.simplified),m["\u0275\u0275advance"](3),m["\u0275\u0275property"]("option",a.radioOptions.option3)("simplified",a.simplified),m["\u0275\u0275advance"](3),m["\u0275\u0275property"]("option",a.radioOptions.option4)("simplified",a.simplified),m["\u0275\u0275advance"](10),m["\u0275\u0275textInterpolate"](a.selected),m["\u0275\u0275advance"](6),m["\u0275\u0275textInterpolate1"]("\n        ",a.disabled?"Click to enable Option1":"Click to disable Option1","\n    "),m["\u0275\u0275advance"](3),m["\u0275\u0275textInterpolate1"]("\n        ",a.simplified?"Disable Simplified Style":"Enable Simplified Style","\n    "),m["\u0275\u0275advance"](92),m["\u0275\u0275property"]("minimal",!1),m["\u0275\u0275advance"](4),m["\u0275\u0275property"]("content",a.snippets.compiled.appHtml),m["\u0275\u0275advance"](5),m["\u0275\u0275property"]("content",a.snippets.compiled.appTs))},directives:[l.RadioButtonGroupDirective,l.RadioButtonComponent,l.DefaultFocusIndicatorDirective,g.$,x.S,l.TabsetComponent,l.TabComponent,h.j],encapsulation:2}),a=function(n,a,t,s){var e,p=arguments.length,o=p<3?a:null===s?s=Object.getOwnPropertyDescriptor(a,t):s;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(n,a,t,s);else for(var l=n.length-1;l>=0;l--)(e=n[l])&&(o=(p<3?e(o):p>3?e(a,t,o):e(a,t))||o);return p>3&&o&&Object.defineProperty(a,t,o),o}([(0,d.cG)("ComponentsRadioButtonComponent"),G("design:paramtypes",[])],a)}(k.u),$=function(){var n=function(a,t){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,a){n.__proto__=a}||function(n,a){for(var t in a)Object.prototype.hasOwnProperty.call(a,t)&&(n[t]=a[t])})(a,t)};return function(a,t){if("function"!=typeof t&&null!==t)throw new TypeError("Class extends value "+String(t)+" is not a constructor or null");function s(){this.constructor=a}n(a,t),a.prototype=null===t?Object.create(t):(s.prototype=t.prototype,new s)}}(),W=function(n,a){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(n,a)},X=function(n){function a(a){var s=n.call(this,t(57407))||this;return s.playground={files:{"app.component.ts":s.snippets.raw.appTs,"app.component.html":s.snippets.raw.appHtml},modules:[{imports:["SliderModule","ColorServiceModule"],library:"@ux-aspects/ux-aspects"}]},s.slider1={value:50,options:{track:{ticks:{major:{steps:[0,50,100],labels:!0,formatter:function(n){return 0===n?"Minimum":50===n?"Default":100===n?"Maximum":void 0}},minor:{show:!1}}}}},s.slider2={value:3.8,options:{handles:{style:l.SliderStyle.Line,callout:{trigger:l.SliderCalloutTrigger.Drag,formatter:function(n){return n?n.toFixed(1):n}}},track:{min:1,max:5,ticks:{major:{steps:[1,5],labels:!0},minor:{steps:1,labels:!1}}}}},s.slider3={value:4,options:{track:{min:0,max:5,height:l.SliderSize.Narrow,ticks:{snap:l.SliderSnap.All,major:{steps:5,labels:!0},minor:{steps:1,labels:!0}},colors:{lower:a.getColor("accent").toHex()}}}},s.slider4={value:60,options:{handles:{style:l.SliderStyle.Line,callout:{trigger:l.SliderCalloutTrigger.Hover,formatter:function(n){return n?n.toFixed(0):n}}},track:{height:l.SliderSize.Narrow,ticks:{major:{steps:50},minor:{steps:10}},colors:{higher:["#fdf690","#f14a50"]}}}},s.slider5={value:{low:1234,high:9876},options:{type:l.SliderType.Range,handles:{callout:{trigger:l.SliderCalloutTrigger.Persistent,formatter:function(n){return n?n.toFixed(0):n}},keyboard:{minor:50}},track:{height:l.SliderSize.Narrow,min:1e3,max:1e4,ticks:{major:{show:!1},minor:{show:!1}},colors:{range:a.getColor("accent").toHex()}}}},s.slider6={value:{low:22,high:76},options:{type:l.SliderType.Range,handles:{style:l.SliderStyle.Line,callout:{trigger:l.SliderCalloutTrigger.Hover,background:a.getColor("alternate1").toHex(),formatter:function(n){return n?n.toFixed(0):n}}},track:{height:l.SliderSize.Narrow,ticks:{major:{steps:25},minor:{steps:5}},colors:{range:a.getColor("alternate1").toHex()}}}},s.slider7={value:{low:25,high:75},options:{type:l.SliderType.Range,handles:{style:l.SliderStyle.Line,callout:{trigger:l.SliderCalloutTrigger.Hover,background:a.getColor("accent").toHex(),formatter:function(n){return n?n.toFixed(0):n}}},track:{ticks:{snap:l.SliderSnap.All,major:{steps:25},minor:{steps:5}},colors:{range:a.getColor("accent").toHex()}}}},s}return $(a,n),a.prototype.updateValues=function(){this.slider7.value=this.slider7.value,isNaN(Number(this.lowerValue))||(this.slider7.value.low=Number(this.lowerValue)),isNaN(Number(this.upperValue))||(this.slider7.value.high=Number(this.upperValue))},a.prototype.valueHasChanged=function(n){this.slider7.value=n,this.lowerValue=n.low.toString(),this.upperValue=n.high.toString()},a.\u0275fac=function(n){return new(n||a)(m["\u0275\u0275directiveInject"](l.ColorService))},a.\u0275cmp=m["\u0275\u0275defineComponent"]({type:a,selectors:[["uxd-components-sliders"]],features:[m["\u0275\u0275InheritDefinitionFeature"]],decls:447,vars:33,consts:[[1,"container-fluid"],[1,"row"],[1,"col-md-12"],[1,"text-black","p-t-md","p-b-md"],[1,"col-md-6","p-r-md","p-b-md"],[1,"text-black","p-b-md"],[3,"value","options","disabled"],[1,"col-md-6","p-l-md","p-b-md"],[1,"text-black","p-b-lg"],[3,"value","options","disabled","valueChange"],[1,"row","m-t-sm","p-t-xs"],[1,"col-sm-2"],["type","text","aria-label","Slider lower range value",1,"form-control","m-b",3,"ngModel","disabled","ngModelChange","blur","keyup.enter"],[1,"col-sm-offset-8","col-sm-2"],["type","text","aria-label","Slider upper range value",1,"form-control","m-b",3,"ngModel","disabled","ngModelChange","blur","keyup.enter"],[1,"row","uxd-customize-example"],["heading","Customize Example...",1,"accordion-chevron"],[1,"row","uxd-customize-row"],[1,"col-md-4","col-sm-12"],[3,"value","valueChange"],[3,"content"],["tableTitle","Inputs"],["uxd-api-property","","name","value","type","SliderValue | number","defaultValue","0"],["uxd-api-property","","name","options","type","SliderOptions"],["uxd-api-property","","name","disabled","type","boolean","defaultValue","false"],["tableTitle","Outputs"],["uxd-api-property","","name","valueChange","type","SliderValue | number"],["tableTitle","SliderOptions"],["uxd-api-property","","name","type","type","SliderType","defaultValue","SliderType.Value"],["uxd-api-property","","name","handles","type","SliderHandleOptions"],["uxd-api-property","","name","track","type","SliderTrackOptions"],["tableTitle","SliderHandleOptions"],["uxd-api-property","","name","style","type","SliderStyle","defaultValue","SliderStyle.Button"],["uxd-api-property","","name","callout","type","SliderCallout","defaultValue","No Callout Shown"],["uxd-api-property","","name","keyboard","type","SliderKeyboardOptions"],["uxd-api-property","","name","aria","type","SliderAriaOptions"],["tableTitle","SliderCallout"],["uxd-api-property","","name","trigger","type","SliderCalloutTrigger","defaultValue","SliderCalloutTrigger.None"],["uxd-api-property","","name","background","type","string","defaultValue","grey2"],["uxd-api-property","","name","color","type","string","defaultValue","white"],["uxd-api-property","","name","formatter","type","(value: number) => string | number","defaultValue","Not Modified"],["tableTitle","SliderTrackOptions"],["uxd-api-property","","name","height","type","SliderSize","defaultValue","SliderSize.Wide"],["uxd-api-property","","name","min","type","number","defaultValue","0"],["uxd-api-property","","name","max","type","number","defaultValue","100"],["uxd-api-property","","name","ticks","type","SliderTicksOptions"],["uxd-api-property","","name","colors","type","SliderTrackColors"],["tableTitle","SliderTicksOptions"],["uxd-api-property","","name","snap","type","SliderSnap","defaultValue","SliderSnap.None"],["uxd-api-property","","name","major","type","SliderTickOptions"],["uxd-api-property","","name","minor","type","SliderTickOptions"],["tableTitle","SliderTickOptions"],["uxd-api-property","","name","show","type","boolean"],["uxd-api-property","","name","steps","type","number | number[]"],["uxd-api-property","","name","labels","type","boolean"],["uxd-api-property","","name","formatter","type","(value: number) => string | number"],["tableTitle","SliderKeyboardOptions"],["uxd-api-property","","name","major","type","number","defaultValue","5"],["uxd-api-property","","name","minor","type","number","defaultValue","1"],["tableTitle","SliderAriaOptions"],["uxd-api-property","","name","thumb","type","string","defaultValue","'Slider value'"],["uxd-api-property","","name","lowerThumb","type","string","defaultValue","'Slider lower value'"],["uxd-api-property","","name","upperThumb","type","string","defaultValue","'Slider upper value'"],[3,"minimal"],["heading","HTML"],["heading","TypeScript"]],template:function(n,a){1&n&&(m["\u0275\u0275elementStart"](0,"div",0),m["\u0275\u0275text"](1,"\n    "),m["\u0275\u0275elementStart"](2,"div",1),m["\u0275\u0275text"](3,"\n        "),m["\u0275\u0275elementStart"](4,"div",2),m["\u0275\u0275text"](5,"\n            "),m["\u0275\u0275elementStart"](6,"h4",3),m["\u0275\u0275text"](7,"Single Value Sliders"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](8,"\n        "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](9,"\n\n        "),m["\u0275\u0275elementStart"](10,"div",4),m["\u0275\u0275text"](11,"\n            "),m["\u0275\u0275elementStart"](12,"p",5),m["\u0275\u0275text"](13,"Button Handle - Custom Labels"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](14,"\n            "),m["\u0275\u0275element"](15,"ux-slider",6),m["\u0275\u0275text"](16,"\n        "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](17,"\n        "),m["\u0275\u0275elementStart"](18,"div",7),m["\u0275\u0275text"](19,"\n            "),m["\u0275\u0275elementStart"](20,"p",5),m["\u0275\u0275text"](21,"Line Handle - Callout on Drag"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](22,"\n            "),m["\u0275\u0275element"](23,"ux-slider",6),m["\u0275\u0275text"](24,"\n        "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](25,"\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](26,"\n\n    "),m["\u0275\u0275element"](27,"hr"),m["\u0275\u0275text"](28,"\n\n    "),m["\u0275\u0275elementStart"](29,"div",1),m["\u0275\u0275text"](30,"\n        "),m["\u0275\u0275elementStart"](31,"div",4),m["\u0275\u0275text"](32,"\n            "),m["\u0275\u0275elementStart"](33,"p",5),m["\u0275\u0275text"](34,"Narrow - Track Styling - Snapping"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](35,"\n            "),m["\u0275\u0275element"](36,"ux-slider",6),m["\u0275\u0275text"](37,"\n        "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](38,"\n        "),m["\u0275\u0275elementStart"](39,"div",7),m["\u0275\u0275text"](40,"\n            "),m["\u0275\u0275elementStart"](41,"p",5),m["\u0275\u0275text"](42,"Narrow - Gradient Track Styling - Callout on Hover"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](43,"\n            "),m["\u0275\u0275element"](44,"ux-slider",6),m["\u0275\u0275text"](45,"\n        "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](46,"\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](47,"\n\n    "),m["\u0275\u0275element"](48,"hr"),m["\u0275\u0275text"](49,"\n\n    "),m["\u0275\u0275elementStart"](50,"div",1),m["\u0275\u0275text"](51,"\n        "),m["\u0275\u0275elementStart"](52,"div",2),m["\u0275\u0275text"](53,"\n            "),m["\u0275\u0275elementStart"](54,"h4",3),m["\u0275\u0275text"](55,"Range Value Sliders"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](56,"\n        "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](57,"\n\n        "),m["\u0275\u0275elementStart"](58,"div",4),m["\u0275\u0275text"](59,"\n            "),m["\u0275\u0275elementStart"](60,"p",8),m["\u0275\u0275text"](61,"Range Track - Persistent Callout"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](62,"\n            "),m["\u0275\u0275element"](63,"ux-slider",6),m["\u0275\u0275text"](64,"\n        "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](65,"\n        "),m["\u0275\u0275elementStart"](66,"div",7),m["\u0275\u0275text"](67,"\n            "),m["\u0275\u0275elementStart"](68,"p",8),m["\u0275\u0275text"](69,"Range Track Style - Custom Callout Styles"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](70,"\n            "),m["\u0275\u0275element"](71,"ux-slider",6),m["\u0275\u0275text"](72,"\n        "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](73,"\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](74,"\n\n    "),m["\u0275\u0275element"](75,"hr"),m["\u0275\u0275text"](76,"\n\n    "),m["\u0275\u0275elementStart"](77,"div",1),m["\u0275\u0275text"](78,"\n        "),m["\u0275\u0275elementStart"](79,"div",2),m["\u0275\u0275text"](80,"\n            "),m["\u0275\u0275elementStart"](81,"h4",3),m["\u0275\u0275text"](82,"Range Slider with Text Inputs"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](83,"\n        "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](84,"\n\n        "),m["\u0275\u0275elementStart"](85,"div",2),m["\u0275\u0275text"](86,"\n            "),m["\u0275\u0275elementStart"](87,"ux-slider",9),m["\u0275\u0275listener"]("valueChange",(function(n){return a.valueHasChanged(n)})),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](88,"\n        "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](89,"\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](90,"\n\n    "),m["\u0275\u0275elementStart"](91,"div",10),m["\u0275\u0275text"](92,"\n        "),m["\u0275\u0275elementStart"](93,"div",11),m["\u0275\u0275text"](94,"\n            "),m["\u0275\u0275elementStart"](95,"input",12),m["\u0275\u0275listener"]("ngModelChange",(function(n){return a.lowerValue=n}))("blur",(function(){return a.updateValues()}))("keyup.enter",(function(){return a.updateValues()})),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](96,"\n        "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](97,"\n        "),m["\u0275\u0275elementStart"](98,"div",13),m["\u0275\u0275text"](99,"\n            "),m["\u0275\u0275elementStart"](100,"input",14),m["\u0275\u0275listener"]("ngModelChange",(function(n){return a.upperValue=n}))("blur",(function(){return a.updateValues()}))("keyup.enter",(function(){return a.updateValues()})),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](101,"\n        "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](102,"\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](103,"\n"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](104,"\n\n"),m["\u0275\u0275elementStart"](105,"div",15),m["\u0275\u0275text"](106,"\n    "),m["\u0275\u0275elementStart"](107,"div",2),m["\u0275\u0275text"](108,"\n        "),m["\u0275\u0275elementStart"](109,"ux-accordion"),m["\u0275\u0275text"](110,"\n            "),m["\u0275\u0275elementStart"](111,"ux-accordion-panel",16),m["\u0275\u0275text"](112,"\n                "),m["\u0275\u0275elementStart"](113,"div",17),m["\u0275\u0275text"](114,"\n                    "),m["\u0275\u0275elementStart"](115,"div",18),m["\u0275\u0275text"](116,"\n                        "),m["\u0275\u0275elementStart"](117,"ux-checkbox",19),m["\u0275\u0275listener"]("valueChange",(function(n){return a.disabled=n})),m["\u0275\u0275text"](118,"disabled"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](119,"\n                    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](120,"\n                "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](121,"\n            "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](122,"\n        "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](123,"\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](124,"\n"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](125,"\n\n"),m["\u0275\u0275element"](126,"hr"),m["\u0275\u0275text"](127,"\n\n"),m["\u0275\u0275elementStart"](128,"p"),m["\u0275\u0275text"](129,"The slider component can be used to allow a user to select a single value or a range of values. It can easily be customized\n    to match the desired appearance and behavior."),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](130,"\n\n"),m["\u0275\u0275elementStart"](131,"h4"),m["\u0275\u0275text"](132,"Slider Component"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](133,"\n\n"),m["\u0275\u0275elementStart"](134,"p"),m["\u0275\u0275text"](135,"The component can be added to a page by using the following HTML:"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](136,"\n\n"),m["\u0275\u0275element"](137,"uxd-snippet",20),m["\u0275\u0275text"](138,"\n\n"),m["\u0275\u0275elementStart"](139,"blockquote"),m["\u0275\u0275text"](140,"\n    "),m["\u0275\u0275elementStart"](141,"p"),m["\u0275\u0275text"](142,"Reference Plunker for the code used in all examples above"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](143,"\n"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](144,"\n\n"),m["\u0275\u0275elementStart"](145,"uxd-api-properties",21),m["\u0275\u0275text"](146,"\n    "),m["\u0275\u0275elementStart"](147,"tr",22),m["\u0275\u0275text"](148,"\n        A single number or a "),m["\u0275\u0275elementStart"](149,"code"),m["\u0275\u0275text"](150,"SliderValue"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](151," object, depending on the slider type specified.\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](152,"\n    "),m["\u0275\u0275elementStart"](153,"tr",23),m["\u0275\u0275text"](154,"\n        A set of options to customize the appearance and behavior of the slider.\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](155,"\n    "),m["\u0275\u0275elementStart"](156,"tr",24),m["\u0275\u0275text"](157,"\n        Whether the slider is disabled.\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](158,"\n"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](159,"\n\n"),m["\u0275\u0275elementStart"](160,"uxd-api-properties",25),m["\u0275\u0275text"](161,"\n    "),m["\u0275\u0275elementStart"](162,"tr",26),m["\u0275\u0275text"](163,"\n        Emits when the "),m["\u0275\u0275elementStart"](164,"code"),m["\u0275\u0275text"](165,"value"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](166," changes.\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](167,"\n"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](168,"\n\n"),m["\u0275\u0275elementStart"](169,"h4"),m["\u0275\u0275text"](170,"Values"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](171,"\n\n"),m["\u0275\u0275elementStart"](172,"p"),m["\u0275\u0275text"](173,"The value or range should be specified by adding an "),m["\u0275\u0275elementStart"](174,"code"),m["\u0275\u0275text"](175,"value"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](176," attribute to the component tag. This should reference\n    either a single number or a "),m["\u0275\u0275elementStart"](177,"code"),m["\u0275\u0275text"](178,"SliderValue"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](179," object, depending on the slider type specified."),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](180,"\n\n"),m["\u0275\u0275elementStart"](181,"p"),m["\u0275\u0275text"](182,"For single value selection, an example value might be:"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](183,"\n\n"),m["\u0275\u0275element"](184,"uxd-snippet",20),m["\u0275\u0275text"](185,"\n\n"),m["\u0275\u0275elementStart"](186,"p"),m["\u0275\u0275text"](187,"For range selection, an example value might be:"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](188,"\n\n"),m["\u0275\u0275element"](189,"uxd-snippet",20),m["\u0275\u0275text"](190,"\n\n"),m["\u0275\u0275elementStart"](191,"p"),m["\u0275\u0275text"](192,"The variable containing the value can be updated with the correct value, or values, when the slider is dragged if two way\n    binding is used."),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](193,"\n\n"),m["\u0275\u0275elementStart"](194,"h4"),m["\u0275\u0275text"](195,"Options"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](196,"\n\n"),m["\u0275\u0275elementStart"](197,"p"),m["\u0275\u0275text"](198,"A wide range of options can used to customize the appearance and behavior of the component. These options should be stored\n    in an object and passed to the component by adding an "),m["\u0275\u0275elementStart"](199,"code"),m["\u0275\u0275text"](200,"options"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](201," attribute to the directive."),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](202,"\n\n"),m["\u0275\u0275elementStart"](203,"p"),m["\u0275\u0275text"](204,"The default options for each chart are as follows:"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](205,"\n\n"),m["\u0275\u0275element"](206,"uxd-snippet",20),m["\u0275\u0275text"](207,"\n\n"),m["\u0275\u0275elementStart"](208,"p"),m["\u0275\u0275text"](209,"Full details on each property and the possible values for each can be found below. All properties are optional, if they are\n    not specified the default value will be used."),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](210,"\n\n"),m["\u0275\u0275elementStart"](211,"uxd-api-properties",27),m["\u0275\u0275text"](212,"\n    "),m["\u0275\u0275elementStart"](213,"tr",28),m["\u0275\u0275text"](214,"\n        Defines whether the slider should allow selection of a single value or a range of values. The two valid values\n        are "),m["\u0275\u0275elementStart"](215,"code"),m["\u0275\u0275text"](216,"SliderType.Value"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](217," and "),m["\u0275\u0275elementStart"](218,"code"),m["\u0275\u0275text"](219,"SliderType.Range"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](220,".\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](221,"\n    "),m["\u0275\u0275elementStart"](222,"tr",29),m["\u0275\u0275text"](223,"\n        This should be an object that contains properties configuring the appearance and behavior of the\n        draggable handles on the slider. If not specified the default options will be used.\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](224,"\n    "),m["\u0275\u0275elementStart"](225,"tr",30),m["\u0275\u0275text"](226,"\n        This should be an object that contains properties configuring the appearance and behavior of the\n        track on the slider. If not specified the default options will be used.\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](227,"\n"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](228,"\n\n"),m["\u0275\u0275elementStart"](229,"uxd-api-properties",31),m["\u0275\u0275text"](230,"\n    "),m["\u0275\u0275elementStart"](231,"tr",32),m["\u0275\u0275text"](232,"\n        This allows you to choose the appearance of the drag handles. The two available options are "),m["\u0275\u0275elementStart"](233,"code"),m["\u0275\u0275text"](234,"SliderStyle.Button"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](235,"\n        and "),m["\u0275\u0275elementStart"](236,"code"),m["\u0275\u0275text"](237,"SliderStyle.Line"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](238,".\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](239,"\n    "),m["\u0275\u0275elementStart"](240,"tr",33),m["\u0275\u0275text"](241,"\n        This should be an object that configures the appearance and behavior of the drag handle callout.\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](242,"\n    "),m["\u0275\u0275elementStart"](243,"tr",34),m["\u0275\u0275text"](244,"\n        This should be an object that configures keyboard interaction with the slider.\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](245,"\n    "),m["\u0275\u0275elementStart"](246,"tr",35),m["\u0275\u0275text"](247,"\n        This should be an object that configures aria labels for the slider.\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](248,"\n"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](249,"\n\n"),m["\u0275\u0275elementStart"](250,"uxd-api-properties",36),m["\u0275\u0275text"](251,"\n    "),m["\u0275\u0275elementStart"](252,"tr",37),m["\u0275\u0275text"](253,"\n        This option will specify when the callout should appear. The available options are:\n        "),m["\u0275\u0275element"](254,"br"),m["\u0275\u0275text"](255,"\n        "),m["\u0275\u0275elementStart"](256,"ul"),m["\u0275\u0275text"](257,"\n            "),m["\u0275\u0275elementStart"](258,"li"),m["\u0275\u0275elementStart"](259,"code"),m["\u0275\u0275text"](260,"SliderCalloutTrigger.None"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](261," - The callout will never appear."),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](262,"\n            "),m["\u0275\u0275elementStart"](263,"li"),m["\u0275\u0275elementStart"](264,"code"),m["\u0275\u0275text"](265,"SliderCalloutTrigger.Hover"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](266," - The callout will appear when the mouse is over the handle and will remain visible\n                when dragging the handle."),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](267,"\n            "),m["\u0275\u0275elementStart"](268,"li"),m["\u0275\u0275elementStart"](269,"code"),m["\u0275\u0275text"](270,"SliderCalloutTrigger.Drag"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](271," - The callout will appear only when the handle is being dragged."),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](272,"\n            "),m["\u0275\u0275elementStart"](273,"li"),m["\u0275\u0275elementStart"](274,"code"),m["\u0275\u0275text"](275,"SliderCalloutTrigger.Persistent"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](276," - The callout will always be visible."),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](277,"\n        "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](278,"\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](279,"\n    "),m["\u0275\u0275elementStart"](280,"tr",38),m["\u0275\u0275text"](281,"\n        Specifies the background color of the callout.\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](282,"\n    "),m["\u0275\u0275elementStart"](283,"tr",39),m["\u0275\u0275text"](284,"\n        Specifies the text color of the callout.\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](285,"\n    "),m["\u0275\u0275elementStart"](286,"tr",40),m["\u0275\u0275text"](287,"\n        This allows you to specify a function that will format the value in the callout. The function should accept the value as a parameter and return the modified value.\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](288,"\n"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](289,"\n\n"),m["\u0275\u0275elementStart"](290,"uxd-api-properties",41),m["\u0275\u0275text"](291,"\n    "),m["\u0275\u0275elementStart"](292,"tr",42),m["\u0275\u0275text"](293,"\n        This specifies the height of the track. There are two available values, "),m["\u0275\u0275elementStart"](294,"code"),m["\u0275\u0275text"](295,"SliderSize.Wide"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](296," and "),m["\u0275\u0275elementStart"](297,"code"),m["\u0275\u0275text"](298,"SliderSize.Narrow"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](299,".\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](300,"\n    "),m["\u0275\u0275elementStart"](301,"tr",43),m["\u0275\u0275text"](302,"\n        Specifies the minimum value shown on the slider.\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](303,"\n    "),m["\u0275\u0275elementStart"](304,"tr",44),m["\u0275\u0275text"](305,"\n        Specifies the maximum value shown on the slider.\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](306,"\n    "),m["\u0275\u0275elementStart"](307,"tr",45),m["\u0275\u0275text"](308,"\n        Should be an object containing properties to customize the ticks shown beneath the chart.\n        By default major ticks are shown on every 10th value with labels, minor ticks are shown every 5 values with no labels.\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](309,"\n    "),m["\u0275\u0275elementStart"](310,"tr",46),m["\u0275\u0275text"](311,"\n        Specifies the colors that should be used on different parts of the track. This should be an object that can contain\n        the following properties:\n        "),m["\u0275\u0275element"](312,"br"),m["\u0275\u0275text"](313,"\n        "),m["\u0275\u0275elementStart"](314,"ul"),m["\u0275\u0275text"](315,"\n            "),m["\u0275\u0275elementStart"](316,"li"),m["\u0275\u0275elementStart"](317,"code"),m["\u0275\u0275text"](318,"lower"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](319," - Specifies the color or colors to be shown in the area before the first drag handle.\n                This can be a string containing a color value or an array of strings which will result in a gradient."),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](320,"\n            "),m["\u0275\u0275elementStart"](321,"li"),m["\u0275\u0275elementStart"](322,"code"),m["\u0275\u0275text"](323,"range"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](324," - Specifies the color or colors to be shown in the area between the first and second\n                drag handle (the selected range of values). This only applies when a range of values can be selected.\n                This can be a string containing a color value or an array of strings which will result in a gradient."),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](325,"\n            "),m["\u0275\u0275elementStart"](326,"li"),m["\u0275\u0275elementStart"](327,"code"),m["\u0275\u0275text"](328,"higher"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](329," - Specifies the color or colors to be shown in the area after the last drag handle.\n                This can be a string containing a color value or an array of strings which will result in a gradient."),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](330,"\n        "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](331,"\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](332,"\n"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](333,"\n\n"),m["\u0275\u0275elementStart"](334,"uxd-api-properties",47),m["\u0275\u0275text"](335,"\n    "),m["\u0275\u0275elementStart"](336,"tr",48),m["\u0275\u0275text"](337,"\n        Specifies if the slider should snap to the ticks. There are several available options:\n        "),m["\u0275\u0275element"](338,"br"),m["\u0275\u0275text"](339,"\n        "),m["\u0275\u0275elementStart"](340,"ul"),m["\u0275\u0275text"](341,"\n            "),m["\u0275\u0275elementStart"](342,"li"),m["\u0275\u0275elementStart"](343,"code"),m["\u0275\u0275text"](344,"SliderSnap.None"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](345," - No snapping will occur. This is the default value."),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](346,"\n            "),m["\u0275\u0275elementStart"](347,"li"),m["\u0275\u0275elementStart"](348,"code"),m["\u0275\u0275text"](349,"SliderSnap.Major"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](350," - Will snap to the major ticks."),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](351,"\n            "),m["\u0275\u0275elementStart"](352,"li"),m["\u0275\u0275elementStart"](353,"code"),m["\u0275\u0275text"](354,"SliderSnap.Minor"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](355," - Will snap to the minor ticks."),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](356,"\n            "),m["\u0275\u0275elementStart"](357,"li"),m["\u0275\u0275elementStart"](358,"code"),m["\u0275\u0275text"](359,"SliderSnap.All"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](360," - Will snap to both the major and minor ticks."),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](361,"\n        "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](362,"\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](363,"\n    "),m["\u0275\u0275elementStart"](364,"tr",49),m["\u0275\u0275text"](365,"\n        Should be an object containing properties that configure the major ticks. Major ticks will be more prominent than minor ticks and tend to be less frequent.\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](366,"\n    "),m["\u0275\u0275elementStart"](367,"tr",50),m["\u0275\u0275text"](368,"\n        Should be an object containing properties that configure the minor ticks. Minor ticks will be less prominent than major ticks and tend to be more frequent.\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](369,"\n"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](370,"\n\n"),m["\u0275\u0275elementStart"](371,"uxd-api-properties",51),m["\u0275\u0275text"](372,"\n    "),m["\u0275\u0275elementStart"](373,"tr",52),m["\u0275\u0275text"](374,"\n        Specifies whether this variety of ticks should be shown. The available options are "),m["\u0275\u0275elementStart"](375,"code"),m["\u0275\u0275text"](376,"true"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](377," or "),m["\u0275\u0275elementStart"](378,"code"),m["\u0275\u0275text"](379,"false"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](380,".\n                By default both major and minor ticks will be shown.\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](381,"\n    "),m["\u0275\u0275elementStart"](382,"tr",53),m["\u0275\u0275text"](383,"\n        Specifies at what interval this variety of tick should appear. Default for major ticks is "),m["\u0275\u0275elementStart"](384,"code"),m["\u0275\u0275text"](385,"10"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](386,", the\n        default for minor ticks is "),m["\u0275\u0275elementStart"](387,"code"),m["\u0275\u0275text"](388,"5"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](389,". Additionally this can be an array containing precise values of\n        where ticks should appear. This can be useful when ticks should not appear at regular intervals.\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](390,"\n    "),m["\u0275\u0275elementStart"](391,"tr",54),m["\u0275\u0275text"](392,"\n        Specifies whether or not this variety of ticks should display labels. The available options are\n        "),m["\u0275\u0275elementStart"](393,"code"),m["\u0275\u0275text"](394,"true"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](395," or "),m["\u0275\u0275elementStart"](396,"code"),m["\u0275\u0275text"](397,"false"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](398,". By default major ticks will show labels, minor ticks will not.\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](399,"\n    "),m["\u0275\u0275elementStart"](400,"tr",55),m["\u0275\u0275text"](401,"\n        This allows you to specify a function that will format the value in the tick label.\n        This should accept a value as a parameter and return a modified value. By default the value will not be modified.\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](402,"\n"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](403,"\n\n"),m["\u0275\u0275elementStart"](404,"uxd-api-properties",56),m["\u0275\u0275text"](405,"\n    "),m["\u0275\u0275elementStart"](406,"tr",57),m["\u0275\u0275text"](407,"\n        If there are no major ticks specified, the slider thumb will move by this amount whenever the Page Up/Page Down keys are pressed.\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](408,"\n    "),m["\u0275\u0275elementStart"](409,"tr",58),m["\u0275\u0275text"](410,"\n        If there are no minor ticks specified, the slider thumb will move by this amount whenever the Arrow keys are pressed.\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](411,"\n"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](412,"\n\n"),m["\u0275\u0275elementStart"](413,"uxd-api-properties",59),m["\u0275\u0275text"](414,"\n    "),m["\u0275\u0275elementStart"](415,"tr",60),m["\u0275\u0275text"](416,"\n        The thumb aria label when a value slider is used.\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](417,"\n    "),m["\u0275\u0275elementStart"](418,"tr",61),m["\u0275\u0275text"](419,"\n        The lower thumb aria label when a range slider is used.\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](420,"\n    "),m["\u0275\u0275elementStart"](421,"tr",62),m["\u0275\u0275text"](422,"\n        The upper thumb aria label when a range slider is used.\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](423,"\n"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](424,"\n\n"),m["\u0275\u0275elementStart"](425,"h4"),m["\u0275\u0275text"](426,"Adding Text Input Controls"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](427,"\n\n"),m["\u0275\u0275elementStart"](428,"p"),m["\u0275\u0275text"](429,"Text inputs, or other controls can be used to allow users to change the value shown on the slider or to display the value\n    the slider has selected. These controls are not part of the slider component but can be easily combined by using the\n    "),m["\u0275\u0275elementStart"](430,"code"),m["\u0275\u0275text"](431,"ngModel"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](432," directive. Below is an example of how this can be achieved:"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](433,"\n\n"),m["\u0275\u0275elementStart"](434,"ux-tabset",63),m["\u0275\u0275text"](435,"\n    "),m["\u0275\u0275elementStart"](436,"ux-tab",64),m["\u0275\u0275text"](437,"\n        "),m["\u0275\u0275element"](438,"uxd-snippet",20),m["\u0275\u0275text"](439,"\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](440,"\n    "),m["\u0275\u0275elementStart"](441,"ux-tab",65),m["\u0275\u0275text"](442,"\n        "),m["\u0275\u0275element"](443,"uxd-snippet",20),m["\u0275\u0275text"](444,"\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](445,"\n"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](446,"\n")),2&n&&(m["\u0275\u0275advance"](15),m["\u0275\u0275property"]("value",a.slider1.value)("options",a.slider1.options)("disabled",a.disabled),m["\u0275\u0275advance"](8),m["\u0275\u0275property"]("value",a.slider2.value)("options",a.slider2.options)("disabled",a.disabled),m["\u0275\u0275advance"](13),m["\u0275\u0275property"]("value",a.slider3.value)("options",a.slider3.options)("disabled",a.disabled),m["\u0275\u0275advance"](8),m["\u0275\u0275property"]("value",a.slider4.value)("options",a.slider4.options)("disabled",a.disabled),m["\u0275\u0275advance"](19),m["\u0275\u0275property"]("value",a.slider5.value)("options",a.slider5.options)("disabled",a.disabled),m["\u0275\u0275advance"](8),m["\u0275\u0275property"]("value",a.slider6.value)("options",a.slider6.options)("disabled",a.disabled),m["\u0275\u0275advance"](16),m["\u0275\u0275property"]("value",a.slider7.value)("options",a.slider7.options)("disabled",a.disabled),m["\u0275\u0275advance"](8),m["\u0275\u0275property"]("ngModel",a.lowerValue)("disabled",a.disabled),m["\u0275\u0275advance"](5),m["\u0275\u0275property"]("ngModel",a.upperValue)("disabled",a.disabled),m["\u0275\u0275advance"](17),m["\u0275\u0275property"]("value",a.disabled),m["\u0275\u0275advance"](20),m["\u0275\u0275property"]("content",a.snippets.compiled.sample1Html),m["\u0275\u0275advance"](47),m["\u0275\u0275property"]("content",a.snippets.compiled.sample1Ts),m["\u0275\u0275advance"](5),m["\u0275\u0275property"]("content",a.snippets.compiled.sample2Ts),m["\u0275\u0275advance"](17),m["\u0275\u0275property"]("content",a.snippets.compiled.sample3Ts),m["\u0275\u0275advance"](228),m["\u0275\u0275property"]("minimal",!1),m["\u0275\u0275advance"](4),m["\u0275\u0275property"]("content",a.snippets.compiled.sample4Html),m["\u0275\u0275advance"](5),m["\u0275\u0275property"]("content",a.snippets.compiled.sample4Ts))},directives:[l.SliderComponent,p.DefaultValueAccessor,p.NgControlStatus,p.NgModel,l.AccordionComponent,l.AccordionPanelComponent,l.CheckboxComponent,h.j,g.$,x.S,l.TabsetComponent,l.TabComponent],encapsulation:2}),a=function(n,a,t,s){var e,p=arguments.length,o=p<3?a:null===s?s=Object.getOwnPropertyDescriptor(a,t):s;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(n,a,t,s);else for(var l=n.length-1;l>=0;l--)(e=n[l])&&(o=(p<3?e(o):p>3?e(a,t,o):e(a,t))||o);return p>3&&o&&Object.defineProperty(a,t,o),o}([(0,d.cG)("ComponentsSlidersComponent"),W("design:paramtypes",[l.ColorService])],a)}(k.u),Z=t(31741),J=function(){var n=function(a,t){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,a){n.__proto__=a}||function(n,a){for(var t in a)Object.prototype.hasOwnProperty.call(a,t)&&(n[t]=a[t])})(a,t)};return function(a,t){if("function"!=typeof t&&null!==t)throw new TypeError("Class extends value "+String(t)+" is not a constructor or null");function s(){this.constructor=a}n(a,t),a.prototype=null===t?Object.create(t):(s.prototype=t.prototype,new s)}}(),Y=function(n,a){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(n,a)};function Q(n,a){if(1&n&&(m["\u0275\u0275elementStart"](0,"ux-typeahead",75),m["\u0275\u0275text"](1,"\n                "),m["\u0275\u0275elementEnd"]()),2&n){var t=m["\u0275\u0275nextContext"]();m["\u0275\u0275property"]("filter",t.input)("options",t.allTags)("disabledOptions",t.tags)("dropDirection",t.dropDirection)("multiselectable",!0)("selectFirst",t.selectFirst)}}function nn(n,a){if(1&n&&(m["\u0275\u0275elementStart"](0,"span",76),m["\u0275\u0275text"](1,"\n                "),m["\u0275\u0275element"](2,"ux-icon",77),m["\u0275\u0275text"](3),m["\u0275\u0275elementEnd"]()),2&n){m["\u0275\u0275nextContext"]();var t=m["\u0275\u0275reference"](7);m["\u0275\u0275advance"](3),m["\u0275\u0275textInterpolate2"]("\n                Required: number of tags between ",t.validationErrors.tagRangeError.min," and ",t.validationErrors.tagRangeError.max,".\n            ")}}function an(n,a){if(1&n&&(m["\u0275\u0275elementStart"](0,"span",76),m["\u0275\u0275text"](1,"\n                "),m["\u0275\u0275element"](2,"ux-icon",77),m["\u0275\u0275text"](3),m["\u0275\u0275elementEnd"]()),2&n){m["\u0275\u0275nextContext"]();var t=m["\u0275\u0275reference"](7);m["\u0275\u0275advance"](3),m["\u0275\u0275textInterpolate1"]("\n                Expected format: ",t.validationErrors.inputPattern.pattern.source,"\n            ")}}function tn(n,a){if(1&n){var t=m["\u0275\u0275getCurrentView"]();m["\u0275\u0275elementStart"](0,"button",81),m["\u0275\u0275listener"]("click",(function(n){m["\u0275\u0275restoreView"](t);var a=m["\u0275\u0275nextContext"]();return a.api.removeTagAt(a.index),n.stopPropagation()})),m["\u0275\u0275text"](1,"\n        "),m["\u0275\u0275element"](2,"i",82),m["\u0275\u0275text"](3,"\n    "),m["\u0275\u0275elementEnd"]()}if(2&n){var s=m["\u0275\u0275nextContext"](2);m["\u0275\u0275property"]("disabled",s.disabled)}}function sn(n,a){if(1&n&&(m["\u0275\u0275text"](0,"\n    "),m["\u0275\u0275element"](1,"i",78),m["\u0275\u0275text"](2,"\n    "),m["\u0275\u0275elementStart"](3,"span",79),m["\u0275\u0275text"](4),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](5,"\n    "),m["\u0275\u0275template"](6,tn,4,1,"button",80),m["\u0275\u0275text"](7,"\n")),2&n){var t=a.tag,s=a.index,e=a.api;m["\u0275\u0275advance"](4),m["\u0275\u0275textInterpolate"](e.getTagDisplay(t)),m["\u0275\u0275advance"](2),m["\u0275\u0275property"]("ngIf",e.canRemoveTagAt(s))}}var en=function(n){return[n]},pn=function(n){function a(a){var s=n.call(this,t(19232))||this;return s._documentationType=a,s.tags=["Alpha","Beta","Kappa"],s.allTags=["Alpha","Beta","Gamma","Delta","Epsilon","Zeta","Eta","Theta","Iota","Kappa","Lambda","Mu","Nu","Xi","Omicron","Pi","Rho","Sigma","Tau","Upsilon","Phi","Chi","Psi","Omega"],s.addOnPaste=!0,s.disabled=!1,s.enforceTagLimits=!1,s.freeInput=!0,s.minTags=1,s.maxTags=10,s.placeholder="Add a tag",s.tagDelimiters=" ,",s.typeaheadEnabled=!1,s.selectFirst=!0,s.dropDirection="down",s.showTypeaheadOnClick=!1,s.playground={files:{"app.component.ts":s.snippets.raw.appTs,"app.component.html":s.snippets.raw.appHtml,"app.component.css":s.snippets.raw.appCss},modules:[{imports:["TagInputModule","TypeaheadModule","CheckboxModule","RadioButtonModule","NumberPickerModule","AccordionModule"],library:"@ux-aspects/ux-aspects"}]},s.typeaheadDocumentationRoute=a===Z.E.MicroFocus?"ui-components/input-controls":"components/input-controls",s}return J(a,n),Object.defineProperty(a.prototype,"tagPattern",{get:function(){return this.tagPatternRegExp?this.tagPatternRegExp.source:""},set:function(n){if(n)try{this.tagPatternRegExp=new RegExp(n)}catch(a){this.tagPatternRegExp=null}else this.tagPatternRegExp=null},enumerable:!1,configurable:!0}),a.\u0275fac=function(n){return new(n||a)(m["\u0275\u0275directiveInject"](Z.d))},a.\u0275cmp=m["\u0275\u0275defineComponent"]({type:a,selectors:[["uxd-components-tags"]],features:[m["\u0275\u0275InheritDefinitionFeature"]],decls:511,vars:44,consts:[[1,"row"],[1,"col-md-12","form-group-validate","has-feedback"],[3,"tags","input","addOnPaste","disabled","enforceTagLimits","freeInput","minTags","maxTags","placeholder","showTypeaheadOnClick","tagDelimiters","tagPattern","tagsChange","inputChange"],["tagInput",""],[3,"filter","options","disabledOptions","dropDirection","multiselectable","selectFirst",4,"ngIf"],["class","validation-error-text",4,"ngIf"],[1,"row","uxd-customize-example"],[1,"col-md-12"],["heading","Customize Example...",1,"accordion-chevron"],[1,"row","uxd-customize-row"],[1,"col-md-4","col-sm-12"],[3,"value","valueChange"],["for","minTags"],["min","0",3,"value","max","valueChange"],["for","maxTags"],["max","1000",3,"value","min","valueChange"],["for","tagPattern"],["type","text","name","tagPattern",1,"form-control",3,"ngModel","ngModelChange"],["for","placeholder"],["type","text","name","placeholder",1,"form-control",3,"ngModel","ngModelChange"],["for","tagDelimiters"],["type","text","name","tagDelimiters",1,"form-control",3,"ngModel","ngModelChange"],[1,"col-sm-12"],[3,"value","disabled","valueChange"],["for","dropDirection"],["option","down",3,"value","disabled","valueChange"],["option","up",3,"value","disabled","valueChange"],["demoTagTemplate",""],["fragment","typeahead",3,"routerLink"],["tableTitle","Inputs"],["uxd-api-property","","name","tags","type","any[]"],["uxd-api-property","","name","input","type","string"],["uxd-api-property","","name","addOnPaste","type","boolean","defaultValue","true"],["uxd-api-property","","name","ariaLabel","type","string"],["uxd-api-property","","name","disabled","type","boolean","defaultValue","false"],["uxd-api-property","","name","required","type","boolean","defaultValue","false"],["uxd-api-property","","name","display","type","(option: any) => string | string"],["uxd-api-property","","name","enforceTagLimits","type","boolean","defaultValue","false"],["uxd-api-property","","name","freeInput","type","boolean","defaultValue","true"],["uxd-api-property","","name","maxTags","type","number","defaultValue","unlimiited"],["uxd-api-property","","name","minTags","type","number","defaultValue","0"],["uxd-api-property","","name","placeholder","type","string"],["uxd-api-property","","name","readonlyInput","type","boolean","defaultValue","false"],["uxd-api-property","","name","showTypeaheadOnClick","type","boolean","defaultValue","false"],["uxd-api-property","","name","tagDelimiters","type","string","defaultValue","no delimiters"],["uxd-api-property","","name","tagPattern","type","RegExp","defaultValue","null"],["uxd-api-property","","name","tagTemplate","type","TemplateRef"],[3,"content"],["uxd-api-property","","name","tagClass","type","TagClassFunction"],["href","https://angular.io/api/common/NgClass"],["uxd-api-property","","name","validationErrors","type","any"],["uxd-api-property","","name","createTag","type","(value: string) => any"],["uxd-api-property","","name","autocomplete","type","string","defaultValue","off"],["uxd-api-property","","name","autoCloseDropdown","type","boolean","defaultValue","true"],["tableTitle","Outputs"],["uxd-api-property","","name","tagsChange","type","any[]"],["uxd-api-property","","name","inputChange","type","string"],["uxd-api-property","","name","inputFocus","type","EventEmitter<FocusEvent>"],["uxd-api-property","","name","inputBlur","type","EventEmitter<FocusEvent>"],["uxd-api-property","","name","tagAdding","type","EventEmitter<TagInputEvent>"],["uxd-api-property","","name","tagAdded","type","EventEmitter<TagInputEvent>"],["uxd-api-property","","name","tagInvalidated","type","EventEmitter<TagInputEvent>"],["uxd-api-property","","name","tagRemoving","type","EventEmitter<TagInputEvent>"],["uxd-api-property","","name","tagRemoved","type","EventEmitter<TagInputEvent>"],["uxd-api-property","","name","tagClick","type","EventEmitter<TagInputEvent>"],["uxd-api-property","","name","getTagDisplay","args","tag: any","returns","string"],["uxd-api-property","","name","removeTagAt","args","index: number"],["uxd-api-property","","name","canRemoveTagAt","args","index: number","returns","boolean"],[3,"minimal"],["heading","HTML"],["language","html",3,"content"],["heading","TypeScript"],["language","javascript",3,"content"],["heading","CSS"],["language","css",3,"content"],[3,"filter","options","disabledOptions","dropDirection","multiselectable","selectFirst"],[1,"validation-error-text"],["name","alert"],[1,"ux-icon","ux-icon-tag"],[1,"ux-tag-text"],["uxFocusIndicator","","type","button","class","ux-tag-remove",3,"disabled","click",4,"ngIf"],["uxFocusIndicator","","type","button",1,"ux-tag-remove",3,"disabled","click"],[1,"ux-icon","ux-icon-close"]],template:function(n,a){if(1&n&&(m["\u0275\u0275elementStart"](0,"div",0),m["\u0275\u0275text"](1,"\n    "),m["\u0275\u0275elementStart"](2,"div",1),m["\u0275\u0275text"](3,"\n        "),m["\u0275\u0275elementStart"](4,"form"),m["\u0275\u0275text"](5,"\n            "),m["\u0275\u0275elementStart"](6,"ux-tag-input",2,3),m["\u0275\u0275listener"]("tagsChange",(function(n){return a.tags=n}))("inputChange",(function(n){return a.input=n})),m["\u0275\u0275text"](8,"\n\n                "),m["\u0275\u0275template"](9,Q,2,6,"ux-typeahead",4),m["\u0275\u0275text"](10,"\n\n            "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](11,"\n            "),m["\u0275\u0275template"](12,nn,4,2,"span",5),m["\u0275\u0275text"](13,"\n            "),m["\u0275\u0275template"](14,an,4,1,"span",5),m["\u0275\u0275text"](15,"\n        "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](16,"\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](17,"\n"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](18,"\n\n"),m["\u0275\u0275elementStart"](19,"div",6),m["\u0275\u0275text"](20,"\n    "),m["\u0275\u0275elementStart"](21,"div",7),m["\u0275\u0275text"](22,"\n        "),m["\u0275\u0275elementStart"](23,"ux-accordion"),m["\u0275\u0275text"](24,"\n            "),m["\u0275\u0275elementStart"](25,"ux-accordion-panel",8),m["\u0275\u0275text"](26,"\n                "),m["\u0275\u0275elementStart"](27,"div",9),m["\u0275\u0275text"](28,"\n                    "),m["\u0275\u0275elementStart"](29,"div",10),m["\u0275\u0275text"](30,"\n                        "),m["\u0275\u0275elementStart"](31,"ux-checkbox",11),m["\u0275\u0275listener"]("valueChange",(function(n){return a.addOnPaste=n})),m["\u0275\u0275text"](32,"addOnPaste"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](33,"\n                    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](34,"\n                    "),m["\u0275\u0275elementStart"](35,"div",10),m["\u0275\u0275text"](36,"\n                        "),m["\u0275\u0275elementStart"](37,"ux-checkbox",11),m["\u0275\u0275listener"]("valueChange",(function(n){return a.disabled=n})),m["\u0275\u0275text"](38,"disabled"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](39,"\n                    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](40,"\n                    "),m["\u0275\u0275elementStart"](41,"div",10),m["\u0275\u0275text"](42,"\n                        "),m["\u0275\u0275elementStart"](43,"ux-checkbox",11),m["\u0275\u0275listener"]("valueChange",(function(n){return a.enforceTagLimits=n})),m["\u0275\u0275text"](44,"enforceTagLimits"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](45,"\n                    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](46,"\n                "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](47,"\n                "),m["\u0275\u0275elementStart"](48,"div",9),m["\u0275\u0275text"](49,"\n                    "),m["\u0275\u0275elementStart"](50,"div",10),m["\u0275\u0275text"](51,"\n                        "),m["\u0275\u0275elementStart"](52,"label",12),m["\u0275\u0275text"](53,"minTags"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](54,"\n                        "),m["\u0275\u0275elementStart"](55,"ux-number-picker-inline",13),m["\u0275\u0275listener"]("valueChange",(function(n){return a.minTags=n})),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](56,"\n                    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](57,"\n                    "),m["\u0275\u0275elementStart"](58,"div",10),m["\u0275\u0275text"](59,"\n                        "),m["\u0275\u0275elementStart"](60,"label",14),m["\u0275\u0275text"](61,"maxTags"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](62,"\n                        "),m["\u0275\u0275elementStart"](63,"ux-number-picker-inline",15),m["\u0275\u0275listener"]("valueChange",(function(n){return a.maxTags=n})),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](64,"\n                    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](65,"\n                    "),m["\u0275\u0275elementStart"](66,"div",10),m["\u0275\u0275text"](67,"\n                        "),m["\u0275\u0275elementStart"](68,"label",16),m["\u0275\u0275text"](69,"tagPattern"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](70,"\n                        "),m["\u0275\u0275elementStart"](71,"input",17),m["\u0275\u0275listener"]("ngModelChange",(function(n){return a.tagPattern=n})),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](72,"\n                    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](73,"\n                "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](74,"\n                "),m["\u0275\u0275elementStart"](75,"div",9),m["\u0275\u0275text"](76,"\n                    "),m["\u0275\u0275elementStart"](77,"div",10),m["\u0275\u0275text"](78,"\n                        "),m["\u0275\u0275elementStart"](79,"label",18),m["\u0275\u0275text"](80,"placeholder"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](81,"\n                        "),m["\u0275\u0275elementStart"](82,"input",19),m["\u0275\u0275listener"]("ngModelChange",(function(n){return a.placeholder=n})),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](83,"\n                    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](84,"\n                    "),m["\u0275\u0275elementStart"](85,"div",10),m["\u0275\u0275text"](86,"\n                        "),m["\u0275\u0275elementStart"](87,"label",20),m["\u0275\u0275text"](88,"tagDelimiters"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](89,"\n                        "),m["\u0275\u0275elementStart"](90,"input",21),m["\u0275\u0275listener"]("ngModelChange",(function(n){return a.tagDelimiters=n})),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](91,"\n                    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](92,"\n                "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](93,"\n                "),m["\u0275\u0275elementStart"](94,"div",9),m["\u0275\u0275text"](95,"\n                    "),m["\u0275\u0275elementStart"](96,"div",22),m["\u0275\u0275text"](97,"\n                        "),m["\u0275\u0275elementStart"](98,"ux-checkbox",11),m["\u0275\u0275listener"]("valueChange",(function(n){return a.typeaheadEnabled=n})),m["\u0275\u0275text"](99,"Enable Typeahead"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](100,"\n                    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](101,"\n                "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](102,"\n                "),m["\u0275\u0275elementStart"](103,"div",9),m["\u0275\u0275text"](104,"\n                    "),m["\u0275\u0275elementStart"](105,"div",10),m["\u0275\u0275text"](106,"\n                        "),m["\u0275\u0275elementStart"](107,"ux-checkbox",23),m["\u0275\u0275listener"]("valueChange",(function(n){return a.freeInput=n})),m["\u0275\u0275text"](108,"freeInput"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](109,"\n                    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](110,"\n                    "),m["\u0275\u0275elementStart"](111,"div",10),m["\u0275\u0275text"](112,"\n                        "),m["\u0275\u0275elementStart"](113,"ux-checkbox",23),m["\u0275\u0275listener"]("valueChange",(function(n){return a.selectFirst=n})),m["\u0275\u0275text"](114,"selectFirst"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](115,"\n                    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](116,"\n                    "),m["\u0275\u0275elementStart"](117,"div",10),m["\u0275\u0275text"](118,"\n                        "),m["\u0275\u0275elementStart"](119,"ux-checkbox",23),m["\u0275\u0275listener"]("valueChange",(function(n){return a.showTypeaheadOnClick=n})),m["\u0275\u0275text"](120,"showTypeaheadOnClick"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](121,"\n                    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](122,"\n                "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](123,"\n                "),m["\u0275\u0275elementStart"](124,"div",9),m["\u0275\u0275text"](125,"\n                    "),m["\u0275\u0275elementStart"](126,"div",10),m["\u0275\u0275text"](127,"\n                        "),m["\u0275\u0275elementStart"](128,"label",24),m["\u0275\u0275text"](129,"dropDirection"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](130,"\n                        "),m["\u0275\u0275elementStart"](131,"ux-radio-button",25),m["\u0275\u0275listener"]("valueChange",(function(n){return a.dropDirection=n})),m["\u0275\u0275text"](132,"down"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](133,"\n                        "),m["\u0275\u0275elementStart"](134,"ux-radio-button",26),m["\u0275\u0275listener"]("valueChange",(function(n){return a.dropDirection=n})),m["\u0275\u0275text"](135,"up"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](136,"\n                    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](137,"\n                "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](138,"\n            "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](139,"\n        "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](140,"\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](141,"\n"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](142,"\n\n"),m["\u0275\u0275template"](143,sn,8,2,"ng-template",null,27,m["\u0275\u0275templateRefExtractor"]),m["\u0275\u0275text"](145,"\n\n"),m["\u0275\u0275element"](146,"hr"),m["\u0275\u0275text"](147,"\n\n"),m["\u0275\u0275elementStart"](148,"p"),m["\u0275\u0275text"](149,"The "),m["\u0275\u0275elementStart"](150,"code"),m["\u0275\u0275text"](151,"ux-tag-input"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](152," component allows an array of strings or custom objects to be displayed as tags inside a\n    text input box. Optionally, a "),m["\u0275\u0275elementStart"](153,"a",28),m["\u0275\u0275text"](154,"typeahead dropdown"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](155,"\n    can be configured to aid addition of tags to the control.\n"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](156,"\n\n"),m["\u0275\u0275elementStart"](157,"p"),m["\u0275\u0275text"](158,'Many of the customization parameters of the tag input component are available to edit in the example above by expanding\n    the "Customize Example..." section. Documentation of these parameters follows.'),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](159,"\n\n"),m["\u0275\u0275elementStart"](160,"h4"),m["\u0275\u0275text"](161,"Tag Input"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](162,"\n\n"),m["\u0275\u0275elementStart"](163,"p"),m["\u0275\u0275text"](164,"The "),m["\u0275\u0275elementStart"](165,"code"),m["\u0275\u0275text"](166,"ux-tag-input"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](167," component provides the input field seen in the example, and has the following properties:"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](168,"\n\n"),m["\u0275\u0275elementStart"](169,"uxd-api-properties",29),m["\u0275\u0275text"](170,"\n    "),m["\u0275\u0275elementStart"](171,"tr",30),m["\u0275\u0275text"](172,"\n        The list of tags appearing in the tag input. This can be an array of strings or custom objects.\n        See the "),m["\u0275\u0275elementStart"](173,"code"),m["\u0275\u0275text"](174,"displayProperty"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](175," property for details of using a custom object.\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](176,"\n    "),m["\u0275\u0275elementStart"](177,"tr",31),m["\u0275\u0275text"](178,"\n        The editable text appearing in the tag input.\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](179,"\n    "),m["\u0275\u0275elementStart"](180,"tr",32),m["\u0275\u0275text"](181,"\n        Controls whether pasting text into the text input area automatically converts that text into one or more tags.\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](182,"\n    "),m["\u0275\u0275elementStart"](183,"tr",33),m["\u0275\u0275text"](184,"\n        The aria-label to apply to the child "),m["\u0275\u0275elementStart"](185,"code"),m["\u0275\u0275text"](186,"input"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](187," element.\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](188,"\n    "),m["\u0275\u0275elementStart"](189,"tr",34),m["\u0275\u0275text"](190,"\n        Controls the disabled state of the tag input.\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](191,"\n    "),m["\u0275\u0275elementStart"](192,"tr",35),m["\u0275\u0275text"](193,"\n        If set to "),m["\u0275\u0275elementStart"](194,"code"),m["\u0275\u0275text"](195,"true"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](196," the tag input will be marked as required.\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](197,"\n    "),m["\u0275\u0275elementStart"](198,"tr",36),m["\u0275\u0275text"](199,"\n        Determines the display value of the "),m["\u0275\u0275elementStart"](200,"code"),m["\u0275\u0275text"](201,"options"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](202,", if they are custom objects.\n        This may be a function or a string. If a function is provided, it receives the option object as\n        an argument, and should return the appropriate display value. If the name of a property is\n        provided as a string, that property is used as the display value.\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](203,"\n    "),m["\u0275\u0275elementStart"](204,"tr",37),m["\u0275\u0275text"](205,"\n        If set to true, the tag input will prevent addition and removal of tags to enforce the\n        "),m["\u0275\u0275elementStart"](206,"code"),m["\u0275\u0275text"](207,"minTags"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](208," and "),m["\u0275\u0275elementStart"](209,"code"),m["\u0275\u0275text"](210,"maxTags"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](211," settings. Otherwise, a validation error will be raised.\n\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](212,"\n    "),m["\u0275\u0275elementStart"](213,"tr",38),m["\u0275\u0275text"](214,"\n        If true, input entered into the text input area can be converted into a tag by pressing enter.\n        Otherwise, tags can only be added from the typeahead list or other external means.\n        (Note that the "),m["\u0275\u0275elementStart"](215,"code"),m["\u0275\u0275text"](216,"maxTags"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](217," and "),m["\u0275\u0275elementStart"](218,"code"),m["\u0275\u0275text"](219,"tagPattern"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](220," will prevent invalid inputs\n        regardless of this setting.)\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](221,"\n    "),m["\u0275\u0275elementStart"](222,"tr",39),m["\u0275\u0275text"](223,"\n        The maximum number of tags permitted in the tag input. If the number of tags is equal to\n        "),m["\u0275\u0275elementStart"](224,"code"),m["\u0275\u0275text"](225,"maxTags"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](226," and "),m["\u0275\u0275elementStart"](227,"code"),m["\u0275\u0275text"](228,"enforceTagLimits"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](229," is true, addition of tags will be\n        prevented until a tag is removed.\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](230,"\n    "),m["\u0275\u0275elementStart"](231,"tr",40),m["\u0275\u0275text"](232,"\n        The minimum number of tags permitted in the tag input. If the number of tags is equal to\n        "),m["\u0275\u0275elementStart"](233,"code"),m["\u0275\u0275text"](234,"minTags"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](235," and "),m["\u0275\u0275elementStart"](236,"code"),m["\u0275\u0275text"](237,"enforceTagLimits"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](238," is true, removal of tags will be prevented\n        until a new tag is added.\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](239,"\n    "),m["\u0275\u0275elementStart"](240,"tr",41),m["\u0275\u0275text"](241,"\n        The placeholder text which appears in the text input area when it is empty.\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](242,"\n    "),m["\u0275\u0275elementStart"](243,"tr",42),m["\u0275\u0275text"](244,"\n        If "),m["\u0275\u0275elementStart"](245,"code"),m["\u0275\u0275text"](246,"true"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](247," the input field will be readonly and selection can only occur by using the dropdown.\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](248,"\n    "),m["\u0275\u0275elementStart"](249,"tr",43),m["\u0275\u0275text"](250,"\n        Controls whether the typeahead appears when the text input area is clicked. This has no effect\n        if the "),m["\u0275\u0275elementStart"](251,"code"),m["\u0275\u0275text"](252,"ux-typeahead"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](253," component is not configured.\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](254,"\n    "),m["\u0275\u0275elementStart"](255,"tr",44),m["\u0275\u0275text"](256,"\n        A string containing the characters which delimit tags. Typing one of the characters in\n        "),m["\u0275\u0275elementStart"](257,"code"),m["\u0275\u0275text"](258,"tagDelimiters"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](259," will cause the preceding text to be added as a tag, and the text\n        input area will be cleared. Pasting a string containing one or more of characters in\n        "),m["\u0275\u0275elementStart"](260,"code"),m["\u0275\u0275text"](261,"tagDelimiters"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](262," will cause the string to be split into multiple tags. Note that the\n        delimiter character will not be part of the tag text.\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](263,"\n    "),m["\u0275\u0275elementStart"](264,"tr",45),m["\u0275\u0275text"](265,"\n        The validation expression for tags added via the input text area. Strings which do not match\n        this expression will not be added as tags.\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](266,"\n    "),m["\u0275\u0275elementStart"](267,"tr",46),m["\u0275\u0275text"](268,"\n        "),m["\u0275\u0275elementStart"](269,"p"),m["\u0275\u0275text"](270,"A template which will be rendered as the content of each tag. The following context\n            properties are available in the template:"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](271,"\n        "),m["\u0275\u0275elementStart"](272,"ul"),m["\u0275\u0275text"](273,"\n            "),m["\u0275\u0275elementStart"](274,"li"),m["\u0275\u0275elementStart"](275,"code"),m["\u0275\u0275text"](276,"tag: any"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](277," - the string or custom object representing the tag."),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](278,"\n            "),m["\u0275\u0275elementStart"](279,"li"),m["\u0275\u0275elementStart"](280,"code"),m["\u0275\u0275text"](281,"index: number"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](282," - the zero-based index of the tag as it appears in the tag\n            input."),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](283,"\n            "),m["\u0275\u0275elementStart"](284,"li"),m["\u0275\u0275elementStart"](285,"code"),m["\u0275\u0275text"](286,"api: TagApi"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](287," - provides the functions "),m["\u0275\u0275elementStart"](288,"code"),m["\u0275\u0275text"](289,"getTagDisplay"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](290,",\n            "),m["\u0275\u0275elementStart"](291,"code"),m["\u0275\u0275text"](292,"removeTagAt"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](293," and "),m["\u0275\u0275elementStart"](294,"code"),m["\u0275\u0275text"](295,"canRemoveTagAt"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](296,". See the section below for more\n            information."),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](297,"\n        "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](298,"\n        "),m["\u0275\u0275elementStart"](299,"p"),m["\u0275\u0275text"](300,"\n            The following code snippet shows how to use a custom template to display an icon alongside the tag text:\n        "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](301,"\n        "),m["\u0275\u0275element"](302,"uxd-snippet",47),m["\u0275\u0275text"](303,"\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](304,"\n    "),m["\u0275\u0275elementStart"](305,"tr",48),m["\u0275\u0275text"](306,"\n        "),m["\u0275\u0275elementStart"](307,"p"),m["\u0275\u0275text"](308,"A function which returns either a "),m["\u0275\u0275elementStart"](309,"code"),m["\u0275\u0275text"](310,"string"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](311,", "),m["\u0275\u0275elementStart"](312,"code"),m["\u0275\u0275text"](313,"string[]"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](314,", or\n        "),m["\u0275\u0275elementStart"](315,"code"),m["\u0275\u0275text"](316,"Set<string>"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](317,", compatible with the "),m["\u0275\u0275elementStart"](318,"a",49),m["\u0275\u0275text"](319,"\n        NgClass directive"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](320,". The function receives the following parameters:"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](321,"\n        "),m["\u0275\u0275elementStart"](322,"ul"),m["\u0275\u0275text"](323,"\n            "),m["\u0275\u0275elementStart"](324,"li"),m["\u0275\u0275elementStart"](325,"code"),m["\u0275\u0275text"](326,"tag: any"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](327," - the string or custom object representing the tag."),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](328,"\n            "),m["\u0275\u0275elementStart"](329,"li"),m["\u0275\u0275elementStart"](330,"code"),m["\u0275\u0275text"](331,"index: number"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](332," - the zero-based index of the tag as it appears in the tag input."),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](333,"\n            "),m["\u0275\u0275elementStart"](334,"li"),m["\u0275\u0275elementStart"](335,"code"),m["\u0275\u0275text"](336,"selected: boolean"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](337," - true if the tag is currently selected."),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](338,"\n        "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](339,"\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](340,"\n    "),m["\u0275\u0275elementStart"](341,"tr",50),m["\u0275\u0275text"](342,"\n        "),m["\u0275\u0275elementStart"](343,"span"),m["\u0275\u0275text"](344,"An object which contains details of validation errors. The following properties will be\n            present if there is a related validation error:"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](345,"\n        "),m["\u0275\u0275elementStart"](346,"ul"),m["\u0275\u0275text"](347,"\n            "),m["\u0275\u0275elementStart"](348,"li"),m["\u0275\u0275elementStart"](349,"code"),m["\u0275\u0275text"](350,"tagRangeError"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](351," - present if the number of tags is outside the range specified\n            by "),m["\u0275\u0275elementStart"](352,"code"),m["\u0275\u0275text"](353,"minTags"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](354," and "),m["\u0275\u0275elementStart"](355,"code"),m["\u0275\u0275text"](356,"maxTags"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](357,"."),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](358,"\n            "),m["\u0275\u0275elementStart"](359,"li"),m["\u0275\u0275elementStart"](360,"code"),m["\u0275\u0275text"](361,"inputPattern"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](362," - present if an input has been submitted which does not match\n            the "),m["\u0275\u0275elementStart"](363,"code"),m["\u0275\u0275text"](364,"tagPattern"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](365,"."),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](366,"\n        "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](367,"\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](368,"\n    "),m["\u0275\u0275elementStart"](369,"tr",51),m["\u0275\u0275text"](370,"\n        A custom function which is called to create a new tag object. This can be used to populate other\n        properties in the tag object. If "),m["\u0275\u0275elementStart"](371,"code"),m["\u0275\u0275text"](372,"createTag"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](373," is not provided, then an object is\n        created with the "),m["\u0275\u0275elementStart"](374,"code"),m["\u0275\u0275text"](375,"displayProperty"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](376," set to the input. If "),m["\u0275\u0275elementStart"](377,"code"),m["\u0275\u0275text"](378,"displayProperty"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](379,"\n        is also not set, then the tag is created as a simple string.\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](380,"\n    "),m["\u0275\u0275elementStart"](381,"tr",52),m["\u0275\u0275text"](382,"\n        Defines the autocomplete property on the input field which can be used to prevent the browser from displaying autocomplete suggestions.\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](383,"\n    "),m["\u0275\u0275elementStart"](384,"tr",53),m["\u0275\u0275text"](385,"\n        Determine if the dropdown panel should close on external click.\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](386,"\n"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](387,"\n\n"),m["\u0275\u0275elementStart"](388,"uxd-api-properties",54),m["\u0275\u0275text"](389,"\n    "),m["\u0275\u0275elementStart"](390,"tr",55),m["\u0275\u0275text"](391,"\n        Emits when tags is changed.\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](392,"\n    "),m["\u0275\u0275elementStart"](393,"tr",56),m["\u0275\u0275text"](394,"\n        Emits when input is changed.\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](395,"\n    "),m["\u0275\u0275elementStart"](396,"tr",57),m["\u0275\u0275text"](397,"\n        Emits when the component is focused.\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](398,"\n    "),m["\u0275\u0275elementStart"](399,"tr",58),m["\u0275\u0275text"](400,"\n        Emits when the component loses focus.\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](401,"\n    "),m["\u0275\u0275elementStart"](402,"tr",59),m["\u0275\u0275text"](403,"\n        Raised when a tag is about to be added. The "),m["\u0275\u0275elementStart"](404,"code"),m["\u0275\u0275text"](405,"tag"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](406," property of the event contains the\n        tag to be added. Call "),m["\u0275\u0275elementStart"](407,"code"),m["\u0275\u0275text"](408,"preventDefault()"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](409," on the event to prevent addition.\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](410,"\n    "),m["\u0275\u0275elementStart"](411,"tr",60),m["\u0275\u0275text"](412,"\n        Raised when a tag has been added. The "),m["\u0275\u0275elementStart"](413,"code"),m["\u0275\u0275text"](414,"tag"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](415," property of the event contains the tag.\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](416,"\n    "),m["\u0275\u0275elementStart"](417,"tr",61),m["\u0275\u0275text"](418,"\n        Raised when a tag has failed validation according to the "),m["\u0275\u0275elementStart"](419,"code"),m["\u0275\u0275text"](420,"tagPattern"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](421,".\n        The "),m["\u0275\u0275elementStart"](422,"code"),m["\u0275\u0275text"](423,"tag"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](424," property of the event contains the string which failed validation.\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](425,"\n    "),m["\u0275\u0275elementStart"](426,"tr",62),m["\u0275\u0275text"](427,"\n        Raised when a tag is about to be removed. The "),m["\u0275\u0275elementStart"](428,"code"),m["\u0275\u0275text"](429,"tag"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](430," property of the event contains\n        the tag to be removed. Call "),m["\u0275\u0275elementStart"](431,"code"),m["\u0275\u0275text"](432,"preventDefault()"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](433," on the event to prevent removal.\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](434,"\n    "),m["\u0275\u0275elementStart"](435,"tr",63),m["\u0275\u0275text"](436,"\n        Raised when a tag has been removed. The "),m["\u0275\u0275elementStart"](437,"code"),m["\u0275\u0275text"](438,"tag"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](439," property of the event contains the tag.\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](440,"\n    "),m["\u0275\u0275elementStart"](441,"tr",64),m["\u0275\u0275text"](442,"\n        Raised when a tag has been clicked. The "),m["\u0275\u0275elementStart"](443,"code"),m["\u0275\u0275text"](444,"tag"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](445," property of the event contains the\n        clicked tag. Call "),m["\u0275\u0275elementStart"](446,"code"),m["\u0275\u0275text"](447,"preventDefault()"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](448," on the event to prevent the default behaviour\n        of selecting the tag.\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](449,"\n"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](450,"\n\n"),m["\u0275\u0275elementStart"](451,"h4"),m["\u0275\u0275text"](452,"TagApi"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](453,"\n\n"),m["\u0275\u0275elementStart"](454,"p"),m["\u0275\u0275text"](455,"The "),m["\u0275\u0275elementStart"](456,"code"),m["\u0275\u0275text"](457,"api"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](458," object available to the "),m["\u0275\u0275elementStart"](459,"code"),m["\u0275\u0275text"](460,"tagTemplate"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](461," has the following interface:"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](462,"\n\n"),m["\u0275\u0275elementStart"](463,"uxd-api-properties"),m["\u0275\u0275text"](464,"\n    "),m["\u0275\u0275elementStart"](465,"tr",65),m["\u0275\u0275text"](466,"\n        Returns the display value of the given "),m["\u0275\u0275elementStart"](467,"code"),m["\u0275\u0275text"](468,"tag"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](469,", according to the\n        "),m["\u0275\u0275elementStart"](470,"code"),m["\u0275\u0275text"](471,"displayProperty"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](472," property. In custom templates where the tag data format is known,\n        this function does not need to be called.\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](473,"\n    "),m["\u0275\u0275elementStart"](474,"tr",66),m["\u0275\u0275text"](475,"\n        Removes the tag at the given "),m["\u0275\u0275elementStart"](476,"code"),m["\u0275\u0275text"](477,"index"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](478,", if possible. This may be prevented by the\n        "),m["\u0275\u0275elementStart"](479,"code"),m["\u0275\u0275text"](480,"minTags"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](481," setting.\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](482,"\n    "),m["\u0275\u0275elementStart"](483,"tr",67),m["\u0275\u0275text"](484,"\n        Returns true if the tag at the given "),m["\u0275\u0275elementStart"](485,"code"),m["\u0275\u0275text"](486,"index"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](487," can be removed. In the example,\n        this is used to control the visibility of the remove button.\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](488,"\n"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](489,"\n\n"),m["\u0275\u0275elementStart"](490,"p"),m["\u0275\u0275text"](491,"The following code was used to create the example at the top of this section."),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](492,"\n\n"),m["\u0275\u0275elementStart"](493,"ux-tabset",68),m["\u0275\u0275text"](494,"\n    "),m["\u0275\u0275elementStart"](495,"ux-tab",69),m["\u0275\u0275text"](496,"\n        "),m["\u0275\u0275element"](497,"uxd-snippet",70),m["\u0275\u0275text"](498,"\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](499,"\n    "),m["\u0275\u0275elementStart"](500,"ux-tab",71),m["\u0275\u0275text"](501,"\n        "),m["\u0275\u0275element"](502,"uxd-snippet",72),m["\u0275\u0275text"](503,"\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](504,"\n    "),m["\u0275\u0275elementStart"](505,"ux-tab",73),m["\u0275\u0275text"](506,"\n        "),m["\u0275\u0275element"](507,"uxd-snippet",74),m["\u0275\u0275text"](508,"\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](509,"\n"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](510,"\n")),2&n){var t=m["\u0275\u0275reference"](7);m["\u0275\u0275advance"](6),m["\u0275\u0275property"]("tags",a.tags)("input",a.input)("addOnPaste",a.addOnPaste)("disabled",a.disabled)("enforceTagLimits",a.enforceTagLimits)("freeInput",a.freeInput)("minTags",a.minTags)("maxTags",a.maxTags)("placeholder",a.placeholder)("showTypeaheadOnClick",a.showTypeaheadOnClick)("tagDelimiters",a.tagDelimiters)("tagPattern",a.tagPatternRegExp),m["\u0275\u0275advance"](3),m["\u0275\u0275property"]("ngIf",a.typeaheadEnabled),m["\u0275\u0275advance"](3),m["\u0275\u0275property"]("ngIf",t.validationErrors.tagRangeError),m["\u0275\u0275advance"](2),m["\u0275\u0275property"]("ngIf",t.validationErrors.inputPattern),m["\u0275\u0275advance"](17),m["\u0275\u0275property"]("value",a.addOnPaste),m["\u0275\u0275advance"](6),m["\u0275\u0275property"]("value",a.disabled),m["\u0275\u0275advance"](6),m["\u0275\u0275property"]("value",a.enforceTagLimits),m["\u0275\u0275advance"](12),m["\u0275\u0275property"]("value",a.minTags)("max",a.maxTags),m["\u0275\u0275advance"](8),m["\u0275\u0275property"]("value",a.maxTags)("min",a.minTags),m["\u0275\u0275advance"](8),m["\u0275\u0275property"]("ngModel",a.tagPattern),m["\u0275\u0275advance"](11),m["\u0275\u0275property"]("ngModel",a.placeholder),m["\u0275\u0275advance"](8),m["\u0275\u0275property"]("ngModel",a.tagDelimiters),m["\u0275\u0275advance"](8),m["\u0275\u0275property"]("value",a.typeaheadEnabled),m["\u0275\u0275advance"](9),m["\u0275\u0275property"]("value",a.freeInput)("disabled",!a.typeaheadEnabled),m["\u0275\u0275advance"](6),m["\u0275\u0275property"]("value",a.selectFirst)("disabled",!a.typeaheadEnabled),m["\u0275\u0275advance"](6),m["\u0275\u0275property"]("value",a.showTypeaheadOnClick)("disabled",!a.typeaheadEnabled),m["\u0275\u0275advance"](12),m["\u0275\u0275property"]("value",a.dropDirection)("disabled",!a.typeaheadEnabled),m["\u0275\u0275advance"](3),m["\u0275\u0275property"]("value",a.dropDirection)("disabled",!a.typeaheadEnabled),m["\u0275\u0275advance"](19),m["\u0275\u0275property"]("routerLink",m["\u0275\u0275pureFunction1"](42,en,a.typeaheadDocumentationRoute)),m["\u0275\u0275advance"](149),m["\u0275\u0275property"]("content",a.snippets.compiled.tagTemplateHtml),m["\u0275\u0275advance"](191),m["\u0275\u0275property"]("minimal",!1),m["\u0275\u0275advance"](4),m["\u0275\u0275property"]("content",a.snippets.compiled.appHtml),m["\u0275\u0275advance"](5),m["\u0275\u0275property"]("content",a.snippets.compiled.appTs),m["\u0275\u0275advance"](5),m["\u0275\u0275property"]("content",a.snippets.compiled.appCss)}},directives:[p["\u0275NgNoValidate"],p.NgControlStatusGroup,p.NgForm,l.TagInputComponent,e.NgIf,l.AccordionComponent,l.AccordionPanelComponent,l.CheckboxComponent,l.NumberPickerComponent,p.DefaultValueAccessor,p.NgControlStatus,p.NgModel,l.RadioButtonComponent,o.RouterLinkWithHref,g.$,x.S,h.j,l.DefaultFocusIndicatorDirective,l.TabsetComponent,l.TabComponent,l.TypeaheadComponent,l.IconComponent,l.FocusIndicatorDirective],styles:["ux-tag-input[_ngcontent-%COMP%]    > ol[_ngcontent-%COMP%]    > li.ux-tag[_ngcontent-%COMP%] {\n  padding: 0 8px;\n}\n.ux-icon-tag[_ngcontent-%COMP%] {\n  margin-right: 8px;\n}"]}),a=function(n,a,t,s){var e,p=arguments.length,o=p<3?a:null===s?s=Object.getOwnPropertyDescriptor(a,t):s;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(n,a,t,s);else for(var l=n.length-1;l>=0;l--)(e=n[l])&&(o=(p<3?e(o):p>3?e(a,t,o):e(a,t))||o);return p>3&&o&&Object.defineProperty(a,t,o),o}([(0,d.cG)("ComponentsTagsComponent"),Y("design:paramtypes",[Number])],a)}(k.u),on=function(){var n=function(a,t){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,a){n.__proto__=a}||function(n,a){for(var t in a)Object.prototype.hasOwnProperty.call(a,t)&&(n[t]=a[t])})(a,t)};return function(a,t){if("function"!=typeof t&&null!==t)throw new TypeError("Class extends value "+String(t)+" is not a constructor or null");function s(){this.constructor=a}n(a,t),a.prototype=null===t?Object.create(t):(s.prototype=t.prototype,new s)}}(),ln=function(n,a){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(n,a)},cn=function(n){function a(){var a=n.call(this,t(22582))||this;return a.playground={files:{"app.component.ts":a.snippets.raw.appTs,"app.component.html":a.snippets.raw.appHtml},modules:[{imports:["ToggleSwitchModule"],library:"@ux-aspects/ux-aspects"}]},a.toggleSwitches={option1:!0,option2:!1,option3:!1,option4:!1},a.toggleSwitchDisable=!1,a}return on(a,n),a.\u0275fac=function(n){return new(n||a)},a.\u0275cmp=m["\u0275\u0275defineComponent"]({type:a,selectors:[["uxd-components-toggleswitch"]],features:[m["\u0275\u0275InheritDefinitionFeature"]],decls:117,vars:13,consts:[[1,"toggleswitch-container"],[3,"value","disabled","valueChange"],[3,"value","valueChange"],[1,"toggleswitch-lg",3,"value","valueChange"],[1,"m-t-md"],[1,"btn","button-primary",3,"click"],[3,"minimal"],["heading","HTML"],[3,"content"],["heading","TypeScript"],["language","javascript",3,"content"],["tableTitle","Inputs"],["uxd-api-property","","name","value","type","boolean"],["uxd-api-property","","name","disabled","type","boolean","defaultValue","false"],["uxd-api-property","","name","clickable","type","boolean","defaultValue","true"],["uxd-api-property","","name","required","type","boolean","defaultValue","false"],["tableTitle","Outputs"],["uxd-api-property","","name","valueChange","type","boolean"]],template:function(n,a){1&n&&(m["\u0275\u0275elementStart"](0,"div",0),m["\u0275\u0275text"](1,"\n  "),m["\u0275\u0275elementStart"](2,"ux-toggleswitch",1),m["\u0275\u0275listener"]("valueChange",(function(n){return a.toggleSwitches.option1=n})),m["\u0275\u0275text"](3,"Toggle 1"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](4,"\n\n  "),m["\u0275\u0275elementStart"](5,"ux-toggleswitch",2),m["\u0275\u0275listener"]("valueChange",(function(n){return a.toggleSwitches.option2=n})),m["\u0275\u0275text"](6,"Toggle 2"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](7,"\n\n  "),m["\u0275\u0275elementStart"](8,"ux-toggleswitch",2),m["\u0275\u0275listener"]("valueChange",(function(n){return a.toggleSwitches.option3=n})),m["\u0275\u0275text"](9,"Toggle 3"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](10,"\n\n  "),m["\u0275\u0275elementStart"](11,"ux-toggleswitch",3),m["\u0275\u0275listener"]("valueChange",(function(n){return a.toggleSwitches.option4=n})),m["\u0275\u0275text"](12,"Large Toggle"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](13,"\n"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](14,"\n"),m["\u0275\u0275elementStart"](15,"p",4),m["\u0275\u0275text"](16,"\n  "),m["\u0275\u0275elementStart"](17,"code"),m["\u0275\u0275text"](18,"toggleSwitches.option1"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](19," is "),m["\u0275\u0275elementStart"](20,"em"),m["\u0275\u0275text"](21),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](22,".\n  "),m["\u0275\u0275elementStart"](23,"code"),m["\u0275\u0275text"](24,"toggleSwitches.option2"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](25," is "),m["\u0275\u0275elementStart"](26,"em"),m["\u0275\u0275text"](27),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](28,".\n  "),m["\u0275\u0275elementStart"](29,"code"),m["\u0275\u0275text"](30,"toggleSwitches.option3"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](31," is "),m["\u0275\u0275elementStart"](32,"em"),m["\u0275\u0275text"](33),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](34,".\n  "),m["\u0275\u0275elementStart"](35,"code"),m["\u0275\u0275text"](36,"toggleSwitches.option4"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](37," is "),m["\u0275\u0275elementStart"](38,"em"),m["\u0275\u0275text"](39),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](40,".\n"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](41,"\n"),m["\u0275\u0275elementStart"](42,"button",5),m["\u0275\u0275listener"]("click",(function(){return a.toggleSwitchDisable=!a.toggleSwitchDisable})),m["\u0275\u0275text"](43),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](44,"\n\n"),m["\u0275\u0275element"](45,"hr"),m["\u0275\u0275text"](46,"\n\n"),m["\u0275\u0275elementStart"](47,"p"),m["\u0275\u0275text"](48,"To create a toggle switch, use the "),m["\u0275\u0275elementStart"](49,"code"),m["\u0275\u0275text"](50,"toggleswitch"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](51," component with the "),m["\u0275\u0275elementStart"](52,"code"),m["\u0275\u0275text"](53,"value"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](54," attribute to bind the value. Use "),m["\u0275\u0275elementStart"](55,"code"),m["\u0275\u0275text"](56,"disabled"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](57,"\nto control the disabled state."),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](58,"\n\n"),m["\u0275\u0275elementStart"](59,"p"),m["\u0275\u0275text"](60,"The code used for the above example is shown below:"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](61,"\n\n"),m["\u0275\u0275elementStart"](62,"ux-tabset",6),m["\u0275\u0275text"](63,"\n    "),m["\u0275\u0275elementStart"](64,"ux-tab",7),m["\u0275\u0275text"](65,"\n        "),m["\u0275\u0275element"](66,"uxd-snippet",8),m["\u0275\u0275text"](67,"\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](68,"\n    "),m["\u0275\u0275elementStart"](69,"ux-tab",9),m["\u0275\u0275text"](70,"\n        "),m["\u0275\u0275element"](71,"uxd-snippet",10),m["\u0275\u0275text"](72,"\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](73,"\n"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](74,"\n\n"),m["\u0275\u0275elementStart"](75,"p"),m["\u0275\u0275text"](76,"In an Angular application, "),m["\u0275\u0275elementStart"](77,"code"),m["\u0275\u0275text"](78,"ngModel"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](79," may be used to bind the control to a form."),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](80,"\n\n"),m["\u0275\u0275elementStart"](81,"uxd-api-properties",11),m["\u0275\u0275text"](82,"\n    "),m["\u0275\u0275elementStart"](83,"tr",12),m["\u0275\u0275text"](84,"\n      Binding for the state of the switch; "),m["\u0275\u0275elementStart"](85,"code"),m["\u0275\u0275text"](86,"true"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](87,' for "on" and '),m["\u0275\u0275elementStart"](88,"code"),m["\u0275\u0275text"](89,"false"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](90,' for "off."\n    '),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](91,"\n    "),m["\u0275\u0275elementStart"](92,"tr",13),m["\u0275\u0275text"](93,"\n      If this value is set to "),m["\u0275\u0275elementStart"](94,"code"),m["\u0275\u0275text"](95,"true"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](96," then the toggle switch will be disabled.\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](97,"\n    "),m["\u0275\u0275elementStart"](98,"tr",14),m["\u0275\u0275text"](99,"\n      If set to "),m["\u0275\u0275elementStart"](100,"code"),m["\u0275\u0275text"](101,"false"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](102," the switch will not be updated when clicking on it, can be used if\n      something else is updating the state of the switch.\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](103,"\n    "),m["\u0275\u0275elementStart"](104,"tr",15),m["\u0275\u0275text"](105,"\n        If set to "),m["\u0275\u0275elementStart"](106,"code"),m["\u0275\u0275text"](107,"true"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](108," the toggle switch will be marked as required.\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](109,"\n"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](110,"\n\n"),m["\u0275\u0275elementStart"](111,"uxd-api-properties",16),m["\u0275\u0275text"](112,"\n    "),m["\u0275\u0275elementStart"](113,"tr",17),m["\u0275\u0275text"](114,"\n      Emits when value has been changed.\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](115,"\n"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](116,"\n")),2&n&&(m["\u0275\u0275advance"](2),m["\u0275\u0275property"]("value",a.toggleSwitches.option1)("disabled",a.toggleSwitchDisable),m["\u0275\u0275advance"](3),m["\u0275\u0275property"]("value",a.toggleSwitches.option2),m["\u0275\u0275advance"](3),m["\u0275\u0275property"]("value",a.toggleSwitches.option3),m["\u0275\u0275advance"](3),m["\u0275\u0275property"]("value",a.toggleSwitches.option4),m["\u0275\u0275advance"](10),m["\u0275\u0275textInterpolate"](a.toggleSwitches.option1),m["\u0275\u0275advance"](6),m["\u0275\u0275textInterpolate"](a.toggleSwitches.option2),m["\u0275\u0275advance"](6),m["\u0275\u0275textInterpolate"](a.toggleSwitches.option3),m["\u0275\u0275advance"](6),m["\u0275\u0275textInterpolate"](a.toggleSwitches.option4),m["\u0275\u0275advance"](4),m["\u0275\u0275textInterpolate1"]("\n  ",a.toggleSwitchDisable?"Click to enable Toggle 1":"Click to disable Toggle 1","\n"),m["\u0275\u0275advance"](19),m["\u0275\u0275property"]("minimal",!1),m["\u0275\u0275advance"](4),m["\u0275\u0275property"]("content",a.snippets.compiled.appHtml),m["\u0275\u0275advance"](5),m["\u0275\u0275property"]("content",a.snippets.compiled.appTs))},directives:[l.ToggleSwitchComponent,l.DefaultFocusIndicatorDirective,l.TabsetComponent,l.TabComponent,h.j,g.$,x.S],encapsulation:2}),a=function(n,a,t,s){var e,p=arguments.length,o=p<3?a:null===s?s=Object.getOwnPropertyDescriptor(a,t):s;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(n,a,t,s);else for(var l=n.length-1;l>=0;l--)(e=n[l])&&(o=(p<3?e(o):p>3?e(a,t,o):e(a,t))||o);return p>3&&o&&Object.defineProperty(a,t,o),o}([(0,d.cG)("ComponentsToggleSwitchComponent"),ln("design:paramtypes",[])],a)}(k.u),un=(t(67793),t(51145)),rn=t(66528),kn=function(){var n=function(a,t){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,a){n.__proto__=a}||function(n,a){for(var t in a)Object.prototype.hasOwnProperty.call(a,t)&&(n[t]=a[t])})(a,t)};return function(a,t){if("function"!=typeof t&&null!==t)throw new TypeError("Class extends value "+String(t)+" is not a constructor or null");function s(){this.constructor=a}n(a,t),a.prototype=null===t?Object.create(t):(s.prototype=t.prototype,new s)}}(),dn=function(n,a){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(n,a)},mn=function(n,a){var t="function"==typeof Symbol&&n[Symbol.iterator];if(!t)return n;var s,e,p=t.call(n),o=[];try{for(;(void 0===a||a-- >0)&&!(s=p.next()).done;)o.push(s.value)}catch(l){e={error:l}}finally{try{s&&!s.done&&(t=p.return)&&t.call(p)}finally{if(e)throw e.error}}return o},gn=function(n,a){for(var t=0,s=a.length,e=n.length;t<s;t++,e++)n[e]=a[t];return n},xn=function(){return{standalone:!0}},hn=[w,T,I,N,L,B,K,X,pn,cn,function(n){function a(a,s){var e=n.call(this,t(76893))||this;e._documentationType=a,e.typeaheadKeyService=s,e.values=[],e.dropdownOpen=!1,e.selectOnEnter=!0,e.dropDirection="down",e.selectFirst=!0,e.recentOptionsMaxCount=5,e.input="",e.loadOptionsFn=e.loadOptions.bind(e),e.playground={files:{"app.component.html":e.snippets.raw.appHtml,"app.component.css":e.snippets.raw.appCss,"app.component.ts":e.snippets.raw.appTs},modules:[{imports:["TypeaheadModule","CheckboxModule","RadioButtonModule","NumberPickerModule","AccordionModule"],library:"@ux-aspects/ux-aspects"}]};for(var p=0;p<200;p++)e.values=gn(gn([],mn(e.values)),[chance.name()]);return e.tagDocumentationRoute=a===Z.E.MicroFocus?"ui-components/input-controls":"components/input-controls",e}return kn(a,n),a.prototype.loadOptions=function(n,a,t){var s=this.values.filter((function(n){return-1!==n.toLowerCase().indexOf(t.toLowerCase())})).slice(n*a,(n+1)*a);return(0,un.of)(s).pipe((0,rn.g)(1e3)).toPromise()},a.\u0275fac=function(n){return new(n||a)(m["\u0275\u0275directiveInject"](Z.d),m["\u0275\u0275directiveInject"](l.TypeaheadKeyService))},a.\u0275cmp=m["\u0275\u0275defineComponent"]({type:a,selectors:[["uxd-components-typeahead"]],features:[m["\u0275\u0275InheritDefinitionFeature"]],decls:339,vars:25,consts:[[1,"row"],[1,"col-md-12","has-feedback"],[1,"input-typeahead-form"],["placeholder","Enter Text","type","text",1,"form-control",3,"ngModel","ngModelOptions","ngModelChange","click","keydown","keydown.escape","blur"],[1,"typeahead-example",3,"open","filter","options","openOnFilterChange","pageSize","selectOnEnter","selectFirst","dropDirection","recentOptions","recentOptionsMaxCount","openChange","optionSelected","recentOptionsChange"],["typeahead",""],[1,"row","uxd-customize-example"],[1,"col-md-12"],["heading","Customize Example...",1,"accordion-chevron"],[1,"row","uxd-customize-row"],[1,"col-md-4","col-sm-12"],[3,"value","valueChange"],["min","1",3,"disabled","value","valueChange"],["option","down",3,"value","valueChange"],["option","up",3,"value","valueChange"],["option","auto",3,"value","valueChange"],["tableTitle","Inputs"],["uxd-api-property","","name","options","type","T[] | InfiniteScrollLoadFunction"],["uxd-api-property","","name","filter","type","string"],["uxd-api-property","","name","open","type","boolean"],["uxd-api-property","","name","display","type","(option: T) => string | string","defaultValue",""],["uxd-api-property","","name","key","type","(option: T) => string | string"],["uxd-api-property","","name","active","type","T"],["uxd-api-property","","name","disabledOptions","type","T[]"],["uxd-api-property","","name","dropDirection","type","'up' | 'down' | 'auto'","defaultValue","down"],["uxd-api-property","","name","maxHeight","type","string","defaultValue","250px"],["uxd-api-property","","name","multiselectable","type","boolean","defaultValue","false"],["uxd-api-property","","name","loadingTemplate","type","TemplateRef"],["uxd-api-property","","name","loading","type","boolean","defaultValue","false"],["uxd-api-property","","name","openOnFilterChange","type","boolean","defaultValue","true"],["uxd-api-property","","name","optionTemplate","type","TemplateRef"],["uxd-api-property","","name","noOptionsTemplate","type","TemplateRef"],["uxd-api-property","","name","pageSize","type","number","defaultValue","20"],["uxd-api-property","","name","selectFirst","type","boolean","defaultValue","true"],["uxd-api-property","","name","selectOnEnter","type","boolean","defaultValue","false"],["uxd-api-property","","name","recentOptions","type","ReadonlyArray<T>"],["uxd-api-property","","name","recentOptionsMaxCount","type","number","defaultValue","5"],["uxd-api-property","","name","optionsHeadingTemplate","type","TemplateRef"],["uxd-api-property","","name","recentOptionsHeadingTemplate","type","TemplateRef"],["tableTitle","Outputs"],["uxd-api-property","","name","openChange","type","boolean"],["uxd-api-property","","name","optionSelected","type","TypeaheadOptionEvent"],["uxd-api-property","","name","highlightedChange","type","T"],["uxd-api-property","","name","highlightedElementChange","type","HTMLElement"],["uxd-api-property","","name","recentOptionsChange","type","ReadonlyArray<T>"],["uxd-api-property","","name","getKey","args","option: T","returns","string"],["uxd-api-property","","name","getDisplay","args","option: T","returns","string"],["uxd-api-property","","name","getDisplayHtml","args","option: T","returns","string"],["uxd-api-property","","name","getDisabled","args","option: T","returns","boolean"],[3,"minimal"],["heading","HTML"],["language","html",3,"content"],["heading","TypeScript"],["language","javascript",3,"content"],["heading","CSS"],["language","css",3,"content"]],template:function(n,a){if(1&n){var t=m["\u0275\u0275getCurrentView"]();m["\u0275\u0275elementStart"](0,"div",0),m["\u0275\u0275text"](1,"\n    "),m["\u0275\u0275elementStart"](2,"div",1),m["\u0275\u0275text"](3,"\n        "),m["\u0275\u0275elementStart"](4,"form",2),m["\u0275\u0275text"](5,"\n            "),m["\u0275\u0275elementStart"](6,"input",3),m["\u0275\u0275listener"]("ngModelChange",(function(n){return a.input=n}))("click",(function(){return a.dropdownOpen=!0}))("keydown",(function(n){m["\u0275\u0275restoreView"](t);var s=m["\u0275\u0275reference"](9);return a.typeaheadKeyService.handleKey(n,s)}))("keydown.escape",(function(){return a.dropdownOpen=!1}))("blur",(function(){return a.dropdownOpen=!1})),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](7,"\n\n            "),m["\u0275\u0275elementStart"](8,"ux-typeahead",4,5),m["\u0275\u0275listener"]("openChange",(function(n){return a.dropdownOpen=n}))("optionSelected",(function(n){return a.input=n.option}))("recentOptionsChange",(function(n){return a.recentOptions=n})),m["\u0275\u0275text"](10,"\n            "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](11,"\n        "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](12,"\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](13,"\n"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](14,"\n\n"),m["\u0275\u0275elementStart"](15,"div",6),m["\u0275\u0275text"](16,"\n    "),m["\u0275\u0275elementStart"](17,"div",7),m["\u0275\u0275text"](18,"\n        "),m["\u0275\u0275elementStart"](19,"ux-accordion"),m["\u0275\u0275text"](20,"\n            "),m["\u0275\u0275elementStart"](21,"ux-accordion-panel",8),m["\u0275\u0275text"](22,"\n                "),m["\u0275\u0275elementStart"](23,"div",9),m["\u0275\u0275text"](24,"\n                    "),m["\u0275\u0275elementStart"](25,"div",10),m["\u0275\u0275text"](26,"\n                        "),m["\u0275\u0275elementStart"](27,"ux-checkbox",11),m["\u0275\u0275listener"]("valueChange",(function(n){return a.selectFirst=n})),m["\u0275\u0275text"](28,"selectFirst"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](29,"\n                    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](30,"\n                    "),m["\u0275\u0275elementStart"](31,"div",10),m["\u0275\u0275text"](32,"\n                        "),m["\u0275\u0275elementStart"](33,"ux-checkbox",11),m["\u0275\u0275listener"]("valueChange",(function(n){return a.selectOnEnter=n})),m["\u0275\u0275text"](34,"selectOnEnter"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](35,"\n                    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](36,"\n                "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](37,"\n                "),m["\u0275\u0275elementStart"](38,"div",9),m["\u0275\u0275text"](39,"\n                    "),m["\u0275\u0275elementStart"](40,"div",10),m["\u0275\u0275text"](41,"\n                        "),m["\u0275\u0275elementStart"](42,"ux-checkbox",11),m["\u0275\u0275listener"]("valueChange",(function(n){return a.recentOptions=n?[]:void 0})),m["\u0275\u0275text"](43,"\n                            recentOptions\n                        "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](44,"\n                    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](45,"\n                    "),m["\u0275\u0275elementStart"](46,"div",10),m["\u0275\u0275text"](47,"\n                        "),m["\u0275\u0275elementStart"](48,"label"),m["\u0275\u0275text"](49,"recentOptionsMaxCount"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](50,"\n                        "),m["\u0275\u0275elementStart"](51,"ux-number-picker",12),m["\u0275\u0275listener"]("valueChange",(function(n){return a.recentOptionsMaxCount=n})),m["\u0275\u0275text"](52,"\n                        "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](53,"\n                    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](54,"\n                "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](55,"\n                "),m["\u0275\u0275elementStart"](56,"div",9),m["\u0275\u0275text"](57,"\n                    "),m["\u0275\u0275elementStart"](58,"div",10),m["\u0275\u0275text"](59,"\n                        "),m["\u0275\u0275elementStart"](60,"label"),m["\u0275\u0275text"](61,"dropDirection"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](62,"\n                        "),m["\u0275\u0275elementStart"](63,"ux-radio-button",13),m["\u0275\u0275listener"]("valueChange",(function(n){return a.dropDirection=n})),m["\u0275\u0275text"](64,"down"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](65,"\n                        "),m["\u0275\u0275elementStart"](66,"ux-radio-button",14),m["\u0275\u0275listener"]("valueChange",(function(n){return a.dropDirection=n})),m["\u0275\u0275text"](67,"up"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](68,"\n                        "),m["\u0275\u0275elementStart"](69,"ux-radio-button",15),m["\u0275\u0275listener"]("valueChange",(function(n){return a.dropDirection=n})),m["\u0275\u0275text"](70,"auto"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](71,"\n                    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](72,"\n                "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](73,"\n            "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](74,"\n        "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](75,"\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](76,"\n"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](77,"\n\n"),m["\u0275\u0275element"](78,"hr"),m["\u0275\u0275text"](79,"\n\n"),m["\u0275\u0275elementStart"](80,"p"),m["\u0275\u0275text"](81,"The "),m["\u0275\u0275elementStart"](82,"code"),m["\u0275\u0275text"](83,"ux-typeahead"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](84," component can be used to apply a dropdown typeahead list to a text input."),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](85,"\n"),m["\u0275\u0275elementStart"](86,"p"),m["\u0275\u0275text"](87,"To match the width of the input control, place both inside a container with "),m["\u0275\u0275elementStart"](88,"code"),m["\u0275\u0275text"](89,"position: relative"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](90,"."),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](91,"\n"),m["\u0275\u0275elementStart"](92,"p"),m["\u0275\u0275text"](93,"The following properties can be used to customize the appearance and behavior of the "),m["\u0275\u0275elementStart"](94,"code"),m["\u0275\u0275text"](95,"ux-typeahead\n    component"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](96,":"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](97,"\n\n"),m["\u0275\u0275elementStart"](98,"uxd-api-properties",16),m["\u0275\u0275text"](99,"\n    "),m["\u0275\u0275elementStart"](100,"tr",17),m["\u0275\u0275text"](101,"\n        "),m["\u0275\u0275elementStart"](102,"span"),m["\u0275\u0275text"](103,"If an array is provided, this is the list of options which can be chosen from. It can be an\n             array of strings or custom objects, matching the format used by the tag input control.\n             If custom objects are required, the "),m["\u0275\u0275elementStart"](104,"code"),m["\u0275\u0275text"](105,"display"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](106," property must also be set."),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](107,"\n        "),m["\u0275\u0275elementStart"](108,"span"),m["\u0275\u0275text"](109,"If a function is provided, this is used as a callback to dynamically retrieve options in pages.\n            The parameters are:"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](110,"\n        "),m["\u0275\u0275elementStart"](111,"ul"),m["\u0275\u0275text"](112,"\n            "),m["\u0275\u0275elementStart"](113,"li"),m["\u0275\u0275elementStart"](114,"code"),m["\u0275\u0275text"](115,"pageNum: number"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](116," - The index of the requested page, starting from 0."),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](117,"\n            "),m["\u0275\u0275elementStart"](118,"li"),m["\u0275\u0275elementStart"](119,"code"),m["\u0275\u0275text"](120,"pageSize: number"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](121," - The number of items requested."),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](122,"\n            "),m["\u0275\u0275elementStart"](123,"li"),m["\u0275\u0275elementStart"](124,"code"),m["\u0275\u0275text"](125,"filter: T"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](126," - The filter details as provided via the "),m["\u0275\u0275elementStart"](127,"code"),m["\u0275\u0275text"](128,"filter"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](129,"\n                binding."),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](130,"\n        "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](131,"\n        "),m["\u0275\u0275elementStart"](132,"span"),m["\u0275\u0275text"](133,"The return value should be either a promise which resolves to an array, or a plain array in\n            case the data can be loaded synchronously. An empty array or an array with fewer than\n            "),m["\u0275\u0275elementStart"](134,"code"),m["\u0275\u0275text"](135,"pageSize"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](136," items can be returned, which indicates that the end of the data set has\n            been reached."),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](137,"\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](138,"\n    "),m["\u0275\u0275elementStart"](139,"tr",18),m["\u0275\u0275text"](140,"\n        The string which is used to filter the list of options. This is matched to the display property\n        if custom objects are used. The tag input "),m["\u0275\u0275elementStart"](141,"code"),m["\u0275\u0275text"](142,"input"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](143," binding can be used here, to refine\n        the typeahead as the user enters text.\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](144,"\n    "),m["\u0275\u0275elementStart"](145,"tr",19),m["\u0275\u0275text"](146,"\n        Controls whether the typeahead dropdown is visible.\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](147,"\n    "),m["\u0275\u0275elementStart"](148,"tr",20),m["\u0275\u0275text"](149,"\n        Determines the display value of the "),m["\u0275\u0275elementStart"](150,"code"),m["\u0275\u0275text"](151,"options"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](152,", if they are custom objects. This may be\n        a function or a string. If a function is provided, it receives the option object as an argument,\n        and should return the appropriate display value. If the name of a property is provided as a string,\n        that property is used as the display value.\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](153,"\n    "),m["\u0275\u0275elementStart"](154,"tr",21),m["\u0275\u0275text"](155,"\n        Determines the unique key value of the "),m["\u0275\u0275elementStart"](156,"code"),m["\u0275\u0275text"](157,"options"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](158,", if they are custom objects. This is\n        only relevant if multiple options will have the same display value. This may be a function or a\n        string. If a function is provided, it receives the option object as an argument, and should\n        return the appropriate key value. If the name of a property is provided as a string, that property\n        is used as the key value. The default behaviour is to use the "),m["\u0275\u0275elementStart"](159,"code"),m["\u0275\u0275text"](160,"display"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](161," value as the key.\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](162,"\n    "),m["\u0275\u0275elementStart"](163,"tr",22),m["\u0275\u0275text"](164,"\n        Set the currently active item.\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](165,"\n    "),m["\u0275\u0275elementStart"](166,"tr",23),m["\u0275\u0275text"](167,"\n        The list of options which should appear disabled in the typeahead. This is useful if duplicate tags\n        are not wanted in the tag input, in which case the "),m["\u0275\u0275elementStart"](168,"code"),m["\u0275\u0275text"](169,"tags"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](170," binding should also be set here.\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](171,"\n    "),m["\u0275\u0275elementStart"](172,"tr",24),m["\u0275\u0275text"](173,"\n        The positioning of the typeahead dropdown in relation to its parent. If 'auto' is used the\n        typeahead dropdown direction will default to 'down' unless there is not enough space for the\n        dropdown to fully display and the dropdown direction will change to 'up'.\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](174,"\n    "),m["\u0275\u0275elementStart"](175,"tr",25),m["\u0275\u0275text"](176,"\n        The maximum height of the typeahead dropdown, as a CSS value.\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](177,"\n    "),m["\u0275\u0275elementStart"](178,"tr",26),m["\u0275\u0275text"](179,"\n        Whether the parent control allows multiple selection. This is used to inform assistive technologies.\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](180,"\n    "),m["\u0275\u0275elementStart"](181,"tr",27),m["\u0275\u0275text"](182,"\n        A template which will be rendered in the dropdown while options are being loaded.\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](183,"\n    "),m["\u0275\u0275elementStart"](184,"tr",28),m["\u0275\u0275text"](185,"\n        A loading state to be specified.\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](186,"\n    "),m["\u0275\u0275elementStart"](187,"tr",29),m["\u0275\u0275text"](188,"\n        Whether the dropdown should appear when the filter appears.\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](189,"\n    "),m["\u0275\u0275elementStart"](190,"tr",30),m["\u0275\u0275text"](191,"\n        "),m["\u0275\u0275elementStart"](192,"span"),m["\u0275\u0275text"](193,"A template which will be rendered in the dropdown for each option. The following context\n            properties are available in the template:"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](194,"\n        "),m["\u0275\u0275elementStart"](195,"ul"),m["\u0275\u0275text"](196,"\n            "),m["\u0275\u0275elementStart"](197,"li"),m["\u0275\u0275elementStart"](198,"code"),m["\u0275\u0275text"](199,"option: T"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](200," - the string or custom object representing the option."),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](201,"\n            "),m["\u0275\u0275elementStart"](202,"li"),m["\u0275\u0275elementStart"](203,"code"),m["\u0275\u0275text"](204,"api: TypeaheadOptionApi"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](205," - provides the functions "),m["\u0275\u0275elementStart"](206,"code"),m["\u0275\u0275text"](207,"getKey"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](208,",\n                "),m["\u0275\u0275elementStart"](209,"code"),m["\u0275\u0275text"](210,"getDisplay"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](211,", "),m["\u0275\u0275elementStart"](212,"code"),m["\u0275\u0275text"](213,"getDisplayHtml"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](214," and "),m["\u0275\u0275elementStart"](215,"code"),m["\u0275\u0275text"](216,"getDisabled"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](217,". See the section below for more\n                information."),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](218,"\n        "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](219,"\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](220,"\n    "),m["\u0275\u0275elementStart"](221,"tr",31),m["\u0275\u0275text"](222,"\n        A template which will be rendered in the dropdown if no options match the current filter value.\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](223,"\n    "),m["\u0275\u0275elementStart"](224,"tr",32),m["\u0275\u0275text"](225,"\n        The number of options to request in a page. This should ideally be more than twice the number of\n        items which fit into the height of the dropdown, but this is not required.\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](226,"\n    "),m["\u0275\u0275elementStart"](227,"tr",33),m["\u0275\u0275text"](228,"\n        Controls whether the first non-disabled option in the dropdown is highlighted by default.\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](229,"\n    "),m["\u0275\u0275elementStart"](230,"tr",34),m["\u0275\u0275text"](231,"\n        Controls whether an option should be selected on enter key press.\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](232,"\n    "),m["\u0275\u0275elementStart"](233,"tr",35),m["\u0275\u0275text"](234,"\n        An initial list of recently selected options, to be presented above the full list of options. Bind an empty\n        array to "),m["\u0275\u0275elementStart"](235,"code"),m["\u0275\u0275text"](236,"recentOptions"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](237," to enable this feature without providing an initial set.\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](238,"\n    "),m["\u0275\u0275elementStart"](239,"tr",36),m["\u0275\u0275text"](240,"\n        Maximum number of displayed recently selected options.\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](241,"\n    "),m["\u0275\u0275elementStart"](242,"tr",37),m["\u0275\u0275text"](243,"\n        "),m["\u0275\u0275elementStart"](244,"p"),m["\u0275\u0275text"](245,"A template which will display custom headings for normal options."),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](246,"\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](247,"\n    "),m["\u0275\u0275elementStart"](248,"tr",38),m["\u0275\u0275text"](249,"\n        "),m["\u0275\u0275elementStart"](250,"p"),m["\u0275\u0275text"](251,"A template which will display custom headings for recent options."),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](252,"\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](253,"\n"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](254,"\n\n"),m["\u0275\u0275elementStart"](255,"uxd-api-properties",39),m["\u0275\u0275text"](256,"\n    "),m["\u0275\u0275elementStart"](257,"tr",40),m["\u0275\u0275text"](258,"\n        Emits when open is changed.\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](259,"\n    "),m["\u0275\u0275elementStart"](260,"tr",41),m["\u0275\u0275text"](261,"\n        Raised when an option on the dropdown is clicked. The "),m["\u0275\u0275elementStart"](262,"code"),m["\u0275\u0275text"](263,"option"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](264," property on the event contains the clicked option.\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](265,"\n    "),m["\u0275\u0275elementStart"](266,"tr",42),m["\u0275\u0275text"](267,"\n        Raised when the highlighted option changes, providing the currently highlighted option.\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](268,"\n    "),m["\u0275\u0275elementStart"](269,"tr",43),m["\u0275\u0275text"](270,"\n        Raised when the highlighted option changes, providing the currently highlighted DOM element.\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](271,"\n    "),m["\u0275\u0275elementStart"](272,"tr",44),m["\u0275\u0275text"](273,"\n        Emits when the list of recently selected options changes.\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](274,"\n"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](275,"\n\n"),m["\u0275\u0275elementStart"](276,"h4"),m["\u0275\u0275text"](277,"TypeaheadOptionApi"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](278,"\n\n"),m["\u0275\u0275elementStart"](279,"p"),m["\u0275\u0275text"](280,"The "),m["\u0275\u0275elementStart"](281,"code"),m["\u0275\u0275text"](282,"api"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](283," object available to the "),m["\u0275\u0275elementStart"](284,"code"),m["\u0275\u0275text"](285,"optionTemplate"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](286," has the following interface:"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](287,"\n\n"),m["\u0275\u0275elementStart"](288,"uxd-api-properties"),m["\u0275\u0275text"](289,"\n    "),m["\u0275\u0275elementStart"](290,"tr",45),m["\u0275\u0275text"](291,"\n        Returns the unique key value of the given "),m["\u0275\u0275elementStart"](292,"code"),m["\u0275\u0275text"](293,"option"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](294,".\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](295,"\n    "),m["\u0275\u0275elementStart"](296,"tr",46),m["\u0275\u0275text"](297,"\n        Returns the display value of the given "),m["\u0275\u0275elementStart"](298,"code"),m["\u0275\u0275text"](299,"option"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](300,".\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](301,"\n    "),m["\u0275\u0275elementStart"](302,"tr",47),m["\u0275\u0275text"](303,"\n        Returns the display value of the given "),m["\u0275\u0275elementStart"](304,"code"),m["\u0275\u0275text"](305,"option"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](306," with HTML markup added to highlight\n        the part which matches the current "),m["\u0275\u0275elementStart"](307,"code"),m["\u0275\u0275text"](308,"filter"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](309," value. Override the\n        "),m["\u0275\u0275elementStart"](310,"code"),m["\u0275\u0275text"](311,"ux-filter-match"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](312," class in CSS to modify the default appearance.\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](313,"\n    "),m["\u0275\u0275elementStart"](314,"tr",48),m["\u0275\u0275text"](315,"\n        Returns the disabled state of the given "),m["\u0275\u0275elementStart"](316,"code"),m["\u0275\u0275text"](317,"option"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](318,".\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](319,"\n"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](320,"\n\n"),m["\u0275\u0275elementStart"](321,"ux-tabset",49),m["\u0275\u0275text"](322,"\n    "),m["\u0275\u0275elementStart"](323,"ux-tab",50),m["\u0275\u0275text"](324,"\n        "),m["\u0275\u0275element"](325,"uxd-snippet",51),m["\u0275\u0275text"](326,"\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](327,"\n    "),m["\u0275\u0275elementStart"](328,"ux-tab",52),m["\u0275\u0275text"](329,"\n        "),m["\u0275\u0275element"](330,"uxd-snippet",53),m["\u0275\u0275text"](331,"\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](332,"\n    "),m["\u0275\u0275elementStart"](333,"ux-tab",54),m["\u0275\u0275text"](334,"\n        "),m["\u0275\u0275element"](335,"uxd-snippet",55),m["\u0275\u0275text"](336,"\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](337,"\n"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](338,"\n")}2&n&&(m["\u0275\u0275advance"](6),m["\u0275\u0275property"]("ngModel",a.input)("ngModelOptions",m["\u0275\u0275pureFunction0"](24,xn)),m["\u0275\u0275advance"](2),m["\u0275\u0275property"]("open",a.dropdownOpen)("filter",a.input)("options",a.loadOptionsFn)("openOnFilterChange",!0)("pageSize",40)("selectOnEnter",a.selectOnEnter)("selectFirst",a.selectFirst)("dropDirection",a.dropDirection)("recentOptions",a.recentOptions)("recentOptionsMaxCount",a.recentOptionsMaxCount),m["\u0275\u0275advance"](19),m["\u0275\u0275property"]("value",a.selectFirst),m["\u0275\u0275advance"](6),m["\u0275\u0275property"]("value",a.selectOnEnter),m["\u0275\u0275advance"](9),m["\u0275\u0275property"]("value",!!a.recentOptions),m["\u0275\u0275advance"](9),m["\u0275\u0275property"]("disabled",!a.recentOptions)("value",a.recentOptionsMaxCount),m["\u0275\u0275advance"](12),m["\u0275\u0275property"]("value",a.dropDirection),m["\u0275\u0275advance"](3),m["\u0275\u0275property"]("value",a.dropDirection),m["\u0275\u0275advance"](3),m["\u0275\u0275property"]("value",a.dropDirection),m["\u0275\u0275advance"](252),m["\u0275\u0275property"]("minimal",!1),m["\u0275\u0275advance"](4),m["\u0275\u0275property"]("content",a.snippets.compiled.appHtml),m["\u0275\u0275advance"](5),m["\u0275\u0275property"]("content",a.snippets.compiled.appTs),m["\u0275\u0275advance"](5),m["\u0275\u0275property"]("content",a.snippets.compiled.appCss))},directives:[p["\u0275NgNoValidate"],p.NgControlStatusGroup,p.NgForm,p.DefaultValueAccessor,p.NgControlStatus,p.NgModel,l.TypeaheadComponent,l.AccordionComponent,l.AccordionPanelComponent,l.CheckboxComponent,l.NumberPickerComponent,l.RadioButtonComponent,g.$,x.S,l.TabsetComponent,l.TabComponent,h.j],styles:[".input-typeahead-form[_ngcontent-%COMP%] {\n  position: relative;\n}"]}),a=function(n,a,t,s){var e,p=arguments.length,o=p<3?a:null===s?s=Object.getOwnPropertyDescriptor(a,t):s;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(n,a,t,s);else for(var l=n.length-1;l>=0;l--)(e=n[l])&&(o=(p<3?e(o):p>3?e(a,t,o):e(a,t))||o);return p>3&&o&&Object.defineProperty(a,t,o),o}([(0,d.cG)("ComponentsTypeaheadComponent"),dn("design:paramtypes",[Number,l.TypeaheadKeyService])],a)}(k.u)],fn=[{path:"**",component:i.R,data:{category:r.N.resolveCategoryData(r.I.Components,"Input Controls")}}],vn=function(){function n(n,a){a.registerResolver(n,hn)}return n.\u0275fac=function(a){return new(a||n)(m["\u0275\u0275inject"](m.ComponentFactoryResolver),m["\u0275\u0275inject"](r.N))},n.\u0275mod=m["\u0275\u0275defineNgModule"]({type:n}),n.\u0275inj=m["\u0275\u0275defineInjector"]({imports:[[l.AccordionModule,l.AutoGrowModule,l.CheckboxModule,l.ColorServiceModule,e.CommonModule,u.N,l.FloatLabelModule,p.FormsModule,l.IconModule,l.InputDropdownModule,c.NgxMaskModule.forRoot(),l.NumberPickerModule,l.RadioButtonModule,p.ReactiveFormsModule,o.RouterModule.forChild(fn),l.SliderModule,l.TabsetModule,l.TagInputModule,l.ToggleSwitchModule,l.TypeaheadModule]]}),n}()}}]);
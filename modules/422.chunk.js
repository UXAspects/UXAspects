(self.webpackChunk_ux_aspects_ux_aspects_docs=self.webpackChunk_ux_aspects_ux_aspects_docs||[]).push([[422],{9810:function(n){n.exports={snippet:'<span class="token selector">.btn-container.demo-color-picker-close</span> <span class="token punctuation">{</span>\n    <span class="token property">margin</span><span class="token punctuation">:</span> 0 8px 8px<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.btn-container.demo-color-picker-close > button</span> <span class="token punctuation">{</span>\n    <span class="token property">width</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>',example:".btn-container.demo-color-picker-close {\n    margin: 0 8px 8px;\n}\n\n.btn-container.demo-color-picker-close > button {\n    width: 100%;\n}"}},74953:function(n){n.exports={snippet:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>demo-color-picker-container<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>btn-group<span class="token punctuation">"</span></span>\n        <span class="token attr-name">(keydown.esc)</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>isPickerOpen = false; toggleButton.focus()<span class="token punctuation">"</span></span>\n        <span class="token attr-name">dropdown</span>\n        <span class="token attr-name">[(isOpen)]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>isPickerOpen<span class="token punctuation">"</span></span>\n        <span class="token attr-name">[autoClose]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>false<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span>\n            <span class="token attr-name">aria-label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Select a color<span class="token punctuation">"</span></span>\n            <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>btn button-secondary dropdown-toggle<span class="token punctuation">"</span></span>\n            <span class="token attr-name">#toggleButton</span>\n            <span class="token attr-name">dropdownToggle</span><span class="token punctuation">></span></span>\n\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>ux-color-picker-button-preview<span class="token punctuation">"</span></span> <span class="token attr-name">[style.background-color]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>selected.rgba<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n                <span class="token entity named-entity" title="&nbsp;">&amp;nbsp;</span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ux-icon</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>chevron-down<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ux-icon</span><span class="token punctuation">></span></span>\n\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>\n\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">*dropdownMenu</span>\n            <span class="token attr-name">#dropdownMenu</span>\n            <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>color-picker-dropdown<span class="token punctuation">"</span></span>\n            <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>dropdown-menu ux-color-picker-dropdown<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ux-color-picker</span>\n                <span class="token attr-name">[colors]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>colors<span class="token punctuation">"</span></span>\n                <span class="token attr-name">[(selected)]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>selected<span class="token punctuation">"</span></span>\n                <span class="token attr-name">(selectedChange)</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>colorPickerSelectedChange(); toggleButton.focus()<span class="token punctuation">"</span></span>\n                <span class="token attr-name">[columns]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>columns<span class="token punctuation">"</span></span>\n                <span class="token attr-name">[buttonStyle]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>buttonStyle<span class="token punctuation">"</span></span>\n                <span class="token attr-name">[buttonSize]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>buttonSize<span class="token punctuation">"</span></span>\n                <span class="token attr-name">[showTooltips]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>showTooltips<span class="token punctuation">"</span></span>\n                <span class="token attr-name">[showInput]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>showInput<span class="token punctuation">"</span></span>\n                <span class="token attr-name">(inputSubmit)</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>isPickerOpen = false<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ux-color-picker</span><span class="token punctuation">></span></span>\n\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">*ngIf</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>showInput<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>btn-container demo-color-picker-close<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>btn button-primary<span class="token punctuation">"</span></span> <span class="token attr-name">(click)</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>isPickerOpen = false<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n                    Accept\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>m-l-lg<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n        Selected: <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>code</span><span class="token punctuation">></span></span>{{selected.hex}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>code</span><span class="token punctuation">></span></span> <span class="token entity named-entity" title="&mdash;">&amp;mdash;</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>code</span><span class="token punctuation">></span></span>{{selected.rgba}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>code</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>',example:'<div class="demo-color-picker-container">\n    <div class="btn-group"\n        (keydown.esc)="isPickerOpen = false; toggleButton.focus()"\n        dropdown\n        [(isOpen)]="isPickerOpen"\n        [autoClose]="false">\n\n        <button type="button"\n            aria-label="Select a color"\n            class="btn button-secondary dropdown-toggle"\n            #toggleButton\n            dropdownToggle>\n\n            <span class="ux-color-picker-button-preview" [style.background-color]="selected.rgba">\n                &nbsp;\n            </span>\n            <ux-icon name="chevron-down"></ux-icon>\n\n        </button>\n\n        <div *dropdownMenu\n            #dropdownMenu\n            id="color-picker-dropdown"\n            class="dropdown-menu ux-color-picker-dropdown">\n\n            <ux-color-picker\n                [colors]="colors"\n                [(selected)]="selected"\n                (selectedChange)="colorPickerSelectedChange(); toggleButton.focus()"\n                [columns]="columns"\n                [buttonStyle]="buttonStyle"\n                [buttonSize]="buttonSize"\n                [showTooltips]="showTooltips"\n                [showInput]="showInput"\n                (inputSubmit)="isPickerOpen = false"></ux-color-picker>\n\n            <div *ngIf="showInput" class="btn-container demo-color-picker-close">\n                <button type="button" class="btn button-primary" (click)="isPickerOpen = false">\n                    Accept\n                </button>\n            </div>\n\n        </div>\n    </div>\n\n    <span class="m-l-lg">\n        Selected: <code>{{selected.hex}}</code> &mdash; <code>{{selected.rgba}}</code>\n    </span>\n</div>'}},22807:function(n){n.exports={snippet:'<span class="token keyword">import</span> <span class="token punctuation">{</span> Component<span class="token punctuation">,</span> ElementRef<span class="token punctuation">,</span> HostListener<span class="token punctuation">,</span> ViewChild <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@angular/core\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> ColorPickerColor<span class="token punctuation">,</span> ColorService <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@ux-aspects/ux-aspects\'</span><span class="token punctuation">;</span>\n\n@<span class="token function">Component</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    selector<span class="token operator">:</span> <span class="token string">\'app\'</span><span class="token punctuation">,</span>\n    templateUrl<span class="token operator">:</span> <span class="token string">\'app.component.html\'</span><span class="token punctuation">,</span>\n    styleUrls<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">\'app.component.css\'</span><span class="token punctuation">]</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">AppComponent</span> <span class="token punctuation">{</span>\n    colors<span class="token operator">:</span> ColorPickerColor<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n    selected<span class="token operator">:</span> ColorPickerColor<span class="token punctuation">;</span>\n    columns <span class="token operator">=</span> <span class="token number">4</span><span class="token punctuation">;</span>\n    buttonStyle <span class="token operator">=</span> <span class="token string">\'circle\'</span><span class="token punctuation">;</span>\n    buttonSize <span class="token operator">=</span> <span class="token string">\'md\'</span><span class="token punctuation">;</span>\n    showTooltips <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\n    showInput <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\n\n    isPickerOpen <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>\n\n    @<span class="token function">ViewChild</span><span class="token punctuation">(</span><span class="token string">\'toggleButton\'</span><span class="token punctuation">)</span> toggleButton<span class="token operator">:</span> ElementRef<span class="token punctuation">;</span>\n    @<span class="token function">ViewChild</span><span class="token punctuation">(</span><span class="token string">\'dropdownMenu\'</span><span class="token punctuation">)</span> dropdownMenu<span class="token operator">:</span> ElementRef<span class="token punctuation">;</span>\n\n    <span class="token keyword">private</span> _colorNames <span class="token operator">=</span> <span class="token punctuation">[</span>\n        <span class="token punctuation">[</span><span class="token string">\'Primary\'</span><span class="token punctuation">,</span> <span class="token string">\'Accent\'</span><span class="token punctuation">,</span> <span class="token string">\'Secondary\'</span><span class="token punctuation">,</span> <span class="token string">\'Alternate1\'</span><span class="token punctuation">,</span> <span class="token string">\'Alternate2\'</span><span class="token punctuation">,</span> <span class="token string">\'Alternate3\'</span><span class="token punctuation">,</span> <span class="token string">\'Vibrant1\'</span><span class="token punctuation">,</span>\n            <span class="token string">\'Vibrant2\'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n        <span class="token punctuation">[</span><span class="token string">\'Grey1\'</span><span class="token punctuation">,</span> <span class="token string">\'Grey2\'</span><span class="token punctuation">,</span> <span class="token string">\'Grey3\'</span><span class="token punctuation">,</span> <span class="token string">\'Grey4\'</span><span class="token punctuation">,</span> <span class="token string">\'Grey5\'</span><span class="token punctuation">,</span> <span class="token string">\'Grey6\'</span><span class="token punctuation">,</span> <span class="token string">\'Grey7\'</span><span class="token punctuation">,</span> <span class="token string">\'Grey8\'</span><span class="token punctuation">]</span>\n    <span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n    <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">colorService<span class="token operator">:</span> ColorService</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>colors <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>_colorNames<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">row</span> <span class="token operator">=></span>\n            row<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">colorName</span> <span class="token operator">=></span> <span class="token keyword">new</span> <span class="token class-name">ColorPickerColor</span><span class="token punctuation">(</span>colorName<span class="token punctuation">,</span> colorService<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>colorName<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>selected <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>colors<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token function">colorPickerSelectedChange</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>showInput<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token keyword">this</span><span class="token punctuation">.</span>isPickerOpen <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n\n    @<span class="token function">HostListener</span><span class="token punctuation">(</span><span class="token string">\'document:click\'</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">\'$event.target\'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>\n    <span class="token function">clickHandler</span><span class="token punctuation">(</span>target<span class="token operator">:</span> Node<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>\n        <span class="token comment">// Close on outside click</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span>\n            <span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>toggleButton<span class="token punctuation">.</span>nativeElement<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span>\n            <span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>dropdownMenu<span class="token punctuation">.</span>nativeElement<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span>\n        <span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token keyword">this</span><span class="token punctuation">.</span>isPickerOpen <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>',example:"import { Component, ElementRef, HostListener, ViewChild } from '@angular/core';\nimport { ColorPickerColor, ColorService } from '@ux-aspects/ux-aspects';\n\n@Component({\n    selector: 'app',\n    templateUrl: 'app.component.html',\n    styleUrls: ['app.component.css']\n})\nexport class AppComponent {\n    colors: ColorPickerColor[][];\n    selected: ColorPickerColor;\n    columns = 4;\n    buttonStyle = 'circle';\n    buttonSize = 'md';\n    showTooltips = false;\n    showInput = false;\n\n    isPickerOpen = true;\n\n    @ViewChild('toggleButton') toggleButton: ElementRef;\n    @ViewChild('dropdownMenu') dropdownMenu: ElementRef;\n\n    private _colorNames = [\n        ['Primary', 'Accent', 'Secondary', 'Alternate1', 'Alternate2', 'Alternate3', 'Vibrant1',\n            'Vibrant2'],\n        ['Grey1', 'Grey2', 'Grey3', 'Grey4', 'Grey5', 'Grey6', 'Grey7', 'Grey8']\n    ];\n\n    constructor(colorService: ColorService) {\n        this.colors = this._colorNames.map(row =>\n            row.map(colorName => new ColorPickerColor(colorName, colorService.resolve(colorName))));\n        this.selected = this.colors[0][0];\n    }\n\n    colorPickerSelectedChange(): void {\n        if (!this.showInput) {\n            this.isPickerOpen = false;\n        }\n    }\n\n    @HostListener('document:click', ['$event.target'])\n    clickHandler(target: Node): void {\n        // Close on outside click\n        if (\n            !this.toggleButton.nativeElement.contains(target) &&\n            !this.dropdownMenu.nativeElement.contains(target)\n        ) {\n            this.isPickerOpen = false;\n        }\n    }\n}"}},83626:function(n,t,e){var a={"./app.css":9810,"./app.html":74953,"./app.ts":22807};function s(n){var t=o(n);return e(t)}function o(n){if(!e.o(a,n)){var t=new Error("Cannot find module '"+n+"'");throw t.code="MODULE_NOT_FOUND",t}return a[n]}s.keys=function(){return Object.keys(a)},s.resolve=o,n.exports=s,s.id=83626},50422:function(n,t,e){"use strict";e.r(t),e.d(t,{ComponentsColorModule:function(){return T}});var a,s=e(56475),o=e(65410),p=e(94121),l=e(3955),c=e(93455),r=e(26966),u=e(95892),i=e(36941),k=e(86093),d=e(62536),m=e(29872),x=e(95490),h=e(70734),g=e(95445),v=(a=function(n,t){return(a=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,t){n.__proto__=t}||function(n,t){for(var e in t)Object.prototype.hasOwnProperty.call(t,e)&&(n[e]=t[e])})(n,t)},function(n,t){if("function"!=typeof t&&null!==t)throw new TypeError("Class extends value "+String(t)+" is not a constructor or null");function e(){this.constructor=n}a(n,t),n.prototype=null===t?Object.create(t):(e.prototype=t.prototype,new e)}),f=function(n,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(n,t)},y=["toggleButton"],b=["dropdownMenu"],w=["customize"];function S(n,t){if(1&n){var e=m["\u0275\u0275getCurrentView"]();m["\u0275\u0275elementStart"](0,"div",60),m["\u0275\u0275text"](1,"\n                "),m["\u0275\u0275elementStart"](2,"button",61),m["\u0275\u0275listener"]("click",(function(){return m["\u0275\u0275restoreView"](e),m["\u0275\u0275nextContext"](2).isPickerOpen=!1})),m["\u0275\u0275text"](3,"\n                    Accept\n                "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](4,"\n            "),m["\u0275\u0275elementEnd"]()}}function C(n,t){if(1&n){var e=m["\u0275\u0275getCurrentView"]();m["\u0275\u0275elementStart"](0,"div",56,57),m["\u0275\u0275text"](2,"\n\n            "),m["\u0275\u0275elementStart"](3,"ux-color-picker",58),m["\u0275\u0275listener"]("selectedChange",(function(n){return m["\u0275\u0275restoreView"](e),m["\u0275\u0275nextContext"]().selected=n}))("selectedChange",(function(){m["\u0275\u0275restoreView"](e);var n=m["\u0275\u0275nextContext"](),t=m["\u0275\u0275reference"](5);return n.colorPickerSelectedChange(),t.focus()}))("inputSubmit",(function(){return m["\u0275\u0275restoreView"](e),m["\u0275\u0275nextContext"]().isPickerOpen=!1})),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](4,"\n\n            "),m["\u0275\u0275template"](5,S,5,0,"div",59),m["\u0275\u0275text"](6,"\n\n        "),m["\u0275\u0275elementEnd"]()}if(2&n){var a=m["\u0275\u0275nextContext"]();m["\u0275\u0275advance"](3),m["\u0275\u0275property"]("colors",a.colors)("selected",a.selected)("columns",a.columns)("buttonStyle",a.buttonStyle)("buttonSize",a.buttonSize)("showTooltips",a.showTooltips)("showInput",a.showInput),m["\u0275\u0275advance"](2),m["\u0275\u0275property"]("ngIf",a.showInput)}}var E=[function(n){function t(t){var a=n.call(this,e(83626))||this;return a.playground={files:{"app.component.html":a.snippets.raw.appHtml,"app.component.ts":a.snippets.raw.appTs,"app.component.css":a.snippets.raw.appCss},modules:[{imports:["ColorPickerModule","ColorServiceModule"],library:"@ux-aspects/ux-aspects"},{imports:["BsDropdownModule"],forRoot:!0,library:"ngx-bootstrap/dropdown"}]},a.columns=4,a.buttonStyle="circle",a.buttonSize="md",a.showTooltips=!1,a.showInput=!1,a.isPickerOpen=!0,a._colorNames=[["Primary","Accent","Secondary","Alternate1","Alternate2","Alternate3","Vibrant1","Vibrant2"],["Grey1","Grey2","Grey3","Grey4","Grey5","Grey6","Grey7","Grey8"]],a.colors=a._colorNames.map((function(n){return n.map((function(n){return new l.ColorPickerColor(n,t.resolve(n))}))})),a.selected=a.colors[0][0],a}return v(t,n),t.prototype.colorPickerSelectedChange=function(){this.showInput||(this.isPickerOpen=!1)},t.prototype.clickHandler=function(n){this.toggleButton.nativeElement.contains(n)||this.dropdownMenu.nativeElement.contains(n)||this.customize.nativeElement.contains(n)||(this.isPickerOpen=!1)},t.\u0275fac=function(n){return new(n||t)(m["\u0275\u0275directiveInject"](l.ColorService))},t.\u0275cmp=m["\u0275\u0275defineComponent"]({type:t,selectors:[["uxd-color-picker"]],viewQuery:function(n,t){if(1&n&&(m["\u0275\u0275viewQuery"](y,7),m["\u0275\u0275viewQuery"](b,5),m["\u0275\u0275viewQuery"](w,7)),2&n){var e=void 0;m["\u0275\u0275queryRefresh"](e=m["\u0275\u0275loadQuery"]())&&(t.toggleButton=e.first),m["\u0275\u0275queryRefresh"](e=m["\u0275\u0275loadQuery"]())&&(t.dropdownMenu=e.first),m["\u0275\u0275queryRefresh"](e=m["\u0275\u0275loadQuery"]())&&(t.customize=e.first)}},hostBindings:function(n,t){1&n&&m["\u0275\u0275listener"]("click",(function(n){return t.clickHandler(n.target)}),!1,m["\u0275\u0275resolveDocument"])},features:[m["\u0275\u0275InheritDefinitionFeature"]],decls:300,vars:19,consts:[[1,"demo-color-picker-container"],["dropdown","",1,"btn-group",3,"isOpen","autoClose","keydown.esc","isOpenChange"],["type","button","aria-label","Select a color","dropdownToggle","",1,"btn","button-secondary","dropdown-toggle"],["toggleButton",""],[1,"ux-color-picker-button-preview"],["name","chevron-down"],["id","color-picker-dropdown","class","dropdown-menu ux-color-picker-dropdown",4,"dropdownMenu"],[1,"m-l-lg"],[1,"uxd-customize-example"],["customize",""],["heading","Customize Example...",1,"accordion-chevron"],[1,"row","uxd-customize-row"],[1,"col-md-2","col-sm-3"],["for","columns"],[1,"col-md-4","col-sm-9"],["name","columns",3,"value","min","valueChange"],[1,"col-md-3","col-sm-6"],[3,"value","valueChange"],["for","buttonStyle"],["option","circle",3,"value","valueChange"],["option","square",3,"value","valueChange"],["for","buttonSize"],["option","sm",3,"value","valueChange"],["option","md",3,"value","valueChange"],["option","lg",3,"value","valueChange"],["routerLink","/components/buttons","fragment","dropdowns"],["routerLink","/components/utilities","fragment","color-service"],["tableTitle","Inputs"],["uxd-api-property","","name","colors","type","(ColorPickerColor | string)[] | (ColorPickerColor | string)[][]"],["uxd-api-property","","name","selected","type","ColorPickerColor"],["uxd-api-property","","name","columns","type","number","defaultValue","6"],["uxd-api-property","","name","buttonStyle","type","'square' | 'circle'","defaultValue","circle"],["uxd-api-property","","name","buttonSize","type","'sm' | 'md' | 'lg'","defaultValue","md"],["uxd-api-property","","name","showTooltips","type","boolean","defaultValue","false"],["uxd-api-property","","name","showInput","type","boolean","defaultValue","false"],["uxd-api-property","","name","inputMode","type","'hex' | 'rgba'","defaultValue","hex"],["uxd-api-property","","name","colorAriaLabel","type","(color: ColorPickerColor) => string"],["uxd-api-property","","name","switchModeAriaLabel","type","(mode: ColorPickerInputMode) => string"],["uxd-api-property","","name","inputAriaLabel","type","(mode: ColorPickerInputMode) => string"],["tableTitle","Outputs"],["uxd-api-property","","name","selectedChange","type","ColorPickerColor"],["uxd-api-property","","name","inputSubmit","type","void"],["uxd-api-property","","name","inputModeChange","type","'hex' | 'rgba'"],["uxd-api-property","","name","constructor","args","name: string, value: string, inputMode?: 'hex' | 'rgba'"],["uxd-api-property","","name","name","type","string"],["uxd-api-property","","name","hex","type","string"],["uxd-api-property","","name","rgba","type","string"],["uxd-api-property","","name","r","type","number"],["uxd-api-property","","name","g","type","number"],["uxd-api-property","","name","b","type","number"],["uxd-api-property","","name","a","type","number"],[3,"minimal"],["heading","HTML"],[3,"content"],["heading","TypeScript"],["heading","CSS"],["id","color-picker-dropdown",1,"dropdown-menu","ux-color-picker-dropdown"],["dropdownMenu",""],[3,"colors","selected","columns","buttonStyle","buttonSize","showTooltips","showInput","selectedChange","inputSubmit"],["class","btn-container demo-color-picker-close",4,"ngIf"],[1,"btn-container","demo-color-picker-close"],["type","button",1,"btn","button-primary",3,"click"]],template:function(n,t){if(1&n){var e=m["\u0275\u0275getCurrentView"]();m["\u0275\u0275elementStart"](0,"div",0),m["\u0275\u0275text"](1,"\n    "),m["\u0275\u0275elementStart"](2,"div",1),m["\u0275\u0275listener"]("keydown.esc",(function(){m["\u0275\u0275restoreView"](e);var n=m["\u0275\u0275reference"](5);return t.isPickerOpen=!1,n.focus()}))("isOpenChange",(function(n){return t.isPickerOpen=n})),m["\u0275\u0275text"](3,"\n\n        "),m["\u0275\u0275elementStart"](4,"button",2,3),m["\u0275\u0275text"](6,"\n\n            "),m["\u0275\u0275elementStart"](7,"span",4),m["\u0275\u0275text"](8,"\n                \xa0\n            "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](9,"\n            "),m["\u0275\u0275element"](10,"ux-icon",5),m["\u0275\u0275text"](11,"\n\n        "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](12,"\n\n        "),m["\u0275\u0275template"](13,C,7,8,"div",6),m["\u0275\u0275text"](14,"\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](15,"\n\n    "),m["\u0275\u0275elementStart"](16,"span",7),m["\u0275\u0275text"](17,"\n        Selected: "),m["\u0275\u0275elementStart"](18,"code"),m["\u0275\u0275text"](19),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](20," \u2014 "),m["\u0275\u0275elementStart"](21,"code"),m["\u0275\u0275text"](22),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](23,"\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](24,"\n"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](25,"\n\n"),m["\u0275\u0275elementStart"](26,"div",8,9),m["\u0275\u0275text"](28,"\n    "),m["\u0275\u0275elementStart"](29,"ux-accordion"),m["\u0275\u0275text"](30,"\n        "),m["\u0275\u0275elementStart"](31,"ux-accordion-panel",10),m["\u0275\u0275text"](32,"\n            "),m["\u0275\u0275elementStart"](33,"div",11),m["\u0275\u0275text"](34,"\n                "),m["\u0275\u0275elementStart"](35,"div",12),m["\u0275\u0275text"](36,"\n                    "),m["\u0275\u0275elementStart"](37,"label",13),m["\u0275\u0275text"](38,"columns"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](39,"\n                "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](40,"\n                "),m["\u0275\u0275elementStart"](41,"div",14),m["\u0275\u0275text"](42,"\n                    "),m["\u0275\u0275elementStart"](43,"ux-number-picker",15),m["\u0275\u0275listener"]("valueChange",(function(n){return t.columns=n})),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](44,"\n                "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](45,"\n                "),m["\u0275\u0275elementStart"](46,"div",16),m["\u0275\u0275text"](47,"\n                    "),m["\u0275\u0275elementStart"](48,"ux-checkbox",17),m["\u0275\u0275listener"]("valueChange",(function(n){return t.showInput=n})),m["\u0275\u0275text"](49,"showInput"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](50,"\n                "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](51,"\n                "),m["\u0275\u0275elementStart"](52,"div",16),m["\u0275\u0275text"](53,"\n                    "),m["\u0275\u0275elementStart"](54,"ux-checkbox",17),m["\u0275\u0275listener"]("valueChange",(function(n){return t.showTooltips=n})),m["\u0275\u0275text"](55,"showTooltips"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](56,"\n                "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](57,"\n            "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](58,"\n            "),m["\u0275\u0275elementStart"](59,"div",11),m["\u0275\u0275text"](60,"\n                "),m["\u0275\u0275elementStart"](61,"div",12),m["\u0275\u0275text"](62,"\n                    "),m["\u0275\u0275elementStart"](63,"label",18),m["\u0275\u0275text"](64,"buttonStyle"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](65,"\n                "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](66,"\n                "),m["\u0275\u0275elementStart"](67,"div",14),m["\u0275\u0275text"](68,"\n                    "),m["\u0275\u0275elementStart"](69,"ux-radio-button",19),m["\u0275\u0275listener"]("valueChange",(function(n){return t.buttonStyle=n})),m["\u0275\u0275text"](70,"circle"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](71,"\n                    "),m["\u0275\u0275elementStart"](72,"ux-radio-button",20),m["\u0275\u0275listener"]("valueChange",(function(n){return t.buttonStyle=n})),m["\u0275\u0275text"](73,"square"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](74,"\n                "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](75,"\n                "),m["\u0275\u0275elementStart"](76,"div",12),m["\u0275\u0275text"](77,"\n                    "),m["\u0275\u0275elementStart"](78,"label",21),m["\u0275\u0275text"](79,"buttonSize"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](80,"\n                "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](81,"\n                "),m["\u0275\u0275elementStart"](82,"div",14),m["\u0275\u0275text"](83,"\n                    "),m["\u0275\u0275elementStart"](84,"ux-radio-button",22),m["\u0275\u0275listener"]("valueChange",(function(n){return t.buttonSize=n})),m["\u0275\u0275text"](85,"sm"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](86,"\n                    "),m["\u0275\u0275elementStart"](87,"ux-radio-button",23),m["\u0275\u0275listener"]("valueChange",(function(n){return t.buttonSize=n})),m["\u0275\u0275text"](88,"md"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](89,"\n                    "),m["\u0275\u0275elementStart"](90,"ux-radio-button",24),m["\u0275\u0275listener"]("valueChange",(function(n){return t.buttonSize=n})),m["\u0275\u0275text"](91,"lg"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](92,"\n                "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](93,"\n            "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](94,"\n        "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](95,"\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](96,"\n"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](97,"\n\n"),m["\u0275\u0275element"](98,"hr"),m["\u0275\u0275text"](99,"\n\n"),m["\u0275\u0275elementStart"](100,"p"),m["\u0275\u0275text"](101,"\n    A color picker can be added using the "),m["\u0275\u0275elementStart"](102,"code"),m["\u0275\u0275text"](103,"ux-color-picker"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](104," component.\n    The example above shows the color picker hosted in a\n    "),m["\u0275\u0275elementStart"](105,"a",25),m["\u0275\u0275text"](106,"dropdown button"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](107,"; however, it could equally be added to\n    a modal or side panel.\n    Colors can be picked from a pre-determined swatch, or optionally edited in hex or RGBA format with a live preview.\n    This example constructs a swatch of UX Aspects theme colors using the\n    "),m["\u0275\u0275elementStart"](108,"a",26),m["\u0275\u0275text"](109,"color service"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](110,".\n"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](111,"\n\n"),m["\u0275\u0275elementStart"](112,"p"),m["\u0275\u0275text"](113,"\n    The following properties can be used to customize and interact with "),m["\u0275\u0275elementStart"](114,"code"),m["\u0275\u0275text"](115,"ux-color-picker"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](116,".\n"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](117,"\n\n"),m["\u0275\u0275elementStart"](118,"uxd-api-properties",27),m["\u0275\u0275text"](119,"\n    "),m["\u0275\u0275elementStart"](120,"tr",28),m["\u0275\u0275text"](121,"\n        "),m["\u0275\u0275elementStart"](122,"p"),m["\u0275\u0275text"](123,"\n            The collection of colors to display in the color swatch.\n        "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](124,"\n        "),m["\u0275\u0275elementStart"](125,"p"),m["\u0275\u0275text"](126,"\n            Colors can be specified either as a string, which is the hex or RGBA value of the color; or as a\n            "),m["\u0275\u0275elementStart"](127,"code"),m["\u0275\u0275text"](128,"ColorPickerColor"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](129," object, which allows a name to be associated with the color.\n            See below for details of the "),m["\u0275\u0275elementStart"](130,"code"),m["\u0275\u0275text"](131,"ColorPickerColor"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](132," class.\n        "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](133,"\n        "),m["\u0275\u0275elementStart"](134,"p"),m["\u0275\u0275text"](135,"\n            This property is either a one-dimensional or two-dimensional array.\n            If a two-dimensional array is provided, the colors will be split into rows, providing more control over the\n            appearance of the swatch.\n        "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](136,"\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](137,"\n    "),m["\u0275\u0275elementStart"](138,"tr",29),m["\u0275\u0275text"](139,"\n        The currently selected color.\n        If this is one of the colors in the "),m["\u0275\u0275elementStart"](140,"code"),m["\u0275\u0275text"](141,"colors"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](142," collection, it will be visually highlighted in the\n        swatch.\n        It will also be shown in the input panel, if enabled (see "),m["\u0275\u0275elementStart"](143,"code"),m["\u0275\u0275text"](144,"showInput"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](145,").\n        Note that this will always be a "),m["\u0275\u0275elementStart"](146,"code"),m["\u0275\u0275text"](147,"ColorPickerColor"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](148," object, even if plain strings are provided to the\n        "),m["\u0275\u0275elementStart"](149,"code"),m["\u0275\u0275text"](150,"colors"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](151," property.\n        See below for details of the "),m["\u0275\u0275elementStart"](152,"code"),m["\u0275\u0275text"](153,"ColorPickerColor"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](154," class.\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](155,"\n    "),m["\u0275\u0275elementStart"](156,"tr",30),m["\u0275\u0275text"](157,"\n        The number of columns to display in the color swatch.\n        Set this to -1 if the width should be specified by a stylesheet instead, e.g. to provide a responsive layout.\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](158,"\n    "),m["\u0275\u0275elementStart"](159,"tr",31),m["\u0275\u0275text"](160,"\n        The style of the color swatch buttons.\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](161,"\n    "),m["\u0275\u0275elementStart"](162,"tr",32),m["\u0275\u0275text"](163,"\n        The size of the color swatch buttons.\n        Three size variants are currently supported.\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](164,"\n    "),m["\u0275\u0275elementStart"](165,"tr",33),m["\u0275\u0275text"](166,"\n        Whether to show tooltips above the color swatch buttons.\n        These contain the color name if provided; otherwise the color hex/RGBA value.\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](167,"\n    "),m["\u0275\u0275elementStart"](168,"tr",34),m["\u0275\u0275text"](169,"\n        Whether to show the hex/RGBA input panel.\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](170,"\n    "),m["\u0275\u0275elementStart"](171,"tr",35),m["\u0275\u0275text"](172,"\n        The default input mode to display in the input panel.\n        The user can switch modes using the toggle button.\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](173,"\n    "),m["\u0275\u0275elementStart"](174,"tr",36),m["\u0275\u0275text"](175,"\n        Define a function that returns an aria-label for a "),m["\u0275\u0275elementStart"](176,"code"),m["\u0275\u0275text"](177,"ColorPickerColor"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](178,".\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](179,"\n    "),m["\u0275\u0275elementStart"](180,"tr",37),m["\u0275\u0275text"](181,"\n        Define a function that returns an aria-label for the button that switches input modes.\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](182,"\n    "),m["\u0275\u0275elementStart"](183,"tr",38),m["\u0275\u0275text"](184,"\n        Define a function that returns an aria-label for the input control.\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](185,"\n"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](186,"\n\n"),m["\u0275\u0275elementStart"](187,"uxd-api-properties",39),m["\u0275\u0275text"](188,"\n    "),m["\u0275\u0275elementStart"](189,"tr",40),m["\u0275\u0275text"](190,"\n        Emitted when the user changes the selected color, either by clicking a color swatch button, or entering a valid\n        color value into the input panel text field.\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](191,"\n    "),m["\u0275\u0275elementStart"](192,"tr",41),m["\u0275\u0275text"](193,"\n        Emitted when the user presses enter in the input panel text field.\n        This can be used to commit a color change and/or close a popup.\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](194,"\n    "),m["\u0275\u0275elementStart"](195,"tr",42),m["\u0275\u0275text"](196,"\n        Emitted when the user changes the colour input mode.\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](197,"\n"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](198,"\n\n"),m["\u0275\u0275elementStart"](199,"h4"),m["\u0275\u0275text"](200,"ColorPickerColor"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](201,"\n\n"),m["\u0275\u0275elementStart"](202,"p"),m["\u0275\u0275text"](203,"\n    This is the type used by "),m["\u0275\u0275elementStart"](204,"code"),m["\u0275\u0275text"](205,"ux-color-picker"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](206," to define available colors and return the selected color.\n    This provides access to the hex and RGBA values of any color, as well as individual color components.\n"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](207,"\n\n"),m["\u0275\u0275elementStart"](208,"uxd-api-properties"),m["\u0275\u0275text"](209,"\n    "),m["\u0275\u0275elementStart"](210,"tr",43),m["\u0275\u0275text"](211,"\n        "),m["\u0275\u0275elementStart"](212,"ul"),m["\u0275\u0275text"](213,"\n            "),m["\u0275\u0275elementStart"](214,"li"),m["\u0275\u0275elementStart"](215,"code"),m["\u0275\u0275text"](216,"name"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](217,": The human readable name of the color."),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](218,"\n            "),m["\u0275\u0275elementStart"](219,"li"),m["\u0275\u0275text"](220,"\n                "),m["\u0275\u0275elementStart"](221,"code"),m["\u0275\u0275text"](222,"value"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](223,": The hex or RGBA value of the color.\n                If this cannot be parsed then an error will be thrown.\n            "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](224,"\n            "),m["\u0275\u0275elementStart"](225,"li"),m["\u0275\u0275text"](226,"\n                "),m["\u0275\u0275elementStart"](227,"code"),m["\u0275\u0275text"](228,"inputMode"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](229,": Whether "),m["\u0275\u0275elementStart"](230,"code"),m["\u0275\u0275text"](231,"value"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](232," is in hex or RGBA format.\n                If this is specified, then the format of "),m["\u0275\u0275elementStart"](233,"code"),m["\u0275\u0275text"](234,"value"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](235," will be preserved, e.g. if short-form hex\n                strings should not be expanded.\n            "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](236,"\n        "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](237,"\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](238,"\n    "),m["\u0275\u0275elementStart"](239,"tr",44),m["\u0275\u0275text"](240,"\n        The human readable name of the color.\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](241,"\n    "),m["\u0275\u0275elementStart"](242,"tr",45),m["\u0275\u0275text"](243,"\n        The hex value of the color.\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](244,"\n    "),m["\u0275\u0275elementStart"](245,"tr",46),m["\u0275\u0275text"](246,"\n        The RGBA value of the color.\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](247,"\n    "),m["\u0275\u0275elementStart"](248,"tr",47),m["\u0275\u0275text"](249,"\n        The red value of the color (0-255).\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](250,"\n    "),m["\u0275\u0275elementStart"](251,"tr",48),m["\u0275\u0275text"](252,"\n        The green value of the color (0-255).\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](253,"\n    "),m["\u0275\u0275elementStart"](254,"tr",49),m["\u0275\u0275text"](255,"\n        The blue value of the color (0-255).\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](256,"\n    "),m["\u0275\u0275elementStart"](257,"tr",50),m["\u0275\u0275text"](258,"\n        The alpha value of the color (0.0-1.0).\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](259,"\n"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](260,"\n\n"),m["\u0275\u0275elementStart"](261,"h4"),m["\u0275\u0275text"](262,"Classes"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](263,"\n\n"),m["\u0275\u0275elementStart"](264,"p"),m["\u0275\u0275text"](265,"\n    The following classes are provided to help style components surrounding the color picker.\n"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](266,"\n\n"),m["\u0275\u0275elementStart"](267,"ul"),m["\u0275\u0275text"](268,"\n    "),m["\u0275\u0275elementStart"](269,"li"),m["\u0275\u0275elementStart"](270,"code"),m["\u0275\u0275text"](271,"ux-color-picker-button-preview"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](272,": An inline color sample which can be added to the popup button."),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](273,"\n    "),m["\u0275\u0275elementStart"](274,"li"),m["\u0275\u0275elementStart"](275,"code"),m["\u0275\u0275text"](276,"ux-color-picker-dropdown"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](277,": Additional styling for a dropdown container."),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](278,"\n"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](279,"\n\n"),m["\u0275\u0275elementStart"](280,"h4"),m["\u0275\u0275text"](281,"Example Code"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](282,"\n\n"),m["\u0275\u0275elementStart"](283,"ux-tabset",51),m["\u0275\u0275text"](284,"\n    "),m["\u0275\u0275elementStart"](285,"ux-tab",52),m["\u0275\u0275text"](286,"\n        "),m["\u0275\u0275element"](287,"uxd-snippet",53),m["\u0275\u0275text"](288,"\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](289,"\n    "),m["\u0275\u0275elementStart"](290,"ux-tab",54),m["\u0275\u0275text"](291,"\n        "),m["\u0275\u0275element"](292,"uxd-snippet",53),m["\u0275\u0275text"](293,"\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](294,"\n    "),m["\u0275\u0275elementStart"](295,"ux-tab",55),m["\u0275\u0275text"](296,"\n        "),m["\u0275\u0275element"](297,"uxd-snippet",53),m["\u0275\u0275text"](298,"\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](299,"\n"),m["\u0275\u0275elementEnd"]()}2&n&&(m["\u0275\u0275advance"](2),m["\u0275\u0275property"]("isOpen",t.isPickerOpen)("autoClose",!1),m["\u0275\u0275advance"](5),m["\u0275\u0275styleProp"]("background-color",t.selected.rgba),m["\u0275\u0275advance"](12),m["\u0275\u0275textInterpolate"](t.selected.hex),m["\u0275\u0275advance"](3),m["\u0275\u0275textInterpolate"](t.selected.rgba),m["\u0275\u0275advance"](21),m["\u0275\u0275property"]("value",t.columns)("min",-1),m["\u0275\u0275advance"](5),m["\u0275\u0275property"]("value",t.showInput),m["\u0275\u0275advance"](6),m["\u0275\u0275property"]("value",t.showTooltips),m["\u0275\u0275advance"](15),m["\u0275\u0275property"]("value",t.buttonStyle),m["\u0275\u0275advance"](3),m["\u0275\u0275property"]("value",t.buttonStyle),m["\u0275\u0275advance"](12),m["\u0275\u0275property"]("value",t.buttonSize),m["\u0275\u0275advance"](3),m["\u0275\u0275property"]("value",t.buttonSize),m["\u0275\u0275advance"](3),m["\u0275\u0275property"]("value",t.buttonSize),m["\u0275\u0275advance"](193),m["\u0275\u0275property"]("minimal",!1),m["\u0275\u0275advance"](4),m["\u0275\u0275property"]("content",t.snippets.compiled.appHtml),m["\u0275\u0275advance"](5),m["\u0275\u0275property"]("content",t.snippets.compiled.appTs),m["\u0275\u0275advance"](5),m["\u0275\u0275property"]("content",t.snippets.compiled.appCss))},directives:[c.BsDropdownDirective,l.DefaultFocusIndicatorDirective,c.BsDropdownToggleDirective,l.IconComponent,c.BsDropdownMenuDirective,l.AccordionComponent,l.AccordionPanelComponent,l.NumberPickerComponent,l.CheckboxComponent,l.RadioButtonComponent,p.RouterLinkWithHref,x.$,h.S,l.TabsetComponent,l.TabComponent,g.j,l.ColorPickerComponent,s.NgIf],styles:[".demo-color-picker-container[_ngcontent-%COMP%] {\n  margin-bottom: 370px;\n}\n.btn-container.demo-color-picker-close[_ngcontent-%COMP%] {\n  margin: 0 8px 8px;\n}\n.btn-container.demo-color-picker-close[_ngcontent-%COMP%]    > button[_ngcontent-%COMP%] {\n  width: 100%;\n}"]}),t=function(n,t,e,a){var s,o=arguments.length,p=o<3?t:null===a?a=Object.getOwnPropertyDescriptor(t,e):a;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)p=Reflect.decorate(n,t,e,a);else for(var l=n.length-1;l>=0;l--)(s=n[l])&&(p=(o<3?s(p):o>3?s(t,e,p):s(t,e))||p);return o>3&&p&&Object.defineProperty(t,e,p),p}([(0,d.cG)("ComponentsColorPickerComponent"),f("design:paramtypes",[l.ColorService])],t)}(k.u)],P=[{path:"**",component:u.R,data:{category:i.N.resolveCategoryData(i.I.Components,"Color")}}],T=function(){function n(n,t){t.registerResolver(n,E)}return n.\u0275fac=function(t){return new(t||n)(m["\u0275\u0275inject"](m.ComponentFactoryResolver),m["\u0275\u0275inject"](i.N))},n.\u0275mod=m["\u0275\u0275defineNgModule"]({type:n}),n.\u0275inj=m["\u0275\u0275defineInjector"]({imports:[[l.AccordionModule,c.BsDropdownModule,l.CheckboxModule,l.ColorPickerModule,l.ColorServiceModule,s.CommonModule,r.N,o.FormsModule,l.IconModule,l.NumberPickerModule,l.RadioButtonModule,p.RouterModule.forChild(P),l.TabsetModule]]}),n}()}}]);
(window.webpackJsonp=window.webpackJsonp||[]).push([[27],{"1EC9":function(n,a){n.exports={snippet:'<span class="token selector">.demo-chart-container-stack</span> <span class="token punctuation">{</span>\n    <span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">;</span>\n    <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>        \n    <span class="token property">height</span><span class="token punctuation">:</span> 400px<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>',example:".demo-chart-container-stack {\n    display: block;\n    position: relative;        \n    height: 400px;\n}"}},"1Hdb":function(n,a,s){"use strict";s.r(a),s.d(a,"ChartsBarChartsModule",(function(){return R}));var t,p=s("ofXK"),o=s("tyNb"),e=s("7Q8i"),c=s("KLty"),r=s("XtaT"),l=s("T/2f"),u=s("YZ8U"),i=s("MO+k"),k=s("AVdU"),b=s("yHOM"),d=s("fXoL"),h=s("+gXg"),g=s("2RDK"),m=s("COk8"),C=(t=function(n,a){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,a){n.__proto__=a}||function(n,a){for(var s in a)Object.prototype.hasOwnProperty.call(a,s)&&(n[s]=a[s])})(n,a)},function(n,a){function s(){this.constructor=n}t(n,a),n.prototype=null===a?Object.create(a):(s.prototype=a.prototype,new s)}),y=function(n,a){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(n,a)};function f(n,a){if(1&n&&(d.Vb(0,"tr"),d.Nc(1,"\n                    "),d.Vb(2,"td"),d.Nc(3),d.Ub(),d.Nc(4,"\n                    "),d.Vb(5,"td"),d.Nc(6),d.Ub(),d.Nc(7,"\n                "),d.Ub()),2&n){var s=a.$implicit,t=a.index,p=d.gc();d.zb(3),d.Oc(s),d.zb(3),d.Oc(p.barChartData[0].data[t])}}var N=function(n){function a(a){var t=n.call(this,s("3A8N"))||this;t.playground={files:{"app.component.ts":t.snippets.raw.appTs,"app.component.html":t.snippets.raw.appHtml,"app.component.css":t.snippets.raw.appCss},modules:[{library:"chart.js"},{imports:["ChartsModule"],library:"ng2-charts"},{imports:["ColorServiceModule"],library:"@ux-aspects/ux-aspects"}]},t.barChartData=[{data:[34,25,19,34,32,44,50,67],borderWidth:1,barPercentage:.5,categoryPercentage:1}],t.barChartLabels=[".doc",".ppt",".pdf",".xls",".html",".txt",".csv",".mht"],t.barChartLegend=!1;var p=a.getColor("grey2").setAlpha(.5).toRgba(),o=a.getColor("chart1").setAlpha(.1).toRgba(),e=a.getColor("chart1").setAlpha(.2).toRgba(),c=a.getColor("chart1").toHex(),r=a.getColor("grey2").toHex();return t.barChartOptions={maintainAspectRatio:!1,responsive:!0,scales:{xAxes:[{gridLines:{display:!0,zeroLineColor:p,color:"transparent"}}],yAxes:[{type:"linear",gridLines:{zeroLineColor:p},ticks:{min:0,max:80,stepSize:20}}]},tooltips:{backgroundColor:r,cornerRadius:0,callbacks:{title:function(n){},label:function(n){return"x: "+n.xLabel+", y: "+n.yLabel}},displayColors:!1}},t.barChartColors=[{backgroundColor:o,hoverBackgroundColor:e,borderColor:c}],t}return C(a,n),a.prototype.ngAfterViewInit=function(){var n=this.baseChart.chart,a=i.Chart;a.helpers.each(n.getDatasetMeta(0).data,(function(s,t){t>=6&&(s.draw=function(){n.ctx.save(),n.ctx.setLineDash([2,2]),a.elements.Rectangle.prototype.draw.apply(this,arguments),n.ctx.restore()})}))},a.\u0275fac=function(n){return new(n||a)(d.Pb(e.v))},a.\u0275cmp=d.Jb({type:a,selectors:[["uxd-charts-bar-chart"]],viewQuery:function(n,a){var s;1&n&&d.Hc(c.a,!0),2&n&&d.wc(s=d.dc())&&(a.baseChart=s.first)},features:[d.wb],decls:164,vars:10,consts:[[1,"demo-chart-container"],["aria-label","Bar chart showing file type totals","baseChart","","chartType","bar",3,"datasets","labels","options","legend","colors"],["aria-label","Chart data"],[4,"ngFor","ngForOf"],["tableTitle","Inputs"],["uxd-api-property","","name","dataSets","type","object[]"],["uxd-api-property","","name","chartType","type","string"],["uxd-api-property","","name","options","type","ChartOptions"],["uxd-api-property","","name","colors","type","object[]"],["uxd-api-property","","name","legend","type","boolean"],["tableTitle","Outputs"],["uxd-api-property","","name","chartClick"],["uxd-api-property","","name","chartHover"],[3,"minimal"],["heading","HTML"],["language","html",3,"content"],["heading","TypeScript"],["language","javascript",3,"content"],["heading","CSS"],["language","css",3,"content"],[1,"m-b-nil"],["href","https://www.npmjs.com/package/ng2-charts",1,"hyperlink"],["href","https://www.npmjs.com/package/chart.js",1,"hyperlink"],["href","https://www.npmjs.com/package/@types/chart.js",1,"hyperlink"],["href","http://valor-software.com/ng2-charts/",1,"hyperlink"],["href","http://www.chartjs.org/docs/",1,"hyperlink"]],template:function(n,a){1&n&&(d.Vb(0,"div",0),d.Nc(1,"\n\n    "),d.Vb(2,"canvas",1),d.Nc(3,"\n\n        "),d.Vb(4,"table",2),d.Nc(5,"\n            "),d.Vb(6,"thead"),d.Nc(7,"\n                "),d.Vb(8,"tr"),d.Nc(9,"\n                    "),d.Vb(10,"th"),d.Nc(11,"File Type"),d.Ub(),d.Nc(12,"\n                    "),d.Vb(13,"th"),d.Nc(14,"Number of Files"),d.Ub(),d.Nc(15,"\n                "),d.Ub(),d.Nc(16,"\n            "),d.Ub(),d.Nc(17,"\n            "),d.Vb(18,"tbody"),d.Nc(19,"\n                "),d.Lc(20,f,8,2,"tr",3),d.Nc(21,"\n            "),d.Ub(),d.Nc(22,"\n        "),d.Ub(),d.Nc(23,"\n\n    "),d.Ub(),d.Nc(24,"\n\n"),d.Ub(),d.Nc(25,"\n\n"),d.Qb(26,"hr"),d.Nc(27,"\n\n"),d.Vb(28,"p"),d.Nc(29,"\n    Bar Charts can be added using the "),d.Vb(30,"code"),d.Nc(31,"ng2-charts"),d.Ub(),d.Nc(32," library.\n    The "),d.Vb(33,"code"),d.Nc(34,"chart.js"),d.Ub(),d.Nc(35," library needs to be imported and the "),d.Vb(36,"code"),d.Nc(37,"ChartsModule"),d.Ub(),d.Nc(38," needs to be added to the appropriate NgModule.\n"),d.Ub(),d.Nc(39,"\n\n"),d.Vb(40,"p"),d.Nc(41,"The "),d.Vb(42,"code"),d.Nc(43,"baseChart"),d.Ub(),d.Nc(44," directive should be added to a "),d.Vb(45,"code"),d.Nc(46,"canvas"),d.Ub(),d.Nc(47," element and the following attributes can be used to customize the chart behavior and appearance:"),d.Ub(),d.Nc(48,"\n\n"),d.Vb(49,"uxd-api-properties",4),d.Nc(50,"\n    "),d.Vb(51,"tr",5),d.Nc(52,"\n        Contains the data and properties for each data set to be displayed in the chart.\n    "),d.Ub(),d.Nc(53,"\n    "),d.Vb(54,"tr",6),d.Nc(55,"\n        Indicates the type of the chart. Possible options are: "),d.Vb(56,"code"),d.Nc(57,"line"),d.Ub(),d.Nc(58,", "),d.Vb(59,"code"),d.Nc(60,"bar"),d.Ub(),d.Nc(61,", "),d.Vb(62,"code"),d.Nc(63,"radar"),d.Ub(),d.Nc(64,", "),d.Vb(65,"code"),d.Nc(66,"pie"),d.Ub(),d.Nc(67,", "),d.Vb(68,"code"),d.Nc(69,"polarArea"),d.Ub(),d.Nc(70,", "),d.Vb(71,"code"),d.Nc(72,"doughnut"),d.Ub(),d.Nc(73,"\n    "),d.Ub(),d.Nc(74,"\n    "),d.Vb(75,"tr",7),d.Nc(76,"\n        Configures the appearance and behavior of all aspects of the chart.\n    "),d.Ub(),d.Nc(77,"\n    "),d.Vb(78,"tr",8),d.Nc(79,"\n        Configure the color values to be used within the chart.\n    "),d.Ub(),d.Nc(80,"\n    "),d.Vb(81,"tr",9),d.Nc(82,"\n        Determines whether or not the legend should be displayed.\n    "),d.Ub(),d.Nc(83,"\n"),d.Ub(),d.Nc(84,"\n\n"),d.Vb(85,"uxd-api-properties",10),d.Nc(86,"\n    "),d.Vb(87,"tr",11),d.Nc(88,"\n        Fires when click on a chart has occurred, returns information regarding active points and labels.\n    "),d.Ub(),d.Nc(89,"\n    "),d.Vb(90,"tr",12),d.Nc(91,"\n        Fires when mousemove (hover) on a chart has occurred, returns information regarding active points and labels.\n    "),d.Ub(),d.Nc(92,"\n"),d.Ub(),d.Nc(93,"\n\n"),d.Vb(94,"p"),d.Nc(95,"Complete documentation on the directive and chart options can be found at the documentation links below."),d.Ub(),d.Nc(96,"\n\n"),d.Vb(97,"p"),d.Nc(98,"The following code can be used to create the example above: "),d.Ub(),d.Nc(99,"\n\n"),d.Vb(100,"ux-tabset",13),d.Nc(101,"\n\n    "),d.Vb(102,"ux-tab",14),d.Nc(103,"\n        "),d.Qb(104,"uxd-snippet",15),d.Nc(105,"\n    "),d.Ub(),d.Nc(106,"\n\n    "),d.Vb(107,"ux-tab",16),d.Nc(108,"\n        "),d.Qb(109,"uxd-snippet",17),d.Nc(110,"\n    "),d.Ub(),d.Nc(111,"\n\n    "),d.Vb(112,"ux-tab",18),d.Nc(113,"\n        "),d.Qb(114,"uxd-snippet",19),d.Nc(115,"\n    "),d.Ub(),d.Nc(116,"\n\n"),d.Ub(),d.Nc(117,"\n\n"),d.Qb(118,"br"),d.Nc(119,"\n\n"),d.Vb(120,"blockquote"),d.Nc(121,"\n\n    "),d.Vb(122,"p",20),d.Nc(123,"\n        "),d.Vb(124,"b"),d.Nc(125,"Dependencies: "),d.Ub(),d.Nc(126,"\n        "),d.Vb(127,"a",21),d.Nc(128,"ng2-charts"),d.Ub(),d.Nc(129,",\n        "),d.Vb(130,"a",22),d.Nc(131,"chart.js"),d.Ub(),d.Nc(132,"\n    "),d.Ub(),d.Nc(133,"\n\n    "),d.Vb(134,"p",20),d.Nc(135,"\n        "),d.Vb(136,"b"),d.Nc(137,"Type Definitions: "),d.Ub(),d.Nc(138,"\n        "),d.Vb(139,"a",23),d.Nc(140,"@types/chart.js"),d.Ub(),d.Nc(141,"\n    "),d.Ub(),d.Nc(142,"\n\n    "),d.Vb(143,"p",20),d.Nc(144,"\n        "),d.Vb(145,"b"),d.Nc(146,"Modules: "),d.Ub(),d.Nc(147,"\n        "),d.Vb(148,"span"),d.Nc(149,"ChartsModule"),d.Ub(),d.Nc(150,"\n    "),d.Ub(),d.Nc(151,"\n\n\n    "),d.Vb(152,"p",20),d.Nc(153,"\n        "),d.Vb(154,"b"),d.Nc(155,"Documentation: "),d.Ub(),d.Nc(156,"\n        "),d.Vb(157,"a",24),d.Nc(158,"Angular Directive Documentation"),d.Ub(),d.Nc(159,",\n        "),d.Vb(160,"a",25),d.Nc(161,"Chart Library Documentation"),d.Ub(),d.Nc(162,"\n    "),d.Ub(),d.Nc(163,"\n"),d.Ub()),2&n&&(d.zb(2),d.nc("datasets",a.barChartData)("labels",a.barChartLabels)("options",a.barChartOptions)("legend",a.barChartLegend)("colors",a.barChartColors),d.zb(18),d.nc("ngForOf",a.barChartLabels),d.zb(80),d.nc("minimal",!1),d.zb(4),d.nc("content",a.snippets.compiled.appHtml),d.zb(5),d.nc("content",a.snippets.compiled.appTs),d.zb(5),d.nc("content",a.snippets.compiled.appCss))},directives:[c.a,p.m,h.a,g.a,e.Md,e.Hd,m.a,e.P],encapsulation:2}),a=function(n,a,s,t){var p,o=arguments.length,e=o<3?a:null===t?t=Object.getOwnPropertyDescriptor(a,s):t;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)e=Reflect.decorate(n,a,s,t);else for(var c=n.length-1;c>=0;c--)(p=n[c])&&(e=(o<3?p(e):o>3?p(a,s,e):p(a,s))||e);return o>3&&e&&Object.defineProperty(a,s,e),e}([Object(b.a)("ChartsBarChartComponent"),y("design:paramtypes",[e.v])],a)}(k.a),v=function(){var n=function(a,s){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,a){n.__proto__=a}||function(n,a){for(var s in a)Object.prototype.hasOwnProperty.call(a,s)&&(n[s]=a[s])})(a,s)};return function(a,s){function t(){this.constructor=a}n(a,s),a.prototype=null===s?Object.create(s):(t.prototype=s.prototype,new t)}}(),x=function(n,a){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(n,a)};function w(n,a){if(1&n&&(d.Vb(0,"tr"),d.Nc(1,"\n                    "),d.Vb(2,"td"),d.Nc(3),d.Ub(),d.Nc(4,"\n                    "),d.Vb(5,"td"),d.Nc(6),d.Ub(),d.Nc(7,"\n                "),d.Ub()),2&n){var s=a.$implicit,t=a.index,p=d.gc();d.zb(3),d.Oc(s),d.zb(3),d.Oc(p.barChartData[0].data[t])}}var U=function(n){function a(a){var t=n.call(this,s("7+dP"))||this;t.playground={files:{"app.component.ts":t.snippets.raw.appTs,"app.component.html":t.snippets.raw.appHtml,"app.component.css":t.snippets.raw.appCss},modules:[{library:"chart.js"},{imports:["ChartsModule"],library:"ng2-charts"},{imports:["ColorServiceModule"],library:"@ux-aspects/ux-aspects"}]},t.barChartData=[{data:[44,32,34,19,25,34],borderWidth:1,barPercentage:.5,categoryPercentage:1}],t.barChartLabels=[".txt",".html",".xls",".pdf",".ppt",".doc"],t.barChartLegend=!1;var p=a.getColor("grey2").toHex(),o=a.getColor("chart1").setAlpha(.1).toRgba(),e=a.getColor("chart1").setAlpha(.2).toRgba(),c=a.getColor("chart1").toHex();return t.barChartOptions={maintainAspectRatio:!1,responsive:!0,scales:{xAxes:[{gridLines:{color:"transparent"},ticks:{min:0,max:45,stepSize:5}}],yAxes:[{gridLines:{color:"transparent"}}]},tooltips:{backgroundColor:p,cornerRadius:0,callbacks:{title:function(n){},label:function(n){return"x: "+n.xLabel+", y: "+n.yLabel}},displayColors:!1}},t.barChartColors=[{backgroundColor:o,hoverBackgroundColor:e,borderColor:c}],t}return v(a,n),a.\u0275fac=function(n){return new(n||a)(d.Pb(e.v))},a.\u0275cmp=d.Jb({type:a,selectors:[["uxd-charts-horizontal-bar-chart"]],features:[d.wb],decls:164,vars:10,consts:[[1,"demo-chart-container"],["aria-label","Horizontal bar chart showing file type totals","baseChart","","chartType","horizontalBar",3,"datasets","labels","options","legend","colors"],["aria-label","Chart data"],[4,"ngFor","ngForOf"],["tableTitle","Inputs"],["uxd-api-property","","name","dataSets","type","object[]"],["uxd-api-property","","name","chartType","type","string"],["uxd-api-property","","name","options","type","ChartOptions"],["uxd-api-property","","name","colors","type","object[]"],["uxd-api-property","","name","legend","type","boolean"],["tableTitle","Outputs"],["uxd-api-property","","name","chartClick"],["uxd-api-property","","name","chartHover"],[3,"minimal"],["heading","HTML"],["language","html",3,"content"],["heading","TypeScript"],["language","javascript",3,"content"],["heading","CSS"],["language","css",3,"content"],[1,"m-b-nil"],["href","https://www.npmjs.com/package/ng2-charts",1,"hyperlink"],["href","https://www.npmjs.com/package/chart.js",1,"hyperlink"],["href","https://www.npmjs.com/package/@types/chart.js",1,"hyperlink"],["href","http://valor-software.com/ng2-charts/",1,"hyperlink"],["href","http://www.chartjs.org/docs/",1,"hyperlink"]],template:function(n,a){1&n&&(d.Vb(0,"div",0),d.Nc(1,"\n\n    "),d.Vb(2,"canvas",1),d.Nc(3,"\n\n        "),d.Vb(4,"table",2),d.Nc(5,"\n            "),d.Vb(6,"thead"),d.Nc(7,"\n                "),d.Vb(8,"tr"),d.Nc(9,"\n                    "),d.Vb(10,"th"),d.Nc(11,"File Type"),d.Ub(),d.Nc(12,"\n                    "),d.Vb(13,"th"),d.Nc(14,"Number of Files"),d.Ub(),d.Nc(15,"\n                "),d.Ub(),d.Nc(16,"\n            "),d.Ub(),d.Nc(17,"\n            "),d.Vb(18,"tbody"),d.Nc(19,"\n                "),d.Lc(20,w,8,2,"tr",3),d.Nc(21,"\n            "),d.Ub(),d.Nc(22,"\n        "),d.Ub(),d.Nc(23,"\n\n    "),d.Ub(),d.Nc(24,"\n\n"),d.Ub(),d.Nc(25,"\n\n"),d.Qb(26,"hr"),d.Nc(27,"\n\n"),d.Vb(28,"p"),d.Nc(29,"\n    Horizontal Bar Charts can be added using the "),d.Vb(30,"code"),d.Nc(31,"ng2-charts"),d.Ub(),d.Nc(32," library.\n    The "),d.Vb(33,"code"),d.Nc(34,"chart.js"),d.Ub(),d.Nc(35," library needs to be imported and the "),d.Vb(36,"code"),d.Nc(37,"ChartsModule"),d.Ub(),d.Nc(38," needs to be added to the appropriate NgModule.\n"),d.Ub(),d.Nc(39,"\n\n"),d.Vb(40,"p"),d.Nc(41,"The "),d.Vb(42,"code"),d.Nc(43,"baseChart"),d.Ub(),d.Nc(44," directive should be added to a "),d.Vb(45,"code"),d.Nc(46,"canvas"),d.Ub(),d.Nc(47," element and the following attributes can be used to customize the chart behavior and appearance:"),d.Ub(),d.Nc(48,"\n\n"),d.Vb(49,"uxd-api-properties",4),d.Nc(50,"\n    "),d.Vb(51,"tr",5),d.Nc(52,"\n        Contains the data and properties for each data set to be displayed in the chart.\n    "),d.Ub(),d.Nc(53,"\n    "),d.Vb(54,"tr",6),d.Nc(55,"\n        Indicates the type of the chart. Possible options are: "),d.Vb(56,"code"),d.Nc(57,"line"),d.Ub(),d.Nc(58,", "),d.Vb(59,"code"),d.Nc(60,"bar"),d.Ub(),d.Nc(61,", "),d.Vb(62,"code"),d.Nc(63,"radar"),d.Ub(),d.Nc(64,", "),d.Vb(65,"code"),d.Nc(66,"pie"),d.Ub(),d.Nc(67,", "),d.Vb(68,"code"),d.Nc(69,"polarArea"),d.Ub(),d.Nc(70,", "),d.Vb(71,"code"),d.Nc(72,"doughnut"),d.Ub(),d.Nc(73,"\n    "),d.Ub(),d.Nc(74,"\n    "),d.Vb(75,"tr",7),d.Nc(76,"\n        Configures the appearance and behavior of all aspects of the chart.\n    "),d.Ub(),d.Nc(77,"\n    "),d.Vb(78,"tr",8),d.Nc(79,"\n        Configure the color values to be used within the chart.\n    "),d.Ub(),d.Nc(80,"\n    "),d.Vb(81,"tr",9),d.Nc(82,"\n        Determines whether or not the legend should be displayed.\n    "),d.Ub(),d.Nc(83,"\n"),d.Ub(),d.Nc(84,"\n\n"),d.Vb(85,"uxd-api-properties",10),d.Nc(86,"\n    "),d.Vb(87,"tr",11),d.Nc(88,"\n        Fires when click on a chart has occurred, returns information regarding active points and labels.\n    "),d.Ub(),d.Nc(89,"\n    "),d.Vb(90,"tr",12),d.Nc(91,"\n        Fires when mousemove (hover) on a chart has occurred, returns information regarding active points and labels.\n    "),d.Ub(),d.Nc(92,"\n"),d.Ub(),d.Nc(93,"\n\n"),d.Vb(94,"p"),d.Nc(95,"Complete documentation on the directive and chart options can be found at the documentation links below."),d.Ub(),d.Nc(96,"\n\n"),d.Vb(97,"p"),d.Nc(98,"The following code can be used to create the example above: "),d.Ub(),d.Nc(99,"\n\n"),d.Vb(100,"ux-tabset",13),d.Nc(101,"\n\n    "),d.Vb(102,"ux-tab",14),d.Nc(103,"\n        "),d.Qb(104,"uxd-snippet",15),d.Nc(105,"\n    "),d.Ub(),d.Nc(106,"\n\n    "),d.Vb(107,"ux-tab",16),d.Nc(108,"\n        "),d.Qb(109,"uxd-snippet",17),d.Nc(110,"\n    "),d.Ub(),d.Nc(111,"\n\n    "),d.Vb(112,"ux-tab",18),d.Nc(113,"\n        "),d.Qb(114,"uxd-snippet",19),d.Nc(115,"\n    "),d.Ub(),d.Nc(116,"\n\n"),d.Ub(),d.Nc(117,"\n\n"),d.Qb(118,"br"),d.Nc(119,"\n\n"),d.Vb(120,"blockquote"),d.Nc(121,"\n\n    "),d.Vb(122,"p",20),d.Nc(123,"\n        "),d.Vb(124,"b"),d.Nc(125,"Dependencies: "),d.Ub(),d.Nc(126,"\n        "),d.Vb(127,"a",21),d.Nc(128,"ng2-charts"),d.Ub(),d.Nc(129,",\n        "),d.Vb(130,"a",22),d.Nc(131,"chart.js"),d.Ub(),d.Nc(132,"\n    "),d.Ub(),d.Nc(133,"\n\n    "),d.Vb(134,"p",20),d.Nc(135,"\n        "),d.Vb(136,"b"),d.Nc(137,"Type Definitions: "),d.Ub(),d.Nc(138,"\n        "),d.Vb(139,"a",23),d.Nc(140,"@types/chart.js"),d.Ub(),d.Nc(141,"\n    "),d.Ub(),d.Nc(142,"\n\n    "),d.Vb(143,"p",20),d.Nc(144,"\n        "),d.Vb(145,"b"),d.Nc(146,"Modules: "),d.Ub(),d.Nc(147,"\n        "),d.Vb(148,"span"),d.Nc(149,"ChartsModule"),d.Ub(),d.Nc(150,"\n    "),d.Ub(),d.Nc(151,"\n\n\n    "),d.Vb(152,"p",20),d.Nc(153,"\n        "),d.Vb(154,"b"),d.Nc(155,"Documentation: "),d.Ub(),d.Nc(156,"\n        "),d.Vb(157,"a",24),d.Nc(158,"Angular Directive Documentation"),d.Ub(),d.Nc(159,",\n        "),d.Vb(160,"a",25),d.Nc(161,"Chart Library Documentation"),d.Ub(),d.Nc(162,"\n    "),d.Ub(),d.Nc(163,"\n"),d.Ub()),2&n&&(d.zb(2),d.nc("datasets",a.barChartData)("labels",a.barChartLabels)("options",a.barChartOptions)("legend",a.barChartLegend)("colors",a.barChartColors),d.zb(18),d.nc("ngForOf",a.barChartLabels),d.zb(80),d.nc("minimal",!1),d.zb(4),d.nc("content",a.snippets.compiled.appHtml),d.zb(5),d.nc("content",a.snippets.compiled.appTs),d.zb(5),d.nc("content",a.snippets.compiled.appCss))},directives:[c.a,p.m,h.a,g.a,e.Md,e.Hd,m.a,e.P],encapsulation:2}),a=function(n,a,s,t){var p,o=arguments.length,e=o<3?a:null===t?t=Object.getOwnPropertyDescriptor(a,s):t;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)e=Reflect.decorate(n,a,s,t);else for(var c=n.length-1;c>=0;c--)(p=n[c])&&(e=(o<3?p(e):o>3?p(a,s,e):p(a,s))||e);return o>3&&e&&Object.defineProperty(a,s,e),e}([Object(b.a)("ChartsHorizontalBarChartComponent"),x("design:paramtypes",[e.v])],a)}(k.a),V=function(){var n=function(a,s){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,a){n.__proto__=a}||function(n,a){for(var s in a)Object.prototype.hasOwnProperty.call(a,s)&&(n[s]=a[s])})(a,s)};return function(a,s){function t(){this.constructor=a}n(a,s),a.prototype=null===s?Object.create(s):(t.prototype=s.prototype,new t)}}(),L=function(n,a){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(n,a)};function D(n,a){if(1&n&&(d.Vb(0,"tr"),d.Nc(1,"\n                    "),d.Vb(2,"td"),d.Nc(3),d.Ub(),d.Nc(4,"\n                    "),d.Vb(5,"td"),d.Nc(6),d.Ub(),d.Nc(7,"\n                    "),d.Vb(8,"td"),d.Nc(9),d.Ub(),d.Nc(10,"\n                    "),d.Vb(11,"td"),d.Nc(12),d.Ub(),d.Nc(13,"\n                "),d.Ub()),2&n){var s=a.$implicit,t=a.index,p=d.gc();d.zb(3),d.Oc(s),d.zb(3),d.Pc("\u20ac",p.barChartData[0].data[t],""),d.zb(3),d.Pc("\u20ac",p.barChartData[1].data[t],""),d.zb(3),d.Pc("\u20ac",p.barChartData[2].data[t],"")}}var O=[N,U,function(n){function a(a){var t=n.call(this,s("WeqZ"))||this;t.colorService=a,t.playground={files:{"app.component.ts":t.snippets.raw.appTs,"app.component.html":t.snippets.raw.appHtml,"app.component.css":t.snippets.raw.appCss},modules:[{library:"chart.js"},{imports:["ChartsModule"],library:"ng2-charts"},{imports:["ColorServiceModule"],library:"@ux-aspects/ux-aspects"}]},t.barChartLabels=["1","2","3","4","5","6","7","8","9","10","11","12","13"],t.barChartLegend=!1;var p=a.getColor("grey2").toHex();return t.barChartData=[{data:t.generateRandomData(),barPercentage:.6,categoryPercentage:1},{data:t.generateRandomData(),barPercentage:.6,categoryPercentage:1},{data:t.generateRandomData(),barPercentage:.6,categoryPercentage:1}],t.barChartOptions={maintainAspectRatio:!1,responsive:!0,hover:{mode:"nearest"},scales:{xAxes:[{stacked:!0,gridLines:{color:"transparent"}}],yAxes:[{stacked:!0,ticks:{min:0,max:3e4,stepSize:5e3,callback:function(n,a,s){return n+"\u20ac"}}}]},tooltips:{backgroundColor:p,cornerRadius:0,callbacks:{title:function(n){return"Sales "+(n[0].datasetIndex+1)},label:function(n){return n.yLabel+"\u20ac in cycle "+n.index}},displayColors:!1}},t.barChartColors=[t.generateBarColors("chart1"),t.generateBarColors("chart2"),t.generateBarColors("chart3")],t}return V(a,n),a.prototype.generateRandomData=function(){for(var n=[],a=0;a<13;a++)n.push(Math.floor(1e4*Math.random()));return n},a.prototype.generateBarColors=function(n){for(var a=[],s=[],t=0;t<13;t++)a.push(this.colorService.getColor(n).setAlpha(t<10?.7:.3).toRgba()),s.push(this.colorService.getColor(n).setAlpha(t<10?.8:.4).toRgba());return{backgroundColor:a,hoverBackgroundColor:s}},a.\u0275fac=function(n){return new(n||a)(d.Pb(e.v))},a.\u0275cmp=d.Jb({type:a,selectors:[["uxd-charts-stacked-bar-chart"]],features:[d.wb],decls:170,vars:10,consts:[[1,"demo-chart-container-stack"],["aria-label","Stacked bar chart showing financial breakdown","baseChart","","chartType","bar",3,"datasets","labels","options","legend","colors"],["aria-label","Chart data"],[4,"ngFor","ngForOf"],["tableTitle","Inputs"],["uxd-api-property","","name","dataSets","type","object[]"],["uxd-api-property","","name","chartType","type","string"],["uxd-api-property","","name","options","type","ChartOptions"],["uxd-api-property","","name","colors","type","object[]"],["uxd-api-property","","name","legend","type","boolean"],["tableTitle","Outputs"],["uxd-api-property","","name","chartClick"],["uxd-api-property","","name","chartHover"],[3,"minimal"],["heading","HTML"],["language","html",3,"content"],["heading","TypeScript"],["language","javascript",3,"content"],["heading","CSS"],["language","css",3,"content"],[1,"m-b-nil"],["href","https://www.npmjs.com/package/ng2-charts",1,"hyperlink"],["href","https://www.npmjs.com/package/chart.js",1,"hyperlink"],["href","https://www.npmjs.com/package/@types/chart.js",1,"hyperlink"],["href","http://valor-software.com/ng2-charts/",1,"hyperlink"],["href","http://www.chartjs.org/docs/",1,"hyperlink"]],template:function(n,a){1&n&&(d.Vb(0,"div",0),d.Nc(1,"\n\n    "),d.Vb(2,"canvas",1),d.Nc(3,"\n\n        "),d.Vb(4,"table",2),d.Nc(5,"\n            "),d.Vb(6,"thead"),d.Nc(7,"\n                "),d.Vb(8,"tr"),d.Nc(9,"\n                    "),d.Vb(10,"th"),d.Nc(11,"Week"),d.Ub(),d.Nc(12,"\n                    "),d.Vb(13,"th"),d.Nc(14,"Marketing"),d.Ub(),d.Nc(15,"\n                    "),d.Vb(16,"th"),d.Nc(17,"R&D"),d.Ub(),d.Nc(18,"\n                    "),d.Vb(19,"th"),d.Nc(20,"Logistics"),d.Ub(),d.Nc(21,"\n                "),d.Ub(),d.Nc(22,"\n            "),d.Ub(),d.Nc(23,"\n            "),d.Vb(24,"tbody"),d.Nc(25,"\n                "),d.Lc(26,D,14,4,"tr",3),d.Nc(27,"\n            "),d.Ub(),d.Nc(28,"\n        "),d.Ub(),d.Nc(29,"\n\n    "),d.Ub(),d.Nc(30,"\n\n"),d.Ub(),d.Nc(31,"\n\n"),d.Qb(32,"hr"),d.Nc(33,"\n\n"),d.Vb(34,"p"),d.Nc(35,"\n    Stacked Bar Charts can be added using the "),d.Vb(36,"code"),d.Nc(37,"ng2-charts"),d.Ub(),d.Nc(38," library.\n    The "),d.Vb(39,"code"),d.Nc(40,"chart.js"),d.Ub(),d.Nc(41," library needs to be imported and the "),d.Vb(42,"code"),d.Nc(43,"ChartsModule"),d.Ub(),d.Nc(44," needs to be added to the appropriate NgModule.\n"),d.Ub(),d.Nc(45,"\n\n"),d.Vb(46,"p"),d.Nc(47,"The "),d.Vb(48,"code"),d.Nc(49,"baseChart"),d.Ub(),d.Nc(50," directive should be added to a "),d.Vb(51,"code"),d.Nc(52,"canvas"),d.Ub(),d.Nc(53," element and the following attributes can be used to customize the chart behavior and appearance:"),d.Ub(),d.Nc(54,"\n\n"),d.Vb(55,"uxd-api-properties",4),d.Nc(56,"\n    "),d.Vb(57,"tr",5),d.Nc(58,"\n        Contains the data and properties for each data set to be displayed in the chart.\n    "),d.Ub(),d.Nc(59,"\n    "),d.Vb(60,"tr",6),d.Nc(61,"\n        Indicates the type of the chart. Possible options are: "),d.Vb(62,"code"),d.Nc(63,"line"),d.Ub(),d.Nc(64,", "),d.Vb(65,"code"),d.Nc(66,"bar"),d.Ub(),d.Nc(67,", "),d.Vb(68,"code"),d.Nc(69,"radar"),d.Ub(),d.Nc(70,", "),d.Vb(71,"code"),d.Nc(72,"pie"),d.Ub(),d.Nc(73,", "),d.Vb(74,"code"),d.Nc(75,"polarArea"),d.Ub(),d.Nc(76,", "),d.Vb(77,"code"),d.Nc(78,"doughnut"),d.Ub(),d.Nc(79,"\n    "),d.Ub(),d.Nc(80,"\n    "),d.Vb(81,"tr",7),d.Nc(82,"\n        Configures the appearance and behavior of all aspects of the chart.\n    "),d.Ub(),d.Nc(83,"\n    "),d.Vb(84,"tr",8),d.Nc(85,"\n        Configure the color values to be used within the chart.\n    "),d.Ub(),d.Nc(86,"\n    "),d.Vb(87,"tr",9),d.Nc(88,"\n        Determines whether or not the legend should be displayed.\n    "),d.Ub(),d.Nc(89,"\n"),d.Ub(),d.Nc(90,"\n\n"),d.Vb(91,"uxd-api-properties",10),d.Nc(92,"\n    "),d.Vb(93,"tr",11),d.Nc(94,"\n        Fires when click on a chart has occurred, returns information regarding active points and labels.\n    "),d.Ub(),d.Nc(95,"\n    "),d.Vb(96,"tr",12),d.Nc(97,"\n        Fires when mousemove (hover) on a chart has occurred, returns information regarding active points and labels.\n    "),d.Ub(),d.Nc(98,"\n"),d.Ub(),d.Nc(99,"\n\n"),d.Vb(100,"p"),d.Nc(101,"Complete documentation on the directive and chart options can be found at the documentation links below."),d.Ub(),d.Nc(102,"\n\n"),d.Vb(103,"p"),d.Nc(104,"The following code can be used to create the example above: "),d.Ub(),d.Nc(105,"\n\n"),d.Vb(106,"ux-tabset",13),d.Nc(107,"\n\n    "),d.Vb(108,"ux-tab",14),d.Nc(109,"\n        "),d.Qb(110,"uxd-snippet",15),d.Nc(111,"\n    "),d.Ub(),d.Nc(112,"\n\n    "),d.Vb(113,"ux-tab",16),d.Nc(114,"\n        "),d.Qb(115,"uxd-snippet",17),d.Nc(116,"\n    "),d.Ub(),d.Nc(117,"\n\n    "),d.Vb(118,"ux-tab",18),d.Nc(119,"\n        "),d.Qb(120,"uxd-snippet",19),d.Nc(121,"\n    "),d.Ub(),d.Nc(122,"\n\n"),d.Ub(),d.Nc(123,"\n\n"),d.Qb(124,"br"),d.Nc(125,"\n\n"),d.Vb(126,"blockquote"),d.Nc(127,"\n\n    "),d.Vb(128,"p",20),d.Nc(129,"\n        "),d.Vb(130,"b"),d.Nc(131,"Dependencies: "),d.Ub(),d.Nc(132,"\n        "),d.Vb(133,"a",21),d.Nc(134,"ng2-charts"),d.Ub(),d.Nc(135,",\n        "),d.Vb(136,"a",22),d.Nc(137,"chart.js"),d.Ub(),d.Nc(138,"\n    "),d.Ub(),d.Nc(139,"\n\n    "),d.Vb(140,"p",20),d.Nc(141,"\n        "),d.Vb(142,"b"),d.Nc(143,"Type Definitions: "),d.Ub(),d.Nc(144,"\n        "),d.Vb(145,"a",23),d.Nc(146,"@types/chart.js"),d.Ub(),d.Nc(147,"\n    "),d.Ub(),d.Nc(148,"\n\n    "),d.Vb(149,"p",20),d.Nc(150,"\n        "),d.Vb(151,"b"),d.Nc(152,"Modules: "),d.Ub(),d.Nc(153,"\n        "),d.Vb(154,"span"),d.Nc(155,"ChartsModule"),d.Ub(),d.Nc(156,"\n    "),d.Ub(),d.Nc(157,"\n\n\n    "),d.Vb(158,"p",20),d.Nc(159,"\n        "),d.Vb(160,"b"),d.Nc(161,"Documentation: "),d.Ub(),d.Nc(162,"\n        "),d.Vb(163,"a",24),d.Nc(164,"Angular Directive Documentation"),d.Ub(),d.Nc(165,",\n        "),d.Vb(166,"a",25),d.Nc(167,"Chart Library Documentation"),d.Ub(),d.Nc(168,"\n    "),d.Ub(),d.Nc(169,"\n"),d.Ub()),2&n&&(d.zb(2),d.nc("datasets",a.barChartData)("labels",a.barChartLabels)("options",a.barChartOptions)("legend",a.barChartLegend)("colors",a.barChartColors),d.zb(24),d.nc("ngForOf",a.barChartLabels),d.zb(80),d.nc("minimal",!1),d.zb(4),d.nc("content",a.snippets.compiled.appHtml),d.zb(5),d.nc("content",a.snippets.compiled.appTs),d.zb(5),d.nc("content",a.snippets.compiled.appCss))},directives:[c.a,p.m,h.a,g.a,e.Md,e.Hd,m.a,e.P],encapsulation:2}),a=function(n,a,s,t){var p,o=arguments.length,e=o<3?a:null===t?t=Object.getOwnPropertyDescriptor(a,s):t;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)e=Reflect.decorate(n,a,s,t);else for(var c=n.length-1;c>=0;c--)(p=n[c])&&(e=(o<3?p(e):o>3?p(a,s,e):p(a,s))||e);return o>3&&e&&Object.defineProperty(a,s,e),e}([Object(b.a)("ChartsStackedBarChartComponent"),L("design:paramtypes",[e.v])],a)}(k.a)],S=[{path:"**",component:l.a,data:{category:u.b.resolveCategoryData(u.a.Charts,"Bar Charts")}}],R=function(){function n(n,a){a.registerResolver(n,O)}return n.\u0275mod=d.Nb({type:n}),n.\u0275inj=d.Mb({factory:function(a){return new(a||n)(d.Zb(d.j),d.Zb(u.b))},imports:[[c.b,e.w,p.c,r.a,o.i.forChild(S),e.Nd]]}),n}()},"3A8N":function(n,a,s){var t={"./app.css":"YRXj","./app.html":"715J","./app.ts":"uHCC"};function p(n){var a=o(n);return s(a)}function o(n){if(!s.o(t,n)){var a=new Error("Cannot find module '"+n+"'");throw a.code="MODULE_NOT_FOUND",a}return t[n]}p.keys=function(){return Object.keys(t)},p.resolve=o,n.exports=p,p.id="3A8N"},"7+dP":function(n,a,s){var t={"./app.css":"zUtt","./app.html":"8gRP","./app.ts":"d8+o"};function p(n){var a=o(n);return s(a)}function o(n){if(!s.o(t,n)){var a=new Error("Cannot find module '"+n+"'");throw a.code="MODULE_NOT_FOUND",a}return t[n]}p.keys=function(){return Object.keys(t)},p.resolve=o,n.exports=p,p.id="7+dP"},"715J":function(n,a){n.exports={snippet:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>demo-chart-container<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>canvas</span> <span class="token attr-name">aria-label</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Bar chart showing file type totals<span class="token punctuation">"</span></span>\n        <span class="token attr-name">baseChart</span>\n        <span class="token attr-name">[datasets]</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>barChartData<span class="token punctuation">"</span></span>\n        <span class="token attr-name">[labels]</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>barChartLabels<span class="token punctuation">"</span></span>\n        <span class="token attr-name">[options]</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>barChartOptions<span class="token punctuation">"</span></span>\n        <span class="token attr-name">[legend]</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>barChartLegend<span class="token punctuation">"</span></span>\n        <span class="token attr-name">[colors]</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>barChartColors<span class="token punctuation">"</span></span>\n        <span class="token attr-name">chartType</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>bar<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>thead</span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>\n                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>File Type<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>\n                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>Number of Files<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>thead</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tbody</span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span> <span class="token attr-name">*ngFor</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>let label of barChartLabels; let idx = index<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>{{label}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>\n                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>{{barChartData[0].data[idx]}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tbody</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">></span></span>\n\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>canvas</span><span class="token punctuation">></span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>',example:'<div class="demo-chart-container">\n\n    <canvas aria-label="Bar chart showing file type totals"\n        baseChart\n        [datasets]="barChartData"\n        [labels]="barChartLabels"\n        [options]="barChartOptions"\n        [legend]="barChartLegend"\n        [colors]="barChartColors"\n        chartType="bar">\n\n        <table>\n            <thead>\n                <tr>\n                    <th>File Type</th>\n                    <th>Number of Files</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr *ngFor="let label of barChartLabels; let idx = index">\n                    <td>{{label}}</td>\n                    <td>{{barChartData[0].data[idx]}}</td>\n                </tr>\n            </tbody>\n        </table>\n\n    </canvas>\n\n</div>'}},"8gRP":function(n,a){n.exports={snippet:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>demo-chart-container<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>canvas</span> <span class="token attr-name">aria-label</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Horizontal bar chart showing file type totals<span class="token punctuation">"</span></span>\n        <span class="token attr-name">baseChart</span>\n        <span class="token attr-name">[datasets]</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>barChartData<span class="token punctuation">"</span></span>\n        <span class="token attr-name">[labels]</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>barChartLabels<span class="token punctuation">"</span></span>\n        <span class="token attr-name">[options]</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>barChartOptions<span class="token punctuation">"</span></span>\n        <span class="token attr-name">[legend]</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>barChartLegend<span class="token punctuation">"</span></span>\n        <span class="token attr-name">[colors]</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>barChartColors<span class="token punctuation">"</span></span>\n        <span class="token attr-name">chartType</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>horizontalBar<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span> <span class="token attr-name">aria-label</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Chart data<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>thead</span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>\n                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>File Type<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>\n                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>Number of Files<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>thead</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tbody</span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span> <span class="token attr-name">*ngFor</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>let label of barChartLabels; let idx = index<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>{{label}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>\n                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>{{barChartData[0].data[idx]}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tbody</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">></span></span>\n\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>canvas</span><span class="token punctuation">></span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>',example:'<div class="demo-chart-container">\n\n    <canvas aria-label="Horizontal bar chart showing file type totals"\n        baseChart\n        [datasets]="barChartData"\n        [labels]="barChartLabels"\n        [options]="barChartOptions"\n        [legend]="barChartLegend"\n        [colors]="barChartColors"\n        chartType="horizontalBar">\n\n        <table aria-label="Chart data">\n            <thead>\n                <tr>\n                    <th>File Type</th>\n                    <th>Number of Files</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr *ngFor="let label of barChartLabels; let idx = index">\n                    <td>{{label}}</td>\n                    <td>{{barChartData[0].data[idx]}}</td>\n                </tr>\n            </tbody>\n        </table>\n\n    </canvas>\n\n</div>'}},A7n5:function(n,a){n.exports={snippet:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>demo-chart-container-stack<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>canvas</span> <span class="token attr-name">aria-label</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Stacked bar chart showing financial breakdown<span class="token punctuation">"</span></span>\n        <span class="token attr-name">baseChart</span>\n        <span class="token attr-name">[datasets]</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>barChartData<span class="token punctuation">"</span></span>\n        <span class="token attr-name">[labels]</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>barChartLabels<span class="token punctuation">"</span></span>\n        <span class="token attr-name">[options]</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>barChartOptions<span class="token punctuation">"</span></span>\n        <span class="token attr-name">[legend]</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>barChartLegend<span class="token punctuation">"</span></span>\n        <span class="token attr-name">[colors]</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>barChartColors<span class="token punctuation">"</span></span>\n        <span class="token attr-name">chartType</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>bar<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span> <span class="token attr-name">aria-label</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Chart data<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>thead</span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>\n                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>Week<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>\n                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>Marketing<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>\n                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>R<span class="token entity" title="&amp;">&amp;amp;</span>D<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>\n                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>Logistics<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>thead</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tbody</span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span> <span class="token attr-name">*ngFor</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>let label of barChartLabels; let idx = index<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>{{label}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>\n                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span><span class="token entity" title="&euro;">&amp;euro;</span>{{barChartData[0].data[idx]}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>\n                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span><span class="token entity" title="&euro;">&amp;euro;</span>{{barChartData[1].data[idx]}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>\n                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span><span class="token entity" title="&euro;">&amp;euro;</span>{{barChartData[2].data[idx]}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tbody</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">></span></span>\n\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>canvas</span><span class="token punctuation">></span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>',example:'<div class="demo-chart-container-stack">\n\n    <canvas aria-label="Stacked bar chart showing financial breakdown"\n        baseChart\n        [datasets]="barChartData"\n        [labels]="barChartLabels"\n        [options]="barChartOptions"\n        [legend]="barChartLegend"\n        [colors]="barChartColors"\n        chartType="bar">\n\n        <table aria-label="Chart data">\n            <thead>\n                <tr>\n                    <th>Week</th>\n                    <th>Marketing</th>\n                    <th>R&amp;D</th>\n                    <th>Logistics</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr *ngFor="let label of barChartLabels; let idx = index">\n                    <td>{{label}}</td>\n                    <td>&euro;{{barChartData[0].data[idx]}}</td>\n                    <td>&euro;{{barChartData[1].data[idx]}}</td>\n                    <td>&euro;{{barChartData[2].data[idx]}}</td>\n                </tr>\n            </tbody>\n        </table>\n\n    </canvas>\n\n</div>'}},WeqZ:function(n,a,s){var t={"./app.css":"1EC9","./app.html":"A7n5","./app.ts":"rS/+"};function p(n){var a=o(n);return s(a)}function o(n){if(!s.o(t,n)){var a=new Error("Cannot find module '"+n+"'");throw a.code="MODULE_NOT_FOUND",a}return t[n]}p.keys=function(){return Object.keys(t)},p.resolve=o,n.exports=p,p.id="WeqZ"},YRXj:function(n,a){n.exports={snippet:'<span class="token selector">.demo-chart-container</span> <span class="token punctuation">{</span>\n    <span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">;</span>\n    <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>\n    <span class="token property">height</span><span class="token punctuation">:</span> 200px<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>',example:".demo-chart-container {\n    display: block;\n    position: relative;\n    height: 200px;\n}"}},"d8+o":function(n,a){n.exports={snippet:'<span class="token keyword">import</span> <span class="token punctuation">{</span> Component <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@angular/core\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> ColorService <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@ux-aspects/ux-aspects\'</span><span class="token punctuation">;</span>\n\n@<span class="token function">Component</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    selector<span class="token operator">:</span> <span class="token string">\'app\'</span><span class="token punctuation">,</span>\n    templateUrl<span class="token operator">:</span> <span class="token string">\'./app.component.html\'</span><span class="token punctuation">,</span>\n    styleUrls<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">\'./app.component.css\'</span><span class="token punctuation">]</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">AppComponent</span> <span class="token punctuation">{</span>\n\n    <span class="token comment">// configure the directive data</span>\n    barChartData<span class="token operator">:</span> Chart<span class="token punctuation">.</span>ChartDataSets<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">{</span>\n        data<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">44</span><span class="token punctuation">,</span> <span class="token number">32</span><span class="token punctuation">,</span> <span class="token number">34</span><span class="token punctuation">,</span> <span class="token number">19</span><span class="token punctuation">,</span> <span class="token number">25</span><span class="token punctuation">,</span> <span class="token number">34</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n        borderWidth<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>\n        barPercentage<span class="token operator">:</span> <span class="token number">0.5</span><span class="token punctuation">,</span>\n        categoryPercentage<span class="token operator">:</span> <span class="token number">1</span>\n    <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n    barChartLabels<span class="token operator">:</span> string<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">\'.txt\'</span><span class="token punctuation">,</span> <span class="token string">\'.html\'</span><span class="token punctuation">,</span> <span class="token string">\'.xls\'</span><span class="token punctuation">,</span> <span class="token string">\'.pdf\'</span><span class="token punctuation">,</span> <span class="token string">\'.ppt\'</span><span class="token punctuation">,</span> <span class="token string">\'.doc\'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n    barChartOptions<span class="token operator">:</span> Chart<span class="token punctuation">.</span>ChartOptions<span class="token punctuation">;</span>\n    barChartLegend<span class="token operator">:</span> boolean <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\n    barChartColors<span class="token operator">:</span> any<span class="token punctuation">;</span>\n\n    <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">colorService<span class="token operator">:</span> ColorService</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n\n        <span class="token keyword">let</span> tooltipBackgroundColor <span class="token operator">=</span> colorService<span class="token punctuation">.</span><span class="token function">getColor</span><span class="token punctuation">(</span><span class="token string">\'grey2\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toHex</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">let</span> barBackgroundColor <span class="token operator">=</span> colorService<span class="token punctuation">.</span><span class="token function">getColor</span><span class="token punctuation">(</span><span class="token string">\'chart1\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setAlpha</span><span class="token punctuation">(</span><span class="token number">0.1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toRgba</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">let</span> barHoverBackgroundColor <span class="token operator">=</span> colorService<span class="token punctuation">.</span><span class="token function">getColor</span><span class="token punctuation">(</span><span class="token string">\'chart1\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setAlpha</span><span class="token punctuation">(</span><span class="token number">0.2</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toRgba</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">let</span> barBorderColor <span class="token operator">=</span> colorService<span class="token punctuation">.</span><span class="token function">getColor</span><span class="token punctuation">(</span><span class="token string">\'chart1\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toHex</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token keyword">this</span><span class="token punctuation">.</span>barChartOptions <span class="token operator">=</span> <span class="token punctuation">{</span>\n            maintainAspectRatio<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n            responsive<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n            scales<span class="token operator">:</span> <span class="token punctuation">{</span>\n                xAxes<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span>\n                    gridLines<span class="token operator">:</span> <span class="token punctuation">{</span>\n                        color<span class="token operator">:</span> <span class="token string">\'transparent\'</span>\n                    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n                    ticks<span class="token operator">:</span> <span class="token punctuation">{</span>\n                        min<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>\n                        max<span class="token operator">:</span> <span class="token number">45</span><span class="token punctuation">,</span>\n                        stepSize<span class="token operator">:</span> <span class="token number">5</span>\n                    <span class="token punctuation">}</span> <span class="token keyword">as</span> Chart<span class="token punctuation">.</span>LinearTickOptions\n                <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n                yAxes<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span>\n                    gridLines<span class="token operator">:</span> <span class="token punctuation">{</span>\n                        color<span class="token operator">:</span> <span class="token string">\'transparent\'</span>\n                    <span class="token punctuation">}</span>\n                <span class="token punctuation">}</span> <span class="token keyword">as</span> Chart<span class="token punctuation">.</span>ChartXAxe<span class="token punctuation">]</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            tooltips<span class="token operator">:</span> <span class="token punctuation">{</span>\n                backgroundColor<span class="token operator">:</span> tooltipBackgroundColor<span class="token punctuation">,</span>\n                cornerRadius<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>\n                callbacks<span class="token operator">:</span> <span class="token punctuation">{</span>\n                    <span class="token function-variable function">title</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">item<span class="token operator">:</span> Chart<span class="token punctuation">.</span>ChartTooltipItem<span class="token punctuation">[</span><span class="token punctuation">]</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n                        <span class="token keyword">return</span><span class="token punctuation">;</span>\n                    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n                    <span class="token function-variable function">label</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">item<span class="token operator">:</span> Chart<span class="token punctuation">.</span>ChartTooltipItem</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n                        <span class="token keyword">return</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">x: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span> item<span class="token punctuation">.</span>xLabel <span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">, y: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span> item<span class="token punctuation">.</span>yLabel <span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span>\n                    <span class="token punctuation">}</span>\n                <span class="token punctuation">}</span><span class="token punctuation">,</span>\n                displayColors<span class="token operator">:</span> <span class="token boolean">false</span>\n            <span class="token punctuation">}</span> <span class="token keyword">as</span> any\n        <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n        <span class="token keyword">this</span><span class="token punctuation">.</span>barChartColors <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">{</span>\n            backgroundColor<span class="token operator">:</span> barBackgroundColor<span class="token punctuation">,</span>\n            hoverBackgroundColor<span class="token operator">:</span> barHoverBackgroundColor<span class="token punctuation">,</span>\n            borderColor<span class="token operator">:</span> barBorderColor\n        <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n    <span class="token punctuation">}</span>\n\n<span class="token punctuation">}</span>',example:"import { Component } from '@angular/core';\nimport { ColorService } from '@ux-aspects/ux-aspects';\n\n@Component({\n    selector: 'app',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n    // configure the directive data\n    barChartData: Chart.ChartDataSets[] = [{\n        data: [44, 32, 34, 19, 25, 34],\n        borderWidth: 1,\n        barPercentage: 0.5,\n        categoryPercentage: 1\n    }];\n\n    barChartLabels: string[] = ['.txt', '.html', '.xls', '.pdf', '.ppt', '.doc'];\n    barChartOptions: Chart.ChartOptions;\n    barChartLegend: boolean = false;\n    barChartColors: any;\n\n    constructor(colorService: ColorService) {\n\n        let tooltipBackgroundColor = colorService.getColor('grey2').toHex();\n        let barBackgroundColor = colorService.getColor('chart1').setAlpha(0.1).toRgba();\n        let barHoverBackgroundColor = colorService.getColor('chart1').setAlpha(0.2).toRgba();\n        let barBorderColor = colorService.getColor('chart1').toHex();\n\n        this.barChartOptions = {\n            maintainAspectRatio: false,\n            responsive: true,\n            scales: {\n                xAxes: [{\n                    gridLines: {\n                        color: 'transparent'\n                    },\n                    ticks: {\n                        min: 0,\n                        max: 45,\n                        stepSize: 5\n                    } as Chart.LinearTickOptions\n                }],\n                yAxes: [{\n                    gridLines: {\n                        color: 'transparent'\n                    }\n                } as Chart.ChartXAxe]\n            },\n            tooltips: {\n                backgroundColor: tooltipBackgroundColor,\n                cornerRadius: 0,\n                callbacks: {\n                    title: (item: Chart.ChartTooltipItem[]) => {\n                        return;\n                    },\n                    label: (item: Chart.ChartTooltipItem) => {\n                        return `x: ${ item.xLabel }, y: ${ item.yLabel }`;\n                    }\n                },\n                displayColors: false\n            } as any\n        };\n\n        this.barChartColors = [{\n            backgroundColor: barBackgroundColor,\n            hoverBackgroundColor: barHoverBackgroundColor,\n            borderColor: barBorderColor\n        }];\n\n    }\n\n}"}},"rS/+":function(n,a){n.exports={snippet:'<span class="token keyword">import</span> <span class="token punctuation">{</span> Component <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@angular/core\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> ColorService <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@ux-aspects/ux-aspects\'</span><span class="token punctuation">;</span>\n\n@<span class="token function">Component</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    selector<span class="token operator">:</span> <span class="token string">\'app\'</span><span class="token punctuation">,</span>\n    templateUrl<span class="token operator">:</span> <span class="token string">\'./app.component.html\'</span><span class="token punctuation">,</span>\n    styleUrls<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">\'./app.component.css\'</span><span class="token punctuation">]</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">AppComponent</span> <span class="token punctuation">{</span>\n\n    <span class="token comment">// configure the directive data</span>\n    barChartData<span class="token operator">:</span> Chart<span class="token punctuation">.</span>ChartDataSets<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n    barChartLabels<span class="token operator">:</span> string<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">\'1\'</span><span class="token punctuation">,</span> <span class="token string">\'2\'</span><span class="token punctuation">,</span> <span class="token string">\'3\'</span><span class="token punctuation">,</span> <span class="token string">\'4\'</span><span class="token punctuation">,</span> <span class="token string">\'5\'</span><span class="token punctuation">,</span> <span class="token string">\'6\'</span><span class="token punctuation">,</span> <span class="token string">\'7\'</span><span class="token punctuation">,</span> <span class="token string">\'8\'</span><span class="token punctuation">,</span> <span class="token string">\'9\'</span><span class="token punctuation">,</span> <span class="token string">\'10\'</span><span class="token punctuation">,</span> <span class="token string">\'11\'</span><span class="token punctuation">,</span> <span class="token string">\'12\'</span><span class="token punctuation">,</span> <span class="token string">\'13\'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n    barChartOptions<span class="token operator">:</span> Chart<span class="token punctuation">.</span>ChartOptions<span class="token punctuation">;</span>\n    barChartLegend<span class="token operator">:</span> boolean <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\n    barChartColors<span class="token operator">:</span> any<span class="token punctuation">;</span>\n\n    <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter"><span class="token keyword">private</span> colorService<span class="token operator">:</span> ColorService</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n\n        <span class="token keyword">let</span> tooltipBackgroundColor <span class="token operator">=</span> colorService<span class="token punctuation">.</span><span class="token function">getColor</span><span class="token punctuation">(</span><span class="token string">\'grey2\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toHex</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token keyword">this</span><span class="token punctuation">.</span>barChartData <span class="token operator">=</span> <span class="token punctuation">[</span>\n            <span class="token punctuation">{</span>\n                data<span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">generateRandomData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n                barPercentage<span class="token operator">:</span> <span class="token number">0.6</span><span class="token punctuation">,</span>\n                categoryPercentage<span class="token operator">:</span> <span class="token number">1</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            <span class="token punctuation">{</span>\n                data<span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">generateRandomData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n                barPercentage<span class="token operator">:</span> <span class="token number">0.6</span><span class="token punctuation">,</span>\n                categoryPercentage<span class="token operator">:</span> <span class="token number">1</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            <span class="token punctuation">{</span>\n                data<span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">generateRandomData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n                barPercentage<span class="token operator">:</span> <span class="token number">0.6</span><span class="token punctuation">,</span>\n                categoryPercentage<span class="token operator">:</span> <span class="token number">1</span>\n            <span class="token punctuation">}</span>\n        <span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n        <span class="token keyword">this</span><span class="token punctuation">.</span>barChartOptions <span class="token operator">=</span> <span class="token punctuation">{</span>\n            maintainAspectRatio<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n            responsive<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n            hover<span class="token operator">:</span> <span class="token punctuation">{</span>\n                mode<span class="token operator">:</span> <span class="token string">\'nearest\'</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            scales<span class="token operator">:</span> <span class="token punctuation">{</span>\n                xAxes<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span>\n                    stacked<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n                    gridLines<span class="token operator">:</span> <span class="token punctuation">{</span>\n                        color<span class="token operator">:</span> <span class="token string">\'transparent\'</span>\n                    <span class="token punctuation">}</span>\n                <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n                yAxes<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span>\n                    stacked<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n                    ticks<span class="token operator">:</span> <span class="token punctuation">{</span>\n                        min<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>\n                        max<span class="token operator">:</span> <span class="token number">30000</span><span class="token punctuation">,</span>\n                        stepSize<span class="token operator">:</span> <span class="token number">5000</span><span class="token punctuation">,</span>\n                        <span class="token function-variable function">callback</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">value<span class="token operator">:</span> any<span class="token punctuation">,</span> index<span class="token operator">:</span> any<span class="token punctuation">,</span> values<span class="token operator">:</span> any</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n                            <span class="token keyword">return</span> value <span class="token operator">+</span> <span class="token string">\'\u20ac\'</span><span class="token punctuation">;</span>\n                        <span class="token punctuation">}</span>\n                    <span class="token punctuation">}</span> <span class="token keyword">as</span> Chart<span class="token punctuation">.</span>LinearTickOptions\n                <span class="token punctuation">}</span><span class="token punctuation">]</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            tooltips<span class="token operator">:</span> <span class="token punctuation">{</span>\n                backgroundColor<span class="token operator">:</span> tooltipBackgroundColor<span class="token punctuation">,</span>\n                cornerRadius<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>\n                callbacks<span class="token operator">:</span> <span class="token punctuation">{</span>\n                    <span class="token function-variable function">title</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">item<span class="token operator">:</span> Chart<span class="token punctuation">.</span>ChartTooltipItem<span class="token punctuation">[</span><span class="token punctuation">]</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n                        <span class="token keyword">return</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">Sales </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>item<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>datasetIndex <span class="token operator">+</span> <span class="token number">1</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span>\n                    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n                    <span class="token function-variable function">label</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">item<span class="token operator">:</span> Chart<span class="token punctuation">.</span>ChartTooltipItem</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n                        <span class="token keyword">return</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>item<span class="token punctuation">.</span>yLabel<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">\u20ac in cycle </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>item<span class="token punctuation">.</span>index<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span>\n                    <span class="token punctuation">}</span>\n                <span class="token punctuation">}</span><span class="token punctuation">,</span>\n                displayColors<span class="token operator">:</span> <span class="token boolean">false</span>\n            <span class="token punctuation">}</span> <span class="token keyword">as</span> any\n        <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n        <span class="token keyword">this</span><span class="token punctuation">.</span>barChartColors <span class="token operator">=</span> <span class="token punctuation">[</span>\n            <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">generateBarColors</span><span class="token punctuation">(</span><span class="token string">\'chart1\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n            <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">generateBarColors</span><span class="token punctuation">(</span><span class="token string">\'chart2\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n            <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">generateBarColors</span><span class="token punctuation">(</span><span class="token string">\'chart3\'</span><span class="token punctuation">)</span>\n        <span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n    <span class="token punctuation">}</span>\n\n    <span class="token function">generateRandomData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> number<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">{</span>\n\n        <span class="token keyword">let</span> data<span class="token operator">:</span> number<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n        <span class="token comment">// generate random data</span>\n        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> idx <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> idx <span class="token operator">&lt;</span> <span class="token number">13</span><span class="token punctuation">;</span> idx<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            data<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">10000</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n\n        <span class="token keyword">return</span> data<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token function">generateBarColors</span><span class="token punctuation">(</span><span class="token parameter">baseColor<span class="token operator">:</span> string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n\n        <span class="token keyword">let</span> backgroundColors <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n        <span class="token keyword">let</span> hoverColors <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> idx <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> idx <span class="token operator">&lt;</span> <span class="token number">13</span><span class="token punctuation">;</span> idx<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n\n            backgroundColors<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>\n                <span class="token keyword">this</span><span class="token punctuation">.</span>colorService<span class="token punctuation">.</span><span class="token function">getColor</span><span class="token punctuation">(</span>baseColor<span class="token punctuation">)</span>\n                    <span class="token punctuation">.</span><span class="token function">setAlpha</span><span class="token punctuation">(</span>idx <span class="token operator">&lt;</span> <span class="token number">10</span> <span class="token operator">?</span> <span class="token number">0.7</span> <span class="token operator">:</span> <span class="token number">0.3</span><span class="token punctuation">)</span>\n                    <span class="token punctuation">.</span><span class="token function">toRgba</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n            hoverColors<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>\n                <span class="token keyword">this</span><span class="token punctuation">.</span>colorService<span class="token punctuation">.</span><span class="token function">getColor</span><span class="token punctuation">(</span>baseColor<span class="token punctuation">)</span>\n                    <span class="token punctuation">.</span><span class="token function">setAlpha</span><span class="token punctuation">(</span>idx <span class="token operator">&lt;</span> <span class="token number">10</span> <span class="token operator">?</span> <span class="token number">0.8</span> <span class="token operator">:</span> <span class="token number">0.4</span><span class="token punctuation">)</span>\n                    <span class="token punctuation">.</span><span class="token function">toRgba</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n\n        <span class="token keyword">return</span> <span class="token punctuation">{</span>\n            backgroundColor<span class="token operator">:</span> backgroundColors<span class="token punctuation">,</span>\n            hoverBackgroundColor<span class="token operator">:</span> hoverColors\n        <span class="token punctuation">}</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n<span class="token punctuation">}</span>',example:"import { Component } from '@angular/core';\nimport { ColorService } from '@ux-aspects/ux-aspects';\n\n@Component({\n    selector: 'app',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n    // configure the directive data\n    barChartData: Chart.ChartDataSets[];\n    barChartLabels: string[] = ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12', '13'];\n    barChartOptions: Chart.ChartOptions;\n    barChartLegend: boolean = false;\n    barChartColors: any;\n\n    constructor(private colorService: ColorService) {\n\n        let tooltipBackgroundColor = colorService.getColor('grey2').toHex();\n\n        this.barChartData = [\n            {\n                data: this.generateRandomData(),\n                barPercentage: 0.6,\n                categoryPercentage: 1\n            },\n            {\n                data: this.generateRandomData(),\n                barPercentage: 0.6,\n                categoryPercentage: 1\n            },\n            {\n                data: this.generateRandomData(),\n                barPercentage: 0.6,\n                categoryPercentage: 1\n            }\n        ];\n\n        this.barChartOptions = {\n            maintainAspectRatio: false,\n            responsive: true,\n            hover: {\n                mode: 'nearest'\n            },\n            scales: {\n                xAxes: [{\n                    stacked: true,\n                    gridLines: {\n                        color: 'transparent'\n                    }\n                }],\n                yAxes: [{\n                    stacked: true,\n                    ticks: {\n                        min: 0,\n                        max: 30000,\n                        stepSize: 5000,\n                        callback: (value: any, index: any, values: any) => {\n                            return value + '\u20ac';\n                        }\n                    } as Chart.LinearTickOptions\n                }]\n            },\n            tooltips: {\n                backgroundColor: tooltipBackgroundColor,\n                cornerRadius: 0,\n                callbacks: {\n                    title: (item: Chart.ChartTooltipItem[]) => {\n                        return `Sales ${item[0].datasetIndex + 1}`;\n                    },\n                    label: (item: Chart.ChartTooltipItem) => {\n                        return `${item.yLabel}\u20ac in cycle ${item.index}`;\n                    }\n                },\n                displayColors: false\n            } as any\n        };\n\n        this.barChartColors = [\n            this.generateBarColors('chart1'),\n            this.generateBarColors('chart2'),\n            this.generateBarColors('chart3')\n        ];\n\n    }\n\n    generateRandomData(): number[] {\n\n        let data: number[] = [];\n\n        // generate random data\n        for (let idx = 0; idx < 13; idx++) {\n            data.push(Math.floor(Math.random() * 10000));\n        }\n\n        return data;\n    }\n\n    generateBarColors(baseColor: string) {\n\n        let backgroundColors = [];\n        let hoverColors = [];\n\n        for (let idx = 0; idx < 13; idx++) {\n\n            backgroundColors.push(\n                this.colorService.getColor(baseColor)\n                    .setAlpha(idx < 10 ? 0.7 : 0.3)\n                    .toRgba());\n\n            hoverColors.push(\n                this.colorService.getColor(baseColor)\n                    .setAlpha(idx < 10 ? 0.8 : 0.4)\n                    .toRgba());\n        }\n\n        return {\n            backgroundColor: backgroundColors,\n            hoverBackgroundColor: hoverColors\n        };\n    }\n\n}"}},uHCC:function(n,a){n.exports={snippet:'<span class="token keyword">import</span> <span class="token punctuation">{</span> AfterViewInit<span class="token punctuation">,</span> Component<span class="token punctuation">,</span> ViewChild <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@angular/core\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> ColorService <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@ux-aspects/ux-aspects\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> Chart <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'chart.js\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> BaseChartDirective <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'ng2-charts\'</span><span class="token punctuation">;</span>\n\n@<span class="token function">Component</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    selector<span class="token operator">:</span> <span class="token string">\'app\'</span><span class="token punctuation">,</span>\n    templateUrl<span class="token operator">:</span> <span class="token string">\'./app.component.html\'</span><span class="token punctuation">,</span>\n    styleUrls<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">\'./app.component.css\'</span><span class="token punctuation">]</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">AppComponent</span> <span class="token keyword">implements</span> <span class="token class-name">AfterViewInit</span> <span class="token punctuation">{</span>\n\n    <span class="token comment">// access the chart directive properties</span>\n    @<span class="token function">ViewChild</span><span class="token punctuation">(</span>BaseChartDirective<span class="token punctuation">)</span> baseChart<span class="token operator">:</span> BaseChartDirective<span class="token punctuation">;</span>\n\n    <span class="token comment">// configure the directive data</span>\n    barChartData<span class="token operator">:</span> Chart<span class="token punctuation">.</span>ChartDataSets<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">{</span>\n        data<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">34</span><span class="token punctuation">,</span> <span class="token number">25</span><span class="token punctuation">,</span> <span class="token number">19</span><span class="token punctuation">,</span> <span class="token number">34</span><span class="token punctuation">,</span> <span class="token number">32</span><span class="token punctuation">,</span> <span class="token number">44</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">67</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n        borderWidth<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>\n        barPercentage<span class="token operator">:</span> <span class="token number">0.5</span><span class="token punctuation">,</span>\n        categoryPercentage<span class="token operator">:</span> <span class="token number">1</span>\n    <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n    barChartLabels<span class="token operator">:</span> string<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">\'.doc\'</span><span class="token punctuation">,</span> <span class="token string">\'.ppt\'</span><span class="token punctuation">,</span> <span class="token string">\'.pdf\'</span><span class="token punctuation">,</span> <span class="token string">\'.xls\'</span><span class="token punctuation">,</span> <span class="token string">\'.html\'</span><span class="token punctuation">,</span> <span class="token string">\'.txt\'</span><span class="token punctuation">,</span> <span class="token string">\'.csv\'</span><span class="token punctuation">,</span> <span class="token string">\'.mht\'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n    barChartOptions<span class="token operator">:</span> Chart<span class="token punctuation">.</span>ChartOptions<span class="token punctuation">;</span>\n    barChartLegend<span class="token operator">:</span> boolean <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\n    barChartColors<span class="token operator">:</span> any<span class="token punctuation">;</span>\n\n    <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">colorService<span class="token operator">:</span> ColorService</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n\n        <span class="token comment">// Prepare colors used in chart</span>\n        <span class="token keyword">let</span> borderColor <span class="token operator">=</span> colorService<span class="token punctuation">.</span><span class="token function">getColor</span><span class="token punctuation">(</span><span class="token string">\'grey2\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setAlpha</span><span class="token punctuation">(</span><span class="token number">0.5</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toRgba</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">let</span> barBackgroundColor <span class="token operator">=</span> colorService<span class="token punctuation">.</span><span class="token function">getColor</span><span class="token punctuation">(</span><span class="token string">\'chart1\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setAlpha</span><span class="token punctuation">(</span><span class="token number">0.1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toRgba</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">let</span> barHoverBackgroundColor <span class="token operator">=</span> colorService<span class="token punctuation">.</span><span class="token function">getColor</span><span class="token punctuation">(</span><span class="token string">\'chart1\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setAlpha</span><span class="token punctuation">(</span><span class="token number">0.2</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toRgba</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">let</span> barBorderColor <span class="token operator">=</span> colorService<span class="token punctuation">.</span><span class="token function">getColor</span><span class="token punctuation">(</span><span class="token string">\'chart1\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toHex</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">let</span> tooltipBackgroundColor <span class="token operator">=</span> colorService<span class="token punctuation">.</span><span class="token function">getColor</span><span class="token punctuation">(</span><span class="token string">\'grey2\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toHex</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token keyword">this</span><span class="token punctuation">.</span>barChartOptions <span class="token operator">=</span> <span class="token punctuation">{</span>\n            maintainAspectRatio<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n            responsive<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n            scales<span class="token operator">:</span> <span class="token punctuation">{</span>\n                xAxes<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span>\n                    gridLines<span class="token operator">:</span> <span class="token punctuation">{</span>\n                        display<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n                        zeroLineColor<span class="token operator">:</span> borderColor<span class="token punctuation">,</span>\n                        color<span class="token operator">:</span> <span class="token string">\'transparent\'</span>\n                    <span class="token punctuation">}</span>\n                <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n                yAxes<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span>\n                    type<span class="token operator">:</span> <span class="token string">\'linear\'</span><span class="token punctuation">,</span>\n                    gridLines<span class="token operator">:</span> <span class="token punctuation">{</span>\n                        zeroLineColor<span class="token operator">:</span> borderColor\n                    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n                    ticks<span class="token operator">:</span> <span class="token punctuation">{</span>\n                        min<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>\n                        max<span class="token operator">:</span> <span class="token number">80</span><span class="token punctuation">,</span>\n                        stepSize<span class="token operator">:</span> <span class="token number">20</span>\n                    <span class="token punctuation">}</span> <span class="token keyword">as</span> Chart<span class="token punctuation">.</span>LinearTickOptions\n                <span class="token punctuation">}</span><span class="token punctuation">]</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            tooltips<span class="token operator">:</span> <span class="token punctuation">{</span>\n                backgroundColor<span class="token operator">:</span> tooltipBackgroundColor<span class="token punctuation">,</span>\n                cornerRadius<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>\n                callbacks<span class="token operator">:</span> <span class="token punctuation">{</span>\n                    <span class="token function-variable function">title</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">item<span class="token operator">:</span> Chart<span class="token punctuation">.</span>ChartTooltipItem<span class="token punctuation">[</span><span class="token punctuation">]</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n                        <span class="token keyword">return</span><span class="token punctuation">;</span>\n                    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n                    <span class="token function-variable function">label</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">item<span class="token operator">:</span> Chart<span class="token punctuation">.</span>ChartTooltipItem</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n                        <span class="token keyword">return</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">x: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>item<span class="token punctuation">.</span>xLabel<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">, y: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>item<span class="token punctuation">.</span>yLabel<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span>\n                    <span class="token punctuation">}</span>\n                <span class="token punctuation">}</span><span class="token punctuation">,</span>\n                displayColors<span class="token operator">:</span> <span class="token boolean">false</span>\n            <span class="token punctuation">}</span> <span class="token keyword">as</span> any\n        <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n        <span class="token keyword">this</span><span class="token punctuation">.</span>barChartColors <span class="token operator">=</span> <span class="token punctuation">[</span>\n            <span class="token punctuation">{</span>\n                backgroundColor<span class="token operator">:</span> barBackgroundColor<span class="token punctuation">,</span>\n                hoverBackgroundColor<span class="token operator">:</span> barHoverBackgroundColor<span class="token punctuation">,</span>\n                borderColor<span class="token operator">:</span> barBorderColor\n            <span class="token punctuation">}</span>\n        <span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n    <span class="token punctuation">}</span>\n\n    <span class="token function">ngAfterViewInit</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n\n        <span class="token comment">// get instance of the chart</span>\n        <span class="token keyword">let</span> chartInstance <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>baseChart<span class="token punctuation">.</span>chart<span class="token punctuation">;</span>\n\n        <span class="token comment">// create reference to Chart with type of any</span>\n        <span class="token keyword">let</span> chartJs <span class="token operator">=</span> Chart <span class="token keyword">as</span> any<span class="token punctuation">;</span>\n\n        <span class="token comment">// Added dashed borders to forecast data</span>\n        chartJs<span class="token punctuation">.</span>helpers<span class="token punctuation">.</span><span class="token function">each</span><span class="token punctuation">(</span>chartInstance<span class="token punctuation">.</span><span class="token function">getDatasetMeta</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span>data<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">bar<span class="token operator">:</span> any<span class="token punctuation">,</span> index<span class="token operator">:</span> number</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n\n            <span class="token comment">// only alter the bars that are forecast data</span>\n            <span class="token keyword">if</span> <span class="token punctuation">(</span>index <span class="token operator">>=</span> <span class="token number">6</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                bar<span class="token punctuation">.</span><span class="token function-variable function">draw</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                    chartInstance<span class="token punctuation">.</span>ctx<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n                    chartInstance<span class="token punctuation">.</span>ctx<span class="token punctuation">.</span><span class="token function">setLineDash</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n                    chartJs<span class="token punctuation">.</span>elements<span class="token punctuation">.</span><span class="token class-name">Rectangle</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">draw</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> arguments<span class="token punctuation">)</span><span class="token punctuation">;</span>\n                    chartInstance<span class="token punctuation">.</span>ctx<span class="token punctuation">.</span><span class="token function">restore</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n                <span class="token punctuation">}</span><span class="token punctuation">;</span>\n            <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n<span class="token punctuation">}</span>',example:"import { AfterViewInit, Component, ViewChild } from '@angular/core';\nimport { ColorService } from '@ux-aspects/ux-aspects';\nimport { Chart } from 'chart.js';\nimport { BaseChartDirective } from 'ng2-charts';\n\n@Component({\n    selector: 'app',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements AfterViewInit {\n\n    // access the chart directive properties\n    @ViewChild(BaseChartDirective) baseChart: BaseChartDirective;\n\n    // configure the directive data\n    barChartData: Chart.ChartDataSets[] = [{\n        data: [34, 25, 19, 34, 32, 44, 50, 67],\n        borderWidth: 1,\n        barPercentage: 0.5,\n        categoryPercentage: 1\n    }];\n\n    barChartLabels: string[] = ['.doc', '.ppt', '.pdf', '.xls', '.html', '.txt', '.csv', '.mht'];\n    barChartOptions: Chart.ChartOptions;\n    barChartLegend: boolean = false;\n    barChartColors: any;\n\n    constructor(colorService: ColorService) {\n\n        // Prepare colors used in chart\n        let borderColor = colorService.getColor('grey2').setAlpha(0.5).toRgba();\n        let barBackgroundColor = colorService.getColor('chart1').setAlpha(0.1).toRgba();\n        let barHoverBackgroundColor = colorService.getColor('chart1').setAlpha(0.2).toRgba();\n        let barBorderColor = colorService.getColor('chart1').toHex();\n        let tooltipBackgroundColor = colorService.getColor('grey2').toHex();\n\n        this.barChartOptions = {\n            maintainAspectRatio: false,\n            responsive: true,\n            scales: {\n                xAxes: [{\n                    gridLines: {\n                        display: true,\n                        zeroLineColor: borderColor,\n                        color: 'transparent'\n                    }\n                }],\n                yAxes: [{\n                    type: 'linear',\n                    gridLines: {\n                        zeroLineColor: borderColor\n                    },\n                    ticks: {\n                        min: 0,\n                        max: 80,\n                        stepSize: 20\n                    } as Chart.LinearTickOptions\n                }]\n            },\n            tooltips: {\n                backgroundColor: tooltipBackgroundColor,\n                cornerRadius: 0,\n                callbacks: {\n                    title: (item: Chart.ChartTooltipItem[]) => {\n                        return;\n                    },\n                    label: (item: Chart.ChartTooltipItem) => {\n                        return `x: ${item.xLabel}, y: ${item.yLabel}`;\n                    }\n                },\n                displayColors: false\n            } as any\n        };\n\n        this.barChartColors = [\n            {\n                backgroundColor: barBackgroundColor,\n                hoverBackgroundColor: barHoverBackgroundColor,\n                borderColor: barBorderColor\n            }\n        ];\n\n    }\n\n    ngAfterViewInit() {\n\n        // get instance of the chart\n        let chartInstance = this.baseChart.chart;\n\n        // create reference to Chart with type of any\n        let chartJs = Chart as any;\n\n        // Added dashed borders to forecast data\n        chartJs.helpers.each(chartInstance.getDatasetMeta(0).data, (bar: any, index: number) => {\n\n            // only alter the bars that are forecast data\n            if (index >= 6) {\n                bar.draw = function () {\n                    chartInstance.ctx.save();\n                    chartInstance.ctx.setLineDash([2, 2]);\n                    chartJs.elements.Rectangle.prototype.draw.apply(this, arguments);\n                    chartInstance.ctx.restore();\n                };\n            }\n        });\n    }\n\n}"}},zUtt:function(n,a){n.exports={snippet:'<span class="token selector">.demo-chart-container</span> <span class="token punctuation">{</span>\n    <span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">;</span>\n    <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>\n    <span class="token property">height</span><span class="token punctuation">:</span> 200px<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>',example:".demo-chart-container {\n    display: block;\n    position: relative;\n    height: 200px;\n}"}}}]);
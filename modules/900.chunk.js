(self.webpackChunk_ux_aspects_ux_aspects_docs=self.webpackChunk_ux_aspects_ux_aspects_docs||[]).push([[900],{73752:function(n){n.exports={snippet:'<span class="token selector">.demo-chart-container</span> <span class="token punctuation">{</span>\n    <span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">;</span>\n    <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>\n    <span class="token property">height</span><span class="token punctuation">:</span> 200px<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>',example:".demo-chart-container {\n    display: block;\n    position: relative;\n    height: 200px;\n}"}},88087:function(n){n.exports={snippet:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>demo-chart-container<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>canvas</span> <span class="token attr-name">baseChart</span> \n            <span class="token attr-name">[datasets]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>lineChartData<span class="token punctuation">"</span></span>\n            <span class="token attr-name">[options]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>lineChartOptions<span class="token punctuation">"</span></span>\n            <span class="token attr-name">[legend]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>lineChartLegend<span class="token punctuation">"</span></span>\n            <span class="token attr-name">[colors]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>lineChartColors<span class="token punctuation">"</span></span>\n            <span class="token attr-name">chartType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>line<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>canvas</span><span class="token punctuation">></span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>',example:'<div class="demo-chart-container">\n\n    <canvas baseChart \n            [datasets]="lineChartData"\n            [options]="lineChartOptions"\n            [legend]="lineChartLegend"\n            [colors]="lineChartColors"\n            chartType="line">\n    </canvas>\n\n</div>'}},90066:function(n){n.exports={snippet:'<span class="token keyword">import</span> <span class="token punctuation">{</span> Component<span class="token punctuation">,</span> ViewChild <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@angular/core\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> ColorService <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@ux-aspects/ux-aspects\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> BaseChartDirective <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'ng2-charts\'</span><span class="token punctuation">;</span>\n\n@<span class="token function">Component</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    selector<span class="token operator">:</span> <span class="token string">\'app\'</span><span class="token punctuation">,</span>\n    templateUrl<span class="token operator">:</span> <span class="token string">\'./app.component.html\'</span><span class="token punctuation">,</span>\n    styleUrls<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">\'./app.component.css\'</span><span class="token punctuation">]</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">AppComponent</span> <span class="token punctuation">{</span>\n\n    <span class="token comment">// access the chart directive properties</span>\n    @<span class="token function">ViewChild</span><span class="token punctuation">(</span>BaseChartDirective<span class="token punctuation">)</span> baseChart<span class="token operator">:</span> BaseChartDirective<span class="token punctuation">;</span>\n\n    <span class="token comment">// configure the directive data</span>\n    lineChartData<span class="token operator">:</span> Chart<span class="token punctuation">.</span>ChartDataSets<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n    lineChartOptions<span class="token operator">:</span> Chart<span class="token punctuation">.</span>ChartOptions<span class="token punctuation">;</span>\n    lineChartLegend<span class="token operator">:</span> boolean <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\n    lineChartColors<span class="token operator">:</span> any<span class="token punctuation">;</span>\n\n    livedata<span class="token operator">:</span> number<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n    <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">colorService<span class="token operator">:</span> ColorService</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n\n        <span class="token keyword">let</span> gridColor <span class="token operator">=</span> colorService<span class="token punctuation">.</span><span class="token function">getColor</span><span class="token punctuation">(</span><span class="token string">\'grey6\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toHex</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">let</span> lineBorderColor <span class="token operator">=</span> colorService<span class="token punctuation">.</span><span class="token function">getColor</span><span class="token punctuation">(</span><span class="token string">\'chart1\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toRgb</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">let</span> lineFillColor <span class="token operator">=</span> colorService<span class="token punctuation">.</span><span class="token function">getColor</span><span class="token punctuation">(</span><span class="token string">\'chart1\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setAlpha</span><span class="token punctuation">(</span><span class="token number">0.1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toRgba</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token comment">// set the initial chart data</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">updateChartData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token keyword">this</span><span class="token punctuation">.</span>lineChartOptions <span class="token operator">=</span> <span class="token punctuation">{</span>\n            maintainAspectRatio<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n            responsive<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n            animation<span class="token operator">:</span> <span class="token punctuation">{</span>\n                duration<span class="token operator">:</span> <span class="token number">0</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            elements<span class="token operator">:</span> <span class="token punctuation">{</span>\n                line<span class="token operator">:</span> <span class="token punctuation">{</span>\n                    tension<span class="token operator">:</span> <span class="token number">0</span>\n                <span class="token punctuation">}</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            scales<span class="token operator">:</span> <span class="token punctuation">{</span>\n                xAxes<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span>\n                    type<span class="token operator">:</span> <span class="token string">\'linear\'</span><span class="token punctuation">,</span>\n                    position<span class="token operator">:</span> <span class="token string">\'bottom\'</span><span class="token punctuation">,</span>\n                    ticks<span class="token operator">:</span> <span class="token punctuation">{</span>\n                        min<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>\n                        max<span class="token operator">:</span> <span class="token number">299</span><span class="token punctuation">,</span>\n                        step<span class="token operator">:</span> <span class="token number">50</span><span class="token punctuation">,</span>\n                        fontSize<span class="token operator">:</span> <span class="token number">0</span> <span class="token comment">/* Hide Labels on X Axis */</span>\n                    <span class="token punctuation">}</span> <span class="token keyword">as</span> Chart<span class="token punctuation">.</span>LinearTickOptions<span class="token punctuation">,</span>\n                    gridLines<span class="token operator">:</span> <span class="token punctuation">{</span>\n                        color<span class="token operator">:</span> gridColor\n                    <span class="token punctuation">}</span>\n                <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n                yAxes<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span>\n                    ticks<span class="token operator">:</span> <span class="token punctuation">{</span>\n                        min<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>\n                        max<span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span>\n                        stepSize<span class="token operator">:</span> <span class="token number">25</span>\n                    <span class="token punctuation">}</span> <span class="token keyword">as</span> Chart<span class="token punctuation">.</span>LinearTickOptions<span class="token punctuation">,</span>\n                    gridLines<span class="token operator">:</span> <span class="token punctuation">{</span>\n                        color<span class="token operator">:</span> gridColor\n                    <span class="token punctuation">}</span>\n                <span class="token punctuation">}</span><span class="token punctuation">]</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            tooltips<span class="token operator">:</span> <span class="token punctuation">{</span>\n                enabled<span class="token operator">:</span> <span class="token boolean">false</span>\n            <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n        <span class="token keyword">this</span><span class="token punctuation">.</span>lineChartColors <span class="token operator">=</span> <span class="token punctuation">[</span>\n            <span class="token punctuation">{</span>\n                borderColor<span class="token operator">:</span> lineBorderColor<span class="token punctuation">,</span>\n                backgroundColor<span class="token operator">:</span> lineFillColor<span class="token punctuation">,</span>\n                pointBackgroundColor<span class="token operator">:</span> <span class="token string">\'transparent\'</span><span class="token punctuation">,</span>\n                pointBorderColor<span class="token operator">:</span> <span class="token string">\'transparent\'</span>\n            <span class="token punctuation">}</span>\n        <span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n        <span class="token function">setInterval</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n            <span class="token comment">// update chart data every 40ms</span>\n            <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">updateChartData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">40</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token function">updateChartData</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n\n        <span class="token comment">// instatiate new array to trigger change detection</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>lineChartData <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token operator">&lt;</span>Chart<span class="token punctuation">.</span>ChartDataSets<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token keyword">this</span><span class="token punctuation">.</span>lineChartData<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n            data<span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getRandomData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n            borderWidth<span class="token operator">:</span> <span class="token number">1</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token function">getRandomData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token punctuation">{</span> x<span class="token operator">:</span> number<span class="token punctuation">,</span> y<span class="token operator">:</span> number <span class="token punctuation">}</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">{</span>\n\n        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>livedata<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token keyword">this</span><span class="token punctuation">.</span>livedata <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>livedata<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n\n        <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>livedata<span class="token punctuation">.</span>length <span class="token operator">&lt;</span> <span class="token number">300</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token keyword">let</span> previous <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>livedata<span class="token punctuation">.</span>length <span class="token operator">?</span> <span class="token keyword">this</span><span class="token punctuation">.</span>livedata<span class="token punctuation">[</span><span class="token keyword">this</span><span class="token punctuation">.</span>livedata<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">:</span> <span class="token number">50</span><span class="token punctuation">;</span>\n            <span class="token keyword">let</span> y <span class="token operator">=</span> previous <span class="token operator">+</span> Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">10</span> <span class="token operator">-</span> <span class="token number">5</span><span class="token punctuation">;</span>\n\n            <span class="token keyword">this</span><span class="token punctuation">.</span>livedata<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>y <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token operator">?</span> <span class="token number">0</span> <span class="token operator">:</span> y <span class="token operator">></span> <span class="token number">100</span> <span class="token operator">?</span> <span class="token number">100</span> <span class="token operator">:</span> y<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n\n        <span class="token comment">// zip the generated y values with the x values</span>\n        <span class="token keyword">let</span> res <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>livedata<span class="token punctuation">.</span>length<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            res<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n                x<span class="token operator">:</span> i<span class="token punctuation">,</span>\n                y<span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>livedata<span class="token punctuation">[</span>i<span class="token punctuation">]</span>\n            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n\n        <span class="token keyword">return</span> res<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n<span class="token punctuation">}</span>',example:"import { Component, ViewChild } from '@angular/core';\nimport { ColorService } from '@ux-aspects/ux-aspects';\nimport { BaseChartDirective } from 'ng2-charts';\n\n@Component({\n    selector: 'app',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n    // access the chart directive properties\n    @ViewChild(BaseChartDirective) baseChart: BaseChartDirective;\n\n    // configure the directive data\n    lineChartData: Chart.ChartDataSets[];\n    lineChartOptions: Chart.ChartOptions;\n    lineChartLegend: boolean = false;\n    lineChartColors: any;\n\n    livedata: number[] = [];\n\n    constructor(colorService: ColorService) {\n\n        let gridColor = colorService.getColor('grey6').toHex();\n        let lineBorderColor = colorService.getColor('chart1').toRgb();\n        let lineFillColor = colorService.getColor('chart1').setAlpha(0.1).toRgba();\n\n        // set the initial chart data\n        this.updateChartData();\n\n        this.lineChartOptions = {\n            maintainAspectRatio: false,\n            responsive: true,\n            animation: {\n                duration: 0\n            },\n            elements: {\n                line: {\n                    tension: 0\n                }\n            },\n            scales: {\n                xAxes: [{\n                    type: 'linear',\n                    position: 'bottom',\n                    ticks: {\n                        min: 0,\n                        max: 299,\n                        step: 50,\n                        fontSize: 0 /* Hide Labels on X Axis */\n                    } as Chart.LinearTickOptions,\n                    gridLines: {\n                        color: gridColor\n                    }\n                }],\n                yAxes: [{\n                    ticks: {\n                        min: 0,\n                        max: 100,\n                        stepSize: 25\n                    } as Chart.LinearTickOptions,\n                    gridLines: {\n                        color: gridColor\n                    }\n                }]\n            },\n            tooltips: {\n                enabled: false\n            }\n        };\n\n        this.lineChartColors = [\n            {\n                borderColor: lineBorderColor,\n                backgroundColor: lineFillColor,\n                pointBackgroundColor: 'transparent',\n                pointBorderColor: 'transparent'\n            }\n        ];\n\n        setInterval(() => {\n            // update chart data every 40ms\n            this.updateChartData();\n        }, 40);\n    }\n\n    updateChartData() {\n\n        // instatiate new array to trigger change detection\n        this.lineChartData = new Array<Chart.ChartDataSets>();\n\n        this.lineChartData.push({\n            data: this.getRandomData(),\n            borderWidth: 1\n        });\n    }\n\n    getRandomData(): { x: number, y: number }[] {\n\n        if (this.livedata.length) {\n            this.livedata = this.livedata.slice(1);\n        }\n\n        while (this.livedata.length < 300) {\n            let previous = this.livedata.length ? this.livedata[this.livedata.length - 1] : 50;\n            let y = previous + Math.random() * 10 - 5;\n\n            this.livedata.push(y < 0 ? 0 : y > 100 ? 100 : y);\n        }\n\n        // zip the generated y values with the x values\n        let res = [];\n        for (let i = 0; i < this.livedata.length; ++i) {\n            res.push({\n                x: i,\n                y: this.livedata[i]\n            });\n        }\n\n        return res;\n    }\n\n}"}},79408:function(n,a,t){var s={"./live-chart.css":73752,"./live-chart.html":88087,"./live-chart.ts":90066};function e(n){var a=p(n);return t(a)}function p(n){if(!t.o(s,n)){var a=new Error("Cannot find module '"+n+"'");throw a.code="MODULE_NOT_FOUND",a}return s[n]}e.keys=function(){return Object.keys(s)},e.resolve=p,n.exports=e,e.id=79408},13378:function(n,a,t){"use strict";t.r(a),t.d(a,{ChartsLiveChartsModule:function(){return g}});var s,e=t(94121),p=t(3955),o=t(68594),c=t(26966),l=t(95892),r=t(36941),i=t(86093),u=t(62536),k=t(29872),d=t(95490),h=t(70734),m=t(95445),C=(s=function(n,a){return(s=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,a){n.__proto__=a}||function(n,a){for(var t in a)Object.prototype.hasOwnProperty.call(a,t)&&(n[t]=a[t])})(n,a)},function(n,a){if("function"!=typeof a&&null!==a)throw new TypeError("Class extends value "+String(a)+" is not a constructor or null");function t(){this.constructor=n}s(n,a),n.prototype=null===a?Object.create(a):(t.prototype=a.prototype,new t)}),x=function(n,a){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(n,a)},v=[function(n){function a(a){var s=n.call(this,t(79408))||this;s.playground={files:{"app.component.ts":s.snippets.raw.liveChartTs,"app.component.html":s.snippets.raw.liveChartHtml,"app.component.css":s.snippets.raw.liveChartCss},modules:[{library:"chart.js"},{imports:["ChartsModule"],library:"ng2-charts"},{imports:["ColorServiceModule"],library:"@ux-aspects/ux-aspects"}]},s.lineChartLegend=!1,s.livedata=[];var e=a.getColor("grey6").toHex(),p=a.getColor("chart1").toRgb(),o=a.getColor("chart1").setAlpha(.1).toRgba();return s.updateChartData(),s.lineChartOptions={maintainAspectRatio:!1,responsive:!0,animation:{duration:0},elements:{line:{tension:0}},scales:{xAxes:[{type:"linear",position:"bottom",ticks:{min:0,max:299,step:50,fontSize:0},gridLines:{color:e}}],yAxes:[{ticks:{min:0,max:100,stepSize:25},gridLines:{color:e}}]},tooltips:{enabled:!1}},s.lineChartColors=[{borderColor:p,backgroundColor:o,pointBackgroundColor:"transparent",pointBorderColor:"transparent"}],setInterval((function(){s.updateChartData()}),40),s}return C(a,n),a.prototype.updateChartData=function(){this.lineChartData=new Array,this.lineChartData.push({data:this.getRandomData(),borderWidth:1})},a.prototype.getRandomData=function(){for(this.livedata.length&&(this.livedata=this.livedata.slice(1));this.livedata.length<300;){var n=(this.livedata.length?this.livedata[this.livedata.length-1]:50)+10*Math.random()-5;this.livedata.push(n<0?0:n>100?100:n)}for(var a=[],t=0;t<this.livedata.length;++t)a.push({x:t,y:this.livedata[t]});return a},a.\u0275fac=function(n){return new(n||a)(k["\u0275\u0275directiveInject"](p.ColorService))},a.\u0275cmp=k["\u0275\u0275defineComponent"]({type:a,selectors:[["uxd-charts-live-chart"]],viewQuery:function(n,a){var t;1&n&&k["\u0275\u0275viewQuery"](o.BaseChartDirective,7),2&n&&k["\u0275\u0275queryRefresh"](t=k["\u0275\u0275loadQuery"]())&&(a.baseChart=t.first)},features:[k["\u0275\u0275InheritDefinitionFeature"]],decls:146,vars:8,consts:[[1,"demo-chart-container"],["baseChart","","chartType","line",3,"datasets","options","legend","colors"],["tableTitle","Inputs"],["uxd-api-property","","name","dataSets","type","object[]"],["uxd-api-property","","name","chartType","type","string"],["uxd-api-property","","name","options","type","ChartOptions"],["uxd-api-property","","name","colors","type","object[]"],["uxd-api-property","","name","legend","type","boolean"],["tableTitle","Outputs"],["uxd-api-property","","name","chartClick"],["uxd-api-property","","name","chartHover"],[3,"minimal"],["heading","HTML"],["language","html",3,"content"],["heading","TypeScript"],["language","javascript",3,"content"],["heading","CSS"],["language","css",3,"content"],[1,"m-b-nil"],["href","https://www.npmjs.com/package/ng2-charts",1,"hyperlink"],["href","https://www.npmjs.com/package/chart.js",1,"hyperlink"],["href","https://www.npmjs.com/package/@types/chart.js",1,"hyperlink"],["href","http://valor-software.com/ng2-charts/",1,"hyperlink"],["href","http://www.chartjs.org/docs/",1,"hyperlink"]],template:function(n,a){1&n&&(k["\u0275\u0275elementStart"](0,"div",0),k["\u0275\u0275text"](1,"\n\n    "),k["\u0275\u0275elementStart"](2,"canvas",1),k["\u0275\u0275text"](3,"\n    "),k["\u0275\u0275elementEnd"](),k["\u0275\u0275text"](4,"\n\n"),k["\u0275\u0275elementEnd"](),k["\u0275\u0275text"](5,"\n\n"),k["\u0275\u0275element"](6,"hr"),k["\u0275\u0275text"](7,"\n\n"),k["\u0275\u0275elementStart"](8,"p"),k["\u0275\u0275text"](9,"\n    Live Charts can be added using the "),k["\u0275\u0275elementStart"](10,"code"),k["\u0275\u0275text"](11,"ng2-charts"),k["\u0275\u0275elementEnd"](),k["\u0275\u0275text"](12," library. \n    The "),k["\u0275\u0275elementStart"](13,"code"),k["\u0275\u0275text"](14,"chart.js"),k["\u0275\u0275elementEnd"](),k["\u0275\u0275text"](15," library needs to be imported and the "),k["\u0275\u0275elementStart"](16,"code"),k["\u0275\u0275text"](17,"ChartsModule"),k["\u0275\u0275elementEnd"](),k["\u0275\u0275text"](18," needs to be added to the appropriate NgModule.\n"),k["\u0275\u0275elementEnd"](),k["\u0275\u0275text"](19,"\n\n"),k["\u0275\u0275element"](20,"br"),k["\u0275\u0275text"](21,"\n\n"),k["\u0275\u0275elementStart"](22,"p"),k["\u0275\u0275text"](23,"The "),k["\u0275\u0275elementStart"](24,"code"),k["\u0275\u0275text"](25,"baseChart"),k["\u0275\u0275elementEnd"](),k["\u0275\u0275text"](26," directive should be added to a "),k["\u0275\u0275elementStart"](27,"code"),k["\u0275\u0275text"](28,"canvas"),k["\u0275\u0275elementEnd"](),k["\u0275\u0275text"](29," element and the following attributes can be used to customize the chart behavior and appearance:"),k["\u0275\u0275elementEnd"](),k["\u0275\u0275text"](30,"\n\n"),k["\u0275\u0275elementStart"](31,"uxd-api-properties",2),k["\u0275\u0275text"](32,"\n    "),k["\u0275\u0275elementStart"](33,"tr",3),k["\u0275\u0275text"](34,"\n        Contains the data and properties for each data set to be displayed in the chart.\n    "),k["\u0275\u0275elementEnd"](),k["\u0275\u0275text"](35,"\n    "),k["\u0275\u0275elementStart"](36,"tr",4),k["\u0275\u0275text"](37,"\n        Indicates the type of the chart. Possible options are: "),k["\u0275\u0275elementStart"](38,"code"),k["\u0275\u0275text"](39,"line"),k["\u0275\u0275elementEnd"](),k["\u0275\u0275text"](40,", "),k["\u0275\u0275elementStart"](41,"code"),k["\u0275\u0275text"](42,"bar"),k["\u0275\u0275elementEnd"](),k["\u0275\u0275text"](43,", "),k["\u0275\u0275elementStart"](44,"code"),k["\u0275\u0275text"](45,"radar"),k["\u0275\u0275elementEnd"](),k["\u0275\u0275text"](46,", "),k["\u0275\u0275elementStart"](47,"code"),k["\u0275\u0275text"](48,"pie"),k["\u0275\u0275elementEnd"](),k["\u0275\u0275text"](49,", "),k["\u0275\u0275elementStart"](50,"code"),k["\u0275\u0275text"](51,"polarArea"),k["\u0275\u0275elementEnd"](),k["\u0275\u0275text"](52,", "),k["\u0275\u0275elementStart"](53,"code"),k["\u0275\u0275text"](54,"doughnut"),k["\u0275\u0275elementEnd"](),k["\u0275\u0275text"](55,"\n    "),k["\u0275\u0275elementEnd"](),k["\u0275\u0275text"](56,"\n    "),k["\u0275\u0275elementStart"](57,"tr",5),k["\u0275\u0275text"](58,"\n        Configures the appearance and behavior of all aspects of the chart.\n    "),k["\u0275\u0275elementEnd"](),k["\u0275\u0275text"](59,"\n    "),k["\u0275\u0275elementStart"](60,"tr",6),k["\u0275\u0275text"](61,"\n        Configure the color values to be used within the chart.\n    "),k["\u0275\u0275elementEnd"](),k["\u0275\u0275text"](62,"\n    "),k["\u0275\u0275elementStart"](63,"tr",7),k["\u0275\u0275text"](64,"\n        Determines whether or not the legend should be displayed.\n    "),k["\u0275\u0275elementEnd"](),k["\u0275\u0275text"](65,"\n"),k["\u0275\u0275elementEnd"](),k["\u0275\u0275text"](66,"\n\n"),k["\u0275\u0275elementStart"](67,"uxd-api-properties",8),k["\u0275\u0275text"](68,"\n    "),k["\u0275\u0275elementStart"](69,"tr",9),k["\u0275\u0275text"](70,"\n        Fires when click on a chart has occurred, returns information regarding active points and labels.\n    "),k["\u0275\u0275elementEnd"](),k["\u0275\u0275text"](71,"\n    "),k["\u0275\u0275elementStart"](72,"tr",10),k["\u0275\u0275text"](73,"\n        Fires when mousemove (hover) on a chart has occurred, returns information regarding active points and labels.\n    "),k["\u0275\u0275elementEnd"](),k["\u0275\u0275text"](74,"\n"),k["\u0275\u0275elementEnd"](),k["\u0275\u0275text"](75,"\n\n"),k["\u0275\u0275elementStart"](76,"p"),k["\u0275\u0275text"](77,"Complete documentation on the directive and chart options can be found at the documentation links below."),k["\u0275\u0275elementEnd"](),k["\u0275\u0275text"](78,"\n\n"),k["\u0275\u0275elementStart"](79,"p"),k["\u0275\u0275text"](80,"The following code can be used to create the example above: "),k["\u0275\u0275elementEnd"](),k["\u0275\u0275text"](81,"\n\n"),k["\u0275\u0275elementStart"](82,"ux-tabset",11),k["\u0275\u0275text"](83,"\n\n    "),k["\u0275\u0275elementStart"](84,"ux-tab",12),k["\u0275\u0275text"](85,"\n        "),k["\u0275\u0275element"](86,"uxd-snippet",13),k["\u0275\u0275text"](87,"\n    "),k["\u0275\u0275elementEnd"](),k["\u0275\u0275text"](88,"\n\n    "),k["\u0275\u0275elementStart"](89,"ux-tab",14),k["\u0275\u0275text"](90,"\n        "),k["\u0275\u0275element"](91,"uxd-snippet",15),k["\u0275\u0275text"](92,"\n    "),k["\u0275\u0275elementEnd"](),k["\u0275\u0275text"](93,"\n\n    "),k["\u0275\u0275elementStart"](94,"ux-tab",16),k["\u0275\u0275text"](95,"\n        "),k["\u0275\u0275element"](96,"uxd-snippet",17),k["\u0275\u0275text"](97,"\n    "),k["\u0275\u0275elementEnd"](),k["\u0275\u0275text"](98,"\n\n"),k["\u0275\u0275elementEnd"](),k["\u0275\u0275text"](99,"\n\n"),k["\u0275\u0275element"](100,"br"),k["\u0275\u0275text"](101,"\n\n"),k["\u0275\u0275elementStart"](102,"blockquote"),k["\u0275\u0275text"](103,"\n\n    "),k["\u0275\u0275elementStart"](104,"p",18),k["\u0275\u0275text"](105,"\n        "),k["\u0275\u0275elementStart"](106,"b"),k["\u0275\u0275text"](107,"Dependencies: "),k["\u0275\u0275elementEnd"](),k["\u0275\u0275text"](108,"\n        "),k["\u0275\u0275elementStart"](109,"a",19),k["\u0275\u0275text"](110,"ng2-charts"),k["\u0275\u0275elementEnd"](),k["\u0275\u0275text"](111,", \n        "),k["\u0275\u0275elementStart"](112,"a",20),k["\u0275\u0275text"](113,"chart.js"),k["\u0275\u0275elementEnd"](),k["\u0275\u0275text"](114,"\n    "),k["\u0275\u0275elementEnd"](),k["\u0275\u0275text"](115,"\n\n    "),k["\u0275\u0275elementStart"](116,"p",18),k["\u0275\u0275text"](117,"\n        "),k["\u0275\u0275elementStart"](118,"b"),k["\u0275\u0275text"](119,"Type Definitions: "),k["\u0275\u0275elementEnd"](),k["\u0275\u0275text"](120,"\n        "),k["\u0275\u0275elementStart"](121,"a",21),k["\u0275\u0275text"](122,"@types/chart.js"),k["\u0275\u0275elementEnd"](),k["\u0275\u0275text"](123,"\n    "),k["\u0275\u0275elementEnd"](),k["\u0275\u0275text"](124,"\n\n    "),k["\u0275\u0275elementStart"](125,"p",18),k["\u0275\u0275text"](126,"\n        "),k["\u0275\u0275elementStart"](127,"b"),k["\u0275\u0275text"](128,"Modules: "),k["\u0275\u0275elementEnd"](),k["\u0275\u0275text"](129,"\n        "),k["\u0275\u0275elementStart"](130,"span"),k["\u0275\u0275text"](131,"ChartsModule"),k["\u0275\u0275elementEnd"](),k["\u0275\u0275text"](132,"\n    "),k["\u0275\u0275elementEnd"](),k["\u0275\u0275text"](133,"\n\n\n    "),k["\u0275\u0275elementStart"](134,"p",18),k["\u0275\u0275text"](135,"\n        "),k["\u0275\u0275elementStart"](136,"b"),k["\u0275\u0275text"](137,"Documentation: "),k["\u0275\u0275elementEnd"](),k["\u0275\u0275text"](138,"\n        "),k["\u0275\u0275elementStart"](139,"a",22),k["\u0275\u0275text"](140,"Angular Directive Documentation"),k["\u0275\u0275elementEnd"](),k["\u0275\u0275text"](141,", \n        "),k["\u0275\u0275elementStart"](142,"a",23),k["\u0275\u0275text"](143,"Chart Library Documentation"),k["\u0275\u0275elementEnd"](),k["\u0275\u0275text"](144,"\n    "),k["\u0275\u0275elementEnd"](),k["\u0275\u0275text"](145,"\n"),k["\u0275\u0275elementEnd"]()),2&n&&(k["\u0275\u0275advance"](2),k["\u0275\u0275property"]("datasets",a.lineChartData)("options",a.lineChartOptions)("legend",a.lineChartLegend)("colors",a.lineChartColors),k["\u0275\u0275advance"](80),k["\u0275\u0275property"]("minimal",!1),k["\u0275\u0275advance"](4),k["\u0275\u0275property"]("content",a.snippets.compiled.liveChartHtml),k["\u0275\u0275advance"](5),k["\u0275\u0275property"]("content",a.snippets.compiled.liveChartTs),k["\u0275\u0275advance"](5),k["\u0275\u0275property"]("content",a.snippets.compiled.liveChartCss))},directives:[o.BaseChartDirective,d.$,h.S,p.TabsetComponent,p.TabComponent,m.j,p.DefaultFocusIndicatorDirective],encapsulation:2}),a=function(n,a,t,s){var e,p=arguments.length,o=p<3?a:null===s?s=Object.getOwnPropertyDescriptor(a,t):s;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(n,a,t,s);else for(var c=n.length-1;c>=0;c--)(e=n[c])&&(o=(p<3?e(o):p>3?e(a,t,o):e(a,t))||o);return p>3&&o&&Object.defineProperty(a,t,o),o}([(0,u.cG)("ChartsLiveChartComponent"),x("design:paramtypes",[p.ColorService])],a)}(i.u)],y=[{path:"**",component:l.R,data:{category:r.N.resolveCategoryData(r.I.Charts,"Live Chart")}}],g=function(){function n(n,a){a.registerResolver(n,v)}return n.\u0275fac=function(a){return new(a||n)(k["\u0275\u0275inject"](k.ComponentFactoryResolver),k["\u0275\u0275inject"](r.N))},n.\u0275mod=k["\u0275\u0275defineNgModule"]({type:n}),n.\u0275inj=k["\u0275\u0275defineInjector"]({imports:[[o.ChartsModule,p.ColorServiceModule,c.N,e.RouterModule.forChild(y),p.TabsetModule]]}),n}()}}]);
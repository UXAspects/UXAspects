webpackJsonp([32],{1600:function(e,n,t){"use strict";var a=this&&this.__decorate||function(e,n,t,a){var i,o=arguments.length,s=o<3?n:null===a?a=Object.getOwnPropertyDescriptor(n,t):a;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,n,t,a);else for(var l=e.length-1;l>=0;l--)(i=e[l])&&(s=(o<3?i(s):o>3?i(n,t,s):i(n,t))||s);return o>3&&s&&Object.defineProperty(n,t,s),s};Object.defineProperty(n,"__esModule",{value:!0});var i=t(1),o=t(218),s=function(){function e(){this.htmlCode=t(2391),this.popoverCode=t(2390),this.codepenSnippet=t(1921),this.cssCode=t(2392),this.codepen={html:this.codepenSnippet,htmlTemplates:[{id:"app_navigator_popover.tmpl.html",content:this.popoverCode}],css:[this.cssCode]}}return e}();s=a([i.Component({selector:"uxd-components-side-navigation-app-navigator",template:t(1920)}),o.DocumentationSectionComponent("ComponentsAppNavigatorComponent")],s),n.ComponentsAppNavigatorComponent=s},1601:function(e,n,t){"use strict";var a=this&&this.__decorate||function(e,n,t,a){var i,o=arguments.length,s=o<3?n:null===a?a=Object.getOwnPropertyDescriptor(n,t):a;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,n,t,a);else for(var l=e.length-1;l>=0;l--)(i=e[l])&&(s=(o<3?i(s):o>3?i(n,t,s):i(n,t))||s);return o>3&&s&&Object.defineProperty(n,t,s),s};Object.defineProperty(n,"__esModule",{value:!0});var i=t(1),o=t(218),s=function(){function e(){this.htmlCode=t(2393)}return e}();s=a([i.Component({selector:"uxd-components-side-navigation-menu-button",template:t(1922)}),o.DocumentationSectionComponent("ComponentsMenuButtonComponent")],s),n.ComponentsMenuButtonComponent=s},1602:function(e,n,t){"use strict";var a=this&&this.__decorate||function(e,n,t,a){var i,o=arguments.length,s=o<3?n:null===a?a=Object.getOwnPropertyDescriptor(n,t):a;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,n,t,a);else for(var l=e.length-1;l>=0;l--)(i=e[l])&&(s=(o<3?i(s):o>3?i(n,t,s):i(n,t))||s);return o>3&&s&&Object.defineProperty(n,t,s),s};Object.defineProperty(n,"__esModule",{value:!0});var i=t(1),o=t(218),s=function(){function e(){this.controllerJs=t(2394),this.codepen={html:t(2395),css:[t(2396)],js:[this.controllerJs]}}return e}();s=a([i.Component({selector:"uxd-components-side-navigation-navigation-menu-service-ng1",template:t(1923)}),o.DocumentationSectionComponent("ComponentsNavigationMenuServiceNg1Component")],s),n.ComponentsNavigationMenuServiceNg1Component=s},1603:function(e,n,t){"use strict";var a=this&&this.__decorate||function(e,n,t,a){var i,o=arguments.length,s=o<3?n:null===a?a=Object.getOwnPropertyDescriptor(n,t):a;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,n,t,a);else for(var l=e.length-1;l>=0;l--)(i=e[l])&&(s=(o<3?i(s):o>3?i(n,t,s):i(n,t))||s);return o>3&&s&&Object.defineProperty(n,t,s),s};Object.defineProperty(n,"__esModule",{value:!0});var i=t(1),o=t(218),s=function(){function e(){this.htmlCode=t(2398),this.jsCode=t(2399),this.noteCode=t(2397),this.codepen={html:this.htmlCode,js:[this.jsCode]}}return e}();s=a([i.Component({selector:"uxd-components-side-navigation-navigation",template:t(1924)}),o.DocumentationSectionComponent("ComponentsNavigationComponent")],s),n.ComponentsNavigationComponent=s},1604:function(e,n,t){"use strict";var a=this&&this.__decorate||function(e,n,t,a){var i,o=arguments.length,s=o<3?n:null===a?a=Object.getOwnPropertyDescriptor(n,t):a;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,n,t,a);else for(var l=e.length-1;l>=0;l--)(i=e[l])&&(s=(o<3?i(s):o>3?i(n,t,s):i(n,t))||s);return o>3&&s&&Object.defineProperty(n,t,s),s},i=this&&this.__metadata||function(e,n){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,n)};Object.defineProperty(n,"__esModule",{value:!0});var o=t(1),s=t(19),l=t(219),c=t(119),r=t(220),d=t(1603),p=t(1600),v=t(1601),u=t(1602),h=t(221),m=t(222),g=[d.ComponentsNavigationComponent,p.ComponentsAppNavigatorComponent,v.ComponentsMenuButtonComponent,u.ComponentsNavigationMenuServiceNg1Component],f=[{path:"**",component:r.DocumentationCategoryComponent,data:{category:c.ResolverService.resolveCategoryData(c.DocumentationPage.Components,"Side Navigation")}}],b=function(){function e(e,n){n.registerResolver(e)}return e}();b=a([o.NgModule({imports:[l.DocumentationComponentsModule,h.WrappersModule,m.TabsModule,s.RouterModule.forChild(f)],exports:g,declarations:g,entryComponents:g}),i("design:paramtypes",[o.ComponentFactoryResolver,c.ResolverService])],b),n.ComponentsSideNavigationModule=b},1920:function(e,n){e.exports='<uxd-app-navigator-wrapper></uxd-app-navigator-wrapper>\n\n<hr>\n\n<p>An app navigator can be added to the side navigation on your application. Simply add the following item to the side navigation\n    list:\n</p>\n\n<uxd-snippet [code]="htmlCode"></uxd-snippet>\n\n<p>Below is an example of the popover template:</p>\n\n<uxd-snippet [code]="popoverCode"></uxd-snippet>\n\n<p>The following attributes can be used to customize the popovers appearance and behavior:</p>\n\n<div class="demo-attributes table-responsive">\n    <table class="table">\n        <tr>\n            <th>Property</th>\n            <th>Type</th>\n            <th>Binding</th>\n            <th>Description</th>\n            <th>Optional</th>\n        </tr>\n        <tr>\n            <td class="attribute">popover-template</td>\n            <td>string</td>\n            <td>variable</td>\n            <td>This defines the template file to be shown in the popover.</td>\n            <td>false</td>\n        </tr>\n        <tr>\n            <td class="attribute">popover-placement</td>\n            <td>string</td>\n            <td>literal</td>\n            <td>This defines the position of the popover. Available options are <code>top</code>, <code>bottom</code>, <code>left</code>                and <code>right</code></td>\n            <td>true</td>\n        </tr>\n        <tr>\n            <td class="attribute">popover-class</td>\n            <td>string</td>\n            <td>literal</td>\n            <td>This defines any additional classes to be added to the popover to allow custom styling.</td>\n            <td>true</td>\n        </tr>\n        <tr>\n            <td class="attribute">popover-fixed</td>\n            <td>boolean</td>\n            <td>literal</td>\n            <td>This defines whether the popover should have its <code>position</code> set to <code>fixed</code>.</td>\n            <td>true</td>\n        </tr>\n        <tr>\n            <td class="attribute">popover-offset-x | popover-offset-y</td>\n            <td>number</td>\n            <td>literal</td>\n            <td>This defines the number of pixels to move the popover from its default position.</td>\n            <td>true</td>\n        </tr>\n        <tr>\n            <td class="attribute">popover-trigger</td>\n            <td>string</td>\n            <td>literal</td>\n            <td>This defines what events will open and show the popover. Default is <code>click</code> (See popover section for\n                all options).</td>\n            <td>true</td>\n        </tr>\n        <tr>\n            <td class="attribute">popover-append-to-body</td>\n            <td>boolean</td>\n            <td>literal</td>\n            <td>This defines whether or not the popover should be added to the body element or as a sibling to the element with\n                the popover attributes.</td>\n            <td>true</td>\n        </tr>\n    </table>\n</div>\n\n<blockquote>\n    <p>More information on UI Bootstrap Popovers can be <a href="http://angular-ui.github.io/bootstrap/versioned-docs/0.13.0/#/popover">found here</a></p>\n</blockquote>'},1921:function(e,n){e.exports='<nav class="navbar-default navbar-static-side-light app-navigator-demo" role="navigation">\n    <ul class="nav" side-navigation="loaded" id="side-menu"> \n\n        <li class="app-navigator">\n            <div class="app-navigator-contents" popover-template="\'app_navigator_popover.tmpl.html\'" popover-placement="bottom" popover-trigger="outsideClick" popover-class="app-navigator-popover" popover-offset-x="15" popover-append-to-body="false"> \n\n                    <p class="brand">Showcase <span class="application">List View</span><span class="application-hover">Applications</span></p>\n                    <i class="hpe-icon hpe-down"></i>\n            </div>\n        </li>\n\n        <li class="m-b-xs selected active">\n            <a href=""><i class="hpe-icon hpe-cluster"></i>\n                <span>Menu Levels </span><span class="hpe-icon hpe-up arrow"></span>\n            </a>\n            <ul class="nav nav-second-level collapse in">\n                <li class="m-b-xs"><a href="" boldify-menu-item="">Second Level Item</a>\n                </li>\n                <li class="m-b-xs"><a href="" boldify-menu-item="">Second Level Item</a>\n                </li>\n                <li class="m-b-xs"><a href="" boldify-menu-item="">Second Level Item</a>\n                </li>\n            </ul>\n        </li>\n    </ul>\n</nav>'},1922:function(e,n){e.exports='<p>The menu button on the top left of the navigation menu is used to toggle the left navigation menu. Add the <code>minimize-menu</code>\n    directive to an element to initiate toggle.</p>\n<p>Menu button is contained in the <code>nav-menu-btn-container</code> and <code>nav-menu-toggle-btn</code> classes.</p>\n<p>The menu button can be styled by adding <code>nav-menu-btn-container-dark</code> or <code>nav-menu-btn-container-light</code>\n    class to the root element for dark and light themes respectively.</p>\n<p>When the menu is hidden, add the <code>nav-menu-btn-container-top-light</code> or <code>nav-menu-btn-container-top-dark</code>\n    class to the root element to indicate light or dark theme with respect to the top header theme.</p>\n<p>Add the option <code>animate</code> to make the navigation bar slide in and out.</p>\n<p>The navigation menu may be collapsed by default using the <code>auto-collapse</code> attribute which will only show the menu\n    when toggled by the user and then collapse again as soon as a page has been selected.</p>\n\n<uxd-snippet [code]="htmlCode"></uxd-snippet>'},1923:function(e,n){e.exports='<p>The navigation menu service (<code>$navigationMenu</code>) can be used in combination with the navigation menu button to control the visibility of the side navigation menu from anywhere in the application.</p>\n\n<p>The following code shows an example of using this service; the full example can be seen via the CodePen link above.</p>\n\n<uxd-snippet [code]="controllerJs" language="javascript"></uxd-snippet>\n\n<p>The following functions are available on the <code>$navigationMenu</code> service.</p>\n\n<div class="demo-attributes table-responsive">\n<table class="table m-t">\n  <tr>\n    <th>Name</th>\n    <th>Description</th>\n  </tr>\n  <tr>\n    <td class="attribute">show</td>\n    <td>Shows the side navigation menu.</td>\n  </tr>\n  <tr>\n    <td class="attribute">hide</td>\n    <td>Hides the side navigation menu.</td>\n  </tr>\n  <tr>\n    <td class="attribute">visible</td>\n    <td>Returns true if the side navigation menu is currently visible; otherwise false.</td>\n  </tr>\n  <tr>\n    <td class="attribute">collapseAtWidth</td>\n    <td>Returns the minimum window width (in pixels) at which the side navigation menu is displayed. At window widths narrower than this value, the menu will be hidden.</td>\n  </tr>\n  <tr>\n    <td class="attribute">setCollapseAtWidth(width)</td>\n    <td>Set the minimum window width (in pixels) at which the side navigation menu is displayed. Set the value to 0 to prevent hiding the side navigation menu based on window width.</td>\n  </tr>\n  <tr>\n    <td class="attribute">setDefaultCollapseAtWidth</td>\n    <td>Set the <code>collapseAtWidth</code> value to its default.</td>\n  </tr>\n</table>\n</div>\n\n<p>The event <code>navigationMenu.visibilityChanged</code> is also broadcast on the root scope whenever the visible state changes. The data parameter of this event is a boolean indicating whether the side navigation menu has become visible.</p>'},1924:function(e,n){e.exports='<uxd-navigation-wrapper></uxd-navigation-wrapper>\n\n<hr>\n\n<p>Add <code>side-navigation</code> directive to initalize the navigation menu.</p>\n\n<p>Navigation menu is contained in the <code>navbar-static-side-container</code> class and can be styled by adding\n    <code>navbar-static-side-dark</code> and <code>navbar-static-side-light</code> class to the root element for\n    dark and light themes respectively.</p>\n\n<p>The width of the navigation menu is set and can be modified in the <code>navbar-static-side-container</code> class.</p>\n\n<p>If a parent navigation node does not have any content itself, the <code>cascade</code> class may be set on its\n    child <code>ul</code> element. This will cause the click to activate the link associated with the first child\n    item.</p>\n\n<tabset>\n    <tab heading="HTML">\n        <uxd-snippet [code]="htmlCode"></uxd-snippet>\n    </tab>\n    <tab heading="JavaScript">\n        <uxd-snippet language="javascript" [code]="jsCode"></uxd-snippet>\n    </tab>\n</tabset>\n\n<blockquote>\n    <p><strong>Note</strong>: In order to bold the text for each selected level, we use <code>ng-class</code> in our\n        HTML to set the <code>active</code> class based on the page state. e.g.\n        <code>{{ noteCode }}</code></p>\n</blockquote>'},2390:function(e,n){e.exports='<div class="app-navigator-popover-contents">\n\n    <a class="app-navigator-item" href="">\n        <i class="hpe-icon hpe-app"></i>\n        <p class="app-navigator-item-name">All <b>Showcase</b> Applications</p>\n    </a>\n\n    <a class="app-navigator-item" href="">\n        <p class="app-navigator-item-name">List Views</p>\n    </a>\n\n    <a class="app-navigator-item" href="">\n        <p class="app-navigator-item-name">Social Chart</p>\n    </a>\n\n    <a class="app-navigator-item" href="">\n        <p class="app-navigator-item-name">Partition Map</p>\n    </a>\n\n    <a class="app-navigator-item" href="">\n        <p class="app-navigator-item-name">Sankey Chart</p>\n    </a>\n\n</div>'},2391:function(e,n){e.exports='<li class="app-navigator">\n    <div class="app-navigator-contents" \n            popover-template="\'appNavigatorPopover\'\'" \n            popover-placement="bottom" \n            popover-class="app-navigator-popover" \n            popover-fixed="true"\n            popover-trigger="outsideClick"\n            popover-offset-x="15"> \n\n            <p class="brand">Showcase <span class="application">List Views</span><span class="application-hover">Applications</span></p>\n            <i class="hpe-icon hpe-down"></i>\n    </div>\n</li>'},2392:function(e,n){e.exports=".app-navigator-demo {\n    max-width: 270px;\n}"},2393:function(e,n){e.exports='<div class="nav-menu-btn-container nav-menu-btn-container-dark nav-menu-btn-container-top-dark">\n    <a class="nav-menu-toggle-btn" minimize-menu animate="true" href="">\n        <i class="hpe-icon hpe-menu"></i>\n    </a>\n</div>\n<nav class="navbar-static-side-container navbar-static-side-container-light" ng-class="sidecontainer" scroll-config="{ autoReinitialise: false, showOnlyOnHover: true, enableKeyboardNavigation:true}" scroll-pane  id="menuScroll" role="navigation">\n    <div class="navbar-default navbar-static-side navbar-static-side-light" role="navigation">\n        <ul class="nav" side-navigation id="side-menu">\n        \t<li>Place the navigation header here</li>\n            <li>Place the n-level navigation menu code here</li>\n        </ul>\n    </div>\n</nav>'},2394:function(e,n){e.exports="angular.module(\"app\").controller(\"PageContentCtrl\", PageContentCtrl);\n\nPageContentCtrl.$inject = ['$scope', '$navigationMenu'];\n\nfunction PageContentCtrl($scope, $navigationMenu) {\n    var pc = this;\n\n    // Listen for the navigationMenu.visibilityChanged event to handle show/hide initiated elsewhere.\n    $scope.$on('navigationMenu.visibilityChanged', function (event, isVisible) {\n        // Update the state of the toggle button.\n        pc.navigationOpen = isVisible;\n    });\n\n    // Property containing the state of the toggle button\n    pc.navigationOpen = $navigationMenu.visible();\n    $scope.$watch('pc.navigationOpen', function (nv, ov) {\n        // Check that the state changed to avoid loops\n        if (nv !== ov) {\n            if (nv === true) {\n                $navigationMenu.show();\n            } else {\n                $navigationMenu.hide();\n            }\n        }\n    });\n\n    // Property containing the state of the \"Auto-Hide\" toggle switch\n    pc.navigationAutoCollapse = ($navigationMenu.collapseAtWidth() > 0);\n    $scope.$watch('pc.navigationAutoCollapse', function (nv) {\n        if (nv) {\n            // Enable collapse at window width using default value (1024px)\n            $navigationMenu.setDefaultCollapseAtWidth();\n        } else {\n            // Disable collapsing the side navigation menu according to window width\n            $navigationMenu.setCollapseAtWidth(0);\n        }\n    });\n}"},2395:function(e,n){e.exports='<div id="ux-codepen-container">\n<div class="wrapper">\n\n    <div class="nav-menu-btn-container nav-menu-btn-container-dark nav-menu-btn-container-top-dark">\n        <a class="nav-menu-toggle-btn" minimize-menu animate="true" href="">\n            <i class="hpe-icon hpe-menu"></i>\n        </a>\n    </div>\n    <nav class="navbar-static-side-container navbar-static-side-container-dark" ng-class="sidecontainer" scroll-config="{ autoReinitialise: false, showOnlyOnHover: true, enableKeyboardNavigation:true}"\n        scroll-pane id="menuScroll" role="navigation">\n        <div class="navbar-default navbar-static-side navbar-static-side-dark" role="navigation">\n            <ul class="nav" side-navigation id="side-menu">\n                <li class="nav-header nav-header-dark">\n                    <a class="logo-element-container">\n                        <div class="logo-element-image"></div>\n                        <p class="logo-element-text">UX Aspects</p>\n                    </a>\n                </li>\n\n                <li class="active selected">\n                    <a href="">\n                        <i class="hpe-icon hpe-clone"></i>\n                        <span class="nav-label">Patterns</span> <span class="hpe-icon hpe-collapse arrow"></span>\n                    </a>\n                    <ul class="in nav nav-second-level">\n                        <li class="active"><a href="">Navigation Menu Example</a></li>\n                    </ul>\n                </li>\n\n            </ul>\n        </div>\n    </nav>\n\n    <div class="page-content page-content-navbar-top-light">\n        <div class="affix-container">\n            <nav class="navbar navbar-static-top navbar-static-top-light back-button" affix-element>\n                <div class="navbar-header top-link-dropdown-2">\n                    <div class="product-styling" ng-show="!vm.topSearchExpanded">\n                    </div>\n                    <div class="primary-bg page-heading">\n                        <div class="btn-back-header">\n                            <span class="hpe-icon hpe-previous text-primary" ng-click="vm.goBack()"></span>\n                        </div>\n                        <div class="header-content-left">\n                            <ol class="breadcrumb">\n                                <li>\n                                    <a href="#">Home</a>\n                                </li>\n                                <li>\n                                    <a href="#">Patterns</a>\n                                </li>\n                            </ol>\n                            <h1 class="heading m-t-nil">Navigation Menu Example</h1>\n                        </div>\n                    </div>\n                </div>\n            </nav>\n        </div>\n\n        \x3c!-- Page Content --\x3e\n        <div ng-controller="PageContentCtrl as pc">\n            <div class="affix-container toolbar">\n                <div class="affix-toolbar" affix-element>\n                    <div class="row">\n                        <div class="col-md-10">\n                            <button type="button" class="btn button-toggle-primary" ng-model="pc.navigationOpen" btn-checkbox btn-checkbox-true="true" btn-checkbox-false="false">\n                                <i class="hpe-icon hpe-navigate"></i> Navigation Menu\n                            </button>\n                            <toggleswitch ng-model="pc.navigationAutoCollapse" class="m-l-md">\n                                Navigation Auto-Hide\n                            </toggleswitch>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class="wrapper-content">\n            </div>\n        </div>\n    </div>\n</div>\n</div>'},2396:function(e,n){e.exports="#ux-codepen-container {\n    padding: 0 !important;\n}"},2397:function(e,n){e.exports="ng-class= \"{ active: $state.includes( 'patterns.pagelayout.sidenavigation' ) }\""},2398:function(e,n){e.exports='<div ng-controller="SideNavigationCtrl as vm">\n  <div ui-view></div>\n  <nav class="navbar-static-side-container navbar-static-side-container-light" ng-class="sidecontainer" scroll-config="{autoReinitialise: true,autoReinitialiseDelay: 0,showOnlyOnHover:true,enableKeyboardNavigation:true} " scroll-pane  id="menuScroll" role="navigation">\n    <div class="navbar-default navbar-static-side navbar-static-side-light" role="navigation">\n\n      <ul class="nav" side-navigation="loaded" id="side-menu">\n        <li class="m-b-xs selected active">\n          <a href=""><i class="hpe-icon hpe-cluster"></i>\n            <span>Menu Levels </span><span class="hpe-icon hpe-up arrow"></span>\n          </a>\n          <ul class="nav nav-second-level collapse in">\n            <li class="m-b-xs" ng-class="{ active: vm.$state.includes( \'menu-levels.second-level\' ) }">\n              <a>Second Level\n                <span class="hpe-icon hpe-up arrow"></span>\n              </a>\n              <ul class="nav nav-third-level">\n                <li class="m-b-xs"  ng-class="{ active: vm.$state.includes( \'menu-levels.second-level.third-level-item-1\' ) }">\n                  <a ui-sref="menu-levels.second-level.third-level-item-1">Third Level Item 1</a>\n                </li>\n                <li class="m-b-xs" ng-class="{ active: vm.$state.includes( \'menu-levels.second-level.third-level-item-2\' ) }">\n                  <a ui-sref="menu-levels.second-level.third-level-item-2">Third Level Item 2</a>\n                </li>\n              </ul>\n            </li>\n            <li class="m-b-xs" ng-class="{ active: vm.$state.includes( \'menu-levels.second-level-item-1\' ) }">\n              <a ui-sref="menu-levels.second-level-item-1">Second Level Item 1</a>\n            </li>\n            <li class="m-b-xs" ng-class="{ active: vm.$state.includes( \'menu-levels.second-level-item-2\' ) }">\n              <a ui-sref="menu-levels.second-level-item-2">Second Level Item 2</a>\n            </li>\n            <li class="m-b-xs" ng-class="{ active: vm.$state.includes( \'menu-levels.second-level-item-3\' ) }">\n              <a ui-sref="menu-levels.second-level-item-3">Second Level Item 3</a>\n            </li>\n          </ul>\n        </li>\n      </ul>\n    </div>\n  </nav>\n</div>'},2399:function(e,n){e.exports="function SideNavigationCtrl($state) {\n  var vm = this;\n  \n  vm.$state = $state;\n}\n\nangular.module('app')\n  .config(['$stateProvider', '$urlRouterProvider',\n    function ($stateProvider, $urlRouterProvider) {\n\n      $urlRouterProvider.otherwise('/menu-levels');\n      $stateProvider\n        .state('menu-levels', {\n          abstract: 'true',\n          url: '/menu-levels',\n          template: '<ui-view/>'\n        })\n        .state('menu-levels.second-level', {\n          abstract: 'true',\n          url: '/second-level',\n          template: '<ui-view/>'\n        })\n        .state('menu-levels.second-level-item-1', {\n          url: '/second-level-item-1',\n          template: ''\n        })\n        .state('menu-levels.second-level-item-2', {\n          url: '/second-level-item-2',\n          template: ''\n        })\n        .state('menu-levels.second-level-item-3', {\n          url: '/second-level-item-3',\n          template: ''\n        })\n        .state('menu-levels.second-level.third-level-item-1', {\n          url: '/third-level-item-1',\n          template: ''\n        })\n        .state('menu-levels.second-level.third-level-item-2', {\n          url: '/third-level-item-2',\n          template: ''\n        })\n\n    }\n  ]);\n\n  angular.module('app').controller('SideNavigationCtrl', ['$state', SideNavigationCtrl]);"}});
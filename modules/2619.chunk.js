(self.webpackChunk_ux_aspects_ux_aspects_docs=self.webpackChunk_ux_aspects_ux_aspects_docs||[]).push([[2619],{46944:function(n){n.exports={snippet:'<span class="token selector">.search-builder-panel</span> <span class="token punctuation">{</span>\n    <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>\n    <span class="token property">width</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>\n    <span class="token property">height</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>\n    <span class="token property">top</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>\n    <span class="token property">right</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>\n    <span class="token property">pointer-events</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n  \n  <span class="token selector">.search-builder-panel-open</span> <span class="token punctuation">{</span>\n    <span class="token property">pointer-events</span><span class="token punctuation">:</span> all<span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token selector">.field-list-panel</span> <span class="token punctuation">{</span>\n    <span class="token property">border-top</span><span class="token punctuation">:</span> 1px solid #e5e5e5<span class="token punctuation">;</span>\n    <span class="token property">padding</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token selector">.field-list-panel .field-list</span> <span class="token punctuation">{</span>\n    <span class="token property">list-style-type</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>\n    <span class="token property">padding</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>\n    <span class="token property">margin</span><span class="token punctuation">:</span> 8px 5px<span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token selector">.field-list-panel .field-list .field-list-item</span> <span class="token punctuation">{</span>\n    <span class="token property">font-size</span><span class="token punctuation">:</span> 17px<span class="token punctuation">;</span>\n    <span class="token property">padding</span><span class="token punctuation">:</span> 3px 10px<span class="token punctuation">;</span>\n    <span class="token property">cursor</span><span class="token punctuation">:</span> pointer<span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token selector">.field-list-panel .field-list .field-list-item:hover</span> <span class="token punctuation">{</span>\n    <span class="token property">background-color</span><span class="token punctuation">:</span> #f2f2f2<span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n  ',example:".search-builder-panel {\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    top: 0;\n    right: 0;\n    pointer-events: none;\n  }\n  \n  .search-builder-panel-open {\n    pointer-events: all;\n  }\n\n  .field-list-panel {\n    border-top: 1px solid #e5e5e5;\n    padding: 10px;\n  }\n\n  .field-list-panel .field-list {\n    list-style-type: none;\n    padding: 0;\n    margin: 8px 5px;\n  }\n\n  .field-list-panel .field-list .field-list-item {\n    font-size: 17px;\n    padding: 3px 10px;\n    cursor: pointer;\n  }\n\n  .field-list-panel .field-list .field-list-item:hover {\n    background-color: #f2f2f2;\n  }\n  "}},33401:function(n){n.exports={snippet:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>btn button-primary<span class="token punctuation">"</span></span> <span class="token attr-name">(click)</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>modalOpen = true<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ux-icon</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>deployment<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>m-r-xs<span class="token punctuation">"</span></span> <span class="token attr-name">aria-hidden</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ux-icon</span><span class="token punctuation">></span></span>\n    Launch Search Builder Modal\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h4</span><span class="token punctuation">></span></span>Search Query<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h4</span><span class="token punctuation">></span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>pre</span><span class="token punctuation">></span></span>{{ preview }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>pre</span><span class="token punctuation">></span></span>\n\n<span class="token comment">&lt;!-- Search Builder modal definition --\x3e</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">*ngIf</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>modalOpen<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>modal<span class="token punctuation">"</span></span> <span class="token attr-name">tabindex</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>-1<span class="token punctuation">"</span></span> <span class="token attr-name">role</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>dialog<span class="token punctuation">"</span></span>\n    <span class="token attr-name">aria-modal</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span> <span class="token attr-name">aria-labelledby</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>search-builder-title<span class="token punctuation">"</span></span>\n    <span class="token attr-name">bsModal</span> <span class="token attr-name">#modal</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>bs-modal<span class="token punctuation">"</span></span> <span class="token attr-name">[config]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{ show: true, animated: false, focus: false }<span class="token punctuation">"</span></span>\n    <span class="token attr-name">(onShown)</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>modalShown()<span class="token punctuation">"</span></span> <span class="token attr-name">(onHidden)</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>cancel()<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">role</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>document<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>modal-dialog modal-lg search-builder-modal<span class="token punctuation">"</span></span>\n        <span class="token attr-name">[cdkTrapFocus]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>modalOpen<span class="token punctuation">"</span></span>\n        <span class="token attr-name">[cdkTrapFocusAutoCapture]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>modal-content<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n\n            <span class="token comment">&lt;!-- Close button --\x3e</span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>search-builder-dismiss<span class="token punctuation">"</span></span> <span class="token attr-name">(click)</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>cancel()<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>btn btn-icon button-dark btn-circular btn-close<span class="token punctuation">"</span></span>\n                    <span class="token attr-name">aria-label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Close search builder modal<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ux-icon</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>close<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ux-icon</span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n\n            <span class="token comment">&lt;!-- Modal header --\x3e</span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>search-builder-header<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>search-builder-icon<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>search-builder-title<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>search-builder-title<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Search builder<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">#searchBuilderContent</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>search-builder-body<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n\n                <span class="token comment">&lt;!-- Search Builder --\x3e</span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ux-search-builder</span> <span class="token attr-name">[(query)]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>query<span class="token punctuation">"</span></span> <span class="token attr-name">[components]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>components<span class="token punctuation">"</span></span> <span class="token attr-name">(valid)</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>valid = $event<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n\n                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ux-search-builder-group</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>keywords<span class="token punctuation">"</span></span>\n                        <span class="token attr-name">header</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Text Keywords<span class="token punctuation">"</span></span>\n                        <span class="token attr-name">addText</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Add a keyword<span class="token punctuation">"</span></span>\n                        <span class="token attr-name">(add)</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>addKeyword()<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ux-search-builder-group</span><span class="token punctuation">></span></span>\n\n                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ux-search-builder-group</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>any<span class="token punctuation">"</span></span>\n                        <span class="token attr-name">header</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>ANY of the following<span class="token punctuation">"</span></span>\n                        <span class="token attr-name">operator</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>or<span class="token punctuation">"</span></span>\n                        <span class="token attr-name">(add)</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>addField(<span class="token punctuation">\'</span>any<span class="token punctuation">\'</span>, $event)<span class="token punctuation">"</span></span>\n                        <span class="token attr-name">[showPlaceholder]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>placeholders.any<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ux-search-builder-group</span><span class="token punctuation">></span></span>\n\n                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ux-search-builder-group</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>all<span class="token punctuation">"</span></span>\n                        <span class="token attr-name">header</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>ALL of the following<span class="token punctuation">"</span></span>\n                        <span class="token attr-name">(add)</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>addField(<span class="token punctuation">\'</span>all<span class="token punctuation">\'</span>, $event)<span class="token punctuation">"</span></span>\n                        <span class="token attr-name">[showPlaceholder]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>placeholders.all<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ux-search-builder-group</span><span class="token punctuation">></span></span>\n\n                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ux-search-builder-group</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>none<span class="token punctuation">"</span></span>\n                        <span class="token attr-name">header</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>NONE of the following<span class="token punctuation">"</span></span>\n                        <span class="token attr-name">operator</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>not<span class="token punctuation">"</span></span>\n                        <span class="token attr-name">(add)</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>addField(<span class="token punctuation">\'</span>none<span class="token punctuation">\'</span>, $event)<span class="token punctuation">"</span></span>\n                        <span class="token attr-name">[showPlaceholder]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>placeholders.none<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ux-search-builder-group</span><span class="token punctuation">></span></span>\n\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ux-search-builder</span><span class="token punctuation">></span></span>\n\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n\n            <span class="token comment">&lt;!-- Search/Cancel buttons --\x3e</span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>search-builder-footer<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>btn button-primary<span class="token punctuation">"</span></span> <span class="token attr-name">[disabled]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>!valid<span class="token punctuation">"</span></span> <span class="token attr-name">(click)</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>save()<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n                    Search\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>btn button-secondary<span class="token punctuation">"</span></span> <span class="token attr-name">(click)</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>cancel()<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Cancel<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n\n            <span class="token comment">&lt;!-- Side panel (used to select field type) --\x3e</span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ux-item-display-panel</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>search-builder-panel<span class="token punctuation">"</span></span>\n                <span class="token attr-name">[class.search-builder-panel-open]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>panelOpen<span class="token punctuation">"</span></span>\n                <span class="token attr-name">[animate]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span>\n                <span class="token attr-name">[inline]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span>\n                <span class="token attr-name">header</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Add Field<span class="token punctuation">"</span></span>\n                <span class="token attr-name">[(visible)]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>panelOpen<span class="token punctuation">"</span></span>\n                <span class="token attr-name">(visibleChange)</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>onPanelEvent($event)<span class="token punctuation">"</span></span>\n                <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>400px<span class="token punctuation">"</span></span>\n                <span class="token attr-name">role</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>dialog<span class="token punctuation">"</span></span>\n                <span class="token attr-name">aria-label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Field Type Panel<span class="token punctuation">"</span></span>\n                <span class="token attr-name">aria-description</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Select a field type to add it to the search builder.<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">uxItemDisplayPanelContent</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>field-list-panel<span class="token punctuation">"</span></span>\n                    <span class="token attr-name">(keydown.esc)</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>panelOpen = false; $event.stopPropagation()<span class="token punctuation">"</span></span>\n                    <span class="token attr-name">[cdkTrapFocus]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>panelOpen<span class="token punctuation">"</span></span>\n                    <span class="token attr-name">[cdkTrapFocusAutoCapture]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n\n                    <span class="token comment">&lt;!-- Field type filter field --\x3e</span>\n                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span>\n                        <span class="token attr-name">aria-description</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Filter the field type list.<span class="token punctuation">"</span></span>\n                        <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Find a field<span class="token punctuation">"</span></span>\n                        <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>form-control<span class="token punctuation">"</span></span>\n                        <span class="token attr-name">[ngModel]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>filter$ | async<span class="token punctuation">"</span></span>\n                        <span class="token attr-name">(ngModelChange)</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>filter$.next($event)<span class="token punctuation">"</span></span>\n                        <span class="token attr-name">[focusIf]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>panelOpen<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n\n                    <span class="token comment">&lt;!-- List of field types --\x3e</span>\n                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ux-select-list</span> <span class="token attr-name">*ngIf</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>panelOpen<span class="token punctuation">"</span></span>\n                        <span class="token attr-name">aria-label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Field type list<span class="token punctuation">"</span></span>\n                        <span class="token attr-name">aria-description</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Select a field type to add it to the search builder.<span class="token punctuation">"</span></span>\n                        <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>field-list<span class="token punctuation">"</span></span>\n                        <span class="token attr-name">(selectedChange)</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>selectField($event[0])<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ux-select-list-item</span> <span class="token attr-name">*ngFor</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>let field of filteredFields<span class="token punctuation">"</span></span> <span class="token attr-name">[data]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>field<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n                            {{field.title}}\n                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ux-select-list-item</span><span class="token punctuation">></span></span>\n                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ux-select-list</span><span class="token punctuation">></span></span>\n\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ux-item-display-panel</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>',example:'<button type="button" class="btn button-primary" (click)="modalOpen = true">\n    <ux-icon name="deployment" class="m-r-xs" aria-hidden="true"></ux-icon>\n    Launch Search Builder Modal\n</button>\n\n<h4>Search Query</h4>\n\n<pre>{{ preview }}</pre>\n\n\x3c!-- Search Builder modal definition --\x3e\n<div *ngIf="modalOpen" class="modal" tabindex="-1" role="dialog"\n    aria-modal="true" aria-labelledby="search-builder-title"\n    bsModal #modal="bs-modal" [config]="{ show: true, animated: false, focus: false }"\n    (onShown)="modalShown()" (onHidden)="cancel()">\n\n    <div role="document" class="modal-dialog modal-lg search-builder-modal"\n        [cdkTrapFocus]="modalOpen"\n        [cdkTrapFocusAutoCapture]="true">\n\n        <div class="modal-content">\n\n            \x3c!-- Close button --\x3e\n            <div class="search-builder-dismiss" (click)="cancel()">\n                <button type="button" class="btn btn-icon button-dark btn-circular btn-close"\n                    aria-label="Close search builder modal">\n                    <ux-icon name="close"></ux-icon>\n                </button>\n            </div>\n\n            \x3c!-- Modal header --\x3e\n            <div class="search-builder-header">\n                <div class="search-builder-icon"></div>\n                <h1 id="search-builder-title" class="search-builder-title">Search builder</h1>\n            </div>\n\n            <div #searchBuilderContent class="search-builder-body">\n\n                \x3c!-- Search Builder --\x3e\n                <ux-search-builder [(query)]="query" [components]="components" (valid)="valid = $event">\n\n                    <ux-search-builder-group id="keywords"\n                        header="Text Keywords"\n                        addText="Add a keyword"\n                        (add)="addKeyword()">\n                    </ux-search-builder-group>\n\n                    <ux-search-builder-group id="any"\n                        header="ANY of the following"\n                        operator="or"\n                        (add)="addField(\'any\', $event)"\n                        [showPlaceholder]="placeholders.any">\n                    </ux-search-builder-group>\n\n                    <ux-search-builder-group id="all"\n                        header="ALL of the following"\n                        (add)="addField(\'all\', $event)"\n                        [showPlaceholder]="placeholders.all">\n                    </ux-search-builder-group>\n\n                    <ux-search-builder-group id="none"\n                        header="NONE of the following"\n                        operator="not"\n                        (add)="addField(\'none\', $event)"\n                        [showPlaceholder]="placeholders.none">\n                    </ux-search-builder-group>\n\n                </ux-search-builder>\n\n            </div>\n\n            \x3c!-- Search/Cancel buttons --\x3e\n            <div class="search-builder-footer">\n                <button type="button" class="btn button-primary" [disabled]="!valid" (click)="save()">\n                    Search\n                </button>\n                <button type="button" class="btn button-secondary" (click)="cancel()">Cancel</button>\n            </div>\n\n            \x3c!-- Side panel (used to select field type) --\x3e\n            <ux-item-display-panel class="search-builder-panel"\n                [class.search-builder-panel-open]="panelOpen"\n                [animate]="true"\n                [inline]="true"\n                header="Add Field"\n                [(visible)]="panelOpen"\n                (visibleChange)="onPanelEvent($event)"\n                width="400px"\n                role="dialog"\n                aria-label="Field Type Panel"\n                aria-description="Select a field type to add it to the search builder.">\n\n                <div uxItemDisplayPanelContent class="field-list-panel"\n                    (keydown.esc)="panelOpen = false; $event.stopPropagation()"\n                    [cdkTrapFocus]="panelOpen"\n                    [cdkTrapFocusAutoCapture]="true">\n\n                    \x3c!-- Field type filter field --\x3e\n                    <input type="text"\n                        aria-description="Filter the field type list."\n                        placeholder="Find a field"\n                        class="form-control"\n                        [ngModel]="filter$ | async"\n                        (ngModelChange)="filter$.next($event)"\n                        [focusIf]="panelOpen">\n\n                    \x3c!-- List of field types --\x3e\n                    <ux-select-list *ngIf="panelOpen"\n                        aria-label="Field type list"\n                        aria-description="Select a field type to add it to the search builder."\n                        class="field-list"\n                        (selectedChange)="selectField($event[0])">\n                        <ux-select-list-item *ngFor="let field of filteredFields" [data]="field">\n                            {{field.title}}\n                        </ux-select-list-item>\n                    </ux-select-list>\n\n                </div>\n            </ux-item-display-panel>\n        </div>\n    </div>\n</div>'}},86842:function(n){n.exports={snippet:'<span class="token keyword">import</span> <span class="token punctuation">{</span> Component<span class="token punctuation">,</span> ElementRef<span class="token punctuation">,</span> OnDestroy<span class="token punctuation">,</span> ViewChild <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@angular/core\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> SearchBuilderComponentDefinition<span class="token punctuation">,</span> SearchBuilderFocusService<span class="token punctuation">,</span> SearchBuilderQuery<span class="token punctuation">,</span> SearchDateRangeComponent<span class="token punctuation">,</span> SearchDateRangeConfig<span class="token punctuation">,</span> SearchSelectComponent<span class="token punctuation">,</span> SearchSelectConfig<span class="token punctuation">,</span> SearchTextComponent<span class="token punctuation">,</span> SearchTextConfig <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@ux-aspects/ux-aspects\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token string">\'chance\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> BsModalService <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'ngx-bootstrap/modal\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> Subject <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'rxjs\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> BehaviorSubject <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'rxjs/internal/BehaviorSubject\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> first<span class="token punctuation">,</span> takeUntil <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'rxjs/operators\'</span><span class="token punctuation">;</span>\n\n@<span class="token function">Component</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    selector<span class="token operator">:</span> <span class="token string">\'app\'</span><span class="token punctuation">,</span>\n    templateUrl<span class="token operator">:</span> <span class="token string">\'./app.component.html\'</span><span class="token punctuation">,</span>\n    styleUrls<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">\'./app.component.css\'</span><span class="token punctuation">]</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">AppComponent</span> <span class="token keyword">implements</span> <span class="token class-name">OnDestroy</span> <span class="token punctuation">{</span>\n\n    query<span class="token operator">:</span> SearchBuilderQuery <span class="token operator">=</span> <span class="token punctuation">{</span>\n        keywords<span class="token operator">:</span> <span class="token punctuation">[</span>\n            <span class="token punctuation">{</span>\n                type<span class="token operator">:</span> <span class="token string">\'keyword\'</span><span class="token punctuation">,</span>\n                value<span class="token operator">:</span> <span class="token keyword">null</span>\n            <span class="token punctuation">}</span>\n        <span class="token punctuation">]</span><span class="token punctuation">,</span>\n        any<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n        all<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n        none<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n    preview<span class="token operator">:</span> string <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>query<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    valid<span class="token operator">:</span> boolean <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>\n    filter$ <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BehaviorSubject</span><span class="token operator">&lt;</span>string<span class="token operator">></span><span class="token punctuation">(</span><span class="token string">\'\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    modalOpen<span class="token operator">:</span> boolean <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\n    panelOpen<span class="token operator">:</span> boolean <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\n\n    placeholders <span class="token operator">=</span> <span class="token punctuation">{</span>\n        any<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n        all<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n        none<span class="token operator">:</span> <span class="token boolean">false</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n    components<span class="token operator">:</span> SearchBuilderComponentDefinition<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>\n        <span class="token punctuation">{</span>\n            name<span class="token operator">:</span> <span class="token string">\'keyword\'</span><span class="token punctuation">,</span>\n            component<span class="token operator">:</span> SearchTextComponent<span class="token punctuation">,</span>\n            config<span class="token operator">:</span> <span class="token punctuation">{</span>\n                placeholder<span class="token operator">:</span> <span class="token string">\'Enter keywords\'</span>\n            <span class="token punctuation">}</span> <span class="token keyword">as</span> SearchTextConfig\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">{</span>\n            name<span class="token operator">:</span> <span class="token string">\'author\'</span><span class="token punctuation">,</span>\n            component<span class="token operator">:</span> SearchTextComponent<span class="token punctuation">,</span>\n            config<span class="token operator">:</span> <span class="token punctuation">{</span>\n                label<span class="token operator">:</span> <span class="token string">\'Author\'</span><span class="token punctuation">,</span>\n                placeholder<span class="token operator">:</span> <span class="token string">\'Enter an Author\'</span>\n            <span class="token punctuation">}</span> <span class="token keyword">as</span> SearchTextConfig\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">{</span>\n            name<span class="token operator">:</span> <span class="token string">\'custodian\'</span><span class="token punctuation">,</span>\n            component<span class="token operator">:</span> SearchSelectComponent<span class="token punctuation">,</span>\n            config<span class="token operator">:</span> <span class="token punctuation">{</span>\n                label<span class="token operator">:</span> <span class="token string">\'Custodian\'</span><span class="token punctuation">,</span>\n                placeholder<span class="token operator">:</span> <span class="token string">\'Select Custodians\'</span><span class="token punctuation">,</span>\n                options<span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getCustodians</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n                multiple<span class="token operator">:</span> <span class="token boolean">true</span>\n            <span class="token punctuation">}</span> <span class="token keyword">as</span> SearchSelectConfig\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">{</span>\n            name<span class="token operator">:</span> <span class="token string">\'date-range\'</span><span class="token punctuation">,</span>\n            component<span class="token operator">:</span> SearchDateRangeComponent<span class="token punctuation">,</span>\n            config<span class="token operator">:</span> <span class="token punctuation">{</span>\n                label<span class="token operator">:</span> <span class="token string">\'Date range\'</span>\n            <span class="token punctuation">}</span> <span class="token keyword">as</span> SearchDateRangeConfig\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">{</span>\n            name<span class="token operator">:</span> <span class="token string">\'file-name\'</span><span class="token punctuation">,</span>\n            component<span class="token operator">:</span> SearchTextComponent<span class="token punctuation">,</span>\n            config<span class="token operator">:</span> <span class="token punctuation">{</span>\n                label<span class="token operator">:</span> <span class="token string">\'File name\'</span><span class="token punctuation">,</span>\n                placeholder<span class="token operator">:</span> <span class="token string">\'Enter a File Name\'</span>\n            <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">{</span>\n            name<span class="token operator">:</span> <span class="token string">\'file-type\'</span><span class="token punctuation">,</span>\n            component<span class="token operator">:</span> SearchSelectComponent<span class="token punctuation">,</span>\n            config<span class="token operator">:</span> <span class="token punctuation">{</span>\n                label<span class="token operator">:</span> <span class="token string">\'File types\'</span><span class="token punctuation">,</span>\n                placeholder<span class="token operator">:</span> <span class="token string">\'Select File Types\'</span><span class="token punctuation">,</span>\n                options<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">\'AVI\'</span><span class="token punctuation">,</span> <span class="token string">\'BMP\'</span><span class="token punctuation">,</span> <span class="token string">\'CSV\'</span><span class="token punctuation">,</span> <span class="token string">\'DOC\'</span><span class="token punctuation">,</span> <span class="token string">\'EXE\'</span><span class="token punctuation">,</span> <span class="token string">\'GIF\'</span><span class="token punctuation">,</span> <span class="token string">\'JPG\'</span><span class="token punctuation">,</span> <span class="token string">\'MOV\'</span><span class="token punctuation">,</span> <span class="token string">\'PDF\'</span><span class="token punctuation">,</span> <span class="token string">\'PNG\'</span><span class="token punctuation">,</span> <span class="token string">\'PPT\'</span><span class="token punctuation">,</span>\n                    <span class="token string">\'RTF\'</span><span class="token punctuation">,</span> <span class="token string">\'TXT\'</span><span class="token punctuation">,</span> <span class="token string">\'XLS\'</span><span class="token punctuation">,</span> <span class="token string">\'ZIP\'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n                multiple<span class="token operator">:</span> <span class="token boolean">true</span>\n            <span class="token punctuation">}</span> <span class="token keyword">as</span> SearchSelectConfig\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">{</span>\n            name<span class="token operator">:</span> <span class="token string">\'repository\'</span><span class="token punctuation">,</span>\n            component<span class="token operator">:</span> SearchSelectComponent<span class="token punctuation">,</span>\n            config<span class="token operator">:</span> <span class="token punctuation">{</span>\n                label<span class="token operator">:</span> <span class="token string">\'Repository\'</span><span class="token punctuation">,</span>\n                placeholder<span class="token operator">:</span> <span class="token string">\'Enter a Repository\'</span><span class="token punctuation">,</span>\n                options<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">\'Filesystem\'</span><span class="token punctuation">,</span> <span class="token string">\'Records Manager\'</span><span class="token punctuation">,</span> <span class="token string">\'Email\'</span><span class="token punctuation">,</span> <span class="token string">\'Legacy Email\'</span><span class="token punctuation">,</span> <span class="token string">\'Archives\'</span><span class="token punctuation">,</span>\n                    <span class="token string">\'Legacy Archives\'</span><span class="token punctuation">,</span> <span class="token string">\'Miscellaneous\'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n                multiple<span class="token operator">:</span> <span class="token boolean">true</span>\n            <span class="token punctuation">}</span> <span class="token keyword">as</span> SearchSelectConfig\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">{</span>\n            name<span class="token operator">:</span> <span class="token string">\'text\'</span><span class="token punctuation">,</span>\n            component<span class="token operator">:</span> SearchTextComponent<span class="token punctuation">,</span>\n            config<span class="token operator">:</span> <span class="token punctuation">{</span>\n                label<span class="token operator">:</span> <span class="token string">\'Text\'</span><span class="token punctuation">,</span>\n                placeholder<span class="token operator">:</span> <span class="token string">\'Enter Text\'</span>\n            <span class="token punctuation">}</span> <span class="token keyword">as</span> SearchTextConfig\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n    fields<span class="token operator">:</span> SearchBuilderField<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>\n        <span class="token punctuation">{</span> title<span class="token operator">:</span> <span class="token string">\'Author\'</span><span class="token punctuation">,</span> type<span class="token operator">:</span> <span class="token string">\'author\'</span><span class="token punctuation">,</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">{</span> title<span class="token operator">:</span> <span class="token string">\'Custodian\'</span><span class="token punctuation">,</span> type<span class="token operator">:</span> <span class="token string">\'custodian\'</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">{</span> title<span class="token operator">:</span> <span class="token string">\'Date Range\'</span><span class="token punctuation">,</span> type<span class="token operator">:</span> <span class="token string">\'date-range\'</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">{</span> title<span class="token operator">:</span> <span class="token string">\'File Name\'</span><span class="token punctuation">,</span> type<span class="token operator">:</span> <span class="token string">\'file-name\'</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">{</span> title<span class="token operator">:</span> <span class="token string">\'File Type\'</span><span class="token punctuation">,</span> type<span class="token operator">:</span> <span class="token string">\'file-type\'</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">{</span> title<span class="token operator">:</span> <span class="token string">\'Repository\'</span><span class="token punctuation">,</span> type<span class="token operator">:</span> <span class="token string">\'repository\'</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">{</span> title<span class="token operator">:</span> <span class="token string">\'Text\'</span><span class="token punctuation">,</span> type<span class="token operator">:</span> <span class="token string">\'text\'</span> <span class="token punctuation">}</span>\n    <span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n    filteredFields<span class="token operator">:</span> SearchBuilderField<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n    @<span class="token function">ViewChild</span><span class="token punctuation">(</span><span class="token string">\'searchBuilderContent\'</span><span class="token punctuation">)</span>\n    searchBuilderContent<span class="token operator">:</span> ElementRef<span class="token operator">&lt;</span>HTMLElement<span class="token operator">></span><span class="token punctuation">;</span>\n\n    <span class="token keyword">private</span> _field$<span class="token operator">:</span> Subject<span class="token operator">&lt;</span>SearchBuilderField<span class="token operator">></span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Subject</span><span class="token operator">&lt;</span>SearchBuilderField<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">private</span> _onDestroy <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Subject</span><span class="token operator">&lt;</span><span class="token keyword">void</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token function">constructor</span><span class="token punctuation">(</span>\n        <span class="token parameter"><span class="token keyword">private</span> _modalService<span class="token operator">:</span> BsModalService<span class="token punctuation">,</span>\n        <span class="token keyword">private</span> _searchBuilderFocusService<span class="token operator">:</span> SearchBuilderFocusService</span>\n    <span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token comment">// if the modal is closed by clicking on backdrop perform cancel</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>_modalService<span class="token punctuation">.</span>onHide<span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">takeUntil</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>_onDestroy<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">cancel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token comment">// Filter the field type list</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>filter$<span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">takeUntil</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>_onDestroy<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token parameter">value</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n            <span class="token keyword">this</span><span class="token punctuation">.</span>filteredFields <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>fields<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token parameter">field</span> <span class="token operator">=></span>\n                field<span class="token punctuation">.</span>title<span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>value<span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">>=</span> <span class="token number">0</span>\n            <span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token function">ngOnDestroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>_onDestroy<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>_onDestroy<span class="token punctuation">.</span><span class="token function">complete</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token function">save</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>preview <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>query<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>modalOpen <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token function">cancel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>query <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>preview<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>modalOpen <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token function">addKeyword</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>\n        <span class="token keyword">const</span> length <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>query<span class="token punctuation">.</span>keywords<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span> type<span class="token operator">:</span> <span class="token string">\'keyword\'</span><span class="token punctuation">,</span> value<span class="token operator">:</span> <span class="token keyword">null</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token comment">// Set focus on the newly added field</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>_searchBuilderFocusService<span class="token punctuation">.</span><span class="token function">setFocus</span><span class="token punctuation">(</span><span class="token string">\'keywords\'</span><span class="token punctuation">,</span> length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token function">addField</span><span class="token punctuation">(</span>group<span class="token operator">:</span> string<span class="token punctuation">,</span> event<span class="token operator">:</span> MouseEvent<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>\n\n        <span class="token keyword">const</span> button <span class="token operator">=</span> <span class="token operator">&lt;</span>HTMLElement<span class="token operator">></span>event<span class="token punctuation">.</span>currentTarget<span class="token punctuation">;</span>\n\n        <span class="token comment">// show the panel</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">showPanel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token comment">// show the placeholder field</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>placeholders<span class="token punctuation">[</span>group<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>\n\n        <span class="token comment">// subscribe to only the next field event</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>_field$<span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">first</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token parameter">field</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n\n            <span class="token comment">// remove the placeholder</span>\n            <span class="token keyword">this</span><span class="token punctuation">.</span>placeholders<span class="token punctuation">[</span>group<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\n\n            <span class="token comment">// if a field was selected then add it to the query</span>\n            <span class="token keyword">if</span> <span class="token punctuation">(</span>field<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n\n                <span class="token keyword">const</span> length <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>query<span class="token punctuation">[</span>group<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span> type<span class="token operator">:</span> field<span class="token punctuation">.</span>type<span class="token punctuation">,</span> value<span class="token operator">:</span> <span class="token keyword">null</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n                <span class="token comment">// Set focus on the newly added field</span>\n                <span class="token keyword">this</span><span class="token punctuation">.</span>_searchBuilderFocusService<span class="token punctuation">.</span><span class="token function">setFocus</span><span class="token punctuation">(</span>group<span class="token punctuation">,</span> length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n\n                <span class="token comment">// Nothing selected so return focus to the original button</span>\n                button<span class="token punctuation">.</span><span class="token function">focus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        event<span class="token punctuation">.</span><span class="token function">stopPropagation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token function">showPanel</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token comment">// clear any existing filters</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>filter$<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token string">\'\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token comment">// show the panel</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>panelOpen <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token function">onPanelEvent</span><span class="token punctuation">(</span>open<span class="token operator">:</span> boolean<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>\n        <span class="token comment">// if closing indication that no field was chosen</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>open<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token keyword">this</span><span class="token punctuation">.</span>_field$<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token function">selectField</span><span class="token punctuation">(</span>field<span class="token operator">:</span> SearchBuilderField<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span>field<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token comment">// emit the selected field</span>\n            <span class="token keyword">this</span><span class="token punctuation">.</span>_field$<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span>field<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n            <span class="token comment">// close the panel</span>\n            <span class="token keyword">this</span><span class="token punctuation">.</span>panelOpen <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token function">getCustodians</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> string<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">{</span>\n        <span class="token keyword">const</span> custodians<span class="token operator">:</span> string<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> idx <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> idx <span class="token operator">&lt;</span> <span class="token number">20</span><span class="token punctuation">;</span> idx<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            custodians<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>chance<span class="token punctuation">.</span><span class="token function">name</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n\n        <span class="token keyword">return</span> custodians<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token function">modalShown</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>\n        <span class="token comment">// Set focus on the first field in the keywords group</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>_searchBuilderFocusService<span class="token punctuation">.</span><span class="token function">setFocus</span><span class="token punctuation">(</span><span class="token string">\'keywords\'</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">interface</span> <span class="token class-name">SearchBuilderField</span> <span class="token punctuation">{</span>\n    title<span class="token operator">:</span> string<span class="token punctuation">;</span>\n    type<span class="token operator">:</span> string<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n',example:"import { Component, ElementRef, OnDestroy, ViewChild } from '@angular/core';\nimport { SearchBuilderComponentDefinition, SearchBuilderFocusService, SearchBuilderQuery, SearchDateRangeComponent, SearchDateRangeConfig, SearchSelectComponent, SearchSelectConfig, SearchTextComponent, SearchTextConfig } from '@ux-aspects/ux-aspects';\nimport 'chance';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { Subject } from 'rxjs';\nimport { BehaviorSubject } from 'rxjs/internal/BehaviorSubject';\nimport { first, takeUntil } from 'rxjs/operators';\n\n@Component({\n    selector: 'app',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnDestroy {\n\n    query: SearchBuilderQuery = {\n        keywords: [\n            {\n                type: 'keyword',\n                value: null\n            }\n        ],\n        any: [],\n        all: [],\n        none: []\n    };\n\n    preview: string = JSON.stringify(this.query, null, 2);\n    valid: boolean = true;\n    filter$ = new BehaviorSubject<string>('');\n    modalOpen: boolean = false;\n    panelOpen: boolean = false;\n\n    placeholders = {\n        any: false,\n        all: false,\n        none: false\n    };\n\n    components: SearchBuilderComponentDefinition[] = [\n        {\n            name: 'keyword',\n            component: SearchTextComponent,\n            config: {\n                placeholder: 'Enter keywords'\n            } as SearchTextConfig\n        },\n        {\n            name: 'author',\n            component: SearchTextComponent,\n            config: {\n                label: 'Author',\n                placeholder: 'Enter an Author'\n            } as SearchTextConfig\n        },\n        {\n            name: 'custodian',\n            component: SearchSelectComponent,\n            config: {\n                label: 'Custodian',\n                placeholder: 'Select Custodians',\n                options: this.getCustodians(),\n                multiple: true\n            } as SearchSelectConfig\n        },\n        {\n            name: 'date-range',\n            component: SearchDateRangeComponent,\n            config: {\n                label: 'Date range'\n            } as SearchDateRangeConfig\n        },\n        {\n            name: 'file-name',\n            component: SearchTextComponent,\n            config: {\n                label: 'File name',\n                placeholder: 'Enter a File Name'\n            }\n        },\n        {\n            name: 'file-type',\n            component: SearchSelectComponent,\n            config: {\n                label: 'File types',\n                placeholder: 'Select File Types',\n                options: ['AVI', 'BMP', 'CSV', 'DOC', 'EXE', 'GIF', 'JPG', 'MOV', 'PDF', 'PNG', 'PPT',\n                    'RTF', 'TXT', 'XLS', 'ZIP'],\n                multiple: true\n            } as SearchSelectConfig\n        },\n        {\n            name: 'repository',\n            component: SearchSelectComponent,\n            config: {\n                label: 'Repository',\n                placeholder: 'Enter a Repository',\n                options: ['Filesystem', 'Records Manager', 'Email', 'Legacy Email', 'Archives',\n                    'Legacy Archives', 'Miscellaneous'],\n                multiple: true\n            } as SearchSelectConfig\n        },\n        {\n            name: 'text',\n            component: SearchTextComponent,\n            config: {\n                label: 'Text',\n                placeholder: 'Enter Text'\n            } as SearchTextConfig\n        }\n    ];\n\n    fields: SearchBuilderField[] = [\n        { title: 'Author', type: 'author', },\n        { title: 'Custodian', type: 'custodian' },\n        { title: 'Date Range', type: 'date-range' },\n        { title: 'File Name', type: 'file-name' },\n        { title: 'File Type', type: 'file-type' },\n        { title: 'Repository', type: 'repository' },\n        { title: 'Text', type: 'text' }\n    ];\n\n    filteredFields: SearchBuilderField[];\n\n    @ViewChild('searchBuilderContent')\n    searchBuilderContent: ElementRef<HTMLElement>;\n\n    private _field$: Subject<SearchBuilderField> = new Subject<SearchBuilderField>();\n    private _onDestroy = new Subject<void>();\n\n    constructor(\n        private _modalService: BsModalService,\n        private _searchBuilderFocusService: SearchBuilderFocusService\n    ) {\n        // if the modal is closed by clicking on backdrop perform cancel\n        this._modalService.onHide.pipe(takeUntil(this._onDestroy)).subscribe(() => this.cancel());\n\n        // Filter the field type list\n        this.filter$.pipe(takeUntil(this._onDestroy)).subscribe(value => {\n            this.filteredFields = this.fields.filter(field =>\n                field.title.toLowerCase().indexOf(value.toLowerCase()) >= 0\n            );\n        });\n    }\n\n    ngOnDestroy(): void {\n        this._onDestroy.next();\n        this._onDestroy.complete();\n    }\n\n    save(): void {\n        this.preview = JSON.stringify(this.query, null, 2);\n        this.modalOpen = false;\n    }\n\n    cancel(): void {\n        this.query = JSON.parse(this.preview);\n        this.modalOpen = false;\n    }\n\n    addKeyword(): void {\n        const length = this.query.keywords.push({ type: 'keyword', value: null });\n\n        // Set focus on the newly added field\n        this._searchBuilderFocusService.setFocus('keywords', length - 1);\n    }\n\n    addField(group: string, event: MouseEvent): void {\n\n        const button = <HTMLElement>event.currentTarget;\n\n        // show the panel\n        this.showPanel();\n\n        // show the placeholder field\n        this.placeholders[group] = true;\n\n        // subscribe to only the next field event\n        this._field$.pipe(first()).subscribe(field => {\n\n            // remove the placeholder\n            this.placeholders[group] = false;\n\n            // if a field was selected then add it to the query\n            if (field) {\n\n                const length = this.query[group].push({ type: field.type, value: null });\n\n                // Set focus on the newly added field\n                this._searchBuilderFocusService.setFocus(group, length - 1);\n\n            } else {\n\n                // Nothing selected so return focus to the original button\n                button.focus();\n            }\n        });\n\n        event.stopPropagation();\n    }\n\n    showPanel() {\n        // clear any existing filters\n        this.filter$.next('');\n\n        // show the panel\n        this.panelOpen = true;\n    }\n\n    onPanelEvent(open: boolean): void {\n        // if closing indication that no field was chosen\n        if (!open) {\n            this._field$.next(null);\n        }\n    }\n\n    selectField(field: SearchBuilderField): void {\n        if (field) {\n            // emit the selected field\n            this._field$.next(field);\n\n            // close the panel\n            this.panelOpen = false;\n        }\n    }\n\n    getCustodians(): string[] {\n        const custodians: string[] = [];\n\n        for (let idx = 0; idx < 20; idx++) {\n            custodians.push(chance.name());\n        }\n\n        return custodians;\n    }\n\n    modalShown(): void {\n        // Set focus on the first field in the keywords group\n        this._searchBuilderFocusService.setFocus('keywords', 0);\n    }\n}\n\ninterface SearchBuilderField {\n    title: string;\n    type: string;\n}\n"}},94114:function(n){n.exports={snippet:'components<span class="token operator">:</span> SearchBuilderComponentDefinition<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>\n    <span class="token punctuation">{</span>\n        name<span class="token operator">:</span> <span class="token string">\'author\'</span><span class="token punctuation">,</span>\n        component<span class="token operator">:</span> SearchTextComponent<span class="token punctuation">,</span>\n        config<span class="token operator">:</span> <span class="token punctuation">{</span>\n            label<span class="token operator">:</span> <span class="token string">\'Author\'</span><span class="token punctuation">,</span>\n            placeholder<span class="token operator">:</span> <span class="token string">\'Enter an Author\'</span>\n        <span class="token punctuation">}</span> <span class="token keyword">as</span> SearchTextConfig\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span>\n        name<span class="token operator">:</span> <span class="token string">\'custodian\'</span><span class="token punctuation">,</span>\n        component<span class="token operator">:</span> SearchSelectComponent<span class="token punctuation">,</span>\n        config<span class="token operator">:</span> <span class="token punctuation">{</span>\n            label<span class="token operator">:</span> <span class="token string">\'Custodian\'</span><span class="token punctuation">,</span>\n            placeholder<span class="token operator">:</span> <span class="token string">\'Select Custodians\'</span><span class="token punctuation">,</span>\n            options<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token operator">...</span><span class="token punctuation">]</span>\n            multiple<span class="token operator">:</span> <span class="token boolean">true</span>\n        <span class="token punctuation">}</span> <span class="token keyword">as</span> SearchSelectConfig\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span>\n        name<span class="token operator">:</span> <span class="token string">\'date-range\'</span><span class="token punctuation">,</span>\n        component<span class="token operator">:</span> SearchDateRangeComponent<span class="token punctuation">,</span>\n        config<span class="token operator">:</span> <span class="token punctuation">{</span>\n            label<span class="token operator">:</span> <span class="token string">\'Date range\'</span>\n        <span class="token punctuation">}</span> <span class="token keyword">as</span> SearchDateRangeConfig\n    <span class="token punctuation">}</span>\n<span class="token punctuation">]</span><span class="token punctuation">;</span>',example:"components: SearchBuilderComponentDefinition[] = [\n    {\n        name: 'author',\n        component: SearchTextComponent,\n        config: {\n            label: 'Author',\n            placeholder: 'Enter an Author'\n        } as SearchTextConfig\n    },\n    {\n        name: 'custodian',\n        component: SearchSelectComponent,\n        config: {\n            label: 'Custodian',\n            placeholder: 'Select Custodians',\n            options: [...]\n            multiple: true\n        } as SearchSelectConfig\n    },\n    {\n        name: 'date-range',\n        component: SearchDateRangeComponent,\n        config: {\n            label: 'Date range'\n        } as SearchDateRangeConfig\n    }\n];"}},83327:function(n){n.exports={snippet:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>form-control<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>number<span class="token punctuation">"</span></span> <span class="token attr-name">[(ngModel)]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>value<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>',example:'<input class="form-control" type="number" [(ngModel)]="value" />'}},23337:function(n){n.exports={snippet:'<span class="token keyword">import</span> <span class="token punctuation">{</span> Component <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@angular/core\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> BaseSearchComponent <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@ux-aspects/ux-aspects\'</span><span class="token punctuation">;</span>\n\n@<span class="token function">Component</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    selector<span class="token operator">:</span> <span class="token string">\'my-number-search\'</span><span class="token punctuation">,</span>\n    templateUrl<span class="token operator">:</span> <span class="token string">\'./my-number-search.component.html\'</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">MyNumberSearchComponent</span> <span class="token keyword">extends</span> <span class="token class-name">BaseSearchComponent</span> <span class="token punctuation">{</span>\n    type<span class="token operator">:</span> string <span class="token operator">=</span> <span class="token string">\'number\'</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>',example:"import { Component } from '@angular/core';\nimport { BaseSearchComponent } from '@ux-aspects/ux-aspects';\n\n@Component({\n    selector: 'my-number-search',\n    templateUrl: './my-number-search.component.html'\n})\nexport class MyNumberSearchComponent extends BaseSearchComponent {\n    type: string = 'number';\n}"}},78756:function(n){n.exports={snippet:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ux-search-builder</span> <span class="token attr-name">[(query)]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>query<span class="token punctuation">"</span></span> <span class="token attr-name">[components]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>components<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ux-search-builder</span><span class="token punctuation">></span></span>',example:'<ux-search-builder [(query)]="query" [components]="components"></ux-search-builder>'}},35577:function(n){n.exports={snippet:'<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">PageComponent</span> <span class="token punctuation">{</span>\n    components<span class="token operator">:</span> SearchBuilderComponentDefinition<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>\n        <span class="token punctuation">{</span>\n            name<span class="token operator">:</span> <span class="token string">\'number\'</span><span class="token punctuation">,</span>\n            component<span class="token operator">:</span> MyNumberSearchComponent\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n    query<span class="token operator">:</span> SearchBuilderQuery <span class="token operator">=</span> <span class="token punctuation">{</span>\n        numbers<span class="token operator">:</span> <span class="token punctuation">[</span>\n            <span class="token punctuation">{</span>\n                type<span class="token operator">:</span> <span class="token string">\'number\'</span><span class="token punctuation">,</span>\n                value<span class="token operator">:</span> <span class="token number">0</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            <span class="token punctuation">{</span>\n                type<span class="token operator">:</span> <span class="token string">\'number\'</span><span class="token punctuation">,</span>\n                value<span class="token operator">:</span> <span class="token number">22</span>\n            <span class="token punctuation">}</span>\n        <span class="token punctuation">]</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>',example:"export class PageComponent {\n    components: SearchBuilderComponentDefinition[] = [\n        {\n            name: 'number',\n            component: MyNumberSearchComponent\n        }\n    ];\n\n    query: SearchBuilderQuery = {\n        numbers: [\n            {\n                type: 'number',\n                value: 0\n            },\n            {\n                type: 'number',\n                value: 22\n            }\n        ]\n    };\n}"}},92287:function(n){n.exports={snippet:'<span class="token selector">.demo-toolbar</span> <span class="token punctuation">{</span>\n    <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>\n    <span class="token property">width</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>\n    <span class="token property">border</span><span class="token punctuation">:</span> 1px solid #cccccc<span class="token punctuation">;</span>\n    <span class="token property">padding</span><span class="token punctuation">:</span> 4px 8px<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.demo-toolbar > *</span> <span class="token punctuation">{</span>\n    <span class="token property">flex</span><span class="token punctuation">:</span> 1 0 auto<span class="token punctuation">;</span>\n    <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>\n    <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>\n    <span class="token property">align-items</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.demo-toolbar-right</span> <span class="token punctuation">{</span>\n    <span class="token property">justify-content</span><span class="token punctuation">:</span> flex-end<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n',example:".demo-toolbar {\n    display: flex;\n    width: 100%;\n    border: 1px solid #cccccc;\n    padding: 4px 8px;\n}\n\n.demo-toolbar > * {\n    flex: 1 0 auto;\n    position: relative;\n    display: flex;\n    align-items: center;\n}\n\n.demo-toolbar-right {\n    justify-content: flex-end;\n}\n"}},22055:function(n){n.exports={snippet:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>demo-toolbar<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>demo-toolbar-left<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ux-toolbar-search</span> <span class="token attr-name">[(expanded)]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>expanded<span class="token punctuation">"</span></span> <span class="token attr-name">direction</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>right<span class="token punctuation">"</span></span> <span class="token attr-name">(search)</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>onSearch($event)<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">uxToolbarSearchField</span> <span class="token attr-name">#searchField</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>form-control<span class="token punctuation">"</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Search<span class="token punctuation">"</span></span>\n                <span class="token attr-name">aria-label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Search<span class="token punctuation">"</span></span> <span class="token attr-name">[(ngModel)]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>searchText<span class="token punctuation">"</span></span>\n                <span class="token attr-name">[class.ux-toolbar-search-clear-offset]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>searchText<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">uxToolbarSearchButton</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>btn btn-link btn-icon button-secondary<span class="token punctuation">"</span></span>\n                <span class="token attr-name">aria-label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Toggle Search<span class="token punctuation">"</span></span> <span class="token attr-name">uxTooltip</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Search<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ux-icon</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>search<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ux-icon</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">*ngIf</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>searchText<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span>\n                <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>btn btn-link btn-icon button-secondary ux-toolbar-search-clear<span class="token punctuation">"</span></span>\n                <span class="token attr-name">(click)</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>searchText = <span class="token punctuation">\'</span><span class="token punctuation">\'</span>; searchField.focus()<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ux-icon</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>close<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ux-icon</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ux-toolbar-search</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>btn btn-link btn-icon button-secondary<span class="token punctuation">"</span></span> <span class="token attr-name">uxTooltip</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Add<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ux-icon</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>add<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ux-icon</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>btn btn-link btn-icon button-secondary<span class="token punctuation">"</span></span> <span class="token attr-name">uxTooltip</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Edit<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ux-icon</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>edit<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ux-icon</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>demo-toolbar-right<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>btn btn-link btn-icon button-secondary<span class="token punctuation">"</span></span> <span class="token attr-name">uxTooltip</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Grid View<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ux-icon</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>grid<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ux-icon</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>btn btn-link btn-icon button-secondary<span class="token punctuation">"</span></span> <span class="token attr-name">uxTooltip</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>List View<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ux-icon</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>list<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ux-icon</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ux-toolbar-search</span> <span class="token attr-name">direction</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>left<span class="token punctuation">"</span></span> <span class="token attr-name">(search)</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>onSearchRight($event)<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">uxToolbarSearchField</span> <span class="token attr-name">#searchFieldRight</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>form-control<span class="token punctuation">"</span></span>\n                <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Search<span class="token punctuation">"</span></span> <span class="token attr-name">aria-label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Search<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">uxToolbarSearchButton</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>btn btn-link btn-icon button-secondary<span class="token punctuation">"</span></span>\n                <span class="token attr-name">aria-label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Toggle Search<span class="token punctuation">"</span></span> <span class="token attr-name">uxTooltip</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Search<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ux-icon</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>search<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ux-icon</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ux-toolbar-search</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>m-t-md<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Searched for: <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>strong</span><span class="token punctuation">></span></span>{{searchedFor}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>strong</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>',example:'<div class="demo-toolbar">\n\n    <div class="demo-toolbar-left">\n        <ux-toolbar-search [(expanded)]="expanded" direction="right" (search)="onSearch($event)">\n            <input uxToolbarSearchField #searchField type="text" class="form-control" placeholder="Search"\n                aria-label="Search" [(ngModel)]="searchText"\n                [class.ux-toolbar-search-clear-offset]="searchText">\n            <button uxToolbarSearchButton type="button" class="btn btn-link btn-icon button-secondary"\n                aria-label="Toggle Search" uxTooltip="Search">\n                <ux-icon name="search"></ux-icon>\n            </button>\n            <button *ngIf="searchText" type="button"\n                class="btn btn-link btn-icon button-secondary ux-toolbar-search-clear"\n                (click)="searchText = \'\'; searchField.focus()">\n                <ux-icon name="close"></ux-icon>\n            </button>\n        </ux-toolbar-search>\n        <button type="button" class="btn btn-link btn-icon button-secondary" uxTooltip="Add">\n            <ux-icon name="add"></ux-icon>\n        </button>\n        <button type="button" class="btn btn-link btn-icon button-secondary" uxTooltip="Edit">\n            <ux-icon name="edit"></ux-icon>\n        </button>\n    </div>\n\n    <div class="demo-toolbar-right">\n        <button type="button" class="btn btn-link btn-icon button-secondary" uxTooltip="Grid View">\n            <ux-icon name="grid"></ux-icon>\n        </button>\n        <button type="button" class="btn btn-link btn-icon button-secondary" uxTooltip="List View">\n            <ux-icon name="list"></ux-icon>\n        </button>\n        <ux-toolbar-search direction="left" (search)="onSearchRight($event)">\n            <input uxToolbarSearchField #searchFieldRight type="text" class="form-control"\n                placeholder="Search" aria-label="Search">\n            <button uxToolbarSearchButton type="button" class="btn btn-link btn-icon button-secondary"\n                aria-label="Toggle Search" uxTooltip="Search">\n                <ux-icon name="search"></ux-icon>\n            </button>\n        </ux-toolbar-search>\n    </div>\n\n</div>\n\n<p class="m-t-md">Searched for: <strong>{{searchedFor}}</strong></p>'}},94332:function(n){n.exports={snippet:'<span class="token keyword">import</span> <span class="token punctuation">{</span> Component<span class="token punctuation">,</span> ElementRef<span class="token punctuation">,</span> ViewChild <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@angular/core\'</span><span class="token punctuation">;</span>\n\n@<span class="token function">Component</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    selector<span class="token operator">:</span> <span class="token string">\'app\'</span><span class="token punctuation">,</span>\n    templateUrl<span class="token operator">:</span> <span class="token string">\'./app.component.html\'</span><span class="token punctuation">,</span>\n    styleUrls<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">\'./app.component.css\'</span><span class="token punctuation">]</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">AppComponent</span> <span class="token punctuation">{</span>\n\n    expanded<span class="token operator">:</span> boolean<span class="token punctuation">;</span>\n    searchText<span class="token operator">:</span> string<span class="token punctuation">;</span>\n    searchedFor<span class="token operator">:</span> string <span class="token operator">=</span> <span class="token string">\'\'</span><span class="token punctuation">;</span>\n\n    @<span class="token function">ViewChild</span><span class="token punctuation">(</span><span class="token string">\'searchFieldRight\'</span><span class="token punctuation">)</span>\n    searchFieldRight<span class="token operator">:</span> ElementRef<span class="token punctuation">;</span>\n\n    <span class="token function">onSearch</span><span class="token punctuation">(</span><span class="token parameter">searchText<span class="token operator">:</span> string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token comment">// Execute search here</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>searchedFor <span class="token operator">=</span> searchText<span class="token punctuation">;</span>\n\n        <span class="token comment">// Close the search field if needed</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>expanded <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token function">onSearchRight</span><span class="token punctuation">(</span><span class="token parameter">searchText<span class="token operator">:</span> string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token comment">// Execute search here</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>searchedFor <span class="token operator">=</span> searchText<span class="token punctuation">;</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>searchFieldRight<span class="token punctuation">.</span>nativeElement<span class="token punctuation">.</span><span class="token function">blur</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>',example:"import { Component, ElementRef, ViewChild } from '@angular/core';\n\n@Component({\n    selector: 'app',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n    expanded: boolean;\n    searchText: string;\n    searchedFor: string = '';\n\n    @ViewChild('searchFieldRight')\n    searchFieldRight: ElementRef;\n\n    onSearch(searchText: string) {\n        // Execute search here\n        this.searchedFor = searchText;\n\n        // Close the search field if needed\n        this.expanded = false;\n    }\n\n    onSearchRight(searchText: string) {\n        // Execute search here\n        this.searchedFor = searchText;\n        this.searchFieldRight.nativeElement.blur();\n    }\n}"}},55906:function(n,a,t){var s={"./app.css":46944,"./app.html":33401,"./app.ts":86842,"./component-definition.ts":94114,"./custom-component.html":83327,"./custom-component.ts":23337,"./search-builder-components.html":78756,"./search-builder-components.ts":35577};function e(n){var a=p(n);return t(a)}function p(n){if(!t.o(s,n)){var a=new Error("Cannot find module '"+n+"'");throw a.code="MODULE_NOT_FOUND",a}return s[n]}e.keys=function(){return Object.keys(s)},e.resolve=p,n.exports=e,e.id=55906},67068:function(n,a,t){var s={"./app.css":92287,"./app.html":22055,"./app.ts":94332};function e(n){var a=p(n);return t(a)}function p(n){if(!t.o(s,n)){var a=new Error("Cannot find module '"+n+"'");throw a.code="MODULE_NOT_FOUND",a}return s[n]}e.keys=function(){return Object.keys(s)},e.resolve=p,n.exports=e,e.id=67068},32619:function(n,a,t){"use strict";t.r(a),t.d(a,{ComponentsSearchModule:function(){return A}});var s,e=t(18554),p=t(56475),o=t(65410),c=t(94121),l=t(3955),u=t(70710),i=t(26966),r=t(95892),k=t(36941),d=(t(67793),t(17119)),m=t(61331),h=t(19553),x=t(25339),f=t(86093),g=t(62536),b=t(29872),y=t(95490),S=t(70734),v=t(95445),w=(s=function(n,a){return(s=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,a){n.__proto__=a}||function(n,a){for(var t in a)Object.prototype.hasOwnProperty.call(a,t)&&(n[t]=a[t])})(n,a)},function(n,a){if("function"!=typeof a&&null!==a)throw new TypeError("Class extends value "+String(a)+" is not a constructor or null");function t(){this.constructor=n}s(n,a),n.prototype=null===a?Object.create(a):(t.prototype=a.prototype,new t)}),E=function(n,a){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(n,a)},C=["searchBuilderContent"];function T(n,a){if(1&n&&(b["\u0275\u0275elementStart"](0,"ux-select-list-item",57),b["\u0275\u0275text"](1),b["\u0275\u0275elementEnd"]()),2&n){var t=a.$implicit;b["\u0275\u0275property"]("data",t),b["\u0275\u0275advance"](1),b["\u0275\u0275textInterpolate1"]("\n                            ",t.title,"\n                        ")}}function q(n,a){if(1&n){var t=b["\u0275\u0275getCurrentView"]();b["\u0275\u0275elementStart"](0,"ux-select-list",55),b["\u0275\u0275listener"]("selectedChange",(function(n){return b["\u0275\u0275restoreView"](t),b["\u0275\u0275nextContext"](2).selectField(n[0])})),b["\u0275\u0275text"](1,"\n                        "),b["\u0275\u0275template"](2,T,2,2,"ux-select-list-item",56),b["\u0275\u0275text"](3,"\n                    "),b["\u0275\u0275elementEnd"]()}if(2&n){var s=b["\u0275\u0275nextContext"](2);b["\u0275\u0275advance"](2),b["\u0275\u0275property"]("ngForOf",s.filteredFields)}}var F=function(){return{show:!0,animated:!1,focus:!1}};function O(n,a){if(1&n){var t=b["\u0275\u0275getCurrentView"]();b["\u0275\u0275elementStart"](0,"div",31,32),b["\u0275\u0275listener"]("onShown",(function(){return b["\u0275\u0275restoreView"](t),b["\u0275\u0275nextContext"]().modalShown()}))("onHidden",(function(){return b["\u0275\u0275restoreView"](t),b["\u0275\u0275nextContext"]().cancel()})),b["\u0275\u0275text"](2,"\n\n    "),b["\u0275\u0275elementStart"](3,"div",33),b["\u0275\u0275text"](4,"\n\n        "),b["\u0275\u0275elementStart"](5,"div",34),b["\u0275\u0275text"](6,"\n\n            "),b["\u0275\u0275text"](7,"\n            "),b["\u0275\u0275elementStart"](8,"div",35),b["\u0275\u0275listener"]("click",(function(){return b["\u0275\u0275restoreView"](t),b["\u0275\u0275nextContext"]().cancel()})),b["\u0275\u0275text"](9,"\n                "),b["\u0275\u0275elementStart"](10,"button",36),b["\u0275\u0275text"](11,"\n                    "),b["\u0275\u0275element"](12,"ux-icon",37),b["\u0275\u0275text"](13,"\n                "),b["\u0275\u0275elementEnd"](),b["\u0275\u0275text"](14,"\n            "),b["\u0275\u0275elementEnd"](),b["\u0275\u0275text"](15,"\n\n            "),b["\u0275\u0275text"](16,"\n            "),b["\u0275\u0275elementStart"](17,"div",38),b["\u0275\u0275text"](18,"\n                "),b["\u0275\u0275element"](19,"div",39),b["\u0275\u0275text"](20,"\n                "),b["\u0275\u0275elementStart"](21,"h1",40),b["\u0275\u0275text"](22,"Search builder"),b["\u0275\u0275elementEnd"](),b["\u0275\u0275text"](23,"\n            "),b["\u0275\u0275elementEnd"](),b["\u0275\u0275text"](24,"\n\n            "),b["\u0275\u0275elementStart"](25,"div",41,42),b["\u0275\u0275text"](27,"\n\n                "),b["\u0275\u0275text"](28,"\n                "),b["\u0275\u0275elementStart"](29,"ux-search-builder",43),b["\u0275\u0275listener"]("queryChange",(function(n){return b["\u0275\u0275restoreView"](t),b["\u0275\u0275nextContext"]().query=n}))("valid",(function(n){return b["\u0275\u0275restoreView"](t),b["\u0275\u0275nextContext"]().valid=n})),b["\u0275\u0275text"](30,"\n\n                    "),b["\u0275\u0275elementStart"](31,"ux-search-builder-group",44),b["\u0275\u0275listener"]("add",(function(){return b["\u0275\u0275restoreView"](t),b["\u0275\u0275nextContext"]().addKeyword()})),b["\u0275\u0275text"](32,"\n                    "),b["\u0275\u0275elementEnd"](),b["\u0275\u0275text"](33,"\n\n                    "),b["\u0275\u0275elementStart"](34,"ux-search-builder-group",45),b["\u0275\u0275listener"]("add",(function(n){return b["\u0275\u0275restoreView"](t),b["\u0275\u0275nextContext"]().addField("any",n)})),b["\u0275\u0275text"](35,"\n                    "),b["\u0275\u0275elementEnd"](),b["\u0275\u0275text"](36,"\n\n                    "),b["\u0275\u0275elementStart"](37,"ux-search-builder-group",46),b["\u0275\u0275listener"]("add",(function(n){return b["\u0275\u0275restoreView"](t),b["\u0275\u0275nextContext"]().addField("all",n)})),b["\u0275\u0275text"](38,"\n                    "),b["\u0275\u0275elementEnd"](),b["\u0275\u0275text"](39,"\n\n                    "),b["\u0275\u0275elementStart"](40,"ux-search-builder-group",47),b["\u0275\u0275listener"]("add",(function(n){return b["\u0275\u0275restoreView"](t),b["\u0275\u0275nextContext"]().addField("none",n)})),b["\u0275\u0275text"](41,"\n                    "),b["\u0275\u0275elementEnd"](),b["\u0275\u0275text"](42,"\n\n                "),b["\u0275\u0275elementEnd"](),b["\u0275\u0275text"](43,"\n\n            "),b["\u0275\u0275elementEnd"](),b["\u0275\u0275text"](44,"\n\n            "),b["\u0275\u0275text"](45,"\n            "),b["\u0275\u0275elementStart"](46,"div",48),b["\u0275\u0275text"](47,"\n                "),b["\u0275\u0275elementStart"](48,"button",49),b["\u0275\u0275listener"]("click",(function(){return b["\u0275\u0275restoreView"](t),b["\u0275\u0275nextContext"]().save()})),b["\u0275\u0275text"](49,"\n                    Search\n                "),b["\u0275\u0275elementEnd"](),b["\u0275\u0275text"](50,"\n                "),b["\u0275\u0275elementStart"](51,"button",50),b["\u0275\u0275listener"]("click",(function(){return b["\u0275\u0275restoreView"](t),b["\u0275\u0275nextContext"]().cancel()})),b["\u0275\u0275text"](52,"Cancel"),b["\u0275\u0275elementEnd"](),b["\u0275\u0275text"](53,"\n            "),b["\u0275\u0275elementEnd"](),b["\u0275\u0275text"](54,"\n\n            "),b["\u0275\u0275text"](55,"\n            "),b["\u0275\u0275elementStart"](56,"ux-item-display-panel",51),b["\u0275\u0275listener"]("visibleChange",(function(n){return b["\u0275\u0275restoreView"](t),b["\u0275\u0275nextContext"]().panelOpen=n}))("visibleChange",(function(n){return b["\u0275\u0275restoreView"](t),b["\u0275\u0275nextContext"]().onPanelEvent(n)})),b["\u0275\u0275text"](57,"\n\n                "),b["\u0275\u0275elementStart"](58,"div",52),b["\u0275\u0275listener"]("keydown.esc",(function(n){return b["\u0275\u0275restoreView"](t),b["\u0275\u0275nextContext"]().panelOpen=!1,n.stopPropagation()})),b["\u0275\u0275text"](59,"\n\n                    "),b["\u0275\u0275text"](60,"\n                    "),b["\u0275\u0275elementStart"](61,"input",53),b["\u0275\u0275listener"]("ngModelChange",(function(n){return b["\u0275\u0275restoreView"](t),b["\u0275\u0275nextContext"]().filter$.next(n)})),b["\u0275\u0275pipe"](62,"async"),b["\u0275\u0275elementEnd"](),b["\u0275\u0275text"](63,"\n\n                    "),b["\u0275\u0275text"](64,"\n                    "),b["\u0275\u0275template"](65,q,4,1,"ux-select-list",54),b["\u0275\u0275text"](66,"\n\n                "),b["\u0275\u0275elementEnd"](),b["\u0275\u0275text"](67,"\n            "),b["\u0275\u0275elementEnd"](),b["\u0275\u0275text"](68,"\n        "),b["\u0275\u0275elementEnd"](),b["\u0275\u0275text"](69,"\n    "),b["\u0275\u0275elementEnd"](),b["\u0275\u0275text"](70,"\n"),b["\u0275\u0275elementEnd"]()}if(2&n){var s=b["\u0275\u0275nextContext"]();b["\u0275\u0275property"]("config",b["\u0275\u0275pureFunction0"](21,F)),b["\u0275\u0275advance"](3),b["\u0275\u0275property"]("cdkTrapFocus",s.modalOpen)("cdkTrapFocusAutoCapture",!0),b["\u0275\u0275advance"](26),b["\u0275\u0275property"]("query",s.query)("components",s.components),b["\u0275\u0275advance"](5),b["\u0275\u0275property"]("showPlaceholder",s.placeholders.any),b["\u0275\u0275advance"](3),b["\u0275\u0275property"]("showPlaceholder",s.placeholders.all),b["\u0275\u0275advance"](3),b["\u0275\u0275property"]("showPlaceholder",s.placeholders.none),b["\u0275\u0275advance"](8),b["\u0275\u0275property"]("disabled",!s.valid),b["\u0275\u0275advance"](8),b["\u0275\u0275classProp"]("search-builder-panel-open",s.panelOpen),b["\u0275\u0275property"]("animate",!0)("inline",!0)("visible",s.panelOpen),b["\u0275\u0275advance"](2),b["\u0275\u0275property"]("cdkTrapFocus",s.panelOpen)("cdkTrapFocusAutoCapture",!0),b["\u0275\u0275advance"](3),b["\u0275\u0275property"]("ngModel",b["\u0275\u0275pipeBind1"](62,19,s.filter$))("focusIf",s.panelOpen),b["\u0275\u0275advance"](4),b["\u0275\u0275property"]("ngIf",s.panelOpen)}}var B=function(n){function a(a,s){var e=n.call(this,t(55906))||this;return e._modalService=a,e._searchBuilderFocusService=s,e.playground={files:{"app.component.ts":e.snippets.raw.appTs,"app.component.html":e.snippets.raw.appHtml,"app.component.css":e.snippets.raw.appCss},modules:[{imports:["ModalModule"],library:"ngx-bootstrap/modal",forRoot:!0},{imports:["A11yModule"],library:"@angular/cdk/a11y"},{imports:["SearchBuilderModule","ItemDisplayPanelModule","SelectListModule","FocusIfModule"],library:"@ux-aspects/ux-aspects"}]},e.query={keywords:[{type:"keyword",value:null}],any:[],all:[],none:[]},e.preview=JSON.stringify(e.query,null,2),e.valid=!0,e.filter$=new d.X(""),e.modalOpen=!1,e.panelOpen=!1,e.placeholders={any:!1,all:!1,none:!1},e.components=[{name:"keyword",component:l.SearchTextComponent,config:{placeholder:"Enter keywords"}},{name:"author",component:l.SearchTextComponent,config:{label:"Author",placeholder:"Enter an Author"}},{name:"custodian",component:l.SearchSelectComponent,config:{label:"Custodian",placeholder:"Select Custodians",options:e.getCustodians(),multiple:!0}},{name:"date-range",component:l.SearchDateRangeComponent,config:{label:"Date range"}},{name:"file-name",component:l.SearchTextComponent,config:{label:"File name",placeholder:"Enter a File Name"}},{name:"file-type",component:l.SearchSelectComponent,config:{label:"File types",placeholder:"Select File Types",options:["AVI","BMP","CSV","DOC","EXE","GIF","JPG","MOV","PDF","PNG","PPT","RTF","TXT","XLS","ZIP"],multiple:!0}},{name:"repository",component:l.SearchSelectComponent,config:{label:"Repository",placeholder:"Enter a Repository",options:["Filesystem","Records Manager","Email","Legacy Email","Archives","Legacy Archives","Miscellaneous"],multiple:!0}},{name:"text",component:l.SearchTextComponent,config:{label:"Text",placeholder:"Enter Text"}}],e.fields=[{title:"Author",type:"author"},{title:"Custodian",type:"custodian"},{title:"Date Range",type:"date-range"},{title:"File Name",type:"file-name"},{title:"File Type",type:"file-type"},{title:"Repository",type:"repository"},{title:"Text",type:"text"}],e._field$=new m.xQ,e._onDestroy=new m.xQ,e._modalService.onHide.pipe((0,h.R)(e._onDestroy)).subscribe((function(){return e.cancel()})),e.filter$.pipe((0,h.R)(e._onDestroy)).subscribe((function(n){e.filteredFields=e.fields.filter((function(a){return a.title.toLowerCase().indexOf(n.toLowerCase())>=0}))})),e}return w(a,n),a.prototype.ngOnDestroy=function(){this._onDestroy.next(),this._onDestroy.complete()},a.prototype.save=function(){this.preview=JSON.stringify(this.query,null,2),this.modalOpen=!1},a.prototype.cancel=function(){this.query=JSON.parse(this.preview),this.modalOpen=!1},a.prototype.addKeyword=function(){var n=this.query.keywords.push({type:"keyword",value:null});this._searchBuilderFocusService.setFocus("keywords",n-1)},a.prototype.addField=function(n,a){var t=this,s=a.currentTarget;this.showPanel(),this.placeholders[n]=!0,this._field$.pipe((0,x.P)()).subscribe((function(a){if(t.placeholders[n]=!1,a){var e=t.query[n].push({type:a.type,value:null});t._searchBuilderFocusService.setFocus(n,e-1)}else s.focus()})),a.stopPropagation()},a.prototype.showPanel=function(){this.filter$.next(""),this.panelOpen=!0},a.prototype.onPanelEvent=function(n){n||this._field$.next(null)},a.prototype.selectField=function(n){n&&(this._field$.next(n),this.panelOpen=!1)},a.prototype.getCustodians=function(){for(var n=[],a=0;a<20;a++)n.push(chance.name());return n},a.prototype.modalShown=function(){this._searchBuilderFocusService.setFocus("keywords",0)},a.\u0275fac=function(n){return new(n||a)(b["\u0275\u0275directiveInject"](u.BsModalService),b["\u0275\u0275directiveInject"](l.SearchBuilderFocusService))},a.\u0275cmp=b["\u0275\u0275defineComponent"]({type:a,selectors:[["uxd-search-builder"]],viewQuery:function(n,a){var t;1&n&&b["\u0275\u0275viewQuery"](C,5),2&n&&b["\u0275\u0275queryRefresh"](t=b["\u0275\u0275loadQuery"]())&&(a.searchBuilderContent=t.first)},features:[b["\u0275\u0275InheritDefinitionFeature"]],decls:469,vars:14,consts:[["type","button",1,"btn","button-primary",3,"click"],["name","deployment","aria-hidden","true",1,"m-r-xs"],["class","modal","tabindex","-1","role","dialog","aria-modal","true","aria-labelledby","search-builder-title","bsModal","",3,"config","onShown","onHidden",4,"ngIf"],["tableTitle","Inputs"],["uxd-api-property","","name","query","type","SearchBuilderQuery"],["uxd-api-property","","name","components","type","SearchBuilderComponentDefinition[]"],["tableTitle","Outputs"],["uxd-api-property","","name","queryChange","type","SearchBuilderQuery"],["uxd-api-property","","name","valid","type","boolean"],["uxd-api-property","","name","id","type","string",3,"required"],["uxd-api-property","","name","header","type","string"],["uxd-api-property","","name","operator","type","'and' | 'or' | 'not'","defaultValue","'and'"],["uxd-api-property","","name","addText","type","string","defaultValue","Add a field"],["uxd-api-property","","name","showPlaceholder","type","boolean","defaultValue","false"],["uxd-api-property","","name","placeholder","type","TemplateRef"],["uxd-api-property","","name","add","type","void"],["uxd-api-property","","name","remove","type","SearchBuilderGroupQuery"],[3,"content"],["uxd-api-property","","name","SearchTextComponent"],[1,"m-b"],["uxd-api-property","","name","SearchDateComponent"],["uxd-api-property","","name","SearchDateRangeComponent"],["routerLink","/components/select"],[3,"minimal"],["heading","HTML"],["heading","TypeScript"],["uxd-api-property","","name","setFocus","args","groupId: string, index: number"],["uxd-api-property","","name","clearFocus"],["href","https://material.angular.io/cdk/a11y/api#CdkTrapFocus"],["routerLink","/components/utilities","fragment","focus-if"],["heading","CSS"],["tabindex","-1","role","dialog","aria-modal","true","aria-labelledby","search-builder-title","bsModal","",1,"modal",3,"config","onShown","onHidden"],["modal","bs-modal"],["role","document",1,"modal-dialog","modal-lg","search-builder-modal",3,"cdkTrapFocus","cdkTrapFocusAutoCapture"],[1,"modal-content"],[1,"search-builder-dismiss",3,"click"],["type","button","aria-label","Close search builder modal",1,"btn","btn-icon","button-dark","btn-circular","btn-close"],["name","close"],[1,"search-builder-header"],[1,"search-builder-icon"],["id","search-builder-title",1,"search-builder-title"],[1,"search-builder-body"],["searchBuilderContent",""],[3,"query","components","queryChange","valid"],["id","keywords","header","Text Keywords","addText","Add a keyword",3,"add"],["id","any","header","ANY of the following","operator","or",3,"showPlaceholder","add"],["id","all","header","ALL of the following",3,"showPlaceholder","add"],["id","none","header","NONE of the following","operator","not",3,"showPlaceholder","add"],[1,"search-builder-footer"],["type","button",1,"btn","button-primary",3,"disabled","click"],["type","button",1,"btn","button-secondary",3,"click"],["header","Add Field","width","400px","role","dialog","aria-label","Field Type Panel","aria-description","Select a field type to add it to the search builder.",1,"search-builder-panel",3,"animate","inline","visible","visibleChange"],["uxItemDisplayPanelContent","",1,"field-list-panel",3,"cdkTrapFocus","cdkTrapFocusAutoCapture","keydown.esc"],["type","text","aria-description","Filter the field type list.","placeholder","Find a field",1,"form-control",3,"ngModel","focusIf","ngModelChange"],["aria-label","Field type list","aria-description","Select a field type to add it to the search builder.","class","field-list",3,"selectedChange",4,"ngIf"],["aria-label","Field type list","aria-description","Select a field type to add it to the search builder.",1,"field-list",3,"selectedChange"],[3,"data",4,"ngFor","ngForOf"],[3,"data"]],template:function(n,a){1&n&&(b["\u0275\u0275elementStart"](0,"button",0),b["\u0275\u0275listener"]("click",(function(){return a.modalOpen=!0})),b["\u0275\u0275text"](1,"\n    "),b["\u0275\u0275element"](2,"ux-icon",1),b["\u0275\u0275text"](3,"\n    Launch Search Builder Modal\n"),b["\u0275\u0275elementEnd"](),b["\u0275\u0275text"](4,"\n\n"),b["\u0275\u0275elementStart"](5,"h4"),b["\u0275\u0275text"](6,"Search Query"),b["\u0275\u0275elementEnd"](),b["\u0275\u0275text"](7,"\n\n"),b["\u0275\u0275elementStart"](8,"pre"),b["\u0275\u0275text"](9),b["\u0275\u0275elementEnd"](),b["\u0275\u0275text"](10,"\n\n"),b["\u0275\u0275text"](11,"\n"),b["\u0275\u0275template"](12,O,71,22,"div",2),b["\u0275\u0275text"](13,"\n\n"),b["\u0275\u0275element"](14,"hr"),b["\u0275\u0275text"](15,"\n\n"),b["\u0275\u0275elementStart"](16,"p"),b["\u0275\u0275text"](17,"\n    The Search Builder provides a visual way for a user to easily build up complex search queries. It can be used both standalone\n    and within a modal.\n"),b["\u0275\u0275elementEnd"](),b["\u0275\u0275text"](18,"\n\n"),b["\u0275\u0275elementStart"](19,"h4"),b["\u0275\u0275text"](20,"Search Builder Component"),b["\u0275\u0275elementEnd"](),b["\u0275\u0275text"](21,"\n\n"),b["\u0275\u0275elementStart"](22,"p"),b["\u0275\u0275text"](23,"\n    The "),b["\u0275\u0275elementStart"](24,"code"),b["\u0275\u0275text"](25,"ux-search-builder"),b["\u0275\u0275elementEnd"](),b["\u0275\u0275text"](26," component is designed to act as a container for\n    "),b["\u0275\u0275elementStart"](27,"code"),b["\u0275\u0275text"](28,"ux-search-group"),b["\u0275\u0275elementEnd"](),b["\u0275\u0275text"](29," components. It will be responsible for creating the overall search query object. It can also be\n    used to define custom components that can be used to create search queries.\n"),b["\u0275\u0275elementEnd"](),b["\u0275\u0275text"](30,"\n\n"),b["\u0275\u0275elementStart"](31,"p"),b["\u0275\u0275text"](32,"The following properties can be used to interact with and to configure the search builder:"),b["\u0275\u0275elementEnd"](),b["\u0275\u0275text"](33,"\n\n"),b["\u0275\u0275elementStart"](34,"uxd-api-properties",3),b["\u0275\u0275text"](35,"\n    "),b["\u0275\u0275elementStart"](36,"tr",4),b["\u0275\u0275text"](37,"\n        If defined this will populate the search builder with the specified fields and values\n    "),b["\u0275\u0275elementEnd"](),b["\u0275\u0275text"](38,"\n    "),b["\u0275\u0275elementStart"](39,"tr",5),b["\u0275\u0275text"](40,"\n        If specified, this allows custom components to be used within the search builder\n    "),b["\u0275\u0275elementEnd"](),b["\u0275\u0275text"](41,"\n"),b["\u0275\u0275elementEnd"](),b["\u0275\u0275text"](42,"\n\n"),b["\u0275\u0275elementStart"](43,"uxd-api-properties",6),b["\u0275\u0275text"](44,"\n    "),b["\u0275\u0275elementStart"](45,"tr",7),b["\u0275\u0275text"](46,"\n        This event will fire whenever the query has been modified. It will contain the latest query value\n    "),b["\u0275\u0275elementEnd"](),b["\u0275\u0275text"](47,"\n    "),b["\u0275\u0275elementStart"](48,"tr",8),b["\u0275\u0275text"](49,"\n        This will fire whenever the search builders validity changes. It will provide a boolean representing the validity of the search query.\n        A value of "),b["\u0275\u0275elementStart"](50,"code"),b["\u0275\u0275text"](51,"true"),b["\u0275\u0275elementEnd"](),b["\u0275\u0275text"](52," will be given if the query is valid and a value of "),b["\u0275\u0275elementStart"](53,"code"),b["\u0275\u0275text"](54,"false"),b["\u0275\u0275elementEnd"](),b["\u0275\u0275text"](55," when it is invalid.\n    "),b["\u0275\u0275elementEnd"](),b["\u0275\u0275text"](56,"\n"),b["\u0275\u0275elementEnd"](),b["\u0275\u0275text"](57,"\n\n\n"),b["\u0275\u0275elementStart"](58,"h4"),b["\u0275\u0275text"](59,"Search Group Component"),b["\u0275\u0275elementEnd"](),b["\u0275\u0275text"](60,"\n\n"),b["\u0275\u0275elementStart"](61,"p"),b["\u0275\u0275text"](62,"\n    The "),b["\u0275\u0275elementStart"](63,"code"),b["\u0275\u0275text"](64,"ux-search-builder-group"),b["\u0275\u0275elementEnd"](),b["\u0275\u0275text"](65," component allows us to group related search terms. Each group has an operator,\n    either "),b["\u0275\u0275elementStart"](66,"code"),b["\u0275\u0275text"](67,"and"),b["\u0275\u0275elementEnd"](),b["\u0275\u0275text"](68,", "),b["\u0275\u0275elementStart"](69,"code"),b["\u0275\u0275text"](70,"or"),b["\u0275\u0275elementEnd"](),b["\u0275\u0275text"](71," or "),b["\u0275\u0275elementStart"](72,"code"),b["\u0275\u0275text"](73,"not"),b["\u0275\u0275elementEnd"](),b["\u0275\u0275text"](74," to describe how these search terms are related.\n"),b["\u0275\u0275elementEnd"](),b["\u0275\u0275text"](75,"\n\n"),b["\u0275\u0275elementStart"](76,"p"),b["\u0275\u0275text"](77,"\n    The following attributes can be used to customize and configure the "),b["\u0275\u0275elementStart"](78,"code"),b["\u0275\u0275text"](79,"ux-search-builder-group"),b["\u0275\u0275elementEnd"](),b["\u0275\u0275text"](80," component:\n"),b["\u0275\u0275elementEnd"](),b["\u0275\u0275text"](81,"\n\n"),b["\u0275\u0275elementStart"](82,"uxd-api-properties",3),b["\u0275\u0275text"](83,"\n    "),b["\u0275\u0275elementStart"](84,"tr",9),b["\u0275\u0275text"](85,"\n        This is a unique identifier for this group.\n        This will be used in the search query object to identify which fields belong to this group.\n    "),b["\u0275\u0275elementEnd"](),b["\u0275\u0275text"](86,"\n    "),b["\u0275\u0275elementStart"](87,"tr",10),b["\u0275\u0275text"](88,"\n        The header to be displayed above the search group.\n    "),b["\u0275\u0275elementEnd"](),b["\u0275\u0275text"](89,"\n    "),b["\u0275\u0275elementStart"](90,"tr",11),b["\u0275\u0275text"](91,"\n        The operator to be displayed beside the group.\n    "),b["\u0275\u0275elementEnd"](),b["\u0275\u0275text"](92,"\n    "),b["\u0275\u0275elementStart"](93,"tr",12),b["\u0275\u0275text"](94,"\n        Allows customization of the text beside the add field button.\n    "),b["\u0275\u0275elementEnd"](),b["\u0275\u0275text"](95,"\n    "),b["\u0275\u0275elementStart"](96,"tr",13),b["\u0275\u0275text"](97,"\n        If true a placeholder field will be displayed. One common use case is to display a panel\n        containing a list of potential fields when the user clicks the 'Add a field' button. This allows\n        the user to pick the desired field. The placeholder could be shown until a field is selected.\n    "),b["\u0275\u0275elementEnd"](),b["\u0275\u0275text"](98,"\n    "),b["\u0275\u0275elementStart"](99,"tr",14),b["\u0275\u0275text"](100,"\n        Allows a custom template to be used as the placeholder.\n    "),b["\u0275\u0275elementEnd"](),b["\u0275\u0275text"](101,"\n\n"),b["\u0275\u0275elementEnd"](),b["\u0275\u0275text"](102,"\n\n"),b["\u0275\u0275elementStart"](103,"uxd-api-properties",6),b["\u0275\u0275text"](104,"\n    "),b["\u0275\u0275elementStart"](105,"tr",15),b["\u0275\u0275text"](106,"\n        This will be fired when the user clicks the 'Add a field' button. This event should be used to add\n        a new entry to the query object.\n    "),b["\u0275\u0275elementEnd"](),b["\u0275\u0275text"](107,"\n    "),b["\u0275\u0275elementStart"](108,"tr",16),b["\u0275\u0275text"](109,"\n        This will be fired when the user clicks the remove button. The field being removed will be emitted.\n    "),b["\u0275\u0275elementEnd"](),b["\u0275\u0275text"](110,"\n"),b["\u0275\u0275elementEnd"](),b["\u0275\u0275text"](111,"\n\n"),b["\u0275\u0275elementStart"](112,"h4"),b["\u0275\u0275text"](113,"Search Components"),b["\u0275\u0275elementEnd"](),b["\u0275\u0275text"](114,"\n\n"),b["\u0275\u0275elementStart"](115,"p"),b["\u0275\u0275text"](116,"\n    The Search Builder comes with several prebuilt components for you to easily consume and configure.\n    To begin consuming these components you must first create a components array in your component class.\n    This allows you to define each type of field you need, to specify which component should be used and\n    provide any additional configuration.\n"),b["\u0275\u0275elementEnd"](),b["\u0275\u0275text"](117,"\n\n"),b["\u0275\u0275element"](118,"uxd-snippet",17),b["\u0275\u0275text"](119,"\n\n"),b["\u0275\u0275elementStart"](120,"p"),b["\u0275\u0275text"](121,"The following prebuilt components are available to use:"),b["\u0275\u0275elementEnd"](),b["\u0275\u0275text"](122,"\n\n"),b["\u0275\u0275elementStart"](123,"uxd-api-properties"),b["\u0275\u0275text"](124,"\n    "),b["\u0275\u0275elementStart"](125,"tr",18),b["\u0275\u0275text"](126,"\n        "),b["\u0275\u0275elementStart"](127,"p",19),b["\u0275\u0275text"](128,"A simple text input component. The following configuration options are available:"),b["\u0275\u0275elementEnd"](),b["\u0275\u0275text"](129,"\n\n        "),b["\u0275\u0275elementStart"](130,"ul"),b["\u0275\u0275text"](131,"\n            "),b["\u0275\u0275elementStart"](132,"li"),b["\u0275\u0275elementStart"](133,"code"),b["\u0275\u0275text"](134,"label"),b["\u0275\u0275elementEnd"](),b["\u0275\u0275text"](135," - If specified will display a label above the input field."),b["\u0275\u0275elementEnd"](),b["\u0275\u0275text"](136,"\n            "),b["\u0275\u0275elementStart"](137,"li"),b["\u0275\u0275elementStart"](138,"code"),b["\u0275\u0275text"](139,"placeholder"),b["\u0275\u0275elementEnd"](),b["\u0275\u0275text"](140," - If specified will display a placeholder in the input field."),b["\u0275\u0275elementEnd"](),b["\u0275\u0275text"](141,"\n            "),b["\u0275\u0275elementStart"](142,"li"),b["\u0275\u0275elementStart"](143,"code"),b["\u0275\u0275text"](144,"validation"),b["\u0275\u0275elementEnd"](),b["\u0275\u0275text"](145," - If specified will allow custom validation to be used to determine if this field is valid."),b["\u0275\u0275elementEnd"](),b["\u0275\u0275text"](146,"\n        "),b["\u0275\u0275elementEnd"](),b["\u0275\u0275text"](147,"\n    "),b["\u0275\u0275elementEnd"](),b["\u0275\u0275text"](148,"\n\n    "),b["\u0275\u0275elementStart"](149,"tr",20),b["\u0275\u0275text"](150,"\n        "),b["\u0275\u0275elementStart"](151,"p",19),b["\u0275\u0275text"](152,"A date picker component. The following configuration options are available:"),b["\u0275\u0275elementEnd"](),b["\u0275\u0275text"](153,"\n\n        "),b["\u0275\u0275elementStart"](154,"ul"),b["\u0275\u0275text"](155,"\n            "),b["\u0275\u0275elementStart"](156,"li"),b["\u0275\u0275elementStart"](157,"code"),b["\u0275\u0275text"](158,"label"),b["\u0275\u0275elementEnd"](),b["\u0275\u0275text"](159," - If specified will display a label above the input field."),b["\u0275\u0275elementEnd"](),b["\u0275\u0275text"](160,"\n            "),b["\u0275\u0275elementStart"](161,"li"),b["\u0275\u0275elementStart"](162,"code"),b["\u0275\u0275text"](163,"placeholder"),b["\u0275\u0275elementEnd"](),b["\u0275\u0275text"](164," - If specified will display a placeholder in the input field."),b["\u0275\u0275elementEnd"](),b["\u0275\u0275text"](165,"\n            "),b["\u0275\u0275elementStart"](166,"li"),b["\u0275\u0275elementStart"](167,"code"),b["\u0275\u0275text"](168,"validation"),b["\u0275\u0275elementEnd"](),b["\u0275\u0275text"](169," - If specified will allow custom validation to be used to determine if this field is valid."),b["\u0275\u0275elementEnd"](),b["\u0275\u0275text"](170,"\n        "),b["\u0275\u0275elementEnd"](),b["\u0275\u0275text"](171,"\n    "),b["\u0275\u0275elementEnd"](),b["\u0275\u0275text"](172,"\n\n    "),b["\u0275\u0275elementStart"](173,"tr",21),b["\u0275\u0275text"](174,"\n        "),b["\u0275\u0275elementStart"](175,"p",19),b["\u0275\u0275text"](176,"A date range picker component. The following configuration options are available:"),b["\u0275\u0275elementEnd"](),b["\u0275\u0275text"](177,"\n\n        "),b["\u0275\u0275elementStart"](178,"ul"),b["\u0275\u0275text"](179,"\n            "),b["\u0275\u0275elementStart"](180,"li"),b["\u0275\u0275elementStart"](181,"code"),b["\u0275\u0275text"](182,"label"),b["\u0275\u0275elementEnd"](),b["\u0275\u0275text"](183," - If specified will display a label above the input field."),b["\u0275\u0275elementEnd"](),b["\u0275\u0275text"](184,"\n            "),b["\u0275\u0275elementStart"](185,"li"),b["\u0275\u0275elementStart"](186,"code"),b["\u0275\u0275text"](187,"validation"),b["\u0275\u0275elementEnd"](),b["\u0275\u0275text"](188," - If specified will allow custom validation to be used to determine if the fields are valid."),b["\u0275\u0275elementEnd"](),b["\u0275\u0275text"](189,"\n            "),b["\u0275\u0275elementStart"](190,"li"),b["\u0275\u0275elementStart"](191,"code"),b["\u0275\u0275text"](192,"fromLabel"),b["\u0275\u0275elementEnd"](),b["\u0275\u0275text"](193," - Defines the text displayed beside the first date picker. Defaults to "),b["\u0275\u0275elementStart"](194,"code"),b["\u0275\u0275text"](195,"From"),b["\u0275\u0275elementEnd"](),b["\u0275\u0275text"](196,"."),b["\u0275\u0275elementEnd"](),b["\u0275\u0275text"](197,"\n            "),b["\u0275\u0275elementStart"](198,"li"),b["\u0275\u0275elementStart"](199,"code"),b["\u0275\u0275text"](200,"toLabel"),b["\u0275\u0275elementEnd"](),b["\u0275\u0275text"](201," - Defines the text displayed beside the second date picker. Defaults to "),b["\u0275\u0275elementStart"](202,"code"),b["\u0275\u0275text"](203,"To"),b["\u0275\u0275elementEnd"](),b["\u0275\u0275text"](204,"."),b["\u0275\u0275elementEnd"](),b["\u0275\u0275text"](205,"\n            "),b["\u0275\u0275elementStart"](206,"li"),b["\u0275\u0275elementStart"](207,"code"),b["\u0275\u0275text"](208,"fromPlaceholder"),b["\u0275\u0275elementEnd"](),b["\u0275\u0275text"](209," - If specified will display a placeholder in the first date picker."),b["\u0275\u0275elementEnd"](),b["\u0275\u0275text"](210,"\n            "),b["\u0275\u0275elementStart"](211,"li"),b["\u0275\u0275elementStart"](212,"code"),b["\u0275\u0275text"](213,"toPlaceholder"),b["\u0275\u0275elementEnd"](),b["\u0275\u0275text"](214," - If specified will display a placeholder in the second date picker."),b["\u0275\u0275elementEnd"](),b["\u0275\u0275text"](215,"\n        "),b["\u0275\u0275elementEnd"](),b["\u0275\u0275text"](216,"\n    "),b["\u0275\u0275elementEnd"](),b["\u0275\u0275text"](217,"\n\n    "),b["\u0275\u0275elementStart"](218,"tr",20),b["\u0275\u0275text"](219,"\n        "),b["\u0275\u0275elementStart"](220,"p",19),b["\u0275\u0275text"](221,"A select component allowing both single and multiple selection. The following configuration options are available:"),b["\u0275\u0275elementEnd"](),b["\u0275\u0275text"](222,"\n\n        "),b["\u0275\u0275elementStart"](223,"ul"),b["\u0275\u0275text"](224,"\n            "),b["\u0275\u0275elementStart"](225,"li"),b["\u0275\u0275elementStart"](226,"code"),b["\u0275\u0275text"](227,"label"),b["\u0275\u0275elementEnd"](),b["\u0275\u0275text"](228," - If specified will display a label above the input field."),b["\u0275\u0275elementEnd"](),b["\u0275\u0275text"](229,"\n            "),b["\u0275\u0275elementStart"](230,"li"),b["\u0275\u0275elementStart"](231,"code"),b["\u0275\u0275text"](232,"placeholder"),b["\u0275\u0275elementEnd"](),b["\u0275\u0275text"](233," - If specified will display a placeholder in the input field."),b["\u0275\u0275elementEnd"](),b["\u0275\u0275text"](234,"\n            "),b["\u0275\u0275elementStart"](235,"li"),b["\u0275\u0275elementStart"](236,"code"),b["\u0275\u0275text"](237,"validation"),b["\u0275\u0275elementEnd"](),b["\u0275\u0275text"](238," - If specified will allow custom validation to be used to determine if this field is valid."),b["\u0275\u0275elementEnd"](),b["\u0275\u0275text"](239,"\n            "),b["\u0275\u0275elementStart"](240,"li"),b["\u0275\u0275elementStart"](241,"code"),b["\u0275\u0275text"](242,"options"),b["\u0275\u0275elementEnd"](),b["\u0275\u0275text"](243," - A list of selectable options or a function to get options."),b["\u0275\u0275elementEnd"](),b["\u0275\u0275text"](244,"\n            "),b["\u0275\u0275elementStart"](245,"li"),b["\u0275\u0275elementStart"](246,"code"),b["\u0275\u0275text"](247,"multiple"),b["\u0275\u0275elementEnd"](),b["\u0275\u0275text"](248," - Specifies whether to allow multiple items to be selected."),b["\u0275\u0275elementEnd"](),b["\u0275\u0275text"](249,"\n            "),b["\u0275\u0275elementStart"](250,"li"),b["\u0275\u0275elementStart"](251,"code"),b["\u0275\u0275text"](252,"dropDirection"),b["\u0275\u0275elementEnd"](),b["\u0275\u0275text"](253," - Specifies whether the dropdown should appear below or above the input field."),b["\u0275\u0275elementEnd"](),b["\u0275\u0275text"](254,"\n            "),b["\u0275\u0275elementStart"](255,"li"),b["\u0275\u0275elementStart"](256,"code"),b["\u0275\u0275text"](257,"allowNull"),b["\u0275\u0275elementEnd"](),b["\u0275\u0275text"](258," - Controls whether the value of the single select control can be cleared by deleting the selected value in the input field."),b["\u0275\u0275elementEnd"](),b["\u0275\u0275text"](259,"\n            "),b["\u0275\u0275elementStart"](260,"li"),b["\u0275\u0275elementStart"](261,"code"),b["\u0275\u0275text"](262,"disabled"),b["\u0275\u0275elementEnd"](),b["\u0275\u0275text"](263," - Controls the disabled state of the tag input."),b["\u0275\u0275elementEnd"](),b["\u0275\u0275text"](264,"\n            "),b["\u0275\u0275elementStart"](265,"li"),b["\u0275\u0275elementStart"](266,"code"),b["\u0275\u0275text"](267,"maxHeight"),b["\u0275\u0275elementEnd"](),b["\u0275\u0275text"](268," - The maximum height of the typeahead dropdown, as a CSS value."),b["\u0275\u0275elementEnd"](),b["\u0275\u0275text"](269,"\n            "),b["\u0275\u0275elementStart"](270,"li"),b["\u0275\u0275elementStart"](271,"code"),b["\u0275\u0275text"](272,"pageSize"),b["\u0275\u0275elementEnd"](),b["\u0275\u0275text"](273," - The number of options to request in a page."),b["\u0275\u0275elementEnd"](),b["\u0275\u0275text"](274,"\n            "),b["\u0275\u0275elementStart"](275,"li"),b["\u0275\u0275elementStart"](276,"code"),b["\u0275\u0275text"](277,"loadingTemplate"),b["\u0275\u0275elementEnd"](),b["\u0275\u0275text"](278," - A template which will be rendered in the dropdown while options are being loaded."),b["\u0275\u0275elementEnd"](),b["\u0275\u0275text"](279,"\n            "),b["\u0275\u0275elementStart"](280,"li"),b["\u0275\u0275elementStart"](281,"code"),b["\u0275\u0275text"](282,"optionTemplate"),b["\u0275\u0275elementEnd"](),b["\u0275\u0275text"](283," - A template which will be rendered in the dropdown for each option."),b["\u0275\u0275elementEnd"](),b["\u0275\u0275text"](284,"\n            "),b["\u0275\u0275elementStart"](285,"li"),b["\u0275\u0275elementStart"](286,"code"),b["\u0275\u0275text"](287,"noOptionsTemplate"),b["\u0275\u0275elementEnd"](),b["\u0275\u0275text"](288," - A template which will be rendered in the dropdown if no options match the current filter value."),b["\u0275\u0275elementEnd"](),b["\u0275\u0275text"](289,"\n        "),b["\u0275\u0275elementEnd"](),b["\u0275\u0275text"](290,"\n\n        "),b["\u0275\u0275elementStart"](291,"p"),b["\u0275\u0275text"](292,"Full information on the select configuration options can be found on the "),b["\u0275\u0275elementStart"](293,"a",22),b["\u0275\u0275text"](294,"select component page"),b["\u0275\u0275elementEnd"](),b["\u0275\u0275text"](295,"."),b["\u0275\u0275elementEnd"](),b["\u0275\u0275text"](296,"\n    "),b["\u0275\u0275elementEnd"](),b["\u0275\u0275text"](297,"\n"),b["\u0275\u0275elementEnd"](),b["\u0275\u0275text"](298,"\n\n"),b["\u0275\u0275elementStart"](299,"h4"),b["\u0275\u0275text"](300,"Custom Search Components"),b["\u0275\u0275elementEnd"](),b["\u0275\u0275text"](301,"\n\n"),b["\u0275\u0275elementStart"](302,"p"),b["\u0275\u0275text"](303,"\n    A custom search component can be created simply by creating an Angular component and having it extend\n    "),b["\u0275\u0275elementStart"](304,"code"),b["\u0275\u0275text"](305,"BaseSearchComponent"),b["\u0275\u0275elementEnd"](),b["\u0275\u0275text"](306,".\n"),b["\u0275\u0275elementEnd"](),b["\u0275\u0275text"](307,"\n\n"),b["\u0275\u0275elementStart"](308,"p"),b["\u0275\u0275text"](309,"\n    Simply give the class a "),b["\u0275\u0275elementStart"](310,"code"),b["\u0275\u0275text"](311,"type"),b["\u0275\u0275elementEnd"](),b["\u0275\u0275text"](312," property which will be the component's identifier, and have it call\n    the "),b["\u0275\u0275elementStart"](313,"code"),b["\u0275\u0275text"](314,"value"),b["\u0275\u0275elementEnd"](),b["\u0275\u0275text"](315," property passing it the latest value when changes are made.\n"),b["\u0275\u0275elementEnd"](),b["\u0275\u0275text"](316,"\n\n"),b["\u0275\u0275elementStart"](317,"p"),b["\u0275\u0275text"](318,"\n    A "),b["\u0275\u0275elementStart"](319,"code"),b["\u0275\u0275text"](320,"config"),b["\u0275\u0275elementEnd"](),b["\u0275\u0275text"](321," object is also available that will contain any configuration options you want to support.\n"),b["\u0275\u0275elementEnd"](),b["\u0275\u0275text"](322,"\n\n"),b["\u0275\u0275elementStart"](323,"p"),b["\u0275\u0275text"](324,"\n    The function can also override the default "),b["\u0275\u0275elementStart"](325,"code"),b["\u0275\u0275text"](326,"validate"),b["\u0275\u0275elementEnd"](),b["\u0275\u0275text"](327," function to provide custom validation. This function should\n    update the "),b["\u0275\u0275elementStart"](328,"code"),b["\u0275\u0275text"](329,"valid"),b["\u0275\u0275elementEnd"](),b["\u0275\u0275text"](330," property on the class.\n"),b["\u0275\u0275elementEnd"](),b["\u0275\u0275text"](331,"\n\n"),b["\u0275\u0275elementStart"](332,"p"),b["\u0275\u0275text"](333,"\n    For example, we can create a component to allow users to enter a number as a search query.\n    The following code can be used to create the component:\n"),b["\u0275\u0275elementEnd"](),b["\u0275\u0275text"](334,"\n\n"),b["\u0275\u0275elementStart"](335,"ux-tabset",23),b["\u0275\u0275text"](336,"\n    "),b["\u0275\u0275elementStart"](337,"ux-tab",24),b["\u0275\u0275text"](338,"\n        "),b["\u0275\u0275element"](339,"uxd-snippet",17),b["\u0275\u0275text"](340,"\n    "),b["\u0275\u0275elementEnd"](),b["\u0275\u0275text"](341,"\n    "),b["\u0275\u0275elementStart"](342,"ux-tab",25),b["\u0275\u0275text"](343,"\n        "),b["\u0275\u0275element"](344,"uxd-snippet",17),b["\u0275\u0275text"](345,"\n    "),b["\u0275\u0275elementEnd"](),b["\u0275\u0275text"](346,"\n"),b["\u0275\u0275elementEnd"](),b["\u0275\u0275text"](347,"\n\n"),b["\u0275\u0275elementStart"](348,"p"),b["\u0275\u0275text"](349,"\n    Custom components should then be defined in the "),b["\u0275\u0275elementStart"](350,"code"),b["\u0275\u0275text"](351,"components"),b["\u0275\u0275elementEnd"](),b["\u0275\u0275text"](352," property on the "),b["\u0275\u0275elementStart"](353,"code"),b["\u0275\u0275text"](354,"ux-search-builder"),b["\u0275\u0275elementEnd"](),b["\u0275\u0275text"](355," component, e.g.:\n"),b["\u0275\u0275elementEnd"](),b["\u0275\u0275text"](356,"\n\n"),b["\u0275\u0275elementStart"](357,"ux-tabset",23),b["\u0275\u0275text"](358,"\n    "),b["\u0275\u0275elementStart"](359,"ux-tab",24),b["\u0275\u0275text"](360,"\n        "),b["\u0275\u0275element"](361,"uxd-snippet",17),b["\u0275\u0275text"](362,"\n    "),b["\u0275\u0275elementEnd"](),b["\u0275\u0275text"](363,"\n    "),b["\u0275\u0275elementStart"](364,"ux-tab",25),b["\u0275\u0275text"](365,"\n        "),b["\u0275\u0275element"](366,"uxd-snippet",17),b["\u0275\u0275text"](367,"\n    "),b["\u0275\u0275elementEnd"](),b["\u0275\u0275text"](368,"\n"),b["\u0275\u0275elementEnd"](),b["\u0275\u0275text"](369,"\n\n"),b["\u0275\u0275elementStart"](370,"blockquote"),b["\u0275\u0275text"](371,"\n    "),b["\u0275\u0275elementStart"](372,"p"),b["\u0275\u0275text"](373,"\n        "),b["\u0275\u0275elementStart"](374,"b"),b["\u0275\u0275text"](375,"Note:"),b["\u0275\u0275elementEnd"](),b["\u0275\u0275text"](376," Any custom search components should be added to the "),b["\u0275\u0275elementStart"](377,"code"),b["\u0275\u0275text"](378,"entryComponents"),b["\u0275\u0275elementEnd"](),b["\u0275\u0275text"](379," of the appropriate module.\n    "),b["\u0275\u0275elementEnd"](),b["\u0275\u0275text"](380,"\n"),b["\u0275\u0275elementEnd"](),b["\u0275\u0275text"](381,"\n\n"),b["\u0275\u0275elementStart"](382,"h4"),b["\u0275\u0275text"](383,"Focus Service"),b["\u0275\u0275elementEnd"](),b["\u0275\u0275text"](384,"\n\n"),b["\u0275\u0275elementStart"](385,"p"),b["\u0275\u0275text"](386,"\n    Since the search components are not directly exposed, "),b["\u0275\u0275elementStart"](387,"code"),b["\u0275\u0275text"](388,"SearchBuilderFocusService"),b["\u0275\u0275elementEnd"](),b["\u0275\u0275text"](389," can be injected into\n    a controller to manage browser focus within the search builder.\n"),b["\u0275\u0275elementEnd"](),b["\u0275\u0275text"](390,"\n\n"),b["\u0275\u0275elementStart"](391,"uxd-api-properties"),b["\u0275\u0275text"](392,"\n    "),b["\u0275\u0275elementStart"](393,"tr",26),b["\u0275\u0275text"](394,"\n        Set focus on a search builder component.\n        "),b["\u0275\u0275elementStart"](395,"ul"),b["\u0275\u0275text"](396,"\n            "),b["\u0275\u0275elementStart"](397,"li"),b["\u0275\u0275elementStart"](398,"code"),b["\u0275\u0275text"](399,"groupId"),b["\u0275\u0275elementEnd"](),b["\u0275\u0275text"](400,": The "),b["\u0275\u0275elementStart"](401,"code"),b["\u0275\u0275text"](402,"id"),b["\u0275\u0275elementEnd"](),b["\u0275\u0275text"](403," of the group containing the component."),b["\u0275\u0275elementEnd"](),b["\u0275\u0275text"](404,"\n            "),b["\u0275\u0275elementStart"](405,"li"),b["\u0275\u0275elementStart"](406,"code"),b["\u0275\u0275text"](407,"index"),b["\u0275\u0275elementEnd"](),b["\u0275\u0275text"](408,": The (zero-based) index of the component."),b["\u0275\u0275elementEnd"](),b["\u0275\u0275text"](409,"\n        "),b["\u0275\u0275elementEnd"](),b["\u0275\u0275text"](410,"\n    "),b["\u0275\u0275elementEnd"](),b["\u0275\u0275text"](411,"\n    "),b["\u0275\u0275elementStart"](412,"tr",27),b["\u0275\u0275text"](413,"\n        Removes focus from all components. If focus is not on a search builder component, this does nothing.\n    "),b["\u0275\u0275elementEnd"](),b["\u0275\u0275text"](414,"\n"),b["\u0275\u0275elementEnd"](),b["\u0275\u0275text"](415,"\n\n"),b["\u0275\u0275elementStart"](416,"h4"),b["\u0275\u0275text"](417,"Accessibility"),b["\u0275\u0275elementEnd"](),b["\u0275\u0275text"](418,"\n\n"),b["\u0275\u0275elementStart"](419,"ul"),b["\u0275\u0275text"](420,"\n    "),b["\u0275\u0275elementStart"](421,"li"),b["\u0275\u0275text"](422,"\n        Consider using the "),b["\u0275\u0275elementStart"](423,"a",28),b["\u0275\u0275elementStart"](424,"code"),b["\u0275\u0275text"](425,"cdkTrapFocus"),b["\u0275\u0275elementEnd"](),b["\u0275\u0275elementEnd"](),b["\u0275\u0275text"](426,"\n        directive if hosting the search builder within a modal.\n    "),b["\u0275\u0275elementEnd"](),b["\u0275\u0275text"](427,"\n\n    "),b["\u0275\u0275elementStart"](428,"li"),b["\u0275\u0275text"](429,"\n        Use the "),b["\u0275\u0275elementStart"](430,"code"),b["\u0275\u0275text"](431,"SearchBuilderFocusService"),b["\u0275\u0275elementEnd"](),b["\u0275\u0275text"](432," to set focus on newly created search components.\n    "),b["\u0275\u0275elementEnd"](),b["\u0275\u0275text"](433,"\n\n    "),b["\u0275\u0275elementStart"](434,"li"),b["\u0275\u0275text"](435,"\n        If creating a custom search component, the inherited "),b["\u0275\u0275elementStart"](436,"code"),b["\u0275\u0275text"](437,"focus"),b["\u0275\u0275elementEnd"](),b["\u0275\u0275text"](438," property will be set to true when focus is\n        requested.\n        The "),b["\u0275\u0275elementStart"](439,"a",29),b["\u0275\u0275elementStart"](440,"code"),b["\u0275\u0275text"](441,"focusIf"),b["\u0275\u0275elementEnd"](),b["\u0275\u0275elementEnd"](),b["\u0275\u0275text"](442," directive can be used in combination\n        with the "),b["\u0275\u0275elementStart"](443,"code"),b["\u0275\u0275text"](444,"focus"),b["\u0275\u0275elementEnd"](),b["\u0275\u0275text"](445," property to automatically apply focus to the appropriate control in the component.\n    "),b["\u0275\u0275elementEnd"](),b["\u0275\u0275text"](446,"\n"),b["\u0275\u0275elementEnd"](),b["\u0275\u0275text"](447,"\n\n"),b["\u0275\u0275elementStart"](448,"h4"),b["\u0275\u0275text"](449,"Example Code"),b["\u0275\u0275elementEnd"](),b["\u0275\u0275text"](450,"\n\n"),b["\u0275\u0275elementStart"](451,"ux-tabset",23),b["\u0275\u0275text"](452,"\n    "),b["\u0275\u0275elementStart"](453,"ux-tab",24),b["\u0275\u0275text"](454,"\n        "),b["\u0275\u0275element"](455,"uxd-snippet",17),b["\u0275\u0275text"](456,"\n    "),b["\u0275\u0275elementEnd"](),b["\u0275\u0275text"](457,"\n    "),b["\u0275\u0275elementStart"](458,"ux-tab",25),b["\u0275\u0275text"](459,"\n        "),b["\u0275\u0275element"](460,"uxd-snippet",17),b["\u0275\u0275text"](461,"\n    "),b["\u0275\u0275elementEnd"](),b["\u0275\u0275text"](462,"\n    "),b["\u0275\u0275elementStart"](463,"ux-tab",30),b["\u0275\u0275text"](464,"\n        "),b["\u0275\u0275element"](465,"uxd-snippet",17),b["\u0275\u0275text"](466,"\n    "),b["\u0275\u0275elementEnd"](),b["\u0275\u0275text"](467,"\n"),b["\u0275\u0275elementEnd"](),b["\u0275\u0275text"](468,"\n")),2&n&&(b["\u0275\u0275advance"](9),b["\u0275\u0275textInterpolate"](a.preview),b["\u0275\u0275advance"](3),b["\u0275\u0275property"]("ngIf",a.modalOpen),b["\u0275\u0275advance"](72),b["\u0275\u0275property"]("required",!0),b["\u0275\u0275advance"](34),b["\u0275\u0275property"]("content",a.snippets.compiled.componentDefinitionTs),b["\u0275\u0275advance"](217),b["\u0275\u0275property"]("minimal",!1),b["\u0275\u0275advance"](4),b["\u0275\u0275property"]("content",a.snippets.compiled.customComponentHtml),b["\u0275\u0275advance"](5),b["\u0275\u0275property"]("content",a.snippets.compiled.customComponentTs),b["\u0275\u0275advance"](13),b["\u0275\u0275property"]("minimal",!1),b["\u0275\u0275advance"](4),b["\u0275\u0275property"]("content",a.snippets.compiled.searchBuilderComponentsHtml),b["\u0275\u0275advance"](5),b["\u0275\u0275property"]("content",a.snippets.compiled.searchBuilderComponentsTs),b["\u0275\u0275advance"](85),b["\u0275\u0275property"]("minimal",!1),b["\u0275\u0275advance"](4),b["\u0275\u0275property"]("content",a.snippets.compiled.appHtml),b["\u0275\u0275advance"](5),b["\u0275\u0275property"]("content",a.snippets.compiled.appTs),b["\u0275\u0275advance"](5),b["\u0275\u0275property"]("content",a.snippets.compiled.appCss))},directives:[l.DefaultFocusIndicatorDirective,l.IconComponent,p.NgIf,y.$,S.S,v.j,c.RouterLinkWithHref,l.TabsetComponent,l.TabComponent,u.ModalDirective,e.CdkTrapFocus,l.SearchBuilderComponent,l.SearchBuilderGroupComponent,l.ItemDisplayPanelComponent,l.ItemDisplayPanelContentDirective,o.DefaultValueAccessor,o.NgControlStatus,o.NgModel,l.FocusIfDirective,l.SelectListComponent,p.NgForOf,l.SelectListItemComponent],pipes:[p.AsyncPipe],styles:[".search-builder-panel[_ngcontent-%COMP%] {\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  top: 0;\n  right: 0;\n  pointer-events: none;\n}\n.search-builder-panel-open[_ngcontent-%COMP%] {\n  pointer-events: all;\n}\n.field-list-panel[_ngcontent-%COMP%] {\n  border-top: 1px solid #e5e5e5;\n  padding: 10px;\n}\n.field-list-panel[_ngcontent-%COMP%]   .field-list[_ngcontent-%COMP%] {\n  list-style-type: none;\n  padding: 0;\n  margin: 8px 5px;\n}\n.field-list-panel[_ngcontent-%COMP%]   .field-list[_ngcontent-%COMP%]   .field-list-item[_ngcontent-%COMP%] {\n  font-size: 17px;\n  padding: 3px 10px;\n  cursor: pointer;\n}\n.field-list-panel[_ngcontent-%COMP%]   .field-list[_ngcontent-%COMP%]   .field-list-item[_ngcontent-%COMP%]:hover {\n  background-color: #f2f2f2;\n}"]}),a=function(n,a,t,s){var e,p=arguments.length,o=p<3?a:null===s?s=Object.getOwnPropertyDescriptor(a,t):s;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(n,a,t,s);else for(var c=n.length-1;c>=0;c--)(e=n[c])&&(o=(p<3?e(o):p>3?e(a,t,o):e(a,t))||o);return p>3&&o&&Object.defineProperty(a,t,o),o}([(0,g.cG)("ComponentsSearchBuilderComponent"),E("design:paramtypes",[u.BsModalService,l.SearchBuilderFocusService])],a)}(f.u),M=function(){var n=function(a,t){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,a){n.__proto__=a}||function(n,a){for(var t in a)Object.prototype.hasOwnProperty.call(a,t)&&(n[t]=a[t])})(a,t)};return function(a,t){if("function"!=typeof t&&null!==t)throw new TypeError("Class extends value "+String(t)+" is not a constructor or null");function s(){this.constructor=a}n(a,t),a.prototype=null===t?Object.create(t):(s.prototype=t.prototype,new s)}}(),D=function(n,a){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(n,a)},P=["searchFieldRight"];function _(n,a){if(1&n){var t=b["\u0275\u0275getCurrentView"]();b["\u0275\u0275elementStart"](0,"button",33),b["\u0275\u0275listener"]("click",(function(){b["\u0275\u0275restoreView"](t);var n=b["\u0275\u0275nextContext"](),a=b["\u0275\u0275reference"](7);return n.searchText="",a.focus()})),b["\u0275\u0275text"](1,"\n                "),b["\u0275\u0275element"](2,"ux-icon",34),b["\u0275\u0275text"](3,"\n            "),b["\u0275\u0275elementEnd"]()}}var R=[function(n){function a(){var a=n.call(this,t(67068))||this;return a.playground={files:{"app.component.ts":a.snippets.raw.appTs,"app.component.html":a.snippets.raw.appHtml,"app.component.css":a.snippets.raw.appCss},modules:[{imports:["ToolbarSearchModule","ColorServiceModule","TooltipModule"],library:"@ux-aspects/ux-aspects"}]},a.searchedFor="",a}return M(a,n),a.prototype.onSearch=function(n){this.searchedFor=n,this.expanded=!1},a.prototype.onSearchRight=function(n){this.searchedFor=n,this.searchFieldRight.nativeElement.blur()},a.\u0275fac=function(n){return new(n||a)},a.\u0275cmp=b["\u0275\u0275defineComponent"]({type:a,selectors:[["uxd-toolbar-search"]],viewQuery:function(n,a){var t;1&n&&b["\u0275\u0275viewQuery"](P,7),2&n&&b["\u0275\u0275queryRefresh"](t=b["\u0275\u0275loadQuery"]())&&(a.searchFieldRight=t.first)},features:[b["\u0275\u0275InheritDefinitionFeature"]],decls:152,vars:10,consts:[[1,"demo-toolbar"],[1,"demo-toolbar-left"],["direction","right",3,"expanded","expandedChange","search"],["uxToolbarSearchField","","type","text","placeholder","Search","aria-label","Search",1,"form-control",3,"ngModel","ngModelChange"],["searchField",""],["uxToolbarSearchButton","","type","button","aria-label","Toggle Search","uxTooltip","Search",1,"btn","btn-link","btn-icon","button-secondary"],["name","search"],["type","button","class","btn btn-link btn-icon button-secondary ux-toolbar-search-clear",3,"click",4,"ngIf"],["type","button","uxTooltip","Add",1,"btn","btn-link","btn-icon","button-secondary"],["name","add"],["type","button","uxTooltip","Edit",1,"btn","btn-link","btn-icon","button-secondary"],["name","edit"],[1,"demo-toolbar-right"],["type","button","uxTooltip","Grid View",1,"btn","btn-link","btn-icon","button-secondary"],["name","grid"],["type","button","uxTooltip","List View",1,"btn","btn-link","btn-icon","button-secondary"],["name","list"],["direction","left",3,"search"],["uxToolbarSearchField","","type","text","placeholder","Search","aria-label","Search",1,"form-control"],["searchFieldRight",""],[1,"m-t-md"],["href","https://valor-software.com/ngx-bootstrap/#/typeahead"],["tableTitle","Inputs"],["uxd-api-property","","name","expanded","type","boolean"],["uxd-api-property","","name","direction","type","'left' | 'right'","defaultValue","right"],["uxd-api-property","","name","alwaysExpanded","type","boolean","defaultValue","false"],["tableTitle","Output"],["uxd-api-property","","name","search","type","string"],[3,"minimal"],["heading","HTML"],[3,"content"],["heading","TypeScript"],["heading","CSS"],["type","button",1,"btn","btn-link","btn-icon","button-secondary","ux-toolbar-search-clear",3,"click"],["name","close"]],template:function(n,a){1&n&&(b["\u0275\u0275elementStart"](0,"div",0),b["\u0275\u0275text"](1,"\n\n    "),b["\u0275\u0275elementStart"](2,"div",1),b["\u0275\u0275text"](3,"\n        "),b["\u0275\u0275elementStart"](4,"ux-toolbar-search",2),b["\u0275\u0275listener"]("expandedChange",(function(n){return a.expanded=n}))("search",(function(n){return a.onSearch(n)})),b["\u0275\u0275text"](5,"\n            "),b["\u0275\u0275elementStart"](6,"input",3,4),b["\u0275\u0275listener"]("ngModelChange",(function(n){return a.searchText=n})),b["\u0275\u0275elementEnd"](),b["\u0275\u0275text"](8,"\n            "),b["\u0275\u0275elementStart"](9,"button",5),b["\u0275\u0275text"](10,"\n                "),b["\u0275\u0275element"](11,"ux-icon",6),b["\u0275\u0275text"](12,"\n            "),b["\u0275\u0275elementEnd"](),b["\u0275\u0275text"](13,"\n            "),b["\u0275\u0275template"](14,_,4,0,"button",7),b["\u0275\u0275text"](15,"\n        "),b["\u0275\u0275elementEnd"](),b["\u0275\u0275text"](16,"\n        "),b["\u0275\u0275elementStart"](17,"button",8),b["\u0275\u0275text"](18,"\n            "),b["\u0275\u0275element"](19,"ux-icon",9),b["\u0275\u0275text"](20,"\n        "),b["\u0275\u0275elementEnd"](),b["\u0275\u0275text"](21,"\n        "),b["\u0275\u0275elementStart"](22,"button",10),b["\u0275\u0275text"](23,"\n            "),b["\u0275\u0275element"](24,"ux-icon",11),b["\u0275\u0275text"](25,"\n        "),b["\u0275\u0275elementEnd"](),b["\u0275\u0275text"](26,"\n    "),b["\u0275\u0275elementEnd"](),b["\u0275\u0275text"](27,"\n\n    "),b["\u0275\u0275elementStart"](28,"div",12),b["\u0275\u0275text"](29,"\n        "),b["\u0275\u0275elementStart"](30,"button",13),b["\u0275\u0275text"](31,"\n            "),b["\u0275\u0275element"](32,"ux-icon",14),b["\u0275\u0275text"](33,"\n        "),b["\u0275\u0275elementEnd"](),b["\u0275\u0275text"](34,"\n        "),b["\u0275\u0275elementStart"](35,"button",15),b["\u0275\u0275text"](36,"\n            "),b["\u0275\u0275element"](37,"ux-icon",16),b["\u0275\u0275text"](38,"\n        "),b["\u0275\u0275elementEnd"](),b["\u0275\u0275text"](39,"\n        "),b["\u0275\u0275elementStart"](40,"ux-toolbar-search",17),b["\u0275\u0275listener"]("search",(function(n){return a.onSearchRight(n)})),b["\u0275\u0275text"](41,"\n            "),b["\u0275\u0275element"](42,"input",18,19),b["\u0275\u0275text"](44,"\n            "),b["\u0275\u0275elementStart"](45,"button",5),b["\u0275\u0275text"](46,"\n                "),b["\u0275\u0275element"](47,"ux-icon",6),b["\u0275\u0275text"](48,"\n            "),b["\u0275\u0275elementEnd"](),b["\u0275\u0275text"](49,"\n        "),b["\u0275\u0275elementEnd"](),b["\u0275\u0275text"](50,"\n    "),b["\u0275\u0275elementEnd"](),b["\u0275\u0275text"](51,"\n\n"),b["\u0275\u0275elementEnd"](),b["\u0275\u0275text"](52,"\n\n"),b["\u0275\u0275elementStart"](53,"p",20),b["\u0275\u0275text"](54,"Searched for: "),b["\u0275\u0275elementStart"](55,"strong"),b["\u0275\u0275text"](56),b["\u0275\u0275elementEnd"](),b["\u0275\u0275elementEnd"](),b["\u0275\u0275text"](57,"\n\n"),b["\u0275\u0275element"](58,"hr"),b["\u0275\u0275text"](59,"\n\n"),b["\u0275\u0275elementStart"](60,"p"),b["\u0275\u0275text"](61,"\n    The "),b["\u0275\u0275elementStart"](62,"code"),b["\u0275\u0275text"](63,"ux-toolbar-search"),b["\u0275\u0275elementEnd"](),b["\u0275\u0275text"](64," component can be used to toggle the visibility of a search input box in the\n    context of a toolbar. Within this component, create an input field with the attribute\n    "),b["\u0275\u0275elementStart"](65,"code"),b["\u0275\u0275text"](66,"uxToolbarSearchField"),b["\u0275\u0275elementEnd"](),b["\u0275\u0275text"](67,", which will act as the search input box, and a\n    button with the attribute "),b["\u0275\u0275elementStart"](68,"code"),b["\u0275\u0275text"](69,"uxToolbarSearchButton"),b["\u0275\u0275elementEnd"](),b["\u0275\u0275text"](70,", which will toggle the visibility of the input field,\n    and submit the search text when input has been provided. Then, use the "),b["\u0275\u0275elementStart"](71,"code"),b["\u0275\u0275text"](72,"(search)"),b["\u0275\u0275elementEnd"](),b["\u0275\u0275text"](73," event to trigger the\n    application's search routine.\n"),b["\u0275\u0275elementEnd"](),b["\u0275\u0275text"](74,"\n\n"),b["\u0275\u0275elementStart"](75,"p"),b["\u0275\u0275text"](76,"\n    The search input field will expand to fill the dimensions of its parent, overlaying any other controls present. To\n    support this, ensure that the parent container has "),b["\u0275\u0275elementStart"](77,"code"),b["\u0275\u0275text"](78,"position: relative"),b["\u0275\u0275elementEnd"](),b["\u0275\u0275text"](79," specified.\n"),b["\u0275\u0275elementEnd"](),b["\u0275\u0275text"](80,"\n\n"),b["\u0275\u0275elementStart"](81,"p"),b["\u0275\u0275text"](82,"\n    By default, the escape key is used to collapse the search field. Other keys or events can be used by binding to the\n    "),b["\u0275\u0275elementStart"](83,"code"),b["\u0275\u0275text"](84,"expanded"),b["\u0275\u0275elementEnd"](),b["\u0275\u0275text"](85," input property. For example, to collapse when focus is lost, attach a "),b["\u0275\u0275elementStart"](86,"code"),b["\u0275\u0275text"](87,"(blur)"),b["\u0275\u0275elementEnd"](),b["\u0275\u0275text"](88,"\n    handler to the input field and set the expanded state to false.\n"),b["\u0275\u0275elementEnd"](),b["\u0275\u0275text"](89,"\n\n"),b["\u0275\u0275elementStart"](90,"p"),b["\u0275\u0275text"](91,'\n    Other components can be added as required. The toolbar search component on the left above shows how to include an\n    optional "clear" button to the input field using the built-in '),b["\u0275\u0275elementStart"](92,"code"),b["\u0275\u0275text"](93,"ux-toolbar-search-clear"),b["\u0275\u0275elementEnd"](),b["\u0275\u0275text"](94,' class.\n    If the "clear" button is added, you should add the '),b["\u0275\u0275elementStart"](95,"code"),b["\u0275\u0275text"](96,"ux-toolbar-search-clear-offset"),b["\u0275\u0275elementEnd"](),b["\u0275\u0275text"](97," to the "),b["\u0275\u0275elementStart"](98,"code"),b["\u0275\u0275text"](99,"input"),b["\u0275\u0275elementEnd"](),b["\u0275\u0275text"](100,"\n    field element to apply the appropriate padding. The sample code shows an example of binding this class.\n"),b["\u0275\u0275elementEnd"](),b["\u0275\u0275text"](101,"\n\n"),b["\u0275\u0275elementStart"](102,"p"),b["\u0275\u0275text"](103,"\n    Another common use-case is to include a "),b["\u0275\u0275elementStart"](104,"a",21),b["\u0275\u0275text"](105,"typeahead"),b["\u0275\u0275elementEnd"](),b["\u0275\u0275text"](106," list to\n    hint results as the user is typing.\n"),b["\u0275\u0275elementEnd"](),b["\u0275\u0275text"](107,"\n\n"),b["\u0275\u0275elementStart"](108,"p"),b["\u0275\u0275text"](109,"The following properties are available to configure "),b["\u0275\u0275elementStart"](110,"code"),b["\u0275\u0275text"](111,"ux-toolbar-search"),b["\u0275\u0275elementEnd"](),b["\u0275\u0275text"](112,":"),b["\u0275\u0275elementEnd"](),b["\u0275\u0275text"](113,"\n\n"),b["\u0275\u0275elementStart"](114,"uxd-api-properties",22),b["\u0275\u0275text"](115,"\n    "),b["\u0275\u0275elementStart"](116,"tr",23),b["\u0275\u0275text"](117,"\n        Whether the input field is visible. Use this to collapse or expand the control in response to other events.\n    "),b["\u0275\u0275elementEnd"](),b["\u0275\u0275text"](118,"\n    "),b["\u0275\u0275elementStart"](119,"tr",24),b["\u0275\u0275text"](120,"\n        The direction in which the search box will expand. If the search button is aligned to the right edge of the\n        container, specify "),b["\u0275\u0275elementStart"](121,"code"),b["\u0275\u0275text"](122,"left"),b["\u0275\u0275elementEnd"](),b["\u0275\u0275text"](123,".\n    "),b["\u0275\u0275elementEnd"](),b["\u0275\u0275text"](124,"\n    "),b["\u0275\u0275elementStart"](125,"tr",25),b["\u0275\u0275text"](126,"\n        Whether the input field should always appear in the expanded state.\n    "),b["\u0275\u0275elementEnd"](),b["\u0275\u0275text"](127,"\n"),b["\u0275\u0275elementEnd"](),b["\u0275\u0275text"](128,"\n\n"),b["\u0275\u0275elementStart"](129,"uxd-api-properties",26),b["\u0275\u0275text"](130,"\n    "),b["\u0275\u0275elementStart"](131,"tr",27),b["\u0275\u0275text"](132,"\n        Emitted when a search query has been submitted, either by pressing enter when the search field has focus, or by\n        clicking the search button when the search field contains text. The event contains the search text.\n    "),b["\u0275\u0275elementEnd"](),b["\u0275\u0275text"](133,"\n"),b["\u0275\u0275elementEnd"](),b["\u0275\u0275text"](134,"\n\n"),b["\u0275\u0275elementStart"](135,"ux-tabset",28),b["\u0275\u0275text"](136,"\n    "),b["\u0275\u0275elementStart"](137,"ux-tab",29),b["\u0275\u0275text"](138,"\n        "),b["\u0275\u0275element"](139,"uxd-snippet",30),b["\u0275\u0275text"](140,"\n    "),b["\u0275\u0275elementEnd"](),b["\u0275\u0275text"](141,"\n    "),b["\u0275\u0275elementStart"](142,"ux-tab",31),b["\u0275\u0275text"](143,"\n        "),b["\u0275\u0275element"](144,"uxd-snippet",30),b["\u0275\u0275text"](145,"\n    "),b["\u0275\u0275elementEnd"](),b["\u0275\u0275text"](146,"\n    "),b["\u0275\u0275elementStart"](147,"ux-tab",32),b["\u0275\u0275text"](148,"\n        "),b["\u0275\u0275element"](149,"uxd-snippet",30),b["\u0275\u0275text"](150,"\n    "),b["\u0275\u0275elementEnd"](),b["\u0275\u0275text"](151,"\n"),b["\u0275\u0275elementEnd"]()),2&n&&(b["\u0275\u0275advance"](4),b["\u0275\u0275property"]("expanded",a.expanded),b["\u0275\u0275advance"](2),b["\u0275\u0275classProp"]("ux-toolbar-search-clear-offset",a.searchText),b["\u0275\u0275property"]("ngModel",a.searchText),b["\u0275\u0275advance"](8),b["\u0275\u0275property"]("ngIf",a.searchText),b["\u0275\u0275advance"](42),b["\u0275\u0275textInterpolate"](a.searchedFor),b["\u0275\u0275advance"](79),b["\u0275\u0275property"]("minimal",!1),b["\u0275\u0275advance"](4),b["\u0275\u0275property"]("content",a.snippets.compiled.appHtml),b["\u0275\u0275advance"](5),b["\u0275\u0275property"]("content",a.snippets.compiled.appTs),b["\u0275\u0275advance"](5),b["\u0275\u0275property"]("content",a.snippets.compiled.appCss))},directives:[l.ToolbarSearchComponent,o.DefaultValueAccessor,l.ToolbarSearchFieldDirective,o.NgControlStatus,o.NgModel,l.DefaultFocusIndicatorDirective,l.ToolbarSearchButtonDirective,l.TooltipDirective,l.IconComponent,p.NgIf,y.$,S.S,l.TabsetComponent,l.TabComponent,v.j],styles:[".demo-toolbar[_ngcontent-%COMP%] {\n  display: flex;\n  width: 100%;\n  border: 1px solid #cccccc;\n  padding: 4px 8px;\n}\n.demo-toolbar[_ngcontent-%COMP%]    > *[_ngcontent-%COMP%] {\n  flex: 1 0 auto;\n  position: relative;\n  display: flex;\n  align-items: center;\n}\n.demo-toolbar-right[_ngcontent-%COMP%] {\n  justify-content: flex-end;\n}"]}),a=function(n,a,t,s){var e,p=arguments.length,o=p<3?a:null===s?s=Object.getOwnPropertyDescriptor(a,t):s;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(n,a,t,s);else for(var c=n.length-1;c>=0;c--)(e=n[c])&&(o=(p<3?e(o):p>3?e(a,t,o):e(a,t))||o);return p>3&&o&&Object.defineProperty(a,t,o),o}([(0,g.cG)("ComponentsToolbarSearchComponent"),D("design:paramtypes",[])],a)}(f.u),B],I=[{path:"**",component:r.R,data:{category:k.N.resolveCategoryData(k.I.Components,"Search")}}],A=function(){function n(n,a){a.registerResolver(n,R)}return n.\u0275fac=function(a){return new(a||n)(b["\u0275\u0275inject"](b.ComponentFactoryResolver),b["\u0275\u0275inject"](k.N))},n.\u0275mod=b["\u0275\u0275defineNgModule"]({type:n}),n.\u0275inj=b["\u0275\u0275defineInjector"]({imports:[[e.A11yModule,l.AccordionModule,l.ColorServiceModule,p.CommonModule,i.N,l.FocusIfModule,o.FormsModule,l.IconModule,l.ItemDisplayPanelModule,u.ModalModule,l.RadioButtonModule,c.RouterModule.forChild(I),l.SearchBuilderModule,l.SelectListModule,l.TabsetModule,l.ToggleSwitchModule,l.ToolbarSearchModule,l.TooltipModule]]}),n}()}}]);
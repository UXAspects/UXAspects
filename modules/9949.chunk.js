(self.webpackChunk_ux_aspects_ux_aspects_docs=self.webpackChunk_ux_aspects_ux_aspects_docs||[]).push([[9949],{18866:function(n){n.exports={snippet:'<span class="token selector">.demo-chart-container</span> <span class="token punctuation">{</span>\n    <span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">;</span>\n    <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>\n    <span class="token property">height</span><span class="token punctuation">:</span> 200px<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.chart-scroll-previous-btn,\n.chart-scroll-next-btn</span> <span class="token punctuation">{</span>\n  <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>\n  <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>\n  <span class="token property">align-items</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>\n  <span class="token property">justify-content</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>\n  <span class="token property">width</span><span class="token punctuation">:</span> 25px<span class="token punctuation">;</span>\n  <span class="token property">height</span><span class="token punctuation">:</span> 25px<span class="token punctuation">;</span>\n  <span class="token property">background-color</span><span class="token punctuation">:</span> #00a7a2<span class="token punctuation">;</span>\n  <span class="token property">border-radius</span><span class="token punctuation">:</span> 50%<span class="token punctuation">;</span>\n  <span class="token property">opacity</span><span class="token punctuation">:</span> 0.7<span class="token punctuation">;</span>\n  <span class="token property">cursor</span><span class="token punctuation">:</span> pointer<span class="token punctuation">;</span>\n  <span class="token property">transition</span><span class="token punctuation">:</span> opacity 0.3s ease-in-out<span class="token punctuation">;</span>\n  <span class="token property">top</span><span class="token punctuation">:</span> <span class="token function">calc</span><span class="token punctuation">(</span>50% - 22px<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token property">color</span><span class="token punctuation">:</span> #fff<span class="token punctuation">;</span>\n  <span class="token property">font-size</span><span class="token punctuation">:</span> 13px<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.chart-scroll-previous-btn:hover,\n.chart-scroll-next-btn:hover</span> <span class="token punctuation">{</span>\n  <span class="token property">opacity</span><span class="token punctuation">:</span> 0.9<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.chart-scroll-previous-btn</span> <span class="token punctuation">{</span>\n  <span class="token property">left</span><span class="token punctuation">:</span> 32px<span class="token punctuation">;</span>\n  <span class="token property">padding-right</span><span class="token punctuation">:</span> 1px<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.chart-scroll-next-btn</span> <span class="token punctuation">{</span>\n  <span class="token property">right</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>\n  <span class="token property">padding-left</span><span class="token punctuation">:</span> 2px<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n',example:".demo-chart-container {\n    display: block;\n    position: relative;\n    height: 200px;\n}\n\n.chart-scroll-previous-btn,\n.chart-scroll-next-btn {\n  position: absolute;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 25px;\n  height: 25px;\n  background-color: #00a7a2;\n  border-radius: 50%;\n  opacity: 0.7;\n  cursor: pointer;\n  transition: opacity 0.3s ease-in-out;\n  top: calc(50% - 22px);\n  color: #fff;\n  font-size: 13px;\n}\n\n.chart-scroll-previous-btn:hover,\n.chart-scroll-next-btn:hover {\n  opacity: 0.9;\n}\n\n.chart-scroll-previous-btn {\n  left: 32px;\n  padding-right: 1px;\n}\n\n.chart-scroll-next-btn {\n  right: 10px;\n  padding-left: 2px;\n}\n"}},98832:function(n){n.exports={snippet:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>demo-chart-container<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">*ngIf</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>hasPreviousPage()<span class="token punctuation">"</span></span>\n        <span class="token attr-name">aria-label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Scroll to previous chart page<span class="token punctuation">"</span></span>\n        <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>chart-scroll-previous-btn<span class="token punctuation">"</span></span>\n        <span class="token attr-name">(click)</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>goToPreviousPage()<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ux-icon</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>previous<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ux-icon</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>canvas</span> <span class="token attr-name">aria-label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Bar chart showing file type totals<span class="token punctuation">"</span></span>\n        <span class="token attr-name">baseChart</span>\n        <span class="token attr-name">[datasets]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>barChartData<span class="token punctuation">"</span></span>\n        <span class="token attr-name">[labels]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>barChartLabels<span class="token punctuation">"</span></span>\n        <span class="token attr-name">[options]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>barChartOptions<span class="token punctuation">"</span></span>\n        <span class="token attr-name">[legend]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>barChartLegend<span class="token punctuation">"</span></span>\n        <span class="token attr-name">[colors]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>barChartColors<span class="token punctuation">"</span></span>\n        <span class="token attr-name">chartType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>bar<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span> <span class="token attr-name">aria-label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Chart data<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>thead</span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>\n                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>File Type<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>\n                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>Number of Files<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>thead</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tbody</span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span> <span class="token attr-name">*ngFor</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>let label of barChartLabels; let idx = index<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>{{label}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>\n                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>{{barChartData[0].data[idx]}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tbody</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">></span></span>\n\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>canvas</span><span class="token punctuation">></span></span>\n\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">*ngIf</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>hasNextPage()<span class="token punctuation">"</span></span>\n        <span class="token attr-name">aria-label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Scroll to previous chart page<span class="token punctuation">"</span></span>\n        <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>chart-scroll-next-btn<span class="token punctuation">"</span></span>\n        <span class="token attr-name">(click)</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>goToNextPage()<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ux-icon</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>next<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ux-icon</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>',example:'<div class="demo-chart-container">\n\n    <div *ngIf="hasPreviousPage()"\n        aria-label="Scroll to previous chart page"\n        class="chart-scroll-previous-btn"\n        (click)="goToPreviousPage()">\n        <ux-icon name="previous"></ux-icon>\n    </div>\n\n    <canvas aria-label="Bar chart showing file type totals"\n        baseChart\n        [datasets]="barChartData"\n        [labels]="barChartLabels"\n        [options]="barChartOptions"\n        [legend]="barChartLegend"\n        [colors]="barChartColors"\n        chartType="bar">\n\n        <table aria-label="Chart data">\n            <thead>\n                <tr>\n                    <th>File Type</th>\n                    <th>Number of Files</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr *ngFor="let label of barChartLabels; let idx = index">\n                    <td>{{label}}</td>\n                    <td>{{barChartData[0].data[idx]}}</td>\n                </tr>\n            </tbody>\n        </table>\n\n    </canvas>\n\n    <div *ngIf="hasNextPage()"\n        aria-label="Scroll to previous chart page"\n        class="chart-scroll-next-btn"\n        (click)="goToNextPage()">\n        <ux-icon name="next"></ux-icon>\n    </div>\n\n</div>'}},71857:function(n){n.exports={snippet:'<span class="token keyword">import</span> <span class="token punctuation">{</span> Component <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@angular/core\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> ColorService <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@ux-aspects/ux-aspects\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> BaseChartDirective <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'ng2-charts\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> Chart <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'chart.js\'</span><span class="token punctuation">;</span>\n\n@<span class="token function">Component</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    selector<span class="token operator">:</span> <span class="token string">\'app\'</span><span class="token punctuation">,</span>\n    templateUrl<span class="token operator">:</span> <span class="token string">\'./app.component.html\'</span><span class="token punctuation">,</span>\n    styleUrls<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">\'./app.component.css\'</span><span class="token punctuation">]</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">AppComponent</span> <span class="token punctuation">{</span>\n\n    <span class="token comment">// configure the directive data</span>\n    barChartData<span class="token operator">:</span> Chart<span class="token punctuation">.</span>ChartDataSets<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n    barChartLabels<span class="token operator">:</span> string<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n    barChartOptions<span class="token operator">:</span> Chart<span class="token punctuation">.</span>ChartOptions<span class="token punctuation">;</span>\n    barChartLegend<span class="token operator">:</span> boolean <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\n    barChartColors<span class="token operator">:</span> any<span class="token punctuation">;</span>\n\n    labels<span class="token operator">:</span> string<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>\n        <span class="token string">\'.doc\'</span><span class="token punctuation">,</span> <span class="token string">\'.ppt\'</span><span class="token punctuation">,</span> <span class="token string">\'.pdf\'</span><span class="token punctuation">,</span> <span class="token string">\'.xls\'</span><span class="token punctuation">,</span> <span class="token string">\'.html\'</span><span class="token punctuation">,</span> <span class="token string">\'.txt\'</span><span class="token punctuation">,</span>\n        <span class="token string">\'.png\'</span><span class="token punctuation">,</span> <span class="token string">\'.bmp\'</span><span class="token punctuation">,</span> <span class="token string">\'.gif\'</span><span class="token punctuation">,</span> <span class="token string">\'.svg\'</span><span class="token punctuation">,</span> <span class="token string">\'.ttf\'</span><span class="token punctuation">,</span> <span class="token string">\'.wav\'</span>\n    <span class="token punctuation">]</span><span class="token punctuation">;</span>\n    data<span class="token operator">:</span> number<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">34</span><span class="token punctuation">,</span> <span class="token number">25</span><span class="token punctuation">,</span> <span class="token number">19</span><span class="token punctuation">,</span> <span class="token number">34</span><span class="token punctuation">,</span> <span class="token number">32</span><span class="token punctuation">,</span> <span class="token number">44</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">27</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">,</span> <span class="token number">48</span><span class="token punctuation">,</span> <span class="token number">40</span><span class="token punctuation">,</span> <span class="token number">36</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n    page<span class="token operator">:</span> number <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>\n    pageSize<span class="token operator">:</span> number <span class="token operator">=</span> <span class="token number">4</span><span class="token punctuation">;</span>\n\n    <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">colorService<span class="token operator">:</span> ColorService</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n\n        <span class="token keyword">this</span><span class="token punctuation">.</span>barChartLabels <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getPageLabels</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token keyword">this</span><span class="token punctuation">.</span>barChartData <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">{</span>\n            data<span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getPageData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n            borderWidth<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>\n            barPercentage<span class="token operator">:</span> <span class="token number">0.5</span><span class="token punctuation">,</span>\n            categoryPercentage<span class="token operator">:</span> <span class="token number">1</span>\n        <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n        <span class="token comment">// Prepare colors used in chart</span>\n        <span class="token keyword">let</span> gridColor <span class="token operator">=</span> colorService<span class="token punctuation">.</span><span class="token function">getColor</span><span class="token punctuation">(</span><span class="token string">\'grey6\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toHex</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">let</span> barBackgroundColor <span class="token operator">=</span> colorService<span class="token punctuation">.</span><span class="token function">getColor</span><span class="token punctuation">(</span><span class="token string">\'chart1\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setAlpha</span><span class="token punctuation">(</span><span class="token number">0.1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toRgba</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">let</span> barHoverBackgroundColor <span class="token operator">=</span> colorService<span class="token punctuation">.</span><span class="token function">getColor</span><span class="token punctuation">(</span><span class="token string">\'chart1\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setAlpha</span><span class="token punctuation">(</span><span class="token number">0.2</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toRgba</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">let</span> barBorderColor <span class="token operator">=</span> colorService<span class="token punctuation">.</span><span class="token function">getColor</span><span class="token punctuation">(</span><span class="token string">\'chart1\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toHex</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">let</span> tooltipBackgroundColor <span class="token operator">=</span> colorService<span class="token punctuation">.</span><span class="token function">getColor</span><span class="token punctuation">(</span><span class="token string">\'grey2\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toHex</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token keyword">this</span><span class="token punctuation">.</span>barChartOptions <span class="token operator">=</span> <span class="token punctuation">{</span>\n            maintainAspectRatio<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n            responsive<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n            animation<span class="token operator">:</span> <span class="token punctuation">{</span>\n                duration<span class="token operator">:</span> <span class="token number">0</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            scales<span class="token operator">:</span> <span class="token punctuation">{</span>\n                xAxes<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span>\n                    gridLines<span class="token operator">:</span> <span class="token punctuation">{</span>\n                        color<span class="token operator">:</span> <span class="token string">\'transparent\'</span>\n                    <span class="token punctuation">}</span>\n                <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n                yAxes<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span>\n                    gridLines<span class="token operator">:</span> <span class="token punctuation">{</span>\n                        color<span class="token operator">:</span> gridColor\n                    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n                    ticks<span class="token operator">:</span> <span class="token punctuation">{</span>\n                        min<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>\n                        max<span class="token operator">:</span> <span class="token number">50</span><span class="token punctuation">,</span>\n                        stepSize<span class="token operator">:</span> <span class="token number">10</span>\n                    <span class="token punctuation">}</span> <span class="token keyword">as</span> Chart<span class="token punctuation">.</span>LinearTickOptions\n                <span class="token punctuation">}</span><span class="token punctuation">]</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            tooltips<span class="token operator">:</span> <span class="token punctuation">{</span>\n                backgroundColor<span class="token operator">:</span> tooltipBackgroundColor<span class="token punctuation">,</span>\n                cornerRadius<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>\n                callbacks<span class="token operator">:</span> <span class="token punctuation">{</span>\n                    <span class="token function-variable function">title</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">item<span class="token operator">:</span> Chart<span class="token punctuation">.</span>ChartTooltipItem<span class="token punctuation">[</span><span class="token punctuation">]</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n                        <span class="token keyword">return</span><span class="token punctuation">;</span>\n                    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n                    <span class="token function-variable function">label</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">item<span class="token operator">:</span> Chart<span class="token punctuation">.</span>ChartTooltipItem</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n                        <span class="token keyword">return</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">x: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>item<span class="token punctuation">.</span>xLabel<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">, y: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>item<span class="token punctuation">.</span>yLabel<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span>\n                    <span class="token punctuation">}</span>\n                <span class="token punctuation">}</span><span class="token punctuation">,</span>\n                displayColors<span class="token operator">:</span> <span class="token boolean">false</span>\n            <span class="token punctuation">}</span> <span class="token keyword">as</span> any\n        <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n        <span class="token keyword">this</span><span class="token punctuation">.</span>barChartColors <span class="token operator">=</span> <span class="token punctuation">[</span>\n            <span class="token punctuation">{</span>\n                backgroundColor<span class="token operator">:</span> barBackgroundColor<span class="token punctuation">,</span>\n                hoverBackgroundColor<span class="token operator">:</span> barHoverBackgroundColor<span class="token punctuation">,</span>\n                borderColor<span class="token operator">:</span> barBorderColor\n            <span class="token punctuation">}</span>\n        <span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n    <span class="token punctuation">}</span>\n\n    <span class="token function">getPageData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> number<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">{</span>\n        <span class="token keyword">let</span> startIdx <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>page <span class="token operator">*</span> <span class="token keyword">this</span><span class="token punctuation">.</span>pageSize<span class="token punctuation">;</span>\n        <span class="token keyword">let</span> endIdx <span class="token operator">=</span> startIdx <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>pageSize<span class="token punctuation">;</span>\n\n        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span>startIdx<span class="token punctuation">,</span> endIdx<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token function">getPageLabels</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> string<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">{</span>\n        <span class="token keyword">let</span> startIdx <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>page <span class="token operator">*</span> <span class="token keyword">this</span><span class="token punctuation">.</span>pageSize<span class="token punctuation">;</span>\n        <span class="token keyword">let</span> endIdx <span class="token operator">=</span> startIdx <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>pageSize<span class="token punctuation">;</span>\n\n        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>labels<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span>startIdx<span class="token punctuation">,</span> endIdx<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token function">goToPreviousPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>\n\n        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">hasPreviousPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token keyword">this</span><span class="token punctuation">.</span>page <span class="token operator">-=</span> <span class="token number">1</span><span class="token punctuation">;</span>\n\n            <span class="token comment">// get the data and labels for the new page</span>\n            <span class="token keyword">this</span><span class="token punctuation">.</span>barChartLabels <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getPageLabels</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token keyword">this</span><span class="token punctuation">.</span>barChartData<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>data <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getPageData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n\n    <span class="token punctuation">}</span>\n\n    <span class="token function">goToNextPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>\n\n        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">hasNextPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token keyword">this</span><span class="token punctuation">.</span>page <span class="token operator">+=</span> <span class="token number">1</span><span class="token punctuation">;</span>\n\n            <span class="token comment">// get the data and labels for the new page</span>\n            <span class="token keyword">this</span><span class="token punctuation">.</span>barChartLabels <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getPageLabels</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token keyword">this</span><span class="token punctuation">.</span>barChartData<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>data <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getPageData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n\n    <span class="token punctuation">}</span>\n\n    <span class="token function">hasNextPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> boolean <span class="token punctuation">{</span>\n        <span class="token comment">// get the index of the next page</span>\n        <span class="token keyword">let</span> nextPageIndex <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>page <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token keyword">this</span><span class="token punctuation">.</span>pageSize<span class="token punctuation">;</span>\n\n        <span class="token comment">// check if this index is out of bounds</span>\n        <span class="token keyword">return</span> nextPageIndex <span class="token operator">&lt;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token punctuation">.</span>length<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token function">hasPreviousPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> boolean <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>page <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n<span class="token punctuation">}</span>',example:"import { Component } from '@angular/core';\nimport { ColorService } from '@ux-aspects/ux-aspects';\nimport { BaseChartDirective } from 'ng2-charts';\nimport { Chart } from 'chart.js';\n\n@Component({\n    selector: 'app',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n    // configure the directive data\n    barChartData: Chart.ChartDataSets[];\n\n    barChartLabels: string[];\n    barChartOptions: Chart.ChartOptions;\n    barChartLegend: boolean = false;\n    barChartColors: any;\n\n    labels: string[] = [\n        '.doc', '.ppt', '.pdf', '.xls', '.html', '.txt',\n        '.png', '.bmp', '.gif', '.svg', '.ttf', '.wav'\n    ];\n    data: number[] = [34, 25, 19, 34, 32, 44, 12, 27, 15, 48, 40, 36];\n\n    page: number = 0;\n    pageSize: number = 4;\n\n    constructor(colorService: ColorService) {\n\n        this.barChartLabels = this.getPageLabels();\n\n        this.barChartData = [{\n            data: this.getPageData(),\n            borderWidth: 1,\n            barPercentage: 0.5,\n            categoryPercentage: 1\n        }];\n\n        // Prepare colors used in chart\n        let gridColor = colorService.getColor('grey6').toHex();\n        let barBackgroundColor = colorService.getColor('chart1').setAlpha(0.1).toRgba();\n        let barHoverBackgroundColor = colorService.getColor('chart1').setAlpha(0.2).toRgba();\n        let barBorderColor = colorService.getColor('chart1').toHex();\n        let tooltipBackgroundColor = colorService.getColor('grey2').toHex();\n\n        this.barChartOptions = {\n            maintainAspectRatio: false,\n            responsive: true,\n            animation: {\n                duration: 0\n            },\n            scales: {\n                xAxes: [{\n                    gridLines: {\n                        color: 'transparent'\n                    }\n                }],\n                yAxes: [{\n                    gridLines: {\n                        color: gridColor\n                    },\n                    ticks: {\n                        min: 0,\n                        max: 50,\n                        stepSize: 10\n                    } as Chart.LinearTickOptions\n                }]\n            },\n            tooltips: {\n                backgroundColor: tooltipBackgroundColor,\n                cornerRadius: 0,\n                callbacks: {\n                    title: (item: Chart.ChartTooltipItem[]) => {\n                        return;\n                    },\n                    label: (item: Chart.ChartTooltipItem) => {\n                        return `x: ${item.xLabel}, y: ${item.yLabel}`;\n                    }\n                },\n                displayColors: false\n            } as any\n        };\n\n        this.barChartColors = [\n            {\n                backgroundColor: barBackgroundColor,\n                hoverBackgroundColor: barHoverBackgroundColor,\n                borderColor: barBorderColor\n            }\n        ];\n\n    }\n\n    getPageData(): number[] {\n        let startIdx = this.page * this.pageSize;\n        let endIdx = startIdx + this.pageSize;\n\n        return this.data.slice(startIdx, endIdx);\n    }\n\n    getPageLabels(): string[] {\n        let startIdx = this.page * this.pageSize;\n        let endIdx = startIdx + this.pageSize;\n\n        return this.labels.slice(startIdx, endIdx);\n    }\n\n    goToPreviousPage(): void {\n\n        if (this.hasPreviousPage()) {\n            this.page -= 1;\n\n            // get the data and labels for the new page\n            this.barChartLabels = this.getPageLabels();\n            this.barChartData[0].data = this.getPageData();\n        }\n\n    }\n\n    goToNextPage(): void {\n\n        if (this.hasNextPage()) {\n            this.page += 1;\n\n            // get the data and labels for the new page\n            this.barChartLabels = this.getPageLabels();\n            this.barChartData[0].data = this.getPageData();\n        }\n\n    }\n\n    hasNextPage(): boolean {\n        // get the index of the next page\n        let nextPageIndex = (this.page + 1) * this.pageSize;\n\n        // check if this index is out of bounds\n        return nextPageIndex < this.data.length;\n    }\n\n    hasPreviousPage(): boolean {\n        return this.page > 0;\n    }\n\n}"}},31634:function(n,a,s){var t={"./scrollable-chart.css":18866,"./scrollable-chart.html":98832,"./scrollable-chart.ts":71857};function e(n){var a=p(n);return s(a)}function p(n){if(!s.o(t,n)){var a=new Error("Cannot find module '"+n+"'");throw a.code="MODULE_NOT_FOUND",a}return t[n]}e.keys=function(){return Object.keys(t)},e.resolve=p,n.exports=e,e.id=31634},99949:function(n,a,s){"use strict";s.r(a),s.d(a,{ChartsScrollableChartModule:function(){return w}});var t,e=s(56475),p=s(94121),o=s(3955),c=s(68594),l=s(26966),r=s(95892),u=s(36941),i=s(86093),k=s(62536),d=s(29872),h=s(95490),g=s(70734),m=s(95445),b=(t=function(n,a){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,a){n.__proto__=a}||function(n,a){for(var s in a)Object.prototype.hasOwnProperty.call(a,s)&&(n[s]=a[s])})(n,a)},function(n,a){if("function"!=typeof a&&null!==a)throw new TypeError("Class extends value "+String(a)+" is not a constructor or null");function s(){this.constructor=n}t(n,a),n.prototype=null===a?Object.create(a):(s.prototype=a.prototype,new s)}),x=function(n,a){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(n,a)};function f(n,a){if(1&n){var s=d["\u0275\u0275getCurrentView"]();d["\u0275\u0275elementStart"](0,"div",28),d["\u0275\u0275listener"]("click",(function(){return d["\u0275\u0275restoreView"](s),d["\u0275\u0275nextContext"]().goToPreviousPage()})),d["\u0275\u0275text"](1,"\n        "),d["\u0275\u0275element"](2,"ux-icon",29),d["\u0275\u0275text"](3,"\n    "),d["\u0275\u0275elementEnd"]()}}function y(n,a){if(1&n&&(d["\u0275\u0275elementStart"](0,"tr"),d["\u0275\u0275text"](1,"\n                    "),d["\u0275\u0275elementStart"](2,"td"),d["\u0275\u0275text"](3),d["\u0275\u0275elementEnd"](),d["\u0275\u0275text"](4,"\n                    "),d["\u0275\u0275elementStart"](5,"td"),d["\u0275\u0275text"](6),d["\u0275\u0275elementEnd"](),d["\u0275\u0275text"](7,"\n                "),d["\u0275\u0275elementEnd"]()),2&n){var s=a.$implicit,t=a.index,e=d["\u0275\u0275nextContext"]();d["\u0275\u0275advance"](3),d["\u0275\u0275textInterpolate"](s),d["\u0275\u0275advance"](3),d["\u0275\u0275textInterpolate"](e.barChartData[0].data[t])}}function C(n,a){if(1&n){var s=d["\u0275\u0275getCurrentView"]();d["\u0275\u0275elementStart"](0,"div",30),d["\u0275\u0275listener"]("click",(function(){return d["\u0275\u0275restoreView"](s),d["\u0275\u0275nextContext"]().goToNextPage()})),d["\u0275\u0275text"](1,"\n        "),d["\u0275\u0275element"](2,"ux-icon",31),d["\u0275\u0275text"](3,"\n    "),d["\u0275\u0275elementEnd"]()}}var v=[function(n){function a(a){var t=n.call(this,s(31634))||this;t.playground={files:{"app.component.ts":t.snippets.raw.scrollableChartTs,"app.component.html":t.snippets.raw.scrollableChartHtml,"app.component.css":t.snippets.raw.scrollableChartCss},modules:[{library:"chart.js"},{imports:["ChartsModule"],library:"ng2-charts"},{imports:["ColorServiceModule"],library:"@ux-aspects/ux-aspects"}]},t.barChartLegend=!1,t.labels=[".doc",".ppt",".pdf",".xls",".html",".txt",".png",".bmp",".gif",".svg",".ttf",".wav"],t.data=[34,25,19,34,32,44,12,27,15,48,40,36],t.page=0,t.pageSize=4,t.barChartLabels=t.getPageLabels(),t.barChartData=[{data:t.getPageData(),borderWidth:1,barPercentage:.5,categoryPercentage:1}];var e=a.getColor("grey6").toHex(),p=a.getColor("chart1").setAlpha(.1).toRgba(),o=a.getColor("chart1").setAlpha(.2).toRgba(),c=a.getColor("chart1").toHex(),l=a.getColor("grey2").toHex();return t.barChartOptions={maintainAspectRatio:!1,responsive:!0,animation:{duration:0},scales:{xAxes:[{gridLines:{color:"transparent"}}],yAxes:[{gridLines:{color:e},ticks:{min:0,max:50,stepSize:10}}]},tooltips:{backgroundColor:l,cornerRadius:0,callbacks:{title:function(n){},label:function(n){return"x: "+n.xLabel+", y: "+n.yLabel}},displayColors:!1}},t.barChartColors=[{backgroundColor:p,hoverBackgroundColor:o,borderColor:c}],t}return b(a,n),a.prototype.getPageData=function(){var n=this.page*this.pageSize;return this.data.slice(n,n+this.pageSize)},a.prototype.getPageLabels=function(){var n=this.page*this.pageSize;return this.labels.slice(n,n+this.pageSize)},a.prototype.goToPreviousPage=function(){this.hasPreviousPage()&&(this.page-=1,this.barChartLabels=this.getPageLabels(),this.barChartData[0].data=this.getPageData())},a.prototype.goToNextPage=function(){this.hasNextPage()&&(this.page+=1,this.barChartLabels=this.getPageLabels(),this.barChartData[0].data=this.getPageData())},a.prototype.hasNextPage=function(){return(this.page+1)*this.pageSize<this.data.length},a.prototype.hasPreviousPage=function(){return this.page>0},a.\u0275fac=function(n){return new(n||a)(d["\u0275\u0275directiveInject"](o.ColorService))},a.\u0275cmp=d["\u0275\u0275defineComponent"]({type:a,selectors:[["uxd-charts-scrollable-chart"]],features:[d["\u0275\u0275InheritDefinitionFeature"]],decls:211,vars:12,consts:[[1,"demo-chart-container"],["aria-label","Scroll to previous chart page","class","chart-scroll-previous-btn",3,"click",4,"ngIf"],["aria-label","Bar chart showing file type totals","baseChart","","chartType","bar",3,"datasets","labels","options","legend","colors"],["aria-label","Chart data"],[4,"ngFor","ngForOf"],["aria-label","Scroll to previous chart page","class","chart-scroll-next-btn",3,"click",4,"ngIf"],["tableTitle","Inputs"],["uxd-api-property","","name","dataSets","type","object[]"],["uxd-api-property","","name","chartType","type","string"],["uxd-api-property","","name","options","type","ChartOptions"],["uxd-api-property","","name","colors","type","object[]"],["uxd-api-property","","name","legend","type","boolean"],["tableTitle","Outputs"],["uxd-api-property","","name","chartClick"],["uxd-api-property","","name","chartHover"],[3,"minimal"],["heading","HTML"],["language","html",3,"content"],["heading","TypeScript"],["language","javascript",3,"content"],["heading","CSS"],["language","css",3,"content"],[1,"m-b-nil"],["href","https://www.npmjs.com/package/ng2-charts",1,"hyperlink"],["href","https://www.npmjs.com/package/chart.js",1,"hyperlink"],["href","https://www.npmjs.com/package/@types/chart.js",1,"hyperlink"],["href","http://valor-software.com/ng2-charts/",1,"hyperlink"],["href","http://www.chartjs.org/docs/",1,"hyperlink"],["aria-label","Scroll to previous chart page",1,"chart-scroll-previous-btn",3,"click"],["name","previous"],["aria-label","Scroll to previous chart page",1,"chart-scroll-next-btn",3,"click"],["name","next"]],template:function(n,a){1&n&&(d["\u0275\u0275elementStart"](0,"div",0),d["\u0275\u0275text"](1,"\n\n    "),d["\u0275\u0275template"](2,f,4,0,"div",1),d["\u0275\u0275text"](3,"\n\n    "),d["\u0275\u0275elementStart"](4,"canvas",2),d["\u0275\u0275text"](5,"\n\n        "),d["\u0275\u0275elementStart"](6,"table",3),d["\u0275\u0275text"](7,"\n            "),d["\u0275\u0275elementStart"](8,"thead"),d["\u0275\u0275text"](9,"\n                "),d["\u0275\u0275elementStart"](10,"tr"),d["\u0275\u0275text"](11,"\n                    "),d["\u0275\u0275elementStart"](12,"th"),d["\u0275\u0275text"](13,"File Type"),d["\u0275\u0275elementEnd"](),d["\u0275\u0275text"](14,"\n                    "),d["\u0275\u0275elementStart"](15,"th"),d["\u0275\u0275text"](16,"Number of Files"),d["\u0275\u0275elementEnd"](),d["\u0275\u0275text"](17,"\n                "),d["\u0275\u0275elementEnd"](),d["\u0275\u0275text"](18,"\n            "),d["\u0275\u0275elementEnd"](),d["\u0275\u0275text"](19,"\n            "),d["\u0275\u0275elementStart"](20,"tbody"),d["\u0275\u0275text"](21,"\n                "),d["\u0275\u0275template"](22,y,8,2,"tr",4),d["\u0275\u0275text"](23,"\n            "),d["\u0275\u0275elementEnd"](),d["\u0275\u0275text"](24,"\n        "),d["\u0275\u0275elementEnd"](),d["\u0275\u0275text"](25,"\n\n    "),d["\u0275\u0275elementEnd"](),d["\u0275\u0275text"](26,"\n\n    "),d["\u0275\u0275template"](27,C,4,0,"div",5),d["\u0275\u0275text"](28,"\n\n"),d["\u0275\u0275elementEnd"](),d["\u0275\u0275text"](29,"\n\n"),d["\u0275\u0275element"](30,"hr"),d["\u0275\u0275text"](31,"\n\n"),d["\u0275\u0275elementStart"](32,"p"),d["\u0275\u0275text"](33,"\n    Scrollable Charts can be added using the "),d["\u0275\u0275elementStart"](34,"code"),d["\u0275\u0275text"](35,"ng2-charts"),d["\u0275\u0275elementEnd"](),d["\u0275\u0275text"](36," library.\n    The "),d["\u0275\u0275elementStart"](37,"code"),d["\u0275\u0275text"](38,"chart.js"),d["\u0275\u0275elementEnd"](),d["\u0275\u0275text"](39," library needs to be imported and the "),d["\u0275\u0275elementStart"](40,"code"),d["\u0275\u0275text"](41,"ChartsModule"),d["\u0275\u0275elementEnd"](),d["\u0275\u0275text"](42," needs to be added to the appropriate NgModule.\n"),d["\u0275\u0275elementEnd"](),d["\u0275\u0275text"](43,"\n\n"),d["\u0275\u0275elementStart"](44,"p"),d["\u0275\u0275text"](45,"The "),d["\u0275\u0275elementStart"](46,"code"),d["\u0275\u0275text"](47,"baseChart"),d["\u0275\u0275elementEnd"](),d["\u0275\u0275text"](48," directive should be added to a "),d["\u0275\u0275elementStart"](49,"code"),d["\u0275\u0275text"](50,"canvas"),d["\u0275\u0275elementEnd"](),d["\u0275\u0275text"](51," element and the following attributes can be used to customize the chart behavior and appearance:"),d["\u0275\u0275elementEnd"](),d["\u0275\u0275text"](52,"\n\n"),d["\u0275\u0275elementStart"](53,"uxd-api-properties",6),d["\u0275\u0275text"](54,"\n    "),d["\u0275\u0275elementStart"](55,"tr",7),d["\u0275\u0275text"](56,"\n        Contains the data and properties for each data set to be displayed in the chart.\n    "),d["\u0275\u0275elementEnd"](),d["\u0275\u0275text"](57,"\n    "),d["\u0275\u0275elementStart"](58,"tr",8),d["\u0275\u0275text"](59,"\n        Indicates the type of the chart. Possible options are: "),d["\u0275\u0275elementStart"](60,"code"),d["\u0275\u0275text"](61,"line"),d["\u0275\u0275elementEnd"](),d["\u0275\u0275text"](62,", "),d["\u0275\u0275elementStart"](63,"code"),d["\u0275\u0275text"](64,"bar"),d["\u0275\u0275elementEnd"](),d["\u0275\u0275text"](65,", "),d["\u0275\u0275elementStart"](66,"code"),d["\u0275\u0275text"](67,"radar"),d["\u0275\u0275elementEnd"](),d["\u0275\u0275text"](68,", "),d["\u0275\u0275elementStart"](69,"code"),d["\u0275\u0275text"](70,"pie"),d["\u0275\u0275elementEnd"](),d["\u0275\u0275text"](71,", "),d["\u0275\u0275elementStart"](72,"code"),d["\u0275\u0275text"](73,"polarArea"),d["\u0275\u0275elementEnd"](),d["\u0275\u0275text"](74,", "),d["\u0275\u0275elementStart"](75,"code"),d["\u0275\u0275text"](76,"doughnut"),d["\u0275\u0275elementEnd"](),d["\u0275\u0275text"](77,"\n    "),d["\u0275\u0275elementEnd"](),d["\u0275\u0275text"](78,"\n    "),d["\u0275\u0275elementStart"](79,"tr",9),d["\u0275\u0275text"](80,"\n        Configures the appearance and behavior of all aspects of the chart.\n    "),d["\u0275\u0275elementEnd"](),d["\u0275\u0275text"](81,"\n    "),d["\u0275\u0275elementStart"](82,"tr",10),d["\u0275\u0275text"](83,"\n        Configure the color values to be used within the chart.\n    "),d["\u0275\u0275elementEnd"](),d["\u0275\u0275text"](84,"\n    "),d["\u0275\u0275elementStart"](85,"tr",11),d["\u0275\u0275text"](86,"\n        Determines whether or not the legend should be displayed.\n    "),d["\u0275\u0275elementEnd"](),d["\u0275\u0275text"](87,"\n"),d["\u0275\u0275elementEnd"](),d["\u0275\u0275text"](88,"\n\n"),d["\u0275\u0275elementStart"](89,"uxd-api-properties",12),d["\u0275\u0275text"](90,"\n    "),d["\u0275\u0275elementStart"](91,"tr",13),d["\u0275\u0275text"](92,"\n        Fires when click on a chart has occurred, returns information regarding active points and labels.\n    "),d["\u0275\u0275elementEnd"](),d["\u0275\u0275text"](93,"\n    "),d["\u0275\u0275elementStart"](94,"tr",14),d["\u0275\u0275text"](95,"\n        Fires when mousemove (hover) on a chart has occurred, returns information regarding active points and labels.\n    "),d["\u0275\u0275elementEnd"](),d["\u0275\u0275text"](96,"\n"),d["\u0275\u0275elementEnd"](),d["\u0275\u0275text"](97,"\n\n"),d["\u0275\u0275elementStart"](98,"p"),d["\u0275\u0275text"](99,"Complete documentation on the directive and chart options can be found at the documentation links below."),d["\u0275\u0275elementEnd"](),d["\u0275\u0275text"](100,"\n\n"),d["\u0275\u0275elementStart"](101,"p"),d["\u0275\u0275text"](102,"The following code can be used to create the example above: "),d["\u0275\u0275elementEnd"](),d["\u0275\u0275text"](103,"\n\n"),d["\u0275\u0275elementStart"](104,"ux-tabset",15),d["\u0275\u0275text"](105,"\n\n    "),d["\u0275\u0275elementStart"](106,"ux-tab",16),d["\u0275\u0275text"](107,"\n        "),d["\u0275\u0275element"](108,"uxd-snippet",17),d["\u0275\u0275text"](109,"\n    "),d["\u0275\u0275elementEnd"](),d["\u0275\u0275text"](110,"\n\n    "),d["\u0275\u0275elementStart"](111,"ux-tab",18),d["\u0275\u0275text"](112,"\n        "),d["\u0275\u0275element"](113,"uxd-snippet",19),d["\u0275\u0275text"](114,"\n    "),d["\u0275\u0275elementEnd"](),d["\u0275\u0275text"](115,"\n\n    "),d["\u0275\u0275elementStart"](116,"ux-tab",20),d["\u0275\u0275text"](117,"\n        "),d["\u0275\u0275element"](118,"uxd-snippet",21),d["\u0275\u0275text"](119,"\n    "),d["\u0275\u0275elementEnd"](),d["\u0275\u0275text"](120,"\n\n"),d["\u0275\u0275elementEnd"](),d["\u0275\u0275text"](121,"\n\n"),d["\u0275\u0275element"](122,"br"),d["\u0275\u0275text"](123,"\n\n"),d["\u0275\u0275elementStart"](124,"p"),d["\u0275\u0275text"](125,"\n    The effect of scrolling on a chart can be achieved by simply displaying only a subset of the dataset at a time.\n    We can add 'previous' and 'next' buttons to allow easy navigation between the different pages of data.\n"),d["\u0275\u0275elementEnd"](),d["\u0275\u0275text"](126,"\n\n"),d["\u0275\u0275elementStart"](127,"p"),d["\u0275\u0275text"](128,"\n    In the example above, we store the entire dataset in an array. We also store an array containing all the labels for each data point.\n    By defining several variables ("),d["\u0275\u0275elementStart"](129,"code"),d["\u0275\u0275text"](130,"pageSize"),d["\u0275\u0275elementEnd"](),d["\u0275\u0275text"](131," & "),d["\u0275\u0275elementStart"](132,"code"),d["\u0275\u0275text"](133,"pageNumber"),d["\u0275\u0275elementEnd"](),d["\u0275\u0275text"](134,") we can easily control the datasets shown.\n"),d["\u0275\u0275elementEnd"](),d["\u0275\u0275text"](135,"\n\n"),d["\u0275\u0275elementStart"](136,"p"),d["\u0275\u0275text"](137,"\n    We then add several functions:\n"),d["\u0275\u0275elementEnd"](),d["\u0275\u0275text"](138,"\n\n"),d["\u0275\u0275elementStart"](139,"ul"),d["\u0275\u0275text"](140,"\n    "),d["\u0275\u0275elementStart"](141,"li"),d["\u0275\u0275elementStart"](142,"code"),d["\u0275\u0275text"](143,"getPageData"),d["\u0275\u0275elementEnd"](),d["\u0275\u0275text"](144," - this returns a subset of the complete dataset based on the current page number and page size."),d["\u0275\u0275elementEnd"](),d["\u0275\u0275text"](145,"\n    "),d["\u0275\u0275elementStart"](146,"li"),d["\u0275\u0275elementStart"](147,"code"),d["\u0275\u0275text"](148,"getPageLabels"),d["\u0275\u0275elementEnd"](),d["\u0275\u0275text"](149," - this returns the labels to be displayed on the x-axis that correspond to the data points shown on the page."),d["\u0275\u0275elementEnd"](),d["\u0275\u0275text"](150,"\n    "),d["\u0275\u0275elementStart"](151,"li"),d["\u0275\u0275elementStart"](152,"code"),d["\u0275\u0275text"](153,"goToPreviousPage"),d["\u0275\u0275elementEnd"](),d["\u0275\u0275text"](154," - this will decrement the current page number. It will then update the dataset and labels using methods described above."),d["\u0275\u0275elementEnd"](),d["\u0275\u0275text"](155,"\n    "),d["\u0275\u0275elementStart"](156,"li"),d["\u0275\u0275elementStart"](157,"code"),d["\u0275\u0275text"](158,"hasPreviousPage"),d["\u0275\u0275elementEnd"](),d["\u0275\u0275text"](159," - this will determine whether we are on the first page or not."),d["\u0275\u0275elementEnd"](),d["\u0275\u0275text"](160,"\n    "),d["\u0275\u0275elementStart"](161,"li"),d["\u0275\u0275elementStart"](162,"code"),d["\u0275\u0275text"](163,"hasNextPage"),d["\u0275\u0275elementEnd"](),d["\u0275\u0275text"](164," - this will determine whether we are on the last page or not."),d["\u0275\u0275elementEnd"](),d["\u0275\u0275text"](165,"\n"),d["\u0275\u0275elementEnd"](),d["\u0275\u0275text"](166,"\n\n"),d["\u0275\u0275elementStart"](167,"blockquote"),d["\u0275\u0275text"](168,"\n\n    "),d["\u0275\u0275elementStart"](169,"p",22),d["\u0275\u0275text"](170,"\n        "),d["\u0275\u0275elementStart"](171,"b"),d["\u0275\u0275text"](172,"Dependencies: "),d["\u0275\u0275elementEnd"](),d["\u0275\u0275text"](173,"\n        "),d["\u0275\u0275elementStart"](174,"a",23),d["\u0275\u0275text"](175,"ng2-charts"),d["\u0275\u0275elementEnd"](),d["\u0275\u0275text"](176,",\n        "),d["\u0275\u0275elementStart"](177,"a",24),d["\u0275\u0275text"](178,"chart.js"),d["\u0275\u0275elementEnd"](),d["\u0275\u0275text"](179,"\n    "),d["\u0275\u0275elementEnd"](),d["\u0275\u0275text"](180,"\n\n    "),d["\u0275\u0275elementStart"](181,"p",22),d["\u0275\u0275text"](182,"\n        "),d["\u0275\u0275elementStart"](183,"b"),d["\u0275\u0275text"](184,"Type Definitions: "),d["\u0275\u0275elementEnd"](),d["\u0275\u0275text"](185,"\n        "),d["\u0275\u0275elementStart"](186,"a",25),d["\u0275\u0275text"](187,"@types/chart.js"),d["\u0275\u0275elementEnd"](),d["\u0275\u0275text"](188,"\n    "),d["\u0275\u0275elementEnd"](),d["\u0275\u0275text"](189,"\n\n    "),d["\u0275\u0275elementStart"](190,"p",22),d["\u0275\u0275text"](191,"\n        "),d["\u0275\u0275elementStart"](192,"b"),d["\u0275\u0275text"](193,"Modules: "),d["\u0275\u0275elementEnd"](),d["\u0275\u0275text"](194,"\n        "),d["\u0275\u0275elementStart"](195,"span"),d["\u0275\u0275text"](196,"ChartsModule"),d["\u0275\u0275elementEnd"](),d["\u0275\u0275text"](197,"\n    "),d["\u0275\u0275elementEnd"](),d["\u0275\u0275text"](198,"\n\n\n    "),d["\u0275\u0275elementStart"](199,"p",22),d["\u0275\u0275text"](200,"\n        "),d["\u0275\u0275elementStart"](201,"b"),d["\u0275\u0275text"](202,"Documentation: "),d["\u0275\u0275elementEnd"](),d["\u0275\u0275text"](203,"\n        "),d["\u0275\u0275elementStart"](204,"a",26),d["\u0275\u0275text"](205,"Angular Directive Documentation"),d["\u0275\u0275elementEnd"](),d["\u0275\u0275text"](206,",\n        "),d["\u0275\u0275elementStart"](207,"a",27),d["\u0275\u0275text"](208,"Chart Library Documentation"),d["\u0275\u0275elementEnd"](),d["\u0275\u0275text"](209,"\n    "),d["\u0275\u0275elementEnd"](),d["\u0275\u0275text"](210,"\n"),d["\u0275\u0275elementEnd"]()),2&n&&(d["\u0275\u0275advance"](2),d["\u0275\u0275property"]("ngIf",a.hasPreviousPage()),d["\u0275\u0275advance"](2),d["\u0275\u0275property"]("datasets",a.barChartData)("labels",a.barChartLabels)("options",a.barChartOptions)("legend",a.barChartLegend)("colors",a.barChartColors),d["\u0275\u0275advance"](18),d["\u0275\u0275property"]("ngForOf",a.barChartLabels),d["\u0275\u0275advance"](5),d["\u0275\u0275property"]("ngIf",a.hasNextPage()),d["\u0275\u0275advance"](77),d["\u0275\u0275property"]("minimal",!1),d["\u0275\u0275advance"](4),d["\u0275\u0275property"]("content",a.snippets.compiled.scrollableChartHtml),d["\u0275\u0275advance"](5),d["\u0275\u0275property"]("content",a.snippets.compiled.scrollableChartTs),d["\u0275\u0275advance"](5),d["\u0275\u0275property"]("content",a.snippets.compiled.scrollableChartCss))},directives:[e.NgIf,c.BaseChartDirective,e.NgForOf,h.$,g.S,o.TabsetComponent,o.TabComponent,m.j,o.DefaultFocusIndicatorDirective,o.IconComponent],styles:[".chart-scroll-previous-btn[_ngcontent-%COMP%], .chart-scroll-next-btn[_ngcontent-%COMP%] {\n  position: absolute;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 25px;\n  height: 25px;\n  background-color: #00a7a2;\n  border-radius: 50%;\n  opacity: 0.7;\n  cursor: pointer;\n  transition: opacity 0.3s ease-in-out;\n  top: calc(50% - 22px);\n  color: #fff;\n  font-size: 13px;\n}\n.chart-scroll-previous-btn[_ngcontent-%COMP%]:hover, .chart-scroll-next-btn[_ngcontent-%COMP%]:hover {\n  opacity: 0.9;\n}\n.chart-scroll-previous-btn[_ngcontent-%COMP%] {\n  left: 32px;\n  padding-right: 1px;\n}\n.chart-scroll-next-btn[_ngcontent-%COMP%] {\n  right: 10px;\n  padding-left: 2px;\n}"]}),a=function(n,a,s,t){var e,p=arguments.length,o=p<3?a:null===t?t=Object.getOwnPropertyDescriptor(a,s):t;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(n,a,s,t);else for(var c=n.length-1;c>=0;c--)(e=n[c])&&(o=(p<3?e(o):p>3?e(a,s,o):e(a,s))||o);return p>3&&o&&Object.defineProperty(a,s,o),o}([(0,k.cG)("ChartsScrollableChartComponent"),x("design:paramtypes",[o.ColorService])],a)}(i.u)],S=[{path:"**",component:r.R,data:{category:u.N.resolveCategoryData(u.I.Charts,"Scrollable Chart")}}],w=function(){function n(n,a){a.registerResolver(n,v)}return n.\u0275fac=function(a){return new(a||n)(d["\u0275\u0275inject"](d.ComponentFactoryResolver),d["\u0275\u0275inject"](u.N))},n.\u0275mod=d["\u0275\u0275defineNgModule"]({type:n}),n.\u0275inj=d["\u0275\u0275defineInjector"]({imports:[[c.ChartsModule,o.ColorServiceModule,e.CommonModule,l.N,o.IconModule,p.RouterModule.forChild(S),o.TabsetModule]]}),n}()}}]);
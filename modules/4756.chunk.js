(self.webpackChunk_ux_aspects_ux_aspects_docs=self.webpackChunk_ux_aspects_ux_aspects_docs||[]).push([[4756],{87768:function(n){n.exports={snippet:'<span class="token selector">.demo-chart-container</span> <span class="token punctuation">{</span>\n    <span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">;</span>\n    <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>\n    <span class="token property">height</span><span class="token punctuation">:</span> 200px<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>',example:".demo-chart-container {\n    display: block;\n    position: relative;\n    height: 200px;\n}"}},98576:function(n){n.exports={snippet:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>demo-chart-container<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>canvas</span> <span class="token attr-name">aria-label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Bar chart showing file type totals<span class="token punctuation">"</span></span>\n        <span class="token attr-name">baseChart</span>\n        <span class="token attr-name">[datasets]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>barChartData<span class="token punctuation">"</span></span>\n        <span class="token attr-name">[labels]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>barChartLabels<span class="token punctuation">"</span></span>\n        <span class="token attr-name">[options]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>barChartOptions<span class="token punctuation">"</span></span>\n        <span class="token attr-name">[legend]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>barChartLegend<span class="token punctuation">"</span></span>\n        <span class="token attr-name">[colors]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>barChartColors<span class="token punctuation">"</span></span>\n        <span class="token attr-name">chartType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>bar<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>thead</span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>\n                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>File Type<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>\n                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>Number of Files<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>thead</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tbody</span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span> <span class="token attr-name">*ngFor</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>let label of barChartLabels; let idx = index<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>{{label}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>\n                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>{{barChartData[0].data[idx]}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tbody</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">></span></span>\n\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>canvas</span><span class="token punctuation">></span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>',example:'<div class="demo-chart-container">\n\n    <canvas aria-label="Bar chart showing file type totals"\n        baseChart\n        [datasets]="barChartData"\n        [labels]="barChartLabels"\n        [options]="barChartOptions"\n        [legend]="barChartLegend"\n        [colors]="barChartColors"\n        chartType="bar">\n\n        <table>\n            <thead>\n                <tr>\n                    <th>File Type</th>\n                    <th>Number of Files</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr *ngFor="let label of barChartLabels; let idx = index">\n                    <td>{{label}}</td>\n                    <td>{{barChartData[0].data[idx]}}</td>\n                </tr>\n            </tbody>\n        </table>\n\n    </canvas>\n\n</div>'}},58336:function(n){n.exports={snippet:'<span class="token keyword">import</span> <span class="token punctuation">{</span> AfterViewInit<span class="token punctuation">,</span> Component<span class="token punctuation">,</span> ViewChild <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@angular/core\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> ColorService <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@ux-aspects/ux-aspects\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> Chart <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'chart.js\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> BaseChartDirective <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'ng2-charts\'</span><span class="token punctuation">;</span>\n\n@<span class="token function">Component</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    selector<span class="token operator">:</span> <span class="token string">\'app\'</span><span class="token punctuation">,</span>\n    templateUrl<span class="token operator">:</span> <span class="token string">\'./app.component.html\'</span><span class="token punctuation">,</span>\n    styleUrls<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">\'./app.component.css\'</span><span class="token punctuation">]</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">AppComponent</span> <span class="token keyword">implements</span> <span class="token class-name">AfterViewInit</span> <span class="token punctuation">{</span>\n\n    <span class="token comment">// access the chart directive properties</span>\n    @<span class="token function">ViewChild</span><span class="token punctuation">(</span>BaseChartDirective<span class="token punctuation">)</span> baseChart<span class="token operator">:</span> BaseChartDirective<span class="token punctuation">;</span>\n\n    <span class="token comment">// configure the directive data</span>\n    barChartData<span class="token operator">:</span> Chart<span class="token punctuation">.</span>ChartDataSets<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">{</span>\n        data<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">34</span><span class="token punctuation">,</span> <span class="token number">25</span><span class="token punctuation">,</span> <span class="token number">19</span><span class="token punctuation">,</span> <span class="token number">34</span><span class="token punctuation">,</span> <span class="token number">32</span><span class="token punctuation">,</span> <span class="token number">44</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">67</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n        borderWidth<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>\n        barPercentage<span class="token operator">:</span> <span class="token number">0.5</span><span class="token punctuation">,</span>\n        categoryPercentage<span class="token operator">:</span> <span class="token number">1</span>\n    <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n    barChartLabels<span class="token operator">:</span> string<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">\'.doc\'</span><span class="token punctuation">,</span> <span class="token string">\'.ppt\'</span><span class="token punctuation">,</span> <span class="token string">\'.pdf\'</span><span class="token punctuation">,</span> <span class="token string">\'.xls\'</span><span class="token punctuation">,</span> <span class="token string">\'.html\'</span><span class="token punctuation">,</span> <span class="token string">\'.txt\'</span><span class="token punctuation">,</span> <span class="token string">\'.csv\'</span><span class="token punctuation">,</span> <span class="token string">\'.mht\'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n    barChartOptions<span class="token operator">:</span> Chart<span class="token punctuation">.</span>ChartOptions<span class="token punctuation">;</span>\n    barChartLegend<span class="token operator">:</span> boolean <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\n    barChartColors<span class="token operator">:</span> any<span class="token punctuation">;</span>\n\n    <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">colorService<span class="token operator">:</span> ColorService</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n\n        <span class="token comment">// Prepare colors used in chart</span>\n        <span class="token keyword">let</span> borderColor <span class="token operator">=</span> colorService<span class="token punctuation">.</span><span class="token function">getColor</span><span class="token punctuation">(</span><span class="token string">\'grey2\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setAlpha</span><span class="token punctuation">(</span><span class="token number">0.5</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toRgba</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">let</span> barBackgroundColor <span class="token operator">=</span> colorService<span class="token punctuation">.</span><span class="token function">getColor</span><span class="token punctuation">(</span><span class="token string">\'chart1\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setAlpha</span><span class="token punctuation">(</span><span class="token number">0.1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toRgba</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">let</span> barHoverBackgroundColor <span class="token operator">=</span> colorService<span class="token punctuation">.</span><span class="token function">getColor</span><span class="token punctuation">(</span><span class="token string">\'chart1\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setAlpha</span><span class="token punctuation">(</span><span class="token number">0.2</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toRgba</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">let</span> barBorderColor <span class="token operator">=</span> colorService<span class="token punctuation">.</span><span class="token function">getColor</span><span class="token punctuation">(</span><span class="token string">\'chart1\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toHex</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">let</span> tooltipBackgroundColor <span class="token operator">=</span> colorService<span class="token punctuation">.</span><span class="token function">getColor</span><span class="token punctuation">(</span><span class="token string">\'grey2\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toHex</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token keyword">this</span><span class="token punctuation">.</span>barChartOptions <span class="token operator">=</span> <span class="token punctuation">{</span>\n            maintainAspectRatio<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n            responsive<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n            scales<span class="token operator">:</span> <span class="token punctuation">{</span>\n                xAxes<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span>\n                    gridLines<span class="token operator">:</span> <span class="token punctuation">{</span>\n                        display<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n                        zeroLineColor<span class="token operator">:</span> borderColor<span class="token punctuation">,</span>\n                        color<span class="token operator">:</span> <span class="token string">\'transparent\'</span>\n                    <span class="token punctuation">}</span>\n                <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n                yAxes<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span>\n                    type<span class="token operator">:</span> <span class="token string">\'linear\'</span><span class="token punctuation">,</span>\n                    gridLines<span class="token operator">:</span> <span class="token punctuation">{</span>\n                        zeroLineColor<span class="token operator">:</span> borderColor\n                    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n                    ticks<span class="token operator">:</span> <span class="token punctuation">{</span>\n                        min<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>\n                        max<span class="token operator">:</span> <span class="token number">80</span><span class="token punctuation">,</span>\n                        stepSize<span class="token operator">:</span> <span class="token number">20</span>\n                    <span class="token punctuation">}</span> <span class="token keyword">as</span> Chart<span class="token punctuation">.</span>LinearTickOptions\n                <span class="token punctuation">}</span><span class="token punctuation">]</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            tooltips<span class="token operator">:</span> <span class="token punctuation">{</span>\n                backgroundColor<span class="token operator">:</span> tooltipBackgroundColor<span class="token punctuation">,</span>\n                cornerRadius<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>\n                callbacks<span class="token operator">:</span> <span class="token punctuation">{</span>\n                    <span class="token function-variable function">title</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">item<span class="token operator">:</span> Chart<span class="token punctuation">.</span>ChartTooltipItem<span class="token punctuation">[</span><span class="token punctuation">]</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n                        <span class="token keyword">return</span><span class="token punctuation">;</span>\n                    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n                    <span class="token function-variable function">label</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">item<span class="token operator">:</span> Chart<span class="token punctuation">.</span>ChartTooltipItem</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n                        <span class="token keyword">return</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">x: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>item<span class="token punctuation">.</span>xLabel<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">, y: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>item<span class="token punctuation">.</span>yLabel<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span>\n                    <span class="token punctuation">}</span>\n                <span class="token punctuation">}</span><span class="token punctuation">,</span>\n                displayColors<span class="token operator">:</span> <span class="token boolean">false</span>\n            <span class="token punctuation">}</span> <span class="token keyword">as</span> any\n        <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n        <span class="token keyword">this</span><span class="token punctuation">.</span>barChartColors <span class="token operator">=</span> <span class="token punctuation">[</span>\n            <span class="token punctuation">{</span>\n                backgroundColor<span class="token operator">:</span> barBackgroundColor<span class="token punctuation">,</span>\n                hoverBackgroundColor<span class="token operator">:</span> barHoverBackgroundColor<span class="token punctuation">,</span>\n                borderColor<span class="token operator">:</span> barBorderColor\n            <span class="token punctuation">}</span>\n        <span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n    <span class="token punctuation">}</span>\n\n    <span class="token function">ngAfterViewInit</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n\n        <span class="token comment">// get instance of the chart</span>\n        <span class="token keyword">let</span> chartInstance <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>baseChart<span class="token punctuation">.</span>chart<span class="token punctuation">;</span>\n\n        <span class="token comment">// create reference to Chart with type of any</span>\n        <span class="token keyword">let</span> chartJs <span class="token operator">=</span> Chart <span class="token keyword">as</span> any<span class="token punctuation">;</span>\n\n        <span class="token comment">// Added dashed borders to forecast data</span>\n        chartJs<span class="token punctuation">.</span>helpers<span class="token punctuation">.</span><span class="token function">each</span><span class="token punctuation">(</span>chartInstance<span class="token punctuation">.</span><span class="token function">getDatasetMeta</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span>data<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">bar<span class="token operator">:</span> any<span class="token punctuation">,</span> index<span class="token operator">:</span> number</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n\n            <span class="token comment">// only alter the bars that are forecast data</span>\n            <span class="token keyword">if</span> <span class="token punctuation">(</span>index <span class="token operator">>=</span> <span class="token number">6</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                bar<span class="token punctuation">.</span><span class="token function-variable function">draw</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                    chartInstance<span class="token punctuation">.</span>ctx<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n                    chartInstance<span class="token punctuation">.</span>ctx<span class="token punctuation">.</span><span class="token function">setLineDash</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n                    chartJs<span class="token punctuation">.</span>elements<span class="token punctuation">.</span><span class="token class-name">Rectangle</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">draw</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> arguments<span class="token punctuation">)</span><span class="token punctuation">;</span>\n                    chartInstance<span class="token punctuation">.</span>ctx<span class="token punctuation">.</span><span class="token function">restore</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n                <span class="token punctuation">}</span><span class="token punctuation">;</span>\n            <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n<span class="token punctuation">}</span>',example:"import { AfterViewInit, Component, ViewChild } from '@angular/core';\nimport { ColorService } from '@ux-aspects/ux-aspects';\nimport { Chart } from 'chart.js';\nimport { BaseChartDirective } from 'ng2-charts';\n\n@Component({\n    selector: 'app',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements AfterViewInit {\n\n    // access the chart directive properties\n    @ViewChild(BaseChartDirective) baseChart: BaseChartDirective;\n\n    // configure the directive data\n    barChartData: Chart.ChartDataSets[] = [{\n        data: [34, 25, 19, 34, 32, 44, 50, 67],\n        borderWidth: 1,\n        barPercentage: 0.5,\n        categoryPercentage: 1\n    }];\n\n    barChartLabels: string[] = ['.doc', '.ppt', '.pdf', '.xls', '.html', '.txt', '.csv', '.mht'];\n    barChartOptions: Chart.ChartOptions;\n    barChartLegend: boolean = false;\n    barChartColors: any;\n\n    constructor(colorService: ColorService) {\n\n        // Prepare colors used in chart\n        let borderColor = colorService.getColor('grey2').setAlpha(0.5).toRgba();\n        let barBackgroundColor = colorService.getColor('chart1').setAlpha(0.1).toRgba();\n        let barHoverBackgroundColor = colorService.getColor('chart1').setAlpha(0.2).toRgba();\n        let barBorderColor = colorService.getColor('chart1').toHex();\n        let tooltipBackgroundColor = colorService.getColor('grey2').toHex();\n\n        this.barChartOptions = {\n            maintainAspectRatio: false,\n            responsive: true,\n            scales: {\n                xAxes: [{\n                    gridLines: {\n                        display: true,\n                        zeroLineColor: borderColor,\n                        color: 'transparent'\n                    }\n                }],\n                yAxes: [{\n                    type: 'linear',\n                    gridLines: {\n                        zeroLineColor: borderColor\n                    },\n                    ticks: {\n                        min: 0,\n                        max: 80,\n                        stepSize: 20\n                    } as Chart.LinearTickOptions\n                }]\n            },\n            tooltips: {\n                backgroundColor: tooltipBackgroundColor,\n                cornerRadius: 0,\n                callbacks: {\n                    title: (item: Chart.ChartTooltipItem[]) => {\n                        return;\n                    },\n                    label: (item: Chart.ChartTooltipItem) => {\n                        return `x: ${item.xLabel}, y: ${item.yLabel}`;\n                    }\n                },\n                displayColors: false\n            } as any\n        };\n\n        this.barChartColors = [\n            {\n                backgroundColor: barBackgroundColor,\n                hoverBackgroundColor: barHoverBackgroundColor,\n                borderColor: barBorderColor\n            }\n        ];\n\n    }\n\n    ngAfterViewInit() {\n\n        // get instance of the chart\n        let chartInstance = this.baseChart.chart;\n\n        // create reference to Chart with type of any\n        let chartJs = Chart as any;\n\n        // Added dashed borders to forecast data\n        chartJs.helpers.each(chartInstance.getDatasetMeta(0).data, (bar: any, index: number) => {\n\n            // only alter the bars that are forecast data\n            if (index >= 6) {\n                bar.draw = function () {\n                    chartInstance.ctx.save();\n                    chartInstance.ctx.setLineDash([2, 2]);\n                    chartJs.elements.Rectangle.prototype.draw.apply(this, arguments);\n                    chartInstance.ctx.restore();\n                };\n            }\n        });\n    }\n\n}"}},93659:function(n){n.exports={snippet:'<span class="token selector">.demo-chart-container</span> <span class="token punctuation">{</span>\n    <span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">;</span>\n    <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>\n    <span class="token property">height</span><span class="token punctuation">:</span> 200px<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>',example:".demo-chart-container {\n    display: block;\n    position: relative;\n    height: 200px;\n}"}},10258:function(n){n.exports={snippet:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>demo-chart-container<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>canvas</span> <span class="token attr-name">aria-label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Horizontal bar chart showing file type totals<span class="token punctuation">"</span></span>\n        <span class="token attr-name">baseChart</span>\n        <span class="token attr-name">[datasets]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>barChartData<span class="token punctuation">"</span></span>\n        <span class="token attr-name">[labels]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>barChartLabels<span class="token punctuation">"</span></span>\n        <span class="token attr-name">[options]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>barChartOptions<span class="token punctuation">"</span></span>\n        <span class="token attr-name">[legend]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>barChartLegend<span class="token punctuation">"</span></span>\n        <span class="token attr-name">[colors]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>barChartColors<span class="token punctuation">"</span></span>\n        <span class="token attr-name">chartType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>horizontalBar<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span> <span class="token attr-name">aria-label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Chart data<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>thead</span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>\n                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>File Type<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>\n                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>Number of Files<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>thead</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tbody</span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span> <span class="token attr-name">*ngFor</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>let label of barChartLabels; let idx = index<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>{{label}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>\n                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>{{barChartData[0].data[idx]}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tbody</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">></span></span>\n\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>canvas</span><span class="token punctuation">></span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>',example:'<div class="demo-chart-container">\n\n    <canvas aria-label="Horizontal bar chart showing file type totals"\n        baseChart\n        [datasets]="barChartData"\n        [labels]="barChartLabels"\n        [options]="barChartOptions"\n        [legend]="barChartLegend"\n        [colors]="barChartColors"\n        chartType="horizontalBar">\n\n        <table aria-label="Chart data">\n            <thead>\n                <tr>\n                    <th>File Type</th>\n                    <th>Number of Files</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr *ngFor="let label of barChartLabels; let idx = index">\n                    <td>{{label}}</td>\n                    <td>{{barChartData[0].data[idx]}}</td>\n                </tr>\n            </tbody>\n        </table>\n\n    </canvas>\n\n</div>'}},67283:function(n){n.exports={snippet:'<span class="token keyword">import</span> <span class="token punctuation">{</span> Component <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@angular/core\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> ColorService <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@ux-aspects/ux-aspects\'</span><span class="token punctuation">;</span>\n\n@<span class="token function">Component</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    selector<span class="token operator">:</span> <span class="token string">\'app\'</span><span class="token punctuation">,</span>\n    templateUrl<span class="token operator">:</span> <span class="token string">\'./app.component.html\'</span><span class="token punctuation">,</span>\n    styleUrls<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">\'./app.component.css\'</span><span class="token punctuation">]</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">AppComponent</span> <span class="token punctuation">{</span>\n\n    <span class="token comment">// configure the directive data</span>\n    barChartData<span class="token operator">:</span> Chart<span class="token punctuation">.</span>ChartDataSets<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">{</span>\n        data<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">44</span><span class="token punctuation">,</span> <span class="token number">32</span><span class="token punctuation">,</span> <span class="token number">34</span><span class="token punctuation">,</span> <span class="token number">19</span><span class="token punctuation">,</span> <span class="token number">25</span><span class="token punctuation">,</span> <span class="token number">34</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n        borderWidth<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>\n        barPercentage<span class="token operator">:</span> <span class="token number">0.5</span><span class="token punctuation">,</span>\n        categoryPercentage<span class="token operator">:</span> <span class="token number">1</span>\n    <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n    barChartLabels<span class="token operator">:</span> string<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">\'.txt\'</span><span class="token punctuation">,</span> <span class="token string">\'.html\'</span><span class="token punctuation">,</span> <span class="token string">\'.xls\'</span><span class="token punctuation">,</span> <span class="token string">\'.pdf\'</span><span class="token punctuation">,</span> <span class="token string">\'.ppt\'</span><span class="token punctuation">,</span> <span class="token string">\'.doc\'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n    barChartOptions<span class="token operator">:</span> Chart<span class="token punctuation">.</span>ChartOptions<span class="token punctuation">;</span>\n    barChartLegend<span class="token operator">:</span> boolean <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\n    barChartColors<span class="token operator">:</span> any<span class="token punctuation">;</span>\n\n    <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">colorService<span class="token operator">:</span> ColorService</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n\n        <span class="token keyword">let</span> tooltipBackgroundColor <span class="token operator">=</span> colorService<span class="token punctuation">.</span><span class="token function">getColor</span><span class="token punctuation">(</span><span class="token string">\'grey2\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toHex</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">let</span> barBackgroundColor <span class="token operator">=</span> colorService<span class="token punctuation">.</span><span class="token function">getColor</span><span class="token punctuation">(</span><span class="token string">\'chart1\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setAlpha</span><span class="token punctuation">(</span><span class="token number">0.1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toRgba</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">let</span> barHoverBackgroundColor <span class="token operator">=</span> colorService<span class="token punctuation">.</span><span class="token function">getColor</span><span class="token punctuation">(</span><span class="token string">\'chart1\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setAlpha</span><span class="token punctuation">(</span><span class="token number">0.2</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toRgba</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">let</span> barBorderColor <span class="token operator">=</span> colorService<span class="token punctuation">.</span><span class="token function">getColor</span><span class="token punctuation">(</span><span class="token string">\'chart1\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toHex</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token keyword">this</span><span class="token punctuation">.</span>barChartOptions <span class="token operator">=</span> <span class="token punctuation">{</span>\n            maintainAspectRatio<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n            responsive<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n            scales<span class="token operator">:</span> <span class="token punctuation">{</span>\n                xAxes<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span>\n                    gridLines<span class="token operator">:</span> <span class="token punctuation">{</span>\n                        color<span class="token operator">:</span> <span class="token string">\'transparent\'</span>\n                    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n                    ticks<span class="token operator">:</span> <span class="token punctuation">{</span>\n                        min<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>\n                        max<span class="token operator">:</span> <span class="token number">45</span><span class="token punctuation">,</span>\n                        stepSize<span class="token operator">:</span> <span class="token number">5</span>\n                    <span class="token punctuation">}</span> <span class="token keyword">as</span> Chart<span class="token punctuation">.</span>LinearTickOptions\n                <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n                yAxes<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span>\n                    gridLines<span class="token operator">:</span> <span class="token punctuation">{</span>\n                        color<span class="token operator">:</span> <span class="token string">\'transparent\'</span>\n                    <span class="token punctuation">}</span>\n                <span class="token punctuation">}</span> <span class="token keyword">as</span> Chart<span class="token punctuation">.</span>ChartXAxe<span class="token punctuation">]</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            tooltips<span class="token operator">:</span> <span class="token punctuation">{</span>\n                backgroundColor<span class="token operator">:</span> tooltipBackgroundColor<span class="token punctuation">,</span>\n                cornerRadius<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>\n                callbacks<span class="token operator">:</span> <span class="token punctuation">{</span>\n                    <span class="token function-variable function">title</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">item<span class="token operator">:</span> Chart<span class="token punctuation">.</span>ChartTooltipItem<span class="token punctuation">[</span><span class="token punctuation">]</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n                        <span class="token keyword">return</span><span class="token punctuation">;</span>\n                    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n                    <span class="token function-variable function">label</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">item<span class="token operator">:</span> Chart<span class="token punctuation">.</span>ChartTooltipItem</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n                        <span class="token keyword">return</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">x: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span> item<span class="token punctuation">.</span>xLabel <span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">, y: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span> item<span class="token punctuation">.</span>yLabel <span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span>\n                    <span class="token punctuation">}</span>\n                <span class="token punctuation">}</span><span class="token punctuation">,</span>\n                displayColors<span class="token operator">:</span> <span class="token boolean">false</span>\n            <span class="token punctuation">}</span> <span class="token keyword">as</span> any\n        <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n        <span class="token keyword">this</span><span class="token punctuation">.</span>barChartColors <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">{</span>\n            backgroundColor<span class="token operator">:</span> barBackgroundColor<span class="token punctuation">,</span>\n            hoverBackgroundColor<span class="token operator">:</span> barHoverBackgroundColor<span class="token punctuation">,</span>\n            borderColor<span class="token operator">:</span> barBorderColor\n        <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n    <span class="token punctuation">}</span>\n\n<span class="token punctuation">}</span>',example:"import { Component } from '@angular/core';\nimport { ColorService } from '@ux-aspects/ux-aspects';\n\n@Component({\n    selector: 'app',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n    // configure the directive data\n    barChartData: Chart.ChartDataSets[] = [{\n        data: [44, 32, 34, 19, 25, 34],\n        borderWidth: 1,\n        barPercentage: 0.5,\n        categoryPercentage: 1\n    }];\n\n    barChartLabels: string[] = ['.txt', '.html', '.xls', '.pdf', '.ppt', '.doc'];\n    barChartOptions: Chart.ChartOptions;\n    barChartLegend: boolean = false;\n    barChartColors: any;\n\n    constructor(colorService: ColorService) {\n\n        let tooltipBackgroundColor = colorService.getColor('grey2').toHex();\n        let barBackgroundColor = colorService.getColor('chart1').setAlpha(0.1).toRgba();\n        let barHoverBackgroundColor = colorService.getColor('chart1').setAlpha(0.2).toRgba();\n        let barBorderColor = colorService.getColor('chart1').toHex();\n\n        this.barChartOptions = {\n            maintainAspectRatio: false,\n            responsive: true,\n            scales: {\n                xAxes: [{\n                    gridLines: {\n                        color: 'transparent'\n                    },\n                    ticks: {\n                        min: 0,\n                        max: 45,\n                        stepSize: 5\n                    } as Chart.LinearTickOptions\n                }],\n                yAxes: [{\n                    gridLines: {\n                        color: 'transparent'\n                    }\n                } as Chart.ChartXAxe]\n            },\n            tooltips: {\n                backgroundColor: tooltipBackgroundColor,\n                cornerRadius: 0,\n                callbacks: {\n                    title: (item: Chart.ChartTooltipItem[]) => {\n                        return;\n                    },\n                    label: (item: Chart.ChartTooltipItem) => {\n                        return `x: ${ item.xLabel }, y: ${ item.yLabel }`;\n                    }\n                },\n                displayColors: false\n            } as any\n        };\n\n        this.barChartColors = [{\n            backgroundColor: barBackgroundColor,\n            hoverBackgroundColor: barHoverBackgroundColor,\n            borderColor: barBorderColor\n        }];\n\n    }\n\n}"}},39355:function(n){n.exports={snippet:'<span class="token selector">.demo-chart-container-stack</span> <span class="token punctuation">{</span>\n    <span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">;</span>\n    <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>        \n    <span class="token property">height</span><span class="token punctuation">:</span> 400px<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>',example:".demo-chart-container-stack {\n    display: block;\n    position: relative;        \n    height: 400px;\n}"}},92540:function(n){n.exports={snippet:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>demo-chart-container-stack<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>canvas</span> <span class="token attr-name">aria-label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Stacked bar chart showing financial breakdown<span class="token punctuation">"</span></span>\n        <span class="token attr-name">baseChart</span>\n        <span class="token attr-name">[datasets]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>barChartData<span class="token punctuation">"</span></span>\n        <span class="token attr-name">[labels]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>barChartLabels<span class="token punctuation">"</span></span>\n        <span class="token attr-name">[options]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>barChartOptions<span class="token punctuation">"</span></span>\n        <span class="token attr-name">[legend]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>barChartLegend<span class="token punctuation">"</span></span>\n        <span class="token attr-name">[colors]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>barChartColors<span class="token punctuation">"</span></span>\n        <span class="token attr-name">chartType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>bar<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span> <span class="token attr-name">aria-label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Chart data<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>thead</span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>\n                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>Week<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>\n                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>Marketing<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>\n                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>R<span class="token entity named-entity" title="&amp;">&amp;amp;</span>D<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>\n                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>Logistics<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>thead</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tbody</span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span> <span class="token attr-name">*ngFor</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>let label of barChartLabels; let idx = index<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>{{label}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>\n                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span><span class="token entity named-entity" title="&euro;">&amp;euro;</span>{{barChartData[0].data[idx]}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>\n                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span><span class="token entity named-entity" title="&euro;">&amp;euro;</span>{{barChartData[1].data[idx]}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>\n                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span><span class="token entity named-entity" title="&euro;">&amp;euro;</span>{{barChartData[2].data[idx]}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tbody</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">></span></span>\n\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>canvas</span><span class="token punctuation">></span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>',example:'<div class="demo-chart-container-stack">\n\n    <canvas aria-label="Stacked bar chart showing financial breakdown"\n        baseChart\n        [datasets]="barChartData"\n        [labels]="barChartLabels"\n        [options]="barChartOptions"\n        [legend]="barChartLegend"\n        [colors]="barChartColors"\n        chartType="bar">\n\n        <table aria-label="Chart data">\n            <thead>\n                <tr>\n                    <th>Week</th>\n                    <th>Marketing</th>\n                    <th>R&amp;D</th>\n                    <th>Logistics</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr *ngFor="let label of barChartLabels; let idx = index">\n                    <td>{{label}}</td>\n                    <td>&euro;{{barChartData[0].data[idx]}}</td>\n                    <td>&euro;{{barChartData[1].data[idx]}}</td>\n                    <td>&euro;{{barChartData[2].data[idx]}}</td>\n                </tr>\n            </tbody>\n        </table>\n\n    </canvas>\n\n</div>'}},8122:function(n){n.exports={snippet:'<span class="token keyword">import</span> <span class="token punctuation">{</span> Component <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@angular/core\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> ColorService <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@ux-aspects/ux-aspects\'</span><span class="token punctuation">;</span>\n\n@<span class="token function">Component</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    selector<span class="token operator">:</span> <span class="token string">\'app\'</span><span class="token punctuation">,</span>\n    templateUrl<span class="token operator">:</span> <span class="token string">\'./app.component.html\'</span><span class="token punctuation">,</span>\n    styleUrls<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">\'./app.component.css\'</span><span class="token punctuation">]</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">AppComponent</span> <span class="token punctuation">{</span>\n\n    <span class="token comment">// configure the directive data</span>\n    barChartData<span class="token operator">:</span> Chart<span class="token punctuation">.</span>ChartDataSets<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n    barChartLabels<span class="token operator">:</span> string<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">\'1\'</span><span class="token punctuation">,</span> <span class="token string">\'2\'</span><span class="token punctuation">,</span> <span class="token string">\'3\'</span><span class="token punctuation">,</span> <span class="token string">\'4\'</span><span class="token punctuation">,</span> <span class="token string">\'5\'</span><span class="token punctuation">,</span> <span class="token string">\'6\'</span><span class="token punctuation">,</span> <span class="token string">\'7\'</span><span class="token punctuation">,</span> <span class="token string">\'8\'</span><span class="token punctuation">,</span> <span class="token string">\'9\'</span><span class="token punctuation">,</span> <span class="token string">\'10\'</span><span class="token punctuation">,</span> <span class="token string">\'11\'</span><span class="token punctuation">,</span> <span class="token string">\'12\'</span><span class="token punctuation">,</span> <span class="token string">\'13\'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n    barChartOptions<span class="token operator">:</span> Chart<span class="token punctuation">.</span>ChartOptions<span class="token punctuation">;</span>\n    barChartLegend<span class="token operator">:</span> boolean <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\n    barChartColors<span class="token operator">:</span> any<span class="token punctuation">;</span>\n\n    <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter"><span class="token keyword">private</span> colorService<span class="token operator">:</span> ColorService</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n\n        <span class="token keyword">let</span> tooltipBackgroundColor <span class="token operator">=</span> colorService<span class="token punctuation">.</span><span class="token function">getColor</span><span class="token punctuation">(</span><span class="token string">\'grey2\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toHex</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token keyword">this</span><span class="token punctuation">.</span>barChartData <span class="token operator">=</span> <span class="token punctuation">[</span>\n            <span class="token punctuation">{</span>\n                data<span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">generateRandomData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n                barPercentage<span class="token operator">:</span> <span class="token number">0.6</span><span class="token punctuation">,</span>\n                categoryPercentage<span class="token operator">:</span> <span class="token number">1</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            <span class="token punctuation">{</span>\n                data<span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">generateRandomData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n                barPercentage<span class="token operator">:</span> <span class="token number">0.6</span><span class="token punctuation">,</span>\n                categoryPercentage<span class="token operator">:</span> <span class="token number">1</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            <span class="token punctuation">{</span>\n                data<span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">generateRandomData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n                barPercentage<span class="token operator">:</span> <span class="token number">0.6</span><span class="token punctuation">,</span>\n                categoryPercentage<span class="token operator">:</span> <span class="token number">1</span>\n            <span class="token punctuation">}</span>\n        <span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n        <span class="token keyword">this</span><span class="token punctuation">.</span>barChartOptions <span class="token operator">=</span> <span class="token punctuation">{</span>\n            maintainAspectRatio<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n            responsive<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n            hover<span class="token operator">:</span> <span class="token punctuation">{</span>\n                mode<span class="token operator">:</span> <span class="token string">\'nearest\'</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            scales<span class="token operator">:</span> <span class="token punctuation">{</span>\n                xAxes<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span>\n                    stacked<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n                    gridLines<span class="token operator">:</span> <span class="token punctuation">{</span>\n                        color<span class="token operator">:</span> <span class="token string">\'transparent\'</span>\n                    <span class="token punctuation">}</span>\n                <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n                yAxes<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span>\n                    stacked<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n                    ticks<span class="token operator">:</span> <span class="token punctuation">{</span>\n                        min<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>\n                        max<span class="token operator">:</span> <span class="token number">30000</span><span class="token punctuation">,</span>\n                        stepSize<span class="token operator">:</span> <span class="token number">5000</span><span class="token punctuation">,</span>\n                        <span class="token function-variable function">callback</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">value<span class="token operator">:</span> any<span class="token punctuation">,</span> index<span class="token operator">:</span> any<span class="token punctuation">,</span> values<span class="token operator">:</span> any</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n                            <span class="token keyword">return</span> value <span class="token operator">+</span> <span class="token string">\'\u20ac\'</span><span class="token punctuation">;</span>\n                        <span class="token punctuation">}</span>\n                    <span class="token punctuation">}</span> <span class="token keyword">as</span> Chart<span class="token punctuation">.</span>LinearTickOptions\n                <span class="token punctuation">}</span><span class="token punctuation">]</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            tooltips<span class="token operator">:</span> <span class="token punctuation">{</span>\n                backgroundColor<span class="token operator">:</span> tooltipBackgroundColor<span class="token punctuation">,</span>\n                cornerRadius<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>\n                callbacks<span class="token operator">:</span> <span class="token punctuation">{</span>\n                    <span class="token function-variable function">title</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">item<span class="token operator">:</span> Chart<span class="token punctuation">.</span>ChartTooltipItem<span class="token punctuation">[</span><span class="token punctuation">]</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n                        <span class="token keyword">return</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">Sales </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>item<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>datasetIndex <span class="token operator">+</span> <span class="token number">1</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span>\n                    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n                    <span class="token function-variable function">label</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">item<span class="token operator">:</span> Chart<span class="token punctuation">.</span>ChartTooltipItem</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n                        <span class="token keyword">return</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>item<span class="token punctuation">.</span>yLabel<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">\u20ac in cycle </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>item<span class="token punctuation">.</span>index<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span>\n                    <span class="token punctuation">}</span>\n                <span class="token punctuation">}</span><span class="token punctuation">,</span>\n                displayColors<span class="token operator">:</span> <span class="token boolean">false</span>\n            <span class="token punctuation">}</span> <span class="token keyword">as</span> any\n        <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n        <span class="token keyword">this</span><span class="token punctuation">.</span>barChartColors <span class="token operator">=</span> <span class="token punctuation">[</span>\n            <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">generateBarColors</span><span class="token punctuation">(</span><span class="token string">\'chart1\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n            <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">generateBarColors</span><span class="token punctuation">(</span><span class="token string">\'chart2\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n            <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">generateBarColors</span><span class="token punctuation">(</span><span class="token string">\'chart3\'</span><span class="token punctuation">)</span>\n        <span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n    <span class="token punctuation">}</span>\n\n    <span class="token function">generateRandomData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> number<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">{</span>\n\n        <span class="token keyword">let</span> data<span class="token operator">:</span> number<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n        <span class="token comment">// generate random data</span>\n        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> idx <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> idx <span class="token operator">&lt;</span> <span class="token number">13</span><span class="token punctuation">;</span> idx<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            data<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">10000</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n\n        <span class="token keyword">return</span> data<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token function">generateBarColors</span><span class="token punctuation">(</span><span class="token parameter">baseColor<span class="token operator">:</span> string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n\n        <span class="token keyword">let</span> backgroundColors <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n        <span class="token keyword">let</span> hoverColors <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> idx <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> idx <span class="token operator">&lt;</span> <span class="token number">13</span><span class="token punctuation">;</span> idx<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n\n            backgroundColors<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>\n                <span class="token keyword">this</span><span class="token punctuation">.</span>colorService<span class="token punctuation">.</span><span class="token function">getColor</span><span class="token punctuation">(</span>baseColor<span class="token punctuation">)</span>\n                    <span class="token punctuation">.</span><span class="token function">setAlpha</span><span class="token punctuation">(</span>idx <span class="token operator">&lt;</span> <span class="token number">10</span> <span class="token operator">?</span> <span class="token number">0.7</span> <span class="token operator">:</span> <span class="token number">0.3</span><span class="token punctuation">)</span>\n                    <span class="token punctuation">.</span><span class="token function">toRgba</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n            hoverColors<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>\n                <span class="token keyword">this</span><span class="token punctuation">.</span>colorService<span class="token punctuation">.</span><span class="token function">getColor</span><span class="token punctuation">(</span>baseColor<span class="token punctuation">)</span>\n                    <span class="token punctuation">.</span><span class="token function">setAlpha</span><span class="token punctuation">(</span>idx <span class="token operator">&lt;</span> <span class="token number">10</span> <span class="token operator">?</span> <span class="token number">0.8</span> <span class="token operator">:</span> <span class="token number">0.4</span><span class="token punctuation">)</span>\n                    <span class="token punctuation">.</span><span class="token function">toRgba</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n\n        <span class="token keyword">return</span> <span class="token punctuation">{</span>\n            backgroundColor<span class="token operator">:</span> backgroundColors<span class="token punctuation">,</span>\n            hoverBackgroundColor<span class="token operator">:</span> hoverColors\n        <span class="token punctuation">}</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n<span class="token punctuation">}</span>',example:"import { Component } from '@angular/core';\nimport { ColorService } from '@ux-aspects/ux-aspects';\n\n@Component({\n    selector: 'app',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n    // configure the directive data\n    barChartData: Chart.ChartDataSets[];\n    barChartLabels: string[] = ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12', '13'];\n    barChartOptions: Chart.ChartOptions;\n    barChartLegend: boolean = false;\n    barChartColors: any;\n\n    constructor(private colorService: ColorService) {\n\n        let tooltipBackgroundColor = colorService.getColor('grey2').toHex();\n\n        this.barChartData = [\n            {\n                data: this.generateRandomData(),\n                barPercentage: 0.6,\n                categoryPercentage: 1\n            },\n            {\n                data: this.generateRandomData(),\n                barPercentage: 0.6,\n                categoryPercentage: 1\n            },\n            {\n                data: this.generateRandomData(),\n                barPercentage: 0.6,\n                categoryPercentage: 1\n            }\n        ];\n\n        this.barChartOptions = {\n            maintainAspectRatio: false,\n            responsive: true,\n            hover: {\n                mode: 'nearest'\n            },\n            scales: {\n                xAxes: [{\n                    stacked: true,\n                    gridLines: {\n                        color: 'transparent'\n                    }\n                }],\n                yAxes: [{\n                    stacked: true,\n                    ticks: {\n                        min: 0,\n                        max: 30000,\n                        stepSize: 5000,\n                        callback: (value: any, index: any, values: any) => {\n                            return value + '\u20ac';\n                        }\n                    } as Chart.LinearTickOptions\n                }]\n            },\n            tooltips: {\n                backgroundColor: tooltipBackgroundColor,\n                cornerRadius: 0,\n                callbacks: {\n                    title: (item: Chart.ChartTooltipItem[]) => {\n                        return `Sales ${item[0].datasetIndex + 1}`;\n                    },\n                    label: (item: Chart.ChartTooltipItem) => {\n                        return `${item.yLabel}\u20ac in cycle ${item.index}`;\n                    }\n                },\n                displayColors: false\n            } as any\n        };\n\n        this.barChartColors = [\n            this.generateBarColors('chart1'),\n            this.generateBarColors('chart2'),\n            this.generateBarColors('chart3')\n        ];\n\n    }\n\n    generateRandomData(): number[] {\n\n        let data: number[] = [];\n\n        // generate random data\n        for (let idx = 0; idx < 13; idx++) {\n            data.push(Math.floor(Math.random() * 10000));\n        }\n\n        return data;\n    }\n\n    generateBarColors(baseColor: string) {\n\n        let backgroundColors = [];\n        let hoverColors = [];\n\n        for (let idx = 0; idx < 13; idx++) {\n\n            backgroundColors.push(\n                this.colorService.getColor(baseColor)\n                    .setAlpha(idx < 10 ? 0.7 : 0.3)\n                    .toRgba());\n\n            hoverColors.push(\n                this.colorService.getColor(baseColor)\n                    .setAlpha(idx < 10 ? 0.8 : 0.4)\n                    .toRgba());\n        }\n\n        return {\n            backgroundColor: backgroundColors,\n            hoverBackgroundColor: hoverColors\n        };\n    }\n\n}"}},79787:function(n,a,t){var s={"./app.css":87768,"./app.html":98576,"./app.ts":58336};function e(n){var a=p(n);return t(a)}function p(n){if(!t.o(s,n)){var a=new Error("Cannot find module '"+n+"'");throw a.code="MODULE_NOT_FOUND",a}return s[n]}e.keys=function(){return Object.keys(s)},e.resolve=p,n.exports=e,e.id=79787},58473:function(n,a,t){var s={"./app.css":93659,"./app.html":10258,"./app.ts":67283};function e(n){var a=p(n);return t(a)}function p(n){if(!t.o(s,n)){var a=new Error("Cannot find module '"+n+"'");throw a.code="MODULE_NOT_FOUND",a}return s[n]}e.keys=function(){return Object.keys(s)},e.resolve=p,n.exports=e,e.id=58473},79891:function(n,a,t){var s={"./app.css":39355,"./app.html":92540,"./app.ts":8122};function e(n){var a=p(n);return t(a)}function p(n){if(!t.o(s,n)){var a=new Error("Cannot find module '"+n+"'");throw a.code="MODULE_NOT_FOUND",a}return s[n]}e.keys=function(){return Object.keys(s)},e.resolve=p,n.exports=e,e.id=79891},64756:function(n,a,t){"use strict";t.r(a),t.d(a,{ChartsBarChartsModule:function(){return T}});var s,e=t(56475),p=t(94121),o=t(3955),c=t(68594),l=t(26966),r=t(95892),u=t(36941),i=t(49331),k=t(86093),d=t(62536),m=t(29872),h=t(95490),b=t(70734),g=t(95445),x=(s=function(n,a){return(s=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,a){n.__proto__=a}||function(n,a){for(var t in a)Object.prototype.hasOwnProperty.call(a,t)&&(n[t]=a[t])})(n,a)},function(n,a){if("function"!=typeof a&&null!==a)throw new TypeError("Class extends value "+String(a)+" is not a constructor or null");function t(){this.constructor=n}s(n,a),n.prototype=null===a?Object.create(a):(t.prototype=a.prototype,new t)}),C=function(n,a){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(n,a)};function y(n,a){if(1&n&&(m["\u0275\u0275elementStart"](0,"tr"),m["\u0275\u0275text"](1,"\n                    "),m["\u0275\u0275elementStart"](2,"td"),m["\u0275\u0275text"](3),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](4,"\n                    "),m["\u0275\u0275elementStart"](5,"td"),m["\u0275\u0275text"](6),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](7,"\n                "),m["\u0275\u0275elementEnd"]()),2&n){var t=a.$implicit,s=a.index,e=m["\u0275\u0275nextContext"]();m["\u0275\u0275advance"](3),m["\u0275\u0275textInterpolate"](t),m["\u0275\u0275advance"](3),m["\u0275\u0275textInterpolate"](e.barChartData[0].data[s])}}var f=function(n){function a(a){var s=n.call(this,t(79787))||this;s.playground={files:{"app.component.ts":s.snippets.raw.appTs,"app.component.html":s.snippets.raw.appHtml,"app.component.css":s.snippets.raw.appCss},modules:[{library:"chart.js"},{imports:["ChartsModule"],library:"ng2-charts"},{imports:["ColorServiceModule"],library:"@ux-aspects/ux-aspects"}]},s.barChartData=[{data:[34,25,19,34,32,44,50,67],borderWidth:1,barPercentage:.5,categoryPercentage:1}],s.barChartLabels=[".doc",".ppt",".pdf",".xls",".html",".txt",".csv",".mht"],s.barChartLegend=!1;var e=a.getColor("grey2").setAlpha(.5).toRgba(),p=a.getColor("chart1").setAlpha(.1).toRgba(),o=a.getColor("chart1").setAlpha(.2).toRgba(),c=a.getColor("chart1").toHex(),l=a.getColor("grey2").toHex();return s.barChartOptions={maintainAspectRatio:!1,responsive:!0,scales:{xAxes:[{gridLines:{display:!0,zeroLineColor:e,color:"transparent"}}],yAxes:[{type:"linear",gridLines:{zeroLineColor:e},ticks:{min:0,max:80,stepSize:20}}]},tooltips:{backgroundColor:l,cornerRadius:0,callbacks:{title:function(n){},label:function(n){return"x: "+n.xLabel+", y: "+n.yLabel}},displayColors:!1}},s.barChartColors=[{backgroundColor:p,hoverBackgroundColor:o,borderColor:c}],s}return x(a,n),a.prototype.ngAfterViewInit=function(){var n=this.baseChart.chart,a=i.Chart;a.helpers.each(n.getDatasetMeta(0).data,(function(t,s){s>=6&&(t.draw=function(){n.ctx.save(),n.ctx.setLineDash([2,2]),a.elements.Rectangle.prototype.draw.apply(this,arguments),n.ctx.restore()})}))},a.\u0275fac=function(n){return new(n||a)(m["\u0275\u0275directiveInject"](o.ColorService))},a.\u0275cmp=m["\u0275\u0275defineComponent"]({type:a,selectors:[["uxd-charts-bar-chart"]],viewQuery:function(n,a){var t;1&n&&m["\u0275\u0275viewQuery"](c.BaseChartDirective,7),2&n&&m["\u0275\u0275queryRefresh"](t=m["\u0275\u0275loadQuery"]())&&(a.baseChart=t.first)},features:[m["\u0275\u0275InheritDefinitionFeature"]],decls:164,vars:10,consts:[[1,"demo-chart-container"],["aria-label","Bar chart showing file type totals","baseChart","","chartType","bar",3,"datasets","labels","options","legend","colors"],["aria-label","Chart data"],[4,"ngFor","ngForOf"],["tableTitle","Inputs"],["uxd-api-property","","name","dataSets","type","object[]"],["uxd-api-property","","name","chartType","type","string"],["uxd-api-property","","name","options","type","ChartOptions"],["uxd-api-property","","name","colors","type","object[]"],["uxd-api-property","","name","legend","type","boolean"],["tableTitle","Outputs"],["uxd-api-property","","name","chartClick"],["uxd-api-property","","name","chartHover"],[3,"minimal"],["heading","HTML"],["language","html",3,"content"],["heading","TypeScript"],["language","javascript",3,"content"],["heading","CSS"],["language","css",3,"content"],[1,"m-b-nil"],["href","https://www.npmjs.com/package/ng2-charts",1,"hyperlink"],["href","https://www.npmjs.com/package/chart.js",1,"hyperlink"],["href","https://www.npmjs.com/package/@types/chart.js",1,"hyperlink"],["href","http://valor-software.com/ng2-charts/",1,"hyperlink"],["href","http://www.chartjs.org/docs/",1,"hyperlink"]],template:function(n,a){1&n&&(m["\u0275\u0275elementStart"](0,"div",0),m["\u0275\u0275text"](1,"\n\n    "),m["\u0275\u0275elementStart"](2,"canvas",1),m["\u0275\u0275text"](3,"\n\n        "),m["\u0275\u0275elementStart"](4,"table",2),m["\u0275\u0275text"](5,"\n            "),m["\u0275\u0275elementStart"](6,"thead"),m["\u0275\u0275text"](7,"\n                "),m["\u0275\u0275elementStart"](8,"tr"),m["\u0275\u0275text"](9,"\n                    "),m["\u0275\u0275elementStart"](10,"th"),m["\u0275\u0275text"](11,"File Type"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](12,"\n                    "),m["\u0275\u0275elementStart"](13,"th"),m["\u0275\u0275text"](14,"Number of Files"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](15,"\n                "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](16,"\n            "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](17,"\n            "),m["\u0275\u0275elementStart"](18,"tbody"),m["\u0275\u0275text"](19,"\n                "),m["\u0275\u0275template"](20,y,8,2,"tr",3),m["\u0275\u0275text"](21,"\n            "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](22,"\n        "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](23,"\n\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](24,"\n\n"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](25,"\n\n"),m["\u0275\u0275element"](26,"hr"),m["\u0275\u0275text"](27,"\n\n"),m["\u0275\u0275elementStart"](28,"p"),m["\u0275\u0275text"](29,"\n    Bar Charts can be added using the "),m["\u0275\u0275elementStart"](30,"code"),m["\u0275\u0275text"](31,"ng2-charts"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](32," library.\n    The "),m["\u0275\u0275elementStart"](33,"code"),m["\u0275\u0275text"](34,"chart.js"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](35," library needs to be imported and the "),m["\u0275\u0275elementStart"](36,"code"),m["\u0275\u0275text"](37,"ChartsModule"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](38," needs to be added to the appropriate NgModule.\n"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](39,"\n\n"),m["\u0275\u0275elementStart"](40,"p"),m["\u0275\u0275text"](41,"The "),m["\u0275\u0275elementStart"](42,"code"),m["\u0275\u0275text"](43,"baseChart"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](44," directive should be added to a "),m["\u0275\u0275elementStart"](45,"code"),m["\u0275\u0275text"](46,"canvas"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](47," element and the following attributes can be used to customize the chart behavior and appearance:"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](48,"\n\n"),m["\u0275\u0275elementStart"](49,"uxd-api-properties",4),m["\u0275\u0275text"](50,"\n    "),m["\u0275\u0275elementStart"](51,"tr",5),m["\u0275\u0275text"](52,"\n        Contains the data and properties for each data set to be displayed in the chart.\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](53,"\n    "),m["\u0275\u0275elementStart"](54,"tr",6),m["\u0275\u0275text"](55,"\n        Indicates the type of the chart. Possible options are: "),m["\u0275\u0275elementStart"](56,"code"),m["\u0275\u0275text"](57,"line"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](58,", "),m["\u0275\u0275elementStart"](59,"code"),m["\u0275\u0275text"](60,"bar"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](61,", "),m["\u0275\u0275elementStart"](62,"code"),m["\u0275\u0275text"](63,"radar"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](64,", "),m["\u0275\u0275elementStart"](65,"code"),m["\u0275\u0275text"](66,"pie"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](67,", "),m["\u0275\u0275elementStart"](68,"code"),m["\u0275\u0275text"](69,"polarArea"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](70,", "),m["\u0275\u0275elementStart"](71,"code"),m["\u0275\u0275text"](72,"doughnut"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](73,"\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](74,"\n    "),m["\u0275\u0275elementStart"](75,"tr",7),m["\u0275\u0275text"](76,"\n        Configures the appearance and behavior of all aspects of the chart.\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](77,"\n    "),m["\u0275\u0275elementStart"](78,"tr",8),m["\u0275\u0275text"](79,"\n        Configure the color values to be used within the chart.\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](80,"\n    "),m["\u0275\u0275elementStart"](81,"tr",9),m["\u0275\u0275text"](82,"\n        Determines whether or not the legend should be displayed.\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](83,"\n"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](84,"\n\n"),m["\u0275\u0275elementStart"](85,"uxd-api-properties",10),m["\u0275\u0275text"](86,"\n    "),m["\u0275\u0275elementStart"](87,"tr",11),m["\u0275\u0275text"](88,"\n        Fires when click on a chart has occurred, returns information regarding active points and labels.\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](89,"\n    "),m["\u0275\u0275elementStart"](90,"tr",12),m["\u0275\u0275text"](91,"\n        Fires when mousemove (hover) on a chart has occurred, returns information regarding active points and labels.\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](92,"\n"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](93,"\n\n"),m["\u0275\u0275elementStart"](94,"p"),m["\u0275\u0275text"](95,"Complete documentation on the directive and chart options can be found at the documentation links below."),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](96,"\n\n"),m["\u0275\u0275elementStart"](97,"p"),m["\u0275\u0275text"](98,"The following code can be used to create the example above: "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](99,"\n\n"),m["\u0275\u0275elementStart"](100,"ux-tabset",13),m["\u0275\u0275text"](101,"\n\n    "),m["\u0275\u0275elementStart"](102,"ux-tab",14),m["\u0275\u0275text"](103,"\n        "),m["\u0275\u0275element"](104,"uxd-snippet",15),m["\u0275\u0275text"](105,"\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](106,"\n\n    "),m["\u0275\u0275elementStart"](107,"ux-tab",16),m["\u0275\u0275text"](108,"\n        "),m["\u0275\u0275element"](109,"uxd-snippet",17),m["\u0275\u0275text"](110,"\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](111,"\n\n    "),m["\u0275\u0275elementStart"](112,"ux-tab",18),m["\u0275\u0275text"](113,"\n        "),m["\u0275\u0275element"](114,"uxd-snippet",19),m["\u0275\u0275text"](115,"\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](116,"\n\n"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](117,"\n\n"),m["\u0275\u0275element"](118,"br"),m["\u0275\u0275text"](119,"\n\n"),m["\u0275\u0275elementStart"](120,"blockquote"),m["\u0275\u0275text"](121,"\n\n    "),m["\u0275\u0275elementStart"](122,"p",20),m["\u0275\u0275text"](123,"\n        "),m["\u0275\u0275elementStart"](124,"b"),m["\u0275\u0275text"](125,"Dependencies: "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](126,"\n        "),m["\u0275\u0275elementStart"](127,"a",21),m["\u0275\u0275text"](128,"ng2-charts"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](129,",\n        "),m["\u0275\u0275elementStart"](130,"a",22),m["\u0275\u0275text"](131,"chart.js"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](132,"\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](133,"\n\n    "),m["\u0275\u0275elementStart"](134,"p",20),m["\u0275\u0275text"](135,"\n        "),m["\u0275\u0275elementStart"](136,"b"),m["\u0275\u0275text"](137,"Type Definitions: "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](138,"\n        "),m["\u0275\u0275elementStart"](139,"a",23),m["\u0275\u0275text"](140,"@types/chart.js"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](141,"\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](142,"\n\n    "),m["\u0275\u0275elementStart"](143,"p",20),m["\u0275\u0275text"](144,"\n        "),m["\u0275\u0275elementStart"](145,"b"),m["\u0275\u0275text"](146,"Modules: "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](147,"\n        "),m["\u0275\u0275elementStart"](148,"span"),m["\u0275\u0275text"](149,"ChartsModule"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](150,"\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](151,"\n\n\n    "),m["\u0275\u0275elementStart"](152,"p",20),m["\u0275\u0275text"](153,"\n        "),m["\u0275\u0275elementStart"](154,"b"),m["\u0275\u0275text"](155,"Documentation: "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](156,"\n        "),m["\u0275\u0275elementStart"](157,"a",24),m["\u0275\u0275text"](158,"Angular Directive Documentation"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](159,",\n        "),m["\u0275\u0275elementStart"](160,"a",25),m["\u0275\u0275text"](161,"Chart Library Documentation"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](162,"\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](163,"\n"),m["\u0275\u0275elementEnd"]()),2&n&&(m["\u0275\u0275advance"](2),m["\u0275\u0275property"]("datasets",a.barChartData)("labels",a.barChartLabels)("options",a.barChartOptions)("legend",a.barChartLegend)("colors",a.barChartColors),m["\u0275\u0275advance"](18),m["\u0275\u0275property"]("ngForOf",a.barChartLabels),m["\u0275\u0275advance"](80),m["\u0275\u0275property"]("minimal",!1),m["\u0275\u0275advance"](4),m["\u0275\u0275property"]("content",a.snippets.compiled.appHtml),m["\u0275\u0275advance"](5),m["\u0275\u0275property"]("content",a.snippets.compiled.appTs),m["\u0275\u0275advance"](5),m["\u0275\u0275property"]("content",a.snippets.compiled.appCss))},directives:[c.BaseChartDirective,e.NgForOf,h.$,b.S,o.TabsetComponent,o.TabComponent,g.j,o.DefaultFocusIndicatorDirective],encapsulation:2}),a=function(n,a,t,s){var e,p=arguments.length,o=p<3?a:null===s?s=Object.getOwnPropertyDescriptor(a,t):s;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(n,a,t,s);else for(var c=n.length-1;c>=0;c--)(e=n[c])&&(o=(p<3?e(o):p>3?e(a,t,o):e(a,t))||o);return p>3&&o&&Object.defineProperty(a,t,o),o}([(0,d.cG)("ChartsBarChartComponent"),C("design:paramtypes",[o.ColorService])],a)}(k.u),v=function(){var n=function(a,t){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,a){n.__proto__=a}||function(n,a){for(var t in a)Object.prototype.hasOwnProperty.call(a,t)&&(n[t]=a[t])})(a,t)};return function(a,t){if("function"!=typeof t&&null!==t)throw new TypeError("Class extends value "+String(t)+" is not a constructor or null");function s(){this.constructor=a}n(a,t),a.prototype=null===t?Object.create(t):(s.prototype=t.prototype,new s)}}(),S=function(n,a){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(n,a)};function w(n,a){if(1&n&&(m["\u0275\u0275elementStart"](0,"tr"),m["\u0275\u0275text"](1,"\n                    "),m["\u0275\u0275elementStart"](2,"td"),m["\u0275\u0275text"](3),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](4,"\n                    "),m["\u0275\u0275elementStart"](5,"td"),m["\u0275\u0275text"](6),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](7,"\n                "),m["\u0275\u0275elementEnd"]()),2&n){var t=a.$implicit,s=a.index,e=m["\u0275\u0275nextContext"]();m["\u0275\u0275advance"](3),m["\u0275\u0275textInterpolate"](t),m["\u0275\u0275advance"](3),m["\u0275\u0275textInterpolate"](e.barChartData[0].data[s])}}var E=function(n){function a(a){var s=n.call(this,t(58473))||this;s.playground={files:{"app.component.ts":s.snippets.raw.appTs,"app.component.html":s.snippets.raw.appHtml,"app.component.css":s.snippets.raw.appCss},modules:[{library:"chart.js"},{imports:["ChartsModule"],library:"ng2-charts"},{imports:["ColorServiceModule"],library:"@ux-aspects/ux-aspects"}]},s.barChartData=[{data:[44,32,34,19,25,34],borderWidth:1,barPercentage:.5,categoryPercentage:1}],s.barChartLabels=[".txt",".html",".xls",".pdf",".ppt",".doc"],s.barChartLegend=!1;var e=a.getColor("grey2").toHex(),p=a.getColor("chart1").setAlpha(.1).toRgba(),o=a.getColor("chart1").setAlpha(.2).toRgba(),c=a.getColor("chart1").toHex();return s.barChartOptions={maintainAspectRatio:!1,responsive:!0,scales:{xAxes:[{gridLines:{color:"transparent"},ticks:{min:0,max:45,stepSize:5}}],yAxes:[{gridLines:{color:"transparent"}}]},tooltips:{backgroundColor:e,cornerRadius:0,callbacks:{title:function(n){},label:function(n){return"x: "+n.xLabel+", y: "+n.yLabel}},displayColors:!1}},s.barChartColors=[{backgroundColor:p,hoverBackgroundColor:o,borderColor:c}],s}return v(a,n),a.\u0275fac=function(n){return new(n||a)(m["\u0275\u0275directiveInject"](o.ColorService))},a.\u0275cmp=m["\u0275\u0275defineComponent"]({type:a,selectors:[["uxd-charts-horizontal-bar-chart"]],features:[m["\u0275\u0275InheritDefinitionFeature"]],decls:164,vars:10,consts:[[1,"demo-chart-container"],["aria-label","Horizontal bar chart showing file type totals","baseChart","","chartType","horizontalBar",3,"datasets","labels","options","legend","colors"],["aria-label","Chart data"],[4,"ngFor","ngForOf"],["tableTitle","Inputs"],["uxd-api-property","","name","dataSets","type","object[]"],["uxd-api-property","","name","chartType","type","string"],["uxd-api-property","","name","options","type","ChartOptions"],["uxd-api-property","","name","colors","type","object[]"],["uxd-api-property","","name","legend","type","boolean"],["tableTitle","Outputs"],["uxd-api-property","","name","chartClick"],["uxd-api-property","","name","chartHover"],[3,"minimal"],["heading","HTML"],["language","html",3,"content"],["heading","TypeScript"],["language","javascript",3,"content"],["heading","CSS"],["language","css",3,"content"],[1,"m-b-nil"],["href","https://www.npmjs.com/package/ng2-charts",1,"hyperlink"],["href","https://www.npmjs.com/package/chart.js",1,"hyperlink"],["href","https://www.npmjs.com/package/@types/chart.js",1,"hyperlink"],["href","http://valor-software.com/ng2-charts/",1,"hyperlink"],["href","http://www.chartjs.org/docs/",1,"hyperlink"]],template:function(n,a){1&n&&(m["\u0275\u0275elementStart"](0,"div",0),m["\u0275\u0275text"](1,"\n\n    "),m["\u0275\u0275elementStart"](2,"canvas",1),m["\u0275\u0275text"](3,"\n\n        "),m["\u0275\u0275elementStart"](4,"table",2),m["\u0275\u0275text"](5,"\n            "),m["\u0275\u0275elementStart"](6,"thead"),m["\u0275\u0275text"](7,"\n                "),m["\u0275\u0275elementStart"](8,"tr"),m["\u0275\u0275text"](9,"\n                    "),m["\u0275\u0275elementStart"](10,"th"),m["\u0275\u0275text"](11,"File Type"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](12,"\n                    "),m["\u0275\u0275elementStart"](13,"th"),m["\u0275\u0275text"](14,"Number of Files"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](15,"\n                "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](16,"\n            "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](17,"\n            "),m["\u0275\u0275elementStart"](18,"tbody"),m["\u0275\u0275text"](19,"\n                "),m["\u0275\u0275template"](20,w,8,2,"tr",3),m["\u0275\u0275text"](21,"\n            "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](22,"\n        "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](23,"\n\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](24,"\n\n"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](25,"\n\n"),m["\u0275\u0275element"](26,"hr"),m["\u0275\u0275text"](27,"\n\n"),m["\u0275\u0275elementStart"](28,"p"),m["\u0275\u0275text"](29,"\n    Horizontal Bar Charts can be added using the "),m["\u0275\u0275elementStart"](30,"code"),m["\u0275\u0275text"](31,"ng2-charts"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](32," library.\n    The "),m["\u0275\u0275elementStart"](33,"code"),m["\u0275\u0275text"](34,"chart.js"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](35," library needs to be imported and the "),m["\u0275\u0275elementStart"](36,"code"),m["\u0275\u0275text"](37,"ChartsModule"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](38," needs to be added to the appropriate NgModule.\n"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](39,"\n\n"),m["\u0275\u0275elementStart"](40,"p"),m["\u0275\u0275text"](41,"The "),m["\u0275\u0275elementStart"](42,"code"),m["\u0275\u0275text"](43,"baseChart"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](44," directive should be added to a "),m["\u0275\u0275elementStart"](45,"code"),m["\u0275\u0275text"](46,"canvas"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](47," element and the following attributes can be used to customize the chart behavior and appearance:"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](48,"\n\n"),m["\u0275\u0275elementStart"](49,"uxd-api-properties",4),m["\u0275\u0275text"](50,"\n    "),m["\u0275\u0275elementStart"](51,"tr",5),m["\u0275\u0275text"](52,"\n        Contains the data and properties for each data set to be displayed in the chart.\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](53,"\n    "),m["\u0275\u0275elementStart"](54,"tr",6),m["\u0275\u0275text"](55,"\n        Indicates the type of the chart. Possible options are: "),m["\u0275\u0275elementStart"](56,"code"),m["\u0275\u0275text"](57,"line"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](58,", "),m["\u0275\u0275elementStart"](59,"code"),m["\u0275\u0275text"](60,"bar"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](61,", "),m["\u0275\u0275elementStart"](62,"code"),m["\u0275\u0275text"](63,"radar"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](64,", "),m["\u0275\u0275elementStart"](65,"code"),m["\u0275\u0275text"](66,"pie"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](67,", "),m["\u0275\u0275elementStart"](68,"code"),m["\u0275\u0275text"](69,"polarArea"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](70,", "),m["\u0275\u0275elementStart"](71,"code"),m["\u0275\u0275text"](72,"doughnut"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](73,"\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](74,"\n    "),m["\u0275\u0275elementStart"](75,"tr",7),m["\u0275\u0275text"](76,"\n        Configures the appearance and behavior of all aspects of the chart.\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](77,"\n    "),m["\u0275\u0275elementStart"](78,"tr",8),m["\u0275\u0275text"](79,"\n        Configure the color values to be used within the chart.\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](80,"\n    "),m["\u0275\u0275elementStart"](81,"tr",9),m["\u0275\u0275text"](82,"\n        Determines whether or not the legend should be displayed.\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](83,"\n"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](84,"\n\n"),m["\u0275\u0275elementStart"](85,"uxd-api-properties",10),m["\u0275\u0275text"](86,"\n    "),m["\u0275\u0275elementStart"](87,"tr",11),m["\u0275\u0275text"](88,"\n        Fires when click on a chart has occurred, returns information regarding active points and labels.\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](89,"\n    "),m["\u0275\u0275elementStart"](90,"tr",12),m["\u0275\u0275text"](91,"\n        Fires when mousemove (hover) on a chart has occurred, returns information regarding active points and labels.\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](92,"\n"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](93,"\n\n"),m["\u0275\u0275elementStart"](94,"p"),m["\u0275\u0275text"](95,"Complete documentation on the directive and chart options can be found at the documentation links below."),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](96,"\n\n"),m["\u0275\u0275elementStart"](97,"p"),m["\u0275\u0275text"](98,"The following code can be used to create the example above: "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](99,"\n\n"),m["\u0275\u0275elementStart"](100,"ux-tabset",13),m["\u0275\u0275text"](101,"\n\n    "),m["\u0275\u0275elementStart"](102,"ux-tab",14),m["\u0275\u0275text"](103,"\n        "),m["\u0275\u0275element"](104,"uxd-snippet",15),m["\u0275\u0275text"](105,"\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](106,"\n\n    "),m["\u0275\u0275elementStart"](107,"ux-tab",16),m["\u0275\u0275text"](108,"\n        "),m["\u0275\u0275element"](109,"uxd-snippet",17),m["\u0275\u0275text"](110,"\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](111,"\n\n    "),m["\u0275\u0275elementStart"](112,"ux-tab",18),m["\u0275\u0275text"](113,"\n        "),m["\u0275\u0275element"](114,"uxd-snippet",19),m["\u0275\u0275text"](115,"\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](116,"\n\n"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](117,"\n\n"),m["\u0275\u0275element"](118,"br"),m["\u0275\u0275text"](119,"\n\n"),m["\u0275\u0275elementStart"](120,"blockquote"),m["\u0275\u0275text"](121,"\n\n    "),m["\u0275\u0275elementStart"](122,"p",20),m["\u0275\u0275text"](123,"\n        "),m["\u0275\u0275elementStart"](124,"b"),m["\u0275\u0275text"](125,"Dependencies: "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](126,"\n        "),m["\u0275\u0275elementStart"](127,"a",21),m["\u0275\u0275text"](128,"ng2-charts"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](129,",\n        "),m["\u0275\u0275elementStart"](130,"a",22),m["\u0275\u0275text"](131,"chart.js"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](132,"\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](133,"\n\n    "),m["\u0275\u0275elementStart"](134,"p",20),m["\u0275\u0275text"](135,"\n        "),m["\u0275\u0275elementStart"](136,"b"),m["\u0275\u0275text"](137,"Type Definitions: "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](138,"\n        "),m["\u0275\u0275elementStart"](139,"a",23),m["\u0275\u0275text"](140,"@types/chart.js"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](141,"\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](142,"\n\n    "),m["\u0275\u0275elementStart"](143,"p",20),m["\u0275\u0275text"](144,"\n        "),m["\u0275\u0275elementStart"](145,"b"),m["\u0275\u0275text"](146,"Modules: "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](147,"\n        "),m["\u0275\u0275elementStart"](148,"span"),m["\u0275\u0275text"](149,"ChartsModule"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](150,"\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](151,"\n\n\n    "),m["\u0275\u0275elementStart"](152,"p",20),m["\u0275\u0275text"](153,"\n        "),m["\u0275\u0275elementStart"](154,"b"),m["\u0275\u0275text"](155,"Documentation: "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](156,"\n        "),m["\u0275\u0275elementStart"](157,"a",24),m["\u0275\u0275text"](158,"Angular Directive Documentation"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](159,",\n        "),m["\u0275\u0275elementStart"](160,"a",25),m["\u0275\u0275text"](161,"Chart Library Documentation"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](162,"\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](163,"\n"),m["\u0275\u0275elementEnd"]()),2&n&&(m["\u0275\u0275advance"](2),m["\u0275\u0275property"]("datasets",a.barChartData)("labels",a.barChartLabels)("options",a.barChartOptions)("legend",a.barChartLegend)("colors",a.barChartColors),m["\u0275\u0275advance"](18),m["\u0275\u0275property"]("ngForOf",a.barChartLabels),m["\u0275\u0275advance"](80),m["\u0275\u0275property"]("minimal",!1),m["\u0275\u0275advance"](4),m["\u0275\u0275property"]("content",a.snippets.compiled.appHtml),m["\u0275\u0275advance"](5),m["\u0275\u0275property"]("content",a.snippets.compiled.appTs),m["\u0275\u0275advance"](5),m["\u0275\u0275property"]("content",a.snippets.compiled.appCss))},directives:[c.BaseChartDirective,e.NgForOf,h.$,b.S,o.TabsetComponent,o.TabComponent,g.j,o.DefaultFocusIndicatorDirective],encapsulation:2}),a=function(n,a,t,s){var e,p=arguments.length,o=p<3?a:null===s?s=Object.getOwnPropertyDescriptor(a,t):s;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(n,a,t,s);else for(var c=n.length-1;c>=0;c--)(e=n[c])&&(o=(p<3?e(o):p>3?e(a,t,o):e(a,t))||o);return p>3&&o&&Object.defineProperty(a,t,o),o}([(0,d.cG)("ChartsHorizontalBarChartComponent"),S("design:paramtypes",[o.ColorService])],a)}(k.u),D=function(){var n=function(a,t){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,a){n.__proto__=a}||function(n,a){for(var t in a)Object.prototype.hasOwnProperty.call(a,t)&&(n[t]=a[t])})(a,t)};return function(a,t){if("function"!=typeof t&&null!==t)throw new TypeError("Class extends value "+String(t)+" is not a constructor or null");function s(){this.constructor=a}n(a,t),a.prototype=null===t?Object.create(t):(s.prototype=t.prototype,new s)}}(),L=function(n,a){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(n,a)};function O(n,a){if(1&n&&(m["\u0275\u0275elementStart"](0,"tr"),m["\u0275\u0275text"](1,"\n                    "),m["\u0275\u0275elementStart"](2,"td"),m["\u0275\u0275text"](3),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](4,"\n                    "),m["\u0275\u0275elementStart"](5,"td"),m["\u0275\u0275text"](6),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](7,"\n                    "),m["\u0275\u0275elementStart"](8,"td"),m["\u0275\u0275text"](9),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](10,"\n                    "),m["\u0275\u0275elementStart"](11,"td"),m["\u0275\u0275text"](12),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](13,"\n                "),m["\u0275\u0275elementEnd"]()),2&n){var t=a.$implicit,s=a.index,e=m["\u0275\u0275nextContext"]();m["\u0275\u0275advance"](3),m["\u0275\u0275textInterpolate"](t),m["\u0275\u0275advance"](3),m["\u0275\u0275textInterpolate1"]("\u20ac",e.barChartData[0].data[s],""),m["\u0275\u0275advance"](3),m["\u0275\u0275textInterpolate1"]("\u20ac",e.barChartData[1].data[s],""),m["\u0275\u0275advance"](3),m["\u0275\u0275textInterpolate1"]("\u20ac",e.barChartData[2].data[s],"")}}var B=[f,E,function(n){function a(a){var s=n.call(this,t(79891))||this;s.colorService=a,s.playground={files:{"app.component.ts":s.snippets.raw.appTs,"app.component.html":s.snippets.raw.appHtml,"app.component.css":s.snippets.raw.appCss},modules:[{library:"chart.js"},{imports:["ChartsModule"],library:"ng2-charts"},{imports:["ColorServiceModule"],library:"@ux-aspects/ux-aspects"}]},s.barChartLabels=["1","2","3","4","5","6","7","8","9","10","11","12","13"],s.barChartLegend=!1;var e=a.getColor("grey2").toHex();return s.barChartData=[{data:s.generateRandomData(),barPercentage:.6,categoryPercentage:1},{data:s.generateRandomData(),barPercentage:.6,categoryPercentage:1},{data:s.generateRandomData(),barPercentage:.6,categoryPercentage:1}],s.barChartOptions={maintainAspectRatio:!1,responsive:!0,hover:{mode:"nearest"},scales:{xAxes:[{stacked:!0,gridLines:{color:"transparent"}}],yAxes:[{stacked:!0,ticks:{min:0,max:3e4,stepSize:5e3,callback:function(n,a,t){return n+"\u20ac"}}}]},tooltips:{backgroundColor:e,cornerRadius:0,callbacks:{title:function(n){return"Sales "+(n[0].datasetIndex+1)},label:function(n){return n.yLabel+"\u20ac in cycle "+n.index}},displayColors:!1}},s.barChartColors=[s.generateBarColors("chart1"),s.generateBarColors("chart2"),s.generateBarColors("chart3")],s}return D(a,n),a.prototype.generateRandomData=function(){for(var n=[],a=0;a<13;a++)n.push(Math.floor(1e4*Math.random()));return n},a.prototype.generateBarColors=function(n){for(var a=[],t=[],s=0;s<13;s++)a.push(this.colorService.getColor(n).setAlpha(s<10?.7:.3).toRgba()),t.push(this.colorService.getColor(n).setAlpha(s<10?.8:.4).toRgba());return{backgroundColor:a,hoverBackgroundColor:t}},a.\u0275fac=function(n){return new(n||a)(m["\u0275\u0275directiveInject"](o.ColorService))},a.\u0275cmp=m["\u0275\u0275defineComponent"]({type:a,selectors:[["uxd-charts-stacked-bar-chart"]],features:[m["\u0275\u0275InheritDefinitionFeature"]],decls:170,vars:10,consts:[[1,"demo-chart-container-stack"],["aria-label","Stacked bar chart showing financial breakdown","baseChart","","chartType","bar",3,"datasets","labels","options","legend","colors"],["aria-label","Chart data"],[4,"ngFor","ngForOf"],["tableTitle","Inputs"],["uxd-api-property","","name","dataSets","type","object[]"],["uxd-api-property","","name","chartType","type","string"],["uxd-api-property","","name","options","type","ChartOptions"],["uxd-api-property","","name","colors","type","object[]"],["uxd-api-property","","name","legend","type","boolean"],["tableTitle","Outputs"],["uxd-api-property","","name","chartClick"],["uxd-api-property","","name","chartHover"],[3,"minimal"],["heading","HTML"],["language","html",3,"content"],["heading","TypeScript"],["language","javascript",3,"content"],["heading","CSS"],["language","css",3,"content"],[1,"m-b-nil"],["href","https://www.npmjs.com/package/ng2-charts",1,"hyperlink"],["href","https://www.npmjs.com/package/chart.js",1,"hyperlink"],["href","https://www.npmjs.com/package/@types/chart.js",1,"hyperlink"],["href","http://valor-software.com/ng2-charts/",1,"hyperlink"],["href","http://www.chartjs.org/docs/",1,"hyperlink"]],template:function(n,a){1&n&&(m["\u0275\u0275elementStart"](0,"div",0),m["\u0275\u0275text"](1,"\n\n    "),m["\u0275\u0275elementStart"](2,"canvas",1),m["\u0275\u0275text"](3,"\n\n        "),m["\u0275\u0275elementStart"](4,"table",2),m["\u0275\u0275text"](5,"\n            "),m["\u0275\u0275elementStart"](6,"thead"),m["\u0275\u0275text"](7,"\n                "),m["\u0275\u0275elementStart"](8,"tr"),m["\u0275\u0275text"](9,"\n                    "),m["\u0275\u0275elementStart"](10,"th"),m["\u0275\u0275text"](11,"Week"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](12,"\n                    "),m["\u0275\u0275elementStart"](13,"th"),m["\u0275\u0275text"](14,"Marketing"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](15,"\n                    "),m["\u0275\u0275elementStart"](16,"th"),m["\u0275\u0275text"](17,"R&D"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](18,"\n                    "),m["\u0275\u0275elementStart"](19,"th"),m["\u0275\u0275text"](20,"Logistics"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](21,"\n                "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](22,"\n            "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](23,"\n            "),m["\u0275\u0275elementStart"](24,"tbody"),m["\u0275\u0275text"](25,"\n                "),m["\u0275\u0275template"](26,O,14,4,"tr",3),m["\u0275\u0275text"](27,"\n            "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](28,"\n        "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](29,"\n\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](30,"\n\n"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](31,"\n\n"),m["\u0275\u0275element"](32,"hr"),m["\u0275\u0275text"](33,"\n\n"),m["\u0275\u0275elementStart"](34,"p"),m["\u0275\u0275text"](35,"\n    Stacked Bar Charts can be added using the "),m["\u0275\u0275elementStart"](36,"code"),m["\u0275\u0275text"](37,"ng2-charts"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](38," library.\n    The "),m["\u0275\u0275elementStart"](39,"code"),m["\u0275\u0275text"](40,"chart.js"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](41," library needs to be imported and the "),m["\u0275\u0275elementStart"](42,"code"),m["\u0275\u0275text"](43,"ChartsModule"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](44," needs to be added to the appropriate NgModule.\n"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](45,"\n\n"),m["\u0275\u0275elementStart"](46,"p"),m["\u0275\u0275text"](47,"The "),m["\u0275\u0275elementStart"](48,"code"),m["\u0275\u0275text"](49,"baseChart"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](50," directive should be added to a "),m["\u0275\u0275elementStart"](51,"code"),m["\u0275\u0275text"](52,"canvas"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](53," element and the following attributes can be used to customize the chart behavior and appearance:"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](54,"\n\n"),m["\u0275\u0275elementStart"](55,"uxd-api-properties",4),m["\u0275\u0275text"](56,"\n    "),m["\u0275\u0275elementStart"](57,"tr",5),m["\u0275\u0275text"](58,"\n        Contains the data and properties for each data set to be displayed in the chart.\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](59,"\n    "),m["\u0275\u0275elementStart"](60,"tr",6),m["\u0275\u0275text"](61,"\n        Indicates the type of the chart. Possible options are: "),m["\u0275\u0275elementStart"](62,"code"),m["\u0275\u0275text"](63,"line"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](64,", "),m["\u0275\u0275elementStart"](65,"code"),m["\u0275\u0275text"](66,"bar"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](67,", "),m["\u0275\u0275elementStart"](68,"code"),m["\u0275\u0275text"](69,"radar"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](70,", "),m["\u0275\u0275elementStart"](71,"code"),m["\u0275\u0275text"](72,"pie"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](73,", "),m["\u0275\u0275elementStart"](74,"code"),m["\u0275\u0275text"](75,"polarArea"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](76,", "),m["\u0275\u0275elementStart"](77,"code"),m["\u0275\u0275text"](78,"doughnut"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](79,"\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](80,"\n    "),m["\u0275\u0275elementStart"](81,"tr",7),m["\u0275\u0275text"](82,"\n        Configures the appearance and behavior of all aspects of the chart.\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](83,"\n    "),m["\u0275\u0275elementStart"](84,"tr",8),m["\u0275\u0275text"](85,"\n        Configure the color values to be used within the chart.\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](86,"\n    "),m["\u0275\u0275elementStart"](87,"tr",9),m["\u0275\u0275text"](88,"\n        Determines whether or not the legend should be displayed.\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](89,"\n"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](90,"\n\n"),m["\u0275\u0275elementStart"](91,"uxd-api-properties",10),m["\u0275\u0275text"](92,"\n    "),m["\u0275\u0275elementStart"](93,"tr",11),m["\u0275\u0275text"](94,"\n        Fires when click on a chart has occurred, returns information regarding active points and labels.\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](95,"\n    "),m["\u0275\u0275elementStart"](96,"tr",12),m["\u0275\u0275text"](97,"\n        Fires when mousemove (hover) on a chart has occurred, returns information regarding active points and labels.\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](98,"\n"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](99,"\n\n"),m["\u0275\u0275elementStart"](100,"p"),m["\u0275\u0275text"](101,"Complete documentation on the directive and chart options can be found at the documentation links below."),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](102,"\n\n"),m["\u0275\u0275elementStart"](103,"p"),m["\u0275\u0275text"](104,"The following code can be used to create the example above: "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](105,"\n\n"),m["\u0275\u0275elementStart"](106,"ux-tabset",13),m["\u0275\u0275text"](107,"\n\n    "),m["\u0275\u0275elementStart"](108,"ux-tab",14),m["\u0275\u0275text"](109,"\n        "),m["\u0275\u0275element"](110,"uxd-snippet",15),m["\u0275\u0275text"](111,"\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](112,"\n\n    "),m["\u0275\u0275elementStart"](113,"ux-tab",16),m["\u0275\u0275text"](114,"\n        "),m["\u0275\u0275element"](115,"uxd-snippet",17),m["\u0275\u0275text"](116,"\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](117,"\n\n    "),m["\u0275\u0275elementStart"](118,"ux-tab",18),m["\u0275\u0275text"](119,"\n        "),m["\u0275\u0275element"](120,"uxd-snippet",19),m["\u0275\u0275text"](121,"\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](122,"\n\n"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](123,"\n\n"),m["\u0275\u0275element"](124,"br"),m["\u0275\u0275text"](125,"\n\n"),m["\u0275\u0275elementStart"](126,"blockquote"),m["\u0275\u0275text"](127,"\n\n    "),m["\u0275\u0275elementStart"](128,"p",20),m["\u0275\u0275text"](129,"\n        "),m["\u0275\u0275elementStart"](130,"b"),m["\u0275\u0275text"](131,"Dependencies: "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](132,"\n        "),m["\u0275\u0275elementStart"](133,"a",21),m["\u0275\u0275text"](134,"ng2-charts"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](135,",\n        "),m["\u0275\u0275elementStart"](136,"a",22),m["\u0275\u0275text"](137,"chart.js"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](138,"\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](139,"\n\n    "),m["\u0275\u0275elementStart"](140,"p",20),m["\u0275\u0275text"](141,"\n        "),m["\u0275\u0275elementStart"](142,"b"),m["\u0275\u0275text"](143,"Type Definitions: "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](144,"\n        "),m["\u0275\u0275elementStart"](145,"a",23),m["\u0275\u0275text"](146,"@types/chart.js"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](147,"\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](148,"\n\n    "),m["\u0275\u0275elementStart"](149,"p",20),m["\u0275\u0275text"](150,"\n        "),m["\u0275\u0275elementStart"](151,"b"),m["\u0275\u0275text"](152,"Modules: "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](153,"\n        "),m["\u0275\u0275elementStart"](154,"span"),m["\u0275\u0275text"](155,"ChartsModule"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](156,"\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](157,"\n\n\n    "),m["\u0275\u0275elementStart"](158,"p",20),m["\u0275\u0275text"](159,"\n        "),m["\u0275\u0275elementStart"](160,"b"),m["\u0275\u0275text"](161,"Documentation: "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](162,"\n        "),m["\u0275\u0275elementStart"](163,"a",24),m["\u0275\u0275text"](164,"Angular Directive Documentation"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](165,",\n        "),m["\u0275\u0275elementStart"](166,"a",25),m["\u0275\u0275text"](167,"Chart Library Documentation"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](168,"\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](169,"\n"),m["\u0275\u0275elementEnd"]()),2&n&&(m["\u0275\u0275advance"](2),m["\u0275\u0275property"]("datasets",a.barChartData)("labels",a.barChartLabels)("options",a.barChartOptions)("legend",a.barChartLegend)("colors",a.barChartColors),m["\u0275\u0275advance"](24),m["\u0275\u0275property"]("ngForOf",a.barChartLabels),m["\u0275\u0275advance"](80),m["\u0275\u0275property"]("minimal",!1),m["\u0275\u0275advance"](4),m["\u0275\u0275property"]("content",a.snippets.compiled.appHtml),m["\u0275\u0275advance"](5),m["\u0275\u0275property"]("content",a.snippets.compiled.appTs),m["\u0275\u0275advance"](5),m["\u0275\u0275property"]("content",a.snippets.compiled.appCss))},directives:[c.BaseChartDirective,e.NgForOf,h.$,b.S,o.TabsetComponent,o.TabComponent,g.j,o.DefaultFocusIndicatorDirective],encapsulation:2}),a=function(n,a,t,s){var e,p=arguments.length,o=p<3?a:null===s?s=Object.getOwnPropertyDescriptor(a,t):s;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(n,a,t,s);else for(var c=n.length-1;c>=0;c--)(e=n[c])&&(o=(p<3?e(o):p>3?e(a,t,o):e(a,t))||o);return p>3&&o&&Object.defineProperty(a,t,o),o}([(0,d.cG)("ChartsStackedBarChartComponent"),L("design:paramtypes",[o.ColorService])],a)}(k.u)],R=[{path:"**",component:r.R,data:{category:u.N.resolveCategoryData(u.I.Charts,"Bar Charts")}}],T=function(){function n(n,a){a.registerResolver(n,B)}return n.\u0275fac=function(a){return new(a||n)(m["\u0275\u0275inject"](m.ComponentFactoryResolver),m["\u0275\u0275inject"](u.N))},n.\u0275mod=m["\u0275\u0275defineNgModule"]({type:n}),n.\u0275inj=m["\u0275\u0275defineInjector"]({imports:[[c.ChartsModule,o.ColorServiceModule,e.CommonModule,l.N,p.RouterModule.forChild(R),o.TabsetModule]]}),n}()}}]);
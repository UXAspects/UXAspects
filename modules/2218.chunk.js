(self.webpackChunk_ux_aspects_ux_aspects_docs=self.webpackChunk_ux_aspects_ux_aspects_docs||[]).push([[2218],{34857:function(n){n.exports={snippet:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>component-list-container<span class="token punctuation">"</span></span> <span class="token attr-name">[formGroup]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>form<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>component-list<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>component-list-component<span class="token punctuation">"</span></span>\n            <span class="token attr-name">[class.hoverable]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>items.length > 1<span class="token punctuation">"</span></span>\n            <span class="token attr-name">formArrayName</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>items<span class="token punctuation">"</span></span>\n            <span class="token attr-name">*ngFor</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>let item of items.controls; let idx = index<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>component-content<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>form-control<span class="token punctuation">"</span></span>\n                    <span class="token attr-name">[focusIf]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span>\n                    <span class="token attr-name">[formControlName]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>idx<span class="token punctuation">"</span></span>\n                    <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Enter text<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>component-remove<span class="token punctuation">"</span></span>\n                    <span class="token attr-name">uxFocusIndicator</span>\n                    <span class="token attr-name">*ngIf</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>items.controls.length > 1<span class="token punctuation">"</span></span>\n                    <span class="token attr-name">aria-label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Remove field<span class="token punctuation">"</span></span>\n                    <span class="token attr-name">(click)</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>remove(idx)<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ux-icon</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>close<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ux-icon</span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n\n\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span>\n        <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>component-actions<span class="token punctuation">"</span></span>\n        <span class="token attr-name">[tabIndex]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>form.invalid ? -1 : 0<span class="token punctuation">"</span></span>\n        <span class="token attr-name">[class.disabled]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>form.invalid<span class="token punctuation">"</span></span>\n        <span class="token attr-name">(click)</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>add()<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>component-add-btn<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ux-icon</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>add<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ux-icon</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>component-add-text<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Add a field<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span>',example:'<form class="component-list-container" [formGroup]="form">\n\n    <div class="component-list">\n\n        <div class="component-list-component"\n            [class.hoverable]="items.length > 1"\n            formArrayName="items"\n            *ngFor="let item of items.controls; let idx = index">\n\n            <div class="component-content">\n                <input class="form-control"\n                    [focusIf]="true"\n                    [formControlName]="idx"\n                    placeholder="Enter text">\n\n                <button class="component-remove"\n                    uxFocusIndicator\n                    *ngIf="items.controls.length > 1"\n                    aria-label="Remove field"\n                    (click)="remove(idx)">\n                    <ux-icon name="close"></ux-icon>\n                </button>\n            </div>\n\n\n        </div>\n    </div>\n\n    <button type="button"\n        class="component-actions"\n        [tabIndex]="form.invalid ? -1 : 0"\n        [class.disabled]="form.invalid"\n        (click)="add()">\n        <span class="component-add-btn">\n            <ux-icon name="add"></ux-icon>\n        </span>\n        <span class="component-add-text">Add a field</span>\n    </button>\n\n</form>'}},98729:function(n){n.exports={snippet:'<span class="token keyword">import</span> <span class="token punctuation">{</span> Component <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@angular/core\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> FormArray<span class="token punctuation">,</span> FormControl<span class="token punctuation">,</span> FormGroup<span class="token punctuation">,</span> Validators <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@angular/forms\'</span><span class="token punctuation">;</span>\n\n@<span class="token function">Component</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    selector<span class="token operator">:</span> <span class="token string">\'app\'</span><span class="token punctuation">,</span>\n    templateUrl<span class="token operator">:</span> <span class="token string">\'./app.component.html\'</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">AppComponent</span> <span class="token punctuation">{</span>\n\n    form <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FormGroup</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n        items<span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">FormArray</span><span class="token punctuation">(</span><span class="token punctuation">[</span>\n            <span class="token keyword">new</span> <span class="token class-name">FormControl</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>Validators<span class="token punctuation">.</span>required<span class="token punctuation">]</span><span class="token punctuation">)</span>\n        <span class="token punctuation">]</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">get</span> <span class="token function">items</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> FormArray <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>form<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">\'items\'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> FormArray<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token function">add</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>form<span class="token punctuation">.</span>valid<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token keyword">this</span><span class="token punctuation">.</span>items<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">FormControl</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>Validators<span class="token punctuation">.</span>required<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token function">remove</span><span class="token punctuation">(</span>index<span class="token operator">:</span> number<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>items<span class="token punctuation">.</span>length <span class="token operator">></span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token keyword">this</span><span class="token punctuation">.</span>items<span class="token punctuation">.</span><span class="token function">removeAt</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>',example:"import { Component } from '@angular/core';\nimport { FormArray, FormControl, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n    selector: 'app',\n    templateUrl: './app.component.html'\n})\nexport class AppComponent {\n\n    form = new FormGroup({\n        items: new FormArray([\n            new FormControl(null, [Validators.required])\n        ])\n    });\n\n    get items(): FormArray {\n        return this.form.get('items') as FormArray;\n    }\n\n    add(): void {\n        if (this.form.valid) {\n            this.items.push(new FormControl(null, [Validators.required]));\n        }\n    }\n\n    remove(index: number): void {\n        if (this.items.length > 1) {\n            this.items.removeAt(index);\n        }\n    }\n}"}},75395:function(n,a,s){var t={"./app.html":34857,"./app.ts":98729};function e(n){var a=p(n);return s(a)}function p(n){if(!s.o(t,n)){var a=new Error("Cannot find module '"+n+"'");throw a.code="MODULE_NOT_FOUND",a}return t[n]}e.keys=function(){return Object.keys(t)},e.resolve=p,n.exports=e,e.id=75395},2218:function(n,a,s){"use strict";s.r(a),s.d(a,{ComponentsListModule:function(){return b}});var t,e=s(56475),p=s(65410),o=s(94121),c=s(3955),l=s(26966),u=s(95892),r=s(36941),i=s(86093),k=s(62536),m=s(29872),d=s(95445),f=(t=function(n,a){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,a){n.__proto__=a}||function(n,a){for(var s in a)Object.prototype.hasOwnProperty.call(a,s)&&(n[s]=a[s])})(n,a)},function(n,a){if("function"!=typeof a&&null!==a)throw new TypeError("Class extends value "+String(a)+" is not a constructor or null");function s(){this.constructor=n}t(n,a),n.prototype=null===a?Object.create(a):(s.prototype=a.prototype,new s)}),v=function(n,a){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(n,a)};function x(n,a){if(1&n){var s=m["\u0275\u0275getCurrentView"]();m["\u0275\u0275elementStart"](0,"button",15),m["\u0275\u0275listener"]("click",(function(){m["\u0275\u0275restoreView"](s);var n=m["\u0275\u0275nextContext"]().index;return m["\u0275\u0275nextContext"]().remove(n)})),m["\u0275\u0275text"](1,"\n                    "),m["\u0275\u0275element"](2,"ux-icon",16),m["\u0275\u0275text"](3,"\n                "),m["\u0275\u0275elementEnd"]()}}function g(n,a){if(1&n&&(m["\u0275\u0275elementStart"](0,"div",11),m["\u0275\u0275text"](1,"\n\n            "),m["\u0275\u0275elementStart"](2,"div",12),m["\u0275\u0275text"](3,"\n                "),m["\u0275\u0275element"](4,"input",13),m["\u0275\u0275text"](5,"\n\n                "),m["\u0275\u0275template"](6,x,4,0,"button",14),m["\u0275\u0275text"](7,"\n            "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](8,"\n\n\n        "),m["\u0275\u0275elementEnd"]()),2&n){var s=a.index,t=m["\u0275\u0275nextContext"]();m["\u0275\u0275classProp"]("hoverable",t.items.length>1),m["\u0275\u0275advance"](4),m["\u0275\u0275property"]("focusIf",!0)("formControlName",s),m["\u0275\u0275advance"](2),m["\u0275\u0275property"]("ngIf",t.items.controls.length>1)}}var y=[function(n){function a(){var a=n.call(this,s(75395))||this;return a.playground={files:{"app.component.html":a.snippets.raw.appHtml,"app.component.ts":a.snippets.raw.appTs},modules:[{imports:["FocusIfModule"],library:"@ux-aspects/ux-aspects"}]},a.form=new p.FormGroup({items:new p.FormArray([new p.FormControl(null,[p.Validators.required])])}),a}return f(a,n),Object.defineProperty(a.prototype,"items",{get:function(){return this.form.get("items")},enumerable:!1,configurable:!0}),a.prototype.add=function(){this.form.valid&&this.items.push(new p.FormControl(null,[p.Validators.required]))},a.prototype.remove=function(n){this.items.length>1&&this.items.removeAt(n)},a.\u0275fac=function(n){return new(n||a)},a.\u0275cmp=m["\u0275\u0275defineComponent"]({type:a,selectors:[["uxd-component-list"]],features:[m["\u0275\u0275InheritDefinitionFeature"]],decls:45,vars:8,consts:[[1,"component-list-container",3,"formGroup"],[1,"component-list"],["class","component-list-component","formArrayName","items",3,"hoverable",4,"ngFor","ngForOf"],["type","button","uxFocusIndicator","",1,"component-actions",3,"tabIndex","click"],[1,"component-add-btn"],["name","add"],[1,"component-add-text"],[3,"minimal"],["heading","HTML"],[3,"content"],["heading","TypeScript"],["formArrayName","items",1,"component-list-component"],[1,"component-content"],["placeholder","Enter text",1,"form-control",3,"focusIf","formControlName"],["class","component-remove","uxFocusIndicator","","aria-label","Remove field",3,"click",4,"ngIf"],["uxFocusIndicator","","aria-label","Remove field",1,"component-remove",3,"click"],["name","close"]],template:function(n,a){1&n&&(m["\u0275\u0275elementStart"](0,"form",0),m["\u0275\u0275text"](1,"\n\n    "),m["\u0275\u0275elementStart"](2,"div",1),m["\u0275\u0275text"](3,"\n\n        "),m["\u0275\u0275template"](4,g,9,5,"div",2),m["\u0275\u0275text"](5,"\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](6,"\n\n    "),m["\u0275\u0275elementStart"](7,"button",3),m["\u0275\u0275listener"]("click",(function(){return a.add()})),m["\u0275\u0275text"](8,"\n        "),m["\u0275\u0275elementStart"](9,"span",4),m["\u0275\u0275text"](10,"\n            "),m["\u0275\u0275element"](11,"ux-icon",5),m["\u0275\u0275text"](12,"\n        "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](13,"\n        "),m["\u0275\u0275elementStart"](14,"span",6),m["\u0275\u0275text"](15,"Add a field"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](16,"\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](17,"\n\n"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](18,"\n\n"),m["\u0275\u0275element"](19,"hr"),m["\u0275\u0275text"](20,"\n\n"),m["\u0275\u0275elementStart"](21,"p"),m["\u0275\u0275text"](22,"\n    A component list can be used to dynamically add and remove components.\n    It uses Angular's "),m["\u0275\u0275elementStart"](23,"code"),m["\u0275\u0275text"](24,"FormGroup"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](25," and "),m["\u0275\u0275elementStart"](26,"code"),m["\u0275\u0275text"](27,"FormArray"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](28," to store the fields\n    and apply validation rules which can be used to determine whether or not we should be\n    allowed to add additional fields.\n"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](29,"\n\n"),m["\u0275\u0275elementStart"](30,"p"),m["\u0275\u0275text"](31,"\n    The following code can be used to create the example above:\n"),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](32,"\n\n"),m["\u0275\u0275elementStart"](33,"ux-tabset",7),m["\u0275\u0275text"](34,"\n    "),m["\u0275\u0275elementStart"](35,"ux-tab",8),m["\u0275\u0275text"](36,"\n        "),m["\u0275\u0275element"](37,"uxd-snippet",9),m["\u0275\u0275text"](38,"\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](39,"\n    "),m["\u0275\u0275elementStart"](40,"ux-tab",10),m["\u0275\u0275text"](41,"\n        "),m["\u0275\u0275element"](42,"uxd-snippet",9),m["\u0275\u0275text"](43,"\n    "),m["\u0275\u0275elementEnd"](),m["\u0275\u0275text"](44,"\n"),m["\u0275\u0275elementEnd"]()),2&n&&(m["\u0275\u0275property"]("formGroup",a.form),m["\u0275\u0275advance"](4),m["\u0275\u0275property"]("ngForOf",a.items.controls),m["\u0275\u0275advance"](3),m["\u0275\u0275classProp"]("disabled",a.form.invalid),m["\u0275\u0275property"]("tabIndex",a.form.invalid?-1:0),m["\u0275\u0275advance"](26),m["\u0275\u0275property"]("minimal",!1),m["\u0275\u0275advance"](4),m["\u0275\u0275property"]("content",a.snippets.compiled.appHtml),m["\u0275\u0275advance"](5),m["\u0275\u0275property"]("content",a.snippets.compiled.appTs))},directives:[p["\u0275NgNoValidate"],p.NgControlStatusGroup,p.FormGroupDirective,e.NgForOf,c.FocusIndicatorDirective,c.IconComponent,c.TabsetComponent,c.TabComponent,d.j,p.FormArrayName,p.DefaultValueAccessor,c.FocusIfDirective,p.NgControlStatus,p.FormControlName,e.NgIf],encapsulation:2}),a=function(n,a,s,t){var e,p=arguments.length,o=p<3?a:null===t?t=Object.getOwnPropertyDescriptor(a,s):t;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(n,a,s,t);else for(var c=n.length-1;c>=0;c--)(e=n[c])&&(o=(p<3?e(o):p>3?e(a,s,o):e(a,s))||o);return p>3&&o&&Object.defineProperty(a,s,o),o}([(0,k.cG)("ComponentsComponentListComponent"),v("design:paramtypes",[])],a)}(i.u)],h=[{path:"**",component:u.R,data:{category:r.N.resolveCategoryData(r.I.Components,"Component List")}}],b=function(){function n(n,a){a.registerResolver(n,y)}return n.\u0275fac=function(a){return new(a||n)(m["\u0275\u0275inject"](m.ComponentFactoryResolver),m["\u0275\u0275inject"](r.N))},n.\u0275mod=m["\u0275\u0275defineNgModule"]({type:n}),n.\u0275inj=m["\u0275\u0275defineInjector"]({imports:[[c.AccessibilityModule,e.CommonModule,l.N,c.FocusIfModule,p.FormsModule,c.IconModule,p.ReactiveFormsModule,o.RouterModule.forChild(h),c.TabsetModule]]}),n}()}}]);
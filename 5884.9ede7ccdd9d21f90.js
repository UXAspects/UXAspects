(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[5884],{73752:o=>{o.exports={snippet:'<span class="token selector">.demo-chart-container</span> <span class="token punctuation">{</span>\n    <span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">;</span>\n    <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>\n    <span class="token property">height</span><span class="token punctuation">:</span> 200px<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>',example:".demo-chart-container {\n    display: block;\n    position: relative;\n    height: 200px;\n}"}},88087:o=>{o.exports={snippet:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>demo-chart-container<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>canvas</span> <span class="token attr-name">baseChart</span>\n            <span class="token attr-name">[datasets]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>lineChartData<span class="token punctuation">"</span></span>\n            <span class="token attr-name">[options]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>lineChartOptions<span class="token punctuation">"</span></span>\n            <span class="token attr-name">[legend]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>lineChartLegend<span class="token punctuation">"</span></span>\n            <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>line<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>canvas</span><span class="token punctuation">></span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>',example:'<div class="demo-chart-container">\n\n    <canvas baseChart\n            [datasets]="lineChartData"\n            [options]="lineChartOptions"\n            [legend]="lineChartLegend"\n            type="line">\n    </canvas>\n\n</div>'}},90066:o=>{o.exports={snippet:'<span class="token keyword">import</span> <span class="token punctuation">{</span> Component <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@angular/core\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> ColorService <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@ux-aspects/ux-aspects\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> ChartDataset<span class="token punctuation">,</span> ChartOptions <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'chart.js\'</span><span class="token punctuation">;</span>\n\n@<span class="token function">Component</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    <span class="token literal-property property">selector</span><span class="token operator">:</span> <span class="token string">\'app-root\'</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">templateUrl</span><span class="token operator">:</span> <span class="token string">\'./app.component.html\'</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">styleUrls</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">\'./app.component.css\'</span><span class="token punctuation">]</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">AppComponent</span> <span class="token punctuation">{</span>\n\n    <span class="token comment">// configure the directive data</span>\n    lineChartData<span class="token operator">?</span><span class="token operator">:</span> ChartDataset<span class="token operator">&lt;</span><span class="token string">\'line\'</span><span class="token operator">></span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n    <span class="token literal-property property">lineChartOptions</span><span class="token operator">:</span> ChartOptions<span class="token operator">&lt;</span><span class="token string">\'line\'</span><span class="token operator">></span><span class="token punctuation">;</span>\n    <span class="token literal-property property">lineChartLegend</span><span class="token operator">:</span> boolean <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\n    <span class="token literal-property property">lineChartColors</span><span class="token operator">:</span> any<span class="token punctuation">;</span>\n\n    gridColor<span class="token punctuation">;</span>\n    lineBorderColor<span class="token punctuation">;</span>\n    lineFillColor<span class="token punctuation">;</span>\n\n    <span class="token literal-property property">livedata</span><span class="token operator">:</span> number<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n    <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">colorService</span><span class="token operator">:</span> ColorService</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n\n        <span class="token keyword">this</span><span class="token punctuation">.</span>gridColor <span class="token operator">=</span> colorService<span class="token punctuation">.</span><span class="token function">getColor</span><span class="token punctuation">(</span><span class="token string">\'grey6\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toHex</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>lineBorderColor <span class="token operator">=</span> colorService<span class="token punctuation">.</span><span class="token function">getColor</span><span class="token punctuation">(</span><span class="token string">\'chart1\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toRgb</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>lineFillColor <span class="token operator">=</span> colorService<span class="token punctuation">.</span><span class="token function">getColor</span><span class="token punctuation">(</span><span class="token string">\'chart1\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setAlpha</span><span class="token punctuation">(</span><span class="token number">0.1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toRgba</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token comment">// set the initial chart data</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">updateChartData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token keyword">this</span><span class="token punctuation">.</span>lineChartOptions <span class="token operator">=</span> <span class="token punctuation">{</span>\n            <span class="token literal-property property">maintainAspectRatio</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n            <span class="token literal-property property">responsive</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n            <span class="token literal-property property">animation</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n                <span class="token literal-property property">duration</span><span class="token operator">:</span> <span class="token number">0</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            <span class="token literal-property property">elements</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n                <span class="token literal-property property">line</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n                    <span class="token literal-property property">tension</span><span class="token operator">:</span> <span class="token number">0</span>\n                <span class="token punctuation">}</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            <span class="token literal-property property">scales</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n                <span class="token literal-property property">x</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n                    <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">\'linear\'</span><span class="token punctuation">,</span>\n                    <span class="token literal-property property">position</span><span class="token operator">:</span> <span class="token string">\'bottom\'</span><span class="token punctuation">,</span>\n                    <span class="token literal-property property">min</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>\n                    <span class="token literal-property property">max</span><span class="token operator">:</span> <span class="token number">299</span><span class="token punctuation">,</span>\n                    <span class="token literal-property property">ticks</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n                        <span class="token literal-property property">display</span><span class="token operator">:</span> <span class="token boolean">false</span>\n                    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n                    <span class="token literal-property property">grid</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n                        <span class="token literal-property property">display</span><span class="token operator">:</span> <span class="token boolean">false</span>\n                    <span class="token punctuation">}</span>\n                <span class="token punctuation">}</span><span class="token punctuation">,</span>\n                <span class="token literal-property property">y</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n                    <span class="token literal-property property">min</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>\n                    <span class="token literal-property property">max</span><span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span>\n                    <span class="token literal-property property">ticks</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n                        <span class="token literal-property property">stepSize</span><span class="token operator">:</span> <span class="token number">25</span>\n                    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n                    <span class="token literal-property property">grid</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n                        <span class="token literal-property property">color</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>gridColor\n                    <span class="token punctuation">}</span>\n                <span class="token punctuation">}</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n                <span class="token literal-property property">tooltip</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n                    <span class="token literal-property property">enabled</span><span class="token operator">:</span> <span class="token boolean">false</span>\n                <span class="token punctuation">}</span>\n            <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n        <span class="token function">setInterval</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n            <span class="token comment">// update chart data every 40ms</span>\n            <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">updateChartData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">40</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token function">updateChartData</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n\n        <span class="token comment">// instatiate new array to trigger change detection</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>lineChartData <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token operator">&lt;</span>ChartDataset<span class="token operator">&lt;</span><span class="token string">\'line\'</span><span class="token operator">>></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token keyword">this</span><span class="token punctuation">.</span>lineChartData<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n            <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getRandomData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n            <span class="token literal-property property">borderWidth</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>\n            <span class="token literal-property property">borderColor</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>lineBorderColor<span class="token punctuation">,</span>\n            <span class="token literal-property property">backgroundColor</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>lineFillColor<span class="token punctuation">,</span>\n            <span class="token literal-property property">pointBackgroundColor</span><span class="token operator">:</span> <span class="token string">\'transparent\'</span><span class="token punctuation">,</span>\n            <span class="token literal-property property">pointBorderColor</span><span class="token operator">:</span> <span class="token string">\'transparent\'</span><span class="token punctuation">,</span>\n            <span class="token literal-property property">fill</span><span class="token operator">:</span> <span class="token string">\'origin\'</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token function">getRandomData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">x</span><span class="token operator">:</span> number<span class="token punctuation">,</span> <span class="token literal-property property">y</span><span class="token operator">:</span> number <span class="token punctuation">}</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">{</span>\n\n        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>livedata<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token keyword">this</span><span class="token punctuation">.</span>livedata <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>livedata<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n\n        <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>livedata<span class="token punctuation">.</span>length <span class="token operator">&lt;</span> <span class="token number">300</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token keyword">const</span> previous <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>livedata<span class="token punctuation">.</span>length <span class="token operator">?</span> <span class="token keyword">this</span><span class="token punctuation">.</span>livedata<span class="token punctuation">[</span><span class="token keyword">this</span><span class="token punctuation">.</span>livedata<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">:</span> <span class="token number">50</span><span class="token punctuation">;</span>\n            <span class="token keyword">const</span> y <span class="token operator">=</span> previous <span class="token operator">+</span> Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">10</span> <span class="token operator">-</span> <span class="token number">5</span><span class="token punctuation">;</span>\n\n            <span class="token keyword">this</span><span class="token punctuation">.</span>livedata<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>y <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token operator">?</span> <span class="token number">0</span> <span class="token operator">:</span> y <span class="token operator">></span> <span class="token number">100</span> <span class="token operator">?</span> <span class="token number">100</span> <span class="token operator">:</span> y<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n\n        <span class="token comment">// zip the generated y values with the x values</span>\n        <span class="token keyword">const</span> res <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>livedata<span class="token punctuation">.</span>length<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            res<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n                <span class="token literal-property property">x</span><span class="token operator">:</span> i<span class="token punctuation">,</span>\n                <span class="token literal-property property">y</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>livedata<span class="token punctuation">[</span>i<span class="token punctuation">]</span>\n            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n\n        <span class="token keyword">return</span> res<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n<span class="token punctuation">}</span>\n',example:"import { Component } from '@angular/core';\nimport { ColorService } from '@ux-aspects/ux-aspects';\nimport { ChartDataset, ChartOptions } from 'chart.js';\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n    // configure the directive data\n    lineChartData?: ChartDataset<'line'>[];\n    lineChartOptions: ChartOptions<'line'>;\n    lineChartLegend: boolean = false;\n    lineChartColors: any;\n\n    gridColor;\n    lineBorderColor;\n    lineFillColor;\n\n    livedata: number[] = [];\n\n    constructor(colorService: ColorService) {\n\n        this.gridColor = colorService.getColor('grey6').toHex();\n        this.lineBorderColor = colorService.getColor('chart1').toRgb();\n        this.lineFillColor = colorService.getColor('chart1').setAlpha(0.1).toRgba();\n\n        // set the initial chart data\n        this.updateChartData();\n\n        this.lineChartOptions = {\n            maintainAspectRatio: false,\n            responsive: true,\n            animation: {\n                duration: 0\n            },\n            elements: {\n                line: {\n                    tension: 0\n                }\n            },\n            scales: {\n                x: {\n                    type: 'linear',\n                    position: 'bottom',\n                    min: 0,\n                    max: 299,\n                    ticks: {\n                        display: false\n                    },\n                    grid: {\n                        display: false\n                    }\n                },\n                y: {\n                    min: 0,\n                    max: 100,\n                    ticks: {\n                        stepSize: 25\n                    },\n                    grid: {\n                        color: this.gridColor\n                    }\n                }\n            },\n            plugins: {\n                tooltip: {\n                    enabled: false\n                }\n            }\n        };\n\n        setInterval(() => {\n            // update chart data every 40ms\n            this.updateChartData();\n        }, 40);\n    }\n\n    updateChartData() {\n\n        // instatiate new array to trigger change detection\n        this.lineChartData = new Array<ChartDataset<'line'>>();\n\n        this.lineChartData.push({\n            data: this.getRandomData(),\n            borderWidth: 1,\n            borderColor: this.lineBorderColor,\n            backgroundColor: this.lineFillColor,\n            pointBackgroundColor: 'transparent',\n            pointBorderColor: 'transparent',\n            fill: 'origin'\n        });\n    }\n\n    getRandomData(): { x: number, y: number }[] {\n\n        if (this.livedata.length) {\n            this.livedata = this.livedata.slice(1);\n        }\n\n        while (this.livedata.length < 300) {\n            const previous = this.livedata.length ? this.livedata[this.livedata.length - 1] : 50;\n            const y = previous + Math.random() * 10 - 5;\n\n            this.livedata.push(y < 0 ? 0 : y > 100 ? 100 : y);\n        }\n\n        // zip the generated y values with the x values\n        const res = [];\n        for (let i = 0; i < this.livedata.length; ++i) {\n            res.push({\n                x: i,\n                y: this.livedata[i]\n            });\n        }\n\n        return res;\n    }\n\n}\n"}},4765:(o,h,a)=>{var i={"./live-chart.css":73752,"./live-chart.html":88087,"./live-chart.ts":90066,"docs/app/pages/charts/charts-sections/live-charts/live-chart/snippets/live-chart.css":73752,"docs/app/pages/charts/charts-sections/live-charts/live-chart/snippets/live-chart.html":88087,"docs/app/pages/charts/charts-sections/live-charts/live-chart/snippets/live-chart.ts":90066};function e(c){var r=u(c);return a(r)}function u(c){if(!a.o(i,c)){var r=new Error("Cannot find module '"+c+"'");throw r.code="MODULE_NOT_FOUND",r}return i[c]}e.keys=function(){return Object.keys(i)},e.resolve=u,o.exports=e,e.id=4765},95884:(o,h,a)=>{"use strict";a.r(h),a.d(h,{ChartsLiveChartsModule:()=>A});var i=a(40239),e=a(96215),u=a(59541),c=a(3745),r=a(73875),d=a(74427),y=a(48342),g=a(20391),m=a(34610),n=a(55062),C=a(30642),v=a(1834),b=a(39327),f=a(75079),Z=a(73962),w=a(33403);let l=class extends g.u{constructor(t){super(a(4765)),this.playground={files:{"app.component.ts":this.snippets.raw.liveChartTs,"app.component.html":this.snippets.raw.liveChartHtml,"app.component.css":this.snippets.raw.liveChartCss},modules:[{library:"chart.js"},{imports:["NgChartsModule"],library:"ng2-charts"}]},this.lineChartLegend=!1,this.livedata=[],this.gridColor=t.getColor("grey6").toHex(),this.lineBorderColor=t.getColor("chart1").toRgb(),this.lineFillColor=t.getColor("chart1").setAlpha(.1).toRgba(),this.updateChartData(),this.lineChartOptions={maintainAspectRatio:!1,responsive:!0,animation:{duration:0},elements:{line:{tension:0}},scales:{x:{type:"linear",position:"bottom",min:0,max:299,ticks:{display:!1},grid:{display:!1}},y:{min:0,max:100,ticks:{stepSize:25},grid:{color:this.gridColor}}},plugins:{tooltip:{enabled:!1}}},setInterval(()=>{this.updateChartData()},40)}updateChartData(){this.lineChartData=new Array,this.lineChartData.push({data:this.getRandomData(),borderWidth:1,borderColor:this.lineBorderColor,backgroundColor:this.lineFillColor,pointBackgroundColor:"transparent",pointBorderColor:"transparent",fill:"origin"})}getRandomData(){for(this.livedata.length&&(this.livedata=this.livedata.slice(1));this.livedata.length<300;){const k=(this.livedata.length?this.livedata[this.livedata.length-1]:50)+10*Math.random()-5;this.livedata.push(k<0?0:k>100?100:k)}const t=[];for(let s=0;s<this.livedata.length;++s)t.push({x:s,y:this.livedata[s]});return t}};l.\u0275fac=function(t){return new(t||l)(n.Y36(e.x4Z))},l.\u0275cmp=n.Xpm({type:l,selectors:[["uxd-charts-live-chart"]],features:[n.qOj],decls:88,vars:7,consts:[[1,"demo-chart-container"],["baseChart","","type","line",3,"datasets","options","legend"],["tableTitle","Inputs"],["uxd-api-property","","name","dataSets","type","object[]"],["uxd-api-property","","name","type","type","string"],["uxd-api-property","","name","options","type","ChartOptions"],["uxd-api-property","","name","legend","type","boolean"],["tableTitle","Outputs"],["uxd-api-property","","name","chartClick"],["uxd-api-property","","name","chartHover"],[3,"minimal"],["heading","HTML"],["language","html",3,"content"],["heading","TypeScript"],["language","javascript",3,"content"],["heading","CSS"],["language","css",3,"content"],[1,"m-b-nil"],["href","https://www.npmjs.com/package/ng2-charts",1,"hyperlink"],["href","https://www.npmjs.com/package/chart.js",1,"hyperlink"],["href","http://valor-software.com/ng2-charts/",1,"hyperlink"],["href","http://www.chartjs.org/docs/",1,"hyperlink"]],template:function(t,s){1&t&&(n.TgZ(0,"div",0),n._UZ(1,"canvas",1),n.qZA(),n._UZ(2,"hr"),n.TgZ(3,"p"),n._uU(4," Live Charts can be added using the "),n.TgZ(5,"code"),n._uU(6,"ng2-charts"),n.qZA(),n._uU(7," library. The "),n.TgZ(8,"code"),n._uU(9,"chart.js"),n.qZA(),n._uU(10," library needs to be imported and the "),n.TgZ(11,"code"),n._uU(12,"NgChartsModule"),n.qZA(),n._uU(13," needs to be added to the appropriate NgModule.\n"),n.qZA(),n._UZ(14,"br"),n.TgZ(15,"p"),n._uU(16,"The "),n.TgZ(17,"code"),n._uU(18,"baseChart"),n.qZA(),n._uU(19," directive should be added to a "),n.TgZ(20,"code"),n._uU(21,"canvas"),n.qZA(),n._uU(22," element and the following attributes can be used to customize the chart behavior and appearance:"),n.qZA(),n.TgZ(23,"uxd-api-properties",2)(24,"tr",3),n._uU(25," Contains the data and properties for each data set to be displayed in the chart. "),n.qZA(),n.TgZ(26,"tr",4),n._uU(27," Indicates the type of the chart. Possible options are: "),n.TgZ(28,"code"),n._uU(29,"line"),n.qZA(),n._uU(30,", "),n.TgZ(31,"code"),n._uU(32,"bar"),n.qZA(),n._uU(33,", "),n.TgZ(34,"code"),n._uU(35,"radar"),n.qZA(),n._uU(36,", "),n.TgZ(37,"code"),n._uU(38,"pie"),n.qZA(),n._uU(39,", "),n.TgZ(40,"code"),n._uU(41,"polarArea"),n.qZA(),n._uU(42,", "),n.TgZ(43,"code"),n._uU(44,"doughnut"),n.qZA()(),n.TgZ(45,"tr",5),n._uU(46," Configures the appearance and behavior of all aspects of the chart. "),n.qZA(),n.TgZ(47,"tr",6),n._uU(48," Determines whether or not the legend should be displayed. "),n.qZA()(),n.TgZ(49,"uxd-api-properties",7)(50,"tr",8),n._uU(51," Fires when click on a chart has occurred, returns information regarding active points and labels. "),n.qZA(),n.TgZ(52,"tr",9),n._uU(53," Fires when mousemove (hover) on a chart has occurred, returns information regarding active points and labels. "),n.qZA()(),n.TgZ(54,"p"),n._uU(55,"Complete documentation on the directive and chart options can be found at the documentation links below."),n.qZA(),n.TgZ(56,"p"),n._uU(57,"The following code can be used to create the example above: "),n.qZA(),n.TgZ(58,"ux-tabset",10)(59,"ux-tab",11),n._UZ(60,"uxd-snippet",12),n.qZA(),n.TgZ(61,"ux-tab",13),n._UZ(62,"uxd-snippet",14),n.qZA(),n.TgZ(63,"ux-tab",15),n._UZ(64,"uxd-snippet",16),n.qZA()(),n._UZ(65,"br"),n.TgZ(66,"blockquote")(67,"p",17)(68,"b"),n._uU(69,"Dependencies: "),n.qZA(),n.TgZ(70,"a",18),n._uU(71,"ng2-charts"),n.qZA(),n._uU(72,", "),n.TgZ(73,"a",19),n._uU(74,"chart.js"),n.qZA()(),n.TgZ(75,"p",17)(76,"b"),n._uU(77,"Modules: "),n.qZA(),n.TgZ(78,"span"),n._uU(79,"NgChartsModule"),n.qZA()(),n.TgZ(80,"p",17)(81,"b"),n._uU(82,"Documentation: "),n.qZA(),n.TgZ(83,"a",20),n._uU(84,"Angular Directive Documentation"),n.qZA(),n._uU(85,", "),n.TgZ(86,"a",21),n._uU(87,"Chart Library Documentation"),n.qZA()()()),2&t&&(n.xp6(1),n.Q6J("datasets",s.lineChartData)("options",s.lineChartOptions)("legend",s.lineChartLegend),n.xp6(57),n.Q6J("minimal",!1),n.xp6(2),n.Q6J("content",s.snippets.compiled.liveChartHtml),n.xp6(2),n.Q6J("content",s.snippets.compiled.liveChartTs),n.xp6(2),n.Q6J("content",s.snippets.compiled.liveChartCss))},dependencies:[u.jh,C.$,v.S,b.j,f.G,Z.A,w.i],encapsulation:2}),l=(0,y.gn)([(0,m.cG)("ChartsLiveChartComponent")],l);const x=[l],U=[{path:"**",component:r.R,data:{category:d.N.resolveCategoryData(d.I.Charts,"Live Chart")}}];let A=(()=>{class p{constructor(s,k){k.registerResolver(s,x)}}return p.\u0275fac=function(s){return new(s||p)(n.LFG(n._Vd),n.LFG(d.N))},p.\u0275mod=n.oAB({type:p}),p.\u0275inj=n.cJS({imports:[u.vQ,e.oQZ,c.N,i.Bz.forChild(U),e.f_l]}),p})()}}]);
webpackJsonp([8],{1507:function(n,e,t){"use strict";var o=this&&this.__decorate||function(n,e,t,o){var a,i=arguments.length,s=i<3?e:null===o?o=Object.getOwnPropertyDescriptor(e,t):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(n,e,t,o);else for(var l=n.length-1;l>=0;l--)(a=n[l])&&(s=(i<3?a(s):i>3?a(e,t,s):a(e,t))||s);return i>3&&s&&Object.defineProperty(e,t,s),s},a=this&&this.__metadata||function(n,e){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(n,e)};Object.defineProperty(e,"__esModule",{value:!0});var i=t(1),s=t(19),l=t(219),c=t(119),d=t(220),r=t(1515),p=t(1509),u=t(1513),h=t(1508),m=t(1514),b=t(1512),g=t(1510),f=t(1516),x=t(1511),v=t(221),w=t(222),y=[x.ComponentsGroupedButtonsNg1Component,f.ComponentsToggleButtonsNg1Component,g.ComponentsFloatingActionButtonNg1Component,b.ComponentsPaginationNg1Component,m.ComponentsSingleToggleButtonNg1Component,h.ComponentsCheckboxButtonsNg1Component,u.ComponentsRadioButtonsNg1Component,p.ComponentsDropdownNg1Component,r.ComponentsThumbnailNg1Component],C=[{path:"**",component:d.DocumentationCategoryComponent,data:{category:c.ResolverService.resolveCategoryData(c.DocumentationPage.Components,"Buttons")}}],k=function(){function n(n,e){e.registerResolver(n)}return n}();k=o([i.NgModule({imports:[v.WrappersModule,w.TabsModule,l.DocumentationComponentsModule,s.RouterModule.forChild(C)],exports:y,declarations:y,entryComponents:y}),a("design:paramtypes",[i.ComponentFactoryResolver,c.ResolverService])],k),e.ComponentsButtonsModule=k},1508:function(n,e,t){"use strict";var o=this&&this.__decorate||function(n,e,t,o){var a,i=arguments.length,s=i<3?e:null===o?o=Object.getOwnPropertyDescriptor(e,t):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(n,e,t,o);else for(var l=n.length-1;l>=0;l--)(a=n[l])&&(s=(i<3?a(s):i>3?a(e,t,s):a(e,t))||s);return i>3&&s&&Object.defineProperty(e,t,s),s};Object.defineProperty(e,"__esModule",{value:!0});var a=t(1),i=t(218),s=function(){function n(){this.htmlCode=t(2157),this.javascriptCode=t(2158),this.codepen={html:this.htmlCode,htmlAttributes:{"ng-controller":"CheckboxButtonsCtrl as vm"},js:[this.javascriptCode]}}return n}();s=o([a.Component({selector:"uxd-checkbox-buttons-ng1",template:t(1849)}),i.DocumentationSectionComponent("ComponentsCheckboxButtonsNg1Component")],s),e.ComponentsCheckboxButtonsNg1Component=s},1509:function(n,e,t){"use strict";var o=this&&this.__decorate||function(n,e,t,o){var a,i=arguments.length,s=i<3?e:null===o?o=Object.getOwnPropertyDescriptor(e,t):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(n,e,t,o);else for(var l=n.length-1;l>=0;l--)(a=n[l])&&(s=(i<3?a(s):i>3?a(e,t,s):a(e,t))||s);return i>3&&s&&Object.defineProperty(e,t,s),s};Object.defineProperty(e,"__esModule",{value:!0});var a=t(1),i=t(218),s=function(){function n(){this.htmlCode=t(2161),this.htmlMenuCode=t(2159),this.cssCode=t(2160),this.javascriptCode=t(2162),this.codepen={html:this.htmlCode+"\n"+this.htmlMenuCode,htmlAttributes:{"ng-controller":"DropdownCtrl as vm"},css:[this.cssCode],js:[this.javascriptCode]}}return n}();s=o([a.Component({selector:"uxd-dropdown-ng1",template:t(1850),styles:[t(2668)],encapsulation:a.ViewEncapsulation.None}),i.DocumentationSectionComponent("ComponentsDropdownNg1Component")],s),e.ComponentsDropdownNg1Component=s},1510:function(n,e,t){"use strict";var o=this&&this.__decorate||function(n,e,t,o){var a,i=arguments.length,s=i<3?e:null===o?o=Object.getOwnPropertyDescriptor(e,t):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(n,e,t,o);else for(var l=n.length-1;l>=0;l--)(a=n[l])&&(s=(i<3?a(s):i>3?a(e,t,s):a(e,t))||s);return i>3&&s&&Object.defineProperty(e,t,s),s};Object.defineProperty(e,"__esModule",{value:!0});var a=t(1),i=t(218),s=function(){function n(){this.htmlCode=t(2163),this.javascriptCode=t(2164),this.codepen={html:this.htmlCode,htmlAttributes:{"ng-controller":"FloatingActionButtonCtrl as vm"},js:[this.javascriptCode]}}return n}();s=o([a.Component({selector:"uxd-floating-action-button-ng1",template:t(1851)}),i.DocumentationSectionComponent("ComponentsFloatingActionButtonNg1Component")],s),e.ComponentsFloatingActionButtonNg1Component=s},1511:function(n,e,t){"use strict";var o=this&&this.__decorate||function(n,e,t,o){var a,i=arguments.length,s=i<3?e:null===o?o=Object.getOwnPropertyDescriptor(e,t):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(n,e,t,o);else for(var l=n.length-1;l>=0;l--)(a=n[l])&&(s=(i<3?a(s):i>3?a(e,t,s):a(e,t))||s);return i>3&&s&&Object.defineProperty(e,t,s),s};Object.defineProperty(e,"__esModule",{value:!0});var a=t(1),i=t(218),s=function(){function n(){this.htmlCodeTop=t(2166),this.htmlCodeBottom=t(2165),this.codepen={html:this.htmlCodeTop+"\n"+this.htmlCodeBottom,htmlAttributes:{"ng-controller":"GroupedButtonsCtrl as vm"},js:[t(2167)]}}return n}();s=o([a.Component({selector:"uxd-components-grouped-buttons-ng1",template:t(1852)}),i.DocumentationSectionComponent("ComponentsGroupedButtonsNg1Component")],s),e.ComponentsGroupedButtonsNg1Component=s},1512:function(n,e,t){"use strict";var o=this&&this.__decorate||function(n,e,t,o){var a,i=arguments.length,s=i<3?e:null===o?o=Object.getOwnPropertyDescriptor(e,t):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(n,e,t,o);else for(var l=n.length-1;l>=0;l--)(a=n[l])&&(s=(i<3?a(s):i>3?a(e,t,s):a(e,t))||s);return i>3&&s&&Object.defineProperty(e,t,s),s};Object.defineProperty(e,"__esModule",{value:!0});var a=t(1),i=t(218),s=function(){function n(){this.htmlCode=t(2168),this.javascriptCode=t(2169),this.codepen={html:this.htmlCode,htmlAttributes:{"ng-controller":"PaginationCtrl as vm"},js:[this.javascriptCode]}}return n}();s=o([a.Component({selector:"uxd-pagination-ng1",template:t(1853)}),i.DocumentationSectionComponent("ComponentsPaginationNg1Component")],s),e.ComponentsPaginationNg1Component=s},1513:function(n,e,t){"use strict";var o=this&&this.__decorate||function(n,e,t,o){var a,i=arguments.length,s=i<3?e:null===o?o=Object.getOwnPropertyDescriptor(e,t):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(n,e,t,o);else for(var l=n.length-1;l>=0;l--)(a=n[l])&&(s=(i<3?a(s):i>3?a(e,t,s):a(e,t))||s);return i>3&&s&&Object.defineProperty(e,t,s),s};Object.defineProperty(e,"__esModule",{value:!0});var a=t(1),i=t(218),s=function(){function n(){this.htmlCode=t(2170),this.javascriptCode=t(2171),this.codepen={html:this.htmlCode,htmlAttributes:{"ng-controller":"RadioButtonsCtrl as vm"},js:[this.javascriptCode]}}return n}();s=o([a.Component({selector:"uxd-radio-buttons-ng1",template:t(1854)}),i.DocumentationSectionComponent("ComponentsRadioButtonsNg1Component")],s),e.ComponentsRadioButtonsNg1Component=s},1514:function(n,e,t){"use strict";var o=this&&this.__decorate||function(n,e,t,o){var a,i=arguments.length,s=i<3?e:null===o?o=Object.getOwnPropertyDescriptor(e,t):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(n,e,t,o);else for(var l=n.length-1;l>=0;l--)(a=n[l])&&(s=(i<3?a(s):i>3?a(e,t,s):a(e,t))||s);return i>3&&s&&Object.defineProperty(e,t,s),s};Object.defineProperty(e,"__esModule",{value:!0});var a=t(1),i=t(218),s=function(){function n(){this.htmlCode=t(2172),this.javascriptCode=t(2173),this.codepen={html:this.htmlCode,htmlAttributes:{"ng-controller":"SingleToggleButtonCtrl as vm"},js:[this.javascriptCode]}}return n}();s=o([a.Component({selector:"uxd-single-toggle-button-ng1",template:t(1855)}),i.DocumentationSectionComponent("ComponentsSingleToggleButtonNg1Component")],s),e.ComponentsSingleToggleButtonNg1Component=s},1515:function(n,e,t){"use strict";var o=this&&this.__decorate||function(n,e,t,o){var a,i=arguments.length,s=i<3?e:null===o?o=Object.getOwnPropertyDescriptor(e,t):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(n,e,t,o);else for(var l=n.length-1;l>=0;l--)(a=n[l])&&(s=(i<3?a(s):i>3?a(e,t,s):a(e,t))||s);return i>3&&s&&Object.defineProperty(e,t,s),s};Object.defineProperty(e,"__esModule",{value:!0});var a=t(1),i=t(218),s=function(){function n(){this.htmlCode=t(2177),this.cssCode=t(2176),this.javascriptCode=t(2178),this.codepen={html:this.htmlCode,htmlAttributes:{"ng-controller":"ThumbnailDemoCtrl as vm"},css:[t(2174)],js:[t(2175)]}}return n}();s=o([a.Component({selector:"uxd-thumbnail-ng1",template:t(1856),styles:[t(2669)],encapsulation:a.ViewEncapsulation.None}),i.DocumentationSectionComponent("ComponentsThumbnailNg1Component")],s),e.ComponentsThumbnailNg1Component=s},1516:function(n,e,t){"use strict";var o=this&&this.__decorate||function(n,e,t,o){var a,i=arguments.length,s=i<3?e:null===o?o=Object.getOwnPropertyDescriptor(e,t):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(n,e,t,o);else for(var l=n.length-1;l>=0;l--)(a=n[l])&&(s=(i<3?a(s):i>3?a(e,t,s):a(e,t))||s);return i>3&&s&&Object.defineProperty(e,t,s),s};Object.defineProperty(e,"__esModule",{value:!0});var a=t(1),i=t(218),s=function(){function n(){this.htmlCodeTop=t(2180),this.htmlCodeBottom=t(2179),this.codepen={html:this.htmlCodeTop+"\n"+this.htmlCodeBottom}}return n}();s=o([a.Component({selector:"uxd-components-toggle-buttons-ng1",template:t(1857)}),i.DocumentationSectionComponent("ComponentsToggleButtonsNg1Component")],s),e.ComponentsToggleButtonsNg1Component=s},1849:function(n,e){n.exports='<uxd-checkbox-buttons-wrapper></uxd-checkbox-buttons-wrapper>\n\n<hr>\n\n<p>To create checkbox buttons create a <code>.btn-group</code> with the required <code>.btns</code> &amp; including <code>button-toggle-primary</code> or <code>button-toggle-accent</code> class inside.</p>\n\n<p>On each <code>.btn</code> set <code>ng-model</code> to the property required and specify the<code> btn-checkbox</code> attribute. \nUse the <code>btn-checkbox-true</code> and <code>btn-checkbox-false</code> attributes to specify <code>true</code> and <code>false</code> values on a per button basis.</p>\n\n<p>For assistive technologies you should use the <code>role="checkbox"</code> attribute, together with the <code>aria-checked</code> attribute. \nThe <code>aria-checked</code> attribute should be bound to the same property you use for the checked state.</p>\n\n<p>Additionally you can include a <code>span</code> with the <code>sr-only</code> class to convey additional information on the state of the buttons. \nThis information will be read by screen-readers but not visible on the page.</p>\n\n<tabset>\n    <tab heading="HTML">\n        <uxd-snippet [code]="htmlCode" language="html"></uxd-snippet>\n    </tab>\n    <tab heading="JavaScript">\n        <uxd-snippet [code]="javascriptCode" language="javascript"></uxd-snippet>\n    </tab>\n</tabset>\n'},1850:function(n,e){n.exports='<uxd-dropdown-wrapper display="main"></uxd-dropdown-wrapper>\n\n<hr>\n\n<p>On the <code>div.btn-group</code> set the dropdown attribute. The dropdown can either be opened by using the <code>is-open</code> attribute, or assigning the <code>dropdown-toggle</code> attribute to the desired <code>.btn</code>.</p>\n\n<p>Set <code>on-toggle="yourFunction(open)"</code> for <code>yourFunction</code> to be executed every time the dropdown changes state.</p>\n\n<p>It is possible to add interactive items to the dropdown. If the dropdown should remain open when clicking on an item, add <code>ng-click="$event.stopPropagation()"</code> to the anchor element. The <code>dropdown-indent</code> class is provided to visually distinguish subordinate controls within the dropdown, as seen in the first example.</p>\n\n<tabset>\n    <tab heading="HTML">\n        <uxd-snippet [code]="htmlCode" language="html"></uxd-snippet>\n    </tab>\n    <tab heading="JavaScript">\n        <uxd-snippet [code]="javascriptCode" language="javascript"></uxd-snippet>\n    </tab>\n</tabset>\n\n<h4 id="menu-features">Menu Features</h4>\n\n<uxd-dropdown-wrapper display="menu"></uxd-dropdown-wrapper>\n\n<hr>\n\n<p>Styles are provided to create menus with common features including gutter icons, keyboard shortcut hints, and submenus.</p>\n\n<p>To style menu items as above, apply the <code>dropdown-menu-item</code> class to the <code>a</code> element of the menu item. This will contain up to three <code>span</code> elements with classes as follows:</p>\n\n<ul>\n  <li><code>dropdown-menu-icon</code> - This contains the icon, which may be one of the <a routerLink="/css/icons" fragment="ux-icons">UX Aspects Icons</a> or an image. If no icon is required, leave this empty to ensure a consistent gutter for other items with icons.</li>\n  <li><code>dropdown-menu-text</code> - This contains the menu text.</li>\n  <li><code>dropdown-menu-right</code> - Optionally, this may contain right aligned text or icons. <code>dropdown-menu-hint</code> provides a default text style for keyboard shortcut hints here.</li>\n</ul>\n\n<blockquote>\n  <p>See <a routerLink="/components/keyboard" fragment="keyboard-service-ng1">Keyboard Service</a> for information on binding keyboard shortcuts.</p>\n</blockquote>\n\n<p>Set the width on the <code>ul</code> element to ensure that the menu contents will fit.</p>\n\n<p>To create a menu item which opens a submenu, set the <code>dropdown-submenu</code> class on the <code>li</code> element, and insert the menu contents below the <code>a</code> element. The above example demonstrates both a standard and a custom submenu; see the example code for details.</p>\n\n<tabset>\n    <tab heading="HTML">\n        <uxd-snippet [code]="htmlMenuCode" language="html"></uxd-snippet>\n    </tab>\n    <tab heading="JavaScript">\n        <uxd-snippet [code]="javascriptCode" language="javascript"></uxd-snippet>\n    </tab>\n    <tab heading="CSS">\n        <uxd-snippet [code]="cssCode" language="css"></uxd-snippet>\n    </tab>\n</tabset>\n'},1851:function(n,e){n.exports='<p>Floating Action Button can be opened in any of the 4 directions (top, bottom, left or right).</p>\n\n<br>\n\n<uxd-floating-action-button-wrapper></uxd-floating-action-button-wrapper>\n\n<p>Floating Action Button is contained in <code>floating-action-button</code> directive.</p>\n\n<uxd-snippet [code]="this.htmlCode" language="html"></uxd-snippet>\n\n<p>The attributes defining this directive are:</p>\n<div class="demo-attributes table-responsive">\n<table class="table">\n  <tbody><tr>\n    <th>Name</th>\n    <th>Type</th>\n    <th>Binding</th>\n    <th>Description</th>\n    <th>Optional</th>\n  </tr>\n  <tr>\n    <td class="attribute">items</td>\n    <td>array</td>\n    <td>variable</td>\n    <td>\n    Array of icons and events, that defines the child buttons shown when the primary button is expanded.<br><br>\n    Each element of the array should contain an <code>icon</code> property which should be the name of an icon from the icon set.<br><br>\n    There should also be an <code>event</code> property which should reference a function that will be called when a button is clicked.\n    </td>\n    <td>false</td>\n  </tr>\n  <tr>\n    <td class="attribute">direction</td>\n    <td>string</td>\n    <td>variable</td>\n    <td>Defines the direction in which the child button should expand (top, bottom, left, right).</td>\n    <td>false</td>\n  </tr>\n</tbody></table>\n</div>\n<p>The controller logic for the floating action buttons is as follows:</p>\n\n<uxd-snippet [code]="this.javascriptCode" language="javascript"></uxd-snippet>\n'},1852:function(n,e){n.exports='<uxd-grouped-buttons-wrapper></uxd-grouped-buttons-wrapper>\n\n<hr>\n\n<p>This is a group of buttons ideal when many actions are related to an element. Grouped Buttons implement the <code>.btn-group</code> class.</p>\n\n<p>The <code>role</code> attribute should be specified for assistive technology users. For button groups it should be <code>role="group"</code>.</p>\n\n<p>The <code>.btn-grouped</code> and <code>.btn-align</code> classes should be added to any buttons within the group along with the <code>grouped-selected</code> attribute. The <code>.active</code> class can be added to a button to have it initially selected.</p>\n\n<uxd-snippet [code]="htmlCodeTop" language="html"></uxd-snippet>\n\n<p>The <code>grouped-previous</code> and <code>grouped-next</code> attributes should be added to the previous and next buttons in grouped buttons with pagination. The buttons indicating the pages within the pagination group should be given the <code>.btn-grouped</code> and <code>.btn-nav</code> classes along with the <code>grouped-clear</code> attribute. The <code>.active</code> class can be added to a button to have it initially selected.</p>\n\n<uxd-snippet [code]="htmlCodeBottom" language="html"></uxd-snippet>\n\n<p>The <code>aria-label</code> attribute should be specified so that assistive technology knows to announce the group. The <code>aria-label</code> attribute should also be used for icons that convey meaning such as the chevron buttons on the pagination control.</p>\n'},1853:function(n,e){n.exports='<uxd-pagination-wrapper></uxd-pagination-wrapper>\n\n<hr>\n\n<p>Create a <code>pagination</code> element and set the <code>total-items</code> to the total number of items and set <code>ng-model</code> to the current page being displayed.</p>\n\n<p>To trigger a function call when the page is changed set <code>ng-change</code> to the function e.g. <code>ng-change="pageChanged()"</code>.</p>\n\n<p>We recommend accompanying the pagination control with a label like “Page X of Y”.</p>\n\n<tabset>\n    <tab heading="HTML">\n        <uxd-snippet [code]="htmlCode" language="html"></uxd-snippet>\n    </tab>\n    <tab heading="JavaScript">\n        <uxd-snippet [code]="javascriptCode" language="javascript"></uxd-snippet>\n    </tab>\n</tabset>\n\n<div class="demo-attributes table-responsive">\n<table class="table m-t">\n  <tbody><tr>\n    <th>Name</th>\n    <th>Type</th>\n    <th>Binding</th>\n    <th>Description</th>\n    <th>Optional</th>\n  </tr>\n  <tr>\n    <td class="attribute">total-items</td>\n    <td>number</td>\n    <td>variable</td>\n    <td>The total number of items in all pages.</td>\n    <td>false</td>\n  </tr>\n  <tr>\n    <td class="attribute">items-per-page</td>\n    <td>number</td>\n    <td>variable</td>\n    <td>Maximum number of items per page. A value less than one indicates all items on one page. Defaults to 10 if not set.</td>\n    <td>true</td>\n  </tr>\n  <tr>\n    <td class="attribute">current-page</td>\n    <td>number</td>\n    <td>variable</td>\n    <td>The currently selected page.</td>\n    <td>false</td>\n  </tr>\n  <tr>\n    <td class="attribute">num-pages</td>\n    <td>number</td>\n    <td>variable</td>\n    <td>The total number of pages, this is a read only property which can be used for displaying the total number of pages.</td>\n    <td>true</td>\n  </tr>\n</tbody></table>\n</div>\n\n<blockquote>\n  <p><strong>Note</strong>: Refer to <a href="http://angular-ui.github.io/bootstrap/">UI Bootstrap</a> pagination for more options.</p>\n</blockquote>\n'},1854:function(n,e){n.exports='<uxd-radio-buttons-wrapper></uxd-radio-buttons-wrapper>\n\n<hr>\n\n<p>To create radio buttons create a <code>.btn-group</code> with the required <code>.btns</code> &amp; including <code>button-toggle-primary</code> or <code>button-toggle-accent</code> class inside.\nOn each <code>.btn</code> set <code>ng-model</code> to the property required and specify the <code>btn-radio</code> attribute with the value the button should have.</p>\n\n<tabset>\n    <tab heading="HTML">\n        <uxd-snippet [code]="htmlCode" language="html"></uxd-snippet>\n    </tab>\n    <tab heading="JavaScript">\n        <uxd-snippet [code]="javascriptCode" language="javascript"></uxd-snippet>\n    </tab>\n</tabset>\n'},1855:function(n,e){n.exports='<uxd-single-toggle-button-wrapper></uxd-single-toggle-button-wrapper>\n\n<hr>\n\n<p>To create a single toggle button create a <code>button</code> with <code>button-toggle-primary</code> or <code>button-toggle-accent</code> class , set <code>ng-model</code> to the property required, and specify the <code>btn-checkbox</code> attribute.</p>\n\n<p>Use the <code>btn-checkbox-true</code> and <code>btn-checkbox-false</code> attributes to specify <code>true</code> and <code>false</code> values.</p>\n\n<p>Include a hidden label with the <code>sr-only</code> class to convey the toggle state to users using assistive technologies.</p>\n\n<tabset>\n    <tab heading="HTML">\n        <uxd-snippet [code]="htmlCode" language="html"></uxd-snippet>\n    </tab>\n    <tab heading="JavaScript">\n        <uxd-snippet [code]="javascriptCode" language="javascript"></uxd-snippet>\n    </tab>\n</tabset>\n'},1856:function(n,e){n.exports='<uxd-thumbnail-wrapper></uxd-thumbnail-wrapper>\n\n<hr>\n\n<p>Thumbnails are a useful way of showing a concise description or preview of something (such as a file). It allows the user to catch a glimpse of the whole file without actually downloading or opening it.</p>\n\n<p>Thumbnails can be easily implemented with the use of our <code>thumbnail</code> directive. This allows you to specify a thumbnail for an element and dynamically update the visibility of the thumbnail. There are some attributes you can specify on the <code>thumbnail</code> directive to customize it to suit your needs. These include:</p>\n\n<div class="demo-attributes table-responsive">\n<table class="table m-t">\n  <tbody><tr>\n    <th>Name</th>\n    <th>Type</th>\n    <th>Binding</th>\n    <th>Description</th>\n    <th>Optional</th>\n  </tr>\n  <tr>\n    <td class="attribute">url</td>\n    <td>string</td>\n    <td>variable</td>\n    <td>Specifies the url of the image to be used as the thumbnail. If no url is defined the <code>hpe-document</code> icon will appear instead.</td>\n    <td>true</td>\n  </tr>\n  <tr>\n    <td class="attribute">show</td>\n    <td>boolean</td>\n    <td>variable</td>\n    <td>Specifies whether or not the thumbnail should be visible. Defaults to <code>true</code>.</td>\n    <td>true</td>\n  </tr>\n  <tr>\n    <td class="attribute">width</td>\n    <td>string</td>\n    <td>variable</td>\n    <td>Defines the width of the thumbnail and the directive element. Takes <code>%</code> and <code>px</code> values. Defaults to <code>220px</code>.</td>\n    <td>true</td>\n  </tr>\n  <tr>\n    <td class="attribute">height</td>\n    <td>string</td>\n    <td>variable</td>\n    <td>Defines the height of the thumbnail. Takes <code>%</code> and <code>px</code> values. Defaults to <code>120px</code>.</td>\n    <td>true</td>\n  </tr>\n</tbody></table>\n</div>\n\n<p>You can see the code used in our example by selecting the appropriate tabs below:</p>\n\n<tabset>\n    <tab heading="HTML">\n        <uxd-snippet [code]="htmlCode" language="html"></uxd-snippet>\n    </tab>\n    <tab heading="JavaScript">\n        <uxd-snippet [code]="javascriptCode" language="javascript"></uxd-snippet>\n    </tab>\n    <tab heading="CSS">\n        <uxd-snippet [code]="cssCode" language="css"></uxd-snippet>\n    </tab>\n</tabset>'},1857:function(n,e){n.exports='<uxd-toggle-buttons-wrapper></uxd-toggle-buttons-wrapper>\n\n<hr>\n\n<p>The <code>aria-pressed</code> attribute should be used to describe the button state to users using assistive technologies.</p>\n\n<p>When using multiple toggle buttons, include the <code>role="checkbox"</code> and <code>aria-checked</code> attributes to convey the button state instead.\nThe <code>aria-checked</code> property should be set programatically.</p>\n\n<p>Single toggle buttons.</p>\n\n<uxd-snippet [code]="htmlCodeTop" language="html"></uxd-snippet>\n\n<p>Button groups can act as a radio or a switch or even a single toggle.</p>\n\n<uxd-snippet [code]="htmlCodeBottom" language="html"></uxd-snippet>\n'},2157:function(n,e){n.exports='<div class="btn-group">\n    <button type="button" class="btn button-toggle-primary" ng-model="vm.checkModelLeft" btn-checkbox btn-checkbox-true="\'ON\'" btn-checkbox-false="\'OFF\'">\n            Left<span class="sr-only" ng-bind="vm.checkModelLeft"></span>\n    </button>\n    <button type="button" class="btn button-toggle-primary" ng-model="vm.checkModelMiddle" btn-checkbox role="checkbox">Middle</button>\n    <button type="button" class="btn button-toggle-primary" ng-model="vm.checkModelRight" btn-checkbox role="checkbox">Right</button>\n</div>\n<p class="m-t">\n    <code>checkModelLeft</code> is <em ng-bind="vm.checkModelLeft"></em>.\n    <code>checkModelMiddle</code> is <em ng-bind="vm.checkModelMiddle"></em>. <code>checkModelRight</code> is\n    <em ng-bind="vm.checkModelRight"></em>.\n</p>'},2158:function(n,e){n.exports='angular.module("app").controller("CheckboxButtonsCtrl", CheckboxButtonsCtrl);\n\nfunction CheckboxButtonsCtrl() {\n    var vm = this;\n\n    vm.checkModelLeft = "ON";\n    vm.checkModelMiddle = false;\n    vm.checkModelRight = false;\n}'},2159:function(n,e){n.exports='<div class="m-t m-b">\n    <div class="btn-group" dropdown>\n        <button type="button" class="btn button-secondary dropdown-toggle" dropdown-toggle aria-haspopup="true" aria-expanded="false">\n            Actions <span class="hpe-icon hpe-down dropdown-icon-inline"></span>\n        </button>\n        <ul class="dropdown-menu features-dropdown" role="menu">\n            <li class="dropdown-submenu">\n                <a href="" class="dropdown-menu-item">\n                    <span class="dropdown-menu-icon"></span>\n                    <span class="dropdown-menu-text">\n                        Mark as\n                    </span>\n                    <span class="dropdown-menu-right dropdown-menu-hint">\n                        <i class="hpe-icon hpe-next"></i>\n                    </span>\n                </a>\n                <ul class="dropdown-menu features-dropdown" role="menu">\n                    <li>\n                        <a href="" class="dropdown-menu-item">\n                            <span class="dropdown-menu-icon">\n                                <i class="hpe-icon hpe-more"></i>\n                            </span>\n                            <span class="dropdown-menu-text">\n                                Pending\n                            </span>\n                            <span class="dropdown-menu-right dropdown-menu-hint">\n                                ALT+P\n                            </span>\n                        </a>\n                    </li>\n                    <li>\n                        <a href="" class="dropdown-menu-item">\n                            <span class="dropdown-menu-icon">\n                                <i class="hpe-icon hpe-link-up"></i>\n                            </span>\n                            <span class="dropdown-menu-text">\n                                Escalated\n                            </span>\n                            <span class="dropdown-menu-right dropdown-menu-hint">\n                                ALT+E\n                            </span>\n                        </a>\n                    </li>\n                    <li>\n                        <a href="" class="dropdown-menu-item">\n                            <span class="dropdown-menu-icon">\n                                <i class="hpe-icon hpe-checkmark"></i>\n                            </span>\n                            <span class="dropdown-menu-text">\n                                Closed\n                            </span>\n                            <span class="dropdown-menu-right dropdown-menu-hint">\n                                ALT+C\n                            </span>\n                        </a>\n                    </li>\n                </ul>\n            </li>\n            <li class="divider"></li>\n            <li>\n                <a href="" class="dropdown-menu-item">\n                    <span class="dropdown-menu-icon"></span>\n                    <span class="dropdown-menu-text">\n                        Export\n                    </span>\n                </a>\n            </li>\n            <li class="dropdown-submenu">\n                <a href="" class="dropdown-menu-item">\n                    <span class="dropdown-menu-icon"></span>\n                    <span class="dropdown-menu-text">\n                        Add to case\n                    </span>\n                    <span class="dropdown-menu-right dropdown-menu-hint">\n                        <i class="hpe-icon hpe-next"></i>\n                    </span>\n                </a>\n                <div class="dropdown-menu case-dropdown">\n                    <div class="case-filter">\n                        <div class="inner-addon right-addon">\n                            <i class="hpe-icon hpe-search"></i>\n                            <input type="text" class="form-control" ng-model="vm.caseFilter" ng-click="$event.stopPropagation();" />\n                        </div>\n                    </div>\n                    <div>\n                        <div class="case-items" scroll-pane scroll-name="case-items" scroll-config="{ autoReinitialise: true }">\n                            <ul>\n                                <li ng-repeat="case in vm.cases | filter: vm.caseFilter">\n                                    <a href="" ng-bind="case"></a>\n                                </li>\n                            </ul>\n                        </div>\n                    </div>\n                </div>\n            </li>\n            <li>\n                <a href="" class="dropdown-menu-item">\n                    <span class="dropdown-menu-icon"></span>\n                    <span class="dropdown-menu-text">\n                        Save list\n                    </span>\n                    <span class="dropdown-menu-right dropdown-menu-hint">\n                        ALT+L\n                    </span>\n                </a>\n            </li>\n            <li>\n                <a href="" class="dropdown-menu-item">\n                    <span class="dropdown-menu-icon"></span>\n                    <span class="dropdown-menu-text">\n                        Save search query\n                    </span>\n                    <span class="dropdown-menu-right dropdown-menu-hint">\n                        ALT+S\n                    </span>\n                </a>\n            </li>\n            <li>\n                <a href="" class="dropdown-menu-item">\n                    <span class="dropdown-menu-icon">\n                        <i class="hpe-icon hpe-edit"></i>\n                    </span>\n                    <span class="dropdown-menu-text">\n                        Annotate\n                    </span>\n                    <span class="dropdown-menu-right dropdown-menu-hint">\n                        ALT+A\n                    </span>\n                </a>\n            </li>\n        </ul>\n    </div>\n</div>'},2160:function(n,e){n.exports=".features-dropdown {\n    width: 250px;\n}\n\n.dropdown-submenu > .case-dropdown {\n    top: -52px;\n}\n\n.case-filter {\n    margin: 9px;\n}\n\n.case-items {\n    height: 195px;\n    width: 160px;\n    overflow: auto;\n}\n\n.case-items ul {\n    width: 100%;\n    list-style: none outside none;\n    padding: 0;\n}\n\n.case-items ul > li > a {\n    color: inherit;\n    line-height: 25px;\n    text-align: left;\n    font-weight: normal;\n    font-size: 1rem;\n    display: block;\n    padding: 7px 20px;\n    clear: both;\n    white-space: nowrap;\n}"},2161:function(n,e){n.exports='<p>Button dropdown open: <em ng-bind="vm.buttonOpen" class="ng-binding">false</em>. Split dropdown open: <em ng-bind="vm.splitOpen" class="ng-binding">false</em>.</p>\n\n<div class="m-t m-b">\n    <div class="btn-group" dropdown is-open="vm.buttonOpen">\n        <button type="button" class="btn button-primary dropdown-toggle" dropdown-toggle aria-haspopup="true" aria-expanded="false">\n            Button dropdown <span class="hpe-icon hpe-down dropdown-icon-inline"></span>\n        </button>\n        <ul class="dropdown-menu" role="menu">\n            <li>\n                <a ng-click="$event.stopPropagation()">\n                    <radiobutton name="radio1" ng-model="vm.radioModel1" ng-value="vm.radioOptions.option1">\n                        Radio Option 1\n                    </radiobutton>\n                </a>\n            </li>\n            <li class="dropdown-indent">\n                <a ng-click="$event.stopPropagation()">\n                    <checkbox name="check1" ng-model="vm.checkModel1.option1" ng-disabled="vm.radioModel1 != vm.radioOptions.option1">\n                        Checkbox A\n                    </checkbox>\n                </a>\n            </li>\n            <li class="dropdown-indent">\n                <a ng-click="$event.stopPropagation()">\n                    <checkbox name="check2" ng-model="vm.checkModel1.option2" ng-disabled="vm.radioModel1 != vm.radioOptions.option1">\n                        Checkbox B\n                    </checkbox>\n                </a>\n            </li>\n            <li>\n                <a ng-click="$event.stopPropagation()">\n                    <radiobutton name="radio1" ng-model="vm.radioModel1" ng-value="vm.radioOptions.option2">\n                        Radio Option 2\n                    </radiobutton>\n                </a>\n            </li>\n        </ul>\n    </div>\n    &nbsp;\n    <div class="btn-group" dropdown is-open="vm.splitOpen">\n        <button type="button" class="btn button-secondary">Split dropdown</button>\n        <button type="button" class="btn button-secondary dropdown-toggle" dropdown-toggle aria-haspopup="true" aria-expanded="false">\n            <span class="hpe-icon hpe-down"></span>\n            <span class="sr-only">Split button</span>\n        </button>\n        <ul class="dropdown-menu" role="menu">\n            <li><a>Action</a></li>\n            <li><a>Another action</a></li>\n            <li><a>Something else here</a></li>\n            <li class="divider"></li>\n            <li><a>Separated link</a></li>\n        </ul>\n    </div>\n</div>'},2162:function(n,e){n.exports='angular.module(\'app\').controller(\'DropdownCtrl\', DropdownCtrl);\n\nfunction DropdownCtrl() {\n    var vm = this;\n\n    vm.buttonOpen = false;\n    vm.splitOpen = false;\n\n    vm.radioOptions = {\n        option1: 1,\n        option2: 2\n    };\n    vm.radioModel1 = vm.radioOptions.option1;\n\n    vm.checkModel1 = {\n        option1: false,\n        option2: false\n    };\n\n    vm.cases = [\n        "Alpha",\n        "Beta",\n        "Gamma",\n        "Delta",\n        "Epsilon",\n        "Zeta",\n        "Eta",\n        "Theta",\n        "Iota",\n        "Kappa",\n        "Alpha 2",\n        "Alpha 3",\n    ];\n    vm.caseFilter = "";\n}\n'},2163:function(n,e){n.exports='<h4>Floating Action Button - Vertical (Bottom)</h4>\n\n<div style="margin-bottom: 150px">\n    <floating-action-button primary="\'hpe-contract\'" items="vm.items" direction="\'bottom\'">\n    </floating-action-button>\n</div>\n\n<hr>\n\n<h4>Floating Action Button - Horizontal (Right)</h4>\n\n<floating-action-button primary="\'hpe-contract\'" items="vm.items" direction="\'right\'">\n</floating-action-button>\n\n<hr>\n\n<h4>Floating Action Button - Vertical (Up)</h4>\n\n<floating-action-button primary="\'hpe-contract\'" items="vm.items" direction="\'top\'">\n</floating-action-button>\n\n<hr>\n\n<h4>Floating Action Button - Horizontal (Left)</h4>\n\n<div style="margin-left: 150px;">\n    <floating-action-button primary="\'hpe-contract\'" items="vm.items" direction="\'left\'">\n    </floating-action-button>\n</div>\n\n<hr>'},2164:function(n,e){n.exports='angular.module("app").controller("FloatingActionButtonCtrl", FloatingActionButtonCtrl);\n\nfunction FloatingActionButtonCtrl() {\n    var vm = this;\n\n    vm.selectFloatingActionButton = function () {};\n\n    vm.items = [{\n        icon: "hpe-add",\n        event: this.selectFloatingActionButton\n    }, {\n        icon: "hpe-analytics",\n        event: this.selectFloatingActionButton\n    }, {\n        icon: "hpe-app",\n        event: this.selectFloatingActionButton\n    }];\n}\n'},2165:function(n,e){n.exports='<div class="btn-group">\n    <button type="button" class="btn button-secondary" grouped-previous aria-label="Previous">\n        <i class="hpe-icon hpe-previous"></i>\n    </button>\n    <button class="btn button-secondary btn-nav btn-grouped" grouped-clear>1</button>\n    <button class="btn button-secondary btn-nav btn-grouped" grouped-clear>2</button>\n    <button class="btn button-secondary btn-nav btn-grouped" grouped-clear>3</button>\n    <button class="btn button-secondary btn-nav btn-grouped" grouped-clear>4</button>\n    <button type="button" class="btn button-secondary" grouped-next aria-label="Next">\n        <i class="hpe-icon hpe-next"></i>\n    </button>\n</div>\n'},2166:function(n,e){n.exports='<div class="btn-group" role="group" aria-label="Alignment">\n    <button class="btn button-secondary btn-grouped btn-align" grouped-selected type="button">Left</button>\n    <button class="btn button-secondary btn-grouped btn-align active" grouped-selected type="button">Middle</button>\n    <button class="btn button-secondary btn-grouped btn-align" grouped-selected type="button">Right</button>\n</div>\n<br><br>\n'},2167:function(n,e){n.exports='angular.module("app").controller("GroupedButtonsCtrl", GroupedButtonsCtrl);\n\nfunction GroupedButtonsCtrl() {\n    var vm = this;\n\n    vm.position = \'middle\';\n    vm.page = 1;\n\n    vm.previousPage = function () {\n        if (vm.page > 1) vm.page--;\n    };\n\n    vm.nextPage = function () {\n        if (vm.page < 4) vm.page++;\n    };\n}'},2168:function(n,e){n.exports='<pagination total-items="vm.totalItems" ng-model="vm.currentPage" num-pages="vm.numPages"></pagination>\n<p>Page <span ng-bind="vm.currentPage"></span> of <span ng-bind="::vm.numPages"></span></p>\n'},2169:function(n,e){n.exports="angular.module('app').controller('PaginationCtrl', PaginationCtrl);\n\nfunction PaginationCtrl() {\n    var vm = this;\n\n    vm.totalItems = 100;\n    vm.currentPage = 1;\n    vm.numPages = 0;\n}\n"},2170:function(n,e){n.exports='<div class="btn-group">\n    <button type="button" class="btn button-toggle-primary" ng-model="vm.radioModel" btn-radio="\'Left\'">Left</button>\n    <button type="button" class="btn button-toggle-primary" ng-model="vm.radioModel" btn-radio="\'Middle\'">Middle</button>\n    <button type="button" class="btn button-toggle-primary" ng-model="vm.radioModel" btn-radio="\'Right\'">Right</button>\n</div>\n<p class="m-t"><code>radioModel</code> is <em ng-bind="vm.radioModel"></em>.</p>'},2171:function(n,e){n.exports="angular.module('app').controller('RadioButtonsCtrl', RadioButtonsCtrl);\n\nfunction RadioButtonsCtrl() {\n    var vm = this;\n\n    vm.radioModel = \"Left\";\n}\n"},2172:function(n,e){n.exports='<button type="button" class="btn button-toggle-primary" ng-model="vm.singleToggle" btn-checkbox btn-checkbox-true="\'ON\'" btn-checkbox-false="\'OFF\'">\n    Single Toggle <span class="sr-only" ng-bind="vm.singleToggle"></span>\n</button>\n<p class="m-t">Toggle is <em ng-bind="vm.singleToggle"></em></p>\n'},2173:function(n,e){n.exports="angular.module('app').controller('SingleToggleButtonCtrl', SingleToggleButtonCtrl);\n\nfunction SingleToggleButtonCtrl() {\n    var vm = this;\n\n    vm.singleToggle = \"ON\";\n}\n"},2174:function(n,e){n.exports=".thumbnails-example-container {\n    display: flex;\n    flex-wrap: wrap;\n}\n\n.thumbnail-example {\n    display: flex;\n    align-items: center;\n    height: 45px;\n    padding: 5px 10px;\n}\n\n.thumbnail-example .hpe-download {\n    margin-left: auto;\n    color: #989da0;\n}\n\n.thumbnail-example .hpe-download:hover {\n    color: #676a6c;\n    cursor: pointer;\n}\n\n.thumbnail-example p {\n    margin-bottom: -4px;\n}\n\n.thumbnail-example p > span {\n    font-size: 14px;\n    color: #333131;\n}\n\n.thumbnail-example p > span + span {\n    color: #828282;\n    margin-left: 4px;\n    font-size: 13px;\n}\n\n.thumbnail-example .word-icon {\n    background: url(https://uxaspects.github.io/UXAspects/assets/img/doc-icons/IconWordColorized.png) no-repeat;\n    width: 18px;\n    height: 18px;\n    flex: 0 0 auto;\n    background-size: cover;\n}\n\n.thumbnail-example .pdf-icon {\n    background: url(https://uxaspects.github.io/UXAspects/assets/img/doc-icons/IconPDFColorized.png) no-repeat;\n    width: 18px;\n    height: 18px;\n    flex: 0 0 auto;\n    background-size: cover;\n}\n\n.thumbnail-example .excel-icon {\n    background: url(https://uxaspects.github.io/UXAspects/assets/img/doc-icons/IconExcelColorized.png) no-repeat;\n    width: 18px;\n    height: 18px;\n    flex: 0 0 auto;\n    background-size: cover;\n}\n\n.thumbnail-example .html-icon {\n    background: url(https://uxaspects.github.io/UXAspects/assets/img/doc-icons/IconHTMLColorized.png) no-repeat;\n    width: 18px;\n    height: 18px;\n    flex: 0 0 auto;\n    background-size: cover;\n}\n\n.thumbnail-example .powerpoint-icon {\n    background: url(https://uxaspects.github.io/UXAspects/assets/img/doc-icons/IconPowerPointColorized.png) no-repeat;\n    width: 18px;\n    height: 18px;\n    flex: 0 0 auto;\n    background-size: cover;\n}\n\n.thumbnail-example .email-icon {\n    background: url(https://uxaspects.github.io/UXAspects/assets/img/doc-icons/IconEmailColorized.png) no-repeat;\n    width: 18px;\n    height: 18px;\n    flex: 0 0 auto;\n    background-size: cover;\n}\n\n.thumbnails-example-container .front, .thumbnails-example-container .back {\n    box-shadow: none;\n}\n\n.thumbnails-example-container .front .thumbnail-example {\n    padding: 10px;\n}\n\n.thumbnails-example-container .back {\n    background-color: #f2eff6; \n    border: 1px solid #cfd2d6;\n}\n\n.thumbnails-example-container .thumbnail-title {\n    font-weight: 600;\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n}\n\n.thumbnails-example-container .back .thumbnail-example {\n    height: 100%;\n    align-items: flex-start;\n    padding: 15px 10px;\n}\n\n.thumbnails-example-container .back .thumbnail-title {\n    white-space: normal;\n    line-height: 18px;\n}\n\n.thumbnails-example-container .back .hpe-download {\n    bottom: 20px;\n    position: absolute;\n}"},2175:function(n,e){n.exports="angular.module('app').controller('ThumbnailDemoCtrl', ThumbnailDemoCtrl);\n\nfunction ThumbnailDemoCtrl() {\n    var vm = this;\n\n    vm.show = false;\n    vm.flipShow = true;\n\n    vm.thumbnails = [{\n        url: 'https://uxaspects.github.io/UXAspects/assets/img/thumbnails/excel.png',\n        icon: 'excel-icon',\n        title: 'Results.xls',\n        type: 'Excel',\n        size: '101.3 KB'\n    }, {\n        url: '',\n        icon: 'word-icon',\n        title: 'Overview.doc',\n        type: 'Word',\n        size: '31.7 KB'\n    }, {\n        url: 'https://uxaspects.github.io/UXAspects/assets/img/thumbnails/pdf.png',\n        icon: 'pdf-icon',\n        title: 'Archiving Edge.pdf',\n        type: 'PDF',\n        size: '1.5 MB'\n    }];\n\n    vm.flippableThumbnails = [{\n        url: 'https://uxaspects.github.io/UXAspects/assets/img/thumbnails/html.png',\n        icon: 'html-icon',\n        title: 'Example home page for document finder site.html',\n        type: 'HTML',\n        size: '3.1 KB'\n    }, {\n        url: '',\n        icon: 'email-icon',\n        title: 'Recent discussion.msg',\n        type: 'Email',\n        size: '1.7 KB'\n    }, {\n        url: 'https://uxaspects.github.io/UXAspects/assets/img/thumbnails/powerpoint.png',\n        icon: 'powerpoint-icon',\n        title: 'Using the HPE Slide Library for PowerPoint Presentations.ppt',\n        type: 'PowerPoint',\n        size: '2.4 MB'\n    }];\n}\n"},2176:function(n,e){n.exports=".thumbnails-example-container {\n    display: flex;\n    flex-wrap: wrap;\n}\n\n.thumbnail-example {\n    display: flex;\n    align-items: center;\n    height: 45px;\n    padding: 5px 10px;\n}\n\n.thumbnail-example .hpe-download {\n    margin-left: auto;\n    color: #989da0;\n}\n\n.thumbnail-example .hpe-download:hover {\n    color: #676a6c;\n    cursor: pointer;\n}\n\n.thumbnail-example p {\n    margin-bottom: -4px;\n}\n\n.thumbnail-example p > span {\n    font-size: 14px;\n    color: #333131;\n}\n\n.thumbnail-example p > span + span {\n    color: #828282;\n    margin-left: 4px;\n    font-size: 13px;\n}\n\n.thumbnail-example .word-icon {\n    background: url(assets/img/doc-icons/IconWordColorized.png) no-repeat;\n    width: 18px;\n    height: 18px;\n    flex: 0 0 auto;\n    background-size: cover;\n}\n\n.thumbnail-example .pdf-icon {\n    background: url(assets/img/doc-icons/IconPDFColorized.png) no-repeat;\n    width: 18px;\n    height: 18px;\n    flex: 0 0 auto;\n    background-size: cover;\n}\n\n.thumbnail-example .excel-icon {\n    background: url(assets/img/doc-icons/IconExcelColorized.png) no-repeat;\n    width: 18px;\n    height: 18px;\n    flex: 0 0 auto;\n    background-size: cover;\n}\n\n.thumbnail-example .html-icon {\n    background: url(assets/img/doc-icons/IconHTMLColorized.png) no-repeat;\n    width: 18px;\n    height: 18px;\n    flex: 0 0 auto;\n    background-size: cover;\n}\n\n.thumbnail-example .powerpoint-icon {\n    background: url(assets/img/doc-icons/IconPowerPointColorized.png) no-repeat;\n    width: 18px;\n    height: 18px;\n    flex: 0 0 auto;\n    background-size: cover;\n}\n\n.thumbnail-example .email-icon {\n    background: url(assets/img/doc-icons/IconEmailColorized.png) no-repeat;\n    width: 18px;\n    height: 18px;\n    flex: 0 0 auto;\n    background-size: cover;\n}\n\n.thumbnails-example-container .front, .thumbnails-example-container .back {\n    box-shadow: none;\n}\n\n.thumbnails-example-container .front .thumbnail-example {\n    padding: 10px;\n}\n\n.thumbnails-example-container .back {\n    background-color: #f2eff6; \n    border: 1px solid #cfd2d6;\n}\n\n.thumbnails-example-container .thumbnail-title {\n    font-weight: 600;\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n}\n\n.thumbnails-example-container .back .thumbnail-example {\n    height: 100%;\n    align-items: flex-start;\n    padding: 15px 10px;\n}\n\n.thumbnails-example-container .back .thumbnail-title {\n    white-space: normal;\n    line-height: 18px;\n}\n\n.thumbnails-example-container .back .hpe-download {\n    bottom: 20px;\n    position: absolute;\n}"},2177:function(n,e){n.exports='<toggleswitch ng-model="vm.show">Toggle thumbnails</toggleswitch>\n<hr>\n<div class="thumbnails-example-container m-t-lg">\n    <thumbnail ng-repeat="thumbnail in ::vm.thumbnails" url="::thumbnail.url" show="vm.show" class="m-r-lg m-b-lg">\n        <div class="thumbnail-example">\n            <div ng-class="::thumbnail.icon"></div>\n            <div class="m-l-sm m-b-xs">\n                <p class="thumbnail-title" ng-bind="::thumbnail.title"></p>\n                <p><span ng-bind="::thumbnail.type"></span><span ng-bind="::thumbnail.size"></span></p>\n            </div>\n            <i class="hpe-icon hpe-download hpe-lg"></i>\n        </div>\n    </thumbnail>\n</div>\n\n<h4 class="m-t-sm">Flippable variation</h4>\n<hr>\n<div class="thumbnails-example-container m-t-lg">\n    <flippable-card flip-on="hover" flip-style="vertical" card-height="169" card-width="220" ng-repeat="thumbnail in ::vm.flippableThumbnails"\n        class="m-r-lg m-t-md">\n        <card-front>\n            <thumbnail url="::thumbnail.url" show="vm.flipShow">\n                <div class="thumbnail-example">\n                    <div ng-class="::thumbnail.icon"></div>\n                    <p class="m-l-sm thumbnail-title" ng-bind="::thumbnail.title"></p>\n                </div>\n            </thumbnail>\n        </card-front>\n        <card-back>\n            <div class="thumbnail-example">\n                <div ng-class="::thumbnail.icon"></div>\n                <div class="m-l-sm p-r-sm">\n                    <p class="thumbnail-title" ng-bind="::thumbnail.title"></p>\n                    <p class="m-t-xs"><span ng-bind="::thumbnail.type"></span><span ng-bind="::thumbnail.size"></span></p>\n                    <i class="hpe-icon hpe-download hpe-lg"></i>\n                </div>\n            </div>\n        </card-back>\n    </flippable-card>\n</div>'},2178:function(n,e){n.exports="angular.module('app').controller('ThumbnailDemoCtrl', ThumbnailDemoCtrl);\n\nfunction ThumbnailDemoCtrl() {\n    var vm = this;\n\n    vm.show = false;\n    vm.flipShow = true;\n\n    vm.thumbnails = [{\n        url: 'assets/img/thumbnails/excel.png',\n        icon: 'excel-icon',\n        title: 'Results.xls',\n        type: 'Excel',\n        size: '101.3 KB'\n    }, {\n        url: '',\n        icon: 'word-icon',\n        title: 'Overview.doc',\n        type: 'Word',\n        size: '31.7 KB'\n    }, {\n        url: 'assets/img/thumbnails/pdf.png',\n        icon: 'pdf-icon',\n        title: 'Archiving Edge.pdf',\n        type: 'PDF',\n        size: '1.5 MB'\n    }];\n\n    vm.flippableThumbnails = [{\n        url: 'assets/img/thumbnails/html.png',\n        icon: 'html-icon',\n        title: 'Example home page for document finder site.html',\n        type: 'HTML',\n        size: '3.1 KB'\n    }, {\n        url: '',\n        icon: 'email-icon',\n        title: 'Recent discussion.msg',\n        type: 'Email',\n        size: '1.7 KB'\n    }, {\n        url: 'assets/img/thumbnails/powerpoint.png',\n        icon: 'powerpoint-icon',\n        title: 'Using the HPE Slide Library for PowerPoint Presentations.ppt',\n        type: 'PowerPoint',\n        size: '2.4 MB'\n    }];\n}\n"},2179:function(n,e){n.exports='<div class="m-t-lg">\n    <h5>Primary Toggle Buttons</h5>\n    <div data-toggle="buttons" class="btn-group toggle-buttons">\n        <label class="btn button-toggle-primary">\n            <input id="bold" type="checkbox" autocomplete="off" role="checkbox" aria-checked="false">Bold</label>\n        <label class="btn button-toggle-primary active">\n            <input id="underline" type="checkbox" autocomplete="off" checked="" role="checkbox" aria-checked="true">Underline\n        </label>\n        <label class="btn button-toggle-primary">\n            <input id="italic" type="checkbox" autocomplete="off" role="checkbox" aria-checked="false">Italic\n        </label>\n    </div>\n</div>\n<div class="m-t-sm">\n    <h5>Accent Toggle Buttons</h5>\n    <div data-toggle="buttons" class="btn-group toggle-buttons">\n        <label class="btn button-toggle-accent">\n            <input id="bold" type="checkbox" autocomplete="off" role="checkbox" aria-checked="false">Bold</label>\n        <label class="btn button-toggle-accent active">\n            <input id="underline" type="checkbox" autocomplete="off" checked="" role="checkbox" aria-checked="true">Underline\n        </label>\n        <label class="btn button-toggle-accent">\n            <input id="italic" type="checkbox" autocomplete="off" role="checkbox" aria-checked="false">Italic\n        </label>\n    </div>\n</div>\n'},2180:function(n,e){n.exports='<div class="m-t">\n    <button data-toggle="button" class="btn button-toggle-primary m-b m-r-xl" role="button" aria-pressed="false" autocomplete="off">\n        Primary Single Toggle\n    </button>\n    <button data-toggle="button" class="btn button-toggle-accent m-b" role="button" aria-pressed="false" autocomplete="off">\n        Accent Single Toggle\n    </button>\n</div>\n'},2668:function(n,e){n.exports=".features-dropdown {\n  width: 250px;\n}\n.dropdown-submenu > .case-dropdown {\n  top: -52px;\n}\n.case-filter {\n  margin: 9px;\n}\n.case-items {\n  height: 195px;\n  width: 160px;\n  overflow: auto;\n}\n.case-items ul {\n  width: 100%;\n  list-style: none outside none;\n  padding: 0;\n}\n.case-items ul > li > a {\n  color: inherit;\n  line-height: 25px;\n  text-align: left;\n  font-weight: normal;\n  font-size: 1rem;\n  display: block;\n  padding: 7px 20px;\n  clear: both;\n  white-space: nowrap;\n}\n"},2669:function(n,e){n.exports=".thumbnails-example-container {\n  display: flex;\n  flex-wrap: wrap;\n}\n.thumbnail-example {\n  display: flex;\n  align-items: center;\n  height: 45px;\n  padding: 5px 10px;\n}\n.thumbnail-example .hpe-download {\n  margin-left: auto;\n  color: #989da0;\n}\n.thumbnail-example .hpe-download:hover {\n  color: #676a6c;\n  cursor: pointer;\n}\n.thumbnail-example p {\n  margin-bottom: -4px;\n}\n.thumbnail-example p > span {\n  font-size: 14px;\n  color: #333131;\n}\n.thumbnail-example p > span + span {\n  color: #828282;\n  margin-left: 4px;\n  font-size: 13px;\n}\n.thumbnail-example .word-icon {\n  background: url(assets/img/doc-icons/IconWordColorized.png) no-repeat;\n  width: 18px;\n  height: 18px;\n  flex: 0 0 auto;\n  background-size: cover;\n}\n.thumbnail-example .pdf-icon {\n  background: url(assets/img/doc-icons/IconPDFColorized.png) no-repeat;\n  width: 18px;\n  height: 18px;\n  flex: 0 0 auto;\n  background-size: cover;\n}\n.thumbnail-example .excel-icon {\n  background: url(assets/img/doc-icons/IconExcelColorized.png) no-repeat;\n  width: 18px;\n  height: 18px;\n  flex: 0 0 auto;\n  background-size: cover;\n}\n.thumbnail-example .html-icon {\n  background: url(assets/img/doc-icons/IconHTMLColorized.png) no-repeat;\n  width: 18px;\n  height: 18px;\n  flex: 0 0 auto;\n  background-size: cover;\n}\n.thumbnail-example .powerpoint-icon {\n  background: url(assets/img/doc-icons/IconPowerPointColorized.png) no-repeat;\n  width: 18px;\n  height: 18px;\n  flex: 0 0 auto;\n  background-size: cover;\n}\n.thumbnail-example .email-icon {\n  background: url(assets/img/doc-icons/IconEmailColorized.png) no-repeat;\n  width: 18px;\n  height: 18px;\n  flex: 0 0 auto;\n  background-size: cover;\n}\n.thumbnails-example-container .front,\n.thumbnails-example-container .back {\n  box-shadow: none;\n}\n.thumbnails-example-container .front .thumbnail-example {\n  padding: 10px;\n}\n.thumbnails-example-container .back {\n  background-color: #f2eff6;\n  border: 1px solid #cfd2d6;\n}\n.thumbnails-example-container .thumbnail-title {\n  font-weight: 600;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n.thumbnails-example-container .back .thumbnail-example {\n  height: 100%;\n  align-items: flex-start;\n  padding: 15px 10px;\n}\n.thumbnails-example-container .back .thumbnail-title {\n  white-space: normal;\n  line-height: 18px;\n}\n.thumbnails-example-container .back .hpe-download {\n  bottom: 20px;\n  position: absolute;\n}\n"}});
{"version":3,"file":"ux-aspects.umd.min.js","sources":["../../../../node_modules/.tmp/utils/facade/browser.ts","../../../../node_modules/.tmp/utils/theme-provider.ts","../../../../node_modules/.tmp/utils/trigger.class.ts","../../../../node_modules/.tmp/utils/utils.class.ts","../../../../node_modules/.tmp/typeahead/typeahead-container.component.ts","../../../../node_modules/.tmp/utils/triggers.ts","../../../../node_modules/.tmp/component-loader/content-ref.class.ts","../../../../node_modules/.tmp/component-loader/component-loader.class.ts","../../../../node_modules/.tmp/positioning/ng-positioning.ts","../../../../node_modules/.tmp/positioning/positioning.service.ts","../../../../node_modules/.tmp/component-loader/component-loader.factory.ts","../../../../node_modules/.tmp/typeahead/typeahead.directive.ts","../../../../node_modules/.tmp/typeahead/typeahead.module.ts","~/@ux-aspects/ux-aspects/components/facets/facet-events.ts","~/@ux-aspects/ux-aspects/components/facets/facet-container.component.ts","~/@ux-aspects/ux-aspects/components/facets/base/facet-base/facet-base.component.ts","~/@ux-aspects/ux-aspects/components/facets/base/facet-header/facet-header.component.ts","~/@ux-aspects/ux-aspects/components/facets/facet-check-list/facet-check-list.component.ts","~/@ux-aspects/ux-aspects/components/facets/facet-typeahead-list/facet-typeahead-list.component.ts","~/@ux-aspects/ux-aspects/components/tooltip/tooltip.component.ts","~/@ux-aspects/ux-aspects/components/tooltip/tooltip.service.ts","~/@ux-aspects/ux-aspects/components/tooltip/tooltip.directive.ts","~/@ux-aspects/ux-aspects/components/tooltip/tooltip.module.ts","~/@ux-aspects/ux-aspects/components/facets/facets.module.ts","~/@ux-aspects/ux-aspects/components/facets/models/facet.ts","../../../../node_modules/.tmp/dropdown/bs-dropdown.config.ts","../../../../node_modules/.tmp/dropdown/bs-dropdown.state.ts","../../../../node_modules/.tmp/dropdown/bs-dropdown-container.component.ts","../../../../node_modules/.tmp/dropdown/bs-dropdown.directive.ts","../../../../node_modules/.tmp/dropdown/bs-dropdown-menu.directive.ts","../../../../node_modules/.tmp/dropdown/bs-dropdown-toggle.directive.ts","../../../../node_modules/.tmp/dropdown/bs-dropdown.module.ts","~/@ux-aspects/ux-aspects/components/filters/filter-container.component.ts","~/@ux-aspects/ux-aspects/components/filters/filter-base/filter-base.component.ts","~/@ux-aspects/ux-aspects/components/filters/filter-dropdown/filter-dropdown.component.ts","~/@ux-aspects/ux-aspects/components/filters/filter-dynamic/filter-dynamic.component.ts","~/@ux-aspects/ux-aspects/components/filters/filter.module.ts","~/@ux-aspects/ux-aspects/components/flippable-card/flippable-card.component.ts","~/@ux-aspects/ux-aspects/components/flippable-card/flippable-card.module.ts","../../../../node_modules/.tmp/tooltip/tooltip.config.ts","../../../../node_modules/.tmp/tooltip/tooltip-container.component.ts","../../../../node_modules/.tmp/utils/warn-once.ts","../../../../node_modules/.tmp/tooltip/tooltip.directive.ts","../../../../node_modules/.tmp/utils/decorators.ts","~/@ux-aspects/ux-aspects/components/floating-action-buttons/floating-action-buttons.service.ts","~/@ux-aspects/ux-aspects/components/floating-action-buttons/floating-action-buttons.component.ts","~/@ux-aspects/ux-aspects/components/floating-action-buttons/floating-action-button.component.ts","~/@ux-aspects/ux-aspects/components/floating-action-buttons/floating-action-buttons.module.ts","~/@ux-aspects/ux-aspects/components/hierarchy-bar/hierarchy-bar.service.ts","~/@ux-aspects/ux-aspects/components/hierarchy-bar/hierarchy-bar.component.ts","~/@ux-aspects/ux-aspects/directives/click-outside/click-outside.directive.ts","~/@ux-aspects/ux-aspects/directives/click-outside/click-outside.module.ts","~/@ux-aspects/ux-aspects/components/popover/popover.component.ts","~/@ux-aspects/ux-aspects/components/popover/popover.directive.ts","~/@ux-aspects/ux-aspects/components/popover/popover.module.ts","~/@ux-aspects/ux-aspects/components/hierarchy-bar/hierarchy-bar.module.ts","~/@ux-aspects/ux-aspects/components/side-panel/side-panel.service.ts","~/@ux-aspects/ux-aspects/components/side-panel/side-panel.component.ts","~/@ux-aspects/ux-aspects/components/item-display-panel/item-display-panel.component.ts","~/@ux-aspects/ux-aspects/components/item-display-panel/item-display-panel.module.ts","~/@ux-aspects/ux-aspects/components/wizard/wizard-step.component.ts","~/@ux-aspects/ux-aspects/components/wizard/wizard.component.ts","~/@ux-aspects/ux-aspects/components/wizard/wizard.module.ts","~/@ux-aspects/ux-aspects/components/marquee-wizard/marquee-wizard.service.ts","~/@ux-aspects/ux-aspects/components/marquee-wizard/marquee-wizard-step.component.ts","~/@ux-aspects/ux-aspects/components/marquee-wizard/marquee-wizard.component.ts","~/@ux-aspects/ux-aspects/components/marquee-wizard/marquee-wizard.module.ts","~/@ux-aspects/ux-aspects/components/navigation/navigation.component.ts","~/@ux-aspects/ux-aspects/components/navigation/navigation-item/navigation-item.component.ts","~/@ux-aspects/ux-aspects/components/navigation/navigation.module.ts","~/@ux-aspects/ux-aspects/services/color/color.service.ts","~/@ux-aspects/ux-aspects/services/color/color.module.ts","~/@ux-aspects/ux-aspects/components/notification/notification.service.ts","~/@ux-aspects/ux-aspects/components/notification/notification-list.component.ts","~/@ux-aspects/ux-aspects/components/notification/notification.module.ts","~/@ux-aspects/ux-aspects/components/number-picker/number-picker.component.ts","~/@ux-aspects/ux-aspects/components/number-picker/number-picker.module.ts","~/@ux-aspects/ux-aspects/components/page-header/custom-menu/custom-menu.directive.ts","~/@ux-aspects/ux-aspects/components/page-header/page-header.service.ts","~/@ux-aspects/ux-aspects/components/page-header/page-header.component.ts","~/@ux-aspects/ux-aspects/components/page-header/icon-menu/icon-menu.component.ts","~/@ux-aspects/ux-aspects/components/page-header/navigation/navigation-dropdown-item/navigation-dropdown-item.component.ts","~/@ux-aspects/ux-aspects/components/page-header/navigation/navigation-item/navigation-item.component.ts","~/@ux-aspects/ux-aspects/components/page-header/navigation/navigation.component.ts","~/@ux-aspects/ux-aspects/directives/menu-navigation/menu-navigation.service.ts","~/@ux-aspects/ux-aspects/directives/menu-navigation/menu-navigation-item.directive.ts","~/@ux-aspects/ux-aspects/directives/menu-navigation/menu-navigation.directive.ts","~/@ux-aspects/ux-aspects/directives/menu-navigation/menu-navigation-toggle.directive.ts","~/@ux-aspects/ux-aspects/directives/menu-navigation/menu-navigation.module.ts","~/@ux-aspects/ux-aspects/components/page-header/page-header.module.ts","~/@ux-aspects/ux-aspects/components/progress-bar/progress-bar.component.ts","~/@ux-aspects/ux-aspects/components/progress-bar/progress-bar.module.ts","~/@ux-aspects/ux-aspects/components/radiobutton/radiobutton.component.ts","~/@ux-aspects/ux-aspects/components/radiobutton/radiobutton.module.ts","~/@ux-aspects/ux-aspects/components/search-builder/search-builder.service.ts","~/@ux-aspects/ux-aspects/components/search-builder/search-builder-group/search-builder-group.service.ts","~/@ux-aspects/ux-aspects/components/search-builder/search-builder-group/search-builder-group.component.ts","~/@ux-aspects/ux-aspects/components/search-builder/search-builder-outlet/search-builder-outlet.directive.ts","~/@ux-aspects/ux-aspects/components/search-builder/search-components/base-search.component.ts","~/@ux-aspects/ux-aspects/components/search-builder/search-components/text/text.component.ts","~/@ux-aspects/ux-aspects/components/search-builder/search-components/date/date.component.ts","~/@ux-aspects/ux-aspects/components/search-builder/search-components/date-range/date-range.component.ts","~/@ux-aspects/ux-aspects/components/search-builder/search-components/select/select.component.ts","~/@ux-aspects/ux-aspects/components/search-builder/search-builder.component.ts","~/@ux-aspects/ux-aspects/components/typeahead/typeahead-event.ts","~/@ux-aspects/ux-aspects/components/typeahead/typeahead-key.service.ts","~/@ux-aspects/ux-aspects/components/typeahead/typeahead.component.ts","~/@ux-aspects/ux-aspects/directives/infinite-scroll/infinite-scroll-load-button.directive.ts","~/@ux-aspects/ux-aspects/directives/infinite-scroll/infinite-scroll-loading.directive.ts","~/@ux-aspects/ux-aspects/directives/infinite-scroll/infinite-scroll.directive.ts","~/@ux-aspects/ux-aspects/directives/infinite-scroll/infinite-scroll.module.ts","~/@ux-aspects/ux-aspects/directives/scroll-into-view-if/scroll-into-view.service.ts","~/@ux-aspects/ux-aspects/directives/scroll-into-view-if/scroll-into-view-if.directive.ts","~/@ux-aspects/ux-aspects/directives/scroll-into-view-if/scroll-into-view-if.module.ts","~/@ux-aspects/ux-aspects/components/typeahead/typeahead.module.ts","~/@ux-aspects/ux-aspects/components/select/select.component.ts","~/@ux-aspects/ux-aspects/components/tag-input/tag-input-event.ts","~/@ux-aspects/ux-aspects/components/tag-input/tag-input.component.ts","~/@ux-aspects/ux-aspects/components/tag-input/tag-input.module.ts","~/@ux-aspects/ux-aspects/components/select/select.module.ts","~/@ux-aspects/ux-aspects/components/search-builder/search-builder.module.ts","~/@ux-aspects/ux-aspects/components/side-panel/side-panel-close.directive.ts","~/@ux-aspects/ux-aspects/components/side-panel/side-panel.module.ts","~/@ux-aspects/ux-aspects/components/slider/slider.component.ts","~/@ux-aspects/ux-aspects/components/slider/slider.module.ts","~/@ux-aspects/ux-aspects/components/spark/spark.component.ts","~/@ux-aspects/ux-aspects/components/spark/spark.module.ts","~/@ux-aspects/ux-aspects/components/tabset/tabset.service.ts","~/@ux-aspects/ux-aspects/components/tabset/tabset.component.ts","~/@ux-aspects/ux-aspects/components/tabset/tab/tab.component.ts","~/@ux-aspects/ux-aspects/components/tabset/tab/tab-heading.directive.ts","~/@ux-aspects/ux-aspects/components/tabset/tab/tab-focus.directive.ts","~/@ux-aspects/ux-aspects/components/tabset/tabset.module.ts","~/@ux-aspects/ux-aspects/components/timeline/timeline.component.ts","~/@ux-aspects/ux-aspects/components/timeline/timeline-event/timeline-event.component.ts","~/@ux-aspects/ux-aspects/components/timeline/timeline.module.ts","~/@ux-aspects/ux-aspects/components/toggleswitch/toggleswitch.component.ts","~/@ux-aspects/ux-aspects/components/toggleswitch/toggleswitch.module.ts","~/@ux-aspects/ux-aspects/components/toolbar-search/toolbar-search-field.directive.ts","~/@ux-aspects/ux-aspects/components/toolbar-search/toolbar-search-button.directive.ts","~/@ux-aspects/ux-aspects/components/toolbar-search/toolbar-search.component.ts","~/@ux-aspects/ux-aspects/components/toolbar-search/toolbar-search.module.ts","~/@ux-aspects/ux-aspects/services/frame-extraction/frame-extraction.service.ts","~/@ux-aspects/ux-aspects/services/frame-extraction/frame-extraction.module.ts","~/@ux-aspects/ux-aspects/components/media-player/media-player.service.ts","~/@ux-aspects/ux-aspects/services/audio/audio.service.ts","~/@ux-aspects/ux-aspects/services/audio/audio.module.ts","~/@ux-aspects/ux-aspects/components/media-player/media-player.component.ts","~/@ux-aspects/ux-aspects/components/media-player/extensions/base-extension.directive.ts","~/@ux-aspects/ux-aspects/components/media-player/extensions/timeline/timeline.component.ts","~/@ux-aspects/ux-aspects/components/media-player/extensions/controls/controls.component.ts","~/@ux-aspects/ux-aspects/pipes/duration/duration.pipe.ts","~/@ux-aspects/ux-aspects/pipes/duration/duration.module.ts","~/@ux-aspects/ux-aspects/pipes/file-size/file-size.pipe.ts","~/@ux-aspects/ux-aspects/pipes/file-size/file-size.module.ts","~/@ux-aspects/ux-aspects/components/media-player/media-player.module.ts","~/@ux-aspects/ux-aspects/components/virtual-scroll/directives/virtual-scroll-loading.directive.ts","~/@ux-aspects/ux-aspects/components/virtual-scroll/directives/virtual-scroll-load-button.directive.ts","~/@ux-aspects/ux-aspects/components/virtual-scroll/directives/virtual-scroll-cell.directive.ts","~/@ux-aspects/ux-aspects/components/virtual-scroll/virtual-scroll.component.ts","~/@ux-aspects/ux-aspects/components/virtual-scroll/virtual-scroll.module.ts","~/@ux-aspects/ux-aspects/directives/auto-grow/auto-grow.directive.ts","~/@ux-aspects/ux-aspects/directives/auto-grow/auto-grow.module.ts","~/@ux-aspects/ux-aspects/directives/fixed-header-table/fixed-header-table.directive.ts","~/@ux-aspects/ux-aspects/directives/fixed-header-table/fixed-header-table.module.ts","~/@ux-aspects/ux-aspects/directives/float-label/float-label.directive.ts","~/@ux-aspects/ux-aspects/directives/float-label/float-label.module.ts","~/@ux-aspects/ux-aspects/directives/help-center/help-center.service.ts","~/@ux-aspects/ux-aspects/directives/help-center/help-center-item.directive.ts","~/@ux-aspects/ux-aspects/directives/help-center/help-center.module.ts","~/@ux-aspects/ux-aspects/directives/hover-action/hover-action.service.ts","~/@ux-aspects/ux-aspects/directives/hover-action/hover-action-container.directive.ts","~/@ux-aspects/ux-aspects/directives/hover-action/hover-action.directive.ts","~/@ux-aspects/ux-aspects/directives/hover-action/hover-action.module.ts","~/@ux-aspects/ux-aspects/directives/layout-switcher/layout-switcher-item.directive.ts","~/@ux-aspects/ux-aspects/directives/layout-switcher/layout-switcher.directive.ts","~/@ux-aspects/ux-aspects/directives/layout-switcher/layout-switcher.module.ts","~/@ux-aspects/ux-aspects/directives/selection/strategies/selection.strategy.ts","~/@ux-aspects/ux-aspects/directives/selection/strategies/row-selection.strategy.ts","~/@ux-aspects/ux-aspects/directives/selection/strategies/simple-selection.strategy.ts","~/@ux-aspects/ux-aspects/directives/selection/selection.service.ts","~/@ux-aspects/ux-aspects/directives/selection/selection-item.directive.ts","~/@ux-aspects/ux-aspects/directives/selection/selection.directive.ts","~/@ux-aspects/ux-aspects/directives/selection/selection.module.ts","~/@ux-aspects/ux-aspects/directives/reorderable/reorderable-handle.directive.ts","~/@ux-aspects/ux-aspects/directives/reorderable/reorderable-model.directive.ts","~/@ux-aspects/ux-aspects/directives/reorderable/dragula.ts","~/@ux-aspects/ux-aspects/directives/reorderable/reorderable.service.ts","~/@ux-aspects/ux-aspects/directives/reorderable/reorderable.directive.ts","~/@ux-aspects/ux-aspects/directives/reorderable/reorderable.module.ts","~/@ux-aspects/ux-aspects/pipes/string-filter/string-filter.pipe.ts","~/@ux-aspects/ux-aspects/pipes/string-filter/string-filter.module.ts","~/@ux-aspects/ux-aspects/services/persistent-data/adapters/cookie-adapter.ts","~/@ux-aspects/ux-aspects/services/persistent-data/adapters/local-storage-adapter.ts","~/@ux-aspects/ux-aspects/services/persistent-data/adapters/session-storage-adapter.ts","~/@ux-aspects/ux-aspects/services/persistent-data/persistent-data.service.ts","~/@ux-aspects/ux-aspects/services/persistent-data/persistent-data.module.ts","~/@ux-aspects/ux-aspects/services/persistent-data/adapters/storage-adapter.ts","~/@ux-aspects/ux-aspects/hybrid/components/contacts/contacts.component.ts","~/@ux-aspects/ux-aspects/hybrid/components/expand-input/expand-input.component.ts","~/@ux-aspects/ux-aspects/hybrid/components/floating-action-button/floating-action-button.component.ts","~/@ux-aspects/ux-aspects/hybrid/components/flot/flot.component.ts","~/@ux-aspects/ux-aspects/hybrid/components/grid/grid.component.ts","~/@ux-aspects/ux-aspects/hybrid/components/hierarchy-bar/hierarchy-bar.component.ts","~/@ux-aspects/ux-aspects/hybrid/components/marquee-wizard/marquee-wizard.component.ts","~/@ux-aspects/ux-aspects/hybrid/components/nested-donut/nested-donut.component.ts","~/@ux-aspects/ux-aspects/hybrid/components/organization-chart/organization-chart.component.ts","~/@ux-aspects/ux-aspects/hybrid/components/partition-map/partition-map.component.ts","~/@ux-aspects/ux-aspects/hybrid/components/peity-chart/peity-bar-chart.component.ts","~/@ux-aspects/ux-aspects/hybrid/components/peity-chart/peity-line-chart.component.ts","~/@ux-aspects/ux-aspects/hybrid/components/peity-chart/peity-pie-chart.component.ts","~/@ux-aspects/ux-aspects/hybrid/components/peity-chart/peity-updating-line-chart.component.ts","~/@ux-aspects/ux-aspects/hybrid/components/sankey-chart/sankey.component.ts","~/@ux-aspects/ux-aspects/hybrid/components/search-toolbar/search-toolbar.component.ts","~/@ux-aspects/ux-aspects/hybrid/components/select-table/select-table.component.ts","~/@ux-aspects/ux-aspects/hybrid/components/slider-chart/slider-chart.directive.ts","~/@ux-aspects/ux-aspects/hybrid/components/social-chart/social-chart.component.ts","~/@ux-aspects/ux-aspects/hybrid/components/sort-direction-toggle/sort-direction-toggle.component.ts","~/@ux-aspects/ux-aspects/hybrid/components/tree-grid/tree-grid.component.ts","~/@ux-aspects/ux-aspects/hybrid/components/thumbnail/thumbnail.component.ts","~/@ux-aspects/ux-aspects/hybrid/services/navigation-menu/navigation-menu.service.ts","~/@ux-aspects/ux-aspects/hybrid/services/pdf/pdf.service.ts","~/@ux-aspects/ux-aspects/hybrid/services/time-ago/time-ago.service.ts","~/@ux-aspects/ux-aspects/hybrid/hybrid.module.ts","~/@ux-aspects/ux-aspects/components/breadcrumbs/breadcrumbs.component.ts","~/@ux-aspects/ux-aspects/components/breadcrumbs/breadcrumbs.module.ts","~/@ux-aspects/ux-aspects/directives/resize/resize.service.ts","../../../../node_modules/src/util/isFunction.ts","../../../../node_modules/src/util/isArray.ts","../../../../node_modules/src/util/isObject.ts","../../../../node_modules/src/util/tryCatch.ts","../../../../node_modules/src/util/errorObject.ts","../../../../node_modules/src/util/UnsubscriptionError.ts","../../../../node_modules/src/Subscription.ts","../../../../node_modules/src/Observer.ts","../../../../node_modules/src/util/root.ts","../../../../node_modules/src/symbol/rxSubscriber.ts","../../../../node_modules/src/Subscriber.ts","../../../../node_modules/src/scheduler/Action.ts","../../../../node_modules/src/scheduler/AsyncAction.ts","../../../../node_modules/src/Scheduler.ts","../../../../node_modules/src/scheduler/AsyncScheduler.ts","../../../../node_modules/src/scheduler/async.ts","../../../../node_modules/src/operators/debounceTime.ts","~/@ux-aspects/ux-aspects/directives/resize/resize.directive.ts","~/@ux-aspects/ux-aspects/directives/resize/resize.module.ts","~/@ux-aspects/ux-aspects/components/card-tabs/card-tab/card-tab-content.directive.ts","../../../../node_modules/src/OuterSubscriber.ts","../../../../node_modules/src/util/isArrayLike.ts","../../../../node_modules/src/util/isPromise.ts","../../../../node_modules/src/util/toSubscriber.ts","../../../../node_modules/src/symbol/observable.ts","../../../../node_modules/src/util/noop.ts","../../../../node_modules/src/util/pipe.ts","../../../../node_modules/src/Observable.ts","../../../../node_modules/src/symbol/iterator.ts","../../../../node_modules/src/InnerSubscriber.ts","../../../../node_modules/src/util/subscribeToResult.ts","../../../../node_modules/src/operators/audit.ts","../../../../node_modules/src/util/isNumeric.ts","../../../../node_modules/src/util/isScheduler.ts","../../../../node_modules/src/util/isDate.ts","../../../../node_modules/src/observable/TimerObservable.ts","../../../../node_modules/src/operators/buffer.ts","../../../../node_modules/src/operators/bufferCount.ts","../../../../node_modules/src/operators/bufferTime.ts","../../../../node_modules/src/operators/bufferToggle.ts","../../../../node_modules/src/operators/bufferWhen.ts","../../../../node_modules/src/operators/catchError.ts","../../../../node_modules/src/observable/ScalarObservable.ts","../../../../node_modules/src/observable/EmptyObservable.ts","../../../../node_modules/src/observable/ArrayObservable.ts","../../../../node_modules/src/operators/combineLatest.ts","../../../../node_modules/src/observable/PromiseObservable.ts","../../../../node_modules/src/observable/IteratorObservable.ts","../../../../node_modules/src/observable/ArrayLikeObservable.ts","../../../../node_modules/src/Notification.ts","../../../../node_modules/src/operators/observeOn.ts","../../../../node_modules/src/observable/FromObservable.ts","../../../../node_modules/src/operators/mergeMap.ts","../../../../node_modules/src/operators/count.ts","../../../../node_modules/src/operators/debounce.ts","../../../../node_modules/src/operators/defaultIfEmpty.ts","../../../../node_modules/src/operators/delay.ts","../../../../node_modules/src/operators/delayWhen.ts","../../../../node_modules/src/operators/dematerialize.ts","../../../../node_modules/src/util/Set.ts","../../../../node_modules/src/operators/distinct.ts","../../../../node_modules/src/operators/distinctUntilChanged.ts","../../../../node_modules/src/util/ArgumentOutOfRangeError.ts","../../../../node_modules/src/operators/elementAt.ts","../../../../node_modules/src/operators/every.ts","../../../../node_modules/src/operators/exhaust.ts","../../../../node_modules/src/operators/exhaustMap.ts","../../../../node_modules/src/operators/expand.ts","../../../../node_modules/src/operators/filter.ts","../../../../node_modules/src/operators/finalize.ts","../../../../node_modules/src/operators/find.ts","../../../../node_modules/src/util/EmptyError.ts","../../../../node_modules/src/operators/first.ts","../../../../node_modules/src/util/ObjectUnsubscribedError.ts","../../../../node_modules/src/SubjectSubscription.ts","../../../../node_modules/src/Subject.ts","../../../../node_modules/src/util/MapPolyfill.ts","../../../../node_modules/src/util/Map.ts","../../../../node_modules/src/util/FastMap.ts","../../../../node_modules/src/operators/groupBy.ts","../../../../node_modules/src/operators/ignoreElements.ts","../../../../node_modules/src/operators/isEmpty.ts","../../../../node_modules/src/operators/last.ts","../../../../node_modules/src/operators/map.ts","../../../../node_modules/src/operators/mapTo.ts","../../../../node_modules/src/operators/materialize.ts","../../../../node_modules/src/operators/scan.ts","../../../../node_modules/src/operators/takeLast.ts","../../../../node_modules/src/operators/mergeMapTo.ts","../../../../node_modules/src/operators/mergeScan.ts","../../../../node_modules/src/operators/refCount.ts","../../../../node_modules/src/observable/ConnectableObservable.ts","../../../../node_modules/src/operators/onErrorResumeNext.ts","../../../../node_modules/src/operators/pairwise.ts","../../../../node_modules/src/BehaviorSubject.ts","../../../../node_modules/src/AsyncSubject.ts","../../../../node_modules/src/scheduler/QueueAction.ts","../../../../node_modules/src/scheduler/queue.ts","../../../../node_modules/src/scheduler/QueueScheduler.ts","../../../../node_modules/src/ReplaySubject.ts","../../../../node_modules/src/observable/race.ts","../../../../node_modules/src/operators/repeat.ts","../../../../node_modules/src/operators/repeatWhen.ts","../../../../node_modules/src/operators/retry.ts","../../../../node_modules/src/operators/retryWhen.ts","../../../../node_modules/src/operators/sample.ts","../../../../node_modules/src/operators/sampleTime.ts","../../../../node_modules/src/operators/sequenceEqual.ts","../../../../node_modules/src/operators/single.ts","../../../../node_modules/src/operators/skip.ts","../../../../node_modules/src/operators/skipLast.ts","../../../../node_modules/src/operators/skipUntil.ts","../../../../node_modules/src/operators/skipWhile.ts","../../../../node_modules/src/operators/switchMap.ts","../../../../node_modules/src/operators/switchMapTo.ts","../../../../node_modules/src/operators/take.ts","../../../../node_modules/src/operators/takeUntil.ts","../../../../node_modules/src/operators/takeWhile.ts","../../../../node_modules/src/operators/tap.ts","../../../../node_modules/src/operators/throttle.ts","../../../../node_modules/src/operators/throttleTime.ts","../../../../node_modules/src/operators/timeInterval.ts","../../../../node_modules/src/util/TimeoutError.ts","../../../../node_modules/src/operators/timeout.ts","../../../../node_modules/src/operators/timeoutWith.ts","../../../../node_modules/src/operators/window.ts","../../../../node_modules/src/operators/windowCount.ts","../../../../node_modules/src/operators/windowTime.ts","../../../../node_modules/src/operators/windowToggle.ts","../../../../node_modules/src/operators/windowWhen.ts","../../../../node_modules/src/operators/withLatestFrom.ts","../../../../node_modules/src/operators/zip.ts","../../../../node_modules/src/operators.ts","~/@ux-aspects/ux-aspects/components/card-tabs/card-tabs.service.ts","~/@ux-aspects/ux-aspects/components/card-tabs/card-tab/card-tab.component.ts","~/@ux-aspects/ux-aspects/components/card-tabs/card-tabset/card-tabset.component.ts","~/@ux-aspects/ux-aspects/components/card-tabs/card-tabs.module.ts","~/@ux-aspects/ux-aspects/components/checkbox/checkbox.component.ts","~/@ux-aspects/ux-aspects/components/checkbox/checkbox.module.ts","~/@ux-aspects/ux-aspects/components/column-sorting/column-sorting.component.ts","~/@ux-aspects/ux-aspects/components/column-sorting/column-sorting.directive.ts","~/@ux-aspects/ux-aspects/components/column-sorting/column-sorting.module.ts","~/@ux-aspects/ux-aspects/components/dashboard/dashboard.service.ts","~/@ux-aspects/ux-aspects/components/dashboard/dashboard.component.ts","~/@ux-aspects/ux-aspects/components/dashboard/widget/dashboard-widget.component.ts","~/@ux-aspects/ux-aspects/directives/drag/drag.directive.ts","~/@ux-aspects/ux-aspects/components/dashboard/drag-handle/drag-handle.directive.ts","~/@ux-aspects/ux-aspects/directives/drag/drag.module.ts","~/@ux-aspects/ux-aspects/components/dashboard/dashboard.module.ts","~/@ux-aspects/ux-aspects/components/spin-button/spin-button.component.ts","~/@ux-aspects/ux-aspects/components/spin-button/spin-button.module.ts","~/@ux-aspects/ux-aspects/components/time-picker/time-format.pipe.ts","~/@ux-aspects/ux-aspects/components/time-picker/time-picker.component.ts","~/@ux-aspects/ux-aspects/components/time-picker/time-picker.module.ts","~/@ux-aspects/ux-aspects/components/date-time-picker/date-time-picker.utils.ts","~/@ux-aspects/ux-aspects/components/date-time-picker/date-time-picker.config.ts","~/@ux-aspects/ux-aspects/components/date-time-picker/date-time-picker.service.ts","~/@ux-aspects/ux-aspects/components/date-time-picker/date-time-picker.component.ts","~/@ux-aspects/ux-aspects/components/date-time-picker/day-view/day-view.service.ts","~/@ux-aspects/ux-aspects/components/date-time-picker/day-view/day-view.component.ts","~/@ux-aspects/ux-aspects/components/date-time-picker/header/header.component.ts","~/@ux-aspects/ux-aspects/components/date-time-picker/month-view/month-view.service.ts","~/@ux-aspects/ux-aspects/components/date-time-picker/month-view/month-view.component.ts","~/@ux-aspects/ux-aspects/components/date-time-picker/time-view/time-view.component.ts","~/@ux-aspects/ux-aspects/components/date-time-picker/year-view/year-view.service.ts","~/@ux-aspects/ux-aspects/components/date-time-picker/year-view/year-view.component.ts","~/@ux-aspects/ux-aspects/directives/focus-if/focus-if.directive.ts","~/@ux-aspects/ux-aspects/directives/focus-if/focus-if.module.ts","~/@ux-aspects/ux-aspects/components/date-time-picker/date-time-picker.module.ts","~/@ux-aspects/ux-aspects/components/ebox/ebox.component.ts","~/@ux-aspects/ux-aspects/components/ebox/ebox.module.ts","../../../../node_modules/.tmp/typeahead/latin-map.ts","../../../../node_modules/.tmp/typeahead/typeahead-match.class.ts","../../../../node_modules/.tmp/typeahead/typeahead-utils.ts"],"sourcesContent":["/*tslint:disable */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * JS version of browser APIs. This library can only run in the browser.\n */\nvar win = (typeof window !== 'undefined' && window) || <any>{};\n\nexport { win as window };\nexport var document = win.document;\nexport var location = win.location;\nexport var gc = win['gc'] ? () => win['gc']() : (): any => null;\nexport var performance = win['performance'] ? win['performance'] : null;\nexport const Event = win['Event'];\nexport const MouseEvent = win['MouseEvent'];\nexport const KeyboardEvent = win['KeyboardEvent'];\nexport const EventTarget = win['EventTarget'];\nexport const History = win['History'];\nexport const Location = win['Location'];\nexport const EventListener = win['EventListener'];\n","import { window } from './facade/browser';\n\nlet guessedVersion: 'bs3' | 'bs4';\n\nfunction _guessBsVersion(): 'bs3' | 'bs4' {\n  if (typeof document === 'undefined') {\n    return null;\n  }\n  const spanEl = document.createElement('span');\n  spanEl.innerText = 'test bs version';\n  document.body.appendChild(spanEl);\n  spanEl.classList.add('d-none');\n  const rect = spanEl.getBoundingClientRect();\n  document.body.removeChild(spanEl);\n  if (!rect) {\n    return 'bs3';\n  }\n\n  return rect.top === 0 ? 'bs4' : 'bs3';\n}\n\nexport function setTheme(theme: 'bs3' | 'bs4'): void {\n  guessedVersion = theme;\n}\n\n// todo: in ngx-bootstrap, bs4 will became a default one\nexport function isBs3(): boolean {\n  if (typeof window === 'undefined') {\n    return true;\n  }\n\n  if (typeof window.__theme === 'undefined') {\n    if (guessedVersion) {\n      return guessedVersion === 'bs3';\n    }\n    guessedVersion = _guessBsVersion();\n\n    return guessedVersion === 'bs3';\n  }\n\n  return window.__theme !== 'bs4';\n}\n","/**\n * @copyright Valor Software\n * @copyright Angular ng-bootstrap team\n */\n\nexport class Trigger {\n  open: string;\n  close?: string;\n\n  constructor(open: string, close?: string) {\n    this.open = open;\n    this.close = close || open;\n  }\n\n  isManual(): boolean {\n    return this.open === 'manual' || this.close === 'manual';\n  }\n}\n","import { window } from './facade/browser';\n\nexport class Utils {\n  static reflow(element: any): void {\n    ((bs: any): void => bs)(element.offsetHeight);\n  }\n\n  // source: https://github.com/jquery/jquery/blob/master/src/css/var/getStyles.js\n  static getStyles(elem: any): any {\n    // Support: IE <=11 only, Firefox <=30 (#15098, #14150)\n    // IE throws on elements created in popups\n    // FF meanwhile throws on frame elements through \"defaultView.getComputedStyle\"\n    let view = elem.ownerDocument.defaultView;\n\n    if (!view || !view.opener) {\n      view = window;\n    }\n\n    return view.getComputedStyle(elem);\n  }\n}\n","import {\n  Component,\n  ElementRef,\n  HostListener,\n  QueryList,\n  TemplateRef,\n  ViewChild,\n  ViewChildren,\n  Renderer2\n} from '@angular/core';\n\nimport { isBs3, Utils } from '../utils';\nimport { latinize } from './typeahead-utils';\nimport { TypeaheadMatch } from './typeahead-match.class';\nimport { TypeaheadDirective } from './typeahead.directive';\n\n\nexport class TypeaheadContainerComponent {\n  parent: TypeaheadDirective;\n  query: any;\n  element: ElementRef;\n  isFocused = false;\n  top: string;\n  left: string;\n  display: string;\n  placement: string;\n  dropup: boolean;\n  guiHeight: string;\n  needScrollbar: boolean;\n\n  get isBs4(): boolean {\n    return !isBs3();\n  }\n\n  protected _active: TypeaheadMatch;\n  protected _matches: TypeaheadMatch[] = [];\n\n  \n  private ulElement: ElementRef;\n\n  \n  private liElements: QueryList<ElementRef>;\n\n  constructor(element: ElementRef, private renderer: Renderer2) {\n    this.element = element;\n  }\n\n  get active(): TypeaheadMatch {\n    return this._active;\n  }\n\n  get matches(): TypeaheadMatch[] {\n    return this._matches;\n  }\n\n  set matches(value: TypeaheadMatch[]) {\n    this._matches = value;\n    this.needScrollbar = this.typeaheadScrollable && this.typeaheadOptionsInScrollableView < this.matches.length;\n    if (this.typeaheadScrollable) {\n      setTimeout(() => {\n        this.setScrollableMode();\n      });\n    }\n\n    if (this._matches.length > 0) {\n      this._active = this._matches[0];\n      if (this._active.isHeader()) {\n        this.nextActiveMatch();\n      }\n    }\n  }\n\n  get optionsListTemplate(): TemplateRef<any> {\n    return this.parent ? this.parent.optionsListTemplate : undefined;\n  }\n\n  get typeaheadScrollable(): boolean {\n    return this.parent ? this.parent.typeaheadScrollable : false;\n  }\n\n\n  get typeaheadOptionsInScrollableView(): number {\n    return this.parent ? this.parent.typeaheadOptionsInScrollableView : 5;\n  }\n\n  get itemTemplate(): TemplateRef<any> {\n    return this.parent ? this.parent.typeaheadItemTemplate : undefined;\n  }\n\n  selectActiveMatch(): void {\n    this.selectMatch(this._active);\n  }\n\n  prevActiveMatch(): void {\n    const index = this.matches.indexOf(this._active);\n    this._active = this.matches[\n      index - 1 < 0 ? this.matches.length - 1 : index - 1\n      ];\n    if (this._active.isHeader()) {\n      this.prevActiveMatch();\n    }\n    if (this.typeaheadScrollable) {\n      this.scrollPrevious(index);\n    }\n  }\n\n  nextActiveMatch(): void {\n    const index = this.matches.indexOf(this._active);\n    this._active = this.matches[\n      index + 1 > this.matches.length - 1 ? 0 : index + 1\n      ];\n    if (this._active.isHeader()) {\n      this.nextActiveMatch();\n    }\n    if (this.typeaheadScrollable) {\n      this.scrollNext(index);\n    }\n  }\n\n  selectActive(value: TypeaheadMatch): void {\n    this.isFocused = true;\n    this._active = value;\n  }\n\n  hightlight(match: TypeaheadMatch, query: any): string {\n    let itemStr: string = match.value;\n    let itemStrHelper: string = (this.parent && this.parent.typeaheadLatinize\n      ? latinize(itemStr)\n      : itemStr).toLowerCase();\n    let startIdx: number;\n    let tokenLen: number;\n    // Replaces the capture string with the same string inside of a \"strong\" tag\n    if (typeof query === 'object') {\n      const queryLen: number = query.length;\n      for (let i = 0; i < queryLen; i += 1) {\n        // query[i] is already latinized and lower case\n        startIdx = itemStrHelper.indexOf(query[i]);\n        tokenLen = query[i].length;\n        if (startIdx >= 0 && tokenLen > 0) {\n          itemStr =\n            `${itemStr.substring(0, startIdx)}<strong>${itemStr.substring(startIdx, startIdx + tokenLen)}</strong>` +\n            `${itemStr.substring(startIdx + tokenLen)}`;\n          itemStrHelper =\n            `${itemStrHelper.substring(0, startIdx)}        ${' '.repeat(tokenLen)}         ` +\n            `${itemStrHelper.substring(startIdx + tokenLen)}`;\n        }\n      }\n    } else if (query) {\n      // query is already latinized and lower case\n      startIdx = itemStrHelper.indexOf(query);\n      tokenLen = query.length;\n      if (startIdx >= 0 && tokenLen > 0) {\n        itemStr =\n          `${itemStr.substring(0, startIdx)}<strong>${itemStr.substring(startIdx, startIdx + tokenLen)}</strong>` +\n          `${itemStr.substring(startIdx + tokenLen)}`;\n      }\n    }\n\n    return itemStr;\n  }\n\n  \n  \n  focusLost(): void {\n    this.isFocused = false;\n  }\n\n  isActive(value: TypeaheadMatch): boolean {\n    return this._active === value;\n  }\n\n  selectMatch(value: TypeaheadMatch, e: Event = void 0): boolean {\n    if (e) {\n      e.stopPropagation();\n      e.preventDefault();\n    }\n    this.parent.changeModel(value);\n    setTimeout(() => this.parent.typeaheadOnSelect.emit(value), 0);\n\n    return false;\n  }\n\n  setScrollableMode(): void {\n    if (!this.ulElement) {\n      this.ulElement = this.element;\n    }\n    if (this.liElements.first) {\n      const ulStyles = Utils.getStyles(this.ulElement.nativeElement);\n      const liStyles = Utils.getStyles(this.liElements.first.nativeElement);\n      const ulPaddingBottom = parseFloat((ulStyles['padding-bottom'] ? ulStyles['padding-bottom'] : '').replace('px', ''));\n      const ulPaddingTop = parseFloat((ulStyles['padding-top'] ? ulStyles['padding-top'] : '0').replace('px', ''));\n      const optionHeight = parseFloat((liStyles['height'] ? liStyles['height'] : '0').replace('px', ''));\n      const height = this.typeaheadOptionsInScrollableView * optionHeight;\n      this.guiHeight = `${height + ulPaddingTop + ulPaddingBottom}px`;\n    }\n    this.renderer.setStyle(this.element.nativeElement, 'visibility', 'visible');\n  }\n\n  scrollPrevious(index: number): void {\n    if (index === 0) {\n      this.scrollToBottom();\n\n      return;\n    }\n    if (this.liElements) {\n      const liElement = this.liElements.toArray()[index - 1];\n      if (liElement && !this.isScrolledIntoView(liElement.nativeElement)) {\n        this.ulElement.nativeElement.scrollTop = liElement.nativeElement.offsetTop;\n      }\n    }\n  }\n\n  scrollNext(index: number): void {\n    if (index + 1 > this.matches.length - 1) {\n      this.scrollToTop();\n\n      return;\n    }\n    if (this.liElements) {\n      const liElement = this.liElements.toArray()[index + 1];\n      if (liElement && !this.isScrolledIntoView(liElement.nativeElement)) {\n        this.ulElement.nativeElement.scrollTop =\n          liElement.nativeElement.offsetTop -\n          this.ulElement.nativeElement.offsetHeight +\n          liElement.nativeElement.offsetHeight;\n      }\n    }\n  }\n\n\n  private isScrolledIntoView = function (elem: HTMLElement) {\n    const containerViewTop = this.ulElement.nativeElement.scrollTop;\n    const containerViewBottom = containerViewTop + this.ulElement.nativeElement.offsetHeight;\n    const elemTop = elem.offsetTop;\n    const elemBottom = elemTop + elem.offsetHeight;\n\n    return ((elemBottom <= containerViewBottom) && (elemTop >= containerViewTop));\n  };\n\n  private scrollToBottom(): void {\n    this.ulElement.nativeElement.scrollTop = this.ulElement.nativeElement.scrollHeight;\n  }\n\n  private scrollToTop(): void {\n    this.ulElement.nativeElement.scrollTop = 0;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'typeahead-container',\n  // tslint:disable-next-line\n  template: \"<!-- inject options list template --> <ng-template [ngTemplateOutlet]=\\\"optionsListTemplate || (isBs4 ? bs4Template : bs3Template)\\\" [ngTemplateOutletContext]=\\\"{matches:matches, itemTemplate:itemTemplate, query:query}\\\"></ng-template> <!-- default options item template --> <ng-template #bsItemTemplate let-match=\\\"match\\\" let-query=\\\"query\\\"><span [innerHtml]=\\\"hightlight(match, query)\\\"></span> </ng-template> <!-- Bootstrap 3 options list template --> <ng-template #bs3Template> <ul class=\\\"dropdown-menu\\\" #ulElement [style.overflow-y]=\\\"needScrollbar ? 'scroll': 'auto'\\\" [style.height]=\\\"needScrollbar ? guiHeight: 'auto'\\\"> <ng-template ngFor let-match let-i=\\\"index\\\" [ngForOf]=\\\"matches\\\"> <li #liElements *ngIf=\\\"match.isHeader()\\\" class=\\\"dropdown-header\\\">{{ match }}</li> <li #liElements *ngIf=\\\"!match.isHeader()\\\" [class.active]=\\\"isActive(match)\\\" (mouseenter)=\\\"selectActive(match)\\\"> <a href=\\\"#\\\" (click)=\\\"selectMatch(match, $event)\\\" tabindex=\\\"-1\\\"> <ng-template [ngTemplateOutlet]=\\\"itemTemplate || bsItemTemplate\\\" [ngTemplateOutletContext]=\\\"{item:match.item, index:i, match:match, query:query}\\\"></ng-template> </a> </li> </ng-template> </ul> </ng-template> <!-- Bootstrap 4 options list template --> <ng-template #bs4Template> <ng-template ngFor let-match let-i=\\\"index\\\" [ngForOf]=\\\"matches\\\"> <h6 *ngIf=\\\"match.isHeader()\\\" class=\\\"dropdown-header\\\">{{ match }}</h6> <ng-template [ngIf]=\\\"!match.isHeader()\\\"> <button #liElements class=\\\"dropdown-item\\\" (click)=\\\"selectMatch(match, $event)\\\" (mouseenter)=\\\"selectActive(match)\\\" [class.active]=\\\"isActive(match)\\\"> <ng-template [ngTemplateOutlet]=\\\"itemTemplate || bsItemTemplate\\\" [ngTemplateOutletContext]=\\\"{item:match.item, index:i, match:match, query:query}\\\"></ng-template> </button> </ng-template> </ng-template> </ng-template> \",\n  host: {\n    class: 'dropdown open',\n    '[class.dropdown-menu]': 'isBs4',\n    '[style.overflow-y]' : `isBs4 && needScrollbar ? 'scroll': 'visible'`,\n    '[style.height]': `isBs4 && needScrollbar ? guiHeight: 'auto'`,\n    '[style.visibility]': `typeaheadScrollable ? 'hidden' : 'visible'`,\n    '[class.dropup]': 'dropup',\n    style: 'position: absolute;display: block;'\n  }\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Renderer2, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'ulElement': [{ type: ViewChild, args: ['ulElement', ] },],\n'liElements': [{ type: ViewChildren, args: ['liElements', ] },],\n'focusLost': [{ type: HostListener, args: ['mouseleave', ] },{ type: HostListener, args: ['blur', ] },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @copyright Valor Software\n * @copyright Angular ng-bootstrap team\n */\nimport { Renderer2 } from '@angular/core';\nimport { Trigger } from './trigger.class';\nimport {\n  BsEventCallback, ListenOptions\n} from '../component-loader/listen-options.model';\n\nconst DEFAULT_ALIASES = {\n  hover: ['mouseover', 'mouseout'],\n  focus: ['focusin', 'focusout']\n};\n\nexport function parseTriggers(triggers: string, aliases: any = DEFAULT_ALIASES): Trigger[] {\n  const trimmedTriggers = (triggers || '').trim();\n\n  if (trimmedTriggers.length === 0) {\n    return [];\n  }\n\n  const parsedTriggers = trimmedTriggers\n    .split(/\\s+/)\n    .map((trigger: string) => trigger.split(':'))\n    .map((triggerPair: string[]) => {\n      const alias = aliases[triggerPair[0]] || triggerPair;\n\n      return new Trigger(alias[0], alias[1]);\n    });\n\n  const manualTriggers = parsedTriggers.filter((triggerPair: Trigger) =>\n    triggerPair.isManual()\n  );\n\n  if (manualTriggers.length > 1) {\n    throw new Error('Triggers parse error: only one manual trigger is allowed');\n  }\n\n  if (manualTriggers.length === 1 && parsedTriggers.length > 1) {\n    throw new Error('Triggers parse error: manual trigger can\\'t be mixed with other triggers');\n  }\n\n  return parsedTriggers;\n}\n\nexport function listenToTriggers(renderer: Renderer2,\n                                 target: any,\n                                 triggers: string,\n                                 showFn: BsEventCallback,\n                                 hideFn: BsEventCallback,\n                                 toggleFn: BsEventCallback): Function {\n  const parsedTriggers = parseTriggers(triggers);\n  const listeners: any[] = [];\n\n  if (parsedTriggers.length === 1 && parsedTriggers[0].isManual()) {\n    return Function.prototype;\n  }\n\n  parsedTriggers.forEach((trigger: Trigger) => {\n    if (trigger.open === trigger.close) {\n      listeners.push(renderer.listen(target, trigger.open, toggleFn));\n\n      return;\n    }\n\n    listeners.push(\n      renderer.listen(target, trigger.open, showFn),\n      renderer.listen(target, trigger.close, hideFn)\n    );\n  });\n\n  return () => {\n    listeners.forEach((unsubscribeFn: Function) => unsubscribeFn());\n  };\n}\n\nexport function listenToTriggersV2(renderer: Renderer2,\n                                   options: ListenOptions): Function {\n  const parsedTriggers = parseTriggers(options.triggers);\n  const target = options.target;\n  // do nothing\n  if (parsedTriggers.length === 1 && parsedTriggers[0].isManual()) {\n    return Function.prototype;\n  }\n\n  // all listeners\n  const listeners: any[] = [];\n\n  // lazy listeners registration\n  const _registerHide: Function[] = [];\n  const registerHide = () => {\n    // add hide listeners to unregister array\n    _registerHide.forEach((fn: Function) => listeners.push(fn()));\n    // register hide events only once\n    _registerHide.length = 0;\n  };\n\n  // register open\\close\\toggle listeners\n  parsedTriggers.forEach((trigger: Trigger) => {\n    const useToggle = trigger.open === trigger.close;\n    const showFn = useToggle ? options.toggle : options.show;\n\n    if (!useToggle) {\n      _registerHide.push(() =>\n        renderer.listen(target, trigger.close, options.hide)\n      );\n    }\n\n    listeners.push(\n      renderer.listen(target, trigger.open, () => showFn(registerHide))\n    );\n  });\n\n  return () => {\n    listeners.forEach((unsubscribeFn: Function) => unsubscribeFn());\n  };\n}\n\nexport function registerOutsideClick(renderer: Renderer2,\n                                     options: ListenOptions) {\n  if (!options.outsideClick) {\n    return Function.prototype;\n  }\n\n  return renderer.listen('document', 'click', (event: any) => {\n    if (options.target && options.target.contains(event.target)) {\n      return;\n    }\n    if (\n      options.targets &&\n      options.targets.some(target => target.contains(event.target))\n    ) {\n      return;\n    }\n\n    options.hide();\n  });\n}\n","/**\n * @copyright Valor Software\n * @copyright Angular ng-bootstrap team\n */\n\nimport { ComponentRef, ViewRef } from '@angular/core';\n\nexport class ContentRef {\n  nodes: any[];\n  viewRef?: ViewRef;\n  componentRef?: ComponentRef<any>;\n\n  constructor(\n    nodes: any[],\n    viewRef?: ViewRef,\n    componentRef?: ComponentRef<any>\n  ) {\n    this.nodes = nodes;\n    this.viewRef = viewRef;\n    this.componentRef = componentRef;\n  }\n}\n","// tslint:disable:max-file-line-count\n// todo: add delay support\n// todo: merge events onShow, onShown, etc...\n// todo: add global positioning configuration?\nimport {\n  ApplicationRef,\n  ComponentFactory,\n  ComponentFactoryResolver,\n  ComponentRef,\n  ElementRef,\n  EmbeddedViewRef,\n  EventEmitter,\n  Injector,\n  NgZone,\n  Provider,\n  ReflectiveInjector,\n  Renderer2,\n  TemplateRef,\n  Type,\n  ViewContainerRef\n} from '@angular/core';\nimport { PositioningOptions, PositioningService } from '../positioning/index';\nimport { listenToTriggersV2, registerOutsideClick } from '../utils/triggers';\nimport { ContentRef } from './content-ref.class';\nimport { ListenOptions } from './listen-options.model';\n\nexport class ComponentLoader<T> {\n  onBeforeShow: EventEmitter<any> = new EventEmitter();\n  onShown: EventEmitter<any> = new EventEmitter();\n  onBeforeHide: EventEmitter<any> = new EventEmitter();\n  onHidden: EventEmitter<any> = new EventEmitter();\n\n  instance: T;\n  _componentRef: ComponentRef<T>;\n  _inlineViewRef: EmbeddedViewRef<T>;\n\n  private _providers: Provider[] = [];\n  private _componentFactory: ComponentFactory<T>;\n  private _zoneSubscription: any;\n  private _contentRef: ContentRef;\n  private _innerComponent: ComponentRef<T>;\n\n  private _unregisterListenersFn: Function;\n\n  get isShown(): boolean {\n    if (this._isHiding) {\n      return false;\n    }\n\n    return !!this._componentRef;\n  }\n\n  private _isHiding = false;\n\n  /**\n   * Placement of a component. Accepts: \"top\", \"bottom\", \"left\", \"right\"\n   */\n  private attachment: string;\n\n  /**\n   * A selector specifying the element the popover should be appended to.\n   * Currently only supports \"body\".\n   */\n  private container: string | ElementRef | any;\n\n  /**\n   * Specifies events that should trigger. Supports a space separated list of\n   * event names.\n   */\n  private triggers: string;\n\n  private _listenOpts: ListenOptions = {};\n  private _globalListener = Function.prototype;\n\n  /**\n   * Do not use this directly, it should be instanced via\n   * `ComponentLoadFactory.attach`\n   * @internal\n   */\n  // tslint:disable-next-line\n  public constructor(\n    private _viewContainerRef: ViewContainerRef,\n    private _renderer: Renderer2,\n    private _elementRef: ElementRef,\n    private _injector: Injector,\n    private _componentFactoryResolver: ComponentFactoryResolver,\n    private _ngZone: NgZone,\n    private _applicationRef: ApplicationRef,\n    private _posService: PositioningService\n  ) {}\n\n  attach(compType: Type<T>): ComponentLoader<T> {\n    this._componentFactory = this._componentFactoryResolver\n      .resolveComponentFactory<T>(compType);\n\n    return this;\n  }\n\n  // todo: add behaviour: to target element, `body`, custom element\n  to(container?: string): ComponentLoader<T> {\n    this.container = container || this.container;\n\n    return this;\n  }\n\n  position(opts?: PositioningOptions): ComponentLoader<T> {\n    this.attachment = opts.attachment || this.attachment;\n    this._elementRef = (opts.target as ElementRef) || this._elementRef;\n\n    return this;\n  }\n\n  provide(provider: Provider): ComponentLoader<T> {\n    this._providers.push(provider);\n\n    return this;\n  }\n\n  // todo: appendChild to element or document.querySelector(this.container)\n\n  show(opts: {\n    content?: string | TemplateRef<any>;\n    context?: any;\n    initialState?: any; [key: string]: any;\n  } = {}\n  ): ComponentRef<T> {\n\n    this._subscribePositioning();\n    this._innerComponent = null;\n\n    if (!this._componentRef) {\n      this.onBeforeShow.emit();\n      this._contentRef = this._getContentRef(opts.content, opts.context, opts.initialState);\n      const injector = ReflectiveInjector.resolveAndCreate(this._providers, this._injector);\n\n      this._componentRef = this._componentFactory.create(injector, this._contentRef.nodes);\n      this._applicationRef.attachView(this._componentRef.hostView);\n      // this._componentRef = this._viewContainerRef\n      //   .createComponent(this._componentFactory, 0, injector, this._contentRef.nodes);\n      this.instance = this._componentRef.instance;\n\n      Object.assign(this._componentRef.instance, opts);\n\n      if (this.container instanceof ElementRef) {\n        this.container.nativeElement.appendChild(\n          this._componentRef.location.nativeElement\n        );\n      }\n\n      if (this.container === 'body' && typeof document !== 'undefined') {\n        document\n          .querySelector(this.container as string)\n          .appendChild(this._componentRef.location.nativeElement);\n      }\n\n      if (\n        !this.container &&\n        this._elementRef &&\n        this._elementRef.nativeElement.parentElement\n      ) {\n        this._elementRef.nativeElement.parentElement.appendChild(\n          this._componentRef.location.nativeElement\n        );\n      }\n\n      // we need to manually invoke change detection since events registered\n      // via\n      // Renderer::listen() are not picked up by change detection with the\n      // OnPush strategy\n      if (this._contentRef.componentRef) {\n        this._innerComponent = this._contentRef.componentRef.instance;\n        this._contentRef.componentRef.changeDetectorRef.markForCheck();\n        this._contentRef.componentRef.changeDetectorRef.detectChanges();\n      }\n      this._componentRef.changeDetectorRef.markForCheck();\n      this._componentRef.changeDetectorRef.detectChanges();\n      this.onShown.emit(this._componentRef.instance);\n    }\n\n    this._registerOutsideClick();\n\n    return this._componentRef;\n  }\n\n  hide(): ComponentLoader<T> {\n    if (!this._componentRef) {\n      return this;\n    }\n\n    this.onBeforeHide.emit(this._componentRef.instance);\n\n    const componentEl = this._componentRef.location.nativeElement;\n    componentEl.parentNode.removeChild(componentEl);\n    if (this._contentRef.componentRef) {\n      this._contentRef.componentRef.destroy();\n    }\n    this._componentRef.destroy();\n    if (this._viewContainerRef && this._contentRef.viewRef) {\n      this._viewContainerRef.remove(\n        this._viewContainerRef.indexOf(this._contentRef.viewRef)\n      );\n    }\n    if (this._contentRef.viewRef) {\n      this._contentRef.viewRef.destroy();\n    }\n    // this._viewContainerRef.remove(this._viewContainerRef.indexOf(this._componentRef.hostView));\n    //\n    // if (this._contentRef.viewRef && this._viewContainerRef.indexOf(this._contentRef.viewRef) !== -1) {\n    //   this._viewContainerRef.remove(this._viewContainerRef.indexOf(this._contentRef.viewRef));\n    // }\n\n    this._contentRef = null;\n    this._componentRef = null;\n    this._removeGlobalListener();\n\n    this.onHidden.emit();\n\n    return this;\n  }\n\n  toggle(): void {\n    if (this.isShown) {\n      this.hide();\n\n      return;\n    }\n\n    this.show();\n  }\n\n  dispose(): void {\n    if (this.isShown) {\n      this.hide();\n    }\n\n    this._unsubscribePositioning();\n\n    if (this._unregisterListenersFn) {\n      this._unregisterListenersFn();\n    }\n  }\n\n  listen(listenOpts: ListenOptions): ComponentLoader<T> {\n    this.triggers = listenOpts.triggers || this.triggers;\n    this._listenOpts.outsideClick = listenOpts.outsideClick;\n    listenOpts.target = listenOpts.target || this._elementRef.nativeElement;\n\n    const hide = (this._listenOpts.hide = () =>\n      listenOpts.hide ? listenOpts.hide() : void this.hide());\n    const show = (this._listenOpts.show = (registerHide: Function) => {\n      listenOpts.show ? listenOpts.show(registerHide) : this.show(registerHide);\n      registerHide();\n    });\n\n    const toggle = (registerHide: Function) => {\n      this.isShown ? hide() : show(registerHide);\n    };\n\n    this._unregisterListenersFn = listenToTriggersV2(this._renderer, {\n      target: listenOpts.target,\n      triggers: listenOpts.triggers,\n      show,\n      hide,\n      toggle\n    });\n\n    return this;\n  }\n\n  _removeGlobalListener() {\n    if (this._globalListener) {\n      this._globalListener();\n      this._globalListener = null;\n    }\n  }\n\n  attachInline(\n    vRef: ViewContainerRef,\n    template: TemplateRef<any>\n  ): ComponentLoader<T> {\n    this._inlineViewRef = vRef.createEmbeddedView(template);\n\n    return this;\n  }\n\n  _registerOutsideClick(): void {\n    if (!this._componentRef || !this._componentRef.location) {\n      return;\n    }\n    // why: should run after first event bubble\n    if (this._listenOpts.outsideClick) {\n      const target = this._componentRef.location.nativeElement;\n      setTimeout(() => {\n        this._globalListener = registerOutsideClick(this._renderer, {\n          targets: [target, this._elementRef.nativeElement],\n          outsideClick: this._listenOpts.outsideClick,\n          hide: () => this._listenOpts.hide()\n        });\n      });\n    }\n  }\n\n  getInnerComponent(): ComponentRef<T> {\n    return this._innerComponent;\n  }\n\n  private _subscribePositioning(): void {\n    if (this._zoneSubscription || !this.attachment) {\n      return;\n    }\n\n    this._zoneSubscription = this._ngZone.onStable.subscribe(() => {\n      if (!this._componentRef) {\n        return;\n      }\n      this._posService.position({\n        element: this._componentRef.location,\n        target: this._elementRef,\n        attachment: this.attachment,\n        appendToBody: this.container === 'body'\n      });\n    });\n  }\n\n  private _unsubscribePositioning(): void {\n    if (!this._zoneSubscription) {\n      return;\n    }\n    this._zoneSubscription.unsubscribe();\n    this._zoneSubscription = null;\n  }\n\n  private _getContentRef(\n    content: string | TemplateRef<any> | any,\n    context?: any,\n    initialState?: any\n  ): ContentRef {\n    if (!content) {\n      return new ContentRef([]);\n    }\n\n    if (content instanceof TemplateRef) {\n      if (this._viewContainerRef) {\n        const _viewRef = this._viewContainerRef\n          .createEmbeddedView<TemplateRef<T>>(content, context);\n        _viewRef.markForCheck();\n\n        return new ContentRef([_viewRef.rootNodes], _viewRef);\n      }\n      const viewRef = content.createEmbeddedView({});\n      this._applicationRef.attachView(viewRef);\n\n      return new ContentRef([viewRef.rootNodes], viewRef);\n    }\n\n    if (typeof content === 'function') {\n      const contentCmptFactory = this._componentFactoryResolver.resolveComponentFactory(\n        content\n      );\n      const modalContentInjector = ReflectiveInjector.resolveAndCreate(\n        [...this._providers],\n        this._injector\n      );\n      const componentRef = contentCmptFactory.create(modalContentInjector);\n      Object.assign(componentRef.instance, initialState);\n      this._applicationRef.attachView(componentRef.hostView);\n\n      return new ContentRef(\n        [[componentRef.location.nativeElement]],\n        componentRef.hostView,\n        componentRef\n      );\n    }\n\n    return new ContentRef([[this._renderer.createText(`${content}`)]]);\n  }\n}\n","/**\n * @copyright Valor Software\n * @copyright Angular ng-bootstrap team\n */\n\n// previous version:\n// https://github.com/angular-ui/bootstrap/blob/07c31d0731f7cb068a1932b8e01d2312b796b4ec/src/position/position.js\n// tslint:disable\nexport class Positioning {\n  public position(element: HTMLElement, round = true): ClientRect {\n    let elPosition: ClientRect;\n    let parentOffset: ClientRect = {\n      width: 0,\n      height: 0,\n      top: 0,\n      bottom: 0,\n      left: 0,\n      right: 0\n    };\n\n    if (this.getStyle(element, 'position') === 'fixed') {\n      const bcRect = element.getBoundingClientRect();\n      elPosition = {\n        width: bcRect.width,\n        height: bcRect.height,\n        top: bcRect.top,\n        bottom: bcRect.bottom,\n        left: bcRect.left,\n        right: bcRect.right\n      };\n    } else {\n      const offsetParentEl = this.offsetParent(element);\n\n      elPosition = this.offset(element, false);\n\n      if (offsetParentEl !== document.documentElement) {\n        parentOffset = this.offset(offsetParentEl, false);\n      }\n\n      parentOffset.top += offsetParentEl.clientTop;\n      parentOffset.left += offsetParentEl.clientLeft;\n    }\n\n    elPosition.top -= parentOffset.top;\n    elPosition.bottom -= parentOffset.top;\n    elPosition.left -= parentOffset.left;\n    elPosition.right -= parentOffset.left;\n\n    if (round) {\n      elPosition.top = Math.round(elPosition.top);\n      elPosition.bottom = Math.round(elPosition.bottom);\n      elPosition.left = Math.round(elPosition.left);\n      elPosition.right = Math.round(elPosition.right);\n    }\n\n    return elPosition;\n  }\n\n  public offset(element: HTMLElement, round = true): ClientRect {\n    const elBcr = element.getBoundingClientRect();\n    const viewportOffset = {\n      top: window.pageYOffset - document.documentElement.clientTop,\n      left: window.pageXOffset - document.documentElement.clientLeft\n    };\n\n    let elOffset = {\n      height: elBcr.height || element.offsetHeight,\n      width: elBcr.width || element.offsetWidth,\n      top: elBcr.top + viewportOffset.top,\n      bottom: elBcr.bottom + viewportOffset.top,\n      left: elBcr.left + viewportOffset.left,\n      right: elBcr.right + viewportOffset.left\n    };\n\n    if (round) {\n      elOffset.height = Math.round(elOffset.height);\n      elOffset.width = Math.round(elOffset.width);\n      elOffset.top = Math.round(elOffset.top);\n      elOffset.bottom = Math.round(elOffset.bottom);\n      elOffset.left = Math.round(elOffset.left);\n      elOffset.right = Math.round(elOffset.right);\n    }\n\n    return elOffset;\n  }\n\n  public positionElements(\n    hostElement: HTMLElement,\n    targetElement: HTMLElement,\n    placement: string,\n    appendToBody?: boolean\n  ): ClientRect {\n    const hostElPosition = appendToBody\n      ? this.offset(hostElement, false)\n      : this.position(hostElement, false);\n    const targetElStyles = this.getAllStyles(targetElement);\n    const shiftWidth: any = {\n      left: hostElPosition.left,\n      center:\n        hostElPosition.left +\n        hostElPosition.width / 2 -\n        targetElement.offsetWidth / 2,\n      right: hostElPosition.left + hostElPosition.width\n    };\n    const shiftHeight: any = {\n      top: hostElPosition.top,\n      center:\n        hostElPosition.top +\n        hostElPosition.height / 2 -\n        targetElement.offsetHeight / 2,\n      bottom: hostElPosition.top + hostElPosition.height\n    };\n    const targetElBCR = targetElement.getBoundingClientRect();\n    let placementPrimary = placement.split(' ')[0] || 'top';\n    const placementSecondary = placement.split(' ')[1] || 'center';\n\n    let targetElPosition: ClientRect = {\n      height: targetElBCR.height || targetElement.offsetHeight,\n      width: targetElBCR.width || targetElement.offsetWidth,\n      top: 0,\n      bottom: targetElBCR.height || targetElement.offsetHeight,\n      left: 0,\n      right: targetElBCR.width || targetElement.offsetWidth\n    };\n\n    if (placementPrimary === 'auto') {\n      let newPlacementPrimary = this.autoPosition(\n        targetElPosition,\n        hostElPosition,\n        targetElement,\n        placementSecondary\n      );\n      if (!newPlacementPrimary)\n        newPlacementPrimary = this.autoPosition(\n          targetElPosition,\n          hostElPosition,\n          targetElement\n        );\n      if (newPlacementPrimary) placementPrimary = newPlacementPrimary;\n      targetElement.classList.add(placementPrimary);\n    }\n\n    switch (placementPrimary) {\n      case 'top':\n        targetElPosition.top =\n          hostElPosition.top -\n          (targetElement.offsetHeight +\n            parseFloat(targetElStyles.marginBottom));\n        targetElPosition.bottom +=\n          hostElPosition.top - targetElement.offsetHeight;\n        targetElPosition.left = shiftWidth[placementSecondary];\n        targetElPosition.right += shiftWidth[placementSecondary];\n        break;\n      case 'bottom':\n        targetElPosition.top = shiftHeight[placementPrimary];\n        targetElPosition.bottom += shiftHeight[placementPrimary];\n        targetElPosition.left = shiftWidth[placementSecondary];\n        targetElPosition.right += shiftWidth[placementSecondary];\n        break;\n      case 'left':\n        targetElPosition.top = shiftHeight[placementSecondary];\n        targetElPosition.bottom += shiftHeight[placementSecondary];\n        targetElPosition.left =\n          hostElPosition.left -\n          (targetElement.offsetWidth + parseFloat(targetElStyles.marginRight));\n        targetElPosition.right +=\n          hostElPosition.left - targetElement.offsetWidth;\n        break;\n      case 'right':\n        targetElPosition.top = shiftHeight[placementSecondary];\n        targetElPosition.bottom += shiftHeight[placementSecondary];\n        targetElPosition.left = shiftWidth[placementPrimary];\n        targetElPosition.right += shiftWidth[placementPrimary];\n        break;\n    }\n\n    targetElPosition.top = Math.round(targetElPosition.top);\n    targetElPosition.bottom = Math.round(targetElPosition.bottom);\n    targetElPosition.left = Math.round(targetElPosition.left);\n    targetElPosition.right = Math.round(targetElPosition.right);\n\n    return targetElPosition;\n  }\n\n  private autoPosition(\n    targetElPosition: ClientRect,\n    hostElPosition: ClientRect,\n    targetElement: HTMLElement,\n    preferredPosition?: string\n  ) {\n    if (\n      (!preferredPosition || preferredPosition === 'right') &&\n      targetElPosition.left + hostElPosition.left - targetElement.offsetWidth <\n        0\n    ) {\n      return 'right';\n    } else if (\n      (!preferredPosition || preferredPosition === 'top') &&\n      targetElPosition.bottom +\n        hostElPosition.bottom +\n        targetElement.offsetHeight >\n        window.innerHeight\n    ) {\n      return 'top';\n    } else if (\n      (!preferredPosition || preferredPosition === 'bottom') &&\n      targetElPosition.top + hostElPosition.top - targetElement.offsetHeight < 0\n    ) {\n      return 'bottom';\n    } else if (\n      (!preferredPosition || preferredPosition === 'left') &&\n      targetElPosition.right +\n        hostElPosition.right +\n        targetElement.offsetWidth >\n        window.innerWidth\n    ) {\n      return 'left';\n    }\n    return null;\n  }\n\n  private getAllStyles(element: HTMLElement) {\n    return window.getComputedStyle(element);\n  }\n\n  private getStyle(element: HTMLElement, prop: string): string {\n    return (this.getAllStyles(element) as any)[prop];\n  }\n\n  private isStaticPositioned(element: HTMLElement): boolean {\n    return (this.getStyle(element, 'position') || 'static') === 'static';\n  }\n\n  private offsetParent(element: HTMLElement): HTMLElement {\n    let offsetParentEl =\n      <HTMLElement>element.offsetParent || document.documentElement;\n\n    while (\n      offsetParentEl &&\n      offsetParentEl !== document.documentElement &&\n      this.isStaticPositioned(offsetParentEl)\n    ) {\n      offsetParentEl = <HTMLElement>offsetParentEl.offsetParent;\n    }\n\n    return offsetParentEl || document.documentElement;\n  }\n}\n\nconst positionService = new Positioning();\n\nexport function positionElements(\n  hostElement: HTMLElement,\n  targetElement: HTMLElement,\n  placement: string,\n  appendToBody?: boolean\n): void {\n  const pos = positionService.positionElements(\n    hostElement,\n    targetElement,\n    placement,\n    appendToBody\n  );\n\n  targetElement.style.top = `${pos.top}px`;\n  targetElement.style.left = `${pos.left}px`;\n}\n","import { Injectable, ElementRef } from '@angular/core';\nimport { positionElements } from './ng-positioning';\n\nexport interface PositioningOptions {\n  /** The DOM element, ElementRef, or a selector string of an element which will be moved */\n  element?: HTMLElement | ElementRef | string;\n\n  /** The DOM element, ElementRef, or a selector string of an element which the element will be attached to  */\n  target?: HTMLElement | ElementRef | string;\n\n  /**\n   * A string of the form 'vert-attachment horiz-attachment' or 'placement'\n   * - placement can be \"top\", \"bottom\", \"left\", \"right\"\n   * not yet supported:\n   * - vert-attachment can be any of 'top', 'middle', 'bottom'\n   * - horiz-attachment can be any of 'left', 'center', 'right'\n   */\n  attachment?: string;\n\n  /** A string similar to `attachment`. The one difference is that, if it's not provided,\n   * `targetAttachment` will assume the mirror image of `attachment`.\n   */\n  targetAttachment?: string;\n\n  /** A string of the form 'vert-offset horiz-offset'\n   * - vert-offset and horiz-offset can be of the form \"20px\" or \"55%\"\n   */\n  offset?: string;\n\n  /** A string similar to `offset`, but referring to the offset of the target */\n  targetOffset?: string;\n\n  /** If true component will be attached to body */\n  appendToBody?: boolean;\n}\n\n\nexport class PositioningService {\n  position(options: PositioningOptions): void {\n    const {element, target, attachment, appendToBody} = options;\n    positionElements(\n      _getHtmlElement(target),\n      _getHtmlElement(element),\n      attachment,\n      appendToBody\n    );\n  }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction _getHtmlElement(element: HTMLElement | ElementRef | string): HTMLElement {\n  // it means that we got a selector\n  if (typeof element === 'string') {\n    return document.querySelector(element) as HTMLElement;\n  }\n\n  if (element instanceof ElementRef) {\n    return element.nativeElement;\n  }\n\n  return element as HTMLElement;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {\n  ApplicationRef, ComponentFactoryResolver, ElementRef, Injectable, Injector,\n  NgZone, Renderer2, ViewContainerRef\n} from '@angular/core';\nimport { ComponentLoader } from './component-loader.class';\nimport { PositioningService } from '../positioning/index';\n\n\nexport class ComponentLoaderFactory {\n  constructor(private _componentFactoryResolver: ComponentFactoryResolver,\n              private _ngZone: NgZone,\n              private _injector: Injector,\n              private _posService: PositioningService,\n              private _applicationRef: ApplicationRef) {}\n\n  /**\n   *\n   * @param _elementRef\n   * @param _viewContainerRef\n   * @param _renderer\n   * @returns {ComponentLoader}\n   */\n  createLoader<T>(_elementRef: ElementRef,\n                  _viewContainerRef: ViewContainerRef,\n                  _renderer: Renderer2): ComponentLoader<T> {\n    return new ComponentLoader<T>(\n      _viewContainerRef,\n      _renderer,\n      _elementRef,\n      this._injector,\n      this._componentFactoryResolver,\n      this._ngZone,\n      this._applicationRef,\n      this._posService\n    );\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ComponentFactoryResolver, },\n{type: NgZone, },\n{type: Injector, },\n{type: PositioningService, },\n{type: ApplicationRef, },\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/* tslint:disable:max-file-line-count */\nimport {\n  ChangeDetectorRef,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  HostListener,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  Renderer2,\n  TemplateRef,\n  ViewContainerRef\n} from '@angular/core';\nimport { NgControl } from '@angular/forms';\nimport 'rxjs/add/observable/from';\nimport 'rxjs/add/operator/debounceTime';\nimport 'rxjs/add/operator/filter';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/switchMap';\nimport 'rxjs/add/operator/mergeMap';\nimport 'rxjs/add/operator/toArray';\n\nimport { Observable } from 'rxjs/Observable';\nimport { Subscription } from 'rxjs/Subscription';\nimport { ComponentLoader, ComponentLoaderFactory } from '../component-loader/index';\nimport { TypeaheadContainerComponent } from './typeahead-container.component';\nimport { TypeaheadMatch } from './typeahead-match.class';\nimport { getValueFromObject, latinize, tokenize } from './typeahead-utils';\n\n\nexport class TypeaheadDirective implements OnInit, OnDestroy {\n  /** options source, can be Array of strings, objects or\n   * an Observable for external matching process\n   */\n   typeahead: any;\n  /** minimal no of characters that needs to be entered before\n   * typeahead kicks-in. When set to 0, typeahead shows on focus with full\n   * list of options (limited as normal by typeaheadOptionsLimit)\n   */\n   typeaheadMinLength: number = void 0;\n  /** minimal wait time after last character typed before typeahead kicks-in */\n   typeaheadWaitMs: number;\n  /** maximum length of options items list */\n   typeaheadOptionsLimit: number;\n  /** when options source is an array of objects, the name of field\n   * that contains the options value, we use array item as option in case\n   * of this field is missing. Supports nested properties and methods.\n   */\n   typeaheadOptionField: string;\n  /** when options source is an array of objects, the name of field that\n   * contains the group value, matches are grouped by this field when set.\n   */\n   typeaheadGroupField: string;\n  /** should be used only in case of typeahead attribute is array.\n   * If true - loading of options will be async, otherwise - sync.\n   * true make sense if options array is large.\n   */\n   typeaheadAsync: boolean = void 0;\n  /** match latin symbols.\n   * If true the word súper would match super and vice versa.\n   */\n   typeaheadLatinize = true;\n  /** Can be use to search words by inserting a single white space between each characters\n   *  for example 'C a l i f o r n i a' will match 'California'.\n   */\n   typeaheadSingleWords = true;\n  /** should be used only in case typeaheadSingleWords attribute is true.\n   * Sets the word delimiter to break words. Defaults to space.\n   */\n   typeaheadWordDelimiters = ' ';\n  /** should be used only in case typeaheadSingleWords attribute is true.\n   * Sets the word delimiter to match exact phrase.\n   * Defaults to simple and double quotes.\n   */\n   typeaheadPhraseDelimiters = '\\'\"';\n  /** used to specify a custom item template.\n   * Template variables exposed are called item and index;\n   */\n   typeaheadItemTemplate: TemplateRef<any>;\n  /** used to specify a custom options list template.\n   * Template variables: matches, itemTemplate, query\n   */\n   optionsListTemplate: TemplateRef<any>;\n  /** specifies if typeahead is scrollable  */\n   typeaheadScrollable = false;\n  /** specifies number of options to show in scroll view  */\n   typeaheadOptionsInScrollableView = 5;\n  /** fired when 'busy' state of this component was changed,\n   * fired on async mode only, returns boolean\n   */\n   typeaheadLoading = new EventEmitter<boolean>();\n  /** fired on every key event and returns true\n   * in case of matches are not detected\n   */\n   typeaheadNoResults = new EventEmitter<boolean>();\n  /** fired when option was selected, return object with data of this option */\n   typeaheadOnSelect = new EventEmitter<TypeaheadMatch>();\n  /** fired when blur event occurres. returns the active item */\n   typeaheadOnBlur = new EventEmitter<any>();\n\n  /**\n   * A selector specifying the element the typeahead should be appended to.\n   * Currently only supports \"body\".\n   */\n   container: string;\n\n  /** This attribute indicates that the dropdown should be opened upwards */\n   dropup = false;\n\n  // not yet implemented\n  /** if false restrict model values to the ones selected from the popup only will be provided */\n  // @Input() protected typeaheadEditable:boolean;\n  /** if false the first match automatically will not be focused as you type */\n  // @Input() protected typeaheadFocusFirst:boolean;\n  /** format the ng-model result after selection */\n  // @Input() protected typeaheadInputFormatter:any;\n  /** if true automatically select an item when there is one option that exactly matches the user input */\n  // @Input() protected typeaheadSelectOnExact:boolean;\n  /**  if true select the currently highlighted match on blur */\n  // @Input() protected typeaheadSelectOnBlur:boolean;\n  /**  if false don't focus the input element the typeahead directive is associated with on selection */\n    // @Input() protected typeaheadFocusOnSelect:boolean;\n\n  _container: TypeaheadContainerComponent;\n  isTypeaheadOptionsListActive = false;\n\n  protected keyUpEventEmitter: EventEmitter<any> = new EventEmitter();\n  protected _matches: TypeaheadMatch[];\n  protected placement = 'bottom-left';\n  // protected popup:ComponentRef<TypeaheadContainerComponent>;\n\n  private _typeahead: ComponentLoader<TypeaheadContainerComponent>;\n  private _subscriptions: Subscription[] = [];\n  private _outsideClickListener: Function;\n\n  constructor(private ngControl: NgControl,\n              private element: ElementRef,\n              viewContainerRef: ViewContainerRef,\n              private renderer: Renderer2,\n              cis: ComponentLoaderFactory,\n              private changeDetection: ChangeDetectorRef) {\n    this._typeahead = cis.createLoader<TypeaheadContainerComponent>(\n      element,\n      viewContainerRef,\n      renderer\n    );\n  }\n\n  ngOnInit(): void {\n    this.typeaheadOptionsLimit = this.typeaheadOptionsLimit || 20;\n    this.typeaheadMinLength =\n      this.typeaheadMinLength === void 0 ? 1 : this.typeaheadMinLength;\n    this.typeaheadWaitMs = this.typeaheadWaitMs || 0;\n\n    // async should be false in case of array\n    if (\n      this.typeaheadAsync === undefined &&\n      !(this.typeahead instanceof Observable)\n    ) {\n      this.typeaheadAsync = false;\n    }\n\n    if (this.typeahead instanceof Observable) {\n      this.typeaheadAsync = true;\n    }\n\n    if (this.typeaheadAsync) {\n      this.asyncActions();\n    } else {\n      this.syncActions();\n    }\n  }\n\n  \n  onInput(e: any): void {\n    // For `<input>`s, use the `value` property. For others that don't have a\n    // `value` (such as `<span contenteditable=\"true\">`), use either\n    // `textContent` or `innerText` (depending on which one is supported, i.e.\n    // Firefox or IE).\n    const value =\n      e.target.value !== undefined\n        ? e.target.value\n        : e.target.textContent !== undefined\n        ? e.target.textContent\n        : e.target.innerText;\n    if (value != null && value.trim().length >= this.typeaheadMinLength) {\n      this.typeaheadLoading.emit(true);\n      this.keyUpEventEmitter.emit(e.target.value);\n    } else {\n      this.typeaheadLoading.emit(false);\n      this.typeaheadNoResults.emit(false);\n      this.hide();\n    }\n  }\n\n  \n  onChange(e: any): void {\n    if (this._container) {\n      // esc\n      if (e.keyCode === 27) {\n        this.hide();\n\n        return;\n      }\n\n      // up\n      if (e.keyCode === 38) {\n        this._container.prevActiveMatch();\n\n        return;\n      }\n\n      // down\n      if (e.keyCode === 40) {\n        this._container.nextActiveMatch();\n\n        return;\n      }\n\n      // enter, tab\n      if (e.keyCode === 13) {\n        this._container.selectActiveMatch();\n\n        return;\n      }\n    }\n  }\n\n  \n  \n  onFocus(): void {\n    if (this.typeaheadMinLength === 0) {\n      this.typeaheadLoading.emit(true);\n      this.keyUpEventEmitter.emit(this.element.nativeElement.value || '');\n    }\n  }\n\n  \n  onBlur(): void {\n    if (this._container && !this._container.isFocused) {\n      this.typeaheadOnBlur.emit(this._container.active);\n    }\n  }\n\n  \n  onKeydown(e: any): void {\n    // no container - no problems\n    if (!this._container) {\n      return;\n    }\n\n    // if an item is visible - prevent form submission\n    if (e.keyCode === 13) {\n      e.preventDefault();\n\n      return;\n    }\n\n    // if an item is visible - don't change focus\n    if (e.keyCode === 9) {\n      e.preventDefault();\n      this._container.selectActiveMatch();\n\n      return;\n    }\n  }\n\n  changeModel(match: TypeaheadMatch): void {\n    const valueStr: string = match.value;\n    this.ngControl.viewToModelUpdate(valueStr);\n    (this.ngControl.control).setValue(valueStr);\n    this.changeDetection.markForCheck();\n    this.hide();\n  }\n\n  get matches(): any[] {\n    return this._matches;\n  }\n\n  show(): void {\n    this._typeahead\n      .attach(TypeaheadContainerComponent)\n      // todo: add append to body, after updating positioning service\n      .to(this.container)\n      .position({attachment: `${this.dropup ? 'top' : 'bottom'} left`})\n      .show({\n        typeaheadRef: this,\n        placement: this.placement,\n        animation: false,\n        dropup: this.dropup\n      });\n\n    this._outsideClickListener = this.renderer.listen('document', 'click', (e: MouseEvent) => {\n      if (this.typeaheadMinLength === 0 && this.element.nativeElement.contains(e.target)) {\n        return;\n      }\n      this.onOutsideClick();\n    });\n\n    this._container = this._typeahead.instance;\n    this._container.parent = this;\n    // This improves the speed as it won't have to be done for each list item\n    const normalizedQuery = (this.typeaheadLatinize\n      ? latinize(this.ngControl.control.value)\n      : this.ngControl.control.value)\n      .toString()\n      .toLowerCase();\n    this._container.query = this.typeaheadSingleWords\n      ? tokenize(\n        normalizedQuery,\n        this.typeaheadWordDelimiters,\n        this.typeaheadPhraseDelimiters\n      )\n      : normalizedQuery;\n    this._container.matches = this._matches;\n    this.element.nativeElement.focus();\n  }\n\n  hide(): void {\n    if (this._typeahead.isShown) {\n      this._typeahead.hide();\n      this._outsideClickListener();\n      this._container = null;\n    }\n  }\n\n  onOutsideClick(): void {\n    if (this._container && !this._container.isFocused) {\n      this.hide();\n    }\n  }\n\n  ngOnDestroy(): any {\n    // clean up subscriptions\n    for (const sub of this._subscriptions) {\n      sub.unsubscribe();\n    }\n    this._typeahead.dispose();\n  }\n\n  protected asyncActions(): void {\n    this._subscriptions.push(\n      this.keyUpEventEmitter\n        .debounceTime(this.typeaheadWaitMs)\n        .switchMap(() => this.typeahead)\n        .subscribe((matches: any[]) => {\n          this.finalizeAsyncCall(matches);\n        })\n    );\n  }\n\n  protected syncActions(): void {\n    this._subscriptions.push(\n      this.keyUpEventEmitter\n        .debounceTime(this.typeaheadWaitMs)\n        .mergeMap((value: string) => {\n          const normalizedQuery = this.normalizeQuery(value);\n\n          return Observable.from(this.typeahead)\n            .filter((option: any) => {\n              return (\n                option &&\n                this.testMatch(this.normalizeOption(option), normalizedQuery)\n              );\n            })\n            .toArray();\n        })\n        .subscribe((matches: any[]) => {\n          this.finalizeAsyncCall(matches);\n        })\n    );\n  }\n\n  protected normalizeOption(option: any): any {\n    const optionValue: string = getValueFromObject(\n      option,\n      this.typeaheadOptionField\n    );\n    const normalizedOption = this.typeaheadLatinize\n      ? latinize(optionValue)\n      : optionValue;\n\n    return normalizedOption.toLowerCase();\n  }\n\n  protected normalizeQuery(value: string): any {\n    // If singleWords, break model here to not be doing extra work on each\n    // iteration\n    let normalizedQuery: any = (this.typeaheadLatinize\n      ? latinize(value)\n      : value)\n      .toString()\n      .toLowerCase();\n    normalizedQuery = this.typeaheadSingleWords\n      ? tokenize(\n        normalizedQuery,\n        this.typeaheadWordDelimiters,\n        this.typeaheadPhraseDelimiters\n      )\n      : normalizedQuery;\n\n    return normalizedQuery;\n  }\n\n  protected testMatch(match: string, test: any): boolean {\n    let spaceLength: number;\n\n    if (typeof test === 'object') {\n      spaceLength = test.length;\n      for (let i = 0; i < spaceLength; i += 1) {\n        if (test[i].length > 0 && match.indexOf(test[i]) < 0) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n\n    return match.indexOf(test) >= 0;\n  }\n\n  protected finalizeAsyncCall(matches: any[]): void {\n    this.prepareMatches(matches);\n\n    this.typeaheadLoading.emit(false);\n    this.typeaheadNoResults.emit(!this.hasMatches());\n\n    if (!this.hasMatches()) {\n      this.hide();\n\n      return;\n    }\n\n    if (this._container) {\n      // This improves the speed as it won't have to be done for each list item\n      const normalizedQuery = (this.typeaheadLatinize\n        ? latinize(this.ngControl.control.value)\n        : this.ngControl.control.value)\n        .toString()\n        .toLowerCase();\n      this._container.query = this.typeaheadSingleWords\n        ? tokenize(\n          normalizedQuery,\n          this.typeaheadWordDelimiters,\n          this.typeaheadPhraseDelimiters\n        )\n        : normalizedQuery;\n      this._container.matches = this._matches;\n    } else {\n      this.show();\n    }\n  }\n\n  protected prepareMatches(options: any[]): void {\n    const limited: any[] = options.slice(0, this.typeaheadOptionsLimit);\n\n    if (this.typeaheadGroupField) {\n      let matches: TypeaheadMatch[] = [];\n\n      // extract all group names\n      const groups = limited\n        .map((option: any) =>\n          getValueFromObject(option, this.typeaheadGroupField)\n        )\n        .filter((v: string, i: number, a: any[]) => a.indexOf(v) === i);\n\n      groups.forEach((group: string) => {\n        // add group header to array of matches\n        matches.push(new TypeaheadMatch(group, group, true));\n\n        // add each item of group to array of matches\n        matches = matches.concat(\n          limited\n            .filter(\n              (option: any) =>\n                getValueFromObject(option, this.typeaheadGroupField) === group\n            )\n            .map(\n              (option: any) =>\n                new TypeaheadMatch(\n                  option,\n                  getValueFromObject(option, this.typeaheadOptionField)\n                )\n            )\n        );\n      });\n\n      this._matches = matches;\n    } else {\n      this._matches = limited.map(\n        (option: any) =>\n          new TypeaheadMatch(\n            option,\n            getValueFromObject(option, this.typeaheadOptionField)\n          )\n      );\n    }\n  }\n\n  protected hasMatches(): boolean {\n    return this._matches.length > 0;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{selector: '[typeahead]', exportAs: 'bs-typeahead'}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: NgControl, },\n{type: ElementRef, },\n{type: ViewContainerRef, },\n{type: Renderer2, },\n{type: ComponentLoaderFactory, },\n{type: ChangeDetectorRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'typeahead': [{ type: Input },],\n'typeaheadMinLength': [{ type: Input },],\n'typeaheadWaitMs': [{ type: Input },],\n'typeaheadOptionsLimit': [{ type: Input },],\n'typeaheadOptionField': [{ type: Input },],\n'typeaheadGroupField': [{ type: Input },],\n'typeaheadAsync': [{ type: Input },],\n'typeaheadLatinize': [{ type: Input },],\n'typeaheadSingleWords': [{ type: Input },],\n'typeaheadWordDelimiters': [{ type: Input },],\n'typeaheadPhraseDelimiters': [{ type: Input },],\n'typeaheadItemTemplate': [{ type: Input },],\n'optionsListTemplate': [{ type: Input },],\n'typeaheadScrollable': [{ type: Input },],\n'typeaheadOptionsInScrollableView': [{ type: Input },],\n'typeaheadLoading': [{ type: Output },],\n'typeaheadNoResults': [{ type: Output },],\n'typeaheadOnSelect': [{ type: Output },],\n'typeaheadOnBlur': [{ type: Output },],\n'container': [{ type: Input },],\n'dropup': [{ type: Input },],\n'onInput': [{ type: HostListener, args: ['input', ['$event'], ] },],\n'onChange': [{ type: HostListener, args: ['keyup', ['$event'], ] },],\n'onFocus': [{ type: HostListener, args: ['click', ] },{ type: HostListener, args: ['focus', ] },],\n'onBlur': [{ type: HostListener, args: ['blur', ] },],\n'onKeydown': [{ type: HostListener, args: ['keydown', ['$event'], ] },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule, ModuleWithProviders } from '@angular/core';\n\nimport { TypeaheadContainerComponent } from './typeahead-container.component';\nimport { TypeaheadDirective } from './typeahead.directive';\nimport { ComponentLoaderFactory } from '../component-loader/index';\nimport { PositioningService } from '../positioning/index';\n\n\nexport class TypeaheadModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: TypeaheadModule,\n      providers: [ComponentLoaderFactory, PositioningService]\n    };\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  imports: [CommonModule],\n  declarations: [TypeaheadContainerComponent, TypeaheadDirective],\n  exports: [TypeaheadContainerComponent, TypeaheadDirective],\n  entryComponents: [TypeaheadContainerComponent]\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Facet } from './models/facet';\nexport class FacetSelect {\n/**\n * @param {?} facet\n */\nconstructor(public facet: Facet) {}\n}\n\nfunction FacetSelect_tsickle_Closure_declarations() {\n/** @type {?} */\nFacetSelect.prototype.facet;\n}\n\nexport class FacetDeselect {\n/**\n * @param {?} facet\n */\nconstructor(public facet: Facet) {}\n}\n\nfunction FacetDeselect_tsickle_Closure_declarations() {\n/** @type {?} */\nFacetDeselect.prototype.facet;\n}\n\nexport class FacetDeselectAll {\nconstructor() {}\n}\n\nexport type FacetEvent = FacetSelect | FacetDeselect | FacetDeselectAll;","import { Component, Input, EventEmitter, Output } from '@angular/core';\nimport { FacetEvent, FacetSelect, FacetDeselect, FacetDeselectAll } from './facet-events';\nimport { Facet } from './models/facet';\nexport class FacetContainerComponent {\n\n     header: string = 'Selected:';\n     clearTooltip: string = 'Clear All';\n     emptyText: string = 'No Items';\n     facets: Facet[] = [];\n\n     facetsChange: EventEmitter<Facet[]> = new EventEmitter<Facet[]>();\n     events: EventEmitter<FacetEvent> = new EventEmitter<FacetEvent>();\n/**\n * @param {?} facet\n * @return {?}\n */\nselectFacet(facet: Facet): void {\n        // push the facet on to the list\n        this.facets.push(facet);\n\n        // update the two way binding\n        this.facetsChange.emit(this.facets);\n\n        // trigger event\n        this.triggerEvent(new FacetSelect(facet));\n    }\n/**\n * @param {?} facet\n * @return {?}\n */\ndeselectFacet(facet: Facet): void {\n\n        // find the index of the item in the selected array\n        let /** @type {?} */ idx = this.facets.findIndex(selectedFacet => facet === selectedFacet);\n\n        // if match there was no match then finish\n        if (idx === -1) {\n            return;\n        }\n\n        // remove the last item\n        this.facets.splice(idx, 1);\n\n        // update the two way binding\n        this.facetsChange.emit(this.facets);\n\n        // trigger event\n        this.triggerEvent(new FacetDeselect(facet));\n    }\n/**\n * @return {?}\n */\ndeselectAllFacets(): void {\n\n        // empty the selected array\n        this.facets = [];\n\n        // update the two way binding\n        this.facetsChange.emit(this.facets);\n\n        // trigger event\n        this.triggerEvent(new FacetDeselectAll());\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nprivate triggerEvent(event: FacetEvent) {\n        this.events.next(event);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-facet-container',\n    template: `\n      <!-- Display Any Selected Facets -->\n      <div class=\"facets-selected-container\">\n\n          <!-- Display Title an Clear Button -->\n          <div class=\"facets-selected-header-container\">\n\n              <!-- Show The Selected Text -->\n              <span class=\"facets-selected-header-label\">{{ header }}</span>\n\n              <!-- Add a Clear Button -->\n              <div class=\"facets-selected-clear-button\" tabindex=\"0\" [uxTooltip]=\"clearTooltip\" placement=\"left\" (click)=\"deselectAllFacets()\"\n                  (keyup.enter)=\"deselectAllFacets()\" *ngIf=\"facets.length > 0\">\n\n                  <svg class=\"facets-selected-clear-graphic\" viewBox=\"0 0 19 12\" shape-rendering=\"geometricPrecision\">\n                      <rect class=\"light-grey\" x=\"0\" y=\"2\" width=\"7\" height=\"2\"></rect>\n                      <rect class=\"dark-grey\" x=\"0\" y=\"5\" width=\"9\" height=\"2\"></rect>\n                      <rect class=\"light-grey\" x=\"0\" y=\"8\" width=\"7\" height=\"2\"></rect>\n                      <path class=\"dark-grey\" d=\"M9,1 h1 l9,9 v1 h-1 l-9,-9 v-1 Z\"></path>\n                      <path class=\"dark-grey\" d=\"M9,11 v-1 l9,-9 h1 v1 l-9,9 h-1 Z\"></path>\n                  </svg>\n              </div>\n\n          </div>\n\n          <!-- Display Tags For Selected Items -->\n          <div class=\"facets-selected-list\">\n\n              <!-- Show Selected Tags -->\n              <div class=\"facet-selected-tag\" tabindex=\"0\" *ngFor=\"let facet of facets\" (mousedown)=\"$event.preventDefault()\" (click)=\"deselectFacet(facet)\" (keyup.enter)=\"deselectFacet(facet)\">\n\n                  <!-- Display Label -->\n                  <span class=\"facet-selected-tag-label\">{{ facet.title }}</span>\n\n                  <!-- Display Remove Icon -->\n                  <span class=\"hpe-icon hpe-close\"></span>\n              </div>\n\n          </div>\n\n          <!-- Show Message Here if No Facets Selected -->\n          <p class=\"facets-selected-none-label\" *ngIf=\"emptyText && facets.length === 0\">{{ emptyText }}</p>\n\n      </div>\n\n      <!-- Any Facet Elements Should be Added Here By User -->\n      <div class=\"facets-region\">\n          <ng-content></ng-content>\n      </div>\n    `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'header': [{ type: Input },],\n'clearTooltip': [{ type: Input },],\n'emptyText': [{ type: Input },],\n'facets': [{ type: Input },],\n'facetsChange': [{ type: Output },],\n'events': [{ type: Output },],\n};\n}\n\nfunction FacetContainerComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nFacetContainerComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFacetContainerComponent.ctorParameters;\n/** @type {?} */\nFacetContainerComponent.propDecorators;\n/** @type {?} */\nFacetContainerComponent.prototype.header;\n/** @type {?} */\nFacetContainerComponent.prototype.clearTooltip;\n/** @type {?} */\nFacetContainerComponent.prototype.emptyText;\n/** @type {?} */\nFacetContainerComponent.prototype.facets;\n/** @type {?} */\nFacetContainerComponent.prototype.facetsChange;\n/** @type {?} */\nFacetContainerComponent.prototype.events;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Host, Input, Output, EventEmitter, OnInit, ElementRef } from '@angular/core';\nimport { FacetContainerComponent } from '../../facet-container.component';\nimport { FacetEvent, FacetDeselectAll, FacetDeselect, FacetSelect } from '../../facet-events';\nimport { Facet } from '../../models/facet';\nimport { Subject } from 'rxjs/Subject';\nimport'rxjs/add/operator/filter';\nexport class FacetBaseComponent implements OnInit {\n\n     selected: Facet[] = [];\n     selectedChange: EventEmitter<Facet[]> = new EventEmitter<Facet[]>();\n\n     events: Subject<FacetEvent> = new Subject<FacetEvent>();\n/**\n * @param {?} facetContainer\n * @param {?} _elementRef\n */\nconstructor(\nprivate facetContainer: FacetContainerComponent,\npublic _elementRef: ElementRef) {\n\n        if (facetContainer) {\n\n            // subscribe to any deselect events from the facet container\n            facetContainer.events.filter(event => event instanceof FacetDeselect)\n                .filter((event: FacetDeselect) => !!this.selected.find(facet => facet === event.facet))\n                .subscribe((event: FacetDeselect) => this.deselectFacet(event.facet));\n\n            // subscribe to any deselect all events from facet container\n            facetContainer.events.filter(event => event instanceof FacetDeselectAll).subscribe(_ => this.deselectAll());\n\n        }\n    }\n/**\n * @return {?}\n */\nngOnInit(): void {\n        // check if there should be any facets initially selected\n        if (this.facetContainer) {\n            this.selected.forEach(facet => this.facetContainer.selectFacet(facet));\n        }\n    }\n/**\n * @param {?} facet\n * @return {?}\n */\nselectFacet(facet: Facet): void {\n\n        // if the facet is disabled it should not be selected\n        if (facet.disabled) {\n            return;\n        }\n\n        // add the facet to the list of selected facets\n        this.selected.push(facet);\n\n        // send the new value to the event emitter\n        this.selectedChange.emit(this.selected);\n\n        // fire the event to the observable\n        this.triggerEvent(new FacetSelect(facet));\n\n        // tell the facet container about the selected facet\n        if (this.facetContainer) {\n            this.facetContainer.selectFacet(facet);\n        }\n    }\n/**\n * @param {?} facet\n * @return {?}\n */\ndeselectFacet(facet: Facet): void {\n\n        // find facet to remove\n        let /** @type {?} */ index = this.selected.findIndex(selectedFacet => selectedFacet === facet);\n\n        // only continue if facet is found\n        if (index !== -1) {\n\n            // remove the facet from the selected list\n            this.selected.splice(index, 1);\n\n            // emit the changes to selected event emitter\n            this.selectedChange.emit(this.selected);\n\n            // fire the event to the observable\n            this.triggerEvent(new FacetDeselect(facet));\n\n            // deselect the facet in the facet container\n            if (this.facetContainer) {\n                this.facetContainer.deselectFacet(facet);\n            }\n        }\n    }\n/**\n * @return {?}\n */\ndeselectAll(): void {\n\n        // remove all selected facets\n        this.selected = [];\n\n        // fire the event to the observable\n        this.triggerEvent(new FacetDeselectAll());\n\n        // emit the changes to the selected event emitter\n        this.selectedChange.emit(this.selected);\n    }\n/**\n * @param {?} facet\n * @return {?}\n */\ntoggleFacetSelection(facet: Facet): void {\n\n        // if the facet is selected then deselect - otherwise select it\n        if (this.isFacetSelected(facet)) {\n            this.deselectFacet(facet);\n        } else {\n            this.selectFacet(facet);\n        }\n\n    }\n/**\n * @param {?} facet\n * @return {?}\n */\nisFacetSelected(facet: Facet): boolean {\n        // determine if a facet is currently selected\n        return !!this.selected.find(selectedFacet => selectedFacet === facet);\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nprivate triggerEvent(event: FacetEvent): void {\n        this.events.next(event);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-facet-base',\n    template: '',\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: FacetContainerComponent, decorators: [{ type: Host }, ]},\n{type: ElementRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'selected': [{ type: Input },],\n'selectedChange': [{ type: Output },],\n'events': [{ type: Output },],\n};\n}\n\nfunction FacetBaseComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nFacetBaseComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFacetBaseComponent.ctorParameters;\n/** @type {?} */\nFacetBaseComponent.propDecorators;\n/** @type {?} */\nFacetBaseComponent.prototype.selected;\n/** @type {?} */\nFacetBaseComponent.prototype.selectedChange;\n/** @type {?} */\nFacetBaseComponent.prototype.events;\n/** @type {?} */\nFacetBaseComponent.prototype.facetContainer;\n/** @type {?} */\nFacetBaseComponent.prototype._elementRef;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Output, EventEmitter, Input } from '@angular/core';\nexport class FacetHeaderComponent {\n\n     header: string;\n     canExpand: boolean = true;    \n     expanded: boolean = true;\n     expandedChange: EventEmitter<boolean> = new EventEmitter<boolean>();\n/**\n * @return {?}\n */\ntoggleExpand(): void {\n\n        // if not expandable then do nothing\n        if (this.canExpand) {\n            this.expanded = !this.expanded;\n            this.expandedChange.emit(this.expanded);\n        }\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-facet-header',\n    template: `\n      <span class=\"facet-header-title\">{{ header }}</span>\n      <span class=\"hpe-icon\" [class.hpe-down]=\"expanded\" [class.hpe-previous]=\"!expanded\" *ngIf=\"canExpand\"></span>\n    `,\n    host: {\n        'tabindex': '0',\n        '(click)': 'toggleExpand()',\n        '(keyup.enter)': 'toggleExpand()'\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'header': [{ type: Input },],\n'canExpand': [{ type: Input },],\n'expanded': [{ type: Input },],\n'expandedChange': [{ type: Output },],\n};\n}\n\nfunction FacetHeaderComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nFacetHeaderComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFacetHeaderComponent.ctorParameters;\n/** @type {?} */\nFacetHeaderComponent.propDecorators;\n/** @type {?} */\nFacetHeaderComponent.prototype.header;\n/** @type {?} */\nFacetHeaderComponent.prototype.canExpand;\n/** @type {?} */\nFacetHeaderComponent.prototype.expanded;\n/** @type {?} */\nFacetHeaderComponent.prototype.expandedChange;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Input } from '@angular/core';\nimport { FacetBaseComponent } from '../base/facet-base/facet-base.component';\nimport { Facet } from '../models/facet';\nexport class FacetCheckListComponent extends FacetBaseComponent {\n\n     facets: Facet[] = [];\n     header: string;\n     scrollbar: boolean = true;\n     expanded: boolean = true;\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-facet-check-list',\n    template: `\n      <ux-facet-header [header]=\"header\" [(expanded)]=\"expanded\"></ux-facet-header>\n\n      <!-- Create a container which will show when section is expanded -->\n      <div class=\"facet-check-list-container\" [class.facet-check-list-scrollbar]=\"scrollbar\" *ngIf=\"expanded\">\n\n          <!-- Iterate through each possible facet -->\n          <div class=\"facet-check-list-item\" *ngFor=\"let facet of facets\" [class.facet-active]=\"isFacetSelected(facet)\" tabindex=\"0\"\n              (click)=\"toggleFacetSelection(facet)\" (keyup.enter)=\"toggleFacetSelection(facet)\" [class.disabled]=\"facet.disabled\">\n\n              <!-- Show check icon to indicate the state -->\n              <span class=\"facet-check-list-item-check\">\n                  <span class=\"hpe-icon hpe-active\"></span>\n              </span>\n\n              <!-- Display the title -->\n              <span class=\"facet-check-list-item-title\">{{ facet.title }}</span>\n\n              <!-- Display the count if specified -->\n              <span class=\"facet-check-list-item-count\" *ngIf=\"facet.count !== undefined\">({{ facet.count }})</span>\n          </div>\n      </div>\n    `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'facets': [{ type: Input },],\n'header': [{ type: Input },],\n'scrollbar': [{ type: Input },],\n'expanded': [{ type: Input },],\n};\n}\n\nfunction FacetCheckListComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nFacetCheckListComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFacetCheckListComponent.ctorParameters;\n/** @type {?} */\nFacetCheckListComponent.propDecorators;\n/** @type {?} */\nFacetCheckListComponent.prototype.facets;\n/** @type {?} */\nFacetCheckListComponent.prototype.header;\n/** @type {?} */\nFacetCheckListComponent.prototype.scrollbar;\n/** @type {?} */\nFacetCheckListComponent.prototype.expanded;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, OnInit, Input, Host, Pipe, PipeTransform } from '@angular/core';\nimport { FacetBaseComponent } from '../base/facet-base/facet-base.component';\nimport { Observable } from 'rxjs/Observable';\nimport { Facet } from '../models/facet';\nimport { FacetContainerComponent } from '../facet-container.component';\nimport { TypeaheadMatch } from 'ngx-bootstrap/typeahead';\nimport'rxjs/add/operator/map';\nimport'rxjs/add/observable/of';\nimport { Observer } from 'rxjs/Observer';\nexport class FacetTypeaheadListComponent extends FacetBaseComponent implements OnInit {\n\n     facets: Facet[] | Observable<Facet[]>;\n     header: string;\n     expanded: boolean = true;\n     typeaheadConfig: FacetTypeaheadListConfig = {};\n     suggestions: Facet[] = [];\n     simplified: boolean = true;\n\n    typeaheadOptions: Observable<Facet[]>;\n    searchQuery: string;\nprivate _nativeElement: HTMLElement = /** @type {?} */(( this._elementRef.nativeElement as HTMLElement));\nprivate _defaultTypeaheadConfig: FacetTypeaheadListConfig = {\n        placeholder: '',\n        maxResults: 50,\n        minCharacters: 1\n    };\n/**\n * @return {?}\n */\nngOnInit() {\n\n        // wrap the observable and filter out any already selected items or any disabled items\n        if (this.facets instanceof Observable) {\n\n            // handle an observable of data\n            this.typeaheadOptions = Observable.from(this.facets).map((facets: Facet[]) => {\n\n                // remove disabled facets, selected facets and facets that dont match search term\n                return facets.filter(facet => !facet.disabled)\n                    .filter(facet => !this.selected.find(selectedFacet => selectedFacet === facet))\n                    .filter(facet => facet.title.toUpperCase().includes(this.searchQuery.toUpperCase()));\n            });\n\n        } else {\n\n            // handle an array of data\n            this.typeaheadOptions = Observable.of(this.facets).map((facets: Facet[]) => {\n\n                // remove disabled facets, selected facets and facets that dont match search term\n                return facets.filter(facet => !facet.disabled)\n                    .filter(facet => !this.selected.find(selectedFacet => selectedFacet === facet))\n                    .filter(facet => facet.title.toUpperCase().includes(this.searchQuery.toUpperCase()));\n            });\n        }\n\n        // provide default values for typeahead config\n        for (let /** @type {?} */ prop in this._defaultTypeaheadConfig) {\n\n            // check if prop has been defined in the users typeahead config - if not set default value\n            if (this.typeaheadConfig.hasOwnProperty(prop) === false) {\n                this.typeaheadConfig[prop] = this._defaultTypeaheadConfig[prop];\n            }\n        }\n    }\n/**\n * @param {?} typeaheadOption\n * @return {?}\n */\nselectOption(typeaheadOption: TypeaheadMatch) {\n\n        // check to make sure that the item is not currently selected\n        if (this.selected.find(facet => facet === typeaheadOption.item)) {\n            return;\n        }\n\n        // select the facet\n        this.selectFacet(typeaheadOption.item);\n\n        // clear the typeahead\n        this.searchQuery = '';\n    }\n/**\n * @return {?}\n */\nscrollToFocused(): void {\n\n        let /** @type {?} */ dropdown = this._nativeElement.querySelector('.dropdown-menu');\n\n        // delay to allow the typeahead ui to update\n        setTimeout(() => {\n\n            // find the currently active element if there is one\n            let /** @type {?} */ activeElement = dropdown.querySelector('.dropdown-menu > li.active');\n\n            if (activeElement) {\n\n                // check if element is not in view\n                let /** @type {?} */ elementBounds = activeElement.getBoundingClientRect();\n                let /** @type {?} */ dropdownBounds = dropdown.getBoundingClientRect();\n\n                if (elementBounds.top < dropdownBounds.top) {\n                    dropdown.scrollTop += elementBounds.top - dropdownBounds.top;\n                }\n\n                if (elementBounds.bottom > dropdownBounds.bottom) {\n                    dropdown.scrollTop += elementBounds.bottom - dropdownBounds.bottom;\n                }\n            }\n        });\n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-facet-typeahead-list',\n    template: `\n      <ux-facet-header [header]=\"header\" [(expanded)]=\"expanded\"></ux-facet-header>\n\n      <div class=\"facet-typeahead-list-container\" *ngIf=\"expanded\">\n\n          <div class=\"facet-typeahead-list-selected-container\" *ngIf=\"suggestions?.length > 0\">\n\n              <div class=\"facet-typeahead-list-selected-option\" tabindex=\"0\" *ngFor=\"let facet of suggestions\" (click)=\"toggleFacetSelection(facet)\"\n                  (keyup.enter)=\"toggleFacetSelection(facet)\">\n\n                  <ux-checkbox [clickable]=\"false\" [value]=\"isFacetSelected(facet)\" [simplified]=\"simplified\">\n                      <span class=\"facet-typeahead-list-selected-option-title\">{{ facet.title }}</span>\n                      <span class=\"facet-typeahead-list-selected-option-count\">({{ facet.count }})</span>\n                  </ux-checkbox>\n\n              </div>\n\n          </div>\n\n          <div class=\"facet-typeahead-list-control\">\n\n              <!-- Create Typeahead Control -->\n              <input type=\"text\" class=\"form-control\" [placeholder]=\"typeaheadConfig?.placeholder\" [typeahead]=\"typeaheadOptions\" [(ngModel)]=\"searchQuery\"\n                  [typeaheadMinLength]=\"typeaheadConfig?.minCharacters\" [typeaheadOptionsLimit]=\"typeaheadConfig?.maxResults\" [typeaheadWaitMs]=\"typeaheadConfig?.delay\"\n                  (typeaheadOnSelect)=\"selectOption($event)\" [typeaheadItemTemplate]=\"facetOptionTemplate\" (keyup.ArrowUp)=\"scrollToFocused()\" (keyup.ArrowDown)=\"scrollToFocused()\">\n\n          </div>\n\n      </div>\n\n      <ng-template #facetOptionTemplate let-model=\"item\" let-index=\"index\">\n          <p class=\"facet-typeahead-list-option\"><span [innerHTML]=\"model.title | facetTypeaheadHighlight: searchQuery\"></span> <span class=\"facet-typeahead-list-option-count\"\n                  *ngIf=\"model.count\">({{ model.count }})</span></p>\n      </ng-template>\n    `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'facets': [{ type: Input },],\n'header': [{ type: Input },],\n'expanded': [{ type: Input },],\n'typeaheadConfig': [{ type: Input },],\n'suggestions': [{ type: Input },],\n'simplified': [{ type: Input },],\n};\n}\n\nfunction FacetTypeaheadListComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nFacetTypeaheadListComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFacetTypeaheadListComponent.ctorParameters;\n/** @type {?} */\nFacetTypeaheadListComponent.propDecorators;\n/** @type {?} */\nFacetTypeaheadListComponent.prototype.facets;\n/** @type {?} */\nFacetTypeaheadListComponent.prototype.header;\n/** @type {?} */\nFacetTypeaheadListComponent.prototype.expanded;\n/** @type {?} */\nFacetTypeaheadListComponent.prototype.typeaheadConfig;\n/** @type {?} */\nFacetTypeaheadListComponent.prototype.suggestions;\n/** @type {?} */\nFacetTypeaheadListComponent.prototype.simplified;\n/** @type {?} */\nFacetTypeaheadListComponent.prototype.typeaheadOptions;\n/** @type {?} */\nFacetTypeaheadListComponent.prototype.searchQuery;\n/** @type {?} */\nFacetTypeaheadListComponent.prototype._nativeElement;\n/** @type {?} */\nFacetTypeaheadListComponent.prototype._defaultTypeaheadConfig;\n}\n\n\nexport interface FacetTypeaheadListConfig {\n    placeholder?: string;\n    minCharacters?: number;\n    maxResults?: number;\n    delay?: number;\n}\nexport class FacetTypeaheadHighlight implements PipeTransform {\n/**\n * @param {?} value\n * @param {?} searchQuery\n * @return {?}\n */\ntransform(value: string, searchQuery: string): string {\n        let /** @type {?} */ regex = new RegExp(searchQuery, 'i');\n        return value.replace(regex, `<b class=\"facet-typeahead-highlighted\">${ value.match(regex) }</b>`);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Pipe, args: [{\n    name: 'facetTypeaheadHighlight'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction FacetTypeaheadHighlight_tsickle_Closure_declarations() {\n/** @type {?} */\nFacetTypeaheadHighlight.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFacetTypeaheadHighlight.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, TemplateRef, OnDestroy } from '@angular/core';\nimport { AnchorPlacement } from './tooltip.directive';\nimport { Subject } from 'rxjs/Subject';\n\nlet /** @type {?} */ uniqueTooltipId = 0;\nexport class TooltipComponent implements OnDestroy {\n/**\n * Define a unique id for each tooltip\n */\nid: string = `ux-tooltip-${++uniqueTooltipId}`;\n/**\n * Define the tooltip role\n */\nrole: string = 'tooltip';\n/**\n * The content of the tooltip, either a string or a TemplateRef for further customization\n */\ncontent: string | TemplateRef<any>;\n/**\n * Allow the user to supply a context for the tooltip TemplateRef\n */\ncontext: any;\n/**\n * The position the tooltip should display relative to the associated element\n */\nplacement: AnchorPlacement;\n/**\n * Allow a custom class to be added to the tooltip to allow custom styling\n */\ncustomClass: string = '';\n/**\n * Indicates whether or not the content is a string or a TemplateRef\n */\nisTemplateRef: boolean = false;\n/**\n * Emit when the tooltip need to update it's position\n */\nreposition$ = new Subject<void>();\n/**\n * @param {?} _changeDetectorRef\n */\nconstructor(protected _changeDetectorRef: ChangeDetectorRef) {}\n/**\n * Cleanup after the component is destroyed\n * @return {?}\n */\nngOnDestroy(): void {\n    this.reposition$.complete();\n  }\n/**\n * Inform the parent directive that it needs to recalulate the position\n * @return {?}\n */\nreposition(): void {\n    this.reposition$.next();\n  }\n/**\n * This will update the content of the tooltip and trigger change detection\n * @param {?} content\n * @return {?}\n */\nsetContent(content: string | TemplateRef<any>): void {\n    this.content = content;\n    this.isTemplateRef = content instanceof TemplateRef;\n    this._changeDetectorRef.markForCheck();\n  }\n/**\n * This will update the tooltip placement and trigger change detection\n * @param {?} placement\n * @return {?}\n */\nsetPlacement(placement: AnchorPlacement) {\n\n    if (!placement) {\n      return;\n    }\n\n    this.placement = placement;\n    this._changeDetectorRef.markForCheck();\n  }\n/**\n * This will set a custom class on the tooltip and trigger change detection\n * @param {?} customClass\n * @return {?}\n */\nsetClass(customClass: string): void {\n\n    if (!customClass) {\n      return;\n    }\n\n    this.customClass = customClass;\n    this._changeDetectorRef.markForCheck();\n  }\n/**\n * Updates the context used by the TemplateRef\n * @param {?} context\n * @return {?}\n */\nsetContext(context: any): void {\n\n    if (!context) {\n      return;\n    }\n\n    this.context = context;\n    this._changeDetectorRef.markForCheck();\n  }\n/**\n * Specify the tooltip role attribute\n * @param {?} role\n * @return {?}\n */\nsetRole(role: string): void {\n\n    if (!role) {\n      return;\n    }\n\n    this.role = role;\n    this._changeDetectorRef.markForCheck();\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'ux-tooltip',\n  template: `\n    <div class=\"tooltip in\" [id]=\"id\" [attr.role]=\"role\" [ngClass]=\"[placement, customClass]\">\n        <div class=\"tooltip-arrow\"></div>\n        <div class=\"tooltip-inner\" (cdkObserveContent)=\"reposition()\">\n            <ng-container *ngIf=\"!isTemplateRef\">{{ content }}</ng-container>\n            <ng-container *ngIf=\"isTemplateRef\" [ngTemplateOutlet]=\"content\" [ngTemplateOutletContext]=\"context\"></ng-container>\n        </div>\n    </div>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ChangeDetectorRef, },\n];\n}\n\nfunction TooltipComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nTooltipComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTooltipComponent.ctorParameters;\n/**\n * Define a unique id for each tooltip\n * @type {?}\n */\nTooltipComponent.prototype.id;\n/**\n * Define the tooltip role\n * @type {?}\n */\nTooltipComponent.prototype.role;\n/**\n * The content of the tooltip, either a string or a TemplateRef for further customization\n * @type {?}\n */\nTooltipComponent.prototype.content;\n/**\n * Allow the user to supply a context for the tooltip TemplateRef\n * @type {?}\n */\nTooltipComponent.prototype.context;\n/**\n * The position the tooltip should display relative to the associated element\n * @type {?}\n */\nTooltipComponent.prototype.placement;\n/**\n * Allow a custom class to be added to the tooltip to allow custom styling\n * @type {?}\n */\nTooltipComponent.prototype.customClass;\n/**\n * Indicates whether or not the content is a string or a TemplateRef\n * @type {?}\n */\nTooltipComponent.prototype.isTemplateRef;\n/**\n * Emit when the tooltip need to update it's position\n * @type {?}\n */\nTooltipComponent.prototype.reposition$;\n/** @type {?} */\nTooltipComponent.prototype._changeDetectorRef;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable } from '@angular/core';\nimport { TooltipComponent } from './tooltip.component';\nimport { Subject } from 'rxjs/Subject';\nexport class TooltipService {\n    shown$ = new Subject<TooltipComponent>();\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction TooltipService_tsickle_Closure_declarations() {\n/** @type {?} */\nTooltipService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTooltipService.ctorParameters;\n/** @type {?} */\nTooltipService.prototype.shown$;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { OriginConnectionPosition, Overlay, OverlayConnectionPosition, OverlayRef, ScrollDispatcher } from '@angular/cdk/overlay';\nimport { ComponentPortal } from '@angular/cdk/portal';\nimport { ChangeDetectorRef, Directive, ElementRef, EventEmitter, Input, OnChanges, OnDestroy, OnInit, Output, Renderer2, SimpleChanges, TemplateRef, ViewContainerRef } from '@angular/core';\nimport { Subject } from 'rxjs/Subject';\nimport { fromEvent } from 'rxjs/observable/fromEvent';\nimport { filter, takeUntil } from 'rxjs/operators';\nimport { TooltipComponent } from './tooltip.component';\nimport { TooltipService } from './tooltip.service';\nexport class TooltipDirective implements OnInit, OnChanges, OnDestroy {\n/**\n * Contains the content of the tooltip or a TemplateRef for more detailed content\n */\ncontent: string | TemplateRef<any>;\n/**\n * Allow the tooltip to be conditionally disabled\n */\ndisabled: boolean;\n/**\n * All the user to add a custom class to the tooltip\n */\ncustomClass: string = '';\n/**\n * All the user to add a role to the tooltip - default is tooltip\n */\nrole: string = 'tooltip';\n/**\n * Provide the TemplateRef a context object\n */\ncontext: any = {};\n/**\n * Delay the showing of the tooltip by a number of miliseconds\n */\ndelay: number = 0;\n/**\n * Programmatically show and hide the tooltip\n */\nisOpen: boolean = false;\n/**\n * Customize how the tooltip should be positioned relative to the element\n */\nplacement: AnchorPlacement = 'top';\n/**\n * Specify which events should show the tooltip\n */\nshowTriggers: string[] = ['mouseenter', 'focus'];\n/**\n * Specify which events should hide the tooltip\n */\nhideTriggers: string[] = ['mouseleave', 'blur'];\n/**\n * Emits an event when the tooltip is shown\n */\nshown = new EventEmitter<void>();\n/**\n * Emits a event when the tooltip is hidden\n */\nhidden = new EventEmitter<void>();\n/**\n * Allow two way binding to track the visibility of the tooltip\n */\nisOpenChange = new EventEmitter<boolean>();\n/**\n * Keep track of the tooltip visibility\n */\nisVisible: boolean = false;\n/**\n * A reference to the CDK portal containing the overlay\n */\nprotected _portal: ComponentPortal<TooltipComponent>;\n/**\n * A reference to the overlay the tooltip will be inserted into\n */\nprotected _overlayRef: OverlayRef;\n/**\n * A reference to the instance of the tooltip component when created\n */\nprotected _instance: TooltipComponent;\n/**\n * This will emit when the directive is destroyed allowing us to unsubscribe all subscriptions automatically\n */\nprotected _onDestroy = new Subject<void>();\n/**\n * Store the timeout interval for cancelation\n */\nprivate _showTimeoutId: number;\n/**\n * Internally store the type of this component - usual for distinctions when extending this class\n */\nprotected _type: string = 'tooltip';\n/**\n * @param {?} _elementRef\n * @param {?} _viewContainerRef\n * @param {?} _overlay\n * @param {?} _scrollDispatcher\n * @param {?} _changeDetectorRef\n * @param {?} _renderer\n * @param {?} _tooltipService\n */\nconstructor(\n        protected _elementRef: ElementRef,\n        protected _viewContainerRef: ViewContainerRef,\n        protected _overlay: Overlay,\n        protected _scrollDispatcher: ScrollDispatcher,\nprivate _changeDetectorRef: ChangeDetectorRef,\nprivate _renderer: Renderer2,\nprivate _tooltipService: TooltipService\n    ) { }\n/**\n * Set up the triggers and bind to the show/hide events to keep visibility in sync\n * @return {?}\n */\nngOnInit(): void {\n\n        // set up show and hide event triggers\n        fromEvent(this._elementRef.nativeElement, 'click').pipe(takeUntil(this._onDestroy)).subscribe(this.onClick.bind(this));\n        fromEvent(this._elementRef.nativeElement, 'mouseenter').pipe(takeUntil(this._onDestroy)).subscribe(this.onMouseEnter.bind(this));\n        fromEvent(this._elementRef.nativeElement, 'mouseleave').pipe(takeUntil(this._onDestroy)).subscribe(this.onMouseLeave.bind(this));\n        fromEvent(this._elementRef.nativeElement, 'focus').pipe(takeUntil(this._onDestroy)).subscribe(this.onFocus.bind(this));\n        fromEvent(this._elementRef.nativeElement, 'blur').pipe(takeUntil(this._onDestroy)).subscribe(this.onBlur.bind(this));\n\n        // when any other tooltips open hide this one\n        this._tooltipService.shown$.pipe(\n            filter(() => this._type === 'tooltip'),\n            filter(tooltip => tooltip !== this._instance),\n            takeUntil(this._onDestroy)\n        ).subscribe(this.hide.bind(this));\n\n        // if the tooltip should be initially visible then open it\n        if (this.isOpen) {\n            this.show();\n        }\n    }\n/**\n * We need to send input changes to the tooltip component\n * We can't use setters as they may trigger before tooltip initialised and can't resend once initialised\n * \n * @param {?} changes\n * @return {?}\n */\nngOnChanges(changes: SimpleChanges): void {\n\n        // we can ignore the first change as it's handled in ngOnInit\n        if (changes.isOpen && !changes.isOpen.firstChange && changes.isOpen.currentValue !== this.isVisible) {\n            changes.isOpen.currentValue ? this.show() : this.hide();\n        }\n\n        // destroy the overlay ref so a new correctly positioned instance will be created next time\n        if (changes.placement) {\n            this.destroyOverlay();\n        }\n\n        if (this._instance && changes.placement) {\n            this._instance.setPlacement(changes.placement.currentValue);\n        }\n\n        if (this._instance && changes.content) {\n            this._instance.setContent(changes.content.currentValue);\n        }\n\n        if (this._instance && changes.customClass) {\n            this._instance.setClass(changes.customClass.currentValue);\n        }\n\n        if (this._instance && changes.context) {\n            this._instance.setContext(changes.context.currentValue);\n        }\n\n        if (this._instance && changes.role) {\n            this._instance.setContext(changes.role.currentValue);\n        }\n    }\n/**\n * Ensure we clean up after ourselves\n * @return {?}\n */\nngOnDestroy(): void {\n\n        // ensure we close the tooltip when the host is destroyed\n        if (this._overlayRef) {\n            this._overlayRef.dispose();\n            this._instance = null;\n        }\n\n        // emit this event to automatically unsubscribe from all subscriptions\n        this._onDestroy.next();\n        this._onDestroy.complete();\n    }\n/**\n * Make the tooltip open\n * @return {?}\n */\nshow(): void {\n\n        // if the tooltip is disabled then do nothing\n        if (this.disabled || this.isVisible || this._showTimeoutId || !this.content) {\n            return;\n        }\n\n        // delay the show by the delay amount\n        this._showTimeoutId = window.setTimeout(() => {\n\n            // create the tooltip and get the overlay ref\n            const /** @type {?} */ overlayRef = this.createOverlay();\n\n            // create the portal to create the tooltip component\n            this._portal = this.createPortal();\n            this._instance = this.createInstance(overlayRef);\n\n            // watch for any changes to the content\n            this._instance.reposition$.pipe(takeUntil(this._onDestroy)).subscribe(this.reposition.bind(this));\n\n            // store the visible state\n            this.isVisible = true;\n\n            // ensure the overlay has the correct initial position\n            this.reposition();\n\n            // emit the show events\n            this.shown.emit();\n            this.isOpenChange.next(true);\n\n            // clear the interval id\n            this._showTimeoutId = null;\n\n            // emit the show event to close any other tooltips\n            this._tooltipService.shown$.next(this._instance);\n\n            // ensure change detection is run\n            this._changeDetectorRef.detectChanges();\n        }, this.delay);\n\n    }\n/**\n * If a tooltip exists and is visible, hide it\n * @return {?}\n */\nhide() {\n\n        // if we are waiting to show a tooltip then cancel the pending timeout\n        if (this._showTimeoutId) {\n            clearTimeout(this._showTimeoutId);\n            this._showTimeoutId = null;\n            return;\n        }\n\n        if (this._overlayRef && this._overlayRef.hasAttached()) {\n            this._overlayRef.detach();\n        }\n\n        this.setAriaDescribedBy(null);\n        this._instance = null;\n\n        // store the visible state\n        this.isVisible = false;\n\n        // emit the hide events\n        this.hidden.emit();\n        this.isOpenChange.next(false);\n\n        // ensure change detection is run\n        this._changeDetectorRef.detectChanges();\n    }\n/**\n * Toggle the visibility of the tooltip\n * @return {?}\n */\ntoggle(): void {\n        this.isVisible ? this.hide() : this.show();\n    }\n/**\n * Recalculate the position of the popover\n * @return {?}\n */\nreposition(): void {\n        if (this.isVisible && this._overlayRef) {\n            this._overlayRef.updatePosition();\n        }\n    }\n/**\n * Create an instance from the overlay ref - allows overriding and additional logic here\n * @param {?} overlayRef\n * @return {?}\n */\nprotected createInstance(overlayRef: OverlayRef): TooltipComponent {\n        const /** @type {?} */ instance = /** @type {?} */(( overlayRef.attach(this._portal).instance as TooltipComponent));\n\n        // supply the tooltip with the correct properties\n        instance.setContent(this.content);\n        instance.setPlacement(this.placement);\n        instance.setClass(this.customClass);\n        instance.setContext(this.context);\n        instance.setRole(this.role);\n\n        // Update the aria-describedby attribute\n        this.setAriaDescribedBy(instance.id);\n\n        return instance;\n    }\n/**\n * Create the component portal - allows overriding to allow other portals eg. popovers\n * @return {?}\n */\nprotected createPortal(): ComponentPortal<any> {\n        return this._portal || new ComponentPortal(TooltipComponent, this._viewContainerRef);\n    }\n/**\n * Create the overlay and set up the scroll handling behavior\n * @return {?}\n */\nprivate createOverlay(): OverlayRef {\n\n        // if the tooltip has already been created then just return the existing instance\n        if (this._overlayRef) {\n            return this._overlayRef;\n        }\n\n        // configure the tooltip\n        const /** @type {?} */ strategy = this._overlay.position()\n            .connectedTo(this._elementRef, this.getOrigin(), this.getOverlayPosition());\n\n        // correctly handle scrolling\n        const /** @type {?} */ scrollableAncestors = this._scrollDispatcher\n            .getAncestorScrollContainers(this._elementRef);\n\n        strategy.withScrollableContainers(scrollableAncestors);\n\n        this._overlayRef = this._overlay.create({\n            positionStrategy: strategy,\n            panelClass: 'ux-overlay-pane',\n            scrollStrategy: this._overlay.scrollStrategies.reposition({ scrollThrottle: 0 }),\n            hasBackdrop: false\n        });\n\n        return this._overlayRef;\n    }\n/**\n * Recreate the overlay ref using the updated origin and overlay positions\n * @return {?}\n */\nprivate destroyOverlay(): void {\n\n        // destroy the existing overlay\n        if (this._overlayRef && this._overlayRef.hasAttached()) {\n            this._overlayRef.detach();\n        }\n\n        if (this._overlayRef) {\n            this._overlayRef.dispose();\n            this._overlayRef = null;\n        }\n\n        this.isVisible = false;\n    }\n/**\n * Get the origin position based on the specified tooltip placement\n * @return {?}\n */\nprivate getOrigin(): OriginConnectionPosition {\n\n        // ensure placement is defined\n        this.placement = this.placement || 'top';\n\n        if (this.placement == 'top' || this.placement == 'bottom') {\n            return { originX: 'center', originY: this.placement };\n        } else if (this.placement == 'left') {\n            return { originX: 'start', originY: 'center' };\n        } else if (this.placement == 'right') {\n            return { originX: 'end', originY: 'center' };\n        }\n    }\n/**\n * Calculate the overlay position based on the specified tooltip placement\n * @return {?}\n */\nprivate getOverlayPosition(): OverlayConnectionPosition {\n\n        // ensure placement is defined\n        this.placement = this.placement || 'top';\n\n        if (this.placement == 'top') {\n            return { overlayX: 'center', overlayY: 'bottom' };\n        } else if (this.placement == 'bottom') {\n            return { overlayX: 'center', overlayY: 'top' };\n        } else if (this.placement == 'left') {\n            return { overlayX: 'end', overlayY: 'center' };\n        } else if (this.placement == 'right') {\n            return { overlayX: 'start', overlayY: 'center' };\n        }\n    }\n/**\n * Simple utility method - because IE doesn't support array.includes\n * And it isn't included in the core-js/es6 polyfills which are the\n * only ones required by Angular and guaranteed to be there\n * \n * @template T\n * @param {?} array\n * @param {?} value\n * @return {?}\n */\nprotected includes<T>(array: Array<T>, value: T): boolean {\n        return Array.isArray(array) && !!array.find(item => item === value);\n    }\n/**\n * Handle the click event - show or hide accordingly\n * @param {?} event\n * @return {?}\n */\nprotected onClick(event: MouseEvent): void {\n\n        // if its not visible and click is a show trigger open it\n        if (!this.isVisible && this.includes(this.showTriggers, 'click')) {\n            return this.show();\n        }\n\n        // if its visible and click is a hide trigger close it\n        if (this.isVisible && this.includes(this.hideTriggers, 'click')) {\n            return this.hide();\n        }\n\n    }\n/**\n * Handle the mouse enter event - show or hide accordingly\n * @param {?} event\n * @return {?}\n */\nprotected onMouseEnter(event: MouseEvent): void {\n\n        // this is an show only trigger - if already open or it isn't a trigger do nothing\n        if (this.isVisible || !this.includes(this.showTriggers, 'mouseenter')) {\n            return;\n        }\n\n        // otherwise open the tooltip\n        this.show();\n    }\n/**\n * Handle the mouse leave event - show or hide accordingly\n * @param {?} event\n * @return {?}\n */\nprotected onMouseLeave(event: MouseEvent): void {\n\n        // this is an hide only trigger - if not open or it isn't a trigger do nothing\n        if (!this.isVisible || !this.includes(this.hideTriggers, 'mouseleave')) {\n            return;\n        }\n\n        // otherwise close the tooltip\n        this.hide();\n    }\n/**\n * Handle the focus event - show or hide accordingly\n * @param {?} event\n * @return {?}\n */\nprotected onFocus(event: Event): void {\n\n        // this is an show only trigger - if already open or it isn't a trigger do nothing\n        if (this.isVisible || !this.includes(this.showTriggers, 'focus')) {\n            return;\n        }\n\n        // otherwise open the tooltip\n        this.show();\n    }\n/**\n * Handle the blur event - show or hide accordingly\n * @param {?} event\n * @return {?}\n */\nprotected onBlur(event: Event): void {\n\n        // this is an hide only trigger - if not open or it isn't a trigger do nothing\n        if (!this.isVisible || !this.includes(this.hideTriggers, 'blur')) {\n            return;\n        }\n\n        // otherwise close the tooltip\n        this.hide();\n    }\n/**\n * Determine if the trigger element is focused\n * @return {?}\n */\nprivate isFocused(): boolean {\n        return document.activeElement === this._elementRef.nativeElement;\n    }\n/**\n * Programmatically update the aria-describedby property\n * @param {?} id\n * @return {?}\n */\nprotected setAriaDescribedBy(id: string | null): void {\n        if (id === null) {\n            this._renderer.removeAttribute(this._elementRef.nativeElement, 'aria-describedby');\n        } else {\n            this._renderer.setAttribute(this._elementRef.nativeElement, 'aria-describedby', id);\n        }\n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: '[uxTooltip]',\n    exportAs: 'ux-tooltip'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: ViewContainerRef, },\n{type: Overlay, },\n{type: ScrollDispatcher, },\n{type: ChangeDetectorRef, },\n{type: Renderer2, },\n{type: TooltipService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'content': [{ type: Input, args: ['uxTooltip', ] },],\n'disabled': [{ type: Input, args: ['tooltipDisabled', ] },],\n'customClass': [{ type: Input, args: ['tooltipClass', ] },],\n'role': [{ type: Input, args: ['tooltipRole', ] },],\n'context': [{ type: Input, args: ['tooltipContext', ] },],\n'delay': [{ type: Input, args: ['tooltipDelay', ] },],\n'isOpen': [{ type: Input },],\n'placement': [{ type: Input },],\n'showTriggers': [{ type: Input },],\n'hideTriggers': [{ type: Input },],\n'shown': [{ type: Output },],\n'hidden': [{ type: Output },],\n'isOpenChange': [{ type: Output },],\n};\n}\n\nfunction TooltipDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nTooltipDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTooltipDirective.ctorParameters;\n/** @type {?} */\nTooltipDirective.propDecorators;\n/**\n * Contains the content of the tooltip or a TemplateRef for more detailed content\n * @type {?}\n */\nTooltipDirective.prototype.content;\n/**\n * Allow the tooltip to be conditionally disabled\n * @type {?}\n */\nTooltipDirective.prototype.disabled;\n/**\n * All the user to add a custom class to the tooltip\n * @type {?}\n */\nTooltipDirective.prototype.customClass;\n/**\n * All the user to add a role to the tooltip - default is tooltip\n * @type {?}\n */\nTooltipDirective.prototype.role;\n/**\n * Provide the TemplateRef a context object\n * @type {?}\n */\nTooltipDirective.prototype.context;\n/**\n * Delay the showing of the tooltip by a number of miliseconds\n * @type {?}\n */\nTooltipDirective.prototype.delay;\n/**\n * Programmatically show and hide the tooltip\n * @type {?}\n */\nTooltipDirective.prototype.isOpen;\n/**\n * Customize how the tooltip should be positioned relative to the element\n * @type {?}\n */\nTooltipDirective.prototype.placement;\n/**\n * Specify which events should show the tooltip\n * @type {?}\n */\nTooltipDirective.prototype.showTriggers;\n/**\n * Specify which events should hide the tooltip\n * @type {?}\n */\nTooltipDirective.prototype.hideTriggers;\n/**\n * Emits an event when the tooltip is shown\n * @type {?}\n */\nTooltipDirective.prototype.shown;\n/**\n * Emits a event when the tooltip is hidden\n * @type {?}\n */\nTooltipDirective.prototype.hidden;\n/**\n * Allow two way binding to track the visibility of the tooltip\n * @type {?}\n */\nTooltipDirective.prototype.isOpenChange;\n/**\n * Keep track of the tooltip visibility\n * @type {?}\n */\nTooltipDirective.prototype.isVisible;\n/**\n * A reference to the CDK portal containing the overlay\n * @type {?}\n */\nTooltipDirective.prototype._portal;\n/**\n * A reference to the overlay the tooltip will be inserted into\n * @type {?}\n */\nTooltipDirective.prototype._overlayRef;\n/**\n * A reference to the instance of the tooltip component when created\n * @type {?}\n */\nTooltipDirective.prototype._instance;\n/**\n * This will emit when the directive is destroyed allowing us to unsubscribe all subscriptions automatically\n * @type {?}\n */\nTooltipDirective.prototype._onDestroy;\n/**\n * Store the timeout interval for cancelation\n * @type {?}\n */\nTooltipDirective.prototype._showTimeoutId;\n/**\n * Internally store the type of this component - usual for distinctions when extending this class\n * @type {?}\n */\nTooltipDirective.prototype._type;\n/** @type {?} */\nTooltipDirective.prototype._elementRef;\n/** @type {?} */\nTooltipDirective.prototype._viewContainerRef;\n/** @type {?} */\nTooltipDirective.prototype._overlay;\n/** @type {?} */\nTooltipDirective.prototype._scrollDispatcher;\n/** @type {?} */\nTooltipDirective.prototype._changeDetectorRef;\n/** @type {?} */\nTooltipDirective.prototype._renderer;\n/** @type {?} */\nTooltipDirective.prototype._tooltipService;\n}\n\n\nexport type AnchorPlacement = 'top' | 'right' | 'bottom' | 'left';\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { OverlayModule } from '@angular/cdk/overlay';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { TooltipComponent } from './tooltip.component';\nimport { TooltipDirective } from './tooltip.directive';\nimport { ObserversModule } from '@angular/cdk/observers';\nimport { TooltipService } from './tooltip.service';\nexport class TooltipModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  imports: [\n    CommonModule,\n    OverlayModule,\n    ObserversModule\n  ],\n  exports: [TooltipDirective],\n  declarations: [TooltipComponent, TooltipDirective],\n  providers: [TooltipService],\n  entryComponents: [TooltipComponent]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction TooltipModule_tsickle_Closure_declarations() {\n/** @type {?} */\nTooltipModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTooltipModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { TypeaheadModule } from 'ngx-bootstrap/typeahead';\nimport { CommonModule } from '@angular/common';\nimport { FacetContainerComponent } from './facet-container.component';\nimport { FacetBaseComponent } from './base/facet-base/facet-base.component';\nimport { FacetHeaderComponent } from './base/facet-header/facet-header.component';\nimport { FacetCheckListComponent } from './facet-check-list/facet-check-list.component';\nimport { FacetTypeaheadListComponent, FacetTypeaheadHighlight } from './facet-typeahead-list/facet-typeahead-list.component';\nimport { FormsModule } from '@angular/forms';\nimport { CheckboxModule } from '../checkbox/index';\nimport { TooltipModule } from '../tooltip/index';\n\nconst /** @type {?} */ DECLARATIONS = [\n    FacetContainerComponent,\n    FacetHeaderComponent,\n    FacetBaseComponent,\n    FacetCheckListComponent,\n    FacetTypeaheadListComponent,\n    FacetTypeaheadHighlight\n];\nexport class FacetsModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        CommonModule,\n        FormsModule,\n        CheckboxModule,\n        TooltipModule,\n        TypeaheadModule.forRoot()\n    ],\n    exports: DECLARATIONS,\n    declarations: DECLARATIONS\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction FacetsModule_tsickle_Closure_declarations() {\n/** @type {?} */\nFacetsModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFacetsModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","\nexport class Facet {\n/**\n * @param {?} title\n * @param {?=} data\n * @param {?=} count\n * @param {?=} disabled\n * @param {?=} id\n */\nconstructor(\npublic title: string,\npublic data: any = {},\npublic count?: number,\npublic disabled: boolean = false,\npublic id?: string | number\n    ) { }\n}\n\nfunction Facet_tsickle_Closure_declarations() {\n/** @type {?} */\nFacet.prototype.title;\n/** @type {?} */\nFacet.prototype.data;\n/** @type {?} */\nFacet.prototype.count;\n/** @type {?} */\nFacet.prototype.disabled;\n/** @type {?} */\nFacet.prototype.id;\n}\n","import { Injectable } from '@angular/core';\n\n/** Default dropdown configuration */\n\nexport class BsDropdownConfig {\n  /** default dropdown auto closing behavior */\n  autoClose = true;\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { EventEmitter, Injectable } from '@angular/core';\nimport { BsComponentRef } from '../component-loader/bs-component-ref.class';\n\n\nexport class BsDropdownState {\n  direction: 'down' | 'up' = 'down';\n  autoClose: boolean;\n  isOpenChange = new EventEmitter<boolean>();\n  isDisabledChange = new EventEmitter<boolean>();\n  toggleClick = new EventEmitter<boolean>();\n\n  /**\n   * Content to be displayed as popover.\n   */\n  dropdownMenu: Promise<BsComponentRef<any>>;\n  resolveDropdownMenu: (componentRef: BsComponentRef<any>) => void;\n\n  constructor() {\n    this.dropdownMenu = new Promise(resolve => {\n      this.resolveDropdownMenu = resolve;\n    });\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  OnDestroy,\n  Renderer2\n} from '@angular/core';\nimport { BsDropdownState } from './bs-dropdown.state';\nimport { isBs3 } from '../utils/theme-provider';\n\n\nexport class BsDropdownContainerComponent implements OnDestroy {\n  isOpen = false;\n\n  get direction(): 'down' | 'up' {\n    return this._state.direction;\n  }\n\n  private _subscription: any;\n\n  constructor(\n    private _state: BsDropdownState,\n    private cd: ChangeDetectorRef,\n    private _renderer: Renderer2,\n    _element: ElementRef\n  ) {\n    this._subscription = _state.isOpenChange.subscribe((value: boolean) => {\n      this.isOpen = value;\n      const dropdown = _element.nativeElement.querySelector('.dropdown-menu');\n      if (dropdown && !isBs3()) {\n        this._renderer.addClass(dropdown, 'show');\n        if (dropdown.classList.contains('dropdown-menu-right')) {\n          this._renderer.setStyle(dropdown, 'left', 'auto');\n          this._renderer.setStyle(dropdown, 'right', '0');\n        }\n        if (this.direction === 'up') {\n          this._renderer.setStyle(dropdown, 'top', 'auto');\n          this._renderer.setStyle(\n            dropdown,\n            'transform',\n            'translateY(-101%)'\n          );\n        }\n      }\n      this.cd.markForCheck();\n      this.cd.detectChanges();\n    });\n  }\n\n  ngOnDestroy(): void {\n    this._subscription.unsubscribe();\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'bs-dropdown-container',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    style: 'display:block;position: absolute;'\n  },\n  template: `\n    <div [class.dropup]=\"direction === 'up'\"\n         [class.dropdown]=\"direction === 'down'\"\n         [class.show]=\"isOpen\"\n         [class.open]=\"isOpen\"><ng-content></ng-content></div>\n  `\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: BsDropdownState, },\n{type: ChangeDetectorRef, },\n{type: Renderer2, },\n{type: ElementRef, },\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","// tslint:disable:max-file-line-count\nimport {\n  Directive, ElementRef, EmbeddedViewRef, EventEmitter, Input, OnDestroy,\n  OnInit, Output, Renderer2, ViewContainerRef\n} from '@angular/core';\nimport { Subscription } from 'rxjs/Subscription';\nimport 'rxjs/add/operator/filter';\nimport { ComponentLoader, ComponentLoaderFactory } from '../component-loader/index';\n\nimport { BsDropdownConfig } from './bs-dropdown.config';\nimport { BsDropdownContainerComponent } from './bs-dropdown-container.component';\nimport { BsDropdownState } from './bs-dropdown.state';\nimport { BsComponentRef } from '../component-loader/bs-component-ref.class';\nimport { BsDropdownMenuDirective } from './';\nimport { isBs3 } from '../utils/theme-provider';\n\n\nexport class BsDropdownDirective implements OnInit, OnDestroy {\n  /**\n   * Placement of a popover. Accepts: \"top\", \"bottom\", \"left\", \"right\"\n   */\n   placement: string;\n  /**\n   * Specifies events that should trigger. Supports a space separated list of\n   * event names.\n   */\n   triggers: string;\n  /**\n   * A selector specifying the element the popover should be appended to.\n   * Currently only supports \"body\".\n   */\n   container: string;\n\n  /**\n   * This attribute indicates that the dropdown should be opened upwards\n   */\n   dropup: boolean;\n\n  /**\n   * Indicates that dropdown will be closed on item or document click,\n   * and after pressing ESC\n   */\n  \n  set autoClose(value: boolean) {\n    this._state.autoClose = value;\n  }\n\n  get autoClose(): boolean {\n    return this._state.autoClose;\n  }\n\n  /**\n   * Disables dropdown toggle and hides dropdown menu if opened\n   */\n  \n  set isDisabled(value: boolean) {\n    this._isDisabled = value;\n    this._state.isDisabledChange.emit(value);\n    if (value) {\n      this.hide();\n    }\n  }\n\n  get isDisabled(): boolean {\n    return this._isDisabled;\n  }\n\n  /**\n   * Returns whether or not the popover is currently being shown\n   */\n  \n  get isOpen(): boolean {\n    if (this._showInline) {\n      return this._isInlineOpen;\n    }\n\n    return this._dropdown.isShown;\n  }\n\n  set isOpen(value: boolean) {\n    if (value) {\n      this.show();\n    } else {\n      this.hide();\n    }\n  }\n\n  /**\n   * Emits an event when isOpen change\n   */\n   isOpenChange: EventEmitter<any>;\n\n  /**\n   * Emits an event when the popover is shown\n   */\n   onShown: EventEmitter<any>;\n\n  /**\n   * Emits an event when the popover is hidden\n   */\n   onHidden: EventEmitter<any>;\n\n  get isBs4(): boolean {\n    return !isBs3();\n  }\n\n  // todo: move to component loader\n  private _isInlineOpen = false;\n\n  private get _showInline(): boolean {\n    return !this.container;\n  }\n\n  private _inlinedMenu: EmbeddedViewRef<BsDropdownMenuDirective>;\n\n  private _isDisabled: boolean;\n  private _dropdown: ComponentLoader<BsDropdownContainerComponent>;\n  private _subscriptions: Subscription[] = [];\n  private _isInited = false;\n\n  constructor(private _elementRef: ElementRef,\n              private _renderer: Renderer2,\n              private _viewContainerRef: ViewContainerRef,\n              private _cis: ComponentLoaderFactory,\n              private _config: BsDropdownConfig,\n              private _state: BsDropdownState) {\n    // set initial dropdown state from config\n    this._state.autoClose = this._config.autoClose;\n\n    // create dropdown component loader\n    this._dropdown = this._cis\n      .createLoader<BsDropdownContainerComponent>(\n        this._elementRef,\n        this._viewContainerRef,\n        this._renderer\n      )\n      .provide({provide: BsDropdownState, useValue: this._state});\n\n    this.onShown = this._dropdown.onShown;\n    this.onHidden = this._dropdown.onHidden;\n    this.isOpenChange = this._state.isOpenChange;\n\n  }\n\n  ngOnInit(): void {\n    // fix: seems there are an issue with `routerLinkActive`\n    // which result in duplicated call ngOnInit without call to ngOnDestroy\n    // read more: https://github.com/valor-software/ngx-bootstrap/issues/1885\n    if (this._isInited) {\n      return;\n    }\n    this._isInited = true;\n\n    // attach DOM listeners\n    this._dropdown.listen({\n      // because of dropdown inline mode\n      outsideClick: false,\n      triggers: this.triggers,\n      show: () => this.show()\n    });\n\n    // toggle visibility on toggle element click\n    this._subscriptions.push(\n      this._state.toggleClick.subscribe((value: boolean) => this.toggle(value))\n    );\n\n    // hide dropdown if set disabled while opened\n    this._subscriptions.push(\n      this._state.isDisabledChange\n        .filter((value: boolean) => value)\n        .subscribe((value: boolean) => this.hide())\n    );\n  }\n\n  /**\n   * Opens an element’s popover. This is considered a “manual” triggering of\n   * the popover.\n   */\n  show(): void {\n    if (this.isOpen || this.isDisabled) {\n      return;\n    }\n\n    if (this._showInline) {\n      if (!this._inlinedMenu) {\n        this._state.dropdownMenu.then(\n          (dropdownMenu: BsComponentRef<BsDropdownMenuDirective>) => {\n            this._dropdown.attachInline(\n              dropdownMenu.viewContainer,\n              dropdownMenu.templateRef\n            );\n            this._inlinedMenu = this._dropdown._inlineViewRef;\n            this.addBs4Polyfills();\n          }\n        )\n        // swallow errors\n          .catch();\n      }\n      this.addBs4Polyfills();\n      this._isInlineOpen = true;\n      this.onShown.emit(true);\n      this._state.isOpenChange.emit(true);\n\n      return;\n    }\n    this._state.dropdownMenu.then(dropdownMenu => {\n      // check direction in which dropdown should be opened\n      const _dropup =\n        this.dropup ||\n        (typeof this.dropup !== 'undefined' && this.dropup);\n      this._state.direction = _dropup ? 'up' : 'down';\n      const _placement =\n        this.placement || (_dropup ? 'top left' : 'bottom left');\n\n      // show dropdown\n      this._dropdown\n        .attach(BsDropdownContainerComponent)\n        .to(this.container)\n        .position({attachment: _placement})\n        .show({\n          content: dropdownMenu.templateRef,\n          placement: _placement\n        });\n\n      this._state.isOpenChange.emit(true);\n    })\n    // swallow error\n      .catch();\n  }\n\n  /**\n   * Closes an element’s popover. This is considered a “manual” triggering of\n   * the popover.\n   */\n  hide(): void {\n    if (!this.isOpen) {\n      return;\n    }\n\n    if (this._showInline) {\n      this.removeShowClass();\n      this.removeDropupStyles();\n      this._isInlineOpen = false;\n      this.onHidden.emit(true);\n    } else {\n      this._dropdown.hide();\n    }\n\n    this._state.isOpenChange.emit(false);\n  }\n\n  /**\n   * Toggles an element’s popover. This is considered a “manual” triggering of\n   * the popover. With parameter <code>true</code> allows toggling, with parameter <code>false</code>\n   * only hides opened dropdown. Parameter usage will be removed in ngx-bootstrap v3\n   */\n  toggle(value?: boolean): void {\n    if (this.isOpen || !value) {\n      return this.hide();\n    }\n\n    return this.show();\n  }\n\n  ngOnDestroy(): void {\n    // clean up subscriptions and destroy dropdown\n    for (const sub of this._subscriptions) {\n      sub.unsubscribe();\n    }\n    this._dropdown.dispose();\n  }\n\n  private addBs4Polyfills(): void {\n    if (!isBs3()) {\n      this.addShowClass();\n      this.checkRightAlignment();\n      this.addDropupStyles();\n    }\n  }\n\n  private addShowClass(): void {\n    if (this._inlinedMenu && this._inlinedMenu.rootNodes[0]) {\n      this._renderer.addClass(this._inlinedMenu.rootNodes[0], 'show');\n    }\n  }\n\n  private removeShowClass(): void {\n    if (this._inlinedMenu && this._inlinedMenu.rootNodes[0]) {\n      this._renderer.removeClass(this._inlinedMenu.rootNodes[0], 'show');\n    }\n  }\n\n  private checkRightAlignment(): void {\n    if (this._inlinedMenu && this._inlinedMenu.rootNodes[0]) {\n      const isRightAligned = this._inlinedMenu.rootNodes[0].classList.contains(\n        'dropdown-menu-right'\n      );\n      this._renderer.setStyle(\n        this._inlinedMenu.rootNodes[0],\n        'left',\n        isRightAligned ? 'auto' : '0'\n      );\n      this._renderer.setStyle(\n        this._inlinedMenu.rootNodes[0],\n        'right',\n        isRightAligned ? '0' : 'auto'\n      );\n    }\n  }\n\n  private addDropupStyles(): void {\n    if (this._inlinedMenu && this._inlinedMenu.rootNodes[0]) {\n      // a little hack to not break support of bootstrap 4 beta\n      this._renderer.setStyle(\n        this._inlinedMenu.rootNodes[0],\n        'top',\n        this.dropup ? 'auto' : '100%'\n      );\n      this._renderer.setStyle(\n        this._inlinedMenu.rootNodes[0],\n        'transform',\n        this.dropup ? 'translateY(-101%)' : 'translateY(0)'\n      );\n    }\n  }\n\n  private removeDropupStyles(): void {\n    if (this._inlinedMenu && this._inlinedMenu.rootNodes[0]) {\n      this._renderer.removeStyle(this._inlinedMenu.rootNodes[0], 'top');\n      this._renderer.removeStyle(this._inlinedMenu.rootNodes[0], 'transform');\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[bsDropdown],[dropdown]',\n  exportAs: 'bs-dropdown',\n  providers: [BsDropdownState],\n  host: {\n    '[class.dropup]': 'dropup',\n    '[class.open]': 'isOpen',\n    '[class.show]': 'isOpen && isBs4'\n  }\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Renderer2, },\n{type: ViewContainerRef, },\n{type: ComponentLoaderFactory, },\n{type: BsDropdownConfig, },\n{type: BsDropdownState, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'placement': [{ type: Input },],\n'triggers': [{ type: Input },],\n'container': [{ type: Input },],\n'dropup': [{ type: Input },],\n'autoClose': [{ type: Input },],\n'isDisabled': [{ type: Input },],\n'isOpen': [{ type: Input },],\n'isOpenChange': [{ type: Output },],\n'onShown': [{ type: Output },],\n'onHidden': [{ type: Output },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, TemplateRef, ViewContainerRef } from '@angular/core';\nimport { BsDropdownState } from './bs-dropdown.state';\n\n\nexport class BsDropdownMenuDirective {\n  constructor(\n    _state: BsDropdownState,\n    _viewContainer: ViewContainerRef,\n    _templateRef: TemplateRef<any>\n  ) {\n    _state.resolveDropdownMenu({\n      templateRef: _templateRef,\n      viewContainer: _viewContainer\n    });\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[bsDropdownMenu],[dropdownMenu]',\n  exportAs: 'bs-dropdown-menu'\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: BsDropdownState, },\n{type: ViewContainerRef, },\n{type: TemplateRef, },\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {\n  Directive,\n  ElementRef,\n  HostBinding,\n  HostListener,\n  Input,\n  OnDestroy\n} from '@angular/core';\nimport { Subscription } from 'rxjs/Subscription';\n\nimport { BsDropdownState } from './bs-dropdown.state';\n\n\nexport class BsDropdownToggleDirective implements OnDestroy {\n   isDisabled: boolean = null;\n\n  // @HostBinding('class.active')\n   isOpen: boolean;\n\n  private _subscriptions: Subscription[] = [];\n\n  constructor(private _state: BsDropdownState, private _element: ElementRef) {\n    // sync is open value with state\n    this._subscriptions.push(\n      this._state.isOpenChange.subscribe(\n        (value: boolean) => (this.isOpen = value)\n      )\n    );\n    // populate disabled state\n    this._subscriptions.push(\n      this._state.isDisabledChange.subscribe(\n        (value: boolean) => (this.isDisabled = value || null)\n      )\n    );\n  }\n\n  \n  onClick(): void {\n    if (this.isDisabled) {\n      return;\n    }\n    this._state.toggleClick.emit(true);\n  }\n\n  \n  onDocumentClick(event: any): void {\n    if (\n      this._state.autoClose &&\n      event.button !== 2 &&\n      !this._element.nativeElement.contains(event.target)\n    ) {\n      this._state.toggleClick.emit(false);\n    }\n  }\n\n  \n  onEsc(): void {\n    if (this._state.autoClose) {\n      this._state.toggleClick.emit(false);\n    }\n  }\n\n  ngOnDestroy(): void {\n    for (const sub of this._subscriptions) {\n      sub.unsubscribe();\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[bsDropdownToggle],[dropdownToggle]',\n  exportAs: 'bs-dropdown-toggle',\n  host: {\n    '[attr.aria-haspopup]': 'true'\n  }\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: BsDropdownState, },\n{type: ElementRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'isDisabled': [{ type: HostBinding, args: ['attr.disabled', ] },],\n'isOpen': [{ type: HostBinding, args: ['attr.aria-expanded', ] },],\n'onClick': [{ type: HostListener, args: ['click', [], ] },],\n'onDocumentClick': [{ type: HostListener, args: ['document:click', ['$event'], ] },],\n'onEsc': [{ type: HostListener, args: ['keyup.esc', ] },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { ModuleWithProviders, NgModule } from '@angular/core';\nimport { ComponentLoaderFactory } from '../component-loader/index';\n\nimport { PositioningService } from '../positioning/index';\nimport { BsDropdownContainerComponent } from './bs-dropdown-container.component';\nimport { BsDropdownMenuDirective } from './bs-dropdown-menu.directive';\nimport { BsDropdownToggleDirective } from './bs-dropdown-toggle.directive';\nimport { BsDropdownConfig } from './bs-dropdown.config';\n\nimport { BsDropdownDirective } from './bs-dropdown.directive';\nimport { BsDropdownState } from './bs-dropdown.state';\n\n\nexport class BsDropdownModule {\n  static forRoot(config?: any): ModuleWithProviders {\n    return {\n      ngModule: BsDropdownModule,\n      providers: [\n        ComponentLoaderFactory,\n        PositioningService,\n        BsDropdownState,\n        {\n          provide: BsDropdownConfig,\n          useValue: config ? config : { autoClose: true }\n        }\n      ]\n    };\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  declarations: [\n    BsDropdownMenuDirective,\n    BsDropdownToggleDirective,\n    BsDropdownContainerComponent,\n    BsDropdownDirective\n  ],\n  exports: [\n    BsDropdownMenuDirective,\n    BsDropdownToggleDirective,\n    BsDropdownDirective\n  ],\n  entryComponents: [BsDropdownContainerComponent]\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nexport class FilterContainerComponent {\n\n     filters: Filter[] = [];\n     clearTooltip: string;\n     filtersChange: EventEmitter<Filter[]> = new EventEmitter<Filter[]>();\n     events: EventEmitter<FilterEvent> = new EventEmitter<FilterEvent>();\n/**\n * @param {?} filter\n * @return {?}\n */\naddFilter(filter: Filter): void {\n        this.filters.push(filter);\n        this.events.next(new FilterAddEvent(filter));\n        this.filtersChange.emit(this.filters);\n    }\n/**\n * @param {?} filter\n * @return {?}\n */\nremoveFilter(filter: Filter): void {\n        let /** @type {?} */ idx = this.filters.findIndex(filters => filters === filter);\n\n        if (idx !== -1) {\n            this.filters.splice(idx, 1);\n            this.events.next(new FilterRemoveEvent(filter));\n            this.filtersChange.emit(this.filters);\n        }\n    }\n/**\n * @return {?}\n */\nremoveAll(): void {\n        this.events.next(new FilterRemoveAllEvent());\n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-filter-container',\n    template: `\n      <ng-content></ng-content>\n\n      <!-- Add a Clear Button -->\n      <div class=\"filter-selected-clear-button\" *ngIf=\"filters.length > 0\" [uxTooltip]=\"clearTooltip || 'Clear All'\" (click)=\"removeAll()\">\n\n          <svg class=\"filter-selected-clear-graphic\" width=\"19\" height=\"12\" viewBox=\"0 0 19 12\" shape-rendering=\"geometricPrecision\">\n              <rect class=\"light-grey\" x=\"0\" y=\"2\" width=\"7\" height=\"2\"></rect>\n              <rect class=\"dark-grey\" x=\"0\" y=\"5\" width=\"9\" height=\"2\"></rect>\n              <rect class=\"light-grey\" x=\"0\" y=\"8\" width=\"7\" height=\"2\"></rect>\n              <path class=\"dark-grey\" d=\"M9,1 h1 l9,9 v1 h-1 l-9,-9 v-1 Z\"></path>\n              <path class=\"dark-grey\" d=\"M9,11 v-1 l9,-9 h1 v1 l-9,9 h-1 Z\"></path>\n          </svg>\n\n      </div>\n    `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'filters': [{ type: Input },],\n'clearTooltip': [{ type: Input },],\n'filtersChange': [{ type: Output },],\n'events': [{ type: Output },],\n};\n}\n\nfunction FilterContainerComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nFilterContainerComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFilterContainerComponent.ctorParameters;\n/** @type {?} */\nFilterContainerComponent.propDecorators;\n/** @type {?} */\nFilterContainerComponent.prototype.filters;\n/** @type {?} */\nFilterContainerComponent.prototype.clearTooltip;\n/** @type {?} */\nFilterContainerComponent.prototype.filtersChange;\n/** @type {?} */\nFilterContainerComponent.prototype.events;\n}\n\n\nexport interface Filter {\n    group: string;\n    title: string;\n    name: string;\n    initial?: boolean;\n}\nexport class FilterAddEvent {\n/**\n * @param {?} filter\n */\nconstructor(public filter: Filter) {}\n}\n\nfunction FilterAddEvent_tsickle_Closure_declarations() {\n/** @type {?} */\nFilterAddEvent.prototype.filter;\n}\n\nexport class FilterRemoveEvent {\n/**\n * @param {?} filter\n */\nconstructor(public filter: Filter) {}\n}\n\nfunction FilterRemoveEvent_tsickle_Closure_declarations() {\n/** @type {?} */\nFilterRemoveEvent.prototype.filter;\n}\n\nexport class FilterRemoveAllEvent {\n}\n\nexport type FilterEvent = FilterAddEvent | FilterRemoveEvent | FilterRemoveAllEvent;\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, Host, Input, Output } from '@angular/core';\nimport { FilterContainerComponent, Filter, FilterRemoveAllEvent } from '../filter-container.component';\nexport class FilterBaseComponent {\n\n     filters: Filter[];\n/**\n * @param {?} filtersContainer\n */\nconstructor(\nprivate filtersContainer: FilterContainerComponent) {\n\n        filtersContainer.events.filter(event => event instanceof FilterRemoveAllEvent).subscribe(this.removeFilter.bind(this));\n    }\n/**\n * @param {?} filter\n * @return {?}\n */\naddFilter(filter: Filter): void {\n        if (!filter.initial) {\n            this.filtersContainer.addFilter(filter);\n        }\n    }\n/**\n * @param {?} filter\n * @return {?}\n */\nremoveFilter(filter: Filter): void {\n        if (!filter) {\n            return;\n        }\n\n        this.filtersContainer.removeFilter(filter);\n    }\n    \nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'ux-filter-base'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: FilterContainerComponent, decorators: [{ type: Host }, ]},\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'filters': [{ type: Input },],\n};\n}\n\nfunction FilterBaseComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nFilterBaseComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFilterBaseComponent.ctorParameters;\n/** @type {?} */\nFilterBaseComponent.propDecorators;\n/** @type {?} */\nFilterBaseComponent.prototype.filters;\n/** @type {?} */\nFilterBaseComponent.prototype.filtersContainer;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Input } from '@angular/core';\nimport { FilterBaseComponent } from '../filter-base/filter-base.component';\nimport { Filter, FilterContainerComponent, FilterRemoveAllEvent } from '../filter-container.component';\nexport class FilterDropdownComponent extends FilterBaseComponent {\n\n     initial: Filter;\n\n    selected: Filter;\n/**\n * @return {?}\n */\nremoveFilter(): void {\n        super.removeFilter(this.selected);\n        this.selected = this.initial;\n    }\n/**\n * @return {?}\n */\nngOnInit() {\n        this.selected = this.initial;\n    }\n/**\n * @param {?} filter\n * @return {?}\n */\nselectFilter(filter: Filter) {\n        this.removeFilter();\n        this.selected = filter;\n        this.addFilter(this.selected);\n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-filter-dropdown',\n    template: `\n      <div class=\"btn-group\" dropdown>\n          <button dropdownToggle type=\"button\" class=\"filter-dropdown btn dropdown-toggle\" [class.active]=\"selected !== initial\">{{ selected?.title }} \n              <span class=\"hpe-icon hpe-down\"></span>\n          </button>\n          <ul *dropdownMenu class=\"dropdown-menu\" role=\"menu\">\n              <li class=\"dropdown-list-item\" *ngFor=\"let filter of filters\" role=\"menuitem\">\n                  <a class=\"dropdown-item\" (click)=\"selectFilter(filter)\">\n                      <i class=\"hpe-icon\" [class.hpe-checkmark]=\"filter === selected\"></i>\n                      <span class=\"filter-dropdown-title\">{{ filter.name }}</span>\n                  </a>\n              </li>\n          </ul>\n      </div>\n    `,\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'initial': [{ type: Input },],\n};\n}\n\nfunction FilterDropdownComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nFilterDropdownComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFilterDropdownComponent.ctorParameters;\n/** @type {?} */\nFilterDropdownComponent.propDecorators;\n/** @type {?} */\nFilterDropdownComponent.prototype.initial;\n/** @type {?} */\nFilterDropdownComponent.prototype.selected;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { BsDropdownDirective } from 'ngx-bootstrap/dropdown';\nimport { Component, Input, ViewChild } from '@angular/core';\nimport { FilterBaseComponent } from '../filter-base/filter-base.component';\nimport { Filter, FilterContainerComponent, FilterRemoveAllEvent } from '../filter-container.component';\nimport { TypeaheadMatch } from 'ngx-bootstrap/typeahead';\nexport class FilterDynamicComponent extends FilterBaseComponent {\n\n     filters: Filter[];\n     initial: Filter;\n     options: FilterDynamicListConfig;\n\n     dropdown: BsDropdownDirective;\n\n    defaultOptions: FilterDynamicListConfig = {\n        placeholder: '',\n        minCharacters: 3\n    };\n    searchQuery: string;\n    selected: Filter;\n    showTypeahead: boolean = true;\n    typeaheadItems: string[] = [];\n/**\n * @return {?}\n */\ngetItems(): string[] {\n        return this.filters.filter(item => item !== this.initial).map(item => item.name);\n    }\n/**\n * @return {?}\n */\nngOnInit() {\n        this.selected = this.initial;\n        this.typeaheadItems = this.getItems();\n\n        if (this.options && this.options.maxIndividualItems && this.options.maxIndividualItems + 1 >= this.filters.length ) {\n            this.showTypeahead = false;\n        }\n    }\n/**\n * @param {?} typeaheadOption\n * @return {?}\n */\nselectOption(typeaheadOption: TypeaheadMatch) { \n        this.removeFilter();\n        let /** @type {?} */ idx = this.filters.findIndex(filter => filter.name === typeaheadOption.value);\n        this.selected = this.filters[idx];\n        this.addFilter(this.selected);\n        this.searchQuery = '';\n        this.dropdown.hide();\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nclickOff(event: MouseEvent) {\n\n        let /** @type {?} */ target = /** @type {?} */(( event.target as HTMLElement));\n        let /** @type {?} */ hideDropdown = true;\n\n        while (target && target.nodeName !== 'BODY') {\n            if (target.classList.contains('ux-dynamic-filter')) {\n                hideDropdown = false;\n                break;\n            } else {\n                target = target.parentElement;\n            }\n        }\n\n        if (hideDropdown) {\n            this.searchQuery = '';\n            this.dropdown.hide();\n        }\n        \n    }\n/**\n * @return {?}\n */\nremoveFilter(): void { \n        if (this.selected !== this.initial) {\n            super.removeFilter(this.selected);\n            this.selected = this.initial;\n        }\n        this.searchQuery = '';\n    }\n/**\n * @param {?} filter\n * @return {?}\n */\nselectFilter(filter: Filter) {\n        this.removeFilter();\n        this.selected = filter;\n        this.addFilter(this.selected);\n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-filter-dynamic',\n    template: `\n      <div class=\"btn-group ux-dynamic-filter\" dropdown #dynamicDropdown=\"bs-dropdown\">\n          <button (click)=\"dynamicDropdown.show()\" type=\"button\" [class.active]=\"selected !== initial\" class=\"filter-dropdown btn dropdown-toggle\">{{ selected?.title }} \n              <span class=\"hpe-icon hpe-down\"></span>\n          </button>\n          <ul *dropdownMenu class=\"dropdown-menu\" role=\"menu\">\n\n              <li class=\"dropdown-list-item\" *ngIf=\"showTypeahead\" role=\"menuitem\">\n                  <a class=\"dropdown-item\" (click)=\"removeFilter(); dynamicDropdown.hide();\">\n                      <i class=\"hpe-icon\" [class.hpe-checkmark]=\"initial === selected\"></i>\n                      <span class=\"filter-dropdown-title\">{{ initial.name }}</span>\n                  </a>\n              </li>\n\n              <li class=\"dropdown-list-item\" *ngIf=\"selected !== initial && showTypeahead\" role=\"menuitem\">\n                  <a class=\"dropdown-item\">\n                      <i class=\"hpe-icon hpe-checkmark\"></i>\n                      <span class=\"filter-dropdown-title\">{{ selected.name }}</span>\n                  </a>\n              </li>\n\n              <hr>\n\n              <li *ngIf=\"showTypeahead\" class=\"typeahead-box\">\n                  <input [(ngModel)]=\"searchQuery\" [typeahead]=\"typeaheadItems\" class=\"form-control\" \n                  (typeaheadOnSelect)=\"selectOption($event)\" \n                  [placeholder]=\"options?.placeholder || defaultOptions.placeholder\"\n                  [typeaheadMinLength]=\"options?.minCharacters || defaultOptions.minCharacters\"\n                  [typeaheadOptionsLimit]=\"options?.maxResults\">\n              </li>\n\n              <span *ngIf=\"!showTypeahead\">\n                  <li class=\"dropdown-list-item\" *ngFor=\"let filter of filters\" role=\"menuitem\">\n                      <a class=\"dropdown-item\" (click)=\"selectFilter(filter)\">\n                          <i class=\"hpe-icon\" [class.hpe-checkmark]=\"filter === selected\"></i>\n                          <span class=\"filter-dropdown-title\">{{ filter.name }}</span>\n                      </a>\n                  </li>\n              </span>\n\n          </ul>\n      </div>\n    `,\n    host: {\n        '(document:click)': 'clickOff($event)',\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'filters': [{ type: Input },],\n'initial': [{ type: Input },],\n'options': [{ type: Input },],\n'dropdown': [{ type: ViewChild, args: [BsDropdownDirective, ] },],\n};\n}\n\nfunction FilterDynamicComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nFilterDynamicComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFilterDynamicComponent.ctorParameters;\n/** @type {?} */\nFilterDynamicComponent.propDecorators;\n/** @type {?} */\nFilterDynamicComponent.prototype.filters;\n/** @type {?} */\nFilterDynamicComponent.prototype.initial;\n/** @type {?} */\nFilterDynamicComponent.prototype.options;\n/** @type {?} */\nFilterDynamicComponent.prototype.dropdown;\n/** @type {?} */\nFilterDynamicComponent.prototype.defaultOptions;\n/** @type {?} */\nFilterDynamicComponent.prototype.searchQuery;\n/** @type {?} */\nFilterDynamicComponent.prototype.selected;\n/** @type {?} */\nFilterDynamicComponent.prototype.showTypeahead;\n/** @type {?} */\nFilterDynamicComponent.prototype.typeaheadItems;\n}\n\n\nexport interface FilterDynamicListConfig {\n    placeholder?: string;\n    minCharacters?: number;\n    maxResults?: number;\n    maxIndividualItems?: number;\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\nimport { TypeaheadModule } from 'ngx-bootstrap/typeahead';\nimport { TooltipModule } from '../tooltip/index';\nimport { FilterBaseComponent } from './filter-base/filter-base.component';\nimport { FilterContainerComponent } from './filter-container.component';\nimport { FilterDropdownComponent } from './filter-dropdown/filter-dropdown.component';\nimport { FilterDynamicComponent } from './filter-dynamic/filter-dynamic.component';\n\nconst /** @type {?} */ DECLARATIONS = [\n    FilterBaseComponent,\n    FilterContainerComponent,\n    FilterDropdownComponent,\n    FilterDynamicComponent\n];\nexport class FilterModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        BsDropdownModule.forRoot(),\n        TypeaheadModule.forRoot(),\n        TooltipModule,\n        FormsModule,\n        CommonModule\n    ],\n    exports: DECLARATIONS,\n    declarations: DECLARATIONS\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction FilterModule_tsickle_Closure_declarations() {\n/** @type {?} */\nFilterModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFilterModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Input, Directive, HostListener, Output, EventEmitter } from '@angular/core';\nexport class FlippableCardComponent {\n\n     direction: 'horizontal' | 'vertical' = 'horizontal';\n     trigger: 'click' | 'hover' | 'manual' = 'hover';\n     width: number = 280;\n     height: number = 200;\n     flipped: boolean = false;\n     flippedChange: EventEmitter<boolean> = new EventEmitter<boolean>();\n/**\n * @param {?} state\n * @return {?}\n */\nsetFlipped(state: boolean) {\n        this.flipped = state;\n        this.flippedChange.emit(this.flipped);\n    }\n/**\n * @return {?}\n */\ntoggleFlipped() {\n        this.setFlipped(!this.flipped);\n    }\n/**\n * @return {?}\n */\nclickTrigger() {\n\n        // add or remove the class depending on whether or not the card has been flipped\n        if (this.trigger === 'click') {\n            this.toggleFlipped();\n        }\n    }\n/**\n * @return {?}\n */\nhoverEnter() {\n        // if the trigger is hover then begin to flip\n        if (this.trigger === 'hover') {\n            this.setFlipped(true);\n        }\n    }\n/**\n * @return {?}\n */\nhoverExit() {\n        if (this.trigger === 'hover') {\n            this.setFlipped(false);\n        }\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-flippable-card',\n    template: `\n      <div class=\"ux-flipper\" [class.ux-flip-card]=\"flipped\" [style.width.px]=\"width\" [style.height.px]=\"height\">\n\n          <div class=\"ux-flippable-card-front\" [style.width.px]=\"width\" [style.height.px]=\"height\">\n              <ng-content select=\"ux-flippable-card-front\"></ng-content>\n          </div>\n\n          <div class=\"ux-flippable-card-back\" [style.width.px]=\"width\" [style.height.px]=\"height\">\n              <ng-content select=\"ux-flippable-card-back\"></ng-content>\n          </div>\n      </div>\n    `,\n    host: {\n        '[class.horizontal]': 'direction === \"horizontal\"',\n        '[class.vertical]': 'direction === \"vertical\"'\n    },\n    exportAs: 'ux-flippable-card'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'direction': [{ type: Input },],\n'trigger': [{ type: Input },],\n'width': [{ type: Input },],\n'height': [{ type: Input },],\n'flipped': [{ type: Input },],\n'flippedChange': [{ type: Output },],\n'clickTrigger': [{ type: HostListener, args: ['click', ] },],\n'hoverEnter': [{ type: HostListener, args: ['mouseenter', ] },],\n'hoverExit': [{ type: HostListener, args: ['mouseleave', ] },],\n};\n}\n\nfunction FlippableCardComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nFlippableCardComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFlippableCardComponent.ctorParameters;\n/** @type {?} */\nFlippableCardComponent.propDecorators;\n/** @type {?} */\nFlippableCardComponent.prototype.direction;\n/** @type {?} */\nFlippableCardComponent.prototype.trigger;\n/** @type {?} */\nFlippableCardComponent.prototype.width;\n/** @type {?} */\nFlippableCardComponent.prototype.height;\n/** @type {?} */\nFlippableCardComponent.prototype.flipped;\n/** @type {?} */\nFlippableCardComponent.prototype.flippedChange;\n}\n\nexport class FlippableCardFrontDirective { static decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'ux-flippable-card-front'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction FlippableCardFrontDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nFlippableCardFrontDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFlippableCardFrontDirective.ctorParameters;\n}\n\nexport class FlippableCardBackDirective { static decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'ux-flippable-card-back'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction FlippableCardBackDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nFlippableCardBackDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFlippableCardBackDirective.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\n\nimport { FlippableCardComponent, FlippableCardBackDirective, FlippableCardFrontDirective } from './flippable-card.component';\nexport class FlippableCardModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    exports: [FlippableCardComponent, FlippableCardBackDirective, FlippableCardFrontDirective],\n    declarations: [FlippableCardComponent, FlippableCardBackDirective, FlippableCardFrontDirective]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction FlippableCardModule_tsickle_Closure_declarations() {\n/** @type {?} */\nFlippableCardModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFlippableCardModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable } from '@angular/core';\n\n/** Default values provider for tooltip */\n\nexport class TooltipConfig {\n  /** tooltip placement, supported positions: 'top', 'bottom', 'left', 'right' */\n  placement = 'top';\n  /** array of event names which triggers tooltip opening */\n  triggers = 'hover focus';\n  /** a selector specifying the element the tooltip should be appended to. Currently only supports \"body\" */\n  container: string;\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {\n  AfterViewInit,\n  Component,\n  ChangeDetectionStrategy\n} from '@angular/core';\nimport { TooltipConfig } from './tooltip.config';\nimport { isBs3 } from '../utils/theme-provider';\n\n\nexport class TooltipContainerComponent implements AfterViewInit {\n  classMap: any;\n  placement: string;\n  containerClass: string;\n  animation: boolean;\n\n  get isBs3(): boolean {\n    return isBs3();\n  }\n\n  constructor(config: TooltipConfig) {\n    Object.assign(this, config);\n  }\n\n  ngAfterViewInit(): void {\n    this.classMap = { in: false, fade: false };\n    this.classMap[this.placement] = true;\n    this.classMap[`tooltip-${this.placement}`] = true;\n\n    this.classMap.in = true;\n    if (this.animation) {\n      this.classMap.fade = true;\n    }\n\n    if (this.containerClass) {\n      this.classMap[this.containerClass] = true;\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'bs-tooltip-container',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  // tslint:disable-next-line\n  host: {\n    '[class]':\n      '\"tooltip in tooltip-\" + placement + \" \" + \"bs-tooltip-\" + placement + \" \" + placement + \" \" + containerClass',\n    '[class.show]': '!isBs3',\n    role: 'tooltip'\n  },\n  styles: [\n    `\n    :host.tooltip {\n      display: block;\n    }\n    :host.bs-tooltip-top .arrow, :host.bs-tooltip-bottom .arrow {\n      left: 50%;\n      margin-left: -6px;\n    }\n    :host.bs-tooltip-left .arrow, :host.bs-tooltip-right .arrow {\n      top: 50%;\n      margin-top: -6px;\n    }\n  `\n  ],\n  template: `\n    <div class=\"tooltip-arrow arrow\"></div>\n    <div class=\"tooltip-inner\"><ng-content></ng-content></div>\n    `\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: TooltipConfig, },\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { isDevMode } from '@angular/core';\nconst _messagesHash: { [key: string]: boolean } = {};\nconst _hideMsg = typeof console === 'undefined' || !('warn' in console);\n\nexport function warnOnce(msg: string): void {\n  if (!isDevMode() || _hideMsg || msg in _messagesHash) {\n    return;\n  }\n\n  _messagesHash[msg] = true;\n  /*tslint:disable-next-line*/\n  console.warn(msg);\n}\n","// tslint:disable:deprecation\nimport {\n  Directive, ElementRef, EventEmitter, Input, OnDestroy, OnInit, Output,\n  Renderer2, TemplateRef, ViewContainerRef\n} from '@angular/core';\nimport { TooltipContainerComponent } from './tooltip-container.component';\nimport { TooltipConfig } from './tooltip.config';\nimport { ComponentLoader, ComponentLoaderFactory } from '../component-loader/index';\nimport { OnChange } from '../utils/decorators';\nimport { warnOnce } from '../utils/warn-once';\nimport { parseTriggers } from '../utils/triggers';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/observable/timer';\n\n\nexport class TooltipDirective implements OnInit, OnDestroy {\n  /**\n   * Content to be displayed as tooltip.\n   */\n  @OnChange()\n  \n  tooltip: string | TemplateRef<any>;\n  /** Fired when tooltip content changes */\n  \n  tooltipChange: EventEmitter<string | TemplateRef<any>> = new EventEmitter();\n\n  /**\n   * Placement of a tooltip. Accepts: \"top\", \"bottom\", \"left\", \"right\"\n   */\n   placement: string;\n  /**\n   * Specifies events that should trigger. Supports a space separated list of\n   * event names.\n   */\n   triggers: string;\n  /**\n   * A selector specifying the element the tooltip should be appended to.\n   * Currently only supports \"body\".\n   */\n   container: string;\n\n  /**\n   * Returns whether or not the tooltip is currently being shown\n   */\n  \n  get isOpen(): boolean {\n    return this._tooltip.isShown;\n  }\n\n  set isOpen(value: boolean) {\n    if (value) {\n      this.show();\n    } else {\n      this.hide();\n    }\n  }\n\n  /**\n   * Allows to disable tooltip\n   */\n   isDisabled: boolean;\n\n  /**\n   * Css class for tooltip container\n   */\n   containerClass = '';\n  /**\n   * Delay before showing the tooltip\n   */\n   delay: number;\n\n  /**\n   * Emits an event when the tooltip is shown\n   */\n   onShown: EventEmitter<any>;\n  /**\n   * Emits an event when the tooltip is hidden\n   */\n   onHidden: EventEmitter<any>;\n\n  /** @deprecated - please use `tooltip` instead */\n  \n  set htmlContent(value: string | TemplateRef<any>) {\n    warnOnce('tooltipHtml was deprecated, please use `tooltip` instead');\n    this.tooltip = value;\n  }\n\n  /** @deprecated - please use `placement` instead */\n  \n  set _placement(value: string) {\n    warnOnce('tooltipPlacement was deprecated, please use `placement` instead');\n    this.placement = value;\n  }\n\n  /** @deprecated - please use `isOpen` instead*/\n  \n  set _isOpen(value: boolean) {\n    warnOnce('tooltipIsOpen was deprecated, please use `isOpen` instead');\n    this.isOpen = value;\n  }\n\n  get _isOpen(): boolean {\n    warnOnce('tooltipIsOpen was deprecated, please use `isOpen` instead');\n    return this.isOpen;\n  }\n\n  /** @deprecated - please use `isDisabled` instead */\n  \n  set _enable(value: boolean) {\n    warnOnce('tooltipEnable was deprecated, please use `isDisabled` instead');\n    this.isDisabled = value;\n  }\n\n  get _enable(): boolean {\n    warnOnce('tooltipEnable was deprecated, please use `isDisabled` instead');\n    return this.isDisabled;\n  }\n\n  /** @deprecated - please use `container=\"body\"` instead */\n  \n  set _appendToBody(value: boolean) {\n    warnOnce(\n      'tooltipAppendToBody was deprecated, please use `container=\"body\"` instead'\n    );\n    this.container = value ? 'body' : this.container;\n  }\n\n  get _appendToBody(): boolean {\n    warnOnce(\n      'tooltipAppendToBody was deprecated, please use `container=\"body\"` instead'\n    );\n    return this.container === 'body';\n  }\n\n  /** @deprecated - removed, will be added to configuration */\n   _animation = true;\n\n  /** @deprecated - will replaced with customClass */\n  \n  set _popupClass(value: string) {\n    warnOnce('tooltipClass deprecated');\n  }\n\n  /** @deprecated - removed */\n  \n  set _tooltipContext(value: any) {\n    warnOnce('tooltipContext deprecated');\n  }\n\n  /** @deprecated */\n  \n  set _tooltipPopupDelay(value: number) {\n    warnOnce('tooltipPopupDelay is deprecated, use `delay` instead');\n    this.delay = value;\n  }\n\n  /** @deprecated */\n   _fadeDuration = 150;\n\n  /** @deprecated -  please use `triggers` instead */\n  \n  get _tooltipTrigger(): string | string[] {\n    warnOnce('tooltipTrigger was deprecated, please use `triggers` instead');\n    return this.triggers;\n  }\n\n  set _tooltipTrigger(value: string | string[]) {\n    warnOnce('tooltipTrigger was deprecated, please use `triggers` instead');\n    this.triggers = (value || '').toString();\n  }\n\n  /** @deprecated */\n  \n  tooltipStateChanged: EventEmitter<boolean> = new EventEmitter<boolean>();\n  protected _delayTimeoutId: number | any;\n  protected _tooltipCancelShowFn: Function;\n\n  private _tooltip: ComponentLoader<TooltipContainerComponent>;\n\n  constructor(_viewContainerRef: ViewContainerRef,\n                     private _renderer: Renderer2,\n                     private _elementRef: ElementRef,\n                     cis: ComponentLoaderFactory,\n                     config: TooltipConfig) {\n    this._tooltip = cis\n      .createLoader<TooltipContainerComponent>(\n        this._elementRef,\n        _viewContainerRef,\n        this._renderer\n      )\n      .provide({provide: TooltipConfig, useValue: config});\n\n    Object.assign(this, config);\n    this.onShown = this._tooltip.onShown;\n    this.onHidden = this._tooltip.onHidden;\n  }\n\n  ngOnInit(): void {\n    this._tooltip.listen({\n      triggers: this.triggers,\n      show: () => this.show()\n    });\n    this.tooltipChange.subscribe((value: any) => {\n      if (!value) {\n        this._tooltip.hide();\n      }\n    });\n  }\n\n  /**\n   * Toggles an element’s tooltip. This is considered a “manual” triggering of\n   * the tooltip.\n   */\n  toggle(): void {\n    if (this.isOpen) {\n      return this.hide();\n    }\n\n    this.show();\n  }\n\n  /**\n   * Opens an element’s tooltip. This is considered a “manual” triggering of\n   * the tooltip.\n   */\n  show(): void {\n    if (\n      this.isOpen ||\n      this.isDisabled ||\n      this._delayTimeoutId ||\n      !this.tooltip\n    ) {\n      return;\n    }\n\n    const showTooltip = () => {\n      if (this._delayTimeoutId) {\n        this._delayTimeoutId = undefined;\n      }\n\n      this._tooltip\n        .attach(TooltipContainerComponent)\n        .to(this.container)\n        .position({attachment: this.placement})\n        .show({\n          content: this.tooltip,\n          placement: this.placement,\n          containerClass: this.containerClass\n        });\n    };\n    const cancelDelayedTooltipShowing = () => {\n      if (this._tooltipCancelShowFn) {\n        this._tooltipCancelShowFn();\n      }\n    };\n\n    if (this.delay) {\n      const timer = Observable.timer(this.delay).subscribe(() => {\n        showTooltip();\n        cancelDelayedTooltipShowing();\n      });\n\n      if (this.triggers) {\n        const triggers = parseTriggers(this.triggers);\n        this._tooltipCancelShowFn = this._renderer.listen(this._elementRef.nativeElement, triggers[0].close, () => {\n          timer.unsubscribe();\n          cancelDelayedTooltipShowing();\n        });\n      }\n    } else {\n      showTooltip();\n    }\n  }\n\n  /**\n   * Closes an element’s tooltip. This is considered a “manual” triggering of\n   * the tooltip.\n   */\n  hide(): void {\n    if (this._delayTimeoutId) {\n      clearTimeout(this._delayTimeoutId);\n      this._delayTimeoutId = undefined;\n    }\n\n    if (!this._tooltip.isShown) {\n      return;\n    }\n\n    this._tooltip.instance.classMap.in = false;\n    setTimeout(() => {\n      this._tooltip.hide();\n    }, this._fadeDuration);\n  }\n\n  ngOnDestroy(): void {\n    this._tooltip.dispose();\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[tooltip], [tooltipHtml]',\n  exportAs: 'bs-tooltip'\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ViewContainerRef, },\n{type: Renderer2, },\n{type: ElementRef, },\n{type: ComponentLoaderFactory, },\n{type: TooltipConfig, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'tooltip': [{ type: Input },],\n'tooltipChange': [{ type: Output },],\n'placement': [{ type: Input },],\n'triggers': [{ type: Input },],\n'container': [{ type: Input },],\n'isOpen': [{ type: Input },],\n'isDisabled': [{ type: Input },],\n'containerClass': [{ type: Input },],\n'delay': [{ type: Input },],\n'onShown': [{ type: Output },],\n'onHidden': [{ type: Output },],\n'htmlContent': [{ type: Input, args: ['tooltipHtml', ] },],\n'_placement': [{ type: Input, args: ['tooltipPlacement', ] },],\n'_isOpen': [{ type: Input, args: ['tooltipIsOpen', ] },],\n'_enable': [{ type: Input, args: ['tooltipEnable', ] },],\n'_appendToBody': [{ type: Input, args: ['tooltipAppendToBody', ] },],\n'_animation': [{ type: Input, args: ['tooltipAnimation', ] },],\n'_popupClass': [{ type: Input, args: ['tooltipClass', ] },],\n'_tooltipContext': [{ type: Input, args: ['tooltipContext', ] },],\n'_tooltipPopupDelay': [{ type: Input, args: ['tooltipPopupDelay', ] },],\n'_fadeDuration': [{ type: Input, args: ['tooltipFadeDuration', ] },],\n'_tooltipTrigger': [{ type: Input, args: ['tooltipTrigger', ] },],\n'tooltipStateChanged': [{ type: Output },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/*tslint:disable:no-invalid-this */\nexport function OnChange(defaultValue?: any): any {\n  const sufix = 'Change';\n\n  return function OnChangeHandler(target: any, propertyKey: string): void {\n    const _key = ` __${propertyKey}Value`;\n    Object.defineProperty(target, propertyKey, {\n      get(): any {\n        return this[_key];\n      },\n      set(value: any): void {\n        const prevValue = this[_key];\n        this[_key] = value;\n        if (prevValue !== value && this[propertyKey + sufix]) {\n          this[propertyKey + sufix].emit(value);\n        }\n      }\n    });\n  };\n}\n/* tslint:enable */\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nexport class FloatingActionButtonsService {\n\n    open$ = new BehaviorSubject<boolean>(false);\n/**\n * @return {?}\n */\nopen(): void {\n        this.open$.next(true);\n    }\n/**\n * @return {?}\n */\ntoggle(): void {\n        this.open$.next(!this.open$.getValue());\n    }\n/**\n * @return {?}\n */\nclose(): void {\n        this.open$.next(false);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction FloatingActionButtonsService_tsickle_Closure_declarations() {\n/** @type {?} */\nFloatingActionButtonsService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFloatingActionButtonsService.ctorParameters;\n/** @type {?} */\nFloatingActionButtonsService.prototype.open$;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Input, ChangeDetectionStrategy, HostListener, ElementRef, ContentChildren, QueryList, OnDestroy, AfterViewInit } from '@angular/core';\nimport { trigger, state, style, transition, animate, query, stagger } from '@angular/animations';\nimport { TooltipDirective } from 'ngx-bootstrap/tooltip';\nimport { Subscription } from 'rxjs/Subscription';\nimport { filter } from 'rxjs/operators/filter';\n\nimport { FloatingActionButtonComponent } from './floating-action-button.component';\nimport { FloatingActionButtonsService } from './floating-action-buttons.service';\nexport class FloatingActionButtonsComponent implements AfterViewInit, OnDestroy {\n\n     direction: FloatingActionButtonDirection = 'top';\n     tooltips: QueryList<TooltipDirective>;\nprivate _subscription: Subscription;\n/**\n * @param {?} fab\n * @param {?} _elementRef\n */\nconstructor(public fab: FloatingActionButtonsService,\nprivate _elementRef: ElementRef) { }\n/**\n * @return {?}\n */\nngAfterViewInit(): void {\n        this._subscription = this.fab.open$.pipe(filter(open => open === false))\n            .subscribe(() => this.tooltips.forEach(tooltip => tooltip.hide()));\n    }\n/**\n * @return {?}\n */\nngOnDestroy(): void {\n        this._subscription.unsubscribe();\n    }\n/**\n * @param {?} target\n * @return {?}\n */\nclose(target: HTMLElement): void {\n        if (!this._elementRef.nativeElement.contains(target)) {\n            this.fab.close();\n        }\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-floating-action-buttons',\n    template: `\n      <ng-content select=\"[fab-primary]\"></ng-content>\n\n      <div class=\"floating-action-button-list\" [@fabAnimation]=\"fab.open$ | async\" [ngClass]=\"direction\" *ngIf=\"fab.open$ | async\">\n          <ng-content></ng-content>\n      </div>\n    `,\n    providers: [FloatingActionButtonsService],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    preserveWhitespaces: false,\n    animations: [\n        trigger('fabAnimation', [\n            transition('void => true', [\n                query('ux-floating-action-button', style({ opacity: 0 })),\n                query('ux-floating-action-button', stagger(50, animate(250, style({ opacity: 1 }))))\n            ]),\n            transition('true => void', [\n                query('ux-floating-action-button', stagger(-50, animate(250, style({ opacity: 0 }))))\n            ])\n        ])\n    ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: FloatingActionButtonsService, },\n{type: ElementRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'direction': [{ type: Input },],\n'tooltips': [{ type: ContentChildren, args: [TooltipDirective, ] },],\n'close': [{ type: HostListener, args: ['document:click', ['$event.target'], ] },],\n};\n}\n\nfunction FloatingActionButtonsComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nFloatingActionButtonsComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFloatingActionButtonsComponent.ctorParameters;\n/** @type {?} */\nFloatingActionButtonsComponent.propDecorators;\n/** @type {?} */\nFloatingActionButtonsComponent.prototype.direction;\n/** @type {?} */\nFloatingActionButtonsComponent.prototype.tooltips;\n/** @type {?} */\nFloatingActionButtonsComponent.prototype._subscription;\n/** @type {?} */\nFloatingActionButtonsComponent.prototype.fab;\n/** @type {?} */\nFloatingActionButtonsComponent.prototype._elementRef;\n}\n\n\nexport type FloatingActionButtonDirection = 'top' | 'right' | 'bottom' | 'left';\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Input, ChangeDetectionStrategy, HostBinding, HostListener, Attribute } from '@angular/core';\nimport { FloatingActionButtonsService } from './floating-action-buttons.service';\nexport class FloatingActionButtonComponent {\n\n     icon: string;    \n     tabindex = 1;\n    \n    primary: boolean = false;\n/**\n * @param {?} primary\n * @param {?} fab\n */\nconstructor( primary: string,\npublic fab: FloatingActionButtonsService) {\n        this.primary = primary !== null;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-floating-action-button',\n    template: `\n      <button class=\"btn floating-action-button\" \n              [class.button-primary]=\"primary\" \n              [class.button-secondary]=\"!primary\" \n              (click)=\"primary ? fab.open() : fab.close()\">\n\n          <span class=\"hpe-icon floating-action-button-icon\" *ngIf=\"icon\" [ngClass]=\"icon\"></span>\n          <ng-content *ngIf=\"!icon\"></ng-content>\n\n      </button>\n    `,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    preserveWhitespaces: false\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: undefined, decorators: [{ type: Attribute, args: ['fab-primary', ] }, ]},\n{type: FloatingActionButtonsService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'icon': [{ type: Input },],\n'tabindex': [{ type: HostBinding },],\n};\n}\n\nfunction FloatingActionButtonComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nFloatingActionButtonComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFloatingActionButtonComponent.ctorParameters;\n/** @type {?} */\nFloatingActionButtonComponent.propDecorators;\n/** @type {?} */\nFloatingActionButtonComponent.prototype.icon;\n/** @type {?} */\nFloatingActionButtonComponent.prototype.tabindex;\n/** @type {?} */\nFloatingActionButtonComponent.prototype.primary;\n/** @type {?} */\nFloatingActionButtonComponent.prototype.fab;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FloatingActionButtonsComponent } from './floating-action-buttons.component';\nimport { FloatingActionButtonComponent } from './floating-action-button.component';\nexport class FloatingActionButtonsModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        CommonModule\n    ],\n    exports: [\n        FloatingActionButtonsComponent,\n        FloatingActionButtonComponent\n    ],\n    declarations: [\n        FloatingActionButtonsComponent,\n        FloatingActionButtonComponent\n    ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction FloatingActionButtonsModule_tsickle_Closure_declarations() {\n/** @type {?} */\nFloatingActionButtonsModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFloatingActionButtonsModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { Observable } from 'rxjs/Observable';\nimport { Observer } from 'rxjs/Observer';\nimport { of } from 'rxjs/observable/of';\nimport { first } from 'rxjs/operators';\nexport class HierarchyBarService {\n\n    nodes$ = new BehaviorSubject<HierarchyBarNode[]>([]);\nprivate _root: HierarchyBarNode;\nprivate _nodes: HierarchyBarNode[] = [];\n/**\n * Store the root node of the hierarchy tree\n * @param {?} root\n * @return {?}\n */\nsetRootNode(root: HierarchyBarNode) {\n\n        // store the root node\n        this._root = root;\n\n        // create a flat structure of nodes\n        this._nodes = this.getNodeList(root);\n\n        // flatten the array - based on the selected node\n        this.nodes$.next(this.getSelectedChildren(root));\n    }\n/**\n * Select a node. This causes all nodes to be\n * deselected and the path to the selected node\n * to be selected\n * @param {?} node\n * @return {?}\n */\nselectNode(node: HierarchyBarNode): void {\n\n        // deselect all nodes\n        this.deselectAll();\n\n        // ensure the current node is selected and its parents\n        this.select(node);\n\n        // emit a new node list to trigger change detection\n        this.nodes$.next(this.getSelectedChildren(this._root));\n    }\n/**\n * Handles getting children with support for both arrays and observables\n * @param {?} node\n * @return {?}\n */\ngetChildren(node: HierarchyBarNode): Observable<HierarchyBarNodeChildren> {\n\n        if (Array.isArray(node.children)) {\n            return of({ loading: false, children: node.children });\n        }\n\n        const /** @type {?} */ children$: Observable<HierarchyBarNode[]> = node.children;\n\n        // if it is an observable then handle loading\n        return Observable.create((observer: Observer<HierarchyBarNodeChildren>) => {\n            // emit initial value\n            observer.next({ loading: true, children: [] });\n\n            // now wait until the children observable completes\n            children$.pipe(first()).subscribe(children => {\n\n                // replace the observable with an array for future loading\n                node.children = children;\n\n                // rebuild the node tree\n                this.setRootNode(this._root);\n\n                // emit the latest value\n                observer.next({ loading: false, children: children });\n\n                // close the observable stream\n                observer.complete();\n            });\n        });\n    }\n/**\n * Traverses all the parents to ensure they are selected\n * @param {?} node\n * @return {?}\n */\nprivate select(node: HierarchyBarNode): void {\n        node.selected = true;\n\n        if (node.parent) {\n            this.select(node.parent);\n        }\n    }\n/**\n * Deselects all nodes\n * @return {?}\n */\nprivate deselectAll(): void {\n        this._nodes.forEach(node => node.selected = false);\n    }\n/**\n * Gets all the nodes in the tree as a flat array.\n * It also stores the parent node in a parent property\n * on the node for easy traversal in both directions\n * @param {?} node\n * @return {?}\n */\nprivate getNodeList(node: HierarchyBarNode): HierarchyBarNode[] {\n\n        // if there are no children then return only itself\n        if (!node.children || node.children instanceof Observable || node.children.length === 0) {\n            return [node];\n        }\n\n        // store the parent property\n        node.children.forEach(child => child.parent = node);\n\n        // get all descendants of this node\n        const /** @type {?} */ descendants = node.children.reduce<HierarchyBarNode[]>((nodes, current) => [...nodes, ...this.getNodeList(current)], []);\n\n        return [node, ...descendants];\n    }\n/**\n * Gets all selected nodes from the parent node.\n * @param {?} node\n * @return {?}\n */\nprivate getSelectedChildren(node: HierarchyBarNode): HierarchyBarNode[] {\n\n        if (node.children instanceof Observable) {\n            return [node];\n        }\n\n        // get the children - and account for when there is none\n        const /** @type {?} */ children = node.children || [];\n\n        // check if any child is selected\n        const /** @type {?} */ child = children.find(_child => _child.selected);\n\n        // return the remaining chain of selected items\n        return child ? [node, ...this.getSelectedChildren(child)] : [node];\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction HierarchyBarService_tsickle_Closure_declarations() {\n/** @type {?} */\nHierarchyBarService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nHierarchyBarService.ctorParameters;\n/** @type {?} */\nHierarchyBarService.prototype.nodes$;\n/** @type {?} */\nHierarchyBarService.prototype._root;\n/** @type {?} */\nHierarchyBarService.prototype._nodes;\n}\n\n\nexport interface HierarchyBarNode {\n    icon?: string;\n    title: string;\n    selected?: boolean;\n    parent?: HierarchyBarNode;\n    children?: HierarchyBarNode[] | Observable<HierarchyBarNode[]>;\n}\n\nexport interface HierarchyBarNodeChildren {\n    loading: boolean;\n    children: HierarchyBarNode[];\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, EventEmitter, Input, OnDestroy, Output, QueryList, TemplateRef, ViewChild, ViewChildren } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { Subscription } from 'rxjs/Subscription';\nimport { debounceTime } from 'rxjs/operators';\nimport { HierarchyBarNode, HierarchyBarService } from './hierarchy-bar.service';\nexport class HierarchyBarComponent implements OnDestroy {\n/**\n * @param {?} node\n * @return {?}\n */\nset root(node: HierarchyBarNode) {\n        this.hierarchyBar.setRootNode(node);\n    }\n/**\n * @param {?} node\n * @return {?}\n */\nset selected(node: HierarchyBarNode) {\n        this.hierarchyBar.selectNode(node);\n    }\n\n     loadingIndicator: TemplateRef<any>;\n\n     selectedChange = new EventEmitter<HierarchyBarNode>();\n     nodelist: ElementRef;\n     nodes: QueryList<ElementRef>;\n\n    overflow$ = new BehaviorSubject<boolean>(false);\n    overflowNodes$ = new BehaviorSubject<HierarchyBarNode[]>([]);\nprivate _subscription = new Subscription();\n/**\n * @param {?} hierarchyBar\n */\nconstructor(public hierarchyBar: HierarchyBarService) {\n\n        // subscribe to changes in the selected node\n        const selected = hierarchyBar.nodes$.subscribe(nodes => this.selectedChange.emit(nodes.length === 0 ? null : nodes[nodes.length - 1]));\n        const changed = hierarchyBar.nodes$.pipe(debounceTime(0)).subscribe(() => this.scrollIntoView());\n\n        // store subscriptions\n        this._subscription.add(selected);\n        this._subscription.add(changed);\n    }\n/**\n * @return {?}\n */\nngOnDestroy(): void {\n        this._subscription.unsubscribe();\n    }\n/**\n * When there is overflow ensure that the rightmost\n * node remains in view at all times. The nodes no longer\n * visible be be displayed in a popover available on the\n * overflow indicator\n * @return {?}\n */\nscrollIntoView(): void {\n\n        if (!this.nodelist) {\n            return;\n        }\n\n        // get the native element\n        const { nativeElement } = this.nodelist;\n\n        // emit whether or not there is overflow\n        this.overflow$.next(nativeElement.scrollWidth > nativeElement.offsetWidth);\n\n        // if the hierarchy bar contents do not overflow then do nothing\n        if (nativeElement.scrollWidth > nativeElement.offsetWidth) {\n\n            // determine the amount of overflow\n            const /** @type {?} */ overflowAmount = nativeElement.scrollWidth - nativeElement.offsetWidth;\n\n            // determine which nodes are not fully visible\n            this.overflowNodes$.next(\n                this.nodes.filter(node => node.nativeElement.offsetLeft < overflowAmount)\n                    .map((node, index) => this.hierarchyBar.nodes$.value[index])\n            );\n\n            // move the scroll position to always show the last itme\n            this.nodelist.nativeElement.scrollLeft = overflowAmount;\n        }\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-hierarchy-bar',\n    template: `\n      <!-- Allow content to be placed on the left of the items -->\n      <aside class=\"hierarchy-bar-addons\">\n          <ng-content select=\"[uxHierarchyBarLeftAddon]\"></ng-content>\n      </aside>\n\n      <main #nodelist class=\"hierarchy-bar-nodes\" (uxResize)=\"scrollIntoView()\">\n\n          <div *ngIf=\"overflow$ | async\"\n               #popover=\"ux-popover\"\n               class=\"hierarchy-bar-overflow-indicator\"\n               [style.left.px]=\"nodelist.scrollLeft\"\n               [uxPopover]=\"overflow\"\n               [popoverContext]=\"{ popover: popover }\"\n               placement=\"bottom\"\n               popoverClass=\"hierarchy-bar-popover\">\n              . . .\n          </div>\n\n          <div #nodeElement class=\"hierarchy-bar-node\"\n               *ngFor=\"let node of hierarchyBar.nodes$ | async\">\n\n              <button class=\"hierarchy-bar-node-content\"\n                      [attr.aria-label]=\"node.title\"\n                      (click)=\"hierarchyBar.selectNode(node)\">\n\n                  <!-- Show an icon if specifed -->\n                  <img class=\"hierarchy-bar-node-icon\" *ngIf=\"node.icon\" [src]=\"node.icon\" alt=\"Hierarchy Bar Icon\">\n\n                  <!-- Show the name of the current node -->\n                  <span class=\"hierarchy-bar-node-title\">{{ node.title }}</span>\n\n              </button>\n\n              <!-- Show a dropdown arrow if there are children -->\n              <button *ngIf=\"node.children\"\n                    #popover=\"ux-popover\"\n                    aria-label=\"Show children\"\n                    role=\"button\"\n                    class=\"hierarchy-bar-node-arrow hpe-icon hpe-next\"\n                    [uxPopover]=\"content\"\n                    [popoverContext]=\"{ node: node, popover: popover }\"\n                    placement=\"bottom\"\n                    popoverClass=\"hierarchy-bar-popover\"\n                    tabindex=\"0\">\n              </button>\n\n          </div>\n\n      </main>\n\n      <!-- Allow content to be placed on the right of the items -->\n      <aside class=\"hierarchy-bar-addons\">\n          <ng-content select=\"[uxHierarchyBarRightAddon]\"></ng-content>\n      </aside>\n\n      <!-- Template for the popover list -->\n      <ng-template #content let-node=\"node\" let-popover=\"popover\">\n\n          <!-- Loading Indicator -->\n          <ul class=\"hierarchy-bar-node-list\" *ngIf=\"(hierarchyBar.getChildren(node) | async).loading\">\n\n              <li class=\"hierarchy-bar-node-list-item\">\n                  <ng-container [ngTemplateOutlet]=\"loadingIndicator || defaultLoadingIndicator\"></ng-container>\n              </li>\n          </ul>\n\n          <!-- List of children -->\n          <ul class=\"hierarchy-bar-node-list\" *ngIf=\"!(hierarchyBar.getChildren(node) | async).loading\">\n\n              <li *ngFor=\"let child of (hierarchyBar.getChildren(node) | async).children; let first = first\"\n                  class=\"hierarchy-bar-node-list-item\"\n                  [focusIf]=\"first\"\n                  tabindex=\"0\"\n                  (keydown.enter)=\"hierarchyBar.selectNode(child); popover.hide()\"\n                  (click)=\"hierarchyBar.selectNode(child); popover.hide()\">\n\n                  <!-- Show an icon if specifed -->\n                  <img class=\"hierarchy-bar-node-icon\" *ngIf=\"child.icon\" [src]=\"child.icon\" alt=\"Hierarchy Bar Icon\">\n\n                  <!-- Show the name of the current node -->\n                  <span class=\"hierarchy-bar-node-title\">{{ child.title }}</span>\n\n              </li>\n\n          </ul>\n      </ng-template>\n\n      <!-- Template for the overflow popover list -->\n      <ng-template #overflow let-popover=\"popover\">\n\n          <ul class=\"hierarchy-bar-node-list\">\n\n              <li *ngFor=\"let child of overflowNodes$ | async; let first = first\"\n                  class=\"hierarchy-bar-node-list-item\"\n                  tabindex=\"0\"\n                  [focusIf]=\"first\"\n                  (click)=\"hierarchyBar.selectNode(child); popover.hide()\"\n                  (keydown.enter)=\"hierarchyBar.selectNode(child); popover.hide()\">\n\n                  <!-- Show an icon if specifed -->\n                  <img class=\"hierarchy-bar-node-icon\" *ngIf=\"child.icon\" [src]=\"child.icon\" alt=\"Hierarchy Bar Icon\">\n\n                  <!-- Show the name of the current node -->\n                  <span class=\"hierarchy-bar-node-title\">{{ child.title }}</span>\n\n              </li>\n\n          </ul>\n      </ng-template>\n\n      <!-- Loading Indicator Template -->\n      <ng-template #defaultLoadingIndicator>\n          <div class=\"hierarchy-bar-node-icon\" alt=\"Hierarchy Bar Loading Indicator\">\n              <div class=\"spinner spinner-accent spinner-bounce-middle\"></div>\n          </div>\n\n          <!-- Show the name of the current node -->\n          <span class=\"hierarchy-bar-node-title\">Loading...</span>\n      </ng-template>\n    `,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    viewProviders: [HierarchyBarService]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: HierarchyBarService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'root': [{ type: Input },],\n'selected': [{ type: Input },],\n'loadingIndicator': [{ type: Input },],\n'selectedChange': [{ type: Output },],\n'nodelist': [{ type: ViewChild, args: ['nodelist', ] },],\n'nodes': [{ type: ViewChildren, args: ['nodeElement', ] },],\n};\n}\n\nfunction HierarchyBarComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nHierarchyBarComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nHierarchyBarComponent.ctorParameters;\n/** @type {?} */\nHierarchyBarComponent.propDecorators;\n/** @type {?} */\nHierarchyBarComponent.prototype.loadingIndicator;\n/** @type {?} */\nHierarchyBarComponent.prototype.selectedChange;\n/** @type {?} */\nHierarchyBarComponent.prototype.nodelist;\n/** @type {?} */\nHierarchyBarComponent.prototype.nodes;\n/** @type {?} */\nHierarchyBarComponent.prototype.overflow$;\n/** @type {?} */\nHierarchyBarComponent.prototype.overflowNodes$;\n/** @type {?} */\nHierarchyBarComponent.prototype._subscription;\n/** @type {?} */\nHierarchyBarComponent.prototype.hierarchyBar;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, Output, EventEmitter, ElementRef, HostListener } from '@angular/core';\nexport class ClickOutsideDirective {\n\n     uxClickOutside = new EventEmitter<MouseEvent>();\n/**\n * @param {?} _elementRef\n */\nconstructor(private _elementRef: ElementRef) { }\n/**\n * @param {?} event\n * @return {?}\n */\nclick(event: MouseEvent): void {\n        if (this._elementRef.nativeElement !== event.target && !this._elementRef.nativeElement.contains(event.target)) {\n            this.uxClickOutside.emit(event);\n        }\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{ \n    selector: '[uxClickOutside]'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'uxClickOutside': [{ type: Output },],\n'click': [{ type: HostListener, args: ['document:click', ['$event'], ] },],\n};\n}\n\nfunction ClickOutsideDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nClickOutsideDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nClickOutsideDirective.ctorParameters;\n/** @type {?} */\nClickOutsideDirective.propDecorators;\n/** @type {?} */\nClickOutsideDirective.prototype.uxClickOutside;\n/** @type {?} */\nClickOutsideDirective.prototype._elementRef;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { ClickOutsideDirective } from './click-outside.directive';\nexport class ClickOutsideModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    exports: [ClickOutsideDirective],\n    declarations: [ClickOutsideDirective]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ClickOutsideModule_tsickle_Closure_declarations() {\n/** @type {?} */\nClickOutsideModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nClickOutsideModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { Subject } from 'rxjs/Subject';\nimport { TooltipComponent } from '../tooltip/index';\n\nlet /** @type {?} */ uniquePopoverId = 0;\nexport class PopoverComponent extends TooltipComponent {\n/**\n * Define a unique id for each popover\n */\nid: string = `ux-popover-${++uniquePopoverId}`;\n/**\n * If specified allows the popover to show a title\n */\ntitle: string;\n/**\n * This will emit an event any time the user clicks outside the popover\n */\nclickOutside$ = new Subject<MouseEvent>();\n/**\n * This will update the title of the popover and trigger change detection\n * @param {?} title\n * @return {?}\n */\nsetTitle(title: string): void {\n    this.title = title;\n    this._changeDetectorRef.markForCheck();\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'ux-popover',\n  template: `\n    <div class=\"popover show\" [ngClass]=\"[placement, customClass]\" [id]=\"id\" [attr.role]=\"role\" (uxClickOutside)=\"clickOutside$.next($event)\">\n        <div class=\"arrow\"></div>\n        <h3 class=\"popover-title\" *ngIf=\"title\">{{ title }}</h3>\n        <div class=\"popover-content\" (cdkObserveContent)=\"reposition()\">\n            <ng-container *ngIf=\"!isTemplateRef\">{{ content }}</ng-container>\n            <ng-container *ngIf=\"isTemplateRef\" [ngTemplateOutlet]=\"content\" [ngTemplateOutletContext]=\"context\"></ng-container>\n        </div>\n    </div>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction PopoverComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nPopoverComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nPopoverComponent.ctorParameters;\n/**\n * Define a unique id for each popover\n * @type {?}\n */\nPopoverComponent.prototype.id;\n/**\n * If specified allows the popover to show a title\n * @type {?}\n */\nPopoverComponent.prototype.title;\n/**\n * This will emit an event any time the user clicks outside the popover\n * @type {?}\n */\nPopoverComponent.prototype.clickOutside$;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { ESCAPE } from '@angular/cdk/keycodes';\nimport { OverlayRef } from '@angular/cdk/overlay';\nimport { ComponentPortal } from '@angular/cdk/portal';\nimport { Directive, HostBinding, Input, OnChanges, OnInit, SimpleChanges, TemplateRef } from '@angular/core';\nimport { fromEvent } from 'rxjs/observable/fromEvent';\nimport { takeUntil } from 'rxjs/operators';\nimport { TooltipDirective } from '../tooltip/index';\nimport { PopoverComponent } from './popover.component';\nexport class PopoverDirective extends TooltipDirective implements OnInit, OnChanges {\n/**\n * Contains the content of the popover or a TemplateRef for more detailed content\n */\ncontent: string | TemplateRef<any>;\n/**\n * Optionally display a title in the popover\n */\ntitle: string;\n/**\n * Allow the popover to be conditionally disabled\n */\ndisabled: boolean;\n/**\n * All the user to add a custom class to the popover\n */\ncustomClass: string = '';\n/**\n * All the user to add a role to the popover - default is tooltip\n */\nrole: string = 'tooltip';\n/**\n * Provide the TemplateRef a context object\n */\ncontext: any = {};\n/**\n * Delay the showing of the popover by a number of miliseconds\n */\ndelay: number = 0;\n/**\n * Specify which events should show the popover\n */\nshowTriggers: string[] = ['click'];\n/**\n * Specify which events should hide the popover\n */\nhideTriggers: string[] = ['click', 'clickoutside', 'escape'];\n/**\n * Keep track of the tooltip visibility and update aria-expanded attribute\n */\nisVisible: boolean = false;\n/**\n * A reference to the CDK portal containing the overlay\n */\nprotected _portal: ComponentPortal<PopoverComponent>;\n/**\n * A reference to the instance of the popover component when created\n */\nprotected _instance: PopoverComponent;\n/**\n * Determine whether or not an aria-describedby property originally existed on the element\n */\nprivate _ariaDescribedBy: boolean;\n/**\n * Internally store the type of this component - usual for distinctions when extending the tooltip class\n */\nprotected _type: string = 'popover';\n/**\n * Set up the triggers and bind to the show/hide events to keep visibility in sync\n * @return {?}\n */\nngOnInit(): void {\n\n        // set up the event triggers\n        fromEvent(document, 'keydown').pipe(takeUntil(this._onDestroy)).subscribe(this.onKeyDown.bind(this));\n\n        // check if there is an aria-described by attribute\n        this._ariaDescribedBy = this._elementRef.nativeElement.hasAttribute('aria-describedby');\n\n        // set up the default event triggers\n        super.ngOnInit();\n    }\n/**\n * We need to send input changes to the popover component\n * We can't use setters as they may trigger before popover initialised and can't resend once initialised\n * \n * @param {?} changes\n * @return {?}\n */\nngOnChanges(changes: SimpleChanges): void {\n        super.ngOnChanges(changes);\n\n        if (this._instance && changes.title) {\n            this._instance.setTitle(changes.title.currentValue);\n        }\n    }\n/**\n * @param {?} overlayRef\n * @return {?}\n */\nprotected createInstance(overlayRef: OverlayRef): PopoverComponent {\n        const /** @type {?} */ instance = /** @type {?} */(( overlayRef.attach(this._portal).instance as PopoverComponent));\n\n        // supply the tooltip with the correct properties\n        instance.setTitle(this.title);\n        instance.setContent(this.content);\n        instance.setPlacement(this.placement);\n        instance.setClass(this.customClass);\n        instance.setContext(this.context);\n        instance.setRole(this.role);\n\n        // Update the aria-describedby attribute\n        this.setAriaDescribedBy(instance.id);\n\n        // subscribe to the outside click event\n        instance.clickOutside$.pipe(takeUntil(this._onDestroy)).subscribe(this.onClickOutside.bind(this));\n\n        return instance;\n    }\n/**\n * @return {?}\n */\nprotected createPortal(): ComponentPortal<PopoverComponent> {\n        return this._portal || new ComponentPortal(PopoverComponent, this._viewContainerRef);\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nprivate onKeyDown(event: KeyboardEvent): void {\n\n        // if visible and the escape key is pressed and it is one of the hide triggers\n        if (this.isVisible && event.keyCode === ESCAPE && this.includes(this.hideTriggers, 'escape')) {\n            this.hide();\n        }\n    }\n/**\n * @return {?}\n */\nprivate onClickOutside(): void {\n        // if visible and it is one of the hide triggers\n        if (this.isVisible && this.includes(this.hideTriggers, 'clickoutside')) {\n            this.hide();\n        }\n    }\n/**\n * Programmatically update the aria-describedby property\n * @param {?} id\n * @return {?}\n */\nprotected setAriaDescribedBy(id: string | null): void {\n\n        // we only want to set the aria-describedby attr when the content is a string and there was no user defined attribute already\n        if (this._ariaDescribedBy === false && typeof this.content === 'string') {\n            super.setAriaDescribedBy(id);\n        }\n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: '[uxPopover]',\n    exportAs: 'ux-popover'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'content': [{ type: Input, args: ['uxPopover', ] },],\n'title': [{ type: Input, args: ['popoverTitle', ] },],\n'disabled': [{ type: Input, args: ['popoverDisabled', ] },],\n'customClass': [{ type: Input, args: ['popoverClass', ] },],\n'role': [{ type: Input, args: ['popoverRole', ] },],\n'context': [{ type: Input, args: ['popoverContext', ] },],\n'delay': [{ type: Input, args: ['popoverDelay', ] },],\n'showTriggers': [{ type: Input },],\n'hideTriggers': [{ type: Input },],\n'isVisible': [{ type: HostBinding, args: ['attr.aria-expanded', ] },],\n};\n}\n\nfunction PopoverDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nPopoverDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nPopoverDirective.ctorParameters;\n/** @type {?} */\nPopoverDirective.propDecorators;\n/**\n * Contains the content of the popover or a TemplateRef for more detailed content\n * @type {?}\n */\nPopoverDirective.prototype.content;\n/**\n * Optionally display a title in the popover\n * @type {?}\n */\nPopoverDirective.prototype.title;\n/**\n * Allow the popover to be conditionally disabled\n * @type {?}\n */\nPopoverDirective.prototype.disabled;\n/**\n * All the user to add a custom class to the popover\n * @type {?}\n */\nPopoverDirective.prototype.customClass;\n/**\n * All the user to add a role to the popover - default is tooltip\n * @type {?}\n */\nPopoverDirective.prototype.role;\n/**\n * Provide the TemplateRef a context object\n * @type {?}\n */\nPopoverDirective.prototype.context;\n/**\n * Delay the showing of the popover by a number of miliseconds\n * @type {?}\n */\nPopoverDirective.prototype.delay;\n/**\n * Specify which events should show the popover\n * @type {?}\n */\nPopoverDirective.prototype.showTriggers;\n/**\n * Specify which events should hide the popover\n * @type {?}\n */\nPopoverDirective.prototype.hideTriggers;\n/**\n * Keep track of the tooltip visibility and update aria-expanded attribute\n * @type {?}\n */\nPopoverDirective.prototype.isVisible;\n/**\n * A reference to the CDK portal containing the overlay\n * @type {?}\n */\nPopoverDirective.prototype._portal;\n/**\n * A reference to the instance of the popover component when created\n * @type {?}\n */\nPopoverDirective.prototype._instance;\n/**\n * Determine whether or not an aria-describedby property originally existed on the element\n * @type {?}\n */\nPopoverDirective.prototype._ariaDescribedBy;\n/**\n * Internally store the type of this component - usual for distinctions when extending the tooltip class\n * @type {?}\n */\nPopoverDirective.prototype._type;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { ObserversModule } from '@angular/cdk/observers';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ClickOutsideModule } from '../../directives/click-outside/index';\nimport { TooltipModule } from '../tooltip/index';\nimport { PopoverComponent } from './popover.component';\nimport { PopoverDirective } from './popover.directive';\nexport class PopoverModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  imports: [\n    CommonModule,\n    OverlayModule,\n    ObserversModule,\n    ClickOutsideModule,\n    TooltipModule\n  ],\n  exports: [PopoverDirective],\n  declarations: [PopoverComponent, PopoverDirective],\n  entryComponents: [PopoverComponent]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction PopoverModule_tsickle_Closure_declarations() {\n/** @type {?} */\nPopoverModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nPopoverModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FocusIfModule } from '../../directives/focus-if/index';\nimport { ResizeModule } from '../../directives/resize/index';\nimport { HierarchyBarComponent } from './hierarchy-bar.component';\nimport { PopoverModule } from '../popover/index';\nexport class HierarchyBarModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        CommonModule,\n        ResizeModule,\n        FocusIfModule,\n        PopoverModule\n    ],\n    exports: [HierarchyBarComponent],\n    declarations: [HierarchyBarComponent],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction HierarchyBarModule_tsickle_Closure_declarations() {\n/** @type {?} */\nHierarchyBarModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nHierarchyBarModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nexport class SidePanelService {\n\n    open$ = new BehaviorSubject<boolean>(false);\n/**\n * @return {?}\n */\nopen() {\n        this.open$.next(true);\n    }\n/**\n * @return {?}\n */\nclose() {\n        this.open$.next(false);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction SidePanelService_tsickle_Closure_declarations() {\n/** @type {?} */\nSidePanelService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSidePanelService.ctorParameters;\n/** @type {?} */\nSidePanelService.prototype.open$;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, OnInit, Input, Output, EventEmitter, OnDestroy, HostBinding, HostListener, ElementRef } from '@angular/core';\nimport { Subscription } from 'rxjs/Subscription';\nimport { SidePanelService } from './side-panel.service';\nexport class SidePanelComponent implements OnInit, OnDestroy {\n/**\n * @return {?}\n */\nget open(): boolean {\n        return this.service.open$.value;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset open(value: boolean) {\n        this.service.open$.next(value);\n    }\n\n    \n    \n    inline = false;\n\n    \n    attachTo: 'window' | 'container' = 'window';\n\n    \n    width: string | number = '50%';\n\n    \n    top: string | number = '0';\n\n    \n    \n    modal = false;\n\n    \n    \n    animate = false;\n\n    \n    closeOnExternalClick = false;\n\n    \n    openChange = new EventEmitter<boolean>();\n/**\n * @return {?}\n */\nget position() {\n        if (this.inline) {\n            return 'static';\n        }\n        if (this.attachTo === 'container') {\n            return 'absolute';\n        }\n        return 'fixed';\n    }\n/**\n * @return {?}\n */\nget cssWidth(): string {\n        if (typeof this.width === 'number') {\n            return this.width === 0 ? '0' : this.width + 'px';\n        }\n        return this.width;\n    }\n/**\n * @return {?}\n */\nget cssTop(): string {\n        if (typeof this.top === 'number') {\n            return this.top === 0 ? '0' : this.top + 'px';\n        }\n        return this.top;\n    }\n/**\n * @return {?}\n */\nget componentWidth(): string {\n        if (this.inline) {\n            return this.open ? this.cssWidth : '0';\n        }\n        return null;\n    }\n/**\n * @return {?}\n */\nget hostWidth() {\n        return this.inline ? '100%' : this.cssWidth;\n    }\nprivate _subscription: Subscription;\n/**\n * @param {?} service\n * @param {?} _elementRef\n */\nconstructor(\n        protected service: SidePanelService,\nprivate _elementRef: ElementRef\n    ) { }\n/**\n * @return {?}\n */\nngOnInit() {\n        this._subscription = this.service.open$.subscribe((next) => {\n            this.openChange.emit(next);\n        });\n    }\n/**\n * @return {?}\n */\nngOnDestroy() {\n        this._subscription.unsubscribe();\n    }\n/**\n * @return {?}\n */\nopenPanel() {\n        this.service.open();\n    }\n/**\n * @return {?}\n */\nclosePanel() {\n        this.service.close();\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nclickHandler(event: MouseEvent) {\n        if (!this.open || !this.closeOnExternalClick) {\n            return;\n        }\n\n        const /** @type {?} */ target = /** @type {?} */(( event.target as HTMLElement));\n\n        if (!this._elementRef.nativeElement.contains(target) ||\n            (target && target.classList.contains('modal-backdrop'))) {\n            this.closePanel();\n        }\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-side-panel',\n    exportAs: 'ux-side-panel',\n    template: `\n      <div *ngIf=\"modal && open\" class=\"modal-backdrop\"\n          [style.position]=\"position\"\n          [style.top]=\"cssTop\"></div>\n\n      <div class=\"ux-side-panel-host\"\n          [class.modal-panel]=\"modal\"\n          [style.position]=\"position\"\n          [style.width]=\"hostWidth\"\n          [style.top]=\"cssTop\">\n          <ng-content></ng-content>\n      </div>\n    `,\n    providers: [SidePanelService],\n    host: {\n        'class': 'ux-side-panel'\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: SidePanelService, },\n{type: ElementRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'open': [{ type: Input },{ type: HostBinding, args: ['class.open', ] },],\n'inline': [{ type: Input },{ type: HostBinding, args: ['class.inline', ] },],\n'attachTo': [{ type: Input },],\n'width': [{ type: Input },],\n'top': [{ type: Input },],\n'modal': [{ type: Input },{ type: HostBinding, args: ['attr.aria-modal', ] },],\n'animate': [{ type: Input },{ type: HostBinding, args: ['class.animate', ] },],\n'closeOnExternalClick': [{ type: Input },],\n'openChange': [{ type: Output },],\n'componentWidth': [{ type: HostBinding, args: ['style.width', ] },],\n'closePanel': [{ type: HostListener, args: ['document:keyup.escape', ] },],\n'clickHandler': [{ type: HostListener, args: ['document:click', ['$event'], ] },],\n};\n}\n\nfunction SidePanelComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nSidePanelComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSidePanelComponent.ctorParameters;\n/** @type {?} */\nSidePanelComponent.propDecorators;\n/** @type {?} */\nSidePanelComponent.prototype.inline;\n/** @type {?} */\nSidePanelComponent.prototype.attachTo;\n/** @type {?} */\nSidePanelComponent.prototype.width;\n/** @type {?} */\nSidePanelComponent.prototype.top;\n/** @type {?} */\nSidePanelComponent.prototype.modal;\n/** @type {?} */\nSidePanelComponent.prototype.animate;\n/** @type {?} */\nSidePanelComponent.prototype.closeOnExternalClick;\n/** @type {?} */\nSidePanelComponent.prototype.openChange;\n/** @type {?} */\nSidePanelComponent.prototype._subscription;\n/** @type {?} */\nSidePanelComponent.prototype.service;\n/** @type {?} */\nSidePanelComponent.prototype._elementRef;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Directive, Input, Output, EventEmitter, ContentChild, ElementRef } from '@angular/core';\nimport { Subscription } from 'rxjs/Subscription';\nimport { SidePanelComponent } from '../side-panel/side-panel.component';\nimport { SidePanelService } from '../side-panel/side-panel.service';\nexport class ItemDisplayPanelContentDirective { static decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: '[uxItemDisplayPanelContent]'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ItemDisplayPanelContentDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nItemDisplayPanelContentDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nItemDisplayPanelContentDirective.ctorParameters;\n}\n\nexport class ItemDisplayPanelFooterDirective { static decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: '[uxItemDisplayPanelFooter]'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ItemDisplayPanelFooterDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nItemDisplayPanelFooterDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nItemDisplayPanelFooterDirective.ctorParameters;\n}\n\nexport class ItemDisplayPanelComponent extends SidePanelComponent {\n\n     header: string;\n\n     boxShadow: boolean = true;\n\n     closeVisible: boolean = true;\n/**\n * @return {?}\n */\nget preventClose(): boolean {\n        return !this.closeOnExternalClick;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset preventClose(value: boolean) {\n        this.closeOnExternalClick = !value;\n    }\n\n     shadow: boolean = false;\n\n     footer: ItemDisplayPanelFooterDirective;\n\n     visibleChange: EventEmitter<boolean> = new EventEmitter<boolean>();\n/**\n * @deprecated \n * Title used for adding tooltips and shouldn't be used as an input\n * instead header will be used. This is here to support backward compatibility only\n * this property should not be used.\n * @param {?} value\n * @return {?}\n */\nset title(value: string) {\n        this.header = value;\n    }\n/**\n * @return {?}\n */\nget title() {\n        return this.header;\n    }\n/**\n * @param {?} visible\n * @return {?}\n */\nset visible(visible: boolean) {\n        this.open = visible;\n    }\n/**\n * @return {?}\n */\nget visible() {\n        return this.open;\n    }\nprivate _itemDisplayPanelSubscription: Subscription;\n/**\n * @param {?} service\n * @param {?} elementRef\n */\nconstructor(service: SidePanelService, elementRef: ElementRef) {\n        super(service, elementRef);\n\n        this.animate = false;\n        this.closeOnExternalClick = true;\n    }\n/**\n * @return {?}\n */\nngOnInit() {\n        this._itemDisplayPanelSubscription = this.service.open$.subscribe((next) => {\n            this.visibleChange.emit(next);\n        });\n    }\n/**\n * @return {?}\n */\nngOnDestroy() {\n        this._itemDisplayPanelSubscription.unsubscribe();\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-item-display-panel',\n    template: `\n      <div class=\"ux-side-panel-host ux-item-display-panel\"\n          [class.box-shadow]=\"boxShadow\"\n          [style.position]=\"position\"\n          [style.width]=\"hostWidth\"\n          [style.top]=\"cssTop\">\n\n          <div class=\"ux-side-panel-header\" [class.item-display-panel-shadow]=\"shadow\">\n              <h3>{{ header }}</h3>\n              <button *ngIf=\"closeVisible\" type=\"button\" class=\"btn btn-lg btn-link btn-icon button-secondary\" (click)=\"visible = false\">\n                  <i class=\"hpe-icon hpe-close\"></i>\n              </button>\n          </div>\n\n          <div class=\"ux-side-panel-content\">\n              <ng-content select=\"[uxItemDisplayPanelContent]\"></ng-content>\n          </div>\n\n          <div class=\"ux-side-panel-footer\" *ngIf=\"footer\">\n              <ng-content select=\"[uxItemDisplayPanelFooter]\"></ng-content>\n          </div>\n\n      </div>\n    `,\n    providers: [SidePanelService],\n    host: {\n        'class': 'ux-side-panel ux-item-display-panel'\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: SidePanelService, },\n{type: ElementRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'header': [{ type: Input },],\n'boxShadow': [{ type: Input },],\n'closeVisible': [{ type: Input },],\n'preventClose': [{ type: Input },],\n'shadow': [{ type: Input },],\n'footer': [{ type: ContentChild, args: [ItemDisplayPanelFooterDirective, ] },],\n'visibleChange': [{ type: Output },],\n'title': [{ type: Input },],\n'visible': [{ type: Input },],\n};\n}\n\nfunction ItemDisplayPanelComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nItemDisplayPanelComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nItemDisplayPanelComponent.ctorParameters;\n/** @type {?} */\nItemDisplayPanelComponent.propDecorators;\n/** @type {?} */\nItemDisplayPanelComponent.prototype.header;\n/** @type {?} */\nItemDisplayPanelComponent.prototype.boxShadow;\n/** @type {?} */\nItemDisplayPanelComponent.prototype.closeVisible;\n/** @type {?} */\nItemDisplayPanelComponent.prototype.shadow;\n/** @type {?} */\nItemDisplayPanelComponent.prototype.footer;\n/** @type {?} */\nItemDisplayPanelComponent.prototype.visibleChange;\n/** @type {?} */\nItemDisplayPanelComponent.prototype._itemDisplayPanelSubscription;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ItemDisplayPanelComponent, ItemDisplayPanelContentDirective, ItemDisplayPanelFooterDirective } from './item-display-panel.component';\n\nconst /** @type {?} */ DECLARATIONS = [\n    ItemDisplayPanelComponent,\n    ItemDisplayPanelContentDirective,\n    ItemDisplayPanelFooterDirective\n];\nexport class ItemDisplayPanelModule {static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        CommonModule\n    ],\n    exports: DECLARATIONS,\n    declarations: DECLARATIONS\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ItemDisplayPanelModule_tsickle_Closure_declarations() {\n/** @type {?} */\nItemDisplayPanelModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nItemDisplayPanelModule.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Input, EventEmitter } from '@angular/core';\nexport class WizardStepComponent {\n    \n     header: string;\n     valid: boolean = true;\n     visitedChange = new EventEmitter<boolean>();\nprivate _active: boolean = false;\nprivate _visited: boolean = false;\n/**\n * @return {?}\n */\nget visited(): boolean {\n        return this._visited;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset visited(value: boolean) {\n        this._visited = value;\n        this.visitedChange.next(value);\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset active(value: boolean) {\n        \n        // store the active state of the step\n        this._active = value;\n\n        // if the value is true then the step should also be marked as visited\n        if (value === true) {\n            this.visited = true;\n        }\n    }\n/**\n * @return {?}\n */\nget active(): boolean {\n        return this._active;\n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-wizard-step',\n    template: `\n      <ng-container *ngIf=\"active\">\n          <ng-content></ng-content>\n      </ng-container>\n    `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'header': [{ type: Input },],\n'valid': [{ type: Input },],\n'visitedChange': [{ type: Input },],\n'visited': [{ type: Input },],\n};\n}\n\nfunction WizardStepComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nWizardStepComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nWizardStepComponent.ctorParameters;\n/** @type {?} */\nWizardStepComponent.propDecorators;\n/** @type {?} */\nWizardStepComponent.prototype.header;\n/** @type {?} */\nWizardStepComponent.prototype.valid;\n/** @type {?} */\nWizardStepComponent.prototype.visitedChange;\n/** @type {?} */\nWizardStepComponent.prototype._active;\n/** @type {?} */\nWizardStepComponent.prototype._visited;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { AfterViewInit, Component, ContentChildren, EventEmitter, Input, Output, QueryList } from '@angular/core';\nimport { WizardStepComponent } from './wizard-step.component';\nexport class WizardComponent implements AfterViewInit {\nprivate _step: number = 0;\n\n     steps = new QueryList<WizardStepComponent>();\n\n     orientation: 'horizontal' | 'vertical' = 'horizontal';\n\n     nextText: string = 'Next';\n     previousText: string = 'Previous';\n     cancelText: string = 'Cancel';\n     finishText: string = 'Finish';\n\n     nextTooltip: string = 'Go to the next step';\n     previousTooltip: string = 'Go to the previous step';\n     cancelTooltip: string = 'Cancel the wizard';\n     finishTooltip: string = 'Finish the wizard';\n\n     nextDisabled: boolean = false;\n     previousDisabled: boolean = false;\n     cancelDisabled: boolean = false;\n     finishDisabled: boolean = false;\n\n     nextVisible: boolean = true;\n     previousVisible: boolean = true;\n     cancelVisible: boolean = true;\n     finishVisible: boolean = true;\n     cancelAlwaysVisible: boolean = false;\n     finishAlwaysVisible: boolean = false;\n\n     onNext = new EventEmitter<number>();\n     onPrevious = new EventEmitter<number>();\n     onCancel = new EventEmitter<void>();\n     onFinishing = new EventEmitter<void>();\n     onFinish = new EventEmitter<void>();\n     stepChanging = new EventEmitter<StepChangingEvent>();\n     stepChange = new EventEmitter<number>();\n\n    invalidIndicator: boolean = false;\n/**\n * @return {?}\n */\nget step() {\n        return this._step;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset step(value: number) {\n\n        // only accept numbers as valid options\n        if (typeof value === 'number') {\n\n            // store the active step\n            this._step = value;\n\n            // update which steps should be active\n            this.update();\n\n            // emit the change event\n            this.stepChange.next(this.step);\n\n            // reset the invalid state\n            this.invalidIndicator = false;\n        }\n    }\n/**\n * @return {?}\n */\nngAfterViewInit(): void {\n\n        // initially set the correct visibility of the steps\n        setTimeout(this.update.bind(this));\n    }\n/**\n * Navigate to the next step\n * @return {?}\n */\nnext(): void {\n\n        this.stepChanging.next(new StepChangingEvent(this.step, this.step + 1));\n\n        // check if current step is invalid\n        if (!this.getCurrentStep().valid) {\n            this.invalidIndicator = true;\n            return;\n        }\n\n        // check if we are currently on the last step\n        if ((this.step + 1) < this.steps.length) {\n            this.step++;\n\n            // emit the current step\n            this.onNext.next(this.step);\n        }\n    }\n/**\n * Navigate to the previous step\n * @return {?}\n */\nprevious(): void {\n\n        this.stepChanging.next(new StepChangingEvent(this.step, this.step - 1));\n\n        // check if we are currently on the last step\n        if (this.step > 0) {\n            this.step--;\n\n            // emit the current step\n            this.onPrevious.next(this.step);\n        }\n    }\n/**\n * Perform actions when the finish button is clicked\n * @return {?}\n */\nfinish(): Promise<void> {\n\n        // fires when the finish button is clicked always\n        this.onFinishing.next();\n\n        /**\n         * This is required because we need to ensure change detection has run\n         * to determine whether or not we have the latest value for the 'valid' input\n         * on the current step. Unfortunately we can't use ChangeDetectorRef as we are looking to run\n         * on content children, and we cant use ApplicationRef.tick() as this does not work in a hybrid app, eg. our docs\n         */\n        return new Promise<void>(resolve => {\n            setTimeout(() => {\n\n                // only fires when the finish button is clicked and the step is valid\n                if (this.getCurrentStep().valid) {\n                    this.onFinish.next();        \n                }\n\n                resolve();\n            });\n        });\n    }\n/**\n * Perform actions when the cancel button is clicked\n * @return {?}\n */\ncancel(): void {\n        this.onCancel.next();\n    }\n/**\n * Update the active state of each step\n * @return {?}\n */\nupdate(): void {\n        // update which steps should be active\n        this.steps.forEach((step, idx) => step.active = idx === this.step);\n    }\n/**\n * Jump to a specific step only if the step has previously been visited\n * @param {?} step\n * @return {?}\n */\ngotoStep(step: WizardStepComponent): void {\n        if (step.visited) {\n\n            const /** @type {?} */ stepIndex = this.steps.toArray().findIndex(stp => stp === step);\n\n            this.stepChanging.next(new StepChangingEvent(this.step, stepIndex));\n\n            this.step = stepIndex;\n        }\n    }\n/**\n * Determine if the current step is the last step\n * @return {?}\n */\nisLastStep(): boolean {\n        return this.step === (this.steps.length - 1);\n    }\n/**\n * Reset the wizard - goes to first step and resets visited state\n * @return {?}\n */\nreset(): void {\n\n        // mark all steps as not visited\n        this.steps.forEach(step => step.visited = false);\n\n        // go to the first step\n        this.step = 0;\n    }\n/**\n * Get the step at the current index\n * @return {?}\n */\ngetCurrentStep(): WizardStepComponent {\n        return this.getStepAtIndex(this.step);\n    }\n/**\n * Return a step at a specific index\n * @param {?} index\n * @return {?}\n */\ngetStepAtIndex(index: number): WizardStepComponent {\n        return this.steps.toArray()[index];\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-wizard',\n    template: `\n      <div class=\"wizard-body\">\n\n          <div class=\"wizard-steps\">\n\n              <div class=\"wizard-step\" [class.active]=\"stp.active\" [class.visited]=\"stp.visited\" [class.invalid]=\"stp.active && !stp.valid && invalidIndicator\" (click)=\"gotoStep(stp)\" *ngFor=\"let stp of steps\">\n                  {{ stp.header }}\n              </div>\n\n          </div>\n\n          <div class=\"wizard-content\">\n              <ng-content></ng-content>\n          </div>\n\n      </div>\n\n      <div class=\"wizard-footer\">\n          <button #tip=\"ux-tooltip\" class=\"btn button-secondary\" *ngIf=\"previousVisible\" [uxTooltip]=\"previousTooltip\" [disabled]=\"previousDisabled || step === 0\"\n              (click)=\"previous(); tip.hide()\">{{ previousText }}</button>\n\n          <button #tip=\"ux-tooltip\" class=\"btn button-primary\" *ngIf=\"nextVisible && !isLastStep()\" [uxTooltip]=\"nextTooltip\" [disabled]=\"nextDisabled\"\n              (click)=\"next(); tip.hide()\">{{ nextText }}</button>\n\n          <button #tip=\"ux-tooltip\" class=\"btn button-primary\" *ngIf=\"finishVisible && isLastStep() || finishAlwaysVisible\" [uxTooltip]=\"finishTooltip\"\n              [disabled]=\"finishDisabled\" (click)=\"finish(); tip.hide()\">{{ finishText }}</button>\n\n          <button #tip=\"ux-tooltip\" class=\"btn button-secondary\" *ngIf=\"cancelVisible && !isLastStep() || cancelAlwaysVisible\" [uxTooltip]=\"cancelTooltip\"\n              [disabled]=\"cancelDisabled\" (click)=\"cancel(); tip.hide()\">{{ cancelText }}</button>\n      </div>\n    `,\n    host: {\n        '[class]': 'orientation'\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'steps': [{ type: ContentChildren, args: [WizardStepComponent, ] },],\n'orientation': [{ type: Input },],\n'nextText': [{ type: Input },],\n'previousText': [{ type: Input },],\n'cancelText': [{ type: Input },],\n'finishText': [{ type: Input },],\n'nextTooltip': [{ type: Input },],\n'previousTooltip': [{ type: Input },],\n'cancelTooltip': [{ type: Input },],\n'finishTooltip': [{ type: Input },],\n'nextDisabled': [{ type: Input },],\n'previousDisabled': [{ type: Input },],\n'cancelDisabled': [{ type: Input },],\n'finishDisabled': [{ type: Input },],\n'nextVisible': [{ type: Input },],\n'previousVisible': [{ type: Input },],\n'cancelVisible': [{ type: Input },],\n'finishVisible': [{ type: Input },],\n'cancelAlwaysVisible': [{ type: Input },],\n'finishAlwaysVisible': [{ type: Input },],\n'onNext': [{ type: Output },],\n'onPrevious': [{ type: Output },],\n'onCancel': [{ type: Output },],\n'onFinishing': [{ type: Output },],\n'onFinish': [{ type: Output },],\n'stepChanging': [{ type: Output },],\n'stepChange': [{ type: Output },],\n'step': [{ type: Input },],\n};\n}\n\nfunction WizardComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nWizardComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nWizardComponent.ctorParameters;\n/** @type {?} */\nWizardComponent.propDecorators;\n/** @type {?} */\nWizardComponent.prototype._step;\n/** @type {?} */\nWizardComponent.prototype.steps;\n/** @type {?} */\nWizardComponent.prototype.orientation;\n/** @type {?} */\nWizardComponent.prototype.nextText;\n/** @type {?} */\nWizardComponent.prototype.previousText;\n/** @type {?} */\nWizardComponent.prototype.cancelText;\n/** @type {?} */\nWizardComponent.prototype.finishText;\n/** @type {?} */\nWizardComponent.prototype.nextTooltip;\n/** @type {?} */\nWizardComponent.prototype.previousTooltip;\n/** @type {?} */\nWizardComponent.prototype.cancelTooltip;\n/** @type {?} */\nWizardComponent.prototype.finishTooltip;\n/** @type {?} */\nWizardComponent.prototype.nextDisabled;\n/** @type {?} */\nWizardComponent.prototype.previousDisabled;\n/** @type {?} */\nWizardComponent.prototype.cancelDisabled;\n/** @type {?} */\nWizardComponent.prototype.finishDisabled;\n/** @type {?} */\nWizardComponent.prototype.nextVisible;\n/** @type {?} */\nWizardComponent.prototype.previousVisible;\n/** @type {?} */\nWizardComponent.prototype.cancelVisible;\n/** @type {?} */\nWizardComponent.prototype.finishVisible;\n/** @type {?} */\nWizardComponent.prototype.cancelAlwaysVisible;\n/** @type {?} */\nWizardComponent.prototype.finishAlwaysVisible;\n/** @type {?} */\nWizardComponent.prototype.onNext;\n/** @type {?} */\nWizardComponent.prototype.onPrevious;\n/** @type {?} */\nWizardComponent.prototype.onCancel;\n/** @type {?} */\nWizardComponent.prototype.onFinishing;\n/** @type {?} */\nWizardComponent.prototype.onFinish;\n/** @type {?} */\nWizardComponent.prototype.stepChanging;\n/** @type {?} */\nWizardComponent.prototype.stepChange;\n/** @type {?} */\nWizardComponent.prototype.invalidIndicator;\n}\n\nexport class StepChangingEvent {\n/**\n * @param {?} from\n * @param {?} to\n */\nconstructor(public from: number,\npublic to: number) { }\n}\n\nfunction StepChangingEvent_tsickle_Closure_declarations() {\n/** @type {?} */\nStepChangingEvent.prototype.from;\n/** @type {?} */\nStepChangingEvent.prototype.to;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { WizardComponent } from './wizard.component';\nimport { WizardStepComponent } from './wizard-step.component';\nimport { TooltipModule } from '../tooltip/index';\n\nconst /** @type {?} */ DECLARATIONS = [\n    WizardComponent,\n    WizardStepComponent\n];\nexport class WizardModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        CommonModule,\n        TooltipModule\n    ],\n    exports: DECLARATIONS,\n    declarations: DECLARATIONS\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction WizardModule_tsickle_Closure_declarations() {\n/** @type {?} */\nWizardModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nWizardModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs/Subject';\nimport { MarqueeWizardStepComponent } from './marquee-wizard-step.component';\n/**\n * This service is required to provide a form of communication\n * between the marquee wizard steps and the containing marquee wizard.\n * We cannot inject the Host due to the steps being content children \n * rather than view children.\n */\nexport class MarqueeWizardService {\n    valid$ = new Subject<MarqueeWizardValidEvent>();\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction MarqueeWizardService_tsickle_Closure_declarations() {\n/** @type {?} */\nMarqueeWizardService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMarqueeWizardService.ctorParameters;\n/** @type {?} */\nMarqueeWizardService.prototype.valid$;\n}\n\n\nexport interface MarqueeWizardValidEvent {\n    step: MarqueeWizardStepComponent;\n    valid: boolean;\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { WizardStepComponent } from '../wizard/index';\nimport { MarqueeWizardService } from './marquee-wizard.service';\nexport class MarqueeWizardStepComponent extends WizardStepComponent {\n\n     icon: string;\n     completed: boolean = false;\n     completedChange = new EventEmitter<boolean>();\n/**\n * @return {?}\n */\nget valid(): boolean {\n        return this._valid;\n    }\n/**\n * @param {?} valid\n * @return {?}\n */\nset valid(valid: boolean) {\n        this._valid = valid;\n\n        if (this._marqueeWizardService) {\n            this._marqueeWizardService.valid$.next({ step: this, valid: valid });\n        }\n    }\nprivate _valid: boolean = true;\n/**\n * @param {?} _marqueeWizardService\n */\nconstructor(private _marqueeWizardService: MarqueeWizardService) {\n        super();\n    }\n/**\n * Update the completed state and emit the latest value\n * @param {?} completed whether or not the step is completed\n * @return {?}\n */\nsetCompleted(completed: boolean): void {\n        this.completed = completed;\n        this.completedChange.emit(completed);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-marquee-wizard-step',\n    template: `\n      <ng-container *ngIf=\"active\">\n          <ng-content></ng-content>\n      </ng-container>\n    `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: MarqueeWizardService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'icon': [{ type: Input },],\n'completed': [{ type: Input },],\n'completedChange': [{ type: Output },],\n};\n}\n\nfunction MarqueeWizardStepComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nMarqueeWizardStepComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMarqueeWizardStepComponent.ctorParameters;\n/** @type {?} */\nMarqueeWizardStepComponent.propDecorators;\n/** @type {?} */\nMarqueeWizardStepComponent.prototype.icon;\n/** @type {?} */\nMarqueeWizardStepComponent.prototype.completed;\n/** @type {?} */\nMarqueeWizardStepComponent.prototype.completedChange;\n/** @type {?} */\nMarqueeWizardStepComponent.prototype._valid;\n/** @type {?} */\nMarqueeWizardStepComponent.prototype._marqueeWizardService;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Input, ContentChildren, QueryList, TemplateRef } from '@angular/core';\nimport { filter } from 'rxjs/operators/filter';\n\nimport { WizardComponent } from '../wizard/index';\nimport { MarqueeWizardStepComponent } from './marquee-wizard-step.component';\nimport { MarqueeWizardService, MarqueeWizardValidEvent } from './marquee-wizard.service';\nexport class MarqueeWizardComponent extends WizardComponent {\n\n     description: string | TemplateRef<any>;\n     steps = new QueryList<MarqueeWizardStepComponent>();\n/**\n * @return {?}\n */\nget isTemplate(): boolean {\n        return this.description && this.description instanceof TemplateRef;\n    }\n/**\n * @param {?} marqueeWizardService\n */\nconstructor(marqueeWizardService: MarqueeWizardService) {\n        super();\n\n        marqueeWizardService.valid$.pipe(\n            filter((event: MarqueeWizardValidEvent) => !event.valid)\n        ).subscribe(this.validChange.bind(this));\n    }\n/**\n * If the current step is valid, mark it as\n * complete and go to the next step\n * @return {?}\n */\nnext(): void {\n\n        // get the current step\n        const /** @type {?} */ step = /** @type {?} */(( this.getCurrentStep() as MarqueeWizardStepComponent));\n\n        if (step.valid) {\n            super.next();\n\n            // mark this step as completed\n            step.setCompleted(true);\n        }\n    }\n/**\n * Emit the onFinishing event and if valid the onFinish event.\n * Also mark the final step as completed if it is valid\n * @return {?}\n */\nfinish(): Promise<void> {\n\n        // get the current step\n        const /** @type {?} */ step = /** @type {?} */(( this.getCurrentStep() as MarqueeWizardStepComponent));\n\n        // call the original finish function\n        return super.finish().then(() => {\n            // if the step is valid indicate that it is now complete\n            if (step.valid) {\n                step.setCompleted(true);\n            }\n        });\n    }\n/**\n * If a step in the wizard becomes invalid, all steps sequentially after\n * it, should become unvisited and incomplete\n * @param {?} state\n * @return {?}\n */\nvalidChange(state: MarqueeWizardValidEvent): void {\n        \n        const /** @type {?} */ steps = this.steps.toArray();\n        const /** @type {?} */ current = steps.findIndex(step => step === state.step);\n        const /** @type {?} */ affected = steps.slice(current);\n\n        affected.forEach(step => {\n\n            // the step should no longer be completed\n            step.completed = false;\n\n            // if the step is not the current step then also mark it as unvisited\n            if (step !== state.step) {\n                step.visited = false;\n            }\n        });\n\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-marquee-wizard',\n    template: `\n      <div class=\"marquee-wizard-side-panel\">\n\n          <div class=\"marquee-wizard-description-container\" *ngIf=\"description\">\n              <!-- If a template was provided display it -->\n              <ng-container *ngIf=\"isTemplate\" [ngTemplateOutlet]=\"description\"></ng-container>\n\n              <!-- Otherwise wimply display the string -->\n              <ng-container *ngIf=\"!isTemplate\">\n                  <p>{{ description }}</p>\n              </ng-container>\n          </div>\n\n          <ul class=\"marquee-wizard-steps\">\n\n              <li class=\"marquee-wizard-step\" *ngFor=\"let step of steps\" (click)=\"gotoStep(step)\" [class.active]=\"step.active\" [class.visited]=\"step.visited\" [class.invalid]=\"!step.valid\">\n                  <i class=\"marquee-wizard-step-icon\" [ngClass]=\"step.icon\"></i>\n                  <span class=\"marquee-wizard-step-title\">{{ step.header }}</span>\n                  <span class=\"marquee-wizard-step-status hpe-icon hpe-checkmark\" *ngIf=\"step.completed\"></span>\n              </li>\n\n          </ul>\n      </div>\n\n      <div class=\"marquee-wizard-content-panel\">\n          <div class=\"marquee-wizard-content\">\n              <ng-content></ng-content>\n          </div>\n\n          <div class=\"modal-footer\">\n\n              <button #tip=\"ux-tooltip\" class=\"btn button-secondary\" *ngIf=\"previousVisible\" [uxTooltip]=\"previousTooltip\" container=\"body\"\n                  [disabled]=\"previousDisabled || step === 0\" (click)=\"previous(); tip.hide()\">{{ previousText }}</button>\n\n              <button #tip=\"ux-tooltip\" class=\"btn button-primary\" *ngIf=\"nextVisible && !isLastStep()\" [uxTooltip]=\"nextTooltip\" container=\"body\"\n                  [disabled]=\"nextDisabled\" (click)=\"next(); tip.hide()\">{{ nextText }}</button>\n\n              <button #tip=\"ux-tooltip\" class=\"btn button-primary\" *ngIf=\"finishVisible && isLastStep() || finishAlwaysVisible\" [uxTooltip]=\"finishTooltip\"\n                  container=\"body\" [disabled]=\"finishDisabled\" (click)=\"finish(); tip.hide()\">{{ finishText }}</button>\n\n              <button #tip=\"ux-tooltip\" class=\"btn button-secondary\" *ngIf=\"cancelVisible && !isLastStep() || cancelAlwaysVisible\" [uxTooltip]=\"cancelTooltip\"\n                  container=\"body\" [disabled]=\"cancelDisabled\" (click)=\"cancel(); tip.hide()\">{{ cancelText }}</button>\n          </div>\n      </div>\n    `,\n    providers: [ MarqueeWizardService ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: MarqueeWizardService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'description': [{ type: Input },],\n'steps': [{ type: ContentChildren, args: [MarqueeWizardStepComponent, ] },],\n};\n}\n\nfunction MarqueeWizardComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nMarqueeWizardComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMarqueeWizardComponent.ctorParameters;\n/** @type {?} */\nMarqueeWizardComponent.propDecorators;\n/** @type {?} */\nMarqueeWizardComponent.prototype.description;\n/** @type {?} */\nMarqueeWizardComponent.prototype.steps;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { WizardModule } from '../wizard/index';\nimport { MarqueeWizardComponent } from './marquee-wizard.component';\nimport { MarqueeWizardStepComponent } from './marquee-wizard-step.component';\nimport { TooltipModule } from '../tooltip/index';\nexport class MarqueeWizardModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        CommonModule,\n        WizardModule,\n        TooltipModule\n    ],\n    exports: [\n        MarqueeWizardComponent,\n        MarqueeWizardStepComponent\n    ],\n    declarations: [\n        MarqueeWizardComponent,\n        MarqueeWizardStepComponent\n    ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction MarqueeWizardModule_tsickle_Closure_declarations() {\n/** @type {?} */\nMarqueeWizardModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMarqueeWizardModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Input } from '@angular/core';\nexport class NavigationComponent {\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-navigation',\n    template: `\n      <nav class=\"tree\" role=\"navigation\">\n          <ol class=\"nav\">\n              <ng-content></ng-content>\n          </ol>\n      </nav>\n    `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction NavigationComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nNavigationComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNavigationComponent.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { ActivatedRoute, NavigationEnd, Router, RouterState, UrlTree } from '@angular/router';\nimport { AfterContentInit, AfterViewInit, Component, ContentChildren, ElementRef, Input, OnDestroy, Optional, QueryList, Renderer2, SkipSelf, HostBinding } from '@angular/core';\nimport { filter } from 'rxjs/operators/filter';\nimport { Subscription } from 'rxjs/Subscription';\nexport class NavigationItemComponent implements AfterViewInit, AfterContentInit, OnDestroy {\n\n     header: string;\n     icon: string;\n     link: string;\n      expanded: boolean = false;\n/**\n * @return {?}\n */\nget active(): boolean {\n        if (this.link) {\n            return this._router.isActive(this.link, true);\n        }\n    }\n\n    level: number = 1;\n    indentWithoutArrow: boolean = true;\nprivate _navigationEnd: Subscription;\nprivate _childrenChanges: Subscription;\nprivate _children: QueryList<NavigationItemComponent>;\n/**\n * @return {?}\n */\nget children(): NavigationItemComponent[] {\n        return this._children.filter(item => item !== this);\n    }\n/**\n * @param {?} _elementRef\n * @param {?} _renderer\n * @param {?} _parent\n * @param {?} _router\n * @param {?} _activatedRoute\n */\nconstructor(\nprivate _elementRef: ElementRef,\nprivate _renderer: Renderer2,\nprivate _parent: NavigationItemComponent,\nprivate _router: Router,\nprivate _activatedRoute: ActivatedRoute\n    ) {\n        this.level = _parent ? _parent.level + 1 : 1;\n\n        this._navigationEnd = _router.events.pipe(filter(event => event instanceof NavigationEnd))\n            .subscribe(() => this.expanded = this.hasActiveLink(this.link));\n    }\n/**\n * @return {?}\n */\nngAfterViewInit(): void {\n        // Add classes to parent for styling\n        const /** @type {?} */ parentListElement = this._elementRef.nativeElement.parentElement;\n        if (parentListElement) {\n            const /** @type {?} */ levelClass: string = this.getLevelClass();\n            if (levelClass.length > 0) {\n                this._renderer.addClass(parentListElement, 'nav');\n                this._renderer.addClass(parentListElement, levelClass);\n            }\n        }\n    }\n/**\n * @return {?}\n */\nngAfterContentInit(): void {\n        // Set 'indentWithoutArrow'\n        this.setIndentWithoutArrow();\n\n        // Update 'indentWithoutArrow' in response to changes to children\n        this._childrenChanges = this._children.changes.subscribe(() => this.setIndentWithoutArrow());\n    }\n/**\n * @return {?}\n */\nngOnDestroy(): void {\n        this._navigationEnd.unsubscribe();\n        this._childrenChanges.unsubscribe();\n    }\n/**\n * @param {?} link\n * @return {?}\n */\nprivate hasActiveLink(link: string | UrlTree): boolean {\n\n        const /** @type {?} */ tree = this._router.createUrlTree([link], {\n            relativeTo: this._activatedRoute,\n            queryParams: this._activatedRoute.snapshot.queryParams,\n            fragment: this._activatedRoute.snapshot.fragment\n        });\n\n        if (link && this._router.isActive(tree, true)) {\n            return true;\n        }\n\n        // If this component has children, check if any of them, or their descendants, are active.\n        return this.children.some((item) => item.hasActiveLink(item.link));\n    }\n/**\n * @return {?}\n */\nprivate getLevelClass(): string {\n        switch (this.level) {\n            case 2:\n                return 'nav-second-level';\n            case 3:\n                return 'nav-third-level';\n            case 4:\n                return 'nav-fourth-level';\n            case 5:\n                return 'nav-fifth-level';\n        }\n\n        return '';\n    }\n/**\n * @return {?}\n */\nprivate setIndentWithoutArrow(): void {\n        if (this.children.length > 0) {\n            // If this element has children it will be indented and will have an arrow\n            this.indentWithoutArrow = false;\n        } else if (this._parent) {\n           // If this element has a parent, indent it if any of its siblings have children\n            this.indentWithoutArrow = !this._parent.children.every((item) => item.children.length === 0);\n        } else {\n            // Top-level elements should be indented\n            this.indentWithoutArrow = true;\n        }\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: '[ux-navigation-item]',\n    template: `\n      <a *ngIf=\"link\" [class.has-arrow]=\"children.length > 0\" [class.no-arrow]=\"indentWithoutArrow\" [routerLink]=\"link\">\n          <span>{{header}}</span>\n      </a>\n      <a *ngIf=\"!link\" (click)=\"expanded = !expanded\" [class.has-arrow]=\"children.length > 0\" [class.no-arrow]=\"indentWithoutArrow\">\n          <span>{{header}}</span>\n      </a>\n      <ng-content></ng-content>\n    `,\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Renderer2, },\n{type: NavigationItemComponent, decorators: [{ type: Optional }, { type: SkipSelf }, ]},\n{type: Router, },\n{type: ActivatedRoute, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'header': [{ type: Input },],\n'icon': [{ type: Input },],\n'link': [{ type: Input },],\n'expanded': [{ type: Input },{ type: HostBinding, args: ['class.selected', ] },],\n'active': [{ type: HostBinding, args: ['class.active', ] },],\n'_children': [{ type: ContentChildren, args: [NavigationItemComponent, { descendants: true }, ] },],\n};\n}\n\nfunction NavigationItemComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nNavigationItemComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNavigationItemComponent.ctorParameters;\n/** @type {?} */\nNavigationItemComponent.propDecorators;\n/** @type {?} */\nNavigationItemComponent.prototype.header;\n/** @type {?} */\nNavigationItemComponent.prototype.icon;\n/** @type {?} */\nNavigationItemComponent.prototype.link;\n/** @type {?} */\nNavigationItemComponent.prototype.expanded;\n/** @type {?} */\nNavigationItemComponent.prototype.level;\n/** @type {?} */\nNavigationItemComponent.prototype.indentWithoutArrow;\n/** @type {?} */\nNavigationItemComponent.prototype._navigationEnd;\n/** @type {?} */\nNavigationItemComponent.prototype._childrenChanges;\n/** @type {?} */\nNavigationItemComponent.prototype._children;\n/** @type {?} */\nNavigationItemComponent.prototype._elementRef;\n/** @type {?} */\nNavigationItemComponent.prototype._renderer;\n/** @type {?} */\nNavigationItemComponent.prototype._parent;\n/** @type {?} */\nNavigationItemComponent.prototype._router;\n/** @type {?} */\nNavigationItemComponent.prototype._activatedRoute;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { NavigationComponent } from './navigation.component';\nimport { NavigationItemComponent } from './navigation-item/navigation-item.component';\nexport class NavigationModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        CommonModule,\n        RouterModule\n    ],\n    exports: [\n        NavigationComponent,\n        NavigationItemComponent\n    ],\n    declarations: [\n        NavigationComponent,\n        NavigationItemComponent\n    ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction NavigationModule_tsickle_Closure_declarations() {\n/** @type {?} */\nNavigationModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNavigationModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable, Inject } from '@angular/core';\nimport { DOCUMENT } from '@angular/platform-browser';\nimport { ColorValueSet, ColorClassSet } from './color.service';\nexport class ColorService {\nprivate _html: string;\nprivate _element: HTMLElement;\nprivate _colors: ThemeColors;\nprivate _colorSet: any = colorSets.keppel;\n/**\n * @param {?} document\n */\nconstructor( document: Document) {\n        if (this._colorSet.colorClassSet) {\n            this.setColors();\n        } else {\n            for (let key in this._colorSet.colorValueSet) {\n                this._colors[key] = this.getColorValueByHex(this._colorSet.colorValueSet[key]);\n            }\n        }\n    }\n/**\n * @return {?}\n */\nprivate setColors() {\n\n        this._html = '';\n\n        for (let /** @type {?} */ key in this._colorSet.colorClassSet) {\n            this._html += '<div class=\"' + this._colorSet.colorClassSet[key] + '-color\"></div>';\n        }\n\n        this._element = document.createElement('div');\n        this._element.className = 'color-chart';\n        this._element.innerHTML = this._html;\n\n        document.body.appendChild(this._element);\n\n        this._colors = {};\n\n        for (let /** @type {?} */ key in this._colorSet.colorClassSet) {\n            this._colors[key] = this.getColorValue(this._colorSet.colorClassSet[key]);\n        }\n\n        this._element.parentNode.removeChild(this._element);\n    }\n/**\n * @param {?} color\n * @return {?}\n */\nprivate getColorValueByHex(color: string): ThemeColor {\n        const /** @type {?} */ hex = color.replace('#', '');\n\n        const /** @type {?} */ r = parseInt(hex.substring(0, 2), 16).toString();\n        const /** @type {?} */ g = parseInt(hex.substring(2, 4), 16).toString();\n        const /** @type {?} */ b = parseInt(hex.substring(4, 6), 16).toString();\n\n        return new ThemeColor(r, g, b, '1');\n    }\n/**\n * @param {?} color\n * @return {?}\n */\nprivate getColorValue(color: ColorIdentifier): ThemeColor {\n\n        const /** @type {?} */ target = this._element.querySelector('.' + this._colorSet.colorClassSet[color] + '-color');\n\n        if (!target) {\n            throw new Error('Invalid color');\n        }\n\n        const /** @type {?} */ colorValue = window.getComputedStyle(target).backgroundColor;\n\n        const /** @type {?} */ rgba = colorValue.match(/^rgba?\\((\\d+),\\s*(\\d+),\\s*(\\d+)(?:,\\s*(\\d+(?:\\.\\d+)?))?\\)$/);\n\n        return new ThemeColor(rgba[1], rgba[2], rgba[3], rgba[4]);\n    }\n/**\n * @param {?} color\n * @return {?}\n */\ngetColor(color: ColorIdentifier): ThemeColor {\n        const /** @type {?} */ themeColor = this._colors[this.resolveColorName(color)];\n        if (!themeColor) {\n            throw new Error('Color not found: ' + color);\n        }\n        \n        return new ThemeColor(themeColor.getRed(), themeColor.getGreen(), themeColor.getBlue(), themeColor.getAlpha());\n    }\n/**\n * @return {?}\n */\ngetColorSet() {\n        return this._colorSet;\n    }\n/**\n * @param {?} colorSet\n * @return {?}\n */\nsetColorSet(colorSet: ColorSet) {\n        this._colorSet = colorSet;\n        this._colors = {};\n\n        if (this._colorSet.colorClassSet) {\n            this.setColors();\n        } else {\n            for (let /** @type {?} */ key in this._colorSet.colorValueSet) {\n                this._colors[key] = this.getColorValueByHex(this._colorSet.colorValueSet[key]);\n            }\n        }\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nresolve(value: string): string {\n        if (!value) {\n            return;\n        }\n        \n        const /** @type {?} */ colorName = this.resolveColorName(value);\n        \n        for (let /** @type {?} */ color in this._colors) {\n            if (colorName === color.toLowerCase()) {\n                return this.getColor(colorName).toRgba();\n            }\n        }\n\n        return value;\n    }\n/**\n * @param {?=} value\n * @return {?}\n */\nresolveColorName(value: string = ''): string {\n        return value.replace(/\\s+/g, '-').toLowerCase();\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Document, decorators: [{ type: Inject, args: [DOCUMENT, ] }, ]},\n];\n}\n\nfunction ColorService_tsickle_Closure_declarations() {\n/** @type {?} */\nColorService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nColorService.ctorParameters;\n/** @type {?} */\nColorService.prototype._html;\n/** @type {?} */\nColorService.prototype._element;\n/** @type {?} */\nColorService.prototype._colors;\n/** @type {?} */\nColorService.prototype._colorSet;\n}\n\nexport class ThemeColor {\nprivate _r: string;\nprivate _g: string;\nprivate _b: string;\nprivate _a: string;\n/**\n * @param {?} r\n * @param {?} g\n * @param {?} b\n * @param {?} a\n */\nconstructor(r: string, g: string, b: string, a: string) {\n        this._r = r;\n        this._g = g;\n        this._b = b;\n        this._a = a === undefined ? '1' : a;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nstatic parse(value: string): ThemeColor {\n        let /** @type {?} */ r, /** @type {?} */ g, /** @type {?} */ b, /** @type {?} */ a = '1';\n\n        const /** @type {?} */ rgbaPattern = /^rgba?\\((\\d+),\\s*(\\d+),\\s*(\\d+)(?:,\\s*(\\d+(?:\\.\\d+)?))?\\)$/;\n        const /** @type {?} */ shortHexPattern = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;\n        const /** @type {?} */ longHexPattern = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/;\n\n        const /** @type {?} */ rgbaMatch = value.match(rgbaPattern);\n        const /** @type {?} */ shortHexMatch = value.match(shortHexPattern);\n        const /** @type {?} */ longHexMatch = value.match(longHexPattern);\n\n        if (rgbaMatch) {\n            r = rgbaMatch[1];\n            g = rgbaMatch[2];\n            b = rgbaMatch[3];\n            a = rgbaMatch[4] ? rgbaMatch[4] : '1';\n        } else if (longHexMatch) {\n            r = parseInt(longHexMatch[1], 16).toString();\n            g = parseInt(longHexMatch[2], 16).toString();\n            b = parseInt(longHexMatch[3], 16).toString();\n        } else if (shortHexMatch) {\n            r = parseInt(shortHexMatch[1] + shortHexMatch[1], 16).toString();\n            g = parseInt(shortHexMatch[2] + shortHexMatch[2], 16).toString();\n            b = parseInt(shortHexMatch[3] + shortHexMatch[3], 16).toString();\n        } else {\n            throw new Error(`Cannot parse color - ${value} is not a valid color.`);\n        }\n        return new ThemeColor(r, g, b, a);\n    }\n/**\n * @return {?}\n */\ntoHex() {\n        let /** @type {?} */ red = parseInt(this._r).toString(16);\n        let /** @type {?} */ green = parseInt(this._g).toString(16);\n        let /** @type {?} */ blue = parseInt(this._b).toString(16);\n\n        if (red.length < 2) {\n            red = '0' + red;\n        }\n        if (green.length < 2) {\n            green = '0' + green;\n        }\n        if (blue.length < 2) {\n            blue = '0' + blue;\n        }\n\n        return '#' + red + green + blue;\n    }\n/**\n * @return {?}\n */\ntoRgb() {\n        return 'rgb(' + this._r + ', ' + this._g + ', ' + this._b + ')';\n    }\n/**\n * @return {?}\n */\ntoRgba() {\n        return 'rgba(' + this._r + ', ' + this._g + ', ' + this._b + ', ' + this._a + ')';\n    }\n/**\n * @return {?}\n */\ngetRed() {\n        return this._r;\n    }\n/**\n * @return {?}\n */\ngetGreen() {\n        return this._g;\n    }\n/**\n * @return {?}\n */\ngetBlue() {\n        return this._b;\n    }\n/**\n * @return {?}\n */\ngetAlpha() {\n        return this._a;\n    }\n/**\n * @param {?} red\n * @return {?}\n */\nsetRed(red: string) {\n        this._r = red;\n        return this;\n    }\n/**\n * @param {?} green\n * @return {?}\n */\nsetGreen(green: string) {\n        this._g = green;\n        return this;\n    }\n/**\n * @param {?} blue\n * @return {?}\n */\nsetBlue(blue: string) {\n        this._b = blue;\n        return this;\n    }\n/**\n * @param {?} alpha\n * @return {?}\n */\nsetAlpha(alpha: string | number) {\n        this._a = alpha.toString();\n        return this;\n    }\n}\n\nfunction ThemeColor_tsickle_Closure_declarations() {\n/** @type {?} */\nThemeColor.prototype._r;\n/** @type {?} */\nThemeColor.prototype._g;\n/** @type {?} */\nThemeColor.prototype._b;\n/** @type {?} */\nThemeColor.prototype._a;\n}\n\n\nexport const /** @type {?} */ colorSets = {\n    keppel: {\n        colorClassSet: {\n            'primary': 'primary',\n            'accent': 'accent',\n            'secondary': 'secondary',\n            'alternate1': 'alternate1',\n            'alternate2': 'alternate2',\n            'alternate3': 'alternate3',\n            'vibrant1': 'vibrant1',\n            'vibrant2': 'vibrant2',\n            'grey1': 'grey1',\n            'grey2': 'grey2',\n            'grey3': 'grey3',\n            'grey4': 'grey4',\n            'grey5': 'grey5',\n            'grey6': 'grey6',\n            'grey7': 'grey7',\n            'grey8': 'grey8',\n            'chart1': 'chart1',\n            'chart2': 'chart2',\n            'chart3': 'chart3',\n            'chart4': 'chart4',\n            'chart5': 'chart5',\n            'chart6': 'chart6',\n            'ok': 'ok',\n            'warning': 'warning',\n            'critical': 'critical',\n            'partition1': 'partition1',\n            'partition9': 'partition9',\n            'partition10': 'partition10',\n            'partition11': 'partition11',\n            'partition12': 'partition12',\n            'partition13': 'partition13',\n            'partition14': 'partition14',\n            'social-chart-node': 'social-chart-node',\n            'social-chart-edge': 'social-chart-edge'\n        }\n    },\n    microFocus: {\n        'colorValueSet': {\n            'cerulean': '#1668c1',\n            'aqua': '#29ceff',\n            'aquamarine': '#2fd6c3',\n            'fuchsia': '#c6179d',\n            'indigo': '#7425ad',\n            'dark-blue': '#231ca5',\n            'white': '#ffffff',\n            'slightly-gray': '#f5f7f8',\n            'bright-gray': '#f1f2f3',\n            'gray': '#dcdedf',\n            'silver': '#bdbec0',\n            'dim-gray': '#656668',\n            'dark-gray': '#323435',\n            'black': '#000000',\n            'crimson-negative': '#e5004c',\n            'apricot': '#f48b34',\n            'yellow': '#fcdb1f',\n            'green-positive': '#1aac60',\n            'ultramarine': '#3939c6',\n            'skyblue': '#00abf3',\n            'pale-aqua': '#43e4ff',\n            'pale-green': '#1ffbba',\n            'lime': '#75da4d',\n            'orange': '#ffce00',\n            'magenta': '#eb23c2',\n            'pale-purple': '#ba47e2',\n            'dark-ultramarine': '#271782',\n            'steelblue': '#014272',\n            'arctic-blue': '#0b8eac',\n            'emerald': '#00a989',\n            'olive': '#5bba36',\n            'goldenrod': '#ffb000',\n            'purple': '#9b1e83',\n            'pale-eggplant': '#5216ac',\n            'red': '#ff454f',\n            'pale-amber': '#ffb24d',\n            'pale-lemon': '#fde159',\n            'pale-emerald': '#33c180',\n            'plum': '#b21646',\n            'copper': '#e57828',\n            'amber': '#ffc002',\n            'leaf-green': '#118c4f',\n            'forest-green': '#00645a',\n            'primary': '#0073e7',\n            'accent': '#7425ad',\n            'secondary': '#ffffff',\n            'alternate1': '#29ceff',\n            'alternate2': '#2fd6c3',\n            'alternate3': '#c6179d',\n            'vibrant1': '#43e4ff',\n            'vibrant2': '#ffce00',\n            'grey1': '#000000',\n            'grey2': '#323435',\n            'grey3': '#656668',\n            'grey4': '#bdbec0',\n            'grey5': '#dcdedf',\n            'grey6': '#f1f2f3',\n            'grey7': '#f5f7f8',\n            'grey8': '#ffffff',\n            'chart1': '#3939c6',\n            'chart2': '#00abf3',\n            'chart3': '#75da4d',\n            'chart4': '#ffce00',\n            'chart5': '#eb23c2',\n            'chart6': '#ba47e2',\n            'ok': '#1aac60',\n            'warning': '#f48b34',\n            'critical': 'e5004c',\n            'partition1': '#7425ad',\n            'partition9': '#5216ac',\n            'partition10': '#5bba36',\n            'partition11': '#014272',\n            'partition12': '#ffb000',\n            'partition13': '#bdbec0',\n            'partition14': '#271782',\n            'social-chart-node': '#ff00ff',\n            'social-chart-edge': '#ff00ff'\n        }\n    }\n};\n\nexport interface ThemeColors {\n    [name: string]: ThemeColor;\n}\n\nexport interface ColorSet {\n    colorClassSet?: ColorClassSet;\n    colorValueSet?: ColorValueSet;\n}\n\nexport interface ColorClassSet {\n    [name: string]: string;\n}\n\nexport interface ColorValueSet {\n    [name: string]: string;\n}\n\nexport type ColorIdentifier = string;\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { ColorService } from './color.service';\nexport class ColorServiceModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    providers: [ColorService],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ColorServiceModule_tsickle_Closure_declarations() {\n/** @type {?} */\nColorServiceModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nColorServiceModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable, TemplateRef } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { ColorService } from '../../services/color/index';\nexport class NotificationService {\n\n    // provide default options\n    options: NotificationOptions = {\n        duration: 4,\n        height: 100,\n        spacing: 10,\n        backgroundColor: this._colorService.getColor('accent').toHex(),\n        iconColor: this._colorService.getColor('accent').toHex()\n    };\n\n    direction: NotificationListDirection = 'above';\n\n    notifications$: BehaviorSubject<NotificationRef[]> = new BehaviorSubject<NotificationRef[]>([]);\n/**\n * @param {?} templateRef\n * @param {?=} options\n * @param {?=} data\n * @return {?}\n */\nshow(templateRef: TemplateRef<any>, options: NotificationOptions = this.options, data: { [key: string]: any } = {}): NotificationRef {\n\n        options = { ...this.options, ...options };\n\n        const /** @type {?} */ notificationRef: NotificationRef = {\n            templateRef: templateRef,\n            duration: options.duration,\n            date: new Date(),\n            visible: true,\n            height: options.height,\n            spacing: options.spacing,\n            backgroundColor: options.backgroundColor,\n            iconColor: options.iconColor,\n            data: data\n        };\n\n        const /** @type {?} */ notifications = this.notifications$.getValue();\n\n        if (this.direction === 'above') {\n            notifications.unshift(notificationRef);\n        } else {\n            notifications.push(notificationRef);\n        }\n\n        this.notifications$.next(notifications);\n\n        // remove notification after delay\n        if (options.duration !== 0) {\n            setTimeout(() => this.dismiss(notificationRef), options.duration * 1000);\n        }\n\n        return notificationRef;\n    }\n/**\n * @return {?}\n */\ngetHistory(): NotificationRef[] {\n        return this.notifications$.getValue();\n    }\n/**\n * @param {?} notificationRef\n * @return {?}\n */\ndismiss(notificationRef: NotificationRef): void {\n        notificationRef.visible = false;\n        this.notifications$.next(this.notifications$.getValue());\n    }\n/**\n * @return {?}\n */\ndismissAll(): void {\n        this.notifications$.getValue().forEach(notificationRef => notificationRef.visible = false);\n        this.notifications$.next(this.notifications$.getValue());        \n    }\n/**\n * @param {?} _colorService\n */\nconstructor(private _colorService: ColorService) {\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ColorService, },\n];\n}\n\nfunction NotificationService_tsickle_Closure_declarations() {\n/** @type {?} */\nNotificationService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNotificationService.ctorParameters;\n/** @type {?} */\nNotificationService.prototype.options;\n/** @type {?} */\nNotificationService.prototype.direction;\n/** @type {?} */\nNotificationService.prototype.notifications$;\n/** @type {?} */\nNotificationService.prototype._colorService;\n}\n\n\nexport interface NotificationRef {\n    templateRef: TemplateRef<any>;\n    duration: number;\n    date: Date;\n    visible?: boolean;\n    height?: number;\n    spacing?: number;\n    backgroundColor?: string;\n    iconColor?: string;\n    data: { [key: string]: any };\n}\n\nexport interface NotificationOptions {\n    duration?: number;\n    height?: number;\n    spacing?: number;\n    backgroundColor?: string;\n    iconColor?: string;\n}\n\nexport type NotificationListDirection = 'above' | 'below';\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, HostBinding, Input, ChangeDetectionStrategy } from '@angular/core';\nimport { NotificationService, NotificationRef, NotificationListDirection } from './notification.service';\nimport { trigger, state, style, animate, transition } from '@angular/animations';\nimport { map } from 'rxjs/operators/map';\nimport { Observable } from 'rxjs/Observable';\nexport class NotificationListComponent {\n/**\n * @param {?} direction\n * @return {?}\n */\nset direction(direction: NotificationListDirection) {\n        this._notificationService.direction = direction;\n    }\n\n      position: NotificationListPostion = 'top-right';\n\n    notifications$: Observable<NotificationRef[]> = this._notificationService.notifications$.pipe(\n        map((notificationRefs: NotificationRef[]) => notificationRefs.filter(notificationRef => notificationRef.visible),\n    ));\n/**\n * @param {?} _notificationService\n */\nconstructor(private _notificationService: NotificationService) {\n\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-notification-list',\n    template: `\n      <div class=\"notification\" *ngFor=\"let notificationRef of notifications$ | async; let idx = index\"\n          [style.top.px]=\"(notificationRef.height + notificationRef.spacing) * idx\"\n          [style.height.px]=\"notificationRef.height\"\n          [style.background-color]=\"notificationRef.backgroundColor\"\n          [@notificationState]>\n          <ng-container *ngTemplateOutlet=\"notificationRef.templateRef; context: { $implicit: notificationRef, data: notificationRef.data }\"></ng-container>\n      </div>\n    `,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    animations: [\n        trigger('notificationState', [\n            state('in', style({ transform: 'translateY(0)', opacity: 0.9 })),\n            transition(':enter', [\n                style({ transform: 'translateY(-50px)', opacity: 0 }),\n                animate(500)\n            ]),\n            transition(':leave', [\n                animate(500, style({ transform: 'translateY(50px)', opacity: 0 }))\n            ])\n        ])\n    ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: NotificationService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'direction': [{ type: Input },],\n'position': [{ type: Input },{ type: HostBinding, args: ['class', ] },],\n};\n}\n\nfunction NotificationListComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nNotificationListComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNotificationListComponent.ctorParameters;\n/** @type {?} */\nNotificationListComponent.propDecorators;\n/** @type {?} */\nNotificationListComponent.prototype.position;\n/** @type {?} */\nNotificationListComponent.prototype.notifications$;\n/** @type {?} */\nNotificationListComponent.prototype._notificationService;\n}\n\n\nexport type NotificationListPostion = 'top-left' | 'top-right' | 'bottom-left' | 'bottom-right';\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NotificationListComponent } from './notification-list.component';\nimport { NotificationService } from './notification.service';\nimport { ColorServiceModule } from '../../services/color/index';\nexport class NotificationModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        CommonModule,\n        ColorServiceModule\n    ],\n    exports: [\n        NotificationListComponent\n    ],\n    declarations: [\n        NotificationListComponent\n    ],\n    providers: [\n        NotificationService\n    ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction NotificationModule_tsickle_Closure_declarations() {\n/** @type {?} */\nNotificationModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNotificationModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Input, ViewEncapsulation, EventEmitter, Output, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nexport const /** @type {?} */ NUMBER_PICKER_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => NumberPickerComponent),\n    multi: true\n};\nexport class NumberPickerComponent implements ControlValueAccessor {\nprivate _min: number = -Infinity;\nprivate _max: number = Infinity;\nprivate _step: number = 1;\nprivate _disabled: boolean = false;\nprivate _value: number = 0;\nprivate _propagateChange = (_: any) => { };\n\n     valid: boolean = true;\n     valueChange = new EventEmitter<number>();\n/**\n * @return {?}\n */\nget value(): number {\n        return this._value;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset value(value: number) {\n        this._value = value;\n        this.valueChange.emit(value);\n        this._propagateChange(value);\n    }\n/**\n * @return {?}\n */\nget min(): number {\n        return this._min;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset min(value) {\n        this._min = typeof value === 'string' ? parseFloat(value) : value;\n    }\n/**\n * @return {?}\n */\nget max(): number {\n        return this._max;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset max(value) {\n        this._max = typeof value === 'string' ? parseFloat(value) : value;\n    }\n/**\n * @return {?}\n */\nget step(): number {\n        return this._step;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset step(value) {\n        this._step = typeof value === 'string' ? parseFloat(value) : value;\n    }\n/**\n * @return {?}\n */\nget disabled(): boolean {\n        return this._disabled;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset disabled(value) {\n        this._disabled = typeof value === 'string' && (value === '' || value === 'true' || value === 'disabled') || value === true;\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nincrement(event: MouseEvent | KeyboardEvent): void {\n        event.preventDefault();\n\n        if (!this.disabled) {\n            this.value = Math.max(Math.min(this.value + this.step, this.max), this.min);\n        }\n    }\n/**\n * @param {?} event\n * @return {?}\n */\ndecrement(event: MouseEvent | KeyboardEvent): void {\n        event.preventDefault();\n\n        if (!this.disabled) {\n            this.value = Math.min(Math.max(this.value - this.step, this.min), this.max);\n        }\n    }\n/**\n * @return {?}\n */\nisValid(): boolean {\n        if (this.value < this.min || this.value > this.max) {\n            return false;\n        }\n\n        return this.valid;\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nonScroll(event: WheelEvent): void {\n\n        let /** @type {?} */ scrollValue = event.deltaY || event.wheelDelta;\n\n        if (scrollValue < 0) {\n            this.increment(event);\n        } else {\n            this.decrement(event);\n        }\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nwriteValue(value: any): void {\n        if (value !== undefined) {\n            this._value = value;\n        }\n    }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnChange(fn: any): void {\n        this._propagateChange = fn;\n    }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnTouched(fn: any): void { }\n/**\n * @param {?} isDisabled\n * @return {?}\n */\nsetDisabledState(isDisabled: boolean): void {\n        this.disabled = isDisabled;\n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-number-picker',\n    template: `\n      <input type=\"number\"\n             role=\"spinbutton\"\n             class=\"form-control number-picker-input\"\n             [(ngModel)]=\"value\"\n             [min]=\"min\"\n             [max]=\"max\"\n             (keydown.ArrowDown)=\"decrement($event)\"\n             (keydown.ArrowUp)=\"increment($event)\"\n             (wheel)=\"onScroll($event)\"\n             step=\"any\"\n             [disabled]=\"disabled\"\n             [attr.aria-valuemin]=\"min\"\n             [attr.aria-valuenow]=\"value\"\n             [attr.aria-valuemax]=\"max\">\n\n      <div class=\"number-picker-controls\">\n\n          <div class=\"number-picker-control-up\"\n               (click)=\"increment($event)\"\n               [class.disabled]=\"disabled || value >= max\">\n\n              <span class=\"hpe-icon hpe-up\"></span>\n          </div>\n\n          <div class=\"number-picker-control-down\"\n               (click)=\"decrement($event)\"\n               [class.disabled]=\"disabled || value <= min\">\n\n              <span class=\"hpe-icon hpe-down\"></span>\n          </div>\n\n      </div>\n    `,\n    providers: [NUMBER_PICKER_VALUE_ACCESSOR],\n    host: {\n        '[class.has-error]': '!isValid()'\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'valid': [{ type: Input },],\n'valueChange': [{ type: Output },],\n'value': [{ type: Input, args: ['value', ] },],\n'min': [{ type: Input },],\n'max': [{ type: Input },],\n'step': [{ type: Input },],\n'disabled': [{ type: Input },],\n};\n}\n\nfunction NumberPickerComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nNumberPickerComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNumberPickerComponent.ctorParameters;\n/** @type {?} */\nNumberPickerComponent.propDecorators;\n/** @type {?} */\nNumberPickerComponent.prototype._min;\n/** @type {?} */\nNumberPickerComponent.prototype._max;\n/** @type {?} */\nNumberPickerComponent.prototype._step;\n/** @type {?} */\nNumberPickerComponent.prototype._disabled;\n/** @type {?} */\nNumberPickerComponent.prototype._value;\n/** @type {?} */\nNumberPickerComponent.prototype._propagateChange;\n/** @type {?} */\nNumberPickerComponent.prototype.valid;\n/** @type {?} */\nNumberPickerComponent.prototype.valueChange;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\n\nimport { NumberPickerComponent } from './number-picker.component';\nexport class NumberPickerModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        CommonModule,\n        FormsModule\n    ],\n    exports: [NumberPickerComponent],\n    declarations: [NumberPickerComponent]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction NumberPickerModule_tsickle_Closure_declarations() {\n/** @type {?} */\nNumberPickerModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNumberPickerModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive } from '@angular/core';\nexport class PageHeaderCustomMenuDirective { static decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{ \n    selector: '[uxPageHeaderCustomMenu]' \n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction PageHeaderCustomMenuDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nPageHeaderCustomMenuDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nPageHeaderCustomMenuDirective.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { Subscription } from 'rxjs/Subscription';\nimport { map } from 'rxjs/operators';\nimport { PageHeaderIconMenu } from './interfaces';\nimport { PageHeaderNavigationDropdownItem, PageHeaderNavigationItem } from './navigation/navigation.component';\nexport class PageHeaderService implements OnDestroy {\n\n    items$ = new BehaviorSubject<PageHeaderNavigationItem[]>([]);\n    selected$ = new BehaviorSubject<PageHeaderNavigationItem>(null);\n    selectedRoot$ = new BehaviorSubject<PageHeaderNavigationItem>(null);\n    secondary$ = new BehaviorSubject<boolean>(false);\n    activeIconMenu$ = new BehaviorSubject<PageHeaderIconMenu>(null);\nprivate _subscription: Subscription;\nconstructor() {\n        this._subscription = this.selected$.pipe(map(selected => this.getRoot(selected))).subscribe(root => this.selectedRoot$.next(root));\n    }\n/**\n * @return {?}\n */\nngOnDestroy(): void {\n        this._subscription.unsubscribe();\n    }\n/**\n * @param {?} item\n * @return {?}\n */\nselect(item: PageHeaderNavigationItem): void {\n\n        // do nothing if this item is already selected\n        if (item === this.selected$.getValue()) {\n            return;\n        }\n\n        // if we are in secondary navigation mode and we click a parent - dont deselect the child\n        if (this.secondary$.getValue() === true && this.isParentOf(this.selected$.getValue(), item)) {\n            return;\n        }\n\n        // deselect all current items\n        this.deselectAll();\n\n        // call the select function if present\n        if (item.select) {\n            item.select.call(item, item);\n        }\n\n        // store the selected state\n        item.selected = true;\n\n        // select all parent items too\n        this.selectParents(item);\n\n        // emit the new selected item\n        this.selected$.next(item);\n    }\n/**\n * @param {?} item\n * @return {?}\n */\ndeselect(item: PageHeaderNavigationItem | PageHeaderNavigationDropdownItem): void {\n\n        // deselect the current item\n        item.selected = false;\n\n        // iterate any children and deselect them\n        if (item.children) {\n            item.children.forEach(_item => this.deselect(_item));\n        }\n    }\n/**\n * @return {?}\n */\ndeselectAll(): void {\n        this.items$.getValue().forEach(item => this.deselect(item));\n    }\n/**\n * @param {?=} items\n * @return {?}\n */\nsetItems(items: PageHeaderNavigationItem[] = []): void {\n        // identify all parent elements\n        items.forEach(item => this.setParent(item));\n\n        this.items$.next(items);\n    }\n/**\n * @param {?} enabled\n * @return {?}\n */\nsetSecondaryNavigation(enabled: boolean): void {\n        this.secondary$.next(enabled);\n    }\n/**\n * @param {?} item\n * @return {?}\n */\nprivate getRoot(item: PageHeaderNavigation): PageHeaderNavigation {\n        return item && item.parent ? this.getRoot(item.parent) : item;\n    }\n/**\n * @param {?} item\n * @param {?=} parent\n * @return {?}\n */\nprivate setParent(item: PageHeaderNavigation, parent?: PageHeaderNavigation | null): void {\n        // set the parent field\n        item.parent = parent;\n\n        // call this function recursively on all children\n        if (item.children) {\n            item.children.forEach(child => this.setParent(child, item));\n        }\n    }\n/**\n * @param {?} item\n * @return {?}\n */\nprivate selectParents(item: PageHeaderNavigation): void {\n        // if there is a parent then we want to set it to selected\n        if (item.parent) {\n            item.parent.selected = true;\n\n            // check if it has any parents\n            this.selectParents(item.parent);\n        }\n    }\n/**\n * @param {?} node\n * @param {?} parent\n * @return {?}\n */\nprivate isParentOf(node: PageHeaderNavigation, parent: PageHeaderNavigation): boolean {\n\n        // if there are no parents return false\n        if (!node || !node.parent) {\n            return false;\n        }\n\n        // if the parent is the match we are looking for return true\n        if (node.parent === parent) {\n            return true;\n        }\n\n        // if there are potentially grandparents then check them too\n        return this.isParentOf(node.parent, parent);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction PageHeaderService_tsickle_Closure_declarations() {\n/** @type {?} */\nPageHeaderService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nPageHeaderService.ctorParameters;\n/** @type {?} */\nPageHeaderService.prototype.items$;\n/** @type {?} */\nPageHeaderService.prototype.selected$;\n/** @type {?} */\nPageHeaderService.prototype.selectedRoot$;\n/** @type {?} */\nPageHeaderService.prototype.secondary$;\n/** @type {?} */\nPageHeaderService.prototype.activeIconMenu$;\n/** @type {?} */\nPageHeaderService.prototype._subscription;\n}\n\n\nexport type PageHeaderNavigation = PageHeaderNavigationItem | PageHeaderNavigationDropdownItem;\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, ContentChildren, EventEmitter, Input, OnDestroy, OnInit, Output, QueryList, TemplateRef } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { Subscription } from 'rxjs/Subscription';\nimport { distinctUntilChanged, filter, map } from 'rxjs/operators';\nimport { ColorService } from '../../services/color/index';\nimport { Breadcrumb } from '../breadcrumbs/index';\nimport { PageHeaderCustomMenuDirective } from './custom-menu/custom-menu.directive';\nimport { PageHeaderIconMenu } from './interfaces';\nimport { PageHeaderNavigationItem } from './navigation/navigation.component';\nimport { PageHeaderNavigation, PageHeaderService } from './page-header.service';\nexport class PageHeaderComponent implements OnInit, OnDestroy {\n\n     logo: string;\n     header: string;\n     alignment: 'left' | 'right' | 'center' = 'center';\n     condensed: boolean = false;\n     iconMenus: PageHeaderIconMenu[];\n     backVisible: boolean = true;\n     secondaryNavigationAlignment: string = 'center';\n     secondaryNavigationAutoselect: boolean = false;\n/**\n * @param {?} items\n * @return {?}\n */\nset items(items: PageHeaderNavigationItem[]) {\n        this._pageHeaderService.setItems(items);\n    }\n/**\n * @param {?} enabled\n * @return {?}\n */\nset secondaryNavigation(enabled: boolean) {\n        this._pageHeaderService.setSecondaryNavigation(enabled);\n    }\n/**\n * @return {?}\n */\nget secondaryNavigation(): boolean {\n        return this._pageHeaderService.secondary$.getValue();\n    }\n/**\n * @param {?} crumbs\n * @return {?}\n */\nset crumbs(crumbs: Breadcrumb[]) {\n        this._crumbs = crumbs;\n    }\n/**\n * @return {?}\n */\nget crumbs(): Breadcrumb[] {\n        return this.condensed ? [...this._crumbs, { title: this.header }] : this._crumbs;\n    }\n/**\n * @param {?} color\n * @return {?}\n */\nset familyBackground(color: string) {\n        this._familyBackground = this._colorService.resolve(color);\n    }\n/**\n * @return {?}\n */\nget familyBackground(): string {\n        return this._familyBackground;\n    }\n/**\n * @param {?} color\n * @return {?}\n */\nset familyForeground(color: string) {\n        this._familyForeground = this._colorService.resolve(color);\n    }\n/**\n * @return {?}\n */\nget familyForeground(): string {\n        return this._familyForeground;\n    }\n\n     backClick = new EventEmitter();\n\n     customMenus: QueryList<TemplateRef<any>>;\n\n    selected$: BehaviorSubject<PageHeaderNavigationItem> = this._pageHeaderService.selected$;\n    selectedRoot$: BehaviorSubject<PageHeaderNavigationItem> = this._pageHeaderService.selectedRoot$;\nprivate _crumbs: Breadcrumb[] = [];\nprivate _familyBackground: string;\nprivate _familyForeground: string;\nprivate _subscription: Subscription;\n/**\n * @param {?} _colorService\n * @param {?} _pageHeaderService\n */\nconstructor(private _colorService: ColorService,\nprivate _pageHeaderService: PageHeaderService) { }\n/**\n * @return {?}\n */\nngOnInit(): void {\n        this._subscription = this.selectedRoot$.pipe(\n            distinctUntilChanged(),\n            filter(() => this.secondaryNavigation && this.secondaryNavigationAutoselect),\n            filter((item: PageHeaderNavigation) => item && item.children && item.children.length > 0),\n            map(item => item.children[0])\n        ).subscribe(item => this.select(item));\n    }\n/**\n * @return {?}\n */\nngOnDestroy(): void {\n        this._subscription.unsubscribe();\n    }\n/**\n * @return {?}\n */\ngoBack(): void {\n        this.backClick.emit();\n    }\n/**\n * @param {?} item\n * @return {?}\n */\nselect(item: PageHeaderNavigation): void {\n        this._pageHeaderService.select(item);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-page-header',\n    exportAs: 'ux-page-header',\n    template: `\n      <div class=\"ux-page-header\" [class.page-header-condensed]=\"condensed\" role=\"banner\">\n\n          <!-- Display Upper Section when not condensed -->\n          <div class=\"page-header-actions\" *ngIf=\"!condensed\">\n\n              <div class=\"page-header-logo-container\" role=\"presentation\" [hidden]=\"!logo\">\n                  <img [attr.src]=\"logo\" class=\"page-header-logo\">\n              </div>\n\n              <div class=\"page-header-navigation\" [ngClass]=\"alignment\" role=\"navigation\" aria-label=\"Primary Navigation\">\n\n                  <!-- The Top Navigation Options -->\n                  <ux-page-header-horizontal-navigation></ux-page-header-horizontal-navigation>\n              </div>\n\n              <div class=\"page-header-icon-menus\" role=\"toolbar\">\n                  <ng-container *ngFor=\"let menu of customMenus\" [ngTemplateOutlet]=\"menu\"></ng-container>\n\n                  <ux-page-header-icon-menu *ngFor=\"let menu of iconMenus\" [menu]=\"menu\"></ux-page-header-icon-menu>\n              </div>\n          </div>\n\n          <!-- Display Lower Section When Not Condensed -->\n          <div class=\"page-header-details\" *ngIf=\"!condensed\">\n\n              <div class=\"page-header-state-container\" role=\"navigation\">\n\n                  <button *ngIf=\"backVisible === true\" class=\"page-header-back-button\" (click)=\"goBack()\" aria-label=\"Go Back\">\n                      <span class=\"hpe-icon hpe-previous text-primary\"></span>\n                  </button>\n\n                  <div class=\"page-header-title-container\">\n\n                      <ux-breadcrumbs [crumbs]=\"crumbs\"></ux-breadcrumbs>\n\n                      <h1 class=\"page-header-title\" [style.backgroundColor]=\"familyBackground\" [style.color]=\"familyForeground\">{{ header }}</h1>\n                  </div>\n\n              </div>\n\n          </div>\n\n          <!-- Display This Section Optimized for Condensed Mode -->\n          <div class=\"page-header-condensed-content\" *ngIf=\"condensed\">\n\n              <div class=\"page-header-breadcrumbs\" role=\"navigation\">\n                  <ux-breadcrumbs [crumbs]=\"crumbs\"></ux-breadcrumbs>\n              </div>\n\n              <div class=\"page-header-navigation\" [ngClass]=\"alignment\" role=\"navigation\" aria-label=\"Primary Navigation\">\n\n                  <!-- The Top Navigation Options -->\n                  <ux-page-header-horizontal-navigation></ux-page-header-horizontal-navigation>\n              </div>\n\n              <div class=\"page-header-icon-menus\" role=\"toolbar\">\n                  <ng-container *ngFor=\"let menu of customMenus\" [ngTemplateOutlet]=\"menu\"></ng-container>\n                  <ux-page-header-icon-menu *ngFor=\"let menu of iconMenus\" [menu]=\"menu\"></ux-page-header-icon-menu>\n              </div>\n\n          </div>\n\n      </div>\n\n      <div class=\"page-header-secondary\" [ngClass]=\"secondaryNavigationAlignment\" role=\"navigation\" *ngIf=\"secondaryNavigation && (selectedRoot$ | async)\">\n          <ul class=\"nav nav-tabs\" role=\"tablist\" aria-label=\"Secondary Navigation\" *ngIf=\"(selectedRoot$ | async)?.children; let children\">\n              <li *ngFor=\"let child of children\" [class.active]=\"child === (selected$ | async)\" role=\"none\">\n                  <a role=\"tab\"\n                      [attr.aria-selected]=\"child === (selected$ | async)\"\n                      tabindex=\"0\"\n                      (click)=\"select(child)\"\n                      (keydown.enter)=\"select(child)\">{{ child.title }}</a>\n              </li>\n          </ul>\n      </div>\n    `,\n    providers: [ PageHeaderService ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ColorService, },\n{type: PageHeaderService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'logo': [{ type: Input },],\n'header': [{ type: Input },],\n'alignment': [{ type: Input },],\n'condensed': [{ type: Input },],\n'iconMenus': [{ type: Input },],\n'backVisible': [{ type: Input },],\n'secondaryNavigationAlignment': [{ type: Input },],\n'secondaryNavigationAutoselect': [{ type: Input },],\n'items': [{ type: Input },],\n'secondaryNavigation': [{ type: Input },],\n'crumbs': [{ type: Input },],\n'familyBackground': [{ type: Input },],\n'familyForeground': [{ type: Input },],\n'backClick': [{ type: Output },],\n'customMenus': [{ type: ContentChildren, args: [PageHeaderCustomMenuDirective, { read: TemplateRef }, ] },],\n};\n}\n\nfunction PageHeaderComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nPageHeaderComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nPageHeaderComponent.ctorParameters;\n/** @type {?} */\nPageHeaderComponent.propDecorators;\n/** @type {?} */\nPageHeaderComponent.prototype.logo;\n/** @type {?} */\nPageHeaderComponent.prototype.header;\n/** @type {?} */\nPageHeaderComponent.prototype.alignment;\n/** @type {?} */\nPageHeaderComponent.prototype.condensed;\n/** @type {?} */\nPageHeaderComponent.prototype.iconMenus;\n/** @type {?} */\nPageHeaderComponent.prototype.backVisible;\n/** @type {?} */\nPageHeaderComponent.prototype.secondaryNavigationAlignment;\n/** @type {?} */\nPageHeaderComponent.prototype.secondaryNavigationAutoselect;\n/** @type {?} */\nPageHeaderComponent.prototype.backClick;\n/** @type {?} */\nPageHeaderComponent.prototype.customMenus;\n/** @type {?} */\nPageHeaderComponent.prototype.selected$;\n/** @type {?} */\nPageHeaderComponent.prototype.selectedRoot$;\n/** @type {?} */\nPageHeaderComponent.prototype._crumbs;\n/** @type {?} */\nPageHeaderComponent.prototype._familyBackground;\n/** @type {?} */\nPageHeaderComponent.prototype._familyForeground;\n/** @type {?} */\nPageHeaderComponent.prototype._subscription;\n/** @type {?} */\nPageHeaderComponent.prototype._colorService;\n/** @type {?} */\nPageHeaderComponent.prototype._pageHeaderService;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Input, OnDestroy, ViewChild } from '@angular/core';\nimport { Subscription } from 'rxjs/Subscription';\nimport { MenuNavigationToggleDirective } from '../../../directives/menu-navigation/menu-navigation-toggle.directive';\nimport { PageHeaderIconMenu, PageHeaderIconMenuDropdownItem } from '../interfaces';\nimport { PageHeaderService } from '../page-header.service';\nexport class PageHeaderIconMenuComponent implements OnDestroy {\n\n     menu: PageHeaderIconMenu;\n/**\n * @return {?}\n */\nget isOpen(): boolean {\n        return this._isOpen;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset isOpen(value: boolean) {\n        this._isOpen = value;\n        if (value) {\n            this._service.activeIconMenu$.next(this.menu);\n        }\n    }\n\n    \n    menuNavigationToggle: MenuNavigationToggleDirective;\nprivate _isOpen: boolean;\nprivate _subscription: Subscription;\n/**\n * @param {?} _service\n */\nconstructor(private _service: PageHeaderService) {\n        this._subscription = _service.activeIconMenu$.subscribe((next) => {\n            // Close all but the most recently opened menu\n            if (next !== this.menu) {\n                this._isOpen = false;\n            }\n        });\n    }\n/**\n * @return {?}\n */\nngOnDestroy(): void {\n        this._subscription.unsubscribe();\n    }\n/**\n * @param {?} item\n * @return {?}\n */\nselect(item: PageHeaderIconMenu | PageHeaderIconMenuDropdownItem) {\n        if (item.select) {\n            item.select.call(item, item);\n        }\n    }\n/**\n * @param {?} item\n * @param {?} event\n * @return {?}\n */\nkeydownHandler(item: PageHeaderIconMenu | PageHeaderIconMenuDropdownItem, event: KeyboardEvent): void {\n\n        switch (event.key) {\n            case 'Enter':\n            case ' ':\n                this.select(item);\n                this.isOpen = false;\n                this.menuNavigationToggle.focus();\n                event.preventDefault();\n                event.stopPropagation();\n                break;\n        }\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-page-header-icon-menu',\n    template: `\n      <div class=\"page-header-icon-menu\"\n          dropdown\n          placement=\"bottom right\"\n          [(isOpen)]=\"isOpen\">\n\n          <a role=\"button\"\n              class=\"page-header-icon-menu-button\"\n              [attr.aria-label]=\"menu.label\"\n              aria-haspopup=\"true\"\n              tabindex=\"0\"\n              (click)=\"select(menu)\"\n              dropdownToggle\n              uxMenuNavigationToggle\n              #menuNavigationToggle=\"uxMenuNavigationToggle\"\n              [(menuOpen)]=\"isOpen\">\n\n              <i class=\"hpe-icon\" [ngClass]=\"menu.icon\"></i>\n              <span class=\"label label-primary\" *ngIf=\"menu?.badge\" aria-hidden=\"true\">{{ menu.badge }}</span>\n\n          </a>\n\n          <ul *dropdownMenu\n              class=\"dropdown-menu\"\n              role=\"menu\"\n              uxMenuNavigation\n              [toggleButton]=\"menuNavigationToggle\">\n\n              <li *ngFor=\"let dropdown of menu?.dropdown\"\n                  role=\"none\"\n                  [class.dropdown-header]=\"dropdown.header\"\n                  [class.dropdown-divider]=\"dropdown.divider\">\n\n                  <span class=\"font-bold\" *ngIf=\"dropdown.header\">{{ dropdown.title }}</span>\n\n                  <a *ngIf=\"!dropdown.header\"\n                      role=\"menuitem\"\n                      class=\"dropdown-item\"\n                      tabindex=\"-1\"\n                      (click)=\"select(dropdown)\"\n                      (keydown)=\"keydownHandler(dropdown, $event)\"\n                      uxMenuNavigationItem>\n\n\n                      <span class=\"dropdown-item-title\">\n                          <i class=\"hpe-icon hpe-fw\" [ngClass]=\"dropdown.icon\"></i>\n                          {{ dropdown.title }}\n                      </span>\n                      <span *ngIf=\"dropdown.subtitle\" class=\"dropdown-item-subtitle\">{{ dropdown.subtitle }}</span>\n\n                  </a>\n              </li>\n\n          </ul>\n      </div>\n    `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: PageHeaderService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'menu': [{ type: Input },],\n'menuNavigationToggle': [{ type: ViewChild, args: ['menuNavigationToggle', ] },],\n};\n}\n\nfunction PageHeaderIconMenuComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nPageHeaderIconMenuComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nPageHeaderIconMenuComponent.ctorParameters;\n/** @type {?} */\nPageHeaderIconMenuComponent.propDecorators;\n/** @type {?} */\nPageHeaderIconMenuComponent.prototype.menu;\n/** @type {?} */\nPageHeaderIconMenuComponent.prototype.menuNavigationToggle;\n/** @type {?} */\nPageHeaderIconMenuComponent.prototype._isOpen;\n/** @type {?} */\nPageHeaderIconMenuComponent.prototype._subscription;\n/** @type {?} */\nPageHeaderIconMenuComponent.prototype._service;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, ElementRef, Input, OnDestroy, ViewChild } from '@angular/core';\nimport { Subject } from 'rxjs/Subject';\nimport { Subscription } from 'rxjs/Subscription';\nimport { debounceTime } from 'rxjs/operators';\nimport { PageHeaderService } from '../../page-header.service';\nimport { PageHeaderNavigationDropdownItem } from '../navigation.component';\nexport class PageHeaderNavigationDropdownItemComponent implements OnDestroy {\n\n     item: PageHeaderNavigationDropdownItem;\n\n    \n    button: ElementRef;\n\n    dropdownOpen: boolean = false;\nprivate _subscription: Subscription;\nprivate _hover$: Subject<boolean> = new Subject<boolean>();\n/**\n * @param {?} _pageHeaderService\n */\nconstructor(private _pageHeaderService: PageHeaderService) {\n\n        // subscribe to stream with a debounce (a small debounce is all that is required)\n        this._subscription = this._hover$.pipe(debounceTime(1)).subscribe(visible => this.dropdownOpen = visible);\n\n        // Close submenus when selected item changes\n        this._subscription.add(\n            _pageHeaderService.selected$.subscribe(() => {\n                this.dropdownOpen = false;\n            })\n        );\n    }\n/**\n * @return {?}\n */\nngOnDestroy(): void {\n        this._subscription.unsubscribe();\n    }\n/**\n * @param {?} item\n * @return {?}\n */\nselect(item: PageHeaderNavigationDropdownItem) {\n\n        // clicking on an item with children then return\n        if (item.children) {\n            return;\n        }\n\n        // emit the selected item in an event\n        this._pageHeaderService.select(item);\n    }\n/**\n * @return {?}\n */\nfocus(): void {\n        this.button.nativeElement.focus();\n    }\n/**\n * @return {?}\n */\nhoverStart() {\n        this._hover$.next(true);\n    }\n/**\n * @return {?}\n */\nhoverLeave() {\n        this._hover$.next(false);\n    }\n/**\n * @return {?}\n */\nclose() {\n        this.dropdownOpen = false;\n    }\n/**\n * @param {?} event\n * @param {?} item\n * @return {?}\n */\nkeydownHandler(event: KeyboardEvent, item: PageHeaderNavigationDropdownItem): void {\n\n        switch (event.key) {\n            case 'Enter':\n            case ' ':\n                this.select(item);\n                event.preventDefault();\n                event.stopPropagation();\n                break;\n        }\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-page-header-horizontal-navigation-dropdown-item',\n    exportAs: 'ux-page-header-horizontal-navigation-dropdown-item',\n    template: `\n      <div *ngIf=\"item.children && item.children.length > 0\"\n          dropdown\n          #subMenu=\"bs-dropdown\"\n          [isOpen]=\"dropdownOpen\"\n          container=\"body\"\n          placement=\"right\"\n          (mouseenter)=\"hoverStart()\"\n          (mouseleave)=\"hoverLeave()\">\n\n          <a role=\"menuitem\"\n              class=\"dropdown-item\"\n              [class.selected]=\"item.selected\"\n              aria-haspopup=\"true\"\n              [attr.aria-expanded]=\"dropdownOpen\"\n              [attr.aria-selected]=\"item.selected\"\n              tabindex=\"-1\"\n              #button\n              dropdownToggle\n              uxMenuNavigationToggle\n              #menuNavigationToggle=\"uxMenuNavigationToggle\"\n              [(menuOpen)]=\"dropdownOpen\"\n              menuPosition=\"right\">\n\n              <span class=\"dropdown-item-title\">{{ item.title }}</span>\n              <span class=\"dropdown-item-icon hpe-icon hpe-next\"></span>\n\n          </a>\n\n          <ul *dropdownMenu\n              role=\"menu\"\n              class=\"dropdown-menu horizontal-navigation-dropdown-submenu\"\n              (mouseenter)=\"hoverStart()\"\n              (mouseleave)=\"hoverLeave()\"\n              uxMenuNavigation\n              #menuNavigation=\"uxMenuNavigation\"\n              [toggleButton]=\"menuNavigationToggle\"\n              toggleButtonPosition=\"left\">\n\n              <li *ngFor=\"let subItem of item.children\" role=\"none\">\n\n                  <a role=\"menuitem\"\n                      class=\"dropdown-item\"\n                      [class.selected]=\"subItem.selected\"\n                      [attr.aria-selected]=\"subItem.selected\"\n                      tabindex=\"-1\"\n                      (click)=\"select(subItem, item)\"\n                      (keydown)=\"keydownHandler($event, subItem)\"\n                      uxMenuNavigationItem>\n\n                      <span class=\"dropdown-item-title\">{{ subItem.title }}</span>\n\n                  </a>\n\n              </li>\n          </ul>\n\n      </div>\n\n      <div *ngIf=\"!item.children || item.children.length === 0\"\n          (mouseenter)=\"hoverStart()\"\n          (mouseleave)=\"hoverLeave()\">\n\n          <a role=\"menuitem\"\n              #button\n              class=\"dropdown-item\"\n              [class.selected]=\"item.selected\"\n              [attr.aria-selected]=\"item.selected\"\n              tabindex=\"-1\"\n              (click)=\"select(item)\"\n              (keydown)=\"keydownHandler($event, item)\">\n\n              <span class=\"dropdown-item-title\">{{ item.title }}</span>\n\n          </a>\n\n      </div>\n    `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: PageHeaderService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'item': [{ type: Input },],\n'button': [{ type: ViewChild, args: ['button', ] },],\n};\n}\n\nfunction PageHeaderNavigationDropdownItemComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nPageHeaderNavigationDropdownItemComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nPageHeaderNavigationDropdownItemComponent.ctorParameters;\n/** @type {?} */\nPageHeaderNavigationDropdownItemComponent.propDecorators;\n/** @type {?} */\nPageHeaderNavigationDropdownItemComponent.prototype.item;\n/** @type {?} */\nPageHeaderNavigationDropdownItemComponent.prototype.button;\n/** @type {?} */\nPageHeaderNavigationDropdownItemComponent.prototype.dropdownOpen;\n/** @type {?} */\nPageHeaderNavigationDropdownItemComponent.prototype._subscription;\n/** @type {?} */\nPageHeaderNavigationDropdownItemComponent.prototype._hover$;\n/** @type {?} */\nPageHeaderNavigationDropdownItemComponent.prototype._pageHeaderService;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, ElementRef, Input, OnDestroy, OnInit, QueryList, ViewChild, ViewChildren } from '@angular/core';\nimport { BsDropdownDirective } from 'ngx-bootstrap/dropdown';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { Subscription } from 'rxjs/Subscription';\nimport { MenuNavigationToggleDirective } from '../../../../directives/menu-navigation/menu-navigation-toggle.directive';\nimport { PageHeaderService } from '../../page-header.service';\nimport { PageHeaderNavigationDropdownItemComponent } from '../navigation-dropdown-item/navigation-dropdown-item.component';\nimport { PageHeaderNavigationItem } from '../navigation.component';\nexport class PageHeaderNavigationItemComponent implements OnInit, OnDestroy {\n\n     button: MenuNavigationToggleDirective;\n     menu: BsDropdownDirective;\n     dropdowns: QueryList<PageHeaderNavigationDropdownItemComponent>;\n\n     item: PageHeaderNavigationItem;\n\n    secondary$: BehaviorSubject<boolean> = this._pageHeaderService.secondary$;\n\n    isOpen: boolean;\nprivate _subscription: Subscription;\n/**\n * @param {?} elementRef\n * @param {?} _pageHeaderService\n */\nconstructor(\npublic elementRef: ElementRef,\nprivate _pageHeaderService: PageHeaderService\n    ) { }\n/**\n * @return {?}\n */\nngOnInit() {\n\n        // Close submenus when selected item changes\n        this._subscription = this._pageHeaderService.selected$.subscribe((next) => {\n            if (next && this.isOpen) {\n                this.isOpen = false;\n\n                // If menu was closed, keep focus on the toggle button\n                this.button.focus();\n            }\n        });\n\n        if (this.menu) {\n            this._subscription.add(\n                this.menu.onHidden.subscribe(() => this.dropdowns.forEach(dropdown => dropdown.close()))\n            );\n        }\n    }\n/**\n * @return {?}\n */\nngOnDestroy(): void {\n        this._subscription.unsubscribe();\n    }\n/**\n * @return {?}\n */\nselect() {\n\n        // if the item has children then do nothing at this stage\n        if (this.item.children && this._pageHeaderService.secondary$.getValue() === false) {\n            return;\n        }\n\n        // otherwise select the current item\n        this._pageHeaderService.select(this.item);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-page-header-horizontal-navigation-item',\n    template: `\n      <div *ngIf=\"item.children && item.children.length > 0 && !(secondary$ | async)\"\n          dropdown\n          #menu=\"bs-dropdown\"\n          [(isOpen)]=\"isOpen\"\n          container=\"body\"\n          placement=\"bottom left\">\n\n          <button role=\"menuitem\"\n              class=\"horizontal-navigation-button\"\n              [class.selected]=\"item.selected\"\n              [class.open]=\"isOpen\"\n              aria-haspopup=\"true\"\n              [attr.aria-expanded]=\"isOpen\"\n              [attr.aria-selected]=\"item.selected\"\n              dropdownToggle\n              uxMenuNavigationToggle\n              #button=\"uxMenuNavigationToggle\"\n              [(menuOpen)]=\"isOpen\">\n\n              <span class=\"hpe-icon navigation-item-icon\" *ngIf=\"item.icon\" [ngClass]=\"item?.icon\"></span>\n              <span class=\"navigation-item-label\">{{ item?.title }}</span>\n              <span class=\"hpe-icon hpe-down\"></span>\n\n          </button>\n\n          <div *dropdownMenu\n              role=\"menu\"\n              class=\"dropdown-menu horizontal-navigation-dropdown-menu\"\n              uxMenuNavigation\n              [toggleButton]=\"button\"\n              toggleButtonPosition=\"top\">\n\n              <div *ngFor=\"let item of item?.children\" uxMenuNavigationItem (activated)=\"dropdownItem.focus()\">\n                  <ux-page-header-horizontal-navigation-dropdown-item\n                      #dropdownItem=\"ux-page-header-horizontal-navigation-dropdown-item\"\n                      [item]=\"item\">\n                  </ux-page-header-horizontal-navigation-dropdown-item>\n              </div>\n\n          </div>\n\n      </div>\n\n      <button *ngIf=\"!item.children || item.children.length === 0 || (secondary$ | async)\"\n          role=\"menuitem\"\n          class=\"horizontal-navigation-button\"\n          [class.selected]=\"item.selected\"\n          [attr.aria-selected]=\"item.selected\"\n          (click)=\"select()\">\n\n          <span class=\"hpe-icon navigation-item-icon\" *ngIf=\"item.icon\" [ngClass]=\"item?.icon\"></span>\n          <span class=\"navigation-item-label\">{{ item?.title }}</span>\n\n      </button>\n    `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: PageHeaderService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'button': [{ type: ViewChild, args: ['button', ] },],\n'menu': [{ type: ViewChild, args: ['menu', ] },],\n'dropdowns': [{ type: ViewChildren, args: [PageHeaderNavigationDropdownItemComponent, ] },],\n'item': [{ type: Input },],\n};\n}\n\nfunction PageHeaderNavigationItemComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nPageHeaderNavigationItemComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nPageHeaderNavigationItemComponent.ctorParameters;\n/** @type {?} */\nPageHeaderNavigationItemComponent.propDecorators;\n/** @type {?} */\nPageHeaderNavigationItemComponent.prototype.button;\n/** @type {?} */\nPageHeaderNavigationItemComponent.prototype.menu;\n/** @type {?} */\nPageHeaderNavigationItemComponent.prototype.dropdowns;\n/** @type {?} */\nPageHeaderNavigationItemComponent.prototype.item;\n/** @type {?} */\nPageHeaderNavigationItemComponent.prototype.secondary$;\n/** @type {?} */\nPageHeaderNavigationItemComponent.prototype.isOpen;\n/** @type {?} */\nPageHeaderNavigationItemComponent.prototype._subscription;\n/** @type {?} */\nPageHeaderNavigationItemComponent.prototype.elementRef;\n/** @type {?} */\nPageHeaderNavigationItemComponent.prototype._pageHeaderService;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { AfterViewInit, Component, ElementRef, OnDestroy, QueryList, ViewChildren } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { Subscription } from 'rxjs/Subscription';\nimport { distinctUntilChanged } from 'rxjs/operators';\nimport { ResizeService } from '../../../directives/resize/index';\nimport { PageHeaderNavigation, PageHeaderService } from '../page-header.service';\nimport { PageHeaderNavigationItemComponent } from './navigation-item/navigation-item.component';\nexport class PageHeaderNavigationComponent implements AfterViewInit, OnDestroy {\n\n     menuItems: QueryList<PageHeaderNavigationItemComponent>;\n\n    items$: BehaviorSubject<PageHeaderNavigationItem[]> = this._pageHeaderService.items$;\n    indicatorVisible: boolean = false;\n    indicatorX: number = 0;\n    indicatorWidth: number = 0;\nprivate _subscription = new Subscription();\n/**\n * @param {?} elementRef\n * @param {?} resizeService\n * @param {?} _pageHeaderService\n */\nconstructor(elementRef: ElementRef, resizeService: ResizeService,\nprivate _pageHeaderService: PageHeaderService) {\n        this._subscription.add(resizeService.addResizeListener(elementRef.nativeElement).subscribe(this.updateSelectedIndicator.bind(this)));\n        this._subscription.add(_pageHeaderService.selected$.pipe(distinctUntilChanged()).subscribe(this.updateSelectedIndicator.bind(this)));\n        this._subscription.add(_pageHeaderService.secondary$.pipe(distinctUntilChanged()).subscribe(this.updateSelectedIndicator.bind(this)));\n    }\n/**\n * @return {?}\n */\nngAfterViewInit(): void {\n        this.updateSelectedIndicator();\n    }\n/**\n * @return {?}\n */\nngOnDestroy(): void {\n        this._subscription.unsubscribe();\n    }\n/**\n * @return {?}\n */\nupdateSelectedIndicator(): void {\n        setTimeout(() => {\n            // find the selected item\n            const /** @type {?} */ selected = this.menuItems.find(item => item.item.selected);\n\n            // determine whether or not to show the indicator\n            this.indicatorVisible = !!selected;\n\n            // set the width of the indicator to match the width of the navigation item\n            if (selected) {\n                const /** @type {?} */ styles = getComputedStyle(selected.elementRef.nativeElement);\n\n                this.indicatorX = selected.elementRef.nativeElement.offsetLeft;\n                this.indicatorWidth = parseInt(styles.getPropertyValue('width'));\n            }\n        });\n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-page-header-horizontal-navigation',\n    template: `\n      <ux-page-header-horizontal-navigation-item\n          *ngFor=\"let item of items$ | async\"\n          [item]=\"item\">\n      </ux-page-header-horizontal-navigation-item>\n\n      <div class=\"selected-indicator\"\n          [style.opacity]=\"indicatorVisible ? 1 : 0\"\n          [style.margin-left.px]=\"indicatorX\"\n          [style.width.px]=\"indicatorWidth\">\n      </div>\n    `,\n    host: {\n        'role': 'menubar'\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: ResizeService, },\n{type: PageHeaderService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'menuItems': [{ type: ViewChildren, args: [PageHeaderNavigationItemComponent, ] },],\n};\n}\n\nfunction PageHeaderNavigationComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nPageHeaderNavigationComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nPageHeaderNavigationComponent.ctorParameters;\n/** @type {?} */\nPageHeaderNavigationComponent.propDecorators;\n/** @type {?} */\nPageHeaderNavigationComponent.prototype.menuItems;\n/** @type {?} */\nPageHeaderNavigationComponent.prototype.items$;\n/** @type {?} */\nPageHeaderNavigationComponent.prototype.indicatorVisible;\n/** @type {?} */\nPageHeaderNavigationComponent.prototype.indicatorX;\n/** @type {?} */\nPageHeaderNavigationComponent.prototype.indicatorWidth;\n/** @type {?} */\nPageHeaderNavigationComponent.prototype._subscription;\n/** @type {?} */\nPageHeaderNavigationComponent.prototype._pageHeaderService;\n}\n\n\nexport interface PageHeaderNavigationItem {\n    icon?: string;\n    title: string;\n    selected?: boolean;\n    select?: (item: PageHeaderNavigationItem) => void;\n    children?: PageHeaderNavigationDropdownItem[];\n    parent?: PageHeaderNavigation;\n}\n\nexport interface PageHeaderNavigationDropdownItem {\n    title: string;\n    selected?: boolean;\n    select?: (item: PageHeaderNavigationDropdownItem) => void;\n    children?: PageHeaderNavigationDropdownItem[];\n    parent?: PageHeaderNavigation;\n}\n\n// This is an alias for MF use as \"DropdownItem\" doesn't make sense in context with how it is used\nexport interface PageHeaderSecondaryNavigationItem extends PageHeaderNavigationDropdownItem { }\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { MenuNavigationItemDirective } from './menu-navigation-item.directive';\nexport class MenuNavigationService {\n\n    active$ = new BehaviorSubject<MenuNavigationItemDirective>(null);\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction MenuNavigationService_tsickle_Closure_declarations() {\n/** @type {?} */\nMenuNavigationService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMenuNavigationService.ctorParameters;\n/** @type {?} */\nMenuNavigationService.prototype.active$;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ElementRef, EventEmitter, OnDestroy, Output } from '@angular/core';\nimport { Subscription } from 'rxjs/Subscription';\nimport { MenuNavigationService } from './menu-navigation.service';\nexport class MenuNavigationItemDirective implements OnDestroy {\n\n    \n    activated = new EventEmitter();\nprivate _subscription: Subscription;\n/**\n * @param {?} _service\n * @param {?} _elementRef\n */\nconstructor(\nprivate _service: MenuNavigationService,\nprivate _elementRef: ElementRef\n    ) {\n        this._subscription = _service.active$.subscribe((next) => {\n            if (next === this) {\n                this.setActive();\n            }\n        });\n    }\n/**\n * @return {?}\n */\nngOnDestroy(): void {\n        this._subscription.unsubscribe();\n    }\n/**\n * @return {?}\n */\nsetActive(): void {\n        this._elementRef.nativeElement.focus();\n        this.activated.emit();\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: '[uxMenuNavigationItem]'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: MenuNavigationService, },\n{type: ElementRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'activated': [{ type: Output },],\n};\n}\n\nfunction MenuNavigationItemDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nMenuNavigationItemDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMenuNavigationItemDirective.ctorParameters;\n/** @type {?} */\nMenuNavigationItemDirective.propDecorators;\n/** @type {?} */\nMenuNavigationItemDirective.prototype.activated;\n/** @type {?} */\nMenuNavigationItemDirective.prototype._subscription;\n/** @type {?} */\nMenuNavigationItemDirective.prototype._service;\n/** @type {?} */\nMenuNavigationItemDirective.prototype._elementRef;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { AfterContentInit, ContentChildren, Directive, ElementRef, EventEmitter, HostListener, Inject, Input, OnDestroy, OnInit, Output, QueryList, Renderer2 } from '@angular/core';\nimport { DOCUMENT } from '@angular/platform-browser';\nimport { Subscription } from 'rxjs/Subscription';\nimport { MenuNavigationItemDirective } from './menu-navigation-item.directive';\nimport { MenuNavigationToggleDirective } from './menu-navigation-toggle.directive';\nimport { MenuNavigationService } from './menu-navigation.service';\nexport class MenuNavigationDirective implements OnInit, AfterContentInit, OnDestroy {\n\n    \n    toggleButton: MenuNavigationToggleDirective;\n\n    \n    toggleButtonPosition: 'top' | 'right' | 'bottom' | 'left' = 'top';\n\n    \n    navigatedOut = new EventEmitter<KeyboardEvent>();\n\n    \n    items: QueryList<MenuNavigationItemDirective>;\n/**\n * @return {?}\n */\nget activeIndex(): number {\n        return this._itemsOrdered.indexOf(this._service.active$.value);\n    }\nprivate _itemsOrdered: MenuNavigationItemDirective[];\nprivate _document: Document;\nprivate _subscription = new Subscription();\n/**\n * @param {?} _service\n * @param {?} _elementRef\n * @param {?} _renderer\n * @param {?} document\n */\nconstructor(\nprivate _service: MenuNavigationService,\nprivate _elementRef: ElementRef,\nprivate _renderer: Renderer2,\n         document: any\n    ) {\n        this._document = document;\n    }\n/**\n * @return {?}\n */\nngOnInit(): void {\n        if (this.toggleButton) {\n            this._subscription.add(\n                this.toggleButton.keyEnter.subscribe(this.focusFirst.bind(this))\n            );\n        }\n    }\n/**\n * @return {?}\n */\nngAfterContentInit(): void {\n\n        this._subscription.add(\n            this.items.changes.subscribe(() => {\n                this._itemsOrdered = this.items.toArray();\n            })\n        );\n\n        this._itemsOrdered = this.items.toArray();\n    }\n/**\n * @return {?}\n */\nngOnDestroy(): void {\n        this._subscription.unsubscribe();\n    }\n/**\n * @return {?}\n */\nfocusFirst(): void {\n        this.moveFirst();\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nprivate keydownHandler(event: KeyboardEvent): void {\n\n        // Only handle events when focus in within the list of menu items\n        if (!this._elementRef.nativeElement.contains(this._document.activeElement)) {\n            return;\n        }\n\n        let /** @type {?} */ handled = false;\n\n        switch (event.key) {\n\n            case 'ArrowUp':\n            case 'Up':\n                this.movePrevious(event);\n                handled = true;\n                break;\n\n            case 'ArrowDown':\n            case 'Down':\n                this.moveNext(event);\n                handled = true;\n                break;\n\n            case 'ArrowLeft':\n            case 'Left':\n                if (this.toggleButtonPosition === 'left') {\n                    this.moveToToggleButton(event);\n                    handled = true;\n                }\n                break;\n\n            case 'ArrowRight':\n            case 'Right':\n                if (this.toggleButtonPosition === 'right') {\n                    this.moveToToggleButton(event);\n                    handled = true;\n                }\n                break;\n\n            case 'Home':\n                this.moveFirst();\n                handled = true;\n                break;\n\n            case 'End':\n                this.moveLast();\n                handled = true;\n                break;\n\n            case 'Escape':\n                this.navigatedOut.emit(event);\n                handled = true;\n                break;\n        }\n\n        if (handled) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nprivate moveNext(event: KeyboardEvent): void {\n\n        // Do nothing if there's no active menu item registered\n        if (this.activeIndex < 0) {\n            return;\n        }\n\n        const /** @type {?} */ nextIndex = this.activeIndex + 1;\n        if (nextIndex < this._itemsOrdered.length) {\n\n            // Activate the next menu item\n            // (uxMenuNavigationItem subscribes to this and applies focus if it matches)\n            this._service.active$.next(this._itemsOrdered[nextIndex]);\n\n        } else {\n\n            // Check if focus went out of bounds in the direction of the origin toggle button\n            if (this.toggleButtonPosition === 'bottom') {\n                this.moveToToggleButton(event);\n            }\n        }\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nprivate movePrevious(event: KeyboardEvent): void {\n\n        // Do nothing if there's no active menu item registered\n        if (this.activeIndex < 0) {\n            return;\n        }\n\n        const /** @type {?} */ nextIndex = this.activeIndex - 1;\n        if (nextIndex >= 0) {\n\n            // Activate the previous menu item\n            // (uxMenuNavigationItem subscribes to this and applies focus if it matches)\n            this._service.active$.next(this._itemsOrdered[nextIndex]);\n\n        } else {\n\n            // Check if focus went out of bounds in the direction of the origin toggle button\n            if (this.toggleButtonPosition === 'top') {\n                this.moveToToggleButton(event);\n            }\n        }\n    }\n/**\n * @return {?}\n */\nprivate moveFirst(): void {\n        if (this._itemsOrdered.length > 0) {\n            this._service.active$.next(this._itemsOrdered[0]);\n        }\n    }\n/**\n * @return {?}\n */\nprivate moveLast(): void {\n        if (this._itemsOrdered.length > 0) {\n            this._service.active$.next(this._itemsOrdered[this._itemsOrdered.length - 1]);\n        }\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nprivate moveToToggleButton(event: KeyboardEvent): void {\n        if (this.toggleButton) {\n            this.toggleButton.focus();\n            this.toggleButton.menuOpen = false;\n        }\n\n        this.navigatedOut.emit(event);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: '[uxMenuNavigation]',\n    exportAs: 'uxMenuNavigation',\n    providers: [MenuNavigationService]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: MenuNavigationService, },\n{type: ElementRef, },\n{type: Renderer2, },\n{type: undefined, decorators: [{ type: Inject, args: [DOCUMENT, ] }, ]},\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'toggleButton': [{ type: Input },],\n'toggleButtonPosition': [{ type: Input },],\n'navigatedOut': [{ type: Output },],\n'items': [{ type: ContentChildren, args: [MenuNavigationItemDirective, { descendants: true }, ] },],\n'keydownHandler': [{ type: HostListener, args: ['document:keydown', ['$event'], ] },],\n};\n}\n\nfunction MenuNavigationDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nMenuNavigationDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMenuNavigationDirective.ctorParameters;\n/** @type {?} */\nMenuNavigationDirective.propDecorators;\n/** @type {?} */\nMenuNavigationDirective.prototype.toggleButton;\n/** @type {?} */\nMenuNavigationDirective.prototype.toggleButtonPosition;\n/** @type {?} */\nMenuNavigationDirective.prototype.navigatedOut;\n/** @type {?} */\nMenuNavigationDirective.prototype.items;\n/** @type {?} */\nMenuNavigationDirective.prototype._itemsOrdered;\n/** @type {?} */\nMenuNavigationDirective.prototype._document;\n/** @type {?} */\nMenuNavigationDirective.prototype._subscription;\n/** @type {?} */\nMenuNavigationDirective.prototype._service;\n/** @type {?} */\nMenuNavigationDirective.prototype._elementRef;\n/** @type {?} */\nMenuNavigationDirective.prototype._renderer;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ElementRef, EventEmitter, HostListener, Input, Output } from '@angular/core';\nexport class MenuNavigationToggleDirective {\n/**\n * @return {?}\n */\nget menuOpen(): boolean {\n        return this._menuOpen;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset menuOpen(value: boolean) {\n        this._menuOpen = value;\n        this.menuOpenChange.emit(value);\n    }\n\n    \n    menuPosition: 'top' | 'right' | 'bottom' | 'left' = 'bottom';\n\n    \n    menuOpenChange = new EventEmitter<boolean>();\n\n    keyEnter = new EventEmitter<void>();\nprivate _menuOpen: boolean;\n/**\n * @param {?} _elementRef\n */\nconstructor(private _elementRef: ElementRef) { }\n/**\n * @return {?}\n */\nfocus(): void {\n        this._elementRef.nativeElement.focus();\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nkeydownHandler(event: KeyboardEvent): void {\n\n        if (this.isKeyMatch(event.key)) {\n\n            // Open the menu\n            this.menuOpen = true;\n\n            // Allow the menu to init, then send the event to give it focus\n            setTimeout(() => {\n                this.keyEnter.emit();\n            });\n\n            event.preventDefault();\n            event.stopPropagation();\n        }\n    }\n/**\n * @param {?} key\n * @return {?}\n */\nprivate isKeyMatch(key: string): boolean {\n        switch (key) {\n            case 'Enter':\n            case ' ':\n                return true;\n\n            case 'ArrowUp':\n            case 'Up':\n                return this.menuPosition === 'top';\n\n            case 'ArrowDown':\n            case 'Down':\n                return this.menuPosition === 'bottom';\n\n            case 'ArrowLeft':\n            case 'Left':\n                return this.menuPosition === 'left';\n\n            case 'ArrowRight':\n            case 'Right':\n                return this.menuPosition === 'right';\n        }\n\n        return false;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: '[uxMenuNavigationToggle]',\n    exportAs: 'uxMenuNavigationToggle'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'menuOpen': [{ type: Input },],\n'menuPosition': [{ type: Input },],\n'menuOpenChange': [{ type: Output },],\n'keydownHandler': [{ type: HostListener, args: ['keydown', ['$event'], ] },],\n};\n}\n\nfunction MenuNavigationToggleDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nMenuNavigationToggleDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMenuNavigationToggleDirective.ctorParameters;\n/** @type {?} */\nMenuNavigationToggleDirective.propDecorators;\n/** @type {?} */\nMenuNavigationToggleDirective.prototype.menuPosition;\n/** @type {?} */\nMenuNavigationToggleDirective.prototype.menuOpenChange;\n/** @type {?} */\nMenuNavigationToggleDirective.prototype.keyEnter;\n/** @type {?} */\nMenuNavigationToggleDirective.prototype._menuOpen;\n/** @type {?} */\nMenuNavigationToggleDirective.prototype._elementRef;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\n\nimport { MenuNavigationDirective } from './menu-navigation.directive';\nimport { MenuNavigationItemDirective } from './menu-navigation-item.directive';\nimport { MenuNavigationToggleDirective } from './menu-navigation-toggle.directive';\n\nconst /** @type {?} */ EXPORTS = [\n    MenuNavigationDirective,\n    MenuNavigationItemDirective,\n    MenuNavigationToggleDirective\n];\nexport class MenuNavigationModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [],\n    exports: EXPORTS,\n    declarations: EXPORTS,\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction MenuNavigationModule_tsickle_Closure_declarations() {\n/** @type {?} */\nMenuNavigationModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMenuNavigationModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\n\nimport { PageHeaderComponent } from './page-header.component';\nimport { BreadcrumbsModule } from '../breadcrumbs/index';\nimport { PageHeaderIconMenuComponent } from './icon-menu/icon-menu.component';\nimport { PageHeaderNavigationComponent } from './navigation/navigation.component';\nimport { PageHeaderNavigationItemComponent } from './navigation/navigation-item/navigation-item.component';\nimport { PageHeaderNavigationDropdownItemComponent } from './navigation/navigation-dropdown-item/navigation-dropdown-item.component';\nimport { PageHeaderCustomMenuDirective } from './custom-menu/custom-menu.directive';\nimport { ResizeModule } from '../../directives/resize/index';\nimport { ColorServiceModule } from '../../services/color/index';\nimport { MenuNavigationModule } from '../../directives/menu-navigation/index';\nexport class PageHeaderModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        CommonModule,\n        BreadcrumbsModule,\n        ColorServiceModule,\n        ResizeModule,\n        MenuNavigationModule,\n        BsDropdownModule.forRoot()\n    ],\n    exports: [\n        PageHeaderComponent,\n        PageHeaderCustomMenuDirective\n    ],\n    declarations: [\n        PageHeaderComponent,\n        PageHeaderIconMenuComponent,\n        PageHeaderCustomMenuDirective,\n        PageHeaderNavigationComponent,\n        PageHeaderNavigationItemComponent,\n        PageHeaderNavigationDropdownItemComponent\n    ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction PageHeaderModule_tsickle_Closure_declarations() {\n/** @type {?} */\nPageHeaderModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nPageHeaderModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Input, ChangeDetectionStrategy } from '@angular/core';\nexport class ProgressBarComponent {\n     value: number = 0;\n     max: number = 100;\n     indeterminate: boolean = false;\n     trackColor: string;\n     barColor: string;\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-progress-bar',\n    template: `\n      <div *ngIf=\"!indeterminate\" class=\"progressbar-track\" [style.width.%]=\"(value / max) * 100\" [style.backgroundColor]=\"barColor\">\n          <ng-content></ng-content>\n      </div>\n      <div *ngIf=\"indeterminate\" class=\"progressbar-track indeterminate\" [style.backgroundColor]=\"barColor\">\n          <ng-content></ng-content>\n      </div>\n    `,\n    changeDetection: ChangeDetectionStrategy.OnPush\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'value': [{ type: Input },],\n'max': [{ type: Input },],\n'indeterminate': [{ type: Input },],\n'trackColor': [{ type: Input },],\n'barColor': [{ type: Input },],\n};\n}\n\nfunction ProgressBarComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nProgressBarComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nProgressBarComponent.ctorParameters;\n/** @type {?} */\nProgressBarComponent.propDecorators;\n/** @type {?} */\nProgressBarComponent.prototype.value;\n/** @type {?} */\nProgressBarComponent.prototype.max;\n/** @type {?} */\nProgressBarComponent.prototype.indeterminate;\n/** @type {?} */\nProgressBarComponent.prototype.trackColor;\n/** @type {?} */\nProgressBarComponent.prototype.barColor;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ProgressBarComponent } from './progress-bar.component';\nexport class ProgressBarModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        CommonModule\n    ],\n    exports: [ProgressBarComponent],\n    declarations: [ProgressBarComponent]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ProgressBarModule_tsickle_Closure_declarations() {\n/** @type {?} */\nProgressBarModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nProgressBarModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, EventEmitter, Input, Output, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nexport const /** @type {?} */ RADIOBUTTON_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => RadioButtonComponent),\n    multi: true\n};\n\nlet /** @type {?} */ uniqueRadioId = 0;\nexport class RadioButtonComponent implements ControlValueAccessor {\nprivate _radioButtonId: string = `ux-radio-button-${++uniqueRadioId}`;\n\n     id: string = this._radioButtonId;\n     name: string | null;\n     required: boolean;\n     tabindex: number = 0;\n     clickable: boolean = true;\n     disabled: boolean = false;\n     simplified: boolean = false;\n     option: any;\n     ariaLabel: string = '';\n     ariaLabelledby: string = null;\n     ariaDescribedby: string = null;\n\n     valueChange: EventEmitter<any> = new EventEmitter<any>();\n/**\n * @return {?}\n */\nget value() {\n        return this._value;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset value(value: boolean) {\n        this._value = value;\n\n        // invoke change event\n        this.valueChange.emit(this._value);\n\n        // call callback\n        this.onChangeCallback(this._value);\n        this.onTouchedCallback();        \n    }\n/**\n * @return {?}\n */\nget inputId(): string { \n        return `${this.id || this._radioButtonId}-input`;\n    }\nprivate _value: any = false;\n\n    focused: boolean = false;\n    onTouchedCallback: () => void = () => { };\n    onChangeCallback: (_: any) => void = () => { };\n/**\n * @return {?}\n */\ntoggle(): void {\n\n        if (this.disabled || !this.clickable) {\n            return;\n        }\n\n        // toggle the checked state\n        this.value = this.option;\n\n        // call callback\n        this.onChangeCallback(this.value);\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nwriteValue(value: boolean): void {\n        if (value !== this._value) {\n            this._value = value;\n        }\n    }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnChange(fn: any): void {\n        this.onChangeCallback = fn;\n    }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnTouched(fn: any): void {\n        this.onTouchedCallback = fn;\n    }\n/**\n * @param {?} isDisabled\n * @return {?}\n */\nsetDisabledState(isDisabled: boolean): void {\n        this.disabled = isDisabled;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-radio-button',\n    template: `\n      <label [attr.for]=\"inputId\" class=\"ux-radio-button\"\n             [class.ux-radio-button-checked]=\"value === option\"\n             [class.ux-radio-button-simplified]=\"simplified\"\n             [class.ux-radio-button-disabled]=\"disabled\"\n             [class.ux-radio-button-focused]=\"focused\">\n\n          <div class=\"ux-radio-button-container\">\n              <input class=\"ux-radio-button-input\"\n                  type=\"radio\"\n                  [id]=\"inputId\"\n                  [checked]=\"value === option\"\n                  [disabled]=\"disabled\"\n                  [tabindex]=\"tabindex || value === option ? 0 : -1\"\n                  [attr.name]=\"name\"\n                  [required]=\"required\"\n                  [attr.aria-label]=\"ariaLabel\"\n                  [attr.aria-labelledby]=\"ariaLabelledby\"\n                  [attr.aria-describedby]=\"ariaDescribedby\"\n                  [attr.aria-checked]=\"value === option\"\n                  (focus)=\"focused = true\"\n                  (blur)=\"focused = false\"\n                  (change)=\"toggle()\"\n                  (click)=\"$event.stopPropagation()\">\n          </div>\n\n          <span class=\"ux-radio-button-label\">\n              <ng-content></ng-content>\n          </span>\n\n      </label>\n    `,\n    providers: [RADIOBUTTON_VALUE_ACCESSOR]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'id': [{ type: Input },],\n'name': [{ type: Input },],\n'required': [{ type: Input },],\n'tabindex': [{ type: Input },],\n'clickable': [{ type: Input },],\n'disabled': [{ type: Input },],\n'simplified': [{ type: Input },],\n'option': [{ type: Input },],\n'ariaLabel': [{ type: Input, args: ['aria-label', ] },],\n'ariaLabelledby': [{ type: Input, args: ['aria-labelledby', ] },],\n'ariaDescribedby': [{ type: Input, args: ['aria-describedby', ] },],\n'valueChange': [{ type: Output },],\n'value': [{ type: Input },],\n};\n}\n\nfunction RadioButtonComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nRadioButtonComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nRadioButtonComponent.ctorParameters;\n/** @type {?} */\nRadioButtonComponent.propDecorators;\n/** @type {?} */\nRadioButtonComponent.prototype._radioButtonId;\n/** @type {?} */\nRadioButtonComponent.prototype.id;\n/** @type {?} */\nRadioButtonComponent.prototype.name;\n/** @type {?} */\nRadioButtonComponent.prototype.required;\n/** @type {?} */\nRadioButtonComponent.prototype.tabindex;\n/** @type {?} */\nRadioButtonComponent.prototype.clickable;\n/** @type {?} */\nRadioButtonComponent.prototype.disabled;\n/** @type {?} */\nRadioButtonComponent.prototype.simplified;\n/** @type {?} */\nRadioButtonComponent.prototype.option;\n/** @type {?} */\nRadioButtonComponent.prototype.ariaLabel;\n/** @type {?} */\nRadioButtonComponent.prototype.ariaLabelledby;\n/** @type {?} */\nRadioButtonComponent.prototype.ariaDescribedby;\n/** @type {?} */\nRadioButtonComponent.prototype.valueChange;\n/** @type {?} */\nRadioButtonComponent.prototype._value;\n/** @type {?} */\nRadioButtonComponent.prototype.focused;\n/** @type {?} */\nRadioButtonComponent.prototype.onTouchedCallback;\n/** @type {?} */\nRadioButtonComponent.prototype.onChangeCallback;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport {FormsModule} from '@angular/forms';\n\nimport { RadioButtonComponent } from './radiobutton.component';\nexport class RadioButtonModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [FormsModule],\n    exports: [RadioButtonComponent],\n    declarations: [RadioButtonComponent]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction RadioButtonModule_tsickle_Closure_declarations() {\n/** @type {?} */\nRadioButtonModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nRadioButtonModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs/Subject';\nimport { SearchBuilderQuery } from './interfaces/query.interface';\nimport { SearchBuilderGroupQuery } from './interfaces/group-query.interface';\nimport { SearchBuilderComponentDefinition } from './interfaces/component-definition.interface';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nexport class SearchBuilderService {\n\n  query: SearchBuilderQuery = {};\n  queryChange: Subject<SearchBuilderQuery> = new Subject<SearchBuilderQuery>();\n  validationChange: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(true);\nprivate _componentId: number = 0;\nprivate _components: SearchBuilderComponentDefinition[] = [];\nprivate _validation: { [key: number]: boolean } = {};\n/**\n * Add a component to the internal list of components\n * @param {?} component\n * @return {?}\n */\nregisterComponent(component: SearchBuilderComponentDefinition): void {\n\n    // ensure there are no components with a matching name\n    if (this._components.find(cmp => cmp.name === component.name)) {\n      throw new Error(`Search builder components must have a unique name. The name ${component.name} has already been used.`);\n    }\n\n    // if unique then add the component to the list\n    this._components.push(component);\n  }\n/**\n * Bulk registration of components\n * (Just a helper method)\n * @param {?} components\n * @return {?}\n */\nregisterComponents(components: SearchBuilderComponentDefinition[]): void {\n    components.forEach(component => this.registerComponent(component));\n  }\n/**\n * Get a registered component class\n * @param {?} name\n * @return {?}\n */\ngetComponent(name: string): any {\n\n    // find the component\n    const /** @type {?} */ component = this._components.find(cmp => cmp.name === name);\n\n    // if there is no match throw an exception\n    if (!component) {\n      throw new Error(`No search build component with the name ${name} exists`);\n    }\n\n    // ensure config is defined - at least to an empty object\n    component.config = component.config || {};\n\n    return component;\n  }\n/**\n * Update the internal search query state\n * note that the query will be immutable\n * @param {?} query\n * @return {?}\n */\nsetQuery(query: SearchBuilderQuery): void {\n    this.query = Object.assign({}, query);\n  }\n/**\n * Return the current query state\n * @return {?}\n */\ngetQuery(): SearchBuilderQuery {\n    return this.query;\n  }\n/**\n * Trigger the observable to indicate the query has been updated\n * @return {?}\n */\nqueryHasChanged(): void {\n    this.queryChange.next(this.query);\n  }\n/**\n * Store the validation state of the query\n * @param {?} id\n * @param {?} valid\n * @return {?}\n */\nsetValid(id: number, valid: boolean): void {\n\n    // store the state for this specific component\n    this._validation[id] = valid;\n\n    // evaluate the entire validation state\n    this.validationChange.next(!Object.keys(this._validation).some(key => !this._validation[key]));\n  }\n/**\n * Generate a unique id for each component\n * @return {?}\n */\ngenerateComponentId(): number {\n    return this._componentId++;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction SearchBuilderService_tsickle_Closure_declarations() {\n/** @type {?} */\nSearchBuilderService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSearchBuilderService.ctorParameters;\n/** @type {?} */\nSearchBuilderService.prototype.query;\n/** @type {?} */\nSearchBuilderService.prototype.queryChange;\n/** @type {?} */\nSearchBuilderService.prototype.validationChange;\n/** @type {?} */\nSearchBuilderService.prototype._componentId;\n/** @type {?} */\nSearchBuilderService.prototype._components;\n/** @type {?} */\nSearchBuilderService.prototype._validation;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable } from '@angular/core';\nimport { SearchBuilderService } from '../search-builder.service';\nimport { SearchBuilderGroupQuery } from '../interfaces/group-query.interface';\nimport { SearchBuilderQuery } from '../interfaces/query.interface';\nexport class SearchBuilderGroupService {\nprivate _id: string;\n/**\n * @param {?} _searchBuilderService\n */\nconstructor(private _searchBuilderService: SearchBuilderService) { }\n/**\n * Initialise the group by defining an id\n * @param {?} id\n * @return {?}\n */\ninit(id: string): void {\n    // store the name of the group\n    this._id = id;\n\n    // create the entry in the query object if it doesn't exist\n    if (!this._searchBuilderService.query[this._id]) {\n\n      // create the section\n      this._searchBuilderService.query[this._id] = [];\n\n      // emit the changes after the initial setup\n      setTimeout(() => this._searchBuilderService.queryHasChanged());\n    }\n  }\n/**\n * Remove a field from the search builder query\n * @param {?} field\n * @return {?}\n */\nremove(field: SearchBuilderGroupQuery): void {\n    // get the query for this group\n    const /** @type {?} */ query = this.getQuery();\n\n    // remove the field from the array\n    query.splice(query.indexOf(field), 1);\n  }\n/**\n * Get the query for this specific search group\n * @return {?}\n */\ngetQuery(): SearchBuilderGroupQuery[] {\n    return this._searchBuilderService.query[this._id] ? this._searchBuilderService.query[this._id] : [];\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: SearchBuilderService, },\n];\n}\n\nfunction SearchBuilderGroupService_tsickle_Closure_declarations() {\n/** @type {?} */\nSearchBuilderGroupService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSearchBuilderGroupService.ctorParameters;\n/** @type {?} */\nSearchBuilderGroupService.prototype._id;\n/** @type {?} */\nSearchBuilderGroupService.prototype._searchBuilderService;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, OnInit, Input, Output, EventEmitter, TemplateRef } from '@angular/core';\nimport { SearchBuilderGroupService } from './search-builder-group.service';\nimport { SearchBuilderService } from '../search-builder.service';\nimport { SearchBuilderGroupQuery } from '../interfaces/group-query.interface';\nexport class SearchBuilderGroupComponent implements OnInit {\n\n   id: string;\n   header: string;\n   operator: SearchBuilderGroupOperator = 'and';\n   addText: string = 'Add a field';\n   placeholder: TemplateRef<any>;\n   showPlaceholder: boolean = false;\n\n   add: EventEmitter<MouseEvent> = new EventEmitter<MouseEvent>();\n   remove: EventEmitter<SearchBuilderGroupQuery> = new EventEmitter<SearchBuilderGroupQuery>();\n/**\n * @param {?} searchBuilderGroupService\n * @param {?} _searchBuilderService\n */\nconstructor(public searchBuilderGroupService: SearchBuilderGroupService,\nprivate _searchBuilderService: SearchBuilderService) { }\n/**\n * @return {?}\n */\nngOnInit(): void {\n\n    // ensure we have a name otherwise throw an error\n    if (!this.id) {\n      throw new Error('Search builder group must have a name attribute.');\n    }\n\n    // otherwise register the group\n    this.searchBuilderGroupService.init(this.id);\n  }\n/**\n * @param {?} field\n * @return {?}\n */\nremoveField(field: SearchBuilderGroupQuery): void {\n    this.searchBuilderGroupService.remove(field);\n    this.remove.emit(field);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'ux-search-builder-group',\n  template: `\n    <h4 class=\"search-group-title\">{{ header }}</h4>\n\n    <main class=\"search-group-content\">\n\n      <section class=\"search-group-operator search-group-operator-{{ operator }}\" [class.hidden-operator]=\"searchBuilderGroupService.getQuery().length < 2\">{{ operator }}</section>\n\n      <section class=\"search-group-items\">\n\n        <div class=\"search-group-item-container\" *ngFor=\"let field of searchBuilderGroupService.getQuery()\">\n\n          <div class=\"search-group-item\">\n            <ng-container *uxSearchBuilderOutlet=\"field.type; context: field\"></ng-container>\n          </div>\n\n          <div class=\"search-group-item-remove\" (click)=\"removeField(field)\">\n            <span class=\"hpe-icon hpe-close\"></span>\n          </div>\n        </div>\n\n        <!-- Placeholder Item -->\n        <ng-container *ngIf=\"showPlaceholder\">\n\n          <!-- The Default Placeholder -->\n          <div class=\"search-group-item-container placeholder-item\" *ngIf=\"!placeholder\">\n        \n            <div class=\"search-group-item\">\n              <label class=\"form-label\">New field</label>\n              <div class=\"form-control\"></div>\n            </div>\n  \n          </div>\n\n          <!-- Allow a custom placeholder -->\n        <ng-container *ngTemplateOutlet=\"placeholder\"></ng-container>\n\n        </ng-container>\n\n      </section>\n\n      <section class=\"search-builder-group-add-field\" (click)=\"add.emit($event)\">\n\n        <button type=\"button\" class=\"btn btn-icon btn-circular button-accent\" aria-label=\"Add Field\">\n          <span class=\"hpe-icon hpe-add\" aria-hidden=\"true\"></span>\n        </button>\n\n        <span class=\"search-builder-group-add-field-label\">{{ addText }}</span>\n\n      </section>\n\n    </main>\n\n    <hr class=\"search-builder-group-divider\">\n  `,\n  providers: [SearchBuilderGroupService]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: SearchBuilderGroupService, },\n{type: SearchBuilderService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'id': [{ type: Input },],\n'header': [{ type: Input },],\n'operator': [{ type: Input },],\n'addText': [{ type: Input },],\n'placeholder': [{ type: Input },],\n'showPlaceholder': [{ type: Input },],\n'add': [{ type: Output },],\n'remove': [{ type: Output },],\n};\n}\n\nfunction SearchBuilderGroupComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nSearchBuilderGroupComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSearchBuilderGroupComponent.ctorParameters;\n/** @type {?} */\nSearchBuilderGroupComponent.propDecorators;\n/** @type {?} */\nSearchBuilderGroupComponent.prototype.id;\n/** @type {?} */\nSearchBuilderGroupComponent.prototype.header;\n/** @type {?} */\nSearchBuilderGroupComponent.prototype.operator;\n/** @type {?} */\nSearchBuilderGroupComponent.prototype.addText;\n/** @type {?} */\nSearchBuilderGroupComponent.prototype.placeholder;\n/** @type {?} */\nSearchBuilderGroupComponent.prototype.showPlaceholder;\n/** @type {?} */\nSearchBuilderGroupComponent.prototype.add;\n/** @type {?} */\nSearchBuilderGroupComponent.prototype.remove;\n/** @type {?} */\nSearchBuilderGroupComponent.prototype.searchBuilderGroupService;\n/** @type {?} */\nSearchBuilderGroupComponent.prototype._searchBuilderService;\n}\n\n\nexport type SearchBuilderGroupOperator = 'and' | 'or' | 'not';\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, OnInit, Type, Input, ComponentRef, ComponentFactoryResolver, ViewContainerRef } from '@angular/core';\nimport { SearchBuilderService } from '../search-builder.service';\nexport class SearchBuilderOutletDirective implements OnInit {\n\n     uxSearchBuilderOutlet: string;\n     uxSearchBuilderOutletContext: any;\nprivate _componentRef: ComponentRef<any>;\n/**\n * @param {?} _viewContainerRef\n * @param {?} _componentFactoryResolver\n * @param {?} _searchBuilderService\n */\nconstructor(\nprivate _viewContainerRef: ViewContainerRef,\nprivate _componentFactoryResolver: ComponentFactoryResolver,\nprivate _searchBuilderService: SearchBuilderService\n    ) { }\n/**\n * @return {?}\n */\nngOnInit(): void {\n\n        // get the class from the type\n        const /** @type {?} */ componentDefinition = this._searchBuilderService.getComponent(this.uxSearchBuilderOutlet);\n\n        // create the component factory\n        const /** @type {?} */ componentFactory = this._componentFactoryResolver.resolveComponentFactory(componentDefinition.component);\n\n        // create the component instance\n        this._componentRef = this._viewContainerRef.createComponent(componentFactory);\n\n        // combine the predefined config with any dynmaic config\n        const /** @type {?} */ config = Object.assign({}, componentDefinition.config, this.uxSearchBuilderOutletContext.config || {});\n\n        // set the context and config property on the component instance\n        this._componentRef.instance.context = this.uxSearchBuilderOutletContext;\n        this._componentRef.instance.config = config;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: '[uxSearchBuilderOutlet]'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ViewContainerRef, },\n{type: ComponentFactoryResolver, },\n{type: SearchBuilderService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'uxSearchBuilderOutlet': [{ type: Input },],\n'uxSearchBuilderOutletContext': [{ type: Input },],\n};\n}\n\nfunction SearchBuilderOutletDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nSearchBuilderOutletDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSearchBuilderOutletDirective.ctorParameters;\n/** @type {?} */\nSearchBuilderOutletDirective.propDecorators;\n/** @type {?} */\nSearchBuilderOutletDirective.prototype.uxSearchBuilderOutlet;\n/** @type {?} */\nSearchBuilderOutletDirective.prototype.uxSearchBuilderOutletContext;\n/** @type {?} */\nSearchBuilderOutletDirective.prototype._componentRef;\n/** @type {?} */\nSearchBuilderOutletDirective.prototype._viewContainerRef;\n/** @type {?} */\nSearchBuilderOutletDirective.prototype._componentFactoryResolver;\n/** @type {?} */\nSearchBuilderOutletDirective.prototype._searchBuilderService;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, OnDestroy } from '@angular/core';\nimport { SearchBuilderService } from '../search-builder.service';\nimport { SearchBuilderGroupQuery } from '../interfaces/group-query.interface';\nimport { SearchBuilderGroupService } from '../search-builder-group/search-builder-group.service';\nimport { SearchBuilderComponentContext } from '../interfaces/component-context.interface';\nexport class BaseSearchComponent implements OnDestroy {\n\n    type: string;\n    config: any;\n    context: SearchBuilderComponentContext;\nprivate _id: number = this._searchBuilderService.generateComponentId();\nprivate _valid: boolean = true;\n/**\n * Get the current value of the component\n * @return {?}\n */\nget value() {\n        return this.context.value;\n    }\n/**\n * Set the current value of the component\n * @param {?} value\n * @return {?}\n */\nset value(value: any) {\n        this.context.value = value;\n        this._searchBuilderService.queryHasChanged();\n\n        // if value has been set perform validation\n        this.validate();\n    }\n/**\n * @return {?}\n */\nget valid(): boolean {\n        return this._valid;\n    }\n/**\n * @param {?} valid\n * @return {?}\n */\nset valid(valid: boolean) {\n        this._valid = valid;\n        this._searchBuilderService.setValid(this._id, valid);\n    }\n/**\n * @param {?} _searchBuilderService\n * @param {?} _searchBuilderGroupService\n */\nconstructor(\nprivate _searchBuilderService: SearchBuilderService,\nprivate _searchBuilderGroupService: SearchBuilderGroupService\n    ) { }\n/**\n * Make sure we clean up after ourselves\n * @return {?}\n */\nngOnDestroy(): void {\n        this.valid = true;\n    }\n/**\n * Perform any required validation on the value\n * @return {?}\n */\nvalidate(): void {\n        // if a custom validation function has been provided then use it\n        this.valid = this.config.validation ? this.config.validation(this, this.value) : true;\n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-base-search',\n    template: ''\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: SearchBuilderService, },\n{type: SearchBuilderGroupService, },\n];\n}\n\nfunction BaseSearchComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nBaseSearchComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nBaseSearchComponent.ctorParameters;\n/** @type {?} */\nBaseSearchComponent.prototype.type;\n/** @type {?} */\nBaseSearchComponent.prototype.config;\n/** @type {?} */\nBaseSearchComponent.prototype.context;\n/** @type {?} */\nBaseSearchComponent.prototype._id;\n/** @type {?} */\nBaseSearchComponent.prototype._valid;\n/** @type {?} */\nBaseSearchComponent.prototype._searchBuilderService;\n/** @type {?} */\nBaseSearchComponent.prototype._searchBuilderGroupService;\n}\n\n\nexport interface BaseSearchComponentConfig {\n    label?: string;\n    placeholder?: string;\n    validation?: (value: any) => boolean;\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, OnInit } from '@angular/core';\nimport { BaseSearchComponent, BaseSearchComponentConfig } from '../base-search.component';\nexport class SearchTextComponent extends BaseSearchComponent {\n\n  type: string = 'text';\n/**\n * @return {?}\n */\nget label(): string {\n    return this.config.label;\n  }\n/**\n * @return {?}\n */\nget placeholder(): string {\n    return this.config.placeholder || 'Enter text';\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'ux-search-text',\n  template: `\n    <label class=\"form-label\" *ngIf=\"label\">{{ label }}</label>\n    <input [placeholder]=\"placeholder\" [(ngModel)]=\"value\" class=\"form-control\">\n  `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction SearchTextComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nSearchTextComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSearchTextComponent.ctorParameters;\n/** @type {?} */\nSearchTextComponent.prototype.type;\n}\n\n\nexport interface SearchTextConfig extends BaseSearchComponentConfig { }\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, OnInit } from '@angular/core';\nimport { BaseSearchComponent, BaseSearchComponentConfig } from '../base-search.component';\nimport { DateTimePickerTimezone } from '../../../date-time-picker/index';\nexport class SearchDateComponent extends BaseSearchComponent implements OnInit {\n\n  type: string = 'date';\n/**\n * @return {?}\n */\nget label(): string {\n    return this.config.label;\n  }\n/**\n * @return {?}\n */\nget placeholder(): string {\n    return this.config.placeholder || 'Enter date';\n  }\n/**\n * @return {?}\n */\nngOnInit(): void {\n\n    // by default set to the current date if not specified\n    if (!this.value) {\n      this.value = new Date();\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'ux-search-date',\n  template: `\n    <label class=\"form-label\" *ngIf=\"label\">{{ label }}</label>\n\n    <div class=\"input-group date m-nil\">\n        <span class=\"input-group-addon\" tabindex=\"1\" (click)=\"popover.show()\">\n            <i class=\"hpe-icon hpe-calendar\" aria-hidden=\"true\"></i>\n        </span>\n        <input type=\"text\" #popover=\"ux-popover\" [ngModel]=\"value | date:'dd MMMM yyyy'\" [uxPopover]=\"popoverTemplate\"\n            placement=\"bottom\" popoverClass=\"date-time-picker-popover\" class=\"form-control\" aria-label=\"Selected date\" [placeholder]=\"placeholder\">\n    </div>\n\n    <ng-template #popoverTemplate>\n        <ux-date-time-picker [(date)]=\"value\" [showTime]=\"false\"></ux-date-time-picker>\n    </ng-template>\n  `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction SearchDateComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nSearchDateComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSearchDateComponent.ctorParameters;\n/** @type {?} */\nSearchDateComponent.prototype.type;\n}\n\n\nexport interface SearchDateConfig extends BaseSearchComponentConfig { }\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component } from '@angular/core';\nimport { BaseSearchComponent } from '../base-search.component';\nimport { DateTimePickerTimezone } from '../../../date-time-picker/index';\nexport class SearchDateRangeComponent extends BaseSearchComponent {\n\n    type: string = 'date-range';\n/**\n * @return {?}\n */\nget label(): string {\n        return this.config.label;\n    }\n/**\n * @return {?}\n */\nget from() {\n\n        // if value does not exist the set it\n        if (!this.value || !this.value.from) {\n            this.from = new Date();\n        }\n\n        // ensure that the from value is a date object\n        if (this.value.from instanceof Date === false) {\n            this.value.from = new Date(this.value.from);\n        }\n\n        return this.value.from;\n    }\n/**\n * @param {?} fromValue\n * @return {?}\n */\nset from(fromValue: any) {\n\n        // create new object based on the current value\n        const /** @type {?} */ value = Object.assign({}, this.value);\n\n        // ensure that the from value is a date\n        if (fromValue instanceof Date === false) {\n            fromValue = new Date(fromValue);\n        }\n\n        // set the latest value\n        value.from = fromValue;\n\n        // update the value object while ensuring immutability\n        this.value = value;\n    }\n/**\n * @return {?}\n */\nget to() {\n\n        // if value does not exist the set it\n        if (!this.value || !this.value.to) {\n            this.to = new Date();\n        }\n\n        // ensure that the to value is a date object\n        if (this.value.to instanceof Date === false) {\n            this.value.to = new Date(this.value.to);\n        }\n\n        return this.value.to;\n    }\n/**\n * @param {?} toValue\n * @return {?}\n */\nset to(toValue: any) {\n\n        // create new object based on the current value\n        const /** @type {?} */ value = Object.assign({}, this.value);\n\n        // ensure that the to value is a date\n        if (toValue instanceof Date === false) {\n            toValue = new Date(toValue);\n        }\n\n        // set the latest value\n        value.to = toValue;\n\n        // update the value object while ensuring immutability\n        this.value = value;\n    }\n/**\n * @return {?}\n */\nget fromLabel(): string {\n        return this.config.fromLabel || 'From';\n    }\n/**\n * @return {?}\n */\nget toLabel(): string {\n        return this.config.toLabel || 'To';\n    }\n/**\n * @return {?}\n */\nget fromPlaceholder(): string {\n        return this.config.fromPlaceholder;\n    }\n/**\n * @return {?}\n */\nget toPlaceholder(): string {\n        return this.config.toPlaceholder;\n    }\n/**\n * Override the default validation\n * @return {?}\n */\nvalidate(): void {\n\n        // check if there is a config validation function\n        if (this.config.validation) {\n            return super.validate();\n        }\n\n        // create copies of the dates so we can modify time value (to ignore it)\n        const /** @type {?} */ from = new Date(this.value.from);\n        const /** @type {?} */ to = new Date(this.value.to);\n\n        // set the time to the same so we dont compare it\n        from.setHours(0, 0, 0, 0);\n        to.setHours(0, 0, 0, 0);\n\n        // valid if the from date is less than or equal to the to date\n        this.valid = from <= to;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-search-date-range',\n    template: `\n      <label class=\"form-label\" *ngIf=\"label\">{{ label }}</label>\n\n      <div class=\"row\">\n          <div class=\"col-sm-12\">\n              <div class=\"form-inline\" [class.has-error]=\"!valid\">\n\n                  <div class=\"form-group p-r-md\">\n                      <label class=\"form-label m-r-xs\">{{ fromLabel }}</label>\n\n                      <div class=\"input-group date m-nil\">\n                          <span class=\"input-group-addon p-r-xs\" tabindex=\"1\" (click)=\"fromPopover.show()\">\n                              <i class=\"hpe-icon hpe-calendar\" aria-hidden=\"true\"></i>\n                          </span>\n                          <input type=\"text\" #fromPopover=\"ux-popover\" [ngModel]=\"from | date:'dd MMMM yyyy'\" [uxPopover]=\"fromPopoverTemplate\" placement=\"bottom\"\n                              popoverClass=\"date-time-picker-popover\" class=\"form-control\" aria-label=\"Selected date\" [placeholder]=\"fromPlaceholder\">\n                      </div>\n                  </div>\n\n                  <div class=\"form-group p-r-xs\">\n                      <label class=\"form-label m-r-xs\">{{ toLabel }}</label>\n\n                      <div class=\"input-group date m-nil\">\n                          <span class=\"input-group-addon\" tabindex=\"1\" (click)=\"toPopover.show()\">\n                              <i class=\"hpe-icon hpe-calendar\" aria-hidden=\"true\"></i>\n                          </span>\n                          <input type=\"text\" #toPopover=\"ux-popover\" [ngModel]=\"to | date:'dd MMMM yyyy'\" [uxPopover]=\"toPopoverTemplate\" placement=\"bottom\"\n                              popoverClass=\"date-time-picker-popover\" class=\"form-control\" aria-label=\"Selected date\" [placeholder]=\"toPlaceholder\">\n                      </div>\n                  </div>\n\n              </div>\n          </div>\n      </div>\n\n      <ng-template #fromPopoverTemplate>\n          <ux-date-time-picker [(date)]=\"from\" [showTime]=\"false\"></ux-date-time-picker>\n      </ng-template>\n\n      <ng-template #toPopoverTemplate>\n          <ux-date-time-picker [(date)]=\"to\" [showTime]=\"false\"></ux-date-time-picker>\n      </ng-template>\n    `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction SearchDateRangeComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nSearchDateRangeComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSearchDateRangeComponent.ctorParameters;\n/** @type {?} */\nSearchDateRangeComponent.prototype.type;\n}\n\n\nexport interface SearchDateRangeConfig {\n    label?: string;\n    fromLabel?: string;\n    toLabel?: string;\n    fromPlaceholder?: string;\n    toPlaceholder?: string;\n    validation: (value: any) => boolean;\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component } from '@angular/core';\nimport { BaseSearchComponent, BaseSearchComponentConfig } from '../base-search.component';\nimport { InfiniteScrollLoadFunction } from '../../../../index';\nexport class SearchSelectComponent extends BaseSearchComponent {\n\n  type: string = 'select';\n/**\n * Provide defaults for undefined properties\n * @return {?}\n */\nget label(): string {\n    return this.config.label;\n  }\n/**\n * @return {?}\n */\nget options() {\n    return this.config.options || [];\n  }\n/**\n * @return {?}\n */\nget multiple(): boolean {\n    return this.config.multiple || false;\n  }\n/**\n * @return {?}\n */\nget placeholder(): string {\n    return this.config.placeholder || 'Select item';\n  }\n/**\n * @return {?}\n */\nget dropDirection(): string {\n    return this.config.dropDirection || 'down';\n  }\n/**\n * @return {?}\n */\nget allowNull(): boolean {\n    return this.config.allowNull || false;\n  }\n/**\n * @return {?}\n */\nget disabled(): boolean {\n    return this.config.disabled || false;\n  }\n/**\n * @return {?}\n */\nget maxHeight(): string {\n    return this.config.maxHeight || '250px';\n  }\n/**\n * @return {?}\n */\nget pageSize(): number {\n    return this.config.pageSize || 20;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'ux-search-select',\n  template: `\n    <label class=\"form-label\" *ngIf=\"label\">{{ label }}</label>\n\n    <ux-select [(value)]=\"value\" \n               [options]=\"options\" \n               [multiple]=\"multiple\" \n               [placeholder]=\"placeholder\" \n               [dropDirection]=\"dropDirection\"\n               [pageSize]=\"pageSize\"\n               [allowNull]=\"allowNull\"\n               [disabled]=\"disabled\"\n               [maxHeight]=\"maxHeight\"\n               [key]=\"config.key\"\n               [display]=\"config.display\"\n               [loadingTemplate]=\"config.loadingTemplate\"\n               [optionTemplate]=\"config.optionTemplate\"\n               [noOptionsTemplate]=\"config.noOptionsTemplate\">\n    </ux-select>\n  `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction SearchSelectComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nSearchSelectComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSearchSelectComponent.ctorParameters;\n/** @type {?} */\nSearchSelectComponent.prototype.type;\n}\n\n\nexport interface SearchSelectConfig extends BaseSearchComponentConfig {\n  options?: any[] | InfiniteScrollLoadFunction;\n  multiple?: boolean;\n  dropDirection?: 'up' | 'down';\n  allowNull?: boolean;\n  disabled?: boolean;\n  maxHeight?: string;\n  pageSize?: number;\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Input, EventEmitter, Output, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs/Subscription';\nimport { SearchBuilderService } from './search-builder.service';\nimport { SearchBuilderQuery } from './interfaces/query.interface';\nimport { SearchBuilderComponentDefinition } from './interfaces/component-definition.interface';\nimport { SearchTextComponent } from './search-components/text/text.component';\nimport { SearchDateComponent } from './search-components/date/date.component';\nimport { SearchDateRangeComponent } from './search-components/date-range/date-range.component';\nimport { SearchSelectComponent } from './search-components/select/select.component';\nimport'rxjs/add/operator/distinctUntilChanged';\nexport class SearchBuilderComponent implements OnDestroy {\n/**\n * @param {?} components\n * @return {?}\n */\nset components(components: SearchBuilderComponentDefinition[]) {\n    this._searchBuilderService.registerComponents(components);\n  }\n/**\n * @param {?} value\n * @return {?}\n */\nset query(value: SearchBuilderQuery) {\n    this._searchBuilderService.setQuery(value);\n  }\n/**\n * @return {?}\n */\nget query() {\n    return this._searchBuilderService.getQuery();\n  }\n\n   queryChange: EventEmitter<SearchBuilderQuery> = new EventEmitter<SearchBuilderQuery>();\n   valid: EventEmitter<boolean> = new EventEmitter<boolean>(true);\nprivate _querySubscription: Subscription;\nprivate _validSubscription: Subscription;\n/**\n * Register the default search builder components\n * @param {?} _searchBuilderService\n */\nconstructor(private _searchBuilderService: SearchBuilderService) {\n\n    // watch for any query changes\n    this._querySubscription = _searchBuilderService.queryChange.subscribe(query => this.queryChange.emit(query));\n\n    // watch for any changes to the validation\n    this._validSubscription = _searchBuilderService.validationChange.distinctUntilChanged().subscribe(valid => this.valid.emit(valid));\n  }\n/**\n * Remove any subscriptions and cleanup\n * @return {?}\n */\nngOnDestroy(): void {\n    this._querySubscription.unsubscribe();\n    this._validSubscription.unsubscribe();\n  }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'ux-search-builder',\n  template: `\n    <ng-content></ng-content>\n  `,\n  providers: [SearchBuilderService]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: SearchBuilderService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'components': [{ type: Input },],\n'query': [{ type: Input },],\n'queryChange': [{ type: Output },],\n'valid': [{ type: Output },],\n};\n}\n\nfunction SearchBuilderComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nSearchBuilderComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSearchBuilderComponent.ctorParameters;\n/** @type {?} */\nSearchBuilderComponent.propDecorators;\n/** @type {?} */\nSearchBuilderComponent.prototype.queryChange;\n/** @type {?} */\nSearchBuilderComponent.prototype.valid;\n/** @type {?} */\nSearchBuilderComponent.prototype._querySubscription;\n/** @type {?} */\nSearchBuilderComponent.prototype._validSubscription;\n/** @type {?} */\nSearchBuilderComponent.prototype._searchBuilderService;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","\nexport class TypeaheadOptionEvent {\n/**\n * @param {?} option\n */\nconstructor(public option: any) {}\n}\n\nfunction TypeaheadOptionEvent_tsickle_Closure_declarations() {\n/** @type {?} */\nTypeaheadOptionEvent.prototype.option;\n}\n","import { TypeaheadComponent } from './index';\nimport { Injectable } from '@angular/core';\nexport class TypeaheadKeyService {\nconstructor() { }\n/**\n * @param {?} event\n * @param {?} typeahead\n * @return {?}\n */\nhandleKey(event: KeyboardEvent, typeahead: TypeaheadComponent) {\n        if (typeahead) {\n            switch (event.key) {\n                case 'ArrowUp':\n                case 'Up':\n                    if (!typeahead.open) {\n                        typeahead.open = true;\n                    } else {\n                        typeahead.moveHighlight(-1);\n                    }\n                    event.preventDefault();\n                    break;\n                case 'ArrowDown':\n                case 'Down':\n                    if (!typeahead.open) {\n                        typeahead.open = true;\n                    } else {\n                        typeahead.moveHighlight(1);\n                    }\n                    event.preventDefault();\n                    break;\n                case 'Escape':\n                case 'Esc':\n                    typeahead.open = false;\n                    break;\n            }\n        }\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction TypeaheadKeyService_tsickle_Closure_declarations() {\n/** @type {?} */\nTypeaheadKeyService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTypeaheadKeyService.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { AfterViewInit, ChangeDetectorRef, Component, ElementRef, EventEmitter, Input, OnChanges, Output, SimpleChanges, TemplateRef, ViewChild, HostListener } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { InfiniteScrollLoadFunction } from '../../directives/infinite-scroll/index';\nimport { TypeaheadOptionEvent } from './typeahead-event';\nexport class TypeaheadComponent implements AfterViewInit, OnChanges {\n\n     options: any[] | InfiniteScrollLoadFunction;\n     filter: string;\nprivate _open: boolean = false;\n/**\n * @return {?}\n */\nget open() {\n        return this._open;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset open(value: boolean) {\n        const /** @type {?} */ originalValue = this._open;\n        this._open = value;\n        if (value !== originalValue) {\n            this.openChange.emit(value);\n            if (value) {\n                this.initOptions();\n            }\n        }\n    }\n\n     openChange = new EventEmitter<boolean>();\n\n     display: (option: any) => string | string;\n     key: (option: any) => string | string;\n     disabledOptions: any[];\n     dropDirection: 'up' | 'down' = 'down';\n     maxHeight: string = '250px';\n     openOnFilterChange: boolean = true;\n     pageSize: number = 20;\n     selectFirst: boolean = true;\n\n     loadingTemplate: TemplateRef<any>;\n     optionTemplate: TemplateRef<any>;\n     noOptionsTemplate: TemplateRef<any>;\n\n     optionSelected = new EventEmitter<TypeaheadOptionEvent>();\nprivate _highlighted = new BehaviorSubject<any>(null);\n/**\n * @return {?}\n */\nget highlighted(): any {\n        return this._highlighted.getValue();\n    }\nprivate _defaultLoadingTemplate: TemplateRef<any>;\nprivate _defaultOptionTemplate: TemplateRef<any>;\nprivate _defaultNoOptionsTemplate: TemplateRef<any>;\n\n    loadOptionsCallback: InfiniteScrollLoadFunction;\n    visibleOptions: any[] = [];\n    loading = false;\n    clicking = false;\n\n    optionApi: TypeaheadOptionApi = {\n        getKey: this.getKey.bind(this),\n        getDisplay: this.getDisplay.bind(this),\n        getDisplayHtml: this.getDisplayHtml.bind(this)\n    };\n/**\n * @param {?} typeaheadElement\n * @param {?} cdRef\n */\nconstructor(public typeaheadElement: ElementRef,\nprivate cdRef: ChangeDetectorRef) {\n\n        this.loadOptionsCallback = (pageNum: number, pageSize: number, filter: any) => {\n            if (typeof this.options === 'function') {\n                return this.options(pageNum, pageSize, filter);\n            }\n            return null;\n        };\n    }\n/**\n * @return {?}\n */\nngAfterViewInit() {\n        // Attach default loading template\n        if (!this.loadingTemplate) {\n            this.loadingTemplate = this._defaultLoadingTemplate;\n        }\n\n        // Attach default option template\n        if (!this.optionTemplate) {\n            this.optionTemplate = this._defaultOptionTemplate;\n        }\n\n        // Attach default \"no results\" template\n        if (!this.noOptionsTemplate) {\n            this.noOptionsTemplate = this._defaultNoOptionsTemplate;\n        }\n\n        this.cdRef.detectChanges();\n    }\n/**\n * @param {?} changes\n * @return {?}\n */\nngOnChanges(changes: SimpleChanges) {\n        // Open the dropdown if the filter value updates\n        if (changes.filter) {\n            if (this.openOnFilterChange && changes.filter.currentValue && changes.filter.currentValue.length > 0) {\n                this.open = true;\n            }\n        }\n\n        // Re-filter visibleOptions\n        this.updateOptions();\n    }\n/**\n * @return {?}\n */\nprivate mousedownHandler() {\n        this.clicking = true;\n    }\n/**\n * @return {?}\n */\nprivate mouseupHandler() {\n        this.clicking = false;\n    }\n/**\n * @param {?} event\n * @return {?}\n */\noptionMousedownHandler(event: MouseEvent) {\n        // Workaround to prevent focus changing when an option is clicked\n        event.preventDefault();\n    }\n/**\n * @param {?} event\n * @param {?} option\n * @return {?}\n */\noptionClickHandler(event: MouseEvent, option: any) {\n        this.select(option);\n    }\n/**\n * Returns the unique key value of the given option.\n * @param {?} option\n * @return {?}\n */\ngetKey(option: any): string {\n        if (typeof this.key === 'function') {\n            return this.key(option);\n        }\n        if (typeof this.key === 'string' && option && option.hasOwnProperty(this.key)) {\n            return option[ /** @type {?} */((<string>this.key))];\n        }\n        return this.getDisplay(option);\n    }\n/**\n * Returns the display value of the given option.\n * @param {?} option\n * @return {?}\n */\ngetDisplay(option: any): string {\n        if (typeof this.display === 'function') {\n            return this.display(option);\n        }\n        if (typeof this.display === 'string' && option && option.hasOwnProperty(this.display)) {\n            return option[ /** @type {?} */((<string>this.display))];\n        }\n        return option;\n    }\n/**\n * Returns the display value of the given option with HTML markup added to highlight the part which matches the current filter value.\n * @param {?} option\n * @return {?}\n */\ngetDisplayHtml(option: any) {\n        let /** @type {?} */ displayText;\n        if (typeof option === 'string') {\n            displayText = this.getDisplay(option).replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;');\n        } else {\n            displayText = this.getDisplay(option.name).replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;');\n        }\n        let /** @type {?} */ displayHtml = displayText;\n        if (this.filter) {\n            const /** @type {?} */ length = this.filter.length;\n            const /** @type {?} */ matchIndex = displayText.toLowerCase().indexOf(this.filter.toLowerCase());\n            if (matchIndex >= 0) {\n                var /** @type {?} */ highlight = `<span class=\"ux-filter-match\">${displayText.substr(matchIndex, length)}</span>`;\n                displayHtml = displayText.substr(0, matchIndex) + highlight + displayText.substr(matchIndex + length);\n            }\n        }\n        return displayHtml;\n    }\n/**\n * Returns true if the infinite scroll component should load\n * @return {?}\n */\nisInfiniteScroll() {\n        return typeof this.options === 'function';\n    }\n/**\n * Selects the given option, emitting the optionSelected event and closing the dropdown.\n * @param {?} option\n * @return {?}\n */\nselect(option: any) {\n        if (!this.isDisabled(option)) {\n            this.optionSelected.emit(new TypeaheadOptionEvent(option));\n            this._highlighted.next(null);\n            this.open = false;\n        }\n    }\n/**\n * Returns true if the given option is part of the disabledOptions array.\n * @param {?} option\n * @return {?}\n */\nisDisabled(option: any): boolean {\n        if (this.disabledOptions) {\n            const /** @type {?} */ optionKey = this.getKey(option);\n            const /** @type {?} */ result = this.disabledOptions.find((selectedOption) => {\n                return this.getKey(selectedOption) === optionKey;\n            });\n            return result !== undefined;\n        }\n        return false;\n    }\n/**\n * Set the given option as the current highlighted option, available in the highlightedOption parameter.\n * @param {?} option\n * @return {?}\n */\nhighlight(option: any) {\n        if (!this.isDisabled(option)) {\n            this._highlighted.next(option);\n        }\n    }\n/**\n * Increment or decrement the highlighted option in the list. Disabled options are skipped.\n * @param {?} d Value to be added to the index of the highlighted option, i.e. -1 to move backwards, +1 to move forwards.\n * @return {?}\n */\nmoveHighlight(d: number): any {\n        const /** @type {?} */ highlightIndex = this.indexOfVisibleOption(this.highlighted);\n        let /** @type {?} */ newIndex = highlightIndex;\n        let /** @type {?} */ disabled = true;\n        let /** @type {?} */ inBounds = true;\n        do {\n            newIndex = newIndex + d;\n            inBounds = (newIndex >= 0 && newIndex < this.visibleOptions.length);\n            disabled = inBounds && this.isDisabled(this.visibleOptions[newIndex]);\n        }\n        while (inBounds && disabled);\n\n        if (!disabled && inBounds) {\n            this._highlighted.next(this.visibleOptions[newIndex]);\n        }\n\n        return this.highlighted;\n    }\n/**\n * Returns true if the given option is the highlighted option.\n * @param {?} option\n * @return {?}\n */\nisHighlighted(option: any): boolean {\n        return this.getKey(option) === this.getKey(this.highlighted);\n    }\n/**\n * Set up the options before the dropdown is displayed.\n * @return {?}\n */\ninitOptions() {\n        // Clear previous highlight\n        this._highlighted.next(null);\n        if (this.selectFirst) {\n            // This will highlight the first non-disabled option.\n            this.moveHighlight(1);\n        }\n    }\n/**\n * Update the visibleOptions array with the current filter.\n * @return {?}\n */\nupdateOptions() {\n        if (typeof this.options === 'object') {\n            const /** @type {?} */ normalisedInput = (this.filter || '').toLowerCase();\n            this.visibleOptions = this.options.filter((option) => {\n                return this.getDisplay(option).toLowerCase().indexOf(normalisedInput) >= 0;\n            });\n        }\n\n        this.initOptions();\n    }\n/**\n * Return the index of the given option in the visibleOptions array. Returns -1 if the option is not currently visible.\n * @param {?} option\n * @return {?}\n */\nprivate indexOfVisibleOption(option: any): number {\n        if (option) {\n            const /** @type {?} */ optionKey = this.getKey(option);\n            return this.visibleOptions.findIndex((el) => {\n                return this.getKey(el) === optionKey;\n            });\n        }\n\n        return -1;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-typeahead',\n    template: `\n      <div class=\"ux-typeahead-options\"\n          [uxInfiniteScroll]=\"loadOptionsCallback\"\n          [(collection)]=\"visibleOptions\"\n          [enabled]=\"isInfiniteScroll()\"\n          [filter]=\"filter\"\n          [loadOnScroll]=\"true\"\n          [pageSize]=\"pageSize\"\n          [scrollElement]=\"typeaheadElement\"\n          (loading)=\"loading = true\"\n          (loaded)=\"loading = false\">\n\n          <ol *ngIf=\"visibleOptions.length > 0\">\n              <li *ngFor=\"let option of visibleOptions; let i = index\"\n                  [class.disabled]=\"isDisabled(option)\"\n                  [class.highlighted]=\"isHighlighted(option)\"\n                  [uxScrollIntoViewIf]=\"isHighlighted(option)\"\n                  [scrollParent]=\"typeaheadElement.nativeElement\"\n                  (mousedown)=\"optionMousedownHandler($event)\"\n                  (click)=\"optionClickHandler($event, option)\"\n                  (mouseover)=\"highlight(option)\">\n\n                  <ng-container [ngTemplateOutlet]=\"optionTemplate\"\n                      [ngTemplateOutletContext]=\"{option: option, api: optionApi}\">\n                  </ng-container>\n\n              </li>\n          </ol>\n\n          <div *uxInfiniteScrollLoading>\n              <ng-container [ngTemplateOutlet]=\"loadingTemplate\">\n              </ng-container>\n          </div>\n\n      </div>\n      <div *ngIf=\"visibleOptions.length === 0 && !loading\">\n          <ng-container [ngTemplateOutlet]=\"noOptionsTemplate\">\n          </ng-container>\n      </div>\n\n      <ng-template #defaultLoadingTemplate>\n          <div class=\"ux-typeahead-loading\">\n              <div class=\"spinner spinner-accent spinner-bounce-middle\"></div>\n              <div>Loading...</div>\n          </div>\n      </ng-template>\n\n      <ng-template #defaultOptionTemplate let-option=\"option\" let-api=\"api\">\n          <span class=\"ux-typeahead-option\" [innerHtml]=\"api.getDisplayHtml(option)\"></span>\n      </ng-template>\n\n      <ng-template #defaultNoOptionsTemplate>\n          <span class=\"ux-typeahead-no-options\">No results</span>\n      </ng-template>\n    `,\n    host: {\n        '[class.open]': 'open',\n        '[class.drop-up]': 'dropDirection === \"up\"',\n        '[style.maxHeight]': 'maxHeight'\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: ChangeDetectorRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'options': [{ type: Input },],\n'filter': [{ type: Input },],\n'open': [{ type: Input, args: ['open', ] },],\n'openChange': [{ type: Output },],\n'display': [{ type: Input },],\n'key': [{ type: Input },],\n'disabledOptions': [{ type: Input },],\n'dropDirection': [{ type: Input },],\n'maxHeight': [{ type: Input },],\n'openOnFilterChange': [{ type: Input },],\n'pageSize': [{ type: Input },],\n'selectFirst': [{ type: Input },],\n'loadingTemplate': [{ type: Input },],\n'optionTemplate': [{ type: Input },],\n'noOptionsTemplate': [{ type: Input },],\n'optionSelected': [{ type: Output },],\n'highlighted': [{ type: Output },],\n'_defaultLoadingTemplate': [{ type: ViewChild, args: ['defaultLoadingTemplate', ] },],\n'_defaultOptionTemplate': [{ type: ViewChild, args: ['defaultOptionTemplate', ] },],\n'_defaultNoOptionsTemplate': [{ type: ViewChild, args: ['defaultNoOptionsTemplate', ] },],\n'mousedownHandler': [{ type: HostListener, args: ['mousedown', ] },],\n'mouseupHandler': [{ type: HostListener, args: ['mouseup', ] },],\n};\n}\n\nfunction TypeaheadComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nTypeaheadComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTypeaheadComponent.ctorParameters;\n/** @type {?} */\nTypeaheadComponent.propDecorators;\n/** @type {?} */\nTypeaheadComponent.prototype.options;\n/** @type {?} */\nTypeaheadComponent.prototype.filter;\n/** @type {?} */\nTypeaheadComponent.prototype._open;\n/** @type {?} */\nTypeaheadComponent.prototype.openChange;\n/** @type {?} */\nTypeaheadComponent.prototype.display;\n/** @type {?} */\nTypeaheadComponent.prototype.key;\n/** @type {?} */\nTypeaheadComponent.prototype.disabledOptions;\n/** @type {?} */\nTypeaheadComponent.prototype.dropDirection;\n/** @type {?} */\nTypeaheadComponent.prototype.maxHeight;\n/** @type {?} */\nTypeaheadComponent.prototype.openOnFilterChange;\n/** @type {?} */\nTypeaheadComponent.prototype.pageSize;\n/** @type {?} */\nTypeaheadComponent.prototype.selectFirst;\n/** @type {?} */\nTypeaheadComponent.prototype.loadingTemplate;\n/** @type {?} */\nTypeaheadComponent.prototype.optionTemplate;\n/** @type {?} */\nTypeaheadComponent.prototype.noOptionsTemplate;\n/** @type {?} */\nTypeaheadComponent.prototype.optionSelected;\n/** @type {?} */\nTypeaheadComponent.prototype._highlighted;\n/** @type {?} */\nTypeaheadComponent.prototype._defaultLoadingTemplate;\n/** @type {?} */\nTypeaheadComponent.prototype._defaultOptionTemplate;\n/** @type {?} */\nTypeaheadComponent.prototype._defaultNoOptionsTemplate;\n/** @type {?} */\nTypeaheadComponent.prototype.loadOptionsCallback;\n/** @type {?} */\nTypeaheadComponent.prototype.visibleOptions;\n/** @type {?} */\nTypeaheadComponent.prototype.loading;\n/** @type {?} */\nTypeaheadComponent.prototype.clicking;\n/** @type {?} */\nTypeaheadComponent.prototype.optionApi;\n/** @type {?} */\nTypeaheadComponent.prototype.typeaheadElement;\n/** @type {?} */\nTypeaheadComponent.prototype.cdRef;\n}\n\n\n/**\n * The API available to option templates.\n */\nexport interface TypeaheadOptionApi {\n\n    /**\n     * Returns the unique key value of the given option.\n     */\n    getKey(option: any): string;\n\n    /**\n     * Returns the display value of the given option.\n     */\n    getDisplay(option: any): string;\n\n    /**\n     * Returns the display value of the given option with HTML markup added to highlight the part which matches the current filter value. Override the ux-filter-match class in CSS to modify the default appearance.\n     */\n    getDisplayHtml(option: any): string;\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ElementRef, Input, Output, Renderer2, TemplateRef, ViewContainerRef } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { Subject } from 'rxjs/Subject';\nexport class InfiniteScrollLoadButtonDirective {\n/**\n * @return {?}\n */\nget visible() {\n        return this._visible;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset visible(value: boolean) {\n        if (value !== this._visible) {\n            if (value) {\n                this._viewContainer.createEmbeddedView(this._template);\n\n                // Template content follows the elementRef, which is a comment.\n                const /** @type {?} */ clickTarget = this.getNextElementSibling(this._template.elementRef.nativeElement);\n                this._renderer.listen(clickTarget, 'click', this.onClick.bind(this));\n            } else {\n                this._viewContainer.clear();\n            }\n        }\n\n        this._visible = value;\n    }\n\n     load: Observable<Event>;\nprivate _visible: boolean = false;\nprivate _load = new Subject();\n/**\n * @param {?} _element\n * @param {?} _template\n * @param {?} _viewContainer\n * @param {?} _renderer\n */\nconstructor(\nprivate _element: ElementRef,\nprivate _template: TemplateRef<any>,\nprivate _viewContainer: ViewContainerRef,\nprivate _renderer: Renderer2) {\n\n        this.load = this._load.asObservable() as Observable<Event>;\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nprivate onClick(event: MouseEvent) {\n        this._load.next(event);\n    }\n/**\n * @param {?} element\n * @return {?}\n */\nprivate getNextElementSibling(element: any): Element {\n        var /** @type {?} */ next = element;\n        while (next = next.nextSibling) {\n            if (next.nodeType === 1) {\n                return next;\n            }\n        }\n        return null;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: '[uxInfiniteScrollLoadButton]'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: TemplateRef, },\n{type: ViewContainerRef, },\n{type: Renderer2, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'visible': [{ type: Input, args: ['uxInfiniteScrollLoadButton', ] },],\n'load': [{ type: Output },],\n};\n}\n\nfunction InfiniteScrollLoadButtonDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nInfiniteScrollLoadButtonDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nInfiniteScrollLoadButtonDirective.ctorParameters;\n/** @type {?} */\nInfiniteScrollLoadButtonDirective.propDecorators;\n/** @type {?} */\nInfiniteScrollLoadButtonDirective.prototype.load;\n/** @type {?} */\nInfiniteScrollLoadButtonDirective.prototype._visible;\n/** @type {?} */\nInfiniteScrollLoadButtonDirective.prototype._load;\n/** @type {?} */\nInfiniteScrollLoadButtonDirective.prototype._element;\n/** @type {?} */\nInfiniteScrollLoadButtonDirective.prototype._template;\n/** @type {?} */\nInfiniteScrollLoadButtonDirective.prototype._viewContainer;\n/** @type {?} */\nInfiniteScrollLoadButtonDirective.prototype._renderer;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, Input, TemplateRef, ViewContainerRef } from '@angular/core';\nexport class InfiniteScrollLoadingDirective {\n/**\n * @return {?}\n */\nget visible() {\n        return this._visible;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset visible(value: boolean) {\n        if (value !== this._visible) {\n            if (value) {\n                this._viewContainer.createEmbeddedView(this._templateRef);\n            } else {\n                this._viewContainer.clear();\n            }\n        }\n        \n        this._visible = value;\n    }\nprivate _visible: boolean = false;\n/**\n * @param {?} _templateRef\n * @param {?} _viewContainer\n */\nconstructor(\nprivate _templateRef: TemplateRef<any>,\nprivate _viewContainer: ViewContainerRef) { }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: '[uxInfiniteScrollLoading]'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: TemplateRef, },\n{type: ViewContainerRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'visible': [{ type: Input, args: ['uxInfiniteScrollLoading', ] },],\n};\n}\n\nfunction InfiniteScrollLoadingDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nInfiniteScrollLoadingDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nInfiniteScrollLoadingDirective.ctorParameters;\n/** @type {?} */\nInfiniteScrollLoadingDirective.propDecorators;\n/** @type {?} */\nInfiniteScrollLoadingDirective.prototype._visible;\n/** @type {?} */\nInfiniteScrollLoadingDirective.prototype._templateRef;\n/** @type {?} */\nInfiniteScrollLoadingDirective.prototype._viewContainer;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { AfterContentInit, ContentChildren, Directive, ElementRef, EventEmitter, Input, OnChanges, OnDestroy, OnInit, Output, QueryList, SimpleChanges } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { Observable } from 'rxjs/Observable';\nimport { Subject } from 'rxjs/Subject';\nimport { Subscription } from 'rxjs/Subscription';\nimport'rxjs/add/operator/auditTime';\nimport'rxjs/add/operator/combineLatest';\nimport'rxjs/add/operator/first';\nimport'rxjs/add/operator/partition';\nimport { from } from 'rxjs/observable/from';\nimport { fromEvent } from 'rxjs/observable/fromEvent';\nimport { of } from 'rxjs/observable/of';\nimport { InfiniteScrollLoadButtonDirective } from './infinite-scroll-load-button.directive';\nimport { InfiniteScrollLoadingDirective } from './infinite-scroll-loading.directive';\nexport class InfiniteScrollDirective implements OnInit, AfterContentInit, OnChanges, OnDestroy {\n\n     load: InfiniteScrollLoadFunction;\n\n     _collection: any[] = [];\n/**\n * @return {?}\n */\nget collection() {\n        return this._collection;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset collection(value: any[]) {\n        this.collectionChange.emit(value);\n        this._collection = value;\n    }\n/**\n * @param {?} element\n * @return {?}\n */\nset scrollElement(element: ElementRef | HTMLElement) {\n        this._scrollElement = element instanceof ElementRef ? element : new ElementRef(element);\n    }\n\n     enabled: boolean = true;\n     filter: any;\n     loadOnInit: boolean = true;\n     loadOnScroll: boolean = true;\n     pageSize: number = 20;\n\n     collectionChange = new EventEmitter<any[]>();\n\n    \n    loadingEvent = new EventEmitter<InfiniteScrollLoadingEvent>();\n\n    \n    loadedEvent = new EventEmitter<InfiniteScrollLoadedEvent>();\n\n    \n    loadErrorEvent = new EventEmitter<InfiniteScrollLoadErrorEvent>();\nprivate _loadButtonQuery: QueryList<InfiniteScrollLoadButtonDirective>;\nprivate _loadingIndicatorQuery: QueryList<InfiniteScrollLoadingDirective>;\nprivate _pages: any[][];\nprivate _nextPageNum = 0;\nprivate _domObserver: MutationObserver;\nprivate _scrollEventSub: Subscription;\nprivate _updateRequests = new Subject<InfiniteScrollRequest>();\nprivate _isLoading = new BehaviorSubject<boolean>(false);\nprivate _isExhausted = new BehaviorSubject<boolean>(false);\nprivate _loadButtonEnabled = new BehaviorSubject<boolean>(false);\nprivate _canLoadManually: Observable<boolean>;\nprivate _scrollElement: ElementRef;\nprivate _subscriptions: Subscription[] = [];\nprivate _loadButtonSubscriptions: Subscription[] = [];\n/**\n * @param {?} _element\n */\nconstructor(private _element: ElementRef) {\n        this._canLoadManually = this._isLoading.combineLatest(\n            this._isExhausted,\n            this._loadButtonEnabled,\n            (isLoading, isExhausted, loadButtonEnabled) => {\n                return !isLoading && !isExhausted && loadButtonEnabled;\n            }\n        );\n    }\n/**\n * @return {?}\n */\nngOnInit() {\n        if (!this._scrollElement) {\n            this._scrollElement = this._element;\n        }\n\n        this._loadButtonEnabled.next(!this.loadOnScroll);\n    }\n/**\n * @return {?}\n */\nngAfterContentInit() {\n\n        // There are two kinds of update requests: check and load.\n        // Check requests are throttled and will only cause an update if more data is required\n        // to fill the scrolling view, and it isn't already loading some.\n        // Load requests are not throttled and always request a page of data.\n        const /** @type {?} */ requests = this._updateRequests.partition(r => r.check);\n        requests[0].auditTime(200).subscribe(this.doRequest.bind(this));\n        requests[1].subscribe(this.doRequest.bind(this));\n\n        if (this.enabled) {\n            // Subscribe to scroll events and DOM changes.\n            this.attachEventHandlers();\n        }\n\n        // Connect the Load More button visible state.\n        this._canLoadManually.subscribe(canLoad => {\n            this._loadButtonQuery.forEach(loadButton => {\n                loadButton.visible = canLoad;\n            });\n        });\n\n        // Connect the loading indicator visible state.\n        this._isLoading.subscribe(isLoading => {\n            this._loadingIndicatorQuery.forEach(loading => {\n                loading.visible = isLoading;\n            });\n        });\n\n        // Link the Load More button click event to trigger an update.\n        this.attachLoadButtonEvents();\n        this._loadButtonQuery.changes.subscribe(query => {\n            this.attachLoadButtonEvents();\n        });\n\n        // Initial update.\n        if (this.loadOnInit) {\n            this.loadNextPage();\n        }\n    }\n/**\n * @param {?} changes\n * @return {?}\n */\nngOnChanges(changes: SimpleChanges) {\n        let /** @type {?} */ check = true;\n\n        if (changes.enabled && changes.enabled.currentValue !== changes.enabled.previousValue) {\n            if (changes.enabled.currentValue) {\n                this.attachEventHandlers();\n                this.reset();\n                check = false;\n            } else {\n                this.detachEventHandlers();\n            }\n        }\n\n        if (this.enabled) {\n            if (changes.filter && changes.filter.currentValue !== changes.filter.previousValue) {\n                this.reset();\n                check = false;\n            }\n\n            if (changes.loadOnScroll) {\n                this._loadButtonEnabled.next(\n                    !changes.loadOnScroll.currentValue\n                );\n            }\n\n            if (changes.pageSize && changes.pageSize.currentValue !== changes.pageSize.previousValue) {\n                this.reset();\n                check = false;\n            }\n\n            this._updateRequests.next({\n                check: check,\n                pageNumber: this._nextPageNum,\n                pageSize: this.pageSize,\n                filter: this.filter\n            });\n        }\n    }\n/**\n * @return {?}\n */\nngOnDestroy() {\n        this.detachEventHandlers();\n    }\n/**\n * Request an additional page of data.\n * @return {?}\n */\nloadNextPage() {\n        if (!this.enabled) {\n            return;\n        }\n\n        this._updateRequests.next({\n            check: false,\n            pageNumber: this._nextPageNum,\n            pageSize: this.pageSize,\n            filter: this.filter\n        });\n    }\n/**\n * Request a check for whether an additional page of data is required. This is throttled.\n * @return {?}\n */\ncheck() {\n        if (!this.enabled) {\n            return;\n        }\n\n        this._updateRequests.next({\n            check: true,\n            pageNumber: this._nextPageNum,\n            pageSize: this.pageSize,\n            filter: this.filter\n        });\n    }\n/**\n * Clear the collection. Future requests will load from page 0.\n * @return {?}\n */\nreset() {\n        if (!this.enabled) {\n            return;\n        }\n\n        // Reset the page counter.\n        this._nextPageNum = 0;\n\n        this._pages = [];\n\n        // Clear the collection (without changing the reference).\n        if (this.collection) {\n            this.collection.length = 0;\n        }\n\n        // Reset the exhausted flag, allowing the Load More button to appear.\n        this._isExhausted.next(false);\n\n        // Cancel any pending requests\n        if (this._subscriptions) {\n            this._subscriptions.forEach(request => request.unsubscribe());\n        }\n    }\n/**\n * Reload the data without clearing the view.\n * @return {?}\n */\nreload() {\n        this._pages.forEach((page, i) => this.reloadPage(i));\n    }\n/**\n * Reload the data in a specific page without clearing the view.\n * @param {?} pageNum Page number\n * @return {?}\n */\nreloadPage(pageNum: number) {\n        if (!this.enabled) {\n            return;\n        }\n\n        this._updateRequests.next({\n            check: false,\n            pageNumber: pageNum,\n            pageSize: this.pageSize,\n            filter: this.filter,\n            reload: true\n        });\n    }\n/**\n * Attach scroll event handler and DOM observer.\n * @return {?}\n */\nprivate attachEventHandlers() {\n\n        // if the scrollElement is documentElement we must watch for a scroll event on the document\n        const /** @type {?} */ target = this._scrollElement.nativeElement instanceof HTMLHtmlElement ? document : this._scrollElement.nativeElement;\n\n        // Subscribe to the scroll event on the target element.\n        this._scrollEventSub = fromEvent(target, 'scroll').subscribe(this.check.bind(this));\n\n        // Subscribe to child DOM changes. The main effect of this is to check whether even more data is\n        // required after the initial load.\n        this._domObserver = new MutationObserver(this.check.bind(this));\n        this._domObserver.observe(this._scrollElement.nativeElement, {\n            childList: true,\n            subtree: true\n        });\n    }\n/**\n * Detach scroll event handler and DOM observer.\n * @return {?}\n */\nprivate detachEventHandlers() {\n        if (this._scrollEventSub) {\n            this._scrollEventSub.unsubscribe();\n            this._scrollEventSub = null;\n        }\n\n        if (this._domObserver) {\n            this._domObserver.disconnect();\n            this._domObserver = null;\n        }\n    }\n/**\n * Remove any existing event subscriptions for the load button `load` event, then attach subscriptions\n * for any in the query.\n * @return {?}\n */\nprivate attachLoadButtonEvents() {\n        this._loadButtonSubscriptions.forEach(s => s.unsubscribe());\n        this._loadButtonSubscriptions = this._loadButtonQuery.map(\n            loadButton => loadButton.load.subscribe(this.loadNextPage.bind(this))\n        );\n    }\n/**\n * Conditionally loads a page into the collection based on directive state and request parameters.\n * @param {?} request\n * @return {?}\n */\nprivate doRequest(request: InfiniteScrollRequest) {\n\n        // Load a new page if the scroll position is beyond the threshhold and if the client code did not\n        // cancel.\n        if (this.needsData(request) && this.beginLoading(request)) {\n\n            // Invoke the callback load function, which returns a promose or plain data.\n            const /** @type {?} */ loadResult = this.load(request.pageNumber, request.pageSize, request.filter);\n\n            const /** @type {?} */ observable = Array.isArray(loadResult)\n                ? of(loadResult)\n                : from<any[]>(loadResult);\n\n            const /** @type {?} */ subscription = observable.first().subscribe(\n                items => {\n                    // Make sure that the parameters have not changed since the load started;\n                    // otherwise discard the results.\n                    if (request.filter === this.filter && request.pageSize === this.pageSize) {\n                        if (items && items.length) {\n                            this.setPageItems(request.pageNumber, items);\n                        }\n\n                        // Emit the loaded event\n                        this.endLoading(request, items);\n                    }\n                },\n                reason => {\n                    // Emit the loadError event\n                    this.endLoadingWithError(request, reason);\n                },\n                () => {\n                    // remove this request from the list\n                    this._subscriptions = this._subscriptions.filter(s => s !== subscription);\n                }\n            );\n\n            // add the subscription to the list of requests\n            this._subscriptions.push(subscription);\n        }\n    }\n/**\n * Returns true if the request should be fulfilled.\n * @param {?} request\n * @return {?}\n */\nprivate needsData(request: InfiniteScrollRequest): boolean {\n        if (!this.enabled) {\n            return false;\n        }\n\n        // Always load for a load request\n        if (!request.check) {\n            return true;\n        }\n\n        // Ignore a check request when the end of data has been detected, or if data is currently loading.\n        if (this._isExhausted.getValue() || this._isLoading.getValue()) {\n            return false;\n        }\n\n        // Load if the remaining scroll area is <= the element height.\n        if (this._scrollElement && this.loadOnScroll) {\n\n            const /** @type {?} */ element = /** @type {?} */(( <HTMLElement>this._scrollElement.nativeElement));\n            const /** @type {?} */ remainingScroll =\n                element.scrollHeight -\n                (element.scrollTop + element.clientHeight);\n\n            return remainingScroll <= element.clientHeight;\n        }\n\n        return false;\n    }\n/**\n * Updates state for the beginning of a load. Returns false if the `loading` event was cancelled.\n * @param {?} request\n * @return {?}\n */\nprivate beginLoading(request: InfiniteScrollRequest): boolean {\n\n        const /** @type {?} */ event = new InfiniteScrollLoadingEvent(\n            request.pageNumber,\n            request.pageSize,\n            request.filter\n        );\n        this.loadingEvent.emit(event);\n\n        this._isLoading.next(!event.defaultPrevented());\n\n        return !event.defaultPrevented();\n    }\n/**\n * @param {?} pageNum\n * @param {?} items\n * @return {?}\n */\nprivate setPageItems(pageNum: number, items: any[]) {\n        this._pages[pageNum] = items;\n        this.collection = this._pages.reduce((previous, current) => previous.concat(current), []);\n    }\n/**\n * Updates state from a successful load. Raises the `loaded` event.\n * @param {?} request\n * @param {?=} data\n * @return {?}\n */\nprivate endLoading(request: InfiniteScrollRequest, data?: any) {\n        this._isLoading.next(false);\n\n        const /** @type {?} */ isExhausted = !!(data && data.length < this.pageSize);\n        this._isExhausted.next(isExhausted);\n\n        this.loadedEvent.emit(\n            new InfiniteScrollLoadedEvent(\n                request.pageNumber,\n                request.pageSize,\n                request.filter,\n                data,\n                isExhausted\n            )\n        );\n\n        if (!request.reload) {\n            this._nextPageNum += 1;\n        }\n    }\n/**\n * Updates state from a failed load. Raises the `loadError` event.\n * @param {?} request\n * @param {?} error\n * @return {?}\n */\nprivate endLoadingWithError(request: InfiniteScrollRequest, error: any) {\n        this._isLoading.next(false);\n\n        this.loadErrorEvent.emit(\n            new InfiniteScrollLoadErrorEvent(\n                request.pageNumber,\n                request.pageSize,\n                request.filter,\n                error\n            )\n        );\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: '[uxInfiniteScroll]',\n    exportAs: 'uxInfiniteScroll'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'load': [{ type: Input, args: ['uxInfiniteScroll', ] },],\n'_collection': [{ type: Input, args: ['collection', ] },],\n'scrollElement': [{ type: Input },],\n'enabled': [{ type: Input },],\n'filter': [{ type: Input },],\n'loadOnInit': [{ type: Input },],\n'loadOnScroll': [{ type: Input },],\n'pageSize': [{ type: Input },],\n'collectionChange': [{ type: Output },],\n'loadingEvent': [{ type: Output, args: ['loading', ] },],\n'loadedEvent': [{ type: Output, args: ['loaded', ] },],\n'loadErrorEvent': [{ type: Output, args: ['loadError', ] },],\n'_loadButtonQuery': [{ type: ContentChildren, args: [InfiniteScrollLoadButtonDirective, ] },],\n'_loadingIndicatorQuery': [{ type: ContentChildren, args: [InfiniteScrollLoadingDirective, ] },],\n};\n}\n\nfunction InfiniteScrollDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nInfiniteScrollDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nInfiniteScrollDirective.ctorParameters;\n/** @type {?} */\nInfiniteScrollDirective.propDecorators;\n/** @type {?} */\nInfiniteScrollDirective.prototype.load;\n/** @type {?} */\nInfiniteScrollDirective.prototype._collection;\n/** @type {?} */\nInfiniteScrollDirective.prototype.enabled;\n/** @type {?} */\nInfiniteScrollDirective.prototype.filter;\n/** @type {?} */\nInfiniteScrollDirective.prototype.loadOnInit;\n/** @type {?} */\nInfiniteScrollDirective.prototype.loadOnScroll;\n/** @type {?} */\nInfiniteScrollDirective.prototype.pageSize;\n/** @type {?} */\nInfiniteScrollDirective.prototype.collectionChange;\n/** @type {?} */\nInfiniteScrollDirective.prototype.loadingEvent;\n/** @type {?} */\nInfiniteScrollDirective.prototype.loadedEvent;\n/** @type {?} */\nInfiniteScrollDirective.prototype.loadErrorEvent;\n/** @type {?} */\nInfiniteScrollDirective.prototype._loadButtonQuery;\n/** @type {?} */\nInfiniteScrollDirective.prototype._loadingIndicatorQuery;\n/** @type {?} */\nInfiniteScrollDirective.prototype._pages;\n/** @type {?} */\nInfiniteScrollDirective.prototype._nextPageNum;\n/** @type {?} */\nInfiniteScrollDirective.prototype._domObserver;\n/** @type {?} */\nInfiniteScrollDirective.prototype._scrollEventSub;\n/** @type {?} */\nInfiniteScrollDirective.prototype._updateRequests;\n/** @type {?} */\nInfiniteScrollDirective.prototype._isLoading;\n/** @type {?} */\nInfiniteScrollDirective.prototype._isExhausted;\n/** @type {?} */\nInfiniteScrollDirective.prototype._loadButtonEnabled;\n/** @type {?} */\nInfiniteScrollDirective.prototype._canLoadManually;\n/** @type {?} */\nInfiniteScrollDirective.prototype._scrollElement;\n/** @type {?} */\nInfiniteScrollDirective.prototype._subscriptions;\n/** @type {?} */\nInfiniteScrollDirective.prototype._loadButtonSubscriptions;\n/** @type {?} */\nInfiniteScrollDirective.prototype._element;\n}\n\n/**\n * The internal data associated with a load/check request.\n */\nclass InfiniteScrollRequest {\n    check: boolean;\n    pageNumber: number;\n    pageSize: number;\n    filter: any;\n    reload?: boolean;\n}\n\nfunction InfiniteScrollRequest_tsickle_Closure_declarations() {\n/** @type {?} */\nInfiniteScrollRequest.prototype.check;\n/** @type {?} */\nInfiniteScrollRequest.prototype.pageNumber;\n/** @type {?} */\nInfiniteScrollRequest.prototype.pageSize;\n/** @type {?} */\nInfiniteScrollRequest.prototype.filter;\n/** @type {?} */\nInfiniteScrollRequest.prototype.reload;\n}\n\n\nexport type InfiniteScrollLoadFunction = (\n    pageNum: number,\n    pageSize: number,\n    filter: any\n) => any | Promise<any>;\n/**\n * Event raised before the `loading` function is called.\n */\nexport class InfiniteScrollLoadingEvent {\nprivate _defaultPrevented = false;\n/**\n * @param {?} pageNumber\n * @param {?} pageSize\n * @param {?} filter\n */\nconstructor(\npublic pageNumber: number,\npublic pageSize: number,\npublic filter: any\n    ) { }\n/**\n * Prevents the default behaviour of the `loading` event (loading function will not be called).\n * @return {?}\n */\npreventDefault() {\n        this._defaultPrevented = true;\n    }\n/**\n * @return {?}\n */\ndefaultPrevented(): boolean {\n        return this._defaultPrevented;\n    }\n}\n\nfunction InfiniteScrollLoadingEvent_tsickle_Closure_declarations() {\n/** @type {?} */\nInfiniteScrollLoadingEvent.prototype._defaultPrevented;\n/**\n * The index of the requested page, starting from 0.\n * @type {?}\n */\nInfiniteScrollLoadingEvent.prototype.pageNumber;\n/**\n * The number of items requested.\n * @type {?}\n */\nInfiniteScrollLoadingEvent.prototype.pageSize;\n/**\n * The filter details as provided via the `filter` binding.\n * @type {?}\n */\nInfiniteScrollLoadingEvent.prototype.filter;\n}\n\n/**\n * Event raised when the loading function result has been resolved and added to the collection.\n */\nexport class InfiniteScrollLoadedEvent {\n/**\n * @param {?} pageNumber\n * @param {?} pageSize\n * @param {?} filter\n * @param {?} data\n * @param {?} exhausted\n */\nconstructor(\npublic pageNumber: number,\npublic pageSize: number,\npublic filter: any,\npublic data: any,\npublic exhausted: boolean\n    ) { }\n}\n\nfunction InfiniteScrollLoadedEvent_tsickle_Closure_declarations() {\n/**\n * The index of the requested page, starting from 0.\n * @type {?}\n */\nInfiniteScrollLoadedEvent.prototype.pageNumber;\n/**\n * The number of items requested.\n * @type {?}\n */\nInfiniteScrollLoadedEvent.prototype.pageSize;\n/**\n * The filter details as provided via the `filter` binding.\n * @type {?}\n */\nInfiniteScrollLoadedEvent.prototype.filter;\n/**\n * The result of the promise returned from the loading function.\n * @type {?}\n */\nInfiniteScrollLoadedEvent.prototype.data;\n/**\n * True if the data is considered exhausted (number of items returned less than `pageSize`).\n * @type {?}\n */\nInfiniteScrollLoadedEvent.prototype.exhausted;\n}\n\n/**\n * Event raised if the loading function returns a rejected promise.\n */\nexport class InfiniteScrollLoadErrorEvent {\n/**\n * @param {?} pageNumber\n * @param {?} pageSize\n * @param {?} filter\n * @param {?} error\n */\nconstructor(\npublic pageNumber: number,\npublic pageSize: number,\npublic filter: any,\npublic error: any\n    ) { }\n}\n\nfunction InfiniteScrollLoadErrorEvent_tsickle_Closure_declarations() {\n/**\n * The index of the requested page, starting from 0.\n * @type {?}\n */\nInfiniteScrollLoadErrorEvent.prototype.pageNumber;\n/**\n * The number of items requested.\n * @type {?}\n */\nInfiniteScrollLoadErrorEvent.prototype.pageSize;\n/**\n * The filter details as provided via the `filter` binding.\n * @type {?}\n */\nInfiniteScrollLoadErrorEvent.prototype.filter;\n/**\n * The object provided when rejecting the promise.\n * @type {?}\n */\nInfiniteScrollLoadErrorEvent.prototype.error;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { InfiniteScrollLoadButtonDirective } from './infinite-scroll-load-button.directive';\nimport { InfiniteScrollLoadingDirective } from './infinite-scroll-loading.directive';\nimport { InfiniteScrollDirective } from './infinite-scroll.directive';\nimport { NgModule } from '@angular/core';\nexport class InfiniteScrollModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [],\n    exports: [\n        InfiniteScrollDirective,\n        InfiniteScrollLoadButtonDirective,\n        InfiniteScrollLoadingDirective\n    ],\n    declarations: [\n        InfiniteScrollDirective,\n        InfiniteScrollLoadButtonDirective,\n        InfiniteScrollLoadingDirective\n    ],\n    providers: [],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction InfiniteScrollModule_tsickle_Closure_declarations() {\n/** @type {?} */\nInfiniteScrollModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nInfiniteScrollModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable, Inject } from '@angular/core';\nexport class ScrollIntoViewService {\n/**\n * @param {?} elem\n * @param {?} scrollParent\n * @return {?}\n */\nscrollIntoView(elem: HTMLElement, scrollParent: HTMLElement) {\n        const /** @type {?} */ offsetTop = (elem.getBoundingClientRect().top + scrollParent.scrollTop) - scrollParent.getBoundingClientRect().top;\n        if (offsetTop < scrollParent.scrollTop) {\n            scrollParent.scrollTop = offsetTop;\n        } else {\n            const /** @type {?} */ offsetBottom = offsetTop + elem.offsetHeight;\n            if (offsetBottom > (scrollParent.scrollTop + scrollParent.clientHeight)) {\n                scrollParent.scrollTop = offsetBottom - scrollParent.clientHeight;\n            }\n        }\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ScrollIntoViewService_tsickle_Closure_declarations() {\n/** @type {?} */\nScrollIntoViewService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nScrollIntoViewService.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { ScrollIntoViewService } from './scroll-into-view.service';\nimport { Directive, ElementRef, Input, OnChanges, SimpleChanges } from '@angular/core';\nexport class ScrollIntoViewIfDirective implements OnChanges {\n\n     condition = false;\n     scrollParent: HTMLElement;\n/**\n * @param {?} element\n * @param {?} scrollIntoViewService\n */\nconstructor(private element: ElementRef,\nprivate scrollIntoViewService: ScrollIntoViewService) {}\n/**\n * @param {?} changes\n * @return {?}\n */\nngOnChanges(changes: SimpleChanges) {\n        if (this.condition) {\n            setTimeout(() => {\n                this.scrollIntoViewService.scrollIntoView(this.element.nativeElement, this.scrollParent);\n            });\n        }\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{ selector: '[uxScrollIntoViewIf]' }, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: ScrollIntoViewService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'condition': [{ type: Input, args: ['uxScrollIntoViewIf', ] },],\n'scrollParent': [{ type: Input },],\n};\n}\n\nfunction ScrollIntoViewIfDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nScrollIntoViewIfDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nScrollIntoViewIfDirective.ctorParameters;\n/** @type {?} */\nScrollIntoViewIfDirective.propDecorators;\n/** @type {?} */\nScrollIntoViewIfDirective.prototype.condition;\n/** @type {?} */\nScrollIntoViewIfDirective.prototype.scrollParent;\n/** @type {?} */\nScrollIntoViewIfDirective.prototype.element;\n/** @type {?} */\nScrollIntoViewIfDirective.prototype.scrollIntoViewService;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\n\nimport { ScrollIntoViewIfDirective } from './scroll-into-view-if.directive';\nimport { ScrollIntoViewService } from './scroll-into-view.service';\nexport class ScrollIntoViewIfModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [],\n    exports: [ScrollIntoViewIfDirective],\n    declarations: [ScrollIntoViewIfDirective],\n    providers: [ScrollIntoViewService],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ScrollIntoViewIfModule_tsickle_Closure_declarations() {\n/** @type {?} */\nScrollIntoViewIfModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nScrollIntoViewIfModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { InfiniteScrollModule } from '../../directives/infinite-scroll/index';\nimport { ScrollIntoViewIfModule } from '../../directives/scroll-into-view-if/index';\nimport { TypeaheadKeyService } from './typeahead-key.service';\nimport { TypeaheadComponent } from './typeahead.component';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nexport class TypeaheadModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        CommonModule,\n        InfiniteScrollModule,\n        ScrollIntoViewIfModule\n    ],\n    exports: [TypeaheadComponent],\n    declarations: [TypeaheadComponent],\n    providers: [TypeaheadKeyService],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction TypeaheadModule_tsickle_Closure_declarations() {\n/** @type {?} */\nTypeaheadModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTypeaheadModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, ElementRef, EventEmitter, Inject, Input, OnChanges, OnDestroy, OnInit, Output, SimpleChanges, StaticProvider, TemplateRef, ViewChild, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { DOCUMENT } from '@angular/platform-browser';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { Observable } from 'rxjs/Observable';\nimport { Subscription } from 'rxjs/Subscription';\nimport { debounceTime, filter, map } from 'rxjs/operators';\nimport { InfiniteScrollLoadFunction } from '../../directives/infinite-scroll/index';\nimport { TypeaheadComponent, TypeaheadKeyService, TypeaheadOptionEvent } from '../typeahead/index';\n\nexport const /** @type {?} */ SELECT_VALUE_ACCESSOR: StaticProvider = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => SelectComponent),\n    multi: true\n};\nexport class SelectComponent implements OnInit, OnChanges, OnDestroy, ControlValueAccessor {\n/**\n * @return {?}\n */\nget value() {\n        return this._value;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset value(value: any) {\n        this._value = value;\n        this.valueChange.emit(value);\n        this.propagateChange(value);\n\n        // if we are not allow multiple selection update the input value (supporting ngModel)\n        if (!this.multiple && value !== null) {\n            this.input = this.getDisplay(value);\n        }\n    }\n/**\n * @return {?}\n */\nget input() {\n        return this._input$.value;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset input(value: string) {\n        this._input$.next(value);\n        this.inputChange.emit(value);\n    }\n/**\n * @return {?}\n */\nget dropdownOpen() {\n        return this._dropdownOpen;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset dropdownOpen(value: boolean) {\n        this._dropdownOpen = value;\n        this.dropdownOpenChange.emit(value);\n    }\n\n     options: any[] | InfiniteScrollLoadFunction;\n     display: (option: any) => string | string;\n     key: (option: any) => string | string;\n     allowNull: boolean = false;\n     disabled: boolean = false;\n     dropDirection: 'up' | 'down' = 'down';\n     maxHeight: string = '250px';\n     multiple: boolean = false;\n     pageSize: number = 20;\n     placeholder: string;\n\n     loadingTemplate: TemplateRef<any>;\n     noOptionsTemplate: TemplateRef<any>;\n     optionTemplate: TemplateRef<any>;\n\n     valueChange = new EventEmitter<any>();\n     inputChange = new EventEmitter<string>();\n     dropdownOpenChange = new EventEmitter<boolean>();\n\n     singleInput: ElementRef;\n     multipleTypeahead: TypeaheadComponent;\n     singleTypeahead: TypeaheadComponent;\n\n    filter$: Observable<string>;\n    propagateChange = (_: any) => { };\nprivate _value: any;\nprivate _input$ = new BehaviorSubject<string>('');\nprivate _dropdownOpen: boolean = false;\nprivate _subscription = new Subscription();\n/**\n * @param {?} _element\n * @param {?} _document\n * @param {?} _typeaheadKeyService\n */\nconstructor(\nprivate _element: ElementRef,\nprivate _document: Document,\nprivate _typeaheadKeyService: TypeaheadKeyService) { }\n/**\n * @return {?}\n */\nngOnInit() {\n\n        // Changes to the input field\n        const /** @type {?} */ onInput = this._input$.pipe(\n            filter(value => this.allowNull),\n            filter(value => !this.multiple && value !== this.getDisplay(this.value))\n        ).subscribe(value => this.value = null);\n\n        // Set up filter from input\n        this.filter$ = this._input$.pipe(\n            map(input => !this.multiple && input === this.getDisplay(this.value) ? '' : input),\n            debounceTime(200)\n        );\n\n        // Open the dropdown when filter is nonempty.\n        const /** @type {?} */ onFilter = this.filter$.pipe(filter(value => value && value.length > 0)).subscribe(() => this.dropdownOpen = true);\n\n        // store the subscriptions\n        this._subscription.add(onInput);\n        this._subscription.add(onFilter);\n    }\n/**\n * @param {?} changes\n * @return {?}\n */\nngOnChanges(changes: SimpleChanges) {\n        if (changes.multiple && !changes.multiple.firstChange && changes.multiple.currentValue !== changes.multiple.previousValue) {\n            this.input = '';\n        }\n    }\n/**\n * @return {?}\n */\nngOnDestroy(): void {\n        this._subscription.unsubscribe();\n    }\n/**\n * @param {?} obj\n * @return {?}\n */\nwriteValue(obj: any): void {\n        if (obj !== undefined && obj !== this._value) {\n            this.value = obj;\n        }\n    }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnChange(fn: any): void {\n        this.propagateChange = fn;\n    }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnTouched(fn: any): void { }\n/**\n * @param {?} isDisabled\n * @return {?}\n */\nsetDisabledState(isDisabled: boolean): void {\n        this.disabled = isDisabled;\n    }\n/**\n * @param {?} event\n * @return {?}\n */\ninputClickHandler(event: MouseEvent) {\n        this.selectInputText();\n        this.dropdownOpen = true;\n    }\n/**\n * @param {?} event\n * @return {?}\n */\ninputBlurHandler(event: Event) {\n\n        // If a click on the typeahead is in progress, just refocus the input.\n        // This works around an issue in IE where clicking a scrollbar drops focus.\n        if (this.singleTypeahead && this.singleTypeahead.clicking) {\n            this.singleInput.nativeElement.focus();\n            return;\n        }\n\n        // Close dropdown and reset text input if focus is lost\n        setTimeout(() => {\n            if (!this._element.nativeElement.contains(this._document.activeElement)) {\n                this.dropdownOpen = false;\n                if (!this.multiple) {\n                    this.input = this.getDisplay(this.value);\n                }\n            }\n        }, 200);\n    }\n/**\n * Key handler for single select only. Multiple select key handling is in TagInputComponent.\n * @param {?} event\n * @return {?}\n */\ninputKeyHandler(event: KeyboardEvent) {\n\n        // Standard keys for typeahead (up/down/esc)\n        this._typeaheadKeyService.handleKey(event, this.singleTypeahead);\n\n        switch (event.key) {\n            case 'Enter':\n                if (this._dropdownOpen) {\n                    // Set the highlighted option as the value and close\n                    this.value = this.singleTypeahead.highlighted;\n                    this.dropdownOpen = false;\n                }\n\n                // Update the input field. If dropdown isn't open then reset it to the previous value.\n                this.input = this.getDisplay(this.value);\n                event.preventDefault();\n                break;\n        }\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nsingleOptionSelected(event: TypeaheadOptionEvent) {\n        if (event.option) {\n            this.value = event.option;\n            this.dropdownOpen = false;\n        }\n    }\n/**\n * Returns the display value of the given option.\n * @param {?} option\n * @return {?}\n */\ngetDisplay(option: any): string {\n        if (option === null || option === undefined) {\n            return '';\n        }\n        if (typeof this.display === 'function') {\n            return this.display(option);\n        }\n        if (typeof this.display === 'string' && option.hasOwnProperty(this.display)) {\n            return option[ /** @type {?} */((<string>this.display))];\n        }\n        return option;\n    }\n/**\n * @return {?}\n */\nprivate selectInputText() {\n        this.singleInput.nativeElement.select();\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-select',\n    template: `\n      <ux-tag-input *ngIf=\"multiple\"\n          [(tags)]=\"value\"\n          [(input)]=\"input\"\n          [addOnPaste]=\"false\"\n          [disabled]=\"disabled\"\n          [display]=\"display\"\n          [freeInput]=\"false\"\n          [placeholder]=\"placeholder\"\n          [showTypeaheadOnClick]=\"true\">\n\n          <ux-typeahead #multipleTypeahead\n              [options]=\"options\"\n              [filter]=\"filter$ | async\"\n              [(open)]=\"dropdownOpen\"\n              [display]=\"display\"\n              [key]=\"key\"\n              [disabledOptions]=\"value\"\n              [dropDirection]=\"dropDirection\"\n              [maxHeight]=\"maxHeight\"\n              [pageSize]=\"pageSize\"\n              [selectFirst]=\"true\"\n              [loadingTemplate]=\"loadingTemplate\"\n              [optionTemplate]=\"optionTemplate\"\n              [noOptionsTemplate]=\"noOptionsTemplate\">\n          </ux-typeahead>\n\n      </ux-tag-input>\n\n      <div *ngIf=\"!multiple\" class=\"inner-addon right-addon\" [class.disabled]=\"disabled\">\n\n          <i class=\"hpe-icon\"\n              [class.hpe-down]=\"dropDirection === 'down'\"\n              [class.hpe-up]=\"dropDirection === 'up'\"></i>\n\n          <input #singleInput type=\"text\" class=\"form-control\"\n              [(ngModel)]=\"input\"\n              [placeholder]=\"placeholder\"\n              [disabled]=\"disabled\"\n              (click)=\"inputClickHandler($event)\"\n              (blur)=\"inputBlurHandler($event)\"\n              (keydown)=\"inputKeyHandler($event)\">\n\n          <ux-typeahead #singleTypeahead\n              [options]=\"options\"\n              [filter]=\"filter$ | async\"\n              [(open)]=\"dropdownOpen\"\n              [display]=\"display\"\n              [key]=\"key\"\n              [dropDirection]=\"dropDirection\"\n              [maxHeight]=\"maxHeight\"\n              [openOnFilterChange]=\"false\"\n              [pageSize]=\"pageSize\"\n              [selectFirst]=\"true\"\n              [loadingTemplate]=\"loadingTemplate\"\n              [optionTemplate]=\"optionTemplate\"\n              [noOptionsTemplate]=\"noOptionsTemplate\"\n              (optionSelected)=\"singleOptionSelected($event)\">\n          </ux-typeahead>\n\n      </div>\n    `,\n    providers: [SELECT_VALUE_ACCESSOR]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Document, decorators: [{ type: Inject, args: [DOCUMENT, ] }, ]},\n{type: TypeaheadKeyService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'value': [{ type: Input },],\n'input': [{ type: Input },],\n'dropdownOpen': [{ type: Input },],\n'options': [{ type: Input },],\n'display': [{ type: Input },],\n'key': [{ type: Input },],\n'allowNull': [{ type: Input },],\n'disabled': [{ type: Input },],\n'dropDirection': [{ type: Input },],\n'maxHeight': [{ type: Input },],\n'multiple': [{ type: Input },],\n'pageSize': [{ type: Input },],\n'placeholder': [{ type: Input },],\n'loadingTemplate': [{ type: Input },],\n'noOptionsTemplate': [{ type: Input },],\n'optionTemplate': [{ type: Input },],\n'valueChange': [{ type: Output },],\n'inputChange': [{ type: Output },],\n'dropdownOpenChange': [{ type: Output },],\n'singleInput': [{ type: ViewChild, args: ['singleInput', ] },],\n'multipleTypeahead': [{ type: ViewChild, args: ['multipleTypeahead', ] },],\n'singleTypeahead': [{ type: ViewChild, args: ['singleTypeahead', ] },],\n};\n}\n\nfunction SelectComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nSelectComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSelectComponent.ctorParameters;\n/** @type {?} */\nSelectComponent.propDecorators;\n/** @type {?} */\nSelectComponent.prototype.options;\n/** @type {?} */\nSelectComponent.prototype.display;\n/** @type {?} */\nSelectComponent.prototype.key;\n/** @type {?} */\nSelectComponent.prototype.allowNull;\n/** @type {?} */\nSelectComponent.prototype.disabled;\n/** @type {?} */\nSelectComponent.prototype.dropDirection;\n/** @type {?} */\nSelectComponent.prototype.maxHeight;\n/** @type {?} */\nSelectComponent.prototype.multiple;\n/** @type {?} */\nSelectComponent.prototype.pageSize;\n/** @type {?} */\nSelectComponent.prototype.placeholder;\n/** @type {?} */\nSelectComponent.prototype.loadingTemplate;\n/** @type {?} */\nSelectComponent.prototype.noOptionsTemplate;\n/** @type {?} */\nSelectComponent.prototype.optionTemplate;\n/** @type {?} */\nSelectComponent.prototype.valueChange;\n/** @type {?} */\nSelectComponent.prototype.inputChange;\n/** @type {?} */\nSelectComponent.prototype.dropdownOpenChange;\n/** @type {?} */\nSelectComponent.prototype.singleInput;\n/** @type {?} */\nSelectComponent.prototype.multipleTypeahead;\n/** @type {?} */\nSelectComponent.prototype.singleTypeahead;\n/** @type {?} */\nSelectComponent.prototype.filter$;\n/** @type {?} */\nSelectComponent.prototype.propagateChange;\n/** @type {?} */\nSelectComponent.prototype._value;\n/** @type {?} */\nSelectComponent.prototype._input$;\n/** @type {?} */\nSelectComponent.prototype._dropdownOpen;\n/** @type {?} */\nSelectComponent.prototype._subscription;\n/** @type {?} */\nSelectComponent.prototype._element;\n/** @type {?} */\nSelectComponent.prototype._document;\n/** @type {?} */\nSelectComponent.prototype._typeaheadKeyService;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","\nexport class TagInputEvent {\nprivate _defaultPrevented = false;\n/**\n * @param {?} tag\n */\nconstructor(public tag: any) {}\n/**\n * @return {?}\n */\npreventDefault() {\n        this._defaultPrevented = true;\n    }\n/**\n * @return {?}\n */\ndefaultPrevented(): boolean {\n        return this._defaultPrevented;\n    }\n}\n\nfunction TagInputEvent_tsickle_Closure_declarations() {\n/** @type {?} */\nTagInputEvent.prototype._defaultPrevented;\n/** @type {?} */\nTagInputEvent.prototype.tag;\n}\n","import { AfterContentInit, Component, ContentChildren, ElementRef, EventEmitter, HostListener, Inject, Input, OnChanges, OnDestroy, OnInit, Output, QueryList, SimpleChanges, TemplateRef, ViewChild, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALIDATORS, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { DOCUMENT } from '@angular/platform-browser';\nimport { Subscription } from 'rxjs/Subscription';\nimport { TypeaheadComponent, TypeaheadKeyService } from '../typeahead/index';\nimport { TypeaheadOptionEvent } from '../typeahead/typeahead-event';\nimport { TagInputEvent } from './tag-input-event';\n\n\nconst /** @type {?} */ TAGINPUT_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => TagInputComponent),\n    multi: true\n};\nconst /** @type {?} */ TAGINPUT_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => TagInputComponent),\n    multi: true\n};\nexport class TagInputComponent implements OnInit, AfterContentInit, OnChanges, ControlValueAccessor, OnDestroy {\nprivate _tags: any[] = [];\n/**\n * @return {?}\n */\nget tags() {\n        if (!this._tags) {\n            this._tags = [];\n        }\n        return this._tags;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset tags(value: any[]) {\n        this._tags = value;\n        this._onChangeHandler(this._tags);\n        this.tagsChange.emit(this._tags);\n    }\n\n     tagsChange = new EventEmitter<any[]>();\nprivate _input: string = '';\n/**\n * @return {?}\n */\nget input() {\n        return this._input;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset input(value: string) {\n        this._input = value;\n        this.inputChange.emit(value);\n    }\n\n     inputChange = new EventEmitter<string>();\n\n     display: (option: any) => string | string;\n     addOnPaste: boolean = true;\n     disabled: boolean = false;\n     enforceTagLimits: boolean = false;\n     freeInput: boolean = true;\n     maxTags: number = Number.MAX_VALUE;\n     minTags: number = 0;\n     placeholder: string = '';\n     showTypeaheadOnClick: boolean = false;\n     tagDelimiters: string = '';\n     tagPattern: RegExp;\n     tagTemplate: TemplateRef<any>;\n     tagClass: TagClassFunction = () => undefined;\n     validationErrors: any = {};\n     createTagHandler: (value: string) => any;\n\n     tagAdding = new EventEmitter<TagInputEvent>();\n     tagAdded = new EventEmitter<TagInputEvent>();\n     tagInvalidated = new EventEmitter<TagInputEvent>();\n     tagRemoving = new EventEmitter<TagInputEvent>();\n     tagRemoved = new EventEmitter<TagInputEvent>();\n     tagClick = new EventEmitter<TagInputEvent>();\n\n     typeaheadQuery: QueryList<TypeaheadComponent>;\n\n     tagInput: ElementRef;\nprivate _defaultTagTemplate: TemplateRef<any>;\n\n    selectedIndex: number = -1;\n\n    tagApi: TagApi = {\n        getTagDisplay: this.getTagDisplay.bind(this),\n        removeTagAt: this.removeTagAt.bind(this),\n        canRemoveTagAt: this.canRemoveTagAt.bind(this)\n    };\n\n    valid: boolean = true;\n    inputValid: boolean = true;\n\n    typeahead: TypeaheadComponent;\nprivate _onChangeHandler: (_: any) => void = () => { };\nprivate _onTouchedHandler: () => void = () => { };\nprivate _subscription: Subscription;\n/**\n * @param {?} _element\n * @param {?} _document\n * @param {?} _typeaheadKeyService\n */\nconstructor(\nprivate _element: ElementRef,\nprivate _document: Document,\nprivate _typeaheadKeyService: TypeaheadKeyService) { }\n/**\n * @return {?}\n */\nngOnInit() {\n        if (!this.tagTemplate) {\n            this.tagTemplate = this._defaultTagTemplate;\n        }\n    }\n/**\n * @return {?}\n */\nngAfterContentInit() {\n        // Watch for optional child typeahead control\n        this.connectTypeahead(this.typeaheadQuery.first);\n        this.typeaheadQuery.changes.subscribe((query) => {\n            this.connectTypeahead(query.first);\n        });\n    }\n/**\n * @param {?} changes\n * @return {?}\n */\nngOnChanges(changes: SimpleChanges) {\n        if (changes.disabled) {\n            if (changes.disabled.currentValue) {\n                // Clear selection and close dropdown\n                this.selectedIndex = -1;\n                if (this.typeahead) {\n                    this.typeahead.open = false;\n                }\n            }\n        }\n\n        // Update validation status\n        this.validate();\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nwriteValue(value: any[]) {\n        if (value) {\n            this.tags = value;\n        }\n    }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnChange(fn: any) {\n        this._onChangeHandler = fn;\n    }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnTouched(fn: any) {\n        this._onTouchedHandler = fn;\n    }\n/**\n * @param {?} isDisabled\n * @return {?}\n */\nsetDisabledState(isDisabled: boolean): void {\n        this.disabled = isDisabled;\n    }\n/**\n * @return {?}\n */\nngOnDestroy(): void {\n        if (this._subscription) {\n            this._subscription.unsubscribe();\n        }\n    }\n/**\n * Validate the value of the control (tags property).\n * @return {?}\n */\nvalidate() {\n        this.valid = true;\n        let /** @type {?} */ tagRangeError = null;\n        if (this.tags && (this.tags.length < this.minTags || this.tags.length > this.maxTags)) {\n            tagRangeError = {\n                given: this.tags.length,\n                min: this.minTags,\n                max: this.maxTags\n            };\n            this.valid = false;\n        }\n        this.validationErrors['tagRangeError'] = tagRangeError;\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nkeyHandler(event: KeyboardEvent) {\n\n        if (this.disabled) { return; }\n\n        // Get the input field cursor location\n        const /** @type {?} */ inputCursorPos = this.tagInput.nativeElement.selectionStart;\n\n        // Determine if the input field has any text selected\n        const /** @type {?} */ hasSelection = this.tagInput.nativeElement.selectionStart !== this.tagInput.nativeElement.selectionEnd;\n\n        // Determine if a tag has focus\n        const /** @type {?} */ tagSelected = this.isValidTagIndex(this.selectedIndex);\n\n        const /** @type {?} */ inputLength = this.input ? this.input.length : 0;\n\n        // Check whether the arrow keys can move the selection. Otherwise the input field takes the event.\n        const /** @type {?} */ canNavigateLeft = tagSelected || (inputCursorPos <= 0 && !hasSelection);\n        const /** @type {?} */ canNavigateRight = tagSelected || (inputCursorPos >= inputLength && !hasSelection);\n\n        // Forward key events to the typeahead component.\n        this._typeaheadKeyService.handleKey(event, this.typeahead);\n\n        switch (event.key) {\n            case 'Enter':\n                // Check if a typeahead option is highlighted\n                if (this.typeahead && this.typeahead.open && this.typeahead.highlighted) {\n                    // Add the typeahead option as a tag, clear the input, and close the dropdown\n                    this.commitTypeahead(this.typeahead.highlighted);\n                    this.typeahead.open = false;\n                } else {\n                    // Validate and add the input text as a tag, if possible\n                    this.commitInput();\n                }\n                event.preventDefault();\n                break;\n            case 'Backspace':\n                if (canNavigateLeft) {\n                    this.backspace();\n                    event.stopPropagation();\n                    event.preventDefault();\n                }\n                break;\n            case 'Delete':\n            case 'Del':\n                if (tagSelected) {\n                    this.removeTagAt(this.selectedIndex);\n                }\n                break;\n            case 'ArrowLeft':\n            case 'Left':\n                if (canNavigateLeft) {\n                    this.moveSelection(-1);\n                    event.preventDefault();\n                }\n                break;\n            case 'ArrowRight':\n            case 'Right':\n                if (canNavigateRight) {\n                    this.moveSelection(1);\n                    event.preventDefault();\n                }\n                break;\n        }\n\n        // Check for keys in the tagDelimiters\n        if (this.tagDelimiters && this.tagDelimiters.indexOf(this.getKeyChar(event)) >= 0) {\n            // Commit previous text\n            this.commitInput();\n            event.stopPropagation();\n            event.preventDefault();\n        }\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nfocusOutHandler(event: FocusEvent) {\n\n        // If a click on the typeahead is in progress, don't do anything.\n        // This works around an issue in IE where clicking a scrollbar drops focus.\n        if (this.typeahead && this.typeahead.clicking) {\n            return;\n        }\n\n        // Close the dropdown on blur\n        setTimeout(() => {\n            if (!this._element.nativeElement.contains(this._document.activeElement)) {\n                this.selectedIndex = -1;\n                if (this.typeahead) {\n                    this.typeahead.open = false;\n                }\n            }\n        }, 200);\n    }\n/**\n * @param {?} event\n * @param {?} tag\n * @param {?} index\n * @return {?}\n */\ntagClickHandler(event: MouseEvent, tag: any, index: number) {\n\n        if (this.disabled) { return; }\n\n        // Send tagClick event\n        const /** @type {?} */ tagClickEvent = new TagInputEvent(tag);\n        this.tagClick.emit(tagClickEvent);\n\n        // Prevent focus if preventDefault() was called\n        if (tagClickEvent.defaultPrevented()) {\n            event.preventDefault();\n            return;\n        }\n\n        // Select the tag (for IE that doesn't propagate focus)\n        this.selectTagAt(index);\n    }\n/**\n * @return {?}\n */\ninputClickHandler() {\n\n        if (this.disabled) { return; }\n\n        if (this.typeahead && this.showTypeaheadOnClick) {\n            this.typeahead.open = true;\n        }\n    }\n/**\n * @return {?}\n */\ninputFocusHandler() {\n\n        if (this.disabled) { return; }\n\n        this.selectInput();\n    }\n/**\n * @param {?} event\n * @return {?}\n */\ninputPasteHandler(event: ClipboardEvent) {\n\n        if (this.disabled) { return; }\n\n        if (this.addOnPaste) {\n            // Get text from the clipboard\n            let /** @type {?} */ input: string = null;\n            if (event.clipboardData) {\n                input = event.clipboardData.getData('text/plain');\n            } else if (( /** @type {?} */((<any>window))).clipboardData) {\n                // Internet Explorer only\n                input = ( /** @type {?} */((<any>window))).clipboardData.getData('Text');\n            }\n\n            // Commit the clipboard text directly\n            if (this.commit(input)) {\n                this.selectInput();\n                event.stopPropagation();\n                event.preventDefault();\n            }\n        }\n    }\n/**\n * @param {?} event\n * @return {?}\n */\ntypeaheadOptionSelectedHandler(event: TypeaheadOptionEvent) {\n\n        if (this.disabled) { return; }\n\n        // When the typeahead sends the optionSelected event, commit the object directly\n        this.commitTypeahead(event.option);\n    }\n/**\n * Commit the current input value and clear the input field if successful.\n * @return {?}\n */\ncommitInput() {\n        if (this.commit(this.input)) {\n            this.selectInput();\n            this.input = '';\n        }\n    }\n/**\n * Commit the given tag object and clear the input if successful.\n * @param {?} tag\n * @return {?}\n */\ncommitTypeahead(tag: any) {\n        if (this.addTag(tag)) {\n            this.selectInput();\n            this.input = '';\n        }\n    }\n/**\n * Commit the given string value as one or more tags, if validation passes. Returns true if the tag(s) were created.\n * @param {?} input\n * @return {?}\n */\ncommit(input: string): boolean {\n        if (input && this.freeInput) {\n\n            // Split the tags by the tagDelimiters if configured\n            const /** @type {?} */ newTags = this.splitTagInput(input);\n\n            // Check tag validation for all of the individual values\n            let /** @type {?} */ allValid = true;\n            for (let /** @type {?} */ newTag of newTags) {\n                const /** @type {?} */ valid = this.validateTag(newTag);\n                if (!valid) {\n                    allValid = false;\n                }\n            }\n\n            // Add the tags if all are valid\n            if (allValid) {\n                for (let /** @type {?} */ newTag of newTags) {\n                    this.addTag(this.createTag(newTag));\n                }\n\n                return true;\n            }\n        }\n\n        return false;\n    }\n/**\n * If no tag is selected, select the rightmost tag. If a tag is selected, remove it.\n * @return {?}\n */\nbackspace() {\n\n        if (this.disabled) { return; }\n\n        if (!this.isValidTagIndex(this.selectedIndex)) {\n            this.selectTagAt(this.tags.length - 1);\n        } else {\n            this.removeTagAt(this.selectedIndex);\n        }\n    }\n/**\n * Move the highlighted option forwards or backwards in the list. Wraps at the limits.\n * @param {?} d Value to be added to the selected index, i.e. -1 to move backwards, +1 to move forwards.\n * @return {?}\n */\nmoveSelection(d: number) {\n\n        if (this.disabled) { return; }\n\n        if (this.isValidSelectIndex(this.selectedIndex)) {\n            this.selectedIndex += d;\n\n            // Do wrapping of selection when out of bounds\n            if (this.selectedIndex < 0) {\n                this.selectedIndex = this.tags.length;\n            } else if (this.selectedIndex > this.tags.length) {\n                this.selectedIndex = 0;\n            }\n        }\n    }\n/**\n * Returns a value to display for the given tag. Uses display function/property name if set, otherwise assumes that the tag is a simple string.\n * @param {?} tag\n * @return {?}\n */\ngetTagDisplay(tag: any): string {\n        if (typeof this.display === 'function') {\n            return this.display(tag);\n        }\n        if (typeof this.display === 'string') {\n            return tag[ /** @type {?} */((<string>this.display))];\n        }\n        return tag;\n    }\n/**\n * Returns true if the given index is selected (tag index or input field).\n * @param {?} index\n * @return {?}\n */\nisSelected(index: number): boolean {\n        return index === this.selectedIndex;\n    }\n/**\n * Select the tag at the given index. Does nothing if disabled is true.\n * @param {?} tagIndex\n * @return {?}\n */\nselectTagAt(tagIndex: number) {\n\n        if (this.disabled) { return; }\n\n        if (this.isValidTagIndex(tagIndex)) {\n            this.selectedIndex = tagIndex;\n        }\n    }\n/**\n * Select the input field, giving it focus. Does nothing if disabled is true.\n * @return {?}\n */\nselectInput() {\n\n        if (this.disabled) { return; }\n\n        this.selectedIndex = this.tags.length;\n    }\n/**\n * Remove the tag at the given index. Does nothing if disabled is true or the minTags property prevents removal.\n * @param {?} tagIndex\n * @return {?}\n */\nremoveTagAt(tagIndex: number) {\n\n        if (this.disabled || !this.canRemoveTagAt(tagIndex)) { return; }\n\n        // Check that the tagIndex is in range\n        if (this.isValidTagIndex(tagIndex)) {\n            const /** @type {?} */ tag = this.tags[tagIndex];\n            const /** @type {?} */ tagRemovingEvent = new TagInputEvent(tag);\n            this.tagRemoving.emit(tagRemovingEvent);\n            if (!tagRemovingEvent.defaultPrevented()) {\n                // Select input first to avoid issues with dropping focus\n                this.selectInput();\n                // Remove the tag\n                this.tags.splice(tagIndex, 1);\n                // Set focus again since indices have changed\n                this.selectInput();\n                this.tagRemoved.emit(new TagInputEvent(tag));\n                this.validate();\n            }\n        }\n    }\n/**\n * Returns true if the tag at the given index can be removed.\n * @param {?} tagIndex\n * @return {?}\n */\ncanRemoveTagAt(tagIndex: number): boolean {\n        return this.tags.length > this.minTags || !this.enforceTagLimits;\n    }\n/**\n * Returns true if the input field should be available.\n * @return {?}\n */\nisInputVisible() {\n        return this.tags.length < this.maxTags || !this.enforceTagLimits;\n    }\n/**\n * Returns true if any part of the control has focus.\n * @return {?}\n */\nhasFocus(): boolean {\n        return this.isValidSelectIndex(this.selectedIndex);\n    }\n/**\n * @param {?} typeahead\n * @return {?}\n */\nprivate connectTypeahead(typeahead: TypeaheadComponent) {\n        if (this._subscription) {\n            this._subscription.unsubscribe();\n            this._subscription = null;\n        }\n\n        this.typeahead = typeahead;\n        if (this.typeahead) {\n            // Set up event handler for selected options\n            this._subscription = this.typeahead.optionSelected.subscribe(this.typeaheadOptionSelectedHandler.bind(this));\n        }\n    }\n/**\n * Validate the given tagValue with the tagPattern, if set. Update validationErrors on validation failure.\n * @param {?} tagValue\n * @return {?}\n */\nprivate validateTag(tagValue: string): boolean {\n        let /** @type {?} */ inputPattern = null;\n        this.inputValid = true;\n        if (this.tagPattern && !this.tagPattern.test(tagValue)) {\n            inputPattern = {\n                given: tagValue,\n                pattern: this.tagPattern\n            };\n            this.inputValid = false;\n        }\n        this.validationErrors['inputPattern'] = inputPattern;\n        return this.inputValid;\n    }\n/**\n * Create a tag object for the given tagValue. If createTagHandler is specified, use it; otherwise if displayProperty is specified, create an object with the tagValue as the single named property; otherwise return the tagValue itself.\n * @param {?} tagValue\n * @return {?}\n */\nprivate createTag(tagValue: string): any {\n        let /** @type {?} */ tag = null;\n        if (this.createTagHandler && typeof this.createTagHandler === 'function') {\n            tag = this.createTagHandler(tagValue);\n        } else if (typeof this.display === 'string') {\n            tag = {};\n            tag[ /** @type {?} */((<string>this.display))] = tagValue;\n        } else {\n            tag = tagValue;\n        }\n        return tag;\n    }\n/**\n * Add a tag object, calling the tagAdding and tagAdded events. Returns true if the tag was added to the tags array.\n * @param {?} tag\n * @return {?}\n */\nprivate addTag(tag: any): boolean {\n        if (tag) {\n            // Verify that the new tag can be displayed\n            const /** @type {?} */ displayValue = this.getTagDisplay(tag);\n            if (displayValue && typeof displayValue === 'string' && displayValue.length > 0) {\n                const /** @type {?} */ tagAddingEvent = new TagInputEvent(tag);\n                this.tagAdding.emit(tagAddingEvent);\n                if (!tagAddingEvent.defaultPrevented()) {\n                    this.tags = this.tags || [];\n                    this.tags.push(tag);\n                    this.tagAdded.emit(new TagInputEvent(tag));\n                    this.validate();\n                    return true;\n                }\n            }\n        }\n\n        return false;\n    }\n/**\n * Returns true if the given tagIndex is a valid tag index.\n * @param {?} tagIndex\n * @return {?}\n */\nprivate isValidTagIndex(tagIndex: number): boolean {\n        return tagIndex >= 0 && tagIndex < this.tags.length;\n    }\n/**\n * Returns true if the given index is a valid selection index (tags or input field).\n * @param {?} index\n * @return {?}\n */\nprivate isValidSelectIndex(index: number): boolean {\n        return index >= 0 && index <= this.tags.length;\n    }\n/**\n * Returns the character corresponding to the given key event, mainly for IE compatibility.\n * @param {?} event\n * @return {?}\n */\nprivate getKeyChar(event: KeyboardEvent): string {\n        switch (event.key) {\n            case 'Spacebar':\n                return ' ';\n        }\n        return event.key;\n    }\n/**\n * Returns an array of strings corresponding to the input string split by the tagDelimiters characters.\n * @param {?} input\n * @return {?}\n */\nprivate splitTagInput(input: string): string[] {\n        let /** @type {?} */ tagValues = [input];\n        if (this.tagDelimiters && typeof this.tagDelimiters === 'string') {\n            const /** @type {?} */ escapedDelimiters = this.tagDelimiters.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n            const /** @type {?} */ delimiterRegex = new RegExp(`[${escapedDelimiters}]`, 'g');\n            tagValues = input.split(delimiterRegex).filter((s) => s.length > 0);\n        }\n        return tagValues;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-tag-input',\n    template: `\n      <ol>\n          <li *ngFor=\"let tag of tags; let i = index\" class=\"ux-tag\"\n              [class.disabled]=\"disabled\"\n              [ngClass]=\"tagClass(tag, i, isSelected(i))\"\n              [attr.tabindex]=\"disabled ? null : i\"\n              [focusIf]=\"isSelected(i)\"\n              (click)=\"tagClickHandler($event, tag, i)\"\n              (focus)=\"selectTagAt(i)\">\n        \n              <ng-container [ngTemplateOutlet]=\"tagTemplate\"\n                  [ngTemplateOutletContext]=\"{tag: tag, index: i, disabled: disabled, api: tagApi}\">\n              </ng-container>\n\n          </li>\n          <li *ngIf=\"isInputVisible()\" class=\"ux-tag-input\">\n              <input #tagInput type=\"text\" class=\"ux-tag-input\"\n                  [(ngModel)]=\"input\"\n                  [class.invalid]=\"!inputValid\"\n                  [placeholder]=\"disabled ? '' : (placeholder || '')\"\n                  [disabled]=\"disabled\"\n                  [focusIf]=\"isSelected(tags.length)\"\n                  (click)=\"inputClickHandler()\"\n                  (focus)=\"inputFocusHandler()\"\n                  (paste)=\"inputPasteHandler($event)\">\n          </li>\n      </ol>\n\n      <ng-content #typeahead></ng-content>\n\n      <ng-template #defaultTagTemplate let-tag=\"tag\" let-index=\"index\" let-disabled=\"disabled\" let-api=\"api\">\n          <span class=\"ux-tag-text\">{{api.getTagDisplay(tag)}}</span>\n          <button *ngIf=\"api.canRemoveTagAt(index)\" type=\"button\" class=\"ux-tag-remove\" [disabled]=\"disabled\" (click)=\"api.removeTagAt(index); $event.stopPropagation();\"><i class=\"hpe-icon hpe-close\"></i></button>\n      </ng-template>\n    `,\n    providers: [TAGINPUT_VALUE_ACCESSOR, TAGINPUT_VALIDATOR],\n    host: {\n        '[class.disabled]': 'disabled',\n        '[class.focus]': 'hasFocus()',\n        '[class.invalid]': '!valid || !inputValid'\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Document, decorators: [{ type: Inject, args: [DOCUMENT, ] }, ]},\n{type: TypeaheadKeyService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'tags': [{ type: Input, args: ['tags', ] },],\n'tagsChange': [{ type: Output },],\n'input': [{ type: Input, args: ['input', ] },],\n'inputChange': [{ type: Output },],\n'display': [{ type: Input },],\n'addOnPaste': [{ type: Input },],\n'disabled': [{ type: Input },],\n'enforceTagLimits': [{ type: Input },],\n'freeInput': [{ type: Input },],\n'maxTags': [{ type: Input },],\n'minTags': [{ type: Input },],\n'placeholder': [{ type: Input },],\n'showTypeaheadOnClick': [{ type: Input },],\n'tagDelimiters': [{ type: Input },],\n'tagPattern': [{ type: Input },],\n'tagTemplate': [{ type: Input },],\n'tagClass': [{ type: Input },],\n'validationErrors': [{ type: Input },],\n'createTagHandler': [{ type: Input, args: ['createTag', ] },],\n'tagAdding': [{ type: Output },],\n'tagAdded': [{ type: Output },],\n'tagInvalidated': [{ type: Output },],\n'tagRemoving': [{ type: Output },],\n'tagRemoved': [{ type: Output },],\n'tagClick': [{ type: Output },],\n'typeaheadQuery': [{ type: ContentChildren, args: [TypeaheadComponent, ] },],\n'tagInput': [{ type: ViewChild, args: ['tagInput', ] },],\n'_defaultTagTemplate': [{ type: ViewChild, args: ['defaultTagTemplate', ] },],\n'keyHandler': [{ type: HostListener, args: ['keydown', ['$event'], ] },],\n'focusOutHandler': [{ type: HostListener, args: ['focusout', ['$event'], ] },],\n};\n}\n\nfunction TagInputComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nTagInputComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTagInputComponent.ctorParameters;\n/** @type {?} */\nTagInputComponent.propDecorators;\n/** @type {?} */\nTagInputComponent.prototype._tags;\n/** @type {?} */\nTagInputComponent.prototype.tagsChange;\n/** @type {?} */\nTagInputComponent.prototype._input;\n/** @type {?} */\nTagInputComponent.prototype.inputChange;\n/** @type {?} */\nTagInputComponent.prototype.display;\n/** @type {?} */\nTagInputComponent.prototype.addOnPaste;\n/** @type {?} */\nTagInputComponent.prototype.disabled;\n/** @type {?} */\nTagInputComponent.prototype.enforceTagLimits;\n/** @type {?} */\nTagInputComponent.prototype.freeInput;\n/** @type {?} */\nTagInputComponent.prototype.maxTags;\n/** @type {?} */\nTagInputComponent.prototype.minTags;\n/** @type {?} */\nTagInputComponent.prototype.placeholder;\n/** @type {?} */\nTagInputComponent.prototype.showTypeaheadOnClick;\n/** @type {?} */\nTagInputComponent.prototype.tagDelimiters;\n/** @type {?} */\nTagInputComponent.prototype.tagPattern;\n/** @type {?} */\nTagInputComponent.prototype.tagTemplate;\n/** @type {?} */\nTagInputComponent.prototype.tagClass;\n/** @type {?} */\nTagInputComponent.prototype.validationErrors;\n/** @type {?} */\nTagInputComponent.prototype.createTagHandler;\n/** @type {?} */\nTagInputComponent.prototype.tagAdding;\n/** @type {?} */\nTagInputComponent.prototype.tagAdded;\n/** @type {?} */\nTagInputComponent.prototype.tagInvalidated;\n/** @type {?} */\nTagInputComponent.prototype.tagRemoving;\n/** @type {?} */\nTagInputComponent.prototype.tagRemoved;\n/** @type {?} */\nTagInputComponent.prototype.tagClick;\n/** @type {?} */\nTagInputComponent.prototype.typeaheadQuery;\n/** @type {?} */\nTagInputComponent.prototype.tagInput;\n/** @type {?} */\nTagInputComponent.prototype._defaultTagTemplate;\n/** @type {?} */\nTagInputComponent.prototype.selectedIndex;\n/** @type {?} */\nTagInputComponent.prototype.tagApi;\n/** @type {?} */\nTagInputComponent.prototype.valid;\n/** @type {?} */\nTagInputComponent.prototype.inputValid;\n/** @type {?} */\nTagInputComponent.prototype.typeahead;\n/** @type {?} */\nTagInputComponent.prototype._onChangeHandler;\n/** @type {?} */\nTagInputComponent.prototype._onTouchedHandler;\n/** @type {?} */\nTagInputComponent.prototype._subscription;\n/** @type {?} */\nTagInputComponent.prototype._element;\n/** @type {?} */\nTagInputComponent.prototype._document;\n/** @type {?} */\nTagInputComponent.prototype._typeaheadKeyService;\n}\n\n\n/**\n * The API available to tag templates.\n */\nexport interface TagApi {\n    /**\n     * Returns the display value of the given tag, according to the displayProperty property.\n     */\n    getTagDisplay: (tag: any) => string;\n\n    /**\n     * Removes the tag at the given index, if possible.\n     */\n    removeTagAt: (index: number) => void;\n\n    /**\n     * \tReturns true if the tag at the given index can be removed.\n     */\n    canRemoveTagAt: (index: number) => boolean;\n}\n\n/**\n * The function used to return custom class information, for use in `ngClass`.\n */\nexport type TagClassFunction = (tag: any, index: number, selected: boolean) => (string | string[] | Set<string>);\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { FocusIfModule } from '../../directives/focus-if/index';\nimport { TypeaheadModule } from '../typeahead/index';\nimport { TagInputComponent } from './tag-input.component';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nexport class TagInputModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        CommonModule,\n        FormsModule,\n        FocusIfModule,\n        TypeaheadModule\n    ],\n    exports: [TagInputComponent],\n    declarations: [TagInputComponent],\n    providers: [],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction TagInputModule_tsickle_Closure_declarations() {\n/** @type {?} */\nTagInputModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTagInputModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { InfiniteScrollModule } from '../../directives/infinite-scroll/index';\nimport { TagInputModule } from '../tag-input/index';\nimport { TypeaheadModule } from '../typeahead/index';\nimport { SelectComponent } from './select.component';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nexport class SelectModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        CommonModule,\n        FormsModule,\n        InfiniteScrollModule,\n        TagInputModule,\n        TypeaheadModule\n    ],\n    exports: [SelectComponent],\n    declarations: [SelectComponent]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction SelectModule_tsickle_Closure_declarations() {\n/** @type {?} */\nSelectModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSelectModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { SearchBuilderComponent } from './search-builder.component';\nimport { SearchBuilderGroupComponent } from './search-builder-group/search-builder-group.component';\nimport { SearchTextComponent } from './search-components/text/text.component';\nimport { SearchDateComponent } from './search-components/date/date.component';\nimport { SearchBuilderOutletDirective } from './search-builder-outlet/search-builder-outlet.directive';\nimport { BaseSearchComponent } from './search-components/base-search.component';\nimport { DateTimePickerModule } from '../date-time-picker/date-time-picker.module';\nimport { SearchDateRangeComponent } from './search-components/date-range/date-range.component';\nimport { SearchSelectComponent } from './search-components/select/select.component';\nimport { SelectModule } from '../select/index';\nimport { PopoverModule } from '../popover/index';\nexport class SearchBuilderModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  imports: [\n    CommonModule,\n    FormsModule,\n    DateTimePickerModule,\n    PopoverModule,\n    SelectModule\n  ],\n  exports: [\n    SearchBuilderComponent,\n    SearchBuilderGroupComponent,\n    BaseSearchComponent\n  ],\n  declarations: [\n    SearchBuilderComponent,\n    SearchBuilderGroupComponent,\n    SearchTextComponent,\n    SearchDateComponent,\n    SearchDateRangeComponent,\n    SearchBuilderOutletDirective,\n    SearchSelectComponent,\n    BaseSearchComponent\n  ],\n  entryComponents: [\n    SearchTextComponent,\n    SearchDateComponent,\n    SearchDateRangeComponent,\n    SearchSelectComponent\n  ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction SearchBuilderModule_tsickle_Closure_declarations() {\n/** @type {?} */\nSearchBuilderModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSearchBuilderModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, HostListener } from '@angular/core';\nimport { SidePanelService } from './side-panel.service';\nexport class SidePanelCloseDirective {\n/**\n * @param {?} _service\n */\nconstructor(private _service: SidePanelService) { }\n/**\n * @return {?}\n */\nclickHandler() {\n        this._service.close();\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: '[uxSidePanelClose]'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: SidePanelService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'clickHandler': [{ type: HostListener, args: ['click', ] },],\n};\n}\n\nfunction SidePanelCloseDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nSidePanelCloseDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSidePanelCloseDirective.ctorParameters;\n/** @type {?} */\nSidePanelCloseDirective.propDecorators;\n/** @type {?} */\nSidePanelCloseDirective.prototype._service;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { SidePanelComponent } from './side-panel.component';\nimport { SidePanelCloseDirective } from './side-panel-close.directive';\n\nconst /** @type {?} */ EXPORTS = [\n    SidePanelComponent,\n    SidePanelCloseDirective\n];\nexport class SidePanelModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        CommonModule\n    ],\n    exports: EXPORTS,\n    declarations: EXPORTS\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction SidePanelModule_tsickle_Closure_declarations() {\n/** @type {?} */\nSidePanelModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSidePanelModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { AfterViewInit, ChangeDetectionStrategy, ChangeDetectorRef, Component, DoCheck, ElementRef, EventEmitter, Input, OnInit, Output, ViewChild } from '@angular/core';\nimport { ColorService } from '../../services/color/index';\nexport class SliderComponent implements OnInit, AfterViewInit, DoCheck {\n\n     value: SliderValue | number = 0;\n     options: SliderOptions;\n     valueChange: EventEmitter<SliderValue | number> = new EventEmitter<SliderValue | number>();\n\n     lowerTooltip: ElementRef;\n     upperTooltip: ElementRef;\n     track: ElementRef;\nprivate _value: SliderValue | number;\n\n    // expose enums to Angular view\n    sliderType = SliderType;\n    sliderStyle = SliderStyle;\n    sliderSize = SliderSize;\n    sliderSnap = SliderSnap;\n    sliderThumb = SliderThumb;\n    sliderTickType = SliderTickType;\n    sliderThumbEvent = SliderThumbEvent;\n    sliderCalloutTrigger = SliderCalloutTrigger;\n\n    tracks = {\n        lower: {\n            size: 0,\n            color: ''\n        },\n        middle: {\n            size: 0,\n            color: ''\n        },\n        upper: {\n            size: 0,\n            color: ''\n        }\n    };\n\n    tooltips = {\n        lower: {\n            visible: false,\n            position: 0,\n            label: ''\n        },\n        upper: {\n            visible: false,\n            position: 0,\n            label: ''\n        }\n    };\n\n    thumbs = {\n        lower: {\n            hover: false,\n            drag: false,\n            position: 0,\n            order: 100,\n            value: /** @type {?} */(( null as number))\n        },\n        upper: {\n            hover: false,\n            drag: false,\n            position: 0,\n            order: 101,\n            value: /** @type {?} */(( null as number))\n        }\n    };\n\n    // store all the ticks to display\n    ticks: SliderTick[] = [];\n    defaultOptions: SliderOptions;\n/**\n * @param {?} colorService\n * @param {?} _changeDetectorRef\n */\nconstructor(colorService: ColorService,\nprivate _changeDetectorRef: ChangeDetectorRef) {\n\n        // setup default options\n        this.defaultOptions = {\n            type: SliderType.Value,\n            handles: {\n                style: SliderStyle.Button,\n                callout: {\n                    trigger: SliderCalloutTrigger.None,\n                    background: colorService.getColor('grey2').toHex(),\n                    color: '#fff',\n                    formatter: (value: number): string | number => value\n                },\n                keyboard: {\n                    major: 5,\n                    minor: 1\n                },\n                aria: {\n                    thumb: 'Slider value',\n                    lowerThumb: 'Slider lower value',\n                    upperThumb: 'Slider upper value'\n                }\n            },\n            track: {\n                height: SliderSize.Wide,\n                min: 0,\n                max: 100,\n                ticks: {\n                    snap: SliderSnap.None,\n                    major: {\n                        show: true,\n                        steps: 10,\n                        labels: true,\n                        formatter: (value: number): string | number => value\n                    },\n                    minor: {\n                        show: true,\n                        steps: 5,\n                        labels: false,\n                        formatter: (value: number): string | number => value\n                    }\n                },\n                colors: {\n                    lower: colorService.getColor('grey6').toHex(),\n                    range: colorService.getColor('accent').setAlpha(0.75).toRgba(),\n                    higher: colorService.getColor('grey6').toHex()\n                }\n            }\n        };\n    }\n/**\n * @return {?}\n */\nngOnInit(): void {\n\n        this.updateOptions();\n        this.updateValues();\n\n        this.setThumbState(SliderThumb.Lower, false, false);\n        this.setThumbState(SliderThumb.Upper, false, false);\n\n        // emit the initial value\n        this.valueChange.next(this.clone(this.value));\n    }\n/**\n * @return {?}\n */\nngDoCheck(): void {\n\n        if (this.detectValueChange(this.value, this._value)) {\n            this.updateValues();\n            this._value = this.clone(this.value);\n        }\n    }\n/**\n * @return {?}\n */\nngAfterViewInit(): void {\n        // persistent tooltips will need positioned correctly at this stage\n        setTimeout(() => {\n            this.updateTooltipPosition(SliderThumb.Lower);\n            this.updateTooltipPosition(SliderThumb.Upper);\n\n            // mark as dirty\n            this._changeDetectorRef.markForCheck();\n        });\n    }\n/**\n * @param {?} thumb\n * @param {?} snapTarget\n * @param {?} forwards\n * @return {?}\n */\nsnapToNearestTick(thumb: SliderThumb, snapTarget: SliderSnap, forwards: boolean): void {\n\n        // get the value for the thumb\n        const { value } = this.getThumbState(thumb);\n\n        // get the closest ticks - remove any tick if we are currently on it\n        const /** @type {?} */ closest = this.getTickDistances(value, thumb, snapTarget)\n            .filter(tick => tick.value !== value)\n            .find(tick => forwards ? tick.value > value : tick.value < value);\n\n        // If we have no ticks then move by a predefined amount\n        if (closest) {\n            return this.setThumbValue(thumb, this.validateValue(thumb, closest.value));\n        }\n\n        const /** @type {?} */ step = snapTarget === SliderSnap.Major ? this.options.handles.keyboard.major : this.options.handles.keyboard.minor;\n\n        this.setThumbValue(thumb, this.validateValue(thumb, value + (forwards ? step : -step)));\n\n    }\n/**\n * @param {?} thumb\n * @param {?} forwards\n * @return {?}\n */\nsnapToEnd(thumb: SliderThumb, forwards: boolean): void {\n        this.setThumbValue(thumb, this.validateValue(thumb, forwards ? this.options.track.max : this.options.track.min));\n    }\n/**\n * @param {?} thumb\n * @return {?}\n */\ngetThumbValue(thumb: SliderThumb): number {\n        return this.getThumbState(thumb).value;\n    }\n/**\n * @param {?} thumb\n * @return {?}\n */\ngetFormattedValue(thumb: SliderThumb): string | number {\n        return this.options.handles.callout.formatter(this.getThumbState(thumb).value);\n    }\n/**\n * @param {?} thumb\n * @return {?}\n */\nprivate getThumbState(thumb: SliderThumb) {\n        return thumb === SliderThumb.Lower ? this.thumbs.lower : this.thumbs.upper;\n    }\n/**\n * @param {?} thumb\n * @param {?} hover\n * @param {?} drag\n * @return {?}\n */\nprivate setThumbState(thumb: SliderThumb, hover: boolean, drag: boolean) {\n\n        if (thumb === SliderThumb.Lower) {\n            this.thumbs.lower.hover = hover;\n            this.thumbs.lower.drag = drag;\n        } else {\n            this.thumbs.upper.hover = hover;\n            this.thumbs.upper.drag = drag;\n        }\n\n        // update the visibility of the tooltips\n        this.updateTooltips(thumb);\n    }\n/**\n * @param {?} thumb\n * @param {?} event\n * @return {?}\n */\nthumbEvent(thumb: SliderThumb, event: SliderThumbEvent): void {\n\n        // get the current thumb state\n        const /** @type {?} */ state = this.getThumbState(thumb);\n\n        // update based upon event\n        switch (event) {\n\n            case SliderThumbEvent.DragStart:\n                state.drag = true;\n                break;\n\n            case SliderThumbEvent.DragEnd:\n                state.drag = false;\n                break;\n\n            case SliderThumbEvent.MouseOver:\n                state.hover = true;\n                break;\n\n            case SliderThumbEvent.MouseLeave:\n                state.hover = false;\n                break;\n\n            case SliderThumbEvent.None:\n                state.drag = false;\n                state.hover = false;\n                break;\n        }\n\n        // update the thumb state\n        this.setThumbState(thumb, state.hover, state.drag);\n    }\n/**\n * @param {?} thumb\n * @return {?}\n */\ngetAriaValueText(thumb: SliderThumb): string | number {\n        // get the current thumb value\n        const /** @type {?} */ value = this.getThumbValue(thumb);\n\n        // get all the ticks\n        const /** @type {?} */ tick = this.ticks.find(_tick => _tick.value === value);\n\n        if (tick && tick.label) {\n            return tick.label;\n        }\n\n        // otherwise simply display the formatted value\n        return this.getFormattedValue(thumb);\n    }\n/**\n * @param {?} thumb\n * @return {?}\n */\nprivate updateTooltips(thumb: SliderThumb): void {\n\n        let /** @type {?} */ visible = false;\n        const /** @type {?} */ state = this.getThumbState(thumb);\n\n        switch (this.options.handles.callout.trigger) {\n\n            case SliderCalloutTrigger.Persistent:\n                visible = true;\n                break;\n\n            case SliderCalloutTrigger.Drag:\n                visible = state.drag;\n                break;\n\n            case SliderCalloutTrigger.Hover:\n                visible = state.hover || state.drag;\n                break;\n\n            case SliderCalloutTrigger.Dynamic:\n                visible = true;\n                break;\n        }\n\n        // update the state for the corresponding thumb\n        this.getTooltip(thumb).visible = visible;\n\n        // update the tooltip text\n        this.updateTooltipText(thumb);\n\n        // update the tooltip positions\n        this.updateTooltipPosition(thumb);\n    }\n/**\n * @param {?} thumb\n * @return {?}\n */\nprivate updateTooltipText(thumb: SliderThumb) {\n\n        // get the thumb value\n        let /** @type {?} */ state = this.getThumbState(thumb);\n        let /** @type {?} */ tooltip = this.getTooltip(thumb);\n\n        // store the formatted label\n        tooltip.label = this.getFormattedValue(thumb).toString();\n    }\n/**\n * @param {?} thumb\n * @return {?}\n */\nprivate getTooltipElement(thumb: SliderThumb): ElementRef {\n        return thumb === SliderThumb.Lower ? this.lowerTooltip : this.upperTooltip;\n    }\n/**\n * @param {?} thumb\n * @return {?}\n */\nprivate getTooltip(thumb: SliderThumb) {\n        return thumb === SliderThumb.Lower ? this.tooltips.lower : this.tooltips.upper;\n    }\n/**\n * @param {?} thumb\n * @return {?}\n */\nprivate updateTooltipPosition(thumb: SliderThumb): void {\n\n        const /** @type {?} */ tooltip = this.getTooltip(thumb);\n\n        // if tooltip is not visible then stop here\n        if (tooltip.visible === false) {\n            return;\n        }\n\n        let /** @type {?} */ tooltipElement = this.getTooltipElement(thumb);\n\n        // get the element widths\n        let /** @type {?} */ thumbWidth: number;\n\n        if (this.options.handles.style === SliderStyle.Button) {\n            thumbWidth = this.options.track.height === SliderSize.Narrow ? 16 : 24;\n        } else {\n            thumbWidth = 2;\n        }\n\n        let /** @type {?} */ tooltipWidth = tooltipElement.nativeElement.offsetWidth;\n\n        // calculate the tooltips new position\n        let /** @type {?} */ tooltipPosition = Math.ceil((tooltipWidth - thumbWidth) / 2);\n\n        // update tooltip position\n        tooltip.position = -tooltipPosition;\n\n        if (this.options.type === SliderType.Range && this.options.handles.callout.trigger === SliderCalloutTrigger.Dynamic) {\n            this.preventTooltipOverlap(tooltip);\n        }\n    }\n/**\n * @param {?} tooltip\n * @return {?}\n */\nprivate preventTooltipOverlap(tooltip: any): void {\n        const /** @type {?} */ trackWidth = this.track.nativeElement.offsetWidth;\n\n        const /** @type {?} */ lower = (trackWidth / 100) * this.thumbs.lower.position;\n        const /** @type {?} */ upper = (trackWidth / 100) * this.thumbs.upper.position;\n\n        const /** @type {?} */ lowerWidth = this.lowerTooltip.nativeElement.offsetWidth / 2;\n        const /** @type {?} */ upperWidth = this.upperTooltip.nativeElement.offsetWidth / 2;\n\n        const /** @type {?} */ diff = (lower + lowerWidth) - (upper - upperWidth);\n\n        // if the tooltips are closer than 16px then adjust so the dont move any close\n        if (diff > 0) {\n            if (tooltip === this.tooltips.lower && this.thumbs.lower.drag === false) {\n                tooltip.position -= (diff / 2);\n            } else if (tooltip === this.tooltips.upper && this.thumbs.upper.drag === false) {\n                tooltip.position += (diff / 2);\n            }\n        }\n    }\n/**\n * @param {?} value\n * @param {?} min\n * @param {?} max\n * @return {?}\n */\nprivate clamp(value: number, min: number, max: number): number {\n        return Math.min(Math.max(value, min), max);\n    }\n/**\n * @param {?} event\n * @param {?} thumb\n * @return {?}\n */\nupdateThumbPosition(event: MouseEvent | TouchEvent, thumb: SliderThumb): void {\n\n        // get event position - either mouse or touch\n        let /** @type {?} */ eventPosition = event instanceof MouseEvent ? event.clientX : event.touches && event.touches.length > 0 ? event.touches[0].clientX : null;\n\n        // if event position is null do nothing\n        if (eventPosition === null) {\n            return;\n        }\n\n        // get mouse position\n        let /** @type {?} */ mouseX = window.pageXOffset + eventPosition;\n\n        // get track size and position\n        let /** @type {?} */ trackBounds = this.track.nativeElement.getBoundingClientRect();\n\n        // restrict the value within the range size\n        let /** @type {?} */ position = this.clamp(mouseX - trackBounds.left, 0, trackBounds.width);\n\n        // get fraction representation of location within the track\n        let /** @type {?} */ fraction = (position / trackBounds.width);\n\n        // convert to value within the range\n        let /** @type {?} */ value = ((this.options.track.max - this.options.track.min) * fraction) + this.options.track.min;\n\n        // ensure value is valid\n        value = this.validateValue(thumb, value);\n\n        // snap to a tick if required\n        value = this.snapToTick(value, thumb);\n\n        // update the value accordingly\n        this.setThumbValue(thumb, value);\n\n        this.updateOrder(thumb);\n        this.updateValues();\n\n        // update tooltip text & position\n        this.updateTooltipText(thumb);\n\n        // update the position of all visible tooltips\n        this.updateTooltipPosition(SliderThumb.Lower);\n        this.updateTooltipPosition(SliderThumb.Upper);\n\n        // mark as dirty for change detection\n        this._changeDetectorRef.markForCheck();\n    }\n/**\n * @param {?} thumb\n * @return {?}\n */\nprivate updateOrder(thumb: SliderThumb): void {\n\n        let /** @type {?} */ lower = thumb === SliderThumb.Lower ? 101 : 100;\n        let /** @type {?} */ upper = thumb === SliderThumb.Lower ? 100 : 101;\n\n        // The most recently used thumb should be above\n        this.thumbs.lower.order = lower;\n        this.thumbs.upper.order = upper;\n    }\n/**\n * @param {?} value\n * @param {?} thumb\n * @param {?} snapTarget\n * @return {?}\n */\nprivate getTickDistances(value: number, thumb: SliderThumb, snapTarget: SliderSnap): SliderTick[] {\n\n        // if snap target is none then return original value\n        if (snapTarget === SliderSnap.None) {\n            return [];\n        }\n\n        // get filtered ticks\n        let /** @type {?} */ ticks: SliderTick[];\n\n        switch (snapTarget) {\n\n            case SliderSnap.Minor:\n                ticks = this.ticks.filter(tick => tick.type === SliderTickType.Minor);\n                break;\n\n            case SliderSnap.Major:\n                ticks = this.ticks.filter(tick => tick.type === SliderTickType.Major);\n                break;\n\n            default:\n                ticks = this.ticks.slice(0);\n        }\n\n        // get the track limit\n        let /** @type {?} */ lowerLimit = this.options.track.min;\n        let /** @type {?} */ upperLimit = this.options.track.max;\n\n        if (this.options.type === SliderType.Range && thumb === SliderThumb.Lower) {\n            upperLimit = this.thumbs.upper.value;\n        }\n\n        if (this.options.type === SliderType.Range && thumb === SliderThumb.Upper) {\n            lowerLimit = this.thumbs.lower.value;\n        }\n\n        // Find the closest tick to the current position\n        const /** @type {?} */ range = ticks.filter(tick => tick.value >= lowerLimit && tick.value <= upperLimit);\n\n        // If there are no close ticks in the valid range then dont snap\n        if (range.length === 0) {\n            return [];\n        }\n\n        return range.sort((tickOne, tickTwo) => {\n\n            const /** @type {?} */ tickOneDelta = Math.max(tickOne.value, value) - Math.min(tickOne.value, value);\n            const /** @type {?} */ tickTwoDelta = Math.max(tickTwo.value, value) - Math.min(tickTwo.value, value);\n            \n            return tickOneDelta - tickTwoDelta;\n        });\n    }\n/**\n * @param {?} value\n * @param {?} thumb\n * @return {?}\n */\nprivate snapToTick(value: number, thumb: SliderThumb): number {\n\n        const /** @type {?} */ tickDistances = this.getTickDistances(value, thumb, this.options.track.ticks.snap);\n\n        // if there are no ticks return the current value\n        if (tickDistances.length === 0) {\n            return value;\n        }\n\n        // get the closest tick\n        return tickDistances[0].value;\n    }\n/**\n * @param {?} thumb\n * @param {?} value\n * @return {?}\n */\nprivate validateValue(thumb: SliderThumb, value: number): number {\n\n        // if slider is not a range value is always valid providing it is within the chart min and max values\n        if (this.options.type === SliderType.Value) {\n            return Math.max(Math.min(value, this.options.track.max), this.options.track.min);\n        }\n\n        // check if value is with chart ranges\n        if (value > this.options.track.max) {\n            return thumb === SliderThumb.Lower ? Math.min(this.options.track.max, this.thumbs.upper.value) : this.options.track.max;\n        }\n\n        if (value < this.options.track.min) {\n            return thumb === SliderThumb.Upper ? Math.max(this.options.track.min, this.thumbs.lower.value) : this.options.track.min;\n        }\n\n        // otherwise we need to check to make sure lower thumb cannot go above higher and vice versa\n        if (thumb === SliderThumb.Lower) {\n\n            if (this.thumbs.upper.value === null) {\n                return value;\n            }\n\n            return value <= this.thumbs.upper.value ? value : this.thumbs.upper.value;\n        }\n\n        if (thumb === SliderThumb.Upper) {\n\n            if (this.thumbs.lower.value === null) {\n                return value;\n            }\n\n            return value >= this.thumbs.lower.value ? value : this.thumbs.lower.value;\n        }\n    }\n/**\n * @return {?}\n */\nprivate updateOptions(): void {\n\n        // add in the default options that user hasn't specified\n        this.options = this.deepMerge(this.options || {}, this.defaultOptions);\n\n        this.updateTrackColors();\n        this.updateTicks();\n        this.updateValues();\n    }\n/**\n * @return {?}\n */\nprivate updateValues(): void {\n\n        if (this.value === undefined || this.value === null) {\n            this.value = 0;\n        }\n\n        let /** @type {?} */ lowerValue = typeof this.value === 'number' ? this.value : this.value.low;\n        let /** @type {?} */ upperValue = typeof this.value === 'number' ? this.value : this.value.high;\n\n        // validate values\n        lowerValue = this.validateValue(SliderThumb.Lower, Number(lowerValue.toFixed(4)));\n        upperValue = this.validateValue(SliderThumb.Upper, Number(upperValue.toFixed(4)));\n\n        // calculate the positions as percentages\n        let /** @type {?} */ lowerPosition = (((lowerValue - this.options.track.min) / (this.options.track.max - this.options.track.min)) * 100);\n        let /** @type {?} */ upperPosition = (((upperValue - this.options.track.min) / (this.options.track.max - this.options.track.min)) * 100);\n\n        // update thumb positions\n        this.thumbs.lower.position = lowerPosition;\n        this.thumbs.upper.position = upperPosition;\n\n        // calculate the track sizes\n        this.tracks.lower.size = lowerPosition;\n        this.tracks.middle.size = upperPosition - lowerPosition;\n        this.tracks.upper.size = this.options.type === SliderType.Value ? 100 - lowerPosition : 100 - upperPosition;\n\n        // update the value input\n        this.setValue(lowerValue, upperValue);\n    }\n/**\n * @param {?} low\n * @param {?=} high\n * @return {?}\n */\nprivate setValue(low: number, high?: number): void {\n\n        this.thumbs.lower.value = low;\n        this.thumbs.upper.value = high;\n\n        let /** @type {?} */ previousValue = this.clone(this._value);\n\n        this.value = this.options.type === SliderType.Value ? low : { low: low, high: high };\n\n        // call the event emitter if changes occured\n        if (this.detectValueChange(this.value, previousValue)) {\n            this.valueChange.emit(this.clone(this.value));\n\n            this.updateTooltipText(SliderThumb.Lower);\n            this.updateTooltipText(SliderThumb.Upper);\n        } else {\n            this.valueChange.emit(this.clone(this.value));\n        }\n    }\n/**\n * @param {?} thumb\n * @param {?} value\n * @return {?}\n */\nprivate setThumbValue(thumb: SliderThumb, value: number): void {\n\n        // update the thumb value\n        this.getThumbState(thumb).value = value;\n\n        // forward these changes to the value\n        this.setValue(this.thumbs.lower.value, this.thumbs.upper.value);\n    }\n/**\n * @return {?}\n */\nprivate updateTicks(): void {\n\n        // get tick options\n        const /** @type {?} */ majorOptions = this.options.track.ticks.major;\n        const /** @type {?} */ minorOptions = this.options.track.ticks.minor;\n\n        // check if we should show ticks\n        if (majorOptions.show === false && minorOptions.show === false) {\n            this.ticks = [];\n        }\n\n        // create ticks for both major and minor - only get the ones to be shown\n        const /** @type {?} */ majorTicks = this.getTicks(majorOptions, SliderTickType.Major).filter(tick => tick.showTicks);\n        const /** @type {?} */ minorTicks = this.getTicks(minorOptions, SliderTickType.Minor).filter(tick => tick.showTicks);\n\n        // remove any minor ticks that are on a major interval\n        this.ticks = this.unionTicks(majorTicks, minorTicks);\n    }\n/**\n * @return {?}\n */\nprivate updateTrackColors(): void {\n\n        // get colors for each part of the track\n        const { lower, range, higher } = this.options.track.colors;\n\n        // update the controller value\n        this.tracks.lower.color = typeof lower === 'string' ? lower : `linear-gradient(to right, ${lower.join(', ')})`;\n        this.tracks.middle.color = typeof range === 'string' ? range : `linear-gradient(to right, ${range.join(', ')})`;\n        this.tracks.upper.color = typeof higher === 'string' ? higher : `linear-gradient(to right, ${higher.join(', ')})`;\n    }\n/**\n * @param {?} steps\n * @return {?}\n */\nprivate getSteps(steps: number | number[]): number[] {\n\n        // if they are already an array just return it\n        if (steps instanceof Array) {\n            return steps;\n        }\n\n        let /** @type {?} */ output: number[] = [];\n\n        // otherwise calculate the steps\n        for (let /** @type {?} */ idx = this.options.track.min; idx <= this.options.track.max; idx += steps) {\n            output.push(idx);\n        }\n\n        return output;\n    }\n/**\n * @param {?} options\n * @param {?} type\n * @return {?}\n */\nprivate getTicks(options: SliderTickOptions, type: SliderTickType): SliderTick[] {\n\n        // create an array to store the ticks and step points\n        let /** @type {?} */ steps = this.getSteps(options.steps);\n\n        // get some chart options\n        let /** @type {?} */ min = this.options.track.min;\n        let /** @type {?} */ max = this.options.track.max;\n\n        // convert each step to a slider tick and remove invalid ticks\n        return steps.map(step => {\n            return {\n                showTicks: options.show,\n                showLabels: options.labels,\n                type: type,\n                position: ((step - min) / (max - min)) * 100,\n                value: step,\n                label: options.formatter(step)\n            };\n        }).filter(tick => tick.position >= 0 && tick.position <= 100);\n    }\n/**\n * @param {?} majorTicks\n * @param {?} minorTicks\n * @return {?}\n */\nprivate unionTicks(majorTicks: SliderTick[], minorTicks: SliderTick[]): SliderTick[] {\n\n        // get all ticks combined removing any minor ticks with the same value as major ticks\n        return majorTicks.concat(minorTicks)\n            .filter((tick, index, array) => tick.type === SliderTickType.Major || !array.find(tk => tk.type === SliderTickType.Major && tk.position === tick.position))\n            .sort((t1, t2) => t1.value - t2.value);\n    }\n/**\n * @template T\n * @param {?} destination\n * @param {?} source\n * @return {?}\n */\nprivate deepMerge<T>(destination: T, source: T): T {\n\n        // loop though all of the properties in the source object\n        for (let /** @type {?} */ prop in source) {\n\n            // check if the destination object has the property\n            if (!destination.hasOwnProperty(prop)) {\n                // copy the property across\n                destination[prop] = source[prop];\n                continue;\n            }\n\n            // if the property exists and is not an object then skip\n            if (typeof destination[prop] !== 'object') {\n                continue;\n            }\n\n            // check if property is an array\n            if (destination[prop] instanceof Array) {\n                continue;\n            }\n\n            // if it is an object then perform a recursive check\n            destination[prop] = this.deepMerge(destination[prop], source[prop]);\n        }\n\n        return destination;\n    }\n/**\n * @param {?} value1\n * @param {?} value2\n * @return {?}\n */\nprivate detectValueChange(value1: number | SliderValue, value2: number | SliderValue): boolean {\n\n        // compare two slider values\n        if (this.isSliderValue(value1) && this.isSliderValue(value2)) {\n\n            // references to the objects in the correct types\n            const /** @type {?} */ obj1 = /** @type {?} */(( value1 as SliderValue));\n            const /** @type {?} */ obj2 = /** @type {?} */(( value2 as SliderValue));\n\n            return obj1.low !== obj2.low || obj1.high !== obj2.high;\n        }\n\n        // if not a slider value - should be number of nullable type - compare normally\n        return value1 !== value2;\n    }\n/**\n * Determines whether or not an object conforms to the\n * SliderValue interface.\n * @param {?} value - The object to check - this must be type any\n * @return {?}\n */\nprivate isSliderValue(value: any): boolean {\n\n        // check if is an object\n        if (typeof value !== 'object') {\n            return false;\n        }\n\n        // next check if it contains the necessary properties\n        return 'low' in value && 'high' in value;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nprivate clone(value: number | SliderValue): number | SliderValue {\n\n        // if it is not an object simply return the value\n        if (typeof value !== 'object') {\n            return value;\n        }\n\n        // create a new object from the existing one\n        const /** @type {?} */ instance = { ...value };\n\n        // delete remove the value from the old object\n        value = undefined;\n\n        // return the new instance of the object\n        return instance;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-slider',\n    template: `\n      <div class=\"track\" #track [class.narrow]=\"options.track.height === sliderSize.Narrow\" [class.wide]=\"options.track.height === sliderSize.Wide\" [class.range]=\"options.type === sliderType.Range\">\n\n          <!-- Section Beneath Lower Thumb -->\n          <div class=\"track-section track-lower\" [style.flex-grow]=\"tracks.lower.size\" [style.background]=\"tracks.lower.color\"></div>\n\n          <!-- Lower Thumb Button / Line -->\n          <div class=\"thumb lower\"\n              uxDrag\n              role=\"slider\"\n              tabindex=\"0\"\n              #lowerthumb\n              [attr.aria-label]=\"options.type === sliderType.Range ? options.handles.aria.lowerThumb : options.handles.aria.thumb\"\n              [attr.aria-valuemin]=\"options?.track?.min\"\n              [attr.aria-valuemax]=\"options.type === sliderType.Range ? getThumbValue(sliderThumb.Upper) : options?.track?.max\"\n              [attr.aria-valuenow]=\"getThumbValue(sliderThumb.Lower)\"\n              [attr.aria-valuetext]=\"getAriaValueText(sliderThumb.Lower)\"\n              [style.left.%]=\"thumbs.lower.position\"\n              [class.active]=\"thumbs.lower.drag\"\n              [style.z-index]=\"thumbs.lower.order\"\n              [class.button]=\"options.handles.style === sliderStyle.Button\"\n              [class.line]=\"options.handles.style === sliderStyle.Line\"\n              [class.narrow]=\"options.track.height === sliderSize.Narrow\"\n              [class.wide]=\"options.track.height === sliderSize.Wide\"\n              (dragstart)=\"thumbEvent(sliderThumb.Lower, sliderThumbEvent.DragStart); lowerthumb.focus()\"\n              (drag)=\"updateThumbPosition($event, sliderThumb.Lower)\"\n              (dragend)=\"thumbEvent(sliderThumb.Lower, sliderThumbEvent.DragEnd)\"\n              (mouseenter)=\"thumbEvent(sliderThumb.Lower, sliderThumbEvent.MouseOver)\"\n              (mouseleave)=\"thumbEvent(sliderThumb.Lower, sliderThumbEvent.MouseLeave)\"\n              (focus)=\"thumbEvent(sliderThumb.Lower, sliderThumbEvent.MouseOver)\"\n              (blur)=\"thumbEvent(sliderThumb.Lower, sliderThumbEvent.MouseLeave)\"\n              (keydown.ArrowLeft)=\"snapToNearestTick(sliderThumb.Lower, sliderSnap.All, false); $event.preventDefault()\"\n              (keydown.ArrowRight)=\"snapToNearestTick(sliderThumb.Lower, sliderSnap.All, true); $event.preventDefault()\"\n              (keydown.ArrowUp)=\"snapToNearestTick(sliderThumb.Lower, sliderSnap.All, false); $event.preventDefault()\"\n              (keydown.ArrowDown)=\"snapToNearestTick(sliderThumb.Lower, sliderSnap.All, true); $event.preventDefault()\"\n              (keydown.PageDown)=\"snapToNearestTick(sliderThumb.Lower, sliderSnap.Major, false); $event.preventDefault()\"\n              (keydown.PageUp)=\"snapToNearestTick(sliderThumb.Lower, sliderSnap.Major, true); $event.preventDefault()\"\n              (keydown.Home)=\"snapToEnd(sliderThumb.Lower, false); $event.preventDefault()\"\n              (keydown.End)=\"snapToEnd(sliderThumb.Lower, true); $event.preventDefault()\">\n\n              <!-- Lower Thumb Callout -->\n              <div class=\"tooltip top tooltip-lower\" #lowerTooltip\n                  [class.tooltip-dynamic]=\"options.handles.callout.trigger === sliderCalloutTrigger.Dynamic && thumbs.lower.drag === false\"\n                  [style.opacity]=\"tooltips.lower.visible ? 1 : 0\"\n                  [style.left.px]=\"tooltips.lower.position\">\n\n                  <div class=\"tooltip-arrow\" [style.border-top-color]=\"options.handles.callout.background\"></div>\n\n                  <div class=\"tooltip-inner\"\n                      [style.background-color]=\"options.handles.callout.background\"\n                      [style.color]=\"options.handles.callout.color\">\n                      {{ tooltips.lower.label }}\n                  </div>\n              </div>\n\n          </div>\n\n          <!-- Section of Track Between Lower and Upper Thumbs -->\n          <div class=\"track-section track-range\" *ngIf=\"options.type === sliderType.Range\" [style.flex-grow]=\"tracks.middle.size\" [style.background]=\"tracks.middle.color\">\n          </div>\n\n          <!-- Upper Thumb Button / Line -->\n          <div class=\"thumb upper\"\n              uxDrag\n              role=\"slider\"\n              tabindex=\"0\"\n              #upperthumb\n              [attr.aria-label]=\"options.handles.aria.upperThumb\"\n              [attr.aria-valuemin]=\"getThumbValue(sliderThumb.Lower) || options?.track?.min\"\n              [attr.aria-valuemax]=\"options?.track?.max\"\n              [attr.aria-valuenow]=\"getThumbValue(sliderThumb.Upper)\"\n              [attr.aria-valuetext]=\"getAriaValueText(sliderThumb.Upper)\"\n              [hidden]=\"options.type !== sliderType.Range\"\n              [class.active]=\"thumbs.upper.drag\"\n              [style.left.%]=\"thumbs.upper.position\"\n              [style.z-index]=\"thumbs.upper.order\"\n              [class.button]=\"options.handles.style === sliderStyle.Button\"\n              [class.line]=\"options.handles.style === sliderStyle.Line\"\n              [class.narrow]=\"options.track.height === sliderSize.Narrow\"\n              [class.wide]=\"options.track.height === sliderSize.Wide\"\n              (dragstart)=\"thumbEvent(sliderThumb.Upper, sliderThumbEvent.DragStart); upperthumb.focus()\"\n              (drag)=\"updateThumbPosition($event, sliderThumb.Upper)\"\n              (dragend)=\"thumbEvent(sliderThumb.Upper, sliderThumbEvent.DragEnd)\"\n              (mouseenter)=\"thumbEvent(sliderThumb.Upper, sliderThumbEvent.MouseOver)\"\n              (mouseleave)=\"thumbEvent(sliderThumb.Upper, sliderThumbEvent.MouseLeave)\"\n              (focus)=\"thumbEvent(sliderThumb.Upper, sliderThumbEvent.MouseOver)\"\n              (blur)=\"thumbEvent(sliderThumb.Upper, sliderThumbEvent.MouseLeave)\"\n              (keydown.ArrowLeft)=\"snapToNearestTick(sliderThumb.Upper, sliderSnap.All, false); $event.preventDefault()\"\n              (keydown.ArrowRight)=\"snapToNearestTick(sliderThumb.Upper, sliderSnap.All, true); $event.preventDefault()\"\n              (keydown.ArrowUp)=\"snapToNearestTick(sliderThumb.Upper, sliderSnap.All, false); $event.preventDefault()\"\n              (keydown.ArrowDown)=\"snapToNearestTick(sliderThumb.Upper, sliderSnap.All, true); $event.preventDefault()\"\n              (keydown.PageDown)=\"snapToNearestTick(sliderThumb.Upper, sliderSnap.Major, false); $event.preventDefault()\"\n              (keydown.PageUp)=\"snapToNearestTick(sliderThumb.Upper, sliderSnap.Major, true); $event.preventDefault()\"\n              (keydown.Home)=\"snapToEnd(sliderThumb.Upper, false); $event.preventDefault()\"\n              (keydown.End)=\"snapToEnd(sliderThumb.Upper, true); $event.preventDefault()\">\n\n              <!-- Upper Thumb Callout -->\n              <div class=\"tooltip top tooltip-upper\" #upperTooltip\n                  [class.tooltip-dynamic]=\"options.handles.callout.trigger === sliderCalloutTrigger.Dynamic && thumbs.upper.drag === false\"\n                  [style.opacity]=\"tooltips.upper.visible ? 1 : 0\"\n                  [style.left.px]=\"tooltips.upper.position\">\n\n                  <div class=\"tooltip-arrow\" [style.border-top-color]=\"options.handles.callout.background\"></div>\n\n                  <div class=\"tooltip-inner\"\n                      *ngIf=\"options.type === sliderType.Range\"\n                      [style.background-color]=\"options.handles.callout.background\"\n                      [style.color]=\"options.handles.callout.color\">\n                      {{ tooltips.upper.label }}\n                  </div>\n              </div>\n          </div>\n\n          <!-- Section of Track Abover Upper Thumb -->\n          <div class=\"track-section track-higher\" [style.flex-grow]=\"tracks.upper.size\" [style.background]=\"tracks.upper.color\"></div>\n\n      </div>\n\n      <!-- Chart Ticks and Tick Labels -->\n      <div class=\"tick-container\"\n          role=\"presentation\"\n          *ngIf=\"(options.track.ticks.major.show || options.track.ticks.minor.show) && options.handles.callout.trigger !== sliderCalloutTrigger.Dynamic\"\n          [class.show-labels]=\"options.track.ticks.major.labels || options.track.ticks.minor.labels\">\n\n          <div class=\"tick\"\n              *ngFor=\"let tick of ticks\"\n              [class.major]=\"tick.type === sliderTickType.Major\"\n              [class.minor]=\"tick.type === sliderTickType.Minor\"\n              [style.left.%]=\"tick.position\"\n              [hidden]=\"!tick.showTicks\">\n\n              <div class=\"tick-indicator\"></div>\n              <div class=\"tick-label\" aria-hidden=\"true\" [hidden]=\"!tick.showLabels\">{{ tick.label }}</div>\n          </div>\n      </div>\n    `,\n    changeDetection: ChangeDetectionStrategy.OnPush\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ColorService, },\n{type: ChangeDetectorRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'value': [{ type: Input },],\n'options': [{ type: Input },],\n'valueChange': [{ type: Output },],\n'lowerTooltip': [{ type: ViewChild, args: ['lowerTooltip', ] },],\n'upperTooltip': [{ type: ViewChild, args: ['upperTooltip', ] },],\n'track': [{ type: ViewChild, args: ['track', ] },],\n};\n}\n\nfunction SliderComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nSliderComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSliderComponent.ctorParameters;\n/** @type {?} */\nSliderComponent.propDecorators;\n/** @type {?} */\nSliderComponent.prototype.value;\n/** @type {?} */\nSliderComponent.prototype.options;\n/** @type {?} */\nSliderComponent.prototype.valueChange;\n/** @type {?} */\nSliderComponent.prototype.lowerTooltip;\n/** @type {?} */\nSliderComponent.prototype.upperTooltip;\n/** @type {?} */\nSliderComponent.prototype.track;\n/** @type {?} */\nSliderComponent.prototype._value;\n/** @type {?} */\nSliderComponent.prototype.sliderType;\n/** @type {?} */\nSliderComponent.prototype.sliderStyle;\n/** @type {?} */\nSliderComponent.prototype.sliderSize;\n/** @type {?} */\nSliderComponent.prototype.sliderSnap;\n/** @type {?} */\nSliderComponent.prototype.sliderThumb;\n/** @type {?} */\nSliderComponent.prototype.sliderTickType;\n/** @type {?} */\nSliderComponent.prototype.sliderThumbEvent;\n/** @type {?} */\nSliderComponent.prototype.sliderCalloutTrigger;\n/** @type {?} */\nSliderComponent.prototype.tracks;\n/** @type {?} */\nSliderComponent.prototype.tooltips;\n/** @type {?} */\nSliderComponent.prototype.thumbs;\n/** @type {?} */\nSliderComponent.prototype.ticks;\n/** @type {?} */\nSliderComponent.prototype.defaultOptions;\n/** @type {?} */\nSliderComponent.prototype._changeDetectorRef;\n}\n\nexport type SliderType = number;\nexport let SliderType: any = {};\nSliderType.Value = 0;\nSliderType.Range = 1;\nSliderType[SliderType.Value] = \"Value\";\nSliderType[SliderType.Range] = \"Range\";\n\nexport type SliderStyle = number;\nexport let SliderStyle: any = {};\nSliderStyle.Button = 0;\nSliderStyle.Line = 1;\nSliderStyle[SliderStyle.Button] = \"Button\";\nSliderStyle[SliderStyle.Line] = \"Line\";\n\nexport type SliderSize = number;\nexport let SliderSize: any = {};\nSliderSize.Narrow = 0;\nSliderSize.Wide = 1;\nSliderSize[SliderSize.Narrow] = \"Narrow\";\nSliderSize[SliderSize.Wide] = \"Wide\";\n\nexport type SliderCalloutTrigger = number;\nexport let SliderCalloutTrigger: any = {};\nSliderCalloutTrigger.None = 0;\nSliderCalloutTrigger.Hover = 1;\nSliderCalloutTrigger.Drag = 2;\nSliderCalloutTrigger.Persistent = 3;\nSliderCalloutTrigger.Dynamic = 4;\nSliderCalloutTrigger[SliderCalloutTrigger.None] = \"None\";\nSliderCalloutTrigger[SliderCalloutTrigger.Hover] = \"Hover\";\nSliderCalloutTrigger[SliderCalloutTrigger.Drag] = \"Drag\";\nSliderCalloutTrigger[SliderCalloutTrigger.Persistent] = \"Persistent\";\nSliderCalloutTrigger[SliderCalloutTrigger.Dynamic] = \"Dynamic\";\n\n\nexport interface SliderValue {\n    low: number;\n    high: number;\n}\nexport type SliderSnap = number;\nexport let SliderSnap: any = {};\nSliderSnap.None = 0;\nSliderSnap.Minor = 1;\nSliderSnap.Major = 2;\nSliderSnap.All = 3;\nSliderSnap[SliderSnap.None] = \"None\";\nSliderSnap[SliderSnap.Minor] = \"Minor\";\nSliderSnap[SliderSnap.Major] = \"Major\";\nSliderSnap[SliderSnap.All] = \"All\";\n\nexport type SliderTickType = number;\nexport let SliderTickType: any = {};\nSliderTickType.Minor = 0;\nSliderTickType.Major = 1;\nSliderTickType[SliderTickType.Minor] = \"Minor\";\nSliderTickType[SliderTickType.Major] = \"Major\";\n\n\nexport interface SliderOptions {\n    type?: SliderType;\n    handles?: SliderHandleOptions;\n    track?: SliderTrackOptions;\n}\n\nexport interface SliderHandleOptions {\n    style?: SliderStyle;\n    callout?: SliderCallout;\n    keyboard?: SliderKeyboardOptions;\n    aria?: SliderAriaOptions;\n}\n\nexport interface SliderAriaOptions {\n    thumb: string;\n    lowerThumb: string;\n    upperThumb: string;\n}\n\nexport interface SliderKeyboardOptions {\n    major?: number;\n    minor?: number;\n}\n\nexport interface SliderTrackOptions {\n    height?: SliderSize;\n    min?: number;\n    max?: number;\n    ticks?: SliderTicksOptions;\n    colors?: SliderTrackColors;\n}\n\nexport interface SliderTicksOptions {\n    snap?: SliderSnap;\n    major?: SliderTickOptions;\n    minor?: SliderTickOptions;\n}\n\nexport interface SliderTickOptions {\n    show?: boolean;\n    steps?: number | number[];\n    labels?: boolean;\n    formatter?: (value: number) => string | number;\n}\n\nexport interface SliderTick {\n    showTicks: boolean;\n    showLabels: boolean;\n    type: SliderTickType;\n    position: number;\n    value: number;\n    label: string | number;\n}\n\nexport interface SliderTrackColors {\n    lower?: string | string[];\n    range?: string | string[];\n    higher?: string | string[];\n}\n\nexport interface SliderCallout {\n    trigger?: SliderCalloutTrigger;\n    background?: string;\n    color?: string;\n    formatter?: (value: number) => string | number;\n}\nexport type SliderThumbEvent = number;\nexport let SliderThumbEvent: any = {};\nSliderThumbEvent.None = 0;\nSliderThumbEvent.MouseOver = 1;\nSliderThumbEvent.MouseLeave = 2;\nSliderThumbEvent.DragStart = 3;\nSliderThumbEvent.DragEnd = 4;\nSliderThumbEvent[SliderThumbEvent.None] = \"None\";\nSliderThumbEvent[SliderThumbEvent.MouseOver] = \"MouseOver\";\nSliderThumbEvent[SliderThumbEvent.MouseLeave] = \"MouseLeave\";\nSliderThumbEvent[SliderThumbEvent.DragStart] = \"DragStart\";\nSliderThumbEvent[SliderThumbEvent.DragEnd] = \"DragEnd\";\n\nexport type SliderThumb = number;\nexport let SliderThumb: any = {};\nSliderThumb.Lower = 0;\nSliderThumb.Upper = 1;\nSliderThumb[SliderThumb.Lower] = \"Lower\";\nSliderThumb[SliderThumb.Upper] = \"Upper\";\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ColorServiceModule } from '../../services/color/index';\n\nimport { SliderComponent } from './slider.component';\nimport { DragModule } from '../../directives/drag/index';\nexport class SliderModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        CommonModule,\n        ColorServiceModule,\n        DragModule\n    ],\n    exports: [SliderComponent],\n    declarations: [SliderComponent]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction SliderModule_tsickle_Closure_declarations() {\n/** @type {?} */\nSliderModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSliderModule.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Input, ChangeDetectionStrategy } from '@angular/core';\nimport { ColorService } from '../../services/color/index';\nimport { ColorIdentifier } from '../../index';\nexport class SparkComponent {\n\n    values: number[] = [];\n\n     barHeight: number = 10;\n     inlineLabel: string;\n     topLeftLabel: string;\n     topRightLabel: string;\n     bottomLeftLabel: string;\n     bottomRightLabel: string;\n     tooltip: string;\nprivate _trackColor: string;\nprivate _theme: ColorIdentifier = 'primary';\nprivate _barColor: string | string[] = [];\n/**\n * @param {?} value\n * @return {?}\n */\nset theme(value: string) {\n        this._theme = this._colorService.resolveColorName(value);\n    }\n/**\n * @return {?}\n */\nget theme(): string {\n        return this._theme;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset trackColor(value: string) {\n        this._trackColor = this._colorService.resolve(value);\n    }\n/**\n * @return {?}\n */\nget trackColor(): string {\n        return this._trackColor;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset barColor(value: string | string[]) {\n\n        if (Array.isArray(value)) {\n            this._barColor = value.map(color => this._colorService.resolve(color));\n        } else {\n            this._barColor = [this._colorService.resolve(value)];\n        }\n    }\n/**\n * @return {?}\n */\nget barColor(): string | string[] {\n        return this._barColor;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset value(value: number | number[]) {\n\n        // ensure 'value' is an array at this point\n        const /** @type {?} */ values = Array.isArray(value) ? value : [value];\n\n        // get the total value of all lines\n        const /** @type {?} */ total = Math.max(values.reduce((previous, current) => previous + current, 0), 100);\n\n        // figure out the percentages for each spark line\n        this.values = values.map(val => (val / total) * 100);\n    }\n/**\n * @return {?}\n */\nget value() {\n        return this.values;\n    }\n/**\n * @param {?} _colorService\n */\nconstructor(private _colorService: ColorService) { }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-spark',\n    template: `\n      <!-- Inline Spark Chart -->\n      <div *ngIf=\"inlineLabel\" class=\"ux-spark-inline-label-container\">\n\n          <div class=\"ux-spark-inline-label-left\" [innerHtml]=\"inlineLabel\"></div>\n\n          <div class=\"ux-spark-line\">\n\n              <div class=\"ux-spark-top-container\" *ngIf=\"topLeftLabel || topRightLabel\">\n                  <div class=\"ux-spark-label-top-left\" *ngIf=\"topLeftLabel\" [innerHtml]=\"topLeftLabel\"></div>\n                  <div class=\"ux-spark-label-top-right\" *ngIf=\"topRightLabel\" [innerHtml]=\"topRightLabel\"></div>\n              </div>\n\n              <div class=\"ux-spark ux-inline ux-spark-theme-{{theme}}\" [style.height.px]=\"barHeight\" [style.backgroundColor]=\"trackColor\" [uxTooltip]=\"tooltip\">\n                  <div class=\"ux-spark-bar\" *ngFor=\"let line of values; let idx = index;\" [style.width.%]=\"line\" [style.backgroundColor]=\"barColor[idx]\"></div>\n              </div>\n\n              <div class=\"ux-spark-bottom-container\" *ngIf=\"bottomLeftLabel || bottomRightLabel\">\n                  <div class=\"ux-spark-label-bottom-left\" *ngIf=\"bottomLeftLabel\" [innerHtml]=\"bottomLeftLabel\"></div>\n                  <div class=\"ux-spark-label-bottom-right\" *ngIf=\"bottomRightLabel\" [innerHtml]=\"bottomRightLabel\"></div>\n              </div>\n\n          </div>\n      </div>\n\n      <!-- End Inline Spark Chart -->\n\n\n      <!-- Non Inline Spark Chart -->\n      <div *ngIf=\"!inlineLabel\">\n\n          <div class=\"ux-spark-top-container\" *ngIf=\"topLeftLabel || topRightLabel\">\n              <div class=\"ux-spark-label-top-left\" *ngIf=\"topLeftLabel\" [innerHtml]=\"topLeftLabel\"></div>\n              <div class=\"ux-spark-label-top-right\" *ngIf=\"topRightLabel\" [innerHtml]=\"topRightLabel\"></div>\n          </div>\n\n          <div class=\"ux-spark ux-spark-theme-{{theme}}\" [class.ux-spark-multi-value]=\"values.length > 1\" [style.height.px]=\"barHeight\" [style.backgroundColor]=\"trackColor\"\n              [uxTooltip]=\"tooltip\">\n              <div class=\"ux-spark-bar\" *ngFor=\"let line of value; let idx = index;\" [style.width.%]=\"line\" [style.backgroundColor]=\"barColor[idx]\"></div>\n          </div>\n\n          <div class=\"ux-spark-bottom-container\" *ngIf=\"bottomLeftLabel || bottomRightLabel\">\n              <div class=\"ux-spark-label-bottom-left\" *ngIf=\"bottomLeftLabel\" [innerHtml]=\"bottomLeftLabel\"></div>\n              <div class=\"ux-spark-label-bottom-right\" *ngIf=\"bottomRightLabel\" [innerHtml]=\"bottomRightLabel\"></div>\n          </div>\n      </div>\n\n      <!-- End Non Inline Spark Chart -->\n    `,\n    changeDetection: ChangeDetectionStrategy.OnPush\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ColorService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'barHeight': [{ type: Input },],\n'inlineLabel': [{ type: Input },],\n'topLeftLabel': [{ type: Input },],\n'topRightLabel': [{ type: Input },],\n'bottomLeftLabel': [{ type: Input },],\n'bottomRightLabel': [{ type: Input },],\n'tooltip': [{ type: Input },],\n'theme': [{ type: Input },],\n'trackColor': [{ type: Input },],\n'barColor': [{ type: Input },],\n'value': [{ type: Input },],\n};\n}\n\nfunction SparkComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nSparkComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSparkComponent.ctorParameters;\n/** @type {?} */\nSparkComponent.propDecorators;\n/** @type {?} */\nSparkComponent.prototype.values;\n/** @type {?} */\nSparkComponent.prototype.barHeight;\n/** @type {?} */\nSparkComponent.prototype.inlineLabel;\n/** @type {?} */\nSparkComponent.prototype.topLeftLabel;\n/** @type {?} */\nSparkComponent.prototype.topRightLabel;\n/** @type {?} */\nSparkComponent.prototype.bottomLeftLabel;\n/** @type {?} */\nSparkComponent.prototype.bottomRightLabel;\n/** @type {?} */\nSparkComponent.prototype.tooltip;\n/** @type {?} */\nSparkComponent.prototype._trackColor;\n/** @type {?} */\nSparkComponent.prototype._theme;\n/** @type {?} */\nSparkComponent.prototype._barColor;\n/** @type {?} */\nSparkComponent.prototype._colorService;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { SparkComponent } from './spark.component';\nimport { ColorServiceModule } from '../../services/color/index';\nimport { TooltipModule } from '../tooltip/index';\nexport class SparkModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        CommonModule,\n        ColorServiceModule,\n        TooltipModule\n    ],\n    exports: [SparkComponent],\n    declarations: [SparkComponent]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction SparkModule_tsickle_Closure_declarations() {\n/** @type {?} */\nSparkModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSparkModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { TabComponent } from './tab/tab.component';\nexport class TabsetService {\n\n    tabs$ = new BehaviorSubject<TabComponent[]>([]);\n    active$ = new BehaviorSubject<TabComponent>(null);\n    focused$ = new BehaviorSubject<boolean>(false);\n    highlighted$ = new BehaviorSubject<TabComponent>(null);\n/**\n * @param {?} tab\n * @return {?}\n */\nadd(tab: TabComponent): void {\n        this.tabs$.next([...this.tabs$.value, tab]);\n\n        // check if this is the only tab. If so select this by default\n        if (!this.active$.value) {\n            this.select(tab);\n        }\n    }\n/**\n * @param {?} tab\n * @return {?}\n */\nremove(tab: TabComponent): void {\n\n        // remove the tab\n        this.tabs$.next(this.tabs$.value.filter(_tab => _tab !== tab));\n    }\n/**\n * @param {?} tab\n * @return {?}\n */\nselect(tab: TabComponent): void {\n        if (!tab.disabled) {\n            this.active$.next(tab);\n            this.highlighted$.next(tab);\n        }\n    }\n/**\n * @param {?} index\n * @return {?}\n */\nselectAtIndex(index: number): void {\n\n        // if there are no tabs then do nothing\n        if (this.tabs$.value.length === 0) {\n            return;\n        }\n\n        // check if the index is within the bounds\n        if (index < 0) {\n            return this.selectAtIndex(this.tabs$.value.length - 1);\n        } else if (index >= this.tabs$.value.length) {\n            return this.selectAtIndex(0);\n        }\n\n        const /** @type {?} */ target = this.tabs$.value[index];\n\n        if (target) {\n            this.select(target);\n        }\n    }\n/**\n * @return {?}\n */\nselectNextTab(): void {\n        // find the currently selected index\n        const /** @type {?} */ index = this.tabs$.value.indexOf(this.active$.value);\n\n        // check the tabs after the active one to see if there are any selectable tabs\n        const /** @type {?} */ tabs = this.tabs$.value.slice(index + 1);\n\n        // check if any of the tabs are not disabled\n        for (let /** @type {?} */ tab of tabs) {\n            if (!tab.disabled) {\n                return this.select(tab);\n            }\n        }\n\n        // if we reach here then no tab could be selected - select the first tab\n        this.selectFirstTab();\n    }\n/**\n * @return {?}\n */\nselectPreviousTab(): void {\n        // find the currently selected index\n        const /** @type {?} */ index = this.tabs$.value.indexOf(this.active$.value);\n\n        // check the tabs before the active one to see if there are any selectable tabs\n        const /** @type {?} */ tabs = this.tabs$.value.slice(0, index);\n\n        // check if any of the tabs are not disabled\n        for (let /** @type {?} */ tab of tabs.reverse()) {\n            if (!tab.disabled) {\n                return this.select(tab);\n            }\n        }\n\n        // if we reach here then no previous tab could be selected - select the last tab\n        this.selectLastTab();\n    }\n/**\n * @return {?}\n */\nselectFirstTab(): void {\n        // find the index of the first non-disabled tab\n        const /** @type {?} */ tabIndex = this.tabs$.value.findIndex(tab => !tab.disabled);\n\n        if (tabIndex !== -1) {\n            this.selectAtIndex(tabIndex);\n        }\n    }\n/**\n * @return {?}\n */\nselectLastTab(): void {\n        // find the index of the first non-disabled tab\n        const /** @type {?} */ tabIndex = this.tabs$.value.slice().reverse().findIndex(tab => !tab.disabled);\n\n        if (tabIndex !== -1) {\n            this.selectAtIndex((this.tabs$.value.length - 1) - tabIndex);\n        }\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction TabsetService_tsickle_Closure_declarations() {\n/** @type {?} */\nTabsetService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTabsetService.ctorParameters;\n/** @type {?} */\nTabsetService.prototype.tabs$;\n/** @type {?} */\nTabsetService.prototype.active$;\n/** @type {?} */\nTabsetService.prototype.focused$;\n/** @type {?} */\nTabsetService.prototype.highlighted$;\n}\n \ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { TabComponent } from './tab/tab.component';\nimport { TabsetService } from './tabset.service';\nexport class TabsetComponent {\n\n     minimal: boolean = true;\n     stacked: 'left' | 'right' | 'none' = 'none';\n     ariaLabel: string;\n/**\n * @param {?} tabset\n */\nconstructor(public tabset: TabsetService) { }\n/**\n * Allow manual tab selected\n * @param {?} tab\n * @return {?}\n */\nselect(tab: TabComponent): void {\n        this.tabset.select(tab);\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nselectPreviousTab(event: KeyboardEvent): void {\n\n        // determine which arrow key is pressed\n        const /** @type {?} */ arrowLeft = event.key === 'ArrowLeft' || event.keyCode === 37;\n        const /** @type {?} */ arrowUp = event.key === 'ArrowUp' || event.keyCode === 38;\n\n        // only perform action if the arrow key matches the orientation\n        if (arrowLeft && this.stacked !== 'none' || arrowUp && this.stacked === 'none') {\n            return;\n        }\n\n        // perform selection\n        this.tabset.selectPreviousTab();\n\n        // prevent the browser from scrolling when arrow keys are pressed\n        event.preventDefault();\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nselectNextTab(event: KeyboardEvent): void {\n\n        // determine which arrow key is pressed\n        const /** @type {?} */ arrowRight = event.key === 'ArrowRight' || event.keyCode === 39;\n        const /** @type {?} */ arrowDown = event.key === 'ArrowDown' || event.keyCode === 40;\n\n        // only perform action if the arrow key matches the orientation\n        if (arrowRight && this.stacked !== 'none' || arrowDown && this.stacked === 'none') {\n            return;\n        }\n\n        // perform selection\n        this.tabset.selectNextTab();\n\n        // prevent the browser from scrolling when arrow keys are pressed\n        event.preventDefault();\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-tabset',\n    template: `\n      <!-- Nav tabs -->\n      <ul role=\"tablist\"\n          class=\"nav nav-tabs\"\n          [class.minimal-tab]=\"minimal\"\n          [attr.aria-label]=\"ariaLabel\"\n          [attr.aria-orientation]=\"stacked === 'none' ? 'horizontal' : 'vertical'\">\n\n      \t<li role=\"presentation\" \n              class=\"nav-item\"\n              *ngFor=\"let tab of tabset.tabs$ | async; let index = index\"\n              [class.active]=\"tab.active$ | async\"\n              [class.disabled]=\"tab.disabled\"\n              [ngClass]=\"tab.customClass\">\n\n              <a class=\"nav-link\"\n                  [id]=\"tab.id\"\n                  role=\"tab\"\n                  [uxTabFocus]=\"tab\"\n                  [tabindex]=\"(tab.active$ | async) ? 0 : -1\"\n                  [class.highlighted]=\"(tabset.focused$ | async) && (tabset.highlighted$ | async) === tab\"            \n                  (mousedown)=\"tabset.select(tab)\"\n                  (focus)=\"tabset.focused$.next(true)\"\n                  (blur)=\"tabset.focused$.next(false)\"\n                  (mousedown)=\"tabset.focused$.next(true)\"\n                  (keydown.ArrowUp)=\"selectPreviousTab($event)\"\n                  (keydown.ArrowLeft)=\"selectPreviousTab($event)\"\n                  (keydown.ArrowRight)=\"selectNextTab($event)\"\n                  (keydown.ArrowDown)=\"selectNextTab($event)\"\n                  (keydown.Home)=\"tabset.selectFirstTab(); $event.preventDefault()\"\n                  (keydown.End)=\"tabset.selectLastTab(); $event.preventDefault()\"\n                  [attr.aria-controls]=\"tab.id\"\n                  [attr.aria-selected]=\"tab.active$ | async\"\n                  [attr.aria-disabled]=\"tab.disabled\">\n\n                  <span *ngIf=\"!tab.headingRef\">{{ tab.heading }}</span>\n\n                  <ng-container *ngIf=\"tab.headingRef\" [ngTemplateOutlet]=\"tab.headingRef\"></ng-container>\n              </a>\n\n      \t</li>\n\n      </ul>\n\n      <!-- Tab panes -->\n      <div class=\"tab-content\">\n      \t<ng-content></ng-content>\n      </div>\n    `,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [TabsetService],\n    host: {\n        '[class.tabs-left]': 'stacked === \"left\"',\n        '[class.tabs-right]': 'stacked === \"right\"',\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: TabsetService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'minimal': [{ type: Input },],\n'stacked': [{ type: Input },],\n'ariaLabel': [{ type: Input, args: ['aria-label', ] },],\n};\n}\n\nfunction TabsetComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nTabsetComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTabsetComponent.ctorParameters;\n/** @type {?} */\nTabsetComponent.propDecorators;\n/** @type {?} */\nTabsetComponent.prototype.minimal;\n/** @type {?} */\nTabsetComponent.prototype.stacked;\n/** @type {?} */\nTabsetComponent.prototype.ariaLabel;\n/** @type {?} */\nTabsetComponent.prototype.tabset;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, OnDestroy, Output, TemplateRef } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { Subscription } from 'rxjs/Subscription';\nimport { map } from 'rxjs/operators';\nimport { TabsetService } from '../tabset.service';\n\nlet /** @type {?} */ uniqueTabId = 0;\nexport class TabComponent implements OnDestroy {\n\n     id: string = `ux-tab-${++uniqueTabId}`;\n     disabled: boolean = false;\n     heading: string;\n     customClass: string;\n\n     select = new EventEmitter<void>();\n     deselect = new EventEmitter<void>();\n/**\n * @param {?} value\n * @return {?}\n */\nset active(value: boolean) {\n        if (value) {\n            this._tabset.select(this);\n        }\n    }\n\n    headingRef: TemplateRef<any>;\n    active$: Observable<boolean> = this._tabset.active$.pipe(map(active => active === this));\nprivate _subscription: Subscription;\n/**\n * @param {?} _tabset\n */\nconstructor(private _tabset: TabsetService) {\n        _tabset.add(this);\n\n        this._subscription = this.active$.subscribe(active => active ? this.select.emit() : this.deselect.emit());\n    }\n/**\n * @return {?}\n */\nngOnDestroy(): void {\n        this._tabset.remove(this);\n        this._subscription.unsubscribe();\n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-tab',\n    template: `\n      <div role=\"tabpanel\"\n           class=\"tab-pane\"\n           [class.active]=\"active$ | async\"\n           [id]=\"id + '-panel'\"\n           [attr.aria-labelledby]=\"id\"\n           [attr.aria-hidden]=\"!(active$ | async)\">\n        <ng-content></ng-content>\n      </div>\n    `,\n    changeDetection: ChangeDetectionStrategy.OnPush\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: TabsetService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'id': [{ type: Input },],\n'disabled': [{ type: Input },],\n'heading': [{ type: Input },],\n'customClass': [{ type: Input },],\n'select': [{ type: Output },],\n'deselect': [{ type: Output },],\n'active': [{ type: Input },],\n};\n}\n\nfunction TabComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nTabComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTabComponent.ctorParameters;\n/** @type {?} */\nTabComponent.propDecorators;\n/** @type {?} */\nTabComponent.prototype.id;\n/** @type {?} */\nTabComponent.prototype.disabled;\n/** @type {?} */\nTabComponent.prototype.heading;\n/** @type {?} */\nTabComponent.prototype.customClass;\n/** @type {?} */\nTabComponent.prototype.select;\n/** @type {?} */\nTabComponent.prototype.deselect;\n/** @type {?} */\nTabComponent.prototype.headingRef;\n/** @type {?} */\nTabComponent.prototype.active$;\n/** @type {?} */\nTabComponent.prototype._subscription;\n/** @type {?} */\nTabComponent.prototype._tabset;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, TemplateRef } from '@angular/core';\nimport { TabComponent } from './tab.component';\nexport class TabHeadingDirective {\n/**\n * @param {?} templateRef\n * @param {?} tab\n */\nconstructor(templateRef: TemplateRef<any>, tab: TabComponent) {\n        tab.headingRef = templateRef;\n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: '[uxTabHeading]'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: TemplateRef, },\n{type: TabComponent, },\n];\n}\n\nfunction TabHeadingDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nTabHeadingDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTabHeadingDirective.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ElementRef, Input, OnDestroy, OnInit } from '@angular/core';\nimport { Subscription } from 'rxjs/Subscription';\nimport { filter } from 'rxjs/operators';\nimport { TabsetService } from '../tabset.service';\nimport { TabComponent } from './tab.component';\nexport class TabFocusDirective implements OnInit, OnDestroy {\n\n     uxTabFocus: TabComponent;\nprivate _subscription: Subscription;\n/**\n * @param {?} _tabset\n * @param {?} _elementRef\n */\nconstructor(private _tabset: TabsetService,\nprivate _elementRef: ElementRef) { }\n/**\n * @return {?}\n */\nngOnInit(): void {\n        this._subscription = this._tabset.highlighted$.pipe(\n            filter(() => this._tabset.focused$.value === true),\n            filter(() => this._tabset.highlighted$.value === this.uxTabFocus),\n        ).subscribe(() => this._elementRef.nativeElement.focus());\n    }\n/**\n * @return {?}\n */\nngOnDestroy(): void {\n        this._subscription.unsubscribe();\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: '[uxTabFocus]'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: TabsetService, },\n{type: ElementRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'uxTabFocus': [{ type: Input },],\n};\n}\n\nfunction TabFocusDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nTabFocusDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTabFocusDirective.ctorParameters;\n/** @type {?} */\nTabFocusDirective.propDecorators;\n/** @type {?} */\nTabFocusDirective.prototype.uxTabFocus;\n/** @type {?} */\nTabFocusDirective.prototype._subscription;\n/** @type {?} */\nTabFocusDirective.prototype._tabset;\n/** @type {?} */\nTabFocusDirective.prototype._elementRef;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TabsetComponent } from './tabset.component';\nimport { TabsetService } from './tabset.service';\nimport { TabComponent } from './tab/tab.component';\nimport { TabHeadingDirective } from './tab/tab-heading.directive';\nimport { TabFocusDirective } from './tab/tab-focus.directive';\nexport class TabsetModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        CommonModule\n    ],\n    exports: [TabsetComponent, TabComponent, TabHeadingDirective],\n    declarations: [TabsetComponent, TabComponent, TabHeadingDirective, TabFocusDirective],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction TabsetModule_tsickle_Closure_declarations() {\n/** @type {?} */\nTabsetModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTabsetModule.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component } from '@angular/core';\nexport class TimelineComponent {\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-timeline',\n    template: `\n      <div class=\"timeline\">\n          <ng-content></ng-content>\n      </div>\n    `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction TimelineComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nTimelineComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTimelineComponent.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Input } from '@angular/core';\nexport class TimelineEventComponent {\n\n     badgeColor: string;\n     badgeTitle: string;\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-timeline-event',\n    template: `\n      <div class=\"timeline-badge\" [ngClass]=\"badgeColor\">\n          <span>{{badgeTitle}}</span>\n      </div>\n      <div class=\"timeline-panel\">\n          <ng-content></ng-content>\n      </div>\n    `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'badgeColor': [{ type: Input },],\n'badgeTitle': [{ type: Input },],\n};\n}\n\nfunction TimelineEventComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nTimelineEventComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTimelineEventComponent.ctorParameters;\n/** @type {?} */\nTimelineEventComponent.propDecorators;\n/** @type {?} */\nTimelineEventComponent.prototype.badgeColor;\n/** @type {?} */\nTimelineEventComponent.prototype.badgeTitle;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TimelineComponent } from './timeline.component';\nimport { TimelineEventComponent } from './timeline-event/timeline-event.component';\nexport class TimelineModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        CommonModule\n    ],\n    exports: [\n        TimelineComponent,\n        TimelineEventComponent\n    ],\n    declarations: [\n        TimelineComponent,\n        TimelineEventComponent\n    ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction TimelineModule_tsickle_Closure_declarations() {\n/** @type {?} */\nTimelineModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTimelineModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, EventEmitter, HostListener, Input, Output, forwardRef, HostBinding } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nconst /** @type {?} */ TOGGLESWITCH_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => ToggleSwitchComponent),\n    multi: true\n};\n\nlet /** @type {?} */ uniqueToggleSwitchId = 0;\nexport class ToggleSwitchComponent implements ControlValueAccessor {\nprivate _toggleSwitchId: string = `ux-toggleswitch-${++uniqueToggleSwitchId}`;\n\n     id: string = this._toggleSwitchId;\n     name: string | null;\n     tabindex: number = 0;\n     clickable: boolean = true;\n     disabled: boolean = false;\n     ariaLabel: string = '';\n     ariaLabelledby: string = null;\n\n     valueChange: EventEmitter<boolean> = new EventEmitter<boolean>();\n/**\n * @return {?}\n */\nget value() {\n        return this._value;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset value(value: boolean) {\n        this._value = value;\n\n        // Update value output\n        this.valueChange.emit(value);\n\n        // Notify ngModel\n        this.onChangeCallback(value);\n        this.onTouchedCallback();        \n    }\n/**\n * @return {?}\n */\nget inputId(): string { \n        return `${this.id || this._toggleSwitchId}-input`;\n    }\nprivate _value: boolean = false;\n\n    focused: boolean = false;\n    onTouchedCallback: () => void = () => { };\n    onChangeCallback: (_: any) => void = () => { };\n/**\n * @return {?}\n */\ntoggle(): void {\n        if (!this.disabled && this.clickable) {\n            this.value = !this.value;\n        }\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nwriteValue(value: boolean): void {\n        this.value = !!value;\n    }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnChange(fn: any): void {\n        this.onChangeCallback = fn;\n    }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnTouched(fn: any): void {\n        this.onTouchedCallback = fn;\n    }\n/**\n * @param {?} isDisabled\n * @return {?}\n */\nsetDisabledState(isDisabled: boolean): void {\n        this.disabled = isDisabled;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-toggleswitch',\n    template: `\n      <label [attr.for]=\"inputId\"\n             class=\"ux-toggleswitch\"\n             [class.ux-toggleswitch-checked]=\"value\"\n             [class.ux-toggleswitch-disabled]=\"disabled\"\n             [class.ux-toggleswitch-focused]=\"focused\">\n\n          <input class=\"ux-toggleswitch-input\"\n                 type=\"checkbox\"\n                 role=\"switch\"\n                 [id]=\"inputId\"\n                 [checked]=\"value\"\n                 [disabled]=\"disabled\"\n                 [attr.name]=\"name\"\n                 [tabindex]=\"tabindex\"\n                 [attr.aria-label]=\"ariaLabel\"\n                 [attr.aria-labelledby]=\"ariaLabelledby\"\n                 [attr.aria-checked]=\"value\"\n                 (focus)=\"focused = true\"\n                 (blur)=\"focused = false\"\n                 (change)=\"toggle()\"\n                 (click)=\"$event.stopPropagation()\">\n\n          <div class=\"ux-toggleswitch-container\">\n              <div class=\"ux-toggleswitch-bg\"></div>\n              <div class=\"ux-toggleswitch-nub\"></div>\n          </div>\n\n          <span class=\"ux-toggleswitch-label\">\n              <ng-content></ng-content>\n          </span>\n      </label>\n    `,\n    providers: [TOGGLESWITCH_VALUE_ACCESSOR]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'id': [{ type: Input },],\n'name': [{ type: Input },],\n'tabindex': [{ type: Input },],\n'clickable': [{ type: Input },],\n'disabled': [{ type: Input },],\n'ariaLabel': [{ type: Input, args: ['aria-label', ] },],\n'ariaLabelledby': [{ type: Input, args: ['aria-labelledby', ] },],\n'valueChange': [{ type: Output },],\n'value': [{ type: Input },],\n};\n}\n\nfunction ToggleSwitchComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nToggleSwitchComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nToggleSwitchComponent.ctorParameters;\n/** @type {?} */\nToggleSwitchComponent.propDecorators;\n/** @type {?} */\nToggleSwitchComponent.prototype._toggleSwitchId;\n/** @type {?} */\nToggleSwitchComponent.prototype.id;\n/** @type {?} */\nToggleSwitchComponent.prototype.name;\n/** @type {?} */\nToggleSwitchComponent.prototype.tabindex;\n/** @type {?} */\nToggleSwitchComponent.prototype.clickable;\n/** @type {?} */\nToggleSwitchComponent.prototype.disabled;\n/** @type {?} */\nToggleSwitchComponent.prototype.ariaLabel;\n/** @type {?} */\nToggleSwitchComponent.prototype.ariaLabelledby;\n/** @type {?} */\nToggleSwitchComponent.prototype.valueChange;\n/** @type {?} */\nToggleSwitchComponent.prototype._value;\n/** @type {?} */\nToggleSwitchComponent.prototype.focused;\n/** @type {?} */\nToggleSwitchComponent.prototype.onTouchedCallback;\n/** @type {?} */\nToggleSwitchComponent.prototype.onChangeCallback;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { ToggleSwitchComponent } from './toggleswitch.component';\nexport class ToggleSwitchModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [ FormsModule ],\n    exports: [ ToggleSwitchComponent ],\n    declarations: [ ToggleSwitchComponent ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ToggleSwitchModule_tsickle_Closure_declarations() {\n/** @type {?} */\nToggleSwitchModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nToggleSwitchModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModel } from '@angular/forms';\nimport { Directive, ElementRef, HostListener, EventEmitter, Output, HostBinding, Optional } from '@angular/core';\n\nconst /** @type {?} */ KEYS = {\n    ENTER: 13,\n    ESCAPE: 27\n};\nexport class ToolbarSearchFieldDirective {\n\n    \n    cancel = new EventEmitter<void>();\n\n    \n    submit = new EventEmitter<string>();\n/**\n * @return {?}\n */\nget text(): string {\n        // Use ngModel if specified on the host; otherwise read the DOM\n        if (this._ngModel) {\n            return this._ngModel.value;\n        }\n\n        return this._elementRef.nativeElement.value;\n    }\n/**\n * @param {?} _elementRef\n * @param {?} _ngModel\n */\nconstructor(\nprivate _elementRef: ElementRef,\nprivate _ngModel: NgModel) { }\n/**\n * @return {?}\n */\nfocus() {\n        setTimeout(() => {\n            this._elementRef.nativeElement.focus();\n        });\n    }\n/**\n * @return {?}\n */\nblur() {\n        setTimeout(() => {\n            this._elementRef.nativeElement.blur();\n        });\n    }\n/**\n * @return {?}\n */\nclear() {\n        // Use ngModel if specified on the host; otherwise use the DOM\n        if (this._ngModel) {\n            this._ngModel.reset();\n        } else {\n            this._elementRef.nativeElement.value = '';\n        }\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nkeydownHandler(event: KeyboardEvent) {\n        setTimeout(() => {\n            if (event.keyCode === KEYS.ENTER) {\n                this.submit.emit(this.text);\n            } else if (event.keyCode === KEYS.ESCAPE) {\n                this._elementRef.nativeElement.blur();\n                this.cancel.emit();\n            }\n        });\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: '[uxToolbarSearchField]'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: NgModel, decorators: [{ type: Optional }, ]},\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'cancel': [{ type: Output },],\n'submit': [{ type: Output },],\n'keydownHandler': [{ type: HostListener, args: ['keydown', ['$event'], ] },],\n};\n}\n\nfunction ToolbarSearchFieldDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nToolbarSearchFieldDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nToolbarSearchFieldDirective.ctorParameters;\n/** @type {?} */\nToolbarSearchFieldDirective.propDecorators;\n/** @type {?} */\nToolbarSearchFieldDirective.prototype.cancel;\n/** @type {?} */\nToolbarSearchFieldDirective.prototype.submit;\n/** @type {?} */\nToolbarSearchFieldDirective.prototype._elementRef;\n/** @type {?} */\nToolbarSearchFieldDirective.prototype._ngModel;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, HostListener, Output, EventEmitter, ElementRef } from '@angular/core';\nexport class ToolbarSearchButtonDirective {\n\n    \n    clicked = new EventEmitter<void>();\n/**\n * @return {?}\n */\nget width(): number {\n        return this._elementRef.nativeElement.offsetWidth;\n    }\n/**\n * @param {?} _elementRef\n */\nconstructor(private _elementRef: ElementRef) { }\n/**\n * @return {?}\n */\nclickHandler() {\n        this.clicked.emit();\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: '[uxToolbarSearchButton]'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'clicked': [{ type: Output },],\n'clickHandler': [{ type: HostListener, args: ['click', ] },],\n};\n}\n\nfunction ToolbarSearchButtonDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nToolbarSearchButtonDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nToolbarSearchButtonDirective.ctorParameters;\n/** @type {?} */\nToolbarSearchButtonDirective.propDecorators;\n/** @type {?} */\nToolbarSearchButtonDirective.prototype.clicked;\n/** @type {?} */\nToolbarSearchButtonDirective.prototype._elementRef;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {\n    Component,\n    ContentChild,\n    AfterContentInit,\n    HostBinding,\n    HostListener,\n    EventEmitter,\n    Output,\n    Inject,\n    ElementRef,\n    Input\n} from '@angular/core';\nimport {\n    AnimationEvent,\n    trigger,\n    transition,\n    query,\n    style,\n    animate,\n    state\n} from '@angular/animations';\nimport { DOCUMENT } from '@angular/common';\n\nimport { ToolbarSearchFieldDirective } from './toolbar-search-field.directive';\nimport { ToolbarSearchButtonDirective } from './toolbar-search-button.directive';\nimport { ColorService } from '../../services/color/color.service';\nexport class ToolbarSearchComponent implements AfterContentInit {\n/**\n * @return {?}\n */\nget expanded(): boolean {\n        return this._expanded;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset expanded(value: boolean) {\n        this._expanded = value;\n\n        this.expandedChange.emit(value);\n\n        if (value) {\n            // Set focus on the input when expanded\n            this._field.focus();\n        } else {\n            // Clear text when contracted\n            this._field.clear();\n\n            // Remove focus (works around an IE issue where the caret remains visible)\n            this._field.blur();\n        }\n    }\n\n    \n    \n    direction: 'left' | 'right' = 'right';\n\n    \n    \n    inverse = false;\n/**\n * @param {?} value\n * @return {?}\n */\nset background(value: string) {\n        this._backgroundColor = this._colorService.resolve(value) || 'transparent';\n    }\n\n    \n    expandedChange = new EventEmitter<boolean>();\n\n    \n    search = new EventEmitter<string>();\nprivate _expanded: boolean = false;\n/**\n * @return {?}\n */\nprivate get _expandedAnimation(): any {\n        return {\n            value: this.expanded ? 'expanded' : 'collapsed',\n            params: {\n                initialWidth: this._button.width + 'px'\n            }\n        };\n    }\nprivate _position = 'relative';\nprivate _backgroundColor = 'transparent';\nprivate _field: ToolbarSearchFieldDirective;\nprivate _button: ToolbarSearchButtonDirective;\nprivate _placeholder: HTMLElement;\nprivate _document: Document;\n/**\n * @param {?} _elementRef\n * @param {?} _colorService\n * @param {?} document\n */\nconstructor(\nprivate _elementRef: ElementRef,\nprivate _colorService: ColorService,\n         document: any) {\n        this._document = <Document>document;\n    }\n/**\n * @return {?}\n */\nngAfterContentInit() {\n        // Subscribe to the submit event on the input field, triggering the search event\n        this._field.submit.subscribe((text: string) => this.search.emit(text));\n\n        // Subscribe to cancel events coming from the input field\n        this._field.cancel.subscribe(() => (this.expanded = false));\n\n        // Subscribe to the button click event\n        this._button.clicked.subscribe(() => {\n            if (this.expanded && this._field.text) {\n                this.search.emit(this._field.text);\n            } else {\n                this.expanded = !this.expanded;\n            }\n        });\n\n        // Create placeholder element to avoid changing layout when switching to position: absolute\n        this.createPlaceholder();\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nanimationStart(event: AnimationEvent) {\n        if (event.toState === 'expanded') {\n            this._position = 'absolute';\n            this.enablePlaceholder(true);\n        }\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nanimationDone(event: AnimationEvent) {\n        if (event.toState === 'collapsed') {\n            this._position = 'relative';\n            this.enablePlaceholder(false);\n        }\n    }\n/**\n * @return {?}\n */\nprivate createPlaceholder() {\n        // Get width and height of the component\n        const /** @type {?} */ styles = getComputedStyle(this._elementRef.nativeElement);\n\n        // Create invisible div with the same dimensions\n        this._placeholder = this._document.createElement('div');\n        this._placeholder.style.display = 'none';\n        this._placeholder.style.width = this._button.width + 'px';\n        this._placeholder.style.height = styles.height;\n        this._placeholder.style.visibility = 'hidden';\n\n        // Add as a sibling\n        this._elementRef.nativeElement.parentNode.insertBefore(this._placeholder, this._elementRef.nativeElement);\n    }\n/**\n * @param {?} enabled\n * @return {?}\n */\nprivate enablePlaceholder(enabled: boolean) {\n        this._placeholder.style.display = (enabled ? 'inline-block' : 'none');\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-toolbar-search',\n    template: `<ng-content></ng-content>`,\n    animations: [\n        trigger('expanded', [\n            state(\n                'collapsed',\n                style({\n                    width: '{{initialWidth}}'\n                }),\n                {\n                    params: { initialWidth: '30px' }\n                }\n            ),\n            state(\n                'expanded',\n                style({\n                    width: '100%'\n                })\n            ),\n            transition('collapsed <=> expanded', [animate('0.3s ease-out')])\n        ])\n    ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: ColorService, },\n{type: undefined, decorators: [{ type: Inject, args: [DOCUMENT, ] }, ]},\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'expanded': [{ type: HostBinding, args: ['class.expanded', ] },{ type: Input },],\n'direction': [{ type: Input },{ type: HostBinding, args: ['class', ] },],\n'inverse': [{ type: Input },{ type: HostBinding, args: ['class.inverse', ] },],\n'background': [{ type: Input },],\n'expandedChange': [{ type: Output },],\n'search': [{ type: Output },],\n'_expandedAnimation': [{ type: HostBinding, args: ['@expanded', ] },],\n'_position': [{ type: HostBinding, args: ['style.position', ] },],\n'_backgroundColor': [{ type: HostBinding, args: ['style.background-color', ] },],\n'_field': [{ type: ContentChild, args: [ToolbarSearchFieldDirective, ] },],\n'_button': [{ type: ContentChild, args: [ToolbarSearchButtonDirective, ] },],\n'animationStart': [{ type: HostListener, args: ['@expanded.start', ['$event'], ] },],\n'animationDone': [{ type: HostListener, args: ['@expanded.done', ['$event'], ] },],\n};\n}\n\nfunction ToolbarSearchComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nToolbarSearchComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nToolbarSearchComponent.ctorParameters;\n/** @type {?} */\nToolbarSearchComponent.propDecorators;\n/** @type {?} */\nToolbarSearchComponent.prototype.direction;\n/** @type {?} */\nToolbarSearchComponent.prototype.inverse;\n/** @type {?} */\nToolbarSearchComponent.prototype.expandedChange;\n/** @type {?} */\nToolbarSearchComponent.prototype.search;\n/** @type {?} */\nToolbarSearchComponent.prototype._expanded;\n/** @type {?} */\nToolbarSearchComponent.prototype._position;\n/** @type {?} */\nToolbarSearchComponent.prototype._backgroundColor;\n/** @type {?} */\nToolbarSearchComponent.prototype._field;\n/** @type {?} */\nToolbarSearchComponent.prototype._button;\n/** @type {?} */\nToolbarSearchComponent.prototype._placeholder;\n/** @type {?} */\nToolbarSearchComponent.prototype._document;\n/** @type {?} */\nToolbarSearchComponent.prototype._elementRef;\n/** @type {?} */\nToolbarSearchComponent.prototype._colorService;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ToolbarSearchComponent } from './toolbar-search.component';\nimport { ToolbarSearchFieldDirective } from './toolbar-search-field.directive';\nimport { ToolbarSearchButtonDirective } from './toolbar-search-button.directive';\n\nconst /** @type {?} */ DECLARATIONS = [\n    ToolbarSearchComponent,\n    ToolbarSearchFieldDirective,\n    ToolbarSearchButtonDirective\n];\nexport class ToolbarSearchModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        CommonModule\n    ],\n    exports: DECLARATIONS,\n    declarations: DECLARATIONS,\n    providers: [],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ToolbarSearchModule_tsickle_Closure_declarations() {\n/** @type {?} */\nToolbarSearchModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nToolbarSearchModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { Observer } from 'rxjs/Observer';\nimport'rxjs/add/observable/concat';\nexport class FrameExtractionService {\n/**\n * @param {?} source\n * @return {?}\n */\nprivate createVideoPlayer(source: string): HTMLVideoElement {\n        let /** @type {?} */ videoPlayer = document.createElement('video');\n        videoPlayer.preload = 'auto';\n        videoPlayer.src = source;\n        return videoPlayer;\n    }\n/**\n * @param {?} width\n * @param {?} height\n * @return {?}\n */\nprivate createCanvas(width: number, height: number): HTMLCanvasElement {\n        let /** @type {?} */ canvas = document.createElement('canvas');\n        canvas.width = width;\n        canvas.height = height;\n        return canvas;\n    }\n/**\n * @param {?} videoPlayer\n * @param {?} time\n * @return {?}\n */\nprivate goToFrame(videoPlayer: HTMLVideoElement, time: number): Observable<number> {\n        videoPlayer.currentTime = time;\n        return Observable.fromEvent(videoPlayer, time === 0 ? 'loadeddata' : 'seeked');\n    }\n/**\n * @param {?} videoPlayer\n * @param {?} canvas\n * @param {?} time\n * @param {?=} width\n * @param {?=} height\n * @return {?}\n */\nprivate getThumbnail(videoPlayer: HTMLVideoElement, canvas: HTMLCanvasElement, time: number, width: number = 160, height: number = 90): Observable<ExtractedFrame> {\n\n        return Observable.create((observer: Observer<ExtractedFrame>) => {\n\n            // go to specified frame\n            let /** @type {?} */ subscription = this.goToFrame(videoPlayer, time).subscribe((event: any) => {\n                // create image from current frame\n                canvas.getContext('2d').drawImage(videoPlayer, 0, 0, width, height);\n                observer.next({ image: canvas.toDataURL(), width: width, height: height, time: time });\n                observer.complete();\n                subscription.unsubscribe();\n            });\n        });\n    }\n/**\n * @param {?} source\n * @param {?} width\n * @param {?} height\n * @param {?} time\n * @return {?}\n */\ngetFrameThumbnail(source: string, width: number, height: number, time: number): Observable<ExtractedFrame> {\n\n        // create required elements\n        let /** @type {?} */ videoPlayer = this.createVideoPlayer(source);\n        let /** @type {?} */ canvas = this.createCanvas(width, height);\n\n        let /** @type {?} */ frameSubscription = this.getThumbnail(videoPlayer, canvas, time, width, height);\n\n        // ensure we release memory after we are finished        \n        frameSubscription.subscribe(null, null, () => {\n            videoPlayer = null;\n            canvas = null;\n        });\n\n        return frameSubscription;\n    }\n/**\n * @param {?} source\n * @param {?} width\n * @param {?} height\n * @param {?} start\n * @param {?} end\n * @param {?=} skip\n * @return {?}\n */\ngetFrameThumbnails(source: string, width: number, height: number, start: number, end: number, skip: number = 5): Observable<ExtractedFrame> {\n\n        // create required elements\n        let /** @type {?} */ videoPlayer = this.createVideoPlayer(source);\n        let /** @type {?} */ canvas = this.createCanvas(width, height);\n\n        return Observable.create((observer: Observer<ExtractedFrame>) => {\n\n            Observable.fromEvent(videoPlayer, 'loadedmetadata').subscribe(() => {\n\n                // calculate the frames required\n                let /** @type {?} */ frames = [];\n\n                for (let /** @type {?} */ idx = start; idx < end; idx += skip) {\n                    frames.push(this.getThumbnail(videoPlayer, canvas, idx, width, height));\n                }\n\n                Observable.concat(...frames).subscribe((frame: ExtractedFrame) => observer.next(frame), null, () => {\n                    videoPlayer = null;\n                    canvas = null;\n                    observer.complete();\n                });\n            });\n\n        });\n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction FrameExtractionService_tsickle_Closure_declarations() {\n/** @type {?} */\nFrameExtractionService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFrameExtractionService.ctorParameters;\n}\n\n\nexport interface ExtractedFrame {\n    image: string;\n    width: number;\n    height: number;\n    time: number;\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\n\nimport { FrameExtractionService } from './frame-extraction.service';\nexport class FrameExtractionModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    providers: [FrameExtractionService],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction FrameExtractionModule_tsickle_Closure_declarations() {\n/** @type {?} */\nFrameExtractionModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFrameExtractionModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { MediaPlayerType } from './media-player.component';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { Subject } from 'rxjs/Subject';\nimport { Observer } from 'rxjs/Observer';\nimport { FrameExtractionService, ExtractedFrame } from '../../services/frame-extraction/index';\nexport class MediaPlayerService {\n\n    source: string;\n    type: MediaPlayerType = 'video';\n    loaded: boolean = false;\n\n    /*\n        Create observables for media player events\n    */\n    playing: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\n    initEvent: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\n    abortEvent: Subject<void> = new Subject<void>();\n    canPlayEvent: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\n    canPlayThroughEvent: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\n    durationChangeEvent: Subject<number> = new Subject<number>();\n    endedEvent: Subject<void> = new Subject<void>();\n    errorEvent: Subject<any> = new Subject<any>();\n    loadedDataEvent: Subject<any> = new Subject<any>();\n    loadedMetadataEvent: Subject<any> = new Subject<any>();\n    loadStartEvent: Subject<void> = new Subject<void>();\n    pauseEvent: Subject<void> = new Subject<void>();\n    playEvent: Subject<void> = new Subject<void>();\n    playingEvent: Subject<boolean> = new Subject<boolean>();\n    rateChangeEvent: Subject<number> = new Subject<number>();\n    seekedEvent: Subject<number> = new Subject<number>();\n    seekingEvent: Subject<number> = new Subject<number>();\n    stalledEvent: Subject<void> = new Subject<void>();\n    suspendEvent: Subject<void> = new Subject<void>();\n    timeUpdateEvent: Subject<number> = new Subject<number>();\n    volumeChangeEvent: Subject<number> = new Subject<number>();\n    waitingEvent: Subject<void> = new Subject<void>();\n    mediaClickEvent: Subject<MouseEvent> = new Subject<MouseEvent>();\n    fullscreenEvent: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\n    quietModeEvent: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\n    progressEvent: Observable<TimeRanges> = Observable.create((observer: Observer<TimeRanges>) => {\n\n        // repeat until the whole video has fully loaded\n        let /** @type {?} */ interval = setInterval(() => {\n\n            let /** @type {?} */ buffered = /** @type {?} */(( this._mediaPlayer.buffered as TimeRanges));\n            observer.next(buffered);\n\n            if (buffered.length === 1 && buffered.start(0) === 0 && buffered.end(0) === this.duration) {\n                observer.complete();\n                clearInterval(interval);\n            }\n        }, 1000);\n    });\nprivate _mediaPlayer: HTMLMediaElement;\nprivate _hostElement: HTMLElement;\nprivate _fullscreen: boolean = false;\nprivate _quietMode: boolean;\n/**\n * @param {?} _frameExtractionService\n */\nconstructor(private _frameExtractionService: FrameExtractionService) {}\n/**\n * @return {?}\n */\nget mediaPlayer(): HTMLMediaElement {\n        return this._mediaPlayer;\n    }\n/**\n * @return {?}\n */\nget quietMode(): boolean {\n        return this._quietMode;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset quietMode(value: boolean) {\n\n        // quiet mode cannot be enabled on audio player\n        if (this.type === 'audio') {\n            value = false;\n        }\n\n        this._quietMode = value;\n        this.quietModeEvent.next(value);\n    }\n/**\n * @return {?}\n */\nget mediaPlayerWidth(): number {\n        return this._mediaPlayer ? this._mediaPlayer.offsetWidth : 0;\n    }\n/**\n * @return {?}\n */\nget mediaPlayerHeight(): number {\n        return this._mediaPlayer ? this._mediaPlayer.offsetHeight : 0;\n    }\n/**\n * @return {?}\n */\nget audioTracks(): AudioTrackList {\n        return this._mediaPlayer ? this._mediaPlayer.audioTracks : null;\n    }\n/**\n * @return {?}\n */\nget autoplay(): boolean {\n        return this._mediaPlayer ? this._mediaPlayer.autoplay : false;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset autoplay(value: boolean) {\n        this._mediaPlayer.autoplay = value;\n    }\n/**\n * @return {?}\n */\nget buffered(): TimeRanges {\n        return this._mediaPlayer ? this._mediaPlayer.buffered : new TimeRanges();\n    }\n/**\n * @return {?}\n */\nget crossOrigin(): string {\n        return this._mediaPlayer ? this._mediaPlayer.crossOrigin : null;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset crossOrigin(value: string) {\n        this._mediaPlayer.crossOrigin = value;\n    }\n/**\n * @return {?}\n */\nget currentSrc(): string {\n        return this._mediaPlayer ? this._mediaPlayer.currentSrc : null;\n    }\n/**\n * @return {?}\n */\nget currentTime(): number {\n        return this._mediaPlayer ? this._mediaPlayer.currentTime : 0;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset currentTime(value: number) {\n        this._mediaPlayer.currentTime = value;\n    }\n/**\n * @return {?}\n */\nget defaultMuted(): boolean {\n        return this._mediaPlayer ? this._mediaPlayer.defaultMuted : false;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset defaultMuted(value: boolean) {\n        this._mediaPlayer.defaultMuted = value;\n    }\n/**\n * @return {?}\n */\nget defaultPlaybackRate(): number {\n        return this._mediaPlayer ? this._mediaPlayer.defaultPlaybackRate : 1;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset defaultPlaybackRate(value: number) {\n        this._mediaPlayer.defaultPlaybackRate = value;\n    }\n/**\n * @return {?}\n */\nget duration(): number {\n        return this._mediaPlayer ? this._mediaPlayer.duration : 0;\n    }\n/**\n * @return {?}\n */\nget ended(): boolean {\n        return this._mediaPlayer ? this._mediaPlayer.ended : false;\n    }\n/**\n * @return {?}\n */\nget loop(): boolean {\n        return this._mediaPlayer ? this._mediaPlayer.loop : false;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset loop(value: boolean) {\n        this._mediaPlayer.loop = value;\n    }\n/**\n * @return {?}\n */\nget muted(): boolean {\n        return this._mediaPlayer ? this._mediaPlayer.muted : false;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset muted(value: boolean) {\n        this._mediaPlayer.muted = value;\n    }\n/**\n * @return {?}\n */\nget networkState(): number {\n        return this._mediaPlayer.networkState;\n    }\n/**\n * @return {?}\n */\nget paused(): boolean {\n        return this._mediaPlayer ? this._mediaPlayer.paused : true;\n    }\n/**\n * @return {?}\n */\nget playbackRate(): number {\n        return this._mediaPlayer ? this._mediaPlayer.playbackRate : 1;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset playbackRate(value: number) {\n        this._mediaPlayer.playbackRate = value;\n    }\n/**\n * @return {?}\n */\nget played(): TimeRanges {\n        return this._mediaPlayer ? this._mediaPlayer.played : new TimeRanges();\n    }\n/**\n * @return {?}\n */\nget preload(): string {\n        return this._mediaPlayer ? this._mediaPlayer.preload : 'auto';\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset preload(value: string) {\n        this._mediaPlayer.preload = value;\n    }\n/**\n * @return {?}\n */\nget readyState(): number {\n        return this._mediaPlayer ? this._mediaPlayer.readyState : 0;\n    }\n/**\n * @return {?}\n */\nget seekable(): TimeRanges {\n        return this._mediaPlayer ? this._mediaPlayer.seekable : new TimeRanges();\n    }\n/**\n * @return {?}\n */\nget seeking(): boolean {\n        return this._mediaPlayer ? this._mediaPlayer.seeking : false;\n    }\n/**\n * @return {?}\n */\nget src(): string {\n        return this._mediaPlayer ? this._mediaPlayer.src : '';\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset src(value: string) {\n        this._mediaPlayer.src = value;\n    }\n/**\n * @return {?}\n */\nget textTracks(): TextTrackList {\n        return this._mediaPlayer ? this._mediaPlayer.textTracks : new TextTrackList();\n    }\n/**\n * @return {?}\n */\nget videoTracks(): VideoTrackList {\n        return this._mediaPlayer ? this._mediaPlayer.videoTracks : new VideoTrackList();\n    }\n/**\n * @return {?}\n */\nget volume(): number {\n        return this._mediaPlayer ? this._mediaPlayer.volume : 1;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset volume(value: number) {\n        this._mediaPlayer.volume = value;\n    }\n/**\n * @return {?}\n */\nget fullscreen(): boolean {\n        return this._mediaPlayer ? this._fullscreen : false;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset fullscreen(value: boolean) {\n        this._fullscreen = value;\n        this.fullscreenEvent.next(value);\n    }\n/**\n * @param {?} hostElement\n * @param {?} mediaPlayer\n * @return {?}\n */\nsetMediaPlayer(hostElement: HTMLElement, mediaPlayer: HTMLMediaElement): void {\n        this._hostElement = hostElement;\n        this._mediaPlayer = mediaPlayer;\n\n        this.initEvent.next(true);\n    }\n/**\n * Toggle playing state\n * @return {?}\n */\ntogglePlay(): void {\n\n        // prevent any action is not loaded\n        if (this.loaded === false) {\n            return;\n        }\n\n        if (this.paused) {\n            this.play();\n        } else {\n            this.pause();\n        }\n    }\n/**\n * Starts playing the audio/video\n * @return {?}\n */\nplay(): void {\n        this._mediaPlayer.play();\n    }\n/**\n * Pauses the currently playing audio/video\n * @return {?}\n */\npause(): void {\n        this._mediaPlayer.pause();\n    }\n/**\n * Re-loads the audio/video element\n * @return {?}\n */\nload(): void {\n        this._mediaPlayer.load();\n    }\n/**\n * Checks if the browser can play the specified audio/video type\n * @param {?} type\n * @return {?}\n */\ncanPlayType(type: string): string {\n        return this._mediaPlayer.canPlayType(type);\n    }\n/**\n * Adds a new text track to the audio/video\n * @param {?} kind\n * @param {?} label\n * @param {?} language\n * @return {?}\n */\naddTextTrack(kind: string, label: string, language: string): TextTrack {\n        return this._mediaPlayer.addTextTrack(kind, label, language);\n    }\n/**\n * Attempt to display media in fullscreen mode\n * @return {?}\n */\nrequestFullscreen(): void {\n\n        if (this._hostElement.requestFullscreen) {\n            this._hostElement.requestFullscreen();\n        } else if (this._hostElement.webkitRequestFullscreen) {\n            this._hostElement.webkitRequestFullscreen();\n        } else if (( /** @type {?} */((<any>this._hostElement))).msRequestFullscreen) {\n            ( /** @type {?} */((<any>this._hostElement))).msRequestFullscreen();\n        } else if (( /** @type {?} */((<any>this._hostElement))).mozRequestFullScreen) {\n            ( /** @type {?} */((<any>this._hostElement))).mozRequestFullScreen();\n        }\n    }\n/**\n * Exit full screen mode\n * @return {?}\n */\nexitFullscreen(): void {\n\n        if (( /** @type {?} */((<any>this._hostElement))).exitFullscreen) {\n            document.exitFullscreen();\n        } else if (document.webkitExitFullscreen) {\n            document.webkitExitFullscreen();\n        } else if (( /** @type {?} */((<any>document))).msExitFullscreen) {\n            ( /** @type {?} */((<any>document))).msExitFullscreen();\n        } else if (( /** @type {?} */((<any>document))).mozCancelFullScreen) {\n            ( /** @type {?} */((<any>document))).mozCancelFullScreen();\n        }\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nfullscreenChange(event: Event) {\n        this.fullscreen = ( /** @type {?} */((<any>document))).fullscreen || document.webkitIsFullScreen || ( /** @type {?} */((<any>document))).mozFullScreen || ( /** @type {?} */((<any>document))).msFullscreenElement !== null && ( /** @type {?} */((<any>document))).msFullscreenElement !== undefined;\n        this.fullscreenEvent.next(this.fullscreen);\n    }\n/**\n * Toggle Fullscreen State\n * @return {?}\n */\ntoggleFullscreen(): void {\n        if (this.fullscreen) {\n            this.exitFullscreen();\n        } else {\n            this.requestFullscreen();\n        }\n    }\n/**\n * Extract the frames from the video\n * @param {?} width\n * @param {?} height\n * @param {?} skip\n * @return {?}\n */\ngetFrames(width: number, height: number, skip: number): Observable<ExtractedFrame> {\n\n        if (this.type === 'video') {\n            return this._frameExtractionService.getFrameThumbnails(this.source, width, height, 0, this.duration, 10);\n        }\n\n        return Observable.from([]);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: FrameExtractionService, },\n];\n}\n\nfunction MediaPlayerService_tsickle_Closure_declarations() {\n/** @type {?} */\nMediaPlayerService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMediaPlayerService.ctorParameters;\n/** @type {?} */\nMediaPlayerService.prototype.source;\n/** @type {?} */\nMediaPlayerService.prototype.type;\n/** @type {?} */\nMediaPlayerService.prototype.loaded;\n/** @type {?} */\nMediaPlayerService.prototype.playing;\n/** @type {?} */\nMediaPlayerService.prototype.initEvent;\n/** @type {?} */\nMediaPlayerService.prototype.abortEvent;\n/** @type {?} */\nMediaPlayerService.prototype.canPlayEvent;\n/** @type {?} */\nMediaPlayerService.prototype.canPlayThroughEvent;\n/** @type {?} */\nMediaPlayerService.prototype.durationChangeEvent;\n/** @type {?} */\nMediaPlayerService.prototype.endedEvent;\n/** @type {?} */\nMediaPlayerService.prototype.errorEvent;\n/** @type {?} */\nMediaPlayerService.prototype.loadedDataEvent;\n/** @type {?} */\nMediaPlayerService.prototype.loadedMetadataEvent;\n/** @type {?} */\nMediaPlayerService.prototype.loadStartEvent;\n/** @type {?} */\nMediaPlayerService.prototype.pauseEvent;\n/** @type {?} */\nMediaPlayerService.prototype.playEvent;\n/** @type {?} */\nMediaPlayerService.prototype.playingEvent;\n/** @type {?} */\nMediaPlayerService.prototype.rateChangeEvent;\n/** @type {?} */\nMediaPlayerService.prototype.seekedEvent;\n/** @type {?} */\nMediaPlayerService.prototype.seekingEvent;\n/** @type {?} */\nMediaPlayerService.prototype.stalledEvent;\n/** @type {?} */\nMediaPlayerService.prototype.suspendEvent;\n/** @type {?} */\nMediaPlayerService.prototype.timeUpdateEvent;\n/** @type {?} */\nMediaPlayerService.prototype.volumeChangeEvent;\n/** @type {?} */\nMediaPlayerService.prototype.waitingEvent;\n/** @type {?} */\nMediaPlayerService.prototype.mediaClickEvent;\n/** @type {?} */\nMediaPlayerService.prototype.fullscreenEvent;\n/** @type {?} */\nMediaPlayerService.prototype.quietModeEvent;\n/** @type {?} */\nMediaPlayerService.prototype.progressEvent;\n/** @type {?} */\nMediaPlayerService.prototype._mediaPlayer;\n/** @type {?} */\nMediaPlayerService.prototype._hostElement;\n/** @type {?} */\nMediaPlayerService.prototype._fullscreen;\n/** @type {?} */\nMediaPlayerService.prototype._quietMode;\n/** @type {?} */\nMediaPlayerService.prototype._frameExtractionService;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable } from '@angular/core';\nimport { Http, ResponseContentType } from '@angular/http';\nimport { Observable } from 'rxjs/Observable';\nimport { Observer } from 'rxjs/Observer';\nimport'rxjs/add/observable/of';\nexport class AudioService {\nprivate _audioBuffer: AudioBuffer;\nprivate _audioBufferSource: AudioBufferSourceNode;\nprivate _audioContext: AudioContext;\nprivate _gainNode: GainNode;\nprivate _analyserNode: AnalyserNode;\n/**\n * @param {?} _http\n */\nconstructor(private _http: Http) { }\n/**\n * @param {?} mediaElement\n * @return {?}\n */\ngetAudioFileMetadata(mediaElement: HTMLMediaElement): Observable<AudioMetadata> {\n        return Observable.create((observer: Observer<AudioMetadata>) => {\n            this._http.request(mediaElement.src, { responseType: ResponseContentType.Blob }).subscribe(response => {\n\n                let /** @type {?} */ filename = mediaElement.src.substring(mediaElement.src.lastIndexOf('/') + 1);\n                let /** @type {?} */ extension = mediaElement.src.substring(mediaElement.src.lastIndexOf('.') + 1).toLowerCase();\n                let /** @type {?} */ blob = response.blob();\n                let /** @type {?} */ description;\n\n                switch (extension) {\n                    case 'mp3':\n                        description = 'MPEG audio layer 3 file';\n                        break;\n\n                    case 'wma':\n                        description = 'Windows media audio file';\n                        break;\n\n                    case 'wav':\n                        description = 'WAVE audio file';\n                        break;\n\n                    case 'ogg':\n                        description = 'Ogg Vorbis file';\n                        break;\n\n                    case 'aac':\n                        description = 'Advanced audio coding file';\n                        break;\n\n                    case 'midi':\n                        description = 'Musical instrument digital interface file';\n                        break;\n\n                    default:\n                        description = 'Audio file';\n                        break;\n                }\n\n                observer.next({\n                    filename: filename,\n                    extension: extension,\n                    description: description,\n                    size: blob.size\n                });\n            });\n        });\n    }\n/**\n * @param {?} url\n * @return {?}\n */\ngetWaveformFromUrl(url: string): Observable<Float32Array[]> {\n\n        // if audio context is not support return a stream of empty data\n        if (!( /** @type {?} */((<any>window))).AudioContext) {\n            return Observable.of<Float32Array[]>([new Float32Array(0)]);\n        }\n\n        this._audioContext = new AudioContext();\n        this.createVolumeNode();\n        this.createAnalyserNode();\n\n        return Observable.create((observer: Observer<Float32Array[]>) => {\n\n            // load the media from the URL provided\n            this._http.request(url, { responseType: ResponseContentType.ArrayBuffer }).subscribe(response => {\n                this.getAudioBuffer(response.arrayBuffer()).subscribe(audioBuffer => {\n\n                    // create the buffer source\n                    this.createBufferSource(audioBuffer);\n\n                    let /** @type {?} */ dataPoints: Float32Array[] = [];\n                    let /** @type {?} */ channels = this._audioBuffer.numberOfChannels;\n\n                    // extract the data from each channel\n                    for (let /** @type {?} */ channelIdx = 0; channelIdx < channels; channelIdx++) {\n                        dataPoints[channelIdx] = this._audioBuffer.getChannelData(channelIdx);\n                    }\n\n                    observer.next(dataPoints);\n                    observer.complete();\n\n                    // cleanup after ourselves\n                    dataPoints = null;\n                }, (error) => observer.error(error));\n            }, (error) => observer.error(error));\n        });\n    }\n/**\n * @param {?=} channels\n * @param {?=} skip\n * @return {?}\n */\ngetWaveformPoints(channels: Float32Array[] = [], skip: number = 1000): WaveformPoint[] {\n\n        let /** @type {?} */ waveform: WaveformPoint[] = [];\n        let /** @type {?} */ duration = channels.length > 0 ? channels[0].length : 0;\n\n        // convert each channel data to a series of waveform points\n        for (let /** @type {?} */ idx = 0; idx < duration; idx += skip) {\n\n            // get all the channel data for a specific point\n            let /** @type {?} */ points = channels.map(channel => channel[idx]);\n\n            // find the minimum point and maximum points at each position across all channels\n            waveform.push({\n                min: points.reduce((previous, current) => current < previous ? current : previous),\n                max: points.reduce((previous, current) => current > previous ? current : previous)\n            });\n        }\n\n        return waveform;\n    }\n/**\n * @param {?} arrayBuffer\n * @return {?}\n */\nprivate getAudioBuffer(arrayBuffer: ArrayBuffer): Observable<AudioBuffer> {\n        return Observable.create((observer: Observer<AudioBuffer>) => {\n            this.getOfflineAudioContext().decodeAudioData(arrayBuffer, (audioBuffer: AudioBuffer) => {\n                observer.next(audioBuffer);\n                observer.complete();\n            }, (error) => observer.error(error));\n        });\n    }\n/**\n * @return {?}\n */\nprivate getOfflineAudioContext(): OfflineAudioContext {\n        return new OfflineAudioContext(1, 2, this._audioContext.sampleRate || 44100);\n    }\n/**\n * @param {?} audioBuffer\n * @return {?}\n */\nprivate createBufferSource(audioBuffer: AudioBuffer): void {\n        this.disconnectSource();\n\n        this._audioBuffer = audioBuffer;\n        this._audioBufferSource = this._audioContext.createBufferSource();\n        this._audioBufferSource.buffer = this._audioBuffer;\n        this._audioBufferSource.connect(this._analyserNode);\n    }\n/**\n * @return {?}\n */\nprivate createVolumeNode(): void {\n        this._gainNode = this._audioContext.createGain();\n        this._gainNode.connect(this._audioContext.destination);\n    }\n/**\n * @return {?}\n */\nprivate createAnalyserNode(): void {\n        this._analyserNode = this._audioContext.createAnalyser();\n        this._analyserNode.connect(this._gainNode);\n    }\n/**\n * @return {?}\n */\nprivate disconnectSource(): void {\n        if (this._audioBufferSource) {\n            this._audioBufferSource.disconnect();\n        }\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Http, },\n];\n}\n\nfunction AudioService_tsickle_Closure_declarations() {\n/** @type {?} */\nAudioService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nAudioService.ctorParameters;\n/** @type {?} */\nAudioService.prototype._audioBuffer;\n/** @type {?} */\nAudioService.prototype._audioBufferSource;\n/** @type {?} */\nAudioService.prototype._audioContext;\n/** @type {?} */\nAudioService.prototype._gainNode;\n/** @type {?} */\nAudioService.prototype._analyserNode;\n/** @type {?} */\nAudioService.prototype._http;\n}\n\n\nexport interface WaveformPoint {\n    min: number;\n    max: number;\n}\n\nexport interface AudioMetadata {\n    filename: string;\n    extension: string;\n    description: string;\n    size: number;\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { HttpModule } from '@angular/http';\nimport { AudioService } from './audio.service';\nexport class AudioServiceModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [ HttpModule ],\n    providers: [AudioService]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction AudioServiceModule_tsickle_Closure_declarations() {\n/** @type {?} */\nAudioServiceModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nAudioServiceModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Input, ViewChild, ElementRef, AfterViewInit, OnDestroy } from '@angular/core';\nimport { ExtractedFrame, FrameExtractionService } from '../../services/frame-extraction/frame-extraction.service';\nimport { MediaPlayerService } from './media-player.service';\nimport { Subject } from 'rxjs/Subject';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { Observable } from 'rxjs/Observable';\nimport { Observer } from 'rxjs/Observer';\nimport { AudioService, AudioMetadata } from '../../services/audio/index';\nimport { Subscription } from 'rxjs/Subscription';\nimport'rxjs/add/observable/from';\nimport'rxjs/add/operator/switchMap';\nexport class MediaPlayerComponent implements AfterViewInit, OnDestroy {\nprivate _playerRef: ElementRef;\nprivate _trackBarRef: ElementRef;\n\n    hovering: boolean = false;\n    audioMetadata: Observable<AudioMetadata>;\nprivate _hover$: Subscription;\nprivate _clicked$: Subscription;\nprivate _paused$: Subscription;\nprivate _playing$: Subscription;\nprivate _loading$: Subscription;\n/**\n * @return {?}\n */\nget source(): string {\n        return this.mediaPlayerService.source;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset source(value: string) {\n        this.mediaPlayerService.source = value;\n    }\n/**\n * @return {?}\n */\nget type(): MediaPlayerType {\n        return this.mediaPlayerService.type;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset type(value: MediaPlayerType) {\n        this.mediaPlayerService.type = value;\n    }\n/**\n * @return {?}\n */\nget quietMode(): boolean {\n        return this.mediaPlayerService.quietMode;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset quietMode(value: boolean) {\n        this.mediaPlayerService.quietMode = value;\n    }\n/**\n * @param {?} mediaPlayerService\n * @param {?} _audioService\n * @param {?} _elementRef\n */\nconstructor(public mediaPlayerService: MediaPlayerService,\nprivate _audioService: AudioService,\nprivate _elementRef: ElementRef) {\n\n        // show controls when hovering and in quiet mode\n        this._hover$ = Observable.fromEvent(this._elementRef.nativeElement, 'mousemove').switchMap((event: MouseEvent) => {\n            this.hovering = true;         \n            return Observable.of(event);\n        }).debounceTime(2000).subscribe(() => this.hovering = false);\n    }\n/**\n * @return {?}\n */\nngAfterViewInit(): void {\n        this.mediaPlayerService.setMediaPlayer(this._elementRef.nativeElement, this._playerRef.nativeElement);\n\n        this.audioMetadata = this._audioService.getAudioFileMetadata(this._playerRef.nativeElement);\n        this._playing$ = this.mediaPlayerService.playingEvent.subscribe(event => this.mediaPlayerService.playing.next(true));\n        this._paused$ = this.mediaPlayerService.pauseEvent.subscribe(event => this.mediaPlayerService.playing.next(false));\n        this._clicked$ = this.mediaPlayerService.mediaClickEvent.subscribe(() => this.mediaPlayerService.togglePlay());\n        this._loading$ = this.mediaPlayerService.loadedMetadataEvent.subscribe(() => this.mediaPlayerService.loaded = true);\n    }\n/**\n * @return {?}\n */\nngOnDestroy(): void {\n        this._hover$.unsubscribe();\n        this._playing$.unsubscribe();\n        this._paused$.unsubscribe();\n        this._clicked$.unsubscribe();\n        this._loading$.unsubscribe();\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-media-player',\n    template: `\n      <div class=\"video-player-container\" *ngIf=\"type === 'video'\">\n\n          <video class=\"video-player\" #player [src]=\"source\" (abort)=\"mediaPlayerService.abortEvent.next()\" (canplay)=\"mediaPlayerService.canPlayEvent.next()\"\n              (canplaythrough)=\"mediaPlayerService.canPlayThroughEvent.next()\" (durationchange)=\"mediaPlayerService.durationChangeEvent.next(player.duration)\" (ended)=\"mediaPlayerService.endedEvent.next()\"\n              (error)=\"mediaPlayerService.errorEvent.next($event)\" (loadeddata)=\"mediaPlayerService.loadedDataEvent.next($event)\" (loadedmetadata)=\"mediaPlayerService.loadedMetadataEvent.next($event)\"\n              (loadstart)=\"mediaPlayerService.loadStartEvent.next()\" (pause)=\"mediaPlayerService.pauseEvent.next()\" (play)=\"mediaPlayerService.playEvent.next()\" (playing)=\"mediaPlayerService.playingEvent.next(!player.paused)\"\n              (ratechange)=\"mediaPlayerService.rateChangeEvent.next(player.playbackRate)\" (seeked)=\"mediaPlayerService.seekedEvent.next(player.currentTime)\" (seeking)=\"mediaPlayerService.seekingEvent.next(player.currentTime)\"\n              (stalled)=\"mediaPlayerService.stalledEvent.next()\" (suspend)=\"mediaPlayerService.suspendEvent.next()\" (timeupdate)=\"mediaPlayerService.timeUpdateEvent.next(player.currentTime)\"\n              (volumechange)=\"mediaPlayerService.volumeChangeEvent.next(player.volume)\" (waiting)=\"mediaPlayerService.waitingEvent.next()\" (click)=\"mediaPlayerService.mediaClickEvent.next($event)\"></video>\n\n          <div class=\"video-overlay\" [class.playing]=\"mediaPlayerService.playing | async\">\n              <svg class=\"play-graphic\" x=\"0px\" y=\"0px\" viewBox=\"0 0 64 64\">\n                  <circle class=\"play-circle\" cx=\"32.2\" cy=\"31.8\" r=\"31.8\" />\n                  <polygon class=\"play-triangle\" points=\"23,14.1 23,50.8 48.3,32.5\" />\n              </svg>\n          </div>\n\n      </div>\n\n\n      <div class=\"audio-player\" *ngIf=\"type === 'audio'\">\n\n          <svg width=\"24px\" height=\"24px\" viewBox=\"0 0 24 24\">\n              <g stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\n                  <g transform=\"translate(-98.000000, -458.000000)\">\n                      <g transform=\"translate(98.000000, 458.000000)\">\n                          <path d=\"M4.5,0.5 L18.0435308,0.5 L23.5,6.22251502 L23.5,23.5 L4.5,23.5 L4.5,0.5 Z\" fill=\"#CCEAE2\"></path>\n                          <path d=\"M4.5,8 L4.5,0.5 L18,0.5 L23.5,6 L23.5,23.5 L18,23.5\" stroke=\"#60798D\" fill=\"#CCEAE2\"></path>\n                          <path d=\"M4,13.5 L0.5,13.5 L0.5,18.5 L4,18.5 L9.5,22.5 L9.5,9.5 L4,13.5 Z\" stroke=\"#60798D\" fill=\"#85D2BE\"></path>\n                          <path d=\"M11.5,12.5137939 C13.7576225,12.5137939 14.5,14.3709236 14.5,16 C14.5,17.6849236 13.7089152,19.5420532 11.5,19.5420532\"\n                              stroke=\"#60798D\"></path>\n                          <path d=\"M11.5,9 C15.8037643,9.04168701 18.5,11.6604805 18.5,16 C18.5,20.3395195 15.8804302,23.0079956 11.5,23\" stroke=\"#60798D\"></path>\n                          <path d=\"M17.5219116,0.761413574 L17.5219116,6 L23,6\" stroke=\"#60798D\" fill=\"#85D2BE\"></path>\n                      </g>\n                  </g>\n              </g>\n          </svg>\n\n          <p class=\"audio-file-name\">{{ (audioMetadata | async)?.filename }}</p>\n          <p class=\"audio-file-format\">{{ (audioMetadata | async)?.description }}</p>\n          <p class=\"audio-file-size\">{{ (audioMetadata | async)?.size | fileSize }}</p>\n\n          <audio #player [src]=\"source\" (abort)=\"mediaPlayerService.abortEvent.next()\" (canplay)=\"mediaPlayerService.canPlayEvent.next(true)\"\n              (canplaythrough)=\"mediaPlayerService.canPlayThroughEvent.next(true)\" (durationchange)=\"mediaPlayerService.durationChangeEvent.next(player.duration)\" (ended)=\"mediaPlayerService.endedEvent.next()\"\n              (error)=\"mediaPlayerService.errorEvent.next($event)\" (loadeddata)=\"mediaPlayerService.loadedDataEvent.next($event)\" (loadedmetadata)=\"mediaPlayerService.loadedMetadataEvent.next($event)\"\n              (loadstart)=\"mediaPlayerService.loadStartEvent.next()\" (pause)=\"mediaPlayerService.pauseEvent.next()\" (play)=\"mediaPlayerService.playEvent.next()\" (playing)=\"mediaPlayerService.playingEvent.next(!player.paused)\"\n              (ratechange)=\"mediaPlayerService.rateChangeEvent.next(player.playbackRate)\" (seeked)=\"mediaPlayerService.seekedEvent.next(player.currentTime)\" (seeking)=\"mediaPlayerService.seekingEvent.next(player.currentTime)\"\n              (stalled)=\"mediaPlayerService.stalledEvent.next()\" (suspend)=\"mediaPlayerService.suspendEvent.next()\" (timeupdate)=\"mediaPlayerService.timeUpdateEvent.next(player.currentTime)\"\n              (volumechange)=\"mediaPlayerService.volumeChangeEvent.next(player.volume)\" (waiting)=\"mediaPlayerService.waitingEvent.next()\" (click)=\"mediaPlayerService.mediaClickEvent.next($event)\"></audio>\n      </div>\n\n      <div class=\"control-bar\">\n          <ux-media-player-timeline></ux-media-player-timeline>\n          <ux-media-player-controls></ux-media-player-controls>\n      </div>\n    `,\n    providers: [ MediaPlayerService ],\n    host: {\n        'tabindex': '0',\n        '(keydown.Space)': 'mediaPlayerService.togglePlay()',\n        '[class.standard]': '!mediaPlayerService.fullscreen',\n        '[class.fullscreen]': 'mediaPlayerService.fullscreen',\n        '[class.quiet]': 'quietMode && type === \"video\" || mediaPlayerService.fullscreen',\n        '[class.hover]': 'hovering',\n        '[class.video]': 'type === \"video\"',\n        '[class.audio]': 'type === \"audio\"',\n        '(mouseenter)': 'hovering = true',\n        '(mouseleave)': 'hovering = false',\n        '(document:webkitfullscreenchange)': 'mediaPlayerService.fullscreenChange($event)',\n        '(document:mozfullscreenchange)': 'mediaPlayerService.fullscreenChange($event)',\n        '(document:MSFullscreenChange)': 'mediaPlayerService.fullscreenChange($event)'\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: MediaPlayerService, },\n{type: AudioService, },\n{type: ElementRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'_playerRef': [{ type: ViewChild, args: ['player', ] },],\n'_trackBarRef': [{ type: ViewChild, args: ['trackBar', ] },],\n'source': [{ type: Input },],\n'type': [{ type: Input },],\n'quietMode': [{ type: Input },],\n};\n}\n\nfunction MediaPlayerComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nMediaPlayerComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMediaPlayerComponent.ctorParameters;\n/** @type {?} */\nMediaPlayerComponent.propDecorators;\n/** @type {?} */\nMediaPlayerComponent.prototype._playerRef;\n/** @type {?} */\nMediaPlayerComponent.prototype._trackBarRef;\n/** @type {?} */\nMediaPlayerComponent.prototype.hovering;\n/** @type {?} */\nMediaPlayerComponent.prototype.audioMetadata;\n/** @type {?} */\nMediaPlayerComponent.prototype._hover$;\n/** @type {?} */\nMediaPlayerComponent.prototype._clicked$;\n/** @type {?} */\nMediaPlayerComponent.prototype._paused$;\n/** @type {?} */\nMediaPlayerComponent.prototype._playing$;\n/** @type {?} */\nMediaPlayerComponent.prototype._loading$;\n/** @type {?} */\nMediaPlayerComponent.prototype.mediaPlayerService;\n/** @type {?} */\nMediaPlayerComponent.prototype._audioService;\n/** @type {?} */\nMediaPlayerComponent.prototype._elementRef;\n}\n\n\nexport type MediaPlayerType = 'video' | 'audio';\n\nexport interface MediaPlayerBuffer {\n    start: number;\n    end: number;\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, Host } from '@angular/core';\nimport { MediaPlayerService } from '../media-player.service';\nexport class MediaPlayerBaseExtensionDirective {\n/**\n * @param {?} mediaPlayerService\n */\nconstructor(public mediaPlayerService: MediaPlayerService) { }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: '[mediaPlayerBaseExtension]' \n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: MediaPlayerService, },\n];\n}\n\nfunction MediaPlayerBaseExtensionDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nMediaPlayerBaseExtensionDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMediaPlayerBaseExtensionDirective.ctorParameters;\n/** @type {?} */\nMediaPlayerBaseExtensionDirective.prototype.mediaPlayerService;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, OnInit, ViewChild, ElementRef, AfterViewInit, OnDestroy } from '@angular/core';\nimport { MediaPlayerBaseExtensionDirective } from '../base-extension.directive';\nimport { Observable } from 'rxjs/Observable';\nimport'rxjs/add/operator/switchMap';\nimport'rxjs/add/operator/takeUntil';\nimport'rxjs/add/observable/fromEvent';\nimport { Subscription } from 'rxjs/Subscription';\nexport class MediaPlayerTimelineExtensionComponent extends MediaPlayerBaseExtensionDirective implements OnInit, AfterViewInit, OnDestroy {\n\n     thumb: ElementRef;\n     timelineRef: ElementRef;\n\n    current: number = 0;\n    position: number = 0;\n    duration: number = 0;\n    buffered: MediaPlayerBuffered[] = [];\n    mouseDown: boolean = false;\n    quietMode: boolean = false;\n    fullscreen: boolean = false;\nprivate _mouseEventSubscription: Subscription;\n\n    scrub = {\n        visible: false,\n        position: 0,\n        time: 0\n    };\n/**\n * @return {?}\n */\nngOnInit(): void {\n\n        // watch for changes to the current time\n        this.mediaPlayerService.durationChangeEvent.subscribe(duration => this.duration = duration);\n        this.mediaPlayerService.quietModeEvent.subscribe(quietMode => this.quietMode = quietMode);\n        this.mediaPlayerService.fullscreenEvent.subscribe(fullscreen => {\n            this.fullscreen = fullscreen;\n            this.scrub.position = 0;\n        });\n\n        this.mediaPlayerService.timeUpdateEvent.subscribe(current => {\n            this.current = current;\n            this.position = (this.current / this.duration) * 100;\n        });\n\n        this.mediaPlayerService.progressEvent.subscribe((buffered: TimeRanges) => {\n            this.buffered = [];\n\n            for (let /** @type {?} */ idx = 0; idx < buffered.length; idx++) {\n                this.buffered.push({ start: (buffered.start(idx) / this.duration) * 100, end: (buffered.end(idx) / this.duration) * 100 });\n            }\n        });\n    }\n/**\n * @return {?}\n */\nngAfterViewInit(): void {\n        let /** @type {?} */ mousedown$ = Observable.fromEvent(this.thumb.nativeElement, 'mousedown');\n        let /** @type {?} */ mousemove$ = Observable.fromEvent(document, 'mousemove');\n        let /** @type {?} */ mouseup$ = Observable.fromEvent(document, 'mouseup');\n\n        this._mouseEventSubscription = mousedown$.switchMap(event => mousemove$.takeUntil(mouseup$)).subscribe(event => {\n            this.scrub.visible = false;\n        });\n    }\n/**\n * @return {?}\n */\nngOnDestroy() {\n        this._mouseEventSubscription.unsubscribe();\n    }\n/**\n * @param {?=} event\n * @return {?}\n */\nupdateScrub(event?: MouseEvent): void {\n\n        let /** @type {?} */ target = /** @type {?} */(( event.target as HTMLElement));\n      \n        if (target.classList.contains('media-progress-bar-thumb')) {\n            return;\n        }\n\n        let /** @type {?} */ timeline = /** @type {?} */(( this.timelineRef.nativeElement as HTMLDivElement));\n        let /** @type {?} */ bounds = timeline.getBoundingClientRect();\n\n        this.scrub.position = event.offsetX;\n        this.scrub.time = (event.offsetX / bounds.width) * this.mediaPlayerService.duration;\n\n        if (this.mouseDown) {\n            this.mediaPlayerService.pause();\n            this.mediaPlayerService.currentTime = this.scrub.time;\n        }\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-media-player-timeline',\n    template: `\n      <p class=\"current-time\">{{ current | duration }}</p>\n\n      <div #timeline class=\"timeline-bar\" (mouseenter)=\"scrub.visible = true; pop.show()\" (mouseleave)=\"scrub.visible = false; pop.hide()\"\n          (mousemove)=\"updateScrub($event)\" (mouseup)=\"updateScrub($event)\" (mousedown)=\"mouseDown = true; $event.preventDefault()\">\n\n          <div class=\"buffered-bar\" *ngFor=\"let buffer of buffered\" [style.left.%]=\"buffer.start\" [style.width.%]=\"buffer.end - buffer.start\"></div>\n\n          <div class=\"media-progress-bar\" [style.width.%]=\"position\">\n              <div #progressThumb class=\"media-progress-bar-thumb\" (mouseenter)=\"scrub.visible = false; pop.hide(); $event.stopPropagation()\"\n                  (mouseleave)=\"scrub.visible = true; pop.show(); $event.stopPropagation()\"></div>\n          </div>\n\n          <div class=\"scrub-handle\"\n               [class.scrub-handle-hidden]=\"!scrub.visible\"\n               [style.left.px]=\"scrub.position\"\n               [uxTooltip]=\"popTemplate\"\n               placement=\"top\"\n               [showTriggers]=\"[]\"\n               [hideTriggers]=\"[]\"\n               #pop=\"ux-tooltip\"\n               [tooltipDelay]=\"100\"\n               [tooltipDisabled]=\"duration === 0\"></div>\n      </div>\n\n      <p class=\"duration-time\">{{ duration | duration }}</p>\n\n      <ng-template #popTemplate>\n          <span>{{ scrub.time | duration }}</span>\n      </ng-template>\n    `,\n    host: {\n        '(document:mouseup)': 'mouseDown = false',\n        '[class.quiet]': 'quietMode || fullscreen'\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'thumb': [{ type: ViewChild, args: ['progressThumb', ] },],\n'timelineRef': [{ type: ViewChild, args: ['timeline', ] },],\n};\n}\n\nfunction MediaPlayerTimelineExtensionComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nMediaPlayerTimelineExtensionComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMediaPlayerTimelineExtensionComponent.ctorParameters;\n/** @type {?} */\nMediaPlayerTimelineExtensionComponent.propDecorators;\n/** @type {?} */\nMediaPlayerTimelineExtensionComponent.prototype.thumb;\n/** @type {?} */\nMediaPlayerTimelineExtensionComponent.prototype.timelineRef;\n/** @type {?} */\nMediaPlayerTimelineExtensionComponent.prototype.current;\n/** @type {?} */\nMediaPlayerTimelineExtensionComponent.prototype.position;\n/** @type {?} */\nMediaPlayerTimelineExtensionComponent.prototype.duration;\n/** @type {?} */\nMediaPlayerTimelineExtensionComponent.prototype.buffered;\n/** @type {?} */\nMediaPlayerTimelineExtensionComponent.prototype.mouseDown;\n/** @type {?} */\nMediaPlayerTimelineExtensionComponent.prototype.quietMode;\n/** @type {?} */\nMediaPlayerTimelineExtensionComponent.prototype.fullscreen;\n/** @type {?} */\nMediaPlayerTimelineExtensionComponent.prototype._mouseEventSubscription;\n/** @type {?} */\nMediaPlayerTimelineExtensionComponent.prototype.scrub;\n}\n\n\nexport interface MediaPlayerBuffered {\n    start: number;\n    end: number;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, OnInit, HostListener, ElementRef, ViewChild } from '@angular/core';\nimport { MediaPlayerBaseExtensionDirective } from '../base-extension.directive';\nimport { Observable } from 'rxjs/Observable';\nimport'rxjs/add/observable/timer';\nexport class MediaPlayerControlsExtensionComponent extends MediaPlayerBaseExtensionDirective implements OnInit {\n\n    playing: boolean;\n    quietMode: boolean;\n    fullscreen: boolean = false;\n    volumeActive: boolean = false;\n    volumeDragging: boolean = false;\n\n     volumeIcon: ElementRef;\n     volumeSlider: ElementRef;\n     volumeContainer: ElementRef;\nprivate _volume: number = 50;\nprivate _previousVolume = 50;\n/**\n * @return {?}\n */\nget volume(): number {\n        return this._volume;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset volume(value: number) {\n\n        if (value === 0 && this._volume !== 0) {\n            this._previousVolume = this._volume;\n        }\n        \n        this._volume = Math.min(Math.max(value, 0), 100);\n        this.mediaPlayerService.volume = this._volume / 100;\n    }\n/**\n * @return {?}\n */\nngOnInit(): void {\n        this.mediaPlayerService.playEvent.subscribe(_ => this.playing = true);\n        this.mediaPlayerService.pauseEvent.subscribe(_ => this.playing = false);\n        this.mediaPlayerService.quietModeEvent.subscribe(quietMode => this.quietMode = quietMode);\n        this.mediaPlayerService.volumeChangeEvent.subscribe(volume => this.volume = volume * 100);\n        this.mediaPlayerService.initEvent.debounceTime(1).filter(init => init === true).subscribe(() => this.volume = this.mediaPlayerService.volume * 100);\n        this.mediaPlayerService.fullscreenEvent.subscribe(fullscreen => this.fullscreen = fullscreen);\n\n        let /** @type {?} */ mouseenter$ = Observable.fromEvent(this.volumeIcon.nativeElement, 'mouseenter');\n        let /** @type {?} */ mouseenterContainer$ = Observable.fromEvent(this.volumeContainer.nativeElement, 'mouseenter');\n        let /** @type {?} */ mouseleaveContainer$ = Observable.fromEvent(this.volumeContainer.nativeElement, 'mouseleave');\n\n        mouseenter$.subscribe(() => this.volumeActive = true);\n        mouseleaveContainer$.switchMap(() => Observable.timer(1500).takeUntil(mouseenterContainer$)).subscribe(() => this.volumeActive = false);\n    }\n/**\n * @return {?}\n */\ntoggleMute(): void {\n        if (this.volume === 0) {\n            this.volume = this._previousVolume;\n        } else {\n            this.volume = 0;\n        }\n    }\n/**\n * @return {?}\n */\ntogglePlay(): void {\n        if (this.playing) {\n            this.mediaPlayerService.pause();\n        } else {\n            this.mediaPlayerService.play();\n        }\n    }\n/**\n * @return {?}\n */\nsetFullscreen(): void {\n        this.mediaPlayerService.toggleFullscreen();\n    }\n/**\n * @return {?}\n */\ngoToStart(): void {\n        this.mediaPlayerService.currentTime = 0;\n    }\n/**\n * @return {?}\n */\ngoToEnd(): void {\n        this.mediaPlayerService.currentTime = this.mediaPlayerService.duration;\n    }\n/**\n * @param {?} event\n * @return {?}\n */\ndragStart(event: MouseEvent): void {\n        event.preventDefault();\n        this.volumeDragging = true;\n\n        let /** @type {?} */ thumb = /** @type {?} */(( event.target as HTMLDivElement));\n        thumb.focus();\n    }\n/**\n * @param {?} event\n * @return {?}\n */\ndragMove(event: MouseEvent): void {\n        if (!this.volumeDragging) {\n            return;\n        }\n\n        event.preventDefault();\n\n        let /** @type {?} */ slider = /** @type {?} */(( this.volumeSlider.nativeElement as HTMLDivElement));\n        let /** @type {?} */ bounds = slider.getBoundingClientRect();\n\n        let /** @type {?} */ x = Math.min(bounds.width, Math.max(0, event.pageX - bounds.left));\n\n        // convert to a percentage\n        this.volume = (x / bounds.width) * 100;\n    }\n/**\n * @return {?}\n */\ndragEnd(): void {\n        this.volumeDragging = false;        \n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-media-player-controls',\n    template: `\n      <div class=\"volume-container\">\n\n          <div class=\"volume-slider-container\" #volumeContainer [class.active]=\"volumeActive\">\n              <div class=\"volume-slider-icon\" #volumeIcon>\n                  <span class=\"hpe-icon\" [class.hpe-volume-mute]=\"volume === 0\" [class.hpe-volume-low]=\"volume > 0 && volume <= 70\" [class.hpe-volume]=\"volume > 70\" [uxTooltip]=\"muteTooltip\" (click)=\"toggleMute()\"></span>\n              </div>\n        \n              <div class=\"volume-slider-node\">\n                  <div class=\"volume-slider\" #volumeSlider>\n                      <div class=\"volume-track-lower\" [style.width.%]=\"volume\"></div>\n                      <div class=\"volume-slider-thumb\" (mousedown)=\"dragStart($event)\" [style.left.%]=\"volume\" tabindex=\"0\" (keydown.ArrowRight)=\"volume = volume + 10\" (keydown.ArrowLeft)=\"volume = volume - 10\"></div>\n                  </div>\n              </div>\n          </div>\n      </div>\n\n      <div class=\"spacer\"></div>\n\n      <svg viewBox=\"0 0 51.5 64\" width=\"14\" height=\"17\" class=\"control-button\" (click)=\"goToStart()\">\n          <rect x=\"0\" y=\"0\" width=\"7.5\" height=\"64\" />\n          <polygon points=\"51.5,64 51.5,0 7.4,32 \" />\n      </svg>\n\n      <svg viewBox=\"0 0 45 64\" width=\"20\" height=\"29\" class=\"control-button\" *ngIf=\"!playing\" (click)=\"togglePlay()\">\n          <polygon points=\"0.4,0 0.4,64 44.6,32\" />\n      </svg>\n\n      <svg viewBox=\"0 0 43 56.9\" class=\"control-button\" width=\"20\" height=\"29\" *ngIf=\"playing\" (click)=\"togglePlay()\">\n          <rect y=\"0.1\" width=\"15.7\" height=\"56.9\" />\n          <rect x=\"27.3\" y=\"0.1\" width=\"15.7\" height=\"56.9\" />\n      </svg>\n\n      <svg viewBox=\"0 0 51.5 64\" width=\"14\" height=\"17\" class=\"control-button\" (click)=\"goToEnd()\">\n          <rect x=\"44.1\" y=\"0\" width=\"7.5\" height=\"64\" />\n          <polygon points=\"0,64 0,0 44.1,32 \" />\n      </svg>\n\n      <div class=\"spacer\"></div>\n\n      <span class=\"hpe-icon\" *ngIf=\"mediaPlayerService.type !== 'audio'\" [class.hpe-expand]=\"!mediaPlayerService.fullscreen\" [class.hpe-contract]=\"mediaPlayerService.fullscreen\"\n          (click)=\"setFullscreen()\"></span>\n\n      <ng-template #muteTooltip>{{ volume === 0 ? 'Unmute' : 'Mute' }}</ng-template>\n    `,\n    host: {\n        '[class.quiet]': 'quietMode || fullscreen'\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'volumeIcon': [{ type: ViewChild, args: ['volumeIcon', ] },],\n'volumeSlider': [{ type: ViewChild, args: ['volumeSlider', ] },],\n'volumeContainer': [{ type: ViewChild, args: ['volumeContainer', ] },],\n'dragMove': [{ type: HostListener, args: ['document:mousemove', ['$event'], ] },],\n'dragEnd': [{ type: HostListener, args: ['document:mouseup', ] },],\n};\n}\n\nfunction MediaPlayerControlsExtensionComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nMediaPlayerControlsExtensionComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMediaPlayerControlsExtensionComponent.ctorParameters;\n/** @type {?} */\nMediaPlayerControlsExtensionComponent.propDecorators;\n/** @type {?} */\nMediaPlayerControlsExtensionComponent.prototype.playing;\n/** @type {?} */\nMediaPlayerControlsExtensionComponent.prototype.quietMode;\n/** @type {?} */\nMediaPlayerControlsExtensionComponent.prototype.fullscreen;\n/** @type {?} */\nMediaPlayerControlsExtensionComponent.prototype.volumeActive;\n/** @type {?} */\nMediaPlayerControlsExtensionComponent.prototype.volumeDragging;\n/** @type {?} */\nMediaPlayerControlsExtensionComponent.prototype.volumeIcon;\n/** @type {?} */\nMediaPlayerControlsExtensionComponent.prototype.volumeSlider;\n/** @type {?} */\nMediaPlayerControlsExtensionComponent.prototype.volumeContainer;\n/** @type {?} */\nMediaPlayerControlsExtensionComponent.prototype._volume;\n/** @type {?} */\nMediaPlayerControlsExtensionComponent.prototype._previousVolume;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nexport class DurationPipe implements PipeTransform {\n/**\n * @param {?} seconds\n * @return {?}\n */\ntransform(seconds: number): any {\n\n        let /** @type {?} */ minutes = Math.floor(seconds / 60);\n        let /** @type {?} */ hours = Math.floor(minutes / 60);\n        let /** @type {?} */ days = Math.floor(hours / 24);\n\n        hours = hours - (days * 24);\n        minutes = minutes - (days * 24 * 60) - (hours * 60);\n        seconds = Math.floor(seconds - (days * 24 * 60 * 60) - (hours * 60 * 60) - (minutes * 60));\n\n        if (hours > 0) {\n            return `${this.pad(hours)}:${this.pad(minutes)}:${this.pad(seconds)}`;\n        } else {\n            return `${this.pad(minutes)}:${this.pad(seconds)}`;\n        }\n    }\n/**\n * @param {?} value\n * @return {?}\n */\npad(value: number): string {\n        if (value < 10) {\n            return `0${value}`;\n        }\n\n        return value.toString();\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Pipe, args: [{\n    name: 'duration'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction DurationPipe_tsickle_Closure_declarations() {\n/** @type {?} */\nDurationPipe.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDurationPipe.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\n\nimport { DurationPipe } from './duration.pipe';\nexport class DurationPipeModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    exports: [DurationPipe],\n    declarations: [DurationPipe]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction DurationPipeModule_tsickle_Closure_declarations() {\n/** @type {?} */\nDurationPipeModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDurationPipeModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nexport class FileSizePipe implements PipeTransform {\n/**\n * @param {?} value\n * @return {?}\n */\ntransform(value: number): any {\n\n        // allow for async values\n        if (!value) {\n            return value;\n        }\n        \n        let /** @type {?} */ units = ['B', 'KB', 'MB', 'GB', 'TB'];\n\n        // calculate the which unit bracket the values should be a part of\n        let /** @type {?} */ idx = Math.floor(Math.log(value) / Math.log(1024));\n        let /** @type {?} */ formattedValue = value / Math.pow(1024, idx);\n        \n        return `${formattedValue.toFixed(2)} ${units[idx]}`;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Pipe, args: [{\n    name: 'fileSize'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction FileSizePipe_tsickle_Closure_declarations() {\n/** @type {?} */\nFileSizePipe.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFileSizePipe.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\n\nimport { FileSizePipe } from './file-size.pipe';\nexport class FileSizePipeModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    exports: [FileSizePipe],\n    declarations: [FileSizePipe]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction FileSizePipeModule_tsickle_Closure_declarations() {\n/** @type {?} */\nFileSizePipeModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFileSizePipeModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { MediaPlayerComponent } from './media-player.component';\nimport { MediaPlayerTimelineExtensionComponent } from './extensions/timeline/timeline.component';\nimport { MediaPlayerBaseExtensionDirective } from './extensions/base-extension.directive';\nimport { MediaPlayerControlsExtensionComponent } from './extensions/controls/controls.component';\nimport { FrameExtractionModule } from '../../services/frame-extraction/frame-extraction.module';\nimport { AudioServiceModule } from '../../services/audio/index';\nimport { DurationPipeModule } from '../../pipes/duration/index';\nimport { FileSizePipeModule } from '../../pipes/file-size/index';\nimport { MediaPlayerService } from './media-player.service';\nimport { TooltipModule } from '../tooltip/index';\n\nconst /** @type {?} */ DECLARATIONS = [\n    MediaPlayerComponent,\n    MediaPlayerTimelineExtensionComponent,\n    MediaPlayerBaseExtensionDirective,\n    MediaPlayerControlsExtensionComponent\n];\nexport class MediaPlayerModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        CommonModule,\n        FrameExtractionModule,\n        TooltipModule,\n        AudioServiceModule,\n        DurationPipeModule,\n        FileSizePipeModule\n    ],\n    exports: DECLARATIONS,\n    declarations: DECLARATIONS,\n    providers: [MediaPlayerService]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction MediaPlayerModule_tsickle_Closure_declarations() {\n/** @type {?} */\nMediaPlayerModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMediaPlayerModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive } from '@angular/core';\nexport class VirtualScrollLoadingDirective { static decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{ \n    selector: '[uxVirtualScrollLoading]' \n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction VirtualScrollLoadingDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nVirtualScrollLoadingDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nVirtualScrollLoadingDirective.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive } from '@angular/core';\nexport class VirtualScrollLoadButtonDirective { static decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: '[uxVirtualScrollLoadButton]' \n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction VirtualScrollLoadButtonDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nVirtualScrollLoadButtonDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nVirtualScrollLoadButtonDirective.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive } from '@angular/core';\nexport class VirtualScrollCellDirective {\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{ \n    selector: '[uxVirtualScrollCell]' \n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction VirtualScrollCellDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nVirtualScrollCellDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nVirtualScrollCellDirective.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, OnInit, EventEmitter, Output, Input, HostListener, ElementRef, AfterContentInit, ContentChild, TemplateRef, OnDestroy, SimpleChanges } from '@angular/core';\nimport { ResizeService } from '../../directives/resize/index';\nimport { VirtualScrollLoadingDirective } from './directives/virtual-scroll-loading.directive';\nimport { VirtualScrollLoadButtonDirective } from './directives/virtual-scroll-load-button.directive';\nimport { VirtualScrollCellDirective } from './directives/virtual-scroll-cell.directive';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { Observable } from 'rxjs/Observable';\nimport { Subscription } from 'rxjs/Subscription';\nexport class VirtualScrollComponent implements OnInit, AfterContentInit, OnDestroy {\n\n     collection: Observable<any[]> = Observable.create();\n     cellHeight: number;\n     loadOnScroll: boolean = true;\n\n     loading: EventEmitter<number> = new EventEmitter<number>();\n\n     cellTemplate: TemplateRef<any>;\n     loadingIndicatorTemplate: TemplateRef<any>;\n     loadButtonTemplate: TemplateRef<any>;\n\n    cells: BehaviorSubject<any[]> = new BehaviorSubject([]);\n    scrollTop: number = 0;\n    isLoading: boolean = false;\n    pageNumber: number = 0;\n    data: any[] = [];\n    loadingComplete: boolean = false;\nprivate _subscription: Subscription;\nprivate _height: number;\n/**\n * @param {?} _elementRef\n * @param {?} resizeService\n */\nconstructor(private _elementRef: ElementRef, resizeService: ResizeService) {\n\n        // watch for any future changes to size\n        resizeService.addResizeListener(_elementRef.nativeElement).subscribe(event => this._height = event.height);\n    }\n/**\n * @return {?}\n */\nngOnInit() {\n\n        if (!this.cellHeight) {\n            throw new Error('Virtual Scroll Component requires \"cellHeight\" property to be defined.');\n        }\n\n        // subscribe to the collection\n        this.setupObservable();\n\n        // load the first page of data\n        this.loadNextPage();\n    }\n/**\n * @return {?}\n */\nngAfterContentInit(): void {\n        // re-render cells now that we can display any loading indicator or loading button\n        this.renderCells();\n    }\n/**\n * @param {?} changes\n * @return {?}\n */\nngOnChanges(changes: SimpleChanges): void {\n        if (changes.collection && changes.collection.currentValue !== changes.collection.previousValue && !changes.collection.isFirstChange()) {\n            this.setupObservable();\n            this.reset();\n        }\n    }\n/**\n * @return {?}\n */\nngOnDestroy(): void {\n        this._subscription.unsubscribe();\n    }\n/**\n * @return {?}\n */\nsetupObservable(): void {\n\n        // if there is a current subscription, unsubscribe\n        if (this._subscription && this._subscription.unsubscribe) {\n            this._subscription.unsubscribe();\n        }\n\n        this._subscription = this.collection.subscribe(collection => {\n            this.data.push(...collection);\n            this.renderCells();\n            this.isLoading = false;\n        }, null, () => {\n            this.loadingComplete = true;\n        });\n    }\n/**\n * @return {?}\n */\nrenderCells(): void {\n        this.cells.next(this.getVisibleCells());\n\n        if (this.loadOnScroll && !this.isLoading && !this.loadingComplete) {\n            const /** @type {?} */ remainingScroll = this._elementRef.nativeElement.scrollHeight - (this._elementRef.nativeElement.scrollTop + this._elementRef.nativeElement.clientHeight);\n\n            // if the current cells take up less than the height of the component then load the next page\n            if (remainingScroll <= this._elementRef.nativeElement.clientHeight) {\n                this.loadNextPage();\n            }\n        }\n    }\n/**\n * @return {?}\n */\ngetVisibleCells(): any[] {\n\n        // store the initial element height\n        if (!this._height) {\n            this._height = this._elementRef.nativeElement.offsetHeight;\n        }\n\n        // perform some calculations\n        const /** @type {?} */ scrollTop = this._elementRef.nativeElement.scrollTop;\n        const /** @type {?} */ startCell = Math.floor(scrollTop / this.cellHeight);\n        const /** @type {?} */ endCell = Math.ceil(this._height / this.cellHeight) + 1;\n\n        // update the scroll position\n        this.scrollTop = scrollTop - (scrollTop % this.cellHeight);\n\n        // return a sublist of items visible on the screen\n        return this.data.slice(startCell, startCell + endCell);\n    }\n/**\n * @return {?}\n */\ngetTotalHeight(): number {\n        return this.cellHeight * this.data.length;\n    }\n/**\n * @return {?}\n */\nloadNextPage(): void {\n        this.isLoading = true;\n        this.loading.next(this.pageNumber);\n        this.pageNumber++;\n    }\n/**\n * @return {?}\n */\nreset(): void {\n\n        // reset all values\n        this.scrollTop = 0;\n        this.data = [];\n        this._height = undefined;\n        this.pageNumber = 0;\n        this.loadingComplete = false;\n\n        // set scroll position\n        this._elementRef.nativeElement.scrollTop = 0;\n\n        // clear the current cells\n        this.renderCells();\n\n        // reload first page\n        this.loadNextPage();\n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-virtual-scroll',\n    template: `\n      <div class=\"virtual-scroll-content-height\" [style.height.px]=\"getTotalHeight()\"></div>\n      <div class=\"virtual-scroll-content\" [style.transform]=\"'translateY(' + scrollTop + 'px)'\">\n\n          <!-- Virtually Render Cells -->\n          <ng-container *ngFor=\"let cell of cells | async\">\n              <ng-container *ngTemplateOutlet=\"cellTemplate; context: { cell: cell }\"></ng-container>\n          </ng-container>\n\n          <!-- Loading Indicator -->\n          <ng-container *ngIf=\"loadingIndicatorTemplate && isLoading\" [ngTemplateOutlet]=\"loadingIndicatorTemplate\"></ng-container>\n\n          <!-- Loading Button -->\n          <div class=\"virtual-scroll-load-button\" *ngIf=\"loadButtonTemplate && !loadOnScroll && !loadingComplete && !isLoading\" (click)=\"loadNextPage()\">\n              <ng-container *ngTemplateOutlet=\"loadButtonTemplate\"></ng-container>\n          </div>\n    \n      </div>\n    `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: ResizeService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'collection': [{ type: Input },],\n'cellHeight': [{ type: Input },],\n'loadOnScroll': [{ type: Input },],\n'loading': [{ type: Output },],\n'cellTemplate': [{ type: ContentChild, args: [VirtualScrollCellDirective, { read: TemplateRef }, ] },],\n'loadingIndicatorTemplate': [{ type: ContentChild, args: [VirtualScrollLoadingDirective, { read: TemplateRef }, ] },],\n'loadButtonTemplate': [{ type: ContentChild, args: [VirtualScrollLoadButtonDirective, { read: TemplateRef }, ] },],\n'renderCells': [{ type: HostListener, args: ['scroll', ] },],\n};\n}\n\nfunction VirtualScrollComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nVirtualScrollComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nVirtualScrollComponent.ctorParameters;\n/** @type {?} */\nVirtualScrollComponent.propDecorators;\n/** @type {?} */\nVirtualScrollComponent.prototype.collection;\n/** @type {?} */\nVirtualScrollComponent.prototype.cellHeight;\n/** @type {?} */\nVirtualScrollComponent.prototype.loadOnScroll;\n/** @type {?} */\nVirtualScrollComponent.prototype.loading;\n/** @type {?} */\nVirtualScrollComponent.prototype.cellTemplate;\n/** @type {?} */\nVirtualScrollComponent.prototype.loadingIndicatorTemplate;\n/** @type {?} */\nVirtualScrollComponent.prototype.loadButtonTemplate;\n/** @type {?} */\nVirtualScrollComponent.prototype.cells;\n/** @type {?} */\nVirtualScrollComponent.prototype.scrollTop;\n/** @type {?} */\nVirtualScrollComponent.prototype.isLoading;\n/** @type {?} */\nVirtualScrollComponent.prototype.pageNumber;\n/** @type {?} */\nVirtualScrollComponent.prototype.data;\n/** @type {?} */\nVirtualScrollComponent.prototype.loadingComplete;\n/** @type {?} */\nVirtualScrollComponent.prototype._subscription;\n/** @type {?} */\nVirtualScrollComponent.prototype._height;\n/** @type {?} */\nVirtualScrollComponent.prototype._elementRef;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { VirtualScrollComponent } from './virtual-scroll.component';\nimport { ResizeModule } from '../../directives/resize/index';\nimport { VirtualScrollLoadingDirective } from './directives/virtual-scroll-loading.directive';\nimport { VirtualScrollLoadButtonDirective } from './directives/virtual-scroll-load-button.directive';\nimport { VirtualScrollCellDirective } from './directives/virtual-scroll-cell.directive';\n\nconst /** @type {?} */ DECLARATIONS = [\n    VirtualScrollComponent,\n    VirtualScrollLoadingDirective,\n    VirtualScrollLoadButtonDirective,\n    VirtualScrollCellDirective\n];\nexport class VirtualScrollModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        CommonModule,\n        ResizeModule\n    ],\n    exports: DECLARATIONS,\n    declarations: DECLARATIONS\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction VirtualScrollModule_tsickle_Closure_declarations() {\n/** @type {?} */\nVirtualScrollModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nVirtualScrollModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { AfterViewInit, Directive, ElementRef, HostListener, Renderer2 } from '@angular/core';\nexport class AutoGrowDirective implements AfterViewInit {\n/**\n * @param {?} _elementRef\n * @param {?} _renderer\n */\nconstructor(private _elementRef: ElementRef,\nprivate _renderer: Renderer2) {\n    // ensure this is a textarea or else throw error\n    if (_elementRef.nativeElement.tagName.toLowerCase() !== 'textarea') {\n      throw new Error('uxAutoGrow directive can only be used on <textarea> elements.');\n    }\n  }\n/**\n * @return {?}\n */\nngAfterViewInit(): void {\n    this.update();\n  }\n/**\n * @return {?}\n */\nupdate(): void {\n\n    // get computed style of element\n    const { paddingTop, paddingBottom } = getComputedStyle(this._elementRef.nativeElement);\n\n    // perform sizing\n    this._renderer.setStyle(this._elementRef.nativeElement, 'overflowY', 'hidden');\n    this._renderer.setStyle(this._elementRef.nativeElement, 'height', 'auto');\n\n    // get the new total height and element height\n    const { scrollHeight } = this._elementRef.nativeElement;\n    const { maxHeight } = getComputedStyle(this._elementRef.nativeElement);\n\n    // determine what the maximum allowed height is\n    const /** @type {?} */ maximum = !isNaN(parseFloat(maxHeight)) ? parseFloat(maxHeight) : Infinity;\n\n    // if there is a max height specifed we want to show the scrollbars\n    if (maximum < scrollHeight) {\n      this._renderer.setStyle(this._elementRef.nativeElement, 'overflowY', 'auto');\n      this._renderer.setStyle(this._elementRef.nativeElement, 'height', maximum + 'px');\n    } else {\n      this._renderer.setStyle(this._elementRef.nativeElement, 'height', scrollHeight + 'px');\n    }\n  }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[uxAutoGrow]'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Renderer2, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'update': [{ type: HostListener, args: ['input', ] },],\n};\n}\n\nfunction AutoGrowDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nAutoGrowDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nAutoGrowDirective.ctorParameters;\n/** @type {?} */\nAutoGrowDirective.propDecorators;\n/** @type {?} */\nAutoGrowDirective.prototype._elementRef;\n/** @type {?} */\nAutoGrowDirective.prototype._renderer;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\n\nimport { AutoGrowDirective } from './auto-grow.directive';\nexport class AutoGrowModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    exports: [AutoGrowDirective],\n    declarations: [AutoGrowDirective]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction AutoGrowModule_tsickle_Closure_declarations() {\n/** @type {?} */\nAutoGrowModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nAutoGrowModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ElementRef, OnInit, Renderer2, Input, Output, EventEmitter } from '@angular/core';\nexport class FixedHeaderTableDirective implements OnInit {\n\n   tableHeight: number | string;\n   tablePaging: EventEmitter<number> = new EventEmitter<number>();\nprivate _tableHead: HTMLElement;\nprivate _tableBody: HTMLElement;\n/**\n * @param {?} _elementRef\n * @param {?} _renderer\n */\nconstructor(private _elementRef: ElementRef,\nprivate _renderer: Renderer2) { }\n/**\n * @return {?}\n */\nngOnInit(): void {\n\n    // add class to the table\n    this._renderer.addClass(this._elementRef.nativeElement, 'ux-fixed-header-table');\n\n    // locate the important elements\n    this._tableHead = this._elementRef.nativeElement.querySelector('thead');\n    this._tableBody = this._elementRef.nativeElement.querySelector('tbody');\n\n    // bind to scroll events on the table body\n    this._renderer.listen(this._tableBody, 'scroll', this.onScroll.bind(this));\n\n    // resize the table header to account for scrollbar\n    this.setLayout();\n\n    // trigger the loading of the first page\n    this.tablePaging.emit();\n  }\n/**\n * Get the table element\n * Primarily used by column width directive\n * @return {?}\n */\ngetTable(): HTMLTableElement {\n    return this._elementRef.nativeElement;\n  }\n/**\n * Handle scroll events\n * @param {?} event\n * @return {?}\n */\nprivate onScroll(event: MouseEvent): void {\n\n    // determine if we are scrolled to the bottom and if so load the next page\n    if (this._tableBody.scrollTop === (this._tableBody.scrollHeight - this._tableBody.offsetHeight)) {\n      this.tablePaging.emit();\n    }\n  }\n/**\n * Update the size of the table header to account for the scrollbar.\n * This is important to keep the columns aligned\n * @return {?}\n */\nprivate setLayout(): void {\n\n    // calculate the size of the scrollbar\n    const /** @type {?} */ scrollbar = this._tableBody.offsetWidth - this._tableBody.clientWidth;\n\n    // add padding to the header to account for this\n    this._renderer.setStyle(this._tableHead, 'padding-right', scrollbar + 'px');\n\n    // set the desired height of the table body\n    this._renderer.setStyle(this._tableBody, 'height', typeof this.tableHeight === 'number' ? `${this.tableHeight}px` : this.tableHeight);\n  }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[uxFixedHeaderTable]'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Renderer2, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'tableHeight': [{ type: Input },],\n'tablePaging': [{ type: Output },],\n};\n}\n\nfunction FixedHeaderTableDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nFixedHeaderTableDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFixedHeaderTableDirective.ctorParameters;\n/** @type {?} */\nFixedHeaderTableDirective.propDecorators;\n/** @type {?} */\nFixedHeaderTableDirective.prototype.tableHeight;\n/** @type {?} */\nFixedHeaderTableDirective.prototype.tablePaging;\n/** @type {?} */\nFixedHeaderTableDirective.prototype._tableHead;\n/** @type {?} */\nFixedHeaderTableDirective.prototype._tableBody;\n/** @type {?} */\nFixedHeaderTableDirective.prototype._elementRef;\n/** @type {?} */\nFixedHeaderTableDirective.prototype._renderer;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\n\nimport { FixedHeaderTableDirective } from './fixed-header-table.directive';\nexport class FixedHeaderTableModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    exports: [FixedHeaderTableDirective],\n    declarations: [FixedHeaderTableDirective]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction FixedHeaderTableModule_tsickle_Closure_declarations() {\n/** @type {?} */\nFixedHeaderTableModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFixedHeaderTableModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, Input, OnInit, TemplateRef, Renderer2, OnDestroy, HostBinding, OnChanges, ElementRef } from '@angular/core';\nexport class FloatLabelDirective implements OnInit, OnChanges, OnDestroy {\n\n    \n    input: HTMLInputElement;\n\n    \n    value: any;\n\n    \n    mode: 'focus' | 'input' = 'focus';\n\n    \n    raised: boolean = false;\nprivate _focused = false;\nprivate _eventHandles: any[] = [];\n/**\n * @param {?} _elementRef\n * @param {?} _renderer\n */\nconstructor(private _elementRef: ElementRef,\nprivate _renderer: Renderer2) { }\n/**\n * @return {?}\n */\nngOnInit(): void {\n        this._eventHandles.push(\n            this._renderer.listen(this.input, 'focus', this.inputFocus.bind(this)),\n            this._renderer.listen(this.input, 'blur', this.inputBlur.bind(this)),\n            this._renderer.listen(this.input, 'input', this.inputChange.bind(this))\n        );\n\n        // Check initial input value\n        this.raised = this.hasText();\n\n        // Ensure that the `for` attribute is set\n        if (!this._elementRef.nativeElement.getAttribute('for') && this.input.getAttribute('id')) {\n            this._renderer.setAttribute(this._elementRef.nativeElement, 'for', this.input.getAttribute('id'));\n        }\n    }\n/**\n * @return {?}\n */\nngOnChanges(): void {\n        if (!(this.mode === 'focus' && this._focused)) {\n            this.raised = this.hasText();\n        }\n    }\n/**\n * @return {?}\n */\nngOnDestroy(): void {\n        // Unsubscribe event handles\n        this._eventHandles.forEach((eventHandle) => eventHandle());\n    }\n/**\n * @return {?}\n */\nprivate hasText(): boolean {\n        if (this.value === undefined) {\n            return !!this.input.value;\n        }\n        return !!this.value;\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nprivate inputFocus(event: Event): void {\n        if (this.mode === 'focus') {\n            this._focused = true;\n            this.raised = true;\n        }\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nprivate inputBlur(event: Event): void {\n        if (this.mode === 'focus') {\n            this._focused = false;\n            this.raised = this.hasText();\n        }\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nprivate inputChange(event: Event): void {\n        if (this.mode === 'input') {\n            this.raised = this.hasText();\n        }\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: '[uxFloatLabel]',\n    host: {\n        'class': 'ux-float-label'\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Renderer2, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'input': [{ type: Input, args: ['uxFloatLabel', ] },],\n'value': [{ type: Input },],\n'mode': [{ type: Input },],\n'raised': [{ type: HostBinding, args: ['class.ux-float-label-raised', ] },],\n};\n}\n\nfunction FloatLabelDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nFloatLabelDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFloatLabelDirective.ctorParameters;\n/** @type {?} */\nFloatLabelDirective.propDecorators;\n/** @type {?} */\nFloatLabelDirective.prototype.input;\n/** @type {?} */\nFloatLabelDirective.prototype.value;\n/** @type {?} */\nFloatLabelDirective.prototype.mode;\n/** @type {?} */\nFloatLabelDirective.prototype.raised;\n/** @type {?} */\nFloatLabelDirective.prototype._focused;\n/** @type {?} */\nFloatLabelDirective.prototype._eventHandles;\n/** @type {?} */\nFloatLabelDirective.prototype._elementRef;\n/** @type {?} */\nFloatLabelDirective.prototype._renderer;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\n\nimport { FloatLabelDirective } from './float-label.directive';\nexport class FloatLabelModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [],\n    exports: [FloatLabelDirective],\n    declarations: [FloatLabelDirective],\n    providers: [],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction FloatLabelModule_tsickle_Closure_declarations() {\n/** @type {?} */\nFloatLabelModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFloatLabelModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nexport class HelpCenterService {\n\n    items: BehaviorSubject<HelpCenterItem[]> = new BehaviorSubject<HelpCenterItem[]>([]);\n/**\n * @param {?} item\n * @return {?}\n */\nregisterItem(item: HelpCenterItem): void {\n\n        // get the current items\n        let /** @type {?} */ items = this.items.getValue();\n\n        // add the new item to the list\n        items.push(item);\n\n        // update the observable\n        this.items.next(items);\n    }\n/**\n * @param {?} item\n * @return {?}\n */\nunregisterItem(item: HelpCenterItem): void {\n\n        // get the current items\n        let /** @type {?} */ items = this.items.getValue();\n\n        // remove the item being unregistered\n        items = items.filter(itm => itm !== item);\n\n        // update the observable\n        this.items.next(items);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction HelpCenterService_tsickle_Closure_declarations() {\n/** @type {?} */\nHelpCenterService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nHelpCenterService.ctorParameters;\n/** @type {?} */\nHelpCenterService.prototype.items;\n}\n\n\nexport interface HelpCenterItem {\n    icon?: string;\n    title: string;\n    select?: () => void;\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, Input, OnInit, OnDestroy } from '@angular/core';\nimport { HelpCenterService, HelpCenterItem } from './help-center.service';\nexport class HelpCenterItemDirective implements OnInit, OnDestroy {\n\n     uxHelpCenterItem: HelpCenterItem;\n/**\n * @param {?} _helpCenterService\n */\nconstructor(private _helpCenterService: HelpCenterService) { }\n/**\n * @return {?}\n */\nngOnInit(): void {\n\n        // register the item in the service\n        this._helpCenterService.registerItem(this.uxHelpCenterItem);\n    }\n/**\n * @return {?}\n */\nngOnDestroy(): void {\n        // remove this item when it is destroyed\n        this._helpCenterService.unregisterItem(this.uxHelpCenterItem);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{ selector: '[uxHelpCenterItem]' }, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: HelpCenterService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'uxHelpCenterItem': [{ type: Input },],\n};\n}\n\nfunction HelpCenterItemDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nHelpCenterItemDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nHelpCenterItemDirective.ctorParameters;\n/** @type {?} */\nHelpCenterItemDirective.propDecorators;\n/** @type {?} */\nHelpCenterItemDirective.prototype.uxHelpCenterItem;\n/** @type {?} */\nHelpCenterItemDirective.prototype._helpCenterService;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { HelpCenterItemDirective } from './help-center-item.directive';\nimport { HelpCenterService } from './help-center.service';\nexport class HelpCenterModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [],\n    exports: [HelpCenterItemDirective],\n    declarations: [HelpCenterItemDirective],\n    providers: [HelpCenterService],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction HelpCenterModule_tsickle_Closure_declarations() {\n/** @type {?} */\nHelpCenterModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nHelpCenterModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs/Subject';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { HoverActionDirective } from './hover-action.directive';\nimport { HoverActionContainerDirective } from './hover-action-container.directive';\nexport class HoverActionService {\n\n    active: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\nprivate _container: HoverActionContainerDirective;\nprivate _focused: boolean = false;\nprivate _hovered: boolean = false;\nprivate _actions: HoverActionDirective[] = [];\n/**\n * @param {?} action\n * @return {?}\n */\nregister(action: HoverActionDirective): void {\n        this._actions.push(action);\n    }\n/**\n * @param {?} action\n * @return {?}\n */\nunregister(action: HoverActionDirective): void {\n        this._actions = this._actions.filter(actn => actn !== action);\n    }\n/**\n * @param {?} container\n * @return {?}\n */\nsetContainer(container: HoverActionContainerDirective): void {\n        this._container = container;\n    }\n/**\n * @param {?} focus\n * @return {?}\n */\nsetFocusState(focus: boolean): void {\n        this._focused = focus;\n        this.updateVisibility();\n    }\n/**\n * @param {?} hover\n * @return {?}\n */\nsetHoverState(hover: boolean): void {\n        this._hovered = hover;\n        this.updateVisibility();\n    }\n/**\n * @return {?}\n */\nnext(): void {\n\n        // if container has focus then focus the first hover action\n        if (this.containerHasFocus()) {\n            this.focusActionAtIndex(0);\n            return this.updateVisibility();\n        }\n\n        // if a hover action has focus then focus the next action\n        if (this.actionHasFocus()) {\n            let /** @type {?} */ index = this.getFocusedActionIndex() + 1;\n            this.focusActionAtIndex(index);\n            this.updateVisibility();\n        }\n    }\n/**\n * @return {?}\n */\nprevious(): void {\n        // if a hover action has focus then focus the previous action\n        if (this.actionHasFocus()) {\n            let /** @type {?} */ index = this.getFocusedActionIndex() - 1;\n\n            if (index >= 0) {\n                this.focusActionAtIndex(index);\n            } else {\n                this._container.focus();\n            }\n        }\n\n        this.updateVisibility();\n    }\n/**\n * @return {?}\n */\nupdateVisibility(): void {\n        this.active.next(this._focused || this._hovered || this.actionHasFocus());\n    }\n/**\n * @param {?} index\n * @return {?}\n */\nprivate focusActionAtIndex(index: number): void {\n        if (index >= 0 && index < this._actions.length) {\n            this._actions[index].focus();\n        }\n    }\n/**\n * @return {?}\n */\nprivate getFocusedActionIndex(): number {\n        return this._actions.findIndex(action => action === this.getFocusedAction());\n    }\n/**\n * @return {?}\n */\nprivate containerHasFocus(): boolean {\n        return this._focused;\n    }\n/**\n * @return {?}\n */\nprivate actionHasFocus(): boolean {\n        return !!this.getFocusedAction();\n    }\n/**\n * @return {?}\n */\nprivate getFocusedAction(): HoverActionDirective {\n        return this._actions.find(action => action.focused);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction HoverActionService_tsickle_Closure_declarations() {\n/** @type {?} */\nHoverActionService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nHoverActionService.ctorParameters;\n/** @type {?} */\nHoverActionService.prototype.active;\n/** @type {?} */\nHoverActionService.prototype._container;\n/** @type {?} */\nHoverActionService.prototype._focused;\n/** @type {?} */\nHoverActionService.prototype._hovered;\n/** @type {?} */\nHoverActionService.prototype._actions;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ContentChildren, QueryList, HostListener, ElementRef, OnDestroy, Input } from '@angular/core';\nimport { HoverActionDirective } from './hover-action.directive';\nimport { HoverActionService } from './hover-action.service';\nimport { Subscription } from 'rxjs/Subscription';\nexport class HoverActionContainerDirective implements OnDestroy {\n\n     tabindex: number = 0;\n    active: boolean = false;\nprivate active$: Subscription;\n/**\n * @param {?} _elementRef\n * @param {?} _hoverActionService\n */\nconstructor(private _elementRef: ElementRef,\nprivate _hoverActionService: HoverActionService) {\n        // register the container element with the service\n        this._hoverActionService.setContainer(this);\n        \n        // apply a class based on the active state of the container and it's actions\n        this.active$ = this._hoverActionService.active.subscribe(active => this.active = active);\n    }\n/**\n * @return {?}\n */\nngOnDestroy(): void {\n        this.active$.unsubscribe();\n    }\n/**\n * @return {?}\n */\nfocus(): void {\n        this._elementRef.nativeElement.focus();\n    }\n/**\n * @return {?}\n */\nonFocus(): void {\n        this._hoverActionService.setFocusState(true);\n    }\n/**\n * @return {?}\n */\nonBlur(): void {\n        this._hoverActionService.setFocusState(false);\n    }\n/**\n * @return {?}\n */\nonHover(): void {\n        this._hoverActionService.setHoverState(true);\n    }\n/**\n * @return {?}\n */\nonLeave(): void {\n        this._hoverActionService.setHoverState(false);\n    }\n/**\n * @return {?}\n */\nnext(): void {\n        this._hoverActionService.next();\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: '[uxHoverActionContainer]',\n    providers: [HoverActionService],\n    host: {\n        '[class.hover-action-container-active]': 'active',\n        '[tabindex]': 'tabindex'\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: HoverActionService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'tabindex': [{ type: Input },],\n'focus': [{ type: HostListener, args: ['click', ] },],\n'onFocus': [{ type: HostListener, args: ['focus', ] },],\n'onBlur': [{ type: HostListener, args: ['blur', ] },],\n'onHover': [{ type: HostListener, args: ['mouseenter', ] },],\n'onLeave': [{ type: HostListener, args: ['mouseleave', ] },],\n'next': [{ type: HostListener, args: ['keydown.arrowright', ] },],\n};\n}\n\nfunction HoverActionContainerDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nHoverActionContainerDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nHoverActionContainerDirective.ctorParameters;\n/** @type {?} */\nHoverActionContainerDirective.propDecorators;\n/** @type {?} */\nHoverActionContainerDirective.prototype.tabindex;\n/** @type {?} */\nHoverActionContainerDirective.prototype.active;\n/** @type {?} */\nHoverActionContainerDirective.prototype.active$;\n/** @type {?} */\nHoverActionContainerDirective.prototype._elementRef;\n/** @type {?} */\nHoverActionContainerDirective.prototype._hoverActionService;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ElementRef, HostListener, OnDestroy, Input } from '@angular/core';\nimport { HoverActionService } from './hover-action.service';\nimport { Subscription } from 'rxjs/Subscription';\nexport class HoverActionDirective implements OnDestroy {\n\n     tabindex: number = 1;\n    active: boolean = false;\n    focused: boolean = false;\nprivate active$: Subscription;\n/**\n * @param {?} _elementRef\n * @param {?} _hoverActionService\n */\nconstructor(private _elementRef: ElementRef,\nprivate _hoverActionService: HoverActionService) {\n\n        // register the action\n        this._hoverActionService.register(this);\n\n        // watch for changes to the activeness of the container\n        this.active$ = this._hoverActionService.active.subscribe(active => this.active = active);\n    }\n/**\n * @return {?}\n */\nngOnDestroy(): void {\n        this._hoverActionService.unregister(this);\n        this.active$.unsubscribe();\n    }\n/**\n * @return {?}\n */\nfocus(): void {\n        this._elementRef.nativeElement.focus();\n    }\n/**\n * @return {?}\n */\nonFocus(): void {\n        this.focused = true;\n        this._hoverActionService.updateVisibility();\n    }\n/**\n * @return {?}\n */\nonBlur(): void {\n        this.focused = false;\n        this._hoverActionService.updateVisibility();\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nprevious(event: MouseEvent): void {\n        event.stopPropagation();        \n        this._hoverActionService.previous();\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nnext(event: MouseEvent): void {\n        event.stopPropagation();\n        this._hoverActionService.next();\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: '[uxHoverAction]',\n    host: {\n        '[class.hover-action-active]': 'active',\n        '[class.hover-action-focused]': 'focused',\n        '[tabindex]': 'tabindex'\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: HoverActionService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'tabindex': [{ type: Input },],\n'onFocus': [{ type: HostListener, args: ['focus', ] },],\n'onBlur': [{ type: HostListener, args: ['blur', ] },],\n'previous': [{ type: HostListener, args: ['keydown.arrowleft', ['$event'], ] },],\n'next': [{ type: HostListener, args: ['keydown.arrowright', ['$event'], ] },],\n};\n}\n\nfunction HoverActionDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nHoverActionDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nHoverActionDirective.ctorParameters;\n/** @type {?} */\nHoverActionDirective.propDecorators;\n/** @type {?} */\nHoverActionDirective.prototype.tabindex;\n/** @type {?} */\nHoverActionDirective.prototype.active;\n/** @type {?} */\nHoverActionDirective.prototype.focused;\n/** @type {?} */\nHoverActionDirective.prototype.active$;\n/** @type {?} */\nHoverActionDirective.prototype._elementRef;\n/** @type {?} */\nHoverActionDirective.prototype._hoverActionService;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { HoverActionContainerDirective } from './hover-action-container.directive';\nimport { HoverActionDirective } from './hover-action.directive';\n\nconst /** @type {?} */ DECLARATIONS = [\n    HoverActionDirective,\n    HoverActionContainerDirective\n];\nexport class HoverActionModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    exports: DECLARATIONS,\n    declarations: DECLARATIONS\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction HoverActionModule_tsickle_Closure_declarations() {\n/** @type {?} */\nHoverActionModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nHoverActionModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, Input, TemplateRef, SimpleChanges, ViewContainerRef, EmbeddedViewRef } from '@angular/core';\nexport class LayoutSwitcherItemDirective {\nprivate _config: LayoutSwitcherItem;\nprivate _embeddedView: EmbeddedViewRef<any>;\n/**\n * @param {?} _templateRef\n * @param {?} _viewContainerRef\n */\nconstructor(private _templateRef: TemplateRef<any>,\nprivate _viewContainerRef: ViewContainerRef) { }\n/**\n * @return {?}\n */\ngetLayout(): TemplateRef<any> {\n        return this._templateRef;\n    }\n/**\n * @return {?}\n */\ngetConfig(): LayoutSwitcherItem {\n        return this._config;\n    }\n/**\n * @return {?}\n */\nactivate(): void {\n        this._embeddedView = this._viewContainerRef.createEmbeddedView(this._templateRef);\n    }\n/**\n * @return {?}\n */\ndeactivate(): void {\n        let /** @type {?} */ index = this._viewContainerRef.indexOf(this._embeddedView);\n        this._viewContainerRef.remove(index);\n        this._embeddedView = null;\n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: '[uxLayoutSwitcherItem]'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: TemplateRef, },\n{type: ViewContainerRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'_config': [{ type: Input, args: ['uxLayoutSwitcherItem', ] },],\n};\n}\n\nfunction LayoutSwitcherItemDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nLayoutSwitcherItemDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nLayoutSwitcherItemDirective.ctorParameters;\n/** @type {?} */\nLayoutSwitcherItemDirective.propDecorators;\n/** @type {?} */\nLayoutSwitcherItemDirective.prototype._config;\n/** @type {?} */\nLayoutSwitcherItemDirective.prototype._embeddedView;\n/** @type {?} */\nLayoutSwitcherItemDirective.prototype._templateRef;\n/** @type {?} */\nLayoutSwitcherItemDirective.prototype._viewContainerRef;\n}\n\n\nexport interface LayoutSwitcherItem {\n    group?: string;\n    minWidth?: number;\n    maxWidth?: number;\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ElementRef, QueryList, ContentChildren, Input, AfterContentInit, ViewContainerRef, OnChanges, SimpleChanges } from '@angular/core';\nimport { ResizeService } from '../resize/index';\nimport { LayoutSwitcherItemDirective } from './layout-switcher-item.directive';\nexport class LayoutSwitcherDirective implements AfterContentInit, OnChanges {\n\n     group: string;\nprivate _layouts: QueryList<LayoutSwitcherItemDirective>;\nprivate _width: number;\nprivate _activeLayout: LayoutSwitcherItemDirective;\n/**\n * @param {?} _elementRef\n * @param {?} resizeService\n * @param {?} _viewContainerRef\n */\nconstructor(private _elementRef: ElementRef, resizeService: ResizeService,\nprivate _viewContainerRef: ViewContainerRef) {\n\n        // watch for changes to the container size\n        resizeService.addResizeListener(_elementRef.nativeElement).subscribe(event => {\n            this._width = event.width;\n\n            // render the appropriate layout\n            this.updateActiveLayout();\n        });\n    }\n/**\n * @param {?} changes\n * @return {?}\n */\nngOnChanges(changes: SimpleChanges): void {\n\n        // if the active group has changed then render the appropriate layout\n        if (changes.group.currentValue !== changes.group.previousValue) {\n            this.updateActiveLayout();\n        }\n    }\n/**\n * @return {?}\n */\ngetActiveLayout(): LayoutSwitcherItemDirective | null {\n\n        // if there are currently no layouts then do nothing\n        if (!this._layouts) {\n            return null;\n        }\n\n        // otherwise find layouts that match the active group and that meet the constraints\n        return this._layouts.filter(layout => this.group === layout.getConfig().group).find(layout => {\n\n            let /** @type {?} */ minWidth = layout.getConfig().minWidth || 0;\n            let /** @type {?} */ maxWidth = layout.getConfig().maxWidth || Infinity;\n\n            return this._width >= minWidth && this._width < maxWidth;\n        });\n    }\n/**\n * @return {?}\n */\nupdateActiveLayout(): void {\n\n        // get the layout that should be shown\n        let /** @type {?} */ layout = this.getActiveLayout();\n\n        // check if we are currently showing the layout\n        if (this._activeLayout === layout) {\n            return;\n        }\n\n        // remove the current layout\n        if (this._activeLayout) {\n            this._activeLayout.deactivate();\n        }\n\n        // store the new active layout\n        this._activeLayout = layout;\n\n        // if there is an active layout then activate\n        if (this._activeLayout) {\n            this._activeLayout.activate();\n        }\n    }\n/**\n * @return {?}\n */\nngAfterContentInit(): void {\n\n        // store the initial current element width\n        this._width = this._elementRef.nativeElement.offsetWidth;\n\n        // render the appropriate layout - need a delay as Angular doesn't like changes like this in these lifecycle hooks\n        requestAnimationFrame(this.updateActiveLayout.bind(this));\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: '[uxLayoutSwitcher]'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: ResizeService, },\n{type: ViewContainerRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'group': [{ type: Input },],\n'_layouts': [{ type: ContentChildren, args: [LayoutSwitcherItemDirective, ] },],\n};\n}\n\nfunction LayoutSwitcherDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nLayoutSwitcherDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nLayoutSwitcherDirective.ctorParameters;\n/** @type {?} */\nLayoutSwitcherDirective.propDecorators;\n/** @type {?} */\nLayoutSwitcherDirective.prototype.group;\n/** @type {?} */\nLayoutSwitcherDirective.prototype._layouts;\n/** @type {?} */\nLayoutSwitcherDirective.prototype._width;\n/** @type {?} */\nLayoutSwitcherDirective.prototype._activeLayout;\n/** @type {?} */\nLayoutSwitcherDirective.prototype._elementRef;\n/** @type {?} */\nLayoutSwitcherDirective.prototype._viewContainerRef;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { LayoutSwitcherDirective } from './layout-switcher.directive';\nimport { LayoutSwitcherItemDirective } from './layout-switcher-item.directive';\nimport { ResizeModule } from '../resize/index';\n\nconst /** @type {?} */ DECLARATIONS = [\n    LayoutSwitcherDirective,\n    LayoutSwitcherItemDirective\n];\nexport class LayoutSwitcherModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        ResizeModule\n    ],\n    exports: DECLARATIONS,\n    declarations: DECLARATIONS,\n    providers: [],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction LayoutSwitcherModule_tsickle_Closure_declarations() {\n/** @type {?} */\nLayoutSwitcherModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nLayoutSwitcherModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { SelectionService } from '../selection.service';\nexport class SelectionStrategy {\n/**\n * @param {?} selectionService\n */\nconstructor(protected selectionService: SelectionService) { }\n/**\n * @param {?} event\n * @param {?} data\n * @return {?}\n */\nmousedown(event: MouseEvent, data: any): void { }\n/**\n * @param {?} event\n * @param {?} data\n * @return {?}\n */\nclick(event: MouseEvent, data: any): void { }\n/**\n * @param {?} event\n * @param {?} data\n * @return {?}\n */\nkeydown(event: KeyboardEvent, data: any): void { }\n/**\n * Select the item - default behavior\n * @param {...?} data\n * @return {?}\n */\nselect(...data: any[]): void {\n    this.selectionService.select(...data);\n  }\n/**\n * Toggle the item's selected state - default behavior\n * @param {...?} data\n * @return {?}\n */\ntoggle(...data: any[]): void {\n    this.selectionService.toggle(...data);\n  }\n/**\n * Deselect the item - default behavior\n * @param {...?} data\n * @return {?}\n */\ndeselect(...data: any[]): void {\n    this.selectionService.deselect(...data);\n  }\n/**\n * Select all items - default behavior\n * @return {?}\n */\nselectAll(): void {\n    this.select(...this.selectionService.dataset);\n  }\n/**\n * Deselect all items - default behavior\n * @return {?}\n */\ndeselectAll(): void {\n    this.deselect(...this.selectionService.dataset);\n  }\n/**\n * @return {?}\n */\ndestroy(): void { }\n}\n\nfunction SelectionStrategy_tsickle_Closure_declarations() {\n/** @type {?} */\nSelectionStrategy.prototype.selectionService;\n}\n\n","import { SelectionStrategy } from './selection.strategy';\nexport class RowSelectionStrategy extends SelectionStrategy {\nprivate _selection: Selection = { start: null, end: null };\n/**\n * By default on shift click the browser will highlight\n * text. This looks bad and we don't want this to occur\n * @param {?} event\n * @return {?}\n */\nmousedown(event: MouseEvent): void {\n    event.preventDefault();\n  }\n/**\n * When a row is clicked we want to handle selection\n * @param {?} event\n * @param {?} data\n * @return {?}\n */\nclick(event: MouseEvent, data: any): void {\n\n    // determine which modifier keys are pressed\n    const { ctrlKey, shiftKey } = event;\n\n    // if the shift key is pressed we want to perform a multiple selection\n    if (shiftKey) {\n      return this.multipleSelect(data);\n    }\n\n    // if the control key is pressed we want to perform an additive toggle selection\n    if (ctrlKey) {\n      return this.toggle(data);\n    }\n\n    // perform a single selection where all other rows are deselected\n    this.singleSelect(data);\n  }\n/**\n * To support full keyboard control we need to support the following:\n * 1. Arrow keys to navigate up and down\n * 2. Spacebar to toggle selection\n * 3. Shift + Arrow keys to multiple select\n * 4. Ctrl + Arrow keys to allow retained selection and navigation\n * @param {?} event\n * @param {?} data\n * @return {?}\n */\nkeydown(event: KeyboardEvent, data: any): void {\n\n    switch (event.keyCode) {\n\n      case KeyCode.UpArrow:\n      case KeyCode.DownArrow:\n        event.preventDefault();\n        this.navigate(event, data);\n        break;\n        \n      case KeyCode.Spacebar:\n        event.preventDefault();\n        this.selectionService.strategy.toggle(data, true);\n        break;\n\n    }\n  }\n/**\n * Override the standard toggle function to store or clear the\n * most recently selected item\n * @param {?} data\n * @param {?=} activate\n * @return {?}\n */\ntoggle(data: any, activate: boolean = false): void {\n    super.toggle(data);\n\n    // store or clear the selection\n    this.selectionService.isSelected(data) ? this.setSelectionStart(data) : this.clearSelection();\n\n    // if we want to keep the item activated then activate\n    if (activate) {\n      this.selectionService.activate(data);\n    }\n  }\n/**\n * Clear all other selected items and select only\n * the most recently selected item\n * @param {?} data\n * @return {?}\n */\nprivate singleSelect(data: any): void {\n\n    // deselect all other rows if neither modifier key is pressed\n    this.deselectAll();\n\n    // select the current row\n    this.select(data);\n\n    // store the current item as the selection start\n    this.setSelectionStart(data);\n  }\n/**\n * Handle multiple selection:\n * 1. If no start item selected - select it\n * 2. If a start item has been selected - select all in between\n * 3. If a start and end item have been selected clear the range and then select the new range\n * @param {?} data\n * @return {?}\n */\nprivate multipleSelect(data: any): void {\n\n    // if no selection currently exists then perform initial selection\n    if (!this._selection.start) {\n\n      // select the row\n      this.select(data);\n\n      // store the starting point\n      return this.setSelectionStart(data);\n    }\n\n    // if a multiple selection already took place - clear the previous selection\n    if (this._selection.start && this._selection.end) {\n      this.deselect(...this.getSelectedItems());\n    }\n\n    // set the new selection end point\n    this.setSelectionEnd(data);\n\n    // select all the items in the range\n    this.select(...this.getSelectedItems());\n  }\n/**\n * Set the selection start point. If there was previously a\n * selection end point then clear it as this is a new selection\n * @param {?} data\n * @return {?}\n */\nprivate setSelectionStart(data: any): void {\n    this._selection.start = data;\n    this._selection.end = null;\n\n    // activate the item\n    this.selectionService.activate(data);\n  }\n/**\n * Set the selection end point\n * @param {?} data\n * @return {?}\n */\nprivate setSelectionEnd(data: any): void {\n    this._selection.end = data;\n\n    // activate the item\n    this.selectionService.activate(data);\n  }\n/**\n * Clear both start and end selection points\n * @param {?=} deactivate\n * @return {?}\n */\nprivate clearSelection(deactivate: boolean = true): void {\n\n    // reset the selected item\n    this._selection = { start: null, end: null };\n\n    // remove the current active item\n    if (deactivate) {\n      this.selectionService.deactivate();\n    }\n  }\n/**\n * Determine all the items affected by the current selection.\n * Note that the end point may be above the start point so\n * we need to account for this.\n * @return {?}\n */\nprivate getSelectedItems(): any[] {\n\n    // get the latest dataset\n    const { dataset } = this.selectionService;\n\n    // get the indexes of the start and end point\n    const /** @type {?} */ startIdx = dataset.indexOf(this._selection.start);\n    const /** @type {?} */ endIdx = dataset.indexOf(this._selection.end);\n\n    // get the region of the array that is selected - note the endIdx may be before the startIdx so account for this\n    return dataset.slice(Math.min(startIdx, endIdx), Math.max(startIdx, endIdx) + 1);\n  }\n/**\n * Activate the sibling item when arrow keys are pressed\n * @param {?} event\n * @param {?} data\n * @return {?}\n */\nprivate navigate(event: KeyboardEvent, data: any): void {\n\n    // determine which modifier keys are pressed\n    const { ctrlKey, shiftKey } = event;\n\n    // if no modifier keys are pressed then deselect all and clear the selection\n    if (!ctrlKey && !shiftKey) {\n      this.deselectAll();\n      this.clearSelection(false);\n    }\n\n    // activate the sibling - if the up arrow is pressed then navigate to the previous sibling\n    const /** @type {?} */ sibling = this.selectionService.activateSibling(event.keyCode === KeyCode.UpArrow);\n\n    // if the shift key is pressed then we also want to toggle the state if the item\n    if (shiftKey && sibling) {\n\n      // if there is no current selection start then select the current row\n      if (!this._selection.start) {\n        this.multipleSelect(data);\n      }\n\n      this.multipleSelect(sibling);\n    }\n  }\n}\n\nfunction RowSelectionStrategy_tsickle_Closure_declarations() {\n/** @type {?} */\nRowSelectionStrategy.prototype._selection;\n}\n\n\nexport interface Selection {\n  start: any;\n  end: any;\n}\ntype KeyCode = number;\nlet KeyCode: any = {};\nKeyCode.UpArrow = 38;\nKeyCode.DownArrow = 40;\nKeyCode.Spacebar = 32;\nKeyCode[KeyCode.UpArrow] = \"UpArrow\";\nKeyCode[KeyCode.DownArrow] = \"DownArrow\";\nKeyCode[KeyCode.Spacebar] = \"Spacebar\";\n\n","import { SelectionStrategy } from './selection.strategy';\nexport class SimpleSelectionStrategy extends SelectionStrategy {\n/**\n * When the item is clicked simply toggle the current selected state\n * @param {?} event\n * @param {?} data\n * @return {?}\n */\nclick(event: MouseEvent, data: any): void {\n    this.toggle(data);\n  }\n/**\n * Add basic keyboard support for navigating\n * and selecting/deselecting items\n * @param {?} event\n * @param {?} data\n * @return {?}\n */\nkeydown(event: KeyboardEvent, data: any): void {\n\n    switch (event.keyCode) {\n      \n      case KeyCode.UpArrow:\n        event.preventDefault();\n        return this.selectionService.activateSibling(true);\n        \n      case KeyCode.DownArrow:\n        event.preventDefault();\n        return this.selectionService.activateSibling(false);\n      \n      case KeyCode.Spacebar:\n        event.preventDefault();      \n        return this.toggle(data);\n    }\n  }\n/**\n * Override the standard toggle function to always activate the item\n * @param {?} data\n * @return {?}\n */\ntoggle(data: any): void {\n    super.toggle(data);\n    this.selectionService.activate(data);\n  }\n}\ntype KeyCode = number;\nlet KeyCode: any = {};\nKeyCode.UpArrow = 38;\nKeyCode.DownArrow = 40;\nKeyCode.Spacebar = 32;\nKeyCode[KeyCode.UpArrow] = \"UpArrow\";\nKeyCode[KeyCode.DownArrow] = \"DownArrow\";\nKeyCode[KeyCode.Spacebar] = \"Spacebar\";\n\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { Observable } from 'rxjs/Observable';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\nimport { RowSelectionStrategy } from './strategies/row-selection.strategy';\nimport { SelectionStrategy } from './strategies/selection.strategy';\nimport { SimpleSelectionStrategy } from './strategies/simple-selection.strategy';\nexport class SelectionService implements OnDestroy {\nprivate _selection = new Set();\nprivate _rowStrategy = new RowSelectionStrategy(this);\nprivate _simpleStrategy = new SimpleSelectionStrategy(this);\n\n  dataset: any[] = [];\n  enabled: boolean = true;\n  clickEnabled: boolean = true;\n  keyboardEnabled: boolean = true;\n  strategy: SelectionStrategy = this._simpleStrategy;\n\n  active$ = new BehaviorSubject<any>(null);\n  selection$ = new BehaviorSubject<any[]>([]);\n/**\n * @return {?}\n */\nngOnDestroy(): void {\n    this._rowStrategy.destroy();\n    this._simpleStrategy.destroy();\n  }\n/**\n * If the item is not currently selected then add it\n * to the list of selected items\n * @param {...?} selections\n * @return {?}\n */\nselect(...selections: any[]): void {\n\n    // add each selection to the set\n    selections.forEach(selection => this._selection.add(selection));\n\n    // propagate the changes\n    this.selectionHasMutated();\n  }\n/**\n * Remove an item from the list of selected items\n * @param {...?} selections\n * @return {?}\n */\ndeselect(...selections: any[]): void {\n    // remove each item from the set\n    selections.forEach(selection => this._selection.delete(selection));\n\n    // propagate the changes\n    this.selectionHasMutated();\n  }\n/**\n * Toggle the selected state of any specified items\n * @param {...?} selections\n * @return {?}\n */\ntoggle(...selections: any[]): void {\n    selections.forEach(selection => this.isSelected(selection) ? this.deselect(selection) : this.select(selection));\n  }\n/**\n * Determine whether or not a specific item is currently selected\n * @param {?} data\n * @return {?}\n */\nisSelected(data: any): boolean {\n    return this._selection.has(data);\n  }\n/**\n * Return an observable specifically for notifying the subscriber\n * only when the selection state of a specific object has changed\n * @param {?} data\n * @return {?}\n */\nselected$(data: any): Observable<boolean> {\n    return this.selection$.pipe(map(() => this.isSelected(data)), distinctUntilChanged());\n  }\n/**\n * Define how selections should be performed.\n * This allows us to use an strategy pattern to handle the various keyboard\n * and mouse interactions while keeping each mode separated and\n * easily extensible if we want to add more modes in future!\n * @param {?} mode\n * @return {?}\n */\nsetMode(mode: SelectionMode): void {\n\n    switch (mode.toLowerCase().trim()) {\n\n      case 'simple':\n        this.strategy = this._simpleStrategy;\n        break;\n\n      case 'row':\n        this.strategy = this._rowStrategy;\n        break;\n\n      default:\n        throw new Error(`The selection mode '${mode}' does not exist. Valid modes are 'simple' or 'row'.`);\n    }\n  }\n/**\n * Set the current active item\n * @param {?} data\n * @return {?}\n */\nactivate(data: any): void {\n    this.active$.next(data);\n  }\n/**\n * Deactive all items\n * @return {?}\n */\ndeactivate(): void {\n    this.active$.next(null);\n  }\n/**\n * Activate the sibling of the current active item.\n * If previous is set to true the previous sibling will be activated\n * rather than the next sibling. This function will also return the\n * data of the newly activated sibling\n * @param {?=} previous\n * @return {?}\n */\nactivateSibling(previous: boolean = false): any {\n\n    // get the currently active item\n    const /** @type {?} */ current = this.active$.getValue();\n\n    // check if there is a current active item\n    if (!current) {\n      return;\n    }\n\n    // get the index of the current item\n    const /** @type {?} */ idx = this.dataset.indexOf(current);\n    const /** @type {?} */ target = this.dataset[previous ? idx - 1 : idx + 1];\n\n    // check if the target exists\n    if (target) {\n      this.activate(target);\n    }\n\n    return target;\n  }\n/**\n * @param {?} disabled\n * @return {?}\n */\nsetDisabled(disabled: boolean): void {\n    // store the current disabled state\n    this.enabled = !disabled;\n\n    // clear any stateful data\n    this.active$.next(null);\n    this._selection.clear();\n\n    // emit the selection change information\n    this.selectionHasMutated();\n  }\n/**\n * @return {?}\n */\nprivate selectionHasMutated(): void {\n    this.selection$.next(Array.from(this._selection));\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction SelectionService_tsickle_Closure_declarations() {\n/** @type {?} */\nSelectionService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSelectionService.ctorParameters;\n/** @type {?} */\nSelectionService.prototype._selection;\n/** @type {?} */\nSelectionService.prototype._rowStrategy;\n/** @type {?} */\nSelectionService.prototype._simpleStrategy;\n/** @type {?} */\nSelectionService.prototype.dataset;\n/** @type {?} */\nSelectionService.prototype.enabled;\n/** @type {?} */\nSelectionService.prototype.clickEnabled;\n/** @type {?} */\nSelectionService.prototype.keyboardEnabled;\n/** @type {?} */\nSelectionService.prototype.strategy;\n/** @type {?} */\nSelectionService.prototype.active$;\n/** @type {?} */\nSelectionService.prototype.selection$;\n}\n\n\nexport type SelectionMode = 'simple' | 'row';\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ElementRef, EventEmitter, HostBinding, HostListener, Input, OnDestroy, OnInit, Output } from '@angular/core';\nimport { Subscription } from 'rxjs/Subscription';\nimport { map } from 'rxjs/operators';\nimport { SelectionService } from './selection.service';\nexport class SelectionItemDirective implements OnInit, OnDestroy {\n\n   uxSelectionItem: any;\n/**\n * @param {?} selected\n * @return {?}\n */\nset selected(selected: boolean) {\n    selected ? this.select() : this.deselect();\n  }\n/**\n * @return {?}\n */\nget selected(): boolean {\n    return this._selected;\n  }\n  \n    tabindex: number = 0;\n   selectedChange = new EventEmitter<boolean>();\n\n   active: boolean = false;\nprivate _selected: boolean = false;\nprivate _subscriptions = new Subscription();\n/**\n * @param {?} _selectionService\n * @param {?} _elementRef\n */\nconstructor(private _selectionService: SelectionService,\nprivate _elementRef: ElementRef) { }\n/**\n * @return {?}\n */\nngOnInit(): void {\n\n    // if there is no associated data then throw an error\n    if (!this.uxSelectionItem) {\n      throw new Error('The uxSelectionItem directive must have data associated with it.');\n    }\n\n    // subscribe to selection changes on this item\n    this._subscriptions.add(this._selectionService.selected$(this.uxSelectionItem).subscribe(selected => {\n\n      // store the selected state\n      this._selected = selected;\n\n      // emit the selected state\n      this.selectedChange.emit(selected);\n    }));\n\n    // subscribe to changes to the active state\n    this._subscriptions.add(this._selectionService.active$.pipe(map(active => active === this.uxSelectionItem)).subscribe(active => {\n\n      // store the focus state\n      this.active = active;\n\n      // if it is active then focus the element\n      if (active === true) {\n        this._elementRef.nativeElement.focus();\n      }\n    }));\n  }\n/**\n * @return {?}\n */\nngOnDestroy(): void {\n    this._subscriptions.unsubscribe();\n  }\n/**\n * @param {?} event\n * @return {?}\n */\nclick(event: MouseEvent): void {\n    if (this._selectionService.enabled && this._selectionService.clickEnabled) {\n      this._selectionService.strategy.click(event, this.uxSelectionItem);\n    }\n  }\n/**\n * @param {?} event\n * @return {?}\n */\nmousedown(event: MouseEvent): void {\n    if (this._selectionService.enabled && this._selectionService.clickEnabled) {\n      this._selectionService.strategy.mousedown(event, this.uxSelectionItem);\n    }\n  }\n/**\n * @param {?} event\n * @return {?}\n */\nkeydown(event: KeyboardEvent): void {\n    if (this._selectionService.enabled && this._selectionService.keyboardEnabled) {\n      this._selectionService.strategy.keydown(event, this.uxSelectionItem);\n    }\n  }\n/**\n * Select this item using the current strategy\n * @return {?}\n */\nselect(): void {\n    if (this._selectionService.enabled) {\n      this._selectionService.strategy.select(this.uxSelectionItem);\n    }\n  }\n/**\n * Deselect this item using the current strategy\n * @return {?}\n */\ndeselect(): void {\n    if (this._selectionService.enabled) {\n      this._selectionService.strategy.deselect(this.uxSelectionItem);\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[uxSelectionItem]',\n  exportAs: 'ux-selection-item'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: SelectionService, },\n{type: ElementRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'uxSelectionItem': [{ type: Input },],\n'selected': [{ type: Input },{ type: HostBinding, args: ['class.ux-selection-selected', ] },],\n'tabindex': [{ type: Input },{ type: HostBinding, args: ['tabindex', ] },],\n'selectedChange': [{ type: Output },],\n'active': [{ type: HostBinding, args: ['class.ux-selection-focused', ] },],\n'click': [{ type: HostListener, args: ['click', ['$event'], ] },],\n'mousedown': [{ type: HostListener, args: ['mousedown', ['$event'], ] },],\n'keydown': [{ type: HostListener, args: ['keydown', ['$event'], ] },],\n};\n}\n\nfunction SelectionItemDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nSelectionItemDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSelectionItemDirective.ctorParameters;\n/** @type {?} */\nSelectionItemDirective.propDecorators;\n/** @type {?} */\nSelectionItemDirective.prototype.uxSelectionItem;\n/** @type {?} */\nSelectionItemDirective.prototype.tabindex;\n/** @type {?} */\nSelectionItemDirective.prototype.selectedChange;\n/** @type {?} */\nSelectionItemDirective.prototype.active;\n/** @type {?} */\nSelectionItemDirective.prototype._selected;\n/** @type {?} */\nSelectionItemDirective.prototype._subscriptions;\n/** @type {?} */\nSelectionItemDirective.prototype._selectionService;\n/** @type {?} */\nSelectionItemDirective.prototype._elementRef;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { AfterContentInit, ContentChildren, Directive, EventEmitter, HostBinding, HostListener, Input, OnDestroy, Output, QueryList } from '@angular/core';\nimport { Subscription } from 'rxjs/Subscription';\nimport { SelectionItemDirective } from './selection-item.directive';\nimport { SelectionMode, SelectionService } from './selection.service';\nexport class SelectionDirective implements AfterContentInit, OnDestroy {\n/**\n * @param {?} items\n * @return {?}\n */\nset uxSelection(items: any[]) {\n    this._selectionService.select(...items);\n  }\n/**\n * @param {?} disabled\n * @return {?}\n */\nset disabled(disabled: boolean) {\n    this._selectionService.setDisabled(disabled);\n  }\n/**\n * @param {?} mode\n * @return {?}\n */\nset mode(mode: SelectionMode) {\n    this._selectionService.setMode(mode);\n  }\n/**\n * @param {?} enabled\n * @return {?}\n */\nset clickSelection(enabled: boolean) {\n    this._selectionService.clickEnabled = enabled;\n  }\n/**\n * @param {?} enabled\n * @return {?}\n */\nset keyboardSelection(enabled: boolean) {\n    this._selectionService.keyboardEnabled = enabled;\n  }\n\n    tabindex: number = 0;\n\n   uxSelectionChange = new EventEmitter<any[]>();\n\n   items: QueryList<SelectionItemDirective>;\nprivate _subscriptions = new Subscription();\n/**\n * @param {?} _selectionService\n */\nconstructor(private _selectionService: SelectionService) {\n    this._subscriptions.add(_selectionService.selection$.subscribe(items => this.uxSelectionChange.emit(items)));\n  }\n/**\n * @return {?}\n */\nngAfterContentInit(): void {\n    // provide the initial list of selection items\n    this.update();\n\n    // if the list changes then inform the service\n    this._subscriptions.add(this.items.changes.subscribe(() => this.update()));\n  }\n/**\n * @return {?}\n */\nngOnDestroy(): void {\n    this._subscriptions.unsubscribe();\n  }\n/**\n * If the directive element receives focus then activate the first item\n * @return {?}\n */\nfocus(): void {\n    if (this._selectionService.enabled && this._selectionService.dataset.length > 0) {\n      this._selectionService.activate(this._selectionService.dataset[0]);\n    }\n  }\n/**\n * Update the dataset to reflect the latest selection items\n * @return {?}\n */\nupdate(): void {\n    this._selectionService.dataset = this.items.map(item => item.uxSelectionItem);\n  }\n/**\n * Select all the items in the list\n * @return {?}\n */\nselectAll(): void {\n    if (this._selectionService.enabled) {\n      this._selectionService.strategy.selectAll();\n    }\n  }\n/**\n * Deselect all currently selected items\n * @return {?}\n */\ndeselectAll(): void {\n    if (this._selectionService.enabled) {\n      this._selectionService.strategy.deselectAll();\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[uxSelection]',\n  exportAs: 'ux-selection',\n  providers: [ SelectionService ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: SelectionService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'uxSelection': [{ type: Input },],\n'disabled': [{ type: Input },],\n'mode': [{ type: Input },],\n'clickSelection': [{ type: Input },],\n'keyboardSelection': [{ type: Input },],\n'tabindex': [{ type: Input },{ type: HostBinding, args: ['tabindex', ] },],\n'uxSelectionChange': [{ type: Output },],\n'items': [{ type: ContentChildren, args: [SelectionItemDirective, ] },],\n'focus': [{ type: HostListener, args: ['focus', ] },],\n};\n}\n\nfunction SelectionDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nSelectionDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSelectionDirective.ctorParameters;\n/** @type {?} */\nSelectionDirective.propDecorators;\n/** @type {?} */\nSelectionDirective.prototype.tabindex;\n/** @type {?} */\nSelectionDirective.prototype.uxSelectionChange;\n/** @type {?} */\nSelectionDirective.prototype.items;\n/** @type {?} */\nSelectionDirective.prototype._subscriptions;\n/** @type {?} */\nSelectionDirective.prototype._selectionService;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { SelectionItemDirective } from './selection-item.directive';\nimport { SelectionDirective } from './selection.directive';\nexport class SelectionModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  imports: [\n    CommonModule\n  ],\n  declarations: [SelectionDirective, SelectionItemDirective],\n  exports: [SelectionDirective, SelectionItemDirective]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction SelectionModule_tsickle_Closure_declarations() {\n/** @type {?} */\nSelectionModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSelectionModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive } from '@angular/core';\nexport class ReorderableHandleDirective { static decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: '[uxReorderableHandle]'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ReorderableHandleDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nReorderableHandleDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nReorderableHandleDirective.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, Input, ElementRef } from '@angular/core';\nexport class ReorderableModelDirective {\n\n    // allow the user to specify a model for the item - allows use with ngFor\n     uxReorderableModel: any;\n/**\n * @param {?} elementRef\n */\nconstructor(public elementRef: ElementRef) { }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: '[uxReorderableModel]'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'uxReorderableModel': [{ type: Input },],\n};\n}\n\nfunction ReorderableModelDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nReorderableModelDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nReorderableModelDirective.ctorParameters;\n/** @type {?} */\nReorderableModelDirective.propDecorators;\n/** @type {?} */\nReorderableModelDirective.prototype.uxReorderableModel;\n/** @type {?} */\nReorderableModelDirective.prototype.elementRef;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","// WORKAROUND: ng-packagr issue - https://github.com/dherges/ng-packagr/issues/163\n\nimport * as dragulaNamespace from 'dragula';\nimport { Drake } from 'dragula';\n\nexport const /** @type {?} */ dragula: (containers?: any, options?: any) => Drake = ( /** @type {?} */((dragulaNamespace as any))).default || dragulaNamespace;","import { Injectable, EventEmitter } from '@angular/core';\nimport { Drake, DragulaOptions } from 'dragula';\nimport { dragula } from './dragula';\nexport class ReorderableService {\nprivate _groups: { [k: string]: ReorderableGroup } = {};\nprivate _uniqueGroupId = 0;\n/**\n * Returns a unique string which can be used as a group name if one was not configured.\n * @return {?}\n */\ngetUniqueGroupName(): string {\n        return '_uxReorderable_' + this._uniqueGroupId++;\n    }\n/**\n * Adds the container to the named group.\n * @param {?} groupName\n * @param {?} container\n * @return {?}\n */\nregister(groupName: string, container: ReorderableContainer): ReorderableGroup {\n\n        if (!this._groups[groupName]) {\n            this._groups[groupName] = new ReorderableGroup();\n        }\n\n        this._groups[groupName].register(container);\n\n        return this._groups[groupName];\n    }\n/**\n * Removes the container from the named group. If it was the last container in the group, destroys the group.\n * @param {?} groupName\n * @param {?} container\n * @return {?}\n */\nunregister(groupName: string, container: ReorderableContainer): void {\n\n        const /** @type {?} */ group = this._groups[groupName];\n\n        if (group) {\n            group.unregister(container);\n\n            if (group.isEmpty()) {\n                group.destroy();\n\n                delete this._groups[groupName];\n            }\n        }\n    }\n/**\n * Creates the dragula instance with the current config and attaches the events, if not already created.\n * @param {?} groupName\n * @return {?}\n */\ninitialize(groupName: string): ReorderableGroup {\n\n        const /** @type {?} */ group = this._groups[groupName];\n\n        if (group) {\n            group.initialize();\n        }\n\n        return group;\n    }\n/**\n * Returns the group object for the given name.\n * @param {?} group\n * @return {?}\n */\ngetGroup(group: string): ReorderableGroup {\n        return this._groups[group];\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ReorderableService_tsickle_Closure_declarations() {\n/** @type {?} */\nReorderableService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nReorderableService.ctorParameters;\n/** @type {?} */\nReorderableService.prototype._groups;\n/** @type {?} */\nReorderableService.prototype._uniqueGroupId;\n}\n\n\nexport interface ReorderableContainer {\n    element: Element;\n    getModelFromElement: (element: Element) => any;\n    canMove: (element: Element, container: Element, handle: Element) => boolean;\n}\n\nexport interface ReorderableDragEvent {\n    model: any;\n    element: Element;\n    source: Element;\n}\n\nexport interface ReorderableDragEndEvent {\n    model: any;\n    element: Element;\n}\n\nexport interface ReorderableDropEvent {\n    model: any;\n    element: Element;\n    target: Element;\n    source: Element;\n    sibling: Element;\n}\n\nexport interface ReorderableCancelEvent {\n    model: any;\n    element: Element;\n}\n\nexport interface ReorderableClonedEvent {\n    clone: Element;\n    element: Element;\n    type: string;\n}\n/**\n * Represents a collection of drag-and-drop containers (uxReorderable) that items can be dragged between.\n */\nexport class ReorderableGroup {\n\n    drag = new EventEmitter<ReorderableDragEvent>();\n    dragEnd = new EventEmitter<ReorderableDragEndEvent>();\n    drop = new EventEmitter<ReorderableDropEvent>();\n    cancel = new EventEmitter<ReorderableCancelEvent>();\n    cloned = new EventEmitter<ReorderableClonedEvent>();\nprivate _instance: Drake;\nprivate _containers: ReorderableContainer[] = [];\nprivate _config: DragulaOptions = {\n        moves: this.canMove.bind(this)\n    };\n/**\n * Returns true if there are no containers registered with the group.\n * @return {?}\n */\nisEmpty(): boolean {\n        return this._containers.length === 0;\n    }\n/**\n * Returns the model object (uxReorderableModel) for an elements in one of the containers in the group.\n * @param {?} element\n * @return {?}\n */\ngetModelForElement(element: Element): any {\n        for (const /** @type {?} */ container of this._containers) {\n            const /** @type {?} */ model = container.getModelFromElement(element);\n            if (model) {\n                return model;\n            }\n        }\n\n        return null;\n    }\n/**\n * Adds the container to the group.\n * @param {?} container\n * @return {?}\n */\nregister(container: ReorderableContainer): void {\n        this._containers.push(container);\n\n        if (this._instance) {\n            this._instance.containers = this._containers.map((c) => c.element);\n        }\n\n        if (!this._config.mirrorContainer) {\n            this._config.mirrorContainer = container.element;\n        }\n    }\n/**\n * Removes the container from the group.\n * @param {?} container\n * @return {?}\n */\nunregister(container: ReorderableContainer): void {\n        const /** @type {?} */ index = this._containers.indexOf(container);\n        if (index >= 0) {\n            this._containers.splice(index, 1);\n            if (this._instance) {\n                this._instance.containers = this._containers.map((c) => c.element);\n            }\n        }\n    }\n/**\n * Creates the dragula instance with the current config and attaches the events, if not already created.\n * @return {?}\n */\ninitialize(): void {\n\n        if (this._instance) {\n            return;\n        }\n\n        this._instance = dragula(this._containers.map((c) => c.element), this._config);\n\n        this._instance.on('drag', (element: Element, source: Element) => {\n            this.drag.emit({\n                model: this.getModelForElement(element),\n                element: element,\n                source: source\n            });\n        });\n        this._instance.on('dragend', (element: Element) => {\n            this.dragEnd.emit({\n                model: this.getModelForElement(element),\n                element: element\n            });\n        });\n        this._instance.on('drop', (element: Element, target: Element, source: Element, sibling: Element) => {\n            this.drop.emit({\n                model: this.getModelForElement(element),\n                element: element,\n                target: target,\n                source: source,\n                sibling: sibling\n            });\n        });\n        this._instance.on('cancel', (element: Element) => {\n            this.cancel.emit({\n                model: this.getModelForElement(element),\n                element: element\n            });\n        });\n        this._instance.on('cloned', (clone: Element, element: Element, type: string) => {\n            this.cloned.emit({\n                clone: clone,\n                element: element,\n                type: type\n            });\n        });\n    }\n/**\n * Destroys the dragula instance.\n * @return {?}\n */\ndestroy(): void {\n        if (this._instance) {\n            this._instance.destroy();\n            this._instance = null;\n        }\n    }\n/**\n * Finds the container for the containerElement and returns the results of canMove.\n * @param {?} element\n * @param {?} containerElement\n * @param {?} handle\n * @return {?}\n */\nprivate canMove(element: Element, containerElement: Element, handle: Element): boolean {\n        for (let /** @type {?} */ container of this._containers) {\n            if (container.element.isSameNode(containerElement)) {\n                return container.canMove(element, containerElement, handle);\n            }\n        }\n    }\n}\n\nfunction ReorderableGroup_tsickle_Closure_declarations() {\n/** @type {?} */\nReorderableGroup.prototype.drag;\n/** @type {?} */\nReorderableGroup.prototype.dragEnd;\n/** @type {?} */\nReorderableGroup.prototype.drop;\n/** @type {?} */\nReorderableGroup.prototype.cancel;\n/** @type {?} */\nReorderableGroup.prototype.cloned;\n/** @type {?} */\nReorderableGroup.prototype._instance;\n/** @type {?} */\nReorderableGroup.prototype._containers;\n/** @type {?} */\nReorderableGroup.prototype._config;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, Input, ElementRef, OnInit, ContentChildren, QueryList, OnDestroy, Output, EventEmitter, Renderer2, AfterViewInit, HostBinding } from '@angular/core';\nimport { Subscription } from 'rxjs/Subscription';\nimport { Drake } from 'dragula';\nimport { ReorderableHandleDirective } from './reorderable-handle.directive';\nimport { ReorderableModelDirective } from './reorderable-model.directive';\nimport { ReorderableService, ReorderableContainer, ReorderableDragEvent, ReorderableDragEndEvent, ReorderableDropEvent, ReorderableClonedEvent, ReorderableCancelEvent } from './reorderable.service';\nimport { dragula } from './dragula';\nexport class ReorderableDirective implements OnInit, AfterViewInit, OnDestroy {\n\n     reorderableModel: Array<any>;\n     reorderableGroup: string;\n     reorderableModelChange = new EventEmitter<Array<any>>();\n     reorderStart = new EventEmitter<ReorderEvent>();\n     reorderCancel = new EventEmitter<ReorderEvent>();\n     reorderEnd = new EventEmitter<ReorderEvent>();\n\n     handles: QueryList<ElementRef>;\n     models: QueryList<ReorderableModelDirective>;\nprivate _instance: Drake;\nprivate _container: ReorderableContainer;\nprivate _dragging = false;\nprivate _subscriptions = new Subscription();\n/**\n * @param {?} _elementRef\n * @param {?} _renderer\n * @param {?} _service\n */\nconstructor(\nprivate _elementRef: ElementRef,\nprivate _renderer: Renderer2,\nprivate _service: ReorderableService\n    ) { }\n/**\n * Initialise dragula and bind to all the required events\n * @return {?}\n */\nngOnInit(): void {\n\n        // If no group name then generate a unique one for this instance only\n        if (!this.reorderableGroup) {\n            this.reorderableGroup = this._service.getUniqueGroupName();\n        }\n\n        this._container = {\n            element: this._elementRef.nativeElement,\n            getModelFromElement: this.getModelFromElement.bind(this),\n            canMove: this.canMove.bind(this)\n        };\n\n        // Register for drag events on this element\n        const /** @type {?} */ group = this._service.register(this.reorderableGroup, this._container);\n        this._subscriptions.add(group.drag.subscribe(this.onDrag.bind(this)));\n        this._subscriptions.add(group.dragEnd.subscribe(this.onDragEnd.bind(this)));\n        this._subscriptions.add(group.drop.subscribe(this.onDrop.bind(this)));\n        this._subscriptions.add(group.cancel.subscribe((event: ReorderableCancelEvent) => this.reorderCancel.emit({ element: event.element, model: event.model })));\n        this._subscriptions.add(group.cloned.subscribe(this.onClone.bind(this)));\n    }\n/**\n * @return {?}\n */\nngAfterViewInit(): void {\n        this._service.initialize(this.reorderableGroup);\n    }\n/**\n * We need to destroy the dragula instance on component destroy\n * @return {?}\n */\nngOnDestroy(): void {\n        this._service.unregister(this.reorderableGroup, this._container);\n        this._subscriptions.unsubscribe();\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nonDrag(event: ReorderableDragEvent): void {\n\n        this._dragging = true;\n\n        this.reorderStart.emit({ element: event.element, model: event.model });\n    }\n/**\n * This is fired when items get reordered - we need to emit the new order of the models\n * @param {?} event\n * @return {?}\n */\nonDrop(event: ReorderableDropEvent): void {\n\n        // if there is no provided module we can skip this\n        if (!this.reorderableModel) {\n            return;\n        }\n\n        let /** @type {?} */ changed = false;\n\n        if (event.source.isSameNode(this._elementRef.nativeElement)) {\n\n            // remove this model from the list of models\n            const /** @type {?} */ index = this.reorderableModel.indexOf(event.model);\n            if (index >= 0) {\n                this.reorderableModel.splice(index, 1);\n                changed = true;\n            }\n        }\n\n        if (event.target.isSameNode(this._elementRef.nativeElement)) {\n\n            // get the position of sibling element\n            const /** @type {?} */ index = event.sibling && !event.sibling.classList.contains('gu-mirror') ?\n                this.reorderableModel.indexOf(this.getModelFromElement(event.sibling)) :\n                this.reorderableModel.length;\n\n            // insert the model at its new location\n            this.reorderableModel.splice(index, 0, event.model);\n            changed = true;\n        }\n\n        // Emit event if any changes were made\n        if (changed) {\n            this.reorderableModelChange.emit(this.reorderableModel);\n        }\n    }\n/**\n * Return the model assciated with a particular element in the list.\n * This should ensure that the items have the draggable model directive applied\n * @param {?} element\n * @return {?}\n */\ngetModelFromElement(element: Element): any {\n\n        const /** @type {?} */ model = this.models.find(_model => _model.elementRef.nativeElement === element);\n\n        if (!model) {\n            return null;\n        }\n\n        return model.uxReorderableModel;\n    }\n/**\n * When we finish dragging remove the utillity class from the element being moved\n * @param {?} event\n * @return {?}\n */\nonDragEnd(event: ReorderableDragEndEvent): void {\n\n        this._dragging = false;\n\n        if (this._elementRef.nativeElement.contains(event.element)) {\n\n            this._renderer.removeClass(event.element, 'ux-reorderable-moving');\n\n            this.reorderEnd.emit({\n                element: event.element,\n                model: event.model\n            });\n        }\n    }\n/**\n * We want to ensure that the cloned element is identical\n * to the original, regardless of it's location in the DOM tree\n * @param {?} event\n * @return {?}\n */\nonClone(event: ReorderableClonedEvent): void {\n\n        if (this._elementRef.nativeElement.contains(event.element)) {\n\n            this.setTableCellWidths(event.element, event.clone);\n            this.captureCanvases(event.element, event.clone);\n\n            this._renderer.addClass(event.element, 'ux-reorderable-moving');\n        }\n    }\n/**\n * If elements contain handles then only drag when the handle is dragged\n * otherwise drag whenever an immediate child is specified\n * @param {?} element\n * @param {?} container\n * @param {?} handle\n * @return {?}\n */\ncanMove(element: Element, container: Element, handle: Element): boolean {\n        return this.handles.length === 0 ? true : !!this.handles.find(_handle => _handle.nativeElement === handle);\n    }\n/**\n * @param {?} source\n * @param {?} target\n * @return {?}\n */\nprivate setTableCellWidths(source: Element, target: Element): void {\n\n        // if it is not a table row then skip this\n        if (source.tagName !== 'TR') {\n            return;\n        }\n\n        // find any immediate td children and fix their width\n        const /** @type {?} */ sourceCells = /** @type {?} */(( Array.from(source.children) as HTMLTableCellElement[]));\n        const /** @type {?} */ targetCells = /** @type {?} */(( Array.from(target.children) as HTMLTableCellElement[]));\n\n        // fix the width of these cells\n        sourceCells.forEach((cell, idx) => targetCells[idx].style.minWidth = getComputedStyle(cell).getPropertyValue('width'));\n    }\n/**\n * @param {?} source\n * @param {?} target\n * @return {?}\n */\nprivate captureCanvases(source: Element, target: Element): void {\n\n        // find all child canvas elements\n        const /** @type {?} */ sourceCanvases = Array.from(source.querySelectorAll('canvas'));\n        const /** @type {?} */ targetCanvases = Array.from(target.querySelectorAll('canvas'));\n\n        // replicate the canvas content\n        targetCanvases.map(canvas => canvas.getContext('2d'))\n            .forEach((context, idx) => context.drawImage(sourceCanvases[idx], 0, 0));\n\n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: '[uxReorderable]'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Renderer2, },\n{type: ReorderableService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'reorderableModel': [{ type: Input },],\n'reorderableGroup': [{ type: Input },],\n'reorderableModelChange': [{ type: Output },],\n'reorderStart': [{ type: Output },],\n'reorderCancel': [{ type: Output },],\n'reorderEnd': [{ type: Output },],\n'handles': [{ type: ContentChildren, args: [ReorderableHandleDirective, { read: ElementRef, descendants: true }, ] },],\n'models': [{ type: ContentChildren, args: [ReorderableModelDirective, ] },],\n'_dragging': [{ type: HostBinding, args: ['class.ux-reorderable-container-moving', ] },],\n};\n}\n\nfunction ReorderableDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nReorderableDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nReorderableDirective.ctorParameters;\n/** @type {?} */\nReorderableDirective.propDecorators;\n/** @type {?} */\nReorderableDirective.prototype.reorderableModel;\n/** @type {?} */\nReorderableDirective.prototype.reorderableGroup;\n/** @type {?} */\nReorderableDirective.prototype.reorderableModelChange;\n/** @type {?} */\nReorderableDirective.prototype.reorderStart;\n/** @type {?} */\nReorderableDirective.prototype.reorderCancel;\n/** @type {?} */\nReorderableDirective.prototype.reorderEnd;\n/** @type {?} */\nReorderableDirective.prototype.handles;\n/** @type {?} */\nReorderableDirective.prototype.models;\n/** @type {?} */\nReorderableDirective.prototype._instance;\n/** @type {?} */\nReorderableDirective.prototype._container;\n/** @type {?} */\nReorderableDirective.prototype._dragging;\n/** @type {?} */\nReorderableDirective.prototype._subscriptions;\n/** @type {?} */\nReorderableDirective.prototype._elementRef;\n/** @type {?} */\nReorderableDirective.prototype._renderer;\n/** @type {?} */\nReorderableDirective.prototype._service;\n}\n\n\nexport interface ReorderEvent {\n    element: Element;\n    model: any;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReorderableDirective } from './reorderable.directive';\nimport { ReorderableHandleDirective } from './reorderable-handle.directive';\nimport { ReorderableModelDirective } from './reorderable-model.directive';\nimport { ReorderableService } from './reorderable.service';\nexport class ReorderableModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        CommonModule\n    ],\n    declarations: [\n        ReorderableDirective,\n        ReorderableHandleDirective,\n        ReorderableModelDirective\n    ],\n    exports: [\n        ReorderableDirective,\n        ReorderableHandleDirective,\n        ReorderableModelDirective\n    ],\n    providers: [\n        ReorderableService\n    ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ReorderableModule_tsickle_Closure_declarations() {\n/** @type {?} */\nReorderableModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nReorderableModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Pipe, Injectable, PipeTransform } from '@angular/core';\nexport class StringFilterPipe implements PipeTransform {\n/**\n * @param {?} items\n * @param {?} value\n * @return {?}\n */\ntransform(items: any[], value: string): any[] {  \n        if (!items) {\n            return [];\n        }\n        return items.filter(it => it.toLowerCase().indexOf(value.toLowerCase()) >= 0);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Pipe, args: [{\n    name: 'stringFilter'\n}, ] },\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction StringFilterPipe_tsickle_Closure_declarations() {\n/** @type {?} */\nStringFilterPipe.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nStringFilterPipe.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { StringFilterPipe } from './string-filter.pipe';\nimport { NgModule } from '@angular/core';\nexport class StringFilterModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    exports: [StringFilterPipe],\n    declarations: [StringFilterPipe]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction StringFilterModule_tsickle_Closure_declarations() {\n/** @type {?} */\nStringFilterModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nStringFilterModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { StorageAdapter } from './storage-adapter';\nexport class CookieAdapter implements StorageAdapter {\n/**\n * @param {?} key\n * @return {?}\n */\ngetItem(key: string): string {\n\n        if (document.cookie) {\n\n            // get all the cookies for this site\n            const /** @type {?} */ cookies = document.cookie.split(';');\n\n            // process the cookies into a from we can easily manage\n            const /** @type {?} */ match = cookies\n                .map(cookie => ({ key: cookie.split('=')[0].trim(), value: cookie.split('=')[1].trim() }))\n                .find(cookie => cookie.key === key);\n\n            return match ? match.value : null;\n        }\n\n        return null;\n    }\n/**\n * @param {?} key\n * @param {?} value\n * @return {?}\n */\nsetItem(key: string, value: string): void {\n        document.cookie = `${key}=${value}; path=/`;\n    }\n/**\n * @param {?} key\n * @return {?}\n */\nremoveItem(key: string): void {\n\n        document.cookie.split(';').forEach(cookie => {\n            const /** @type {?} */ eqPos = cookie.indexOf('=');\n            const /** @type {?} */ name = eqPos > -1 ? cookie.substr(0, eqPos).trim() : cookie;\n\n            if (name === key) {\n                document.cookie = cookie.trim().replace(/=.*/, `=;expires=${new Date().toUTCString()};path=/`);\n            }\n        });\n    }\n/**\n * @return {?}\n */\nclear(): void {\n\n        // call remove item on each cookie\n        document.cookie.split(';').map(cookie => cookie.split('=')[0].trim())\n            .forEach(cookie => this.removeItem(cookie));\n    }\n/**\n * @return {?}\n */\ngetSupported(): StorageAdapter {\n        // cookies are supported in all browsers\n        return this;\n    }\n\n}","import { StorageAdapter } from './storage-adapter';\nimport { CookieAdapter } from './cookie-adapter';\nexport class LocalStorageAdapter implements StorageAdapter {\n/**\n * @param {?} key\n * @return {?}\n */\ngetItem(key: string): string {\n        return localStorage.getItem(key);\n    }\n/**\n * @param {?} key\n * @param {?} value\n * @return {?}\n */\nsetItem(key: string, value: string): void {\n        localStorage.setItem(key, value);\n    }\n/**\n * @param {?} key\n * @return {?}\n */\nremoveItem(key: string): void {\n        localStorage.removeItem(key);\n    }\n/**\n * @return {?}\n */\nclear(): void {\n        localStorage.clear();\n    }\n/**\n * @return {?}\n */\ngetSupported(): StorageAdapter {\n\n        // if local storage variable does not exist fall back to cookies\n        if (!localStorage) {\n            return new CookieAdapter();\n        }\n\n        // try to make a test save to local storage to see if there are any exceptions\n        try {\n            localStorage.setItem('ux-persistent-data-service', 'ux-persistent-data-service');\n            localStorage.removeItem('ux-persistent-data-service');\n\n            return this;\n        } catch ( /** @type {?} */err) {\n            return new CookieAdapter();\n        }\n    }\n\n}","import { StorageAdapter } from './storage-adapter';\nimport { CookieAdapter } from './cookie-adapter';\nexport class SessionStorageAdapter implements StorageAdapter {\n/**\n * @param {?} key\n * @return {?}\n */\ngetItem(key: string): string {\n        return sessionStorage.getItem(key);\n    }\n/**\n * @param {?} key\n * @param {?} value\n * @return {?}\n */\nsetItem(key: string, value: string): void {\n        sessionStorage.setItem(key, value);\n    }\n/**\n * @param {?} key\n * @return {?}\n */\nremoveItem(key: string): void {\n        sessionStorage.removeItem(key);\n    }\n/**\n * @return {?}\n */\nclear(): void {\n        sessionStorage.clear();\n    }\n/**\n * @return {?}\n */\ngetSupported(): StorageAdapter {\n\n        // if local storage variable does not exist fall back to cookies\n        if (!sessionStorage) {\n            return new CookieAdapter();\n        }\n\n        // try to make a test save to local storage to see if there are any exceptions\n        try {\n            sessionStorage.setItem('ux-persistent-data-service', 'ux-persistent-data-service');\n            sessionStorage.removeItem('ux-persistent-data-service');\n\n            return this;\n        } catch ( /** @type {?} */err) {\n            return new CookieAdapter();\n        }\n    }\n\n}","import { Injectable } from '@angular/core';\nimport { StorageAdapter } from './adapters/storage-adapter';\nimport { CookieAdapter } from './adapters/cookie-adapter';\nimport { LocalStorageAdapter } from './adapters/local-storage-adapter';\nimport { SessionStorageAdapter } from './adapters/session-storage-adapter';\nexport class PersistentDataService {\n/**\n * Save the item in some form of persistent storage\n * @param {?} key\n * @param {?} value\n * @param {?=} type\n * @return {?}\n */\nsetItem(key: string, value: string, type: PersistentDataStorageType = PersistentDataStorageType.LocalStorage): void {\n        this.getAdapter(type).setItem(key, value);\n    }\n/**\n * Get a stored value from persistent storage\n * @param {?} key\n * @param {?=} type\n * @return {?}\n */\ngetItem(key: string, type: PersistentDataStorageType = PersistentDataStorageType.LocalStorage): string {\n        return this.getAdapter(type).getItem(key);\n    }\n/**\n * Remove a stored value from persistent storage\n * @param {?} key\n * @param {?=} type\n * @return {?}\n */\nremoveItem(key: string, type: PersistentDataStorageType = PersistentDataStorageType.LocalStorage): void {\n        this.getAdapter(type).removeItem(key);\n    }\n/**\n * Remove a stored value from persistent storage\n * @param {?=} type\n * @return {?}\n */\nclear(type: PersistentDataStorageType = PersistentDataStorageType.LocalStorage): void {\n        this.getAdapter(type).clear();\n    }\n/**\n * Return the appropriate adapter based on the type requested\n * @param {?} type\n * @return {?}\n */\nprivate getAdapter(type: PersistentDataStorageType): StorageAdapter {\n\n        switch (type) {\n\n            case PersistentDataStorageType.Cookie:\n                return new CookieAdapter();\n\n            case PersistentDataStorageType.LocalStorage:\n                const /** @type {?} */ localStorageAdapter = new LocalStorageAdapter();\n                return localStorageAdapter.getSupported();\n\n            case PersistentDataStorageType.SessionStorage:\n                const /** @type {?} */ sessionStorageAdapter = new SessionStorageAdapter();\n                return sessionStorageAdapter.getSupported();\n        }\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction PersistentDataService_tsickle_Closure_declarations() {\n/** @type {?} */\nPersistentDataService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nPersistentDataService.ctorParameters;\n}\n\nexport type PersistentDataStorageType = number;\nexport let PersistentDataStorageType: any = {};\nPersistentDataStorageType.LocalStorage = 0;\nPersistentDataStorageType.Cookie = 1;\nPersistentDataStorageType.SessionStorage = 2;\nPersistentDataStorageType[PersistentDataStorageType.LocalStorage] = \"LocalStorage\";\nPersistentDataStorageType[PersistentDataStorageType.Cookie] = \"Cookie\";\nPersistentDataStorageType[PersistentDataStorageType.SessionStorage] = \"SessionStorage\";\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\n\nimport { PersistentDataService } from './persistent-data.service';\nexport class PersistentDataModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    providers: [PersistentDataService],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction PersistentDataModule_tsickle_Closure_declarations() {\n/** @type {?} */\nPersistentDataModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nPersistentDataModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","\n/**\n * @abstract\n */\nexport abstract class StorageAdapter {\n/**\n * @abstract\n * @param {?} key\n * @return {?}\n */\ngetItem(key: string) {}\n/**\n * @abstract\n * @param {?} key\n * @param {?} value\n * @return {?}\n */\nsetItem(key: string, value: string) {}\n/**\n * @abstract\n * @param {?} key\n * @return {?}\n */\nremoveItem(key: string) {}\n/**\n * @abstract\n * @return {?}\n */\nclear() {}\n/**\n * @abstract\n * @return {?}\n */\ngetSupported() {}\n}","import { Directive, ElementRef, Injector, Input, Output, EventEmitter } from '@angular/core';\nimport { UpgradeComponent } from '@angular/upgrade/static';\nexport class ContactsNg1Component extends UpgradeComponent {\n\n     contacts: Contact[];\n     organization: string;\n     size: 'medium' | 'small';\n     colors: any;\n     maxContacts: number;\n\n     overflowClick: EventEmitter<void> = new EventEmitter<void>();\n/**\n * @param {?} elementRef\n * @param {?} injector\n */\nconstructor(elementRef: ElementRef, injector: Injector) {\n        super('contactGroup', elementRef, injector);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'contact-group'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Injector, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'contacts': [{ type: Input },],\n'organization': [{ type: Input },],\n'size': [{ type: Input },],\n'colors': [{ type: Input },],\n'maxContacts': [{ type: Input },],\n'overflowClick': [{ type: Output },],\n};\n}\n\nfunction ContactsNg1Component_tsickle_Closure_declarations() {\n/** @type {?} */\nContactsNg1Component.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nContactsNg1Component.ctorParameters;\n/** @type {?} */\nContactsNg1Component.propDecorators;\n/** @type {?} */\nContactsNg1Component.prototype.contacts;\n/** @type {?} */\nContactsNg1Component.prototype.organization;\n/** @type {?} */\nContactsNg1Component.prototype.size;\n/** @type {?} */\nContactsNg1Component.prototype.colors;\n/** @type {?} */\nContactsNg1Component.prototype.maxContacts;\n/** @type {?} */\nContactsNg1Component.prototype.overflowClick;\n}\n\n\nexport interface Contact {\n    test: string;\n    status: 'active' | 'passive';\n    customTooltip?: {\n        template: string,\n        tooltipPosition: string;\n        data?: any;\n    };\n}\n\nexport interface Organization {\n    text: string;\n    label: 'external' | 'risk';\n    tooltip?: string;\n    customTooltip?: {\n        template: string,\n        tooltipPosition: string;\n        data?: any;\n    };\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ElementRef, Injector, Input, Output, EventEmitter } from '@angular/core';\nimport { UpgradeComponent } from '@angular/upgrade/static';\nexport class ExpandInputNg1Component extends UpgradeComponent {\n\n     elname: string;\n     placeHolder: string;\n     className: string;\n     clearTextIcon: string;\n     closeSearch: string;\n     expandAlways: boolean;\n     onEnter: Function;\n\n     focus: EventEmitter<string> = new EventEmitter<string>();\n/**\n * @param {?} elementRef\n * @param {?} injector\n */\nconstructor(elementRef: ElementRef, injector: Injector) {\n        super('expandInput', elementRef, injector);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'expand-input'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Injector, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'elname': [{ type: Input },],\n'placeHolder': [{ type: Input },],\n'className': [{ type: Input },],\n'clearTextIcon': [{ type: Input },],\n'closeSearch': [{ type: Input },],\n'expandAlways': [{ type: Input },],\n'onEnter': [{ type: Input },],\n'focus': [{ type: Output },],\n};\n}\n\nfunction ExpandInputNg1Component_tsickle_Closure_declarations() {\n/** @type {?} */\nExpandInputNg1Component.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nExpandInputNg1Component.ctorParameters;\n/** @type {?} */\nExpandInputNg1Component.propDecorators;\n/** @type {?} */\nExpandInputNg1Component.prototype.elname;\n/** @type {?} */\nExpandInputNg1Component.prototype.placeHolder;\n/** @type {?} */\nExpandInputNg1Component.prototype.className;\n/** @type {?} */\nExpandInputNg1Component.prototype.clearTextIcon;\n/** @type {?} */\nExpandInputNg1Component.prototype.closeSearch;\n/** @type {?} */\nExpandInputNg1Component.prototype.expandAlways;\n/** @type {?} */\nExpandInputNg1Component.prototype.onEnter;\n/** @type {?} */\nExpandInputNg1Component.prototype.focus;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ElementRef, Injector, Input, EventEmitter } from '@angular/core';\nimport { UpgradeComponent } from '@angular/upgrade/static';\nexport class FloatingActionButtonNg1Component extends UpgradeComponent {\n\n     items: FloatingActionButtonItem[] = [];\n     primary: string;\n     direction: 'top' | 'right' | 'bottom' | 'left';\n     fabTooltip: string;\n     fabTooltipPlacement: 'top' | 'right' | 'bottom' | 'left';\n/**\n * @param {?} elementRef\n * @param {?} injector\n */\nconstructor(elementRef: ElementRef, injector: Injector) {\n        super('floatingActionButton', elementRef, injector);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'floating-action-button'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Injector, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'items': [{ type: Input },],\n'primary': [{ type: Input },],\n'direction': [{ type: Input },],\n'fabTooltip': [{ type: Input },],\n'fabTooltipPlacement': [{ type: Input },],\n};\n}\n\nfunction FloatingActionButtonNg1Component_tsickle_Closure_declarations() {\n/** @type {?} */\nFloatingActionButtonNg1Component.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFloatingActionButtonNg1Component.ctorParameters;\n/** @type {?} */\nFloatingActionButtonNg1Component.propDecorators;\n/** @type {?} */\nFloatingActionButtonNg1Component.prototype.items;\n/** @type {?} */\nFloatingActionButtonNg1Component.prototype.primary;\n/** @type {?} */\nFloatingActionButtonNg1Component.prototype.direction;\n/** @type {?} */\nFloatingActionButtonNg1Component.prototype.fabTooltip;\n/** @type {?} */\nFloatingActionButtonNg1Component.prototype.fabTooltipPlacement;\n}\n\n\nexport interface FloatingActionButtonItem {\n    icon: string;\n    event: Function;\n    tooltip?: string;\n    tooltipPlacement?: string;\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ElementRef, Injector, Input, Output, EventEmitter } from '@angular/core';\nimport { UpgradeComponent } from '@angular/upgrade/static';\nexport class FlotNg1Component extends UpgradeComponent {\n\n     dataset: any;\n     options: any;\n     callback: any;\n     donutLabels: any;\n     onPlotClick = new EventEmitter<any>();\n     onPlotHover = new EventEmitter<any>();\n/**\n * @param {?} elementRef\n * @param {?} injector\n */\nconstructor(elementRef: ElementRef, injector: Injector) {\n        super('uxFlotNg1', elementRef, injector);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'flot'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Injector, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'dataset': [{ type: Input },],\n'options': [{ type: Input },],\n'callback': [{ type: Input },],\n'donutLabels': [{ type: Input },],\n'onPlotClick': [{ type: Output },],\n'onPlotHover': [{ type: Output },],\n};\n}\n\nfunction FlotNg1Component_tsickle_Closure_declarations() {\n/** @type {?} */\nFlotNg1Component.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFlotNg1Component.ctorParameters;\n/** @type {?} */\nFlotNg1Component.propDecorators;\n/** @type {?} */\nFlotNg1Component.prototype.dataset;\n/** @type {?} */\nFlotNg1Component.prototype.options;\n/** @type {?} */\nFlotNg1Component.prototype.callback;\n/** @type {?} */\nFlotNg1Component.prototype.donutLabels;\n/** @type {?} */\nFlotNg1Component.prototype.onPlotClick;\n/** @type {?} */\nFlotNg1Component.prototype.onPlotHover;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ElementRef, Injector, Input, EventEmitter } from '@angular/core';\nimport { UpgradeComponent } from '@angular/upgrade/static';\nexport class GridNg1Component extends UpgradeComponent {\n\n     source: any[] = [];\n     columns: GridColumn[] = [];\n/**\n * The following inputs are undocumented\n */\noptions: any;\n     events: any;\n     plugins: any;\n/**\n * @param {?} elementRef\n * @param {?} injector\n */\nconstructor(elementRef: ElementRef, injector: Injector) {\n        super('grid', elementRef, injector);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'grid'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Injector, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'source': [{ type: Input },],\n'columns': [{ type: Input },],\n'options': [{ type: Input },],\n'events': [{ type: Input },],\n'plugins': [{ type: Input },],\n};\n}\n\nfunction GridNg1Component_tsickle_Closure_declarations() {\n/** @type {?} */\nGridNg1Component.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nGridNg1Component.ctorParameters;\n/** @type {?} */\nGridNg1Component.propDecorators;\n/** @type {?} */\nGridNg1Component.prototype.source;\n/** @type {?} */\nGridNg1Component.prototype.columns;\n/**\n * The following inputs are undocumented\n * @type {?}\n */\nGridNg1Component.prototype.options;\n/** @type {?} */\nGridNg1Component.prototype.events;\n/** @type {?} */\nGridNg1Component.prototype.plugins;\n}\n\n\nexport interface GridColumn {\n    title: string;\n    template: string;\n    width?: string;\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ElementRef, Injector, Input, EventEmitter } from '@angular/core';\nimport { UpgradeComponent } from '@angular/upgrade/static';\nexport class HierarchyBarNg1Component extends UpgradeComponent {\n\n     data: any[];\n     options: HierarchyBarOptions;\n     selectNode: any;\n     containerClass: any;\n/**\n * @param {?} elementRef\n * @param {?} injector\n */\nconstructor(elementRef: ElementRef, injector: Injector) {\n        super('hierarchyBar', elementRef, injector);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'hierarchy-bar'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Injector, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'data': [{ type: Input },],\n'options': [{ type: Input },],\n'selectNode': [{ type: Input },],\n'containerClass': [{ type: Input },],\n};\n}\n\nfunction HierarchyBarNg1Component_tsickle_Closure_declarations() {\n/** @type {?} */\nHierarchyBarNg1Component.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nHierarchyBarNg1Component.ctorParameters;\n/** @type {?} */\nHierarchyBarNg1Component.propDecorators;\n/** @type {?} */\nHierarchyBarNg1Component.prototype.data;\n/** @type {?} */\nHierarchyBarNg1Component.prototype.options;\n/** @type {?} */\nHierarchyBarNg1Component.prototype.selectNode;\n/** @type {?} */\nHierarchyBarNg1Component.prototype.containerClass;\n}\n\n\nexport interface HierarchyBarOptions {\n    enabled: boolean;\n    overview?: Function;\n    image: Function;\n    valueFormatter: Function;\n    action?: {\n        title: string;\n        event: Function;\n    };\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ElementRef, Injector, Input, Output, EventEmitter } from '@angular/core';\nimport { UpgradeComponent } from '@angular/upgrade/static';\nexport class MarqueeWizardNg1Component extends UpgradeComponent {\n\n     wizardIcon: string;\n     wizardSteps: MarqueeWizardStep[];\n     buttonOptions: MarqueeWizardOptions;\n     onChanging: Function;\n     onFinished: Function;\n     onFinishing: Function;\n     onCanceled: Function;\n     isVisited: boolean;\n     sideInfo: MarqueeWizardSideInfo;\n\n     wizardStepsChange: EventEmitter<MarqueeWizardStep[]> = new EventEmitter<MarqueeWizardStep[]>();\n/**\n * @param {?} elementRef\n * @param {?} injector\n */\nconstructor(elementRef: ElementRef, injector: Injector) {\n        super('marqueeWizard', elementRef, injector);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'marquee-wizard'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Injector, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'wizardIcon': [{ type: Input },],\n'wizardSteps': [{ type: Input },],\n'buttonOptions': [{ type: Input },],\n'onChanging': [{ type: Input },],\n'onFinished': [{ type: Input },],\n'onFinishing': [{ type: Input },],\n'onCanceled': [{ type: Input },],\n'isVisited': [{ type: Input },],\n'sideInfo': [{ type: Input },],\n'wizardStepsChange': [{ type: Output },],\n};\n}\n\nfunction MarqueeWizardNg1Component_tsickle_Closure_declarations() {\n/** @type {?} */\nMarqueeWizardNg1Component.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMarqueeWizardNg1Component.ctorParameters;\n/** @type {?} */\nMarqueeWizardNg1Component.propDecorators;\n/** @type {?} */\nMarqueeWizardNg1Component.prototype.wizardIcon;\n/** @type {?} */\nMarqueeWizardNg1Component.prototype.wizardSteps;\n/** @type {?} */\nMarqueeWizardNg1Component.prototype.buttonOptions;\n/** @type {?} */\nMarqueeWizardNg1Component.prototype.onChanging;\n/** @type {?} */\nMarqueeWizardNg1Component.prototype.onFinished;\n/** @type {?} */\nMarqueeWizardNg1Component.prototype.onFinishing;\n/** @type {?} */\nMarqueeWizardNg1Component.prototype.onCanceled;\n/** @type {?} */\nMarqueeWizardNg1Component.prototype.isVisited;\n/** @type {?} */\nMarqueeWizardNg1Component.prototype.sideInfo;\n/** @type {?} */\nMarqueeWizardNg1Component.prototype.wizardStepsChange;\n}\n\n\nexport interface MarqueeWizardStep {\n    title: string;\n    html?: string;\n    header?: string;\n    templateUrl?: string;\n    hidden?: boolean;\n    error?: boolean;\n    completed?: boolean;\n    visited?: boolean;\n}\n\nexport interface MarqueeWizardOptions {\n    nextText?: string;\n    previousText?: string;\n    finishText?: string;\n    showNext?: boolean;\n    showPrevious?: boolean;\n    showFinish?: boolean;\n    nextTooltip?: string;\n    previousTooltip?: string;\n    finishTooltip?: string;\n    previousEnabled?: boolean;\n    nextEnabled?: boolean;\n    finishEnabled?: boolean;\n}\n\nexport interface MarqueeWizardSideInfo {\n    title: string;\n    description: string;\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ElementRef, Injector, Input } from '@angular/core';\nimport { UpgradeComponent } from '@angular/upgrade/static';\nexport class NestedDonutNg1Component extends UpgradeComponent {\n\n     dataset: any;\n     options: any;\n/**\n * @param {?} elementRef\n * @param {?} injector\n */\nconstructor(elementRef: ElementRef, injector: Injector) {\n        super('uxNestedDonutNg1', elementRef, injector);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'nested-donut'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Injector, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'dataset': [{ type: Input },],\n'options': [{ type: Input },],\n};\n}\n\nfunction NestedDonutNg1Component_tsickle_Closure_declarations() {\n/** @type {?} */\nNestedDonutNg1Component.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNestedDonutNg1Component.ctorParameters;\n/** @type {?} */\nNestedDonutNg1Component.propDecorators;\n/** @type {?} */\nNestedDonutNg1Component.prototype.dataset;\n/** @type {?} */\nNestedDonutNg1Component.prototype.options;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ElementRef, Injector, Input, Output, EventEmitter } from '@angular/core';\nimport { UpgradeComponent } from '@angular/upgrade/static';\nexport class OrganizationChartNg1Component extends UpgradeComponent {\n\n     data: any;\n     options: any;\n     dataChange = new EventEmitter<any>();\n     optionsChange = new EventEmitter<any>();\n/**\n * @param {?} elementRef\n * @param {?} injector\n */\nconstructor(elementRef: ElementRef, injector: Injector) {\n        super('uxOrganizationChartNg1', elementRef, injector);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'organization-chart'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Injector, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'data': [{ type: Input },],\n'options': [{ type: Input },],\n'dataChange': [{ type: Output },],\n'optionsChange': [{ type: Output },],\n};\n}\n\nfunction OrganizationChartNg1Component_tsickle_Closure_declarations() {\n/** @type {?} */\nOrganizationChartNg1Component.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nOrganizationChartNg1Component.ctorParameters;\n/** @type {?} */\nOrganizationChartNg1Component.propDecorators;\n/** @type {?} */\nOrganizationChartNg1Component.prototype.data;\n/** @type {?} */\nOrganizationChartNg1Component.prototype.options;\n/** @type {?} */\nOrganizationChartNg1Component.prototype.dataChange;\n/** @type {?} */\nOrganizationChartNg1Component.prototype.optionsChange;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ElementRef, Injector, Input } from '@angular/core';\nimport { UpgradeComponent } from '@angular/upgrade/static';\nexport class PartitionMapNg1Component extends UpgradeComponent {\n\n     chartData: any;\n     chartOptions: any;\n     chartLoading: any;\n/**\n * @param {?} elementRef\n * @param {?} injector\n */\nconstructor(elementRef: ElementRef, injector: Injector) {\n        super('uxPartitionMapNg1', elementRef, injector);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'partition-map'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Injector, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'chartData': [{ type: Input },],\n'chartOptions': [{ type: Input },],\n'chartLoading': [{ type: Input },],\n};\n}\n\nfunction PartitionMapNg1Component_tsickle_Closure_declarations() {\n/** @type {?} */\nPartitionMapNg1Component.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nPartitionMapNg1Component.ctorParameters;\n/** @type {?} */\nPartitionMapNg1Component.propDecorators;\n/** @type {?} */\nPartitionMapNg1Component.prototype.chartData;\n/** @type {?} */\nPartitionMapNg1Component.prototype.chartOptions;\n/** @type {?} */\nPartitionMapNg1Component.prototype.chartLoading;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ElementRef, Injector, Input } from '@angular/core';\nimport { UpgradeComponent } from '@angular/upgrade/static';\nexport class PeityBarChartNg1Component extends UpgradeComponent {\n\n     data: any;\n     options: any;\n/**\n * @param {?} elementRef\n * @param {?} injector\n */\nconstructor(elementRef: ElementRef, injector: Injector) {\n        super('uxPeityBarChartNg1', elementRef, injector);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'bar-chart'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Injector, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'data': [{ type: Input },],\n'options': [{ type: Input },],\n};\n}\n\nfunction PeityBarChartNg1Component_tsickle_Closure_declarations() {\n/** @type {?} */\nPeityBarChartNg1Component.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nPeityBarChartNg1Component.ctorParameters;\n/** @type {?} */\nPeityBarChartNg1Component.propDecorators;\n/** @type {?} */\nPeityBarChartNg1Component.prototype.data;\n/** @type {?} */\nPeityBarChartNg1Component.prototype.options;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ElementRef, Injector, Input } from '@angular/core';\nimport { UpgradeComponent } from '@angular/upgrade/static';\nexport class PeityLineChartNg1Component extends UpgradeComponent {\n\n     data: any;\n     options: any;\n/**\n * @param {?} elementRef\n * @param {?} injector\n */\nconstructor(elementRef: ElementRef, injector: Injector) {\n        super('uxPeityLineChartNg1', elementRef, injector);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'line-chart'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Injector, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'data': [{ type: Input },],\n'options': [{ type: Input },],\n};\n}\n\nfunction PeityLineChartNg1Component_tsickle_Closure_declarations() {\n/** @type {?} */\nPeityLineChartNg1Component.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nPeityLineChartNg1Component.ctorParameters;\n/** @type {?} */\nPeityLineChartNg1Component.propDecorators;\n/** @type {?} */\nPeityLineChartNg1Component.prototype.data;\n/** @type {?} */\nPeityLineChartNg1Component.prototype.options;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ElementRef, Injector, Input } from '@angular/core';\nimport { UpgradeComponent } from '@angular/upgrade/static';\nexport class PeityPieChartNg1Component extends UpgradeComponent {\n\n     data: any;\n     options: any;\n/**\n * @param {?} elementRef\n * @param {?} injector\n */\nconstructor(elementRef: ElementRef, injector: Injector) {\n        super('uxPeityPieChartNg1', elementRef, injector);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'pie-chart'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Injector, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'data': [{ type: Input },],\n'options': [{ type: Input },],\n};\n}\n\nfunction PeityPieChartNg1Component_tsickle_Closure_declarations() {\n/** @type {?} */\nPeityPieChartNg1Component.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nPeityPieChartNg1Component.ctorParameters;\n/** @type {?} */\nPeityPieChartNg1Component.propDecorators;\n/** @type {?} */\nPeityPieChartNg1Component.prototype.data;\n/** @type {?} */\nPeityPieChartNg1Component.prototype.options;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ElementRef, Injector, Input } from '@angular/core';\nimport { UpgradeComponent } from '@angular/upgrade/static';\nexport class PeityUpdatingLineChartNg1Component extends UpgradeComponent {\n\n     data: any;\n     options: any;\n     method: any;\n     updateinterval: any;\n/**\n * @param {?} elementRef\n * @param {?} injector\n */\nconstructor(elementRef: ElementRef, injector: Injector) {\n        super('uxPeityUpdatingLineChartNg1', elementRef, injector);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'updating-line-chart'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Injector, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'data': [{ type: Input },],\n'options': [{ type: Input },],\n'method': [{ type: Input },],\n'updateinterval': [{ type: Input },],\n};\n}\n\nfunction PeityUpdatingLineChartNg1Component_tsickle_Closure_declarations() {\n/** @type {?} */\nPeityUpdatingLineChartNg1Component.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nPeityUpdatingLineChartNg1Component.ctorParameters;\n/** @type {?} */\nPeityUpdatingLineChartNg1Component.propDecorators;\n/** @type {?} */\nPeityUpdatingLineChartNg1Component.prototype.data;\n/** @type {?} */\nPeityUpdatingLineChartNg1Component.prototype.options;\n/** @type {?} */\nPeityUpdatingLineChartNg1Component.prototype.method;\n/** @type {?} */\nPeityUpdatingLineChartNg1Component.prototype.updateinterval;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ElementRef, Injector, Input } from '@angular/core';\nimport { UpgradeComponent } from '@angular/upgrade/static';\nexport class SankeyNg1Component extends UpgradeComponent {\n\n     chartSize: any;\n     chartData: any;\n     options: any;\n     click: any;\n/**\n * @param {?} elementRef\n * @param {?} injector\n */\nconstructor(elementRef: ElementRef, injector: Injector) {\n        super('uxSankeyNg1', elementRef, injector);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'sankey'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Injector, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'chartSize': [{ type: Input },],\n'chartData': [{ type: Input },],\n'options': [{ type: Input },],\n'click': [{ type: Input },],\n};\n}\n\nfunction SankeyNg1Component_tsickle_Closure_declarations() {\n/** @type {?} */\nSankeyNg1Component.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSankeyNg1Component.ctorParameters;\n/** @type {?} */\nSankeyNg1Component.propDecorators;\n/** @type {?} */\nSankeyNg1Component.prototype.chartSize;\n/** @type {?} */\nSankeyNg1Component.prototype.chartData;\n/** @type {?} */\nSankeyNg1Component.prototype.options;\n/** @type {?} */\nSankeyNg1Component.prototype.click;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ElementRef, Injector, Input } from '@angular/core';\nimport { UpgradeComponent } from '@angular/upgrade/static';\nexport class SearchToolbarNg1Component extends UpgradeComponent {\n\n     searchTypeahead: any[];\n     placeHolder: string;\n     closeSearch: string;\n     onSearch: Function;\n     onFocus: Function;\n/**\n * @param {?} elementRef\n * @param {?} injector\n */\nconstructor(elementRef: ElementRef, injector: Injector) {\n        super('searchToolbar', elementRef, injector);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'search-toolbar'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Injector, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'searchTypeahead': [{ type: Input },],\n'placeHolder': [{ type: Input },],\n'closeSearch': [{ type: Input },],\n'onSearch': [{ type: Input },],\n'onFocus': [{ type: Input },],\n};\n}\n\nfunction SearchToolbarNg1Component_tsickle_Closure_declarations() {\n/** @type {?} */\nSearchToolbarNg1Component.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSearchToolbarNg1Component.ctorParameters;\n/** @type {?} */\nSearchToolbarNg1Component.propDecorators;\n/** @type {?} */\nSearchToolbarNg1Component.prototype.searchTypeahead;\n/** @type {?} */\nSearchToolbarNg1Component.prototype.placeHolder;\n/** @type {?} */\nSearchToolbarNg1Component.prototype.closeSearch;\n/** @type {?} */\nSearchToolbarNg1Component.prototype.onSearch;\n/** @type {?} */\nSearchToolbarNg1Component.prototype.onFocus;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ElementRef, Injector, Input, Output, EventEmitter } from '@angular/core';\nimport { UpgradeComponent } from '@angular/upgrade/static';\nexport class SelectTableNg1Component extends UpgradeComponent {\n\n     values: any[];\n     multipleSelect: boolean;\n     selectKey: string;\n     selected: string;\n     searchText: string;\n     tableHeight: string;\n     selectHiddenItems: 'clear' | 'reselect';\n\n     selectedChange: EventEmitter<string> = new EventEmitter<string>();\n/**\n * @param {?} elementRef\n * @param {?} injector\n */\nconstructor(elementRef: ElementRef, injector: Injector) {\n        super('selectTable', elementRef, injector);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'select-table'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Injector, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'values': [{ type: Input },],\n'multipleSelect': [{ type: Input },],\n'selectKey': [{ type: Input },],\n'selected': [{ type: Input },],\n'searchText': [{ type: Input },],\n'tableHeight': [{ type: Input },],\n'selectHiddenItems': [{ type: Input },],\n'selectedChange': [{ type: Output },],\n};\n}\n\nfunction SelectTableNg1Component_tsickle_Closure_declarations() {\n/** @type {?} */\nSelectTableNg1Component.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSelectTableNg1Component.ctorParameters;\n/** @type {?} */\nSelectTableNg1Component.propDecorators;\n/** @type {?} */\nSelectTableNg1Component.prototype.values;\n/** @type {?} */\nSelectTableNg1Component.prototype.multipleSelect;\n/** @type {?} */\nSelectTableNg1Component.prototype.selectKey;\n/** @type {?} */\nSelectTableNg1Component.prototype.selected;\n/** @type {?} */\nSelectTableNg1Component.prototype.searchText;\n/** @type {?} */\nSelectTableNg1Component.prototype.tableHeight;\n/** @type {?} */\nSelectTableNg1Component.prototype.selectHiddenItems;\n/** @type {?} */\nSelectTableNg1Component.prototype.selectedChange;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ElementRef, Injector, Input, Output, EventEmitter, forwardRef } from '@angular/core';\nimport { UpgradeComponent } from '@angular/upgrade/static';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nexport const /** @type {?} */ SLIDER_CHART_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => SliderChartNg1Component),\n    multi: true\n};\nexport class SliderChartNg1Component extends UpgradeComponent implements ControlValueAccessor {\n\n     sliderOptions: any;\n     ngModel: any;\n     chartOptions: any;\n     chartData: any;\n\n     ngModelChange: EventEmitter<any> = new EventEmitter<any>();\n/**\n * @param {?} elementRef\n * @param {?} injector\n */\nconstructor(elementRef: ElementRef, injector: Injector) {\n        super('sliderChart', elementRef, injector);\n    }\n/**\n * @param {?} obj\n * @return {?}\n */\nwriteValue(obj: any): void { }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnChange(fn: any): void { }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnTouched(fn: any): void { }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'slider-chart',\n    providers: [SLIDER_CHART_VALUE_ACCESSOR]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Injector, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'sliderOptions': [{ type: Input },],\n'ngModel': [{ type: Input },],\n'chartOptions': [{ type: Input },],\n'chartData': [{ type: Input },],\n'ngModelChange': [{ type: Output },],\n};\n}\n\nfunction SliderChartNg1Component_tsickle_Closure_declarations() {\n/** @type {?} */\nSliderChartNg1Component.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSliderChartNg1Component.ctorParameters;\n/** @type {?} */\nSliderChartNg1Component.propDecorators;\n/** @type {?} */\nSliderChartNg1Component.prototype.sliderOptions;\n/** @type {?} */\nSliderChartNg1Component.prototype.ngModel;\n/** @type {?} */\nSliderChartNg1Component.prototype.chartOptions;\n/** @type {?} */\nSliderChartNg1Component.prototype.chartData;\n/** @type {?} */\nSliderChartNg1Component.prototype.ngModelChange;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ElementRef, Injector, Input } from '@angular/core';\nimport { UpgradeComponent } from '@angular/upgrade/static';\nexport class SocialChartNg1Component extends UpgradeComponent {\n\n     data: any;\n     options: any;\n     width: any;\n     height: any;\n     api: any;\n     communities: any;\n     detailStyle: any;\n     popoverStyle: any;\n     nodeDetail: any;\n     edgeDetail: any;\n     nodePopover: any;\n     edgePopover: any;\n     forceAtlasDuration: any;\n     nodeSizeAttribute: any;\n     startMaximized: any;\n     startMaximised: any;\n     showMaximizeControl: any;\n     showMaximiseControl: any;\n     socialChartContainer: any;\n     fullscreenButtonPosition: any;\n     localStrings: any;\n     chartTitle: any;\n     titleDisplayTime: any;\n     edgeWeightInfluence: any;\n     minLabels: any;\n/**\n * @param {?} elementRef\n * @param {?} injector\n */\nconstructor(elementRef: ElementRef, injector: Injector) {\n        super('uxSocialChartNg1', elementRef, injector);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'social-chart'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Injector, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'data': [{ type: Input },],\n'options': [{ type: Input },],\n'width': [{ type: Input },],\n'height': [{ type: Input },],\n'api': [{ type: Input },],\n'communities': [{ type: Input },],\n'detailStyle': [{ type: Input },],\n'popoverStyle': [{ type: Input },],\n'nodeDetail': [{ type: Input },],\n'edgeDetail': [{ type: Input },],\n'nodePopover': [{ type: Input },],\n'edgePopover': [{ type: Input },],\n'forceAtlasDuration': [{ type: Input },],\n'nodeSizeAttribute': [{ type: Input },],\n'startMaximized': [{ type: Input },],\n'startMaximised': [{ type: Input },],\n'showMaximizeControl': [{ type: Input },],\n'showMaximiseControl': [{ type: Input },],\n'socialChartContainer': [{ type: Input },],\n'fullscreenButtonPosition': [{ type: Input },],\n'localStrings': [{ type: Input },],\n'chartTitle': [{ type: Input },],\n'titleDisplayTime': [{ type: Input },],\n'edgeWeightInfluence': [{ type: Input },],\n'minLabels': [{ type: Input },],\n};\n}\n\nfunction SocialChartNg1Component_tsickle_Closure_declarations() {\n/** @type {?} */\nSocialChartNg1Component.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSocialChartNg1Component.ctorParameters;\n/** @type {?} */\nSocialChartNg1Component.propDecorators;\n/** @type {?} */\nSocialChartNg1Component.prototype.data;\n/** @type {?} */\nSocialChartNg1Component.prototype.options;\n/** @type {?} */\nSocialChartNg1Component.prototype.width;\n/** @type {?} */\nSocialChartNg1Component.prototype.height;\n/** @type {?} */\nSocialChartNg1Component.prototype.api;\n/** @type {?} */\nSocialChartNg1Component.prototype.communities;\n/** @type {?} */\nSocialChartNg1Component.prototype.detailStyle;\n/** @type {?} */\nSocialChartNg1Component.prototype.popoverStyle;\n/** @type {?} */\nSocialChartNg1Component.prototype.nodeDetail;\n/** @type {?} */\nSocialChartNg1Component.prototype.edgeDetail;\n/** @type {?} */\nSocialChartNg1Component.prototype.nodePopover;\n/** @type {?} */\nSocialChartNg1Component.prototype.edgePopover;\n/** @type {?} */\nSocialChartNg1Component.prototype.forceAtlasDuration;\n/** @type {?} */\nSocialChartNg1Component.prototype.nodeSizeAttribute;\n/** @type {?} */\nSocialChartNg1Component.prototype.startMaximized;\n/** @type {?} */\nSocialChartNg1Component.prototype.startMaximised;\n/** @type {?} */\nSocialChartNg1Component.prototype.showMaximizeControl;\n/** @type {?} */\nSocialChartNg1Component.prototype.showMaximiseControl;\n/** @type {?} */\nSocialChartNg1Component.prototype.socialChartContainer;\n/** @type {?} */\nSocialChartNg1Component.prototype.fullscreenButtonPosition;\n/** @type {?} */\nSocialChartNg1Component.prototype.localStrings;\n/** @type {?} */\nSocialChartNg1Component.prototype.chartTitle;\n/** @type {?} */\nSocialChartNg1Component.prototype.titleDisplayTime;\n/** @type {?} */\nSocialChartNg1Component.prototype.edgeWeightInfluence;\n/** @type {?} */\nSocialChartNg1Component.prototype.minLabels;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ElementRef, Injector, Input, Output, EventEmitter } from '@angular/core';\nimport { UpgradeComponent } from '@angular/upgrade/static';\nexport class SortDirectionToggleNg1Component extends UpgradeComponent {\n\n     label: string;\n     sorters: SortDirectionToggleSorter[];\n     descend: boolean;\n/**\n * @param {?} elementRef\n * @param {?} injector\n */\nconstructor(elementRef: ElementRef, injector: Injector) {\n        super('sortDirectionToggle', elementRef, injector);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'sort-direction-toggle'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Injector, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'label': [{ type: Input },],\n'sorters': [{ type: Input },],\n'descend': [{ type: Input },],\n};\n}\n\nfunction SortDirectionToggleNg1Component_tsickle_Closure_declarations() {\n/** @type {?} */\nSortDirectionToggleNg1Component.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSortDirectionToggleNg1Component.ctorParameters;\n/** @type {?} */\nSortDirectionToggleNg1Component.propDecorators;\n/** @type {?} */\nSortDirectionToggleNg1Component.prototype.label;\n/** @type {?} */\nSortDirectionToggleNg1Component.prototype.sorters;\n/** @type {?} */\nSortDirectionToggleNg1Component.prototype.descend;\n}\n\n\nexport interface SortDirectionToggleSorter {\n    name: string;\n    sort: string;\n    defaultSorter: boolean;\n    select: Function;\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ElementRef, Injector, Input, Output, EventEmitter } from '@angular/core';\nimport { UpgradeComponent } from '@angular/upgrade/static';\nexport class TreeGridNg1Component extends UpgradeComponent {\n\n     data: TreeGridData[] | Function;\n     columns: TreeGridColumn[];\n     treeData: TreeGridData[];\n     selected: any[];\n     currentRow: any;\n     options: TreeGridOptions;\n\n     optionsChange: EventEmitter<TreeGridOptions> = new EventEmitter<TreeGridOptions>();\n     selectedChange: EventEmitter<any[]> = new EventEmitter<any[]>();\n     currentRowChange: EventEmitter<any> = new EventEmitter<any>();\n     treeDataChange: EventEmitter<TreeGridData[]> = new EventEmitter<TreeGridData[]>();\n/**\n * @param {?} elementRef\n * @param {?} injector\n */\nconstructor(elementRef: ElementRef, injector: Injector) {\n        super('treegrid', elementRef, injector);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'treegrid'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Injector, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'data': [{ type: Input },],\n'columns': [{ type: Input },],\n'treeData': [{ type: Input },],\n'selected': [{ type: Input },],\n'currentRow': [{ type: Input },],\n'options': [{ type: Input },],\n'optionsChange': [{ type: Output },],\n'selectedChange': [{ type: Output },],\n'currentRowChange': [{ type: Output },],\n'treeDataChange': [{ type: Output },],\n};\n}\n\nfunction TreeGridNg1Component_tsickle_Closure_declarations() {\n/** @type {?} */\nTreeGridNg1Component.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTreeGridNg1Component.ctorParameters;\n/** @type {?} */\nTreeGridNg1Component.propDecorators;\n/** @type {?} */\nTreeGridNg1Component.prototype.data;\n/** @type {?} */\nTreeGridNg1Component.prototype.columns;\n/** @type {?} */\nTreeGridNg1Component.prototype.treeData;\n/** @type {?} */\nTreeGridNg1Component.prototype.selected;\n/** @type {?} */\nTreeGridNg1Component.prototype.currentRow;\n/** @type {?} */\nTreeGridNg1Component.prototype.options;\n/** @type {?} */\nTreeGridNg1Component.prototype.optionsChange;\n/** @type {?} */\nTreeGridNg1Component.prototype.selectedChange;\n/** @type {?} */\nTreeGridNg1Component.prototype.currentRowChange;\n/** @type {?} */\nTreeGridNg1Component.prototype.treeDataChange;\n}\n\n\nexport interface TreeGridColumn {\n    name: string;\n    value?: string | Function;\n    template?: string;\n    headerClass?: string;\n    cellClass?: string;\n    width?: string;\n    tooltip?: string;\n    tooltipPlacement?: 'top' | 'bottom' | 'left' | 'right';\n}\n\nexport interface TreeGridData {\n    dataItem: any;\n    children: any[];\n    expanded: boolean;\n    expanding: boolean;\n    level: number;\n    api: any;\n}\n\nexport interface TreeGridOptions {\n    childrenProperty?: string;\n    hasChildren?: Function;\n    maxDepth?: number;\n    expandTopLevel?: boolean;\n    select?: any;\n    expander?: any;\n    icons?: any;\n    rowClass?: string | Function;\n    sort?: Function;\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ElementRef, Injector, Input, EventEmitter } from '@angular/core';\nimport { UpgradeComponent } from '@angular/upgrade/static';\nexport class ThumbnailNg1Component extends UpgradeComponent {\n\n     url: string;\n     show: boolean;\n     width: string;\n     height: string;\n/**\n * @param {?} elementRef\n * @param {?} injector\n */\nconstructor(elementRef: ElementRef, injector: Injector) {\n        super('thumbnail', elementRef, injector);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'thumbnail'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Injector, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'url': [{ type: Input },],\n'show': [{ type: Input },],\n'width': [{ type: Input },],\n'height': [{ type: Input },],\n};\n}\n\nfunction ThumbnailNg1Component_tsickle_Closure_declarations() {\n/** @type {?} */\nThumbnailNg1Component.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nThumbnailNg1Component.ctorParameters;\n/** @type {?} */\nThumbnailNg1Component.propDecorators;\n/** @type {?} */\nThumbnailNg1Component.prototype.url;\n/** @type {?} */\nThumbnailNg1Component.prototype.show;\n/** @type {?} */\nThumbnailNg1Component.prototype.width;\n/** @type {?} */\nThumbnailNg1Component.prototype.height;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable, Inject, Injector } from '@angular/core';\nimport { INavigationMenuService } from './navigation-menu.interface';\nexport class NavigationMenuService implements INavigationMenuService {\n/**\n * @param {?} _navigationMenuService\n */\nconstructor(\nprivate _navigationMenuService: INavigationMenuService) { }\n/**\n * @return {?}\n */\nshow(): void {\n        this._navigationMenuService.show();\n    }\n/**\n * @return {?}\n */\nhide(): void {\n        this._navigationMenuService.hide();\n    }\n/**\n * @return {?}\n */\nvisible(): boolean {\n        return this._navigationMenuService.visible();\n    }\n/**\n * @return {?}\n */\ncollapseAtWidth(): number {\n        return this._navigationMenuService.collapseAtWidth();\n    }\n/**\n * @param {?} width\n * @return {?}\n */\nsetCollapseAtWidth(width: number): void {\n        this._navigationMenuService.setCollapseAtWidth(width);\n    }\n/**\n * @return {?}\n */\nsetDefaultCollapseAtWidth(): void {\n        this._navigationMenuService.setDefaultCollapseAtWidth();\n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: undefined, decorators: [{ type: Inject, args: ['$navigationMenu', ] }, ]},\n];\n}\n\nfunction NavigationMenuService_tsickle_Closure_declarations() {\n/** @type {?} */\nNavigationMenuService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNavigationMenuService.ctorParameters;\n/** @type {?} */\nNavigationMenuService.prototype._navigationMenuService;\n}\n\n/**\n * @param {?} injector\n * @return {?}\n */\nexport function navigationMenuServiceFactory(injector: Injector) {\n    return injector.get('$navigationMenu');\n}\n\nexport const /** @type {?} */ navigationMenuServiceProvider = {\n    provide: '$navigationMenu',\n    useFactory: navigationMenuServiceFactory,\n    deps: ['$injector']\n};\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable, Inject, Injector } from '@angular/core';\nimport { IPdfService, PdfColumns, PdfOptions, PdfDocument } from './pdf.interface';\nexport class PdfService implements IPdfService {\n/**\n * @param {?} _pdfService\n */\nconstructor(\nprivate _pdfService: IPdfService) { }\n/**\n * @param {?} columns\n * @param {?} rows\n * @param {?=} options\n * @return {?}\n */\ncreateTable(columns: PdfColumns, rows: any[], options: PdfOptions = {}): PdfDocument {\n        return this._pdfService.createTable(columns, rows, options);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: undefined, decorators: [{ type: Inject, args: ['$pdf', ] }, ]},\n];\n}\n\nfunction PdfService_tsickle_Closure_declarations() {\n/** @type {?} */\nPdfService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nPdfService.ctorParameters;\n/** @type {?} */\nPdfService.prototype._pdfService;\n}\n\n/**\n * @param {?} injector\n * @return {?}\n */\nexport function pdfServiceFactory(injector: Injector) {\n    return injector.get('$pdf');\n}\n\nexport const /** @type {?} */ pdfServiceProvider = {\n    provide: '$pdf',\n    useFactory: pdfServiceFactory,\n    deps: ['$injector']\n};\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable, Inject, Injector } from '@angular/core';\nimport { ITimeAgoService, TimeAgoLocalizedTimes } from './time-ago.interface';\nexport class TimeAgoService implements ITimeAgoService {\n/**\n * @param {?} _timeAgoService\n */\nconstructor(\nprivate _timeAgoService: ITimeAgoService) { }\n/**\n * @param {?} strings\n * @return {?}\n */\nsetStrings(strings: TimeAgoLocalizedTimes): void {\n        this._timeAgoService.setStrings(strings);\n    }\n/**\n * @param {?} past\n * @param {?} present\n * @return {?}\n */\ntimeSince(past: Date, present: Date): string {\n        return this._timeAgoService.timeSince(past, present);\n    }\n/**\n * @param {?} moment\n * @return {?}\n */\ntimeSinceNow(moment: Date): string {\n        return this._timeAgoService.timeSinceNow(moment);\n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: undefined, decorators: [{ type: Inject, args: ['timeAgoService', ] }, ]},\n];\n}\n\nfunction TimeAgoService_tsickle_Closure_declarations() {\n/** @type {?} */\nTimeAgoService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTimeAgoService.ctorParameters;\n/** @type {?} */\nTimeAgoService.prototype._timeAgoService;\n}\n\n/**\n * @param {?} injector\n * @return {?}\n */\nexport function timeAgoServiceFactory(injector: Injector) {\n    return injector.get('timeAgoService');\n}\n\nexport const /** @type {?} */ timeAgoServiceProvider = {\n    provide: 'timeAgoService',\n    useFactory: timeAgoServiceFactory,\n    deps: ['$injector']\n};\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule, Injector } from '@angular/core';\n\nimport { FloatingActionButtonNg1Component } from './components/floating-action-button/floating-action-button.component';\nimport { FlotNg1Component } from './components/flot/flot.component';\nimport { NestedDonutNg1Component } from './components/nested-donut/nested-donut.component';\nimport { OrganizationChartNg1Component } from './components/organization-chart/organization-chart.component';\nimport { PartitionMapNg1Component } from './components/partition-map/partition-map.component';\nimport { PeityBarChartNg1Component } from './components/peity-chart/peity-bar-chart.component';\nimport { PeityLineChartNg1Component } from './components/peity-chart/peity-line-chart.component';\nimport { PeityPieChartNg1Component } from './components/peity-chart/peity-pie-chart.component';\nimport { PeityUpdatingLineChartNg1Component } from './components/peity-chart/peity-updating-line-chart.component';\nimport { SankeyNg1Component } from './components/sankey-chart/sankey.component';\nimport { SocialChartNg1Component } from './components/social-chart/social-chart.component';\nimport { TimeAgoService, timeAgoServiceProvider } from './services/time-ago/time-ago.service';\nimport { PdfService, pdfServiceProvider } from './services/pdf/pdf.service';\nimport { NavigationMenuService, navigationMenuServiceProvider } from './services/navigation-menu/navigation-menu.service';\nimport { GridNg1Component } from './components/grid/grid.component';\nimport { ThumbnailNg1Component } from './components/thumbnail/thumbnail.component';\nimport { HierarchyBarNg1Component } from './components/hierarchy-bar/hierarchy-bar.component';\nimport { ContactsNg1Component } from './components/contacts/contacts.component';\nimport { ExpandInputNg1Component } from './components/expand-input/expand-input.component';\nimport { SortDirectionToggleNg1Component } from './components/sort-direction-toggle/sort-direction-toggle.component';\nimport { SearchToolbarNg1Component } from './components/search-toolbar/search-toolbar.component';\nimport { TreeGridNg1Component } from './components/tree-grid/tree-grid.component';\nimport { SelectTableNg1Component } from './components/select-table/select-table.component';\nimport { MarqueeWizardNg1Component } from './components/marquee-wizard/marquee-wizard.component';\nimport { SliderChartNg1Component } from './components/slider-chart/slider-chart.directive';\n\nconst /** @type {?} */ declarations = [\n    ContactsNg1Component,\n    ExpandInputNg1Component,\n    FloatingActionButtonNg1Component,\n    FlotNg1Component,\n    GridNg1Component,\n    HierarchyBarNg1Component,\n    MarqueeWizardNg1Component,\n    NestedDonutNg1Component,\n    OrganizationChartNg1Component,\n    PartitionMapNg1Component,\n    PeityBarChartNg1Component,\n    PeityLineChartNg1Component,\n    PeityPieChartNg1Component,\n    PeityUpdatingLineChartNg1Component,\n    SankeyNg1Component,\n    SearchToolbarNg1Component,\n    SelectTableNg1Component,\n    SliderChartNg1Component,\n    SocialChartNg1Component,\n    SortDirectionToggleNg1Component,\n    TreeGridNg1Component,\n    ThumbnailNg1Component,\n];\nexport class HybridModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [],\n    exports: declarations,\n    declarations: declarations,\n    providers: [\n        navigationMenuServiceProvider,\n        pdfServiceProvider,\n        timeAgoServiceProvider,\n        TimeAgoService,\n        PdfService,\n        NavigationMenuService,\n    ],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction HybridModule_tsickle_Closure_declarations() {\n/** @type {?} */\nHybridModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nHybridModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Input } from '@angular/core';\nexport class BreadcrumbsComponent {\n\n     crumbs: Breadcrumb[];\n/**\n * @param {?} event\n * @param {?} crumb\n * @return {?}\n */\nclickCrumb(event: MouseEvent, crumb: Breadcrumb) {\n        if (crumb.onClick) {\n            crumb.onClick.call(null, event);\n        }\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-breadcrumbs',\n    template: `\n      <nav aria-label=\"Breadcrumb\">\n          <ol class=\"breadcrumb\">\n              <li *ngFor=\"let crumb of crumbs\">\n\n                  <!-- If there is a router link then use a tag -->\n                  <a *ngIf=\"crumb.routerLink || crumb.onClick\"\n                      tabindex=\"0\"\n                      [routerLink]=\"crumb.routerLink\"\n                      [fragment]=\"crumb.fragment\"\n                      [queryParams]=\"crumb.queryParams\"\n                      (click)=\"clickCrumb($event, crumb)\">\n                      {{ crumb.title }}\n                  </a>\n\n                  <!-- If there is not router link then display text in a span -->\n                  <span *ngIf=\"!crumb.routerLink && !crumb.onClick\">{{ crumb.title }}</span>\n              </li>\n          </ol>\n      </nav>\n    `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'crumbs': [{ type: Input },],\n};\n}\n\nfunction BreadcrumbsComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nBreadcrumbsComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nBreadcrumbsComponent.ctorParameters;\n/** @type {?} */\nBreadcrumbsComponent.propDecorators;\n/** @type {?} */\nBreadcrumbsComponent.prototype.crumbs;\n}\n\n\nexport interface Breadcrumb {\n    title: string;\n    routerLink?: string;\n    fragment?: string;\n    queryParams?: any;\n    onClick?: (event: MouseEvent) => void;\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\n\nimport { BreadcrumbsComponent } from './breadcrumbs.component';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nexport class BreadcrumbsModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        CommonModule, \n        RouterModule\n    ],\n    exports: [BreadcrumbsComponent],\n    declarations: [BreadcrumbsComponent]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction BreadcrumbsModule_tsickle_Closure_declarations() {\n/** @type {?} */\nBreadcrumbsModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nBreadcrumbsModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable, NgZone, OnDestroy, Renderer2, RendererFactory2 } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { Subscription } from 'rxjs/Subscription';\nimport { fromEvent } from 'rxjs/observable/fromEvent';\nexport class ResizeService implements OnDestroy {\nprivate _renderer: Renderer2;\nprivate _subscription = new Subscription();\n/**\n * @param {?} rendererFactory\n * @param {?} _ngZone\n */\nconstructor(rendererFactory: RendererFactory2,\nprivate _ngZone: NgZone) {\n        this._renderer = rendererFactory.createRenderer(null, null);\n    }\n/**\n * @return {?}\n */\nngOnDestroy(): void {\n        this._subscription.unsubscribe();\n    }\n/**\n * @param {?} nativeElement\n * @return {?}\n */\naddResizeListener(nativeElement: HTMLElement): BehaviorSubject<ResizeDimensions> {\n\n        // create a behavior subject subject\n        const /** @type {?} */ subject = new BehaviorSubject<ResizeDimensions>({ width: nativeElement.offsetWidth, height: nativeElement.offsetHeight });\n\n        // determine the style of the element\n        const /** @type {?} */ displayMode = window.getComputedStyle(nativeElement).getPropertyValue('display');\n\n        // create the iframe element\n        const /** @type {?} */ iframe: HTMLIFrameElement = this._renderer.createElement('iframe');\n\n        // style the iframe to be invisible but fill containing element\n        this._renderer.setStyle(iframe, 'position', 'absolute');\n        this._renderer.setStyle(iframe, 'width', '100%');\n        this._renderer.setStyle(iframe, 'height', '100%');\n        this._renderer.setStyle(iframe, 'top', '0');\n        this._renderer.setStyle(iframe, 'right', '0');\n        this._renderer.setStyle(iframe, 'bottom', '0');\n        this._renderer.setStyle(iframe, 'left', '0');\n        this._renderer.setStyle(iframe, 'z-index', '-1');\n        this._renderer.setStyle(iframe, 'opacity', '0');\n        this._renderer.setStyle(iframe, 'border', 'none');\n        this._renderer.setStyle(iframe, 'margin', '0');\n        this._renderer.setStyle(iframe, 'pointer-events', 'none');\n        this._renderer.setStyle(iframe, 'overflow', 'hidden');\n\n        // ensure the iframe ignores any tabbing\n        this._renderer.setAttribute(iframe, 'tabindex', '-1');\n\n        // statically positioned elements need changed to relative for this method to work\n        if (displayMode !== 'relative' && displayMode !== 'absolute' && displayMode !== 'fixed') {\n            this._renderer.setStyle(nativeElement, 'position', 'relative');\n        }\n\n        // add the iframe to the container element\n        this._renderer.appendChild(nativeElement, iframe);\n\n        this.waitUntilReady(iframe, () => {\n            const /** @type {?} */ iframeDoc = iframe.contentDocument || /** @type {?} */(( iframe.contentWindow.document as Document));\n\n            const /** @type {?} */ attachListener = () => {\n\n                // watch for any future resizes - run inside ngzone as an iframe event listener is not patched\n                this._subscription.add(fromEvent(iframe.contentWindow, 'resize').subscribe((event: ResizeDimensions) =>\n                    this._ngZone.run(() => subject.next({ width: nativeElement.offsetWidth, height: nativeElement.offsetHeight }))\n                ));\n            };\n\n            if (iframeDoc.readyState === 'complete') {\n                attachListener();\n            } else {\n\n                // wait for iframe to load\n                iframe.addEventListener('load', () => attachListener());\n            }\n        });\n\n\n        return subject;\n    }\n/**\n * @param {?} iframe\n * @param {?} callback\n * @return {?}\n */\nprivate waitUntilReady(iframe: HTMLIFrameElement, callback: () => void) {\n        if (iframe.contentDocument || iframe.contentWindow) {\n            callback.call(this);\n        } else {\n            setTimeout(() => this.waitUntilReady(iframe, callback));\n        }\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: RendererFactory2, },\n{type: NgZone, },\n];\n}\n\nfunction ResizeService_tsickle_Closure_declarations() {\n/** @type {?} */\nResizeService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nResizeService.ctorParameters;\n/** @type {?} */\nResizeService.prototype._renderer;\n/** @type {?} */\nResizeService.prototype._subscription;\n/** @type {?} */\nResizeService.prototype._ngZone;\n}\n\n\nexport interface ResizeDimensions {\n    width: number;\n    height: number;\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","export function isFunction(x: any): x is Function {\n  return typeof x === 'function';\n}\n","export const isArray = Array.isArray || (<T>(x: any): x is T[] => x && typeof x.length === 'number');\n","export function isObject(x: any): x is Object {\n  return x != null && typeof x === 'object';\n}\n","import { errorObject } from './errorObject';\n\nlet tryCatchTarget: Function;\n\nfunction tryCatcher(this: any): any {\n  try {\n    return tryCatchTarget.apply(this, arguments);\n  } catch (e) {\n    errorObject.e = e;\n    return errorObject;\n  }\n}\n\nexport function tryCatch<T extends Function>(fn: T): T {\n  tryCatchTarget = fn;\n  return <any>tryCatcher;\n};\n","// typeof any so that it we don't have to cast when comparing a result to the error object\nexport const errorObject: any = { e: {} };","/**\n * An error thrown when one or more errors have occurred during the\n * `unsubscribe` of a {@link Subscription}.\n */\nexport class UnsubscriptionError extends Error {\n  constructor(public errors: any[]) {\n    super();\n    const err: any = Error.call(this, errors ?\n      `${errors.length} errors occurred during unsubscription:\n  ${errors.map((err, i) => `${i + 1}) ${err.toString()}`).join('\\n  ')}` : '');\n    (<any> this).name = err.name = 'UnsubscriptionError';\n    (<any> this).stack = err.stack;\n    (<any> this).message = err.message;\n  }\n}\n","import { isArray } from './util/isArray';\nimport { isObject } from './util/isObject';\nimport { isFunction } from './util/isFunction';\nimport { tryCatch } from './util/tryCatch';\nimport { errorObject } from './util/errorObject';\nimport { UnsubscriptionError } from './util/UnsubscriptionError';\n\nexport interface AnonymousSubscription {\n  unsubscribe(): void;\n}\n\nexport type TeardownLogic = AnonymousSubscription | Function | void;\n\nexport interface ISubscription extends AnonymousSubscription {\n  unsubscribe(): void;\n  readonly closed: boolean;\n}\n\n/**\n * Represents a disposable resource, such as the execution of an Observable. A\n * Subscription has one important method, `unsubscribe`, that takes no argument\n * and just disposes the resource held by the subscription.\n *\n * Additionally, subscriptions may be grouped together through the `add()`\n * method, which will attach a child Subscription to the current Subscription.\n * When a Subscription is unsubscribed, all its children (and its grandchildren)\n * will be unsubscribed as well.\n *\n * @class Subscription\n */\nexport class Subscription implements ISubscription {\n  public static EMPTY: Subscription = (function(empty: any){\n    empty.closed = true;\n    return empty;\n  }(new Subscription()));\n\n  /**\n   * A flag to indicate whether this Subscription has already been unsubscribed.\n   * @type {boolean}\n   */\n  public closed: boolean = false;\n\n  protected _parent: Subscription = null;\n  protected _parents: Subscription[] = null;\n  private _subscriptions: ISubscription[] = null;\n\n  /**\n   * @param {function(): void} [unsubscribe] A function describing how to\n   * perform the disposal of resources when the `unsubscribe` method is called.\n   */\n  constructor(unsubscribe?: () => void) {\n    if (unsubscribe) {\n      (<any> this)._unsubscribe = unsubscribe;\n    }\n  }\n\n  /**\n   * Disposes the resources held by the subscription. May, for instance, cancel\n   * an ongoing Observable execution or cancel any other type of work that\n   * started when the Subscription was created.\n   * @return {void}\n   */\n  unsubscribe(): void {\n    let hasErrors = false;\n    let errors: any[];\n\n    if (this.closed) {\n      return;\n    }\n\n    let { _parent, _parents, _unsubscribe, _subscriptions } = (<any> this);\n\n    this.closed = true;\n    this._parent = null;\n    this._parents = null;\n    // null out _subscriptions first so any child subscriptions that attempt\n    // to remove themselves from this subscription will noop\n    this._subscriptions = null;\n\n    let index = -1;\n    let len = _parents ? _parents.length : 0;\n\n    // if this._parent is null, then so is this._parents, and we\n    // don't have to remove ourselves from any parent subscriptions.\n    while (_parent) {\n      _parent.remove(this);\n      // if this._parents is null or index >= len,\n      // then _parent is set to null, and the loop exits\n      _parent = ++index < len && _parents[index] || null;\n    }\n\n    if (isFunction(_unsubscribe)) {\n      let trial = tryCatch(_unsubscribe).call(this);\n      if (trial === errorObject) {\n        hasErrors = true;\n        errors = errors || (\n          errorObject.e instanceof UnsubscriptionError ?\n            flattenUnsubscriptionErrors(errorObject.e.errors) : [errorObject.e]\n        );\n      }\n    }\n\n    if (isArray(_subscriptions)) {\n\n      index = -1;\n      len = _subscriptions.length;\n\n      while (++index < len) {\n        const sub = _subscriptions[index];\n        if (isObject(sub)) {\n          let trial = tryCatch(sub.unsubscribe).call(sub);\n          if (trial === errorObject) {\n            hasErrors = true;\n            errors = errors || [];\n            let err = errorObject.e;\n            if (err instanceof UnsubscriptionError) {\n              errors = errors.concat(flattenUnsubscriptionErrors(err.errors));\n            } else {\n              errors.push(err);\n            }\n          }\n        }\n      }\n    }\n\n    if (hasErrors) {\n      throw new UnsubscriptionError(errors);\n    }\n  }\n\n  /**\n   * Adds a tear down to be called during the unsubscribe() of this\n   * Subscription.\n   *\n   * If the tear down being added is a subscription that is already\n   * unsubscribed, is the same reference `add` is being called on, or is\n   * `Subscription.EMPTY`, it will not be added.\n   *\n   * If this subscription is already in an `closed` state, the passed\n   * tear down logic will be executed immediately.\n   *\n   * @param {TeardownLogic} teardown The additional logic to execute on\n   * teardown.\n   * @return {Subscription} Returns the Subscription used or created to be\n   * added to the inner subscriptions list. This Subscription can be used with\n   * `remove()` to remove the passed teardown logic from the inner subscriptions\n   * list.\n   */\n  add(teardown: TeardownLogic): Subscription {\n    if (!teardown || (teardown === Subscription.EMPTY)) {\n      return Subscription.EMPTY;\n    }\n\n    if (teardown === this) {\n      return this;\n    }\n\n    let subscription = (<Subscription> teardown);\n\n    switch (typeof teardown) {\n      case 'function':\n        subscription = new Subscription(<(() => void) > teardown);\n      case 'object':\n        if (subscription.closed || typeof subscription.unsubscribe !== 'function') {\n          return subscription;\n        } else if (this.closed) {\n          subscription.unsubscribe();\n          return subscription;\n        } else if (typeof subscription._addParent !== 'function' /* quack quack */) {\n          const tmp = subscription;\n          subscription = new Subscription();\n          subscription._subscriptions = [tmp];\n        }\n        break;\n      default:\n        throw new Error('unrecognized teardown ' + teardown + ' added to Subscription.');\n    }\n\n    const subscriptions = this._subscriptions || (this._subscriptions = []);\n\n    subscriptions.push(subscription);\n    subscription._addParent(this);\n\n    return subscription;\n  }\n\n  /**\n   * Removes a Subscription from the internal list of subscriptions that will\n   * unsubscribe during the unsubscribe process of this Subscription.\n   * @param {Subscription} subscription The subscription to remove.\n   * @return {void}\n   */\n  remove(subscription: Subscription): void {\n    const subscriptions = this._subscriptions;\n    if (subscriptions) {\n      const subscriptionIndex = subscriptions.indexOf(subscription);\n      if (subscriptionIndex !== -1) {\n        subscriptions.splice(subscriptionIndex, 1);\n      }\n    }\n  }\n\n  private _addParent(parent: Subscription) {\n    let { _parent, _parents } = this;\n    if (!_parent || _parent === parent) {\n      // If we don't have a parent, or the new parent is the same as the\n      // current parent, then set this._parent to the new parent.\n      this._parent = parent;\n    } else if (!_parents) {\n      // If there's already one parent, but not multiple, allocate an Array to\n      // store the rest of the parent Subscriptions.\n      this._parents = [parent];\n    } else if (_parents.indexOf(parent) === -1) {\n      // Only add the new parent to the _parents list if it's not already there.\n      _parents.push(parent);\n    }\n  }\n}\n\nfunction flattenUnsubscriptionErrors(errors: any[]) {\n return errors.reduce((errs, err) => errs.concat((err instanceof UnsubscriptionError) ? err.errors : err), []);\n}\n","export interface NextObserver<T> {\n  closed?: boolean;\n  next: (value: T) => void;\n  error?: (err: any) => void;\n  complete?: () => void;\n}\n\nexport interface ErrorObserver<T> {\n  closed?: boolean;\n  next?: (value: T) => void;\n  error: (err: any) => void;\n  complete?: () => void;\n}\n\nexport interface CompletionObserver<T> {\n  closed?: boolean;\n  next?: (value: T) => void;\n  error?: (err: any) => void;\n  complete: () => void;\n}\n\nexport type PartialObserver<T> = NextObserver<T> | ErrorObserver<T> | CompletionObserver<T>;\n\nexport interface Observer<T> {\n  closed?: boolean;\n  next: (value: T) => void;\n  error: (err: any) => void;\n  complete: () => void;\n}\n\nexport const empty: Observer<any> = {\n  closed: true,\n  next(value: any): void { /* noop */},\n  error(err: any): void { throw err; },\n  complete(): void { /*noop*/ }\n};\n","declare let global: any;\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\ndeclare var WorkerGlobalScope: any;\n// CommonJS / Node have global context exposed as \"global\" variable.\n// We don't want to include the whole node.d.ts this this compilation unit so we'll just fake\n// the global \"global\" var for now.\n\nconst __window = typeof window !== 'undefined' && window;\nconst __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n    self instanceof WorkerGlobalScope && self;\nconst __global = typeof global !== 'undefined' && global;\nconst _root: any = __window || __global || __self;\n\n// Workaround Closure Compiler restriction: The body of a goog.module cannot use throw.\n// This is needed when used with angular/tsickle which inserts a goog.module statement.\n// Wrap in IIFE\n(function () {\n  if (!_root) {\n    throw new Error('RxJS could not find any global context (window, self, global)');\n  }\n})();\n\nexport { _root as root };","import { root } from '../util/root';\n\nconst Symbol: any = root.Symbol;\n\nexport const rxSubscriber = (typeof Symbol === 'function' && typeof Symbol.for === 'function') ?\n  Symbol.for('rxSubscriber') : '@@rxSubscriber';\n\n/**\n * @deprecated use rxSubscriber instead\n */\nexport const $$rxSubscriber = rxSubscriber;\n","import { isFunction } from './util/isFunction';\nimport { Observer, PartialObserver } from './Observer';\nimport { Subscription } from './Subscription';\nimport { empty as emptyObserver } from './Observer';\nimport { rxSubscriber as rxSubscriberSymbol } from './symbol/rxSubscriber';\n\n/**\n * Implements the {@link Observer} interface and extends the\n * {@link Subscription} class. While the {@link Observer} is the public API for\n * consuming the values of an {@link Observable}, all Observers get converted to\n * a Subscriber, in order to provide Subscription-like capabilities such as\n * `unsubscribe`. Subscriber is a common type in RxJS, and crucial for\n * implementing operators, but it is rarely used as a public API.\n *\n * @class Subscriber<T>\n */\nexport class Subscriber<T> extends Subscription implements Observer<T> {\n\n  [rxSubscriberSymbol]() { return this; }\n\n  /**\n   * A static factory for a Subscriber, given a (potentially partial) definition\n   * of an Observer.\n   * @param {function(x: ?T): void} [next] The `next` callback of an Observer.\n   * @param {function(e: ?any): void} [error] The `error` callback of an\n   * Observer.\n   * @param {function(): void} [complete] The `complete` callback of an\n   * Observer.\n   * @return {Subscriber<T>} A Subscriber wrapping the (partially defined)\n   * Observer represented by the given arguments.\n   */\n  static create<T>(next?: (x?: T) => void,\n                   error?: (e?: any) => void,\n                   complete?: () => void): Subscriber<T> {\n    const subscriber = new Subscriber(next, error, complete);\n    subscriber.syncErrorThrowable = false;\n    return subscriber;\n  }\n\n  public syncErrorValue: any = null;\n  public syncErrorThrown: boolean = false;\n  public syncErrorThrowable: boolean = false;\n\n  protected isStopped: boolean = false;\n  protected destination: PartialObserver<any>; // this `any` is the escape hatch to erase extra type param (e.g. R)\n\n  /**\n   * @param {Observer|function(value: T): void} [destinationOrNext] A partially\n   * defined Observer or a `next` callback function.\n   * @param {function(e: ?any): void} [error] The `error` callback of an\n   * Observer.\n   * @param {function(): void} [complete] The `complete` callback of an\n   * Observer.\n   */\n  constructor(destinationOrNext?: PartialObserver<any> | ((value: T) => void),\n              error?: (e?: any) => void,\n              complete?: () => void) {\n    super();\n\n    switch (arguments.length) {\n      case 0:\n        this.destination = emptyObserver;\n        break;\n      case 1:\n        if (!destinationOrNext) {\n          this.destination = emptyObserver;\n          break;\n        }\n        if (typeof destinationOrNext === 'object') {\n          // HACK(benlesh): To resolve an issue where Node users may have multiple\n          // copies of rxjs in their node_modules directory.\n          if (isTrustedSubscriber(destinationOrNext)) {\n            const trustedSubscriber = destinationOrNext[rxSubscriberSymbol]() as Subscriber<any>;\n            this.syncErrorThrowable = trustedSubscriber.syncErrorThrowable;\n            this.destination = trustedSubscriber;\n            trustedSubscriber.add(this);\n          } else {\n            this.syncErrorThrowable = true;\n            this.destination = new SafeSubscriber<T>(this, <PartialObserver<any>> destinationOrNext);\n          }\n          break;\n        }\n      default:\n        this.syncErrorThrowable = true;\n        this.destination = new SafeSubscriber<T>(this, <((value: T) => void)> destinationOrNext, error, complete);\n        break;\n    }\n  }\n\n  /**\n   * The {@link Observer} callback to receive notifications of type `next` from\n   * the Observable, with a value. The Observable may call this method 0 or more\n   * times.\n   * @param {T} [value] The `next` value.\n   * @return {void}\n   */\n  next(value?: T): void {\n    if (!this.isStopped) {\n      this._next(value);\n    }\n  }\n\n  /**\n   * The {@link Observer} callback to receive notifications of type `error` from\n   * the Observable, with an attached {@link Error}. Notifies the Observer that\n   * the Observable has experienced an error condition.\n   * @param {any} [err] The `error` exception.\n   * @return {void}\n   */\n  error(err?: any): void {\n    if (!this.isStopped) {\n      this.isStopped = true;\n      this._error(err);\n    }\n  }\n\n  /**\n   * The {@link Observer} callback to receive a valueless notification of type\n   * `complete` from the Observable. Notifies the Observer that the Observable\n   * has finished sending push-based notifications.\n   * @return {void}\n   */\n  complete(): void {\n    if (!this.isStopped) {\n      this.isStopped = true;\n      this._complete();\n    }\n  }\n\n  unsubscribe(): void {\n    if (this.closed) {\n      return;\n    }\n    this.isStopped = true;\n    super.unsubscribe();\n  }\n\n  protected _next(value: T): void {\n    this.destination.next(value);\n  }\n\n  protected _error(err: any): void {\n    this.destination.error(err);\n    this.unsubscribe();\n  }\n\n  protected _complete(): void {\n    this.destination.complete();\n    this.unsubscribe();\n  }\n\n  /** @deprecated internal use only */ _unsubscribeAndRecycle(): Subscriber<T> {\n    const { _parent, _parents } = this;\n    this._parent = null;\n    this._parents = null;\n    this.unsubscribe();\n    this.closed = false;\n    this.isStopped = false;\n    this._parent = _parent;\n    this._parents = _parents;\n    return this;\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SafeSubscriber<T> extends Subscriber<T> {\n\n  private _context: any;\n\n  constructor(private _parentSubscriber: Subscriber<T>,\n              observerOrNext?: PartialObserver<T> | ((value: T) => void),\n              error?: (e?: any) => void,\n              complete?: () => void) {\n    super();\n\n    let next: ((value: T) => void);\n    let context: any = this;\n\n    if (isFunction(observerOrNext)) {\n      next = (<((value: T) => void)> observerOrNext);\n    } else if (observerOrNext) {\n      next = (<PartialObserver<T>> observerOrNext).next;\n      error = (<PartialObserver<T>> observerOrNext).error;\n      complete = (<PartialObserver<T>> observerOrNext).complete;\n      if (observerOrNext !== emptyObserver) {\n        context = Object.create(observerOrNext);\n        if (isFunction(context.unsubscribe)) {\n          this.add(<() => void> context.unsubscribe.bind(context));\n        }\n        context.unsubscribe = this.unsubscribe.bind(this);\n      }\n    }\n\n    this._context = context;\n    this._next = next;\n    this._error = error;\n    this._complete = complete;\n  }\n\n  next(value?: T): void {\n    if (!this.isStopped && this._next) {\n      const { _parentSubscriber } = this;\n      if (!_parentSubscriber.syncErrorThrowable) {\n        this.__tryOrUnsub(this._next, value);\n      } else if (this.__tryOrSetError(_parentSubscriber, this._next, value)) {\n        this.unsubscribe();\n      }\n    }\n  }\n\n  error(err?: any): void {\n    if (!this.isStopped) {\n      const { _parentSubscriber } = this;\n      if (this._error) {\n        if (!_parentSubscriber.syncErrorThrowable) {\n          this.__tryOrUnsub(this._error, err);\n          this.unsubscribe();\n        } else {\n          this.__tryOrSetError(_parentSubscriber, this._error, err);\n          this.unsubscribe();\n        }\n      } else if (!_parentSubscriber.syncErrorThrowable) {\n        this.unsubscribe();\n        throw err;\n      } else {\n        _parentSubscriber.syncErrorValue = err;\n        _parentSubscriber.syncErrorThrown = true;\n        this.unsubscribe();\n      }\n    }\n  }\n\n  complete(): void {\n    if (!this.isStopped) {\n      const { _parentSubscriber } = this;\n      if (this._complete) {\n        const wrappedComplete = () => this._complete.call(this._context);\n\n        if (!_parentSubscriber.syncErrorThrowable) {\n          this.__tryOrUnsub(wrappedComplete);\n          this.unsubscribe();\n        } else {\n          this.__tryOrSetError(_parentSubscriber, wrappedComplete);\n          this.unsubscribe();\n        }\n      } else {\n        this.unsubscribe();\n      }\n    }\n  }\n\n  private __tryOrUnsub(fn: Function, value?: any): void {\n    try {\n      fn.call(this._context, value);\n    } catch (err) {\n      this.unsubscribe();\n      throw err;\n    }\n  }\n\n  private __tryOrSetError(parent: Subscriber<T>, fn: Function, value?: any): boolean {\n    try {\n      fn.call(this._context, value);\n    } catch (err) {\n      parent.syncErrorValue = err;\n      parent.syncErrorThrown = true;\n      return true;\n    }\n    return false;\n  }\n\n  /** @deprecated internal use only */ _unsubscribe(): void {\n    const { _parentSubscriber } = this;\n    this._context = null;\n    this._parentSubscriber = null;\n    _parentSubscriber.unsubscribe();\n  }\n}\n\nfunction isTrustedSubscriber(obj: any) {\n  return obj instanceof Subscriber || ('syncErrorThrowable' in obj && obj[rxSubscriberSymbol]);\n}\n","import { Scheduler } from '../Scheduler';\nimport { Subscription } from '../Subscription';\n\n/**\n * A unit of work to be executed in a {@link Scheduler}. An action is typically\n * created from within a Scheduler and an RxJS user does not need to concern\n * themselves about creating and manipulating an Action.\n *\n * ```ts\n * class Action<T> extends Subscription {\n *   new (scheduler: Scheduler, work: (state?: T) => void);\n *   schedule(state?: T, delay: number = 0): Subscription;\n * }\n * ```\n *\n * @class Action<T>\n */\nexport class Action<T> extends Subscription {\n  constructor(scheduler: Scheduler, work: (this: Action<T>, state?: T) => void) {\n    super();\n  }\n  /**\n   * Schedules this action on its parent Scheduler for execution. May be passed\n   * some context object, `state`. May happen at some point in the future,\n   * according to the `delay` parameter, if specified.\n   * @param {T} [state] Some contextual data that the `work` function uses when\n   * called by the Scheduler.\n   * @param {number} [delay] Time to wait before executing the work, where the\n   * time unit is implicit and defined by the Scheduler.\n   * @return {void}\n   */\n  public schedule(state?: T, delay: number = 0): Subscription {\n    return this;\n  }\n}\n","import { root } from '../util/root';\nimport { Action } from './Action';\nimport { Subscription } from '../Subscription';\nimport { AsyncScheduler } from './AsyncScheduler';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class AsyncAction<T> extends Action<T> {\n\n  public id: any;\n  public state: T;\n  public delay: number;\n  protected pending: boolean = false;\n\n  constructor(protected scheduler: AsyncScheduler,\n              protected work: (this: AsyncAction<T>, state?: T) => void) {\n    super(scheduler, work);\n  }\n\n  public schedule(state?: T, delay: number = 0): Subscription {\n\n    if (this.closed) {\n      return this;\n     }\n\n    // Always replace the current state with the new state.\n    this.state = state;\n\n    // Set the pending flag indicating that this action has been scheduled, or\n    // has recursively rescheduled itself.\n    this.pending = true;\n\n    const id = this.id;\n    const scheduler = this.scheduler;\n\n    //\n    // Important implementation note:\n    //\n    // Actions only execute once by default, unless rescheduled from within the\n    // scheduled callback. This allows us to implement single and repeat\n    // actions via the same code path, without adding API surface area, as well\n    // as mimic traditional recursion but across asynchronous boundaries.\n    //\n    // However, JS runtimes and timers distinguish between intervals achieved by\n    // serial `setTimeout` calls vs. a single `setInterval` call. An interval of\n    // serial `setTimeout` calls can be individually delayed, which delays\n    // scheduling the next `setTimeout`, and so on. `setInterval` attempts to\n    // guarantee the interval callback will be invoked more precisely to the\n    // interval period, regardless of load.\n    //\n    // Therefore, we use `setInterval` to schedule single and repeat actions.\n    // If the action reschedules itself with the same delay, the interval is not\n    // canceled. If the action doesn't reschedule, or reschedules with a\n    // different delay, the interval will be canceled after scheduled callback\n    // execution.\n    //\n    if (id != null) {\n      this.id = this.recycleAsyncId(scheduler, id, delay);\n    }\n\n    this.delay = delay;\n    // If this action has already an async Id, don't request a new one.\n    this.id = this.id || this.requestAsyncId(scheduler, this.id, delay);\n\n    return this;\n  }\n\n  protected requestAsyncId(scheduler: AsyncScheduler, id?: any, delay: number = 0): any {\n    return root.setInterval(scheduler.flush.bind(scheduler, this), delay);\n  }\n\n  protected recycleAsyncId(scheduler: AsyncScheduler, id: any, delay: number = 0): any {\n    // If this action is rescheduled with the same delay time, don't clear the interval id.\n    if (delay !== null && this.delay === delay && this.pending === false) {\n      return id;\n    }\n    // Otherwise, if the action's delay time is different from the current delay,\n    // or the action has been rescheduled before it's executed, clear the interval id\n    return root.clearInterval(id) && undefined || undefined;\n  }\n\n  /**\n   * Immediately executes this action and the `work` it contains.\n   * @return {any}\n   */\n  public execute(state: T, delay: number): any {\n\n    if (this.closed) {\n      return new Error('executing a cancelled action');\n    }\n\n    this.pending = false;\n    const error = this._execute(state, delay);\n    if (error) {\n      return error;\n    } else if (this.pending === false && this.id != null) {\n      // Dequeue if the action didn't reschedule itself. Don't call\n      // unsubscribe(), because the action could reschedule later.\n      // For example:\n      // ```\n      // scheduler.schedule(function doWork(counter) {\n      //   /* ... I'm a busy worker bee ... */\n      //   var originalAction = this;\n      //   /* wait 100ms before rescheduling the action */\n      //   setTimeout(function () {\n      //     originalAction.schedule(counter + 1);\n      //   }, 100);\n      // }, 1000);\n      // ```\n      this.id = this.recycleAsyncId(this.scheduler, this.id, null);\n    }\n  }\n\n  protected _execute(state: T, delay: number): any {\n    let errored: boolean = false;\n    let errorValue: any = undefined;\n    try {\n      this.work(state);\n    } catch (e) {\n      errored = true;\n      errorValue = !!e && e || new Error(e);\n    }\n    if (errored) {\n      this.unsubscribe();\n      return errorValue;\n    }\n  }\n\n  /** @deprecated internal use only */ _unsubscribe() {\n\n    const id = this.id;\n    const scheduler = this.scheduler;\n    const actions = scheduler.actions;\n    const index = actions.indexOf(this);\n\n    this.work  = null;\n    this.state = null;\n    this.pending = false;\n    this.scheduler = null;\n\n    if (index !== -1) {\n      actions.splice(index, 1);\n    }\n\n    if (id != null) {\n      this.id = this.recycleAsyncId(scheduler, id, null);\n    }\n\n    this.delay = null;\n  }\n}\n","import { Action } from './scheduler/Action';\nimport { Subscription } from './Subscription';\n\nexport interface IScheduler {\n  now(): number;\n  schedule<T>(work: (this: Action<T>, state?: T) => void, delay?: number, state?: T): Subscription;\n}\n/**\n * An execution context and a data structure to order tasks and schedule their\n * execution. Provides a notion of (potentially virtual) time, through the\n * `now()` getter method.\n *\n * Each unit of work in a Scheduler is called an {@link Action}.\n *\n * ```ts\n * class Scheduler {\n *   now(): number;\n *   schedule(work, delay?, state?): Subscription;\n * }\n * ```\n *\n * @class Scheduler\n */\nexport class Scheduler implements IScheduler {\n\n  public static now: () => number = Date.now ? Date.now : () => +new Date();\n\n  constructor(private SchedulerAction: typeof Action,\n              now: () => number = Scheduler.now) {\n    this.now = now;\n  }\n\n  /**\n   * A getter method that returns a number representing the current time\n   * (at the time this function was called) according to the scheduler's own\n   * internal clock.\n   * @return {number} A number that represents the current time. May or may not\n   * have a relation to wall-clock time. May or may not refer to a time unit\n   * (e.g. milliseconds).\n   */\n  public now: () => number;\n\n  /**\n   * Schedules a function, `work`, for execution. May happen at some point in\n   * the future, according to the `delay` parameter, if specified. May be passed\n   * some context object, `state`, which will be passed to the `work` function.\n   *\n   * The given arguments will be processed an stored as an Action object in a\n   * queue of actions.\n   *\n   * @param {function(state: ?T): ?Subscription} work A function representing a\n   * task, or some unit of work to be executed by the Scheduler.\n   * @param {number} [delay] Time to wait before executing the work, where the\n   * time unit is implicit and defined by the Scheduler itself.\n   * @param {T} [state] Some contextual data that the `work` function uses when\n   * called by the Scheduler.\n   * @return {Subscription} A subscription in order to be able to unsubscribe\n   * the scheduled work.\n   */\n  public schedule<T>(work: (this: Action<T>, state?: T) => void, delay: number = 0, state?: T): Subscription {\n    return new this.SchedulerAction<T>(this, work).schedule(state, delay);\n  }\n}\n","import { Scheduler } from '../Scheduler';\nimport { AsyncAction } from './AsyncAction';\n\nexport class AsyncScheduler extends Scheduler {\n  public actions: Array<AsyncAction<any>> = [];\n  /**\n   * A flag to indicate whether the Scheduler is currently executing a batch of\n   * queued actions.\n   * @type {boolean}\n   */\n  public active: boolean = false;\n  /**\n   * An internal ID used to track the latest asynchronous task such as those\n   * coming from `setTimeout`, `setInterval`, `requestAnimationFrame`, and\n   * others.\n   * @type {any}\n   */\n  public scheduled: any = undefined;\n\n  public flush(action: AsyncAction<any>): void {\n\n    const {actions} = this;\n\n    if (this.active) {\n      actions.push(action);\n      return;\n    }\n\n    let error: any;\n    this.active = true;\n\n    do {\n      if (error = action.execute(action.state, action.delay)) {\n        break;\n      }\n    } while (action = actions.shift()); // exhaust the scheduler queue\n\n    this.active = false;\n\n    if (error) {\n      while (action = actions.shift()) {\n        action.unsubscribe();\n      }\n      throw error;\n    }\n  }\n}\n","import { AsyncAction } from './AsyncAction';\nimport { AsyncScheduler } from './AsyncScheduler';\n\n/**\n *\n * Async Scheduler\n *\n * <span class=\"informal\">Schedule task as if you used setTimeout(task, duration)</span>\n *\n * `async` scheduler schedules tasks asynchronously, by putting them on the JavaScript\n * event loop queue. It is best used to delay tasks in time or to schedule tasks repeating\n * in intervals.\n *\n * If you just want to \"defer\" task, that is to perform it right after currently\n * executing synchronous code ends (commonly achieved by `setTimeout(deferredTask, 0)`),\n * better choice will be the {@link asap} scheduler.\n *\n * @example <caption>Use async scheduler to delay task</caption>\n * const task = () => console.log('it works!');\n *\n * Rx.Scheduler.async.schedule(task, 2000);\n *\n * // After 2 seconds logs:\n * // \"it works!\"\n *\n *\n * @example <caption>Use async scheduler to repeat task in intervals</caption>\n * function task(state) {\n *   console.log(state);\n *   this.schedule(state + 1, 1000); // `this` references currently executing Action,\n *                                   // which we reschedule with new state and delay\n * }\n *\n * Rx.Scheduler.async.schedule(task, 3000, 0);\n *\n * // Logs:\n * // 0 after 3s\n * // 1 after 4s\n * // 2 after 5s\n * // 3 after 6s\n *\n * @static true\n * @name async\n * @owner Scheduler\n */\n\nexport const async = new AsyncScheduler(AsyncAction);\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { IScheduler } from '../Scheduler';\nimport { Subscription, TeardownLogic } from '../Subscription';\nimport { async } from '../scheduler/async';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Emits a value from the source Observable only after a particular time span\n * has passed without another source emission.\n *\n * <span class=\"informal\">It's like {@link delay}, but passes only the most\n * recent value from each burst of emissions.</span>\n *\n * <img src=\"./img/debounceTime.png\" width=\"100%\">\n *\n * `debounceTime` delays values emitted by the source Observable, but drops\n * previous pending delayed emissions if a new value arrives on the source\n * Observable. This operator keeps track of the most recent value from the\n * source Observable, and emits that only when `dueTime` enough time has passed\n * without any other value appearing on the source Observable. If a new value\n * appears before `dueTime` silence occurs, the previous value will be dropped\n * and will not be emitted on the output Observable.\n *\n * This is a rate-limiting operator, because it is impossible for more than one\n * value to be emitted in any time window of duration `dueTime`, but it is also\n * a delay-like operator since output emissions do not occur at the same time as\n * they did on the source Observable. Optionally takes a {@link IScheduler} for\n * managing timers.\n *\n * @example <caption>Emit the most recent click after a burst of clicks</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.debounceTime(1000);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link auditTime}\n * @see {@link debounce}\n * @see {@link delay}\n * @see {@link sampleTime}\n * @see {@link throttleTime}\n *\n * @param {number} dueTime The timeout duration in milliseconds (or the time\n * unit determined internally by the optional `scheduler`) for the window of\n * time required to wait for emission silence before emitting the most recent\n * source value.\n * @param {Scheduler} [scheduler=async] The {@link IScheduler} to use for\n * managing the timers that handle the timeout for each value.\n * @return {Observable} An Observable that delays the emissions of the source\n * Observable by the specified `dueTime`, and may drop some values if they occur\n * too frequently.\n * @method debounceTime\n * @owner Observable\n */\nexport function debounceTime<T>(dueTime: number, scheduler: IScheduler = async): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new DebounceTimeOperator(dueTime, scheduler));\n}\n\nclass DebounceTimeOperator<T> implements Operator<T, T> {\n  constructor(private dueTime: number, private scheduler: IScheduler) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new DebounceTimeSubscriber(subscriber, this.dueTime, this.scheduler));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass DebounceTimeSubscriber<T> extends Subscriber<T> {\n  private debouncedSubscription: Subscription = null;\n  private lastValue: T = null;\n  private hasValue: boolean = false;\n\n  constructor(destination: Subscriber<T>,\n              private dueTime: number,\n              private scheduler: IScheduler) {\n    super(destination);\n  }\n\n  protected _next(value: T) {\n    this.clearDebounce();\n    this.lastValue = value;\n    this.hasValue = true;\n    this.add(this.debouncedSubscription = this.scheduler.schedule(dispatchNext, this.dueTime, this));\n  }\n\n  protected _complete() {\n    this.debouncedNext();\n    this.destination.complete();\n  }\n\n  debouncedNext(): void {\n    this.clearDebounce();\n\n    if (this.hasValue) {\n      this.destination.next(this.lastValue);\n      this.lastValue = null;\n      this.hasValue = false;\n    }\n  }\n\n  private clearDebounce(): void {\n    const debouncedSubscription = this.debouncedSubscription;\n\n    if (debouncedSubscription !== null) {\n      this.remove(debouncedSubscription);\n      debouncedSubscription.unsubscribe();\n      this.debouncedSubscription = null;\n    }\n  }\n}\n\nfunction dispatchNext(subscriber: DebounceTimeSubscriber<any>) {\n  subscriber.debouncedNext();\n}\n","import { Directive, ElementRef, EventEmitter, Input, NgZone, OnDestroy, OnInit, Output } from '@angular/core';\nimport { Subscription } from 'rxjs/Subscription';\nimport { debounceTime } from 'rxjs/operators/debounceTime';\nimport { ResizeDimensions, ResizeService } from './resize.service';\nexport class ResizeDirective implements OnInit, OnDestroy {\n\n     throttle: number = 0;\n     uxResize: EventEmitter<ResizeDimensions> = new EventEmitter<ResizeDimensions>();\nprivate _subscription: Subscription;\n/**\n * @param {?} _elementRef\n * @param {?} _resizeService\n * @param {?} _ngZone\n */\nconstructor(private _elementRef: ElementRef,\nprivate _resizeService: ResizeService,\nprivate _ngZone: NgZone) { }\n/**\n * @return {?}\n */\nngOnInit(): void {\n        this._subscription = this._resizeService.addResizeListener(this._elementRef.nativeElement)\n            .pipe(debounceTime(this.throttle))\n            .subscribe((event: ResizeDimensions) => this._ngZone.run(() => this.uxResize.emit(event)));\n    }\n/**\n * @return {?}\n */\nngOnDestroy(): void {\n        this._subscription.unsubscribe();\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: '[uxResize]',\n    providers: [ResizeService]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: ResizeService, },\n{type: NgZone, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'throttle': [{ type: Input },],\n'uxResize': [{ type: Output },],\n};\n}\n\nfunction ResizeDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nResizeDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nResizeDirective.ctorParameters;\n/** @type {?} */\nResizeDirective.propDecorators;\n/** @type {?} */\nResizeDirective.prototype.throttle;\n/** @type {?} */\nResizeDirective.prototype.uxResize;\n/** @type {?} */\nResizeDirective.prototype._subscription;\n/** @type {?} */\nResizeDirective.prototype._elementRef;\n/** @type {?} */\nResizeDirective.prototype._resizeService;\n/** @type {?} */\nResizeDirective.prototype._ngZone;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\n\nimport { ResizeDirective } from './resize.directive';\nimport { ResizeService } from './resize.service';\nexport class ResizeModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    exports: [ResizeDirective],\n    declarations: [ResizeDirective],\n    providers: [ResizeService]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ResizeModule_tsickle_Closure_declarations() {\n/** @type {?} */\nResizeModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nResizeModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive } from '@angular/core';\nexport class CardTabContentDirective { static decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[uxCardTabContent]'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction CardTabContentDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nCardTabContentDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nCardTabContentDirective.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Subscriber } from './Subscriber';\nimport { InnerSubscriber } from './InnerSubscriber';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class OuterSubscriber<T, R> extends Subscriber<T> {\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this.destination.next(innerValue);\n  }\n\n  notifyError(error: any, innerSub: InnerSubscriber<T, R>): void {\n    this.destination.error(error);\n  }\n\n  notifyComplete(innerSub: InnerSubscriber<T, R>): void {\n    this.destination.complete();\n  }\n}\n","export const isArrayLike = (<T>(x: any): x is ArrayLike<T> => x && typeof x.length === 'number');","export function isPromise<T>(value: any | Promise<T>): value is Promise<T> {\n  return value && typeof (<any>value).subscribe !== 'function' && typeof (value as any).then === 'function';\n}\n","import { Subscriber } from '../Subscriber';\nimport { rxSubscriber as rxSubscriberSymbol } from '../symbol/rxSubscriber';\nimport { PartialObserver, empty as emptyObserver } from '../Observer';\n\nexport function toSubscriber<T>(\n  nextOrObserver?: PartialObserver<T> | ((value: T) => void),\n  error?: (error: any) => void,\n  complete?: () => void): Subscriber<T> {\n\n  if (nextOrObserver) {\n    if (nextOrObserver instanceof Subscriber) {\n      return (<Subscriber<T>> nextOrObserver);\n    }\n\n    if (nextOrObserver[rxSubscriberSymbol]) {\n      return nextOrObserver[rxSubscriberSymbol]();\n    }\n  }\n\n  if (!nextOrObserver && !error && !complete) {\n    return new Subscriber(emptyObserver);\n  }\n\n  return new Subscriber(nextOrObserver, error, complete);\n}\n","import { root } from '../util/root';\n\nexport function getSymbolObservable(context: any) {\n  let $$observable: any;\n  let Symbol = context.Symbol;\n\n  if (typeof Symbol === 'function') {\n    if (Symbol.observable) {\n      $$observable = Symbol.observable;\n    } else {\n        $$observable = Symbol('observable');\n        Symbol.observable = $$observable;\n    }\n  } else {\n    $$observable = '@@observable';\n  }\n\n  return $$observable;\n}\n\nexport const observable = getSymbolObservable(root);\n\n/**\n * @deprecated use observable instead\n */\nexport const $$observable = observable;\n","/* tslint:disable:no-empty */\nexport function noop() { }\n","import { noop } from './noop';\nimport { UnaryFunction } from '../interfaces';\n\n/* tslint:disable:max-line-length */\nexport function pipe<T>(): UnaryFunction<T, T>;\nexport function pipe<T, A>(op1: UnaryFunction<T, A>): UnaryFunction<T, A>;\nexport function pipe<T, A, B>(op1: UnaryFunction<T, A>, op2: UnaryFunction<A, B>): UnaryFunction<T, B>;\nexport function pipe<T, A, B, C>(op1: UnaryFunction<T, A>, op2: UnaryFunction<A, B>, op3: UnaryFunction<B, C>): UnaryFunction<T, C>;\nexport function pipe<T, A, B, C, D>(op1: UnaryFunction<T, A>, op2: UnaryFunction<A, B>, op3: UnaryFunction<B, C>, op4: UnaryFunction<C, D>): UnaryFunction<T, D>;\nexport function pipe<T, A, B, C, D, E>(op1: UnaryFunction<T, A>, op2: UnaryFunction<A, B>, op3: UnaryFunction<B, C>, op4: UnaryFunction<C, D>, op5: UnaryFunction<D, E>): UnaryFunction<T, E>;\nexport function pipe<T, A, B, C, D, E, F>(op1: UnaryFunction<T, A>, op2: UnaryFunction<A, B>, op3: UnaryFunction<B, C>, op4: UnaryFunction<C, D>, op5: UnaryFunction<D, E>, op6: UnaryFunction<E, F>): UnaryFunction<T, F>;\nexport function pipe<T, A, B, C, D, E, F, G>(op1: UnaryFunction<T, A>, op2: UnaryFunction<A, B>, op3: UnaryFunction<B, C>, op4: UnaryFunction<C, D>, op5: UnaryFunction<D, E>, op6: UnaryFunction<E, F>, op7: UnaryFunction<F, G>): UnaryFunction<T, G>;\nexport function pipe<T, A, B, C, D, E, F, G, H>(op1: UnaryFunction<T, A>, op2: UnaryFunction<A, B>, op3: UnaryFunction<B, C>, op4: UnaryFunction<C, D>, op5: UnaryFunction<D, E>, op6: UnaryFunction<E, F>, op7: UnaryFunction<F, G>, op8: UnaryFunction<G, H>): UnaryFunction<T, H>;\nexport function pipe<T, A, B, C, D, E, F, G, H, I>(op1: UnaryFunction<T, A>, op2: UnaryFunction<A, B>, op3: UnaryFunction<B, C>, op4: UnaryFunction<C, D>, op5: UnaryFunction<D, E>, op6: UnaryFunction<E, F>, op7: UnaryFunction<F, G>, op8: UnaryFunction<G, H>, op9: UnaryFunction<H, I>): UnaryFunction<T, I>;\n/* tslint:enable:max-line-length */\n\nexport function pipe<T, R>(...fns: Array<UnaryFunction<T, R>>): UnaryFunction<T, R> {\n  return pipeFromArray(fns);\n}\n\n/* @internal */\nexport function pipeFromArray<T, R>(fns: Array<UnaryFunction<T, R>>): UnaryFunction<T, R> {\n  if (!fns) {\n    return noop as UnaryFunction<any, any>;\n  }\n\n  if (fns.length === 1) {\n    return fns[0];\n  }\n\n  return function piped(input: T): R {\n    return fns.reduce((prev: any, fn: UnaryFunction<T, R>) => fn(prev), input);\n  };\n}\n","import { PartialObserver } from './Observer';\nimport { Operator } from './Operator';\nimport { Subscriber } from './Subscriber';\nimport { Subscription, AnonymousSubscription, TeardownLogic } from './Subscription';\nimport { root } from './util/root';\nimport { toSubscriber } from './util/toSubscriber';\nimport { IfObservable } from './observable/IfObservable';\nimport { ErrorObservable } from './observable/ErrorObservable';\nimport { observable as Symbol_observable } from './symbol/observable';\nimport { OperatorFunction } from './interfaces';\nimport { pipeFromArray } from './util/pipe';\n\nexport interface Subscribable<T> {\n  subscribe(observerOrNext?: PartialObserver<T> | ((value: T) => void),\n            error?: (error: any) => void,\n            complete?: () => void): AnonymousSubscription;\n}\n\nexport type SubscribableOrPromise<T> = Subscribable<T> | PromiseLike<T>;\nexport type ObservableInput<T> = SubscribableOrPromise<T> | ArrayLike<T>;\n\n/**\n * A representation of any set of values over any amount of time. This is the most basic building block\n * of RxJS.\n *\n * @class Observable<T>\n */\nexport class Observable<T> implements Subscribable<T> {\n\n  public _isScalar: boolean = false;\n\n  /** @deprecated internal use only */ public source: Observable<any>;\n  protected operator: Operator<any, T>;\n\n  /**\n   * @constructor\n   * @param {Function} subscribe the function that is called when the Observable is\n   * initially subscribed to. This function is given a Subscriber, to which new values\n   * can be `next`ed, or an `error` method can be called to raise an error, or\n   * `complete` can be called to notify of a successful completion.\n   */\n  constructor(subscribe?: (this: Observable<T>, subscriber: Subscriber<T>) => TeardownLogic) {\n    if (subscribe) {\n      this._subscribe = subscribe;\n    }\n  }\n\n  // HACK: Since TypeScript inherits static properties too, we have to\n  // fight against TypeScript here so Subject can have a different static create signature\n  /**\n   * Creates a new cold Observable by calling the Observable constructor\n   * @static true\n   * @owner Observable\n   * @method create\n   * @param {Function} subscribe? the subscriber function to be passed to the Observable constructor\n   * @return {Observable} a new cold observable\n   */\n  static create: Function = <T>(subscribe?: (subscriber: Subscriber<T>) => TeardownLogic) => {\n    return new Observable<T>(subscribe);\n  }\n\n  /**\n   * Creates a new Observable, with this Observable as the source, and the passed\n   * operator defined as the new observable's operator.\n   * @method lift\n   * @param {Operator} operator the operator defining the operation to take on the observable\n   * @return {Observable} a new observable with the Operator applied\n   */\n  lift<R>(operator: Operator<T, R>): Observable<R> {\n    const observable = new Observable<R>();\n    observable.source = this;\n    observable.operator = operator;\n    return observable;\n  }\n\n  subscribe(observer?: PartialObserver<T>): Subscription;\n  subscribe(next?: (value: T) => void, error?: (error: any) => void, complete?: () => void): Subscription;\n  /**\n   * Invokes an execution of an Observable and registers Observer handlers for notifications it will emit.\n   *\n   * <span class=\"informal\">Use it when you have all these Observables, but still nothing is happening.</span>\n   *\n   * `subscribe` is not a regular operator, but a method that calls Observable's internal `subscribe` function. It\n   * might be for example a function that you passed to a {@link create} static factory, but most of the time it is\n   * a library implementation, which defines what and when will be emitted by an Observable. This means that calling\n   * `subscribe` is actually the moment when Observable starts its work, not when it is created, as it is often\n   * thought.\n   *\n   * Apart from starting the execution of an Observable, this method allows you to listen for values\n   * that an Observable emits, as well as for when it completes or errors. You can achieve this in two\n   * following ways.\n   *\n   * The first way is creating an object that implements {@link Observer} interface. It should have methods\n   * defined by that interface, but note that it should be just a regular JavaScript object, which you can create\n   * yourself in any way you want (ES6 class, classic function constructor, object literal etc.). In particular do\n   * not attempt to use any RxJS implementation details to create Observers - you don't need them. Remember also\n   * that your object does not have to implement all methods. If you find yourself creating a method that doesn't\n   * do anything, you can simply omit it. Note however, that if `error` method is not provided, all errors will\n   * be left uncaught.\n   *\n   * The second way is to give up on Observer object altogether and simply provide callback functions in place of its methods.\n   * This means you can provide three functions as arguments to `subscribe`, where first function is equivalent\n   * of a `next` method, second of an `error` method and third of a `complete` method. Just as in case of Observer,\n   * if you do not need to listen for something, you can omit a function, preferably by passing `undefined` or `null`,\n   * since `subscribe` recognizes these functions by where they were placed in function call. When it comes\n   * to `error` function, just as before, if not provided, errors emitted by an Observable will be thrown.\n   *\n   * Whatever style of calling `subscribe` you use, in both cases it returns a Subscription object.\n   * This object allows you to call `unsubscribe` on it, which in turn will stop work that an Observable does and will clean\n   * up all resources that an Observable used. Note that cancelling a subscription will not call `complete` callback\n   * provided to `subscribe` function, which is reserved for a regular completion signal that comes from an Observable.\n   *\n   * Remember that callbacks provided to `subscribe` are not guaranteed to be called asynchronously.\n   * It is an Observable itself that decides when these functions will be called. For example {@link of}\n   * by default emits all its values synchronously. Always check documentation for how given Observable\n   * will behave when subscribed and if its default behavior can be modified with a {@link Scheduler}.\n   *\n   * @example <caption>Subscribe with an Observer</caption>\n   * const sumObserver = {\n   *   sum: 0,\n   *   next(value) {\n   *     console.log('Adding: ' + value);\n   *     this.sum = this.sum + value;\n   *   },\n   *   error() { // We actually could just remove this method,\n   *   },        // since we do not really care about errors right now.\n   *   complete() {\n   *     console.log('Sum equals: ' + this.sum);\n   *   }\n   * };\n   *\n   * Rx.Observable.of(1, 2, 3) // Synchronously emits 1, 2, 3 and then completes.\n   * .subscribe(sumObserver);\n   *\n   * // Logs:\n   * // \"Adding: 1\"\n   * // \"Adding: 2\"\n   * // \"Adding: 3\"\n   * // \"Sum equals: 6\"\n   *\n   *\n   * @example <caption>Subscribe with functions</caption>\n   * let sum = 0;\n   *\n   * Rx.Observable.of(1, 2, 3)\n   * .subscribe(\n   *   function(value) {\n   *     console.log('Adding: ' + value);\n   *     sum = sum + value;\n   *   },\n   *   undefined,\n   *   function() {\n   *     console.log('Sum equals: ' + sum);\n   *   }\n   * );\n   *\n   * // Logs:\n   * // \"Adding: 1\"\n   * // \"Adding: 2\"\n   * // \"Adding: 3\"\n   * // \"Sum equals: 6\"\n   *\n   *\n   * @example <caption>Cancel a subscription</caption>\n   * const subscription = Rx.Observable.interval(1000).subscribe(\n   *   num => console.log(num),\n   *   undefined,\n   *   () => console.log('completed!') // Will not be called, even\n   * );                                // when cancelling subscription\n   *\n   *\n   * setTimeout(() => {\n   *   subscription.unsubscribe();\n   *   console.log('unsubscribed!');\n   * }, 2500);\n   *\n   * // Logs:\n   * // 0 after 1s\n   * // 1 after 2s\n   * // \"unsubscribed!\" after 2.5s\n   *\n   *\n   * @param {Observer|Function} observerOrNext (optional) Either an observer with methods to be called,\n   *  or the first of three possible handlers, which is the handler for each value emitted from the subscribed\n   *  Observable.\n   * @param {Function} error (optional) A handler for a terminal event resulting from an error. If no error handler is provided,\n   *  the error will be thrown as unhandled.\n   * @param {Function} complete (optional) A handler for a terminal event resulting from successful completion.\n   * @return {ISubscription} a subscription reference to the registered handlers\n   * @method subscribe\n   */\n  subscribe(observerOrNext?: PartialObserver<T> | ((value: T) => void),\n            error?: (error: any) => void,\n            complete?: () => void): Subscription {\n\n    const { operator } = this;\n    const sink = toSubscriber(observerOrNext, error, complete);\n\n    if (operator) {\n      operator.call(sink, this.source);\n    } else {\n      sink.add(this.source || !sink.syncErrorThrowable ? this._subscribe(sink) : this._trySubscribe(sink));\n    }\n\n    if (sink.syncErrorThrowable) {\n      sink.syncErrorThrowable = false;\n      if (sink.syncErrorThrown) {\n        throw sink.syncErrorValue;\n      }\n    }\n\n    return sink;\n  }\n\n  protected _trySubscribe(sink: Subscriber<T>): TeardownLogic {\n    try {\n      return this._subscribe(sink);\n    } catch (err) {\n      sink.syncErrorThrown = true;\n      sink.syncErrorValue = err;\n      sink.error(err);\n    }\n  }\n\n  /**\n   * @method forEach\n   * @param {Function} next a handler for each value emitted by the observable\n   * @param {PromiseConstructor} [PromiseCtor] a constructor function used to instantiate the Promise\n   * @return {Promise} a promise that either resolves on observable completion or\n   *  rejects with the handled error\n   */\n  forEach(next: (value: T) => void, PromiseCtor?: typeof Promise): Promise<void> {\n    if (!PromiseCtor) {\n      if (root.Rx && root.Rx.config && root.Rx.config.Promise) {\n        PromiseCtor = root.Rx.config.Promise;\n      } else if (root.Promise) {\n        PromiseCtor = root.Promise;\n      }\n    }\n\n    if (!PromiseCtor) {\n      throw new Error('no Promise impl found');\n    }\n\n    return new PromiseCtor<void>((resolve, reject) => {\n      // Must be declared in a separate statement to avoid a RefernceError when\n      // accessing subscription below in the closure due to Temporal Dead Zone.\n      let subscription: Subscription;\n      subscription = this.subscribe((value) => {\n        if (subscription) {\n          // if there is a subscription, then we can surmise\n          // the next handling is asynchronous. Any errors thrown\n          // need to be rejected explicitly and unsubscribe must be\n          // called manually\n          try {\n            next(value);\n          } catch (err) {\n            reject(err);\n            subscription.unsubscribe();\n          }\n        } else {\n          // if there is NO subscription, then we're getting a nexted\n          // value synchronously during subscription. We can just call it.\n          // If it errors, Observable's `subscribe` will ensure the\n          // unsubscription logic is called, then synchronously rethrow the error.\n          // After that, Promise will trap the error and send it\n          // down the rejection path.\n          next(value);\n        }\n      }, reject, resolve);\n    });\n  }\n\n  /** @deprecated internal use only */ _subscribe(subscriber: Subscriber<any>): TeardownLogic {\n    return this.source.subscribe(subscriber);\n  }\n\n  // `if` and `throw` are special snow flakes, the compiler sees them as reserved words\n  static if: typeof IfObservable.create;\n  static throw: typeof ErrorObservable.create;\n\n  /**\n   * An interop point defined by the es7-observable spec https://github.com/zenparsing/es-observable\n   * @method Symbol.observable\n   * @return {Observable} this instance of the observable\n   */\n  [Symbol_observable]() {\n    return this;\n  }\n\n  /* tslint:disable:max-line-length */\n  pipe(): Observable<T>\n  pipe<A>(op1: OperatorFunction<T, A>): Observable<A>\n  pipe<A, B>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>): Observable<B>\n  pipe<A, B, C>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>): Observable<C>\n  pipe<A, B, C, D>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>): Observable<D>\n  pipe<A, B, C, D, E>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>, op5: OperatorFunction<D, E>): Observable<E>\n  pipe<A, B, C, D, E, F>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>, op5: OperatorFunction<D, E>, op6: OperatorFunction<E, F>): Observable<F>\n  pipe<A, B, C, D, E, F, G>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>, op5: OperatorFunction<D, E>, op6: OperatorFunction<E, F>, op7: OperatorFunction<F, G>): Observable<G>\n  pipe<A, B, C, D, E, F, G, H>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>, op5: OperatorFunction<D, E>, op6: OperatorFunction<E, F>, op7: OperatorFunction<F, G>, op8: OperatorFunction<G, H>): Observable<H>\n  pipe<A, B, C, D, E, F, G, H, I>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>, op5: OperatorFunction<D, E>, op6: OperatorFunction<E, F>, op7: OperatorFunction<F, G>, op8: OperatorFunction<G, H>, op9: OperatorFunction<H, I>): Observable<I>\n  pipe<R>(...operations: OperatorFunction<T, R>[]): Observable<R>\n  /* tslint:enable:max-line-length */\n\n  /**\n   * Used to stitch together functional operators into a chain.\n   * @method pipe\n   * @return {Observable} the Observable result of all of the operators having\n   * been called in the order they were passed in.\n   *\n   * @example\n   *\n   * import { map, filter, scan } from 'rxjs/operators';\n   *\n   * Rx.Observable.interval(1000)\n   *   .pipe(\n   *     filter(x => x % 2 === 0),\n   *     map(x => x + x),\n   *     scan((acc, x) => acc + x)\n   *   )\n   *   .subscribe(x => console.log(x))\n   */\n  pipe<R>(...operations: OperatorFunction<T, R>[]): Observable<R> {\n    if (operations.length === 0) {\n      return this as any;\n    }\n\n    return pipeFromArray(operations)(this);\n  }\n\n  /* tslint:disable:max-line-length */\n  toPromise<T>(this: Observable<T>): Promise<T>;\n  toPromise<T>(this: Observable<T>, PromiseCtor: typeof Promise): Promise<T>;\n  toPromise<T>(this: Observable<T>, PromiseCtor: PromiseConstructorLike): Promise<T>;\n  /* tslint:enable:max-line-length */\n\n  toPromise(PromiseCtor?: PromiseConstructorLike) {\n    if (!PromiseCtor) {\n      if (root.Rx && root.Rx.config && root.Rx.config.Promise) {\n        PromiseCtor = root.Rx.config.Promise;\n      } else if (root.Promise) {\n        PromiseCtor = root.Promise;\n      }\n    }\n\n    if (!PromiseCtor) {\n      throw new Error('no Promise impl found');\n    }\n\n    return new PromiseCtor((resolve, reject) => {\n      let value: any;\n      this.subscribe((x: T) => value = x, (err: any) => reject(err), () => resolve(value));\n    }) as Promise<T>;\n  }\n}\n","import { root } from '../util/root';\n\nexport function symbolIteratorPonyfill(root: any) {\n  const Symbol: any = root.Symbol;\n\n  if (typeof Symbol === 'function') {\n    if (!Symbol.iterator) {\n      Symbol.iterator = Symbol('iterator polyfill');\n    }\n    return Symbol.iterator;\n  } else {\n    // [for Mozilla Gecko 27-35:](https://mzl.la/2ewE1zC)\n    const { Set } = root;\n    if (Set && typeof new Set()['@@iterator'] === 'function') {\n      return '@@iterator';\n    }\n    const { Map } = root;\n    // required for compatability with es6-shim\n    if (Map) {\n      let keys = Object.getOwnPropertyNames(Map.prototype);\n      for (let i = 0; i < keys.length; ++i) {\n        let key = keys[i];\n        // according to spec, Map.prototype[@@iterator] and Map.orototype.entries must be equal.\n        if (key !== 'entries' && key !== 'size' && Map.prototype[key] === Map.prototype['entries']) {\n          return key;\n        }\n      }\n    }\n    return '@@iterator';\n  }\n}\n\nexport const iterator = symbolIteratorPonyfill(root);\n\n/**\n * @deprecated use iterator instead\n */\nexport const $$iterator = iterator;\n","import { Subscriber } from './Subscriber';\nimport { OuterSubscriber } from './OuterSubscriber';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class InnerSubscriber<T, R> extends Subscriber<R> {\n  private index: number = 0;\n\n  constructor(private parent: OuterSubscriber<T, R>, private outerValue: T, private outerIndex: number) {\n    super();\n  }\n\n  protected _next(value: R): void {\n    this.parent.notifyNext(this.outerValue, value, this.outerIndex, this.index++, this);\n  }\n\n  protected _error(error: any): void {\n    this.parent.notifyError(error, this);\n    this.unsubscribe();\n  }\n\n  protected _complete(): void {\n    this.parent.notifyComplete(this);\n    this.unsubscribe();\n  }\n}\n","import { root } from './root';\nimport { isArrayLike } from './isArrayLike';\nimport { isPromise } from './isPromise';\nimport { isObject } from './isObject';\nimport { Subscriber } from '../Subscriber';\nimport { Observable, ObservableInput } from '../Observable';\nimport { iterator as Symbol_iterator } from '../symbol/iterator';\nimport { Subscription } from '../Subscription';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { observable as Symbol_observable } from '../symbol/observable';\n\nexport function subscribeToResult<T, R>(outerSubscriber: OuterSubscriber<T, R>,\n                                        result: any,\n                                        outerValue?: T,\n                                        outerIndex?: number): Subscription;\nexport function subscribeToResult<T>(outerSubscriber: OuterSubscriber<any, any>,\n                                     result: ObservableInput<T>,\n                                     outerValue?: T,\n                                     outerIndex?: number): Subscription {\n  let destination: Subscriber<any> = new InnerSubscriber(outerSubscriber, outerValue, outerIndex);\n\n  if (destination.closed) {\n    return null;\n  }\n\n  if (result instanceof Observable) {\n    if (result._isScalar) {\n      destination.next((<any>result).value);\n      destination.complete();\n      return null;\n    } else {\n      destination.syncErrorThrowable = true;\n      return result.subscribe(destination);\n    }\n  } else if (isArrayLike(result)) {\n    for (let i = 0, len = result.length; i < len && !destination.closed; i++) {\n      destination.next(result[i]);\n    }\n    if (!destination.closed) {\n      destination.complete();\n    }\n  } else if (isPromise(result)) {\n    result.then(\n      (value) => {\n        if (!destination.closed) {\n          destination.next(<any>value);\n          destination.complete();\n        }\n      },\n      (err: any) => destination.error(err)\n    )\n    .then(null, (err: any) => {\n      // Escaping the Promise trap: globally throw unhandled errors\n      root.setTimeout(() => { throw err; });\n    });\n    return destination;\n  } else if (result && typeof result[Symbol_iterator] === 'function') {\n    const iterator = <any>result[Symbol_iterator]();\n    do {\n      let item = iterator.next();\n      if (item.done) {\n        destination.complete();\n        break;\n      }\n      destination.next(item.value);\n      if (destination.closed) {\n        break;\n      }\n    } while (true);\n  } else if (result && typeof result[Symbol_observable] === 'function') {\n    const obs = result[Symbol_observable]();\n    if (typeof obs.subscribe !== 'function') {\n      destination.error(new TypeError('Provided object does not correctly implement Symbol.observable'));\n    } else {\n      return obs.subscribe(new InnerSubscriber(outerSubscriber, outerValue, outerIndex));\n    }\n  } else {\n    const value = isObject(result) ? 'an invalid object' : `'${result}'`;\n    const msg = `You provided ${value} where a stream was expected.`\n      + ' You can provide an Observable, Promise, Array, or Iterable.';\n    destination.error(new TypeError(msg));\n  }\n  return null;\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable, SubscribableOrPromise } from '../Observable';\nimport { Subscription, TeardownLogic } from '../Subscription';\n\nimport { tryCatch } from '../util/tryCatch';\nimport { errorObject } from '../util/errorObject';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Ignores source values for a duration determined by another Observable, then\n * emits the most recent value from the source Observable, then repeats this\n * process.\n *\n * <span class=\"informal\">It's like {@link auditTime}, but the silencing\n * duration is determined by a second Observable.</span>\n *\n * <img src=\"./img/audit.png\" width=\"100%\">\n *\n * `audit` is similar to `throttle`, but emits the last value from the silenced\n * time window, instead of the first value. `audit` emits the most recent value\n * from the source Observable on the output Observable as soon as its internal\n * timer becomes disabled, and ignores source values while the timer is enabled.\n * Initially, the timer is disabled. As soon as the first source value arrives,\n * the timer is enabled by calling the `durationSelector` function with the\n * source value, which returns the \"duration\" Observable. When the duration\n * Observable emits a value or completes, the timer is disabled, then the most\n * recent source value is emitted on the output Observable, and this process\n * repeats for the next source value.\n *\n * @example <caption>Emit clicks at a rate of at most one click per second</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.audit(ev => Rx.Observable.interval(1000));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link auditTime}\n * @see {@link debounce}\n * @see {@link delayWhen}\n * @see {@link sample}\n * @see {@link throttle}\n *\n * @param {function(value: T): SubscribableOrPromise} durationSelector A function\n * that receives a value from the source Observable, for computing the silencing\n * duration, returned as an Observable or a Promise.\n * @return {Observable<T>} An Observable that performs rate-limiting of\n * emissions from the source Observable.\n * @method audit\n * @owner Observable\n */\nexport function audit<T>(durationSelector: (value: T) => SubscribableOrPromise<any>): MonoTypeOperatorFunction<T> {\n  return function auditOperatorFunction(source: Observable<T>) {\n    return source.lift(new AuditOperator(durationSelector));\n  };\n}\n\nclass AuditOperator<T> implements Operator<T, T> {\n  constructor(private durationSelector: (value: T) => SubscribableOrPromise<any>) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new AuditSubscriber<T, T>(subscriber, this.durationSelector));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass AuditSubscriber<T, R> extends OuterSubscriber<T, R> {\n\n  private value: T;\n  private hasValue: boolean = false;\n  private throttled: Subscription;\n\n  constructor(destination: Subscriber<T>,\n              private durationSelector: (value: T) => SubscribableOrPromise<any>) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    this.value = value;\n    this.hasValue = true;\n    if (!this.throttled) {\n      const duration = tryCatch(this.durationSelector)(value);\n      if (duration === errorObject) {\n        this.destination.error(errorObject.e);\n      } else {\n        const innerSubscription = subscribeToResult(this, duration);\n        if (innerSubscription.closed) {\n          this.clearThrottle();\n        } else {\n          this.add(this.throttled = innerSubscription);\n        }\n      }\n    }\n  }\n\n  clearThrottle() {\n    const { value, hasValue, throttled } = this;\n    if (throttled) {\n      this.remove(throttled);\n      this.throttled = null;\n      throttled.unsubscribe();\n    }\n    if (hasValue) {\n      this.value = null;\n      this.hasValue = false;\n      this.destination.next(value);\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: R, outerIndex: number, innerIndex: number): void {\n    this.clearThrottle();\n  }\n\n  notifyComplete(): void {\n    this.clearThrottle();\n  }\n}\n","import { isArray } from '../util/isArray';\n\nexport function isNumeric(val: any): val is number {\n  // parseFloat NaNs numeric-cast false positives (null|true|false|\"\")\n  // ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n  // subtraction forces infinities to NaN\n  // adding 1 corrects loss of precision from parseFloat (#15100)\n  return !isArray(val) && (val - parseFloat(val) + 1) >= 0;\n};\n","import { Scheduler } from '../Scheduler';\nexport function isScheduler(value: any): value is Scheduler {\n  return value && typeof (<any>value).schedule === 'function';\n}\n","export function isDate(value: any): value is Date {\n  return value instanceof Date && !isNaN(+value);\n}\n","import { isNumeric } from '../util/isNumeric';\nimport { IScheduler } from '../Scheduler';\nimport { Observable } from '../Observable';\nimport { async } from '../scheduler/async';\nimport { isScheduler } from '../util/isScheduler';\nimport { isDate } from '../util/isDate';\nimport { TeardownLogic } from '../Subscription';\nimport { Subscriber } from '../Subscriber';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport class TimerObservable extends Observable<number> {\n\n  /**\n   * Creates an Observable that starts emitting after an `initialDelay` and\n   * emits ever increasing numbers after each `period` of time thereafter.\n   *\n   * <span class=\"informal\">Its like {@link interval}, but you can specify when\n   * should the emissions start.</span>\n   *\n   * <img src=\"./img/timer.png\" width=\"100%\">\n   *\n   * `timer` returns an Observable that emits an infinite sequence of ascending\n   * integers, with a constant interval of time, `period` of your choosing\n   * between those emissions. The first emission happens after the specified\n   * `initialDelay`. The initial delay may be a {@link Date}. By default, this\n   * operator uses the `async` IScheduler to provide a notion of time, but you\n   * may pass any IScheduler to it. If `period` is not specified, the output\n   * Observable emits only one value, `0`. Otherwise, it emits an infinite\n   * sequence.\n   *\n   * @example <caption>Emits ascending numbers, one every second (1000ms), starting after 3 seconds</caption>\n   * var numbers = Rx.Observable.timer(3000, 1000);\n   * numbers.subscribe(x => console.log(x));\n   *\n   * @example <caption>Emits one number after five seconds</caption>\n   * var numbers = Rx.Observable.timer(5000);\n   * numbers.subscribe(x => console.log(x));\n   *\n   * @see {@link interval}\n   * @see {@link delay}\n   *\n   * @param {number|Date} initialDelay The initial delay time to wait before\n   * emitting the first value of `0`.\n   * @param {number} [period] The period of time between emissions of the\n   * subsequent numbers.\n   * @param {Scheduler} [scheduler=async] The IScheduler to use for scheduling\n   * the emission of values, and providing a notion of \"time\".\n   * @return {Observable} An Observable that emits a `0` after the\n   * `initialDelay` and ever increasing numbers after each `period` of time\n   * thereafter.\n   * @static true\n   * @name timer\n   * @owner Observable\n   */\n  static create(initialDelay: number | Date = 0,\n                period?: number | IScheduler,\n                scheduler?: IScheduler): Observable<number> {\n    return new TimerObservable(initialDelay, period, scheduler);\n  }\n\n  static dispatch(state: any) {\n\n    const { index, period, subscriber } = state;\n    const action = (<any> this);\n\n    subscriber.next(index);\n\n    if (subscriber.closed) {\n      return;\n    } else if (period === -1) {\n      return subscriber.complete();\n    }\n\n    state.index = index + 1;\n    action.schedule(state, period);\n  }\n\n  private period: number = -1;\n  private dueTime: number = 0;\n  private scheduler: IScheduler;\n\n  constructor(dueTime: number | Date = 0,\n              period?: number | IScheduler,\n              scheduler?: IScheduler) {\n    super();\n\n    if (isNumeric(period)) {\n      this.period = Number(period) < 1 && 1 || Number(period);\n    } else if (isScheduler(period)) {\n      scheduler = <IScheduler> period;\n    }\n\n    if (!isScheduler(scheduler)) {\n      scheduler = async;\n    }\n\n    this.scheduler = scheduler;\n    this.dueTime = isDate(dueTime) ?\n      (+dueTime - this.scheduler.now()) :\n      (<number> dueTime);\n  }\n\n  /** @deprecated internal use only */ _subscribe(subscriber: Subscriber<number>): TeardownLogic {\n    const index = 0;\n    const { period, dueTime, scheduler } = this;\n\n    return scheduler.schedule(TimerObservable.dispatch, dueTime, {\n      index, period, subscriber\n    });\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OperatorFunction } from '../interfaces';\n\n/**\n * Buffers the source Observable values until `closingNotifier` emits.\n *\n * <span class=\"informal\">Collects values from the past as an array, and emits\n * that array only when another Observable emits.</span>\n *\n * <img src=\"./img/buffer.png\" width=\"100%\">\n *\n * Buffers the incoming Observable values until the given `closingNotifier`\n * Observable emits a value, at which point it emits the buffer on the output\n * Observable and starts a new buffer internally, awaiting the next time\n * `closingNotifier` emits.\n *\n * @example <caption>On every click, emit array of most recent interval events</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var interval = Rx.Observable.interval(1000);\n * var buffered = interval.buffer(clicks);\n * buffered.subscribe(x => console.log(x));\n *\n * @see {@link bufferCount}\n * @see {@link bufferTime}\n * @see {@link bufferToggle}\n * @see {@link bufferWhen}\n * @see {@link window}\n *\n * @param {Observable<any>} closingNotifier An Observable that signals the\n * buffer to be emitted on the output Observable.\n * @return {Observable<T[]>} An Observable of buffers, which are arrays of\n * values.\n * @method buffer\n * @owner Observable\n */\nexport function buffer<T>(closingNotifier: Observable<any>): OperatorFunction<T, T[]> {\n  return function bufferOperatorFunction(source: Observable<T>) {\n    return source.lift(new BufferOperator<T>(closingNotifier));\n  };\n}\n\nclass BufferOperator<T> implements Operator<T, T[]> {\n\n  constructor(private closingNotifier: Observable<any>) {\n  }\n\n  call(subscriber: Subscriber<T[]>, source: any): any {\n    return source.subscribe(new BufferSubscriber(subscriber, this.closingNotifier));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass BufferSubscriber<T> extends OuterSubscriber<T, any> {\n  private buffer: T[] = [];\n\n  constructor(destination: Subscriber<T[]>, closingNotifier: Observable<any>) {\n    super(destination);\n    this.add(subscribeToResult(this, closingNotifier));\n  }\n\n  protected _next(value: T) {\n    this.buffer.push(value);\n  }\n\n  notifyNext(outerValue: T, innerValue: any,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, any>): void {\n    const buffer = this.buffer;\n    this.buffer = [];\n    this.destination.next(buffer);\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { TeardownLogic } from '../Subscription';\nimport { OperatorFunction } from '../interfaces';\n\n/**\n * Buffers the source Observable values until the size hits the maximum\n * `bufferSize` given.\n *\n * <span class=\"informal\">Collects values from the past as an array, and emits\n * that array only when its size reaches `bufferSize`.</span>\n *\n * <img src=\"./img/bufferCount.png\" width=\"100%\">\n *\n * Buffers a number of values from the source Observable by `bufferSize` then\n * emits the buffer and clears it, and starts a new buffer each\n * `startBufferEvery` values. If `startBufferEvery` is not provided or is\n * `null`, then new buffers are started immediately at the start of the source\n * and when each buffer closes and is emitted.\n *\n * @example <caption>Emit the last two click events as an array</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var buffered = clicks.bufferCount(2);\n * buffered.subscribe(x => console.log(x));\n *\n * @example <caption>On every click, emit the last two click events as an array</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var buffered = clicks.bufferCount(2, 1);\n * buffered.subscribe(x => console.log(x));\n *\n * @see {@link buffer}\n * @see {@link bufferTime}\n * @see {@link bufferToggle}\n * @see {@link bufferWhen}\n * @see {@link pairwise}\n * @see {@link windowCount}\n *\n * @param {number} bufferSize The maximum size of the buffer emitted.\n * @param {number} [startBufferEvery] Interval at which to start a new buffer.\n * For example if `startBufferEvery` is `2`, then a new buffer will be started\n * on every other value from the source. A new buffer is started at the\n * beginning of the source by default.\n * @return {Observable<T[]>} An Observable of arrays of buffered values.\n * @method bufferCount\n * @owner Observable\n */\nexport function bufferCount<T>(bufferSize: number, startBufferEvery: number = null): OperatorFunction<T, T[]> {\n  return function bufferCountOperatorFunction(source: Observable<T>) {\n    return source.lift(new BufferCountOperator<T>(bufferSize, startBufferEvery));\n  };\n}\n\nclass BufferCountOperator<T> implements Operator<T, T[]> {\n  private subscriberClass: any;\n\n  constructor(private bufferSize: number, private startBufferEvery: number) {\n    if (!startBufferEvery || bufferSize === startBufferEvery) {\n      this.subscriberClass = BufferCountSubscriber;\n    } else {\n      this.subscriberClass = BufferSkipCountSubscriber;\n    }\n  }\n\n  call(subscriber: Subscriber<T[]>, source: any): TeardownLogic {\n    return source.subscribe(new this.subscriberClass(subscriber, this.bufferSize, this.startBufferEvery));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass BufferCountSubscriber<T> extends Subscriber<T> {\n  private buffer: T[] = [];\n\n  constructor(destination: Subscriber<T[]>, private bufferSize: number) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    const buffer = this.buffer;\n\n    buffer.push(value);\n\n    if (buffer.length == this.bufferSize) {\n      this.destination.next(buffer);\n      this.buffer = [];\n    }\n  }\n\n  protected _complete(): void {\n    const buffer = this.buffer;\n    if (buffer.length > 0) {\n      this.destination.next(buffer);\n    }\n    super._complete();\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass BufferSkipCountSubscriber<T> extends Subscriber<T> {\n  private buffers: Array<T[]> = [];\n  private count: number = 0;\n\n  constructor(destination: Subscriber<T[]>, private bufferSize: number, private startBufferEvery: number) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    const { bufferSize, startBufferEvery, buffers, count } = this;\n\n    this.count++;\n    if (count % startBufferEvery === 0) {\n      buffers.push([]);\n    }\n\n    for (let i = buffers.length; i--; ) {\n      const buffer = buffers[i];\n      buffer.push(value);\n      if (buffer.length === bufferSize) {\n        buffers.splice(i, 1);\n        this.destination.next(buffer);\n      }\n    }\n  }\n\n  protected _complete(): void {\n    const { buffers, destination } = this;\n\n    while (buffers.length > 0) {\n      let buffer = buffers.shift();\n      if (buffer.length > 0) {\n        destination.next(buffer);\n      }\n    }\n    super._complete();\n  }\n\n}\n","import { IScheduler } from '../Scheduler';\nimport { Action } from '../scheduler/Action';\nimport { Operator } from '../Operator';\nimport { async } from '../scheduler/async';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { isScheduler } from '../util/isScheduler';\nimport { OperatorFunction } from '../interfaces';\n\n/* tslint:disable:max-line-length */\nexport function bufferTime<T>(bufferTimeSpan: number, scheduler?: IScheduler): OperatorFunction<T, T[]>;\nexport function bufferTime<T>(bufferTimeSpan: number, bufferCreationInterval: number, scheduler?: IScheduler): OperatorFunction<T, T[]>;\nexport function bufferTime<T>(bufferTimeSpan: number, bufferCreationInterval: number, maxBufferSize: number, scheduler?: IScheduler): OperatorFunction<T, T[]>;\n/* tslint:enable:max-line-length */\n\n/**\n * Buffers the source Observable values for a specific time period.\n *\n * <span class=\"informal\">Collects values from the past as an array, and emits\n * those arrays periodically in time.</span>\n *\n * <img src=\"./img/bufferTime.png\" width=\"100%\">\n *\n * Buffers values from the source for a specific time duration `bufferTimeSpan`.\n * Unless the optional argument `bufferCreationInterval` is given, it emits and\n * resets the buffer every `bufferTimeSpan` milliseconds. If\n * `bufferCreationInterval` is given, this operator opens the buffer every\n * `bufferCreationInterval` milliseconds and closes (emits and resets) the\n * buffer every `bufferTimeSpan` milliseconds. When the optional argument\n * `maxBufferSize` is specified, the buffer will be closed either after\n * `bufferTimeSpan` milliseconds or when it contains `maxBufferSize` elements.\n *\n * @example <caption>Every second, emit an array of the recent click events</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var buffered = clicks.bufferTime(1000);\n * buffered.subscribe(x => console.log(x));\n *\n * @example <caption>Every 5 seconds, emit the click events from the next 2 seconds</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var buffered = clicks.bufferTime(2000, 5000);\n * buffered.subscribe(x => console.log(x));\n *\n * @see {@link buffer}\n * @see {@link bufferCount}\n * @see {@link bufferToggle}\n * @see {@link bufferWhen}\n * @see {@link windowTime}\n *\n * @param {number} bufferTimeSpan The amount of time to fill each buffer array.\n * @param {number} [bufferCreationInterval] The interval at which to start new\n * buffers.\n * @param {number} [maxBufferSize] The maximum buffer size.\n * @param {Scheduler} [scheduler=async] The scheduler on which to schedule the\n * intervals that determine buffer boundaries.\n * @return {Observable<T[]>} An observable of arrays of buffered values.\n * @method bufferTime\n * @owner Observable\n */\nexport function bufferTime<T>(bufferTimeSpan: number): OperatorFunction<T, T[]> {\n  let length: number = arguments.length;\n\n  let scheduler: IScheduler = async;\n  if (isScheduler(arguments[arguments.length - 1])) {\n    scheduler = arguments[arguments.length - 1];\n    length--;\n  }\n\n  let bufferCreationInterval: number = null;\n  if (length >= 2) {\n    bufferCreationInterval = arguments[1];\n  }\n\n  let maxBufferSize: number = Number.POSITIVE_INFINITY;\n  if (length >= 3) {\n    maxBufferSize = arguments[2];\n  }\n\n  return function bufferTimeOperatorFunction(source: Observable<T>) {\n    return source.lift(new BufferTimeOperator<T>(bufferTimeSpan, bufferCreationInterval, maxBufferSize, scheduler));\n  };\n}\n\nclass BufferTimeOperator<T> implements Operator<T, T[]> {\n  constructor(private bufferTimeSpan: number,\n              private bufferCreationInterval: number,\n              private maxBufferSize: number,\n              private scheduler: IScheduler) {\n  }\n\n  call(subscriber: Subscriber<T[]>, source: any): any {\n    return source.subscribe(new BufferTimeSubscriber(\n      subscriber, this.bufferTimeSpan, this.bufferCreationInterval, this.maxBufferSize, this.scheduler\n    ));\n  }\n}\n\nclass Context<T> {\n  buffer: T[] = [];\n  closeAction: Subscription;\n}\n\ntype CreationState<T> = {\n  bufferTimeSpan: number;\n  bufferCreationInterval: number,\n  subscriber: BufferTimeSubscriber<T>;\n  scheduler: IScheduler;\n};\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass BufferTimeSubscriber<T> extends Subscriber<T> {\n  private contexts: Array<Context<T>> = [];\n  private timespanOnly: boolean;\n\n  constructor(destination: Subscriber<T[]>,\n              private bufferTimeSpan: number,\n              private bufferCreationInterval: number,\n              private maxBufferSize: number,\n              private scheduler: IScheduler) {\n    super(destination);\n    const context = this.openContext();\n    this.timespanOnly = bufferCreationInterval == null || bufferCreationInterval < 0;\n    if (this.timespanOnly) {\n      const timeSpanOnlyState = { subscriber: this, context, bufferTimeSpan };\n      this.add(context.closeAction = scheduler.schedule(dispatchBufferTimeSpanOnly, bufferTimeSpan, timeSpanOnlyState));\n    } else {\n      const closeState = { subscriber: this, context };\n      const creationState: CreationState<T> = { bufferTimeSpan, bufferCreationInterval, subscriber: this, scheduler };\n      this.add(context.closeAction = scheduler.schedule(dispatchBufferClose, bufferTimeSpan, closeState));\n      this.add(scheduler.schedule(dispatchBufferCreation, bufferCreationInterval, creationState));\n    }\n  }\n\n  protected _next(value: T) {\n    const contexts = this.contexts;\n    const len = contexts.length;\n    let filledBufferContext: Context<T>;\n    for (let i = 0; i < len; i++) {\n      const context = contexts[i];\n      const buffer = context.buffer;\n      buffer.push(value);\n      if (buffer.length == this.maxBufferSize) {\n        filledBufferContext = context;\n      }\n    }\n\n    if (filledBufferContext) {\n      this.onBufferFull(filledBufferContext);\n    }\n  }\n\n  protected _error(err: any) {\n    this.contexts.length = 0;\n    super._error(err);\n  }\n\n  protected _complete() {\n    const { contexts, destination } = this;\n    while (contexts.length > 0) {\n      const context = contexts.shift();\n      destination.next(context.buffer);\n    }\n    super._complete();\n  }\n\n  /** @deprecated internal use only */ _unsubscribe() {\n    this.contexts = null;\n  }\n\n  protected onBufferFull(context: Context<T>) {\n    this.closeContext(context);\n    const closeAction = context.closeAction;\n    closeAction.unsubscribe();\n    this.remove(closeAction);\n\n    if (!this.closed && this.timespanOnly) {\n      context = this.openContext();\n      const bufferTimeSpan = this.bufferTimeSpan;\n      const timeSpanOnlyState = { subscriber: this, context, bufferTimeSpan };\n      this.add(context.closeAction = this.scheduler.schedule(dispatchBufferTimeSpanOnly, bufferTimeSpan, timeSpanOnlyState));\n    }\n  }\n\n  openContext(): Context<T> {\n    const context: Context<T> = new Context<T>();\n    this.contexts.push(context);\n    return context;\n  }\n\n  closeContext(context: Context<T>) {\n    this.destination.next(context.buffer);\n    const contexts = this.contexts;\n\n    const spliceIndex = contexts ? contexts.indexOf(context) : -1;\n    if (spliceIndex >= 0) {\n      contexts.splice(contexts.indexOf(context), 1);\n    }\n  }\n}\n\nfunction dispatchBufferTimeSpanOnly(this: Action<any>, state: any) {\n  const subscriber: BufferTimeSubscriber<any> = state.subscriber;\n\n  const prevContext = state.context;\n  if (prevContext) {\n    subscriber.closeContext(prevContext);\n  }\n\n  if (!subscriber.closed) {\n    state.context = subscriber.openContext();\n    state.context.closeAction = this.schedule(state, state.bufferTimeSpan);\n  }\n}\n\ninterface DispatchArg<T> {\n  subscriber: BufferTimeSubscriber<T>;\n  context: Context<T>;\n}\n\nfunction dispatchBufferCreation<T>(this: Action<CreationState<T>>, state: CreationState<T>) {\n  const { bufferCreationInterval, bufferTimeSpan, subscriber, scheduler } = state;\n  const context = subscriber.openContext();\n  const action = <Action<CreationState<T>>>this;\n  if (!subscriber.closed) {\n    subscriber.add(context.closeAction = scheduler.schedule<DispatchArg<T>>(dispatchBufferClose, bufferTimeSpan, { subscriber, context }));\n    action.schedule(state, bufferCreationInterval);\n  }\n}\n\nfunction dispatchBufferClose<T>(arg: DispatchArg<T>) {\n  const { subscriber, context } = arg;\n  subscriber.closeContext(context);\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable, SubscribableOrPromise } from '../Observable';\nimport { Subscription } from '../Subscription';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { OperatorFunction } from '../interfaces';\n\n/**\n * Buffers the source Observable values starting from an emission from\n * `openings` and ending when the output of `closingSelector` emits.\n *\n * <span class=\"informal\">Collects values from the past as an array. Starts\n * collecting only when `opening` emits, and calls the `closingSelector`\n * function to get an Observable that tells when to close the buffer.</span>\n *\n * <img src=\"./img/bufferToggle.png\" width=\"100%\">\n *\n * Buffers values from the source by opening the buffer via signals from an\n * Observable provided to `openings`, and closing and sending the buffers when\n * a Subscribable or Promise returned by the `closingSelector` function emits.\n *\n * @example <caption>Every other second, emit the click events from the next 500ms</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var openings = Rx.Observable.interval(1000);\n * var buffered = clicks.bufferToggle(openings, i =>\n *   i % 2 ? Rx.Observable.interval(500) : Rx.Observable.empty()\n * );\n * buffered.subscribe(x => console.log(x));\n *\n * @see {@link buffer}\n * @see {@link bufferCount}\n * @see {@link bufferTime}\n * @see {@link bufferWhen}\n * @see {@link windowToggle}\n *\n * @param {SubscribableOrPromise<O>} openings A Subscribable or Promise of notifications to start new\n * buffers.\n * @param {function(value: O): SubscribableOrPromise} closingSelector A function that takes\n * the value emitted by the `openings` observable and returns a Subscribable or Promise,\n * which, when it emits, signals that the associated buffer should be emitted\n * and cleared.\n * @return {Observable<T[]>} An observable of arrays of buffered values.\n * @method bufferToggle\n * @owner Observable\n */\nexport function bufferToggle<T, O>(\n  openings: SubscribableOrPromise<O>,\n  closingSelector: (value: O) => SubscribableOrPromise<any>\n): OperatorFunction<T, T[]> {\n  return function bufferToggleOperatorFunction(source: Observable<T>) {\n    return source.lift(new BufferToggleOperator<T, O>(openings, closingSelector));\n  };\n}\n\nclass BufferToggleOperator<T, O> implements Operator<T, T[]> {\n\n  constructor(private openings: SubscribableOrPromise<O>,\n              private closingSelector: (value: O) => SubscribableOrPromise<any>) {\n  }\n\n  call(subscriber: Subscriber<T[]>, source: any): any {\n    return source.subscribe(new BufferToggleSubscriber(subscriber, this.openings, this.closingSelector));\n  }\n}\n\ninterface BufferContext<T> {\n  buffer: T[];\n  subscription: Subscription;\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass BufferToggleSubscriber<T, O> extends OuterSubscriber<T, O> {\n  private contexts: Array<BufferContext<T>> = [];\n\n  constructor(destination: Subscriber<T[]>,\n              private openings: SubscribableOrPromise<O>,\n              private closingSelector: (value: O) => SubscribableOrPromise<any> | void) {\n    super(destination);\n    this.add(subscribeToResult(this, openings));\n  }\n\n  protected _next(value: T): void {\n    const contexts = this.contexts;\n    const len = contexts.length;\n    for (let i = 0; i < len; i++) {\n      contexts[i].buffer.push(value);\n    }\n  }\n\n  protected _error(err: any): void {\n    const contexts = this.contexts;\n    while (contexts.length > 0) {\n      const context = contexts.shift();\n      context.subscription.unsubscribe();\n      context.buffer = null;\n      context.subscription = null;\n    }\n    this.contexts = null;\n    super._error(err);\n  }\n\n  protected _complete(): void {\n    const contexts = this.contexts;\n    while (contexts.length > 0) {\n      const context = contexts.shift();\n      this.destination.next(context.buffer);\n      context.subscription.unsubscribe();\n      context.buffer = null;\n      context.subscription = null;\n    }\n    this.contexts = null;\n    super._complete();\n  }\n\n  notifyNext(outerValue: any, innerValue: O,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, O>): void {\n    outerValue ? this.closeBuffer(outerValue) : this.openBuffer(innerValue);\n  }\n\n  notifyComplete(innerSub: InnerSubscriber<T, O>): void {\n    this.closeBuffer((<any> innerSub).context);\n  }\n\n  private openBuffer(value: O): void {\n    try {\n      const closingSelector = this.closingSelector;\n      const closingNotifier = closingSelector.call(this, value);\n      if (closingNotifier) {\n        this.trySubscribe(closingNotifier);\n      }\n    } catch (err) {\n      this._error(err);\n    }\n  }\n\n  private closeBuffer(context: BufferContext<T>): void {\n    const contexts = this.contexts;\n\n    if (contexts && context) {\n      const { buffer, subscription } = context;\n      this.destination.next(buffer);\n      contexts.splice(contexts.indexOf(context), 1);\n      this.remove(subscription);\n      subscription.unsubscribe();\n    }\n  }\n\n  private trySubscribe(closingNotifier: any): void {\n    const contexts = this.contexts;\n\n    const buffer: Array<T> = [];\n    const subscription = new Subscription();\n    const context = { buffer, subscription };\n    contexts.push(context);\n\n    const innerSubscription = subscribeToResult(this, closingNotifier, <any>context);\n\n    if (!innerSubscription || innerSubscription.closed) {\n      this.closeBuffer(context);\n    } else {\n      (<any> innerSubscription).context = context;\n\n      this.add(innerSubscription);\n      subscription.add(innerSubscription);\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { Subscription } from '../Subscription';\nimport { tryCatch } from '../util/tryCatch';\nimport { errorObject } from '../util/errorObject';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OperatorFunction } from '../interfaces';\n\n/**\n * Buffers the source Observable values, using a factory function of closing\n * Observables to determine when to close, emit, and reset the buffer.\n *\n * <span class=\"informal\">Collects values from the past as an array. When it\n * starts collecting values, it calls a function that returns an Observable that\n * tells when to close the buffer and restart collecting.</span>\n *\n * <img src=\"./img/bufferWhen.png\" width=\"100%\">\n *\n * Opens a buffer immediately, then closes the buffer when the observable\n * returned by calling `closingSelector` function emits a value. When it closes\n * the buffer, it immediately opens a new buffer and repeats the process.\n *\n * @example <caption>Emit an array of the last clicks every [1-5] random seconds</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var buffered = clicks.bufferWhen(() =>\n *   Rx.Observable.interval(1000 + Math.random() * 4000)\n * );\n * buffered.subscribe(x => console.log(x));\n *\n * @see {@link buffer}\n * @see {@link bufferCount}\n * @see {@link bufferTime}\n * @see {@link bufferToggle}\n * @see {@link windowWhen}\n *\n * @param {function(): Observable} closingSelector A function that takes no\n * arguments and returns an Observable that signals buffer closure.\n * @return {Observable<T[]>} An observable of arrays of buffered values.\n * @method bufferWhen\n * @owner Observable\n */\nexport function bufferWhen<T>(closingSelector: () => Observable<any>): OperatorFunction<T, T[]> {\n  return function (source: Observable<T>) {\n    return source.lift(new BufferWhenOperator(closingSelector));\n  };\n}\n\nclass BufferWhenOperator<T> implements Operator<T, T[]> {\n\n  constructor(private closingSelector: () => Observable<any>) {\n  }\n\n  call(subscriber: Subscriber<T[]>, source: any): any {\n    return source.subscribe(new BufferWhenSubscriber(subscriber, this.closingSelector));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass BufferWhenSubscriber<T> extends OuterSubscriber<T, any> {\n  private buffer: T[];\n  private subscribing: boolean = false;\n  private closingSubscription: Subscription;\n\n  constructor(destination: Subscriber<T[]>, private closingSelector: () => Observable<any>) {\n    super(destination);\n    this.openBuffer();\n  }\n\n  protected _next(value: T) {\n    this.buffer.push(value);\n  }\n\n  protected _complete() {\n    const buffer = this.buffer;\n    if (buffer) {\n      this.destination.next(buffer);\n    }\n    super._complete();\n  }\n\n  /** @deprecated internal use only */ _unsubscribe() {\n    this.buffer = null;\n    this.subscribing = false;\n  }\n\n  notifyNext(outerValue: T, innerValue: any,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, any>): void {\n    this.openBuffer();\n  }\n\n  notifyComplete(): void {\n    if (this.subscribing) {\n      this.complete();\n    } else {\n      this.openBuffer();\n    }\n  }\n\n  openBuffer() {\n\n    let { closingSubscription } = this;\n\n    if (closingSubscription) {\n      this.remove(closingSubscription);\n      closingSubscription.unsubscribe();\n    }\n\n    const buffer = this.buffer;\n    if (this.buffer) {\n      this.destination.next(buffer);\n    }\n\n    this.buffer = [];\n\n    const closingNotifier = tryCatch(this.closingSelector)();\n\n    if (closingNotifier === errorObject) {\n      this.error(errorObject.e);\n    } else {\n      closingSubscription = new Subscription();\n      this.closingSubscription = closingSubscription;\n      this.add(closingSubscription);\n      this.subscribing = true;\n      closingSubscription.add(subscribeToResult(this, closingNotifier));\n      this.subscribing = false;\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable, ObservableInput } from '../Observable';\n\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OperatorFunction } from '../interfaces';\n\n/**\n * Catches errors on the observable to be handled by returning a new observable or throwing an error.\n *\n * <img src=\"./img/catch.png\" width=\"100%\">\n *\n * @example <caption>Continues with a different Observable when there's an error</caption>\n *\n * Observable.of(1, 2, 3, 4, 5)\n *   .map(n => {\n * \t   if (n == 4) {\n * \t     throw 'four!';\n *     }\n *\t   return n;\n *   })\n *   .catch(err => Observable.of('I', 'II', 'III', 'IV', 'V'))\n *   .subscribe(x => console.log(x));\n *   // 1, 2, 3, I, II, III, IV, V\n *\n * @example <caption>Retries the caught source Observable again in case of error, similar to retry() operator</caption>\n *\n * Observable.of(1, 2, 3, 4, 5)\n *   .map(n => {\n * \t   if (n === 4) {\n * \t     throw 'four!';\n *     }\n * \t   return n;\n *   })\n *   .catch((err, caught) => caught)\n *   .take(30)\n *   .subscribe(x => console.log(x));\n *   // 1, 2, 3, 1, 2, 3, ...\n *\n * @example <caption>Throws a new error when the source Observable throws an error</caption>\n *\n * Observable.of(1, 2, 3, 4, 5)\n *   .map(n => {\n *     if (n == 4) {\n *       throw 'four!';\n *     }\n *     return n;\n *   })\n *   .catch(err => {\n *     throw 'error in source. Details: ' + err;\n *   })\n *   .subscribe(\n *     x => console.log(x),\n *     err => console.log(err)\n *   );\n *   // 1, 2, 3, error in source. Details: four!\n *\n * @param {function} selector a function that takes as arguments `err`, which is the error, and `caught`, which\n *  is the source observable, in case you'd like to \"retry\" that observable by returning it again. Whatever observable\n *  is returned by the `selector` will be used to continue the observable chain.\n * @return {Observable} An observable that originates from either the source or the observable returned by the\n *  catch `selector` function.\n * @name catchError\n */\nexport function catchError<T, R>(selector: (err: any, caught: Observable<T>) => ObservableInput<R>): OperatorFunction<T, T | R> {\n  return function catchErrorOperatorFunction(source: Observable<T>): Observable<T | R> {\n    const operator = new CatchOperator(selector);\n    const caught = source.lift(operator);\n    return (operator.caught = caught as Observable<T>);\n  };\n}\n\nclass CatchOperator<T, R> implements Operator<T, T | R> {\n  caught: Observable<T>;\n\n  constructor(private selector: (err: any, caught: Observable<T>) => ObservableInput<T | R>) {\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new CatchSubscriber(subscriber, this.selector, this.caught));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass CatchSubscriber<T, R> extends OuterSubscriber<T, T | R> {\n  constructor(destination: Subscriber<any>,\n              private selector: (err: any, caught: Observable<T>) => ObservableInput<T | R>,\n              private caught: Observable<T>) {\n    super(destination);\n  }\n\n  // NOTE: overriding `error` instead of `_error` because we don't want\n  // to have this flag this subscriber as `isStopped`. We can mimic the\n  // behavior of the RetrySubscriber (from the `retry` operator), where\n  // we unsubscribe from our source chain, reset our Subscriber flags,\n  // then subscribe to the selector result.\n  error(err: any) {\n    if (!this.isStopped) {\n      let result: any;\n      try {\n        result = this.selector(err, this.caught);\n      } catch (err2) {\n        super.error(err2);\n        return;\n      }\n      this._unsubscribeAndRecycle();\n      this.add(subscribeToResult(this, result));\n    }\n  }\n}\n","import { IScheduler } from '../Scheduler';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { TeardownLogic } from '../Subscription';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport class ScalarObservable<T> extends Observable<T> {\n  static create<T>(value: T, scheduler?: IScheduler): ScalarObservable<T> {\n    return new ScalarObservable(value, scheduler);\n  }\n\n  static dispatch(state: any): void {\n    const { done, value, subscriber } = state;\n\n    if (done) {\n      subscriber.complete();\n      return;\n    }\n\n    subscriber.next(value);\n    if (subscriber.closed) {\n      return;\n    }\n\n    state.done = true;\n    (<any> this).schedule(state);\n  }\n\n  _isScalar: boolean = true;\n\n  constructor(public value: T, private scheduler?: IScheduler) {\n    super();\n    if (scheduler) {\n      this._isScalar = false;\n    }\n  }\n\n  /** @deprecated internal use only */ _subscribe(subscriber: Subscriber<T>): TeardownLogic {\n    const value = this.value;\n    const scheduler = this.scheduler;\n\n    if (scheduler) {\n      return scheduler.schedule(ScalarObservable.dispatch, 0, {\n        done: false, value, subscriber\n      });\n    } else {\n      subscriber.next(value);\n      if (!subscriber.closed) {\n        subscriber.complete();\n      }\n    }\n  }\n}\n","import { IScheduler } from '../Scheduler';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { TeardownLogic } from '../Subscription';\n\nexport interface DispatchArg<T> {\n  subscriber: Subscriber<T>;\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport class EmptyObservable<T> extends Observable<T> {\n\n  /**\n   * Creates an Observable that emits no items to the Observer and immediately\n   * emits a complete notification.\n   *\n   * <span class=\"informal\">Just emits 'complete', and nothing else.\n   * </span>\n   *\n   * <img src=\"./img/empty.png\" width=\"100%\">\n   *\n   * This static operator is useful for creating a simple Observable that only\n   * emits the complete notification. It can be used for composing with other\n   * Observables, such as in a {@link mergeMap}.\n   *\n   * @example <caption>Emit the number 7, then complete.</caption>\n   * var result = Rx.Observable.empty().startWith(7);\n   * result.subscribe(x => console.log(x));\n   *\n   * @example <caption>Map and flatten only odd numbers to the sequence 'a', 'b', 'c'</caption>\n   * var interval = Rx.Observable.interval(1000);\n   * var result = interval.mergeMap(x =>\n   *   x % 2 === 1 ? Rx.Observable.of('a', 'b', 'c') : Rx.Observable.empty()\n   * );\n   * result.subscribe(x => console.log(x));\n   *\n   * // Results in the following to the console:\n   * // x is equal to the count on the interval eg(0,1,2,3,...)\n   * // x will occur every 1000ms\n   * // if x % 2 is equal to 1 print abc\n   * // if x % 2 is not equal to 1 nothing will be output\n   *\n   * @see {@link create}\n   * @see {@link never}\n   * @see {@link of}\n   * @see {@link throw}\n   *\n   * @param {Scheduler} [scheduler] A {@link IScheduler} to use for scheduling\n   * the emission of the complete notification.\n   * @return {Observable} An \"empty\" Observable: emits only the complete\n   * notification.\n   * @static true\n   * @name empty\n   * @owner Observable\n   */\n  static create<T>(scheduler?: IScheduler): Observable<T> {\n    return new EmptyObservable<T>(scheduler);\n  }\n\n  static dispatch<T>(arg: DispatchArg<T>) {\n    const { subscriber } = arg;\n    subscriber.complete();\n  }\n\n  constructor(private scheduler?: IScheduler) {\n    super();\n  }\n\n  /** @deprecated internal use only */ _subscribe(subscriber: Subscriber<T>): TeardownLogic {\n\n    const scheduler = this.scheduler;\n\n    if (scheduler) {\n      return scheduler.schedule(EmptyObservable.dispatch, 0, { subscriber });\n    } else {\n      subscriber.complete();\n    }\n  }\n}\n","import { IScheduler } from '../Scheduler';\nimport { Observable } from '../Observable';\nimport { ScalarObservable } from './ScalarObservable';\nimport { EmptyObservable } from './EmptyObservable';\nimport { Subscriber } from '../Subscriber';\nimport { isScheduler } from '../util/isScheduler';\nimport { TeardownLogic } from '../Subscription';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport class ArrayObservable<T> extends Observable<T> {\n\n  static create<T>(array: T[], scheduler?: IScheduler): Observable<T> {\n    return new ArrayObservable(array, scheduler);\n  }\n\n  static of<T>(item1: T, scheduler?: IScheduler): Observable<T>;\n  static of<T>(item1: T, item2: T, scheduler?: IScheduler): Observable<T>;\n  static of<T>(item1: T, item2: T, item3: T, scheduler?: IScheduler): Observable<T>;\n  static of<T>(item1: T, item2: T, item3: T, item4: T, scheduler?: IScheduler): Observable<T>;\n  static of<T>(item1: T, item2: T, item3: T, item4: T, item5: T, scheduler?: IScheduler): Observable<T>;\n  static of<T>(item1: T, item2: T, item3: T, item4: T, item5: T, item6: T, scheduler?: IScheduler): Observable<T>;\n  static of<T>(...array: Array<T | IScheduler>): Observable<T>;\n  /**\n   * Creates an Observable that emits some values you specify as arguments,\n   * immediately one after the other, and then emits a complete notification.\n   *\n   * <span class=\"informal\">Emits the arguments you provide, then completes.\n   * </span>\n   *\n   * <img src=\"./img/of.png\" width=\"100%\">\n   *\n   * This static operator is useful for creating a simple Observable that only\n   * emits the arguments given, and the complete notification thereafter. It can\n   * be used for composing with other Observables, such as with {@link concat}.\n   * By default, it uses a `null` IScheduler, which means the `next`\n   * notifications are sent synchronously, although with a different IScheduler\n   * it is possible to determine when those notifications will be delivered.\n   *\n   * @example <caption>Emit 10, 20, 30, then 'a', 'b', 'c', then start ticking every second.</caption>\n   * var numbers = Rx.Observable.of(10, 20, 30);\n   * var letters = Rx.Observable.of('a', 'b', 'c');\n   * var interval = Rx.Observable.interval(1000);\n   * var result = numbers.concat(letters).concat(interval);\n   * result.subscribe(x => console.log(x));\n   *\n   * @see {@link create}\n   * @see {@link empty}\n   * @see {@link never}\n   * @see {@link throw}\n   *\n   * @param {...T} values Arguments that represent `next` values to be emitted.\n   * @param {Scheduler} [scheduler] A {@link IScheduler} to use for scheduling\n   * the emissions of the `next` notifications.\n   * @return {Observable<T>} An Observable that emits each given input value.\n   * @static true\n   * @name of\n   * @owner Observable\n   */\n  static of<T>(...array: Array<T | IScheduler>): Observable<T> {\n    let scheduler = <IScheduler>array[array.length - 1];\n    if (isScheduler(scheduler)) {\n      array.pop();\n    } else {\n      scheduler = null;\n    }\n\n    const len = array.length;\n    if (len > 1) {\n      return new ArrayObservable<T>(<any>array, scheduler);\n    } else if (len === 1) {\n      return new ScalarObservable<T>(<any>array[0], scheduler);\n    } else {\n      return new EmptyObservable<T>(scheduler);\n    }\n  }\n\n  static dispatch(state: any) {\n\n    const { array, index, count, subscriber } = state;\n\n    if (index >= count) {\n      subscriber.complete();\n      return;\n    }\n\n    subscriber.next(array[index]);\n\n    if (subscriber.closed) {\n      return;\n    }\n\n    state.index = index + 1;\n\n    (<any> this).schedule(state);\n  }\n\n  // value used if Array has one value and _isScalar\n  value: any;\n\n  constructor(private array: T[], private scheduler?: IScheduler) {\n    super();\n    if (!scheduler && array.length === 1) {\n      this._isScalar = true;\n      this.value = array[0];\n    }\n  }\n\n  /** @deprecated internal use only */ _subscribe(subscriber: Subscriber<T>): TeardownLogic {\n    let index = 0;\n    const array = this.array;\n    const count = array.length;\n    const scheduler = this.scheduler;\n\n    if (scheduler) {\n      return scheduler.schedule(ArrayObservable.dispatch, 0, {\n        array, index, count, subscriber\n      });\n    } else {\n      for (let i = 0; i < count && !subscriber.closed; i++) {\n        subscriber.next(array[i]);\n      }\n      subscriber.complete();\n    }\n  }\n}\n","import { Observable, ObservableInput } from '../Observable';\nimport { ArrayObservable } from '../observable/ArrayObservable';\nimport { isArray } from '../util/isArray';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OperatorFunction } from '../interfaces';\n\nconst none = {};\n\n/* tslint:disable:max-line-length */\nexport function combineLatest<T, R>(project: (v1: T) => R): OperatorFunction<T, R>;\nexport function combineLatest<T, T2, R>(v2: ObservableInput<T2>, project: (v1: T, v2: T2) => R): OperatorFunction<T, R>;\nexport function combineLatest<T, T2, T3, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, project: (v1: T, v2: T2, v3: T3) => R): OperatorFunction<T, R>;\nexport function combineLatest<T, T2, T3, T4, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, project: (v1: T, v2: T2, v3: T3, v4: T4) => R): OperatorFunction<T, R>;\nexport function combineLatest<T, T2, T3, T4, T5, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, project: (v1: T, v2: T2, v3: T3, v4: T4, v5: T5) => R): OperatorFunction<T, R>;\nexport function combineLatest<T, T2, T3, T4, T5, T6, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>, project: (v1: T, v2: T2, v3: T3, v4: T4, v5: T5, v6: T6) => R): OperatorFunction<T, R> ;\nexport function combineLatest<T, T2>(v2: ObservableInput<T2>): OperatorFunction<T, [T, T2]>;\nexport function combineLatest<T, T2, T3>(v2: ObservableInput<T2>, v3: ObservableInput<T3>): OperatorFunction<T, [T, T2, T3]>;\nexport function combineLatest<T, T2, T3, T4>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>): OperatorFunction<T, [T, T2, T3, T4]>;\nexport function combineLatest<T, T2, T3, T4, T5>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>): OperatorFunction<T, [T, T2, T3, T4, T5]>;\nexport function combineLatest<T, T2, T3, T4, T5, T6>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>): OperatorFunction<T, [T, T2, T3, T4, T5, T6]> ;\nexport function combineLatest<T, R>(...observables: Array<ObservableInput<T> | ((...values: Array<T>) => R)>): OperatorFunction<T, R>;\nexport function combineLatest<T, R>(array: ObservableInput<T>[]): OperatorFunction<T, Array<T>>;\nexport function combineLatest<T, TOther, R>(array: ObservableInput<TOther>[], project: (v1: T, ...values: Array<TOther>) => R): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Combines multiple Observables to create an Observable whose values are\n * calculated from the latest values of each of its input Observables.\n *\n * <span class=\"informal\">Whenever any input Observable emits a value, it\n * computes a formula using the latest values from all the inputs, then emits\n * the output of that formula.</span>\n *\n * <img src=\"./img/combineLatest.png\" width=\"100%\">\n *\n * `combineLatest` combines the values from this Observable with values from\n * Observables passed as arguments. This is done by subscribing to each\n * Observable, in order, and collecting an array of each of the most recent\n * values any time any of the input Observables emits, then either taking that\n * array and passing it as arguments to an optional `project` function and\n * emitting the return value of that, or just emitting the array of recent\n * values directly if there is no `project` function.\n *\n * @example <caption>Dynamically calculate the Body-Mass Index from an Observable of weight and one for height</caption>\n * var weight = Rx.Observable.of(70, 72, 76, 79, 75);\n * var height = Rx.Observable.of(1.76, 1.77, 1.78);\n * var bmi = weight.combineLatest(height, (w, h) => w / (h * h));\n * bmi.subscribe(x => console.log('BMI is ' + x));\n *\n * // With output to console:\n * // BMI is 24.212293388429753\n * // BMI is 23.93948099205209\n * // BMI is 23.671253629592222\n *\n * @see {@link combineAll}\n * @see {@link merge}\n * @see {@link withLatestFrom}\n *\n * @param {ObservableInput} other An input Observable to combine with the source\n * Observable. More than one input Observables may be given as argument.\n * @param {function} [project] An optional function to project the values from\n * the combined latest values into a new value on the output Observable.\n * @return {Observable} An Observable of projected values from the most recent\n * values from each input Observable, or an array of the most recent values from\n * each input Observable.\n * @method combineLatest\n * @owner Observable\n */\nexport function combineLatest<T, R>(...observables: Array<ObservableInput<any> |\n                                                    Array<ObservableInput<any>> |\n                                                    ((...values: Array<any>) => R)>): OperatorFunction<T, R> {\n  let project: (...values: Array<any>) => R = null;\n  if (typeof observables[observables.length - 1] === 'function') {\n    project = <(...values: Array<any>) => R>observables.pop();\n  }\n\n  // if the first and only other argument besides the resultSelector is an array\n  // assume it's been called with `combineLatest([obs1, obs2, obs3], project)`\n  if (observables.length === 1 && isArray(observables[0])) {\n    observables = (<any>observables[0]).slice();\n  }\n\n  return (source: Observable<T>) => source.lift.call(new ArrayObservable([source, ...observables]), new CombineLatestOperator(project));\n}\n\nexport class CombineLatestOperator<T, R> implements Operator<T, R> {\n  constructor(private project?: (...values: Array<any>) => R) {\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new CombineLatestSubscriber(subscriber, this.project));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class CombineLatestSubscriber<T, R> extends OuterSubscriber<T, R> {\n  private active: number = 0;\n  private values: any[] = [];\n  private observables: any[] = [];\n  private toRespond: number;\n\n  constructor(destination: Subscriber<R>, private project?: (...values: Array<any>) => R) {\n    super(destination);\n  }\n\n  protected _next(observable: any) {\n    this.values.push(none);\n    this.observables.push(observable);\n  }\n\n  protected _complete() {\n    const observables = this.observables;\n    const len = observables.length;\n    if (len === 0) {\n      this.destination.complete();\n    } else {\n      this.active = len;\n      this.toRespond = len;\n      for (let i = 0; i < len; i++) {\n        const observable = observables[i];\n        this.add(subscribeToResult(this, observable, observable, i));\n      }\n    }\n  }\n\n  notifyComplete(unused: Subscriber<R>): void {\n    if ((this.active -= 1) === 0) {\n      this.destination.complete();\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    const values = this.values;\n    const oldVal = values[outerIndex];\n    const toRespond = !this.toRespond\n      ? 0\n      : oldVal === none ? --this.toRespond : this.toRespond;\n    values[outerIndex] = innerValue;\n\n    if (toRespond === 0) {\n      if (this.project) {\n        this._tryProject(values);\n      } else {\n        this.destination.next(values.slice());\n      }\n    }\n  }\n\n  private _tryProject(values: any[]) {\n    let result: any;\n    try {\n      result = this.project.apply(this, values);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    this.destination.next(result);\n  }\n}\n","import { root } from '../util/root';\nimport { IScheduler } from '../Scheduler';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { TeardownLogic } from '../Subscription';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport class PromiseObservable<T> extends Observable<T> {\n\n  public value: T;\n\n  /**\n   * Converts a Promise to an Observable.\n   *\n   * <span class=\"informal\">Returns an Observable that just emits the Promise's\n   * resolved value, then completes.</span>\n   *\n   * Converts an ES2015 Promise or a Promises/A+ spec compliant Promise to an\n   * Observable. If the Promise resolves with a value, the output Observable\n   * emits that resolved value as a `next`, and then completes. If the Promise\n   * is rejected, then the output Observable emits the corresponding Error.\n   *\n   * @example <caption>Convert the Promise returned by Fetch to an Observable</caption>\n   * var result = Rx.Observable.fromPromise(fetch('http://myserver.com/'));\n   * result.subscribe(x => console.log(x), e => console.error(e));\n   *\n   * @see {@link bindCallback}\n   * @see {@link from}\n   *\n   * @param {PromiseLike<T>} promise The promise to be converted.\n   * @param {Scheduler} [scheduler] An optional IScheduler to use for scheduling\n   * the delivery of the resolved value (or the rejection).\n   * @return {Observable<T>} An Observable which wraps the Promise.\n   * @static true\n   * @name fromPromise\n   * @owner Observable\n   */\n  static create<T>(promise: PromiseLike<T>, scheduler?: IScheduler): Observable<T> {\n    return new PromiseObservable(promise, scheduler);\n  }\n\n  constructor(private promise: PromiseLike<T>, private scheduler?: IScheduler) {\n    super();\n  }\n\n  /** @deprecated internal use only */ _subscribe(subscriber: Subscriber<T>): TeardownLogic {\n    const promise = this.promise;\n    const scheduler = this.scheduler;\n\n    if (scheduler == null) {\n      if (this._isScalar) {\n        if (!subscriber.closed) {\n          subscriber.next(this.value);\n          subscriber.complete();\n        }\n      } else {\n        promise.then(\n          (value) => {\n            this.value = value;\n            this._isScalar = true;\n            if (!subscriber.closed) {\n              subscriber.next(value);\n              subscriber.complete();\n            }\n          },\n          (err) => {\n            if (!subscriber.closed) {\n              subscriber.error(err);\n            }\n          }\n        )\n        .then(null, err => {\n          // escape the promise trap, throw unhandled errors\n          root.setTimeout(() => { throw err; });\n        });\n      }\n    } else {\n      if (this._isScalar) {\n        if (!subscriber.closed) {\n          return scheduler.schedule(dispatchNext, 0, { value: this.value, subscriber });\n        }\n      } else {\n        promise.then(\n          (value) => {\n            this.value = value;\n            this._isScalar = true;\n            if (!subscriber.closed) {\n              subscriber.add(scheduler.schedule(dispatchNext, 0, { value, subscriber }));\n            }\n          },\n          (err) => {\n            if (!subscriber.closed) {\n              subscriber.add(scheduler.schedule(dispatchError, 0, { err, subscriber }));\n            }\n          })\n          .then(null, (err) => {\n            // escape the promise trap, throw unhandled errors\n            root.setTimeout(() => { throw err; });\n          });\n      }\n    }\n  }\n}\n\ninterface DispatchNextArg<T> {\n  subscriber: Subscriber<T>;\n  value: T;\n}\nfunction dispatchNext<T>(arg: DispatchNextArg<T>) {\n  const { value, subscriber } = arg;\n  if (!subscriber.closed) {\n    subscriber.next(value);\n    subscriber.complete();\n  }\n}\n\ninterface DispatchErrorArg<T> {\n  subscriber: Subscriber<T>;\n  err: any;\n}\nfunction dispatchError<T>(arg: DispatchErrorArg<T>) {\n  const { err, subscriber } = arg;\n  if (!subscriber.closed) {\n    subscriber.error(err);\n  }\n}\n","import { root } from '../util/root';\nimport { IScheduler } from '../Scheduler';\nimport { Observable } from '../Observable';\nimport { iterator as Symbol_iterator } from '../symbol/iterator';\nimport { TeardownLogic } from '../Subscription';\nimport { Subscriber } from '../Subscriber';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport class IteratorObservable<T> extends Observable<T> {\n  private iterator: any;\n\n  static create<T>(iterator: any, scheduler?: IScheduler): IteratorObservable<T> {\n    return new IteratorObservable(iterator, scheduler);\n  }\n\n  static dispatch(state: any) {\n\n    const { index, hasError, iterator, subscriber } = state;\n\n    if (hasError) {\n      subscriber.error(state.error);\n      return;\n    }\n\n    let result = iterator.next();\n    if (result.done) {\n      subscriber.complete();\n      return;\n    }\n\n    subscriber.next(result.value);\n    state.index = index + 1;\n\n    if (subscriber.closed) {\n      if (typeof iterator.return === 'function') {\n        iterator.return();\n      }\n      return;\n    }\n\n    (<any> this).schedule(state);\n  }\n\n  constructor(iterator: any, private scheduler?: IScheduler) {\n    super();\n\n    if (iterator == null) {\n      throw new Error('iterator cannot be null.');\n    }\n\n    this.iterator = getIterator(iterator);\n  }\n\n  /** @deprecated internal use only */ _subscribe(subscriber: Subscriber<T>): TeardownLogic {\n\n    let index = 0;\n    const { iterator, scheduler } = this;\n\n    if (scheduler) {\n      return scheduler.schedule(IteratorObservable.dispatch, 0, {\n        index, iterator, subscriber\n      });\n    } else {\n      do {\n        let result = iterator.next();\n        if (result.done) {\n          subscriber.complete();\n          break;\n        } else {\n          subscriber.next(result.value);\n        }\n        if (subscriber.closed) {\n          if (typeof iterator.return === 'function') {\n            iterator.return();\n          }\n          break;\n        }\n      } while (true);\n    }\n  }\n}\n\nclass StringIterator {\n  constructor(private str: string,\n              private idx: number = 0,\n              private len: number = str.length) {\n  }\n  [Symbol_iterator]() { return (this); }\n  next() {\n    return this.idx < this.len ? {\n        done: false,\n        value: this.str.charAt(this.idx++)\n    } : {\n        done: true,\n        value: undefined\n    };\n  }\n}\n\nclass ArrayIterator {\n  constructor(private arr: Array<any>,\n              private idx: number = 0,\n              private len: number = toLength(arr)) {\n  }\n  [Symbol_iterator]() { return this; }\n  next() {\n    return this.idx < this.len ? {\n        done: false,\n        value: this.arr[this.idx++]\n    } : {\n        done: true,\n        value: undefined\n    };\n  }\n}\n\nfunction getIterator(obj: any) {\n  const i = obj[Symbol_iterator];\n  if (!i && typeof obj === 'string') {\n    return new StringIterator(obj);\n  }\n  if (!i && obj.length !== undefined) {\n    return new ArrayIterator(obj);\n  }\n  if (!i) {\n    throw new TypeError('object is not iterable');\n  }\n  return obj[Symbol_iterator]();\n}\n\nconst maxSafeInteger = Math.pow(2, 53) - 1;\n\nfunction toLength(o: any) {\n  let len = +o.length;\n  if (isNaN(len)) {\n      return 0;\n  }\n  if (len === 0 || !numberIsFinite(len)) {\n      return len;\n  }\n  len = sign(len) * Math.floor(Math.abs(len));\n  if (len <= 0) {\n      return 0;\n  }\n  if (len > maxSafeInteger) {\n      return maxSafeInteger;\n  }\n  return len;\n}\n\nfunction numberIsFinite(value: any) {\n  return typeof value === 'number' && root.isFinite(value);\n}\n\nfunction sign(value: any) {\n  let valueAsNumber = +value;\n  if (valueAsNumber === 0) {\n    return valueAsNumber;\n  }\n  if (isNaN(valueAsNumber)) {\n    return valueAsNumber;\n  }\n  return valueAsNumber < 0 ? -1 : 1;\n}\n","import { IScheduler } from '../Scheduler';\nimport { Observable } from '../Observable';\nimport { ScalarObservable } from './ScalarObservable';\nimport { EmptyObservable } from './EmptyObservable';\nimport { Subscriber } from '../Subscriber';\nimport { TeardownLogic } from '../Subscription';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport class ArrayLikeObservable<T> extends Observable<T> {\n\n  static create<T>(arrayLike: ArrayLike<T>, scheduler?: IScheduler): Observable<T> {\n    const length = arrayLike.length;\n    if (length === 0) {\n      return new EmptyObservable<T>();\n    } else if (length === 1) {\n      return new ScalarObservable<T>(<any>arrayLike[0], scheduler);\n    } else {\n      return new ArrayLikeObservable(arrayLike, scheduler);\n    }\n  }\n\n  static dispatch(state: any) {\n    const { arrayLike, index, length, subscriber } = state;\n\n    if (subscriber.closed) {\n      return;\n    }\n\n    if (index >= length) {\n      subscriber.complete();\n      return;\n    }\n\n    subscriber.next(arrayLike[index]);\n\n    state.index = index + 1;\n\n    (<any> this).schedule(state);\n  }\n\n  // value used if Array has one value and _isScalar\n  private value: any;\n\n  constructor(private arrayLike: ArrayLike<T>, private scheduler?: IScheduler) {\n    super();\n    if (!scheduler && arrayLike.length === 1) {\n      this._isScalar = true;\n      this.value = arrayLike[0];\n    }\n  }\n\n  /** @deprecated internal use only */ _subscribe(subscriber: Subscriber<T>): TeardownLogic {\n    let index = 0;\n    const { arrayLike, scheduler } = this;\n    const length = arrayLike.length;\n\n    if (scheduler) {\n      return scheduler.schedule(ArrayLikeObservable.dispatch, 0, {\n        arrayLike, index, length, subscriber\n      });\n    } else {\n      for (let i = 0; i < length && !subscriber.closed; i++) {\n        subscriber.next(arrayLike[i]);\n      }\n      subscriber.complete();\n    }\n  }\n}\n","import { PartialObserver } from './Observer';\nimport { Observable } from './Observable';\n\n/**\n * Represents a push-based event or value that an {@link Observable} can emit.\n * This class is particularly useful for operators that manage notifications,\n * like {@link materialize}, {@link dematerialize}, {@link observeOn}, and\n * others. Besides wrapping the actual delivered value, it also annotates it\n * with metadata of, for instance, what type of push message it is (`next`,\n * `error`, or `complete`).\n *\n * @see {@link materialize}\n * @see {@link dematerialize}\n * @see {@link observeOn}\n *\n * @class Notification<T>\n */\nexport class Notification<T> {\n  hasValue: boolean;\n\n  constructor(public kind: string, public value?: T, public error?: any) {\n    this.hasValue = kind === 'N';\n  }\n\n  /**\n   * Delivers to the given `observer` the value wrapped by this Notification.\n   * @param {Observer} observer\n   * @return\n   */\n  observe(observer: PartialObserver<T>): any {\n    switch (this.kind) {\n      case 'N':\n        return observer.next && observer.next(this.value);\n      case 'E':\n        return observer.error && observer.error(this.error);\n      case 'C':\n        return observer.complete && observer.complete();\n    }\n  }\n\n  /**\n   * Given some {@link Observer} callbacks, deliver the value represented by the\n   * current Notification to the correctly corresponding callback.\n   * @param {function(value: T): void} next An Observer `next` callback.\n   * @param {function(err: any): void} [error] An Observer `error` callback.\n   * @param {function(): void} [complete] An Observer `complete` callback.\n   * @return {any}\n   */\n  do(next: (value: T) => void, error?: (err: any) => void, complete?: () => void): any {\n    const kind = this.kind;\n    switch (kind) {\n      case 'N':\n        return next && next(this.value);\n      case 'E':\n        return error && error(this.error);\n      case 'C':\n        return complete && complete();\n    }\n  }\n\n  /**\n   * Takes an Observer or its individual callback functions, and calls `observe`\n   * or `do` methods accordingly.\n   * @param {Observer|function(value: T): void} nextOrObserver An Observer or\n   * the `next` callback.\n   * @param {function(err: any): void} [error] An Observer `error` callback.\n   * @param {function(): void} [complete] An Observer `complete` callback.\n   * @return {any}\n   */\n  accept(nextOrObserver: PartialObserver<T> | ((value: T) => void), error?: (err: any) => void, complete?: () => void) {\n    if (nextOrObserver && typeof (<PartialObserver<T>>nextOrObserver).next === 'function') {\n      return this.observe(<PartialObserver<T>>nextOrObserver);\n    } else {\n      return this.do(<(value: T) => void>nextOrObserver, error, complete);\n    }\n  }\n\n  /**\n   * Returns a simple Observable that just delivers the notification represented\n   * by this Notification instance.\n   * @return {any}\n   */\n  toObservable(): Observable<T> {\n    const kind = this.kind;\n    switch (kind) {\n      case 'N':\n        return Observable.of(this.value);\n      case 'E':\n        return Observable.throw(this.error);\n      case 'C':\n        return Observable.empty<T>();\n    }\n    throw new Error('unexpected notification kind value');\n  }\n\n  private static completeNotification: Notification<any> = new Notification('C');\n  private static undefinedValueNotification: Notification<any> = new Notification('N', undefined);\n\n  /**\n   * A shortcut to create a Notification instance of the type `next` from a\n   * given value.\n   * @param {T} value The `next` value.\n   * @return {Notification<T>} The \"next\" Notification representing the\n   * argument.\n   */\n  static createNext<T>(value: T): Notification<T> {\n    if (typeof value !== 'undefined') {\n      return new Notification('N', value);\n    }\n    return Notification.undefinedValueNotification;\n  }\n\n  /**\n   * A shortcut to create a Notification instance of the type `error` from a\n   * given error.\n   * @param {any} [err] The `error` error.\n   * @return {Notification<T>} The \"error\" Notification representing the\n   * argument.\n   */\n  static createError<T>(err?: any): Notification<T> {\n    return new Notification('E', undefined, err);\n  }\n\n  /**\n   * A shortcut to create a Notification instance of the type `complete`.\n   * @return {Notification<any>} The valueless \"complete\" Notification.\n   */\n  static createComplete(): Notification<any> {\n    return Notification.completeNotification;\n  }\n}\n","import { Observable } from '../Observable';\nimport { IScheduler } from '../Scheduler';\nimport { Operator } from '../Operator';\nimport { PartialObserver } from '../Observer';\nimport { Subscriber } from '../Subscriber';\nimport { Notification } from '../Notification';\nimport { TeardownLogic } from '../Subscription';\nimport { Action } from '../scheduler/Action';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n *\n * Re-emits all notifications from source Observable with specified scheduler.\n *\n * <span class=\"informal\">Ensure a specific scheduler is used, from outside of an Observable.</span>\n *\n * `observeOn` is an operator that accepts a scheduler as a first parameter, which will be used to reschedule\n * notifications emitted by the source Observable. It might be useful, if you do not have control over\n * internal scheduler of a given Observable, but want to control when its values are emitted nevertheless.\n *\n * Returned Observable emits the same notifications (nexted values, complete and error events) as the source Observable,\n * but rescheduled with provided scheduler. Note that this doesn't mean that source Observables internal\n * scheduler will be replaced in any way. Original scheduler still will be used, but when the source Observable emits\n * notification, it will be immediately scheduled again - this time with scheduler passed to `observeOn`.\n * An anti-pattern would be calling `observeOn` on Observable that emits lots of values synchronously, to split\n * that emissions into asynchronous chunks. For this to happen, scheduler would have to be passed into the source\n * Observable directly (usually into the operator that creates it). `observeOn` simply delays notifications a\n * little bit more, to ensure that they are emitted at expected moments.\n *\n * As a matter of fact, `observeOn` accepts second parameter, which specifies in milliseconds with what delay notifications\n * will be emitted. The main difference between {@link delay} operator and `observeOn` is that `observeOn`\n * will delay all notifications - including error notifications - while `delay` will pass through error\n * from source Observable immediately when it is emitted. In general it is highly recommended to use `delay` operator\n * for any kind of delaying of values in the stream, while using `observeOn` to specify which scheduler should be used\n * for notification emissions in general.\n *\n * @example <caption>Ensure values in subscribe are called just before browser repaint.</caption>\n * const intervals = Rx.Observable.interval(10); // Intervals are scheduled\n *                                               // with async scheduler by default...\n *\n * intervals\n * .observeOn(Rx.Scheduler.animationFrame)       // ...but we will observe on animationFrame\n * .subscribe(val => {                           // scheduler to ensure smooth animation.\n *   someDiv.style.height = val + 'px';\n * });\n *\n * @see {@link delay}\n *\n * @param {IScheduler} scheduler Scheduler that will be used to reschedule notifications from source Observable.\n * @param {number} [delay] Number of milliseconds that states with what delay every notification should be rescheduled.\n * @return {Observable<T>} Observable that emits the same notifications as the source Observable,\n * but with provided scheduler.\n *\n * @method observeOn\n * @owner Observable\n */\nexport function observeOn<T>(scheduler: IScheduler, delay: number = 0): MonoTypeOperatorFunction<T> {\n  return function observeOnOperatorFunction(source: Observable<T>): Observable<T> {\n    return source.lift(new ObserveOnOperator(scheduler, delay));\n  };\n}\n\nexport class ObserveOnOperator<T> implements Operator<T, T> {\n  constructor(private scheduler: IScheduler, private delay: number = 0) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new ObserveOnSubscriber(subscriber, this.scheduler, this.delay));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class ObserveOnSubscriber<T> extends Subscriber<T> {\n  static dispatch(this: Action<ObserveOnMessage>, arg: ObserveOnMessage) {\n    const { notification, destination } = arg;\n    notification.observe(destination);\n    this.unsubscribe();\n  }\n\n  constructor(destination: Subscriber<T>,\n              private scheduler: IScheduler,\n              private delay: number = 0) {\n    super(destination);\n  }\n\n  private scheduleMessage(notification: Notification<any>): void {\n    this.add(this.scheduler.schedule(\n      ObserveOnSubscriber.dispatch,\n      this.delay,\n      new ObserveOnMessage(notification, this.destination)\n    ));\n  }\n\n  protected _next(value: T): void {\n    this.scheduleMessage(Notification.createNext(value));\n  }\n\n  protected _error(err: any): void {\n    this.scheduleMessage(Notification.createError(err));\n  }\n\n  protected _complete(): void {\n    this.scheduleMessage(Notification.createComplete());\n  }\n}\n\nexport class ObserveOnMessage {\n  constructor(public notification: Notification<any>,\n              public destination: PartialObserver<any>) {\n  }\n}\n","import { isArray } from '../util/isArray';\nimport { isArrayLike } from '../util/isArrayLike';\nimport { isPromise } from '../util/isPromise';\nimport { PromiseObservable } from './PromiseObservable';\nimport { IteratorObservable } from'./IteratorObservable';\nimport { ArrayObservable } from './ArrayObservable';\nimport { ArrayLikeObservable } from './ArrayLikeObservable';\n\nimport { IScheduler } from '../Scheduler';\nimport { iterator as Symbol_iterator } from '../symbol/iterator';\nimport { Observable, ObservableInput } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { ObserveOnSubscriber } from '../operators/observeOn';\nimport { observable as Symbol_observable } from '../symbol/observable';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport class FromObservable<T> extends Observable<T> {\n  constructor(private ish: ObservableInput<T>, private scheduler?: IScheduler) {\n    super(null);\n  }\n\n  static create<T>(ish: ObservableInput<T>, scheduler?: IScheduler): Observable<T>;\n  static create<T, R>(ish: ArrayLike<T>, scheduler?: IScheduler): Observable<R>;\n\n  /**\n   * Creates an Observable from an Array, an array-like object, a Promise, an\n   * iterable object, or an Observable-like object.\n   *\n   * <span class=\"informal\">Converts almost anything to an Observable.</span>\n   *\n   * <img src=\"./img/from.png\" width=\"100%\">\n   *\n   * Convert various other objects and data types into Observables. `from`\n   * converts a Promise or an array-like or an\n   * [iterable](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols#iterable)\n   * object into an Observable that emits the items in that promise or array or\n   * iterable. A String, in this context, is treated as an array of characters.\n   * Observable-like objects (contains a function named with the ES2015 Symbol\n   * for Observable) can also be converted through this operator.\n   *\n   * @example <caption>Converts an array to an Observable</caption>\n   * var array = [10, 20, 30];\n   * var result = Rx.Observable.from(array);\n   * result.subscribe(x => console.log(x));\n   *\n   * // Results in the following:\n   * // 10 20 30\n   *\n   * @example <caption>Convert an infinite iterable (from a generator) to an Observable</caption>\n   * function* generateDoubles(seed) {\n   *   var i = seed;\n   *   while (true) {\n   *     yield i;\n   *     i = 2 * i; // double it\n   *   }\n   * }\n   *\n   * var iterator = generateDoubles(3);\n   * var result = Rx.Observable.from(iterator).take(10);\n   * result.subscribe(x => console.log(x));\n   *\n   * // Results in the following:\n   * // 3 6 12 24 48 96 192 384 768 1536\n   *\n   * @see {@link create}\n   * @see {@link fromEvent}\n   * @see {@link fromEventPattern}\n   * @see {@link fromPromise}\n   *\n   * @param {ObservableInput<T>} ish A subscribable object, a Promise, an\n   * Observable-like, an Array, an iterable or an array-like object to be\n   * converted.\n   * @param {Scheduler} [scheduler] The scheduler on which to schedule the\n   * emissions of values.\n   * @return {Observable<T>} The Observable whose values are originally from the\n   * input object that was converted.\n   * @static true\n   * @name from\n   * @owner Observable\n   */\n  static create<T>(ish: ObservableInput<T>, scheduler?: IScheduler): Observable<T> {\n    if (ish != null) {\n      if (typeof ish[Symbol_observable] === 'function') {\n        if (ish instanceof Observable && !scheduler) {\n          return ish;\n        }\n        return new FromObservable<T>(ish, scheduler);\n      } else if (isArray(ish)) {\n        return new ArrayObservable<T>(ish, scheduler);\n      } else if (isPromise<T>(ish)) {\n        return new PromiseObservable<T>(ish, scheduler);\n      } else if (typeof ish[Symbol_iterator] === 'function' || typeof ish === 'string') {\n        return new IteratorObservable<T>(ish, scheduler);\n      } else if (isArrayLike(ish)) {\n        return new ArrayLikeObservable(ish, scheduler);\n      }\n    }\n\n    throw new TypeError((ish !== null && typeof ish || ish) + ' is not observable');\n  }\n\n  /** @deprecated internal use only */ _subscribe(subscriber: Subscriber<T>) {\n    const ish = this.ish;\n    const scheduler = this.scheduler;\n    if (scheduler == null) {\n      return ish[Symbol_observable]().subscribe(subscriber);\n    } else {\n      return ish[Symbol_observable]().subscribe(new ObserveOnSubscriber(subscriber, scheduler, 0));\n    }\n  }\n}\n","import { Observable, ObservableInput } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { OperatorFunction } from '../interfaces';\n\n/* tslint:disable:max-line-length */\nexport function mergeMap<T, R>(project: (value: T, index: number) => ObservableInput<R>, concurrent?: number): OperatorFunction<T, R>;\nexport function mergeMap<T, I, R>(project: (value: T, index: number) => ObservableInput<I>, resultSelector: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R, concurrent?: number): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link mergeAll}.</span>\n *\n * <img src=\"./img/mergeMap.png\" width=\"100%\">\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an Observable, and then merging those resulting Observables and\n * emitting the results of this merger.\n *\n * @example <caption>Map and flatten each letter to an Observable ticking every 1 second</caption>\n * var letters = Rx.Observable.of('a', 'b', 'c');\n * var result = letters.mergeMap(x =>\n *   Rx.Observable.interval(1000).map(i => x+i)\n * );\n * result.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // a0\n * // b0\n * // c0\n * // a1\n * // b1\n * // c1\n * // continues to list a,b,c with respective ascending integers\n *\n * @see {@link concatMap}\n * @see {@link exhaustMap}\n * @see {@link merge}\n * @see {@link mergeAll}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n * @see {@link switchMap}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\n * A function to produce the value on the output Observable based on the values\n * and the indices of the source (outer) emission and the inner Observable\n * emission. The arguments passed to this function are:\n * - `outerValue`: the value that came from the source\n * - `innerValue`: the value that came from the projected Observable\n * - `outerIndex`: the \"index\" of the value that came from the source\n * - `innerIndex`: the \"index\" of the value from the projected Observable\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @return {Observable} An Observable that emits the result of applying the\n * projection function (and the optional `resultSelector`) to each item emitted\n * by the source Observable and merging the results of the Observables obtained\n * from this transformation.\n * @method mergeMap\n * @owner Observable\n */\nexport function mergeMap<T, I, R>(project: (value: T, index: number) => ObservableInput<I>,\n                                  resultSelector?: ((outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R) | number,\n                                  concurrent: number = Number.POSITIVE_INFINITY): OperatorFunction<T, I|R> {\n  return function mergeMapOperatorFunction(source: Observable<T>) {\n    if (typeof resultSelector === 'number') {\n      concurrent = <number>resultSelector;\n      resultSelector = null;\n    }\n    return source.lift(new MergeMapOperator(project, <any>resultSelector, concurrent));\n  };\n}\n\nexport class MergeMapOperator<T, I, R> implements Operator<T, I> {\n  constructor(private project: (value: T, index: number) => ObservableInput<I>,\n              private resultSelector?: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R,\n              private concurrent: number = Number.POSITIVE_INFINITY) {\n  }\n\n  call(observer: Subscriber<I>, source: any): any {\n    return source.subscribe(new MergeMapSubscriber(\n      observer, this.project, this.resultSelector, this.concurrent\n    ));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class MergeMapSubscriber<T, I, R> extends OuterSubscriber<T, I> {\n  private hasCompleted: boolean = false;\n  private buffer: T[] = [];\n  private active: number = 0;\n  protected index: number = 0;\n\n  constructor(destination: Subscriber<I>,\n              private project: (value: T, index: number) => ObservableInput<I>,\n              private resultSelector?: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R,\n              private concurrent: number = Number.POSITIVE_INFINITY) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    if (this.active < this.concurrent) {\n      this._tryNext(value);\n    } else {\n      this.buffer.push(value);\n    }\n  }\n\n  protected _tryNext(value: T) {\n    let result: ObservableInput<I>;\n    const index = this.index++;\n    try {\n      result = this.project(value, index);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    this.active++;\n    this._innerSub(result, value, index);\n  }\n\n  private _innerSub(ish: ObservableInput<I>, value: T, index: number): void {\n    this.add(subscribeToResult<T, I>(this, ish, value, index));\n  }\n\n  protected _complete(): void {\n    this.hasCompleted = true;\n    if (this.active === 0 && this.buffer.length === 0) {\n      this.destination.complete();\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: I,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, I>): void {\n    if (this.resultSelector) {\n      this._notifyResultSelector(outerValue, innerValue, outerIndex, innerIndex);\n    } else {\n      this.destination.next(innerValue);\n    }\n  }\n\n  private _notifyResultSelector(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) {\n    let result: R;\n    try {\n      result = this.resultSelector(outerValue, innerValue, outerIndex, innerIndex);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    this.destination.next(result);\n  }\n\n  notifyComplete(innerSub: Subscription): void {\n    const buffer = this.buffer;\n    this.remove(innerSub);\n    this.active--;\n    if (buffer.length > 0) {\n      this._next(buffer.shift());\n    } else if (this.active === 0 && this.hasCompleted) {\n      this.destination.complete();\n    }\n  }\n}\n","import { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Observer } from '../Observer';\nimport { Subscriber } from '../Subscriber';\nimport { OperatorFunction } from '../interfaces';\n\n/**\n * Counts the number of emissions on the source and emits that number when the\n * source completes.\n *\n * <span class=\"informal\">Tells how many values were emitted, when the source\n * completes.</span>\n *\n * <img src=\"./img/count.png\" width=\"100%\">\n *\n * `count` transforms an Observable that emits values into an Observable that\n * emits a single value that represents the number of values emitted by the\n * source Observable. If the source Observable terminates with an error, `count`\n * will pass this error notification along without emitting a value first. If\n * the source Observable does not terminate at all, `count` will neither emit\n * a value nor terminate. This operator takes an optional `predicate` function\n * as argument, in which case the output emission will represent the number of\n * source values that matched `true` with the `predicate`.\n *\n * @example <caption>Counts how many seconds have passed before the first click happened</caption>\n * var seconds = Rx.Observable.interval(1000);\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var secondsBeforeClick = seconds.takeUntil(clicks);\n * var result = secondsBeforeClick.count();\n * result.subscribe(x => console.log(x));\n *\n * @example <caption>Counts how many odd numbers are there between 1 and 7</caption>\n * var numbers = Rx.Observable.range(1, 7);\n * var result = numbers.count(i => i % 2 === 1);\n * result.subscribe(x => console.log(x));\n *\n * // Results in:\n * // 4\n *\n * @see {@link max}\n * @see {@link min}\n * @see {@link reduce}\n *\n * @param {function(value: T, i: number, source: Observable<T>): boolean} [predicate] A\n * boolean function to select what values are to be counted. It is provided with\n * arguments of:\n * - `value`: the value from the source Observable.\n * - `index`: the (zero-based) \"index\" of the value from the source Observable.\n * - `source`: the source Observable instance itself.\n * @return {Observable} An Observable of one number that represents the count as\n * described above.\n * @method count\n * @owner Observable\n */\nexport function count<T>(predicate?: (value: T, index: number, source: Observable<T>) => boolean): OperatorFunction<T, number> {\n  return (source: Observable<T>) => source.lift(new CountOperator(predicate, source));\n}\n\nclass CountOperator<T> implements Operator<T, number> {\n  constructor(private predicate?: (value: T, index: number, source: Observable<T>) => boolean,\n              private source?: Observable<T>) {\n  }\n\n  call(subscriber: Subscriber<number>, source: any): any {\n    return source.subscribe(new CountSubscriber(subscriber, this.predicate, this.source));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass CountSubscriber<T> extends Subscriber<T> {\n  private count: number = 0;\n  private index: number = 0;\n\n  constructor(destination: Observer<number>,\n              private predicate?: (value: T, index: number, source: Observable<T>) => boolean,\n              private source?: Observable<T>) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    if (this.predicate) {\n      this._tryPredicate(value);\n    } else {\n      this.count++;\n    }\n  }\n\n  private _tryPredicate(value: T) {\n    let result: any;\n\n    try {\n      result = this.predicate(value, this.index++, this.source);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n\n    if (result) {\n      this.count++;\n    }\n  }\n\n  protected _complete(): void {\n    this.destination.next(this.count);\n    this.destination.complete();\n  }\n}\n","import { Operator } from '../Operator';\nimport { Observable, SubscribableOrPromise } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription, TeardownLogic } from '../Subscription';\n\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Emits a value from the source Observable only after a particular time span\n * determined by another Observable has passed without another source emission.\n *\n * <span class=\"informal\">It's like {@link debounceTime}, but the time span of\n * emission silence is determined by a second Observable.</span>\n *\n * <img src=\"./img/debounce.png\" width=\"100%\">\n *\n * `debounce` delays values emitted by the source Observable, but drops previous\n * pending delayed emissions if a new value arrives on the source Observable.\n * This operator keeps track of the most recent value from the source\n * Observable, and spawns a duration Observable by calling the\n * `durationSelector` function. The value is emitted only when the duration\n * Observable emits a value or completes, and if no other value was emitted on\n * the source Observable since the duration Observable was spawned. If a new\n * value appears before the duration Observable emits, the previous value will\n * be dropped and will not be emitted on the output Observable.\n *\n * Like {@link debounceTime}, this is a rate-limiting operator, and also a\n * delay-like operator since output emissions do not necessarily occur at the\n * same time as they did on the source Observable.\n *\n * @example <caption>Emit the most recent click after a burst of clicks</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.debounce(() => Rx.Observable.interval(1000));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link audit}\n * @see {@link debounceTime}\n * @see {@link delayWhen}\n * @see {@link throttle}\n *\n * @param {function(value: T): SubscribableOrPromise} durationSelector A function\n * that receives a value from the source Observable, for computing the timeout\n * duration for each source value, returned as an Observable or a Promise.\n * @return {Observable} An Observable that delays the emissions of the source\n * Observable by the specified duration Observable returned by\n * `durationSelector`, and may drop some values if they occur too frequently.\n * @method debounce\n * @owner Observable\n */\nexport function debounce<T>(durationSelector: (value: T) => SubscribableOrPromise<number>): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new DebounceOperator(durationSelector));\n}\n\nclass DebounceOperator<T> implements Operator<T, T> {\n  constructor(private durationSelector: (value: T) => SubscribableOrPromise<number>) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new DebounceSubscriber(subscriber, this.durationSelector));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass DebounceSubscriber<T, R> extends OuterSubscriber<T, R> {\n  private value: T;\n  private hasValue: boolean = false;\n  private durationSubscription: Subscription = null;\n\n  constructor(destination: Subscriber<R>,\n              private durationSelector: (value: T) => SubscribableOrPromise<number>) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    try {\n      const result = this.durationSelector.call(this, value);\n\n      if (result) {\n        this._tryNext(value, result);\n      }\n    } catch (err) {\n      this.destination.error(err);\n    }\n  }\n\n  protected _complete(): void {\n    this.emitValue();\n    this.destination.complete();\n  }\n\n  private _tryNext(value: T, duration: SubscribableOrPromise<number>): void {\n    let subscription = this.durationSubscription;\n    this.value = value;\n    this.hasValue = true;\n    if (subscription) {\n      subscription.unsubscribe();\n      this.remove(subscription);\n    }\n\n    subscription = subscribeToResult(this, duration);\n    if (!subscription.closed) {\n      this.add(this.durationSubscription = subscription);\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this.emitValue();\n  }\n\n  notifyComplete(): void {\n    this.emitValue();\n  }\n\n  emitValue(): void {\n    if (this.hasValue) {\n      const value = this.value;\n      const subscription = this.durationSubscription;\n      if (subscription) {\n        this.durationSubscription = null;\n        subscription.unsubscribe();\n        this.remove(subscription);\n      }\n      this.value = null;\n      this.hasValue = false;\n      super._next(value);\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { OperatorFunction, MonoTypeOperatorFunction } from '../interfaces';\n\n/* tslint:disable:max-line-length */\nexport function defaultIfEmpty<T>(defaultValue?: T): MonoTypeOperatorFunction<T>;\nexport function defaultIfEmpty<T, R>(defaultValue?: R): OperatorFunction<T, T | R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Emits a given value if the source Observable completes without emitting any\n * `next` value, otherwise mirrors the source Observable.\n *\n * <span class=\"informal\">If the source Observable turns out to be empty, then\n * this operator will emit a default value.</span>\n *\n * <img src=\"./img/defaultIfEmpty.png\" width=\"100%\">\n *\n * `defaultIfEmpty` emits the values emitted by the source Observable or a\n * specified default value if the source Observable is empty (completes without\n * having emitted any `next` value).\n *\n * @example <caption>If no clicks happen in 5 seconds, then emit \"no clicks\"</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var clicksBeforeFive = clicks.takeUntil(Rx.Observable.interval(5000));\n * var result = clicksBeforeFive.defaultIfEmpty('no clicks');\n * result.subscribe(x => console.log(x));\n *\n * @see {@link empty}\n * @see {@link last}\n *\n * @param {any} [defaultValue=null] The default value used if the source\n * Observable is empty.\n * @return {Observable} An Observable that emits either the specified\n * `defaultValue` if the source Observable emits no items, or the values emitted\n * by the source Observable.\n * @method defaultIfEmpty\n * @owner Observable\n */\nexport function defaultIfEmpty<T, R>(defaultValue: R = null): OperatorFunction<T, T | R> {\n  return (source: Observable<T>) => source.lift(new DefaultIfEmptyOperator(defaultValue)) as Observable<T | R>;\n}\n\nclass DefaultIfEmptyOperator<T, R> implements Operator<T, T | R> {\n\n  constructor(private defaultValue: R) {\n  }\n\n  call(subscriber: Subscriber<T | R>, source: any): any {\n    return source.subscribe(new DefaultIfEmptySubscriber(subscriber, this.defaultValue));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass DefaultIfEmptySubscriber<T, R> extends Subscriber<T> {\n  private isEmpty: boolean = true;\n\n  constructor(destination: Subscriber<T | R>, private defaultValue: R) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    this.isEmpty = false;\n    this.destination.next(value);\n  }\n\n  protected _complete(): void {\n    if (this.isEmpty) {\n      this.destination.next(this.defaultValue);\n    }\n    this.destination.complete();\n  }\n}","import { async } from '../scheduler/async';\nimport { isDate } from '../util/isDate';\nimport { Operator } from '../Operator';\nimport { IScheduler } from '../Scheduler';\nimport { Subscriber } from '../Subscriber';\nimport { Action } from '../scheduler/Action';\nimport { Notification } from '../Notification';\nimport { Observable } from '../Observable';\nimport { PartialObserver } from '../Observer';\nimport { TeardownLogic } from '../Subscription';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Delays the emission of items from the source Observable by a given timeout or\n * until a given Date.\n *\n * <span class=\"informal\">Time shifts each item by some specified amount of\n * milliseconds.</span>\n *\n * <img src=\"./img/delay.png\" width=\"100%\">\n *\n * If the delay argument is a Number, this operator time shifts the source\n * Observable by that amount of time expressed in milliseconds. The relative\n * time intervals between the values are preserved.\n *\n * If the delay argument is a Date, this operator time shifts the start of the\n * Observable execution until the given date occurs.\n *\n * @example <caption>Delay each click by one second</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var delayedClicks = clicks.delay(1000); // each click emitted after 1 second\n * delayedClicks.subscribe(x => console.log(x));\n *\n * @example <caption>Delay all clicks until a future date happens</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var date = new Date('March 15, 2050 12:00:00'); // in the future\n * var delayedClicks = clicks.delay(date); // click emitted only after that date\n * delayedClicks.subscribe(x => console.log(x));\n *\n * @see {@link debounceTime}\n * @see {@link delayWhen}\n *\n * @param {number|Date} delay The delay duration in milliseconds (a `number`) or\n * a `Date` until which the emission of the source items is delayed.\n * @param {Scheduler} [scheduler=async] The IScheduler to use for\n * managing the timers that handle the time-shift for each item.\n * @return {Observable} An Observable that delays the emissions of the source\n * Observable by the specified timeout or Date.\n * @method delay\n * @owner Observable\n */\nexport function delay<T>(delay: number|Date,\n                         scheduler: IScheduler = async): MonoTypeOperatorFunction<T> {\n  const absoluteDelay = isDate(delay);\n  const delayFor = absoluteDelay ? (+delay - scheduler.now()) : Math.abs(<number>delay);\n  return (source: Observable<T>) => source.lift(new DelayOperator(delayFor, scheduler));\n}\n\nclass DelayOperator<T> implements Operator<T, T> {\n  constructor(private delay: number,\n              private scheduler: IScheduler) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new DelaySubscriber(subscriber, this.delay, this.scheduler));\n  }\n}\n\ninterface DelayState<T> {\n  source: DelaySubscriber<T>;\n  destination: PartialObserver<T>;\n  scheduler: IScheduler;\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass DelaySubscriber<T> extends Subscriber<T> {\n  private queue: Array<DelayMessage<T>> = [];\n  private active: boolean = false;\n  private errored: boolean = false;\n\n  private static dispatch<T>(this: Action<DelayState<T>>, state: DelayState<T>): void {\n    const source = state.source;\n    const queue = source.queue;\n    const scheduler = state.scheduler;\n    const destination = state.destination;\n\n    while (queue.length > 0 && (queue[0].time - scheduler.now()) <= 0) {\n      queue.shift().notification.observe(destination);\n    }\n\n    if (queue.length > 0) {\n      const delay = Math.max(0, queue[0].time - scheduler.now());\n      this.schedule(state, delay);\n    } else {\n      this.unsubscribe();\n      source.active = false;\n    }\n  }\n\n  constructor(destination: Subscriber<T>,\n              private delay: number,\n              private scheduler: IScheduler) {\n    super(destination);\n  }\n\n  private _schedule(scheduler: IScheduler): void {\n    this.active = true;\n    this.add(scheduler.schedule<DelayState<T>>(DelaySubscriber.dispatch, this.delay, {\n      source: this, destination: this.destination, scheduler: scheduler\n    }));\n  }\n\n  private scheduleNotification(notification: Notification<T>): void {\n    if (this.errored === true) {\n      return;\n    }\n\n    const scheduler = this.scheduler;\n    const message = new DelayMessage(scheduler.now() + this.delay, notification);\n    this.queue.push(message);\n\n    if (this.active === false) {\n      this._schedule(scheduler);\n    }\n  }\n\n  protected _next(value: T) {\n    this.scheduleNotification(Notification.createNext(value));\n  }\n\n  protected _error(err: any) {\n    this.errored = true;\n    this.queue = [];\n    this.destination.error(err);\n  }\n\n  protected _complete() {\n    this.scheduleNotification(Notification.createComplete());\n  }\n}\n\nclass DelayMessage<T> {\n  constructor(public readonly time: number,\n              public readonly notification: Notification<T>) {\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { Subscription, TeardownLogic } from '../Subscription';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Delays the emission of items from the source Observable by a given time span\n * determined by the emissions of another Observable.\n *\n * <span class=\"informal\">It's like {@link delay}, but the time span of the\n * delay duration is determined by a second Observable.</span>\n *\n * <img src=\"./img/delayWhen.png\" width=\"100%\">\n *\n * `delayWhen` time shifts each emitted value from the source Observable by a\n * time span determined by another Observable. When the source emits a value,\n * the `delayDurationSelector` function is called with the source value as\n * argument, and should return an Observable, called the \"duration\" Observable.\n * The source value is emitted on the output Observable only when the duration\n * Observable emits a value or completes.\n *\n * Optionally, `delayWhen` takes a second argument, `subscriptionDelay`, which\n * is an Observable. When `subscriptionDelay` emits its first value or\n * completes, the source Observable is subscribed to and starts behaving like\n * described in the previous paragraph. If `subscriptionDelay` is not provided,\n * `delayWhen` will subscribe to the source Observable as soon as the output\n * Observable is subscribed.\n *\n * @example <caption>Delay each click by a random amount of time, between 0 and 5 seconds</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var delayedClicks = clicks.delayWhen(event =>\n *   Rx.Observable.interval(Math.random() * 5000)\n * );\n * delayedClicks.subscribe(x => console.log(x));\n *\n * @see {@link debounce}\n * @see {@link delay}\n *\n * @param {function(value: T): Observable} delayDurationSelector A function that\n * returns an Observable for each value emitted by the source Observable, which\n * is then used to delay the emission of that item on the output Observable\n * until the Observable returned from this function emits a value.\n * @param {Observable} subscriptionDelay An Observable that triggers the\n * subscription to the source Observable once it emits any value.\n * @return {Observable} An Observable that delays the emissions of the source\n * Observable by an amount of time specified by the Observable returned by\n * `delayDurationSelector`.\n * @method delayWhen\n * @owner Observable\n */\nexport function delayWhen<T>(delayDurationSelector: (value: T) => Observable<any>,\n                             subscriptionDelay?: Observable<any>): MonoTypeOperatorFunction<T> {\n  if (subscriptionDelay) {\n    return (source: Observable<T>) =>\n      new SubscriptionDelayObservable(source, subscriptionDelay)\n        .lift(new DelayWhenOperator(delayDurationSelector));\n  }\n  return (source: Observable<T>) => source.lift(new DelayWhenOperator(delayDurationSelector));\n}\n\nclass DelayWhenOperator<T> implements Operator<T, T> {\n  constructor(private delayDurationSelector: (value: T) => Observable<any>) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new DelayWhenSubscriber(subscriber, this.delayDurationSelector));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass DelayWhenSubscriber<T, R> extends OuterSubscriber<T, R> {\n  private completed: boolean = false;\n  private delayNotifierSubscriptions: Array<Subscription> = [];\n  private values: Array<T> = [];\n\n  constructor(destination: Subscriber<T>,\n              private delayDurationSelector: (value: T) => Observable<any>) {\n    super(destination);\n  }\n\n  notifyNext(outerValue: T, innerValue: any,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this.destination.next(outerValue);\n    this.removeSubscription(innerSub);\n    this.tryComplete();\n  }\n\n  notifyError(error: any, innerSub: InnerSubscriber<T, R>): void {\n    this._error(error);\n  }\n\n  notifyComplete(innerSub: InnerSubscriber<T, R>): void {\n    const value = this.removeSubscription(innerSub);\n    if (value) {\n      this.destination.next(value);\n    }\n    this.tryComplete();\n  }\n\n  protected _next(value: T): void {\n    try {\n      const delayNotifier = this.delayDurationSelector(value);\n      if (delayNotifier) {\n        this.tryDelay(delayNotifier, value);\n      }\n    } catch (err) {\n      this.destination.error(err);\n    }\n  }\n\n  protected _complete(): void {\n    this.completed = true;\n    this.tryComplete();\n  }\n\n  private removeSubscription(subscription: InnerSubscriber<T, R>): T {\n    subscription.unsubscribe();\n\n    const subscriptionIdx = this.delayNotifierSubscriptions.indexOf(subscription);\n    let value: T = null;\n\n    if (subscriptionIdx !== -1) {\n      value = this.values[subscriptionIdx];\n      this.delayNotifierSubscriptions.splice(subscriptionIdx, 1);\n      this.values.splice(subscriptionIdx, 1);\n    }\n\n    return value;\n  }\n\n  private tryDelay(delayNotifier: Observable<any>, value: T): void {\n    const notifierSubscription = subscribeToResult(this, delayNotifier, value);\n\n    if (notifierSubscription && !notifierSubscription.closed) {\n      this.add(notifierSubscription);\n      this.delayNotifierSubscriptions.push(notifierSubscription);\n    }\n\n    this.values.push(value);\n  }\n\n  private tryComplete(): void {\n    if (this.completed && this.delayNotifierSubscriptions.length === 0) {\n      this.destination.complete();\n    }\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SubscriptionDelayObservable<T> extends Observable<T> {\n  constructor(/** @deprecated internal use only */ public source: Observable<T>, private subscriptionDelay: Observable<any>) {\n    super();\n  }\n\n  /** @deprecated internal use only */ _subscribe(subscriber: Subscriber<T>) {\n    this.subscriptionDelay.subscribe(new SubscriptionDelaySubscriber(subscriber, this.source));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SubscriptionDelaySubscriber<T> extends Subscriber<T> {\n  private sourceSubscribed: boolean = false;\n\n  constructor(private parent: Subscriber<T>, private source: Observable<T>) {\n    super();\n  }\n\n  protected _next(unused: any) {\n    this.subscribeToSource();\n  }\n\n  protected _error(err: any) {\n    this.unsubscribe();\n    this.parent.error(err);\n  }\n\n  protected _complete() {\n    this.subscribeToSource();\n  }\n\n  private subscribeToSource(): void {\n    if (!this.sourceSubscribed) {\n      this.sourceSubscribed = true;\n      this.unsubscribe();\n      this.source.subscribe(this.parent);\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Notification } from '../Notification';\nimport { OperatorFunction } from '../interfaces';\n\n/**\n * Converts an Observable of {@link Notification} objects into the emissions\n * that they represent.\n *\n * <span class=\"informal\">Unwraps {@link Notification} objects as actual `next`,\n * `error` and `complete` emissions. The opposite of {@link materialize}.</span>\n *\n * <img src=\"./img/dematerialize.png\" width=\"100%\">\n *\n * `dematerialize` is assumed to operate an Observable that only emits\n * {@link Notification} objects as `next` emissions, and does not emit any\n * `error`. Such Observable is the output of a `materialize` operation. Those\n * notifications are then unwrapped using the metadata they contain, and emitted\n * as `next`, `error`, and `complete` on the output Observable.\n *\n * Use this operator in conjunction with {@link materialize}.\n *\n * @example <caption>Convert an Observable of Notifications to an actual Observable</caption>\n * var notifA = new Rx.Notification('N', 'A');\n * var notifB = new Rx.Notification('N', 'B');\n * var notifE = new Rx.Notification('E', void 0,\n *   new TypeError('x.toUpperCase is not a function')\n * );\n * var materialized = Rx.Observable.of(notifA, notifB, notifE);\n * var upperCase = materialized.dematerialize();\n * upperCase.subscribe(x => console.log(x), e => console.error(e));\n *\n * // Results in:\n * // A\n * // B\n * // TypeError: x.toUpperCase is not a function\n *\n * @see {@link Notification}\n * @see {@link materialize}\n *\n * @return {Observable} An Observable that emits items and notifications\n * embedded in Notification objects emitted by the source Observable.\n * @method dematerialize\n * @owner Observable\n */\nexport function dematerialize<T>(): OperatorFunction<Notification<T>, T> {\n  return function dematerializeOperatorFunction(source: Observable<Notification<T>>) {\n    return source.lift(new DeMaterializeOperator());\n  };\n}\n\nclass DeMaterializeOperator<T extends Notification<any>, R> implements Operator<T, R> {\n  call(subscriber: Subscriber<any>, source: any): any {\n    return source.subscribe(new DeMaterializeSubscriber(subscriber));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass DeMaterializeSubscriber<T extends Notification<any>> extends Subscriber<T> {\n  constructor(destination: Subscriber<any>) {\n    super(destination);\n  }\n\n  protected _next(value: T) {\n    value.observe(this.destination);\n  }\n}\n","import { root } from './root';\n\nexport interface ISetCtor {\n  new<T>(): ISet<T>;\n}\n\nexport interface ISet<T> {\n  add(value: T): void;\n  has(value: T): boolean;\n  size: number;\n  clear(): void;\n}\n\nexport function minimalSetImpl<T>(): ISetCtor {\n  // THIS IS NOT a full impl of Set, this is just the minimum\n  // bits of functionality we need for this library.\n  return class MinimalSet<T> implements ISet<T> {\n    private _values: T[] = [];\n\n    add(value: T): void {\n      if (!this.has(value)) {\n        this._values.push(value);\n      }\n    }\n\n    has(value: T): boolean {\n      return this._values.indexOf(value) !== -1;\n    }\n\n    get size(): number {\n      return this._values.length;\n    }\n\n    clear(): void {\n      this._values.length = 0;\n    }\n  };\n}\n\nexport const Set: ISetCtor = root.Set || minimalSetImpl();","import { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { TeardownLogic } from '../Subscription';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { ISet, Set } from '../util/Set';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Returns an Observable that emits all items emitted by the source Observable that are distinct by comparison from previous items.\n *\n * If a keySelector function is provided, then it will project each value from the source observable into a new value that it will\n * check for equality with previously projected values. If a keySelector function is not provided, it will use each value from the\n * source observable directly with an equality check against previous values.\n *\n * In JavaScript runtimes that support `Set`, this operator will use a `Set` to improve performance of the distinct value checking.\n *\n * In other runtimes, this operator will use a minimal implementation of `Set` that relies on an `Array` and `indexOf` under the\n * hood, so performance will degrade as more values are checked for distinction. Even in newer browsers, a long-running `distinct`\n * use might result in memory leaks. To help alleviate this in some scenarios, an optional `flushes` parameter is also provided so\n * that the internal `Set` can be \"flushed\", basically clearing it of values.\n *\n * @example <caption>A simple example with numbers</caption>\n * Observable.of(1, 1, 2, 2, 2, 1, 2, 3, 4, 3, 2, 1)\n *   .distinct()\n *   .subscribe(x => console.log(x)); // 1, 2, 3, 4\n *\n * @example <caption>An example using a keySelector function</caption>\n * interface Person {\n *    age: number,\n *    name: string\n * }\n *\n * Observable.of<Person>(\n *     { age: 4, name: 'Foo'},\n *     { age: 7, name: 'Bar'},\n *     { age: 5, name: 'Foo'})\n *     .distinct((p: Person) => p.name)\n *     .subscribe(x => console.log(x));\n *\n * // displays:\n * // { age: 4, name: 'Foo' }\n * // { age: 7, name: 'Bar' }\n *\n * @see {@link distinctUntilChanged}\n * @see {@link distinctUntilKeyChanged}\n *\n * @param {function} [keySelector] Optional function to select which value you want to check as distinct.\n * @param {Observable} [flushes] Optional Observable for flushing the internal HashSet of the operator.\n * @return {Observable} An Observable that emits items from the source Observable with distinct values.\n * @method distinct\n * @owner Observable\n */\nexport function distinct<T, K>(keySelector?: (value: T) => K,\n                               flushes?: Observable<any>): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new DistinctOperator(keySelector, flushes));\n}\n\nclass DistinctOperator<T, K> implements Operator<T, T> {\n  constructor(private keySelector: (value: T) => K, private flushes: Observable<any>) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new DistinctSubscriber(subscriber, this.keySelector, this.flushes));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class DistinctSubscriber<T, K> extends OuterSubscriber<T, T> {\n  private values: ISet<K> = new Set<K>();\n\n  constructor(destination: Subscriber<T>, private keySelector: (value: T) => K, flushes: Observable<any>) {\n    super(destination);\n\n    if (flushes) {\n      this.add(subscribeToResult(this, flushes));\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: T,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, T>): void {\n    this.values.clear();\n  }\n\n  notifyError(error: any, innerSub: InnerSubscriber<T, T>): void {\n    this._error(error);\n  }\n\n  protected _next(value: T): void {\n    if (this.keySelector) {\n      this._useKeySelector(value);\n    } else {\n      this._finalizeNext(value, value);\n    }\n  }\n\n  private _useKeySelector(value: T): void {\n    let key: K;\n    const { destination } = this;\n    try {\n      key = this.keySelector(value);\n    } catch (err) {\n      destination.error(err);\n      return;\n    }\n    this._finalizeNext(key, value);\n  }\n\n  private _finalizeNext(key: K|T, value: T) {\n    const { values } = this;\n    if (!values.has(<K>key)) {\n      values.add(<K>key);\n      this.destination.next(value);\n    }\n  }\n\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { tryCatch } from '../util/tryCatch';\nimport { errorObject } from '../util/errorObject';\nimport { Observable } from '../Observable';\nimport { TeardownLogic } from '../Subscription';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/* tslint:disable:max-line-length */\nexport function distinctUntilChanged<T>(compare?: (x: T, y: T) => boolean): MonoTypeOperatorFunction<T>;\nexport function distinctUntilChanged<T, K>(compare: (x: K, y: K) => boolean, keySelector: (x: T) => K): MonoTypeOperatorFunction<T>;\n/* tslint:enable:max-line-length */\n\n/**\n * Returns an Observable that emits all items emitted by the source Observable that are distinct by comparison from the previous item.\n *\n * If a comparator function is provided, then it will be called for each item to test for whether or not that value should be emitted.\n *\n * If a comparator function is not provided, an equality check is used by default.\n *\n * @example <caption>A simple example with numbers</caption>\n * Observable.of(1, 1, 2, 2, 2, 1, 1, 2, 3, 3, 4)\n *   .distinctUntilChanged()\n *   .subscribe(x => console.log(x)); // 1, 2, 1, 2, 3, 4\n *\n * @example <caption>An example using a compare function</caption>\n * interface Person {\n *    age: number,\n *    name: string\n * }\n *\n * Observable.of<Person>(\n *     { age: 4, name: 'Foo'},\n *     { age: 7, name: 'Bar'},\n *     { age: 5, name: 'Foo'})\n *     { age: 6, name: 'Foo'})\n *     .distinctUntilChanged((p: Person, q: Person) => p.name === q.name)\n *     .subscribe(x => console.log(x));\n *\n * // displays:\n * // { age: 4, name: 'Foo' }\n * // { age: 7, name: 'Bar' }\n * // { age: 5, name: 'Foo' }\n *\n * @see {@link distinct}\n * @see {@link distinctUntilKeyChanged}\n *\n * @param {function} [compare] Optional comparison function called to test if an item is distinct from the previous item in the source.\n * @return {Observable} An Observable that emits items from the source Observable with distinct values.\n * @method distinctUntilChanged\n * @owner Observable\n */\nexport function distinctUntilChanged<T, K>(compare?: (x: K, y: K) => boolean, keySelector?: (x: T) => K): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new DistinctUntilChangedOperator<T, K>(compare, keySelector));\n}\n\nclass DistinctUntilChangedOperator<T, K> implements Operator<T, T> {\n  constructor(private compare: (x: K, y: K) => boolean,\n              private keySelector: (x: T) => K) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new DistinctUntilChangedSubscriber(subscriber, this.compare, this.keySelector));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass DistinctUntilChangedSubscriber<T, K> extends Subscriber<T> {\n  private key: K;\n  private hasKey: boolean = false;\n\n  constructor(destination: Subscriber<T>,\n              compare: (x: K, y: K) => boolean,\n              private keySelector: (x: T) => K) {\n    super(destination);\n    if (typeof compare === 'function') {\n      this.compare = compare;\n    }\n  }\n\n  private compare(x: any, y: any): boolean {\n    return x === y;\n  }\n\n  protected _next(value: T): void {\n\n    const keySelector = this.keySelector;\n    let key: any = value;\n\n    if (keySelector) {\n      key = tryCatch(this.keySelector)(value);\n      if (key === errorObject) {\n        return this.destination.error(errorObject.e);\n      }\n    }\n\n    let result: any = false;\n\n    if (this.hasKey) {\n      result = tryCatch(this.compare)(this.key, key);\n      if (result === errorObject) {\n        return this.destination.error(errorObject.e);\n      }\n    } else {\n      this.hasKey = true;\n    }\n\n    if (Boolean(result) === false) {\n      this.key = key;\n      this.destination.next(value);\n    }\n  }\n}\n","/**\n * An error thrown when an element was queried at a certain index of an\n * Observable, but no such index or position exists in that sequence.\n *\n * @see {@link elementAt}\n * @see {@link take}\n * @see {@link takeLast}\n *\n * @class ArgumentOutOfRangeError\n */\nexport class ArgumentOutOfRangeError extends Error {\n  constructor() {\n    const err: any = super('argument out of range');\n    (<any> this).name = err.name = 'ArgumentOutOfRangeError';\n    (<any> this).stack = err.stack;\n    (<any> this).message = err.message;\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { ArgumentOutOfRangeError } from '../util/ArgumentOutOfRangeError';\nimport { Observable } from '../Observable';\nimport { TeardownLogic } from '../Subscription';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Emits the single value at the specified `index` in a sequence of emissions\n * from the source Observable.\n *\n * <span class=\"informal\">Emits only the i-th value, then completes.</span>\n *\n * <img src=\"./img/elementAt.png\" width=\"100%\">\n *\n * `elementAt` returns an Observable that emits the item at the specified\n * `index` in the source Observable, or a default value if that `index` is out\n * of range and the `default` argument is provided. If the `default` argument is\n * not given and the `index` is out of range, the output Observable will emit an\n * `ArgumentOutOfRangeError` error.\n *\n * @example <caption>Emit only the third click event</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.elementAt(2);\n * result.subscribe(x => console.log(x));\n *\n * // Results in:\n * // click 1 = nothing\n * // click 2 = nothing\n * // click 3 = MouseEvent object logged to console\n *\n * @see {@link first}\n * @see {@link last}\n * @see {@link skip}\n * @see {@link single}\n * @see {@link take}\n *\n * @throws {ArgumentOutOfRangeError} When using `elementAt(i)`, it delivers an\n * ArgumentOutOrRangeError to the Observer's `error` callback if `i < 0` or the\n * Observable has completed before emitting the i-th `next` notification.\n *\n * @param {number} index Is the number `i` for the i-th source emission that has\n * happened since the subscription, starting from the number `0`.\n * @param {T} [defaultValue] The default value returned for missing indices.\n * @return {Observable} An Observable that emits a single item, if it is found.\n * Otherwise, will emit the default value if given. If not, then emits an error.\n * @method elementAt\n * @owner Observable\n */\nexport function elementAt<T>(index: number, defaultValue?: T): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new ElementAtOperator(index, defaultValue));\n}\n\nclass ElementAtOperator<T> implements Operator<T, T> {\n\n  constructor(private index: number, private defaultValue?: T) {\n    if (index < 0) {\n      throw new ArgumentOutOfRangeError;\n    }\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new ElementAtSubscriber(subscriber, this.index, this.defaultValue));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass ElementAtSubscriber<T> extends Subscriber<T> {\n\n  constructor(destination: Subscriber<T>, private index: number, private defaultValue?: T) {\n    super(destination);\n  }\n\n  protected _next(x: T) {\n    if (this.index-- === 0) {\n      this.destination.next(x);\n      this.destination.complete();\n    }\n  }\n\n  protected _complete() {\n    const destination = this.destination;\n    if (this.index >= 0) {\n      if (typeof this.defaultValue !== 'undefined') {\n        destination.next(this.defaultValue);\n      } else {\n        destination.error(new ArgumentOutOfRangeError);\n      }\n    }\n    destination.complete();\n  }\n}\n","import { Operator } from '../Operator';\nimport { Observer } from '../Observer';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { OperatorFunction } from '../interfaces';\n\n/**\n * Returns an Observable that emits whether or not every item of the source satisfies the condition specified.\n *\n * @example <caption>A simple example emitting true if all elements are less than 5, false otherwise</caption>\n *  Observable.of(1, 2, 3, 4, 5, 6)\n *     .every(x => x < 5)\n *     .subscribe(x => console.log(x)); // -> false\n *\n * @param {function} predicate A function for determining if an item meets a specified condition.\n * @param {any} [thisArg] Optional object to use for `this` in the callback.\n * @return {Observable} An Observable of booleans that determines if all items of the source Observable meet the condition specified.\n * @method every\n * @owner Observable\n */\nexport function every<T>(predicate: (value: T, index: number, source: Observable<T>) => boolean,\n                         thisArg?: any): OperatorFunction<T, boolean> {\n  return (source: Observable<T>) => source.lift(new EveryOperator(predicate, thisArg, source));\n}\n\nclass EveryOperator<T> implements Operator<T, boolean> {\n  constructor(private predicate: (value: T, index: number, source: Observable<T>) => boolean,\n              private thisArg?: any,\n              private source?: Observable<T>) {\n  }\n\n  call(observer: Subscriber<boolean>, source: any): any {\n    return source.subscribe(new EverySubscriber(observer, this.predicate, this.thisArg, this.source));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass EverySubscriber<T> extends Subscriber<T> {\n  private index: number = 0;\n\n  constructor(destination: Observer<boolean>,\n              private predicate: (value: T, index: number, source: Observable<T>) => boolean,\n              private thisArg: any,\n              private source?: Observable<T>) {\n    super(destination);\n    this.thisArg = thisArg || this;\n  }\n\n  private notifyComplete(everyValueMatch: boolean): void {\n    this.destination.next(everyValueMatch);\n    this.destination.complete();\n  }\n\n  protected _next(value: T): void {\n    let result = false;\n    try {\n      result = this.predicate.call(this.thisArg, value, this.index++, this.source);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n\n    if (!result) {\n      this.notifyComplete(false);\n    }\n  }\n\n  protected _complete(): void {\n    this.notifyComplete(true);\n  }\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription, TeardownLogic } from '../Subscription';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Converts a higher-order Observable into a first-order Observable by dropping\n * inner Observables while the previous inner Observable has not yet completed.\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables by dropping the\n * next inner Observables while the current inner is still executing.</span>\n *\n * <img src=\"./img/exhaust.png\" width=\"100%\">\n *\n * `exhaust` subscribes to an Observable that emits Observables, also known as a\n * higher-order Observable. Each time it observes one of these emitted inner\n * Observables, the output Observable begins emitting the items emitted by that\n * inner Observable. So far, it behaves like {@link mergeAll}. However,\n * `exhaust` ignores every new inner Observable if the previous Observable has\n * not yet completed. Once that one completes, it will accept and flatten the\n * next inner Observable and repeat this process.\n *\n * @example <caption>Run a finite timer for each click, only if there is no currently active timer</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var higherOrder = clicks.map((ev) => Rx.Observable.interval(1000).take(5));\n * var result = higherOrder.exhaust();\n * result.subscribe(x => console.log(x));\n *\n * @see {@link combineAll}\n * @see {@link concatAll}\n * @see {@link switch}\n * @see {@link mergeAll}\n * @see {@link exhaustMap}\n * @see {@link zipAll}\n *\n * @return {Observable} An Observable that takes a source of Observables and propagates the first observable\n * exclusively until it completes before subscribing to the next.\n * @method exhaust\n * @owner Observable\n */\nexport function exhaust<T>(): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new SwitchFirstOperator<T>());\n}\n\nclass SwitchFirstOperator<T> implements Operator<T, T> {\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new SwitchFirstSubscriber(subscriber));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SwitchFirstSubscriber<T> extends OuterSubscriber<T, T> {\n  private hasCompleted: boolean = false;\n  private hasSubscription: boolean = false;\n\n  constructor(destination: Subscriber<T>) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    if (!this.hasSubscription) {\n      this.hasSubscription = true;\n      this.add(subscribeToResult(this, value));\n    }\n  }\n\n  protected _complete(): void {\n    this.hasCompleted = true;\n    if (!this.hasSubscription) {\n      this.destination.complete();\n    }\n  }\n\n  notifyComplete(innerSub: Subscription): void {\n    this.remove(innerSub);\n    this.hasSubscription = false;\n    if (this.hasCompleted) {\n      this.destination.complete();\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Observable, ObservableInput } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OperatorFunction } from '../interfaces';\n\n/* tslint:disable:max-line-length */\nexport function exhaustMap<T, R>(project: (value: T, index: number) => ObservableInput<R>): OperatorFunction<T, R>;\nexport function exhaustMap<T, I, R>(project: (value: T, index: number) => ObservableInput<I>, resultSelector: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable only if the previous projected Observable has completed.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link exhaust}.</span>\n *\n * <img src=\"./img/exhaustMap.png\" width=\"100%\">\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an (so-called \"inner\") Observable. When it projects a source value to\n * an Observable, the output Observable begins emitting the items emitted by\n * that projected Observable. However, `exhaustMap` ignores every new projected\n * Observable if the previous projected Observable has not yet completed. Once\n * that one completes, it will accept and flatten the next projected Observable\n * and repeat this process.\n *\n * @example <caption>Run a finite timer for each click, only if there is no currently active timer</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.exhaustMap((ev) => Rx.Observable.interval(1000).take(5));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link concatMap}\n * @see {@link exhaust}\n * @see {@link mergeMap}\n * @see {@link switchMap}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\n * A function to produce the value on the output Observable based on the values\n * and the indices of the source (outer) emission and the inner Observable\n * emission. The arguments passed to this function are:\n * - `outerValue`: the value that came from the source\n * - `innerValue`: the value that came from the projected Observable\n * - `outerIndex`: the \"index\" of the value that came from the source\n * - `innerIndex`: the \"index\" of the value from the projected Observable\n * @return {Observable} An Observable containing projected Observables\n * of each item of the source, ignoring projected Observables that start before\n * their preceding Observable has completed.\n * @method exhaustMap\n * @owner Observable\n */\nexport function exhaustMap<T, I, R>(\n  project: (value: T, index: number) => ObservableInput<I>,\n  resultSelector?: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R\n  ): OperatorFunction<T, R> {\n    return (source: Observable<T>) => source.lift(new SwitchFirstMapOperator(project, resultSelector));\n  }\n\nclass SwitchFirstMapOperator<T, I, R> implements Operator<T, R> {\n  constructor(private project: (value: T, index: number) => ObservableInput<I>,\n              private resultSelector?: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R) {\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new SwitchFirstMapSubscriber(subscriber, this.project, this.resultSelector));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SwitchFirstMapSubscriber<T, I, R> extends OuterSubscriber<T, I> {\n  private hasSubscription: boolean = false;\n  private hasCompleted: boolean = false;\n  private index: number = 0;\n\n  constructor(destination: Subscriber<R>,\n              private project: (value: T, index: number) => ObservableInput<I>,\n              private resultSelector?: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    if (!this.hasSubscription) {\n      this.tryNext(value);\n    }\n  }\n\n  private tryNext(value: T): void {\n    const index = this.index++;\n    const destination = this.destination;\n    try {\n      const result = this.project(value, index);\n      this.hasSubscription = true;\n      this.add(subscribeToResult(this, result, value, index));\n    } catch (err) {\n      destination.error(err);\n    }\n  }\n\n  protected _complete(): void {\n    this.hasCompleted = true;\n    if (!this.hasSubscription) {\n      this.destination.complete();\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: I,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, I>): void {\n    const { resultSelector, destination } = this;\n    if (resultSelector) {\n      this.trySelectResult(outerValue, innerValue, outerIndex, innerIndex);\n    } else {\n      destination.next(innerValue);\n    }\n  }\n\n  private trySelectResult(outerValue: T, innerValue: I,\n                          outerIndex: number, innerIndex: number): void {\n    const { resultSelector, destination } = this;\n    try {\n      const result = resultSelector(outerValue, innerValue, outerIndex, innerIndex);\n      destination.next(result);\n    } catch (err) {\n      destination.error(err);\n    }\n  }\n\n  notifyError(err: any): void {\n    this.destination.error(err);\n  }\n\n  notifyComplete(innerSub: Subscription): void {\n    this.remove(innerSub);\n\n    this.hasSubscription = false;\n    if (this.hasCompleted) {\n      this.destination.complete();\n    }\n  }\n}\n","import { Observable } from '../Observable';\nimport { IScheduler } from '../Scheduler';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { tryCatch } from '../util/tryCatch';\nimport { errorObject } from '../util/errorObject';\nimport { Subscription } from '../Subscription';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { MonoTypeOperatorFunction, OperatorFunction } from '../interfaces';\n\n/* tslint:disable:max-line-length */\nexport function expand<T>(project: (value: T, index: number) => Observable<T>, concurrent?: number, scheduler?: IScheduler): MonoTypeOperatorFunction<T>;\nexport function expand<T, R>(project: (value: T, index: number) => Observable<R>, concurrent?: number, scheduler?: IScheduler): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Recursively projects each source value to an Observable which is merged in\n * the output Observable.\n *\n * <span class=\"informal\">It's similar to {@link mergeMap}, but applies the\n * projection function to every source value as well as every output value.\n * It's recursive.</span>\n *\n * <img src=\"./img/expand.png\" width=\"100%\">\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an Observable, and then merging those resulting Observables and\n * emitting the results of this merger. *Expand* will re-emit on the output\n * Observable every source value. Then, each output value is given to the\n * `project` function which returns an inner Observable to be merged on the\n * output Observable. Those output values resulting from the projection are also\n * given to the `project` function to produce new output values. This is how\n * *expand* behaves recursively.\n *\n * @example <caption>Start emitting the powers of two on every click, at most 10 of them</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var powersOfTwo = clicks\n *   .mapTo(1)\n *   .expand(x => Rx.Observable.of(2 * x).delay(1000))\n *   .take(10);\n * powersOfTwo.subscribe(x => console.log(x));\n *\n * @see {@link mergeMap}\n * @see {@link mergeScan}\n *\n * @param {function(value: T, index: number) => Observable} project A function\n * that, when applied to an item emitted by the source or the output Observable,\n * returns an Observable.\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @param {Scheduler} [scheduler=null] The IScheduler to use for subscribing to\n * each projected inner Observable.\n * @return {Observable} An Observable that emits the source values and also\n * result of applying the projection function to each value emitted on the\n * output Observable and and merging the results of the Observables obtained\n * from this transformation.\n * @method expand\n * @owner Observable\n */\nexport function expand<T, R>(project: (value: T, index: number) => Observable<R>,\n                             concurrent: number = Number.POSITIVE_INFINITY,\n                             scheduler: IScheduler = undefined): OperatorFunction<T, R> {\n  concurrent = (concurrent || 0) < 1 ? Number.POSITIVE_INFINITY : concurrent;\n\n  return (source: Observable<T>) => source.lift(new ExpandOperator(project, concurrent, scheduler));\n}\n\nexport class ExpandOperator<T, R> implements Operator<T, R> {\n  constructor(private project: (value: T, index: number) => Observable<R>,\n              private concurrent: number,\n              private scheduler: IScheduler) {\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new ExpandSubscriber(subscriber, this.project, this.concurrent, this.scheduler));\n  }\n}\n\ninterface DispatchArg<T, R> {\n  subscriber: ExpandSubscriber<T, R>;\n  result: Observable<R>;\n  value: any;\n  index: number;\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class ExpandSubscriber<T, R> extends OuterSubscriber<T, R> {\n  private index: number = 0;\n  private active: number = 0;\n  private hasCompleted: boolean = false;\n  private buffer: any[];\n\n  constructor(destination: Subscriber<R>,\n              private project: (value: T, index: number) => Observable<R>,\n              private concurrent: number,\n              private scheduler: IScheduler) {\n    super(destination);\n    if (concurrent < Number.POSITIVE_INFINITY) {\n      this.buffer = [];\n    }\n  }\n\n  private static dispatch<T, R>(arg: DispatchArg<T, R>): void {\n    const {subscriber, result, value, index} = arg;\n    subscriber.subscribeToProjection(result, value, index);\n  }\n\n  protected _next(value: any): void {\n    const destination = this.destination;\n\n    if (destination.closed) {\n      this._complete();\n      return;\n    }\n\n    const index = this.index++;\n    if (this.active < this.concurrent) {\n      destination.next(value);\n      let result = tryCatch(this.project)(value, index);\n      if (result === errorObject) {\n        destination.error(errorObject.e);\n      } else if (!this.scheduler) {\n        this.subscribeToProjection(result, value, index);\n      } else {\n        const state: DispatchArg<T, R> = { subscriber: this, result, value, index };\n        this.add(this.scheduler.schedule(ExpandSubscriber.dispatch, 0, state));\n      }\n    } else {\n      this.buffer.push(value);\n    }\n  }\n\n  private subscribeToProjection(result: any, value: T, index: number): void {\n    this.active++;\n    this.add(subscribeToResult<T, R>(this, result, value, index));\n  }\n\n  protected _complete(): void {\n    this.hasCompleted = true;\n    if (this.hasCompleted && this.active === 0) {\n      this.destination.complete();\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this._next(innerValue);\n  }\n\n  notifyComplete(innerSub: Subscription): void {\n    const buffer = this.buffer;\n    this.remove(innerSub);\n    this.active--;\n    if (buffer && buffer.length > 0) {\n      this._next(buffer.shift());\n    }\n    if (this.hasCompleted && this.active === 0) {\n      this.destination.complete();\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { TeardownLogic } from '../Subscription';\nimport { OperatorFunction, MonoTypeOperatorFunction } from '../interfaces';\n\n/* tslint:disable:max-line-length */\nexport function filter<T, S extends T>(predicate: (value: T, index: number) => value is S,\n                                       thisArg?: any): OperatorFunction<T, S>;\nexport function filter<T>(predicate: (value: T, index: number) => boolean,\n                          thisArg?: any): MonoTypeOperatorFunction<T>;\n/* tslint:enable:max-line-length */\n\n/**\n * Filter items emitted by the source Observable by only emitting those that\n * satisfy a specified predicate.\n *\n * <span class=\"informal\">Like\n * [Array.prototype.filter()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter),\n * it only emits a value from the source if it passes a criterion function.</span>\n *\n * <img src=\"./img/filter.png\" width=\"100%\">\n *\n * Similar to the well-known `Array.prototype.filter` method, this operator\n * takes values from the source Observable, passes them through a `predicate`\n * function and only emits those values that yielded `true`.\n *\n * @example <caption>Emit only click events whose target was a DIV element</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var clicksOnDivs = clicks.filter(ev => ev.target.tagName === 'DIV');\n * clicksOnDivs.subscribe(x => console.log(x));\n *\n * @see {@link distinct}\n * @see {@link distinctUntilChanged}\n * @see {@link distinctUntilKeyChanged}\n * @see {@link ignoreElements}\n * @see {@link partition}\n * @see {@link skip}\n *\n * @param {function(value: T, index: number): boolean} predicate A function that\n * evaluates each value emitted by the source Observable. If it returns `true`,\n * the value is emitted, if `false` the value is not passed to the output\n * Observable. The `index` parameter is the number `i` for the i-th source\n * emission that has happened since the subscription, starting from the number\n * `0`.\n * @param {any} [thisArg] An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return {Observable} An Observable of values from the source that were\n * allowed by the `predicate` function.\n * @method filter\n * @owner Observable\n */\nexport function filter<T>(predicate: (value: T, index: number) => boolean,\n                          thisArg?: any): MonoTypeOperatorFunction<T> {\n  return function filterOperatorFunction(source: Observable<T>): Observable<T> {\n    return source.lift(new FilterOperator(predicate, thisArg));\n  };\n}\n\nclass FilterOperator<T> implements Operator<T, T> {\n  constructor(private predicate: (value: T, index: number) => boolean,\n              private thisArg?: any) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new FilterSubscriber(subscriber, this.predicate, this.thisArg));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass FilterSubscriber<T> extends Subscriber<T> {\n\n  count: number = 0;\n\n  constructor(destination: Subscriber<T>,\n              private predicate: (value: T, index: number) => boolean,\n              private thisArg: any) {\n    super(destination);\n  }\n\n  // the try catch block below is left specifically for\n  // optimization and perf reasons. a tryCatcher is not necessary here.\n  protected _next(value: T) {\n    let result: any;\n    try {\n      result = this.predicate.call(this.thisArg, value, this.count++);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    if (result) {\n      this.destination.next(value);\n    }\n  }\n}","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription, TeardownLogic } from '../Subscription';\nimport { Observable } from '../Observable';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Returns an Observable that mirrors the source Observable, but will call a specified function when\n * the source terminates on complete or error.\n * @param {function} callback Function to be called when source terminates.\n * @return {Observable} An Observable that mirrors the source, but will call the specified function on termination.\n * @method finally\n * @owner Observable\n */\nexport function finalize<T>(callback: () => void): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new FinallyOperator(callback));\n}\n\nclass FinallyOperator<T> implements Operator<T, T> {\n  constructor(private callback: () => void) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new FinallySubscriber(subscriber, this.callback));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass FinallySubscriber<T> extends Subscriber<T> {\n  constructor(destination: Subscriber<T>, callback: () => void) {\n    super(destination);\n    this.add(new Subscription(callback));\n  }\n}\n","import { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { OperatorFunction, MonoTypeOperatorFunction } from '../interfaces';\n\nexport function find<T, S extends T>(predicate: (value: T, index: number, source: Observable<T>) => value is S,\n                                     thisArg?: any): OperatorFunction<T, S>;\nexport function find<T, S extends T>(predicate: (value: T, index: number) => value is S,\n                                     thisArg?: any): OperatorFunction<T, S>;\nexport function find<T>(predicate: (value: T, index: number, source: Observable<T>) => boolean,\n                        thisArg?: any): MonoTypeOperatorFunction<T>;\nexport function find<T>(predicate: (value: T, index: number) => boolean,\n                        thisArg?: any): MonoTypeOperatorFunction<T>;\n/**\n * Emits only the first value emitted by the source Observable that meets some\n * condition.\n *\n * <span class=\"informal\">Finds the first value that passes some test and emits\n * that.</span>\n *\n * <img src=\"./img/find.png\" width=\"100%\">\n *\n * `find` searches for the first item in the source Observable that matches the\n * specified condition embodied by the `predicate`, and returns the first\n * occurrence in the source. Unlike {@link first}, the `predicate` is required\n * in `find`, and does not emit an error if a valid value is not found.\n *\n * @example <caption>Find and emit the first click that happens on a DIV element</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.find(ev => ev.target.tagName === 'DIV');\n * result.subscribe(x => console.log(x));\n *\n * @see {@link filter}\n * @see {@link first}\n * @see {@link findIndex}\n * @see {@link take}\n *\n * @param {function(value: T, index: number, source: Observable<T>): boolean} predicate\n * A function called with each item to test for condition matching.\n * @param {any} [thisArg] An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return {Observable<T>} An Observable of the first item that matches the\n * condition.\n * @method find\n * @owner Observable\n */\nexport function find<T>(predicate: (value: T, index: number, source: Observable<T>) => boolean,\n                        thisArg?: any): MonoTypeOperatorFunction<T> {\n  if (typeof predicate !== 'function') {\n    throw new TypeError('predicate is not a function');\n  }\n  return (source: Observable<T>) => source.lift(new FindValueOperator(predicate, source, false, thisArg));\n}\n\nexport class FindValueOperator<T> implements Operator<T, T> {\n  constructor(private predicate: (value: T, index: number, source: Observable<T>) => boolean,\n              private source: Observable<T>,\n              private yieldIndex: boolean,\n              private thisArg?: any) {\n  }\n\n  call(observer: Subscriber<T>, source: any): any {\n    return source.subscribe(new FindValueSubscriber(observer, this.predicate, this.source, this.yieldIndex, this.thisArg));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class FindValueSubscriber<T> extends Subscriber<T> {\n  private index: number = 0;\n\n  constructor(destination: Subscriber<T>,\n              private predicate: (value: T, index: number, source: Observable<T>) => boolean,\n              private source: Observable<T>,\n              private yieldIndex: boolean,\n              private thisArg?: any) {\n    super(destination);\n  }\n\n  private notifyComplete(value: any): void {\n    const destination = this.destination;\n\n    destination.next(value);\n    destination.complete();\n  }\n\n  protected _next(value: T): void {\n    const { predicate, thisArg } = this;\n    const index = this.index++;\n    try {\n      const result = predicate.call(thisArg || this, value, index, this.source);\n      if (result) {\n        this.notifyComplete(this.yieldIndex ? index : value);\n      }\n    } catch (err) {\n      this.destination.error(err);\n    }\n  }\n\n  protected _complete(): void {\n    this.notifyComplete(this.yieldIndex ? -1 : undefined);\n  }\n}\n","/**\n * An error thrown when an Observable or a sequence was queried but has no\n * elements.\n *\n * @see {@link first}\n * @see {@link last}\n * @see {@link single}\n *\n * @class EmptyError\n */\nexport class EmptyError extends Error {\n  constructor() {\n    const err: any = super('no elements in sequence');\n    (<any> this).name = err.name = 'EmptyError';\n    (<any> this).stack = err.stack;\n    (<any> this).message = err.message;\n  }\n}\n","import { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { EmptyError } from '../util/EmptyError';\nimport { OperatorFunction, MonoTypeOperatorFunction } from '../interfaces';\n/* tslint:disable:max-line-length */\nexport function first<T, S extends T>(predicate: (value: T, index: number, source: Observable<T>) => value is S): OperatorFunction<T, S>;\nexport function first<T, S extends T, R>(predicate: (value: T | S, index: number, source: Observable<T>) => value is S,\n                                         resultSelector: (value: S, index: number) => R, defaultValue?: R): OperatorFunction<T, R>;\nexport function first<T, S extends T>(predicate: (value: T, index: number, source: Observable<T>) => value is S,\n                                      resultSelector: void,\n                                      defaultValue?: S): OperatorFunction<T, S>;\nexport function first<T>(predicate?: (value: T, index: number, source: Observable<T>) => boolean): MonoTypeOperatorFunction<T>;\nexport function first<T, R>(predicate: (value: T, index: number, source: Observable<T>) => boolean,\n                            resultSelector?: (value: T, index: number) => R,\n                            defaultValue?: R): OperatorFunction<T, R>;\nexport function first<T>(predicate: (value: T, index: number, source: Observable<T>) => boolean,\n                         resultSelector: void,\n                         defaultValue?: T): MonoTypeOperatorFunction<T>;\n\n/**\n * Emits only the first value (or the first value that meets some condition)\n * emitted by the source Observable.\n *\n * <span class=\"informal\">Emits only the first value. Or emits only the first\n * value that passes some test.</span>\n *\n * <img src=\"./img/first.png\" width=\"100%\">\n *\n * If called with no arguments, `first` emits the first value of the source\n * Observable, then completes. If called with a `predicate` function, `first`\n * emits the first value of the source that matches the specified condition. It\n * may also take a `resultSelector` function to produce the output value from\n * the input value, and a `defaultValue` to emit in case the source completes\n * before it is able to emit a valid value. Throws an error if `defaultValue`\n * was not provided and a matching element is not found.\n *\n * @example <caption>Emit only the first click that happens on the DOM</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.first();\n * result.subscribe(x => console.log(x));\n *\n * @example <caption>Emits the first click that happens on a DIV</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.first(ev => ev.target.tagName === 'DIV');\n * result.subscribe(x => console.log(x));\n *\n * @see {@link filter}\n * @see {@link find}\n * @see {@link take}\n *\n * @throws {EmptyError} Delivers an EmptyError to the Observer's `error`\n * callback if the Observable completes before any `next` notification was sent.\n *\n * @param {function(value: T, index: number, source: Observable<T>): boolean} [predicate]\n * An optional function called with each item to test for condition matching.\n * @param {function(value: T, index: number): R} [resultSelector] A function to\n * produce the value on the output Observable based on the values\n * and the indices of the source Observable. The arguments passed to this\n * function are:\n * - `value`: the value that was emitted on the source.\n * - `index`: the \"index\" of the value from the source.\n * @param {R} [defaultValue] The default value emitted in case no valid value\n * was found on the source.\n * @return {Observable<T|R>} An Observable of the first item that matches the\n * condition.\n * @method first\n * @owner Observable\n */\nexport function first<T, R>(predicate?: (value: T, index: number, source: Observable<T>) => boolean,\n                            resultSelector?: ((value: T, index: number) => R) | void,\n                            defaultValue?: R): OperatorFunction<T, T | R> {\n  return (source: Observable<T>) => source.lift(new FirstOperator(predicate, resultSelector, defaultValue, source));\n}\n\nclass FirstOperator<T, R> implements Operator<T, R> {\n  constructor(private predicate?: (value: T, index: number, source: Observable<T>) => boolean,\n              private resultSelector?: ((value: T, index: number) => R) | void,\n              private defaultValue?: any,\n              private source?: Observable<T>) {\n  }\n\n  call(observer: Subscriber<R>, source: any): any {\n    return source.subscribe(new FirstSubscriber(observer, this.predicate, this.resultSelector, this.defaultValue, this.source));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass FirstSubscriber<T, R> extends Subscriber<T> {\n  private index: number = 0;\n  private hasCompleted: boolean = false;\n  private _emitted: boolean = false;\n\n  constructor(destination: Subscriber<R>,\n              private predicate?: (value: T, index: number, source: Observable<T>) => boolean,\n              private resultSelector?: ((value: T, index: number) => R) | void,\n              private defaultValue?: any,\n              private source?: Observable<T>) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    const index = this.index++;\n    if (this.predicate) {\n      this._tryPredicate(value, index);\n    } else {\n      this._emit(value, index);\n    }\n  }\n\n  private _tryPredicate(value: T, index: number) {\n    let result: any;\n    try {\n      result = this.predicate(value, index, this.source);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    if (result) {\n      this._emit(value, index);\n    }\n  }\n\n  private _emit(value: any, index: number) {\n    if (this.resultSelector) {\n      this._tryResultSelector(value, index);\n      return;\n    }\n    this._emitFinal(value);\n  }\n\n  private _tryResultSelector(value: T, index: number) {\n    let result: any;\n    try {\n      result = (<any>this).resultSelector(value, index);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    this._emitFinal(result);\n  }\n\n  private _emitFinal(value: any) {\n    const destination = this.destination;\n    if (!this._emitted) {\n      this._emitted = true;\n      destination.next(value);\n      destination.complete();\n      this.hasCompleted = true;\n    }\n  }\n\n  protected _complete(): void {\n    const destination = this.destination;\n    if (!this.hasCompleted && typeof this.defaultValue !== 'undefined') {\n      destination.next(this.defaultValue);\n      destination.complete();\n    } else if (!this.hasCompleted) {\n      destination.error(new EmptyError);\n    }\n  }\n}\n","/**\n * An error thrown when an action is invalid because the object has been\n * unsubscribed.\n *\n * @see {@link Subject}\n * @see {@link BehaviorSubject}\n *\n * @class ObjectUnsubscribedError\n */\nexport class ObjectUnsubscribedError extends Error {\n  constructor() {\n    const err: any = super('object unsubscribed');\n    (<any> this).name = err.name = 'ObjectUnsubscribedError';\n    (<any> this).stack = err.stack;\n    (<any> this).message = err.message;\n  }\n}\n","import { Subject } from './Subject';\nimport { Observer } from './Observer';\nimport { Subscription } from './Subscription';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class SubjectSubscription<T> extends Subscription {\n  closed: boolean = false;\n\n  constructor(public subject: Subject<T>, public subscriber: Observer<T>) {\n    super();\n  }\n\n  unsubscribe() {\n    if (this.closed) {\n      return;\n    }\n\n    this.closed = true;\n\n    const subject = this.subject;\n    const observers = subject.observers;\n\n    this.subject = null;\n\n    if (!observers || observers.length === 0 || subject.isStopped || subject.closed) {\n      return;\n    }\n\n    const subscriberIndex = observers.indexOf(this.subscriber);\n\n    if (subscriberIndex !== -1) {\n      observers.splice(subscriberIndex, 1);\n    }\n  }\n}\n","import { Operator } from './Operator';\nimport { Observer } from './Observer';\nimport { Observable } from './Observable';\nimport { Subscriber } from './Subscriber';\nimport { ISubscription, Subscription, TeardownLogic } from './Subscription';\nimport { ObjectUnsubscribedError } from './util/ObjectUnsubscribedError';\nimport { SubjectSubscription } from './SubjectSubscription';\nimport { rxSubscriber as rxSubscriberSymbol } from './symbol/rxSubscriber';\n\n/**\n * @class SubjectSubscriber<T>\n */\nexport class SubjectSubscriber<T> extends Subscriber<T> {\n  constructor(protected destination: Subject<T>) {\n    super(destination);\n  }\n}\n\n/**\n * @class Subject<T>\n */\nexport class Subject<T> extends Observable<T> implements ISubscription {\n\n  [rxSubscriberSymbol]() {\n    return new SubjectSubscriber(this);\n  }\n\n  observers: Observer<T>[] = [];\n\n  closed = false;\n\n  isStopped = false;\n\n  hasError = false;\n\n  thrownError: any = null;\n\n  constructor() {\n    super();\n  }\n\n  static create: Function = <T>(destination: Observer<T>, source: Observable<T>): AnonymousSubject<T> => {\n    return new AnonymousSubject<T>(destination, source);\n  }\n\n  lift<R>(operator: Operator<T, R>): Observable<R> {\n    const subject = new AnonymousSubject(this, this);\n    subject.operator = <any>operator;\n    return <any>subject;\n  }\n\n  next(value?: T) {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    }\n    if (!this.isStopped) {\n      const { observers } = this;\n      const len = observers.length;\n      const copy = observers.slice();\n      for (let i = 0; i < len; i++) {\n        copy[i].next(value);\n      }\n    }\n  }\n\n  error(err: any) {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    }\n    this.hasError = true;\n    this.thrownError = err;\n    this.isStopped = true;\n    const { observers } = this;\n    const len = observers.length;\n    const copy = observers.slice();\n    for (let i = 0; i < len; i++) {\n      copy[i].error(err);\n    }\n    this.observers.length = 0;\n  }\n\n  complete() {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    }\n    this.isStopped = true;\n    const { observers } = this;\n    const len = observers.length;\n    const copy = observers.slice();\n    for (let i = 0; i < len; i++) {\n      copy[i].complete();\n    }\n    this.observers.length = 0;\n  }\n\n  unsubscribe() {\n    this.isStopped = true;\n    this.closed = true;\n    this.observers = null;\n  }\n\n  protected _trySubscribe(subscriber: Subscriber<T>): TeardownLogic {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    } else {\n      return super._trySubscribe(subscriber);\n    }\n  }\n\n  /** @deprecated internal use only */ _subscribe(subscriber: Subscriber<T>): Subscription {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    } else if (this.hasError) {\n      subscriber.error(this.thrownError);\n      return Subscription.EMPTY;\n    } else if (this.isStopped) {\n      subscriber.complete();\n      return Subscription.EMPTY;\n    } else {\n      this.observers.push(subscriber);\n      return new SubjectSubscription(this, subscriber);\n    }\n  }\n\n  asObservable(): Observable<T> {\n    const observable = new Observable<T>();\n    (<any>observable).source = this;\n    return observable;\n  }\n}\n\n/**\n * @class AnonymousSubject<T>\n */\nexport class AnonymousSubject<T> extends Subject<T> {\n  constructor(protected destination?: Observer<T>, source?: Observable<T>) {\n    super();\n    this.source = source;\n  }\n\n  next(value: T) {\n    const { destination } = this;\n    if (destination && destination.next) {\n      destination.next(value);\n    }\n  }\n\n  error(err: any) {\n    const { destination } = this;\n    if (destination && destination.error) {\n      this.destination.error(err);\n    }\n  }\n\n  complete() {\n    const { destination } = this;\n    if (destination && destination.complete) {\n      this.destination.complete();\n    }\n  }\n\n  /** @deprecated internal use only */ _subscribe(subscriber: Subscriber<T>): Subscription {\n    const { source } = this;\n    if (source) {\n      return this.source.subscribe(subscriber);\n    } else {\n      return Subscription.EMPTY;\n    }\n  }\n}\n","export class MapPolyfill {\n  public size = 0;\n  private _values: any[] = [];\n  private _keys: any[] = [];\n\n  get(key: any) {\n    const i = this._keys.indexOf(key);\n    return i === -1 ? undefined : this._values[i];\n  }\n\n  set(key: any, value: any) {\n    const i = this._keys.indexOf(key);\n    if (i === -1) {\n      this._keys.push(key);\n      this._values.push(value);\n      this.size++;\n    } else {\n      this._values[i] = value;\n    }\n    return this;\n  }\n\n  delete(key: any): boolean {\n    const i = this._keys.indexOf(key);\n    if (i === -1) { return false; }\n    this._values.splice(i, 1);\n    this._keys.splice(i, 1);\n    this.size--;\n    return true;\n  }\n\n  clear(): void {\n    this._keys.length = 0;\n    this._values.length = 0;\n    this.size = 0;\n  }\n\n  forEach(cb: Function, thisArg: any): void {\n    for (let i = 0; i < this.size; i++) {\n      cb.call(thisArg, this._values[i], this._keys[i]);\n    }\n  }\n}","import { root } from './root';\nimport { MapPolyfill } from './MapPolyfill';\n\nexport const Map = root.Map || (() => MapPolyfill)();","export class FastMap {\n  private values: Object = {};\n\n  delete(key: string): boolean {\n    this.values[key] = null;\n    return true;\n  }\n\n  set(key: string, value: any): FastMap {\n    this.values[key] = value;\n    return this;\n  }\n\n  get(key: string): any {\n    return this.values[key];\n  }\n\n  forEach(cb: (value: any, key: any) => void, thisArg?: any): void {\n    const values = this.values;\n    for (let key in values) {\n      if (values.hasOwnProperty(key) && values[key] !== null) {\n        cb.call(thisArg, values[key], key);\n      }\n    }\n  }\n\n  clear(): void {\n    this.values = {};\n  }\n}","import { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Subject } from '../Subject';\nimport { Map } from '../util/Map';\nimport { FastMap } from '../util/FastMap';\nimport { OperatorFunction } from '../interfaces';\n\n/* tslint:disable:max-line-length */\nexport function groupBy<T, K>(keySelector: (value: T) => K): OperatorFunction<T, GroupedObservable<K, T>>;\nexport function groupBy<T, K>(keySelector: (value: T) => K, elementSelector: void, durationSelector: (grouped: GroupedObservable<K, T>) => Observable<any>): OperatorFunction<T, GroupedObservable<K, T>>;\nexport function groupBy<T, K, R>(keySelector: (value: T) => K, elementSelector?: (value: T) => R, durationSelector?: (grouped: GroupedObservable<K, R>) => Observable<any>): OperatorFunction<T, GroupedObservable<K, R>>;\nexport function groupBy<T, K, R>(keySelector: (value: T) => K, elementSelector?: (value: T) => R, durationSelector?: (grouped: GroupedObservable<K, R>) => Observable<any>, subjectSelector?: () => Subject<R>): OperatorFunction<T, GroupedObservable<K, R>>;\n/* tslint:enable:max-line-length */\n\n/**\n * Groups the items emitted by an Observable according to a specified criterion,\n * and emits these grouped items as `GroupedObservables`, one\n * {@link GroupedObservable} per group.\n *\n * <img src=\"./img/groupBy.png\" width=\"100%\">\n *\n * @example <caption>Group objects by id and return as array</caption>\n * Observable.of<Obj>({id: 1, name: 'aze1'},\n *                    {id: 2, name: 'sf2'},\n *                    {id: 2, name: 'dg2'},\n *                    {id: 1, name: 'erg1'},\n *                    {id: 1, name: 'df1'},\n *                    {id: 2, name: 'sfqfb2'},\n *                    {id: 3, name: 'qfs3'},\n *                    {id: 2, name: 'qsgqsfg2'}\n *     )\n *     .groupBy(p => p.id)\n *     .flatMap( (group$) => group$.reduce((acc, cur) => [...acc, cur], []))\n *     .subscribe(p => console.log(p));\n *\n * // displays:\n * // [ { id: 1, name: 'aze1' },\n * //   { id: 1, name: 'erg1' },\n * //   { id: 1, name: 'df1' } ]\n * //\n * // [ { id: 2, name: 'sf2' },\n * //   { id: 2, name: 'dg2' },\n * //   { id: 2, name: 'sfqfb2' },\n * //   { id: 2, name: 'qsgqsfg2' } ]\n * //\n * // [ { id: 3, name: 'qfs3' } ]\n *\n * @example <caption>Pivot data on the id field</caption>\n * Observable.of<Obj>({id: 1, name: 'aze1'},\n *                    {id: 2, name: 'sf2'},\n *                    {id: 2, name: 'dg2'},\n *                    {id: 1, name: 'erg1'},\n *                    {id: 1, name: 'df1'},\n *                    {id: 2, name: 'sfqfb2'},\n *                    {id: 3, name: 'qfs1'},\n *                    {id: 2, name: 'qsgqsfg2'}\n *                   )\n *     .groupBy(p => p.id, p => p.name)\n *     .flatMap( (group$) => group$.reduce((acc, cur) => [...acc, cur], [\"\" + group$.key]))\n *     .map(arr => ({'id': parseInt(arr[0]), 'values': arr.slice(1)}))\n *     .subscribe(p => console.log(p));\n *\n * // displays:\n * // { id: 1, values: [ 'aze1', 'erg1', 'df1' ] }\n * // { id: 2, values: [ 'sf2', 'dg2', 'sfqfb2', 'qsgqsfg2' ] }\n * // { id: 3, values: [ 'qfs1' ] }\n *\n * @param {function(value: T): K} keySelector A function that extracts the key\n * for each item.\n * @param {function(value: T): R} [elementSelector] A function that extracts the\n * return element for each item.\n * @param {function(grouped: GroupedObservable<K,R>): Observable<any>} [durationSelector]\n * A function that returns an Observable to determine how long each group should\n * exist.\n * @return {Observable<GroupedObservable<K,R>>} An Observable that emits\n * GroupedObservables, each of which corresponds to a unique key value and each\n * of which emits those items from the source Observable that share that key\n * value.\n * @method groupBy\n * @owner Observable\n */\nexport function groupBy<T, K, R>(keySelector: (value: T) => K,\n                                 elementSelector?: ((value: T) => R) | void,\n                                 durationSelector?: (grouped: GroupedObservable<K, R>) => Observable<any>,\n                                 subjectSelector?: () => Subject<R>): OperatorFunction<T, GroupedObservable<K, R>> {\n  return (source: Observable<T>) =>\n    source.lift(new GroupByOperator(keySelector, elementSelector, durationSelector, subjectSelector));\n}\n\nexport interface RefCountSubscription {\n  count: number;\n  unsubscribe: () => void;\n  closed: boolean;\n  attemptedToUnsubscribe: boolean;\n}\n\nclass GroupByOperator<T, K, R> implements Operator<T, GroupedObservable<K, R>> {\n  constructor(private keySelector: (value: T) => K,\n              private elementSelector?: ((value: T) => R) | void,\n              private durationSelector?: (grouped: GroupedObservable<K, R>) => Observable<any>,\n              private subjectSelector?: () => Subject<R>) {\n  }\n\n  call(subscriber: Subscriber<GroupedObservable<K, R>>, source: any): any {\n    return source.subscribe(new GroupBySubscriber(\n      subscriber, this.keySelector, this.elementSelector, this.durationSelector, this.subjectSelector\n    ));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass GroupBySubscriber<T, K, R> extends Subscriber<T> implements RefCountSubscription {\n  private groups: Map<K, Subject<T|R>> = null;\n  public attemptedToUnsubscribe: boolean = false;\n  public count: number = 0;\n\n  constructor(destination: Subscriber<GroupedObservable<K, R>>,\n              private keySelector: (value: T) => K,\n              private elementSelector?: ((value: T) => R) | void,\n              private durationSelector?: (grouped: GroupedObservable<K, R>) => Observable<any>,\n              private subjectSelector?: () => Subject<R>) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    let key: K;\n    try {\n      key = this.keySelector(value);\n    } catch (err) {\n      this.error(err);\n      return;\n    }\n\n    this._group(value, key);\n  }\n\n  private _group(value: T, key: K) {\n    let groups = this.groups;\n\n    if (!groups) {\n      groups = this.groups = typeof key === 'string' ? new FastMap() : new Map();\n    }\n\n    let group = groups.get(key);\n\n    let element: R;\n    if (this.elementSelector) {\n      try {\n        element = this.elementSelector(value);\n      } catch (err) {\n        this.error(err);\n      }\n    } else {\n      element = <any>value;\n    }\n\n    if (!group) {\n      group = this.subjectSelector ? this.subjectSelector() : new Subject<R>();\n      groups.set(key, group);\n      const groupedObservable = new GroupedObservable(key, group, this);\n      this.destination.next(groupedObservable);\n      if (this.durationSelector) {\n        let duration: any;\n        try {\n          duration = this.durationSelector(new GroupedObservable<K, R>(key, <Subject<R>>group));\n        } catch (err) {\n          this.error(err);\n          return;\n        }\n        this.add(duration.subscribe(new GroupDurationSubscriber(key, group, this)));\n      }\n    }\n\n    if (!group.closed) {\n      group.next(element);\n    }\n  }\n\n  protected _error(err: any): void {\n    const groups = this.groups;\n    if (groups) {\n      groups.forEach((group, key) => {\n        group.error(err);\n      });\n\n      groups.clear();\n    }\n    this.destination.error(err);\n  }\n\n  protected _complete(): void {\n    const groups = this.groups;\n    if (groups) {\n      groups.forEach((group, key) => {\n        group.complete();\n      });\n\n      groups.clear();\n    }\n    this.destination.complete();\n  }\n\n  removeGroup(key: K): void {\n    this.groups.delete(key);\n  }\n\n  unsubscribe() {\n    if (!this.closed) {\n      this.attemptedToUnsubscribe = true;\n      if (this.count === 0) {\n        super.unsubscribe();\n      }\n    }\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass GroupDurationSubscriber<K, T> extends Subscriber<T> {\n  constructor(private key: K,\n              private group: Subject<T>,\n              private parent: GroupBySubscriber<any, K, T>) {\n    super(group);\n  }\n\n  protected _next(value: T): void {\n    this.complete();\n  }\n\n  /** @deprecated internal use only */ _unsubscribe() {\n    const { parent, key } = this;\n    this.key = this.parent = null;\n    if (parent) {\n      parent.removeGroup(key);\n    }\n  }\n}\n\n/**\n * An Observable representing values belonging to the same group represented by\n * a common key. The values emitted by a GroupedObservable come from the source\n * Observable. The common key is available as the field `key` on a\n * GroupedObservable instance.\n *\n * @class GroupedObservable<K, T>\n */\nexport class GroupedObservable<K, T> extends Observable<T> {\n  constructor(public key: K,\n              private groupSubject: Subject<T>,\n              private refCountSubscription?: RefCountSubscription) {\n    super();\n  }\n\n  /** @deprecated internal use only */ _subscribe(subscriber: Subscriber<T>) {\n    const subscription = new Subscription();\n    const {refCountSubscription, groupSubject} = this;\n    if (refCountSubscription && !refCountSubscription.closed) {\n      subscription.add(new InnerRefCountSubscription(refCountSubscription));\n    }\n    subscription.add(groupSubject.subscribe(subscriber));\n    return subscription;\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass InnerRefCountSubscription extends Subscription {\n  constructor(private parent: RefCountSubscription) {\n    super();\n    parent.count++;\n  }\n\n  unsubscribe() {\n    const parent = this.parent;\n    if (!parent.closed && !this.closed) {\n      super.unsubscribe();\n      parent.count -= 1;\n      if (parent.count === 0 && parent.attemptedToUnsubscribe) {\n        parent.unsubscribe();\n      }\n    }\n  }\n}\n","import { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { noop } from '../util/noop';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Ignores all items emitted by the source Observable and only passes calls of `complete` or `error`.\n *\n * <img src=\"./img/ignoreElements.png\" width=\"100%\">\n *\n * @return {Observable} An empty Observable that only calls `complete`\n * or `error`, based on which one is called by the source Observable.\n * @method ignoreElements\n * @owner Observable\n */\nexport function ignoreElements<T>(): MonoTypeOperatorFunction<T> {\n  return function ignoreElementsOperatorFunction(source: Observable<T>) {\n    return source.lift(new IgnoreElementsOperator());\n  };\n}\n\nclass IgnoreElementsOperator<T, R> implements Operator<T, R> {\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new IgnoreElementsSubscriber(subscriber));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass IgnoreElementsSubscriber<T> extends Subscriber<T> {\n  protected _next(unused: T): void {\n    noop();\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { OperatorFunction } from '../interfaces';\n\nexport function isEmpty<T>(): OperatorFunction<T, boolean> {\n  return (source: Observable<T>) => source.lift(new IsEmptyOperator());\n}\n\nclass IsEmptyOperator implements Operator<any, boolean> {\n  call (observer: Subscriber<boolean>, source: any): any {\n    return source.subscribe(new IsEmptySubscriber(observer));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass IsEmptySubscriber extends Subscriber<any> {\n  constructor(destination: Subscriber<boolean>) {\n    super(destination);\n  }\n\n  private notifyComplete(isEmpty: boolean): void {\n    const destination = this.destination;\n\n    destination.next(isEmpty);\n    destination.complete();\n  }\n\n  protected _next(value: boolean) {\n    this.notifyComplete(false);\n  }\n\n  protected _complete() {\n    this.notifyComplete(true);\n  }\n}\n","import { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { EmptyError } from '../util/EmptyError';\nimport { OperatorFunction, MonoTypeOperatorFunction } from '../interfaces';\n\n/* tslint:disable:max-line-length */\nexport function last<T, S extends T>(predicate: (value: T, index: number, source: Observable<T>) => value is S): OperatorFunction<T, S>;\nexport function last<T, S extends T, R>(predicate: (value: T | S, index: number, source: Observable<T>) => value is S,\n                                        resultSelector: (value: S, index: number) => R, defaultValue?: R): OperatorFunction<T, R>;\nexport function last<T, S extends T>(predicate: (value: T, index: number, source: Observable<T>) => value is S,\n                                     resultSelector: void,\n                                     defaultValue?: S): OperatorFunction<T, S>;\nexport function last<T>(predicate?: (value: T, index: number, source: Observable<T>) => boolean): MonoTypeOperatorFunction<T>;\nexport function last<T, R>(predicate: (value: T, index: number, source: Observable<T>) => boolean,\n                           resultSelector?: (value: T, index: number) => R,\n                           defaultValue?: R): OperatorFunction<T, R>;\nexport function last<T>(predicate: (value: T, index: number, source: Observable<T>) => boolean,\n                        resultSelector: void,\n                        defaultValue?: T): MonoTypeOperatorFunction<T>;\n/* tslint:enable:max-line-length */\n\n/**\n * Returns an Observable that emits only the last item emitted by the source Observable.\n * It optionally takes a predicate function as a parameter, in which case, rather than emitting\n * the last item from the source Observable, the resulting Observable will emit the last item\n * from the source Observable that satisfies the predicate.\n *\n * <img src=\"./img/last.png\" width=\"100%\">\n *\n * @throws {EmptyError} Delivers an EmptyError to the Observer's `error`\n * callback if the Observable completes before any `next` notification was sent.\n * @param {function} predicate - The condition any source emitted item has to satisfy.\n * @return {Observable} An Observable that emits only the last item satisfying the given condition\n * from the source, or an NoSuchElementException if no such items are emitted.\n * @throws - Throws if no items that match the predicate are emitted by the source Observable.\n * @method last\n * @owner Observable\n */\nexport function last<T, R>(predicate?: (value: T, index: number, source: Observable<T>) => boolean,\n                           resultSelector?: ((value: T, index: number) => R) | void,\n                           defaultValue?: R): OperatorFunction<T, T | R> {\n  return (source: Observable<T>) => source.lift(new LastOperator(predicate, resultSelector, defaultValue, source));\n}\n\nclass LastOperator<T, R> implements Operator<T, R> {\n  constructor(private predicate?: (value: T, index: number, source: Observable<T>) => boolean,\n              private resultSelector?: ((value: T, index: number) => R) | void,\n              private defaultValue?: any,\n              private source?: Observable<T>) {\n  }\n\n  call(observer: Subscriber<R>, source: any): any {\n    return source.subscribe(new LastSubscriber(observer, this.predicate, this.resultSelector, this.defaultValue, this.source));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass LastSubscriber<T, R> extends Subscriber<T> {\n  private lastValue: T | R;\n  private hasValue: boolean = false;\n  private index: number = 0;\n\n  constructor(destination: Subscriber<R>,\n              private predicate?: (value: T, index: number, source: Observable<T>) => boolean,\n              private resultSelector?: ((value: T, index: number) => R) | void,\n              private defaultValue?: any,\n              private source?: Observable<T>) {\n    super(destination);\n    if (typeof defaultValue !== 'undefined') {\n      this.lastValue = defaultValue;\n      this.hasValue = true;\n    }\n  }\n\n  protected _next(value: T): void {\n    const index = this.index++;\n    if (this.predicate) {\n      this._tryPredicate(value, index);\n    } else {\n      if (this.resultSelector) {\n        this._tryResultSelector(value, index);\n        return;\n      }\n      this.lastValue = value;\n      this.hasValue = true;\n    }\n  }\n\n  private _tryPredicate(value: T, index: number) {\n    let result: any;\n    try {\n      result = this.predicate(value, index, this.source);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    if (result) {\n      if (this.resultSelector) {\n        this._tryResultSelector(value, index);\n        return;\n      }\n      this.lastValue = value;\n      this.hasValue = true;\n    }\n  }\n\n  private _tryResultSelector(value: T, index: number) {\n    let result: any;\n    try {\n      result = (<any>this).resultSelector(value, index);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    this.lastValue = result;\n    this.hasValue = true;\n  }\n\n  protected _complete(): void {\n    const destination = this.destination;\n    if (this.hasValue) {\n      destination.next(this.lastValue);\n      destination.complete();\n    } else {\n      destination.error(new EmptyError);\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { OperatorFunction } from '../interfaces';\n\n/**\n * Applies a given `project` function to each value emitted by the source\n * Observable, and emits the resulting values as an Observable.\n *\n * <span class=\"informal\">Like [Array.prototype.map()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map),\n * it passes each source value through a transformation function to get\n * corresponding output values.</span>\n *\n * <img src=\"./img/map.png\" width=\"100%\">\n *\n * Similar to the well known `Array.prototype.map` function, this operator\n * applies a projection to each value and emits that projection in the output\n * Observable.\n *\n * @example <caption>Map every click to the clientX position of that click</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var positions = clicks.map(ev => ev.clientX);\n * positions.subscribe(x => console.log(x));\n *\n * @see {@link mapTo}\n * @see {@link pluck}\n *\n * @param {function(value: T, index: number): R} project The function to apply\n * to each `value` emitted by the source Observable. The `index` parameter is\n * the number `i` for the i-th emission that has happened since the\n * subscription, starting from the number `0`.\n * @param {any} [thisArg] An optional argument to define what `this` is in the\n * `project` function.\n * @return {Observable<R>} An Observable that emits the values from the source\n * Observable transformed by the given `project` function.\n * @method map\n * @owner Observable\n */\nexport function map<T, R>(project: (value: T, index: number) => R, thisArg?: any): OperatorFunction<T, R> {\n  return function mapOperation(source: Observable<T>): Observable<R> {\n    if (typeof project !== 'function') {\n      throw new TypeError('argument is not a function. Are you looking for `mapTo()`?');\n    }\n    return source.lift(new MapOperator(project, thisArg));\n  };\n}\n\nexport class MapOperator<T, R> implements Operator<T, R> {\n  constructor(private project: (value: T, index: number) => R, private thisArg: any) {\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new MapSubscriber(subscriber, this.project, this.thisArg));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass MapSubscriber<T, R> extends Subscriber<T> {\n  count: number = 0;\n  private thisArg: any;\n\n  constructor(destination: Subscriber<R>,\n              private project: (value: T, index: number) => R,\n              thisArg: any) {\n    super(destination);\n    this.thisArg = thisArg || this;\n  }\n\n  // NOTE: This looks unoptimized, but it's actually purposefully NOT\n  // using try/catch optimizations.\n  protected _next(value: T) {\n    let result: any;\n    try {\n      result = this.project.call(this.thisArg, value, this.count++);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    this.destination.next(result);\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { OperatorFunction } from '../interfaces';\n\n/**\n * Emits the given constant value on the output Observable every time the source\n * Observable emits a value.\n *\n * <span class=\"informal\">Like {@link map}, but it maps every source value to\n * the same output value every time.</span>\n *\n * <img src=\"./img/mapTo.png\" width=\"100%\">\n *\n * Takes a constant `value` as argument, and emits that whenever the source\n * Observable emits a value. In other words, ignores the actual source value,\n * and simply uses the emission moment to know when to emit the given `value`.\n *\n * @example <caption>Map every click to the string 'Hi'</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var greetings = clicks.mapTo('Hi');\n * greetings.subscribe(x => console.log(x));\n *\n * @see {@link map}\n *\n * @param {any} value The value to map each source value to.\n * @return {Observable} An Observable that emits the given `value` every time\n * the source Observable emits something.\n * @method mapTo\n * @owner Observable\n */\nexport function mapTo<T, R>(value: R): OperatorFunction<T, R> {\n  return (source: Observable<T>) => source.lift(new MapToOperator(value));\n}\n\nclass MapToOperator<T, R> implements Operator<T, R> {\n\n  value: R;\n\n  constructor(value: R) {\n    this.value = value;\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new MapToSubscriber(subscriber, this.value));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass MapToSubscriber<T, R> extends Subscriber<T> {\n\n  value: R;\n\n  constructor(destination: Subscriber<R>, value: R) {\n    super(destination);\n    this.value = value;\n  }\n\n  protected _next(x: T) {\n    this.destination.next(this.value);\n  }\n}","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Notification } from '../Notification';\nimport { OperatorFunction } from '../interfaces';\n\n/**\n * Represents all of the notifications from the source Observable as `next`\n * emissions marked with their original types within {@link Notification}\n * objects.\n *\n * <span class=\"informal\">Wraps `next`, `error` and `complete` emissions in\n * {@link Notification} objects, emitted as `next` on the output Observable.\n * </span>\n *\n * <img src=\"./img/materialize.png\" width=\"100%\">\n *\n * `materialize` returns an Observable that emits a `next` notification for each\n * `next`, `error`, or `complete` emission of the source Observable. When the\n * source Observable emits `complete`, the output Observable will emit `next` as\n * a Notification of type \"complete\", and then it will emit `complete` as well.\n * When the source Observable emits `error`, the output will emit `next` as a\n * Notification of type \"error\", and then `complete`.\n *\n * This operator is useful for producing metadata of the source Observable, to\n * be consumed as `next` emissions. Use it in conjunction with\n * {@link dematerialize}.\n *\n * @example <caption>Convert a faulty Observable to an Observable of Notifications</caption>\n * var letters = Rx.Observable.of('a', 'b', 13, 'd');\n * var upperCase = letters.map(x => x.toUpperCase());\n * var materialized = upperCase.materialize();\n * materialized.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // - Notification {kind: \"N\", value: \"A\", error: undefined, hasValue: true}\n * // - Notification {kind: \"N\", value: \"B\", error: undefined, hasValue: true}\n * // - Notification {kind: \"E\", value: undefined, error: TypeError:\n * //   x.toUpperCase is not a function at MapSubscriber.letters.map.x\n * //   [as project] (http://1…, hasValue: false}\n *\n * @see {@link Notification}\n * @see {@link dematerialize}\n *\n * @return {Observable<Notification<T>>} An Observable that emits\n * {@link Notification} objects that wrap the original emissions from the source\n * Observable with metadata.\n * @method materialize\n * @owner Observable\n */\nexport function materialize<T>(): OperatorFunction<T, Notification<T>> {\n  return function materializeOperatorFunction(source: Observable<T>) {\n    return source.lift(new MaterializeOperator());\n  };\n}\n\nclass MaterializeOperator<T> implements Operator<T, Notification<T>> {\n  call(subscriber: Subscriber<Notification<T>>, source: any): any {\n    return source.subscribe(new MaterializeSubscriber(subscriber));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass MaterializeSubscriber<T> extends Subscriber<T> {\n  constructor(destination: Subscriber<Notification<T>>) {\n    super(destination);\n  }\n\n  protected _next(value: T) {\n    this.destination.next(Notification.createNext(value));\n  }\n\n  protected _error(err: any) {\n    const destination = this.destination;\n    destination.next(Notification.createError(err));\n    destination.complete();\n  }\n\n  protected _complete() {\n    const destination = this.destination;\n    destination.next(Notification.createComplete());\n    destination.complete();\n  }\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { OperatorFunction, MonoTypeOperatorFunction } from '../interfaces';\n\n/* tslint:disable:max-line-length */\nexport function scan<T>(accumulator: (acc: T, value: T, index: number) => T, seed?: T): MonoTypeOperatorFunction<T>;\nexport function scan<T>(accumulator: (acc: T[], value: T, index: number) => T[], seed?: T[]): OperatorFunction<T, T[]>;\nexport function scan<T, R>(accumulator: (acc: R, value: T, index: number) => R, seed?: R): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Applies an accumulator function over the source Observable, and returns each\n * intermediate result, with an optional seed value.\n *\n * <span class=\"informal\">It's like {@link reduce}, but emits the current\n * accumulation whenever the source emits a value.</span>\n *\n * <img src=\"./img/scan.png\" width=\"100%\">\n *\n * Combines together all values emitted on the source, using an accumulator\n * function that knows how to join a new source value into the accumulation from\n * the past. Is similar to {@link reduce}, but emits the intermediate\n * accumulations.\n *\n * Returns an Observable that applies a specified `accumulator` function to each\n * item emitted by the source Observable. If a `seed` value is specified, then\n * that value will be used as the initial value for the accumulator. If no seed\n * value is specified, the first item of the source is used as the seed.\n *\n * @example <caption>Count the number of click events</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var ones = clicks.mapTo(1);\n * var seed = 0;\n * var count = ones.scan((acc, one) => acc + one, seed);\n * count.subscribe(x => console.log(x));\n *\n * @see {@link expand}\n * @see {@link mergeScan}\n * @see {@link reduce}\n *\n * @param {function(acc: R, value: T, index: number): R} accumulator\n * The accumulator function called on each source value.\n * @param {T|R} [seed] The initial accumulation value.\n * @return {Observable<R>} An observable of the accumulated values.\n * @method scan\n * @owner Observable\n */\nexport function scan<T, R>(accumulator: (acc: R, value: T, index: number) => R, seed?: T | R): OperatorFunction<T, R> {\n  let hasSeed = false;\n  // providing a seed of `undefined` *should* be valid and trigger\n  // hasSeed! so don't use `seed !== undefined` checks!\n  // For this reason, we have to check it here at the original call site\n  // otherwise inside Operator/Subscriber we won't know if `undefined`\n  // means they didn't provide anything or if they literally provided `undefined`\n  if (arguments.length >= 2) {\n    hasSeed = true;\n  }\n\n  return function scanOperatorFunction(source: Observable<T>): Observable<R> {\n    return source.lift(new ScanOperator(accumulator, seed, hasSeed));\n  };\n}\n\nclass ScanOperator<T, R> implements Operator<T, R> {\n  constructor(private accumulator: (acc: R, value: T, index: number) => R, private seed?: T | R, private hasSeed: boolean = false) {}\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new ScanSubscriber(subscriber, this.accumulator, this.seed, this.hasSeed));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass ScanSubscriber<T, R> extends Subscriber<T> {\n  private index: number = 0;\n\n  get seed(): T | R {\n    return this._seed;\n  }\n\n  set seed(value: T | R) {\n    this.hasSeed = true;\n    this._seed = value;\n  }\n\n  constructor(destination: Subscriber<R>, private accumulator: (acc: R, value: T, index: number) => R, private _seed: T | R,\n              private hasSeed: boolean) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    if (!this.hasSeed) {\n      this.seed = value;\n      this.destination.next(value);\n    } else {\n      return this._tryNext(value);\n    }\n  }\n\n  private _tryNext(value: T): void {\n    const index = this.index++;\n    let result: any;\n    try {\n      result = this.accumulator(<R>this.seed, value, index);\n    } catch (err) {\n      this.destination.error(err);\n    }\n    this.seed = result;\n    this.destination.next(result);\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { ArgumentOutOfRangeError } from '../util/ArgumentOutOfRangeError';\nimport { EmptyObservable } from '../observable/EmptyObservable';\nimport { Observable } from '../Observable';\nimport { TeardownLogic } from '../Subscription';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Emits only the last `count` values emitted by the source Observable.\n *\n * <span class=\"informal\">Remembers the latest `count` values, then emits those\n * only when the source completes.</span>\n *\n * <img src=\"./img/takeLast.png\" width=\"100%\">\n *\n * `takeLast` returns an Observable that emits at most the last `count` values\n * emitted by the source Observable. If the source emits fewer than `count`\n * values then all of its values are emitted. This operator must wait until the\n * `complete` notification emission from the source in order to emit the `next`\n * values on the output Observable, because otherwise it is impossible to know\n * whether or not more values will be emitted on the source. For this reason,\n * all values are emitted synchronously, followed by the complete notification.\n *\n * @example <caption>Take the last 3 values of an Observable with many values</caption>\n * var many = Rx.Observable.range(1, 100);\n * var lastThree = many.takeLast(3);\n * lastThree.subscribe(x => console.log(x));\n *\n * @see {@link take}\n * @see {@link takeUntil}\n * @see {@link takeWhile}\n * @see {@link skip}\n *\n * @throws {ArgumentOutOfRangeError} When using `takeLast(i)`, it delivers an\n * ArgumentOutOrRangeError to the Observer's `error` callback if `i < 0`.\n *\n * @param {number} count The maximum number of values to emit from the end of\n * the sequence of values emitted by the source Observable.\n * @return {Observable<T>} An Observable that emits at most the last count\n * values emitted by the source Observable.\n * @method takeLast\n * @owner Observable\n */\nexport function takeLast<T>(count: number): MonoTypeOperatorFunction<T> {\n  return function takeLastOperatorFunction(source: Observable<T>): Observable<T> {\n    if (count === 0) {\n      return new EmptyObservable<T>();\n    } else {\n      return source.lift(new TakeLastOperator(count));\n    }\n  };\n}\n\nclass TakeLastOperator<T> implements Operator<T, T> {\n  constructor(private total: number) {\n    if (this.total < 0) {\n      throw new ArgumentOutOfRangeError;\n    }\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new TakeLastSubscriber(subscriber, this.total));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass TakeLastSubscriber<T> extends Subscriber<T> {\n  private ring: Array<T> = new Array();\n  private count: number = 0;\n\n  constructor(destination: Subscriber<T>, private total: number) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    const ring = this.ring;\n    const total = this.total;\n    const count = this.count++;\n\n    if (ring.length < total) {\n      ring.push(value);\n    } else {\n      const index = count % total;\n      ring[index] = value;\n    }\n  }\n\n  protected _complete(): void {\n    const destination = this.destination;\n    let count = this.count;\n\n    if (count > 0) {\n      const total = this.count >= this.total ? this.total : this.count;\n      const ring  = this.ring;\n\n      for (let i = 0; i < total; i++) {\n        const idx = (count++) % total;\n        destination.next(ring[idx]);\n      }\n    }\n\n    destination.complete();\n  }\n}\n","import { Observable, ObservableInput } from '../Observable';\nimport { Operator } from '../Operator';\nimport { PartialObserver } from '../Observer';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OperatorFunction } from '../interfaces';\n\n/* tslint:disable:max-line-length */\nexport function mergeMapTo<T, R>(observable: ObservableInput<R>, concurrent?: number): OperatorFunction<T, R>;\nexport function mergeMapTo<T, I, R>(observable: ObservableInput<I>, resultSelector: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R, concurrent?: number): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Projects each source value to the same Observable which is merged multiple\n * times in the output Observable.\n *\n * <span class=\"informal\">It's like {@link mergeMap}, but maps each value always\n * to the same inner Observable.</span>\n *\n * <img src=\"./img/mergeMapTo.png\" width=\"100%\">\n *\n * Maps each source value to the given Observable `innerObservable` regardless\n * of the source value, and then merges those resulting Observables into one\n * single Observable, which is the output Observable.\n *\n * @example <caption>For each click event, start an interval Observable ticking every 1 second</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.mergeMapTo(Rx.Observable.interval(1000));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link concatMapTo}\n * @see {@link merge}\n * @see {@link mergeAll}\n * @see {@link mergeMap}\n * @see {@link mergeScan}\n * @see {@link switchMapTo}\n *\n * @param {ObservableInput} innerObservable An Observable to replace each value from\n * the source Observable.\n * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\n * A function to produce the value on the output Observable based on the values\n * and the indices of the source (outer) emission and the inner Observable\n * emission. The arguments passed to this function are:\n * - `outerValue`: the value that came from the source\n * - `innerValue`: the value that came from the projected Observable\n * - `outerIndex`: the \"index\" of the value that came from the source\n * - `innerIndex`: the \"index\" of the value from the projected Observable\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @return {Observable} An Observable that emits items from the given\n * `innerObservable` (and optionally transformed through `resultSelector`) every\n * time a value is emitted on the source Observable.\n * @method mergeMapTo\n * @owner Observable\n */\nexport function mergeMapTo<T, I, R>(innerObservable: Observable<I>,\n                                    resultSelector?: ((outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R) | number,\n                                    concurrent: number = Number.POSITIVE_INFINITY): OperatorFunction<T, R> {\n  if (typeof resultSelector === 'number') {\n    concurrent = <number>resultSelector;\n    resultSelector = null;\n  }\n  return (source: Observable<T>) => source.lift(new MergeMapToOperator(innerObservable, <any>resultSelector, concurrent));\n}\n\n// TODO: Figure out correct signature here: an Operator<Observable<T>, R>\n//       needs to implement call(observer: Subscriber<R>): Subscriber<Observable<T>>\nexport class MergeMapToOperator<T, I, R> implements Operator<Observable<T>, R> {\n  constructor(private ish: ObservableInput<I>,\n              private resultSelector?: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R,\n              private concurrent: number = Number.POSITIVE_INFINITY) {\n  }\n\n  call(observer: Subscriber<R>, source: any): any {\n    return source.subscribe(new MergeMapToSubscriber(observer, this.ish, this.resultSelector, this.concurrent));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class MergeMapToSubscriber<T, I, R> extends OuterSubscriber<T, I> {\n  private hasCompleted: boolean = false;\n  private buffer: T[] = [];\n  private active: number = 0;\n  protected index: number = 0;\n\n  constructor(destination: Subscriber<R>,\n              private ish: ObservableInput<I>,\n              private resultSelector?: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R,\n              private concurrent: number = Number.POSITIVE_INFINITY) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    if (this.active < this.concurrent) {\n      const resultSelector = this.resultSelector;\n      const index = this.index++;\n      const ish = this.ish;\n      const destination = this.destination;\n\n      this.active++;\n      this._innerSub(ish, destination, resultSelector, value, index);\n    } else {\n      this.buffer.push(value);\n    }\n  }\n\n  private _innerSub(ish: ObservableInput<I>,\n                    destination: PartialObserver<I>,\n                    resultSelector: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R,\n                    value: T,\n                    index: number): void {\n    this.add(subscribeToResult<T, I>(this, ish, value, index));\n  }\n\n  protected _complete(): void {\n    this.hasCompleted = true;\n    if (this.active === 0 && this.buffer.length === 0) {\n      this.destination.complete();\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: I,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, I>): void {\n    const { resultSelector, destination } = this;\n    if (resultSelector) {\n      this.trySelectResult(outerValue, innerValue, outerIndex, innerIndex);\n    } else {\n      destination.next(innerValue);\n    }\n  }\n\n  private trySelectResult(outerValue: T, innerValue: I,\n                          outerIndex: number, innerIndex: number): void {\n    const { resultSelector, destination } = this;\n    let result: R;\n    try {\n      result = resultSelector(outerValue, innerValue, outerIndex, innerIndex);\n    } catch (err) {\n      destination.error(err);\n      return;\n    }\n\n    destination.next(result);\n  }\n\n  notifyError(err: any): void {\n    this.destination.error(err);\n  }\n\n  notifyComplete(innerSub: Subscription): void {\n    const buffer = this.buffer;\n    this.remove(innerSub);\n    this.active--;\n    if (buffer.length > 0) {\n      this._next(buffer.shift());\n    } else if (this.active === 0 && this.hasCompleted) {\n      this.destination.complete();\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { tryCatch } from '../util/tryCatch';\nimport { errorObject } from '../util/errorObject';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { OperatorFunction } from '../interfaces';\n\n/**\n * Applies an accumulator function over the source Observable where the\n * accumulator function itself returns an Observable, then each intermediate\n * Observable returned is merged into the output Observable.\n *\n * <span class=\"informal\">It's like {@link scan}, but the Observables returned\n * by the accumulator are merged into the outer Observable.</span>\n *\n * @example <caption>Count the number of click events</caption>\n * const click$ = Rx.Observable.fromEvent(document, 'click');\n * const one$ = click$.mapTo(1);\n * const seed = 0;\n * const count$ = one$.mergeScan((acc, one) => Rx.Observable.of(acc + one), seed);\n * count$.subscribe(x => console.log(x));\n *\n * // Results:\n * 1\n * 2\n * 3\n * 4\n * // ...and so on for each click\n *\n * @param {function(acc: R, value: T): Observable<R>} accumulator\n * The accumulator function called on each source value.\n * @param seed The initial accumulation value.\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of\n * input Observables being subscribed to concurrently.\n * @return {Observable<R>} An observable of the accumulated values.\n * @method mergeScan\n * @owner Observable\n */\nexport function mergeScan<T, R>(accumulator: (acc: R, value: T) => Observable<R>,\n                                seed: R,\n                                concurrent: number = Number.POSITIVE_INFINITY): OperatorFunction<T, R> {\n  return (source: Observable<T>) => source.lift(new MergeScanOperator(accumulator, seed, concurrent));\n}\n\nexport class MergeScanOperator<T, R> implements Operator<T, R> {\n  constructor(private accumulator: (acc: R, value: T) => Observable<R>,\n              private seed: R,\n              private concurrent: number) {\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new MergeScanSubscriber(\n      subscriber, this.accumulator, this.seed, this.concurrent\n    ));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class MergeScanSubscriber<T, R> extends OuterSubscriber<T, R> {\n  private hasValue: boolean = false;\n  private hasCompleted: boolean = false;\n  private buffer: Observable<any>[] = [];\n  private active: number = 0;\n  protected index: number = 0;\n\n  constructor(destination: Subscriber<R>,\n              private accumulator: (acc: R, value: T) => Observable<R>,\n              private acc: R,\n              private concurrent: number) {\n    super(destination);\n  }\n\n  protected _next(value: any): void {\n    if (this.active < this.concurrent) {\n      const index = this.index++;\n      const ish = tryCatch(this.accumulator)(this.acc, value);\n      const destination = this.destination;\n      if (ish === errorObject) {\n        destination.error(errorObject.e);\n      } else {\n        this.active++;\n        this._innerSub(ish, value, index);\n      }\n    } else {\n      this.buffer.push(value);\n    }\n  }\n\n  private _innerSub(ish: any, value: T, index: number): void {\n    this.add(subscribeToResult<T, R>(this, ish, value, index));\n  }\n\n  protected _complete(): void {\n    this.hasCompleted = true;\n    if (this.active === 0 && this.buffer.length === 0) {\n      if (this.hasValue === false) {\n        this.destination.next(this.acc);\n      }\n      this.destination.complete();\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    const { destination } = this;\n    this.acc = innerValue;\n    this.hasValue = true;\n    destination.next(innerValue);\n  }\n\n  notifyComplete(innerSub: Subscription): void {\n    const buffer = this.buffer;\n    this.remove(innerSub);\n    this.active--;\n    if (buffer.length > 0) {\n      this._next(buffer.shift());\n    } else if (this.active === 0 && this.hasCompleted) {\n      if (this.hasValue === false) {\n        this.destination.next(this.acc);\n      }\n      this.destination.complete();\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription, TeardownLogic } from '../Subscription';\nimport { MonoTypeOperatorFunction } from '../interfaces';\nimport { ConnectableObservable } from '../observable/ConnectableObservable';\nimport { Observable } from '../Observable';\n\nexport function refCount<T>(): MonoTypeOperatorFunction<T> {\n  return function refCountOperatorFunction(source: ConnectableObservable<T>): Observable<T> {\n    return source.lift(new RefCountOperator(source));\n  };\n}\n\nclass RefCountOperator<T> implements Operator<T, T> {\n  constructor(private connectable: ConnectableObservable<T>) {\n  }\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n\n    const { connectable } = this;\n    (<any> connectable)._refCount++;\n\n    const refCounter = new RefCountSubscriber(subscriber, connectable);\n    const subscription = source.subscribe(refCounter);\n\n    if (!refCounter.closed) {\n      (<any> refCounter).connection = connectable.connect();\n    }\n\n    return subscription;\n  }\n}\n\nclass RefCountSubscriber<T> extends Subscriber<T> {\n\n  private connection: Subscription;\n\n  constructor(destination: Subscriber<T>,\n              private connectable: ConnectableObservable<T>) {\n    super(destination);\n  }\n\n  /** @deprecated internal use only */ _unsubscribe() {\n\n    const { connectable } = this;\n    if (!connectable) {\n      this.connection = null;\n      return;\n    }\n\n    this.connectable = null;\n    const refCount = (<any> connectable)._refCount;\n    if (refCount <= 0) {\n      this.connection = null;\n      return;\n    }\n\n    (<any> connectable)._refCount = refCount - 1;\n    if (refCount > 1) {\n      this.connection = null;\n      return;\n    }\n\n    ///\n    // Compare the local RefCountSubscriber's connection Subscription to the\n    // connection Subscription on the shared ConnectableObservable. In cases\n    // where the ConnectableObservable source synchronously emits values, and\n    // the RefCountSubscriber's downstream Observers synchronously unsubscribe,\n    // execution continues to here before the RefCountOperator has a chance to\n    // supply the RefCountSubscriber with the shared connection Subscription.\n    // For example:\n    // ```\n    // Observable.range(0, 10)\n    //   .publish()\n    //   .refCount()\n    //   .take(5)\n    //   .subscribe();\n    // ```\n    // In order to account for this case, RefCountSubscriber should only dispose\n    // the ConnectableObservable's shared connection Subscription if the\n    // connection Subscription exists, *and* either:\n    //   a. RefCountSubscriber doesn't have a reference to the shared connection\n    //      Subscription yet, or,\n    //   b. RefCountSubscriber's connection Subscription reference is identical\n    //      to the shared connection Subscription\n    ///\n    const { connection } = this;\n    const sharedConnection = (<any> connectable)._connection;\n    this.connection = null;\n\n    if (sharedConnection && (!connection || sharedConnection === connection)) {\n      sharedConnection.unsubscribe();\n    }\n  }\n}\n","import { Subject, SubjectSubscriber } from '../Subject';\nimport { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription, TeardownLogic } from '../Subscription';\nimport { refCount as higherOrderRefCount } from '../operators/refCount';\n\n/**\n * @class ConnectableObservable<T>\n */\nexport class ConnectableObservable<T> extends Observable<T> {\n\n  /** @deprecated internal use only */ public _subject: Subject<T>;\n  /** @deprecated internal use only */ public _refCount: number = 0;\n  /** @deprecated internal use only */ public _connection: Subscription;\n  _isComplete = false;\n\n  constructor(/** @deprecated internal use only */ public source: Observable<T>,\n              /** @deprecated internal use only */ public subjectFactory: () => Subject<T>) {\n    super();\n  }\n\n  /** @deprecated internal use only */ _subscribe(subscriber: Subscriber<T>) {\n    return this.getSubject().subscribe(subscriber);\n  }\n\n  /** @deprecated internal use only */ public getSubject(): Subject<T> {\n    const subject = this._subject;\n    if (!subject || subject.isStopped) {\n      this._subject = this.subjectFactory();\n    }\n    return this._subject;\n  }\n\n  connect(): Subscription {\n    let connection = this._connection;\n    if (!connection) {\n      this._isComplete = false;\n      connection = this._connection = new Subscription();\n      connection.add(this.source\n        .subscribe(new ConnectableSubscriber(this.getSubject(), this)));\n      if (connection.closed) {\n        this._connection = null;\n        connection = Subscription.EMPTY;\n      } else {\n        this._connection = connection;\n      }\n    }\n    return connection;\n  }\n\n  refCount(): Observable<T> {\n    return higherOrderRefCount()(this) as Observable<T>;\n  }\n}\n\nconst connectableProto = <any>ConnectableObservable.prototype;\n\nexport const connectableObservableDescriptor: PropertyDescriptorMap = {\n  operator: { value: null },\n  _refCount: { value: 0, writable: true },\n  _subject: { value: null, writable: true },\n  _connection: { value: null, writable: true },\n  _subscribe: { value: connectableProto._subscribe },\n  _isComplete: { value: connectableProto._isComplete, writable: true },\n  getSubject: { value: connectableProto.getSubject },\n  connect: { value: connectableProto.connect },\n  refCount: { value: connectableProto.refCount }\n};\n\nclass ConnectableSubscriber<T> extends SubjectSubscriber<T> {\n  constructor(destination: Subject<T>,\n              private connectable: ConnectableObservable<T>) {\n    super(destination);\n  }\n  protected _error(err: any): void {\n    this._unsubscribe();\n    super._error(err);\n  }\n  protected _complete(): void {\n    this.connectable._isComplete = true;\n    this._unsubscribe();\n    super._complete();\n  }\n  /** @deprecated internal use only */ _unsubscribe() {\n    const connectable = <any>this.connectable;\n    if (connectable) {\n      this.connectable = null;\n      const connection = connectable._connection;\n      connectable._refCount = 0;\n      connectable._subject = null;\n      connectable._connection = null;\n      if (connection) {\n        connection.unsubscribe();\n      }\n    }\n  }\n}\n\nclass RefCountOperator<T> implements Operator<T, T> {\n  constructor(private connectable: ConnectableObservable<T>) {\n  }\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n\n    const { connectable } = this;\n    (<any> connectable)._refCount++;\n\n    const refCounter = new RefCountSubscriber(subscriber, connectable);\n    const subscription = source.subscribe(refCounter);\n\n    if (!refCounter.closed) {\n      (<any> refCounter).connection = connectable.connect();\n    }\n\n    return subscription;\n  }\n}\n\nclass RefCountSubscriber<T> extends Subscriber<T> {\n\n  private connection: Subscription;\n\n  constructor(destination: Subscriber<T>,\n              private connectable: ConnectableObservable<T>) {\n    super(destination);\n  }\n\n  /** @deprecated internal use only */ _unsubscribe() {\n\n    const { connectable } = this;\n    if (!connectable) {\n      this.connection = null;\n      return;\n    }\n\n    this.connectable = null;\n    const refCount = (<any> connectable)._refCount;\n    if (refCount <= 0) {\n      this.connection = null;\n      return;\n    }\n\n    (<any> connectable)._refCount = refCount - 1;\n    if (refCount > 1) {\n      this.connection = null;\n      return;\n    }\n\n    ///\n    // Compare the local RefCountSubscriber's connection Subscription to the\n    // connection Subscription on the shared ConnectableObservable. In cases\n    // where the ConnectableObservable source synchronously emits values, and\n    // the RefCountSubscriber's downstream Observers synchronously unsubscribe,\n    // execution continues to here before the RefCountOperator has a chance to\n    // supply the RefCountSubscriber with the shared connection Subscription.\n    // For example:\n    // ```\n    // Observable.range(0, 10)\n    //   .publish()\n    //   .refCount()\n    //   .take(5)\n    //   .subscribe();\n    // ```\n    // In order to account for this case, RefCountSubscriber should only dispose\n    // the ConnectableObservable's shared connection Subscription if the\n    // connection Subscription exists, *and* either:\n    //   a. RefCountSubscriber doesn't have a reference to the shared connection\n    //      Subscription yet, or,\n    //   b. RefCountSubscriber's connection Subscription reference is identical\n    //      to the shared connection Subscription\n    ///\n    const { connection } = this;\n    const sharedConnection = (<any> connectable)._connection;\n    this.connection = null;\n\n    if (sharedConnection && (!connection || sharedConnection === connection)) {\n      sharedConnection.unsubscribe();\n    }\n  }\n}\n","import { Observable, ObservableInput } from '../Observable';\nimport { FromObservable } from '../observable/FromObservable';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { isArray } from '../util/isArray';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OperatorFunction } from '../interfaces';\n\n/* tslint:disable:max-line-length */\nexport function onErrorResumeNext<T, R>(v: ObservableInput<R>): OperatorFunction<T, R>;\nexport function onErrorResumeNext<T, T2, T3, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>): OperatorFunction<T, R>;\nexport function onErrorResumeNext<T, T2, T3, T4, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>): OperatorFunction<T, R>;\nexport function onErrorResumeNext<T, T2, T3, T4, T5, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>): OperatorFunction<T, R>;\nexport function onErrorResumeNext<T, T2, T3, T4, T5, T6, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>): OperatorFunction<T, R> ;\nexport function onErrorResumeNext<T, R>(...observables: Array<ObservableInput<any> | ((...values: Array<any>) => R)>): OperatorFunction<T, R>;\nexport function onErrorResumeNext<T, R>(array: ObservableInput<any>[]): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * When any of the provided Observable emits an complete or error notification, it immediately subscribes to the next one\n * that was passed.\n *\n * <span class=\"informal\">Execute series of Observables no matter what, even if it means swallowing errors.</span>\n *\n * <img src=\"./img/onErrorResumeNext.png\" width=\"100%\">\n *\n * `onErrorResumeNext` is an operator that accepts a series of Observables, provided either directly as\n * arguments or as an array. If no single Observable is provided, returned Observable will simply behave the same\n * as the source.\n *\n * `onErrorResumeNext` returns an Observable that starts by subscribing and re-emitting values from the source Observable.\n * When its stream of values ends - no matter if Observable completed or emitted an error - `onErrorResumeNext`\n * will subscribe to the first Observable that was passed as an argument to the method. It will start re-emitting\n * its values as well and - again - when that stream ends, `onErrorResumeNext` will proceed to subscribing yet another\n * Observable in provided series, no matter if previous Observable completed or ended with an error. This will\n * be happening until there is no more Observables left in the series, at which point returned Observable will\n * complete - even if the last subscribed stream ended with an error.\n *\n * `onErrorResumeNext` can be therefore thought of as version of {@link concat} operator, which is more permissive\n * when it comes to the errors emitted by its input Observables. While `concat` subscribes to the next Observable\n * in series only if previous one successfully completed, `onErrorResumeNext` subscribes even if it ended with\n * an error.\n *\n * Note that you do not get any access to errors emitted by the Observables. In particular do not\n * expect these errors to appear in error callback passed to {@link subscribe}. If you want to take\n * specific actions based on what error was emitted by an Observable, you should try out {@link catch} instead.\n *\n *\n * @example <caption>Subscribe to the next Observable after map fails</caption>\n * Rx.Observable.of(1, 2, 3, 0)\n *   .map(x => {\n *       if (x === 0) { throw Error(); }\n         return 10 / x;\n *   })\n *   .onErrorResumeNext(Rx.Observable.of(1, 2, 3))\n *   .subscribe(\n *     val => console.log(val),\n *     err => console.log(err),          // Will never be called.\n *     () => console.log('that\\'s it!')\n *   );\n *\n * // Logs:\n * // 10\n * // 5\n * // 3.3333333333333335\n * // 1\n * // 2\n * // 3\n * // \"that's it!\"\n *\n * @see {@link concat}\n * @see {@link catch}\n *\n * @param {...ObservableInput} observables Observables passed either directly or as an array.\n * @return {Observable} An Observable that emits values from source Observable, but - if it errors - subscribes\n * to the next passed Observable and so on, until it completes or runs out of Observables.\n * @method onErrorResumeNext\n * @owner Observable\n */\n\nexport function onErrorResumeNext<T, R>(...nextSources: Array<ObservableInput<any> |\n                                                       Array<ObservableInput<any>> |\n                                                       ((...values: Array<any>) => R)>): OperatorFunction<T, R> {\n  if (nextSources.length === 1 && isArray(nextSources[0])) {\n    nextSources = <Array<Observable<any>>>nextSources[0];\n  }\n\n  return (source: Observable<T>) => source.lift(new OnErrorResumeNextOperator<T, R>(nextSources));\n}\n\n/* tslint:disable:max-line-length */\nexport function onErrorResumeNextStatic<R>(v: ObservableInput<R>): Observable<R>;\nexport function onErrorResumeNextStatic<T2, T3, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>): Observable<R>;\nexport function onErrorResumeNextStatic<T2, T3, T4, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>): Observable<R>;\nexport function onErrorResumeNextStatic<T2, T3, T4, T5, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>): Observable<R>;\nexport function onErrorResumeNextStatic<T2, T3, T4, T5, T6, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>): Observable<R>;\n\nexport function onErrorResumeNextStatic<R>(...observables: Array<ObservableInput<any> | ((...values: Array<any>) => R)>): Observable<R>;\nexport function onErrorResumeNextStatic<R>(array: ObservableInput<any>[]): Observable<R>;\n/* tslint:enable:max-line-length */\n\nexport function onErrorResumeNextStatic<T, R>(...nextSources: Array<ObservableInput<any> |\n                                                              Array<ObservableInput<any>> |\n                                                              ((...values: Array<any>) => R)>): Observable<R> {\n  let source: ObservableInput<any> = null;\n\n  if (nextSources.length === 1 && isArray(nextSources[0])) {\n    nextSources = <Array<ObservableInput<any>>>nextSources[0];\n  }\n  source = nextSources.shift();\n\n  return new FromObservable(source, null).lift(new OnErrorResumeNextOperator<T, R>(nextSources));\n}\n\nclass OnErrorResumeNextOperator<T, R> implements Operator<T, R> {\n  constructor(private nextSources: Array<ObservableInput<any>>) {\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new OnErrorResumeNextSubscriber(subscriber, this.nextSources));\n  }\n}\n\nclass OnErrorResumeNextSubscriber<T, R> extends OuterSubscriber<T, R> {\n  constructor(protected destination: Subscriber<T>,\n              private nextSources: Array<ObservableInput<any>>) {\n    super(destination);\n  }\n\n  notifyError(error: any, innerSub: InnerSubscriber<T, any>): void {\n    this.subscribeToNextSource();\n  }\n\n  notifyComplete(innerSub: InnerSubscriber<T, any>): void {\n    this.subscribeToNextSource();\n  }\n\n  protected _error(err: any): void {\n    this.subscribeToNextSource();\n  }\n\n  protected _complete(): void {\n    this.subscribeToNextSource();\n  }\n\n  private subscribeToNextSource(): void {\n    const next = this.nextSources.shift();\n    if (next) {\n      this.add(subscribeToResult(this, next));\n    } else {\n      this.destination.complete();\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { OperatorFunction } from '../interfaces';\n\n/**\n * Groups pairs of consecutive emissions together and emits them as an array of\n * two values.\n *\n * <span class=\"informal\">Puts the current value and previous value together as\n * an array, and emits that.</span>\n *\n * <img src=\"./img/pairwise.png\" width=\"100%\">\n *\n * The Nth emission from the source Observable will cause the output Observable\n * to emit an array [(N-1)th, Nth] of the previous and the current value, as a\n * pair. For this reason, `pairwise` emits on the second and subsequent\n * emissions from the source Observable, but not on the first emission, because\n * there is no previous value in that case.\n *\n * @example <caption>On every click (starting from the second), emit the relative distance to the previous click</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var pairs = clicks.pairwise();\n * var distance = pairs.map(pair => {\n *   var x0 = pair[0].clientX;\n *   var y0 = pair[0].clientY;\n *   var x1 = pair[1].clientX;\n *   var y1 = pair[1].clientY;\n *   return Math.sqrt(Math.pow(x0 - x1, 2) + Math.pow(y0 - y1, 2));\n * });\n * distance.subscribe(x => console.log(x));\n *\n * @see {@link buffer}\n * @see {@link bufferCount}\n *\n * @return {Observable<Array<T>>} An Observable of pairs (as arrays) of\n * consecutive values from the source Observable.\n * @method pairwise\n * @owner Observable\n */\nexport function pairwise<T>(): OperatorFunction<T, [T, T]> {\n  return (source: Observable<T>) => source.lift(new PairwiseOperator());\n}\n\nclass PairwiseOperator<T> implements Operator<T, [T, T]> {\n  call(subscriber: Subscriber<[T, T]>, source: any): any {\n    return source.subscribe(new PairwiseSubscriber(subscriber));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass PairwiseSubscriber<T> extends Subscriber<T> {\n  private prev: T;\n  private hasPrev: boolean = false;\n\n  constructor(destination: Subscriber<[T, T]>) {\n    super(destination);\n  }\n\n  _next(value: T): void {\n    if (this.hasPrev) {\n      this.destination.next([this.prev, value]);\n    } else {\n      this.hasPrev = true;\n    }\n\n    this.prev = value;\n  }\n}\n","import { Subject } from './Subject';\nimport { Subscriber } from './Subscriber';\nimport { Subscription, ISubscription } from './Subscription';\nimport { ObjectUnsubscribedError } from './util/ObjectUnsubscribedError';\n\n/**\n * @class BehaviorSubject<T>\n */\nexport class BehaviorSubject<T> extends Subject<T> {\n\n  constructor(private _value: T) {\n    super();\n  }\n\n  get value(): T {\n    return this.getValue();\n  }\n\n  /** @deprecated internal use only */ _subscribe(subscriber: Subscriber<T>): Subscription {\n    const subscription = super._subscribe(subscriber);\n    if (subscription && !(<ISubscription>subscription).closed) {\n      subscriber.next(this._value);\n    }\n    return subscription;\n  }\n\n  getValue(): T {\n    if (this.hasError) {\n      throw this.thrownError;\n    } else if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    } else {\n      return this._value;\n    }\n  }\n\n  next(value: T): void {\n    super.next(this._value = value);\n  }\n}\n","import { Subject } from './Subject';\nimport { Subscriber } from './Subscriber';\nimport { Subscription } from './Subscription';\n\n/**\n * @class AsyncSubject<T>\n */\nexport class AsyncSubject<T> extends Subject<T> {\n  private value: T = null;\n  private hasNext: boolean = false;\n  private hasCompleted: boolean = false;\n\n  /** @deprecated internal use only */ _subscribe(subscriber: Subscriber<any>): Subscription {\n    if (this.hasError) {\n      subscriber.error(this.thrownError);\n      return Subscription.EMPTY;\n    } else if (this.hasCompleted && this.hasNext) {\n      subscriber.next(this.value);\n      subscriber.complete();\n      return Subscription.EMPTY;\n    }\n    return super._subscribe(subscriber);\n  }\n\n  next(value: T): void {\n    if (!this.hasCompleted) {\n      this.value = value;\n      this.hasNext = true;\n    }\n  }\n\n  error(error: any): void {\n    if (!this.hasCompleted) {\n      super.error(error);\n    }\n  }\n\n  complete(): void {\n    this.hasCompleted = true;\n    if (this.hasNext) {\n      super.next(this.value);\n    }\n    super.complete();\n  }\n}\n","import { AsyncAction } from './AsyncAction';\nimport { Subscription } from '../Subscription';\nimport { QueueScheduler } from './QueueScheduler';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class QueueAction<T> extends AsyncAction<T> {\n\n  constructor(protected scheduler: QueueScheduler,\n              protected work: (this: QueueAction<T>, state?: T) => void) {\n    super(scheduler, work);\n  }\n\n  public schedule(state?: T, delay: number = 0): Subscription {\n    if (delay > 0) {\n      return super.schedule(state, delay);\n    }\n    this.delay = delay;\n    this.state = state;\n    this.scheduler.flush(this);\n    return this;\n  }\n\n  public execute(state: T, delay: number): any {\n    return (delay > 0 || this.closed) ?\n      super.execute(state, delay) :\n      this._execute(state, delay) ;\n  }\n\n  protected requestAsyncId(scheduler: QueueScheduler, id?: any, delay: number = 0): any {\n    // If delay exists and is greater than 0, or if the delay is null (the\n    // action wasn't rescheduled) but was originally scheduled as an async\n    // action, then recycle as an async action.\n    if ((delay !== null && delay > 0) || (delay === null && this.delay > 0)) {\n      return super.requestAsyncId(scheduler, id, delay);\n    }\n    // Otherwise flush the scheduler starting with this action.\n    return scheduler.flush(this);\n  }\n}\n","import { QueueAction } from './QueueAction';\nimport { QueueScheduler } from './QueueScheduler';\n\n/**\n *\n * Queue Scheduler\n *\n * <span class=\"informal\">Put every next task on a queue, instead of executing it immediately</span>\n *\n * `queue` scheduler, when used with delay, behaves the same as {@link async} scheduler.\n *\n * When used without delay, it schedules given task synchronously - executes it right when\n * it is scheduled. However when called recursively, that is when inside the scheduled task,\n * another task is scheduled with queue scheduler, instead of executing immediately as well,\n * that task will be put on a queue and wait for current one to finish.\n *\n * This means that when you execute task with `queue` scheduler, you are sure it will end\n * before any other task scheduled with that scheduler will start.\n *\n * @examples <caption>Schedule recursively first, then do something</caption>\n *\n * Rx.Scheduler.queue.schedule(() => {\n *   Rx.Scheduler.queue.schedule(() => console.log('second')); // will not happen now, but will be put on a queue\n *\n *   console.log('first');\n * });\n *\n * // Logs:\n * // \"first\"\n * // \"second\"\n *\n *\n * @example <caption>Reschedule itself recursively</caption>\n *\n * Rx.Scheduler.queue.schedule(function(state) {\n *   if (state !== 0) {\n *     console.log('before', state);\n *     this.schedule(state - 1); // `this` references currently executing Action,\n *                               // which we reschedule with new state\n *     console.log('after', state);\n *   }\n * }, 0, 3);\n *\n * // In scheduler that runs recursively, you would expect:\n * // \"before\", 3\n * // \"before\", 2\n * // \"before\", 1\n * // \"after\", 1\n * // \"after\", 2\n * // \"after\", 3\n *\n * // But with queue it logs:\n * // \"before\", 3\n * // \"after\", 3\n * // \"before\", 2\n * // \"after\", 2\n * // \"before\", 1\n * // \"after\", 1\n *\n *\n * @static true\n * @name queue\n * @owner Scheduler\n */\n\nexport const queue = new QueueScheduler(QueueAction);\n","import { AsyncScheduler } from './AsyncScheduler';\n\nexport class QueueScheduler extends AsyncScheduler {\n}\n","import { Subject } from './Subject';\nimport { IScheduler } from './Scheduler';\nimport { queue } from './scheduler/queue';\nimport { Subscriber } from './Subscriber';\nimport { Subscription } from './Subscription';\nimport { ObserveOnSubscriber } from './operators/observeOn';\nimport { ObjectUnsubscribedError } from './util/ObjectUnsubscribedError';\nimport { SubjectSubscription } from './SubjectSubscription';\n/**\n * @class ReplaySubject<T>\n */\nexport class ReplaySubject<T> extends Subject<T> {\n  private _events: ReplayEvent<T>[] = [];\n  private _bufferSize: number;\n  private _windowTime: number;\n\n  constructor(bufferSize: number = Number.POSITIVE_INFINITY,\n              windowTime: number = Number.POSITIVE_INFINITY,\n              private scheduler?: IScheduler) {\n    super();\n    this._bufferSize = bufferSize < 1 ? 1 : bufferSize;\n    this._windowTime = windowTime < 1 ? 1 : windowTime;\n  }\n\n  next(value: T): void {\n    const now = this._getNow();\n    this._events.push(new ReplayEvent(now, value));\n    this._trimBufferThenGetEvents();\n    super.next(value);\n  }\n\n  /** @deprecated internal use only */ _subscribe(subscriber: Subscriber<T>): Subscription {\n    const _events = this._trimBufferThenGetEvents();\n    const scheduler = this.scheduler;\n    let subscription: Subscription;\n\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    } else if (this.hasError) {\n      subscription = Subscription.EMPTY;\n    } else if (this.isStopped) {\n      subscription = Subscription.EMPTY;\n    } else {\n      this.observers.push(subscriber);\n      subscription = new SubjectSubscription(this, subscriber);\n    }\n\n    if (scheduler) {\n      subscriber.add(subscriber = new ObserveOnSubscriber<T>(subscriber, scheduler));\n    }\n\n    const len = _events.length;\n    for (let i = 0; i < len && !subscriber.closed; i++) {\n      subscriber.next(_events[i].value);\n    }\n\n    if (this.hasError) {\n      subscriber.error(this.thrownError);\n    } else if (this.isStopped) {\n      subscriber.complete();\n    }\n\n    return subscription;\n  }\n\n  _getNow(): number {\n    return (this.scheduler || queue).now();\n  }\n\n  private _trimBufferThenGetEvents(): ReplayEvent<T>[] {\n    const now = this._getNow();\n    const _bufferSize = this._bufferSize;\n    const _windowTime = this._windowTime;\n    const _events = this._events;\n\n    let eventsCount = _events.length;\n    let spliceCount = 0;\n\n    // Trim events that fall out of the time window.\n    // Start at the front of the list. Break early once\n    // we encounter an event that falls within the window.\n    while (spliceCount < eventsCount) {\n      if ((now - _events[spliceCount].time) < _windowTime) {\n        break;\n      }\n      spliceCount++;\n    }\n\n    if (eventsCount > _bufferSize) {\n      spliceCount = Math.max(spliceCount, eventsCount - _bufferSize);\n    }\n\n    if (spliceCount > 0) {\n      _events.splice(0, spliceCount);\n    }\n\n    return _events;\n  }\n}\n\nclass ReplayEvent<T> {\n  constructor(public time: number, public value: T) {\n  }\n}\n","import { Observable } from '../Observable';\nimport { isArray } from '../util/isArray';\nimport { ArrayObservable } from '../observable/ArrayObservable';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription, TeardownLogic } from '../Subscription';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n\n/**\n * Returns an Observable that mirrors the first source Observable to emit an item.\n * @param {...Observables} ...observables sources used to race for which Observable emits first.\n * @return {Observable} an Observable that mirrors the output of the first Observable to emit an item.\n * @static true\n * @name race\n * @owner Observable\n */\nexport function race<T>(observables: Array<Observable<T>>): Observable<T>;\nexport function race<T>(observables: Array<Observable<any>>): Observable<T>;\nexport function race<T>(...observables: Array<Observable<T> | Array<Observable<T>>>): Observable<T>;\nexport function race<T>(...observables: Array<Observable<any> | Array<Observable<any>>>): Observable<T> {\n  // if the only argument is an array, it was most likely called with\n  // `race([obs1, obs2, ...])`\n  if (observables.length === 1) {\n    if (isArray(observables[0])) {\n      observables = <Array<Observable<any>>>observables[0];\n    } else {\n      return <Observable<any>>observables[0];\n    }\n  }\n\n  return new ArrayObservable<T>(<any>observables).lift(new RaceOperator<T>());\n}\n\nexport class RaceOperator<T> implements Operator<T, T> {\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new RaceSubscriber(subscriber));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class RaceSubscriber<T> extends OuterSubscriber<T, T> {\n  private hasFirst: boolean = false;\n  private observables: Observable<any>[] = [];\n  private subscriptions: Subscription[] = [];\n\n  constructor(destination: Subscriber<T>) {\n    super(destination);\n  }\n\n  protected _next(observable: any): void {\n    this.observables.push(observable);\n  }\n\n  protected _complete() {\n    const observables = this.observables;\n    const len = observables.length;\n\n    if (len === 0) {\n      this.destination.complete();\n    } else {\n      for (let i = 0; i < len && !this.hasFirst; i++) {\n        let observable = observables[i];\n        let subscription = subscribeToResult(this, observable, observable, i);\n\n        if (this.subscriptions) {\n          this.subscriptions.push(subscription);\n        }\n        this.add(subscription);\n      }\n      this.observables = null;\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: T,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, T>): void {\n    if (!this.hasFirst) {\n      this.hasFirst = true;\n\n      for (let i = 0; i < this.subscriptions.length; i++) {\n        if (i !== outerIndex) {\n          let subscription = this.subscriptions[i];\n\n          subscription.unsubscribe();\n          this.remove(subscription);\n        }\n      }\n\n      this.subscriptions = null;\n    }\n\n    this.destination.next(innerValue);\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { EmptyObservable } from '../observable/EmptyObservable';\nimport { TeardownLogic } from '../Subscription';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Returns an Observable that repeats the stream of items emitted by the source Observable at most count times.\n *\n * <img src=\"./img/repeat.png\" width=\"100%\">\n *\n * @param {number} [count] The number of times the source Observable items are repeated, a count of 0 will yield\n * an empty Observable.\n * @return {Observable} An Observable that repeats the stream of items emitted by the source Observable at most\n * count times.\n * @method repeat\n * @owner Observable\n */\nexport function repeat<T>(count: number = -1): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => {\n    if (count === 0) {\n      return new EmptyObservable<T>();\n    } else if (count < 0) {\n      return source.lift(new RepeatOperator(-1, source));\n    } else {\n      return source.lift(new RepeatOperator(count - 1, source));\n    }\n  };\n}\n\nclass RepeatOperator<T> implements Operator<T, T> {\n  constructor(private count: number,\n              private source: Observable<T>) {\n  }\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new RepeatSubscriber(subscriber, this.count, this.source));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass RepeatSubscriber<T> extends Subscriber<T> {\n  constructor(destination: Subscriber<any>,\n              private count: number,\n              private source: Observable<T>) {\n    super(destination);\n  }\n  complete() {\n    if (!this.isStopped) {\n      const { source, count } = this;\n      if (count === 0) {\n        return super.complete();\n      } else if (count > -1) {\n        this.count = count - 1;\n      }\n      source.subscribe(this._unsubscribeAndRecycle());\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { Subject } from '../Subject';\nimport { Subscription, TeardownLogic } from '../Subscription';\nimport { tryCatch } from '../util/tryCatch';\nimport { errorObject } from '../util/errorObject';\n\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Returns an Observable that mirrors the source Observable with the exception of a `complete`. If the source\n * Observable calls `complete`, this method will emit to the Observable returned from `notifier`. If that Observable\n * calls `complete` or `error`, then this method will call `complete` or `error` on the child subscription. Otherwise\n * this method will resubscribe to the source Observable.\n *\n * <img src=\"./img/repeatWhen.png\" width=\"100%\">\n *\n * @param {function(notifications: Observable): Observable} notifier - Receives an Observable of notifications with\n * which a user can `complete` or `error`, aborting the repetition.\n * @return {Observable} The source Observable modified with repeat logic.\n * @method repeatWhen\n * @owner Observable\n */\nexport function repeatWhen<T>(notifier: (notifications: Observable<any>) => Observable<any>): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new RepeatWhenOperator(notifier));\n}\n\nclass RepeatWhenOperator<T> implements Operator<T, T> {\n  constructor(protected notifier: (notifications: Observable<any>) => Observable<any>) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new RepeatWhenSubscriber(subscriber, this.notifier, source));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass RepeatWhenSubscriber<T, R> extends OuterSubscriber<T, R> {\n\n  private notifications: Subject<any>;\n  private retries: Observable<any>;\n  private retriesSubscription: Subscription;\n  private sourceIsBeingSubscribedTo: boolean = true;\n\n  constructor(destination: Subscriber<R>,\n              private notifier: (notifications: Observable<any>) => Observable<any>,\n              private source: Observable<T>) {\n    super(destination);\n  }\n\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this.sourceIsBeingSubscribedTo = true;\n    this.source.subscribe(this);\n  }\n\n  notifyComplete(innerSub: InnerSubscriber<T, R>): void {\n    if (this.sourceIsBeingSubscribedTo === false) {\n      return super.complete();\n    }\n  }\n\n  complete() {\n    this.sourceIsBeingSubscribedTo = false;\n\n    if (!this.isStopped) {\n      if (!this.retries) {\n        this.subscribeToRetries();\n      }\n      if (!this.retriesSubscription || this.retriesSubscription.closed) {\n        return super.complete();\n      }\n\n      this._unsubscribeAndRecycle();\n      this.notifications.next();\n    }\n  }\n\n  /** @deprecated internal use only */ _unsubscribe() {\n    const { notifications, retriesSubscription } = this;\n    if (notifications) {\n      notifications.unsubscribe();\n      this.notifications = null;\n    }\n    if (retriesSubscription) {\n      retriesSubscription.unsubscribe();\n      this.retriesSubscription = null;\n    }\n    this.retries = null;\n  }\n\n  /** @deprecated internal use only */ _unsubscribeAndRecycle(): Subscriber<T> {\n    const { notifications, retries, retriesSubscription } = this;\n    this.notifications = null;\n    this.retries = null;\n    this.retriesSubscription = null;\n    super._unsubscribeAndRecycle();\n    this.notifications = notifications;\n    this.retries = retries;\n    this.retriesSubscription = retriesSubscription;\n    return this;\n  }\n\n  private subscribeToRetries() {\n    this.notifications = new Subject();\n    const retries = tryCatch(this.notifier)(this.notifications);\n    if (retries === errorObject) {\n      return super.complete();\n    }\n    this.retries = retries;\n    this.retriesSubscription = subscribeToResult(this, retries);\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { TeardownLogic } from '../Subscription';\n\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Returns an Observable that mirrors the source Observable with the exception of an `error`. If the source Observable\n * calls `error`, this method will resubscribe to the source Observable for a maximum of `count` resubscriptions (given\n * as a number parameter) rather than propagating the `error` call.\n *\n * <img src=\"./img/retry.png\" width=\"100%\">\n *\n * Any and all items emitted by the source Observable will be emitted by the resulting Observable, even those emitted\n * during failed subscriptions. For example, if an Observable fails at first but emits [1, 2] then succeeds the second\n * time and emits: [1, 2, 3, 4, 5] then the complete stream of emissions and notifications\n * would be: [1, 2, 1, 2, 3, 4, 5, `complete`].\n * @param {number} count - Number of retry attempts before failing.\n * @return {Observable} The source Observable modified with the retry logic.\n * @method retry\n * @owner Observable\n */\nexport function retry<T>(count: number = -1): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new RetryOperator(count, source));\n}\n\nclass RetryOperator<T> implements Operator<T, T> {\n  constructor(private count: number,\n              private source: Observable<T>) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new RetrySubscriber(subscriber, this.count, this.source));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass RetrySubscriber<T> extends Subscriber<T> {\n  constructor(destination: Subscriber<any>,\n              private count: number,\n              private source: Observable<T>) {\n    super(destination);\n  }\n  error(err: any) {\n    if (!this.isStopped) {\n      const { source, count } = this;\n      if (count === 0) {\n        return super.error(err);\n      } else if (count > -1) {\n        this.count = count - 1;\n      }\n      source.subscribe(this._unsubscribeAndRecycle());\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { Subject } from '../Subject';\nimport { Subscription, TeardownLogic } from '../Subscription';\nimport { tryCatch } from '../util/tryCatch';\nimport { errorObject } from '../util/errorObject';\n\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Returns an Observable that mirrors the source Observable with the exception of an `error`. If the source Observable\n * calls `error`, this method will emit the Throwable that caused the error to the Observable returned from `notifier`.\n * If that Observable calls `complete` or `error` then this method will call `complete` or `error` on the child\n * subscription. Otherwise this method will resubscribe to the source Observable.\n *\n * <img src=\"./img/retryWhen.png\" width=\"100%\">\n *\n * @param {function(errors: Observable): Observable} notifier - Receives an Observable of notifications with which a\n * user can `complete` or `error`, aborting the retry.\n * @return {Observable} The source Observable modified with retry logic.\n * @method retryWhen\n * @owner Observable\n */\nexport function retryWhen<T>(notifier: (errors: Observable<any>) => Observable<any>): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new RetryWhenOperator(notifier, source));\n}\n\nclass RetryWhenOperator<T> implements Operator<T, T> {\n  constructor(protected notifier: (errors: Observable<any>) => Observable<any>,\n              public source: Observable<T>) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new RetryWhenSubscriber(subscriber, this.notifier, this.source));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass RetryWhenSubscriber<T, R> extends OuterSubscriber<T, R> {\n\n  private errors: Subject<any>;\n  private retries: Observable<any>;\n  private retriesSubscription: Subscription;\n\n  constructor(destination: Subscriber<R>,\n              private notifier: (errors: Observable<any>) => Observable<any>,\n              private source: Observable<T>) {\n    super(destination);\n  }\n\n  error(err: any) {\n    if (!this.isStopped) {\n\n      let errors = this.errors;\n      let retries: any = this.retries;\n      let retriesSubscription = this.retriesSubscription;\n\n      if (!retries) {\n        errors = new Subject();\n        retries = tryCatch(this.notifier)(errors);\n        if (retries === errorObject) {\n          return super.error(errorObject.e);\n        }\n        retriesSubscription = subscribeToResult(this, retries);\n      } else {\n        this.errors = null;\n        this.retriesSubscription = null;\n      }\n\n      this._unsubscribeAndRecycle();\n\n      this.errors = errors;\n      this.retries = retries;\n      this.retriesSubscription = retriesSubscription;\n\n      errors.next(err);\n    }\n  }\n\n  /** @deprecated internal use only */ _unsubscribe() {\n    const { errors, retriesSubscription } = this;\n    if (errors) {\n      errors.unsubscribe();\n      this.errors = null;\n    }\n    if (retriesSubscription) {\n      retriesSubscription.unsubscribe();\n      this.retriesSubscription = null;\n    }\n    this.retries = null;\n  }\n\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    const { errors, retries, retriesSubscription } = this;\n    this.errors = null;\n    this.retries = null;\n    this.retriesSubscription = null;\n\n    this._unsubscribeAndRecycle();\n\n    this.errors = errors;\n    this.retries = retries;\n    this.retriesSubscription = retriesSubscription;\n\n    this.source.subscribe(this);\n  }\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { TeardownLogic } from '../Subscription';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Emits the most recently emitted value from the source Observable whenever\n * another Observable, the `notifier`, emits.\n *\n * <span class=\"informal\">It's like {@link sampleTime}, but samples whenever\n * the `notifier` Observable emits something.</span>\n *\n * <img src=\"./img/sample.png\" width=\"100%\">\n *\n * Whenever the `notifier` Observable emits a value or completes, `sample`\n * looks at the source Observable and emits whichever value it has most recently\n * emitted since the previous sampling, unless the source has not emitted\n * anything since the previous sampling. The `notifier` is subscribed to as soon\n * as the output Observable is subscribed.\n *\n * @example <caption>On every click, sample the most recent \"seconds\" timer</caption>\n * var seconds = Rx.Observable.interval(1000);\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = seconds.sample(clicks);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link audit}\n * @see {@link debounce}\n * @see {@link sampleTime}\n * @see {@link throttle}\n *\n * @param {Observable<any>} notifier The Observable to use for sampling the\n * source Observable.\n * @return {Observable<T>} An Observable that emits the results of sampling the\n * values emitted by the source Observable whenever the notifier Observable\n * emits value or completes.\n * @method sample\n * @owner Observable\n */\nexport function sample<T>(notifier: Observable<any>): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new SampleOperator(notifier));\n}\n\nclass SampleOperator<T> implements Operator<T, T> {\n  constructor(private notifier: Observable<any>) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    const sampleSubscriber = new SampleSubscriber(subscriber);\n    const subscription = source.subscribe(sampleSubscriber);\n    subscription.add(subscribeToResult(sampleSubscriber, this.notifier));\n    return subscription;\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SampleSubscriber<T, R> extends OuterSubscriber<T, R> {\n  private value: T;\n  private hasValue: boolean = false;\n\n  protected _next(value: T) {\n    this.value = value;\n    this.hasValue = true;\n  }\n\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this.emitValue();\n  }\n\n  notifyComplete(): void {\n    this.emitValue();\n  }\n\n  emitValue() {\n    if (this.hasValue) {\n      this.hasValue = false;\n      this.destination.next(this.value);\n    }\n  }\n}\n","import { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { IScheduler } from '../Scheduler';\nimport { Action } from '../scheduler/Action';\nimport { async } from '../scheduler/async';\nimport { TeardownLogic } from '../Subscription';\n\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Emits the most recently emitted value from the source Observable within\n * periodic time intervals.\n *\n * <span class=\"informal\">Samples the source Observable at periodic time\n * intervals, emitting what it samples.</span>\n *\n * <img src=\"./img/sampleTime.png\" width=\"100%\">\n *\n * `sampleTime` periodically looks at the source Observable and emits whichever\n * value it has most recently emitted since the previous sampling, unless the\n * source has not emitted anything since the previous sampling. The sampling\n * happens periodically in time every `period` milliseconds (or the time unit\n * defined by the optional `scheduler` argument). The sampling starts as soon as\n * the output Observable is subscribed.\n *\n * @example <caption>Every second, emit the most recent click at most once</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.sampleTime(1000);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link auditTime}\n * @see {@link debounceTime}\n * @see {@link delay}\n * @see {@link sample}\n * @see {@link throttleTime}\n *\n * @param {number} period The sampling period expressed in milliseconds or the\n * time unit determined internally by the optional `scheduler`.\n * @param {Scheduler} [scheduler=async] The {@link IScheduler} to use for\n * managing the timers that handle the sampling.\n * @return {Observable<T>} An Observable that emits the results of sampling the\n * values emitted by the source Observable at the specified time interval.\n * @method sampleTime\n * @owner Observable\n */\nexport function sampleTime<T>(period: number, scheduler: IScheduler = async): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new SampleTimeOperator(period, scheduler));\n}\n\nclass SampleTimeOperator<T> implements Operator<T, T> {\n  constructor(private period: number,\n              private scheduler: IScheduler) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new SampleTimeSubscriber(subscriber, this.period, this.scheduler));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SampleTimeSubscriber<T> extends Subscriber<T> {\n  lastValue: T;\n  hasValue: boolean = false;\n\n  constructor(destination: Subscriber<T>,\n              private period: number,\n              private scheduler: IScheduler) {\n    super(destination);\n    this.add(scheduler.schedule(dispatchNotification, period, { subscriber: this, period }));\n  }\n\n  protected _next(value: T) {\n    this.lastValue = value;\n    this.hasValue = true;\n  }\n\n  notifyNext() {\n    if (this.hasValue) {\n      this.hasValue = false;\n      this.destination.next(this.lastValue);\n    }\n  }\n}\n\nfunction dispatchNotification<T>(this: Action<any>, state: any) {\n  let { subscriber, period } = state;\n  subscriber.notifyNext();\n  this.schedule(state, period);\n}\n","import { Operator } from '../Operator';\nimport { Observer } from '../Observer';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { tryCatch } from '../util/tryCatch';\nimport { errorObject } from '../util/errorObject';\n\nimport { OperatorFunction } from '../interfaces';\n\n/**\n * Compares all values of two observables in sequence using an optional comparor function\n * and returns an observable of a single boolean value representing whether or not the two sequences\n * are equal.\n *\n * <span class=\"informal\">Checks to see of all values emitted by both observables are equal, in order.</span>\n *\n * <img src=\"./img/sequenceEqual.png\" width=\"100%\">\n *\n * `sequenceEqual` subscribes to two observables and buffers incoming values from each observable. Whenever either\n * observable emits a value, the value is buffered and the buffers are shifted and compared from the bottom\n * up; If any value pair doesn't match, the returned observable will emit `false` and complete. If one of the\n * observables completes, the operator will wait for the other observable to complete; If the other\n * observable emits before completing, the returned observable will emit `false` and complete. If one observable never\n * completes or emits after the other complets, the returned observable will never complete.\n *\n * @example <caption>figure out if the Konami code matches</caption>\n * var code = Rx.Observable.from([\n *  \"ArrowUp\",\n *  \"ArrowUp\",\n *  \"ArrowDown\",\n *  \"ArrowDown\",\n *  \"ArrowLeft\",\n *  \"ArrowRight\",\n *  \"ArrowLeft\",\n *  \"ArrowRight\",\n *  \"KeyB\",\n *  \"KeyA\",\n *  \"Enter\" // no start key, clearly.\n * ]);\n *\n * var keys = Rx.Observable.fromEvent(document, 'keyup')\n *  .map(e => e.code);\n * var matches = keys.bufferCount(11, 1)\n *  .mergeMap(\n *    last11 =>\n *      Rx.Observable.from(last11)\n *        .sequenceEqual(code)\n *   );\n * matches.subscribe(matched => console.log('Successful cheat at Contra? ', matched));\n *\n * @see {@link combineLatest}\n * @see {@link zip}\n * @see {@link withLatestFrom}\n *\n * @param {Observable} compareTo The observable sequence to compare the source sequence to.\n * @param {function} [comparor] An optional function to compare each value pair\n * @return {Observable} An Observable of a single boolean value representing whether or not\n * the values emitted by both observables were equal in sequence.\n * @method sequenceEqual\n * @owner Observable\n */\nexport function sequenceEqual<T>(compareTo: Observable<T>,\n                                 comparor?: (a: T, b: T) => boolean): OperatorFunction<T, boolean> {\n  return (source: Observable<T>) => source.lift(new SequenceEqualOperator(compareTo, comparor));\n}\n\nexport class SequenceEqualOperator<T> implements Operator<T, boolean> {\n  constructor(private compareTo: Observable<T>,\n              private comparor: (a: T, b: T) => boolean) {\n  }\n\n  call(subscriber: Subscriber<boolean>, source: any): any {\n    return source.subscribe(new SequenceEqualSubscriber(subscriber, this.compareTo, this.comparor));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class SequenceEqualSubscriber<T, R> extends Subscriber<T> {\n  private _a: T[] = [];\n  private _b: T[] = [];\n  private _oneComplete = false;\n\n  constructor(destination: Observer<R>,\n              private compareTo: Observable<T>,\n              private comparor: (a: T, b: T) => boolean) {\n    super(destination);\n    this.add(compareTo.subscribe(new SequenceEqualCompareToSubscriber(destination, this)));\n  }\n\n  protected _next(value: T): void {\n    if (this._oneComplete && this._b.length === 0) {\n      this.emit(false);\n    } else {\n      this._a.push(value);\n      this.checkValues();\n    }\n  }\n\n  public _complete(): void {\n    if (this._oneComplete) {\n      this.emit(this._a.length === 0 && this._b.length === 0);\n    } else {\n      this._oneComplete = true;\n    }\n  }\n\n  checkValues() {\n    const { _a, _b, comparor } = this;\n    while (_a.length > 0 && _b.length > 0) {\n      let a = _a.shift();\n      let b = _b.shift();\n      let areEqual = false;\n      if (comparor) {\n        areEqual = tryCatch(comparor)(a, b);\n        if (areEqual === errorObject) {\n          this.destination.error(errorObject.e);\n        }\n      } else {\n        areEqual = a === b;\n      }\n      if (!areEqual) {\n        this.emit(false);\n      }\n    }\n  }\n\n  emit(value: boolean) {\n    const { destination } = this;\n    destination.next(value);\n    destination.complete();\n  }\n\n  nextB(value: T) {\n    if (this._oneComplete && this._a.length === 0) {\n      this.emit(false);\n    } else {\n      this._b.push(value);\n      this.checkValues();\n    }\n  }\n}\n\nclass SequenceEqualCompareToSubscriber<T, R> extends Subscriber<T> {\n  constructor(destination: Observer<R>, private parent: SequenceEqualSubscriber<T, R>) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    this.parent.nextB(value);\n  }\n\n  protected _error(err: any): void {\n    this.parent.error(err);\n  }\n\n  protected _complete(): void {\n    this.parent._complete();\n  }\n}\n","import { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observer } from '../Observer';\nimport { EmptyError } from '../util/EmptyError';\nimport { TeardownLogic } from '../Subscription';\n\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Returns an Observable that emits the single item emitted by the source Observable that matches a specified\n * predicate, if that Observable emits one such item. If the source Observable emits more than one such item or no\n * such items, notify of an IllegalArgumentException or NoSuchElementException respectively.\n *\n * <img src=\"./img/single.png\" width=\"100%\">\n *\n * @throws {EmptyError} Delivers an EmptyError to the Observer's `error`\n * callback if the Observable completes before any `next` notification was sent.\n * @param {Function} predicate - A predicate function to evaluate items emitted by the source Observable.\n * @return {Observable<T>} An Observable that emits the single item emitted by the source Observable that matches\n * the predicate.\n .\n * @method single\n * @owner Observable\n */\nexport function single<T>(predicate?: (value: T, index: number, source: Observable<T>) => boolean): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new SingleOperator(predicate, source));\n}\n\nclass SingleOperator<T> implements Operator<T, T> {\n  constructor(private predicate?: (value: T, index: number, source: Observable<T>) => boolean,\n              private source?: Observable<T>) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new SingleSubscriber(subscriber, this.predicate, this.source));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SingleSubscriber<T> extends Subscriber<T> {\n  private seenValue: boolean = false;\n  private singleValue: T;\n  private index: number = 0;\n\n  constructor(destination: Observer<T>,\n              private predicate?: (value: T, index: number, source: Observable<T>) => boolean,\n              private source?: Observable<T>) {\n    super(destination);\n  }\n\n  private applySingleValue(value: T): void {\n    if (this.seenValue) {\n      this.destination.error('Sequence contains more than one element');\n    } else {\n      this.seenValue = true;\n      this.singleValue = value;\n    }\n  }\n\n  protected _next(value: T): void {\n    const index = this.index++;\n\n    if (this.predicate) {\n      this.tryNext(value, index);\n    } else {\n      this.applySingleValue(value);\n    }\n  }\n\n  private tryNext(value: T, index: number): void {\n    try {\n      if (this.predicate(value, index, this.source)) {\n        this.applySingleValue(value);\n      }\n    } catch (err) {\n      this.destination.error(err);\n    }\n  }\n\n  protected _complete(): void {\n    const destination = this.destination;\n\n    if (this.index > 0) {\n      destination.next(this.seenValue ? this.singleValue : undefined);\n      destination.complete();\n    } else {\n      destination.error(new EmptyError);\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { TeardownLogic } from '../Subscription';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Returns an Observable that skips the first `count` items emitted by the source Observable.\n *\n * <img src=\"./img/skip.png\" width=\"100%\">\n *\n * @param {Number} count - The number of times, items emitted by source Observable should be skipped.\n * @return {Observable} An Observable that skips values emitted by the source Observable.\n *\n * @method skip\n * @owner Observable\n */\nexport function skip<T>(count: number): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new SkipOperator(count));\n}\n\nclass SkipOperator<T> implements Operator<T, T> {\n  constructor(private total: number) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new SkipSubscriber(subscriber, this.total));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SkipSubscriber<T> extends Subscriber<T> {\n  count: number = 0;\n\n  constructor(destination: Subscriber<T>, private total: number) {\n    super(destination);\n  }\n\n  protected _next(x: T) {\n    if (++this.count > this.total) {\n      this.destination.next(x);\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { ArgumentOutOfRangeError } from '../util/ArgumentOutOfRangeError';\nimport { Observable } from '../Observable';\nimport { TeardownLogic } from '../Subscription';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Skip the last `count` values emitted by the source Observable.\n *\n * <img src=\"./img/skipLast.png\" width=\"100%\">\n *\n * `skipLast` returns an Observable that accumulates a queue with a length\n * enough to store the first `count` values. As more values are received,\n * values are taken from the front of the queue and produced on the result\n * sequence. This causes values to be delayed.\n *\n * @example <caption>Skip the last 2 values of an Observable with many values</caption>\n * var many = Rx.Observable.range(1, 5);\n * var skipLastTwo = many.skipLast(2);\n * skipLastTwo.subscribe(x => console.log(x));\n *\n * // Results in:\n * // 1 2 3\n *\n * @see {@link skip}\n * @see {@link skipUntil}\n * @see {@link skipWhile}\n * @see {@link take}\n *\n * @throws {ArgumentOutOfRangeError} When using `skipLast(i)`, it throws\n * ArgumentOutOrRangeError if `i < 0`.\n *\n * @param {number} count Number of elements to skip from the end of the source Observable.\n * @returns {Observable<T>} An Observable that skips the last count values\n * emitted by the source Observable.\n * @method skipLast\n * @owner Observable\n */\nexport function skipLast<T>(count: number): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new SkipLastOperator(count));\n}\n\nclass SkipLastOperator<T> implements Operator<T, T> {\n  constructor(private _skipCount: number) {\n    if (this._skipCount < 0) {\n      throw new ArgumentOutOfRangeError;\n    }\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    if (this._skipCount === 0) {\n      // If we don't want to skip any values then just subscribe\n      // to Subscriber without any further logic.\n      return source.subscribe(new Subscriber(subscriber));\n    } else {\n      return source.subscribe(new SkipLastSubscriber(subscriber, this._skipCount));\n    }\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SkipLastSubscriber<T> extends Subscriber<T> {\n  private _ring: T[];\n  private _count: number = 0;\n\n  constructor(destination: Subscriber<T>, private _skipCount: number) {\n    super(destination);\n    this._ring = new Array<T>(_skipCount);\n  }\n\n  protected _next(value: T): void {\n    const skipCount = this._skipCount;\n    const count = this._count++;\n\n    if (count < skipCount) {\n      this._ring[count] = value;\n    } else {\n      const currentIndex = count % skipCount;\n      const ring = this._ring;\n      const oldValue = ring[currentIndex];\n\n      ring[currentIndex] = value;\n      this.destination.next(oldValue);\n    }\n  }\n}","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { TeardownLogic } from '../Subscription';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Returns an Observable that skips items emitted by the source Observable until a second Observable emits an item.\n *\n * <img src=\"./img/skipUntil.png\" width=\"100%\">\n *\n * @param {Observable} notifier - The second Observable that has to emit an item before the source Observable's elements begin to\n * be mirrored by the resulting Observable.\n * @return {Observable<T>} An Observable that skips items from the source Observable until the second Observable emits\n * an item, then emits the remaining items.\n * @method skipUntil\n * @owner Observable\n */\nexport function skipUntil<T>(notifier: Observable<any>): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new SkipUntilOperator(notifier));\n}\n\nclass SkipUntilOperator<T> implements Operator<T, T> {\n  constructor(private notifier: Observable<any>) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new SkipUntilSubscriber(subscriber, this.notifier));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SkipUntilSubscriber<T, R> extends OuterSubscriber<T, R> {\n\n  private hasValue: boolean = false;\n  private isInnerStopped: boolean = false;\n\n  constructor(destination: Subscriber<any>,\n              notifier: Observable<any>) {\n    super(destination);\n    this.add(subscribeToResult(this, notifier));\n  }\n\n  protected _next(value: T) {\n    if (this.hasValue) {\n      super._next(value);\n    }\n  }\n\n  protected _complete() {\n    if (this.isInnerStopped) {\n      super._complete();\n    } else {\n      this.unsubscribe();\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this.hasValue = true;\n  }\n\n  notifyComplete(): void {\n    this.isInnerStopped = true;\n    if (this.isStopped) {\n      super._complete();\n    }\n  }\n}\n","import { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { TeardownLogic } from '../Subscription';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Returns an Observable that skips all items emitted by the source Observable as long as a specified condition holds\n * true, but emits all further source items as soon as the condition becomes false.\n *\n * <img src=\"./img/skipWhile.png\" width=\"100%\">\n *\n * @param {Function} predicate - A function to test each item emitted from the source Observable.\n * @return {Observable<T>} An Observable that begins emitting items emitted by the source Observable when the\n * specified predicate becomes false.\n * @method skipWhile\n * @owner Observable\n */\nexport function skipWhile<T>(predicate: (value: T, index: number) => boolean): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new SkipWhileOperator(predicate));\n}\n\nclass SkipWhileOperator<T> implements Operator<T, T> {\n  constructor(private predicate: (value: T, index: number) => boolean) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new SkipWhileSubscriber(subscriber, this.predicate));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SkipWhileSubscriber<T> extends Subscriber<T> {\n  private skipping: boolean = true;\n  private index: number = 0;\n\n  constructor(destination: Subscriber<T>,\n              private predicate: (value: T, index: number) => boolean) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    const destination = this.destination;\n    if (this.skipping) {\n      this.tryCallPredicate(value);\n    }\n\n    if (!this.skipping) {\n      destination.next(value);\n    }\n  }\n\n  private tryCallPredicate(value: T): void {\n    try {\n      const result = this.predicate(value, this.index++);\n      this.skipping = Boolean(result);\n    } catch (err) {\n      this.destination.error(err);\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Observable, ObservableInput } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OperatorFunction } from '../interfaces';\n\n/* tslint:disable:max-line-length */\nexport function switchMap<T, R>(project: (value: T, index: number) => ObservableInput<R>): OperatorFunction<T, R>;\nexport function switchMap<T, I, R>(project: (value: T, index: number) => ObservableInput<I>, resultSelector: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable, emitting values only from the most recently projected Observable.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link switch}.</span>\n *\n * <img src=\"./img/switchMap.png\" width=\"100%\">\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an (so-called \"inner\") Observable. Each time it observes one of these\n * inner Observables, the output Observable begins emitting the items emitted by\n * that inner Observable. When a new inner Observable is emitted, `switchMap`\n * stops emitting items from the earlier-emitted inner Observable and begins\n * emitting items from the new one. It continues to behave like this for\n * subsequent inner Observables.\n *\n * @example <caption>Rerun an interval Observable on every click event</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.switchMap((ev) => Rx.Observable.interval(1000));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link concatMap}\n * @see {@link exhaustMap}\n * @see {@link mergeMap}\n * @see {@link switch}\n * @see {@link switchMapTo}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\n * A function to produce the value on the output Observable based on the values\n * and the indices of the source (outer) emission and the inner Observable\n * emission. The arguments passed to this function are:\n * - `outerValue`: the value that came from the source\n * - `innerValue`: the value that came from the projected Observable\n * - `outerIndex`: the \"index\" of the value that came from the source\n * - `innerIndex`: the \"index\" of the value from the projected Observable\n * @return {Observable} An Observable that emits the result of applying the\n * projection function (and the optional `resultSelector`) to each item emitted\n * by the source Observable and taking only the values from the most recently\n * projected inner Observable.\n * @method switchMap\n * @owner Observable\n */\nexport function switchMap<T, I, R>(\n  project: (value: T, index: number) => ObservableInput<I>,\n  resultSelector?: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R\n): OperatorFunction<T, I | R> {\n  return function switchMapOperatorFunction(source: Observable<T>): Observable<I | R> {\n    return source.lift(new SwitchMapOperator(project, resultSelector));\n  };\n}\n\nclass SwitchMapOperator<T, I, R> implements Operator<T, I> {\n  constructor(private project: (value: T, index: number) => ObservableInput<I>,\n              private resultSelector?: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R) {\n  }\n\n  call(subscriber: Subscriber<I>, source: any): any {\n    return source.subscribe(new SwitchMapSubscriber(subscriber, this.project, this.resultSelector));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SwitchMapSubscriber<T, I, R> extends OuterSubscriber<T, I> {\n  private index: number = 0;\n  private innerSubscription: Subscription;\n\n  constructor(destination: Subscriber<I>,\n              private project: (value: T, index: number) => ObservableInput<I>,\n              private resultSelector?: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R) {\n    super(destination);\n  }\n\n  protected _next(value: T) {\n    let result: ObservableInput<I>;\n    const index = this.index++;\n    try {\n      result = this.project(value, index);\n    } catch (error) {\n      this.destination.error(error);\n      return;\n    }\n    this._innerSub(result, value, index);\n  }\n\n  private _innerSub(result: ObservableInput<I>, value: T, index: number) {\n    const innerSubscription = this.innerSubscription;\n    if (innerSubscription) {\n      innerSubscription.unsubscribe();\n    }\n    this.add(this.innerSubscription = subscribeToResult(this, result, value, index));\n  }\n\n  protected _complete(): void {\n    const {innerSubscription} = this;\n    if (!innerSubscription || innerSubscription.closed) {\n      super._complete();\n    }\n  }\n\n  /** @deprecated internal use only */ _unsubscribe() {\n    this.innerSubscription = null;\n  }\n\n  notifyComplete(innerSub: Subscription): void {\n    this.remove(innerSub);\n    this.innerSubscription = null;\n    if (this.isStopped) {\n      super._complete();\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: I,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, I>): void {\n    if (this.resultSelector) {\n      this._tryNotifyNext(outerValue, innerValue, outerIndex, innerIndex);\n    } else {\n      this.destination.next(innerValue);\n    }\n  }\n\n  private _tryNotifyNext(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): void {\n    let result: R;\n    try {\n      result = this.resultSelector(outerValue, innerValue, outerIndex, innerIndex);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    this.destination.next(result);\n  }\n}\n","import { Operator } from '../Operator';\nimport { Observable, ObservableInput } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OperatorFunction } from '../interfaces';\n\n/* tslint:disable:max-line-length */\nexport function switchMapTo<T, R>(observable: ObservableInput<R>): OperatorFunction<T, R>;\nexport function switchMapTo<T, I, R>(observable: ObservableInput<I>, resultSelector: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Projects each source value to the same Observable which is flattened multiple\n * times with {@link switch} in the output Observable.\n *\n * <span class=\"informal\">It's like {@link switchMap}, but maps each value\n * always to the same inner Observable.</span>\n *\n * <img src=\"./img/switchMapTo.png\" width=\"100%\">\n *\n * Maps each source value to the given Observable `innerObservable` regardless\n * of the source value, and then flattens those resulting Observables into one\n * single Observable, which is the output Observable. The output Observables\n * emits values only from the most recently emitted instance of\n * `innerObservable`.\n *\n * @example <caption>Rerun an interval Observable on every click event</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.switchMapTo(Rx.Observable.interval(1000));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link concatMapTo}\n * @see {@link switch}\n * @see {@link switchMap}\n * @see {@link mergeMapTo}\n *\n * @param {ObservableInput} innerObservable An Observable to replace each value from\n * the source Observable.\n * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\n * A function to produce the value on the output Observable based on the values\n * and the indices of the source (outer) emission and the inner Observable\n * emission. The arguments passed to this function are:\n * - `outerValue`: the value that came from the source\n * - `innerValue`: the value that came from the projected Observable\n * - `outerIndex`: the \"index\" of the value that came from the source\n * - `innerIndex`: the \"index\" of the value from the projected Observable\n * @return {Observable} An Observable that emits items from the given\n * `innerObservable` (and optionally transformed through `resultSelector`) every\n * time a value is emitted on the source Observable, and taking only the values\n * from the most recently projected inner Observable.\n * @method switchMapTo\n * @owner Observable\n */\nexport function switchMapTo<T, I, R>(innerObservable: Observable<I>,\n                                     resultSelector?: (outerValue: T,\n                                                       innerValue: I,\n                                                       outerIndex: number,\n                                                       innerIndex: number) => R): OperatorFunction<T, I | R> {\n  return (source: Observable<T>) => source.lift(new SwitchMapToOperator(innerObservable, resultSelector));\n}\n\nclass SwitchMapToOperator<T, I, R> implements Operator<T, I> {\n  constructor(private observable: Observable<I>,\n              private resultSelector?: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R) {\n  }\n\n  call(subscriber: Subscriber<I>, source: any): any {\n    return source.subscribe(new SwitchMapToSubscriber(subscriber, this.observable, this.resultSelector));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SwitchMapToSubscriber<T, I, R> extends OuterSubscriber<T, I> {\n  private index: number = 0;\n  private innerSubscription: Subscription;\n\n  constructor(destination: Subscriber<I>,\n              private inner: Observable<I>,\n              private resultSelector?: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R) {\n    super(destination);\n  }\n\n  protected _next(value: any) {\n    const innerSubscription = this.innerSubscription;\n    if (innerSubscription) {\n      innerSubscription.unsubscribe();\n    }\n    this.add(this.innerSubscription = subscribeToResult(this, this.inner, value, this.index++));\n  }\n\n  protected _complete() {\n    const {innerSubscription} = this;\n    if (!innerSubscription || innerSubscription.closed) {\n      super._complete();\n    }\n  }\n\n  /** @deprecated internal use only */ _unsubscribe() {\n    this.innerSubscription = null;\n  }\n\n  notifyComplete(innerSub: Subscription) {\n    this.remove(innerSub);\n    this.innerSubscription = null;\n    if (this.isStopped) {\n      super._complete();\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: I,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, I>): void {\n    const { resultSelector, destination } = this;\n    if (resultSelector) {\n      this.tryResultSelector(outerValue, innerValue, outerIndex, innerIndex);\n    } else {\n      destination.next(innerValue);\n    }\n  }\n\n  private tryResultSelector(outerValue: T, innerValue: I,\n                            outerIndex: number, innerIndex: number): void {\n    const { resultSelector, destination } = this;\n    let result: R;\n    try {\n      result = resultSelector(outerValue, innerValue, outerIndex, innerIndex);\n    } catch (err) {\n      destination.error(err);\n      return;\n    }\n\n    destination.next(result);\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { ArgumentOutOfRangeError } from '../util/ArgumentOutOfRangeError';\nimport { EmptyObservable } from '../observable/EmptyObservable';\nimport { Observable } from '../Observable';\nimport { TeardownLogic } from '../Subscription';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Emits only the first `count` values emitted by the source Observable.\n *\n * <span class=\"informal\">Takes the first `count` values from the source, then\n * completes.</span>\n *\n * <img src=\"./img/take.png\" width=\"100%\">\n *\n * `take` returns an Observable that emits only the first `count` values emitted\n * by the source Observable. If the source emits fewer than `count` values then\n * all of its values are emitted. After that, it completes, regardless if the\n * source completes.\n *\n * @example <caption>Take the first 5 seconds of an infinite 1-second interval Observable</caption>\n * var interval = Rx.Observable.interval(1000);\n * var five = interval.take(5);\n * five.subscribe(x => console.log(x));\n *\n * @see {@link takeLast}\n * @see {@link takeUntil}\n * @see {@link takeWhile}\n * @see {@link skip}\n *\n * @throws {ArgumentOutOfRangeError} When using `take(i)`, it delivers an\n * ArgumentOutOrRangeError to the Observer's `error` callback if `i < 0`.\n *\n * @param {number} count The maximum number of `next` values to emit.\n * @return {Observable<T>} An Observable that emits only the first `count`\n * values emitted by the source Observable, or all of the values from the source\n * if the source emits fewer than `count` values.\n * @method take\n * @owner Observable\n */\nexport function take<T>(count: number): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => {\n    if (count === 0) {\n      return new EmptyObservable<T>();\n    } else {\n      return source.lift(new TakeOperator(count));\n    }\n  };\n}\n\nclass TakeOperator<T> implements Operator<T, T> {\n  constructor(private total: number) {\n    if (this.total < 0) {\n      throw new ArgumentOutOfRangeError;\n    }\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new TakeSubscriber(subscriber, this.total));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass TakeSubscriber<T> extends Subscriber<T> {\n  private count: number = 0;\n\n  constructor(destination: Subscriber<T>, private total: number) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    const total = this.total;\n    const count = ++this.count;\n    if (count <= total) {\n      this.destination.next(value);\n      if (count === total) {\n        this.destination.complete();\n        this.unsubscribe();\n      }\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { TeardownLogic } from '../Subscription';\n\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Emits the values emitted by the source Observable until a `notifier`\n * Observable emits a value.\n *\n * <span class=\"informal\">Lets values pass until a second Observable,\n * `notifier`, emits something. Then, it completes.</span>\n *\n * <img src=\"./img/takeUntil.png\" width=\"100%\">\n *\n * `takeUntil` subscribes and begins mirroring the source Observable. It also\n * monitors a second Observable, `notifier` that you provide. If the `notifier`\n * emits a value or a complete notification, the output Observable stops\n * mirroring the source Observable and completes.\n *\n * @example <caption>Tick every second until the first click happens</caption>\n * var interval = Rx.Observable.interval(1000);\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = interval.takeUntil(clicks);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link take}\n * @see {@link takeLast}\n * @see {@link takeWhile}\n * @see {@link skip}\n *\n * @param {Observable} notifier The Observable whose first emitted value will\n * cause the output Observable of `takeUntil` to stop emitting values from the\n * source Observable.\n * @return {Observable<T>} An Observable that emits the values from the source\n * Observable until such time as `notifier` emits its first value.\n * @method takeUntil\n * @owner Observable\n */\nexport function takeUntil<T>(notifier: Observable<any>): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new TakeUntilOperator(notifier));\n}\n\nclass TakeUntilOperator<T> implements Operator<T, T> {\n  constructor(private notifier: Observable<any>) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new TakeUntilSubscriber(subscriber, this.notifier));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass TakeUntilSubscriber<T, R> extends OuterSubscriber<T, R> {\n\n  constructor(destination: Subscriber<any>,\n              private notifier: Observable<any>) {\n    super(destination);\n    this.add(subscribeToResult(this, notifier));\n  }\n\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this.complete();\n  }\n\n  notifyComplete(): void {\n    // noop\n  }\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { TeardownLogic } from '../Subscription';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Emits values emitted by the source Observable so long as each value satisfies\n * the given `predicate`, and then completes as soon as this `predicate` is not\n * satisfied.\n *\n * <span class=\"informal\">Takes values from the source only while they pass the\n * condition given. When the first value does not satisfy, it completes.</span>\n *\n * <img src=\"./img/takeWhile.png\" width=\"100%\">\n *\n * `takeWhile` subscribes and begins mirroring the source Observable. Each value\n * emitted on the source is given to the `predicate` function which returns a\n * boolean, representing a condition to be satisfied by the source values. The\n * output Observable emits the source values until such time as the `predicate`\n * returns false, at which point `takeWhile` stops mirroring the source\n * Observable and completes the output Observable.\n *\n * @example <caption>Emit click events only while the clientX property is greater than 200</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.takeWhile(ev => ev.clientX > 200);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link take}\n * @see {@link takeLast}\n * @see {@link takeUntil}\n * @see {@link skip}\n *\n * @param {function(value: T, index: number): boolean} predicate A function that\n * evaluates a value emitted by the source Observable and returns a boolean.\n * Also takes the (zero-based) index as the second argument.\n * @return {Observable<T>} An Observable that emits the values from the source\n * Observable so long as each value satisfies the condition defined by the\n * `predicate`, then completes.\n * @method takeWhile\n * @owner Observable\n */\nexport function takeWhile<T>(predicate: (value: T, index: number) => boolean): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new TakeWhileOperator(predicate));\n}\n\nclass TakeWhileOperator<T> implements Operator<T, T> {\n  constructor(private predicate: (value: T, index: number) => boolean) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new TakeWhileSubscriber(subscriber, this.predicate));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass TakeWhileSubscriber<T> extends Subscriber<T> {\n  private index: number = 0;\n\n  constructor(destination: Subscriber<T>,\n              private predicate: (value: T, index: number) => boolean) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    const destination = this.destination;\n    let result: boolean;\n    try {\n      result = this.predicate(value, this.index++);\n    } catch (err) {\n      destination.error(err);\n      return;\n    }\n    this.nextOrComplete(value, result);\n  }\n\n  private nextOrComplete(value: T, predicateResult: boolean): void {\n    const destination = this.destination;\n    if (Boolean(predicateResult)) {\n      destination.next(value);\n    } else {\n      destination.complete();\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { PartialObserver } from '../Observer';\nimport { TeardownLogic } from '../Subscription';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/* tslint:disable:max-line-length */\nexport function tap<T>(next: (x: T) => void, error?: (e: any) => void, complete?: () => void): MonoTypeOperatorFunction<T>;\nexport function tap<T>(observer: PartialObserver<T>): MonoTypeOperatorFunction<T>;\n/* tslint:enable:max-line-length */\n\n/**\n * Perform a side effect for every emission on the source Observable, but return\n * an Observable that is identical to the source.\n *\n * <span class=\"informal\">Intercepts each emission on the source and runs a\n * function, but returns an output which is identical to the source as long as errors don't occur.</span>\n *\n * <img src=\"./img/do.png\" width=\"100%\">\n *\n * Returns a mirrored Observable of the source Observable, but modified so that\n * the provided Observer is called to perform a side effect for every value,\n * error, and completion emitted by the source. Any errors that are thrown in\n * the aforementioned Observer or handlers are safely sent down the error path\n * of the output Observable.\n *\n * This operator is useful for debugging your Observables for the correct values\n * or performing other side effects.\n *\n * Note: this is different to a `subscribe` on the Observable. If the Observable\n * returned by `do` is not subscribed, the side effects specified by the\n * Observer will never happen. `do` therefore simply spies on existing\n * execution, it does not trigger an execution to happen like `subscribe` does.\n *\n * @example <caption>Map every click to the clientX position of that click, while also logging the click event</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var positions = clicks\n *   .do(ev => console.log(ev))\n *   .map(ev => ev.clientX);\n * positions.subscribe(x => console.log(x));\n *\n * @see {@link map}\n * @see {@link subscribe}\n *\n * @param {Observer|function} [nextOrObserver] A normal Observer object or a\n * callback for `next`.\n * @param {function} [error] Callback for errors in the source.\n * @param {function} [complete] Callback for the completion of the source.\n * @return {Observable} An Observable identical to the source, but runs the\n * specified Observer or callback(s) for each item.\n * @name tap\n */\nexport function tap<T>(nextOrObserver?: PartialObserver<T> | ((x: T) => void),\n                       error?: (e: any) => void,\n                       complete?: () => void): MonoTypeOperatorFunction<T> {\n  return function tapOperatorFunction(source: Observable<T>): Observable<T> {\n    return source.lift(new DoOperator(nextOrObserver, error, complete));\n  };\n}\n\nclass DoOperator<T> implements Operator<T, T> {\n  constructor(private nextOrObserver?: PartialObserver<T> | ((x: T) => void),\n              private error?: (e: any) => void,\n              private complete?: () => void) {\n  }\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new DoSubscriber(subscriber, this.nextOrObserver, this.error, this.complete));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass DoSubscriber<T> extends Subscriber<T> {\n\n  private safeSubscriber: Subscriber<T>;\n\n  constructor(destination: Subscriber<T>,\n              nextOrObserver?: PartialObserver<T> | ((x: T) => void),\n              error?: (e: any) => void,\n              complete?: () => void) {\n    super(destination);\n\n    const safeSubscriber = new Subscriber<T>(nextOrObserver, error, complete);\n    safeSubscriber.syncErrorThrowable = true;\n    this.add(safeSubscriber);\n    this.safeSubscriber = safeSubscriber;\n  }\n\n  protected _next(value: T): void {\n    const { safeSubscriber } = this;\n    safeSubscriber.next(value);\n    if (safeSubscriber.syncErrorThrown) {\n      this.destination.error(safeSubscriber.syncErrorValue);\n    } else {\n      this.destination.next(value);\n    }\n  }\n\n  protected _error(err: any): void {\n    const { safeSubscriber } = this;\n    safeSubscriber.error(err);\n    if (safeSubscriber.syncErrorThrown) {\n      this.destination.error(safeSubscriber.syncErrorValue);\n    } else {\n      this.destination.error(err);\n    }\n  }\n\n  protected _complete(): void {\n    const { safeSubscriber } = this;\n    safeSubscriber.complete();\n    if (safeSubscriber.syncErrorThrown) {\n      this.destination.error(safeSubscriber.syncErrorValue);\n    } else {\n      this.destination.complete();\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Observable, SubscribableOrPromise } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription, TeardownLogic } from '../Subscription';\n\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\nexport interface ThrottleConfig {\n  leading?: boolean;\n  trailing?: boolean;\n}\n\nexport const defaultThrottleConfig: ThrottleConfig = {\n  leading: true,\n  trailing: false\n};\n\n/**\n * Emits a value from the source Observable, then ignores subsequent source\n * values for a duration determined by another Observable, then repeats this\n * process.\n *\n * <span class=\"informal\">It's like {@link throttleTime}, but the silencing\n * duration is determined by a second Observable.</span>\n *\n * <img src=\"./img/throttle.png\" width=\"100%\">\n *\n * `throttle` emits the source Observable values on the output Observable\n * when its internal timer is disabled, and ignores source values when the timer\n * is enabled. Initially, the timer is disabled. As soon as the first source\n * value arrives, it is forwarded to the output Observable, and then the timer\n * is enabled by calling the `durationSelector` function with the source value,\n * which returns the \"duration\" Observable. When the duration Observable emits a\n * value or completes, the timer is disabled, and this process repeats for the\n * next source value.\n *\n * @example <caption>Emit clicks at a rate of at most one click per second</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.throttle(ev => Rx.Observable.interval(1000));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link audit}\n * @see {@link debounce}\n * @see {@link delayWhen}\n * @see {@link sample}\n * @see {@link throttleTime}\n *\n * @param {function(value: T): SubscribableOrPromise} durationSelector A function\n * that receives a value from the source Observable, for computing the silencing\n * duration for each source value, returned as an Observable or a Promise.\n * @param {Object} config a configuration object to define `leading` and `trailing` behavior. Defaults\n * to `{ leading: true, trailing: false }`.\n * @return {Observable<T>} An Observable that performs the throttle operation to\n * limit the rate of emissions from the source.\n * @method throttle\n * @owner Observable\n */\nexport function throttle<T>(durationSelector: (value: T) => SubscribableOrPromise<number>,\n                            config: ThrottleConfig = defaultThrottleConfig): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new ThrottleOperator(durationSelector, config.leading, config.trailing));\n}\n\nclass ThrottleOperator<T> implements Operator<T, T> {\n  constructor(private durationSelector: (value: T) => SubscribableOrPromise<number>,\n              private leading: boolean,\n              private trailing: boolean) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(\n      new ThrottleSubscriber(subscriber, this.durationSelector, this.leading, this.trailing)\n    );\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc\n * @ignore\n * @extends {Ignored}\n */\nclass ThrottleSubscriber<T, R> extends OuterSubscriber<T, R> {\n  private throttled: Subscription;\n  private _trailingValue: T;\n  private _hasTrailingValue = false;\n\n  constructor(protected destination: Subscriber<T>,\n              private durationSelector: (value: T) => SubscribableOrPromise<number>,\n              private _leading: boolean,\n              private _trailing: boolean) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    if (this.throttled) {\n      if (this._trailing) {\n        this._hasTrailingValue = true;\n        this._trailingValue = value;\n      }\n    } else {\n      const duration = this.tryDurationSelector(value);\n      if (duration) {\n        this.add(this.throttled = subscribeToResult(this, duration));\n      }\n      if (this._leading) {\n        this.destination.next(value);\n        if (this._trailing) {\n          this._hasTrailingValue = true;\n          this._trailingValue = value;\n        }\n      }\n    }\n  }\n\n  private tryDurationSelector(value: T): SubscribableOrPromise<any> {\n    try {\n      return this.durationSelector(value);\n    } catch (err) {\n      this.destination.error(err);\n      return null;\n    }\n  }\n\n  /** @deprecated internal use only */ _unsubscribe() {\n    const { throttled, _trailingValue, _hasTrailingValue, _trailing } = this;\n\n    this._trailingValue = null;\n    this._hasTrailingValue = false;\n\n    if (throttled) {\n      this.remove(throttled);\n      this.throttled = null;\n      throttled.unsubscribe();\n    }\n  }\n\n  private _sendTrailing() {\n    const { destination, throttled, _trailing, _trailingValue, _hasTrailingValue } = this;\n    if (throttled && _trailing && _hasTrailingValue) {\n      destination.next(_trailingValue);\n      this._trailingValue = null;\n      this._hasTrailingValue = false;\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this._sendTrailing();\n    this._unsubscribe();\n  }\n\n  notifyComplete(): void {\n    this._sendTrailing();\n    this._unsubscribe();\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { IScheduler } from '../Scheduler';\nimport { Subscription, TeardownLogic } from '../Subscription';\nimport { async } from '../scheduler/async';\nimport { Observable } from '../Observable';\nimport { ThrottleConfig, defaultThrottleConfig } from './throttle';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Emits a value from the source Observable, then ignores subsequent source\n * values for `duration` milliseconds, then repeats this process.\n *\n * <span class=\"informal\">Lets a value pass, then ignores source values for the\n * next `duration` milliseconds.</span>\n *\n * <img src=\"./img/throttleTime.png\" width=\"100%\">\n *\n * `throttleTime` emits the source Observable values on the output Observable\n * when its internal timer is disabled, and ignores source values when the timer\n * is enabled. Initially, the timer is disabled. As soon as the first source\n * value arrives, it is forwarded to the output Observable, and then the timer\n * is enabled. After `duration` milliseconds (or the time unit determined\n * internally by the optional `scheduler`) has passed, the timer is disabled,\n * and this process repeats for the next source value. Optionally takes a\n * {@link IScheduler} for managing timers.\n *\n * @example <caption>Emit clicks at a rate of at most one click per second</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.throttleTime(1000);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link auditTime}\n * @see {@link debounceTime}\n * @see {@link delay}\n * @see {@link sampleTime}\n * @see {@link throttle}\n *\n * @param {number} duration Time to wait before emitting another value after\n * emitting the last value, measured in milliseconds or the time unit determined\n * internally by the optional `scheduler`.\n * @param {Scheduler} [scheduler=async] The {@link IScheduler} to use for\n * managing the timers that handle the throttling.\n * @return {Observable<T>} An Observable that performs the throttle operation to\n * limit the rate of emissions from the source.\n * @method throttleTime\n * @owner Observable\n */\nexport function throttleTime<T>(duration: number,\n                                scheduler: IScheduler = async,\n                                config: ThrottleConfig = defaultThrottleConfig): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new ThrottleTimeOperator(duration, scheduler, config.leading, config.trailing));\n}\n\nclass ThrottleTimeOperator<T> implements Operator<T, T> {\n  constructor(private duration: number,\n              private scheduler: IScheduler,\n              private leading: boolean,\n              private trailing: boolean) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(\n      new ThrottleTimeSubscriber(subscriber, this.duration, this.scheduler, this.leading, this.trailing)\n    );\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass ThrottleTimeSubscriber<T> extends Subscriber<T> {\n  private throttled: Subscription;\n  private _hasTrailingValue: boolean = false;\n  private _trailingValue: T = null;\n\n  constructor(destination: Subscriber<T>,\n              private duration: number,\n              private scheduler: IScheduler,\n              private leading: boolean,\n              private trailing: boolean) {\n    super(destination);\n  }\n\n  protected _next(value: T) {\n    if (this.throttled) {\n      if (this.trailing) {\n        this._trailingValue = value;\n        this._hasTrailingValue = true;\n      }\n    } else {\n      this.add(this.throttled = this.scheduler.schedule(dispatchNext, this.duration, { subscriber: this }));\n      if (this.leading) {\n        this.destination.next(value);\n      }\n    }\n  }\n\n  clearThrottle() {\n    const throttled = this.throttled;\n    if (throttled) {\n      if (this.trailing && this._hasTrailingValue) {\n        this.destination.next(this._trailingValue);\n        this._trailingValue = null;\n        this._hasTrailingValue = false;\n      }\n      throttled.unsubscribe();\n      this.remove(throttled);\n      this.throttled = null;\n    }\n  }\n}\n\ninterface DispatchArg<T> {\n  subscriber: ThrottleTimeSubscriber<T>;\n}\n\nfunction dispatchNext<T>(arg: DispatchArg<T>) {\n  const { subscriber } = arg;\n  subscriber.clearThrottle();\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { IScheduler } from '../Scheduler';\nimport { async } from '../scheduler/async';\nimport { OperatorFunction } from '../interfaces';\n\nexport function timeInterval<T>(scheduler: IScheduler = async): OperatorFunction<T, TimeInterval<T>> {\n  return (source: Observable<T>) => source.lift(new TimeIntervalOperator(scheduler));\n}\n\nexport class TimeInterval<T> {\n  constructor(public value: T, public interval: number) {\n\n  }\n};\n\nclass TimeIntervalOperator<T> implements Operator<T, TimeInterval<T>> {\n  constructor(private scheduler: IScheduler) {\n\n  }\n\n  call(observer: Subscriber<TimeInterval<T>>, source: any): any {\n    return source.subscribe(new TimeIntervalSubscriber(observer, this.scheduler));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass TimeIntervalSubscriber<T> extends Subscriber<T> {\n  private lastTime: number = 0;\n\n  constructor(destination: Subscriber<TimeInterval<T>>, private scheduler: IScheduler) {\n    super(destination);\n\n    this.lastTime = scheduler.now();\n  }\n\n  protected _next(value: T) {\n    let now = this.scheduler.now();\n    let span = now - this.lastTime;\n    this.lastTime = now;\n\n    this.destination.next(new TimeInterval(value, span));\n  }\n}\n","/**\r\n * An error thrown when duetime elapses.\r\n *\r\n * @see {@link timeout}\r\n *\r\n * @class TimeoutError\r\n */\r\nexport class TimeoutError extends Error {\r\n  constructor() {\r\n    const err: any = super('Timeout has occurred');\r\n    (<any> this).name = err.name = 'TimeoutError';\r\n    (<any> this).stack = err.stack;\r\n    (<any> this).message = err.message;\r\n  }\r\n}\r\n","import { Action } from '../scheduler/Action';\nimport { async } from '../scheduler/async';\nimport { isDate } from '../util/isDate';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { IScheduler } from '../Scheduler';\nimport { Observable } from '../Observable';\nimport { TeardownLogic } from '../Subscription';\nimport { TimeoutError } from '../util/TimeoutError';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n *\n * Errors if Observable does not emit a value in given time span.\n *\n * <span class=\"informal\">Timeouts on Observable that doesn't emit values fast enough.</span>\n *\n * <img src=\"./img/timeout.png\" width=\"100%\">\n *\n * `timeout` operator accepts as an argument either a number or a Date.\n *\n * If number was provided, it returns an Observable that behaves like a source\n * Observable, unless there is a period of time where there is no value emitted.\n * So if you provide `100` as argument and first value comes after 50ms from\n * the moment of subscription, this value will be simply re-emitted by the resulting\n * Observable. If however after that 100ms passes without a second value being emitted,\n * stream will end with an error and source Observable will be unsubscribed.\n * These checks are performed throughout whole lifecycle of Observable - from the moment\n * it was subscribed to, until it completes or errors itself. Thus every value must be\n * emitted within specified period since previous value.\n *\n * If provided argument was Date, returned Observable behaves differently. It throws\n * if Observable did not complete before provided Date. This means that periods between\n * emission of particular values do not matter in this case. If Observable did not complete\n * before provided Date, source Observable will be unsubscribed. Other than that, resulting\n * stream behaves just as source Observable.\n *\n * `timeout` accepts also a Scheduler as a second parameter. It is used to schedule moment (or moments)\n * when returned Observable will check if source stream emitted value or completed.\n *\n * @example <caption>Check if ticks are emitted within certain timespan</caption>\n * const seconds = Rx.Observable.interval(1000);\n *\n * seconds.timeout(1100) // Let's use bigger timespan to be safe,\n *                       // since `interval` might fire a bit later then scheduled.\n * .subscribe(\n *     value => console.log(value), // Will emit numbers just as regular `interval` would.\n *     err => console.log(err) // Will never be called.\n * );\n *\n * seconds.timeout(900).subscribe(\n *     value => console.log(value), // Will never be called.\n *     err => console.log(err) // Will emit error before even first value is emitted,\n *                             // since it did not arrive within 900ms period.\n * );\n *\n * @example <caption>Use Date to check if Observable completed</caption>\n * const seconds = Rx.Observable.interval(1000);\n *\n * seconds.timeout(new Date(\"December 17, 2020 03:24:00\"))\n * .subscribe(\n *     value => console.log(value), // Will emit values as regular `interval` would\n *                                  // until December 17, 2020 at 03:24:00.\n *     err => console.log(err) // On December 17, 2020 at 03:24:00 it will emit an error,\n *                             // since Observable did not complete by then.\n * );\n *\n * @see {@link timeoutWith}\n *\n * @param {number|Date} due Number specifying period within which Observable must emit values\n *                          or Date specifying before when Observable should complete\n * @param {Scheduler} [scheduler] Scheduler controlling when timeout checks occur.\n * @return {Observable<T>} Observable that mirrors behaviour of source, unless timeout checks fail.\n * @method timeout\n * @owner Observable\n */\nexport function timeout<T>(due: number | Date,\n                           scheduler: IScheduler = async): MonoTypeOperatorFunction<T> {\n  const absoluteTimeout = isDate(due);\n  const waitFor = absoluteTimeout ? (+due - scheduler.now()) : Math.abs(<number>due);\n  return (source: Observable<T>) => source.lift(new TimeoutOperator(waitFor, absoluteTimeout, scheduler, new TimeoutError()));\n}\n\nclass TimeoutOperator<T> implements Operator<T, T> {\n  constructor(private waitFor: number,\n              private absoluteTimeout: boolean,\n              private scheduler: IScheduler,\n              private errorInstance: TimeoutError) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new TimeoutSubscriber<T>(\n      subscriber, this.absoluteTimeout, this.waitFor, this.scheduler, this.errorInstance\n    ));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass TimeoutSubscriber<T> extends Subscriber<T> {\n\n  private action: Action<TimeoutSubscriber<T>> = null;\n\n  constructor(destination: Subscriber<T>,\n              private absoluteTimeout: boolean,\n              private waitFor: number,\n              private scheduler: IScheduler,\n              private errorInstance: TimeoutError) {\n    super(destination);\n    this.scheduleTimeout();\n  }\n\n  private static dispatchTimeout<T>(subscriber: TimeoutSubscriber<T>): void {\n    subscriber.error(subscriber.errorInstance);\n  }\n\n  private scheduleTimeout(): void {\n    const { action } = this;\n    if (action) {\n      // Recycle the action if we've already scheduled one. All the production\n      // Scheduler Actions mutate their state/delay time and return themeselves.\n      // VirtualActions are immutable, so they create and return a clone. In this\n      // case, we need to set the action reference to the most recent VirtualAction,\n      // to ensure that's the one we clone from next time.\n      this.action = (<Action<TimeoutSubscriber<T>>> action.schedule(this, this.waitFor));\n    } else {\n      this.add(this.action = (<Action<TimeoutSubscriber<T>>> this.scheduler.schedule(\n        TimeoutSubscriber.dispatchTimeout, this.waitFor, this\n      )));\n    }\n  }\n\n  protected _next(value: T): void {\n    if (!this.absoluteTimeout) {\n      this.scheduleTimeout();\n    }\n    super._next(value);\n  }\n\n  /** @deprecated internal use only */ _unsubscribe() {\n    this.action = null;\n    this.scheduler = null;\n    this.errorInstance = null;\n  }\n}\n","import { Action } from '../scheduler/Action';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { IScheduler } from '../Scheduler';\nimport { async } from '../scheduler/async';\nimport { TeardownLogic } from '../Subscription';\nimport { Observable, ObservableInput } from '../Observable';\nimport { isDate } from '../util/isDate';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OperatorFunction, MonoTypeOperatorFunction } from '../interfaces';\n\n/* tslint:disable:max-line-length */\nexport function timeoutWith<T>(due: number | Date, withObservable: ObservableInput<T>, scheduler?: IScheduler): MonoTypeOperatorFunction<T>;\nexport function timeoutWith<T, R>(due: number | Date, withObservable: ObservableInput<R>, scheduler?: IScheduler): OperatorFunction<T, T | R>;\n/* tslint:enable:max-line-length */\n\n/**\n *\n * Errors if Observable does not emit a value in given time span, in case of which\n * subscribes to the second Observable.\n *\n * <span class=\"informal\">It's a version of `timeout` operator that let's you specify fallback Observable.</span>\n *\n * <img src=\"./img/timeoutWith.png\" width=\"100%\">\n *\n * `timeoutWith` is a variation of `timeout` operator. It behaves exactly the same,\n * still accepting as a first argument either a number or a Date, which control - respectively -\n * when values of source Observable should be emitted or when it should complete.\n *\n * The only difference is that it accepts a second, required parameter. This parameter\n * should be an Observable which will be subscribed when source Observable fails any timeout check.\n * So whenever regular `timeout` would emit an error, `timeoutWith` will instead start re-emitting\n * values from second Observable. Note that this fallback Observable is not checked for timeouts\n * itself, so it can emit values and complete at arbitrary points in time. From the moment of a second\n * subscription, Observable returned from `timeoutWith` simply mirrors fallback stream. When that\n * stream completes, it completes as well.\n *\n * Scheduler, which in case of `timeout` is provided as as second argument, can be still provided\n * here - as a third, optional parameter. It still is used to schedule timeout checks and -\n * as a consequence - when second Observable will be subscribed, since subscription happens\n * immediately after failing check.\n *\n * @example <caption>Add fallback observable</caption>\n * const seconds = Rx.Observable.interval(1000);\n * const minutes = Rx.Observable.interval(60 * 1000);\n *\n * seconds.timeoutWith(900, minutes)\n *     .subscribe(\n *         value => console.log(value), // After 900ms, will start emitting `minutes`,\n *                                      // since first value of `seconds` will not arrive fast enough.\n *         err => console.log(err) // Would be called after 900ms in case of `timeout`,\n *                                 // but here will never be called.\n *     );\n *\n * @param {number|Date} due Number specifying period within which Observable must emit values\n *                          or Date specifying before when Observable should complete\n * @param {Observable<T>} withObservable Observable which will be subscribed if source fails timeout check.\n * @param {Scheduler} [scheduler] Scheduler controlling when timeout checks occur.\n * @return {Observable<T>} Observable that mirrors behaviour of source or, when timeout check fails, of an Observable\n *                          passed as a second parameter.\n * @method timeoutWith\n * @owner Observable\n */\nexport function timeoutWith<T, R>(due: number | Date,\n                                  withObservable: ObservableInput<R>,\n                                  scheduler: IScheduler = async): OperatorFunction<T, T | R> {\n  return (source: Observable<T>) => {\n    let absoluteTimeout = isDate(due);\n    let waitFor = absoluteTimeout ? (+due - scheduler.now()) : Math.abs(<number>due);\n    return source.lift(new TimeoutWithOperator(waitFor, absoluteTimeout, withObservable, scheduler));\n  };\n}\n\nclass TimeoutWithOperator<T> implements Operator<T, T> {\n  constructor(private waitFor: number,\n              private absoluteTimeout: boolean,\n              private withObservable: ObservableInput<any>,\n              private scheduler: IScheduler) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new TimeoutWithSubscriber(\n      subscriber, this.absoluteTimeout, this.waitFor, this.withObservable, this.scheduler\n    ));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass TimeoutWithSubscriber<T, R> extends OuterSubscriber<T, R> {\n\n  private action: Action<TimeoutWithSubscriber<T, R>> = null;\n\n  constructor(destination: Subscriber<T>,\n              private absoluteTimeout: boolean,\n              private waitFor: number,\n              private withObservable: ObservableInput<any>,\n              private scheduler: IScheduler) {\n    super(destination);\n    this.scheduleTimeout();\n  }\n\n  private static dispatchTimeout<T, R>(subscriber: TimeoutWithSubscriber<T, R>): void {\n    const { withObservable } = subscriber;\n    (<any> subscriber)._unsubscribeAndRecycle();\n    subscriber.add(subscribeToResult(subscriber, withObservable));\n  }\n\n  private scheduleTimeout(): void {\n    const { action } = this;\n    if (action) {\n      // Recycle the action if we've already scheduled one. All the production\n      // Scheduler Actions mutate their state/delay time and return themeselves.\n      // VirtualActions are immutable, so they create and return a clone. In this\n      // case, we need to set the action reference to the most recent VirtualAction,\n      // to ensure that's the one we clone from next time.\n      this.action = (<Action<TimeoutWithSubscriber<T, R>>> action.schedule(this, this.waitFor));\n    } else {\n      this.add(this.action = (<Action<TimeoutWithSubscriber<T, R>>> this.scheduler.schedule(\n        TimeoutWithSubscriber.dispatchTimeout, this.waitFor, this\n      )));\n    }\n  }\n\n  protected _next(value: T): void {\n    if (!this.absoluteTimeout) {\n      this.scheduleTimeout();\n    }\n    super._next(value);\n  }\n\n  /** @deprecated internal use only */ _unsubscribe() {\n    this.action = null;\n    this.scheduler = null;\n    this.withObservable = null;\n  }\n}\n","import { Observable } from '../Observable';\nimport { OperatorFunction } from '../interfaces';\nimport { Subject } from '../Subject';\nimport { Subscriber } from '../Subscriber';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { Operator } from '../Operator';\n\n/**\n * Branch out the source Observable values as a nested Observable whenever\n * `windowBoundaries` emits.\n *\n * <span class=\"informal\">It's like {@link buffer}, but emits a nested Observable\n * instead of an array.</span>\n *\n * <img src=\"./img/window.png\" width=\"100%\">\n *\n * Returns an Observable that emits windows of items it collects from the source\n * Observable. The output Observable emits connected, non-overlapping\n * windows. It emits the current window and opens a new one whenever the\n * Observable `windowBoundaries` emits an item. Because each window is an\n * Observable, the output is a higher-order Observable.\n *\n * @example <caption>In every window of 1 second each, emit at most 2 click events</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var interval = Rx.Observable.interval(1000);\n * var result = clicks.window(interval)\n *   .map(win => win.take(2)) // each window has at most 2 emissions\n *   .mergeAll(); // flatten the Observable-of-Observables\n * result.subscribe(x => console.log(x));\n *\n * @see {@link windowCount}\n * @see {@link windowTime}\n * @see {@link windowToggle}\n * @see {@link windowWhen}\n * @see {@link buffer}\n *\n * @param {Observable<any>} windowBoundaries An Observable that completes the\n * previous window and starts a new window.\n * @return {Observable<Observable<T>>} An Observable of windows, which are\n * Observables emitting values of the source Observable.\n * @method window\n * @owner Observable\n */\nexport function window<T>(windowBoundaries: Observable<any>): OperatorFunction<T, Observable<T>> {\n  return function windowOperatorFunction(source: Observable<T>) {\n    return source.lift(new WindowOperator(windowBoundaries));\n  };\n}\n\nclass WindowOperator<T> implements Operator<T, Observable<T>> {\n\n  constructor(private windowBoundaries: Observable<any>) {\n  }\n\n  call(subscriber: Subscriber<Observable<T>>, source: any): any {\n    const windowSubscriber = new WindowSubscriber(subscriber);\n    const sourceSubscription = source.subscribe(windowSubscriber);\n    if (!sourceSubscription.closed) {\n      windowSubscriber.add(subscribeToResult(windowSubscriber, this.windowBoundaries));\n    }\n    return sourceSubscription;\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass WindowSubscriber<T> extends OuterSubscriber<T, any> {\n\n  private window: Subject<T> = new Subject<T>();\n\n  constructor(destination: Subscriber<Observable<T>>) {\n    super(destination);\n    destination.next(this.window);\n  }\n\n  notifyNext(outerValue: T, innerValue: any,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, any>): void {\n    this.openWindow();\n  }\n\n  notifyError(error: any, innerSub: InnerSubscriber<T, any>): void {\n    this._error(error);\n  }\n\n  notifyComplete(innerSub: InnerSubscriber<T, any>): void {\n    this._complete();\n  }\n\n  protected _next(value: T): void {\n    this.window.next(value);\n  }\n\n  protected _error(err: any): void {\n    this.window.error(err);\n    this.destination.error(err);\n  }\n\n  protected _complete(): void {\n    this.window.complete();\n    this.destination.complete();\n  }\n\n  /** @deprecated internal use only */ _unsubscribe() {\n    this.window = null;\n  }\n\n  private openWindow(): void  {\n    const prevWindow = this.window;\n    if (prevWindow) {\n      prevWindow.complete();\n    }\n    const destination = this.destination;\n    const newWindow = this.window = new Subject<T>();\n    destination.next(newWindow);\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { Subject } from '../Subject';\nimport { OperatorFunction } from '../interfaces';\n\n/**\n * Branch out the source Observable values as a nested Observable with each\n * nested Observable emitting at most `windowSize` values.\n *\n * <span class=\"informal\">It's like {@link bufferCount}, but emits a nested\n * Observable instead of an array.</span>\n *\n * <img src=\"./img/windowCount.png\" width=\"100%\">\n *\n * Returns an Observable that emits windows of items it collects from the source\n * Observable. The output Observable emits windows every `startWindowEvery`\n * items, each containing no more than `windowSize` items. When the source\n * Observable completes or encounters an error, the output Observable emits\n * the current window and propagates the notification from the source\n * Observable. If `startWindowEvery` is not provided, then new windows are\n * started immediately at the start of the source and when each window completes\n * with size `windowSize`.\n *\n * @example <caption>Ignore every 3rd click event, starting from the first one</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.windowCount(3)\n *   .map(win => win.skip(1)) // skip first of every 3 clicks\n *   .mergeAll(); // flatten the Observable-of-Observables\n * result.subscribe(x => console.log(x));\n *\n * @example <caption>Ignore every 3rd click event, starting from the third one</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.windowCount(2, 3)\n *   .mergeAll(); // flatten the Observable-of-Observables\n * result.subscribe(x => console.log(x));\n *\n * @see {@link window}\n * @see {@link windowTime}\n * @see {@link windowToggle}\n * @see {@link windowWhen}\n * @see {@link bufferCount}\n *\n * @param {number} windowSize The maximum number of values emitted by each\n * window.\n * @param {number} [startWindowEvery] Interval at which to start a new window.\n * For example if `startWindowEvery` is `2`, then a new window will be started\n * on every other value from the source. A new window is started at the\n * beginning of the source by default.\n * @return {Observable<Observable<T>>} An Observable of windows, which in turn\n * are Observable of values.\n * @method windowCount\n * @owner Observable\n */\nexport function windowCount<T>(windowSize: number,\n                               startWindowEvery: number = 0): OperatorFunction<T, Observable<T>> {\n  return function windowCountOperatorFunction(source: Observable<T>) {\n    return source.lift(new WindowCountOperator<T>(windowSize, startWindowEvery));\n  };\n}\n\nclass WindowCountOperator<T> implements Operator<T, Observable<T>> {\n\n  constructor(private windowSize: number,\n              private startWindowEvery: number) {\n  }\n\n  call(subscriber: Subscriber<Observable<T>>, source: any): any {\n    return source.subscribe(new WindowCountSubscriber(subscriber, this.windowSize, this.startWindowEvery));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass WindowCountSubscriber<T> extends Subscriber<T> {\n  private windows: Subject<T>[] = [ new Subject<T>() ];\n  private count: number = 0;\n\n  constructor(protected destination: Subscriber<Observable<T>>,\n              private windowSize: number,\n              private startWindowEvery: number) {\n    super(destination);\n    destination.next(this.windows[0]);\n  }\n\n  protected _next(value: T) {\n    const startWindowEvery = (this.startWindowEvery > 0) ? this.startWindowEvery : this.windowSize;\n    const destination = this.destination;\n    const windowSize = this.windowSize;\n    const windows = this.windows;\n    const len = windows.length;\n\n    for (let i = 0; i < len && !this.closed; i++) {\n      windows[i].next(value);\n    }\n    const c = this.count - windowSize + 1;\n    if (c >= 0 && c % startWindowEvery === 0 && !this.closed) {\n      windows.shift().complete();\n    }\n    if (++this.count % startWindowEvery === 0 && !this.closed) {\n      const window = new Subject<T>();\n      windows.push(window);\n      destination.next(window);\n    }\n  }\n\n  protected _error(err: any) {\n    const windows = this.windows;\n    if (windows) {\n      while (windows.length > 0 && !this.closed) {\n        windows.shift().error(err);\n      }\n    }\n    this.destination.error(err);\n  }\n\n  protected _complete() {\n    const windows = this.windows;\n    if (windows) {\n      while (windows.length > 0 && !this.closed) {\n        windows.shift().complete();\n      }\n    }\n    this.destination.complete();\n  }\n\n  /** @deprecated internal use only */ _unsubscribe() {\n    this.count = 0;\n    this.windows = null;\n  }\n}\n","import { IScheduler } from '../Scheduler';\nimport { Action } from '../scheduler/Action';\nimport { Subject } from '../Subject';\nimport { Operator } from '../Operator';\nimport { async } from '../scheduler/async';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { Subscription } from '../Subscription';\nimport { isNumeric } from '../util/isNumeric';\nimport { isScheduler } from '../util/isScheduler';\nimport { OperatorFunction } from '../interfaces';\n\n/**\n * Branch out the source Observable values as a nested Observable periodically\n * in time.\n *\n * <span class=\"informal\">It's like {@link bufferTime}, but emits a nested\n * Observable instead of an array.</span>\n *\n * <img src=\"./img/windowTime.png\" width=\"100%\">\n *\n * Returns an Observable that emits windows of items it collects from the source\n * Observable. The output Observable starts a new window periodically, as\n * determined by the `windowCreationInterval` argument. It emits each window\n * after a fixed timespan, specified by the `windowTimeSpan` argument. When the\n * source Observable completes or encounters an error, the output Observable\n * emits the current window and propagates the notification from the source\n * Observable. If `windowCreationInterval` is not provided, the output\n * Observable starts a new window when the previous window of duration\n * `windowTimeSpan` completes. If `maxWindowCount` is provided, each window\n * will emit at most fixed number of values. Window will complete immediately\n * after emitting last value and next one still will open as specified by\n * `windowTimeSpan` and `windowCreationInterval` arguments.\n *\n * @example <caption>In every window of 1 second each, emit at most 2 click events</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.windowTime(1000)\n *   .map(win => win.take(2)) // each window has at most 2 emissions\n *   .mergeAll(); // flatten the Observable-of-Observables\n * result.subscribe(x => console.log(x));\n *\n * @example <caption>Every 5 seconds start a window 1 second long, and emit at most 2 click events per window</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.windowTime(1000, 5000)\n *   .map(win => win.take(2)) // each window has at most 2 emissions\n *   .mergeAll(); // flatten the Observable-of-Observables\n * result.subscribe(x => console.log(x));\n *\n * @example <caption>Same as example above but with maxWindowCount instead of take</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.windowTime(1000, 5000, 2) // each window has still at most 2 emissions\n *   .mergeAll(); // flatten the Observable-of-Observables\n * result.subscribe(x => console.log(x));\n\n * @see {@link window}\n * @see {@link windowCount}\n * @see {@link windowToggle}\n * @see {@link windowWhen}\n * @see {@link bufferTime}\n *\n * @param {number} windowTimeSpan The amount of time to fill each window.\n * @param {number} [windowCreationInterval] The interval at which to start new\n * windows.\n * @param {number} [maxWindowSize=Number.POSITIVE_INFINITY] Max number of\n * values each window can emit before completion.\n * @param {Scheduler} [scheduler=async] The scheduler on which to schedule the\n * intervals that determine window boundaries.\n * @return {Observable<Observable<T>>} An observable of windows, which in turn\n * are Observables.\n * @method windowTime\n * @owner Observable\n */\nexport function windowTime<T>(windowTimeSpan: number,\n                              scheduler?: IScheduler): OperatorFunction<T, Observable<T>>;\nexport function windowTime<T>(windowTimeSpan: number,\n                              windowCreationInterval: number,\n                              scheduler?: IScheduler): OperatorFunction<T, Observable<T>>;\nexport function windowTime<T>(windowTimeSpan: number,\n                              windowCreationInterval: number,\n                              maxWindowSize: number,\n                              scheduler?: IScheduler): OperatorFunction<T, Observable<T>>;\n\nexport function windowTime<T>(windowTimeSpan: number): OperatorFunction<T, Observable<T>> {\n  let scheduler: IScheduler = async;\n  let windowCreationInterval: number = null;\n  let maxWindowSize: number = Number.POSITIVE_INFINITY;\n\n  if (isScheduler(arguments[3])) {\n    scheduler = arguments[3];\n  }\n\n  if (isScheduler(arguments[2])) {\n    scheduler = arguments[2];\n  } else if (isNumeric(arguments[2])) {\n    maxWindowSize = arguments[2];\n  }\n\n  if (isScheduler(arguments[1])) {\n    scheduler = arguments[1];\n  } else if (isNumeric(arguments[1])) {\n    windowCreationInterval = arguments[1];\n  }\n\n  return function windowTimeOperatorFunction(source: Observable<T>) {\n    return source.lift(new WindowTimeOperator<T>(windowTimeSpan, windowCreationInterval, maxWindowSize, scheduler));\n  };\n}\n\nclass WindowTimeOperator<T> implements Operator<T, Observable<T>> {\n\n  constructor(private windowTimeSpan: number,\n              private windowCreationInterval: number | null,\n              private maxWindowSize: number,\n              private scheduler: IScheduler) {\n  }\n\n  call(subscriber: Subscriber<Observable<T>>, source: any): any {\n    return source.subscribe(new WindowTimeSubscriber(\n      subscriber, this.windowTimeSpan, this.windowCreationInterval, this.maxWindowSize, this.scheduler\n    ));\n  }\n}\n\ninterface CreationState<T> {\n  windowTimeSpan: number;\n  windowCreationInterval: number;\n  subscriber: WindowTimeSubscriber<T>;\n  scheduler: IScheduler;\n}\n\ninterface TimeSpanOnlyState<T> {\n    window: CountedSubject<T>;\n    windowTimeSpan: number;\n    subscriber: WindowTimeSubscriber<T>;\n  }\n\ninterface CloseWindowContext<T> {\n  action: Action<CreationState<T>>;\n  subscription: Subscription;\n}\n\ninterface CloseState<T> {\n  subscriber: WindowTimeSubscriber<T>;\n  window: CountedSubject<T>;\n  context: CloseWindowContext<T>;\n}\n\nclass CountedSubject<T> extends Subject<T> {\n  private _numberOfNextedValues: number = 0;\n\n  next(value?: T): void {\n    this._numberOfNextedValues++;\n    super.next(value);\n  }\n\n  get numberOfNextedValues(): number {\n    return this._numberOfNextedValues;\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass WindowTimeSubscriber<T> extends Subscriber<T> {\n  private windows: CountedSubject<T>[] = [];\n\n  constructor(protected destination: Subscriber<Observable<T>>,\n              private windowTimeSpan: number,\n              private windowCreationInterval: number | null,\n              private maxWindowSize: number,\n              private scheduler: IScheduler) {\n    super(destination);\n\n    const window = this.openWindow();\n    if (windowCreationInterval !== null && windowCreationInterval >= 0) {\n      const closeState: CloseState<T> = { subscriber: this, window, context: <any>null };\n      const creationState: CreationState<T> = { windowTimeSpan, windowCreationInterval, subscriber: this, scheduler };\n      this.add(scheduler.schedule(dispatchWindowClose, windowTimeSpan, closeState));\n      this.add(scheduler.schedule(dispatchWindowCreation, windowCreationInterval, creationState));\n    } else {\n      const timeSpanOnlyState: TimeSpanOnlyState<T> = { subscriber: this, window, windowTimeSpan };\n      this.add(scheduler.schedule(dispatchWindowTimeSpanOnly, windowTimeSpan, timeSpanOnlyState));\n    }\n  }\n\n  protected _next(value: T): void {\n    const windows = this.windows;\n    const len = windows.length;\n    for (let i = 0; i < len; i++) {\n      const window = windows[i];\n      if (!window.closed) {\n        window.next(value);\n        if (window.numberOfNextedValues >= this.maxWindowSize) {\n          this.closeWindow(window);\n        }\n      }\n    }\n  }\n\n  protected _error(err: any): void {\n    const windows = this.windows;\n    while (windows.length > 0) {\n      windows.shift().error(err);\n    }\n    this.destination.error(err);\n  }\n\n  protected _complete(): void {\n    const windows = this.windows;\n    while (windows.length > 0) {\n      const window = windows.shift();\n      if (!window.closed) {\n        window.complete();\n      }\n    }\n    this.destination.complete();\n  }\n\n  public openWindow(): CountedSubject<T> {\n    const window = new CountedSubject<T>();\n    this.windows.push(window);\n    const destination = this.destination;\n    destination.next(window);\n    return window;\n  }\n\n  public closeWindow(window: CountedSubject<T>): void {\n    window.complete();\n    const windows = this.windows;\n    windows.splice(windows.indexOf(window), 1);\n  }\n}\n\nfunction dispatchWindowTimeSpanOnly<T>(this: Action<TimeSpanOnlyState<T>>, state: TimeSpanOnlyState<T>): void {\n  const { subscriber, windowTimeSpan, window } = state;\n  if (window) {\n    subscriber.closeWindow(window);\n  }\n  state.window = subscriber.openWindow();\n  this.schedule(state, windowTimeSpan);\n}\n\nfunction dispatchWindowCreation<T>(this: Action<CreationState<T>>, state: CreationState<T>): void {\n  const { windowTimeSpan, subscriber, scheduler, windowCreationInterval } = state;\n  const window = subscriber.openWindow();\n  const action = this;\n  let context: CloseWindowContext<T> = { action, subscription: <any>null };\n  const timeSpanState: CloseState<T> = { subscriber, window, context };\n  context.subscription = scheduler.schedule(dispatchWindowClose, windowTimeSpan, timeSpanState);\n  action.add(context.subscription);\n  action.schedule(state, windowCreationInterval);\n}\n\nfunction dispatchWindowClose<T>(state: CloseState<T>): void {\n  const { subscriber, window, context } = state;\n  if (context && context.action && context.subscription) {\n    context.action.remove(context.subscription);\n  }\n  subscriber.closeWindow(window);\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { Subject } from '../Subject';\nimport { Subscription } from '../Subscription';\nimport { tryCatch } from '../util/tryCatch';\nimport { errorObject } from '../util/errorObject';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OperatorFunction } from '../interfaces';\n\n/**\n * Branch out the source Observable values as a nested Observable starting from\n * an emission from `openings` and ending when the output of `closingSelector`\n * emits.\n *\n * <span class=\"informal\">It's like {@link bufferToggle}, but emits a nested\n * Observable instead of an array.</span>\n *\n * <img src=\"./img/windowToggle.png\" width=\"100%\">\n *\n * Returns an Observable that emits windows of items it collects from the source\n * Observable. The output Observable emits windows that contain those items\n * emitted by the source Observable between the time when the `openings`\n * Observable emits an item and when the Observable returned by\n * `closingSelector` emits an item.\n *\n * @example <caption>Every other second, emit the click events from the next 500ms</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var openings = Rx.Observable.interval(1000);\n * var result = clicks.windowToggle(openings, i =>\n *   i % 2 ? Rx.Observable.interval(500) : Rx.Observable.empty()\n * ).mergeAll();\n * result.subscribe(x => console.log(x));\n *\n * @see {@link window}\n * @see {@link windowCount}\n * @see {@link windowTime}\n * @see {@link windowWhen}\n * @see {@link bufferToggle}\n *\n * @param {Observable<O>} openings An observable of notifications to start new\n * windows.\n * @param {function(value: O): Observable} closingSelector A function that takes\n * the value emitted by the `openings` observable and returns an Observable,\n * which, when it emits (either `next` or `complete`), signals that the\n * associated window should complete.\n * @return {Observable<Observable<T>>} An observable of windows, which in turn\n * are Observables.\n * @method windowToggle\n * @owner Observable\n */\nexport function windowToggle<T, O>(openings: Observable<O>,\n                                   closingSelector: (openValue: O) => Observable<any>): OperatorFunction<T, Observable<T>> {\n  return (source: Observable<T>) => source.lift(new WindowToggleOperator<T, O>(openings, closingSelector));\n}\n\nclass WindowToggleOperator<T, O> implements Operator<T, Observable<T>> {\n\n  constructor(private openings: Observable<O>,\n              private closingSelector: (openValue: O) => Observable<any>) {\n  }\n\n  call(subscriber: Subscriber<Observable<T>>, source: any): any {\n    return source.subscribe(new WindowToggleSubscriber(\n      subscriber, this.openings, this.closingSelector\n    ));\n  }\n}\n\ninterface WindowContext<T> {\n  window: Subject<T>;\n  subscription: Subscription;\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass WindowToggleSubscriber<T, O> extends OuterSubscriber<T, any> {\n  private contexts: WindowContext<T>[] = [];\n  private openSubscription: Subscription;\n\n  constructor(destination: Subscriber<Observable<T>>,\n              private openings: Observable<O>,\n              private closingSelector: (openValue: O) => Observable<any>) {\n    super(destination);\n    this.add(this.openSubscription = subscribeToResult(this, openings, openings));\n  }\n\n  protected _next(value: T) {\n    const { contexts } = this;\n    if (contexts) {\n      const len = contexts.length;\n      for (let i = 0; i < len; i++) {\n        contexts[i].window.next(value);\n      }\n    }\n  }\n\n  protected _error(err: any) {\n\n    const { contexts } = this;\n    this.contexts = null;\n\n    if (contexts) {\n      const len = contexts.length;\n      let index = -1;\n\n      while (++index < len) {\n        const context = contexts[index];\n        context.window.error(err);\n        context.subscription.unsubscribe();\n      }\n    }\n\n    super._error(err);\n  }\n\n  protected _complete() {\n    const { contexts } = this;\n    this.contexts = null;\n    if (contexts) {\n      const len = contexts.length;\n      let index = -1;\n      while (++index < len) {\n        const context = contexts[index];\n        context.window.complete();\n        context.subscription.unsubscribe();\n      }\n    }\n    super._complete();\n  }\n\n  /** @deprecated internal use only */ _unsubscribe() {\n    const { contexts } = this;\n    this.contexts = null;\n    if (contexts) {\n      const len = contexts.length;\n      let index = -1;\n      while (++index < len) {\n        const context = contexts[index];\n        context.window.unsubscribe();\n        context.subscription.unsubscribe();\n      }\n    }\n  }\n\n  notifyNext(outerValue: any, innerValue: any,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, any>): void {\n\n    if (outerValue === this.openings) {\n\n      const { closingSelector } = this;\n      const closingNotifier = tryCatch(closingSelector)(innerValue);\n\n      if (closingNotifier === errorObject) {\n        return this.error(errorObject.e);\n      } else {\n        const window = new Subject<T>();\n        const subscription = new Subscription();\n        const context = { window, subscription };\n        this.contexts.push(context);\n        const innerSubscription = subscribeToResult(this, closingNotifier, context);\n\n        if (innerSubscription.closed) {\n          this.closeWindow(this.contexts.length - 1);\n        } else {\n          (<any> innerSubscription).context = context;\n          subscription.add(innerSubscription);\n        }\n\n        this.destination.next(window);\n\n      }\n    } else {\n      this.closeWindow(this.contexts.indexOf(outerValue));\n    }\n  }\n\n  notifyError(err: any): void {\n    this.error(err);\n  }\n\n  notifyComplete(inner: Subscription): void {\n    if (inner !== this.openSubscription) {\n      this.closeWindow(this.contexts.indexOf((<any> inner).context));\n    }\n  }\n\n  private closeWindow(index: number): void {\n    if (index === -1) {\n      return;\n    }\n\n    const { contexts } = this;\n    const context = contexts[index];\n    const { window, subscription } = context;\n    contexts.splice(index, 1);\n    window.complete();\n    subscription.unsubscribe();\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { Subject } from '../Subject';\nimport { Subscription } from '../Subscription';\nimport { tryCatch } from '../util/tryCatch';\nimport { errorObject } from '../util/errorObject';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OperatorFunction } from '../interfaces';\n\n/**\n * Branch out the source Observable values as a nested Observable using a\n * factory function of closing Observables to determine when to start a new\n * window.\n *\n * <span class=\"informal\">It's like {@link bufferWhen}, but emits a nested\n * Observable instead of an array.</span>\n *\n * <img src=\"./img/windowWhen.png\" width=\"100%\">\n *\n * Returns an Observable that emits windows of items it collects from the source\n * Observable. The output Observable emits connected, non-overlapping windows.\n * It emits the current window and opens a new one whenever the Observable\n * produced by the specified `closingSelector` function emits an item. The first\n * window is opened immediately when subscribing to the output Observable.\n *\n * @example <caption>Emit only the first two clicks events in every window of [1-5] random seconds</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks\n *   .windowWhen(() => Rx.Observable.interval(1000 + Math.random() * 4000))\n *   .map(win => win.take(2)) // each window has at most 2 emissions\n *   .mergeAll(); // flatten the Observable-of-Observables\n * result.subscribe(x => console.log(x));\n *\n * @see {@link window}\n * @see {@link windowCount}\n * @see {@link windowTime}\n * @see {@link windowToggle}\n * @see {@link bufferWhen}\n *\n * @param {function(): Observable} closingSelector A function that takes no\n * arguments and returns an Observable that signals (on either `next` or\n * `complete`) when to close the previous window and start a new one.\n * @return {Observable<Observable<T>>} An observable of windows, which in turn\n * are Observables.\n * @method windowWhen\n * @owner Observable\n */\nexport function windowWhen<T>(closingSelector: () => Observable<any>): OperatorFunction<T, Observable<T>> {\n  return function windowWhenOperatorFunction(source: Observable<T>) {\n    return source.lift(new WindowOperator<T>(closingSelector));\n  };\n}\n\nclass WindowOperator<T> implements Operator<T, Observable<T>> {\n  constructor(private closingSelector: () => Observable<any>) {\n  }\n\n  call(subscriber: Subscriber<Observable<T>>, source: any): any {\n    return source.subscribe(new WindowSubscriber(subscriber, this.closingSelector));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass WindowSubscriber<T> extends OuterSubscriber<T, any> {\n  private window: Subject<T>;\n  private closingNotification: Subscription;\n\n  constructor(protected destination: Subscriber<Observable<T>>,\n              private closingSelector: () => Observable<any>) {\n    super(destination);\n    this.openWindow();\n  }\n\n  notifyNext(outerValue: T, innerValue: any,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, any>): void {\n    this.openWindow(innerSub);\n  }\n\n  notifyError(error: any, innerSub: InnerSubscriber<T, any>): void {\n    this._error(error);\n  }\n\n  notifyComplete(innerSub: InnerSubscriber<T, any>): void {\n    this.openWindow(innerSub);\n  }\n\n  protected _next(value: T): void {\n    this.window.next(value);\n  }\n\n  protected _error(err: any): void {\n    this.window.error(err);\n    this.destination.error(err);\n    this.unsubscribeClosingNotification();\n  }\n\n  protected _complete(): void {\n    this.window.complete();\n    this.destination.complete();\n    this.unsubscribeClosingNotification();\n  }\n\n  private unsubscribeClosingNotification(): void {\n    if (this.closingNotification) {\n      this.closingNotification.unsubscribe();\n    }\n  }\n\n  private openWindow(innerSub: InnerSubscriber<T, any> = null): void {\n    if (innerSub) {\n      this.remove(innerSub);\n      innerSub.unsubscribe();\n    }\n\n    const prevWindow = this.window;\n    if (prevWindow) {\n      prevWindow.complete();\n    }\n\n    const window = this.window = new Subject<T>();\n    this.destination.next(window);\n\n    const closingNotifier = tryCatch(this.closingSelector)();\n    if (closingNotifier === errorObject) {\n      const err = errorObject.e;\n      this.destination.error(err);\n      this.window.error(err);\n    } else {\n      this.add(this.closingNotification = subscribeToResult(this, closingNotifier));\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable, ObservableInput } from '../Observable';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OperatorFunction } from '../interfaces';\n\n/* tslint:disable:max-line-length */\nexport function withLatestFrom<T, R>(project: (v1: T) => R): OperatorFunction<T, R>;\nexport function withLatestFrom<T, T2, R>(v2: ObservableInput<T2>, project: (v1: T, v2: T2) => R): OperatorFunction<T, R>;\nexport function withLatestFrom<T, T2, T3, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, project: (v1: T, v2: T2, v3: T3) => R): OperatorFunction<T, R>;\nexport function withLatestFrom<T, T2, T3, T4, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, project: (v1: T, v2: T2, v3: T3, v4: T4) => R): OperatorFunction<T, R>;\nexport function withLatestFrom<T, T2, T3, T4, T5, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, project: (v1: T, v2: T2, v3: T3, v4: T4, v5: T5) => R): OperatorFunction<T, R>;\nexport function withLatestFrom<T, T2, T3, T4, T5, T6, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>, project: (v1: T, v2: T2, v3: T3, v4: T4, v5: T5, v6: T6) => R): OperatorFunction<T, R> ;\nexport function withLatestFrom<T, T2>(v2: ObservableInput<T2>): OperatorFunction<T, [T, T2]>;\nexport function withLatestFrom<T, T2, T3>(v2: ObservableInput<T2>, v3: ObservableInput<T3>): OperatorFunction<T, [T, T2, T3]>;\nexport function withLatestFrom<T, T2, T3, T4>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>): OperatorFunction<T, [T, T2, T3, T4]>;\nexport function withLatestFrom<T, T2, T3, T4, T5>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>): OperatorFunction<T, [T, T2, T3, T4, T5]>;\nexport function withLatestFrom<T, T2, T3, T4, T5, T6>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>): OperatorFunction<T, [T, T2, T3, T4, T5, T6]> ;\nexport function withLatestFrom<T, R>(...observables: Array<ObservableInput<any> | ((...values: Array<any>) => R)>): OperatorFunction<T, R>;\nexport function withLatestFrom<T, R>(array: ObservableInput<any>[]): OperatorFunction<T, R>;\nexport function withLatestFrom<T, R>(array: ObservableInput<any>[], project: (...values: Array<any>) => R): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Combines the source Observable with other Observables to create an Observable\n * whose values are calculated from the latest values of each, only when the\n * source emits.\n *\n * <span class=\"informal\">Whenever the source Observable emits a value, it\n * computes a formula using that value plus the latest values from other input\n * Observables, then emits the output of that formula.</span>\n *\n * <img src=\"./img/withLatestFrom.png\" width=\"100%\">\n *\n * `withLatestFrom` combines each value from the source Observable (the\n * instance) with the latest values from the other input Observables only when\n * the source emits a value, optionally using a `project` function to determine\n * the value to be emitted on the output Observable. All input Observables must\n * emit at least one value before the output Observable will emit a value.\n *\n * @example <caption>On every click event, emit an array with the latest timer event plus the click event</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var timer = Rx.Observable.interval(1000);\n * var result = clicks.withLatestFrom(timer);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link combineLatest}\n *\n * @param {ObservableInput} other An input Observable to combine with the source\n * Observable. More than one input Observables may be given as argument.\n * @param {Function} [project] Projection function for combining values\n * together. Receives all values in order of the Observables passed, where the\n * first parameter is a value from the source Observable. (e.g.\n * `a.withLatestFrom(b, c, (a1, b1, c1) => a1 + b1 + c1)`). If this is not\n * passed, arrays will be emitted on the output Observable.\n * @return {Observable} An Observable of projected values from the most recent\n * values from each input Observable, or an array of the most recent values from\n * each input Observable.\n * @method withLatestFrom\n * @owner Observable\n */\nexport function withLatestFrom<T, R>(...args: Array<ObservableInput<any> | ((...values: Array<any>) => R)>): OperatorFunction<T, R> {\n  return (source: Observable<T>) => {\n    let project: any;\n    if (typeof args[args.length - 1] === 'function') {\n      project = args.pop();\n    }\n    const observables = <Observable<any>[]>args;\n    return source.lift(new WithLatestFromOperator(observables, project));\n  };\n}\n\nclass WithLatestFromOperator<T, R> implements Operator<T, R> {\n  constructor(private observables: Observable<any>[],\n              private project?: (...values: any[]) => Observable<R>) {\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new WithLatestFromSubscriber(subscriber, this.observables, this.project));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass WithLatestFromSubscriber<T, R> extends OuterSubscriber<T, R> {\n  private values: any[];\n  private toRespond: number[] = [];\n\n  constructor(destination: Subscriber<R>,\n              private observables: Observable<any>[],\n              private project?: (...values: any[]) => Observable<R>) {\n    super(destination);\n    const len = observables.length;\n    this.values = new Array(len);\n\n    for (let i = 0; i < len; i++) {\n      this.toRespond.push(i);\n    }\n\n    for (let i = 0; i < len; i++) {\n      let observable = observables[i];\n      this.add(subscribeToResult<T, R>(this, observable, <any>observable, i));\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this.values[outerIndex] = innerValue;\n    const toRespond = this.toRespond;\n    if (toRespond.length > 0) {\n      const found = toRespond.indexOf(outerIndex);\n      if (found !== -1) {\n        toRespond.splice(found, 1);\n      }\n    }\n  }\n\n  notifyComplete() {\n    // noop\n  }\n\n  protected _next(value: T) {\n    if (this.toRespond.length === 0) {\n      const args = [value, ...this.values];\n      if (this.project) {\n        this._tryProject(args);\n      } else {\n        this.destination.next(args);\n      }\n    }\n  }\n\n  private _tryProject(args: any[]) {\n    let result: any;\n    try {\n      result = this.project.apply(this, args);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    this.destination.next(result);\n  }\n}\n","import { Observable, ObservableInput } from '../Observable';\nimport { ArrayObservable } from '../observable/ArrayObservable';\nimport { isArray } from '../util/isArray';\nimport { Operator } from '../Operator';\nimport { PartialObserver } from '../Observer';\nimport { Subscriber } from '../Subscriber';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { iterator as Symbol_iterator } from '../symbol/iterator';\nimport { OperatorFunction } from '../interfaces';\n\n/* tslint:disable:max-line-length */\nexport function zip<T, R>(project: (v1: T) => R): OperatorFunction<T, R>;\nexport function zip<T, T2, R>(v2: ObservableInput<T2>, project: (v1: T, v2: T2) => R): OperatorFunction<T, R>;\nexport function zip<T, T2, T3, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, project: (v1: T, v2: T2, v3: T3) => R): OperatorFunction<T, R>;\nexport function zip<T, T2, T3, T4, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, project: (v1: T, v2: T2, v3: T3, v4: T4) => R): OperatorFunction<T, R>;\nexport function zip<T, T2, T3, T4, T5, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, project: (v1: T, v2: T2, v3: T3, v4: T4, v5: T5) => R): OperatorFunction<T, R>;\nexport function zip<T, T2, T3, T4, T5, T6, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>, project: (v1: T, v2: T2, v3: T3, v4: T4, v5: T5, v6: T6) => R): OperatorFunction<T, R> ;\nexport function zip<T, T2>(v2: ObservableInput<T2>): OperatorFunction<T, [T, T2]>;\nexport function zip<T, T2, T3>(v2: ObservableInput<T2>, v3: ObservableInput<T3>): OperatorFunction<T, [T, T2, T3]>;\nexport function zip<T, T2, T3, T4>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>): OperatorFunction<T, [T, T2, T3, T4]>;\nexport function zip<T, T2, T3, T4, T5>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>): OperatorFunction<T, [T, T2, T3, T4, T5]>;\nexport function zip<T, T2, T3, T4, T5, T6>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>): OperatorFunction<T, [T, T2, T3, T4, T5, T6]> ;\nexport function zip<T, R>(...observables: Array<ObservableInput<T> | ((...values: Array<T>) => R)>): OperatorFunction<T, R>;\nexport function zip<T, R>(array: Array<ObservableInput<T>>): OperatorFunction<T, R>;\nexport function zip<T, TOther, R>(array: Array<ObservableInput<TOther>>, project: (v1: T, ...values: Array<TOther>) => R): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * @param observables\n * @return {Observable<R>}\n * @method zip\n * @owner Observable\n */\nexport function zip<T, R>(...observables: Array<ObservableInput<any> | ((...values: Array<any>) => R)>): OperatorFunction<T, R> {\n  return function zipOperatorFunction(source: Observable<T>) {\n    return source.lift.call(zipStatic<R>(source, ...observables));\n  };\n}\n\n/* tslint:disable:max-line-length */\nexport function zipStatic<T, R>(v1: ObservableInput<T>, project: (v1: T) => R): Observable<R>;\nexport function zipStatic<T, T2, R>(v1: ObservableInput<T>, v2: ObservableInput<T2>, project: (v1: T, v2: T2) => R): Observable<R>;\nexport function zipStatic<T, T2, T3, R>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, project: (v1: T, v2: T2, v3: T3) => R): Observable<R>;\nexport function zipStatic<T, T2, T3, T4, R>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, project: (v1: T, v2: T2, v3: T3, v4: T4) => R): Observable<R>;\nexport function zipStatic<T, T2, T3, T4, T5, R>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, project: (v1: T, v2: T2, v3: T3, v4: T4, v5: T5) => R): Observable<R>;\nexport function zipStatic<T, T2, T3, T4, T5, T6, R>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>, project: (v1: T, v2: T2, v3: T3, v4: T4, v5: T5, v6: T6) => R): Observable<R>;\n\nexport function zipStatic<T, T2>(v1: ObservableInput<T>, v2: ObservableInput<T2>): Observable<[T, T2]>;\nexport function zipStatic<T, T2, T3>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>): Observable<[T, T2, T3]>;\nexport function zipStatic<T, T2, T3, T4>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>): Observable<[T, T2, T3, T4]>;\nexport function zipStatic<T, T2, T3, T4, T5>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>): Observable<[T, T2, T3, T4, T5]>;\nexport function zipStatic<T, T2, T3, T4, T5, T6>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>): Observable<[T, T2, T3, T4, T5, T6]>;\n\nexport function zipStatic<T>(array: ObservableInput<T>[]): Observable<T[]>;\nexport function zipStatic<R>(array: ObservableInput<any>[]): Observable<R>;\nexport function zipStatic<T, R>(array: ObservableInput<T>[], project: (...values: Array<T>) => R): Observable<R>;\nexport function zipStatic<R>(array: ObservableInput<any>[], project: (...values: Array<any>) => R): Observable<R>;\n\nexport function zipStatic<T>(...observables: Array<ObservableInput<T>>): Observable<T[]>;\nexport function zipStatic<T, R>(...observables: Array<ObservableInput<T> | ((...values: Array<T>) => R)>): Observable<R>;\nexport function zipStatic<R>(...observables: Array<ObservableInput<any> | ((...values: Array<any>) => R)>): Observable<R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Combines multiple Observables to create an Observable whose values are calculated from the values, in order, of each\n * of its input Observables.\n *\n * If the latest parameter is a function, this function is used to compute the created value from the input values.\n * Otherwise, an array of the input values is returned.\n *\n * @example <caption>Combine age and name from different sources</caption>\n *\n * let age$ = Observable.of<number>(27, 25, 29);\n * let name$ = Observable.of<string>('Foo', 'Bar', 'Beer');\n * let isDev$ = Observable.of<boolean>(true, true, false);\n *\n * Observable\n *     .zip(age$,\n *          name$,\n *          isDev$,\n *          (age: number, name: string, isDev: boolean) => ({ age, name, isDev }))\n *     .subscribe(x => console.log(x));\n *\n * // outputs\n * // { age: 27, name: 'Foo', isDev: true }\n * // { age: 25, name: 'Bar', isDev: true }\n * // { age: 29, name: 'Beer', isDev: false }\n *\n * @param observables\n * @return {Observable<R>}\n * @static true\n * @name zip\n * @owner Observable\n */\nexport function zipStatic<T, R>(...observables: Array<ObservableInput<any> | ((...values: Array<any>) => R)>): Observable<R> {\n  const project = <((...ys: Array<any>) => R)> observables[observables.length - 1];\n  if (typeof project === 'function') {\n    observables.pop();\n  }\n  return new ArrayObservable(observables).lift(new ZipOperator(project));\n}\n\nexport class ZipOperator<T, R> implements Operator<T, R> {\n\n  project: (...values: Array<any>) => R;\n\n  constructor(project?: (...values: Array<any>) => R) {\n    this.project = project;\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new ZipSubscriber(subscriber, this.project));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class ZipSubscriber<T, R> extends Subscriber<T> {\n  private values: any;\n  private project: (...values: Array<any>) => R;\n  private iterators: LookAheadIterator<any>[] = [];\n  private active = 0;\n\n  constructor(destination: Subscriber<R>,\n              project?: (...values: Array<any>) => R,\n              values: any = Object.create(null)) {\n    super(destination);\n    this.project = (typeof project === 'function') ? project : null;\n    this.values = values;\n  }\n\n  protected _next(value: any) {\n    const iterators = this.iterators;\n    if (isArray(value)) {\n      iterators.push(new StaticArrayIterator(value));\n    } else if (typeof value[Symbol_iterator] === 'function') {\n      iterators.push(new StaticIterator(value[Symbol_iterator]()));\n    } else {\n      iterators.push(new ZipBufferIterator(this.destination, this, value));\n    }\n  }\n\n  protected _complete() {\n    const iterators = this.iterators;\n    const len = iterators.length;\n\n    if (len === 0) {\n      this.destination.complete();\n      return;\n    }\n\n    this.active = len;\n    for (let i = 0; i < len; i++) {\n      let iterator: ZipBufferIterator<any, any> = <any>iterators[i];\n      if (iterator.stillUnsubscribed) {\n        this.add(iterator.subscribe(iterator, i));\n      } else {\n        this.active--; // not an observable\n      }\n    }\n  }\n\n  notifyInactive() {\n    this.active--;\n    if (this.active === 0) {\n      this.destination.complete();\n    }\n  }\n\n  checkIterators() {\n    const iterators = this.iterators;\n    const len = iterators.length;\n    const destination = this.destination;\n\n    // abort if not all of them have values\n    for (let i = 0; i < len; i++) {\n      let iterator = iterators[i];\n      if (typeof iterator.hasValue === 'function' && !iterator.hasValue()) {\n        return;\n      }\n    }\n\n    let shouldComplete = false;\n    const args: any[] = [];\n    for (let i = 0; i < len; i++) {\n      let iterator = iterators[i];\n      let result = iterator.next();\n\n      // check to see if it's completed now that you've gotten\n      // the next value.\n      if (iterator.hasCompleted()) {\n        shouldComplete = true;\n      }\n\n      if (result.done) {\n        destination.complete();\n        return;\n      }\n\n      args.push(result.value);\n    }\n\n    if (this.project) {\n      this._tryProject(args);\n    } else {\n      destination.next(args);\n    }\n\n    if (shouldComplete) {\n      destination.complete();\n    }\n  }\n\n  protected _tryProject(args: any[]) {\n    let result: any;\n    try {\n      result = this.project.apply(this, args);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    this.destination.next(result);\n  }\n}\n\ninterface LookAheadIterator<T> extends Iterator<T> {\n  hasValue(): boolean;\n  hasCompleted(): boolean;\n}\n\nclass StaticIterator<T> implements LookAheadIterator<T> {\n  private nextResult: IteratorResult<T>;\n\n  constructor(private iterator: Iterator<T>) {\n    this.nextResult = iterator.next();\n  }\n\n  hasValue() {\n    return true;\n  }\n\n  next(): IteratorResult<T> {\n    const result = this.nextResult;\n    this.nextResult = this.iterator.next();\n    return result;\n  }\n\n  hasCompleted() {\n    const nextResult = this.nextResult;\n    return nextResult && nextResult.done;\n  }\n}\n\nclass StaticArrayIterator<T> implements LookAheadIterator<T> {\n  private index = 0;\n  private length = 0;\n\n  constructor(private array: T[]) {\n    this.length = array.length;\n  }\n\n  [Symbol_iterator]() {\n    return this;\n  }\n\n  next(value?: any): IteratorResult<T> {\n    const i = this.index++;\n    const array = this.array;\n    return i < this.length ? { value: array[i], done: false } : { value: null, done: true };\n  }\n\n  hasValue() {\n    return this.array.length > this.index;\n  }\n\n  hasCompleted() {\n    return this.array.length === this.index;\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass ZipBufferIterator<T, R> extends OuterSubscriber<T, R> implements LookAheadIterator<T> {\n  stillUnsubscribed = true;\n  buffer: T[] = [];\n  isComplete = false;\n\n  constructor(destination: PartialObserver<T>,\n              private parent: ZipSubscriber<T, R>,\n              private observable: Observable<T>) {\n    super(destination);\n  }\n\n  [Symbol_iterator]() {\n    return this;\n  }\n\n  // NOTE: there is actually a name collision here with Subscriber.next and Iterator.next\n  //    this is legit because `next()` will never be called by a subscription in this case.\n  next(): IteratorResult<T> {\n    const buffer = this.buffer;\n    if (buffer.length === 0 && this.isComplete) {\n      return { value: null, done: true };\n    } else {\n      return { value: buffer.shift(), done: false };\n    }\n  }\n\n  hasValue() {\n    return this.buffer.length > 0;\n  }\n\n  hasCompleted() {\n    return this.buffer.length === 0 && this.isComplete;\n  }\n\n  notifyComplete() {\n    if (this.buffer.length > 0) {\n      this.isComplete = true;\n      this.parent.notifyInactive();\n    } else {\n      this.destination.complete();\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: any,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this.buffer.push(innerValue);\n    this.parent.checkIterators();\n  }\n\n  subscribe(value: any, index: number) {\n    return subscribeToResult<any, any>(this, this.observable, this, index);\n  }\n}\n","export { audit } from './operators/audit';\nexport { auditTime } from './operators/auditTime';\nexport { buffer } from './operators/buffer';\nexport { bufferCount } from './operators/bufferCount';\nexport { bufferTime } from './operators/bufferTime';\nexport { bufferToggle } from './operators/bufferToggle';\nexport { bufferWhen } from './operators/bufferWhen';\nexport { catchError } from './operators/catchError';\nexport { combineAll } from './operators/combineAll';\nexport { combineLatest } from './operators/combineLatest';\nexport { concat } from './operators/concat';\nexport { concatAll } from './operators/concatAll';\nexport { concatMap } from './operators/concatMap';\nexport { concatMapTo } from './operators/concatMapTo';\nexport { count } from './operators/count';\nexport { debounce } from './operators/debounce';\nexport { debounceTime } from './operators/debounceTime';\nexport { defaultIfEmpty } from './operators/defaultIfEmpty';\nexport { delay } from './operators/delay';\nexport { delayWhen } from './operators/delayWhen';\nexport { dematerialize } from './operators/dematerialize';\nexport { distinct } from './operators/distinct';\nexport { distinctUntilChanged } from './operators/distinctUntilChanged';\nexport { distinctUntilKeyChanged } from './operators/distinctUntilKeyChanged';\nexport { elementAt } from './operators/elementAt';\nexport { every } from './operators/every';\nexport { exhaust } from './operators/exhaust';\nexport { exhaustMap } from './operators/exhaustMap';\nexport { expand } from './operators/expand';\nexport { filter } from './operators/filter';\nexport { finalize } from './operators/finalize';\nexport { find } from './operators/find';\nexport { findIndex } from './operators/findIndex';\nexport { first } from './operators/first';\nexport { groupBy } from './operators/groupBy';\nexport { ignoreElements } from './operators/ignoreElements';\nexport { isEmpty } from './operators/isEmpty';\nexport { last } from './operators/last';\nexport { map } from './operators/map';\nexport { mapTo } from './operators/mapTo';\nexport { materialize } from './operators/materialize';\nexport { max } from './operators/max';\nexport { merge } from './operators/merge';\nexport { mergeAll } from './operators/mergeAll';\nexport { mergeMap } from './operators/mergeMap';\nexport { mergeMap as flatMap } from './operators/mergeMap';\nexport { mergeMapTo } from './operators/mergeMapTo';\nexport { mergeScan } from './operators/mergeScan';\nexport { min } from './operators/min';\nexport { multicast } from './operators/multicast';\nexport { observeOn } from './operators/observeOn';\nexport { onErrorResumeNext } from './operators/onErrorResumeNext';\nexport { pairwise } from './operators/pairwise';\nexport { partition } from './operators/partition';\nexport { pluck } from './operators/pluck';\nexport { publish } from './operators/publish';\nexport { publishBehavior } from './operators/publishBehavior';\nexport { publishLast } from './operators/publishLast';\nexport { publishReplay } from './operators/publishReplay';\nexport { race } from './operators/race';\nexport { reduce } from './operators/reduce';\nexport { repeat } from './operators/repeat';\nexport { repeatWhen } from './operators/repeatWhen';\nexport { retry } from './operators/retry';\nexport { retryWhen } from './operators/retryWhen';\nexport { refCount } from './operators/refCount';\nexport { sample } from './operators/sample';\nexport { sampleTime } from './operators/sampleTime';\nexport { scan } from './operators/scan';\nexport { sequenceEqual } from './operators/sequenceEqual';\nexport { share } from './operators/share';\nexport { shareReplay } from './operators/shareReplay';\nexport { single } from './operators/single';\nexport { skip } from './operators/skip';\nexport { skipLast } from './operators/skipLast';\nexport { skipUntil } from './operators/skipUntil';\nexport { skipWhile } from './operators/skipWhile';\nexport { startWith } from './operators/startWith';\n/**\n * TODO(https://github.com/ReactiveX/rxjs/issues/2900): Add back subscribeOn once it can be\n * treeshaken. Currently if this export is added back, it\n * forces apps to bring in asap scheduler along with\n * Immediate, root, and other supporting code.\n */\n// export { subscribeOn } from './operators/subscribeOn';\nexport { switchAll } from './operators/switchAll';\nexport { switchMap } from './operators/switchMap';\nexport { switchMapTo } from './operators/switchMapTo';\nexport { take } from './operators/take';\nexport { takeLast } from './operators/takeLast';\nexport { takeUntil } from './operators/takeUntil';\nexport { takeWhile } from './operators/takeWhile';\nexport { tap } from './operators/tap';\nexport { throttle } from './operators/throttle';\nexport { throttleTime } from './operators/throttleTime';\nexport { timeInterval } from './operators/timeInterval';\nexport { timeout } from './operators/timeout';\nexport { timeoutWith } from './operators/timeoutWith';\nexport { timestamp } from './operators/timestamp';\nexport { toArray } from './operators/toArray';\nexport { window } from './operators/window';\nexport { windowCount } from './operators/windowCount';\nexport { windowTime } from './operators/windowTime';\nexport { windowToggle } from './operators/windowToggle';\nexport { windowWhen } from './operators/windowWhen';\nexport { withLatestFrom } from './operators/withLatestFrom';\nexport { zip } from './operators/zip';\nexport { zipAll } from './operators/zipAll';\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { Subscription } from 'rxjs/Subscription';\nimport { filter } from 'rxjs/operators';\nimport { CardTabComponent } from './card-tab/card-tab.component';\nexport class CardTabsService implements OnDestroy {\n\n  tab$ = new BehaviorSubject<CardTabComponent>(null);\n  tabs$ = new BehaviorSubject<CardTabComponent[]>([]);\n  position$ = new BehaviorSubject<string>('top');\nprivate _subscription: Subscription;\nconstructor() {\n\n    // when a tab is added or removed ensure we always select one if any are available\n    this._subscription = this.tabs$.pipe(\n      filter(tabs => !this.tab$.value || !tabs.find(tab => tab === this.tab$.value)),\n    ).subscribe(tabs => this.tab$.next(tabs.length > 0 ? tabs[0] : null));\n  }\n/**\n * @return {?}\n */\nngOnDestroy(): void {\n    this._subscription.unsubscribe();\n  }\n/**\n * Add a tab to the list of tabs\n * @param {?} tab\n * @return {?}\n */\naddTab(tab: CardTabComponent): void {\n    this.tabs$.next([...this.tabs$.value, tab]);\n  }\n/**\n * Remove a tab from the list\n * @param {?} tab\n * @return {?}\n */\nremoveTab(tab: CardTabComponent): void {\n    this.tabs$.next(this.tabs$.value.filter(_tab => _tab !== tab));\n  }\n/**\n * Select the tab\n * @param {?} tab\n * @return {?}\n */\nselect(tab: CardTabComponent): void {\n    this.tab$.next(tab);\n  }\n/**\n * Set the position of the tab content\n * @param {?} position\n * @return {?}\n */\nsetPosition(position: string): void {\n    this.position$.next(position);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction CardTabsService_tsickle_Closure_declarations() {\n/** @type {?} */\nCardTabsService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nCardTabsService.ctorParameters;\n/** @type {?} */\nCardTabsService.prototype.tab$;\n/** @type {?} */\nCardTabsService.prototype.tabs$;\n/** @type {?} */\nCardTabsService.prototype.position$;\n/** @type {?} */\nCardTabsService.prototype._subscription;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { ChangeDetectionStrategy, Component, ContentChild, OnDestroy, TemplateRef } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { map } from 'rxjs/operators';\nimport { CardTabsService } from '../card-tabs.service';\nimport { CardTabContentDirective } from './card-tab-content.directive';\nexport class CardTabComponent implements OnDestroy {\n\n  active$: Observable<boolean> = this._tabService.tab$.pipe(map(tab => tab === this));\n   content: TemplateRef<any>;\n/**\n * @param {?} _tabService\n */\nconstructor(private _tabService: CardTabsService) {\n    this._tabService.addTab(this);\n  }\n/**\n * @return {?}\n */\nngOnDestroy(): void {\n    this._tabService.removeTab(this);\n  }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'ux-card-tab',\n  template: `\n    <ng-content *ngIf=\"active$ | async\"></ng-content>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: CardTabsService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'content': [{ type: ContentChild, args: [CardTabContentDirective, { read: TemplateRef }, ] },],\n};\n}\n\nfunction CardTabComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nCardTabComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nCardTabComponent.ctorParameters;\n/** @type {?} */\nCardTabComponent.propDecorators;\n/** @type {?} */\nCardTabComponent.prototype.active$;\n/** @type {?} */\nCardTabComponent.prototype.content;\n/** @type {?} */\nCardTabComponent.prototype._tabService;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, ElementRef, HostBinding, Input, ViewChild } from '@angular/core';\nimport { ResizeDimensions } from '../../../directives/resize';\nimport { CardTabComponent } from '../card-tab/card-tab.component';\nimport { CardTabsService } from '../card-tabs.service';\nexport class CardTabsetComponent {\n/**\n * @param {?} direction\n * @return {?}\n */\nset position(direction: string) {\n    this.tabService.setPosition(direction);\n  }\n/**\n * @return {?}\n */\nget position(): string {\n    return this.tabService.position$.getValue();\n  }\n\n   tablist: ElementRef;\n\n  offset: number = 0;\n  bounds: CardTabsBounds = { lower: 0, upper: 0 };\nprivate _width: number;\nprivate _innerWidth: number;\n/**\n * @param {?} tabService\n */\nconstructor(public tabService: CardTabsService) {}\n/**\n * @param {?} tab\n * @param {?} element\n * @return {?}\n */\nselect(tab: CardTabComponent, element: HTMLElement): void {\n    // select the tab\n    this.tabService.select(tab);\n\n    // ensure the tab is moved into view if required\n    this.moveIntoView(element);\n  }\n/**\n * @param {?} dimensions\n * @return {?}\n */\nresize(dimensions: ResizeDimensions): void {\n    this._width = dimensions.width;\n    this._innerWidth = this.tablist.nativeElement.scrollWidth;\n\n    this.bounds.lower = 0;\n    this.bounds.upper = -(this._innerWidth - this._width);\n  }\n/**\n * @return {?}\n */\nprevious(): void {\n    this.offset += this._width;\n\n    // ensure it remains within the allowed bounds\n    this.offset = Math.min(this.offset, this.bounds.lower);\n  }\n/**\n * @return {?}\n */\nnext(): void {\n    this.offset -= this._width;\n\n    // ensure it remains within the allowed bounds\n    this.offset = Math.max(this.offset, this.bounds.upper);\n  }\n/**\n * @param {?} element\n * @return {?}\n */\nprivate moveIntoView(element: HTMLElement): void {\n\n    // if we dont have the dimensions we cant check\n    if (!this._width || !this._innerWidth) {\n      return;\n    }\n\n    // get the current element bounds\n    const { offsetLeft, offsetWidth } = element;\n    const { marginLeft, marginRight } = getComputedStyle(element);\n\n    // calculate the visible area\n    const /** @type {?} */ viewportStart = Math.abs(this.offset);\n    const /** @type {?} */ viewportEnd = viewportStart + this._width;\n    const /** @type {?} */ cardWidth = parseFloat(marginLeft) + offsetWidth + parseFloat(marginRight);\n\n    // if we need to move to the left - figure out how much\n    if (offsetLeft < viewportStart) {\n      this.offset -= (offsetLeft - parseFloat(marginLeft)) - viewportStart;\n    }\n    \n    // if we need to move to the right - figure out how much\n    if ((offsetLeft + cardWidth) > viewportEnd) {\n      this.offset -= (offsetLeft + cardWidth) - viewportEnd;\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'ux-card-tabset',\n  template: `\n    <div class=\"card-tab-content\" role=\"tabpanel\" *ngIf=\"(tabService.tab$ | async)\">\n        <ng-content></ng-content>\n    </div>\n\n    <div class=\"card-tabs\" #tabs>\n\n        <button class=\"card-tabs-paging-btn card-tabs-paging-btn-previous\" aria-label=\"Previous Tabs\" (click)=\"previous()\" *ngIf=\"offset < bounds.lower\">\n            <i class=\"hpe-icon hpe-previous\"></i>\n        </button>\n\n        <div class=\"card-tabs-list\" role=\"tablist\" #tablist (uxResize)=\"resize($event)\" [style.transform]=\"'translateX(' + offset + 'px)'\">\n\n            <div class=\"card-tab\"\n                role=\"tab\"\n                tabindex=\"0\" #card\n                *ngFor=\"let tab of tabService.tabs$ | async\"\n                [ngClass]=\"tabService.position$ | async\"\n                [class.active]=\"tab.active$ | async\"\n                [attr.aria-selected]=\"tab.active$ | async\"\n                (click)=\"select(tab, card)\"\n                (focus)=\"tabs.scrollLeft = 0\"\n                (keydown.enter)=\"select(tab, card)\">\n\n                <ng-container [ngTemplateOutlet]=\"tab.content\"></ng-container>\n            </div>\n\n        </div>\n\n        <button class=\"card-tabs-paging-btn card-tabs-paging-btn-next\" aria-label=\"Next Tabs\" (click)=\"next()\" *ngIf=\"offset > bounds.upper\">\n            <i class=\"hpe-icon hpe-next\"></i>\n        </button>\n    </div>\n  `,\n  providers: [CardTabsService]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: CardTabsService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'position': [{ type: HostBinding, args: ['class', ] },{ type: Input },],\n'tablist': [{ type: ViewChild, args: ['tablist', ] },],\n};\n}\n\nfunction CardTabsetComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nCardTabsetComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nCardTabsetComponent.ctorParameters;\n/** @type {?} */\nCardTabsetComponent.propDecorators;\n/** @type {?} */\nCardTabsetComponent.prototype.tablist;\n/** @type {?} */\nCardTabsetComponent.prototype.offset;\n/** @type {?} */\nCardTabsetComponent.prototype.bounds;\n/** @type {?} */\nCardTabsetComponent.prototype._width;\n/** @type {?} */\nCardTabsetComponent.prototype._innerWidth;\n/** @type {?} */\nCardTabsetComponent.prototype.tabService;\n}\n\n\nexport interface CardTabsBounds {\n  lower: number;\n  upper: number;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ResizeModule } from '../../directives/resize/index';\nimport { CardTabContentDirective } from './card-tab/card-tab-content.directive';\nimport { CardTabComponent } from './card-tab/card-tab.component';\nimport { CardTabsetComponent } from './card-tabset/card-tabset.component';\nexport class CardTabsModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  imports: [\n    CommonModule,\n    ResizeModule\n  ],\n  declarations: [CardTabsetComponent, CardTabComponent, CardTabContentDirective],\n  exports: [CardTabsetComponent, CardTabComponent, CardTabContentDirective]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction CardTabsModule_tsickle_Closure_declarations() {\n/** @type {?} */\nCardTabsModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nCardTabsModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, EventEmitter, Input, Output, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nexport const /** @type {?} */ CHECKBOX_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => CheckboxComponent),\n    multi: true\n};\n\nlet /** @type {?} */ uniqueCheckboxId = 0;\nexport class CheckboxComponent implements ControlValueAccessor {\nprivate _checkboxId: string = `ux-checkbox-${++uniqueCheckboxId}`;\n\n     id: string = this._checkboxId;\n     name: string | null;\n     required: boolean;\n     tabindex: number = 0;\n     clickable: boolean = true;\n     simplified: boolean = false;\n     indeterminateValue: any = -1;\n     disabled: boolean = false;\n     ariaLabel: string = '';\n     ariaLabelledby: string = null;\n\n     valueChange: EventEmitter<any> = new EventEmitter<any>();\n/**\n * @return {?}\n */\nget value() {\n        return this._value;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset value(value: any) {\n        this._value = value;\n\n        // determine if it is in the indeterminate state\n        this.indeterminate = this._value === this.indeterminateValue;\n\n        // determine the checked state\n        this.ariaChecked = this.indeterminate ? 'mixed' : this._value;\n\n        // invoke change event\n        this.valueChange.emit(this._value);\n\n        // call callback\n        this.onChangeCallback(this._value);\n        this.onTouchedCallback();\n    }\n/**\n * @return {?}\n */\nget inputId(): string { \n        return `${this.id || this._checkboxId}-input`;\n    }\nprivate _value: any = false;\n\n    indeterminate: boolean = false;\n    ariaChecked: boolean | string;\n    focused: boolean = false;\n\n    onTouchedCallback: () => void = () => { };\n    onChangeCallback: (_: any) => void = () => { };\n/**\n * @return {?}\n */\ntoggle(): void {\n\n        if (this.disabled || !this.clickable) {\n            return;\n        }\n\n        if (this.value === this.indeterminateValue) {\n            this.value = true;\n            return;\n        }\n\n        // toggle the checked state\n        this.value = !this.value;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nwriteValue(value: any): void {\n        if (value !== this._value) {\n            this._value = value;\n        }\n    }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnChange(fn: any): void {\n        this.onChangeCallback = fn;\n    }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnTouched(fn: any): void {\n        this.onTouchedCallback = fn;\n    }\n/**\n * @param {?} isDisabled\n * @return {?}\n */\nsetDisabledState(isDisabled: boolean): void {\n        this.disabled = isDisabled;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-checkbox',\n    template: `\n      <label [attr.for]=\"inputId\"\n             class=\"ux-checkbox\"\n             [class.ux-checkbox-checked]=\"value === true\"\n             [class.ux-checkbox-indeterminate]=\"indeterminate\"\n             [class.ux-checkbox-simplified]=\"simplified\"\n             [class.ux-checkbox-disabled]=\"disabled\"\n             [class.ux-checkbox-focused]=\"focused\">\n\n          <div class=\"ux-checkbox-container\">\n              <input type=\"checkbox\"\n                     class=\"ux-checkbox-input\"\n                     [id]=\"inputId\"\n                     [required]=\"required\"\n                     [checked]=\"value\"\n                     [attr.value]=\"value\"\n                     [disabled]=\"disabled\"\n                     [attr.name]=\"name\"\n                     [tabindex]=\"tabindex\"\n                     [indeterminate]=\"indeterminate\"\n                     [attr.aria-label]=\"ariaLabel\"\n                     [attr.aria-labelledby]=\"ariaLabelledby\"\n                     [attr.aria-checked]=\"ariaChecked\"\n                     (focus)=\"focused = true\"\n                     (blur)=\"focused = false\"\n                     (change)=\"$event.stopPropagation()\"\n                     (click)=\"toggle()\">\n          </div>\n\n          <span class=\"ux-checkbox-label\">\n              <ng-content></ng-content>\n          </span>\n      </label>\n    `,\n    providers: [CHECKBOX_VALUE_ACCESSOR]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'id': [{ type: Input },],\n'name': [{ type: Input },],\n'required': [{ type: Input },],\n'tabindex': [{ type: Input },],\n'clickable': [{ type: Input },],\n'simplified': [{ type: Input },],\n'indeterminateValue': [{ type: Input },],\n'disabled': [{ type: Input },],\n'ariaLabel': [{ type: Input, args: ['aria-label', ] },],\n'ariaLabelledby': [{ type: Input, args: ['aria-labelledby', ] },],\n'valueChange': [{ type: Output },],\n'value': [{ type: Input },],\n};\n}\n\nfunction CheckboxComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nCheckboxComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nCheckboxComponent.ctorParameters;\n/** @type {?} */\nCheckboxComponent.propDecorators;\n/** @type {?} */\nCheckboxComponent.prototype._checkboxId;\n/** @type {?} */\nCheckboxComponent.prototype.id;\n/** @type {?} */\nCheckboxComponent.prototype.name;\n/** @type {?} */\nCheckboxComponent.prototype.required;\n/** @type {?} */\nCheckboxComponent.prototype.tabindex;\n/** @type {?} */\nCheckboxComponent.prototype.clickable;\n/** @type {?} */\nCheckboxComponent.prototype.simplified;\n/** @type {?} */\nCheckboxComponent.prototype.indeterminateValue;\n/** @type {?} */\nCheckboxComponent.prototype.disabled;\n/** @type {?} */\nCheckboxComponent.prototype.ariaLabel;\n/** @type {?} */\nCheckboxComponent.prototype.ariaLabelledby;\n/** @type {?} */\nCheckboxComponent.prototype.valueChange;\n/** @type {?} */\nCheckboxComponent.prototype._value;\n/** @type {?} */\nCheckboxComponent.prototype.indeterminate;\n/** @type {?} */\nCheckboxComponent.prototype.ariaChecked;\n/** @type {?} */\nCheckboxComponent.prototype.focused;\n/** @type {?} */\nCheckboxComponent.prototype.onTouchedCallback;\n/** @type {?} */\nCheckboxComponent.prototype.onChangeCallback;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport {FormsModule} from '@angular/forms';\n\nimport { CheckboxComponent } from './checkbox.component';\nexport class CheckboxModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [FormsModule],\n    exports: [CheckboxComponent],\n    declarations: [CheckboxComponent]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction CheckboxModule_tsickle_Closure_declarations() {\n/** @type {?} */\nCheckboxModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nCheckboxModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { ColumnSortingDirective, ColumnSortingOrder } from './column-sorting.directive';\nimport { Component, Input, Output, EventEmitter } from '@angular/core';\nexport class ColumnSortingComponent {\n\n     state: ColumnSortingState;\n     key: string;\n     orderNumber: number;\n     stateChange: EventEmitter<ColumnSortingState> = new EventEmitter<ColumnSortingState>();\nprivate _parent: ColumnSortingDirective;\n    columnSortingState = ColumnSortingState;\n/**\n * @param {?} parent\n * @return {?}\n */\ninitParent(parent: ColumnSortingDirective) {\n        this._parent = parent;\n\n        // watch for any events\n        this._parent.events.subscribe(event => {\n\n            let /** @type {?} */ idx = event.findIndex(column => column.key === this.key);\n\n            if (idx == -1) {\n                this.state = ColumnSortingState.NoSort;\n            }\n\n            // only store the number if we have 2 or more columns being sorted\n            if (event.length > 1) {\n                this.orderNumber = idx === -1 ? null : idx + 1;\n            } else {\n                this.orderNumber = null;\n            }\n\n            this.stateChange.emit(this.state);\n\n        });\n    }\n/**\n * @return {?}\n */\nchangeState(): ColumnSortingOrder[] {\n\n        if (this.state === ColumnSortingState.Ascending) {\n            this.state = ColumnSortingState.Descending;\n        } else if (this.state === ColumnSortingState.Descending) {\n            this.state = ColumnSortingState.NoSort;\n        } else {\n            this.state = ColumnSortingState.Ascending;\n        }\n\n        // inform parent\n        return this._parent.toggleColumn(this.key, this.state);\n\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-column-sorting',\n    template: `\n      <div class=\"ux-column-sorting\">\n          <i class=\"ux-column-sorting-icon hpe-icon\" \n              [class.hpe-ascend]=\"state === columnSortingState.Ascending\" \n              [class.hpe-descend]=\"state === columnSortingState.Descending\" \n              [class.column-sorting-icon-hidden]=\"state === columnSortingState.NoSort\"></i>\n          <p class=\"ux-column-sorting-number\">{{ orderNumber }}</p>\n      </div>\n    `,\n    exportAs: 'ux-column-sorting'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'state': [{ type: Input },],\n'key': [{ type: Input },],\n'orderNumber': [{ type: Input },],\n'stateChange': [{ type: Output },],\n};\n}\n\nfunction ColumnSortingComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nColumnSortingComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nColumnSortingComponent.ctorParameters;\n/** @type {?} */\nColumnSortingComponent.propDecorators;\n/** @type {?} */\nColumnSortingComponent.prototype.state;\n/** @type {?} */\nColumnSortingComponent.prototype.key;\n/** @type {?} */\nColumnSortingComponent.prototype.orderNumber;\n/** @type {?} */\nColumnSortingComponent.prototype.stateChange;\n/** @type {?} */\nColumnSortingComponent.prototype._parent;\n/** @type {?} */\nColumnSortingComponent.prototype.columnSortingState;\n}\n\nexport type ColumnSortingState = number;\nexport let ColumnSortingState: any = {};\nColumnSortingState.Ascending = 0;\nColumnSortingState.Descending = 1;\nColumnSortingState.NoSort = 2;\nColumnSortingState[ColumnSortingState.Ascending] = \"Ascending\";\nColumnSortingState[ColumnSortingState.Descending] = \"Descending\";\nColumnSortingState[ColumnSortingState.NoSort] = \"NoSort\";\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { ColumnSortingComponent, ColumnSortingState } from './column-sorting.component';\nimport { Directive, Host, QueryList, ContentChildren, Input } from '@angular/core';\nimport { Subject } from 'rxjs/Subject';\nexport class ColumnSortingDirective {\n\n     singleSort: boolean;\n     components: QueryList<ColumnSortingComponent>;\n\n    events: Subject<ColumnSortingOrder[]> = new Subject<ColumnSortingOrder[]>();\n    order: ColumnSortingOrder[] = [];\n/**\n * @return {?}\n */\nngAfterViewInit() {\n        this.components.forEach(component => component.initParent(this));\n    }\n/**\n * @param {?} key\n * @param {?} state\n * @return {?}\n */\ntoggleColumn(key: string, state: ColumnSortingState) {\n\n        if (this.singleSort) {\n            if (state === ColumnSortingState.NoSort) {\n                this.order = [];\n            } else {\n                this.order = [{key: key, state: state}];\n            }\n        } else {\n            // reorder columns here\n            let /** @type {?} */ idx = this.order.findIndex(column => column.key === key);\n\n            // if wasnt previously selected add to list\n            if (idx === -1) {\n                this.order.push({ key: key, state: state});\n            } else if (state === ColumnSortingState.Ascending || state === ColumnSortingState.Descending) {\n                this.order.splice(idx, 1);\n                this.order.push({ key: key, state: state});\n            } else {\n                this.order.splice(idx, 1);\n            }\n        }\n\n            this.events.next(this.order);\n            // return the order\n            return this.order;\n\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: '[uxColumnSorting]'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'singleSort': [{ type: Input },],\n'components': [{ type: ContentChildren, args: [ColumnSortingComponent, ] },],\n};\n}\n\nfunction ColumnSortingDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nColumnSortingDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nColumnSortingDirective.ctorParameters;\n/** @type {?} */\nColumnSortingDirective.propDecorators;\n/** @type {?} */\nColumnSortingDirective.prototype.singleSort;\n/** @type {?} */\nColumnSortingDirective.prototype.components;\n/** @type {?} */\nColumnSortingDirective.prototype.events;\n/** @type {?} */\nColumnSortingDirective.prototype.order;\n}\n\n\nexport interface ColumnSortingOrder {\n    key: string;\n    state: ColumnSortingState; \n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\n\nimport { ColumnSortingComponent } from './column-sorting.component';\n\nimport { ColumnSortingDirective } from './column-sorting.directive';\nexport class ColumnSortingModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    exports: [ColumnSortingComponent, ColumnSortingDirective],\n    declarations: [ColumnSortingComponent, ColumnSortingDirective]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ColumnSortingModule_tsickle_Closure_declarations() {\n/** @type {?} */\nColumnSortingModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nColumnSortingModule.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable } from '@angular/core';\nimport { DashboardWidgetComponent } from './widget/dashboard-widget.component';\nimport { DashboardOptions } from './dashboard.component';\nimport { Subject } from 'rxjs/Subject';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { filter } from 'rxjs/operators/filter';\nimport { delay } from 'rxjs/operators/delay';\nimport { map } from 'rxjs/operators/map';\nimport { distinctUntilChanged } from 'rxjs/operators/distinctUntilChanged';\nimport { Observable } from 'rxjs/Observable';\nexport class DashboardService {\nprivate _dashboard: HTMLElement;\nprivate _widgetOrigin: { column?: number, row?: number, columnSpan?: number, rowSpan?: number };\nprivate _actionWidget: DashboardAction;\nprivate _rowHeight: number = 0;\nprivate _cache: DashboardCache[];\nprivate _mouseEvent: MouseEvent;\n\n    widgets$ = new BehaviorSubject<DashboardWidgetComponent[]>([]);\n    options$ = new BehaviorSubject<DashboardOptions>(defaultOptions);\n    dimensions$ = new BehaviorSubject<DashboardDimensions>({});\n    height$: Observable<number> = this.dimensions$.pipe(delay(0), map((dimensions: DashboardDimensions) => dimensions.height), distinctUntilChanged());\n    placeholder$ = new BehaviorSubject<DashboardPlaceholder>({ visible: false, x: 0, y: 0, width: 0, height: 0 });\n    layout$ = new Subject<DashboardLayoutData[]>();\n    stacked$ = new BehaviorSubject<boolean>(false);\n/**\n * @return {?}\n */\nget options() {\n        return this.options$.getValue();\n    }\n/**\n * @return {?}\n */\nget widgets() {\n        return this.widgets$.getValue();\n    }\n/**\n * @return {?}\n */\nget stacked() {\n        return this.stacked$.getValue();\n    }\n/**\n * @return {?}\n */\nget dimensions() {\n        return this.dimensions$.getValue();\n    }\n/**\n * @return {?}\n */\nget columnWidth() {\n        return this.dimensions.width / this.options.columns;\n    }\nconstructor() {\n        this.layout$.subscribe(this.setLayoutData.bind(this));\n        this.stacked$.pipe(filter(stacked => stacked === true)).subscribe(this.updateWhenStacked.bind(this));\n        this.widgets$.pipe(delay(0)).subscribe(() => this.renderDashboard());\n        this.dimensions$.pipe(delay(0)).subscribe(() => this.renderDashboard());\n    }\n/**\n * Set the dashboard container element\n * @param {?} dashboard The HTMLElement that is the dashboard container\n * @return {?}\n */\nsetDashboard(dashboard: HTMLElement): void {\n        this._dashboard = dashboard;\n    }\n/**\n * Add a widget to the dashboard\n * @param {?} widget The widget component to add to the dashboard\n * @return {?}\n */\naddWidget(widget: DashboardWidgetComponent): void {\n        this.widgets$.next([...this.widgets$.getValue(), widget]);\n    }\n/**\n * Remove a widget from the dashboard\n * @param {?} widget The widget to remove\n * @return {?}\n */\nremoveWidget(widget: DashboardWidgetComponent): void {\n        this.widgets$.next(this.widgets$.getValue().filter(_widget => _widget !== widget));\n    }\n/**\n * Indicate that the dashboard element has been resized\n * @param {?=} width The width of the dashboard element in px\n * @param {?=} height The height of the dashboard element in px\n * @return {?}\n */\nsetDimensions(width: number = this.dimensions.width, height: number = this.dimensions.height): void {\n        if (this.dimensions.width !== width || this.dimensions.height !== height) {\n            this.dimensions$.next({ width: width, height: height });\n        }\n    }\n/**\n * Produce an object containing all the required layout data.\n * This can be useful for exporting/saving a layout\n * @return {?}\n */\ngetLayoutData(): DashboardLayoutData[] {\n        return this.widgets.map(widget => {\n            return { id: widget.id, col: widget.getColumn(), row: widget.getRow(), colSpan: widget.getColumnSpan(), rowSpan: widget.getRowSpan() };\n        });\n    }\n/**\n * Position widgets programatically\n * @param {?} widgets\n * @return {?}\n */\nsetLayoutData(widgets: DashboardLayoutData[]): void {\n\n        // iterate through each widget data and find a match\n        widgets.forEach(widget => {\n\n            // find the matching widget\n            const /** @type {?} */ target = this.widgets.find(_widget => _widget.id === widget.id);\n\n            if (target) {\n                target.setColumn(widget.col);\n                target.setRow(widget.row);\n                target.setColumnSpan(widget.colSpan);\n                target.setRowSpan(widget.rowSpan);\n            }\n        });\n    }\n/**\n * Update the positions and sizes of the widgets\n * @return {?}\n */\nrenderDashboard(): void {\n\n        // get the dimensions of the dashboard\n        this._rowHeight = this.options.rowHeight || this.columnWidth;\n\n        // ensure the column width is not below the min widths\n        this.stacked$.next(this.columnWidth < this.options.minWidth);\n\n        // ensure the row height is not below the min widths\n        if (this._rowHeight < this.options.minWidth) {\n            this._rowHeight = this.options.minWidth;\n        }\n\n        this.setDashboardLayout();\n\n        // iterate through each widget and set the size - except the one being resized\n        this.widgets.filter(widget => !this._actionWidget || widget !== this._actionWidget.widget)\n            .forEach(widget => widget.render());\n    }\n/**\n * Determine where widgets should be positioned based on their positions, width and the size of the container\n * @return {?}\n */\nsetDashboardLayout(): void {\n\n        // find any widgets that do not currently have a position set\n        this.widgets.filter(widget => widget.getColumn() === undefined || widget.getRow() === undefined)\n            .forEach(widget => this.setWidgetPosition(widget));\n\n        this.setDashboardHeight();\n    }\n/**\n * @return {?}\n */\nupdateWhenStacked(): void {\n\n        // iterate through each widget set it's stacked state and\n        this.getWidgetsByOrder().forEach((widget, idx) => {\n            widget.setColumn(0);\n            widget.setRow(idx);\n        });\n\n    }\n/**\n * @return {?}\n */\ngetWidgetsByOrder(): DashboardWidgetComponent[] {\n        return this.widgets.sort((w1, w2) => {\n\n            const /** @type {?} */ w1Position = w1.getColumn() * w1.getRow();\n            const /** @type {?} */ w2Position = w2.getColumn() * w2.getRow();\n\n            if (w1Position < w2Position) {\n                return -1;\n            }\n\n            if (w1Position > w2Position) {\n                return 1;\n            }\n\n            return 0;\n        });\n    }\n/**\n * Find a position that a widget can fit in the dashboard\n * @param {?} widget The widget to try and position\n * @return {?}\n */\nsetWidgetPosition(widget: DashboardWidgetComponent): void {\n\n        // find a position for the widget\n        let /** @type {?} */ position = 0;\n        let /** @type {?} */ success = false;\n\n        // repeat until a space is found\n        while (!success) {\n\n            // get a position to try\n            const /** @type {?} */ column = position % this.options.columns;\n            const /** @type {?} */ row = Math.floor(position / this.options.columns);\n\n            // check the current position\n            if (this.getPositionAvailable(column, row, widget.getColumnSpan(), widget.getRowSpan())) {\n                success = true;\n                widget.setColumn(column);\n                widget.setRow(row);\n                return;\n            }\n\n            if (column === 0 && widget.colSpan > this.options.columns) {\n                throw new Error('Dashboard widgets have a colSpan greater than the max number of dashboard columns!');\n            }\n\n            position++;\n        }\n    }\n/**\n * Check if a position in the dashboard is vacant or not\n * @param {?} column\n * @param {?} row\n * @param {?} columnSpan\n * @param {?} rowSpan\n * @param {?=} ignoreWidget\n * @return {?}\n */\ngetPositionAvailable(column: number, row: number, columnSpan: number, rowSpan: number, ignoreWidget?: DashboardWidgetComponent): boolean {\n\n        // get a list of grid spaces that are populated\n        const /** @type {?} */ spaces = this.getOccupiedSpaces();\n\n        // check if the block would still be in bounds\n        if (column + columnSpan > this.options.columns) {\n            return false;\n        }\n\n        // check each required position\n        for (let /** @type {?} */ x = column; x < column + columnSpan; x++) {\n            for (let /** @type {?} */ y = row; y < row + rowSpan; y++) {\n                if (spaces.find(block => block.column === x && block.row === y && block.widget !== ignoreWidget)) {\n                    return false;\n                }\n            }\n        }\n\n        return true;\n    }\n/**\n * @return {?}\n */\ngetOccupiedSpaces(): DashboardSpace[] {\n\n        // find all spaces that are currently occupied\n        return this.widgets.filter(widget => widget.getColumn() !== undefined && widget.getRow() !== undefined)\n            .reduce((value, widget) => {\n\n                this.forEachBlock(widget, (column, row) => value.push({ widget: widget, column: column, row: row }));\n\n                return value;\n            }, []);\n    }\n/**\n * Begin resizing a widget\n * @param {?} action The the widget to resize\n * @return {?}\n */\nonResizeStart(action: DashboardAction): void {\n\n        // store the mouse event\n        this._mouseEvent = action.event;\n        this._actionWidget = action;\n\n        // bring the widget to the font\n        this.bringToFront(action.widget);\n    }\n/**\n * @param {?} action\n * @return {?}\n */\nonResizeDrag(action: DashboardAction): void {\n\n        const /** @type {?} */ mousePosX = this._mouseEvent.pageX - pageXOffset;\n        const /** @type {?} */ mousePosY = this._mouseEvent.pageY - pageYOffset;\n\n        // if there was no movement then do nothing\n        if (action.event.x === mousePosX && action.event.y === mousePosY) {\n            return;\n        }\n\n        // update the stored mouse event\n        this._mouseEvent = action.event;\n\n        // get handle for direction\n        const { handle } = action;\n\n        // get the bounds of the handle\n        const /** @type {?} */ bounds = handle.getBoundingClientRect();\n\n        // get the center of the handle\n        const /** @type {?} */ centerX = bounds.left + (bounds.width / 2);\n        const /** @type {?} */ centerY = bounds.top + (bounds.height / 2);\n\n        // get the current mouse position\n        const /** @type {?} */ mouseX = mousePosX - centerX;\n        const /** @type {?} */ mouseY = mousePosY - centerY;\n\n        // store the new proposed dimensions for the widget\n        const /** @type {?} */ dimensions: DashboardWidgetDimensions = {\n            x: action.widget.x,\n            y: action.widget.y,\n            width: action.widget.width,\n            height: action.widget.height\n        };\n\n        // update widget based on the handle being dragged\n        switch (action.direction) {\n\n            case ActionDirection.Right:\n                dimensions.width += mouseX;\n                break;\n\n            case ActionDirection.Left:\n                dimensions.x += mouseX;\n                dimensions.width -= mouseX;\n\n                if (dimensions.width < this.options.minWidth) {\n                    const /** @type {?} */ difference = this.options.minWidth - dimensions.width;\n                    dimensions.x -= difference;\n                    dimensions.width += difference;\n                }\n\n                break;\n\n            case ActionDirection.Bottom:\n                dimensions.height += mouseY;\n                break;\n\n            case ActionDirection.Top:\n                dimensions.y += mouseY;\n                dimensions.height -= mouseY;\n\n                if (dimensions.height < this.options.minHeight) {\n                    const /** @type {?} */ difference = this.options.minHeight - dimensions.height;\n                    dimensions.y -= difference;\n                    dimensions.height += difference;\n                }\n                break;\n\n            // Support resizing on multiple axis simultaneously\n            case ActionDirection.TopLeft:\n\n                dimensions.x += mouseX;\n                dimensions.width -= mouseX;\n\n                if (dimensions.width < this.options.minWidth) {\n                    const /** @type {?} */ difference = this.options.minWidth - dimensions.width;\n                    dimensions.x -= difference;\n                    dimensions.width += difference;\n                }\n\n                dimensions.y += mouseY;\n                dimensions.height -= mouseY;\n\n                if (dimensions.height < this.options.minHeight) {\n                    const /** @type {?} */ difference = this.options.minHeight - dimensions.height;\n                    dimensions.y -= difference;\n                    dimensions.height += difference;\n                }\n                break;\n\n            case ActionDirection.TopRight:\n                dimensions.width += mouseX;\n                dimensions.y += mouseY;\n                dimensions.height -= mouseY;\n\n                if (dimensions.height < this.options.minHeight) {\n                    const /** @type {?} */ difference = this.options.minHeight - dimensions.height;\n                    dimensions.y -= difference;\n                    dimensions.height += difference;\n                }\n                break;\n\n            case ActionDirection.BottomLeft:\n                dimensions.height += mouseY;\n                dimensions.x += mouseX;\n                dimensions.width -= mouseX;\n\n                if (dimensions.width < this.options.minWidth) {\n                    const /** @type {?} */ difference = this.options.minWidth - dimensions.width;\n                    dimensions.x -= difference;\n                    dimensions.width += difference;\n                }\n                break;\n\n            case ActionDirection.BottomRight:\n                dimensions.height += mouseY;\n                dimensions.width += mouseX;\n                break;\n        }\n\n        const /** @type {?} */ currentWidth = action.widget.x + action.widget.width;\n        const /** @type {?} */ currentHeight = action.widget.y + action.widget.height;\n\n        // ensure values are within the dashboard bounds\n        if (dimensions.x < 0) {\n            dimensions.x = 0;\n            dimensions.width = currentWidth;\n        }\n\n        if (dimensions.y < 0) {\n            dimensions.y = 0;\n            dimensions.height = currentHeight;\n        }\n\n        if ((dimensions.x + dimensions.width) > this.dimensions.width) {\n            dimensions.width = this.dimensions.width - dimensions.x;\n        }\n\n        // if the proposed width is smaller than allowed then reset width to minimum and ignore x changes\n        if (dimensions.width < this.options.minWidth) {\n            dimensions.x = action.widget.x;\n            dimensions.width = this.options.minWidth;\n        }\n\n        // if the proposed height is smaller than allowed then reset height to minimum and ignore y changes\n        if (dimensions.height < this.options.minHeight) {\n            dimensions.y = action.widget.y;\n            dimensions.height = this.options.minHeight;\n        }\n\n        // update the widget actual values\n        action.widget.setBounds(dimensions.x, dimensions.y, dimensions.width, dimensions.height);\n\n        // update placeholder position and value\n        this.setPlaceholderBounds(true, dimensions.x, dimensions.y, dimensions.width, dimensions.height);\n\n        // show the widget positions if the current positions and sizes were to persist\n        this.updateWidgetPositions(action.widget);\n    }\n/**\n * @return {?}\n */\nonResizeEnd(): void {\n\n        const /** @type {?} */ placeholder = this.placeholder$.getValue();\n\n        // commit resize changes\n        this.commitWidgetChanges();\n\n        // hide placeholder\n        placeholder.visible = false;\n\n        // update the placeholder\n        this.placeholder$.next(placeholder);\n\n        this._actionWidget = null;\n        this._mouseEvent = null;\n\n        // ensure any vacant upper spaces are filled where required\n        this.shiftWidgetsUp();\n\n        // update dashboard height\n        this.setDashboardHeight();\n\n        // emit information about the layout\n        this.layout$.next(this.getLayoutData());\n    }\n/**\n * @param {?} action\n * @return {?}\n */\nonDragStart(action: DashboardAction): void {\n        this.onResizeStart(action);\n\n        // store the starting placeholder position\n        this.setWidgetOrigin();\n\n        this.cacheWidgets();\n    }\n/**\n * @return {?}\n */\nonDragEnd(): void {\n        this.onResizeEnd();\n\n        this._widgetOrigin = {};\n    }\n/**\n * @param {?} action\n * @return {?}\n */\nonDrag(action: DashboardAction): void {\n\n        // if there was no movement then do nothing\n        if (action.event.pageX === this._mouseEvent.pageX && action.event.pageY === this._mouseEvent.pageY) {\n            return;\n        }\n\n        // get the current mouse position\n        const /** @type {?} */ mouseX = action.event.pageX - this._mouseEvent.pageX;\n        const /** @type {?} */ mouseY = action.event.pageY - this._mouseEvent.pageY;\n\n        // store the latest event\n        this._mouseEvent = action.event;\n\n        const /** @type {?} */ dimensions: DashboardWidgetDimensions = {\n            x: action.widget.x + mouseX,\n            y: action.widget.y + mouseY,\n            width: action.widget.width,\n            height: action.widget.height\n        };\n\n        this.restoreWidgets(true);\n\n        // update widget position\n        action.widget.setBounds(dimensions.x, dimensions.y, dimensions.width, dimensions.height);\n\n        // update placeholder position and value\n        this.setPlaceholderBounds(true, dimensions.x, dimensions.y, dimensions.width, dimensions.height);\n\n        // show the widget positions if the current positions and sizes were to persist\n        this.shiftWidgets();\n\n        this.setDashboardHeight();\n    }\n/**\n * @return {?}\n */\ngetRowHeight(): number {\n        return this._rowHeight;\n    }\n/**\n * @return {?}\n */\ncacheWidgets(): void {\n        this._cache = this.widgets.map(widget => ({ id: widget.id, column: widget.getColumn(), row: widget.getRow() }));\n    }\n/**\n * @param {?=} ignoreActionWidget\n * @return {?}\n */\nrestoreWidgets(ignoreActionWidget: boolean = false): void {\n        this._cache.filter(widget => !ignoreActionWidget || widget.id !== this._actionWidget.widget.id).forEach(widget => {\n\n            const /** @type {?} */ match = this.widgets.find(wgt => wgt.id === widget.id);\n\n            if (match) {\n                match.setColumn(widget.column);\n                match.setRow(widget.row);\n            }\n        });\n    }\n/**\n * When dragging any widgets that need to be moved should be moved to an appropriate position\n * @return {?}\n */\nshiftWidgets(): void {\n\n        let /** @type {?} */ widgetsToMove: DashboardWidgetComponent[] = [];\n\n        const /** @type {?} */ placeholder = this.placeholder$.getValue();\n\n        // check if there are any widgets under the placeholder\n        for (let /** @type {?} */ row = placeholder.row; row < placeholder.row + placeholder.rowSpan; row++) {\n            for (let /** @type {?} */ column = placeholder.column; column < placeholder.column + placeholder.columnSpan; column++) {\n\n                // store reference to any widgets that need moved\n                this.getOccupiedSpaces()\n                    .filter(space => space.column === column && space.row === row && space.widget !== this._actionWidget.widget)\n                    .forEach(space => widgetsToMove.push(space.widget));\n            }\n        }\n\n        // remove any duplicates\n        widgetsToMove = widgetsToMove.filter((widget, idx, array) => array.indexOf(widget) === idx);\n\n        // if no widgets need moved then we can stop here\n        if (widgetsToMove.length === 0) {\n            return;\n        }\n\n        // create a duplicate we can use to keep track of which have been moved\n        const /** @type {?} */ unmovedWidgets = widgetsToMove.slice();\n\n        // attempt to move any widgets to the previous widget position\n        widgetsToMove.forEach(widget => {\n\n            // get a grid off all occupied spaces - taking into account the placeholder and ignoring widgets that need moved\n            const /** @type {?} */ grid = this.getOccupiedSpaces().filter(space => !unmovedWidgets.find(wgt => wgt === space.widget));\n\n            // iterate each free block\n            for (let /** @type {?} */ row = this._widgetOrigin.row; row < this._widgetOrigin.row + this._widgetOrigin.rowSpan; row++) {\n                for (let /** @type {?} */ column = this._widgetOrigin.column; column < this._widgetOrigin.column + this._widgetOrigin.columnSpan; column++) {\n\n                    // determine if the block can fit in this space\n                    let /** @type {?} */ requiredSpaces = this.getRequiredSpacesFromPoint(widget, column, row);\n\n                    // check if widget would fit in space\n                    let /** @type {?} */ available = requiredSpaces.every(space => {\n                        return !grid.find(gridSpace => gridSpace.column === space.column && gridSpace.row === space.row) && space.column < this.getColumnCount();\n                    });\n\n                    if (available) {\n                        widget.setColumn(column);\n                        widget.setRow(row);\n                        unmovedWidgets.splice(unmovedWidgets.findIndex(wgt => wgt === widget), 1);\n                        return;\n                    }\n                }\n            }\n\n            // if we get to here then we can't simply swap the positions - next try moving right\n            if (this.canWidgetMoveRight(widget, true)) {\n\n                // after the shift check if placeholder position is still valid\n                this.validatePlaceholderPosition(ActionDirection.Right);\n                return;\n            }\n\n            // next try moving left\n            if (this.canWidgetMoveLeft(widget, true)) {\n\n                // after the shift check if placeholder position is still valid\n                this.validatePlaceholderPosition(ActionDirection.Left);\n                return;\n            }\n\n            // determine the distance that the widget needs to be moved down\n            let /** @type {?} */ distance = (this._actionWidget.widget.getRow() - widget.getRow()) + this._actionWidget.widget.getRowSpan();\n\n            // as a last resort move the widget downwards\n            this.moveWidgetDown(widget, distance);\n        });\n    }\n/**\n * After shifts have taken place we should verify the place holder position is still valid\n * @param {?} shiftDirection - the position widgets were shifted\n * @return {?}\n */\nvalidatePlaceholderPosition(shiftDirection: ActionDirection) {\n\n        const /** @type {?} */ placeholder = this.placeholder$.getValue();\n\n        // check if the placeholder is over a widget\n        if (this.getWidgetsAtPosition(placeholder.column, placeholder.row, true).length > 0) {\n\n            // move the placeholder the opposite direction\n            switch (shiftDirection) {\n\n                case ActionDirection.Left:\n                    this.setPlaceholderBounds(placeholder.visible, placeholder.x + this.getColumnWidth(), placeholder.y, placeholder.width, placeholder.height);\n                    break;\n\n                case ActionDirection.Right:\n                    this.setPlaceholderBounds(placeholder.visible, placeholder.x - this.getColumnWidth(), placeholder.y, placeholder.width, placeholder.height);\n                    break;\n            }\n\n            // validate this new position again\n            this.validatePlaceholderPosition(shiftDirection);\n        }\n    }\n/**\n * Determine if a widget can be moved left - or if it can move the widgets to the right to make space for the widget\n * @param {?} widget\n * @param {?=} performMove\n * @return {?}\n */\ncanWidgetMoveLeft(widget: DashboardWidgetComponent, performMove: boolean = false): boolean {\n\n        // check if the widget is the action widget or occupies the first column\n        if (widget === this._actionWidget.widget || widget.getColumn() === 0) {\n            return false;\n        }\n\n        // find the positions required\n        const /** @type {?} */ targetSpaces = this.getOccupiedSpaces().filter(space => space.widget === widget).map(space => {\n            return { column: space.column - widget.getColumnSpan(), row: space.row, widget: space.widget };\n        });\n\n        // check if there are widget in the required positions and if so, can they move right?\n        const /** @type {?} */ moveable = targetSpaces.every(space => this.getWidgetsAtPosition(space.column, space.row).filter(wgt => wgt !== space.widget).every(wgt => this.canWidgetMoveLeft(wgt)));\n\n        if (performMove && moveable) {\n\n            // move all widgets to the right\n            targetSpaces.forEach(space => this.getWidgetsAtPosition(space.column, space.row).filter(wgt => wgt !== space.widget).forEach(wgt => this.canWidgetMoveLeft(wgt, true)));\n\n            // move current widget to the right\n            widget.setColumn(widget.getColumn() - 1);\n        }\n\n        return moveable;\n    }\n/**\n * Determine if a widget can be moved right - or if it can move the widgets to the right to make space for the widget\n * @param {?} widget\n * @param {?=} performMove\n * @return {?}\n */\ncanWidgetMoveRight(widget: DashboardWidgetComponent, performMove: boolean = false): boolean {\n\n        // check if the widget is the dragging widget or the widget occupies the final column\n        if (widget === this._actionWidget.widget || widget.getColumn() + widget.getColumnSpan() === this.options.columns) {\n            return false;\n        }\n\n        // find the positions required\n        const /** @type {?} */ targetSpaces = this.getOccupiedSpaces().filter(space => space.widget === widget).map(space => {\n            return { column: space.column + widget.getColumnSpan(), row: space.row, widget: space.widget };\n        });\n\n        // check if there are widget in the required positions and if so, can they move right?\n        const /** @type {?} */ moveable = targetSpaces.every(space => this.getWidgetsAtPosition(space.column, space.row).filter(wgt => wgt !== space.widget).every(wgt => this.canWidgetMoveRight(wgt)));\n\n        if (performMove && moveable) {\n\n            // move all widgets to the right\n            targetSpaces.forEach(space => this.getWidgetsAtPosition(space.column, space.row).filter(wgt => wgt !== space.widget).forEach(wgt => this.canWidgetMoveRight(wgt, true)));\n\n            // move current widget to the right\n            widget.setColumn(widget.getColumn() + 1);\n        }\n\n        return moveable;\n    }\n/**\n * Store the initial position of the widget being dragged\n * @return {?}\n */\nsetWidgetOrigin(): void {\n        this._widgetOrigin = {\n            column: this._actionWidget.widget.getColumn(),\n            row: this._actionWidget.widget.getRow(),\n            columnSpan: this._actionWidget.widget.getColumnSpan(),\n            rowSpan: this._actionWidget.widget.getRowSpan()\n        };\n    }\n/**\n * Calculate all the required positions is a widget was to be positioned at a particular point\n * @param {?} widget\n * @param {?} column\n * @param {?} row\n * @return {?}\n */\ngetRequiredSpacesFromPoint(widget: DashboardWidgetComponent, column: number, row: number): DashboardSpace[] {\n        const /** @type {?} */ spaces: DashboardSpace[] = [];\n\n        for (let /** @type {?} */ y = row; y < row + widget.getRowSpan(); y++) {\n            for (let /** @type {?} */ x = column; x < column + widget.getColumnSpan(); x++) {\n                spaces.push({ column: x, row: y, widget: widget });\n            }\n        }\n\n        return spaces;\n    }\n/**\n * Position widgets based on the position of the placeholder - this is temporary until confirmed\n * @param {?} widget\n * @return {?}\n */\nupdateWidgetPositions(widget: DashboardWidgetComponent) {\n\n        const /** @type {?} */ placeholder = this.placeholder$.getValue();\n\n        // check all spaces the placeholder will occupy and move any widget currently in them down\n        for (let /** @type {?} */ column = placeholder.column; column < placeholder.column + placeholder.columnSpan; column++) {\n            for (let /** @type {?} */ row = placeholder.row; row < placeholder.row + placeholder.rowSpan; row++) {\n\n                this.getWidgetsAtPosition(column, row, true)\n                    .filter(wgt => wgt !== widget)\n                    .forEach(wgt => this.moveWidgetDown(wgt));\n            }\n        }\n\n        // update the height of the dashboard\n        this.setDashboardHeight();\n\n        // if we arent dragging the top handle then fill spaces\n        if (this._actionWidget.direction !== ActionDirection.Top &&\n            this._actionWidget.direction !== ActionDirection.TopLeft &&\n            this._actionWidget.direction !== ActionDirection.TopRight) {\n            this.shiftWidgetsUp();\n        }\n    }\n/**\n * Determine if a widget is occupying a specific row and column\n * @param {?} column The columns to check if occupied\n * @param {?} row The row to check if occupied\n * @param {?=} ignoreResizing Whether or not to ignore the widget currently being resized\n * @return {?}\n */\ngetWidgetsAtPosition(column: number, row: number, ignoreResizing: boolean = false): DashboardWidgetComponent[] {\n        return this.getOccupiedSpaces()\n            .filter(space => space.column === column && space.row === row)\n            .filter(space => space.widget !== this._actionWidget.widget || !ignoreResizing)\n            .map(space => space.widget);\n    }\n/**\n * Update the placeholder visibility, position and size\n * @param {?} visible\n * @param {?} x\n * @param {?} y\n * @param {?} width\n * @param {?} height\n * @return {?}\n */\nsetPlaceholderBounds(visible: boolean, x: number, y: number, width: number, height: number): void {\n\n        const /** @type {?} */ placeholder = this.placeholder$.getValue();\n\n        const /** @type {?} */ rounding = this._actionWidget.direction === ActionDirection.Left ||\n            this._actionWidget.direction === ActionDirection.Top ? Rounding.RoundDownBelowHalf : Rounding.RoundUpOverHalf;\n\n        placeholder.visible = visible;\n\n        placeholder.column = this.getPlaceholderColumn(x, width);\n        placeholder.row = this.getPlaceholderRow(y, height);\n        placeholder.columnSpan = this.getPlaceholderColumnSpan(width);\n        placeholder.rowSpan = this.getPlaceholderRowSpan(height);\n\n        // calculate the maximum number of rows\n        const /** @type {?} */ rowCount = this.widgets.filter(widget => widget !== this._actionWidget.widget)\n            .reduce((previous, widget) => Math.max(widget.getRow() + widget.getRowSpan(), previous), 0);\n\n        // constrain maximum placeholder row\n        placeholder.row = Math.min(placeholder.row, rowCount);\n\n        placeholder.x = (placeholder.column * this.getColumnWidth()) + this.options.padding;\n        placeholder.y = (placeholder.row * this._rowHeight) + this.options.padding;\n        placeholder.width = (placeholder.columnSpan * this.getColumnWidth()) - (this.options.padding * 2);\n        placeholder.height = (placeholder.rowSpan * this._rowHeight) - (this.options.padding * 2);\n\n        // set the values of the widget to match the values of the placeholder - however do not render the changes\n        this._actionWidget.widget.setColumn(placeholder.column, false);\n        this._actionWidget.widget.setRow(placeholder.row, false);\n        this._actionWidget.widget.setColumnSpan(placeholder.columnSpan, false);\n        this._actionWidget.widget.setRowSpan(placeholder.rowSpan, false);\n\n        // update the placeholder\n        this.placeholder$.next(placeholder);\n    }\n/**\n * Get the placeholder column position\n * @param {?} x\n * @param {?} width\n * @return {?}\n */\ngetPlaceholderColumn(x: number, width: number): number {\n\n        const /** @type {?} */ column = this.getColumnFromPx(x, this._actionWidget.direction === ActionDirection.Move ? Rounding.RoundUpOverHalf : Rounding.RoundDown);\n        const /** @type {?} */ columnSpan = Math.floor(width / this.getColumnWidth());\n        const /** @type {?} */ upperLimit = this.getColumnCount() - columnSpan;\n\n        // if we arent dragging left then just return the column\n        if (this._actionWidget.direction !== ActionDirection.Left &&\n            this._actionWidget.direction !== ActionDirection.TopLeft &&\n            this._actionWidget.direction !== ActionDirection.BottomLeft) {\n            return Math.max(Math.min(column, upperLimit), 0);\n        }\n\n        // get any overflow\n        const /** @type {?} */ overflow = width % this.getColumnWidth();\n\n        return (x <= 0 || overflow === 0 || columnSpan === 0 || overflow > (this.getColumnWidth() / 2)) ?\n            Math.max(Math.min(column, upperLimit), 0) :\n            Math.max(Math.min(column + 1, upperLimit), 0);\n    }\n/**\n * Get the column span of the placeholder\n * @param {?} width\n * @return {?}\n */\ngetPlaceholderColumnSpan(width: number): number {\n\n        const /** @type {?} */ columnSpan = this.getColumnFromPx(width);\n\n        // if we arent dragging right or left then just return the column span\n        if (this._actionWidget.direction !== ActionDirection.Right &&\n            this._actionWidget.direction !== ActionDirection.TopRight &&\n            this._actionWidget.direction !== ActionDirection.BottomRight &&\n            this._actionWidget.direction !== ActionDirection.Left &&\n            this._actionWidget.direction !== ActionDirection.TopLeft &&\n            this._actionWidget.direction !== ActionDirection.BottomLeft) {\n            return Math.max(columnSpan, 1);\n        }\n\n        // get the current column span and any overflow\n        const /** @type {?} */ overflow = width % this.getColumnWidth();\n\n        return (columnSpan > 0 && overflow > (this.getColumnWidth() / 2)) ? Math.max(columnSpan + 1, 1) : Math.max(columnSpan, 1);\n    }\n/**\n * Get the row position of the placeholder\n * @param {?} y\n * @param {?} height\n * @return {?}\n */\ngetPlaceholderRow(y: number, height: number): number {\n\n        const /** @type {?} */ row = this.getRowFromPx(y, this._actionWidget.direction === ActionDirection.Move ? Rounding.RoundUpOverHalf : Rounding.RoundDown);\n        const /** @type {?} */ rowSpan = Math.ceil(height / this._rowHeight);\n\n        // if we arent dragging up then just return the row\n        if (this._actionWidget.direction !== ActionDirection.Top &&\n            this._actionWidget.direction !== ActionDirection.TopLeft &&\n            this._actionWidget.direction !== ActionDirection.TopRight) {\n            return Math.max(row, 0);\n        }\n\n        // get any overflow\n        let /** @type {?} */ overflow = height < this._rowHeight ? 0 : height % this._rowHeight;\n\n        return (y <= 0 || rowSpan === 0 || overflow === 0 || overflow > (this._rowHeight / 2)) ? Math.max(row, 0) : Math.max(row + 1, 0);\n    }\n/**\n * Get the row span of the placeholder\n * @param {?} height\n * @return {?}\n */\ngetPlaceholderRowSpan(height: number): number {\n\n        const /** @type {?} */ rowSpan = this.getRowFromPx(height);\n\n        // if we arent dragging up or down then just return the column span\n        if (this._actionWidget.direction !== ActionDirection.Top &&\n            this._actionWidget.direction !== ActionDirection.TopLeft &&\n            this._actionWidget.direction !== ActionDirection.TopRight &&\n            this._actionWidget.direction !== ActionDirection.Bottom &&\n            this._actionWidget.direction !== ActionDirection.BottomLeft &&\n            this._actionWidget.direction !== ActionDirection.BottomRight) {\n            return Math.max(rowSpan, 1);\n        }\n\n        // get the current column span and any overflow\n        const /** @type {?} */ overflow = height % this._rowHeight;\n\n        return (overflow > (this._rowHeight / 2)) ? Math.max(rowSpan + 1, 1) : Math.max(rowSpan, 1);\n    }\n/**\n * @param {?} x\n * @param {?=} rounding\n * @return {?}\n */\ngetColumnFromPx(x: number, rounding: Rounding = Rounding.RoundDown): number {\n\n        const /** @type {?} */ column = Math.floor(x / Math.floor(this.getColumnWidth()));\n        const /** @type {?} */ overflow = (x % Math.floor(this.getColumnWidth()));\n        const /** @type {?} */ half = this.getColumnWidth() / 2;\n\n        switch (rounding) {\n\n            case Rounding.RoundDown:\n                return column;\n\n            case Rounding.RoundDownBelowHalf:\n                return overflow < half ? column : column + 1;\n\n            case Rounding.RoundUpOverHalf:\n                return overflow > half ? column + 1 : column;\n\n            case Rounding.RoundUp:\n                return overflow > 0 ? column + 1 : column;\n        }\n\n    }\n/**\n * @param {?} y\n * @param {?=} rounding\n * @return {?}\n */\ngetRowFromPx(y: number, rounding: Rounding = Rounding.RoundDown): number {\n\n        const /** @type {?} */ row = Math.floor(y / Math.floor(this._rowHeight));\n        const /** @type {?} */ overflow = (y % Math.floor(this._rowHeight));\n        const /** @type {?} */ half = this._rowHeight / 2;\n\n        switch (rounding) {\n\n            case Rounding.RoundDown:\n                return row;\n\n            case Rounding.RoundDownBelowHalf:\n                return overflow < half ? row : row + 1;\n\n            case Rounding.RoundUpOverHalf:\n                return overflow > half ? row + 1 : row;\n\n            case Rounding.RoundUp:\n                return overflow > 0 ? row + 1 : row;\n        }\n    }\n/**\n * @return {?}\n */\ncommitWidgetChanges(): void {\n\n        const /** @type {?} */ placeholder = this.placeholder$.getValue();\n\n        // check that we have all the values we need\n        if (placeholder.column === undefined || placeholder.row === undefined ||\n            placeholder.columnSpan === undefined || placeholder.rowSpan === undefined) {\n            return;\n        }\n\n        if (this._actionWidget) {\n            this._actionWidget.widget.setColumn(placeholder.column);\n            this._actionWidget.widget.setRow(placeholder.row);\n            this._actionWidget.widget.setColumnSpan(placeholder.columnSpan);\n            this._actionWidget.widget.setRowSpan(placeholder.rowSpan);\n        }\n\n        // reset all placeholder values\n        placeholder.column = undefined;\n        placeholder.row = undefined;\n        placeholder.columnSpan = undefined;\n        placeholder.rowSpan = undefined;\n\n        // emit the new placeholder values\n        this.placeholder$.next(placeholder);\n    }\n/**\n * Get the current column width\n * @return {?}\n */\ngetColumnWidth(): number {\n        return Math.floor(this.columnWidth);\n    }\n/**\n * Calculate the number of rows populated with widgets\n * @return {?}\n */\ngetRowCount(): number {\n        return this.widgets.reduce((previous, widget) => Math.max(widget.getRow() + widget.getRowSpan(), previous), 0);\n    }\n/**\n * Set the height of the dashboard container element\n * @return {?}\n */\nsetDashboardHeight(): void {\n\n        // size the dashboard container to ensure all rows fit\n        let /** @type {?} */ rowCount = this.getRowCount();\n\n        // if we should show an empty row increment the row count by 1\n        if (this.options.emptyRow) {\n            rowCount++;\n        }\n\n        this.setDimensions(undefined, rowCount * this._rowHeight);\n    }\n/**\n * Orders the z-index of all widgets to move the active one to the front\n * @param {?} widget The widget that should be brought to the front\n * @return {?}\n */\nbringToFront(widget: DashboardWidgetComponent): void {\n        this.widgets.forEach(_widget => _widget === widget ? _widget.bringToFront() : _widget.sendToBack());\n    }\n/**\n * Move a widget down - if widgets are in the position below, then move them down further\n * @param {?} widget The widget to move downwards\n * @param {?=} distance\n * @return {?}\n */\nmoveWidgetDown(widget: DashboardWidgetComponent, distance: number = 1): void {\n\n        // move the widget down one position\n        widget.setRow(widget.getRow() + distance);\n\n        // check every space the widget occupies for collisions\n        this.forEachBlock(widget, (column, row) =>\n            this.getWidgetsAtPosition(column, row, true)\n                .filter(wgt => wgt !== widget)\n                .forEach(wgt => this.moveWidgetDown(wgt, distance)));\n    }\n/**\n * Widgets should not be allowed to have a vacant space above them - if there is one they should move upwards to fill it\n * @return {?}\n */\nshiftWidgetsUp(): void {\n\n        // check whether or not changes have been made - if so we need to repeat until stable\n        let /** @type {?} */ stable = true;\n\n        // iterate each widget and \n        this.widgets.forEach(widget => {\n\n            // if widget is already on the top row then do nothing\n            if (widget.getRow() === 0) {\n                return;\n            }\n\n            // if we are currently dragging and this is the dragging widget then skip\n            if (this._actionWidget && this._actionWidget.widget === widget) {\n                return;\n            }\n\n            if (this.getPositionAvailable(widget.getColumn(), widget.getRow() - 1, widget.getColumnSpan(), 1)) {\n                widget.setRow(widget.getRow() - 1);\n                stable = false;\n            }\n        });\n\n        // if changes occurred then we should repeat the process\n        if (!stable) {\n            this.shiftWidgetsUp();\n        }\n    }\n/**\n * Iterate over each space a widget occupied\n * @param {?} widget The widget to determine spaces\n * @param {?} callback The function to be called for each space, should expect a column and row argument witht he context being the widget\n * @return {?}\n */\nforEachBlock(widget: DashboardWidgetComponent, callback: (column: number, row: number) => void): void {\n        for (let /** @type {?} */ row = widget.getRow(); row < widget.getRow() + widget.getRowSpan(); row++) {\n            for (let /** @type {?} */ column = widget.getColumn(); column < widget.getColumn() + widget.getColumnSpan(); column++) {\n                callback.call(widget, column, row);\n            }\n        }\n    }\n/**\n * Returns the number of columns available\n * @return {?}\n */\ngetColumnCount(): number {\n        return this.stacked ? 1 : this.options.columns;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction DashboardService_tsickle_Closure_declarations() {\n/** @type {?} */\nDashboardService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDashboardService.ctorParameters;\n/** @type {?} */\nDashboardService.prototype._dashboard;\n/** @type {?} */\nDashboardService.prototype._widgetOrigin;\n/** @type {?} */\nDashboardService.prototype._actionWidget;\n/** @type {?} */\nDashboardService.prototype._rowHeight;\n/** @type {?} */\nDashboardService.prototype._cache;\n/** @type {?} */\nDashboardService.prototype._mouseEvent;\n/** @type {?} */\nDashboardService.prototype.widgets$;\n/** @type {?} */\nDashboardService.prototype.options$;\n/** @type {?} */\nDashboardService.prototype.dimensions$;\n/** @type {?} */\nDashboardService.prototype.height$;\n/** @type {?} */\nDashboardService.prototype.placeholder$;\n/** @type {?} */\nDashboardService.prototype.layout$;\n/** @type {?} */\nDashboardService.prototype.stacked$;\n}\n\n\nexport const /** @type {?} */ defaultOptions: DashboardOptions = { columns: 5, padding: 5, minWidth: 100, minHeight: 100, emptyRow: true };\n\nexport interface DashboardDimensions {\n    width?: number;\n    height?: number;\n}\n\nexport interface DashboardWidgetDimensions {\n    x: number;\n    y: number;\n    width: number;\n    height: number;\n}\n\nexport interface DashboardAction {\n    widget: DashboardWidgetComponent;\n    direction: ActionDirection;\n    event: MouseEvent;\n    handle?: HTMLElement;\n}\n\nexport interface DashboardSpace {\n    widget: DashboardWidgetComponent;\n    column: number;\n    row: number;\n}\n\nexport interface DashboardPlaceholder {\n    visible: boolean;\n    x: number;\n    y: number;\n    width: number;\n    height: number;\n    column?: number;\n    row?: number;\n    columnSpan?: number;\n    rowSpan?: number;\n}\n\nexport interface DashboardCache {\n    id: string;\n    column: number;\n    row: number;\n}\n\nexport interface DashboardLayoutData {\n    id: string;\n    col: number;\n    row: number;\n    colSpan: number;\n    rowSpan: number;\n}\nexport type ActionDirection = number;\nexport let ActionDirection: any = {};\nActionDirection.Top = 0;\nActionDirection.TopRight = 1;\nActionDirection.Right = 2;\nActionDirection.BottomRight = 3;\nActionDirection.Bottom = 4;\nActionDirection.BottomLeft = 5;\nActionDirection.Left = 6;\nActionDirection.TopLeft = 7;\nActionDirection.Move = 8;\nActionDirection[ActionDirection.Top] = \"Top\";\nActionDirection[ActionDirection.TopRight] = \"TopRight\";\nActionDirection[ActionDirection.Right] = \"Right\";\nActionDirection[ActionDirection.BottomRight] = \"BottomRight\";\nActionDirection[ActionDirection.Bottom] = \"Bottom\";\nActionDirection[ActionDirection.BottomLeft] = \"BottomLeft\";\nActionDirection[ActionDirection.Left] = \"Left\";\nActionDirection[ActionDirection.TopLeft] = \"TopLeft\";\nActionDirection[ActionDirection.Move] = \"Move\";\n\nexport type Rounding = number;\nexport let Rounding: any = {};\nRounding.RoundDown = 0;\nRounding.RoundDownBelowHalf = 1;\nRounding.RoundUp = 2;\nRounding.RoundUpOverHalf = 3;\nRounding[Rounding.RoundDown] = \"RoundDown\";\nRounding[Rounding.RoundDownBelowHalf] = \"RoundDownBelowHalf\";\nRounding[Rounding.RoundUp] = \"RoundUp\";\nRounding[Rounding.RoundUpOverHalf] = \"RoundUpOverHalf\";\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Input, ElementRef, AfterViewInit, EventEmitter, Output, ViewChild, ChangeDetectionStrategy } from '@angular/core';\nimport { DashboardService, DashboardLayoutData, DashboardPlaceholder, defaultOptions } from './dashboard.service';\nimport { ResizeDimensions } from '../../directives/resize/resize.service';\nexport class DashboardComponent implements AfterViewInit {\n/**\n * @param {?} layout\n * @return {?}\n */\nset layout(layout: DashboardLayoutData[]) {\n        if (layout) {\n            this.dashboardService.layout$.next(layout);\n        }\n    }\n/**\n * @param {?} options\n * @return {?}\n */\nset options(options: DashboardOptions) {\n        this.dashboardService.options$.next({ ...defaultOptions, ...options });\n    }\n    \n     layoutChange = new EventEmitter<DashboardLayoutData[]>();\n\n     dashboardElement: ElementRef;\n/**\n * @param {?} dashboardService\n */\nconstructor(public dashboardService: DashboardService) {\n        dashboardService.layout$.subscribe(layout => this.layoutChange.emit(layout));\n    }\n/**\n * Set the initial dimensions\n * @return {?}\n */\nngAfterViewInit(): void {\n        this.dashboardService.setDashboard(this.dashboardElement.nativeElement);\n        this.dashboardService.setDimensions(this.dashboardElement.nativeElement.offsetWidth, this.dashboardElement.nativeElement.offsetHeight);\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nonResize(event: ResizeDimensions): void {\n        this.dashboardService.setDimensions(event.width, event.height);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-dashboard',\n    template: `\n      <div #dashboard class=\"dashboard-container\" [style.height.px]=\"dashboardService.height$ | async\">\n          <div (uxResize)=\"onResize($event)\" [throttle]=\"16\" class=\"dashboard\">\n              <ng-content></ng-content>\n          </div>\n    \n          <div class=\"position-indicator\" *ngIf=\"(dashboardService.placeholder$ | async).visible\" \n              [style.left.px]=\"(dashboardService.placeholder$ | async).x\" \n              [style.top.px]=\"(dashboardService.placeholder$ | async).y\" \n              [style.width.px]=\"(dashboardService.placeholder$ | async).width\"\n              [style.height.px]=\"(dashboardService.placeholder$ | async).height\"></div>\n      </div>\n    `,\n    providers: [DashboardService],\n    changeDetection: ChangeDetectionStrategy.OnPush\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: DashboardService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'layout': [{ type: Input },],\n'options': [{ type: Input },],\n'layoutChange': [{ type: Output },],\n'dashboardElement': [{ type: ViewChild, args: ['dashboard', ] },],\n};\n}\n\nfunction DashboardComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nDashboardComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDashboardComponent.ctorParameters;\n/** @type {?} */\nDashboardComponent.propDecorators;\n/** @type {?} */\nDashboardComponent.prototype.layoutChange;\n/** @type {?} */\nDashboardComponent.prototype.dashboardElement;\n/** @type {?} */\nDashboardComponent.prototype.dashboardService;\n}\n\n\nexport interface DashboardOptions {\n    columns?: number;\n    padding?: number;\n    minWidth?: number;\n    minHeight?: number;\n    rowHeight?: number;\n    emptyRow?: boolean;\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Input, OnInit, OnDestroy, HostBinding, AfterViewInit } from '@angular/core';\nimport { DashboardService, ActionDirection } from '../dashboard.service';\nimport { Subscription } from 'rxjs/Subscription';\nexport class DashboardWidgetComponent implements OnInit, AfterViewInit, OnDestroy {\n\n     id: string;\n     col: number;\n     row: number;\n     colSpan: number = 1;\n     rowSpan: number = 1;\n     resizable: boolean = false;\n\n     x: number = 0;\n     y: number = 0;\n     width: number = 100;\n     height: number = 100;\n     padding: number = 0;\n     zIndex: number = 0;\nprivate _column: StackableValue = { regular: undefined, stacked: undefined };\nprivate _row: StackableValue = { regular: undefined, stacked: undefined };\nprivate _columnSpan: StackableValue = { regular: 1, stacked: 1 };\nprivate _rowSpan: StackableValue = { regular: 1, stacked: 1 };\nprivate _subscription: Subscription;\n/**\n * @param {?} dashboardService\n */\nconstructor(public dashboardService: DashboardService) {\n        this._subscription = dashboardService.options$.subscribe(() => this.update());\n    }\n/**\n * @return {?}\n */\nngOnInit(): void {\n\n        this._columnSpan.regular = this.colSpan;\n        this._rowSpan.regular = this.rowSpan;\n\n        if (!this.id) {\n            console.warn('Dashboard Widget is missing an ID.');\n\n            // set random id - keeps things working but prevents exporting of positions\n            this.id = Math.floor(Math.random() * 100000).toString();\n        }\n    }\n/**\n * @return {?}\n */\nngAfterViewInit(): void {\n        // add the widget to the dashboard\n        this.dashboardService.addWidget(this);\n\n        // apply the current options\n        this.update();\n    }\n/**\n * If component is removed, then unregister it from the service\n * @return {?}\n */\nngOnDestroy(): void {\n        this._subscription.unsubscribe();\n        this.dashboardService.removeWidget(this);\n    }\n/**\n * Apply the current dashboard options\n * @return {?}\n */\nupdate(): void {\n\n        // get the current options at the time \n        const { padding, columns } = this.dashboardService.options;\n\n        this.padding = padding;\n        this._columnSpan.stacked = columns;\n    }\n/**\n * Set the actual position and size values\n * @return {?}\n */\nrender(): void {\n        this.x = this.getColumn() * this.dashboardService.getColumnWidth();\n        this.y = this.getRow() * this.dashboardService.getRowHeight();\n        this.width = this.getColumnSpan() * this.dashboardService.getColumnWidth();\n        this.height = this.getRowSpan() * this.dashboardService.getRowHeight();\n    }\n/**\n * @return {?}\n */\ngetColumn(): number {\n        return this.getStackableValue(this._column);\n    }\n/**\n * @return {?}\n */\ngetRow(): number {\n        return this.getStackableValue(this._row);\n    }\n/**\n * @param {?} column\n * @param {?=} render\n * @return {?}\n */\nsetColumn(column: number, render: boolean = true): void {\n        this.setStackableValue(this._column, column);\n\n        if (render) {\n            this.render();\n        }\n    }\n/**\n * @param {?} row\n * @param {?=} render\n * @return {?}\n */\nsetRow(row: number, render: boolean = true): void {\n        this.setStackableValue(this._row, row);\n\n        if (render) {\n            this.render();\n        }\n    }\n/**\n * @return {?}\n */\ngetColumnSpan(): number {\n        return this.getStackableValue(this._columnSpan);\n    }\n/**\n * @return {?}\n */\ngetRowSpan(): number {\n        return this.getStackableValue(this._rowSpan);\n    }\n/**\n * @param {?} columnSpan\n * @param {?=} render\n * @return {?}\n */\nsetColumnSpan(columnSpan: number, render: boolean = true): void {\n        this.setStackableValue(this._columnSpan, columnSpan);\n\n        if (render) {\n            this.render();\n        }\n    }\n/**\n * @param {?} rowSpan\n * @param {?=} render\n * @return {?}\n */\nsetRowSpan(rowSpan: number, render: boolean = true): void {\n        this.setStackableValue(this._rowSpan, rowSpan);\n\n        if (render) {\n            this.render();\n        }\n    }\n/**\n * @return {?}\n */\nbringToFront(): void {\n        this.zIndex = 1;\n    }\n/**\n * @return {?}\n */\nsendToBack(): void {\n        this.zIndex = 0;\n    }\n/**\n * @param {?} x\n * @param {?} y\n * @param {?} width\n * @param {?} height\n * @return {?}\n */\nsetBounds(x: number, y: number, width: number, height: number): void {\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n    }\n/**\n * @param {?} handle\n * @param {?} event\n * @param {?} direction\n * @return {?}\n */\ndragstart(handle: HTMLElement, event: MouseEvent, direction: ActionDirection): void {\n        this.dashboardService.onResizeStart({ widget: this, direction: direction, event: event, handle: handle });\n    }\n/**\n * @param {?} handle\n * @param {?} event\n * @param {?} direction\n * @return {?}\n */\ndrag(handle: HTMLElement, event: MouseEvent, direction: ActionDirection): void {\n        this.dashboardService.onResizeDrag({ widget: this, direction: direction, event: event, handle: handle });\n    }\n/**\n * @return {?}\n */\ndragend(): void {\n        this.dashboardService.onResizeEnd();\n    }\n/**\n * Allows automatic setting of stackable value\n * @param {?} property The current StackableValue object\n * @param {?} value The value to set in the appropriate field\n * @return {?}\n */\nprivate setStackableValue(property: StackableValue, value: number): void {\n\n        if (this.dashboardService.stacked) {\n            property.stacked = value;\n        } else {\n            property.regular = value;\n        }\n    }\n/**\n * Return the appropriate value from a stackable value\n * @param {?} property The Stackable value object\n * @return {?}\n */\nprivate getStackableValue(property: StackableValue): number {\n        return this.dashboardService.stacked ? property.stacked : property.regular;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-dashboard-widget',\n    template: `\n      <div class=\"widget-content widget-col-span-{{ getColumnSpan() }} widget-row-span-{{ getRowSpan() }}\">\n          <ng-content></ng-content>\n      </div>\n\n      <div uxDrag #handleTop class=\"resizer-handle handle-top\" \n          (dragstart)=\"dragstart(handleTop, $event, 0)\"\n          (drag)=\"drag(handleTop, $event, 0)\"\n          (dragend)=\"dragend()\"\n          [style.top.px]=\"padding\" \n          [hidden]=\"!resizable\">\n      </div>\n\n      <div uxDrag #handleTopRight class=\"resizer-handle handle-top-right\" \n          (dragstart)=\"dragstart(handleTopRight, $event, 1)\"\n          (drag)=\"drag(handleTopRight, $event, 1)\"\n          (dragend)=\"dragend()\"\n          [style.top.px]=\"padding\" \n          [style.right.px]=\"padding\" \n          [hidden]=\"!resizable && !(dashboardService.stacked$ | async)\">\n      </div>\n\n      <div uxDrag #handleRight class=\"resizer-handle handle-right\" \n          (dragstart)=\"dragstart(handleRight, $event, 2)\"\n          (drag)=\"drag(handleRight, $event, 2)\"\n          (dragend)=\"dragend()\"\n          [style.right.px]=\"padding\" \n          [hidden]=\"!resizable || (dashboardService.stacked$ | async)\">\n      </div>\n\n      <div uxDrag #handleBottomRight class=\"resizer-handle handle-bottom-right\" \n          (dragstart)=\"dragstart(handleBottomRight, $event, 3)\"\n          (drag)=\"drag(handleBottomRight, $event, 3)\"\n          (dragend)=\"dragend()\"\n          [style.bottom.px]=\"padding\" \n          [style.right.px]=\"padding\" \n          [hidden]=\"!resizable && !(dashboardService.stacked$ | async)\">\n      </div>\n\n      <div uxDrag #handleBottom class=\"resizer-handle handle-bottom\" \n          (dragstart)=\"dragstart(handleBottom, $event, 4)\"\n          (drag)=\"drag(handleBottom, $event, 4)\"\n          (dragend)=\"dragend()\"\n          [style.bottom.px]=\"padding\" \n          [hidden]=\"!resizable\">\n      </div>\n\n      <div uxDrag #handleBottomLeft class=\"resizer-handle handle-bottom-left\" \n          (dragstart)=\"dragstart(handleBottomLeft, $event, 5)\"\n          (drag)=\"drag(handleBottomLeft, $event, 5)\"\n          (dragend)=\"dragend()\"\n          [style.bottom.px]=\"padding\" \n          [style.left.px]=\"padding\" \n          [hidden]=\"!resizable && !(dashboardService.stacked$ | async)\">\n      </div>\n\n      <div uxDrag #handleLeft class=\"resizer-handle handle-left\" \n          (dragstart)=\"dragstart(handleLeft, $event, 6)\"\n          (drag)=\"drag(handleLeft, $event, 6)\"\n          (dragend)=\"dragend()\"\n          [style.left.px]=\"padding\" \n          [hidden]=\"!resizable || (dashboardService.stacked$ | async)\">\n      </div>\n\n      <div uxDrag #handleTopLeft class=\"resizer-handle handle-top-left\" \n          (dragstart)=\"dragstart(handleTopLeft, $event, 7)\"\n          (drag)=\"drag(handleTopLeft, $event, 7)\"\n          (dragend)=\"dragend()\"\n          [style.top.px]=\"padding\" \n          [style.left.px]=\"padding\" \n          [hidden]=\"!resizable && !(dashboardService.stacked$ | async)\">\n      </div>\n    `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: DashboardService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'id': [{ type: Input },],\n'col': [{ type: Input },],\n'row': [{ type: Input },],\n'colSpan': [{ type: Input },],\n'rowSpan': [{ type: Input },],\n'resizable': [{ type: Input },],\n'x': [{ type: HostBinding, args: ['style.left.px', ] },],\n'y': [{ type: HostBinding, args: ['style.top.px', ] },],\n'width': [{ type: HostBinding, args: ['style.width.px', ] },],\n'height': [{ type: HostBinding, args: ['style.height.px', ] },],\n'padding': [{ type: HostBinding, args: ['style.padding.px', ] },],\n'zIndex': [{ type: HostBinding, args: ['style.z-index', ] },],\n};\n}\n\nfunction DashboardWidgetComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nDashboardWidgetComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDashboardWidgetComponent.ctorParameters;\n/** @type {?} */\nDashboardWidgetComponent.propDecorators;\n/** @type {?} */\nDashboardWidgetComponent.prototype.id;\n/** @type {?} */\nDashboardWidgetComponent.prototype.col;\n/** @type {?} */\nDashboardWidgetComponent.prototype.row;\n/** @type {?} */\nDashboardWidgetComponent.prototype.colSpan;\n/** @type {?} */\nDashboardWidgetComponent.prototype.rowSpan;\n/** @type {?} */\nDashboardWidgetComponent.prototype.resizable;\n/** @type {?} */\nDashboardWidgetComponent.prototype.x;\n/** @type {?} */\nDashboardWidgetComponent.prototype.y;\n/** @type {?} */\nDashboardWidgetComponent.prototype.width;\n/** @type {?} */\nDashboardWidgetComponent.prototype.height;\n/** @type {?} */\nDashboardWidgetComponent.prototype.padding;\n/** @type {?} */\nDashboardWidgetComponent.prototype.zIndex;\n/** @type {?} */\nDashboardWidgetComponent.prototype._column;\n/** @type {?} */\nDashboardWidgetComponent.prototype._row;\n/** @type {?} */\nDashboardWidgetComponent.prototype._columnSpan;\n/** @type {?} */\nDashboardWidgetComponent.prototype._rowSpan;\n/** @type {?} */\nDashboardWidgetComponent.prototype._subscription;\n/** @type {?} */\nDashboardWidgetComponent.prototype.dashboardService;\n}\n\n\nexport interface StackableValue {\n    regular: number;\n    stacked: number;\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, Output, EventEmitter, ElementRef, NgZone, OnDestroy, Input, HostListener } from '@angular/core';\nimport { fromEvent } from 'rxjs/observable/fromEvent';\nimport { Subscription } from 'rxjs/Subscription';\nimport { takeUntil } from 'rxjs/operators/takeUntil';\nexport class DragDirective implements OnDestroy {\n\n     dragstart = new EventEmitter<MouseEvent>();\n     drag = new EventEmitter<MouseEvent>();\n     dragend = new EventEmitter<void>();\nprivate _subscription: Subscription;\n/**\n * @param {?} elementRef\n * @param {?} ngZone\n */\nconstructor(elementRef: ElementRef, ngZone: NgZone) {\n        const mousedown$ = fromEvent<MouseEvent>(elementRef.nativeElement, 'mousedown');\n        const mousemove$ = fromEvent<MouseEvent>(document, 'mousemove');\n        const mouseup$ = fromEvent<MouseEvent>(document, 'mouseup');\n\n        this._subscription = mousedown$.subscribe(event => {\n            event.preventDefault();\n\n            // emit the drag start event \n            ngZone.run(() => this.dragstart.emit(event));\n\n            mousemove$.pipe(takeUntil<MouseEvent>(mouseup$)).subscribe(moveevent => {\n                moveevent.preventDefault();\n\n                // emit the drag start event \n                ngZone.run(() => this.drag.emit(moveevent));\n            }, null, \n            () => ngZone.run(() => this.dragend.emit()));\n        });\n    }\n/**\n * @return {?}\n */\nngOnDestroy(): void {\n        this._subscription.unsubscribe();\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{ \n    selector: '[uxDrag]' \n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: NgZone, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'dragstart': [{ type: Output },],\n'drag': [{ type: Output },],\n'dragend': [{ type: Output },],\n};\n}\n\nfunction DragDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nDragDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDragDirective.ctorParameters;\n/** @type {?} */\nDragDirective.propDecorators;\n/** @type {?} */\nDragDirective.prototype.dragstart;\n/** @type {?} */\nDragDirective.prototype.drag;\n/** @type {?} */\nDragDirective.prototype.dragend;\n/** @type {?} */\nDragDirective.prototype._subscription;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, NgZone, ElementRef } from '@angular/core';\n\nimport { DashboardWidgetComponent } from '../widget/dashboard-widget.component';\nimport { DashboardService, ActionDirection } from '../dashboard.service';\nimport { DragDirective } from '../../../directives/drag/drag.directive';\nexport class DashboardDragHandleDirective extends DragDirective {\n/**\n * @param {?} widget\n * @param {?} dashboardService\n * @param {?} elementRef\n * @param {?} ngZone\n */\nconstructor(widget: DashboardWidgetComponent, dashboardService: DashboardService, elementRef: ElementRef, ngZone: NgZone) {\n        super(elementRef, ngZone);\n\n        this.dragstart.subscribe((event: MouseEvent) => dashboardService.onDragStart({ widget: widget, direction: ActionDirection.Move, event: event }));\n        this.drag.subscribe((event: MouseEvent) => dashboardService.onDrag({ widget: widget, direction: ActionDirection.Move, event: event }));\n        this.dragend.subscribe(() => dashboardService.onDragEnd());\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: '[uxDashboardWidgetDragHandle], [ux-dashboard-widget-drag-handle]'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: DashboardWidgetComponent, },\n{type: DashboardService, },\n{type: ElementRef, },\n{type: NgZone, },\n];\n}\n\nfunction DashboardDragHandleDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nDashboardDragHandleDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDashboardDragHandleDirective.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\n\nimport { DragDirective } from './drag.directive';\nexport class DragModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    exports: [DragDirective],\n    declarations: [DragDirective]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction DragModule_tsickle_Closure_declarations() {\n/** @type {?} */\nDragModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDragModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DashboardComponent } from './dashboard.component';\nimport { DashboardWidgetComponent } from './widget/dashboard-widget.component';\nimport { DashboardService } from './dashboard.service';\nimport { DashboardDragHandleDirective } from './drag-handle/drag-handle.directive';\nimport { ResizeModule } from '../../directives/resize/index';\nimport { DragModule } from '../../directives/drag/index';\n\nconst /** @type {?} */ DECLARATIONS: any[] = [\n    DashboardComponent,\n    DashboardWidgetComponent,\n    DashboardDragHandleDirective\n];\nexport class DashboardModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        CommonModule,\n        ResizeModule,\n        DragModule\n    ],\n    exports: DECLARATIONS,\n    declarations: DECLARATIONS,\n    providers: [DashboardService],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction DashboardModule_tsickle_Closure_declarations() {\n/** @type {?} */\nDashboardModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDashboardModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output, ViewEncapsulation, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nexport const /** @type {?} */ SPIN_BUTTON_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => SpinButtonComponent),\n    multi: true\n};\nexport class SpinButtonComponent implements ControlValueAccessor {\n/**\n * @param {?} value\n * @return {?}\n */\nset value(value: any) {\n        this._value = value;\n        this.onChangeCallback(value);\n        this.onTouchedCallback();\n    }\n/**\n * @return {?}\n */\nget value(): any {\n        return this._value;\n    }\n\n     type: string = 'text';\n     min: number;\n     max: number;\n     placeholder: string = '';\n     disabled: boolean = false;\n     spinners: boolean = true;\n     readOnly: boolean = true;\n     scrolling: boolean = true;\n     arrowkeys: boolean = true;\n\n     incrementAriaLabel: string;\n     inputAriaLabel: string;\n     decrementAriaLabel: string;\n\n     valueChange = new EventEmitter<any>();\n\n     increment = new EventEmitter<void>();\n     decrement = new EventEmitter<void>();\n\n    onTouchedCallback: () => void = () => { };\n    onChangeCallback: (_: any) => void = () => { };\nprivate _value: any;\n/**\n * @param {?} event\n * @return {?}\n */\nscroll(event: WheelEvent): void {\n\n        if (!this.scrolling) {\n            return;\n        }\n\n        if (event.deltaY > 0) {\n            this.triggerDecrement();\n        } else {\n            this.triggerIncrement();\n        }\n\n        event.preventDefault();\n    }\n/**\n * @return {?}\n */\ntriggerIncrement(): void {\n        if (!this.disabled) {\n            this.increment.emit();\n        }\n    }\n/**\n * @return {?}\n */\ntriggerDecrement(): void {\n        if (!this.disabled) {\n            this.decrement.emit();\n        }\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nwriteValue(value: any): void {\n        this.value = value;\n    }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnChange(fn: (_: any) => void): void {\n        this.onChangeCallback = fn;\n    }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnTouched(fn: () => void): void {\n        this.onTouchedCallback = fn;\n    }\n/**\n * @param {?} isDisabled\n * @return {?}\n */\nsetDisabledState(isDisabled: boolean): void {\n        this.disabled = isDisabled;\n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-spin-button',\n    template: `\n      <button class=\"spin-button\"\n              *ngIf=\"spinners\"\n              tabindex=\"-1\"\n              [disabled]=\"disabled\"\n              [attr.aria-label]=\"incrementAriaLabel\"\n              [attr.aria-disabled]=\"disabled\"\n              (click)=\"triggerIncrement()\">\n\n        <span class=\"hpe-icon hpe-up\"></span>\n      </button>\n\n      <input [type]=\"type\"\n             role=\"spinbutton\"\n             [min]=\"min\"\n             [max]=\"max\"\n             [tabindex]=\"0\"\n             class=\"form-control\"\n             [placeholder]=\"placeholder\"\n             [readOnly]=\"readOnly\"\n             [disabled]=\"disabled\"\n             [attr.aria-label]=\"inputAriaLabel\"\n             [attr.aria-disabled]=\"disabled\"\n             [attr.aria-valuemin]=\"min\"\n             [attr.aria-valuenow]=\"value\"\n             [attr.aria-valuemax]=\"max\"\n             [attr.aria-readonly]=\"readOnly\"\n             [ngModel]=\"value\"\n             (ngModelChange)=\"valueChange.emit($event)\"\n             (wheel)=\"scroll($event)\"\n             (keydown.arrowup)=\"arrowkeys ? triggerIncrement() : null; $event.preventDefault()\"\n             (keydown.arrowdown)=\"arrowkeys ? triggerDecrement() : null; $event.preventDefault()\">\n\n      <button class=\"spin-button\"\n              *ngIf=\"spinners\"\n              tabindex=\"-1\"\n              [disabled]=\"disabled\"\n              [attr.aria-label]=\"decrementAriaLabel\"\n              [attr.aria-disabled]=\"disabled\"\n              (click)=\"triggerDecrement()\">\n\n        <span class=\"hpe-icon hpe-down\"></span>\n      </button>\n    `,\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [SPIN_BUTTON_VALUE_ACCESSOR]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'value': [{ type: Input },],\n'type': [{ type: Input },],\n'min': [{ type: Input },],\n'max': [{ type: Input },],\n'placeholder': [{ type: Input },],\n'disabled': [{ type: Input },],\n'spinners': [{ type: Input },],\n'readOnly': [{ type: Input },],\n'scrolling': [{ type: Input },],\n'arrowkeys': [{ type: Input },],\n'incrementAriaLabel': [{ type: Input },],\n'inputAriaLabel': [{ type: Input },],\n'decrementAriaLabel': [{ type: Input },],\n'valueChange': [{ type: Output },],\n'increment': [{ type: Output },],\n'decrement': [{ type: Output },],\n};\n}\n\nfunction SpinButtonComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nSpinButtonComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSpinButtonComponent.ctorParameters;\n/** @type {?} */\nSpinButtonComponent.propDecorators;\n/** @type {?} */\nSpinButtonComponent.prototype.type;\n/** @type {?} */\nSpinButtonComponent.prototype.min;\n/** @type {?} */\nSpinButtonComponent.prototype.max;\n/** @type {?} */\nSpinButtonComponent.prototype.placeholder;\n/** @type {?} */\nSpinButtonComponent.prototype.disabled;\n/** @type {?} */\nSpinButtonComponent.prototype.spinners;\n/** @type {?} */\nSpinButtonComponent.prototype.readOnly;\n/** @type {?} */\nSpinButtonComponent.prototype.scrolling;\n/** @type {?} */\nSpinButtonComponent.prototype.arrowkeys;\n/** @type {?} */\nSpinButtonComponent.prototype.incrementAriaLabel;\n/** @type {?} */\nSpinButtonComponent.prototype.inputAriaLabel;\n/** @type {?} */\nSpinButtonComponent.prototype.decrementAriaLabel;\n/** @type {?} */\nSpinButtonComponent.prototype.valueChange;\n/** @type {?} */\nSpinButtonComponent.prototype.increment;\n/** @type {?} */\nSpinButtonComponent.prototype.decrement;\n/** @type {?} */\nSpinButtonComponent.prototype.onTouchedCallback;\n/** @type {?} */\nSpinButtonComponent.prototype.onChangeCallback;\n/** @type {?} */\nSpinButtonComponent.prototype._value;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { SpinButtonComponent } from './spin-button.component';\nexport class SpinButtonModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        CommonModule,\n        FormsModule\n    ],\n    exports: [SpinButtonComponent],\n    declarations: [SpinButtonComponent]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction SpinButtonModule_tsickle_Closure_declarations() {\n/** @type {?} */\nSpinButtonModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSpinButtonModule.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nexport class TimeFormatPipe implements PipeTransform {\n/**\n * @param {?} value\n * @return {?}\n */\ntransform(value: number): string | number {\n    return value < 10 ? '0' + value : value;\n  }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Pipe, args: [{\n  name: 'timeFormat'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction TimeFormatPipe_tsickle_Closure_declarations() {\n/** @type {?} */\nTimeFormatPipe.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTimeFormatPipe.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, OnDestroy, Output, ViewEncapsulation, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { Observable } from 'rxjs/Observable';\nimport { Subscription } from 'rxjs/Subscription';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\nexport const /** @type {?} */ TIME_PICKER_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => TimePickerComponent),\n    multi: true\n};\nexport class TimePickerComponent implements ControlValueAccessor, OnDestroy {\n\n     arrowkeys: boolean = true;\n     mousewheel: boolean = true;\n     disabled: boolean = false;\n     readOnly: boolean = false;\n\n     showMeridian: boolean = false;\n     showHours: boolean = true;\n     showMinutes: boolean = true;\n     showSeconds: boolean = false;\n     showSpinners: boolean = true;\n\n     hourStep: number = 1;\n     minuteStep: number = 1;\n     secondStep: number = 1;\n\n     min: Date;\n     max: Date;\n     meridians: string[] = ['AM', 'PM'];\n/**\n * @param {?} value\n * @return {?}\n */\nset value(value: Date) {\n        this.value$.next(new Date(value));\n        this.valueChange.emit(this.value$.value);\n\n        this.onChangeCallback(this.value$.value);\n        this.onTouchedCallback();\n    }\n/**\n * @return {?}\n */\nget value(): Date {\n        return new Date(this.value$.value);\n    }\n\n     valueChange = new EventEmitter<Date>();\n     isValid = new EventEmitter<boolean>();\n\n    onTouchedCallback: () => void = () => { };\n    onChangeCallback: (_: Date) => void = () => { };\n\n    value$ = new BehaviorSubject<Date>(new Date());\n\n    // create observables that are derived from the latest value\n    hour$: Observable<number> = this.value$.pipe(map(date => date.getHours()), map(hour => this.showMeridian ? this.getMeridianTime(hour) : hour));\n    minute$: Observable<number> = this.value$.pipe(map(date => date.getMinutes()));\n    second$: Observable<number> = this.value$.pipe(map(date => date.getSeconds()));\n    meridian$: Observable<string> = this.value$.pipe(map(date => date.getHours() < 12 ? this.meridians[0] : this.meridians[1]));\n    valid$: Observable<boolean> = this.value$.pipe(map(date => this.checkValidity(date)));\nprivate _meridian: string = this.meridians[0];\nprivate _subscription: Subscription;\nconstructor() {\n        this._subscription = this.valid$.pipe(distinctUntilChanged()).subscribe(valid => this.isValid.emit(valid));\n    }\n/**\n * @return {?}\n */\nngOnDestroy(): void {\n        this._subscription.unsubscribe();\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nwriteValue(value: Date): void {\n        this.value = value;\n    }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnChange(fn: (_: Date) => void): void {\n        this.onChangeCallback = fn;\n    }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnTouched(fn: () => void): void {\n        this.onTouchedCallback = fn;\n    }\n/**\n * @param {?} isDisabled\n * @return {?}\n */\nsetDisabledState(isDisabled: boolean): void {\n        this.disabled = isDisabled;\n    }\n/**\n * @param {?} hour\n * @return {?}\n */\ngetMeridianTime(hour: number): number {\n        return hour > 12 ? hour - 12 : hour;\n    }\n/**\n * @param {?} hour\n * @return {?}\n */\nsetHour(hour: number): void {\n        const /** @type {?} */ date = this.value;\n        date.setHours(hour ? hour : 0);\n\n        this.value = date;\n    }\n/**\n * @param {?} minute\n * @return {?}\n */\nsetMinute(minute: number): void {\n        const /** @type {?} */ date = this.value;\n        date.setMinutes(minute ? minute : 0);\n\n        this.value = date;\n    }\n/**\n * @param {?} seconds\n * @return {?}\n */\nsetSeconds(seconds: number): void {\n        const /** @type {?} */ date = this.value;\n        date.setSeconds(seconds ? seconds : 0);\n\n        this.value = date;\n    }\n/**\n * @param {?=} arrowkey\n * @return {?}\n */\nincrementHour(arrowkey: boolean = false): void {\n        if (this.disabled || arrowkey && !this.arrowkeys) {\n            return;\n        }\n\n        this.setHour(this.value.getHours() + this.hourStep);\n    }\n/**\n * @param {?=} arrowkey\n * @return {?}\n */\ndecrementHour(arrowkey: boolean = false): void {\n        if (this.disabled || arrowkey && !this.arrowkeys) {\n            return;\n        }\n\n        this.setHour(this.value.getHours() - this.hourStep);\n    }\n/**\n * @param {?=} arrowkey\n * @return {?}\n */\nincrementMinute(arrowkey: boolean = false): void {\n        if (this.disabled || arrowkey && !this.arrowkeys) {\n            return;\n        }\n\n        this.setMinute(this.value.getMinutes() + this.minuteStep);\n    }\n/**\n * @param {?=} arrowkey\n * @return {?}\n */\ndecrementMinute(arrowkey: boolean = false): void {\n        if (this.disabled || arrowkey && !this.arrowkeys) {\n            return;\n        }\n\n        this.setMinute(this.value.getMinutes() - this.minuteStep);\n    }\n/**\n * @param {?=} arrowkey\n * @return {?}\n */\nincrementSecond(arrowkey: boolean = false): void {\n        if (this.disabled || arrowkey && !this.arrowkeys) {\n            return;\n        }\n\n        this.setSeconds(this.value.getSeconds() + this.secondStep);\n    }\n/**\n * @param {?=} arrowkey\n * @return {?}\n */\ndecrementSecond(arrowkey: boolean = false): void {\n        if (this.disabled || arrowkey && !this.arrowkeys) {\n            return;\n        }\n\n        this.setSeconds(this.value.getSeconds() - this.secondStep);\n    }\n/**\n * @param {?} meridian\n * @return {?}\n */\nselectMeridian(meridian: string): void {\n        this._meridian = meridian;\n\n        // get the current time\n        const /** @type {?} */ hour = this.value.getHours();\n\n        // if we have selected AM\n        if (meridian === this.meridians[0]) {\n            if (hour >= 12) {\n                this.setHour(hour - 12);\n            }\n        }\n\n        // if we have selected PM\n        if (meridian === this.meridians[1]) {\n            if (hour < 12) {\n                this.setHour(hour + 12);\n            }\n        }\n    }\n/**\n * @param {?} date\n * @return {?}\n */\ncheckValidity(date: Date): boolean {\n        let /** @type {?} */ valid = true;\n\n        if (this.min && date.getTime() <= this.min.getTime()) {\n            valid = false;\n        }\n\n        if (this.max && date.getTime() >= this.max.getTime()) {\n            valid = false;\n        }\n\n        return valid;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nhourChange(value: string): void {\n\n        // convert the string to a number\n        let /** @type {?} */ hour = parseInt(value);\n        let /** @type {?} */ currentHour = this.value.getHours();\n\n        // if the value hasn't changed, do nothing\n        if (hour === currentHour) {\n            return;\n        }\n\n        // ensure the hours is valid\n        if (!isNaN(hour)) {\n            if (hour < 0) {\n                hour = 0;\n            }\n\n            if (hour > (this.showMeridian ? 12 : 23)) {\n                hour = this.showMeridian ? 12 : 23;\n            }\n        }\n\n        hour = isNaN(hour) ? currentHour : hour;\n\n        // if the number is invalid then restore it to the previous value\n        if (this._meridian === this.meridians[0]) {\n            if (hour >= 12) {\n                hour -= 12;\n            }\n        }\n\n        // if we have selected PM\n        if (this._meridian === this.meridians[1]) {\n            if (hour < 12) {\n                hour += 12;\n            }\n        }\n\n        this.setHour(hour);\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nminuteChange(value: string): void {\n\n        // convert the string to a number\n        let /** @type {?} */ minute = parseInt(value);\n        let /** @type {?} */ currentMinute = this.value.getMinutes();\n\n        // if the value hasn't changed, do nothing\n        if (minute === currentMinute) {\n            return;\n        }\n\n        // ensure the hours is valid\n        if (!isNaN(minute)) {\n            if (minute < 0) {\n                minute = 59;\n            }\n\n            if (minute > 59) {\n                minute = 0;\n            }\n        }\n\n        // if the number is invalid then restore it to the previous value\n        this.setMinute(isNaN(minute) ? currentMinute : minute);\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nsecondChange(value: string): void {\n        // convert the string to a number\n        let /** @type {?} */ second = parseInt(value);\n        let /** @type {?} */ currentSecond = this.value.getSeconds();\n\n        // if the value hasn't changed, do nothing\n        if (second === currentSecond) {\n            return;\n        }\n\n        // ensure the hours is valid\n        if (!isNaN(second)) {\n            if (second < 0) {\n                second = 0;\n            }\n\n            if (second > 59) {\n                second = 59;\n            }\n        }\n\n        // if the number is invalid then restore it to the previous value\n        this.setSeconds(isNaN(second) ? currentSecond : second);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-time-picker',\n    template: `\n      <div class=\"time-picker\" aria-label=\"Time picker\">\n\n          <div class=\"time-picker-column\" [class.has-error]=\"!(valid$ | async)\" *ngIf=\"showHours\">\n\n              <ux-spin-button\n                  type=\"number\"\n                  class=\"time-spinner\"\n                  placeholder=\"HH\"\n                  [min]=\"0\"\n                  [max]=\"showMeridian ? 12 : 23\"\n                  [value]=\"hour$ | async | timeFormat\"\n                  (valueChange)=\"hourChange($event)\"\n                  [spinners]=\"showSpinners\"\n                  [disabled]=\"disabled\"\n                  [readOnly]=\"readOnly\"\n                  inputAriaLabel=\"hour\"\n                  incrementAriaLabel=\"Increment the hour\"\n                  decrementAriaLabel=\"Decrement the hour\"\n                  (increment)=\"incrementHour()\"\n                  (decrement)=\"decrementHour()\">\n              </ux-spin-button>\n\n          </div>\n\n          <div class=\"time-picker-separator\" *ngIf=\"showMinutes\">:</div>\n\n          <div class=\"time-picker-column\" [class.has-error]=\"!(valid$ | async)\" *ngIf=\"showMinutes\">\n\n              <ux-spin-button\n                  type=\"number\"\n                  class=\"time-spinner\"\n                  placeholder=\"MM\"\n                  [min]=\"0\"\n                  [max]=\"59\"\n                  [value]=\"minute$ | async | timeFormat\"\n                  (valueChange)=\"minuteChange($event)\"\n                  [spinners]=\"showSpinners\"\n                  [disabled]=\"disabled\"\n                  [readOnly]=\"readOnly\"\n                  inputAriaLabel=\"minute\"\n                  incrementAriaLabel=\"Increment the minute\"\n                  decrementAriaLabel=\"Decrement the minute\"\n                  (increment)=\"incrementMinute()\"\n                  (decrement)=\"decrementMinute()\">\n              </ux-spin-button>\n\n          </div>\n\n          <div class=\"time-picker-separator\" *ngIf=\"showSeconds\">:</div>\n\n          <div class=\"time-picker-column\" [class.has-error]=\"!(valid$ | async)\" *ngIf=\"showSeconds\">\n\n              <ux-spin-button\n                  type=\"number\"\n                  class=\"time-spinner\"\n                  type=\"number\"\n                  placeholder=\"SS\"\n                  [min]=\"0\"\n                  [max]=\"59\"\n                  [value]=\"second$ | async | timeFormat\"\n                  (valueChange)=\"secondChange($event)\"\n                  [spinners]=\"showSpinners\"\n                  [disabled]=\"disabled\"\n                  [readOnly]=\"readOnly\"\n                  inputAriaLabel=\"seconds\"\n                  incrementAriaLabel=\"Increment the second\"\n                  decrementAriaLabel=\"Decrement the second\"\n                  (increment)=\"incrementSecond()\"\n                  (decrement)=\"decrementSecond()\">\n              </ux-spin-button>\n\n          </div>\n      </div>\n\n      <div class=\"time-picker-meridian\" *ngIf=\"showMeridian\">\n\n          <div class=\"btn-group\" role=\"radiogroup\">\n\n              <button class=\"btn button-toggle-accent\"\n                      *ngFor=\"let meridian of meridians\"\n                      role=\"radio\"\n                      tabindex=\"0\"\n                      [disabled]=\"disabled\"\n                      (click)=\"selectMeridian(meridian)\"\n                      [class.active]=\"meridian === (meridian$ | async)\"\n                      [attr.aria-label]=\"meridian\"\n                      [attr.aria-checked]=\"meridian === (meridian$ | async)\"\n                      [attr.aria-disabled]=\"disabled\">\n                      {{ meridian }}\n              </button>\n\n          </div>\n      </div>\n    `,\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [TIME_PICKER_VALUE_ACCESSOR],\n    host: {\n        'aria-label': 'Time Picker'\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'arrowkeys': [{ type: Input },],\n'mousewheel': [{ type: Input },],\n'disabled': [{ type: Input },],\n'readOnly': [{ type: Input },],\n'showMeridian': [{ type: Input },],\n'showHours': [{ type: Input },],\n'showMinutes': [{ type: Input },],\n'showSeconds': [{ type: Input },],\n'showSpinners': [{ type: Input },],\n'hourStep': [{ type: Input },],\n'minuteStep': [{ type: Input },],\n'secondStep': [{ type: Input },],\n'min': [{ type: Input },],\n'max': [{ type: Input },],\n'meridians': [{ type: Input },],\n'value': [{ type: Input },],\n'valueChange': [{ type: Output },],\n'isValid': [{ type: Output },],\n};\n}\n\nfunction TimePickerComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nTimePickerComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTimePickerComponent.ctorParameters;\n/** @type {?} */\nTimePickerComponent.propDecorators;\n/** @type {?} */\nTimePickerComponent.prototype.arrowkeys;\n/** @type {?} */\nTimePickerComponent.prototype.mousewheel;\n/** @type {?} */\nTimePickerComponent.prototype.disabled;\n/** @type {?} */\nTimePickerComponent.prototype.readOnly;\n/** @type {?} */\nTimePickerComponent.prototype.showMeridian;\n/** @type {?} */\nTimePickerComponent.prototype.showHours;\n/** @type {?} */\nTimePickerComponent.prototype.showMinutes;\n/** @type {?} */\nTimePickerComponent.prototype.showSeconds;\n/** @type {?} */\nTimePickerComponent.prototype.showSpinners;\n/** @type {?} */\nTimePickerComponent.prototype.hourStep;\n/** @type {?} */\nTimePickerComponent.prototype.minuteStep;\n/** @type {?} */\nTimePickerComponent.prototype.secondStep;\n/** @type {?} */\nTimePickerComponent.prototype.min;\n/** @type {?} */\nTimePickerComponent.prototype.max;\n/** @type {?} */\nTimePickerComponent.prototype.meridians;\n/** @type {?} */\nTimePickerComponent.prototype.valueChange;\n/** @type {?} */\nTimePickerComponent.prototype.isValid;\n/** @type {?} */\nTimePickerComponent.prototype.onTouchedCallback;\n/** @type {?} */\nTimePickerComponent.prototype.onChangeCallback;\n/** @type {?} */\nTimePickerComponent.prototype.value$;\n/** @type {?} */\nTimePickerComponent.prototype.hour$;\n/** @type {?} */\nTimePickerComponent.prototype.minute$;\n/** @type {?} */\nTimePickerComponent.prototype.second$;\n/** @type {?} */\nTimePickerComponent.prototype.meridian$;\n/** @type {?} */\nTimePickerComponent.prototype.valid$;\n/** @type {?} */\nTimePickerComponent.prototype._meridian;\n/** @type {?} */\nTimePickerComponent.prototype._subscription;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { SpinButtonModule } from '../spin-button/index';\nimport { TimeFormatPipe } from './time-format.pipe';\nimport { TimePickerComponent } from './time-picker.component';\nexport class TimePickerModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        CommonModule,\n        FormsModule,\n        SpinButtonModule\n    ],\n    exports: [TimePickerComponent],\n    declarations: [TimePickerComponent, TimeFormatPipe],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction TimePickerModule_tsickle_Closure_declarations() {\n/** @type {?} */\nTimePickerModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTimePickerModule.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { DateTimePickerTimezone } from './date-time-picker.service';\n/**\n * Convert a single dimension array to a double dimension array\n * @template T\n * @param {?} items the single dimension array to convert\n * @param {?} columns the number of items each array should have\n * @return {?}\n */\nexport function gridify<T>(items: T[], columns: number): T[][] {\n\n    // create a copy of array so not to effect the original\n    items = items.slice(0);\n\n    const /** @type {?} */ grid: T[][] = [];\n\n    while (items.length) {\n        grid.push(items.splice(0, columns));\n    }\n\n    return grid;\n}\n/**\n * Create an array of numbers between two limits\n * @param {?} start the lower limit\n * @param {?} end the upper limit\n * @return {?}\n */\nexport function range(start: number, end: number): number[] {\n    const /** @type {?} */ list: number[] = [];\n\n    for (let /** @type {?} */ idx = start; idx <= end; idx++) {\n        list.push(idx);\n    }\n\n    return list;\n}\n/**\n * Create an array of dates between two points\n * @param {?} start the date to start the array\n * @param {?} end the date to end the array\n * @return {?}\n */\nexport function dateRange(start: Date, end: Date): Date[] {\n\n    let /** @type {?} */ dates: Date[] = [];\n\n    // loop through all the days between the date range\n    while (start <= end) {\n\n        // add the date to the array\n        dates.push(new Date(start));\n\n        // move to the next day\n        start.setDate(start.getDate() + 1);\n    }\n\n    return dates;\n}\n/**\n * Compare two dates to see if they are on the same day\n * @param {?} day1 the first date to compare\n * @param {?} day2 the second date to compare\n * @return {?}\n */\nexport function compareDays(day1: Date, day2: Date): boolean {\n    return day1.getDate() === day2.getDate() &&\n        day1.getMonth() === day2.getMonth() &&\n        day1.getFullYear() === day2.getFullYear();\n}\n/**\n * Date comparison for use primarily with distinctUntilChanged\n * @param {?} dateOne\n * @param {?} dateTwo\n * @return {?}\n */\nexport function dateComparator(dateOne: Date, dateTwo: Date): boolean {\n    return dateOne.getTime() === dateTwo.getTime();\n}\n/**\n * Timezone comparison for use primarily with distinctUntilChanged\n * @param {?} zoneOne\n * @param {?} zoneTwo\n * @return {?}\n */\nexport function timezoneComparator(zoneOne: DateTimePickerTimezone, zoneTwo: DateTimePickerTimezone): boolean {\n    return zoneOne.name === zoneTwo.name && zoneOne.offset === zoneTwo.offset;\n}\n/**\n * Export an array of all the available months\n */\nexport const months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\nexport const /** @type {?} */ monthsShort = months.map(month => month.substring(0, 3));\n/**\n * Export an array of all the available days of the week\n */\nexport const weekdays = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'];\nexport const /** @type {?} */ weekdaysShort = weekdays.map(weekday => weekday.substring(0, 3));","/**\n * Add a config service to allow an application\n * to customize the date time picker default settings\n * across the entire application\n */\n\n\nimport { Injectable } from '@angular/core';\nimport { weekdaysShort } from './date-time-picker.utils';\nimport { DateTimePickerTimezone } from './date-time-picker.service';\nexport class DateTimePickerConfig {\n\n    showDate: boolean = true;\n    showTime: boolean = true;\n    showTimezone: boolean = true;\n    showSeconds: boolean = false;\n    showMeridian: boolean = true;\n    showSpinners: boolean = true;\n    weekdays: string[] = weekdaysShort;\n    nowBtnText: string = 'Today';\n\n    timezones: DateTimePickerTimezone[] = [\n        { name: 'GMT-11', offset: 660 },\n        { name: 'GMT-10', offset: 600 },\n        { name: 'GMT-9', offset: 540 },\n        { name: 'GMT-8', offset: 480 },\n        { name: 'GMT-7', offset: 420 },\n        { name: 'GMT-6', offset: 360 },\n        { name: 'GMT-5', offset: 300 },\n        { name: 'GMT-4', offset: 240 },\n        { name: 'GMT-3', offset: 180 },\n        { name: 'GMT-2', offset: 120 },\n        { name: 'GMT-1', offset: 60 },\n        { name: 'GMT', offset: 0 },\n        { name: 'GMT+1', offset: -60 },\n        { name: 'GMT+2', offset: -120 },\n        { name: 'GMT+3', offset: -180 },\n        { name: 'GMT+4', offset: -240 },\n        { name: 'GMT+5', offset: -300 },\n        { name: 'GMT+6', offset: -360 },\n        { name: 'GMT+7', offset: -420 },\n        { name: 'GMT+8', offset: -480 },\n        { name: 'GMT+9', offset: -540 },\n        { name: 'GMT+10', offset: -600 },\n        { name: 'GMT+11', offset: -660 },\n        { name: 'GMT+12', offset: -720 }\n    ];\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction DateTimePickerConfig_tsickle_Closure_declarations() {\n/** @type {?} */\nDateTimePickerConfig.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDateTimePickerConfig.ctorParameters;\n/** @type {?} */\nDateTimePickerConfig.prototype.showDate;\n/** @type {?} */\nDateTimePickerConfig.prototype.showTime;\n/** @type {?} */\nDateTimePickerConfig.prototype.showTimezone;\n/** @type {?} */\nDateTimePickerConfig.prototype.showSeconds;\n/** @type {?} */\nDateTimePickerConfig.prototype.showMeridian;\n/** @type {?} */\nDateTimePickerConfig.prototype.showSpinners;\n/** @type {?} */\nDateTimePickerConfig.prototype.weekdays;\n/** @type {?} */\nDateTimePickerConfig.prototype.nowBtnText;\n/** @type {?} */\nDateTimePickerConfig.prototype.timezones;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { Subject } from 'rxjs/Subject';\nimport { Subscription } from 'rxjs/Subscription';\nimport { distinctUntilChanged } from 'rxjs/operators';\nimport { DateTimePickerConfig } from './date-time-picker.config';\nimport { dateComparator } from './date-time-picker.utils';\nexport class DateTimePickerService {\n\n    mode$: BehaviorSubject<DatePickerMode> = new BehaviorSubject<DatePickerMode>(DatePickerMode.Day);\n    date$: BehaviorSubject<Date> = new BehaviorSubject<Date>(new Date());\n    timezone$ = new BehaviorSubject<DateTimePickerTimezone>(this.getCurrentTimezone());\n    selected$: BehaviorSubject<Date> = new BehaviorSubject<Date>(new Date());\n\n    // the month and year to display in the viewport\n    month$: BehaviorSubject<number> = new BehaviorSubject<number>(new Date().getMonth());\n    year$: BehaviorSubject<number> = new BehaviorSubject<number>(new Date().getFullYear());\n\n    showDate$ = new BehaviorSubject<boolean>(this._config.showDate);\n    showTime$ = new BehaviorSubject<boolean>(this._config.showTime);\n    showTimezone$ = new BehaviorSubject<boolean>(this._config.showTimezone);\n    showSeconds$ = new BehaviorSubject<boolean>(this._config.showSeconds);\n    showMeridian$ = new BehaviorSubject<boolean>(this._config.showMeridian);\n    showSpinners$ = new BehaviorSubject<boolean>(this._config.showSpinners);\n    weekdays$ = new BehaviorSubject<string[]>(this._config.weekdays);\n    nowBtnText$ = new BehaviorSubject<string>(this._config.nowBtnText);\n    timezones$ = new BehaviorSubject<DateTimePickerTimezone[]>(this._config.timezones);\n\n    header$ = new BehaviorSubject<string>(null);\n    headerEvent$ = new Subject<DatePickerHeaderEvent>();\n    modeDirection: ModeDirection = ModeDirection.None;\nprivate _subscription: Subscription;\n/**\n * @param {?} _config\n */\nconstructor(private _config: DateTimePickerConfig) {\n\n        // when the active date changes set the currently selected date\n        this._subscription = this.selected$.pipe(distinctUntilChanged(dateComparator)).subscribe(date => {\n\n            // the month and year displayed in the viewport should reflect the newly selected items\n            this.setViewportMonth(date.getMonth());\n            this.setViewportYear(date.getFullYear());\n\n            // emit the new date to the component host\n            this.date$.next(date);\n        });\n    }\n/**\n * @return {?}\n */\nngOnDestroy(): void {\n        this._subscription.unsubscribe();\n    }\n/**\n * @param {?} month\n * @return {?}\n */\nsetViewportMonth(month: number): void {\n        if (month < 0) {\n            this.month$.next(11);\n            this.year$.next(this.year$.value - 1);\n        } else if (month > 11) {\n            this.month$.next(0);\n            this.year$.next(this.year$.value + 1);\n        } else {\n            this.month$.next(month);\n        }\n    }\n/**\n * @param {?} year\n * @return {?}\n */\nsetViewportYear(year: number): void {\n        this.year$.next(year);\n    }\n/**\n * @param {?} day\n * @param {?} month\n * @param {?} year\n * @return {?}\n */\nsetDate(day: number, month: number, year: number): void {\n        const /** @type {?} */ date = new Date(this.selected$.value);\n\n        date.setDate(day);\n        date.setMonth(month);\n        date.setFullYear(year);\n\n        this.selected$.next(date);\n    }\n/**\n * @return {?}\n */\nsetDateToNow(): void {\n        this.selected$.next(new Date());\n    }\n/**\n * @param {?} mode\n * @return {?}\n */\nsetViewportMode(mode: DatePickerMode): void {\n        this.mode$.next(mode);\n    }\n/**\n * @return {?}\n */\ngoToChildMode(): void {\n        this.modeDirection = ModeDirection.Descend;\n\n        switch (this.mode$.value) {\n\n            case DatePickerMode.Year:\n                return this.setViewportMode(DatePickerMode.Month);\n\n            case DatePickerMode.Month:\n                return this.setViewportMode(DatePickerMode.Day);\n        }\n    }\n/**\n * @return {?}\n */\ngoToParentMode(): void {\n        this.modeDirection = ModeDirection.Ascend;\n\n        switch (this.mode$.value) {\n\n            case DatePickerMode.Day:\n                return this.setViewportMode(DatePickerMode.Month);\n\n            case DatePickerMode.Month:\n                return this.setViewportMode(DatePickerMode.Year);\n        }\n    }\n/**\n * @return {?}\n */\ngoToNext(): void {\n        this.headerEvent$.next(DatePickerHeaderEvent.Next);\n    }\n/**\n * @return {?}\n */\ngoToPrevious(): void {\n        this.headerEvent$.next(DatePickerHeaderEvent.Previous);\n    }\n/**\n * @param {?} header\n * @return {?}\n */\nsetHeader(header: string): void {\n        this.header$.next(header);\n    }\n/**\n * @return {?}\n */\ngetCurrentTimezone(): DateTimePickerTimezone {\n        const /** @type {?} */ offset = new Date().getTimezoneOffset();\n        return this._config.timezones.find(timezone => timezone.offset === offset);\n    }\n/**\n * @param {?} timezone\n * @return {?}\n */\nsetTimezone(timezone: DateTimePickerTimezone): void {\n        this.timezone$.next(timezone);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: DateTimePickerConfig, },\n];\n}\n\nfunction DateTimePickerService_tsickle_Closure_declarations() {\n/** @type {?} */\nDateTimePickerService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDateTimePickerService.ctorParameters;\n/** @type {?} */\nDateTimePickerService.prototype.mode$;\n/** @type {?} */\nDateTimePickerService.prototype.date$;\n/** @type {?} */\nDateTimePickerService.prototype.timezone$;\n/** @type {?} */\nDateTimePickerService.prototype.selected$;\n/** @type {?} */\nDateTimePickerService.prototype.month$;\n/** @type {?} */\nDateTimePickerService.prototype.year$;\n/** @type {?} */\nDateTimePickerService.prototype.showDate$;\n/** @type {?} */\nDateTimePickerService.prototype.showTime$;\n/** @type {?} */\nDateTimePickerService.prototype.showTimezone$;\n/** @type {?} */\nDateTimePickerService.prototype.showSeconds$;\n/** @type {?} */\nDateTimePickerService.prototype.showMeridian$;\n/** @type {?} */\nDateTimePickerService.prototype.showSpinners$;\n/** @type {?} */\nDateTimePickerService.prototype.weekdays$;\n/** @type {?} */\nDateTimePickerService.prototype.nowBtnText$;\n/** @type {?} */\nDateTimePickerService.prototype.timezones$;\n/** @type {?} */\nDateTimePickerService.prototype.header$;\n/** @type {?} */\nDateTimePickerService.prototype.headerEvent$;\n/** @type {?} */\nDateTimePickerService.prototype.modeDirection;\n/** @type {?} */\nDateTimePickerService.prototype._subscription;\n/** @type {?} */\nDateTimePickerService.prototype._config;\n}\n\nexport type DatePickerMode = number;\nexport let DatePickerMode: any = {};\nDatePickerMode.Day = 0;\nDatePickerMode.Month = 1;\nDatePickerMode.Year = 2;\nDatePickerMode[DatePickerMode.Day] = \"Day\";\nDatePickerMode[DatePickerMode.Month] = \"Month\";\nDatePickerMode[DatePickerMode.Year] = \"Year\";\n\nexport type ModeDirection = number;\nexport let ModeDirection: any = {};\nModeDirection.None = 0;\nModeDirection.Ascend = 1;\nModeDirection.Descend = 2;\nModeDirection[ModeDirection.None] = \"None\";\nModeDirection[ModeDirection.Ascend] = \"Ascend\";\nModeDirection[ModeDirection.Descend] = \"Descend\";\n\nexport type DatePickerHeaderEvent = number;\nexport let DatePickerHeaderEvent: any = {};\nDatePickerHeaderEvent.Previous = 0;\nDatePickerHeaderEvent.Next = 1;\nDatePickerHeaderEvent[DatePickerHeaderEvent.Previous] = \"Previous\";\nDatePickerHeaderEvent[DatePickerHeaderEvent.Next] = \"Next\";\n\n\nexport interface DateTimePickerTimezone {\n    name: string;\n    offset: number;\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, EventEmitter, Input, OnDestroy, Output, ChangeDetectionStrategy } from '@angular/core';\nimport { Subscription } from 'rxjs/Subscription';\nimport { distinctUntilChanged } from 'rxjs/operators';\nimport { DatePickerMode, DateTimePickerService, DateTimePickerTimezone } from './date-time-picker.service';\nimport { dateComparator, timezoneComparator } from './date-time-picker.utils';\nexport class DateTimePickerComponent implements OnDestroy {\nprivate _timezone: DateTimePickerTimezone;\n/**\n * @param {?} value\n * @return {?}\n */\nset showDate(value: boolean) {\n    this.datepicker.showDate$.next(value);\n  }\n/**\n * @param {?} value\n * @return {?}\n */\nset showTime(value: boolean) {\n    this.datepicker.showTime$.next(value);\n  }\n/**\n * @param {?} value\n * @return {?}\n */\nset showTimezone(value: boolean) {\n    this.datepicker.showTimezone$.next(value);\n  }\n/**\n * @param {?} value\n * @return {?}\n */\nset showSeconds(value: boolean) {\n    this.datepicker.showSeconds$.next(value);\n  }\n/**\n * @param {?} value\n * @return {?}\n */\nset showMeridian(value: boolean) {\n    this.datepicker.showMeridian$.next(value);\n  }\n/**\n * @param {?} value\n * @return {?}\n */\nset showSpinners(value: boolean) {\n    this.datepicker.showSpinners$.next(value);\n  }\n/**\n * @param {?} value\n * @return {?}\n */\nset weekdays(value: string[]) {\n    this.datepicker.weekdays$.next(value);\n  }\n/**\n * @param {?} value\n * @return {?}\n */\nset nowBtnText(value: string) {\n    this.datepicker.nowBtnText$.next(value);\n  }\n/**\n * @param {?} value\n * @return {?}\n */\nset timezones(value: DateTimePickerTimezone[]) {\n    this.datepicker.timezones$.next(value);\n  }\n\n\n   dateChange: EventEmitter<Date> = new EventEmitter<Date>();\n   timezoneChange: EventEmitter<DateTimePickerTimezone> = new EventEmitter<DateTimePickerTimezone>();\n/**\n * @param {?} value\n * @return {?}\n */\nset date(value: Date) {\n    if (!dateComparator(value, this.datepicker.selected$.value)) {\n      this.datepicker.selected$.next(new Date(value));\n    }\n  }\n/**\n * @param {?} value\n * @return {?}\n */\nset timezone(value: DateTimePickerTimezone) {\n    this.datepicker.timezone$.next(value);\n  }\n\n  // expose enum to view\n  DatePickerMode = DatePickerMode;\nprivate _subscription = new Subscription();\n/**\n * @param {?} datepicker\n */\nconstructor(public datepicker: DateTimePickerService) {\n    const valueChange = datepicker.selected$.pipe(distinctUntilChanged(dateComparator))\n      .subscribe(date => this.dateChange.emit(date));\n\n    const timezoneChange = datepicker.timezone$.pipe(distinctUntilChanged(timezoneComparator))\n      .subscribe((timezone: DateTimePickerTimezone) => this.timezoneChange.emit(timezone));\n  }\n/**\n * @return {?}\n */\nngOnDestroy(): void {\n    this._subscription.unsubscribe();\n  }\n/**\n * Change the date to the current date and time\n * @return {?}\n */\nsetToNow(): void {\n\n    // set the date to the current moment\n    this.datepicker.setDateToNow();\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'ux-date-time-picker',\n  template: `\n    <div class=\"calendar-container\">\n\n      <ux-date-time-picker-header></ux-date-time-picker-header>\n\n      <ng-container *ngIf=\"datepicker.showDate$ | async\" [ngSwitch]=\"datepicker.mode$ | async\">\n\n          <!-- Display days in the current month -->\n          <ux-date-time-picker-day-view *ngSwitchCase=\"DatePickerMode.Day\"></ux-date-time-picker-day-view>\n\n          <!-- Display the months in the current year -->\n          <ux-date-time-picker-month-view *ngSwitchCase=\"DatePickerMode.Month\"></ux-date-time-picker-month-view>\n\n          <!-- Display a decade -->\n          <ux-date-time-picker-year-view *ngSwitchCase=\"DatePickerMode.Year\"></ux-date-time-picker-year-view>\n\n      </ng-container>\n\n      <!-- Display a Time Picker -->\n      <ux-date-time-picker-time-view *ngIf=\"datepicker.showTime$ | async\"></ux-date-time-picker-time-view>\n\n    </div>\n\n    <button class=\"now-button\" aria-label=\"Set date to now\" (click)=\"setToNow()\">{{ datepicker.nowBtnText$ | async }}</button>\n  `,\n  providers: [DateTimePickerService],\n  changeDetection: ChangeDetectionStrategy.OnPush\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: DateTimePickerService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'showDate': [{ type: Input },],\n'showTime': [{ type: Input },],\n'showTimezone': [{ type: Input },],\n'showSeconds': [{ type: Input },],\n'showMeridian': [{ type: Input },],\n'showSpinners': [{ type: Input },],\n'weekdays': [{ type: Input },],\n'nowBtnText': [{ type: Input },],\n'timezones': [{ type: Input },],\n'dateChange': [{ type: Output },],\n'timezoneChange': [{ type: Output },],\n'date': [{ type: Input },],\n'timezone': [{ type: Input },],\n};\n}\n\nfunction DateTimePickerComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nDateTimePickerComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDateTimePickerComponent.ctorParameters;\n/** @type {?} */\nDateTimePickerComponent.propDecorators;\n/** @type {?} */\nDateTimePickerComponent.prototype._timezone;\n/** @type {?} */\nDateTimePickerComponent.prototype.dateChange;\n/** @type {?} */\nDateTimePickerComponent.prototype.timezoneChange;\n/** @type {?} */\nDateTimePickerComponent.prototype.DatePickerMode;\n/** @type {?} */\nDateTimePickerComponent.prototype._subscription;\n/** @type {?} */\nDateTimePickerComponent.prototype.datepicker;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { Subscription } from 'rxjs/Subscription';\nimport { combineLatest } from 'rxjs/observable/combineLatest';\nimport { DateTimePickerService, ModeDirection } from '../date-time-picker.service';\nimport { compareDays, dateRange, gridify, months } from '../date-time-picker.utils';\nexport class DayViewService implements OnDestroy {\n\n    grid$ = new BehaviorSubject<DayViewItem[][]>([[]]);\n    focused$ = new BehaviorSubject<FocusedDayItem>(null);\nprivate _subscription: Subscription;\n/**\n * @param {?} _datepicker\n */\nconstructor(private _datepicker: DateTimePickerService) {\n        this._subscription = combineLatest(_datepicker.month$, _datepicker.year$)\n            .subscribe(([month, year]) => this.createDayGrid(month, year));\n    }\n/**\n * @return {?}\n */\nngOnDestroy(): void {\n        this._subscription.unsubscribe();\n    }\n/**\n * @param {?} day\n * @param {?} month\n * @param {?} year\n * @return {?}\n */\nsetFocus(day: number, month: number, year: number): void {\n        this.focused$.next({ day: day, month: month, year: year });\n\n        // update the date picker to show the required month and year\n        this._datepicker.setViewportMonth(month);\n        this._datepicker.setViewportYear(year);\n    }\n/**\n * @param {?} month\n * @param {?} year\n * @return {?}\n */\nprivate createDayGrid(month: number, year: number): void {\n\n        // update the header\n        this._datepicker.setHeader(months[month] + ' ' + year);\n\n        // find the lower and upper boundaries\n        const /** @type {?} */ start = new Date(year, month, 1);\n        const /** @type {?} */ end = new Date(year, month + 1, 0);\n\n        // we always want to show from the sunday - this may include showing some dates from the previous month\n        start.setDate(start.getDate() - start.getDay());\n\n        // we also want to make sure that the range ends on a saturday\n        end.setDate(end.getDate() + (6 - end.getDay()));\n\n        // create an array of all the days to display\n        const /** @type {?} */ dates: DayViewItem[] = dateRange(start, end).map(date => ({\n            day: date.getDate(),\n            month: date.getMonth(),\n            year: date.getFullYear(),\n            date: date,\n            isToday: this.isToday(date),\n            isActive: this.isActive(date),\n            isCurrentMonth: date.getMonth() === month\n        }));\n\n        // turn the dates into a grid\n        const /** @type {?} */ items: DayViewItem[][] = gridify(dates, 7);\n\n        this.grid$.next(items);\n\n        // if no item has yet been focused then focus the first day of the month\n        if ((this._datepicker.modeDirection === ModeDirection.None || this._datepicker.modeDirection === ModeDirection.Descend) && this.focused$.value === null) {\n\n            // check if the selected item is visible\n            const /** @type {?} */ selectedDay = dates.find(day => day.isCurrentMonth && day.isActive);\n\n            if (selectedDay) {\n                this.setFocus(selectedDay.day, selectedDay.month, selectedDay.year);\n            } else {\n\n                // find the first day of the month\n                const /** @type {?} */ first = dates.find(date => date.day === 1);\n    \n                // focus the date\n                this.setFocus(first.day, first.month, first.year);\n            }\n\n        }\n    }\n/**\n * Determine whether or not a specific date is today\n * @param {?} date The date to check\n * @return {?}\n */\nprivate isToday(date: Date): boolean {\n        return compareDays(new Date(), date);\n    }\n/**\n * Determines whether or not a specific date is the selected one\n * @param {?} date the date to check\n * @return {?}\n */\nprivate isActive(date: Date): boolean {\n        return compareDays(this._datepicker.selected$.value, date);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: DateTimePickerService, },\n];\n}\n\nfunction DayViewService_tsickle_Closure_declarations() {\n/** @type {?} */\nDayViewService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDayViewService.ctorParameters;\n/** @type {?} */\nDayViewService.prototype.grid$;\n/** @type {?} */\nDayViewService.prototype.focused$;\n/** @type {?} */\nDayViewService.prototype._subscription;\n/** @type {?} */\nDayViewService.prototype._datepicker;\n}\n\n\nexport interface DayViewItem {\n    day: number;\n    month: number;\n    year: number;\n    date: Date;\n    isToday: boolean;\n    isActive: boolean;\n    isCurrentMonth: boolean;\n}\n\nexport interface FocusedDayItem {\n    day: number;\n    month: number;\n    year: number;\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { ChangeDetectionStrategy, Component, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs/Subscription';\nimport { DatePickerHeaderEvent, DateTimePickerService } from '../date-time-picker.service';\nimport { DayViewItem, DayViewService } from './day-view.service';\nexport class DayViewComponent implements OnDestroy {\nprivate _subscription: Subscription;\n/**\n * @param {?} datePicker\n * @param {?} dayService\n */\nconstructor(public datePicker: DateTimePickerService,\npublic dayService: DayViewService) {\n    this._subscription = datePicker.headerEvent$\n      .subscribe(event => event === DatePickerHeaderEvent.Next ? this.next() : this.previous());\n  }\n/**\n * @return {?}\n */\nngOnDestroy(): void {\n    this._subscription.unsubscribe();\n  }\n/**\n * Navigate to the previous page of dates\n * @return {?}\n */\nprevious(): void {\n    this.datePicker.setViewportMonth(this.datePicker.month$.value - 1);\n  }\n/**\n * Navigate to the next page of dates\n * @return {?}\n */\nnext(): void {\n    this.datePicker.setViewportMonth(this.datePicker.month$.value + 1);\n  }\n/**\n * Select a particular date\n * @param {?} date the date to select\n * @param {?} element\n * @return {?}\n */\nselect(date: Date, element: HTMLElement): void {\n    // update the current date object\n    this.datePicker.setDate(date.getDate(), date.getMonth(), date.getFullYear());\n\n    // focus the newly selected date\n    this.dayService.setFocus(date.getDate(), date.getMonth(), date.getFullYear());\n  }\n/**\n * @param {?} index\n * @return {?}\n */\ntrackWeekByFn(index: number): number {\n    return index;\n  }\n/**\n * @param {?} index\n * @param {?} item\n * @return {?}\n */\ntrackDayByFn(index: number, item: DayViewItem): string {\n    return `${ item.day } ${ item.month } ${ item.year }`;\n  }\n/**\n * @param {?} item\n * @param {?} dayOffset\n * @return {?}\n */\nfocusDate(item: DayViewItem, dayOffset: number): void {\n\n    // determine the date of the day\n    const /** @type {?} */ target = new Date(item.date.setDate(item.date.getDate() + dayOffset));\n\n    // identify which date should be focused\n    this.dayService.setFocus(target.getDate(), target.getMonth(), target.getFullYear());\n  }\n/**\n * @param {?} item\n * @return {?}\n */\ngetTabbable(item: DayViewItem): boolean {\n    const /** @type {?} */ focused = this.dayService.focused$.value;\n    const /** @type {?} */ grid = this.dayService.grid$.value;\n\n    // if there is a focused month check if this is it\n    if (focused) {\n\n      // check if the focused day is visible\n      const /** @type {?} */ isFocusedDayVisible = !!grid.find(row => !!row.find(_item => _item.day === focused.day && _item.month === focused.month && _item.year === focused.year));\n      \n      if (isFocusedDayVisible) {\n        return focused.day === item.day && focused.month === item.month && focused.year === item.year;\n      }\n    }\n\n    // if there is no focusable day then check if there is a selected day\n    const /** @type {?} */ isSelectedDayVisible = !!grid.find(row => !!row.find(day => day.isActive));\n\n    if (isSelectedDayVisible) {\n        return item.isActive;\n    }\n\n    // otherwise make the first day tabbable\n    return item.day === 1;\n  }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'ux-date-time-picker-day-view',\n  template: `\n    <table class=\"calendar\">\n        <thead>\n            <tr>\n                <th *ngFor=\"let day of datePicker.weekdays$ | async\" class=\"weekday\" [attr.aria-label]=\"day\">{{ day }}</th>\n            </tr>\n        </thead>\n\n        <tbody role=\"grid\">\n            <tr role=\"row\" *ngFor=\"let row of dayService.grid$ | async; trackBy: trackWeekByFn\">\n\n                <td *ngFor=\"let item of row; trackBy: trackDayByFn\" class=\"date-cell\" role=\"gridcell\">\n\n                    <button class=\"date-button\"\n                            [focusIf]=\"(dayService.focused$ | async)?.day === item.day && (dayService.focused$ | async)?.month === item.month && (dayService.focused$ | async)?.year === item.year\"\n                            [attr.aria-label]=\"item.date | date\"\n                            [attr.aria-selected]=\"item.isActive\"\n                            [attr.aria-hidden]=\"!item.isCurrentMonth\"\n                            [class.current]=\"item.isToday\"\n                            [class.active]=\"item.isActive\"\n                            [class.preview]=\"!item.isCurrentMonth\"\n                            [tabindex]=\"getTabbable(item) ? 0 : -1\"\n                            (click)=\"select(item.date); $event.stopPropagation()\"\n                            (keydown.ArrowLeft)=\"focusDate(item, -1); $event.preventDefault()\"\n                            (keydown.ArrowRight)=\"focusDate(item, 1); $event.preventDefault()\"\n                            (keydown.ArrowUp)=\"focusDate(item, -7); $event.preventDefault()\"\n                            (keydown.ArrowDown)=\"focusDate(item, 7); $event.preventDefault()\">\n\n                        {{ item.date.getDate() }}\n                    </button>\n\n                </td>\n            </tr>\n        </tbody>\n    </table>\n  `,\n  providers: [DayViewService],\n  changeDetection: ChangeDetectionStrategy.OnPush\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: DateTimePickerService, },\n{type: DayViewService, },\n];\n}\n\nfunction DayViewComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nDayViewComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDayViewComponent.ctorParameters;\n/** @type {?} */\nDayViewComponent.prototype._subscription;\n/** @type {?} */\nDayViewComponent.prototype.datePicker;\n/** @type {?} */\nDayViewComponent.prototype.dayService;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, ChangeDetectionStrategy } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { map } from 'rxjs/operators';\nimport { DatePickerMode, DateTimePickerService } from '../date-time-picker.service';\nexport class HeaderComponent {\n\n    canAscend$: Observable<boolean> = this.datepicker.mode$.pipe(map(mode => mode !== DatePickerMode.Year));\n    \n    mode$: Observable<string> = this.datepicker.mode$.pipe(map(mode => {\n        switch (mode) {\n            case DatePickerMode.Day:\n                return 'Day';\n            case DatePickerMode.Month:\n                return 'Month';\n            case DatePickerMode.Year:\n                return 'Year';\n        }\n    }));\n\n    headerAria$: Observable<string> = this.datepicker.mode$.pipe(map(mode => {\n        switch (mode) {\n            case DatePickerMode.Day:\n                return 'Switch to show months in the year';\n            case DatePickerMode.Month:\n                return 'Switch to show years in the decade';\n            case DatePickerMode.Year:\n                return '';\n        }\n    }));\n\n    previousAria$: Observable<string> = this.datepicker.mode$.pipe(map(mode => {\n        switch (mode) {\n            case DatePickerMode.Day:\n                return 'Previous month';\n            case DatePickerMode.Month:\n                return 'Previous year';\n            case DatePickerMode.Year:\n                return 'Previous decade';\n        }\n    }));\n\n    nextAria$: Observable<string> = this.datepicker.mode$.pipe(map(mode => {\n        switch (mode) {\n            case DatePickerMode.Day:\n                return 'Next month';\n            case DatePickerMode.Month:\n                return 'Next year';\n            case DatePickerMode.Year:\n                return 'Next decade';\n        }\n    }));\n/**\n * @param {?} datepicker\n */\nconstructor(public datepicker: DateTimePickerService) { }\n/**\n * @return {?}\n */\nprevious(): void {\n        this.datepicker.goToPrevious();\n    }\n/**\n * @return {?}\n */\nascend(): void {\n        this.datepicker.goToParentMode();\n    }\n/**\n * @return {?}\n */\nnext(): void {\n        this.datepicker.goToNext();\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-date-time-picker-header',\n    template: `\n      <header class=\"header\">\n\n        <button class=\"header-navigation\"\n                (click)=\"previous(); $event.stopPropagation()\"\n                [attr.aria-label]=\"previousAria$ | async\"\n                tabindex=\"0\">\n\n          <i class=\"hpe-icon hpe-previous\"></i>\n        </button>\n\n        <button class=\"header-title\"\n                [attr.aria-label]=\"headerAria$ | async\"\n                [class.active]=\"canAscend$ | async\"\n                (click)=\"ascend(); $event.stopPropagation()\"\n                [tabindex]=\"(canAscend$ | async) ? 0 : -1\">\n             {{ datepicker.header$ | async }}\n        </button>\n\n        <button class=\"header-navigation\"\n                (click)=\"next(); $event.stopPropagation()\"\n                [attr.aria-label]=\"nextAria$ | async\"\n                tabindex=\"0\">\n\n          <i class=\"hpe-icon hpe-next\"></i>\n        </button>\n      </header>\n    `,\n    changeDetection: ChangeDetectionStrategy.OnPush\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: DateTimePickerService, },\n];\n}\n\nfunction HeaderComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nHeaderComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nHeaderComponent.ctorParameters;\n/** @type {?} */\nHeaderComponent.prototype.canAscend$;\n/** @type {?} */\nHeaderComponent.prototype.mode$;\n/** @type {?} */\nHeaderComponent.prototype.headerAria$;\n/** @type {?} */\nHeaderComponent.prototype.previousAria$;\n/** @type {?} */\nHeaderComponent.prototype.nextAria$;\n/** @type {?} */\nHeaderComponent.prototype.datepicker;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { Subscription } from 'rxjs/Subscription';\nimport { DateTimePickerService, ModeDirection } from '../date-time-picker.service';\nimport { gridify, monthsShort, range } from '../date-time-picker.utils';\nexport class MonthViewService implements OnDestroy {\n\n    grid$ = new BehaviorSubject<MonthViewItem[][]>([[]]);\n    focused$ = new BehaviorSubject<FocusedMonthItem>(null);\nprivate _subscription: Subscription;\n/**\n * @param {?} _datepicker\n */\nconstructor(private _datepicker: DateTimePickerService) {\n        this._subscription = _datepicker.year$.subscribe(year => this.createMonthGrid(year));\n    }\n/**\n * @return {?}\n */\nngOnDestroy(): void {\n        this._subscription.unsubscribe();\n    }\n/**\n * @param {?} month\n * @param {?} year\n * @return {?}\n */\nsetFocus(month: number, year: number): void {\n        this.focused$.next({ month: month, year: year });\n\n        // update the viewport to ensure focused month is visible\n        this._datepicker.setViewportYear(year);\n    }\n/**\n * @param {?} year\n * @return {?}\n */\nprivate createMonthGrid(year: number): void {\n\n        // update the header\n        this._datepicker.setHeader(year.toString());\n\n        // get the current year and month\n        const /** @type {?} */ currentMonth = new Date().getMonth();\n        const /** @type {?} */ currentYear = new Date().getFullYear();\n\n        // get the currently selected month\n        const /** @type {?} */ activeMonth = this._datepicker.selected$.value.getMonth();\n        const /** @type {?} */ activeYear = this._datepicker.selected$.value.getFullYear();\n\n        // create a 4x3 grid of month numbers\n        const /** @type {?} */ months: MonthViewItem[] = range(0, 11).map(month => {\n            return {\n                name: monthsShort[month],\n                month: month,\n                year: year,\n                isCurrentMonth: year === currentYear && month === currentMonth,\n                isActiveMonth: year === activeYear && month === activeMonth\n            };\n        });\n\n        // map these to the appropriate format\n        const /** @type {?} */ items: MonthViewItem[][] = gridify(months, 4);\n\n        // update the grid\n        this.grid$.next(items);\n\n        // if there is no focused month select the first one\n        if (this._datepicker.modeDirection === ModeDirection.Descend && this.focused$.value === null) {\n            \n            // check if the selected month is in view\n            const /** @type {?} */ selectedMonth = months.find(month => month.isActiveMonth);\n\n            this.setFocus(selectedMonth ? selectedMonth.month : 0, year);\n        }\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: DateTimePickerService, },\n];\n}\n\nfunction MonthViewService_tsickle_Closure_declarations() {\n/** @type {?} */\nMonthViewService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMonthViewService.ctorParameters;\n/** @type {?} */\nMonthViewService.prototype.grid$;\n/** @type {?} */\nMonthViewService.prototype.focused$;\n/** @type {?} */\nMonthViewService.prototype._subscription;\n/** @type {?} */\nMonthViewService.prototype._datepicker;\n}\n\n\nexport interface MonthViewItem {\n    name: string;\n    month: number;\n    year: number;\n    isCurrentMonth: boolean;\n    isActiveMonth: boolean;\n}\n\nexport interface FocusedMonthItem {\n    month: number;\n    year: number;\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { ChangeDetectionStrategy, Component, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs/Subscription';\nimport { DatePickerHeaderEvent, DateTimePickerService } from '../date-time-picker.service';\nimport { MonthViewItem, MonthViewService } from './month-view.service';\nexport class MonthViewComponent implements OnDestroy {\nprivate _subscription: Subscription;\n/**\n * @param {?} _datePicker\n * @param {?} monthService\n */\nconstructor(private _datePicker: DateTimePickerService,\npublic monthService: MonthViewService) {\n        this._subscription = _datePicker.headerEvent$\n            .subscribe(event => event === DatePickerHeaderEvent.Next ? this.next() : this.previous());\n    }\n/**\n * @return {?}\n */\nngOnDestroy(): void {\n        this._subscription.unsubscribe();\n    }\n/**\n * Go to the previous year\n * @return {?}\n */\nprevious(): void {\n        this._datePicker.setViewportYear(this._datePicker.year$.value - 1);\n    }\n/**\n * Go to the next year\n * @return {?}\n */\nnext(): void {\n        this._datePicker.setViewportYear(this._datePicker.year$.value + 1);\n    }\n/**\n * Select a month in the calendar\n * @param {?} month the index of the month to select\n * @return {?}\n */\nselect(month: number): void {\n        this._datePicker.setViewportMonth(month);\n\n        // show the day picker\n        this._datePicker.goToChildMode();\n    }\n/**\n * @param {?} item\n * @param {?} monthOffset\n * @return {?}\n */\nfocusMonth(item: MonthViewItem, monthOffset: number): void {\n        let /** @type {?} */ targetMonth = item.month + monthOffset;\n        let /** @type {?} */ targetYear = item.year;\n\n        if (targetMonth < 0) {\n            targetMonth += 12;\n            targetYear -= 1;\n        }\n\n        if (targetMonth >= 12) {\n            targetMonth -= 12;\n            targetYear += 1;\n        }\n\n        this.monthService.setFocus(targetMonth, targetYear);\n    }\n/**\n * @param {?} index\n * @return {?}\n */\ntrackRowByFn(index: number): number {\n        return index;\n    }\n/**\n * @param {?} index\n * @param {?} item\n * @return {?}\n */\ntrackMonthByFn(index: number, item: MonthViewItem): string {\n        return `${item.month} ${item.year}`;\n    }\n/**\n * @param {?} item\n * @return {?}\n */\ngetTabbable(item: MonthViewItem): boolean {\n        const /** @type {?} */ focused = this.monthService.focused$.value;\n        const /** @type {?} */ grid = this.monthService.grid$.value;\n\n        // if there is a focused month check if this is it\n        if (focused) {\n\n            // check if the focused month is visible\n            const /** @type {?} */ isFocusedMonthVisible = !!grid.find(row => !!row.find(_item => _item.month === focused.month && _item.year === focused.year));\n            \n            if (isFocusedMonthVisible) {\n                return focused.month === item.month && focused.year === item.year;\n            }\n        }\n\n        // if there is no focusable month then check if there is a selected month\n        const /** @type {?} */ isSelectedMonthVisible = !!grid.find(row => !!row.find(month => month.isActiveMonth));\n\n        if (isSelectedMonthVisible) {\n            return item.isActiveMonth;\n        }\n\n        // otherwise make the first month tabbable\n        return item.month === 0;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-date-time-picker-month-view',\n    template: `\n      <div class=\"calendar\" role=\"grid\">\n        <div class=\"calendar-row\" *ngFor=\"let row of monthService.grid$ | async; trackBy: trackRowByFn\" role=\"row\">\n\n          <button role=\"gridcell\"\n               class=\"calendar-item\"\n               *ngFor=\"let item of row; trackBy: trackMonthByFn\"\n               [focusIf]=\"(monthService.focused$ | async)?.month === item.month && (monthService.focused$ | async)?.year === item.year\"\n               [tabindex]=\"getTabbable(item) ? 0 : -1\"\n               [attr.aria-label]=\"item.name + ' ' + item.year\"\n               [attr.aria-selected]=\"item.isActiveMonth\"\n               [class.active]=\"item.isActiveMonth\"\n               [class.current]=\"item.isCurrentMonth\"\n               (click)=\"select(item.month); $event.stopPropagation()\"\n               (keydown.ArrowLeft)=\"focusMonth(item, -1); $event.preventDefault()\"\n               (keydown.ArrowRight)=\"focusMonth(item, 1); $event.preventDefault()\"\n               (keydown.ArrowUp)=\"focusMonth(item, -4); $event.preventDefault()\"\n               (keydown.ArrowDown)=\"focusMonth(item, 4); $event.preventDefault()\">\n               {{ item.name }}\n          </button>\n        </div>\n      </div>\n    `,\n    providers: [MonthViewService],\n    changeDetection: ChangeDetectionStrategy.OnPush\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: DateTimePickerService, },\n{type: MonthViewService, },\n];\n}\n\nfunction MonthViewComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nMonthViewComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMonthViewComponent.ctorParameters;\n/** @type {?} */\nMonthViewComponent.prototype._subscription;\n/** @type {?} */\nMonthViewComponent.prototype._datePicker;\n/** @type {?} */\nMonthViewComponent.prototype.monthService;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, ChangeDetectionStrategy } from '@angular/core';\nimport { DateTimePickerService } from '../date-time-picker.service';\nexport class TimeViewComponent {\n/**\n * @param {?} datepicker\n */\nconstructor(public datepicker: DateTimePickerService) { }\n/**\n * @param {?} name\n * @return {?}\n */\nselectTimezone(name: string): void {\n        const /** @type {?} */ timezones = this.datepicker.timezones$.value;\n        \n        // find matching timezone\n        const /** @type {?} */ timezone = timezones.find(_timezone => _timezone.name === name);\n\n        if (timezone) {\n            this.datepicker.setTimezone(timezone);\n        }\n    }\n/**\n * @return {?}\n */\nincrementTimezone(): void {\n        const /** @type {?} */ timezone = this.datepicker.timezone$.value;\n        const /** @type {?} */ timezones = this.datepicker.timezones$.value;\n\n        const /** @type {?} */ currentZone = timezones.findIndex(zone => zone.name === timezone.name && zone.offset === timezone.offset);\n\n        // try to get the previous zone\n        this.datepicker.setTimezone(timezones[currentZone + 1] ? timezones[currentZone + 1] : timezones[currentZone]);\n    }\n/**\n * @return {?}\n */\ndecrementTimezone(): void {\n        const /** @type {?} */ timezone = this.datepicker.timezone$.value;\n        const /** @type {?} */ timezones = this.datepicker.timezones$.value;\n\n        const /** @type {?} */ currentZone = timezones.findIndex(zone => zone.name === timezone.name && zone.offset === timezone.offset);\n\n        // try to get the previous zone\n        this.datepicker.setTimezone(timezones[currentZone - 1] ? timezones[currentZone - 1] : timezones[currentZone]);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-date-time-picker-time-view',\n    template: `\n      <ux-time-picker *ngIf=\"datepicker.showTime$ | async\"\n          [value]=\"datepicker.selected$ | async\"\n          (valueChange)=\"datepicker.selected$.next($event)\"\n          [showSeconds]=\"datepicker.showSeconds$ | async\"\n          [showMeridian]=\"datepicker.showMeridian$ | async\"\n          [showSpinners]=\"datepicker.showSpinners$ | async\">\n      </ux-time-picker>\n\n      <ng-container *ngIf=\"datepicker.showTimezone$ | async\">\n\n          <div class=\"time-zone-picker\" *ngIf=\"datepicker.showSpinners$ | async\">\n\n              <ux-spin-button\n                  class=\"time-zone-spinner\"\n                  [value]=\"(datepicker.timezone$ | async).name\"\n                  [readOnly]=\"true\"\n                  (increment)=\"incrementTimezone()\"\n                  (decrement)=\"decrementTimezone()\"\n                  inputAriaLabel=\"Time Zone\"\n                  incrementAriaLabel=\"Switch to the next time zone\"\n                  decrementAriaLabel=\"Switch to the previous time zone\">\n              </ux-spin-button>\n          </div>\n\n          <div class=\"time-zone-picker\" *ngIf=\"!(datepicker.showSpinners$ | async)\">\n\n              <select class=\"form-control time-zone-select\"\n                      tabindex=\"0\"\n                      [ngModel]=\"(datepicker.timezone$ | async).name\"\n                      (ngModelChange)=\"selectTimezone($event)\"\n                      aria-label=\"Timezone\"\n                      [attr.aria-valuenow]=\"(datepicker.timezone$ | async).name\">\n\n                  <option *ngFor=\"let zone of datepicker.timezones$ | async\"\n                          [selected]=\"zone.name === (datepicker.timezone$ | async).name\"\n                          [value]=\"zone.name\">\n                      {{ zone?.name }}\n                  </option>\n\n              </select>\n          </div>\n\n      </ng-container>\n    `,\n    changeDetection: ChangeDetectionStrategy.OnPush\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: DateTimePickerService, },\n];\n}\n\nfunction TimeViewComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nTimeViewComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTimeViewComponent.ctorParameters;\n/** @type {?} */\nTimeViewComponent.prototype.datepicker;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { Subscription } from 'rxjs/Subscription';\nimport { DatePickerHeaderEvent, DateTimePickerService } from '../date-time-picker.service';\nimport { gridify, range } from '../date-time-picker.utils';\nexport class YearViewService implements OnDestroy {\n\n    grid$ = new BehaviorSubject<YearViewItem[][]>([[]]);\n    focused$ = new BehaviorSubject<number>(null);\nprivate _year: number = new Date().getFullYear();\nprivate _subscription = new Subscription();\n/**\n * @param {?} _datepicker\n */\nconstructor(private _datepicker: DateTimePickerService) {\n        const year = _datepicker.year$.subscribe(_year => this.createYearGrid(_year));\n\n        const event = _datepicker.headerEvent$\n            .subscribe(_event => _event === DatePickerHeaderEvent.Next ? this.goToNextDecade() : this.goToPreviousDecade());\n\n        this._subscription.add(year);\n        this._subscription.add(event);\n    }\n/**\n * @return {?}\n */\nngOnDestroy(): void {\n        this._subscription.unsubscribe();\n    }\n/**\n * @param {?} year\n * @return {?}\n */\nsetFocus(year: number): void {\n        this.focused$.next(year);\n        this.createYearGrid(year);\n    }\n/**\n * @return {?}\n */\ngoToPreviousDecade(): void {\n        this.createYearGrid(this._year - 10);\n    }\n/**\n * @return {?}\n */\ngoToNextDecade(): void {\n        this.createYearGrid(this._year + 10);\n    }\n/**\n * @param {?=} year\n * @return {?}\n */\nprivate createYearGrid(year: number = this._year): void {\n\n        this._year = year;\n\n        // get the years to display\n        const /** @type {?} */ decade = this.getDecade(year);\n\n        const /** @type {?} */ currentYear = new Date().getFullYear();\n\n        // produce items in the correct format\n        const /** @type {?} */ items: YearViewItem[] = decade.range.map(_year => {\n            return {\n                year: _year,\n                isCurrentYear: _year === currentYear,\n                isActiveYear: _year === this._datepicker.year$.value\n            };\n        });\n\n        // update the header text\n        this._datepicker.setHeader(decade.start + ' - ' + decade.end);\n\n        // create the grid\n        this.grid$.next(gridify(items, 4));\n    }\n/**\n * Get the years in the current decade to display\n * @param {?} year\n * @return {?}\n */\nprivate getDecade(year: number): YearRange {\n\n        // figure the start and end points\n        const /** @type {?} */ start = (year - (year % 10));\n        const /** @type {?} */ end = start + 9;\n\n        // create an array containing all the numbers between the start and end points\n        return { start: start, end: end, range: range(start, end) };\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: DateTimePickerService, },\n];\n}\n\nfunction YearViewService_tsickle_Closure_declarations() {\n/** @type {?} */\nYearViewService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nYearViewService.ctorParameters;\n/** @type {?} */\nYearViewService.prototype.grid$;\n/** @type {?} */\nYearViewService.prototype.focused$;\n/** @type {?} */\nYearViewService.prototype._year;\n/** @type {?} */\nYearViewService.prototype._subscription;\n/** @type {?} */\nYearViewService.prototype._datepicker;\n}\n\n\n\nexport interface YearRange {\n    start: number;\n    end: number;\n    range: number[];\n}\n\nexport interface YearViewItem {\n    year: number;\n    isCurrentYear: boolean;\n    isActiveYear: boolean;\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, ChangeDetectionStrategy } from '@angular/core';\nimport { DatePickerMode, DateTimePickerService } from '../date-time-picker.service';\nimport { YearViewService, YearViewItem } from './year-view.service';\nexport class YearViewComponent {\n/**\n * @param {?} _datePicker\n * @param {?} yearService\n */\nconstructor(private _datePicker: DateTimePickerService,\npublic yearService: YearViewService) {}\n/**\n * @param {?} year\n * @return {?}\n */\nselect(year: number): void {\n    this._datePicker.setViewportYear(year);\n\n    // show the month picker\n    this._datePicker.goToChildMode();\n  }\n/**\n * @param {?} item\n * @param {?} yearOffset\n * @return {?}\n */\nfocusYear(item: YearViewItem, yearOffset: number): void {\n    this.yearService.setFocus(item.year + yearOffset);\n  }\n/**\n * @param {?} index\n * @return {?}\n */\ntrackRowByFn(index: number): number {\n    return index;\n  }\n/**\n * @param {?} index\n * @param {?} item\n * @return {?}\n */\ntrackYearByFn(index: number, item: YearViewItem): number {\n    return item.year;\n  }\n/**\n * @param {?} item\n * @return {?}\n */\ngetTabbable(item: YearViewItem): boolean {\n    const /** @type {?} */ focused = this.yearService.focused$.value;\n    const /** @type {?} */ grid = this.yearService.grid$.value;\n\n    // if there is a focused year check if this is it\n    if (focused) {\n\n        // check if the focused year is visible\n        const /** @type {?} */ isFocusedYearVisible = !!grid.find(row => !!row.find(_item => _item.year === focused));\n        \n        if (isFocusedYearVisible) {\n            return focused === item.year;\n        }\n    }\n\n    // if there is no focusable year then check if there is a selected year\n    const /** @type {?} */ isSelectedYearVisible = !!grid.find(row => !!row.find(year => year.isActiveYear));\n\n    if (isSelectedYearVisible) {\n        return item.isActiveYear;\n    }\n\n    // otherwise make the first month tabbable\n    return grid[0][0].year === item.year;\n}\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'ux-date-time-picker-year-view',\n  template: `\n    <div class=\"calendar\" role=\"grid\">\n      <div class=\"calendar-row\" role=\"row\" *ngFor=\"let row of yearService.grid$ | async; trackBy: trackRowByFn\">\n\n        <button *ngFor=\"let item of row; trackBy: trackYearByFn\"\n             role=\"gridcell\"\n             class=\"calendar-item\"\n             [focusIf]=\"(yearService.focused$ | async) === item.year\"\n             [attr.aria-label]=\"item.year\"\n             [attr.aria-selected]=\"item.isActiveYear\"\n             [class.current]=\"item.isCurrentYear\"\n             [class.active]=\"item.isActiveYear\"\n             (click)=\"select(item.year); $event.stopPropagation()\"\n             (keydown.ArrowLeft)=\"focusYear(item, -1); $event.preventDefault()\"\n             (keydown.ArrowRight)=\"focusYear(item, 1); $event.preventDefault()\"\n             (keydown.ArrowUp)=\"focusYear(item, -4); $event.preventDefault()\"\n             (keydown.ArrowDown)=\"focusYear(item, 4); $event.preventDefault()\"\n             [tabindex]=\"getTabbable(item) ? 0 : -1\">\n             {{ item.year }}\n        </button>\n      </div>\n    </div>\n  `,\n  providers: [YearViewService],\n  changeDetection: ChangeDetectionStrategy.OnPush\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: DateTimePickerService, },\n{type: YearViewService, },\n];\n}\n\nfunction YearViewComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nYearViewComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nYearViewComponent.ctorParameters;\n/** @type {?} */\nYearViewComponent.prototype._datePicker;\n/** @type {?} */\nYearViewComponent.prototype.yearService;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ElementRef, Input } from '@angular/core';\nexport class FocusIfDirective {\n\n     focusIfDelay: number = 0;\n/**\n * @param {?} focus\n * @return {?}\n */\nset focusIf(focus: boolean) {\n\n        // if a timeout is pending then cancel it\n        if (!focus && this._timeout !== null) {\n            clearTimeout(this._timeout);\n        }\n\n        if (focus && this._timeout === null) {\n            this._timeout = window.setTimeout(() => {\n                this._elementRef.nativeElement.focus();\n                this._timeout = null;\n            }, this.focusIfDelay);\n        }\n    }\nprivate _timeout: number = null;\n/**\n * @param {?} _elementRef\n */\nconstructor(private _elementRef: ElementRef) { }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: '[focusIf]'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'focusIfDelay': [{ type: Input },],\n'focusIf': [{ type: Input },],\n};\n}\n\nfunction FocusIfDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nFocusIfDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFocusIfDirective.ctorParameters;\n/** @type {?} */\nFocusIfDirective.propDecorators;\n/** @type {?} */\nFocusIfDirective.prototype.focusIfDelay;\n/** @type {?} */\nFocusIfDirective.prototype._timeout;\n/** @type {?} */\nFocusIfDirective.prototype._elementRef;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { FocusIfDirective } from './focus-if.directive';\nexport class FocusIfModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    exports: [FocusIfDirective],\n    declarations: [FocusIfDirective]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction FocusIfModule_tsickle_Closure_declarations() {\n/** @type {?} */\nFocusIfModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFocusIfModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { SpinButtonModule } from '../spin-button/index';\nimport { TimePickerModule } from '../time-picker/index';\nimport { DateTimePickerComponent } from './date-time-picker.component';\nimport { DateTimePickerConfig } from './date-time-picker.config';\nimport { DayViewComponent } from './day-view/day-view.component';\nimport { HeaderComponent } from './header/header.component';\nimport { MonthViewComponent } from './month-view/month-view.component';\nimport { TimeViewComponent } from './time-view/time-view.component';\nimport { YearViewComponent } from './year-view/year-view.component';\nimport { FocusIfModule } from '../../directives/focus-if/index';\nexport class DateTimePickerModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        CommonModule,\n        FormsModule,\n        TimePickerModule,\n        SpinButtonModule,\n        FocusIfModule\n    ],\n    exports: [DateTimePickerComponent],\n    declarations: [DateTimePickerComponent, HeaderComponent, DayViewComponent, MonthViewComponent, YearViewComponent, TimeViewComponent],\n    providers: [\n        DateTimePickerConfig\n    ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction DateTimePickerModule_tsickle_Closure_declarations() {\n/** @type {?} */\nDateTimePickerModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDateTimePickerModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Directive } from '@angular/core';\nexport class EboxComponent { static decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-ebox',\n    template: `\n      <div class=\"ux-ebox-header\">\n          <ng-content select=\"ux-ebox-header\"></ng-content>\n      </div>\n\n      <div class=\"ux-ebox-content\">\n          <ng-content select=\"ux-ebox-content\"></ng-content>\n      </div>\n    `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction EboxComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nEboxComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nEboxComponent.ctorParameters;\n}\n\nexport class EboxHeaderDirective { static decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'ux-ebox-header'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction EboxHeaderDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nEboxHeaderDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nEboxHeaderDirective.ctorParameters;\n}\n\nexport class EboxContentDirective { static decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'ux-ebox-content'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction EboxContentDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nEboxContentDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nEboxContentDirective.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\n\nimport { EboxComponent, EboxContentDirective, EboxHeaderDirective } from './ebox.component';\nexport class EboxModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    exports: [EboxComponent, EboxContentDirective, EboxHeaderDirective],\n    declarations: [EboxComponent, EboxContentDirective, EboxHeaderDirective]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction EboxModule_tsickle_Closure_declarations() {\n/** @type {?} */\nEboxModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nEboxModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/* tslint:disable */\nexport const latinMap: { [key: string]: string } = {\n    'Á': 'A',\n    'Ă': 'A',\n    'Ắ': 'A',\n    'Ặ': 'A',\n    'Ằ': 'A',\n    'Ẳ': 'A',\n    'Ẵ': 'A',\n    'Ǎ': 'A',\n    'Â': 'A',\n    'Ấ': 'A',\n    'Ậ': 'A',\n    'Ầ': 'A',\n    'Ẩ': 'A',\n    'Ẫ': 'A',\n    'Ä': 'A',\n    'Ǟ': 'A',\n    'Ȧ': 'A',\n    'Ǡ': 'A',\n    'Ạ': 'A',\n    'Ȁ': 'A',\n    'À': 'A',\n    'Ả': 'A',\n    'Ȃ': 'A',\n    'Ā': 'A',\n    'Ą': 'A',\n    'Å': 'A',\n    'Ǻ': 'A',\n    'Ḁ': 'A',\n    'Ⱥ': 'A',\n    'Ã': 'A',\n    'Ꜳ': 'AA',\n    'Æ': 'AE',\n    'Ǽ': 'AE',\n    'Ǣ': 'AE',\n    'Ꜵ': 'AO',\n    'Ꜷ': 'AU',\n    'Ꜹ': 'AV',\n    'Ꜻ': 'AV',\n    'Ꜽ': 'AY',\n    'Ḃ': 'B',\n    'Ḅ': 'B',\n    'Ɓ': 'B',\n    'Ḇ': 'B',\n    'Ƀ': 'B',\n    'Ƃ': 'B',\n    'Ć': 'C',\n    'Č': 'C',\n    'Ç': 'C',\n    'Ḉ': 'C',\n    'Ĉ': 'C',\n    'Ċ': 'C',\n    'Ƈ': 'C',\n    'Ȼ': 'C',\n    'Ď': 'D',\n    'Ḑ': 'D',\n    'Ḓ': 'D',\n    'Ḋ': 'D',\n    'Ḍ': 'D',\n    'Ɗ': 'D',\n    'Ḏ': 'D',\n    'ǲ': 'D',\n    'ǅ': 'D',\n    'Đ': 'D',\n    'Ƌ': 'D',\n    'Ǳ': 'DZ',\n    'Ǆ': 'DZ',\n    'É': 'E',\n    'Ĕ': 'E',\n    'Ě': 'E',\n    'Ȩ': 'E',\n    'Ḝ': 'E',\n    'Ê': 'E',\n    'Ế': 'E',\n    'Ệ': 'E',\n    'Ề': 'E',\n    'Ể': 'E',\n    'Ễ': 'E',\n    'Ḙ': 'E',\n    'Ë': 'E',\n    'Ė': 'E',\n    'Ẹ': 'E',\n    'Ȅ': 'E',\n    'È': 'E',\n    'Ẻ': 'E',\n    'Ȇ': 'E',\n    'Ē': 'E',\n    'Ḗ': 'E',\n    'Ḕ': 'E',\n    'Ę': 'E',\n    'Ɇ': 'E',\n    'Ẽ': 'E',\n    'Ḛ': 'E',\n    'Ꝫ': 'ET',\n    'Ḟ': 'F',\n    'Ƒ': 'F',\n    'Ǵ': 'G',\n    'Ğ': 'G',\n    'Ǧ': 'G',\n    'Ģ': 'G',\n    'Ĝ': 'G',\n    'Ġ': 'G',\n    'Ɠ': 'G',\n    'Ḡ': 'G',\n    'Ǥ': 'G',\n    'Ḫ': 'H',\n    'Ȟ': 'H',\n    'Ḩ': 'H',\n    'Ĥ': 'H',\n    'Ⱨ': 'H',\n    'Ḧ': 'H',\n    'Ḣ': 'H',\n    'Ḥ': 'H',\n    'Ħ': 'H',\n    'Í': 'I',\n    'Ĭ': 'I',\n    'Ǐ': 'I',\n    'Î': 'I',\n    'Ï': 'I',\n    'Ḯ': 'I',\n    'İ': 'I',\n    'Ị': 'I',\n    'Ȉ': 'I',\n    'Ì': 'I',\n    'Ỉ': 'I',\n    'Ȋ': 'I',\n    'Ī': 'I',\n    'Į': 'I',\n    'Ɨ': 'I',\n    'Ĩ': 'I',\n    'Ḭ': 'I',\n    'Ꝺ': 'D',\n    'Ꝼ': 'F',\n    'Ᵹ': 'G',\n    'Ꞃ': 'R',\n    'Ꞅ': 'S',\n    'Ꞇ': 'T',\n    'Ꝭ': 'IS',\n    'Ĵ': 'J',\n    'Ɉ': 'J',\n    'Ḱ': 'K',\n    'Ǩ': 'K',\n    'Ķ': 'K',\n    'Ⱪ': 'K',\n    'Ꝃ': 'K',\n    'Ḳ': 'K',\n    'Ƙ': 'K',\n    'Ḵ': 'K',\n    'Ꝁ': 'K',\n    'Ꝅ': 'K',\n    'Ĺ': 'L',\n    'Ƚ': 'L',\n    'Ľ': 'L',\n    'Ļ': 'L',\n    'Ḽ': 'L',\n    'Ḷ': 'L',\n    'Ḹ': 'L',\n    'Ⱡ': 'L',\n    'Ꝉ': 'L',\n    'Ḻ': 'L',\n    'Ŀ': 'L',\n    'Ɫ': 'L',\n    'ǈ': 'L',\n    'Ł': 'L',\n    'Ǉ': 'LJ',\n    'Ḿ': 'M',\n    'Ṁ': 'M',\n    'Ṃ': 'M',\n    'Ɱ': 'M',\n    'Ń': 'N',\n    'Ň': 'N',\n    'Ņ': 'N',\n    'Ṋ': 'N',\n    'Ṅ': 'N',\n    'Ṇ': 'N',\n    'Ǹ': 'N',\n    'Ɲ': 'N',\n    'Ṉ': 'N',\n    'Ƞ': 'N',\n    'ǋ': 'N',\n    'Ñ': 'N',\n    'Ǌ': 'NJ',\n    'Ó': 'O',\n    'Ŏ': 'O',\n    'Ǒ': 'O',\n    'Ô': 'O',\n    'Ố': 'O',\n    'Ộ': 'O',\n    'Ồ': 'O',\n    'Ổ': 'O',\n    'Ỗ': 'O',\n    'Ö': 'O',\n    'Ȫ': 'O',\n    'Ȯ': 'O',\n    'Ȱ': 'O',\n    'Ọ': 'O',\n    'Ő': 'O',\n    'Ȍ': 'O',\n    'Ò': 'O',\n    'Ỏ': 'O',\n    'Ơ': 'O',\n    'Ớ': 'O',\n    'Ợ': 'O',\n    'Ờ': 'O',\n    'Ở': 'O',\n    'Ỡ': 'O',\n    'Ȏ': 'O',\n    'Ꝋ': 'O',\n    'Ꝍ': 'O',\n    'Ō': 'O',\n    'Ṓ': 'O',\n    'Ṑ': 'O',\n    'Ɵ': 'O',\n    'Ǫ': 'O',\n    'Ǭ': 'O',\n    'Ø': 'O',\n    'Ǿ': 'O',\n    'Õ': 'O',\n    'Ṍ': 'O',\n    'Ṏ': 'O',\n    'Ȭ': 'O',\n    'Ƣ': 'OI',\n    'Ꝏ': 'OO',\n    'Ɛ': 'E',\n    'Ɔ': 'O',\n    'Ȣ': 'OU',\n    'Ṕ': 'P',\n    'Ṗ': 'P',\n    'Ꝓ': 'P',\n    'Ƥ': 'P',\n    'Ꝕ': 'P',\n    'Ᵽ': 'P',\n    'Ꝑ': 'P',\n    'Ꝙ': 'Q',\n    'Ꝗ': 'Q',\n    'Ŕ': 'R',\n    'Ř': 'R',\n    'Ŗ': 'R',\n    'Ṙ': 'R',\n    'Ṛ': 'R',\n    'Ṝ': 'R',\n    'Ȑ': 'R',\n    'Ȓ': 'R',\n    'Ṟ': 'R',\n    'Ɍ': 'R',\n    'Ɽ': 'R',\n    'Ꜿ': 'C',\n    'Ǝ': 'E',\n    'Ś': 'S',\n    'Ṥ': 'S',\n    'Š': 'S',\n    'Ṧ': 'S',\n    'Ş': 'S',\n    'Ŝ': 'S',\n    'Ș': 'S',\n    'Ṡ': 'S',\n    'Ṣ': 'S',\n    'Ṩ': 'S',\n    'Ť': 'T',\n    'Ţ': 'T',\n    'Ṱ': 'T',\n    'Ț': 'T',\n    'Ⱦ': 'T',\n    'Ṫ': 'T',\n    'Ṭ': 'T',\n    'Ƭ': 'T',\n    'Ṯ': 'T',\n    'Ʈ': 'T',\n    'Ŧ': 'T',\n    'Ɐ': 'A',\n    'Ꞁ': 'L',\n    'Ɯ': 'M',\n    'Ʌ': 'V',\n    'Ꜩ': 'TZ',\n    'Ú': 'U',\n    'Ŭ': 'U',\n    'Ǔ': 'U',\n    'Û': 'U',\n    'Ṷ': 'U',\n    'Ü': 'U',\n    'Ǘ': 'U',\n    'Ǚ': 'U',\n    'Ǜ': 'U',\n    'Ǖ': 'U',\n    'Ṳ': 'U',\n    'Ụ': 'U',\n    'Ű': 'U',\n    'Ȕ': 'U',\n    'Ù': 'U',\n    'Ủ': 'U',\n    'Ư': 'U',\n    'Ứ': 'U',\n    'Ự': 'U',\n    'Ừ': 'U',\n    'Ử': 'U',\n    'Ữ': 'U',\n    'Ȗ': 'U',\n    'Ū': 'U',\n    'Ṻ': 'U',\n    'Ų': 'U',\n    'Ů': 'U',\n    'Ũ': 'U',\n    'Ṹ': 'U',\n    'Ṵ': 'U',\n    'Ꝟ': 'V',\n    'Ṿ': 'V',\n    'Ʋ': 'V',\n    'Ṽ': 'V',\n    'Ꝡ': 'VY',\n    'Ẃ': 'W',\n    'Ŵ': 'W',\n    'Ẅ': 'W',\n    'Ẇ': 'W',\n    'Ẉ': 'W',\n    'Ẁ': 'W',\n    'Ⱳ': 'W',\n    'Ẍ': 'X',\n    'Ẋ': 'X',\n    'Ý': 'Y',\n    'Ŷ': 'Y',\n    'Ÿ': 'Y',\n    'Ẏ': 'Y',\n    'Ỵ': 'Y',\n    'Ỳ': 'Y',\n    'Ƴ': 'Y',\n    'Ỷ': 'Y',\n    'Ỿ': 'Y',\n    'Ȳ': 'Y',\n    'Ɏ': 'Y',\n    'Ỹ': 'Y',\n    'Ź': 'Z',\n    'Ž': 'Z',\n    'Ẑ': 'Z',\n    'Ⱬ': 'Z',\n    'Ż': 'Z',\n    'Ẓ': 'Z',\n    'Ȥ': 'Z',\n    'Ẕ': 'Z',\n    'Ƶ': 'Z',\n    'Ĳ': 'IJ',\n    'Œ': 'OE',\n    'ᴀ': 'A',\n    'ᴁ': 'AE',\n    'ʙ': 'B',\n    'ᴃ': 'B',\n    'ᴄ': 'C',\n    'ᴅ': 'D',\n    'ᴇ': 'E',\n    'ꜰ': 'F',\n    'ɢ': 'G',\n    'ʛ': 'G',\n    'ʜ': 'H',\n    'ɪ': 'I',\n    'ʁ': 'R',\n    'ᴊ': 'J',\n    'ᴋ': 'K',\n    'ʟ': 'L',\n    'ᴌ': 'L',\n    'ᴍ': 'M',\n    'ɴ': 'N',\n    'ᴏ': 'O',\n    'ɶ': 'OE',\n    'ᴐ': 'O',\n    'ᴕ': 'OU',\n    'ᴘ': 'P',\n    'ʀ': 'R',\n    'ᴎ': 'N',\n    'ᴙ': 'R',\n    'ꜱ': 'S',\n    'ᴛ': 'T',\n    'ⱻ': 'E',\n    'ᴚ': 'R',\n    'ᴜ': 'U',\n    'ᴠ': 'V',\n    'ᴡ': 'W',\n    'ʏ': 'Y',\n    'ᴢ': 'Z',\n    'á': 'a',\n    'ă': 'a',\n    'ắ': 'a',\n    'ặ': 'a',\n    'ằ': 'a',\n    'ẳ': 'a',\n    'ẵ': 'a',\n    'ǎ': 'a',\n    'â': 'a',\n    'ấ': 'a',\n    'ậ': 'a',\n    'ầ': 'a',\n    'ẩ': 'a',\n    'ẫ': 'a',\n    'ä': 'a',\n    'ǟ': 'a',\n    'ȧ': 'a',\n    'ǡ': 'a',\n    'ạ': 'a',\n    'ȁ': 'a',\n    'à': 'a',\n    'ả': 'a',\n    'ȃ': 'a',\n    'ā': 'a',\n    'ą': 'a',\n    'ᶏ': 'a',\n    'ẚ': 'a',\n    'å': 'a',\n    'ǻ': 'a',\n    'ḁ': 'a',\n    'ⱥ': 'a',\n    'ã': 'a',\n    'ꜳ': 'aa',\n    'æ': 'ae',\n    'ǽ': 'ae',\n    'ǣ': 'ae',\n    'ꜵ': 'ao',\n    'ꜷ': 'au',\n    'ꜹ': 'av',\n    'ꜻ': 'av',\n    'ꜽ': 'ay',\n    'ḃ': 'b',\n    'ḅ': 'b',\n    'ɓ': 'b',\n    'ḇ': 'b',\n    'ᵬ': 'b',\n    'ᶀ': 'b',\n    'ƀ': 'b',\n    'ƃ': 'b',\n    'ɵ': 'o',\n    'ć': 'c',\n    'č': 'c',\n    'ç': 'c',\n    'ḉ': 'c',\n    'ĉ': 'c',\n    'ɕ': 'c',\n    'ċ': 'c',\n    'ƈ': 'c',\n    'ȼ': 'c',\n    'ď': 'd',\n    'ḑ': 'd',\n    'ḓ': 'd',\n    'ȡ': 'd',\n    'ḋ': 'd',\n    'ḍ': 'd',\n    'ɗ': 'd',\n    'ᶑ': 'd',\n    'ḏ': 'd',\n    'ᵭ': 'd',\n    'ᶁ': 'd',\n    'đ': 'd',\n    'ɖ': 'd',\n    'ƌ': 'd',\n    'ı': 'i',\n    'ȷ': 'j',\n    'ɟ': 'j',\n    'ʄ': 'j',\n    'ǳ': 'dz',\n    'ǆ': 'dz',\n    'é': 'e',\n    'ĕ': 'e',\n    'ě': 'e',\n    'ȩ': 'e',\n    'ḝ': 'e',\n    'ê': 'e',\n    'ế': 'e',\n    'ệ': 'e',\n    'ề': 'e',\n    'ể': 'e',\n    'ễ': 'e',\n    'ḙ': 'e',\n    'ë': 'e',\n    'ė': 'e',\n    'ẹ': 'e',\n    'ȅ': 'e',\n    'è': 'e',\n    'ẻ': 'e',\n    'ȇ': 'e',\n    'ē': 'e',\n    'ḗ': 'e',\n    'ḕ': 'e',\n    'ⱸ': 'e',\n    'ę': 'e',\n    'ᶒ': 'e',\n    'ɇ': 'e',\n    'ẽ': 'e',\n    'ḛ': 'e',\n    'ꝫ': 'et',\n    'ḟ': 'f',\n    'ƒ': 'f',\n    'ᵮ': 'f',\n    'ᶂ': 'f',\n    'ǵ': 'g',\n    'ğ': 'g',\n    'ǧ': 'g',\n    'ģ': 'g',\n    'ĝ': 'g',\n    'ġ': 'g',\n    'ɠ': 'g',\n    'ḡ': 'g',\n    'ᶃ': 'g',\n    'ǥ': 'g',\n    'ḫ': 'h',\n    'ȟ': 'h',\n    'ḩ': 'h',\n    'ĥ': 'h',\n    'ⱨ': 'h',\n    'ḧ': 'h',\n    'ḣ': 'h',\n    'ḥ': 'h',\n    'ɦ': 'h',\n    'ẖ': 'h',\n    'ħ': 'h',\n    'ƕ': 'hv',\n    'í': 'i',\n    'ĭ': 'i',\n    'ǐ': 'i',\n    'î': 'i',\n    'ï': 'i',\n    'ḯ': 'i',\n    'ị': 'i',\n    'ȉ': 'i',\n    'ì': 'i',\n    'ỉ': 'i',\n    'ȋ': 'i',\n    'ī': 'i',\n    'į': 'i',\n    'ᶖ': 'i',\n    'ɨ': 'i',\n    'ĩ': 'i',\n    'ḭ': 'i',\n    'ꝺ': 'd',\n    'ꝼ': 'f',\n    'ᵹ': 'g',\n    'ꞃ': 'r',\n    'ꞅ': 's',\n    'ꞇ': 't',\n    'ꝭ': 'is',\n    'ǰ': 'j',\n    'ĵ': 'j',\n    'ʝ': 'j',\n    'ɉ': 'j',\n    'ḱ': 'k',\n    'ǩ': 'k',\n    'ķ': 'k',\n    'ⱪ': 'k',\n    'ꝃ': 'k',\n    'ḳ': 'k',\n    'ƙ': 'k',\n    'ḵ': 'k',\n    'ᶄ': 'k',\n    'ꝁ': 'k',\n    'ꝅ': 'k',\n    'ĺ': 'l',\n    'ƚ': 'l',\n    'ɬ': 'l',\n    'ľ': 'l',\n    'ļ': 'l',\n    'ḽ': 'l',\n    'ȴ': 'l',\n    'ḷ': 'l',\n    'ḹ': 'l',\n    'ⱡ': 'l',\n    'ꝉ': 'l',\n    'ḻ': 'l',\n    'ŀ': 'l',\n    'ɫ': 'l',\n    'ᶅ': 'l',\n    'ɭ': 'l',\n    'ł': 'l',\n    'ǉ': 'lj',\n    'ſ': 's',\n    'ẜ': 's',\n    'ẛ': 's',\n    'ẝ': 's',\n    'ḿ': 'm',\n    'ṁ': 'm',\n    'ṃ': 'm',\n    'ɱ': 'm',\n    'ᵯ': 'm',\n    'ᶆ': 'm',\n    'ń': 'n',\n    'ň': 'n',\n    'ņ': 'n',\n    'ṋ': 'n',\n    'ȵ': 'n',\n    'ṅ': 'n',\n    'ṇ': 'n',\n    'ǹ': 'n',\n    'ɲ': 'n',\n    'ṉ': 'n',\n    'ƞ': 'n',\n    'ᵰ': 'n',\n    'ᶇ': 'n',\n    'ɳ': 'n',\n    'ñ': 'n',\n    'ǌ': 'nj',\n    'ó': 'o',\n    'ŏ': 'o',\n    'ǒ': 'o',\n    'ô': 'o',\n    'ố': 'o',\n    'ộ': 'o',\n    'ồ': 'o',\n    'ổ': 'o',\n    'ỗ': 'o',\n    'ö': 'o',\n    'ȫ': 'o',\n    'ȯ': 'o',\n    'ȱ': 'o',\n    'ọ': 'o',\n    'ő': 'o',\n    'ȍ': 'o',\n    'ò': 'o',\n    'ỏ': 'o',\n    'ơ': 'o',\n    'ớ': 'o',\n    'ợ': 'o',\n    'ờ': 'o',\n    'ở': 'o',\n    'ỡ': 'o',\n    'ȏ': 'o',\n    'ꝋ': 'o',\n    'ꝍ': 'o',\n    'ⱺ': 'o',\n    'ō': 'o',\n    'ṓ': 'o',\n    'ṑ': 'o',\n    'ǫ': 'o',\n    'ǭ': 'o',\n    'ø': 'o',\n    'ǿ': 'o',\n    'õ': 'o',\n    'ṍ': 'o',\n    'ṏ': 'o',\n    'ȭ': 'o',\n    'ƣ': 'oi',\n    'ꝏ': 'oo',\n    'ɛ': 'e',\n    'ᶓ': 'e',\n    'ɔ': 'o',\n    'ᶗ': 'o',\n    'ȣ': 'ou',\n    'ṕ': 'p',\n    'ṗ': 'p',\n    'ꝓ': 'p',\n    'ƥ': 'p',\n    'ᵱ': 'p',\n    'ᶈ': 'p',\n    'ꝕ': 'p',\n    'ᵽ': 'p',\n    'ꝑ': 'p',\n    'ꝙ': 'q',\n    'ʠ': 'q',\n    'ɋ': 'q',\n    'ꝗ': 'q',\n    'ŕ': 'r',\n    'ř': 'r',\n    'ŗ': 'r',\n    'ṙ': 'r',\n    'ṛ': 'r',\n    'ṝ': 'r',\n    'ȑ': 'r',\n    'ɾ': 'r',\n    'ᵳ': 'r',\n    'ȓ': 'r',\n    'ṟ': 'r',\n    'ɼ': 'r',\n    'ᵲ': 'r',\n    'ᶉ': 'r',\n    'ɍ': 'r',\n    'ɽ': 'r',\n    'ↄ': 'c',\n    'ꜿ': 'c',\n    'ɘ': 'e',\n    'ɿ': 'r',\n    'ś': 's',\n    'ṥ': 's',\n    'š': 's',\n    'ṧ': 's',\n    'ş': 's',\n    'ŝ': 's',\n    'ș': 's',\n    'ṡ': 's',\n    'ṣ': 's',\n    'ṩ': 's',\n    'ʂ': 's',\n    'ᵴ': 's',\n    'ᶊ': 's',\n    'ȿ': 's',\n    'ɡ': 'g',\n    'ᴑ': 'o',\n    'ᴓ': 'o',\n    'ᴝ': 'u',\n    'ť': 't',\n    'ţ': 't',\n    'ṱ': 't',\n    'ț': 't',\n    'ȶ': 't',\n    'ẗ': 't',\n    'ⱦ': 't',\n    'ṫ': 't',\n    'ṭ': 't',\n    'ƭ': 't',\n    'ṯ': 't',\n    'ᵵ': 't',\n    'ƫ': 't',\n    'ʈ': 't',\n    'ŧ': 't',\n    'ᵺ': 'th',\n    'ɐ': 'a',\n    'ᴂ': 'ae',\n    'ǝ': 'e',\n    'ᵷ': 'g',\n    'ɥ': 'h',\n    'ʮ': 'h',\n    'ʯ': 'h',\n    'ᴉ': 'i',\n    'ʞ': 'k',\n    'ꞁ': 'l',\n    'ɯ': 'm',\n    'ɰ': 'm',\n    'ᴔ': 'oe',\n    'ɹ': 'r',\n    'ɻ': 'r',\n    'ɺ': 'r',\n    'ⱹ': 'r',\n    'ʇ': 't',\n    'ʌ': 'v',\n    'ʍ': 'w',\n    'ʎ': 'y',\n    'ꜩ': 'tz',\n    'ú': 'u',\n    'ŭ': 'u',\n    'ǔ': 'u',\n    'û': 'u',\n    'ṷ': 'u',\n    'ü': 'u',\n    'ǘ': 'u',\n    'ǚ': 'u',\n    'ǜ': 'u',\n    'ǖ': 'u',\n    'ṳ': 'u',\n    'ụ': 'u',\n    'ű': 'u',\n    'ȕ': 'u',\n    'ù': 'u',\n    'ủ': 'u',\n    'ư': 'u',\n    'ứ': 'u',\n    'ự': 'u',\n    'ừ': 'u',\n    'ử': 'u',\n    'ữ': 'u',\n    'ȗ': 'u',\n    'ū': 'u',\n    'ṻ': 'u',\n    'ų': 'u',\n    'ᶙ': 'u',\n    'ů': 'u',\n    'ũ': 'u',\n    'ṹ': 'u',\n    'ṵ': 'u',\n    'ᵫ': 'ue',\n    'ꝸ': 'um',\n    'ⱴ': 'v',\n    'ꝟ': 'v',\n    'ṿ': 'v',\n    'ʋ': 'v',\n    'ᶌ': 'v',\n    'ⱱ': 'v',\n    'ṽ': 'v',\n    'ꝡ': 'vy',\n    'ẃ': 'w',\n    'ŵ': 'w',\n    'ẅ': 'w',\n    'ẇ': 'w',\n    'ẉ': 'w',\n    'ẁ': 'w',\n    'ⱳ': 'w',\n    'ẘ': 'w',\n    'ẍ': 'x',\n    'ẋ': 'x',\n    'ᶍ': 'x',\n    'ý': 'y',\n    'ŷ': 'y',\n    'ÿ': 'y',\n    'ẏ': 'y',\n    'ỵ': 'y',\n    'ỳ': 'y',\n    'ƴ': 'y',\n    'ỷ': 'y',\n    'ỿ': 'y',\n    'ȳ': 'y',\n    'ẙ': 'y',\n    'ɏ': 'y',\n    'ỹ': 'y',\n    'ź': 'z',\n    'ž': 'z',\n    'ẑ': 'z',\n    'ʑ': 'z',\n    'ⱬ': 'z',\n    'ż': 'z',\n    'ẓ': 'z',\n    'ȥ': 'z',\n    'ẕ': 'z',\n    'ᵶ': 'z',\n    'ᶎ': 'z',\n    'ʐ': 'z',\n    'ƶ': 'z',\n    'ɀ': 'z',\n    'ﬀ': 'ff',\n    'ﬃ': 'ffi',\n    'ﬄ': 'ffl',\n    'ﬁ': 'fi',\n    'ﬂ': 'fl',\n    'ĳ': 'ij',\n    'œ': 'oe',\n    'ﬆ': 'st',\n    'ₐ': 'a',\n    'ₑ': 'e',\n    'ᵢ': 'i',\n    'ⱼ': 'j',\n    'ₒ': 'o',\n    'ᵣ': 'r',\n    'ᵤ': 'u',\n    'ᵥ': 'v',\n    'ₓ': 'x'\n};\n","export class TypeaheadMatch {\n  readonly value: string;\n  readonly item: any;\n  protected header: boolean;\n\n  constructor(item: any, value: string = item, header = false) {\n    this.item = item;\n    this.value = value;\n    this.header = header;\n  }\n\n  isHeader(): boolean {\n    return this.header;\n  }\n\n  toString(): string {\n    return this.value;\n  }\n}\n","import { latinMap } from './latin-map';\n\nexport function latinize(str: string): string {\n  if (!str) {\n    return '';\n  }\n\n  return str.replace(/[^A-Za-z0-9\\[\\] ]/g, function (a: string): string {\n    return latinMap[a] || a;\n  });\n}\n\nexport function escapeRegexp(queryToEscape: string): string {\n  // Regex: capture the whole query string and replace it with the string\n  // that will be used to match the results, for example if the capture is\n  // 'a' the result will be \\a\n  return queryToEscape.replace(/([.?*+^$[\\]\\\\(){}|-])/g, '\\\\$1');\n}\n\n/* tslint:disable */\nexport function tokenize(str: string,\n                         wordRegexDelimiters = ' ',\n                         phraseRegexDelimiters = ''): Array<string> {\n  /* tslint:enable */\n  const regexStr = `(?:[${phraseRegexDelimiters}])([^${phraseRegexDelimiters}]+)` +\n    `(?:[${phraseRegexDelimiters}])|([^${wordRegexDelimiters}]+)`;\n  const preTokenized: string[] = str.split(new RegExp(regexStr, 'g'));\n  const result: string[] = [];\n  const preTokenizedLength: number = preTokenized.length;\n  let token: string;\n  const replacePhraseDelimiters = new RegExp(`[${phraseRegexDelimiters}]+`, 'g');\n\n  for (let i = 0; i < preTokenizedLength; i += 1) {\n    token = preTokenized[i];\n    if (token && token.length && token !== wordRegexDelimiters) {\n      result.push(token.replace(replacePhraseDelimiters, ''));\n    }\n  }\n\n  return result;\n}\n\nexport function getValueFromObject(object: any, option: string): string {\n  if (!option || typeof object !== 'object') {\n    return object.toString();\n  }\n\n  if (option.endsWith('()')) {\n    const functionName = option.slice(0, option.length - 2);\n\n    return object[functionName]().toString();\n  }\n\n  const properties: string = option\n    .replace(/\\[(\\w+)\\]/g, '.$1')\n    .replace(/^\\./, '');\n  const propertiesArray: string[] = properties.split('.');\n\n  for (const property of propertiesArray) {\n    if (property in object) {\n      // tslint:disable-next-line\n      object = object[property];\n    }\n  }\n  if (!object) {return ''; }\n\n  return object.toString();\n}\n"],"names":["guessedVersion","win","window","document","location","isBs3","__theme","spanEl","createElement","innerText","body","appendChild","classList","add","rect","getBoundingClientRect","removeChild","top","_guessBsVersion","Trigger","open","close","this","prototype","isManual","Utils","reflow","element","offsetHeight","getStyles","elem","view","ownerDocument","defaultView","opener","getComputedStyle","TypeaheadContainerComponent","renderer","isFocused","_matches","isScrolledIntoView","containerViewTop","ulElement","nativeElement","scrollTop","containerViewBottom","elemTop","offsetTop","Object","defineProperty","get","_active","set","value","_this","needScrollbar","typeaheadScrollable","typeaheadOptionsInScrollableView","matches","length","setTimeout","setScrollableMode","isHeader","nextActiveMatch","parent","optionsListTemplate","undefined","typeaheadItemTemplate","selectActiveMatch","selectMatch","prevActiveMatch","index","indexOf","scrollPrevious","scrollNext","selectActive","hightlight","match","query","startIdx","tokenLen","itemStr","itemStrHelper","typeaheadLatinize","latinize","toLowerCase","queryLen","i","substring","repeat","focusLost","isActive","e","stopPropagation","preventDefault","changeModel","typeaheadOnSelect","emit","liElements","first","ulStyles","liStyles","ulPaddingBottom","parseFloat","replace","ulPaddingTop","optionHeight","height","guiHeight","setStyle","liElement","toArray","scrollToBottom","scrollToTop","scrollHeight","decorators","type","Component","args","selector","template","host","class","[class.dropdown-menu]","[style.overflow-y]","[style.height]","[style.visibility]","[class.dropup]","style","ctorParameters","ElementRef","Renderer2","propDecorators","ViewChild","ViewChildren","HostListener","DEFAULT_ALIASES","hover","focus","parseTriggers","triggers","aliases","trimmedTriggers","trim","parsedTriggers","split","map","trigger","triggerPair","alias","manualTriggers","filter","Error","ContentRef","nodes","viewRef","componentRef","ComponentLoader","_viewContainerRef","_renderer","_elementRef","_injector","_componentFactoryResolver","_ngZone","_applicationRef","_posService","onBeforeShow","EventEmitter","onShown","onBeforeHide","onHidden","_providers","_isHiding","_listenOpts","_globalListener","Function","_componentRef","attach","compType","_componentFactory","resolveComponentFactory","to","container","position","opts","attachment","target","provide","provider","push","show","_subscribePositioning","_innerComponent","_contentRef","_getContentRef","content","context","initialState","injector","ReflectiveInjector","resolveAndCreate","create","attachView","hostView","instance","assign","querySelector","parentElement","changeDetectorRef","markForCheck","detectChanges","_registerOutsideClick","hide","componentEl","parentNode","destroy","remove","_removeGlobalListener","toggle","isShown","dispose","_unsubscribePositioning","_unregisterListenersFn","listen","listenOpts","outsideClick","registerHide","options","listeners","_registerHide","forEach","fn","useToggle","showFn","unsubscribeFn","listenToTriggersV2","attachInline","vRef","_inlineViewRef","createEmbeddedView","target_1","targets","event","contains","some","getInnerComponent","_zoneSubscription","onStable","subscribe","appendToBody","unsubscribe","TemplateRef","_viewRef","rootNodes","contentCmptFactory","modalContentInjector","slice","createText","positionService","Positioning","round","elPosition","parentOffset","width","bottom","left","right","getStyle","bcRect","offsetParentEl","offsetParent","offset","documentElement","clientTop","clientLeft","Math","elBcr","viewportOffset","pageYOffset","pageXOffset","elOffset","offsetWidth","positionElements","hostElement","targetElement","placement","hostElPosition","targetElStyles","getAllStyles","shiftWidth","center","shiftHeight","targetElBCR","placementPrimary","placementSecondary","targetElPosition","newPlacementPrimary","autoPosition","marginBottom","marginRight","preferredPosition","innerHeight","innerWidth","prop","isStaticPositioned","PositioningService","pos","_getHtmlElement","Injectable","ComponentLoaderFactory","createLoader","ComponentFactoryResolver","NgZone","Injector","ApplicationRef","TypeaheadDirective","ngControl","viewContainerRef","cis","changeDetection","typeaheadMinLength","typeaheadAsync","typeaheadSingleWords","typeaheadWordDelimiters","typeaheadPhraseDelimiters","typeaheadLoading","typeaheadNoResults","typeaheadOnBlur","dropup","isTypeaheadOptionsListActive","keyUpEventEmitter","_subscriptions","_typeahead","ngOnInit","typeaheadOptionsLimit","typeaheadWaitMs","typeahead","Observable","asyncActions","syncActions","onInput","textContent","onChange","_container","keyCode","onFocus","onBlur","active","onKeydown","valueStr","viewToModelUpdate","setValue","typeaheadRef","animation","_outsideClickListener","onOutsideClick","normalizedQuery","control","toString","tokenize","ngOnDestroy","_i","_a","debounceTime","switchMap","finalizeAsyncCall","mergeMap","normalizeQuery","from","option","testMatch","normalizeOption","optionValue","getValueFromObject","typeaheadOptionField","test","spaceLength","prepareMatches","hasMatches","limited","typeaheadGroupField","matches_1","v","a","group","TypeaheadMatch","concat","Directive","exportAs","NgControl","ViewContainerRef","ChangeDetectorRef","Input","Output","TypeaheadModule","forRoot","ngModule","providers","NgModule","imports","CommonModule","declarations","exports","entryComponents","FacetSelect","facet","FacetDeselect","FacetDeselectAll","FacetContainerComponent","header","clearTooltip","emptyText","facets","facetsChange","events","selectFacet","triggerEvent","deselectFacet","idx","findIndex","selectedFacet","splice","deselectAllFacets","next","FacetBaseComponent","facetContainer","selected","selectedChange","Subject","find","_","deselectAll","disabled","toggleFacetSelection","isFacetSelected","Host","FacetHeaderComponent","canExpand","expanded","expandedChange","toggleExpand","tabindex","(click)","(keyup.enter)","FacetCheckListComponent","_super","apply","arguments","scrollbar","__extends","FacetTypeaheadListComponent","typeaheadConfig","suggestions","simplified","_nativeElement","_defaultTypeaheadConfig","placeholder","maxResults","minCharacters","typeaheadOptions","title","toUpperCase","includes","searchQuery","of","hasOwnProperty","selectOption","typeaheadOption","item","scrollToFocused","dropdown","activeElement","elementBounds","dropdownBounds","FacetTypeaheadHighlight","transform","regex","RegExp","Pipe","name","uniqueTooltipId","TooltipComponent","_changeDetectorRef","id","role","customClass","isTemplateRef","reposition$","complete","reposition","setContent","setPlacement","setClass","setContext","setRole","ChangeDetectionStrategy","OnPush","TooltipService","shown$","TooltipDirective","_overlay","_scrollDispatcher","_tooltipService","delay","isOpen","showTriggers","hideTriggers","shown","hidden","isOpenChange","isVisible","_onDestroy","_type","fromEvent","pipe","takeUntil","onClick","bind","onMouseEnter","onMouseLeave","tooltip","_instance","ngOnChanges","changes","firstChange","currentValue","destroyOverlay","_overlayRef","_showTimeoutId","overlayRef","createOverlay","_portal","createPortal","createInstance","clearTimeout","hasAttached","detach","setAriaDescribedBy","updatePosition","ComponentPortal","strategy","connectedTo","getOrigin","getOverlayPosition","scrollableAncestors","getAncestorScrollContainers","withScrollableContainers","positionStrategy","panelClass","scrollStrategy","scrollStrategies","scrollThrottle","hasBackdrop","originX","originY","overlayX","overlayY","array","Array","isArray","removeAttribute","setAttribute","Overlay","ScrollDispatcher","TooltipModule","OverlayModule","ObserversModule","DECLARATIONS","FacetsModule","FormsModule","CheckboxModule","Facet","data","count","BsDropdownConfig","autoClose","BsDropdownState","direction","isDisabledChange","toggleClick","dropdownMenu","Promise","resolve","resolveDropdownMenu","BsDropdownContainerComponent","_state","cd","_element","_subscription","addClass","BsDropdownDirective","_cis","_config","_isInlineOpen","_isInited","_dropdown","useValue","_isDisabled","_showInline","isDisabled","_inlinedMenu","then","viewContainer","templateRef","addBs4Polyfills","catch","_dropup","_placement","removeShowClass","removeDropupStyles","addShowClass","checkRightAlignment","addDropupStyles","removeClass","isRightAligned","removeStyle","[class.open]","[class.show]","BsDropdownMenuDirective","_viewContainer","_templateRef","BsDropdownToggleDirective","onDocumentClick","button","onEsc","[attr.aria-haspopup]","HostBinding","BsDropdownModule","config","FilterContainerComponent","filters","filtersChange","addFilter","FilterAddEvent","removeFilter","FilterRemoveEvent","removeAll","FilterRemoveAllEvent","FilterBaseComponent","filtersContainer","initial","FilterDropdownComponent","call","selectFilter","FilterDynamicComponent","defaultOptions","showTypeahead","typeaheadItems","getItems","maxIndividualItems","clickOff","hideDropdown","nodeName","(document:click)","FilterModule","FlippableCardComponent","flipped","flippedChange","setFlipped","state","toggleFlipped","clickTrigger","hoverEnter","hoverExit","[class.horizontal]","[class.vertical]","FlippableCardFrontDirective","FlippableCardBackDirective","FlippableCardModule","TooltipConfig","TooltipContainerComponent","ngAfterViewInit","classMap","in","fade","containerClass","[class]","styles","_messagesHash","_hideMsg","console","warnOnce","msg","isDevMode","warn","tooltipChange","_animation","_fadeDuration","tooltipStateChanged","_tooltip","_delayTimeoutId","showTooltip","cancelDelayedTooltipShowing","_tooltipCancelShowFn","timer_1","timer","htmlContent","_isOpen","_enable","_appendToBody","_popupClass","_tooltipContext","_tooltipPopupDelay","_tooltipTrigger","__decorate","propertyKey","_key","FloatingActionButtonsService","open$","BehaviorSubject","getValue","FloatingActionButtonsComponent","fab","tooltips","preserveWhitespaces","animations","transition","opacity","stagger","animate","ContentChildren","FloatingActionButtonComponent","primary","Attribute","icon","FloatingActionButtonsModule","HierarchyBarService","nodes$","_nodes","setRootNode","root","_root","getNodeList","getSelectedChildren","selectNode","node","select","getChildren","children","loading","children$","observer","child","descendants","reduce","current","_child","HierarchyBarComponent","hierarchyBar","overflow$","overflowNodes$","Subscription","changed","scrollIntoView","nodelist","scrollWidth","overflowAmount_1","offsetLeft","scrollLeft","viewProviders","loadingIndicator","ClickOutsideDirective","uxClickOutside","click","ClickOutsideModule","uniquePopoverId","PopoverComponent","clickOutside$","setTitle","PopoverDirective","onKeyDown","_ariaDescribedBy","hasAttribute","onClickOutside","ESCAPE","PopoverModule","HierarchyBarModule","ResizeModule","FocusIfModule","SidePanelService","SidePanelComponent","service","inline","attachTo","modal","closeOnExternalClick","openChange","cssWidth","openPanel","closePanel","clickHandler","componentWidth","ItemDisplayPanelContentDirective","ItemDisplayPanelFooterDirective","ItemDisplayPanelComponent","elementRef","boxShadow","closeVisible","shadow","visibleChange","visible","_itemDisplayPanelSubscription","preventClose","footer","ContentChild","ItemDisplayPanelModule","WizardStepComponent","valid","visitedChange","_visited","visited","WizardComponent","_step","steps","QueryList","orientation","nextText","previousText","cancelText","finishText","nextTooltip","previousTooltip","cancelTooltip","finishTooltip","nextDisabled","previousDisabled","cancelDisabled","finishDisabled","nextVisible","previousVisible","cancelVisible","finishVisible","cancelAlwaysVisible","finishAlwaysVisible","onNext","onPrevious","onCancel","onFinishing","onFinish","stepChanging","stepChange","invalidIndicator","update","step","StepChangingEvent","getCurrentStep","previous","finish","cancel","gotoStep","stepIndex","stp","isLastStep","reset","getStepAtIndex","WizardModule","MarqueeWizardService","valid$","MarqueeWizardStepComponent","_marqueeWizardService","completed","completedChange","_valid","setCompleted","MarqueeWizardComponent","marqueeWizardService","validChange","description","MarqueeWizardModule","NavigationComponent","NavigationItemComponent","_parent","_router","_activatedRoute","level","indentWithoutArrow","_navigationEnd","NavigationEnd","hasActiveLink","link","_children","parentListElement","levelClass","getLevelClass","ngAfterContentInit","setIndentWithoutArrow","_childrenChanges","tree","createUrlTree","relativeTo","queryParams","snapshot","fragment","every","Optional","SkipSelf","Router","ActivatedRoute","NavigationModule","RouterModule","ColorService","_colorSet","colorSets","keppel","colorClassSet","setColors","key","colorValueSet","_colors","getColorValueByHex","_html","className","innerHTML","getColorValue","color","hex","r","parseInt","g","b","ThemeColor","rgba","backgroundColor","getColor","themeColor","resolveColorName","getRed","getGreen","getBlue","getAlpha","getColorSet","setColorSet","colorSet","colorName","toRgba","Document","Inject","DOCUMENT","_r","_g","_b","parse","rgbaMatch","shortHexMatch","longHexMatch","toHex","red","green","blue","toRgb","setRed","setGreen","setBlue","setAlpha","alpha","accent","secondary","alternate1","alternate2","alternate3","vibrant1","vibrant2","grey1","grey2","grey3","grey4","grey5","grey6","grey7","grey8","chart1","chart2","chart3","chart4","chart5","chart6","ok","warning","critical","partition1","partition9","partition10","partition11","partition12","partition13","partition14","social-chart-node","social-chart-edge","microFocus","cerulean","aqua","aquamarine","fuchsia","indigo","dark-blue","white","slightly-gray","bright-gray","gray","silver","dim-gray","dark-gray","black","crimson-negative","apricot","yellow","green-positive","ultramarine","skyblue","pale-aqua","pale-green","lime","orange","magenta","pale-purple","dark-ultramarine","steelblue","arctic-blue","emerald","olive","goldenrod","purple","pale-eggplant","pale-amber","pale-lemon","pale-emerald","plum","copper","amber","leaf-green","forest-green","ColorServiceModule","NotificationService","_colorService","duration","spacing","iconColor","notifications$","notificationRef","date","Date","notifications","unshift","dismiss","getHistory","dismissAll","NotificationListComponent","_notificationService","notificationRefs","NotificationModule","NUMBER_PICKER_VALUE_ACCESSOR","NG_VALUE_ACCESSOR","useExisting","forwardRef","NumberPickerComponent","multi","_min","Infinity","_max","_disabled","_value","_propagateChange","valueChange","increment","max","min","decrement","isValid","onScroll","deltaY","wheelDelta","writeValue","registerOnChange","registerOnTouched","setDisabledState","[class.has-error]","NumberPickerModule","PageHeaderCustomMenuDirective","PageHeaderService","items$","selected$","selectedRoot$","secondary$","activeIconMenu$","getRoot","isParentOf","selectParents","deselect","_item","setItems","items","setParent","setSecondaryNavigation","enabled","PageHeaderComponent","_pageHeaderService","alignment","condensed","backVisible","secondaryNavigationAlignment","secondaryNavigationAutoselect","backClick","_crumbs","crumbs","_familyBackground","_familyForeground","distinctUntilChanged","secondaryNavigation","goBack","logo","iconMenus","familyBackground","familyForeground","customMenus","read","PageHeaderIconMenuComponent","_service","menu","keydownHandler","menuNavigationToggle","PageHeaderNavigationDropdownItemComponent","dropdownOpen","_hover$","hoverStart","hoverLeave","PageHeaderNavigationItemComponent","dropdowns","PageHeaderNavigationComponent","resizeService","indicatorVisible","indicatorX","indicatorWidth","addResizeListener","updateSelectedIndicator","menuItems","getPropertyValue","ResizeService","MenuNavigationService","active$","MenuNavigationItemDirective","activated","setActive","MenuNavigationDirective","toggleButtonPosition","navigatedOut","_document","_itemsOrdered","toggleButton","keyEnter","focusFirst","moveFirst","handled","movePrevious","moveNext","moveToToggleButton","moveLast","activeIndex","nextIndex","menuOpen","MenuNavigationToggleDirective","menuPosition","menuOpenChange","_menuOpen","isKeyMatch","EXPORTS","MenuNavigationModule","PageHeaderModule","BreadcrumbsModule","ProgressBarComponent","indeterminate","trackColor","barColor","ProgressBarModule","RADIOBUTTON_VALUE_ACCESSOR","RadioButtonComponent","uniqueRadioId","_radioButtonId","clickable","ariaLabel","ariaLabelledby","ariaDescribedby","focused","onTouchedCallback","onChangeCallback","required","RadioButtonModule","SearchBuilderService","queryChange","validationChange","_componentId","_components","_validation","registerComponent","component","cmp","registerComponents","components","getComponent","setQuery","getQuery","queryHasChanged","setValid","keys","generateComponentId","SearchBuilderGroupService","_searchBuilderService","init","_id","field","SearchBuilderGroupComponent","searchBuilderGroupService","operator","addText","showPlaceholder","removeField","SearchBuilderOutletDirective","componentDefinition","uxSearchBuilderOutlet","componentFactory","createComponent","uxSearchBuilderOutletContext","BaseSearchComponent","_searchBuilderGroupService","validate","validation","SearchTextComponent","label","SearchDateComponent","SearchDateRangeComponent","fromValue","toValue","fromLabel","toLabel","fromPlaceholder","toPlaceholder","setHours","SearchSelectComponent","multiple","dropDirection","allowNull","maxHeight","pageSize","SearchBuilderComponent","_querySubscription","_validSubscription","TypeaheadOptionEvent","TypeaheadKeyService","handleKey","moveHighlight","TypeaheadComponent","typeaheadElement","cdRef","_open","openOnFilterChange","selectFirst","optionSelected","_highlighted","visibleOptions","clicking","optionApi","getKey","getDisplay","getDisplayHtml","loadOptionsCallback","pageNum","originalValue","initOptions","loadingTemplate","_defaultLoadingTemplate","optionTemplate","_defaultOptionTemplate","noOptionsTemplate","_defaultNoOptionsTemplate","updateOptions","mousedownHandler","mouseupHandler","optionMousedownHandler","optionClickHandler","display","displayText","displayHtml","matchIndex","highlight","substr","isInfiniteScroll","disabledOptions","optionKey_1","selectedOption","d","newIndex","indexOfVisibleOption","highlighted","inBounds","isHighlighted","normalisedInput_1","optionKey_2","el","[class.drop-up]","[style.maxHeight]","InfiniteScrollLoadButtonDirective","_template","_visible","_load","load","asObservable","clickTarget","getNextElementSibling","clear","nextSibling","nodeType","InfiniteScrollLoadingDirective","InfiniteScrollDirective","_collection","loadOnInit","loadOnScroll","collectionChange","loadingEvent","loadedEvent","loadErrorEvent","_nextPageNum","_updateRequests","_isLoading","_isExhausted","_loadButtonEnabled","_loadButtonSubscriptions","_canLoadManually","combineLatest","isLoading","isExhausted","loadButtonEnabled","_scrollElement","requests","partition","check","auditTime","doRequest","attachEventHandlers","canLoad","_loadButtonQuery","loadButton","_loadingIndicatorQuery","attachLoadButtonEvents","loadNextPage","previousValue","detachEventHandlers","pageNumber","_pages","collection","request","reload","page","reloadPage","HTMLHtmlElement","_scrollEventSub","_domObserver","MutationObserver","observe","childList","subtree","disconnect","s","needsData","beginLoading","loadResult","subscription_1","setPageItems","endLoading","reason","endLoadingWithError","clientHeight","InfiniteScrollLoadingEvent","defaultPrevented","InfiniteScrollLoadedEvent","error","InfiniteScrollLoadErrorEvent","scrollElement","_defaultPrevented","exhausted","InfiniteScrollModule","ScrollIntoViewService","scrollParent","offsetBottom","ScrollIntoViewIfDirective","scrollIntoViewService","condition","ScrollIntoViewIfModule","TypeaheadModule$1","SELECT_VALUE_ACCESSOR","SelectComponent","_typeaheadKeyService","inputChange","dropdownOpenChange","propagateChange","_input$","_dropdownOpen","input","filter$","onFilter","obj","inputClickHandler","selectInputText","inputBlurHandler","singleTypeahead","singleInput","inputKeyHandler","singleOptionSelected","multipleTypeahead","TagInputEvent","tag","TAGINPUT_VALUE_ACCESSOR","TagInputComponent","TAGINPUT_VALIDATOR","NG_VALIDATORS","_tags","tagsChange","_input","addOnPaste","enforceTagLimits","freeInput","maxTags","Number","MAX_VALUE","minTags","showTypeaheadOnClick","tagDelimiters","tagClass","validationErrors","tagAdding","tagAdded","tagInvalidated","tagRemoving","tagRemoved","tagClick","selectedIndex","tagApi","getTagDisplay","removeTagAt","canRemoveTagAt","inputValid","_onChangeHandler","_onTouchedHandler","tagTemplate","_defaultTagTemplate","connectTypeahead","typeaheadQuery","tags","tagRangeError","given","keyHandler","inputCursorPos","tagInput","selectionStart","hasSelection","selectionEnd","tagSelected","isValidTagIndex","inputLength","canNavigateLeft","canNavigateRight","commitTypeahead","commitInput","backspace","moveSelection","getKeyChar","focusOutHandler","tagClickHandler","tagClickEvent","selectTagAt","inputFocusHandler","selectInput","inputPasteHandler","clipboardData","getData","commit","typeaheadOptionSelectedHandler","addTag","newTags","splitTagInput","allValid","_d","newTags_1","newTag","validateTag","_e","newTags_2","createTag","isValidSelectIndex","isSelected","tagIndex","tagRemovingEvent","isInputVisible","hasFocus","tagValue","inputPattern","tagPattern","pattern","createTagHandler","displayValue","tagAddingEvent","tagValues","escapedDelimiters","delimiterRegex","[class.disabled]","[class.focus]","[class.invalid]","TagInputModule","SelectModule","SearchBuilderModule","DateTimePickerModule","SidePanelCloseDirective","SidePanelModule","SliderComponent","colorService","sliderType","SliderType","sliderStyle","SliderStyle","sliderSize","SliderSize","sliderSnap","SliderSnap","sliderThumb","SliderThumb","sliderTickType","SliderTickType","sliderThumbEvent","SliderThumbEvent","sliderCalloutTrigger","SliderCalloutTrigger","tracks","lower","size","middle","upper","thumbs","drag","order","ticks","Value","handles","Button","callout","None","background","formatter","keyboard","major","minor","aria","thumb","lowerThumb","upperThumb","track","Wide","snap","labels","colors","range","higher","updateValues","setThumbState","Lower","Upper","clone","ngDoCheck","detectValueChange","updateTooltipPosition","snapToNearestTick","snapTarget","forwards","getThumbState","closest","getTickDistances","tick","setThumbValue","validateValue","Major","snapToEnd","getThumbValue","getFormattedValue","updateTooltips","thumbEvent","DragStart","DragEnd","MouseOver","MouseLeave","getAriaValueText","_tick","Persistent","Drag","Hover","Dynamic","getTooltip","updateTooltipText","getTooltipElement","lowerTooltip","upperTooltip","thumbWidth","tooltipElement","Narrow","tooltipWidth","tooltipPosition","ceil","Range","preventTooltipOverlap","trackWidth","diff","clamp","updateThumbPosition","eventPosition","MouseEvent","clientX","touches","mouseX","trackBounds","fraction","snapToTick","updateOrder","Minor","lowerLimit","upperLimit","sort","tickOne","tickTwo","tickDistances","deepMerge","updateTrackColors","updateTicks","lowerValue","low","upperValue","high","toFixed","lowerPosition","upperPosition","majorOptions","minorOptions","majorTicks","getTicks","showTicks","minorTicks","unionTicks","join","getSteps","output","showLabels","tk","t1","t2","destination","source","value1","value2","isSliderValue","obj1","obj2","Line","All","SliderModule","DragModule","SparkComponent","values","barHeight","_theme","_barColor","_trackColor","total","val","inlineLabel","topLeftLabel","topRightLabel","bottomLeftLabel","bottomRightLabel","theme","SparkModule","TabsetService","tabs$","focused$","highlighted$","tab","_tab","selectAtIndex","selectNextTab","tabs_1","selectFirstTab","selectPreviousTab","reverse","selectLastTab","tabIndex","TabsetComponent","tabset","minimal","stacked","arrowLeft","arrowUp","arrowRight","arrowDown","[class.tabs-left]","[class.tabs-right]","uniqueTabId","TabComponent","_tabset","heading","TabHeadingDirective","headingRef","TabFocusDirective","uxTabFocus","TabsetModule","TimelineComponent","TimelineEventComponent","badgeColor","badgeTitle","TimelineModule","TOGGLESWITCH_VALUE_ACCESSOR","ToggleSwitchComponent","uniqueToggleSwitchId","_toggleSwitchId","ToggleSwitchModule","KEYS","ToolbarSearchFieldDirective","_ngModel","submit","blur","text","NgModel","ToolbarSearchButtonDirective","clicked","ToolbarSearchComponent","inverse","search","_expanded","_position","_backgroundColor","_field","params","initialWidth","_button","createPlaceholder","animationStart","toState","enablePlaceholder","animationDone","_placeholder","visibility","insertBefore","_expandedAnimation","ToolbarSearchModule","FrameExtractionService","createVideoPlayer","videoPlayer","preload","src","createCanvas","canvas","goToFrame","time","currentTime","getThumbnail","subscription","getContext","drawImage","image","toDataURL","getFrameThumbnail","frameSubscription","getFrameThumbnails","start","end","skip","frames","frame","FrameExtractionModule","MediaPlayerService","_frameExtractionService","loaded","playing","initEvent","abortEvent","canPlayEvent","canPlayThroughEvent","durationChangeEvent","endedEvent","errorEvent","loadedDataEvent","loadedMetadataEvent","loadStartEvent","pauseEvent","playEvent","playingEvent","rateChangeEvent","seekedEvent","seekingEvent","stalledEvent","suspendEvent","timeUpdateEvent","volumeChangeEvent","waitingEvent","mediaClickEvent","fullscreenEvent","quietModeEvent","progressEvent","interval","setInterval","buffered","_mediaPlayer","clearInterval","_fullscreen","_quietMode","audioTracks","autoplay","TimeRanges","crossOrigin","currentSrc","defaultMuted","defaultPlaybackRate","ended","loop","muted","networkState","paused","playbackRate","played","readyState","seekable","seeking","textTracks","TextTrackList","videoTracks","VideoTrackList","volume","setMediaPlayer","mediaPlayer","_hostElement","togglePlay","play","pause","canPlayType","addTextTrack","kind","language","requestFullscreen","webkitRequestFullscreen","msRequestFullscreen","mozRequestFullScreen","exitFullscreen","webkitExitFullscreen","msExitFullscreen","mozCancelFullScreen","fullscreenChange","fullscreen","webkitIsFullScreen","mozFullScreen","msFullscreenElement","toggleFullscreen","getFrames","AudioService","_http","getAudioFileMetadata","mediaElement","responseType","ResponseContentType","Blob","response","filename","lastIndexOf","extension","blob","getWaveformFromUrl","url","AudioContext","_audioContext","createVolumeNode","createAnalyserNode","ArrayBuffer","getAudioBuffer","arrayBuffer","audioBuffer","createBufferSource","dataPoints","channels","_audioBuffer","numberOfChannels","channelIdx","getChannelData","Float32Array","getWaveformPoints","waveform","_loop_5","points","channel","getOfflineAudioContext","decodeAudioData","OfflineAudioContext","sampleRate","disconnectSource","_audioBufferSource","buffer","connect","_analyserNode","_gainNode","createGain","createAnalyser","Http","AudioServiceModule","HttpModule","MediaPlayerComponent","mediaPlayerService","_audioService","hovering","quietMode","_playerRef","audioMetadata","_playing$","_paused$","_clicked$","_loading$","(keydown.Space)","[class.standard]","[class.fullscreen]","[class.quiet]","[class.hover]","[class.video]","[class.audio]","(mouseenter)","(mouseleave)","(document:webkitfullscreenchange)","(document:mozfullscreenchange)","(document:MSFullscreenChange)","_trackBarRef","MediaPlayerBaseExtensionDirective","MediaPlayerTimelineExtensionComponent","mouseDown","scrub","mousedown$","mousemove$","mouseup$","_mouseEventSubscription","updateScrub","bounds","timelineRef","offsetX","(document:mouseup)","MediaPlayerControlsExtensionComponent","volumeActive","volumeDragging","_volume","_previousVolume","mouseenter$","volumeIcon","mouseenterContainer$","volumeContainer","mouseleaveContainer$","toggleMute","setFullscreen","goToStart","goToEnd","dragStart","dragMove","volumeSlider","x","pageX","dragEnd","DurationPipe","seconds","minutes","floor","hours","days","pad","DurationPipeModule","FileSizePipe","log","pow","FileSizePipeModule","MediaPlayerModule","VirtualScrollLoadingDirective","VirtualScrollLoadButtonDirective","VirtualScrollCellDirective","VirtualScrollComponent","cells","loadingComplete","_height","cellHeight","setupObservable","renderCells","isFirstChange","getVisibleCells","startCell","endCell","getTotalHeight","cellTemplate","loadingIndicatorTemplate","loadButtonTemplate","VirtualScrollModule","AutoGrowDirective","tagName","paddingTop","paddingBottom","maximum","isNaN","AutoGrowModule","FixedHeaderTableDirective","tablePaging","_tableHead","_tableBody","setLayout","getTable","clientWidth","tableHeight","FixedHeaderTableModule","FloatLabelDirective","mode","raised","_focused","_eventHandles","inputFocus","inputBlur","hasText","getAttribute","eventHandle","FloatLabelModule","HelpCenterService","registerItem","unregisterItem","itm","HelpCenterItemDirective","_helpCenterService","uxHelpCenterItem","HelpCenterModule","HoverActionService","_hovered","_actions","register","action","unregister","actn","setContainer","setFocusState","updateVisibility","setHoverState","containerHasFocus","focusActionAtIndex","actionHasFocus","getFocusedActionIndex","getFocusedAction","HoverActionContainerDirective","_hoverActionService","onHover","onLeave","[class.hover-action-container-active]","[tabindex]","HoverActionDirective","[class.hover-action-active]","[class.hover-action-focused]","HoverActionModule","LayoutSwitcherItemDirective","getLayout","getConfig","activate","_embeddedView","deactivate","LayoutSwitcherDirective","_width","updateActiveLayout","getActiveLayout","_layouts","layout","minWidth","maxWidth","_activeLayout","requestAnimationFrame","LayoutSwitcherModule","SelectionStrategy","selectionService","mousedown","keydown","selectAll","dataset","RowSelectionStrategy","_selection","ctrlKey","shiftKey","multipleSelect","singleSelect","KeyCode","UpArrow","DownArrow","navigate","Spacebar","setSelectionStart","clearSelection","getSelectedItems","setSelectionEnd","endIdx","sibling","activateSibling","SimpleSelectionStrategy","SelectionService","Set","_rowStrategy","_simpleStrategy","clickEnabled","keyboardEnabled","selection$","selections","selection","selectionHasMutated","delete","has","setMode","setDisabled","SelectionItemDirective","_selectionService","_selected","uxSelectionItem","SelectionDirective","uxSelectionChange","uxSelection","clickSelection","keyboardSelection","SelectionModule","ReorderableHandleDirective","ReorderableModelDirective","uxReorderableModel","dragula","((dragulaNamespace)).default","dragulaNamespace","ReorderableService","_groups","_uniqueGroupId","getUniqueGroupName","groupName","ReorderableGroup","isEmpty","initialize","getGroup","drop","cloned","_containers","moves","canMove","getModelForElement","model","getModelFromElement","containers","c","mirrorContainer","on","containerElement","handle","isSameNode","ReorderableDirective","reorderableModelChange","reorderStart","reorderCancel","reorderEnd","_dragging","reorderableGroup","onDrag","onDragEnd","onDrop","onClone","reorderableModel","models","_model","setTableCellWidths","captureCanvases","_handle","sourceCells","targetCells","cell","sourceCanvases","querySelectorAll","ReorderableModule","StringFilterPipe","it","StringFilterModule","CookieAdapter","getItem","cookie","setItem","removeItem","eqPos","toUTCString","getSupported","LocalStorageAdapter","localStorage","err","SessionStorageAdapter","sessionStorage","PersistentDataService","PersistentDataStorageType","LocalStorage","getAdapter","Cookie","SessionStorage","PersistentDataModule","StorageAdapter","ContactsNg1Component","overflowClick","UpgradeComponent","contacts","organization","maxContacts","ExpandInputNg1Component","elname","placeHolder","clearTextIcon","closeSearch","expandAlways","onEnter","FloatingActionButtonNg1Component","fabTooltip","fabTooltipPlacement","FlotNg1Component","onPlotClick","onPlotHover","callback","donutLabels","GridNg1Component","columns","plugins","HierarchyBarNg1Component","MarqueeWizardNg1Component","wizardStepsChange","wizardIcon","wizardSteps","buttonOptions","onChanging","onFinished","onCanceled","isVisited","sideInfo","NestedDonutNg1Component","OrganizationChartNg1Component","dataChange","optionsChange","PartitionMapNg1Component","chartData","chartOptions","chartLoading","PeityBarChartNg1Component","PeityLineChartNg1Component","PeityPieChartNg1Component","PeityUpdatingLineChartNg1Component","method","updateinterval","SankeyNg1Component","chartSize","SearchToolbarNg1Component","searchTypeahead","onSearch","SelectTableNg1Component","selectKey","searchText","selectHiddenItems","SLIDER_CHART_VALUE_ACCESSOR","SliderChartNg1Component","ngModelChange","sliderOptions","ngModel","SocialChartNg1Component","api","communities","detailStyle","popoverStyle","nodeDetail","edgeDetail","nodePopover","edgePopover","forceAtlasDuration","nodeSizeAttribute","startMaximized","startMaximised","showMaximizeControl","showMaximiseControl","socialChartContainer","fullscreenButtonPosition","localStrings","chartTitle","titleDisplayTime","edgeWeightInfluence","minLabels","SortDirectionToggleNg1Component","sorters","descend","TreeGridNg1Component","currentRowChange","treeDataChange","treeData","currentRow","ThumbnailNg1Component","NavigationMenuService","_navigationMenuService","collapseAtWidth","setCollapseAtWidth","setDefaultCollapseAtWidth","navigationMenuServiceFactory","navigationMenuServiceProvider","useFactory","deps","PdfService","_pdfService","createTable","rows","pdfServiceFactory","pdfServiceProvider","TimeAgoService","_timeAgoService","setStrings","strings","timeSince","past","present","timeSinceNow","moment","timeAgoServiceFactory","timeAgoServiceProvider","HybridModule","BreadcrumbsComponent","clickCrumb","crumb","rendererFactory","createRenderer","subject","displayMode","iframe","waitUntilReady","iframeDoc","contentDocument","contentWindow","attachListener","run","addEventListener","RendererFactory2","tryCatchTarget","tryCatcher","errorObject_1","errorObject","UnsubscriptionError","errors","stack","message","flattenUnsubscriptionErrors","errs","UnsubscriptionError_1","Subscription$$1","closed","_parents","_unsubscribe","empty","hasErrors","len","isFunction_1","isFunction","tryCatch_1","tryCatch","isArray_1","sub","isObject_1","isObject","teardown","EMPTY","_addParent","tmp","subscriptions","subscriptionIndex","__window","__self","self","WorkerGlobalScope","global","root_1","Symbol","rxSubscriber","for","$$rxSubscriber","Subscriber","destinationOrNext","syncErrorValue","syncErrorThrown","syncErrorThrowable","isStopped","Observer_1","rxSubscriber_1","trustedSubscriber","SafeSubscriber","subscriber","_next","_error","_complete","_unsubscribeAndRecycle","Subscription_1","Subscriber_2","_parentSubscriber","observerOrNext","_context","__tryOrSetError","__tryOrUnsub","wrappedComplete","Action","scheduler","work","schedule","AsyncAction","pending","recycleAsyncId","requestAsyncId","flush","execute","_execute","errored","errorValue","actions","Action_1","Scheduler","SchedulerAction","now","AsyncScheduler","scheduled","shift","Scheduler_1","AsyncScheduler_1","AsyncAction_1","debounceTime_2","dueTime","async_1","async","lift","DebounceTimeOperator","DebounceTimeSubscriber","debouncedSubscription","lastValue","hasValue","clearDebounce","dispatchNext","debouncedNext","Subscriber_1","ResizeDirective","_resizeService","throttle","uxResize","CardTabContentDirective","OuterSubscriber","notifyNext","outerValue","innerValue","outerIndex","innerIndex","innerSub","notifyError","notifyComplete","nextOrObserver","getSymbolObservable","$$observable","observable","pipeFromArray","fns","prev","noop_1","noop","Observable$$1","_isScalar","_subscribe","sink","toSubscriber_1","toSubscriber","_trySubscribe","PromiseCtor","Rx","reject","observable_1","operations","pipe_1","toPromise","symbolIteratorPonyfill","iterator","Set_1","Map_1","Map","getOwnPropertyNames","$$iterator","InnerSubscriber","outerSubscriber","result","InnerSubscriber_1","Observable_1","isArrayLike_1","isArrayLike","isPromise_1","isPromise","iterator_1","done","obs","TypeError","AuditSubscriber","durationSelector","throttled","innerSubscription","subscribeToResult_1","subscribeToResult","clearThrottle","OuterSubscriber_1","TimerObservable","period","isNumeric_1","isNumeric","isScheduler_1","isScheduler","isDate_1","isDate","initialDelay","dispatch","BufferSubscriber","closingNotifier","BufferCountSubscriber","bufferSize","BufferSkipCountSubscriber","startBufferEvery","buffers","Context","BufferTimeSubscriber","bufferTimeSpan","bufferCreationInterval","maxBufferSize","contexts","openContext","timespanOnly","timeSpanOnlyState","closeAction","dispatchBufferTimeSpanOnly","closeState","creationState","dispatchBufferClose","dispatchBufferCreation","filledBufferContext","onBufferFull","closeContext","prevContext","arg","BufferToggleSubscriber","openings","closingSelector","closeBuffer","openBuffer","trySubscribe","BufferWhenSubscriber","subscribing","closingSubscription","CatchSubscriber","caught","err2","ScalarObservable","EmptyObservable","ArrayObservable","pop","ScalarObservable_1","EmptyObservable_1","none","CombineLatestSubscriber","project","observables","toRespond","unused","oldVal","_tryProject","dispatchNext$1","dispatchError","PromiseObservable","promise","IteratorObservable_2","IteratorObservable","StringIterator","ArrayIterator","getIterator","hasError","return","str","charAt","arr","o","isFinite","valueAsNumber","abs","maxSafeInteger","toLength","ArrayLikeObservable","arrayLike","Notification","do","accept","toObservable","throw","createNext","undefinedValueNotification","createError","createComplete","completeNotification","observeOn_2","ObserveOnOperator","ObserveOnSubscriber","ObserveOnOperator_1","notification","scheduleMessage","ObserveOnMessage","Notification_1","FromObservable","ish","ArrayObservable_1","PromiseObservable_1","IteratorObservable_1","ArrayLikeObservable_1","observeOn_1","MergeMapSubscriber","resultSelector","concurrent","POSITIVE_INFINITY","hasCompleted","_tryNext","_innerSub","_notifyResultSelector","CountSubscriber","predicate","_tryPredicate","DebounceSubscriber","durationSubscription","emitValue","DefaultIfEmptySubscriber","defaultValue","delay_2","delayFor","DelayOperator","DelaySubscriber","queue","delay_1","_schedule","scheduleNotification","DelayMessage","SubscriptionDelaySubscriber","DelayWhenSubscriber","delayDurationSelector","delayNotifierSubscriptions","removeSubscription","tryComplete","delayNotifier","tryDelay","subscriptionIdx","notifierSubscription","SubscriptionDelayObservable","subscriptionDelay","sourceSubscribed","subscribeToSource","DeMaterializeSubscriber","minimalSetImpl","MinimalSet","_values","DistinctSubscriber","keySelector","flushes","_useKeySelector","_finalizeNext","distinctUntilChanged_2","compare","DistinctUntilChangedOperator","DistinctUntilChangedSubscriber","hasKey","y","Boolean","ArgumentOutOfRangeError","ElementAtSubscriber","ArgumentOutOfRangeError_1","EverySubscriber","thisArg","everyValueMatch","SwitchFirstSubscriber","hasSubscription","SwitchFirstMapSubscriber","tryNext","trySelectResult","ExpandSubscriber","subscribeToProjection","filter_2","FilterOperator","FilterSubscriber","FinallySubscriber","FindValueSubscriber","yieldIndex","EmptyError","first_2","FirstOperator","FirstSubscriber","_emitted","_emit","_tryResultSelector","_emitFinal","EmptyError_1","ObjectUnsubscribedError","SubjectSubscription","observers","subscriberIndex","SubjectSubscriber","SubjectSubscriber_1","Subject$$1","thrownError","AnonymousSubject","ObjectUnsubscribedError_1","copy","SubjectSubscription_1","Subject_2","MapPolyfill","_keys","cb","MapPolyfill_1","FastMap","GroupDurationSubscriber","GroupBySubscriber","elementSelector","subjectSelector","groups","attemptedToUnsubscribe","_group","FastMap_1","Subject_1","groupedObservable","GroupedObservable","removeGroup","groupSubject","refCountSubscription","InnerRefCountSubscription","IgnoreElementsSubscriber","IsEmptySubscriber","LastSubscriber","map_2","MapOperator","MapSubscriber","MapOperator_1","MapToSubscriber","MaterializeSubscriber","ScanSubscriber","accumulator","_seed","hasSeed","seed","TakeLastSubscriber","ring","MergeMapToSubscriber","MergeScanSubscriber","acc","refCount_2","RefCountOperator","connectable","_refCount","refCounter","RefCountSubscriber","connection","refCount","sharedConnection","_connection","ConnectableSubscriber","ConnectableObservable","subjectFactory","_isComplete","getSubject","_subject","refCount_1","OnErrorResumeNextSubscriber","nextSources","subscribeToNextSource","PairwiseSubscriber","hasPrev","BehaviorSubject$$1","AsyncSubject","hasNext","QueueAction","QueueScheduler","QueueAction_1","ReplayEvent","ReplaySubject","windowTime","_events","_bufferSize","_windowTime","_getNow","_trimBufferThenGetEvents","queue_1","eventsCount","spliceCount","RaceSubscriber","hasFirst","RepeatSubscriber","RepeatWhenSubscriber","notifier","sourceIsBeingSubscribedTo","retries","subscribeToRetries","retriesSubscription","RetrySubscriber","RetryWhenSubscriber","SampleSubscriber","SampleTimeSubscriber","dispatchNotification","SequenceEqualCompareToSubscriber","SequenceEqualSubscriber","compareTo","comparor","_oneComplete","checkValues","areEqual","nextB","SingleSubscriber","seenValue","applySingleValue","singleValue","SkipSubscriber","SkipLastSubscriber","_skipCount","_count","_ring","skipCount","currentIndex","oldValue","SkipUntilSubscriber","isInnerStopped","SkipWhileSubscriber","skipping","tryCallPredicate","SwitchMapSubscriber","_tryNotifyNext","SwitchMapToSubscriber","inner","tryResultSelector","TakeSubscriber","takeUntil_2","TakeUntilOperator","TakeUntilSubscriber","TakeWhileSubscriber","nextOrComplete","predicateResult","DoSubscriber","safeSubscriber","defaultThrottleConfig","leading","trailing","ThrottleOperator","ThrottleSubscriber","_leading","_trailing","_hasTrailingValue","_trailingValue","tryDurationSelector","_sendTrailing","ThrottleTimeSubscriber","dispatchNext$2","TimeInterval","TimeIntervalSubscriber","lastTime","span","TimeoutError","TimeoutSubscriber","absoluteTimeout","waitFor","errorInstance","scheduleTimeout","dispatchTimeout","TimeoutWithSubscriber","withObservable","WindowSubscriber","openWindow","prevWindow","newWindow","WindowCountSubscriber","windowSize","startWindowEvery","windows","window_1","CountedSubject","_numberOfNextedValues","WindowTimeSubscriber","windowTimeSpan","windowCreationInterval","maxWindowSize","dispatchWindowClose","dispatchWindowCreation","dispatchWindowTimeSpanOnly","numberOfNextedValues","closeWindow","window_2","timeSpanState","WindowToggleSubscriber","openSubscription","unsubscribeClosingNotification","closingNotification","WithLatestFromSubscriber","found","StaticIterator","ZipSubscriber","iterators","StaticArrayIterator","ZipBufferIterator","stillUnsubscribed","notifyInactive","checkIterators","shouldComplete","nextResult","isComplete","debounceTime$2","debounceTime_1","distinctUntilChanged$1","distinctUntilChanged_1","filter$1","filter_1","first$1","first_1","map$1","map_1","takeUntil$1","takeUntil_1","CardTabsService","throttle_1","tab$","position$","tabs","addTab","removeTab","setPosition","CardTabComponent","_tabService","CardTabsetComponent","tabService","moveIntoView","resize","dimensions","_innerWidth","tablist","marginLeft","viewportStart","viewportEnd","cardWidth","CardTabsModule","CHECKBOX_VALUE_ACCESSOR","CheckboxComponent","uniqueCheckboxId","_checkboxId","indeterminateValue","ariaChecked","ColumnSortingComponent","stateChange","columnSortingState","ColumnSortingState","initParent","column","NoSort","orderNumber","changeState","Ascending","Descending","toggleColumn","ColumnSortingDirective","singleSort","ColumnSortingModule","DashboardService","_rowHeight","widgets$","options$","dimensions$","height$","placeholder$","layout$","stacked$","setLayoutData","updateWhenStacked","renderDashboard","setDashboard","dashboard","_dashboard","addWidget","widget","removeWidget","_widget","setDimensions","getLayoutData","widgets","col","getColumn","row","getRow","colSpan","getColumnSpan","rowSpan","getRowSpan","setColumn","setRow","setColumnSpan","setRowSpan","rowHeight","columnWidth","setDashboardLayout","_actionWidget","render","setWidgetPosition","setDashboardHeight","getWidgetsByOrder","w1","w2","w1Position","w2Position","success","getPositionAvailable","columnSpan","ignoreWidget","spaces","getOccupiedSpaces","_loop_1","_loop_2","block","state_1","state_2","forEachBlock","onResizeStart","_mouseEvent","bringToFront","onResizeDrag","mousePosX","mousePosY","pageY","mouseY","ActionDirection","Right","Left","difference","Bottom","Top","minHeight","TopLeft","TopRight","BottomLeft","BottomRight","currentWidth","currentHeight","setBounds","setPlaceholderBounds","updateWidgetPositions","onResizeEnd","commitWidgetChanges","shiftWidgetsUp","onDragStart","setWidgetOrigin","cacheWidgets","_widgetOrigin","restoreWidgets","shiftWidgets","getRowHeight","_cache","ignoreActionWidget","wgt","widgetsToMove","_loop_3","_loop_4","this_1","space","unmovedWidgets","grid","getRequiredSpacesFromPoint","gridSpace","getColumnCount","canWidgetMoveRight","validatePlaceholderPosition","canWidgetMoveLeft","distance","moveWidgetDown","shiftDirection","getWidgetsAtPosition","getColumnWidth","performMove","targetSpaces","moveable","ignoreResizing","Rounding","RoundDownBelowHalf","RoundUpOverHalf","getPlaceholderColumn","getPlaceholderRow","getPlaceholderColumnSpan","getPlaceholderRowSpan","rowCount","padding","getColumnFromPx","Move","RoundDown","overflow","getRowFromPx","rounding","half","RoundUp","getRowCount","emptyRow","sendToBack","stable","DashboardComponent","dashboardService","layoutChange","dashboardElement","onResize","DashboardWidgetComponent","resizable","zIndex","_column","regular","_row","_columnSpan","_rowSpan","random","getStackableValue","setStackableValue","dragstart","dragend","property","DragDirective","ngZone","moveevent","DashboardDragHandleDirective","DashboardModule","SPIN_BUTTON_VALUE_ACCESSOR","SpinButtonComponent","spinners","readOnly","scrolling","arrowkeys","scroll","triggerDecrement","triggerIncrement","encapsulation","ViewEncapsulation","incrementAriaLabel","inputAriaLabel","decrementAriaLabel","SpinButtonModule","TimeFormatPipe","TIME_PICKER_VALUE_ACCESSOR","TimePickerComponent","mousewheel","showMeridian","showHours","showMinutes","showSeconds","showSpinners","hourStep","minuteStep","secondStep","meridians","value$","hour$","getHours","hour","getMeridianTime","minute$","getMinutes","second$","getSeconds","meridian$","checkValidity","_meridian","setHour","setMinute","minute","setMinutes","setSeconds","incrementHour","arrowkey","decrementHour","incrementMinute","decrementMinute","incrementSecond","decrementSecond","selectMeridian","meridian","getTime","hourChange","currentHour","minuteChange","currentMinute","secondChange","second","currentSecond","aria-label","TimePickerModule","gridify","list","compareDays","day1","day2","getDate","getMonth","getFullYear","dateComparator","dateOne","dateTwo","timezoneComparator","zoneOne","zoneTwo","months","monthsShort","month","weekdaysShort","weekday","DateTimePickerConfig","showDate","showTime","showTimezone","weekdays","nowBtnText","timezones","DateTimePickerService","mode$","DatePickerMode","Day","date$","timezone$","getCurrentTimezone","month$","year$","showDate$","showTime$","showTimezone$","showSeconds$","showMeridian$","showSpinners$","weekdays$","nowBtnText$","timezones$","header$","headerEvent$","modeDirection","ModeDirection","setViewportMonth","setViewportYear","year","setDate","day","setMonth","setFullYear","setDateToNow","setViewportMode","goToChildMode","Descend","Year","Month","goToParentMode","Ascend","goToNext","DatePickerHeaderEvent","Next","goToPrevious","Previous","setHeader","getTimezoneOffset","timezone","setTimezone","DateTimePickerComponent","datepicker","dateChange","timezoneChange","setToNow","DayViewService","_datepicker","grid$","createDayGrid","setFocus","getDay","dates","dateRange","isToday","isCurrentMonth","selectedDay","DayViewComponent","datePicker","dayService","trackWeekByFn","trackDayByFn","focusDate","dayOffset","getTabbable","HeaderComponent","canAscend$","headerAria$","previousAria$","nextAria$","ascend","MonthViewService","createMonthGrid","currentMonth","currentYear","activeMonth","activeYear","isActiveMonth","selectedMonth","MonthViewComponent","_datePicker","monthService","focusMonth","monthOffset","targetMonth","targetYear","trackRowByFn","trackMonthByFn","TimeViewComponent","selectTimezone","_timezone","incrementTimezone","currentZone","zone","decrementTimezone","YearViewService","_year","createYearGrid","_event","goToNextDecade","goToPreviousDecade","decade","getDecade","isCurrentYear","isActiveYear","YearViewComponent","yearService","focusYear","yearOffset","trackYearByFn","FocusIfDirective","focusIfDelay","_timeout","focusIf","EboxComponent","EboxHeaderDirective","EboxContentDirective","EboxModule","latinMap","Á","Ă","Ắ","Ặ","Ằ","Ẳ","Ẵ","Ǎ","Â","Ấ","Ậ","Ầ","Ẩ","Ẫ","Ä","Ǟ","Ȧ","Ǡ","Ạ","Ȁ","À","Ả","Ȃ","Ā","Ą","Å","Ǻ","Ḁ","Ⱥ","Ã","Ꜳ","Æ","Ǽ","Ǣ","Ꜵ","Ꜷ","Ꜹ","Ꜻ","Ꜽ","Ḃ","Ḅ","Ɓ","Ḇ","Ƀ","Ƃ","Ć","Č","Ç","Ḉ","Ĉ","Ċ","Ƈ","Ȼ","Ď","Ḑ","Ḓ","Ḋ","Ḍ","Ɗ","Ḏ","ǲ","ǅ","Đ","Ƌ","Ǳ","Ǆ","É","Ĕ","Ě","Ȩ","Ḝ","Ê","Ế","Ệ","Ề","Ể","Ễ","Ḙ","Ë","Ė","Ẹ","Ȅ","È","Ẻ","Ȇ","Ē","Ḗ","Ḕ","Ę","Ɇ","Ẽ","Ḛ","Ꝫ","Ḟ","Ƒ","Ǵ","Ğ","Ǧ","Ģ","Ĝ","Ġ","Ɠ","Ḡ","Ǥ","Ḫ","Ȟ","Ḩ","Ĥ","Ⱨ","Ḧ","Ḣ","Ḥ","Ħ","Í","Ĭ","Ǐ","Î","Ï","Ḯ","İ","Ị","Ȉ","Ì","Ỉ","Ȋ","Ī","Į","Ɨ","Ĩ","Ḭ","Ꝺ","Ꝼ","Ᵹ","Ꞃ","Ꞅ","Ꞇ","Ꝭ","Ĵ","Ɉ","Ḱ","Ǩ","Ķ","Ⱪ","Ꝃ","Ḳ","Ƙ","Ḵ","Ꝁ","Ꝅ","Ĺ","Ƚ","Ľ","Ļ","Ḽ","Ḷ","Ḹ","Ⱡ","Ꝉ","Ḻ","Ŀ","Ɫ","ǈ","Ł","Ǉ","Ḿ","Ṁ","Ṃ","Ɱ","Ń","Ň","Ņ","Ṋ","Ṅ","Ṇ","Ǹ","Ɲ","Ṉ","Ƞ","ǋ","Ñ","Ǌ","Ó","Ŏ","Ǒ","Ô","Ố","Ộ","Ồ","Ổ","Ỗ","Ö","Ȫ","Ȯ","Ȱ","Ọ","Ő","Ȍ","Ò","Ỏ","Ơ","Ớ","Ợ","Ờ","Ở","Ỡ","Ȏ","Ꝋ","Ꝍ","Ō","Ṓ","Ṑ","Ɵ","Ǫ","Ǭ","Ø","Ǿ","Õ","Ṍ","Ṏ","Ȭ","Ƣ","Ꝏ","Ɛ","Ɔ","Ȣ","Ṕ","Ṗ","Ꝓ","Ƥ","Ꝕ","Ᵽ","Ꝑ","Ꝙ","Ꝗ","Ŕ","Ř","Ŗ","Ṙ","Ṛ","Ṝ","Ȑ","Ȓ","Ṟ","Ɍ","Ɽ","Ꜿ","Ǝ","Ś","Ṥ","Š","Ṧ","Ş","Ŝ","Ș","Ṡ","Ṣ","Ṩ","Ť","Ţ","Ṱ","Ț","Ⱦ","Ṫ","Ṭ","Ƭ","Ṯ","Ʈ","Ŧ","Ɐ","Ꞁ","Ɯ","Ʌ","Ꜩ","Ú","Ŭ","Ǔ","Û","Ṷ","Ü","Ǘ","Ǚ","Ǜ","Ǖ","Ṳ","Ụ","Ű","Ȕ","Ù","Ủ","Ư","Ứ","Ự","Ừ","Ử","Ữ","Ȗ","Ū","Ṻ","Ų","Ů","Ũ","Ṹ","Ṵ","Ꝟ","Ṿ","Ʋ","Ṽ","Ꝡ","Ẃ","Ŵ","Ẅ","Ẇ","Ẉ","Ẁ","Ⱳ","Ẍ","Ẋ","Ý","Ŷ","Ÿ","Ẏ","Ỵ","Ỳ","Ƴ","Ỷ","Ỿ","Ȳ","Ɏ","Ỹ","Ź","Ž","Ẑ","Ⱬ","Ż","Ẓ","Ȥ","Ẕ","Ƶ","Ĳ","Œ","ᴀ","ᴁ","ʙ","ᴃ","ᴄ","ᴅ","ᴇ","ꜰ","ɢ","ʛ","ʜ","ɪ","ʁ","ᴊ","ᴋ","ʟ","ᴌ","ᴍ","ɴ","ᴏ","ɶ","ᴐ","ᴕ","ᴘ","ʀ","ᴎ","ᴙ","ꜱ","ᴛ","ⱻ","ᴚ","ᴜ","ᴠ","ᴡ","ʏ","ᴢ","á","ă","ắ","ặ","ằ","ẳ","ẵ","ǎ","â","ấ","ậ","ầ","ẩ","ẫ","ä","ǟ","ȧ","ǡ","ạ","ȁ","à","ả","ȃ","ā","ą","ᶏ","ẚ","å","ǻ","ḁ","ⱥ","ã","ꜳ","æ","ǽ","ǣ","ꜵ","ꜷ","ꜹ","ꜻ","ꜽ","ḃ","ḅ","ɓ","ḇ","ᵬ","ᶀ","ƀ","ƃ","ɵ","ć","č","ç","ḉ","ĉ","ɕ","ċ","ƈ","ȼ","ď","ḑ","ḓ","ȡ","ḋ","ḍ","ɗ","ᶑ","ḏ","ᵭ","ᶁ","đ","ɖ","ƌ","ı","ȷ","ɟ","ʄ","ǳ","ǆ","é","ĕ","ě","ȩ","ḝ","ê","ế","ệ","ề","ể","ễ","ḙ","ë","ė","ẹ","ȅ","è","ẻ","ȇ","ē","ḗ","ḕ","ⱸ","ę","ᶒ","ɇ","ẽ","ḛ","ꝫ","ḟ","ƒ","ᵮ","ᶂ","ǵ","ğ","ǧ","ģ","ĝ","ġ","ɠ","ḡ","ᶃ","ǥ","ḫ","ȟ","ḩ","ĥ","ⱨ","ḧ","ḣ","ḥ","ɦ","ẖ","ħ","ƕ","í","ĭ","ǐ","î","ï","ḯ","ị","ȉ","ì","ỉ","ȋ","ī","į","ᶖ","ɨ","ĩ","ḭ","ꝺ","ꝼ","ᵹ","ꞃ","ꞅ","ꞇ","ꝭ","ǰ","ĵ","ʝ","ɉ","ḱ","ǩ","ķ","ⱪ","ꝃ","ḳ","ƙ","ḵ","ᶄ","ꝁ","ꝅ","ĺ","ƚ","ɬ","ľ","ļ","ḽ","ȴ","ḷ","ḹ","ⱡ","ꝉ","ḻ","ŀ","ɫ","ᶅ","ɭ","ł","ǉ","ſ","ẜ","ẛ","ẝ","ḿ","ṁ","ṃ","ɱ","ᵯ","ᶆ","ń","ň","ņ","ṋ","ȵ","ṅ","ṇ","ǹ","ɲ","ṉ","ƞ","ᵰ","ᶇ","ɳ","ñ","ǌ","ó","ŏ","ǒ","ô","ố","ộ","ồ","ổ","ỗ","ö","ȫ","ȯ","ȱ","ọ","ő","ȍ","ò","ỏ","ơ","ớ","ợ","ờ","ở","ỡ","ȏ","ꝋ","ꝍ","ⱺ","ō","ṓ","ṑ","ǫ","ǭ","ø","ǿ","õ","ṍ","ṏ","ȭ","ƣ","ꝏ","ɛ","ᶓ","ɔ","ᶗ","ȣ","ṕ","ṗ","ꝓ","ƥ","ᵱ","ᶈ","ꝕ","ᵽ","ꝑ","ꝙ","ʠ","ɋ","ꝗ","ŕ","ř","ŗ","ṙ","ṛ","ṝ","ȑ","ɾ","ᵳ","ȓ","ṟ","ɼ","ᵲ","ᶉ","ɍ","ɽ","ↄ","ꜿ","ɘ","ɿ","ś","ṥ","š","ṧ","ş","ŝ","ș","ṡ","ṣ","ṩ","ʂ","ᵴ","ᶊ","ȿ","ɡ","ᴑ","ᴓ","ᴝ","ť","ţ","ṱ","ț","ȶ","ẗ","ⱦ","ṫ","ṭ","ƭ","ṯ","ᵵ","ƫ","ʈ","ŧ","ᵺ","ɐ","ᴂ","ǝ","ᵷ","ɥ","ʮ","ʯ","ᴉ","ʞ","ꞁ","ɯ","ɰ","ᴔ","ɹ","ɻ","ɺ","ⱹ","ʇ","ʌ","ʍ","ʎ","ꜩ","ú","ŭ","ǔ","û","ṷ","ü","ǘ","ǚ","ǜ","ǖ","ṳ","ụ","ű","ȕ","ù","ủ","ư","ứ","ự","ừ","ử","ữ","ȗ","ū","ṻ","ų","ᶙ","ů","ũ","ṹ","ṵ","ᵫ","ꝸ","ⱴ","ꝟ","ṿ","ʋ","ᶌ","ⱱ","ṽ","ꝡ","ẃ","ŵ","ẅ","ẇ","ẉ","ẁ","ⱳ","ẘ","ẍ","ẋ","ᶍ","ý","ŷ","ÿ","ẏ","ỵ","ỳ","ƴ","ỷ","ỿ","ȳ","ẙ","ɏ","ỹ","ź","ž","ẑ","ʑ","ⱬ","ż","ẓ","ȥ","ẕ","ᵶ","ᶎ","ʐ","ƶ","ɀ","ﬀ","ﬃ","ﬄ","ﬁ","ﬂ","ĳ","œ","ﬆ","ₐ","ₑ","ᵢ","ⱼ","ₒ","ᵣ","ᵤ","ᵥ","ₓ","wordRegexDelimiters","phraseRegexDelimiters","token","regexStr","preTokenized","preTokenizedLength","replacePhraseDelimiters","object","endsWith","propertiesArray_1"],"mappings":"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"}

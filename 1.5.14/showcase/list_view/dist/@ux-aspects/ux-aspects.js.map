{"version":3,"file":"ux-aspects.js","sources":["~/@ux-aspects/ux-aspects/ux-aspects.ts","~/@ux-aspects/ux-aspects/index.ts","~/@ux-aspects/ux-aspects/hybrid/hybrid.module.ts","~/@ux-aspects/ux-aspects/hybrid/services/time-ago/time-ago.service.ts","~/@ux-aspects/ux-aspects/hybrid/services/pdf/pdf.service.ts","~/@ux-aspects/ux-aspects/hybrid/services/navigation-menu/navigation-menu.service.ts","~/@ux-aspects/ux-aspects/hybrid/components/thumbnail/thumbnail.component.ts","~/@ux-aspects/ux-aspects/hybrid/components/tree-grid/tree-grid.component.ts","~/@ux-aspects/ux-aspects/hybrid/components/sort-direction-toggle/sort-direction-toggle.component.ts","~/@ux-aspects/ux-aspects/hybrid/components/social-chart/social-chart.component.ts","~/@ux-aspects/ux-aspects/hybrid/components/slider-chart/slider-chart.directive.ts","~/@ux-aspects/ux-aspects/hybrid/components/select-table/select-table.component.ts","~/@ux-aspects/ux-aspects/hybrid/components/search-toolbar/search-toolbar.component.ts","~/@ux-aspects/ux-aspects/hybrid/components/sankey-chart/sankey.component.ts","~/@ux-aspects/ux-aspects/hybrid/components/peity-chart/peity-updating-line-chart.component.ts","~/@ux-aspects/ux-aspects/hybrid/components/peity-chart/peity-pie-chart.component.ts","~/@ux-aspects/ux-aspects/hybrid/components/peity-chart/peity-line-chart.component.ts","~/@ux-aspects/ux-aspects/hybrid/components/peity-chart/peity-bar-chart.component.ts","~/@ux-aspects/ux-aspects/hybrid/components/partition-map/partition-map.component.ts","~/@ux-aspects/ux-aspects/hybrid/components/organization-chart/organization-chart.component.ts","~/@ux-aspects/ux-aspects/hybrid/components/nested-donut/nested-donut.component.ts","~/@ux-aspects/ux-aspects/hybrid/components/marquee-wizard/marquee-wizard.component.ts","~/@ux-aspects/ux-aspects/hybrid/components/hierarchy-bar/hierarchy-bar.component.ts","~/@ux-aspects/ux-aspects/hybrid/components/grid/grid.component.ts","~/@ux-aspects/ux-aspects/hybrid/components/flot/flot.component.ts","~/@ux-aspects/ux-aspects/hybrid/components/floating-action-button/floating-action-button.component.ts","~/@ux-aspects/ux-aspects/hybrid/components/expand-input/expand-input.component.ts","~/@ux-aspects/ux-aspects/hybrid/components/contacts/contacts.component.ts","~/@ux-aspects/ux-aspects/services/persistent-data/adapters/storage-adapter.ts","~/@ux-aspects/ux-aspects/services/persistent-data/persistent-data.module.ts","~/@ux-aspects/ux-aspects/services/persistent-data/persistent-data.service.ts","~/@ux-aspects/ux-aspects/services/persistent-data/adapters/session-storage-adapter.ts","~/@ux-aspects/ux-aspects/services/persistent-data/adapters/local-storage-adapter.ts","~/@ux-aspects/ux-aspects/services/persistent-data/adapters/cookie-adapter.ts","~/@ux-aspects/ux-aspects/pipes/string-filter/string-filter.module.ts","~/@ux-aspects/ux-aspects/pipes/string-filter/string-filter.pipe.ts","~/@ux-aspects/ux-aspects/directives/reorderable/reorderable.module.ts","~/@ux-aspects/ux-aspects/directives/reorderable/reorderable.directive.ts","~/@ux-aspects/ux-aspects/directives/reorderable/reorderable.service.ts","~/@ux-aspects/ux-aspects/directives/reorderable/dragula.ts","~/@ux-aspects/ux-aspects/directives/reorderable/reorderable-model.directive.ts","~/@ux-aspects/ux-aspects/directives/reorderable/reorderable-handle.directive.ts","~/@ux-aspects/ux-aspects/directives/selection/selection.module.ts","~/@ux-aspects/ux-aspects/directives/selection/selection.directive.ts","~/@ux-aspects/ux-aspects/directives/selection/selection-item.directive.ts","~/@ux-aspects/ux-aspects/directives/selection/selection.service.ts","~/@ux-aspects/ux-aspects/directives/selection/strategies/simple-selection.strategy.ts","~/@ux-aspects/ux-aspects/directives/selection/strategies/row-selection.strategy.ts","~/@ux-aspects/ux-aspects/directives/selection/strategies/selection.strategy.ts","~/@ux-aspects/ux-aspects/directives/layout-switcher/layout-switcher.module.ts","~/@ux-aspects/ux-aspects/directives/layout-switcher/layout-switcher.directive.ts","~/@ux-aspects/ux-aspects/directives/layout-switcher/layout-switcher-item.directive.ts","~/@ux-aspects/ux-aspects/directives/hover-action/hover-action.module.ts","~/@ux-aspects/ux-aspects/directives/hover-action/hover-action.directive.ts","~/@ux-aspects/ux-aspects/directives/hover-action/hover-action-container.directive.ts","~/@ux-aspects/ux-aspects/directives/hover-action/hover-action.service.ts","~/@ux-aspects/ux-aspects/directives/help-center/help-center.module.ts","~/@ux-aspects/ux-aspects/directives/help-center/help-center-item.directive.ts","~/@ux-aspects/ux-aspects/directives/help-center/help-center.service.ts","~/@ux-aspects/ux-aspects/directives/float-label/float-label.module.ts","~/@ux-aspects/ux-aspects/directives/float-label/float-label.directive.ts","~/@ux-aspects/ux-aspects/directives/fixed-header-table/fixed-header-table.module.ts","~/@ux-aspects/ux-aspects/directives/fixed-header-table/fixed-header-table.directive.ts","~/@ux-aspects/ux-aspects/directives/auto-grow/auto-grow.module.ts","~/@ux-aspects/ux-aspects/directives/auto-grow/auto-grow.directive.ts","~/@ux-aspects/ux-aspects/components/virtual-scroll/virtual-scroll.module.ts","~/@ux-aspects/ux-aspects/components/virtual-scroll/virtual-scroll.component.ts","~/@ux-aspects/ux-aspects/components/virtual-scroll/directives/virtual-scroll-cell.directive.ts","~/@ux-aspects/ux-aspects/components/virtual-scroll/directives/virtual-scroll-load-button.directive.ts","~/@ux-aspects/ux-aspects/components/virtual-scroll/directives/virtual-scroll-loading.directive.ts","~/@ux-aspects/ux-aspects/components/media-player/media-player.module.ts","~/@ux-aspects/ux-aspects/pipes/file-size/file-size.module.ts","~/@ux-aspects/ux-aspects/pipes/file-size/file-size.pipe.ts","~/@ux-aspects/ux-aspects/pipes/duration/duration.module.ts","~/@ux-aspects/ux-aspects/pipes/duration/duration.pipe.ts","~/@ux-aspects/ux-aspects/components/media-player/extensions/controls/controls.component.ts","~/@ux-aspects/ux-aspects/components/media-player/extensions/timeline/timeline.component.ts","~/@ux-aspects/ux-aspects/components/media-player/extensions/base-extension.directive.ts","~/@ux-aspects/ux-aspects/components/media-player/media-player.component.ts","~/@ux-aspects/ux-aspects/services/audio/audio.module.ts","~/@ux-aspects/ux-aspects/services/audio/audio.service.ts","~/@ux-aspects/ux-aspects/components/media-player/media-player.service.ts","~/@ux-aspects/ux-aspects/services/frame-extraction/frame-extraction.module.ts","~/@ux-aspects/ux-aspects/services/frame-extraction/frame-extraction.service.ts","~/@ux-aspects/ux-aspects/components/toolbar-search/toolbar-search.module.ts","~/@ux-aspects/ux-aspects/components/toolbar-search/toolbar-search.component.ts","~/@ux-aspects/ux-aspects/components/toolbar-search/toolbar-search-button.directive.ts","~/@ux-aspects/ux-aspects/components/toolbar-search/toolbar-search-field.directive.ts","~/@ux-aspects/ux-aspects/components/toggleswitch/toggleswitch.module.ts","~/@ux-aspects/ux-aspects/components/toggleswitch/toggleswitch.component.ts","~/@ux-aspects/ux-aspects/components/timeline/timeline.module.ts","~/@ux-aspects/ux-aspects/components/timeline/timeline-event/timeline-event.component.ts","~/@ux-aspects/ux-aspects/components/timeline/timeline.component.ts","~/@ux-aspects/ux-aspects/components/tabset/tabset.module.ts","~/@ux-aspects/ux-aspects/components/tabset/tab/tab-focus.directive.ts","~/@ux-aspects/ux-aspects/components/tabset/tab/tab-heading.directive.ts","~/@ux-aspects/ux-aspects/components/tabset/tab/tab.component.ts","~/@ux-aspects/ux-aspects/components/tabset/tabset.component.ts","~/@ux-aspects/ux-aspects/components/tabset/tabset.service.ts","~/@ux-aspects/ux-aspects/components/spark/spark.module.ts","~/@ux-aspects/ux-aspects/components/spark/spark.component.ts","~/@ux-aspects/ux-aspects/components/slider/slider.module.ts","~/@ux-aspects/ux-aspects/components/slider/slider.component.ts","~/@ux-aspects/ux-aspects/components/side-panel/side-panel.module.ts","~/@ux-aspects/ux-aspects/components/side-panel/side-panel-close.directive.ts","~/@ux-aspects/ux-aspects/components/search-builder/search-builder.module.ts","~/@ux-aspects/ux-aspects/components/select/select.module.ts","~/@ux-aspects/ux-aspects/components/tag-input/tag-input.module.ts","~/@ux-aspects/ux-aspects/components/tag-input/tag-input.component.ts","~/@ux-aspects/ux-aspects/components/tag-input/tag-input-event.ts","~/@ux-aspects/ux-aspects/components/select/select.component.ts","~/@ux-aspects/ux-aspects/components/typeahead/typeahead.module.ts","~/@ux-aspects/ux-aspects/directives/scroll-into-view-if/scroll-into-view-if.module.ts","~/@ux-aspects/ux-aspects/directives/scroll-into-view-if/scroll-into-view-if.directive.ts","~/@ux-aspects/ux-aspects/directives/scroll-into-view-if/scroll-into-view.service.ts","~/@ux-aspects/ux-aspects/directives/infinite-scroll/infinite-scroll.module.ts","~/@ux-aspects/ux-aspects/directives/infinite-scroll/infinite-scroll.directive.ts","~/@ux-aspects/ux-aspects/directives/infinite-scroll/infinite-scroll-loading.directive.ts","~/@ux-aspects/ux-aspects/directives/infinite-scroll/infinite-scroll-load-button.directive.ts","~/@ux-aspects/ux-aspects/components/typeahead/typeahead.component.ts","~/@ux-aspects/ux-aspects/components/typeahead/typeahead-key.service.ts","~/@ux-aspects/ux-aspects/components/typeahead/typeahead-event.ts","~/@ux-aspects/ux-aspects/components/search-builder/search-builder.component.ts","~/@ux-aspects/ux-aspects/components/search-builder/search-components/select/select.component.ts","~/@ux-aspects/ux-aspects/components/search-builder/search-components/date-range/date-range.component.ts","~/@ux-aspects/ux-aspects/components/search-builder/search-components/date/date.component.ts","~/@ux-aspects/ux-aspects/components/search-builder/search-components/text/text.component.ts","~/@ux-aspects/ux-aspects/components/search-builder/search-components/base-search.component.ts","~/@ux-aspects/ux-aspects/components/search-builder/search-builder-outlet/search-builder-outlet.directive.ts","~/@ux-aspects/ux-aspects/components/search-builder/search-builder-group/search-builder-group.component.ts","~/@ux-aspects/ux-aspects/components/search-builder/search-builder-group/search-builder-group.service.ts","~/@ux-aspects/ux-aspects/components/search-builder/search-builder.service.ts","~/@ux-aspects/ux-aspects/components/radiobutton/radiobutton.module.ts","~/@ux-aspects/ux-aspects/components/radiobutton/radiobutton.component.ts","~/@ux-aspects/ux-aspects/components/progress-bar/progress-bar.module.ts","~/@ux-aspects/ux-aspects/components/progress-bar/progress-bar.component.ts","~/@ux-aspects/ux-aspects/components/page-header/page-header.module.ts","~/@ux-aspects/ux-aspects/directives/menu-navigation/menu-navigation.module.ts","~/@ux-aspects/ux-aspects/directives/menu-navigation/menu-navigation-toggle.directive.ts","~/@ux-aspects/ux-aspects/directives/menu-navigation/menu-navigation.directive.ts","~/@ux-aspects/ux-aspects/directives/menu-navigation/menu-navigation-item.directive.ts","~/@ux-aspects/ux-aspects/directives/menu-navigation/menu-navigation.service.ts","~/@ux-aspects/ux-aspects/components/page-header/navigation/navigation.component.ts","~/@ux-aspects/ux-aspects/components/page-header/navigation/navigation-item/navigation-item.component.ts","~/@ux-aspects/ux-aspects/components/page-header/navigation/navigation-dropdown-item/navigation-dropdown-item.component.ts","~/@ux-aspects/ux-aspects/components/page-header/icon-menu/icon-menu.component.ts","~/@ux-aspects/ux-aspects/components/page-header/page-header.component.ts","~/@ux-aspects/ux-aspects/components/page-header/page-header.service.ts","~/@ux-aspects/ux-aspects/components/page-header/custom-menu/custom-menu.directive.ts","~/@ux-aspects/ux-aspects/components/number-picker/number-picker.module.ts","~/@ux-aspects/ux-aspects/components/number-picker/number-picker.component.ts","~/@ux-aspects/ux-aspects/components/notification/notification.module.ts","~/@ux-aspects/ux-aspects/components/notification/notification-list.component.ts","~/@ux-aspects/ux-aspects/components/notification/notification.service.ts","~/@ux-aspects/ux-aspects/services/color/color.module.ts","~/@ux-aspects/ux-aspects/services/color/color.service.ts","~/@ux-aspects/ux-aspects/components/navigation/navigation.module.ts","~/@ux-aspects/ux-aspects/components/navigation/navigation-item/navigation-item.component.ts","~/@ux-aspects/ux-aspects/components/navigation/navigation.component.ts","~/@ux-aspects/ux-aspects/components/marquee-wizard/marquee-wizard.module.ts","~/@ux-aspects/ux-aspects/components/marquee-wizard/marquee-wizard.component.ts","~/@ux-aspects/ux-aspects/components/marquee-wizard/marquee-wizard-step.component.ts","~/@ux-aspects/ux-aspects/components/marquee-wizard/marquee-wizard.service.ts","~/@ux-aspects/ux-aspects/components/wizard/wizard.module.ts","~/@ux-aspects/ux-aspects/components/wizard/wizard.component.ts","~/@ux-aspects/ux-aspects/components/wizard/wizard-step.component.ts","~/@ux-aspects/ux-aspects/components/item-display-panel/item-display-panel.module.ts","~/@ux-aspects/ux-aspects/components/item-display-panel/item-display-panel.component.ts","~/@ux-aspects/ux-aspects/components/side-panel/side-panel.component.ts","~/@ux-aspects/ux-aspects/components/side-panel/side-panel.service.ts","~/@ux-aspects/ux-aspects/components/hierarchy-bar/hierarchy-bar.module.ts","~/@ux-aspects/ux-aspects/components/popover/popover.module.ts","~/@ux-aspects/ux-aspects/components/popover/popover.directive.ts","~/@ux-aspects/ux-aspects/components/popover/popover.component.ts","~/@ux-aspects/ux-aspects/directives/click-outside/click-outside.module.ts","~/@ux-aspects/ux-aspects/directives/click-outside/click-outside.directive.ts","~/@ux-aspects/ux-aspects/components/hierarchy-bar/hierarchy-bar.component.ts","~/@ux-aspects/ux-aspects/components/hierarchy-bar/hierarchy-bar.service.ts","~/@ux-aspects/ux-aspects/components/floating-action-buttons/floating-action-buttons.module.ts","~/@ux-aspects/ux-aspects/components/floating-action-buttons/floating-action-button.component.ts","~/@ux-aspects/ux-aspects/components/floating-action-buttons/floating-action-buttons.component.ts","~/@ux-aspects/ux-aspects/components/floating-action-buttons/floating-action-buttons.service.ts","../../../../node_modules/.tmp/tooltip/tooltip.directive.ts","../../../../node_modules/.tmp/utils/warn-once.ts","../../../../node_modules/.tmp/tooltip/tooltip-container.component.ts","../../../../node_modules/.tmp/tooltip/tooltip.config.ts","~/@ux-aspects/ux-aspects/components/flippable-card/flippable-card.module.ts","~/@ux-aspects/ux-aspects/components/flippable-card/flippable-card.component.ts","~/@ux-aspects/ux-aspects/components/filters/filter.module.ts","~/@ux-aspects/ux-aspects/components/filters/filter-dynamic/filter-dynamic.component.ts","~/@ux-aspects/ux-aspects/components/filters/filter-dropdown/filter-dropdown.component.ts","~/@ux-aspects/ux-aspects/components/filters/filter-base/filter-base.component.ts","~/@ux-aspects/ux-aspects/components/filters/filter-container.component.ts","../../../../node_modules/.tmp/dropdown/bs-dropdown.module.ts","../../../../node_modules/.tmp/dropdown/bs-dropdown-toggle.directive.ts","../../../../node_modules/.tmp/dropdown/bs-dropdown-menu.directive.ts","../../../../node_modules/.tmp/dropdown/bs-dropdown.directive.ts","../../../../node_modules/.tmp/dropdown/bs-dropdown-container.component.ts","../../../../node_modules/.tmp/dropdown/bs-dropdown.state.ts","../../../../node_modules/.tmp/dropdown/bs-dropdown.config.ts","~/@ux-aspects/ux-aspects/components/facets/models/facet.ts","~/@ux-aspects/ux-aspects/components/facets/facets.module.ts","~/@ux-aspects/ux-aspects/components/tooltip/tooltip.module.ts","~/@ux-aspects/ux-aspects/components/tooltip/tooltip.directive.ts","~/@ux-aspects/ux-aspects/components/tooltip/tooltip.service.ts","~/@ux-aspects/ux-aspects/components/tooltip/tooltip.component.ts","~/@ux-aspects/ux-aspects/components/facets/facet-typeahead-list/facet-typeahead-list.component.ts","~/@ux-aspects/ux-aspects/components/facets/facet-check-list/facet-check-list.component.ts","~/@ux-aspects/ux-aspects/components/facets/base/facet-header/facet-header.component.ts","~/@ux-aspects/ux-aspects/components/facets/base/facet-base/facet-base.component.ts","~/@ux-aspects/ux-aspects/components/facets/facet-container.component.ts","~/@ux-aspects/ux-aspects/components/facets/facet-events.ts","../../../../node_modules/.tmp/typeahead/typeahead.module.ts","../../../../node_modules/.tmp/typeahead/typeahead.directive.ts","../../../../node_modules/.tmp/component-loader/component-loader.factory.ts","../../../../node_modules/.tmp/positioning/positioning.service.ts","../../../../node_modules/.tmp/positioning/ng-positioning.ts","../../../../node_modules/.tmp/component-loader/component-loader.class.ts","../../../../node_modules/.tmp/component-loader/content-ref.class.ts","../../../../node_modules/.tmp/utils/triggers.ts","../../../../node_modules/.tmp/typeahead/typeahead-container.component.ts","../../../../node_modules/.tmp/utils/utils.class.ts","../../../../node_modules/.tmp/utils/trigger.class.ts","../../../../node_modules/.tmp/utils/theme-provider.ts","../../../../node_modules/.tmp/utils/facade/browser.ts","../../../../node_modules/.tmp/utils/decorators.ts","../../../../node_modules/.tmp/typeahead/typeahead-utils.ts","../../../../node_modules/.tmp/typeahead/typeahead-match.class.ts","../../../../node_modules/.tmp/typeahead/latin-map.ts","~/@ux-aspects/ux-aspects/components/ebox/ebox.module.ts","~/@ux-aspects/ux-aspects/components/ebox/ebox.component.ts","~/@ux-aspects/ux-aspects/components/date-time-picker/date-time-picker.module.ts","~/@ux-aspects/ux-aspects/directives/focus-if/focus-if.module.ts","~/@ux-aspects/ux-aspects/directives/focus-if/focus-if.directive.ts","~/@ux-aspects/ux-aspects/components/date-time-picker/year-view/year-view.component.ts","~/@ux-aspects/ux-aspects/components/date-time-picker/year-view/year-view.service.ts","~/@ux-aspects/ux-aspects/components/date-time-picker/time-view/time-view.component.ts","~/@ux-aspects/ux-aspects/components/date-time-picker/month-view/month-view.component.ts","~/@ux-aspects/ux-aspects/components/date-time-picker/month-view/month-view.service.ts","~/@ux-aspects/ux-aspects/components/date-time-picker/header/header.component.ts","~/@ux-aspects/ux-aspects/components/date-time-picker/day-view/day-view.component.ts","~/@ux-aspects/ux-aspects/components/date-time-picker/day-view/day-view.service.ts","~/@ux-aspects/ux-aspects/components/date-time-picker/date-time-picker.component.ts","~/@ux-aspects/ux-aspects/components/date-time-picker/date-time-picker.service.ts","~/@ux-aspects/ux-aspects/components/date-time-picker/date-time-picker.config.ts","~/@ux-aspects/ux-aspects/components/date-time-picker/date-time-picker.utils.ts","~/@ux-aspects/ux-aspects/components/time-picker/time-picker.module.ts","~/@ux-aspects/ux-aspects/components/time-picker/time-picker.component.ts","~/@ux-aspects/ux-aspects/components/time-picker/time-format.pipe.ts","~/@ux-aspects/ux-aspects/components/spin-button/spin-button.module.ts","~/@ux-aspects/ux-aspects/components/spin-button/spin-button.component.ts","~/@ux-aspects/ux-aspects/components/dashboard/dashboard.module.ts","~/@ux-aspects/ux-aspects/directives/drag/drag.module.ts","~/@ux-aspects/ux-aspects/components/dashboard/drag-handle/drag-handle.directive.ts","~/@ux-aspects/ux-aspects/directives/drag/drag.directive.ts","~/@ux-aspects/ux-aspects/components/dashboard/widget/dashboard-widget.component.ts","~/@ux-aspects/ux-aspects/components/dashboard/dashboard.component.ts","~/@ux-aspects/ux-aspects/components/dashboard/dashboard.service.ts","~/@ux-aspects/ux-aspects/components/column-sorting/column-sorting.module.ts","~/@ux-aspects/ux-aspects/components/column-sorting/column-sorting.directive.ts","~/@ux-aspects/ux-aspects/components/column-sorting/column-sorting.component.ts","~/@ux-aspects/ux-aspects/components/checkbox/checkbox.module.ts","~/@ux-aspects/ux-aspects/components/checkbox/checkbox.component.ts","~/@ux-aspects/ux-aspects/components/card-tabs/card-tabs.module.ts","~/@ux-aspects/ux-aspects/components/card-tabs/card-tabset/card-tabset.component.ts","~/@ux-aspects/ux-aspects/components/card-tabs/card-tab/card-tab.component.ts","~/@ux-aspects/ux-aspects/components/card-tabs/card-tabs.service.ts","../../../../node_modules/src/operators.ts","../../../../node_modules/src/operators/zip.ts","../../../../node_modules/src/operators/withLatestFrom.ts","../../../../node_modules/src/operators/windowWhen.ts","../../../../node_modules/src/operators/windowToggle.ts","../../../../node_modules/src/operators/windowTime.ts","../../../../node_modules/src/operators/windowCount.ts","../../../../node_modules/src/operators/window.ts","../../../../node_modules/src/operators/timeoutWith.ts","../../../../node_modules/src/operators/timeout.ts","../../../../node_modules/src/util/TimeoutError.ts","../../../../node_modules/src/operators/timeInterval.ts","../../../../node_modules/src/operators/throttleTime.ts","../../../../node_modules/src/operators/throttle.ts","../../../../node_modules/src/operators/tap.ts","../../../../node_modules/src/operators/takeWhile.ts","../../../../node_modules/src/operators/takeUntil.ts","../../../../node_modules/src/operators/take.ts","../../../../node_modules/src/operators/switchMapTo.ts","../../../../node_modules/src/operators/switchMap.ts","../../../../node_modules/src/operators/skipWhile.ts","../../../../node_modules/src/operators/skipUntil.ts","../../../../node_modules/src/operators/skipLast.ts","../../../../node_modules/src/operators/skip.ts","../../../../node_modules/src/operators/single.ts","../../../../node_modules/src/operators/sequenceEqual.ts","../../../../node_modules/src/operators/sampleTime.ts","../../../../node_modules/src/operators/sample.ts","../../../../node_modules/src/operators/retryWhen.ts","../../../../node_modules/src/operators/retry.ts","../../../../node_modules/src/operators/repeatWhen.ts","../../../../node_modules/src/operators/repeat.ts","../../../../node_modules/src/observable/race.ts","../../../../node_modules/src/ReplaySubject.ts","../../../../node_modules/src/scheduler/queue.ts","../../../../node_modules/src/scheduler/QueueScheduler.ts","../../../../node_modules/src/scheduler/QueueAction.ts","../../../../node_modules/src/AsyncSubject.ts","../../../../node_modules/src/BehaviorSubject.ts","../../../../node_modules/src/operators/pairwise.ts","../../../../node_modules/src/operators/onErrorResumeNext.ts","../../../../node_modules/src/observable/ConnectableObservable.ts","../../../../node_modules/src/operators/refCount.ts","../../../../node_modules/src/operators/mergeScan.ts","../../../../node_modules/src/operators/mergeMapTo.ts","../../../../node_modules/src/operators/takeLast.ts","../../../../node_modules/src/operators/scan.ts","../../../../node_modules/src/operators/materialize.ts","../../../../node_modules/src/operators/mapTo.ts","../../../../node_modules/src/operators/map.ts","../../../../node_modules/src/operators/last.ts","../../../../node_modules/src/operators/isEmpty.ts","../../../../node_modules/src/operators/ignoreElements.ts","../../../../node_modules/src/operators/groupBy.ts","../../../../node_modules/src/util/FastMap.ts","../../../../node_modules/src/util/Map.ts","../../../../node_modules/src/util/MapPolyfill.ts","../../../../node_modules/src/Subject.ts","../../../../node_modules/src/SubjectSubscription.ts","../../../../node_modules/src/util/ObjectUnsubscribedError.ts","../../../../node_modules/src/operators/first.ts","../../../../node_modules/src/util/EmptyError.ts","../../../../node_modules/src/operators/find.ts","../../../../node_modules/src/operators/finalize.ts","../../../../node_modules/src/operators/filter.ts","../../../../node_modules/src/operators/expand.ts","../../../../node_modules/src/operators/exhaustMap.ts","../../../../node_modules/src/operators/exhaust.ts","../../../../node_modules/src/operators/every.ts","../../../../node_modules/src/operators/elementAt.ts","../../../../node_modules/src/util/ArgumentOutOfRangeError.ts","../../../../node_modules/src/operators/distinctUntilChanged.ts","../../../../node_modules/src/operators/distinct.ts","../../../../node_modules/src/util/Set.ts","../../../../node_modules/src/operators/dematerialize.ts","../../../../node_modules/src/operators/delayWhen.ts","../../../../node_modules/src/operators/delay.ts","../../../../node_modules/src/operators/defaultIfEmpty.ts","../../../../node_modules/src/operators/debounce.ts","../../../../node_modules/src/operators/count.ts","../../../../node_modules/src/operators/mergeMap.ts","../../../../node_modules/src/observable/FromObservable.ts","../../../../node_modules/src/operators/observeOn.ts","../../../../node_modules/src/Notification.ts","../../../../node_modules/src/observable/ArrayLikeObservable.ts","../../../../node_modules/src/observable/IteratorObservable.ts","../../../../node_modules/src/observable/PromiseObservable.ts","../../../../node_modules/src/operators/combineLatest.ts","../../../../node_modules/src/observable/ArrayObservable.ts","../../../../node_modules/src/observable/EmptyObservable.ts","../../../../node_modules/src/observable/ScalarObservable.ts","../../../../node_modules/src/operators/catchError.ts","../../../../node_modules/src/operators/bufferWhen.ts","../../../../node_modules/src/operators/bufferToggle.ts","../../../../node_modules/src/operators/bufferTime.ts","../../../../node_modules/src/operators/bufferCount.ts","../../../../node_modules/src/operators/buffer.ts","../../../../node_modules/src/observable/TimerObservable.ts","../../../../node_modules/src/util/isDate.ts","../../../../node_modules/src/util/isScheduler.ts","../../../../node_modules/src/util/isNumeric.ts","../../../../node_modules/src/operators/audit.ts","../../../../node_modules/src/util/subscribeToResult.ts","../../../../node_modules/src/InnerSubscriber.ts","../../../../node_modules/src/symbol/iterator.ts","../../../../node_modules/src/Observable.ts","../../../../node_modules/src/util/pipe.ts","../../../../node_modules/src/util/noop.ts","../../../../node_modules/src/symbol/observable.ts","../../../../node_modules/src/util/toSubscriber.ts","../../../../node_modules/src/util/isPromise.ts","../../../../node_modules/src/util/isArrayLike.ts","../../../../node_modules/src/OuterSubscriber.ts","~/@ux-aspects/ux-aspects/components/card-tabs/card-tab/card-tab-content.directive.ts","~/@ux-aspects/ux-aspects/directives/resize/resize.module.ts","~/@ux-aspects/ux-aspects/directives/resize/resize.directive.ts","../../../../node_modules/src/operators/debounceTime.ts","../../../../node_modules/src/scheduler/async.ts","../../../../node_modules/src/scheduler/AsyncScheduler.ts","../../../../node_modules/src/Scheduler.ts","../../../../node_modules/src/scheduler/AsyncAction.ts","../../../../node_modules/src/scheduler/Action.ts","../../../../node_modules/src/Subscriber.ts","../../../../node_modules/src/symbol/rxSubscriber.ts","../../../../node_modules/src/util/root.ts","../../../../node_modules/src/Observer.ts","../../../../node_modules/src/Subscription.ts","../../../../node_modules/src/util/UnsubscriptionError.ts","../../../../node_modules/src/util/tryCatch.ts","../../../../node_modules/src/util/errorObject.ts","../../../../node_modules/src/util/isObject.ts","../../../../node_modules/src/util/isArray.ts","../../../../node_modules/src/util/isFunction.ts","~/@ux-aspects/ux-aspects/directives/resize/resize.service.ts","~/@ux-aspects/ux-aspects/components/breadcrumbs/breadcrumbs.module.ts","~/@ux-aspects/ux-aspects/components/breadcrumbs/breadcrumbs.component.ts"],"sourcesContent":["/**\n * Generated bundle index. Do not edit.\n */\n\nexport {BreadcrumbsComponent,Breadcrumb,BreadcrumbsModule,CardTabsModule,CardTabsService,CardTabsetComponent,CardTabsBounds,CardTabComponent,CardTabContentDirective,CheckboxModule,CHECKBOX_VALUE_ACCESSOR,CheckboxComponent,ColumnSortingModule,ColumnSortingComponent,ColumnSortingState,ColumnSortingDirective,ColumnSortingOrder,DashboardModule,DashboardComponent,DashboardOptions,DashboardService,defaultOptions,DashboardDimensions,DashboardWidgetDimensions,DashboardAction,DashboardSpace,DashboardPlaceholder,DashboardCache,DashboardLayoutData,ActionDirection,Rounding,DashboardDragHandleDirective,DashboardWidgetComponent,StackableValue,DateTimePickerModule,DateTimePickerComponent,DateTimePickerService,DatePickerMode,ModeDirection,DatePickerHeaderEvent,DateTimePickerTimezone,DateTimePickerConfig,EboxModule,EboxComponent,EboxHeaderDirective,EboxContentDirective,FacetsModule,FacetContainerComponent,FacetSelect,FacetDeselect,FacetDeselectAll,FacetEvent,FacetHeaderComponent,FacetBaseComponent,FacetCheckListComponent,FacetTypeaheadListComponent,FacetTypeaheadListConfig,FacetTypeaheadHighlight,Facet,FilterModule,FilterContainerComponent,Filter,FilterAddEvent,FilterRemoveEvent,FilterRemoveAllEvent,FilterEvent,FilterBaseComponent,FilterDropdownComponent,FilterDynamicComponent,FilterDynamicListConfig,FlippableCardModule,FlippableCardComponent,FlippableCardFrontDirective,FlippableCardBackDirective,FloatingActionButtonsModule,FloatingActionButtonsComponent,FloatingActionButtonDirection,FloatingActionButtonComponent,HierarchyBarModule,HierarchyBarService,HierarchyBarNode,HierarchyBarNodeChildren,HierarchyBarComponent,ItemDisplayPanelModule,ItemDisplayPanelContentDirective,ItemDisplayPanelFooterDirective,ItemDisplayPanelComponent,MarqueeWizardModule,MarqueeWizardComponent,NavigationModule,NavigationComponent,NavigationItemComponent,NotificationModule,NotificationService,NotificationRef,NotificationOptions,NotificationListDirection,NotificationListComponent,NotificationListPostion,NumberPickerModule,NUMBER_PICKER_VALUE_ACCESSOR,NumberPickerComponent,PageHeaderModule,PageHeaderComponent,PageHeaderNavigationComponent,PageHeaderNavigationItem,PageHeaderNavigationDropdownItem,PageHeaderSecondaryNavigationItem,PageHeaderIconMenuComponent,PageHeaderCustomMenuDirective,PageHeaderIconMenu,PageHeaderIconMenuDropdownItem,PopoverModule,PopoverComponent,PopoverDirective,ProgressBarModule,ProgressBarComponent,RadioButtonModule,RADIOBUTTON_VALUE_ACCESSOR,RadioButtonComponent,SearchBuilderComponentDefinition,SearchBuilderComponentContext,SearchBuilderGroupQuery,SearchBuilderQuery,SearchBuilderGroupComponent,SearchBuilderGroupOperator,SearchBuilderGroupService,SearchBuilderOutletDirective,BaseSearchComponent,BaseSearchComponentConfig,SearchTextComponent,SearchTextConfig,SearchDateComponent,SearchDateConfig,SearchDateRangeComponent,SearchDateRangeConfig,SearchSelectComponent,SearchSelectConfig,SearchBuilderComponent,SearchBuilderService,SearchBuilderModule,SELECT_VALUE_ACCESSOR,SelectComponent,SelectModule,SidePanelComponent,SidePanelCloseDirective,SidePanelModule,SliderModule,SliderComponent,SliderType,SliderStyle,SliderSize,SliderCalloutTrigger,SliderValue,SliderSnap,SliderTickType,SliderOptions,SliderHandleOptions,SliderAriaOptions,SliderKeyboardOptions,SliderTrackOptions,SliderTicksOptions,SliderTickOptions,SliderTick,SliderTrackColors,SliderCallout,SliderThumbEvent,SliderThumb,SparkModule,SparkComponent,SpinButtonModule,SPIN_BUTTON_VALUE_ACCESSOR,SpinButtonComponent,TabsetModule,TabsetComponent,TabsetService,TabComponent,TabHeadingDirective,TabFocusDirective,TagInputEvent,TagInputComponent,TagApi,TagClassFunction,TagInputModule,TimelineModule,TimelineComponent,TimelineEventComponent,TimePickerModule,TIME_PICKER_VALUE_ACCESSOR,TimePickerComponent,TimeFormatPipe,ToggleSwitchModule,ToggleSwitchComponent,ToolbarSearchModule,ToolbarSearchComponent,ToolbarSearchFieldDirective,ToolbarSearchButtonDirective,TooltipModule,TooltipComponent,TooltipDirective,AnchorPlacement,TooltipService,TypeaheadOptionEvent,TypeaheadKeyService,TypeaheadComponent,TypeaheadOptionApi,TypeaheadModule,MediaPlayerModule,MediaPlayerComponent,MediaPlayerType,MediaPlayerBuffer,MediaPlayerBaseExtensionDirective,MediaPlayerControlsExtensionComponent,MediaPlayerTimelineExtensionComponent,MediaPlayerBuffered,VirtualScrollModule,VirtualScrollComponent,VirtualScrollLoadingDirective,VirtualScrollLoadButtonDirective,VirtualScrollCellDirective,WizardModule,WizardComponent,StepChangingEvent,WizardStepComponent,AutoGrowModule,AutoGrowDirective,ClickOutsideModule,ClickOutsideDirective,DragModule,DragDirective,FixedHeaderTableModule,FixedHeaderTableDirective,FloatLabelDirective,FloatLabelModule,FocusIfDirective,FocusIfModule,HelpCenterModule,HelpCenterService,HelpCenterItem,HelpCenterItemDirective,HoverActionModule,HoverActionContainerDirective,HoverActionDirective,InfiniteScrollDirective,InfiniteScrollLoadFunction,InfiniteScrollLoadingEvent,InfiniteScrollLoadedEvent,InfiniteScrollLoadErrorEvent,InfiniteScrollLoadButtonDirective,InfiniteScrollLoadingDirective,InfiniteScrollModule,LayoutSwitcherModule,LayoutSwitcherDirective,LayoutSwitcherItemDirective,LayoutSwitcherItem,MenuNavigationItemDirective,MenuNavigationDirective,MenuNavigationModule,ResizeService,ResizeDimensions,ResizeDirective,ResizeModule,ScrollIntoViewIfDirective,ScrollIntoViewService,ScrollIntoViewIfModule,SelectionModule,ReorderableModule,ReorderableDirective,ReorderEvent,ReorderableHandleDirective,ReorderableModelDirective,ReorderableService,ReorderableContainer,ReorderableDragEvent,ReorderableDragEndEvent,ReorderableDropEvent,ReorderableCancelEvent,ReorderableClonedEvent,ReorderableGroup,DurationPipeModule,DurationPipe,FileSizePipeModule,FileSizePipe,StringFilterPipe,StringFilterModule,AudioServiceModule,AudioService,WaveformPoint,AudioMetadata,ColorServiceModule,ColorService,ThemeColor,colorSets,ThemeColors,ColorSet,ColorClassSet,ColorValueSet,ColorIdentifier,FrameExtractionModule,FrameExtractionService,ExtractedFrame,PersistentDataModule,PersistentDataService,PersistentDataStorageType,StorageAdapter,CookieAdapter,LocalStorageAdapter,SessionStorageAdapter,PdfOptions,PdfColumns,PdfDocument,TimeAgoLocalizedTimes,ContactsNg1Component,Contact,Organization,ExpandInputNg1Component,FloatingActionButtonNg1Component,FloatingActionButtonItem,FlotNg1Component,GridNg1Component,GridColumn,HierarchyBarNg1Component,HierarchyBarOptions,MarqueeWizardNg1Component,MarqueeWizardStep,MarqueeWizardOptions,MarqueeWizardSideInfo,NestedDonutNg1Component,OrganizationChartNg1Component,PartitionMapNg1Component,PeityBarChartNg1Component,PeityLineChartNg1Component,PeityPieChartNg1Component,PeityUpdatingLineChartNg1Component,SankeyNg1Component,SearchToolbarNg1Component,SelectTableNg1Component,SLIDER_CHART_VALUE_ACCESSOR,SliderChartNg1Component,SocialChartNg1Component,SortDirectionToggleNg1Component,SortDirectionToggleSorter,TreeGridNg1Component,TreeGridColumn,TreeGridData,TreeGridOptions,ThumbnailNg1Component,NavigationMenuService,navigationMenuServiceFactory,navigationMenuServiceProvider,PdfService,pdfServiceFactory,pdfServiceProvider,TimeAgoService,timeAgoServiceFactory,timeAgoServiceProvider,HybridModule} from './index';\n\nexport {DayViewComponent as ɵd} from './components/date-time-picker/day-view/day-view.component';\nexport {DayViewService as ɵe} from './components/date-time-picker/day-view/day-view.service';\nexport {HeaderComponent as ɵc} from './components/date-time-picker/header/header.component';\nexport {MonthViewComponent as ɵf} from './components/date-time-picker/month-view/month-view.component';\nexport {MonthViewService as ɵg} from './components/date-time-picker/month-view/month-view.service';\nexport {TimeViewComponent as ɵj} from './components/date-time-picker/time-view/time-view.component';\nexport {YearViewComponent as ɵh} from './components/date-time-picker/year-view/year-view.component';\nexport {YearViewService as ɵi} from './components/date-time-picker/year-view/year-view.service';\nexport {FloatingActionButtonsService as ɵk} from './components/floating-action-buttons/floating-action-buttons.service';\nexport {MarqueeWizardStepComponent as ɵn} from './components/marquee-wizard/marquee-wizard-step.component';\nexport {MarqueeWizardService as ɵm} from './components/marquee-wizard/marquee-wizard.service';\nexport {MediaPlayerService as ɵt} from './components/media-player/media-player.service';\nexport {PageHeaderNavigationDropdownItemComponent as ɵs} from './components/page-header/navigation/navigation-dropdown-item/navigation-dropdown-item.component';\nexport {PageHeaderNavigationItemComponent as ɵr} from './components/page-header/navigation/navigation-item/navigation-item.component';\nexport {PageHeaderService as ɵq} from './components/page-header/page-header.service';\nexport {SidePanelService as ɵl} from './components/side-panel/side-panel.service';\nexport {HoverActionService as ɵu} from './directives/hover-action/hover-action.service';\nexport {MenuNavigationToggleDirective as ɵp} from './directives/menu-navigation/menu-navigation-toggle.directive';\nexport {MenuNavigationService as ɵo} from './directives/menu-navigation/menu-navigation.service';\nexport {SelectionItemDirective as ɵx} from './directives/selection/selection-item.directive';\nexport {SelectionDirective as ɵv} from './directives/selection/selection.directive';\nexport {SelectionService as ɵw} from './directives/selection/selection.service';\nexport {INavigationMenuService as ɵy} from './hybrid/services/navigation-menu/navigation-menu.interface';\nexport {IPdfService as ɵa} from './hybrid/services/pdf/pdf.interface';\nexport {ITimeAgoService as ɵb} from './hybrid/services/time-ago/time-ago.interface';","/*\n  Export Components\n*/\nexport {BreadcrumbsComponent,Breadcrumb,BreadcrumbsModule} from './components/breadcrumbs/index';\nexport {CardTabsModule,CardTabsService,CardTabsetComponent,CardTabsBounds,CardTabComponent,CardTabContentDirective} from './components/card-tabs/index';\nexport {CheckboxModule,CHECKBOX_VALUE_ACCESSOR,CheckboxComponent} from './components/checkbox/index';\nexport {ColumnSortingModule,ColumnSortingComponent,ColumnSortingState,ColumnSortingDirective,ColumnSortingOrder} from './components/column-sorting/index';\nexport {DashboardModule,DashboardComponent,DashboardOptions,DashboardService,defaultOptions,DashboardDimensions,DashboardWidgetDimensions,DashboardAction,DashboardSpace,DashboardPlaceholder,DashboardCache,DashboardLayoutData,ActionDirection,Rounding,DashboardDragHandleDirective,DashboardWidgetComponent,StackableValue} from './components/dashboard/index';\nexport {DateTimePickerModule,DateTimePickerComponent,DateTimePickerService,DatePickerMode,ModeDirection,DatePickerHeaderEvent,DateTimePickerTimezone,DateTimePickerConfig} from './components/date-time-picker/index';\nexport {EboxModule,EboxComponent,EboxHeaderDirective,EboxContentDirective} from './components/ebox/index';\nexport {FacetsModule,FacetContainerComponent,FacetSelect,FacetDeselect,FacetDeselectAll,FacetEvent,FacetHeaderComponent,FacetBaseComponent,FacetCheckListComponent,FacetTypeaheadListComponent,FacetTypeaheadListConfig,FacetTypeaheadHighlight,Facet} from './components/facets/index';\nexport {FilterModule,FilterContainerComponent,Filter,FilterAddEvent,FilterRemoveEvent,FilterRemoveAllEvent,FilterEvent,FilterBaseComponent,FilterDropdownComponent,FilterDynamicComponent,FilterDynamicListConfig} from './components/filters/index';\nexport {FlippableCardModule,FlippableCardComponent,FlippableCardFrontDirective,FlippableCardBackDirective} from './components/flippable-card/index';\nexport {FloatingActionButtonsModule,FloatingActionButtonsComponent,FloatingActionButtonDirection,FloatingActionButtonComponent} from './components/floating-action-buttons/index';\nexport {HierarchyBarModule,HierarchyBarService,HierarchyBarNode,HierarchyBarNodeChildren,HierarchyBarComponent} from './components/hierarchy-bar/index';\nexport {ItemDisplayPanelModule,ItemDisplayPanelContentDirective,ItemDisplayPanelFooterDirective,ItemDisplayPanelComponent} from './components/item-display-panel/index';\nexport {MarqueeWizardModule,MarqueeWizardComponent} from './components/marquee-wizard/index';\nexport {NavigationModule,NavigationComponent,NavigationItemComponent} from './components/navigation/index';\nexport {NotificationModule,NotificationService,NotificationRef,NotificationOptions,NotificationListDirection,NotificationListComponent,NotificationListPostion} from './components/notification/index';\nexport {NumberPickerModule,NUMBER_PICKER_VALUE_ACCESSOR,NumberPickerComponent} from './components/number-picker/index';\nexport {PageHeaderModule,PageHeaderComponent,PageHeaderNavigationComponent,PageHeaderNavigationItem,PageHeaderNavigationDropdownItem,PageHeaderSecondaryNavigationItem,PageHeaderIconMenuComponent,PageHeaderCustomMenuDirective,PageHeaderIconMenu,PageHeaderIconMenuDropdownItem} from './components/page-header/index';\nexport {PopoverModule,PopoverComponent,PopoverDirective} from './components/popover/index';\nexport {ProgressBarModule,ProgressBarComponent} from './components/progress-bar/index';\nexport {RadioButtonModule,RADIOBUTTON_VALUE_ACCESSOR,RadioButtonComponent} from './components/radiobutton/index';\nexport {SearchBuilderComponentDefinition,SearchBuilderComponentContext,SearchBuilderGroupQuery,SearchBuilderQuery,SearchBuilderGroupComponent,SearchBuilderGroupOperator,SearchBuilderGroupService,SearchBuilderOutletDirective,BaseSearchComponent,BaseSearchComponentConfig,SearchTextComponent,SearchTextConfig,SearchDateComponent,SearchDateConfig,SearchDateRangeComponent,SearchDateRangeConfig,SearchSelectComponent,SearchSelectConfig,SearchBuilderComponent,SearchBuilderService,SearchBuilderModule} from './components/search-builder/index';\nexport {SELECT_VALUE_ACCESSOR,SelectComponent,SelectModule} from './components/select/index';\nexport {SidePanelComponent,SidePanelCloseDirective,SidePanelModule} from './components/side-panel/index';\nexport {SliderModule,SliderComponent,SliderType,SliderStyle,SliderSize,SliderCalloutTrigger,SliderValue,SliderSnap,SliderTickType,SliderOptions,SliderHandleOptions,SliderAriaOptions,SliderKeyboardOptions,SliderTrackOptions,SliderTicksOptions,SliderTickOptions,SliderTick,SliderTrackColors,SliderCallout,SliderThumbEvent,SliderThumb} from './components/slider/index';\nexport {SparkModule,SparkComponent} from './components/spark/index';\nexport {SpinButtonModule,SPIN_BUTTON_VALUE_ACCESSOR,SpinButtonComponent} from './components/spin-button/index';\nexport {TabsetModule,TabsetComponent,TabsetService,TabComponent,TabHeadingDirective,TabFocusDirective} from './components/tabset/index';\nexport {TagInputEvent,TagInputComponent,TagApi,TagClassFunction,TagInputModule} from './components/tag-input/index';\nexport {TimelineModule,TimelineComponent,TimelineEventComponent} from './components/timeline/index';\nexport {TimePickerModule,TIME_PICKER_VALUE_ACCESSOR,TimePickerComponent,TimeFormatPipe} from './components/time-picker/index';\nexport {ToggleSwitchModule,ToggleSwitchComponent} from './components/toggleswitch/index';\nexport {ToolbarSearchModule,ToolbarSearchComponent,ToolbarSearchFieldDirective,ToolbarSearchButtonDirective} from './components/toolbar-search/index';\nexport {TooltipModule,TooltipComponent,TooltipDirective,AnchorPlacement,TooltipService} from './components/tooltip/index';\nexport {TypeaheadOptionEvent,TypeaheadKeyService,TypeaheadComponent,TypeaheadOptionApi,TypeaheadModule} from './components/typeahead/index';\nexport {MediaPlayerModule,MediaPlayerComponent,MediaPlayerType,MediaPlayerBuffer,MediaPlayerBaseExtensionDirective,MediaPlayerControlsExtensionComponent,MediaPlayerTimelineExtensionComponent,MediaPlayerBuffered} from './components/media-player/index';\nexport {VirtualScrollModule,VirtualScrollComponent,VirtualScrollLoadingDirective,VirtualScrollLoadButtonDirective,VirtualScrollCellDirective} from './components/virtual-scroll/index';\nexport {WizardModule,WizardComponent,StepChangingEvent,WizardStepComponent} from './components/wizard/index';\n\n/*\n  Export Directives\n*/\nexport {AutoGrowModule,AutoGrowDirective} from './directives/auto-grow/index';\nexport {ClickOutsideModule,ClickOutsideDirective} from './directives/click-outside/index';\nexport {DragModule,DragDirective} from './directives/drag/index';\nexport {FixedHeaderTableModule,FixedHeaderTableDirective} from './directives/fixed-header-table/index';\nexport {FloatLabelDirective,FloatLabelModule} from './directives/float-label/index';\nexport {FocusIfDirective,FocusIfModule} from './directives/focus-if/index';\nexport {HelpCenterModule,HelpCenterService,HelpCenterItem,HelpCenterItemDirective} from './directives/help-center/index';\nexport {HoverActionModule,HoverActionContainerDirective,HoverActionDirective} from './directives/hover-action/index';\nexport {InfiniteScrollDirective,InfiniteScrollLoadFunction,InfiniteScrollLoadingEvent,InfiniteScrollLoadedEvent,InfiniteScrollLoadErrorEvent,InfiniteScrollLoadButtonDirective,InfiniteScrollLoadingDirective,InfiniteScrollModule} from './directives/infinite-scroll/index';\nexport {LayoutSwitcherModule,LayoutSwitcherDirective,LayoutSwitcherItemDirective,LayoutSwitcherItem} from './directives/layout-switcher/index';\nexport {MenuNavigationItemDirective,MenuNavigationDirective,MenuNavigationModule} from './directives/menu-navigation/index';\nexport {ResizeService,ResizeDimensions,ResizeDirective,ResizeModule} from './directives/resize/index';\nexport {ScrollIntoViewIfDirective,ScrollIntoViewService,ScrollIntoViewIfModule} from './directives/scroll-into-view-if/index';\nexport {SelectionModule} from './directives/selection/index';\nexport {ReorderableModule,ReorderableDirective,ReorderEvent,ReorderableHandleDirective,ReorderableModelDirective,ReorderableService,ReorderableContainer,ReorderableDragEvent,ReorderableDragEndEvent,ReorderableDropEvent,ReorderableCancelEvent,ReorderableClonedEvent,ReorderableGroup} from './directives/reorderable/index';\n\n/*\n  Export Pipes\n*/\nexport {DurationPipeModule,DurationPipe} from './pipes/duration/index';\nexport {FileSizePipeModule,FileSizePipe} from './pipes/file-size/index';\nexport {StringFilterPipe,StringFilterModule} from './pipes/string-filter/index';\n\n/*\n  Export Services\n*/\nexport {AudioServiceModule,AudioService,WaveformPoint,AudioMetadata} from './services/audio/index';\nexport {ColorServiceModule,ColorService,ThemeColor,colorSets,ThemeColors,ColorSet,ColorClassSet,ColorValueSet,ColorIdentifier} from './services/color/index';\nexport {FrameExtractionModule,FrameExtractionService,ExtractedFrame} from './services/frame-extraction/index';\nexport {PersistentDataModule,PersistentDataService,PersistentDataStorageType,StorageAdapter,CookieAdapter,LocalStorageAdapter,SessionStorageAdapter} from './services/persistent-data/index';\n\n/*\n  Export Hybrid Components\n*/\nexport {PdfOptions,PdfColumns,PdfDocument,TimeAgoLocalizedTimes,ContactsNg1Component,Contact,Organization,ExpandInputNg1Component,FloatingActionButtonNg1Component,FloatingActionButtonItem,FlotNg1Component,GridNg1Component,GridColumn,HierarchyBarNg1Component,HierarchyBarOptions,MarqueeWizardNg1Component,MarqueeWizardStep,MarqueeWizardOptions,MarqueeWizardSideInfo,NestedDonutNg1Component,OrganizationChartNg1Component,PartitionMapNg1Component,PeityBarChartNg1Component,PeityLineChartNg1Component,PeityPieChartNg1Component,PeityUpdatingLineChartNg1Component,SankeyNg1Component,SearchToolbarNg1Component,SelectTableNg1Component,SLIDER_CHART_VALUE_ACCESSOR,SliderChartNg1Component,SocialChartNg1Component,SortDirectionToggleNg1Component,SortDirectionToggleSorter,TreeGridNg1Component,TreeGridColumn,TreeGridData,TreeGridOptions,ThumbnailNg1Component,NavigationMenuService,navigationMenuServiceFactory,navigationMenuServiceProvider,PdfService,pdfServiceFactory,pdfServiceProvider,TimeAgoService,timeAgoServiceFactory,timeAgoServiceProvider,HybridModule} from './hybrid/index';","import { NgModule, Injector } from '@angular/core';\n\nimport { FloatingActionButtonNg1Component } from './components/floating-action-button/floating-action-button.component';\nimport { FlotNg1Component } from './components/flot/flot.component';\nimport { NestedDonutNg1Component } from './components/nested-donut/nested-donut.component';\nimport { OrganizationChartNg1Component } from './components/organization-chart/organization-chart.component';\nimport { PartitionMapNg1Component } from './components/partition-map/partition-map.component';\nimport { PeityBarChartNg1Component } from './components/peity-chart/peity-bar-chart.component';\nimport { PeityLineChartNg1Component } from './components/peity-chart/peity-line-chart.component';\nimport { PeityPieChartNg1Component } from './components/peity-chart/peity-pie-chart.component';\nimport { PeityUpdatingLineChartNg1Component } from './components/peity-chart/peity-updating-line-chart.component';\nimport { SankeyNg1Component } from './components/sankey-chart/sankey.component';\nimport { SocialChartNg1Component } from './components/social-chart/social-chart.component';\nimport { TimeAgoService, timeAgoServiceProvider } from './services/time-ago/time-ago.service';\nimport { PdfService, pdfServiceProvider } from './services/pdf/pdf.service';\nimport { NavigationMenuService, navigationMenuServiceProvider } from './services/navigation-menu/navigation-menu.service';\nimport { GridNg1Component } from './components/grid/grid.component';\nimport { ThumbnailNg1Component } from './components/thumbnail/thumbnail.component';\nimport { HierarchyBarNg1Component } from './components/hierarchy-bar/hierarchy-bar.component';\nimport { ContactsNg1Component } from './components/contacts/contacts.component';\nimport { ExpandInputNg1Component } from './components/expand-input/expand-input.component';\nimport { SortDirectionToggleNg1Component } from './components/sort-direction-toggle/sort-direction-toggle.component';\nimport { SearchToolbarNg1Component } from './components/search-toolbar/search-toolbar.component';\nimport { TreeGridNg1Component } from './components/tree-grid/tree-grid.component';\nimport { SelectTableNg1Component } from './components/select-table/select-table.component';\nimport { MarqueeWizardNg1Component } from './components/marquee-wizard/marquee-wizard.component';\nimport { SliderChartNg1Component } from './components/slider-chart/slider-chart.directive';\n\nconst /** @type {?} */ declarations = [\n    ContactsNg1Component,\n    ExpandInputNg1Component,\n    FloatingActionButtonNg1Component,\n    FlotNg1Component,\n    GridNg1Component,\n    HierarchyBarNg1Component,\n    MarqueeWizardNg1Component,\n    NestedDonutNg1Component,\n    OrganizationChartNg1Component,\n    PartitionMapNg1Component,\n    PeityBarChartNg1Component,\n    PeityLineChartNg1Component,\n    PeityPieChartNg1Component,\n    PeityUpdatingLineChartNg1Component,\n    SankeyNg1Component,\n    SearchToolbarNg1Component,\n    SelectTableNg1Component,\n    SliderChartNg1Component,\n    SocialChartNg1Component,\n    SortDirectionToggleNg1Component,\n    TreeGridNg1Component,\n    ThumbnailNg1Component,\n];\nexport class HybridModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [],\n    exports: declarations,\n    declarations: declarations,\n    providers: [\n        navigationMenuServiceProvider,\n        pdfServiceProvider,\n        timeAgoServiceProvider,\n        TimeAgoService,\n        PdfService,\n        NavigationMenuService,\n    ],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction HybridModule_tsickle_Closure_declarations() {\n/** @type {?} */\nHybridModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nHybridModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable, Inject, Injector } from '@angular/core';\nimport { ITimeAgoService, TimeAgoLocalizedTimes } from './time-ago.interface';\nexport class TimeAgoService implements ITimeAgoService {\n/**\n * @param {?} _timeAgoService\n */\nconstructor(\nprivate _timeAgoService: ITimeAgoService) { }\n/**\n * @param {?} strings\n * @return {?}\n */\nsetStrings(strings: TimeAgoLocalizedTimes): void {\n        this._timeAgoService.setStrings(strings);\n    }\n/**\n * @param {?} past\n * @param {?} present\n * @return {?}\n */\ntimeSince(past: Date, present: Date): string {\n        return this._timeAgoService.timeSince(past, present);\n    }\n/**\n * @param {?} moment\n * @return {?}\n */\ntimeSinceNow(moment: Date): string {\n        return this._timeAgoService.timeSinceNow(moment);\n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: undefined, decorators: [{ type: Inject, args: ['timeAgoService', ] }, ]},\n];\n}\n\nfunction TimeAgoService_tsickle_Closure_declarations() {\n/** @type {?} */\nTimeAgoService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTimeAgoService.ctorParameters;\n/** @type {?} */\nTimeAgoService.prototype._timeAgoService;\n}\n\n/**\n * @param {?} injector\n * @return {?}\n */\nexport function timeAgoServiceFactory(injector: Injector) {\n    return injector.get('timeAgoService');\n}\n\nexport const /** @type {?} */ timeAgoServiceProvider = {\n    provide: 'timeAgoService',\n    useFactory: timeAgoServiceFactory,\n    deps: ['$injector']\n};\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable, Inject, Injector } from '@angular/core';\nimport { IPdfService, PdfColumns, PdfOptions, PdfDocument } from './pdf.interface';\nexport class PdfService implements IPdfService {\n/**\n * @param {?} _pdfService\n */\nconstructor(\nprivate _pdfService: IPdfService) { }\n/**\n * @param {?} columns\n * @param {?} rows\n * @param {?=} options\n * @return {?}\n */\ncreateTable(columns: PdfColumns, rows: any[], options: PdfOptions = {}): PdfDocument {\n        return this._pdfService.createTable(columns, rows, options);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: undefined, decorators: [{ type: Inject, args: ['$pdf', ] }, ]},\n];\n}\n\nfunction PdfService_tsickle_Closure_declarations() {\n/** @type {?} */\nPdfService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nPdfService.ctorParameters;\n/** @type {?} */\nPdfService.prototype._pdfService;\n}\n\n/**\n * @param {?} injector\n * @return {?}\n */\nexport function pdfServiceFactory(injector: Injector) {\n    return injector.get('$pdf');\n}\n\nexport const /** @type {?} */ pdfServiceProvider = {\n    provide: '$pdf',\n    useFactory: pdfServiceFactory,\n    deps: ['$injector']\n};\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable, Inject, Injector } from '@angular/core';\nimport { INavigationMenuService } from './navigation-menu.interface';\nexport class NavigationMenuService implements INavigationMenuService {\n/**\n * @param {?} _navigationMenuService\n */\nconstructor(\nprivate _navigationMenuService: INavigationMenuService) { }\n/**\n * @return {?}\n */\nshow(): void {\n        this._navigationMenuService.show();\n    }\n/**\n * @return {?}\n */\nhide(): void {\n        this._navigationMenuService.hide();\n    }\n/**\n * @return {?}\n */\nvisible(): boolean {\n        return this._navigationMenuService.visible();\n    }\n/**\n * @return {?}\n */\ncollapseAtWidth(): number {\n        return this._navigationMenuService.collapseAtWidth();\n    }\n/**\n * @param {?} width\n * @return {?}\n */\nsetCollapseAtWidth(width: number): void {\n        this._navigationMenuService.setCollapseAtWidth(width);\n    }\n/**\n * @return {?}\n */\nsetDefaultCollapseAtWidth(): void {\n        this._navigationMenuService.setDefaultCollapseAtWidth();\n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: undefined, decorators: [{ type: Inject, args: ['$navigationMenu', ] }, ]},\n];\n}\n\nfunction NavigationMenuService_tsickle_Closure_declarations() {\n/** @type {?} */\nNavigationMenuService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNavigationMenuService.ctorParameters;\n/** @type {?} */\nNavigationMenuService.prototype._navigationMenuService;\n}\n\n/**\n * @param {?} injector\n * @return {?}\n */\nexport function navigationMenuServiceFactory(injector: Injector) {\n    return injector.get('$navigationMenu');\n}\n\nexport const /** @type {?} */ navigationMenuServiceProvider = {\n    provide: '$navigationMenu',\n    useFactory: navigationMenuServiceFactory,\n    deps: ['$injector']\n};\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ElementRef, Injector, Input, EventEmitter } from '@angular/core';\nimport { UpgradeComponent } from '@angular/upgrade/static';\nexport class ThumbnailNg1Component extends UpgradeComponent {\n\n     url: string;\n     show: boolean;\n     width: string;\n     height: string;\n/**\n * @param {?} elementRef\n * @param {?} injector\n */\nconstructor(elementRef: ElementRef, injector: Injector) {\n        super('thumbnail', elementRef, injector);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'thumbnail'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Injector, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'url': [{ type: Input },],\n'show': [{ type: Input },],\n'width': [{ type: Input },],\n'height': [{ type: Input },],\n};\n}\n\nfunction ThumbnailNg1Component_tsickle_Closure_declarations() {\n/** @type {?} */\nThumbnailNg1Component.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nThumbnailNg1Component.ctorParameters;\n/** @type {?} */\nThumbnailNg1Component.propDecorators;\n/** @type {?} */\nThumbnailNg1Component.prototype.url;\n/** @type {?} */\nThumbnailNg1Component.prototype.show;\n/** @type {?} */\nThumbnailNg1Component.prototype.width;\n/** @type {?} */\nThumbnailNg1Component.prototype.height;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ElementRef, Injector, Input, Output, EventEmitter } from '@angular/core';\nimport { UpgradeComponent } from '@angular/upgrade/static';\nexport class TreeGridNg1Component extends UpgradeComponent {\n\n     data: TreeGridData[] | Function;\n     columns: TreeGridColumn[];\n     treeData: TreeGridData[];\n     selected: any[];\n     currentRow: any;\n     options: TreeGridOptions;\n\n     optionsChange: EventEmitter<TreeGridOptions> = new EventEmitter<TreeGridOptions>();\n     selectedChange: EventEmitter<any[]> = new EventEmitter<any[]>();\n     currentRowChange: EventEmitter<any> = new EventEmitter<any>();\n     treeDataChange: EventEmitter<TreeGridData[]> = new EventEmitter<TreeGridData[]>();\n/**\n * @param {?} elementRef\n * @param {?} injector\n */\nconstructor(elementRef: ElementRef, injector: Injector) {\n        super('treegrid', elementRef, injector);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'treegrid'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Injector, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'data': [{ type: Input },],\n'columns': [{ type: Input },],\n'treeData': [{ type: Input },],\n'selected': [{ type: Input },],\n'currentRow': [{ type: Input },],\n'options': [{ type: Input },],\n'optionsChange': [{ type: Output },],\n'selectedChange': [{ type: Output },],\n'currentRowChange': [{ type: Output },],\n'treeDataChange': [{ type: Output },],\n};\n}\n\nfunction TreeGridNg1Component_tsickle_Closure_declarations() {\n/** @type {?} */\nTreeGridNg1Component.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTreeGridNg1Component.ctorParameters;\n/** @type {?} */\nTreeGridNg1Component.propDecorators;\n/** @type {?} */\nTreeGridNg1Component.prototype.data;\n/** @type {?} */\nTreeGridNg1Component.prototype.columns;\n/** @type {?} */\nTreeGridNg1Component.prototype.treeData;\n/** @type {?} */\nTreeGridNg1Component.prototype.selected;\n/** @type {?} */\nTreeGridNg1Component.prototype.currentRow;\n/** @type {?} */\nTreeGridNg1Component.prototype.options;\n/** @type {?} */\nTreeGridNg1Component.prototype.optionsChange;\n/** @type {?} */\nTreeGridNg1Component.prototype.selectedChange;\n/** @type {?} */\nTreeGridNg1Component.prototype.currentRowChange;\n/** @type {?} */\nTreeGridNg1Component.prototype.treeDataChange;\n}\n\n\nexport interface TreeGridColumn {\n    name: string;\n    value?: string | Function;\n    template?: string;\n    headerClass?: string;\n    cellClass?: string;\n    width?: string;\n    tooltip?: string;\n    tooltipPlacement?: 'top' | 'bottom' | 'left' | 'right';\n}\n\nexport interface TreeGridData {\n    dataItem: any;\n    children: any[];\n    expanded: boolean;\n    expanding: boolean;\n    level: number;\n    api: any;\n}\n\nexport interface TreeGridOptions {\n    childrenProperty?: string;\n    hasChildren?: Function;\n    maxDepth?: number;\n    expandTopLevel?: boolean;\n    select?: any;\n    expander?: any;\n    icons?: any;\n    rowClass?: string | Function;\n    sort?: Function;\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ElementRef, Injector, Input, Output, EventEmitter } from '@angular/core';\nimport { UpgradeComponent } from '@angular/upgrade/static';\nexport class SortDirectionToggleNg1Component extends UpgradeComponent {\n\n     label: string;\n     sorters: SortDirectionToggleSorter[];\n     descend: boolean;\n/**\n * @param {?} elementRef\n * @param {?} injector\n */\nconstructor(elementRef: ElementRef, injector: Injector) {\n        super('sortDirectionToggle', elementRef, injector);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'sort-direction-toggle'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Injector, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'label': [{ type: Input },],\n'sorters': [{ type: Input },],\n'descend': [{ type: Input },],\n};\n}\n\nfunction SortDirectionToggleNg1Component_tsickle_Closure_declarations() {\n/** @type {?} */\nSortDirectionToggleNg1Component.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSortDirectionToggleNg1Component.ctorParameters;\n/** @type {?} */\nSortDirectionToggleNg1Component.propDecorators;\n/** @type {?} */\nSortDirectionToggleNg1Component.prototype.label;\n/** @type {?} */\nSortDirectionToggleNg1Component.prototype.sorters;\n/** @type {?} */\nSortDirectionToggleNg1Component.prototype.descend;\n}\n\n\nexport interface SortDirectionToggleSorter {\n    name: string;\n    sort: string;\n    defaultSorter: boolean;\n    select: Function;\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ElementRef, Injector, Input } from '@angular/core';\nimport { UpgradeComponent } from '@angular/upgrade/static';\nexport class SocialChartNg1Component extends UpgradeComponent {\n\n     data: any;\n     options: any;\n     width: any;\n     height: any;\n     api: any;\n     communities: any;\n     detailStyle: any;\n     popoverStyle: any;\n     nodeDetail: any;\n     edgeDetail: any;\n     nodePopover: any;\n     edgePopover: any;\n     forceAtlasDuration: any;\n     nodeSizeAttribute: any;\n     startMaximized: any;\n     startMaximised: any;\n     showMaximizeControl: any;\n     showMaximiseControl: any;\n     socialChartContainer: any;\n     fullscreenButtonPosition: any;\n     localStrings: any;\n     chartTitle: any;\n     titleDisplayTime: any;\n     edgeWeightInfluence: any;\n     minLabels: any;\n/**\n * @param {?} elementRef\n * @param {?} injector\n */\nconstructor(elementRef: ElementRef, injector: Injector) {\n        super('uxSocialChartNg1', elementRef, injector);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'social-chart'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Injector, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'data': [{ type: Input },],\n'options': [{ type: Input },],\n'width': [{ type: Input },],\n'height': [{ type: Input },],\n'api': [{ type: Input },],\n'communities': [{ type: Input },],\n'detailStyle': [{ type: Input },],\n'popoverStyle': [{ type: Input },],\n'nodeDetail': [{ type: Input },],\n'edgeDetail': [{ type: Input },],\n'nodePopover': [{ type: Input },],\n'edgePopover': [{ type: Input },],\n'forceAtlasDuration': [{ type: Input },],\n'nodeSizeAttribute': [{ type: Input },],\n'startMaximized': [{ type: Input },],\n'startMaximised': [{ type: Input },],\n'showMaximizeControl': [{ type: Input },],\n'showMaximiseControl': [{ type: Input },],\n'socialChartContainer': [{ type: Input },],\n'fullscreenButtonPosition': [{ type: Input },],\n'localStrings': [{ type: Input },],\n'chartTitle': [{ type: Input },],\n'titleDisplayTime': [{ type: Input },],\n'edgeWeightInfluence': [{ type: Input },],\n'minLabels': [{ type: Input },],\n};\n}\n\nfunction SocialChartNg1Component_tsickle_Closure_declarations() {\n/** @type {?} */\nSocialChartNg1Component.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSocialChartNg1Component.ctorParameters;\n/** @type {?} */\nSocialChartNg1Component.propDecorators;\n/** @type {?} */\nSocialChartNg1Component.prototype.data;\n/** @type {?} */\nSocialChartNg1Component.prototype.options;\n/** @type {?} */\nSocialChartNg1Component.prototype.width;\n/** @type {?} */\nSocialChartNg1Component.prototype.height;\n/** @type {?} */\nSocialChartNg1Component.prototype.api;\n/** @type {?} */\nSocialChartNg1Component.prototype.communities;\n/** @type {?} */\nSocialChartNg1Component.prototype.detailStyle;\n/** @type {?} */\nSocialChartNg1Component.prototype.popoverStyle;\n/** @type {?} */\nSocialChartNg1Component.prototype.nodeDetail;\n/** @type {?} */\nSocialChartNg1Component.prototype.edgeDetail;\n/** @type {?} */\nSocialChartNg1Component.prototype.nodePopover;\n/** @type {?} */\nSocialChartNg1Component.prototype.edgePopover;\n/** @type {?} */\nSocialChartNg1Component.prototype.forceAtlasDuration;\n/** @type {?} */\nSocialChartNg1Component.prototype.nodeSizeAttribute;\n/** @type {?} */\nSocialChartNg1Component.prototype.startMaximized;\n/** @type {?} */\nSocialChartNg1Component.prototype.startMaximised;\n/** @type {?} */\nSocialChartNg1Component.prototype.showMaximizeControl;\n/** @type {?} */\nSocialChartNg1Component.prototype.showMaximiseControl;\n/** @type {?} */\nSocialChartNg1Component.prototype.socialChartContainer;\n/** @type {?} */\nSocialChartNg1Component.prototype.fullscreenButtonPosition;\n/** @type {?} */\nSocialChartNg1Component.prototype.localStrings;\n/** @type {?} */\nSocialChartNg1Component.prototype.chartTitle;\n/** @type {?} */\nSocialChartNg1Component.prototype.titleDisplayTime;\n/** @type {?} */\nSocialChartNg1Component.prototype.edgeWeightInfluence;\n/** @type {?} */\nSocialChartNg1Component.prototype.minLabels;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ElementRef, Injector, Input, Output, EventEmitter, forwardRef } from '@angular/core';\nimport { UpgradeComponent } from '@angular/upgrade/static';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nexport const /** @type {?} */ SLIDER_CHART_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => SliderChartNg1Component),\n    multi: true\n};\nexport class SliderChartNg1Component extends UpgradeComponent implements ControlValueAccessor {\n\n     sliderOptions: any;\n     ngModel: any;\n     chartOptions: any;\n     chartData: any;\n\n     ngModelChange: EventEmitter<any> = new EventEmitter<any>();\n/**\n * @param {?} elementRef\n * @param {?} injector\n */\nconstructor(elementRef: ElementRef, injector: Injector) {\n        super('sliderChart', elementRef, injector);\n    }\n/**\n * @param {?} obj\n * @return {?}\n */\nwriteValue(obj: any): void { }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnChange(fn: any): void { }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnTouched(fn: any): void { }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'slider-chart',\n    providers: [SLIDER_CHART_VALUE_ACCESSOR]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Injector, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'sliderOptions': [{ type: Input },],\n'ngModel': [{ type: Input },],\n'chartOptions': [{ type: Input },],\n'chartData': [{ type: Input },],\n'ngModelChange': [{ type: Output },],\n};\n}\n\nfunction SliderChartNg1Component_tsickle_Closure_declarations() {\n/** @type {?} */\nSliderChartNg1Component.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSliderChartNg1Component.ctorParameters;\n/** @type {?} */\nSliderChartNg1Component.propDecorators;\n/** @type {?} */\nSliderChartNg1Component.prototype.sliderOptions;\n/** @type {?} */\nSliderChartNg1Component.prototype.ngModel;\n/** @type {?} */\nSliderChartNg1Component.prototype.chartOptions;\n/** @type {?} */\nSliderChartNg1Component.prototype.chartData;\n/** @type {?} */\nSliderChartNg1Component.prototype.ngModelChange;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ElementRef, Injector, Input, Output, EventEmitter } from '@angular/core';\nimport { UpgradeComponent } from '@angular/upgrade/static';\nexport class SelectTableNg1Component extends UpgradeComponent {\n\n     values: any[];\n     multipleSelect: boolean;\n     selectKey: string;\n     selected: string;\n     searchText: string;\n     tableHeight: string;\n     selectHiddenItems: 'clear' | 'reselect';\n\n     selectedChange: EventEmitter<string> = new EventEmitter<string>();\n/**\n * @param {?} elementRef\n * @param {?} injector\n */\nconstructor(elementRef: ElementRef, injector: Injector) {\n        super('selectTable', elementRef, injector);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'select-table'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Injector, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'values': [{ type: Input },],\n'multipleSelect': [{ type: Input },],\n'selectKey': [{ type: Input },],\n'selected': [{ type: Input },],\n'searchText': [{ type: Input },],\n'tableHeight': [{ type: Input },],\n'selectHiddenItems': [{ type: Input },],\n'selectedChange': [{ type: Output },],\n};\n}\n\nfunction SelectTableNg1Component_tsickle_Closure_declarations() {\n/** @type {?} */\nSelectTableNg1Component.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSelectTableNg1Component.ctorParameters;\n/** @type {?} */\nSelectTableNg1Component.propDecorators;\n/** @type {?} */\nSelectTableNg1Component.prototype.values;\n/** @type {?} */\nSelectTableNg1Component.prototype.multipleSelect;\n/** @type {?} */\nSelectTableNg1Component.prototype.selectKey;\n/** @type {?} */\nSelectTableNg1Component.prototype.selected;\n/** @type {?} */\nSelectTableNg1Component.prototype.searchText;\n/** @type {?} */\nSelectTableNg1Component.prototype.tableHeight;\n/** @type {?} */\nSelectTableNg1Component.prototype.selectHiddenItems;\n/** @type {?} */\nSelectTableNg1Component.prototype.selectedChange;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ElementRef, Injector, Input } from '@angular/core';\nimport { UpgradeComponent } from '@angular/upgrade/static';\nexport class SearchToolbarNg1Component extends UpgradeComponent {\n\n     searchTypeahead: any[];\n     placeHolder: string;\n     closeSearch: string;\n     onSearch: Function;\n     onFocus: Function;\n/**\n * @param {?} elementRef\n * @param {?} injector\n */\nconstructor(elementRef: ElementRef, injector: Injector) {\n        super('searchToolbar', elementRef, injector);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'search-toolbar'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Injector, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'searchTypeahead': [{ type: Input },],\n'placeHolder': [{ type: Input },],\n'closeSearch': [{ type: Input },],\n'onSearch': [{ type: Input },],\n'onFocus': [{ type: Input },],\n};\n}\n\nfunction SearchToolbarNg1Component_tsickle_Closure_declarations() {\n/** @type {?} */\nSearchToolbarNg1Component.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSearchToolbarNg1Component.ctorParameters;\n/** @type {?} */\nSearchToolbarNg1Component.propDecorators;\n/** @type {?} */\nSearchToolbarNg1Component.prototype.searchTypeahead;\n/** @type {?} */\nSearchToolbarNg1Component.prototype.placeHolder;\n/** @type {?} */\nSearchToolbarNg1Component.prototype.closeSearch;\n/** @type {?} */\nSearchToolbarNg1Component.prototype.onSearch;\n/** @type {?} */\nSearchToolbarNg1Component.prototype.onFocus;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ElementRef, Injector, Input } from '@angular/core';\nimport { UpgradeComponent } from '@angular/upgrade/static';\nexport class SankeyNg1Component extends UpgradeComponent {\n\n     chartSize: any;\n     chartData: any;\n     options: any;\n     click: any;\n/**\n * @param {?} elementRef\n * @param {?} injector\n */\nconstructor(elementRef: ElementRef, injector: Injector) {\n        super('uxSankeyNg1', elementRef, injector);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'sankey'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Injector, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'chartSize': [{ type: Input },],\n'chartData': [{ type: Input },],\n'options': [{ type: Input },],\n'click': [{ type: Input },],\n};\n}\n\nfunction SankeyNg1Component_tsickle_Closure_declarations() {\n/** @type {?} */\nSankeyNg1Component.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSankeyNg1Component.ctorParameters;\n/** @type {?} */\nSankeyNg1Component.propDecorators;\n/** @type {?} */\nSankeyNg1Component.prototype.chartSize;\n/** @type {?} */\nSankeyNg1Component.prototype.chartData;\n/** @type {?} */\nSankeyNg1Component.prototype.options;\n/** @type {?} */\nSankeyNg1Component.prototype.click;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ElementRef, Injector, Input } from '@angular/core';\nimport { UpgradeComponent } from '@angular/upgrade/static';\nexport class PeityUpdatingLineChartNg1Component extends UpgradeComponent {\n\n     data: any;\n     options: any;\n     method: any;\n     updateinterval: any;\n/**\n * @param {?} elementRef\n * @param {?} injector\n */\nconstructor(elementRef: ElementRef, injector: Injector) {\n        super('uxPeityUpdatingLineChartNg1', elementRef, injector);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'updating-line-chart'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Injector, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'data': [{ type: Input },],\n'options': [{ type: Input },],\n'method': [{ type: Input },],\n'updateinterval': [{ type: Input },],\n};\n}\n\nfunction PeityUpdatingLineChartNg1Component_tsickle_Closure_declarations() {\n/** @type {?} */\nPeityUpdatingLineChartNg1Component.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nPeityUpdatingLineChartNg1Component.ctorParameters;\n/** @type {?} */\nPeityUpdatingLineChartNg1Component.propDecorators;\n/** @type {?} */\nPeityUpdatingLineChartNg1Component.prototype.data;\n/** @type {?} */\nPeityUpdatingLineChartNg1Component.prototype.options;\n/** @type {?} */\nPeityUpdatingLineChartNg1Component.prototype.method;\n/** @type {?} */\nPeityUpdatingLineChartNg1Component.prototype.updateinterval;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ElementRef, Injector, Input } from '@angular/core';\nimport { UpgradeComponent } from '@angular/upgrade/static';\nexport class PeityPieChartNg1Component extends UpgradeComponent {\n\n     data: any;\n     options: any;\n/**\n * @param {?} elementRef\n * @param {?} injector\n */\nconstructor(elementRef: ElementRef, injector: Injector) {\n        super('uxPeityPieChartNg1', elementRef, injector);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'pie-chart'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Injector, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'data': [{ type: Input },],\n'options': [{ type: Input },],\n};\n}\n\nfunction PeityPieChartNg1Component_tsickle_Closure_declarations() {\n/** @type {?} */\nPeityPieChartNg1Component.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nPeityPieChartNg1Component.ctorParameters;\n/** @type {?} */\nPeityPieChartNg1Component.propDecorators;\n/** @type {?} */\nPeityPieChartNg1Component.prototype.data;\n/** @type {?} */\nPeityPieChartNg1Component.prototype.options;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ElementRef, Injector, Input } from '@angular/core';\nimport { UpgradeComponent } from '@angular/upgrade/static';\nexport class PeityLineChartNg1Component extends UpgradeComponent {\n\n     data: any;\n     options: any;\n/**\n * @param {?} elementRef\n * @param {?} injector\n */\nconstructor(elementRef: ElementRef, injector: Injector) {\n        super('uxPeityLineChartNg1', elementRef, injector);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'line-chart'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Injector, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'data': [{ type: Input },],\n'options': [{ type: Input },],\n};\n}\n\nfunction PeityLineChartNg1Component_tsickle_Closure_declarations() {\n/** @type {?} */\nPeityLineChartNg1Component.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nPeityLineChartNg1Component.ctorParameters;\n/** @type {?} */\nPeityLineChartNg1Component.propDecorators;\n/** @type {?} */\nPeityLineChartNg1Component.prototype.data;\n/** @type {?} */\nPeityLineChartNg1Component.prototype.options;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ElementRef, Injector, Input } from '@angular/core';\nimport { UpgradeComponent } from '@angular/upgrade/static';\nexport class PeityBarChartNg1Component extends UpgradeComponent {\n\n     data: any;\n     options: any;\n/**\n * @param {?} elementRef\n * @param {?} injector\n */\nconstructor(elementRef: ElementRef, injector: Injector) {\n        super('uxPeityBarChartNg1', elementRef, injector);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'bar-chart'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Injector, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'data': [{ type: Input },],\n'options': [{ type: Input },],\n};\n}\n\nfunction PeityBarChartNg1Component_tsickle_Closure_declarations() {\n/** @type {?} */\nPeityBarChartNg1Component.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nPeityBarChartNg1Component.ctorParameters;\n/** @type {?} */\nPeityBarChartNg1Component.propDecorators;\n/** @type {?} */\nPeityBarChartNg1Component.prototype.data;\n/** @type {?} */\nPeityBarChartNg1Component.prototype.options;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ElementRef, Injector, Input } from '@angular/core';\nimport { UpgradeComponent } from '@angular/upgrade/static';\nexport class PartitionMapNg1Component extends UpgradeComponent {\n\n     chartData: any;\n     chartOptions: any;\n     chartLoading: any;\n/**\n * @param {?} elementRef\n * @param {?} injector\n */\nconstructor(elementRef: ElementRef, injector: Injector) {\n        super('uxPartitionMapNg1', elementRef, injector);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'partition-map'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Injector, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'chartData': [{ type: Input },],\n'chartOptions': [{ type: Input },],\n'chartLoading': [{ type: Input },],\n};\n}\n\nfunction PartitionMapNg1Component_tsickle_Closure_declarations() {\n/** @type {?} */\nPartitionMapNg1Component.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nPartitionMapNg1Component.ctorParameters;\n/** @type {?} */\nPartitionMapNg1Component.propDecorators;\n/** @type {?} */\nPartitionMapNg1Component.prototype.chartData;\n/** @type {?} */\nPartitionMapNg1Component.prototype.chartOptions;\n/** @type {?} */\nPartitionMapNg1Component.prototype.chartLoading;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ElementRef, Injector, Input, Output, EventEmitter } from '@angular/core';\nimport { UpgradeComponent } from '@angular/upgrade/static';\nexport class OrganizationChartNg1Component extends UpgradeComponent {\n\n     data: any;\n     options: any;\n     dataChange = new EventEmitter<any>();\n     optionsChange = new EventEmitter<any>();\n/**\n * @param {?} elementRef\n * @param {?} injector\n */\nconstructor(elementRef: ElementRef, injector: Injector) {\n        super('uxOrganizationChartNg1', elementRef, injector);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'organization-chart'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Injector, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'data': [{ type: Input },],\n'options': [{ type: Input },],\n'dataChange': [{ type: Output },],\n'optionsChange': [{ type: Output },],\n};\n}\n\nfunction OrganizationChartNg1Component_tsickle_Closure_declarations() {\n/** @type {?} */\nOrganizationChartNg1Component.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nOrganizationChartNg1Component.ctorParameters;\n/** @type {?} */\nOrganizationChartNg1Component.propDecorators;\n/** @type {?} */\nOrganizationChartNg1Component.prototype.data;\n/** @type {?} */\nOrganizationChartNg1Component.prototype.options;\n/** @type {?} */\nOrganizationChartNg1Component.prototype.dataChange;\n/** @type {?} */\nOrganizationChartNg1Component.prototype.optionsChange;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ElementRef, Injector, Input } from '@angular/core';\nimport { UpgradeComponent } from '@angular/upgrade/static';\nexport class NestedDonutNg1Component extends UpgradeComponent {\n\n     dataset: any;\n     options: any;\n/**\n * @param {?} elementRef\n * @param {?} injector\n */\nconstructor(elementRef: ElementRef, injector: Injector) {\n        super('uxNestedDonutNg1', elementRef, injector);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'nested-donut'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Injector, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'dataset': [{ type: Input },],\n'options': [{ type: Input },],\n};\n}\n\nfunction NestedDonutNg1Component_tsickle_Closure_declarations() {\n/** @type {?} */\nNestedDonutNg1Component.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNestedDonutNg1Component.ctorParameters;\n/** @type {?} */\nNestedDonutNg1Component.propDecorators;\n/** @type {?} */\nNestedDonutNg1Component.prototype.dataset;\n/** @type {?} */\nNestedDonutNg1Component.prototype.options;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ElementRef, Injector, Input, Output, EventEmitter } from '@angular/core';\nimport { UpgradeComponent } from '@angular/upgrade/static';\nexport class MarqueeWizardNg1Component extends UpgradeComponent {\n\n     wizardIcon: string;\n     wizardSteps: MarqueeWizardStep[];\n     buttonOptions: MarqueeWizardOptions;\n     onChanging: Function;\n     onFinished: Function;\n     onFinishing: Function;\n     onCanceled: Function;\n     isVisited: boolean;\n     sideInfo: MarqueeWizardSideInfo;\n\n     wizardStepsChange: EventEmitter<MarqueeWizardStep[]> = new EventEmitter<MarqueeWizardStep[]>();\n/**\n * @param {?} elementRef\n * @param {?} injector\n */\nconstructor(elementRef: ElementRef, injector: Injector) {\n        super('marqueeWizard', elementRef, injector);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'marquee-wizard'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Injector, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'wizardIcon': [{ type: Input },],\n'wizardSteps': [{ type: Input },],\n'buttonOptions': [{ type: Input },],\n'onChanging': [{ type: Input },],\n'onFinished': [{ type: Input },],\n'onFinishing': [{ type: Input },],\n'onCanceled': [{ type: Input },],\n'isVisited': [{ type: Input },],\n'sideInfo': [{ type: Input },],\n'wizardStepsChange': [{ type: Output },],\n};\n}\n\nfunction MarqueeWizardNg1Component_tsickle_Closure_declarations() {\n/** @type {?} */\nMarqueeWizardNg1Component.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMarqueeWizardNg1Component.ctorParameters;\n/** @type {?} */\nMarqueeWizardNg1Component.propDecorators;\n/** @type {?} */\nMarqueeWizardNg1Component.prototype.wizardIcon;\n/** @type {?} */\nMarqueeWizardNg1Component.prototype.wizardSteps;\n/** @type {?} */\nMarqueeWizardNg1Component.prototype.buttonOptions;\n/** @type {?} */\nMarqueeWizardNg1Component.prototype.onChanging;\n/** @type {?} */\nMarqueeWizardNg1Component.prototype.onFinished;\n/** @type {?} */\nMarqueeWizardNg1Component.prototype.onFinishing;\n/** @type {?} */\nMarqueeWizardNg1Component.prototype.onCanceled;\n/** @type {?} */\nMarqueeWizardNg1Component.prototype.isVisited;\n/** @type {?} */\nMarqueeWizardNg1Component.prototype.sideInfo;\n/** @type {?} */\nMarqueeWizardNg1Component.prototype.wizardStepsChange;\n}\n\n\nexport interface MarqueeWizardStep {\n    title: string;\n    html?: string;\n    header?: string;\n    templateUrl?: string;\n    hidden?: boolean;\n    error?: boolean;\n    completed?: boolean;\n    visited?: boolean;\n}\n\nexport interface MarqueeWizardOptions {\n    nextText?: string;\n    previousText?: string;\n    finishText?: string;\n    showNext?: boolean;\n    showPrevious?: boolean;\n    showFinish?: boolean;\n    nextTooltip?: string;\n    previousTooltip?: string;\n    finishTooltip?: string;\n    previousEnabled?: boolean;\n    nextEnabled?: boolean;\n    finishEnabled?: boolean;\n}\n\nexport interface MarqueeWizardSideInfo {\n    title: string;\n    description: string;\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ElementRef, Injector, Input, EventEmitter } from '@angular/core';\nimport { UpgradeComponent } from '@angular/upgrade/static';\nexport class HierarchyBarNg1Component extends UpgradeComponent {\n\n     data: any[];\n     options: HierarchyBarOptions;\n     selectNode: any;\n     containerClass: any;\n/**\n * @param {?} elementRef\n * @param {?} injector\n */\nconstructor(elementRef: ElementRef, injector: Injector) {\n        super('hierarchyBar', elementRef, injector);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'hierarchy-bar'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Injector, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'data': [{ type: Input },],\n'options': [{ type: Input },],\n'selectNode': [{ type: Input },],\n'containerClass': [{ type: Input },],\n};\n}\n\nfunction HierarchyBarNg1Component_tsickle_Closure_declarations() {\n/** @type {?} */\nHierarchyBarNg1Component.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nHierarchyBarNg1Component.ctorParameters;\n/** @type {?} */\nHierarchyBarNg1Component.propDecorators;\n/** @type {?} */\nHierarchyBarNg1Component.prototype.data;\n/** @type {?} */\nHierarchyBarNg1Component.prototype.options;\n/** @type {?} */\nHierarchyBarNg1Component.prototype.selectNode;\n/** @type {?} */\nHierarchyBarNg1Component.prototype.containerClass;\n}\n\n\nexport interface HierarchyBarOptions {\n    enabled: boolean;\n    overview?: Function;\n    image: Function;\n    valueFormatter: Function;\n    action?: {\n        title: string;\n        event: Function;\n    };\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ElementRef, Injector, Input, EventEmitter } from '@angular/core';\nimport { UpgradeComponent } from '@angular/upgrade/static';\nexport class GridNg1Component extends UpgradeComponent {\n\n     source: any[] = [];\n     columns: GridColumn[] = [];\n/**\n * The following inputs are undocumented\n */\noptions: any;\n     events: any;\n     plugins: any;\n/**\n * @param {?} elementRef\n * @param {?} injector\n */\nconstructor(elementRef: ElementRef, injector: Injector) {\n        super('grid', elementRef, injector);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'grid'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Injector, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'source': [{ type: Input },],\n'columns': [{ type: Input },],\n'options': [{ type: Input },],\n'events': [{ type: Input },],\n'plugins': [{ type: Input },],\n};\n}\n\nfunction GridNg1Component_tsickle_Closure_declarations() {\n/** @type {?} */\nGridNg1Component.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nGridNg1Component.ctorParameters;\n/** @type {?} */\nGridNg1Component.propDecorators;\n/** @type {?} */\nGridNg1Component.prototype.source;\n/** @type {?} */\nGridNg1Component.prototype.columns;\n/**\n * The following inputs are undocumented\n * @type {?}\n */\nGridNg1Component.prototype.options;\n/** @type {?} */\nGridNg1Component.prototype.events;\n/** @type {?} */\nGridNg1Component.prototype.plugins;\n}\n\n\nexport interface GridColumn {\n    title: string;\n    template: string;\n    width?: string;\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ElementRef, Injector, Input, Output, EventEmitter } from '@angular/core';\nimport { UpgradeComponent } from '@angular/upgrade/static';\nexport class FlotNg1Component extends UpgradeComponent {\n\n     dataset: any;\n     options: any;\n     callback: any;\n     donutLabels: any;\n     onPlotClick = new EventEmitter<any>();\n     onPlotHover = new EventEmitter<any>();\n/**\n * @param {?} elementRef\n * @param {?} injector\n */\nconstructor(elementRef: ElementRef, injector: Injector) {\n        super('uxFlotNg1', elementRef, injector);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'flot'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Injector, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'dataset': [{ type: Input },],\n'options': [{ type: Input },],\n'callback': [{ type: Input },],\n'donutLabels': [{ type: Input },],\n'onPlotClick': [{ type: Output },],\n'onPlotHover': [{ type: Output },],\n};\n}\n\nfunction FlotNg1Component_tsickle_Closure_declarations() {\n/** @type {?} */\nFlotNg1Component.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFlotNg1Component.ctorParameters;\n/** @type {?} */\nFlotNg1Component.propDecorators;\n/** @type {?} */\nFlotNg1Component.prototype.dataset;\n/** @type {?} */\nFlotNg1Component.prototype.options;\n/** @type {?} */\nFlotNg1Component.prototype.callback;\n/** @type {?} */\nFlotNg1Component.prototype.donutLabels;\n/** @type {?} */\nFlotNg1Component.prototype.onPlotClick;\n/** @type {?} */\nFlotNg1Component.prototype.onPlotHover;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ElementRef, Injector, Input, EventEmitter } from '@angular/core';\nimport { UpgradeComponent } from '@angular/upgrade/static';\nexport class FloatingActionButtonNg1Component extends UpgradeComponent {\n\n     items: FloatingActionButtonItem[] = [];\n     primary: string;\n     direction: 'top' | 'right' | 'bottom' | 'left';\n     fabTooltip: string;\n     fabTooltipPlacement: 'top' | 'right' | 'bottom' | 'left';\n/**\n * @param {?} elementRef\n * @param {?} injector\n */\nconstructor(elementRef: ElementRef, injector: Injector) {\n        super('floatingActionButton', elementRef, injector);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'floating-action-button'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Injector, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'items': [{ type: Input },],\n'primary': [{ type: Input },],\n'direction': [{ type: Input },],\n'fabTooltip': [{ type: Input },],\n'fabTooltipPlacement': [{ type: Input },],\n};\n}\n\nfunction FloatingActionButtonNg1Component_tsickle_Closure_declarations() {\n/** @type {?} */\nFloatingActionButtonNg1Component.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFloatingActionButtonNg1Component.ctorParameters;\n/** @type {?} */\nFloatingActionButtonNg1Component.propDecorators;\n/** @type {?} */\nFloatingActionButtonNg1Component.prototype.items;\n/** @type {?} */\nFloatingActionButtonNg1Component.prototype.primary;\n/** @type {?} */\nFloatingActionButtonNg1Component.prototype.direction;\n/** @type {?} */\nFloatingActionButtonNg1Component.prototype.fabTooltip;\n/** @type {?} */\nFloatingActionButtonNg1Component.prototype.fabTooltipPlacement;\n}\n\n\nexport interface FloatingActionButtonItem {\n    icon: string;\n    event: Function;\n    tooltip?: string;\n    tooltipPlacement?: string;\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ElementRef, Injector, Input, Output, EventEmitter } from '@angular/core';\nimport { UpgradeComponent } from '@angular/upgrade/static';\nexport class ExpandInputNg1Component extends UpgradeComponent {\n\n     elname: string;\n     placeHolder: string;\n     className: string;\n     clearTextIcon: string;\n     closeSearch: string;\n     expandAlways: boolean;\n     onEnter: Function;\n\n     focus: EventEmitter<string> = new EventEmitter<string>();\n/**\n * @param {?} elementRef\n * @param {?} injector\n */\nconstructor(elementRef: ElementRef, injector: Injector) {\n        super('expandInput', elementRef, injector);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'expand-input'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Injector, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'elname': [{ type: Input },],\n'placeHolder': [{ type: Input },],\n'className': [{ type: Input },],\n'clearTextIcon': [{ type: Input },],\n'closeSearch': [{ type: Input },],\n'expandAlways': [{ type: Input },],\n'onEnter': [{ type: Input },],\n'focus': [{ type: Output },],\n};\n}\n\nfunction ExpandInputNg1Component_tsickle_Closure_declarations() {\n/** @type {?} */\nExpandInputNg1Component.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nExpandInputNg1Component.ctorParameters;\n/** @type {?} */\nExpandInputNg1Component.propDecorators;\n/** @type {?} */\nExpandInputNg1Component.prototype.elname;\n/** @type {?} */\nExpandInputNg1Component.prototype.placeHolder;\n/** @type {?} */\nExpandInputNg1Component.prototype.className;\n/** @type {?} */\nExpandInputNg1Component.prototype.clearTextIcon;\n/** @type {?} */\nExpandInputNg1Component.prototype.closeSearch;\n/** @type {?} */\nExpandInputNg1Component.prototype.expandAlways;\n/** @type {?} */\nExpandInputNg1Component.prototype.onEnter;\n/** @type {?} */\nExpandInputNg1Component.prototype.focus;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ElementRef, Injector, Input, Output, EventEmitter } from '@angular/core';\nimport { UpgradeComponent } from '@angular/upgrade/static';\nexport class ContactsNg1Component extends UpgradeComponent {\n\n     contacts: Contact[];\n     organization: string;\n     size: 'medium' | 'small';\n     colors: any;\n     maxContacts: number;\n\n     overflowClick: EventEmitter<void> = new EventEmitter<void>();\n/**\n * @param {?} elementRef\n * @param {?} injector\n */\nconstructor(elementRef: ElementRef, injector: Injector) {\n        super('contactGroup', elementRef, injector);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'contact-group'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Injector, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'contacts': [{ type: Input },],\n'organization': [{ type: Input },],\n'size': [{ type: Input },],\n'colors': [{ type: Input },],\n'maxContacts': [{ type: Input },],\n'overflowClick': [{ type: Output },],\n};\n}\n\nfunction ContactsNg1Component_tsickle_Closure_declarations() {\n/** @type {?} */\nContactsNg1Component.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nContactsNg1Component.ctorParameters;\n/** @type {?} */\nContactsNg1Component.propDecorators;\n/** @type {?} */\nContactsNg1Component.prototype.contacts;\n/** @type {?} */\nContactsNg1Component.prototype.organization;\n/** @type {?} */\nContactsNg1Component.prototype.size;\n/** @type {?} */\nContactsNg1Component.prototype.colors;\n/** @type {?} */\nContactsNg1Component.prototype.maxContacts;\n/** @type {?} */\nContactsNg1Component.prototype.overflowClick;\n}\n\n\nexport interface Contact {\n    test: string;\n    status: 'active' | 'passive';\n    customTooltip?: {\n        template: string,\n        tooltipPosition: string;\n        data?: any;\n    };\n}\n\nexport interface Organization {\n    text: string;\n    label: 'external' | 'risk';\n    tooltip?: string;\n    customTooltip?: {\n        template: string,\n        tooltipPosition: string;\n        data?: any;\n    };\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","\n/**\n * @abstract\n */\nexport abstract class StorageAdapter {\n/**\n * @abstract\n * @param {?} key\n * @return {?}\n */\ngetItem(key: string) {}\n/**\n * @abstract\n * @param {?} key\n * @param {?} value\n * @return {?}\n */\nsetItem(key: string, value: string) {}\n/**\n * @abstract\n * @param {?} key\n * @return {?}\n */\nremoveItem(key: string) {}\n/**\n * @abstract\n * @return {?}\n */\nclear() {}\n/**\n * @abstract\n * @return {?}\n */\ngetSupported() {}\n}","import { NgModule } from '@angular/core';\n\nimport { PersistentDataService } from './persistent-data.service';\nexport class PersistentDataModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    providers: [PersistentDataService],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction PersistentDataModule_tsickle_Closure_declarations() {\n/** @type {?} */\nPersistentDataModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nPersistentDataModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable } from '@angular/core';\nimport { StorageAdapter } from './adapters/storage-adapter';\nimport { CookieAdapter } from './adapters/cookie-adapter';\nimport { LocalStorageAdapter } from './adapters/local-storage-adapter';\nimport { SessionStorageAdapter } from './adapters/session-storage-adapter';\nexport class PersistentDataService {\n/**\n * Save the item in some form of persistent storage\n * @param {?} key\n * @param {?} value\n * @param {?=} type\n * @return {?}\n */\nsetItem(key: string, value: string, type: PersistentDataStorageType = PersistentDataStorageType.LocalStorage): void {\n        this.getAdapter(type).setItem(key, value);\n    }\n/**\n * Get a stored value from persistent storage\n * @param {?} key\n * @param {?=} type\n * @return {?}\n */\ngetItem(key: string, type: PersistentDataStorageType = PersistentDataStorageType.LocalStorage): string {\n        return this.getAdapter(type).getItem(key);\n    }\n/**\n * Remove a stored value from persistent storage\n * @param {?} key\n * @param {?=} type\n * @return {?}\n */\nremoveItem(key: string, type: PersistentDataStorageType = PersistentDataStorageType.LocalStorage): void {\n        this.getAdapter(type).removeItem(key);\n    }\n/**\n * Remove a stored value from persistent storage\n * @param {?=} type\n * @return {?}\n */\nclear(type: PersistentDataStorageType = PersistentDataStorageType.LocalStorage): void {\n        this.getAdapter(type).clear();\n    }\n/**\n * Return the appropriate adapter based on the type requested\n * @param {?} type\n * @return {?}\n */\nprivate getAdapter(type: PersistentDataStorageType): StorageAdapter {\n\n        switch (type) {\n\n            case PersistentDataStorageType.Cookie:\n                return new CookieAdapter();\n\n            case PersistentDataStorageType.LocalStorage:\n                const /** @type {?} */ localStorageAdapter = new LocalStorageAdapter();\n                return localStorageAdapter.getSupported();\n\n            case PersistentDataStorageType.SessionStorage:\n                const /** @type {?} */ sessionStorageAdapter = new SessionStorageAdapter();\n                return sessionStorageAdapter.getSupported();\n        }\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction PersistentDataService_tsickle_Closure_declarations() {\n/** @type {?} */\nPersistentDataService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nPersistentDataService.ctorParameters;\n}\n\nexport type PersistentDataStorageType = number;\nexport let PersistentDataStorageType: any = {};\nPersistentDataStorageType.LocalStorage = 0;\nPersistentDataStorageType.Cookie = 1;\nPersistentDataStorageType.SessionStorage = 2;\nPersistentDataStorageType[PersistentDataStorageType.LocalStorage] = \"LocalStorage\";\nPersistentDataStorageType[PersistentDataStorageType.Cookie] = \"Cookie\";\nPersistentDataStorageType[PersistentDataStorageType.SessionStorage] = \"SessionStorage\";\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { StorageAdapter } from './storage-adapter';\nimport { CookieAdapter } from './cookie-adapter';\nexport class SessionStorageAdapter implements StorageAdapter {\n/**\n * @param {?} key\n * @return {?}\n */\ngetItem(key: string): string {\n        return sessionStorage.getItem(key);\n    }\n/**\n * @param {?} key\n * @param {?} value\n * @return {?}\n */\nsetItem(key: string, value: string): void {\n        sessionStorage.setItem(key, value);\n    }\n/**\n * @param {?} key\n * @return {?}\n */\nremoveItem(key: string): void {\n        sessionStorage.removeItem(key);\n    }\n/**\n * @return {?}\n */\nclear(): void {\n        sessionStorage.clear();\n    }\n/**\n * @return {?}\n */\ngetSupported(): StorageAdapter {\n\n        // if local storage variable does not exist fall back to cookies\n        if (!sessionStorage) {\n            return new CookieAdapter();\n        }\n\n        // try to make a test save to local storage to see if there are any exceptions\n        try {\n            sessionStorage.setItem('ux-persistent-data-service', 'ux-persistent-data-service');\n            sessionStorage.removeItem('ux-persistent-data-service');\n\n            return this;\n        } catch ( /** @type {?} */err) {\n            return new CookieAdapter();\n        }\n    }\n\n}","import { StorageAdapter } from './storage-adapter';\nimport { CookieAdapter } from './cookie-adapter';\nexport class LocalStorageAdapter implements StorageAdapter {\n/**\n * @param {?} key\n * @return {?}\n */\ngetItem(key: string): string {\n        return localStorage.getItem(key);\n    }\n/**\n * @param {?} key\n * @param {?} value\n * @return {?}\n */\nsetItem(key: string, value: string): void {\n        localStorage.setItem(key, value);\n    }\n/**\n * @param {?} key\n * @return {?}\n */\nremoveItem(key: string): void {\n        localStorage.removeItem(key);\n    }\n/**\n * @return {?}\n */\nclear(): void {\n        localStorage.clear();\n    }\n/**\n * @return {?}\n */\ngetSupported(): StorageAdapter {\n\n        // if local storage variable does not exist fall back to cookies\n        if (!localStorage) {\n            return new CookieAdapter();\n        }\n\n        // try to make a test save to local storage to see if there are any exceptions\n        try {\n            localStorage.setItem('ux-persistent-data-service', 'ux-persistent-data-service');\n            localStorage.removeItem('ux-persistent-data-service');\n\n            return this;\n        } catch ( /** @type {?} */err) {\n            return new CookieAdapter();\n        }\n    }\n\n}","import { StorageAdapter } from './storage-adapter';\nexport class CookieAdapter implements StorageAdapter {\n/**\n * @param {?} key\n * @return {?}\n */\ngetItem(key: string): string {\n\n        if (document.cookie) {\n\n            // get all the cookies for this site\n            const /** @type {?} */ cookies = document.cookie.split(';');\n\n            // process the cookies into a from we can easily manage\n            const /** @type {?} */ match = cookies\n                .map(cookie => ({ key: cookie.split('=')[0].trim(), value: cookie.split('=')[1].trim() }))\n                .find(cookie => cookie.key === key);\n\n            return match ? match.value : null;\n        }\n\n        return null;\n    }\n/**\n * @param {?} key\n * @param {?} value\n * @return {?}\n */\nsetItem(key: string, value: string): void {\n        document.cookie = `${key}=${value}; path=/`;\n    }\n/**\n * @param {?} key\n * @return {?}\n */\nremoveItem(key: string): void {\n\n        document.cookie.split(';').forEach(cookie => {\n            const /** @type {?} */ eqPos = cookie.indexOf('=');\n            const /** @type {?} */ name = eqPos > -1 ? cookie.substr(0, eqPos).trim() : cookie;\n\n            if (name === key) {\n                document.cookie = cookie.trim().replace(/=.*/, `=;expires=${new Date().toUTCString()};path=/`);\n            }\n        });\n    }\n/**\n * @return {?}\n */\nclear(): void {\n\n        // call remove item on each cookie\n        document.cookie.split(';').map(cookie => cookie.split('=')[0].trim())\n            .forEach(cookie => this.removeItem(cookie));\n    }\n/**\n * @return {?}\n */\ngetSupported(): StorageAdapter {\n        // cookies are supported in all browsers\n        return this;\n    }\n\n}","import { StringFilterPipe } from './string-filter.pipe';\nimport { NgModule } from '@angular/core';\nexport class StringFilterModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    exports: [StringFilterPipe],\n    declarations: [StringFilterPipe]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction StringFilterModule_tsickle_Closure_declarations() {\n/** @type {?} */\nStringFilterModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nStringFilterModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Pipe, Injectable, PipeTransform } from '@angular/core';\nexport class StringFilterPipe implements PipeTransform {\n/**\n * @param {?} items\n * @param {?} value\n * @return {?}\n */\ntransform(items: any[], value: string): any[] {  \n        if (!items) {\n            return [];\n        }\n        return items.filter(it => it.toLowerCase().indexOf(value.toLowerCase()) >= 0);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Pipe, args: [{\n    name: 'stringFilter'\n}, ] },\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction StringFilterPipe_tsickle_Closure_declarations() {\n/** @type {?} */\nStringFilterPipe.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nStringFilterPipe.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReorderableDirective } from './reorderable.directive';\nimport { ReorderableHandleDirective } from './reorderable-handle.directive';\nimport { ReorderableModelDirective } from './reorderable-model.directive';\nimport { ReorderableService } from './reorderable.service';\nexport class ReorderableModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        CommonModule\n    ],\n    declarations: [\n        ReorderableDirective,\n        ReorderableHandleDirective,\n        ReorderableModelDirective\n    ],\n    exports: [\n        ReorderableDirective,\n        ReorderableHandleDirective,\n        ReorderableModelDirective\n    ],\n    providers: [\n        ReorderableService\n    ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ReorderableModule_tsickle_Closure_declarations() {\n/** @type {?} */\nReorderableModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nReorderableModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, Input, ElementRef, OnInit, ContentChildren, QueryList, OnDestroy, Output, EventEmitter, Renderer2, AfterViewInit, HostBinding } from '@angular/core';\nimport { Subscription } from 'rxjs/Subscription';\nimport { Drake } from 'dragula';\nimport { ReorderableHandleDirective } from './reorderable-handle.directive';\nimport { ReorderableModelDirective } from './reorderable-model.directive';\nimport { ReorderableService, ReorderableContainer, ReorderableDragEvent, ReorderableDragEndEvent, ReorderableDropEvent, ReorderableClonedEvent, ReorderableCancelEvent } from './reorderable.service';\nimport { dragula } from './dragula';\nexport class ReorderableDirective implements OnInit, AfterViewInit, OnDestroy {\n\n     reorderableModel: Array<any>;\n     reorderableGroup: string;\n     reorderableModelChange = new EventEmitter<Array<any>>();\n     reorderStart = new EventEmitter<ReorderEvent>();\n     reorderCancel = new EventEmitter<ReorderEvent>();\n     reorderEnd = new EventEmitter<ReorderEvent>();\n\n     handles: QueryList<ElementRef>;\n     models: QueryList<ReorderableModelDirective>;\nprivate _instance: Drake;\nprivate _container: ReorderableContainer;\nprivate _dragging = false;\nprivate _subscriptions = new Subscription();\n/**\n * @param {?} _elementRef\n * @param {?} _renderer\n * @param {?} _service\n */\nconstructor(\nprivate _elementRef: ElementRef,\nprivate _renderer: Renderer2,\nprivate _service: ReorderableService\n    ) { }\n/**\n * Initialise dragula and bind to all the required events\n * @return {?}\n */\nngOnInit(): void {\n\n        // If no group name then generate a unique one for this instance only\n        if (!this.reorderableGroup) {\n            this.reorderableGroup = this._service.getUniqueGroupName();\n        }\n\n        this._container = {\n            element: this._elementRef.nativeElement,\n            getModelFromElement: this.getModelFromElement.bind(this),\n            canMove: this.canMove.bind(this)\n        };\n\n        // Register for drag events on this element\n        const /** @type {?} */ group = this._service.register(this.reorderableGroup, this._container);\n        this._subscriptions.add(group.drag.subscribe(this.onDrag.bind(this)));\n        this._subscriptions.add(group.dragEnd.subscribe(this.onDragEnd.bind(this)));\n        this._subscriptions.add(group.drop.subscribe(this.onDrop.bind(this)));\n        this._subscriptions.add(group.cancel.subscribe((event: ReorderableCancelEvent) => this.reorderCancel.emit({ element: event.element, model: event.model })));\n        this._subscriptions.add(group.cloned.subscribe(this.onClone.bind(this)));\n    }\n/**\n * @return {?}\n */\nngAfterViewInit(): void {\n        this._service.initialize(this.reorderableGroup);\n    }\n/**\n * We need to destroy the dragula instance on component destroy\n * @return {?}\n */\nngOnDestroy(): void {\n        this._service.unregister(this.reorderableGroup, this._container);\n        this._subscriptions.unsubscribe();\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nonDrag(event: ReorderableDragEvent): void {\n\n        this._dragging = true;\n\n        this.reorderStart.emit({ element: event.element, model: event.model });\n    }\n/**\n * This is fired when items get reordered - we need to emit the new order of the models\n * @param {?} event\n * @return {?}\n */\nonDrop(event: ReorderableDropEvent): void {\n\n        // if there is no provided module we can skip this\n        if (!this.reorderableModel) {\n            return;\n        }\n\n        let /** @type {?} */ changed = false;\n\n        if (event.source.isSameNode(this._elementRef.nativeElement)) {\n\n            // remove this model from the list of models\n            const /** @type {?} */ index = this.reorderableModel.indexOf(event.model);\n            if (index >= 0) {\n                this.reorderableModel.splice(index, 1);\n                changed = true;\n            }\n        }\n\n        if (event.target.isSameNode(this._elementRef.nativeElement)) {\n\n            // get the position of sibling element\n            const /** @type {?} */ index = event.sibling && !event.sibling.classList.contains('gu-mirror') ?\n                this.reorderableModel.indexOf(this.getModelFromElement(event.sibling)) :\n                this.reorderableModel.length;\n\n            // insert the model at its new location\n            this.reorderableModel.splice(index, 0, event.model);\n            changed = true;\n        }\n\n        // Emit event if any changes were made\n        if (changed) {\n            this.reorderableModelChange.emit(this.reorderableModel);\n        }\n    }\n/**\n * Return the model assciated with a particular element in the list.\n * This should ensure that the items have the draggable model directive applied\n * @param {?} element\n * @return {?}\n */\ngetModelFromElement(element: Element): any {\n\n        const /** @type {?} */ model = this.models.find(_model => _model.elementRef.nativeElement === element);\n\n        if (!model) {\n            return null;\n        }\n\n        return model.uxReorderableModel;\n    }\n/**\n * When we finish dragging remove the utillity class from the element being moved\n * @param {?} event\n * @return {?}\n */\nonDragEnd(event: ReorderableDragEndEvent): void {\n\n        this._dragging = false;\n\n        if (this._elementRef.nativeElement.contains(event.element)) {\n\n            this._renderer.removeClass(event.element, 'ux-reorderable-moving');\n\n            this.reorderEnd.emit({\n                element: event.element,\n                model: event.model\n            });\n        }\n    }\n/**\n * We want to ensure that the cloned element is identical\n * to the original, regardless of it's location in the DOM tree\n * @param {?} event\n * @return {?}\n */\nonClone(event: ReorderableClonedEvent): void {\n\n        if (this._elementRef.nativeElement.contains(event.element)) {\n\n            this.setTableCellWidths(event.element, event.clone);\n            this.captureCanvases(event.element, event.clone);\n\n            this._renderer.addClass(event.element, 'ux-reorderable-moving');\n        }\n    }\n/**\n * If elements contain handles then only drag when the handle is dragged\n * otherwise drag whenever an immediate child is specified\n * @param {?} element\n * @param {?} container\n * @param {?} handle\n * @return {?}\n */\ncanMove(element: Element, container: Element, handle: Element): boolean {\n        return this.handles.length === 0 ? true : !!this.handles.find(_handle => _handle.nativeElement === handle);\n    }\n/**\n * @param {?} source\n * @param {?} target\n * @return {?}\n */\nprivate setTableCellWidths(source: Element, target: Element): void {\n\n        // if it is not a table row then skip this\n        if (source.tagName !== 'TR') {\n            return;\n        }\n\n        // find any immediate td children and fix their width\n        const /** @type {?} */ sourceCells = /** @type {?} */(( Array.from(source.children) as HTMLTableCellElement[]));\n        const /** @type {?} */ targetCells = /** @type {?} */(( Array.from(target.children) as HTMLTableCellElement[]));\n\n        // fix the width of these cells\n        sourceCells.forEach((cell, idx) => targetCells[idx].style.minWidth = getComputedStyle(cell).getPropertyValue('width'));\n    }\n/**\n * @param {?} source\n * @param {?} target\n * @return {?}\n */\nprivate captureCanvases(source: Element, target: Element): void {\n\n        // find all child canvas elements\n        const /** @type {?} */ sourceCanvases = Array.from(source.querySelectorAll('canvas'));\n        const /** @type {?} */ targetCanvases = Array.from(target.querySelectorAll('canvas'));\n\n        // replicate the canvas content\n        targetCanvases.map(canvas => canvas.getContext('2d'))\n            .forEach((context, idx) => context.drawImage(sourceCanvases[idx], 0, 0));\n\n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: '[uxReorderable]'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Renderer2, },\n{type: ReorderableService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'reorderableModel': [{ type: Input },],\n'reorderableGroup': [{ type: Input },],\n'reorderableModelChange': [{ type: Output },],\n'reorderStart': [{ type: Output },],\n'reorderCancel': [{ type: Output },],\n'reorderEnd': [{ type: Output },],\n'handles': [{ type: ContentChildren, args: [ReorderableHandleDirective, { read: ElementRef, descendants: true }, ] },],\n'models': [{ type: ContentChildren, args: [ReorderableModelDirective, ] },],\n'_dragging': [{ type: HostBinding, args: ['class.ux-reorderable-container-moving', ] },],\n};\n}\n\nfunction ReorderableDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nReorderableDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nReorderableDirective.ctorParameters;\n/** @type {?} */\nReorderableDirective.propDecorators;\n/** @type {?} */\nReorderableDirective.prototype.reorderableModel;\n/** @type {?} */\nReorderableDirective.prototype.reorderableGroup;\n/** @type {?} */\nReorderableDirective.prototype.reorderableModelChange;\n/** @type {?} */\nReorderableDirective.prototype.reorderStart;\n/** @type {?} */\nReorderableDirective.prototype.reorderCancel;\n/** @type {?} */\nReorderableDirective.prototype.reorderEnd;\n/** @type {?} */\nReorderableDirective.prototype.handles;\n/** @type {?} */\nReorderableDirective.prototype.models;\n/** @type {?} */\nReorderableDirective.prototype._instance;\n/** @type {?} */\nReorderableDirective.prototype._container;\n/** @type {?} */\nReorderableDirective.prototype._dragging;\n/** @type {?} */\nReorderableDirective.prototype._subscriptions;\n/** @type {?} */\nReorderableDirective.prototype._elementRef;\n/** @type {?} */\nReorderableDirective.prototype._renderer;\n/** @type {?} */\nReorderableDirective.prototype._service;\n}\n\n\nexport interface ReorderEvent {\n    element: Element;\n    model: any;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable, EventEmitter } from '@angular/core';\nimport { Drake, DragulaOptions } from 'dragula';\nimport { dragula } from './dragula';\nexport class ReorderableService {\nprivate _groups: { [k: string]: ReorderableGroup } = {};\nprivate _uniqueGroupId = 0;\n/**\n * Returns a unique string which can be used as a group name if one was not configured.\n * @return {?}\n */\ngetUniqueGroupName(): string {\n        return '_uxReorderable_' + this._uniqueGroupId++;\n    }\n/**\n * Adds the container to the named group.\n * @param {?} groupName\n * @param {?} container\n * @return {?}\n */\nregister(groupName: string, container: ReorderableContainer): ReorderableGroup {\n\n        if (!this._groups[groupName]) {\n            this._groups[groupName] = new ReorderableGroup();\n        }\n\n        this._groups[groupName].register(container);\n\n        return this._groups[groupName];\n    }\n/**\n * Removes the container from the named group. If it was the last container in the group, destroys the group.\n * @param {?} groupName\n * @param {?} container\n * @return {?}\n */\nunregister(groupName: string, container: ReorderableContainer): void {\n\n        const /** @type {?} */ group = this._groups[groupName];\n\n        if (group) {\n            group.unregister(container);\n\n            if (group.isEmpty()) {\n                group.destroy();\n\n                delete this._groups[groupName];\n            }\n        }\n    }\n/**\n * Creates the dragula instance with the current config and attaches the events, if not already created.\n * @param {?} groupName\n * @return {?}\n */\ninitialize(groupName: string): ReorderableGroup {\n\n        const /** @type {?} */ group = this._groups[groupName];\n\n        if (group) {\n            group.initialize();\n        }\n\n        return group;\n    }\n/**\n * Returns the group object for the given name.\n * @param {?} group\n * @return {?}\n */\ngetGroup(group: string): ReorderableGroup {\n        return this._groups[group];\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ReorderableService_tsickle_Closure_declarations() {\n/** @type {?} */\nReorderableService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nReorderableService.ctorParameters;\n/** @type {?} */\nReorderableService.prototype._groups;\n/** @type {?} */\nReorderableService.prototype._uniqueGroupId;\n}\n\n\nexport interface ReorderableContainer {\n    element: Element;\n    getModelFromElement: (element: Element) => any;\n    canMove: (element: Element, container: Element, handle: Element) => boolean;\n}\n\nexport interface ReorderableDragEvent {\n    model: any;\n    element: Element;\n    source: Element;\n}\n\nexport interface ReorderableDragEndEvent {\n    model: any;\n    element: Element;\n}\n\nexport interface ReorderableDropEvent {\n    model: any;\n    element: Element;\n    target: Element;\n    source: Element;\n    sibling: Element;\n}\n\nexport interface ReorderableCancelEvent {\n    model: any;\n    element: Element;\n}\n\nexport interface ReorderableClonedEvent {\n    clone: Element;\n    element: Element;\n    type: string;\n}\n/**\n * Represents a collection of drag-and-drop containers (uxReorderable) that items can be dragged between.\n */\nexport class ReorderableGroup {\n\n    drag = new EventEmitter<ReorderableDragEvent>();\n    dragEnd = new EventEmitter<ReorderableDragEndEvent>();\n    drop = new EventEmitter<ReorderableDropEvent>();\n    cancel = new EventEmitter<ReorderableCancelEvent>();\n    cloned = new EventEmitter<ReorderableClonedEvent>();\nprivate _instance: Drake;\nprivate _containers: ReorderableContainer[] = [];\nprivate _config: DragulaOptions = {\n        moves: this.canMove.bind(this)\n    };\n/**\n * Returns true if there are no containers registered with the group.\n * @return {?}\n */\nisEmpty(): boolean {\n        return this._containers.length === 0;\n    }\n/**\n * Returns the model object (uxReorderableModel) for an elements in one of the containers in the group.\n * @param {?} element\n * @return {?}\n */\ngetModelForElement(element: Element): any {\n        for (const /** @type {?} */ container of this._containers) {\n            const /** @type {?} */ model = container.getModelFromElement(element);\n            if (model) {\n                return model;\n            }\n        }\n\n        return null;\n    }\n/**\n * Adds the container to the group.\n * @param {?} container\n * @return {?}\n */\nregister(container: ReorderableContainer): void {\n        this._containers.push(container);\n\n        if (this._instance) {\n            this._instance.containers = this._containers.map((c) => c.element);\n        }\n\n        if (!this._config.mirrorContainer) {\n            this._config.mirrorContainer = container.element;\n        }\n    }\n/**\n * Removes the container from the group.\n * @param {?} container\n * @return {?}\n */\nunregister(container: ReorderableContainer): void {\n        const /** @type {?} */ index = this._containers.indexOf(container);\n        if (index >= 0) {\n            this._containers.splice(index, 1);\n            if (this._instance) {\n                this._instance.containers = this._containers.map((c) => c.element);\n            }\n        }\n    }\n/**\n * Creates the dragula instance with the current config and attaches the events, if not already created.\n * @return {?}\n */\ninitialize(): void {\n\n        if (this._instance) {\n            return;\n        }\n\n        this._instance = dragula(this._containers.map((c) => c.element), this._config);\n\n        this._instance.on('drag', (element: Element, source: Element) => {\n            this.drag.emit({\n                model: this.getModelForElement(element),\n                element: element,\n                source: source\n            });\n        });\n        this._instance.on('dragend', (element: Element) => {\n            this.dragEnd.emit({\n                model: this.getModelForElement(element),\n                element: element\n            });\n        });\n        this._instance.on('drop', (element: Element, target: Element, source: Element, sibling: Element) => {\n            this.drop.emit({\n                model: this.getModelForElement(element),\n                element: element,\n                target: target,\n                source: source,\n                sibling: sibling\n            });\n        });\n        this._instance.on('cancel', (element: Element) => {\n            this.cancel.emit({\n                model: this.getModelForElement(element),\n                element: element\n            });\n        });\n        this._instance.on('cloned', (clone: Element, element: Element, type: string) => {\n            this.cloned.emit({\n                clone: clone,\n                element: element,\n                type: type\n            });\n        });\n    }\n/**\n * Destroys the dragula instance.\n * @return {?}\n */\ndestroy(): void {\n        if (this._instance) {\n            this._instance.destroy();\n            this._instance = null;\n        }\n    }\n/**\n * Finds the container for the containerElement and returns the results of canMove.\n * @param {?} element\n * @param {?} containerElement\n * @param {?} handle\n * @return {?}\n */\nprivate canMove(element: Element, containerElement: Element, handle: Element): boolean {\n        for (let /** @type {?} */ container of this._containers) {\n            if (container.element.isSameNode(containerElement)) {\n                return container.canMove(element, containerElement, handle);\n            }\n        }\n    }\n}\n\nfunction ReorderableGroup_tsickle_Closure_declarations() {\n/** @type {?} */\nReorderableGroup.prototype.drag;\n/** @type {?} */\nReorderableGroup.prototype.dragEnd;\n/** @type {?} */\nReorderableGroup.prototype.drop;\n/** @type {?} */\nReorderableGroup.prototype.cancel;\n/** @type {?} */\nReorderableGroup.prototype.cloned;\n/** @type {?} */\nReorderableGroup.prototype._instance;\n/** @type {?} */\nReorderableGroup.prototype._containers;\n/** @type {?} */\nReorderableGroup.prototype._config;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","// WORKAROUND: ng-packagr issue - https://github.com/dherges/ng-packagr/issues/163\n\nimport * as dragulaNamespace from 'dragula';\nimport { Drake } from 'dragula';\n\nexport const /** @type {?} */ dragula: (containers?: any, options?: any) => Drake = ( /** @type {?} */((dragulaNamespace as any))).default || dragulaNamespace;","import { Directive, Input, ElementRef } from '@angular/core';\nexport class ReorderableModelDirective {\n\n    // allow the user to specify a model for the item - allows use with ngFor\n     uxReorderableModel: any;\n/**\n * @param {?} elementRef\n */\nconstructor(public elementRef: ElementRef) { }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: '[uxReorderableModel]'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'uxReorderableModel': [{ type: Input },],\n};\n}\n\nfunction ReorderableModelDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nReorderableModelDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nReorderableModelDirective.ctorParameters;\n/** @type {?} */\nReorderableModelDirective.propDecorators;\n/** @type {?} */\nReorderableModelDirective.prototype.uxReorderableModel;\n/** @type {?} */\nReorderableModelDirective.prototype.elementRef;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive } from '@angular/core';\nexport class ReorderableHandleDirective { static decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: '[uxReorderableHandle]'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ReorderableHandleDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nReorderableHandleDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nReorderableHandleDirective.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { SelectionItemDirective } from './selection-item.directive';\nimport { SelectionDirective } from './selection.directive';\nexport class SelectionModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  imports: [\n    CommonModule\n  ],\n  declarations: [SelectionDirective, SelectionItemDirective],\n  exports: [SelectionDirective, SelectionItemDirective]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction SelectionModule_tsickle_Closure_declarations() {\n/** @type {?} */\nSelectionModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSelectionModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { AfterContentInit, ContentChildren, Directive, EventEmitter, HostBinding, HostListener, Input, OnDestroy, Output, QueryList } from '@angular/core';\nimport { Subscription } from 'rxjs/Subscription';\nimport { SelectionItemDirective } from './selection-item.directive';\nimport { SelectionMode, SelectionService } from './selection.service';\nexport class SelectionDirective implements AfterContentInit, OnDestroy {\n/**\n * @param {?} items\n * @return {?}\n */\nset uxSelection(items: any[]) {\n    this._selectionService.select(...items);\n  }\n/**\n * @param {?} disabled\n * @return {?}\n */\nset disabled(disabled: boolean) {\n    this._selectionService.setDisabled(disabled);\n  }\n/**\n * @param {?} mode\n * @return {?}\n */\nset mode(mode: SelectionMode) {\n    this._selectionService.setMode(mode);\n  }\n/**\n * @param {?} enabled\n * @return {?}\n */\nset clickSelection(enabled: boolean) {\n    this._selectionService.clickEnabled = enabled;\n  }\n/**\n * @param {?} enabled\n * @return {?}\n */\nset keyboardSelection(enabled: boolean) {\n    this._selectionService.keyboardEnabled = enabled;\n  }\n\n    tabindex: number = 0;\n\n   uxSelectionChange = new EventEmitter<any[]>();\n\n   items: QueryList<SelectionItemDirective>;\nprivate _subscriptions = new Subscription();\n/**\n * @param {?} _selectionService\n */\nconstructor(private _selectionService: SelectionService) {\n    this._subscriptions.add(_selectionService.selection$.subscribe(items => this.uxSelectionChange.emit(items)));\n  }\n/**\n * @return {?}\n */\nngAfterContentInit(): void {\n    // provide the initial list of selection items\n    this.update();\n\n    // if the list changes then inform the service\n    this._subscriptions.add(this.items.changes.subscribe(() => this.update()));\n  }\n/**\n * @return {?}\n */\nngOnDestroy(): void {\n    this._subscriptions.unsubscribe();\n  }\n/**\n * If the directive element receives focus then activate the first item\n * @return {?}\n */\nfocus(): void {\n    if (this._selectionService.enabled && this._selectionService.dataset.length > 0) {\n      this._selectionService.activate(this._selectionService.dataset[0]);\n    }\n  }\n/**\n * Update the dataset to reflect the latest selection items\n * @return {?}\n */\nupdate(): void {\n    this._selectionService.dataset = this.items.map(item => item.uxSelectionItem);\n  }\n/**\n * Select all the items in the list\n * @return {?}\n */\nselectAll(): void {\n    if (this._selectionService.enabled) {\n      this._selectionService.strategy.selectAll();\n    }\n  }\n/**\n * Deselect all currently selected items\n * @return {?}\n */\ndeselectAll(): void {\n    if (this._selectionService.enabled) {\n      this._selectionService.strategy.deselectAll();\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[uxSelection]',\n  exportAs: 'ux-selection',\n  providers: [ SelectionService ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: SelectionService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'uxSelection': [{ type: Input },],\n'disabled': [{ type: Input },],\n'mode': [{ type: Input },],\n'clickSelection': [{ type: Input },],\n'keyboardSelection': [{ type: Input },],\n'tabindex': [{ type: Input },{ type: HostBinding, args: ['tabindex', ] },],\n'uxSelectionChange': [{ type: Output },],\n'items': [{ type: ContentChildren, args: [SelectionItemDirective, ] },],\n'focus': [{ type: HostListener, args: ['focus', ] },],\n};\n}\n\nfunction SelectionDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nSelectionDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSelectionDirective.ctorParameters;\n/** @type {?} */\nSelectionDirective.propDecorators;\n/** @type {?} */\nSelectionDirective.prototype.tabindex;\n/** @type {?} */\nSelectionDirective.prototype.uxSelectionChange;\n/** @type {?} */\nSelectionDirective.prototype.items;\n/** @type {?} */\nSelectionDirective.prototype._subscriptions;\n/** @type {?} */\nSelectionDirective.prototype._selectionService;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ElementRef, EventEmitter, HostBinding, HostListener, Input, OnDestroy, OnInit, Output } from '@angular/core';\nimport { Subscription } from 'rxjs/Subscription';\nimport { map } from 'rxjs/operators';\nimport { SelectionService } from './selection.service';\nexport class SelectionItemDirective implements OnInit, OnDestroy {\n\n   uxSelectionItem: any;\n/**\n * @param {?} selected\n * @return {?}\n */\nset selected(selected: boolean) {\n    selected ? this.select() : this.deselect();\n  }\n/**\n * @return {?}\n */\nget selected(): boolean {\n    return this._selected;\n  }\n  \n    tabindex: number = 0;\n   selectedChange = new EventEmitter<boolean>();\n\n   active: boolean = false;\nprivate _selected: boolean = false;\nprivate _subscriptions = new Subscription();\n/**\n * @param {?} _selectionService\n * @param {?} _elementRef\n */\nconstructor(private _selectionService: SelectionService,\nprivate _elementRef: ElementRef) { }\n/**\n * @return {?}\n */\nngOnInit(): void {\n\n    // if there is no associated data then throw an error\n    if (!this.uxSelectionItem) {\n      throw new Error('The uxSelectionItem directive must have data associated with it.');\n    }\n\n    // subscribe to selection changes on this item\n    this._subscriptions.add(this._selectionService.selected$(this.uxSelectionItem).subscribe(selected => {\n\n      // store the selected state\n      this._selected = selected;\n\n      // emit the selected state\n      this.selectedChange.emit(selected);\n    }));\n\n    // subscribe to changes to the active state\n    this._subscriptions.add(this._selectionService.active$.pipe(map(active => active === this.uxSelectionItem)).subscribe(active => {\n\n      // store the focus state\n      this.active = active;\n\n      // if it is active then focus the element\n      if (active === true) {\n        this._elementRef.nativeElement.focus();\n      }\n    }));\n  }\n/**\n * @return {?}\n */\nngOnDestroy(): void {\n    this._subscriptions.unsubscribe();\n  }\n/**\n * @param {?} event\n * @return {?}\n */\nclick(event: MouseEvent): void {\n    if (this._selectionService.enabled && this._selectionService.clickEnabled) {\n      this._selectionService.strategy.click(event, this.uxSelectionItem);\n    }\n  }\n/**\n * @param {?} event\n * @return {?}\n */\nmousedown(event: MouseEvent): void {\n    if (this._selectionService.enabled && this._selectionService.clickEnabled) {\n      this._selectionService.strategy.mousedown(event, this.uxSelectionItem);\n    }\n  }\n/**\n * @param {?} event\n * @return {?}\n */\nkeydown(event: KeyboardEvent): void {\n    if (this._selectionService.enabled && this._selectionService.keyboardEnabled) {\n      this._selectionService.strategy.keydown(event, this.uxSelectionItem);\n    }\n  }\n/**\n * Select this item using the current strategy\n * @return {?}\n */\nselect(): void {\n    if (this._selectionService.enabled) {\n      this._selectionService.strategy.select(this.uxSelectionItem);\n    }\n  }\n/**\n * Deselect this item using the current strategy\n * @return {?}\n */\ndeselect(): void {\n    if (this._selectionService.enabled) {\n      this._selectionService.strategy.deselect(this.uxSelectionItem);\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[uxSelectionItem]',\n  exportAs: 'ux-selection-item'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: SelectionService, },\n{type: ElementRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'uxSelectionItem': [{ type: Input },],\n'selected': [{ type: Input },{ type: HostBinding, args: ['class.ux-selection-selected', ] },],\n'tabindex': [{ type: Input },{ type: HostBinding, args: ['tabindex', ] },],\n'selectedChange': [{ type: Output },],\n'active': [{ type: HostBinding, args: ['class.ux-selection-focused', ] },],\n'click': [{ type: HostListener, args: ['click', ['$event'], ] },],\n'mousedown': [{ type: HostListener, args: ['mousedown', ['$event'], ] },],\n'keydown': [{ type: HostListener, args: ['keydown', ['$event'], ] },],\n};\n}\n\nfunction SelectionItemDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nSelectionItemDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSelectionItemDirective.ctorParameters;\n/** @type {?} */\nSelectionItemDirective.propDecorators;\n/** @type {?} */\nSelectionItemDirective.prototype.uxSelectionItem;\n/** @type {?} */\nSelectionItemDirective.prototype.tabindex;\n/** @type {?} */\nSelectionItemDirective.prototype.selectedChange;\n/** @type {?} */\nSelectionItemDirective.prototype.active;\n/** @type {?} */\nSelectionItemDirective.prototype._selected;\n/** @type {?} */\nSelectionItemDirective.prototype._subscriptions;\n/** @type {?} */\nSelectionItemDirective.prototype._selectionService;\n/** @type {?} */\nSelectionItemDirective.prototype._elementRef;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { Observable } from 'rxjs/Observable';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\nimport { RowSelectionStrategy } from './strategies/row-selection.strategy';\nimport { SelectionStrategy } from './strategies/selection.strategy';\nimport { SimpleSelectionStrategy } from './strategies/simple-selection.strategy';\nexport class SelectionService implements OnDestroy {\nprivate _selection = new Set();\nprivate _rowStrategy = new RowSelectionStrategy(this);\nprivate _simpleStrategy = new SimpleSelectionStrategy(this);\n\n  dataset: any[] = [];\n  enabled: boolean = true;\n  clickEnabled: boolean = true;\n  keyboardEnabled: boolean = true;\n  strategy: SelectionStrategy = this._simpleStrategy;\n\n  active$ = new BehaviorSubject<any>(null);\n  selection$ = new BehaviorSubject<any[]>([]);\n/**\n * @return {?}\n */\nngOnDestroy(): void {\n    this._rowStrategy.destroy();\n    this._simpleStrategy.destroy();\n  }\n/**\n * If the item is not currently selected then add it\n * to the list of selected items\n * @param {...?} selections\n * @return {?}\n */\nselect(...selections: any[]): void {\n\n    // add each selection to the set\n    selections.forEach(selection => this._selection.add(selection));\n\n    // propagate the changes\n    this.selectionHasMutated();\n  }\n/**\n * Remove an item from the list of selected items\n * @param {...?} selections\n * @return {?}\n */\ndeselect(...selections: any[]): void {\n    // remove each item from the set\n    selections.forEach(selection => this._selection.delete(selection));\n\n    // propagate the changes\n    this.selectionHasMutated();\n  }\n/**\n * Toggle the selected state of any specified items\n * @param {...?} selections\n * @return {?}\n */\ntoggle(...selections: any[]): void {\n    selections.forEach(selection => this.isSelected(selection) ? this.deselect(selection) : this.select(selection));\n  }\n/**\n * Determine whether or not a specific item is currently selected\n * @param {?} data\n * @return {?}\n */\nisSelected(data: any): boolean {\n    return this._selection.has(data);\n  }\n/**\n * Return an observable specifically for notifying the subscriber\n * only when the selection state of a specific object has changed\n * @param {?} data\n * @return {?}\n */\nselected$(data: any): Observable<boolean> {\n    return this.selection$.pipe(map(() => this.isSelected(data)), distinctUntilChanged());\n  }\n/**\n * Define how selections should be performed.\n * This allows us to use an strategy pattern to handle the various keyboard\n * and mouse interactions while keeping each mode separated and\n * easily extensible if we want to add more modes in future!\n * @param {?} mode\n * @return {?}\n */\nsetMode(mode: SelectionMode): void {\n\n    switch (mode.toLowerCase().trim()) {\n\n      case 'simple':\n        this.strategy = this._simpleStrategy;\n        break;\n\n      case 'row':\n        this.strategy = this._rowStrategy;\n        break;\n\n      default:\n        throw new Error(`The selection mode '${mode}' does not exist. Valid modes are 'simple' or 'row'.`);\n    }\n  }\n/**\n * Set the current active item\n * @param {?} data\n * @return {?}\n */\nactivate(data: any): void {\n    this.active$.next(data);\n  }\n/**\n * Deactive all items\n * @return {?}\n */\ndeactivate(): void {\n    this.active$.next(null);\n  }\n/**\n * Activate the sibling of the current active item.\n * If previous is set to true the previous sibling will be activated\n * rather than the next sibling. This function will also return the\n * data of the newly activated sibling\n * @param {?=} previous\n * @return {?}\n */\nactivateSibling(previous: boolean = false): any {\n\n    // get the currently active item\n    const /** @type {?} */ current = this.active$.getValue();\n\n    // check if there is a current active item\n    if (!current) {\n      return;\n    }\n\n    // get the index of the current item\n    const /** @type {?} */ idx = this.dataset.indexOf(current);\n    const /** @type {?} */ target = this.dataset[previous ? idx - 1 : idx + 1];\n\n    // check if the target exists\n    if (target) {\n      this.activate(target);\n    }\n\n    return target;\n  }\n/**\n * @param {?} disabled\n * @return {?}\n */\nsetDisabled(disabled: boolean): void {\n    // store the current disabled state\n    this.enabled = !disabled;\n\n    // clear any stateful data\n    this.active$.next(null);\n    this._selection.clear();\n\n    // emit the selection change information\n    this.selectionHasMutated();\n  }\n/**\n * @return {?}\n */\nprivate selectionHasMutated(): void {\n    this.selection$.next(Array.from(this._selection));\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction SelectionService_tsickle_Closure_declarations() {\n/** @type {?} */\nSelectionService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSelectionService.ctorParameters;\n/** @type {?} */\nSelectionService.prototype._selection;\n/** @type {?} */\nSelectionService.prototype._rowStrategy;\n/** @type {?} */\nSelectionService.prototype._simpleStrategy;\n/** @type {?} */\nSelectionService.prototype.dataset;\n/** @type {?} */\nSelectionService.prototype.enabled;\n/** @type {?} */\nSelectionService.prototype.clickEnabled;\n/** @type {?} */\nSelectionService.prototype.keyboardEnabled;\n/** @type {?} */\nSelectionService.prototype.strategy;\n/** @type {?} */\nSelectionService.prototype.active$;\n/** @type {?} */\nSelectionService.prototype.selection$;\n}\n\n\nexport type SelectionMode = 'simple' | 'row';\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { SelectionStrategy } from './selection.strategy';\nexport class SimpleSelectionStrategy extends SelectionStrategy {\n/**\n * When the item is clicked simply toggle the current selected state\n * @param {?} event\n * @param {?} data\n * @return {?}\n */\nclick(event: MouseEvent, data: any): void {\n    this.toggle(data);\n  }\n/**\n * Add basic keyboard support for navigating\n * and selecting/deselecting items\n * @param {?} event\n * @param {?} data\n * @return {?}\n */\nkeydown(event: KeyboardEvent, data: any): void {\n\n    switch (event.keyCode) {\n      \n      case KeyCode.UpArrow:\n        event.preventDefault();\n        return this.selectionService.activateSibling(true);\n        \n      case KeyCode.DownArrow:\n        event.preventDefault();\n        return this.selectionService.activateSibling(false);\n      \n      case KeyCode.Spacebar:\n        event.preventDefault();      \n        return this.toggle(data);\n    }\n  }\n/**\n * Override the standard toggle function to always activate the item\n * @param {?} data\n * @return {?}\n */\ntoggle(data: any): void {\n    super.toggle(data);\n    this.selectionService.activate(data);\n  }\n}\ntype KeyCode = number;\nlet KeyCode: any = {};\nKeyCode.UpArrow = 38;\nKeyCode.DownArrow = 40;\nKeyCode.Spacebar = 32;\nKeyCode[KeyCode.UpArrow] = \"UpArrow\";\nKeyCode[KeyCode.DownArrow] = \"DownArrow\";\nKeyCode[KeyCode.Spacebar] = \"Spacebar\";\n\n","import { SelectionStrategy } from './selection.strategy';\nexport class RowSelectionStrategy extends SelectionStrategy {\nprivate _selection: Selection = { start: null, end: null };\n/**\n * By default on shift click the browser will highlight\n * text. This looks bad and we don't want this to occur\n * @param {?} event\n * @return {?}\n */\nmousedown(event: MouseEvent): void {\n    event.preventDefault();\n  }\n/**\n * When a row is clicked we want to handle selection\n * @param {?} event\n * @param {?} data\n * @return {?}\n */\nclick(event: MouseEvent, data: any): void {\n\n    // determine which modifier keys are pressed\n    const { ctrlKey, shiftKey } = event;\n\n    // if the shift key is pressed we want to perform a multiple selection\n    if (shiftKey) {\n      return this.multipleSelect(data);\n    }\n\n    // if the control key is pressed we want to perform an additive toggle selection\n    if (ctrlKey) {\n      return this.toggle(data);\n    }\n\n    // perform a single selection where all other rows are deselected\n    this.singleSelect(data);\n  }\n/**\n * To support full keyboard control we need to support the following:\n * 1. Arrow keys to navigate up and down\n * 2. Spacebar to toggle selection\n * 3. Shift + Arrow keys to multiple select\n * 4. Ctrl + Arrow keys to allow retained selection and navigation\n * @param {?} event\n * @param {?} data\n * @return {?}\n */\nkeydown(event: KeyboardEvent, data: any): void {\n\n    switch (event.keyCode) {\n\n      case KeyCode.UpArrow:\n      case KeyCode.DownArrow:\n        event.preventDefault();\n        this.navigate(event, data);\n        break;\n        \n      case KeyCode.Spacebar:\n        event.preventDefault();\n        this.selectionService.strategy.toggle(data, true);\n        break;\n\n    }\n  }\n/**\n * Override the standard toggle function to store or clear the\n * most recently selected item\n * @param {?} data\n * @param {?=} activate\n * @return {?}\n */\ntoggle(data: any, activate: boolean = false): void {\n    super.toggle(data);\n\n    // store or clear the selection\n    this.selectionService.isSelected(data) ? this.setSelectionStart(data) : this.clearSelection();\n\n    // if we want to keep the item activated then activate\n    if (activate) {\n      this.selectionService.activate(data);\n    }\n  }\n/**\n * Clear all other selected items and select only\n * the most recently selected item\n * @param {?} data\n * @return {?}\n */\nprivate singleSelect(data: any): void {\n\n    // deselect all other rows if neither modifier key is pressed\n    this.deselectAll();\n\n    // select the current row\n    this.select(data);\n\n    // store the current item as the selection start\n    this.setSelectionStart(data);\n  }\n/**\n * Handle multiple selection:\n * 1. If no start item selected - select it\n * 2. If a start item has been selected - select all in between\n * 3. If a start and end item have been selected clear the range and then select the new range\n * @param {?} data\n * @return {?}\n */\nprivate multipleSelect(data: any): void {\n\n    // if no selection currently exists then perform initial selection\n    if (!this._selection.start) {\n\n      // select the row\n      this.select(data);\n\n      // store the starting point\n      return this.setSelectionStart(data);\n    }\n\n    // if a multiple selection already took place - clear the previous selection\n    if (this._selection.start && this._selection.end) {\n      this.deselect(...this.getSelectedItems());\n    }\n\n    // set the new selection end point\n    this.setSelectionEnd(data);\n\n    // select all the items in the range\n    this.select(...this.getSelectedItems());\n  }\n/**\n * Set the selection start point. If there was previously a\n * selection end point then clear it as this is a new selection\n * @param {?} data\n * @return {?}\n */\nprivate setSelectionStart(data: any): void {\n    this._selection.start = data;\n    this._selection.end = null;\n\n    // activate the item\n    this.selectionService.activate(data);\n  }\n/**\n * Set the selection end point\n * @param {?} data\n * @return {?}\n */\nprivate setSelectionEnd(data: any): void {\n    this._selection.end = data;\n\n    // activate the item\n    this.selectionService.activate(data);\n  }\n/**\n * Clear both start and end selection points\n * @param {?=} deactivate\n * @return {?}\n */\nprivate clearSelection(deactivate: boolean = true): void {\n\n    // reset the selected item\n    this._selection = { start: null, end: null };\n\n    // remove the current active item\n    if (deactivate) {\n      this.selectionService.deactivate();\n    }\n  }\n/**\n * Determine all the items affected by the current selection.\n * Note that the end point may be above the start point so\n * we need to account for this.\n * @return {?}\n */\nprivate getSelectedItems(): any[] {\n\n    // get the latest dataset\n    const { dataset } = this.selectionService;\n\n    // get the indexes of the start and end point\n    const /** @type {?} */ startIdx = dataset.indexOf(this._selection.start);\n    const /** @type {?} */ endIdx = dataset.indexOf(this._selection.end);\n\n    // get the region of the array that is selected - note the endIdx may be before the startIdx so account for this\n    return dataset.slice(Math.min(startIdx, endIdx), Math.max(startIdx, endIdx) + 1);\n  }\n/**\n * Activate the sibling item when arrow keys are pressed\n * @param {?} event\n * @param {?} data\n * @return {?}\n */\nprivate navigate(event: KeyboardEvent, data: any): void {\n\n    // determine which modifier keys are pressed\n    const { ctrlKey, shiftKey } = event;\n\n    // if no modifier keys are pressed then deselect all and clear the selection\n    if (!ctrlKey && !shiftKey) {\n      this.deselectAll();\n      this.clearSelection(false);\n    }\n\n    // activate the sibling - if the up arrow is pressed then navigate to the previous sibling\n    const /** @type {?} */ sibling = this.selectionService.activateSibling(event.keyCode === KeyCode.UpArrow);\n\n    // if the shift key is pressed then we also want to toggle the state if the item\n    if (shiftKey && sibling) {\n\n      // if there is no current selection start then select the current row\n      if (!this._selection.start) {\n        this.multipleSelect(data);\n      }\n\n      this.multipleSelect(sibling);\n    }\n  }\n}\n\nfunction RowSelectionStrategy_tsickle_Closure_declarations() {\n/** @type {?} */\nRowSelectionStrategy.prototype._selection;\n}\n\n\nexport interface Selection {\n  start: any;\n  end: any;\n}\ntype KeyCode = number;\nlet KeyCode: any = {};\nKeyCode.UpArrow = 38;\nKeyCode.DownArrow = 40;\nKeyCode.Spacebar = 32;\nKeyCode[KeyCode.UpArrow] = \"UpArrow\";\nKeyCode[KeyCode.DownArrow] = \"DownArrow\";\nKeyCode[KeyCode.Spacebar] = \"Spacebar\";\n\n","import { SelectionService } from '../selection.service';\nexport class SelectionStrategy {\n/**\n * @param {?} selectionService\n */\nconstructor(protected selectionService: SelectionService) { }\n/**\n * @param {?} event\n * @param {?} data\n * @return {?}\n */\nmousedown(event: MouseEvent, data: any): void { }\n/**\n * @param {?} event\n * @param {?} data\n * @return {?}\n */\nclick(event: MouseEvent, data: any): void { }\n/**\n * @param {?} event\n * @param {?} data\n * @return {?}\n */\nkeydown(event: KeyboardEvent, data: any): void { }\n/**\n * Select the item - default behavior\n * @param {...?} data\n * @return {?}\n */\nselect(...data: any[]): void {\n    this.selectionService.select(...data);\n  }\n/**\n * Toggle the item's selected state - default behavior\n * @param {...?} data\n * @return {?}\n */\ntoggle(...data: any[]): void {\n    this.selectionService.toggle(...data);\n  }\n/**\n * Deselect the item - default behavior\n * @param {...?} data\n * @return {?}\n */\ndeselect(...data: any[]): void {\n    this.selectionService.deselect(...data);\n  }\n/**\n * Select all items - default behavior\n * @return {?}\n */\nselectAll(): void {\n    this.select(...this.selectionService.dataset);\n  }\n/**\n * Deselect all items - default behavior\n * @return {?}\n */\ndeselectAll(): void {\n    this.deselect(...this.selectionService.dataset);\n  }\n/**\n * @return {?}\n */\ndestroy(): void { }\n}\n\nfunction SelectionStrategy_tsickle_Closure_declarations() {\n/** @type {?} */\nSelectionStrategy.prototype.selectionService;\n}\n\n","import { NgModule } from '@angular/core';\nimport { LayoutSwitcherDirective } from './layout-switcher.directive';\nimport { LayoutSwitcherItemDirective } from './layout-switcher-item.directive';\nimport { ResizeModule } from '../resize/index';\n\nconst /** @type {?} */ DECLARATIONS = [\n    LayoutSwitcherDirective,\n    LayoutSwitcherItemDirective\n];\nexport class LayoutSwitcherModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        ResizeModule\n    ],\n    exports: DECLARATIONS,\n    declarations: DECLARATIONS,\n    providers: [],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction LayoutSwitcherModule_tsickle_Closure_declarations() {\n/** @type {?} */\nLayoutSwitcherModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nLayoutSwitcherModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ElementRef, QueryList, ContentChildren, Input, AfterContentInit, ViewContainerRef, OnChanges, SimpleChanges } from '@angular/core';\nimport { ResizeService } from '../resize/index';\nimport { LayoutSwitcherItemDirective } from './layout-switcher-item.directive';\nexport class LayoutSwitcherDirective implements AfterContentInit, OnChanges {\n\n     group: string;\nprivate _layouts: QueryList<LayoutSwitcherItemDirective>;\nprivate _width: number;\nprivate _activeLayout: LayoutSwitcherItemDirective;\n/**\n * @param {?} _elementRef\n * @param {?} resizeService\n * @param {?} _viewContainerRef\n */\nconstructor(private _elementRef: ElementRef, resizeService: ResizeService,\nprivate _viewContainerRef: ViewContainerRef) {\n\n        // watch for changes to the container size\n        resizeService.addResizeListener(_elementRef.nativeElement).subscribe(event => {\n            this._width = event.width;\n\n            // render the appropriate layout\n            this.updateActiveLayout();\n        });\n    }\n/**\n * @param {?} changes\n * @return {?}\n */\nngOnChanges(changes: SimpleChanges): void {\n\n        // if the active group has changed then render the appropriate layout\n        if (changes.group.currentValue !== changes.group.previousValue) {\n            this.updateActiveLayout();\n        }\n    }\n/**\n * @return {?}\n */\ngetActiveLayout(): LayoutSwitcherItemDirective | null {\n\n        // if there are currently no layouts then do nothing\n        if (!this._layouts) {\n            return null;\n        }\n\n        // otherwise find layouts that match the active group and that meet the constraints\n        return this._layouts.filter(layout => this.group === layout.getConfig().group).find(layout => {\n\n            let /** @type {?} */ minWidth = layout.getConfig().minWidth || 0;\n            let /** @type {?} */ maxWidth = layout.getConfig().maxWidth || Infinity;\n\n            return this._width >= minWidth && this._width < maxWidth;\n        });\n    }\n/**\n * @return {?}\n */\nupdateActiveLayout(): void {\n\n        // get the layout that should be shown\n        let /** @type {?} */ layout = this.getActiveLayout();\n\n        // check if we are currently showing the layout\n        if (this._activeLayout === layout) {\n            return;\n        }\n\n        // remove the current layout\n        if (this._activeLayout) {\n            this._activeLayout.deactivate();\n        }\n\n        // store the new active layout\n        this._activeLayout = layout;\n\n        // if there is an active layout then activate\n        if (this._activeLayout) {\n            this._activeLayout.activate();\n        }\n    }\n/**\n * @return {?}\n */\nngAfterContentInit(): void {\n\n        // store the initial current element width\n        this._width = this._elementRef.nativeElement.offsetWidth;\n\n        // render the appropriate layout - need a delay as Angular doesn't like changes like this in these lifecycle hooks\n        requestAnimationFrame(this.updateActiveLayout.bind(this));\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: '[uxLayoutSwitcher]'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: ResizeService, },\n{type: ViewContainerRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'group': [{ type: Input },],\n'_layouts': [{ type: ContentChildren, args: [LayoutSwitcherItemDirective, ] },],\n};\n}\n\nfunction LayoutSwitcherDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nLayoutSwitcherDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nLayoutSwitcherDirective.ctorParameters;\n/** @type {?} */\nLayoutSwitcherDirective.propDecorators;\n/** @type {?} */\nLayoutSwitcherDirective.prototype.group;\n/** @type {?} */\nLayoutSwitcherDirective.prototype._layouts;\n/** @type {?} */\nLayoutSwitcherDirective.prototype._width;\n/** @type {?} */\nLayoutSwitcherDirective.prototype._activeLayout;\n/** @type {?} */\nLayoutSwitcherDirective.prototype._elementRef;\n/** @type {?} */\nLayoutSwitcherDirective.prototype._viewContainerRef;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, Input, TemplateRef, SimpleChanges, ViewContainerRef, EmbeddedViewRef } from '@angular/core';\nexport class LayoutSwitcherItemDirective {\nprivate _config: LayoutSwitcherItem;\nprivate _embeddedView: EmbeddedViewRef<any>;\n/**\n * @param {?} _templateRef\n * @param {?} _viewContainerRef\n */\nconstructor(private _templateRef: TemplateRef<any>,\nprivate _viewContainerRef: ViewContainerRef) { }\n/**\n * @return {?}\n */\ngetLayout(): TemplateRef<any> {\n        return this._templateRef;\n    }\n/**\n * @return {?}\n */\ngetConfig(): LayoutSwitcherItem {\n        return this._config;\n    }\n/**\n * @return {?}\n */\nactivate(): void {\n        this._embeddedView = this._viewContainerRef.createEmbeddedView(this._templateRef);\n    }\n/**\n * @return {?}\n */\ndeactivate(): void {\n        let /** @type {?} */ index = this._viewContainerRef.indexOf(this._embeddedView);\n        this._viewContainerRef.remove(index);\n        this._embeddedView = null;\n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: '[uxLayoutSwitcherItem]'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: TemplateRef, },\n{type: ViewContainerRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'_config': [{ type: Input, args: ['uxLayoutSwitcherItem', ] },],\n};\n}\n\nfunction LayoutSwitcherItemDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nLayoutSwitcherItemDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nLayoutSwitcherItemDirective.ctorParameters;\n/** @type {?} */\nLayoutSwitcherItemDirective.propDecorators;\n/** @type {?} */\nLayoutSwitcherItemDirective.prototype._config;\n/** @type {?} */\nLayoutSwitcherItemDirective.prototype._embeddedView;\n/** @type {?} */\nLayoutSwitcherItemDirective.prototype._templateRef;\n/** @type {?} */\nLayoutSwitcherItemDirective.prototype._viewContainerRef;\n}\n\n\nexport interface LayoutSwitcherItem {\n    group?: string;\n    minWidth?: number;\n    maxWidth?: number;\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { HoverActionContainerDirective } from './hover-action-container.directive';\nimport { HoverActionDirective } from './hover-action.directive';\n\nconst /** @type {?} */ DECLARATIONS = [\n    HoverActionDirective,\n    HoverActionContainerDirective\n];\nexport class HoverActionModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    exports: DECLARATIONS,\n    declarations: DECLARATIONS\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction HoverActionModule_tsickle_Closure_declarations() {\n/** @type {?} */\nHoverActionModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nHoverActionModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ElementRef, HostListener, OnDestroy, Input } from '@angular/core';\nimport { HoverActionService } from './hover-action.service';\nimport { Subscription } from 'rxjs/Subscription';\nexport class HoverActionDirective implements OnDestroy {\n\n     tabindex: number = 1;\n    active: boolean = false;\n    focused: boolean = false;\nprivate active$: Subscription;\n/**\n * @param {?} _elementRef\n * @param {?} _hoverActionService\n */\nconstructor(private _elementRef: ElementRef,\nprivate _hoverActionService: HoverActionService) {\n\n        // register the action\n        this._hoverActionService.register(this);\n\n        // watch for changes to the activeness of the container\n        this.active$ = this._hoverActionService.active.subscribe(active => this.active = active);\n    }\n/**\n * @return {?}\n */\nngOnDestroy(): void {\n        this._hoverActionService.unregister(this);\n        this.active$.unsubscribe();\n    }\n/**\n * @return {?}\n */\nfocus(): void {\n        this._elementRef.nativeElement.focus();\n    }\n/**\n * @return {?}\n */\nonFocus(): void {\n        this.focused = true;\n        this._hoverActionService.updateVisibility();\n    }\n/**\n * @return {?}\n */\nonBlur(): void {\n        this.focused = false;\n        this._hoverActionService.updateVisibility();\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nprevious(event: MouseEvent): void {\n        event.stopPropagation();        \n        this._hoverActionService.previous();\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nnext(event: MouseEvent): void {\n        event.stopPropagation();\n        this._hoverActionService.next();\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: '[uxHoverAction]',\n    host: {\n        '[class.hover-action-active]': 'active',\n        '[class.hover-action-focused]': 'focused',\n        '[tabindex]': 'tabindex'\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: HoverActionService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'tabindex': [{ type: Input },],\n'onFocus': [{ type: HostListener, args: ['focus', ] },],\n'onBlur': [{ type: HostListener, args: ['blur', ] },],\n'previous': [{ type: HostListener, args: ['keydown.arrowleft', ['$event'], ] },],\n'next': [{ type: HostListener, args: ['keydown.arrowright', ['$event'], ] },],\n};\n}\n\nfunction HoverActionDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nHoverActionDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nHoverActionDirective.ctorParameters;\n/** @type {?} */\nHoverActionDirective.propDecorators;\n/** @type {?} */\nHoverActionDirective.prototype.tabindex;\n/** @type {?} */\nHoverActionDirective.prototype.active;\n/** @type {?} */\nHoverActionDirective.prototype.focused;\n/** @type {?} */\nHoverActionDirective.prototype.active$;\n/** @type {?} */\nHoverActionDirective.prototype._elementRef;\n/** @type {?} */\nHoverActionDirective.prototype._hoverActionService;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ContentChildren, QueryList, HostListener, ElementRef, OnDestroy, Input } from '@angular/core';\nimport { HoverActionDirective } from './hover-action.directive';\nimport { HoverActionService } from './hover-action.service';\nimport { Subscription } from 'rxjs/Subscription';\nexport class HoverActionContainerDirective implements OnDestroy {\n\n     tabindex: number = 0;\n    active: boolean = false;\nprivate active$: Subscription;\n/**\n * @param {?} _elementRef\n * @param {?} _hoverActionService\n */\nconstructor(private _elementRef: ElementRef,\nprivate _hoverActionService: HoverActionService) {\n        // register the container element with the service\n        this._hoverActionService.setContainer(this);\n        \n        // apply a class based on the active state of the container and it's actions\n        this.active$ = this._hoverActionService.active.subscribe(active => this.active = active);\n    }\n/**\n * @return {?}\n */\nngOnDestroy(): void {\n        this.active$.unsubscribe();\n    }\n/**\n * @return {?}\n */\nfocus(): void {\n        this._elementRef.nativeElement.focus();\n    }\n/**\n * @return {?}\n */\nonFocus(): void {\n        this._hoverActionService.setFocusState(true);\n    }\n/**\n * @return {?}\n */\nonBlur(): void {\n        this._hoverActionService.setFocusState(false);\n    }\n/**\n * @return {?}\n */\nonHover(): void {\n        this._hoverActionService.setHoverState(true);\n    }\n/**\n * @return {?}\n */\nonLeave(): void {\n        this._hoverActionService.setHoverState(false);\n    }\n/**\n * @return {?}\n */\nnext(): void {\n        this._hoverActionService.next();\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: '[uxHoverActionContainer]',\n    providers: [HoverActionService],\n    host: {\n        '[class.hover-action-container-active]': 'active',\n        '[tabindex]': 'tabindex'\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: HoverActionService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'tabindex': [{ type: Input },],\n'focus': [{ type: HostListener, args: ['click', ] },],\n'onFocus': [{ type: HostListener, args: ['focus', ] },],\n'onBlur': [{ type: HostListener, args: ['blur', ] },],\n'onHover': [{ type: HostListener, args: ['mouseenter', ] },],\n'onLeave': [{ type: HostListener, args: ['mouseleave', ] },],\n'next': [{ type: HostListener, args: ['keydown.arrowright', ] },],\n};\n}\n\nfunction HoverActionContainerDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nHoverActionContainerDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nHoverActionContainerDirective.ctorParameters;\n/** @type {?} */\nHoverActionContainerDirective.propDecorators;\n/** @type {?} */\nHoverActionContainerDirective.prototype.tabindex;\n/** @type {?} */\nHoverActionContainerDirective.prototype.active;\n/** @type {?} */\nHoverActionContainerDirective.prototype.active$;\n/** @type {?} */\nHoverActionContainerDirective.prototype._elementRef;\n/** @type {?} */\nHoverActionContainerDirective.prototype._hoverActionService;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs/Subject';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { HoverActionDirective } from './hover-action.directive';\nimport { HoverActionContainerDirective } from './hover-action-container.directive';\nexport class HoverActionService {\n\n    active: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\nprivate _container: HoverActionContainerDirective;\nprivate _focused: boolean = false;\nprivate _hovered: boolean = false;\nprivate _actions: HoverActionDirective[] = [];\n/**\n * @param {?} action\n * @return {?}\n */\nregister(action: HoverActionDirective): void {\n        this._actions.push(action);\n    }\n/**\n * @param {?} action\n * @return {?}\n */\nunregister(action: HoverActionDirective): void {\n        this._actions = this._actions.filter(actn => actn !== action);\n    }\n/**\n * @param {?} container\n * @return {?}\n */\nsetContainer(container: HoverActionContainerDirective): void {\n        this._container = container;\n    }\n/**\n * @param {?} focus\n * @return {?}\n */\nsetFocusState(focus: boolean): void {\n        this._focused = focus;\n        this.updateVisibility();\n    }\n/**\n * @param {?} hover\n * @return {?}\n */\nsetHoverState(hover: boolean): void {\n        this._hovered = hover;\n        this.updateVisibility();\n    }\n/**\n * @return {?}\n */\nnext(): void {\n\n        // if container has focus then focus the first hover action\n        if (this.containerHasFocus()) {\n            this.focusActionAtIndex(0);\n            return this.updateVisibility();\n        }\n\n        // if a hover action has focus then focus the next action\n        if (this.actionHasFocus()) {\n            let /** @type {?} */ index = this.getFocusedActionIndex() + 1;\n            this.focusActionAtIndex(index);\n            this.updateVisibility();\n        }\n    }\n/**\n * @return {?}\n */\nprevious(): void {\n        // if a hover action has focus then focus the previous action\n        if (this.actionHasFocus()) {\n            let /** @type {?} */ index = this.getFocusedActionIndex() - 1;\n\n            if (index >= 0) {\n                this.focusActionAtIndex(index);\n            } else {\n                this._container.focus();\n            }\n        }\n\n        this.updateVisibility();\n    }\n/**\n * @return {?}\n */\nupdateVisibility(): void {\n        this.active.next(this._focused || this._hovered || this.actionHasFocus());\n    }\n/**\n * @param {?} index\n * @return {?}\n */\nprivate focusActionAtIndex(index: number): void {\n        if (index >= 0 && index < this._actions.length) {\n            this._actions[index].focus();\n        }\n    }\n/**\n * @return {?}\n */\nprivate getFocusedActionIndex(): number {\n        return this._actions.findIndex(action => action === this.getFocusedAction());\n    }\n/**\n * @return {?}\n */\nprivate containerHasFocus(): boolean {\n        return this._focused;\n    }\n/**\n * @return {?}\n */\nprivate actionHasFocus(): boolean {\n        return !!this.getFocusedAction();\n    }\n/**\n * @return {?}\n */\nprivate getFocusedAction(): HoverActionDirective {\n        return this._actions.find(action => action.focused);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction HoverActionService_tsickle_Closure_declarations() {\n/** @type {?} */\nHoverActionService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nHoverActionService.ctorParameters;\n/** @type {?} */\nHoverActionService.prototype.active;\n/** @type {?} */\nHoverActionService.prototype._container;\n/** @type {?} */\nHoverActionService.prototype._focused;\n/** @type {?} */\nHoverActionService.prototype._hovered;\n/** @type {?} */\nHoverActionService.prototype._actions;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { HelpCenterItemDirective } from './help-center-item.directive';\nimport { HelpCenterService } from './help-center.service';\nexport class HelpCenterModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [],\n    exports: [HelpCenterItemDirective],\n    declarations: [HelpCenterItemDirective],\n    providers: [HelpCenterService],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction HelpCenterModule_tsickle_Closure_declarations() {\n/** @type {?} */\nHelpCenterModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nHelpCenterModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, Input, OnInit, OnDestroy } from '@angular/core';\nimport { HelpCenterService, HelpCenterItem } from './help-center.service';\nexport class HelpCenterItemDirective implements OnInit, OnDestroy {\n\n     uxHelpCenterItem: HelpCenterItem;\n/**\n * @param {?} _helpCenterService\n */\nconstructor(private _helpCenterService: HelpCenterService) { }\n/**\n * @return {?}\n */\nngOnInit(): void {\n\n        // register the item in the service\n        this._helpCenterService.registerItem(this.uxHelpCenterItem);\n    }\n/**\n * @return {?}\n */\nngOnDestroy(): void {\n        // remove this item when it is destroyed\n        this._helpCenterService.unregisterItem(this.uxHelpCenterItem);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{ selector: '[uxHelpCenterItem]' }, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: HelpCenterService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'uxHelpCenterItem': [{ type: Input },],\n};\n}\n\nfunction HelpCenterItemDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nHelpCenterItemDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nHelpCenterItemDirective.ctorParameters;\n/** @type {?} */\nHelpCenterItemDirective.propDecorators;\n/** @type {?} */\nHelpCenterItemDirective.prototype.uxHelpCenterItem;\n/** @type {?} */\nHelpCenterItemDirective.prototype._helpCenterService;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nexport class HelpCenterService {\n\n    items: BehaviorSubject<HelpCenterItem[]> = new BehaviorSubject<HelpCenterItem[]>([]);\n/**\n * @param {?} item\n * @return {?}\n */\nregisterItem(item: HelpCenterItem): void {\n\n        // get the current items\n        let /** @type {?} */ items = this.items.getValue();\n\n        // add the new item to the list\n        items.push(item);\n\n        // update the observable\n        this.items.next(items);\n    }\n/**\n * @param {?} item\n * @return {?}\n */\nunregisterItem(item: HelpCenterItem): void {\n\n        // get the current items\n        let /** @type {?} */ items = this.items.getValue();\n\n        // remove the item being unregistered\n        items = items.filter(itm => itm !== item);\n\n        // update the observable\n        this.items.next(items);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction HelpCenterService_tsickle_Closure_declarations() {\n/** @type {?} */\nHelpCenterService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nHelpCenterService.ctorParameters;\n/** @type {?} */\nHelpCenterService.prototype.items;\n}\n\n\nexport interface HelpCenterItem {\n    icon?: string;\n    title: string;\n    select?: () => void;\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\n\nimport { FloatLabelDirective } from './float-label.directive';\nexport class FloatLabelModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [],\n    exports: [FloatLabelDirective],\n    declarations: [FloatLabelDirective],\n    providers: [],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction FloatLabelModule_tsickle_Closure_declarations() {\n/** @type {?} */\nFloatLabelModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFloatLabelModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, Input, OnInit, TemplateRef, Renderer2, OnDestroy, HostBinding, OnChanges, ElementRef } from '@angular/core';\nexport class FloatLabelDirective implements OnInit, OnChanges, OnDestroy {\n\n    \n    input: HTMLInputElement;\n\n    \n    value: any;\n\n    \n    mode: 'focus' | 'input' = 'focus';\n\n    \n    raised: boolean = false;\nprivate _focused = false;\nprivate _eventHandles: any[] = [];\n/**\n * @param {?} _elementRef\n * @param {?} _renderer\n */\nconstructor(private _elementRef: ElementRef,\nprivate _renderer: Renderer2) { }\n/**\n * @return {?}\n */\nngOnInit(): void {\n        this._eventHandles.push(\n            this._renderer.listen(this.input, 'focus', this.inputFocus.bind(this)),\n            this._renderer.listen(this.input, 'blur', this.inputBlur.bind(this)),\n            this._renderer.listen(this.input, 'input', this.inputChange.bind(this))\n        );\n\n        // Check initial input value\n        this.raised = this.hasText();\n\n        // Ensure that the `for` attribute is set\n        if (!this._elementRef.nativeElement.getAttribute('for') && this.input.getAttribute('id')) {\n            this._renderer.setAttribute(this._elementRef.nativeElement, 'for', this.input.getAttribute('id'));\n        }\n    }\n/**\n * @return {?}\n */\nngOnChanges(): void {\n        if (!(this.mode === 'focus' && this._focused)) {\n            this.raised = this.hasText();\n        }\n    }\n/**\n * @return {?}\n */\nngOnDestroy(): void {\n        // Unsubscribe event handles\n        this._eventHandles.forEach((eventHandle) => eventHandle());\n    }\n/**\n * @return {?}\n */\nprivate hasText(): boolean {\n        if (this.value === undefined) {\n            return !!this.input.value;\n        }\n        return !!this.value;\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nprivate inputFocus(event: Event): void {\n        if (this.mode === 'focus') {\n            this._focused = true;\n            this.raised = true;\n        }\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nprivate inputBlur(event: Event): void {\n        if (this.mode === 'focus') {\n            this._focused = false;\n            this.raised = this.hasText();\n        }\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nprivate inputChange(event: Event): void {\n        if (this.mode === 'input') {\n            this.raised = this.hasText();\n        }\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: '[uxFloatLabel]',\n    host: {\n        'class': 'ux-float-label'\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Renderer2, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'input': [{ type: Input, args: ['uxFloatLabel', ] },],\n'value': [{ type: Input },],\n'mode': [{ type: Input },],\n'raised': [{ type: HostBinding, args: ['class.ux-float-label-raised', ] },],\n};\n}\n\nfunction FloatLabelDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nFloatLabelDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFloatLabelDirective.ctorParameters;\n/** @type {?} */\nFloatLabelDirective.propDecorators;\n/** @type {?} */\nFloatLabelDirective.prototype.input;\n/** @type {?} */\nFloatLabelDirective.prototype.value;\n/** @type {?} */\nFloatLabelDirective.prototype.mode;\n/** @type {?} */\nFloatLabelDirective.prototype.raised;\n/** @type {?} */\nFloatLabelDirective.prototype._focused;\n/** @type {?} */\nFloatLabelDirective.prototype._eventHandles;\n/** @type {?} */\nFloatLabelDirective.prototype._elementRef;\n/** @type {?} */\nFloatLabelDirective.prototype._renderer;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\n\nimport { FixedHeaderTableDirective } from './fixed-header-table.directive';\nexport class FixedHeaderTableModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    exports: [FixedHeaderTableDirective],\n    declarations: [FixedHeaderTableDirective]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction FixedHeaderTableModule_tsickle_Closure_declarations() {\n/** @type {?} */\nFixedHeaderTableModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFixedHeaderTableModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ElementRef, OnInit, Renderer2, Input, Output, EventEmitter } from '@angular/core';\nexport class FixedHeaderTableDirective implements OnInit {\n\n   tableHeight: number | string;\n   tablePaging: EventEmitter<number> = new EventEmitter<number>();\nprivate _tableHead: HTMLElement;\nprivate _tableBody: HTMLElement;\n/**\n * @param {?} _elementRef\n * @param {?} _renderer\n */\nconstructor(private _elementRef: ElementRef,\nprivate _renderer: Renderer2) { }\n/**\n * @return {?}\n */\nngOnInit(): void {\n\n    // add class to the table\n    this._renderer.addClass(this._elementRef.nativeElement, 'ux-fixed-header-table');\n\n    // locate the important elements\n    this._tableHead = this._elementRef.nativeElement.querySelector('thead');\n    this._tableBody = this._elementRef.nativeElement.querySelector('tbody');\n\n    // bind to scroll events on the table body\n    this._renderer.listen(this._tableBody, 'scroll', this.onScroll.bind(this));\n\n    // resize the table header to account for scrollbar\n    this.setLayout();\n\n    // trigger the loading of the first page\n    this.tablePaging.emit();\n  }\n/**\n * Get the table element\n * Primarily used by column width directive\n * @return {?}\n */\ngetTable(): HTMLTableElement {\n    return this._elementRef.nativeElement;\n  }\n/**\n * Handle scroll events\n * @param {?} event\n * @return {?}\n */\nprivate onScroll(event: MouseEvent): void {\n\n    // determine if we are scrolled to the bottom and if so load the next page\n    if (this._tableBody.scrollTop === (this._tableBody.scrollHeight - this._tableBody.offsetHeight)) {\n      this.tablePaging.emit();\n    }\n  }\n/**\n * Update the size of the table header to account for the scrollbar.\n * This is important to keep the columns aligned\n * @return {?}\n */\nprivate setLayout(): void {\n\n    // calculate the size of the scrollbar\n    const /** @type {?} */ scrollbar = this._tableBody.offsetWidth - this._tableBody.clientWidth;\n\n    // add padding to the header to account for this\n    this._renderer.setStyle(this._tableHead, 'padding-right', scrollbar + 'px');\n\n    // set the desired height of the table body\n    this._renderer.setStyle(this._tableBody, 'height', typeof this.tableHeight === 'number' ? `${this.tableHeight}px` : this.tableHeight);\n  }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[uxFixedHeaderTable]'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Renderer2, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'tableHeight': [{ type: Input },],\n'tablePaging': [{ type: Output },],\n};\n}\n\nfunction FixedHeaderTableDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nFixedHeaderTableDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFixedHeaderTableDirective.ctorParameters;\n/** @type {?} */\nFixedHeaderTableDirective.propDecorators;\n/** @type {?} */\nFixedHeaderTableDirective.prototype.tableHeight;\n/** @type {?} */\nFixedHeaderTableDirective.prototype.tablePaging;\n/** @type {?} */\nFixedHeaderTableDirective.prototype._tableHead;\n/** @type {?} */\nFixedHeaderTableDirective.prototype._tableBody;\n/** @type {?} */\nFixedHeaderTableDirective.prototype._elementRef;\n/** @type {?} */\nFixedHeaderTableDirective.prototype._renderer;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\n\nimport { AutoGrowDirective } from './auto-grow.directive';\nexport class AutoGrowModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    exports: [AutoGrowDirective],\n    declarations: [AutoGrowDirective]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction AutoGrowModule_tsickle_Closure_declarations() {\n/** @type {?} */\nAutoGrowModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nAutoGrowModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { AfterViewInit, Directive, ElementRef, HostListener, Renderer2 } from '@angular/core';\nexport class AutoGrowDirective implements AfterViewInit {\n/**\n * @param {?} _elementRef\n * @param {?} _renderer\n */\nconstructor(private _elementRef: ElementRef,\nprivate _renderer: Renderer2) {\n    // ensure this is a textarea or else throw error\n    if (_elementRef.nativeElement.tagName.toLowerCase() !== 'textarea') {\n      throw new Error('uxAutoGrow directive can only be used on <textarea> elements.');\n    }\n  }\n/**\n * @return {?}\n */\nngAfterViewInit(): void {\n    this.update();\n  }\n/**\n * @return {?}\n */\nupdate(): void {\n\n    // get computed style of element\n    const { paddingTop, paddingBottom } = getComputedStyle(this._elementRef.nativeElement);\n\n    // perform sizing\n    this._renderer.setStyle(this._elementRef.nativeElement, 'overflowY', 'hidden');\n    this._renderer.setStyle(this._elementRef.nativeElement, 'height', 'auto');\n\n    // get the new total height and element height\n    const { scrollHeight } = this._elementRef.nativeElement;\n    const { maxHeight } = getComputedStyle(this._elementRef.nativeElement);\n\n    // determine what the maximum allowed height is\n    const /** @type {?} */ maximum = !isNaN(parseFloat(maxHeight)) ? parseFloat(maxHeight) : Infinity;\n\n    // if there is a max height specifed we want to show the scrollbars\n    if (maximum < scrollHeight) {\n      this._renderer.setStyle(this._elementRef.nativeElement, 'overflowY', 'auto');\n      this._renderer.setStyle(this._elementRef.nativeElement, 'height', maximum + 'px');\n    } else {\n      this._renderer.setStyle(this._elementRef.nativeElement, 'height', scrollHeight + 'px');\n    }\n  }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[uxAutoGrow]'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Renderer2, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'update': [{ type: HostListener, args: ['input', ] },],\n};\n}\n\nfunction AutoGrowDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nAutoGrowDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nAutoGrowDirective.ctorParameters;\n/** @type {?} */\nAutoGrowDirective.propDecorators;\n/** @type {?} */\nAutoGrowDirective.prototype._elementRef;\n/** @type {?} */\nAutoGrowDirective.prototype._renderer;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { VirtualScrollComponent } from './virtual-scroll.component';\nimport { ResizeModule } from '../../directives/resize/index';\nimport { VirtualScrollLoadingDirective } from './directives/virtual-scroll-loading.directive';\nimport { VirtualScrollLoadButtonDirective } from './directives/virtual-scroll-load-button.directive';\nimport { VirtualScrollCellDirective } from './directives/virtual-scroll-cell.directive';\n\nconst /** @type {?} */ DECLARATIONS = [\n    VirtualScrollComponent,\n    VirtualScrollLoadingDirective,\n    VirtualScrollLoadButtonDirective,\n    VirtualScrollCellDirective\n];\nexport class VirtualScrollModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        CommonModule,\n        ResizeModule\n    ],\n    exports: DECLARATIONS,\n    declarations: DECLARATIONS\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction VirtualScrollModule_tsickle_Closure_declarations() {\n/** @type {?} */\nVirtualScrollModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nVirtualScrollModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, OnInit, EventEmitter, Output, Input, HostListener, ElementRef, AfterContentInit, ContentChild, TemplateRef, OnDestroy, SimpleChanges } from '@angular/core';\nimport { ResizeService } from '../../directives/resize/index';\nimport { VirtualScrollLoadingDirective } from './directives/virtual-scroll-loading.directive';\nimport { VirtualScrollLoadButtonDirective } from './directives/virtual-scroll-load-button.directive';\nimport { VirtualScrollCellDirective } from './directives/virtual-scroll-cell.directive';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { Observable } from 'rxjs/Observable';\nimport { Subscription } from 'rxjs/Subscription';\nexport class VirtualScrollComponent implements OnInit, AfterContentInit, OnDestroy {\n\n     collection: Observable<any[]> = Observable.create();\n     cellHeight: number;\n     loadOnScroll: boolean = true;\n\n     loading: EventEmitter<number> = new EventEmitter<number>();\n\n     cellTemplate: TemplateRef<any>;\n     loadingIndicatorTemplate: TemplateRef<any>;\n     loadButtonTemplate: TemplateRef<any>;\n\n    cells: BehaviorSubject<any[]> = new BehaviorSubject([]);\n    scrollTop: number = 0;\n    isLoading: boolean = false;\n    pageNumber: number = 0;\n    data: any[] = [];\n    loadingComplete: boolean = false;\nprivate _subscription: Subscription;\nprivate _height: number;\n/**\n * @param {?} _elementRef\n * @param {?} resizeService\n */\nconstructor(private _elementRef: ElementRef, resizeService: ResizeService) {\n\n        // watch for any future changes to size\n        resizeService.addResizeListener(_elementRef.nativeElement).subscribe(event => this._height = event.height);\n    }\n/**\n * @return {?}\n */\nngOnInit() {\n\n        if (!this.cellHeight) {\n            throw new Error('Virtual Scroll Component requires \"cellHeight\" property to be defined.');\n        }\n\n        // subscribe to the collection\n        this.setupObservable();\n\n        // load the first page of data\n        this.loadNextPage();\n    }\n/**\n * @return {?}\n */\nngAfterContentInit(): void {\n        // re-render cells now that we can display any loading indicator or loading button\n        this.renderCells();\n    }\n/**\n * @param {?} changes\n * @return {?}\n */\nngOnChanges(changes: SimpleChanges): void {\n        if (changes.collection && changes.collection.currentValue !== changes.collection.previousValue && !changes.collection.isFirstChange()) {\n            this.setupObservable();\n            this.reset();\n        }\n    }\n/**\n * @return {?}\n */\nngOnDestroy(): void {\n        this._subscription.unsubscribe();\n    }\n/**\n * @return {?}\n */\nsetupObservable(): void {\n\n        // if there is a current subscription, unsubscribe\n        if (this._subscription && this._subscription.unsubscribe) {\n            this._subscription.unsubscribe();\n        }\n\n        this._subscription = this.collection.subscribe(collection => {\n            this.data.push(...collection);\n            this.renderCells();\n            this.isLoading = false;\n        }, null, () => {\n            this.loadingComplete = true;\n        });\n    }\n/**\n * @return {?}\n */\nrenderCells(): void {\n        this.cells.next(this.getVisibleCells());\n\n        if (this.loadOnScroll && !this.isLoading && !this.loadingComplete) {\n            const /** @type {?} */ remainingScroll = this._elementRef.nativeElement.scrollHeight - (this._elementRef.nativeElement.scrollTop + this._elementRef.nativeElement.clientHeight);\n\n            // if the current cells take up less than the height of the component then load the next page\n            if (remainingScroll <= this._elementRef.nativeElement.clientHeight) {\n                this.loadNextPage();\n            }\n        }\n    }\n/**\n * @return {?}\n */\ngetVisibleCells(): any[] {\n\n        // store the initial element height\n        if (!this._height) {\n            this._height = this._elementRef.nativeElement.offsetHeight;\n        }\n\n        // perform some calculations\n        const /** @type {?} */ scrollTop = this._elementRef.nativeElement.scrollTop;\n        const /** @type {?} */ startCell = Math.floor(scrollTop / this.cellHeight);\n        const /** @type {?} */ endCell = Math.ceil(this._height / this.cellHeight) + 1;\n\n        // update the scroll position\n        this.scrollTop = scrollTop - (scrollTop % this.cellHeight);\n\n        // return a sublist of items visible on the screen\n        return this.data.slice(startCell, startCell + endCell);\n    }\n/**\n * @return {?}\n */\ngetTotalHeight(): number {\n        return this.cellHeight * this.data.length;\n    }\n/**\n * @return {?}\n */\nloadNextPage(): void {\n        this.isLoading = true;\n        this.loading.next(this.pageNumber);\n        this.pageNumber++;\n    }\n/**\n * @return {?}\n */\nreset(): void {\n\n        // reset all values\n        this.scrollTop = 0;\n        this.data = [];\n        this._height = undefined;\n        this.pageNumber = 0;\n        this.loadingComplete = false;\n\n        // set scroll position\n        this._elementRef.nativeElement.scrollTop = 0;\n\n        // clear the current cells\n        this.renderCells();\n\n        // reload first page\n        this.loadNextPage();\n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-virtual-scroll',\n    template: `\n      <div class=\"virtual-scroll-content-height\" [style.height.px]=\"getTotalHeight()\"></div>\n      <div class=\"virtual-scroll-content\" [style.transform]=\"'translateY(' + scrollTop + 'px)'\">\n\n          <!-- Virtually Render Cells -->\n          <ng-container *ngFor=\"let cell of cells | async\">\n              <ng-container *ngTemplateOutlet=\"cellTemplate; context: { cell: cell }\"></ng-container>\n          </ng-container>\n\n          <!-- Loading Indicator -->\n          <ng-container *ngIf=\"loadingIndicatorTemplate && isLoading\" [ngTemplateOutlet]=\"loadingIndicatorTemplate\"></ng-container>\n\n          <!-- Loading Button -->\n          <div class=\"virtual-scroll-load-button\" *ngIf=\"loadButtonTemplate && !loadOnScroll && !loadingComplete && !isLoading\" (click)=\"loadNextPage()\">\n              <ng-container *ngTemplateOutlet=\"loadButtonTemplate\"></ng-container>\n          </div>\n    \n      </div>\n    `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: ResizeService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'collection': [{ type: Input },],\n'cellHeight': [{ type: Input },],\n'loadOnScroll': [{ type: Input },],\n'loading': [{ type: Output },],\n'cellTemplate': [{ type: ContentChild, args: [VirtualScrollCellDirective, { read: TemplateRef }, ] },],\n'loadingIndicatorTemplate': [{ type: ContentChild, args: [VirtualScrollLoadingDirective, { read: TemplateRef }, ] },],\n'loadButtonTemplate': [{ type: ContentChild, args: [VirtualScrollLoadButtonDirective, { read: TemplateRef }, ] },],\n'renderCells': [{ type: HostListener, args: ['scroll', ] },],\n};\n}\n\nfunction VirtualScrollComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nVirtualScrollComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nVirtualScrollComponent.ctorParameters;\n/** @type {?} */\nVirtualScrollComponent.propDecorators;\n/** @type {?} */\nVirtualScrollComponent.prototype.collection;\n/** @type {?} */\nVirtualScrollComponent.prototype.cellHeight;\n/** @type {?} */\nVirtualScrollComponent.prototype.loadOnScroll;\n/** @type {?} */\nVirtualScrollComponent.prototype.loading;\n/** @type {?} */\nVirtualScrollComponent.prototype.cellTemplate;\n/** @type {?} */\nVirtualScrollComponent.prototype.loadingIndicatorTemplate;\n/** @type {?} */\nVirtualScrollComponent.prototype.loadButtonTemplate;\n/** @type {?} */\nVirtualScrollComponent.prototype.cells;\n/** @type {?} */\nVirtualScrollComponent.prototype.scrollTop;\n/** @type {?} */\nVirtualScrollComponent.prototype.isLoading;\n/** @type {?} */\nVirtualScrollComponent.prototype.pageNumber;\n/** @type {?} */\nVirtualScrollComponent.prototype.data;\n/** @type {?} */\nVirtualScrollComponent.prototype.loadingComplete;\n/** @type {?} */\nVirtualScrollComponent.prototype._subscription;\n/** @type {?} */\nVirtualScrollComponent.prototype._height;\n/** @type {?} */\nVirtualScrollComponent.prototype._elementRef;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive } from '@angular/core';\nexport class VirtualScrollCellDirective {\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{ \n    selector: '[uxVirtualScrollCell]' \n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction VirtualScrollCellDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nVirtualScrollCellDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nVirtualScrollCellDirective.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive } from '@angular/core';\nexport class VirtualScrollLoadButtonDirective { static decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: '[uxVirtualScrollLoadButton]' \n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction VirtualScrollLoadButtonDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nVirtualScrollLoadButtonDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nVirtualScrollLoadButtonDirective.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive } from '@angular/core';\nexport class VirtualScrollLoadingDirective { static decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{ \n    selector: '[uxVirtualScrollLoading]' \n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction VirtualScrollLoadingDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nVirtualScrollLoadingDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nVirtualScrollLoadingDirective.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { MediaPlayerComponent } from './media-player.component';\nimport { MediaPlayerTimelineExtensionComponent } from './extensions/timeline/timeline.component';\nimport { MediaPlayerBaseExtensionDirective } from './extensions/base-extension.directive';\nimport { MediaPlayerControlsExtensionComponent } from './extensions/controls/controls.component';\nimport { FrameExtractionModule } from '../../services/frame-extraction/frame-extraction.module';\nimport { AudioServiceModule } from '../../services/audio/index';\nimport { DurationPipeModule } from '../../pipes/duration/index';\nimport { FileSizePipeModule } from '../../pipes/file-size/index';\nimport { MediaPlayerService } from './media-player.service';\nimport { TooltipModule } from '../tooltip/index';\n\nconst /** @type {?} */ DECLARATIONS = [\n    MediaPlayerComponent,\n    MediaPlayerTimelineExtensionComponent,\n    MediaPlayerBaseExtensionDirective,\n    MediaPlayerControlsExtensionComponent\n];\nexport class MediaPlayerModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        CommonModule,\n        FrameExtractionModule,\n        TooltipModule,\n        AudioServiceModule,\n        DurationPipeModule,\n        FileSizePipeModule\n    ],\n    exports: DECLARATIONS,\n    declarations: DECLARATIONS,\n    providers: [MediaPlayerService]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction MediaPlayerModule_tsickle_Closure_declarations() {\n/** @type {?} */\nMediaPlayerModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMediaPlayerModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\n\nimport { FileSizePipe } from './file-size.pipe';\nexport class FileSizePipeModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    exports: [FileSizePipe],\n    declarations: [FileSizePipe]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction FileSizePipeModule_tsickle_Closure_declarations() {\n/** @type {?} */\nFileSizePipeModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFileSizePipeModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nexport class FileSizePipe implements PipeTransform {\n/**\n * @param {?} value\n * @return {?}\n */\ntransform(value: number): any {\n\n        // allow for async values\n        if (!value) {\n            return value;\n        }\n        \n        let /** @type {?} */ units = ['B', 'KB', 'MB', 'GB', 'TB'];\n\n        // calculate the which unit bracket the values should be a part of\n        let /** @type {?} */ idx = Math.floor(Math.log(value) / Math.log(1024));\n        let /** @type {?} */ formattedValue = value / Math.pow(1024, idx);\n        \n        return `${formattedValue.toFixed(2)} ${units[idx]}`;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Pipe, args: [{\n    name: 'fileSize'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction FileSizePipe_tsickle_Closure_declarations() {\n/** @type {?} */\nFileSizePipe.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFileSizePipe.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\n\nimport { DurationPipe } from './duration.pipe';\nexport class DurationPipeModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    exports: [DurationPipe],\n    declarations: [DurationPipe]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction DurationPipeModule_tsickle_Closure_declarations() {\n/** @type {?} */\nDurationPipeModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDurationPipeModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nexport class DurationPipe implements PipeTransform {\n/**\n * @param {?} seconds\n * @return {?}\n */\ntransform(seconds: number): any {\n\n        let /** @type {?} */ minutes = Math.floor(seconds / 60);\n        let /** @type {?} */ hours = Math.floor(minutes / 60);\n        let /** @type {?} */ days = Math.floor(hours / 24);\n\n        hours = hours - (days * 24);\n        minutes = minutes - (days * 24 * 60) - (hours * 60);\n        seconds = Math.floor(seconds - (days * 24 * 60 * 60) - (hours * 60 * 60) - (minutes * 60));\n\n        if (hours > 0) {\n            return `${this.pad(hours)}:${this.pad(minutes)}:${this.pad(seconds)}`;\n        } else {\n            return `${this.pad(minutes)}:${this.pad(seconds)}`;\n        }\n    }\n/**\n * @param {?} value\n * @return {?}\n */\npad(value: number): string {\n        if (value < 10) {\n            return `0${value}`;\n        }\n\n        return value.toString();\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Pipe, args: [{\n    name: 'duration'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction DurationPipe_tsickle_Closure_declarations() {\n/** @type {?} */\nDurationPipe.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDurationPipe.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, OnInit, HostListener, ElementRef, ViewChild } from '@angular/core';\nimport { MediaPlayerBaseExtensionDirective } from '../base-extension.directive';\nimport { Observable } from 'rxjs/Observable';\nimport'rxjs/add/observable/timer';\nexport class MediaPlayerControlsExtensionComponent extends MediaPlayerBaseExtensionDirective implements OnInit {\n\n    playing: boolean;\n    quietMode: boolean;\n    fullscreen: boolean = false;\n    volumeActive: boolean = false;\n    volumeDragging: boolean = false;\n\n     volumeIcon: ElementRef;\n     volumeSlider: ElementRef;\n     volumeContainer: ElementRef;\nprivate _volume: number = 50;\nprivate _previousVolume = 50;\n/**\n * @return {?}\n */\nget volume(): number {\n        return this._volume;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset volume(value: number) {\n\n        if (value === 0 && this._volume !== 0) {\n            this._previousVolume = this._volume;\n        }\n        \n        this._volume = Math.min(Math.max(value, 0), 100);\n        this.mediaPlayerService.volume = this._volume / 100;\n    }\n/**\n * @return {?}\n */\nngOnInit(): void {\n        this.mediaPlayerService.playEvent.subscribe(_ => this.playing = true);\n        this.mediaPlayerService.pauseEvent.subscribe(_ => this.playing = false);\n        this.mediaPlayerService.quietModeEvent.subscribe(quietMode => this.quietMode = quietMode);\n        this.mediaPlayerService.volumeChangeEvent.subscribe(volume => this.volume = volume * 100);\n        this.mediaPlayerService.initEvent.debounceTime(1).filter(init => init === true).subscribe(() => this.volume = this.mediaPlayerService.volume * 100);\n        this.mediaPlayerService.fullscreenEvent.subscribe(fullscreen => this.fullscreen = fullscreen);\n\n        let /** @type {?} */ mouseenter$ = Observable.fromEvent(this.volumeIcon.nativeElement, 'mouseenter');\n        let /** @type {?} */ mouseenterContainer$ = Observable.fromEvent(this.volumeContainer.nativeElement, 'mouseenter');\n        let /** @type {?} */ mouseleaveContainer$ = Observable.fromEvent(this.volumeContainer.nativeElement, 'mouseleave');\n\n        mouseenter$.subscribe(() => this.volumeActive = true);\n        mouseleaveContainer$.switchMap(() => Observable.timer(1500).takeUntil(mouseenterContainer$)).subscribe(() => this.volumeActive = false);\n    }\n/**\n * @return {?}\n */\ntoggleMute(): void {\n        if (this.volume === 0) {\n            this.volume = this._previousVolume;\n        } else {\n            this.volume = 0;\n        }\n    }\n/**\n * @return {?}\n */\ntogglePlay(): void {\n        if (this.playing) {\n            this.mediaPlayerService.pause();\n        } else {\n            this.mediaPlayerService.play();\n        }\n    }\n/**\n * @return {?}\n */\nsetFullscreen(): void {\n        this.mediaPlayerService.toggleFullscreen();\n    }\n/**\n * @return {?}\n */\ngoToStart(): void {\n        this.mediaPlayerService.currentTime = 0;\n    }\n/**\n * @return {?}\n */\ngoToEnd(): void {\n        this.mediaPlayerService.currentTime = this.mediaPlayerService.duration;\n    }\n/**\n * @param {?} event\n * @return {?}\n */\ndragStart(event: MouseEvent): void {\n        event.preventDefault();\n        this.volumeDragging = true;\n\n        let /** @type {?} */ thumb = /** @type {?} */(( event.target as HTMLDivElement));\n        thumb.focus();\n    }\n/**\n * @param {?} event\n * @return {?}\n */\ndragMove(event: MouseEvent): void {\n        if (!this.volumeDragging) {\n            return;\n        }\n\n        event.preventDefault();\n\n        let /** @type {?} */ slider = /** @type {?} */(( this.volumeSlider.nativeElement as HTMLDivElement));\n        let /** @type {?} */ bounds = slider.getBoundingClientRect();\n\n        let /** @type {?} */ x = Math.min(bounds.width, Math.max(0, event.pageX - bounds.left));\n\n        // convert to a percentage\n        this.volume = (x / bounds.width) * 100;\n    }\n/**\n * @return {?}\n */\ndragEnd(): void {\n        this.volumeDragging = false;        \n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-media-player-controls',\n    template: `\n      <div class=\"volume-container\">\n\n          <div class=\"volume-slider-container\" #volumeContainer [class.active]=\"volumeActive\">\n              <div class=\"volume-slider-icon\" #volumeIcon>\n                  <span class=\"hpe-icon\" [class.hpe-volume-mute]=\"volume === 0\" [class.hpe-volume-low]=\"volume > 0 && volume <= 70\" [class.hpe-volume]=\"volume > 70\" [uxTooltip]=\"muteTooltip\" (click)=\"toggleMute()\"></span>\n              </div>\n        \n              <div class=\"volume-slider-node\">\n                  <div class=\"volume-slider\" #volumeSlider>\n                      <div class=\"volume-track-lower\" [style.width.%]=\"volume\"></div>\n                      <div class=\"volume-slider-thumb\" (mousedown)=\"dragStart($event)\" [style.left.%]=\"volume\" tabindex=\"0\" (keydown.ArrowRight)=\"volume = volume + 10\" (keydown.ArrowLeft)=\"volume = volume - 10\"></div>\n                  </div>\n              </div>\n          </div>\n      </div>\n\n      <div class=\"spacer\"></div>\n\n      <svg viewBox=\"0 0 51.5 64\" width=\"14\" height=\"17\" class=\"control-button\" (click)=\"goToStart()\">\n          <rect x=\"0\" y=\"0\" width=\"7.5\" height=\"64\" />\n          <polygon points=\"51.5,64 51.5,0 7.4,32 \" />\n      </svg>\n\n      <svg viewBox=\"0 0 45 64\" width=\"20\" height=\"29\" class=\"control-button\" *ngIf=\"!playing\" (click)=\"togglePlay()\">\n          <polygon points=\"0.4,0 0.4,64 44.6,32\" />\n      </svg>\n\n      <svg viewBox=\"0 0 43 56.9\" class=\"control-button\" width=\"20\" height=\"29\" *ngIf=\"playing\" (click)=\"togglePlay()\">\n          <rect y=\"0.1\" width=\"15.7\" height=\"56.9\" />\n          <rect x=\"27.3\" y=\"0.1\" width=\"15.7\" height=\"56.9\" />\n      </svg>\n\n      <svg viewBox=\"0 0 51.5 64\" width=\"14\" height=\"17\" class=\"control-button\" (click)=\"goToEnd()\">\n          <rect x=\"44.1\" y=\"0\" width=\"7.5\" height=\"64\" />\n          <polygon points=\"0,64 0,0 44.1,32 \" />\n      </svg>\n\n      <div class=\"spacer\"></div>\n\n      <span class=\"hpe-icon\" *ngIf=\"mediaPlayerService.type !== 'audio'\" [class.hpe-expand]=\"!mediaPlayerService.fullscreen\" [class.hpe-contract]=\"mediaPlayerService.fullscreen\"\n          (click)=\"setFullscreen()\"></span>\n\n      <ng-template #muteTooltip>{{ volume === 0 ? 'Unmute' : 'Mute' }}</ng-template>\n    `,\n    host: {\n        '[class.quiet]': 'quietMode || fullscreen'\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'volumeIcon': [{ type: ViewChild, args: ['volumeIcon', ] },],\n'volumeSlider': [{ type: ViewChild, args: ['volumeSlider', ] },],\n'volumeContainer': [{ type: ViewChild, args: ['volumeContainer', ] },],\n'dragMove': [{ type: HostListener, args: ['document:mousemove', ['$event'], ] },],\n'dragEnd': [{ type: HostListener, args: ['document:mouseup', ] },],\n};\n}\n\nfunction MediaPlayerControlsExtensionComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nMediaPlayerControlsExtensionComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMediaPlayerControlsExtensionComponent.ctorParameters;\n/** @type {?} */\nMediaPlayerControlsExtensionComponent.propDecorators;\n/** @type {?} */\nMediaPlayerControlsExtensionComponent.prototype.playing;\n/** @type {?} */\nMediaPlayerControlsExtensionComponent.prototype.quietMode;\n/** @type {?} */\nMediaPlayerControlsExtensionComponent.prototype.fullscreen;\n/** @type {?} */\nMediaPlayerControlsExtensionComponent.prototype.volumeActive;\n/** @type {?} */\nMediaPlayerControlsExtensionComponent.prototype.volumeDragging;\n/** @type {?} */\nMediaPlayerControlsExtensionComponent.prototype.volumeIcon;\n/** @type {?} */\nMediaPlayerControlsExtensionComponent.prototype.volumeSlider;\n/** @type {?} */\nMediaPlayerControlsExtensionComponent.prototype.volumeContainer;\n/** @type {?} */\nMediaPlayerControlsExtensionComponent.prototype._volume;\n/** @type {?} */\nMediaPlayerControlsExtensionComponent.prototype._previousVolume;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, OnInit, ViewChild, ElementRef, AfterViewInit, OnDestroy } from '@angular/core';\nimport { MediaPlayerBaseExtensionDirective } from '../base-extension.directive';\nimport { Observable } from 'rxjs/Observable';\nimport'rxjs/add/operator/switchMap';\nimport'rxjs/add/operator/takeUntil';\nimport'rxjs/add/observable/fromEvent';\nimport { Subscription } from 'rxjs/Subscription';\nexport class MediaPlayerTimelineExtensionComponent extends MediaPlayerBaseExtensionDirective implements OnInit, AfterViewInit, OnDestroy {\n\n     thumb: ElementRef;\n     timelineRef: ElementRef;\n\n    current: number = 0;\n    position: number = 0;\n    duration: number = 0;\n    buffered: MediaPlayerBuffered[] = [];\n    mouseDown: boolean = false;\n    quietMode: boolean = false;\n    fullscreen: boolean = false;\nprivate _mouseEventSubscription: Subscription;\n\n    scrub = {\n        visible: false,\n        position: 0,\n        time: 0\n    };\n/**\n * @return {?}\n */\nngOnInit(): void {\n\n        // watch for changes to the current time\n        this.mediaPlayerService.durationChangeEvent.subscribe(duration => this.duration = duration);\n        this.mediaPlayerService.quietModeEvent.subscribe(quietMode => this.quietMode = quietMode);\n        this.mediaPlayerService.fullscreenEvent.subscribe(fullscreen => {\n            this.fullscreen = fullscreen;\n            this.scrub.position = 0;\n        });\n\n        this.mediaPlayerService.timeUpdateEvent.subscribe(current => {\n            this.current = current;\n            this.position = (this.current / this.duration) * 100;\n        });\n\n        this.mediaPlayerService.progressEvent.subscribe((buffered: TimeRanges) => {\n            this.buffered = [];\n\n            for (let /** @type {?} */ idx = 0; idx < buffered.length; idx++) {\n                this.buffered.push({ start: (buffered.start(idx) / this.duration) * 100, end: (buffered.end(idx) / this.duration) * 100 });\n            }\n        });\n    }\n/**\n * @return {?}\n */\nngAfterViewInit(): void {\n        let /** @type {?} */ mousedown$ = Observable.fromEvent(this.thumb.nativeElement, 'mousedown');\n        let /** @type {?} */ mousemove$ = Observable.fromEvent(document, 'mousemove');\n        let /** @type {?} */ mouseup$ = Observable.fromEvent(document, 'mouseup');\n\n        this._mouseEventSubscription = mousedown$.switchMap(event => mousemove$.takeUntil(mouseup$)).subscribe(event => {\n            this.scrub.visible = false;\n        });\n    }\n/**\n * @return {?}\n */\nngOnDestroy() {\n        this._mouseEventSubscription.unsubscribe();\n    }\n/**\n * @param {?=} event\n * @return {?}\n */\nupdateScrub(event?: MouseEvent): void {\n\n        let /** @type {?} */ target = /** @type {?} */(( event.target as HTMLElement));\n      \n        if (target.classList.contains('media-progress-bar-thumb')) {\n            return;\n        }\n\n        let /** @type {?} */ timeline = /** @type {?} */(( this.timelineRef.nativeElement as HTMLDivElement));\n        let /** @type {?} */ bounds = timeline.getBoundingClientRect();\n\n        this.scrub.position = event.offsetX;\n        this.scrub.time = (event.offsetX / bounds.width) * this.mediaPlayerService.duration;\n\n        if (this.mouseDown) {\n            this.mediaPlayerService.pause();\n            this.mediaPlayerService.currentTime = this.scrub.time;\n        }\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-media-player-timeline',\n    template: `\n      <p class=\"current-time\">{{ current | duration }}</p>\n\n      <div #timeline class=\"timeline-bar\" (mouseenter)=\"scrub.visible = true; pop.show()\" (mouseleave)=\"scrub.visible = false; pop.hide()\"\n          (mousemove)=\"updateScrub($event)\" (mouseup)=\"updateScrub($event)\" (mousedown)=\"mouseDown = true; $event.preventDefault()\">\n\n          <div class=\"buffered-bar\" *ngFor=\"let buffer of buffered\" [style.left.%]=\"buffer.start\" [style.width.%]=\"buffer.end - buffer.start\"></div>\n\n          <div class=\"media-progress-bar\" [style.width.%]=\"position\">\n              <div #progressThumb class=\"media-progress-bar-thumb\" (mouseenter)=\"scrub.visible = false; pop.hide(); $event.stopPropagation()\"\n                  (mouseleave)=\"scrub.visible = true; pop.show(); $event.stopPropagation()\"></div>\n          </div>\n\n          <div class=\"scrub-handle\"\n               [class.scrub-handle-hidden]=\"!scrub.visible\"\n               [style.left.px]=\"scrub.position\"\n               [uxTooltip]=\"popTemplate\"\n               placement=\"top\"\n               [showTriggers]=\"[]\"\n               [hideTriggers]=\"[]\"\n               #pop=\"ux-tooltip\"\n               [tooltipDelay]=\"100\"\n               [tooltipDisabled]=\"duration === 0\"></div>\n      </div>\n\n      <p class=\"duration-time\">{{ duration | duration }}</p>\n\n      <ng-template #popTemplate>\n          <span>{{ scrub.time | duration }}</span>\n      </ng-template>\n    `,\n    host: {\n        '(document:mouseup)': 'mouseDown = false',\n        '[class.quiet]': 'quietMode || fullscreen'\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'thumb': [{ type: ViewChild, args: ['progressThumb', ] },],\n'timelineRef': [{ type: ViewChild, args: ['timeline', ] },],\n};\n}\n\nfunction MediaPlayerTimelineExtensionComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nMediaPlayerTimelineExtensionComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMediaPlayerTimelineExtensionComponent.ctorParameters;\n/** @type {?} */\nMediaPlayerTimelineExtensionComponent.propDecorators;\n/** @type {?} */\nMediaPlayerTimelineExtensionComponent.prototype.thumb;\n/** @type {?} */\nMediaPlayerTimelineExtensionComponent.prototype.timelineRef;\n/** @type {?} */\nMediaPlayerTimelineExtensionComponent.prototype.current;\n/** @type {?} */\nMediaPlayerTimelineExtensionComponent.prototype.position;\n/** @type {?} */\nMediaPlayerTimelineExtensionComponent.prototype.duration;\n/** @type {?} */\nMediaPlayerTimelineExtensionComponent.prototype.buffered;\n/** @type {?} */\nMediaPlayerTimelineExtensionComponent.prototype.mouseDown;\n/** @type {?} */\nMediaPlayerTimelineExtensionComponent.prototype.quietMode;\n/** @type {?} */\nMediaPlayerTimelineExtensionComponent.prototype.fullscreen;\n/** @type {?} */\nMediaPlayerTimelineExtensionComponent.prototype._mouseEventSubscription;\n/** @type {?} */\nMediaPlayerTimelineExtensionComponent.prototype.scrub;\n}\n\n\nexport interface MediaPlayerBuffered {\n    start: number;\n    end: number;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, Host } from '@angular/core';\nimport { MediaPlayerService } from '../media-player.service';\nexport class MediaPlayerBaseExtensionDirective {\n/**\n * @param {?} mediaPlayerService\n */\nconstructor(public mediaPlayerService: MediaPlayerService) { }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: '[mediaPlayerBaseExtension]' \n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: MediaPlayerService, },\n];\n}\n\nfunction MediaPlayerBaseExtensionDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nMediaPlayerBaseExtensionDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMediaPlayerBaseExtensionDirective.ctorParameters;\n/** @type {?} */\nMediaPlayerBaseExtensionDirective.prototype.mediaPlayerService;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Input, ViewChild, ElementRef, AfterViewInit, OnDestroy } from '@angular/core';\nimport { ExtractedFrame, FrameExtractionService } from '../../services/frame-extraction/frame-extraction.service';\nimport { MediaPlayerService } from './media-player.service';\nimport { Subject } from 'rxjs/Subject';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { Observable } from 'rxjs/Observable';\nimport { Observer } from 'rxjs/Observer';\nimport { AudioService, AudioMetadata } from '../../services/audio/index';\nimport { Subscription } from 'rxjs/Subscription';\nimport'rxjs/add/observable/from';\nimport'rxjs/add/operator/switchMap';\nexport class MediaPlayerComponent implements AfterViewInit, OnDestroy {\nprivate _playerRef: ElementRef;\nprivate _trackBarRef: ElementRef;\n\n    hovering: boolean = false;\n    audioMetadata: Observable<AudioMetadata>;\nprivate _hover$: Subscription;\nprivate _clicked$: Subscription;\nprivate _paused$: Subscription;\nprivate _playing$: Subscription;\nprivate _loading$: Subscription;\n/**\n * @return {?}\n */\nget source(): string {\n        return this.mediaPlayerService.source;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset source(value: string) {\n        this.mediaPlayerService.source = value;\n    }\n/**\n * @return {?}\n */\nget type(): MediaPlayerType {\n        return this.mediaPlayerService.type;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset type(value: MediaPlayerType) {\n        this.mediaPlayerService.type = value;\n    }\n/**\n * @return {?}\n */\nget quietMode(): boolean {\n        return this.mediaPlayerService.quietMode;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset quietMode(value: boolean) {\n        this.mediaPlayerService.quietMode = value;\n    }\n/**\n * @param {?} mediaPlayerService\n * @param {?} _audioService\n * @param {?} _elementRef\n */\nconstructor(public mediaPlayerService: MediaPlayerService,\nprivate _audioService: AudioService,\nprivate _elementRef: ElementRef) {\n\n        // show controls when hovering and in quiet mode\n        this._hover$ = Observable.fromEvent(this._elementRef.nativeElement, 'mousemove').switchMap((event: MouseEvent) => {\n            this.hovering = true;         \n            return Observable.of(event);\n        }).debounceTime(2000).subscribe(() => this.hovering = false);\n    }\n/**\n * @return {?}\n */\nngAfterViewInit(): void {\n        this.mediaPlayerService.setMediaPlayer(this._elementRef.nativeElement, this._playerRef.nativeElement);\n\n        this.audioMetadata = this._audioService.getAudioFileMetadata(this._playerRef.nativeElement);\n        this._playing$ = this.mediaPlayerService.playingEvent.subscribe(event => this.mediaPlayerService.playing.next(true));\n        this._paused$ = this.mediaPlayerService.pauseEvent.subscribe(event => this.mediaPlayerService.playing.next(false));\n        this._clicked$ = this.mediaPlayerService.mediaClickEvent.subscribe(() => this.mediaPlayerService.togglePlay());\n        this._loading$ = this.mediaPlayerService.loadedMetadataEvent.subscribe(() => this.mediaPlayerService.loaded = true);\n    }\n/**\n * @return {?}\n */\nngOnDestroy(): void {\n        this._hover$.unsubscribe();\n        this._playing$.unsubscribe();\n        this._paused$.unsubscribe();\n        this._clicked$.unsubscribe();\n        this._loading$.unsubscribe();\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-media-player',\n    template: `\n      <div class=\"video-player-container\" *ngIf=\"type === 'video'\">\n\n          <video class=\"video-player\" #player [src]=\"source\" (abort)=\"mediaPlayerService.abortEvent.next()\" (canplay)=\"mediaPlayerService.canPlayEvent.next()\"\n              (canplaythrough)=\"mediaPlayerService.canPlayThroughEvent.next()\" (durationchange)=\"mediaPlayerService.durationChangeEvent.next(player.duration)\" (ended)=\"mediaPlayerService.endedEvent.next()\"\n              (error)=\"mediaPlayerService.errorEvent.next($event)\" (loadeddata)=\"mediaPlayerService.loadedDataEvent.next($event)\" (loadedmetadata)=\"mediaPlayerService.loadedMetadataEvent.next($event)\"\n              (loadstart)=\"mediaPlayerService.loadStartEvent.next()\" (pause)=\"mediaPlayerService.pauseEvent.next()\" (play)=\"mediaPlayerService.playEvent.next()\" (playing)=\"mediaPlayerService.playingEvent.next(!player.paused)\"\n              (ratechange)=\"mediaPlayerService.rateChangeEvent.next(player.playbackRate)\" (seeked)=\"mediaPlayerService.seekedEvent.next(player.currentTime)\" (seeking)=\"mediaPlayerService.seekingEvent.next(player.currentTime)\"\n              (stalled)=\"mediaPlayerService.stalledEvent.next()\" (suspend)=\"mediaPlayerService.suspendEvent.next()\" (timeupdate)=\"mediaPlayerService.timeUpdateEvent.next(player.currentTime)\"\n              (volumechange)=\"mediaPlayerService.volumeChangeEvent.next(player.volume)\" (waiting)=\"mediaPlayerService.waitingEvent.next()\" (click)=\"mediaPlayerService.mediaClickEvent.next($event)\"></video>\n\n          <div class=\"video-overlay\" [class.playing]=\"mediaPlayerService.playing | async\">\n              <svg class=\"play-graphic\" x=\"0px\" y=\"0px\" viewBox=\"0 0 64 64\">\n                  <circle class=\"play-circle\" cx=\"32.2\" cy=\"31.8\" r=\"31.8\" />\n                  <polygon class=\"play-triangle\" points=\"23,14.1 23,50.8 48.3,32.5\" />\n              </svg>\n          </div>\n\n      </div>\n\n\n      <div class=\"audio-player\" *ngIf=\"type === 'audio'\">\n\n          <svg width=\"24px\" height=\"24px\" viewBox=\"0 0 24 24\">\n              <g stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\n                  <g transform=\"translate(-98.000000, -458.000000)\">\n                      <g transform=\"translate(98.000000, 458.000000)\">\n                          <path d=\"M4.5,0.5 L18.0435308,0.5 L23.5,6.22251502 L23.5,23.5 L4.5,23.5 L4.5,0.5 Z\" fill=\"#CCEAE2\"></path>\n                          <path d=\"M4.5,8 L4.5,0.5 L18,0.5 L23.5,6 L23.5,23.5 L18,23.5\" stroke=\"#60798D\" fill=\"#CCEAE2\"></path>\n                          <path d=\"M4,13.5 L0.5,13.5 L0.5,18.5 L4,18.5 L9.5,22.5 L9.5,9.5 L4,13.5 Z\" stroke=\"#60798D\" fill=\"#85D2BE\"></path>\n                          <path d=\"M11.5,12.5137939 C13.7576225,12.5137939 14.5,14.3709236 14.5,16 C14.5,17.6849236 13.7089152,19.5420532 11.5,19.5420532\"\n                              stroke=\"#60798D\"></path>\n                          <path d=\"M11.5,9 C15.8037643,9.04168701 18.5,11.6604805 18.5,16 C18.5,20.3395195 15.8804302,23.0079956 11.5,23\" stroke=\"#60798D\"></path>\n                          <path d=\"M17.5219116,0.761413574 L17.5219116,6 L23,6\" stroke=\"#60798D\" fill=\"#85D2BE\"></path>\n                      </g>\n                  </g>\n              </g>\n          </svg>\n\n          <p class=\"audio-file-name\">{{ (audioMetadata | async)?.filename }}</p>\n          <p class=\"audio-file-format\">{{ (audioMetadata | async)?.description }}</p>\n          <p class=\"audio-file-size\">{{ (audioMetadata | async)?.size | fileSize }}</p>\n\n          <audio #player [src]=\"source\" (abort)=\"mediaPlayerService.abortEvent.next()\" (canplay)=\"mediaPlayerService.canPlayEvent.next(true)\"\n              (canplaythrough)=\"mediaPlayerService.canPlayThroughEvent.next(true)\" (durationchange)=\"mediaPlayerService.durationChangeEvent.next(player.duration)\" (ended)=\"mediaPlayerService.endedEvent.next()\"\n              (error)=\"mediaPlayerService.errorEvent.next($event)\" (loadeddata)=\"mediaPlayerService.loadedDataEvent.next($event)\" (loadedmetadata)=\"mediaPlayerService.loadedMetadataEvent.next($event)\"\n              (loadstart)=\"mediaPlayerService.loadStartEvent.next()\" (pause)=\"mediaPlayerService.pauseEvent.next()\" (play)=\"mediaPlayerService.playEvent.next()\" (playing)=\"mediaPlayerService.playingEvent.next(!player.paused)\"\n              (ratechange)=\"mediaPlayerService.rateChangeEvent.next(player.playbackRate)\" (seeked)=\"mediaPlayerService.seekedEvent.next(player.currentTime)\" (seeking)=\"mediaPlayerService.seekingEvent.next(player.currentTime)\"\n              (stalled)=\"mediaPlayerService.stalledEvent.next()\" (suspend)=\"mediaPlayerService.suspendEvent.next()\" (timeupdate)=\"mediaPlayerService.timeUpdateEvent.next(player.currentTime)\"\n              (volumechange)=\"mediaPlayerService.volumeChangeEvent.next(player.volume)\" (waiting)=\"mediaPlayerService.waitingEvent.next()\" (click)=\"mediaPlayerService.mediaClickEvent.next($event)\"></audio>\n      </div>\n\n      <div class=\"control-bar\">\n          <ux-media-player-timeline></ux-media-player-timeline>\n          <ux-media-player-controls></ux-media-player-controls>\n      </div>\n    `,\n    providers: [ MediaPlayerService ],\n    host: {\n        'tabindex': '0',\n        '(keydown.Space)': 'mediaPlayerService.togglePlay()',\n        '[class.standard]': '!mediaPlayerService.fullscreen',\n        '[class.fullscreen]': 'mediaPlayerService.fullscreen',\n        '[class.quiet]': 'quietMode && type === \"video\" || mediaPlayerService.fullscreen',\n        '[class.hover]': 'hovering',\n        '[class.video]': 'type === \"video\"',\n        '[class.audio]': 'type === \"audio\"',\n        '(mouseenter)': 'hovering = true',\n        '(mouseleave)': 'hovering = false',\n        '(document:webkitfullscreenchange)': 'mediaPlayerService.fullscreenChange($event)',\n        '(document:mozfullscreenchange)': 'mediaPlayerService.fullscreenChange($event)',\n        '(document:MSFullscreenChange)': 'mediaPlayerService.fullscreenChange($event)'\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: MediaPlayerService, },\n{type: AudioService, },\n{type: ElementRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'_playerRef': [{ type: ViewChild, args: ['player', ] },],\n'_trackBarRef': [{ type: ViewChild, args: ['trackBar', ] },],\n'source': [{ type: Input },],\n'type': [{ type: Input },],\n'quietMode': [{ type: Input },],\n};\n}\n\nfunction MediaPlayerComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nMediaPlayerComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMediaPlayerComponent.ctorParameters;\n/** @type {?} */\nMediaPlayerComponent.propDecorators;\n/** @type {?} */\nMediaPlayerComponent.prototype._playerRef;\n/** @type {?} */\nMediaPlayerComponent.prototype._trackBarRef;\n/** @type {?} */\nMediaPlayerComponent.prototype.hovering;\n/** @type {?} */\nMediaPlayerComponent.prototype.audioMetadata;\n/** @type {?} */\nMediaPlayerComponent.prototype._hover$;\n/** @type {?} */\nMediaPlayerComponent.prototype._clicked$;\n/** @type {?} */\nMediaPlayerComponent.prototype._paused$;\n/** @type {?} */\nMediaPlayerComponent.prototype._playing$;\n/** @type {?} */\nMediaPlayerComponent.prototype._loading$;\n/** @type {?} */\nMediaPlayerComponent.prototype.mediaPlayerService;\n/** @type {?} */\nMediaPlayerComponent.prototype._audioService;\n/** @type {?} */\nMediaPlayerComponent.prototype._elementRef;\n}\n\n\nexport type MediaPlayerType = 'video' | 'audio';\n\nexport interface MediaPlayerBuffer {\n    start: number;\n    end: number;\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { HttpModule } from '@angular/http';\nimport { AudioService } from './audio.service';\nexport class AudioServiceModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [ HttpModule ],\n    providers: [AudioService]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction AudioServiceModule_tsickle_Closure_declarations() {\n/** @type {?} */\nAudioServiceModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nAudioServiceModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable } from '@angular/core';\nimport { Http, ResponseContentType } from '@angular/http';\nimport { Observable } from 'rxjs/Observable';\nimport { Observer } from 'rxjs/Observer';\nimport'rxjs/add/observable/of';\nexport class AudioService {\nprivate _audioBuffer: AudioBuffer;\nprivate _audioBufferSource: AudioBufferSourceNode;\nprivate _audioContext: AudioContext;\nprivate _gainNode: GainNode;\nprivate _analyserNode: AnalyserNode;\n/**\n * @param {?} _http\n */\nconstructor(private _http: Http) { }\n/**\n * @param {?} mediaElement\n * @return {?}\n */\ngetAudioFileMetadata(mediaElement: HTMLMediaElement): Observable<AudioMetadata> {\n        return Observable.create((observer: Observer<AudioMetadata>) => {\n            this._http.request(mediaElement.src, { responseType: ResponseContentType.Blob }).subscribe(response => {\n\n                let /** @type {?} */ filename = mediaElement.src.substring(mediaElement.src.lastIndexOf('/') + 1);\n                let /** @type {?} */ extension = mediaElement.src.substring(mediaElement.src.lastIndexOf('.') + 1).toLowerCase();\n                let /** @type {?} */ blob = response.blob();\n                let /** @type {?} */ description;\n\n                switch (extension) {\n                    case 'mp3':\n                        description = 'MPEG audio layer 3 file';\n                        break;\n\n                    case 'wma':\n                        description = 'Windows media audio file';\n                        break;\n\n                    case 'wav':\n                        description = 'WAVE audio file';\n                        break;\n\n                    case 'ogg':\n                        description = 'Ogg Vorbis file';\n                        break;\n\n                    case 'aac':\n                        description = 'Advanced audio coding file';\n                        break;\n\n                    case 'midi':\n                        description = 'Musical instrument digital interface file';\n                        break;\n\n                    default:\n                        description = 'Audio file';\n                        break;\n                }\n\n                observer.next({\n                    filename: filename,\n                    extension: extension,\n                    description: description,\n                    size: blob.size\n                });\n            });\n        });\n    }\n/**\n * @param {?} url\n * @return {?}\n */\ngetWaveformFromUrl(url: string): Observable<Float32Array[]> {\n\n        // if audio context is not support return a stream of empty data\n        if (!( /** @type {?} */((<any>window))).AudioContext) {\n            return Observable.of<Float32Array[]>([new Float32Array(0)]);\n        }\n\n        this._audioContext = new AudioContext();\n        this.createVolumeNode();\n        this.createAnalyserNode();\n\n        return Observable.create((observer: Observer<Float32Array[]>) => {\n\n            // load the media from the URL provided\n            this._http.request(url, { responseType: ResponseContentType.ArrayBuffer }).subscribe(response => {\n                this.getAudioBuffer(response.arrayBuffer()).subscribe(audioBuffer => {\n\n                    // create the buffer source\n                    this.createBufferSource(audioBuffer);\n\n                    let /** @type {?} */ dataPoints: Float32Array[] = [];\n                    let /** @type {?} */ channels = this._audioBuffer.numberOfChannels;\n\n                    // extract the data from each channel\n                    for (let /** @type {?} */ channelIdx = 0; channelIdx < channels; channelIdx++) {\n                        dataPoints[channelIdx] = this._audioBuffer.getChannelData(channelIdx);\n                    }\n\n                    observer.next(dataPoints);\n                    observer.complete();\n\n                    // cleanup after ourselves\n                    dataPoints = null;\n                }, (error) => observer.error(error));\n            }, (error) => observer.error(error));\n        });\n    }\n/**\n * @param {?=} channels\n * @param {?=} skip\n * @return {?}\n */\ngetWaveformPoints(channels: Float32Array[] = [], skip: number = 1000): WaveformPoint[] {\n\n        let /** @type {?} */ waveform: WaveformPoint[] = [];\n        let /** @type {?} */ duration = channels.length > 0 ? channels[0].length : 0;\n\n        // convert each channel data to a series of waveform points\n        for (let /** @type {?} */ idx = 0; idx < duration; idx += skip) {\n\n            // get all the channel data for a specific point\n            let /** @type {?} */ points = channels.map(channel => channel[idx]);\n\n            // find the minimum point and maximum points at each position across all channels\n            waveform.push({\n                min: points.reduce((previous, current) => current < previous ? current : previous),\n                max: points.reduce((previous, current) => current > previous ? current : previous)\n            });\n        }\n\n        return waveform;\n    }\n/**\n * @param {?} arrayBuffer\n * @return {?}\n */\nprivate getAudioBuffer(arrayBuffer: ArrayBuffer): Observable<AudioBuffer> {\n        return Observable.create((observer: Observer<AudioBuffer>) => {\n            this.getOfflineAudioContext().decodeAudioData(arrayBuffer, (audioBuffer: AudioBuffer) => {\n                observer.next(audioBuffer);\n                observer.complete();\n            }, (error) => observer.error(error));\n        });\n    }\n/**\n * @return {?}\n */\nprivate getOfflineAudioContext(): OfflineAudioContext {\n        return new OfflineAudioContext(1, 2, this._audioContext.sampleRate || 44100);\n    }\n/**\n * @param {?} audioBuffer\n * @return {?}\n */\nprivate createBufferSource(audioBuffer: AudioBuffer): void {\n        this.disconnectSource();\n\n        this._audioBuffer = audioBuffer;\n        this._audioBufferSource = this._audioContext.createBufferSource();\n        this._audioBufferSource.buffer = this._audioBuffer;\n        this._audioBufferSource.connect(this._analyserNode);\n    }\n/**\n * @return {?}\n */\nprivate createVolumeNode(): void {\n        this._gainNode = this._audioContext.createGain();\n        this._gainNode.connect(this._audioContext.destination);\n    }\n/**\n * @return {?}\n */\nprivate createAnalyserNode(): void {\n        this._analyserNode = this._audioContext.createAnalyser();\n        this._analyserNode.connect(this._gainNode);\n    }\n/**\n * @return {?}\n */\nprivate disconnectSource(): void {\n        if (this._audioBufferSource) {\n            this._audioBufferSource.disconnect();\n        }\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Http, },\n];\n}\n\nfunction AudioService_tsickle_Closure_declarations() {\n/** @type {?} */\nAudioService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nAudioService.ctorParameters;\n/** @type {?} */\nAudioService.prototype._audioBuffer;\n/** @type {?} */\nAudioService.prototype._audioBufferSource;\n/** @type {?} */\nAudioService.prototype._audioContext;\n/** @type {?} */\nAudioService.prototype._gainNode;\n/** @type {?} */\nAudioService.prototype._analyserNode;\n/** @type {?} */\nAudioService.prototype._http;\n}\n\n\nexport interface WaveformPoint {\n    min: number;\n    max: number;\n}\n\nexport interface AudioMetadata {\n    filename: string;\n    extension: string;\n    description: string;\n    size: number;\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { MediaPlayerType } from './media-player.component';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { Subject } from 'rxjs/Subject';\nimport { Observer } from 'rxjs/Observer';\nimport { FrameExtractionService, ExtractedFrame } from '../../services/frame-extraction/index';\nexport class MediaPlayerService {\n\n    source: string;\n    type: MediaPlayerType = 'video';\n    loaded: boolean = false;\n\n    /*\n        Create observables for media player events\n    */\n    playing: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\n    initEvent: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\n    abortEvent: Subject<void> = new Subject<void>();\n    canPlayEvent: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\n    canPlayThroughEvent: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\n    durationChangeEvent: Subject<number> = new Subject<number>();\n    endedEvent: Subject<void> = new Subject<void>();\n    errorEvent: Subject<any> = new Subject<any>();\n    loadedDataEvent: Subject<any> = new Subject<any>();\n    loadedMetadataEvent: Subject<any> = new Subject<any>();\n    loadStartEvent: Subject<void> = new Subject<void>();\n    pauseEvent: Subject<void> = new Subject<void>();\n    playEvent: Subject<void> = new Subject<void>();\n    playingEvent: Subject<boolean> = new Subject<boolean>();\n    rateChangeEvent: Subject<number> = new Subject<number>();\n    seekedEvent: Subject<number> = new Subject<number>();\n    seekingEvent: Subject<number> = new Subject<number>();\n    stalledEvent: Subject<void> = new Subject<void>();\n    suspendEvent: Subject<void> = new Subject<void>();\n    timeUpdateEvent: Subject<number> = new Subject<number>();\n    volumeChangeEvent: Subject<number> = new Subject<number>();\n    waitingEvent: Subject<void> = new Subject<void>();\n    mediaClickEvent: Subject<MouseEvent> = new Subject<MouseEvent>();\n    fullscreenEvent: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\n    quietModeEvent: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\n    progressEvent: Observable<TimeRanges> = Observable.create((observer: Observer<TimeRanges>) => {\n\n        // repeat until the whole video has fully loaded\n        let /** @type {?} */ interval = setInterval(() => {\n\n            let /** @type {?} */ buffered = /** @type {?} */(( this._mediaPlayer.buffered as TimeRanges));\n            observer.next(buffered);\n\n            if (buffered.length === 1 && buffered.start(0) === 0 && buffered.end(0) === this.duration) {\n                observer.complete();\n                clearInterval(interval);\n            }\n        }, 1000);\n    });\nprivate _mediaPlayer: HTMLMediaElement;\nprivate _hostElement: HTMLElement;\nprivate _fullscreen: boolean = false;\nprivate _quietMode: boolean;\n/**\n * @param {?} _frameExtractionService\n */\nconstructor(private _frameExtractionService: FrameExtractionService) {}\n/**\n * @return {?}\n */\nget mediaPlayer(): HTMLMediaElement {\n        return this._mediaPlayer;\n    }\n/**\n * @return {?}\n */\nget quietMode(): boolean {\n        return this._quietMode;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset quietMode(value: boolean) {\n\n        // quiet mode cannot be enabled on audio player\n        if (this.type === 'audio') {\n            value = false;\n        }\n\n        this._quietMode = value;\n        this.quietModeEvent.next(value);\n    }\n/**\n * @return {?}\n */\nget mediaPlayerWidth(): number {\n        return this._mediaPlayer ? this._mediaPlayer.offsetWidth : 0;\n    }\n/**\n * @return {?}\n */\nget mediaPlayerHeight(): number {\n        return this._mediaPlayer ? this._mediaPlayer.offsetHeight : 0;\n    }\n/**\n * @return {?}\n */\nget audioTracks(): AudioTrackList {\n        return this._mediaPlayer ? this._mediaPlayer.audioTracks : null;\n    }\n/**\n * @return {?}\n */\nget autoplay(): boolean {\n        return this._mediaPlayer ? this._mediaPlayer.autoplay : false;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset autoplay(value: boolean) {\n        this._mediaPlayer.autoplay = value;\n    }\n/**\n * @return {?}\n */\nget buffered(): TimeRanges {\n        return this._mediaPlayer ? this._mediaPlayer.buffered : new TimeRanges();\n    }\n/**\n * @return {?}\n */\nget crossOrigin(): string {\n        return this._mediaPlayer ? this._mediaPlayer.crossOrigin : null;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset crossOrigin(value: string) {\n        this._mediaPlayer.crossOrigin = value;\n    }\n/**\n * @return {?}\n */\nget currentSrc(): string {\n        return this._mediaPlayer ? this._mediaPlayer.currentSrc : null;\n    }\n/**\n * @return {?}\n */\nget currentTime(): number {\n        return this._mediaPlayer ? this._mediaPlayer.currentTime : 0;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset currentTime(value: number) {\n        this._mediaPlayer.currentTime = value;\n    }\n/**\n * @return {?}\n */\nget defaultMuted(): boolean {\n        return this._mediaPlayer ? this._mediaPlayer.defaultMuted : false;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset defaultMuted(value: boolean) {\n        this._mediaPlayer.defaultMuted = value;\n    }\n/**\n * @return {?}\n */\nget defaultPlaybackRate(): number {\n        return this._mediaPlayer ? this._mediaPlayer.defaultPlaybackRate : 1;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset defaultPlaybackRate(value: number) {\n        this._mediaPlayer.defaultPlaybackRate = value;\n    }\n/**\n * @return {?}\n */\nget duration(): number {\n        return this._mediaPlayer ? this._mediaPlayer.duration : 0;\n    }\n/**\n * @return {?}\n */\nget ended(): boolean {\n        return this._mediaPlayer ? this._mediaPlayer.ended : false;\n    }\n/**\n * @return {?}\n */\nget loop(): boolean {\n        return this._mediaPlayer ? this._mediaPlayer.loop : false;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset loop(value: boolean) {\n        this._mediaPlayer.loop = value;\n    }\n/**\n * @return {?}\n */\nget muted(): boolean {\n        return this._mediaPlayer ? this._mediaPlayer.muted : false;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset muted(value: boolean) {\n        this._mediaPlayer.muted = value;\n    }\n/**\n * @return {?}\n */\nget networkState(): number {\n        return this._mediaPlayer.networkState;\n    }\n/**\n * @return {?}\n */\nget paused(): boolean {\n        return this._mediaPlayer ? this._mediaPlayer.paused : true;\n    }\n/**\n * @return {?}\n */\nget playbackRate(): number {\n        return this._mediaPlayer ? this._mediaPlayer.playbackRate : 1;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset playbackRate(value: number) {\n        this._mediaPlayer.playbackRate = value;\n    }\n/**\n * @return {?}\n */\nget played(): TimeRanges {\n        return this._mediaPlayer ? this._mediaPlayer.played : new TimeRanges();\n    }\n/**\n * @return {?}\n */\nget preload(): string {\n        return this._mediaPlayer ? this._mediaPlayer.preload : 'auto';\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset preload(value: string) {\n        this._mediaPlayer.preload = value;\n    }\n/**\n * @return {?}\n */\nget readyState(): number {\n        return this._mediaPlayer ? this._mediaPlayer.readyState : 0;\n    }\n/**\n * @return {?}\n */\nget seekable(): TimeRanges {\n        return this._mediaPlayer ? this._mediaPlayer.seekable : new TimeRanges();\n    }\n/**\n * @return {?}\n */\nget seeking(): boolean {\n        return this._mediaPlayer ? this._mediaPlayer.seeking : false;\n    }\n/**\n * @return {?}\n */\nget src(): string {\n        return this._mediaPlayer ? this._mediaPlayer.src : '';\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset src(value: string) {\n        this._mediaPlayer.src = value;\n    }\n/**\n * @return {?}\n */\nget textTracks(): TextTrackList {\n        return this._mediaPlayer ? this._mediaPlayer.textTracks : new TextTrackList();\n    }\n/**\n * @return {?}\n */\nget videoTracks(): VideoTrackList {\n        return this._mediaPlayer ? this._mediaPlayer.videoTracks : new VideoTrackList();\n    }\n/**\n * @return {?}\n */\nget volume(): number {\n        return this._mediaPlayer ? this._mediaPlayer.volume : 1;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset volume(value: number) {\n        this._mediaPlayer.volume = value;\n    }\n/**\n * @return {?}\n */\nget fullscreen(): boolean {\n        return this._mediaPlayer ? this._fullscreen : false;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset fullscreen(value: boolean) {\n        this._fullscreen = value;\n        this.fullscreenEvent.next(value);\n    }\n/**\n * @param {?} hostElement\n * @param {?} mediaPlayer\n * @return {?}\n */\nsetMediaPlayer(hostElement: HTMLElement, mediaPlayer: HTMLMediaElement): void {\n        this._hostElement = hostElement;\n        this._mediaPlayer = mediaPlayer;\n\n        this.initEvent.next(true);\n    }\n/**\n * Toggle playing state\n * @return {?}\n */\ntogglePlay(): void {\n\n        // prevent any action is not loaded\n        if (this.loaded === false) {\n            return;\n        }\n\n        if (this.paused) {\n            this.play();\n        } else {\n            this.pause();\n        }\n    }\n/**\n * Starts playing the audio/video\n * @return {?}\n */\nplay(): void {\n        this._mediaPlayer.play();\n    }\n/**\n * Pauses the currently playing audio/video\n * @return {?}\n */\npause(): void {\n        this._mediaPlayer.pause();\n    }\n/**\n * Re-loads the audio/video element\n * @return {?}\n */\nload(): void {\n        this._mediaPlayer.load();\n    }\n/**\n * Checks if the browser can play the specified audio/video type\n * @param {?} type\n * @return {?}\n */\ncanPlayType(type: string): string {\n        return this._mediaPlayer.canPlayType(type);\n    }\n/**\n * Adds a new text track to the audio/video\n * @param {?} kind\n * @param {?} label\n * @param {?} language\n * @return {?}\n */\naddTextTrack(kind: string, label: string, language: string): TextTrack {\n        return this._mediaPlayer.addTextTrack(kind, label, language);\n    }\n/**\n * Attempt to display media in fullscreen mode\n * @return {?}\n */\nrequestFullscreen(): void {\n\n        if (this._hostElement.requestFullscreen) {\n            this._hostElement.requestFullscreen();\n        } else if (this._hostElement.webkitRequestFullscreen) {\n            this._hostElement.webkitRequestFullscreen();\n        } else if (( /** @type {?} */((<any>this._hostElement))).msRequestFullscreen) {\n            ( /** @type {?} */((<any>this._hostElement))).msRequestFullscreen();\n        } else if (( /** @type {?} */((<any>this._hostElement))).mozRequestFullScreen) {\n            ( /** @type {?} */((<any>this._hostElement))).mozRequestFullScreen();\n        }\n    }\n/**\n * Exit full screen mode\n * @return {?}\n */\nexitFullscreen(): void {\n\n        if (( /** @type {?} */((<any>this._hostElement))).exitFullscreen) {\n            document.exitFullscreen();\n        } else if (document.webkitExitFullscreen) {\n            document.webkitExitFullscreen();\n        } else if (( /** @type {?} */((<any>document))).msExitFullscreen) {\n            ( /** @type {?} */((<any>document))).msExitFullscreen();\n        } else if (( /** @type {?} */((<any>document))).mozCancelFullScreen) {\n            ( /** @type {?} */((<any>document))).mozCancelFullScreen();\n        }\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nfullscreenChange(event: Event) {\n        this.fullscreen = ( /** @type {?} */((<any>document))).fullscreen || document.webkitIsFullScreen || ( /** @type {?} */((<any>document))).mozFullScreen || ( /** @type {?} */((<any>document))).msFullscreenElement !== null && ( /** @type {?} */((<any>document))).msFullscreenElement !== undefined;\n        this.fullscreenEvent.next(this.fullscreen);\n    }\n/**\n * Toggle Fullscreen State\n * @return {?}\n */\ntoggleFullscreen(): void {\n        if (this.fullscreen) {\n            this.exitFullscreen();\n        } else {\n            this.requestFullscreen();\n        }\n    }\n/**\n * Extract the frames from the video\n * @param {?} width\n * @param {?} height\n * @param {?} skip\n * @return {?}\n */\ngetFrames(width: number, height: number, skip: number): Observable<ExtractedFrame> {\n\n        if (this.type === 'video') {\n            return this._frameExtractionService.getFrameThumbnails(this.source, width, height, 0, this.duration, 10);\n        }\n\n        return Observable.from([]);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: FrameExtractionService, },\n];\n}\n\nfunction MediaPlayerService_tsickle_Closure_declarations() {\n/** @type {?} */\nMediaPlayerService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMediaPlayerService.ctorParameters;\n/** @type {?} */\nMediaPlayerService.prototype.source;\n/** @type {?} */\nMediaPlayerService.prototype.type;\n/** @type {?} */\nMediaPlayerService.prototype.loaded;\n/** @type {?} */\nMediaPlayerService.prototype.playing;\n/** @type {?} */\nMediaPlayerService.prototype.initEvent;\n/** @type {?} */\nMediaPlayerService.prototype.abortEvent;\n/** @type {?} */\nMediaPlayerService.prototype.canPlayEvent;\n/** @type {?} */\nMediaPlayerService.prototype.canPlayThroughEvent;\n/** @type {?} */\nMediaPlayerService.prototype.durationChangeEvent;\n/** @type {?} */\nMediaPlayerService.prototype.endedEvent;\n/** @type {?} */\nMediaPlayerService.prototype.errorEvent;\n/** @type {?} */\nMediaPlayerService.prototype.loadedDataEvent;\n/** @type {?} */\nMediaPlayerService.prototype.loadedMetadataEvent;\n/** @type {?} */\nMediaPlayerService.prototype.loadStartEvent;\n/** @type {?} */\nMediaPlayerService.prototype.pauseEvent;\n/** @type {?} */\nMediaPlayerService.prototype.playEvent;\n/** @type {?} */\nMediaPlayerService.prototype.playingEvent;\n/** @type {?} */\nMediaPlayerService.prototype.rateChangeEvent;\n/** @type {?} */\nMediaPlayerService.prototype.seekedEvent;\n/** @type {?} */\nMediaPlayerService.prototype.seekingEvent;\n/** @type {?} */\nMediaPlayerService.prototype.stalledEvent;\n/** @type {?} */\nMediaPlayerService.prototype.suspendEvent;\n/** @type {?} */\nMediaPlayerService.prototype.timeUpdateEvent;\n/** @type {?} */\nMediaPlayerService.prototype.volumeChangeEvent;\n/** @type {?} */\nMediaPlayerService.prototype.waitingEvent;\n/** @type {?} */\nMediaPlayerService.prototype.mediaClickEvent;\n/** @type {?} */\nMediaPlayerService.prototype.fullscreenEvent;\n/** @type {?} */\nMediaPlayerService.prototype.quietModeEvent;\n/** @type {?} */\nMediaPlayerService.prototype.progressEvent;\n/** @type {?} */\nMediaPlayerService.prototype._mediaPlayer;\n/** @type {?} */\nMediaPlayerService.prototype._hostElement;\n/** @type {?} */\nMediaPlayerService.prototype._fullscreen;\n/** @type {?} */\nMediaPlayerService.prototype._quietMode;\n/** @type {?} */\nMediaPlayerService.prototype._frameExtractionService;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\n\nimport { FrameExtractionService } from './frame-extraction.service';\nexport class FrameExtractionModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    providers: [FrameExtractionService],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction FrameExtractionModule_tsickle_Closure_declarations() {\n/** @type {?} */\nFrameExtractionModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFrameExtractionModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { Observer } from 'rxjs/Observer';\nimport'rxjs/add/observable/concat';\nexport class FrameExtractionService {\n/**\n * @param {?} source\n * @return {?}\n */\nprivate createVideoPlayer(source: string): HTMLVideoElement {\n        let /** @type {?} */ videoPlayer = document.createElement('video');\n        videoPlayer.preload = 'auto';\n        videoPlayer.src = source;\n        return videoPlayer;\n    }\n/**\n * @param {?} width\n * @param {?} height\n * @return {?}\n */\nprivate createCanvas(width: number, height: number): HTMLCanvasElement {\n        let /** @type {?} */ canvas = document.createElement('canvas');\n        canvas.width = width;\n        canvas.height = height;\n        return canvas;\n    }\n/**\n * @param {?} videoPlayer\n * @param {?} time\n * @return {?}\n */\nprivate goToFrame(videoPlayer: HTMLVideoElement, time: number): Observable<number> {\n        videoPlayer.currentTime = time;\n        return Observable.fromEvent(videoPlayer, time === 0 ? 'loadeddata' : 'seeked');\n    }\n/**\n * @param {?} videoPlayer\n * @param {?} canvas\n * @param {?} time\n * @param {?=} width\n * @param {?=} height\n * @return {?}\n */\nprivate getThumbnail(videoPlayer: HTMLVideoElement, canvas: HTMLCanvasElement, time: number, width: number = 160, height: number = 90): Observable<ExtractedFrame> {\n\n        return Observable.create((observer: Observer<ExtractedFrame>) => {\n\n            // go to specified frame\n            let /** @type {?} */ subscription = this.goToFrame(videoPlayer, time).subscribe((event: any) => {\n                // create image from current frame\n                canvas.getContext('2d').drawImage(videoPlayer, 0, 0, width, height);\n                observer.next({ image: canvas.toDataURL(), width: width, height: height, time: time });\n                observer.complete();\n                subscription.unsubscribe();\n            });\n        });\n    }\n/**\n * @param {?} source\n * @param {?} width\n * @param {?} height\n * @param {?} time\n * @return {?}\n */\ngetFrameThumbnail(source: string, width: number, height: number, time: number): Observable<ExtractedFrame> {\n\n        // create required elements\n        let /** @type {?} */ videoPlayer = this.createVideoPlayer(source);\n        let /** @type {?} */ canvas = this.createCanvas(width, height);\n\n        let /** @type {?} */ frameSubscription = this.getThumbnail(videoPlayer, canvas, time, width, height);\n\n        // ensure we release memory after we are finished        \n        frameSubscription.subscribe(null, null, () => {\n            videoPlayer = null;\n            canvas = null;\n        });\n\n        return frameSubscription;\n    }\n/**\n * @param {?} source\n * @param {?} width\n * @param {?} height\n * @param {?} start\n * @param {?} end\n * @param {?=} skip\n * @return {?}\n */\ngetFrameThumbnails(source: string, width: number, height: number, start: number, end: number, skip: number = 5): Observable<ExtractedFrame> {\n\n        // create required elements\n        let /** @type {?} */ videoPlayer = this.createVideoPlayer(source);\n        let /** @type {?} */ canvas = this.createCanvas(width, height);\n\n        return Observable.create((observer: Observer<ExtractedFrame>) => {\n\n            Observable.fromEvent(videoPlayer, 'loadedmetadata').subscribe(() => {\n\n                // calculate the frames required\n                let /** @type {?} */ frames = [];\n\n                for (let /** @type {?} */ idx = start; idx < end; idx += skip) {\n                    frames.push(this.getThumbnail(videoPlayer, canvas, idx, width, height));\n                }\n\n                Observable.concat(...frames).subscribe((frame: ExtractedFrame) => observer.next(frame), null, () => {\n                    videoPlayer = null;\n                    canvas = null;\n                    observer.complete();\n                });\n            });\n\n        });\n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction FrameExtractionService_tsickle_Closure_declarations() {\n/** @type {?} */\nFrameExtractionService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFrameExtractionService.ctorParameters;\n}\n\n\nexport interface ExtractedFrame {\n    image: string;\n    width: number;\n    height: number;\n    time: number;\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ToolbarSearchComponent } from './toolbar-search.component';\nimport { ToolbarSearchFieldDirective } from './toolbar-search-field.directive';\nimport { ToolbarSearchButtonDirective } from './toolbar-search-button.directive';\n\nconst /** @type {?} */ DECLARATIONS = [\n    ToolbarSearchComponent,\n    ToolbarSearchFieldDirective,\n    ToolbarSearchButtonDirective\n];\nexport class ToolbarSearchModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        CommonModule\n    ],\n    exports: DECLARATIONS,\n    declarations: DECLARATIONS,\n    providers: [],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ToolbarSearchModule_tsickle_Closure_declarations() {\n/** @type {?} */\nToolbarSearchModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nToolbarSearchModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {\n    Component,\n    ContentChild,\n    AfterContentInit,\n    HostBinding,\n    HostListener,\n    EventEmitter,\n    Output,\n    Inject,\n    ElementRef,\n    Input\n} from '@angular/core';\nimport {\n    AnimationEvent,\n    trigger,\n    transition,\n    query,\n    style,\n    animate,\n    state\n} from '@angular/animations';\nimport { DOCUMENT } from '@angular/common';\n\nimport { ToolbarSearchFieldDirective } from './toolbar-search-field.directive';\nimport { ToolbarSearchButtonDirective } from './toolbar-search-button.directive';\nimport { ColorService } from '../../services/color/color.service';\nexport class ToolbarSearchComponent implements AfterContentInit {\n/**\n * @return {?}\n */\nget expanded(): boolean {\n        return this._expanded;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset expanded(value: boolean) {\n        this._expanded = value;\n\n        this.expandedChange.emit(value);\n\n        if (value) {\n            // Set focus on the input when expanded\n            this._field.focus();\n        } else {\n            // Clear text when contracted\n            this._field.clear();\n\n            // Remove focus (works around an IE issue where the caret remains visible)\n            this._field.blur();\n        }\n    }\n\n    \n    \n    direction: 'left' | 'right' = 'right';\n\n    \n    \n    inverse = false;\n/**\n * @param {?} value\n * @return {?}\n */\nset background(value: string) {\n        this._backgroundColor = this._colorService.resolve(value) || 'transparent';\n    }\n\n    \n    expandedChange = new EventEmitter<boolean>();\n\n    \n    search = new EventEmitter<string>();\nprivate _expanded: boolean = false;\n/**\n * @return {?}\n */\nprivate get _expandedAnimation(): any {\n        return {\n            value: this.expanded ? 'expanded' : 'collapsed',\n            params: {\n                initialWidth: this._button.width + 'px'\n            }\n        };\n    }\nprivate _position = 'relative';\nprivate _backgroundColor = 'transparent';\nprivate _field: ToolbarSearchFieldDirective;\nprivate _button: ToolbarSearchButtonDirective;\nprivate _placeholder: HTMLElement;\nprivate _document: Document;\n/**\n * @param {?} _elementRef\n * @param {?} _colorService\n * @param {?} document\n */\nconstructor(\nprivate _elementRef: ElementRef,\nprivate _colorService: ColorService,\n         document: any) {\n        this._document = <Document>document;\n    }\n/**\n * @return {?}\n */\nngAfterContentInit() {\n        // Subscribe to the submit event on the input field, triggering the search event\n        this._field.submit.subscribe((text: string) => this.search.emit(text));\n\n        // Subscribe to cancel events coming from the input field\n        this._field.cancel.subscribe(() => (this.expanded = false));\n\n        // Subscribe to the button click event\n        this._button.clicked.subscribe(() => {\n            if (this.expanded && this._field.text) {\n                this.search.emit(this._field.text);\n            } else {\n                this.expanded = !this.expanded;\n            }\n        });\n\n        // Create placeholder element to avoid changing layout when switching to position: absolute\n        this.createPlaceholder();\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nanimationStart(event: AnimationEvent) {\n        if (event.toState === 'expanded') {\n            this._position = 'absolute';\n            this.enablePlaceholder(true);\n        }\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nanimationDone(event: AnimationEvent) {\n        if (event.toState === 'collapsed') {\n            this._position = 'relative';\n            this.enablePlaceholder(false);\n        }\n    }\n/**\n * @return {?}\n */\nprivate createPlaceholder() {\n        // Get width and height of the component\n        const /** @type {?} */ styles = getComputedStyle(this._elementRef.nativeElement);\n\n        // Create invisible div with the same dimensions\n        this._placeholder = this._document.createElement('div');\n        this._placeholder.style.display = 'none';\n        this._placeholder.style.width = this._button.width + 'px';\n        this._placeholder.style.height = styles.height;\n        this._placeholder.style.visibility = 'hidden';\n\n        // Add as a sibling\n        this._elementRef.nativeElement.parentNode.insertBefore(this._placeholder, this._elementRef.nativeElement);\n    }\n/**\n * @param {?} enabled\n * @return {?}\n */\nprivate enablePlaceholder(enabled: boolean) {\n        this._placeholder.style.display = (enabled ? 'inline-block' : 'none');\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-toolbar-search',\n    template: `<ng-content></ng-content>`,\n    animations: [\n        trigger('expanded', [\n            state(\n                'collapsed',\n                style({\n                    width: '{{initialWidth}}'\n                }),\n                {\n                    params: { initialWidth: '30px' }\n                }\n            ),\n            state(\n                'expanded',\n                style({\n                    width: '100%'\n                })\n            ),\n            transition('collapsed <=> expanded', [animate('0.3s ease-out')])\n        ])\n    ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: ColorService, },\n{type: undefined, decorators: [{ type: Inject, args: [DOCUMENT, ] }, ]},\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'expanded': [{ type: HostBinding, args: ['class.expanded', ] },{ type: Input },],\n'direction': [{ type: Input },{ type: HostBinding, args: ['class', ] },],\n'inverse': [{ type: Input },{ type: HostBinding, args: ['class.inverse', ] },],\n'background': [{ type: Input },],\n'expandedChange': [{ type: Output },],\n'search': [{ type: Output },],\n'_expandedAnimation': [{ type: HostBinding, args: ['@expanded', ] },],\n'_position': [{ type: HostBinding, args: ['style.position', ] },],\n'_backgroundColor': [{ type: HostBinding, args: ['style.background-color', ] },],\n'_field': [{ type: ContentChild, args: [ToolbarSearchFieldDirective, ] },],\n'_button': [{ type: ContentChild, args: [ToolbarSearchButtonDirective, ] },],\n'animationStart': [{ type: HostListener, args: ['@expanded.start', ['$event'], ] },],\n'animationDone': [{ type: HostListener, args: ['@expanded.done', ['$event'], ] },],\n};\n}\n\nfunction ToolbarSearchComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nToolbarSearchComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nToolbarSearchComponent.ctorParameters;\n/** @type {?} */\nToolbarSearchComponent.propDecorators;\n/** @type {?} */\nToolbarSearchComponent.prototype.direction;\n/** @type {?} */\nToolbarSearchComponent.prototype.inverse;\n/** @type {?} */\nToolbarSearchComponent.prototype.expandedChange;\n/** @type {?} */\nToolbarSearchComponent.prototype.search;\n/** @type {?} */\nToolbarSearchComponent.prototype._expanded;\n/** @type {?} */\nToolbarSearchComponent.prototype._position;\n/** @type {?} */\nToolbarSearchComponent.prototype._backgroundColor;\n/** @type {?} */\nToolbarSearchComponent.prototype._field;\n/** @type {?} */\nToolbarSearchComponent.prototype._button;\n/** @type {?} */\nToolbarSearchComponent.prototype._placeholder;\n/** @type {?} */\nToolbarSearchComponent.prototype._document;\n/** @type {?} */\nToolbarSearchComponent.prototype._elementRef;\n/** @type {?} */\nToolbarSearchComponent.prototype._colorService;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, HostListener, Output, EventEmitter, ElementRef } from '@angular/core';\nexport class ToolbarSearchButtonDirective {\n\n    \n    clicked = new EventEmitter<void>();\n/**\n * @return {?}\n */\nget width(): number {\n        return this._elementRef.nativeElement.offsetWidth;\n    }\n/**\n * @param {?} _elementRef\n */\nconstructor(private _elementRef: ElementRef) { }\n/**\n * @return {?}\n */\nclickHandler() {\n        this.clicked.emit();\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: '[uxToolbarSearchButton]'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'clicked': [{ type: Output },],\n'clickHandler': [{ type: HostListener, args: ['click', ] },],\n};\n}\n\nfunction ToolbarSearchButtonDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nToolbarSearchButtonDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nToolbarSearchButtonDirective.ctorParameters;\n/** @type {?} */\nToolbarSearchButtonDirective.propDecorators;\n/** @type {?} */\nToolbarSearchButtonDirective.prototype.clicked;\n/** @type {?} */\nToolbarSearchButtonDirective.prototype._elementRef;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModel } from '@angular/forms';\nimport { Directive, ElementRef, HostListener, EventEmitter, Output, HostBinding, Optional } from '@angular/core';\n\nconst /** @type {?} */ KEYS = {\n    ENTER: 13,\n    ESCAPE: 27\n};\nexport class ToolbarSearchFieldDirective {\n\n    \n    cancel = new EventEmitter<void>();\n\n    \n    submit = new EventEmitter<string>();\n/**\n * @return {?}\n */\nget text(): string {\n        // Use ngModel if specified on the host; otherwise read the DOM\n        if (this._ngModel) {\n            return this._ngModel.value;\n        }\n\n        return this._elementRef.nativeElement.value;\n    }\n/**\n * @param {?} _elementRef\n * @param {?} _ngModel\n */\nconstructor(\nprivate _elementRef: ElementRef,\nprivate _ngModel: NgModel) { }\n/**\n * @return {?}\n */\nfocus() {\n        setTimeout(() => {\n            this._elementRef.nativeElement.focus();\n        });\n    }\n/**\n * @return {?}\n */\nblur() {\n        setTimeout(() => {\n            this._elementRef.nativeElement.blur();\n        });\n    }\n/**\n * @return {?}\n */\nclear() {\n        // Use ngModel if specified on the host; otherwise use the DOM\n        if (this._ngModel) {\n            this._ngModel.reset();\n        } else {\n            this._elementRef.nativeElement.value = '';\n        }\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nkeydownHandler(event: KeyboardEvent) {\n        setTimeout(() => {\n            if (event.keyCode === KEYS.ENTER) {\n                this.submit.emit(this.text);\n            } else if (event.keyCode === KEYS.ESCAPE) {\n                this._elementRef.nativeElement.blur();\n                this.cancel.emit();\n            }\n        });\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: '[uxToolbarSearchField]'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: NgModel, decorators: [{ type: Optional }, ]},\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'cancel': [{ type: Output },],\n'submit': [{ type: Output },],\n'keydownHandler': [{ type: HostListener, args: ['keydown', ['$event'], ] },],\n};\n}\n\nfunction ToolbarSearchFieldDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nToolbarSearchFieldDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nToolbarSearchFieldDirective.ctorParameters;\n/** @type {?} */\nToolbarSearchFieldDirective.propDecorators;\n/** @type {?} */\nToolbarSearchFieldDirective.prototype.cancel;\n/** @type {?} */\nToolbarSearchFieldDirective.prototype.submit;\n/** @type {?} */\nToolbarSearchFieldDirective.prototype._elementRef;\n/** @type {?} */\nToolbarSearchFieldDirective.prototype._ngModel;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { ToggleSwitchComponent } from './toggleswitch.component';\nexport class ToggleSwitchModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [ FormsModule ],\n    exports: [ ToggleSwitchComponent ],\n    declarations: [ ToggleSwitchComponent ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ToggleSwitchModule_tsickle_Closure_declarations() {\n/** @type {?} */\nToggleSwitchModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nToggleSwitchModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, EventEmitter, HostListener, Input, Output, forwardRef, HostBinding } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nconst /** @type {?} */ TOGGLESWITCH_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => ToggleSwitchComponent),\n    multi: true\n};\n\nlet /** @type {?} */ uniqueToggleSwitchId = 0;\nexport class ToggleSwitchComponent implements ControlValueAccessor {\nprivate _toggleSwitchId: string = `ux-toggleswitch-${++uniqueToggleSwitchId}`;\n\n     id: string = this._toggleSwitchId;\n     name: string | null;\n     tabindex: number = 0;\n     clickable: boolean = true;\n     disabled: boolean = false;\n     ariaLabel: string = '';\n     ariaLabelledby: string = null;\n\n     valueChange: EventEmitter<boolean> = new EventEmitter<boolean>();\n/**\n * @return {?}\n */\nget value() {\n        return this._value;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset value(value: boolean) {\n        this._value = value;\n\n        // Update value output\n        this.valueChange.emit(value);\n\n        // Notify ngModel\n        this.onChangeCallback(value);\n        this.onTouchedCallback();        \n    }\n/**\n * @return {?}\n */\nget inputId(): string { \n        return `${this.id || this._toggleSwitchId}-input`;\n    }\nprivate _value: boolean = false;\n\n    focused: boolean = false;\n    onTouchedCallback: () => void = () => { };\n    onChangeCallback: (_: any) => void = () => { };\n/**\n * @return {?}\n */\ntoggle(): void {\n        if (!this.disabled && this.clickable) {\n            this.value = !this.value;\n        }\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nwriteValue(value: boolean): void {\n        this.value = !!value;\n    }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnChange(fn: any): void {\n        this.onChangeCallback = fn;\n    }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnTouched(fn: any): void {\n        this.onTouchedCallback = fn;\n    }\n/**\n * @param {?} isDisabled\n * @return {?}\n */\nsetDisabledState(isDisabled: boolean): void {\n        this.disabled = isDisabled;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-toggleswitch',\n    template: `\n      <label [attr.for]=\"inputId\"\n             class=\"ux-toggleswitch\"\n             [class.ux-toggleswitch-checked]=\"value\"\n             [class.ux-toggleswitch-disabled]=\"disabled\"\n             [class.ux-toggleswitch-focused]=\"focused\">\n\n          <input class=\"ux-toggleswitch-input\"\n                 type=\"checkbox\"\n                 role=\"switch\"\n                 [id]=\"inputId\"\n                 [checked]=\"value\"\n                 [disabled]=\"disabled\"\n                 [attr.name]=\"name\"\n                 [tabindex]=\"tabindex\"\n                 [attr.aria-label]=\"ariaLabel\"\n                 [attr.aria-labelledby]=\"ariaLabelledby\"\n                 [attr.aria-checked]=\"value\"\n                 (focus)=\"focused = true\"\n                 (blur)=\"focused = false\"\n                 (change)=\"toggle()\"\n                 (click)=\"$event.stopPropagation()\">\n\n          <div class=\"ux-toggleswitch-container\">\n              <div class=\"ux-toggleswitch-bg\"></div>\n              <div class=\"ux-toggleswitch-nub\"></div>\n          </div>\n\n          <span class=\"ux-toggleswitch-label\">\n              <ng-content></ng-content>\n          </span>\n      </label>\n    `,\n    providers: [TOGGLESWITCH_VALUE_ACCESSOR]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'id': [{ type: Input },],\n'name': [{ type: Input },],\n'tabindex': [{ type: Input },],\n'clickable': [{ type: Input },],\n'disabled': [{ type: Input },],\n'ariaLabel': [{ type: Input, args: ['aria-label', ] },],\n'ariaLabelledby': [{ type: Input, args: ['aria-labelledby', ] },],\n'valueChange': [{ type: Output },],\n'value': [{ type: Input },],\n};\n}\n\nfunction ToggleSwitchComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nToggleSwitchComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nToggleSwitchComponent.ctorParameters;\n/** @type {?} */\nToggleSwitchComponent.propDecorators;\n/** @type {?} */\nToggleSwitchComponent.prototype._toggleSwitchId;\n/** @type {?} */\nToggleSwitchComponent.prototype.id;\n/** @type {?} */\nToggleSwitchComponent.prototype.name;\n/** @type {?} */\nToggleSwitchComponent.prototype.tabindex;\n/** @type {?} */\nToggleSwitchComponent.prototype.clickable;\n/** @type {?} */\nToggleSwitchComponent.prototype.disabled;\n/** @type {?} */\nToggleSwitchComponent.prototype.ariaLabel;\n/** @type {?} */\nToggleSwitchComponent.prototype.ariaLabelledby;\n/** @type {?} */\nToggleSwitchComponent.prototype.valueChange;\n/** @type {?} */\nToggleSwitchComponent.prototype._value;\n/** @type {?} */\nToggleSwitchComponent.prototype.focused;\n/** @type {?} */\nToggleSwitchComponent.prototype.onTouchedCallback;\n/** @type {?} */\nToggleSwitchComponent.prototype.onChangeCallback;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TimelineComponent } from './timeline.component';\nimport { TimelineEventComponent } from './timeline-event/timeline-event.component';\nexport class TimelineModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        CommonModule\n    ],\n    exports: [\n        TimelineComponent,\n        TimelineEventComponent\n    ],\n    declarations: [\n        TimelineComponent,\n        TimelineEventComponent\n    ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction TimelineModule_tsickle_Closure_declarations() {\n/** @type {?} */\nTimelineModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTimelineModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Input } from '@angular/core';\nexport class TimelineEventComponent {\n\n     badgeColor: string;\n     badgeTitle: string;\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-timeline-event',\n    template: `\n      <div class=\"timeline-badge\" [ngClass]=\"badgeColor\">\n          <span>{{badgeTitle}}</span>\n      </div>\n      <div class=\"timeline-panel\">\n          <ng-content></ng-content>\n      </div>\n    `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'badgeColor': [{ type: Input },],\n'badgeTitle': [{ type: Input },],\n};\n}\n\nfunction TimelineEventComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nTimelineEventComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTimelineEventComponent.ctorParameters;\n/** @type {?} */\nTimelineEventComponent.propDecorators;\n/** @type {?} */\nTimelineEventComponent.prototype.badgeColor;\n/** @type {?} */\nTimelineEventComponent.prototype.badgeTitle;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component } from '@angular/core';\nexport class TimelineComponent {\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-timeline',\n    template: `\n      <div class=\"timeline\">\n          <ng-content></ng-content>\n      </div>\n    `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction TimelineComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nTimelineComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTimelineComponent.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TabsetComponent } from './tabset.component';\nimport { TabsetService } from './tabset.service';\nimport { TabComponent } from './tab/tab.component';\nimport { TabHeadingDirective } from './tab/tab-heading.directive';\nimport { TabFocusDirective } from './tab/tab-focus.directive';\nexport class TabsetModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        CommonModule\n    ],\n    exports: [TabsetComponent, TabComponent, TabHeadingDirective],\n    declarations: [TabsetComponent, TabComponent, TabHeadingDirective, TabFocusDirective],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction TabsetModule_tsickle_Closure_declarations() {\n/** @type {?} */\nTabsetModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTabsetModule.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ElementRef, Input, OnDestroy, OnInit } from '@angular/core';\nimport { Subscription } from 'rxjs/Subscription';\nimport { filter } from 'rxjs/operators';\nimport { TabsetService } from '../tabset.service';\nimport { TabComponent } from './tab.component';\nexport class TabFocusDirective implements OnInit, OnDestroy {\n\n     uxTabFocus: TabComponent;\nprivate _subscription: Subscription;\n/**\n * @param {?} _tabset\n * @param {?} _elementRef\n */\nconstructor(private _tabset: TabsetService,\nprivate _elementRef: ElementRef) { }\n/**\n * @return {?}\n */\nngOnInit(): void {\n        this._subscription = this._tabset.highlighted$.pipe(\n            filter(() => this._tabset.focused$.value === true),\n            filter(() => this._tabset.highlighted$.value === this.uxTabFocus),\n        ).subscribe(() => this._elementRef.nativeElement.focus());\n    }\n/**\n * @return {?}\n */\nngOnDestroy(): void {\n        this._subscription.unsubscribe();\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: '[uxTabFocus]'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: TabsetService, },\n{type: ElementRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'uxTabFocus': [{ type: Input },],\n};\n}\n\nfunction TabFocusDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nTabFocusDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTabFocusDirective.ctorParameters;\n/** @type {?} */\nTabFocusDirective.propDecorators;\n/** @type {?} */\nTabFocusDirective.prototype.uxTabFocus;\n/** @type {?} */\nTabFocusDirective.prototype._subscription;\n/** @type {?} */\nTabFocusDirective.prototype._tabset;\n/** @type {?} */\nTabFocusDirective.prototype._elementRef;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, TemplateRef } from '@angular/core';\nimport { TabComponent } from './tab.component';\nexport class TabHeadingDirective {\n/**\n * @param {?} templateRef\n * @param {?} tab\n */\nconstructor(templateRef: TemplateRef<any>, tab: TabComponent) {\n        tab.headingRef = templateRef;\n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: '[uxTabHeading]'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: TemplateRef, },\n{type: TabComponent, },\n];\n}\n\nfunction TabHeadingDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nTabHeadingDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTabHeadingDirective.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, OnDestroy, Output, TemplateRef } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { Subscription } from 'rxjs/Subscription';\nimport { map } from 'rxjs/operators';\nimport { TabsetService } from '../tabset.service';\n\nlet /** @type {?} */ uniqueTabId = 0;\nexport class TabComponent implements OnDestroy {\n\n     id: string = `ux-tab-${++uniqueTabId}`;\n     disabled: boolean = false;\n     heading: string;\n     customClass: string;\n\n     select = new EventEmitter<void>();\n     deselect = new EventEmitter<void>();\n/**\n * @param {?} value\n * @return {?}\n */\nset active(value: boolean) {\n        if (value) {\n            this._tabset.select(this);\n        }\n    }\n\n    headingRef: TemplateRef<any>;\n    active$: Observable<boolean> = this._tabset.active$.pipe(map(active => active === this));\nprivate _subscription: Subscription;\n/**\n * @param {?} _tabset\n */\nconstructor(private _tabset: TabsetService) {\n        _tabset.add(this);\n\n        this._subscription = this.active$.subscribe(active => active ? this.select.emit() : this.deselect.emit());\n    }\n/**\n * @return {?}\n */\nngOnDestroy(): void {\n        this._tabset.remove(this);\n        this._subscription.unsubscribe();\n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-tab',\n    template: `\n      <div role=\"tabpanel\"\n           class=\"tab-pane\"\n           [class.active]=\"active$ | async\"\n           [id]=\"id + '-panel'\"\n           [attr.aria-labelledby]=\"id\"\n           [attr.aria-hidden]=\"!(active$ | async)\">\n        <ng-content></ng-content>\n      </div>\n    `,\n    changeDetection: ChangeDetectionStrategy.OnPush\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: TabsetService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'id': [{ type: Input },],\n'disabled': [{ type: Input },],\n'heading': [{ type: Input },],\n'customClass': [{ type: Input },],\n'select': [{ type: Output },],\n'deselect': [{ type: Output },],\n'active': [{ type: Input },],\n};\n}\n\nfunction TabComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nTabComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTabComponent.ctorParameters;\n/** @type {?} */\nTabComponent.propDecorators;\n/** @type {?} */\nTabComponent.prototype.id;\n/** @type {?} */\nTabComponent.prototype.disabled;\n/** @type {?} */\nTabComponent.prototype.heading;\n/** @type {?} */\nTabComponent.prototype.customClass;\n/** @type {?} */\nTabComponent.prototype.select;\n/** @type {?} */\nTabComponent.prototype.deselect;\n/** @type {?} */\nTabComponent.prototype.headingRef;\n/** @type {?} */\nTabComponent.prototype.active$;\n/** @type {?} */\nTabComponent.prototype._subscription;\n/** @type {?} */\nTabComponent.prototype._tabset;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { TabComponent } from './tab/tab.component';\nimport { TabsetService } from './tabset.service';\nexport class TabsetComponent {\n\n     minimal: boolean = true;\n     stacked: 'left' | 'right' | 'none' = 'none';\n     ariaLabel: string;\n/**\n * @param {?} tabset\n */\nconstructor(public tabset: TabsetService) { }\n/**\n * Allow manual tab selected\n * @param {?} tab\n * @return {?}\n */\nselect(tab: TabComponent): void {\n        this.tabset.select(tab);\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nselectPreviousTab(event: KeyboardEvent): void {\n\n        // determine which arrow key is pressed\n        const /** @type {?} */ arrowLeft = event.key === 'ArrowLeft' || event.keyCode === 37;\n        const /** @type {?} */ arrowUp = event.key === 'ArrowUp' || event.keyCode === 38;\n\n        // only perform action if the arrow key matches the orientation\n        if (arrowLeft && this.stacked !== 'none' || arrowUp && this.stacked === 'none') {\n            return;\n        }\n\n        // perform selection\n        this.tabset.selectPreviousTab();\n\n        // prevent the browser from scrolling when arrow keys are pressed\n        event.preventDefault();\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nselectNextTab(event: KeyboardEvent): void {\n\n        // determine which arrow key is pressed\n        const /** @type {?} */ arrowRight = event.key === 'ArrowRight' || event.keyCode === 39;\n        const /** @type {?} */ arrowDown = event.key === 'ArrowDown' || event.keyCode === 40;\n\n        // only perform action if the arrow key matches the orientation\n        if (arrowRight && this.stacked !== 'none' || arrowDown && this.stacked === 'none') {\n            return;\n        }\n\n        // perform selection\n        this.tabset.selectNextTab();\n\n        // prevent the browser from scrolling when arrow keys are pressed\n        event.preventDefault();\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-tabset',\n    template: `\n      <!-- Nav tabs -->\n      <ul role=\"tablist\"\n          class=\"nav nav-tabs\"\n          [class.minimal-tab]=\"minimal\"\n          [attr.aria-label]=\"ariaLabel\"\n          [attr.aria-orientation]=\"stacked === 'none' ? 'horizontal' : 'vertical'\">\n\n      \t<li role=\"presentation\" \n              class=\"nav-item\"\n              *ngFor=\"let tab of tabset.tabs$ | async; let index = index\"\n              [class.active]=\"tab.active$ | async\"\n              [class.disabled]=\"tab.disabled\"\n              [ngClass]=\"tab.customClass\">\n\n              <a class=\"nav-link\"\n                  [id]=\"tab.id\"\n                  role=\"tab\"\n                  [uxTabFocus]=\"tab\"\n                  [tabindex]=\"(tab.active$ | async) ? 0 : -1\"\n                  [class.highlighted]=\"(tabset.focused$ | async) && (tabset.highlighted$ | async) === tab\"            \n                  (mousedown)=\"tabset.select(tab)\"\n                  (focus)=\"tabset.focused$.next(true)\"\n                  (blur)=\"tabset.focused$.next(false)\"\n                  (mousedown)=\"tabset.focused$.next(true)\"\n                  (keydown.ArrowUp)=\"selectPreviousTab($event)\"\n                  (keydown.ArrowLeft)=\"selectPreviousTab($event)\"\n                  (keydown.ArrowRight)=\"selectNextTab($event)\"\n                  (keydown.ArrowDown)=\"selectNextTab($event)\"\n                  (keydown.Home)=\"tabset.selectFirstTab(); $event.preventDefault()\"\n                  (keydown.End)=\"tabset.selectLastTab(); $event.preventDefault()\"\n                  [attr.aria-controls]=\"tab.id\"\n                  [attr.aria-selected]=\"tab.active$ | async\"\n                  [attr.aria-disabled]=\"tab.disabled\">\n\n                  <span *ngIf=\"!tab.headingRef\">{{ tab.heading }}</span>\n\n                  <ng-container *ngIf=\"tab.headingRef\" [ngTemplateOutlet]=\"tab.headingRef\"></ng-container>\n              </a>\n\n      \t</li>\n\n      </ul>\n\n      <!-- Tab panes -->\n      <div class=\"tab-content\">\n      \t<ng-content></ng-content>\n      </div>\n    `,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [TabsetService],\n    host: {\n        '[class.tabs-left]': 'stacked === \"left\"',\n        '[class.tabs-right]': 'stacked === \"right\"',\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: TabsetService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'minimal': [{ type: Input },],\n'stacked': [{ type: Input },],\n'ariaLabel': [{ type: Input, args: ['aria-label', ] },],\n};\n}\n\nfunction TabsetComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nTabsetComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTabsetComponent.ctorParameters;\n/** @type {?} */\nTabsetComponent.propDecorators;\n/** @type {?} */\nTabsetComponent.prototype.minimal;\n/** @type {?} */\nTabsetComponent.prototype.stacked;\n/** @type {?} */\nTabsetComponent.prototype.ariaLabel;\n/** @type {?} */\nTabsetComponent.prototype.tabset;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { TabComponent } from './tab/tab.component';\nexport class TabsetService {\n\n    tabs$ = new BehaviorSubject<TabComponent[]>([]);\n    active$ = new BehaviorSubject<TabComponent>(null);\n    focused$ = new BehaviorSubject<boolean>(false);\n    highlighted$ = new BehaviorSubject<TabComponent>(null);\n/**\n * @param {?} tab\n * @return {?}\n */\nadd(tab: TabComponent): void {\n        this.tabs$.next([...this.tabs$.value, tab]);\n\n        // check if this is the only tab. If so select this by default\n        if (!this.active$.value) {\n            this.select(tab);\n        }\n    }\n/**\n * @param {?} tab\n * @return {?}\n */\nremove(tab: TabComponent): void {\n\n        // remove the tab\n        this.tabs$.next(this.tabs$.value.filter(_tab => _tab !== tab));\n    }\n/**\n * @param {?} tab\n * @return {?}\n */\nselect(tab: TabComponent): void {\n        if (!tab.disabled) {\n            this.active$.next(tab);\n            this.highlighted$.next(tab);\n        }\n    }\n/**\n * @param {?} index\n * @return {?}\n */\nselectAtIndex(index: number): void {\n\n        // if there are no tabs then do nothing\n        if (this.tabs$.value.length === 0) {\n            return;\n        }\n\n        // check if the index is within the bounds\n        if (index < 0) {\n            return this.selectAtIndex(this.tabs$.value.length - 1);\n        } else if (index >= this.tabs$.value.length) {\n            return this.selectAtIndex(0);\n        }\n\n        const /** @type {?} */ target = this.tabs$.value[index];\n\n        if (target) {\n            this.select(target);\n        }\n    }\n/**\n * @return {?}\n */\nselectNextTab(): void {\n        // find the currently selected index\n        const /** @type {?} */ index = this.tabs$.value.indexOf(this.active$.value);\n\n        // check the tabs after the active one to see if there are any selectable tabs\n        const /** @type {?} */ tabs = this.tabs$.value.slice(index + 1);\n\n        // check if any of the tabs are not disabled\n        for (let /** @type {?} */ tab of tabs) {\n            if (!tab.disabled) {\n                return this.select(tab);\n            }\n        }\n\n        // if we reach here then no tab could be selected - select the first tab\n        this.selectFirstTab();\n    }\n/**\n * @return {?}\n */\nselectPreviousTab(): void {\n        // find the currently selected index\n        const /** @type {?} */ index = this.tabs$.value.indexOf(this.active$.value);\n\n        // check the tabs before the active one to see if there are any selectable tabs\n        const /** @type {?} */ tabs = this.tabs$.value.slice(0, index);\n\n        // check if any of the tabs are not disabled\n        for (let /** @type {?} */ tab of tabs.reverse()) {\n            if (!tab.disabled) {\n                return this.select(tab);\n            }\n        }\n\n        // if we reach here then no previous tab could be selected - select the last tab\n        this.selectLastTab();\n    }\n/**\n * @return {?}\n */\nselectFirstTab(): void {\n        // find the index of the first non-disabled tab\n        const /** @type {?} */ tabIndex = this.tabs$.value.findIndex(tab => !tab.disabled);\n\n        if (tabIndex !== -1) {\n            this.selectAtIndex(tabIndex);\n        }\n    }\n/**\n * @return {?}\n */\nselectLastTab(): void {\n        // find the index of the first non-disabled tab\n        const /** @type {?} */ tabIndex = this.tabs$.value.slice().reverse().findIndex(tab => !tab.disabled);\n\n        if (tabIndex !== -1) {\n            this.selectAtIndex((this.tabs$.value.length - 1) - tabIndex);\n        }\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction TabsetService_tsickle_Closure_declarations() {\n/** @type {?} */\nTabsetService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTabsetService.ctorParameters;\n/** @type {?} */\nTabsetService.prototype.tabs$;\n/** @type {?} */\nTabsetService.prototype.active$;\n/** @type {?} */\nTabsetService.prototype.focused$;\n/** @type {?} */\nTabsetService.prototype.highlighted$;\n}\n \ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { SparkComponent } from './spark.component';\nimport { ColorServiceModule } from '../../services/color/index';\nimport { TooltipModule } from '../tooltip/index';\nexport class SparkModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        CommonModule,\n        ColorServiceModule,\n        TooltipModule\n    ],\n    exports: [SparkComponent],\n    declarations: [SparkComponent]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction SparkModule_tsickle_Closure_declarations() {\n/** @type {?} */\nSparkModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSparkModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Input, ChangeDetectionStrategy } from '@angular/core';\nimport { ColorService } from '../../services/color/index';\nimport { ColorIdentifier } from '../../index';\nexport class SparkComponent {\n\n    values: number[] = [];\n\n     barHeight: number = 10;\n     inlineLabel: string;\n     topLeftLabel: string;\n     topRightLabel: string;\n     bottomLeftLabel: string;\n     bottomRightLabel: string;\n     tooltip: string;\nprivate _trackColor: string;\nprivate _theme: ColorIdentifier = 'primary';\nprivate _barColor: string | string[] = [];\n/**\n * @param {?} value\n * @return {?}\n */\nset theme(value: string) {\n        this._theme = this._colorService.resolveColorName(value);\n    }\n/**\n * @return {?}\n */\nget theme(): string {\n        return this._theme;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset trackColor(value: string) {\n        this._trackColor = this._colorService.resolve(value);\n    }\n/**\n * @return {?}\n */\nget trackColor(): string {\n        return this._trackColor;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset barColor(value: string | string[]) {\n\n        if (Array.isArray(value)) {\n            this._barColor = value.map(color => this._colorService.resolve(color));\n        } else {\n            this._barColor = [this._colorService.resolve(value)];\n        }\n    }\n/**\n * @return {?}\n */\nget barColor(): string | string[] {\n        return this._barColor;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset value(value: number | number[]) {\n\n        // ensure 'value' is an array at this point\n        const /** @type {?} */ values = Array.isArray(value) ? value : [value];\n\n        // get the total value of all lines\n        const /** @type {?} */ total = Math.max(values.reduce((previous, current) => previous + current, 0), 100);\n\n        // figure out the percentages for each spark line\n        this.values = values.map(val => (val / total) * 100);\n    }\n/**\n * @return {?}\n */\nget value() {\n        return this.values;\n    }\n/**\n * @param {?} _colorService\n */\nconstructor(private _colorService: ColorService) { }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-spark',\n    template: `\n      <!-- Inline Spark Chart -->\n      <div *ngIf=\"inlineLabel\" class=\"ux-spark-inline-label-container\">\n\n          <div class=\"ux-spark-inline-label-left\" [innerHtml]=\"inlineLabel\"></div>\n\n          <div class=\"ux-spark-line\">\n\n              <div class=\"ux-spark-top-container\" *ngIf=\"topLeftLabel || topRightLabel\">\n                  <div class=\"ux-spark-label-top-left\" *ngIf=\"topLeftLabel\" [innerHtml]=\"topLeftLabel\"></div>\n                  <div class=\"ux-spark-label-top-right\" *ngIf=\"topRightLabel\" [innerHtml]=\"topRightLabel\"></div>\n              </div>\n\n              <div class=\"ux-spark ux-inline ux-spark-theme-{{theme}}\" [style.height.px]=\"barHeight\" [style.backgroundColor]=\"trackColor\" [uxTooltip]=\"tooltip\">\n                  <div class=\"ux-spark-bar\" *ngFor=\"let line of values; let idx = index;\" [style.width.%]=\"line\" [style.backgroundColor]=\"barColor[idx]\"></div>\n              </div>\n\n              <div class=\"ux-spark-bottom-container\" *ngIf=\"bottomLeftLabel || bottomRightLabel\">\n                  <div class=\"ux-spark-label-bottom-left\" *ngIf=\"bottomLeftLabel\" [innerHtml]=\"bottomLeftLabel\"></div>\n                  <div class=\"ux-spark-label-bottom-right\" *ngIf=\"bottomRightLabel\" [innerHtml]=\"bottomRightLabel\"></div>\n              </div>\n\n          </div>\n      </div>\n\n      <!-- End Inline Spark Chart -->\n\n\n      <!-- Non Inline Spark Chart -->\n      <div *ngIf=\"!inlineLabel\">\n\n          <div class=\"ux-spark-top-container\" *ngIf=\"topLeftLabel || topRightLabel\">\n              <div class=\"ux-spark-label-top-left\" *ngIf=\"topLeftLabel\" [innerHtml]=\"topLeftLabel\"></div>\n              <div class=\"ux-spark-label-top-right\" *ngIf=\"topRightLabel\" [innerHtml]=\"topRightLabel\"></div>\n          </div>\n\n          <div class=\"ux-spark ux-spark-theme-{{theme}}\" [class.ux-spark-multi-value]=\"values.length > 1\" [style.height.px]=\"barHeight\" [style.backgroundColor]=\"trackColor\"\n              [uxTooltip]=\"tooltip\">\n              <div class=\"ux-spark-bar\" *ngFor=\"let line of value; let idx = index;\" [style.width.%]=\"line\" [style.backgroundColor]=\"barColor[idx]\"></div>\n          </div>\n\n          <div class=\"ux-spark-bottom-container\" *ngIf=\"bottomLeftLabel || bottomRightLabel\">\n              <div class=\"ux-spark-label-bottom-left\" *ngIf=\"bottomLeftLabel\" [innerHtml]=\"bottomLeftLabel\"></div>\n              <div class=\"ux-spark-label-bottom-right\" *ngIf=\"bottomRightLabel\" [innerHtml]=\"bottomRightLabel\"></div>\n          </div>\n      </div>\n\n      <!-- End Non Inline Spark Chart -->\n    `,\n    changeDetection: ChangeDetectionStrategy.OnPush\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ColorService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'barHeight': [{ type: Input },],\n'inlineLabel': [{ type: Input },],\n'topLeftLabel': [{ type: Input },],\n'topRightLabel': [{ type: Input },],\n'bottomLeftLabel': [{ type: Input },],\n'bottomRightLabel': [{ type: Input },],\n'tooltip': [{ type: Input },],\n'theme': [{ type: Input },],\n'trackColor': [{ type: Input },],\n'barColor': [{ type: Input },],\n'value': [{ type: Input },],\n};\n}\n\nfunction SparkComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nSparkComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSparkComponent.ctorParameters;\n/** @type {?} */\nSparkComponent.propDecorators;\n/** @type {?} */\nSparkComponent.prototype.values;\n/** @type {?} */\nSparkComponent.prototype.barHeight;\n/** @type {?} */\nSparkComponent.prototype.inlineLabel;\n/** @type {?} */\nSparkComponent.prototype.topLeftLabel;\n/** @type {?} */\nSparkComponent.prototype.topRightLabel;\n/** @type {?} */\nSparkComponent.prototype.bottomLeftLabel;\n/** @type {?} */\nSparkComponent.prototype.bottomRightLabel;\n/** @type {?} */\nSparkComponent.prototype.tooltip;\n/** @type {?} */\nSparkComponent.prototype._trackColor;\n/** @type {?} */\nSparkComponent.prototype._theme;\n/** @type {?} */\nSparkComponent.prototype._barColor;\n/** @type {?} */\nSparkComponent.prototype._colorService;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ColorServiceModule } from '../../services/color/index';\n\nimport { SliderComponent } from './slider.component';\nimport { DragModule } from '../../directives/drag/index';\nexport class SliderModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        CommonModule,\n        ColorServiceModule,\n        DragModule\n    ],\n    exports: [SliderComponent],\n    declarations: [SliderComponent]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction SliderModule_tsickle_Closure_declarations() {\n/** @type {?} */\nSliderModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSliderModule.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { AfterViewInit, ChangeDetectionStrategy, ChangeDetectorRef, Component, DoCheck, ElementRef, EventEmitter, Input, OnInit, Output, ViewChild } from '@angular/core';\nimport { ColorService } from '../../services/color/index';\nexport class SliderComponent implements OnInit, AfterViewInit, DoCheck {\n\n     value: SliderValue | number = 0;\n     options: SliderOptions;\n     valueChange: EventEmitter<SliderValue | number> = new EventEmitter<SliderValue | number>();\n\n     lowerTooltip: ElementRef;\n     upperTooltip: ElementRef;\n     track: ElementRef;\nprivate _value: SliderValue | number;\n\n    // expose enums to Angular view\n    sliderType = SliderType;\n    sliderStyle = SliderStyle;\n    sliderSize = SliderSize;\n    sliderSnap = SliderSnap;\n    sliderThumb = SliderThumb;\n    sliderTickType = SliderTickType;\n    sliderThumbEvent = SliderThumbEvent;\n    sliderCalloutTrigger = SliderCalloutTrigger;\n\n    tracks = {\n        lower: {\n            size: 0,\n            color: ''\n        },\n        middle: {\n            size: 0,\n            color: ''\n        },\n        upper: {\n            size: 0,\n            color: ''\n        }\n    };\n\n    tooltips = {\n        lower: {\n            visible: false,\n            position: 0,\n            label: ''\n        },\n        upper: {\n            visible: false,\n            position: 0,\n            label: ''\n        }\n    };\n\n    thumbs = {\n        lower: {\n            hover: false,\n            drag: false,\n            position: 0,\n            order: 100,\n            value: /** @type {?} */(( null as number))\n        },\n        upper: {\n            hover: false,\n            drag: false,\n            position: 0,\n            order: 101,\n            value: /** @type {?} */(( null as number))\n        }\n    };\n\n    // store all the ticks to display\n    ticks: SliderTick[] = [];\n    defaultOptions: SliderOptions;\n/**\n * @param {?} colorService\n * @param {?} _changeDetectorRef\n */\nconstructor(colorService: ColorService,\nprivate _changeDetectorRef: ChangeDetectorRef) {\n\n        // setup default options\n        this.defaultOptions = {\n            type: SliderType.Value,\n            handles: {\n                style: SliderStyle.Button,\n                callout: {\n                    trigger: SliderCalloutTrigger.None,\n                    background: colorService.getColor('grey2').toHex(),\n                    color: '#fff',\n                    formatter: (value: number): string | number => value\n                },\n                keyboard: {\n                    major: 5,\n                    minor: 1\n                },\n                aria: {\n                    thumb: 'Slider value',\n                    lowerThumb: 'Slider lower value',\n                    upperThumb: 'Slider upper value'\n                }\n            },\n            track: {\n                height: SliderSize.Wide,\n                min: 0,\n                max: 100,\n                ticks: {\n                    snap: SliderSnap.None,\n                    major: {\n                        show: true,\n                        steps: 10,\n                        labels: true,\n                        formatter: (value: number): string | number => value\n                    },\n                    minor: {\n                        show: true,\n                        steps: 5,\n                        labels: false,\n                        formatter: (value: number): string | number => value\n                    }\n                },\n                colors: {\n                    lower: colorService.getColor('grey6').toHex(),\n                    range: colorService.getColor('accent').setAlpha(0.75).toRgba(),\n                    higher: colorService.getColor('grey6').toHex()\n                }\n            }\n        };\n    }\n/**\n * @return {?}\n */\nngOnInit(): void {\n\n        this.updateOptions();\n        this.updateValues();\n\n        this.setThumbState(SliderThumb.Lower, false, false);\n        this.setThumbState(SliderThumb.Upper, false, false);\n\n        // emit the initial value\n        this.valueChange.next(this.clone(this.value));\n    }\n/**\n * @return {?}\n */\nngDoCheck(): void {\n\n        if (this.detectValueChange(this.value, this._value)) {\n            this.updateValues();\n            this._value = this.clone(this.value);\n        }\n    }\n/**\n * @return {?}\n */\nngAfterViewInit(): void {\n        // persistent tooltips will need positioned correctly at this stage\n        setTimeout(() => {\n            this.updateTooltipPosition(SliderThumb.Lower);\n            this.updateTooltipPosition(SliderThumb.Upper);\n\n            // mark as dirty\n            this._changeDetectorRef.markForCheck();\n        });\n    }\n/**\n * @param {?} thumb\n * @param {?} snapTarget\n * @param {?} forwards\n * @return {?}\n */\nsnapToNearestTick(thumb: SliderThumb, snapTarget: SliderSnap, forwards: boolean): void {\n\n        // get the value for the thumb\n        const { value } = this.getThumbState(thumb);\n\n        // get the closest ticks - remove any tick if we are currently on it\n        const /** @type {?} */ closest = this.getTickDistances(value, thumb, snapTarget)\n            .filter(tick => tick.value !== value)\n            .find(tick => forwards ? tick.value > value : tick.value < value);\n\n        // If we have no ticks then move by a predefined amount\n        if (closest) {\n            return this.setThumbValue(thumb, this.validateValue(thumb, closest.value));\n        }\n\n        const /** @type {?} */ step = snapTarget === SliderSnap.Major ? this.options.handles.keyboard.major : this.options.handles.keyboard.minor;\n\n        this.setThumbValue(thumb, this.validateValue(thumb, value + (forwards ? step : -step)));\n\n    }\n/**\n * @param {?} thumb\n * @param {?} forwards\n * @return {?}\n */\nsnapToEnd(thumb: SliderThumb, forwards: boolean): void {\n        this.setThumbValue(thumb, this.validateValue(thumb, forwards ? this.options.track.max : this.options.track.min));\n    }\n/**\n * @param {?} thumb\n * @return {?}\n */\ngetThumbValue(thumb: SliderThumb): number {\n        return this.getThumbState(thumb).value;\n    }\n/**\n * @param {?} thumb\n * @return {?}\n */\ngetFormattedValue(thumb: SliderThumb): string | number {\n        return this.options.handles.callout.formatter(this.getThumbState(thumb).value);\n    }\n/**\n * @param {?} thumb\n * @return {?}\n */\nprivate getThumbState(thumb: SliderThumb) {\n        return thumb === SliderThumb.Lower ? this.thumbs.lower : this.thumbs.upper;\n    }\n/**\n * @param {?} thumb\n * @param {?} hover\n * @param {?} drag\n * @return {?}\n */\nprivate setThumbState(thumb: SliderThumb, hover: boolean, drag: boolean) {\n\n        if (thumb === SliderThumb.Lower) {\n            this.thumbs.lower.hover = hover;\n            this.thumbs.lower.drag = drag;\n        } else {\n            this.thumbs.upper.hover = hover;\n            this.thumbs.upper.drag = drag;\n        }\n\n        // update the visibility of the tooltips\n        this.updateTooltips(thumb);\n    }\n/**\n * @param {?} thumb\n * @param {?} event\n * @return {?}\n */\nthumbEvent(thumb: SliderThumb, event: SliderThumbEvent): void {\n\n        // get the current thumb state\n        const /** @type {?} */ state = this.getThumbState(thumb);\n\n        // update based upon event\n        switch (event) {\n\n            case SliderThumbEvent.DragStart:\n                state.drag = true;\n                break;\n\n            case SliderThumbEvent.DragEnd:\n                state.drag = false;\n                break;\n\n            case SliderThumbEvent.MouseOver:\n                state.hover = true;\n                break;\n\n            case SliderThumbEvent.MouseLeave:\n                state.hover = false;\n                break;\n\n            case SliderThumbEvent.None:\n                state.drag = false;\n                state.hover = false;\n                break;\n        }\n\n        // update the thumb state\n        this.setThumbState(thumb, state.hover, state.drag);\n    }\n/**\n * @param {?} thumb\n * @return {?}\n */\ngetAriaValueText(thumb: SliderThumb): string | number {\n        // get the current thumb value\n        const /** @type {?} */ value = this.getThumbValue(thumb);\n\n        // get all the ticks\n        const /** @type {?} */ tick = this.ticks.find(_tick => _tick.value === value);\n\n        if (tick && tick.label) {\n            return tick.label;\n        }\n\n        // otherwise simply display the formatted value\n        return this.getFormattedValue(thumb);\n    }\n/**\n * @param {?} thumb\n * @return {?}\n */\nprivate updateTooltips(thumb: SliderThumb): void {\n\n        let /** @type {?} */ visible = false;\n        const /** @type {?} */ state = this.getThumbState(thumb);\n\n        switch (this.options.handles.callout.trigger) {\n\n            case SliderCalloutTrigger.Persistent:\n                visible = true;\n                break;\n\n            case SliderCalloutTrigger.Drag:\n                visible = state.drag;\n                break;\n\n            case SliderCalloutTrigger.Hover:\n                visible = state.hover || state.drag;\n                break;\n\n            case SliderCalloutTrigger.Dynamic:\n                visible = true;\n                break;\n        }\n\n        // update the state for the corresponding thumb\n        this.getTooltip(thumb).visible = visible;\n\n        // update the tooltip text\n        this.updateTooltipText(thumb);\n\n        // update the tooltip positions\n        this.updateTooltipPosition(thumb);\n    }\n/**\n * @param {?} thumb\n * @return {?}\n */\nprivate updateTooltipText(thumb: SliderThumb) {\n\n        // get the thumb value\n        let /** @type {?} */ state = this.getThumbState(thumb);\n        let /** @type {?} */ tooltip = this.getTooltip(thumb);\n\n        // store the formatted label\n        tooltip.label = this.getFormattedValue(thumb).toString();\n    }\n/**\n * @param {?} thumb\n * @return {?}\n */\nprivate getTooltipElement(thumb: SliderThumb): ElementRef {\n        return thumb === SliderThumb.Lower ? this.lowerTooltip : this.upperTooltip;\n    }\n/**\n * @param {?} thumb\n * @return {?}\n */\nprivate getTooltip(thumb: SliderThumb) {\n        return thumb === SliderThumb.Lower ? this.tooltips.lower : this.tooltips.upper;\n    }\n/**\n * @param {?} thumb\n * @return {?}\n */\nprivate updateTooltipPosition(thumb: SliderThumb): void {\n\n        const /** @type {?} */ tooltip = this.getTooltip(thumb);\n\n        // if tooltip is not visible then stop here\n        if (tooltip.visible === false) {\n            return;\n        }\n\n        let /** @type {?} */ tooltipElement = this.getTooltipElement(thumb);\n\n        // get the element widths\n        let /** @type {?} */ thumbWidth: number;\n\n        if (this.options.handles.style === SliderStyle.Button) {\n            thumbWidth = this.options.track.height === SliderSize.Narrow ? 16 : 24;\n        } else {\n            thumbWidth = 2;\n        }\n\n        let /** @type {?} */ tooltipWidth = tooltipElement.nativeElement.offsetWidth;\n\n        // calculate the tooltips new position\n        let /** @type {?} */ tooltipPosition = Math.ceil((tooltipWidth - thumbWidth) / 2);\n\n        // update tooltip position\n        tooltip.position = -tooltipPosition;\n\n        if (this.options.type === SliderType.Range && this.options.handles.callout.trigger === SliderCalloutTrigger.Dynamic) {\n            this.preventTooltipOverlap(tooltip);\n        }\n    }\n/**\n * @param {?} tooltip\n * @return {?}\n */\nprivate preventTooltipOverlap(tooltip: any): void {\n        const /** @type {?} */ trackWidth = this.track.nativeElement.offsetWidth;\n\n        const /** @type {?} */ lower = (trackWidth / 100) * this.thumbs.lower.position;\n        const /** @type {?} */ upper = (trackWidth / 100) * this.thumbs.upper.position;\n\n        const /** @type {?} */ lowerWidth = this.lowerTooltip.nativeElement.offsetWidth / 2;\n        const /** @type {?} */ upperWidth = this.upperTooltip.nativeElement.offsetWidth / 2;\n\n        const /** @type {?} */ diff = (lower + lowerWidth) - (upper - upperWidth);\n\n        // if the tooltips are closer than 16px then adjust so the dont move any close\n        if (diff > 0) {\n            if (tooltip === this.tooltips.lower && this.thumbs.lower.drag === false) {\n                tooltip.position -= (diff / 2);\n            } else if (tooltip === this.tooltips.upper && this.thumbs.upper.drag === false) {\n                tooltip.position += (diff / 2);\n            }\n        }\n    }\n/**\n * @param {?} value\n * @param {?} min\n * @param {?} max\n * @return {?}\n */\nprivate clamp(value: number, min: number, max: number): number {\n        return Math.min(Math.max(value, min), max);\n    }\n/**\n * @param {?} event\n * @param {?} thumb\n * @return {?}\n */\nupdateThumbPosition(event: MouseEvent | TouchEvent, thumb: SliderThumb): void {\n\n        // get event position - either mouse or touch\n        let /** @type {?} */ eventPosition = event instanceof MouseEvent ? event.clientX : event.touches && event.touches.length > 0 ? event.touches[0].clientX : null;\n\n        // if event position is null do nothing\n        if (eventPosition === null) {\n            return;\n        }\n\n        // get mouse position\n        let /** @type {?} */ mouseX = window.pageXOffset + eventPosition;\n\n        // get track size and position\n        let /** @type {?} */ trackBounds = this.track.nativeElement.getBoundingClientRect();\n\n        // restrict the value within the range size\n        let /** @type {?} */ position = this.clamp(mouseX - trackBounds.left, 0, trackBounds.width);\n\n        // get fraction representation of location within the track\n        let /** @type {?} */ fraction = (position / trackBounds.width);\n\n        // convert to value within the range\n        let /** @type {?} */ value = ((this.options.track.max - this.options.track.min) * fraction) + this.options.track.min;\n\n        // ensure value is valid\n        value = this.validateValue(thumb, value);\n\n        // snap to a tick if required\n        value = this.snapToTick(value, thumb);\n\n        // update the value accordingly\n        this.setThumbValue(thumb, value);\n\n        this.updateOrder(thumb);\n        this.updateValues();\n\n        // update tooltip text & position\n        this.updateTooltipText(thumb);\n\n        // update the position of all visible tooltips\n        this.updateTooltipPosition(SliderThumb.Lower);\n        this.updateTooltipPosition(SliderThumb.Upper);\n\n        // mark as dirty for change detection\n        this._changeDetectorRef.markForCheck();\n    }\n/**\n * @param {?} thumb\n * @return {?}\n */\nprivate updateOrder(thumb: SliderThumb): void {\n\n        let /** @type {?} */ lower = thumb === SliderThumb.Lower ? 101 : 100;\n        let /** @type {?} */ upper = thumb === SliderThumb.Lower ? 100 : 101;\n\n        // The most recently used thumb should be above\n        this.thumbs.lower.order = lower;\n        this.thumbs.upper.order = upper;\n    }\n/**\n * @param {?} value\n * @param {?} thumb\n * @param {?} snapTarget\n * @return {?}\n */\nprivate getTickDistances(value: number, thumb: SliderThumb, snapTarget: SliderSnap): SliderTick[] {\n\n        // if snap target is none then return original value\n        if (snapTarget === SliderSnap.None) {\n            return [];\n        }\n\n        // get filtered ticks\n        let /** @type {?} */ ticks: SliderTick[];\n\n        switch (snapTarget) {\n\n            case SliderSnap.Minor:\n                ticks = this.ticks.filter(tick => tick.type === SliderTickType.Minor);\n                break;\n\n            case SliderSnap.Major:\n                ticks = this.ticks.filter(tick => tick.type === SliderTickType.Major);\n                break;\n\n            default:\n                ticks = this.ticks.slice(0);\n        }\n\n        // get the track limit\n        let /** @type {?} */ lowerLimit = this.options.track.min;\n        let /** @type {?} */ upperLimit = this.options.track.max;\n\n        if (this.options.type === SliderType.Range && thumb === SliderThumb.Lower) {\n            upperLimit = this.thumbs.upper.value;\n        }\n\n        if (this.options.type === SliderType.Range && thumb === SliderThumb.Upper) {\n            lowerLimit = this.thumbs.lower.value;\n        }\n\n        // Find the closest tick to the current position\n        const /** @type {?} */ range = ticks.filter(tick => tick.value >= lowerLimit && tick.value <= upperLimit);\n\n        // If there are no close ticks in the valid range then dont snap\n        if (range.length === 0) {\n            return [];\n        }\n\n        return range.sort((tickOne, tickTwo) => {\n\n            const /** @type {?} */ tickOneDelta = Math.max(tickOne.value, value) - Math.min(tickOne.value, value);\n            const /** @type {?} */ tickTwoDelta = Math.max(tickTwo.value, value) - Math.min(tickTwo.value, value);\n            \n            return tickOneDelta - tickTwoDelta;\n        });\n    }\n/**\n * @param {?} value\n * @param {?} thumb\n * @return {?}\n */\nprivate snapToTick(value: number, thumb: SliderThumb): number {\n\n        const /** @type {?} */ tickDistances = this.getTickDistances(value, thumb, this.options.track.ticks.snap);\n\n        // if there are no ticks return the current value\n        if (tickDistances.length === 0) {\n            return value;\n        }\n\n        // get the closest tick\n        return tickDistances[0].value;\n    }\n/**\n * @param {?} thumb\n * @param {?} value\n * @return {?}\n */\nprivate validateValue(thumb: SliderThumb, value: number): number {\n\n        // if slider is not a range value is always valid providing it is within the chart min and max values\n        if (this.options.type === SliderType.Value) {\n            return Math.max(Math.min(value, this.options.track.max), this.options.track.min);\n        }\n\n        // check if value is with chart ranges\n        if (value > this.options.track.max) {\n            return thumb === SliderThumb.Lower ? Math.min(this.options.track.max, this.thumbs.upper.value) : this.options.track.max;\n        }\n\n        if (value < this.options.track.min) {\n            return thumb === SliderThumb.Upper ? Math.max(this.options.track.min, this.thumbs.lower.value) : this.options.track.min;\n        }\n\n        // otherwise we need to check to make sure lower thumb cannot go above higher and vice versa\n        if (thumb === SliderThumb.Lower) {\n\n            if (this.thumbs.upper.value === null) {\n                return value;\n            }\n\n            return value <= this.thumbs.upper.value ? value : this.thumbs.upper.value;\n        }\n\n        if (thumb === SliderThumb.Upper) {\n\n            if (this.thumbs.lower.value === null) {\n                return value;\n            }\n\n            return value >= this.thumbs.lower.value ? value : this.thumbs.lower.value;\n        }\n    }\n/**\n * @return {?}\n */\nprivate updateOptions(): void {\n\n        // add in the default options that user hasn't specified\n        this.options = this.deepMerge(this.options || {}, this.defaultOptions);\n\n        this.updateTrackColors();\n        this.updateTicks();\n        this.updateValues();\n    }\n/**\n * @return {?}\n */\nprivate updateValues(): void {\n\n        if (this.value === undefined || this.value === null) {\n            this.value = 0;\n        }\n\n        let /** @type {?} */ lowerValue = typeof this.value === 'number' ? this.value : this.value.low;\n        let /** @type {?} */ upperValue = typeof this.value === 'number' ? this.value : this.value.high;\n\n        // validate values\n        lowerValue = this.validateValue(SliderThumb.Lower, Number(lowerValue.toFixed(4)));\n        upperValue = this.validateValue(SliderThumb.Upper, Number(upperValue.toFixed(4)));\n\n        // calculate the positions as percentages\n        let /** @type {?} */ lowerPosition = (((lowerValue - this.options.track.min) / (this.options.track.max - this.options.track.min)) * 100);\n        let /** @type {?} */ upperPosition = (((upperValue - this.options.track.min) / (this.options.track.max - this.options.track.min)) * 100);\n\n        // update thumb positions\n        this.thumbs.lower.position = lowerPosition;\n        this.thumbs.upper.position = upperPosition;\n\n        // calculate the track sizes\n        this.tracks.lower.size = lowerPosition;\n        this.tracks.middle.size = upperPosition - lowerPosition;\n        this.tracks.upper.size = this.options.type === SliderType.Value ? 100 - lowerPosition : 100 - upperPosition;\n\n        // update the value input\n        this.setValue(lowerValue, upperValue);\n    }\n/**\n * @param {?} low\n * @param {?=} high\n * @return {?}\n */\nprivate setValue(low: number, high?: number): void {\n\n        this.thumbs.lower.value = low;\n        this.thumbs.upper.value = high;\n\n        let /** @type {?} */ previousValue = this.clone(this._value);\n\n        this.value = this.options.type === SliderType.Value ? low : { low: low, high: high };\n\n        // call the event emitter if changes occured\n        if (this.detectValueChange(this.value, previousValue)) {\n            this.valueChange.emit(this.clone(this.value));\n\n            this.updateTooltipText(SliderThumb.Lower);\n            this.updateTooltipText(SliderThumb.Upper);\n        } else {\n            this.valueChange.emit(this.clone(this.value));\n        }\n    }\n/**\n * @param {?} thumb\n * @param {?} value\n * @return {?}\n */\nprivate setThumbValue(thumb: SliderThumb, value: number): void {\n\n        // update the thumb value\n        this.getThumbState(thumb).value = value;\n\n        // forward these changes to the value\n        this.setValue(this.thumbs.lower.value, this.thumbs.upper.value);\n    }\n/**\n * @return {?}\n */\nprivate updateTicks(): void {\n\n        // get tick options\n        const /** @type {?} */ majorOptions = this.options.track.ticks.major;\n        const /** @type {?} */ minorOptions = this.options.track.ticks.minor;\n\n        // check if we should show ticks\n        if (majorOptions.show === false && minorOptions.show === false) {\n            this.ticks = [];\n        }\n\n        // create ticks for both major and minor - only get the ones to be shown\n        const /** @type {?} */ majorTicks = this.getTicks(majorOptions, SliderTickType.Major).filter(tick => tick.showTicks);\n        const /** @type {?} */ minorTicks = this.getTicks(minorOptions, SliderTickType.Minor).filter(tick => tick.showTicks);\n\n        // remove any minor ticks that are on a major interval\n        this.ticks = this.unionTicks(majorTicks, minorTicks);\n    }\n/**\n * @return {?}\n */\nprivate updateTrackColors(): void {\n\n        // get colors for each part of the track\n        const { lower, range, higher } = this.options.track.colors;\n\n        // update the controller value\n        this.tracks.lower.color = typeof lower === 'string' ? lower : `linear-gradient(to right, ${lower.join(', ')})`;\n        this.tracks.middle.color = typeof range === 'string' ? range : `linear-gradient(to right, ${range.join(', ')})`;\n        this.tracks.upper.color = typeof higher === 'string' ? higher : `linear-gradient(to right, ${higher.join(', ')})`;\n    }\n/**\n * @param {?} steps\n * @return {?}\n */\nprivate getSteps(steps: number | number[]): number[] {\n\n        // if they are already an array just return it\n        if (steps instanceof Array) {\n            return steps;\n        }\n\n        let /** @type {?} */ output: number[] = [];\n\n        // otherwise calculate the steps\n        for (let /** @type {?} */ idx = this.options.track.min; idx <= this.options.track.max; idx += steps) {\n            output.push(idx);\n        }\n\n        return output;\n    }\n/**\n * @param {?} options\n * @param {?} type\n * @return {?}\n */\nprivate getTicks(options: SliderTickOptions, type: SliderTickType): SliderTick[] {\n\n        // create an array to store the ticks and step points\n        let /** @type {?} */ steps = this.getSteps(options.steps);\n\n        // get some chart options\n        let /** @type {?} */ min = this.options.track.min;\n        let /** @type {?} */ max = this.options.track.max;\n\n        // convert each step to a slider tick and remove invalid ticks\n        return steps.map(step => {\n            return {\n                showTicks: options.show,\n                showLabels: options.labels,\n                type: type,\n                position: ((step - min) / (max - min)) * 100,\n                value: step,\n                label: options.formatter(step)\n            };\n        }).filter(tick => tick.position >= 0 && tick.position <= 100);\n    }\n/**\n * @param {?} majorTicks\n * @param {?} minorTicks\n * @return {?}\n */\nprivate unionTicks(majorTicks: SliderTick[], minorTicks: SliderTick[]): SliderTick[] {\n\n        // get all ticks combined removing any minor ticks with the same value as major ticks\n        return majorTicks.concat(minorTicks)\n            .filter((tick, index, array) => tick.type === SliderTickType.Major || !array.find(tk => tk.type === SliderTickType.Major && tk.position === tick.position))\n            .sort((t1, t2) => t1.value - t2.value);\n    }\n/**\n * @template T\n * @param {?} destination\n * @param {?} source\n * @return {?}\n */\nprivate deepMerge<T>(destination: T, source: T): T {\n\n        // loop though all of the properties in the source object\n        for (let /** @type {?} */ prop in source) {\n\n            // check if the destination object has the property\n            if (!destination.hasOwnProperty(prop)) {\n                // copy the property across\n                destination[prop] = source[prop];\n                continue;\n            }\n\n            // if the property exists and is not an object then skip\n            if (typeof destination[prop] !== 'object') {\n                continue;\n            }\n\n            // check if property is an array\n            if (destination[prop] instanceof Array) {\n                continue;\n            }\n\n            // if it is an object then perform a recursive check\n            destination[prop] = this.deepMerge(destination[prop], source[prop]);\n        }\n\n        return destination;\n    }\n/**\n * @param {?} value1\n * @param {?} value2\n * @return {?}\n */\nprivate detectValueChange(value1: number | SliderValue, value2: number | SliderValue): boolean {\n\n        // compare two slider values\n        if (this.isSliderValue(value1) && this.isSliderValue(value2)) {\n\n            // references to the objects in the correct types\n            const /** @type {?} */ obj1 = /** @type {?} */(( value1 as SliderValue));\n            const /** @type {?} */ obj2 = /** @type {?} */(( value2 as SliderValue));\n\n            return obj1.low !== obj2.low || obj1.high !== obj2.high;\n        }\n\n        // if not a slider value - should be number of nullable type - compare normally\n        return value1 !== value2;\n    }\n/**\n * Determines whether or not an object conforms to the\n * SliderValue interface.\n * @param {?} value - The object to check - this must be type any\n * @return {?}\n */\nprivate isSliderValue(value: any): boolean {\n\n        // check if is an object\n        if (typeof value !== 'object') {\n            return false;\n        }\n\n        // next check if it contains the necessary properties\n        return 'low' in value && 'high' in value;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nprivate clone(value: number | SliderValue): number | SliderValue {\n\n        // if it is not an object simply return the value\n        if (typeof value !== 'object') {\n            return value;\n        }\n\n        // create a new object from the existing one\n        const /** @type {?} */ instance = { ...value };\n\n        // delete remove the value from the old object\n        value = undefined;\n\n        // return the new instance of the object\n        return instance;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-slider',\n    template: `\n      <div class=\"track\" #track [class.narrow]=\"options.track.height === sliderSize.Narrow\" [class.wide]=\"options.track.height === sliderSize.Wide\" [class.range]=\"options.type === sliderType.Range\">\n\n          <!-- Section Beneath Lower Thumb -->\n          <div class=\"track-section track-lower\" [style.flex-grow]=\"tracks.lower.size\" [style.background]=\"tracks.lower.color\"></div>\n\n          <!-- Lower Thumb Button / Line -->\n          <div class=\"thumb lower\"\n              uxDrag\n              role=\"slider\"\n              tabindex=\"0\"\n              #lowerthumb\n              [attr.aria-label]=\"options.type === sliderType.Range ? options.handles.aria.lowerThumb : options.handles.aria.thumb\"\n              [attr.aria-valuemin]=\"options?.track?.min\"\n              [attr.aria-valuemax]=\"options.type === sliderType.Range ? getThumbValue(sliderThumb.Upper) : options?.track?.max\"\n              [attr.aria-valuenow]=\"getThumbValue(sliderThumb.Lower)\"\n              [attr.aria-valuetext]=\"getAriaValueText(sliderThumb.Lower)\"\n              [style.left.%]=\"thumbs.lower.position\"\n              [class.active]=\"thumbs.lower.drag\"\n              [style.z-index]=\"thumbs.lower.order\"\n              [class.button]=\"options.handles.style === sliderStyle.Button\"\n              [class.line]=\"options.handles.style === sliderStyle.Line\"\n              [class.narrow]=\"options.track.height === sliderSize.Narrow\"\n              [class.wide]=\"options.track.height === sliderSize.Wide\"\n              (dragstart)=\"thumbEvent(sliderThumb.Lower, sliderThumbEvent.DragStart); lowerthumb.focus()\"\n              (drag)=\"updateThumbPosition($event, sliderThumb.Lower)\"\n              (dragend)=\"thumbEvent(sliderThumb.Lower, sliderThumbEvent.DragEnd)\"\n              (mouseenter)=\"thumbEvent(sliderThumb.Lower, sliderThumbEvent.MouseOver)\"\n              (mouseleave)=\"thumbEvent(sliderThumb.Lower, sliderThumbEvent.MouseLeave)\"\n              (focus)=\"thumbEvent(sliderThumb.Lower, sliderThumbEvent.MouseOver)\"\n              (blur)=\"thumbEvent(sliderThumb.Lower, sliderThumbEvent.MouseLeave)\"\n              (keydown.ArrowLeft)=\"snapToNearestTick(sliderThumb.Lower, sliderSnap.All, false); $event.preventDefault()\"\n              (keydown.ArrowRight)=\"snapToNearestTick(sliderThumb.Lower, sliderSnap.All, true); $event.preventDefault()\"\n              (keydown.ArrowUp)=\"snapToNearestTick(sliderThumb.Lower, sliderSnap.All, false); $event.preventDefault()\"\n              (keydown.ArrowDown)=\"snapToNearestTick(sliderThumb.Lower, sliderSnap.All, true); $event.preventDefault()\"\n              (keydown.PageDown)=\"snapToNearestTick(sliderThumb.Lower, sliderSnap.Major, false); $event.preventDefault()\"\n              (keydown.PageUp)=\"snapToNearestTick(sliderThumb.Lower, sliderSnap.Major, true); $event.preventDefault()\"\n              (keydown.Home)=\"snapToEnd(sliderThumb.Lower, false); $event.preventDefault()\"\n              (keydown.End)=\"snapToEnd(sliderThumb.Lower, true); $event.preventDefault()\">\n\n              <!-- Lower Thumb Callout -->\n              <div class=\"tooltip top tooltip-lower\" #lowerTooltip\n                  [class.tooltip-dynamic]=\"options.handles.callout.trigger === sliderCalloutTrigger.Dynamic && thumbs.lower.drag === false\"\n                  [style.opacity]=\"tooltips.lower.visible ? 1 : 0\"\n                  [style.left.px]=\"tooltips.lower.position\">\n\n                  <div class=\"tooltip-arrow\" [style.border-top-color]=\"options.handles.callout.background\"></div>\n\n                  <div class=\"tooltip-inner\"\n                      [style.background-color]=\"options.handles.callout.background\"\n                      [style.color]=\"options.handles.callout.color\">\n                      {{ tooltips.lower.label }}\n                  </div>\n              </div>\n\n          </div>\n\n          <!-- Section of Track Between Lower and Upper Thumbs -->\n          <div class=\"track-section track-range\" *ngIf=\"options.type === sliderType.Range\" [style.flex-grow]=\"tracks.middle.size\" [style.background]=\"tracks.middle.color\">\n          </div>\n\n          <!-- Upper Thumb Button / Line -->\n          <div class=\"thumb upper\"\n              uxDrag\n              role=\"slider\"\n              tabindex=\"0\"\n              #upperthumb\n              [attr.aria-label]=\"options.handles.aria.upperThumb\"\n              [attr.aria-valuemin]=\"getThumbValue(sliderThumb.Lower) || options?.track?.min\"\n              [attr.aria-valuemax]=\"options?.track?.max\"\n              [attr.aria-valuenow]=\"getThumbValue(sliderThumb.Upper)\"\n              [attr.aria-valuetext]=\"getAriaValueText(sliderThumb.Upper)\"\n              [hidden]=\"options.type !== sliderType.Range\"\n              [class.active]=\"thumbs.upper.drag\"\n              [style.left.%]=\"thumbs.upper.position\"\n              [style.z-index]=\"thumbs.upper.order\"\n              [class.button]=\"options.handles.style === sliderStyle.Button\"\n              [class.line]=\"options.handles.style === sliderStyle.Line\"\n              [class.narrow]=\"options.track.height === sliderSize.Narrow\"\n              [class.wide]=\"options.track.height === sliderSize.Wide\"\n              (dragstart)=\"thumbEvent(sliderThumb.Upper, sliderThumbEvent.DragStart); upperthumb.focus()\"\n              (drag)=\"updateThumbPosition($event, sliderThumb.Upper)\"\n              (dragend)=\"thumbEvent(sliderThumb.Upper, sliderThumbEvent.DragEnd)\"\n              (mouseenter)=\"thumbEvent(sliderThumb.Upper, sliderThumbEvent.MouseOver)\"\n              (mouseleave)=\"thumbEvent(sliderThumb.Upper, sliderThumbEvent.MouseLeave)\"\n              (focus)=\"thumbEvent(sliderThumb.Upper, sliderThumbEvent.MouseOver)\"\n              (blur)=\"thumbEvent(sliderThumb.Upper, sliderThumbEvent.MouseLeave)\"\n              (keydown.ArrowLeft)=\"snapToNearestTick(sliderThumb.Upper, sliderSnap.All, false); $event.preventDefault()\"\n              (keydown.ArrowRight)=\"snapToNearestTick(sliderThumb.Upper, sliderSnap.All, true); $event.preventDefault()\"\n              (keydown.ArrowUp)=\"snapToNearestTick(sliderThumb.Upper, sliderSnap.All, false); $event.preventDefault()\"\n              (keydown.ArrowDown)=\"snapToNearestTick(sliderThumb.Upper, sliderSnap.All, true); $event.preventDefault()\"\n              (keydown.PageDown)=\"snapToNearestTick(sliderThumb.Upper, sliderSnap.Major, false); $event.preventDefault()\"\n              (keydown.PageUp)=\"snapToNearestTick(sliderThumb.Upper, sliderSnap.Major, true); $event.preventDefault()\"\n              (keydown.Home)=\"snapToEnd(sliderThumb.Upper, false); $event.preventDefault()\"\n              (keydown.End)=\"snapToEnd(sliderThumb.Upper, true); $event.preventDefault()\">\n\n              <!-- Upper Thumb Callout -->\n              <div class=\"tooltip top tooltip-upper\" #upperTooltip\n                  [class.tooltip-dynamic]=\"options.handles.callout.trigger === sliderCalloutTrigger.Dynamic && thumbs.upper.drag === false\"\n                  [style.opacity]=\"tooltips.upper.visible ? 1 : 0\"\n                  [style.left.px]=\"tooltips.upper.position\">\n\n                  <div class=\"tooltip-arrow\" [style.border-top-color]=\"options.handles.callout.background\"></div>\n\n                  <div class=\"tooltip-inner\"\n                      *ngIf=\"options.type === sliderType.Range\"\n                      [style.background-color]=\"options.handles.callout.background\"\n                      [style.color]=\"options.handles.callout.color\">\n                      {{ tooltips.upper.label }}\n                  </div>\n              </div>\n          </div>\n\n          <!-- Section of Track Abover Upper Thumb -->\n          <div class=\"track-section track-higher\" [style.flex-grow]=\"tracks.upper.size\" [style.background]=\"tracks.upper.color\"></div>\n\n      </div>\n\n      <!-- Chart Ticks and Tick Labels -->\n      <div class=\"tick-container\"\n          role=\"presentation\"\n          *ngIf=\"(options.track.ticks.major.show || options.track.ticks.minor.show) && options.handles.callout.trigger !== sliderCalloutTrigger.Dynamic\"\n          [class.show-labels]=\"options.track.ticks.major.labels || options.track.ticks.minor.labels\">\n\n          <div class=\"tick\"\n              *ngFor=\"let tick of ticks\"\n              [class.major]=\"tick.type === sliderTickType.Major\"\n              [class.minor]=\"tick.type === sliderTickType.Minor\"\n              [style.left.%]=\"tick.position\"\n              [hidden]=\"!tick.showTicks\">\n\n              <div class=\"tick-indicator\"></div>\n              <div class=\"tick-label\" aria-hidden=\"true\" [hidden]=\"!tick.showLabels\">{{ tick.label }}</div>\n          </div>\n      </div>\n    `,\n    changeDetection: ChangeDetectionStrategy.OnPush\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ColorService, },\n{type: ChangeDetectorRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'value': [{ type: Input },],\n'options': [{ type: Input },],\n'valueChange': [{ type: Output },],\n'lowerTooltip': [{ type: ViewChild, args: ['lowerTooltip', ] },],\n'upperTooltip': [{ type: ViewChild, args: ['upperTooltip', ] },],\n'track': [{ type: ViewChild, args: ['track', ] },],\n};\n}\n\nfunction SliderComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nSliderComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSliderComponent.ctorParameters;\n/** @type {?} */\nSliderComponent.propDecorators;\n/** @type {?} */\nSliderComponent.prototype.value;\n/** @type {?} */\nSliderComponent.prototype.options;\n/** @type {?} */\nSliderComponent.prototype.valueChange;\n/** @type {?} */\nSliderComponent.prototype.lowerTooltip;\n/** @type {?} */\nSliderComponent.prototype.upperTooltip;\n/** @type {?} */\nSliderComponent.prototype.track;\n/** @type {?} */\nSliderComponent.prototype._value;\n/** @type {?} */\nSliderComponent.prototype.sliderType;\n/** @type {?} */\nSliderComponent.prototype.sliderStyle;\n/** @type {?} */\nSliderComponent.prototype.sliderSize;\n/** @type {?} */\nSliderComponent.prototype.sliderSnap;\n/** @type {?} */\nSliderComponent.prototype.sliderThumb;\n/** @type {?} */\nSliderComponent.prototype.sliderTickType;\n/** @type {?} */\nSliderComponent.prototype.sliderThumbEvent;\n/** @type {?} */\nSliderComponent.prototype.sliderCalloutTrigger;\n/** @type {?} */\nSliderComponent.prototype.tracks;\n/** @type {?} */\nSliderComponent.prototype.tooltips;\n/** @type {?} */\nSliderComponent.prototype.thumbs;\n/** @type {?} */\nSliderComponent.prototype.ticks;\n/** @type {?} */\nSliderComponent.prototype.defaultOptions;\n/** @type {?} */\nSliderComponent.prototype._changeDetectorRef;\n}\n\nexport type SliderType = number;\nexport let SliderType: any = {};\nSliderType.Value = 0;\nSliderType.Range = 1;\nSliderType[SliderType.Value] = \"Value\";\nSliderType[SliderType.Range] = \"Range\";\n\nexport type SliderStyle = number;\nexport let SliderStyle: any = {};\nSliderStyle.Button = 0;\nSliderStyle.Line = 1;\nSliderStyle[SliderStyle.Button] = \"Button\";\nSliderStyle[SliderStyle.Line] = \"Line\";\n\nexport type SliderSize = number;\nexport let SliderSize: any = {};\nSliderSize.Narrow = 0;\nSliderSize.Wide = 1;\nSliderSize[SliderSize.Narrow] = \"Narrow\";\nSliderSize[SliderSize.Wide] = \"Wide\";\n\nexport type SliderCalloutTrigger = number;\nexport let SliderCalloutTrigger: any = {};\nSliderCalloutTrigger.None = 0;\nSliderCalloutTrigger.Hover = 1;\nSliderCalloutTrigger.Drag = 2;\nSliderCalloutTrigger.Persistent = 3;\nSliderCalloutTrigger.Dynamic = 4;\nSliderCalloutTrigger[SliderCalloutTrigger.None] = \"None\";\nSliderCalloutTrigger[SliderCalloutTrigger.Hover] = \"Hover\";\nSliderCalloutTrigger[SliderCalloutTrigger.Drag] = \"Drag\";\nSliderCalloutTrigger[SliderCalloutTrigger.Persistent] = \"Persistent\";\nSliderCalloutTrigger[SliderCalloutTrigger.Dynamic] = \"Dynamic\";\n\n\nexport interface SliderValue {\n    low: number;\n    high: number;\n}\nexport type SliderSnap = number;\nexport let SliderSnap: any = {};\nSliderSnap.None = 0;\nSliderSnap.Minor = 1;\nSliderSnap.Major = 2;\nSliderSnap.All = 3;\nSliderSnap[SliderSnap.None] = \"None\";\nSliderSnap[SliderSnap.Minor] = \"Minor\";\nSliderSnap[SliderSnap.Major] = \"Major\";\nSliderSnap[SliderSnap.All] = \"All\";\n\nexport type SliderTickType = number;\nexport let SliderTickType: any = {};\nSliderTickType.Minor = 0;\nSliderTickType.Major = 1;\nSliderTickType[SliderTickType.Minor] = \"Minor\";\nSliderTickType[SliderTickType.Major] = \"Major\";\n\n\nexport interface SliderOptions {\n    type?: SliderType;\n    handles?: SliderHandleOptions;\n    track?: SliderTrackOptions;\n}\n\nexport interface SliderHandleOptions {\n    style?: SliderStyle;\n    callout?: SliderCallout;\n    keyboard?: SliderKeyboardOptions;\n    aria?: SliderAriaOptions;\n}\n\nexport interface SliderAriaOptions {\n    thumb: string;\n    lowerThumb: string;\n    upperThumb: string;\n}\n\nexport interface SliderKeyboardOptions {\n    major?: number;\n    minor?: number;\n}\n\nexport interface SliderTrackOptions {\n    height?: SliderSize;\n    min?: number;\n    max?: number;\n    ticks?: SliderTicksOptions;\n    colors?: SliderTrackColors;\n}\n\nexport interface SliderTicksOptions {\n    snap?: SliderSnap;\n    major?: SliderTickOptions;\n    minor?: SliderTickOptions;\n}\n\nexport interface SliderTickOptions {\n    show?: boolean;\n    steps?: number | number[];\n    labels?: boolean;\n    formatter?: (value: number) => string | number;\n}\n\nexport interface SliderTick {\n    showTicks: boolean;\n    showLabels: boolean;\n    type: SliderTickType;\n    position: number;\n    value: number;\n    label: string | number;\n}\n\nexport interface SliderTrackColors {\n    lower?: string | string[];\n    range?: string | string[];\n    higher?: string | string[];\n}\n\nexport interface SliderCallout {\n    trigger?: SliderCalloutTrigger;\n    background?: string;\n    color?: string;\n    formatter?: (value: number) => string | number;\n}\nexport type SliderThumbEvent = number;\nexport let SliderThumbEvent: any = {};\nSliderThumbEvent.None = 0;\nSliderThumbEvent.MouseOver = 1;\nSliderThumbEvent.MouseLeave = 2;\nSliderThumbEvent.DragStart = 3;\nSliderThumbEvent.DragEnd = 4;\nSliderThumbEvent[SliderThumbEvent.None] = \"None\";\nSliderThumbEvent[SliderThumbEvent.MouseOver] = \"MouseOver\";\nSliderThumbEvent[SliderThumbEvent.MouseLeave] = \"MouseLeave\";\nSliderThumbEvent[SliderThumbEvent.DragStart] = \"DragStart\";\nSliderThumbEvent[SliderThumbEvent.DragEnd] = \"DragEnd\";\n\nexport type SliderThumb = number;\nexport let SliderThumb: any = {};\nSliderThumb.Lower = 0;\nSliderThumb.Upper = 1;\nSliderThumb[SliderThumb.Lower] = \"Lower\";\nSliderThumb[SliderThumb.Upper] = \"Upper\";\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { SidePanelComponent } from './side-panel.component';\nimport { SidePanelCloseDirective } from './side-panel-close.directive';\n\nconst /** @type {?} */ EXPORTS = [\n    SidePanelComponent,\n    SidePanelCloseDirective\n];\nexport class SidePanelModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        CommonModule\n    ],\n    exports: EXPORTS,\n    declarations: EXPORTS\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction SidePanelModule_tsickle_Closure_declarations() {\n/** @type {?} */\nSidePanelModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSidePanelModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, HostListener } from '@angular/core';\nimport { SidePanelService } from './side-panel.service';\nexport class SidePanelCloseDirective {\n/**\n * @param {?} _service\n */\nconstructor(private _service: SidePanelService) { }\n/**\n * @return {?}\n */\nclickHandler() {\n        this._service.close();\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: '[uxSidePanelClose]'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: SidePanelService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'clickHandler': [{ type: HostListener, args: ['click', ] },],\n};\n}\n\nfunction SidePanelCloseDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nSidePanelCloseDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSidePanelCloseDirective.ctorParameters;\n/** @type {?} */\nSidePanelCloseDirective.propDecorators;\n/** @type {?} */\nSidePanelCloseDirective.prototype._service;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { SearchBuilderComponent } from './search-builder.component';\nimport { SearchBuilderGroupComponent } from './search-builder-group/search-builder-group.component';\nimport { SearchTextComponent } from './search-components/text/text.component';\nimport { SearchDateComponent } from './search-components/date/date.component';\nimport { SearchBuilderOutletDirective } from './search-builder-outlet/search-builder-outlet.directive';\nimport { BaseSearchComponent } from './search-components/base-search.component';\nimport { DateTimePickerModule } from '../date-time-picker/date-time-picker.module';\nimport { SearchDateRangeComponent } from './search-components/date-range/date-range.component';\nimport { SearchSelectComponent } from './search-components/select/select.component';\nimport { SelectModule } from '../select/index';\nimport { PopoverModule } from '../popover/index';\nexport class SearchBuilderModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  imports: [\n    CommonModule,\n    FormsModule,\n    DateTimePickerModule,\n    PopoverModule,\n    SelectModule\n  ],\n  exports: [\n    SearchBuilderComponent,\n    SearchBuilderGroupComponent,\n    BaseSearchComponent\n  ],\n  declarations: [\n    SearchBuilderComponent,\n    SearchBuilderGroupComponent,\n    SearchTextComponent,\n    SearchDateComponent,\n    SearchDateRangeComponent,\n    SearchBuilderOutletDirective,\n    SearchSelectComponent,\n    BaseSearchComponent\n  ],\n  entryComponents: [\n    SearchTextComponent,\n    SearchDateComponent,\n    SearchDateRangeComponent,\n    SearchSelectComponent\n  ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction SearchBuilderModule_tsickle_Closure_declarations() {\n/** @type {?} */\nSearchBuilderModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSearchBuilderModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { InfiniteScrollModule } from '../../directives/infinite-scroll/index';\nimport { TagInputModule } from '../tag-input/index';\nimport { TypeaheadModule } from '../typeahead/index';\nimport { SelectComponent } from './select.component';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nexport class SelectModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        CommonModule,\n        FormsModule,\n        InfiniteScrollModule,\n        TagInputModule,\n        TypeaheadModule\n    ],\n    exports: [SelectComponent],\n    declarations: [SelectComponent]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction SelectModule_tsickle_Closure_declarations() {\n/** @type {?} */\nSelectModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSelectModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { FocusIfModule } from '../../directives/focus-if/index';\nimport { TypeaheadModule } from '../typeahead/index';\nimport { TagInputComponent } from './tag-input.component';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nexport class TagInputModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        CommonModule,\n        FormsModule,\n        FocusIfModule,\n        TypeaheadModule\n    ],\n    exports: [TagInputComponent],\n    declarations: [TagInputComponent],\n    providers: [],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction TagInputModule_tsickle_Closure_declarations() {\n/** @type {?} */\nTagInputModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTagInputModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { AfterContentInit, Component, ContentChildren, ElementRef, EventEmitter, HostListener, Inject, Input, OnChanges, OnDestroy, OnInit, Output, QueryList, SimpleChanges, TemplateRef, ViewChild, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALIDATORS, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { DOCUMENT } from '@angular/platform-browser';\nimport { Subscription } from 'rxjs/Subscription';\nimport { TypeaheadComponent, TypeaheadKeyService } from '../typeahead/index';\nimport { TypeaheadOptionEvent } from '../typeahead/typeahead-event';\nimport { TagInputEvent } from './tag-input-event';\n\n\nconst /** @type {?} */ TAGINPUT_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => TagInputComponent),\n    multi: true\n};\nconst /** @type {?} */ TAGINPUT_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => TagInputComponent),\n    multi: true\n};\nexport class TagInputComponent implements OnInit, AfterContentInit, OnChanges, ControlValueAccessor, OnDestroy {\nprivate _tags: any[] = [];\n/**\n * @return {?}\n */\nget tags() {\n        if (!this._tags) {\n            this._tags = [];\n        }\n        return this._tags;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset tags(value: any[]) {\n        this._tags = value;\n        this._onChangeHandler(this._tags);\n        this.tagsChange.emit(this._tags);\n    }\n\n     tagsChange = new EventEmitter<any[]>();\nprivate _input: string = '';\n/**\n * @return {?}\n */\nget input() {\n        return this._input;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset input(value: string) {\n        this._input = value;\n        this.inputChange.emit(value);\n    }\n\n     inputChange = new EventEmitter<string>();\n\n     display: (option: any) => string | string;\n     addOnPaste: boolean = true;\n     disabled: boolean = false;\n     enforceTagLimits: boolean = false;\n     freeInput: boolean = true;\n     maxTags: number = Number.MAX_VALUE;\n     minTags: number = 0;\n     placeholder: string = '';\n     showTypeaheadOnClick: boolean = false;\n     tagDelimiters: string = '';\n     tagPattern: RegExp;\n     tagTemplate: TemplateRef<any>;\n     tagClass: TagClassFunction = () => undefined;\n     validationErrors: any = {};\n     createTagHandler: (value: string) => any;\n\n     tagAdding = new EventEmitter<TagInputEvent>();\n     tagAdded = new EventEmitter<TagInputEvent>();\n     tagInvalidated = new EventEmitter<TagInputEvent>();\n     tagRemoving = new EventEmitter<TagInputEvent>();\n     tagRemoved = new EventEmitter<TagInputEvent>();\n     tagClick = new EventEmitter<TagInputEvent>();\n\n     typeaheadQuery: QueryList<TypeaheadComponent>;\n\n     tagInput: ElementRef;\nprivate _defaultTagTemplate: TemplateRef<any>;\n\n    selectedIndex: number = -1;\n\n    tagApi: TagApi = {\n        getTagDisplay: this.getTagDisplay.bind(this),\n        removeTagAt: this.removeTagAt.bind(this),\n        canRemoveTagAt: this.canRemoveTagAt.bind(this)\n    };\n\n    valid: boolean = true;\n    inputValid: boolean = true;\n\n    typeahead: TypeaheadComponent;\nprivate _onChangeHandler: (_: any) => void = () => { };\nprivate _onTouchedHandler: () => void = () => { };\nprivate _subscription: Subscription;\n/**\n * @param {?} _element\n * @param {?} _document\n * @param {?} _typeaheadKeyService\n */\nconstructor(\nprivate _element: ElementRef,\nprivate _document: Document,\nprivate _typeaheadKeyService: TypeaheadKeyService) { }\n/**\n * @return {?}\n */\nngOnInit() {\n        if (!this.tagTemplate) {\n            this.tagTemplate = this._defaultTagTemplate;\n        }\n    }\n/**\n * @return {?}\n */\nngAfterContentInit() {\n        // Watch for optional child typeahead control\n        this.connectTypeahead(this.typeaheadQuery.first);\n        this.typeaheadQuery.changes.subscribe((query) => {\n            this.connectTypeahead(query.first);\n        });\n    }\n/**\n * @param {?} changes\n * @return {?}\n */\nngOnChanges(changes: SimpleChanges) {\n        if (changes.disabled) {\n            if (changes.disabled.currentValue) {\n                // Clear selection and close dropdown\n                this.selectedIndex = -1;\n                if (this.typeahead) {\n                    this.typeahead.open = false;\n                }\n            }\n        }\n\n        // Update validation status\n        this.validate();\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nwriteValue(value: any[]) {\n        if (value) {\n            this.tags = value;\n        }\n    }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnChange(fn: any) {\n        this._onChangeHandler = fn;\n    }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnTouched(fn: any) {\n        this._onTouchedHandler = fn;\n    }\n/**\n * @param {?} isDisabled\n * @return {?}\n */\nsetDisabledState(isDisabled: boolean): void {\n        this.disabled = isDisabled;\n    }\n/**\n * @return {?}\n */\nngOnDestroy(): void {\n        if (this._subscription) {\n            this._subscription.unsubscribe();\n        }\n    }\n/**\n * Validate the value of the control (tags property).\n * @return {?}\n */\nvalidate() {\n        this.valid = true;\n        let /** @type {?} */ tagRangeError = null;\n        if (this.tags && (this.tags.length < this.minTags || this.tags.length > this.maxTags)) {\n            tagRangeError = {\n                given: this.tags.length,\n                min: this.minTags,\n                max: this.maxTags\n            };\n            this.valid = false;\n        }\n        this.validationErrors['tagRangeError'] = tagRangeError;\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nkeyHandler(event: KeyboardEvent) {\n\n        if (this.disabled) { return; }\n\n        // Get the input field cursor location\n        const /** @type {?} */ inputCursorPos = this.tagInput.nativeElement.selectionStart;\n\n        // Determine if the input field has any text selected\n        const /** @type {?} */ hasSelection = this.tagInput.nativeElement.selectionStart !== this.tagInput.nativeElement.selectionEnd;\n\n        // Determine if a tag has focus\n        const /** @type {?} */ tagSelected = this.isValidTagIndex(this.selectedIndex);\n\n        const /** @type {?} */ inputLength = this.input ? this.input.length : 0;\n\n        // Check whether the arrow keys can move the selection. Otherwise the input field takes the event.\n        const /** @type {?} */ canNavigateLeft = tagSelected || (inputCursorPos <= 0 && !hasSelection);\n        const /** @type {?} */ canNavigateRight = tagSelected || (inputCursorPos >= inputLength && !hasSelection);\n\n        // Forward key events to the typeahead component.\n        this._typeaheadKeyService.handleKey(event, this.typeahead);\n\n        switch (event.key) {\n            case 'Enter':\n                // Check if a typeahead option is highlighted\n                if (this.typeahead && this.typeahead.open && this.typeahead.highlighted) {\n                    // Add the typeahead option as a tag, clear the input, and close the dropdown\n                    this.commitTypeahead(this.typeahead.highlighted);\n                    this.typeahead.open = false;\n                } else {\n                    // Validate and add the input text as a tag, if possible\n                    this.commitInput();\n                }\n                event.preventDefault();\n                break;\n            case 'Backspace':\n                if (canNavigateLeft) {\n                    this.backspace();\n                    event.stopPropagation();\n                    event.preventDefault();\n                }\n                break;\n            case 'Delete':\n            case 'Del':\n                if (tagSelected) {\n                    this.removeTagAt(this.selectedIndex);\n                }\n                break;\n            case 'ArrowLeft':\n            case 'Left':\n                if (canNavigateLeft) {\n                    this.moveSelection(-1);\n                    event.preventDefault();\n                }\n                break;\n            case 'ArrowRight':\n            case 'Right':\n                if (canNavigateRight) {\n                    this.moveSelection(1);\n                    event.preventDefault();\n                }\n                break;\n        }\n\n        // Check for keys in the tagDelimiters\n        if (this.tagDelimiters && this.tagDelimiters.indexOf(this.getKeyChar(event)) >= 0) {\n            // Commit previous text\n            this.commitInput();\n            event.stopPropagation();\n            event.preventDefault();\n        }\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nfocusOutHandler(event: FocusEvent) {\n\n        // If a click on the typeahead is in progress, don't do anything.\n        // This works around an issue in IE where clicking a scrollbar drops focus.\n        if (this.typeahead && this.typeahead.clicking) {\n            return;\n        }\n\n        // Close the dropdown on blur\n        setTimeout(() => {\n            if (!this._element.nativeElement.contains(this._document.activeElement)) {\n                this.selectedIndex = -1;\n                if (this.typeahead) {\n                    this.typeahead.open = false;\n                }\n            }\n        }, 200);\n    }\n/**\n * @param {?} event\n * @param {?} tag\n * @param {?} index\n * @return {?}\n */\ntagClickHandler(event: MouseEvent, tag: any, index: number) {\n\n        if (this.disabled) { return; }\n\n        // Send tagClick event\n        const /** @type {?} */ tagClickEvent = new TagInputEvent(tag);\n        this.tagClick.emit(tagClickEvent);\n\n        // Prevent focus if preventDefault() was called\n        if (tagClickEvent.defaultPrevented()) {\n            event.preventDefault();\n            return;\n        }\n\n        // Select the tag (for IE that doesn't propagate focus)\n        this.selectTagAt(index);\n    }\n/**\n * @return {?}\n */\ninputClickHandler() {\n\n        if (this.disabled) { return; }\n\n        if (this.typeahead && this.showTypeaheadOnClick) {\n            this.typeahead.open = true;\n        }\n    }\n/**\n * @return {?}\n */\ninputFocusHandler() {\n\n        if (this.disabled) { return; }\n\n        this.selectInput();\n    }\n/**\n * @param {?} event\n * @return {?}\n */\ninputPasteHandler(event: ClipboardEvent) {\n\n        if (this.disabled) { return; }\n\n        if (this.addOnPaste) {\n            // Get text from the clipboard\n            let /** @type {?} */ input: string = null;\n            if (event.clipboardData) {\n                input = event.clipboardData.getData('text/plain');\n            } else if (( /** @type {?} */((<any>window))).clipboardData) {\n                // Internet Explorer only\n                input = ( /** @type {?} */((<any>window))).clipboardData.getData('Text');\n            }\n\n            // Commit the clipboard text directly\n            if (this.commit(input)) {\n                this.selectInput();\n                event.stopPropagation();\n                event.preventDefault();\n            }\n        }\n    }\n/**\n * @param {?} event\n * @return {?}\n */\ntypeaheadOptionSelectedHandler(event: TypeaheadOptionEvent) {\n\n        if (this.disabled) { return; }\n\n        // When the typeahead sends the optionSelected event, commit the object directly\n        this.commitTypeahead(event.option);\n    }\n/**\n * Commit the current input value and clear the input field if successful.\n * @return {?}\n */\ncommitInput() {\n        if (this.commit(this.input)) {\n            this.selectInput();\n            this.input = '';\n        }\n    }\n/**\n * Commit the given tag object and clear the input if successful.\n * @param {?} tag\n * @return {?}\n */\ncommitTypeahead(tag: any) {\n        if (this.addTag(tag)) {\n            this.selectInput();\n            this.input = '';\n        }\n    }\n/**\n * Commit the given string value as one or more tags, if validation passes. Returns true if the tag(s) were created.\n * @param {?} input\n * @return {?}\n */\ncommit(input: string): boolean {\n        if (input && this.freeInput) {\n\n            // Split the tags by the tagDelimiters if configured\n            const /** @type {?} */ newTags = this.splitTagInput(input);\n\n            // Check tag validation for all of the individual values\n            let /** @type {?} */ allValid = true;\n            for (let /** @type {?} */ newTag of newTags) {\n                const /** @type {?} */ valid = this.validateTag(newTag);\n                if (!valid) {\n                    allValid = false;\n                }\n            }\n\n            // Add the tags if all are valid\n            if (allValid) {\n                for (let /** @type {?} */ newTag of newTags) {\n                    this.addTag(this.createTag(newTag));\n                }\n\n                return true;\n            }\n        }\n\n        return false;\n    }\n/**\n * If no tag is selected, select the rightmost tag. If a tag is selected, remove it.\n * @return {?}\n */\nbackspace() {\n\n        if (this.disabled) { return; }\n\n        if (!this.isValidTagIndex(this.selectedIndex)) {\n            this.selectTagAt(this.tags.length - 1);\n        } else {\n            this.removeTagAt(this.selectedIndex);\n        }\n    }\n/**\n * Move the highlighted option forwards or backwards in the list. Wraps at the limits.\n * @param {?} d Value to be added to the selected index, i.e. -1 to move backwards, +1 to move forwards.\n * @return {?}\n */\nmoveSelection(d: number) {\n\n        if (this.disabled) { return; }\n\n        if (this.isValidSelectIndex(this.selectedIndex)) {\n            this.selectedIndex += d;\n\n            // Do wrapping of selection when out of bounds\n            if (this.selectedIndex < 0) {\n                this.selectedIndex = this.tags.length;\n            } else if (this.selectedIndex > this.tags.length) {\n                this.selectedIndex = 0;\n            }\n        }\n    }\n/**\n * Returns a value to display for the given tag. Uses display function/property name if set, otherwise assumes that the tag is a simple string.\n * @param {?} tag\n * @return {?}\n */\ngetTagDisplay(tag: any): string {\n        if (typeof this.display === 'function') {\n            return this.display(tag);\n        }\n        if (typeof this.display === 'string') {\n            return tag[ /** @type {?} */((<string>this.display))];\n        }\n        return tag;\n    }\n/**\n * Returns true if the given index is selected (tag index or input field).\n * @param {?} index\n * @return {?}\n */\nisSelected(index: number): boolean {\n        return index === this.selectedIndex;\n    }\n/**\n * Select the tag at the given index. Does nothing if disabled is true.\n * @param {?} tagIndex\n * @return {?}\n */\nselectTagAt(tagIndex: number) {\n\n        if (this.disabled) { return; }\n\n        if (this.isValidTagIndex(tagIndex)) {\n            this.selectedIndex = tagIndex;\n        }\n    }\n/**\n * Select the input field, giving it focus. Does nothing if disabled is true.\n * @return {?}\n */\nselectInput() {\n\n        if (this.disabled) { return; }\n\n        this.selectedIndex = this.tags.length;\n    }\n/**\n * Remove the tag at the given index. Does nothing if disabled is true or the minTags property prevents removal.\n * @param {?} tagIndex\n * @return {?}\n */\nremoveTagAt(tagIndex: number) {\n\n        if (this.disabled || !this.canRemoveTagAt(tagIndex)) { return; }\n\n        // Check that the tagIndex is in range\n        if (this.isValidTagIndex(tagIndex)) {\n            const /** @type {?} */ tag = this.tags[tagIndex];\n            const /** @type {?} */ tagRemovingEvent = new TagInputEvent(tag);\n            this.tagRemoving.emit(tagRemovingEvent);\n            if (!tagRemovingEvent.defaultPrevented()) {\n                // Select input first to avoid issues with dropping focus\n                this.selectInput();\n                // Remove the tag\n                this.tags.splice(tagIndex, 1);\n                // Set focus again since indices have changed\n                this.selectInput();\n                this.tagRemoved.emit(new TagInputEvent(tag));\n                this.validate();\n            }\n        }\n    }\n/**\n * Returns true if the tag at the given index can be removed.\n * @param {?} tagIndex\n * @return {?}\n */\ncanRemoveTagAt(tagIndex: number): boolean {\n        return this.tags.length > this.minTags || !this.enforceTagLimits;\n    }\n/**\n * Returns true if the input field should be available.\n * @return {?}\n */\nisInputVisible() {\n        return this.tags.length < this.maxTags || !this.enforceTagLimits;\n    }\n/**\n * Returns true if any part of the control has focus.\n * @return {?}\n */\nhasFocus(): boolean {\n        return this.isValidSelectIndex(this.selectedIndex);\n    }\n/**\n * @param {?} typeahead\n * @return {?}\n */\nprivate connectTypeahead(typeahead: TypeaheadComponent) {\n        if (this._subscription) {\n            this._subscription.unsubscribe();\n            this._subscription = null;\n        }\n\n        this.typeahead = typeahead;\n        if (this.typeahead) {\n            // Set up event handler for selected options\n            this._subscription = this.typeahead.optionSelected.subscribe(this.typeaheadOptionSelectedHandler.bind(this));\n        }\n    }\n/**\n * Validate the given tagValue with the tagPattern, if set. Update validationErrors on validation failure.\n * @param {?} tagValue\n * @return {?}\n */\nprivate validateTag(tagValue: string): boolean {\n        let /** @type {?} */ inputPattern = null;\n        this.inputValid = true;\n        if (this.tagPattern && !this.tagPattern.test(tagValue)) {\n            inputPattern = {\n                given: tagValue,\n                pattern: this.tagPattern\n            };\n            this.inputValid = false;\n        }\n        this.validationErrors['inputPattern'] = inputPattern;\n        return this.inputValid;\n    }\n/**\n * Create a tag object for the given tagValue. If createTagHandler is specified, use it; otherwise if displayProperty is specified, create an object with the tagValue as the single named property; otherwise return the tagValue itself.\n * @param {?} tagValue\n * @return {?}\n */\nprivate createTag(tagValue: string): any {\n        let /** @type {?} */ tag = null;\n        if (this.createTagHandler && typeof this.createTagHandler === 'function') {\n            tag = this.createTagHandler(tagValue);\n        } else if (typeof this.display === 'string') {\n            tag = {};\n            tag[ /** @type {?} */((<string>this.display))] = tagValue;\n        } else {\n            tag = tagValue;\n        }\n        return tag;\n    }\n/**\n * Add a tag object, calling the tagAdding and tagAdded events. Returns true if the tag was added to the tags array.\n * @param {?} tag\n * @return {?}\n */\nprivate addTag(tag: any): boolean {\n        if (tag) {\n            // Verify that the new tag can be displayed\n            const /** @type {?} */ displayValue = this.getTagDisplay(tag);\n            if (displayValue && typeof displayValue === 'string' && displayValue.length > 0) {\n                const /** @type {?} */ tagAddingEvent = new TagInputEvent(tag);\n                this.tagAdding.emit(tagAddingEvent);\n                if (!tagAddingEvent.defaultPrevented()) {\n                    this.tags = this.tags || [];\n                    this.tags.push(tag);\n                    this.tagAdded.emit(new TagInputEvent(tag));\n                    this.validate();\n                    return true;\n                }\n            }\n        }\n\n        return false;\n    }\n/**\n * Returns true if the given tagIndex is a valid tag index.\n * @param {?} tagIndex\n * @return {?}\n */\nprivate isValidTagIndex(tagIndex: number): boolean {\n        return tagIndex >= 0 && tagIndex < this.tags.length;\n    }\n/**\n * Returns true if the given index is a valid selection index (tags or input field).\n * @param {?} index\n * @return {?}\n */\nprivate isValidSelectIndex(index: number): boolean {\n        return index >= 0 && index <= this.tags.length;\n    }\n/**\n * Returns the character corresponding to the given key event, mainly for IE compatibility.\n * @param {?} event\n * @return {?}\n */\nprivate getKeyChar(event: KeyboardEvent): string {\n        switch (event.key) {\n            case 'Spacebar':\n                return ' ';\n        }\n        return event.key;\n    }\n/**\n * Returns an array of strings corresponding to the input string split by the tagDelimiters characters.\n * @param {?} input\n * @return {?}\n */\nprivate splitTagInput(input: string): string[] {\n        let /** @type {?} */ tagValues = [input];\n        if (this.tagDelimiters && typeof this.tagDelimiters === 'string') {\n            const /** @type {?} */ escapedDelimiters = this.tagDelimiters.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n            const /** @type {?} */ delimiterRegex = new RegExp(`[${escapedDelimiters}]`, 'g');\n            tagValues = input.split(delimiterRegex).filter((s) => s.length > 0);\n        }\n        return tagValues;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-tag-input',\n    template: `\n      <ol>\n          <li *ngFor=\"let tag of tags; let i = index\" class=\"ux-tag\"\n              [class.disabled]=\"disabled\"\n              [ngClass]=\"tagClass(tag, i, isSelected(i))\"\n              [attr.tabindex]=\"disabled ? null : i\"\n              [focusIf]=\"isSelected(i)\"\n              (click)=\"tagClickHandler($event, tag, i)\"\n              (focus)=\"selectTagAt(i)\">\n        \n              <ng-container [ngTemplateOutlet]=\"tagTemplate\"\n                  [ngTemplateOutletContext]=\"{tag: tag, index: i, disabled: disabled, api: tagApi}\">\n              </ng-container>\n\n          </li>\n          <li *ngIf=\"isInputVisible()\" class=\"ux-tag-input\">\n              <input #tagInput type=\"text\" class=\"ux-tag-input\"\n                  [(ngModel)]=\"input\"\n                  [class.invalid]=\"!inputValid\"\n                  [placeholder]=\"disabled ? '' : (placeholder || '')\"\n                  [disabled]=\"disabled\"\n                  [focusIf]=\"isSelected(tags.length)\"\n                  (click)=\"inputClickHandler()\"\n                  (focus)=\"inputFocusHandler()\"\n                  (paste)=\"inputPasteHandler($event)\">\n          </li>\n      </ol>\n\n      <ng-content #typeahead></ng-content>\n\n      <ng-template #defaultTagTemplate let-tag=\"tag\" let-index=\"index\" let-disabled=\"disabled\" let-api=\"api\">\n          <span class=\"ux-tag-text\">{{api.getTagDisplay(tag)}}</span>\n          <button *ngIf=\"api.canRemoveTagAt(index)\" type=\"button\" class=\"ux-tag-remove\" [disabled]=\"disabled\" (click)=\"api.removeTagAt(index); $event.stopPropagation();\"><i class=\"hpe-icon hpe-close\"></i></button>\n      </ng-template>\n    `,\n    providers: [TAGINPUT_VALUE_ACCESSOR, TAGINPUT_VALIDATOR],\n    host: {\n        '[class.disabled]': 'disabled',\n        '[class.focus]': 'hasFocus()',\n        '[class.invalid]': '!valid || !inputValid'\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Document, decorators: [{ type: Inject, args: [DOCUMENT, ] }, ]},\n{type: TypeaheadKeyService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'tags': [{ type: Input, args: ['tags', ] },],\n'tagsChange': [{ type: Output },],\n'input': [{ type: Input, args: ['input', ] },],\n'inputChange': [{ type: Output },],\n'display': [{ type: Input },],\n'addOnPaste': [{ type: Input },],\n'disabled': [{ type: Input },],\n'enforceTagLimits': [{ type: Input },],\n'freeInput': [{ type: Input },],\n'maxTags': [{ type: Input },],\n'minTags': [{ type: Input },],\n'placeholder': [{ type: Input },],\n'showTypeaheadOnClick': [{ type: Input },],\n'tagDelimiters': [{ type: Input },],\n'tagPattern': [{ type: Input },],\n'tagTemplate': [{ type: Input },],\n'tagClass': [{ type: Input },],\n'validationErrors': [{ type: Input },],\n'createTagHandler': [{ type: Input, args: ['createTag', ] },],\n'tagAdding': [{ type: Output },],\n'tagAdded': [{ type: Output },],\n'tagInvalidated': [{ type: Output },],\n'tagRemoving': [{ type: Output },],\n'tagRemoved': [{ type: Output },],\n'tagClick': [{ type: Output },],\n'typeaheadQuery': [{ type: ContentChildren, args: [TypeaheadComponent, ] },],\n'tagInput': [{ type: ViewChild, args: ['tagInput', ] },],\n'_defaultTagTemplate': [{ type: ViewChild, args: ['defaultTagTemplate', ] },],\n'keyHandler': [{ type: HostListener, args: ['keydown', ['$event'], ] },],\n'focusOutHandler': [{ type: HostListener, args: ['focusout', ['$event'], ] },],\n};\n}\n\nfunction TagInputComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nTagInputComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTagInputComponent.ctorParameters;\n/** @type {?} */\nTagInputComponent.propDecorators;\n/** @type {?} */\nTagInputComponent.prototype._tags;\n/** @type {?} */\nTagInputComponent.prototype.tagsChange;\n/** @type {?} */\nTagInputComponent.prototype._input;\n/** @type {?} */\nTagInputComponent.prototype.inputChange;\n/** @type {?} */\nTagInputComponent.prototype.display;\n/** @type {?} */\nTagInputComponent.prototype.addOnPaste;\n/** @type {?} */\nTagInputComponent.prototype.disabled;\n/** @type {?} */\nTagInputComponent.prototype.enforceTagLimits;\n/** @type {?} */\nTagInputComponent.prototype.freeInput;\n/** @type {?} */\nTagInputComponent.prototype.maxTags;\n/** @type {?} */\nTagInputComponent.prototype.minTags;\n/** @type {?} */\nTagInputComponent.prototype.placeholder;\n/** @type {?} */\nTagInputComponent.prototype.showTypeaheadOnClick;\n/** @type {?} */\nTagInputComponent.prototype.tagDelimiters;\n/** @type {?} */\nTagInputComponent.prototype.tagPattern;\n/** @type {?} */\nTagInputComponent.prototype.tagTemplate;\n/** @type {?} */\nTagInputComponent.prototype.tagClass;\n/** @type {?} */\nTagInputComponent.prototype.validationErrors;\n/** @type {?} */\nTagInputComponent.prototype.createTagHandler;\n/** @type {?} */\nTagInputComponent.prototype.tagAdding;\n/** @type {?} */\nTagInputComponent.prototype.tagAdded;\n/** @type {?} */\nTagInputComponent.prototype.tagInvalidated;\n/** @type {?} */\nTagInputComponent.prototype.tagRemoving;\n/** @type {?} */\nTagInputComponent.prototype.tagRemoved;\n/** @type {?} */\nTagInputComponent.prototype.tagClick;\n/** @type {?} */\nTagInputComponent.prototype.typeaheadQuery;\n/** @type {?} */\nTagInputComponent.prototype.tagInput;\n/** @type {?} */\nTagInputComponent.prototype._defaultTagTemplate;\n/** @type {?} */\nTagInputComponent.prototype.selectedIndex;\n/** @type {?} */\nTagInputComponent.prototype.tagApi;\n/** @type {?} */\nTagInputComponent.prototype.valid;\n/** @type {?} */\nTagInputComponent.prototype.inputValid;\n/** @type {?} */\nTagInputComponent.prototype.typeahead;\n/** @type {?} */\nTagInputComponent.prototype._onChangeHandler;\n/** @type {?} */\nTagInputComponent.prototype._onTouchedHandler;\n/** @type {?} */\nTagInputComponent.prototype._subscription;\n/** @type {?} */\nTagInputComponent.prototype._element;\n/** @type {?} */\nTagInputComponent.prototype._document;\n/** @type {?} */\nTagInputComponent.prototype._typeaheadKeyService;\n}\n\n\n/**\n * The API available to tag templates.\n */\nexport interface TagApi {\n    /**\n     * Returns the display value of the given tag, according to the displayProperty property.\n     */\n    getTagDisplay: (tag: any) => string;\n\n    /**\n     * Removes the tag at the given index, if possible.\n     */\n    removeTagAt: (index: number) => void;\n\n    /**\n     * \tReturns true if the tag at the given index can be removed.\n     */\n    canRemoveTagAt: (index: number) => boolean;\n}\n\n/**\n * The function used to return custom class information, for use in `ngClass`.\n */\nexport type TagClassFunction = (tag: any, index: number, selected: boolean) => (string | string[] | Set<string>);\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","\nexport class TagInputEvent {\nprivate _defaultPrevented = false;\n/**\n * @param {?} tag\n */\nconstructor(public tag: any) {}\n/**\n * @return {?}\n */\npreventDefault() {\n        this._defaultPrevented = true;\n    }\n/**\n * @return {?}\n */\ndefaultPrevented(): boolean {\n        return this._defaultPrevented;\n    }\n}\n\nfunction TagInputEvent_tsickle_Closure_declarations() {\n/** @type {?} */\nTagInputEvent.prototype._defaultPrevented;\n/** @type {?} */\nTagInputEvent.prototype.tag;\n}\n","import { Component, ElementRef, EventEmitter, Inject, Input, OnChanges, OnDestroy, OnInit, Output, SimpleChanges, StaticProvider, TemplateRef, ViewChild, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { DOCUMENT } from '@angular/platform-browser';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { Observable } from 'rxjs/Observable';\nimport { Subscription } from 'rxjs/Subscription';\nimport { debounceTime, filter, map } from 'rxjs/operators';\nimport { InfiniteScrollLoadFunction } from '../../directives/infinite-scroll/index';\nimport { TypeaheadComponent, TypeaheadKeyService, TypeaheadOptionEvent } from '../typeahead/index';\n\nexport const /** @type {?} */ SELECT_VALUE_ACCESSOR: StaticProvider = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => SelectComponent),\n    multi: true\n};\nexport class SelectComponent implements OnInit, OnChanges, OnDestroy, ControlValueAccessor {\n/**\n * @return {?}\n */\nget value() {\n        return this._value;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset value(value: any) {\n        this._value = value;\n        this.valueChange.emit(value);\n        this.propagateChange(value);\n\n        // if we are not allow multiple selection update the input value (supporting ngModel)\n        if (!this.multiple && value !== null) {\n            this.input = this.getDisplay(value);\n        }\n    }\n/**\n * @return {?}\n */\nget input() {\n        return this._input$.value;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset input(value: string) {\n        this._input$.next(value);\n        this.inputChange.emit(value);\n    }\n/**\n * @return {?}\n */\nget dropdownOpen() {\n        return this._dropdownOpen;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset dropdownOpen(value: boolean) {\n        this._dropdownOpen = value;\n        this.dropdownOpenChange.emit(value);\n    }\n\n     options: any[] | InfiniteScrollLoadFunction;\n     display: (option: any) => string | string;\n     key: (option: any) => string | string;\n     allowNull: boolean = false;\n     disabled: boolean = false;\n     dropDirection: 'up' | 'down' = 'down';\n     maxHeight: string = '250px';\n     multiple: boolean = false;\n     pageSize: number = 20;\n     placeholder: string;\n\n     loadingTemplate: TemplateRef<any>;\n     noOptionsTemplate: TemplateRef<any>;\n     optionTemplate: TemplateRef<any>;\n\n     valueChange = new EventEmitter<any>();\n     inputChange = new EventEmitter<string>();\n     dropdownOpenChange = new EventEmitter<boolean>();\n\n     singleInput: ElementRef;\n     multipleTypeahead: TypeaheadComponent;\n     singleTypeahead: TypeaheadComponent;\n\n    filter$: Observable<string>;\n    propagateChange = (_: any) => { };\nprivate _value: any;\nprivate _input$ = new BehaviorSubject<string>('');\nprivate _dropdownOpen: boolean = false;\nprivate _subscription = new Subscription();\n/**\n * @param {?} _element\n * @param {?} _document\n * @param {?} _typeaheadKeyService\n */\nconstructor(\nprivate _element: ElementRef,\nprivate _document: Document,\nprivate _typeaheadKeyService: TypeaheadKeyService) { }\n/**\n * @return {?}\n */\nngOnInit() {\n\n        // Changes to the input field\n        const /** @type {?} */ onInput = this._input$.pipe(\n            filter(value => this.allowNull),\n            filter(value => !this.multiple && value !== this.getDisplay(this.value))\n        ).subscribe(value => this.value = null);\n\n        // Set up filter from input\n        this.filter$ = this._input$.pipe(\n            map(input => !this.multiple && input === this.getDisplay(this.value) ? '' : input),\n            debounceTime(200)\n        );\n\n        // Open the dropdown when filter is nonempty.\n        const /** @type {?} */ onFilter = this.filter$.pipe(filter(value => value && value.length > 0)).subscribe(() => this.dropdownOpen = true);\n\n        // store the subscriptions\n        this._subscription.add(onInput);\n        this._subscription.add(onFilter);\n    }\n/**\n * @param {?} changes\n * @return {?}\n */\nngOnChanges(changes: SimpleChanges) {\n        if (changes.multiple && !changes.multiple.firstChange && changes.multiple.currentValue !== changes.multiple.previousValue) {\n            this.input = '';\n        }\n    }\n/**\n * @return {?}\n */\nngOnDestroy(): void {\n        this._subscription.unsubscribe();\n    }\n/**\n * @param {?} obj\n * @return {?}\n */\nwriteValue(obj: any): void {\n        if (obj !== undefined && obj !== this._value) {\n            this.value = obj;\n        }\n    }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnChange(fn: any): void {\n        this.propagateChange = fn;\n    }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnTouched(fn: any): void { }\n/**\n * @param {?} isDisabled\n * @return {?}\n */\nsetDisabledState(isDisabled: boolean): void {\n        this.disabled = isDisabled;\n    }\n/**\n * @param {?} event\n * @return {?}\n */\ninputClickHandler(event: MouseEvent) {\n        this.selectInputText();\n        this.dropdownOpen = true;\n    }\n/**\n * @param {?} event\n * @return {?}\n */\ninputBlurHandler(event: Event) {\n\n        // If a click on the typeahead is in progress, just refocus the input.\n        // This works around an issue in IE where clicking a scrollbar drops focus.\n        if (this.singleTypeahead && this.singleTypeahead.clicking) {\n            this.singleInput.nativeElement.focus();\n            return;\n        }\n\n        // Close dropdown and reset text input if focus is lost\n        setTimeout(() => {\n            if (!this._element.nativeElement.contains(this._document.activeElement)) {\n                this.dropdownOpen = false;\n                if (!this.multiple) {\n                    this.input = this.getDisplay(this.value);\n                }\n            }\n        }, 200);\n    }\n/**\n * Key handler for single select only. Multiple select key handling is in TagInputComponent.\n * @param {?} event\n * @return {?}\n */\ninputKeyHandler(event: KeyboardEvent) {\n\n        // Standard keys for typeahead (up/down/esc)\n        this._typeaheadKeyService.handleKey(event, this.singleTypeahead);\n\n        switch (event.key) {\n            case 'Enter':\n                if (this._dropdownOpen) {\n                    // Set the highlighted option as the value and close\n                    this.value = this.singleTypeahead.highlighted;\n                    this.dropdownOpen = false;\n                }\n\n                // Update the input field. If dropdown isn't open then reset it to the previous value.\n                this.input = this.getDisplay(this.value);\n                event.preventDefault();\n                break;\n        }\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nsingleOptionSelected(event: TypeaheadOptionEvent) {\n        if (event.option) {\n            this.value = event.option;\n            this.dropdownOpen = false;\n        }\n    }\n/**\n * Returns the display value of the given option.\n * @param {?} option\n * @return {?}\n */\ngetDisplay(option: any): string {\n        if (option === null || option === undefined) {\n            return '';\n        }\n        if (typeof this.display === 'function') {\n            return this.display(option);\n        }\n        if (typeof this.display === 'string' && option.hasOwnProperty(this.display)) {\n            return option[ /** @type {?} */((<string>this.display))];\n        }\n        return option;\n    }\n/**\n * @return {?}\n */\nprivate selectInputText() {\n        this.singleInput.nativeElement.select();\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-select',\n    template: `\n      <ux-tag-input *ngIf=\"multiple\"\n          [(tags)]=\"value\"\n          [(input)]=\"input\"\n          [addOnPaste]=\"false\"\n          [disabled]=\"disabled\"\n          [display]=\"display\"\n          [freeInput]=\"false\"\n          [placeholder]=\"placeholder\"\n          [showTypeaheadOnClick]=\"true\">\n\n          <ux-typeahead #multipleTypeahead\n              [options]=\"options\"\n              [filter]=\"filter$ | async\"\n              [(open)]=\"dropdownOpen\"\n              [display]=\"display\"\n              [key]=\"key\"\n              [disabledOptions]=\"value\"\n              [dropDirection]=\"dropDirection\"\n              [maxHeight]=\"maxHeight\"\n              [pageSize]=\"pageSize\"\n              [selectFirst]=\"true\"\n              [loadingTemplate]=\"loadingTemplate\"\n              [optionTemplate]=\"optionTemplate\"\n              [noOptionsTemplate]=\"noOptionsTemplate\">\n          </ux-typeahead>\n\n      </ux-tag-input>\n\n      <div *ngIf=\"!multiple\" class=\"inner-addon right-addon\" [class.disabled]=\"disabled\">\n\n          <i class=\"hpe-icon\"\n              [class.hpe-down]=\"dropDirection === 'down'\"\n              [class.hpe-up]=\"dropDirection === 'up'\"></i>\n\n          <input #singleInput type=\"text\" class=\"form-control\"\n              [(ngModel)]=\"input\"\n              [placeholder]=\"placeholder\"\n              [disabled]=\"disabled\"\n              (click)=\"inputClickHandler($event)\"\n              (blur)=\"inputBlurHandler($event)\"\n              (keydown)=\"inputKeyHandler($event)\">\n\n          <ux-typeahead #singleTypeahead\n              [options]=\"options\"\n              [filter]=\"filter$ | async\"\n              [(open)]=\"dropdownOpen\"\n              [display]=\"display\"\n              [key]=\"key\"\n              [dropDirection]=\"dropDirection\"\n              [maxHeight]=\"maxHeight\"\n              [openOnFilterChange]=\"false\"\n              [pageSize]=\"pageSize\"\n              [selectFirst]=\"true\"\n              [loadingTemplate]=\"loadingTemplate\"\n              [optionTemplate]=\"optionTemplate\"\n              [noOptionsTemplate]=\"noOptionsTemplate\"\n              (optionSelected)=\"singleOptionSelected($event)\">\n          </ux-typeahead>\n\n      </div>\n    `,\n    providers: [SELECT_VALUE_ACCESSOR]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Document, decorators: [{ type: Inject, args: [DOCUMENT, ] }, ]},\n{type: TypeaheadKeyService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'value': [{ type: Input },],\n'input': [{ type: Input },],\n'dropdownOpen': [{ type: Input },],\n'options': [{ type: Input },],\n'display': [{ type: Input },],\n'key': [{ type: Input },],\n'allowNull': [{ type: Input },],\n'disabled': [{ type: Input },],\n'dropDirection': [{ type: Input },],\n'maxHeight': [{ type: Input },],\n'multiple': [{ type: Input },],\n'pageSize': [{ type: Input },],\n'placeholder': [{ type: Input },],\n'loadingTemplate': [{ type: Input },],\n'noOptionsTemplate': [{ type: Input },],\n'optionTemplate': [{ type: Input },],\n'valueChange': [{ type: Output },],\n'inputChange': [{ type: Output },],\n'dropdownOpenChange': [{ type: Output },],\n'singleInput': [{ type: ViewChild, args: ['singleInput', ] },],\n'multipleTypeahead': [{ type: ViewChild, args: ['multipleTypeahead', ] },],\n'singleTypeahead': [{ type: ViewChild, args: ['singleTypeahead', ] },],\n};\n}\n\nfunction SelectComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nSelectComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSelectComponent.ctorParameters;\n/** @type {?} */\nSelectComponent.propDecorators;\n/** @type {?} */\nSelectComponent.prototype.options;\n/** @type {?} */\nSelectComponent.prototype.display;\n/** @type {?} */\nSelectComponent.prototype.key;\n/** @type {?} */\nSelectComponent.prototype.allowNull;\n/** @type {?} */\nSelectComponent.prototype.disabled;\n/** @type {?} */\nSelectComponent.prototype.dropDirection;\n/** @type {?} */\nSelectComponent.prototype.maxHeight;\n/** @type {?} */\nSelectComponent.prototype.multiple;\n/** @type {?} */\nSelectComponent.prototype.pageSize;\n/** @type {?} */\nSelectComponent.prototype.placeholder;\n/** @type {?} */\nSelectComponent.prototype.loadingTemplate;\n/** @type {?} */\nSelectComponent.prototype.noOptionsTemplate;\n/** @type {?} */\nSelectComponent.prototype.optionTemplate;\n/** @type {?} */\nSelectComponent.prototype.valueChange;\n/** @type {?} */\nSelectComponent.prototype.inputChange;\n/** @type {?} */\nSelectComponent.prototype.dropdownOpenChange;\n/** @type {?} */\nSelectComponent.prototype.singleInput;\n/** @type {?} */\nSelectComponent.prototype.multipleTypeahead;\n/** @type {?} */\nSelectComponent.prototype.singleTypeahead;\n/** @type {?} */\nSelectComponent.prototype.filter$;\n/** @type {?} */\nSelectComponent.prototype.propagateChange;\n/** @type {?} */\nSelectComponent.prototype._value;\n/** @type {?} */\nSelectComponent.prototype._input$;\n/** @type {?} */\nSelectComponent.prototype._dropdownOpen;\n/** @type {?} */\nSelectComponent.prototype._subscription;\n/** @type {?} */\nSelectComponent.prototype._element;\n/** @type {?} */\nSelectComponent.prototype._document;\n/** @type {?} */\nSelectComponent.prototype._typeaheadKeyService;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { InfiniteScrollModule } from '../../directives/infinite-scroll/index';\nimport { ScrollIntoViewIfModule } from '../../directives/scroll-into-view-if/index';\nimport { TypeaheadKeyService } from './typeahead-key.service';\nimport { TypeaheadComponent } from './typeahead.component';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nexport class TypeaheadModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        CommonModule,\n        InfiniteScrollModule,\n        ScrollIntoViewIfModule\n    ],\n    exports: [TypeaheadComponent],\n    declarations: [TypeaheadComponent],\n    providers: [TypeaheadKeyService],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction TypeaheadModule_tsickle_Closure_declarations() {\n/** @type {?} */\nTypeaheadModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTypeaheadModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\n\nimport { ScrollIntoViewIfDirective } from './scroll-into-view-if.directive';\nimport { ScrollIntoViewService } from './scroll-into-view.service';\nexport class ScrollIntoViewIfModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [],\n    exports: [ScrollIntoViewIfDirective],\n    declarations: [ScrollIntoViewIfDirective],\n    providers: [ScrollIntoViewService],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ScrollIntoViewIfModule_tsickle_Closure_declarations() {\n/** @type {?} */\nScrollIntoViewIfModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nScrollIntoViewIfModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { ScrollIntoViewService } from './scroll-into-view.service';\nimport { Directive, ElementRef, Input, OnChanges, SimpleChanges } from '@angular/core';\nexport class ScrollIntoViewIfDirective implements OnChanges {\n\n     condition = false;\n     scrollParent: HTMLElement;\n/**\n * @param {?} element\n * @param {?} scrollIntoViewService\n */\nconstructor(private element: ElementRef,\nprivate scrollIntoViewService: ScrollIntoViewService) {}\n/**\n * @param {?} changes\n * @return {?}\n */\nngOnChanges(changes: SimpleChanges) {\n        if (this.condition) {\n            setTimeout(() => {\n                this.scrollIntoViewService.scrollIntoView(this.element.nativeElement, this.scrollParent);\n            });\n        }\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{ selector: '[uxScrollIntoViewIf]' }, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: ScrollIntoViewService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'condition': [{ type: Input, args: ['uxScrollIntoViewIf', ] },],\n'scrollParent': [{ type: Input },],\n};\n}\n\nfunction ScrollIntoViewIfDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nScrollIntoViewIfDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nScrollIntoViewIfDirective.ctorParameters;\n/** @type {?} */\nScrollIntoViewIfDirective.propDecorators;\n/** @type {?} */\nScrollIntoViewIfDirective.prototype.condition;\n/** @type {?} */\nScrollIntoViewIfDirective.prototype.scrollParent;\n/** @type {?} */\nScrollIntoViewIfDirective.prototype.element;\n/** @type {?} */\nScrollIntoViewIfDirective.prototype.scrollIntoViewService;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable, Inject } from '@angular/core';\nexport class ScrollIntoViewService {\n/**\n * @param {?} elem\n * @param {?} scrollParent\n * @return {?}\n */\nscrollIntoView(elem: HTMLElement, scrollParent: HTMLElement) {\n        const /** @type {?} */ offsetTop = (elem.getBoundingClientRect().top + scrollParent.scrollTop) - scrollParent.getBoundingClientRect().top;\n        if (offsetTop < scrollParent.scrollTop) {\n            scrollParent.scrollTop = offsetTop;\n        } else {\n            const /** @type {?} */ offsetBottom = offsetTop + elem.offsetHeight;\n            if (offsetBottom > (scrollParent.scrollTop + scrollParent.clientHeight)) {\n                scrollParent.scrollTop = offsetBottom - scrollParent.clientHeight;\n            }\n        }\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ScrollIntoViewService_tsickle_Closure_declarations() {\n/** @type {?} */\nScrollIntoViewService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nScrollIntoViewService.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { InfiniteScrollLoadButtonDirective } from './infinite-scroll-load-button.directive';\nimport { InfiniteScrollLoadingDirective } from './infinite-scroll-loading.directive';\nimport { InfiniteScrollDirective } from './infinite-scroll.directive';\nimport { NgModule } from '@angular/core';\nexport class InfiniteScrollModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [],\n    exports: [\n        InfiniteScrollDirective,\n        InfiniteScrollLoadButtonDirective,\n        InfiniteScrollLoadingDirective\n    ],\n    declarations: [\n        InfiniteScrollDirective,\n        InfiniteScrollLoadButtonDirective,\n        InfiniteScrollLoadingDirective\n    ],\n    providers: [],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction InfiniteScrollModule_tsickle_Closure_declarations() {\n/** @type {?} */\nInfiniteScrollModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nInfiniteScrollModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { AfterContentInit, ContentChildren, Directive, ElementRef, EventEmitter, Input, OnChanges, OnDestroy, OnInit, Output, QueryList, SimpleChanges } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { Observable } from 'rxjs/Observable';\nimport { Subject } from 'rxjs/Subject';\nimport { Subscription } from 'rxjs/Subscription';\nimport'rxjs/add/operator/auditTime';\nimport'rxjs/add/operator/combineLatest';\nimport'rxjs/add/operator/first';\nimport'rxjs/add/operator/partition';\nimport { from } from 'rxjs/observable/from';\nimport { fromEvent } from 'rxjs/observable/fromEvent';\nimport { of } from 'rxjs/observable/of';\nimport { InfiniteScrollLoadButtonDirective } from './infinite-scroll-load-button.directive';\nimport { InfiniteScrollLoadingDirective } from './infinite-scroll-loading.directive';\nexport class InfiniteScrollDirective implements OnInit, AfterContentInit, OnChanges, OnDestroy {\n\n     load: InfiniteScrollLoadFunction;\n\n     _collection: any[] = [];\n/**\n * @return {?}\n */\nget collection() {\n        return this._collection;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset collection(value: any[]) {\n        this.collectionChange.emit(value);\n        this._collection = value;\n    }\n/**\n * @param {?} element\n * @return {?}\n */\nset scrollElement(element: ElementRef | HTMLElement) {\n        this._scrollElement = element instanceof ElementRef ? element : new ElementRef(element);\n    }\n\n     enabled: boolean = true;\n     filter: any;\n     loadOnInit: boolean = true;\n     loadOnScroll: boolean = true;\n     pageSize: number = 20;\n\n     collectionChange = new EventEmitter<any[]>();\n\n    \n    loadingEvent = new EventEmitter<InfiniteScrollLoadingEvent>();\n\n    \n    loadedEvent = new EventEmitter<InfiniteScrollLoadedEvent>();\n\n    \n    loadErrorEvent = new EventEmitter<InfiniteScrollLoadErrorEvent>();\nprivate _loadButtonQuery: QueryList<InfiniteScrollLoadButtonDirective>;\nprivate _loadingIndicatorQuery: QueryList<InfiniteScrollLoadingDirective>;\nprivate _pages: any[][];\nprivate _nextPageNum = 0;\nprivate _domObserver: MutationObserver;\nprivate _scrollEventSub: Subscription;\nprivate _updateRequests = new Subject<InfiniteScrollRequest>();\nprivate _isLoading = new BehaviorSubject<boolean>(false);\nprivate _isExhausted = new BehaviorSubject<boolean>(false);\nprivate _loadButtonEnabled = new BehaviorSubject<boolean>(false);\nprivate _canLoadManually: Observable<boolean>;\nprivate _scrollElement: ElementRef;\nprivate _subscriptions: Subscription[] = [];\nprivate _loadButtonSubscriptions: Subscription[] = [];\n/**\n * @param {?} _element\n */\nconstructor(private _element: ElementRef) {\n        this._canLoadManually = this._isLoading.combineLatest(\n            this._isExhausted,\n            this._loadButtonEnabled,\n            (isLoading, isExhausted, loadButtonEnabled) => {\n                return !isLoading && !isExhausted && loadButtonEnabled;\n            }\n        );\n    }\n/**\n * @return {?}\n */\nngOnInit() {\n        if (!this._scrollElement) {\n            this._scrollElement = this._element;\n        }\n\n        this._loadButtonEnabled.next(!this.loadOnScroll);\n    }\n/**\n * @return {?}\n */\nngAfterContentInit() {\n\n        // There are two kinds of update requests: check and load.\n        // Check requests are throttled and will only cause an update if more data is required\n        // to fill the scrolling view, and it isn't already loading some.\n        // Load requests are not throttled and always request a page of data.\n        const /** @type {?} */ requests = this._updateRequests.partition(r => r.check);\n        requests[0].auditTime(200).subscribe(this.doRequest.bind(this));\n        requests[1].subscribe(this.doRequest.bind(this));\n\n        if (this.enabled) {\n            // Subscribe to scroll events and DOM changes.\n            this.attachEventHandlers();\n        }\n\n        // Connect the Load More button visible state.\n        this._canLoadManually.subscribe(canLoad => {\n            this._loadButtonQuery.forEach(loadButton => {\n                loadButton.visible = canLoad;\n            });\n        });\n\n        // Connect the loading indicator visible state.\n        this._isLoading.subscribe(isLoading => {\n            this._loadingIndicatorQuery.forEach(loading => {\n                loading.visible = isLoading;\n            });\n        });\n\n        // Link the Load More button click event to trigger an update.\n        this.attachLoadButtonEvents();\n        this._loadButtonQuery.changes.subscribe(query => {\n            this.attachLoadButtonEvents();\n        });\n\n        // Initial update.\n        if (this.loadOnInit) {\n            this.loadNextPage();\n        }\n    }\n/**\n * @param {?} changes\n * @return {?}\n */\nngOnChanges(changes: SimpleChanges) {\n        let /** @type {?} */ check = true;\n\n        if (changes.enabled && changes.enabled.currentValue !== changes.enabled.previousValue) {\n            if (changes.enabled.currentValue) {\n                this.attachEventHandlers();\n                this.reset();\n                check = false;\n            } else {\n                this.detachEventHandlers();\n            }\n        }\n\n        if (this.enabled) {\n            if (changes.filter && changes.filter.currentValue !== changes.filter.previousValue) {\n                this.reset();\n                check = false;\n            }\n\n            if (changes.loadOnScroll) {\n                this._loadButtonEnabled.next(\n                    !changes.loadOnScroll.currentValue\n                );\n            }\n\n            if (changes.pageSize && changes.pageSize.currentValue !== changes.pageSize.previousValue) {\n                this.reset();\n                check = false;\n            }\n\n            this._updateRequests.next({\n                check: check,\n                pageNumber: this._nextPageNum,\n                pageSize: this.pageSize,\n                filter: this.filter\n            });\n        }\n    }\n/**\n * @return {?}\n */\nngOnDestroy() {\n        this.detachEventHandlers();\n    }\n/**\n * Request an additional page of data.\n * @return {?}\n */\nloadNextPage() {\n        if (!this.enabled) {\n            return;\n        }\n\n        this._updateRequests.next({\n            check: false,\n            pageNumber: this._nextPageNum,\n            pageSize: this.pageSize,\n            filter: this.filter\n        });\n    }\n/**\n * Request a check for whether an additional page of data is required. This is throttled.\n * @return {?}\n */\ncheck() {\n        if (!this.enabled) {\n            return;\n        }\n\n        this._updateRequests.next({\n            check: true,\n            pageNumber: this._nextPageNum,\n            pageSize: this.pageSize,\n            filter: this.filter\n        });\n    }\n/**\n * Clear the collection. Future requests will load from page 0.\n * @return {?}\n */\nreset() {\n        if (!this.enabled) {\n            return;\n        }\n\n        // Reset the page counter.\n        this._nextPageNum = 0;\n\n        this._pages = [];\n\n        // Clear the collection (without changing the reference).\n        if (this.collection) {\n            this.collection.length = 0;\n        }\n\n        // Reset the exhausted flag, allowing the Load More button to appear.\n        this._isExhausted.next(false);\n\n        // Cancel any pending requests\n        if (this._subscriptions) {\n            this._subscriptions.forEach(request => request.unsubscribe());\n        }\n    }\n/**\n * Reload the data without clearing the view.\n * @return {?}\n */\nreload() {\n        this._pages.forEach((page, i) => this.reloadPage(i));\n    }\n/**\n * Reload the data in a specific page without clearing the view.\n * @param {?} pageNum Page number\n * @return {?}\n */\nreloadPage(pageNum: number) {\n        if (!this.enabled) {\n            return;\n        }\n\n        this._updateRequests.next({\n            check: false,\n            pageNumber: pageNum,\n            pageSize: this.pageSize,\n            filter: this.filter,\n            reload: true\n        });\n    }\n/**\n * Attach scroll event handler and DOM observer.\n * @return {?}\n */\nprivate attachEventHandlers() {\n\n        // if the scrollElement is documentElement we must watch for a scroll event on the document\n        const /** @type {?} */ target = this._scrollElement.nativeElement instanceof HTMLHtmlElement ? document : this._scrollElement.nativeElement;\n\n        // Subscribe to the scroll event on the target element.\n        this._scrollEventSub = fromEvent(target, 'scroll').subscribe(this.check.bind(this));\n\n        // Subscribe to child DOM changes. The main effect of this is to check whether even more data is\n        // required after the initial load.\n        this._domObserver = new MutationObserver(this.check.bind(this));\n        this._domObserver.observe(this._scrollElement.nativeElement, {\n            childList: true,\n            subtree: true\n        });\n    }\n/**\n * Detach scroll event handler and DOM observer.\n * @return {?}\n */\nprivate detachEventHandlers() {\n        if (this._scrollEventSub) {\n            this._scrollEventSub.unsubscribe();\n            this._scrollEventSub = null;\n        }\n\n        if (this._domObserver) {\n            this._domObserver.disconnect();\n            this._domObserver = null;\n        }\n    }\n/**\n * Remove any existing event subscriptions for the load button `load` event, then attach subscriptions\n * for any in the query.\n * @return {?}\n */\nprivate attachLoadButtonEvents() {\n        this._loadButtonSubscriptions.forEach(s => s.unsubscribe());\n        this._loadButtonSubscriptions = this._loadButtonQuery.map(\n            loadButton => loadButton.load.subscribe(this.loadNextPage.bind(this))\n        );\n    }\n/**\n * Conditionally loads a page into the collection based on directive state and request parameters.\n * @param {?} request\n * @return {?}\n */\nprivate doRequest(request: InfiniteScrollRequest) {\n\n        // Load a new page if the scroll position is beyond the threshhold and if the client code did not\n        // cancel.\n        if (this.needsData(request) && this.beginLoading(request)) {\n\n            // Invoke the callback load function, which returns a promose or plain data.\n            const /** @type {?} */ loadResult = this.load(request.pageNumber, request.pageSize, request.filter);\n\n            const /** @type {?} */ observable = Array.isArray(loadResult)\n                ? of(loadResult)\n                : from<any[]>(loadResult);\n\n            const /** @type {?} */ subscription = observable.first().subscribe(\n                items => {\n                    // Make sure that the parameters have not changed since the load started;\n                    // otherwise discard the results.\n                    if (request.filter === this.filter && request.pageSize === this.pageSize) {\n                        if (items && items.length) {\n                            this.setPageItems(request.pageNumber, items);\n                        }\n\n                        // Emit the loaded event\n                        this.endLoading(request, items);\n                    }\n                },\n                reason => {\n                    // Emit the loadError event\n                    this.endLoadingWithError(request, reason);\n                },\n                () => {\n                    // remove this request from the list\n                    this._subscriptions = this._subscriptions.filter(s => s !== subscription);\n                }\n            );\n\n            // add the subscription to the list of requests\n            this._subscriptions.push(subscription);\n        }\n    }\n/**\n * Returns true if the request should be fulfilled.\n * @param {?} request\n * @return {?}\n */\nprivate needsData(request: InfiniteScrollRequest): boolean {\n        if (!this.enabled) {\n            return false;\n        }\n\n        // Always load for a load request\n        if (!request.check) {\n            return true;\n        }\n\n        // Ignore a check request when the end of data has been detected, or if data is currently loading.\n        if (this._isExhausted.getValue() || this._isLoading.getValue()) {\n            return false;\n        }\n\n        // Load if the remaining scroll area is <= the element height.\n        if (this._scrollElement && this.loadOnScroll) {\n\n            const /** @type {?} */ element = /** @type {?} */(( <HTMLElement>this._scrollElement.nativeElement));\n            const /** @type {?} */ remainingScroll =\n                element.scrollHeight -\n                (element.scrollTop + element.clientHeight);\n\n            return remainingScroll <= element.clientHeight;\n        }\n\n        return false;\n    }\n/**\n * Updates state for the beginning of a load. Returns false if the `loading` event was cancelled.\n * @param {?} request\n * @return {?}\n */\nprivate beginLoading(request: InfiniteScrollRequest): boolean {\n\n        const /** @type {?} */ event = new InfiniteScrollLoadingEvent(\n            request.pageNumber,\n            request.pageSize,\n            request.filter\n        );\n        this.loadingEvent.emit(event);\n\n        this._isLoading.next(!event.defaultPrevented());\n\n        return !event.defaultPrevented();\n    }\n/**\n * @param {?} pageNum\n * @param {?} items\n * @return {?}\n */\nprivate setPageItems(pageNum: number, items: any[]) {\n        this._pages[pageNum] = items;\n        this.collection = this._pages.reduce((previous, current) => previous.concat(current), []);\n    }\n/**\n * Updates state from a successful load. Raises the `loaded` event.\n * @param {?} request\n * @param {?=} data\n * @return {?}\n */\nprivate endLoading(request: InfiniteScrollRequest, data?: any) {\n        this._isLoading.next(false);\n\n        const /** @type {?} */ isExhausted = !!(data && data.length < this.pageSize);\n        this._isExhausted.next(isExhausted);\n\n        this.loadedEvent.emit(\n            new InfiniteScrollLoadedEvent(\n                request.pageNumber,\n                request.pageSize,\n                request.filter,\n                data,\n                isExhausted\n            )\n        );\n\n        if (!request.reload) {\n            this._nextPageNum += 1;\n        }\n    }\n/**\n * Updates state from a failed load. Raises the `loadError` event.\n * @param {?} request\n * @param {?} error\n * @return {?}\n */\nprivate endLoadingWithError(request: InfiniteScrollRequest, error: any) {\n        this._isLoading.next(false);\n\n        this.loadErrorEvent.emit(\n            new InfiniteScrollLoadErrorEvent(\n                request.pageNumber,\n                request.pageSize,\n                request.filter,\n                error\n            )\n        );\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: '[uxInfiniteScroll]',\n    exportAs: 'uxInfiniteScroll'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'load': [{ type: Input, args: ['uxInfiniteScroll', ] },],\n'_collection': [{ type: Input, args: ['collection', ] },],\n'scrollElement': [{ type: Input },],\n'enabled': [{ type: Input },],\n'filter': [{ type: Input },],\n'loadOnInit': [{ type: Input },],\n'loadOnScroll': [{ type: Input },],\n'pageSize': [{ type: Input },],\n'collectionChange': [{ type: Output },],\n'loadingEvent': [{ type: Output, args: ['loading', ] },],\n'loadedEvent': [{ type: Output, args: ['loaded', ] },],\n'loadErrorEvent': [{ type: Output, args: ['loadError', ] },],\n'_loadButtonQuery': [{ type: ContentChildren, args: [InfiniteScrollLoadButtonDirective, ] },],\n'_loadingIndicatorQuery': [{ type: ContentChildren, args: [InfiniteScrollLoadingDirective, ] },],\n};\n}\n\nfunction InfiniteScrollDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nInfiniteScrollDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nInfiniteScrollDirective.ctorParameters;\n/** @type {?} */\nInfiniteScrollDirective.propDecorators;\n/** @type {?} */\nInfiniteScrollDirective.prototype.load;\n/** @type {?} */\nInfiniteScrollDirective.prototype._collection;\n/** @type {?} */\nInfiniteScrollDirective.prototype.enabled;\n/** @type {?} */\nInfiniteScrollDirective.prototype.filter;\n/** @type {?} */\nInfiniteScrollDirective.prototype.loadOnInit;\n/** @type {?} */\nInfiniteScrollDirective.prototype.loadOnScroll;\n/** @type {?} */\nInfiniteScrollDirective.prototype.pageSize;\n/** @type {?} */\nInfiniteScrollDirective.prototype.collectionChange;\n/** @type {?} */\nInfiniteScrollDirective.prototype.loadingEvent;\n/** @type {?} */\nInfiniteScrollDirective.prototype.loadedEvent;\n/** @type {?} */\nInfiniteScrollDirective.prototype.loadErrorEvent;\n/** @type {?} */\nInfiniteScrollDirective.prototype._loadButtonQuery;\n/** @type {?} */\nInfiniteScrollDirective.prototype._loadingIndicatorQuery;\n/** @type {?} */\nInfiniteScrollDirective.prototype._pages;\n/** @type {?} */\nInfiniteScrollDirective.prototype._nextPageNum;\n/** @type {?} */\nInfiniteScrollDirective.prototype._domObserver;\n/** @type {?} */\nInfiniteScrollDirective.prototype._scrollEventSub;\n/** @type {?} */\nInfiniteScrollDirective.prototype._updateRequests;\n/** @type {?} */\nInfiniteScrollDirective.prototype._isLoading;\n/** @type {?} */\nInfiniteScrollDirective.prototype._isExhausted;\n/** @type {?} */\nInfiniteScrollDirective.prototype._loadButtonEnabled;\n/** @type {?} */\nInfiniteScrollDirective.prototype._canLoadManually;\n/** @type {?} */\nInfiniteScrollDirective.prototype._scrollElement;\n/** @type {?} */\nInfiniteScrollDirective.prototype._subscriptions;\n/** @type {?} */\nInfiniteScrollDirective.prototype._loadButtonSubscriptions;\n/** @type {?} */\nInfiniteScrollDirective.prototype._element;\n}\n\n/**\n * The internal data associated with a load/check request.\n */\nclass InfiniteScrollRequest {\n    check: boolean;\n    pageNumber: number;\n    pageSize: number;\n    filter: any;\n    reload?: boolean;\n}\n\nfunction InfiniteScrollRequest_tsickle_Closure_declarations() {\n/** @type {?} */\nInfiniteScrollRequest.prototype.check;\n/** @type {?} */\nInfiniteScrollRequest.prototype.pageNumber;\n/** @type {?} */\nInfiniteScrollRequest.prototype.pageSize;\n/** @type {?} */\nInfiniteScrollRequest.prototype.filter;\n/** @type {?} */\nInfiniteScrollRequest.prototype.reload;\n}\n\n\nexport type InfiniteScrollLoadFunction = (\n    pageNum: number,\n    pageSize: number,\n    filter: any\n) => any | Promise<any>;\n/**\n * Event raised before the `loading` function is called.\n */\nexport class InfiniteScrollLoadingEvent {\nprivate _defaultPrevented = false;\n/**\n * @param {?} pageNumber\n * @param {?} pageSize\n * @param {?} filter\n */\nconstructor(\npublic pageNumber: number,\npublic pageSize: number,\npublic filter: any\n    ) { }\n/**\n * Prevents the default behaviour of the `loading` event (loading function will not be called).\n * @return {?}\n */\npreventDefault() {\n        this._defaultPrevented = true;\n    }\n/**\n * @return {?}\n */\ndefaultPrevented(): boolean {\n        return this._defaultPrevented;\n    }\n}\n\nfunction InfiniteScrollLoadingEvent_tsickle_Closure_declarations() {\n/** @type {?} */\nInfiniteScrollLoadingEvent.prototype._defaultPrevented;\n/**\n * The index of the requested page, starting from 0.\n * @type {?}\n */\nInfiniteScrollLoadingEvent.prototype.pageNumber;\n/**\n * The number of items requested.\n * @type {?}\n */\nInfiniteScrollLoadingEvent.prototype.pageSize;\n/**\n * The filter details as provided via the `filter` binding.\n * @type {?}\n */\nInfiniteScrollLoadingEvent.prototype.filter;\n}\n\n/**\n * Event raised when the loading function result has been resolved and added to the collection.\n */\nexport class InfiniteScrollLoadedEvent {\n/**\n * @param {?} pageNumber\n * @param {?} pageSize\n * @param {?} filter\n * @param {?} data\n * @param {?} exhausted\n */\nconstructor(\npublic pageNumber: number,\npublic pageSize: number,\npublic filter: any,\npublic data: any,\npublic exhausted: boolean\n    ) { }\n}\n\nfunction InfiniteScrollLoadedEvent_tsickle_Closure_declarations() {\n/**\n * The index of the requested page, starting from 0.\n * @type {?}\n */\nInfiniteScrollLoadedEvent.prototype.pageNumber;\n/**\n * The number of items requested.\n * @type {?}\n */\nInfiniteScrollLoadedEvent.prototype.pageSize;\n/**\n * The filter details as provided via the `filter` binding.\n * @type {?}\n */\nInfiniteScrollLoadedEvent.prototype.filter;\n/**\n * The result of the promise returned from the loading function.\n * @type {?}\n */\nInfiniteScrollLoadedEvent.prototype.data;\n/**\n * True if the data is considered exhausted (number of items returned less than `pageSize`).\n * @type {?}\n */\nInfiniteScrollLoadedEvent.prototype.exhausted;\n}\n\n/**\n * Event raised if the loading function returns a rejected promise.\n */\nexport class InfiniteScrollLoadErrorEvent {\n/**\n * @param {?} pageNumber\n * @param {?} pageSize\n * @param {?} filter\n * @param {?} error\n */\nconstructor(\npublic pageNumber: number,\npublic pageSize: number,\npublic filter: any,\npublic error: any\n    ) { }\n}\n\nfunction InfiniteScrollLoadErrorEvent_tsickle_Closure_declarations() {\n/**\n * The index of the requested page, starting from 0.\n * @type {?}\n */\nInfiniteScrollLoadErrorEvent.prototype.pageNumber;\n/**\n * The number of items requested.\n * @type {?}\n */\nInfiniteScrollLoadErrorEvent.prototype.pageSize;\n/**\n * The filter details as provided via the `filter` binding.\n * @type {?}\n */\nInfiniteScrollLoadErrorEvent.prototype.filter;\n/**\n * The object provided when rejecting the promise.\n * @type {?}\n */\nInfiniteScrollLoadErrorEvent.prototype.error;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, Input, TemplateRef, ViewContainerRef } from '@angular/core';\nexport class InfiniteScrollLoadingDirective {\n/**\n * @return {?}\n */\nget visible() {\n        return this._visible;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset visible(value: boolean) {\n        if (value !== this._visible) {\n            if (value) {\n                this._viewContainer.createEmbeddedView(this._templateRef);\n            } else {\n                this._viewContainer.clear();\n            }\n        }\n        \n        this._visible = value;\n    }\nprivate _visible: boolean = false;\n/**\n * @param {?} _templateRef\n * @param {?} _viewContainer\n */\nconstructor(\nprivate _templateRef: TemplateRef<any>,\nprivate _viewContainer: ViewContainerRef) { }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: '[uxInfiniteScrollLoading]'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: TemplateRef, },\n{type: ViewContainerRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'visible': [{ type: Input, args: ['uxInfiniteScrollLoading', ] },],\n};\n}\n\nfunction InfiniteScrollLoadingDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nInfiniteScrollLoadingDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nInfiniteScrollLoadingDirective.ctorParameters;\n/** @type {?} */\nInfiniteScrollLoadingDirective.propDecorators;\n/** @type {?} */\nInfiniteScrollLoadingDirective.prototype._visible;\n/** @type {?} */\nInfiniteScrollLoadingDirective.prototype._templateRef;\n/** @type {?} */\nInfiniteScrollLoadingDirective.prototype._viewContainer;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ElementRef, Input, Output, Renderer2, TemplateRef, ViewContainerRef } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { Subject } from 'rxjs/Subject';\nexport class InfiniteScrollLoadButtonDirective {\n/**\n * @return {?}\n */\nget visible() {\n        return this._visible;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset visible(value: boolean) {\n        if (value !== this._visible) {\n            if (value) {\n                this._viewContainer.createEmbeddedView(this._template);\n\n                // Template content follows the elementRef, which is a comment.\n                const /** @type {?} */ clickTarget = this.getNextElementSibling(this._template.elementRef.nativeElement);\n                this._renderer.listen(clickTarget, 'click', this.onClick.bind(this));\n            } else {\n                this._viewContainer.clear();\n            }\n        }\n\n        this._visible = value;\n    }\n\n     load: Observable<Event>;\nprivate _visible: boolean = false;\nprivate _load = new Subject();\n/**\n * @param {?} _element\n * @param {?} _template\n * @param {?} _viewContainer\n * @param {?} _renderer\n */\nconstructor(\nprivate _element: ElementRef,\nprivate _template: TemplateRef<any>,\nprivate _viewContainer: ViewContainerRef,\nprivate _renderer: Renderer2) {\n\n        this.load = this._load.asObservable() as Observable<Event>;\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nprivate onClick(event: MouseEvent) {\n        this._load.next(event);\n    }\n/**\n * @param {?} element\n * @return {?}\n */\nprivate getNextElementSibling(element: any): Element {\n        var /** @type {?} */ next = element;\n        while (next = next.nextSibling) {\n            if (next.nodeType === 1) {\n                return next;\n            }\n        }\n        return null;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: '[uxInfiniteScrollLoadButton]'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: TemplateRef, },\n{type: ViewContainerRef, },\n{type: Renderer2, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'visible': [{ type: Input, args: ['uxInfiniteScrollLoadButton', ] },],\n'load': [{ type: Output },],\n};\n}\n\nfunction InfiniteScrollLoadButtonDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nInfiniteScrollLoadButtonDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nInfiniteScrollLoadButtonDirective.ctorParameters;\n/** @type {?} */\nInfiniteScrollLoadButtonDirective.propDecorators;\n/** @type {?} */\nInfiniteScrollLoadButtonDirective.prototype.load;\n/** @type {?} */\nInfiniteScrollLoadButtonDirective.prototype._visible;\n/** @type {?} */\nInfiniteScrollLoadButtonDirective.prototype._load;\n/** @type {?} */\nInfiniteScrollLoadButtonDirective.prototype._element;\n/** @type {?} */\nInfiniteScrollLoadButtonDirective.prototype._template;\n/** @type {?} */\nInfiniteScrollLoadButtonDirective.prototype._viewContainer;\n/** @type {?} */\nInfiniteScrollLoadButtonDirective.prototype._renderer;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { AfterViewInit, ChangeDetectorRef, Component, ElementRef, EventEmitter, Input, OnChanges, Output, SimpleChanges, TemplateRef, ViewChild, HostListener } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { InfiniteScrollLoadFunction } from '../../directives/infinite-scroll/index';\nimport { TypeaheadOptionEvent } from './typeahead-event';\nexport class TypeaheadComponent implements AfterViewInit, OnChanges {\n\n     options: any[] | InfiniteScrollLoadFunction;\n     filter: string;\nprivate _open: boolean = false;\n/**\n * @return {?}\n */\nget open() {\n        return this._open;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset open(value: boolean) {\n        const /** @type {?} */ originalValue = this._open;\n        this._open = value;\n        if (value !== originalValue) {\n            this.openChange.emit(value);\n            if (value) {\n                this.initOptions();\n            }\n        }\n    }\n\n     openChange = new EventEmitter<boolean>();\n\n     display: (option: any) => string | string;\n     key: (option: any) => string | string;\n     disabledOptions: any[];\n     dropDirection: 'up' | 'down' = 'down';\n     maxHeight: string = '250px';\n     openOnFilterChange: boolean = true;\n     pageSize: number = 20;\n     selectFirst: boolean = true;\n\n     loadingTemplate: TemplateRef<any>;\n     optionTemplate: TemplateRef<any>;\n     noOptionsTemplate: TemplateRef<any>;\n\n     optionSelected = new EventEmitter<TypeaheadOptionEvent>();\nprivate _highlighted = new BehaviorSubject<any>(null);\n/**\n * @return {?}\n */\nget highlighted(): any {\n        return this._highlighted.getValue();\n    }\nprivate _defaultLoadingTemplate: TemplateRef<any>;\nprivate _defaultOptionTemplate: TemplateRef<any>;\nprivate _defaultNoOptionsTemplate: TemplateRef<any>;\n\n    loadOptionsCallback: InfiniteScrollLoadFunction;\n    visibleOptions: any[] = [];\n    loading = false;\n    clicking = false;\n\n    optionApi: TypeaheadOptionApi = {\n        getKey: this.getKey.bind(this),\n        getDisplay: this.getDisplay.bind(this),\n        getDisplayHtml: this.getDisplayHtml.bind(this)\n    };\n/**\n * @param {?} typeaheadElement\n * @param {?} cdRef\n */\nconstructor(public typeaheadElement: ElementRef,\nprivate cdRef: ChangeDetectorRef) {\n\n        this.loadOptionsCallback = (pageNum: number, pageSize: number, filter: any) => {\n            if (typeof this.options === 'function') {\n                return this.options(pageNum, pageSize, filter);\n            }\n            return null;\n        };\n    }\n/**\n * @return {?}\n */\nngAfterViewInit() {\n        // Attach default loading template\n        if (!this.loadingTemplate) {\n            this.loadingTemplate = this._defaultLoadingTemplate;\n        }\n\n        // Attach default option template\n        if (!this.optionTemplate) {\n            this.optionTemplate = this._defaultOptionTemplate;\n        }\n\n        // Attach default \"no results\" template\n        if (!this.noOptionsTemplate) {\n            this.noOptionsTemplate = this._defaultNoOptionsTemplate;\n        }\n\n        this.cdRef.detectChanges();\n    }\n/**\n * @param {?} changes\n * @return {?}\n */\nngOnChanges(changes: SimpleChanges) {\n        // Open the dropdown if the filter value updates\n        if (changes.filter) {\n            if (this.openOnFilterChange && changes.filter.currentValue && changes.filter.currentValue.length > 0) {\n                this.open = true;\n            }\n        }\n\n        // Re-filter visibleOptions\n        this.updateOptions();\n    }\n/**\n * @return {?}\n */\nprivate mousedownHandler() {\n        this.clicking = true;\n    }\n/**\n * @return {?}\n */\nprivate mouseupHandler() {\n        this.clicking = false;\n    }\n/**\n * @param {?} event\n * @return {?}\n */\noptionMousedownHandler(event: MouseEvent) {\n        // Workaround to prevent focus changing when an option is clicked\n        event.preventDefault();\n    }\n/**\n * @param {?} event\n * @param {?} option\n * @return {?}\n */\noptionClickHandler(event: MouseEvent, option: any) {\n        this.select(option);\n    }\n/**\n * Returns the unique key value of the given option.\n * @param {?} option\n * @return {?}\n */\ngetKey(option: any): string {\n        if (typeof this.key === 'function') {\n            return this.key(option);\n        }\n        if (typeof this.key === 'string' && option && option.hasOwnProperty(this.key)) {\n            return option[ /** @type {?} */((<string>this.key))];\n        }\n        return this.getDisplay(option);\n    }\n/**\n * Returns the display value of the given option.\n * @param {?} option\n * @return {?}\n */\ngetDisplay(option: any): string {\n        if (typeof this.display === 'function') {\n            return this.display(option);\n        }\n        if (typeof this.display === 'string' && option && option.hasOwnProperty(this.display)) {\n            return option[ /** @type {?} */((<string>this.display))];\n        }\n        return option;\n    }\n/**\n * Returns the display value of the given option with HTML markup added to highlight the part which matches the current filter value.\n * @param {?} option\n * @return {?}\n */\ngetDisplayHtml(option: any) {\n        let /** @type {?} */ displayText;\n        if (typeof option === 'string') {\n            displayText = this.getDisplay(option).replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;');\n        } else {\n            displayText = this.getDisplay(option.name).replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;');\n        }\n        let /** @type {?} */ displayHtml = displayText;\n        if (this.filter) {\n            const /** @type {?} */ length = this.filter.length;\n            const /** @type {?} */ matchIndex = displayText.toLowerCase().indexOf(this.filter.toLowerCase());\n            if (matchIndex >= 0) {\n                var /** @type {?} */ highlight = `<span class=\"ux-filter-match\">${displayText.substr(matchIndex, length)}</span>`;\n                displayHtml = displayText.substr(0, matchIndex) + highlight + displayText.substr(matchIndex + length);\n            }\n        }\n        return displayHtml;\n    }\n/**\n * Returns true if the infinite scroll component should load\n * @return {?}\n */\nisInfiniteScroll() {\n        return typeof this.options === 'function';\n    }\n/**\n * Selects the given option, emitting the optionSelected event and closing the dropdown.\n * @param {?} option\n * @return {?}\n */\nselect(option: any) {\n        if (!this.isDisabled(option)) {\n            this.optionSelected.emit(new TypeaheadOptionEvent(option));\n            this._highlighted.next(null);\n            this.open = false;\n        }\n    }\n/**\n * Returns true if the given option is part of the disabledOptions array.\n * @param {?} option\n * @return {?}\n */\nisDisabled(option: any): boolean {\n        if (this.disabledOptions) {\n            const /** @type {?} */ optionKey = this.getKey(option);\n            const /** @type {?} */ result = this.disabledOptions.find((selectedOption) => {\n                return this.getKey(selectedOption) === optionKey;\n            });\n            return result !== undefined;\n        }\n        return false;\n    }\n/**\n * Set the given option as the current highlighted option, available in the highlightedOption parameter.\n * @param {?} option\n * @return {?}\n */\nhighlight(option: any) {\n        if (!this.isDisabled(option)) {\n            this._highlighted.next(option);\n        }\n    }\n/**\n * Increment or decrement the highlighted option in the list. Disabled options are skipped.\n * @param {?} d Value to be added to the index of the highlighted option, i.e. -1 to move backwards, +1 to move forwards.\n * @return {?}\n */\nmoveHighlight(d: number): any {\n        const /** @type {?} */ highlightIndex = this.indexOfVisibleOption(this.highlighted);\n        let /** @type {?} */ newIndex = highlightIndex;\n        let /** @type {?} */ disabled = true;\n        let /** @type {?} */ inBounds = true;\n        do {\n            newIndex = newIndex + d;\n            inBounds = (newIndex >= 0 && newIndex < this.visibleOptions.length);\n            disabled = inBounds && this.isDisabled(this.visibleOptions[newIndex]);\n        }\n        while (inBounds && disabled);\n\n        if (!disabled && inBounds) {\n            this._highlighted.next(this.visibleOptions[newIndex]);\n        }\n\n        return this.highlighted;\n    }\n/**\n * Returns true if the given option is the highlighted option.\n * @param {?} option\n * @return {?}\n */\nisHighlighted(option: any): boolean {\n        return this.getKey(option) === this.getKey(this.highlighted);\n    }\n/**\n * Set up the options before the dropdown is displayed.\n * @return {?}\n */\ninitOptions() {\n        // Clear previous highlight\n        this._highlighted.next(null);\n        if (this.selectFirst) {\n            // This will highlight the first non-disabled option.\n            this.moveHighlight(1);\n        }\n    }\n/**\n * Update the visibleOptions array with the current filter.\n * @return {?}\n */\nupdateOptions() {\n        if (typeof this.options === 'object') {\n            const /** @type {?} */ normalisedInput = (this.filter || '').toLowerCase();\n            this.visibleOptions = this.options.filter((option) => {\n                return this.getDisplay(option).toLowerCase().indexOf(normalisedInput) >= 0;\n            });\n        }\n\n        this.initOptions();\n    }\n/**\n * Return the index of the given option in the visibleOptions array. Returns -1 if the option is not currently visible.\n * @param {?} option\n * @return {?}\n */\nprivate indexOfVisibleOption(option: any): number {\n        if (option) {\n            const /** @type {?} */ optionKey = this.getKey(option);\n            return this.visibleOptions.findIndex((el) => {\n                return this.getKey(el) === optionKey;\n            });\n        }\n\n        return -1;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-typeahead',\n    template: `\n      <div class=\"ux-typeahead-options\"\n          [uxInfiniteScroll]=\"loadOptionsCallback\"\n          [(collection)]=\"visibleOptions\"\n          [enabled]=\"isInfiniteScroll()\"\n          [filter]=\"filter\"\n          [loadOnScroll]=\"true\"\n          [pageSize]=\"pageSize\"\n          [scrollElement]=\"typeaheadElement\"\n          (loading)=\"loading = true\"\n          (loaded)=\"loading = false\">\n\n          <ol *ngIf=\"visibleOptions.length > 0\">\n              <li *ngFor=\"let option of visibleOptions; let i = index\"\n                  [class.disabled]=\"isDisabled(option)\"\n                  [class.highlighted]=\"isHighlighted(option)\"\n                  [uxScrollIntoViewIf]=\"isHighlighted(option)\"\n                  [scrollParent]=\"typeaheadElement.nativeElement\"\n                  (mousedown)=\"optionMousedownHandler($event)\"\n                  (click)=\"optionClickHandler($event, option)\"\n                  (mouseover)=\"highlight(option)\">\n\n                  <ng-container [ngTemplateOutlet]=\"optionTemplate\"\n                      [ngTemplateOutletContext]=\"{option: option, api: optionApi}\">\n                  </ng-container>\n\n              </li>\n          </ol>\n\n          <div *uxInfiniteScrollLoading>\n              <ng-container [ngTemplateOutlet]=\"loadingTemplate\">\n              </ng-container>\n          </div>\n\n      </div>\n      <div *ngIf=\"visibleOptions.length === 0 && !loading\">\n          <ng-container [ngTemplateOutlet]=\"noOptionsTemplate\">\n          </ng-container>\n      </div>\n\n      <ng-template #defaultLoadingTemplate>\n          <div class=\"ux-typeahead-loading\">\n              <div class=\"spinner spinner-accent spinner-bounce-middle\"></div>\n              <div>Loading...</div>\n          </div>\n      </ng-template>\n\n      <ng-template #defaultOptionTemplate let-option=\"option\" let-api=\"api\">\n          <span class=\"ux-typeahead-option\" [innerHtml]=\"api.getDisplayHtml(option)\"></span>\n      </ng-template>\n\n      <ng-template #defaultNoOptionsTemplate>\n          <span class=\"ux-typeahead-no-options\">No results</span>\n      </ng-template>\n    `,\n    host: {\n        '[class.open]': 'open',\n        '[class.drop-up]': 'dropDirection === \"up\"',\n        '[style.maxHeight]': 'maxHeight'\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: ChangeDetectorRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'options': [{ type: Input },],\n'filter': [{ type: Input },],\n'open': [{ type: Input, args: ['open', ] },],\n'openChange': [{ type: Output },],\n'display': [{ type: Input },],\n'key': [{ type: Input },],\n'disabledOptions': [{ type: Input },],\n'dropDirection': [{ type: Input },],\n'maxHeight': [{ type: Input },],\n'openOnFilterChange': [{ type: Input },],\n'pageSize': [{ type: Input },],\n'selectFirst': [{ type: Input },],\n'loadingTemplate': [{ type: Input },],\n'optionTemplate': [{ type: Input },],\n'noOptionsTemplate': [{ type: Input },],\n'optionSelected': [{ type: Output },],\n'highlighted': [{ type: Output },],\n'_defaultLoadingTemplate': [{ type: ViewChild, args: ['defaultLoadingTemplate', ] },],\n'_defaultOptionTemplate': [{ type: ViewChild, args: ['defaultOptionTemplate', ] },],\n'_defaultNoOptionsTemplate': [{ type: ViewChild, args: ['defaultNoOptionsTemplate', ] },],\n'mousedownHandler': [{ type: HostListener, args: ['mousedown', ] },],\n'mouseupHandler': [{ type: HostListener, args: ['mouseup', ] },],\n};\n}\n\nfunction TypeaheadComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nTypeaheadComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTypeaheadComponent.ctorParameters;\n/** @type {?} */\nTypeaheadComponent.propDecorators;\n/** @type {?} */\nTypeaheadComponent.prototype.options;\n/** @type {?} */\nTypeaheadComponent.prototype.filter;\n/** @type {?} */\nTypeaheadComponent.prototype._open;\n/** @type {?} */\nTypeaheadComponent.prototype.openChange;\n/** @type {?} */\nTypeaheadComponent.prototype.display;\n/** @type {?} */\nTypeaheadComponent.prototype.key;\n/** @type {?} */\nTypeaheadComponent.prototype.disabledOptions;\n/** @type {?} */\nTypeaheadComponent.prototype.dropDirection;\n/** @type {?} */\nTypeaheadComponent.prototype.maxHeight;\n/** @type {?} */\nTypeaheadComponent.prototype.openOnFilterChange;\n/** @type {?} */\nTypeaheadComponent.prototype.pageSize;\n/** @type {?} */\nTypeaheadComponent.prototype.selectFirst;\n/** @type {?} */\nTypeaheadComponent.prototype.loadingTemplate;\n/** @type {?} */\nTypeaheadComponent.prototype.optionTemplate;\n/** @type {?} */\nTypeaheadComponent.prototype.noOptionsTemplate;\n/** @type {?} */\nTypeaheadComponent.prototype.optionSelected;\n/** @type {?} */\nTypeaheadComponent.prototype._highlighted;\n/** @type {?} */\nTypeaheadComponent.prototype._defaultLoadingTemplate;\n/** @type {?} */\nTypeaheadComponent.prototype._defaultOptionTemplate;\n/** @type {?} */\nTypeaheadComponent.prototype._defaultNoOptionsTemplate;\n/** @type {?} */\nTypeaheadComponent.prototype.loadOptionsCallback;\n/** @type {?} */\nTypeaheadComponent.prototype.visibleOptions;\n/** @type {?} */\nTypeaheadComponent.prototype.loading;\n/** @type {?} */\nTypeaheadComponent.prototype.clicking;\n/** @type {?} */\nTypeaheadComponent.prototype.optionApi;\n/** @type {?} */\nTypeaheadComponent.prototype.typeaheadElement;\n/** @type {?} */\nTypeaheadComponent.prototype.cdRef;\n}\n\n\n/**\n * The API available to option templates.\n */\nexport interface TypeaheadOptionApi {\n\n    /**\n     * Returns the unique key value of the given option.\n     */\n    getKey(option: any): string;\n\n    /**\n     * Returns the display value of the given option.\n     */\n    getDisplay(option: any): string;\n\n    /**\n     * Returns the display value of the given option with HTML markup added to highlight the part which matches the current filter value. Override the ux-filter-match class in CSS to modify the default appearance.\n     */\n    getDisplayHtml(option: any): string;\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { TypeaheadComponent } from './index';\nimport { Injectable } from '@angular/core';\nexport class TypeaheadKeyService {\nconstructor() { }\n/**\n * @param {?} event\n * @param {?} typeahead\n * @return {?}\n */\nhandleKey(event: KeyboardEvent, typeahead: TypeaheadComponent) {\n        if (typeahead) {\n            switch (event.key) {\n                case 'ArrowUp':\n                case 'Up':\n                    if (!typeahead.open) {\n                        typeahead.open = true;\n                    } else {\n                        typeahead.moveHighlight(-1);\n                    }\n                    event.preventDefault();\n                    break;\n                case 'ArrowDown':\n                case 'Down':\n                    if (!typeahead.open) {\n                        typeahead.open = true;\n                    } else {\n                        typeahead.moveHighlight(1);\n                    }\n                    event.preventDefault();\n                    break;\n                case 'Escape':\n                case 'Esc':\n                    typeahead.open = false;\n                    break;\n            }\n        }\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction TypeaheadKeyService_tsickle_Closure_declarations() {\n/** @type {?} */\nTypeaheadKeyService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTypeaheadKeyService.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","\nexport class TypeaheadOptionEvent {\n/**\n * @param {?} option\n */\nconstructor(public option: any) {}\n}\n\nfunction TypeaheadOptionEvent_tsickle_Closure_declarations() {\n/** @type {?} */\nTypeaheadOptionEvent.prototype.option;\n}\n","import { Component, Input, EventEmitter, Output, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs/Subscription';\nimport { SearchBuilderService } from './search-builder.service';\nimport { SearchBuilderQuery } from './interfaces/query.interface';\nimport { SearchBuilderComponentDefinition } from './interfaces/component-definition.interface';\nimport { SearchTextComponent } from './search-components/text/text.component';\nimport { SearchDateComponent } from './search-components/date/date.component';\nimport { SearchDateRangeComponent } from './search-components/date-range/date-range.component';\nimport { SearchSelectComponent } from './search-components/select/select.component';\nimport'rxjs/add/operator/distinctUntilChanged';\nexport class SearchBuilderComponent implements OnDestroy {\n/**\n * @param {?} components\n * @return {?}\n */\nset components(components: SearchBuilderComponentDefinition[]) {\n    this._searchBuilderService.registerComponents(components);\n  }\n/**\n * @param {?} value\n * @return {?}\n */\nset query(value: SearchBuilderQuery) {\n    this._searchBuilderService.setQuery(value);\n  }\n/**\n * @return {?}\n */\nget query() {\n    return this._searchBuilderService.getQuery();\n  }\n\n   queryChange: EventEmitter<SearchBuilderQuery> = new EventEmitter<SearchBuilderQuery>();\n   valid: EventEmitter<boolean> = new EventEmitter<boolean>(true);\nprivate _querySubscription: Subscription;\nprivate _validSubscription: Subscription;\n/**\n * Register the default search builder components\n * @param {?} _searchBuilderService\n */\nconstructor(private _searchBuilderService: SearchBuilderService) {\n\n    // watch for any query changes\n    this._querySubscription = _searchBuilderService.queryChange.subscribe(query => this.queryChange.emit(query));\n\n    // watch for any changes to the validation\n    this._validSubscription = _searchBuilderService.validationChange.distinctUntilChanged().subscribe(valid => this.valid.emit(valid));\n  }\n/**\n * Remove any subscriptions and cleanup\n * @return {?}\n */\nngOnDestroy(): void {\n    this._querySubscription.unsubscribe();\n    this._validSubscription.unsubscribe();\n  }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'ux-search-builder',\n  template: `\n    <ng-content></ng-content>\n  `,\n  providers: [SearchBuilderService]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: SearchBuilderService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'components': [{ type: Input },],\n'query': [{ type: Input },],\n'queryChange': [{ type: Output },],\n'valid': [{ type: Output },],\n};\n}\n\nfunction SearchBuilderComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nSearchBuilderComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSearchBuilderComponent.ctorParameters;\n/** @type {?} */\nSearchBuilderComponent.propDecorators;\n/** @type {?} */\nSearchBuilderComponent.prototype.queryChange;\n/** @type {?} */\nSearchBuilderComponent.prototype.valid;\n/** @type {?} */\nSearchBuilderComponent.prototype._querySubscription;\n/** @type {?} */\nSearchBuilderComponent.prototype._validSubscription;\n/** @type {?} */\nSearchBuilderComponent.prototype._searchBuilderService;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component } from '@angular/core';\nimport { BaseSearchComponent, BaseSearchComponentConfig } from '../base-search.component';\nimport { InfiniteScrollLoadFunction } from '../../../../index';\nexport class SearchSelectComponent extends BaseSearchComponent {\n\n  type: string = 'select';\n/**\n * Provide defaults for undefined properties\n * @return {?}\n */\nget label(): string {\n    return this.config.label;\n  }\n/**\n * @return {?}\n */\nget options() {\n    return this.config.options || [];\n  }\n/**\n * @return {?}\n */\nget multiple(): boolean {\n    return this.config.multiple || false;\n  }\n/**\n * @return {?}\n */\nget placeholder(): string {\n    return this.config.placeholder || 'Select item';\n  }\n/**\n * @return {?}\n */\nget dropDirection(): string {\n    return this.config.dropDirection || 'down';\n  }\n/**\n * @return {?}\n */\nget allowNull(): boolean {\n    return this.config.allowNull || false;\n  }\n/**\n * @return {?}\n */\nget disabled(): boolean {\n    return this.config.disabled || false;\n  }\n/**\n * @return {?}\n */\nget maxHeight(): string {\n    return this.config.maxHeight || '250px';\n  }\n/**\n * @return {?}\n */\nget pageSize(): number {\n    return this.config.pageSize || 20;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'ux-search-select',\n  template: `\n    <label class=\"form-label\" *ngIf=\"label\">{{ label }}</label>\n\n    <ux-select [(value)]=\"value\" \n               [options]=\"options\" \n               [multiple]=\"multiple\" \n               [placeholder]=\"placeholder\" \n               [dropDirection]=\"dropDirection\"\n               [pageSize]=\"pageSize\"\n               [allowNull]=\"allowNull\"\n               [disabled]=\"disabled\"\n               [maxHeight]=\"maxHeight\"\n               [key]=\"config.key\"\n               [display]=\"config.display\"\n               [loadingTemplate]=\"config.loadingTemplate\"\n               [optionTemplate]=\"config.optionTemplate\"\n               [noOptionsTemplate]=\"config.noOptionsTemplate\">\n    </ux-select>\n  `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction SearchSelectComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nSearchSelectComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSearchSelectComponent.ctorParameters;\n/** @type {?} */\nSearchSelectComponent.prototype.type;\n}\n\n\nexport interface SearchSelectConfig extends BaseSearchComponentConfig {\n  options?: any[] | InfiniteScrollLoadFunction;\n  multiple?: boolean;\n  dropDirection?: 'up' | 'down';\n  allowNull?: boolean;\n  disabled?: boolean;\n  maxHeight?: string;\n  pageSize?: number;\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component } from '@angular/core';\nimport { BaseSearchComponent } from '../base-search.component';\nimport { DateTimePickerTimezone } from '../../../date-time-picker/index';\nexport class SearchDateRangeComponent extends BaseSearchComponent {\n\n    type: string = 'date-range';\n/**\n * @return {?}\n */\nget label(): string {\n        return this.config.label;\n    }\n/**\n * @return {?}\n */\nget from() {\n\n        // if value does not exist the set it\n        if (!this.value || !this.value.from) {\n            this.from = new Date();\n        }\n\n        // ensure that the from value is a date object\n        if (this.value.from instanceof Date === false) {\n            this.value.from = new Date(this.value.from);\n        }\n\n        return this.value.from;\n    }\n/**\n * @param {?} fromValue\n * @return {?}\n */\nset from(fromValue: any) {\n\n        // create new object based on the current value\n        const /** @type {?} */ value = Object.assign({}, this.value);\n\n        // ensure that the from value is a date\n        if (fromValue instanceof Date === false) {\n            fromValue = new Date(fromValue);\n        }\n\n        // set the latest value\n        value.from = fromValue;\n\n        // update the value object while ensuring immutability\n        this.value = value;\n    }\n/**\n * @return {?}\n */\nget to() {\n\n        // if value does not exist the set it\n        if (!this.value || !this.value.to) {\n            this.to = new Date();\n        }\n\n        // ensure that the to value is a date object\n        if (this.value.to instanceof Date === false) {\n            this.value.to = new Date(this.value.to);\n        }\n\n        return this.value.to;\n    }\n/**\n * @param {?} toValue\n * @return {?}\n */\nset to(toValue: any) {\n\n        // create new object based on the current value\n        const /** @type {?} */ value = Object.assign({}, this.value);\n\n        // ensure that the to value is a date\n        if (toValue instanceof Date === false) {\n            toValue = new Date(toValue);\n        }\n\n        // set the latest value\n        value.to = toValue;\n\n        // update the value object while ensuring immutability\n        this.value = value;\n    }\n/**\n * @return {?}\n */\nget fromLabel(): string {\n        return this.config.fromLabel || 'From';\n    }\n/**\n * @return {?}\n */\nget toLabel(): string {\n        return this.config.toLabel || 'To';\n    }\n/**\n * @return {?}\n */\nget fromPlaceholder(): string {\n        return this.config.fromPlaceholder;\n    }\n/**\n * @return {?}\n */\nget toPlaceholder(): string {\n        return this.config.toPlaceholder;\n    }\n/**\n * Override the default validation\n * @return {?}\n */\nvalidate(): void {\n\n        // check if there is a config validation function\n        if (this.config.validation) {\n            return super.validate();\n        }\n\n        // create copies of the dates so we can modify time value (to ignore it)\n        const /** @type {?} */ from = new Date(this.value.from);\n        const /** @type {?} */ to = new Date(this.value.to);\n\n        // set the time to the same so we dont compare it\n        from.setHours(0, 0, 0, 0);\n        to.setHours(0, 0, 0, 0);\n\n        // valid if the from date is less than or equal to the to date\n        this.valid = from <= to;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-search-date-range',\n    template: `\n      <label class=\"form-label\" *ngIf=\"label\">{{ label }}</label>\n\n      <div class=\"row\">\n          <div class=\"col-sm-12\">\n              <div class=\"form-inline\" [class.has-error]=\"!valid\">\n\n                  <div class=\"form-group p-r-md\">\n                      <label class=\"form-label m-r-xs\">{{ fromLabel }}</label>\n\n                      <div class=\"input-group date m-nil\">\n                          <span class=\"input-group-addon p-r-xs\" tabindex=\"1\" (click)=\"fromPopover.show()\">\n                              <i class=\"hpe-icon hpe-calendar\" aria-hidden=\"true\"></i>\n                          </span>\n                          <input type=\"text\" #fromPopover=\"ux-popover\" [ngModel]=\"from | date:'dd MMMM yyyy'\" [uxPopover]=\"fromPopoverTemplate\" placement=\"bottom\"\n                              popoverClass=\"date-time-picker-popover\" class=\"form-control\" aria-label=\"Selected date\" [placeholder]=\"fromPlaceholder\">\n                      </div>\n                  </div>\n\n                  <div class=\"form-group p-r-xs\">\n                      <label class=\"form-label m-r-xs\">{{ toLabel }}</label>\n\n                      <div class=\"input-group date m-nil\">\n                          <span class=\"input-group-addon\" tabindex=\"1\" (click)=\"toPopover.show()\">\n                              <i class=\"hpe-icon hpe-calendar\" aria-hidden=\"true\"></i>\n                          </span>\n                          <input type=\"text\" #toPopover=\"ux-popover\" [ngModel]=\"to | date:'dd MMMM yyyy'\" [uxPopover]=\"toPopoverTemplate\" placement=\"bottom\"\n                              popoverClass=\"date-time-picker-popover\" class=\"form-control\" aria-label=\"Selected date\" [placeholder]=\"toPlaceholder\">\n                      </div>\n                  </div>\n\n              </div>\n          </div>\n      </div>\n\n      <ng-template #fromPopoverTemplate>\n          <ux-date-time-picker [(date)]=\"from\" [showTime]=\"false\"></ux-date-time-picker>\n      </ng-template>\n\n      <ng-template #toPopoverTemplate>\n          <ux-date-time-picker [(date)]=\"to\" [showTime]=\"false\"></ux-date-time-picker>\n      </ng-template>\n    `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction SearchDateRangeComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nSearchDateRangeComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSearchDateRangeComponent.ctorParameters;\n/** @type {?} */\nSearchDateRangeComponent.prototype.type;\n}\n\n\nexport interface SearchDateRangeConfig {\n    label?: string;\n    fromLabel?: string;\n    toLabel?: string;\n    fromPlaceholder?: string;\n    toPlaceholder?: string;\n    validation: (value: any) => boolean;\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, OnInit } from '@angular/core';\nimport { BaseSearchComponent, BaseSearchComponentConfig } from '../base-search.component';\nimport { DateTimePickerTimezone } from '../../../date-time-picker/index';\nexport class SearchDateComponent extends BaseSearchComponent implements OnInit {\n\n  type: string = 'date';\n/**\n * @return {?}\n */\nget label(): string {\n    return this.config.label;\n  }\n/**\n * @return {?}\n */\nget placeholder(): string {\n    return this.config.placeholder || 'Enter date';\n  }\n/**\n * @return {?}\n */\nngOnInit(): void {\n\n    // by default set to the current date if not specified\n    if (!this.value) {\n      this.value = new Date();\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'ux-search-date',\n  template: `\n    <label class=\"form-label\" *ngIf=\"label\">{{ label }}</label>\n\n    <div class=\"input-group date m-nil\">\n        <span class=\"input-group-addon\" tabindex=\"1\" (click)=\"popover.show()\">\n            <i class=\"hpe-icon hpe-calendar\" aria-hidden=\"true\"></i>\n        </span>\n        <input type=\"text\" #popover=\"ux-popover\" [ngModel]=\"value | date:'dd MMMM yyyy'\" [uxPopover]=\"popoverTemplate\"\n            placement=\"bottom\" popoverClass=\"date-time-picker-popover\" class=\"form-control\" aria-label=\"Selected date\" [placeholder]=\"placeholder\">\n    </div>\n\n    <ng-template #popoverTemplate>\n        <ux-date-time-picker [(date)]=\"value\" [showTime]=\"false\"></ux-date-time-picker>\n    </ng-template>\n  `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction SearchDateComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nSearchDateComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSearchDateComponent.ctorParameters;\n/** @type {?} */\nSearchDateComponent.prototype.type;\n}\n\n\nexport interface SearchDateConfig extends BaseSearchComponentConfig { }\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, OnInit } from '@angular/core';\nimport { BaseSearchComponent, BaseSearchComponentConfig } from '../base-search.component';\nexport class SearchTextComponent extends BaseSearchComponent {\n\n  type: string = 'text';\n/**\n * @return {?}\n */\nget label(): string {\n    return this.config.label;\n  }\n/**\n * @return {?}\n */\nget placeholder(): string {\n    return this.config.placeholder || 'Enter text';\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'ux-search-text',\n  template: `\n    <label class=\"form-label\" *ngIf=\"label\">{{ label }}</label>\n    <input [placeholder]=\"placeholder\" [(ngModel)]=\"value\" class=\"form-control\">\n  `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction SearchTextComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nSearchTextComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSearchTextComponent.ctorParameters;\n/** @type {?} */\nSearchTextComponent.prototype.type;\n}\n\n\nexport interface SearchTextConfig extends BaseSearchComponentConfig { }\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, OnDestroy } from '@angular/core';\nimport { SearchBuilderService } from '../search-builder.service';\nimport { SearchBuilderGroupQuery } from '../interfaces/group-query.interface';\nimport { SearchBuilderGroupService } from '../search-builder-group/search-builder-group.service';\nimport { SearchBuilderComponentContext } from '../interfaces/component-context.interface';\nexport class BaseSearchComponent implements OnDestroy {\n\n    type: string;\n    config: any;\n    context: SearchBuilderComponentContext;\nprivate _id: number = this._searchBuilderService.generateComponentId();\nprivate _valid: boolean = true;\n/**\n * Get the current value of the component\n * @return {?}\n */\nget value() {\n        return this.context.value;\n    }\n/**\n * Set the current value of the component\n * @param {?} value\n * @return {?}\n */\nset value(value: any) {\n        this.context.value = value;\n        this._searchBuilderService.queryHasChanged();\n\n        // if value has been set perform validation\n        this.validate();\n    }\n/**\n * @return {?}\n */\nget valid(): boolean {\n        return this._valid;\n    }\n/**\n * @param {?} valid\n * @return {?}\n */\nset valid(valid: boolean) {\n        this._valid = valid;\n        this._searchBuilderService.setValid(this._id, valid);\n    }\n/**\n * @param {?} _searchBuilderService\n * @param {?} _searchBuilderGroupService\n */\nconstructor(\nprivate _searchBuilderService: SearchBuilderService,\nprivate _searchBuilderGroupService: SearchBuilderGroupService\n    ) { }\n/**\n * Make sure we clean up after ourselves\n * @return {?}\n */\nngOnDestroy(): void {\n        this.valid = true;\n    }\n/**\n * Perform any required validation on the value\n * @return {?}\n */\nvalidate(): void {\n        // if a custom validation function has been provided then use it\n        this.valid = this.config.validation ? this.config.validation(this, this.value) : true;\n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-base-search',\n    template: ''\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: SearchBuilderService, },\n{type: SearchBuilderGroupService, },\n];\n}\n\nfunction BaseSearchComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nBaseSearchComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nBaseSearchComponent.ctorParameters;\n/** @type {?} */\nBaseSearchComponent.prototype.type;\n/** @type {?} */\nBaseSearchComponent.prototype.config;\n/** @type {?} */\nBaseSearchComponent.prototype.context;\n/** @type {?} */\nBaseSearchComponent.prototype._id;\n/** @type {?} */\nBaseSearchComponent.prototype._valid;\n/** @type {?} */\nBaseSearchComponent.prototype._searchBuilderService;\n/** @type {?} */\nBaseSearchComponent.prototype._searchBuilderGroupService;\n}\n\n\nexport interface BaseSearchComponentConfig {\n    label?: string;\n    placeholder?: string;\n    validation?: (value: any) => boolean;\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, OnInit, Type, Input, ComponentRef, ComponentFactoryResolver, ViewContainerRef } from '@angular/core';\nimport { SearchBuilderService } from '../search-builder.service';\nexport class SearchBuilderOutletDirective implements OnInit {\n\n     uxSearchBuilderOutlet: string;\n     uxSearchBuilderOutletContext: any;\nprivate _componentRef: ComponentRef<any>;\n/**\n * @param {?} _viewContainerRef\n * @param {?} _componentFactoryResolver\n * @param {?} _searchBuilderService\n */\nconstructor(\nprivate _viewContainerRef: ViewContainerRef,\nprivate _componentFactoryResolver: ComponentFactoryResolver,\nprivate _searchBuilderService: SearchBuilderService\n    ) { }\n/**\n * @return {?}\n */\nngOnInit(): void {\n\n        // get the class from the type\n        const /** @type {?} */ componentDefinition = this._searchBuilderService.getComponent(this.uxSearchBuilderOutlet);\n\n        // create the component factory\n        const /** @type {?} */ componentFactory = this._componentFactoryResolver.resolveComponentFactory(componentDefinition.component);\n\n        // create the component instance\n        this._componentRef = this._viewContainerRef.createComponent(componentFactory);\n\n        // combine the predefined config with any dynmaic config\n        const /** @type {?} */ config = Object.assign({}, componentDefinition.config, this.uxSearchBuilderOutletContext.config || {});\n\n        // set the context and config property on the component instance\n        this._componentRef.instance.context = this.uxSearchBuilderOutletContext;\n        this._componentRef.instance.config = config;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: '[uxSearchBuilderOutlet]'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ViewContainerRef, },\n{type: ComponentFactoryResolver, },\n{type: SearchBuilderService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'uxSearchBuilderOutlet': [{ type: Input },],\n'uxSearchBuilderOutletContext': [{ type: Input },],\n};\n}\n\nfunction SearchBuilderOutletDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nSearchBuilderOutletDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSearchBuilderOutletDirective.ctorParameters;\n/** @type {?} */\nSearchBuilderOutletDirective.propDecorators;\n/** @type {?} */\nSearchBuilderOutletDirective.prototype.uxSearchBuilderOutlet;\n/** @type {?} */\nSearchBuilderOutletDirective.prototype.uxSearchBuilderOutletContext;\n/** @type {?} */\nSearchBuilderOutletDirective.prototype._componentRef;\n/** @type {?} */\nSearchBuilderOutletDirective.prototype._viewContainerRef;\n/** @type {?} */\nSearchBuilderOutletDirective.prototype._componentFactoryResolver;\n/** @type {?} */\nSearchBuilderOutletDirective.prototype._searchBuilderService;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, OnInit, Input, Output, EventEmitter, TemplateRef } from '@angular/core';\nimport { SearchBuilderGroupService } from './search-builder-group.service';\nimport { SearchBuilderService } from '../search-builder.service';\nimport { SearchBuilderGroupQuery } from '../interfaces/group-query.interface';\nexport class SearchBuilderGroupComponent implements OnInit {\n\n   id: string;\n   header: string;\n   operator: SearchBuilderGroupOperator = 'and';\n   addText: string = 'Add a field';\n   placeholder: TemplateRef<any>;\n   showPlaceholder: boolean = false;\n\n   add: EventEmitter<MouseEvent> = new EventEmitter<MouseEvent>();\n   remove: EventEmitter<SearchBuilderGroupQuery> = new EventEmitter<SearchBuilderGroupQuery>();\n/**\n * @param {?} searchBuilderGroupService\n * @param {?} _searchBuilderService\n */\nconstructor(public searchBuilderGroupService: SearchBuilderGroupService,\nprivate _searchBuilderService: SearchBuilderService) { }\n/**\n * @return {?}\n */\nngOnInit(): void {\n\n    // ensure we have a name otherwise throw an error\n    if (!this.id) {\n      throw new Error('Search builder group must have a name attribute.');\n    }\n\n    // otherwise register the group\n    this.searchBuilderGroupService.init(this.id);\n  }\n/**\n * @param {?} field\n * @return {?}\n */\nremoveField(field: SearchBuilderGroupQuery): void {\n    this.searchBuilderGroupService.remove(field);\n    this.remove.emit(field);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'ux-search-builder-group',\n  template: `\n    <h4 class=\"search-group-title\">{{ header }}</h4>\n\n    <main class=\"search-group-content\">\n\n      <section class=\"search-group-operator search-group-operator-{{ operator }}\" [class.hidden-operator]=\"searchBuilderGroupService.getQuery().length < 2\">{{ operator }}</section>\n\n      <section class=\"search-group-items\">\n\n        <div class=\"search-group-item-container\" *ngFor=\"let field of searchBuilderGroupService.getQuery()\">\n\n          <div class=\"search-group-item\">\n            <ng-container *uxSearchBuilderOutlet=\"field.type; context: field\"></ng-container>\n          </div>\n\n          <div class=\"search-group-item-remove\" (click)=\"removeField(field)\">\n            <span class=\"hpe-icon hpe-close\"></span>\n          </div>\n        </div>\n\n        <!-- Placeholder Item -->\n        <ng-container *ngIf=\"showPlaceholder\">\n\n          <!-- The Default Placeholder -->\n          <div class=\"search-group-item-container placeholder-item\" *ngIf=\"!placeholder\">\n        \n            <div class=\"search-group-item\">\n              <label class=\"form-label\">New field</label>\n              <div class=\"form-control\"></div>\n            </div>\n  \n          </div>\n\n          <!-- Allow a custom placeholder -->\n        <ng-container *ngTemplateOutlet=\"placeholder\"></ng-container>\n\n        </ng-container>\n\n      </section>\n\n      <section class=\"search-builder-group-add-field\" (click)=\"add.emit($event)\">\n\n        <button type=\"button\" class=\"btn btn-icon btn-circular button-accent\" aria-label=\"Add Field\">\n          <span class=\"hpe-icon hpe-add\" aria-hidden=\"true\"></span>\n        </button>\n\n        <span class=\"search-builder-group-add-field-label\">{{ addText }}</span>\n\n      </section>\n\n    </main>\n\n    <hr class=\"search-builder-group-divider\">\n  `,\n  providers: [SearchBuilderGroupService]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: SearchBuilderGroupService, },\n{type: SearchBuilderService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'id': [{ type: Input },],\n'header': [{ type: Input },],\n'operator': [{ type: Input },],\n'addText': [{ type: Input },],\n'placeholder': [{ type: Input },],\n'showPlaceholder': [{ type: Input },],\n'add': [{ type: Output },],\n'remove': [{ type: Output },],\n};\n}\n\nfunction SearchBuilderGroupComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nSearchBuilderGroupComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSearchBuilderGroupComponent.ctorParameters;\n/** @type {?} */\nSearchBuilderGroupComponent.propDecorators;\n/** @type {?} */\nSearchBuilderGroupComponent.prototype.id;\n/** @type {?} */\nSearchBuilderGroupComponent.prototype.header;\n/** @type {?} */\nSearchBuilderGroupComponent.prototype.operator;\n/** @type {?} */\nSearchBuilderGroupComponent.prototype.addText;\n/** @type {?} */\nSearchBuilderGroupComponent.prototype.placeholder;\n/** @type {?} */\nSearchBuilderGroupComponent.prototype.showPlaceholder;\n/** @type {?} */\nSearchBuilderGroupComponent.prototype.add;\n/** @type {?} */\nSearchBuilderGroupComponent.prototype.remove;\n/** @type {?} */\nSearchBuilderGroupComponent.prototype.searchBuilderGroupService;\n/** @type {?} */\nSearchBuilderGroupComponent.prototype._searchBuilderService;\n}\n\n\nexport type SearchBuilderGroupOperator = 'and' | 'or' | 'not';\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable } from '@angular/core';\nimport { SearchBuilderService } from '../search-builder.service';\nimport { SearchBuilderGroupQuery } from '../interfaces/group-query.interface';\nimport { SearchBuilderQuery } from '../interfaces/query.interface';\nexport class SearchBuilderGroupService {\nprivate _id: string;\n/**\n * @param {?} _searchBuilderService\n */\nconstructor(private _searchBuilderService: SearchBuilderService) { }\n/**\n * Initialise the group by defining an id\n * @param {?} id\n * @return {?}\n */\ninit(id: string): void {\n    // store the name of the group\n    this._id = id;\n\n    // create the entry in the query object if it doesn't exist\n    if (!this._searchBuilderService.query[this._id]) {\n\n      // create the section\n      this._searchBuilderService.query[this._id] = [];\n\n      // emit the changes after the initial setup\n      setTimeout(() => this._searchBuilderService.queryHasChanged());\n    }\n  }\n/**\n * Remove a field from the search builder query\n * @param {?} field\n * @return {?}\n */\nremove(field: SearchBuilderGroupQuery): void {\n    // get the query for this group\n    const /** @type {?} */ query = this.getQuery();\n\n    // remove the field from the array\n    query.splice(query.indexOf(field), 1);\n  }\n/**\n * Get the query for this specific search group\n * @return {?}\n */\ngetQuery(): SearchBuilderGroupQuery[] {\n    return this._searchBuilderService.query[this._id] ? this._searchBuilderService.query[this._id] : [];\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: SearchBuilderService, },\n];\n}\n\nfunction SearchBuilderGroupService_tsickle_Closure_declarations() {\n/** @type {?} */\nSearchBuilderGroupService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSearchBuilderGroupService.ctorParameters;\n/** @type {?} */\nSearchBuilderGroupService.prototype._id;\n/** @type {?} */\nSearchBuilderGroupService.prototype._searchBuilderService;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs/Subject';\nimport { SearchBuilderQuery } from './interfaces/query.interface';\nimport { SearchBuilderGroupQuery } from './interfaces/group-query.interface';\nimport { SearchBuilderComponentDefinition } from './interfaces/component-definition.interface';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nexport class SearchBuilderService {\n\n  query: SearchBuilderQuery = {};\n  queryChange: Subject<SearchBuilderQuery> = new Subject<SearchBuilderQuery>();\n  validationChange: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(true);\nprivate _componentId: number = 0;\nprivate _components: SearchBuilderComponentDefinition[] = [];\nprivate _validation: { [key: number]: boolean } = {};\n/**\n * Add a component to the internal list of components\n * @param {?} component\n * @return {?}\n */\nregisterComponent(component: SearchBuilderComponentDefinition): void {\n\n    // ensure there are no components with a matching name\n    if (this._components.find(cmp => cmp.name === component.name)) {\n      throw new Error(`Search builder components must have a unique name. The name ${component.name} has already been used.`);\n    }\n\n    // if unique then add the component to the list\n    this._components.push(component);\n  }\n/**\n * Bulk registration of components\n * (Just a helper method)\n * @param {?} components\n * @return {?}\n */\nregisterComponents(components: SearchBuilderComponentDefinition[]): void {\n    components.forEach(component => this.registerComponent(component));\n  }\n/**\n * Get a registered component class\n * @param {?} name\n * @return {?}\n */\ngetComponent(name: string): any {\n\n    // find the component\n    const /** @type {?} */ component = this._components.find(cmp => cmp.name === name);\n\n    // if there is no match throw an exception\n    if (!component) {\n      throw new Error(`No search build component with the name ${name} exists`);\n    }\n\n    // ensure config is defined - at least to an empty object\n    component.config = component.config || {};\n\n    return component;\n  }\n/**\n * Update the internal search query state\n * note that the query will be immutable\n * @param {?} query\n * @return {?}\n */\nsetQuery(query: SearchBuilderQuery): void {\n    this.query = Object.assign({}, query);\n  }\n/**\n * Return the current query state\n * @return {?}\n */\ngetQuery(): SearchBuilderQuery {\n    return this.query;\n  }\n/**\n * Trigger the observable to indicate the query has been updated\n * @return {?}\n */\nqueryHasChanged(): void {\n    this.queryChange.next(this.query);\n  }\n/**\n * Store the validation state of the query\n * @param {?} id\n * @param {?} valid\n * @return {?}\n */\nsetValid(id: number, valid: boolean): void {\n\n    // store the state for this specific component\n    this._validation[id] = valid;\n\n    // evaluate the entire validation state\n    this.validationChange.next(!Object.keys(this._validation).some(key => !this._validation[key]));\n  }\n/**\n * Generate a unique id for each component\n * @return {?}\n */\ngenerateComponentId(): number {\n    return this._componentId++;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction SearchBuilderService_tsickle_Closure_declarations() {\n/** @type {?} */\nSearchBuilderService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSearchBuilderService.ctorParameters;\n/** @type {?} */\nSearchBuilderService.prototype.query;\n/** @type {?} */\nSearchBuilderService.prototype.queryChange;\n/** @type {?} */\nSearchBuilderService.prototype.validationChange;\n/** @type {?} */\nSearchBuilderService.prototype._componentId;\n/** @type {?} */\nSearchBuilderService.prototype._components;\n/** @type {?} */\nSearchBuilderService.prototype._validation;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport {FormsModule} from '@angular/forms';\n\nimport { RadioButtonComponent } from './radiobutton.component';\nexport class RadioButtonModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [FormsModule],\n    exports: [RadioButtonComponent],\n    declarations: [RadioButtonComponent]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction RadioButtonModule_tsickle_Closure_declarations() {\n/** @type {?} */\nRadioButtonModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nRadioButtonModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, EventEmitter, Input, Output, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nexport const /** @type {?} */ RADIOBUTTON_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => RadioButtonComponent),\n    multi: true\n};\n\nlet /** @type {?} */ uniqueRadioId = 0;\nexport class RadioButtonComponent implements ControlValueAccessor {\nprivate _radioButtonId: string = `ux-radio-button-${++uniqueRadioId}`;\n\n     id: string = this._radioButtonId;\n     name: string | null;\n     required: boolean;\n     tabindex: number = 0;\n     clickable: boolean = true;\n     disabled: boolean = false;\n     simplified: boolean = false;\n     option: any;\n     ariaLabel: string = '';\n     ariaLabelledby: string = null;\n     ariaDescribedby: string = null;\n\n     valueChange: EventEmitter<any> = new EventEmitter<any>();\n/**\n * @return {?}\n */\nget value() {\n        return this._value;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset value(value: boolean) {\n        this._value = value;\n\n        // invoke change event\n        this.valueChange.emit(this._value);\n\n        // call callback\n        this.onChangeCallback(this._value);\n        this.onTouchedCallback();        \n    }\n/**\n * @return {?}\n */\nget inputId(): string { \n        return `${this.id || this._radioButtonId}-input`;\n    }\nprivate _value: any = false;\n\n    focused: boolean = false;\n    onTouchedCallback: () => void = () => { };\n    onChangeCallback: (_: any) => void = () => { };\n/**\n * @return {?}\n */\ntoggle(): void {\n\n        if (this.disabled || !this.clickable) {\n            return;\n        }\n\n        // toggle the checked state\n        this.value = this.option;\n\n        // call callback\n        this.onChangeCallback(this.value);\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nwriteValue(value: boolean): void {\n        if (value !== this._value) {\n            this._value = value;\n        }\n    }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnChange(fn: any): void {\n        this.onChangeCallback = fn;\n    }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnTouched(fn: any): void {\n        this.onTouchedCallback = fn;\n    }\n/**\n * @param {?} isDisabled\n * @return {?}\n */\nsetDisabledState(isDisabled: boolean): void {\n        this.disabled = isDisabled;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-radio-button',\n    template: `\n      <label [attr.for]=\"inputId\" class=\"ux-radio-button\"\n             [class.ux-radio-button-checked]=\"value === option\"\n             [class.ux-radio-button-simplified]=\"simplified\"\n             [class.ux-radio-button-disabled]=\"disabled\"\n             [class.ux-radio-button-focused]=\"focused\">\n\n          <div class=\"ux-radio-button-container\">\n              <input class=\"ux-radio-button-input\"\n                  type=\"radio\"\n                  [id]=\"inputId\"\n                  [checked]=\"value === option\"\n                  [disabled]=\"disabled\"\n                  [tabindex]=\"tabindex || value === option ? 0 : -1\"\n                  [attr.name]=\"name\"\n                  [required]=\"required\"\n                  [attr.aria-label]=\"ariaLabel\"\n                  [attr.aria-labelledby]=\"ariaLabelledby\"\n                  [attr.aria-describedby]=\"ariaDescribedby\"\n                  [attr.aria-checked]=\"value === option\"\n                  (focus)=\"focused = true\"\n                  (blur)=\"focused = false\"\n                  (change)=\"toggle()\"\n                  (click)=\"$event.stopPropagation()\">\n          </div>\n\n          <span class=\"ux-radio-button-label\">\n              <ng-content></ng-content>\n          </span>\n\n      </label>\n    `,\n    providers: [RADIOBUTTON_VALUE_ACCESSOR]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'id': [{ type: Input },],\n'name': [{ type: Input },],\n'required': [{ type: Input },],\n'tabindex': [{ type: Input },],\n'clickable': [{ type: Input },],\n'disabled': [{ type: Input },],\n'simplified': [{ type: Input },],\n'option': [{ type: Input },],\n'ariaLabel': [{ type: Input, args: ['aria-label', ] },],\n'ariaLabelledby': [{ type: Input, args: ['aria-labelledby', ] },],\n'ariaDescribedby': [{ type: Input, args: ['aria-describedby', ] },],\n'valueChange': [{ type: Output },],\n'value': [{ type: Input },],\n};\n}\n\nfunction RadioButtonComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nRadioButtonComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nRadioButtonComponent.ctorParameters;\n/** @type {?} */\nRadioButtonComponent.propDecorators;\n/** @type {?} */\nRadioButtonComponent.prototype._radioButtonId;\n/** @type {?} */\nRadioButtonComponent.prototype.id;\n/** @type {?} */\nRadioButtonComponent.prototype.name;\n/** @type {?} */\nRadioButtonComponent.prototype.required;\n/** @type {?} */\nRadioButtonComponent.prototype.tabindex;\n/** @type {?} */\nRadioButtonComponent.prototype.clickable;\n/** @type {?} */\nRadioButtonComponent.prototype.disabled;\n/** @type {?} */\nRadioButtonComponent.prototype.simplified;\n/** @type {?} */\nRadioButtonComponent.prototype.option;\n/** @type {?} */\nRadioButtonComponent.prototype.ariaLabel;\n/** @type {?} */\nRadioButtonComponent.prototype.ariaLabelledby;\n/** @type {?} */\nRadioButtonComponent.prototype.ariaDescribedby;\n/** @type {?} */\nRadioButtonComponent.prototype.valueChange;\n/** @type {?} */\nRadioButtonComponent.prototype._value;\n/** @type {?} */\nRadioButtonComponent.prototype.focused;\n/** @type {?} */\nRadioButtonComponent.prototype.onTouchedCallback;\n/** @type {?} */\nRadioButtonComponent.prototype.onChangeCallback;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ProgressBarComponent } from './progress-bar.component';\nexport class ProgressBarModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        CommonModule\n    ],\n    exports: [ProgressBarComponent],\n    declarations: [ProgressBarComponent]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ProgressBarModule_tsickle_Closure_declarations() {\n/** @type {?} */\nProgressBarModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nProgressBarModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Input, ChangeDetectionStrategy } from '@angular/core';\nexport class ProgressBarComponent {\n     value: number = 0;\n     max: number = 100;\n     indeterminate: boolean = false;\n     trackColor: string;\n     barColor: string;\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-progress-bar',\n    template: `\n      <div *ngIf=\"!indeterminate\" class=\"progressbar-track\" [style.width.%]=\"(value / max) * 100\" [style.backgroundColor]=\"barColor\">\n          <ng-content></ng-content>\n      </div>\n      <div *ngIf=\"indeterminate\" class=\"progressbar-track indeterminate\" [style.backgroundColor]=\"barColor\">\n          <ng-content></ng-content>\n      </div>\n    `,\n    changeDetection: ChangeDetectionStrategy.OnPush\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'value': [{ type: Input },],\n'max': [{ type: Input },],\n'indeterminate': [{ type: Input },],\n'trackColor': [{ type: Input },],\n'barColor': [{ type: Input },],\n};\n}\n\nfunction ProgressBarComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nProgressBarComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nProgressBarComponent.ctorParameters;\n/** @type {?} */\nProgressBarComponent.propDecorators;\n/** @type {?} */\nProgressBarComponent.prototype.value;\n/** @type {?} */\nProgressBarComponent.prototype.max;\n/** @type {?} */\nProgressBarComponent.prototype.indeterminate;\n/** @type {?} */\nProgressBarComponent.prototype.trackColor;\n/** @type {?} */\nProgressBarComponent.prototype.barColor;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\n\nimport { PageHeaderComponent } from './page-header.component';\nimport { BreadcrumbsModule } from '../breadcrumbs/index';\nimport { PageHeaderIconMenuComponent } from './icon-menu/icon-menu.component';\nimport { PageHeaderNavigationComponent } from './navigation/navigation.component';\nimport { PageHeaderNavigationItemComponent } from './navigation/navigation-item/navigation-item.component';\nimport { PageHeaderNavigationDropdownItemComponent } from './navigation/navigation-dropdown-item/navigation-dropdown-item.component';\nimport { PageHeaderCustomMenuDirective } from './custom-menu/custom-menu.directive';\nimport { ResizeModule } from '../../directives/resize/index';\nimport { ColorServiceModule } from '../../services/color/index';\nimport { MenuNavigationModule } from '../../directives/menu-navigation/index';\nexport class PageHeaderModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        CommonModule,\n        BreadcrumbsModule,\n        ColorServiceModule,\n        ResizeModule,\n        MenuNavigationModule,\n        BsDropdownModule.forRoot()\n    ],\n    exports: [\n        PageHeaderComponent,\n        PageHeaderCustomMenuDirective\n    ],\n    declarations: [\n        PageHeaderComponent,\n        PageHeaderIconMenuComponent,\n        PageHeaderCustomMenuDirective,\n        PageHeaderNavigationComponent,\n        PageHeaderNavigationItemComponent,\n        PageHeaderNavigationDropdownItemComponent\n    ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction PageHeaderModule_tsickle_Closure_declarations() {\n/** @type {?} */\nPageHeaderModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nPageHeaderModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\n\nimport { MenuNavigationDirective } from './menu-navigation.directive';\nimport { MenuNavigationItemDirective } from './menu-navigation-item.directive';\nimport { MenuNavigationToggleDirective } from './menu-navigation-toggle.directive';\n\nconst /** @type {?} */ EXPORTS = [\n    MenuNavigationDirective,\n    MenuNavigationItemDirective,\n    MenuNavigationToggleDirective\n];\nexport class MenuNavigationModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [],\n    exports: EXPORTS,\n    declarations: EXPORTS,\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction MenuNavigationModule_tsickle_Closure_declarations() {\n/** @type {?} */\nMenuNavigationModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMenuNavigationModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ElementRef, EventEmitter, HostListener, Input, Output } from '@angular/core';\nexport class MenuNavigationToggleDirective {\n/**\n * @return {?}\n */\nget menuOpen(): boolean {\n        return this._menuOpen;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset menuOpen(value: boolean) {\n        this._menuOpen = value;\n        this.menuOpenChange.emit(value);\n    }\n\n    \n    menuPosition: 'top' | 'right' | 'bottom' | 'left' = 'bottom';\n\n    \n    menuOpenChange = new EventEmitter<boolean>();\n\n    keyEnter = new EventEmitter<void>();\nprivate _menuOpen: boolean;\n/**\n * @param {?} _elementRef\n */\nconstructor(private _elementRef: ElementRef) { }\n/**\n * @return {?}\n */\nfocus(): void {\n        this._elementRef.nativeElement.focus();\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nkeydownHandler(event: KeyboardEvent): void {\n\n        if (this.isKeyMatch(event.key)) {\n\n            // Open the menu\n            this.menuOpen = true;\n\n            // Allow the menu to init, then send the event to give it focus\n            setTimeout(() => {\n                this.keyEnter.emit();\n            });\n\n            event.preventDefault();\n            event.stopPropagation();\n        }\n    }\n/**\n * @param {?} key\n * @return {?}\n */\nprivate isKeyMatch(key: string): boolean {\n        switch (key) {\n            case 'Enter':\n            case ' ':\n                return true;\n\n            case 'ArrowUp':\n            case 'Up':\n                return this.menuPosition === 'top';\n\n            case 'ArrowDown':\n            case 'Down':\n                return this.menuPosition === 'bottom';\n\n            case 'ArrowLeft':\n            case 'Left':\n                return this.menuPosition === 'left';\n\n            case 'ArrowRight':\n            case 'Right':\n                return this.menuPosition === 'right';\n        }\n\n        return false;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: '[uxMenuNavigationToggle]',\n    exportAs: 'uxMenuNavigationToggle'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'menuOpen': [{ type: Input },],\n'menuPosition': [{ type: Input },],\n'menuOpenChange': [{ type: Output },],\n'keydownHandler': [{ type: HostListener, args: ['keydown', ['$event'], ] },],\n};\n}\n\nfunction MenuNavigationToggleDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nMenuNavigationToggleDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMenuNavigationToggleDirective.ctorParameters;\n/** @type {?} */\nMenuNavigationToggleDirective.propDecorators;\n/** @type {?} */\nMenuNavigationToggleDirective.prototype.menuPosition;\n/** @type {?} */\nMenuNavigationToggleDirective.prototype.menuOpenChange;\n/** @type {?} */\nMenuNavigationToggleDirective.prototype.keyEnter;\n/** @type {?} */\nMenuNavigationToggleDirective.prototype._menuOpen;\n/** @type {?} */\nMenuNavigationToggleDirective.prototype._elementRef;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { AfterContentInit, ContentChildren, Directive, ElementRef, EventEmitter, HostListener, Inject, Input, OnDestroy, OnInit, Output, QueryList, Renderer2 } from '@angular/core';\nimport { DOCUMENT } from '@angular/platform-browser';\nimport { Subscription } from 'rxjs/Subscription';\nimport { MenuNavigationItemDirective } from './menu-navigation-item.directive';\nimport { MenuNavigationToggleDirective } from './menu-navigation-toggle.directive';\nimport { MenuNavigationService } from './menu-navigation.service';\nexport class MenuNavigationDirective implements OnInit, AfterContentInit, OnDestroy {\n\n    \n    toggleButton: MenuNavigationToggleDirective;\n\n    \n    toggleButtonPosition: 'top' | 'right' | 'bottom' | 'left' = 'top';\n\n    \n    navigatedOut = new EventEmitter<KeyboardEvent>();\n\n    \n    items: QueryList<MenuNavigationItemDirective>;\n/**\n * @return {?}\n */\nget activeIndex(): number {\n        return this._itemsOrdered.indexOf(this._service.active$.value);\n    }\nprivate _itemsOrdered: MenuNavigationItemDirective[];\nprivate _document: Document;\nprivate _subscription = new Subscription();\n/**\n * @param {?} _service\n * @param {?} _elementRef\n * @param {?} _renderer\n * @param {?} document\n */\nconstructor(\nprivate _service: MenuNavigationService,\nprivate _elementRef: ElementRef,\nprivate _renderer: Renderer2,\n         document: any\n    ) {\n        this._document = document;\n    }\n/**\n * @return {?}\n */\nngOnInit(): void {\n        if (this.toggleButton) {\n            this._subscription.add(\n                this.toggleButton.keyEnter.subscribe(this.focusFirst.bind(this))\n            );\n        }\n    }\n/**\n * @return {?}\n */\nngAfterContentInit(): void {\n\n        this._subscription.add(\n            this.items.changes.subscribe(() => {\n                this._itemsOrdered = this.items.toArray();\n            })\n        );\n\n        this._itemsOrdered = this.items.toArray();\n    }\n/**\n * @return {?}\n */\nngOnDestroy(): void {\n        this._subscription.unsubscribe();\n    }\n/**\n * @return {?}\n */\nfocusFirst(): void {\n        this.moveFirst();\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nprivate keydownHandler(event: KeyboardEvent): void {\n\n        // Only handle events when focus in within the list of menu items\n        if (!this._elementRef.nativeElement.contains(this._document.activeElement)) {\n            return;\n        }\n\n        let /** @type {?} */ handled = false;\n\n        switch (event.key) {\n\n            case 'ArrowUp':\n            case 'Up':\n                this.movePrevious(event);\n                handled = true;\n                break;\n\n            case 'ArrowDown':\n            case 'Down':\n                this.moveNext(event);\n                handled = true;\n                break;\n\n            case 'ArrowLeft':\n            case 'Left':\n                if (this.toggleButtonPosition === 'left') {\n                    this.moveToToggleButton(event);\n                    handled = true;\n                }\n                break;\n\n            case 'ArrowRight':\n            case 'Right':\n                if (this.toggleButtonPosition === 'right') {\n                    this.moveToToggleButton(event);\n                    handled = true;\n                }\n                break;\n\n            case 'Home':\n                this.moveFirst();\n                handled = true;\n                break;\n\n            case 'End':\n                this.moveLast();\n                handled = true;\n                break;\n\n            case 'Escape':\n                this.navigatedOut.emit(event);\n                handled = true;\n                break;\n        }\n\n        if (handled) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nprivate moveNext(event: KeyboardEvent): void {\n\n        // Do nothing if there's no active menu item registered\n        if (this.activeIndex < 0) {\n            return;\n        }\n\n        const /** @type {?} */ nextIndex = this.activeIndex + 1;\n        if (nextIndex < this._itemsOrdered.length) {\n\n            // Activate the next menu item\n            // (uxMenuNavigationItem subscribes to this and applies focus if it matches)\n            this._service.active$.next(this._itemsOrdered[nextIndex]);\n\n        } else {\n\n            // Check if focus went out of bounds in the direction of the origin toggle button\n            if (this.toggleButtonPosition === 'bottom') {\n                this.moveToToggleButton(event);\n            }\n        }\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nprivate movePrevious(event: KeyboardEvent): void {\n\n        // Do nothing if there's no active menu item registered\n        if (this.activeIndex < 0) {\n            return;\n        }\n\n        const /** @type {?} */ nextIndex = this.activeIndex - 1;\n        if (nextIndex >= 0) {\n\n            // Activate the previous menu item\n            // (uxMenuNavigationItem subscribes to this and applies focus if it matches)\n            this._service.active$.next(this._itemsOrdered[nextIndex]);\n\n        } else {\n\n            // Check if focus went out of bounds in the direction of the origin toggle button\n            if (this.toggleButtonPosition === 'top') {\n                this.moveToToggleButton(event);\n            }\n        }\n    }\n/**\n * @return {?}\n */\nprivate moveFirst(): void {\n        if (this._itemsOrdered.length > 0) {\n            this._service.active$.next(this._itemsOrdered[0]);\n        }\n    }\n/**\n * @return {?}\n */\nprivate moveLast(): void {\n        if (this._itemsOrdered.length > 0) {\n            this._service.active$.next(this._itemsOrdered[this._itemsOrdered.length - 1]);\n        }\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nprivate moveToToggleButton(event: KeyboardEvent): void {\n        if (this.toggleButton) {\n            this.toggleButton.focus();\n            this.toggleButton.menuOpen = false;\n        }\n\n        this.navigatedOut.emit(event);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: '[uxMenuNavigation]',\n    exportAs: 'uxMenuNavigation',\n    providers: [MenuNavigationService]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: MenuNavigationService, },\n{type: ElementRef, },\n{type: Renderer2, },\n{type: undefined, decorators: [{ type: Inject, args: [DOCUMENT, ] }, ]},\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'toggleButton': [{ type: Input },],\n'toggleButtonPosition': [{ type: Input },],\n'navigatedOut': [{ type: Output },],\n'items': [{ type: ContentChildren, args: [MenuNavigationItemDirective, { descendants: true }, ] },],\n'keydownHandler': [{ type: HostListener, args: ['document:keydown', ['$event'], ] },],\n};\n}\n\nfunction MenuNavigationDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nMenuNavigationDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMenuNavigationDirective.ctorParameters;\n/** @type {?} */\nMenuNavigationDirective.propDecorators;\n/** @type {?} */\nMenuNavigationDirective.prototype.toggleButton;\n/** @type {?} */\nMenuNavigationDirective.prototype.toggleButtonPosition;\n/** @type {?} */\nMenuNavigationDirective.prototype.navigatedOut;\n/** @type {?} */\nMenuNavigationDirective.prototype.items;\n/** @type {?} */\nMenuNavigationDirective.prototype._itemsOrdered;\n/** @type {?} */\nMenuNavigationDirective.prototype._document;\n/** @type {?} */\nMenuNavigationDirective.prototype._subscription;\n/** @type {?} */\nMenuNavigationDirective.prototype._service;\n/** @type {?} */\nMenuNavigationDirective.prototype._elementRef;\n/** @type {?} */\nMenuNavigationDirective.prototype._renderer;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ElementRef, EventEmitter, OnDestroy, Output } from '@angular/core';\nimport { Subscription } from 'rxjs/Subscription';\nimport { MenuNavigationService } from './menu-navigation.service';\nexport class MenuNavigationItemDirective implements OnDestroy {\n\n    \n    activated = new EventEmitter();\nprivate _subscription: Subscription;\n/**\n * @param {?} _service\n * @param {?} _elementRef\n */\nconstructor(\nprivate _service: MenuNavigationService,\nprivate _elementRef: ElementRef\n    ) {\n        this._subscription = _service.active$.subscribe((next) => {\n            if (next === this) {\n                this.setActive();\n            }\n        });\n    }\n/**\n * @return {?}\n */\nngOnDestroy(): void {\n        this._subscription.unsubscribe();\n    }\n/**\n * @return {?}\n */\nsetActive(): void {\n        this._elementRef.nativeElement.focus();\n        this.activated.emit();\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: '[uxMenuNavigationItem]'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: MenuNavigationService, },\n{type: ElementRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'activated': [{ type: Output },],\n};\n}\n\nfunction MenuNavigationItemDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nMenuNavigationItemDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMenuNavigationItemDirective.ctorParameters;\n/** @type {?} */\nMenuNavigationItemDirective.propDecorators;\n/** @type {?} */\nMenuNavigationItemDirective.prototype.activated;\n/** @type {?} */\nMenuNavigationItemDirective.prototype._subscription;\n/** @type {?} */\nMenuNavigationItemDirective.prototype._service;\n/** @type {?} */\nMenuNavigationItemDirective.prototype._elementRef;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { MenuNavigationItemDirective } from './menu-navigation-item.directive';\nexport class MenuNavigationService {\n\n    active$ = new BehaviorSubject<MenuNavigationItemDirective>(null);\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction MenuNavigationService_tsickle_Closure_declarations() {\n/** @type {?} */\nMenuNavigationService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMenuNavigationService.ctorParameters;\n/** @type {?} */\nMenuNavigationService.prototype.active$;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { AfterViewInit, Component, ElementRef, OnDestroy, QueryList, ViewChildren } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { Subscription } from 'rxjs/Subscription';\nimport { distinctUntilChanged } from 'rxjs/operators';\nimport { ResizeService } from '../../../directives/resize/index';\nimport { PageHeaderNavigation, PageHeaderService } from '../page-header.service';\nimport { PageHeaderNavigationItemComponent } from './navigation-item/navigation-item.component';\nexport class PageHeaderNavigationComponent implements AfterViewInit, OnDestroy {\n\n     menuItems: QueryList<PageHeaderNavigationItemComponent>;\n\n    items$: BehaviorSubject<PageHeaderNavigationItem[]> = this._pageHeaderService.items$;\n    indicatorVisible: boolean = false;\n    indicatorX: number = 0;\n    indicatorWidth: number = 0;\nprivate _subscription = new Subscription();\n/**\n * @param {?} elementRef\n * @param {?} resizeService\n * @param {?} _pageHeaderService\n */\nconstructor(elementRef: ElementRef, resizeService: ResizeService,\nprivate _pageHeaderService: PageHeaderService) {\n        this._subscription.add(resizeService.addResizeListener(elementRef.nativeElement).subscribe(this.updateSelectedIndicator.bind(this)));\n        this._subscription.add(_pageHeaderService.selected$.pipe(distinctUntilChanged()).subscribe(this.updateSelectedIndicator.bind(this)));\n        this._subscription.add(_pageHeaderService.secondary$.pipe(distinctUntilChanged()).subscribe(this.updateSelectedIndicator.bind(this)));\n    }\n/**\n * @return {?}\n */\nngAfterViewInit(): void {\n        this.updateSelectedIndicator();\n    }\n/**\n * @return {?}\n */\nngOnDestroy(): void {\n        this._subscription.unsubscribe();\n    }\n/**\n * @return {?}\n */\nupdateSelectedIndicator(): void {\n        setTimeout(() => {\n            // find the selected item\n            const /** @type {?} */ selected = this.menuItems.find(item => item.item.selected);\n\n            // determine whether or not to show the indicator\n            this.indicatorVisible = !!selected;\n\n            // set the width of the indicator to match the width of the navigation item\n            if (selected) {\n                const /** @type {?} */ styles = getComputedStyle(selected.elementRef.nativeElement);\n\n                this.indicatorX = selected.elementRef.nativeElement.offsetLeft;\n                this.indicatorWidth = parseInt(styles.getPropertyValue('width'));\n            }\n        });\n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-page-header-horizontal-navigation',\n    template: `\n      <ux-page-header-horizontal-navigation-item\n          *ngFor=\"let item of items$ | async\"\n          [item]=\"item\">\n      </ux-page-header-horizontal-navigation-item>\n\n      <div class=\"selected-indicator\"\n          [style.opacity]=\"indicatorVisible ? 1 : 0\"\n          [style.margin-left.px]=\"indicatorX\"\n          [style.width.px]=\"indicatorWidth\">\n      </div>\n    `,\n    host: {\n        'role': 'menubar'\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: ResizeService, },\n{type: PageHeaderService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'menuItems': [{ type: ViewChildren, args: [PageHeaderNavigationItemComponent, ] },],\n};\n}\n\nfunction PageHeaderNavigationComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nPageHeaderNavigationComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nPageHeaderNavigationComponent.ctorParameters;\n/** @type {?} */\nPageHeaderNavigationComponent.propDecorators;\n/** @type {?} */\nPageHeaderNavigationComponent.prototype.menuItems;\n/** @type {?} */\nPageHeaderNavigationComponent.prototype.items$;\n/** @type {?} */\nPageHeaderNavigationComponent.prototype.indicatorVisible;\n/** @type {?} */\nPageHeaderNavigationComponent.prototype.indicatorX;\n/** @type {?} */\nPageHeaderNavigationComponent.prototype.indicatorWidth;\n/** @type {?} */\nPageHeaderNavigationComponent.prototype._subscription;\n/** @type {?} */\nPageHeaderNavigationComponent.prototype._pageHeaderService;\n}\n\n\nexport interface PageHeaderNavigationItem {\n    icon?: string;\n    title: string;\n    selected?: boolean;\n    select?: (item: PageHeaderNavigationItem) => void;\n    children?: PageHeaderNavigationDropdownItem[];\n    parent?: PageHeaderNavigation;\n}\n\nexport interface PageHeaderNavigationDropdownItem {\n    title: string;\n    selected?: boolean;\n    select?: (item: PageHeaderNavigationDropdownItem) => void;\n    children?: PageHeaderNavigationDropdownItem[];\n    parent?: PageHeaderNavigation;\n}\n\n// This is an alias for MF use as \"DropdownItem\" doesn't make sense in context with how it is used\nexport interface PageHeaderSecondaryNavigationItem extends PageHeaderNavigationDropdownItem { }\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, ElementRef, Input, OnDestroy, OnInit, QueryList, ViewChild, ViewChildren } from '@angular/core';\nimport { BsDropdownDirective } from 'ngx-bootstrap/dropdown';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { Subscription } from 'rxjs/Subscription';\nimport { MenuNavigationToggleDirective } from '../../../../directives/menu-navigation/menu-navigation-toggle.directive';\nimport { PageHeaderService } from '../../page-header.service';\nimport { PageHeaderNavigationDropdownItemComponent } from '../navigation-dropdown-item/navigation-dropdown-item.component';\nimport { PageHeaderNavigationItem } from '../navigation.component';\nexport class PageHeaderNavigationItemComponent implements OnInit, OnDestroy {\n\n     button: MenuNavigationToggleDirective;\n     menu: BsDropdownDirective;\n     dropdowns: QueryList<PageHeaderNavigationDropdownItemComponent>;\n\n     item: PageHeaderNavigationItem;\n\n    secondary$: BehaviorSubject<boolean> = this._pageHeaderService.secondary$;\n\n    isOpen: boolean;\nprivate _subscription: Subscription;\n/**\n * @param {?} elementRef\n * @param {?} _pageHeaderService\n */\nconstructor(\npublic elementRef: ElementRef,\nprivate _pageHeaderService: PageHeaderService\n    ) { }\n/**\n * @return {?}\n */\nngOnInit() {\n\n        // Close submenus when selected item changes\n        this._subscription = this._pageHeaderService.selected$.subscribe((next) => {\n            if (next && this.isOpen) {\n                this.isOpen = false;\n\n                // If menu was closed, keep focus on the toggle button\n                this.button.focus();\n            }\n        });\n\n        if (this.menu) {\n            this._subscription.add(\n                this.menu.onHidden.subscribe(() => this.dropdowns.forEach(dropdown => dropdown.close()))\n            );\n        }\n    }\n/**\n * @return {?}\n */\nngOnDestroy(): void {\n        this._subscription.unsubscribe();\n    }\n/**\n * @return {?}\n */\nselect() {\n\n        // if the item has children then do nothing at this stage\n        if (this.item.children && this._pageHeaderService.secondary$.getValue() === false) {\n            return;\n        }\n\n        // otherwise select the current item\n        this._pageHeaderService.select(this.item);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-page-header-horizontal-navigation-item',\n    template: `\n      <div *ngIf=\"item.children && item.children.length > 0 && !(secondary$ | async)\"\n          dropdown\n          #menu=\"bs-dropdown\"\n          [(isOpen)]=\"isOpen\"\n          container=\"body\"\n          placement=\"bottom left\">\n\n          <button role=\"menuitem\"\n              class=\"horizontal-navigation-button\"\n              [class.selected]=\"item.selected\"\n              [class.open]=\"isOpen\"\n              aria-haspopup=\"true\"\n              [attr.aria-expanded]=\"isOpen\"\n              [attr.aria-selected]=\"item.selected\"\n              dropdownToggle\n              uxMenuNavigationToggle\n              #button=\"uxMenuNavigationToggle\"\n              [(menuOpen)]=\"isOpen\">\n\n              <span class=\"hpe-icon navigation-item-icon\" *ngIf=\"item.icon\" [ngClass]=\"item?.icon\"></span>\n              <span class=\"navigation-item-label\">{{ item?.title }}</span>\n              <span class=\"hpe-icon hpe-down\"></span>\n\n          </button>\n\n          <div *dropdownMenu\n              role=\"menu\"\n              class=\"dropdown-menu horizontal-navigation-dropdown-menu\"\n              uxMenuNavigation\n              [toggleButton]=\"button\"\n              toggleButtonPosition=\"top\">\n\n              <div *ngFor=\"let item of item?.children\" uxMenuNavigationItem (activated)=\"dropdownItem.focus()\">\n                  <ux-page-header-horizontal-navigation-dropdown-item\n                      #dropdownItem=\"ux-page-header-horizontal-navigation-dropdown-item\"\n                      [item]=\"item\">\n                  </ux-page-header-horizontal-navigation-dropdown-item>\n              </div>\n\n          </div>\n\n      </div>\n\n      <button *ngIf=\"!item.children || item.children.length === 0 || (secondary$ | async)\"\n          role=\"menuitem\"\n          class=\"horizontal-navigation-button\"\n          [class.selected]=\"item.selected\"\n          [attr.aria-selected]=\"item.selected\"\n          (click)=\"select()\">\n\n          <span class=\"hpe-icon navigation-item-icon\" *ngIf=\"item.icon\" [ngClass]=\"item?.icon\"></span>\n          <span class=\"navigation-item-label\">{{ item?.title }}</span>\n\n      </button>\n    `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: PageHeaderService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'button': [{ type: ViewChild, args: ['button', ] },],\n'menu': [{ type: ViewChild, args: ['menu', ] },],\n'dropdowns': [{ type: ViewChildren, args: [PageHeaderNavigationDropdownItemComponent, ] },],\n'item': [{ type: Input },],\n};\n}\n\nfunction PageHeaderNavigationItemComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nPageHeaderNavigationItemComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nPageHeaderNavigationItemComponent.ctorParameters;\n/** @type {?} */\nPageHeaderNavigationItemComponent.propDecorators;\n/** @type {?} */\nPageHeaderNavigationItemComponent.prototype.button;\n/** @type {?} */\nPageHeaderNavigationItemComponent.prototype.menu;\n/** @type {?} */\nPageHeaderNavigationItemComponent.prototype.dropdowns;\n/** @type {?} */\nPageHeaderNavigationItemComponent.prototype.item;\n/** @type {?} */\nPageHeaderNavigationItemComponent.prototype.secondary$;\n/** @type {?} */\nPageHeaderNavigationItemComponent.prototype.isOpen;\n/** @type {?} */\nPageHeaderNavigationItemComponent.prototype._subscription;\n/** @type {?} */\nPageHeaderNavigationItemComponent.prototype.elementRef;\n/** @type {?} */\nPageHeaderNavigationItemComponent.prototype._pageHeaderService;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, ElementRef, Input, OnDestroy, ViewChild } from '@angular/core';\nimport { Subject } from 'rxjs/Subject';\nimport { Subscription } from 'rxjs/Subscription';\nimport { debounceTime } from 'rxjs/operators';\nimport { PageHeaderService } from '../../page-header.service';\nimport { PageHeaderNavigationDropdownItem } from '../navigation.component';\nexport class PageHeaderNavigationDropdownItemComponent implements OnDestroy {\n\n     item: PageHeaderNavigationDropdownItem;\n\n    \n    button: ElementRef;\n\n    dropdownOpen: boolean = false;\nprivate _subscription: Subscription;\nprivate _hover$: Subject<boolean> = new Subject<boolean>();\n/**\n * @param {?} _pageHeaderService\n */\nconstructor(private _pageHeaderService: PageHeaderService) {\n\n        // subscribe to stream with a debounce (a small debounce is all that is required)\n        this._subscription = this._hover$.pipe(debounceTime(1)).subscribe(visible => this.dropdownOpen = visible);\n\n        // Close submenus when selected item changes\n        this._subscription.add(\n            _pageHeaderService.selected$.subscribe(() => {\n                this.dropdownOpen = false;\n            })\n        );\n    }\n/**\n * @return {?}\n */\nngOnDestroy(): void {\n        this._subscription.unsubscribe();\n    }\n/**\n * @param {?} item\n * @return {?}\n */\nselect(item: PageHeaderNavigationDropdownItem) {\n\n        // clicking on an item with children then return\n        if (item.children) {\n            return;\n        }\n\n        // emit the selected item in an event\n        this._pageHeaderService.select(item);\n    }\n/**\n * @return {?}\n */\nfocus(): void {\n        this.button.nativeElement.focus();\n    }\n/**\n * @return {?}\n */\nhoverStart() {\n        this._hover$.next(true);\n    }\n/**\n * @return {?}\n */\nhoverLeave() {\n        this._hover$.next(false);\n    }\n/**\n * @return {?}\n */\nclose() {\n        this.dropdownOpen = false;\n    }\n/**\n * @param {?} event\n * @param {?} item\n * @return {?}\n */\nkeydownHandler(event: KeyboardEvent, item: PageHeaderNavigationDropdownItem): void {\n\n        switch (event.key) {\n            case 'Enter':\n            case ' ':\n                this.select(item);\n                event.preventDefault();\n                event.stopPropagation();\n                break;\n        }\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-page-header-horizontal-navigation-dropdown-item',\n    exportAs: 'ux-page-header-horizontal-navigation-dropdown-item',\n    template: `\n      <div *ngIf=\"item.children && item.children.length > 0\"\n          dropdown\n          #subMenu=\"bs-dropdown\"\n          [isOpen]=\"dropdownOpen\"\n          container=\"body\"\n          placement=\"right\"\n          (mouseenter)=\"hoverStart()\"\n          (mouseleave)=\"hoverLeave()\">\n\n          <a role=\"menuitem\"\n              class=\"dropdown-item\"\n              [class.selected]=\"item.selected\"\n              aria-haspopup=\"true\"\n              [attr.aria-expanded]=\"dropdownOpen\"\n              [attr.aria-selected]=\"item.selected\"\n              tabindex=\"-1\"\n              #button\n              dropdownToggle\n              uxMenuNavigationToggle\n              #menuNavigationToggle=\"uxMenuNavigationToggle\"\n              [(menuOpen)]=\"dropdownOpen\"\n              menuPosition=\"right\">\n\n              <span class=\"dropdown-item-title\">{{ item.title }}</span>\n              <span class=\"dropdown-item-icon hpe-icon hpe-next\"></span>\n\n          </a>\n\n          <ul *dropdownMenu\n              role=\"menu\"\n              class=\"dropdown-menu horizontal-navigation-dropdown-submenu\"\n              (mouseenter)=\"hoverStart()\"\n              (mouseleave)=\"hoverLeave()\"\n              uxMenuNavigation\n              #menuNavigation=\"uxMenuNavigation\"\n              [toggleButton]=\"menuNavigationToggle\"\n              toggleButtonPosition=\"left\">\n\n              <li *ngFor=\"let subItem of item.children\" role=\"none\">\n\n                  <a role=\"menuitem\"\n                      class=\"dropdown-item\"\n                      [class.selected]=\"subItem.selected\"\n                      [attr.aria-selected]=\"subItem.selected\"\n                      tabindex=\"-1\"\n                      (click)=\"select(subItem, item)\"\n                      (keydown)=\"keydownHandler($event, subItem)\"\n                      uxMenuNavigationItem>\n\n                      <span class=\"dropdown-item-title\">{{ subItem.title }}</span>\n\n                  </a>\n\n              </li>\n          </ul>\n\n      </div>\n\n      <div *ngIf=\"!item.children || item.children.length === 0\"\n          (mouseenter)=\"hoverStart()\"\n          (mouseleave)=\"hoverLeave()\">\n\n          <a role=\"menuitem\"\n              #button\n              class=\"dropdown-item\"\n              [class.selected]=\"item.selected\"\n              [attr.aria-selected]=\"item.selected\"\n              tabindex=\"-1\"\n              (click)=\"select(item)\"\n              (keydown)=\"keydownHandler($event, item)\">\n\n              <span class=\"dropdown-item-title\">{{ item.title }}</span>\n\n          </a>\n\n      </div>\n    `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: PageHeaderService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'item': [{ type: Input },],\n'button': [{ type: ViewChild, args: ['button', ] },],\n};\n}\n\nfunction PageHeaderNavigationDropdownItemComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nPageHeaderNavigationDropdownItemComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nPageHeaderNavigationDropdownItemComponent.ctorParameters;\n/** @type {?} */\nPageHeaderNavigationDropdownItemComponent.propDecorators;\n/** @type {?} */\nPageHeaderNavigationDropdownItemComponent.prototype.item;\n/** @type {?} */\nPageHeaderNavigationDropdownItemComponent.prototype.button;\n/** @type {?} */\nPageHeaderNavigationDropdownItemComponent.prototype.dropdownOpen;\n/** @type {?} */\nPageHeaderNavigationDropdownItemComponent.prototype._subscription;\n/** @type {?} */\nPageHeaderNavigationDropdownItemComponent.prototype._hover$;\n/** @type {?} */\nPageHeaderNavigationDropdownItemComponent.prototype._pageHeaderService;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Input, OnDestroy, ViewChild } from '@angular/core';\nimport { Subscription } from 'rxjs/Subscription';\nimport { MenuNavigationToggleDirective } from '../../../directives/menu-navigation/menu-navigation-toggle.directive';\nimport { PageHeaderIconMenu, PageHeaderIconMenuDropdownItem } from '../interfaces';\nimport { PageHeaderService } from '../page-header.service';\nexport class PageHeaderIconMenuComponent implements OnDestroy {\n\n     menu: PageHeaderIconMenu;\n/**\n * @return {?}\n */\nget isOpen(): boolean {\n        return this._isOpen;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset isOpen(value: boolean) {\n        this._isOpen = value;\n        if (value) {\n            this._service.activeIconMenu$.next(this.menu);\n        }\n    }\n\n    \n    menuNavigationToggle: MenuNavigationToggleDirective;\nprivate _isOpen: boolean;\nprivate _subscription: Subscription;\n/**\n * @param {?} _service\n */\nconstructor(private _service: PageHeaderService) {\n        this._subscription = _service.activeIconMenu$.subscribe((next) => {\n            // Close all but the most recently opened menu\n            if (next !== this.menu) {\n                this._isOpen = false;\n            }\n        });\n    }\n/**\n * @return {?}\n */\nngOnDestroy(): void {\n        this._subscription.unsubscribe();\n    }\n/**\n * @param {?} item\n * @return {?}\n */\nselect(item: PageHeaderIconMenu | PageHeaderIconMenuDropdownItem) {\n        if (item.select) {\n            item.select.call(item, item);\n        }\n    }\n/**\n * @param {?} item\n * @param {?} event\n * @return {?}\n */\nkeydownHandler(item: PageHeaderIconMenu | PageHeaderIconMenuDropdownItem, event: KeyboardEvent): void {\n\n        switch (event.key) {\n            case 'Enter':\n            case ' ':\n                this.select(item);\n                this.isOpen = false;\n                this.menuNavigationToggle.focus();\n                event.preventDefault();\n                event.stopPropagation();\n                break;\n        }\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-page-header-icon-menu',\n    template: `\n      <div class=\"page-header-icon-menu\"\n          dropdown\n          placement=\"bottom right\"\n          [(isOpen)]=\"isOpen\">\n\n          <a role=\"button\"\n              class=\"page-header-icon-menu-button\"\n              [attr.aria-label]=\"menu.label\"\n              aria-haspopup=\"true\"\n              tabindex=\"0\"\n              (click)=\"select(menu)\"\n              dropdownToggle\n              uxMenuNavigationToggle\n              #menuNavigationToggle=\"uxMenuNavigationToggle\"\n              [(menuOpen)]=\"isOpen\">\n\n              <i class=\"hpe-icon\" [ngClass]=\"menu.icon\"></i>\n              <span class=\"label label-primary\" *ngIf=\"menu?.badge\" aria-hidden=\"true\">{{ menu.badge }}</span>\n\n          </a>\n\n          <ul *dropdownMenu\n              class=\"dropdown-menu\"\n              role=\"menu\"\n              uxMenuNavigation\n              [toggleButton]=\"menuNavigationToggle\">\n\n              <li *ngFor=\"let dropdown of menu?.dropdown\"\n                  role=\"none\"\n                  [class.dropdown-header]=\"dropdown.header\"\n                  [class.dropdown-divider]=\"dropdown.divider\">\n\n                  <span class=\"font-bold\" *ngIf=\"dropdown.header\">{{ dropdown.title }}</span>\n\n                  <a *ngIf=\"!dropdown.header\"\n                      role=\"menuitem\"\n                      class=\"dropdown-item\"\n                      tabindex=\"-1\"\n                      (click)=\"select(dropdown)\"\n                      (keydown)=\"keydownHandler(dropdown, $event)\"\n                      uxMenuNavigationItem>\n\n\n                      <span class=\"dropdown-item-title\">\n                          <i class=\"hpe-icon hpe-fw\" [ngClass]=\"dropdown.icon\"></i>\n                          {{ dropdown.title }}\n                      </span>\n                      <span *ngIf=\"dropdown.subtitle\" class=\"dropdown-item-subtitle\">{{ dropdown.subtitle }}</span>\n\n                  </a>\n              </li>\n\n          </ul>\n      </div>\n    `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: PageHeaderService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'menu': [{ type: Input },],\n'menuNavigationToggle': [{ type: ViewChild, args: ['menuNavigationToggle', ] },],\n};\n}\n\nfunction PageHeaderIconMenuComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nPageHeaderIconMenuComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nPageHeaderIconMenuComponent.ctorParameters;\n/** @type {?} */\nPageHeaderIconMenuComponent.propDecorators;\n/** @type {?} */\nPageHeaderIconMenuComponent.prototype.menu;\n/** @type {?} */\nPageHeaderIconMenuComponent.prototype.menuNavigationToggle;\n/** @type {?} */\nPageHeaderIconMenuComponent.prototype._isOpen;\n/** @type {?} */\nPageHeaderIconMenuComponent.prototype._subscription;\n/** @type {?} */\nPageHeaderIconMenuComponent.prototype._service;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, ContentChildren, EventEmitter, Input, OnDestroy, OnInit, Output, QueryList, TemplateRef } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { Subscription } from 'rxjs/Subscription';\nimport { distinctUntilChanged, filter, map } from 'rxjs/operators';\nimport { ColorService } from '../../services/color/index';\nimport { Breadcrumb } from '../breadcrumbs/index';\nimport { PageHeaderCustomMenuDirective } from './custom-menu/custom-menu.directive';\nimport { PageHeaderIconMenu } from './interfaces';\nimport { PageHeaderNavigationItem } from './navigation/navigation.component';\nimport { PageHeaderNavigation, PageHeaderService } from './page-header.service';\nexport class PageHeaderComponent implements OnInit, OnDestroy {\n\n     logo: string;\n     header: string;\n     alignment: 'left' | 'right' | 'center' = 'center';\n     condensed: boolean = false;\n     iconMenus: PageHeaderIconMenu[];\n     backVisible: boolean = true;\n     secondaryNavigationAlignment: string = 'center';\n     secondaryNavigationAutoselect: boolean = false;\n/**\n * @param {?} items\n * @return {?}\n */\nset items(items: PageHeaderNavigationItem[]) {\n        this._pageHeaderService.setItems(items);\n    }\n/**\n * @param {?} enabled\n * @return {?}\n */\nset secondaryNavigation(enabled: boolean) {\n        this._pageHeaderService.setSecondaryNavigation(enabled);\n    }\n/**\n * @return {?}\n */\nget secondaryNavigation(): boolean {\n        return this._pageHeaderService.secondary$.getValue();\n    }\n/**\n * @param {?} crumbs\n * @return {?}\n */\nset crumbs(crumbs: Breadcrumb[]) {\n        this._crumbs = crumbs;\n    }\n/**\n * @return {?}\n */\nget crumbs(): Breadcrumb[] {\n        return this.condensed ? [...this._crumbs, { title: this.header }] : this._crumbs;\n    }\n/**\n * @param {?} color\n * @return {?}\n */\nset familyBackground(color: string) {\n        this._familyBackground = this._colorService.resolve(color);\n    }\n/**\n * @return {?}\n */\nget familyBackground(): string {\n        return this._familyBackground;\n    }\n/**\n * @param {?} color\n * @return {?}\n */\nset familyForeground(color: string) {\n        this._familyForeground = this._colorService.resolve(color);\n    }\n/**\n * @return {?}\n */\nget familyForeground(): string {\n        return this._familyForeground;\n    }\n\n     backClick = new EventEmitter();\n\n     customMenus: QueryList<TemplateRef<any>>;\n\n    selected$: BehaviorSubject<PageHeaderNavigationItem> = this._pageHeaderService.selected$;\n    selectedRoot$: BehaviorSubject<PageHeaderNavigationItem> = this._pageHeaderService.selectedRoot$;\nprivate _crumbs: Breadcrumb[] = [];\nprivate _familyBackground: string;\nprivate _familyForeground: string;\nprivate _subscription: Subscription;\n/**\n * @param {?} _colorService\n * @param {?} _pageHeaderService\n */\nconstructor(private _colorService: ColorService,\nprivate _pageHeaderService: PageHeaderService) { }\n/**\n * @return {?}\n */\nngOnInit(): void {\n        this._subscription = this.selectedRoot$.pipe(\n            distinctUntilChanged(),\n            filter(() => this.secondaryNavigation && this.secondaryNavigationAutoselect),\n            filter((item: PageHeaderNavigation) => item && item.children && item.children.length > 0),\n            map(item => item.children[0])\n        ).subscribe(item => this.select(item));\n    }\n/**\n * @return {?}\n */\nngOnDestroy(): void {\n        this._subscription.unsubscribe();\n    }\n/**\n * @return {?}\n */\ngoBack(): void {\n        this.backClick.emit();\n    }\n/**\n * @param {?} item\n * @return {?}\n */\nselect(item: PageHeaderNavigation): void {\n        this._pageHeaderService.select(item);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-page-header',\n    exportAs: 'ux-page-header',\n    template: `\n      <div class=\"ux-page-header\" [class.page-header-condensed]=\"condensed\" role=\"banner\">\n\n          <!-- Display Upper Section when not condensed -->\n          <div class=\"page-header-actions\" *ngIf=\"!condensed\">\n\n              <div class=\"page-header-logo-container\" role=\"presentation\" [hidden]=\"!logo\">\n                  <img [attr.src]=\"logo\" class=\"page-header-logo\">\n              </div>\n\n              <div class=\"page-header-navigation\" [ngClass]=\"alignment\" role=\"navigation\" aria-label=\"Primary Navigation\">\n\n                  <!-- The Top Navigation Options -->\n                  <ux-page-header-horizontal-navigation></ux-page-header-horizontal-navigation>\n              </div>\n\n              <div class=\"page-header-icon-menus\" role=\"toolbar\">\n                  <ng-container *ngFor=\"let menu of customMenus\" [ngTemplateOutlet]=\"menu\"></ng-container>\n\n                  <ux-page-header-icon-menu *ngFor=\"let menu of iconMenus\" [menu]=\"menu\"></ux-page-header-icon-menu>\n              </div>\n          </div>\n\n          <!-- Display Lower Section When Not Condensed -->\n          <div class=\"page-header-details\" *ngIf=\"!condensed\">\n\n              <div class=\"page-header-state-container\" role=\"navigation\">\n\n                  <button *ngIf=\"backVisible === true\" class=\"page-header-back-button\" (click)=\"goBack()\" aria-label=\"Go Back\">\n                      <span class=\"hpe-icon hpe-previous text-primary\"></span>\n                  </button>\n\n                  <div class=\"page-header-title-container\">\n\n                      <ux-breadcrumbs [crumbs]=\"crumbs\"></ux-breadcrumbs>\n\n                      <h1 class=\"page-header-title\" [style.backgroundColor]=\"familyBackground\" [style.color]=\"familyForeground\">{{ header }}</h1>\n                  </div>\n\n              </div>\n\n          </div>\n\n          <!-- Display This Section Optimized for Condensed Mode -->\n          <div class=\"page-header-condensed-content\" *ngIf=\"condensed\">\n\n              <div class=\"page-header-breadcrumbs\" role=\"navigation\">\n                  <ux-breadcrumbs [crumbs]=\"crumbs\"></ux-breadcrumbs>\n              </div>\n\n              <div class=\"page-header-navigation\" [ngClass]=\"alignment\" role=\"navigation\" aria-label=\"Primary Navigation\">\n\n                  <!-- The Top Navigation Options -->\n                  <ux-page-header-horizontal-navigation></ux-page-header-horizontal-navigation>\n              </div>\n\n              <div class=\"page-header-icon-menus\" role=\"toolbar\">\n                  <ng-container *ngFor=\"let menu of customMenus\" [ngTemplateOutlet]=\"menu\"></ng-container>\n                  <ux-page-header-icon-menu *ngFor=\"let menu of iconMenus\" [menu]=\"menu\"></ux-page-header-icon-menu>\n              </div>\n\n          </div>\n\n      </div>\n\n      <div class=\"page-header-secondary\" [ngClass]=\"secondaryNavigationAlignment\" role=\"navigation\" *ngIf=\"secondaryNavigation && (selectedRoot$ | async)\">\n          <ul class=\"nav nav-tabs\" role=\"tablist\" aria-label=\"Secondary Navigation\" *ngIf=\"(selectedRoot$ | async)?.children; let children\">\n              <li *ngFor=\"let child of children\" [class.active]=\"child === (selected$ | async)\" role=\"none\">\n                  <a role=\"tab\"\n                      [attr.aria-selected]=\"child === (selected$ | async)\"\n                      tabindex=\"0\"\n                      (click)=\"select(child)\"\n                      (keydown.enter)=\"select(child)\">{{ child.title }}</a>\n              </li>\n          </ul>\n      </div>\n    `,\n    providers: [ PageHeaderService ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ColorService, },\n{type: PageHeaderService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'logo': [{ type: Input },],\n'header': [{ type: Input },],\n'alignment': [{ type: Input },],\n'condensed': [{ type: Input },],\n'iconMenus': [{ type: Input },],\n'backVisible': [{ type: Input },],\n'secondaryNavigationAlignment': [{ type: Input },],\n'secondaryNavigationAutoselect': [{ type: Input },],\n'items': [{ type: Input },],\n'secondaryNavigation': [{ type: Input },],\n'crumbs': [{ type: Input },],\n'familyBackground': [{ type: Input },],\n'familyForeground': [{ type: Input },],\n'backClick': [{ type: Output },],\n'customMenus': [{ type: ContentChildren, args: [PageHeaderCustomMenuDirective, { read: TemplateRef }, ] },],\n};\n}\n\nfunction PageHeaderComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nPageHeaderComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nPageHeaderComponent.ctorParameters;\n/** @type {?} */\nPageHeaderComponent.propDecorators;\n/** @type {?} */\nPageHeaderComponent.prototype.logo;\n/** @type {?} */\nPageHeaderComponent.prototype.header;\n/** @type {?} */\nPageHeaderComponent.prototype.alignment;\n/** @type {?} */\nPageHeaderComponent.prototype.condensed;\n/** @type {?} */\nPageHeaderComponent.prototype.iconMenus;\n/** @type {?} */\nPageHeaderComponent.prototype.backVisible;\n/** @type {?} */\nPageHeaderComponent.prototype.secondaryNavigationAlignment;\n/** @type {?} */\nPageHeaderComponent.prototype.secondaryNavigationAutoselect;\n/** @type {?} */\nPageHeaderComponent.prototype.backClick;\n/** @type {?} */\nPageHeaderComponent.prototype.customMenus;\n/** @type {?} */\nPageHeaderComponent.prototype.selected$;\n/** @type {?} */\nPageHeaderComponent.prototype.selectedRoot$;\n/** @type {?} */\nPageHeaderComponent.prototype._crumbs;\n/** @type {?} */\nPageHeaderComponent.prototype._familyBackground;\n/** @type {?} */\nPageHeaderComponent.prototype._familyForeground;\n/** @type {?} */\nPageHeaderComponent.prototype._subscription;\n/** @type {?} */\nPageHeaderComponent.prototype._colorService;\n/** @type {?} */\nPageHeaderComponent.prototype._pageHeaderService;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { Subscription } from 'rxjs/Subscription';\nimport { map } from 'rxjs/operators';\nimport { PageHeaderIconMenu } from './interfaces';\nimport { PageHeaderNavigationDropdownItem, PageHeaderNavigationItem } from './navigation/navigation.component';\nexport class PageHeaderService implements OnDestroy {\n\n    items$ = new BehaviorSubject<PageHeaderNavigationItem[]>([]);\n    selected$ = new BehaviorSubject<PageHeaderNavigationItem>(null);\n    selectedRoot$ = new BehaviorSubject<PageHeaderNavigationItem>(null);\n    secondary$ = new BehaviorSubject<boolean>(false);\n    activeIconMenu$ = new BehaviorSubject<PageHeaderIconMenu>(null);\nprivate _subscription: Subscription;\nconstructor() {\n        this._subscription = this.selected$.pipe(map(selected => this.getRoot(selected))).subscribe(root => this.selectedRoot$.next(root));\n    }\n/**\n * @return {?}\n */\nngOnDestroy(): void {\n        this._subscription.unsubscribe();\n    }\n/**\n * @param {?} item\n * @return {?}\n */\nselect(item: PageHeaderNavigationItem): void {\n\n        // do nothing if this item is already selected\n        if (item === this.selected$.getValue()) {\n            return;\n        }\n\n        // if we are in secondary navigation mode and we click a parent - dont deselect the child\n        if (this.secondary$.getValue() === true && this.isParentOf(this.selected$.getValue(), item)) {\n            return;\n        }\n\n        // deselect all current items\n        this.deselectAll();\n\n        // call the select function if present\n        if (item.select) {\n            item.select.call(item, item);\n        }\n\n        // store the selected state\n        item.selected = true;\n\n        // select all parent items too\n        this.selectParents(item);\n\n        // emit the new selected item\n        this.selected$.next(item);\n    }\n/**\n * @param {?} item\n * @return {?}\n */\ndeselect(item: PageHeaderNavigationItem | PageHeaderNavigationDropdownItem): void {\n\n        // deselect the current item\n        item.selected = false;\n\n        // iterate any children and deselect them\n        if (item.children) {\n            item.children.forEach(_item => this.deselect(_item));\n        }\n    }\n/**\n * @return {?}\n */\ndeselectAll(): void {\n        this.items$.getValue().forEach(item => this.deselect(item));\n    }\n/**\n * @param {?=} items\n * @return {?}\n */\nsetItems(items: PageHeaderNavigationItem[] = []): void {\n        // identify all parent elements\n        items.forEach(item => this.setParent(item));\n\n        this.items$.next(items);\n    }\n/**\n * @param {?} enabled\n * @return {?}\n */\nsetSecondaryNavigation(enabled: boolean): void {\n        this.secondary$.next(enabled);\n    }\n/**\n * @param {?} item\n * @return {?}\n */\nprivate getRoot(item: PageHeaderNavigation): PageHeaderNavigation {\n        return item && item.parent ? this.getRoot(item.parent) : item;\n    }\n/**\n * @param {?} item\n * @param {?=} parent\n * @return {?}\n */\nprivate setParent(item: PageHeaderNavigation, parent?: PageHeaderNavigation | null): void {\n        // set the parent field\n        item.parent = parent;\n\n        // call this function recursively on all children\n        if (item.children) {\n            item.children.forEach(child => this.setParent(child, item));\n        }\n    }\n/**\n * @param {?} item\n * @return {?}\n */\nprivate selectParents(item: PageHeaderNavigation): void {\n        // if there is a parent then we want to set it to selected\n        if (item.parent) {\n            item.parent.selected = true;\n\n            // check if it has any parents\n            this.selectParents(item.parent);\n        }\n    }\n/**\n * @param {?} node\n * @param {?} parent\n * @return {?}\n */\nprivate isParentOf(node: PageHeaderNavigation, parent: PageHeaderNavigation): boolean {\n\n        // if there are no parents return false\n        if (!node || !node.parent) {\n            return false;\n        }\n\n        // if the parent is the match we are looking for return true\n        if (node.parent === parent) {\n            return true;\n        }\n\n        // if there are potentially grandparents then check them too\n        return this.isParentOf(node.parent, parent);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction PageHeaderService_tsickle_Closure_declarations() {\n/** @type {?} */\nPageHeaderService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nPageHeaderService.ctorParameters;\n/** @type {?} */\nPageHeaderService.prototype.items$;\n/** @type {?} */\nPageHeaderService.prototype.selected$;\n/** @type {?} */\nPageHeaderService.prototype.selectedRoot$;\n/** @type {?} */\nPageHeaderService.prototype.secondary$;\n/** @type {?} */\nPageHeaderService.prototype.activeIconMenu$;\n/** @type {?} */\nPageHeaderService.prototype._subscription;\n}\n\n\nexport type PageHeaderNavigation = PageHeaderNavigationItem | PageHeaderNavigationDropdownItem;\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive } from '@angular/core';\nexport class PageHeaderCustomMenuDirective { static decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{ \n    selector: '[uxPageHeaderCustomMenu]' \n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction PageHeaderCustomMenuDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nPageHeaderCustomMenuDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nPageHeaderCustomMenuDirective.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\n\nimport { NumberPickerComponent } from './number-picker.component';\nexport class NumberPickerModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        CommonModule,\n        FormsModule\n    ],\n    exports: [NumberPickerComponent],\n    declarations: [NumberPickerComponent]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction NumberPickerModule_tsickle_Closure_declarations() {\n/** @type {?} */\nNumberPickerModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNumberPickerModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Input, ViewEncapsulation, EventEmitter, Output, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nexport const /** @type {?} */ NUMBER_PICKER_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => NumberPickerComponent),\n    multi: true\n};\nexport class NumberPickerComponent implements ControlValueAccessor {\nprivate _min: number = -Infinity;\nprivate _max: number = Infinity;\nprivate _step: number = 1;\nprivate _disabled: boolean = false;\nprivate _value: number = 0;\nprivate _propagateChange = (_: any) => { };\n\n     valid: boolean = true;\n     valueChange = new EventEmitter<number>();\n/**\n * @return {?}\n */\nget value(): number {\n        return this._value;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset value(value: number) {\n        this._value = value;\n        this.valueChange.emit(value);\n        this._propagateChange(value);\n    }\n/**\n * @return {?}\n */\nget min(): number {\n        return this._min;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset min(value) {\n        this._min = typeof value === 'string' ? parseFloat(value) : value;\n    }\n/**\n * @return {?}\n */\nget max(): number {\n        return this._max;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset max(value) {\n        this._max = typeof value === 'string' ? parseFloat(value) : value;\n    }\n/**\n * @return {?}\n */\nget step(): number {\n        return this._step;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset step(value) {\n        this._step = typeof value === 'string' ? parseFloat(value) : value;\n    }\n/**\n * @return {?}\n */\nget disabled(): boolean {\n        return this._disabled;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset disabled(value) {\n        this._disabled = typeof value === 'string' && (value === '' || value === 'true' || value === 'disabled') || value === true;\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nincrement(event: MouseEvent | KeyboardEvent): void {\n        event.preventDefault();\n\n        if (!this.disabled) {\n            this.value = Math.max(Math.min(this.value + this.step, this.max), this.min);\n        }\n    }\n/**\n * @param {?} event\n * @return {?}\n */\ndecrement(event: MouseEvent | KeyboardEvent): void {\n        event.preventDefault();\n\n        if (!this.disabled) {\n            this.value = Math.min(Math.max(this.value - this.step, this.min), this.max);\n        }\n    }\n/**\n * @return {?}\n */\nisValid(): boolean {\n        if (this.value < this.min || this.value > this.max) {\n            return false;\n        }\n\n        return this.valid;\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nonScroll(event: WheelEvent): void {\n\n        let /** @type {?} */ scrollValue = event.deltaY || event.wheelDelta;\n\n        if (scrollValue < 0) {\n            this.increment(event);\n        } else {\n            this.decrement(event);\n        }\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nwriteValue(value: any): void {\n        if (value !== undefined) {\n            this._value = value;\n        }\n    }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnChange(fn: any): void {\n        this._propagateChange = fn;\n    }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnTouched(fn: any): void { }\n/**\n * @param {?} isDisabled\n * @return {?}\n */\nsetDisabledState(isDisabled: boolean): void {\n        this.disabled = isDisabled;\n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-number-picker',\n    template: `\n      <input type=\"number\"\n             role=\"spinbutton\"\n             class=\"form-control number-picker-input\"\n             [(ngModel)]=\"value\"\n             [min]=\"min\"\n             [max]=\"max\"\n             (keydown.ArrowDown)=\"decrement($event)\"\n             (keydown.ArrowUp)=\"increment($event)\"\n             (wheel)=\"onScroll($event)\"\n             step=\"any\"\n             [disabled]=\"disabled\"\n             [attr.aria-valuemin]=\"min\"\n             [attr.aria-valuenow]=\"value\"\n             [attr.aria-valuemax]=\"max\">\n\n      <div class=\"number-picker-controls\">\n\n          <div class=\"number-picker-control-up\"\n               (click)=\"increment($event)\"\n               [class.disabled]=\"disabled || value >= max\">\n\n              <span class=\"hpe-icon hpe-up\"></span>\n          </div>\n\n          <div class=\"number-picker-control-down\"\n               (click)=\"decrement($event)\"\n               [class.disabled]=\"disabled || value <= min\">\n\n              <span class=\"hpe-icon hpe-down\"></span>\n          </div>\n\n      </div>\n    `,\n    providers: [NUMBER_PICKER_VALUE_ACCESSOR],\n    host: {\n        '[class.has-error]': '!isValid()'\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'valid': [{ type: Input },],\n'valueChange': [{ type: Output },],\n'value': [{ type: Input, args: ['value', ] },],\n'min': [{ type: Input },],\n'max': [{ type: Input },],\n'step': [{ type: Input },],\n'disabled': [{ type: Input },],\n};\n}\n\nfunction NumberPickerComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nNumberPickerComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNumberPickerComponent.ctorParameters;\n/** @type {?} */\nNumberPickerComponent.propDecorators;\n/** @type {?} */\nNumberPickerComponent.prototype._min;\n/** @type {?} */\nNumberPickerComponent.prototype._max;\n/** @type {?} */\nNumberPickerComponent.prototype._step;\n/** @type {?} */\nNumberPickerComponent.prototype._disabled;\n/** @type {?} */\nNumberPickerComponent.prototype._value;\n/** @type {?} */\nNumberPickerComponent.prototype._propagateChange;\n/** @type {?} */\nNumberPickerComponent.prototype.valid;\n/** @type {?} */\nNumberPickerComponent.prototype.valueChange;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NotificationListComponent } from './notification-list.component';\nimport { NotificationService } from './notification.service';\nimport { ColorServiceModule } from '../../services/color/index';\nexport class NotificationModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        CommonModule,\n        ColorServiceModule\n    ],\n    exports: [\n        NotificationListComponent\n    ],\n    declarations: [\n        NotificationListComponent\n    ],\n    providers: [\n        NotificationService\n    ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction NotificationModule_tsickle_Closure_declarations() {\n/** @type {?} */\nNotificationModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNotificationModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, HostBinding, Input, ChangeDetectionStrategy } from '@angular/core';\nimport { NotificationService, NotificationRef, NotificationListDirection } from './notification.service';\nimport { trigger, state, style, animate, transition } from '@angular/animations';\nimport { map } from 'rxjs/operators/map';\nimport { Observable } from 'rxjs/Observable';\nexport class NotificationListComponent {\n/**\n * @param {?} direction\n * @return {?}\n */\nset direction(direction: NotificationListDirection) {\n        this._notificationService.direction = direction;\n    }\n\n      position: NotificationListPostion = 'top-right';\n\n    notifications$: Observable<NotificationRef[]> = this._notificationService.notifications$.pipe(\n        map((notificationRefs: NotificationRef[]) => notificationRefs.filter(notificationRef => notificationRef.visible),\n    ));\n/**\n * @param {?} _notificationService\n */\nconstructor(private _notificationService: NotificationService) {\n\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-notification-list',\n    template: `\n      <div class=\"notification\" *ngFor=\"let notificationRef of notifications$ | async; let idx = index\"\n          [style.top.px]=\"(notificationRef.height + notificationRef.spacing) * idx\"\n          [style.height.px]=\"notificationRef.height\"\n          [style.background-color]=\"notificationRef.backgroundColor\"\n          [@notificationState]>\n          <ng-container *ngTemplateOutlet=\"notificationRef.templateRef; context: { $implicit: notificationRef, data: notificationRef.data }\"></ng-container>\n      </div>\n    `,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    animations: [\n        trigger('notificationState', [\n            state('in', style({ transform: 'translateY(0)', opacity: 0.9 })),\n            transition(':enter', [\n                style({ transform: 'translateY(-50px)', opacity: 0 }),\n                animate(500)\n            ]),\n            transition(':leave', [\n                animate(500, style({ transform: 'translateY(50px)', opacity: 0 }))\n            ])\n        ])\n    ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: NotificationService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'direction': [{ type: Input },],\n'position': [{ type: Input },{ type: HostBinding, args: ['class', ] },],\n};\n}\n\nfunction NotificationListComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nNotificationListComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNotificationListComponent.ctorParameters;\n/** @type {?} */\nNotificationListComponent.propDecorators;\n/** @type {?} */\nNotificationListComponent.prototype.position;\n/** @type {?} */\nNotificationListComponent.prototype.notifications$;\n/** @type {?} */\nNotificationListComponent.prototype._notificationService;\n}\n\n\nexport type NotificationListPostion = 'top-left' | 'top-right' | 'bottom-left' | 'bottom-right';\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable, TemplateRef } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { ColorService } from '../../services/color/index';\nexport class NotificationService {\n\n    // provide default options\n    options: NotificationOptions = {\n        duration: 4,\n        height: 100,\n        spacing: 10,\n        backgroundColor: this._colorService.getColor('accent').toHex(),\n        iconColor: this._colorService.getColor('accent').toHex()\n    };\n\n    direction: NotificationListDirection = 'above';\n\n    notifications$: BehaviorSubject<NotificationRef[]> = new BehaviorSubject<NotificationRef[]>([]);\n/**\n * @param {?} templateRef\n * @param {?=} options\n * @param {?=} data\n * @return {?}\n */\nshow(templateRef: TemplateRef<any>, options: NotificationOptions = this.options, data: { [key: string]: any } = {}): NotificationRef {\n\n        options = { ...this.options, ...options };\n\n        const /** @type {?} */ notificationRef: NotificationRef = {\n            templateRef: templateRef,\n            duration: options.duration,\n            date: new Date(),\n            visible: true,\n            height: options.height,\n            spacing: options.spacing,\n            backgroundColor: options.backgroundColor,\n            iconColor: options.iconColor,\n            data: data\n        };\n\n        const /** @type {?} */ notifications = this.notifications$.getValue();\n\n        if (this.direction === 'above') {\n            notifications.unshift(notificationRef);\n        } else {\n            notifications.push(notificationRef);\n        }\n\n        this.notifications$.next(notifications);\n\n        // remove notification after delay\n        if (options.duration !== 0) {\n            setTimeout(() => this.dismiss(notificationRef), options.duration * 1000);\n        }\n\n        return notificationRef;\n    }\n/**\n * @return {?}\n */\ngetHistory(): NotificationRef[] {\n        return this.notifications$.getValue();\n    }\n/**\n * @param {?} notificationRef\n * @return {?}\n */\ndismiss(notificationRef: NotificationRef): void {\n        notificationRef.visible = false;\n        this.notifications$.next(this.notifications$.getValue());\n    }\n/**\n * @return {?}\n */\ndismissAll(): void {\n        this.notifications$.getValue().forEach(notificationRef => notificationRef.visible = false);\n        this.notifications$.next(this.notifications$.getValue());        \n    }\n/**\n * @param {?} _colorService\n */\nconstructor(private _colorService: ColorService) {\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ColorService, },\n];\n}\n\nfunction NotificationService_tsickle_Closure_declarations() {\n/** @type {?} */\nNotificationService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNotificationService.ctorParameters;\n/** @type {?} */\nNotificationService.prototype.options;\n/** @type {?} */\nNotificationService.prototype.direction;\n/** @type {?} */\nNotificationService.prototype.notifications$;\n/** @type {?} */\nNotificationService.prototype._colorService;\n}\n\n\nexport interface NotificationRef {\n    templateRef: TemplateRef<any>;\n    duration: number;\n    date: Date;\n    visible?: boolean;\n    height?: number;\n    spacing?: number;\n    backgroundColor?: string;\n    iconColor?: string;\n    data: { [key: string]: any };\n}\n\nexport interface NotificationOptions {\n    duration?: number;\n    height?: number;\n    spacing?: number;\n    backgroundColor?: string;\n    iconColor?: string;\n}\n\nexport type NotificationListDirection = 'above' | 'below';\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { ColorService } from './color.service';\nexport class ColorServiceModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    providers: [ColorService],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ColorServiceModule_tsickle_Closure_declarations() {\n/** @type {?} */\nColorServiceModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nColorServiceModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable, Inject } from '@angular/core';\nimport { DOCUMENT } from '@angular/platform-browser';\nimport { ColorValueSet, ColorClassSet } from './color.service';\nexport class ColorService {\nprivate _html: string;\nprivate _element: HTMLElement;\nprivate _colors: ThemeColors;\nprivate _colorSet: any = colorSets.keppel;\n/**\n * @param {?} document\n */\nconstructor( document: Document) {\n        if (this._colorSet.colorClassSet) {\n            this.setColors();\n        } else {\n            for (let key in this._colorSet.colorValueSet) {\n                this._colors[key] = this.getColorValueByHex(this._colorSet.colorValueSet[key]);\n            }\n        }\n    }\n/**\n * @return {?}\n */\nprivate setColors() {\n\n        this._html = '';\n\n        for (let /** @type {?} */ key in this._colorSet.colorClassSet) {\n            this._html += '<div class=\"' + this._colorSet.colorClassSet[key] + '-color\"></div>';\n        }\n\n        this._element = document.createElement('div');\n        this._element.className = 'color-chart';\n        this._element.innerHTML = this._html;\n\n        document.body.appendChild(this._element);\n\n        this._colors = {};\n\n        for (let /** @type {?} */ key in this._colorSet.colorClassSet) {\n            this._colors[key] = this.getColorValue(this._colorSet.colorClassSet[key]);\n        }\n\n        this._element.parentNode.removeChild(this._element);\n    }\n/**\n * @param {?} color\n * @return {?}\n */\nprivate getColorValueByHex(color: string): ThemeColor {\n        const /** @type {?} */ hex = color.replace('#', '');\n\n        const /** @type {?} */ r = parseInt(hex.substring(0, 2), 16).toString();\n        const /** @type {?} */ g = parseInt(hex.substring(2, 4), 16).toString();\n        const /** @type {?} */ b = parseInt(hex.substring(4, 6), 16).toString();\n\n        return new ThemeColor(r, g, b, '1');\n    }\n/**\n * @param {?} color\n * @return {?}\n */\nprivate getColorValue(color: ColorIdentifier): ThemeColor {\n\n        const /** @type {?} */ target = this._element.querySelector('.' + this._colorSet.colorClassSet[color] + '-color');\n\n        if (!target) {\n            throw new Error('Invalid color');\n        }\n\n        const /** @type {?} */ colorValue = window.getComputedStyle(target).backgroundColor;\n\n        const /** @type {?} */ rgba = colorValue.match(/^rgba?\\((\\d+),\\s*(\\d+),\\s*(\\d+)(?:,\\s*(\\d+(?:\\.\\d+)?))?\\)$/);\n\n        return new ThemeColor(rgba[1], rgba[2], rgba[3], rgba[4]);\n    }\n/**\n * @param {?} color\n * @return {?}\n */\ngetColor(color: ColorIdentifier): ThemeColor {\n        const /** @type {?} */ themeColor = this._colors[this.resolveColorName(color)];\n        if (!themeColor) {\n            throw new Error('Color not found: ' + color);\n        }\n        \n        return new ThemeColor(themeColor.getRed(), themeColor.getGreen(), themeColor.getBlue(), themeColor.getAlpha());\n    }\n/**\n * @return {?}\n */\ngetColorSet() {\n        return this._colorSet;\n    }\n/**\n * @param {?} colorSet\n * @return {?}\n */\nsetColorSet(colorSet: ColorSet) {\n        this._colorSet = colorSet;\n        this._colors = {};\n\n        if (this._colorSet.colorClassSet) {\n            this.setColors();\n        } else {\n            for (let /** @type {?} */ key in this._colorSet.colorValueSet) {\n                this._colors[key] = this.getColorValueByHex(this._colorSet.colorValueSet[key]);\n            }\n        }\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nresolve(value: string): string {\n        if (!value) {\n            return;\n        }\n        \n        const /** @type {?} */ colorName = this.resolveColorName(value);\n        \n        for (let /** @type {?} */ color in this._colors) {\n            if (colorName === color.toLowerCase()) {\n                return this.getColor(colorName).toRgba();\n            }\n        }\n\n        return value;\n    }\n/**\n * @param {?=} value\n * @return {?}\n */\nresolveColorName(value: string = ''): string {\n        return value.replace(/\\s+/g, '-').toLowerCase();\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Document, decorators: [{ type: Inject, args: [DOCUMENT, ] }, ]},\n];\n}\n\nfunction ColorService_tsickle_Closure_declarations() {\n/** @type {?} */\nColorService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nColorService.ctorParameters;\n/** @type {?} */\nColorService.prototype._html;\n/** @type {?} */\nColorService.prototype._element;\n/** @type {?} */\nColorService.prototype._colors;\n/** @type {?} */\nColorService.prototype._colorSet;\n}\n\nexport class ThemeColor {\nprivate _r: string;\nprivate _g: string;\nprivate _b: string;\nprivate _a: string;\n/**\n * @param {?} r\n * @param {?} g\n * @param {?} b\n * @param {?} a\n */\nconstructor(r: string, g: string, b: string, a: string) {\n        this._r = r;\n        this._g = g;\n        this._b = b;\n        this._a = a === undefined ? '1' : a;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nstatic parse(value: string): ThemeColor {\n        let /** @type {?} */ r, /** @type {?} */ g, /** @type {?} */ b, /** @type {?} */ a = '1';\n\n        const /** @type {?} */ rgbaPattern = /^rgba?\\((\\d+),\\s*(\\d+),\\s*(\\d+)(?:,\\s*(\\d+(?:\\.\\d+)?))?\\)$/;\n        const /** @type {?} */ shortHexPattern = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;\n        const /** @type {?} */ longHexPattern = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/;\n\n        const /** @type {?} */ rgbaMatch = value.match(rgbaPattern);\n        const /** @type {?} */ shortHexMatch = value.match(shortHexPattern);\n        const /** @type {?} */ longHexMatch = value.match(longHexPattern);\n\n        if (rgbaMatch) {\n            r = rgbaMatch[1];\n            g = rgbaMatch[2];\n            b = rgbaMatch[3];\n            a = rgbaMatch[4] ? rgbaMatch[4] : '1';\n        } else if (longHexMatch) {\n            r = parseInt(longHexMatch[1], 16).toString();\n            g = parseInt(longHexMatch[2], 16).toString();\n            b = parseInt(longHexMatch[3], 16).toString();\n        } else if (shortHexMatch) {\n            r = parseInt(shortHexMatch[1] + shortHexMatch[1], 16).toString();\n            g = parseInt(shortHexMatch[2] + shortHexMatch[2], 16).toString();\n            b = parseInt(shortHexMatch[3] + shortHexMatch[3], 16).toString();\n        } else {\n            throw new Error(`Cannot parse color - ${value} is not a valid color.`);\n        }\n        return new ThemeColor(r, g, b, a);\n    }\n/**\n * @return {?}\n */\ntoHex() {\n        let /** @type {?} */ red = parseInt(this._r).toString(16);\n        let /** @type {?} */ green = parseInt(this._g).toString(16);\n        let /** @type {?} */ blue = parseInt(this._b).toString(16);\n\n        if (red.length < 2) {\n            red = '0' + red;\n        }\n        if (green.length < 2) {\n            green = '0' + green;\n        }\n        if (blue.length < 2) {\n            blue = '0' + blue;\n        }\n\n        return '#' + red + green + blue;\n    }\n/**\n * @return {?}\n */\ntoRgb() {\n        return 'rgb(' + this._r + ', ' + this._g + ', ' + this._b + ')';\n    }\n/**\n * @return {?}\n */\ntoRgba() {\n        return 'rgba(' + this._r + ', ' + this._g + ', ' + this._b + ', ' + this._a + ')';\n    }\n/**\n * @return {?}\n */\ngetRed() {\n        return this._r;\n    }\n/**\n * @return {?}\n */\ngetGreen() {\n        return this._g;\n    }\n/**\n * @return {?}\n */\ngetBlue() {\n        return this._b;\n    }\n/**\n * @return {?}\n */\ngetAlpha() {\n        return this._a;\n    }\n/**\n * @param {?} red\n * @return {?}\n */\nsetRed(red: string) {\n        this._r = red;\n        return this;\n    }\n/**\n * @param {?} green\n * @return {?}\n */\nsetGreen(green: string) {\n        this._g = green;\n        return this;\n    }\n/**\n * @param {?} blue\n * @return {?}\n */\nsetBlue(blue: string) {\n        this._b = blue;\n        return this;\n    }\n/**\n * @param {?} alpha\n * @return {?}\n */\nsetAlpha(alpha: string | number) {\n        this._a = alpha.toString();\n        return this;\n    }\n}\n\nfunction ThemeColor_tsickle_Closure_declarations() {\n/** @type {?} */\nThemeColor.prototype._r;\n/** @type {?} */\nThemeColor.prototype._g;\n/** @type {?} */\nThemeColor.prototype._b;\n/** @type {?} */\nThemeColor.prototype._a;\n}\n\n\nexport const /** @type {?} */ colorSets = {\n    keppel: {\n        colorClassSet: {\n            'primary': 'primary',\n            'accent': 'accent',\n            'secondary': 'secondary',\n            'alternate1': 'alternate1',\n            'alternate2': 'alternate2',\n            'alternate3': 'alternate3',\n            'vibrant1': 'vibrant1',\n            'vibrant2': 'vibrant2',\n            'grey1': 'grey1',\n            'grey2': 'grey2',\n            'grey3': 'grey3',\n            'grey4': 'grey4',\n            'grey5': 'grey5',\n            'grey6': 'grey6',\n            'grey7': 'grey7',\n            'grey8': 'grey8',\n            'chart1': 'chart1',\n            'chart2': 'chart2',\n            'chart3': 'chart3',\n            'chart4': 'chart4',\n            'chart5': 'chart5',\n            'chart6': 'chart6',\n            'ok': 'ok',\n            'warning': 'warning',\n            'critical': 'critical',\n            'partition1': 'partition1',\n            'partition9': 'partition9',\n            'partition10': 'partition10',\n            'partition11': 'partition11',\n            'partition12': 'partition12',\n            'partition13': 'partition13',\n            'partition14': 'partition14',\n            'social-chart-node': 'social-chart-node',\n            'social-chart-edge': 'social-chart-edge'\n        }\n    },\n    microFocus: {\n        'colorValueSet': {\n            'cerulean': '#1668c1',\n            'aqua': '#29ceff',\n            'aquamarine': '#2fd6c3',\n            'fuchsia': '#c6179d',\n            'indigo': '#7425ad',\n            'dark-blue': '#231ca5',\n            'white': '#ffffff',\n            'slightly-gray': '#f5f7f8',\n            'bright-gray': '#f1f2f3',\n            'gray': '#dcdedf',\n            'silver': '#bdbec0',\n            'dim-gray': '#656668',\n            'dark-gray': '#323435',\n            'black': '#000000',\n            'crimson-negative': '#e5004c',\n            'apricot': '#f48b34',\n            'yellow': '#fcdb1f',\n            'green-positive': '#1aac60',\n            'ultramarine': '#3939c6',\n            'skyblue': '#00abf3',\n            'pale-aqua': '#43e4ff',\n            'pale-green': '#1ffbba',\n            'lime': '#75da4d',\n            'orange': '#ffce00',\n            'magenta': '#eb23c2',\n            'pale-purple': '#ba47e2',\n            'dark-ultramarine': '#271782',\n            'steelblue': '#014272',\n            'arctic-blue': '#0b8eac',\n            'emerald': '#00a989',\n            'olive': '#5bba36',\n            'goldenrod': '#ffb000',\n            'purple': '#9b1e83',\n            'pale-eggplant': '#5216ac',\n            'red': '#ff454f',\n            'pale-amber': '#ffb24d',\n            'pale-lemon': '#fde159',\n            'pale-emerald': '#33c180',\n            'plum': '#b21646',\n            'copper': '#e57828',\n            'amber': '#ffc002',\n            'leaf-green': '#118c4f',\n            'forest-green': '#00645a',\n            'primary': '#0073e7',\n            'accent': '#7425ad',\n            'secondary': '#ffffff',\n            'alternate1': '#29ceff',\n            'alternate2': '#2fd6c3',\n            'alternate3': '#c6179d',\n            'vibrant1': '#43e4ff',\n            'vibrant2': '#ffce00',\n            'grey1': '#000000',\n            'grey2': '#323435',\n            'grey3': '#656668',\n            'grey4': '#bdbec0',\n            'grey5': '#dcdedf',\n            'grey6': '#f1f2f3',\n            'grey7': '#f5f7f8',\n            'grey8': '#ffffff',\n            'chart1': '#3939c6',\n            'chart2': '#00abf3',\n            'chart3': '#75da4d',\n            'chart4': '#ffce00',\n            'chart5': '#eb23c2',\n            'chart6': '#ba47e2',\n            'ok': '#1aac60',\n            'warning': '#f48b34',\n            'critical': 'e5004c',\n            'partition1': '#7425ad',\n            'partition9': '#5216ac',\n            'partition10': '#5bba36',\n            'partition11': '#014272',\n            'partition12': '#ffb000',\n            'partition13': '#bdbec0',\n            'partition14': '#271782',\n            'social-chart-node': '#ff00ff',\n            'social-chart-edge': '#ff00ff'\n        }\n    }\n};\n\nexport interface ThemeColors {\n    [name: string]: ThemeColor;\n}\n\nexport interface ColorSet {\n    colorClassSet?: ColorClassSet;\n    colorValueSet?: ColorValueSet;\n}\n\nexport interface ColorClassSet {\n    [name: string]: string;\n}\n\nexport interface ColorValueSet {\n    [name: string]: string;\n}\n\nexport type ColorIdentifier = string;\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { NavigationComponent } from './navigation.component';\nimport { NavigationItemComponent } from './navigation-item/navigation-item.component';\nexport class NavigationModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        CommonModule,\n        RouterModule\n    ],\n    exports: [\n        NavigationComponent,\n        NavigationItemComponent\n    ],\n    declarations: [\n        NavigationComponent,\n        NavigationItemComponent\n    ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction NavigationModule_tsickle_Closure_declarations() {\n/** @type {?} */\nNavigationModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNavigationModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { ActivatedRoute, NavigationEnd, Router, RouterState, UrlTree } from '@angular/router';\nimport { AfterContentInit, AfterViewInit, Component, ContentChildren, ElementRef, Input, OnDestroy, Optional, QueryList, Renderer2, SkipSelf, HostBinding } from '@angular/core';\nimport { filter } from 'rxjs/operators/filter';\nimport { Subscription } from 'rxjs/Subscription';\nexport class NavigationItemComponent implements AfterViewInit, AfterContentInit, OnDestroy {\n\n     header: string;\n     icon: string;\n     link: string;\n      expanded: boolean = false;\n/**\n * @return {?}\n */\nget active(): boolean {\n        if (this.link) {\n            return this._router.isActive(this.link, true);\n        }\n    }\n\n    level: number = 1;\n    indentWithoutArrow: boolean = true;\nprivate _navigationEnd: Subscription;\nprivate _childrenChanges: Subscription;\nprivate _children: QueryList<NavigationItemComponent>;\n/**\n * @return {?}\n */\nget children(): NavigationItemComponent[] {\n        return this._children.filter(item => item !== this);\n    }\n/**\n * @param {?} _elementRef\n * @param {?} _renderer\n * @param {?} _parent\n * @param {?} _router\n * @param {?} _activatedRoute\n */\nconstructor(\nprivate _elementRef: ElementRef,\nprivate _renderer: Renderer2,\nprivate _parent: NavigationItemComponent,\nprivate _router: Router,\nprivate _activatedRoute: ActivatedRoute\n    ) {\n        this.level = _parent ? _parent.level + 1 : 1;\n\n        this._navigationEnd = _router.events.pipe(filter(event => event instanceof NavigationEnd))\n            .subscribe(() => this.expanded = this.hasActiveLink(this.link));\n    }\n/**\n * @return {?}\n */\nngAfterViewInit(): void {\n        // Add classes to parent for styling\n        const /** @type {?} */ parentListElement = this._elementRef.nativeElement.parentElement;\n        if (parentListElement) {\n            const /** @type {?} */ levelClass: string = this.getLevelClass();\n            if (levelClass.length > 0) {\n                this._renderer.addClass(parentListElement, 'nav');\n                this._renderer.addClass(parentListElement, levelClass);\n            }\n        }\n    }\n/**\n * @return {?}\n */\nngAfterContentInit(): void {\n        // Set 'indentWithoutArrow'\n        this.setIndentWithoutArrow();\n\n        // Update 'indentWithoutArrow' in response to changes to children\n        this._childrenChanges = this._children.changes.subscribe(() => this.setIndentWithoutArrow());\n    }\n/**\n * @return {?}\n */\nngOnDestroy(): void {\n        this._navigationEnd.unsubscribe();\n        this._childrenChanges.unsubscribe();\n    }\n/**\n * @param {?} link\n * @return {?}\n */\nprivate hasActiveLink(link: string | UrlTree): boolean {\n\n        const /** @type {?} */ tree = this._router.createUrlTree([link], {\n            relativeTo: this._activatedRoute,\n            queryParams: this._activatedRoute.snapshot.queryParams,\n            fragment: this._activatedRoute.snapshot.fragment\n        });\n\n        if (link && this._router.isActive(tree, true)) {\n            return true;\n        }\n\n        // If this component has children, check if any of them, or their descendants, are active.\n        return this.children.some((item) => item.hasActiveLink(item.link));\n    }\n/**\n * @return {?}\n */\nprivate getLevelClass(): string {\n        switch (this.level) {\n            case 2:\n                return 'nav-second-level';\n            case 3:\n                return 'nav-third-level';\n            case 4:\n                return 'nav-fourth-level';\n            case 5:\n                return 'nav-fifth-level';\n        }\n\n        return '';\n    }\n/**\n * @return {?}\n */\nprivate setIndentWithoutArrow(): void {\n        if (this.children.length > 0) {\n            // If this element has children it will be indented and will have an arrow\n            this.indentWithoutArrow = false;\n        } else if (this._parent) {\n           // If this element has a parent, indent it if any of its siblings have children\n            this.indentWithoutArrow = !this._parent.children.every((item) => item.children.length === 0);\n        } else {\n            // Top-level elements should be indented\n            this.indentWithoutArrow = true;\n        }\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: '[ux-navigation-item]',\n    template: `\n      <a *ngIf=\"link\" [class.has-arrow]=\"children.length > 0\" [class.no-arrow]=\"indentWithoutArrow\" [routerLink]=\"link\">\n          <span>{{header}}</span>\n      </a>\n      <a *ngIf=\"!link\" (click)=\"expanded = !expanded\" [class.has-arrow]=\"children.length > 0\" [class.no-arrow]=\"indentWithoutArrow\">\n          <span>{{header}}</span>\n      </a>\n      <ng-content></ng-content>\n    `,\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Renderer2, },\n{type: NavigationItemComponent, decorators: [{ type: Optional }, { type: SkipSelf }, ]},\n{type: Router, },\n{type: ActivatedRoute, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'header': [{ type: Input },],\n'icon': [{ type: Input },],\n'link': [{ type: Input },],\n'expanded': [{ type: Input },{ type: HostBinding, args: ['class.selected', ] },],\n'active': [{ type: HostBinding, args: ['class.active', ] },],\n'_children': [{ type: ContentChildren, args: [NavigationItemComponent, { descendants: true }, ] },],\n};\n}\n\nfunction NavigationItemComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nNavigationItemComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNavigationItemComponent.ctorParameters;\n/** @type {?} */\nNavigationItemComponent.propDecorators;\n/** @type {?} */\nNavigationItemComponent.prototype.header;\n/** @type {?} */\nNavigationItemComponent.prototype.icon;\n/** @type {?} */\nNavigationItemComponent.prototype.link;\n/** @type {?} */\nNavigationItemComponent.prototype.expanded;\n/** @type {?} */\nNavigationItemComponent.prototype.level;\n/** @type {?} */\nNavigationItemComponent.prototype.indentWithoutArrow;\n/** @type {?} */\nNavigationItemComponent.prototype._navigationEnd;\n/** @type {?} */\nNavigationItemComponent.prototype._childrenChanges;\n/** @type {?} */\nNavigationItemComponent.prototype._children;\n/** @type {?} */\nNavigationItemComponent.prototype._elementRef;\n/** @type {?} */\nNavigationItemComponent.prototype._renderer;\n/** @type {?} */\nNavigationItemComponent.prototype._parent;\n/** @type {?} */\nNavigationItemComponent.prototype._router;\n/** @type {?} */\nNavigationItemComponent.prototype._activatedRoute;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Input } from '@angular/core';\nexport class NavigationComponent {\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-navigation',\n    template: `\n      <nav class=\"tree\" role=\"navigation\">\n          <ol class=\"nav\">\n              <ng-content></ng-content>\n          </ol>\n      </nav>\n    `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction NavigationComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nNavigationComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNavigationComponent.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { WizardModule } from '../wizard/index';\nimport { MarqueeWizardComponent } from './marquee-wizard.component';\nimport { MarqueeWizardStepComponent } from './marquee-wizard-step.component';\nimport { TooltipModule } from '../tooltip/index';\nexport class MarqueeWizardModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        CommonModule,\n        WizardModule,\n        TooltipModule\n    ],\n    exports: [\n        MarqueeWizardComponent,\n        MarqueeWizardStepComponent\n    ],\n    declarations: [\n        MarqueeWizardComponent,\n        MarqueeWizardStepComponent\n    ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction MarqueeWizardModule_tsickle_Closure_declarations() {\n/** @type {?} */\nMarqueeWizardModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMarqueeWizardModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Input, ContentChildren, QueryList, TemplateRef } from '@angular/core';\nimport { filter } from 'rxjs/operators/filter';\n\nimport { WizardComponent } from '../wizard/index';\nimport { MarqueeWizardStepComponent } from './marquee-wizard-step.component';\nimport { MarqueeWizardService, MarqueeWizardValidEvent } from './marquee-wizard.service';\nexport class MarqueeWizardComponent extends WizardComponent {\n\n     description: string | TemplateRef<any>;\n     steps = new QueryList<MarqueeWizardStepComponent>();\n/**\n * @return {?}\n */\nget isTemplate(): boolean {\n        return this.description && this.description instanceof TemplateRef;\n    }\n/**\n * @param {?} marqueeWizardService\n */\nconstructor(marqueeWizardService: MarqueeWizardService) {\n        super();\n\n        marqueeWizardService.valid$.pipe(\n            filter((event: MarqueeWizardValidEvent) => !event.valid)\n        ).subscribe(this.validChange.bind(this));\n    }\n/**\n * If the current step is valid, mark it as\n * complete and go to the next step\n * @return {?}\n */\nnext(): void {\n\n        // get the current step\n        const /** @type {?} */ step = /** @type {?} */(( this.getCurrentStep() as MarqueeWizardStepComponent));\n\n        if (step.valid) {\n            super.next();\n\n            // mark this step as completed\n            step.setCompleted(true);\n        }\n    }\n/**\n * Emit the onFinishing event and if valid the onFinish event.\n * Also mark the final step as completed if it is valid\n * @return {?}\n */\nfinish(): Promise<void> {\n\n        // get the current step\n        const /** @type {?} */ step = /** @type {?} */(( this.getCurrentStep() as MarqueeWizardStepComponent));\n\n        // call the original finish function\n        return super.finish().then(() => {\n            // if the step is valid indicate that it is now complete\n            if (step.valid) {\n                step.setCompleted(true);\n            }\n        });\n    }\n/**\n * If a step in the wizard becomes invalid, all steps sequentially after\n * it, should become unvisited and incomplete\n * @param {?} state\n * @return {?}\n */\nvalidChange(state: MarqueeWizardValidEvent): void {\n        \n        const /** @type {?} */ steps = this.steps.toArray();\n        const /** @type {?} */ current = steps.findIndex(step => step === state.step);\n        const /** @type {?} */ affected = steps.slice(current);\n\n        affected.forEach(step => {\n\n            // the step should no longer be completed\n            step.completed = false;\n\n            // if the step is not the current step then also mark it as unvisited\n            if (step !== state.step) {\n                step.visited = false;\n            }\n        });\n\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-marquee-wizard',\n    template: `\n      <div class=\"marquee-wizard-side-panel\">\n\n          <div class=\"marquee-wizard-description-container\" *ngIf=\"description\">\n              <!-- If a template was provided display it -->\n              <ng-container *ngIf=\"isTemplate\" [ngTemplateOutlet]=\"description\"></ng-container>\n\n              <!-- Otherwise wimply display the string -->\n              <ng-container *ngIf=\"!isTemplate\">\n                  <p>{{ description }}</p>\n              </ng-container>\n          </div>\n\n          <ul class=\"marquee-wizard-steps\">\n\n              <li class=\"marquee-wizard-step\" *ngFor=\"let step of steps\" (click)=\"gotoStep(step)\" [class.active]=\"step.active\" [class.visited]=\"step.visited\" [class.invalid]=\"!step.valid\">\n                  <i class=\"marquee-wizard-step-icon\" [ngClass]=\"step.icon\"></i>\n                  <span class=\"marquee-wizard-step-title\">{{ step.header }}</span>\n                  <span class=\"marquee-wizard-step-status hpe-icon hpe-checkmark\" *ngIf=\"step.completed\"></span>\n              </li>\n\n          </ul>\n      </div>\n\n      <div class=\"marquee-wizard-content-panel\">\n          <div class=\"marquee-wizard-content\">\n              <ng-content></ng-content>\n          </div>\n\n          <div class=\"modal-footer\">\n\n              <button #tip=\"ux-tooltip\" class=\"btn button-secondary\" *ngIf=\"previousVisible\" [uxTooltip]=\"previousTooltip\" container=\"body\"\n                  [disabled]=\"previousDisabled || step === 0\" (click)=\"previous(); tip.hide()\">{{ previousText }}</button>\n\n              <button #tip=\"ux-tooltip\" class=\"btn button-primary\" *ngIf=\"nextVisible && !isLastStep()\" [uxTooltip]=\"nextTooltip\" container=\"body\"\n                  [disabled]=\"nextDisabled\" (click)=\"next(); tip.hide()\">{{ nextText }}</button>\n\n              <button #tip=\"ux-tooltip\" class=\"btn button-primary\" *ngIf=\"finishVisible && isLastStep() || finishAlwaysVisible\" [uxTooltip]=\"finishTooltip\"\n                  container=\"body\" [disabled]=\"finishDisabled\" (click)=\"finish(); tip.hide()\">{{ finishText }}</button>\n\n              <button #tip=\"ux-tooltip\" class=\"btn button-secondary\" *ngIf=\"cancelVisible && !isLastStep() || cancelAlwaysVisible\" [uxTooltip]=\"cancelTooltip\"\n                  container=\"body\" [disabled]=\"cancelDisabled\" (click)=\"cancel(); tip.hide()\">{{ cancelText }}</button>\n          </div>\n      </div>\n    `,\n    providers: [ MarqueeWizardService ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: MarqueeWizardService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'description': [{ type: Input },],\n'steps': [{ type: ContentChildren, args: [MarqueeWizardStepComponent, ] },],\n};\n}\n\nfunction MarqueeWizardComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nMarqueeWizardComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMarqueeWizardComponent.ctorParameters;\n/** @type {?} */\nMarqueeWizardComponent.propDecorators;\n/** @type {?} */\nMarqueeWizardComponent.prototype.description;\n/** @type {?} */\nMarqueeWizardComponent.prototype.steps;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { WizardStepComponent } from '../wizard/index';\nimport { MarqueeWizardService } from './marquee-wizard.service';\nexport class MarqueeWizardStepComponent extends WizardStepComponent {\n\n     icon: string;\n     completed: boolean = false;\n     completedChange = new EventEmitter<boolean>();\n/**\n * @return {?}\n */\nget valid(): boolean {\n        return this._valid;\n    }\n/**\n * @param {?} valid\n * @return {?}\n */\nset valid(valid: boolean) {\n        this._valid = valid;\n\n        if (this._marqueeWizardService) {\n            this._marqueeWizardService.valid$.next({ step: this, valid: valid });\n        }\n    }\nprivate _valid: boolean = true;\n/**\n * @param {?} _marqueeWizardService\n */\nconstructor(private _marqueeWizardService: MarqueeWizardService) {\n        super();\n    }\n/**\n * Update the completed state and emit the latest value\n * @param {?} completed whether or not the step is completed\n * @return {?}\n */\nsetCompleted(completed: boolean): void {\n        this.completed = completed;\n        this.completedChange.emit(completed);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-marquee-wizard-step',\n    template: `\n      <ng-container *ngIf=\"active\">\n          <ng-content></ng-content>\n      </ng-container>\n    `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: MarqueeWizardService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'icon': [{ type: Input },],\n'completed': [{ type: Input },],\n'completedChange': [{ type: Output },],\n};\n}\n\nfunction MarqueeWizardStepComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nMarqueeWizardStepComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMarqueeWizardStepComponent.ctorParameters;\n/** @type {?} */\nMarqueeWizardStepComponent.propDecorators;\n/** @type {?} */\nMarqueeWizardStepComponent.prototype.icon;\n/** @type {?} */\nMarqueeWizardStepComponent.prototype.completed;\n/** @type {?} */\nMarqueeWizardStepComponent.prototype.completedChange;\n/** @type {?} */\nMarqueeWizardStepComponent.prototype._valid;\n/** @type {?} */\nMarqueeWizardStepComponent.prototype._marqueeWizardService;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs/Subject';\nimport { MarqueeWizardStepComponent } from './marquee-wizard-step.component';\n/**\n * This service is required to provide a form of communication\n * between the marquee wizard steps and the containing marquee wizard.\n * We cannot inject the Host due to the steps being content children \n * rather than view children.\n */\nexport class MarqueeWizardService {\n    valid$ = new Subject<MarqueeWizardValidEvent>();\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction MarqueeWizardService_tsickle_Closure_declarations() {\n/** @type {?} */\nMarqueeWizardService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMarqueeWizardService.ctorParameters;\n/** @type {?} */\nMarqueeWizardService.prototype.valid$;\n}\n\n\nexport interface MarqueeWizardValidEvent {\n    step: MarqueeWizardStepComponent;\n    valid: boolean;\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { WizardComponent } from './wizard.component';\nimport { WizardStepComponent } from './wizard-step.component';\nimport { TooltipModule } from '../tooltip/index';\n\nconst /** @type {?} */ DECLARATIONS = [\n    WizardComponent,\n    WizardStepComponent\n];\nexport class WizardModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        CommonModule,\n        TooltipModule\n    ],\n    exports: DECLARATIONS,\n    declarations: DECLARATIONS\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction WizardModule_tsickle_Closure_declarations() {\n/** @type {?} */\nWizardModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nWizardModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { AfterViewInit, Component, ContentChildren, EventEmitter, Input, Output, QueryList } from '@angular/core';\nimport { WizardStepComponent } from './wizard-step.component';\nexport class WizardComponent implements AfterViewInit {\nprivate _step: number = 0;\n\n     steps = new QueryList<WizardStepComponent>();\n\n     orientation: 'horizontal' | 'vertical' = 'horizontal';\n\n     nextText: string = 'Next';\n     previousText: string = 'Previous';\n     cancelText: string = 'Cancel';\n     finishText: string = 'Finish';\n\n     nextTooltip: string = 'Go to the next step';\n     previousTooltip: string = 'Go to the previous step';\n     cancelTooltip: string = 'Cancel the wizard';\n     finishTooltip: string = 'Finish the wizard';\n\n     nextDisabled: boolean = false;\n     previousDisabled: boolean = false;\n     cancelDisabled: boolean = false;\n     finishDisabled: boolean = false;\n\n     nextVisible: boolean = true;\n     previousVisible: boolean = true;\n     cancelVisible: boolean = true;\n     finishVisible: boolean = true;\n     cancelAlwaysVisible: boolean = false;\n     finishAlwaysVisible: boolean = false;\n\n     onNext = new EventEmitter<number>();\n     onPrevious = new EventEmitter<number>();\n     onCancel = new EventEmitter<void>();\n     onFinishing = new EventEmitter<void>();\n     onFinish = new EventEmitter<void>();\n     stepChanging = new EventEmitter<StepChangingEvent>();\n     stepChange = new EventEmitter<number>();\n\n    invalidIndicator: boolean = false;\n/**\n * @return {?}\n */\nget step() {\n        return this._step;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset step(value: number) {\n\n        // only accept numbers as valid options\n        if (typeof value === 'number') {\n\n            // store the active step\n            this._step = value;\n\n            // update which steps should be active\n            this.update();\n\n            // emit the change event\n            this.stepChange.next(this.step);\n\n            // reset the invalid state\n            this.invalidIndicator = false;\n        }\n    }\n/**\n * @return {?}\n */\nngAfterViewInit(): void {\n\n        // initially set the correct visibility of the steps\n        setTimeout(this.update.bind(this));\n    }\n/**\n * Navigate to the next step\n * @return {?}\n */\nnext(): void {\n\n        this.stepChanging.next(new StepChangingEvent(this.step, this.step + 1));\n\n        // check if current step is invalid\n        if (!this.getCurrentStep().valid) {\n            this.invalidIndicator = true;\n            return;\n        }\n\n        // check if we are currently on the last step\n        if ((this.step + 1) < this.steps.length) {\n            this.step++;\n\n            // emit the current step\n            this.onNext.next(this.step);\n        }\n    }\n/**\n * Navigate to the previous step\n * @return {?}\n */\nprevious(): void {\n\n        this.stepChanging.next(new StepChangingEvent(this.step, this.step - 1));\n\n        // check if we are currently on the last step\n        if (this.step > 0) {\n            this.step--;\n\n            // emit the current step\n            this.onPrevious.next(this.step);\n        }\n    }\n/**\n * Perform actions when the finish button is clicked\n * @return {?}\n */\nfinish(): Promise<void> {\n\n        // fires when the finish button is clicked always\n        this.onFinishing.next();\n\n        /**\n         * This is required because we need to ensure change detection has run\n         * to determine whether or not we have the latest value for the 'valid' input\n         * on the current step. Unfortunately we can't use ChangeDetectorRef as we are looking to run\n         * on content children, and we cant use ApplicationRef.tick() as this does not work in a hybrid app, eg. our docs\n         */\n        return new Promise<void>(resolve => {\n            setTimeout(() => {\n\n                // only fires when the finish button is clicked and the step is valid\n                if (this.getCurrentStep().valid) {\n                    this.onFinish.next();        \n                }\n\n                resolve();\n            });\n        });\n    }\n/**\n * Perform actions when the cancel button is clicked\n * @return {?}\n */\ncancel(): void {\n        this.onCancel.next();\n    }\n/**\n * Update the active state of each step\n * @return {?}\n */\nupdate(): void {\n        // update which steps should be active\n        this.steps.forEach((step, idx) => step.active = idx === this.step);\n    }\n/**\n * Jump to a specific step only if the step has previously been visited\n * @param {?} step\n * @return {?}\n */\ngotoStep(step: WizardStepComponent): void {\n        if (step.visited) {\n\n            const /** @type {?} */ stepIndex = this.steps.toArray().findIndex(stp => stp === step);\n\n            this.stepChanging.next(new StepChangingEvent(this.step, stepIndex));\n\n            this.step = stepIndex;\n        }\n    }\n/**\n * Determine if the current step is the last step\n * @return {?}\n */\nisLastStep(): boolean {\n        return this.step === (this.steps.length - 1);\n    }\n/**\n * Reset the wizard - goes to first step and resets visited state\n * @return {?}\n */\nreset(): void {\n\n        // mark all steps as not visited\n        this.steps.forEach(step => step.visited = false);\n\n        // go to the first step\n        this.step = 0;\n    }\n/**\n * Get the step at the current index\n * @return {?}\n */\ngetCurrentStep(): WizardStepComponent {\n        return this.getStepAtIndex(this.step);\n    }\n/**\n * Return a step at a specific index\n * @param {?} index\n * @return {?}\n */\ngetStepAtIndex(index: number): WizardStepComponent {\n        return this.steps.toArray()[index];\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-wizard',\n    template: `\n      <div class=\"wizard-body\">\n\n          <div class=\"wizard-steps\">\n\n              <div class=\"wizard-step\" [class.active]=\"stp.active\" [class.visited]=\"stp.visited\" [class.invalid]=\"stp.active && !stp.valid && invalidIndicator\" (click)=\"gotoStep(stp)\" *ngFor=\"let stp of steps\">\n                  {{ stp.header }}\n              </div>\n\n          </div>\n\n          <div class=\"wizard-content\">\n              <ng-content></ng-content>\n          </div>\n\n      </div>\n\n      <div class=\"wizard-footer\">\n          <button #tip=\"ux-tooltip\" class=\"btn button-secondary\" *ngIf=\"previousVisible\" [uxTooltip]=\"previousTooltip\" [disabled]=\"previousDisabled || step === 0\"\n              (click)=\"previous(); tip.hide()\">{{ previousText }}</button>\n\n          <button #tip=\"ux-tooltip\" class=\"btn button-primary\" *ngIf=\"nextVisible && !isLastStep()\" [uxTooltip]=\"nextTooltip\" [disabled]=\"nextDisabled\"\n              (click)=\"next(); tip.hide()\">{{ nextText }}</button>\n\n          <button #tip=\"ux-tooltip\" class=\"btn button-primary\" *ngIf=\"finishVisible && isLastStep() || finishAlwaysVisible\" [uxTooltip]=\"finishTooltip\"\n              [disabled]=\"finishDisabled\" (click)=\"finish(); tip.hide()\">{{ finishText }}</button>\n\n          <button #tip=\"ux-tooltip\" class=\"btn button-secondary\" *ngIf=\"cancelVisible && !isLastStep() || cancelAlwaysVisible\" [uxTooltip]=\"cancelTooltip\"\n              [disabled]=\"cancelDisabled\" (click)=\"cancel(); tip.hide()\">{{ cancelText }}</button>\n      </div>\n    `,\n    host: {\n        '[class]': 'orientation'\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'steps': [{ type: ContentChildren, args: [WizardStepComponent, ] },],\n'orientation': [{ type: Input },],\n'nextText': [{ type: Input },],\n'previousText': [{ type: Input },],\n'cancelText': [{ type: Input },],\n'finishText': [{ type: Input },],\n'nextTooltip': [{ type: Input },],\n'previousTooltip': [{ type: Input },],\n'cancelTooltip': [{ type: Input },],\n'finishTooltip': [{ type: Input },],\n'nextDisabled': [{ type: Input },],\n'previousDisabled': [{ type: Input },],\n'cancelDisabled': [{ type: Input },],\n'finishDisabled': [{ type: Input },],\n'nextVisible': [{ type: Input },],\n'previousVisible': [{ type: Input },],\n'cancelVisible': [{ type: Input },],\n'finishVisible': [{ type: Input },],\n'cancelAlwaysVisible': [{ type: Input },],\n'finishAlwaysVisible': [{ type: Input },],\n'onNext': [{ type: Output },],\n'onPrevious': [{ type: Output },],\n'onCancel': [{ type: Output },],\n'onFinishing': [{ type: Output },],\n'onFinish': [{ type: Output },],\n'stepChanging': [{ type: Output },],\n'stepChange': [{ type: Output },],\n'step': [{ type: Input },],\n};\n}\n\nfunction WizardComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nWizardComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nWizardComponent.ctorParameters;\n/** @type {?} */\nWizardComponent.propDecorators;\n/** @type {?} */\nWizardComponent.prototype._step;\n/** @type {?} */\nWizardComponent.prototype.steps;\n/** @type {?} */\nWizardComponent.prototype.orientation;\n/** @type {?} */\nWizardComponent.prototype.nextText;\n/** @type {?} */\nWizardComponent.prototype.previousText;\n/** @type {?} */\nWizardComponent.prototype.cancelText;\n/** @type {?} */\nWizardComponent.prototype.finishText;\n/** @type {?} */\nWizardComponent.prototype.nextTooltip;\n/** @type {?} */\nWizardComponent.prototype.previousTooltip;\n/** @type {?} */\nWizardComponent.prototype.cancelTooltip;\n/** @type {?} */\nWizardComponent.prototype.finishTooltip;\n/** @type {?} */\nWizardComponent.prototype.nextDisabled;\n/** @type {?} */\nWizardComponent.prototype.previousDisabled;\n/** @type {?} */\nWizardComponent.prototype.cancelDisabled;\n/** @type {?} */\nWizardComponent.prototype.finishDisabled;\n/** @type {?} */\nWizardComponent.prototype.nextVisible;\n/** @type {?} */\nWizardComponent.prototype.previousVisible;\n/** @type {?} */\nWizardComponent.prototype.cancelVisible;\n/** @type {?} */\nWizardComponent.prototype.finishVisible;\n/** @type {?} */\nWizardComponent.prototype.cancelAlwaysVisible;\n/** @type {?} */\nWizardComponent.prototype.finishAlwaysVisible;\n/** @type {?} */\nWizardComponent.prototype.onNext;\n/** @type {?} */\nWizardComponent.prototype.onPrevious;\n/** @type {?} */\nWizardComponent.prototype.onCancel;\n/** @type {?} */\nWizardComponent.prototype.onFinishing;\n/** @type {?} */\nWizardComponent.prototype.onFinish;\n/** @type {?} */\nWizardComponent.prototype.stepChanging;\n/** @type {?} */\nWizardComponent.prototype.stepChange;\n/** @type {?} */\nWizardComponent.prototype.invalidIndicator;\n}\n\nexport class StepChangingEvent {\n/**\n * @param {?} from\n * @param {?} to\n */\nconstructor(public from: number,\npublic to: number) { }\n}\n\nfunction StepChangingEvent_tsickle_Closure_declarations() {\n/** @type {?} */\nStepChangingEvent.prototype.from;\n/** @type {?} */\nStepChangingEvent.prototype.to;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Input, EventEmitter } from '@angular/core';\nexport class WizardStepComponent {\n    \n     header: string;\n     valid: boolean = true;\n     visitedChange = new EventEmitter<boolean>();\nprivate _active: boolean = false;\nprivate _visited: boolean = false;\n/**\n * @return {?}\n */\nget visited(): boolean {\n        return this._visited;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset visited(value: boolean) {\n        this._visited = value;\n        this.visitedChange.next(value);\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset active(value: boolean) {\n        \n        // store the active state of the step\n        this._active = value;\n\n        // if the value is true then the step should also be marked as visited\n        if (value === true) {\n            this.visited = true;\n        }\n    }\n/**\n * @return {?}\n */\nget active(): boolean {\n        return this._active;\n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-wizard-step',\n    template: `\n      <ng-container *ngIf=\"active\">\n          <ng-content></ng-content>\n      </ng-container>\n    `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'header': [{ type: Input },],\n'valid': [{ type: Input },],\n'visitedChange': [{ type: Input },],\n'visited': [{ type: Input },],\n};\n}\n\nfunction WizardStepComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nWizardStepComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nWizardStepComponent.ctorParameters;\n/** @type {?} */\nWizardStepComponent.propDecorators;\n/** @type {?} */\nWizardStepComponent.prototype.header;\n/** @type {?} */\nWizardStepComponent.prototype.valid;\n/** @type {?} */\nWizardStepComponent.prototype.visitedChange;\n/** @type {?} */\nWizardStepComponent.prototype._active;\n/** @type {?} */\nWizardStepComponent.prototype._visited;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ItemDisplayPanelComponent, ItemDisplayPanelContentDirective, ItemDisplayPanelFooterDirective } from './item-display-panel.component';\n\nconst /** @type {?} */ DECLARATIONS = [\n    ItemDisplayPanelComponent,\n    ItemDisplayPanelContentDirective,\n    ItemDisplayPanelFooterDirective\n];\nexport class ItemDisplayPanelModule {static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        CommonModule\n    ],\n    exports: DECLARATIONS,\n    declarations: DECLARATIONS\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ItemDisplayPanelModule_tsickle_Closure_declarations() {\n/** @type {?} */\nItemDisplayPanelModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nItemDisplayPanelModule.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Directive, Input, Output, EventEmitter, ContentChild, ElementRef } from '@angular/core';\nimport { Subscription } from 'rxjs/Subscription';\nimport { SidePanelComponent } from '../side-panel/side-panel.component';\nimport { SidePanelService } from '../side-panel/side-panel.service';\nexport class ItemDisplayPanelContentDirective { static decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: '[uxItemDisplayPanelContent]'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ItemDisplayPanelContentDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nItemDisplayPanelContentDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nItemDisplayPanelContentDirective.ctorParameters;\n}\n\nexport class ItemDisplayPanelFooterDirective { static decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: '[uxItemDisplayPanelFooter]'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ItemDisplayPanelFooterDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nItemDisplayPanelFooterDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nItemDisplayPanelFooterDirective.ctorParameters;\n}\n\nexport class ItemDisplayPanelComponent extends SidePanelComponent {\n\n     header: string;\n\n     boxShadow: boolean = true;\n\n     closeVisible: boolean = true;\n/**\n * @return {?}\n */\nget preventClose(): boolean {\n        return !this.closeOnExternalClick;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset preventClose(value: boolean) {\n        this.closeOnExternalClick = !value;\n    }\n\n     shadow: boolean = false;\n\n     footer: ItemDisplayPanelFooterDirective;\n\n     visibleChange: EventEmitter<boolean> = new EventEmitter<boolean>();\n/**\n * @deprecated \n * Title used for adding tooltips and shouldn't be used as an input\n * instead header will be used. This is here to support backward compatibility only\n * this property should not be used.\n * @param {?} value\n * @return {?}\n */\nset title(value: string) {\n        this.header = value;\n    }\n/**\n * @return {?}\n */\nget title() {\n        return this.header;\n    }\n/**\n * @param {?} visible\n * @return {?}\n */\nset visible(visible: boolean) {\n        this.open = visible;\n    }\n/**\n * @return {?}\n */\nget visible() {\n        return this.open;\n    }\nprivate _itemDisplayPanelSubscription: Subscription;\n/**\n * @param {?} service\n * @param {?} elementRef\n */\nconstructor(service: SidePanelService, elementRef: ElementRef) {\n        super(service, elementRef);\n\n        this.animate = false;\n        this.closeOnExternalClick = true;\n    }\n/**\n * @return {?}\n */\nngOnInit() {\n        this._itemDisplayPanelSubscription = this.service.open$.subscribe((next) => {\n            this.visibleChange.emit(next);\n        });\n    }\n/**\n * @return {?}\n */\nngOnDestroy() {\n        this._itemDisplayPanelSubscription.unsubscribe();\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-item-display-panel',\n    template: `\n      <div class=\"ux-side-panel-host ux-item-display-panel\"\n          [class.box-shadow]=\"boxShadow\"\n          [style.position]=\"position\"\n          [style.width]=\"hostWidth\"\n          [style.top]=\"cssTop\">\n\n          <div class=\"ux-side-panel-header\" [class.item-display-panel-shadow]=\"shadow\">\n              <h3>{{ header }}</h3>\n              <button *ngIf=\"closeVisible\" type=\"button\" class=\"btn btn-lg btn-link btn-icon button-secondary\" (click)=\"visible = false\">\n                  <i class=\"hpe-icon hpe-close\"></i>\n              </button>\n          </div>\n\n          <div class=\"ux-side-panel-content\">\n              <ng-content select=\"[uxItemDisplayPanelContent]\"></ng-content>\n          </div>\n\n          <div class=\"ux-side-panel-footer\" *ngIf=\"footer\">\n              <ng-content select=\"[uxItemDisplayPanelFooter]\"></ng-content>\n          </div>\n\n      </div>\n    `,\n    providers: [SidePanelService],\n    host: {\n        'class': 'ux-side-panel ux-item-display-panel'\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: SidePanelService, },\n{type: ElementRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'header': [{ type: Input },],\n'boxShadow': [{ type: Input },],\n'closeVisible': [{ type: Input },],\n'preventClose': [{ type: Input },],\n'shadow': [{ type: Input },],\n'footer': [{ type: ContentChild, args: [ItemDisplayPanelFooterDirective, ] },],\n'visibleChange': [{ type: Output },],\n'title': [{ type: Input },],\n'visible': [{ type: Input },],\n};\n}\n\nfunction ItemDisplayPanelComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nItemDisplayPanelComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nItemDisplayPanelComponent.ctorParameters;\n/** @type {?} */\nItemDisplayPanelComponent.propDecorators;\n/** @type {?} */\nItemDisplayPanelComponent.prototype.header;\n/** @type {?} */\nItemDisplayPanelComponent.prototype.boxShadow;\n/** @type {?} */\nItemDisplayPanelComponent.prototype.closeVisible;\n/** @type {?} */\nItemDisplayPanelComponent.prototype.shadow;\n/** @type {?} */\nItemDisplayPanelComponent.prototype.footer;\n/** @type {?} */\nItemDisplayPanelComponent.prototype.visibleChange;\n/** @type {?} */\nItemDisplayPanelComponent.prototype._itemDisplayPanelSubscription;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, OnInit, Input, Output, EventEmitter, OnDestroy, HostBinding, HostListener, ElementRef } from '@angular/core';\nimport { Subscription } from 'rxjs/Subscription';\nimport { SidePanelService } from './side-panel.service';\nexport class SidePanelComponent implements OnInit, OnDestroy {\n/**\n * @return {?}\n */\nget open(): boolean {\n        return this.service.open$.value;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset open(value: boolean) {\n        this.service.open$.next(value);\n    }\n\n    \n    \n    inline = false;\n\n    \n    attachTo: 'window' | 'container' = 'window';\n\n    \n    width: string | number = '50%';\n\n    \n    top: string | number = '0';\n\n    \n    \n    modal = false;\n\n    \n    \n    animate = false;\n\n    \n    closeOnExternalClick = false;\n\n    \n    openChange = new EventEmitter<boolean>();\n/**\n * @return {?}\n */\nget position() {\n        if (this.inline) {\n            return 'static';\n        }\n        if (this.attachTo === 'container') {\n            return 'absolute';\n        }\n        return 'fixed';\n    }\n/**\n * @return {?}\n */\nget cssWidth(): string {\n        if (typeof this.width === 'number') {\n            return this.width === 0 ? '0' : this.width + 'px';\n        }\n        return this.width;\n    }\n/**\n * @return {?}\n */\nget cssTop(): string {\n        if (typeof this.top === 'number') {\n            return this.top === 0 ? '0' : this.top + 'px';\n        }\n        return this.top;\n    }\n/**\n * @return {?}\n */\nget componentWidth(): string {\n        if (this.inline) {\n            return this.open ? this.cssWidth : '0';\n        }\n        return null;\n    }\n/**\n * @return {?}\n */\nget hostWidth() {\n        return this.inline ? '100%' : this.cssWidth;\n    }\nprivate _subscription: Subscription;\n/**\n * @param {?} service\n * @param {?} _elementRef\n */\nconstructor(\n        protected service: SidePanelService,\nprivate _elementRef: ElementRef\n    ) { }\n/**\n * @return {?}\n */\nngOnInit() {\n        this._subscription = this.service.open$.subscribe((next) => {\n            this.openChange.emit(next);\n        });\n    }\n/**\n * @return {?}\n */\nngOnDestroy() {\n        this._subscription.unsubscribe();\n    }\n/**\n * @return {?}\n */\nopenPanel() {\n        this.service.open();\n    }\n/**\n * @return {?}\n */\nclosePanel() {\n        this.service.close();\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nclickHandler(event: MouseEvent) {\n        if (!this.open || !this.closeOnExternalClick) {\n            return;\n        }\n\n        const /** @type {?} */ target = /** @type {?} */(( event.target as HTMLElement));\n\n        if (!this._elementRef.nativeElement.contains(target) ||\n            (target && target.classList.contains('modal-backdrop'))) {\n            this.closePanel();\n        }\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-side-panel',\n    exportAs: 'ux-side-panel',\n    template: `\n      <div *ngIf=\"modal && open\" class=\"modal-backdrop\"\n          [style.position]=\"position\"\n          [style.top]=\"cssTop\"></div>\n\n      <div class=\"ux-side-panel-host\"\n          [class.modal-panel]=\"modal\"\n          [style.position]=\"position\"\n          [style.width]=\"hostWidth\"\n          [style.top]=\"cssTop\">\n          <ng-content></ng-content>\n      </div>\n    `,\n    providers: [SidePanelService],\n    host: {\n        'class': 'ux-side-panel'\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: SidePanelService, },\n{type: ElementRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'open': [{ type: Input },{ type: HostBinding, args: ['class.open', ] },],\n'inline': [{ type: Input },{ type: HostBinding, args: ['class.inline', ] },],\n'attachTo': [{ type: Input },],\n'width': [{ type: Input },],\n'top': [{ type: Input },],\n'modal': [{ type: Input },{ type: HostBinding, args: ['attr.aria-modal', ] },],\n'animate': [{ type: Input },{ type: HostBinding, args: ['class.animate', ] },],\n'closeOnExternalClick': [{ type: Input },],\n'openChange': [{ type: Output },],\n'componentWidth': [{ type: HostBinding, args: ['style.width', ] },],\n'closePanel': [{ type: HostListener, args: ['document:keyup.escape', ] },],\n'clickHandler': [{ type: HostListener, args: ['document:click', ['$event'], ] },],\n};\n}\n\nfunction SidePanelComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nSidePanelComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSidePanelComponent.ctorParameters;\n/** @type {?} */\nSidePanelComponent.propDecorators;\n/** @type {?} */\nSidePanelComponent.prototype.inline;\n/** @type {?} */\nSidePanelComponent.prototype.attachTo;\n/** @type {?} */\nSidePanelComponent.prototype.width;\n/** @type {?} */\nSidePanelComponent.prototype.top;\n/** @type {?} */\nSidePanelComponent.prototype.modal;\n/** @type {?} */\nSidePanelComponent.prototype.animate;\n/** @type {?} */\nSidePanelComponent.prototype.closeOnExternalClick;\n/** @type {?} */\nSidePanelComponent.prototype.openChange;\n/** @type {?} */\nSidePanelComponent.prototype._subscription;\n/** @type {?} */\nSidePanelComponent.prototype.service;\n/** @type {?} */\nSidePanelComponent.prototype._elementRef;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nexport class SidePanelService {\n\n    open$ = new BehaviorSubject<boolean>(false);\n/**\n * @return {?}\n */\nopen() {\n        this.open$.next(true);\n    }\n/**\n * @return {?}\n */\nclose() {\n        this.open$.next(false);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction SidePanelService_tsickle_Closure_declarations() {\n/** @type {?} */\nSidePanelService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSidePanelService.ctorParameters;\n/** @type {?} */\nSidePanelService.prototype.open$;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FocusIfModule } from '../../directives/focus-if/index';\nimport { ResizeModule } from '../../directives/resize/index';\nimport { HierarchyBarComponent } from './hierarchy-bar.component';\nimport { PopoverModule } from '../popover/index';\nexport class HierarchyBarModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        CommonModule,\n        ResizeModule,\n        FocusIfModule,\n        PopoverModule\n    ],\n    exports: [HierarchyBarComponent],\n    declarations: [HierarchyBarComponent],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction HierarchyBarModule_tsickle_Closure_declarations() {\n/** @type {?} */\nHierarchyBarModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nHierarchyBarModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { ObserversModule } from '@angular/cdk/observers';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ClickOutsideModule } from '../../directives/click-outside/index';\nimport { TooltipModule } from '../tooltip/index';\nimport { PopoverComponent } from './popover.component';\nimport { PopoverDirective } from './popover.directive';\nexport class PopoverModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  imports: [\n    CommonModule,\n    OverlayModule,\n    ObserversModule,\n    ClickOutsideModule,\n    TooltipModule\n  ],\n  exports: [PopoverDirective],\n  declarations: [PopoverComponent, PopoverDirective],\n  entryComponents: [PopoverComponent]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction PopoverModule_tsickle_Closure_declarations() {\n/** @type {?} */\nPopoverModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nPopoverModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { ESCAPE } from '@angular/cdk/keycodes';\nimport { OverlayRef } from '@angular/cdk/overlay';\nimport { ComponentPortal } from '@angular/cdk/portal';\nimport { Directive, HostBinding, Input, OnChanges, OnInit, SimpleChanges, TemplateRef } from '@angular/core';\nimport { fromEvent } from 'rxjs/observable/fromEvent';\nimport { takeUntil } from 'rxjs/operators';\nimport { TooltipDirective } from '../tooltip/index';\nimport { PopoverComponent } from './popover.component';\nexport class PopoverDirective extends TooltipDirective implements OnInit, OnChanges {\n/**\n * Contains the content of the popover or a TemplateRef for more detailed content\n */\ncontent: string | TemplateRef<any>;\n/**\n * Optionally display a title in the popover\n */\ntitle: string;\n/**\n * Allow the popover to be conditionally disabled\n */\ndisabled: boolean;\n/**\n * All the user to add a custom class to the popover\n */\ncustomClass: string = '';\n/**\n * All the user to add a role to the popover - default is tooltip\n */\nrole: string = 'tooltip';\n/**\n * Provide the TemplateRef a context object\n */\ncontext: any = {};\n/**\n * Delay the showing of the popover by a number of miliseconds\n */\ndelay: number = 0;\n/**\n * Specify which events should show the popover\n */\nshowTriggers: string[] = ['click'];\n/**\n * Specify which events should hide the popover\n */\nhideTriggers: string[] = ['click', 'clickoutside', 'escape'];\n/**\n * Keep track of the tooltip visibility and update aria-expanded attribute\n */\nisVisible: boolean = false;\n/**\n * A reference to the CDK portal containing the overlay\n */\nprotected _portal: ComponentPortal<PopoverComponent>;\n/**\n * A reference to the instance of the popover component when created\n */\nprotected _instance: PopoverComponent;\n/**\n * Determine whether or not an aria-describedby property originally existed on the element\n */\nprivate _ariaDescribedBy: boolean;\n/**\n * Internally store the type of this component - usual for distinctions when extending the tooltip class\n */\nprotected _type: string = 'popover';\n/**\n * Set up the triggers and bind to the show/hide events to keep visibility in sync\n * @return {?}\n */\nngOnInit(): void {\n\n        // set up the event triggers\n        fromEvent(document, 'keydown').pipe(takeUntil(this._onDestroy)).subscribe(this.onKeyDown.bind(this));\n\n        // check if there is an aria-described by attribute\n        this._ariaDescribedBy = this._elementRef.nativeElement.hasAttribute('aria-describedby');\n\n        // set up the default event triggers\n        super.ngOnInit();\n    }\n/**\n * We need to send input changes to the popover component\n * We can't use setters as they may trigger before popover initialised and can't resend once initialised\n * \n * @param {?} changes\n * @return {?}\n */\nngOnChanges(changes: SimpleChanges): void {\n        super.ngOnChanges(changes);\n\n        if (this._instance && changes.title) {\n            this._instance.setTitle(changes.title.currentValue);\n        }\n    }\n/**\n * @param {?} overlayRef\n * @return {?}\n */\nprotected createInstance(overlayRef: OverlayRef): PopoverComponent {\n        const /** @type {?} */ instance = /** @type {?} */(( overlayRef.attach(this._portal).instance as PopoverComponent));\n\n        // supply the tooltip with the correct properties\n        instance.setTitle(this.title);\n        instance.setContent(this.content);\n        instance.setPlacement(this.placement);\n        instance.setClass(this.customClass);\n        instance.setContext(this.context);\n        instance.setRole(this.role);\n\n        // Update the aria-describedby attribute\n        this.setAriaDescribedBy(instance.id);\n\n        // subscribe to the outside click event\n        instance.clickOutside$.pipe(takeUntil(this._onDestroy)).subscribe(this.onClickOutside.bind(this));\n\n        return instance;\n    }\n/**\n * @return {?}\n */\nprotected createPortal(): ComponentPortal<PopoverComponent> {\n        return this._portal || new ComponentPortal(PopoverComponent, this._viewContainerRef);\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nprivate onKeyDown(event: KeyboardEvent): void {\n\n        // if visible and the escape key is pressed and it is one of the hide triggers\n        if (this.isVisible && event.keyCode === ESCAPE && this.includes(this.hideTriggers, 'escape')) {\n            this.hide();\n        }\n    }\n/**\n * @return {?}\n */\nprivate onClickOutside(): void {\n        // if visible and it is one of the hide triggers\n        if (this.isVisible && this.includes(this.hideTriggers, 'clickoutside')) {\n            this.hide();\n        }\n    }\n/**\n * Programmatically update the aria-describedby property\n * @param {?} id\n * @return {?}\n */\nprotected setAriaDescribedBy(id: string | null): void {\n\n        // we only want to set the aria-describedby attr when the content is a string and there was no user defined attribute already\n        if (this._ariaDescribedBy === false && typeof this.content === 'string') {\n            super.setAriaDescribedBy(id);\n        }\n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: '[uxPopover]',\n    exportAs: 'ux-popover'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'content': [{ type: Input, args: ['uxPopover', ] },],\n'title': [{ type: Input, args: ['popoverTitle', ] },],\n'disabled': [{ type: Input, args: ['popoverDisabled', ] },],\n'customClass': [{ type: Input, args: ['popoverClass', ] },],\n'role': [{ type: Input, args: ['popoverRole', ] },],\n'context': [{ type: Input, args: ['popoverContext', ] },],\n'delay': [{ type: Input, args: ['popoverDelay', ] },],\n'showTriggers': [{ type: Input },],\n'hideTriggers': [{ type: Input },],\n'isVisible': [{ type: HostBinding, args: ['attr.aria-expanded', ] },],\n};\n}\n\nfunction PopoverDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nPopoverDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nPopoverDirective.ctorParameters;\n/** @type {?} */\nPopoverDirective.propDecorators;\n/**\n * Contains the content of the popover or a TemplateRef for more detailed content\n * @type {?}\n */\nPopoverDirective.prototype.content;\n/**\n * Optionally display a title in the popover\n * @type {?}\n */\nPopoverDirective.prototype.title;\n/**\n * Allow the popover to be conditionally disabled\n * @type {?}\n */\nPopoverDirective.prototype.disabled;\n/**\n * All the user to add a custom class to the popover\n * @type {?}\n */\nPopoverDirective.prototype.customClass;\n/**\n * All the user to add a role to the popover - default is tooltip\n * @type {?}\n */\nPopoverDirective.prototype.role;\n/**\n * Provide the TemplateRef a context object\n * @type {?}\n */\nPopoverDirective.prototype.context;\n/**\n * Delay the showing of the popover by a number of miliseconds\n * @type {?}\n */\nPopoverDirective.prototype.delay;\n/**\n * Specify which events should show the popover\n * @type {?}\n */\nPopoverDirective.prototype.showTriggers;\n/**\n * Specify which events should hide the popover\n * @type {?}\n */\nPopoverDirective.prototype.hideTriggers;\n/**\n * Keep track of the tooltip visibility and update aria-expanded attribute\n * @type {?}\n */\nPopoverDirective.prototype.isVisible;\n/**\n * A reference to the CDK portal containing the overlay\n * @type {?}\n */\nPopoverDirective.prototype._portal;\n/**\n * A reference to the instance of the popover component when created\n * @type {?}\n */\nPopoverDirective.prototype._instance;\n/**\n * Determine whether or not an aria-describedby property originally existed on the element\n * @type {?}\n */\nPopoverDirective.prototype._ariaDescribedBy;\n/**\n * Internally store the type of this component - usual for distinctions when extending the tooltip class\n * @type {?}\n */\nPopoverDirective.prototype._type;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { Subject } from 'rxjs/Subject';\nimport { TooltipComponent } from '../tooltip/index';\n\nlet /** @type {?} */ uniquePopoverId = 0;\nexport class PopoverComponent extends TooltipComponent {\n/**\n * Define a unique id for each popover\n */\nid: string = `ux-popover-${++uniquePopoverId}`;\n/**\n * If specified allows the popover to show a title\n */\ntitle: string;\n/**\n * This will emit an event any time the user clicks outside the popover\n */\nclickOutside$ = new Subject<MouseEvent>();\n/**\n * This will update the title of the popover and trigger change detection\n * @param {?} title\n * @return {?}\n */\nsetTitle(title: string): void {\n    this.title = title;\n    this._changeDetectorRef.markForCheck();\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'ux-popover',\n  template: `\n    <div class=\"popover show\" [ngClass]=\"[placement, customClass]\" [id]=\"id\" [attr.role]=\"role\" (uxClickOutside)=\"clickOutside$.next($event)\">\n        <div class=\"arrow\"></div>\n        <h3 class=\"popover-title\" *ngIf=\"title\">{{ title }}</h3>\n        <div class=\"popover-content\" (cdkObserveContent)=\"reposition()\">\n            <ng-container *ngIf=\"!isTemplateRef\">{{ content }}</ng-container>\n            <ng-container *ngIf=\"isTemplateRef\" [ngTemplateOutlet]=\"content\" [ngTemplateOutletContext]=\"context\"></ng-container>\n        </div>\n    </div>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction PopoverComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nPopoverComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nPopoverComponent.ctorParameters;\n/**\n * Define a unique id for each popover\n * @type {?}\n */\nPopoverComponent.prototype.id;\n/**\n * If specified allows the popover to show a title\n * @type {?}\n */\nPopoverComponent.prototype.title;\n/**\n * This will emit an event any time the user clicks outside the popover\n * @type {?}\n */\nPopoverComponent.prototype.clickOutside$;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { ClickOutsideDirective } from './click-outside.directive';\nexport class ClickOutsideModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    exports: [ClickOutsideDirective],\n    declarations: [ClickOutsideDirective]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ClickOutsideModule_tsickle_Closure_declarations() {\n/** @type {?} */\nClickOutsideModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nClickOutsideModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, Output, EventEmitter, ElementRef, HostListener } from '@angular/core';\nexport class ClickOutsideDirective {\n\n     uxClickOutside = new EventEmitter<MouseEvent>();\n/**\n * @param {?} _elementRef\n */\nconstructor(private _elementRef: ElementRef) { }\n/**\n * @param {?} event\n * @return {?}\n */\nclick(event: MouseEvent): void {\n        if (this._elementRef.nativeElement !== event.target && !this._elementRef.nativeElement.contains(event.target)) {\n            this.uxClickOutside.emit(event);\n        }\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{ \n    selector: '[uxClickOutside]'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'uxClickOutside': [{ type: Output },],\n'click': [{ type: HostListener, args: ['document:click', ['$event'], ] },],\n};\n}\n\nfunction ClickOutsideDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nClickOutsideDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nClickOutsideDirective.ctorParameters;\n/** @type {?} */\nClickOutsideDirective.propDecorators;\n/** @type {?} */\nClickOutsideDirective.prototype.uxClickOutside;\n/** @type {?} */\nClickOutsideDirective.prototype._elementRef;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, EventEmitter, Input, OnDestroy, Output, QueryList, TemplateRef, ViewChild, ViewChildren } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { Subscription } from 'rxjs/Subscription';\nimport { debounceTime } from 'rxjs/operators';\nimport { HierarchyBarNode, HierarchyBarService } from './hierarchy-bar.service';\nexport class HierarchyBarComponent implements OnDestroy {\n/**\n * @param {?} node\n * @return {?}\n */\nset root(node: HierarchyBarNode) {\n        this.hierarchyBar.setRootNode(node);\n    }\n/**\n * @param {?} node\n * @return {?}\n */\nset selected(node: HierarchyBarNode) {\n        this.hierarchyBar.selectNode(node);\n    }\n\n     loadingIndicator: TemplateRef<any>;\n\n     selectedChange = new EventEmitter<HierarchyBarNode>();\n     nodelist: ElementRef;\n     nodes: QueryList<ElementRef>;\n\n    overflow$ = new BehaviorSubject<boolean>(false);\n    overflowNodes$ = new BehaviorSubject<HierarchyBarNode[]>([]);\nprivate _subscription = new Subscription();\n/**\n * @param {?} hierarchyBar\n */\nconstructor(public hierarchyBar: HierarchyBarService) {\n\n        // subscribe to changes in the selected node\n        const selected = hierarchyBar.nodes$.subscribe(nodes => this.selectedChange.emit(nodes.length === 0 ? null : nodes[nodes.length - 1]));\n        const changed = hierarchyBar.nodes$.pipe(debounceTime(0)).subscribe(() => this.scrollIntoView());\n\n        // store subscriptions\n        this._subscription.add(selected);\n        this._subscription.add(changed);\n    }\n/**\n * @return {?}\n */\nngOnDestroy(): void {\n        this._subscription.unsubscribe();\n    }\n/**\n * When there is overflow ensure that the rightmost\n * node remains in view at all times. The nodes no longer\n * visible be be displayed in a popover available on the\n * overflow indicator\n * @return {?}\n */\nscrollIntoView(): void {\n\n        if (!this.nodelist) {\n            return;\n        }\n\n        // get the native element\n        const { nativeElement } = this.nodelist;\n\n        // emit whether or not there is overflow\n        this.overflow$.next(nativeElement.scrollWidth > nativeElement.offsetWidth);\n\n        // if the hierarchy bar contents do not overflow then do nothing\n        if (nativeElement.scrollWidth > nativeElement.offsetWidth) {\n\n            // determine the amount of overflow\n            const /** @type {?} */ overflowAmount = nativeElement.scrollWidth - nativeElement.offsetWidth;\n\n            // determine which nodes are not fully visible\n            this.overflowNodes$.next(\n                this.nodes.filter(node => node.nativeElement.offsetLeft < overflowAmount)\n                    .map((node, index) => this.hierarchyBar.nodes$.value[index])\n            );\n\n            // move the scroll position to always show the last itme\n            this.nodelist.nativeElement.scrollLeft = overflowAmount;\n        }\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-hierarchy-bar',\n    template: `\n      <!-- Allow content to be placed on the left of the items -->\n      <aside class=\"hierarchy-bar-addons\">\n          <ng-content select=\"[uxHierarchyBarLeftAddon]\"></ng-content>\n      </aside>\n\n      <main #nodelist class=\"hierarchy-bar-nodes\" (uxResize)=\"scrollIntoView()\">\n\n          <div *ngIf=\"overflow$ | async\"\n               #popover=\"ux-popover\"\n               class=\"hierarchy-bar-overflow-indicator\"\n               [style.left.px]=\"nodelist.scrollLeft\"\n               [uxPopover]=\"overflow\"\n               [popoverContext]=\"{ popover: popover }\"\n               placement=\"bottom\"\n               popoverClass=\"hierarchy-bar-popover\">\n              . . .\n          </div>\n\n          <div #nodeElement class=\"hierarchy-bar-node\"\n               *ngFor=\"let node of hierarchyBar.nodes$ | async\">\n\n              <button class=\"hierarchy-bar-node-content\"\n                      [attr.aria-label]=\"node.title\"\n                      (click)=\"hierarchyBar.selectNode(node)\">\n\n                  <!-- Show an icon if specifed -->\n                  <img class=\"hierarchy-bar-node-icon\" *ngIf=\"node.icon\" [src]=\"node.icon\" alt=\"Hierarchy Bar Icon\">\n\n                  <!-- Show the name of the current node -->\n                  <span class=\"hierarchy-bar-node-title\">{{ node.title }}</span>\n\n              </button>\n\n              <!-- Show a dropdown arrow if there are children -->\n              <button *ngIf=\"node.children\"\n                    #popover=\"ux-popover\"\n                    aria-label=\"Show children\"\n                    role=\"button\"\n                    class=\"hierarchy-bar-node-arrow hpe-icon hpe-next\"\n                    [uxPopover]=\"content\"\n                    [popoverContext]=\"{ node: node, popover: popover }\"\n                    placement=\"bottom\"\n                    popoverClass=\"hierarchy-bar-popover\"\n                    tabindex=\"0\">\n              </button>\n\n          </div>\n\n      </main>\n\n      <!-- Allow content to be placed on the right of the items -->\n      <aside class=\"hierarchy-bar-addons\">\n          <ng-content select=\"[uxHierarchyBarRightAddon]\"></ng-content>\n      </aside>\n\n      <!-- Template for the popover list -->\n      <ng-template #content let-node=\"node\" let-popover=\"popover\">\n\n          <!-- Loading Indicator -->\n          <ul class=\"hierarchy-bar-node-list\" *ngIf=\"(hierarchyBar.getChildren(node) | async).loading\">\n\n              <li class=\"hierarchy-bar-node-list-item\">\n                  <ng-container [ngTemplateOutlet]=\"loadingIndicator || defaultLoadingIndicator\"></ng-container>\n              </li>\n          </ul>\n\n          <!-- List of children -->\n          <ul class=\"hierarchy-bar-node-list\" *ngIf=\"!(hierarchyBar.getChildren(node) | async).loading\">\n\n              <li *ngFor=\"let child of (hierarchyBar.getChildren(node) | async).children; let first = first\"\n                  class=\"hierarchy-bar-node-list-item\"\n                  [focusIf]=\"first\"\n                  tabindex=\"0\"\n                  (keydown.enter)=\"hierarchyBar.selectNode(child); popover.hide()\"\n                  (click)=\"hierarchyBar.selectNode(child); popover.hide()\">\n\n                  <!-- Show an icon if specifed -->\n                  <img class=\"hierarchy-bar-node-icon\" *ngIf=\"child.icon\" [src]=\"child.icon\" alt=\"Hierarchy Bar Icon\">\n\n                  <!-- Show the name of the current node -->\n                  <span class=\"hierarchy-bar-node-title\">{{ child.title }}</span>\n\n              </li>\n\n          </ul>\n      </ng-template>\n\n      <!-- Template for the overflow popover list -->\n      <ng-template #overflow let-popover=\"popover\">\n\n          <ul class=\"hierarchy-bar-node-list\">\n\n              <li *ngFor=\"let child of overflowNodes$ | async; let first = first\"\n                  class=\"hierarchy-bar-node-list-item\"\n                  tabindex=\"0\"\n                  [focusIf]=\"first\"\n                  (click)=\"hierarchyBar.selectNode(child); popover.hide()\"\n                  (keydown.enter)=\"hierarchyBar.selectNode(child); popover.hide()\">\n\n                  <!-- Show an icon if specifed -->\n                  <img class=\"hierarchy-bar-node-icon\" *ngIf=\"child.icon\" [src]=\"child.icon\" alt=\"Hierarchy Bar Icon\">\n\n                  <!-- Show the name of the current node -->\n                  <span class=\"hierarchy-bar-node-title\">{{ child.title }}</span>\n\n              </li>\n\n          </ul>\n      </ng-template>\n\n      <!-- Loading Indicator Template -->\n      <ng-template #defaultLoadingIndicator>\n          <div class=\"hierarchy-bar-node-icon\" alt=\"Hierarchy Bar Loading Indicator\">\n              <div class=\"spinner spinner-accent spinner-bounce-middle\"></div>\n          </div>\n\n          <!-- Show the name of the current node -->\n          <span class=\"hierarchy-bar-node-title\">Loading...</span>\n      </ng-template>\n    `,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    viewProviders: [HierarchyBarService]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: HierarchyBarService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'root': [{ type: Input },],\n'selected': [{ type: Input },],\n'loadingIndicator': [{ type: Input },],\n'selectedChange': [{ type: Output },],\n'nodelist': [{ type: ViewChild, args: ['nodelist', ] },],\n'nodes': [{ type: ViewChildren, args: ['nodeElement', ] },],\n};\n}\n\nfunction HierarchyBarComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nHierarchyBarComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nHierarchyBarComponent.ctorParameters;\n/** @type {?} */\nHierarchyBarComponent.propDecorators;\n/** @type {?} */\nHierarchyBarComponent.prototype.loadingIndicator;\n/** @type {?} */\nHierarchyBarComponent.prototype.selectedChange;\n/** @type {?} */\nHierarchyBarComponent.prototype.nodelist;\n/** @type {?} */\nHierarchyBarComponent.prototype.nodes;\n/** @type {?} */\nHierarchyBarComponent.prototype.overflow$;\n/** @type {?} */\nHierarchyBarComponent.prototype.overflowNodes$;\n/** @type {?} */\nHierarchyBarComponent.prototype._subscription;\n/** @type {?} */\nHierarchyBarComponent.prototype.hierarchyBar;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { Observable } from 'rxjs/Observable';\nimport { Observer } from 'rxjs/Observer';\nimport { of } from 'rxjs/observable/of';\nimport { first } from 'rxjs/operators';\nexport class HierarchyBarService {\n\n    nodes$ = new BehaviorSubject<HierarchyBarNode[]>([]);\nprivate _root: HierarchyBarNode;\nprivate _nodes: HierarchyBarNode[] = [];\n/**\n * Store the root node of the hierarchy tree\n * @param {?} root\n * @return {?}\n */\nsetRootNode(root: HierarchyBarNode) {\n\n        // store the root node\n        this._root = root;\n\n        // create a flat structure of nodes\n        this._nodes = this.getNodeList(root);\n\n        // flatten the array - based on the selected node\n        this.nodes$.next(this.getSelectedChildren(root));\n    }\n/**\n * Select a node. This causes all nodes to be\n * deselected and the path to the selected node\n * to be selected\n * @param {?} node\n * @return {?}\n */\nselectNode(node: HierarchyBarNode): void {\n\n        // deselect all nodes\n        this.deselectAll();\n\n        // ensure the current node is selected and its parents\n        this.select(node);\n\n        // emit a new node list to trigger change detection\n        this.nodes$.next(this.getSelectedChildren(this._root));\n    }\n/**\n * Handles getting children with support for both arrays and observables\n * @param {?} node\n * @return {?}\n */\ngetChildren(node: HierarchyBarNode): Observable<HierarchyBarNodeChildren> {\n\n        if (Array.isArray(node.children)) {\n            return of({ loading: false, children: node.children });\n        }\n\n        const /** @type {?} */ children$: Observable<HierarchyBarNode[]> = node.children;\n\n        // if it is an observable then handle loading\n        return Observable.create((observer: Observer<HierarchyBarNodeChildren>) => {\n            // emit initial value\n            observer.next({ loading: true, children: [] });\n\n            // now wait until the children observable completes\n            children$.pipe(first()).subscribe(children => {\n\n                // replace the observable with an array for future loading\n                node.children = children;\n\n                // rebuild the node tree\n                this.setRootNode(this._root);\n\n                // emit the latest value\n                observer.next({ loading: false, children: children });\n\n                // close the observable stream\n                observer.complete();\n            });\n        });\n    }\n/**\n * Traverses all the parents to ensure they are selected\n * @param {?} node\n * @return {?}\n */\nprivate select(node: HierarchyBarNode): void {\n        node.selected = true;\n\n        if (node.parent) {\n            this.select(node.parent);\n        }\n    }\n/**\n * Deselects all nodes\n * @return {?}\n */\nprivate deselectAll(): void {\n        this._nodes.forEach(node => node.selected = false);\n    }\n/**\n * Gets all the nodes in the tree as a flat array.\n * It also stores the parent node in a parent property\n * on the node for easy traversal in both directions\n * @param {?} node\n * @return {?}\n */\nprivate getNodeList(node: HierarchyBarNode): HierarchyBarNode[] {\n\n        // if there are no children then return only itself\n        if (!node.children || node.children instanceof Observable || node.children.length === 0) {\n            return [node];\n        }\n\n        // store the parent property\n        node.children.forEach(child => child.parent = node);\n\n        // get all descendants of this node\n        const /** @type {?} */ descendants = node.children.reduce<HierarchyBarNode[]>((nodes, current) => [...nodes, ...this.getNodeList(current)], []);\n\n        return [node, ...descendants];\n    }\n/**\n * Gets all selected nodes from the parent node.\n * @param {?} node\n * @return {?}\n */\nprivate getSelectedChildren(node: HierarchyBarNode): HierarchyBarNode[] {\n\n        if (node.children instanceof Observable) {\n            return [node];\n        }\n\n        // get the children - and account for when there is none\n        const /** @type {?} */ children = node.children || [];\n\n        // check if any child is selected\n        const /** @type {?} */ child = children.find(_child => _child.selected);\n\n        // return the remaining chain of selected items\n        return child ? [node, ...this.getSelectedChildren(child)] : [node];\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction HierarchyBarService_tsickle_Closure_declarations() {\n/** @type {?} */\nHierarchyBarService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nHierarchyBarService.ctorParameters;\n/** @type {?} */\nHierarchyBarService.prototype.nodes$;\n/** @type {?} */\nHierarchyBarService.prototype._root;\n/** @type {?} */\nHierarchyBarService.prototype._nodes;\n}\n\n\nexport interface HierarchyBarNode {\n    icon?: string;\n    title: string;\n    selected?: boolean;\n    parent?: HierarchyBarNode;\n    children?: HierarchyBarNode[] | Observable<HierarchyBarNode[]>;\n}\n\nexport interface HierarchyBarNodeChildren {\n    loading: boolean;\n    children: HierarchyBarNode[];\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FloatingActionButtonsComponent } from './floating-action-buttons.component';\nimport { FloatingActionButtonComponent } from './floating-action-button.component';\nexport class FloatingActionButtonsModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        CommonModule\n    ],\n    exports: [\n        FloatingActionButtonsComponent,\n        FloatingActionButtonComponent\n    ],\n    declarations: [\n        FloatingActionButtonsComponent,\n        FloatingActionButtonComponent\n    ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction FloatingActionButtonsModule_tsickle_Closure_declarations() {\n/** @type {?} */\nFloatingActionButtonsModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFloatingActionButtonsModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Input, ChangeDetectionStrategy, HostBinding, HostListener, Attribute } from '@angular/core';\nimport { FloatingActionButtonsService } from './floating-action-buttons.service';\nexport class FloatingActionButtonComponent {\n\n     icon: string;    \n     tabindex = 1;\n    \n    primary: boolean = false;\n/**\n * @param {?} primary\n * @param {?} fab\n */\nconstructor( primary: string,\npublic fab: FloatingActionButtonsService) {\n        this.primary = primary !== null;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-floating-action-button',\n    template: `\n      <button class=\"btn floating-action-button\" \n              [class.button-primary]=\"primary\" \n              [class.button-secondary]=\"!primary\" \n              (click)=\"primary ? fab.open() : fab.close()\">\n\n          <span class=\"hpe-icon floating-action-button-icon\" *ngIf=\"icon\" [ngClass]=\"icon\"></span>\n          <ng-content *ngIf=\"!icon\"></ng-content>\n\n      </button>\n    `,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    preserveWhitespaces: false\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: undefined, decorators: [{ type: Attribute, args: ['fab-primary', ] }, ]},\n{type: FloatingActionButtonsService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'icon': [{ type: Input },],\n'tabindex': [{ type: HostBinding },],\n};\n}\n\nfunction FloatingActionButtonComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nFloatingActionButtonComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFloatingActionButtonComponent.ctorParameters;\n/** @type {?} */\nFloatingActionButtonComponent.propDecorators;\n/** @type {?} */\nFloatingActionButtonComponent.prototype.icon;\n/** @type {?} */\nFloatingActionButtonComponent.prototype.tabindex;\n/** @type {?} */\nFloatingActionButtonComponent.prototype.primary;\n/** @type {?} */\nFloatingActionButtonComponent.prototype.fab;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Input, ChangeDetectionStrategy, HostListener, ElementRef, ContentChildren, QueryList, OnDestroy, AfterViewInit } from '@angular/core';\nimport { trigger, state, style, transition, animate, query, stagger } from '@angular/animations';\nimport { TooltipDirective } from 'ngx-bootstrap/tooltip';\nimport { Subscription } from 'rxjs/Subscription';\nimport { filter } from 'rxjs/operators/filter';\n\nimport { FloatingActionButtonComponent } from './floating-action-button.component';\nimport { FloatingActionButtonsService } from './floating-action-buttons.service';\nexport class FloatingActionButtonsComponent implements AfterViewInit, OnDestroy {\n\n     direction: FloatingActionButtonDirection = 'top';\n     tooltips: QueryList<TooltipDirective>;\nprivate _subscription: Subscription;\n/**\n * @param {?} fab\n * @param {?} _elementRef\n */\nconstructor(public fab: FloatingActionButtonsService,\nprivate _elementRef: ElementRef) { }\n/**\n * @return {?}\n */\nngAfterViewInit(): void {\n        this._subscription = this.fab.open$.pipe(filter(open => open === false))\n            .subscribe(() => this.tooltips.forEach(tooltip => tooltip.hide()));\n    }\n/**\n * @return {?}\n */\nngOnDestroy(): void {\n        this._subscription.unsubscribe();\n    }\n/**\n * @param {?} target\n * @return {?}\n */\nclose(target: HTMLElement): void {\n        if (!this._elementRef.nativeElement.contains(target)) {\n            this.fab.close();\n        }\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-floating-action-buttons',\n    template: `\n      <ng-content select=\"[fab-primary]\"></ng-content>\n\n      <div class=\"floating-action-button-list\" [@fabAnimation]=\"fab.open$ | async\" [ngClass]=\"direction\" *ngIf=\"fab.open$ | async\">\n          <ng-content></ng-content>\n      </div>\n    `,\n    providers: [FloatingActionButtonsService],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    preserveWhitespaces: false,\n    animations: [\n        trigger('fabAnimation', [\n            transition('void => true', [\n                query('ux-floating-action-button', style({ opacity: 0 })),\n                query('ux-floating-action-button', stagger(50, animate(250, style({ opacity: 1 }))))\n            ]),\n            transition('true => void', [\n                query('ux-floating-action-button', stagger(-50, animate(250, style({ opacity: 0 }))))\n            ])\n        ])\n    ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: FloatingActionButtonsService, },\n{type: ElementRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'direction': [{ type: Input },],\n'tooltips': [{ type: ContentChildren, args: [TooltipDirective, ] },],\n'close': [{ type: HostListener, args: ['document:click', ['$event.target'], ] },],\n};\n}\n\nfunction FloatingActionButtonsComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nFloatingActionButtonsComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFloatingActionButtonsComponent.ctorParameters;\n/** @type {?} */\nFloatingActionButtonsComponent.propDecorators;\n/** @type {?} */\nFloatingActionButtonsComponent.prototype.direction;\n/** @type {?} */\nFloatingActionButtonsComponent.prototype.tooltips;\n/** @type {?} */\nFloatingActionButtonsComponent.prototype._subscription;\n/** @type {?} */\nFloatingActionButtonsComponent.prototype.fab;\n/** @type {?} */\nFloatingActionButtonsComponent.prototype._elementRef;\n}\n\n\nexport type FloatingActionButtonDirection = 'top' | 'right' | 'bottom' | 'left';\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nexport class FloatingActionButtonsService {\n\n    open$ = new BehaviorSubject<boolean>(false);\n/**\n * @return {?}\n */\nopen(): void {\n        this.open$.next(true);\n    }\n/**\n * @return {?}\n */\ntoggle(): void {\n        this.open$.next(!this.open$.getValue());\n    }\n/**\n * @return {?}\n */\nclose(): void {\n        this.open$.next(false);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction FloatingActionButtonsService_tsickle_Closure_declarations() {\n/** @type {?} */\nFloatingActionButtonsService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFloatingActionButtonsService.ctorParameters;\n/** @type {?} */\nFloatingActionButtonsService.prototype.open$;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","// tslint:disable:deprecation\nimport {\n  Directive, ElementRef, EventEmitter, Input, OnDestroy, OnInit, Output,\n  Renderer2, TemplateRef, ViewContainerRef\n} from '@angular/core';\nimport { TooltipContainerComponent } from './tooltip-container.component';\nimport { TooltipConfig } from './tooltip.config';\nimport { ComponentLoader, ComponentLoaderFactory } from '../component-loader/index';\nimport { OnChange } from '../utils/decorators';\nimport { warnOnce } from '../utils/warn-once';\nimport { parseTriggers } from '../utils/triggers';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/observable/timer';\n\n\nexport class TooltipDirective implements OnInit, OnDestroy {\n  /**\n   * Content to be displayed as tooltip.\n   */\n  @OnChange()\n  \n  tooltip: string | TemplateRef<any>;\n  /** Fired when tooltip content changes */\n  \n  tooltipChange: EventEmitter<string | TemplateRef<any>> = new EventEmitter();\n\n  /**\n   * Placement of a tooltip. Accepts: \"top\", \"bottom\", \"left\", \"right\"\n   */\n   placement: string;\n  /**\n   * Specifies events that should trigger. Supports a space separated list of\n   * event names.\n   */\n   triggers: string;\n  /**\n   * A selector specifying the element the tooltip should be appended to.\n   * Currently only supports \"body\".\n   */\n   container: string;\n\n  /**\n   * Returns whether or not the tooltip is currently being shown\n   */\n  \n  get isOpen(): boolean {\n    return this._tooltip.isShown;\n  }\n\n  set isOpen(value: boolean) {\n    if (value) {\n      this.show();\n    } else {\n      this.hide();\n    }\n  }\n\n  /**\n   * Allows to disable tooltip\n   */\n   isDisabled: boolean;\n\n  /**\n   * Css class for tooltip container\n   */\n   containerClass = '';\n  /**\n   * Delay before showing the tooltip\n   */\n   delay: number;\n\n  /**\n   * Emits an event when the tooltip is shown\n   */\n   onShown: EventEmitter<any>;\n  /**\n   * Emits an event when the tooltip is hidden\n   */\n   onHidden: EventEmitter<any>;\n\n  /** @deprecated - please use `tooltip` instead */\n  \n  set htmlContent(value: string | TemplateRef<any>) {\n    warnOnce('tooltipHtml was deprecated, please use `tooltip` instead');\n    this.tooltip = value;\n  }\n\n  /** @deprecated - please use `placement` instead */\n  \n  set _placement(value: string) {\n    warnOnce('tooltipPlacement was deprecated, please use `placement` instead');\n    this.placement = value;\n  }\n\n  /** @deprecated - please use `isOpen` instead*/\n  \n  set _isOpen(value: boolean) {\n    warnOnce('tooltipIsOpen was deprecated, please use `isOpen` instead');\n    this.isOpen = value;\n  }\n\n  get _isOpen(): boolean {\n    warnOnce('tooltipIsOpen was deprecated, please use `isOpen` instead');\n    return this.isOpen;\n  }\n\n  /** @deprecated - please use `isDisabled` instead */\n  \n  set _enable(value: boolean) {\n    warnOnce('tooltipEnable was deprecated, please use `isDisabled` instead');\n    this.isDisabled = value;\n  }\n\n  get _enable(): boolean {\n    warnOnce('tooltipEnable was deprecated, please use `isDisabled` instead');\n    return this.isDisabled;\n  }\n\n  /** @deprecated - please use `container=\"body\"` instead */\n  \n  set _appendToBody(value: boolean) {\n    warnOnce(\n      'tooltipAppendToBody was deprecated, please use `container=\"body\"` instead'\n    );\n    this.container = value ? 'body' : this.container;\n  }\n\n  get _appendToBody(): boolean {\n    warnOnce(\n      'tooltipAppendToBody was deprecated, please use `container=\"body\"` instead'\n    );\n    return this.container === 'body';\n  }\n\n  /** @deprecated - removed, will be added to configuration */\n   _animation = true;\n\n  /** @deprecated - will replaced with customClass */\n  \n  set _popupClass(value: string) {\n    warnOnce('tooltipClass deprecated');\n  }\n\n  /** @deprecated - removed */\n  \n  set _tooltipContext(value: any) {\n    warnOnce('tooltipContext deprecated');\n  }\n\n  /** @deprecated */\n  \n  set _tooltipPopupDelay(value: number) {\n    warnOnce('tooltipPopupDelay is deprecated, use `delay` instead');\n    this.delay = value;\n  }\n\n  /** @deprecated */\n   _fadeDuration = 150;\n\n  /** @deprecated -  please use `triggers` instead */\n  \n  get _tooltipTrigger(): string | string[] {\n    warnOnce('tooltipTrigger was deprecated, please use `triggers` instead');\n    return this.triggers;\n  }\n\n  set _tooltipTrigger(value: string | string[]) {\n    warnOnce('tooltipTrigger was deprecated, please use `triggers` instead');\n    this.triggers = (value || '').toString();\n  }\n\n  /** @deprecated */\n  \n  tooltipStateChanged: EventEmitter<boolean> = new EventEmitter<boolean>();\n  protected _delayTimeoutId: number | any;\n  protected _tooltipCancelShowFn: Function;\n\n  private _tooltip: ComponentLoader<TooltipContainerComponent>;\n\n  constructor(_viewContainerRef: ViewContainerRef,\n                     private _renderer: Renderer2,\n                     private _elementRef: ElementRef,\n                     cis: ComponentLoaderFactory,\n                     config: TooltipConfig) {\n    this._tooltip = cis\n      .createLoader<TooltipContainerComponent>(\n        this._elementRef,\n        _viewContainerRef,\n        this._renderer\n      )\n      .provide({provide: TooltipConfig, useValue: config});\n\n    Object.assign(this, config);\n    this.onShown = this._tooltip.onShown;\n    this.onHidden = this._tooltip.onHidden;\n  }\n\n  ngOnInit(): void {\n    this._tooltip.listen({\n      triggers: this.triggers,\n      show: () => this.show()\n    });\n    this.tooltipChange.subscribe((value: any) => {\n      if (!value) {\n        this._tooltip.hide();\n      }\n    });\n  }\n\n  /**\n   * Toggles an element’s tooltip. This is considered a “manual” triggering of\n   * the tooltip.\n   */\n  toggle(): void {\n    if (this.isOpen) {\n      return this.hide();\n    }\n\n    this.show();\n  }\n\n  /**\n   * Opens an element’s tooltip. This is considered a “manual” triggering of\n   * the tooltip.\n   */\n  show(): void {\n    if (\n      this.isOpen ||\n      this.isDisabled ||\n      this._delayTimeoutId ||\n      !this.tooltip\n    ) {\n      return;\n    }\n\n    const showTooltip = () => {\n      if (this._delayTimeoutId) {\n        this._delayTimeoutId = undefined;\n      }\n\n      this._tooltip\n        .attach(TooltipContainerComponent)\n        .to(this.container)\n        .position({attachment: this.placement})\n        .show({\n          content: this.tooltip,\n          placement: this.placement,\n          containerClass: this.containerClass\n        });\n    };\n    const cancelDelayedTooltipShowing = () => {\n      if (this._tooltipCancelShowFn) {\n        this._tooltipCancelShowFn();\n      }\n    };\n\n    if (this.delay) {\n      const timer = Observable.timer(this.delay).subscribe(() => {\n        showTooltip();\n        cancelDelayedTooltipShowing();\n      });\n\n      if (this.triggers) {\n        const triggers = parseTriggers(this.triggers);\n        this._tooltipCancelShowFn = this._renderer.listen(this._elementRef.nativeElement, triggers[0].close, () => {\n          timer.unsubscribe();\n          cancelDelayedTooltipShowing();\n        });\n      }\n    } else {\n      showTooltip();\n    }\n  }\n\n  /**\n   * Closes an element’s tooltip. This is considered a “manual” triggering of\n   * the tooltip.\n   */\n  hide(): void {\n    if (this._delayTimeoutId) {\n      clearTimeout(this._delayTimeoutId);\n      this._delayTimeoutId = undefined;\n    }\n\n    if (!this._tooltip.isShown) {\n      return;\n    }\n\n    this._tooltip.instance.classMap.in = false;\n    setTimeout(() => {\n      this._tooltip.hide();\n    }, this._fadeDuration);\n  }\n\n  ngOnDestroy(): void {\n    this._tooltip.dispose();\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[tooltip], [tooltipHtml]',\n  exportAs: 'bs-tooltip'\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ViewContainerRef, },\n{type: Renderer2, },\n{type: ElementRef, },\n{type: ComponentLoaderFactory, },\n{type: TooltipConfig, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'tooltip': [{ type: Input },],\n'tooltipChange': [{ type: Output },],\n'placement': [{ type: Input },],\n'triggers': [{ type: Input },],\n'container': [{ type: Input },],\n'isOpen': [{ type: Input },],\n'isDisabled': [{ type: Input },],\n'containerClass': [{ type: Input },],\n'delay': [{ type: Input },],\n'onShown': [{ type: Output },],\n'onHidden': [{ type: Output },],\n'htmlContent': [{ type: Input, args: ['tooltipHtml', ] },],\n'_placement': [{ type: Input, args: ['tooltipPlacement', ] },],\n'_isOpen': [{ type: Input, args: ['tooltipIsOpen', ] },],\n'_enable': [{ type: Input, args: ['tooltipEnable', ] },],\n'_appendToBody': [{ type: Input, args: ['tooltipAppendToBody', ] },],\n'_animation': [{ type: Input, args: ['tooltipAnimation', ] },],\n'_popupClass': [{ type: Input, args: ['tooltipClass', ] },],\n'_tooltipContext': [{ type: Input, args: ['tooltipContext', ] },],\n'_tooltipPopupDelay': [{ type: Input, args: ['tooltipPopupDelay', ] },],\n'_fadeDuration': [{ type: Input, args: ['tooltipFadeDuration', ] },],\n'_tooltipTrigger': [{ type: Input, args: ['tooltipTrigger', ] },],\n'tooltipStateChanged': [{ type: Output },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { isDevMode } from '@angular/core';\nconst _messagesHash: { [key: string]: boolean } = {};\nconst _hideMsg = typeof console === 'undefined' || !('warn' in console);\n\nexport function warnOnce(msg: string): void {\n  if (!isDevMode() || _hideMsg || msg in _messagesHash) {\n    return;\n  }\n\n  _messagesHash[msg] = true;\n  /*tslint:disable-next-line*/\n  console.warn(msg);\n}\n","import {\n  AfterViewInit,\n  Component,\n  ChangeDetectionStrategy\n} from '@angular/core';\nimport { TooltipConfig } from './tooltip.config';\nimport { isBs3 } from '../utils/theme-provider';\n\n\nexport class TooltipContainerComponent implements AfterViewInit {\n  classMap: any;\n  placement: string;\n  containerClass: string;\n  animation: boolean;\n\n  get isBs3(): boolean {\n    return isBs3();\n  }\n\n  constructor(config: TooltipConfig) {\n    Object.assign(this, config);\n  }\n\n  ngAfterViewInit(): void {\n    this.classMap = { in: false, fade: false };\n    this.classMap[this.placement] = true;\n    this.classMap[`tooltip-${this.placement}`] = true;\n\n    this.classMap.in = true;\n    if (this.animation) {\n      this.classMap.fade = true;\n    }\n\n    if (this.containerClass) {\n      this.classMap[this.containerClass] = true;\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'bs-tooltip-container',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  // tslint:disable-next-line\n  host: {\n    '[class]':\n      '\"tooltip in tooltip-\" + placement + \" \" + \"bs-tooltip-\" + placement + \" \" + placement + \" \" + containerClass',\n    '[class.show]': '!isBs3',\n    role: 'tooltip'\n  },\n  styles: [\n    `\n    :host.tooltip {\n      display: block;\n    }\n    :host.bs-tooltip-top .arrow, :host.bs-tooltip-bottom .arrow {\n      left: 50%;\n      margin-left: -6px;\n    }\n    :host.bs-tooltip-left .arrow, :host.bs-tooltip-right .arrow {\n      top: 50%;\n      margin-top: -6px;\n    }\n  `\n  ],\n  template: `\n    <div class=\"tooltip-arrow arrow\"></div>\n    <div class=\"tooltip-inner\"><ng-content></ng-content></div>\n    `\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: TooltipConfig, },\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable } from '@angular/core';\n\n/** Default values provider for tooltip */\n\nexport class TooltipConfig {\n  /** tooltip placement, supported positions: 'top', 'bottom', 'left', 'right' */\n  placement = 'top';\n  /** array of event names which triggers tooltip opening */\n  triggers = 'hover focus';\n  /** a selector specifying the element the tooltip should be appended to. Currently only supports \"body\" */\n  container: string;\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\n\nimport { FlippableCardComponent, FlippableCardBackDirective, FlippableCardFrontDirective } from './flippable-card.component';\nexport class FlippableCardModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    exports: [FlippableCardComponent, FlippableCardBackDirective, FlippableCardFrontDirective],\n    declarations: [FlippableCardComponent, FlippableCardBackDirective, FlippableCardFrontDirective]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction FlippableCardModule_tsickle_Closure_declarations() {\n/** @type {?} */\nFlippableCardModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFlippableCardModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Input, Directive, HostListener, Output, EventEmitter } from '@angular/core';\nexport class FlippableCardComponent {\n\n     direction: 'horizontal' | 'vertical' = 'horizontal';\n     trigger: 'click' | 'hover' | 'manual' = 'hover';\n     width: number = 280;\n     height: number = 200;\n     flipped: boolean = false;\n     flippedChange: EventEmitter<boolean> = new EventEmitter<boolean>();\n/**\n * @param {?} state\n * @return {?}\n */\nsetFlipped(state: boolean) {\n        this.flipped = state;\n        this.flippedChange.emit(this.flipped);\n    }\n/**\n * @return {?}\n */\ntoggleFlipped() {\n        this.setFlipped(!this.flipped);\n    }\n/**\n * @return {?}\n */\nclickTrigger() {\n\n        // add or remove the class depending on whether or not the card has been flipped\n        if (this.trigger === 'click') {\n            this.toggleFlipped();\n        }\n    }\n/**\n * @return {?}\n */\nhoverEnter() {\n        // if the trigger is hover then begin to flip\n        if (this.trigger === 'hover') {\n            this.setFlipped(true);\n        }\n    }\n/**\n * @return {?}\n */\nhoverExit() {\n        if (this.trigger === 'hover') {\n            this.setFlipped(false);\n        }\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-flippable-card',\n    template: `\n      <div class=\"ux-flipper\" [class.ux-flip-card]=\"flipped\" [style.width.px]=\"width\" [style.height.px]=\"height\">\n\n          <div class=\"ux-flippable-card-front\" [style.width.px]=\"width\" [style.height.px]=\"height\">\n              <ng-content select=\"ux-flippable-card-front\"></ng-content>\n          </div>\n\n          <div class=\"ux-flippable-card-back\" [style.width.px]=\"width\" [style.height.px]=\"height\">\n              <ng-content select=\"ux-flippable-card-back\"></ng-content>\n          </div>\n      </div>\n    `,\n    host: {\n        '[class.horizontal]': 'direction === \"horizontal\"',\n        '[class.vertical]': 'direction === \"vertical\"'\n    },\n    exportAs: 'ux-flippable-card'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'direction': [{ type: Input },],\n'trigger': [{ type: Input },],\n'width': [{ type: Input },],\n'height': [{ type: Input },],\n'flipped': [{ type: Input },],\n'flippedChange': [{ type: Output },],\n'clickTrigger': [{ type: HostListener, args: ['click', ] },],\n'hoverEnter': [{ type: HostListener, args: ['mouseenter', ] },],\n'hoverExit': [{ type: HostListener, args: ['mouseleave', ] },],\n};\n}\n\nfunction FlippableCardComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nFlippableCardComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFlippableCardComponent.ctorParameters;\n/** @type {?} */\nFlippableCardComponent.propDecorators;\n/** @type {?} */\nFlippableCardComponent.prototype.direction;\n/** @type {?} */\nFlippableCardComponent.prototype.trigger;\n/** @type {?} */\nFlippableCardComponent.prototype.width;\n/** @type {?} */\nFlippableCardComponent.prototype.height;\n/** @type {?} */\nFlippableCardComponent.prototype.flipped;\n/** @type {?} */\nFlippableCardComponent.prototype.flippedChange;\n}\n\nexport class FlippableCardFrontDirective { static decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'ux-flippable-card-front'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction FlippableCardFrontDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nFlippableCardFrontDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFlippableCardFrontDirective.ctorParameters;\n}\n\nexport class FlippableCardBackDirective { static decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'ux-flippable-card-back'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction FlippableCardBackDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nFlippableCardBackDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFlippableCardBackDirective.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\nimport { TypeaheadModule } from 'ngx-bootstrap/typeahead';\nimport { TooltipModule } from '../tooltip/index';\nimport { FilterBaseComponent } from './filter-base/filter-base.component';\nimport { FilterContainerComponent } from './filter-container.component';\nimport { FilterDropdownComponent } from './filter-dropdown/filter-dropdown.component';\nimport { FilterDynamicComponent } from './filter-dynamic/filter-dynamic.component';\n\nconst /** @type {?} */ DECLARATIONS = [\n    FilterBaseComponent,\n    FilterContainerComponent,\n    FilterDropdownComponent,\n    FilterDynamicComponent\n];\nexport class FilterModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        BsDropdownModule.forRoot(),\n        TypeaheadModule.forRoot(),\n        TooltipModule,\n        FormsModule,\n        CommonModule\n    ],\n    exports: DECLARATIONS,\n    declarations: DECLARATIONS\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction FilterModule_tsickle_Closure_declarations() {\n/** @type {?} */\nFilterModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFilterModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { BsDropdownDirective } from 'ngx-bootstrap/dropdown';\nimport { Component, Input, ViewChild } from '@angular/core';\nimport { FilterBaseComponent } from '../filter-base/filter-base.component';\nimport { Filter, FilterContainerComponent, FilterRemoveAllEvent } from '../filter-container.component';\nimport { TypeaheadMatch } from 'ngx-bootstrap/typeahead';\nexport class FilterDynamicComponent extends FilterBaseComponent {\n\n     filters: Filter[];\n     initial: Filter;\n     options: FilterDynamicListConfig;\n\n     dropdown: BsDropdownDirective;\n\n    defaultOptions: FilterDynamicListConfig = {\n        placeholder: '',\n        minCharacters: 3\n    };\n    searchQuery: string;\n    selected: Filter;\n    showTypeahead: boolean = true;\n    typeaheadItems: string[] = [];\n/**\n * @return {?}\n */\ngetItems(): string[] {\n        return this.filters.filter(item => item !== this.initial).map(item => item.name);\n    }\n/**\n * @return {?}\n */\nngOnInit() {\n        this.selected = this.initial;\n        this.typeaheadItems = this.getItems();\n\n        if (this.options && this.options.maxIndividualItems && this.options.maxIndividualItems + 1 >= this.filters.length ) {\n            this.showTypeahead = false;\n        }\n    }\n/**\n * @param {?} typeaheadOption\n * @return {?}\n */\nselectOption(typeaheadOption: TypeaheadMatch) { \n        this.removeFilter();\n        let /** @type {?} */ idx = this.filters.findIndex(filter => filter.name === typeaheadOption.value);\n        this.selected = this.filters[idx];\n        this.addFilter(this.selected);\n        this.searchQuery = '';\n        this.dropdown.hide();\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nclickOff(event: MouseEvent) {\n\n        let /** @type {?} */ target = /** @type {?} */(( event.target as HTMLElement));\n        let /** @type {?} */ hideDropdown = true;\n\n        while (target && target.nodeName !== 'BODY') {\n            if (target.classList.contains('ux-dynamic-filter')) {\n                hideDropdown = false;\n                break;\n            } else {\n                target = target.parentElement;\n            }\n        }\n\n        if (hideDropdown) {\n            this.searchQuery = '';\n            this.dropdown.hide();\n        }\n        \n    }\n/**\n * @return {?}\n */\nremoveFilter(): void { \n        if (this.selected !== this.initial) {\n            super.removeFilter(this.selected);\n            this.selected = this.initial;\n        }\n        this.searchQuery = '';\n    }\n/**\n * @param {?} filter\n * @return {?}\n */\nselectFilter(filter: Filter) {\n        this.removeFilter();\n        this.selected = filter;\n        this.addFilter(this.selected);\n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-filter-dynamic',\n    template: `\n      <div class=\"btn-group ux-dynamic-filter\" dropdown #dynamicDropdown=\"bs-dropdown\">\n          <button (click)=\"dynamicDropdown.show()\" type=\"button\" [class.active]=\"selected !== initial\" class=\"filter-dropdown btn dropdown-toggle\">{{ selected?.title }} \n              <span class=\"hpe-icon hpe-down\"></span>\n          </button>\n          <ul *dropdownMenu class=\"dropdown-menu\" role=\"menu\">\n\n              <li class=\"dropdown-list-item\" *ngIf=\"showTypeahead\" role=\"menuitem\">\n                  <a class=\"dropdown-item\" (click)=\"removeFilter(); dynamicDropdown.hide();\">\n                      <i class=\"hpe-icon\" [class.hpe-checkmark]=\"initial === selected\"></i>\n                      <span class=\"filter-dropdown-title\">{{ initial.name }}</span>\n                  </a>\n              </li>\n\n              <li class=\"dropdown-list-item\" *ngIf=\"selected !== initial && showTypeahead\" role=\"menuitem\">\n                  <a class=\"dropdown-item\">\n                      <i class=\"hpe-icon hpe-checkmark\"></i>\n                      <span class=\"filter-dropdown-title\">{{ selected.name }}</span>\n                  </a>\n              </li>\n\n              <hr>\n\n              <li *ngIf=\"showTypeahead\" class=\"typeahead-box\">\n                  <input [(ngModel)]=\"searchQuery\" [typeahead]=\"typeaheadItems\" class=\"form-control\" \n                  (typeaheadOnSelect)=\"selectOption($event)\" \n                  [placeholder]=\"options?.placeholder || defaultOptions.placeholder\"\n                  [typeaheadMinLength]=\"options?.minCharacters || defaultOptions.minCharacters\"\n                  [typeaheadOptionsLimit]=\"options?.maxResults\">\n              </li>\n\n              <span *ngIf=\"!showTypeahead\">\n                  <li class=\"dropdown-list-item\" *ngFor=\"let filter of filters\" role=\"menuitem\">\n                      <a class=\"dropdown-item\" (click)=\"selectFilter(filter)\">\n                          <i class=\"hpe-icon\" [class.hpe-checkmark]=\"filter === selected\"></i>\n                          <span class=\"filter-dropdown-title\">{{ filter.name }}</span>\n                      </a>\n                  </li>\n              </span>\n\n          </ul>\n      </div>\n    `,\n    host: {\n        '(document:click)': 'clickOff($event)',\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'filters': [{ type: Input },],\n'initial': [{ type: Input },],\n'options': [{ type: Input },],\n'dropdown': [{ type: ViewChild, args: [BsDropdownDirective, ] },],\n};\n}\n\nfunction FilterDynamicComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nFilterDynamicComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFilterDynamicComponent.ctorParameters;\n/** @type {?} */\nFilterDynamicComponent.propDecorators;\n/** @type {?} */\nFilterDynamicComponent.prototype.filters;\n/** @type {?} */\nFilterDynamicComponent.prototype.initial;\n/** @type {?} */\nFilterDynamicComponent.prototype.options;\n/** @type {?} */\nFilterDynamicComponent.prototype.dropdown;\n/** @type {?} */\nFilterDynamicComponent.prototype.defaultOptions;\n/** @type {?} */\nFilterDynamicComponent.prototype.searchQuery;\n/** @type {?} */\nFilterDynamicComponent.prototype.selected;\n/** @type {?} */\nFilterDynamicComponent.prototype.showTypeahead;\n/** @type {?} */\nFilterDynamicComponent.prototype.typeaheadItems;\n}\n\n\nexport interface FilterDynamicListConfig {\n    placeholder?: string;\n    minCharacters?: number;\n    maxResults?: number;\n    maxIndividualItems?: number;\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Input } from '@angular/core';\nimport { FilterBaseComponent } from '../filter-base/filter-base.component';\nimport { Filter, FilterContainerComponent, FilterRemoveAllEvent } from '../filter-container.component';\nexport class FilterDropdownComponent extends FilterBaseComponent {\n\n     initial: Filter;\n\n    selected: Filter;\n/**\n * @return {?}\n */\nremoveFilter(): void {\n        super.removeFilter(this.selected);\n        this.selected = this.initial;\n    }\n/**\n * @return {?}\n */\nngOnInit() {\n        this.selected = this.initial;\n    }\n/**\n * @param {?} filter\n * @return {?}\n */\nselectFilter(filter: Filter) {\n        this.removeFilter();\n        this.selected = filter;\n        this.addFilter(this.selected);\n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-filter-dropdown',\n    template: `\n      <div class=\"btn-group\" dropdown>\n          <button dropdownToggle type=\"button\" class=\"filter-dropdown btn dropdown-toggle\" [class.active]=\"selected !== initial\">{{ selected?.title }} \n              <span class=\"hpe-icon hpe-down\"></span>\n          </button>\n          <ul *dropdownMenu class=\"dropdown-menu\" role=\"menu\">\n              <li class=\"dropdown-list-item\" *ngFor=\"let filter of filters\" role=\"menuitem\">\n                  <a class=\"dropdown-item\" (click)=\"selectFilter(filter)\">\n                      <i class=\"hpe-icon\" [class.hpe-checkmark]=\"filter === selected\"></i>\n                      <span class=\"filter-dropdown-title\">{{ filter.name }}</span>\n                  </a>\n              </li>\n          </ul>\n      </div>\n    `,\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'initial': [{ type: Input },],\n};\n}\n\nfunction FilterDropdownComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nFilterDropdownComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFilterDropdownComponent.ctorParameters;\n/** @type {?} */\nFilterDropdownComponent.propDecorators;\n/** @type {?} */\nFilterDropdownComponent.prototype.initial;\n/** @type {?} */\nFilterDropdownComponent.prototype.selected;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, Host, Input, Output } from '@angular/core';\nimport { FilterContainerComponent, Filter, FilterRemoveAllEvent } from '../filter-container.component';\nexport class FilterBaseComponent {\n\n     filters: Filter[];\n/**\n * @param {?} filtersContainer\n */\nconstructor(\nprivate filtersContainer: FilterContainerComponent) {\n\n        filtersContainer.events.filter(event => event instanceof FilterRemoveAllEvent).subscribe(this.removeFilter.bind(this));\n    }\n/**\n * @param {?} filter\n * @return {?}\n */\naddFilter(filter: Filter): void {\n        if (!filter.initial) {\n            this.filtersContainer.addFilter(filter);\n        }\n    }\n/**\n * @param {?} filter\n * @return {?}\n */\nremoveFilter(filter: Filter): void {\n        if (!filter) {\n            return;\n        }\n\n        this.filtersContainer.removeFilter(filter);\n    }\n    \nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'ux-filter-base'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: FilterContainerComponent, decorators: [{ type: Host }, ]},\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'filters': [{ type: Input },],\n};\n}\n\nfunction FilterBaseComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nFilterBaseComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFilterBaseComponent.ctorParameters;\n/** @type {?} */\nFilterBaseComponent.propDecorators;\n/** @type {?} */\nFilterBaseComponent.prototype.filters;\n/** @type {?} */\nFilterBaseComponent.prototype.filtersContainer;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nexport class FilterContainerComponent {\n\n     filters: Filter[] = [];\n     clearTooltip: string;\n     filtersChange: EventEmitter<Filter[]> = new EventEmitter<Filter[]>();\n     events: EventEmitter<FilterEvent> = new EventEmitter<FilterEvent>();\n/**\n * @param {?} filter\n * @return {?}\n */\naddFilter(filter: Filter): void {\n        this.filters.push(filter);\n        this.events.next(new FilterAddEvent(filter));\n        this.filtersChange.emit(this.filters);\n    }\n/**\n * @param {?} filter\n * @return {?}\n */\nremoveFilter(filter: Filter): void {\n        let /** @type {?} */ idx = this.filters.findIndex(filters => filters === filter);\n\n        if (idx !== -1) {\n            this.filters.splice(idx, 1);\n            this.events.next(new FilterRemoveEvent(filter));\n            this.filtersChange.emit(this.filters);\n        }\n    }\n/**\n * @return {?}\n */\nremoveAll(): void {\n        this.events.next(new FilterRemoveAllEvent());\n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-filter-container',\n    template: `\n      <ng-content></ng-content>\n\n      <!-- Add a Clear Button -->\n      <div class=\"filter-selected-clear-button\" *ngIf=\"filters.length > 0\" [uxTooltip]=\"clearTooltip || 'Clear All'\" (click)=\"removeAll()\">\n\n          <svg class=\"filter-selected-clear-graphic\" width=\"19\" height=\"12\" viewBox=\"0 0 19 12\" shape-rendering=\"geometricPrecision\">\n              <rect class=\"light-grey\" x=\"0\" y=\"2\" width=\"7\" height=\"2\"></rect>\n              <rect class=\"dark-grey\" x=\"0\" y=\"5\" width=\"9\" height=\"2\"></rect>\n              <rect class=\"light-grey\" x=\"0\" y=\"8\" width=\"7\" height=\"2\"></rect>\n              <path class=\"dark-grey\" d=\"M9,1 h1 l9,9 v1 h-1 l-9,-9 v-1 Z\"></path>\n              <path class=\"dark-grey\" d=\"M9,11 v-1 l9,-9 h1 v1 l-9,9 h-1 Z\"></path>\n          </svg>\n\n      </div>\n    `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'filters': [{ type: Input },],\n'clearTooltip': [{ type: Input },],\n'filtersChange': [{ type: Output },],\n'events': [{ type: Output },],\n};\n}\n\nfunction FilterContainerComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nFilterContainerComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFilterContainerComponent.ctorParameters;\n/** @type {?} */\nFilterContainerComponent.propDecorators;\n/** @type {?} */\nFilterContainerComponent.prototype.filters;\n/** @type {?} */\nFilterContainerComponent.prototype.clearTooltip;\n/** @type {?} */\nFilterContainerComponent.prototype.filtersChange;\n/** @type {?} */\nFilterContainerComponent.prototype.events;\n}\n\n\nexport interface Filter {\n    group: string;\n    title: string;\n    name: string;\n    initial?: boolean;\n}\nexport class FilterAddEvent {\n/**\n * @param {?} filter\n */\nconstructor(public filter: Filter) {}\n}\n\nfunction FilterAddEvent_tsickle_Closure_declarations() {\n/** @type {?} */\nFilterAddEvent.prototype.filter;\n}\n\nexport class FilterRemoveEvent {\n/**\n * @param {?} filter\n */\nconstructor(public filter: Filter) {}\n}\n\nfunction FilterRemoveEvent_tsickle_Closure_declarations() {\n/** @type {?} */\nFilterRemoveEvent.prototype.filter;\n}\n\nexport class FilterRemoveAllEvent {\n}\n\nexport type FilterEvent = FilterAddEvent | FilterRemoveEvent | FilterRemoveAllEvent;\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { ModuleWithProviders, NgModule } from '@angular/core';\nimport { ComponentLoaderFactory } from '../component-loader/index';\n\nimport { PositioningService } from '../positioning/index';\nimport { BsDropdownContainerComponent } from './bs-dropdown-container.component';\nimport { BsDropdownMenuDirective } from './bs-dropdown-menu.directive';\nimport { BsDropdownToggleDirective } from './bs-dropdown-toggle.directive';\nimport { BsDropdownConfig } from './bs-dropdown.config';\n\nimport { BsDropdownDirective } from './bs-dropdown.directive';\nimport { BsDropdownState } from './bs-dropdown.state';\n\n\nexport class BsDropdownModule {\n  static forRoot(config?: any): ModuleWithProviders {\n    return {\n      ngModule: BsDropdownModule,\n      providers: [\n        ComponentLoaderFactory,\n        PositioningService,\n        BsDropdownState,\n        {\n          provide: BsDropdownConfig,\n          useValue: config ? config : { autoClose: true }\n        }\n      ]\n    };\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  declarations: [\n    BsDropdownMenuDirective,\n    BsDropdownToggleDirective,\n    BsDropdownContainerComponent,\n    BsDropdownDirective\n  ],\n  exports: [\n    BsDropdownMenuDirective,\n    BsDropdownToggleDirective,\n    BsDropdownDirective\n  ],\n  entryComponents: [BsDropdownContainerComponent]\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {\n  Directive,\n  ElementRef,\n  HostBinding,\n  HostListener,\n  Input,\n  OnDestroy\n} from '@angular/core';\nimport { Subscription } from 'rxjs/Subscription';\n\nimport { BsDropdownState } from './bs-dropdown.state';\n\n\nexport class BsDropdownToggleDirective implements OnDestroy {\n   isDisabled: boolean = null;\n\n  // @HostBinding('class.active')\n   isOpen: boolean;\n\n  private _subscriptions: Subscription[] = [];\n\n  constructor(private _state: BsDropdownState, private _element: ElementRef) {\n    // sync is open value with state\n    this._subscriptions.push(\n      this._state.isOpenChange.subscribe(\n        (value: boolean) => (this.isOpen = value)\n      )\n    );\n    // populate disabled state\n    this._subscriptions.push(\n      this._state.isDisabledChange.subscribe(\n        (value: boolean) => (this.isDisabled = value || null)\n      )\n    );\n  }\n\n  \n  onClick(): void {\n    if (this.isDisabled) {\n      return;\n    }\n    this._state.toggleClick.emit(true);\n  }\n\n  \n  onDocumentClick(event: any): void {\n    if (\n      this._state.autoClose &&\n      event.button !== 2 &&\n      !this._element.nativeElement.contains(event.target)\n    ) {\n      this._state.toggleClick.emit(false);\n    }\n  }\n\n  \n  onEsc(): void {\n    if (this._state.autoClose) {\n      this._state.toggleClick.emit(false);\n    }\n  }\n\n  ngOnDestroy(): void {\n    for (const sub of this._subscriptions) {\n      sub.unsubscribe();\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[bsDropdownToggle],[dropdownToggle]',\n  exportAs: 'bs-dropdown-toggle',\n  host: {\n    '[attr.aria-haspopup]': 'true'\n  }\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: BsDropdownState, },\n{type: ElementRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'isDisabled': [{ type: HostBinding, args: ['attr.disabled', ] },],\n'isOpen': [{ type: HostBinding, args: ['attr.aria-expanded', ] },],\n'onClick': [{ type: HostListener, args: ['click', [], ] },],\n'onDocumentClick': [{ type: HostListener, args: ['document:click', ['$event'], ] },],\n'onEsc': [{ type: HostListener, args: ['keyup.esc', ] },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, TemplateRef, ViewContainerRef } from '@angular/core';\nimport { BsDropdownState } from './bs-dropdown.state';\n\n\nexport class BsDropdownMenuDirective {\n  constructor(\n    _state: BsDropdownState,\n    _viewContainer: ViewContainerRef,\n    _templateRef: TemplateRef<any>\n  ) {\n    _state.resolveDropdownMenu({\n      templateRef: _templateRef,\n      viewContainer: _viewContainer\n    });\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[bsDropdownMenu],[dropdownMenu]',\n  exportAs: 'bs-dropdown-menu'\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: BsDropdownState, },\n{type: ViewContainerRef, },\n{type: TemplateRef, },\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","// tslint:disable:max-file-line-count\nimport {\n  Directive, ElementRef, EmbeddedViewRef, EventEmitter, Input, OnDestroy,\n  OnInit, Output, Renderer2, ViewContainerRef\n} from '@angular/core';\nimport { Subscription } from 'rxjs/Subscription';\nimport 'rxjs/add/operator/filter';\nimport { ComponentLoader, ComponentLoaderFactory } from '../component-loader/index';\n\nimport { BsDropdownConfig } from './bs-dropdown.config';\nimport { BsDropdownContainerComponent } from './bs-dropdown-container.component';\nimport { BsDropdownState } from './bs-dropdown.state';\nimport { BsComponentRef } from '../component-loader/bs-component-ref.class';\nimport { BsDropdownMenuDirective } from './';\nimport { isBs3 } from '../utils/theme-provider';\n\n\nexport class BsDropdownDirective implements OnInit, OnDestroy {\n  /**\n   * Placement of a popover. Accepts: \"top\", \"bottom\", \"left\", \"right\"\n   */\n   placement: string;\n  /**\n   * Specifies events that should trigger. Supports a space separated list of\n   * event names.\n   */\n   triggers: string;\n  /**\n   * A selector specifying the element the popover should be appended to.\n   * Currently only supports \"body\".\n   */\n   container: string;\n\n  /**\n   * This attribute indicates that the dropdown should be opened upwards\n   */\n   dropup: boolean;\n\n  /**\n   * Indicates that dropdown will be closed on item or document click,\n   * and after pressing ESC\n   */\n  \n  set autoClose(value: boolean) {\n    this._state.autoClose = value;\n  }\n\n  get autoClose(): boolean {\n    return this._state.autoClose;\n  }\n\n  /**\n   * Disables dropdown toggle and hides dropdown menu if opened\n   */\n  \n  set isDisabled(value: boolean) {\n    this._isDisabled = value;\n    this._state.isDisabledChange.emit(value);\n    if (value) {\n      this.hide();\n    }\n  }\n\n  get isDisabled(): boolean {\n    return this._isDisabled;\n  }\n\n  /**\n   * Returns whether or not the popover is currently being shown\n   */\n  \n  get isOpen(): boolean {\n    if (this._showInline) {\n      return this._isInlineOpen;\n    }\n\n    return this._dropdown.isShown;\n  }\n\n  set isOpen(value: boolean) {\n    if (value) {\n      this.show();\n    } else {\n      this.hide();\n    }\n  }\n\n  /**\n   * Emits an event when isOpen change\n   */\n   isOpenChange: EventEmitter<any>;\n\n  /**\n   * Emits an event when the popover is shown\n   */\n   onShown: EventEmitter<any>;\n\n  /**\n   * Emits an event when the popover is hidden\n   */\n   onHidden: EventEmitter<any>;\n\n  get isBs4(): boolean {\n    return !isBs3();\n  }\n\n  // todo: move to component loader\n  private _isInlineOpen = false;\n\n  private get _showInline(): boolean {\n    return !this.container;\n  }\n\n  private _inlinedMenu: EmbeddedViewRef<BsDropdownMenuDirective>;\n\n  private _isDisabled: boolean;\n  private _dropdown: ComponentLoader<BsDropdownContainerComponent>;\n  private _subscriptions: Subscription[] = [];\n  private _isInited = false;\n\n  constructor(private _elementRef: ElementRef,\n              private _renderer: Renderer2,\n              private _viewContainerRef: ViewContainerRef,\n              private _cis: ComponentLoaderFactory,\n              private _config: BsDropdownConfig,\n              private _state: BsDropdownState) {\n    // set initial dropdown state from config\n    this._state.autoClose = this._config.autoClose;\n\n    // create dropdown component loader\n    this._dropdown = this._cis\n      .createLoader<BsDropdownContainerComponent>(\n        this._elementRef,\n        this._viewContainerRef,\n        this._renderer\n      )\n      .provide({provide: BsDropdownState, useValue: this._state});\n\n    this.onShown = this._dropdown.onShown;\n    this.onHidden = this._dropdown.onHidden;\n    this.isOpenChange = this._state.isOpenChange;\n\n  }\n\n  ngOnInit(): void {\n    // fix: seems there are an issue with `routerLinkActive`\n    // which result in duplicated call ngOnInit without call to ngOnDestroy\n    // read more: https://github.com/valor-software/ngx-bootstrap/issues/1885\n    if (this._isInited) {\n      return;\n    }\n    this._isInited = true;\n\n    // attach DOM listeners\n    this._dropdown.listen({\n      // because of dropdown inline mode\n      outsideClick: false,\n      triggers: this.triggers,\n      show: () => this.show()\n    });\n\n    // toggle visibility on toggle element click\n    this._subscriptions.push(\n      this._state.toggleClick.subscribe((value: boolean) => this.toggle(value))\n    );\n\n    // hide dropdown if set disabled while opened\n    this._subscriptions.push(\n      this._state.isDisabledChange\n        .filter((value: boolean) => value)\n        .subscribe((value: boolean) => this.hide())\n    );\n  }\n\n  /**\n   * Opens an element’s popover. This is considered a “manual” triggering of\n   * the popover.\n   */\n  show(): void {\n    if (this.isOpen || this.isDisabled) {\n      return;\n    }\n\n    if (this._showInline) {\n      if (!this._inlinedMenu) {\n        this._state.dropdownMenu.then(\n          (dropdownMenu: BsComponentRef<BsDropdownMenuDirective>) => {\n            this._dropdown.attachInline(\n              dropdownMenu.viewContainer,\n              dropdownMenu.templateRef\n            );\n            this._inlinedMenu = this._dropdown._inlineViewRef;\n            this.addBs4Polyfills();\n          }\n        )\n        // swallow errors\n          .catch();\n      }\n      this.addBs4Polyfills();\n      this._isInlineOpen = true;\n      this.onShown.emit(true);\n      this._state.isOpenChange.emit(true);\n\n      return;\n    }\n    this._state.dropdownMenu.then(dropdownMenu => {\n      // check direction in which dropdown should be opened\n      const _dropup =\n        this.dropup ||\n        (typeof this.dropup !== 'undefined' && this.dropup);\n      this._state.direction = _dropup ? 'up' : 'down';\n      const _placement =\n        this.placement || (_dropup ? 'top left' : 'bottom left');\n\n      // show dropdown\n      this._dropdown\n        .attach(BsDropdownContainerComponent)\n        .to(this.container)\n        .position({attachment: _placement})\n        .show({\n          content: dropdownMenu.templateRef,\n          placement: _placement\n        });\n\n      this._state.isOpenChange.emit(true);\n    })\n    // swallow error\n      .catch();\n  }\n\n  /**\n   * Closes an element’s popover. This is considered a “manual” triggering of\n   * the popover.\n   */\n  hide(): void {\n    if (!this.isOpen) {\n      return;\n    }\n\n    if (this._showInline) {\n      this.removeShowClass();\n      this.removeDropupStyles();\n      this._isInlineOpen = false;\n      this.onHidden.emit(true);\n    } else {\n      this._dropdown.hide();\n    }\n\n    this._state.isOpenChange.emit(false);\n  }\n\n  /**\n   * Toggles an element’s popover. This is considered a “manual” triggering of\n   * the popover. With parameter <code>true</code> allows toggling, with parameter <code>false</code>\n   * only hides opened dropdown. Parameter usage will be removed in ngx-bootstrap v3\n   */\n  toggle(value?: boolean): void {\n    if (this.isOpen || !value) {\n      return this.hide();\n    }\n\n    return this.show();\n  }\n\n  ngOnDestroy(): void {\n    // clean up subscriptions and destroy dropdown\n    for (const sub of this._subscriptions) {\n      sub.unsubscribe();\n    }\n    this._dropdown.dispose();\n  }\n\n  private addBs4Polyfills(): void {\n    if (!isBs3()) {\n      this.addShowClass();\n      this.checkRightAlignment();\n      this.addDropupStyles();\n    }\n  }\n\n  private addShowClass(): void {\n    if (this._inlinedMenu && this._inlinedMenu.rootNodes[0]) {\n      this._renderer.addClass(this._inlinedMenu.rootNodes[0], 'show');\n    }\n  }\n\n  private removeShowClass(): void {\n    if (this._inlinedMenu && this._inlinedMenu.rootNodes[0]) {\n      this._renderer.removeClass(this._inlinedMenu.rootNodes[0], 'show');\n    }\n  }\n\n  private checkRightAlignment(): void {\n    if (this._inlinedMenu && this._inlinedMenu.rootNodes[0]) {\n      const isRightAligned = this._inlinedMenu.rootNodes[0].classList.contains(\n        'dropdown-menu-right'\n      );\n      this._renderer.setStyle(\n        this._inlinedMenu.rootNodes[0],\n        'left',\n        isRightAligned ? 'auto' : '0'\n      );\n      this._renderer.setStyle(\n        this._inlinedMenu.rootNodes[0],\n        'right',\n        isRightAligned ? '0' : 'auto'\n      );\n    }\n  }\n\n  private addDropupStyles(): void {\n    if (this._inlinedMenu && this._inlinedMenu.rootNodes[0]) {\n      // a little hack to not break support of bootstrap 4 beta\n      this._renderer.setStyle(\n        this._inlinedMenu.rootNodes[0],\n        'top',\n        this.dropup ? 'auto' : '100%'\n      );\n      this._renderer.setStyle(\n        this._inlinedMenu.rootNodes[0],\n        'transform',\n        this.dropup ? 'translateY(-101%)' : 'translateY(0)'\n      );\n    }\n  }\n\n  private removeDropupStyles(): void {\n    if (this._inlinedMenu && this._inlinedMenu.rootNodes[0]) {\n      this._renderer.removeStyle(this._inlinedMenu.rootNodes[0], 'top');\n      this._renderer.removeStyle(this._inlinedMenu.rootNodes[0], 'transform');\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[bsDropdown],[dropdown]',\n  exportAs: 'bs-dropdown',\n  providers: [BsDropdownState],\n  host: {\n    '[class.dropup]': 'dropup',\n    '[class.open]': 'isOpen',\n    '[class.show]': 'isOpen && isBs4'\n  }\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Renderer2, },\n{type: ViewContainerRef, },\n{type: ComponentLoaderFactory, },\n{type: BsDropdownConfig, },\n{type: BsDropdownState, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'placement': [{ type: Input },],\n'triggers': [{ type: Input },],\n'container': [{ type: Input },],\n'dropup': [{ type: Input },],\n'autoClose': [{ type: Input },],\n'isDisabled': [{ type: Input },],\n'isOpen': [{ type: Input },],\n'isOpenChange': [{ type: Output },],\n'onShown': [{ type: Output },],\n'onHidden': [{ type: Output },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  OnDestroy,\n  Renderer2\n} from '@angular/core';\nimport { BsDropdownState } from './bs-dropdown.state';\nimport { isBs3 } from '../utils/theme-provider';\n\n\nexport class BsDropdownContainerComponent implements OnDestroy {\n  isOpen = false;\n\n  get direction(): 'down' | 'up' {\n    return this._state.direction;\n  }\n\n  private _subscription: any;\n\n  constructor(\n    private _state: BsDropdownState,\n    private cd: ChangeDetectorRef,\n    private _renderer: Renderer2,\n    _element: ElementRef\n  ) {\n    this._subscription = _state.isOpenChange.subscribe((value: boolean) => {\n      this.isOpen = value;\n      const dropdown = _element.nativeElement.querySelector('.dropdown-menu');\n      if (dropdown && !isBs3()) {\n        this._renderer.addClass(dropdown, 'show');\n        if (dropdown.classList.contains('dropdown-menu-right')) {\n          this._renderer.setStyle(dropdown, 'left', 'auto');\n          this._renderer.setStyle(dropdown, 'right', '0');\n        }\n        if (this.direction === 'up') {\n          this._renderer.setStyle(dropdown, 'top', 'auto');\n          this._renderer.setStyle(\n            dropdown,\n            'transform',\n            'translateY(-101%)'\n          );\n        }\n      }\n      this.cd.markForCheck();\n      this.cd.detectChanges();\n    });\n  }\n\n  ngOnDestroy(): void {\n    this._subscription.unsubscribe();\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'bs-dropdown-container',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    style: 'display:block;position: absolute;'\n  },\n  template: `\n    <div [class.dropup]=\"direction === 'up'\"\n         [class.dropdown]=\"direction === 'down'\"\n         [class.show]=\"isOpen\"\n         [class.open]=\"isOpen\"><ng-content></ng-content></div>\n  `\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: BsDropdownState, },\n{type: ChangeDetectorRef, },\n{type: Renderer2, },\n{type: ElementRef, },\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { EventEmitter, Injectable } from '@angular/core';\nimport { BsComponentRef } from '../component-loader/bs-component-ref.class';\n\n\nexport class BsDropdownState {\n  direction: 'down' | 'up' = 'down';\n  autoClose: boolean;\n  isOpenChange = new EventEmitter<boolean>();\n  isDisabledChange = new EventEmitter<boolean>();\n  toggleClick = new EventEmitter<boolean>();\n\n  /**\n   * Content to be displayed as popover.\n   */\n  dropdownMenu: Promise<BsComponentRef<any>>;\n  resolveDropdownMenu: (componentRef: BsComponentRef<any>) => void;\n\n  constructor() {\n    this.dropdownMenu = new Promise(resolve => {\n      this.resolveDropdownMenu = resolve;\n    });\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable } from '@angular/core';\n\n/** Default dropdown configuration */\n\nexport class BsDropdownConfig {\n  /** default dropdown auto closing behavior */\n  autoClose = true;\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","\nexport class Facet {\n/**\n * @param {?} title\n * @param {?=} data\n * @param {?=} count\n * @param {?=} disabled\n * @param {?=} id\n */\nconstructor(\npublic title: string,\npublic data: any = {},\npublic count?: number,\npublic disabled: boolean = false,\npublic id?: string | number\n    ) { }\n}\n\nfunction Facet_tsickle_Closure_declarations() {\n/** @type {?} */\nFacet.prototype.title;\n/** @type {?} */\nFacet.prototype.data;\n/** @type {?} */\nFacet.prototype.count;\n/** @type {?} */\nFacet.prototype.disabled;\n/** @type {?} */\nFacet.prototype.id;\n}\n","import { NgModule } from '@angular/core';\nimport { TypeaheadModule } from 'ngx-bootstrap/typeahead';\nimport { CommonModule } from '@angular/common';\nimport { FacetContainerComponent } from './facet-container.component';\nimport { FacetBaseComponent } from './base/facet-base/facet-base.component';\nimport { FacetHeaderComponent } from './base/facet-header/facet-header.component';\nimport { FacetCheckListComponent } from './facet-check-list/facet-check-list.component';\nimport { FacetTypeaheadListComponent, FacetTypeaheadHighlight } from './facet-typeahead-list/facet-typeahead-list.component';\nimport { FormsModule } from '@angular/forms';\nimport { CheckboxModule } from '../checkbox/index';\nimport { TooltipModule } from '../tooltip/index';\n\nconst /** @type {?} */ DECLARATIONS = [\n    FacetContainerComponent,\n    FacetHeaderComponent,\n    FacetBaseComponent,\n    FacetCheckListComponent,\n    FacetTypeaheadListComponent,\n    FacetTypeaheadHighlight\n];\nexport class FacetsModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        CommonModule,\n        FormsModule,\n        CheckboxModule,\n        TooltipModule,\n        TypeaheadModule.forRoot()\n    ],\n    exports: DECLARATIONS,\n    declarations: DECLARATIONS\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction FacetsModule_tsickle_Closure_declarations() {\n/** @type {?} */\nFacetsModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFacetsModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { OverlayModule } from '@angular/cdk/overlay';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { TooltipComponent } from './tooltip.component';\nimport { TooltipDirective } from './tooltip.directive';\nimport { ObserversModule } from '@angular/cdk/observers';\nimport { TooltipService } from './tooltip.service';\nexport class TooltipModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  imports: [\n    CommonModule,\n    OverlayModule,\n    ObserversModule\n  ],\n  exports: [TooltipDirective],\n  declarations: [TooltipComponent, TooltipDirective],\n  providers: [TooltipService],\n  entryComponents: [TooltipComponent]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction TooltipModule_tsickle_Closure_declarations() {\n/** @type {?} */\nTooltipModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTooltipModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { OriginConnectionPosition, Overlay, OverlayConnectionPosition, OverlayRef, ScrollDispatcher } from '@angular/cdk/overlay';\nimport { ComponentPortal } from '@angular/cdk/portal';\nimport { ChangeDetectorRef, Directive, ElementRef, EventEmitter, Input, OnChanges, OnDestroy, OnInit, Output, Renderer2, SimpleChanges, TemplateRef, ViewContainerRef } from '@angular/core';\nimport { Subject } from 'rxjs/Subject';\nimport { fromEvent } from 'rxjs/observable/fromEvent';\nimport { filter, takeUntil } from 'rxjs/operators';\nimport { TooltipComponent } from './tooltip.component';\nimport { TooltipService } from './tooltip.service';\nexport class TooltipDirective implements OnInit, OnChanges, OnDestroy {\n/**\n * Contains the content of the tooltip or a TemplateRef for more detailed content\n */\ncontent: string | TemplateRef<any>;\n/**\n * Allow the tooltip to be conditionally disabled\n */\ndisabled: boolean;\n/**\n * All the user to add a custom class to the tooltip\n */\ncustomClass: string = '';\n/**\n * All the user to add a role to the tooltip - default is tooltip\n */\nrole: string = 'tooltip';\n/**\n * Provide the TemplateRef a context object\n */\ncontext: any = {};\n/**\n * Delay the showing of the tooltip by a number of miliseconds\n */\ndelay: number = 0;\n/**\n * Programmatically show and hide the tooltip\n */\nisOpen: boolean = false;\n/**\n * Customize how the tooltip should be positioned relative to the element\n */\nplacement: AnchorPlacement = 'top';\n/**\n * Specify which events should show the tooltip\n */\nshowTriggers: string[] = ['mouseenter', 'focus'];\n/**\n * Specify which events should hide the tooltip\n */\nhideTriggers: string[] = ['mouseleave', 'blur'];\n/**\n * Emits an event when the tooltip is shown\n */\nshown = new EventEmitter<void>();\n/**\n * Emits a event when the tooltip is hidden\n */\nhidden = new EventEmitter<void>();\n/**\n * Allow two way binding to track the visibility of the tooltip\n */\nisOpenChange = new EventEmitter<boolean>();\n/**\n * Keep track of the tooltip visibility\n */\nisVisible: boolean = false;\n/**\n * A reference to the CDK portal containing the overlay\n */\nprotected _portal: ComponentPortal<TooltipComponent>;\n/**\n * A reference to the overlay the tooltip will be inserted into\n */\nprotected _overlayRef: OverlayRef;\n/**\n * A reference to the instance of the tooltip component when created\n */\nprotected _instance: TooltipComponent;\n/**\n * This will emit when the directive is destroyed allowing us to unsubscribe all subscriptions automatically\n */\nprotected _onDestroy = new Subject<void>();\n/**\n * Store the timeout interval for cancelation\n */\nprivate _showTimeoutId: number;\n/**\n * Internally store the type of this component - usual for distinctions when extending this class\n */\nprotected _type: string = 'tooltip';\n/**\n * @param {?} _elementRef\n * @param {?} _viewContainerRef\n * @param {?} _overlay\n * @param {?} _scrollDispatcher\n * @param {?} _changeDetectorRef\n * @param {?} _renderer\n * @param {?} _tooltipService\n */\nconstructor(\n        protected _elementRef: ElementRef,\n        protected _viewContainerRef: ViewContainerRef,\n        protected _overlay: Overlay,\n        protected _scrollDispatcher: ScrollDispatcher,\nprivate _changeDetectorRef: ChangeDetectorRef,\nprivate _renderer: Renderer2,\nprivate _tooltipService: TooltipService\n    ) { }\n/**\n * Set up the triggers and bind to the show/hide events to keep visibility in sync\n * @return {?}\n */\nngOnInit(): void {\n\n        // set up show and hide event triggers\n        fromEvent(this._elementRef.nativeElement, 'click').pipe(takeUntil(this._onDestroy)).subscribe(this.onClick.bind(this));\n        fromEvent(this._elementRef.nativeElement, 'mouseenter').pipe(takeUntil(this._onDestroy)).subscribe(this.onMouseEnter.bind(this));\n        fromEvent(this._elementRef.nativeElement, 'mouseleave').pipe(takeUntil(this._onDestroy)).subscribe(this.onMouseLeave.bind(this));\n        fromEvent(this._elementRef.nativeElement, 'focus').pipe(takeUntil(this._onDestroy)).subscribe(this.onFocus.bind(this));\n        fromEvent(this._elementRef.nativeElement, 'blur').pipe(takeUntil(this._onDestroy)).subscribe(this.onBlur.bind(this));\n\n        // when any other tooltips open hide this one\n        this._tooltipService.shown$.pipe(\n            filter(() => this._type === 'tooltip'),\n            filter(tooltip => tooltip !== this._instance),\n            takeUntil(this._onDestroy)\n        ).subscribe(this.hide.bind(this));\n\n        // if the tooltip should be initially visible then open it\n        if (this.isOpen) {\n            this.show();\n        }\n    }\n/**\n * We need to send input changes to the tooltip component\n * We can't use setters as they may trigger before tooltip initialised and can't resend once initialised\n * \n * @param {?} changes\n * @return {?}\n */\nngOnChanges(changes: SimpleChanges): void {\n\n        // we can ignore the first change as it's handled in ngOnInit\n        if (changes.isOpen && !changes.isOpen.firstChange && changes.isOpen.currentValue !== this.isVisible) {\n            changes.isOpen.currentValue ? this.show() : this.hide();\n        }\n\n        // destroy the overlay ref so a new correctly positioned instance will be created next time\n        if (changes.placement) {\n            this.destroyOverlay();\n        }\n\n        if (this._instance && changes.placement) {\n            this._instance.setPlacement(changes.placement.currentValue);\n        }\n\n        if (this._instance && changes.content) {\n            this._instance.setContent(changes.content.currentValue);\n        }\n\n        if (this._instance && changes.customClass) {\n            this._instance.setClass(changes.customClass.currentValue);\n        }\n\n        if (this._instance && changes.context) {\n            this._instance.setContext(changes.context.currentValue);\n        }\n\n        if (this._instance && changes.role) {\n            this._instance.setContext(changes.role.currentValue);\n        }\n    }\n/**\n * Ensure we clean up after ourselves\n * @return {?}\n */\nngOnDestroy(): void {\n\n        // ensure we close the tooltip when the host is destroyed\n        if (this._overlayRef) {\n            this._overlayRef.dispose();\n            this._instance = null;\n        }\n\n        // emit this event to automatically unsubscribe from all subscriptions\n        this._onDestroy.next();\n        this._onDestroy.complete();\n    }\n/**\n * Make the tooltip open\n * @return {?}\n */\nshow(): void {\n\n        // if the tooltip is disabled then do nothing\n        if (this.disabled || this.isVisible || this._showTimeoutId || !this.content) {\n            return;\n        }\n\n        // delay the show by the delay amount\n        this._showTimeoutId = window.setTimeout(() => {\n\n            // create the tooltip and get the overlay ref\n            const /** @type {?} */ overlayRef = this.createOverlay();\n\n            // create the portal to create the tooltip component\n            this._portal = this.createPortal();\n            this._instance = this.createInstance(overlayRef);\n\n            // watch for any changes to the content\n            this._instance.reposition$.pipe(takeUntil(this._onDestroy)).subscribe(this.reposition.bind(this));\n\n            // store the visible state\n            this.isVisible = true;\n\n            // ensure the overlay has the correct initial position\n            this.reposition();\n\n            // emit the show events\n            this.shown.emit();\n            this.isOpenChange.next(true);\n\n            // clear the interval id\n            this._showTimeoutId = null;\n\n            // emit the show event to close any other tooltips\n            this._tooltipService.shown$.next(this._instance);\n\n            // ensure change detection is run\n            this._changeDetectorRef.detectChanges();\n        }, this.delay);\n\n    }\n/**\n * If a tooltip exists and is visible, hide it\n * @return {?}\n */\nhide() {\n\n        // if we are waiting to show a tooltip then cancel the pending timeout\n        if (this._showTimeoutId) {\n            clearTimeout(this._showTimeoutId);\n            this._showTimeoutId = null;\n            return;\n        }\n\n        if (this._overlayRef && this._overlayRef.hasAttached()) {\n            this._overlayRef.detach();\n        }\n\n        this.setAriaDescribedBy(null);\n        this._instance = null;\n\n        // store the visible state\n        this.isVisible = false;\n\n        // emit the hide events\n        this.hidden.emit();\n        this.isOpenChange.next(false);\n\n        // ensure change detection is run\n        this._changeDetectorRef.detectChanges();\n    }\n/**\n * Toggle the visibility of the tooltip\n * @return {?}\n */\ntoggle(): void {\n        this.isVisible ? this.hide() : this.show();\n    }\n/**\n * Recalculate the position of the popover\n * @return {?}\n */\nreposition(): void {\n        if (this.isVisible && this._overlayRef) {\n            this._overlayRef.updatePosition();\n        }\n    }\n/**\n * Create an instance from the overlay ref - allows overriding and additional logic here\n * @param {?} overlayRef\n * @return {?}\n */\nprotected createInstance(overlayRef: OverlayRef): TooltipComponent {\n        const /** @type {?} */ instance = /** @type {?} */(( overlayRef.attach(this._portal).instance as TooltipComponent));\n\n        // supply the tooltip with the correct properties\n        instance.setContent(this.content);\n        instance.setPlacement(this.placement);\n        instance.setClass(this.customClass);\n        instance.setContext(this.context);\n        instance.setRole(this.role);\n\n        // Update the aria-describedby attribute\n        this.setAriaDescribedBy(instance.id);\n\n        return instance;\n    }\n/**\n * Create the component portal - allows overriding to allow other portals eg. popovers\n * @return {?}\n */\nprotected createPortal(): ComponentPortal<any> {\n        return this._portal || new ComponentPortal(TooltipComponent, this._viewContainerRef);\n    }\n/**\n * Create the overlay and set up the scroll handling behavior\n * @return {?}\n */\nprivate createOverlay(): OverlayRef {\n\n        // if the tooltip has already been created then just return the existing instance\n        if (this._overlayRef) {\n            return this._overlayRef;\n        }\n\n        // configure the tooltip\n        const /** @type {?} */ strategy = this._overlay.position()\n            .connectedTo(this._elementRef, this.getOrigin(), this.getOverlayPosition());\n\n        // correctly handle scrolling\n        const /** @type {?} */ scrollableAncestors = this._scrollDispatcher\n            .getAncestorScrollContainers(this._elementRef);\n\n        strategy.withScrollableContainers(scrollableAncestors);\n\n        this._overlayRef = this._overlay.create({\n            positionStrategy: strategy,\n            panelClass: 'ux-overlay-pane',\n            scrollStrategy: this._overlay.scrollStrategies.reposition({ scrollThrottle: 0 }),\n            hasBackdrop: false\n        });\n\n        return this._overlayRef;\n    }\n/**\n * Recreate the overlay ref using the updated origin and overlay positions\n * @return {?}\n */\nprivate destroyOverlay(): void {\n\n        // destroy the existing overlay\n        if (this._overlayRef && this._overlayRef.hasAttached()) {\n            this._overlayRef.detach();\n        }\n\n        if (this._overlayRef) {\n            this._overlayRef.dispose();\n            this._overlayRef = null;\n        }\n\n        this.isVisible = false;\n    }\n/**\n * Get the origin position based on the specified tooltip placement\n * @return {?}\n */\nprivate getOrigin(): OriginConnectionPosition {\n\n        // ensure placement is defined\n        this.placement = this.placement || 'top';\n\n        if (this.placement == 'top' || this.placement == 'bottom') {\n            return { originX: 'center', originY: this.placement };\n        } else if (this.placement == 'left') {\n            return { originX: 'start', originY: 'center' };\n        } else if (this.placement == 'right') {\n            return { originX: 'end', originY: 'center' };\n        }\n    }\n/**\n * Calculate the overlay position based on the specified tooltip placement\n * @return {?}\n */\nprivate getOverlayPosition(): OverlayConnectionPosition {\n\n        // ensure placement is defined\n        this.placement = this.placement || 'top';\n\n        if (this.placement == 'top') {\n            return { overlayX: 'center', overlayY: 'bottom' };\n        } else if (this.placement == 'bottom') {\n            return { overlayX: 'center', overlayY: 'top' };\n        } else if (this.placement == 'left') {\n            return { overlayX: 'end', overlayY: 'center' };\n        } else if (this.placement == 'right') {\n            return { overlayX: 'start', overlayY: 'center' };\n        }\n    }\n/**\n * Simple utility method - because IE doesn't support array.includes\n * And it isn't included in the core-js/es6 polyfills which are the\n * only ones required by Angular and guaranteed to be there\n * \n * @template T\n * @param {?} array\n * @param {?} value\n * @return {?}\n */\nprotected includes<T>(array: Array<T>, value: T): boolean {\n        return Array.isArray(array) && !!array.find(item => item === value);\n    }\n/**\n * Handle the click event - show or hide accordingly\n * @param {?} event\n * @return {?}\n */\nprotected onClick(event: MouseEvent): void {\n\n        // if its not visible and click is a show trigger open it\n        if (!this.isVisible && this.includes(this.showTriggers, 'click')) {\n            return this.show();\n        }\n\n        // if its visible and click is a hide trigger close it\n        if (this.isVisible && this.includes(this.hideTriggers, 'click')) {\n            return this.hide();\n        }\n\n    }\n/**\n * Handle the mouse enter event - show or hide accordingly\n * @param {?} event\n * @return {?}\n */\nprotected onMouseEnter(event: MouseEvent): void {\n\n        // this is an show only trigger - if already open or it isn't a trigger do nothing\n        if (this.isVisible || !this.includes(this.showTriggers, 'mouseenter')) {\n            return;\n        }\n\n        // otherwise open the tooltip\n        this.show();\n    }\n/**\n * Handle the mouse leave event - show or hide accordingly\n * @param {?} event\n * @return {?}\n */\nprotected onMouseLeave(event: MouseEvent): void {\n\n        // this is an hide only trigger - if not open or it isn't a trigger do nothing\n        if (!this.isVisible || !this.includes(this.hideTriggers, 'mouseleave')) {\n            return;\n        }\n\n        // otherwise close the tooltip\n        this.hide();\n    }\n/**\n * Handle the focus event - show or hide accordingly\n * @param {?} event\n * @return {?}\n */\nprotected onFocus(event: Event): void {\n\n        // this is an show only trigger - if already open or it isn't a trigger do nothing\n        if (this.isVisible || !this.includes(this.showTriggers, 'focus')) {\n            return;\n        }\n\n        // otherwise open the tooltip\n        this.show();\n    }\n/**\n * Handle the blur event - show or hide accordingly\n * @param {?} event\n * @return {?}\n */\nprotected onBlur(event: Event): void {\n\n        // this is an hide only trigger - if not open or it isn't a trigger do nothing\n        if (!this.isVisible || !this.includes(this.hideTriggers, 'blur')) {\n            return;\n        }\n\n        // otherwise close the tooltip\n        this.hide();\n    }\n/**\n * Determine if the trigger element is focused\n * @return {?}\n */\nprivate isFocused(): boolean {\n        return document.activeElement === this._elementRef.nativeElement;\n    }\n/**\n * Programmatically update the aria-describedby property\n * @param {?} id\n * @return {?}\n */\nprotected setAriaDescribedBy(id: string | null): void {\n        if (id === null) {\n            this._renderer.removeAttribute(this._elementRef.nativeElement, 'aria-describedby');\n        } else {\n            this._renderer.setAttribute(this._elementRef.nativeElement, 'aria-describedby', id);\n        }\n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: '[uxTooltip]',\n    exportAs: 'ux-tooltip'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: ViewContainerRef, },\n{type: Overlay, },\n{type: ScrollDispatcher, },\n{type: ChangeDetectorRef, },\n{type: Renderer2, },\n{type: TooltipService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'content': [{ type: Input, args: ['uxTooltip', ] },],\n'disabled': [{ type: Input, args: ['tooltipDisabled', ] },],\n'customClass': [{ type: Input, args: ['tooltipClass', ] },],\n'role': [{ type: Input, args: ['tooltipRole', ] },],\n'context': [{ type: Input, args: ['tooltipContext', ] },],\n'delay': [{ type: Input, args: ['tooltipDelay', ] },],\n'isOpen': [{ type: Input },],\n'placement': [{ type: Input },],\n'showTriggers': [{ type: Input },],\n'hideTriggers': [{ type: Input },],\n'shown': [{ type: Output },],\n'hidden': [{ type: Output },],\n'isOpenChange': [{ type: Output },],\n};\n}\n\nfunction TooltipDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nTooltipDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTooltipDirective.ctorParameters;\n/** @type {?} */\nTooltipDirective.propDecorators;\n/**\n * Contains the content of the tooltip or a TemplateRef for more detailed content\n * @type {?}\n */\nTooltipDirective.prototype.content;\n/**\n * Allow the tooltip to be conditionally disabled\n * @type {?}\n */\nTooltipDirective.prototype.disabled;\n/**\n * All the user to add a custom class to the tooltip\n * @type {?}\n */\nTooltipDirective.prototype.customClass;\n/**\n * All the user to add a role to the tooltip - default is tooltip\n * @type {?}\n */\nTooltipDirective.prototype.role;\n/**\n * Provide the TemplateRef a context object\n * @type {?}\n */\nTooltipDirective.prototype.context;\n/**\n * Delay the showing of the tooltip by a number of miliseconds\n * @type {?}\n */\nTooltipDirective.prototype.delay;\n/**\n * Programmatically show and hide the tooltip\n * @type {?}\n */\nTooltipDirective.prototype.isOpen;\n/**\n * Customize how the tooltip should be positioned relative to the element\n * @type {?}\n */\nTooltipDirective.prototype.placement;\n/**\n * Specify which events should show the tooltip\n * @type {?}\n */\nTooltipDirective.prototype.showTriggers;\n/**\n * Specify which events should hide the tooltip\n * @type {?}\n */\nTooltipDirective.prototype.hideTriggers;\n/**\n * Emits an event when the tooltip is shown\n * @type {?}\n */\nTooltipDirective.prototype.shown;\n/**\n * Emits a event when the tooltip is hidden\n * @type {?}\n */\nTooltipDirective.prototype.hidden;\n/**\n * Allow two way binding to track the visibility of the tooltip\n * @type {?}\n */\nTooltipDirective.prototype.isOpenChange;\n/**\n * Keep track of the tooltip visibility\n * @type {?}\n */\nTooltipDirective.prototype.isVisible;\n/**\n * A reference to the CDK portal containing the overlay\n * @type {?}\n */\nTooltipDirective.prototype._portal;\n/**\n * A reference to the overlay the tooltip will be inserted into\n * @type {?}\n */\nTooltipDirective.prototype._overlayRef;\n/**\n * A reference to the instance of the tooltip component when created\n * @type {?}\n */\nTooltipDirective.prototype._instance;\n/**\n * This will emit when the directive is destroyed allowing us to unsubscribe all subscriptions automatically\n * @type {?}\n */\nTooltipDirective.prototype._onDestroy;\n/**\n * Store the timeout interval for cancelation\n * @type {?}\n */\nTooltipDirective.prototype._showTimeoutId;\n/**\n * Internally store the type of this component - usual for distinctions when extending this class\n * @type {?}\n */\nTooltipDirective.prototype._type;\n/** @type {?} */\nTooltipDirective.prototype._elementRef;\n/** @type {?} */\nTooltipDirective.prototype._viewContainerRef;\n/** @type {?} */\nTooltipDirective.prototype._overlay;\n/** @type {?} */\nTooltipDirective.prototype._scrollDispatcher;\n/** @type {?} */\nTooltipDirective.prototype._changeDetectorRef;\n/** @type {?} */\nTooltipDirective.prototype._renderer;\n/** @type {?} */\nTooltipDirective.prototype._tooltipService;\n}\n\n\nexport type AnchorPlacement = 'top' | 'right' | 'bottom' | 'left';\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable } from '@angular/core';\nimport { TooltipComponent } from './tooltip.component';\nimport { Subject } from 'rxjs/Subject';\nexport class TooltipService {\n    shown$ = new Subject<TooltipComponent>();\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction TooltipService_tsickle_Closure_declarations() {\n/** @type {?} */\nTooltipService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTooltipService.ctorParameters;\n/** @type {?} */\nTooltipService.prototype.shown$;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, TemplateRef, OnDestroy } from '@angular/core';\nimport { AnchorPlacement } from './tooltip.directive';\nimport { Subject } from 'rxjs/Subject';\n\nlet /** @type {?} */ uniqueTooltipId = 0;\nexport class TooltipComponent implements OnDestroy {\n/**\n * Define a unique id for each tooltip\n */\nid: string = `ux-tooltip-${++uniqueTooltipId}`;\n/**\n * Define the tooltip role\n */\nrole: string = 'tooltip';\n/**\n * The content of the tooltip, either a string or a TemplateRef for further customization\n */\ncontent: string | TemplateRef<any>;\n/**\n * Allow the user to supply a context for the tooltip TemplateRef\n */\ncontext: any;\n/**\n * The position the tooltip should display relative to the associated element\n */\nplacement: AnchorPlacement;\n/**\n * Allow a custom class to be added to the tooltip to allow custom styling\n */\ncustomClass: string = '';\n/**\n * Indicates whether or not the content is a string or a TemplateRef\n */\nisTemplateRef: boolean = false;\n/**\n * Emit when the tooltip need to update it's position\n */\nreposition$ = new Subject<void>();\n/**\n * @param {?} _changeDetectorRef\n */\nconstructor(protected _changeDetectorRef: ChangeDetectorRef) {}\n/**\n * Cleanup after the component is destroyed\n * @return {?}\n */\nngOnDestroy(): void {\n    this.reposition$.complete();\n  }\n/**\n * Inform the parent directive that it needs to recalulate the position\n * @return {?}\n */\nreposition(): void {\n    this.reposition$.next();\n  }\n/**\n * This will update the content of the tooltip and trigger change detection\n * @param {?} content\n * @return {?}\n */\nsetContent(content: string | TemplateRef<any>): void {\n    this.content = content;\n    this.isTemplateRef = content instanceof TemplateRef;\n    this._changeDetectorRef.markForCheck();\n  }\n/**\n * This will update the tooltip placement and trigger change detection\n * @param {?} placement\n * @return {?}\n */\nsetPlacement(placement: AnchorPlacement) {\n\n    if (!placement) {\n      return;\n    }\n\n    this.placement = placement;\n    this._changeDetectorRef.markForCheck();\n  }\n/**\n * This will set a custom class on the tooltip and trigger change detection\n * @param {?} customClass\n * @return {?}\n */\nsetClass(customClass: string): void {\n\n    if (!customClass) {\n      return;\n    }\n\n    this.customClass = customClass;\n    this._changeDetectorRef.markForCheck();\n  }\n/**\n * Updates the context used by the TemplateRef\n * @param {?} context\n * @return {?}\n */\nsetContext(context: any): void {\n\n    if (!context) {\n      return;\n    }\n\n    this.context = context;\n    this._changeDetectorRef.markForCheck();\n  }\n/**\n * Specify the tooltip role attribute\n * @param {?} role\n * @return {?}\n */\nsetRole(role: string): void {\n\n    if (!role) {\n      return;\n    }\n\n    this.role = role;\n    this._changeDetectorRef.markForCheck();\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'ux-tooltip',\n  template: `\n    <div class=\"tooltip in\" [id]=\"id\" [attr.role]=\"role\" [ngClass]=\"[placement, customClass]\">\n        <div class=\"tooltip-arrow\"></div>\n        <div class=\"tooltip-inner\" (cdkObserveContent)=\"reposition()\">\n            <ng-container *ngIf=\"!isTemplateRef\">{{ content }}</ng-container>\n            <ng-container *ngIf=\"isTemplateRef\" [ngTemplateOutlet]=\"content\" [ngTemplateOutletContext]=\"context\"></ng-container>\n        </div>\n    </div>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ChangeDetectorRef, },\n];\n}\n\nfunction TooltipComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nTooltipComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTooltipComponent.ctorParameters;\n/**\n * Define a unique id for each tooltip\n * @type {?}\n */\nTooltipComponent.prototype.id;\n/**\n * Define the tooltip role\n * @type {?}\n */\nTooltipComponent.prototype.role;\n/**\n * The content of the tooltip, either a string or a TemplateRef for further customization\n * @type {?}\n */\nTooltipComponent.prototype.content;\n/**\n * Allow the user to supply a context for the tooltip TemplateRef\n * @type {?}\n */\nTooltipComponent.prototype.context;\n/**\n * The position the tooltip should display relative to the associated element\n * @type {?}\n */\nTooltipComponent.prototype.placement;\n/**\n * Allow a custom class to be added to the tooltip to allow custom styling\n * @type {?}\n */\nTooltipComponent.prototype.customClass;\n/**\n * Indicates whether or not the content is a string or a TemplateRef\n * @type {?}\n */\nTooltipComponent.prototype.isTemplateRef;\n/**\n * Emit when the tooltip need to update it's position\n * @type {?}\n */\nTooltipComponent.prototype.reposition$;\n/** @type {?} */\nTooltipComponent.prototype._changeDetectorRef;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, OnInit, Input, Host, Pipe, PipeTransform } from '@angular/core';\nimport { FacetBaseComponent } from '../base/facet-base/facet-base.component';\nimport { Observable } from 'rxjs/Observable';\nimport { Facet } from '../models/facet';\nimport { FacetContainerComponent } from '../facet-container.component';\nimport { TypeaheadMatch } from 'ngx-bootstrap/typeahead';\nimport'rxjs/add/operator/map';\nimport'rxjs/add/observable/of';\nimport { Observer } from 'rxjs/Observer';\nexport class FacetTypeaheadListComponent extends FacetBaseComponent implements OnInit {\n\n     facets: Facet[] | Observable<Facet[]>;\n     header: string;\n     expanded: boolean = true;\n     typeaheadConfig: FacetTypeaheadListConfig = {};\n     suggestions: Facet[] = [];\n     simplified: boolean = true;\n\n    typeaheadOptions: Observable<Facet[]>;\n    searchQuery: string;\nprivate _nativeElement: HTMLElement = /** @type {?} */(( this._elementRef.nativeElement as HTMLElement));\nprivate _defaultTypeaheadConfig: FacetTypeaheadListConfig = {\n        placeholder: '',\n        maxResults: 50,\n        minCharacters: 1\n    };\n/**\n * @return {?}\n */\nngOnInit() {\n\n        // wrap the observable and filter out any already selected items or any disabled items\n        if (this.facets instanceof Observable) {\n\n            // handle an observable of data\n            this.typeaheadOptions = Observable.from(this.facets).map((facets: Facet[]) => {\n\n                // remove disabled facets, selected facets and facets that dont match search term\n                return facets.filter(facet => !facet.disabled)\n                    .filter(facet => !this.selected.find(selectedFacet => selectedFacet === facet))\n                    .filter(facet => facet.title.toUpperCase().includes(this.searchQuery.toUpperCase()));\n            });\n\n        } else {\n\n            // handle an array of data\n            this.typeaheadOptions = Observable.of(this.facets).map((facets: Facet[]) => {\n\n                // remove disabled facets, selected facets and facets that dont match search term\n                return facets.filter(facet => !facet.disabled)\n                    .filter(facet => !this.selected.find(selectedFacet => selectedFacet === facet))\n                    .filter(facet => facet.title.toUpperCase().includes(this.searchQuery.toUpperCase()));\n            });\n        }\n\n        // provide default values for typeahead config\n        for (let /** @type {?} */ prop in this._defaultTypeaheadConfig) {\n\n            // check if prop has been defined in the users typeahead config - if not set default value\n            if (this.typeaheadConfig.hasOwnProperty(prop) === false) {\n                this.typeaheadConfig[prop] = this._defaultTypeaheadConfig[prop];\n            }\n        }\n    }\n/**\n * @param {?} typeaheadOption\n * @return {?}\n */\nselectOption(typeaheadOption: TypeaheadMatch) {\n\n        // check to make sure that the item is not currently selected\n        if (this.selected.find(facet => facet === typeaheadOption.item)) {\n            return;\n        }\n\n        // select the facet\n        this.selectFacet(typeaheadOption.item);\n\n        // clear the typeahead\n        this.searchQuery = '';\n    }\n/**\n * @return {?}\n */\nscrollToFocused(): void {\n\n        let /** @type {?} */ dropdown = this._nativeElement.querySelector('.dropdown-menu');\n\n        // delay to allow the typeahead ui to update\n        setTimeout(() => {\n\n            // find the currently active element if there is one\n            let /** @type {?} */ activeElement = dropdown.querySelector('.dropdown-menu > li.active');\n\n            if (activeElement) {\n\n                // check if element is not in view\n                let /** @type {?} */ elementBounds = activeElement.getBoundingClientRect();\n                let /** @type {?} */ dropdownBounds = dropdown.getBoundingClientRect();\n\n                if (elementBounds.top < dropdownBounds.top) {\n                    dropdown.scrollTop += elementBounds.top - dropdownBounds.top;\n                }\n\n                if (elementBounds.bottom > dropdownBounds.bottom) {\n                    dropdown.scrollTop += elementBounds.bottom - dropdownBounds.bottom;\n                }\n            }\n        });\n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-facet-typeahead-list',\n    template: `\n      <ux-facet-header [header]=\"header\" [(expanded)]=\"expanded\"></ux-facet-header>\n\n      <div class=\"facet-typeahead-list-container\" *ngIf=\"expanded\">\n\n          <div class=\"facet-typeahead-list-selected-container\" *ngIf=\"suggestions?.length > 0\">\n\n              <div class=\"facet-typeahead-list-selected-option\" tabindex=\"0\" *ngFor=\"let facet of suggestions\" (click)=\"toggleFacetSelection(facet)\"\n                  (keyup.enter)=\"toggleFacetSelection(facet)\">\n\n                  <ux-checkbox [clickable]=\"false\" [value]=\"isFacetSelected(facet)\" [simplified]=\"simplified\">\n                      <span class=\"facet-typeahead-list-selected-option-title\">{{ facet.title }}</span>\n                      <span class=\"facet-typeahead-list-selected-option-count\">({{ facet.count }})</span>\n                  </ux-checkbox>\n\n              </div>\n\n          </div>\n\n          <div class=\"facet-typeahead-list-control\">\n\n              <!-- Create Typeahead Control -->\n              <input type=\"text\" class=\"form-control\" [placeholder]=\"typeaheadConfig?.placeholder\" [typeahead]=\"typeaheadOptions\" [(ngModel)]=\"searchQuery\"\n                  [typeaheadMinLength]=\"typeaheadConfig?.minCharacters\" [typeaheadOptionsLimit]=\"typeaheadConfig?.maxResults\" [typeaheadWaitMs]=\"typeaheadConfig?.delay\"\n                  (typeaheadOnSelect)=\"selectOption($event)\" [typeaheadItemTemplate]=\"facetOptionTemplate\" (keyup.ArrowUp)=\"scrollToFocused()\" (keyup.ArrowDown)=\"scrollToFocused()\">\n\n          </div>\n\n      </div>\n\n      <ng-template #facetOptionTemplate let-model=\"item\" let-index=\"index\">\n          <p class=\"facet-typeahead-list-option\"><span [innerHTML]=\"model.title | facetTypeaheadHighlight: searchQuery\"></span> <span class=\"facet-typeahead-list-option-count\"\n                  *ngIf=\"model.count\">({{ model.count }})</span></p>\n      </ng-template>\n    `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'facets': [{ type: Input },],\n'header': [{ type: Input },],\n'expanded': [{ type: Input },],\n'typeaheadConfig': [{ type: Input },],\n'suggestions': [{ type: Input },],\n'simplified': [{ type: Input },],\n};\n}\n\nfunction FacetTypeaheadListComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nFacetTypeaheadListComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFacetTypeaheadListComponent.ctorParameters;\n/** @type {?} */\nFacetTypeaheadListComponent.propDecorators;\n/** @type {?} */\nFacetTypeaheadListComponent.prototype.facets;\n/** @type {?} */\nFacetTypeaheadListComponent.prototype.header;\n/** @type {?} */\nFacetTypeaheadListComponent.prototype.expanded;\n/** @type {?} */\nFacetTypeaheadListComponent.prototype.typeaheadConfig;\n/** @type {?} */\nFacetTypeaheadListComponent.prototype.suggestions;\n/** @type {?} */\nFacetTypeaheadListComponent.prototype.simplified;\n/** @type {?} */\nFacetTypeaheadListComponent.prototype.typeaheadOptions;\n/** @type {?} */\nFacetTypeaheadListComponent.prototype.searchQuery;\n/** @type {?} */\nFacetTypeaheadListComponent.prototype._nativeElement;\n/** @type {?} */\nFacetTypeaheadListComponent.prototype._defaultTypeaheadConfig;\n}\n\n\nexport interface FacetTypeaheadListConfig {\n    placeholder?: string;\n    minCharacters?: number;\n    maxResults?: number;\n    delay?: number;\n}\nexport class FacetTypeaheadHighlight implements PipeTransform {\n/**\n * @param {?} value\n * @param {?} searchQuery\n * @return {?}\n */\ntransform(value: string, searchQuery: string): string {\n        let /** @type {?} */ regex = new RegExp(searchQuery, 'i');\n        return value.replace(regex, `<b class=\"facet-typeahead-highlighted\">${ value.match(regex) }</b>`);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Pipe, args: [{\n    name: 'facetTypeaheadHighlight'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction FacetTypeaheadHighlight_tsickle_Closure_declarations() {\n/** @type {?} */\nFacetTypeaheadHighlight.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFacetTypeaheadHighlight.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Input } from '@angular/core';\nimport { FacetBaseComponent } from '../base/facet-base/facet-base.component';\nimport { Facet } from '../models/facet';\nexport class FacetCheckListComponent extends FacetBaseComponent {\n\n     facets: Facet[] = [];\n     header: string;\n     scrollbar: boolean = true;\n     expanded: boolean = true;\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-facet-check-list',\n    template: `\n      <ux-facet-header [header]=\"header\" [(expanded)]=\"expanded\"></ux-facet-header>\n\n      <!-- Create a container which will show when section is expanded -->\n      <div class=\"facet-check-list-container\" [class.facet-check-list-scrollbar]=\"scrollbar\" *ngIf=\"expanded\">\n\n          <!-- Iterate through each possible facet -->\n          <div class=\"facet-check-list-item\" *ngFor=\"let facet of facets\" [class.facet-active]=\"isFacetSelected(facet)\" tabindex=\"0\"\n              (click)=\"toggleFacetSelection(facet)\" (keyup.enter)=\"toggleFacetSelection(facet)\" [class.disabled]=\"facet.disabled\">\n\n              <!-- Show check icon to indicate the state -->\n              <span class=\"facet-check-list-item-check\">\n                  <span class=\"hpe-icon hpe-active\"></span>\n              </span>\n\n              <!-- Display the title -->\n              <span class=\"facet-check-list-item-title\">{{ facet.title }}</span>\n\n              <!-- Display the count if specified -->\n              <span class=\"facet-check-list-item-count\" *ngIf=\"facet.count !== undefined\">({{ facet.count }})</span>\n          </div>\n      </div>\n    `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'facets': [{ type: Input },],\n'header': [{ type: Input },],\n'scrollbar': [{ type: Input },],\n'expanded': [{ type: Input },],\n};\n}\n\nfunction FacetCheckListComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nFacetCheckListComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFacetCheckListComponent.ctorParameters;\n/** @type {?} */\nFacetCheckListComponent.propDecorators;\n/** @type {?} */\nFacetCheckListComponent.prototype.facets;\n/** @type {?} */\nFacetCheckListComponent.prototype.header;\n/** @type {?} */\nFacetCheckListComponent.prototype.scrollbar;\n/** @type {?} */\nFacetCheckListComponent.prototype.expanded;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Output, EventEmitter, Input } from '@angular/core';\nexport class FacetHeaderComponent {\n\n     header: string;\n     canExpand: boolean = true;    \n     expanded: boolean = true;\n     expandedChange: EventEmitter<boolean> = new EventEmitter<boolean>();\n/**\n * @return {?}\n */\ntoggleExpand(): void {\n\n        // if not expandable then do nothing\n        if (this.canExpand) {\n            this.expanded = !this.expanded;\n            this.expandedChange.emit(this.expanded);\n        }\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-facet-header',\n    template: `\n      <span class=\"facet-header-title\">{{ header }}</span>\n      <span class=\"hpe-icon\" [class.hpe-down]=\"expanded\" [class.hpe-previous]=\"!expanded\" *ngIf=\"canExpand\"></span>\n    `,\n    host: {\n        'tabindex': '0',\n        '(click)': 'toggleExpand()',\n        '(keyup.enter)': 'toggleExpand()'\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'header': [{ type: Input },],\n'canExpand': [{ type: Input },],\n'expanded': [{ type: Input },],\n'expandedChange': [{ type: Output },],\n};\n}\n\nfunction FacetHeaderComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nFacetHeaderComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFacetHeaderComponent.ctorParameters;\n/** @type {?} */\nFacetHeaderComponent.propDecorators;\n/** @type {?} */\nFacetHeaderComponent.prototype.header;\n/** @type {?} */\nFacetHeaderComponent.prototype.canExpand;\n/** @type {?} */\nFacetHeaderComponent.prototype.expanded;\n/** @type {?} */\nFacetHeaderComponent.prototype.expandedChange;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Host, Input, Output, EventEmitter, OnInit, ElementRef } from '@angular/core';\nimport { FacetContainerComponent } from '../../facet-container.component';\nimport { FacetEvent, FacetDeselectAll, FacetDeselect, FacetSelect } from '../../facet-events';\nimport { Facet } from '../../models/facet';\nimport { Subject } from 'rxjs/Subject';\nimport'rxjs/add/operator/filter';\nexport class FacetBaseComponent implements OnInit {\n\n     selected: Facet[] = [];\n     selectedChange: EventEmitter<Facet[]> = new EventEmitter<Facet[]>();\n\n     events: Subject<FacetEvent> = new Subject<FacetEvent>();\n/**\n * @param {?} facetContainer\n * @param {?} _elementRef\n */\nconstructor(\nprivate facetContainer: FacetContainerComponent,\npublic _elementRef: ElementRef) {\n\n        if (facetContainer) {\n\n            // subscribe to any deselect events from the facet container\n            facetContainer.events.filter(event => event instanceof FacetDeselect)\n                .filter((event: FacetDeselect) => !!this.selected.find(facet => facet === event.facet))\n                .subscribe((event: FacetDeselect) => this.deselectFacet(event.facet));\n\n            // subscribe to any deselect all events from facet container\n            facetContainer.events.filter(event => event instanceof FacetDeselectAll).subscribe(_ => this.deselectAll());\n\n        }\n    }\n/**\n * @return {?}\n */\nngOnInit(): void {\n        // check if there should be any facets initially selected\n        if (this.facetContainer) {\n            this.selected.forEach(facet => this.facetContainer.selectFacet(facet));\n        }\n    }\n/**\n * @param {?} facet\n * @return {?}\n */\nselectFacet(facet: Facet): void {\n\n        // if the facet is disabled it should not be selected\n        if (facet.disabled) {\n            return;\n        }\n\n        // add the facet to the list of selected facets\n        this.selected.push(facet);\n\n        // send the new value to the event emitter\n        this.selectedChange.emit(this.selected);\n\n        // fire the event to the observable\n        this.triggerEvent(new FacetSelect(facet));\n\n        // tell the facet container about the selected facet\n        if (this.facetContainer) {\n            this.facetContainer.selectFacet(facet);\n        }\n    }\n/**\n * @param {?} facet\n * @return {?}\n */\ndeselectFacet(facet: Facet): void {\n\n        // find facet to remove\n        let /** @type {?} */ index = this.selected.findIndex(selectedFacet => selectedFacet === facet);\n\n        // only continue if facet is found\n        if (index !== -1) {\n\n            // remove the facet from the selected list\n            this.selected.splice(index, 1);\n\n            // emit the changes to selected event emitter\n            this.selectedChange.emit(this.selected);\n\n            // fire the event to the observable\n            this.triggerEvent(new FacetDeselect(facet));\n\n            // deselect the facet in the facet container\n            if (this.facetContainer) {\n                this.facetContainer.deselectFacet(facet);\n            }\n        }\n    }\n/**\n * @return {?}\n */\ndeselectAll(): void {\n\n        // remove all selected facets\n        this.selected = [];\n\n        // fire the event to the observable\n        this.triggerEvent(new FacetDeselectAll());\n\n        // emit the changes to the selected event emitter\n        this.selectedChange.emit(this.selected);\n    }\n/**\n * @param {?} facet\n * @return {?}\n */\ntoggleFacetSelection(facet: Facet): void {\n\n        // if the facet is selected then deselect - otherwise select it\n        if (this.isFacetSelected(facet)) {\n            this.deselectFacet(facet);\n        } else {\n            this.selectFacet(facet);\n        }\n\n    }\n/**\n * @param {?} facet\n * @return {?}\n */\nisFacetSelected(facet: Facet): boolean {\n        // determine if a facet is currently selected\n        return !!this.selected.find(selectedFacet => selectedFacet === facet);\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nprivate triggerEvent(event: FacetEvent): void {\n        this.events.next(event);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-facet-base',\n    template: '',\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: FacetContainerComponent, decorators: [{ type: Host }, ]},\n{type: ElementRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'selected': [{ type: Input },],\n'selectedChange': [{ type: Output },],\n'events': [{ type: Output },],\n};\n}\n\nfunction FacetBaseComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nFacetBaseComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFacetBaseComponent.ctorParameters;\n/** @type {?} */\nFacetBaseComponent.propDecorators;\n/** @type {?} */\nFacetBaseComponent.prototype.selected;\n/** @type {?} */\nFacetBaseComponent.prototype.selectedChange;\n/** @type {?} */\nFacetBaseComponent.prototype.events;\n/** @type {?} */\nFacetBaseComponent.prototype.facetContainer;\n/** @type {?} */\nFacetBaseComponent.prototype._elementRef;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Input, EventEmitter, Output } from '@angular/core';\nimport { FacetEvent, FacetSelect, FacetDeselect, FacetDeselectAll } from './facet-events';\nimport { Facet } from './models/facet';\nexport class FacetContainerComponent {\n\n     header: string = 'Selected:';\n     clearTooltip: string = 'Clear All';\n     emptyText: string = 'No Items';\n     facets: Facet[] = [];\n\n     facetsChange: EventEmitter<Facet[]> = new EventEmitter<Facet[]>();\n     events: EventEmitter<FacetEvent> = new EventEmitter<FacetEvent>();\n/**\n * @param {?} facet\n * @return {?}\n */\nselectFacet(facet: Facet): void {\n        // push the facet on to the list\n        this.facets.push(facet);\n\n        // update the two way binding\n        this.facetsChange.emit(this.facets);\n\n        // trigger event\n        this.triggerEvent(new FacetSelect(facet));\n    }\n/**\n * @param {?} facet\n * @return {?}\n */\ndeselectFacet(facet: Facet): void {\n\n        // find the index of the item in the selected array\n        let /** @type {?} */ idx = this.facets.findIndex(selectedFacet => facet === selectedFacet);\n\n        // if match there was no match then finish\n        if (idx === -1) {\n            return;\n        }\n\n        // remove the last item\n        this.facets.splice(idx, 1);\n\n        // update the two way binding\n        this.facetsChange.emit(this.facets);\n\n        // trigger event\n        this.triggerEvent(new FacetDeselect(facet));\n    }\n/**\n * @return {?}\n */\ndeselectAllFacets(): void {\n\n        // empty the selected array\n        this.facets = [];\n\n        // update the two way binding\n        this.facetsChange.emit(this.facets);\n\n        // trigger event\n        this.triggerEvent(new FacetDeselectAll());\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nprivate triggerEvent(event: FacetEvent) {\n        this.events.next(event);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-facet-container',\n    template: `\n      <!-- Display Any Selected Facets -->\n      <div class=\"facets-selected-container\">\n\n          <!-- Display Title an Clear Button -->\n          <div class=\"facets-selected-header-container\">\n\n              <!-- Show The Selected Text -->\n              <span class=\"facets-selected-header-label\">{{ header }}</span>\n\n              <!-- Add a Clear Button -->\n              <div class=\"facets-selected-clear-button\" tabindex=\"0\" [uxTooltip]=\"clearTooltip\" placement=\"left\" (click)=\"deselectAllFacets()\"\n                  (keyup.enter)=\"deselectAllFacets()\" *ngIf=\"facets.length > 0\">\n\n                  <svg class=\"facets-selected-clear-graphic\" viewBox=\"0 0 19 12\" shape-rendering=\"geometricPrecision\">\n                      <rect class=\"light-grey\" x=\"0\" y=\"2\" width=\"7\" height=\"2\"></rect>\n                      <rect class=\"dark-grey\" x=\"0\" y=\"5\" width=\"9\" height=\"2\"></rect>\n                      <rect class=\"light-grey\" x=\"0\" y=\"8\" width=\"7\" height=\"2\"></rect>\n                      <path class=\"dark-grey\" d=\"M9,1 h1 l9,9 v1 h-1 l-9,-9 v-1 Z\"></path>\n                      <path class=\"dark-grey\" d=\"M9,11 v-1 l9,-9 h1 v1 l-9,9 h-1 Z\"></path>\n                  </svg>\n              </div>\n\n          </div>\n\n          <!-- Display Tags For Selected Items -->\n          <div class=\"facets-selected-list\">\n\n              <!-- Show Selected Tags -->\n              <div class=\"facet-selected-tag\" tabindex=\"0\" *ngFor=\"let facet of facets\" (mousedown)=\"$event.preventDefault()\" (click)=\"deselectFacet(facet)\" (keyup.enter)=\"deselectFacet(facet)\">\n\n                  <!-- Display Label -->\n                  <span class=\"facet-selected-tag-label\">{{ facet.title }}</span>\n\n                  <!-- Display Remove Icon -->\n                  <span class=\"hpe-icon hpe-close\"></span>\n              </div>\n\n          </div>\n\n          <!-- Show Message Here if No Facets Selected -->\n          <p class=\"facets-selected-none-label\" *ngIf=\"emptyText && facets.length === 0\">{{ emptyText }}</p>\n\n      </div>\n\n      <!-- Any Facet Elements Should be Added Here By User -->\n      <div class=\"facets-region\">\n          <ng-content></ng-content>\n      </div>\n    `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'header': [{ type: Input },],\n'clearTooltip': [{ type: Input },],\n'emptyText': [{ type: Input },],\n'facets': [{ type: Input },],\n'facetsChange': [{ type: Output },],\n'events': [{ type: Output },],\n};\n}\n\nfunction FacetContainerComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nFacetContainerComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFacetContainerComponent.ctorParameters;\n/** @type {?} */\nFacetContainerComponent.propDecorators;\n/** @type {?} */\nFacetContainerComponent.prototype.header;\n/** @type {?} */\nFacetContainerComponent.prototype.clearTooltip;\n/** @type {?} */\nFacetContainerComponent.prototype.emptyText;\n/** @type {?} */\nFacetContainerComponent.prototype.facets;\n/** @type {?} */\nFacetContainerComponent.prototype.facetsChange;\n/** @type {?} */\nFacetContainerComponent.prototype.events;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Facet } from './models/facet';\nexport class FacetSelect {\n/**\n * @param {?} facet\n */\nconstructor(public facet: Facet) {}\n}\n\nfunction FacetSelect_tsickle_Closure_declarations() {\n/** @type {?} */\nFacetSelect.prototype.facet;\n}\n\nexport class FacetDeselect {\n/**\n * @param {?} facet\n */\nconstructor(public facet: Facet) {}\n}\n\nfunction FacetDeselect_tsickle_Closure_declarations() {\n/** @type {?} */\nFacetDeselect.prototype.facet;\n}\n\nexport class FacetDeselectAll {\nconstructor() {}\n}\n\nexport type FacetEvent = FacetSelect | FacetDeselect | FacetDeselectAll;","import { CommonModule } from '@angular/common';\nimport { NgModule, ModuleWithProviders } from '@angular/core';\n\nimport { TypeaheadContainerComponent } from './typeahead-container.component';\nimport { TypeaheadDirective } from './typeahead.directive';\nimport { ComponentLoaderFactory } from '../component-loader/index';\nimport { PositioningService } from '../positioning/index';\n\n\nexport class TypeaheadModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: TypeaheadModule,\n      providers: [ComponentLoaderFactory, PositioningService]\n    };\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  imports: [CommonModule],\n  declarations: [TypeaheadContainerComponent, TypeaheadDirective],\n  exports: [TypeaheadContainerComponent, TypeaheadDirective],\n  entryComponents: [TypeaheadContainerComponent]\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/* tslint:disable:max-file-line-count */\nimport {\n  ChangeDetectorRef,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  HostListener,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  Renderer2,\n  TemplateRef,\n  ViewContainerRef\n} from '@angular/core';\nimport { NgControl } from '@angular/forms';\nimport 'rxjs/add/observable/from';\nimport 'rxjs/add/operator/debounceTime';\nimport 'rxjs/add/operator/filter';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/switchMap';\nimport 'rxjs/add/operator/mergeMap';\nimport 'rxjs/add/operator/toArray';\n\nimport { Observable } from 'rxjs/Observable';\nimport { Subscription } from 'rxjs/Subscription';\nimport { ComponentLoader, ComponentLoaderFactory } from '../component-loader/index';\nimport { TypeaheadContainerComponent } from './typeahead-container.component';\nimport { TypeaheadMatch } from './typeahead-match.class';\nimport { getValueFromObject, latinize, tokenize } from './typeahead-utils';\n\n\nexport class TypeaheadDirective implements OnInit, OnDestroy {\n  /** options source, can be Array of strings, objects or\n   * an Observable for external matching process\n   */\n   typeahead: any;\n  /** minimal no of characters that needs to be entered before\n   * typeahead kicks-in. When set to 0, typeahead shows on focus with full\n   * list of options (limited as normal by typeaheadOptionsLimit)\n   */\n   typeaheadMinLength: number = void 0;\n  /** minimal wait time after last character typed before typeahead kicks-in */\n   typeaheadWaitMs: number;\n  /** maximum length of options items list */\n   typeaheadOptionsLimit: number;\n  /** when options source is an array of objects, the name of field\n   * that contains the options value, we use array item as option in case\n   * of this field is missing. Supports nested properties and methods.\n   */\n   typeaheadOptionField: string;\n  /** when options source is an array of objects, the name of field that\n   * contains the group value, matches are grouped by this field when set.\n   */\n   typeaheadGroupField: string;\n  /** should be used only in case of typeahead attribute is array.\n   * If true - loading of options will be async, otherwise - sync.\n   * true make sense if options array is large.\n   */\n   typeaheadAsync: boolean = void 0;\n  /** match latin symbols.\n   * If true the word súper would match super and vice versa.\n   */\n   typeaheadLatinize = true;\n  /** Can be use to search words by inserting a single white space between each characters\n   *  for example 'C a l i f o r n i a' will match 'California'.\n   */\n   typeaheadSingleWords = true;\n  /** should be used only in case typeaheadSingleWords attribute is true.\n   * Sets the word delimiter to break words. Defaults to space.\n   */\n   typeaheadWordDelimiters = ' ';\n  /** should be used only in case typeaheadSingleWords attribute is true.\n   * Sets the word delimiter to match exact phrase.\n   * Defaults to simple and double quotes.\n   */\n   typeaheadPhraseDelimiters = '\\'\"';\n  /** used to specify a custom item template.\n   * Template variables exposed are called item and index;\n   */\n   typeaheadItemTemplate: TemplateRef<any>;\n  /** used to specify a custom options list template.\n   * Template variables: matches, itemTemplate, query\n   */\n   optionsListTemplate: TemplateRef<any>;\n  /** specifies if typeahead is scrollable  */\n   typeaheadScrollable = false;\n  /** specifies number of options to show in scroll view  */\n   typeaheadOptionsInScrollableView = 5;\n  /** fired when 'busy' state of this component was changed,\n   * fired on async mode only, returns boolean\n   */\n   typeaheadLoading = new EventEmitter<boolean>();\n  /** fired on every key event and returns true\n   * in case of matches are not detected\n   */\n   typeaheadNoResults = new EventEmitter<boolean>();\n  /** fired when option was selected, return object with data of this option */\n   typeaheadOnSelect = new EventEmitter<TypeaheadMatch>();\n  /** fired when blur event occurres. returns the active item */\n   typeaheadOnBlur = new EventEmitter<any>();\n\n  /**\n   * A selector specifying the element the typeahead should be appended to.\n   * Currently only supports \"body\".\n   */\n   container: string;\n\n  /** This attribute indicates that the dropdown should be opened upwards */\n   dropup = false;\n\n  // not yet implemented\n  /** if false restrict model values to the ones selected from the popup only will be provided */\n  // @Input() protected typeaheadEditable:boolean;\n  /** if false the first match automatically will not be focused as you type */\n  // @Input() protected typeaheadFocusFirst:boolean;\n  /** format the ng-model result after selection */\n  // @Input() protected typeaheadInputFormatter:any;\n  /** if true automatically select an item when there is one option that exactly matches the user input */\n  // @Input() protected typeaheadSelectOnExact:boolean;\n  /**  if true select the currently highlighted match on blur */\n  // @Input() protected typeaheadSelectOnBlur:boolean;\n  /**  if false don't focus the input element the typeahead directive is associated with on selection */\n    // @Input() protected typeaheadFocusOnSelect:boolean;\n\n  _container: TypeaheadContainerComponent;\n  isTypeaheadOptionsListActive = false;\n\n  protected keyUpEventEmitter: EventEmitter<any> = new EventEmitter();\n  protected _matches: TypeaheadMatch[];\n  protected placement = 'bottom-left';\n  // protected popup:ComponentRef<TypeaheadContainerComponent>;\n\n  private _typeahead: ComponentLoader<TypeaheadContainerComponent>;\n  private _subscriptions: Subscription[] = [];\n  private _outsideClickListener: Function;\n\n  constructor(private ngControl: NgControl,\n              private element: ElementRef,\n              viewContainerRef: ViewContainerRef,\n              private renderer: Renderer2,\n              cis: ComponentLoaderFactory,\n              private changeDetection: ChangeDetectorRef) {\n    this._typeahead = cis.createLoader<TypeaheadContainerComponent>(\n      element,\n      viewContainerRef,\n      renderer\n    );\n  }\n\n  ngOnInit(): void {\n    this.typeaheadOptionsLimit = this.typeaheadOptionsLimit || 20;\n    this.typeaheadMinLength =\n      this.typeaheadMinLength === void 0 ? 1 : this.typeaheadMinLength;\n    this.typeaheadWaitMs = this.typeaheadWaitMs || 0;\n\n    // async should be false in case of array\n    if (\n      this.typeaheadAsync === undefined &&\n      !(this.typeahead instanceof Observable)\n    ) {\n      this.typeaheadAsync = false;\n    }\n\n    if (this.typeahead instanceof Observable) {\n      this.typeaheadAsync = true;\n    }\n\n    if (this.typeaheadAsync) {\n      this.asyncActions();\n    } else {\n      this.syncActions();\n    }\n  }\n\n  \n  onInput(e: any): void {\n    // For `<input>`s, use the `value` property. For others that don't have a\n    // `value` (such as `<span contenteditable=\"true\">`), use either\n    // `textContent` or `innerText` (depending on which one is supported, i.e.\n    // Firefox or IE).\n    const value =\n      e.target.value !== undefined\n        ? e.target.value\n        : e.target.textContent !== undefined\n        ? e.target.textContent\n        : e.target.innerText;\n    if (value != null && value.trim().length >= this.typeaheadMinLength) {\n      this.typeaheadLoading.emit(true);\n      this.keyUpEventEmitter.emit(e.target.value);\n    } else {\n      this.typeaheadLoading.emit(false);\n      this.typeaheadNoResults.emit(false);\n      this.hide();\n    }\n  }\n\n  \n  onChange(e: any): void {\n    if (this._container) {\n      // esc\n      if (e.keyCode === 27) {\n        this.hide();\n\n        return;\n      }\n\n      // up\n      if (e.keyCode === 38) {\n        this._container.prevActiveMatch();\n\n        return;\n      }\n\n      // down\n      if (e.keyCode === 40) {\n        this._container.nextActiveMatch();\n\n        return;\n      }\n\n      // enter, tab\n      if (e.keyCode === 13) {\n        this._container.selectActiveMatch();\n\n        return;\n      }\n    }\n  }\n\n  \n  \n  onFocus(): void {\n    if (this.typeaheadMinLength === 0) {\n      this.typeaheadLoading.emit(true);\n      this.keyUpEventEmitter.emit(this.element.nativeElement.value || '');\n    }\n  }\n\n  \n  onBlur(): void {\n    if (this._container && !this._container.isFocused) {\n      this.typeaheadOnBlur.emit(this._container.active);\n    }\n  }\n\n  \n  onKeydown(e: any): void {\n    // no container - no problems\n    if (!this._container) {\n      return;\n    }\n\n    // if an item is visible - prevent form submission\n    if (e.keyCode === 13) {\n      e.preventDefault();\n\n      return;\n    }\n\n    // if an item is visible - don't change focus\n    if (e.keyCode === 9) {\n      e.preventDefault();\n      this._container.selectActiveMatch();\n\n      return;\n    }\n  }\n\n  changeModel(match: TypeaheadMatch): void {\n    const valueStr: string = match.value;\n    this.ngControl.viewToModelUpdate(valueStr);\n    (this.ngControl.control).setValue(valueStr);\n    this.changeDetection.markForCheck();\n    this.hide();\n  }\n\n  get matches(): any[] {\n    return this._matches;\n  }\n\n  show(): void {\n    this._typeahead\n      .attach(TypeaheadContainerComponent)\n      // todo: add append to body, after updating positioning service\n      .to(this.container)\n      .position({attachment: `${this.dropup ? 'top' : 'bottom'} left`})\n      .show({\n        typeaheadRef: this,\n        placement: this.placement,\n        animation: false,\n        dropup: this.dropup\n      });\n\n    this._outsideClickListener = this.renderer.listen('document', 'click', (e: MouseEvent) => {\n      if (this.typeaheadMinLength === 0 && this.element.nativeElement.contains(e.target)) {\n        return;\n      }\n      this.onOutsideClick();\n    });\n\n    this._container = this._typeahead.instance;\n    this._container.parent = this;\n    // This improves the speed as it won't have to be done for each list item\n    const normalizedQuery = (this.typeaheadLatinize\n      ? latinize(this.ngControl.control.value)\n      : this.ngControl.control.value)\n      .toString()\n      .toLowerCase();\n    this._container.query = this.typeaheadSingleWords\n      ? tokenize(\n        normalizedQuery,\n        this.typeaheadWordDelimiters,\n        this.typeaheadPhraseDelimiters\n      )\n      : normalizedQuery;\n    this._container.matches = this._matches;\n    this.element.nativeElement.focus();\n  }\n\n  hide(): void {\n    if (this._typeahead.isShown) {\n      this._typeahead.hide();\n      this._outsideClickListener();\n      this._container = null;\n    }\n  }\n\n  onOutsideClick(): void {\n    if (this._container && !this._container.isFocused) {\n      this.hide();\n    }\n  }\n\n  ngOnDestroy(): any {\n    // clean up subscriptions\n    for (const sub of this._subscriptions) {\n      sub.unsubscribe();\n    }\n    this._typeahead.dispose();\n  }\n\n  protected asyncActions(): void {\n    this._subscriptions.push(\n      this.keyUpEventEmitter\n        .debounceTime(this.typeaheadWaitMs)\n        .switchMap(() => this.typeahead)\n        .subscribe((matches: any[]) => {\n          this.finalizeAsyncCall(matches);\n        })\n    );\n  }\n\n  protected syncActions(): void {\n    this._subscriptions.push(\n      this.keyUpEventEmitter\n        .debounceTime(this.typeaheadWaitMs)\n        .mergeMap((value: string) => {\n          const normalizedQuery = this.normalizeQuery(value);\n\n          return Observable.from(this.typeahead)\n            .filter((option: any) => {\n              return (\n                option &&\n                this.testMatch(this.normalizeOption(option), normalizedQuery)\n              );\n            })\n            .toArray();\n        })\n        .subscribe((matches: any[]) => {\n          this.finalizeAsyncCall(matches);\n        })\n    );\n  }\n\n  protected normalizeOption(option: any): any {\n    const optionValue: string = getValueFromObject(\n      option,\n      this.typeaheadOptionField\n    );\n    const normalizedOption = this.typeaheadLatinize\n      ? latinize(optionValue)\n      : optionValue;\n\n    return normalizedOption.toLowerCase();\n  }\n\n  protected normalizeQuery(value: string): any {\n    // If singleWords, break model here to not be doing extra work on each\n    // iteration\n    let normalizedQuery: any = (this.typeaheadLatinize\n      ? latinize(value)\n      : value)\n      .toString()\n      .toLowerCase();\n    normalizedQuery = this.typeaheadSingleWords\n      ? tokenize(\n        normalizedQuery,\n        this.typeaheadWordDelimiters,\n        this.typeaheadPhraseDelimiters\n      )\n      : normalizedQuery;\n\n    return normalizedQuery;\n  }\n\n  protected testMatch(match: string, test: any): boolean {\n    let spaceLength: number;\n\n    if (typeof test === 'object') {\n      spaceLength = test.length;\n      for (let i = 0; i < spaceLength; i += 1) {\n        if (test[i].length > 0 && match.indexOf(test[i]) < 0) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n\n    return match.indexOf(test) >= 0;\n  }\n\n  protected finalizeAsyncCall(matches: any[]): void {\n    this.prepareMatches(matches);\n\n    this.typeaheadLoading.emit(false);\n    this.typeaheadNoResults.emit(!this.hasMatches());\n\n    if (!this.hasMatches()) {\n      this.hide();\n\n      return;\n    }\n\n    if (this._container) {\n      // This improves the speed as it won't have to be done for each list item\n      const normalizedQuery = (this.typeaheadLatinize\n        ? latinize(this.ngControl.control.value)\n        : this.ngControl.control.value)\n        .toString()\n        .toLowerCase();\n      this._container.query = this.typeaheadSingleWords\n        ? tokenize(\n          normalizedQuery,\n          this.typeaheadWordDelimiters,\n          this.typeaheadPhraseDelimiters\n        )\n        : normalizedQuery;\n      this._container.matches = this._matches;\n    } else {\n      this.show();\n    }\n  }\n\n  protected prepareMatches(options: any[]): void {\n    const limited: any[] = options.slice(0, this.typeaheadOptionsLimit);\n\n    if (this.typeaheadGroupField) {\n      let matches: TypeaheadMatch[] = [];\n\n      // extract all group names\n      const groups = limited\n        .map((option: any) =>\n          getValueFromObject(option, this.typeaheadGroupField)\n        )\n        .filter((v: string, i: number, a: any[]) => a.indexOf(v) === i);\n\n      groups.forEach((group: string) => {\n        // add group header to array of matches\n        matches.push(new TypeaheadMatch(group, group, true));\n\n        // add each item of group to array of matches\n        matches = matches.concat(\n          limited\n            .filter(\n              (option: any) =>\n                getValueFromObject(option, this.typeaheadGroupField) === group\n            )\n            .map(\n              (option: any) =>\n                new TypeaheadMatch(\n                  option,\n                  getValueFromObject(option, this.typeaheadOptionField)\n                )\n            )\n        );\n      });\n\n      this._matches = matches;\n    } else {\n      this._matches = limited.map(\n        (option: any) =>\n          new TypeaheadMatch(\n            option,\n            getValueFromObject(option, this.typeaheadOptionField)\n          )\n      );\n    }\n  }\n\n  protected hasMatches(): boolean {\n    return this._matches.length > 0;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{selector: '[typeahead]', exportAs: 'bs-typeahead'}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: NgControl, },\n{type: ElementRef, },\n{type: ViewContainerRef, },\n{type: Renderer2, },\n{type: ComponentLoaderFactory, },\n{type: ChangeDetectorRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'typeahead': [{ type: Input },],\n'typeaheadMinLength': [{ type: Input },],\n'typeaheadWaitMs': [{ type: Input },],\n'typeaheadOptionsLimit': [{ type: Input },],\n'typeaheadOptionField': [{ type: Input },],\n'typeaheadGroupField': [{ type: Input },],\n'typeaheadAsync': [{ type: Input },],\n'typeaheadLatinize': [{ type: Input },],\n'typeaheadSingleWords': [{ type: Input },],\n'typeaheadWordDelimiters': [{ type: Input },],\n'typeaheadPhraseDelimiters': [{ type: Input },],\n'typeaheadItemTemplate': [{ type: Input },],\n'optionsListTemplate': [{ type: Input },],\n'typeaheadScrollable': [{ type: Input },],\n'typeaheadOptionsInScrollableView': [{ type: Input },],\n'typeaheadLoading': [{ type: Output },],\n'typeaheadNoResults': [{ type: Output },],\n'typeaheadOnSelect': [{ type: Output },],\n'typeaheadOnBlur': [{ type: Output },],\n'container': [{ type: Input },],\n'dropup': [{ type: Input },],\n'onInput': [{ type: HostListener, args: ['input', ['$event'], ] },],\n'onChange': [{ type: HostListener, args: ['keyup', ['$event'], ] },],\n'onFocus': [{ type: HostListener, args: ['click', ] },{ type: HostListener, args: ['focus', ] },],\n'onBlur': [{ type: HostListener, args: ['blur', ] },],\n'onKeydown': [{ type: HostListener, args: ['keydown', ['$event'], ] },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {\n  ApplicationRef, ComponentFactoryResolver, ElementRef, Injectable, Injector,\n  NgZone, Renderer2, ViewContainerRef\n} from '@angular/core';\nimport { ComponentLoader } from './component-loader.class';\nimport { PositioningService } from '../positioning/index';\n\n\nexport class ComponentLoaderFactory {\n  constructor(private _componentFactoryResolver: ComponentFactoryResolver,\n              private _ngZone: NgZone,\n              private _injector: Injector,\n              private _posService: PositioningService,\n              private _applicationRef: ApplicationRef) {}\n\n  /**\n   *\n   * @param _elementRef\n   * @param _viewContainerRef\n   * @param _renderer\n   * @returns {ComponentLoader}\n   */\n  createLoader<T>(_elementRef: ElementRef,\n                  _viewContainerRef: ViewContainerRef,\n                  _renderer: Renderer2): ComponentLoader<T> {\n    return new ComponentLoader<T>(\n      _viewContainerRef,\n      _renderer,\n      _elementRef,\n      this._injector,\n      this._componentFactoryResolver,\n      this._ngZone,\n      this._applicationRef,\n      this._posService\n    );\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ComponentFactoryResolver, },\n{type: NgZone, },\n{type: Injector, },\n{type: PositioningService, },\n{type: ApplicationRef, },\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable, ElementRef } from '@angular/core';\nimport { positionElements } from './ng-positioning';\n\nexport interface PositioningOptions {\n  /** The DOM element, ElementRef, or a selector string of an element which will be moved */\n  element?: HTMLElement | ElementRef | string;\n\n  /** The DOM element, ElementRef, or a selector string of an element which the element will be attached to  */\n  target?: HTMLElement | ElementRef | string;\n\n  /**\n   * A string of the form 'vert-attachment horiz-attachment' or 'placement'\n   * - placement can be \"top\", \"bottom\", \"left\", \"right\"\n   * not yet supported:\n   * - vert-attachment can be any of 'top', 'middle', 'bottom'\n   * - horiz-attachment can be any of 'left', 'center', 'right'\n   */\n  attachment?: string;\n\n  /** A string similar to `attachment`. The one difference is that, if it's not provided,\n   * `targetAttachment` will assume the mirror image of `attachment`.\n   */\n  targetAttachment?: string;\n\n  /** A string of the form 'vert-offset horiz-offset'\n   * - vert-offset and horiz-offset can be of the form \"20px\" or \"55%\"\n   */\n  offset?: string;\n\n  /** A string similar to `offset`, but referring to the offset of the target */\n  targetOffset?: string;\n\n  /** If true component will be attached to body */\n  appendToBody?: boolean;\n}\n\n\nexport class PositioningService {\n  position(options: PositioningOptions): void {\n    const {element, target, attachment, appendToBody} = options;\n    positionElements(\n      _getHtmlElement(target),\n      _getHtmlElement(element),\n      attachment,\n      appendToBody\n    );\n  }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction _getHtmlElement(element: HTMLElement | ElementRef | string): HTMLElement {\n  // it means that we got a selector\n  if (typeof element === 'string') {\n    return document.querySelector(element) as HTMLElement;\n  }\n\n  if (element instanceof ElementRef) {\n    return element.nativeElement;\n  }\n\n  return element as HTMLElement;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @copyright Valor Software\n * @copyright Angular ng-bootstrap team\n */\n\n// previous version:\n// https://github.com/angular-ui/bootstrap/blob/07c31d0731f7cb068a1932b8e01d2312b796b4ec/src/position/position.js\n// tslint:disable\nexport class Positioning {\n  public position(element: HTMLElement, round = true): ClientRect {\n    let elPosition: ClientRect;\n    let parentOffset: ClientRect = {\n      width: 0,\n      height: 0,\n      top: 0,\n      bottom: 0,\n      left: 0,\n      right: 0\n    };\n\n    if (this.getStyle(element, 'position') === 'fixed') {\n      const bcRect = element.getBoundingClientRect();\n      elPosition = {\n        width: bcRect.width,\n        height: bcRect.height,\n        top: bcRect.top,\n        bottom: bcRect.bottom,\n        left: bcRect.left,\n        right: bcRect.right\n      };\n    } else {\n      const offsetParentEl = this.offsetParent(element);\n\n      elPosition = this.offset(element, false);\n\n      if (offsetParentEl !== document.documentElement) {\n        parentOffset = this.offset(offsetParentEl, false);\n      }\n\n      parentOffset.top += offsetParentEl.clientTop;\n      parentOffset.left += offsetParentEl.clientLeft;\n    }\n\n    elPosition.top -= parentOffset.top;\n    elPosition.bottom -= parentOffset.top;\n    elPosition.left -= parentOffset.left;\n    elPosition.right -= parentOffset.left;\n\n    if (round) {\n      elPosition.top = Math.round(elPosition.top);\n      elPosition.bottom = Math.round(elPosition.bottom);\n      elPosition.left = Math.round(elPosition.left);\n      elPosition.right = Math.round(elPosition.right);\n    }\n\n    return elPosition;\n  }\n\n  public offset(element: HTMLElement, round = true): ClientRect {\n    const elBcr = element.getBoundingClientRect();\n    const viewportOffset = {\n      top: window.pageYOffset - document.documentElement.clientTop,\n      left: window.pageXOffset - document.documentElement.clientLeft\n    };\n\n    let elOffset = {\n      height: elBcr.height || element.offsetHeight,\n      width: elBcr.width || element.offsetWidth,\n      top: elBcr.top + viewportOffset.top,\n      bottom: elBcr.bottom + viewportOffset.top,\n      left: elBcr.left + viewportOffset.left,\n      right: elBcr.right + viewportOffset.left\n    };\n\n    if (round) {\n      elOffset.height = Math.round(elOffset.height);\n      elOffset.width = Math.round(elOffset.width);\n      elOffset.top = Math.round(elOffset.top);\n      elOffset.bottom = Math.round(elOffset.bottom);\n      elOffset.left = Math.round(elOffset.left);\n      elOffset.right = Math.round(elOffset.right);\n    }\n\n    return elOffset;\n  }\n\n  public positionElements(\n    hostElement: HTMLElement,\n    targetElement: HTMLElement,\n    placement: string,\n    appendToBody?: boolean\n  ): ClientRect {\n    const hostElPosition = appendToBody\n      ? this.offset(hostElement, false)\n      : this.position(hostElement, false);\n    const targetElStyles = this.getAllStyles(targetElement);\n    const shiftWidth: any = {\n      left: hostElPosition.left,\n      center:\n        hostElPosition.left +\n        hostElPosition.width / 2 -\n        targetElement.offsetWidth / 2,\n      right: hostElPosition.left + hostElPosition.width\n    };\n    const shiftHeight: any = {\n      top: hostElPosition.top,\n      center:\n        hostElPosition.top +\n        hostElPosition.height / 2 -\n        targetElement.offsetHeight / 2,\n      bottom: hostElPosition.top + hostElPosition.height\n    };\n    const targetElBCR = targetElement.getBoundingClientRect();\n    let placementPrimary = placement.split(' ')[0] || 'top';\n    const placementSecondary = placement.split(' ')[1] || 'center';\n\n    let targetElPosition: ClientRect = {\n      height: targetElBCR.height || targetElement.offsetHeight,\n      width: targetElBCR.width || targetElement.offsetWidth,\n      top: 0,\n      bottom: targetElBCR.height || targetElement.offsetHeight,\n      left: 0,\n      right: targetElBCR.width || targetElement.offsetWidth\n    };\n\n    if (placementPrimary === 'auto') {\n      let newPlacementPrimary = this.autoPosition(\n        targetElPosition,\n        hostElPosition,\n        targetElement,\n        placementSecondary\n      );\n      if (!newPlacementPrimary)\n        newPlacementPrimary = this.autoPosition(\n          targetElPosition,\n          hostElPosition,\n          targetElement\n        );\n      if (newPlacementPrimary) placementPrimary = newPlacementPrimary;\n      targetElement.classList.add(placementPrimary);\n    }\n\n    switch (placementPrimary) {\n      case 'top':\n        targetElPosition.top =\n          hostElPosition.top -\n          (targetElement.offsetHeight +\n            parseFloat(targetElStyles.marginBottom));\n        targetElPosition.bottom +=\n          hostElPosition.top - targetElement.offsetHeight;\n        targetElPosition.left = shiftWidth[placementSecondary];\n        targetElPosition.right += shiftWidth[placementSecondary];\n        break;\n      case 'bottom':\n        targetElPosition.top = shiftHeight[placementPrimary];\n        targetElPosition.bottom += shiftHeight[placementPrimary];\n        targetElPosition.left = shiftWidth[placementSecondary];\n        targetElPosition.right += shiftWidth[placementSecondary];\n        break;\n      case 'left':\n        targetElPosition.top = shiftHeight[placementSecondary];\n        targetElPosition.bottom += shiftHeight[placementSecondary];\n        targetElPosition.left =\n          hostElPosition.left -\n          (targetElement.offsetWidth + parseFloat(targetElStyles.marginRight));\n        targetElPosition.right +=\n          hostElPosition.left - targetElement.offsetWidth;\n        break;\n      case 'right':\n        targetElPosition.top = shiftHeight[placementSecondary];\n        targetElPosition.bottom += shiftHeight[placementSecondary];\n        targetElPosition.left = shiftWidth[placementPrimary];\n        targetElPosition.right += shiftWidth[placementPrimary];\n        break;\n    }\n\n    targetElPosition.top = Math.round(targetElPosition.top);\n    targetElPosition.bottom = Math.round(targetElPosition.bottom);\n    targetElPosition.left = Math.round(targetElPosition.left);\n    targetElPosition.right = Math.round(targetElPosition.right);\n\n    return targetElPosition;\n  }\n\n  private autoPosition(\n    targetElPosition: ClientRect,\n    hostElPosition: ClientRect,\n    targetElement: HTMLElement,\n    preferredPosition?: string\n  ) {\n    if (\n      (!preferredPosition || preferredPosition === 'right') &&\n      targetElPosition.left + hostElPosition.left - targetElement.offsetWidth <\n        0\n    ) {\n      return 'right';\n    } else if (\n      (!preferredPosition || preferredPosition === 'top') &&\n      targetElPosition.bottom +\n        hostElPosition.bottom +\n        targetElement.offsetHeight >\n        window.innerHeight\n    ) {\n      return 'top';\n    } else if (\n      (!preferredPosition || preferredPosition === 'bottom') &&\n      targetElPosition.top + hostElPosition.top - targetElement.offsetHeight < 0\n    ) {\n      return 'bottom';\n    } else if (\n      (!preferredPosition || preferredPosition === 'left') &&\n      targetElPosition.right +\n        hostElPosition.right +\n        targetElement.offsetWidth >\n        window.innerWidth\n    ) {\n      return 'left';\n    }\n    return null;\n  }\n\n  private getAllStyles(element: HTMLElement) {\n    return window.getComputedStyle(element);\n  }\n\n  private getStyle(element: HTMLElement, prop: string): string {\n    return (this.getAllStyles(element) as any)[prop];\n  }\n\n  private isStaticPositioned(element: HTMLElement): boolean {\n    return (this.getStyle(element, 'position') || 'static') === 'static';\n  }\n\n  private offsetParent(element: HTMLElement): HTMLElement {\n    let offsetParentEl =\n      <HTMLElement>element.offsetParent || document.documentElement;\n\n    while (\n      offsetParentEl &&\n      offsetParentEl !== document.documentElement &&\n      this.isStaticPositioned(offsetParentEl)\n    ) {\n      offsetParentEl = <HTMLElement>offsetParentEl.offsetParent;\n    }\n\n    return offsetParentEl || document.documentElement;\n  }\n}\n\nconst positionService = new Positioning();\n\nexport function positionElements(\n  hostElement: HTMLElement,\n  targetElement: HTMLElement,\n  placement: string,\n  appendToBody?: boolean\n): void {\n  const pos = positionService.positionElements(\n    hostElement,\n    targetElement,\n    placement,\n    appendToBody\n  );\n\n  targetElement.style.top = `${pos.top}px`;\n  targetElement.style.left = `${pos.left}px`;\n}\n","// tslint:disable:max-file-line-count\n// todo: add delay support\n// todo: merge events onShow, onShown, etc...\n// todo: add global positioning configuration?\nimport {\n  ApplicationRef,\n  ComponentFactory,\n  ComponentFactoryResolver,\n  ComponentRef,\n  ElementRef,\n  EmbeddedViewRef,\n  EventEmitter,\n  Injector,\n  NgZone,\n  Provider,\n  ReflectiveInjector,\n  Renderer2,\n  TemplateRef,\n  Type,\n  ViewContainerRef\n} from '@angular/core';\nimport { PositioningOptions, PositioningService } from '../positioning/index';\nimport { listenToTriggersV2, registerOutsideClick } from '../utils/triggers';\nimport { ContentRef } from './content-ref.class';\nimport { ListenOptions } from './listen-options.model';\n\nexport class ComponentLoader<T> {\n  onBeforeShow: EventEmitter<any> = new EventEmitter();\n  onShown: EventEmitter<any> = new EventEmitter();\n  onBeforeHide: EventEmitter<any> = new EventEmitter();\n  onHidden: EventEmitter<any> = new EventEmitter();\n\n  instance: T;\n  _componentRef: ComponentRef<T>;\n  _inlineViewRef: EmbeddedViewRef<T>;\n\n  private _providers: Provider[] = [];\n  private _componentFactory: ComponentFactory<T>;\n  private _zoneSubscription: any;\n  private _contentRef: ContentRef;\n  private _innerComponent: ComponentRef<T>;\n\n  private _unregisterListenersFn: Function;\n\n  get isShown(): boolean {\n    if (this._isHiding) {\n      return false;\n    }\n\n    return !!this._componentRef;\n  }\n\n  private _isHiding = false;\n\n  /**\n   * Placement of a component. Accepts: \"top\", \"bottom\", \"left\", \"right\"\n   */\n  private attachment: string;\n\n  /**\n   * A selector specifying the element the popover should be appended to.\n   * Currently only supports \"body\".\n   */\n  private container: string | ElementRef | any;\n\n  /**\n   * Specifies events that should trigger. Supports a space separated list of\n   * event names.\n   */\n  private triggers: string;\n\n  private _listenOpts: ListenOptions = {};\n  private _globalListener = Function.prototype;\n\n  /**\n   * Do not use this directly, it should be instanced via\n   * `ComponentLoadFactory.attach`\n   * @internal\n   */\n  // tslint:disable-next-line\n  public constructor(\n    private _viewContainerRef: ViewContainerRef,\n    private _renderer: Renderer2,\n    private _elementRef: ElementRef,\n    private _injector: Injector,\n    private _componentFactoryResolver: ComponentFactoryResolver,\n    private _ngZone: NgZone,\n    private _applicationRef: ApplicationRef,\n    private _posService: PositioningService\n  ) {}\n\n  attach(compType: Type<T>): ComponentLoader<T> {\n    this._componentFactory = this._componentFactoryResolver\n      .resolveComponentFactory<T>(compType);\n\n    return this;\n  }\n\n  // todo: add behaviour: to target element, `body`, custom element\n  to(container?: string): ComponentLoader<T> {\n    this.container = container || this.container;\n\n    return this;\n  }\n\n  position(opts?: PositioningOptions): ComponentLoader<T> {\n    this.attachment = opts.attachment || this.attachment;\n    this._elementRef = (opts.target as ElementRef) || this._elementRef;\n\n    return this;\n  }\n\n  provide(provider: Provider): ComponentLoader<T> {\n    this._providers.push(provider);\n\n    return this;\n  }\n\n  // todo: appendChild to element or document.querySelector(this.container)\n\n  show(opts: {\n    content?: string | TemplateRef<any>;\n    context?: any;\n    initialState?: any; [key: string]: any;\n  } = {}\n  ): ComponentRef<T> {\n\n    this._subscribePositioning();\n    this._innerComponent = null;\n\n    if (!this._componentRef) {\n      this.onBeforeShow.emit();\n      this._contentRef = this._getContentRef(opts.content, opts.context, opts.initialState);\n      const injector = ReflectiveInjector.resolveAndCreate(this._providers, this._injector);\n\n      this._componentRef = this._componentFactory.create(injector, this._contentRef.nodes);\n      this._applicationRef.attachView(this._componentRef.hostView);\n      // this._componentRef = this._viewContainerRef\n      //   .createComponent(this._componentFactory, 0, injector, this._contentRef.nodes);\n      this.instance = this._componentRef.instance;\n\n      Object.assign(this._componentRef.instance, opts);\n\n      if (this.container instanceof ElementRef) {\n        this.container.nativeElement.appendChild(\n          this._componentRef.location.nativeElement\n        );\n      }\n\n      if (this.container === 'body' && typeof document !== 'undefined') {\n        document\n          .querySelector(this.container as string)\n          .appendChild(this._componentRef.location.nativeElement);\n      }\n\n      if (\n        !this.container &&\n        this._elementRef &&\n        this._elementRef.nativeElement.parentElement\n      ) {\n        this._elementRef.nativeElement.parentElement.appendChild(\n          this._componentRef.location.nativeElement\n        );\n      }\n\n      // we need to manually invoke change detection since events registered\n      // via\n      // Renderer::listen() are not picked up by change detection with the\n      // OnPush strategy\n      if (this._contentRef.componentRef) {\n        this._innerComponent = this._contentRef.componentRef.instance;\n        this._contentRef.componentRef.changeDetectorRef.markForCheck();\n        this._contentRef.componentRef.changeDetectorRef.detectChanges();\n      }\n      this._componentRef.changeDetectorRef.markForCheck();\n      this._componentRef.changeDetectorRef.detectChanges();\n      this.onShown.emit(this._componentRef.instance);\n    }\n\n    this._registerOutsideClick();\n\n    return this._componentRef;\n  }\n\n  hide(): ComponentLoader<T> {\n    if (!this._componentRef) {\n      return this;\n    }\n\n    this.onBeforeHide.emit(this._componentRef.instance);\n\n    const componentEl = this._componentRef.location.nativeElement;\n    componentEl.parentNode.removeChild(componentEl);\n    if (this._contentRef.componentRef) {\n      this._contentRef.componentRef.destroy();\n    }\n    this._componentRef.destroy();\n    if (this._viewContainerRef && this._contentRef.viewRef) {\n      this._viewContainerRef.remove(\n        this._viewContainerRef.indexOf(this._contentRef.viewRef)\n      );\n    }\n    if (this._contentRef.viewRef) {\n      this._contentRef.viewRef.destroy();\n    }\n    // this._viewContainerRef.remove(this._viewContainerRef.indexOf(this._componentRef.hostView));\n    //\n    // if (this._contentRef.viewRef && this._viewContainerRef.indexOf(this._contentRef.viewRef) !== -1) {\n    //   this._viewContainerRef.remove(this._viewContainerRef.indexOf(this._contentRef.viewRef));\n    // }\n\n    this._contentRef = null;\n    this._componentRef = null;\n    this._removeGlobalListener();\n\n    this.onHidden.emit();\n\n    return this;\n  }\n\n  toggle(): void {\n    if (this.isShown) {\n      this.hide();\n\n      return;\n    }\n\n    this.show();\n  }\n\n  dispose(): void {\n    if (this.isShown) {\n      this.hide();\n    }\n\n    this._unsubscribePositioning();\n\n    if (this._unregisterListenersFn) {\n      this._unregisterListenersFn();\n    }\n  }\n\n  listen(listenOpts: ListenOptions): ComponentLoader<T> {\n    this.triggers = listenOpts.triggers || this.triggers;\n    this._listenOpts.outsideClick = listenOpts.outsideClick;\n    listenOpts.target = listenOpts.target || this._elementRef.nativeElement;\n\n    const hide = (this._listenOpts.hide = () =>\n      listenOpts.hide ? listenOpts.hide() : void this.hide());\n    const show = (this._listenOpts.show = (registerHide: Function) => {\n      listenOpts.show ? listenOpts.show(registerHide) : this.show(registerHide);\n      registerHide();\n    });\n\n    const toggle = (registerHide: Function) => {\n      this.isShown ? hide() : show(registerHide);\n    };\n\n    this._unregisterListenersFn = listenToTriggersV2(this._renderer, {\n      target: listenOpts.target,\n      triggers: listenOpts.triggers,\n      show,\n      hide,\n      toggle\n    });\n\n    return this;\n  }\n\n  _removeGlobalListener() {\n    if (this._globalListener) {\n      this._globalListener();\n      this._globalListener = null;\n    }\n  }\n\n  attachInline(\n    vRef: ViewContainerRef,\n    template: TemplateRef<any>\n  ): ComponentLoader<T> {\n    this._inlineViewRef = vRef.createEmbeddedView(template);\n\n    return this;\n  }\n\n  _registerOutsideClick(): void {\n    if (!this._componentRef || !this._componentRef.location) {\n      return;\n    }\n    // why: should run after first event bubble\n    if (this._listenOpts.outsideClick) {\n      const target = this._componentRef.location.nativeElement;\n      setTimeout(() => {\n        this._globalListener = registerOutsideClick(this._renderer, {\n          targets: [target, this._elementRef.nativeElement],\n          outsideClick: this._listenOpts.outsideClick,\n          hide: () => this._listenOpts.hide()\n        });\n      });\n    }\n  }\n\n  getInnerComponent(): ComponentRef<T> {\n    return this._innerComponent;\n  }\n\n  private _subscribePositioning(): void {\n    if (this._zoneSubscription || !this.attachment) {\n      return;\n    }\n\n    this._zoneSubscription = this._ngZone.onStable.subscribe(() => {\n      if (!this._componentRef) {\n        return;\n      }\n      this._posService.position({\n        element: this._componentRef.location,\n        target: this._elementRef,\n        attachment: this.attachment,\n        appendToBody: this.container === 'body'\n      });\n    });\n  }\n\n  private _unsubscribePositioning(): void {\n    if (!this._zoneSubscription) {\n      return;\n    }\n    this._zoneSubscription.unsubscribe();\n    this._zoneSubscription = null;\n  }\n\n  private _getContentRef(\n    content: string | TemplateRef<any> | any,\n    context?: any,\n    initialState?: any\n  ): ContentRef {\n    if (!content) {\n      return new ContentRef([]);\n    }\n\n    if (content instanceof TemplateRef) {\n      if (this._viewContainerRef) {\n        const _viewRef = this._viewContainerRef\n          .createEmbeddedView<TemplateRef<T>>(content, context);\n        _viewRef.markForCheck();\n\n        return new ContentRef([_viewRef.rootNodes], _viewRef);\n      }\n      const viewRef = content.createEmbeddedView({});\n      this._applicationRef.attachView(viewRef);\n\n      return new ContentRef([viewRef.rootNodes], viewRef);\n    }\n\n    if (typeof content === 'function') {\n      const contentCmptFactory = this._componentFactoryResolver.resolveComponentFactory(\n        content\n      );\n      const modalContentInjector = ReflectiveInjector.resolveAndCreate(\n        [...this._providers],\n        this._injector\n      );\n      const componentRef = contentCmptFactory.create(modalContentInjector);\n      Object.assign(componentRef.instance, initialState);\n      this._applicationRef.attachView(componentRef.hostView);\n\n      return new ContentRef(\n        [[componentRef.location.nativeElement]],\n        componentRef.hostView,\n        componentRef\n      );\n    }\n\n    return new ContentRef([[this._renderer.createText(`${content}`)]]);\n  }\n}\n","/**\n * @copyright Valor Software\n * @copyright Angular ng-bootstrap team\n */\n\nimport { ComponentRef, ViewRef } from '@angular/core';\n\nexport class ContentRef {\n  nodes: any[];\n  viewRef?: ViewRef;\n  componentRef?: ComponentRef<any>;\n\n  constructor(\n    nodes: any[],\n    viewRef?: ViewRef,\n    componentRef?: ComponentRef<any>\n  ) {\n    this.nodes = nodes;\n    this.viewRef = viewRef;\n    this.componentRef = componentRef;\n  }\n}\n","/**\n * @copyright Valor Software\n * @copyright Angular ng-bootstrap team\n */\nimport { Renderer2 } from '@angular/core';\nimport { Trigger } from './trigger.class';\nimport {\n  BsEventCallback, ListenOptions\n} from '../component-loader/listen-options.model';\n\nconst DEFAULT_ALIASES = {\n  hover: ['mouseover', 'mouseout'],\n  focus: ['focusin', 'focusout']\n};\n\nexport function parseTriggers(triggers: string, aliases: any = DEFAULT_ALIASES): Trigger[] {\n  const trimmedTriggers = (triggers || '').trim();\n\n  if (trimmedTriggers.length === 0) {\n    return [];\n  }\n\n  const parsedTriggers = trimmedTriggers\n    .split(/\\s+/)\n    .map((trigger: string) => trigger.split(':'))\n    .map((triggerPair: string[]) => {\n      const alias = aliases[triggerPair[0]] || triggerPair;\n\n      return new Trigger(alias[0], alias[1]);\n    });\n\n  const manualTriggers = parsedTriggers.filter((triggerPair: Trigger) =>\n    triggerPair.isManual()\n  );\n\n  if (manualTriggers.length > 1) {\n    throw new Error('Triggers parse error: only one manual trigger is allowed');\n  }\n\n  if (manualTriggers.length === 1 && parsedTriggers.length > 1) {\n    throw new Error('Triggers parse error: manual trigger can\\'t be mixed with other triggers');\n  }\n\n  return parsedTriggers;\n}\n\nexport function listenToTriggers(renderer: Renderer2,\n                                 target: any,\n                                 triggers: string,\n                                 showFn: BsEventCallback,\n                                 hideFn: BsEventCallback,\n                                 toggleFn: BsEventCallback): Function {\n  const parsedTriggers = parseTriggers(triggers);\n  const listeners: any[] = [];\n\n  if (parsedTriggers.length === 1 && parsedTriggers[0].isManual()) {\n    return Function.prototype;\n  }\n\n  parsedTriggers.forEach((trigger: Trigger) => {\n    if (trigger.open === trigger.close) {\n      listeners.push(renderer.listen(target, trigger.open, toggleFn));\n\n      return;\n    }\n\n    listeners.push(\n      renderer.listen(target, trigger.open, showFn),\n      renderer.listen(target, trigger.close, hideFn)\n    );\n  });\n\n  return () => {\n    listeners.forEach((unsubscribeFn: Function) => unsubscribeFn());\n  };\n}\n\nexport function listenToTriggersV2(renderer: Renderer2,\n                                   options: ListenOptions): Function {\n  const parsedTriggers = parseTriggers(options.triggers);\n  const target = options.target;\n  // do nothing\n  if (parsedTriggers.length === 1 && parsedTriggers[0].isManual()) {\n    return Function.prototype;\n  }\n\n  // all listeners\n  const listeners: any[] = [];\n\n  // lazy listeners registration\n  const _registerHide: Function[] = [];\n  const registerHide = () => {\n    // add hide listeners to unregister array\n    _registerHide.forEach((fn: Function) => listeners.push(fn()));\n    // register hide events only once\n    _registerHide.length = 0;\n  };\n\n  // register open\\close\\toggle listeners\n  parsedTriggers.forEach((trigger: Trigger) => {\n    const useToggle = trigger.open === trigger.close;\n    const showFn = useToggle ? options.toggle : options.show;\n\n    if (!useToggle) {\n      _registerHide.push(() =>\n        renderer.listen(target, trigger.close, options.hide)\n      );\n    }\n\n    listeners.push(\n      renderer.listen(target, trigger.open, () => showFn(registerHide))\n    );\n  });\n\n  return () => {\n    listeners.forEach((unsubscribeFn: Function) => unsubscribeFn());\n  };\n}\n\nexport function registerOutsideClick(renderer: Renderer2,\n                                     options: ListenOptions) {\n  if (!options.outsideClick) {\n    return Function.prototype;\n  }\n\n  return renderer.listen('document', 'click', (event: any) => {\n    if (options.target && options.target.contains(event.target)) {\n      return;\n    }\n    if (\n      options.targets &&\n      options.targets.some(target => target.contains(event.target))\n    ) {\n      return;\n    }\n\n    options.hide();\n  });\n}\n","import {\n  Component,\n  ElementRef,\n  HostListener,\n  QueryList,\n  TemplateRef,\n  ViewChild,\n  ViewChildren,\n  Renderer2\n} from '@angular/core';\n\nimport { isBs3, Utils } from '../utils';\nimport { latinize } from './typeahead-utils';\nimport { TypeaheadMatch } from './typeahead-match.class';\nimport { TypeaheadDirective } from './typeahead.directive';\n\n\nexport class TypeaheadContainerComponent {\n  parent: TypeaheadDirective;\n  query: any;\n  element: ElementRef;\n  isFocused = false;\n  top: string;\n  left: string;\n  display: string;\n  placement: string;\n  dropup: boolean;\n  guiHeight: string;\n  needScrollbar: boolean;\n\n  get isBs4(): boolean {\n    return !isBs3();\n  }\n\n  protected _active: TypeaheadMatch;\n  protected _matches: TypeaheadMatch[] = [];\n\n  \n  private ulElement: ElementRef;\n\n  \n  private liElements: QueryList<ElementRef>;\n\n  constructor(element: ElementRef, private renderer: Renderer2) {\n    this.element = element;\n  }\n\n  get active(): TypeaheadMatch {\n    return this._active;\n  }\n\n  get matches(): TypeaheadMatch[] {\n    return this._matches;\n  }\n\n  set matches(value: TypeaheadMatch[]) {\n    this._matches = value;\n    this.needScrollbar = this.typeaheadScrollable && this.typeaheadOptionsInScrollableView < this.matches.length;\n    if (this.typeaheadScrollable) {\n      setTimeout(() => {\n        this.setScrollableMode();\n      });\n    }\n\n    if (this._matches.length > 0) {\n      this._active = this._matches[0];\n      if (this._active.isHeader()) {\n        this.nextActiveMatch();\n      }\n    }\n  }\n\n  get optionsListTemplate(): TemplateRef<any> {\n    return this.parent ? this.parent.optionsListTemplate : undefined;\n  }\n\n  get typeaheadScrollable(): boolean {\n    return this.parent ? this.parent.typeaheadScrollable : false;\n  }\n\n\n  get typeaheadOptionsInScrollableView(): number {\n    return this.parent ? this.parent.typeaheadOptionsInScrollableView : 5;\n  }\n\n  get itemTemplate(): TemplateRef<any> {\n    return this.parent ? this.parent.typeaheadItemTemplate : undefined;\n  }\n\n  selectActiveMatch(): void {\n    this.selectMatch(this._active);\n  }\n\n  prevActiveMatch(): void {\n    const index = this.matches.indexOf(this._active);\n    this._active = this.matches[\n      index - 1 < 0 ? this.matches.length - 1 : index - 1\n      ];\n    if (this._active.isHeader()) {\n      this.prevActiveMatch();\n    }\n    if (this.typeaheadScrollable) {\n      this.scrollPrevious(index);\n    }\n  }\n\n  nextActiveMatch(): void {\n    const index = this.matches.indexOf(this._active);\n    this._active = this.matches[\n      index + 1 > this.matches.length - 1 ? 0 : index + 1\n      ];\n    if (this._active.isHeader()) {\n      this.nextActiveMatch();\n    }\n    if (this.typeaheadScrollable) {\n      this.scrollNext(index);\n    }\n  }\n\n  selectActive(value: TypeaheadMatch): void {\n    this.isFocused = true;\n    this._active = value;\n  }\n\n  hightlight(match: TypeaheadMatch, query: any): string {\n    let itemStr: string = match.value;\n    let itemStrHelper: string = (this.parent && this.parent.typeaheadLatinize\n      ? latinize(itemStr)\n      : itemStr).toLowerCase();\n    let startIdx: number;\n    let tokenLen: number;\n    // Replaces the capture string with the same string inside of a \"strong\" tag\n    if (typeof query === 'object') {\n      const queryLen: number = query.length;\n      for (let i = 0; i < queryLen; i += 1) {\n        // query[i] is already latinized and lower case\n        startIdx = itemStrHelper.indexOf(query[i]);\n        tokenLen = query[i].length;\n        if (startIdx >= 0 && tokenLen > 0) {\n          itemStr =\n            `${itemStr.substring(0, startIdx)}<strong>${itemStr.substring(startIdx, startIdx + tokenLen)}</strong>` +\n            `${itemStr.substring(startIdx + tokenLen)}`;\n          itemStrHelper =\n            `${itemStrHelper.substring(0, startIdx)}        ${' '.repeat(tokenLen)}         ` +\n            `${itemStrHelper.substring(startIdx + tokenLen)}`;\n        }\n      }\n    } else if (query) {\n      // query is already latinized and lower case\n      startIdx = itemStrHelper.indexOf(query);\n      tokenLen = query.length;\n      if (startIdx >= 0 && tokenLen > 0) {\n        itemStr =\n          `${itemStr.substring(0, startIdx)}<strong>${itemStr.substring(startIdx, startIdx + tokenLen)}</strong>` +\n          `${itemStr.substring(startIdx + tokenLen)}`;\n      }\n    }\n\n    return itemStr;\n  }\n\n  \n  \n  focusLost(): void {\n    this.isFocused = false;\n  }\n\n  isActive(value: TypeaheadMatch): boolean {\n    return this._active === value;\n  }\n\n  selectMatch(value: TypeaheadMatch, e: Event = void 0): boolean {\n    if (e) {\n      e.stopPropagation();\n      e.preventDefault();\n    }\n    this.parent.changeModel(value);\n    setTimeout(() => this.parent.typeaheadOnSelect.emit(value), 0);\n\n    return false;\n  }\n\n  setScrollableMode(): void {\n    if (!this.ulElement) {\n      this.ulElement = this.element;\n    }\n    if (this.liElements.first) {\n      const ulStyles = Utils.getStyles(this.ulElement.nativeElement);\n      const liStyles = Utils.getStyles(this.liElements.first.nativeElement);\n      const ulPaddingBottom = parseFloat((ulStyles['padding-bottom'] ? ulStyles['padding-bottom'] : '').replace('px', ''));\n      const ulPaddingTop = parseFloat((ulStyles['padding-top'] ? ulStyles['padding-top'] : '0').replace('px', ''));\n      const optionHeight = parseFloat((liStyles['height'] ? liStyles['height'] : '0').replace('px', ''));\n      const height = this.typeaheadOptionsInScrollableView * optionHeight;\n      this.guiHeight = `${height + ulPaddingTop + ulPaddingBottom}px`;\n    }\n    this.renderer.setStyle(this.element.nativeElement, 'visibility', 'visible');\n  }\n\n  scrollPrevious(index: number): void {\n    if (index === 0) {\n      this.scrollToBottom();\n\n      return;\n    }\n    if (this.liElements) {\n      const liElement = this.liElements.toArray()[index - 1];\n      if (liElement && !this.isScrolledIntoView(liElement.nativeElement)) {\n        this.ulElement.nativeElement.scrollTop = liElement.nativeElement.offsetTop;\n      }\n    }\n  }\n\n  scrollNext(index: number): void {\n    if (index + 1 > this.matches.length - 1) {\n      this.scrollToTop();\n\n      return;\n    }\n    if (this.liElements) {\n      const liElement = this.liElements.toArray()[index + 1];\n      if (liElement && !this.isScrolledIntoView(liElement.nativeElement)) {\n        this.ulElement.nativeElement.scrollTop =\n          liElement.nativeElement.offsetTop -\n          this.ulElement.nativeElement.offsetHeight +\n          liElement.nativeElement.offsetHeight;\n      }\n    }\n  }\n\n\n  private isScrolledIntoView = function (elem: HTMLElement) {\n    const containerViewTop = this.ulElement.nativeElement.scrollTop;\n    const containerViewBottom = containerViewTop + this.ulElement.nativeElement.offsetHeight;\n    const elemTop = elem.offsetTop;\n    const elemBottom = elemTop + elem.offsetHeight;\n\n    return ((elemBottom <= containerViewBottom) && (elemTop >= containerViewTop));\n  };\n\n  private scrollToBottom(): void {\n    this.ulElement.nativeElement.scrollTop = this.ulElement.nativeElement.scrollHeight;\n  }\n\n  private scrollToTop(): void {\n    this.ulElement.nativeElement.scrollTop = 0;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'typeahead-container',\n  // tslint:disable-next-line\n  template: \"<!-- inject options list template --> <ng-template [ngTemplateOutlet]=\\\"optionsListTemplate || (isBs4 ? bs4Template : bs3Template)\\\" [ngTemplateOutletContext]=\\\"{matches:matches, itemTemplate:itemTemplate, query:query}\\\"></ng-template> <!-- default options item template --> <ng-template #bsItemTemplate let-match=\\\"match\\\" let-query=\\\"query\\\"><span [innerHtml]=\\\"hightlight(match, query)\\\"></span> </ng-template> <!-- Bootstrap 3 options list template --> <ng-template #bs3Template> <ul class=\\\"dropdown-menu\\\" #ulElement [style.overflow-y]=\\\"needScrollbar ? 'scroll': 'auto'\\\" [style.height]=\\\"needScrollbar ? guiHeight: 'auto'\\\"> <ng-template ngFor let-match let-i=\\\"index\\\" [ngForOf]=\\\"matches\\\"> <li #liElements *ngIf=\\\"match.isHeader()\\\" class=\\\"dropdown-header\\\">{{ match }}</li> <li #liElements *ngIf=\\\"!match.isHeader()\\\" [class.active]=\\\"isActive(match)\\\" (mouseenter)=\\\"selectActive(match)\\\"> <a href=\\\"#\\\" (click)=\\\"selectMatch(match, $event)\\\" tabindex=\\\"-1\\\"> <ng-template [ngTemplateOutlet]=\\\"itemTemplate || bsItemTemplate\\\" [ngTemplateOutletContext]=\\\"{item:match.item, index:i, match:match, query:query}\\\"></ng-template> </a> </li> </ng-template> </ul> </ng-template> <!-- Bootstrap 4 options list template --> <ng-template #bs4Template> <ng-template ngFor let-match let-i=\\\"index\\\" [ngForOf]=\\\"matches\\\"> <h6 *ngIf=\\\"match.isHeader()\\\" class=\\\"dropdown-header\\\">{{ match }}</h6> <ng-template [ngIf]=\\\"!match.isHeader()\\\"> <button #liElements class=\\\"dropdown-item\\\" (click)=\\\"selectMatch(match, $event)\\\" (mouseenter)=\\\"selectActive(match)\\\" [class.active]=\\\"isActive(match)\\\"> <ng-template [ngTemplateOutlet]=\\\"itemTemplate || bsItemTemplate\\\" [ngTemplateOutletContext]=\\\"{item:match.item, index:i, match:match, query:query}\\\"></ng-template> </button> </ng-template> </ng-template> </ng-template> \",\n  host: {\n    class: 'dropdown open',\n    '[class.dropdown-menu]': 'isBs4',\n    '[style.overflow-y]' : `isBs4 && needScrollbar ? 'scroll': 'visible'`,\n    '[style.height]': `isBs4 && needScrollbar ? guiHeight: 'auto'`,\n    '[style.visibility]': `typeaheadScrollable ? 'hidden' : 'visible'`,\n    '[class.dropup]': 'dropup',\n    style: 'position: absolute;display: block;'\n  }\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Renderer2, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'ulElement': [{ type: ViewChild, args: ['ulElement', ] },],\n'liElements': [{ type: ViewChildren, args: ['liElements', ] },],\n'focusLost': [{ type: HostListener, args: ['mouseleave', ] },{ type: HostListener, args: ['blur', ] },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { window } from './facade/browser';\n\nexport class Utils {\n  static reflow(element: any): void {\n    ((bs: any): void => bs)(element.offsetHeight);\n  }\n\n  // source: https://github.com/jquery/jquery/blob/master/src/css/var/getStyles.js\n  static getStyles(elem: any): any {\n    // Support: IE <=11 only, Firefox <=30 (#15098, #14150)\n    // IE throws on elements created in popups\n    // FF meanwhile throws on frame elements through \"defaultView.getComputedStyle\"\n    let view = elem.ownerDocument.defaultView;\n\n    if (!view || !view.opener) {\n      view = window;\n    }\n\n    return view.getComputedStyle(elem);\n  }\n}\n","/**\n * @copyright Valor Software\n * @copyright Angular ng-bootstrap team\n */\n\nexport class Trigger {\n  open: string;\n  close?: string;\n\n  constructor(open: string, close?: string) {\n    this.open = open;\n    this.close = close || open;\n  }\n\n  isManual(): boolean {\n    return this.open === 'manual' || this.close === 'manual';\n  }\n}\n","import { window } from './facade/browser';\n\nlet guessedVersion: 'bs3' | 'bs4';\n\nfunction _guessBsVersion(): 'bs3' | 'bs4' {\n  if (typeof document === 'undefined') {\n    return null;\n  }\n  const spanEl = document.createElement('span');\n  spanEl.innerText = 'test bs version';\n  document.body.appendChild(spanEl);\n  spanEl.classList.add('d-none');\n  const rect = spanEl.getBoundingClientRect();\n  document.body.removeChild(spanEl);\n  if (!rect) {\n    return 'bs3';\n  }\n\n  return rect.top === 0 ? 'bs4' : 'bs3';\n}\n\nexport function setTheme(theme: 'bs3' | 'bs4'): void {\n  guessedVersion = theme;\n}\n\n// todo: in ngx-bootstrap, bs4 will became a default one\nexport function isBs3(): boolean {\n  if (typeof window === 'undefined') {\n    return true;\n  }\n\n  if (typeof window.__theme === 'undefined') {\n    if (guessedVersion) {\n      return guessedVersion === 'bs3';\n    }\n    guessedVersion = _guessBsVersion();\n\n    return guessedVersion === 'bs3';\n  }\n\n  return window.__theme !== 'bs4';\n}\n","/*tslint:disable */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * JS version of browser APIs. This library can only run in the browser.\n */\nvar win = (typeof window !== 'undefined' && window) || <any>{};\n\nexport { win as window };\nexport var document = win.document;\nexport var location = win.location;\nexport var gc = win['gc'] ? () => win['gc']() : (): any => null;\nexport var performance = win['performance'] ? win['performance'] : null;\nexport const Event = win['Event'];\nexport const MouseEvent = win['MouseEvent'];\nexport const KeyboardEvent = win['KeyboardEvent'];\nexport const EventTarget = win['EventTarget'];\nexport const History = win['History'];\nexport const Location = win['Location'];\nexport const EventListener = win['EventListener'];\n","/*tslint:disable:no-invalid-this */\nexport function OnChange(defaultValue?: any): any {\n  const sufix = 'Change';\n\n  return function OnChangeHandler(target: any, propertyKey: string): void {\n    const _key = ` __${propertyKey}Value`;\n    Object.defineProperty(target, propertyKey, {\n      get(): any {\n        return this[_key];\n      },\n      set(value: any): void {\n        const prevValue = this[_key];\n        this[_key] = value;\n        if (prevValue !== value && this[propertyKey + sufix]) {\n          this[propertyKey + sufix].emit(value);\n        }\n      }\n    });\n  };\n}\n/* tslint:enable */\n","import { latinMap } from './latin-map';\n\nexport function latinize(str: string): string {\n  if (!str) {\n    return '';\n  }\n\n  return str.replace(/[^A-Za-z0-9\\[\\] ]/g, function (a: string): string {\n    return latinMap[a] || a;\n  });\n}\n\nexport function escapeRegexp(queryToEscape: string): string {\n  // Regex: capture the whole query string and replace it with the string\n  // that will be used to match the results, for example if the capture is\n  // 'a' the result will be \\a\n  return queryToEscape.replace(/([.?*+^$[\\]\\\\(){}|-])/g, '\\\\$1');\n}\n\n/* tslint:disable */\nexport function tokenize(str: string,\n                         wordRegexDelimiters = ' ',\n                         phraseRegexDelimiters = ''): Array<string> {\n  /* tslint:enable */\n  const regexStr = `(?:[${phraseRegexDelimiters}])([^${phraseRegexDelimiters}]+)` +\n    `(?:[${phraseRegexDelimiters}])|([^${wordRegexDelimiters}]+)`;\n  const preTokenized: string[] = str.split(new RegExp(regexStr, 'g'));\n  const result: string[] = [];\n  const preTokenizedLength: number = preTokenized.length;\n  let token: string;\n  const replacePhraseDelimiters = new RegExp(`[${phraseRegexDelimiters}]+`, 'g');\n\n  for (let i = 0; i < preTokenizedLength; i += 1) {\n    token = preTokenized[i];\n    if (token && token.length && token !== wordRegexDelimiters) {\n      result.push(token.replace(replacePhraseDelimiters, ''));\n    }\n  }\n\n  return result;\n}\n\nexport function getValueFromObject(object: any, option: string): string {\n  if (!option || typeof object !== 'object') {\n    return object.toString();\n  }\n\n  if (option.endsWith('()')) {\n    const functionName = option.slice(0, option.length - 2);\n\n    return object[functionName]().toString();\n  }\n\n  const properties: string = option\n    .replace(/\\[(\\w+)\\]/g, '.$1')\n    .replace(/^\\./, '');\n  const propertiesArray: string[] = properties.split('.');\n\n  for (const property of propertiesArray) {\n    if (property in object) {\n      // tslint:disable-next-line\n      object = object[property];\n    }\n  }\n  if (!object) {return ''; }\n\n  return object.toString();\n}\n","export class TypeaheadMatch {\n  readonly value: string;\n  readonly item: any;\n  protected header: boolean;\n\n  constructor(item: any, value: string = item, header = false) {\n    this.item = item;\n    this.value = value;\n    this.header = header;\n  }\n\n  isHeader(): boolean {\n    return this.header;\n  }\n\n  toString(): string {\n    return this.value;\n  }\n}\n","/* tslint:disable */\nexport const latinMap: { [key: string]: string } = {\n    'Á': 'A',\n    'Ă': 'A',\n    'Ắ': 'A',\n    'Ặ': 'A',\n    'Ằ': 'A',\n    'Ẳ': 'A',\n    'Ẵ': 'A',\n    'Ǎ': 'A',\n    'Â': 'A',\n    'Ấ': 'A',\n    'Ậ': 'A',\n    'Ầ': 'A',\n    'Ẩ': 'A',\n    'Ẫ': 'A',\n    'Ä': 'A',\n    'Ǟ': 'A',\n    'Ȧ': 'A',\n    'Ǡ': 'A',\n    'Ạ': 'A',\n    'Ȁ': 'A',\n    'À': 'A',\n    'Ả': 'A',\n    'Ȃ': 'A',\n    'Ā': 'A',\n    'Ą': 'A',\n    'Å': 'A',\n    'Ǻ': 'A',\n    'Ḁ': 'A',\n    'Ⱥ': 'A',\n    'Ã': 'A',\n    'Ꜳ': 'AA',\n    'Æ': 'AE',\n    'Ǽ': 'AE',\n    'Ǣ': 'AE',\n    'Ꜵ': 'AO',\n    'Ꜷ': 'AU',\n    'Ꜹ': 'AV',\n    'Ꜻ': 'AV',\n    'Ꜽ': 'AY',\n    'Ḃ': 'B',\n    'Ḅ': 'B',\n    'Ɓ': 'B',\n    'Ḇ': 'B',\n    'Ƀ': 'B',\n    'Ƃ': 'B',\n    'Ć': 'C',\n    'Č': 'C',\n    'Ç': 'C',\n    'Ḉ': 'C',\n    'Ĉ': 'C',\n    'Ċ': 'C',\n    'Ƈ': 'C',\n    'Ȼ': 'C',\n    'Ď': 'D',\n    'Ḑ': 'D',\n    'Ḓ': 'D',\n    'Ḋ': 'D',\n    'Ḍ': 'D',\n    'Ɗ': 'D',\n    'Ḏ': 'D',\n    'ǲ': 'D',\n    'ǅ': 'D',\n    'Đ': 'D',\n    'Ƌ': 'D',\n    'Ǳ': 'DZ',\n    'Ǆ': 'DZ',\n    'É': 'E',\n    'Ĕ': 'E',\n    'Ě': 'E',\n    'Ȩ': 'E',\n    'Ḝ': 'E',\n    'Ê': 'E',\n    'Ế': 'E',\n    'Ệ': 'E',\n    'Ề': 'E',\n    'Ể': 'E',\n    'Ễ': 'E',\n    'Ḙ': 'E',\n    'Ë': 'E',\n    'Ė': 'E',\n    'Ẹ': 'E',\n    'Ȅ': 'E',\n    'È': 'E',\n    'Ẻ': 'E',\n    'Ȇ': 'E',\n    'Ē': 'E',\n    'Ḗ': 'E',\n    'Ḕ': 'E',\n    'Ę': 'E',\n    'Ɇ': 'E',\n    'Ẽ': 'E',\n    'Ḛ': 'E',\n    'Ꝫ': 'ET',\n    'Ḟ': 'F',\n    'Ƒ': 'F',\n    'Ǵ': 'G',\n    'Ğ': 'G',\n    'Ǧ': 'G',\n    'Ģ': 'G',\n    'Ĝ': 'G',\n    'Ġ': 'G',\n    'Ɠ': 'G',\n    'Ḡ': 'G',\n    'Ǥ': 'G',\n    'Ḫ': 'H',\n    'Ȟ': 'H',\n    'Ḩ': 'H',\n    'Ĥ': 'H',\n    'Ⱨ': 'H',\n    'Ḧ': 'H',\n    'Ḣ': 'H',\n    'Ḥ': 'H',\n    'Ħ': 'H',\n    'Í': 'I',\n    'Ĭ': 'I',\n    'Ǐ': 'I',\n    'Î': 'I',\n    'Ï': 'I',\n    'Ḯ': 'I',\n    'İ': 'I',\n    'Ị': 'I',\n    'Ȉ': 'I',\n    'Ì': 'I',\n    'Ỉ': 'I',\n    'Ȋ': 'I',\n    'Ī': 'I',\n    'Į': 'I',\n    'Ɨ': 'I',\n    'Ĩ': 'I',\n    'Ḭ': 'I',\n    'Ꝺ': 'D',\n    'Ꝼ': 'F',\n    'Ᵹ': 'G',\n    'Ꞃ': 'R',\n    'Ꞅ': 'S',\n    'Ꞇ': 'T',\n    'Ꝭ': 'IS',\n    'Ĵ': 'J',\n    'Ɉ': 'J',\n    'Ḱ': 'K',\n    'Ǩ': 'K',\n    'Ķ': 'K',\n    'Ⱪ': 'K',\n    'Ꝃ': 'K',\n    'Ḳ': 'K',\n    'Ƙ': 'K',\n    'Ḵ': 'K',\n    'Ꝁ': 'K',\n    'Ꝅ': 'K',\n    'Ĺ': 'L',\n    'Ƚ': 'L',\n    'Ľ': 'L',\n    'Ļ': 'L',\n    'Ḽ': 'L',\n    'Ḷ': 'L',\n    'Ḹ': 'L',\n    'Ⱡ': 'L',\n    'Ꝉ': 'L',\n    'Ḻ': 'L',\n    'Ŀ': 'L',\n    'Ɫ': 'L',\n    'ǈ': 'L',\n    'Ł': 'L',\n    'Ǉ': 'LJ',\n    'Ḿ': 'M',\n    'Ṁ': 'M',\n    'Ṃ': 'M',\n    'Ɱ': 'M',\n    'Ń': 'N',\n    'Ň': 'N',\n    'Ņ': 'N',\n    'Ṋ': 'N',\n    'Ṅ': 'N',\n    'Ṇ': 'N',\n    'Ǹ': 'N',\n    'Ɲ': 'N',\n    'Ṉ': 'N',\n    'Ƞ': 'N',\n    'ǋ': 'N',\n    'Ñ': 'N',\n    'Ǌ': 'NJ',\n    'Ó': 'O',\n    'Ŏ': 'O',\n    'Ǒ': 'O',\n    'Ô': 'O',\n    'Ố': 'O',\n    'Ộ': 'O',\n    'Ồ': 'O',\n    'Ổ': 'O',\n    'Ỗ': 'O',\n    'Ö': 'O',\n    'Ȫ': 'O',\n    'Ȯ': 'O',\n    'Ȱ': 'O',\n    'Ọ': 'O',\n    'Ő': 'O',\n    'Ȍ': 'O',\n    'Ò': 'O',\n    'Ỏ': 'O',\n    'Ơ': 'O',\n    'Ớ': 'O',\n    'Ợ': 'O',\n    'Ờ': 'O',\n    'Ở': 'O',\n    'Ỡ': 'O',\n    'Ȏ': 'O',\n    'Ꝋ': 'O',\n    'Ꝍ': 'O',\n    'Ō': 'O',\n    'Ṓ': 'O',\n    'Ṑ': 'O',\n    'Ɵ': 'O',\n    'Ǫ': 'O',\n    'Ǭ': 'O',\n    'Ø': 'O',\n    'Ǿ': 'O',\n    'Õ': 'O',\n    'Ṍ': 'O',\n    'Ṏ': 'O',\n    'Ȭ': 'O',\n    'Ƣ': 'OI',\n    'Ꝏ': 'OO',\n    'Ɛ': 'E',\n    'Ɔ': 'O',\n    'Ȣ': 'OU',\n    'Ṕ': 'P',\n    'Ṗ': 'P',\n    'Ꝓ': 'P',\n    'Ƥ': 'P',\n    'Ꝕ': 'P',\n    'Ᵽ': 'P',\n    'Ꝑ': 'P',\n    'Ꝙ': 'Q',\n    'Ꝗ': 'Q',\n    'Ŕ': 'R',\n    'Ř': 'R',\n    'Ŗ': 'R',\n    'Ṙ': 'R',\n    'Ṛ': 'R',\n    'Ṝ': 'R',\n    'Ȑ': 'R',\n    'Ȓ': 'R',\n    'Ṟ': 'R',\n    'Ɍ': 'R',\n    'Ɽ': 'R',\n    'Ꜿ': 'C',\n    'Ǝ': 'E',\n    'Ś': 'S',\n    'Ṥ': 'S',\n    'Š': 'S',\n    'Ṧ': 'S',\n    'Ş': 'S',\n    'Ŝ': 'S',\n    'Ș': 'S',\n    'Ṡ': 'S',\n    'Ṣ': 'S',\n    'Ṩ': 'S',\n    'Ť': 'T',\n    'Ţ': 'T',\n    'Ṱ': 'T',\n    'Ț': 'T',\n    'Ⱦ': 'T',\n    'Ṫ': 'T',\n    'Ṭ': 'T',\n    'Ƭ': 'T',\n    'Ṯ': 'T',\n    'Ʈ': 'T',\n    'Ŧ': 'T',\n    'Ɐ': 'A',\n    'Ꞁ': 'L',\n    'Ɯ': 'M',\n    'Ʌ': 'V',\n    'Ꜩ': 'TZ',\n    'Ú': 'U',\n    'Ŭ': 'U',\n    'Ǔ': 'U',\n    'Û': 'U',\n    'Ṷ': 'U',\n    'Ü': 'U',\n    'Ǘ': 'U',\n    'Ǚ': 'U',\n    'Ǜ': 'U',\n    'Ǖ': 'U',\n    'Ṳ': 'U',\n    'Ụ': 'U',\n    'Ű': 'U',\n    'Ȕ': 'U',\n    'Ù': 'U',\n    'Ủ': 'U',\n    'Ư': 'U',\n    'Ứ': 'U',\n    'Ự': 'U',\n    'Ừ': 'U',\n    'Ử': 'U',\n    'Ữ': 'U',\n    'Ȗ': 'U',\n    'Ū': 'U',\n    'Ṻ': 'U',\n    'Ų': 'U',\n    'Ů': 'U',\n    'Ũ': 'U',\n    'Ṹ': 'U',\n    'Ṵ': 'U',\n    'Ꝟ': 'V',\n    'Ṿ': 'V',\n    'Ʋ': 'V',\n    'Ṽ': 'V',\n    'Ꝡ': 'VY',\n    'Ẃ': 'W',\n    'Ŵ': 'W',\n    'Ẅ': 'W',\n    'Ẇ': 'W',\n    'Ẉ': 'W',\n    'Ẁ': 'W',\n    'Ⱳ': 'W',\n    'Ẍ': 'X',\n    'Ẋ': 'X',\n    'Ý': 'Y',\n    'Ŷ': 'Y',\n    'Ÿ': 'Y',\n    'Ẏ': 'Y',\n    'Ỵ': 'Y',\n    'Ỳ': 'Y',\n    'Ƴ': 'Y',\n    'Ỷ': 'Y',\n    'Ỿ': 'Y',\n    'Ȳ': 'Y',\n    'Ɏ': 'Y',\n    'Ỹ': 'Y',\n    'Ź': 'Z',\n    'Ž': 'Z',\n    'Ẑ': 'Z',\n    'Ⱬ': 'Z',\n    'Ż': 'Z',\n    'Ẓ': 'Z',\n    'Ȥ': 'Z',\n    'Ẕ': 'Z',\n    'Ƶ': 'Z',\n    'Ĳ': 'IJ',\n    'Œ': 'OE',\n    'ᴀ': 'A',\n    'ᴁ': 'AE',\n    'ʙ': 'B',\n    'ᴃ': 'B',\n    'ᴄ': 'C',\n    'ᴅ': 'D',\n    'ᴇ': 'E',\n    'ꜰ': 'F',\n    'ɢ': 'G',\n    'ʛ': 'G',\n    'ʜ': 'H',\n    'ɪ': 'I',\n    'ʁ': 'R',\n    'ᴊ': 'J',\n    'ᴋ': 'K',\n    'ʟ': 'L',\n    'ᴌ': 'L',\n    'ᴍ': 'M',\n    'ɴ': 'N',\n    'ᴏ': 'O',\n    'ɶ': 'OE',\n    'ᴐ': 'O',\n    'ᴕ': 'OU',\n    'ᴘ': 'P',\n    'ʀ': 'R',\n    'ᴎ': 'N',\n    'ᴙ': 'R',\n    'ꜱ': 'S',\n    'ᴛ': 'T',\n    'ⱻ': 'E',\n    'ᴚ': 'R',\n    'ᴜ': 'U',\n    'ᴠ': 'V',\n    'ᴡ': 'W',\n    'ʏ': 'Y',\n    'ᴢ': 'Z',\n    'á': 'a',\n    'ă': 'a',\n    'ắ': 'a',\n    'ặ': 'a',\n    'ằ': 'a',\n    'ẳ': 'a',\n    'ẵ': 'a',\n    'ǎ': 'a',\n    'â': 'a',\n    'ấ': 'a',\n    'ậ': 'a',\n    'ầ': 'a',\n    'ẩ': 'a',\n    'ẫ': 'a',\n    'ä': 'a',\n    'ǟ': 'a',\n    'ȧ': 'a',\n    'ǡ': 'a',\n    'ạ': 'a',\n    'ȁ': 'a',\n    'à': 'a',\n    'ả': 'a',\n    'ȃ': 'a',\n    'ā': 'a',\n    'ą': 'a',\n    'ᶏ': 'a',\n    'ẚ': 'a',\n    'å': 'a',\n    'ǻ': 'a',\n    'ḁ': 'a',\n    'ⱥ': 'a',\n    'ã': 'a',\n    'ꜳ': 'aa',\n    'æ': 'ae',\n    'ǽ': 'ae',\n    'ǣ': 'ae',\n    'ꜵ': 'ao',\n    'ꜷ': 'au',\n    'ꜹ': 'av',\n    'ꜻ': 'av',\n    'ꜽ': 'ay',\n    'ḃ': 'b',\n    'ḅ': 'b',\n    'ɓ': 'b',\n    'ḇ': 'b',\n    'ᵬ': 'b',\n    'ᶀ': 'b',\n    'ƀ': 'b',\n    'ƃ': 'b',\n    'ɵ': 'o',\n    'ć': 'c',\n    'č': 'c',\n    'ç': 'c',\n    'ḉ': 'c',\n    'ĉ': 'c',\n    'ɕ': 'c',\n    'ċ': 'c',\n    'ƈ': 'c',\n    'ȼ': 'c',\n    'ď': 'd',\n    'ḑ': 'd',\n    'ḓ': 'd',\n    'ȡ': 'd',\n    'ḋ': 'd',\n    'ḍ': 'd',\n    'ɗ': 'd',\n    'ᶑ': 'd',\n    'ḏ': 'd',\n    'ᵭ': 'd',\n    'ᶁ': 'd',\n    'đ': 'd',\n    'ɖ': 'd',\n    'ƌ': 'd',\n    'ı': 'i',\n    'ȷ': 'j',\n    'ɟ': 'j',\n    'ʄ': 'j',\n    'ǳ': 'dz',\n    'ǆ': 'dz',\n    'é': 'e',\n    'ĕ': 'e',\n    'ě': 'e',\n    'ȩ': 'e',\n    'ḝ': 'e',\n    'ê': 'e',\n    'ế': 'e',\n    'ệ': 'e',\n    'ề': 'e',\n    'ể': 'e',\n    'ễ': 'e',\n    'ḙ': 'e',\n    'ë': 'e',\n    'ė': 'e',\n    'ẹ': 'e',\n    'ȅ': 'e',\n    'è': 'e',\n    'ẻ': 'e',\n    'ȇ': 'e',\n    'ē': 'e',\n    'ḗ': 'e',\n    'ḕ': 'e',\n    'ⱸ': 'e',\n    'ę': 'e',\n    'ᶒ': 'e',\n    'ɇ': 'e',\n    'ẽ': 'e',\n    'ḛ': 'e',\n    'ꝫ': 'et',\n    'ḟ': 'f',\n    'ƒ': 'f',\n    'ᵮ': 'f',\n    'ᶂ': 'f',\n    'ǵ': 'g',\n    'ğ': 'g',\n    'ǧ': 'g',\n    'ģ': 'g',\n    'ĝ': 'g',\n    'ġ': 'g',\n    'ɠ': 'g',\n    'ḡ': 'g',\n    'ᶃ': 'g',\n    'ǥ': 'g',\n    'ḫ': 'h',\n    'ȟ': 'h',\n    'ḩ': 'h',\n    'ĥ': 'h',\n    'ⱨ': 'h',\n    'ḧ': 'h',\n    'ḣ': 'h',\n    'ḥ': 'h',\n    'ɦ': 'h',\n    'ẖ': 'h',\n    'ħ': 'h',\n    'ƕ': 'hv',\n    'í': 'i',\n    'ĭ': 'i',\n    'ǐ': 'i',\n    'î': 'i',\n    'ï': 'i',\n    'ḯ': 'i',\n    'ị': 'i',\n    'ȉ': 'i',\n    'ì': 'i',\n    'ỉ': 'i',\n    'ȋ': 'i',\n    'ī': 'i',\n    'į': 'i',\n    'ᶖ': 'i',\n    'ɨ': 'i',\n    'ĩ': 'i',\n    'ḭ': 'i',\n    'ꝺ': 'd',\n    'ꝼ': 'f',\n    'ᵹ': 'g',\n    'ꞃ': 'r',\n    'ꞅ': 's',\n    'ꞇ': 't',\n    'ꝭ': 'is',\n    'ǰ': 'j',\n    'ĵ': 'j',\n    'ʝ': 'j',\n    'ɉ': 'j',\n    'ḱ': 'k',\n    'ǩ': 'k',\n    'ķ': 'k',\n    'ⱪ': 'k',\n    'ꝃ': 'k',\n    'ḳ': 'k',\n    'ƙ': 'k',\n    'ḵ': 'k',\n    'ᶄ': 'k',\n    'ꝁ': 'k',\n    'ꝅ': 'k',\n    'ĺ': 'l',\n    'ƚ': 'l',\n    'ɬ': 'l',\n    'ľ': 'l',\n    'ļ': 'l',\n    'ḽ': 'l',\n    'ȴ': 'l',\n    'ḷ': 'l',\n    'ḹ': 'l',\n    'ⱡ': 'l',\n    'ꝉ': 'l',\n    'ḻ': 'l',\n    'ŀ': 'l',\n    'ɫ': 'l',\n    'ᶅ': 'l',\n    'ɭ': 'l',\n    'ł': 'l',\n    'ǉ': 'lj',\n    'ſ': 's',\n    'ẜ': 's',\n    'ẛ': 's',\n    'ẝ': 's',\n    'ḿ': 'm',\n    'ṁ': 'm',\n    'ṃ': 'm',\n    'ɱ': 'm',\n    'ᵯ': 'm',\n    'ᶆ': 'm',\n    'ń': 'n',\n    'ň': 'n',\n    'ņ': 'n',\n    'ṋ': 'n',\n    'ȵ': 'n',\n    'ṅ': 'n',\n    'ṇ': 'n',\n    'ǹ': 'n',\n    'ɲ': 'n',\n    'ṉ': 'n',\n    'ƞ': 'n',\n    'ᵰ': 'n',\n    'ᶇ': 'n',\n    'ɳ': 'n',\n    'ñ': 'n',\n    'ǌ': 'nj',\n    'ó': 'o',\n    'ŏ': 'o',\n    'ǒ': 'o',\n    'ô': 'o',\n    'ố': 'o',\n    'ộ': 'o',\n    'ồ': 'o',\n    'ổ': 'o',\n    'ỗ': 'o',\n    'ö': 'o',\n    'ȫ': 'o',\n    'ȯ': 'o',\n    'ȱ': 'o',\n    'ọ': 'o',\n    'ő': 'o',\n    'ȍ': 'o',\n    'ò': 'o',\n    'ỏ': 'o',\n    'ơ': 'o',\n    'ớ': 'o',\n    'ợ': 'o',\n    'ờ': 'o',\n    'ở': 'o',\n    'ỡ': 'o',\n    'ȏ': 'o',\n    'ꝋ': 'o',\n    'ꝍ': 'o',\n    'ⱺ': 'o',\n    'ō': 'o',\n    'ṓ': 'o',\n    'ṑ': 'o',\n    'ǫ': 'o',\n    'ǭ': 'o',\n    'ø': 'o',\n    'ǿ': 'o',\n    'õ': 'o',\n    'ṍ': 'o',\n    'ṏ': 'o',\n    'ȭ': 'o',\n    'ƣ': 'oi',\n    'ꝏ': 'oo',\n    'ɛ': 'e',\n    'ᶓ': 'e',\n    'ɔ': 'o',\n    'ᶗ': 'o',\n    'ȣ': 'ou',\n    'ṕ': 'p',\n    'ṗ': 'p',\n    'ꝓ': 'p',\n    'ƥ': 'p',\n    'ᵱ': 'p',\n    'ᶈ': 'p',\n    'ꝕ': 'p',\n    'ᵽ': 'p',\n    'ꝑ': 'p',\n    'ꝙ': 'q',\n    'ʠ': 'q',\n    'ɋ': 'q',\n    'ꝗ': 'q',\n    'ŕ': 'r',\n    'ř': 'r',\n    'ŗ': 'r',\n    'ṙ': 'r',\n    'ṛ': 'r',\n    'ṝ': 'r',\n    'ȑ': 'r',\n    'ɾ': 'r',\n    'ᵳ': 'r',\n    'ȓ': 'r',\n    'ṟ': 'r',\n    'ɼ': 'r',\n    'ᵲ': 'r',\n    'ᶉ': 'r',\n    'ɍ': 'r',\n    'ɽ': 'r',\n    'ↄ': 'c',\n    'ꜿ': 'c',\n    'ɘ': 'e',\n    'ɿ': 'r',\n    'ś': 's',\n    'ṥ': 's',\n    'š': 's',\n    'ṧ': 's',\n    'ş': 's',\n    'ŝ': 's',\n    'ș': 's',\n    'ṡ': 's',\n    'ṣ': 's',\n    'ṩ': 's',\n    'ʂ': 's',\n    'ᵴ': 's',\n    'ᶊ': 's',\n    'ȿ': 's',\n    'ɡ': 'g',\n    'ᴑ': 'o',\n    'ᴓ': 'o',\n    'ᴝ': 'u',\n    'ť': 't',\n    'ţ': 't',\n    'ṱ': 't',\n    'ț': 't',\n    'ȶ': 't',\n    'ẗ': 't',\n    'ⱦ': 't',\n    'ṫ': 't',\n    'ṭ': 't',\n    'ƭ': 't',\n    'ṯ': 't',\n    'ᵵ': 't',\n    'ƫ': 't',\n    'ʈ': 't',\n    'ŧ': 't',\n    'ᵺ': 'th',\n    'ɐ': 'a',\n    'ᴂ': 'ae',\n    'ǝ': 'e',\n    'ᵷ': 'g',\n    'ɥ': 'h',\n    'ʮ': 'h',\n    'ʯ': 'h',\n    'ᴉ': 'i',\n    'ʞ': 'k',\n    'ꞁ': 'l',\n    'ɯ': 'm',\n    'ɰ': 'm',\n    'ᴔ': 'oe',\n    'ɹ': 'r',\n    'ɻ': 'r',\n    'ɺ': 'r',\n    'ⱹ': 'r',\n    'ʇ': 't',\n    'ʌ': 'v',\n    'ʍ': 'w',\n    'ʎ': 'y',\n    'ꜩ': 'tz',\n    'ú': 'u',\n    'ŭ': 'u',\n    'ǔ': 'u',\n    'û': 'u',\n    'ṷ': 'u',\n    'ü': 'u',\n    'ǘ': 'u',\n    'ǚ': 'u',\n    'ǜ': 'u',\n    'ǖ': 'u',\n    'ṳ': 'u',\n    'ụ': 'u',\n    'ű': 'u',\n    'ȕ': 'u',\n    'ù': 'u',\n    'ủ': 'u',\n    'ư': 'u',\n    'ứ': 'u',\n    'ự': 'u',\n    'ừ': 'u',\n    'ử': 'u',\n    'ữ': 'u',\n    'ȗ': 'u',\n    'ū': 'u',\n    'ṻ': 'u',\n    'ų': 'u',\n    'ᶙ': 'u',\n    'ů': 'u',\n    'ũ': 'u',\n    'ṹ': 'u',\n    'ṵ': 'u',\n    'ᵫ': 'ue',\n    'ꝸ': 'um',\n    'ⱴ': 'v',\n    'ꝟ': 'v',\n    'ṿ': 'v',\n    'ʋ': 'v',\n    'ᶌ': 'v',\n    'ⱱ': 'v',\n    'ṽ': 'v',\n    'ꝡ': 'vy',\n    'ẃ': 'w',\n    'ŵ': 'w',\n    'ẅ': 'w',\n    'ẇ': 'w',\n    'ẉ': 'w',\n    'ẁ': 'w',\n    'ⱳ': 'w',\n    'ẘ': 'w',\n    'ẍ': 'x',\n    'ẋ': 'x',\n    'ᶍ': 'x',\n    'ý': 'y',\n    'ŷ': 'y',\n    'ÿ': 'y',\n    'ẏ': 'y',\n    'ỵ': 'y',\n    'ỳ': 'y',\n    'ƴ': 'y',\n    'ỷ': 'y',\n    'ỿ': 'y',\n    'ȳ': 'y',\n    'ẙ': 'y',\n    'ɏ': 'y',\n    'ỹ': 'y',\n    'ź': 'z',\n    'ž': 'z',\n    'ẑ': 'z',\n    'ʑ': 'z',\n    'ⱬ': 'z',\n    'ż': 'z',\n    'ẓ': 'z',\n    'ȥ': 'z',\n    'ẕ': 'z',\n    'ᵶ': 'z',\n    'ᶎ': 'z',\n    'ʐ': 'z',\n    'ƶ': 'z',\n    'ɀ': 'z',\n    'ﬀ': 'ff',\n    'ﬃ': 'ffi',\n    'ﬄ': 'ffl',\n    'ﬁ': 'fi',\n    'ﬂ': 'fl',\n    'ĳ': 'ij',\n    'œ': 'oe',\n    'ﬆ': 'st',\n    'ₐ': 'a',\n    'ₑ': 'e',\n    'ᵢ': 'i',\n    'ⱼ': 'j',\n    'ₒ': 'o',\n    'ᵣ': 'r',\n    'ᵤ': 'u',\n    'ᵥ': 'v',\n    'ₓ': 'x'\n};\n","import { NgModule } from '@angular/core';\n\nimport { EboxComponent, EboxContentDirective, EboxHeaderDirective } from './ebox.component';\nexport class EboxModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    exports: [EboxComponent, EboxContentDirective, EboxHeaderDirective],\n    declarations: [EboxComponent, EboxContentDirective, EboxHeaderDirective]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction EboxModule_tsickle_Closure_declarations() {\n/** @type {?} */\nEboxModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nEboxModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Directive } from '@angular/core';\nexport class EboxComponent { static decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-ebox',\n    template: `\n      <div class=\"ux-ebox-header\">\n          <ng-content select=\"ux-ebox-header\"></ng-content>\n      </div>\n\n      <div class=\"ux-ebox-content\">\n          <ng-content select=\"ux-ebox-content\"></ng-content>\n      </div>\n    `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction EboxComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nEboxComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nEboxComponent.ctorParameters;\n}\n\nexport class EboxHeaderDirective { static decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'ux-ebox-header'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction EboxHeaderDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nEboxHeaderDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nEboxHeaderDirective.ctorParameters;\n}\n\nexport class EboxContentDirective { static decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'ux-ebox-content'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction EboxContentDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nEboxContentDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nEboxContentDirective.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { SpinButtonModule } from '../spin-button/index';\nimport { TimePickerModule } from '../time-picker/index';\nimport { DateTimePickerComponent } from './date-time-picker.component';\nimport { DateTimePickerConfig } from './date-time-picker.config';\nimport { DayViewComponent } from './day-view/day-view.component';\nimport { HeaderComponent } from './header/header.component';\nimport { MonthViewComponent } from './month-view/month-view.component';\nimport { TimeViewComponent } from './time-view/time-view.component';\nimport { YearViewComponent } from './year-view/year-view.component';\nimport { FocusIfModule } from '../../directives/focus-if/index';\nexport class DateTimePickerModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        CommonModule,\n        FormsModule,\n        TimePickerModule,\n        SpinButtonModule,\n        FocusIfModule\n    ],\n    exports: [DateTimePickerComponent],\n    declarations: [DateTimePickerComponent, HeaderComponent, DayViewComponent, MonthViewComponent, YearViewComponent, TimeViewComponent],\n    providers: [\n        DateTimePickerConfig\n    ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction DateTimePickerModule_tsickle_Closure_declarations() {\n/** @type {?} */\nDateTimePickerModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDateTimePickerModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { FocusIfDirective } from './focus-if.directive';\nexport class FocusIfModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    exports: [FocusIfDirective],\n    declarations: [FocusIfDirective]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction FocusIfModule_tsickle_Closure_declarations() {\n/** @type {?} */\nFocusIfModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFocusIfModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ElementRef, Input } from '@angular/core';\nexport class FocusIfDirective {\n\n     focusIfDelay: number = 0;\n/**\n * @param {?} focus\n * @return {?}\n */\nset focusIf(focus: boolean) {\n\n        // if a timeout is pending then cancel it\n        if (!focus && this._timeout !== null) {\n            clearTimeout(this._timeout);\n        }\n\n        if (focus && this._timeout === null) {\n            this._timeout = window.setTimeout(() => {\n                this._elementRef.nativeElement.focus();\n                this._timeout = null;\n            }, this.focusIfDelay);\n        }\n    }\nprivate _timeout: number = null;\n/**\n * @param {?} _elementRef\n */\nconstructor(private _elementRef: ElementRef) { }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: '[focusIf]'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'focusIfDelay': [{ type: Input },],\n'focusIf': [{ type: Input },],\n};\n}\n\nfunction FocusIfDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nFocusIfDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFocusIfDirective.ctorParameters;\n/** @type {?} */\nFocusIfDirective.propDecorators;\n/** @type {?} */\nFocusIfDirective.prototype.focusIfDelay;\n/** @type {?} */\nFocusIfDirective.prototype._timeout;\n/** @type {?} */\nFocusIfDirective.prototype._elementRef;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, ChangeDetectionStrategy } from '@angular/core';\nimport { DatePickerMode, DateTimePickerService } from '../date-time-picker.service';\nimport { YearViewService, YearViewItem } from './year-view.service';\nexport class YearViewComponent {\n/**\n * @param {?} _datePicker\n * @param {?} yearService\n */\nconstructor(private _datePicker: DateTimePickerService,\npublic yearService: YearViewService) {}\n/**\n * @param {?} year\n * @return {?}\n */\nselect(year: number): void {\n    this._datePicker.setViewportYear(year);\n\n    // show the month picker\n    this._datePicker.goToChildMode();\n  }\n/**\n * @param {?} item\n * @param {?} yearOffset\n * @return {?}\n */\nfocusYear(item: YearViewItem, yearOffset: number): void {\n    this.yearService.setFocus(item.year + yearOffset);\n  }\n/**\n * @param {?} index\n * @return {?}\n */\ntrackRowByFn(index: number): number {\n    return index;\n  }\n/**\n * @param {?} index\n * @param {?} item\n * @return {?}\n */\ntrackYearByFn(index: number, item: YearViewItem): number {\n    return item.year;\n  }\n/**\n * @param {?} item\n * @return {?}\n */\ngetTabbable(item: YearViewItem): boolean {\n    const /** @type {?} */ focused = this.yearService.focused$.value;\n    const /** @type {?} */ grid = this.yearService.grid$.value;\n\n    // if there is a focused year check if this is it\n    if (focused) {\n\n        // check if the focused year is visible\n        const /** @type {?} */ isFocusedYearVisible = !!grid.find(row => !!row.find(_item => _item.year === focused));\n        \n        if (isFocusedYearVisible) {\n            return focused === item.year;\n        }\n    }\n\n    // if there is no focusable year then check if there is a selected year\n    const /** @type {?} */ isSelectedYearVisible = !!grid.find(row => !!row.find(year => year.isActiveYear));\n\n    if (isSelectedYearVisible) {\n        return item.isActiveYear;\n    }\n\n    // otherwise make the first month tabbable\n    return grid[0][0].year === item.year;\n}\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'ux-date-time-picker-year-view',\n  template: `\n    <div class=\"calendar\" role=\"grid\">\n      <div class=\"calendar-row\" role=\"row\" *ngFor=\"let row of yearService.grid$ | async; trackBy: trackRowByFn\">\n\n        <button *ngFor=\"let item of row; trackBy: trackYearByFn\"\n             role=\"gridcell\"\n             class=\"calendar-item\"\n             [focusIf]=\"(yearService.focused$ | async) === item.year\"\n             [attr.aria-label]=\"item.year\"\n             [attr.aria-selected]=\"item.isActiveYear\"\n             [class.current]=\"item.isCurrentYear\"\n             [class.active]=\"item.isActiveYear\"\n             (click)=\"select(item.year); $event.stopPropagation()\"\n             (keydown.ArrowLeft)=\"focusYear(item, -1); $event.preventDefault()\"\n             (keydown.ArrowRight)=\"focusYear(item, 1); $event.preventDefault()\"\n             (keydown.ArrowUp)=\"focusYear(item, -4); $event.preventDefault()\"\n             (keydown.ArrowDown)=\"focusYear(item, 4); $event.preventDefault()\"\n             [tabindex]=\"getTabbable(item) ? 0 : -1\">\n             {{ item.year }}\n        </button>\n      </div>\n    </div>\n  `,\n  providers: [YearViewService],\n  changeDetection: ChangeDetectionStrategy.OnPush\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: DateTimePickerService, },\n{type: YearViewService, },\n];\n}\n\nfunction YearViewComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nYearViewComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nYearViewComponent.ctorParameters;\n/** @type {?} */\nYearViewComponent.prototype._datePicker;\n/** @type {?} */\nYearViewComponent.prototype.yearService;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { Subscription } from 'rxjs/Subscription';\nimport { DatePickerHeaderEvent, DateTimePickerService } from '../date-time-picker.service';\nimport { gridify, range } from '../date-time-picker.utils';\nexport class YearViewService implements OnDestroy {\n\n    grid$ = new BehaviorSubject<YearViewItem[][]>([[]]);\n    focused$ = new BehaviorSubject<number>(null);\nprivate _year: number = new Date().getFullYear();\nprivate _subscription = new Subscription();\n/**\n * @param {?} _datepicker\n */\nconstructor(private _datepicker: DateTimePickerService) {\n        const year = _datepicker.year$.subscribe(_year => this.createYearGrid(_year));\n\n        const event = _datepicker.headerEvent$\n            .subscribe(_event => _event === DatePickerHeaderEvent.Next ? this.goToNextDecade() : this.goToPreviousDecade());\n\n        this._subscription.add(year);\n        this._subscription.add(event);\n    }\n/**\n * @return {?}\n */\nngOnDestroy(): void {\n        this._subscription.unsubscribe();\n    }\n/**\n * @param {?} year\n * @return {?}\n */\nsetFocus(year: number): void {\n        this.focused$.next(year);\n        this.createYearGrid(year);\n    }\n/**\n * @return {?}\n */\ngoToPreviousDecade(): void {\n        this.createYearGrid(this._year - 10);\n    }\n/**\n * @return {?}\n */\ngoToNextDecade(): void {\n        this.createYearGrid(this._year + 10);\n    }\n/**\n * @param {?=} year\n * @return {?}\n */\nprivate createYearGrid(year: number = this._year): void {\n\n        this._year = year;\n\n        // get the years to display\n        const /** @type {?} */ decade = this.getDecade(year);\n\n        const /** @type {?} */ currentYear = new Date().getFullYear();\n\n        // produce items in the correct format\n        const /** @type {?} */ items: YearViewItem[] = decade.range.map(_year => {\n            return {\n                year: _year,\n                isCurrentYear: _year === currentYear,\n                isActiveYear: _year === this._datepicker.year$.value\n            };\n        });\n\n        // update the header text\n        this._datepicker.setHeader(decade.start + ' - ' + decade.end);\n\n        // create the grid\n        this.grid$.next(gridify(items, 4));\n    }\n/**\n * Get the years in the current decade to display\n * @param {?} year\n * @return {?}\n */\nprivate getDecade(year: number): YearRange {\n\n        // figure the start and end points\n        const /** @type {?} */ start = (year - (year % 10));\n        const /** @type {?} */ end = start + 9;\n\n        // create an array containing all the numbers between the start and end points\n        return { start: start, end: end, range: range(start, end) };\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: DateTimePickerService, },\n];\n}\n\nfunction YearViewService_tsickle_Closure_declarations() {\n/** @type {?} */\nYearViewService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nYearViewService.ctorParameters;\n/** @type {?} */\nYearViewService.prototype.grid$;\n/** @type {?} */\nYearViewService.prototype.focused$;\n/** @type {?} */\nYearViewService.prototype._year;\n/** @type {?} */\nYearViewService.prototype._subscription;\n/** @type {?} */\nYearViewService.prototype._datepicker;\n}\n\n\n\nexport interface YearRange {\n    start: number;\n    end: number;\n    range: number[];\n}\n\nexport interface YearViewItem {\n    year: number;\n    isCurrentYear: boolean;\n    isActiveYear: boolean;\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, ChangeDetectionStrategy } from '@angular/core';\nimport { DateTimePickerService } from '../date-time-picker.service';\nexport class TimeViewComponent {\n/**\n * @param {?} datepicker\n */\nconstructor(public datepicker: DateTimePickerService) { }\n/**\n * @param {?} name\n * @return {?}\n */\nselectTimezone(name: string): void {\n        const /** @type {?} */ timezones = this.datepicker.timezones$.value;\n        \n        // find matching timezone\n        const /** @type {?} */ timezone = timezones.find(_timezone => _timezone.name === name);\n\n        if (timezone) {\n            this.datepicker.setTimezone(timezone);\n        }\n    }\n/**\n * @return {?}\n */\nincrementTimezone(): void {\n        const /** @type {?} */ timezone = this.datepicker.timezone$.value;\n        const /** @type {?} */ timezones = this.datepicker.timezones$.value;\n\n        const /** @type {?} */ currentZone = timezones.findIndex(zone => zone.name === timezone.name && zone.offset === timezone.offset);\n\n        // try to get the previous zone\n        this.datepicker.setTimezone(timezones[currentZone + 1] ? timezones[currentZone + 1] : timezones[currentZone]);\n    }\n/**\n * @return {?}\n */\ndecrementTimezone(): void {\n        const /** @type {?} */ timezone = this.datepicker.timezone$.value;\n        const /** @type {?} */ timezones = this.datepicker.timezones$.value;\n\n        const /** @type {?} */ currentZone = timezones.findIndex(zone => zone.name === timezone.name && zone.offset === timezone.offset);\n\n        // try to get the previous zone\n        this.datepicker.setTimezone(timezones[currentZone - 1] ? timezones[currentZone - 1] : timezones[currentZone]);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-date-time-picker-time-view',\n    template: `\n      <ux-time-picker *ngIf=\"datepicker.showTime$ | async\"\n          [value]=\"datepicker.selected$ | async\"\n          (valueChange)=\"datepicker.selected$.next($event)\"\n          [showSeconds]=\"datepicker.showSeconds$ | async\"\n          [showMeridian]=\"datepicker.showMeridian$ | async\"\n          [showSpinners]=\"datepicker.showSpinners$ | async\">\n      </ux-time-picker>\n\n      <ng-container *ngIf=\"datepicker.showTimezone$ | async\">\n\n          <div class=\"time-zone-picker\" *ngIf=\"datepicker.showSpinners$ | async\">\n\n              <ux-spin-button\n                  class=\"time-zone-spinner\"\n                  [value]=\"(datepicker.timezone$ | async).name\"\n                  [readOnly]=\"true\"\n                  (increment)=\"incrementTimezone()\"\n                  (decrement)=\"decrementTimezone()\"\n                  inputAriaLabel=\"Time Zone\"\n                  incrementAriaLabel=\"Switch to the next time zone\"\n                  decrementAriaLabel=\"Switch to the previous time zone\">\n              </ux-spin-button>\n          </div>\n\n          <div class=\"time-zone-picker\" *ngIf=\"!(datepicker.showSpinners$ | async)\">\n\n              <select class=\"form-control time-zone-select\"\n                      tabindex=\"0\"\n                      [ngModel]=\"(datepicker.timezone$ | async).name\"\n                      (ngModelChange)=\"selectTimezone($event)\"\n                      aria-label=\"Timezone\"\n                      [attr.aria-valuenow]=\"(datepicker.timezone$ | async).name\">\n\n                  <option *ngFor=\"let zone of datepicker.timezones$ | async\"\n                          [selected]=\"zone.name === (datepicker.timezone$ | async).name\"\n                          [value]=\"zone.name\">\n                      {{ zone?.name }}\n                  </option>\n\n              </select>\n          </div>\n\n      </ng-container>\n    `,\n    changeDetection: ChangeDetectionStrategy.OnPush\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: DateTimePickerService, },\n];\n}\n\nfunction TimeViewComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nTimeViewComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTimeViewComponent.ctorParameters;\n/** @type {?} */\nTimeViewComponent.prototype.datepicker;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { ChangeDetectionStrategy, Component, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs/Subscription';\nimport { DatePickerHeaderEvent, DateTimePickerService } from '../date-time-picker.service';\nimport { MonthViewItem, MonthViewService } from './month-view.service';\nexport class MonthViewComponent implements OnDestroy {\nprivate _subscription: Subscription;\n/**\n * @param {?} _datePicker\n * @param {?} monthService\n */\nconstructor(private _datePicker: DateTimePickerService,\npublic monthService: MonthViewService) {\n        this._subscription = _datePicker.headerEvent$\n            .subscribe(event => event === DatePickerHeaderEvent.Next ? this.next() : this.previous());\n    }\n/**\n * @return {?}\n */\nngOnDestroy(): void {\n        this._subscription.unsubscribe();\n    }\n/**\n * Go to the previous year\n * @return {?}\n */\nprevious(): void {\n        this._datePicker.setViewportYear(this._datePicker.year$.value - 1);\n    }\n/**\n * Go to the next year\n * @return {?}\n */\nnext(): void {\n        this._datePicker.setViewportYear(this._datePicker.year$.value + 1);\n    }\n/**\n * Select a month in the calendar\n * @param {?} month the index of the month to select\n * @return {?}\n */\nselect(month: number): void {\n        this._datePicker.setViewportMonth(month);\n\n        // show the day picker\n        this._datePicker.goToChildMode();\n    }\n/**\n * @param {?} item\n * @param {?} monthOffset\n * @return {?}\n */\nfocusMonth(item: MonthViewItem, monthOffset: number): void {\n        let /** @type {?} */ targetMonth = item.month + monthOffset;\n        let /** @type {?} */ targetYear = item.year;\n\n        if (targetMonth < 0) {\n            targetMonth += 12;\n            targetYear -= 1;\n        }\n\n        if (targetMonth >= 12) {\n            targetMonth -= 12;\n            targetYear += 1;\n        }\n\n        this.monthService.setFocus(targetMonth, targetYear);\n    }\n/**\n * @param {?} index\n * @return {?}\n */\ntrackRowByFn(index: number): number {\n        return index;\n    }\n/**\n * @param {?} index\n * @param {?} item\n * @return {?}\n */\ntrackMonthByFn(index: number, item: MonthViewItem): string {\n        return `${item.month} ${item.year}`;\n    }\n/**\n * @param {?} item\n * @return {?}\n */\ngetTabbable(item: MonthViewItem): boolean {\n        const /** @type {?} */ focused = this.monthService.focused$.value;\n        const /** @type {?} */ grid = this.monthService.grid$.value;\n\n        // if there is a focused month check if this is it\n        if (focused) {\n\n            // check if the focused month is visible\n            const /** @type {?} */ isFocusedMonthVisible = !!grid.find(row => !!row.find(_item => _item.month === focused.month && _item.year === focused.year));\n            \n            if (isFocusedMonthVisible) {\n                return focused.month === item.month && focused.year === item.year;\n            }\n        }\n\n        // if there is no focusable month then check if there is a selected month\n        const /** @type {?} */ isSelectedMonthVisible = !!grid.find(row => !!row.find(month => month.isActiveMonth));\n\n        if (isSelectedMonthVisible) {\n            return item.isActiveMonth;\n        }\n\n        // otherwise make the first month tabbable\n        return item.month === 0;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-date-time-picker-month-view',\n    template: `\n      <div class=\"calendar\" role=\"grid\">\n        <div class=\"calendar-row\" *ngFor=\"let row of monthService.grid$ | async; trackBy: trackRowByFn\" role=\"row\">\n\n          <button role=\"gridcell\"\n               class=\"calendar-item\"\n               *ngFor=\"let item of row; trackBy: trackMonthByFn\"\n               [focusIf]=\"(monthService.focused$ | async)?.month === item.month && (monthService.focused$ | async)?.year === item.year\"\n               [tabindex]=\"getTabbable(item) ? 0 : -1\"\n               [attr.aria-label]=\"item.name + ' ' + item.year\"\n               [attr.aria-selected]=\"item.isActiveMonth\"\n               [class.active]=\"item.isActiveMonth\"\n               [class.current]=\"item.isCurrentMonth\"\n               (click)=\"select(item.month); $event.stopPropagation()\"\n               (keydown.ArrowLeft)=\"focusMonth(item, -1); $event.preventDefault()\"\n               (keydown.ArrowRight)=\"focusMonth(item, 1); $event.preventDefault()\"\n               (keydown.ArrowUp)=\"focusMonth(item, -4); $event.preventDefault()\"\n               (keydown.ArrowDown)=\"focusMonth(item, 4); $event.preventDefault()\">\n               {{ item.name }}\n          </button>\n        </div>\n      </div>\n    `,\n    providers: [MonthViewService],\n    changeDetection: ChangeDetectionStrategy.OnPush\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: DateTimePickerService, },\n{type: MonthViewService, },\n];\n}\n\nfunction MonthViewComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nMonthViewComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMonthViewComponent.ctorParameters;\n/** @type {?} */\nMonthViewComponent.prototype._subscription;\n/** @type {?} */\nMonthViewComponent.prototype._datePicker;\n/** @type {?} */\nMonthViewComponent.prototype.monthService;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { Subscription } from 'rxjs/Subscription';\nimport { DateTimePickerService, ModeDirection } from '../date-time-picker.service';\nimport { gridify, monthsShort, range } from '../date-time-picker.utils';\nexport class MonthViewService implements OnDestroy {\n\n    grid$ = new BehaviorSubject<MonthViewItem[][]>([[]]);\n    focused$ = new BehaviorSubject<FocusedMonthItem>(null);\nprivate _subscription: Subscription;\n/**\n * @param {?} _datepicker\n */\nconstructor(private _datepicker: DateTimePickerService) {\n        this._subscription = _datepicker.year$.subscribe(year => this.createMonthGrid(year));\n    }\n/**\n * @return {?}\n */\nngOnDestroy(): void {\n        this._subscription.unsubscribe();\n    }\n/**\n * @param {?} month\n * @param {?} year\n * @return {?}\n */\nsetFocus(month: number, year: number): void {\n        this.focused$.next({ month: month, year: year });\n\n        // update the viewport to ensure focused month is visible\n        this._datepicker.setViewportYear(year);\n    }\n/**\n * @param {?} year\n * @return {?}\n */\nprivate createMonthGrid(year: number): void {\n\n        // update the header\n        this._datepicker.setHeader(year.toString());\n\n        // get the current year and month\n        const /** @type {?} */ currentMonth = new Date().getMonth();\n        const /** @type {?} */ currentYear = new Date().getFullYear();\n\n        // get the currently selected month\n        const /** @type {?} */ activeMonth = this._datepicker.selected$.value.getMonth();\n        const /** @type {?} */ activeYear = this._datepicker.selected$.value.getFullYear();\n\n        // create a 4x3 grid of month numbers\n        const /** @type {?} */ months: MonthViewItem[] = range(0, 11).map(month => {\n            return {\n                name: monthsShort[month],\n                month: month,\n                year: year,\n                isCurrentMonth: year === currentYear && month === currentMonth,\n                isActiveMonth: year === activeYear && month === activeMonth\n            };\n        });\n\n        // map these to the appropriate format\n        const /** @type {?} */ items: MonthViewItem[][] = gridify(months, 4);\n\n        // update the grid\n        this.grid$.next(items);\n\n        // if there is no focused month select the first one\n        if (this._datepicker.modeDirection === ModeDirection.Descend && this.focused$.value === null) {\n            \n            // check if the selected month is in view\n            const /** @type {?} */ selectedMonth = months.find(month => month.isActiveMonth);\n\n            this.setFocus(selectedMonth ? selectedMonth.month : 0, year);\n        }\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: DateTimePickerService, },\n];\n}\n\nfunction MonthViewService_tsickle_Closure_declarations() {\n/** @type {?} */\nMonthViewService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMonthViewService.ctorParameters;\n/** @type {?} */\nMonthViewService.prototype.grid$;\n/** @type {?} */\nMonthViewService.prototype.focused$;\n/** @type {?} */\nMonthViewService.prototype._subscription;\n/** @type {?} */\nMonthViewService.prototype._datepicker;\n}\n\n\nexport interface MonthViewItem {\n    name: string;\n    month: number;\n    year: number;\n    isCurrentMonth: boolean;\n    isActiveMonth: boolean;\n}\n\nexport interface FocusedMonthItem {\n    month: number;\n    year: number;\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, ChangeDetectionStrategy } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { map } from 'rxjs/operators';\nimport { DatePickerMode, DateTimePickerService } from '../date-time-picker.service';\nexport class HeaderComponent {\n\n    canAscend$: Observable<boolean> = this.datepicker.mode$.pipe(map(mode => mode !== DatePickerMode.Year));\n    \n    mode$: Observable<string> = this.datepicker.mode$.pipe(map(mode => {\n        switch (mode) {\n            case DatePickerMode.Day:\n                return 'Day';\n            case DatePickerMode.Month:\n                return 'Month';\n            case DatePickerMode.Year:\n                return 'Year';\n        }\n    }));\n\n    headerAria$: Observable<string> = this.datepicker.mode$.pipe(map(mode => {\n        switch (mode) {\n            case DatePickerMode.Day:\n                return 'Switch to show months in the year';\n            case DatePickerMode.Month:\n                return 'Switch to show years in the decade';\n            case DatePickerMode.Year:\n                return '';\n        }\n    }));\n\n    previousAria$: Observable<string> = this.datepicker.mode$.pipe(map(mode => {\n        switch (mode) {\n            case DatePickerMode.Day:\n                return 'Previous month';\n            case DatePickerMode.Month:\n                return 'Previous year';\n            case DatePickerMode.Year:\n                return 'Previous decade';\n        }\n    }));\n\n    nextAria$: Observable<string> = this.datepicker.mode$.pipe(map(mode => {\n        switch (mode) {\n            case DatePickerMode.Day:\n                return 'Next month';\n            case DatePickerMode.Month:\n                return 'Next year';\n            case DatePickerMode.Year:\n                return 'Next decade';\n        }\n    }));\n/**\n * @param {?} datepicker\n */\nconstructor(public datepicker: DateTimePickerService) { }\n/**\n * @return {?}\n */\nprevious(): void {\n        this.datepicker.goToPrevious();\n    }\n/**\n * @return {?}\n */\nascend(): void {\n        this.datepicker.goToParentMode();\n    }\n/**\n * @return {?}\n */\nnext(): void {\n        this.datepicker.goToNext();\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-date-time-picker-header',\n    template: `\n      <header class=\"header\">\n\n        <button class=\"header-navigation\"\n                (click)=\"previous(); $event.stopPropagation()\"\n                [attr.aria-label]=\"previousAria$ | async\"\n                tabindex=\"0\">\n\n          <i class=\"hpe-icon hpe-previous\"></i>\n        </button>\n\n        <button class=\"header-title\"\n                [attr.aria-label]=\"headerAria$ | async\"\n                [class.active]=\"canAscend$ | async\"\n                (click)=\"ascend(); $event.stopPropagation()\"\n                [tabindex]=\"(canAscend$ | async) ? 0 : -1\">\n             {{ datepicker.header$ | async }}\n        </button>\n\n        <button class=\"header-navigation\"\n                (click)=\"next(); $event.stopPropagation()\"\n                [attr.aria-label]=\"nextAria$ | async\"\n                tabindex=\"0\">\n\n          <i class=\"hpe-icon hpe-next\"></i>\n        </button>\n      </header>\n    `,\n    changeDetection: ChangeDetectionStrategy.OnPush\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: DateTimePickerService, },\n];\n}\n\nfunction HeaderComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nHeaderComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nHeaderComponent.ctorParameters;\n/** @type {?} */\nHeaderComponent.prototype.canAscend$;\n/** @type {?} */\nHeaderComponent.prototype.mode$;\n/** @type {?} */\nHeaderComponent.prototype.headerAria$;\n/** @type {?} */\nHeaderComponent.prototype.previousAria$;\n/** @type {?} */\nHeaderComponent.prototype.nextAria$;\n/** @type {?} */\nHeaderComponent.prototype.datepicker;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { ChangeDetectionStrategy, Component, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs/Subscription';\nimport { DatePickerHeaderEvent, DateTimePickerService } from '../date-time-picker.service';\nimport { DayViewItem, DayViewService } from './day-view.service';\nexport class DayViewComponent implements OnDestroy {\nprivate _subscription: Subscription;\n/**\n * @param {?} datePicker\n * @param {?} dayService\n */\nconstructor(public datePicker: DateTimePickerService,\npublic dayService: DayViewService) {\n    this._subscription = datePicker.headerEvent$\n      .subscribe(event => event === DatePickerHeaderEvent.Next ? this.next() : this.previous());\n  }\n/**\n * @return {?}\n */\nngOnDestroy(): void {\n    this._subscription.unsubscribe();\n  }\n/**\n * Navigate to the previous page of dates\n * @return {?}\n */\nprevious(): void {\n    this.datePicker.setViewportMonth(this.datePicker.month$.value - 1);\n  }\n/**\n * Navigate to the next page of dates\n * @return {?}\n */\nnext(): void {\n    this.datePicker.setViewportMonth(this.datePicker.month$.value + 1);\n  }\n/**\n * Select a particular date\n * @param {?} date the date to select\n * @param {?} element\n * @return {?}\n */\nselect(date: Date, element: HTMLElement): void {\n    // update the current date object\n    this.datePicker.setDate(date.getDate(), date.getMonth(), date.getFullYear());\n\n    // focus the newly selected date\n    this.dayService.setFocus(date.getDate(), date.getMonth(), date.getFullYear());\n  }\n/**\n * @param {?} index\n * @return {?}\n */\ntrackWeekByFn(index: number): number {\n    return index;\n  }\n/**\n * @param {?} index\n * @param {?} item\n * @return {?}\n */\ntrackDayByFn(index: number, item: DayViewItem): string {\n    return `${ item.day } ${ item.month } ${ item.year }`;\n  }\n/**\n * @param {?} item\n * @param {?} dayOffset\n * @return {?}\n */\nfocusDate(item: DayViewItem, dayOffset: number): void {\n\n    // determine the date of the day\n    const /** @type {?} */ target = new Date(item.date.setDate(item.date.getDate() + dayOffset));\n\n    // identify which date should be focused\n    this.dayService.setFocus(target.getDate(), target.getMonth(), target.getFullYear());\n  }\n/**\n * @param {?} item\n * @return {?}\n */\ngetTabbable(item: DayViewItem): boolean {\n    const /** @type {?} */ focused = this.dayService.focused$.value;\n    const /** @type {?} */ grid = this.dayService.grid$.value;\n\n    // if there is a focused month check if this is it\n    if (focused) {\n\n      // check if the focused day is visible\n      const /** @type {?} */ isFocusedDayVisible = !!grid.find(row => !!row.find(_item => _item.day === focused.day && _item.month === focused.month && _item.year === focused.year));\n      \n      if (isFocusedDayVisible) {\n        return focused.day === item.day && focused.month === item.month && focused.year === item.year;\n      }\n    }\n\n    // if there is no focusable day then check if there is a selected day\n    const /** @type {?} */ isSelectedDayVisible = !!grid.find(row => !!row.find(day => day.isActive));\n\n    if (isSelectedDayVisible) {\n        return item.isActive;\n    }\n\n    // otherwise make the first day tabbable\n    return item.day === 1;\n  }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'ux-date-time-picker-day-view',\n  template: `\n    <table class=\"calendar\">\n        <thead>\n            <tr>\n                <th *ngFor=\"let day of datePicker.weekdays$ | async\" class=\"weekday\" [attr.aria-label]=\"day\">{{ day }}</th>\n            </tr>\n        </thead>\n\n        <tbody role=\"grid\">\n            <tr role=\"row\" *ngFor=\"let row of dayService.grid$ | async; trackBy: trackWeekByFn\">\n\n                <td *ngFor=\"let item of row; trackBy: trackDayByFn\" class=\"date-cell\" role=\"gridcell\">\n\n                    <button class=\"date-button\"\n                            [focusIf]=\"(dayService.focused$ | async)?.day === item.day && (dayService.focused$ | async)?.month === item.month && (dayService.focused$ | async)?.year === item.year\"\n                            [attr.aria-label]=\"item.date | date\"\n                            [attr.aria-selected]=\"item.isActive\"\n                            [attr.aria-hidden]=\"!item.isCurrentMonth\"\n                            [class.current]=\"item.isToday\"\n                            [class.active]=\"item.isActive\"\n                            [class.preview]=\"!item.isCurrentMonth\"\n                            [tabindex]=\"getTabbable(item) ? 0 : -1\"\n                            (click)=\"select(item.date); $event.stopPropagation()\"\n                            (keydown.ArrowLeft)=\"focusDate(item, -1); $event.preventDefault()\"\n                            (keydown.ArrowRight)=\"focusDate(item, 1); $event.preventDefault()\"\n                            (keydown.ArrowUp)=\"focusDate(item, -7); $event.preventDefault()\"\n                            (keydown.ArrowDown)=\"focusDate(item, 7); $event.preventDefault()\">\n\n                        {{ item.date.getDate() }}\n                    </button>\n\n                </td>\n            </tr>\n        </tbody>\n    </table>\n  `,\n  providers: [DayViewService],\n  changeDetection: ChangeDetectionStrategy.OnPush\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: DateTimePickerService, },\n{type: DayViewService, },\n];\n}\n\nfunction DayViewComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nDayViewComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDayViewComponent.ctorParameters;\n/** @type {?} */\nDayViewComponent.prototype._subscription;\n/** @type {?} */\nDayViewComponent.prototype.datePicker;\n/** @type {?} */\nDayViewComponent.prototype.dayService;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { Subscription } from 'rxjs/Subscription';\nimport { combineLatest } from 'rxjs/observable/combineLatest';\nimport { DateTimePickerService, ModeDirection } from '../date-time-picker.service';\nimport { compareDays, dateRange, gridify, months } from '../date-time-picker.utils';\nexport class DayViewService implements OnDestroy {\n\n    grid$ = new BehaviorSubject<DayViewItem[][]>([[]]);\n    focused$ = new BehaviorSubject<FocusedDayItem>(null);\nprivate _subscription: Subscription;\n/**\n * @param {?} _datepicker\n */\nconstructor(private _datepicker: DateTimePickerService) {\n        this._subscription = combineLatest(_datepicker.month$, _datepicker.year$)\n            .subscribe(([month, year]) => this.createDayGrid(month, year));\n    }\n/**\n * @return {?}\n */\nngOnDestroy(): void {\n        this._subscription.unsubscribe();\n    }\n/**\n * @param {?} day\n * @param {?} month\n * @param {?} year\n * @return {?}\n */\nsetFocus(day: number, month: number, year: number): void {\n        this.focused$.next({ day: day, month: month, year: year });\n\n        // update the date picker to show the required month and year\n        this._datepicker.setViewportMonth(month);\n        this._datepicker.setViewportYear(year);\n    }\n/**\n * @param {?} month\n * @param {?} year\n * @return {?}\n */\nprivate createDayGrid(month: number, year: number): void {\n\n        // update the header\n        this._datepicker.setHeader(months[month] + ' ' + year);\n\n        // find the lower and upper boundaries\n        const /** @type {?} */ start = new Date(year, month, 1);\n        const /** @type {?} */ end = new Date(year, month + 1, 0);\n\n        // we always want to show from the sunday - this may include showing some dates from the previous month\n        start.setDate(start.getDate() - start.getDay());\n\n        // we also want to make sure that the range ends on a saturday\n        end.setDate(end.getDate() + (6 - end.getDay()));\n\n        // create an array of all the days to display\n        const /** @type {?} */ dates: DayViewItem[] = dateRange(start, end).map(date => ({\n            day: date.getDate(),\n            month: date.getMonth(),\n            year: date.getFullYear(),\n            date: date,\n            isToday: this.isToday(date),\n            isActive: this.isActive(date),\n            isCurrentMonth: date.getMonth() === month\n        }));\n\n        // turn the dates into a grid\n        const /** @type {?} */ items: DayViewItem[][] = gridify(dates, 7);\n\n        this.grid$.next(items);\n\n        // if no item has yet been focused then focus the first day of the month\n        if ((this._datepicker.modeDirection === ModeDirection.None || this._datepicker.modeDirection === ModeDirection.Descend) && this.focused$.value === null) {\n\n            // check if the selected item is visible\n            const /** @type {?} */ selectedDay = dates.find(day => day.isCurrentMonth && day.isActive);\n\n            if (selectedDay) {\n                this.setFocus(selectedDay.day, selectedDay.month, selectedDay.year);\n            } else {\n\n                // find the first day of the month\n                const /** @type {?} */ first = dates.find(date => date.day === 1);\n    \n                // focus the date\n                this.setFocus(first.day, first.month, first.year);\n            }\n\n        }\n    }\n/**\n * Determine whether or not a specific date is today\n * @param {?} date The date to check\n * @return {?}\n */\nprivate isToday(date: Date): boolean {\n        return compareDays(new Date(), date);\n    }\n/**\n * Determines whether or not a specific date is the selected one\n * @param {?} date the date to check\n * @return {?}\n */\nprivate isActive(date: Date): boolean {\n        return compareDays(this._datepicker.selected$.value, date);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: DateTimePickerService, },\n];\n}\n\nfunction DayViewService_tsickle_Closure_declarations() {\n/** @type {?} */\nDayViewService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDayViewService.ctorParameters;\n/** @type {?} */\nDayViewService.prototype.grid$;\n/** @type {?} */\nDayViewService.prototype.focused$;\n/** @type {?} */\nDayViewService.prototype._subscription;\n/** @type {?} */\nDayViewService.prototype._datepicker;\n}\n\n\nexport interface DayViewItem {\n    day: number;\n    month: number;\n    year: number;\n    date: Date;\n    isToday: boolean;\n    isActive: boolean;\n    isCurrentMonth: boolean;\n}\n\nexport interface FocusedDayItem {\n    day: number;\n    month: number;\n    year: number;\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, EventEmitter, Input, OnDestroy, Output, ChangeDetectionStrategy } from '@angular/core';\nimport { Subscription } from 'rxjs/Subscription';\nimport { distinctUntilChanged } from 'rxjs/operators';\nimport { DatePickerMode, DateTimePickerService, DateTimePickerTimezone } from './date-time-picker.service';\nimport { dateComparator, timezoneComparator } from './date-time-picker.utils';\nexport class DateTimePickerComponent implements OnDestroy {\nprivate _timezone: DateTimePickerTimezone;\n/**\n * @param {?} value\n * @return {?}\n */\nset showDate(value: boolean) {\n    this.datepicker.showDate$.next(value);\n  }\n/**\n * @param {?} value\n * @return {?}\n */\nset showTime(value: boolean) {\n    this.datepicker.showTime$.next(value);\n  }\n/**\n * @param {?} value\n * @return {?}\n */\nset showTimezone(value: boolean) {\n    this.datepicker.showTimezone$.next(value);\n  }\n/**\n * @param {?} value\n * @return {?}\n */\nset showSeconds(value: boolean) {\n    this.datepicker.showSeconds$.next(value);\n  }\n/**\n * @param {?} value\n * @return {?}\n */\nset showMeridian(value: boolean) {\n    this.datepicker.showMeridian$.next(value);\n  }\n/**\n * @param {?} value\n * @return {?}\n */\nset showSpinners(value: boolean) {\n    this.datepicker.showSpinners$.next(value);\n  }\n/**\n * @param {?} value\n * @return {?}\n */\nset weekdays(value: string[]) {\n    this.datepicker.weekdays$.next(value);\n  }\n/**\n * @param {?} value\n * @return {?}\n */\nset nowBtnText(value: string) {\n    this.datepicker.nowBtnText$.next(value);\n  }\n/**\n * @param {?} value\n * @return {?}\n */\nset timezones(value: DateTimePickerTimezone[]) {\n    this.datepicker.timezones$.next(value);\n  }\n\n\n   dateChange: EventEmitter<Date> = new EventEmitter<Date>();\n   timezoneChange: EventEmitter<DateTimePickerTimezone> = new EventEmitter<DateTimePickerTimezone>();\n/**\n * @param {?} value\n * @return {?}\n */\nset date(value: Date) {\n    if (!dateComparator(value, this.datepicker.selected$.value)) {\n      this.datepicker.selected$.next(new Date(value));\n    }\n  }\n/**\n * @param {?} value\n * @return {?}\n */\nset timezone(value: DateTimePickerTimezone) {\n    this.datepicker.timezone$.next(value);\n  }\n\n  // expose enum to view\n  DatePickerMode = DatePickerMode;\nprivate _subscription = new Subscription();\n/**\n * @param {?} datepicker\n */\nconstructor(public datepicker: DateTimePickerService) {\n    const valueChange = datepicker.selected$.pipe(distinctUntilChanged(dateComparator))\n      .subscribe(date => this.dateChange.emit(date));\n\n    const timezoneChange = datepicker.timezone$.pipe(distinctUntilChanged(timezoneComparator))\n      .subscribe((timezone: DateTimePickerTimezone) => this.timezoneChange.emit(timezone));\n  }\n/**\n * @return {?}\n */\nngOnDestroy(): void {\n    this._subscription.unsubscribe();\n  }\n/**\n * Change the date to the current date and time\n * @return {?}\n */\nsetToNow(): void {\n\n    // set the date to the current moment\n    this.datepicker.setDateToNow();\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'ux-date-time-picker',\n  template: `\n    <div class=\"calendar-container\">\n\n      <ux-date-time-picker-header></ux-date-time-picker-header>\n\n      <ng-container *ngIf=\"datepicker.showDate$ | async\" [ngSwitch]=\"datepicker.mode$ | async\">\n\n          <!-- Display days in the current month -->\n          <ux-date-time-picker-day-view *ngSwitchCase=\"DatePickerMode.Day\"></ux-date-time-picker-day-view>\n\n          <!-- Display the months in the current year -->\n          <ux-date-time-picker-month-view *ngSwitchCase=\"DatePickerMode.Month\"></ux-date-time-picker-month-view>\n\n          <!-- Display a decade -->\n          <ux-date-time-picker-year-view *ngSwitchCase=\"DatePickerMode.Year\"></ux-date-time-picker-year-view>\n\n      </ng-container>\n\n      <!-- Display a Time Picker -->\n      <ux-date-time-picker-time-view *ngIf=\"datepicker.showTime$ | async\"></ux-date-time-picker-time-view>\n\n    </div>\n\n    <button class=\"now-button\" aria-label=\"Set date to now\" (click)=\"setToNow()\">{{ datepicker.nowBtnText$ | async }}</button>\n  `,\n  providers: [DateTimePickerService],\n  changeDetection: ChangeDetectionStrategy.OnPush\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: DateTimePickerService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'showDate': [{ type: Input },],\n'showTime': [{ type: Input },],\n'showTimezone': [{ type: Input },],\n'showSeconds': [{ type: Input },],\n'showMeridian': [{ type: Input },],\n'showSpinners': [{ type: Input },],\n'weekdays': [{ type: Input },],\n'nowBtnText': [{ type: Input },],\n'timezones': [{ type: Input },],\n'dateChange': [{ type: Output },],\n'timezoneChange': [{ type: Output },],\n'date': [{ type: Input },],\n'timezone': [{ type: Input },],\n};\n}\n\nfunction DateTimePickerComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nDateTimePickerComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDateTimePickerComponent.ctorParameters;\n/** @type {?} */\nDateTimePickerComponent.propDecorators;\n/** @type {?} */\nDateTimePickerComponent.prototype._timezone;\n/** @type {?} */\nDateTimePickerComponent.prototype.dateChange;\n/** @type {?} */\nDateTimePickerComponent.prototype.timezoneChange;\n/** @type {?} */\nDateTimePickerComponent.prototype.DatePickerMode;\n/** @type {?} */\nDateTimePickerComponent.prototype._subscription;\n/** @type {?} */\nDateTimePickerComponent.prototype.datepicker;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { Subject } from 'rxjs/Subject';\nimport { Subscription } from 'rxjs/Subscription';\nimport { distinctUntilChanged } from 'rxjs/operators';\nimport { DateTimePickerConfig } from './date-time-picker.config';\nimport { dateComparator } from './date-time-picker.utils';\nexport class DateTimePickerService {\n\n    mode$: BehaviorSubject<DatePickerMode> = new BehaviorSubject<DatePickerMode>(DatePickerMode.Day);\n    date$: BehaviorSubject<Date> = new BehaviorSubject<Date>(new Date());\n    timezone$ = new BehaviorSubject<DateTimePickerTimezone>(this.getCurrentTimezone());\n    selected$: BehaviorSubject<Date> = new BehaviorSubject<Date>(new Date());\n\n    // the month and year to display in the viewport\n    month$: BehaviorSubject<number> = new BehaviorSubject<number>(new Date().getMonth());\n    year$: BehaviorSubject<number> = new BehaviorSubject<number>(new Date().getFullYear());\n\n    showDate$ = new BehaviorSubject<boolean>(this._config.showDate);\n    showTime$ = new BehaviorSubject<boolean>(this._config.showTime);\n    showTimezone$ = new BehaviorSubject<boolean>(this._config.showTimezone);\n    showSeconds$ = new BehaviorSubject<boolean>(this._config.showSeconds);\n    showMeridian$ = new BehaviorSubject<boolean>(this._config.showMeridian);\n    showSpinners$ = new BehaviorSubject<boolean>(this._config.showSpinners);\n    weekdays$ = new BehaviorSubject<string[]>(this._config.weekdays);\n    nowBtnText$ = new BehaviorSubject<string>(this._config.nowBtnText);\n    timezones$ = new BehaviorSubject<DateTimePickerTimezone[]>(this._config.timezones);\n\n    header$ = new BehaviorSubject<string>(null);\n    headerEvent$ = new Subject<DatePickerHeaderEvent>();\n    modeDirection: ModeDirection = ModeDirection.None;\nprivate _subscription: Subscription;\n/**\n * @param {?} _config\n */\nconstructor(private _config: DateTimePickerConfig) {\n\n        // when the active date changes set the currently selected date\n        this._subscription = this.selected$.pipe(distinctUntilChanged(dateComparator)).subscribe(date => {\n\n            // the month and year displayed in the viewport should reflect the newly selected items\n            this.setViewportMonth(date.getMonth());\n            this.setViewportYear(date.getFullYear());\n\n            // emit the new date to the component host\n            this.date$.next(date);\n        });\n    }\n/**\n * @return {?}\n */\nngOnDestroy(): void {\n        this._subscription.unsubscribe();\n    }\n/**\n * @param {?} month\n * @return {?}\n */\nsetViewportMonth(month: number): void {\n        if (month < 0) {\n            this.month$.next(11);\n            this.year$.next(this.year$.value - 1);\n        } else if (month > 11) {\n            this.month$.next(0);\n            this.year$.next(this.year$.value + 1);\n        } else {\n            this.month$.next(month);\n        }\n    }\n/**\n * @param {?} year\n * @return {?}\n */\nsetViewportYear(year: number): void {\n        this.year$.next(year);\n    }\n/**\n * @param {?} day\n * @param {?} month\n * @param {?} year\n * @return {?}\n */\nsetDate(day: number, month: number, year: number): void {\n        const /** @type {?} */ date = new Date(this.selected$.value);\n\n        date.setDate(day);\n        date.setMonth(month);\n        date.setFullYear(year);\n\n        this.selected$.next(date);\n    }\n/**\n * @return {?}\n */\nsetDateToNow(): void {\n        this.selected$.next(new Date());\n    }\n/**\n * @param {?} mode\n * @return {?}\n */\nsetViewportMode(mode: DatePickerMode): void {\n        this.mode$.next(mode);\n    }\n/**\n * @return {?}\n */\ngoToChildMode(): void {\n        this.modeDirection = ModeDirection.Descend;\n\n        switch (this.mode$.value) {\n\n            case DatePickerMode.Year:\n                return this.setViewportMode(DatePickerMode.Month);\n\n            case DatePickerMode.Month:\n                return this.setViewportMode(DatePickerMode.Day);\n        }\n    }\n/**\n * @return {?}\n */\ngoToParentMode(): void {\n        this.modeDirection = ModeDirection.Ascend;\n\n        switch (this.mode$.value) {\n\n            case DatePickerMode.Day:\n                return this.setViewportMode(DatePickerMode.Month);\n\n            case DatePickerMode.Month:\n                return this.setViewportMode(DatePickerMode.Year);\n        }\n    }\n/**\n * @return {?}\n */\ngoToNext(): void {\n        this.headerEvent$.next(DatePickerHeaderEvent.Next);\n    }\n/**\n * @return {?}\n */\ngoToPrevious(): void {\n        this.headerEvent$.next(DatePickerHeaderEvent.Previous);\n    }\n/**\n * @param {?} header\n * @return {?}\n */\nsetHeader(header: string): void {\n        this.header$.next(header);\n    }\n/**\n * @return {?}\n */\ngetCurrentTimezone(): DateTimePickerTimezone {\n        const /** @type {?} */ offset = new Date().getTimezoneOffset();\n        return this._config.timezones.find(timezone => timezone.offset === offset);\n    }\n/**\n * @param {?} timezone\n * @return {?}\n */\nsetTimezone(timezone: DateTimePickerTimezone): void {\n        this.timezone$.next(timezone);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: DateTimePickerConfig, },\n];\n}\n\nfunction DateTimePickerService_tsickle_Closure_declarations() {\n/** @type {?} */\nDateTimePickerService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDateTimePickerService.ctorParameters;\n/** @type {?} */\nDateTimePickerService.prototype.mode$;\n/** @type {?} */\nDateTimePickerService.prototype.date$;\n/** @type {?} */\nDateTimePickerService.prototype.timezone$;\n/** @type {?} */\nDateTimePickerService.prototype.selected$;\n/** @type {?} */\nDateTimePickerService.prototype.month$;\n/** @type {?} */\nDateTimePickerService.prototype.year$;\n/** @type {?} */\nDateTimePickerService.prototype.showDate$;\n/** @type {?} */\nDateTimePickerService.prototype.showTime$;\n/** @type {?} */\nDateTimePickerService.prototype.showTimezone$;\n/** @type {?} */\nDateTimePickerService.prototype.showSeconds$;\n/** @type {?} */\nDateTimePickerService.prototype.showMeridian$;\n/** @type {?} */\nDateTimePickerService.prototype.showSpinners$;\n/** @type {?} */\nDateTimePickerService.prototype.weekdays$;\n/** @type {?} */\nDateTimePickerService.prototype.nowBtnText$;\n/** @type {?} */\nDateTimePickerService.prototype.timezones$;\n/** @type {?} */\nDateTimePickerService.prototype.header$;\n/** @type {?} */\nDateTimePickerService.prototype.headerEvent$;\n/** @type {?} */\nDateTimePickerService.prototype.modeDirection;\n/** @type {?} */\nDateTimePickerService.prototype._subscription;\n/** @type {?} */\nDateTimePickerService.prototype._config;\n}\n\nexport type DatePickerMode = number;\nexport let DatePickerMode: any = {};\nDatePickerMode.Day = 0;\nDatePickerMode.Month = 1;\nDatePickerMode.Year = 2;\nDatePickerMode[DatePickerMode.Day] = \"Day\";\nDatePickerMode[DatePickerMode.Month] = \"Month\";\nDatePickerMode[DatePickerMode.Year] = \"Year\";\n\nexport type ModeDirection = number;\nexport let ModeDirection: any = {};\nModeDirection.None = 0;\nModeDirection.Ascend = 1;\nModeDirection.Descend = 2;\nModeDirection[ModeDirection.None] = \"None\";\nModeDirection[ModeDirection.Ascend] = \"Ascend\";\nModeDirection[ModeDirection.Descend] = \"Descend\";\n\nexport type DatePickerHeaderEvent = number;\nexport let DatePickerHeaderEvent: any = {};\nDatePickerHeaderEvent.Previous = 0;\nDatePickerHeaderEvent.Next = 1;\nDatePickerHeaderEvent[DatePickerHeaderEvent.Previous] = \"Previous\";\nDatePickerHeaderEvent[DatePickerHeaderEvent.Next] = \"Next\";\n\n\nexport interface DateTimePickerTimezone {\n    name: string;\n    offset: number;\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * Add a config service to allow an application\n * to customize the date time picker default settings\n * across the entire application\n */\n\n\nimport { Injectable } from '@angular/core';\nimport { weekdaysShort } from './date-time-picker.utils';\nimport { DateTimePickerTimezone } from './date-time-picker.service';\nexport class DateTimePickerConfig {\n\n    showDate: boolean = true;\n    showTime: boolean = true;\n    showTimezone: boolean = true;\n    showSeconds: boolean = false;\n    showMeridian: boolean = true;\n    showSpinners: boolean = true;\n    weekdays: string[] = weekdaysShort;\n    nowBtnText: string = 'Today';\n\n    timezones: DateTimePickerTimezone[] = [\n        { name: 'GMT-11', offset: 660 },\n        { name: 'GMT-10', offset: 600 },\n        { name: 'GMT-9', offset: 540 },\n        { name: 'GMT-8', offset: 480 },\n        { name: 'GMT-7', offset: 420 },\n        { name: 'GMT-6', offset: 360 },\n        { name: 'GMT-5', offset: 300 },\n        { name: 'GMT-4', offset: 240 },\n        { name: 'GMT-3', offset: 180 },\n        { name: 'GMT-2', offset: 120 },\n        { name: 'GMT-1', offset: 60 },\n        { name: 'GMT', offset: 0 },\n        { name: 'GMT+1', offset: -60 },\n        { name: 'GMT+2', offset: -120 },\n        { name: 'GMT+3', offset: -180 },\n        { name: 'GMT+4', offset: -240 },\n        { name: 'GMT+5', offset: -300 },\n        { name: 'GMT+6', offset: -360 },\n        { name: 'GMT+7', offset: -420 },\n        { name: 'GMT+8', offset: -480 },\n        { name: 'GMT+9', offset: -540 },\n        { name: 'GMT+10', offset: -600 },\n        { name: 'GMT+11', offset: -660 },\n        { name: 'GMT+12', offset: -720 }\n    ];\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction DateTimePickerConfig_tsickle_Closure_declarations() {\n/** @type {?} */\nDateTimePickerConfig.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDateTimePickerConfig.ctorParameters;\n/** @type {?} */\nDateTimePickerConfig.prototype.showDate;\n/** @type {?} */\nDateTimePickerConfig.prototype.showTime;\n/** @type {?} */\nDateTimePickerConfig.prototype.showTimezone;\n/** @type {?} */\nDateTimePickerConfig.prototype.showSeconds;\n/** @type {?} */\nDateTimePickerConfig.prototype.showMeridian;\n/** @type {?} */\nDateTimePickerConfig.prototype.showSpinners;\n/** @type {?} */\nDateTimePickerConfig.prototype.weekdays;\n/** @type {?} */\nDateTimePickerConfig.prototype.nowBtnText;\n/** @type {?} */\nDateTimePickerConfig.prototype.timezones;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { DateTimePickerTimezone } from './date-time-picker.service';\n/**\n * Convert a single dimension array to a double dimension array\n * @template T\n * @param {?} items the single dimension array to convert\n * @param {?} columns the number of items each array should have\n * @return {?}\n */\nexport function gridify<T>(items: T[], columns: number): T[][] {\n\n    // create a copy of array so not to effect the original\n    items = items.slice(0);\n\n    const /** @type {?} */ grid: T[][] = [];\n\n    while (items.length) {\n        grid.push(items.splice(0, columns));\n    }\n\n    return grid;\n}\n/**\n * Create an array of numbers between two limits\n * @param {?} start the lower limit\n * @param {?} end the upper limit\n * @return {?}\n */\nexport function range(start: number, end: number): number[] {\n    const /** @type {?} */ list: number[] = [];\n\n    for (let /** @type {?} */ idx = start; idx <= end; idx++) {\n        list.push(idx);\n    }\n\n    return list;\n}\n/**\n * Create an array of dates between two points\n * @param {?} start the date to start the array\n * @param {?} end the date to end the array\n * @return {?}\n */\nexport function dateRange(start: Date, end: Date): Date[] {\n\n    let /** @type {?} */ dates: Date[] = [];\n\n    // loop through all the days between the date range\n    while (start <= end) {\n\n        // add the date to the array\n        dates.push(new Date(start));\n\n        // move to the next day\n        start.setDate(start.getDate() + 1);\n    }\n\n    return dates;\n}\n/**\n * Compare two dates to see if they are on the same day\n * @param {?} day1 the first date to compare\n * @param {?} day2 the second date to compare\n * @return {?}\n */\nexport function compareDays(day1: Date, day2: Date): boolean {\n    return day1.getDate() === day2.getDate() &&\n        day1.getMonth() === day2.getMonth() &&\n        day1.getFullYear() === day2.getFullYear();\n}\n/**\n * Date comparison for use primarily with distinctUntilChanged\n * @param {?} dateOne\n * @param {?} dateTwo\n * @return {?}\n */\nexport function dateComparator(dateOne: Date, dateTwo: Date): boolean {\n    return dateOne.getTime() === dateTwo.getTime();\n}\n/**\n * Timezone comparison for use primarily with distinctUntilChanged\n * @param {?} zoneOne\n * @param {?} zoneTwo\n * @return {?}\n */\nexport function timezoneComparator(zoneOne: DateTimePickerTimezone, zoneTwo: DateTimePickerTimezone): boolean {\n    return zoneOne.name === zoneTwo.name && zoneOne.offset === zoneTwo.offset;\n}\n/**\n * Export an array of all the available months\n */\nexport const months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\nexport const /** @type {?} */ monthsShort = months.map(month => month.substring(0, 3));\n/**\n * Export an array of all the available days of the week\n */\nexport const weekdays = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'];\nexport const /** @type {?} */ weekdaysShort = weekdays.map(weekday => weekday.substring(0, 3));","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { SpinButtonModule } from '../spin-button/index';\nimport { TimeFormatPipe } from './time-format.pipe';\nimport { TimePickerComponent } from './time-picker.component';\nexport class TimePickerModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        CommonModule,\n        FormsModule,\n        SpinButtonModule\n    ],\n    exports: [TimePickerComponent],\n    declarations: [TimePickerComponent, TimeFormatPipe],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction TimePickerModule_tsickle_Closure_declarations() {\n/** @type {?} */\nTimePickerModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTimePickerModule.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, OnDestroy, Output, ViewEncapsulation, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { Observable } from 'rxjs/Observable';\nimport { Subscription } from 'rxjs/Subscription';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\nexport const /** @type {?} */ TIME_PICKER_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => TimePickerComponent),\n    multi: true\n};\nexport class TimePickerComponent implements ControlValueAccessor, OnDestroy {\n\n     arrowkeys: boolean = true;\n     mousewheel: boolean = true;\n     disabled: boolean = false;\n     readOnly: boolean = false;\n\n     showMeridian: boolean = false;\n     showHours: boolean = true;\n     showMinutes: boolean = true;\n     showSeconds: boolean = false;\n     showSpinners: boolean = true;\n\n     hourStep: number = 1;\n     minuteStep: number = 1;\n     secondStep: number = 1;\n\n     min: Date;\n     max: Date;\n     meridians: string[] = ['AM', 'PM'];\n/**\n * @param {?} value\n * @return {?}\n */\nset value(value: Date) {\n        this.value$.next(new Date(value));\n        this.valueChange.emit(this.value$.value);\n\n        this.onChangeCallback(this.value$.value);\n        this.onTouchedCallback();\n    }\n/**\n * @return {?}\n */\nget value(): Date {\n        return new Date(this.value$.value);\n    }\n\n     valueChange = new EventEmitter<Date>();\n     isValid = new EventEmitter<boolean>();\n\n    onTouchedCallback: () => void = () => { };\n    onChangeCallback: (_: Date) => void = () => { };\n\n    value$ = new BehaviorSubject<Date>(new Date());\n\n    // create observables that are derived from the latest value\n    hour$: Observable<number> = this.value$.pipe(map(date => date.getHours()), map(hour => this.showMeridian ? this.getMeridianTime(hour) : hour));\n    minute$: Observable<number> = this.value$.pipe(map(date => date.getMinutes()));\n    second$: Observable<number> = this.value$.pipe(map(date => date.getSeconds()));\n    meridian$: Observable<string> = this.value$.pipe(map(date => date.getHours() < 12 ? this.meridians[0] : this.meridians[1]));\n    valid$: Observable<boolean> = this.value$.pipe(map(date => this.checkValidity(date)));\nprivate _meridian: string = this.meridians[0];\nprivate _subscription: Subscription;\nconstructor() {\n        this._subscription = this.valid$.pipe(distinctUntilChanged()).subscribe(valid => this.isValid.emit(valid));\n    }\n/**\n * @return {?}\n */\nngOnDestroy(): void {\n        this._subscription.unsubscribe();\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nwriteValue(value: Date): void {\n        this.value = value;\n    }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnChange(fn: (_: Date) => void): void {\n        this.onChangeCallback = fn;\n    }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnTouched(fn: () => void): void {\n        this.onTouchedCallback = fn;\n    }\n/**\n * @param {?} isDisabled\n * @return {?}\n */\nsetDisabledState(isDisabled: boolean): void {\n        this.disabled = isDisabled;\n    }\n/**\n * @param {?} hour\n * @return {?}\n */\ngetMeridianTime(hour: number): number {\n        return hour > 12 ? hour - 12 : hour;\n    }\n/**\n * @param {?} hour\n * @return {?}\n */\nsetHour(hour: number): void {\n        const /** @type {?} */ date = this.value;\n        date.setHours(hour ? hour : 0);\n\n        this.value = date;\n    }\n/**\n * @param {?} minute\n * @return {?}\n */\nsetMinute(minute: number): void {\n        const /** @type {?} */ date = this.value;\n        date.setMinutes(minute ? minute : 0);\n\n        this.value = date;\n    }\n/**\n * @param {?} seconds\n * @return {?}\n */\nsetSeconds(seconds: number): void {\n        const /** @type {?} */ date = this.value;\n        date.setSeconds(seconds ? seconds : 0);\n\n        this.value = date;\n    }\n/**\n * @param {?=} arrowkey\n * @return {?}\n */\nincrementHour(arrowkey: boolean = false): void {\n        if (this.disabled || arrowkey && !this.arrowkeys) {\n            return;\n        }\n\n        this.setHour(this.value.getHours() + this.hourStep);\n    }\n/**\n * @param {?=} arrowkey\n * @return {?}\n */\ndecrementHour(arrowkey: boolean = false): void {\n        if (this.disabled || arrowkey && !this.arrowkeys) {\n            return;\n        }\n\n        this.setHour(this.value.getHours() - this.hourStep);\n    }\n/**\n * @param {?=} arrowkey\n * @return {?}\n */\nincrementMinute(arrowkey: boolean = false): void {\n        if (this.disabled || arrowkey && !this.arrowkeys) {\n            return;\n        }\n\n        this.setMinute(this.value.getMinutes() + this.minuteStep);\n    }\n/**\n * @param {?=} arrowkey\n * @return {?}\n */\ndecrementMinute(arrowkey: boolean = false): void {\n        if (this.disabled || arrowkey && !this.arrowkeys) {\n            return;\n        }\n\n        this.setMinute(this.value.getMinutes() - this.minuteStep);\n    }\n/**\n * @param {?=} arrowkey\n * @return {?}\n */\nincrementSecond(arrowkey: boolean = false): void {\n        if (this.disabled || arrowkey && !this.arrowkeys) {\n            return;\n        }\n\n        this.setSeconds(this.value.getSeconds() + this.secondStep);\n    }\n/**\n * @param {?=} arrowkey\n * @return {?}\n */\ndecrementSecond(arrowkey: boolean = false): void {\n        if (this.disabled || arrowkey && !this.arrowkeys) {\n            return;\n        }\n\n        this.setSeconds(this.value.getSeconds() - this.secondStep);\n    }\n/**\n * @param {?} meridian\n * @return {?}\n */\nselectMeridian(meridian: string): void {\n        this._meridian = meridian;\n\n        // get the current time\n        const /** @type {?} */ hour = this.value.getHours();\n\n        // if we have selected AM\n        if (meridian === this.meridians[0]) {\n            if (hour >= 12) {\n                this.setHour(hour - 12);\n            }\n        }\n\n        // if we have selected PM\n        if (meridian === this.meridians[1]) {\n            if (hour < 12) {\n                this.setHour(hour + 12);\n            }\n        }\n    }\n/**\n * @param {?} date\n * @return {?}\n */\ncheckValidity(date: Date): boolean {\n        let /** @type {?} */ valid = true;\n\n        if (this.min && date.getTime() <= this.min.getTime()) {\n            valid = false;\n        }\n\n        if (this.max && date.getTime() >= this.max.getTime()) {\n            valid = false;\n        }\n\n        return valid;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nhourChange(value: string): void {\n\n        // convert the string to a number\n        let /** @type {?} */ hour = parseInt(value);\n        let /** @type {?} */ currentHour = this.value.getHours();\n\n        // if the value hasn't changed, do nothing\n        if (hour === currentHour) {\n            return;\n        }\n\n        // ensure the hours is valid\n        if (!isNaN(hour)) {\n            if (hour < 0) {\n                hour = 0;\n            }\n\n            if (hour > (this.showMeridian ? 12 : 23)) {\n                hour = this.showMeridian ? 12 : 23;\n            }\n        }\n\n        hour = isNaN(hour) ? currentHour : hour;\n\n        // if the number is invalid then restore it to the previous value\n        if (this._meridian === this.meridians[0]) {\n            if (hour >= 12) {\n                hour -= 12;\n            }\n        }\n\n        // if we have selected PM\n        if (this._meridian === this.meridians[1]) {\n            if (hour < 12) {\n                hour += 12;\n            }\n        }\n\n        this.setHour(hour);\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nminuteChange(value: string): void {\n\n        // convert the string to a number\n        let /** @type {?} */ minute = parseInt(value);\n        let /** @type {?} */ currentMinute = this.value.getMinutes();\n\n        // if the value hasn't changed, do nothing\n        if (minute === currentMinute) {\n            return;\n        }\n\n        // ensure the hours is valid\n        if (!isNaN(minute)) {\n            if (minute < 0) {\n                minute = 59;\n            }\n\n            if (minute > 59) {\n                minute = 0;\n            }\n        }\n\n        // if the number is invalid then restore it to the previous value\n        this.setMinute(isNaN(minute) ? currentMinute : minute);\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nsecondChange(value: string): void {\n        // convert the string to a number\n        let /** @type {?} */ second = parseInt(value);\n        let /** @type {?} */ currentSecond = this.value.getSeconds();\n\n        // if the value hasn't changed, do nothing\n        if (second === currentSecond) {\n            return;\n        }\n\n        // ensure the hours is valid\n        if (!isNaN(second)) {\n            if (second < 0) {\n                second = 0;\n            }\n\n            if (second > 59) {\n                second = 59;\n            }\n        }\n\n        // if the number is invalid then restore it to the previous value\n        this.setSeconds(isNaN(second) ? currentSecond : second);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-time-picker',\n    template: `\n      <div class=\"time-picker\" aria-label=\"Time picker\">\n\n          <div class=\"time-picker-column\" [class.has-error]=\"!(valid$ | async)\" *ngIf=\"showHours\">\n\n              <ux-spin-button\n                  type=\"number\"\n                  class=\"time-spinner\"\n                  placeholder=\"HH\"\n                  [min]=\"0\"\n                  [max]=\"showMeridian ? 12 : 23\"\n                  [value]=\"hour$ | async | timeFormat\"\n                  (valueChange)=\"hourChange($event)\"\n                  [spinners]=\"showSpinners\"\n                  [disabled]=\"disabled\"\n                  [readOnly]=\"readOnly\"\n                  inputAriaLabel=\"hour\"\n                  incrementAriaLabel=\"Increment the hour\"\n                  decrementAriaLabel=\"Decrement the hour\"\n                  (increment)=\"incrementHour()\"\n                  (decrement)=\"decrementHour()\">\n              </ux-spin-button>\n\n          </div>\n\n          <div class=\"time-picker-separator\" *ngIf=\"showMinutes\">:</div>\n\n          <div class=\"time-picker-column\" [class.has-error]=\"!(valid$ | async)\" *ngIf=\"showMinutes\">\n\n              <ux-spin-button\n                  type=\"number\"\n                  class=\"time-spinner\"\n                  placeholder=\"MM\"\n                  [min]=\"0\"\n                  [max]=\"59\"\n                  [value]=\"minute$ | async | timeFormat\"\n                  (valueChange)=\"minuteChange($event)\"\n                  [spinners]=\"showSpinners\"\n                  [disabled]=\"disabled\"\n                  [readOnly]=\"readOnly\"\n                  inputAriaLabel=\"minute\"\n                  incrementAriaLabel=\"Increment the minute\"\n                  decrementAriaLabel=\"Decrement the minute\"\n                  (increment)=\"incrementMinute()\"\n                  (decrement)=\"decrementMinute()\">\n              </ux-spin-button>\n\n          </div>\n\n          <div class=\"time-picker-separator\" *ngIf=\"showSeconds\">:</div>\n\n          <div class=\"time-picker-column\" [class.has-error]=\"!(valid$ | async)\" *ngIf=\"showSeconds\">\n\n              <ux-spin-button\n                  type=\"number\"\n                  class=\"time-spinner\"\n                  type=\"number\"\n                  placeholder=\"SS\"\n                  [min]=\"0\"\n                  [max]=\"59\"\n                  [value]=\"second$ | async | timeFormat\"\n                  (valueChange)=\"secondChange($event)\"\n                  [spinners]=\"showSpinners\"\n                  [disabled]=\"disabled\"\n                  [readOnly]=\"readOnly\"\n                  inputAriaLabel=\"seconds\"\n                  incrementAriaLabel=\"Increment the second\"\n                  decrementAriaLabel=\"Decrement the second\"\n                  (increment)=\"incrementSecond()\"\n                  (decrement)=\"decrementSecond()\">\n              </ux-spin-button>\n\n          </div>\n      </div>\n\n      <div class=\"time-picker-meridian\" *ngIf=\"showMeridian\">\n\n          <div class=\"btn-group\" role=\"radiogroup\">\n\n              <button class=\"btn button-toggle-accent\"\n                      *ngFor=\"let meridian of meridians\"\n                      role=\"radio\"\n                      tabindex=\"0\"\n                      [disabled]=\"disabled\"\n                      (click)=\"selectMeridian(meridian)\"\n                      [class.active]=\"meridian === (meridian$ | async)\"\n                      [attr.aria-label]=\"meridian\"\n                      [attr.aria-checked]=\"meridian === (meridian$ | async)\"\n                      [attr.aria-disabled]=\"disabled\">\n                      {{ meridian }}\n              </button>\n\n          </div>\n      </div>\n    `,\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [TIME_PICKER_VALUE_ACCESSOR],\n    host: {\n        'aria-label': 'Time Picker'\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'arrowkeys': [{ type: Input },],\n'mousewheel': [{ type: Input },],\n'disabled': [{ type: Input },],\n'readOnly': [{ type: Input },],\n'showMeridian': [{ type: Input },],\n'showHours': [{ type: Input },],\n'showMinutes': [{ type: Input },],\n'showSeconds': [{ type: Input },],\n'showSpinners': [{ type: Input },],\n'hourStep': [{ type: Input },],\n'minuteStep': [{ type: Input },],\n'secondStep': [{ type: Input },],\n'min': [{ type: Input },],\n'max': [{ type: Input },],\n'meridians': [{ type: Input },],\n'value': [{ type: Input },],\n'valueChange': [{ type: Output },],\n'isValid': [{ type: Output },],\n};\n}\n\nfunction TimePickerComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nTimePickerComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTimePickerComponent.ctorParameters;\n/** @type {?} */\nTimePickerComponent.propDecorators;\n/** @type {?} */\nTimePickerComponent.prototype.arrowkeys;\n/** @type {?} */\nTimePickerComponent.prototype.mousewheel;\n/** @type {?} */\nTimePickerComponent.prototype.disabled;\n/** @type {?} */\nTimePickerComponent.prototype.readOnly;\n/** @type {?} */\nTimePickerComponent.prototype.showMeridian;\n/** @type {?} */\nTimePickerComponent.prototype.showHours;\n/** @type {?} */\nTimePickerComponent.prototype.showMinutes;\n/** @type {?} */\nTimePickerComponent.prototype.showSeconds;\n/** @type {?} */\nTimePickerComponent.prototype.showSpinners;\n/** @type {?} */\nTimePickerComponent.prototype.hourStep;\n/** @type {?} */\nTimePickerComponent.prototype.minuteStep;\n/** @type {?} */\nTimePickerComponent.prototype.secondStep;\n/** @type {?} */\nTimePickerComponent.prototype.min;\n/** @type {?} */\nTimePickerComponent.prototype.max;\n/** @type {?} */\nTimePickerComponent.prototype.meridians;\n/** @type {?} */\nTimePickerComponent.prototype.valueChange;\n/** @type {?} */\nTimePickerComponent.prototype.isValid;\n/** @type {?} */\nTimePickerComponent.prototype.onTouchedCallback;\n/** @type {?} */\nTimePickerComponent.prototype.onChangeCallback;\n/** @type {?} */\nTimePickerComponent.prototype.value$;\n/** @type {?} */\nTimePickerComponent.prototype.hour$;\n/** @type {?} */\nTimePickerComponent.prototype.minute$;\n/** @type {?} */\nTimePickerComponent.prototype.second$;\n/** @type {?} */\nTimePickerComponent.prototype.meridian$;\n/** @type {?} */\nTimePickerComponent.prototype.valid$;\n/** @type {?} */\nTimePickerComponent.prototype._meridian;\n/** @type {?} */\nTimePickerComponent.prototype._subscription;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nexport class TimeFormatPipe implements PipeTransform {\n/**\n * @param {?} value\n * @return {?}\n */\ntransform(value: number): string | number {\n    return value < 10 ? '0' + value : value;\n  }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Pipe, args: [{\n  name: 'timeFormat'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction TimeFormatPipe_tsickle_Closure_declarations() {\n/** @type {?} */\nTimeFormatPipe.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTimeFormatPipe.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { SpinButtonComponent } from './spin-button.component';\nexport class SpinButtonModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        CommonModule,\n        FormsModule\n    ],\n    exports: [SpinButtonComponent],\n    declarations: [SpinButtonComponent]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction SpinButtonModule_tsickle_Closure_declarations() {\n/** @type {?} */\nSpinButtonModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSpinButtonModule.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output, ViewEncapsulation, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nexport const /** @type {?} */ SPIN_BUTTON_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => SpinButtonComponent),\n    multi: true\n};\nexport class SpinButtonComponent implements ControlValueAccessor {\n/**\n * @param {?} value\n * @return {?}\n */\nset value(value: any) {\n        this._value = value;\n        this.onChangeCallback(value);\n        this.onTouchedCallback();\n    }\n/**\n * @return {?}\n */\nget value(): any {\n        return this._value;\n    }\n\n     type: string = 'text';\n     min: number;\n     max: number;\n     placeholder: string = '';\n     disabled: boolean = false;\n     spinners: boolean = true;\n     readOnly: boolean = true;\n     scrolling: boolean = true;\n     arrowkeys: boolean = true;\n\n     incrementAriaLabel: string;\n     inputAriaLabel: string;\n     decrementAriaLabel: string;\n\n     valueChange = new EventEmitter<any>();\n\n     increment = new EventEmitter<void>();\n     decrement = new EventEmitter<void>();\n\n    onTouchedCallback: () => void = () => { };\n    onChangeCallback: (_: any) => void = () => { };\nprivate _value: any;\n/**\n * @param {?} event\n * @return {?}\n */\nscroll(event: WheelEvent): void {\n\n        if (!this.scrolling) {\n            return;\n        }\n\n        if (event.deltaY > 0) {\n            this.triggerDecrement();\n        } else {\n            this.triggerIncrement();\n        }\n\n        event.preventDefault();\n    }\n/**\n * @return {?}\n */\ntriggerIncrement(): void {\n        if (!this.disabled) {\n            this.increment.emit();\n        }\n    }\n/**\n * @return {?}\n */\ntriggerDecrement(): void {\n        if (!this.disabled) {\n            this.decrement.emit();\n        }\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nwriteValue(value: any): void {\n        this.value = value;\n    }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnChange(fn: (_: any) => void): void {\n        this.onChangeCallback = fn;\n    }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnTouched(fn: () => void): void {\n        this.onTouchedCallback = fn;\n    }\n/**\n * @param {?} isDisabled\n * @return {?}\n */\nsetDisabledState(isDisabled: boolean): void {\n        this.disabled = isDisabled;\n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-spin-button',\n    template: `\n      <button class=\"spin-button\"\n              *ngIf=\"spinners\"\n              tabindex=\"-1\"\n              [disabled]=\"disabled\"\n              [attr.aria-label]=\"incrementAriaLabel\"\n              [attr.aria-disabled]=\"disabled\"\n              (click)=\"triggerIncrement()\">\n\n        <span class=\"hpe-icon hpe-up\"></span>\n      </button>\n\n      <input [type]=\"type\"\n             role=\"spinbutton\"\n             [min]=\"min\"\n             [max]=\"max\"\n             [tabindex]=\"0\"\n             class=\"form-control\"\n             [placeholder]=\"placeholder\"\n             [readOnly]=\"readOnly\"\n             [disabled]=\"disabled\"\n             [attr.aria-label]=\"inputAriaLabel\"\n             [attr.aria-disabled]=\"disabled\"\n             [attr.aria-valuemin]=\"min\"\n             [attr.aria-valuenow]=\"value\"\n             [attr.aria-valuemax]=\"max\"\n             [attr.aria-readonly]=\"readOnly\"\n             [ngModel]=\"value\"\n             (ngModelChange)=\"valueChange.emit($event)\"\n             (wheel)=\"scroll($event)\"\n             (keydown.arrowup)=\"arrowkeys ? triggerIncrement() : null; $event.preventDefault()\"\n             (keydown.arrowdown)=\"arrowkeys ? triggerDecrement() : null; $event.preventDefault()\">\n\n      <button class=\"spin-button\"\n              *ngIf=\"spinners\"\n              tabindex=\"-1\"\n              [disabled]=\"disabled\"\n              [attr.aria-label]=\"decrementAriaLabel\"\n              [attr.aria-disabled]=\"disabled\"\n              (click)=\"triggerDecrement()\">\n\n        <span class=\"hpe-icon hpe-down\"></span>\n      </button>\n    `,\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [SPIN_BUTTON_VALUE_ACCESSOR]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'value': [{ type: Input },],\n'type': [{ type: Input },],\n'min': [{ type: Input },],\n'max': [{ type: Input },],\n'placeholder': [{ type: Input },],\n'disabled': [{ type: Input },],\n'spinners': [{ type: Input },],\n'readOnly': [{ type: Input },],\n'scrolling': [{ type: Input },],\n'arrowkeys': [{ type: Input },],\n'incrementAriaLabel': [{ type: Input },],\n'inputAriaLabel': [{ type: Input },],\n'decrementAriaLabel': [{ type: Input },],\n'valueChange': [{ type: Output },],\n'increment': [{ type: Output },],\n'decrement': [{ type: Output },],\n};\n}\n\nfunction SpinButtonComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nSpinButtonComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSpinButtonComponent.ctorParameters;\n/** @type {?} */\nSpinButtonComponent.propDecorators;\n/** @type {?} */\nSpinButtonComponent.prototype.type;\n/** @type {?} */\nSpinButtonComponent.prototype.min;\n/** @type {?} */\nSpinButtonComponent.prototype.max;\n/** @type {?} */\nSpinButtonComponent.prototype.placeholder;\n/** @type {?} */\nSpinButtonComponent.prototype.disabled;\n/** @type {?} */\nSpinButtonComponent.prototype.spinners;\n/** @type {?} */\nSpinButtonComponent.prototype.readOnly;\n/** @type {?} */\nSpinButtonComponent.prototype.scrolling;\n/** @type {?} */\nSpinButtonComponent.prototype.arrowkeys;\n/** @type {?} */\nSpinButtonComponent.prototype.incrementAriaLabel;\n/** @type {?} */\nSpinButtonComponent.prototype.inputAriaLabel;\n/** @type {?} */\nSpinButtonComponent.prototype.decrementAriaLabel;\n/** @type {?} */\nSpinButtonComponent.prototype.valueChange;\n/** @type {?} */\nSpinButtonComponent.prototype.increment;\n/** @type {?} */\nSpinButtonComponent.prototype.decrement;\n/** @type {?} */\nSpinButtonComponent.prototype.onTouchedCallback;\n/** @type {?} */\nSpinButtonComponent.prototype.onChangeCallback;\n/** @type {?} */\nSpinButtonComponent.prototype._value;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DashboardComponent } from './dashboard.component';\nimport { DashboardWidgetComponent } from './widget/dashboard-widget.component';\nimport { DashboardService } from './dashboard.service';\nimport { DashboardDragHandleDirective } from './drag-handle/drag-handle.directive';\nimport { ResizeModule } from '../../directives/resize/index';\nimport { DragModule } from '../../directives/drag/index';\n\nconst /** @type {?} */ DECLARATIONS: any[] = [\n    DashboardComponent,\n    DashboardWidgetComponent,\n    DashboardDragHandleDirective\n];\nexport class DashboardModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        CommonModule,\n        ResizeModule,\n        DragModule\n    ],\n    exports: DECLARATIONS,\n    declarations: DECLARATIONS,\n    providers: [DashboardService],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction DashboardModule_tsickle_Closure_declarations() {\n/** @type {?} */\nDashboardModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDashboardModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\n\nimport { DragDirective } from './drag.directive';\nexport class DragModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    exports: [DragDirective],\n    declarations: [DragDirective]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction DragModule_tsickle_Closure_declarations() {\n/** @type {?} */\nDragModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDragModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, NgZone, ElementRef } from '@angular/core';\n\nimport { DashboardWidgetComponent } from '../widget/dashboard-widget.component';\nimport { DashboardService, ActionDirection } from '../dashboard.service';\nimport { DragDirective } from '../../../directives/drag/drag.directive';\nexport class DashboardDragHandleDirective extends DragDirective {\n/**\n * @param {?} widget\n * @param {?} dashboardService\n * @param {?} elementRef\n * @param {?} ngZone\n */\nconstructor(widget: DashboardWidgetComponent, dashboardService: DashboardService, elementRef: ElementRef, ngZone: NgZone) {\n        super(elementRef, ngZone);\n\n        this.dragstart.subscribe((event: MouseEvent) => dashboardService.onDragStart({ widget: widget, direction: ActionDirection.Move, event: event }));\n        this.drag.subscribe((event: MouseEvent) => dashboardService.onDrag({ widget: widget, direction: ActionDirection.Move, event: event }));\n        this.dragend.subscribe(() => dashboardService.onDragEnd());\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: '[uxDashboardWidgetDragHandle], [ux-dashboard-widget-drag-handle]'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: DashboardWidgetComponent, },\n{type: DashboardService, },\n{type: ElementRef, },\n{type: NgZone, },\n];\n}\n\nfunction DashboardDragHandleDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nDashboardDragHandleDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDashboardDragHandleDirective.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, Output, EventEmitter, ElementRef, NgZone, OnDestroy, Input, HostListener } from '@angular/core';\nimport { fromEvent } from 'rxjs/observable/fromEvent';\nimport { Subscription } from 'rxjs/Subscription';\nimport { takeUntil } from 'rxjs/operators/takeUntil';\nexport class DragDirective implements OnDestroy {\n\n     dragstart = new EventEmitter<MouseEvent>();\n     drag = new EventEmitter<MouseEvent>();\n     dragend = new EventEmitter<void>();\nprivate _subscription: Subscription;\n/**\n * @param {?} elementRef\n * @param {?} ngZone\n */\nconstructor(elementRef: ElementRef, ngZone: NgZone) {\n        const mousedown$ = fromEvent<MouseEvent>(elementRef.nativeElement, 'mousedown');\n        const mousemove$ = fromEvent<MouseEvent>(document, 'mousemove');\n        const mouseup$ = fromEvent<MouseEvent>(document, 'mouseup');\n\n        this._subscription = mousedown$.subscribe(event => {\n            event.preventDefault();\n\n            // emit the drag start event \n            ngZone.run(() => this.dragstart.emit(event));\n\n            mousemove$.pipe(takeUntil<MouseEvent>(mouseup$)).subscribe(moveevent => {\n                moveevent.preventDefault();\n\n                // emit the drag start event \n                ngZone.run(() => this.drag.emit(moveevent));\n            }, null, \n            () => ngZone.run(() => this.dragend.emit()));\n        });\n    }\n/**\n * @return {?}\n */\nngOnDestroy(): void {\n        this._subscription.unsubscribe();\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{ \n    selector: '[uxDrag]' \n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: NgZone, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'dragstart': [{ type: Output },],\n'drag': [{ type: Output },],\n'dragend': [{ type: Output },],\n};\n}\n\nfunction DragDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nDragDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDragDirective.ctorParameters;\n/** @type {?} */\nDragDirective.propDecorators;\n/** @type {?} */\nDragDirective.prototype.dragstart;\n/** @type {?} */\nDragDirective.prototype.drag;\n/** @type {?} */\nDragDirective.prototype.dragend;\n/** @type {?} */\nDragDirective.prototype._subscription;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Input, OnInit, OnDestroy, HostBinding, AfterViewInit } from '@angular/core';\nimport { DashboardService, ActionDirection } from '../dashboard.service';\nimport { Subscription } from 'rxjs/Subscription';\nexport class DashboardWidgetComponent implements OnInit, AfterViewInit, OnDestroy {\n\n     id: string;\n     col: number;\n     row: number;\n     colSpan: number = 1;\n     rowSpan: number = 1;\n     resizable: boolean = false;\n\n     x: number = 0;\n     y: number = 0;\n     width: number = 100;\n     height: number = 100;\n     padding: number = 0;\n     zIndex: number = 0;\nprivate _column: StackableValue = { regular: undefined, stacked: undefined };\nprivate _row: StackableValue = { regular: undefined, stacked: undefined };\nprivate _columnSpan: StackableValue = { regular: 1, stacked: 1 };\nprivate _rowSpan: StackableValue = { regular: 1, stacked: 1 };\nprivate _subscription: Subscription;\n/**\n * @param {?} dashboardService\n */\nconstructor(public dashboardService: DashboardService) {\n        this._subscription = dashboardService.options$.subscribe(() => this.update());\n    }\n/**\n * @return {?}\n */\nngOnInit(): void {\n\n        this._columnSpan.regular = this.colSpan;\n        this._rowSpan.regular = this.rowSpan;\n\n        if (!this.id) {\n            console.warn('Dashboard Widget is missing an ID.');\n\n            // set random id - keeps things working but prevents exporting of positions\n            this.id = Math.floor(Math.random() * 100000).toString();\n        }\n    }\n/**\n * @return {?}\n */\nngAfterViewInit(): void {\n        // add the widget to the dashboard\n        this.dashboardService.addWidget(this);\n\n        // apply the current options\n        this.update();\n    }\n/**\n * If component is removed, then unregister it from the service\n * @return {?}\n */\nngOnDestroy(): void {\n        this._subscription.unsubscribe();\n        this.dashboardService.removeWidget(this);\n    }\n/**\n * Apply the current dashboard options\n * @return {?}\n */\nupdate(): void {\n\n        // get the current options at the time \n        const { padding, columns } = this.dashboardService.options;\n\n        this.padding = padding;\n        this._columnSpan.stacked = columns;\n    }\n/**\n * Set the actual position and size values\n * @return {?}\n */\nrender(): void {\n        this.x = this.getColumn() * this.dashboardService.getColumnWidth();\n        this.y = this.getRow() * this.dashboardService.getRowHeight();\n        this.width = this.getColumnSpan() * this.dashboardService.getColumnWidth();\n        this.height = this.getRowSpan() * this.dashboardService.getRowHeight();\n    }\n/**\n * @return {?}\n */\ngetColumn(): number {\n        return this.getStackableValue(this._column);\n    }\n/**\n * @return {?}\n */\ngetRow(): number {\n        return this.getStackableValue(this._row);\n    }\n/**\n * @param {?} column\n * @param {?=} render\n * @return {?}\n */\nsetColumn(column: number, render: boolean = true): void {\n        this.setStackableValue(this._column, column);\n\n        if (render) {\n            this.render();\n        }\n    }\n/**\n * @param {?} row\n * @param {?=} render\n * @return {?}\n */\nsetRow(row: number, render: boolean = true): void {\n        this.setStackableValue(this._row, row);\n\n        if (render) {\n            this.render();\n        }\n    }\n/**\n * @return {?}\n */\ngetColumnSpan(): number {\n        return this.getStackableValue(this._columnSpan);\n    }\n/**\n * @return {?}\n */\ngetRowSpan(): number {\n        return this.getStackableValue(this._rowSpan);\n    }\n/**\n * @param {?} columnSpan\n * @param {?=} render\n * @return {?}\n */\nsetColumnSpan(columnSpan: number, render: boolean = true): void {\n        this.setStackableValue(this._columnSpan, columnSpan);\n\n        if (render) {\n            this.render();\n        }\n    }\n/**\n * @param {?} rowSpan\n * @param {?=} render\n * @return {?}\n */\nsetRowSpan(rowSpan: number, render: boolean = true): void {\n        this.setStackableValue(this._rowSpan, rowSpan);\n\n        if (render) {\n            this.render();\n        }\n    }\n/**\n * @return {?}\n */\nbringToFront(): void {\n        this.zIndex = 1;\n    }\n/**\n * @return {?}\n */\nsendToBack(): void {\n        this.zIndex = 0;\n    }\n/**\n * @param {?} x\n * @param {?} y\n * @param {?} width\n * @param {?} height\n * @return {?}\n */\nsetBounds(x: number, y: number, width: number, height: number): void {\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n    }\n/**\n * @param {?} handle\n * @param {?} event\n * @param {?} direction\n * @return {?}\n */\ndragstart(handle: HTMLElement, event: MouseEvent, direction: ActionDirection): void {\n        this.dashboardService.onResizeStart({ widget: this, direction: direction, event: event, handle: handle });\n    }\n/**\n * @param {?} handle\n * @param {?} event\n * @param {?} direction\n * @return {?}\n */\ndrag(handle: HTMLElement, event: MouseEvent, direction: ActionDirection): void {\n        this.dashboardService.onResizeDrag({ widget: this, direction: direction, event: event, handle: handle });\n    }\n/**\n * @return {?}\n */\ndragend(): void {\n        this.dashboardService.onResizeEnd();\n    }\n/**\n * Allows automatic setting of stackable value\n * @param {?} property The current StackableValue object\n * @param {?} value The value to set in the appropriate field\n * @return {?}\n */\nprivate setStackableValue(property: StackableValue, value: number): void {\n\n        if (this.dashboardService.stacked) {\n            property.stacked = value;\n        } else {\n            property.regular = value;\n        }\n    }\n/**\n * Return the appropriate value from a stackable value\n * @param {?} property The Stackable value object\n * @return {?}\n */\nprivate getStackableValue(property: StackableValue): number {\n        return this.dashboardService.stacked ? property.stacked : property.regular;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-dashboard-widget',\n    template: `\n      <div class=\"widget-content widget-col-span-{{ getColumnSpan() }} widget-row-span-{{ getRowSpan() }}\">\n          <ng-content></ng-content>\n      </div>\n\n      <div uxDrag #handleTop class=\"resizer-handle handle-top\" \n          (dragstart)=\"dragstart(handleTop, $event, 0)\"\n          (drag)=\"drag(handleTop, $event, 0)\"\n          (dragend)=\"dragend()\"\n          [style.top.px]=\"padding\" \n          [hidden]=\"!resizable\">\n      </div>\n\n      <div uxDrag #handleTopRight class=\"resizer-handle handle-top-right\" \n          (dragstart)=\"dragstart(handleTopRight, $event, 1)\"\n          (drag)=\"drag(handleTopRight, $event, 1)\"\n          (dragend)=\"dragend()\"\n          [style.top.px]=\"padding\" \n          [style.right.px]=\"padding\" \n          [hidden]=\"!resizable && !(dashboardService.stacked$ | async)\">\n      </div>\n\n      <div uxDrag #handleRight class=\"resizer-handle handle-right\" \n          (dragstart)=\"dragstart(handleRight, $event, 2)\"\n          (drag)=\"drag(handleRight, $event, 2)\"\n          (dragend)=\"dragend()\"\n          [style.right.px]=\"padding\" \n          [hidden]=\"!resizable || (dashboardService.stacked$ | async)\">\n      </div>\n\n      <div uxDrag #handleBottomRight class=\"resizer-handle handle-bottom-right\" \n          (dragstart)=\"dragstart(handleBottomRight, $event, 3)\"\n          (drag)=\"drag(handleBottomRight, $event, 3)\"\n          (dragend)=\"dragend()\"\n          [style.bottom.px]=\"padding\" \n          [style.right.px]=\"padding\" \n          [hidden]=\"!resizable && !(dashboardService.stacked$ | async)\">\n      </div>\n\n      <div uxDrag #handleBottom class=\"resizer-handle handle-bottom\" \n          (dragstart)=\"dragstart(handleBottom, $event, 4)\"\n          (drag)=\"drag(handleBottom, $event, 4)\"\n          (dragend)=\"dragend()\"\n          [style.bottom.px]=\"padding\" \n          [hidden]=\"!resizable\">\n      </div>\n\n      <div uxDrag #handleBottomLeft class=\"resizer-handle handle-bottom-left\" \n          (dragstart)=\"dragstart(handleBottomLeft, $event, 5)\"\n          (drag)=\"drag(handleBottomLeft, $event, 5)\"\n          (dragend)=\"dragend()\"\n          [style.bottom.px]=\"padding\" \n          [style.left.px]=\"padding\" \n          [hidden]=\"!resizable && !(dashboardService.stacked$ | async)\">\n      </div>\n\n      <div uxDrag #handleLeft class=\"resizer-handle handle-left\" \n          (dragstart)=\"dragstart(handleLeft, $event, 6)\"\n          (drag)=\"drag(handleLeft, $event, 6)\"\n          (dragend)=\"dragend()\"\n          [style.left.px]=\"padding\" \n          [hidden]=\"!resizable || (dashboardService.stacked$ | async)\">\n      </div>\n\n      <div uxDrag #handleTopLeft class=\"resizer-handle handle-top-left\" \n          (dragstart)=\"dragstart(handleTopLeft, $event, 7)\"\n          (drag)=\"drag(handleTopLeft, $event, 7)\"\n          (dragend)=\"dragend()\"\n          [style.top.px]=\"padding\" \n          [style.left.px]=\"padding\" \n          [hidden]=\"!resizable && !(dashboardService.stacked$ | async)\">\n      </div>\n    `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: DashboardService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'id': [{ type: Input },],\n'col': [{ type: Input },],\n'row': [{ type: Input },],\n'colSpan': [{ type: Input },],\n'rowSpan': [{ type: Input },],\n'resizable': [{ type: Input },],\n'x': [{ type: HostBinding, args: ['style.left.px', ] },],\n'y': [{ type: HostBinding, args: ['style.top.px', ] },],\n'width': [{ type: HostBinding, args: ['style.width.px', ] },],\n'height': [{ type: HostBinding, args: ['style.height.px', ] },],\n'padding': [{ type: HostBinding, args: ['style.padding.px', ] },],\n'zIndex': [{ type: HostBinding, args: ['style.z-index', ] },],\n};\n}\n\nfunction DashboardWidgetComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nDashboardWidgetComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDashboardWidgetComponent.ctorParameters;\n/** @type {?} */\nDashboardWidgetComponent.propDecorators;\n/** @type {?} */\nDashboardWidgetComponent.prototype.id;\n/** @type {?} */\nDashboardWidgetComponent.prototype.col;\n/** @type {?} */\nDashboardWidgetComponent.prototype.row;\n/** @type {?} */\nDashboardWidgetComponent.prototype.colSpan;\n/** @type {?} */\nDashboardWidgetComponent.prototype.rowSpan;\n/** @type {?} */\nDashboardWidgetComponent.prototype.resizable;\n/** @type {?} */\nDashboardWidgetComponent.prototype.x;\n/** @type {?} */\nDashboardWidgetComponent.prototype.y;\n/** @type {?} */\nDashboardWidgetComponent.prototype.width;\n/** @type {?} */\nDashboardWidgetComponent.prototype.height;\n/** @type {?} */\nDashboardWidgetComponent.prototype.padding;\n/** @type {?} */\nDashboardWidgetComponent.prototype.zIndex;\n/** @type {?} */\nDashboardWidgetComponent.prototype._column;\n/** @type {?} */\nDashboardWidgetComponent.prototype._row;\n/** @type {?} */\nDashboardWidgetComponent.prototype._columnSpan;\n/** @type {?} */\nDashboardWidgetComponent.prototype._rowSpan;\n/** @type {?} */\nDashboardWidgetComponent.prototype._subscription;\n/** @type {?} */\nDashboardWidgetComponent.prototype.dashboardService;\n}\n\n\nexport interface StackableValue {\n    regular: number;\n    stacked: number;\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Input, ElementRef, AfterViewInit, EventEmitter, Output, ViewChild, ChangeDetectionStrategy } from '@angular/core';\nimport { DashboardService, DashboardLayoutData, DashboardPlaceholder, defaultOptions } from './dashboard.service';\nimport { ResizeDimensions } from '../../directives/resize/resize.service';\nexport class DashboardComponent implements AfterViewInit {\n/**\n * @param {?} layout\n * @return {?}\n */\nset layout(layout: DashboardLayoutData[]) {\n        if (layout) {\n            this.dashboardService.layout$.next(layout);\n        }\n    }\n/**\n * @param {?} options\n * @return {?}\n */\nset options(options: DashboardOptions) {\n        this.dashboardService.options$.next({ ...defaultOptions, ...options });\n    }\n    \n     layoutChange = new EventEmitter<DashboardLayoutData[]>();\n\n     dashboardElement: ElementRef;\n/**\n * @param {?} dashboardService\n */\nconstructor(public dashboardService: DashboardService) {\n        dashboardService.layout$.subscribe(layout => this.layoutChange.emit(layout));\n    }\n/**\n * Set the initial dimensions\n * @return {?}\n */\nngAfterViewInit(): void {\n        this.dashboardService.setDashboard(this.dashboardElement.nativeElement);\n        this.dashboardService.setDimensions(this.dashboardElement.nativeElement.offsetWidth, this.dashboardElement.nativeElement.offsetHeight);\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nonResize(event: ResizeDimensions): void {\n        this.dashboardService.setDimensions(event.width, event.height);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-dashboard',\n    template: `\n      <div #dashboard class=\"dashboard-container\" [style.height.px]=\"dashboardService.height$ | async\">\n          <div (uxResize)=\"onResize($event)\" [throttle]=\"16\" class=\"dashboard\">\n              <ng-content></ng-content>\n          </div>\n    \n          <div class=\"position-indicator\" *ngIf=\"(dashboardService.placeholder$ | async).visible\" \n              [style.left.px]=\"(dashboardService.placeholder$ | async).x\" \n              [style.top.px]=\"(dashboardService.placeholder$ | async).y\" \n              [style.width.px]=\"(dashboardService.placeholder$ | async).width\"\n              [style.height.px]=\"(dashboardService.placeholder$ | async).height\"></div>\n      </div>\n    `,\n    providers: [DashboardService],\n    changeDetection: ChangeDetectionStrategy.OnPush\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: DashboardService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'layout': [{ type: Input },],\n'options': [{ type: Input },],\n'layoutChange': [{ type: Output },],\n'dashboardElement': [{ type: ViewChild, args: ['dashboard', ] },],\n};\n}\n\nfunction DashboardComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nDashboardComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDashboardComponent.ctorParameters;\n/** @type {?} */\nDashboardComponent.propDecorators;\n/** @type {?} */\nDashboardComponent.prototype.layoutChange;\n/** @type {?} */\nDashboardComponent.prototype.dashboardElement;\n/** @type {?} */\nDashboardComponent.prototype.dashboardService;\n}\n\n\nexport interface DashboardOptions {\n    columns?: number;\n    padding?: number;\n    minWidth?: number;\n    minHeight?: number;\n    rowHeight?: number;\n    emptyRow?: boolean;\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable } from '@angular/core';\nimport { DashboardWidgetComponent } from './widget/dashboard-widget.component';\nimport { DashboardOptions } from './dashboard.component';\nimport { Subject } from 'rxjs/Subject';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { filter } from 'rxjs/operators/filter';\nimport { delay } from 'rxjs/operators/delay';\nimport { map } from 'rxjs/operators/map';\nimport { distinctUntilChanged } from 'rxjs/operators/distinctUntilChanged';\nimport { Observable } from 'rxjs/Observable';\nexport class DashboardService {\nprivate _dashboard: HTMLElement;\nprivate _widgetOrigin: { column?: number, row?: number, columnSpan?: number, rowSpan?: number };\nprivate _actionWidget: DashboardAction;\nprivate _rowHeight: number = 0;\nprivate _cache: DashboardCache[];\nprivate _mouseEvent: MouseEvent;\n\n    widgets$ = new BehaviorSubject<DashboardWidgetComponent[]>([]);\n    options$ = new BehaviorSubject<DashboardOptions>(defaultOptions);\n    dimensions$ = new BehaviorSubject<DashboardDimensions>({});\n    height$: Observable<number> = this.dimensions$.pipe(delay(0), map((dimensions: DashboardDimensions) => dimensions.height), distinctUntilChanged());\n    placeholder$ = new BehaviorSubject<DashboardPlaceholder>({ visible: false, x: 0, y: 0, width: 0, height: 0 });\n    layout$ = new Subject<DashboardLayoutData[]>();\n    stacked$ = new BehaviorSubject<boolean>(false);\n/**\n * @return {?}\n */\nget options() {\n        return this.options$.getValue();\n    }\n/**\n * @return {?}\n */\nget widgets() {\n        return this.widgets$.getValue();\n    }\n/**\n * @return {?}\n */\nget stacked() {\n        return this.stacked$.getValue();\n    }\n/**\n * @return {?}\n */\nget dimensions() {\n        return this.dimensions$.getValue();\n    }\n/**\n * @return {?}\n */\nget columnWidth() {\n        return this.dimensions.width / this.options.columns;\n    }\nconstructor() {\n        this.layout$.subscribe(this.setLayoutData.bind(this));\n        this.stacked$.pipe(filter(stacked => stacked === true)).subscribe(this.updateWhenStacked.bind(this));\n        this.widgets$.pipe(delay(0)).subscribe(() => this.renderDashboard());\n        this.dimensions$.pipe(delay(0)).subscribe(() => this.renderDashboard());\n    }\n/**\n * Set the dashboard container element\n * @param {?} dashboard The HTMLElement that is the dashboard container\n * @return {?}\n */\nsetDashboard(dashboard: HTMLElement): void {\n        this._dashboard = dashboard;\n    }\n/**\n * Add a widget to the dashboard\n * @param {?} widget The widget component to add to the dashboard\n * @return {?}\n */\naddWidget(widget: DashboardWidgetComponent): void {\n        this.widgets$.next([...this.widgets$.getValue(), widget]);\n    }\n/**\n * Remove a widget from the dashboard\n * @param {?} widget The widget to remove\n * @return {?}\n */\nremoveWidget(widget: DashboardWidgetComponent): void {\n        this.widgets$.next(this.widgets$.getValue().filter(_widget => _widget !== widget));\n    }\n/**\n * Indicate that the dashboard element has been resized\n * @param {?=} width The width of the dashboard element in px\n * @param {?=} height The height of the dashboard element in px\n * @return {?}\n */\nsetDimensions(width: number = this.dimensions.width, height: number = this.dimensions.height): void {\n        if (this.dimensions.width !== width || this.dimensions.height !== height) {\n            this.dimensions$.next({ width: width, height: height });\n        }\n    }\n/**\n * Produce an object containing all the required layout data.\n * This can be useful for exporting/saving a layout\n * @return {?}\n */\ngetLayoutData(): DashboardLayoutData[] {\n        return this.widgets.map(widget => {\n            return { id: widget.id, col: widget.getColumn(), row: widget.getRow(), colSpan: widget.getColumnSpan(), rowSpan: widget.getRowSpan() };\n        });\n    }\n/**\n * Position widgets programatically\n * @param {?} widgets\n * @return {?}\n */\nsetLayoutData(widgets: DashboardLayoutData[]): void {\n\n        // iterate through each widget data and find a match\n        widgets.forEach(widget => {\n\n            // find the matching widget\n            const /** @type {?} */ target = this.widgets.find(_widget => _widget.id === widget.id);\n\n            if (target) {\n                target.setColumn(widget.col);\n                target.setRow(widget.row);\n                target.setColumnSpan(widget.colSpan);\n                target.setRowSpan(widget.rowSpan);\n            }\n        });\n    }\n/**\n * Update the positions and sizes of the widgets\n * @return {?}\n */\nrenderDashboard(): void {\n\n        // get the dimensions of the dashboard\n        this._rowHeight = this.options.rowHeight || this.columnWidth;\n\n        // ensure the column width is not below the min widths\n        this.stacked$.next(this.columnWidth < this.options.minWidth);\n\n        // ensure the row height is not below the min widths\n        if (this._rowHeight < this.options.minWidth) {\n            this._rowHeight = this.options.minWidth;\n        }\n\n        this.setDashboardLayout();\n\n        // iterate through each widget and set the size - except the one being resized\n        this.widgets.filter(widget => !this._actionWidget || widget !== this._actionWidget.widget)\n            .forEach(widget => widget.render());\n    }\n/**\n * Determine where widgets should be positioned based on their positions, width and the size of the container\n * @return {?}\n */\nsetDashboardLayout(): void {\n\n        // find any widgets that do not currently have a position set\n        this.widgets.filter(widget => widget.getColumn() === undefined || widget.getRow() === undefined)\n            .forEach(widget => this.setWidgetPosition(widget));\n\n        this.setDashboardHeight();\n    }\n/**\n * @return {?}\n */\nupdateWhenStacked(): void {\n\n        // iterate through each widget set it's stacked state and\n        this.getWidgetsByOrder().forEach((widget, idx) => {\n            widget.setColumn(0);\n            widget.setRow(idx);\n        });\n\n    }\n/**\n * @return {?}\n */\ngetWidgetsByOrder(): DashboardWidgetComponent[] {\n        return this.widgets.sort((w1, w2) => {\n\n            const /** @type {?} */ w1Position = w1.getColumn() * w1.getRow();\n            const /** @type {?} */ w2Position = w2.getColumn() * w2.getRow();\n\n            if (w1Position < w2Position) {\n                return -1;\n            }\n\n            if (w1Position > w2Position) {\n                return 1;\n            }\n\n            return 0;\n        });\n    }\n/**\n * Find a position that a widget can fit in the dashboard\n * @param {?} widget The widget to try and position\n * @return {?}\n */\nsetWidgetPosition(widget: DashboardWidgetComponent): void {\n\n        // find a position for the widget\n        let /** @type {?} */ position = 0;\n        let /** @type {?} */ success = false;\n\n        // repeat until a space is found\n        while (!success) {\n\n            // get a position to try\n            const /** @type {?} */ column = position % this.options.columns;\n            const /** @type {?} */ row = Math.floor(position / this.options.columns);\n\n            // check the current position\n            if (this.getPositionAvailable(column, row, widget.getColumnSpan(), widget.getRowSpan())) {\n                success = true;\n                widget.setColumn(column);\n                widget.setRow(row);\n                return;\n            }\n\n            if (column === 0 && widget.colSpan > this.options.columns) {\n                throw new Error('Dashboard widgets have a colSpan greater than the max number of dashboard columns!');\n            }\n\n            position++;\n        }\n    }\n/**\n * Check if a position in the dashboard is vacant or not\n * @param {?} column\n * @param {?} row\n * @param {?} columnSpan\n * @param {?} rowSpan\n * @param {?=} ignoreWidget\n * @return {?}\n */\ngetPositionAvailable(column: number, row: number, columnSpan: number, rowSpan: number, ignoreWidget?: DashboardWidgetComponent): boolean {\n\n        // get a list of grid spaces that are populated\n        const /** @type {?} */ spaces = this.getOccupiedSpaces();\n\n        // check if the block would still be in bounds\n        if (column + columnSpan > this.options.columns) {\n            return false;\n        }\n\n        // check each required position\n        for (let /** @type {?} */ x = column; x < column + columnSpan; x++) {\n            for (let /** @type {?} */ y = row; y < row + rowSpan; y++) {\n                if (spaces.find(block => block.column === x && block.row === y && block.widget !== ignoreWidget)) {\n                    return false;\n                }\n            }\n        }\n\n        return true;\n    }\n/**\n * @return {?}\n */\ngetOccupiedSpaces(): DashboardSpace[] {\n\n        // find all spaces that are currently occupied\n        return this.widgets.filter(widget => widget.getColumn() !== undefined && widget.getRow() !== undefined)\n            .reduce((value, widget) => {\n\n                this.forEachBlock(widget, (column, row) => value.push({ widget: widget, column: column, row: row }));\n\n                return value;\n            }, []);\n    }\n/**\n * Begin resizing a widget\n * @param {?} action The the widget to resize\n * @return {?}\n */\nonResizeStart(action: DashboardAction): void {\n\n        // store the mouse event\n        this._mouseEvent = action.event;\n        this._actionWidget = action;\n\n        // bring the widget to the font\n        this.bringToFront(action.widget);\n    }\n/**\n * @param {?} action\n * @return {?}\n */\nonResizeDrag(action: DashboardAction): void {\n\n        const /** @type {?} */ mousePosX = this._mouseEvent.pageX - pageXOffset;\n        const /** @type {?} */ mousePosY = this._mouseEvent.pageY - pageYOffset;\n\n        // if there was no movement then do nothing\n        if (action.event.x === mousePosX && action.event.y === mousePosY) {\n            return;\n        }\n\n        // update the stored mouse event\n        this._mouseEvent = action.event;\n\n        // get handle for direction\n        const { handle } = action;\n\n        // get the bounds of the handle\n        const /** @type {?} */ bounds = handle.getBoundingClientRect();\n\n        // get the center of the handle\n        const /** @type {?} */ centerX = bounds.left + (bounds.width / 2);\n        const /** @type {?} */ centerY = bounds.top + (bounds.height / 2);\n\n        // get the current mouse position\n        const /** @type {?} */ mouseX = mousePosX - centerX;\n        const /** @type {?} */ mouseY = mousePosY - centerY;\n\n        // store the new proposed dimensions for the widget\n        const /** @type {?} */ dimensions: DashboardWidgetDimensions = {\n            x: action.widget.x,\n            y: action.widget.y,\n            width: action.widget.width,\n            height: action.widget.height\n        };\n\n        // update widget based on the handle being dragged\n        switch (action.direction) {\n\n            case ActionDirection.Right:\n                dimensions.width += mouseX;\n                break;\n\n            case ActionDirection.Left:\n                dimensions.x += mouseX;\n                dimensions.width -= mouseX;\n\n                if (dimensions.width < this.options.minWidth) {\n                    const /** @type {?} */ difference = this.options.minWidth - dimensions.width;\n                    dimensions.x -= difference;\n                    dimensions.width += difference;\n                }\n\n                break;\n\n            case ActionDirection.Bottom:\n                dimensions.height += mouseY;\n                break;\n\n            case ActionDirection.Top:\n                dimensions.y += mouseY;\n                dimensions.height -= mouseY;\n\n                if (dimensions.height < this.options.minHeight) {\n                    const /** @type {?} */ difference = this.options.minHeight - dimensions.height;\n                    dimensions.y -= difference;\n                    dimensions.height += difference;\n                }\n                break;\n\n            // Support resizing on multiple axis simultaneously\n            case ActionDirection.TopLeft:\n\n                dimensions.x += mouseX;\n                dimensions.width -= mouseX;\n\n                if (dimensions.width < this.options.minWidth) {\n                    const /** @type {?} */ difference = this.options.minWidth - dimensions.width;\n                    dimensions.x -= difference;\n                    dimensions.width += difference;\n                }\n\n                dimensions.y += mouseY;\n                dimensions.height -= mouseY;\n\n                if (dimensions.height < this.options.minHeight) {\n                    const /** @type {?} */ difference = this.options.minHeight - dimensions.height;\n                    dimensions.y -= difference;\n                    dimensions.height += difference;\n                }\n                break;\n\n            case ActionDirection.TopRight:\n                dimensions.width += mouseX;\n                dimensions.y += mouseY;\n                dimensions.height -= mouseY;\n\n                if (dimensions.height < this.options.minHeight) {\n                    const /** @type {?} */ difference = this.options.minHeight - dimensions.height;\n                    dimensions.y -= difference;\n                    dimensions.height += difference;\n                }\n                break;\n\n            case ActionDirection.BottomLeft:\n                dimensions.height += mouseY;\n                dimensions.x += mouseX;\n                dimensions.width -= mouseX;\n\n                if (dimensions.width < this.options.minWidth) {\n                    const /** @type {?} */ difference = this.options.minWidth - dimensions.width;\n                    dimensions.x -= difference;\n                    dimensions.width += difference;\n                }\n                break;\n\n            case ActionDirection.BottomRight:\n                dimensions.height += mouseY;\n                dimensions.width += mouseX;\n                break;\n        }\n\n        const /** @type {?} */ currentWidth = action.widget.x + action.widget.width;\n        const /** @type {?} */ currentHeight = action.widget.y + action.widget.height;\n\n        // ensure values are within the dashboard bounds\n        if (dimensions.x < 0) {\n            dimensions.x = 0;\n            dimensions.width = currentWidth;\n        }\n\n        if (dimensions.y < 0) {\n            dimensions.y = 0;\n            dimensions.height = currentHeight;\n        }\n\n        if ((dimensions.x + dimensions.width) > this.dimensions.width) {\n            dimensions.width = this.dimensions.width - dimensions.x;\n        }\n\n        // if the proposed width is smaller than allowed then reset width to minimum and ignore x changes\n        if (dimensions.width < this.options.minWidth) {\n            dimensions.x = action.widget.x;\n            dimensions.width = this.options.minWidth;\n        }\n\n        // if the proposed height is smaller than allowed then reset height to minimum and ignore y changes\n        if (dimensions.height < this.options.minHeight) {\n            dimensions.y = action.widget.y;\n            dimensions.height = this.options.minHeight;\n        }\n\n        // update the widget actual values\n        action.widget.setBounds(dimensions.x, dimensions.y, dimensions.width, dimensions.height);\n\n        // update placeholder position and value\n        this.setPlaceholderBounds(true, dimensions.x, dimensions.y, dimensions.width, dimensions.height);\n\n        // show the widget positions if the current positions and sizes were to persist\n        this.updateWidgetPositions(action.widget);\n    }\n/**\n * @return {?}\n */\nonResizeEnd(): void {\n\n        const /** @type {?} */ placeholder = this.placeholder$.getValue();\n\n        // commit resize changes\n        this.commitWidgetChanges();\n\n        // hide placeholder\n        placeholder.visible = false;\n\n        // update the placeholder\n        this.placeholder$.next(placeholder);\n\n        this._actionWidget = null;\n        this._mouseEvent = null;\n\n        // ensure any vacant upper spaces are filled where required\n        this.shiftWidgetsUp();\n\n        // update dashboard height\n        this.setDashboardHeight();\n\n        // emit information about the layout\n        this.layout$.next(this.getLayoutData());\n    }\n/**\n * @param {?} action\n * @return {?}\n */\nonDragStart(action: DashboardAction): void {\n        this.onResizeStart(action);\n\n        // store the starting placeholder position\n        this.setWidgetOrigin();\n\n        this.cacheWidgets();\n    }\n/**\n * @return {?}\n */\nonDragEnd(): void {\n        this.onResizeEnd();\n\n        this._widgetOrigin = {};\n    }\n/**\n * @param {?} action\n * @return {?}\n */\nonDrag(action: DashboardAction): void {\n\n        // if there was no movement then do nothing\n        if (action.event.pageX === this._mouseEvent.pageX && action.event.pageY === this._mouseEvent.pageY) {\n            return;\n        }\n\n        // get the current mouse position\n        const /** @type {?} */ mouseX = action.event.pageX - this._mouseEvent.pageX;\n        const /** @type {?} */ mouseY = action.event.pageY - this._mouseEvent.pageY;\n\n        // store the latest event\n        this._mouseEvent = action.event;\n\n        const /** @type {?} */ dimensions: DashboardWidgetDimensions = {\n            x: action.widget.x + mouseX,\n            y: action.widget.y + mouseY,\n            width: action.widget.width,\n            height: action.widget.height\n        };\n\n        this.restoreWidgets(true);\n\n        // update widget position\n        action.widget.setBounds(dimensions.x, dimensions.y, dimensions.width, dimensions.height);\n\n        // update placeholder position and value\n        this.setPlaceholderBounds(true, dimensions.x, dimensions.y, dimensions.width, dimensions.height);\n\n        // show the widget positions if the current positions and sizes were to persist\n        this.shiftWidgets();\n\n        this.setDashboardHeight();\n    }\n/**\n * @return {?}\n */\ngetRowHeight(): number {\n        return this._rowHeight;\n    }\n/**\n * @return {?}\n */\ncacheWidgets(): void {\n        this._cache = this.widgets.map(widget => ({ id: widget.id, column: widget.getColumn(), row: widget.getRow() }));\n    }\n/**\n * @param {?=} ignoreActionWidget\n * @return {?}\n */\nrestoreWidgets(ignoreActionWidget: boolean = false): void {\n        this._cache.filter(widget => !ignoreActionWidget || widget.id !== this._actionWidget.widget.id).forEach(widget => {\n\n            const /** @type {?} */ match = this.widgets.find(wgt => wgt.id === widget.id);\n\n            if (match) {\n                match.setColumn(widget.column);\n                match.setRow(widget.row);\n            }\n        });\n    }\n/**\n * When dragging any widgets that need to be moved should be moved to an appropriate position\n * @return {?}\n */\nshiftWidgets(): void {\n\n        let /** @type {?} */ widgetsToMove: DashboardWidgetComponent[] = [];\n\n        const /** @type {?} */ placeholder = this.placeholder$.getValue();\n\n        // check if there are any widgets under the placeholder\n        for (let /** @type {?} */ row = placeholder.row; row < placeholder.row + placeholder.rowSpan; row++) {\n            for (let /** @type {?} */ column = placeholder.column; column < placeholder.column + placeholder.columnSpan; column++) {\n\n                // store reference to any widgets that need moved\n                this.getOccupiedSpaces()\n                    .filter(space => space.column === column && space.row === row && space.widget !== this._actionWidget.widget)\n                    .forEach(space => widgetsToMove.push(space.widget));\n            }\n        }\n\n        // remove any duplicates\n        widgetsToMove = widgetsToMove.filter((widget, idx, array) => array.indexOf(widget) === idx);\n\n        // if no widgets need moved then we can stop here\n        if (widgetsToMove.length === 0) {\n            return;\n        }\n\n        // create a duplicate we can use to keep track of which have been moved\n        const /** @type {?} */ unmovedWidgets = widgetsToMove.slice();\n\n        // attempt to move any widgets to the previous widget position\n        widgetsToMove.forEach(widget => {\n\n            // get a grid off all occupied spaces - taking into account the placeholder and ignoring widgets that need moved\n            const /** @type {?} */ grid = this.getOccupiedSpaces().filter(space => !unmovedWidgets.find(wgt => wgt === space.widget));\n\n            // iterate each free block\n            for (let /** @type {?} */ row = this._widgetOrigin.row; row < this._widgetOrigin.row + this._widgetOrigin.rowSpan; row++) {\n                for (let /** @type {?} */ column = this._widgetOrigin.column; column < this._widgetOrigin.column + this._widgetOrigin.columnSpan; column++) {\n\n                    // determine if the block can fit in this space\n                    let /** @type {?} */ requiredSpaces = this.getRequiredSpacesFromPoint(widget, column, row);\n\n                    // check if widget would fit in space\n                    let /** @type {?} */ available = requiredSpaces.every(space => {\n                        return !grid.find(gridSpace => gridSpace.column === space.column && gridSpace.row === space.row) && space.column < this.getColumnCount();\n                    });\n\n                    if (available) {\n                        widget.setColumn(column);\n                        widget.setRow(row);\n                        unmovedWidgets.splice(unmovedWidgets.findIndex(wgt => wgt === widget), 1);\n                        return;\n                    }\n                }\n            }\n\n            // if we get to here then we can't simply swap the positions - next try moving right\n            if (this.canWidgetMoveRight(widget, true)) {\n\n                // after the shift check if placeholder position is still valid\n                this.validatePlaceholderPosition(ActionDirection.Right);\n                return;\n            }\n\n            // next try moving left\n            if (this.canWidgetMoveLeft(widget, true)) {\n\n                // after the shift check if placeholder position is still valid\n                this.validatePlaceholderPosition(ActionDirection.Left);\n                return;\n            }\n\n            // determine the distance that the widget needs to be moved down\n            let /** @type {?} */ distance = (this._actionWidget.widget.getRow() - widget.getRow()) + this._actionWidget.widget.getRowSpan();\n\n            // as a last resort move the widget downwards\n            this.moveWidgetDown(widget, distance);\n        });\n    }\n/**\n * After shifts have taken place we should verify the place holder position is still valid\n * @param {?} shiftDirection - the position widgets were shifted\n * @return {?}\n */\nvalidatePlaceholderPosition(shiftDirection: ActionDirection) {\n\n        const /** @type {?} */ placeholder = this.placeholder$.getValue();\n\n        // check if the placeholder is over a widget\n        if (this.getWidgetsAtPosition(placeholder.column, placeholder.row, true).length > 0) {\n\n            // move the placeholder the opposite direction\n            switch (shiftDirection) {\n\n                case ActionDirection.Left:\n                    this.setPlaceholderBounds(placeholder.visible, placeholder.x + this.getColumnWidth(), placeholder.y, placeholder.width, placeholder.height);\n                    break;\n\n                case ActionDirection.Right:\n                    this.setPlaceholderBounds(placeholder.visible, placeholder.x - this.getColumnWidth(), placeholder.y, placeholder.width, placeholder.height);\n                    break;\n            }\n\n            // validate this new position again\n            this.validatePlaceholderPosition(shiftDirection);\n        }\n    }\n/**\n * Determine if a widget can be moved left - or if it can move the widgets to the right to make space for the widget\n * @param {?} widget\n * @param {?=} performMove\n * @return {?}\n */\ncanWidgetMoveLeft(widget: DashboardWidgetComponent, performMove: boolean = false): boolean {\n\n        // check if the widget is the action widget or occupies the first column\n        if (widget === this._actionWidget.widget || widget.getColumn() === 0) {\n            return false;\n        }\n\n        // find the positions required\n        const /** @type {?} */ targetSpaces = this.getOccupiedSpaces().filter(space => space.widget === widget).map(space => {\n            return { column: space.column - widget.getColumnSpan(), row: space.row, widget: space.widget };\n        });\n\n        // check if there are widget in the required positions and if so, can they move right?\n        const /** @type {?} */ moveable = targetSpaces.every(space => this.getWidgetsAtPosition(space.column, space.row).filter(wgt => wgt !== space.widget).every(wgt => this.canWidgetMoveLeft(wgt)));\n\n        if (performMove && moveable) {\n\n            // move all widgets to the right\n            targetSpaces.forEach(space => this.getWidgetsAtPosition(space.column, space.row).filter(wgt => wgt !== space.widget).forEach(wgt => this.canWidgetMoveLeft(wgt, true)));\n\n            // move current widget to the right\n            widget.setColumn(widget.getColumn() - 1);\n        }\n\n        return moveable;\n    }\n/**\n * Determine if a widget can be moved right - or if it can move the widgets to the right to make space for the widget\n * @param {?} widget\n * @param {?=} performMove\n * @return {?}\n */\ncanWidgetMoveRight(widget: DashboardWidgetComponent, performMove: boolean = false): boolean {\n\n        // check if the widget is the dragging widget or the widget occupies the final column\n        if (widget === this._actionWidget.widget || widget.getColumn() + widget.getColumnSpan() === this.options.columns) {\n            return false;\n        }\n\n        // find the positions required\n        const /** @type {?} */ targetSpaces = this.getOccupiedSpaces().filter(space => space.widget === widget).map(space => {\n            return { column: space.column + widget.getColumnSpan(), row: space.row, widget: space.widget };\n        });\n\n        // check if there are widget in the required positions and if so, can they move right?\n        const /** @type {?} */ moveable = targetSpaces.every(space => this.getWidgetsAtPosition(space.column, space.row).filter(wgt => wgt !== space.widget).every(wgt => this.canWidgetMoveRight(wgt)));\n\n        if (performMove && moveable) {\n\n            // move all widgets to the right\n            targetSpaces.forEach(space => this.getWidgetsAtPosition(space.column, space.row).filter(wgt => wgt !== space.widget).forEach(wgt => this.canWidgetMoveRight(wgt, true)));\n\n            // move current widget to the right\n            widget.setColumn(widget.getColumn() + 1);\n        }\n\n        return moveable;\n    }\n/**\n * Store the initial position of the widget being dragged\n * @return {?}\n */\nsetWidgetOrigin(): void {\n        this._widgetOrigin = {\n            column: this._actionWidget.widget.getColumn(),\n            row: this._actionWidget.widget.getRow(),\n            columnSpan: this._actionWidget.widget.getColumnSpan(),\n            rowSpan: this._actionWidget.widget.getRowSpan()\n        };\n    }\n/**\n * Calculate all the required positions is a widget was to be positioned at a particular point\n * @param {?} widget\n * @param {?} column\n * @param {?} row\n * @return {?}\n */\ngetRequiredSpacesFromPoint(widget: DashboardWidgetComponent, column: number, row: number): DashboardSpace[] {\n        const /** @type {?} */ spaces: DashboardSpace[] = [];\n\n        for (let /** @type {?} */ y = row; y < row + widget.getRowSpan(); y++) {\n            for (let /** @type {?} */ x = column; x < column + widget.getColumnSpan(); x++) {\n                spaces.push({ column: x, row: y, widget: widget });\n            }\n        }\n\n        return spaces;\n    }\n/**\n * Position widgets based on the position of the placeholder - this is temporary until confirmed\n * @param {?} widget\n * @return {?}\n */\nupdateWidgetPositions(widget: DashboardWidgetComponent) {\n\n        const /** @type {?} */ placeholder = this.placeholder$.getValue();\n\n        // check all spaces the placeholder will occupy and move any widget currently in them down\n        for (let /** @type {?} */ column = placeholder.column; column < placeholder.column + placeholder.columnSpan; column++) {\n            for (let /** @type {?} */ row = placeholder.row; row < placeholder.row + placeholder.rowSpan; row++) {\n\n                this.getWidgetsAtPosition(column, row, true)\n                    .filter(wgt => wgt !== widget)\n                    .forEach(wgt => this.moveWidgetDown(wgt));\n            }\n        }\n\n        // update the height of the dashboard\n        this.setDashboardHeight();\n\n        // if we arent dragging the top handle then fill spaces\n        if (this._actionWidget.direction !== ActionDirection.Top &&\n            this._actionWidget.direction !== ActionDirection.TopLeft &&\n            this._actionWidget.direction !== ActionDirection.TopRight) {\n            this.shiftWidgetsUp();\n        }\n    }\n/**\n * Determine if a widget is occupying a specific row and column\n * @param {?} column The columns to check if occupied\n * @param {?} row The row to check if occupied\n * @param {?=} ignoreResizing Whether or not to ignore the widget currently being resized\n * @return {?}\n */\ngetWidgetsAtPosition(column: number, row: number, ignoreResizing: boolean = false): DashboardWidgetComponent[] {\n        return this.getOccupiedSpaces()\n            .filter(space => space.column === column && space.row === row)\n            .filter(space => space.widget !== this._actionWidget.widget || !ignoreResizing)\n            .map(space => space.widget);\n    }\n/**\n * Update the placeholder visibility, position and size\n * @param {?} visible\n * @param {?} x\n * @param {?} y\n * @param {?} width\n * @param {?} height\n * @return {?}\n */\nsetPlaceholderBounds(visible: boolean, x: number, y: number, width: number, height: number): void {\n\n        const /** @type {?} */ placeholder = this.placeholder$.getValue();\n\n        const /** @type {?} */ rounding = this._actionWidget.direction === ActionDirection.Left ||\n            this._actionWidget.direction === ActionDirection.Top ? Rounding.RoundDownBelowHalf : Rounding.RoundUpOverHalf;\n\n        placeholder.visible = visible;\n\n        placeholder.column = this.getPlaceholderColumn(x, width);\n        placeholder.row = this.getPlaceholderRow(y, height);\n        placeholder.columnSpan = this.getPlaceholderColumnSpan(width);\n        placeholder.rowSpan = this.getPlaceholderRowSpan(height);\n\n        // calculate the maximum number of rows\n        const /** @type {?} */ rowCount = this.widgets.filter(widget => widget !== this._actionWidget.widget)\n            .reduce((previous, widget) => Math.max(widget.getRow() + widget.getRowSpan(), previous), 0);\n\n        // constrain maximum placeholder row\n        placeholder.row = Math.min(placeholder.row, rowCount);\n\n        placeholder.x = (placeholder.column * this.getColumnWidth()) + this.options.padding;\n        placeholder.y = (placeholder.row * this._rowHeight) + this.options.padding;\n        placeholder.width = (placeholder.columnSpan * this.getColumnWidth()) - (this.options.padding * 2);\n        placeholder.height = (placeholder.rowSpan * this._rowHeight) - (this.options.padding * 2);\n\n        // set the values of the widget to match the values of the placeholder - however do not render the changes\n        this._actionWidget.widget.setColumn(placeholder.column, false);\n        this._actionWidget.widget.setRow(placeholder.row, false);\n        this._actionWidget.widget.setColumnSpan(placeholder.columnSpan, false);\n        this._actionWidget.widget.setRowSpan(placeholder.rowSpan, false);\n\n        // update the placeholder\n        this.placeholder$.next(placeholder);\n    }\n/**\n * Get the placeholder column position\n * @param {?} x\n * @param {?} width\n * @return {?}\n */\ngetPlaceholderColumn(x: number, width: number): number {\n\n        const /** @type {?} */ column = this.getColumnFromPx(x, this._actionWidget.direction === ActionDirection.Move ? Rounding.RoundUpOverHalf : Rounding.RoundDown);\n        const /** @type {?} */ columnSpan = Math.floor(width / this.getColumnWidth());\n        const /** @type {?} */ upperLimit = this.getColumnCount() - columnSpan;\n\n        // if we arent dragging left then just return the column\n        if (this._actionWidget.direction !== ActionDirection.Left &&\n            this._actionWidget.direction !== ActionDirection.TopLeft &&\n            this._actionWidget.direction !== ActionDirection.BottomLeft) {\n            return Math.max(Math.min(column, upperLimit), 0);\n        }\n\n        // get any overflow\n        const /** @type {?} */ overflow = width % this.getColumnWidth();\n\n        return (x <= 0 || overflow === 0 || columnSpan === 0 || overflow > (this.getColumnWidth() / 2)) ?\n            Math.max(Math.min(column, upperLimit), 0) :\n            Math.max(Math.min(column + 1, upperLimit), 0);\n    }\n/**\n * Get the column span of the placeholder\n * @param {?} width\n * @return {?}\n */\ngetPlaceholderColumnSpan(width: number): number {\n\n        const /** @type {?} */ columnSpan = this.getColumnFromPx(width);\n\n        // if we arent dragging right or left then just return the column span\n        if (this._actionWidget.direction !== ActionDirection.Right &&\n            this._actionWidget.direction !== ActionDirection.TopRight &&\n            this._actionWidget.direction !== ActionDirection.BottomRight &&\n            this._actionWidget.direction !== ActionDirection.Left &&\n            this._actionWidget.direction !== ActionDirection.TopLeft &&\n            this._actionWidget.direction !== ActionDirection.BottomLeft) {\n            return Math.max(columnSpan, 1);\n        }\n\n        // get the current column span and any overflow\n        const /** @type {?} */ overflow = width % this.getColumnWidth();\n\n        return (columnSpan > 0 && overflow > (this.getColumnWidth() / 2)) ? Math.max(columnSpan + 1, 1) : Math.max(columnSpan, 1);\n    }\n/**\n * Get the row position of the placeholder\n * @param {?} y\n * @param {?} height\n * @return {?}\n */\ngetPlaceholderRow(y: number, height: number): number {\n\n        const /** @type {?} */ row = this.getRowFromPx(y, this._actionWidget.direction === ActionDirection.Move ? Rounding.RoundUpOverHalf : Rounding.RoundDown);\n        const /** @type {?} */ rowSpan = Math.ceil(height / this._rowHeight);\n\n        // if we arent dragging up then just return the row\n        if (this._actionWidget.direction !== ActionDirection.Top &&\n            this._actionWidget.direction !== ActionDirection.TopLeft &&\n            this._actionWidget.direction !== ActionDirection.TopRight) {\n            return Math.max(row, 0);\n        }\n\n        // get any overflow\n        let /** @type {?} */ overflow = height < this._rowHeight ? 0 : height % this._rowHeight;\n\n        return (y <= 0 || rowSpan === 0 || overflow === 0 || overflow > (this._rowHeight / 2)) ? Math.max(row, 0) : Math.max(row + 1, 0);\n    }\n/**\n * Get the row span of the placeholder\n * @param {?} height\n * @return {?}\n */\ngetPlaceholderRowSpan(height: number): number {\n\n        const /** @type {?} */ rowSpan = this.getRowFromPx(height);\n\n        // if we arent dragging up or down then just return the column span\n        if (this._actionWidget.direction !== ActionDirection.Top &&\n            this._actionWidget.direction !== ActionDirection.TopLeft &&\n            this._actionWidget.direction !== ActionDirection.TopRight &&\n            this._actionWidget.direction !== ActionDirection.Bottom &&\n            this._actionWidget.direction !== ActionDirection.BottomLeft &&\n            this._actionWidget.direction !== ActionDirection.BottomRight) {\n            return Math.max(rowSpan, 1);\n        }\n\n        // get the current column span and any overflow\n        const /** @type {?} */ overflow = height % this._rowHeight;\n\n        return (overflow > (this._rowHeight / 2)) ? Math.max(rowSpan + 1, 1) : Math.max(rowSpan, 1);\n    }\n/**\n * @param {?} x\n * @param {?=} rounding\n * @return {?}\n */\ngetColumnFromPx(x: number, rounding: Rounding = Rounding.RoundDown): number {\n\n        const /** @type {?} */ column = Math.floor(x / Math.floor(this.getColumnWidth()));\n        const /** @type {?} */ overflow = (x % Math.floor(this.getColumnWidth()));\n        const /** @type {?} */ half = this.getColumnWidth() / 2;\n\n        switch (rounding) {\n\n            case Rounding.RoundDown:\n                return column;\n\n            case Rounding.RoundDownBelowHalf:\n                return overflow < half ? column : column + 1;\n\n            case Rounding.RoundUpOverHalf:\n                return overflow > half ? column + 1 : column;\n\n            case Rounding.RoundUp:\n                return overflow > 0 ? column + 1 : column;\n        }\n\n    }\n/**\n * @param {?} y\n * @param {?=} rounding\n * @return {?}\n */\ngetRowFromPx(y: number, rounding: Rounding = Rounding.RoundDown): number {\n\n        const /** @type {?} */ row = Math.floor(y / Math.floor(this._rowHeight));\n        const /** @type {?} */ overflow = (y % Math.floor(this._rowHeight));\n        const /** @type {?} */ half = this._rowHeight / 2;\n\n        switch (rounding) {\n\n            case Rounding.RoundDown:\n                return row;\n\n            case Rounding.RoundDownBelowHalf:\n                return overflow < half ? row : row + 1;\n\n            case Rounding.RoundUpOverHalf:\n                return overflow > half ? row + 1 : row;\n\n            case Rounding.RoundUp:\n                return overflow > 0 ? row + 1 : row;\n        }\n    }\n/**\n * @return {?}\n */\ncommitWidgetChanges(): void {\n\n        const /** @type {?} */ placeholder = this.placeholder$.getValue();\n\n        // check that we have all the values we need\n        if (placeholder.column === undefined || placeholder.row === undefined ||\n            placeholder.columnSpan === undefined || placeholder.rowSpan === undefined) {\n            return;\n        }\n\n        if (this._actionWidget) {\n            this._actionWidget.widget.setColumn(placeholder.column);\n            this._actionWidget.widget.setRow(placeholder.row);\n            this._actionWidget.widget.setColumnSpan(placeholder.columnSpan);\n            this._actionWidget.widget.setRowSpan(placeholder.rowSpan);\n        }\n\n        // reset all placeholder values\n        placeholder.column = undefined;\n        placeholder.row = undefined;\n        placeholder.columnSpan = undefined;\n        placeholder.rowSpan = undefined;\n\n        // emit the new placeholder values\n        this.placeholder$.next(placeholder);\n    }\n/**\n * Get the current column width\n * @return {?}\n */\ngetColumnWidth(): number {\n        return Math.floor(this.columnWidth);\n    }\n/**\n * Calculate the number of rows populated with widgets\n * @return {?}\n */\ngetRowCount(): number {\n        return this.widgets.reduce((previous, widget) => Math.max(widget.getRow() + widget.getRowSpan(), previous), 0);\n    }\n/**\n * Set the height of the dashboard container element\n * @return {?}\n */\nsetDashboardHeight(): void {\n\n        // size the dashboard container to ensure all rows fit\n        let /** @type {?} */ rowCount = this.getRowCount();\n\n        // if we should show an empty row increment the row count by 1\n        if (this.options.emptyRow) {\n            rowCount++;\n        }\n\n        this.setDimensions(undefined, rowCount * this._rowHeight);\n    }\n/**\n * Orders the z-index of all widgets to move the active one to the front\n * @param {?} widget The widget that should be brought to the front\n * @return {?}\n */\nbringToFront(widget: DashboardWidgetComponent): void {\n        this.widgets.forEach(_widget => _widget === widget ? _widget.bringToFront() : _widget.sendToBack());\n    }\n/**\n * Move a widget down - if widgets are in the position below, then move them down further\n * @param {?} widget The widget to move downwards\n * @param {?=} distance\n * @return {?}\n */\nmoveWidgetDown(widget: DashboardWidgetComponent, distance: number = 1): void {\n\n        // move the widget down one position\n        widget.setRow(widget.getRow() + distance);\n\n        // check every space the widget occupies for collisions\n        this.forEachBlock(widget, (column, row) =>\n            this.getWidgetsAtPosition(column, row, true)\n                .filter(wgt => wgt !== widget)\n                .forEach(wgt => this.moveWidgetDown(wgt, distance)));\n    }\n/**\n * Widgets should not be allowed to have a vacant space above them - if there is one they should move upwards to fill it\n * @return {?}\n */\nshiftWidgetsUp(): void {\n\n        // check whether or not changes have been made - if so we need to repeat until stable\n        let /** @type {?} */ stable = true;\n\n        // iterate each widget and \n        this.widgets.forEach(widget => {\n\n            // if widget is already on the top row then do nothing\n            if (widget.getRow() === 0) {\n                return;\n            }\n\n            // if we are currently dragging and this is the dragging widget then skip\n            if (this._actionWidget && this._actionWidget.widget === widget) {\n                return;\n            }\n\n            if (this.getPositionAvailable(widget.getColumn(), widget.getRow() - 1, widget.getColumnSpan(), 1)) {\n                widget.setRow(widget.getRow() - 1);\n                stable = false;\n            }\n        });\n\n        // if changes occurred then we should repeat the process\n        if (!stable) {\n            this.shiftWidgetsUp();\n        }\n    }\n/**\n * Iterate over each space a widget occupied\n * @param {?} widget The widget to determine spaces\n * @param {?} callback The function to be called for each space, should expect a column and row argument witht he context being the widget\n * @return {?}\n */\nforEachBlock(widget: DashboardWidgetComponent, callback: (column: number, row: number) => void): void {\n        for (let /** @type {?} */ row = widget.getRow(); row < widget.getRow() + widget.getRowSpan(); row++) {\n            for (let /** @type {?} */ column = widget.getColumn(); column < widget.getColumn() + widget.getColumnSpan(); column++) {\n                callback.call(widget, column, row);\n            }\n        }\n    }\n/**\n * Returns the number of columns available\n * @return {?}\n */\ngetColumnCount(): number {\n        return this.stacked ? 1 : this.options.columns;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction DashboardService_tsickle_Closure_declarations() {\n/** @type {?} */\nDashboardService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDashboardService.ctorParameters;\n/** @type {?} */\nDashboardService.prototype._dashboard;\n/** @type {?} */\nDashboardService.prototype._widgetOrigin;\n/** @type {?} */\nDashboardService.prototype._actionWidget;\n/** @type {?} */\nDashboardService.prototype._rowHeight;\n/** @type {?} */\nDashboardService.prototype._cache;\n/** @type {?} */\nDashboardService.prototype._mouseEvent;\n/** @type {?} */\nDashboardService.prototype.widgets$;\n/** @type {?} */\nDashboardService.prototype.options$;\n/** @type {?} */\nDashboardService.prototype.dimensions$;\n/** @type {?} */\nDashboardService.prototype.height$;\n/** @type {?} */\nDashboardService.prototype.placeholder$;\n/** @type {?} */\nDashboardService.prototype.layout$;\n/** @type {?} */\nDashboardService.prototype.stacked$;\n}\n\n\nexport const /** @type {?} */ defaultOptions: DashboardOptions = { columns: 5, padding: 5, minWidth: 100, minHeight: 100, emptyRow: true };\n\nexport interface DashboardDimensions {\n    width?: number;\n    height?: number;\n}\n\nexport interface DashboardWidgetDimensions {\n    x: number;\n    y: number;\n    width: number;\n    height: number;\n}\n\nexport interface DashboardAction {\n    widget: DashboardWidgetComponent;\n    direction: ActionDirection;\n    event: MouseEvent;\n    handle?: HTMLElement;\n}\n\nexport interface DashboardSpace {\n    widget: DashboardWidgetComponent;\n    column: number;\n    row: number;\n}\n\nexport interface DashboardPlaceholder {\n    visible: boolean;\n    x: number;\n    y: number;\n    width: number;\n    height: number;\n    column?: number;\n    row?: number;\n    columnSpan?: number;\n    rowSpan?: number;\n}\n\nexport interface DashboardCache {\n    id: string;\n    column: number;\n    row: number;\n}\n\nexport interface DashboardLayoutData {\n    id: string;\n    col: number;\n    row: number;\n    colSpan: number;\n    rowSpan: number;\n}\nexport type ActionDirection = number;\nexport let ActionDirection: any = {};\nActionDirection.Top = 0;\nActionDirection.TopRight = 1;\nActionDirection.Right = 2;\nActionDirection.BottomRight = 3;\nActionDirection.Bottom = 4;\nActionDirection.BottomLeft = 5;\nActionDirection.Left = 6;\nActionDirection.TopLeft = 7;\nActionDirection.Move = 8;\nActionDirection[ActionDirection.Top] = \"Top\";\nActionDirection[ActionDirection.TopRight] = \"TopRight\";\nActionDirection[ActionDirection.Right] = \"Right\";\nActionDirection[ActionDirection.BottomRight] = \"BottomRight\";\nActionDirection[ActionDirection.Bottom] = \"Bottom\";\nActionDirection[ActionDirection.BottomLeft] = \"BottomLeft\";\nActionDirection[ActionDirection.Left] = \"Left\";\nActionDirection[ActionDirection.TopLeft] = \"TopLeft\";\nActionDirection[ActionDirection.Move] = \"Move\";\n\nexport type Rounding = number;\nexport let Rounding: any = {};\nRounding.RoundDown = 0;\nRounding.RoundDownBelowHalf = 1;\nRounding.RoundUp = 2;\nRounding.RoundUpOverHalf = 3;\nRounding[Rounding.RoundDown] = \"RoundDown\";\nRounding[Rounding.RoundDownBelowHalf] = \"RoundDownBelowHalf\";\nRounding[Rounding.RoundUp] = \"RoundUp\";\nRounding[Rounding.RoundUpOverHalf] = \"RoundUpOverHalf\";\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\n\nimport { ColumnSortingComponent } from './column-sorting.component';\n\nimport { ColumnSortingDirective } from './column-sorting.directive';\nexport class ColumnSortingModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    exports: [ColumnSortingComponent, ColumnSortingDirective],\n    declarations: [ColumnSortingComponent, ColumnSortingDirective]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ColumnSortingModule_tsickle_Closure_declarations() {\n/** @type {?} */\nColumnSortingModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nColumnSortingModule.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { ColumnSortingComponent, ColumnSortingState } from './column-sorting.component';\nimport { Directive, Host, QueryList, ContentChildren, Input } from '@angular/core';\nimport { Subject } from 'rxjs/Subject';\nexport class ColumnSortingDirective {\n\n     singleSort: boolean;\n     components: QueryList<ColumnSortingComponent>;\n\n    events: Subject<ColumnSortingOrder[]> = new Subject<ColumnSortingOrder[]>();\n    order: ColumnSortingOrder[] = [];\n/**\n * @return {?}\n */\nngAfterViewInit() {\n        this.components.forEach(component => component.initParent(this));\n    }\n/**\n * @param {?} key\n * @param {?} state\n * @return {?}\n */\ntoggleColumn(key: string, state: ColumnSortingState) {\n\n        if (this.singleSort) {\n            if (state === ColumnSortingState.NoSort) {\n                this.order = [];\n            } else {\n                this.order = [{key: key, state: state}];\n            }\n        } else {\n            // reorder columns here\n            let /** @type {?} */ idx = this.order.findIndex(column => column.key === key);\n\n            // if wasnt previously selected add to list\n            if (idx === -1) {\n                this.order.push({ key: key, state: state});\n            } else if (state === ColumnSortingState.Ascending || state === ColumnSortingState.Descending) {\n                this.order.splice(idx, 1);\n                this.order.push({ key: key, state: state});\n            } else {\n                this.order.splice(idx, 1);\n            }\n        }\n\n            this.events.next(this.order);\n            // return the order\n            return this.order;\n\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: '[uxColumnSorting]'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'singleSort': [{ type: Input },],\n'components': [{ type: ContentChildren, args: [ColumnSortingComponent, ] },],\n};\n}\n\nfunction ColumnSortingDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nColumnSortingDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nColumnSortingDirective.ctorParameters;\n/** @type {?} */\nColumnSortingDirective.propDecorators;\n/** @type {?} */\nColumnSortingDirective.prototype.singleSort;\n/** @type {?} */\nColumnSortingDirective.prototype.components;\n/** @type {?} */\nColumnSortingDirective.prototype.events;\n/** @type {?} */\nColumnSortingDirective.prototype.order;\n}\n\n\nexport interface ColumnSortingOrder {\n    key: string;\n    state: ColumnSortingState; \n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { ColumnSortingDirective, ColumnSortingOrder } from './column-sorting.directive';\nimport { Component, Input, Output, EventEmitter } from '@angular/core';\nexport class ColumnSortingComponent {\n\n     state: ColumnSortingState;\n     key: string;\n     orderNumber: number;\n     stateChange: EventEmitter<ColumnSortingState> = new EventEmitter<ColumnSortingState>();\nprivate _parent: ColumnSortingDirective;\n    columnSortingState = ColumnSortingState;\n/**\n * @param {?} parent\n * @return {?}\n */\ninitParent(parent: ColumnSortingDirective) {\n        this._parent = parent;\n\n        // watch for any events\n        this._parent.events.subscribe(event => {\n\n            let /** @type {?} */ idx = event.findIndex(column => column.key === this.key);\n\n            if (idx == -1) {\n                this.state = ColumnSortingState.NoSort;\n            }\n\n            // only store the number if we have 2 or more columns being sorted\n            if (event.length > 1) {\n                this.orderNumber = idx === -1 ? null : idx + 1;\n            } else {\n                this.orderNumber = null;\n            }\n\n            this.stateChange.emit(this.state);\n\n        });\n    }\n/**\n * @return {?}\n */\nchangeState(): ColumnSortingOrder[] {\n\n        if (this.state === ColumnSortingState.Ascending) {\n            this.state = ColumnSortingState.Descending;\n        } else if (this.state === ColumnSortingState.Descending) {\n            this.state = ColumnSortingState.NoSort;\n        } else {\n            this.state = ColumnSortingState.Ascending;\n        }\n\n        // inform parent\n        return this._parent.toggleColumn(this.key, this.state);\n\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-column-sorting',\n    template: `\n      <div class=\"ux-column-sorting\">\n          <i class=\"ux-column-sorting-icon hpe-icon\" \n              [class.hpe-ascend]=\"state === columnSortingState.Ascending\" \n              [class.hpe-descend]=\"state === columnSortingState.Descending\" \n              [class.column-sorting-icon-hidden]=\"state === columnSortingState.NoSort\"></i>\n          <p class=\"ux-column-sorting-number\">{{ orderNumber }}</p>\n      </div>\n    `,\n    exportAs: 'ux-column-sorting'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'state': [{ type: Input },],\n'key': [{ type: Input },],\n'orderNumber': [{ type: Input },],\n'stateChange': [{ type: Output },],\n};\n}\n\nfunction ColumnSortingComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nColumnSortingComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nColumnSortingComponent.ctorParameters;\n/** @type {?} */\nColumnSortingComponent.propDecorators;\n/** @type {?} */\nColumnSortingComponent.prototype.state;\n/** @type {?} */\nColumnSortingComponent.prototype.key;\n/** @type {?} */\nColumnSortingComponent.prototype.orderNumber;\n/** @type {?} */\nColumnSortingComponent.prototype.stateChange;\n/** @type {?} */\nColumnSortingComponent.prototype._parent;\n/** @type {?} */\nColumnSortingComponent.prototype.columnSortingState;\n}\n\nexport type ColumnSortingState = number;\nexport let ColumnSortingState: any = {};\nColumnSortingState.Ascending = 0;\nColumnSortingState.Descending = 1;\nColumnSortingState.NoSort = 2;\nColumnSortingState[ColumnSortingState.Ascending] = \"Ascending\";\nColumnSortingState[ColumnSortingState.Descending] = \"Descending\";\nColumnSortingState[ColumnSortingState.NoSort] = \"NoSort\";\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport {FormsModule} from '@angular/forms';\n\nimport { CheckboxComponent } from './checkbox.component';\nexport class CheckboxModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [FormsModule],\n    exports: [CheckboxComponent],\n    declarations: [CheckboxComponent]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction CheckboxModule_tsickle_Closure_declarations() {\n/** @type {?} */\nCheckboxModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nCheckboxModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, EventEmitter, Input, Output, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nexport const /** @type {?} */ CHECKBOX_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => CheckboxComponent),\n    multi: true\n};\n\nlet /** @type {?} */ uniqueCheckboxId = 0;\nexport class CheckboxComponent implements ControlValueAccessor {\nprivate _checkboxId: string = `ux-checkbox-${++uniqueCheckboxId}`;\n\n     id: string = this._checkboxId;\n     name: string | null;\n     required: boolean;\n     tabindex: number = 0;\n     clickable: boolean = true;\n     simplified: boolean = false;\n     indeterminateValue: any = -1;\n     disabled: boolean = false;\n     ariaLabel: string = '';\n     ariaLabelledby: string = null;\n\n     valueChange: EventEmitter<any> = new EventEmitter<any>();\n/**\n * @return {?}\n */\nget value() {\n        return this._value;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset value(value: any) {\n        this._value = value;\n\n        // determine if it is in the indeterminate state\n        this.indeterminate = this._value === this.indeterminateValue;\n\n        // determine the checked state\n        this.ariaChecked = this.indeterminate ? 'mixed' : this._value;\n\n        // invoke change event\n        this.valueChange.emit(this._value);\n\n        // call callback\n        this.onChangeCallback(this._value);\n        this.onTouchedCallback();\n    }\n/**\n * @return {?}\n */\nget inputId(): string { \n        return `${this.id || this._checkboxId}-input`;\n    }\nprivate _value: any = false;\n\n    indeterminate: boolean = false;\n    ariaChecked: boolean | string;\n    focused: boolean = false;\n\n    onTouchedCallback: () => void = () => { };\n    onChangeCallback: (_: any) => void = () => { };\n/**\n * @return {?}\n */\ntoggle(): void {\n\n        if (this.disabled || !this.clickable) {\n            return;\n        }\n\n        if (this.value === this.indeterminateValue) {\n            this.value = true;\n            return;\n        }\n\n        // toggle the checked state\n        this.value = !this.value;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nwriteValue(value: any): void {\n        if (value !== this._value) {\n            this._value = value;\n        }\n    }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnChange(fn: any): void {\n        this.onChangeCallback = fn;\n    }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnTouched(fn: any): void {\n        this.onTouchedCallback = fn;\n    }\n/**\n * @param {?} isDisabled\n * @return {?}\n */\nsetDisabledState(isDisabled: boolean): void {\n        this.disabled = isDisabled;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-checkbox',\n    template: `\n      <label [attr.for]=\"inputId\"\n             class=\"ux-checkbox\"\n             [class.ux-checkbox-checked]=\"value === true\"\n             [class.ux-checkbox-indeterminate]=\"indeterminate\"\n             [class.ux-checkbox-simplified]=\"simplified\"\n             [class.ux-checkbox-disabled]=\"disabled\"\n             [class.ux-checkbox-focused]=\"focused\">\n\n          <div class=\"ux-checkbox-container\">\n              <input type=\"checkbox\"\n                     class=\"ux-checkbox-input\"\n                     [id]=\"inputId\"\n                     [required]=\"required\"\n                     [checked]=\"value\"\n                     [attr.value]=\"value\"\n                     [disabled]=\"disabled\"\n                     [attr.name]=\"name\"\n                     [tabindex]=\"tabindex\"\n                     [indeterminate]=\"indeterminate\"\n                     [attr.aria-label]=\"ariaLabel\"\n                     [attr.aria-labelledby]=\"ariaLabelledby\"\n                     [attr.aria-checked]=\"ariaChecked\"\n                     (focus)=\"focused = true\"\n                     (blur)=\"focused = false\"\n                     (change)=\"$event.stopPropagation()\"\n                     (click)=\"toggle()\">\n          </div>\n\n          <span class=\"ux-checkbox-label\">\n              <ng-content></ng-content>\n          </span>\n      </label>\n    `,\n    providers: [CHECKBOX_VALUE_ACCESSOR]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'id': [{ type: Input },],\n'name': [{ type: Input },],\n'required': [{ type: Input },],\n'tabindex': [{ type: Input },],\n'clickable': [{ type: Input },],\n'simplified': [{ type: Input },],\n'indeterminateValue': [{ type: Input },],\n'disabled': [{ type: Input },],\n'ariaLabel': [{ type: Input, args: ['aria-label', ] },],\n'ariaLabelledby': [{ type: Input, args: ['aria-labelledby', ] },],\n'valueChange': [{ type: Output },],\n'value': [{ type: Input },],\n};\n}\n\nfunction CheckboxComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nCheckboxComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nCheckboxComponent.ctorParameters;\n/** @type {?} */\nCheckboxComponent.propDecorators;\n/** @type {?} */\nCheckboxComponent.prototype._checkboxId;\n/** @type {?} */\nCheckboxComponent.prototype.id;\n/** @type {?} */\nCheckboxComponent.prototype.name;\n/** @type {?} */\nCheckboxComponent.prototype.required;\n/** @type {?} */\nCheckboxComponent.prototype.tabindex;\n/** @type {?} */\nCheckboxComponent.prototype.clickable;\n/** @type {?} */\nCheckboxComponent.prototype.simplified;\n/** @type {?} */\nCheckboxComponent.prototype.indeterminateValue;\n/** @type {?} */\nCheckboxComponent.prototype.disabled;\n/** @type {?} */\nCheckboxComponent.prototype.ariaLabel;\n/** @type {?} */\nCheckboxComponent.prototype.ariaLabelledby;\n/** @type {?} */\nCheckboxComponent.prototype.valueChange;\n/** @type {?} */\nCheckboxComponent.prototype._value;\n/** @type {?} */\nCheckboxComponent.prototype.indeterminate;\n/** @type {?} */\nCheckboxComponent.prototype.ariaChecked;\n/** @type {?} */\nCheckboxComponent.prototype.focused;\n/** @type {?} */\nCheckboxComponent.prototype.onTouchedCallback;\n/** @type {?} */\nCheckboxComponent.prototype.onChangeCallback;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ResizeModule } from '../../directives/resize/index';\nimport { CardTabContentDirective } from './card-tab/card-tab-content.directive';\nimport { CardTabComponent } from './card-tab/card-tab.component';\nimport { CardTabsetComponent } from './card-tabset/card-tabset.component';\nexport class CardTabsModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  imports: [\n    CommonModule,\n    ResizeModule\n  ],\n  declarations: [CardTabsetComponent, CardTabComponent, CardTabContentDirective],\n  exports: [CardTabsetComponent, CardTabComponent, CardTabContentDirective]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction CardTabsModule_tsickle_Closure_declarations() {\n/** @type {?} */\nCardTabsModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nCardTabsModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, ElementRef, HostBinding, Input, ViewChild } from '@angular/core';\nimport { ResizeDimensions } from '../../../directives/resize';\nimport { CardTabComponent } from '../card-tab/card-tab.component';\nimport { CardTabsService } from '../card-tabs.service';\nexport class CardTabsetComponent {\n/**\n * @param {?} direction\n * @return {?}\n */\nset position(direction: string) {\n    this.tabService.setPosition(direction);\n  }\n/**\n * @return {?}\n */\nget position(): string {\n    return this.tabService.position$.getValue();\n  }\n\n   tablist: ElementRef;\n\n  offset: number = 0;\n  bounds: CardTabsBounds = { lower: 0, upper: 0 };\nprivate _width: number;\nprivate _innerWidth: number;\n/**\n * @param {?} tabService\n */\nconstructor(public tabService: CardTabsService) {}\n/**\n * @param {?} tab\n * @param {?} element\n * @return {?}\n */\nselect(tab: CardTabComponent, element: HTMLElement): void {\n    // select the tab\n    this.tabService.select(tab);\n\n    // ensure the tab is moved into view if required\n    this.moveIntoView(element);\n  }\n/**\n * @param {?} dimensions\n * @return {?}\n */\nresize(dimensions: ResizeDimensions): void {\n    this._width = dimensions.width;\n    this._innerWidth = this.tablist.nativeElement.scrollWidth;\n\n    this.bounds.lower = 0;\n    this.bounds.upper = -(this._innerWidth - this._width);\n  }\n/**\n * @return {?}\n */\nprevious(): void {\n    this.offset += this._width;\n\n    // ensure it remains within the allowed bounds\n    this.offset = Math.min(this.offset, this.bounds.lower);\n  }\n/**\n * @return {?}\n */\nnext(): void {\n    this.offset -= this._width;\n\n    // ensure it remains within the allowed bounds\n    this.offset = Math.max(this.offset, this.bounds.upper);\n  }\n/**\n * @param {?} element\n * @return {?}\n */\nprivate moveIntoView(element: HTMLElement): void {\n\n    // if we dont have the dimensions we cant check\n    if (!this._width || !this._innerWidth) {\n      return;\n    }\n\n    // get the current element bounds\n    const { offsetLeft, offsetWidth } = element;\n    const { marginLeft, marginRight } = getComputedStyle(element);\n\n    // calculate the visible area\n    const /** @type {?} */ viewportStart = Math.abs(this.offset);\n    const /** @type {?} */ viewportEnd = viewportStart + this._width;\n    const /** @type {?} */ cardWidth = parseFloat(marginLeft) + offsetWidth + parseFloat(marginRight);\n\n    // if we need to move to the left - figure out how much\n    if (offsetLeft < viewportStart) {\n      this.offset -= (offsetLeft - parseFloat(marginLeft)) - viewportStart;\n    }\n    \n    // if we need to move to the right - figure out how much\n    if ((offsetLeft + cardWidth) > viewportEnd) {\n      this.offset -= (offsetLeft + cardWidth) - viewportEnd;\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'ux-card-tabset',\n  template: `\n    <div class=\"card-tab-content\" role=\"tabpanel\" *ngIf=\"(tabService.tab$ | async)\">\n        <ng-content></ng-content>\n    </div>\n\n    <div class=\"card-tabs\" #tabs>\n\n        <button class=\"card-tabs-paging-btn card-tabs-paging-btn-previous\" aria-label=\"Previous Tabs\" (click)=\"previous()\" *ngIf=\"offset < bounds.lower\">\n            <i class=\"hpe-icon hpe-previous\"></i>\n        </button>\n\n        <div class=\"card-tabs-list\" role=\"tablist\" #tablist (uxResize)=\"resize($event)\" [style.transform]=\"'translateX(' + offset + 'px)'\">\n\n            <div class=\"card-tab\"\n                role=\"tab\"\n                tabindex=\"0\" #card\n                *ngFor=\"let tab of tabService.tabs$ | async\"\n                [ngClass]=\"tabService.position$ | async\"\n                [class.active]=\"tab.active$ | async\"\n                [attr.aria-selected]=\"tab.active$ | async\"\n                (click)=\"select(tab, card)\"\n                (focus)=\"tabs.scrollLeft = 0\"\n                (keydown.enter)=\"select(tab, card)\">\n\n                <ng-container [ngTemplateOutlet]=\"tab.content\"></ng-container>\n            </div>\n\n        </div>\n\n        <button class=\"card-tabs-paging-btn card-tabs-paging-btn-next\" aria-label=\"Next Tabs\" (click)=\"next()\" *ngIf=\"offset > bounds.upper\">\n            <i class=\"hpe-icon hpe-next\"></i>\n        </button>\n    </div>\n  `,\n  providers: [CardTabsService]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: CardTabsService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'position': [{ type: HostBinding, args: ['class', ] },{ type: Input },],\n'tablist': [{ type: ViewChild, args: ['tablist', ] },],\n};\n}\n\nfunction CardTabsetComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nCardTabsetComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nCardTabsetComponent.ctorParameters;\n/** @type {?} */\nCardTabsetComponent.propDecorators;\n/** @type {?} */\nCardTabsetComponent.prototype.tablist;\n/** @type {?} */\nCardTabsetComponent.prototype.offset;\n/** @type {?} */\nCardTabsetComponent.prototype.bounds;\n/** @type {?} */\nCardTabsetComponent.prototype._width;\n/** @type {?} */\nCardTabsetComponent.prototype._innerWidth;\n/** @type {?} */\nCardTabsetComponent.prototype.tabService;\n}\n\n\nexport interface CardTabsBounds {\n  lower: number;\n  upper: number;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { ChangeDetectionStrategy, Component, ContentChild, OnDestroy, TemplateRef } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { map } from 'rxjs/operators';\nimport { CardTabsService } from '../card-tabs.service';\nimport { CardTabContentDirective } from './card-tab-content.directive';\nexport class CardTabComponent implements OnDestroy {\n\n  active$: Observable<boolean> = this._tabService.tab$.pipe(map(tab => tab === this));\n   content: TemplateRef<any>;\n/**\n * @param {?} _tabService\n */\nconstructor(private _tabService: CardTabsService) {\n    this._tabService.addTab(this);\n  }\n/**\n * @return {?}\n */\nngOnDestroy(): void {\n    this._tabService.removeTab(this);\n  }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'ux-card-tab',\n  template: `\n    <ng-content *ngIf=\"active$ | async\"></ng-content>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: CardTabsService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'content': [{ type: ContentChild, args: [CardTabContentDirective, { read: TemplateRef }, ] },],\n};\n}\n\nfunction CardTabComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nCardTabComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nCardTabComponent.ctorParameters;\n/** @type {?} */\nCardTabComponent.propDecorators;\n/** @type {?} */\nCardTabComponent.prototype.active$;\n/** @type {?} */\nCardTabComponent.prototype.content;\n/** @type {?} */\nCardTabComponent.prototype._tabService;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { Subscription } from 'rxjs/Subscription';\nimport { filter } from 'rxjs/operators';\nimport { CardTabComponent } from './card-tab/card-tab.component';\nexport class CardTabsService implements OnDestroy {\n\n  tab$ = new BehaviorSubject<CardTabComponent>(null);\n  tabs$ = new BehaviorSubject<CardTabComponent[]>([]);\n  position$ = new BehaviorSubject<string>('top');\nprivate _subscription: Subscription;\nconstructor() {\n\n    // when a tab is added or removed ensure we always select one if any are available\n    this._subscription = this.tabs$.pipe(\n      filter(tabs => !this.tab$.value || !tabs.find(tab => tab === this.tab$.value)),\n    ).subscribe(tabs => this.tab$.next(tabs.length > 0 ? tabs[0] : null));\n  }\n/**\n * @return {?}\n */\nngOnDestroy(): void {\n    this._subscription.unsubscribe();\n  }\n/**\n * Add a tab to the list of tabs\n * @param {?} tab\n * @return {?}\n */\naddTab(tab: CardTabComponent): void {\n    this.tabs$.next([...this.tabs$.value, tab]);\n  }\n/**\n * Remove a tab from the list\n * @param {?} tab\n * @return {?}\n */\nremoveTab(tab: CardTabComponent): void {\n    this.tabs$.next(this.tabs$.value.filter(_tab => _tab !== tab));\n  }\n/**\n * Select the tab\n * @param {?} tab\n * @return {?}\n */\nselect(tab: CardTabComponent): void {\n    this.tab$.next(tab);\n  }\n/**\n * Set the position of the tab content\n * @param {?} position\n * @return {?}\n */\nsetPosition(position: string): void {\n    this.position$.next(position);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction CardTabsService_tsickle_Closure_declarations() {\n/** @type {?} */\nCardTabsService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nCardTabsService.ctorParameters;\n/** @type {?} */\nCardTabsService.prototype.tab$;\n/** @type {?} */\nCardTabsService.prototype.tabs$;\n/** @type {?} */\nCardTabsService.prototype.position$;\n/** @type {?} */\nCardTabsService.prototype._subscription;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","export { audit } from './operators/audit';\nexport { auditTime } from './operators/auditTime';\nexport { buffer } from './operators/buffer';\nexport { bufferCount } from './operators/bufferCount';\nexport { bufferTime } from './operators/bufferTime';\nexport { bufferToggle } from './operators/bufferToggle';\nexport { bufferWhen } from './operators/bufferWhen';\nexport { catchError } from './operators/catchError';\nexport { combineAll } from './operators/combineAll';\nexport { combineLatest } from './operators/combineLatest';\nexport { concat } from './operators/concat';\nexport { concatAll } from './operators/concatAll';\nexport { concatMap } from './operators/concatMap';\nexport { concatMapTo } from './operators/concatMapTo';\nexport { count } from './operators/count';\nexport { debounce } from './operators/debounce';\nexport { debounceTime } from './operators/debounceTime';\nexport { defaultIfEmpty } from './operators/defaultIfEmpty';\nexport { delay } from './operators/delay';\nexport { delayWhen } from './operators/delayWhen';\nexport { dematerialize } from './operators/dematerialize';\nexport { distinct } from './operators/distinct';\nexport { distinctUntilChanged } from './operators/distinctUntilChanged';\nexport { distinctUntilKeyChanged } from './operators/distinctUntilKeyChanged';\nexport { elementAt } from './operators/elementAt';\nexport { every } from './operators/every';\nexport { exhaust } from './operators/exhaust';\nexport { exhaustMap } from './operators/exhaustMap';\nexport { expand } from './operators/expand';\nexport { filter } from './operators/filter';\nexport { finalize } from './operators/finalize';\nexport { find } from './operators/find';\nexport { findIndex } from './operators/findIndex';\nexport { first } from './operators/first';\nexport { groupBy } from './operators/groupBy';\nexport { ignoreElements } from './operators/ignoreElements';\nexport { isEmpty } from './operators/isEmpty';\nexport { last } from './operators/last';\nexport { map } from './operators/map';\nexport { mapTo } from './operators/mapTo';\nexport { materialize } from './operators/materialize';\nexport { max } from './operators/max';\nexport { merge } from './operators/merge';\nexport { mergeAll } from './operators/mergeAll';\nexport { mergeMap } from './operators/mergeMap';\nexport { mergeMap as flatMap } from './operators/mergeMap';\nexport { mergeMapTo } from './operators/mergeMapTo';\nexport { mergeScan } from './operators/mergeScan';\nexport { min } from './operators/min';\nexport { multicast } from './operators/multicast';\nexport { observeOn } from './operators/observeOn';\nexport { onErrorResumeNext } from './operators/onErrorResumeNext';\nexport { pairwise } from './operators/pairwise';\nexport { partition } from './operators/partition';\nexport { pluck } from './operators/pluck';\nexport { publish } from './operators/publish';\nexport { publishBehavior } from './operators/publishBehavior';\nexport { publishLast } from './operators/publishLast';\nexport { publishReplay } from './operators/publishReplay';\nexport { race } from './operators/race';\nexport { reduce } from './operators/reduce';\nexport { repeat } from './operators/repeat';\nexport { repeatWhen } from './operators/repeatWhen';\nexport { retry } from './operators/retry';\nexport { retryWhen } from './operators/retryWhen';\nexport { refCount } from './operators/refCount';\nexport { sample } from './operators/sample';\nexport { sampleTime } from './operators/sampleTime';\nexport { scan } from './operators/scan';\nexport { sequenceEqual } from './operators/sequenceEqual';\nexport { share } from './operators/share';\nexport { shareReplay } from './operators/shareReplay';\nexport { single } from './operators/single';\nexport { skip } from './operators/skip';\nexport { skipLast } from './operators/skipLast';\nexport { skipUntil } from './operators/skipUntil';\nexport { skipWhile } from './operators/skipWhile';\nexport { startWith } from './operators/startWith';\n/**\n * TODO(https://github.com/ReactiveX/rxjs/issues/2900): Add back subscribeOn once it can be\n * treeshaken. Currently if this export is added back, it\n * forces apps to bring in asap scheduler along with\n * Immediate, root, and other supporting code.\n */\n// export { subscribeOn } from './operators/subscribeOn';\nexport { switchAll } from './operators/switchAll';\nexport { switchMap } from './operators/switchMap';\nexport { switchMapTo } from './operators/switchMapTo';\nexport { take } from './operators/take';\nexport { takeLast } from './operators/takeLast';\nexport { takeUntil } from './operators/takeUntil';\nexport { takeWhile } from './operators/takeWhile';\nexport { tap } from './operators/tap';\nexport { throttle } from './operators/throttle';\nexport { throttleTime } from './operators/throttleTime';\nexport { timeInterval } from './operators/timeInterval';\nexport { timeout } from './operators/timeout';\nexport { timeoutWith } from './operators/timeoutWith';\nexport { timestamp } from './operators/timestamp';\nexport { toArray } from './operators/toArray';\nexport { window } from './operators/window';\nexport { windowCount } from './operators/windowCount';\nexport { windowTime } from './operators/windowTime';\nexport { windowToggle } from './operators/windowToggle';\nexport { windowWhen } from './operators/windowWhen';\nexport { withLatestFrom } from './operators/withLatestFrom';\nexport { zip } from './operators/zip';\nexport { zipAll } from './operators/zipAll';\n","import { Observable, ObservableInput } from '../Observable';\nimport { ArrayObservable } from '../observable/ArrayObservable';\nimport { isArray } from '../util/isArray';\nimport { Operator } from '../Operator';\nimport { PartialObserver } from '../Observer';\nimport { Subscriber } from '../Subscriber';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { iterator as Symbol_iterator } from '../symbol/iterator';\nimport { OperatorFunction } from '../interfaces';\n\n/* tslint:disable:max-line-length */\nexport function zip<T, R>(project: (v1: T) => R): OperatorFunction<T, R>;\nexport function zip<T, T2, R>(v2: ObservableInput<T2>, project: (v1: T, v2: T2) => R): OperatorFunction<T, R>;\nexport function zip<T, T2, T3, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, project: (v1: T, v2: T2, v3: T3) => R): OperatorFunction<T, R>;\nexport function zip<T, T2, T3, T4, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, project: (v1: T, v2: T2, v3: T3, v4: T4) => R): OperatorFunction<T, R>;\nexport function zip<T, T2, T3, T4, T5, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, project: (v1: T, v2: T2, v3: T3, v4: T4, v5: T5) => R): OperatorFunction<T, R>;\nexport function zip<T, T2, T3, T4, T5, T6, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>, project: (v1: T, v2: T2, v3: T3, v4: T4, v5: T5, v6: T6) => R): OperatorFunction<T, R> ;\nexport function zip<T, T2>(v2: ObservableInput<T2>): OperatorFunction<T, [T, T2]>;\nexport function zip<T, T2, T3>(v2: ObservableInput<T2>, v3: ObservableInput<T3>): OperatorFunction<T, [T, T2, T3]>;\nexport function zip<T, T2, T3, T4>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>): OperatorFunction<T, [T, T2, T3, T4]>;\nexport function zip<T, T2, T3, T4, T5>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>): OperatorFunction<T, [T, T2, T3, T4, T5]>;\nexport function zip<T, T2, T3, T4, T5, T6>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>): OperatorFunction<T, [T, T2, T3, T4, T5, T6]> ;\nexport function zip<T, R>(...observables: Array<ObservableInput<T> | ((...values: Array<T>) => R)>): OperatorFunction<T, R>;\nexport function zip<T, R>(array: Array<ObservableInput<T>>): OperatorFunction<T, R>;\nexport function zip<T, TOther, R>(array: Array<ObservableInput<TOther>>, project: (v1: T, ...values: Array<TOther>) => R): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * @param observables\n * @return {Observable<R>}\n * @method zip\n * @owner Observable\n */\nexport function zip<T, R>(...observables: Array<ObservableInput<any> | ((...values: Array<any>) => R)>): OperatorFunction<T, R> {\n  return function zipOperatorFunction(source: Observable<T>) {\n    return source.lift.call(zipStatic<R>(source, ...observables));\n  };\n}\n\n/* tslint:disable:max-line-length */\nexport function zipStatic<T, R>(v1: ObservableInput<T>, project: (v1: T) => R): Observable<R>;\nexport function zipStatic<T, T2, R>(v1: ObservableInput<T>, v2: ObservableInput<T2>, project: (v1: T, v2: T2) => R): Observable<R>;\nexport function zipStatic<T, T2, T3, R>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, project: (v1: T, v2: T2, v3: T3) => R): Observable<R>;\nexport function zipStatic<T, T2, T3, T4, R>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, project: (v1: T, v2: T2, v3: T3, v4: T4) => R): Observable<R>;\nexport function zipStatic<T, T2, T3, T4, T5, R>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, project: (v1: T, v2: T2, v3: T3, v4: T4, v5: T5) => R): Observable<R>;\nexport function zipStatic<T, T2, T3, T4, T5, T6, R>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>, project: (v1: T, v2: T2, v3: T3, v4: T4, v5: T5, v6: T6) => R): Observable<R>;\n\nexport function zipStatic<T, T2>(v1: ObservableInput<T>, v2: ObservableInput<T2>): Observable<[T, T2]>;\nexport function zipStatic<T, T2, T3>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>): Observable<[T, T2, T3]>;\nexport function zipStatic<T, T2, T3, T4>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>): Observable<[T, T2, T3, T4]>;\nexport function zipStatic<T, T2, T3, T4, T5>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>): Observable<[T, T2, T3, T4, T5]>;\nexport function zipStatic<T, T2, T3, T4, T5, T6>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>): Observable<[T, T2, T3, T4, T5, T6]>;\n\nexport function zipStatic<T>(array: ObservableInput<T>[]): Observable<T[]>;\nexport function zipStatic<R>(array: ObservableInput<any>[]): Observable<R>;\nexport function zipStatic<T, R>(array: ObservableInput<T>[], project: (...values: Array<T>) => R): Observable<R>;\nexport function zipStatic<R>(array: ObservableInput<any>[], project: (...values: Array<any>) => R): Observable<R>;\n\nexport function zipStatic<T>(...observables: Array<ObservableInput<T>>): Observable<T[]>;\nexport function zipStatic<T, R>(...observables: Array<ObservableInput<T> | ((...values: Array<T>) => R)>): Observable<R>;\nexport function zipStatic<R>(...observables: Array<ObservableInput<any> | ((...values: Array<any>) => R)>): Observable<R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Combines multiple Observables to create an Observable whose values are calculated from the values, in order, of each\n * of its input Observables.\n *\n * If the latest parameter is a function, this function is used to compute the created value from the input values.\n * Otherwise, an array of the input values is returned.\n *\n * @example <caption>Combine age and name from different sources</caption>\n *\n * let age$ = Observable.of<number>(27, 25, 29);\n * let name$ = Observable.of<string>('Foo', 'Bar', 'Beer');\n * let isDev$ = Observable.of<boolean>(true, true, false);\n *\n * Observable\n *     .zip(age$,\n *          name$,\n *          isDev$,\n *          (age: number, name: string, isDev: boolean) => ({ age, name, isDev }))\n *     .subscribe(x => console.log(x));\n *\n * // outputs\n * // { age: 27, name: 'Foo', isDev: true }\n * // { age: 25, name: 'Bar', isDev: true }\n * // { age: 29, name: 'Beer', isDev: false }\n *\n * @param observables\n * @return {Observable<R>}\n * @static true\n * @name zip\n * @owner Observable\n */\nexport function zipStatic<T, R>(...observables: Array<ObservableInput<any> | ((...values: Array<any>) => R)>): Observable<R> {\n  const project = <((...ys: Array<any>) => R)> observables[observables.length - 1];\n  if (typeof project === 'function') {\n    observables.pop();\n  }\n  return new ArrayObservable(observables).lift(new ZipOperator(project));\n}\n\nexport class ZipOperator<T, R> implements Operator<T, R> {\n\n  project: (...values: Array<any>) => R;\n\n  constructor(project?: (...values: Array<any>) => R) {\n    this.project = project;\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new ZipSubscriber(subscriber, this.project));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class ZipSubscriber<T, R> extends Subscriber<T> {\n  private values: any;\n  private project: (...values: Array<any>) => R;\n  private iterators: LookAheadIterator<any>[] = [];\n  private active = 0;\n\n  constructor(destination: Subscriber<R>,\n              project?: (...values: Array<any>) => R,\n              values: any = Object.create(null)) {\n    super(destination);\n    this.project = (typeof project === 'function') ? project : null;\n    this.values = values;\n  }\n\n  protected _next(value: any) {\n    const iterators = this.iterators;\n    if (isArray(value)) {\n      iterators.push(new StaticArrayIterator(value));\n    } else if (typeof value[Symbol_iterator] === 'function') {\n      iterators.push(new StaticIterator(value[Symbol_iterator]()));\n    } else {\n      iterators.push(new ZipBufferIterator(this.destination, this, value));\n    }\n  }\n\n  protected _complete() {\n    const iterators = this.iterators;\n    const len = iterators.length;\n\n    if (len === 0) {\n      this.destination.complete();\n      return;\n    }\n\n    this.active = len;\n    for (let i = 0; i < len; i++) {\n      let iterator: ZipBufferIterator<any, any> = <any>iterators[i];\n      if (iterator.stillUnsubscribed) {\n        this.add(iterator.subscribe(iterator, i));\n      } else {\n        this.active--; // not an observable\n      }\n    }\n  }\n\n  notifyInactive() {\n    this.active--;\n    if (this.active === 0) {\n      this.destination.complete();\n    }\n  }\n\n  checkIterators() {\n    const iterators = this.iterators;\n    const len = iterators.length;\n    const destination = this.destination;\n\n    // abort if not all of them have values\n    for (let i = 0; i < len; i++) {\n      let iterator = iterators[i];\n      if (typeof iterator.hasValue === 'function' && !iterator.hasValue()) {\n        return;\n      }\n    }\n\n    let shouldComplete = false;\n    const args: any[] = [];\n    for (let i = 0; i < len; i++) {\n      let iterator = iterators[i];\n      let result = iterator.next();\n\n      // check to see if it's completed now that you've gotten\n      // the next value.\n      if (iterator.hasCompleted()) {\n        shouldComplete = true;\n      }\n\n      if (result.done) {\n        destination.complete();\n        return;\n      }\n\n      args.push(result.value);\n    }\n\n    if (this.project) {\n      this._tryProject(args);\n    } else {\n      destination.next(args);\n    }\n\n    if (shouldComplete) {\n      destination.complete();\n    }\n  }\n\n  protected _tryProject(args: any[]) {\n    let result: any;\n    try {\n      result = this.project.apply(this, args);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    this.destination.next(result);\n  }\n}\n\ninterface LookAheadIterator<T> extends Iterator<T> {\n  hasValue(): boolean;\n  hasCompleted(): boolean;\n}\n\nclass StaticIterator<T> implements LookAheadIterator<T> {\n  private nextResult: IteratorResult<T>;\n\n  constructor(private iterator: Iterator<T>) {\n    this.nextResult = iterator.next();\n  }\n\n  hasValue() {\n    return true;\n  }\n\n  next(): IteratorResult<T> {\n    const result = this.nextResult;\n    this.nextResult = this.iterator.next();\n    return result;\n  }\n\n  hasCompleted() {\n    const nextResult = this.nextResult;\n    return nextResult && nextResult.done;\n  }\n}\n\nclass StaticArrayIterator<T> implements LookAheadIterator<T> {\n  private index = 0;\n  private length = 0;\n\n  constructor(private array: T[]) {\n    this.length = array.length;\n  }\n\n  [Symbol_iterator]() {\n    return this;\n  }\n\n  next(value?: any): IteratorResult<T> {\n    const i = this.index++;\n    const array = this.array;\n    return i < this.length ? { value: array[i], done: false } : { value: null, done: true };\n  }\n\n  hasValue() {\n    return this.array.length > this.index;\n  }\n\n  hasCompleted() {\n    return this.array.length === this.index;\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass ZipBufferIterator<T, R> extends OuterSubscriber<T, R> implements LookAheadIterator<T> {\n  stillUnsubscribed = true;\n  buffer: T[] = [];\n  isComplete = false;\n\n  constructor(destination: PartialObserver<T>,\n              private parent: ZipSubscriber<T, R>,\n              private observable: Observable<T>) {\n    super(destination);\n  }\n\n  [Symbol_iterator]() {\n    return this;\n  }\n\n  // NOTE: there is actually a name collision here with Subscriber.next and Iterator.next\n  //    this is legit because `next()` will never be called by a subscription in this case.\n  next(): IteratorResult<T> {\n    const buffer = this.buffer;\n    if (buffer.length === 0 && this.isComplete) {\n      return { value: null, done: true };\n    } else {\n      return { value: buffer.shift(), done: false };\n    }\n  }\n\n  hasValue() {\n    return this.buffer.length > 0;\n  }\n\n  hasCompleted() {\n    return this.buffer.length === 0 && this.isComplete;\n  }\n\n  notifyComplete() {\n    if (this.buffer.length > 0) {\n      this.isComplete = true;\n      this.parent.notifyInactive();\n    } else {\n      this.destination.complete();\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: any,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this.buffer.push(innerValue);\n    this.parent.checkIterators();\n  }\n\n  subscribe(value: any, index: number) {\n    return subscribeToResult<any, any>(this, this.observable, this, index);\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable, ObservableInput } from '../Observable';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OperatorFunction } from '../interfaces';\n\n/* tslint:disable:max-line-length */\nexport function withLatestFrom<T, R>(project: (v1: T) => R): OperatorFunction<T, R>;\nexport function withLatestFrom<T, T2, R>(v2: ObservableInput<T2>, project: (v1: T, v2: T2) => R): OperatorFunction<T, R>;\nexport function withLatestFrom<T, T2, T3, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, project: (v1: T, v2: T2, v3: T3) => R): OperatorFunction<T, R>;\nexport function withLatestFrom<T, T2, T3, T4, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, project: (v1: T, v2: T2, v3: T3, v4: T4) => R): OperatorFunction<T, R>;\nexport function withLatestFrom<T, T2, T3, T4, T5, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, project: (v1: T, v2: T2, v3: T3, v4: T4, v5: T5) => R): OperatorFunction<T, R>;\nexport function withLatestFrom<T, T2, T3, T4, T5, T6, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>, project: (v1: T, v2: T2, v3: T3, v4: T4, v5: T5, v6: T6) => R): OperatorFunction<T, R> ;\nexport function withLatestFrom<T, T2>(v2: ObservableInput<T2>): OperatorFunction<T, [T, T2]>;\nexport function withLatestFrom<T, T2, T3>(v2: ObservableInput<T2>, v3: ObservableInput<T3>): OperatorFunction<T, [T, T2, T3]>;\nexport function withLatestFrom<T, T2, T3, T4>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>): OperatorFunction<T, [T, T2, T3, T4]>;\nexport function withLatestFrom<T, T2, T3, T4, T5>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>): OperatorFunction<T, [T, T2, T3, T4, T5]>;\nexport function withLatestFrom<T, T2, T3, T4, T5, T6>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>): OperatorFunction<T, [T, T2, T3, T4, T5, T6]> ;\nexport function withLatestFrom<T, R>(...observables: Array<ObservableInput<any> | ((...values: Array<any>) => R)>): OperatorFunction<T, R>;\nexport function withLatestFrom<T, R>(array: ObservableInput<any>[]): OperatorFunction<T, R>;\nexport function withLatestFrom<T, R>(array: ObservableInput<any>[], project: (...values: Array<any>) => R): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Combines the source Observable with other Observables to create an Observable\n * whose values are calculated from the latest values of each, only when the\n * source emits.\n *\n * <span class=\"informal\">Whenever the source Observable emits a value, it\n * computes a formula using that value plus the latest values from other input\n * Observables, then emits the output of that formula.</span>\n *\n * <img src=\"./img/withLatestFrom.png\" width=\"100%\">\n *\n * `withLatestFrom` combines each value from the source Observable (the\n * instance) with the latest values from the other input Observables only when\n * the source emits a value, optionally using a `project` function to determine\n * the value to be emitted on the output Observable. All input Observables must\n * emit at least one value before the output Observable will emit a value.\n *\n * @example <caption>On every click event, emit an array with the latest timer event plus the click event</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var timer = Rx.Observable.interval(1000);\n * var result = clicks.withLatestFrom(timer);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link combineLatest}\n *\n * @param {ObservableInput} other An input Observable to combine with the source\n * Observable. More than one input Observables may be given as argument.\n * @param {Function} [project] Projection function for combining values\n * together. Receives all values in order of the Observables passed, where the\n * first parameter is a value from the source Observable. (e.g.\n * `a.withLatestFrom(b, c, (a1, b1, c1) => a1 + b1 + c1)`). If this is not\n * passed, arrays will be emitted on the output Observable.\n * @return {Observable} An Observable of projected values from the most recent\n * values from each input Observable, or an array of the most recent values from\n * each input Observable.\n * @method withLatestFrom\n * @owner Observable\n */\nexport function withLatestFrom<T, R>(...args: Array<ObservableInput<any> | ((...values: Array<any>) => R)>): OperatorFunction<T, R> {\n  return (source: Observable<T>) => {\n    let project: any;\n    if (typeof args[args.length - 1] === 'function') {\n      project = args.pop();\n    }\n    const observables = <Observable<any>[]>args;\n    return source.lift(new WithLatestFromOperator(observables, project));\n  };\n}\n\nclass WithLatestFromOperator<T, R> implements Operator<T, R> {\n  constructor(private observables: Observable<any>[],\n              private project?: (...values: any[]) => Observable<R>) {\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new WithLatestFromSubscriber(subscriber, this.observables, this.project));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass WithLatestFromSubscriber<T, R> extends OuterSubscriber<T, R> {\n  private values: any[];\n  private toRespond: number[] = [];\n\n  constructor(destination: Subscriber<R>,\n              private observables: Observable<any>[],\n              private project?: (...values: any[]) => Observable<R>) {\n    super(destination);\n    const len = observables.length;\n    this.values = new Array(len);\n\n    for (let i = 0; i < len; i++) {\n      this.toRespond.push(i);\n    }\n\n    for (let i = 0; i < len; i++) {\n      let observable = observables[i];\n      this.add(subscribeToResult<T, R>(this, observable, <any>observable, i));\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this.values[outerIndex] = innerValue;\n    const toRespond = this.toRespond;\n    if (toRespond.length > 0) {\n      const found = toRespond.indexOf(outerIndex);\n      if (found !== -1) {\n        toRespond.splice(found, 1);\n      }\n    }\n  }\n\n  notifyComplete() {\n    // noop\n  }\n\n  protected _next(value: T) {\n    if (this.toRespond.length === 0) {\n      const args = [value, ...this.values];\n      if (this.project) {\n        this._tryProject(args);\n      } else {\n        this.destination.next(args);\n      }\n    }\n  }\n\n  private _tryProject(args: any[]) {\n    let result: any;\n    try {\n      result = this.project.apply(this, args);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    this.destination.next(result);\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { Subject } from '../Subject';\nimport { Subscription } from '../Subscription';\nimport { tryCatch } from '../util/tryCatch';\nimport { errorObject } from '../util/errorObject';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OperatorFunction } from '../interfaces';\n\n/**\n * Branch out the source Observable values as a nested Observable using a\n * factory function of closing Observables to determine when to start a new\n * window.\n *\n * <span class=\"informal\">It's like {@link bufferWhen}, but emits a nested\n * Observable instead of an array.</span>\n *\n * <img src=\"./img/windowWhen.png\" width=\"100%\">\n *\n * Returns an Observable that emits windows of items it collects from the source\n * Observable. The output Observable emits connected, non-overlapping windows.\n * It emits the current window and opens a new one whenever the Observable\n * produced by the specified `closingSelector` function emits an item. The first\n * window is opened immediately when subscribing to the output Observable.\n *\n * @example <caption>Emit only the first two clicks events in every window of [1-5] random seconds</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks\n *   .windowWhen(() => Rx.Observable.interval(1000 + Math.random() * 4000))\n *   .map(win => win.take(2)) // each window has at most 2 emissions\n *   .mergeAll(); // flatten the Observable-of-Observables\n * result.subscribe(x => console.log(x));\n *\n * @see {@link window}\n * @see {@link windowCount}\n * @see {@link windowTime}\n * @see {@link windowToggle}\n * @see {@link bufferWhen}\n *\n * @param {function(): Observable} closingSelector A function that takes no\n * arguments and returns an Observable that signals (on either `next` or\n * `complete`) when to close the previous window and start a new one.\n * @return {Observable<Observable<T>>} An observable of windows, which in turn\n * are Observables.\n * @method windowWhen\n * @owner Observable\n */\nexport function windowWhen<T>(closingSelector: () => Observable<any>): OperatorFunction<T, Observable<T>> {\n  return function windowWhenOperatorFunction(source: Observable<T>) {\n    return source.lift(new WindowOperator<T>(closingSelector));\n  };\n}\n\nclass WindowOperator<T> implements Operator<T, Observable<T>> {\n  constructor(private closingSelector: () => Observable<any>) {\n  }\n\n  call(subscriber: Subscriber<Observable<T>>, source: any): any {\n    return source.subscribe(new WindowSubscriber(subscriber, this.closingSelector));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass WindowSubscriber<T> extends OuterSubscriber<T, any> {\n  private window: Subject<T>;\n  private closingNotification: Subscription;\n\n  constructor(protected destination: Subscriber<Observable<T>>,\n              private closingSelector: () => Observable<any>) {\n    super(destination);\n    this.openWindow();\n  }\n\n  notifyNext(outerValue: T, innerValue: any,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, any>): void {\n    this.openWindow(innerSub);\n  }\n\n  notifyError(error: any, innerSub: InnerSubscriber<T, any>): void {\n    this._error(error);\n  }\n\n  notifyComplete(innerSub: InnerSubscriber<T, any>): void {\n    this.openWindow(innerSub);\n  }\n\n  protected _next(value: T): void {\n    this.window.next(value);\n  }\n\n  protected _error(err: any): void {\n    this.window.error(err);\n    this.destination.error(err);\n    this.unsubscribeClosingNotification();\n  }\n\n  protected _complete(): void {\n    this.window.complete();\n    this.destination.complete();\n    this.unsubscribeClosingNotification();\n  }\n\n  private unsubscribeClosingNotification(): void {\n    if (this.closingNotification) {\n      this.closingNotification.unsubscribe();\n    }\n  }\n\n  private openWindow(innerSub: InnerSubscriber<T, any> = null): void {\n    if (innerSub) {\n      this.remove(innerSub);\n      innerSub.unsubscribe();\n    }\n\n    const prevWindow = this.window;\n    if (prevWindow) {\n      prevWindow.complete();\n    }\n\n    const window = this.window = new Subject<T>();\n    this.destination.next(window);\n\n    const closingNotifier = tryCatch(this.closingSelector)();\n    if (closingNotifier === errorObject) {\n      const err = errorObject.e;\n      this.destination.error(err);\n      this.window.error(err);\n    } else {\n      this.add(this.closingNotification = subscribeToResult(this, closingNotifier));\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { Subject } from '../Subject';\nimport { Subscription } from '../Subscription';\nimport { tryCatch } from '../util/tryCatch';\nimport { errorObject } from '../util/errorObject';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OperatorFunction } from '../interfaces';\n\n/**\n * Branch out the source Observable values as a nested Observable starting from\n * an emission from `openings` and ending when the output of `closingSelector`\n * emits.\n *\n * <span class=\"informal\">It's like {@link bufferToggle}, but emits a nested\n * Observable instead of an array.</span>\n *\n * <img src=\"./img/windowToggle.png\" width=\"100%\">\n *\n * Returns an Observable that emits windows of items it collects from the source\n * Observable. The output Observable emits windows that contain those items\n * emitted by the source Observable between the time when the `openings`\n * Observable emits an item and when the Observable returned by\n * `closingSelector` emits an item.\n *\n * @example <caption>Every other second, emit the click events from the next 500ms</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var openings = Rx.Observable.interval(1000);\n * var result = clicks.windowToggle(openings, i =>\n *   i % 2 ? Rx.Observable.interval(500) : Rx.Observable.empty()\n * ).mergeAll();\n * result.subscribe(x => console.log(x));\n *\n * @see {@link window}\n * @see {@link windowCount}\n * @see {@link windowTime}\n * @see {@link windowWhen}\n * @see {@link bufferToggle}\n *\n * @param {Observable<O>} openings An observable of notifications to start new\n * windows.\n * @param {function(value: O): Observable} closingSelector A function that takes\n * the value emitted by the `openings` observable and returns an Observable,\n * which, when it emits (either `next` or `complete`), signals that the\n * associated window should complete.\n * @return {Observable<Observable<T>>} An observable of windows, which in turn\n * are Observables.\n * @method windowToggle\n * @owner Observable\n */\nexport function windowToggle<T, O>(openings: Observable<O>,\n                                   closingSelector: (openValue: O) => Observable<any>): OperatorFunction<T, Observable<T>> {\n  return (source: Observable<T>) => source.lift(new WindowToggleOperator<T, O>(openings, closingSelector));\n}\n\nclass WindowToggleOperator<T, O> implements Operator<T, Observable<T>> {\n\n  constructor(private openings: Observable<O>,\n              private closingSelector: (openValue: O) => Observable<any>) {\n  }\n\n  call(subscriber: Subscriber<Observable<T>>, source: any): any {\n    return source.subscribe(new WindowToggleSubscriber(\n      subscriber, this.openings, this.closingSelector\n    ));\n  }\n}\n\ninterface WindowContext<T> {\n  window: Subject<T>;\n  subscription: Subscription;\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass WindowToggleSubscriber<T, O> extends OuterSubscriber<T, any> {\n  private contexts: WindowContext<T>[] = [];\n  private openSubscription: Subscription;\n\n  constructor(destination: Subscriber<Observable<T>>,\n              private openings: Observable<O>,\n              private closingSelector: (openValue: O) => Observable<any>) {\n    super(destination);\n    this.add(this.openSubscription = subscribeToResult(this, openings, openings));\n  }\n\n  protected _next(value: T) {\n    const { contexts } = this;\n    if (contexts) {\n      const len = contexts.length;\n      for (let i = 0; i < len; i++) {\n        contexts[i].window.next(value);\n      }\n    }\n  }\n\n  protected _error(err: any) {\n\n    const { contexts } = this;\n    this.contexts = null;\n\n    if (contexts) {\n      const len = contexts.length;\n      let index = -1;\n\n      while (++index < len) {\n        const context = contexts[index];\n        context.window.error(err);\n        context.subscription.unsubscribe();\n      }\n    }\n\n    super._error(err);\n  }\n\n  protected _complete() {\n    const { contexts } = this;\n    this.contexts = null;\n    if (contexts) {\n      const len = contexts.length;\n      let index = -1;\n      while (++index < len) {\n        const context = contexts[index];\n        context.window.complete();\n        context.subscription.unsubscribe();\n      }\n    }\n    super._complete();\n  }\n\n  /** @deprecated internal use only */ _unsubscribe() {\n    const { contexts } = this;\n    this.contexts = null;\n    if (contexts) {\n      const len = contexts.length;\n      let index = -1;\n      while (++index < len) {\n        const context = contexts[index];\n        context.window.unsubscribe();\n        context.subscription.unsubscribe();\n      }\n    }\n  }\n\n  notifyNext(outerValue: any, innerValue: any,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, any>): void {\n\n    if (outerValue === this.openings) {\n\n      const { closingSelector } = this;\n      const closingNotifier = tryCatch(closingSelector)(innerValue);\n\n      if (closingNotifier === errorObject) {\n        return this.error(errorObject.e);\n      } else {\n        const window = new Subject<T>();\n        const subscription = new Subscription();\n        const context = { window, subscription };\n        this.contexts.push(context);\n        const innerSubscription = subscribeToResult(this, closingNotifier, context);\n\n        if (innerSubscription.closed) {\n          this.closeWindow(this.contexts.length - 1);\n        } else {\n          (<any> innerSubscription).context = context;\n          subscription.add(innerSubscription);\n        }\n\n        this.destination.next(window);\n\n      }\n    } else {\n      this.closeWindow(this.contexts.indexOf(outerValue));\n    }\n  }\n\n  notifyError(err: any): void {\n    this.error(err);\n  }\n\n  notifyComplete(inner: Subscription): void {\n    if (inner !== this.openSubscription) {\n      this.closeWindow(this.contexts.indexOf((<any> inner).context));\n    }\n  }\n\n  private closeWindow(index: number): void {\n    if (index === -1) {\n      return;\n    }\n\n    const { contexts } = this;\n    const context = contexts[index];\n    const { window, subscription } = context;\n    contexts.splice(index, 1);\n    window.complete();\n    subscription.unsubscribe();\n  }\n}\n","import { IScheduler } from '../Scheduler';\nimport { Action } from '../scheduler/Action';\nimport { Subject } from '../Subject';\nimport { Operator } from '../Operator';\nimport { async } from '../scheduler/async';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { Subscription } from '../Subscription';\nimport { isNumeric } from '../util/isNumeric';\nimport { isScheduler } from '../util/isScheduler';\nimport { OperatorFunction } from '../interfaces';\n\n/**\n * Branch out the source Observable values as a nested Observable periodically\n * in time.\n *\n * <span class=\"informal\">It's like {@link bufferTime}, but emits a nested\n * Observable instead of an array.</span>\n *\n * <img src=\"./img/windowTime.png\" width=\"100%\">\n *\n * Returns an Observable that emits windows of items it collects from the source\n * Observable. The output Observable starts a new window periodically, as\n * determined by the `windowCreationInterval` argument. It emits each window\n * after a fixed timespan, specified by the `windowTimeSpan` argument. When the\n * source Observable completes or encounters an error, the output Observable\n * emits the current window and propagates the notification from the source\n * Observable. If `windowCreationInterval` is not provided, the output\n * Observable starts a new window when the previous window of duration\n * `windowTimeSpan` completes. If `maxWindowCount` is provided, each window\n * will emit at most fixed number of values. Window will complete immediately\n * after emitting last value and next one still will open as specified by\n * `windowTimeSpan` and `windowCreationInterval` arguments.\n *\n * @example <caption>In every window of 1 second each, emit at most 2 click events</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.windowTime(1000)\n *   .map(win => win.take(2)) // each window has at most 2 emissions\n *   .mergeAll(); // flatten the Observable-of-Observables\n * result.subscribe(x => console.log(x));\n *\n * @example <caption>Every 5 seconds start a window 1 second long, and emit at most 2 click events per window</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.windowTime(1000, 5000)\n *   .map(win => win.take(2)) // each window has at most 2 emissions\n *   .mergeAll(); // flatten the Observable-of-Observables\n * result.subscribe(x => console.log(x));\n *\n * @example <caption>Same as example above but with maxWindowCount instead of take</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.windowTime(1000, 5000, 2) // each window has still at most 2 emissions\n *   .mergeAll(); // flatten the Observable-of-Observables\n * result.subscribe(x => console.log(x));\n\n * @see {@link window}\n * @see {@link windowCount}\n * @see {@link windowToggle}\n * @see {@link windowWhen}\n * @see {@link bufferTime}\n *\n * @param {number} windowTimeSpan The amount of time to fill each window.\n * @param {number} [windowCreationInterval] The interval at which to start new\n * windows.\n * @param {number} [maxWindowSize=Number.POSITIVE_INFINITY] Max number of\n * values each window can emit before completion.\n * @param {Scheduler} [scheduler=async] The scheduler on which to schedule the\n * intervals that determine window boundaries.\n * @return {Observable<Observable<T>>} An observable of windows, which in turn\n * are Observables.\n * @method windowTime\n * @owner Observable\n */\nexport function windowTime<T>(windowTimeSpan: number,\n                              scheduler?: IScheduler): OperatorFunction<T, Observable<T>>;\nexport function windowTime<T>(windowTimeSpan: number,\n                              windowCreationInterval: number,\n                              scheduler?: IScheduler): OperatorFunction<T, Observable<T>>;\nexport function windowTime<T>(windowTimeSpan: number,\n                              windowCreationInterval: number,\n                              maxWindowSize: number,\n                              scheduler?: IScheduler): OperatorFunction<T, Observable<T>>;\n\nexport function windowTime<T>(windowTimeSpan: number): OperatorFunction<T, Observable<T>> {\n  let scheduler: IScheduler = async;\n  let windowCreationInterval: number = null;\n  let maxWindowSize: number = Number.POSITIVE_INFINITY;\n\n  if (isScheduler(arguments[3])) {\n    scheduler = arguments[3];\n  }\n\n  if (isScheduler(arguments[2])) {\n    scheduler = arguments[2];\n  } else if (isNumeric(arguments[2])) {\n    maxWindowSize = arguments[2];\n  }\n\n  if (isScheduler(arguments[1])) {\n    scheduler = arguments[1];\n  } else if (isNumeric(arguments[1])) {\n    windowCreationInterval = arguments[1];\n  }\n\n  return function windowTimeOperatorFunction(source: Observable<T>) {\n    return source.lift(new WindowTimeOperator<T>(windowTimeSpan, windowCreationInterval, maxWindowSize, scheduler));\n  };\n}\n\nclass WindowTimeOperator<T> implements Operator<T, Observable<T>> {\n\n  constructor(private windowTimeSpan: number,\n              private windowCreationInterval: number | null,\n              private maxWindowSize: number,\n              private scheduler: IScheduler) {\n  }\n\n  call(subscriber: Subscriber<Observable<T>>, source: any): any {\n    return source.subscribe(new WindowTimeSubscriber(\n      subscriber, this.windowTimeSpan, this.windowCreationInterval, this.maxWindowSize, this.scheduler\n    ));\n  }\n}\n\ninterface CreationState<T> {\n  windowTimeSpan: number;\n  windowCreationInterval: number;\n  subscriber: WindowTimeSubscriber<T>;\n  scheduler: IScheduler;\n}\n\ninterface TimeSpanOnlyState<T> {\n    window: CountedSubject<T>;\n    windowTimeSpan: number;\n    subscriber: WindowTimeSubscriber<T>;\n  }\n\ninterface CloseWindowContext<T> {\n  action: Action<CreationState<T>>;\n  subscription: Subscription;\n}\n\ninterface CloseState<T> {\n  subscriber: WindowTimeSubscriber<T>;\n  window: CountedSubject<T>;\n  context: CloseWindowContext<T>;\n}\n\nclass CountedSubject<T> extends Subject<T> {\n  private _numberOfNextedValues: number = 0;\n\n  next(value?: T): void {\n    this._numberOfNextedValues++;\n    super.next(value);\n  }\n\n  get numberOfNextedValues(): number {\n    return this._numberOfNextedValues;\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass WindowTimeSubscriber<T> extends Subscriber<T> {\n  private windows: CountedSubject<T>[] = [];\n\n  constructor(protected destination: Subscriber<Observable<T>>,\n              private windowTimeSpan: number,\n              private windowCreationInterval: number | null,\n              private maxWindowSize: number,\n              private scheduler: IScheduler) {\n    super(destination);\n\n    const window = this.openWindow();\n    if (windowCreationInterval !== null && windowCreationInterval >= 0) {\n      const closeState: CloseState<T> = { subscriber: this, window, context: <any>null };\n      const creationState: CreationState<T> = { windowTimeSpan, windowCreationInterval, subscriber: this, scheduler };\n      this.add(scheduler.schedule(dispatchWindowClose, windowTimeSpan, closeState));\n      this.add(scheduler.schedule(dispatchWindowCreation, windowCreationInterval, creationState));\n    } else {\n      const timeSpanOnlyState: TimeSpanOnlyState<T> = { subscriber: this, window, windowTimeSpan };\n      this.add(scheduler.schedule(dispatchWindowTimeSpanOnly, windowTimeSpan, timeSpanOnlyState));\n    }\n  }\n\n  protected _next(value: T): void {\n    const windows = this.windows;\n    const len = windows.length;\n    for (let i = 0; i < len; i++) {\n      const window = windows[i];\n      if (!window.closed) {\n        window.next(value);\n        if (window.numberOfNextedValues >= this.maxWindowSize) {\n          this.closeWindow(window);\n        }\n      }\n    }\n  }\n\n  protected _error(err: any): void {\n    const windows = this.windows;\n    while (windows.length > 0) {\n      windows.shift().error(err);\n    }\n    this.destination.error(err);\n  }\n\n  protected _complete(): void {\n    const windows = this.windows;\n    while (windows.length > 0) {\n      const window = windows.shift();\n      if (!window.closed) {\n        window.complete();\n      }\n    }\n    this.destination.complete();\n  }\n\n  public openWindow(): CountedSubject<T> {\n    const window = new CountedSubject<T>();\n    this.windows.push(window);\n    const destination = this.destination;\n    destination.next(window);\n    return window;\n  }\n\n  public closeWindow(window: CountedSubject<T>): void {\n    window.complete();\n    const windows = this.windows;\n    windows.splice(windows.indexOf(window), 1);\n  }\n}\n\nfunction dispatchWindowTimeSpanOnly<T>(this: Action<TimeSpanOnlyState<T>>, state: TimeSpanOnlyState<T>): void {\n  const { subscriber, windowTimeSpan, window } = state;\n  if (window) {\n    subscriber.closeWindow(window);\n  }\n  state.window = subscriber.openWindow();\n  this.schedule(state, windowTimeSpan);\n}\n\nfunction dispatchWindowCreation<T>(this: Action<CreationState<T>>, state: CreationState<T>): void {\n  const { windowTimeSpan, subscriber, scheduler, windowCreationInterval } = state;\n  const window = subscriber.openWindow();\n  const action = this;\n  let context: CloseWindowContext<T> = { action, subscription: <any>null };\n  const timeSpanState: CloseState<T> = { subscriber, window, context };\n  context.subscription = scheduler.schedule(dispatchWindowClose, windowTimeSpan, timeSpanState);\n  action.add(context.subscription);\n  action.schedule(state, windowCreationInterval);\n}\n\nfunction dispatchWindowClose<T>(state: CloseState<T>): void {\n  const { subscriber, window, context } = state;\n  if (context && context.action && context.subscription) {\n    context.action.remove(context.subscription);\n  }\n  subscriber.closeWindow(window);\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { Subject } from '../Subject';\nimport { OperatorFunction } from '../interfaces';\n\n/**\n * Branch out the source Observable values as a nested Observable with each\n * nested Observable emitting at most `windowSize` values.\n *\n * <span class=\"informal\">It's like {@link bufferCount}, but emits a nested\n * Observable instead of an array.</span>\n *\n * <img src=\"./img/windowCount.png\" width=\"100%\">\n *\n * Returns an Observable that emits windows of items it collects from the source\n * Observable. The output Observable emits windows every `startWindowEvery`\n * items, each containing no more than `windowSize` items. When the source\n * Observable completes or encounters an error, the output Observable emits\n * the current window and propagates the notification from the source\n * Observable. If `startWindowEvery` is not provided, then new windows are\n * started immediately at the start of the source and when each window completes\n * with size `windowSize`.\n *\n * @example <caption>Ignore every 3rd click event, starting from the first one</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.windowCount(3)\n *   .map(win => win.skip(1)) // skip first of every 3 clicks\n *   .mergeAll(); // flatten the Observable-of-Observables\n * result.subscribe(x => console.log(x));\n *\n * @example <caption>Ignore every 3rd click event, starting from the third one</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.windowCount(2, 3)\n *   .mergeAll(); // flatten the Observable-of-Observables\n * result.subscribe(x => console.log(x));\n *\n * @see {@link window}\n * @see {@link windowTime}\n * @see {@link windowToggle}\n * @see {@link windowWhen}\n * @see {@link bufferCount}\n *\n * @param {number} windowSize The maximum number of values emitted by each\n * window.\n * @param {number} [startWindowEvery] Interval at which to start a new window.\n * For example if `startWindowEvery` is `2`, then a new window will be started\n * on every other value from the source. A new window is started at the\n * beginning of the source by default.\n * @return {Observable<Observable<T>>} An Observable of windows, which in turn\n * are Observable of values.\n * @method windowCount\n * @owner Observable\n */\nexport function windowCount<T>(windowSize: number,\n                               startWindowEvery: number = 0): OperatorFunction<T, Observable<T>> {\n  return function windowCountOperatorFunction(source: Observable<T>) {\n    return source.lift(new WindowCountOperator<T>(windowSize, startWindowEvery));\n  };\n}\n\nclass WindowCountOperator<T> implements Operator<T, Observable<T>> {\n\n  constructor(private windowSize: number,\n              private startWindowEvery: number) {\n  }\n\n  call(subscriber: Subscriber<Observable<T>>, source: any): any {\n    return source.subscribe(new WindowCountSubscriber(subscriber, this.windowSize, this.startWindowEvery));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass WindowCountSubscriber<T> extends Subscriber<T> {\n  private windows: Subject<T>[] = [ new Subject<T>() ];\n  private count: number = 0;\n\n  constructor(protected destination: Subscriber<Observable<T>>,\n              private windowSize: number,\n              private startWindowEvery: number) {\n    super(destination);\n    destination.next(this.windows[0]);\n  }\n\n  protected _next(value: T) {\n    const startWindowEvery = (this.startWindowEvery > 0) ? this.startWindowEvery : this.windowSize;\n    const destination = this.destination;\n    const windowSize = this.windowSize;\n    const windows = this.windows;\n    const len = windows.length;\n\n    for (let i = 0; i < len && !this.closed; i++) {\n      windows[i].next(value);\n    }\n    const c = this.count - windowSize + 1;\n    if (c >= 0 && c % startWindowEvery === 0 && !this.closed) {\n      windows.shift().complete();\n    }\n    if (++this.count % startWindowEvery === 0 && !this.closed) {\n      const window = new Subject<T>();\n      windows.push(window);\n      destination.next(window);\n    }\n  }\n\n  protected _error(err: any) {\n    const windows = this.windows;\n    if (windows) {\n      while (windows.length > 0 && !this.closed) {\n        windows.shift().error(err);\n      }\n    }\n    this.destination.error(err);\n  }\n\n  protected _complete() {\n    const windows = this.windows;\n    if (windows) {\n      while (windows.length > 0 && !this.closed) {\n        windows.shift().complete();\n      }\n    }\n    this.destination.complete();\n  }\n\n  /** @deprecated internal use only */ _unsubscribe() {\n    this.count = 0;\n    this.windows = null;\n  }\n}\n","import { Observable } from '../Observable';\nimport { OperatorFunction } from '../interfaces';\nimport { Subject } from '../Subject';\nimport { Subscriber } from '../Subscriber';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { Operator } from '../Operator';\n\n/**\n * Branch out the source Observable values as a nested Observable whenever\n * `windowBoundaries` emits.\n *\n * <span class=\"informal\">It's like {@link buffer}, but emits a nested Observable\n * instead of an array.</span>\n *\n * <img src=\"./img/window.png\" width=\"100%\">\n *\n * Returns an Observable that emits windows of items it collects from the source\n * Observable. The output Observable emits connected, non-overlapping\n * windows. It emits the current window and opens a new one whenever the\n * Observable `windowBoundaries` emits an item. Because each window is an\n * Observable, the output is a higher-order Observable.\n *\n * @example <caption>In every window of 1 second each, emit at most 2 click events</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var interval = Rx.Observable.interval(1000);\n * var result = clicks.window(interval)\n *   .map(win => win.take(2)) // each window has at most 2 emissions\n *   .mergeAll(); // flatten the Observable-of-Observables\n * result.subscribe(x => console.log(x));\n *\n * @see {@link windowCount}\n * @see {@link windowTime}\n * @see {@link windowToggle}\n * @see {@link windowWhen}\n * @see {@link buffer}\n *\n * @param {Observable<any>} windowBoundaries An Observable that completes the\n * previous window and starts a new window.\n * @return {Observable<Observable<T>>} An Observable of windows, which are\n * Observables emitting values of the source Observable.\n * @method window\n * @owner Observable\n */\nexport function window<T>(windowBoundaries: Observable<any>): OperatorFunction<T, Observable<T>> {\n  return function windowOperatorFunction(source: Observable<T>) {\n    return source.lift(new WindowOperator(windowBoundaries));\n  };\n}\n\nclass WindowOperator<T> implements Operator<T, Observable<T>> {\n\n  constructor(private windowBoundaries: Observable<any>) {\n  }\n\n  call(subscriber: Subscriber<Observable<T>>, source: any): any {\n    const windowSubscriber = new WindowSubscriber(subscriber);\n    const sourceSubscription = source.subscribe(windowSubscriber);\n    if (!sourceSubscription.closed) {\n      windowSubscriber.add(subscribeToResult(windowSubscriber, this.windowBoundaries));\n    }\n    return sourceSubscription;\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass WindowSubscriber<T> extends OuterSubscriber<T, any> {\n\n  private window: Subject<T> = new Subject<T>();\n\n  constructor(destination: Subscriber<Observable<T>>) {\n    super(destination);\n    destination.next(this.window);\n  }\n\n  notifyNext(outerValue: T, innerValue: any,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, any>): void {\n    this.openWindow();\n  }\n\n  notifyError(error: any, innerSub: InnerSubscriber<T, any>): void {\n    this._error(error);\n  }\n\n  notifyComplete(innerSub: InnerSubscriber<T, any>): void {\n    this._complete();\n  }\n\n  protected _next(value: T): void {\n    this.window.next(value);\n  }\n\n  protected _error(err: any): void {\n    this.window.error(err);\n    this.destination.error(err);\n  }\n\n  protected _complete(): void {\n    this.window.complete();\n    this.destination.complete();\n  }\n\n  /** @deprecated internal use only */ _unsubscribe() {\n    this.window = null;\n  }\n\n  private openWindow(): void  {\n    const prevWindow = this.window;\n    if (prevWindow) {\n      prevWindow.complete();\n    }\n    const destination = this.destination;\n    const newWindow = this.window = new Subject<T>();\n    destination.next(newWindow);\n  }\n}\n","import { Action } from '../scheduler/Action';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { IScheduler } from '../Scheduler';\nimport { async } from '../scheduler/async';\nimport { TeardownLogic } from '../Subscription';\nimport { Observable, ObservableInput } from '../Observable';\nimport { isDate } from '../util/isDate';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OperatorFunction, MonoTypeOperatorFunction } from '../interfaces';\n\n/* tslint:disable:max-line-length */\nexport function timeoutWith<T>(due: number | Date, withObservable: ObservableInput<T>, scheduler?: IScheduler): MonoTypeOperatorFunction<T>;\nexport function timeoutWith<T, R>(due: number | Date, withObservable: ObservableInput<R>, scheduler?: IScheduler): OperatorFunction<T, T | R>;\n/* tslint:enable:max-line-length */\n\n/**\n *\n * Errors if Observable does not emit a value in given time span, in case of which\n * subscribes to the second Observable.\n *\n * <span class=\"informal\">It's a version of `timeout` operator that let's you specify fallback Observable.</span>\n *\n * <img src=\"./img/timeoutWith.png\" width=\"100%\">\n *\n * `timeoutWith` is a variation of `timeout` operator. It behaves exactly the same,\n * still accepting as a first argument either a number or a Date, which control - respectively -\n * when values of source Observable should be emitted or when it should complete.\n *\n * The only difference is that it accepts a second, required parameter. This parameter\n * should be an Observable which will be subscribed when source Observable fails any timeout check.\n * So whenever regular `timeout` would emit an error, `timeoutWith` will instead start re-emitting\n * values from second Observable. Note that this fallback Observable is not checked for timeouts\n * itself, so it can emit values and complete at arbitrary points in time. From the moment of a second\n * subscription, Observable returned from `timeoutWith` simply mirrors fallback stream. When that\n * stream completes, it completes as well.\n *\n * Scheduler, which in case of `timeout` is provided as as second argument, can be still provided\n * here - as a third, optional parameter. It still is used to schedule timeout checks and -\n * as a consequence - when second Observable will be subscribed, since subscription happens\n * immediately after failing check.\n *\n * @example <caption>Add fallback observable</caption>\n * const seconds = Rx.Observable.interval(1000);\n * const minutes = Rx.Observable.interval(60 * 1000);\n *\n * seconds.timeoutWith(900, minutes)\n *     .subscribe(\n *         value => console.log(value), // After 900ms, will start emitting `minutes`,\n *                                      // since first value of `seconds` will not arrive fast enough.\n *         err => console.log(err) // Would be called after 900ms in case of `timeout`,\n *                                 // but here will never be called.\n *     );\n *\n * @param {number|Date} due Number specifying period within which Observable must emit values\n *                          or Date specifying before when Observable should complete\n * @param {Observable<T>} withObservable Observable which will be subscribed if source fails timeout check.\n * @param {Scheduler} [scheduler] Scheduler controlling when timeout checks occur.\n * @return {Observable<T>} Observable that mirrors behaviour of source or, when timeout check fails, of an Observable\n *                          passed as a second parameter.\n * @method timeoutWith\n * @owner Observable\n */\nexport function timeoutWith<T, R>(due: number | Date,\n                                  withObservable: ObservableInput<R>,\n                                  scheduler: IScheduler = async): OperatorFunction<T, T | R> {\n  return (source: Observable<T>) => {\n    let absoluteTimeout = isDate(due);\n    let waitFor = absoluteTimeout ? (+due - scheduler.now()) : Math.abs(<number>due);\n    return source.lift(new TimeoutWithOperator(waitFor, absoluteTimeout, withObservable, scheduler));\n  };\n}\n\nclass TimeoutWithOperator<T> implements Operator<T, T> {\n  constructor(private waitFor: number,\n              private absoluteTimeout: boolean,\n              private withObservable: ObservableInput<any>,\n              private scheduler: IScheduler) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new TimeoutWithSubscriber(\n      subscriber, this.absoluteTimeout, this.waitFor, this.withObservable, this.scheduler\n    ));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass TimeoutWithSubscriber<T, R> extends OuterSubscriber<T, R> {\n\n  private action: Action<TimeoutWithSubscriber<T, R>> = null;\n\n  constructor(destination: Subscriber<T>,\n              private absoluteTimeout: boolean,\n              private waitFor: number,\n              private withObservable: ObservableInput<any>,\n              private scheduler: IScheduler) {\n    super(destination);\n    this.scheduleTimeout();\n  }\n\n  private static dispatchTimeout<T, R>(subscriber: TimeoutWithSubscriber<T, R>): void {\n    const { withObservable } = subscriber;\n    (<any> subscriber)._unsubscribeAndRecycle();\n    subscriber.add(subscribeToResult(subscriber, withObservable));\n  }\n\n  private scheduleTimeout(): void {\n    const { action } = this;\n    if (action) {\n      // Recycle the action if we've already scheduled one. All the production\n      // Scheduler Actions mutate their state/delay time and return themeselves.\n      // VirtualActions are immutable, so they create and return a clone. In this\n      // case, we need to set the action reference to the most recent VirtualAction,\n      // to ensure that's the one we clone from next time.\n      this.action = (<Action<TimeoutWithSubscriber<T, R>>> action.schedule(this, this.waitFor));\n    } else {\n      this.add(this.action = (<Action<TimeoutWithSubscriber<T, R>>> this.scheduler.schedule(\n        TimeoutWithSubscriber.dispatchTimeout, this.waitFor, this\n      )));\n    }\n  }\n\n  protected _next(value: T): void {\n    if (!this.absoluteTimeout) {\n      this.scheduleTimeout();\n    }\n    super._next(value);\n  }\n\n  /** @deprecated internal use only */ _unsubscribe() {\n    this.action = null;\n    this.scheduler = null;\n    this.withObservable = null;\n  }\n}\n","import { Action } from '../scheduler/Action';\nimport { async } from '../scheduler/async';\nimport { isDate } from '../util/isDate';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { IScheduler } from '../Scheduler';\nimport { Observable } from '../Observable';\nimport { TeardownLogic } from '../Subscription';\nimport { TimeoutError } from '../util/TimeoutError';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n *\n * Errors if Observable does not emit a value in given time span.\n *\n * <span class=\"informal\">Timeouts on Observable that doesn't emit values fast enough.</span>\n *\n * <img src=\"./img/timeout.png\" width=\"100%\">\n *\n * `timeout` operator accepts as an argument either a number or a Date.\n *\n * If number was provided, it returns an Observable that behaves like a source\n * Observable, unless there is a period of time where there is no value emitted.\n * So if you provide `100` as argument and first value comes after 50ms from\n * the moment of subscription, this value will be simply re-emitted by the resulting\n * Observable. If however after that 100ms passes without a second value being emitted,\n * stream will end with an error and source Observable will be unsubscribed.\n * These checks are performed throughout whole lifecycle of Observable - from the moment\n * it was subscribed to, until it completes or errors itself. Thus every value must be\n * emitted within specified period since previous value.\n *\n * If provided argument was Date, returned Observable behaves differently. It throws\n * if Observable did not complete before provided Date. This means that periods between\n * emission of particular values do not matter in this case. If Observable did not complete\n * before provided Date, source Observable will be unsubscribed. Other than that, resulting\n * stream behaves just as source Observable.\n *\n * `timeout` accepts also a Scheduler as a second parameter. It is used to schedule moment (or moments)\n * when returned Observable will check if source stream emitted value or completed.\n *\n * @example <caption>Check if ticks are emitted within certain timespan</caption>\n * const seconds = Rx.Observable.interval(1000);\n *\n * seconds.timeout(1100) // Let's use bigger timespan to be safe,\n *                       // since `interval` might fire a bit later then scheduled.\n * .subscribe(\n *     value => console.log(value), // Will emit numbers just as regular `interval` would.\n *     err => console.log(err) // Will never be called.\n * );\n *\n * seconds.timeout(900).subscribe(\n *     value => console.log(value), // Will never be called.\n *     err => console.log(err) // Will emit error before even first value is emitted,\n *                             // since it did not arrive within 900ms period.\n * );\n *\n * @example <caption>Use Date to check if Observable completed</caption>\n * const seconds = Rx.Observable.interval(1000);\n *\n * seconds.timeout(new Date(\"December 17, 2020 03:24:00\"))\n * .subscribe(\n *     value => console.log(value), // Will emit values as regular `interval` would\n *                                  // until December 17, 2020 at 03:24:00.\n *     err => console.log(err) // On December 17, 2020 at 03:24:00 it will emit an error,\n *                             // since Observable did not complete by then.\n * );\n *\n * @see {@link timeoutWith}\n *\n * @param {number|Date} due Number specifying period within which Observable must emit values\n *                          or Date specifying before when Observable should complete\n * @param {Scheduler} [scheduler] Scheduler controlling when timeout checks occur.\n * @return {Observable<T>} Observable that mirrors behaviour of source, unless timeout checks fail.\n * @method timeout\n * @owner Observable\n */\nexport function timeout<T>(due: number | Date,\n                           scheduler: IScheduler = async): MonoTypeOperatorFunction<T> {\n  const absoluteTimeout = isDate(due);\n  const waitFor = absoluteTimeout ? (+due - scheduler.now()) : Math.abs(<number>due);\n  return (source: Observable<T>) => source.lift(new TimeoutOperator(waitFor, absoluteTimeout, scheduler, new TimeoutError()));\n}\n\nclass TimeoutOperator<T> implements Operator<T, T> {\n  constructor(private waitFor: number,\n              private absoluteTimeout: boolean,\n              private scheduler: IScheduler,\n              private errorInstance: TimeoutError) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new TimeoutSubscriber<T>(\n      subscriber, this.absoluteTimeout, this.waitFor, this.scheduler, this.errorInstance\n    ));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass TimeoutSubscriber<T> extends Subscriber<T> {\n\n  private action: Action<TimeoutSubscriber<T>> = null;\n\n  constructor(destination: Subscriber<T>,\n              private absoluteTimeout: boolean,\n              private waitFor: number,\n              private scheduler: IScheduler,\n              private errorInstance: TimeoutError) {\n    super(destination);\n    this.scheduleTimeout();\n  }\n\n  private static dispatchTimeout<T>(subscriber: TimeoutSubscriber<T>): void {\n    subscriber.error(subscriber.errorInstance);\n  }\n\n  private scheduleTimeout(): void {\n    const { action } = this;\n    if (action) {\n      // Recycle the action if we've already scheduled one. All the production\n      // Scheduler Actions mutate their state/delay time and return themeselves.\n      // VirtualActions are immutable, so they create and return a clone. In this\n      // case, we need to set the action reference to the most recent VirtualAction,\n      // to ensure that's the one we clone from next time.\n      this.action = (<Action<TimeoutSubscriber<T>>> action.schedule(this, this.waitFor));\n    } else {\n      this.add(this.action = (<Action<TimeoutSubscriber<T>>> this.scheduler.schedule(\n        TimeoutSubscriber.dispatchTimeout, this.waitFor, this\n      )));\n    }\n  }\n\n  protected _next(value: T): void {\n    if (!this.absoluteTimeout) {\n      this.scheduleTimeout();\n    }\n    super._next(value);\n  }\n\n  /** @deprecated internal use only */ _unsubscribe() {\n    this.action = null;\n    this.scheduler = null;\n    this.errorInstance = null;\n  }\n}\n","/**\r\n * An error thrown when duetime elapses.\r\n *\r\n * @see {@link timeout}\r\n *\r\n * @class TimeoutError\r\n */\r\nexport class TimeoutError extends Error {\r\n  constructor() {\r\n    const err: any = super('Timeout has occurred');\r\n    (<any> this).name = err.name = 'TimeoutError';\r\n    (<any> this).stack = err.stack;\r\n    (<any> this).message = err.message;\r\n  }\r\n}\r\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { IScheduler } from '../Scheduler';\nimport { async } from '../scheduler/async';\nimport { OperatorFunction } from '../interfaces';\n\nexport function timeInterval<T>(scheduler: IScheduler = async): OperatorFunction<T, TimeInterval<T>> {\n  return (source: Observable<T>) => source.lift(new TimeIntervalOperator(scheduler));\n}\n\nexport class TimeInterval<T> {\n  constructor(public value: T, public interval: number) {\n\n  }\n};\n\nclass TimeIntervalOperator<T> implements Operator<T, TimeInterval<T>> {\n  constructor(private scheduler: IScheduler) {\n\n  }\n\n  call(observer: Subscriber<TimeInterval<T>>, source: any): any {\n    return source.subscribe(new TimeIntervalSubscriber(observer, this.scheduler));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass TimeIntervalSubscriber<T> extends Subscriber<T> {\n  private lastTime: number = 0;\n\n  constructor(destination: Subscriber<TimeInterval<T>>, private scheduler: IScheduler) {\n    super(destination);\n\n    this.lastTime = scheduler.now();\n  }\n\n  protected _next(value: T) {\n    let now = this.scheduler.now();\n    let span = now - this.lastTime;\n    this.lastTime = now;\n\n    this.destination.next(new TimeInterval(value, span));\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { IScheduler } from '../Scheduler';\nimport { Subscription, TeardownLogic } from '../Subscription';\nimport { async } from '../scheduler/async';\nimport { Observable } from '../Observable';\nimport { ThrottleConfig, defaultThrottleConfig } from './throttle';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Emits a value from the source Observable, then ignores subsequent source\n * values for `duration` milliseconds, then repeats this process.\n *\n * <span class=\"informal\">Lets a value pass, then ignores source values for the\n * next `duration` milliseconds.</span>\n *\n * <img src=\"./img/throttleTime.png\" width=\"100%\">\n *\n * `throttleTime` emits the source Observable values on the output Observable\n * when its internal timer is disabled, and ignores source values when the timer\n * is enabled. Initially, the timer is disabled. As soon as the first source\n * value arrives, it is forwarded to the output Observable, and then the timer\n * is enabled. After `duration` milliseconds (or the time unit determined\n * internally by the optional `scheduler`) has passed, the timer is disabled,\n * and this process repeats for the next source value. Optionally takes a\n * {@link IScheduler} for managing timers.\n *\n * @example <caption>Emit clicks at a rate of at most one click per second</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.throttleTime(1000);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link auditTime}\n * @see {@link debounceTime}\n * @see {@link delay}\n * @see {@link sampleTime}\n * @see {@link throttle}\n *\n * @param {number} duration Time to wait before emitting another value after\n * emitting the last value, measured in milliseconds or the time unit determined\n * internally by the optional `scheduler`.\n * @param {Scheduler} [scheduler=async] The {@link IScheduler} to use for\n * managing the timers that handle the throttling.\n * @return {Observable<T>} An Observable that performs the throttle operation to\n * limit the rate of emissions from the source.\n * @method throttleTime\n * @owner Observable\n */\nexport function throttleTime<T>(duration: number,\n                                scheduler: IScheduler = async,\n                                config: ThrottleConfig = defaultThrottleConfig): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new ThrottleTimeOperator(duration, scheduler, config.leading, config.trailing));\n}\n\nclass ThrottleTimeOperator<T> implements Operator<T, T> {\n  constructor(private duration: number,\n              private scheduler: IScheduler,\n              private leading: boolean,\n              private trailing: boolean) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(\n      new ThrottleTimeSubscriber(subscriber, this.duration, this.scheduler, this.leading, this.trailing)\n    );\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass ThrottleTimeSubscriber<T> extends Subscriber<T> {\n  private throttled: Subscription;\n  private _hasTrailingValue: boolean = false;\n  private _trailingValue: T = null;\n\n  constructor(destination: Subscriber<T>,\n              private duration: number,\n              private scheduler: IScheduler,\n              private leading: boolean,\n              private trailing: boolean) {\n    super(destination);\n  }\n\n  protected _next(value: T) {\n    if (this.throttled) {\n      if (this.trailing) {\n        this._trailingValue = value;\n        this._hasTrailingValue = true;\n      }\n    } else {\n      this.add(this.throttled = this.scheduler.schedule(dispatchNext, this.duration, { subscriber: this }));\n      if (this.leading) {\n        this.destination.next(value);\n      }\n    }\n  }\n\n  clearThrottle() {\n    const throttled = this.throttled;\n    if (throttled) {\n      if (this.trailing && this._hasTrailingValue) {\n        this.destination.next(this._trailingValue);\n        this._trailingValue = null;\n        this._hasTrailingValue = false;\n      }\n      throttled.unsubscribe();\n      this.remove(throttled);\n      this.throttled = null;\n    }\n  }\n}\n\ninterface DispatchArg<T> {\n  subscriber: ThrottleTimeSubscriber<T>;\n}\n\nfunction dispatchNext<T>(arg: DispatchArg<T>) {\n  const { subscriber } = arg;\n  subscriber.clearThrottle();\n}\n","import { Operator } from '../Operator';\nimport { Observable, SubscribableOrPromise } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription, TeardownLogic } from '../Subscription';\n\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\nexport interface ThrottleConfig {\n  leading?: boolean;\n  trailing?: boolean;\n}\n\nexport const defaultThrottleConfig: ThrottleConfig = {\n  leading: true,\n  trailing: false\n};\n\n/**\n * Emits a value from the source Observable, then ignores subsequent source\n * values for a duration determined by another Observable, then repeats this\n * process.\n *\n * <span class=\"informal\">It's like {@link throttleTime}, but the silencing\n * duration is determined by a second Observable.</span>\n *\n * <img src=\"./img/throttle.png\" width=\"100%\">\n *\n * `throttle` emits the source Observable values on the output Observable\n * when its internal timer is disabled, and ignores source values when the timer\n * is enabled. Initially, the timer is disabled. As soon as the first source\n * value arrives, it is forwarded to the output Observable, and then the timer\n * is enabled by calling the `durationSelector` function with the source value,\n * which returns the \"duration\" Observable. When the duration Observable emits a\n * value or completes, the timer is disabled, and this process repeats for the\n * next source value.\n *\n * @example <caption>Emit clicks at a rate of at most one click per second</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.throttle(ev => Rx.Observable.interval(1000));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link audit}\n * @see {@link debounce}\n * @see {@link delayWhen}\n * @see {@link sample}\n * @see {@link throttleTime}\n *\n * @param {function(value: T): SubscribableOrPromise} durationSelector A function\n * that receives a value from the source Observable, for computing the silencing\n * duration for each source value, returned as an Observable or a Promise.\n * @param {Object} config a configuration object to define `leading` and `trailing` behavior. Defaults\n * to `{ leading: true, trailing: false }`.\n * @return {Observable<T>} An Observable that performs the throttle operation to\n * limit the rate of emissions from the source.\n * @method throttle\n * @owner Observable\n */\nexport function throttle<T>(durationSelector: (value: T) => SubscribableOrPromise<number>,\n                            config: ThrottleConfig = defaultThrottleConfig): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new ThrottleOperator(durationSelector, config.leading, config.trailing));\n}\n\nclass ThrottleOperator<T> implements Operator<T, T> {\n  constructor(private durationSelector: (value: T) => SubscribableOrPromise<number>,\n              private leading: boolean,\n              private trailing: boolean) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(\n      new ThrottleSubscriber(subscriber, this.durationSelector, this.leading, this.trailing)\n    );\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc\n * @ignore\n * @extends {Ignored}\n */\nclass ThrottleSubscriber<T, R> extends OuterSubscriber<T, R> {\n  private throttled: Subscription;\n  private _trailingValue: T;\n  private _hasTrailingValue = false;\n\n  constructor(protected destination: Subscriber<T>,\n              private durationSelector: (value: T) => SubscribableOrPromise<number>,\n              private _leading: boolean,\n              private _trailing: boolean) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    if (this.throttled) {\n      if (this._trailing) {\n        this._hasTrailingValue = true;\n        this._trailingValue = value;\n      }\n    } else {\n      const duration = this.tryDurationSelector(value);\n      if (duration) {\n        this.add(this.throttled = subscribeToResult(this, duration));\n      }\n      if (this._leading) {\n        this.destination.next(value);\n        if (this._trailing) {\n          this._hasTrailingValue = true;\n          this._trailingValue = value;\n        }\n      }\n    }\n  }\n\n  private tryDurationSelector(value: T): SubscribableOrPromise<any> {\n    try {\n      return this.durationSelector(value);\n    } catch (err) {\n      this.destination.error(err);\n      return null;\n    }\n  }\n\n  /** @deprecated internal use only */ _unsubscribe() {\n    const { throttled, _trailingValue, _hasTrailingValue, _trailing } = this;\n\n    this._trailingValue = null;\n    this._hasTrailingValue = false;\n\n    if (throttled) {\n      this.remove(throttled);\n      this.throttled = null;\n      throttled.unsubscribe();\n    }\n  }\n\n  private _sendTrailing() {\n    const { destination, throttled, _trailing, _trailingValue, _hasTrailingValue } = this;\n    if (throttled && _trailing && _hasTrailingValue) {\n      destination.next(_trailingValue);\n      this._trailingValue = null;\n      this._hasTrailingValue = false;\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this._sendTrailing();\n    this._unsubscribe();\n  }\n\n  notifyComplete(): void {\n    this._sendTrailing();\n    this._unsubscribe();\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { PartialObserver } from '../Observer';\nimport { TeardownLogic } from '../Subscription';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/* tslint:disable:max-line-length */\nexport function tap<T>(next: (x: T) => void, error?: (e: any) => void, complete?: () => void): MonoTypeOperatorFunction<T>;\nexport function tap<T>(observer: PartialObserver<T>): MonoTypeOperatorFunction<T>;\n/* tslint:enable:max-line-length */\n\n/**\n * Perform a side effect for every emission on the source Observable, but return\n * an Observable that is identical to the source.\n *\n * <span class=\"informal\">Intercepts each emission on the source and runs a\n * function, but returns an output which is identical to the source as long as errors don't occur.</span>\n *\n * <img src=\"./img/do.png\" width=\"100%\">\n *\n * Returns a mirrored Observable of the source Observable, but modified so that\n * the provided Observer is called to perform a side effect for every value,\n * error, and completion emitted by the source. Any errors that are thrown in\n * the aforementioned Observer or handlers are safely sent down the error path\n * of the output Observable.\n *\n * This operator is useful for debugging your Observables for the correct values\n * or performing other side effects.\n *\n * Note: this is different to a `subscribe` on the Observable. If the Observable\n * returned by `do` is not subscribed, the side effects specified by the\n * Observer will never happen. `do` therefore simply spies on existing\n * execution, it does not trigger an execution to happen like `subscribe` does.\n *\n * @example <caption>Map every click to the clientX position of that click, while also logging the click event</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var positions = clicks\n *   .do(ev => console.log(ev))\n *   .map(ev => ev.clientX);\n * positions.subscribe(x => console.log(x));\n *\n * @see {@link map}\n * @see {@link subscribe}\n *\n * @param {Observer|function} [nextOrObserver] A normal Observer object or a\n * callback for `next`.\n * @param {function} [error] Callback for errors in the source.\n * @param {function} [complete] Callback for the completion of the source.\n * @return {Observable} An Observable identical to the source, but runs the\n * specified Observer or callback(s) for each item.\n * @name tap\n */\nexport function tap<T>(nextOrObserver?: PartialObserver<T> | ((x: T) => void),\n                       error?: (e: any) => void,\n                       complete?: () => void): MonoTypeOperatorFunction<T> {\n  return function tapOperatorFunction(source: Observable<T>): Observable<T> {\n    return source.lift(new DoOperator(nextOrObserver, error, complete));\n  };\n}\n\nclass DoOperator<T> implements Operator<T, T> {\n  constructor(private nextOrObserver?: PartialObserver<T> | ((x: T) => void),\n              private error?: (e: any) => void,\n              private complete?: () => void) {\n  }\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new DoSubscriber(subscriber, this.nextOrObserver, this.error, this.complete));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass DoSubscriber<T> extends Subscriber<T> {\n\n  private safeSubscriber: Subscriber<T>;\n\n  constructor(destination: Subscriber<T>,\n              nextOrObserver?: PartialObserver<T> | ((x: T) => void),\n              error?: (e: any) => void,\n              complete?: () => void) {\n    super(destination);\n\n    const safeSubscriber = new Subscriber<T>(nextOrObserver, error, complete);\n    safeSubscriber.syncErrorThrowable = true;\n    this.add(safeSubscriber);\n    this.safeSubscriber = safeSubscriber;\n  }\n\n  protected _next(value: T): void {\n    const { safeSubscriber } = this;\n    safeSubscriber.next(value);\n    if (safeSubscriber.syncErrorThrown) {\n      this.destination.error(safeSubscriber.syncErrorValue);\n    } else {\n      this.destination.next(value);\n    }\n  }\n\n  protected _error(err: any): void {\n    const { safeSubscriber } = this;\n    safeSubscriber.error(err);\n    if (safeSubscriber.syncErrorThrown) {\n      this.destination.error(safeSubscriber.syncErrorValue);\n    } else {\n      this.destination.error(err);\n    }\n  }\n\n  protected _complete(): void {\n    const { safeSubscriber } = this;\n    safeSubscriber.complete();\n    if (safeSubscriber.syncErrorThrown) {\n      this.destination.error(safeSubscriber.syncErrorValue);\n    } else {\n      this.destination.complete();\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { TeardownLogic } from '../Subscription';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Emits values emitted by the source Observable so long as each value satisfies\n * the given `predicate`, and then completes as soon as this `predicate` is not\n * satisfied.\n *\n * <span class=\"informal\">Takes values from the source only while they pass the\n * condition given. When the first value does not satisfy, it completes.</span>\n *\n * <img src=\"./img/takeWhile.png\" width=\"100%\">\n *\n * `takeWhile` subscribes and begins mirroring the source Observable. Each value\n * emitted on the source is given to the `predicate` function which returns a\n * boolean, representing a condition to be satisfied by the source values. The\n * output Observable emits the source values until such time as the `predicate`\n * returns false, at which point `takeWhile` stops mirroring the source\n * Observable and completes the output Observable.\n *\n * @example <caption>Emit click events only while the clientX property is greater than 200</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.takeWhile(ev => ev.clientX > 200);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link take}\n * @see {@link takeLast}\n * @see {@link takeUntil}\n * @see {@link skip}\n *\n * @param {function(value: T, index: number): boolean} predicate A function that\n * evaluates a value emitted by the source Observable and returns a boolean.\n * Also takes the (zero-based) index as the second argument.\n * @return {Observable<T>} An Observable that emits the values from the source\n * Observable so long as each value satisfies the condition defined by the\n * `predicate`, then completes.\n * @method takeWhile\n * @owner Observable\n */\nexport function takeWhile<T>(predicate: (value: T, index: number) => boolean): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new TakeWhileOperator(predicate));\n}\n\nclass TakeWhileOperator<T> implements Operator<T, T> {\n  constructor(private predicate: (value: T, index: number) => boolean) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new TakeWhileSubscriber(subscriber, this.predicate));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass TakeWhileSubscriber<T> extends Subscriber<T> {\n  private index: number = 0;\n\n  constructor(destination: Subscriber<T>,\n              private predicate: (value: T, index: number) => boolean) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    const destination = this.destination;\n    let result: boolean;\n    try {\n      result = this.predicate(value, this.index++);\n    } catch (err) {\n      destination.error(err);\n      return;\n    }\n    this.nextOrComplete(value, result);\n  }\n\n  private nextOrComplete(value: T, predicateResult: boolean): void {\n    const destination = this.destination;\n    if (Boolean(predicateResult)) {\n      destination.next(value);\n    } else {\n      destination.complete();\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { TeardownLogic } from '../Subscription';\n\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Emits the values emitted by the source Observable until a `notifier`\n * Observable emits a value.\n *\n * <span class=\"informal\">Lets values pass until a second Observable,\n * `notifier`, emits something. Then, it completes.</span>\n *\n * <img src=\"./img/takeUntil.png\" width=\"100%\">\n *\n * `takeUntil` subscribes and begins mirroring the source Observable. It also\n * monitors a second Observable, `notifier` that you provide. If the `notifier`\n * emits a value or a complete notification, the output Observable stops\n * mirroring the source Observable and completes.\n *\n * @example <caption>Tick every second until the first click happens</caption>\n * var interval = Rx.Observable.interval(1000);\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = interval.takeUntil(clicks);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link take}\n * @see {@link takeLast}\n * @see {@link takeWhile}\n * @see {@link skip}\n *\n * @param {Observable} notifier The Observable whose first emitted value will\n * cause the output Observable of `takeUntil` to stop emitting values from the\n * source Observable.\n * @return {Observable<T>} An Observable that emits the values from the source\n * Observable until such time as `notifier` emits its first value.\n * @method takeUntil\n * @owner Observable\n */\nexport function takeUntil<T>(notifier: Observable<any>): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new TakeUntilOperator(notifier));\n}\n\nclass TakeUntilOperator<T> implements Operator<T, T> {\n  constructor(private notifier: Observable<any>) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new TakeUntilSubscriber(subscriber, this.notifier));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass TakeUntilSubscriber<T, R> extends OuterSubscriber<T, R> {\n\n  constructor(destination: Subscriber<any>,\n              private notifier: Observable<any>) {\n    super(destination);\n    this.add(subscribeToResult(this, notifier));\n  }\n\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this.complete();\n  }\n\n  notifyComplete(): void {\n    // noop\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { ArgumentOutOfRangeError } from '../util/ArgumentOutOfRangeError';\nimport { EmptyObservable } from '../observable/EmptyObservable';\nimport { Observable } from '../Observable';\nimport { TeardownLogic } from '../Subscription';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Emits only the first `count` values emitted by the source Observable.\n *\n * <span class=\"informal\">Takes the first `count` values from the source, then\n * completes.</span>\n *\n * <img src=\"./img/take.png\" width=\"100%\">\n *\n * `take` returns an Observable that emits only the first `count` values emitted\n * by the source Observable. If the source emits fewer than `count` values then\n * all of its values are emitted. After that, it completes, regardless if the\n * source completes.\n *\n * @example <caption>Take the first 5 seconds of an infinite 1-second interval Observable</caption>\n * var interval = Rx.Observable.interval(1000);\n * var five = interval.take(5);\n * five.subscribe(x => console.log(x));\n *\n * @see {@link takeLast}\n * @see {@link takeUntil}\n * @see {@link takeWhile}\n * @see {@link skip}\n *\n * @throws {ArgumentOutOfRangeError} When using `take(i)`, it delivers an\n * ArgumentOutOrRangeError to the Observer's `error` callback if `i < 0`.\n *\n * @param {number} count The maximum number of `next` values to emit.\n * @return {Observable<T>} An Observable that emits only the first `count`\n * values emitted by the source Observable, or all of the values from the source\n * if the source emits fewer than `count` values.\n * @method take\n * @owner Observable\n */\nexport function take<T>(count: number): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => {\n    if (count === 0) {\n      return new EmptyObservable<T>();\n    } else {\n      return source.lift(new TakeOperator(count));\n    }\n  };\n}\n\nclass TakeOperator<T> implements Operator<T, T> {\n  constructor(private total: number) {\n    if (this.total < 0) {\n      throw new ArgumentOutOfRangeError;\n    }\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new TakeSubscriber(subscriber, this.total));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass TakeSubscriber<T> extends Subscriber<T> {\n  private count: number = 0;\n\n  constructor(destination: Subscriber<T>, private total: number) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    const total = this.total;\n    const count = ++this.count;\n    if (count <= total) {\n      this.destination.next(value);\n      if (count === total) {\n        this.destination.complete();\n        this.unsubscribe();\n      }\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Observable, ObservableInput } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OperatorFunction } from '../interfaces';\n\n/* tslint:disable:max-line-length */\nexport function switchMapTo<T, R>(observable: ObservableInput<R>): OperatorFunction<T, R>;\nexport function switchMapTo<T, I, R>(observable: ObservableInput<I>, resultSelector: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Projects each source value to the same Observable which is flattened multiple\n * times with {@link switch} in the output Observable.\n *\n * <span class=\"informal\">It's like {@link switchMap}, but maps each value\n * always to the same inner Observable.</span>\n *\n * <img src=\"./img/switchMapTo.png\" width=\"100%\">\n *\n * Maps each source value to the given Observable `innerObservable` regardless\n * of the source value, and then flattens those resulting Observables into one\n * single Observable, which is the output Observable. The output Observables\n * emits values only from the most recently emitted instance of\n * `innerObservable`.\n *\n * @example <caption>Rerun an interval Observable on every click event</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.switchMapTo(Rx.Observable.interval(1000));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link concatMapTo}\n * @see {@link switch}\n * @see {@link switchMap}\n * @see {@link mergeMapTo}\n *\n * @param {ObservableInput} innerObservable An Observable to replace each value from\n * the source Observable.\n * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\n * A function to produce the value on the output Observable based on the values\n * and the indices of the source (outer) emission and the inner Observable\n * emission. The arguments passed to this function are:\n * - `outerValue`: the value that came from the source\n * - `innerValue`: the value that came from the projected Observable\n * - `outerIndex`: the \"index\" of the value that came from the source\n * - `innerIndex`: the \"index\" of the value from the projected Observable\n * @return {Observable} An Observable that emits items from the given\n * `innerObservable` (and optionally transformed through `resultSelector`) every\n * time a value is emitted on the source Observable, and taking only the values\n * from the most recently projected inner Observable.\n * @method switchMapTo\n * @owner Observable\n */\nexport function switchMapTo<T, I, R>(innerObservable: Observable<I>,\n                                     resultSelector?: (outerValue: T,\n                                                       innerValue: I,\n                                                       outerIndex: number,\n                                                       innerIndex: number) => R): OperatorFunction<T, I | R> {\n  return (source: Observable<T>) => source.lift(new SwitchMapToOperator(innerObservable, resultSelector));\n}\n\nclass SwitchMapToOperator<T, I, R> implements Operator<T, I> {\n  constructor(private observable: Observable<I>,\n              private resultSelector?: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R) {\n  }\n\n  call(subscriber: Subscriber<I>, source: any): any {\n    return source.subscribe(new SwitchMapToSubscriber(subscriber, this.observable, this.resultSelector));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SwitchMapToSubscriber<T, I, R> extends OuterSubscriber<T, I> {\n  private index: number = 0;\n  private innerSubscription: Subscription;\n\n  constructor(destination: Subscriber<I>,\n              private inner: Observable<I>,\n              private resultSelector?: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R) {\n    super(destination);\n  }\n\n  protected _next(value: any) {\n    const innerSubscription = this.innerSubscription;\n    if (innerSubscription) {\n      innerSubscription.unsubscribe();\n    }\n    this.add(this.innerSubscription = subscribeToResult(this, this.inner, value, this.index++));\n  }\n\n  protected _complete() {\n    const {innerSubscription} = this;\n    if (!innerSubscription || innerSubscription.closed) {\n      super._complete();\n    }\n  }\n\n  /** @deprecated internal use only */ _unsubscribe() {\n    this.innerSubscription = null;\n  }\n\n  notifyComplete(innerSub: Subscription) {\n    this.remove(innerSub);\n    this.innerSubscription = null;\n    if (this.isStopped) {\n      super._complete();\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: I,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, I>): void {\n    const { resultSelector, destination } = this;\n    if (resultSelector) {\n      this.tryResultSelector(outerValue, innerValue, outerIndex, innerIndex);\n    } else {\n      destination.next(innerValue);\n    }\n  }\n\n  private tryResultSelector(outerValue: T, innerValue: I,\n                            outerIndex: number, innerIndex: number): void {\n    const { resultSelector, destination } = this;\n    let result: R;\n    try {\n      result = resultSelector(outerValue, innerValue, outerIndex, innerIndex);\n    } catch (err) {\n      destination.error(err);\n      return;\n    }\n\n    destination.next(result);\n  }\n}\n","import { Operator } from '../Operator';\nimport { Observable, ObservableInput } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OperatorFunction } from '../interfaces';\n\n/* tslint:disable:max-line-length */\nexport function switchMap<T, R>(project: (value: T, index: number) => ObservableInput<R>): OperatorFunction<T, R>;\nexport function switchMap<T, I, R>(project: (value: T, index: number) => ObservableInput<I>, resultSelector: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable, emitting values only from the most recently projected Observable.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link switch}.</span>\n *\n * <img src=\"./img/switchMap.png\" width=\"100%\">\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an (so-called \"inner\") Observable. Each time it observes one of these\n * inner Observables, the output Observable begins emitting the items emitted by\n * that inner Observable. When a new inner Observable is emitted, `switchMap`\n * stops emitting items from the earlier-emitted inner Observable and begins\n * emitting items from the new one. It continues to behave like this for\n * subsequent inner Observables.\n *\n * @example <caption>Rerun an interval Observable on every click event</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.switchMap((ev) => Rx.Observable.interval(1000));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link concatMap}\n * @see {@link exhaustMap}\n * @see {@link mergeMap}\n * @see {@link switch}\n * @see {@link switchMapTo}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\n * A function to produce the value on the output Observable based on the values\n * and the indices of the source (outer) emission and the inner Observable\n * emission. The arguments passed to this function are:\n * - `outerValue`: the value that came from the source\n * - `innerValue`: the value that came from the projected Observable\n * - `outerIndex`: the \"index\" of the value that came from the source\n * - `innerIndex`: the \"index\" of the value from the projected Observable\n * @return {Observable} An Observable that emits the result of applying the\n * projection function (and the optional `resultSelector`) to each item emitted\n * by the source Observable and taking only the values from the most recently\n * projected inner Observable.\n * @method switchMap\n * @owner Observable\n */\nexport function switchMap<T, I, R>(\n  project: (value: T, index: number) => ObservableInput<I>,\n  resultSelector?: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R\n): OperatorFunction<T, I | R> {\n  return function switchMapOperatorFunction(source: Observable<T>): Observable<I | R> {\n    return source.lift(new SwitchMapOperator(project, resultSelector));\n  };\n}\n\nclass SwitchMapOperator<T, I, R> implements Operator<T, I> {\n  constructor(private project: (value: T, index: number) => ObservableInput<I>,\n              private resultSelector?: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R) {\n  }\n\n  call(subscriber: Subscriber<I>, source: any): any {\n    return source.subscribe(new SwitchMapSubscriber(subscriber, this.project, this.resultSelector));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SwitchMapSubscriber<T, I, R> extends OuterSubscriber<T, I> {\n  private index: number = 0;\n  private innerSubscription: Subscription;\n\n  constructor(destination: Subscriber<I>,\n              private project: (value: T, index: number) => ObservableInput<I>,\n              private resultSelector?: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R) {\n    super(destination);\n  }\n\n  protected _next(value: T) {\n    let result: ObservableInput<I>;\n    const index = this.index++;\n    try {\n      result = this.project(value, index);\n    } catch (error) {\n      this.destination.error(error);\n      return;\n    }\n    this._innerSub(result, value, index);\n  }\n\n  private _innerSub(result: ObservableInput<I>, value: T, index: number) {\n    const innerSubscription = this.innerSubscription;\n    if (innerSubscription) {\n      innerSubscription.unsubscribe();\n    }\n    this.add(this.innerSubscription = subscribeToResult(this, result, value, index));\n  }\n\n  protected _complete(): void {\n    const {innerSubscription} = this;\n    if (!innerSubscription || innerSubscription.closed) {\n      super._complete();\n    }\n  }\n\n  /** @deprecated internal use only */ _unsubscribe() {\n    this.innerSubscription = null;\n  }\n\n  notifyComplete(innerSub: Subscription): void {\n    this.remove(innerSub);\n    this.innerSubscription = null;\n    if (this.isStopped) {\n      super._complete();\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: I,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, I>): void {\n    if (this.resultSelector) {\n      this._tryNotifyNext(outerValue, innerValue, outerIndex, innerIndex);\n    } else {\n      this.destination.next(innerValue);\n    }\n  }\n\n  private _tryNotifyNext(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): void {\n    let result: R;\n    try {\n      result = this.resultSelector(outerValue, innerValue, outerIndex, innerIndex);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    this.destination.next(result);\n  }\n}\n","import { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { TeardownLogic } from '../Subscription';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Returns an Observable that skips all items emitted by the source Observable as long as a specified condition holds\n * true, but emits all further source items as soon as the condition becomes false.\n *\n * <img src=\"./img/skipWhile.png\" width=\"100%\">\n *\n * @param {Function} predicate - A function to test each item emitted from the source Observable.\n * @return {Observable<T>} An Observable that begins emitting items emitted by the source Observable when the\n * specified predicate becomes false.\n * @method skipWhile\n * @owner Observable\n */\nexport function skipWhile<T>(predicate: (value: T, index: number) => boolean): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new SkipWhileOperator(predicate));\n}\n\nclass SkipWhileOperator<T> implements Operator<T, T> {\n  constructor(private predicate: (value: T, index: number) => boolean) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new SkipWhileSubscriber(subscriber, this.predicate));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SkipWhileSubscriber<T> extends Subscriber<T> {\n  private skipping: boolean = true;\n  private index: number = 0;\n\n  constructor(destination: Subscriber<T>,\n              private predicate: (value: T, index: number) => boolean) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    const destination = this.destination;\n    if (this.skipping) {\n      this.tryCallPredicate(value);\n    }\n\n    if (!this.skipping) {\n      destination.next(value);\n    }\n  }\n\n  private tryCallPredicate(value: T): void {\n    try {\n      const result = this.predicate(value, this.index++);\n      this.skipping = Boolean(result);\n    } catch (err) {\n      this.destination.error(err);\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { TeardownLogic } from '../Subscription';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Returns an Observable that skips items emitted by the source Observable until a second Observable emits an item.\n *\n * <img src=\"./img/skipUntil.png\" width=\"100%\">\n *\n * @param {Observable} notifier - The second Observable that has to emit an item before the source Observable's elements begin to\n * be mirrored by the resulting Observable.\n * @return {Observable<T>} An Observable that skips items from the source Observable until the second Observable emits\n * an item, then emits the remaining items.\n * @method skipUntil\n * @owner Observable\n */\nexport function skipUntil<T>(notifier: Observable<any>): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new SkipUntilOperator(notifier));\n}\n\nclass SkipUntilOperator<T> implements Operator<T, T> {\n  constructor(private notifier: Observable<any>) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new SkipUntilSubscriber(subscriber, this.notifier));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SkipUntilSubscriber<T, R> extends OuterSubscriber<T, R> {\n\n  private hasValue: boolean = false;\n  private isInnerStopped: boolean = false;\n\n  constructor(destination: Subscriber<any>,\n              notifier: Observable<any>) {\n    super(destination);\n    this.add(subscribeToResult(this, notifier));\n  }\n\n  protected _next(value: T) {\n    if (this.hasValue) {\n      super._next(value);\n    }\n  }\n\n  protected _complete() {\n    if (this.isInnerStopped) {\n      super._complete();\n    } else {\n      this.unsubscribe();\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this.hasValue = true;\n  }\n\n  notifyComplete(): void {\n    this.isInnerStopped = true;\n    if (this.isStopped) {\n      super._complete();\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { ArgumentOutOfRangeError } from '../util/ArgumentOutOfRangeError';\nimport { Observable } from '../Observable';\nimport { TeardownLogic } from '../Subscription';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Skip the last `count` values emitted by the source Observable.\n *\n * <img src=\"./img/skipLast.png\" width=\"100%\">\n *\n * `skipLast` returns an Observable that accumulates a queue with a length\n * enough to store the first `count` values. As more values are received,\n * values are taken from the front of the queue and produced on the result\n * sequence. This causes values to be delayed.\n *\n * @example <caption>Skip the last 2 values of an Observable with many values</caption>\n * var many = Rx.Observable.range(1, 5);\n * var skipLastTwo = many.skipLast(2);\n * skipLastTwo.subscribe(x => console.log(x));\n *\n * // Results in:\n * // 1 2 3\n *\n * @see {@link skip}\n * @see {@link skipUntil}\n * @see {@link skipWhile}\n * @see {@link take}\n *\n * @throws {ArgumentOutOfRangeError} When using `skipLast(i)`, it throws\n * ArgumentOutOrRangeError if `i < 0`.\n *\n * @param {number} count Number of elements to skip from the end of the source Observable.\n * @returns {Observable<T>} An Observable that skips the last count values\n * emitted by the source Observable.\n * @method skipLast\n * @owner Observable\n */\nexport function skipLast<T>(count: number): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new SkipLastOperator(count));\n}\n\nclass SkipLastOperator<T> implements Operator<T, T> {\n  constructor(private _skipCount: number) {\n    if (this._skipCount < 0) {\n      throw new ArgumentOutOfRangeError;\n    }\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    if (this._skipCount === 0) {\n      // If we don't want to skip any values then just subscribe\n      // to Subscriber without any further logic.\n      return source.subscribe(new Subscriber(subscriber));\n    } else {\n      return source.subscribe(new SkipLastSubscriber(subscriber, this._skipCount));\n    }\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SkipLastSubscriber<T> extends Subscriber<T> {\n  private _ring: T[];\n  private _count: number = 0;\n\n  constructor(destination: Subscriber<T>, private _skipCount: number) {\n    super(destination);\n    this._ring = new Array<T>(_skipCount);\n  }\n\n  protected _next(value: T): void {\n    const skipCount = this._skipCount;\n    const count = this._count++;\n\n    if (count < skipCount) {\n      this._ring[count] = value;\n    } else {\n      const currentIndex = count % skipCount;\n      const ring = this._ring;\n      const oldValue = ring[currentIndex];\n\n      ring[currentIndex] = value;\n      this.destination.next(oldValue);\n    }\n  }\n}","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { TeardownLogic } from '../Subscription';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Returns an Observable that skips the first `count` items emitted by the source Observable.\n *\n * <img src=\"./img/skip.png\" width=\"100%\">\n *\n * @param {Number} count - The number of times, items emitted by source Observable should be skipped.\n * @return {Observable} An Observable that skips values emitted by the source Observable.\n *\n * @method skip\n * @owner Observable\n */\nexport function skip<T>(count: number): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new SkipOperator(count));\n}\n\nclass SkipOperator<T> implements Operator<T, T> {\n  constructor(private total: number) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new SkipSubscriber(subscriber, this.total));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SkipSubscriber<T> extends Subscriber<T> {\n  count: number = 0;\n\n  constructor(destination: Subscriber<T>, private total: number) {\n    super(destination);\n  }\n\n  protected _next(x: T) {\n    if (++this.count > this.total) {\n      this.destination.next(x);\n    }\n  }\n}\n","import { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observer } from '../Observer';\nimport { EmptyError } from '../util/EmptyError';\nimport { TeardownLogic } from '../Subscription';\n\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Returns an Observable that emits the single item emitted by the source Observable that matches a specified\n * predicate, if that Observable emits one such item. If the source Observable emits more than one such item or no\n * such items, notify of an IllegalArgumentException or NoSuchElementException respectively.\n *\n * <img src=\"./img/single.png\" width=\"100%\">\n *\n * @throws {EmptyError} Delivers an EmptyError to the Observer's `error`\n * callback if the Observable completes before any `next` notification was sent.\n * @param {Function} predicate - A predicate function to evaluate items emitted by the source Observable.\n * @return {Observable<T>} An Observable that emits the single item emitted by the source Observable that matches\n * the predicate.\n .\n * @method single\n * @owner Observable\n */\nexport function single<T>(predicate?: (value: T, index: number, source: Observable<T>) => boolean): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new SingleOperator(predicate, source));\n}\n\nclass SingleOperator<T> implements Operator<T, T> {\n  constructor(private predicate?: (value: T, index: number, source: Observable<T>) => boolean,\n              private source?: Observable<T>) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new SingleSubscriber(subscriber, this.predicate, this.source));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SingleSubscriber<T> extends Subscriber<T> {\n  private seenValue: boolean = false;\n  private singleValue: T;\n  private index: number = 0;\n\n  constructor(destination: Observer<T>,\n              private predicate?: (value: T, index: number, source: Observable<T>) => boolean,\n              private source?: Observable<T>) {\n    super(destination);\n  }\n\n  private applySingleValue(value: T): void {\n    if (this.seenValue) {\n      this.destination.error('Sequence contains more than one element');\n    } else {\n      this.seenValue = true;\n      this.singleValue = value;\n    }\n  }\n\n  protected _next(value: T): void {\n    const index = this.index++;\n\n    if (this.predicate) {\n      this.tryNext(value, index);\n    } else {\n      this.applySingleValue(value);\n    }\n  }\n\n  private tryNext(value: T, index: number): void {\n    try {\n      if (this.predicate(value, index, this.source)) {\n        this.applySingleValue(value);\n      }\n    } catch (err) {\n      this.destination.error(err);\n    }\n  }\n\n  protected _complete(): void {\n    const destination = this.destination;\n\n    if (this.index > 0) {\n      destination.next(this.seenValue ? this.singleValue : undefined);\n      destination.complete();\n    } else {\n      destination.error(new EmptyError);\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Observer } from '../Observer';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { tryCatch } from '../util/tryCatch';\nimport { errorObject } from '../util/errorObject';\n\nimport { OperatorFunction } from '../interfaces';\n\n/**\n * Compares all values of two observables in sequence using an optional comparor function\n * and returns an observable of a single boolean value representing whether or not the two sequences\n * are equal.\n *\n * <span class=\"informal\">Checks to see of all values emitted by both observables are equal, in order.</span>\n *\n * <img src=\"./img/sequenceEqual.png\" width=\"100%\">\n *\n * `sequenceEqual` subscribes to two observables and buffers incoming values from each observable. Whenever either\n * observable emits a value, the value is buffered and the buffers are shifted and compared from the bottom\n * up; If any value pair doesn't match, the returned observable will emit `false` and complete. If one of the\n * observables completes, the operator will wait for the other observable to complete; If the other\n * observable emits before completing, the returned observable will emit `false` and complete. If one observable never\n * completes or emits after the other complets, the returned observable will never complete.\n *\n * @example <caption>figure out if the Konami code matches</caption>\n * var code = Rx.Observable.from([\n *  \"ArrowUp\",\n *  \"ArrowUp\",\n *  \"ArrowDown\",\n *  \"ArrowDown\",\n *  \"ArrowLeft\",\n *  \"ArrowRight\",\n *  \"ArrowLeft\",\n *  \"ArrowRight\",\n *  \"KeyB\",\n *  \"KeyA\",\n *  \"Enter\" // no start key, clearly.\n * ]);\n *\n * var keys = Rx.Observable.fromEvent(document, 'keyup')\n *  .map(e => e.code);\n * var matches = keys.bufferCount(11, 1)\n *  .mergeMap(\n *    last11 =>\n *      Rx.Observable.from(last11)\n *        .sequenceEqual(code)\n *   );\n * matches.subscribe(matched => console.log('Successful cheat at Contra? ', matched));\n *\n * @see {@link combineLatest}\n * @see {@link zip}\n * @see {@link withLatestFrom}\n *\n * @param {Observable} compareTo The observable sequence to compare the source sequence to.\n * @param {function} [comparor] An optional function to compare each value pair\n * @return {Observable} An Observable of a single boolean value representing whether or not\n * the values emitted by both observables were equal in sequence.\n * @method sequenceEqual\n * @owner Observable\n */\nexport function sequenceEqual<T>(compareTo: Observable<T>,\n                                 comparor?: (a: T, b: T) => boolean): OperatorFunction<T, boolean> {\n  return (source: Observable<T>) => source.lift(new SequenceEqualOperator(compareTo, comparor));\n}\n\nexport class SequenceEqualOperator<T> implements Operator<T, boolean> {\n  constructor(private compareTo: Observable<T>,\n              private comparor: (a: T, b: T) => boolean) {\n  }\n\n  call(subscriber: Subscriber<boolean>, source: any): any {\n    return source.subscribe(new SequenceEqualSubscriber(subscriber, this.compareTo, this.comparor));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class SequenceEqualSubscriber<T, R> extends Subscriber<T> {\n  private _a: T[] = [];\n  private _b: T[] = [];\n  private _oneComplete = false;\n\n  constructor(destination: Observer<R>,\n              private compareTo: Observable<T>,\n              private comparor: (a: T, b: T) => boolean) {\n    super(destination);\n    this.add(compareTo.subscribe(new SequenceEqualCompareToSubscriber(destination, this)));\n  }\n\n  protected _next(value: T): void {\n    if (this._oneComplete && this._b.length === 0) {\n      this.emit(false);\n    } else {\n      this._a.push(value);\n      this.checkValues();\n    }\n  }\n\n  public _complete(): void {\n    if (this._oneComplete) {\n      this.emit(this._a.length === 0 && this._b.length === 0);\n    } else {\n      this._oneComplete = true;\n    }\n  }\n\n  checkValues() {\n    const { _a, _b, comparor } = this;\n    while (_a.length > 0 && _b.length > 0) {\n      let a = _a.shift();\n      let b = _b.shift();\n      let areEqual = false;\n      if (comparor) {\n        areEqual = tryCatch(comparor)(a, b);\n        if (areEqual === errorObject) {\n          this.destination.error(errorObject.e);\n        }\n      } else {\n        areEqual = a === b;\n      }\n      if (!areEqual) {\n        this.emit(false);\n      }\n    }\n  }\n\n  emit(value: boolean) {\n    const { destination } = this;\n    destination.next(value);\n    destination.complete();\n  }\n\n  nextB(value: T) {\n    if (this._oneComplete && this._a.length === 0) {\n      this.emit(false);\n    } else {\n      this._b.push(value);\n      this.checkValues();\n    }\n  }\n}\n\nclass SequenceEqualCompareToSubscriber<T, R> extends Subscriber<T> {\n  constructor(destination: Observer<R>, private parent: SequenceEqualSubscriber<T, R>) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    this.parent.nextB(value);\n  }\n\n  protected _error(err: any): void {\n    this.parent.error(err);\n  }\n\n  protected _complete(): void {\n    this.parent._complete();\n  }\n}\n","import { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { IScheduler } from '../Scheduler';\nimport { Action } from '../scheduler/Action';\nimport { async } from '../scheduler/async';\nimport { TeardownLogic } from '../Subscription';\n\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Emits the most recently emitted value from the source Observable within\n * periodic time intervals.\n *\n * <span class=\"informal\">Samples the source Observable at periodic time\n * intervals, emitting what it samples.</span>\n *\n * <img src=\"./img/sampleTime.png\" width=\"100%\">\n *\n * `sampleTime` periodically looks at the source Observable and emits whichever\n * value it has most recently emitted since the previous sampling, unless the\n * source has not emitted anything since the previous sampling. The sampling\n * happens periodically in time every `period` milliseconds (or the time unit\n * defined by the optional `scheduler` argument). The sampling starts as soon as\n * the output Observable is subscribed.\n *\n * @example <caption>Every second, emit the most recent click at most once</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.sampleTime(1000);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link auditTime}\n * @see {@link debounceTime}\n * @see {@link delay}\n * @see {@link sample}\n * @see {@link throttleTime}\n *\n * @param {number} period The sampling period expressed in milliseconds or the\n * time unit determined internally by the optional `scheduler`.\n * @param {Scheduler} [scheduler=async] The {@link IScheduler} to use for\n * managing the timers that handle the sampling.\n * @return {Observable<T>} An Observable that emits the results of sampling the\n * values emitted by the source Observable at the specified time interval.\n * @method sampleTime\n * @owner Observable\n */\nexport function sampleTime<T>(period: number, scheduler: IScheduler = async): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new SampleTimeOperator(period, scheduler));\n}\n\nclass SampleTimeOperator<T> implements Operator<T, T> {\n  constructor(private period: number,\n              private scheduler: IScheduler) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new SampleTimeSubscriber(subscriber, this.period, this.scheduler));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SampleTimeSubscriber<T> extends Subscriber<T> {\n  lastValue: T;\n  hasValue: boolean = false;\n\n  constructor(destination: Subscriber<T>,\n              private period: number,\n              private scheduler: IScheduler) {\n    super(destination);\n    this.add(scheduler.schedule(dispatchNotification, period, { subscriber: this, period }));\n  }\n\n  protected _next(value: T) {\n    this.lastValue = value;\n    this.hasValue = true;\n  }\n\n  notifyNext() {\n    if (this.hasValue) {\n      this.hasValue = false;\n      this.destination.next(this.lastValue);\n    }\n  }\n}\n\nfunction dispatchNotification<T>(this: Action<any>, state: any) {\n  let { subscriber, period } = state;\n  subscriber.notifyNext();\n  this.schedule(state, period);\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { TeardownLogic } from '../Subscription';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Emits the most recently emitted value from the source Observable whenever\n * another Observable, the `notifier`, emits.\n *\n * <span class=\"informal\">It's like {@link sampleTime}, but samples whenever\n * the `notifier` Observable emits something.</span>\n *\n * <img src=\"./img/sample.png\" width=\"100%\">\n *\n * Whenever the `notifier` Observable emits a value or completes, `sample`\n * looks at the source Observable and emits whichever value it has most recently\n * emitted since the previous sampling, unless the source has not emitted\n * anything since the previous sampling. The `notifier` is subscribed to as soon\n * as the output Observable is subscribed.\n *\n * @example <caption>On every click, sample the most recent \"seconds\" timer</caption>\n * var seconds = Rx.Observable.interval(1000);\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = seconds.sample(clicks);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link audit}\n * @see {@link debounce}\n * @see {@link sampleTime}\n * @see {@link throttle}\n *\n * @param {Observable<any>} notifier The Observable to use for sampling the\n * source Observable.\n * @return {Observable<T>} An Observable that emits the results of sampling the\n * values emitted by the source Observable whenever the notifier Observable\n * emits value or completes.\n * @method sample\n * @owner Observable\n */\nexport function sample<T>(notifier: Observable<any>): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new SampleOperator(notifier));\n}\n\nclass SampleOperator<T> implements Operator<T, T> {\n  constructor(private notifier: Observable<any>) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    const sampleSubscriber = new SampleSubscriber(subscriber);\n    const subscription = source.subscribe(sampleSubscriber);\n    subscription.add(subscribeToResult(sampleSubscriber, this.notifier));\n    return subscription;\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SampleSubscriber<T, R> extends OuterSubscriber<T, R> {\n  private value: T;\n  private hasValue: boolean = false;\n\n  protected _next(value: T) {\n    this.value = value;\n    this.hasValue = true;\n  }\n\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this.emitValue();\n  }\n\n  notifyComplete(): void {\n    this.emitValue();\n  }\n\n  emitValue() {\n    if (this.hasValue) {\n      this.hasValue = false;\n      this.destination.next(this.value);\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { Subject } from '../Subject';\nimport { Subscription, TeardownLogic } from '../Subscription';\nimport { tryCatch } from '../util/tryCatch';\nimport { errorObject } from '../util/errorObject';\n\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Returns an Observable that mirrors the source Observable with the exception of an `error`. If the source Observable\n * calls `error`, this method will emit the Throwable that caused the error to the Observable returned from `notifier`.\n * If that Observable calls `complete` or `error` then this method will call `complete` or `error` on the child\n * subscription. Otherwise this method will resubscribe to the source Observable.\n *\n * <img src=\"./img/retryWhen.png\" width=\"100%\">\n *\n * @param {function(errors: Observable): Observable} notifier - Receives an Observable of notifications with which a\n * user can `complete` or `error`, aborting the retry.\n * @return {Observable} The source Observable modified with retry logic.\n * @method retryWhen\n * @owner Observable\n */\nexport function retryWhen<T>(notifier: (errors: Observable<any>) => Observable<any>): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new RetryWhenOperator(notifier, source));\n}\n\nclass RetryWhenOperator<T> implements Operator<T, T> {\n  constructor(protected notifier: (errors: Observable<any>) => Observable<any>,\n              public source: Observable<T>) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new RetryWhenSubscriber(subscriber, this.notifier, this.source));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass RetryWhenSubscriber<T, R> extends OuterSubscriber<T, R> {\n\n  private errors: Subject<any>;\n  private retries: Observable<any>;\n  private retriesSubscription: Subscription;\n\n  constructor(destination: Subscriber<R>,\n              private notifier: (errors: Observable<any>) => Observable<any>,\n              private source: Observable<T>) {\n    super(destination);\n  }\n\n  error(err: any) {\n    if (!this.isStopped) {\n\n      let errors = this.errors;\n      let retries: any = this.retries;\n      let retriesSubscription = this.retriesSubscription;\n\n      if (!retries) {\n        errors = new Subject();\n        retries = tryCatch(this.notifier)(errors);\n        if (retries === errorObject) {\n          return super.error(errorObject.e);\n        }\n        retriesSubscription = subscribeToResult(this, retries);\n      } else {\n        this.errors = null;\n        this.retriesSubscription = null;\n      }\n\n      this._unsubscribeAndRecycle();\n\n      this.errors = errors;\n      this.retries = retries;\n      this.retriesSubscription = retriesSubscription;\n\n      errors.next(err);\n    }\n  }\n\n  /** @deprecated internal use only */ _unsubscribe() {\n    const { errors, retriesSubscription } = this;\n    if (errors) {\n      errors.unsubscribe();\n      this.errors = null;\n    }\n    if (retriesSubscription) {\n      retriesSubscription.unsubscribe();\n      this.retriesSubscription = null;\n    }\n    this.retries = null;\n  }\n\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    const { errors, retries, retriesSubscription } = this;\n    this.errors = null;\n    this.retries = null;\n    this.retriesSubscription = null;\n\n    this._unsubscribeAndRecycle();\n\n    this.errors = errors;\n    this.retries = retries;\n    this.retriesSubscription = retriesSubscription;\n\n    this.source.subscribe(this);\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { TeardownLogic } from '../Subscription';\n\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Returns an Observable that mirrors the source Observable with the exception of an `error`. If the source Observable\n * calls `error`, this method will resubscribe to the source Observable for a maximum of `count` resubscriptions (given\n * as a number parameter) rather than propagating the `error` call.\n *\n * <img src=\"./img/retry.png\" width=\"100%\">\n *\n * Any and all items emitted by the source Observable will be emitted by the resulting Observable, even those emitted\n * during failed subscriptions. For example, if an Observable fails at first but emits [1, 2] then succeeds the second\n * time and emits: [1, 2, 3, 4, 5] then the complete stream of emissions and notifications\n * would be: [1, 2, 1, 2, 3, 4, 5, `complete`].\n * @param {number} count - Number of retry attempts before failing.\n * @return {Observable} The source Observable modified with the retry logic.\n * @method retry\n * @owner Observable\n */\nexport function retry<T>(count: number = -1): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new RetryOperator(count, source));\n}\n\nclass RetryOperator<T> implements Operator<T, T> {\n  constructor(private count: number,\n              private source: Observable<T>) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new RetrySubscriber(subscriber, this.count, this.source));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass RetrySubscriber<T> extends Subscriber<T> {\n  constructor(destination: Subscriber<any>,\n              private count: number,\n              private source: Observable<T>) {\n    super(destination);\n  }\n  error(err: any) {\n    if (!this.isStopped) {\n      const { source, count } = this;\n      if (count === 0) {\n        return super.error(err);\n      } else if (count > -1) {\n        this.count = count - 1;\n      }\n      source.subscribe(this._unsubscribeAndRecycle());\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { Subject } from '../Subject';\nimport { Subscription, TeardownLogic } from '../Subscription';\nimport { tryCatch } from '../util/tryCatch';\nimport { errorObject } from '../util/errorObject';\n\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Returns an Observable that mirrors the source Observable with the exception of a `complete`. If the source\n * Observable calls `complete`, this method will emit to the Observable returned from `notifier`. If that Observable\n * calls `complete` or `error`, then this method will call `complete` or `error` on the child subscription. Otherwise\n * this method will resubscribe to the source Observable.\n *\n * <img src=\"./img/repeatWhen.png\" width=\"100%\">\n *\n * @param {function(notifications: Observable): Observable} notifier - Receives an Observable of notifications with\n * which a user can `complete` or `error`, aborting the repetition.\n * @return {Observable} The source Observable modified with repeat logic.\n * @method repeatWhen\n * @owner Observable\n */\nexport function repeatWhen<T>(notifier: (notifications: Observable<any>) => Observable<any>): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new RepeatWhenOperator(notifier));\n}\n\nclass RepeatWhenOperator<T> implements Operator<T, T> {\n  constructor(protected notifier: (notifications: Observable<any>) => Observable<any>) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new RepeatWhenSubscriber(subscriber, this.notifier, source));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass RepeatWhenSubscriber<T, R> extends OuterSubscriber<T, R> {\n\n  private notifications: Subject<any>;\n  private retries: Observable<any>;\n  private retriesSubscription: Subscription;\n  private sourceIsBeingSubscribedTo: boolean = true;\n\n  constructor(destination: Subscriber<R>,\n              private notifier: (notifications: Observable<any>) => Observable<any>,\n              private source: Observable<T>) {\n    super(destination);\n  }\n\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this.sourceIsBeingSubscribedTo = true;\n    this.source.subscribe(this);\n  }\n\n  notifyComplete(innerSub: InnerSubscriber<T, R>): void {\n    if (this.sourceIsBeingSubscribedTo === false) {\n      return super.complete();\n    }\n  }\n\n  complete() {\n    this.sourceIsBeingSubscribedTo = false;\n\n    if (!this.isStopped) {\n      if (!this.retries) {\n        this.subscribeToRetries();\n      }\n      if (!this.retriesSubscription || this.retriesSubscription.closed) {\n        return super.complete();\n      }\n\n      this._unsubscribeAndRecycle();\n      this.notifications.next();\n    }\n  }\n\n  /** @deprecated internal use only */ _unsubscribe() {\n    const { notifications, retriesSubscription } = this;\n    if (notifications) {\n      notifications.unsubscribe();\n      this.notifications = null;\n    }\n    if (retriesSubscription) {\n      retriesSubscription.unsubscribe();\n      this.retriesSubscription = null;\n    }\n    this.retries = null;\n  }\n\n  /** @deprecated internal use only */ _unsubscribeAndRecycle(): Subscriber<T> {\n    const { notifications, retries, retriesSubscription } = this;\n    this.notifications = null;\n    this.retries = null;\n    this.retriesSubscription = null;\n    super._unsubscribeAndRecycle();\n    this.notifications = notifications;\n    this.retries = retries;\n    this.retriesSubscription = retriesSubscription;\n    return this;\n  }\n\n  private subscribeToRetries() {\n    this.notifications = new Subject();\n    const retries = tryCatch(this.notifier)(this.notifications);\n    if (retries === errorObject) {\n      return super.complete();\n    }\n    this.retries = retries;\n    this.retriesSubscription = subscribeToResult(this, retries);\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { EmptyObservable } from '../observable/EmptyObservable';\nimport { TeardownLogic } from '../Subscription';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Returns an Observable that repeats the stream of items emitted by the source Observable at most count times.\n *\n * <img src=\"./img/repeat.png\" width=\"100%\">\n *\n * @param {number} [count] The number of times the source Observable items are repeated, a count of 0 will yield\n * an empty Observable.\n * @return {Observable} An Observable that repeats the stream of items emitted by the source Observable at most\n * count times.\n * @method repeat\n * @owner Observable\n */\nexport function repeat<T>(count: number = -1): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => {\n    if (count === 0) {\n      return new EmptyObservable<T>();\n    } else if (count < 0) {\n      return source.lift(new RepeatOperator(-1, source));\n    } else {\n      return source.lift(new RepeatOperator(count - 1, source));\n    }\n  };\n}\n\nclass RepeatOperator<T> implements Operator<T, T> {\n  constructor(private count: number,\n              private source: Observable<T>) {\n  }\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new RepeatSubscriber(subscriber, this.count, this.source));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass RepeatSubscriber<T> extends Subscriber<T> {\n  constructor(destination: Subscriber<any>,\n              private count: number,\n              private source: Observable<T>) {\n    super(destination);\n  }\n  complete() {\n    if (!this.isStopped) {\n      const { source, count } = this;\n      if (count === 0) {\n        return super.complete();\n      } else if (count > -1) {\n        this.count = count - 1;\n      }\n      source.subscribe(this._unsubscribeAndRecycle());\n    }\n  }\n}\n","import { Observable } from '../Observable';\nimport { isArray } from '../util/isArray';\nimport { ArrayObservable } from '../observable/ArrayObservable';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription, TeardownLogic } from '../Subscription';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n\n/**\n * Returns an Observable that mirrors the first source Observable to emit an item.\n * @param {...Observables} ...observables sources used to race for which Observable emits first.\n * @return {Observable} an Observable that mirrors the output of the first Observable to emit an item.\n * @static true\n * @name race\n * @owner Observable\n */\nexport function race<T>(observables: Array<Observable<T>>): Observable<T>;\nexport function race<T>(observables: Array<Observable<any>>): Observable<T>;\nexport function race<T>(...observables: Array<Observable<T> | Array<Observable<T>>>): Observable<T>;\nexport function race<T>(...observables: Array<Observable<any> | Array<Observable<any>>>): Observable<T> {\n  // if the only argument is an array, it was most likely called with\n  // `race([obs1, obs2, ...])`\n  if (observables.length === 1) {\n    if (isArray(observables[0])) {\n      observables = <Array<Observable<any>>>observables[0];\n    } else {\n      return <Observable<any>>observables[0];\n    }\n  }\n\n  return new ArrayObservable<T>(<any>observables).lift(new RaceOperator<T>());\n}\n\nexport class RaceOperator<T> implements Operator<T, T> {\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new RaceSubscriber(subscriber));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class RaceSubscriber<T> extends OuterSubscriber<T, T> {\n  private hasFirst: boolean = false;\n  private observables: Observable<any>[] = [];\n  private subscriptions: Subscription[] = [];\n\n  constructor(destination: Subscriber<T>) {\n    super(destination);\n  }\n\n  protected _next(observable: any): void {\n    this.observables.push(observable);\n  }\n\n  protected _complete() {\n    const observables = this.observables;\n    const len = observables.length;\n\n    if (len === 0) {\n      this.destination.complete();\n    } else {\n      for (let i = 0; i < len && !this.hasFirst; i++) {\n        let observable = observables[i];\n        let subscription = subscribeToResult(this, observable, observable, i);\n\n        if (this.subscriptions) {\n          this.subscriptions.push(subscription);\n        }\n        this.add(subscription);\n      }\n      this.observables = null;\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: T,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, T>): void {\n    if (!this.hasFirst) {\n      this.hasFirst = true;\n\n      for (let i = 0; i < this.subscriptions.length; i++) {\n        if (i !== outerIndex) {\n          let subscription = this.subscriptions[i];\n\n          subscription.unsubscribe();\n          this.remove(subscription);\n        }\n      }\n\n      this.subscriptions = null;\n    }\n\n    this.destination.next(innerValue);\n  }\n}\n","import { Subject } from './Subject';\nimport { IScheduler } from './Scheduler';\nimport { queue } from './scheduler/queue';\nimport { Subscriber } from './Subscriber';\nimport { Subscription } from './Subscription';\nimport { ObserveOnSubscriber } from './operators/observeOn';\nimport { ObjectUnsubscribedError } from './util/ObjectUnsubscribedError';\nimport { SubjectSubscription } from './SubjectSubscription';\n/**\n * @class ReplaySubject<T>\n */\nexport class ReplaySubject<T> extends Subject<T> {\n  private _events: ReplayEvent<T>[] = [];\n  private _bufferSize: number;\n  private _windowTime: number;\n\n  constructor(bufferSize: number = Number.POSITIVE_INFINITY,\n              windowTime: number = Number.POSITIVE_INFINITY,\n              private scheduler?: IScheduler) {\n    super();\n    this._bufferSize = bufferSize < 1 ? 1 : bufferSize;\n    this._windowTime = windowTime < 1 ? 1 : windowTime;\n  }\n\n  next(value: T): void {\n    const now = this._getNow();\n    this._events.push(new ReplayEvent(now, value));\n    this._trimBufferThenGetEvents();\n    super.next(value);\n  }\n\n  /** @deprecated internal use only */ _subscribe(subscriber: Subscriber<T>): Subscription {\n    const _events = this._trimBufferThenGetEvents();\n    const scheduler = this.scheduler;\n    let subscription: Subscription;\n\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    } else if (this.hasError) {\n      subscription = Subscription.EMPTY;\n    } else if (this.isStopped) {\n      subscription = Subscription.EMPTY;\n    } else {\n      this.observers.push(subscriber);\n      subscription = new SubjectSubscription(this, subscriber);\n    }\n\n    if (scheduler) {\n      subscriber.add(subscriber = new ObserveOnSubscriber<T>(subscriber, scheduler));\n    }\n\n    const len = _events.length;\n    for (let i = 0; i < len && !subscriber.closed; i++) {\n      subscriber.next(_events[i].value);\n    }\n\n    if (this.hasError) {\n      subscriber.error(this.thrownError);\n    } else if (this.isStopped) {\n      subscriber.complete();\n    }\n\n    return subscription;\n  }\n\n  _getNow(): number {\n    return (this.scheduler || queue).now();\n  }\n\n  private _trimBufferThenGetEvents(): ReplayEvent<T>[] {\n    const now = this._getNow();\n    const _bufferSize = this._bufferSize;\n    const _windowTime = this._windowTime;\n    const _events = this._events;\n\n    let eventsCount = _events.length;\n    let spliceCount = 0;\n\n    // Trim events that fall out of the time window.\n    // Start at the front of the list. Break early once\n    // we encounter an event that falls within the window.\n    while (spliceCount < eventsCount) {\n      if ((now - _events[spliceCount].time) < _windowTime) {\n        break;\n      }\n      spliceCount++;\n    }\n\n    if (eventsCount > _bufferSize) {\n      spliceCount = Math.max(spliceCount, eventsCount - _bufferSize);\n    }\n\n    if (spliceCount > 0) {\n      _events.splice(0, spliceCount);\n    }\n\n    return _events;\n  }\n}\n\nclass ReplayEvent<T> {\n  constructor(public time: number, public value: T) {\n  }\n}\n","import { QueueAction } from './QueueAction';\nimport { QueueScheduler } from './QueueScheduler';\n\n/**\n *\n * Queue Scheduler\n *\n * <span class=\"informal\">Put every next task on a queue, instead of executing it immediately</span>\n *\n * `queue` scheduler, when used with delay, behaves the same as {@link async} scheduler.\n *\n * When used without delay, it schedules given task synchronously - executes it right when\n * it is scheduled. However when called recursively, that is when inside the scheduled task,\n * another task is scheduled with queue scheduler, instead of executing immediately as well,\n * that task will be put on a queue and wait for current one to finish.\n *\n * This means that when you execute task with `queue` scheduler, you are sure it will end\n * before any other task scheduled with that scheduler will start.\n *\n * @examples <caption>Schedule recursively first, then do something</caption>\n *\n * Rx.Scheduler.queue.schedule(() => {\n *   Rx.Scheduler.queue.schedule(() => console.log('second')); // will not happen now, but will be put on a queue\n *\n *   console.log('first');\n * });\n *\n * // Logs:\n * // \"first\"\n * // \"second\"\n *\n *\n * @example <caption>Reschedule itself recursively</caption>\n *\n * Rx.Scheduler.queue.schedule(function(state) {\n *   if (state !== 0) {\n *     console.log('before', state);\n *     this.schedule(state - 1); // `this` references currently executing Action,\n *                               // which we reschedule with new state\n *     console.log('after', state);\n *   }\n * }, 0, 3);\n *\n * // In scheduler that runs recursively, you would expect:\n * // \"before\", 3\n * // \"before\", 2\n * // \"before\", 1\n * // \"after\", 1\n * // \"after\", 2\n * // \"after\", 3\n *\n * // But with queue it logs:\n * // \"before\", 3\n * // \"after\", 3\n * // \"before\", 2\n * // \"after\", 2\n * // \"before\", 1\n * // \"after\", 1\n *\n *\n * @static true\n * @name queue\n * @owner Scheduler\n */\n\nexport const queue = new QueueScheduler(QueueAction);\n","import { AsyncScheduler } from './AsyncScheduler';\n\nexport class QueueScheduler extends AsyncScheduler {\n}\n","import { AsyncAction } from './AsyncAction';\nimport { Subscription } from '../Subscription';\nimport { QueueScheduler } from './QueueScheduler';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class QueueAction<T> extends AsyncAction<T> {\n\n  constructor(protected scheduler: QueueScheduler,\n              protected work: (this: QueueAction<T>, state?: T) => void) {\n    super(scheduler, work);\n  }\n\n  public schedule(state?: T, delay: number = 0): Subscription {\n    if (delay > 0) {\n      return super.schedule(state, delay);\n    }\n    this.delay = delay;\n    this.state = state;\n    this.scheduler.flush(this);\n    return this;\n  }\n\n  public execute(state: T, delay: number): any {\n    return (delay > 0 || this.closed) ?\n      super.execute(state, delay) :\n      this._execute(state, delay) ;\n  }\n\n  protected requestAsyncId(scheduler: QueueScheduler, id?: any, delay: number = 0): any {\n    // If delay exists and is greater than 0, or if the delay is null (the\n    // action wasn't rescheduled) but was originally scheduled as an async\n    // action, then recycle as an async action.\n    if ((delay !== null && delay > 0) || (delay === null && this.delay > 0)) {\n      return super.requestAsyncId(scheduler, id, delay);\n    }\n    // Otherwise flush the scheduler starting with this action.\n    return scheduler.flush(this);\n  }\n}\n","import { Subject } from './Subject';\nimport { Subscriber } from './Subscriber';\nimport { Subscription } from './Subscription';\n\n/**\n * @class AsyncSubject<T>\n */\nexport class AsyncSubject<T> extends Subject<T> {\n  private value: T = null;\n  private hasNext: boolean = false;\n  private hasCompleted: boolean = false;\n\n  /** @deprecated internal use only */ _subscribe(subscriber: Subscriber<any>): Subscription {\n    if (this.hasError) {\n      subscriber.error(this.thrownError);\n      return Subscription.EMPTY;\n    } else if (this.hasCompleted && this.hasNext) {\n      subscriber.next(this.value);\n      subscriber.complete();\n      return Subscription.EMPTY;\n    }\n    return super._subscribe(subscriber);\n  }\n\n  next(value: T): void {\n    if (!this.hasCompleted) {\n      this.value = value;\n      this.hasNext = true;\n    }\n  }\n\n  error(error: any): void {\n    if (!this.hasCompleted) {\n      super.error(error);\n    }\n  }\n\n  complete(): void {\n    this.hasCompleted = true;\n    if (this.hasNext) {\n      super.next(this.value);\n    }\n    super.complete();\n  }\n}\n","import { Subject } from './Subject';\nimport { Subscriber } from './Subscriber';\nimport { Subscription, ISubscription } from './Subscription';\nimport { ObjectUnsubscribedError } from './util/ObjectUnsubscribedError';\n\n/**\n * @class BehaviorSubject<T>\n */\nexport class BehaviorSubject<T> extends Subject<T> {\n\n  constructor(private _value: T) {\n    super();\n  }\n\n  get value(): T {\n    return this.getValue();\n  }\n\n  /** @deprecated internal use only */ _subscribe(subscriber: Subscriber<T>): Subscription {\n    const subscription = super._subscribe(subscriber);\n    if (subscription && !(<ISubscription>subscription).closed) {\n      subscriber.next(this._value);\n    }\n    return subscription;\n  }\n\n  getValue(): T {\n    if (this.hasError) {\n      throw this.thrownError;\n    } else if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    } else {\n      return this._value;\n    }\n  }\n\n  next(value: T): void {\n    super.next(this._value = value);\n  }\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { OperatorFunction } from '../interfaces';\n\n/**\n * Groups pairs of consecutive emissions together and emits them as an array of\n * two values.\n *\n * <span class=\"informal\">Puts the current value and previous value together as\n * an array, and emits that.</span>\n *\n * <img src=\"./img/pairwise.png\" width=\"100%\">\n *\n * The Nth emission from the source Observable will cause the output Observable\n * to emit an array [(N-1)th, Nth] of the previous and the current value, as a\n * pair. For this reason, `pairwise` emits on the second and subsequent\n * emissions from the source Observable, but not on the first emission, because\n * there is no previous value in that case.\n *\n * @example <caption>On every click (starting from the second), emit the relative distance to the previous click</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var pairs = clicks.pairwise();\n * var distance = pairs.map(pair => {\n *   var x0 = pair[0].clientX;\n *   var y0 = pair[0].clientY;\n *   var x1 = pair[1].clientX;\n *   var y1 = pair[1].clientY;\n *   return Math.sqrt(Math.pow(x0 - x1, 2) + Math.pow(y0 - y1, 2));\n * });\n * distance.subscribe(x => console.log(x));\n *\n * @see {@link buffer}\n * @see {@link bufferCount}\n *\n * @return {Observable<Array<T>>} An Observable of pairs (as arrays) of\n * consecutive values from the source Observable.\n * @method pairwise\n * @owner Observable\n */\nexport function pairwise<T>(): OperatorFunction<T, [T, T]> {\n  return (source: Observable<T>) => source.lift(new PairwiseOperator());\n}\n\nclass PairwiseOperator<T> implements Operator<T, [T, T]> {\n  call(subscriber: Subscriber<[T, T]>, source: any): any {\n    return source.subscribe(new PairwiseSubscriber(subscriber));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass PairwiseSubscriber<T> extends Subscriber<T> {\n  private prev: T;\n  private hasPrev: boolean = false;\n\n  constructor(destination: Subscriber<[T, T]>) {\n    super(destination);\n  }\n\n  _next(value: T): void {\n    if (this.hasPrev) {\n      this.destination.next([this.prev, value]);\n    } else {\n      this.hasPrev = true;\n    }\n\n    this.prev = value;\n  }\n}\n","import { Observable, ObservableInput } from '../Observable';\nimport { FromObservable } from '../observable/FromObservable';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { isArray } from '../util/isArray';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OperatorFunction } from '../interfaces';\n\n/* tslint:disable:max-line-length */\nexport function onErrorResumeNext<T, R>(v: ObservableInput<R>): OperatorFunction<T, R>;\nexport function onErrorResumeNext<T, T2, T3, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>): OperatorFunction<T, R>;\nexport function onErrorResumeNext<T, T2, T3, T4, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>): OperatorFunction<T, R>;\nexport function onErrorResumeNext<T, T2, T3, T4, T5, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>): OperatorFunction<T, R>;\nexport function onErrorResumeNext<T, T2, T3, T4, T5, T6, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>): OperatorFunction<T, R> ;\nexport function onErrorResumeNext<T, R>(...observables: Array<ObservableInput<any> | ((...values: Array<any>) => R)>): OperatorFunction<T, R>;\nexport function onErrorResumeNext<T, R>(array: ObservableInput<any>[]): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * When any of the provided Observable emits an complete or error notification, it immediately subscribes to the next one\n * that was passed.\n *\n * <span class=\"informal\">Execute series of Observables no matter what, even if it means swallowing errors.</span>\n *\n * <img src=\"./img/onErrorResumeNext.png\" width=\"100%\">\n *\n * `onErrorResumeNext` is an operator that accepts a series of Observables, provided either directly as\n * arguments or as an array. If no single Observable is provided, returned Observable will simply behave the same\n * as the source.\n *\n * `onErrorResumeNext` returns an Observable that starts by subscribing and re-emitting values from the source Observable.\n * When its stream of values ends - no matter if Observable completed or emitted an error - `onErrorResumeNext`\n * will subscribe to the first Observable that was passed as an argument to the method. It will start re-emitting\n * its values as well and - again - when that stream ends, `onErrorResumeNext` will proceed to subscribing yet another\n * Observable in provided series, no matter if previous Observable completed or ended with an error. This will\n * be happening until there is no more Observables left in the series, at which point returned Observable will\n * complete - even if the last subscribed stream ended with an error.\n *\n * `onErrorResumeNext` can be therefore thought of as version of {@link concat} operator, which is more permissive\n * when it comes to the errors emitted by its input Observables. While `concat` subscribes to the next Observable\n * in series only if previous one successfully completed, `onErrorResumeNext` subscribes even if it ended with\n * an error.\n *\n * Note that you do not get any access to errors emitted by the Observables. In particular do not\n * expect these errors to appear in error callback passed to {@link subscribe}. If you want to take\n * specific actions based on what error was emitted by an Observable, you should try out {@link catch} instead.\n *\n *\n * @example <caption>Subscribe to the next Observable after map fails</caption>\n * Rx.Observable.of(1, 2, 3, 0)\n *   .map(x => {\n *       if (x === 0) { throw Error(); }\n         return 10 / x;\n *   })\n *   .onErrorResumeNext(Rx.Observable.of(1, 2, 3))\n *   .subscribe(\n *     val => console.log(val),\n *     err => console.log(err),          // Will never be called.\n *     () => console.log('that\\'s it!')\n *   );\n *\n * // Logs:\n * // 10\n * // 5\n * // 3.3333333333333335\n * // 1\n * // 2\n * // 3\n * // \"that's it!\"\n *\n * @see {@link concat}\n * @see {@link catch}\n *\n * @param {...ObservableInput} observables Observables passed either directly or as an array.\n * @return {Observable} An Observable that emits values from source Observable, but - if it errors - subscribes\n * to the next passed Observable and so on, until it completes or runs out of Observables.\n * @method onErrorResumeNext\n * @owner Observable\n */\n\nexport function onErrorResumeNext<T, R>(...nextSources: Array<ObservableInput<any> |\n                                                       Array<ObservableInput<any>> |\n                                                       ((...values: Array<any>) => R)>): OperatorFunction<T, R> {\n  if (nextSources.length === 1 && isArray(nextSources[0])) {\n    nextSources = <Array<Observable<any>>>nextSources[0];\n  }\n\n  return (source: Observable<T>) => source.lift(new OnErrorResumeNextOperator<T, R>(nextSources));\n}\n\n/* tslint:disable:max-line-length */\nexport function onErrorResumeNextStatic<R>(v: ObservableInput<R>): Observable<R>;\nexport function onErrorResumeNextStatic<T2, T3, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>): Observable<R>;\nexport function onErrorResumeNextStatic<T2, T3, T4, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>): Observable<R>;\nexport function onErrorResumeNextStatic<T2, T3, T4, T5, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>): Observable<R>;\nexport function onErrorResumeNextStatic<T2, T3, T4, T5, T6, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>): Observable<R>;\n\nexport function onErrorResumeNextStatic<R>(...observables: Array<ObservableInput<any> | ((...values: Array<any>) => R)>): Observable<R>;\nexport function onErrorResumeNextStatic<R>(array: ObservableInput<any>[]): Observable<R>;\n/* tslint:enable:max-line-length */\n\nexport function onErrorResumeNextStatic<T, R>(...nextSources: Array<ObservableInput<any> |\n                                                              Array<ObservableInput<any>> |\n                                                              ((...values: Array<any>) => R)>): Observable<R> {\n  let source: ObservableInput<any> = null;\n\n  if (nextSources.length === 1 && isArray(nextSources[0])) {\n    nextSources = <Array<ObservableInput<any>>>nextSources[0];\n  }\n  source = nextSources.shift();\n\n  return new FromObservable(source, null).lift(new OnErrorResumeNextOperator<T, R>(nextSources));\n}\n\nclass OnErrorResumeNextOperator<T, R> implements Operator<T, R> {\n  constructor(private nextSources: Array<ObservableInput<any>>) {\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new OnErrorResumeNextSubscriber(subscriber, this.nextSources));\n  }\n}\n\nclass OnErrorResumeNextSubscriber<T, R> extends OuterSubscriber<T, R> {\n  constructor(protected destination: Subscriber<T>,\n              private nextSources: Array<ObservableInput<any>>) {\n    super(destination);\n  }\n\n  notifyError(error: any, innerSub: InnerSubscriber<T, any>): void {\n    this.subscribeToNextSource();\n  }\n\n  notifyComplete(innerSub: InnerSubscriber<T, any>): void {\n    this.subscribeToNextSource();\n  }\n\n  protected _error(err: any): void {\n    this.subscribeToNextSource();\n  }\n\n  protected _complete(): void {\n    this.subscribeToNextSource();\n  }\n\n  private subscribeToNextSource(): void {\n    const next = this.nextSources.shift();\n    if (next) {\n      this.add(subscribeToResult(this, next));\n    } else {\n      this.destination.complete();\n    }\n  }\n}\n","import { Subject, SubjectSubscriber } from '../Subject';\nimport { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription, TeardownLogic } from '../Subscription';\nimport { refCount as higherOrderRefCount } from '../operators/refCount';\n\n/**\n * @class ConnectableObservable<T>\n */\nexport class ConnectableObservable<T> extends Observable<T> {\n\n  /** @deprecated internal use only */ public _subject: Subject<T>;\n  /** @deprecated internal use only */ public _refCount: number = 0;\n  /** @deprecated internal use only */ public _connection: Subscription;\n  _isComplete = false;\n\n  constructor(/** @deprecated internal use only */ public source: Observable<T>,\n              /** @deprecated internal use only */ public subjectFactory: () => Subject<T>) {\n    super();\n  }\n\n  /** @deprecated internal use only */ _subscribe(subscriber: Subscriber<T>) {\n    return this.getSubject().subscribe(subscriber);\n  }\n\n  /** @deprecated internal use only */ public getSubject(): Subject<T> {\n    const subject = this._subject;\n    if (!subject || subject.isStopped) {\n      this._subject = this.subjectFactory();\n    }\n    return this._subject;\n  }\n\n  connect(): Subscription {\n    let connection = this._connection;\n    if (!connection) {\n      this._isComplete = false;\n      connection = this._connection = new Subscription();\n      connection.add(this.source\n        .subscribe(new ConnectableSubscriber(this.getSubject(), this)));\n      if (connection.closed) {\n        this._connection = null;\n        connection = Subscription.EMPTY;\n      } else {\n        this._connection = connection;\n      }\n    }\n    return connection;\n  }\n\n  refCount(): Observable<T> {\n    return higherOrderRefCount()(this) as Observable<T>;\n  }\n}\n\nconst connectableProto = <any>ConnectableObservable.prototype;\n\nexport const connectableObservableDescriptor: PropertyDescriptorMap = {\n  operator: { value: null },\n  _refCount: { value: 0, writable: true },\n  _subject: { value: null, writable: true },\n  _connection: { value: null, writable: true },\n  _subscribe: { value: connectableProto._subscribe },\n  _isComplete: { value: connectableProto._isComplete, writable: true },\n  getSubject: { value: connectableProto.getSubject },\n  connect: { value: connectableProto.connect },\n  refCount: { value: connectableProto.refCount }\n};\n\nclass ConnectableSubscriber<T> extends SubjectSubscriber<T> {\n  constructor(destination: Subject<T>,\n              private connectable: ConnectableObservable<T>) {\n    super(destination);\n  }\n  protected _error(err: any): void {\n    this._unsubscribe();\n    super._error(err);\n  }\n  protected _complete(): void {\n    this.connectable._isComplete = true;\n    this._unsubscribe();\n    super._complete();\n  }\n  /** @deprecated internal use only */ _unsubscribe() {\n    const connectable = <any>this.connectable;\n    if (connectable) {\n      this.connectable = null;\n      const connection = connectable._connection;\n      connectable._refCount = 0;\n      connectable._subject = null;\n      connectable._connection = null;\n      if (connection) {\n        connection.unsubscribe();\n      }\n    }\n  }\n}\n\nclass RefCountOperator<T> implements Operator<T, T> {\n  constructor(private connectable: ConnectableObservable<T>) {\n  }\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n\n    const { connectable } = this;\n    (<any> connectable)._refCount++;\n\n    const refCounter = new RefCountSubscriber(subscriber, connectable);\n    const subscription = source.subscribe(refCounter);\n\n    if (!refCounter.closed) {\n      (<any> refCounter).connection = connectable.connect();\n    }\n\n    return subscription;\n  }\n}\n\nclass RefCountSubscriber<T> extends Subscriber<T> {\n\n  private connection: Subscription;\n\n  constructor(destination: Subscriber<T>,\n              private connectable: ConnectableObservable<T>) {\n    super(destination);\n  }\n\n  /** @deprecated internal use only */ _unsubscribe() {\n\n    const { connectable } = this;\n    if (!connectable) {\n      this.connection = null;\n      return;\n    }\n\n    this.connectable = null;\n    const refCount = (<any> connectable)._refCount;\n    if (refCount <= 0) {\n      this.connection = null;\n      return;\n    }\n\n    (<any> connectable)._refCount = refCount - 1;\n    if (refCount > 1) {\n      this.connection = null;\n      return;\n    }\n\n    ///\n    // Compare the local RefCountSubscriber's connection Subscription to the\n    // connection Subscription on the shared ConnectableObservable. In cases\n    // where the ConnectableObservable source synchronously emits values, and\n    // the RefCountSubscriber's downstream Observers synchronously unsubscribe,\n    // execution continues to here before the RefCountOperator has a chance to\n    // supply the RefCountSubscriber with the shared connection Subscription.\n    // For example:\n    // ```\n    // Observable.range(0, 10)\n    //   .publish()\n    //   .refCount()\n    //   .take(5)\n    //   .subscribe();\n    // ```\n    // In order to account for this case, RefCountSubscriber should only dispose\n    // the ConnectableObservable's shared connection Subscription if the\n    // connection Subscription exists, *and* either:\n    //   a. RefCountSubscriber doesn't have a reference to the shared connection\n    //      Subscription yet, or,\n    //   b. RefCountSubscriber's connection Subscription reference is identical\n    //      to the shared connection Subscription\n    ///\n    const { connection } = this;\n    const sharedConnection = (<any> connectable)._connection;\n    this.connection = null;\n\n    if (sharedConnection && (!connection || sharedConnection === connection)) {\n      sharedConnection.unsubscribe();\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription, TeardownLogic } from '../Subscription';\nimport { MonoTypeOperatorFunction } from '../interfaces';\nimport { ConnectableObservable } from '../observable/ConnectableObservable';\nimport { Observable } from '../Observable';\n\nexport function refCount<T>(): MonoTypeOperatorFunction<T> {\n  return function refCountOperatorFunction(source: ConnectableObservable<T>): Observable<T> {\n    return source.lift(new RefCountOperator(source));\n  };\n}\n\nclass RefCountOperator<T> implements Operator<T, T> {\n  constructor(private connectable: ConnectableObservable<T>) {\n  }\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n\n    const { connectable } = this;\n    (<any> connectable)._refCount++;\n\n    const refCounter = new RefCountSubscriber(subscriber, connectable);\n    const subscription = source.subscribe(refCounter);\n\n    if (!refCounter.closed) {\n      (<any> refCounter).connection = connectable.connect();\n    }\n\n    return subscription;\n  }\n}\n\nclass RefCountSubscriber<T> extends Subscriber<T> {\n\n  private connection: Subscription;\n\n  constructor(destination: Subscriber<T>,\n              private connectable: ConnectableObservable<T>) {\n    super(destination);\n  }\n\n  /** @deprecated internal use only */ _unsubscribe() {\n\n    const { connectable } = this;\n    if (!connectable) {\n      this.connection = null;\n      return;\n    }\n\n    this.connectable = null;\n    const refCount = (<any> connectable)._refCount;\n    if (refCount <= 0) {\n      this.connection = null;\n      return;\n    }\n\n    (<any> connectable)._refCount = refCount - 1;\n    if (refCount > 1) {\n      this.connection = null;\n      return;\n    }\n\n    ///\n    // Compare the local RefCountSubscriber's connection Subscription to the\n    // connection Subscription on the shared ConnectableObservable. In cases\n    // where the ConnectableObservable source synchronously emits values, and\n    // the RefCountSubscriber's downstream Observers synchronously unsubscribe,\n    // execution continues to here before the RefCountOperator has a chance to\n    // supply the RefCountSubscriber with the shared connection Subscription.\n    // For example:\n    // ```\n    // Observable.range(0, 10)\n    //   .publish()\n    //   .refCount()\n    //   .take(5)\n    //   .subscribe();\n    // ```\n    // In order to account for this case, RefCountSubscriber should only dispose\n    // the ConnectableObservable's shared connection Subscription if the\n    // connection Subscription exists, *and* either:\n    //   a. RefCountSubscriber doesn't have a reference to the shared connection\n    //      Subscription yet, or,\n    //   b. RefCountSubscriber's connection Subscription reference is identical\n    //      to the shared connection Subscription\n    ///\n    const { connection } = this;\n    const sharedConnection = (<any> connectable)._connection;\n    this.connection = null;\n\n    if (sharedConnection && (!connection || sharedConnection === connection)) {\n      sharedConnection.unsubscribe();\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { tryCatch } from '../util/tryCatch';\nimport { errorObject } from '../util/errorObject';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { OperatorFunction } from '../interfaces';\n\n/**\n * Applies an accumulator function over the source Observable where the\n * accumulator function itself returns an Observable, then each intermediate\n * Observable returned is merged into the output Observable.\n *\n * <span class=\"informal\">It's like {@link scan}, but the Observables returned\n * by the accumulator are merged into the outer Observable.</span>\n *\n * @example <caption>Count the number of click events</caption>\n * const click$ = Rx.Observable.fromEvent(document, 'click');\n * const one$ = click$.mapTo(1);\n * const seed = 0;\n * const count$ = one$.mergeScan((acc, one) => Rx.Observable.of(acc + one), seed);\n * count$.subscribe(x => console.log(x));\n *\n * // Results:\n * 1\n * 2\n * 3\n * 4\n * // ...and so on for each click\n *\n * @param {function(acc: R, value: T): Observable<R>} accumulator\n * The accumulator function called on each source value.\n * @param seed The initial accumulation value.\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of\n * input Observables being subscribed to concurrently.\n * @return {Observable<R>} An observable of the accumulated values.\n * @method mergeScan\n * @owner Observable\n */\nexport function mergeScan<T, R>(accumulator: (acc: R, value: T) => Observable<R>,\n                                seed: R,\n                                concurrent: number = Number.POSITIVE_INFINITY): OperatorFunction<T, R> {\n  return (source: Observable<T>) => source.lift(new MergeScanOperator(accumulator, seed, concurrent));\n}\n\nexport class MergeScanOperator<T, R> implements Operator<T, R> {\n  constructor(private accumulator: (acc: R, value: T) => Observable<R>,\n              private seed: R,\n              private concurrent: number) {\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new MergeScanSubscriber(\n      subscriber, this.accumulator, this.seed, this.concurrent\n    ));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class MergeScanSubscriber<T, R> extends OuterSubscriber<T, R> {\n  private hasValue: boolean = false;\n  private hasCompleted: boolean = false;\n  private buffer: Observable<any>[] = [];\n  private active: number = 0;\n  protected index: number = 0;\n\n  constructor(destination: Subscriber<R>,\n              private accumulator: (acc: R, value: T) => Observable<R>,\n              private acc: R,\n              private concurrent: number) {\n    super(destination);\n  }\n\n  protected _next(value: any): void {\n    if (this.active < this.concurrent) {\n      const index = this.index++;\n      const ish = tryCatch(this.accumulator)(this.acc, value);\n      const destination = this.destination;\n      if (ish === errorObject) {\n        destination.error(errorObject.e);\n      } else {\n        this.active++;\n        this._innerSub(ish, value, index);\n      }\n    } else {\n      this.buffer.push(value);\n    }\n  }\n\n  private _innerSub(ish: any, value: T, index: number): void {\n    this.add(subscribeToResult<T, R>(this, ish, value, index));\n  }\n\n  protected _complete(): void {\n    this.hasCompleted = true;\n    if (this.active === 0 && this.buffer.length === 0) {\n      if (this.hasValue === false) {\n        this.destination.next(this.acc);\n      }\n      this.destination.complete();\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    const { destination } = this;\n    this.acc = innerValue;\n    this.hasValue = true;\n    destination.next(innerValue);\n  }\n\n  notifyComplete(innerSub: Subscription): void {\n    const buffer = this.buffer;\n    this.remove(innerSub);\n    this.active--;\n    if (buffer.length > 0) {\n      this._next(buffer.shift());\n    } else if (this.active === 0 && this.hasCompleted) {\n      if (this.hasValue === false) {\n        this.destination.next(this.acc);\n      }\n      this.destination.complete();\n    }\n  }\n}\n","import { Observable, ObservableInput } from '../Observable';\nimport { Operator } from '../Operator';\nimport { PartialObserver } from '../Observer';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OperatorFunction } from '../interfaces';\n\n/* tslint:disable:max-line-length */\nexport function mergeMapTo<T, R>(observable: ObservableInput<R>, concurrent?: number): OperatorFunction<T, R>;\nexport function mergeMapTo<T, I, R>(observable: ObservableInput<I>, resultSelector: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R, concurrent?: number): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Projects each source value to the same Observable which is merged multiple\n * times in the output Observable.\n *\n * <span class=\"informal\">It's like {@link mergeMap}, but maps each value always\n * to the same inner Observable.</span>\n *\n * <img src=\"./img/mergeMapTo.png\" width=\"100%\">\n *\n * Maps each source value to the given Observable `innerObservable` regardless\n * of the source value, and then merges those resulting Observables into one\n * single Observable, which is the output Observable.\n *\n * @example <caption>For each click event, start an interval Observable ticking every 1 second</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.mergeMapTo(Rx.Observable.interval(1000));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link concatMapTo}\n * @see {@link merge}\n * @see {@link mergeAll}\n * @see {@link mergeMap}\n * @see {@link mergeScan}\n * @see {@link switchMapTo}\n *\n * @param {ObservableInput} innerObservable An Observable to replace each value from\n * the source Observable.\n * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\n * A function to produce the value on the output Observable based on the values\n * and the indices of the source (outer) emission and the inner Observable\n * emission. The arguments passed to this function are:\n * - `outerValue`: the value that came from the source\n * - `innerValue`: the value that came from the projected Observable\n * - `outerIndex`: the \"index\" of the value that came from the source\n * - `innerIndex`: the \"index\" of the value from the projected Observable\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @return {Observable} An Observable that emits items from the given\n * `innerObservable` (and optionally transformed through `resultSelector`) every\n * time a value is emitted on the source Observable.\n * @method mergeMapTo\n * @owner Observable\n */\nexport function mergeMapTo<T, I, R>(innerObservable: Observable<I>,\n                                    resultSelector?: ((outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R) | number,\n                                    concurrent: number = Number.POSITIVE_INFINITY): OperatorFunction<T, R> {\n  if (typeof resultSelector === 'number') {\n    concurrent = <number>resultSelector;\n    resultSelector = null;\n  }\n  return (source: Observable<T>) => source.lift(new MergeMapToOperator(innerObservable, <any>resultSelector, concurrent));\n}\n\n// TODO: Figure out correct signature here: an Operator<Observable<T>, R>\n//       needs to implement call(observer: Subscriber<R>): Subscriber<Observable<T>>\nexport class MergeMapToOperator<T, I, R> implements Operator<Observable<T>, R> {\n  constructor(private ish: ObservableInput<I>,\n              private resultSelector?: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R,\n              private concurrent: number = Number.POSITIVE_INFINITY) {\n  }\n\n  call(observer: Subscriber<R>, source: any): any {\n    return source.subscribe(new MergeMapToSubscriber(observer, this.ish, this.resultSelector, this.concurrent));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class MergeMapToSubscriber<T, I, R> extends OuterSubscriber<T, I> {\n  private hasCompleted: boolean = false;\n  private buffer: T[] = [];\n  private active: number = 0;\n  protected index: number = 0;\n\n  constructor(destination: Subscriber<R>,\n              private ish: ObservableInput<I>,\n              private resultSelector?: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R,\n              private concurrent: number = Number.POSITIVE_INFINITY) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    if (this.active < this.concurrent) {\n      const resultSelector = this.resultSelector;\n      const index = this.index++;\n      const ish = this.ish;\n      const destination = this.destination;\n\n      this.active++;\n      this._innerSub(ish, destination, resultSelector, value, index);\n    } else {\n      this.buffer.push(value);\n    }\n  }\n\n  private _innerSub(ish: ObservableInput<I>,\n                    destination: PartialObserver<I>,\n                    resultSelector: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R,\n                    value: T,\n                    index: number): void {\n    this.add(subscribeToResult<T, I>(this, ish, value, index));\n  }\n\n  protected _complete(): void {\n    this.hasCompleted = true;\n    if (this.active === 0 && this.buffer.length === 0) {\n      this.destination.complete();\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: I,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, I>): void {\n    const { resultSelector, destination } = this;\n    if (resultSelector) {\n      this.trySelectResult(outerValue, innerValue, outerIndex, innerIndex);\n    } else {\n      destination.next(innerValue);\n    }\n  }\n\n  private trySelectResult(outerValue: T, innerValue: I,\n                          outerIndex: number, innerIndex: number): void {\n    const { resultSelector, destination } = this;\n    let result: R;\n    try {\n      result = resultSelector(outerValue, innerValue, outerIndex, innerIndex);\n    } catch (err) {\n      destination.error(err);\n      return;\n    }\n\n    destination.next(result);\n  }\n\n  notifyError(err: any): void {\n    this.destination.error(err);\n  }\n\n  notifyComplete(innerSub: Subscription): void {\n    const buffer = this.buffer;\n    this.remove(innerSub);\n    this.active--;\n    if (buffer.length > 0) {\n      this._next(buffer.shift());\n    } else if (this.active === 0 && this.hasCompleted) {\n      this.destination.complete();\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { ArgumentOutOfRangeError } from '../util/ArgumentOutOfRangeError';\nimport { EmptyObservable } from '../observable/EmptyObservable';\nimport { Observable } from '../Observable';\nimport { TeardownLogic } from '../Subscription';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Emits only the last `count` values emitted by the source Observable.\n *\n * <span class=\"informal\">Remembers the latest `count` values, then emits those\n * only when the source completes.</span>\n *\n * <img src=\"./img/takeLast.png\" width=\"100%\">\n *\n * `takeLast` returns an Observable that emits at most the last `count` values\n * emitted by the source Observable. If the source emits fewer than `count`\n * values then all of its values are emitted. This operator must wait until the\n * `complete` notification emission from the source in order to emit the `next`\n * values on the output Observable, because otherwise it is impossible to know\n * whether or not more values will be emitted on the source. For this reason,\n * all values are emitted synchronously, followed by the complete notification.\n *\n * @example <caption>Take the last 3 values of an Observable with many values</caption>\n * var many = Rx.Observable.range(1, 100);\n * var lastThree = many.takeLast(3);\n * lastThree.subscribe(x => console.log(x));\n *\n * @see {@link take}\n * @see {@link takeUntil}\n * @see {@link takeWhile}\n * @see {@link skip}\n *\n * @throws {ArgumentOutOfRangeError} When using `takeLast(i)`, it delivers an\n * ArgumentOutOrRangeError to the Observer's `error` callback if `i < 0`.\n *\n * @param {number} count The maximum number of values to emit from the end of\n * the sequence of values emitted by the source Observable.\n * @return {Observable<T>} An Observable that emits at most the last count\n * values emitted by the source Observable.\n * @method takeLast\n * @owner Observable\n */\nexport function takeLast<T>(count: number): MonoTypeOperatorFunction<T> {\n  return function takeLastOperatorFunction(source: Observable<T>): Observable<T> {\n    if (count === 0) {\n      return new EmptyObservable<T>();\n    } else {\n      return source.lift(new TakeLastOperator(count));\n    }\n  };\n}\n\nclass TakeLastOperator<T> implements Operator<T, T> {\n  constructor(private total: number) {\n    if (this.total < 0) {\n      throw new ArgumentOutOfRangeError;\n    }\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new TakeLastSubscriber(subscriber, this.total));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass TakeLastSubscriber<T> extends Subscriber<T> {\n  private ring: Array<T> = new Array();\n  private count: number = 0;\n\n  constructor(destination: Subscriber<T>, private total: number) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    const ring = this.ring;\n    const total = this.total;\n    const count = this.count++;\n\n    if (ring.length < total) {\n      ring.push(value);\n    } else {\n      const index = count % total;\n      ring[index] = value;\n    }\n  }\n\n  protected _complete(): void {\n    const destination = this.destination;\n    let count = this.count;\n\n    if (count > 0) {\n      const total = this.count >= this.total ? this.total : this.count;\n      const ring  = this.ring;\n\n      for (let i = 0; i < total; i++) {\n        const idx = (count++) % total;\n        destination.next(ring[idx]);\n      }\n    }\n\n    destination.complete();\n  }\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { OperatorFunction, MonoTypeOperatorFunction } from '../interfaces';\n\n/* tslint:disable:max-line-length */\nexport function scan<T>(accumulator: (acc: T, value: T, index: number) => T, seed?: T): MonoTypeOperatorFunction<T>;\nexport function scan<T>(accumulator: (acc: T[], value: T, index: number) => T[], seed?: T[]): OperatorFunction<T, T[]>;\nexport function scan<T, R>(accumulator: (acc: R, value: T, index: number) => R, seed?: R): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Applies an accumulator function over the source Observable, and returns each\n * intermediate result, with an optional seed value.\n *\n * <span class=\"informal\">It's like {@link reduce}, but emits the current\n * accumulation whenever the source emits a value.</span>\n *\n * <img src=\"./img/scan.png\" width=\"100%\">\n *\n * Combines together all values emitted on the source, using an accumulator\n * function that knows how to join a new source value into the accumulation from\n * the past. Is similar to {@link reduce}, but emits the intermediate\n * accumulations.\n *\n * Returns an Observable that applies a specified `accumulator` function to each\n * item emitted by the source Observable. If a `seed` value is specified, then\n * that value will be used as the initial value for the accumulator. If no seed\n * value is specified, the first item of the source is used as the seed.\n *\n * @example <caption>Count the number of click events</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var ones = clicks.mapTo(1);\n * var seed = 0;\n * var count = ones.scan((acc, one) => acc + one, seed);\n * count.subscribe(x => console.log(x));\n *\n * @see {@link expand}\n * @see {@link mergeScan}\n * @see {@link reduce}\n *\n * @param {function(acc: R, value: T, index: number): R} accumulator\n * The accumulator function called on each source value.\n * @param {T|R} [seed] The initial accumulation value.\n * @return {Observable<R>} An observable of the accumulated values.\n * @method scan\n * @owner Observable\n */\nexport function scan<T, R>(accumulator: (acc: R, value: T, index: number) => R, seed?: T | R): OperatorFunction<T, R> {\n  let hasSeed = false;\n  // providing a seed of `undefined` *should* be valid and trigger\n  // hasSeed! so don't use `seed !== undefined` checks!\n  // For this reason, we have to check it here at the original call site\n  // otherwise inside Operator/Subscriber we won't know if `undefined`\n  // means they didn't provide anything or if they literally provided `undefined`\n  if (arguments.length >= 2) {\n    hasSeed = true;\n  }\n\n  return function scanOperatorFunction(source: Observable<T>): Observable<R> {\n    return source.lift(new ScanOperator(accumulator, seed, hasSeed));\n  };\n}\n\nclass ScanOperator<T, R> implements Operator<T, R> {\n  constructor(private accumulator: (acc: R, value: T, index: number) => R, private seed?: T | R, private hasSeed: boolean = false) {}\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new ScanSubscriber(subscriber, this.accumulator, this.seed, this.hasSeed));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass ScanSubscriber<T, R> extends Subscriber<T> {\n  private index: number = 0;\n\n  get seed(): T | R {\n    return this._seed;\n  }\n\n  set seed(value: T | R) {\n    this.hasSeed = true;\n    this._seed = value;\n  }\n\n  constructor(destination: Subscriber<R>, private accumulator: (acc: R, value: T, index: number) => R, private _seed: T | R,\n              private hasSeed: boolean) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    if (!this.hasSeed) {\n      this.seed = value;\n      this.destination.next(value);\n    } else {\n      return this._tryNext(value);\n    }\n  }\n\n  private _tryNext(value: T): void {\n    const index = this.index++;\n    let result: any;\n    try {\n      result = this.accumulator(<R>this.seed, value, index);\n    } catch (err) {\n      this.destination.error(err);\n    }\n    this.seed = result;\n    this.destination.next(result);\n  }\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Notification } from '../Notification';\nimport { OperatorFunction } from '../interfaces';\n\n/**\n * Represents all of the notifications from the source Observable as `next`\n * emissions marked with their original types within {@link Notification}\n * objects.\n *\n * <span class=\"informal\">Wraps `next`, `error` and `complete` emissions in\n * {@link Notification} objects, emitted as `next` on the output Observable.\n * </span>\n *\n * <img src=\"./img/materialize.png\" width=\"100%\">\n *\n * `materialize` returns an Observable that emits a `next` notification for each\n * `next`, `error`, or `complete` emission of the source Observable. When the\n * source Observable emits `complete`, the output Observable will emit `next` as\n * a Notification of type \"complete\", and then it will emit `complete` as well.\n * When the source Observable emits `error`, the output will emit `next` as a\n * Notification of type \"error\", and then `complete`.\n *\n * This operator is useful for producing metadata of the source Observable, to\n * be consumed as `next` emissions. Use it in conjunction with\n * {@link dematerialize}.\n *\n * @example <caption>Convert a faulty Observable to an Observable of Notifications</caption>\n * var letters = Rx.Observable.of('a', 'b', 13, 'd');\n * var upperCase = letters.map(x => x.toUpperCase());\n * var materialized = upperCase.materialize();\n * materialized.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // - Notification {kind: \"N\", value: \"A\", error: undefined, hasValue: true}\n * // - Notification {kind: \"N\", value: \"B\", error: undefined, hasValue: true}\n * // - Notification {kind: \"E\", value: undefined, error: TypeError:\n * //   x.toUpperCase is not a function at MapSubscriber.letters.map.x\n * //   [as project] (http://1…, hasValue: false}\n *\n * @see {@link Notification}\n * @see {@link dematerialize}\n *\n * @return {Observable<Notification<T>>} An Observable that emits\n * {@link Notification} objects that wrap the original emissions from the source\n * Observable with metadata.\n * @method materialize\n * @owner Observable\n */\nexport function materialize<T>(): OperatorFunction<T, Notification<T>> {\n  return function materializeOperatorFunction(source: Observable<T>) {\n    return source.lift(new MaterializeOperator());\n  };\n}\n\nclass MaterializeOperator<T> implements Operator<T, Notification<T>> {\n  call(subscriber: Subscriber<Notification<T>>, source: any): any {\n    return source.subscribe(new MaterializeSubscriber(subscriber));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass MaterializeSubscriber<T> extends Subscriber<T> {\n  constructor(destination: Subscriber<Notification<T>>) {\n    super(destination);\n  }\n\n  protected _next(value: T) {\n    this.destination.next(Notification.createNext(value));\n  }\n\n  protected _error(err: any) {\n    const destination = this.destination;\n    destination.next(Notification.createError(err));\n    destination.complete();\n  }\n\n  protected _complete() {\n    const destination = this.destination;\n    destination.next(Notification.createComplete());\n    destination.complete();\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { OperatorFunction } from '../interfaces';\n\n/**\n * Emits the given constant value on the output Observable every time the source\n * Observable emits a value.\n *\n * <span class=\"informal\">Like {@link map}, but it maps every source value to\n * the same output value every time.</span>\n *\n * <img src=\"./img/mapTo.png\" width=\"100%\">\n *\n * Takes a constant `value` as argument, and emits that whenever the source\n * Observable emits a value. In other words, ignores the actual source value,\n * and simply uses the emission moment to know when to emit the given `value`.\n *\n * @example <caption>Map every click to the string 'Hi'</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var greetings = clicks.mapTo('Hi');\n * greetings.subscribe(x => console.log(x));\n *\n * @see {@link map}\n *\n * @param {any} value The value to map each source value to.\n * @return {Observable} An Observable that emits the given `value` every time\n * the source Observable emits something.\n * @method mapTo\n * @owner Observable\n */\nexport function mapTo<T, R>(value: R): OperatorFunction<T, R> {\n  return (source: Observable<T>) => source.lift(new MapToOperator(value));\n}\n\nclass MapToOperator<T, R> implements Operator<T, R> {\n\n  value: R;\n\n  constructor(value: R) {\n    this.value = value;\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new MapToSubscriber(subscriber, this.value));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass MapToSubscriber<T, R> extends Subscriber<T> {\n\n  value: R;\n\n  constructor(destination: Subscriber<R>, value: R) {\n    super(destination);\n    this.value = value;\n  }\n\n  protected _next(x: T) {\n    this.destination.next(this.value);\n  }\n}","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { OperatorFunction } from '../interfaces';\n\n/**\n * Applies a given `project` function to each value emitted by the source\n * Observable, and emits the resulting values as an Observable.\n *\n * <span class=\"informal\">Like [Array.prototype.map()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map),\n * it passes each source value through a transformation function to get\n * corresponding output values.</span>\n *\n * <img src=\"./img/map.png\" width=\"100%\">\n *\n * Similar to the well known `Array.prototype.map` function, this operator\n * applies a projection to each value and emits that projection in the output\n * Observable.\n *\n * @example <caption>Map every click to the clientX position of that click</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var positions = clicks.map(ev => ev.clientX);\n * positions.subscribe(x => console.log(x));\n *\n * @see {@link mapTo}\n * @see {@link pluck}\n *\n * @param {function(value: T, index: number): R} project The function to apply\n * to each `value` emitted by the source Observable. The `index` parameter is\n * the number `i` for the i-th emission that has happened since the\n * subscription, starting from the number `0`.\n * @param {any} [thisArg] An optional argument to define what `this` is in the\n * `project` function.\n * @return {Observable<R>} An Observable that emits the values from the source\n * Observable transformed by the given `project` function.\n * @method map\n * @owner Observable\n */\nexport function map<T, R>(project: (value: T, index: number) => R, thisArg?: any): OperatorFunction<T, R> {\n  return function mapOperation(source: Observable<T>): Observable<R> {\n    if (typeof project !== 'function') {\n      throw new TypeError('argument is not a function. Are you looking for `mapTo()`?');\n    }\n    return source.lift(new MapOperator(project, thisArg));\n  };\n}\n\nexport class MapOperator<T, R> implements Operator<T, R> {\n  constructor(private project: (value: T, index: number) => R, private thisArg: any) {\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new MapSubscriber(subscriber, this.project, this.thisArg));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass MapSubscriber<T, R> extends Subscriber<T> {\n  count: number = 0;\n  private thisArg: any;\n\n  constructor(destination: Subscriber<R>,\n              private project: (value: T, index: number) => R,\n              thisArg: any) {\n    super(destination);\n    this.thisArg = thisArg || this;\n  }\n\n  // NOTE: This looks unoptimized, but it's actually purposefully NOT\n  // using try/catch optimizations.\n  protected _next(value: T) {\n    let result: any;\n    try {\n      result = this.project.call(this.thisArg, value, this.count++);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    this.destination.next(result);\n  }\n}\n","import { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { EmptyError } from '../util/EmptyError';\nimport { OperatorFunction, MonoTypeOperatorFunction } from '../interfaces';\n\n/* tslint:disable:max-line-length */\nexport function last<T, S extends T>(predicate: (value: T, index: number, source: Observable<T>) => value is S): OperatorFunction<T, S>;\nexport function last<T, S extends T, R>(predicate: (value: T | S, index: number, source: Observable<T>) => value is S,\n                                        resultSelector: (value: S, index: number) => R, defaultValue?: R): OperatorFunction<T, R>;\nexport function last<T, S extends T>(predicate: (value: T, index: number, source: Observable<T>) => value is S,\n                                     resultSelector: void,\n                                     defaultValue?: S): OperatorFunction<T, S>;\nexport function last<T>(predicate?: (value: T, index: number, source: Observable<T>) => boolean): MonoTypeOperatorFunction<T>;\nexport function last<T, R>(predicate: (value: T, index: number, source: Observable<T>) => boolean,\n                           resultSelector?: (value: T, index: number) => R,\n                           defaultValue?: R): OperatorFunction<T, R>;\nexport function last<T>(predicate: (value: T, index: number, source: Observable<T>) => boolean,\n                        resultSelector: void,\n                        defaultValue?: T): MonoTypeOperatorFunction<T>;\n/* tslint:enable:max-line-length */\n\n/**\n * Returns an Observable that emits only the last item emitted by the source Observable.\n * It optionally takes a predicate function as a parameter, in which case, rather than emitting\n * the last item from the source Observable, the resulting Observable will emit the last item\n * from the source Observable that satisfies the predicate.\n *\n * <img src=\"./img/last.png\" width=\"100%\">\n *\n * @throws {EmptyError} Delivers an EmptyError to the Observer's `error`\n * callback if the Observable completes before any `next` notification was sent.\n * @param {function} predicate - The condition any source emitted item has to satisfy.\n * @return {Observable} An Observable that emits only the last item satisfying the given condition\n * from the source, or an NoSuchElementException if no such items are emitted.\n * @throws - Throws if no items that match the predicate are emitted by the source Observable.\n * @method last\n * @owner Observable\n */\nexport function last<T, R>(predicate?: (value: T, index: number, source: Observable<T>) => boolean,\n                           resultSelector?: ((value: T, index: number) => R) | void,\n                           defaultValue?: R): OperatorFunction<T, T | R> {\n  return (source: Observable<T>) => source.lift(new LastOperator(predicate, resultSelector, defaultValue, source));\n}\n\nclass LastOperator<T, R> implements Operator<T, R> {\n  constructor(private predicate?: (value: T, index: number, source: Observable<T>) => boolean,\n              private resultSelector?: ((value: T, index: number) => R) | void,\n              private defaultValue?: any,\n              private source?: Observable<T>) {\n  }\n\n  call(observer: Subscriber<R>, source: any): any {\n    return source.subscribe(new LastSubscriber(observer, this.predicate, this.resultSelector, this.defaultValue, this.source));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass LastSubscriber<T, R> extends Subscriber<T> {\n  private lastValue: T | R;\n  private hasValue: boolean = false;\n  private index: number = 0;\n\n  constructor(destination: Subscriber<R>,\n              private predicate?: (value: T, index: number, source: Observable<T>) => boolean,\n              private resultSelector?: ((value: T, index: number) => R) | void,\n              private defaultValue?: any,\n              private source?: Observable<T>) {\n    super(destination);\n    if (typeof defaultValue !== 'undefined') {\n      this.lastValue = defaultValue;\n      this.hasValue = true;\n    }\n  }\n\n  protected _next(value: T): void {\n    const index = this.index++;\n    if (this.predicate) {\n      this._tryPredicate(value, index);\n    } else {\n      if (this.resultSelector) {\n        this._tryResultSelector(value, index);\n        return;\n      }\n      this.lastValue = value;\n      this.hasValue = true;\n    }\n  }\n\n  private _tryPredicate(value: T, index: number) {\n    let result: any;\n    try {\n      result = this.predicate(value, index, this.source);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    if (result) {\n      if (this.resultSelector) {\n        this._tryResultSelector(value, index);\n        return;\n      }\n      this.lastValue = value;\n      this.hasValue = true;\n    }\n  }\n\n  private _tryResultSelector(value: T, index: number) {\n    let result: any;\n    try {\n      result = (<any>this).resultSelector(value, index);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    this.lastValue = result;\n    this.hasValue = true;\n  }\n\n  protected _complete(): void {\n    const destination = this.destination;\n    if (this.hasValue) {\n      destination.next(this.lastValue);\n      destination.complete();\n    } else {\n      destination.error(new EmptyError);\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { OperatorFunction } from '../interfaces';\n\nexport function isEmpty<T>(): OperatorFunction<T, boolean> {\n  return (source: Observable<T>) => source.lift(new IsEmptyOperator());\n}\n\nclass IsEmptyOperator implements Operator<any, boolean> {\n  call (observer: Subscriber<boolean>, source: any): any {\n    return source.subscribe(new IsEmptySubscriber(observer));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass IsEmptySubscriber extends Subscriber<any> {\n  constructor(destination: Subscriber<boolean>) {\n    super(destination);\n  }\n\n  private notifyComplete(isEmpty: boolean): void {\n    const destination = this.destination;\n\n    destination.next(isEmpty);\n    destination.complete();\n  }\n\n  protected _next(value: boolean) {\n    this.notifyComplete(false);\n  }\n\n  protected _complete() {\n    this.notifyComplete(true);\n  }\n}\n","import { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { noop } from '../util/noop';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Ignores all items emitted by the source Observable and only passes calls of `complete` or `error`.\n *\n * <img src=\"./img/ignoreElements.png\" width=\"100%\">\n *\n * @return {Observable} An empty Observable that only calls `complete`\n * or `error`, based on which one is called by the source Observable.\n * @method ignoreElements\n * @owner Observable\n */\nexport function ignoreElements<T>(): MonoTypeOperatorFunction<T> {\n  return function ignoreElementsOperatorFunction(source: Observable<T>) {\n    return source.lift(new IgnoreElementsOperator());\n  };\n}\n\nclass IgnoreElementsOperator<T, R> implements Operator<T, R> {\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new IgnoreElementsSubscriber(subscriber));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass IgnoreElementsSubscriber<T> extends Subscriber<T> {\n  protected _next(unused: T): void {\n    noop();\n  }\n}\n","import { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Subject } from '../Subject';\nimport { Map } from '../util/Map';\nimport { FastMap } from '../util/FastMap';\nimport { OperatorFunction } from '../interfaces';\n\n/* tslint:disable:max-line-length */\nexport function groupBy<T, K>(keySelector: (value: T) => K): OperatorFunction<T, GroupedObservable<K, T>>;\nexport function groupBy<T, K>(keySelector: (value: T) => K, elementSelector: void, durationSelector: (grouped: GroupedObservable<K, T>) => Observable<any>): OperatorFunction<T, GroupedObservable<K, T>>;\nexport function groupBy<T, K, R>(keySelector: (value: T) => K, elementSelector?: (value: T) => R, durationSelector?: (grouped: GroupedObservable<K, R>) => Observable<any>): OperatorFunction<T, GroupedObservable<K, R>>;\nexport function groupBy<T, K, R>(keySelector: (value: T) => K, elementSelector?: (value: T) => R, durationSelector?: (grouped: GroupedObservable<K, R>) => Observable<any>, subjectSelector?: () => Subject<R>): OperatorFunction<T, GroupedObservable<K, R>>;\n/* tslint:enable:max-line-length */\n\n/**\n * Groups the items emitted by an Observable according to a specified criterion,\n * and emits these grouped items as `GroupedObservables`, one\n * {@link GroupedObservable} per group.\n *\n * <img src=\"./img/groupBy.png\" width=\"100%\">\n *\n * @example <caption>Group objects by id and return as array</caption>\n * Observable.of<Obj>({id: 1, name: 'aze1'},\n *                    {id: 2, name: 'sf2'},\n *                    {id: 2, name: 'dg2'},\n *                    {id: 1, name: 'erg1'},\n *                    {id: 1, name: 'df1'},\n *                    {id: 2, name: 'sfqfb2'},\n *                    {id: 3, name: 'qfs3'},\n *                    {id: 2, name: 'qsgqsfg2'}\n *     )\n *     .groupBy(p => p.id)\n *     .flatMap( (group$) => group$.reduce((acc, cur) => [...acc, cur], []))\n *     .subscribe(p => console.log(p));\n *\n * // displays:\n * // [ { id: 1, name: 'aze1' },\n * //   { id: 1, name: 'erg1' },\n * //   { id: 1, name: 'df1' } ]\n * //\n * // [ { id: 2, name: 'sf2' },\n * //   { id: 2, name: 'dg2' },\n * //   { id: 2, name: 'sfqfb2' },\n * //   { id: 2, name: 'qsgqsfg2' } ]\n * //\n * // [ { id: 3, name: 'qfs3' } ]\n *\n * @example <caption>Pivot data on the id field</caption>\n * Observable.of<Obj>({id: 1, name: 'aze1'},\n *                    {id: 2, name: 'sf2'},\n *                    {id: 2, name: 'dg2'},\n *                    {id: 1, name: 'erg1'},\n *                    {id: 1, name: 'df1'},\n *                    {id: 2, name: 'sfqfb2'},\n *                    {id: 3, name: 'qfs1'},\n *                    {id: 2, name: 'qsgqsfg2'}\n *                   )\n *     .groupBy(p => p.id, p => p.name)\n *     .flatMap( (group$) => group$.reduce((acc, cur) => [...acc, cur], [\"\" + group$.key]))\n *     .map(arr => ({'id': parseInt(arr[0]), 'values': arr.slice(1)}))\n *     .subscribe(p => console.log(p));\n *\n * // displays:\n * // { id: 1, values: [ 'aze1', 'erg1', 'df1' ] }\n * // { id: 2, values: [ 'sf2', 'dg2', 'sfqfb2', 'qsgqsfg2' ] }\n * // { id: 3, values: [ 'qfs1' ] }\n *\n * @param {function(value: T): K} keySelector A function that extracts the key\n * for each item.\n * @param {function(value: T): R} [elementSelector] A function that extracts the\n * return element for each item.\n * @param {function(grouped: GroupedObservable<K,R>): Observable<any>} [durationSelector]\n * A function that returns an Observable to determine how long each group should\n * exist.\n * @return {Observable<GroupedObservable<K,R>>} An Observable that emits\n * GroupedObservables, each of which corresponds to a unique key value and each\n * of which emits those items from the source Observable that share that key\n * value.\n * @method groupBy\n * @owner Observable\n */\nexport function groupBy<T, K, R>(keySelector: (value: T) => K,\n                                 elementSelector?: ((value: T) => R) | void,\n                                 durationSelector?: (grouped: GroupedObservable<K, R>) => Observable<any>,\n                                 subjectSelector?: () => Subject<R>): OperatorFunction<T, GroupedObservable<K, R>> {\n  return (source: Observable<T>) =>\n    source.lift(new GroupByOperator(keySelector, elementSelector, durationSelector, subjectSelector));\n}\n\nexport interface RefCountSubscription {\n  count: number;\n  unsubscribe: () => void;\n  closed: boolean;\n  attemptedToUnsubscribe: boolean;\n}\n\nclass GroupByOperator<T, K, R> implements Operator<T, GroupedObservable<K, R>> {\n  constructor(private keySelector: (value: T) => K,\n              private elementSelector?: ((value: T) => R) | void,\n              private durationSelector?: (grouped: GroupedObservable<K, R>) => Observable<any>,\n              private subjectSelector?: () => Subject<R>) {\n  }\n\n  call(subscriber: Subscriber<GroupedObservable<K, R>>, source: any): any {\n    return source.subscribe(new GroupBySubscriber(\n      subscriber, this.keySelector, this.elementSelector, this.durationSelector, this.subjectSelector\n    ));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass GroupBySubscriber<T, K, R> extends Subscriber<T> implements RefCountSubscription {\n  private groups: Map<K, Subject<T|R>> = null;\n  public attemptedToUnsubscribe: boolean = false;\n  public count: number = 0;\n\n  constructor(destination: Subscriber<GroupedObservable<K, R>>,\n              private keySelector: (value: T) => K,\n              private elementSelector?: ((value: T) => R) | void,\n              private durationSelector?: (grouped: GroupedObservable<K, R>) => Observable<any>,\n              private subjectSelector?: () => Subject<R>) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    let key: K;\n    try {\n      key = this.keySelector(value);\n    } catch (err) {\n      this.error(err);\n      return;\n    }\n\n    this._group(value, key);\n  }\n\n  private _group(value: T, key: K) {\n    let groups = this.groups;\n\n    if (!groups) {\n      groups = this.groups = typeof key === 'string' ? new FastMap() : new Map();\n    }\n\n    let group = groups.get(key);\n\n    let element: R;\n    if (this.elementSelector) {\n      try {\n        element = this.elementSelector(value);\n      } catch (err) {\n        this.error(err);\n      }\n    } else {\n      element = <any>value;\n    }\n\n    if (!group) {\n      group = this.subjectSelector ? this.subjectSelector() : new Subject<R>();\n      groups.set(key, group);\n      const groupedObservable = new GroupedObservable(key, group, this);\n      this.destination.next(groupedObservable);\n      if (this.durationSelector) {\n        let duration: any;\n        try {\n          duration = this.durationSelector(new GroupedObservable<K, R>(key, <Subject<R>>group));\n        } catch (err) {\n          this.error(err);\n          return;\n        }\n        this.add(duration.subscribe(new GroupDurationSubscriber(key, group, this)));\n      }\n    }\n\n    if (!group.closed) {\n      group.next(element);\n    }\n  }\n\n  protected _error(err: any): void {\n    const groups = this.groups;\n    if (groups) {\n      groups.forEach((group, key) => {\n        group.error(err);\n      });\n\n      groups.clear();\n    }\n    this.destination.error(err);\n  }\n\n  protected _complete(): void {\n    const groups = this.groups;\n    if (groups) {\n      groups.forEach((group, key) => {\n        group.complete();\n      });\n\n      groups.clear();\n    }\n    this.destination.complete();\n  }\n\n  removeGroup(key: K): void {\n    this.groups.delete(key);\n  }\n\n  unsubscribe() {\n    if (!this.closed) {\n      this.attemptedToUnsubscribe = true;\n      if (this.count === 0) {\n        super.unsubscribe();\n      }\n    }\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass GroupDurationSubscriber<K, T> extends Subscriber<T> {\n  constructor(private key: K,\n              private group: Subject<T>,\n              private parent: GroupBySubscriber<any, K, T>) {\n    super(group);\n  }\n\n  protected _next(value: T): void {\n    this.complete();\n  }\n\n  /** @deprecated internal use only */ _unsubscribe() {\n    const { parent, key } = this;\n    this.key = this.parent = null;\n    if (parent) {\n      parent.removeGroup(key);\n    }\n  }\n}\n\n/**\n * An Observable representing values belonging to the same group represented by\n * a common key. The values emitted by a GroupedObservable come from the source\n * Observable. The common key is available as the field `key` on a\n * GroupedObservable instance.\n *\n * @class GroupedObservable<K, T>\n */\nexport class GroupedObservable<K, T> extends Observable<T> {\n  constructor(public key: K,\n              private groupSubject: Subject<T>,\n              private refCountSubscription?: RefCountSubscription) {\n    super();\n  }\n\n  /** @deprecated internal use only */ _subscribe(subscriber: Subscriber<T>) {\n    const subscription = new Subscription();\n    const {refCountSubscription, groupSubject} = this;\n    if (refCountSubscription && !refCountSubscription.closed) {\n      subscription.add(new InnerRefCountSubscription(refCountSubscription));\n    }\n    subscription.add(groupSubject.subscribe(subscriber));\n    return subscription;\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass InnerRefCountSubscription extends Subscription {\n  constructor(private parent: RefCountSubscription) {\n    super();\n    parent.count++;\n  }\n\n  unsubscribe() {\n    const parent = this.parent;\n    if (!parent.closed && !this.closed) {\n      super.unsubscribe();\n      parent.count -= 1;\n      if (parent.count === 0 && parent.attemptedToUnsubscribe) {\n        parent.unsubscribe();\n      }\n    }\n  }\n}\n","export class FastMap {\n  private values: Object = {};\n\n  delete(key: string): boolean {\n    this.values[key] = null;\n    return true;\n  }\n\n  set(key: string, value: any): FastMap {\n    this.values[key] = value;\n    return this;\n  }\n\n  get(key: string): any {\n    return this.values[key];\n  }\n\n  forEach(cb: (value: any, key: any) => void, thisArg?: any): void {\n    const values = this.values;\n    for (let key in values) {\n      if (values.hasOwnProperty(key) && values[key] !== null) {\n        cb.call(thisArg, values[key], key);\n      }\n    }\n  }\n\n  clear(): void {\n    this.values = {};\n  }\n}","import { root } from './root';\nimport { MapPolyfill } from './MapPolyfill';\n\nexport const Map = root.Map || (() => MapPolyfill)();","export class MapPolyfill {\n  public size = 0;\n  private _values: any[] = [];\n  private _keys: any[] = [];\n\n  get(key: any) {\n    const i = this._keys.indexOf(key);\n    return i === -1 ? undefined : this._values[i];\n  }\n\n  set(key: any, value: any) {\n    const i = this._keys.indexOf(key);\n    if (i === -1) {\n      this._keys.push(key);\n      this._values.push(value);\n      this.size++;\n    } else {\n      this._values[i] = value;\n    }\n    return this;\n  }\n\n  delete(key: any): boolean {\n    const i = this._keys.indexOf(key);\n    if (i === -1) { return false; }\n    this._values.splice(i, 1);\n    this._keys.splice(i, 1);\n    this.size--;\n    return true;\n  }\n\n  clear(): void {\n    this._keys.length = 0;\n    this._values.length = 0;\n    this.size = 0;\n  }\n\n  forEach(cb: Function, thisArg: any): void {\n    for (let i = 0; i < this.size; i++) {\n      cb.call(thisArg, this._values[i], this._keys[i]);\n    }\n  }\n}","import { Operator } from './Operator';\nimport { Observer } from './Observer';\nimport { Observable } from './Observable';\nimport { Subscriber } from './Subscriber';\nimport { ISubscription, Subscription, TeardownLogic } from './Subscription';\nimport { ObjectUnsubscribedError } from './util/ObjectUnsubscribedError';\nimport { SubjectSubscription } from './SubjectSubscription';\nimport { rxSubscriber as rxSubscriberSymbol } from './symbol/rxSubscriber';\n\n/**\n * @class SubjectSubscriber<T>\n */\nexport class SubjectSubscriber<T> extends Subscriber<T> {\n  constructor(protected destination: Subject<T>) {\n    super(destination);\n  }\n}\n\n/**\n * @class Subject<T>\n */\nexport class Subject<T> extends Observable<T> implements ISubscription {\n\n  [rxSubscriberSymbol]() {\n    return new SubjectSubscriber(this);\n  }\n\n  observers: Observer<T>[] = [];\n\n  closed = false;\n\n  isStopped = false;\n\n  hasError = false;\n\n  thrownError: any = null;\n\n  constructor() {\n    super();\n  }\n\n  static create: Function = <T>(destination: Observer<T>, source: Observable<T>): AnonymousSubject<T> => {\n    return new AnonymousSubject<T>(destination, source);\n  }\n\n  lift<R>(operator: Operator<T, R>): Observable<R> {\n    const subject = new AnonymousSubject(this, this);\n    subject.operator = <any>operator;\n    return <any>subject;\n  }\n\n  next(value?: T) {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    }\n    if (!this.isStopped) {\n      const { observers } = this;\n      const len = observers.length;\n      const copy = observers.slice();\n      for (let i = 0; i < len; i++) {\n        copy[i].next(value);\n      }\n    }\n  }\n\n  error(err: any) {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    }\n    this.hasError = true;\n    this.thrownError = err;\n    this.isStopped = true;\n    const { observers } = this;\n    const len = observers.length;\n    const copy = observers.slice();\n    for (let i = 0; i < len; i++) {\n      copy[i].error(err);\n    }\n    this.observers.length = 0;\n  }\n\n  complete() {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    }\n    this.isStopped = true;\n    const { observers } = this;\n    const len = observers.length;\n    const copy = observers.slice();\n    for (let i = 0; i < len; i++) {\n      copy[i].complete();\n    }\n    this.observers.length = 0;\n  }\n\n  unsubscribe() {\n    this.isStopped = true;\n    this.closed = true;\n    this.observers = null;\n  }\n\n  protected _trySubscribe(subscriber: Subscriber<T>): TeardownLogic {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    } else {\n      return super._trySubscribe(subscriber);\n    }\n  }\n\n  /** @deprecated internal use only */ _subscribe(subscriber: Subscriber<T>): Subscription {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    } else if (this.hasError) {\n      subscriber.error(this.thrownError);\n      return Subscription.EMPTY;\n    } else if (this.isStopped) {\n      subscriber.complete();\n      return Subscription.EMPTY;\n    } else {\n      this.observers.push(subscriber);\n      return new SubjectSubscription(this, subscriber);\n    }\n  }\n\n  asObservable(): Observable<T> {\n    const observable = new Observable<T>();\n    (<any>observable).source = this;\n    return observable;\n  }\n}\n\n/**\n * @class AnonymousSubject<T>\n */\nexport class AnonymousSubject<T> extends Subject<T> {\n  constructor(protected destination?: Observer<T>, source?: Observable<T>) {\n    super();\n    this.source = source;\n  }\n\n  next(value: T) {\n    const { destination } = this;\n    if (destination && destination.next) {\n      destination.next(value);\n    }\n  }\n\n  error(err: any) {\n    const { destination } = this;\n    if (destination && destination.error) {\n      this.destination.error(err);\n    }\n  }\n\n  complete() {\n    const { destination } = this;\n    if (destination && destination.complete) {\n      this.destination.complete();\n    }\n  }\n\n  /** @deprecated internal use only */ _subscribe(subscriber: Subscriber<T>): Subscription {\n    const { source } = this;\n    if (source) {\n      return this.source.subscribe(subscriber);\n    } else {\n      return Subscription.EMPTY;\n    }\n  }\n}\n","import { Subject } from './Subject';\nimport { Observer } from './Observer';\nimport { Subscription } from './Subscription';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class SubjectSubscription<T> extends Subscription {\n  closed: boolean = false;\n\n  constructor(public subject: Subject<T>, public subscriber: Observer<T>) {\n    super();\n  }\n\n  unsubscribe() {\n    if (this.closed) {\n      return;\n    }\n\n    this.closed = true;\n\n    const subject = this.subject;\n    const observers = subject.observers;\n\n    this.subject = null;\n\n    if (!observers || observers.length === 0 || subject.isStopped || subject.closed) {\n      return;\n    }\n\n    const subscriberIndex = observers.indexOf(this.subscriber);\n\n    if (subscriberIndex !== -1) {\n      observers.splice(subscriberIndex, 1);\n    }\n  }\n}\n","/**\n * An error thrown when an action is invalid because the object has been\n * unsubscribed.\n *\n * @see {@link Subject}\n * @see {@link BehaviorSubject}\n *\n * @class ObjectUnsubscribedError\n */\nexport class ObjectUnsubscribedError extends Error {\n  constructor() {\n    const err: any = super('object unsubscribed');\n    (<any> this).name = err.name = 'ObjectUnsubscribedError';\n    (<any> this).stack = err.stack;\n    (<any> this).message = err.message;\n  }\n}\n","import { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { EmptyError } from '../util/EmptyError';\nimport { OperatorFunction, MonoTypeOperatorFunction } from '../interfaces';\n/* tslint:disable:max-line-length */\nexport function first<T, S extends T>(predicate: (value: T, index: number, source: Observable<T>) => value is S): OperatorFunction<T, S>;\nexport function first<T, S extends T, R>(predicate: (value: T | S, index: number, source: Observable<T>) => value is S,\n                                         resultSelector: (value: S, index: number) => R, defaultValue?: R): OperatorFunction<T, R>;\nexport function first<T, S extends T>(predicate: (value: T, index: number, source: Observable<T>) => value is S,\n                                      resultSelector: void,\n                                      defaultValue?: S): OperatorFunction<T, S>;\nexport function first<T>(predicate?: (value: T, index: number, source: Observable<T>) => boolean): MonoTypeOperatorFunction<T>;\nexport function first<T, R>(predicate: (value: T, index: number, source: Observable<T>) => boolean,\n                            resultSelector?: (value: T, index: number) => R,\n                            defaultValue?: R): OperatorFunction<T, R>;\nexport function first<T>(predicate: (value: T, index: number, source: Observable<T>) => boolean,\n                         resultSelector: void,\n                         defaultValue?: T): MonoTypeOperatorFunction<T>;\n\n/**\n * Emits only the first value (or the first value that meets some condition)\n * emitted by the source Observable.\n *\n * <span class=\"informal\">Emits only the first value. Or emits only the first\n * value that passes some test.</span>\n *\n * <img src=\"./img/first.png\" width=\"100%\">\n *\n * If called with no arguments, `first` emits the first value of the source\n * Observable, then completes. If called with a `predicate` function, `first`\n * emits the first value of the source that matches the specified condition. It\n * may also take a `resultSelector` function to produce the output value from\n * the input value, and a `defaultValue` to emit in case the source completes\n * before it is able to emit a valid value. Throws an error if `defaultValue`\n * was not provided and a matching element is not found.\n *\n * @example <caption>Emit only the first click that happens on the DOM</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.first();\n * result.subscribe(x => console.log(x));\n *\n * @example <caption>Emits the first click that happens on a DIV</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.first(ev => ev.target.tagName === 'DIV');\n * result.subscribe(x => console.log(x));\n *\n * @see {@link filter}\n * @see {@link find}\n * @see {@link take}\n *\n * @throws {EmptyError} Delivers an EmptyError to the Observer's `error`\n * callback if the Observable completes before any `next` notification was sent.\n *\n * @param {function(value: T, index: number, source: Observable<T>): boolean} [predicate]\n * An optional function called with each item to test for condition matching.\n * @param {function(value: T, index: number): R} [resultSelector] A function to\n * produce the value on the output Observable based on the values\n * and the indices of the source Observable. The arguments passed to this\n * function are:\n * - `value`: the value that was emitted on the source.\n * - `index`: the \"index\" of the value from the source.\n * @param {R} [defaultValue] The default value emitted in case no valid value\n * was found on the source.\n * @return {Observable<T|R>} An Observable of the first item that matches the\n * condition.\n * @method first\n * @owner Observable\n */\nexport function first<T, R>(predicate?: (value: T, index: number, source: Observable<T>) => boolean,\n                            resultSelector?: ((value: T, index: number) => R) | void,\n                            defaultValue?: R): OperatorFunction<T, T | R> {\n  return (source: Observable<T>) => source.lift(new FirstOperator(predicate, resultSelector, defaultValue, source));\n}\n\nclass FirstOperator<T, R> implements Operator<T, R> {\n  constructor(private predicate?: (value: T, index: number, source: Observable<T>) => boolean,\n              private resultSelector?: ((value: T, index: number) => R) | void,\n              private defaultValue?: any,\n              private source?: Observable<T>) {\n  }\n\n  call(observer: Subscriber<R>, source: any): any {\n    return source.subscribe(new FirstSubscriber(observer, this.predicate, this.resultSelector, this.defaultValue, this.source));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass FirstSubscriber<T, R> extends Subscriber<T> {\n  private index: number = 0;\n  private hasCompleted: boolean = false;\n  private _emitted: boolean = false;\n\n  constructor(destination: Subscriber<R>,\n              private predicate?: (value: T, index: number, source: Observable<T>) => boolean,\n              private resultSelector?: ((value: T, index: number) => R) | void,\n              private defaultValue?: any,\n              private source?: Observable<T>) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    const index = this.index++;\n    if (this.predicate) {\n      this._tryPredicate(value, index);\n    } else {\n      this._emit(value, index);\n    }\n  }\n\n  private _tryPredicate(value: T, index: number) {\n    let result: any;\n    try {\n      result = this.predicate(value, index, this.source);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    if (result) {\n      this._emit(value, index);\n    }\n  }\n\n  private _emit(value: any, index: number) {\n    if (this.resultSelector) {\n      this._tryResultSelector(value, index);\n      return;\n    }\n    this._emitFinal(value);\n  }\n\n  private _tryResultSelector(value: T, index: number) {\n    let result: any;\n    try {\n      result = (<any>this).resultSelector(value, index);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    this._emitFinal(result);\n  }\n\n  private _emitFinal(value: any) {\n    const destination = this.destination;\n    if (!this._emitted) {\n      this._emitted = true;\n      destination.next(value);\n      destination.complete();\n      this.hasCompleted = true;\n    }\n  }\n\n  protected _complete(): void {\n    const destination = this.destination;\n    if (!this.hasCompleted && typeof this.defaultValue !== 'undefined') {\n      destination.next(this.defaultValue);\n      destination.complete();\n    } else if (!this.hasCompleted) {\n      destination.error(new EmptyError);\n    }\n  }\n}\n","/**\n * An error thrown when an Observable or a sequence was queried but has no\n * elements.\n *\n * @see {@link first}\n * @see {@link last}\n * @see {@link single}\n *\n * @class EmptyError\n */\nexport class EmptyError extends Error {\n  constructor() {\n    const err: any = super('no elements in sequence');\n    (<any> this).name = err.name = 'EmptyError';\n    (<any> this).stack = err.stack;\n    (<any> this).message = err.message;\n  }\n}\n","import { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { OperatorFunction, MonoTypeOperatorFunction } from '../interfaces';\n\nexport function find<T, S extends T>(predicate: (value: T, index: number, source: Observable<T>) => value is S,\n                                     thisArg?: any): OperatorFunction<T, S>;\nexport function find<T, S extends T>(predicate: (value: T, index: number) => value is S,\n                                     thisArg?: any): OperatorFunction<T, S>;\nexport function find<T>(predicate: (value: T, index: number, source: Observable<T>) => boolean,\n                        thisArg?: any): MonoTypeOperatorFunction<T>;\nexport function find<T>(predicate: (value: T, index: number) => boolean,\n                        thisArg?: any): MonoTypeOperatorFunction<T>;\n/**\n * Emits only the first value emitted by the source Observable that meets some\n * condition.\n *\n * <span class=\"informal\">Finds the first value that passes some test and emits\n * that.</span>\n *\n * <img src=\"./img/find.png\" width=\"100%\">\n *\n * `find` searches for the first item in the source Observable that matches the\n * specified condition embodied by the `predicate`, and returns the first\n * occurrence in the source. Unlike {@link first}, the `predicate` is required\n * in `find`, and does not emit an error if a valid value is not found.\n *\n * @example <caption>Find and emit the first click that happens on a DIV element</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.find(ev => ev.target.tagName === 'DIV');\n * result.subscribe(x => console.log(x));\n *\n * @see {@link filter}\n * @see {@link first}\n * @see {@link findIndex}\n * @see {@link take}\n *\n * @param {function(value: T, index: number, source: Observable<T>): boolean} predicate\n * A function called with each item to test for condition matching.\n * @param {any} [thisArg] An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return {Observable<T>} An Observable of the first item that matches the\n * condition.\n * @method find\n * @owner Observable\n */\nexport function find<T>(predicate: (value: T, index: number, source: Observable<T>) => boolean,\n                        thisArg?: any): MonoTypeOperatorFunction<T> {\n  if (typeof predicate !== 'function') {\n    throw new TypeError('predicate is not a function');\n  }\n  return (source: Observable<T>) => source.lift(new FindValueOperator(predicate, source, false, thisArg));\n}\n\nexport class FindValueOperator<T> implements Operator<T, T> {\n  constructor(private predicate: (value: T, index: number, source: Observable<T>) => boolean,\n              private source: Observable<T>,\n              private yieldIndex: boolean,\n              private thisArg?: any) {\n  }\n\n  call(observer: Subscriber<T>, source: any): any {\n    return source.subscribe(new FindValueSubscriber(observer, this.predicate, this.source, this.yieldIndex, this.thisArg));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class FindValueSubscriber<T> extends Subscriber<T> {\n  private index: number = 0;\n\n  constructor(destination: Subscriber<T>,\n              private predicate: (value: T, index: number, source: Observable<T>) => boolean,\n              private source: Observable<T>,\n              private yieldIndex: boolean,\n              private thisArg?: any) {\n    super(destination);\n  }\n\n  private notifyComplete(value: any): void {\n    const destination = this.destination;\n\n    destination.next(value);\n    destination.complete();\n  }\n\n  protected _next(value: T): void {\n    const { predicate, thisArg } = this;\n    const index = this.index++;\n    try {\n      const result = predicate.call(thisArg || this, value, index, this.source);\n      if (result) {\n        this.notifyComplete(this.yieldIndex ? index : value);\n      }\n    } catch (err) {\n      this.destination.error(err);\n    }\n  }\n\n  protected _complete(): void {\n    this.notifyComplete(this.yieldIndex ? -1 : undefined);\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription, TeardownLogic } from '../Subscription';\nimport { Observable } from '../Observable';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Returns an Observable that mirrors the source Observable, but will call a specified function when\n * the source terminates on complete or error.\n * @param {function} callback Function to be called when source terminates.\n * @return {Observable} An Observable that mirrors the source, but will call the specified function on termination.\n * @method finally\n * @owner Observable\n */\nexport function finalize<T>(callback: () => void): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new FinallyOperator(callback));\n}\n\nclass FinallyOperator<T> implements Operator<T, T> {\n  constructor(private callback: () => void) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new FinallySubscriber(subscriber, this.callback));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass FinallySubscriber<T> extends Subscriber<T> {\n  constructor(destination: Subscriber<T>, callback: () => void) {\n    super(destination);\n    this.add(new Subscription(callback));\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { TeardownLogic } from '../Subscription';\nimport { OperatorFunction, MonoTypeOperatorFunction } from '../interfaces';\n\n/* tslint:disable:max-line-length */\nexport function filter<T, S extends T>(predicate: (value: T, index: number) => value is S,\n                                       thisArg?: any): OperatorFunction<T, S>;\nexport function filter<T>(predicate: (value: T, index: number) => boolean,\n                          thisArg?: any): MonoTypeOperatorFunction<T>;\n/* tslint:enable:max-line-length */\n\n/**\n * Filter items emitted by the source Observable by only emitting those that\n * satisfy a specified predicate.\n *\n * <span class=\"informal\">Like\n * [Array.prototype.filter()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter),\n * it only emits a value from the source if it passes a criterion function.</span>\n *\n * <img src=\"./img/filter.png\" width=\"100%\">\n *\n * Similar to the well-known `Array.prototype.filter` method, this operator\n * takes values from the source Observable, passes them through a `predicate`\n * function and only emits those values that yielded `true`.\n *\n * @example <caption>Emit only click events whose target was a DIV element</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var clicksOnDivs = clicks.filter(ev => ev.target.tagName === 'DIV');\n * clicksOnDivs.subscribe(x => console.log(x));\n *\n * @see {@link distinct}\n * @see {@link distinctUntilChanged}\n * @see {@link distinctUntilKeyChanged}\n * @see {@link ignoreElements}\n * @see {@link partition}\n * @see {@link skip}\n *\n * @param {function(value: T, index: number): boolean} predicate A function that\n * evaluates each value emitted by the source Observable. If it returns `true`,\n * the value is emitted, if `false` the value is not passed to the output\n * Observable. The `index` parameter is the number `i` for the i-th source\n * emission that has happened since the subscription, starting from the number\n * `0`.\n * @param {any} [thisArg] An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return {Observable} An Observable of values from the source that were\n * allowed by the `predicate` function.\n * @method filter\n * @owner Observable\n */\nexport function filter<T>(predicate: (value: T, index: number) => boolean,\n                          thisArg?: any): MonoTypeOperatorFunction<T> {\n  return function filterOperatorFunction(source: Observable<T>): Observable<T> {\n    return source.lift(new FilterOperator(predicate, thisArg));\n  };\n}\n\nclass FilterOperator<T> implements Operator<T, T> {\n  constructor(private predicate: (value: T, index: number) => boolean,\n              private thisArg?: any) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new FilterSubscriber(subscriber, this.predicate, this.thisArg));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass FilterSubscriber<T> extends Subscriber<T> {\n\n  count: number = 0;\n\n  constructor(destination: Subscriber<T>,\n              private predicate: (value: T, index: number) => boolean,\n              private thisArg: any) {\n    super(destination);\n  }\n\n  // the try catch block below is left specifically for\n  // optimization and perf reasons. a tryCatcher is not necessary here.\n  protected _next(value: T) {\n    let result: any;\n    try {\n      result = this.predicate.call(this.thisArg, value, this.count++);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    if (result) {\n      this.destination.next(value);\n    }\n  }\n}","import { Observable } from '../Observable';\nimport { IScheduler } from '../Scheduler';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { tryCatch } from '../util/tryCatch';\nimport { errorObject } from '../util/errorObject';\nimport { Subscription } from '../Subscription';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { MonoTypeOperatorFunction, OperatorFunction } from '../interfaces';\n\n/* tslint:disable:max-line-length */\nexport function expand<T>(project: (value: T, index: number) => Observable<T>, concurrent?: number, scheduler?: IScheduler): MonoTypeOperatorFunction<T>;\nexport function expand<T, R>(project: (value: T, index: number) => Observable<R>, concurrent?: number, scheduler?: IScheduler): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Recursively projects each source value to an Observable which is merged in\n * the output Observable.\n *\n * <span class=\"informal\">It's similar to {@link mergeMap}, but applies the\n * projection function to every source value as well as every output value.\n * It's recursive.</span>\n *\n * <img src=\"./img/expand.png\" width=\"100%\">\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an Observable, and then merging those resulting Observables and\n * emitting the results of this merger. *Expand* will re-emit on the output\n * Observable every source value. Then, each output value is given to the\n * `project` function which returns an inner Observable to be merged on the\n * output Observable. Those output values resulting from the projection are also\n * given to the `project` function to produce new output values. This is how\n * *expand* behaves recursively.\n *\n * @example <caption>Start emitting the powers of two on every click, at most 10 of them</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var powersOfTwo = clicks\n *   .mapTo(1)\n *   .expand(x => Rx.Observable.of(2 * x).delay(1000))\n *   .take(10);\n * powersOfTwo.subscribe(x => console.log(x));\n *\n * @see {@link mergeMap}\n * @see {@link mergeScan}\n *\n * @param {function(value: T, index: number) => Observable} project A function\n * that, when applied to an item emitted by the source or the output Observable,\n * returns an Observable.\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @param {Scheduler} [scheduler=null] The IScheduler to use for subscribing to\n * each projected inner Observable.\n * @return {Observable} An Observable that emits the source values and also\n * result of applying the projection function to each value emitted on the\n * output Observable and and merging the results of the Observables obtained\n * from this transformation.\n * @method expand\n * @owner Observable\n */\nexport function expand<T, R>(project: (value: T, index: number) => Observable<R>,\n                             concurrent: number = Number.POSITIVE_INFINITY,\n                             scheduler: IScheduler = undefined): OperatorFunction<T, R> {\n  concurrent = (concurrent || 0) < 1 ? Number.POSITIVE_INFINITY : concurrent;\n\n  return (source: Observable<T>) => source.lift(new ExpandOperator(project, concurrent, scheduler));\n}\n\nexport class ExpandOperator<T, R> implements Operator<T, R> {\n  constructor(private project: (value: T, index: number) => Observable<R>,\n              private concurrent: number,\n              private scheduler: IScheduler) {\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new ExpandSubscriber(subscriber, this.project, this.concurrent, this.scheduler));\n  }\n}\n\ninterface DispatchArg<T, R> {\n  subscriber: ExpandSubscriber<T, R>;\n  result: Observable<R>;\n  value: any;\n  index: number;\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class ExpandSubscriber<T, R> extends OuterSubscriber<T, R> {\n  private index: number = 0;\n  private active: number = 0;\n  private hasCompleted: boolean = false;\n  private buffer: any[];\n\n  constructor(destination: Subscriber<R>,\n              private project: (value: T, index: number) => Observable<R>,\n              private concurrent: number,\n              private scheduler: IScheduler) {\n    super(destination);\n    if (concurrent < Number.POSITIVE_INFINITY) {\n      this.buffer = [];\n    }\n  }\n\n  private static dispatch<T, R>(arg: DispatchArg<T, R>): void {\n    const {subscriber, result, value, index} = arg;\n    subscriber.subscribeToProjection(result, value, index);\n  }\n\n  protected _next(value: any): void {\n    const destination = this.destination;\n\n    if (destination.closed) {\n      this._complete();\n      return;\n    }\n\n    const index = this.index++;\n    if (this.active < this.concurrent) {\n      destination.next(value);\n      let result = tryCatch(this.project)(value, index);\n      if (result === errorObject) {\n        destination.error(errorObject.e);\n      } else if (!this.scheduler) {\n        this.subscribeToProjection(result, value, index);\n      } else {\n        const state: DispatchArg<T, R> = { subscriber: this, result, value, index };\n        this.add(this.scheduler.schedule(ExpandSubscriber.dispatch, 0, state));\n      }\n    } else {\n      this.buffer.push(value);\n    }\n  }\n\n  private subscribeToProjection(result: any, value: T, index: number): void {\n    this.active++;\n    this.add(subscribeToResult<T, R>(this, result, value, index));\n  }\n\n  protected _complete(): void {\n    this.hasCompleted = true;\n    if (this.hasCompleted && this.active === 0) {\n      this.destination.complete();\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this._next(innerValue);\n  }\n\n  notifyComplete(innerSub: Subscription): void {\n    const buffer = this.buffer;\n    this.remove(innerSub);\n    this.active--;\n    if (buffer && buffer.length > 0) {\n      this._next(buffer.shift());\n    }\n    if (this.hasCompleted && this.active === 0) {\n      this.destination.complete();\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Observable, ObservableInput } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OperatorFunction } from '../interfaces';\n\n/* tslint:disable:max-line-length */\nexport function exhaustMap<T, R>(project: (value: T, index: number) => ObservableInput<R>): OperatorFunction<T, R>;\nexport function exhaustMap<T, I, R>(project: (value: T, index: number) => ObservableInput<I>, resultSelector: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable only if the previous projected Observable has completed.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link exhaust}.</span>\n *\n * <img src=\"./img/exhaustMap.png\" width=\"100%\">\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an (so-called \"inner\") Observable. When it projects a source value to\n * an Observable, the output Observable begins emitting the items emitted by\n * that projected Observable. However, `exhaustMap` ignores every new projected\n * Observable if the previous projected Observable has not yet completed. Once\n * that one completes, it will accept and flatten the next projected Observable\n * and repeat this process.\n *\n * @example <caption>Run a finite timer for each click, only if there is no currently active timer</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.exhaustMap((ev) => Rx.Observable.interval(1000).take(5));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link concatMap}\n * @see {@link exhaust}\n * @see {@link mergeMap}\n * @see {@link switchMap}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\n * A function to produce the value on the output Observable based on the values\n * and the indices of the source (outer) emission and the inner Observable\n * emission. The arguments passed to this function are:\n * - `outerValue`: the value that came from the source\n * - `innerValue`: the value that came from the projected Observable\n * - `outerIndex`: the \"index\" of the value that came from the source\n * - `innerIndex`: the \"index\" of the value from the projected Observable\n * @return {Observable} An Observable containing projected Observables\n * of each item of the source, ignoring projected Observables that start before\n * their preceding Observable has completed.\n * @method exhaustMap\n * @owner Observable\n */\nexport function exhaustMap<T, I, R>(\n  project: (value: T, index: number) => ObservableInput<I>,\n  resultSelector?: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R\n  ): OperatorFunction<T, R> {\n    return (source: Observable<T>) => source.lift(new SwitchFirstMapOperator(project, resultSelector));\n  }\n\nclass SwitchFirstMapOperator<T, I, R> implements Operator<T, R> {\n  constructor(private project: (value: T, index: number) => ObservableInput<I>,\n              private resultSelector?: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R) {\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new SwitchFirstMapSubscriber(subscriber, this.project, this.resultSelector));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SwitchFirstMapSubscriber<T, I, R> extends OuterSubscriber<T, I> {\n  private hasSubscription: boolean = false;\n  private hasCompleted: boolean = false;\n  private index: number = 0;\n\n  constructor(destination: Subscriber<R>,\n              private project: (value: T, index: number) => ObservableInput<I>,\n              private resultSelector?: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    if (!this.hasSubscription) {\n      this.tryNext(value);\n    }\n  }\n\n  private tryNext(value: T): void {\n    const index = this.index++;\n    const destination = this.destination;\n    try {\n      const result = this.project(value, index);\n      this.hasSubscription = true;\n      this.add(subscribeToResult(this, result, value, index));\n    } catch (err) {\n      destination.error(err);\n    }\n  }\n\n  protected _complete(): void {\n    this.hasCompleted = true;\n    if (!this.hasSubscription) {\n      this.destination.complete();\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: I,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, I>): void {\n    const { resultSelector, destination } = this;\n    if (resultSelector) {\n      this.trySelectResult(outerValue, innerValue, outerIndex, innerIndex);\n    } else {\n      destination.next(innerValue);\n    }\n  }\n\n  private trySelectResult(outerValue: T, innerValue: I,\n                          outerIndex: number, innerIndex: number): void {\n    const { resultSelector, destination } = this;\n    try {\n      const result = resultSelector(outerValue, innerValue, outerIndex, innerIndex);\n      destination.next(result);\n    } catch (err) {\n      destination.error(err);\n    }\n  }\n\n  notifyError(err: any): void {\n    this.destination.error(err);\n  }\n\n  notifyComplete(innerSub: Subscription): void {\n    this.remove(innerSub);\n\n    this.hasSubscription = false;\n    if (this.hasCompleted) {\n      this.destination.complete();\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription, TeardownLogic } from '../Subscription';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Converts a higher-order Observable into a first-order Observable by dropping\n * inner Observables while the previous inner Observable has not yet completed.\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables by dropping the\n * next inner Observables while the current inner is still executing.</span>\n *\n * <img src=\"./img/exhaust.png\" width=\"100%\">\n *\n * `exhaust` subscribes to an Observable that emits Observables, also known as a\n * higher-order Observable. Each time it observes one of these emitted inner\n * Observables, the output Observable begins emitting the items emitted by that\n * inner Observable. So far, it behaves like {@link mergeAll}. However,\n * `exhaust` ignores every new inner Observable if the previous Observable has\n * not yet completed. Once that one completes, it will accept and flatten the\n * next inner Observable and repeat this process.\n *\n * @example <caption>Run a finite timer for each click, only if there is no currently active timer</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var higherOrder = clicks.map((ev) => Rx.Observable.interval(1000).take(5));\n * var result = higherOrder.exhaust();\n * result.subscribe(x => console.log(x));\n *\n * @see {@link combineAll}\n * @see {@link concatAll}\n * @see {@link switch}\n * @see {@link mergeAll}\n * @see {@link exhaustMap}\n * @see {@link zipAll}\n *\n * @return {Observable} An Observable that takes a source of Observables and propagates the first observable\n * exclusively until it completes before subscribing to the next.\n * @method exhaust\n * @owner Observable\n */\nexport function exhaust<T>(): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new SwitchFirstOperator<T>());\n}\n\nclass SwitchFirstOperator<T> implements Operator<T, T> {\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new SwitchFirstSubscriber(subscriber));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SwitchFirstSubscriber<T> extends OuterSubscriber<T, T> {\n  private hasCompleted: boolean = false;\n  private hasSubscription: boolean = false;\n\n  constructor(destination: Subscriber<T>) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    if (!this.hasSubscription) {\n      this.hasSubscription = true;\n      this.add(subscribeToResult(this, value));\n    }\n  }\n\n  protected _complete(): void {\n    this.hasCompleted = true;\n    if (!this.hasSubscription) {\n      this.destination.complete();\n    }\n  }\n\n  notifyComplete(innerSub: Subscription): void {\n    this.remove(innerSub);\n    this.hasSubscription = false;\n    if (this.hasCompleted) {\n      this.destination.complete();\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Observer } from '../Observer';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { OperatorFunction } from '../interfaces';\n\n/**\n * Returns an Observable that emits whether or not every item of the source satisfies the condition specified.\n *\n * @example <caption>A simple example emitting true if all elements are less than 5, false otherwise</caption>\n *  Observable.of(1, 2, 3, 4, 5, 6)\n *     .every(x => x < 5)\n *     .subscribe(x => console.log(x)); // -> false\n *\n * @param {function} predicate A function for determining if an item meets a specified condition.\n * @param {any} [thisArg] Optional object to use for `this` in the callback.\n * @return {Observable} An Observable of booleans that determines if all items of the source Observable meet the condition specified.\n * @method every\n * @owner Observable\n */\nexport function every<T>(predicate: (value: T, index: number, source: Observable<T>) => boolean,\n                         thisArg?: any): OperatorFunction<T, boolean> {\n  return (source: Observable<T>) => source.lift(new EveryOperator(predicate, thisArg, source));\n}\n\nclass EveryOperator<T> implements Operator<T, boolean> {\n  constructor(private predicate: (value: T, index: number, source: Observable<T>) => boolean,\n              private thisArg?: any,\n              private source?: Observable<T>) {\n  }\n\n  call(observer: Subscriber<boolean>, source: any): any {\n    return source.subscribe(new EverySubscriber(observer, this.predicate, this.thisArg, this.source));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass EverySubscriber<T> extends Subscriber<T> {\n  private index: number = 0;\n\n  constructor(destination: Observer<boolean>,\n              private predicate: (value: T, index: number, source: Observable<T>) => boolean,\n              private thisArg: any,\n              private source?: Observable<T>) {\n    super(destination);\n    this.thisArg = thisArg || this;\n  }\n\n  private notifyComplete(everyValueMatch: boolean): void {\n    this.destination.next(everyValueMatch);\n    this.destination.complete();\n  }\n\n  protected _next(value: T): void {\n    let result = false;\n    try {\n      result = this.predicate.call(this.thisArg, value, this.index++, this.source);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n\n    if (!result) {\n      this.notifyComplete(false);\n    }\n  }\n\n  protected _complete(): void {\n    this.notifyComplete(true);\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { ArgumentOutOfRangeError } from '../util/ArgumentOutOfRangeError';\nimport { Observable } from '../Observable';\nimport { TeardownLogic } from '../Subscription';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Emits the single value at the specified `index` in a sequence of emissions\n * from the source Observable.\n *\n * <span class=\"informal\">Emits only the i-th value, then completes.</span>\n *\n * <img src=\"./img/elementAt.png\" width=\"100%\">\n *\n * `elementAt` returns an Observable that emits the item at the specified\n * `index` in the source Observable, or a default value if that `index` is out\n * of range and the `default` argument is provided. If the `default` argument is\n * not given and the `index` is out of range, the output Observable will emit an\n * `ArgumentOutOfRangeError` error.\n *\n * @example <caption>Emit only the third click event</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.elementAt(2);\n * result.subscribe(x => console.log(x));\n *\n * // Results in:\n * // click 1 = nothing\n * // click 2 = nothing\n * // click 3 = MouseEvent object logged to console\n *\n * @see {@link first}\n * @see {@link last}\n * @see {@link skip}\n * @see {@link single}\n * @see {@link take}\n *\n * @throws {ArgumentOutOfRangeError} When using `elementAt(i)`, it delivers an\n * ArgumentOutOrRangeError to the Observer's `error` callback if `i < 0` or the\n * Observable has completed before emitting the i-th `next` notification.\n *\n * @param {number} index Is the number `i` for the i-th source emission that has\n * happened since the subscription, starting from the number `0`.\n * @param {T} [defaultValue] The default value returned for missing indices.\n * @return {Observable} An Observable that emits a single item, if it is found.\n * Otherwise, will emit the default value if given. If not, then emits an error.\n * @method elementAt\n * @owner Observable\n */\nexport function elementAt<T>(index: number, defaultValue?: T): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new ElementAtOperator(index, defaultValue));\n}\n\nclass ElementAtOperator<T> implements Operator<T, T> {\n\n  constructor(private index: number, private defaultValue?: T) {\n    if (index < 0) {\n      throw new ArgumentOutOfRangeError;\n    }\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new ElementAtSubscriber(subscriber, this.index, this.defaultValue));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass ElementAtSubscriber<T> extends Subscriber<T> {\n\n  constructor(destination: Subscriber<T>, private index: number, private defaultValue?: T) {\n    super(destination);\n  }\n\n  protected _next(x: T) {\n    if (this.index-- === 0) {\n      this.destination.next(x);\n      this.destination.complete();\n    }\n  }\n\n  protected _complete() {\n    const destination = this.destination;\n    if (this.index >= 0) {\n      if (typeof this.defaultValue !== 'undefined') {\n        destination.next(this.defaultValue);\n      } else {\n        destination.error(new ArgumentOutOfRangeError);\n      }\n    }\n    destination.complete();\n  }\n}\n","/**\n * An error thrown when an element was queried at a certain index of an\n * Observable, but no such index or position exists in that sequence.\n *\n * @see {@link elementAt}\n * @see {@link take}\n * @see {@link takeLast}\n *\n * @class ArgumentOutOfRangeError\n */\nexport class ArgumentOutOfRangeError extends Error {\n  constructor() {\n    const err: any = super('argument out of range');\n    (<any> this).name = err.name = 'ArgumentOutOfRangeError';\n    (<any> this).stack = err.stack;\n    (<any> this).message = err.message;\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { tryCatch } from '../util/tryCatch';\nimport { errorObject } from '../util/errorObject';\nimport { Observable } from '../Observable';\nimport { TeardownLogic } from '../Subscription';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/* tslint:disable:max-line-length */\nexport function distinctUntilChanged<T>(compare?: (x: T, y: T) => boolean): MonoTypeOperatorFunction<T>;\nexport function distinctUntilChanged<T, K>(compare: (x: K, y: K) => boolean, keySelector: (x: T) => K): MonoTypeOperatorFunction<T>;\n/* tslint:enable:max-line-length */\n\n/**\n * Returns an Observable that emits all items emitted by the source Observable that are distinct by comparison from the previous item.\n *\n * If a comparator function is provided, then it will be called for each item to test for whether or not that value should be emitted.\n *\n * If a comparator function is not provided, an equality check is used by default.\n *\n * @example <caption>A simple example with numbers</caption>\n * Observable.of(1, 1, 2, 2, 2, 1, 1, 2, 3, 3, 4)\n *   .distinctUntilChanged()\n *   .subscribe(x => console.log(x)); // 1, 2, 1, 2, 3, 4\n *\n * @example <caption>An example using a compare function</caption>\n * interface Person {\n *    age: number,\n *    name: string\n * }\n *\n * Observable.of<Person>(\n *     { age: 4, name: 'Foo'},\n *     { age: 7, name: 'Bar'},\n *     { age: 5, name: 'Foo'})\n *     { age: 6, name: 'Foo'})\n *     .distinctUntilChanged((p: Person, q: Person) => p.name === q.name)\n *     .subscribe(x => console.log(x));\n *\n * // displays:\n * // { age: 4, name: 'Foo' }\n * // { age: 7, name: 'Bar' }\n * // { age: 5, name: 'Foo' }\n *\n * @see {@link distinct}\n * @see {@link distinctUntilKeyChanged}\n *\n * @param {function} [compare] Optional comparison function called to test if an item is distinct from the previous item in the source.\n * @return {Observable} An Observable that emits items from the source Observable with distinct values.\n * @method distinctUntilChanged\n * @owner Observable\n */\nexport function distinctUntilChanged<T, K>(compare?: (x: K, y: K) => boolean, keySelector?: (x: T) => K): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new DistinctUntilChangedOperator<T, K>(compare, keySelector));\n}\n\nclass DistinctUntilChangedOperator<T, K> implements Operator<T, T> {\n  constructor(private compare: (x: K, y: K) => boolean,\n              private keySelector: (x: T) => K) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new DistinctUntilChangedSubscriber(subscriber, this.compare, this.keySelector));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass DistinctUntilChangedSubscriber<T, K> extends Subscriber<T> {\n  private key: K;\n  private hasKey: boolean = false;\n\n  constructor(destination: Subscriber<T>,\n              compare: (x: K, y: K) => boolean,\n              private keySelector: (x: T) => K) {\n    super(destination);\n    if (typeof compare === 'function') {\n      this.compare = compare;\n    }\n  }\n\n  private compare(x: any, y: any): boolean {\n    return x === y;\n  }\n\n  protected _next(value: T): void {\n\n    const keySelector = this.keySelector;\n    let key: any = value;\n\n    if (keySelector) {\n      key = tryCatch(this.keySelector)(value);\n      if (key === errorObject) {\n        return this.destination.error(errorObject.e);\n      }\n    }\n\n    let result: any = false;\n\n    if (this.hasKey) {\n      result = tryCatch(this.compare)(this.key, key);\n      if (result === errorObject) {\n        return this.destination.error(errorObject.e);\n      }\n    } else {\n      this.hasKey = true;\n    }\n\n    if (Boolean(result) === false) {\n      this.key = key;\n      this.destination.next(value);\n    }\n  }\n}\n","import { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { TeardownLogic } from '../Subscription';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { ISet, Set } from '../util/Set';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Returns an Observable that emits all items emitted by the source Observable that are distinct by comparison from previous items.\n *\n * If a keySelector function is provided, then it will project each value from the source observable into a new value that it will\n * check for equality with previously projected values. If a keySelector function is not provided, it will use each value from the\n * source observable directly with an equality check against previous values.\n *\n * In JavaScript runtimes that support `Set`, this operator will use a `Set` to improve performance of the distinct value checking.\n *\n * In other runtimes, this operator will use a minimal implementation of `Set` that relies on an `Array` and `indexOf` under the\n * hood, so performance will degrade as more values are checked for distinction. Even in newer browsers, a long-running `distinct`\n * use might result in memory leaks. To help alleviate this in some scenarios, an optional `flushes` parameter is also provided so\n * that the internal `Set` can be \"flushed\", basically clearing it of values.\n *\n * @example <caption>A simple example with numbers</caption>\n * Observable.of(1, 1, 2, 2, 2, 1, 2, 3, 4, 3, 2, 1)\n *   .distinct()\n *   .subscribe(x => console.log(x)); // 1, 2, 3, 4\n *\n * @example <caption>An example using a keySelector function</caption>\n * interface Person {\n *    age: number,\n *    name: string\n * }\n *\n * Observable.of<Person>(\n *     { age: 4, name: 'Foo'},\n *     { age: 7, name: 'Bar'},\n *     { age: 5, name: 'Foo'})\n *     .distinct((p: Person) => p.name)\n *     .subscribe(x => console.log(x));\n *\n * // displays:\n * // { age: 4, name: 'Foo' }\n * // { age: 7, name: 'Bar' }\n *\n * @see {@link distinctUntilChanged}\n * @see {@link distinctUntilKeyChanged}\n *\n * @param {function} [keySelector] Optional function to select which value you want to check as distinct.\n * @param {Observable} [flushes] Optional Observable for flushing the internal HashSet of the operator.\n * @return {Observable} An Observable that emits items from the source Observable with distinct values.\n * @method distinct\n * @owner Observable\n */\nexport function distinct<T, K>(keySelector?: (value: T) => K,\n                               flushes?: Observable<any>): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new DistinctOperator(keySelector, flushes));\n}\n\nclass DistinctOperator<T, K> implements Operator<T, T> {\n  constructor(private keySelector: (value: T) => K, private flushes: Observable<any>) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new DistinctSubscriber(subscriber, this.keySelector, this.flushes));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class DistinctSubscriber<T, K> extends OuterSubscriber<T, T> {\n  private values: ISet<K> = new Set<K>();\n\n  constructor(destination: Subscriber<T>, private keySelector: (value: T) => K, flushes: Observable<any>) {\n    super(destination);\n\n    if (flushes) {\n      this.add(subscribeToResult(this, flushes));\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: T,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, T>): void {\n    this.values.clear();\n  }\n\n  notifyError(error: any, innerSub: InnerSubscriber<T, T>): void {\n    this._error(error);\n  }\n\n  protected _next(value: T): void {\n    if (this.keySelector) {\n      this._useKeySelector(value);\n    } else {\n      this._finalizeNext(value, value);\n    }\n  }\n\n  private _useKeySelector(value: T): void {\n    let key: K;\n    const { destination } = this;\n    try {\n      key = this.keySelector(value);\n    } catch (err) {\n      destination.error(err);\n      return;\n    }\n    this._finalizeNext(key, value);\n  }\n\n  private _finalizeNext(key: K|T, value: T) {\n    const { values } = this;\n    if (!values.has(<K>key)) {\n      values.add(<K>key);\n      this.destination.next(value);\n    }\n  }\n\n}\n","import { root } from './root';\n\nexport interface ISetCtor {\n  new<T>(): ISet<T>;\n}\n\nexport interface ISet<T> {\n  add(value: T): void;\n  has(value: T): boolean;\n  size: number;\n  clear(): void;\n}\n\nexport function minimalSetImpl<T>(): ISetCtor {\n  // THIS IS NOT a full impl of Set, this is just the minimum\n  // bits of functionality we need for this library.\n  return class MinimalSet<T> implements ISet<T> {\n    private _values: T[] = [];\n\n    add(value: T): void {\n      if (!this.has(value)) {\n        this._values.push(value);\n      }\n    }\n\n    has(value: T): boolean {\n      return this._values.indexOf(value) !== -1;\n    }\n\n    get size(): number {\n      return this._values.length;\n    }\n\n    clear(): void {\n      this._values.length = 0;\n    }\n  };\n}\n\nexport const Set: ISetCtor = root.Set || minimalSetImpl();","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Notification } from '../Notification';\nimport { OperatorFunction } from '../interfaces';\n\n/**\n * Converts an Observable of {@link Notification} objects into the emissions\n * that they represent.\n *\n * <span class=\"informal\">Unwraps {@link Notification} objects as actual `next`,\n * `error` and `complete` emissions. The opposite of {@link materialize}.</span>\n *\n * <img src=\"./img/dematerialize.png\" width=\"100%\">\n *\n * `dematerialize` is assumed to operate an Observable that only emits\n * {@link Notification} objects as `next` emissions, and does not emit any\n * `error`. Such Observable is the output of a `materialize` operation. Those\n * notifications are then unwrapped using the metadata they contain, and emitted\n * as `next`, `error`, and `complete` on the output Observable.\n *\n * Use this operator in conjunction with {@link materialize}.\n *\n * @example <caption>Convert an Observable of Notifications to an actual Observable</caption>\n * var notifA = new Rx.Notification('N', 'A');\n * var notifB = new Rx.Notification('N', 'B');\n * var notifE = new Rx.Notification('E', void 0,\n *   new TypeError('x.toUpperCase is not a function')\n * );\n * var materialized = Rx.Observable.of(notifA, notifB, notifE);\n * var upperCase = materialized.dematerialize();\n * upperCase.subscribe(x => console.log(x), e => console.error(e));\n *\n * // Results in:\n * // A\n * // B\n * // TypeError: x.toUpperCase is not a function\n *\n * @see {@link Notification}\n * @see {@link materialize}\n *\n * @return {Observable} An Observable that emits items and notifications\n * embedded in Notification objects emitted by the source Observable.\n * @method dematerialize\n * @owner Observable\n */\nexport function dematerialize<T>(): OperatorFunction<Notification<T>, T> {\n  return function dematerializeOperatorFunction(source: Observable<Notification<T>>) {\n    return source.lift(new DeMaterializeOperator());\n  };\n}\n\nclass DeMaterializeOperator<T extends Notification<any>, R> implements Operator<T, R> {\n  call(subscriber: Subscriber<any>, source: any): any {\n    return source.subscribe(new DeMaterializeSubscriber(subscriber));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass DeMaterializeSubscriber<T extends Notification<any>> extends Subscriber<T> {\n  constructor(destination: Subscriber<any>) {\n    super(destination);\n  }\n\n  protected _next(value: T) {\n    value.observe(this.destination);\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { Subscription, TeardownLogic } from '../Subscription';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Delays the emission of items from the source Observable by a given time span\n * determined by the emissions of another Observable.\n *\n * <span class=\"informal\">It's like {@link delay}, but the time span of the\n * delay duration is determined by a second Observable.</span>\n *\n * <img src=\"./img/delayWhen.png\" width=\"100%\">\n *\n * `delayWhen` time shifts each emitted value from the source Observable by a\n * time span determined by another Observable. When the source emits a value,\n * the `delayDurationSelector` function is called with the source value as\n * argument, and should return an Observable, called the \"duration\" Observable.\n * The source value is emitted on the output Observable only when the duration\n * Observable emits a value or completes.\n *\n * Optionally, `delayWhen` takes a second argument, `subscriptionDelay`, which\n * is an Observable. When `subscriptionDelay` emits its first value or\n * completes, the source Observable is subscribed to and starts behaving like\n * described in the previous paragraph. If `subscriptionDelay` is not provided,\n * `delayWhen` will subscribe to the source Observable as soon as the output\n * Observable is subscribed.\n *\n * @example <caption>Delay each click by a random amount of time, between 0 and 5 seconds</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var delayedClicks = clicks.delayWhen(event =>\n *   Rx.Observable.interval(Math.random() * 5000)\n * );\n * delayedClicks.subscribe(x => console.log(x));\n *\n * @see {@link debounce}\n * @see {@link delay}\n *\n * @param {function(value: T): Observable} delayDurationSelector A function that\n * returns an Observable for each value emitted by the source Observable, which\n * is then used to delay the emission of that item on the output Observable\n * until the Observable returned from this function emits a value.\n * @param {Observable} subscriptionDelay An Observable that triggers the\n * subscription to the source Observable once it emits any value.\n * @return {Observable} An Observable that delays the emissions of the source\n * Observable by an amount of time specified by the Observable returned by\n * `delayDurationSelector`.\n * @method delayWhen\n * @owner Observable\n */\nexport function delayWhen<T>(delayDurationSelector: (value: T) => Observable<any>,\n                             subscriptionDelay?: Observable<any>): MonoTypeOperatorFunction<T> {\n  if (subscriptionDelay) {\n    return (source: Observable<T>) =>\n      new SubscriptionDelayObservable(source, subscriptionDelay)\n        .lift(new DelayWhenOperator(delayDurationSelector));\n  }\n  return (source: Observable<T>) => source.lift(new DelayWhenOperator(delayDurationSelector));\n}\n\nclass DelayWhenOperator<T> implements Operator<T, T> {\n  constructor(private delayDurationSelector: (value: T) => Observable<any>) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new DelayWhenSubscriber(subscriber, this.delayDurationSelector));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass DelayWhenSubscriber<T, R> extends OuterSubscriber<T, R> {\n  private completed: boolean = false;\n  private delayNotifierSubscriptions: Array<Subscription> = [];\n  private values: Array<T> = [];\n\n  constructor(destination: Subscriber<T>,\n              private delayDurationSelector: (value: T) => Observable<any>) {\n    super(destination);\n  }\n\n  notifyNext(outerValue: T, innerValue: any,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this.destination.next(outerValue);\n    this.removeSubscription(innerSub);\n    this.tryComplete();\n  }\n\n  notifyError(error: any, innerSub: InnerSubscriber<T, R>): void {\n    this._error(error);\n  }\n\n  notifyComplete(innerSub: InnerSubscriber<T, R>): void {\n    const value = this.removeSubscription(innerSub);\n    if (value) {\n      this.destination.next(value);\n    }\n    this.tryComplete();\n  }\n\n  protected _next(value: T): void {\n    try {\n      const delayNotifier = this.delayDurationSelector(value);\n      if (delayNotifier) {\n        this.tryDelay(delayNotifier, value);\n      }\n    } catch (err) {\n      this.destination.error(err);\n    }\n  }\n\n  protected _complete(): void {\n    this.completed = true;\n    this.tryComplete();\n  }\n\n  private removeSubscription(subscription: InnerSubscriber<T, R>): T {\n    subscription.unsubscribe();\n\n    const subscriptionIdx = this.delayNotifierSubscriptions.indexOf(subscription);\n    let value: T = null;\n\n    if (subscriptionIdx !== -1) {\n      value = this.values[subscriptionIdx];\n      this.delayNotifierSubscriptions.splice(subscriptionIdx, 1);\n      this.values.splice(subscriptionIdx, 1);\n    }\n\n    return value;\n  }\n\n  private tryDelay(delayNotifier: Observable<any>, value: T): void {\n    const notifierSubscription = subscribeToResult(this, delayNotifier, value);\n\n    if (notifierSubscription && !notifierSubscription.closed) {\n      this.add(notifierSubscription);\n      this.delayNotifierSubscriptions.push(notifierSubscription);\n    }\n\n    this.values.push(value);\n  }\n\n  private tryComplete(): void {\n    if (this.completed && this.delayNotifierSubscriptions.length === 0) {\n      this.destination.complete();\n    }\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SubscriptionDelayObservable<T> extends Observable<T> {\n  constructor(/** @deprecated internal use only */ public source: Observable<T>, private subscriptionDelay: Observable<any>) {\n    super();\n  }\n\n  /** @deprecated internal use only */ _subscribe(subscriber: Subscriber<T>) {\n    this.subscriptionDelay.subscribe(new SubscriptionDelaySubscriber(subscriber, this.source));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SubscriptionDelaySubscriber<T> extends Subscriber<T> {\n  private sourceSubscribed: boolean = false;\n\n  constructor(private parent: Subscriber<T>, private source: Observable<T>) {\n    super();\n  }\n\n  protected _next(unused: any) {\n    this.subscribeToSource();\n  }\n\n  protected _error(err: any) {\n    this.unsubscribe();\n    this.parent.error(err);\n  }\n\n  protected _complete() {\n    this.subscribeToSource();\n  }\n\n  private subscribeToSource(): void {\n    if (!this.sourceSubscribed) {\n      this.sourceSubscribed = true;\n      this.unsubscribe();\n      this.source.subscribe(this.parent);\n    }\n  }\n}\n","import { async } from '../scheduler/async';\nimport { isDate } from '../util/isDate';\nimport { Operator } from '../Operator';\nimport { IScheduler } from '../Scheduler';\nimport { Subscriber } from '../Subscriber';\nimport { Action } from '../scheduler/Action';\nimport { Notification } from '../Notification';\nimport { Observable } from '../Observable';\nimport { PartialObserver } from '../Observer';\nimport { TeardownLogic } from '../Subscription';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Delays the emission of items from the source Observable by a given timeout or\n * until a given Date.\n *\n * <span class=\"informal\">Time shifts each item by some specified amount of\n * milliseconds.</span>\n *\n * <img src=\"./img/delay.png\" width=\"100%\">\n *\n * If the delay argument is a Number, this operator time shifts the source\n * Observable by that amount of time expressed in milliseconds. The relative\n * time intervals between the values are preserved.\n *\n * If the delay argument is a Date, this operator time shifts the start of the\n * Observable execution until the given date occurs.\n *\n * @example <caption>Delay each click by one second</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var delayedClicks = clicks.delay(1000); // each click emitted after 1 second\n * delayedClicks.subscribe(x => console.log(x));\n *\n * @example <caption>Delay all clicks until a future date happens</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var date = new Date('March 15, 2050 12:00:00'); // in the future\n * var delayedClicks = clicks.delay(date); // click emitted only after that date\n * delayedClicks.subscribe(x => console.log(x));\n *\n * @see {@link debounceTime}\n * @see {@link delayWhen}\n *\n * @param {number|Date} delay The delay duration in milliseconds (a `number`) or\n * a `Date` until which the emission of the source items is delayed.\n * @param {Scheduler} [scheduler=async] The IScheduler to use for\n * managing the timers that handle the time-shift for each item.\n * @return {Observable} An Observable that delays the emissions of the source\n * Observable by the specified timeout or Date.\n * @method delay\n * @owner Observable\n */\nexport function delay<T>(delay: number|Date,\n                         scheduler: IScheduler = async): MonoTypeOperatorFunction<T> {\n  const absoluteDelay = isDate(delay);\n  const delayFor = absoluteDelay ? (+delay - scheduler.now()) : Math.abs(<number>delay);\n  return (source: Observable<T>) => source.lift(new DelayOperator(delayFor, scheduler));\n}\n\nclass DelayOperator<T> implements Operator<T, T> {\n  constructor(private delay: number,\n              private scheduler: IScheduler) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new DelaySubscriber(subscriber, this.delay, this.scheduler));\n  }\n}\n\ninterface DelayState<T> {\n  source: DelaySubscriber<T>;\n  destination: PartialObserver<T>;\n  scheduler: IScheduler;\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass DelaySubscriber<T> extends Subscriber<T> {\n  private queue: Array<DelayMessage<T>> = [];\n  private active: boolean = false;\n  private errored: boolean = false;\n\n  private static dispatch<T>(this: Action<DelayState<T>>, state: DelayState<T>): void {\n    const source = state.source;\n    const queue = source.queue;\n    const scheduler = state.scheduler;\n    const destination = state.destination;\n\n    while (queue.length > 0 && (queue[0].time - scheduler.now()) <= 0) {\n      queue.shift().notification.observe(destination);\n    }\n\n    if (queue.length > 0) {\n      const delay = Math.max(0, queue[0].time - scheduler.now());\n      this.schedule(state, delay);\n    } else {\n      this.unsubscribe();\n      source.active = false;\n    }\n  }\n\n  constructor(destination: Subscriber<T>,\n              private delay: number,\n              private scheduler: IScheduler) {\n    super(destination);\n  }\n\n  private _schedule(scheduler: IScheduler): void {\n    this.active = true;\n    this.add(scheduler.schedule<DelayState<T>>(DelaySubscriber.dispatch, this.delay, {\n      source: this, destination: this.destination, scheduler: scheduler\n    }));\n  }\n\n  private scheduleNotification(notification: Notification<T>): void {\n    if (this.errored === true) {\n      return;\n    }\n\n    const scheduler = this.scheduler;\n    const message = new DelayMessage(scheduler.now() + this.delay, notification);\n    this.queue.push(message);\n\n    if (this.active === false) {\n      this._schedule(scheduler);\n    }\n  }\n\n  protected _next(value: T) {\n    this.scheduleNotification(Notification.createNext(value));\n  }\n\n  protected _error(err: any) {\n    this.errored = true;\n    this.queue = [];\n    this.destination.error(err);\n  }\n\n  protected _complete() {\n    this.scheduleNotification(Notification.createComplete());\n  }\n}\n\nclass DelayMessage<T> {\n  constructor(public readonly time: number,\n              public readonly notification: Notification<T>) {\n  }\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { OperatorFunction, MonoTypeOperatorFunction } from '../interfaces';\n\n/* tslint:disable:max-line-length */\nexport function defaultIfEmpty<T>(defaultValue?: T): MonoTypeOperatorFunction<T>;\nexport function defaultIfEmpty<T, R>(defaultValue?: R): OperatorFunction<T, T | R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Emits a given value if the source Observable completes without emitting any\n * `next` value, otherwise mirrors the source Observable.\n *\n * <span class=\"informal\">If the source Observable turns out to be empty, then\n * this operator will emit a default value.</span>\n *\n * <img src=\"./img/defaultIfEmpty.png\" width=\"100%\">\n *\n * `defaultIfEmpty` emits the values emitted by the source Observable or a\n * specified default value if the source Observable is empty (completes without\n * having emitted any `next` value).\n *\n * @example <caption>If no clicks happen in 5 seconds, then emit \"no clicks\"</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var clicksBeforeFive = clicks.takeUntil(Rx.Observable.interval(5000));\n * var result = clicksBeforeFive.defaultIfEmpty('no clicks');\n * result.subscribe(x => console.log(x));\n *\n * @see {@link empty}\n * @see {@link last}\n *\n * @param {any} [defaultValue=null] The default value used if the source\n * Observable is empty.\n * @return {Observable} An Observable that emits either the specified\n * `defaultValue` if the source Observable emits no items, or the values emitted\n * by the source Observable.\n * @method defaultIfEmpty\n * @owner Observable\n */\nexport function defaultIfEmpty<T, R>(defaultValue: R = null): OperatorFunction<T, T | R> {\n  return (source: Observable<T>) => source.lift(new DefaultIfEmptyOperator(defaultValue)) as Observable<T | R>;\n}\n\nclass DefaultIfEmptyOperator<T, R> implements Operator<T, T | R> {\n\n  constructor(private defaultValue: R) {\n  }\n\n  call(subscriber: Subscriber<T | R>, source: any): any {\n    return source.subscribe(new DefaultIfEmptySubscriber(subscriber, this.defaultValue));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass DefaultIfEmptySubscriber<T, R> extends Subscriber<T> {\n  private isEmpty: boolean = true;\n\n  constructor(destination: Subscriber<T | R>, private defaultValue: R) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    this.isEmpty = false;\n    this.destination.next(value);\n  }\n\n  protected _complete(): void {\n    if (this.isEmpty) {\n      this.destination.next(this.defaultValue);\n    }\n    this.destination.complete();\n  }\n}","import { Operator } from '../Operator';\nimport { Observable, SubscribableOrPromise } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription, TeardownLogic } from '../Subscription';\n\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Emits a value from the source Observable only after a particular time span\n * determined by another Observable has passed without another source emission.\n *\n * <span class=\"informal\">It's like {@link debounceTime}, but the time span of\n * emission silence is determined by a second Observable.</span>\n *\n * <img src=\"./img/debounce.png\" width=\"100%\">\n *\n * `debounce` delays values emitted by the source Observable, but drops previous\n * pending delayed emissions if a new value arrives on the source Observable.\n * This operator keeps track of the most recent value from the source\n * Observable, and spawns a duration Observable by calling the\n * `durationSelector` function. The value is emitted only when the duration\n * Observable emits a value or completes, and if no other value was emitted on\n * the source Observable since the duration Observable was spawned. If a new\n * value appears before the duration Observable emits, the previous value will\n * be dropped and will not be emitted on the output Observable.\n *\n * Like {@link debounceTime}, this is a rate-limiting operator, and also a\n * delay-like operator since output emissions do not necessarily occur at the\n * same time as they did on the source Observable.\n *\n * @example <caption>Emit the most recent click after a burst of clicks</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.debounce(() => Rx.Observable.interval(1000));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link audit}\n * @see {@link debounceTime}\n * @see {@link delayWhen}\n * @see {@link throttle}\n *\n * @param {function(value: T): SubscribableOrPromise} durationSelector A function\n * that receives a value from the source Observable, for computing the timeout\n * duration for each source value, returned as an Observable or a Promise.\n * @return {Observable} An Observable that delays the emissions of the source\n * Observable by the specified duration Observable returned by\n * `durationSelector`, and may drop some values if they occur too frequently.\n * @method debounce\n * @owner Observable\n */\nexport function debounce<T>(durationSelector: (value: T) => SubscribableOrPromise<number>): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new DebounceOperator(durationSelector));\n}\n\nclass DebounceOperator<T> implements Operator<T, T> {\n  constructor(private durationSelector: (value: T) => SubscribableOrPromise<number>) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new DebounceSubscriber(subscriber, this.durationSelector));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass DebounceSubscriber<T, R> extends OuterSubscriber<T, R> {\n  private value: T;\n  private hasValue: boolean = false;\n  private durationSubscription: Subscription = null;\n\n  constructor(destination: Subscriber<R>,\n              private durationSelector: (value: T) => SubscribableOrPromise<number>) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    try {\n      const result = this.durationSelector.call(this, value);\n\n      if (result) {\n        this._tryNext(value, result);\n      }\n    } catch (err) {\n      this.destination.error(err);\n    }\n  }\n\n  protected _complete(): void {\n    this.emitValue();\n    this.destination.complete();\n  }\n\n  private _tryNext(value: T, duration: SubscribableOrPromise<number>): void {\n    let subscription = this.durationSubscription;\n    this.value = value;\n    this.hasValue = true;\n    if (subscription) {\n      subscription.unsubscribe();\n      this.remove(subscription);\n    }\n\n    subscription = subscribeToResult(this, duration);\n    if (!subscription.closed) {\n      this.add(this.durationSubscription = subscription);\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this.emitValue();\n  }\n\n  notifyComplete(): void {\n    this.emitValue();\n  }\n\n  emitValue(): void {\n    if (this.hasValue) {\n      const value = this.value;\n      const subscription = this.durationSubscription;\n      if (subscription) {\n        this.durationSubscription = null;\n        subscription.unsubscribe();\n        this.remove(subscription);\n      }\n      this.value = null;\n      this.hasValue = false;\n      super._next(value);\n    }\n  }\n}\n","import { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Observer } from '../Observer';\nimport { Subscriber } from '../Subscriber';\nimport { OperatorFunction } from '../interfaces';\n\n/**\n * Counts the number of emissions on the source and emits that number when the\n * source completes.\n *\n * <span class=\"informal\">Tells how many values were emitted, when the source\n * completes.</span>\n *\n * <img src=\"./img/count.png\" width=\"100%\">\n *\n * `count` transforms an Observable that emits values into an Observable that\n * emits a single value that represents the number of values emitted by the\n * source Observable. If the source Observable terminates with an error, `count`\n * will pass this error notification along without emitting a value first. If\n * the source Observable does not terminate at all, `count` will neither emit\n * a value nor terminate. This operator takes an optional `predicate` function\n * as argument, in which case the output emission will represent the number of\n * source values that matched `true` with the `predicate`.\n *\n * @example <caption>Counts how many seconds have passed before the first click happened</caption>\n * var seconds = Rx.Observable.interval(1000);\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var secondsBeforeClick = seconds.takeUntil(clicks);\n * var result = secondsBeforeClick.count();\n * result.subscribe(x => console.log(x));\n *\n * @example <caption>Counts how many odd numbers are there between 1 and 7</caption>\n * var numbers = Rx.Observable.range(1, 7);\n * var result = numbers.count(i => i % 2 === 1);\n * result.subscribe(x => console.log(x));\n *\n * // Results in:\n * // 4\n *\n * @see {@link max}\n * @see {@link min}\n * @see {@link reduce}\n *\n * @param {function(value: T, i: number, source: Observable<T>): boolean} [predicate] A\n * boolean function to select what values are to be counted. It is provided with\n * arguments of:\n * - `value`: the value from the source Observable.\n * - `index`: the (zero-based) \"index\" of the value from the source Observable.\n * - `source`: the source Observable instance itself.\n * @return {Observable} An Observable of one number that represents the count as\n * described above.\n * @method count\n * @owner Observable\n */\nexport function count<T>(predicate?: (value: T, index: number, source: Observable<T>) => boolean): OperatorFunction<T, number> {\n  return (source: Observable<T>) => source.lift(new CountOperator(predicate, source));\n}\n\nclass CountOperator<T> implements Operator<T, number> {\n  constructor(private predicate?: (value: T, index: number, source: Observable<T>) => boolean,\n              private source?: Observable<T>) {\n  }\n\n  call(subscriber: Subscriber<number>, source: any): any {\n    return source.subscribe(new CountSubscriber(subscriber, this.predicate, this.source));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass CountSubscriber<T> extends Subscriber<T> {\n  private count: number = 0;\n  private index: number = 0;\n\n  constructor(destination: Observer<number>,\n              private predicate?: (value: T, index: number, source: Observable<T>) => boolean,\n              private source?: Observable<T>) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    if (this.predicate) {\n      this._tryPredicate(value);\n    } else {\n      this.count++;\n    }\n  }\n\n  private _tryPredicate(value: T) {\n    let result: any;\n\n    try {\n      result = this.predicate(value, this.index++, this.source);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n\n    if (result) {\n      this.count++;\n    }\n  }\n\n  protected _complete(): void {\n    this.destination.next(this.count);\n    this.destination.complete();\n  }\n}\n","import { Observable, ObservableInput } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { OperatorFunction } from '../interfaces';\n\n/* tslint:disable:max-line-length */\nexport function mergeMap<T, R>(project: (value: T, index: number) => ObservableInput<R>, concurrent?: number): OperatorFunction<T, R>;\nexport function mergeMap<T, I, R>(project: (value: T, index: number) => ObservableInput<I>, resultSelector: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R, concurrent?: number): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link mergeAll}.</span>\n *\n * <img src=\"./img/mergeMap.png\" width=\"100%\">\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an Observable, and then merging those resulting Observables and\n * emitting the results of this merger.\n *\n * @example <caption>Map and flatten each letter to an Observable ticking every 1 second</caption>\n * var letters = Rx.Observable.of('a', 'b', 'c');\n * var result = letters.mergeMap(x =>\n *   Rx.Observable.interval(1000).map(i => x+i)\n * );\n * result.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // a0\n * // b0\n * // c0\n * // a1\n * // b1\n * // c1\n * // continues to list a,b,c with respective ascending integers\n *\n * @see {@link concatMap}\n * @see {@link exhaustMap}\n * @see {@link merge}\n * @see {@link mergeAll}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n * @see {@link switchMap}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\n * A function to produce the value on the output Observable based on the values\n * and the indices of the source (outer) emission and the inner Observable\n * emission. The arguments passed to this function are:\n * - `outerValue`: the value that came from the source\n * - `innerValue`: the value that came from the projected Observable\n * - `outerIndex`: the \"index\" of the value that came from the source\n * - `innerIndex`: the \"index\" of the value from the projected Observable\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @return {Observable} An Observable that emits the result of applying the\n * projection function (and the optional `resultSelector`) to each item emitted\n * by the source Observable and merging the results of the Observables obtained\n * from this transformation.\n * @method mergeMap\n * @owner Observable\n */\nexport function mergeMap<T, I, R>(project: (value: T, index: number) => ObservableInput<I>,\n                                  resultSelector?: ((outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R) | number,\n                                  concurrent: number = Number.POSITIVE_INFINITY): OperatorFunction<T, I|R> {\n  return function mergeMapOperatorFunction(source: Observable<T>) {\n    if (typeof resultSelector === 'number') {\n      concurrent = <number>resultSelector;\n      resultSelector = null;\n    }\n    return source.lift(new MergeMapOperator(project, <any>resultSelector, concurrent));\n  };\n}\n\nexport class MergeMapOperator<T, I, R> implements Operator<T, I> {\n  constructor(private project: (value: T, index: number) => ObservableInput<I>,\n              private resultSelector?: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R,\n              private concurrent: number = Number.POSITIVE_INFINITY) {\n  }\n\n  call(observer: Subscriber<I>, source: any): any {\n    return source.subscribe(new MergeMapSubscriber(\n      observer, this.project, this.resultSelector, this.concurrent\n    ));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class MergeMapSubscriber<T, I, R> extends OuterSubscriber<T, I> {\n  private hasCompleted: boolean = false;\n  private buffer: T[] = [];\n  private active: number = 0;\n  protected index: number = 0;\n\n  constructor(destination: Subscriber<I>,\n              private project: (value: T, index: number) => ObservableInput<I>,\n              private resultSelector?: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R,\n              private concurrent: number = Number.POSITIVE_INFINITY) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    if (this.active < this.concurrent) {\n      this._tryNext(value);\n    } else {\n      this.buffer.push(value);\n    }\n  }\n\n  protected _tryNext(value: T) {\n    let result: ObservableInput<I>;\n    const index = this.index++;\n    try {\n      result = this.project(value, index);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    this.active++;\n    this._innerSub(result, value, index);\n  }\n\n  private _innerSub(ish: ObservableInput<I>, value: T, index: number): void {\n    this.add(subscribeToResult<T, I>(this, ish, value, index));\n  }\n\n  protected _complete(): void {\n    this.hasCompleted = true;\n    if (this.active === 0 && this.buffer.length === 0) {\n      this.destination.complete();\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: I,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, I>): void {\n    if (this.resultSelector) {\n      this._notifyResultSelector(outerValue, innerValue, outerIndex, innerIndex);\n    } else {\n      this.destination.next(innerValue);\n    }\n  }\n\n  private _notifyResultSelector(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) {\n    let result: R;\n    try {\n      result = this.resultSelector(outerValue, innerValue, outerIndex, innerIndex);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    this.destination.next(result);\n  }\n\n  notifyComplete(innerSub: Subscription): void {\n    const buffer = this.buffer;\n    this.remove(innerSub);\n    this.active--;\n    if (buffer.length > 0) {\n      this._next(buffer.shift());\n    } else if (this.active === 0 && this.hasCompleted) {\n      this.destination.complete();\n    }\n  }\n}\n","import { isArray } from '../util/isArray';\nimport { isArrayLike } from '../util/isArrayLike';\nimport { isPromise } from '../util/isPromise';\nimport { PromiseObservable } from './PromiseObservable';\nimport { IteratorObservable } from'./IteratorObservable';\nimport { ArrayObservable } from './ArrayObservable';\nimport { ArrayLikeObservable } from './ArrayLikeObservable';\n\nimport { IScheduler } from '../Scheduler';\nimport { iterator as Symbol_iterator } from '../symbol/iterator';\nimport { Observable, ObservableInput } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { ObserveOnSubscriber } from '../operators/observeOn';\nimport { observable as Symbol_observable } from '../symbol/observable';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport class FromObservable<T> extends Observable<T> {\n  constructor(private ish: ObservableInput<T>, private scheduler?: IScheduler) {\n    super(null);\n  }\n\n  static create<T>(ish: ObservableInput<T>, scheduler?: IScheduler): Observable<T>;\n  static create<T, R>(ish: ArrayLike<T>, scheduler?: IScheduler): Observable<R>;\n\n  /**\n   * Creates an Observable from an Array, an array-like object, a Promise, an\n   * iterable object, or an Observable-like object.\n   *\n   * <span class=\"informal\">Converts almost anything to an Observable.</span>\n   *\n   * <img src=\"./img/from.png\" width=\"100%\">\n   *\n   * Convert various other objects and data types into Observables. `from`\n   * converts a Promise or an array-like or an\n   * [iterable](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols#iterable)\n   * object into an Observable that emits the items in that promise or array or\n   * iterable. A String, in this context, is treated as an array of characters.\n   * Observable-like objects (contains a function named with the ES2015 Symbol\n   * for Observable) can also be converted through this operator.\n   *\n   * @example <caption>Converts an array to an Observable</caption>\n   * var array = [10, 20, 30];\n   * var result = Rx.Observable.from(array);\n   * result.subscribe(x => console.log(x));\n   *\n   * // Results in the following:\n   * // 10 20 30\n   *\n   * @example <caption>Convert an infinite iterable (from a generator) to an Observable</caption>\n   * function* generateDoubles(seed) {\n   *   var i = seed;\n   *   while (true) {\n   *     yield i;\n   *     i = 2 * i; // double it\n   *   }\n   * }\n   *\n   * var iterator = generateDoubles(3);\n   * var result = Rx.Observable.from(iterator).take(10);\n   * result.subscribe(x => console.log(x));\n   *\n   * // Results in the following:\n   * // 3 6 12 24 48 96 192 384 768 1536\n   *\n   * @see {@link create}\n   * @see {@link fromEvent}\n   * @see {@link fromEventPattern}\n   * @see {@link fromPromise}\n   *\n   * @param {ObservableInput<T>} ish A subscribable object, a Promise, an\n   * Observable-like, an Array, an iterable or an array-like object to be\n   * converted.\n   * @param {Scheduler} [scheduler] The scheduler on which to schedule the\n   * emissions of values.\n   * @return {Observable<T>} The Observable whose values are originally from the\n   * input object that was converted.\n   * @static true\n   * @name from\n   * @owner Observable\n   */\n  static create<T>(ish: ObservableInput<T>, scheduler?: IScheduler): Observable<T> {\n    if (ish != null) {\n      if (typeof ish[Symbol_observable] === 'function') {\n        if (ish instanceof Observable && !scheduler) {\n          return ish;\n        }\n        return new FromObservable<T>(ish, scheduler);\n      } else if (isArray(ish)) {\n        return new ArrayObservable<T>(ish, scheduler);\n      } else if (isPromise<T>(ish)) {\n        return new PromiseObservable<T>(ish, scheduler);\n      } else if (typeof ish[Symbol_iterator] === 'function' || typeof ish === 'string') {\n        return new IteratorObservable<T>(ish, scheduler);\n      } else if (isArrayLike(ish)) {\n        return new ArrayLikeObservable(ish, scheduler);\n      }\n    }\n\n    throw new TypeError((ish !== null && typeof ish || ish) + ' is not observable');\n  }\n\n  /** @deprecated internal use only */ _subscribe(subscriber: Subscriber<T>) {\n    const ish = this.ish;\n    const scheduler = this.scheduler;\n    if (scheduler == null) {\n      return ish[Symbol_observable]().subscribe(subscriber);\n    } else {\n      return ish[Symbol_observable]().subscribe(new ObserveOnSubscriber(subscriber, scheduler, 0));\n    }\n  }\n}\n","import { Observable } from '../Observable';\nimport { IScheduler } from '../Scheduler';\nimport { Operator } from '../Operator';\nimport { PartialObserver } from '../Observer';\nimport { Subscriber } from '../Subscriber';\nimport { Notification } from '../Notification';\nimport { TeardownLogic } from '../Subscription';\nimport { Action } from '../scheduler/Action';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n *\n * Re-emits all notifications from source Observable with specified scheduler.\n *\n * <span class=\"informal\">Ensure a specific scheduler is used, from outside of an Observable.</span>\n *\n * `observeOn` is an operator that accepts a scheduler as a first parameter, which will be used to reschedule\n * notifications emitted by the source Observable. It might be useful, if you do not have control over\n * internal scheduler of a given Observable, but want to control when its values are emitted nevertheless.\n *\n * Returned Observable emits the same notifications (nexted values, complete and error events) as the source Observable,\n * but rescheduled with provided scheduler. Note that this doesn't mean that source Observables internal\n * scheduler will be replaced in any way. Original scheduler still will be used, but when the source Observable emits\n * notification, it will be immediately scheduled again - this time with scheduler passed to `observeOn`.\n * An anti-pattern would be calling `observeOn` on Observable that emits lots of values synchronously, to split\n * that emissions into asynchronous chunks. For this to happen, scheduler would have to be passed into the source\n * Observable directly (usually into the operator that creates it). `observeOn` simply delays notifications a\n * little bit more, to ensure that they are emitted at expected moments.\n *\n * As a matter of fact, `observeOn` accepts second parameter, which specifies in milliseconds with what delay notifications\n * will be emitted. The main difference between {@link delay} operator and `observeOn` is that `observeOn`\n * will delay all notifications - including error notifications - while `delay` will pass through error\n * from source Observable immediately when it is emitted. In general it is highly recommended to use `delay` operator\n * for any kind of delaying of values in the stream, while using `observeOn` to specify which scheduler should be used\n * for notification emissions in general.\n *\n * @example <caption>Ensure values in subscribe are called just before browser repaint.</caption>\n * const intervals = Rx.Observable.interval(10); // Intervals are scheduled\n *                                               // with async scheduler by default...\n *\n * intervals\n * .observeOn(Rx.Scheduler.animationFrame)       // ...but we will observe on animationFrame\n * .subscribe(val => {                           // scheduler to ensure smooth animation.\n *   someDiv.style.height = val + 'px';\n * });\n *\n * @see {@link delay}\n *\n * @param {IScheduler} scheduler Scheduler that will be used to reschedule notifications from source Observable.\n * @param {number} [delay] Number of milliseconds that states with what delay every notification should be rescheduled.\n * @return {Observable<T>} Observable that emits the same notifications as the source Observable,\n * but with provided scheduler.\n *\n * @method observeOn\n * @owner Observable\n */\nexport function observeOn<T>(scheduler: IScheduler, delay: number = 0): MonoTypeOperatorFunction<T> {\n  return function observeOnOperatorFunction(source: Observable<T>): Observable<T> {\n    return source.lift(new ObserveOnOperator(scheduler, delay));\n  };\n}\n\nexport class ObserveOnOperator<T> implements Operator<T, T> {\n  constructor(private scheduler: IScheduler, private delay: number = 0) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new ObserveOnSubscriber(subscriber, this.scheduler, this.delay));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class ObserveOnSubscriber<T> extends Subscriber<T> {\n  static dispatch(this: Action<ObserveOnMessage>, arg: ObserveOnMessage) {\n    const { notification, destination } = arg;\n    notification.observe(destination);\n    this.unsubscribe();\n  }\n\n  constructor(destination: Subscriber<T>,\n              private scheduler: IScheduler,\n              private delay: number = 0) {\n    super(destination);\n  }\n\n  private scheduleMessage(notification: Notification<any>): void {\n    this.add(this.scheduler.schedule(\n      ObserveOnSubscriber.dispatch,\n      this.delay,\n      new ObserveOnMessage(notification, this.destination)\n    ));\n  }\n\n  protected _next(value: T): void {\n    this.scheduleMessage(Notification.createNext(value));\n  }\n\n  protected _error(err: any): void {\n    this.scheduleMessage(Notification.createError(err));\n  }\n\n  protected _complete(): void {\n    this.scheduleMessage(Notification.createComplete());\n  }\n}\n\nexport class ObserveOnMessage {\n  constructor(public notification: Notification<any>,\n              public destination: PartialObserver<any>) {\n  }\n}\n","import { PartialObserver } from './Observer';\nimport { Observable } from './Observable';\n\n/**\n * Represents a push-based event or value that an {@link Observable} can emit.\n * This class is particularly useful for operators that manage notifications,\n * like {@link materialize}, {@link dematerialize}, {@link observeOn}, and\n * others. Besides wrapping the actual delivered value, it also annotates it\n * with metadata of, for instance, what type of push message it is (`next`,\n * `error`, or `complete`).\n *\n * @see {@link materialize}\n * @see {@link dematerialize}\n * @see {@link observeOn}\n *\n * @class Notification<T>\n */\nexport class Notification<T> {\n  hasValue: boolean;\n\n  constructor(public kind: string, public value?: T, public error?: any) {\n    this.hasValue = kind === 'N';\n  }\n\n  /**\n   * Delivers to the given `observer` the value wrapped by this Notification.\n   * @param {Observer} observer\n   * @return\n   */\n  observe(observer: PartialObserver<T>): any {\n    switch (this.kind) {\n      case 'N':\n        return observer.next && observer.next(this.value);\n      case 'E':\n        return observer.error && observer.error(this.error);\n      case 'C':\n        return observer.complete && observer.complete();\n    }\n  }\n\n  /**\n   * Given some {@link Observer} callbacks, deliver the value represented by the\n   * current Notification to the correctly corresponding callback.\n   * @param {function(value: T): void} next An Observer `next` callback.\n   * @param {function(err: any): void} [error] An Observer `error` callback.\n   * @param {function(): void} [complete] An Observer `complete` callback.\n   * @return {any}\n   */\n  do(next: (value: T) => void, error?: (err: any) => void, complete?: () => void): any {\n    const kind = this.kind;\n    switch (kind) {\n      case 'N':\n        return next && next(this.value);\n      case 'E':\n        return error && error(this.error);\n      case 'C':\n        return complete && complete();\n    }\n  }\n\n  /**\n   * Takes an Observer or its individual callback functions, and calls `observe`\n   * or `do` methods accordingly.\n   * @param {Observer|function(value: T): void} nextOrObserver An Observer or\n   * the `next` callback.\n   * @param {function(err: any): void} [error] An Observer `error` callback.\n   * @param {function(): void} [complete] An Observer `complete` callback.\n   * @return {any}\n   */\n  accept(nextOrObserver: PartialObserver<T> | ((value: T) => void), error?: (err: any) => void, complete?: () => void) {\n    if (nextOrObserver && typeof (<PartialObserver<T>>nextOrObserver).next === 'function') {\n      return this.observe(<PartialObserver<T>>nextOrObserver);\n    } else {\n      return this.do(<(value: T) => void>nextOrObserver, error, complete);\n    }\n  }\n\n  /**\n   * Returns a simple Observable that just delivers the notification represented\n   * by this Notification instance.\n   * @return {any}\n   */\n  toObservable(): Observable<T> {\n    const kind = this.kind;\n    switch (kind) {\n      case 'N':\n        return Observable.of(this.value);\n      case 'E':\n        return Observable.throw(this.error);\n      case 'C':\n        return Observable.empty<T>();\n    }\n    throw new Error('unexpected notification kind value');\n  }\n\n  private static completeNotification: Notification<any> = new Notification('C');\n  private static undefinedValueNotification: Notification<any> = new Notification('N', undefined);\n\n  /**\n   * A shortcut to create a Notification instance of the type `next` from a\n   * given value.\n   * @param {T} value The `next` value.\n   * @return {Notification<T>} The \"next\" Notification representing the\n   * argument.\n   */\n  static createNext<T>(value: T): Notification<T> {\n    if (typeof value !== 'undefined') {\n      return new Notification('N', value);\n    }\n    return Notification.undefinedValueNotification;\n  }\n\n  /**\n   * A shortcut to create a Notification instance of the type `error` from a\n   * given error.\n   * @param {any} [err] The `error` error.\n   * @return {Notification<T>} The \"error\" Notification representing the\n   * argument.\n   */\n  static createError<T>(err?: any): Notification<T> {\n    return new Notification('E', undefined, err);\n  }\n\n  /**\n   * A shortcut to create a Notification instance of the type `complete`.\n   * @return {Notification<any>} The valueless \"complete\" Notification.\n   */\n  static createComplete(): Notification<any> {\n    return Notification.completeNotification;\n  }\n}\n","import { IScheduler } from '../Scheduler';\nimport { Observable } from '../Observable';\nimport { ScalarObservable } from './ScalarObservable';\nimport { EmptyObservable } from './EmptyObservable';\nimport { Subscriber } from '../Subscriber';\nimport { TeardownLogic } from '../Subscription';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport class ArrayLikeObservable<T> extends Observable<T> {\n\n  static create<T>(arrayLike: ArrayLike<T>, scheduler?: IScheduler): Observable<T> {\n    const length = arrayLike.length;\n    if (length === 0) {\n      return new EmptyObservable<T>();\n    } else if (length === 1) {\n      return new ScalarObservable<T>(<any>arrayLike[0], scheduler);\n    } else {\n      return new ArrayLikeObservable(arrayLike, scheduler);\n    }\n  }\n\n  static dispatch(state: any) {\n    const { arrayLike, index, length, subscriber } = state;\n\n    if (subscriber.closed) {\n      return;\n    }\n\n    if (index >= length) {\n      subscriber.complete();\n      return;\n    }\n\n    subscriber.next(arrayLike[index]);\n\n    state.index = index + 1;\n\n    (<any> this).schedule(state);\n  }\n\n  // value used if Array has one value and _isScalar\n  private value: any;\n\n  constructor(private arrayLike: ArrayLike<T>, private scheduler?: IScheduler) {\n    super();\n    if (!scheduler && arrayLike.length === 1) {\n      this._isScalar = true;\n      this.value = arrayLike[0];\n    }\n  }\n\n  /** @deprecated internal use only */ _subscribe(subscriber: Subscriber<T>): TeardownLogic {\n    let index = 0;\n    const { arrayLike, scheduler } = this;\n    const length = arrayLike.length;\n\n    if (scheduler) {\n      return scheduler.schedule(ArrayLikeObservable.dispatch, 0, {\n        arrayLike, index, length, subscriber\n      });\n    } else {\n      for (let i = 0; i < length && !subscriber.closed; i++) {\n        subscriber.next(arrayLike[i]);\n      }\n      subscriber.complete();\n    }\n  }\n}\n","import { root } from '../util/root';\nimport { IScheduler } from '../Scheduler';\nimport { Observable } from '../Observable';\nimport { iterator as Symbol_iterator } from '../symbol/iterator';\nimport { TeardownLogic } from '../Subscription';\nimport { Subscriber } from '../Subscriber';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport class IteratorObservable<T> extends Observable<T> {\n  private iterator: any;\n\n  static create<T>(iterator: any, scheduler?: IScheduler): IteratorObservable<T> {\n    return new IteratorObservable(iterator, scheduler);\n  }\n\n  static dispatch(state: any) {\n\n    const { index, hasError, iterator, subscriber } = state;\n\n    if (hasError) {\n      subscriber.error(state.error);\n      return;\n    }\n\n    let result = iterator.next();\n    if (result.done) {\n      subscriber.complete();\n      return;\n    }\n\n    subscriber.next(result.value);\n    state.index = index + 1;\n\n    if (subscriber.closed) {\n      if (typeof iterator.return === 'function') {\n        iterator.return();\n      }\n      return;\n    }\n\n    (<any> this).schedule(state);\n  }\n\n  constructor(iterator: any, private scheduler?: IScheduler) {\n    super();\n\n    if (iterator == null) {\n      throw new Error('iterator cannot be null.');\n    }\n\n    this.iterator = getIterator(iterator);\n  }\n\n  /** @deprecated internal use only */ _subscribe(subscriber: Subscriber<T>): TeardownLogic {\n\n    let index = 0;\n    const { iterator, scheduler } = this;\n\n    if (scheduler) {\n      return scheduler.schedule(IteratorObservable.dispatch, 0, {\n        index, iterator, subscriber\n      });\n    } else {\n      do {\n        let result = iterator.next();\n        if (result.done) {\n          subscriber.complete();\n          break;\n        } else {\n          subscriber.next(result.value);\n        }\n        if (subscriber.closed) {\n          if (typeof iterator.return === 'function') {\n            iterator.return();\n          }\n          break;\n        }\n      } while (true);\n    }\n  }\n}\n\nclass StringIterator {\n  constructor(private str: string,\n              private idx: number = 0,\n              private len: number = str.length) {\n  }\n  [Symbol_iterator]() { return (this); }\n  next() {\n    return this.idx < this.len ? {\n        done: false,\n        value: this.str.charAt(this.idx++)\n    } : {\n        done: true,\n        value: undefined\n    };\n  }\n}\n\nclass ArrayIterator {\n  constructor(private arr: Array<any>,\n              private idx: number = 0,\n              private len: number = toLength(arr)) {\n  }\n  [Symbol_iterator]() { return this; }\n  next() {\n    return this.idx < this.len ? {\n        done: false,\n        value: this.arr[this.idx++]\n    } : {\n        done: true,\n        value: undefined\n    };\n  }\n}\n\nfunction getIterator(obj: any) {\n  const i = obj[Symbol_iterator];\n  if (!i && typeof obj === 'string') {\n    return new StringIterator(obj);\n  }\n  if (!i && obj.length !== undefined) {\n    return new ArrayIterator(obj);\n  }\n  if (!i) {\n    throw new TypeError('object is not iterable');\n  }\n  return obj[Symbol_iterator]();\n}\n\nconst maxSafeInteger = Math.pow(2, 53) - 1;\n\nfunction toLength(o: any) {\n  let len = +o.length;\n  if (isNaN(len)) {\n      return 0;\n  }\n  if (len === 0 || !numberIsFinite(len)) {\n      return len;\n  }\n  len = sign(len) * Math.floor(Math.abs(len));\n  if (len <= 0) {\n      return 0;\n  }\n  if (len > maxSafeInteger) {\n      return maxSafeInteger;\n  }\n  return len;\n}\n\nfunction numberIsFinite(value: any) {\n  return typeof value === 'number' && root.isFinite(value);\n}\n\nfunction sign(value: any) {\n  let valueAsNumber = +value;\n  if (valueAsNumber === 0) {\n    return valueAsNumber;\n  }\n  if (isNaN(valueAsNumber)) {\n    return valueAsNumber;\n  }\n  return valueAsNumber < 0 ? -1 : 1;\n}\n","import { root } from '../util/root';\nimport { IScheduler } from '../Scheduler';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { TeardownLogic } from '../Subscription';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport class PromiseObservable<T> extends Observable<T> {\n\n  public value: T;\n\n  /**\n   * Converts a Promise to an Observable.\n   *\n   * <span class=\"informal\">Returns an Observable that just emits the Promise's\n   * resolved value, then completes.</span>\n   *\n   * Converts an ES2015 Promise or a Promises/A+ spec compliant Promise to an\n   * Observable. If the Promise resolves with a value, the output Observable\n   * emits that resolved value as a `next`, and then completes. If the Promise\n   * is rejected, then the output Observable emits the corresponding Error.\n   *\n   * @example <caption>Convert the Promise returned by Fetch to an Observable</caption>\n   * var result = Rx.Observable.fromPromise(fetch('http://myserver.com/'));\n   * result.subscribe(x => console.log(x), e => console.error(e));\n   *\n   * @see {@link bindCallback}\n   * @see {@link from}\n   *\n   * @param {PromiseLike<T>} promise The promise to be converted.\n   * @param {Scheduler} [scheduler] An optional IScheduler to use for scheduling\n   * the delivery of the resolved value (or the rejection).\n   * @return {Observable<T>} An Observable which wraps the Promise.\n   * @static true\n   * @name fromPromise\n   * @owner Observable\n   */\n  static create<T>(promise: PromiseLike<T>, scheduler?: IScheduler): Observable<T> {\n    return new PromiseObservable(promise, scheduler);\n  }\n\n  constructor(private promise: PromiseLike<T>, private scheduler?: IScheduler) {\n    super();\n  }\n\n  /** @deprecated internal use only */ _subscribe(subscriber: Subscriber<T>): TeardownLogic {\n    const promise = this.promise;\n    const scheduler = this.scheduler;\n\n    if (scheduler == null) {\n      if (this._isScalar) {\n        if (!subscriber.closed) {\n          subscriber.next(this.value);\n          subscriber.complete();\n        }\n      } else {\n        promise.then(\n          (value) => {\n            this.value = value;\n            this._isScalar = true;\n            if (!subscriber.closed) {\n              subscriber.next(value);\n              subscriber.complete();\n            }\n          },\n          (err) => {\n            if (!subscriber.closed) {\n              subscriber.error(err);\n            }\n          }\n        )\n        .then(null, err => {\n          // escape the promise trap, throw unhandled errors\n          root.setTimeout(() => { throw err; });\n        });\n      }\n    } else {\n      if (this._isScalar) {\n        if (!subscriber.closed) {\n          return scheduler.schedule(dispatchNext, 0, { value: this.value, subscriber });\n        }\n      } else {\n        promise.then(\n          (value) => {\n            this.value = value;\n            this._isScalar = true;\n            if (!subscriber.closed) {\n              subscriber.add(scheduler.schedule(dispatchNext, 0, { value, subscriber }));\n            }\n          },\n          (err) => {\n            if (!subscriber.closed) {\n              subscriber.add(scheduler.schedule(dispatchError, 0, { err, subscriber }));\n            }\n          })\n          .then(null, (err) => {\n            // escape the promise trap, throw unhandled errors\n            root.setTimeout(() => { throw err; });\n          });\n      }\n    }\n  }\n}\n\ninterface DispatchNextArg<T> {\n  subscriber: Subscriber<T>;\n  value: T;\n}\nfunction dispatchNext<T>(arg: DispatchNextArg<T>) {\n  const { value, subscriber } = arg;\n  if (!subscriber.closed) {\n    subscriber.next(value);\n    subscriber.complete();\n  }\n}\n\ninterface DispatchErrorArg<T> {\n  subscriber: Subscriber<T>;\n  err: any;\n}\nfunction dispatchError<T>(arg: DispatchErrorArg<T>) {\n  const { err, subscriber } = arg;\n  if (!subscriber.closed) {\n    subscriber.error(err);\n  }\n}\n","import { Observable, ObservableInput } from '../Observable';\nimport { ArrayObservable } from '../observable/ArrayObservable';\nimport { isArray } from '../util/isArray';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OperatorFunction } from '../interfaces';\n\nconst none = {};\n\n/* tslint:disable:max-line-length */\nexport function combineLatest<T, R>(project: (v1: T) => R): OperatorFunction<T, R>;\nexport function combineLatest<T, T2, R>(v2: ObservableInput<T2>, project: (v1: T, v2: T2) => R): OperatorFunction<T, R>;\nexport function combineLatest<T, T2, T3, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, project: (v1: T, v2: T2, v3: T3) => R): OperatorFunction<T, R>;\nexport function combineLatest<T, T2, T3, T4, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, project: (v1: T, v2: T2, v3: T3, v4: T4) => R): OperatorFunction<T, R>;\nexport function combineLatest<T, T2, T3, T4, T5, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, project: (v1: T, v2: T2, v3: T3, v4: T4, v5: T5) => R): OperatorFunction<T, R>;\nexport function combineLatest<T, T2, T3, T4, T5, T6, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>, project: (v1: T, v2: T2, v3: T3, v4: T4, v5: T5, v6: T6) => R): OperatorFunction<T, R> ;\nexport function combineLatest<T, T2>(v2: ObservableInput<T2>): OperatorFunction<T, [T, T2]>;\nexport function combineLatest<T, T2, T3>(v2: ObservableInput<T2>, v3: ObservableInput<T3>): OperatorFunction<T, [T, T2, T3]>;\nexport function combineLatest<T, T2, T3, T4>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>): OperatorFunction<T, [T, T2, T3, T4]>;\nexport function combineLatest<T, T2, T3, T4, T5>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>): OperatorFunction<T, [T, T2, T3, T4, T5]>;\nexport function combineLatest<T, T2, T3, T4, T5, T6>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>): OperatorFunction<T, [T, T2, T3, T4, T5, T6]> ;\nexport function combineLatest<T, R>(...observables: Array<ObservableInput<T> | ((...values: Array<T>) => R)>): OperatorFunction<T, R>;\nexport function combineLatest<T, R>(array: ObservableInput<T>[]): OperatorFunction<T, Array<T>>;\nexport function combineLatest<T, TOther, R>(array: ObservableInput<TOther>[], project: (v1: T, ...values: Array<TOther>) => R): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Combines multiple Observables to create an Observable whose values are\n * calculated from the latest values of each of its input Observables.\n *\n * <span class=\"informal\">Whenever any input Observable emits a value, it\n * computes a formula using the latest values from all the inputs, then emits\n * the output of that formula.</span>\n *\n * <img src=\"./img/combineLatest.png\" width=\"100%\">\n *\n * `combineLatest` combines the values from this Observable with values from\n * Observables passed as arguments. This is done by subscribing to each\n * Observable, in order, and collecting an array of each of the most recent\n * values any time any of the input Observables emits, then either taking that\n * array and passing it as arguments to an optional `project` function and\n * emitting the return value of that, or just emitting the array of recent\n * values directly if there is no `project` function.\n *\n * @example <caption>Dynamically calculate the Body-Mass Index from an Observable of weight and one for height</caption>\n * var weight = Rx.Observable.of(70, 72, 76, 79, 75);\n * var height = Rx.Observable.of(1.76, 1.77, 1.78);\n * var bmi = weight.combineLatest(height, (w, h) => w / (h * h));\n * bmi.subscribe(x => console.log('BMI is ' + x));\n *\n * // With output to console:\n * // BMI is 24.212293388429753\n * // BMI is 23.93948099205209\n * // BMI is 23.671253629592222\n *\n * @see {@link combineAll}\n * @see {@link merge}\n * @see {@link withLatestFrom}\n *\n * @param {ObservableInput} other An input Observable to combine with the source\n * Observable. More than one input Observables may be given as argument.\n * @param {function} [project] An optional function to project the values from\n * the combined latest values into a new value on the output Observable.\n * @return {Observable} An Observable of projected values from the most recent\n * values from each input Observable, or an array of the most recent values from\n * each input Observable.\n * @method combineLatest\n * @owner Observable\n */\nexport function combineLatest<T, R>(...observables: Array<ObservableInput<any> |\n                                                    Array<ObservableInput<any>> |\n                                                    ((...values: Array<any>) => R)>): OperatorFunction<T, R> {\n  let project: (...values: Array<any>) => R = null;\n  if (typeof observables[observables.length - 1] === 'function') {\n    project = <(...values: Array<any>) => R>observables.pop();\n  }\n\n  // if the first and only other argument besides the resultSelector is an array\n  // assume it's been called with `combineLatest([obs1, obs2, obs3], project)`\n  if (observables.length === 1 && isArray(observables[0])) {\n    observables = (<any>observables[0]).slice();\n  }\n\n  return (source: Observable<T>) => source.lift.call(new ArrayObservable([source, ...observables]), new CombineLatestOperator(project));\n}\n\nexport class CombineLatestOperator<T, R> implements Operator<T, R> {\n  constructor(private project?: (...values: Array<any>) => R) {\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new CombineLatestSubscriber(subscriber, this.project));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class CombineLatestSubscriber<T, R> extends OuterSubscriber<T, R> {\n  private active: number = 0;\n  private values: any[] = [];\n  private observables: any[] = [];\n  private toRespond: number;\n\n  constructor(destination: Subscriber<R>, private project?: (...values: Array<any>) => R) {\n    super(destination);\n  }\n\n  protected _next(observable: any) {\n    this.values.push(none);\n    this.observables.push(observable);\n  }\n\n  protected _complete() {\n    const observables = this.observables;\n    const len = observables.length;\n    if (len === 0) {\n      this.destination.complete();\n    } else {\n      this.active = len;\n      this.toRespond = len;\n      for (let i = 0; i < len; i++) {\n        const observable = observables[i];\n        this.add(subscribeToResult(this, observable, observable, i));\n      }\n    }\n  }\n\n  notifyComplete(unused: Subscriber<R>): void {\n    if ((this.active -= 1) === 0) {\n      this.destination.complete();\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    const values = this.values;\n    const oldVal = values[outerIndex];\n    const toRespond = !this.toRespond\n      ? 0\n      : oldVal === none ? --this.toRespond : this.toRespond;\n    values[outerIndex] = innerValue;\n\n    if (toRespond === 0) {\n      if (this.project) {\n        this._tryProject(values);\n      } else {\n        this.destination.next(values.slice());\n      }\n    }\n  }\n\n  private _tryProject(values: any[]) {\n    let result: any;\n    try {\n      result = this.project.apply(this, values);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    this.destination.next(result);\n  }\n}\n","import { IScheduler } from '../Scheduler';\nimport { Observable } from '../Observable';\nimport { ScalarObservable } from './ScalarObservable';\nimport { EmptyObservable } from './EmptyObservable';\nimport { Subscriber } from '../Subscriber';\nimport { isScheduler } from '../util/isScheduler';\nimport { TeardownLogic } from '../Subscription';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport class ArrayObservable<T> extends Observable<T> {\n\n  static create<T>(array: T[], scheduler?: IScheduler): Observable<T> {\n    return new ArrayObservable(array, scheduler);\n  }\n\n  static of<T>(item1: T, scheduler?: IScheduler): Observable<T>;\n  static of<T>(item1: T, item2: T, scheduler?: IScheduler): Observable<T>;\n  static of<T>(item1: T, item2: T, item3: T, scheduler?: IScheduler): Observable<T>;\n  static of<T>(item1: T, item2: T, item3: T, item4: T, scheduler?: IScheduler): Observable<T>;\n  static of<T>(item1: T, item2: T, item3: T, item4: T, item5: T, scheduler?: IScheduler): Observable<T>;\n  static of<T>(item1: T, item2: T, item3: T, item4: T, item5: T, item6: T, scheduler?: IScheduler): Observable<T>;\n  static of<T>(...array: Array<T | IScheduler>): Observable<T>;\n  /**\n   * Creates an Observable that emits some values you specify as arguments,\n   * immediately one after the other, and then emits a complete notification.\n   *\n   * <span class=\"informal\">Emits the arguments you provide, then completes.\n   * </span>\n   *\n   * <img src=\"./img/of.png\" width=\"100%\">\n   *\n   * This static operator is useful for creating a simple Observable that only\n   * emits the arguments given, and the complete notification thereafter. It can\n   * be used for composing with other Observables, such as with {@link concat}.\n   * By default, it uses a `null` IScheduler, which means the `next`\n   * notifications are sent synchronously, although with a different IScheduler\n   * it is possible to determine when those notifications will be delivered.\n   *\n   * @example <caption>Emit 10, 20, 30, then 'a', 'b', 'c', then start ticking every second.</caption>\n   * var numbers = Rx.Observable.of(10, 20, 30);\n   * var letters = Rx.Observable.of('a', 'b', 'c');\n   * var interval = Rx.Observable.interval(1000);\n   * var result = numbers.concat(letters).concat(interval);\n   * result.subscribe(x => console.log(x));\n   *\n   * @see {@link create}\n   * @see {@link empty}\n   * @see {@link never}\n   * @see {@link throw}\n   *\n   * @param {...T} values Arguments that represent `next` values to be emitted.\n   * @param {Scheduler} [scheduler] A {@link IScheduler} to use for scheduling\n   * the emissions of the `next` notifications.\n   * @return {Observable<T>} An Observable that emits each given input value.\n   * @static true\n   * @name of\n   * @owner Observable\n   */\n  static of<T>(...array: Array<T | IScheduler>): Observable<T> {\n    let scheduler = <IScheduler>array[array.length - 1];\n    if (isScheduler(scheduler)) {\n      array.pop();\n    } else {\n      scheduler = null;\n    }\n\n    const len = array.length;\n    if (len > 1) {\n      return new ArrayObservable<T>(<any>array, scheduler);\n    } else if (len === 1) {\n      return new ScalarObservable<T>(<any>array[0], scheduler);\n    } else {\n      return new EmptyObservable<T>(scheduler);\n    }\n  }\n\n  static dispatch(state: any) {\n\n    const { array, index, count, subscriber } = state;\n\n    if (index >= count) {\n      subscriber.complete();\n      return;\n    }\n\n    subscriber.next(array[index]);\n\n    if (subscriber.closed) {\n      return;\n    }\n\n    state.index = index + 1;\n\n    (<any> this).schedule(state);\n  }\n\n  // value used if Array has one value and _isScalar\n  value: any;\n\n  constructor(private array: T[], private scheduler?: IScheduler) {\n    super();\n    if (!scheduler && array.length === 1) {\n      this._isScalar = true;\n      this.value = array[0];\n    }\n  }\n\n  /** @deprecated internal use only */ _subscribe(subscriber: Subscriber<T>): TeardownLogic {\n    let index = 0;\n    const array = this.array;\n    const count = array.length;\n    const scheduler = this.scheduler;\n\n    if (scheduler) {\n      return scheduler.schedule(ArrayObservable.dispatch, 0, {\n        array, index, count, subscriber\n      });\n    } else {\n      for (let i = 0; i < count && !subscriber.closed; i++) {\n        subscriber.next(array[i]);\n      }\n      subscriber.complete();\n    }\n  }\n}\n","import { IScheduler } from '../Scheduler';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { TeardownLogic } from '../Subscription';\n\nexport interface DispatchArg<T> {\n  subscriber: Subscriber<T>;\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport class EmptyObservable<T> extends Observable<T> {\n\n  /**\n   * Creates an Observable that emits no items to the Observer and immediately\n   * emits a complete notification.\n   *\n   * <span class=\"informal\">Just emits 'complete', and nothing else.\n   * </span>\n   *\n   * <img src=\"./img/empty.png\" width=\"100%\">\n   *\n   * This static operator is useful for creating a simple Observable that only\n   * emits the complete notification. It can be used for composing with other\n   * Observables, such as in a {@link mergeMap}.\n   *\n   * @example <caption>Emit the number 7, then complete.</caption>\n   * var result = Rx.Observable.empty().startWith(7);\n   * result.subscribe(x => console.log(x));\n   *\n   * @example <caption>Map and flatten only odd numbers to the sequence 'a', 'b', 'c'</caption>\n   * var interval = Rx.Observable.interval(1000);\n   * var result = interval.mergeMap(x =>\n   *   x % 2 === 1 ? Rx.Observable.of('a', 'b', 'c') : Rx.Observable.empty()\n   * );\n   * result.subscribe(x => console.log(x));\n   *\n   * // Results in the following to the console:\n   * // x is equal to the count on the interval eg(0,1,2,3,...)\n   * // x will occur every 1000ms\n   * // if x % 2 is equal to 1 print abc\n   * // if x % 2 is not equal to 1 nothing will be output\n   *\n   * @see {@link create}\n   * @see {@link never}\n   * @see {@link of}\n   * @see {@link throw}\n   *\n   * @param {Scheduler} [scheduler] A {@link IScheduler} to use for scheduling\n   * the emission of the complete notification.\n   * @return {Observable} An \"empty\" Observable: emits only the complete\n   * notification.\n   * @static true\n   * @name empty\n   * @owner Observable\n   */\n  static create<T>(scheduler?: IScheduler): Observable<T> {\n    return new EmptyObservable<T>(scheduler);\n  }\n\n  static dispatch<T>(arg: DispatchArg<T>) {\n    const { subscriber } = arg;\n    subscriber.complete();\n  }\n\n  constructor(private scheduler?: IScheduler) {\n    super();\n  }\n\n  /** @deprecated internal use only */ _subscribe(subscriber: Subscriber<T>): TeardownLogic {\n\n    const scheduler = this.scheduler;\n\n    if (scheduler) {\n      return scheduler.schedule(EmptyObservable.dispatch, 0, { subscriber });\n    } else {\n      subscriber.complete();\n    }\n  }\n}\n","import { IScheduler } from '../Scheduler';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { TeardownLogic } from '../Subscription';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport class ScalarObservable<T> extends Observable<T> {\n  static create<T>(value: T, scheduler?: IScheduler): ScalarObservable<T> {\n    return new ScalarObservable(value, scheduler);\n  }\n\n  static dispatch(state: any): void {\n    const { done, value, subscriber } = state;\n\n    if (done) {\n      subscriber.complete();\n      return;\n    }\n\n    subscriber.next(value);\n    if (subscriber.closed) {\n      return;\n    }\n\n    state.done = true;\n    (<any> this).schedule(state);\n  }\n\n  _isScalar: boolean = true;\n\n  constructor(public value: T, private scheduler?: IScheduler) {\n    super();\n    if (scheduler) {\n      this._isScalar = false;\n    }\n  }\n\n  /** @deprecated internal use only */ _subscribe(subscriber: Subscriber<T>): TeardownLogic {\n    const value = this.value;\n    const scheduler = this.scheduler;\n\n    if (scheduler) {\n      return scheduler.schedule(ScalarObservable.dispatch, 0, {\n        done: false, value, subscriber\n      });\n    } else {\n      subscriber.next(value);\n      if (!subscriber.closed) {\n        subscriber.complete();\n      }\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable, ObservableInput } from '../Observable';\n\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OperatorFunction } from '../interfaces';\n\n/**\n * Catches errors on the observable to be handled by returning a new observable or throwing an error.\n *\n * <img src=\"./img/catch.png\" width=\"100%\">\n *\n * @example <caption>Continues with a different Observable when there's an error</caption>\n *\n * Observable.of(1, 2, 3, 4, 5)\n *   .map(n => {\n * \t   if (n == 4) {\n * \t     throw 'four!';\n *     }\n *\t   return n;\n *   })\n *   .catch(err => Observable.of('I', 'II', 'III', 'IV', 'V'))\n *   .subscribe(x => console.log(x));\n *   // 1, 2, 3, I, II, III, IV, V\n *\n * @example <caption>Retries the caught source Observable again in case of error, similar to retry() operator</caption>\n *\n * Observable.of(1, 2, 3, 4, 5)\n *   .map(n => {\n * \t   if (n === 4) {\n * \t     throw 'four!';\n *     }\n * \t   return n;\n *   })\n *   .catch((err, caught) => caught)\n *   .take(30)\n *   .subscribe(x => console.log(x));\n *   // 1, 2, 3, 1, 2, 3, ...\n *\n * @example <caption>Throws a new error when the source Observable throws an error</caption>\n *\n * Observable.of(1, 2, 3, 4, 5)\n *   .map(n => {\n *     if (n == 4) {\n *       throw 'four!';\n *     }\n *     return n;\n *   })\n *   .catch(err => {\n *     throw 'error in source. Details: ' + err;\n *   })\n *   .subscribe(\n *     x => console.log(x),\n *     err => console.log(err)\n *   );\n *   // 1, 2, 3, error in source. Details: four!\n *\n * @param {function} selector a function that takes as arguments `err`, which is the error, and `caught`, which\n *  is the source observable, in case you'd like to \"retry\" that observable by returning it again. Whatever observable\n *  is returned by the `selector` will be used to continue the observable chain.\n * @return {Observable} An observable that originates from either the source or the observable returned by the\n *  catch `selector` function.\n * @name catchError\n */\nexport function catchError<T, R>(selector: (err: any, caught: Observable<T>) => ObservableInput<R>): OperatorFunction<T, T | R> {\n  return function catchErrorOperatorFunction(source: Observable<T>): Observable<T | R> {\n    const operator = new CatchOperator(selector);\n    const caught = source.lift(operator);\n    return (operator.caught = caught as Observable<T>);\n  };\n}\n\nclass CatchOperator<T, R> implements Operator<T, T | R> {\n  caught: Observable<T>;\n\n  constructor(private selector: (err: any, caught: Observable<T>) => ObservableInput<T | R>) {\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new CatchSubscriber(subscriber, this.selector, this.caught));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass CatchSubscriber<T, R> extends OuterSubscriber<T, T | R> {\n  constructor(destination: Subscriber<any>,\n              private selector: (err: any, caught: Observable<T>) => ObservableInput<T | R>,\n              private caught: Observable<T>) {\n    super(destination);\n  }\n\n  // NOTE: overriding `error` instead of `_error` because we don't want\n  // to have this flag this subscriber as `isStopped`. We can mimic the\n  // behavior of the RetrySubscriber (from the `retry` operator), where\n  // we unsubscribe from our source chain, reset our Subscriber flags,\n  // then subscribe to the selector result.\n  error(err: any) {\n    if (!this.isStopped) {\n      let result: any;\n      try {\n        result = this.selector(err, this.caught);\n      } catch (err2) {\n        super.error(err2);\n        return;\n      }\n      this._unsubscribeAndRecycle();\n      this.add(subscribeToResult(this, result));\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { Subscription } from '../Subscription';\nimport { tryCatch } from '../util/tryCatch';\nimport { errorObject } from '../util/errorObject';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OperatorFunction } from '../interfaces';\n\n/**\n * Buffers the source Observable values, using a factory function of closing\n * Observables to determine when to close, emit, and reset the buffer.\n *\n * <span class=\"informal\">Collects values from the past as an array. When it\n * starts collecting values, it calls a function that returns an Observable that\n * tells when to close the buffer and restart collecting.</span>\n *\n * <img src=\"./img/bufferWhen.png\" width=\"100%\">\n *\n * Opens a buffer immediately, then closes the buffer when the observable\n * returned by calling `closingSelector` function emits a value. When it closes\n * the buffer, it immediately opens a new buffer and repeats the process.\n *\n * @example <caption>Emit an array of the last clicks every [1-5] random seconds</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var buffered = clicks.bufferWhen(() =>\n *   Rx.Observable.interval(1000 + Math.random() * 4000)\n * );\n * buffered.subscribe(x => console.log(x));\n *\n * @see {@link buffer}\n * @see {@link bufferCount}\n * @see {@link bufferTime}\n * @see {@link bufferToggle}\n * @see {@link windowWhen}\n *\n * @param {function(): Observable} closingSelector A function that takes no\n * arguments and returns an Observable that signals buffer closure.\n * @return {Observable<T[]>} An observable of arrays of buffered values.\n * @method bufferWhen\n * @owner Observable\n */\nexport function bufferWhen<T>(closingSelector: () => Observable<any>): OperatorFunction<T, T[]> {\n  return function (source: Observable<T>) {\n    return source.lift(new BufferWhenOperator(closingSelector));\n  };\n}\n\nclass BufferWhenOperator<T> implements Operator<T, T[]> {\n\n  constructor(private closingSelector: () => Observable<any>) {\n  }\n\n  call(subscriber: Subscriber<T[]>, source: any): any {\n    return source.subscribe(new BufferWhenSubscriber(subscriber, this.closingSelector));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass BufferWhenSubscriber<T> extends OuterSubscriber<T, any> {\n  private buffer: T[];\n  private subscribing: boolean = false;\n  private closingSubscription: Subscription;\n\n  constructor(destination: Subscriber<T[]>, private closingSelector: () => Observable<any>) {\n    super(destination);\n    this.openBuffer();\n  }\n\n  protected _next(value: T) {\n    this.buffer.push(value);\n  }\n\n  protected _complete() {\n    const buffer = this.buffer;\n    if (buffer) {\n      this.destination.next(buffer);\n    }\n    super._complete();\n  }\n\n  /** @deprecated internal use only */ _unsubscribe() {\n    this.buffer = null;\n    this.subscribing = false;\n  }\n\n  notifyNext(outerValue: T, innerValue: any,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, any>): void {\n    this.openBuffer();\n  }\n\n  notifyComplete(): void {\n    if (this.subscribing) {\n      this.complete();\n    } else {\n      this.openBuffer();\n    }\n  }\n\n  openBuffer() {\n\n    let { closingSubscription } = this;\n\n    if (closingSubscription) {\n      this.remove(closingSubscription);\n      closingSubscription.unsubscribe();\n    }\n\n    const buffer = this.buffer;\n    if (this.buffer) {\n      this.destination.next(buffer);\n    }\n\n    this.buffer = [];\n\n    const closingNotifier = tryCatch(this.closingSelector)();\n\n    if (closingNotifier === errorObject) {\n      this.error(errorObject.e);\n    } else {\n      closingSubscription = new Subscription();\n      this.closingSubscription = closingSubscription;\n      this.add(closingSubscription);\n      this.subscribing = true;\n      closingSubscription.add(subscribeToResult(this, closingNotifier));\n      this.subscribing = false;\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable, SubscribableOrPromise } from '../Observable';\nimport { Subscription } from '../Subscription';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { OperatorFunction } from '../interfaces';\n\n/**\n * Buffers the source Observable values starting from an emission from\n * `openings` and ending when the output of `closingSelector` emits.\n *\n * <span class=\"informal\">Collects values from the past as an array. Starts\n * collecting only when `opening` emits, and calls the `closingSelector`\n * function to get an Observable that tells when to close the buffer.</span>\n *\n * <img src=\"./img/bufferToggle.png\" width=\"100%\">\n *\n * Buffers values from the source by opening the buffer via signals from an\n * Observable provided to `openings`, and closing and sending the buffers when\n * a Subscribable or Promise returned by the `closingSelector` function emits.\n *\n * @example <caption>Every other second, emit the click events from the next 500ms</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var openings = Rx.Observable.interval(1000);\n * var buffered = clicks.bufferToggle(openings, i =>\n *   i % 2 ? Rx.Observable.interval(500) : Rx.Observable.empty()\n * );\n * buffered.subscribe(x => console.log(x));\n *\n * @see {@link buffer}\n * @see {@link bufferCount}\n * @see {@link bufferTime}\n * @see {@link bufferWhen}\n * @see {@link windowToggle}\n *\n * @param {SubscribableOrPromise<O>} openings A Subscribable or Promise of notifications to start new\n * buffers.\n * @param {function(value: O): SubscribableOrPromise} closingSelector A function that takes\n * the value emitted by the `openings` observable and returns a Subscribable or Promise,\n * which, when it emits, signals that the associated buffer should be emitted\n * and cleared.\n * @return {Observable<T[]>} An observable of arrays of buffered values.\n * @method bufferToggle\n * @owner Observable\n */\nexport function bufferToggle<T, O>(\n  openings: SubscribableOrPromise<O>,\n  closingSelector: (value: O) => SubscribableOrPromise<any>\n): OperatorFunction<T, T[]> {\n  return function bufferToggleOperatorFunction(source: Observable<T>) {\n    return source.lift(new BufferToggleOperator<T, O>(openings, closingSelector));\n  };\n}\n\nclass BufferToggleOperator<T, O> implements Operator<T, T[]> {\n\n  constructor(private openings: SubscribableOrPromise<O>,\n              private closingSelector: (value: O) => SubscribableOrPromise<any>) {\n  }\n\n  call(subscriber: Subscriber<T[]>, source: any): any {\n    return source.subscribe(new BufferToggleSubscriber(subscriber, this.openings, this.closingSelector));\n  }\n}\n\ninterface BufferContext<T> {\n  buffer: T[];\n  subscription: Subscription;\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass BufferToggleSubscriber<T, O> extends OuterSubscriber<T, O> {\n  private contexts: Array<BufferContext<T>> = [];\n\n  constructor(destination: Subscriber<T[]>,\n              private openings: SubscribableOrPromise<O>,\n              private closingSelector: (value: O) => SubscribableOrPromise<any> | void) {\n    super(destination);\n    this.add(subscribeToResult(this, openings));\n  }\n\n  protected _next(value: T): void {\n    const contexts = this.contexts;\n    const len = contexts.length;\n    for (let i = 0; i < len; i++) {\n      contexts[i].buffer.push(value);\n    }\n  }\n\n  protected _error(err: any): void {\n    const contexts = this.contexts;\n    while (contexts.length > 0) {\n      const context = contexts.shift();\n      context.subscription.unsubscribe();\n      context.buffer = null;\n      context.subscription = null;\n    }\n    this.contexts = null;\n    super._error(err);\n  }\n\n  protected _complete(): void {\n    const contexts = this.contexts;\n    while (contexts.length > 0) {\n      const context = contexts.shift();\n      this.destination.next(context.buffer);\n      context.subscription.unsubscribe();\n      context.buffer = null;\n      context.subscription = null;\n    }\n    this.contexts = null;\n    super._complete();\n  }\n\n  notifyNext(outerValue: any, innerValue: O,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, O>): void {\n    outerValue ? this.closeBuffer(outerValue) : this.openBuffer(innerValue);\n  }\n\n  notifyComplete(innerSub: InnerSubscriber<T, O>): void {\n    this.closeBuffer((<any> innerSub).context);\n  }\n\n  private openBuffer(value: O): void {\n    try {\n      const closingSelector = this.closingSelector;\n      const closingNotifier = closingSelector.call(this, value);\n      if (closingNotifier) {\n        this.trySubscribe(closingNotifier);\n      }\n    } catch (err) {\n      this._error(err);\n    }\n  }\n\n  private closeBuffer(context: BufferContext<T>): void {\n    const contexts = this.contexts;\n\n    if (contexts && context) {\n      const { buffer, subscription } = context;\n      this.destination.next(buffer);\n      contexts.splice(contexts.indexOf(context), 1);\n      this.remove(subscription);\n      subscription.unsubscribe();\n    }\n  }\n\n  private trySubscribe(closingNotifier: any): void {\n    const contexts = this.contexts;\n\n    const buffer: Array<T> = [];\n    const subscription = new Subscription();\n    const context = { buffer, subscription };\n    contexts.push(context);\n\n    const innerSubscription = subscribeToResult(this, closingNotifier, <any>context);\n\n    if (!innerSubscription || innerSubscription.closed) {\n      this.closeBuffer(context);\n    } else {\n      (<any> innerSubscription).context = context;\n\n      this.add(innerSubscription);\n      subscription.add(innerSubscription);\n    }\n  }\n}\n","import { IScheduler } from '../Scheduler';\nimport { Action } from '../scheduler/Action';\nimport { Operator } from '../Operator';\nimport { async } from '../scheduler/async';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { isScheduler } from '../util/isScheduler';\nimport { OperatorFunction } from '../interfaces';\n\n/* tslint:disable:max-line-length */\nexport function bufferTime<T>(bufferTimeSpan: number, scheduler?: IScheduler): OperatorFunction<T, T[]>;\nexport function bufferTime<T>(bufferTimeSpan: number, bufferCreationInterval: number, scheduler?: IScheduler): OperatorFunction<T, T[]>;\nexport function bufferTime<T>(bufferTimeSpan: number, bufferCreationInterval: number, maxBufferSize: number, scheduler?: IScheduler): OperatorFunction<T, T[]>;\n/* tslint:enable:max-line-length */\n\n/**\n * Buffers the source Observable values for a specific time period.\n *\n * <span class=\"informal\">Collects values from the past as an array, and emits\n * those arrays periodically in time.</span>\n *\n * <img src=\"./img/bufferTime.png\" width=\"100%\">\n *\n * Buffers values from the source for a specific time duration `bufferTimeSpan`.\n * Unless the optional argument `bufferCreationInterval` is given, it emits and\n * resets the buffer every `bufferTimeSpan` milliseconds. If\n * `bufferCreationInterval` is given, this operator opens the buffer every\n * `bufferCreationInterval` milliseconds and closes (emits and resets) the\n * buffer every `bufferTimeSpan` milliseconds. When the optional argument\n * `maxBufferSize` is specified, the buffer will be closed either after\n * `bufferTimeSpan` milliseconds or when it contains `maxBufferSize` elements.\n *\n * @example <caption>Every second, emit an array of the recent click events</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var buffered = clicks.bufferTime(1000);\n * buffered.subscribe(x => console.log(x));\n *\n * @example <caption>Every 5 seconds, emit the click events from the next 2 seconds</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var buffered = clicks.bufferTime(2000, 5000);\n * buffered.subscribe(x => console.log(x));\n *\n * @see {@link buffer}\n * @see {@link bufferCount}\n * @see {@link bufferToggle}\n * @see {@link bufferWhen}\n * @see {@link windowTime}\n *\n * @param {number} bufferTimeSpan The amount of time to fill each buffer array.\n * @param {number} [bufferCreationInterval] The interval at which to start new\n * buffers.\n * @param {number} [maxBufferSize] The maximum buffer size.\n * @param {Scheduler} [scheduler=async] The scheduler on which to schedule the\n * intervals that determine buffer boundaries.\n * @return {Observable<T[]>} An observable of arrays of buffered values.\n * @method bufferTime\n * @owner Observable\n */\nexport function bufferTime<T>(bufferTimeSpan: number): OperatorFunction<T, T[]> {\n  let length: number = arguments.length;\n\n  let scheduler: IScheduler = async;\n  if (isScheduler(arguments[arguments.length - 1])) {\n    scheduler = arguments[arguments.length - 1];\n    length--;\n  }\n\n  let bufferCreationInterval: number = null;\n  if (length >= 2) {\n    bufferCreationInterval = arguments[1];\n  }\n\n  let maxBufferSize: number = Number.POSITIVE_INFINITY;\n  if (length >= 3) {\n    maxBufferSize = arguments[2];\n  }\n\n  return function bufferTimeOperatorFunction(source: Observable<T>) {\n    return source.lift(new BufferTimeOperator<T>(bufferTimeSpan, bufferCreationInterval, maxBufferSize, scheduler));\n  };\n}\n\nclass BufferTimeOperator<T> implements Operator<T, T[]> {\n  constructor(private bufferTimeSpan: number,\n              private bufferCreationInterval: number,\n              private maxBufferSize: number,\n              private scheduler: IScheduler) {\n  }\n\n  call(subscriber: Subscriber<T[]>, source: any): any {\n    return source.subscribe(new BufferTimeSubscriber(\n      subscriber, this.bufferTimeSpan, this.bufferCreationInterval, this.maxBufferSize, this.scheduler\n    ));\n  }\n}\n\nclass Context<T> {\n  buffer: T[] = [];\n  closeAction: Subscription;\n}\n\ntype CreationState<T> = {\n  bufferTimeSpan: number;\n  bufferCreationInterval: number,\n  subscriber: BufferTimeSubscriber<T>;\n  scheduler: IScheduler;\n};\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass BufferTimeSubscriber<T> extends Subscriber<T> {\n  private contexts: Array<Context<T>> = [];\n  private timespanOnly: boolean;\n\n  constructor(destination: Subscriber<T[]>,\n              private bufferTimeSpan: number,\n              private bufferCreationInterval: number,\n              private maxBufferSize: number,\n              private scheduler: IScheduler) {\n    super(destination);\n    const context = this.openContext();\n    this.timespanOnly = bufferCreationInterval == null || bufferCreationInterval < 0;\n    if (this.timespanOnly) {\n      const timeSpanOnlyState = { subscriber: this, context, bufferTimeSpan };\n      this.add(context.closeAction = scheduler.schedule(dispatchBufferTimeSpanOnly, bufferTimeSpan, timeSpanOnlyState));\n    } else {\n      const closeState = { subscriber: this, context };\n      const creationState: CreationState<T> = { bufferTimeSpan, bufferCreationInterval, subscriber: this, scheduler };\n      this.add(context.closeAction = scheduler.schedule(dispatchBufferClose, bufferTimeSpan, closeState));\n      this.add(scheduler.schedule(dispatchBufferCreation, bufferCreationInterval, creationState));\n    }\n  }\n\n  protected _next(value: T) {\n    const contexts = this.contexts;\n    const len = contexts.length;\n    let filledBufferContext: Context<T>;\n    for (let i = 0; i < len; i++) {\n      const context = contexts[i];\n      const buffer = context.buffer;\n      buffer.push(value);\n      if (buffer.length == this.maxBufferSize) {\n        filledBufferContext = context;\n      }\n    }\n\n    if (filledBufferContext) {\n      this.onBufferFull(filledBufferContext);\n    }\n  }\n\n  protected _error(err: any) {\n    this.contexts.length = 0;\n    super._error(err);\n  }\n\n  protected _complete() {\n    const { contexts, destination } = this;\n    while (contexts.length > 0) {\n      const context = contexts.shift();\n      destination.next(context.buffer);\n    }\n    super._complete();\n  }\n\n  /** @deprecated internal use only */ _unsubscribe() {\n    this.contexts = null;\n  }\n\n  protected onBufferFull(context: Context<T>) {\n    this.closeContext(context);\n    const closeAction = context.closeAction;\n    closeAction.unsubscribe();\n    this.remove(closeAction);\n\n    if (!this.closed && this.timespanOnly) {\n      context = this.openContext();\n      const bufferTimeSpan = this.bufferTimeSpan;\n      const timeSpanOnlyState = { subscriber: this, context, bufferTimeSpan };\n      this.add(context.closeAction = this.scheduler.schedule(dispatchBufferTimeSpanOnly, bufferTimeSpan, timeSpanOnlyState));\n    }\n  }\n\n  openContext(): Context<T> {\n    const context: Context<T> = new Context<T>();\n    this.contexts.push(context);\n    return context;\n  }\n\n  closeContext(context: Context<T>) {\n    this.destination.next(context.buffer);\n    const contexts = this.contexts;\n\n    const spliceIndex = contexts ? contexts.indexOf(context) : -1;\n    if (spliceIndex >= 0) {\n      contexts.splice(contexts.indexOf(context), 1);\n    }\n  }\n}\n\nfunction dispatchBufferTimeSpanOnly(this: Action<any>, state: any) {\n  const subscriber: BufferTimeSubscriber<any> = state.subscriber;\n\n  const prevContext = state.context;\n  if (prevContext) {\n    subscriber.closeContext(prevContext);\n  }\n\n  if (!subscriber.closed) {\n    state.context = subscriber.openContext();\n    state.context.closeAction = this.schedule(state, state.bufferTimeSpan);\n  }\n}\n\ninterface DispatchArg<T> {\n  subscriber: BufferTimeSubscriber<T>;\n  context: Context<T>;\n}\n\nfunction dispatchBufferCreation<T>(this: Action<CreationState<T>>, state: CreationState<T>) {\n  const { bufferCreationInterval, bufferTimeSpan, subscriber, scheduler } = state;\n  const context = subscriber.openContext();\n  const action = <Action<CreationState<T>>>this;\n  if (!subscriber.closed) {\n    subscriber.add(context.closeAction = scheduler.schedule<DispatchArg<T>>(dispatchBufferClose, bufferTimeSpan, { subscriber, context }));\n    action.schedule(state, bufferCreationInterval);\n  }\n}\n\nfunction dispatchBufferClose<T>(arg: DispatchArg<T>) {\n  const { subscriber, context } = arg;\n  subscriber.closeContext(context);\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { TeardownLogic } from '../Subscription';\nimport { OperatorFunction } from '../interfaces';\n\n/**\n * Buffers the source Observable values until the size hits the maximum\n * `bufferSize` given.\n *\n * <span class=\"informal\">Collects values from the past as an array, and emits\n * that array only when its size reaches `bufferSize`.</span>\n *\n * <img src=\"./img/bufferCount.png\" width=\"100%\">\n *\n * Buffers a number of values from the source Observable by `bufferSize` then\n * emits the buffer and clears it, and starts a new buffer each\n * `startBufferEvery` values. If `startBufferEvery` is not provided or is\n * `null`, then new buffers are started immediately at the start of the source\n * and when each buffer closes and is emitted.\n *\n * @example <caption>Emit the last two click events as an array</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var buffered = clicks.bufferCount(2);\n * buffered.subscribe(x => console.log(x));\n *\n * @example <caption>On every click, emit the last two click events as an array</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var buffered = clicks.bufferCount(2, 1);\n * buffered.subscribe(x => console.log(x));\n *\n * @see {@link buffer}\n * @see {@link bufferTime}\n * @see {@link bufferToggle}\n * @see {@link bufferWhen}\n * @see {@link pairwise}\n * @see {@link windowCount}\n *\n * @param {number} bufferSize The maximum size of the buffer emitted.\n * @param {number} [startBufferEvery] Interval at which to start a new buffer.\n * For example if `startBufferEvery` is `2`, then a new buffer will be started\n * on every other value from the source. A new buffer is started at the\n * beginning of the source by default.\n * @return {Observable<T[]>} An Observable of arrays of buffered values.\n * @method bufferCount\n * @owner Observable\n */\nexport function bufferCount<T>(bufferSize: number, startBufferEvery: number = null): OperatorFunction<T, T[]> {\n  return function bufferCountOperatorFunction(source: Observable<T>) {\n    return source.lift(new BufferCountOperator<T>(bufferSize, startBufferEvery));\n  };\n}\n\nclass BufferCountOperator<T> implements Operator<T, T[]> {\n  private subscriberClass: any;\n\n  constructor(private bufferSize: number, private startBufferEvery: number) {\n    if (!startBufferEvery || bufferSize === startBufferEvery) {\n      this.subscriberClass = BufferCountSubscriber;\n    } else {\n      this.subscriberClass = BufferSkipCountSubscriber;\n    }\n  }\n\n  call(subscriber: Subscriber<T[]>, source: any): TeardownLogic {\n    return source.subscribe(new this.subscriberClass(subscriber, this.bufferSize, this.startBufferEvery));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass BufferCountSubscriber<T> extends Subscriber<T> {\n  private buffer: T[] = [];\n\n  constructor(destination: Subscriber<T[]>, private bufferSize: number) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    const buffer = this.buffer;\n\n    buffer.push(value);\n\n    if (buffer.length == this.bufferSize) {\n      this.destination.next(buffer);\n      this.buffer = [];\n    }\n  }\n\n  protected _complete(): void {\n    const buffer = this.buffer;\n    if (buffer.length > 0) {\n      this.destination.next(buffer);\n    }\n    super._complete();\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass BufferSkipCountSubscriber<T> extends Subscriber<T> {\n  private buffers: Array<T[]> = [];\n  private count: number = 0;\n\n  constructor(destination: Subscriber<T[]>, private bufferSize: number, private startBufferEvery: number) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    const { bufferSize, startBufferEvery, buffers, count } = this;\n\n    this.count++;\n    if (count % startBufferEvery === 0) {\n      buffers.push([]);\n    }\n\n    for (let i = buffers.length; i--; ) {\n      const buffer = buffers[i];\n      buffer.push(value);\n      if (buffer.length === bufferSize) {\n        buffers.splice(i, 1);\n        this.destination.next(buffer);\n      }\n    }\n  }\n\n  protected _complete(): void {\n    const { buffers, destination } = this;\n\n    while (buffers.length > 0) {\n      let buffer = buffers.shift();\n      if (buffer.length > 0) {\n        destination.next(buffer);\n      }\n    }\n    super._complete();\n  }\n\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OperatorFunction } from '../interfaces';\n\n/**\n * Buffers the source Observable values until `closingNotifier` emits.\n *\n * <span class=\"informal\">Collects values from the past as an array, and emits\n * that array only when another Observable emits.</span>\n *\n * <img src=\"./img/buffer.png\" width=\"100%\">\n *\n * Buffers the incoming Observable values until the given `closingNotifier`\n * Observable emits a value, at which point it emits the buffer on the output\n * Observable and starts a new buffer internally, awaiting the next time\n * `closingNotifier` emits.\n *\n * @example <caption>On every click, emit array of most recent interval events</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var interval = Rx.Observable.interval(1000);\n * var buffered = interval.buffer(clicks);\n * buffered.subscribe(x => console.log(x));\n *\n * @see {@link bufferCount}\n * @see {@link bufferTime}\n * @see {@link bufferToggle}\n * @see {@link bufferWhen}\n * @see {@link window}\n *\n * @param {Observable<any>} closingNotifier An Observable that signals the\n * buffer to be emitted on the output Observable.\n * @return {Observable<T[]>} An Observable of buffers, which are arrays of\n * values.\n * @method buffer\n * @owner Observable\n */\nexport function buffer<T>(closingNotifier: Observable<any>): OperatorFunction<T, T[]> {\n  return function bufferOperatorFunction(source: Observable<T>) {\n    return source.lift(new BufferOperator<T>(closingNotifier));\n  };\n}\n\nclass BufferOperator<T> implements Operator<T, T[]> {\n\n  constructor(private closingNotifier: Observable<any>) {\n  }\n\n  call(subscriber: Subscriber<T[]>, source: any): any {\n    return source.subscribe(new BufferSubscriber(subscriber, this.closingNotifier));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass BufferSubscriber<T> extends OuterSubscriber<T, any> {\n  private buffer: T[] = [];\n\n  constructor(destination: Subscriber<T[]>, closingNotifier: Observable<any>) {\n    super(destination);\n    this.add(subscribeToResult(this, closingNotifier));\n  }\n\n  protected _next(value: T) {\n    this.buffer.push(value);\n  }\n\n  notifyNext(outerValue: T, innerValue: any,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, any>): void {\n    const buffer = this.buffer;\n    this.buffer = [];\n    this.destination.next(buffer);\n  }\n}\n","import { isNumeric } from '../util/isNumeric';\nimport { IScheduler } from '../Scheduler';\nimport { Observable } from '../Observable';\nimport { async } from '../scheduler/async';\nimport { isScheduler } from '../util/isScheduler';\nimport { isDate } from '../util/isDate';\nimport { TeardownLogic } from '../Subscription';\nimport { Subscriber } from '../Subscriber';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport class TimerObservable extends Observable<number> {\n\n  /**\n   * Creates an Observable that starts emitting after an `initialDelay` and\n   * emits ever increasing numbers after each `period` of time thereafter.\n   *\n   * <span class=\"informal\">Its like {@link interval}, but you can specify when\n   * should the emissions start.</span>\n   *\n   * <img src=\"./img/timer.png\" width=\"100%\">\n   *\n   * `timer` returns an Observable that emits an infinite sequence of ascending\n   * integers, with a constant interval of time, `period` of your choosing\n   * between those emissions. The first emission happens after the specified\n   * `initialDelay`. The initial delay may be a {@link Date}. By default, this\n   * operator uses the `async` IScheduler to provide a notion of time, but you\n   * may pass any IScheduler to it. If `period` is not specified, the output\n   * Observable emits only one value, `0`. Otherwise, it emits an infinite\n   * sequence.\n   *\n   * @example <caption>Emits ascending numbers, one every second (1000ms), starting after 3 seconds</caption>\n   * var numbers = Rx.Observable.timer(3000, 1000);\n   * numbers.subscribe(x => console.log(x));\n   *\n   * @example <caption>Emits one number after five seconds</caption>\n   * var numbers = Rx.Observable.timer(5000);\n   * numbers.subscribe(x => console.log(x));\n   *\n   * @see {@link interval}\n   * @see {@link delay}\n   *\n   * @param {number|Date} initialDelay The initial delay time to wait before\n   * emitting the first value of `0`.\n   * @param {number} [period] The period of time between emissions of the\n   * subsequent numbers.\n   * @param {Scheduler} [scheduler=async] The IScheduler to use for scheduling\n   * the emission of values, and providing a notion of \"time\".\n   * @return {Observable} An Observable that emits a `0` after the\n   * `initialDelay` and ever increasing numbers after each `period` of time\n   * thereafter.\n   * @static true\n   * @name timer\n   * @owner Observable\n   */\n  static create(initialDelay: number | Date = 0,\n                period?: number | IScheduler,\n                scheduler?: IScheduler): Observable<number> {\n    return new TimerObservable(initialDelay, period, scheduler);\n  }\n\n  static dispatch(state: any) {\n\n    const { index, period, subscriber } = state;\n    const action = (<any> this);\n\n    subscriber.next(index);\n\n    if (subscriber.closed) {\n      return;\n    } else if (period === -1) {\n      return subscriber.complete();\n    }\n\n    state.index = index + 1;\n    action.schedule(state, period);\n  }\n\n  private period: number = -1;\n  private dueTime: number = 0;\n  private scheduler: IScheduler;\n\n  constructor(dueTime: number | Date = 0,\n              period?: number | IScheduler,\n              scheduler?: IScheduler) {\n    super();\n\n    if (isNumeric(period)) {\n      this.period = Number(period) < 1 && 1 || Number(period);\n    } else if (isScheduler(period)) {\n      scheduler = <IScheduler> period;\n    }\n\n    if (!isScheduler(scheduler)) {\n      scheduler = async;\n    }\n\n    this.scheduler = scheduler;\n    this.dueTime = isDate(dueTime) ?\n      (+dueTime - this.scheduler.now()) :\n      (<number> dueTime);\n  }\n\n  /** @deprecated internal use only */ _subscribe(subscriber: Subscriber<number>): TeardownLogic {\n    const index = 0;\n    const { period, dueTime, scheduler } = this;\n\n    return scheduler.schedule(TimerObservable.dispatch, dueTime, {\n      index, period, subscriber\n    });\n  }\n}\n","export function isDate(value: any): value is Date {\n  return value instanceof Date && !isNaN(+value);\n}\n","import { Scheduler } from '../Scheduler';\nexport function isScheduler(value: any): value is Scheduler {\n  return value && typeof (<any>value).schedule === 'function';\n}\n","import { isArray } from '../util/isArray';\n\nexport function isNumeric(val: any): val is number {\n  // parseFloat NaNs numeric-cast false positives (null|true|false|\"\")\n  // ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n  // subtraction forces infinities to NaN\n  // adding 1 corrects loss of precision from parseFloat (#15100)\n  return !isArray(val) && (val - parseFloat(val) + 1) >= 0;\n};\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable, SubscribableOrPromise } from '../Observable';\nimport { Subscription, TeardownLogic } from '../Subscription';\n\nimport { tryCatch } from '../util/tryCatch';\nimport { errorObject } from '../util/errorObject';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Ignores source values for a duration determined by another Observable, then\n * emits the most recent value from the source Observable, then repeats this\n * process.\n *\n * <span class=\"informal\">It's like {@link auditTime}, but the silencing\n * duration is determined by a second Observable.</span>\n *\n * <img src=\"./img/audit.png\" width=\"100%\">\n *\n * `audit` is similar to `throttle`, but emits the last value from the silenced\n * time window, instead of the first value. `audit` emits the most recent value\n * from the source Observable on the output Observable as soon as its internal\n * timer becomes disabled, and ignores source values while the timer is enabled.\n * Initially, the timer is disabled. As soon as the first source value arrives,\n * the timer is enabled by calling the `durationSelector` function with the\n * source value, which returns the \"duration\" Observable. When the duration\n * Observable emits a value or completes, the timer is disabled, then the most\n * recent source value is emitted on the output Observable, and this process\n * repeats for the next source value.\n *\n * @example <caption>Emit clicks at a rate of at most one click per second</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.audit(ev => Rx.Observable.interval(1000));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link auditTime}\n * @see {@link debounce}\n * @see {@link delayWhen}\n * @see {@link sample}\n * @see {@link throttle}\n *\n * @param {function(value: T): SubscribableOrPromise} durationSelector A function\n * that receives a value from the source Observable, for computing the silencing\n * duration, returned as an Observable or a Promise.\n * @return {Observable<T>} An Observable that performs rate-limiting of\n * emissions from the source Observable.\n * @method audit\n * @owner Observable\n */\nexport function audit<T>(durationSelector: (value: T) => SubscribableOrPromise<any>): MonoTypeOperatorFunction<T> {\n  return function auditOperatorFunction(source: Observable<T>) {\n    return source.lift(new AuditOperator(durationSelector));\n  };\n}\n\nclass AuditOperator<T> implements Operator<T, T> {\n  constructor(private durationSelector: (value: T) => SubscribableOrPromise<any>) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new AuditSubscriber<T, T>(subscriber, this.durationSelector));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass AuditSubscriber<T, R> extends OuterSubscriber<T, R> {\n\n  private value: T;\n  private hasValue: boolean = false;\n  private throttled: Subscription;\n\n  constructor(destination: Subscriber<T>,\n              private durationSelector: (value: T) => SubscribableOrPromise<any>) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    this.value = value;\n    this.hasValue = true;\n    if (!this.throttled) {\n      const duration = tryCatch(this.durationSelector)(value);\n      if (duration === errorObject) {\n        this.destination.error(errorObject.e);\n      } else {\n        const innerSubscription = subscribeToResult(this, duration);\n        if (innerSubscription.closed) {\n          this.clearThrottle();\n        } else {\n          this.add(this.throttled = innerSubscription);\n        }\n      }\n    }\n  }\n\n  clearThrottle() {\n    const { value, hasValue, throttled } = this;\n    if (throttled) {\n      this.remove(throttled);\n      this.throttled = null;\n      throttled.unsubscribe();\n    }\n    if (hasValue) {\n      this.value = null;\n      this.hasValue = false;\n      this.destination.next(value);\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: R, outerIndex: number, innerIndex: number): void {\n    this.clearThrottle();\n  }\n\n  notifyComplete(): void {\n    this.clearThrottle();\n  }\n}\n","import { root } from './root';\nimport { isArrayLike } from './isArrayLike';\nimport { isPromise } from './isPromise';\nimport { isObject } from './isObject';\nimport { Subscriber } from '../Subscriber';\nimport { Observable, ObservableInput } from '../Observable';\nimport { iterator as Symbol_iterator } from '../symbol/iterator';\nimport { Subscription } from '../Subscription';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { observable as Symbol_observable } from '../symbol/observable';\n\nexport function subscribeToResult<T, R>(outerSubscriber: OuterSubscriber<T, R>,\n                                        result: any,\n                                        outerValue?: T,\n                                        outerIndex?: number): Subscription;\nexport function subscribeToResult<T>(outerSubscriber: OuterSubscriber<any, any>,\n                                     result: ObservableInput<T>,\n                                     outerValue?: T,\n                                     outerIndex?: number): Subscription {\n  let destination: Subscriber<any> = new InnerSubscriber(outerSubscriber, outerValue, outerIndex);\n\n  if (destination.closed) {\n    return null;\n  }\n\n  if (result instanceof Observable) {\n    if (result._isScalar) {\n      destination.next((<any>result).value);\n      destination.complete();\n      return null;\n    } else {\n      destination.syncErrorThrowable = true;\n      return result.subscribe(destination);\n    }\n  } else if (isArrayLike(result)) {\n    for (let i = 0, len = result.length; i < len && !destination.closed; i++) {\n      destination.next(result[i]);\n    }\n    if (!destination.closed) {\n      destination.complete();\n    }\n  } else if (isPromise(result)) {\n    result.then(\n      (value) => {\n        if (!destination.closed) {\n          destination.next(<any>value);\n          destination.complete();\n        }\n      },\n      (err: any) => destination.error(err)\n    )\n    .then(null, (err: any) => {\n      // Escaping the Promise trap: globally throw unhandled errors\n      root.setTimeout(() => { throw err; });\n    });\n    return destination;\n  } else if (result && typeof result[Symbol_iterator] === 'function') {\n    const iterator = <any>result[Symbol_iterator]();\n    do {\n      let item = iterator.next();\n      if (item.done) {\n        destination.complete();\n        break;\n      }\n      destination.next(item.value);\n      if (destination.closed) {\n        break;\n      }\n    } while (true);\n  } else if (result && typeof result[Symbol_observable] === 'function') {\n    const obs = result[Symbol_observable]();\n    if (typeof obs.subscribe !== 'function') {\n      destination.error(new TypeError('Provided object does not correctly implement Symbol.observable'));\n    } else {\n      return obs.subscribe(new InnerSubscriber(outerSubscriber, outerValue, outerIndex));\n    }\n  } else {\n    const value = isObject(result) ? 'an invalid object' : `'${result}'`;\n    const msg = `You provided ${value} where a stream was expected.`\n      + ' You can provide an Observable, Promise, Array, or Iterable.';\n    destination.error(new TypeError(msg));\n  }\n  return null;\n}\n","import { Subscriber } from './Subscriber';\nimport { OuterSubscriber } from './OuterSubscriber';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class InnerSubscriber<T, R> extends Subscriber<R> {\n  private index: number = 0;\n\n  constructor(private parent: OuterSubscriber<T, R>, private outerValue: T, private outerIndex: number) {\n    super();\n  }\n\n  protected _next(value: R): void {\n    this.parent.notifyNext(this.outerValue, value, this.outerIndex, this.index++, this);\n  }\n\n  protected _error(error: any): void {\n    this.parent.notifyError(error, this);\n    this.unsubscribe();\n  }\n\n  protected _complete(): void {\n    this.parent.notifyComplete(this);\n    this.unsubscribe();\n  }\n}\n","import { root } from '../util/root';\n\nexport function symbolIteratorPonyfill(root: any) {\n  const Symbol: any = root.Symbol;\n\n  if (typeof Symbol === 'function') {\n    if (!Symbol.iterator) {\n      Symbol.iterator = Symbol('iterator polyfill');\n    }\n    return Symbol.iterator;\n  } else {\n    // [for Mozilla Gecko 27-35:](https://mzl.la/2ewE1zC)\n    const { Set } = root;\n    if (Set && typeof new Set()['@@iterator'] === 'function') {\n      return '@@iterator';\n    }\n    const { Map } = root;\n    // required for compatability with es6-shim\n    if (Map) {\n      let keys = Object.getOwnPropertyNames(Map.prototype);\n      for (let i = 0; i < keys.length; ++i) {\n        let key = keys[i];\n        // according to spec, Map.prototype[@@iterator] and Map.orototype.entries must be equal.\n        if (key !== 'entries' && key !== 'size' && Map.prototype[key] === Map.prototype['entries']) {\n          return key;\n        }\n      }\n    }\n    return '@@iterator';\n  }\n}\n\nexport const iterator = symbolIteratorPonyfill(root);\n\n/**\n * @deprecated use iterator instead\n */\nexport const $$iterator = iterator;\n","import { PartialObserver } from './Observer';\nimport { Operator } from './Operator';\nimport { Subscriber } from './Subscriber';\nimport { Subscription, AnonymousSubscription, TeardownLogic } from './Subscription';\nimport { root } from './util/root';\nimport { toSubscriber } from './util/toSubscriber';\nimport { IfObservable } from './observable/IfObservable';\nimport { ErrorObservable } from './observable/ErrorObservable';\nimport { observable as Symbol_observable } from './symbol/observable';\nimport { OperatorFunction } from './interfaces';\nimport { pipeFromArray } from './util/pipe';\n\nexport interface Subscribable<T> {\n  subscribe(observerOrNext?: PartialObserver<T> | ((value: T) => void),\n            error?: (error: any) => void,\n            complete?: () => void): AnonymousSubscription;\n}\n\nexport type SubscribableOrPromise<T> = Subscribable<T> | PromiseLike<T>;\nexport type ObservableInput<T> = SubscribableOrPromise<T> | ArrayLike<T>;\n\n/**\n * A representation of any set of values over any amount of time. This is the most basic building block\n * of RxJS.\n *\n * @class Observable<T>\n */\nexport class Observable<T> implements Subscribable<T> {\n\n  public _isScalar: boolean = false;\n\n  /** @deprecated internal use only */ public source: Observable<any>;\n  protected operator: Operator<any, T>;\n\n  /**\n   * @constructor\n   * @param {Function} subscribe the function that is called when the Observable is\n   * initially subscribed to. This function is given a Subscriber, to which new values\n   * can be `next`ed, or an `error` method can be called to raise an error, or\n   * `complete` can be called to notify of a successful completion.\n   */\n  constructor(subscribe?: (this: Observable<T>, subscriber: Subscriber<T>) => TeardownLogic) {\n    if (subscribe) {\n      this._subscribe = subscribe;\n    }\n  }\n\n  // HACK: Since TypeScript inherits static properties too, we have to\n  // fight against TypeScript here so Subject can have a different static create signature\n  /**\n   * Creates a new cold Observable by calling the Observable constructor\n   * @static true\n   * @owner Observable\n   * @method create\n   * @param {Function} subscribe? the subscriber function to be passed to the Observable constructor\n   * @return {Observable} a new cold observable\n   */\n  static create: Function = <T>(subscribe?: (subscriber: Subscriber<T>) => TeardownLogic) => {\n    return new Observable<T>(subscribe);\n  }\n\n  /**\n   * Creates a new Observable, with this Observable as the source, and the passed\n   * operator defined as the new observable's operator.\n   * @method lift\n   * @param {Operator} operator the operator defining the operation to take on the observable\n   * @return {Observable} a new observable with the Operator applied\n   */\n  lift<R>(operator: Operator<T, R>): Observable<R> {\n    const observable = new Observable<R>();\n    observable.source = this;\n    observable.operator = operator;\n    return observable;\n  }\n\n  subscribe(observer?: PartialObserver<T>): Subscription;\n  subscribe(next?: (value: T) => void, error?: (error: any) => void, complete?: () => void): Subscription;\n  /**\n   * Invokes an execution of an Observable and registers Observer handlers for notifications it will emit.\n   *\n   * <span class=\"informal\">Use it when you have all these Observables, but still nothing is happening.</span>\n   *\n   * `subscribe` is not a regular operator, but a method that calls Observable's internal `subscribe` function. It\n   * might be for example a function that you passed to a {@link create} static factory, but most of the time it is\n   * a library implementation, which defines what and when will be emitted by an Observable. This means that calling\n   * `subscribe` is actually the moment when Observable starts its work, not when it is created, as it is often\n   * thought.\n   *\n   * Apart from starting the execution of an Observable, this method allows you to listen for values\n   * that an Observable emits, as well as for when it completes or errors. You can achieve this in two\n   * following ways.\n   *\n   * The first way is creating an object that implements {@link Observer} interface. It should have methods\n   * defined by that interface, but note that it should be just a regular JavaScript object, which you can create\n   * yourself in any way you want (ES6 class, classic function constructor, object literal etc.). In particular do\n   * not attempt to use any RxJS implementation details to create Observers - you don't need them. Remember also\n   * that your object does not have to implement all methods. If you find yourself creating a method that doesn't\n   * do anything, you can simply omit it. Note however, that if `error` method is not provided, all errors will\n   * be left uncaught.\n   *\n   * The second way is to give up on Observer object altogether and simply provide callback functions in place of its methods.\n   * This means you can provide three functions as arguments to `subscribe`, where first function is equivalent\n   * of a `next` method, second of an `error` method and third of a `complete` method. Just as in case of Observer,\n   * if you do not need to listen for something, you can omit a function, preferably by passing `undefined` or `null`,\n   * since `subscribe` recognizes these functions by where they were placed in function call. When it comes\n   * to `error` function, just as before, if not provided, errors emitted by an Observable will be thrown.\n   *\n   * Whatever style of calling `subscribe` you use, in both cases it returns a Subscription object.\n   * This object allows you to call `unsubscribe` on it, which in turn will stop work that an Observable does and will clean\n   * up all resources that an Observable used. Note that cancelling a subscription will not call `complete` callback\n   * provided to `subscribe` function, which is reserved for a regular completion signal that comes from an Observable.\n   *\n   * Remember that callbacks provided to `subscribe` are not guaranteed to be called asynchronously.\n   * It is an Observable itself that decides when these functions will be called. For example {@link of}\n   * by default emits all its values synchronously. Always check documentation for how given Observable\n   * will behave when subscribed and if its default behavior can be modified with a {@link Scheduler}.\n   *\n   * @example <caption>Subscribe with an Observer</caption>\n   * const sumObserver = {\n   *   sum: 0,\n   *   next(value) {\n   *     console.log('Adding: ' + value);\n   *     this.sum = this.sum + value;\n   *   },\n   *   error() { // We actually could just remove this method,\n   *   },        // since we do not really care about errors right now.\n   *   complete() {\n   *     console.log('Sum equals: ' + this.sum);\n   *   }\n   * };\n   *\n   * Rx.Observable.of(1, 2, 3) // Synchronously emits 1, 2, 3 and then completes.\n   * .subscribe(sumObserver);\n   *\n   * // Logs:\n   * // \"Adding: 1\"\n   * // \"Adding: 2\"\n   * // \"Adding: 3\"\n   * // \"Sum equals: 6\"\n   *\n   *\n   * @example <caption>Subscribe with functions</caption>\n   * let sum = 0;\n   *\n   * Rx.Observable.of(1, 2, 3)\n   * .subscribe(\n   *   function(value) {\n   *     console.log('Adding: ' + value);\n   *     sum = sum + value;\n   *   },\n   *   undefined,\n   *   function() {\n   *     console.log('Sum equals: ' + sum);\n   *   }\n   * );\n   *\n   * // Logs:\n   * // \"Adding: 1\"\n   * // \"Adding: 2\"\n   * // \"Adding: 3\"\n   * // \"Sum equals: 6\"\n   *\n   *\n   * @example <caption>Cancel a subscription</caption>\n   * const subscription = Rx.Observable.interval(1000).subscribe(\n   *   num => console.log(num),\n   *   undefined,\n   *   () => console.log('completed!') // Will not be called, even\n   * );                                // when cancelling subscription\n   *\n   *\n   * setTimeout(() => {\n   *   subscription.unsubscribe();\n   *   console.log('unsubscribed!');\n   * }, 2500);\n   *\n   * // Logs:\n   * // 0 after 1s\n   * // 1 after 2s\n   * // \"unsubscribed!\" after 2.5s\n   *\n   *\n   * @param {Observer|Function} observerOrNext (optional) Either an observer with methods to be called,\n   *  or the first of three possible handlers, which is the handler for each value emitted from the subscribed\n   *  Observable.\n   * @param {Function} error (optional) A handler for a terminal event resulting from an error. If no error handler is provided,\n   *  the error will be thrown as unhandled.\n   * @param {Function} complete (optional) A handler for a terminal event resulting from successful completion.\n   * @return {ISubscription} a subscription reference to the registered handlers\n   * @method subscribe\n   */\n  subscribe(observerOrNext?: PartialObserver<T> | ((value: T) => void),\n            error?: (error: any) => void,\n            complete?: () => void): Subscription {\n\n    const { operator } = this;\n    const sink = toSubscriber(observerOrNext, error, complete);\n\n    if (operator) {\n      operator.call(sink, this.source);\n    } else {\n      sink.add(this.source || !sink.syncErrorThrowable ? this._subscribe(sink) : this._trySubscribe(sink));\n    }\n\n    if (sink.syncErrorThrowable) {\n      sink.syncErrorThrowable = false;\n      if (sink.syncErrorThrown) {\n        throw sink.syncErrorValue;\n      }\n    }\n\n    return sink;\n  }\n\n  protected _trySubscribe(sink: Subscriber<T>): TeardownLogic {\n    try {\n      return this._subscribe(sink);\n    } catch (err) {\n      sink.syncErrorThrown = true;\n      sink.syncErrorValue = err;\n      sink.error(err);\n    }\n  }\n\n  /**\n   * @method forEach\n   * @param {Function} next a handler for each value emitted by the observable\n   * @param {PromiseConstructor} [PromiseCtor] a constructor function used to instantiate the Promise\n   * @return {Promise} a promise that either resolves on observable completion or\n   *  rejects with the handled error\n   */\n  forEach(next: (value: T) => void, PromiseCtor?: typeof Promise): Promise<void> {\n    if (!PromiseCtor) {\n      if (root.Rx && root.Rx.config && root.Rx.config.Promise) {\n        PromiseCtor = root.Rx.config.Promise;\n      } else if (root.Promise) {\n        PromiseCtor = root.Promise;\n      }\n    }\n\n    if (!PromiseCtor) {\n      throw new Error('no Promise impl found');\n    }\n\n    return new PromiseCtor<void>((resolve, reject) => {\n      // Must be declared in a separate statement to avoid a RefernceError when\n      // accessing subscription below in the closure due to Temporal Dead Zone.\n      let subscription: Subscription;\n      subscription = this.subscribe((value) => {\n        if (subscription) {\n          // if there is a subscription, then we can surmise\n          // the next handling is asynchronous. Any errors thrown\n          // need to be rejected explicitly and unsubscribe must be\n          // called manually\n          try {\n            next(value);\n          } catch (err) {\n            reject(err);\n            subscription.unsubscribe();\n          }\n        } else {\n          // if there is NO subscription, then we're getting a nexted\n          // value synchronously during subscription. We can just call it.\n          // If it errors, Observable's `subscribe` will ensure the\n          // unsubscription logic is called, then synchronously rethrow the error.\n          // After that, Promise will trap the error and send it\n          // down the rejection path.\n          next(value);\n        }\n      }, reject, resolve);\n    });\n  }\n\n  /** @deprecated internal use only */ _subscribe(subscriber: Subscriber<any>): TeardownLogic {\n    return this.source.subscribe(subscriber);\n  }\n\n  // `if` and `throw` are special snow flakes, the compiler sees them as reserved words\n  static if: typeof IfObservable.create;\n  static throw: typeof ErrorObservable.create;\n\n  /**\n   * An interop point defined by the es7-observable spec https://github.com/zenparsing/es-observable\n   * @method Symbol.observable\n   * @return {Observable} this instance of the observable\n   */\n  [Symbol_observable]() {\n    return this;\n  }\n\n  /* tslint:disable:max-line-length */\n  pipe(): Observable<T>\n  pipe<A>(op1: OperatorFunction<T, A>): Observable<A>\n  pipe<A, B>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>): Observable<B>\n  pipe<A, B, C>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>): Observable<C>\n  pipe<A, B, C, D>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>): Observable<D>\n  pipe<A, B, C, D, E>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>, op5: OperatorFunction<D, E>): Observable<E>\n  pipe<A, B, C, D, E, F>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>, op5: OperatorFunction<D, E>, op6: OperatorFunction<E, F>): Observable<F>\n  pipe<A, B, C, D, E, F, G>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>, op5: OperatorFunction<D, E>, op6: OperatorFunction<E, F>, op7: OperatorFunction<F, G>): Observable<G>\n  pipe<A, B, C, D, E, F, G, H>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>, op5: OperatorFunction<D, E>, op6: OperatorFunction<E, F>, op7: OperatorFunction<F, G>, op8: OperatorFunction<G, H>): Observable<H>\n  pipe<A, B, C, D, E, F, G, H, I>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>, op5: OperatorFunction<D, E>, op6: OperatorFunction<E, F>, op7: OperatorFunction<F, G>, op8: OperatorFunction<G, H>, op9: OperatorFunction<H, I>): Observable<I>\n  pipe<R>(...operations: OperatorFunction<T, R>[]): Observable<R>\n  /* tslint:enable:max-line-length */\n\n  /**\n   * Used to stitch together functional operators into a chain.\n   * @method pipe\n   * @return {Observable} the Observable result of all of the operators having\n   * been called in the order they were passed in.\n   *\n   * @example\n   *\n   * import { map, filter, scan } from 'rxjs/operators';\n   *\n   * Rx.Observable.interval(1000)\n   *   .pipe(\n   *     filter(x => x % 2 === 0),\n   *     map(x => x + x),\n   *     scan((acc, x) => acc + x)\n   *   )\n   *   .subscribe(x => console.log(x))\n   */\n  pipe<R>(...operations: OperatorFunction<T, R>[]): Observable<R> {\n    if (operations.length === 0) {\n      return this as any;\n    }\n\n    return pipeFromArray(operations)(this);\n  }\n\n  /* tslint:disable:max-line-length */\n  toPromise<T>(this: Observable<T>): Promise<T>;\n  toPromise<T>(this: Observable<T>, PromiseCtor: typeof Promise): Promise<T>;\n  toPromise<T>(this: Observable<T>, PromiseCtor: PromiseConstructorLike): Promise<T>;\n  /* tslint:enable:max-line-length */\n\n  toPromise(PromiseCtor?: PromiseConstructorLike) {\n    if (!PromiseCtor) {\n      if (root.Rx && root.Rx.config && root.Rx.config.Promise) {\n        PromiseCtor = root.Rx.config.Promise;\n      } else if (root.Promise) {\n        PromiseCtor = root.Promise;\n      }\n    }\n\n    if (!PromiseCtor) {\n      throw new Error('no Promise impl found');\n    }\n\n    return new PromiseCtor((resolve, reject) => {\n      let value: any;\n      this.subscribe((x: T) => value = x, (err: any) => reject(err), () => resolve(value));\n    }) as Promise<T>;\n  }\n}\n","import { noop } from './noop';\nimport { UnaryFunction } from '../interfaces';\n\n/* tslint:disable:max-line-length */\nexport function pipe<T>(): UnaryFunction<T, T>;\nexport function pipe<T, A>(op1: UnaryFunction<T, A>): UnaryFunction<T, A>;\nexport function pipe<T, A, B>(op1: UnaryFunction<T, A>, op2: UnaryFunction<A, B>): UnaryFunction<T, B>;\nexport function pipe<T, A, B, C>(op1: UnaryFunction<T, A>, op2: UnaryFunction<A, B>, op3: UnaryFunction<B, C>): UnaryFunction<T, C>;\nexport function pipe<T, A, B, C, D>(op1: UnaryFunction<T, A>, op2: UnaryFunction<A, B>, op3: UnaryFunction<B, C>, op4: UnaryFunction<C, D>): UnaryFunction<T, D>;\nexport function pipe<T, A, B, C, D, E>(op1: UnaryFunction<T, A>, op2: UnaryFunction<A, B>, op3: UnaryFunction<B, C>, op4: UnaryFunction<C, D>, op5: UnaryFunction<D, E>): UnaryFunction<T, E>;\nexport function pipe<T, A, B, C, D, E, F>(op1: UnaryFunction<T, A>, op2: UnaryFunction<A, B>, op3: UnaryFunction<B, C>, op4: UnaryFunction<C, D>, op5: UnaryFunction<D, E>, op6: UnaryFunction<E, F>): UnaryFunction<T, F>;\nexport function pipe<T, A, B, C, D, E, F, G>(op1: UnaryFunction<T, A>, op2: UnaryFunction<A, B>, op3: UnaryFunction<B, C>, op4: UnaryFunction<C, D>, op5: UnaryFunction<D, E>, op6: UnaryFunction<E, F>, op7: UnaryFunction<F, G>): UnaryFunction<T, G>;\nexport function pipe<T, A, B, C, D, E, F, G, H>(op1: UnaryFunction<T, A>, op2: UnaryFunction<A, B>, op3: UnaryFunction<B, C>, op4: UnaryFunction<C, D>, op5: UnaryFunction<D, E>, op6: UnaryFunction<E, F>, op7: UnaryFunction<F, G>, op8: UnaryFunction<G, H>): UnaryFunction<T, H>;\nexport function pipe<T, A, B, C, D, E, F, G, H, I>(op1: UnaryFunction<T, A>, op2: UnaryFunction<A, B>, op3: UnaryFunction<B, C>, op4: UnaryFunction<C, D>, op5: UnaryFunction<D, E>, op6: UnaryFunction<E, F>, op7: UnaryFunction<F, G>, op8: UnaryFunction<G, H>, op9: UnaryFunction<H, I>): UnaryFunction<T, I>;\n/* tslint:enable:max-line-length */\n\nexport function pipe<T, R>(...fns: Array<UnaryFunction<T, R>>): UnaryFunction<T, R> {\n  return pipeFromArray(fns);\n}\n\n/* @internal */\nexport function pipeFromArray<T, R>(fns: Array<UnaryFunction<T, R>>): UnaryFunction<T, R> {\n  if (!fns) {\n    return noop as UnaryFunction<any, any>;\n  }\n\n  if (fns.length === 1) {\n    return fns[0];\n  }\n\n  return function piped(input: T): R {\n    return fns.reduce((prev: any, fn: UnaryFunction<T, R>) => fn(prev), input);\n  };\n}\n","/* tslint:disable:no-empty */\nexport function noop() { }\n","import { root } from '../util/root';\n\nexport function getSymbolObservable(context: any) {\n  let $$observable: any;\n  let Symbol = context.Symbol;\n\n  if (typeof Symbol === 'function') {\n    if (Symbol.observable) {\n      $$observable = Symbol.observable;\n    } else {\n        $$observable = Symbol('observable');\n        Symbol.observable = $$observable;\n    }\n  } else {\n    $$observable = '@@observable';\n  }\n\n  return $$observable;\n}\n\nexport const observable = getSymbolObservable(root);\n\n/**\n * @deprecated use observable instead\n */\nexport const $$observable = observable;\n","import { Subscriber } from '../Subscriber';\nimport { rxSubscriber as rxSubscriberSymbol } from '../symbol/rxSubscriber';\nimport { PartialObserver, empty as emptyObserver } from '../Observer';\n\nexport function toSubscriber<T>(\n  nextOrObserver?: PartialObserver<T> | ((value: T) => void),\n  error?: (error: any) => void,\n  complete?: () => void): Subscriber<T> {\n\n  if (nextOrObserver) {\n    if (nextOrObserver instanceof Subscriber) {\n      return (<Subscriber<T>> nextOrObserver);\n    }\n\n    if (nextOrObserver[rxSubscriberSymbol]) {\n      return nextOrObserver[rxSubscriberSymbol]();\n    }\n  }\n\n  if (!nextOrObserver && !error && !complete) {\n    return new Subscriber(emptyObserver);\n  }\n\n  return new Subscriber(nextOrObserver, error, complete);\n}\n","export function isPromise<T>(value: any | Promise<T>): value is Promise<T> {\n  return value && typeof (<any>value).subscribe !== 'function' && typeof (value as any).then === 'function';\n}\n","export const isArrayLike = (<T>(x: any): x is ArrayLike<T> => x && typeof x.length === 'number');","import { Subscriber } from './Subscriber';\nimport { InnerSubscriber } from './InnerSubscriber';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class OuterSubscriber<T, R> extends Subscriber<T> {\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this.destination.next(innerValue);\n  }\n\n  notifyError(error: any, innerSub: InnerSubscriber<T, R>): void {\n    this.destination.error(error);\n  }\n\n  notifyComplete(innerSub: InnerSubscriber<T, R>): void {\n    this.destination.complete();\n  }\n}\n","import { Directive } from '@angular/core';\nexport class CardTabContentDirective { static decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[uxCardTabContent]'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction CardTabContentDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nCardTabContentDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nCardTabContentDirective.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\n\nimport { ResizeDirective } from './resize.directive';\nimport { ResizeService } from './resize.service';\nexport class ResizeModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    exports: [ResizeDirective],\n    declarations: [ResizeDirective],\n    providers: [ResizeService]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ResizeModule_tsickle_Closure_declarations() {\n/** @type {?} */\nResizeModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nResizeModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ElementRef, EventEmitter, Input, NgZone, OnDestroy, OnInit, Output } from '@angular/core';\nimport { Subscription } from 'rxjs/Subscription';\nimport { debounceTime } from 'rxjs/operators/debounceTime';\nimport { ResizeDimensions, ResizeService } from './resize.service';\nexport class ResizeDirective implements OnInit, OnDestroy {\n\n     throttle: number = 0;\n     uxResize: EventEmitter<ResizeDimensions> = new EventEmitter<ResizeDimensions>();\nprivate _subscription: Subscription;\n/**\n * @param {?} _elementRef\n * @param {?} _resizeService\n * @param {?} _ngZone\n */\nconstructor(private _elementRef: ElementRef,\nprivate _resizeService: ResizeService,\nprivate _ngZone: NgZone) { }\n/**\n * @return {?}\n */\nngOnInit(): void {\n        this._subscription = this._resizeService.addResizeListener(this._elementRef.nativeElement)\n            .pipe(debounceTime(this.throttle))\n            .subscribe((event: ResizeDimensions) => this._ngZone.run(() => this.uxResize.emit(event)));\n    }\n/**\n * @return {?}\n */\nngOnDestroy(): void {\n        this._subscription.unsubscribe();\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: '[uxResize]',\n    providers: [ResizeService]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: ResizeService, },\n{type: NgZone, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'throttle': [{ type: Input },],\n'uxResize': [{ type: Output },],\n};\n}\n\nfunction ResizeDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nResizeDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nResizeDirective.ctorParameters;\n/** @type {?} */\nResizeDirective.propDecorators;\n/** @type {?} */\nResizeDirective.prototype.throttle;\n/** @type {?} */\nResizeDirective.prototype.uxResize;\n/** @type {?} */\nResizeDirective.prototype._subscription;\n/** @type {?} */\nResizeDirective.prototype._elementRef;\n/** @type {?} */\nResizeDirective.prototype._resizeService;\n/** @type {?} */\nResizeDirective.prototype._ngZone;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { IScheduler } from '../Scheduler';\nimport { Subscription, TeardownLogic } from '../Subscription';\nimport { async } from '../scheduler/async';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Emits a value from the source Observable only after a particular time span\n * has passed without another source emission.\n *\n * <span class=\"informal\">It's like {@link delay}, but passes only the most\n * recent value from each burst of emissions.</span>\n *\n * <img src=\"./img/debounceTime.png\" width=\"100%\">\n *\n * `debounceTime` delays values emitted by the source Observable, but drops\n * previous pending delayed emissions if a new value arrives on the source\n * Observable. This operator keeps track of the most recent value from the\n * source Observable, and emits that only when `dueTime` enough time has passed\n * without any other value appearing on the source Observable. If a new value\n * appears before `dueTime` silence occurs, the previous value will be dropped\n * and will not be emitted on the output Observable.\n *\n * This is a rate-limiting operator, because it is impossible for more than one\n * value to be emitted in any time window of duration `dueTime`, but it is also\n * a delay-like operator since output emissions do not occur at the same time as\n * they did on the source Observable. Optionally takes a {@link IScheduler} for\n * managing timers.\n *\n * @example <caption>Emit the most recent click after a burst of clicks</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.debounceTime(1000);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link auditTime}\n * @see {@link debounce}\n * @see {@link delay}\n * @see {@link sampleTime}\n * @see {@link throttleTime}\n *\n * @param {number} dueTime The timeout duration in milliseconds (or the time\n * unit determined internally by the optional `scheduler`) for the window of\n * time required to wait for emission silence before emitting the most recent\n * source value.\n * @param {Scheduler} [scheduler=async] The {@link IScheduler} to use for\n * managing the timers that handle the timeout for each value.\n * @return {Observable} An Observable that delays the emissions of the source\n * Observable by the specified `dueTime`, and may drop some values if they occur\n * too frequently.\n * @method debounceTime\n * @owner Observable\n */\nexport function debounceTime<T>(dueTime: number, scheduler: IScheduler = async): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new DebounceTimeOperator(dueTime, scheduler));\n}\n\nclass DebounceTimeOperator<T> implements Operator<T, T> {\n  constructor(private dueTime: number, private scheduler: IScheduler) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new DebounceTimeSubscriber(subscriber, this.dueTime, this.scheduler));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass DebounceTimeSubscriber<T> extends Subscriber<T> {\n  private debouncedSubscription: Subscription = null;\n  private lastValue: T = null;\n  private hasValue: boolean = false;\n\n  constructor(destination: Subscriber<T>,\n              private dueTime: number,\n              private scheduler: IScheduler) {\n    super(destination);\n  }\n\n  protected _next(value: T) {\n    this.clearDebounce();\n    this.lastValue = value;\n    this.hasValue = true;\n    this.add(this.debouncedSubscription = this.scheduler.schedule(dispatchNext, this.dueTime, this));\n  }\n\n  protected _complete() {\n    this.debouncedNext();\n    this.destination.complete();\n  }\n\n  debouncedNext(): void {\n    this.clearDebounce();\n\n    if (this.hasValue) {\n      this.destination.next(this.lastValue);\n      this.lastValue = null;\n      this.hasValue = false;\n    }\n  }\n\n  private clearDebounce(): void {\n    const debouncedSubscription = this.debouncedSubscription;\n\n    if (debouncedSubscription !== null) {\n      this.remove(debouncedSubscription);\n      debouncedSubscription.unsubscribe();\n      this.debouncedSubscription = null;\n    }\n  }\n}\n\nfunction dispatchNext(subscriber: DebounceTimeSubscriber<any>) {\n  subscriber.debouncedNext();\n}\n","import { AsyncAction } from './AsyncAction';\nimport { AsyncScheduler } from './AsyncScheduler';\n\n/**\n *\n * Async Scheduler\n *\n * <span class=\"informal\">Schedule task as if you used setTimeout(task, duration)</span>\n *\n * `async` scheduler schedules tasks asynchronously, by putting them on the JavaScript\n * event loop queue. It is best used to delay tasks in time or to schedule tasks repeating\n * in intervals.\n *\n * If you just want to \"defer\" task, that is to perform it right after currently\n * executing synchronous code ends (commonly achieved by `setTimeout(deferredTask, 0)`),\n * better choice will be the {@link asap} scheduler.\n *\n * @example <caption>Use async scheduler to delay task</caption>\n * const task = () => console.log('it works!');\n *\n * Rx.Scheduler.async.schedule(task, 2000);\n *\n * // After 2 seconds logs:\n * // \"it works!\"\n *\n *\n * @example <caption>Use async scheduler to repeat task in intervals</caption>\n * function task(state) {\n *   console.log(state);\n *   this.schedule(state + 1, 1000); // `this` references currently executing Action,\n *                                   // which we reschedule with new state and delay\n * }\n *\n * Rx.Scheduler.async.schedule(task, 3000, 0);\n *\n * // Logs:\n * // 0 after 3s\n * // 1 after 4s\n * // 2 after 5s\n * // 3 after 6s\n *\n * @static true\n * @name async\n * @owner Scheduler\n */\n\nexport const async = new AsyncScheduler(AsyncAction);\n","import { Scheduler } from '../Scheduler';\nimport { AsyncAction } from './AsyncAction';\n\nexport class AsyncScheduler extends Scheduler {\n  public actions: Array<AsyncAction<any>> = [];\n  /**\n   * A flag to indicate whether the Scheduler is currently executing a batch of\n   * queued actions.\n   * @type {boolean}\n   */\n  public active: boolean = false;\n  /**\n   * An internal ID used to track the latest asynchronous task such as those\n   * coming from `setTimeout`, `setInterval`, `requestAnimationFrame`, and\n   * others.\n   * @type {any}\n   */\n  public scheduled: any = undefined;\n\n  public flush(action: AsyncAction<any>): void {\n\n    const {actions} = this;\n\n    if (this.active) {\n      actions.push(action);\n      return;\n    }\n\n    let error: any;\n    this.active = true;\n\n    do {\n      if (error = action.execute(action.state, action.delay)) {\n        break;\n      }\n    } while (action = actions.shift()); // exhaust the scheduler queue\n\n    this.active = false;\n\n    if (error) {\n      while (action = actions.shift()) {\n        action.unsubscribe();\n      }\n      throw error;\n    }\n  }\n}\n","import { Action } from './scheduler/Action';\nimport { Subscription } from './Subscription';\n\nexport interface IScheduler {\n  now(): number;\n  schedule<T>(work: (this: Action<T>, state?: T) => void, delay?: number, state?: T): Subscription;\n}\n/**\n * An execution context and a data structure to order tasks and schedule their\n * execution. Provides a notion of (potentially virtual) time, through the\n * `now()` getter method.\n *\n * Each unit of work in a Scheduler is called an {@link Action}.\n *\n * ```ts\n * class Scheduler {\n *   now(): number;\n *   schedule(work, delay?, state?): Subscription;\n * }\n * ```\n *\n * @class Scheduler\n */\nexport class Scheduler implements IScheduler {\n\n  public static now: () => number = Date.now ? Date.now : () => +new Date();\n\n  constructor(private SchedulerAction: typeof Action,\n              now: () => number = Scheduler.now) {\n    this.now = now;\n  }\n\n  /**\n   * A getter method that returns a number representing the current time\n   * (at the time this function was called) according to the scheduler's own\n   * internal clock.\n   * @return {number} A number that represents the current time. May or may not\n   * have a relation to wall-clock time. May or may not refer to a time unit\n   * (e.g. milliseconds).\n   */\n  public now: () => number;\n\n  /**\n   * Schedules a function, `work`, for execution. May happen at some point in\n   * the future, according to the `delay` parameter, if specified. May be passed\n   * some context object, `state`, which will be passed to the `work` function.\n   *\n   * The given arguments will be processed an stored as an Action object in a\n   * queue of actions.\n   *\n   * @param {function(state: ?T): ?Subscription} work A function representing a\n   * task, or some unit of work to be executed by the Scheduler.\n   * @param {number} [delay] Time to wait before executing the work, where the\n   * time unit is implicit and defined by the Scheduler itself.\n   * @param {T} [state] Some contextual data that the `work` function uses when\n   * called by the Scheduler.\n   * @return {Subscription} A subscription in order to be able to unsubscribe\n   * the scheduled work.\n   */\n  public schedule<T>(work: (this: Action<T>, state?: T) => void, delay: number = 0, state?: T): Subscription {\n    return new this.SchedulerAction<T>(this, work).schedule(state, delay);\n  }\n}\n","import { root } from '../util/root';\nimport { Action } from './Action';\nimport { Subscription } from '../Subscription';\nimport { AsyncScheduler } from './AsyncScheduler';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class AsyncAction<T> extends Action<T> {\n\n  public id: any;\n  public state: T;\n  public delay: number;\n  protected pending: boolean = false;\n\n  constructor(protected scheduler: AsyncScheduler,\n              protected work: (this: AsyncAction<T>, state?: T) => void) {\n    super(scheduler, work);\n  }\n\n  public schedule(state?: T, delay: number = 0): Subscription {\n\n    if (this.closed) {\n      return this;\n     }\n\n    // Always replace the current state with the new state.\n    this.state = state;\n\n    // Set the pending flag indicating that this action has been scheduled, or\n    // has recursively rescheduled itself.\n    this.pending = true;\n\n    const id = this.id;\n    const scheduler = this.scheduler;\n\n    //\n    // Important implementation note:\n    //\n    // Actions only execute once by default, unless rescheduled from within the\n    // scheduled callback. This allows us to implement single and repeat\n    // actions via the same code path, without adding API surface area, as well\n    // as mimic traditional recursion but across asynchronous boundaries.\n    //\n    // However, JS runtimes and timers distinguish between intervals achieved by\n    // serial `setTimeout` calls vs. a single `setInterval` call. An interval of\n    // serial `setTimeout` calls can be individually delayed, which delays\n    // scheduling the next `setTimeout`, and so on. `setInterval` attempts to\n    // guarantee the interval callback will be invoked more precisely to the\n    // interval period, regardless of load.\n    //\n    // Therefore, we use `setInterval` to schedule single and repeat actions.\n    // If the action reschedules itself with the same delay, the interval is not\n    // canceled. If the action doesn't reschedule, or reschedules with a\n    // different delay, the interval will be canceled after scheduled callback\n    // execution.\n    //\n    if (id != null) {\n      this.id = this.recycleAsyncId(scheduler, id, delay);\n    }\n\n    this.delay = delay;\n    // If this action has already an async Id, don't request a new one.\n    this.id = this.id || this.requestAsyncId(scheduler, this.id, delay);\n\n    return this;\n  }\n\n  protected requestAsyncId(scheduler: AsyncScheduler, id?: any, delay: number = 0): any {\n    return root.setInterval(scheduler.flush.bind(scheduler, this), delay);\n  }\n\n  protected recycleAsyncId(scheduler: AsyncScheduler, id: any, delay: number = 0): any {\n    // If this action is rescheduled with the same delay time, don't clear the interval id.\n    if (delay !== null && this.delay === delay && this.pending === false) {\n      return id;\n    }\n    // Otherwise, if the action's delay time is different from the current delay,\n    // or the action has been rescheduled before it's executed, clear the interval id\n    return root.clearInterval(id) && undefined || undefined;\n  }\n\n  /**\n   * Immediately executes this action and the `work` it contains.\n   * @return {any}\n   */\n  public execute(state: T, delay: number): any {\n\n    if (this.closed) {\n      return new Error('executing a cancelled action');\n    }\n\n    this.pending = false;\n    const error = this._execute(state, delay);\n    if (error) {\n      return error;\n    } else if (this.pending === false && this.id != null) {\n      // Dequeue if the action didn't reschedule itself. Don't call\n      // unsubscribe(), because the action could reschedule later.\n      // For example:\n      // ```\n      // scheduler.schedule(function doWork(counter) {\n      //   /* ... I'm a busy worker bee ... */\n      //   var originalAction = this;\n      //   /* wait 100ms before rescheduling the action */\n      //   setTimeout(function () {\n      //     originalAction.schedule(counter + 1);\n      //   }, 100);\n      // }, 1000);\n      // ```\n      this.id = this.recycleAsyncId(this.scheduler, this.id, null);\n    }\n  }\n\n  protected _execute(state: T, delay: number): any {\n    let errored: boolean = false;\n    let errorValue: any = undefined;\n    try {\n      this.work(state);\n    } catch (e) {\n      errored = true;\n      errorValue = !!e && e || new Error(e);\n    }\n    if (errored) {\n      this.unsubscribe();\n      return errorValue;\n    }\n  }\n\n  /** @deprecated internal use only */ _unsubscribe() {\n\n    const id = this.id;\n    const scheduler = this.scheduler;\n    const actions = scheduler.actions;\n    const index = actions.indexOf(this);\n\n    this.work  = null;\n    this.state = null;\n    this.pending = false;\n    this.scheduler = null;\n\n    if (index !== -1) {\n      actions.splice(index, 1);\n    }\n\n    if (id != null) {\n      this.id = this.recycleAsyncId(scheduler, id, null);\n    }\n\n    this.delay = null;\n  }\n}\n","import { Scheduler } from '../Scheduler';\nimport { Subscription } from '../Subscription';\n\n/**\n * A unit of work to be executed in a {@link Scheduler}. An action is typically\n * created from within a Scheduler and an RxJS user does not need to concern\n * themselves about creating and manipulating an Action.\n *\n * ```ts\n * class Action<T> extends Subscription {\n *   new (scheduler: Scheduler, work: (state?: T) => void);\n *   schedule(state?: T, delay: number = 0): Subscription;\n * }\n * ```\n *\n * @class Action<T>\n */\nexport class Action<T> extends Subscription {\n  constructor(scheduler: Scheduler, work: (this: Action<T>, state?: T) => void) {\n    super();\n  }\n  /**\n   * Schedules this action on its parent Scheduler for execution. May be passed\n   * some context object, `state`. May happen at some point in the future,\n   * according to the `delay` parameter, if specified.\n   * @param {T} [state] Some contextual data that the `work` function uses when\n   * called by the Scheduler.\n   * @param {number} [delay] Time to wait before executing the work, where the\n   * time unit is implicit and defined by the Scheduler.\n   * @return {void}\n   */\n  public schedule(state?: T, delay: number = 0): Subscription {\n    return this;\n  }\n}\n","import { isFunction } from './util/isFunction';\nimport { Observer, PartialObserver } from './Observer';\nimport { Subscription } from './Subscription';\nimport { empty as emptyObserver } from './Observer';\nimport { rxSubscriber as rxSubscriberSymbol } from './symbol/rxSubscriber';\n\n/**\n * Implements the {@link Observer} interface and extends the\n * {@link Subscription} class. While the {@link Observer} is the public API for\n * consuming the values of an {@link Observable}, all Observers get converted to\n * a Subscriber, in order to provide Subscription-like capabilities such as\n * `unsubscribe`. Subscriber is a common type in RxJS, and crucial for\n * implementing operators, but it is rarely used as a public API.\n *\n * @class Subscriber<T>\n */\nexport class Subscriber<T> extends Subscription implements Observer<T> {\n\n  [rxSubscriberSymbol]() { return this; }\n\n  /**\n   * A static factory for a Subscriber, given a (potentially partial) definition\n   * of an Observer.\n   * @param {function(x: ?T): void} [next] The `next` callback of an Observer.\n   * @param {function(e: ?any): void} [error] The `error` callback of an\n   * Observer.\n   * @param {function(): void} [complete] The `complete` callback of an\n   * Observer.\n   * @return {Subscriber<T>} A Subscriber wrapping the (partially defined)\n   * Observer represented by the given arguments.\n   */\n  static create<T>(next?: (x?: T) => void,\n                   error?: (e?: any) => void,\n                   complete?: () => void): Subscriber<T> {\n    const subscriber = new Subscriber(next, error, complete);\n    subscriber.syncErrorThrowable = false;\n    return subscriber;\n  }\n\n  public syncErrorValue: any = null;\n  public syncErrorThrown: boolean = false;\n  public syncErrorThrowable: boolean = false;\n\n  protected isStopped: boolean = false;\n  protected destination: PartialObserver<any>; // this `any` is the escape hatch to erase extra type param (e.g. R)\n\n  /**\n   * @param {Observer|function(value: T): void} [destinationOrNext] A partially\n   * defined Observer or a `next` callback function.\n   * @param {function(e: ?any): void} [error] The `error` callback of an\n   * Observer.\n   * @param {function(): void} [complete] The `complete` callback of an\n   * Observer.\n   */\n  constructor(destinationOrNext?: PartialObserver<any> | ((value: T) => void),\n              error?: (e?: any) => void,\n              complete?: () => void) {\n    super();\n\n    switch (arguments.length) {\n      case 0:\n        this.destination = emptyObserver;\n        break;\n      case 1:\n        if (!destinationOrNext) {\n          this.destination = emptyObserver;\n          break;\n        }\n        if (typeof destinationOrNext === 'object') {\n          // HACK(benlesh): To resolve an issue where Node users may have multiple\n          // copies of rxjs in their node_modules directory.\n          if (isTrustedSubscriber(destinationOrNext)) {\n            const trustedSubscriber = destinationOrNext[rxSubscriberSymbol]() as Subscriber<any>;\n            this.syncErrorThrowable = trustedSubscriber.syncErrorThrowable;\n            this.destination = trustedSubscriber;\n            trustedSubscriber.add(this);\n          } else {\n            this.syncErrorThrowable = true;\n            this.destination = new SafeSubscriber<T>(this, <PartialObserver<any>> destinationOrNext);\n          }\n          break;\n        }\n      default:\n        this.syncErrorThrowable = true;\n        this.destination = new SafeSubscriber<T>(this, <((value: T) => void)> destinationOrNext, error, complete);\n        break;\n    }\n  }\n\n  /**\n   * The {@link Observer} callback to receive notifications of type `next` from\n   * the Observable, with a value. The Observable may call this method 0 or more\n   * times.\n   * @param {T} [value] The `next` value.\n   * @return {void}\n   */\n  next(value?: T): void {\n    if (!this.isStopped) {\n      this._next(value);\n    }\n  }\n\n  /**\n   * The {@link Observer} callback to receive notifications of type `error` from\n   * the Observable, with an attached {@link Error}. Notifies the Observer that\n   * the Observable has experienced an error condition.\n   * @param {any} [err] The `error` exception.\n   * @return {void}\n   */\n  error(err?: any): void {\n    if (!this.isStopped) {\n      this.isStopped = true;\n      this._error(err);\n    }\n  }\n\n  /**\n   * The {@link Observer} callback to receive a valueless notification of type\n   * `complete` from the Observable. Notifies the Observer that the Observable\n   * has finished sending push-based notifications.\n   * @return {void}\n   */\n  complete(): void {\n    if (!this.isStopped) {\n      this.isStopped = true;\n      this._complete();\n    }\n  }\n\n  unsubscribe(): void {\n    if (this.closed) {\n      return;\n    }\n    this.isStopped = true;\n    super.unsubscribe();\n  }\n\n  protected _next(value: T): void {\n    this.destination.next(value);\n  }\n\n  protected _error(err: any): void {\n    this.destination.error(err);\n    this.unsubscribe();\n  }\n\n  protected _complete(): void {\n    this.destination.complete();\n    this.unsubscribe();\n  }\n\n  /** @deprecated internal use only */ _unsubscribeAndRecycle(): Subscriber<T> {\n    const { _parent, _parents } = this;\n    this._parent = null;\n    this._parents = null;\n    this.unsubscribe();\n    this.closed = false;\n    this.isStopped = false;\n    this._parent = _parent;\n    this._parents = _parents;\n    return this;\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SafeSubscriber<T> extends Subscriber<T> {\n\n  private _context: any;\n\n  constructor(private _parentSubscriber: Subscriber<T>,\n              observerOrNext?: PartialObserver<T> | ((value: T) => void),\n              error?: (e?: any) => void,\n              complete?: () => void) {\n    super();\n\n    let next: ((value: T) => void);\n    let context: any = this;\n\n    if (isFunction(observerOrNext)) {\n      next = (<((value: T) => void)> observerOrNext);\n    } else if (observerOrNext) {\n      next = (<PartialObserver<T>> observerOrNext).next;\n      error = (<PartialObserver<T>> observerOrNext).error;\n      complete = (<PartialObserver<T>> observerOrNext).complete;\n      if (observerOrNext !== emptyObserver) {\n        context = Object.create(observerOrNext);\n        if (isFunction(context.unsubscribe)) {\n          this.add(<() => void> context.unsubscribe.bind(context));\n        }\n        context.unsubscribe = this.unsubscribe.bind(this);\n      }\n    }\n\n    this._context = context;\n    this._next = next;\n    this._error = error;\n    this._complete = complete;\n  }\n\n  next(value?: T): void {\n    if (!this.isStopped && this._next) {\n      const { _parentSubscriber } = this;\n      if (!_parentSubscriber.syncErrorThrowable) {\n        this.__tryOrUnsub(this._next, value);\n      } else if (this.__tryOrSetError(_parentSubscriber, this._next, value)) {\n        this.unsubscribe();\n      }\n    }\n  }\n\n  error(err?: any): void {\n    if (!this.isStopped) {\n      const { _parentSubscriber } = this;\n      if (this._error) {\n        if (!_parentSubscriber.syncErrorThrowable) {\n          this.__tryOrUnsub(this._error, err);\n          this.unsubscribe();\n        } else {\n          this.__tryOrSetError(_parentSubscriber, this._error, err);\n          this.unsubscribe();\n        }\n      } else if (!_parentSubscriber.syncErrorThrowable) {\n        this.unsubscribe();\n        throw err;\n      } else {\n        _parentSubscriber.syncErrorValue = err;\n        _parentSubscriber.syncErrorThrown = true;\n        this.unsubscribe();\n      }\n    }\n  }\n\n  complete(): void {\n    if (!this.isStopped) {\n      const { _parentSubscriber } = this;\n      if (this._complete) {\n        const wrappedComplete = () => this._complete.call(this._context);\n\n        if (!_parentSubscriber.syncErrorThrowable) {\n          this.__tryOrUnsub(wrappedComplete);\n          this.unsubscribe();\n        } else {\n          this.__tryOrSetError(_parentSubscriber, wrappedComplete);\n          this.unsubscribe();\n        }\n      } else {\n        this.unsubscribe();\n      }\n    }\n  }\n\n  private __tryOrUnsub(fn: Function, value?: any): void {\n    try {\n      fn.call(this._context, value);\n    } catch (err) {\n      this.unsubscribe();\n      throw err;\n    }\n  }\n\n  private __tryOrSetError(parent: Subscriber<T>, fn: Function, value?: any): boolean {\n    try {\n      fn.call(this._context, value);\n    } catch (err) {\n      parent.syncErrorValue = err;\n      parent.syncErrorThrown = true;\n      return true;\n    }\n    return false;\n  }\n\n  /** @deprecated internal use only */ _unsubscribe(): void {\n    const { _parentSubscriber } = this;\n    this._context = null;\n    this._parentSubscriber = null;\n    _parentSubscriber.unsubscribe();\n  }\n}\n\nfunction isTrustedSubscriber(obj: any) {\n  return obj instanceof Subscriber || ('syncErrorThrowable' in obj && obj[rxSubscriberSymbol]);\n}\n","import { root } from '../util/root';\n\nconst Symbol: any = root.Symbol;\n\nexport const rxSubscriber = (typeof Symbol === 'function' && typeof Symbol.for === 'function') ?\n  Symbol.for('rxSubscriber') : '@@rxSubscriber';\n\n/**\n * @deprecated use rxSubscriber instead\n */\nexport const $$rxSubscriber = rxSubscriber;\n","declare let global: any;\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\ndeclare var WorkerGlobalScope: any;\n// CommonJS / Node have global context exposed as \"global\" variable.\n// We don't want to include the whole node.d.ts this this compilation unit so we'll just fake\n// the global \"global\" var for now.\n\nconst __window = typeof window !== 'undefined' && window;\nconst __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n    self instanceof WorkerGlobalScope && self;\nconst __global = typeof global !== 'undefined' && global;\nconst _root: any = __window || __global || __self;\n\n// Workaround Closure Compiler restriction: The body of a goog.module cannot use throw.\n// This is needed when used with angular/tsickle which inserts a goog.module statement.\n// Wrap in IIFE\n(function () {\n  if (!_root) {\n    throw new Error('RxJS could not find any global context (window, self, global)');\n  }\n})();\n\nexport { _root as root };","export interface NextObserver<T> {\n  closed?: boolean;\n  next: (value: T) => void;\n  error?: (err: any) => void;\n  complete?: () => void;\n}\n\nexport interface ErrorObserver<T> {\n  closed?: boolean;\n  next?: (value: T) => void;\n  error: (err: any) => void;\n  complete?: () => void;\n}\n\nexport interface CompletionObserver<T> {\n  closed?: boolean;\n  next?: (value: T) => void;\n  error?: (err: any) => void;\n  complete: () => void;\n}\n\nexport type PartialObserver<T> = NextObserver<T> | ErrorObserver<T> | CompletionObserver<T>;\n\nexport interface Observer<T> {\n  closed?: boolean;\n  next: (value: T) => void;\n  error: (err: any) => void;\n  complete: () => void;\n}\n\nexport const empty: Observer<any> = {\n  closed: true,\n  next(value: any): void { /* noop */},\n  error(err: any): void { throw err; },\n  complete(): void { /*noop*/ }\n};\n","import { isArray } from './util/isArray';\nimport { isObject } from './util/isObject';\nimport { isFunction } from './util/isFunction';\nimport { tryCatch } from './util/tryCatch';\nimport { errorObject } from './util/errorObject';\nimport { UnsubscriptionError } from './util/UnsubscriptionError';\n\nexport interface AnonymousSubscription {\n  unsubscribe(): void;\n}\n\nexport type TeardownLogic = AnonymousSubscription | Function | void;\n\nexport interface ISubscription extends AnonymousSubscription {\n  unsubscribe(): void;\n  readonly closed: boolean;\n}\n\n/**\n * Represents a disposable resource, such as the execution of an Observable. A\n * Subscription has one important method, `unsubscribe`, that takes no argument\n * and just disposes the resource held by the subscription.\n *\n * Additionally, subscriptions may be grouped together through the `add()`\n * method, which will attach a child Subscription to the current Subscription.\n * When a Subscription is unsubscribed, all its children (and its grandchildren)\n * will be unsubscribed as well.\n *\n * @class Subscription\n */\nexport class Subscription implements ISubscription {\n  public static EMPTY: Subscription = (function(empty: any){\n    empty.closed = true;\n    return empty;\n  }(new Subscription()));\n\n  /**\n   * A flag to indicate whether this Subscription has already been unsubscribed.\n   * @type {boolean}\n   */\n  public closed: boolean = false;\n\n  protected _parent: Subscription = null;\n  protected _parents: Subscription[] = null;\n  private _subscriptions: ISubscription[] = null;\n\n  /**\n   * @param {function(): void} [unsubscribe] A function describing how to\n   * perform the disposal of resources when the `unsubscribe` method is called.\n   */\n  constructor(unsubscribe?: () => void) {\n    if (unsubscribe) {\n      (<any> this)._unsubscribe = unsubscribe;\n    }\n  }\n\n  /**\n   * Disposes the resources held by the subscription. May, for instance, cancel\n   * an ongoing Observable execution or cancel any other type of work that\n   * started when the Subscription was created.\n   * @return {void}\n   */\n  unsubscribe(): void {\n    let hasErrors = false;\n    let errors: any[];\n\n    if (this.closed) {\n      return;\n    }\n\n    let { _parent, _parents, _unsubscribe, _subscriptions } = (<any> this);\n\n    this.closed = true;\n    this._parent = null;\n    this._parents = null;\n    // null out _subscriptions first so any child subscriptions that attempt\n    // to remove themselves from this subscription will noop\n    this._subscriptions = null;\n\n    let index = -1;\n    let len = _parents ? _parents.length : 0;\n\n    // if this._parent is null, then so is this._parents, and we\n    // don't have to remove ourselves from any parent subscriptions.\n    while (_parent) {\n      _parent.remove(this);\n      // if this._parents is null or index >= len,\n      // then _parent is set to null, and the loop exits\n      _parent = ++index < len && _parents[index] || null;\n    }\n\n    if (isFunction(_unsubscribe)) {\n      let trial = tryCatch(_unsubscribe).call(this);\n      if (trial === errorObject) {\n        hasErrors = true;\n        errors = errors || (\n          errorObject.e instanceof UnsubscriptionError ?\n            flattenUnsubscriptionErrors(errorObject.e.errors) : [errorObject.e]\n        );\n      }\n    }\n\n    if (isArray(_subscriptions)) {\n\n      index = -1;\n      len = _subscriptions.length;\n\n      while (++index < len) {\n        const sub = _subscriptions[index];\n        if (isObject(sub)) {\n          let trial = tryCatch(sub.unsubscribe).call(sub);\n          if (trial === errorObject) {\n            hasErrors = true;\n            errors = errors || [];\n            let err = errorObject.e;\n            if (err instanceof UnsubscriptionError) {\n              errors = errors.concat(flattenUnsubscriptionErrors(err.errors));\n            } else {\n              errors.push(err);\n            }\n          }\n        }\n      }\n    }\n\n    if (hasErrors) {\n      throw new UnsubscriptionError(errors);\n    }\n  }\n\n  /**\n   * Adds a tear down to be called during the unsubscribe() of this\n   * Subscription.\n   *\n   * If the tear down being added is a subscription that is already\n   * unsubscribed, is the same reference `add` is being called on, or is\n   * `Subscription.EMPTY`, it will not be added.\n   *\n   * If this subscription is already in an `closed` state, the passed\n   * tear down logic will be executed immediately.\n   *\n   * @param {TeardownLogic} teardown The additional logic to execute on\n   * teardown.\n   * @return {Subscription} Returns the Subscription used or created to be\n   * added to the inner subscriptions list. This Subscription can be used with\n   * `remove()` to remove the passed teardown logic from the inner subscriptions\n   * list.\n   */\n  add(teardown: TeardownLogic): Subscription {\n    if (!teardown || (teardown === Subscription.EMPTY)) {\n      return Subscription.EMPTY;\n    }\n\n    if (teardown === this) {\n      return this;\n    }\n\n    let subscription = (<Subscription> teardown);\n\n    switch (typeof teardown) {\n      case 'function':\n        subscription = new Subscription(<(() => void) > teardown);\n      case 'object':\n        if (subscription.closed || typeof subscription.unsubscribe !== 'function') {\n          return subscription;\n        } else if (this.closed) {\n          subscription.unsubscribe();\n          return subscription;\n        } else if (typeof subscription._addParent !== 'function' /* quack quack */) {\n          const tmp = subscription;\n          subscription = new Subscription();\n          subscription._subscriptions = [tmp];\n        }\n        break;\n      default:\n        throw new Error('unrecognized teardown ' + teardown + ' added to Subscription.');\n    }\n\n    const subscriptions = this._subscriptions || (this._subscriptions = []);\n\n    subscriptions.push(subscription);\n    subscription._addParent(this);\n\n    return subscription;\n  }\n\n  /**\n   * Removes a Subscription from the internal list of subscriptions that will\n   * unsubscribe during the unsubscribe process of this Subscription.\n   * @param {Subscription} subscription The subscription to remove.\n   * @return {void}\n   */\n  remove(subscription: Subscription): void {\n    const subscriptions = this._subscriptions;\n    if (subscriptions) {\n      const subscriptionIndex = subscriptions.indexOf(subscription);\n      if (subscriptionIndex !== -1) {\n        subscriptions.splice(subscriptionIndex, 1);\n      }\n    }\n  }\n\n  private _addParent(parent: Subscription) {\n    let { _parent, _parents } = this;\n    if (!_parent || _parent === parent) {\n      // If we don't have a parent, or the new parent is the same as the\n      // current parent, then set this._parent to the new parent.\n      this._parent = parent;\n    } else if (!_parents) {\n      // If there's already one parent, but not multiple, allocate an Array to\n      // store the rest of the parent Subscriptions.\n      this._parents = [parent];\n    } else if (_parents.indexOf(parent) === -1) {\n      // Only add the new parent to the _parents list if it's not already there.\n      _parents.push(parent);\n    }\n  }\n}\n\nfunction flattenUnsubscriptionErrors(errors: any[]) {\n return errors.reduce((errs, err) => errs.concat((err instanceof UnsubscriptionError) ? err.errors : err), []);\n}\n","/**\n * An error thrown when one or more errors have occurred during the\n * `unsubscribe` of a {@link Subscription}.\n */\nexport class UnsubscriptionError extends Error {\n  constructor(public errors: any[]) {\n    super();\n    const err: any = Error.call(this, errors ?\n      `${errors.length} errors occurred during unsubscription:\n  ${errors.map((err, i) => `${i + 1}) ${err.toString()}`).join('\\n  ')}` : '');\n    (<any> this).name = err.name = 'UnsubscriptionError';\n    (<any> this).stack = err.stack;\n    (<any> this).message = err.message;\n  }\n}\n","import { errorObject } from './errorObject';\n\nlet tryCatchTarget: Function;\n\nfunction tryCatcher(this: any): any {\n  try {\n    return tryCatchTarget.apply(this, arguments);\n  } catch (e) {\n    errorObject.e = e;\n    return errorObject;\n  }\n}\n\nexport function tryCatch<T extends Function>(fn: T): T {\n  tryCatchTarget = fn;\n  return <any>tryCatcher;\n};\n","// typeof any so that it we don't have to cast when comparing a result to the error object\nexport const errorObject: any = { e: {} };","export function isObject(x: any): x is Object {\n  return x != null && typeof x === 'object';\n}\n","export const isArray = Array.isArray || (<T>(x: any): x is T[] => x && typeof x.length === 'number');\n","export function isFunction(x: any): x is Function {\n  return typeof x === 'function';\n}\n","import { Injectable, NgZone, OnDestroy, Renderer2, RendererFactory2 } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { Subscription } from 'rxjs/Subscription';\nimport { fromEvent } from 'rxjs/observable/fromEvent';\nexport class ResizeService implements OnDestroy {\nprivate _renderer: Renderer2;\nprivate _subscription = new Subscription();\n/**\n * @param {?} rendererFactory\n * @param {?} _ngZone\n */\nconstructor(rendererFactory: RendererFactory2,\nprivate _ngZone: NgZone) {\n        this._renderer = rendererFactory.createRenderer(null, null);\n    }\n/**\n * @return {?}\n */\nngOnDestroy(): void {\n        this._subscription.unsubscribe();\n    }\n/**\n * @param {?} nativeElement\n * @return {?}\n */\naddResizeListener(nativeElement: HTMLElement): BehaviorSubject<ResizeDimensions> {\n\n        // create a behavior subject subject\n        const /** @type {?} */ subject = new BehaviorSubject<ResizeDimensions>({ width: nativeElement.offsetWidth, height: nativeElement.offsetHeight });\n\n        // determine the style of the element\n        const /** @type {?} */ displayMode = window.getComputedStyle(nativeElement).getPropertyValue('display');\n\n        // create the iframe element\n        const /** @type {?} */ iframe: HTMLIFrameElement = this._renderer.createElement('iframe');\n\n        // style the iframe to be invisible but fill containing element\n        this._renderer.setStyle(iframe, 'position', 'absolute');\n        this._renderer.setStyle(iframe, 'width', '100%');\n        this._renderer.setStyle(iframe, 'height', '100%');\n        this._renderer.setStyle(iframe, 'top', '0');\n        this._renderer.setStyle(iframe, 'right', '0');\n        this._renderer.setStyle(iframe, 'bottom', '0');\n        this._renderer.setStyle(iframe, 'left', '0');\n        this._renderer.setStyle(iframe, 'z-index', '-1');\n        this._renderer.setStyle(iframe, 'opacity', '0');\n        this._renderer.setStyle(iframe, 'border', 'none');\n        this._renderer.setStyle(iframe, 'margin', '0');\n        this._renderer.setStyle(iframe, 'pointer-events', 'none');\n        this._renderer.setStyle(iframe, 'overflow', 'hidden');\n\n        // ensure the iframe ignores any tabbing\n        this._renderer.setAttribute(iframe, 'tabindex', '-1');\n\n        // statically positioned elements need changed to relative for this method to work\n        if (displayMode !== 'relative' && displayMode !== 'absolute' && displayMode !== 'fixed') {\n            this._renderer.setStyle(nativeElement, 'position', 'relative');\n        }\n\n        // add the iframe to the container element\n        this._renderer.appendChild(nativeElement, iframe);\n\n        this.waitUntilReady(iframe, () => {\n            const /** @type {?} */ iframeDoc = iframe.contentDocument || /** @type {?} */(( iframe.contentWindow.document as Document));\n\n            const /** @type {?} */ attachListener = () => {\n\n                // watch for any future resizes - run inside ngzone as an iframe event listener is not patched\n                this._subscription.add(fromEvent(iframe.contentWindow, 'resize').subscribe((event: ResizeDimensions) =>\n                    this._ngZone.run(() => subject.next({ width: nativeElement.offsetWidth, height: nativeElement.offsetHeight }))\n                ));\n            };\n\n            if (iframeDoc.readyState === 'complete') {\n                attachListener();\n            } else {\n\n                // wait for iframe to load\n                iframe.addEventListener('load', () => attachListener());\n            }\n        });\n\n\n        return subject;\n    }\n/**\n * @param {?} iframe\n * @param {?} callback\n * @return {?}\n */\nprivate waitUntilReady(iframe: HTMLIFrameElement, callback: () => void) {\n        if (iframe.contentDocument || iframe.contentWindow) {\n            callback.call(this);\n        } else {\n            setTimeout(() => this.waitUntilReady(iframe, callback));\n        }\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: RendererFactory2, },\n{type: NgZone, },\n];\n}\n\nfunction ResizeService_tsickle_Closure_declarations() {\n/** @type {?} */\nResizeService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nResizeService.ctorParameters;\n/** @type {?} */\nResizeService.prototype._renderer;\n/** @type {?} */\nResizeService.prototype._subscription;\n/** @type {?} */\nResizeService.prototype._ngZone;\n}\n\n\nexport interface ResizeDimensions {\n    width: number;\n    height: number;\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\n\nimport { BreadcrumbsComponent } from './breadcrumbs.component';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nexport class BreadcrumbsModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        CommonModule, \n        RouterModule\n    ],\n    exports: [BreadcrumbsComponent],\n    declarations: [BreadcrumbsComponent]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction BreadcrumbsModule_tsickle_Closure_declarations() {\n/** @type {?} */\nBreadcrumbsModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nBreadcrumbsModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Input } from '@angular/core';\nexport class BreadcrumbsComponent {\n\n     crumbs: Breadcrumb[];\n/**\n * @param {?} event\n * @param {?} crumb\n * @return {?}\n */\nclickCrumb(event: MouseEvent, crumb: Breadcrumb) {\n        if (crumb.onClick) {\n            crumb.onClick.call(null, event);\n        }\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-breadcrumbs',\n    template: `\n      <nav aria-label=\"Breadcrumb\">\n          <ol class=\"breadcrumb\">\n              <li *ngFor=\"let crumb of crumbs\">\n\n                  <!-- If there is a router link then use a tag -->\n                  <a *ngIf=\"crumb.routerLink || crumb.onClick\"\n                      tabindex=\"0\"\n                      [routerLink]=\"crumb.routerLink\"\n                      [fragment]=\"crumb.fragment\"\n                      [queryParams]=\"crumb.queryParams\"\n                      (click)=\"clickCrumb($event, crumb)\">\n                      {{ crumb.title }}\n                  </a>\n\n                  <!-- If there is not router link then display text in a span -->\n                  <span *ngIf=\"!crumb.routerLink && !crumb.onClick\">{{ crumb.title }}</span>\n              </li>\n          </ol>\n      </nav>\n    `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'crumbs': [{ type: Input },],\n};\n}\n\nfunction BreadcrumbsComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nBreadcrumbsComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nBreadcrumbsComponent.ctorParameters;\n/** @type {?} */\nBreadcrumbsComponent.propDecorators;\n/** @type {?} */\nBreadcrumbsComponent.prototype.crumbs;\n}\n\n\nexport interface Breadcrumb {\n    title: string;\n    routerLink?: string;\n    fragment?: string;\n    queryParams?: any;\n    onClick?: (event: MouseEvent) => void;\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"],"names":["Subscription","((dragulaNamespace)).default","map","distinctUntilChanged","BehaviorSubject","KeyCode","DECLARATIONS","Observable","Subject","filter","state","EXPORTS","TypeaheadModule","DOCUMENT","query","debounceTime","from","of","fromEvent","takeUntil","first","TooltipDirective","trigger","window","MouseEvent","document","months","combineLatest","delay","iterator_1","__extends","iterator","isArray_1","errorObject_1","WindowSubscriber","dispatchNext","queue_1","RefCountSubscriber","RefCountOperator","refCount","Map_1","root_1","observers","rxSubscriber_1","Set_1","async_1","observable_1","isArrayLike_1","observeOn","root","observable","Observer_1","global"],"mappings":"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"}

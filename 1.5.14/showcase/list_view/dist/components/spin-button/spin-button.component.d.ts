import { EventEmitter } from '@angular/core';
import { ControlValueAccessor } from '@angular/forms';
export declare const SPIN_BUTTON_VALUE_ACCESSOR: any;
export declare class SpinButtonComponent implements ControlValueAccessor {
    value: any;
    type: string;
    min: number;
    max: number;
    placeholder: string;
    disabled: boolean;
    spinners: boolean;
    readOnly: boolean;
    scrolling: boolean;
    arrowkeys: boolean;
    incrementAriaLabel: string;
    inputAriaLabel: string;
    decrementAriaLabel: string;
    valueChange: EventEmitter<any>;
    increment: EventEmitter<void>;
    decrement: EventEmitter<void>;
    onTouchedCallback: () => void;
    onChangeCallback: (_: any) => void;
    private _value;
    scroll(event: WheelEvent): void;
    triggerIncrement(): void;
    triggerDecrement(): void;
    writeValue(value: any): void;
    registerOnChange(fn: (_: any) => void): void;
    registerOnTouched(fn: () => void): void;
    setDisabledState(isDisabled: boolean): void;
}

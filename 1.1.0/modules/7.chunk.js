webpackJsonp([7],{1436:function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var o=function(){function t(t,e,n,o,i){this.snippets={compiled:{},raw:{}},this.loadSnippetsFromRequireContext(this.snippets.raw,i),this.snippets.compiled=this.snippets.raw}return t.prototype.loadSnippetsFromRequireContext=function(t,e){e&&e.keys().forEach(function(n){var o=n.replace("./","").replace(/\W+(\w)/g,function(t){return t[1].toUpperCase()});t[o]=e(n)})},t}();e.BaseDocumentationSection=o},1526:function(t,e){t.exports='<div>\n    <ux-checkbox [(value)]="checkModel.option1" [disabled]="disableCheck" [simplified]="simplified">\n    Option1</ux-checkbox>\n</div>\n\n<div>\n    <ux-checkbox [(value)]="checkModel.option2" [indeterminateValue]="indeterminateValue" \n    [simplified]="simplified">Option2</ux-checkbox>\n</div>\n\n<div>\n    <ux-checkbox [(value)]="checkModel.option3" [simplified]="simplified">Option3</ux-checkbox>\n</div>\n\n<div>\n    <ux-checkbox [(value)]="checkModel.option4" [simplified]="simplified">Onsectetur adipiscing elit. \n        Inte adipiscing elit onsectetur adipiscing elit. Inte adipiscing elit onsectetur adipiscing \n        elit. Inte adipiscing elit onsectetur adipiscing elit. Inte adipiscing elit onsectetur \n        adipiscing elit. Inte adipiscing elit onsectetur adipiscing elit.</ux-checkbox>\n</div>\n\n<br>\n\n<p class="m-t-xl">\n    <code>checkModel.option1</code> is <em>{{ checkModel.option1 }}</em>.\n    <code>checkModel.option2</code> is <em>{{ checkModel.option2 }}</em>.\n    <code>checkModel.option3</code> is <em>{{ checkModel.option3 }}</em>.\n    <code>checkModel.option4</code> is <em>{{ checkModel.option4 }}</em>.\n</p>\n\n<br>\n\n<div>\n    <button class="btn button-primary m-r-xs" \n            (click)="disableCheck = !disableCheck">\n            {{ disableCheck ? \'Click to enable Option1\' : \'Click to disable Option1\' }}\n    </button>\n\n    <button class="btn button-secondary m-r-xs" \n            (click)="checkModel.option2 = indeterminateValue">\n            Set Option2 to indeterminate state\n    </button>\n\n    <button class="btn button-accent" \n            (click)="simplified = !simplified">\n            {{ simplified ? \'Disable Simplified Style\' : \'Enable Simplified Style\' }}\n    </button>\n</div>'},1527:function(t,e){t.exports="import { Component } from '@angular/core';\n\n@Component({\n    selector: 'app',\n    templateUrl: './src/app.component.html'\n})\nexport class AppComponent {\n    private checkModel = {\n        option1: true,\n        option2: false,\n        option3: false,\n        option4: false\n    };\n\n    private simplified = false;\n    private indeterminateValue = -1;\n    private disableCheck = false;\n}"},1528:function(t,e){t.exports='<div>\n  <ux-toggleswitch [(value)]="toggleSwitches.option1" [disabled]="toggleSwitchDisable">Toggle 1\n  </ux-toggleswitch>\n</div>\n<div>\n  <ux-toggleswitch [(value)]="toggleSwitches.option2">Toggle 2</ux-toggleswitch>\n</div>\n<div>\n  <ux-toggleswitch [(value)]="toggleSwitches.option3">Toggle 3</ux-toggleswitch>\n</div>\n<div class="m-t-sm">\n  <ux-toggleswitch class="toggleswitch-lg" [(value)]="toggleSwitches.option4">Large Toggle\n  </ux-toggleswitch>\n</div>\n<p class="m-t">\n  <code>toggleSwitches.option1</code> is <em>{{toggleSwitches.option1}}</em>.\n  <code>toggleSwitches.option2</code> is <em>{{toggleSwitches.option2}}</em>.\n  <code>toggleSwitches.option3</code> is <em>{{toggleSwitches.option3}}</em>.\n  <code>toggleSwitches.option4</code> is <em>{{toggleSwitches.option4}}</em>.\n</p>\n<button class="btn button-primary m-r-xs" (click)="toggleSwitchDisable = !toggleSwitchDisable">\n  {{toggleSwitchDisable ? \'Click to enable Toggle 1\' : \'Click to disable Toggle 1\'}}</button>'},1529:function(t,e){t.exports="import { Component } from '@angular/core';\n\n@Component({\n    selector: 'app',\n    templateUrl: './src/app.component.html'\n})\nexport class AppComponent {\n    public toggleSwitches: any;\n    public toggleSwitchDisable: boolean;\n\n    constructor() {\n\n        this.toggleSwitches = {\n        option1: true,\n        option2: false,\n        option3: false,\n        option4: false\n        };\n\n        this.toggleSwitchDisable = false;\n    }\n}"},1539:function(t,e,n){function o(t){return n(i(t))}function i(t){var e=a[t];if(!(e+1))throw new Error("Cannot find module '"+t+"'.");return e}var a={"./sample.html":2427,"./sample.js":2428};o.keys=function(){return Object.keys(a)},o.resolve=i,t.exports=o,o.id=1539},1540:function(t,e,n){function o(t){return n(i(t))}function i(t){var e=a[t];if(!(e+1))throw new Error("Cannot find module '"+t+"'.");return e}var a={"./app.html":1526,"./app.ts":1527};o.keys=function(){return Object.keys(a)},o.resolve=i,t.exports=o,o.id=1540},1541:function(t,e,n){function o(t){return n(i(t))}function i(t){var e=a[t];if(!(e+1))throw new Error("Cannot find module '"+t+"'.");return e}var a={"./sample.css":2429,"./sample.html":2430,"./sample.js":2431,"./template.html":2432};o.keys=function(){return Object.keys(a)},o.resolve=i,t.exports=o,o.id=1541},1542:function(t,e,n){function o(t){return n(i(t))}function i(t){var e=a[t];if(!(e+1))throw new Error("Cannot find module '"+t+"'.");return e}var a={"./sample.html":2433};o.keys=function(){return Object.keys(a)},o.resolve=i,t.exports=o,o.id=1542},1543:function(t,e,n){function o(t){return n(i(t))}function i(t){var e=a[t];if(!(e+1))throw new Error("Cannot find module '"+t+"'.");return e}var a={"./sample.html":2434,"./sample.js":2435};o.keys=function(){return Object.keys(a)},o.resolve=i,t.exports=o,o.id=1543},1544:function(t,e,n){function o(t){return n(i(t))}function i(t){var e=a[t];if(!(e+1))throw new Error("Cannot find module '"+t+"'.");return e}var a={"./sample.html":2436,"./sample.js":2437};o.keys=function(){return Object.keys(a)},o.resolve=i,t.exports=o,o.id=1544},1545:function(t,e,n){function o(t){return n(i(t))}function i(t){var e=a[t];if(!(e+1))throw new Error("Cannot find module '"+t+"'.");return e}var a={"./sample.html":2438,"./sample.js":2439};o.keys=function(){return Object.keys(a)},o.resolve=i,t.exports=o,o.id=1545},1546:function(t,e,n){function o(t){return n(i(t))}function i(t){var e=a[t];if(!(e+1))throw new Error("Cannot find module '"+t+"'.");return e}var a={"./sample.css":2440,"./sample.html":2441,"./sample.js":2442};o.keys=function(){return Object.keys(a)},o.resolve=i,t.exports=o,o.id=1546},1547:function(t,e,n){function o(t){return n(i(t))}function i(t){var e=a[t];if(!(e+1))throw new Error("Cannot find module '"+t+"'.");return e}var a={"./sample.html":2443,"./sample.js":2444};o.keys=function(){return Object.keys(a)},o.resolve=i,t.exports=o,o.id=1547},1548:function(t,e,n){function o(t){return n(i(t))}function i(t){var e=a[t];if(!(e+1))throw new Error("Cannot find module '"+t+"'.");return e}var a={"./codepen.html":2445,"./codepen.js":2446,"./sample.html":2447};o.keys=function(){return Object.keys(a)},o.resolve=i,t.exports=o,o.id=1548},1549:function(t,e,n){function o(t){return n(i(t))}function i(t){var e=a[t];if(!(e+1))throw new Error("Cannot find module '"+t+"'.");return e}var a={"./codepen.html":2448,"./codepen.js":2449,"./sample1.html":2450,"./sample1.js":2451,"./sample2.html":2452,"./sample2.js":2453,"./sample3.js":2454};o.keys=function(){return Object.keys(a)},o.resolve=i,t.exports=o,o.id=1549},1550:function(t,e,n){function o(t){return n(i(t))}function i(t){var e=a[t];if(!(e+1))throw new Error("Cannot find module '"+t+"'.");return e}var a={"./autocomplete.html":2455,"./autocomplete.js":2456,"./codepen.html":2457,"./codepen.js":2458,"./custom.html":2459,"./custom.js":2460,"./sample.html":2461,"./sample.js":2462};o.keys=function(){return Object.keys(a)},o.resolve=i,t.exports=o,o.id=1550},1551:function(t,e,n){function o(t){return n(i(t))}function i(t){var e=a[t];if(!(e+1))throw new Error("Cannot find module '"+t+"'.");return e}var a={"./sample.css":2463,"./sample.html":2464,"./sample.js":2465,"./sample1.html":2466,"./sample2.html":2467,"./sample3.html":2468};o.keys=function(){return Object.keys(a)},o.resolve=i,t.exports=o,o.id=1551},1552:function(t,e,n){function o(t){return n(i(t))}function i(t){var e=a[t];if(!(e+1))throw new Error("Cannot find module '"+t+"'.");return e}var a={"./app.html":1528,"./app.ts":1529};o.keys=function(){return Object.keys(a)},o.resolve=i,t.exports=o,o.id=1552},1698:function(t,e,n){"use strict";var o=this&&this.__extends||function(){var t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])};return function(e,n){function o(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(o.prototype=n.prototype,new o)}}(),i=this&&this.__decorate||function(t,e,n,o){var i,a=arguments.length,s=a<3?e:null===o?o=Object.getOwnPropertyDescriptor(e,n):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(t,e,n,o);else for(var l=t.length-1;l>=0;l--)(i=t[l])&&(s=(a<3?i(s):a>3?i(e,n,s):i(e,n))||s);return a>3&&s&&Object.defineProperty(e,n,s),s},a=this&&this.__metadata||function(t,e){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(t,e)};Object.defineProperty(e,"__esModule",{value:!0});var s=n(0),l=n(259),r=n(1436),d=function(t){function e(){var e=t.call(this,null,null,null,null,n(1539))||this;return e.codepen={html:e.snippets.raw.sampleHtml,htmlAttributes:{"ng-controller":"CheckboxDemoCtrl as vm"},js:[e.snippets.raw.sampleJs]},e}return o(e,t),e}(r.BaseDocumentationSection);d=i([s.Component({selector:"uxd-components-checkbox-ng1",template:n(2039),changeDetection:s.ChangeDetectionStrategy.OnPush}),l.DocumentationSectionComponent("ComponentsCheckboxNg1Component"),a("design:paramtypes",[])],d),e.ComponentsCheckboxNg1Component=d},1699:function(t,e,n){"use strict";var o=this&&this.__extends||function(){var t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])};return function(e,n){function o(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(o.prototype=n.prototype,new o)}}(),i=this&&this.__decorate||function(t,e,n,o){var i,a=arguments.length,s=a<3?e:null===o?o=Object.getOwnPropertyDescriptor(e,n):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(t,e,n,o);else for(var l=t.length-1;l>=0;l--)(i=t[l])&&(s=(a<3?i(s):a>3?i(e,n,s):i(e,n))||s);return a>3&&s&&Object.defineProperty(e,n,s),s},a=this&&this.__metadata||function(t,e){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(t,e)};Object.defineProperty(e,"__esModule",{value:!0});var s=n(0),l=n(259),r=n(1436),d=function(t){function e(){var e=t.call(this,null,null,null,null,n(1540))||this;return e.sliderValue=50,e.sliderOptions={type:"value",handles:{style:"button",callout:{trigger:"none",background:"#464646",color:"#fff",formatter:function(t){return t}}},track:{height:"wide",min:0,max:100,ticks:{snap:"none",major:{show:!0,steps:10,labels:!0,formatter:function(t){return t}},minor:{show:!0,steps:5,labels:!1,formatter:function(t){return t}}},colors:{lower:"#f2f2f2",range:"rgba(96,121,141, 0.75)",higher:"#f2f2f2"}}},e.plunk={files:{"app.component.ts":n(1527),"app.component.html":n(1526)},modules:[{imports:["CheckboxModule"],library:"ux-aspects"}]},e.checkModel={option1:!0,option2:!1,option3:!1,option4:!1},e.simplified=!1,e.indeterminateValue=-1,e.disableCheck=!1,e}return o(e,t),e}(r.BaseDocumentationSection);d=i([s.Component({selector:"uxd-components-checkbox",template:n(2040)}),l.DocumentationSectionComponent("ComponentsCheckboxComponent"),a("design:paramtypes",[])],d),e.ComponentsCheckboxComponent=d},1700:function(t,e,n){"use strict";var o=this&&this.__extends||function(){var t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])};return function(e,n){function o(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(o.prototype=n.prototype,new o)}}(),i=this&&this.__decorate||function(t,e,n,o){var i,a=arguments.length,s=a<3?e:null===o?o=Object.getOwnPropertyDescriptor(e,n):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(t,e,n,o);else for(var l=t.length-1;l>=0;l--)(i=t[l])&&(s=(a<3?i(s):a>3?i(e,n,s):i(e,n))||s);return a>3&&s&&Object.defineProperty(e,n,s),s},a=this&&this.__metadata||function(t,e){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(t,e)};Object.defineProperty(e,"__esModule",{value:!0});var s=n(0),l=n(259),r=n(1436),d=function(t){function e(){var e=t.call(this,null,null,null,null,n(1541))||this;return e.codepen={html:e.snippets.raw.sampleHtml,htmlTemplates:[{id:"template.html",content:e.snippets.raw.templateHtml}],css:[e.snippets.raw.sampleCss],js:[e.snippets.raw.sampleJs]},e}return o(e,t),e}(r.BaseDocumentationSection);d=i([s.Component({selector:"uxd-custom-dropdown-ng1",template:n(2041),changeDetection:s.ChangeDetectionStrategy.OnPush}),l.DocumentationSectionComponent("ComponentsCustomDropdownNg1Component"),a("design:paramtypes",[])],d),e.ComponentsCustomDropdownNg1Component=d},1701:function(t,e,n){"use strict";var o=this&&this.__extends||function(){var t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])};return function(e,n){function o(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(o.prototype=n.prototype,new o)}}(),i=this&&this.__decorate||function(t,e,n,o){var i,a=arguments.length,s=a<3?e:null===o?o=Object.getOwnPropertyDescriptor(e,n):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(t,e,n,o);else for(var l=t.length-1;l>=0;l--)(i=t[l])&&(s=(a<3?i(s):a>3?i(e,n,s):i(e,n))||s);return a>3&&s&&Object.defineProperty(e,n,s),s},a=this&&this.__metadata||function(t,e){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(t,e)};Object.defineProperty(e,"__esModule",{value:!0});var s=n(0),l=n(259),r=n(1436),d=function(t){function e(){var e=t.call(this,null,null,null,null,n(1542))||this;return e.codepen={html:e.snippets.raw.sampleHtml},e}return o(e,t),e}(r.BaseDocumentationSection);d=i([s.Component({selector:"uxd-expanding-text-area-ng1",template:n(2042),changeDetection:s.ChangeDetectionStrategy.OnPush}),l.DocumentationSectionComponent("ComponentsExpandingTextAreaNg1Component"),a("design:paramtypes",[])],d),e.ComponentsExpandingTextAreaNg1Component=d},1702:function(t,e,n){"use strict";var o=this&&this.__extends||function(){var t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])};return function(e,n){function o(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(o.prototype=n.prototype,new o)}}(),i=this&&this.__decorate||function(t,e,n,o){var i,a=arguments.length,s=a<3?e:null===o?o=Object.getOwnPropertyDescriptor(e,n):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(t,e,n,o);else for(var l=t.length-1;l>=0;l--)(i=t[l])&&(s=(a<3?i(s):a>3?i(e,n,s):i(e,n))||s);return a>3&&s&&Object.defineProperty(e,n,s),s},a=this&&this.__metadata||function(t,e){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(t,e)};Object.defineProperty(e,"__esModule",{value:!0});var s=n(0),l=n(259),r=n(1436),d=function(t){function e(){var e=t.call(this,null,null,null,null,n(1543))||this;return e.codepen={html:e.snippets.raw.sampleHtml,htmlAttributes:{"ng-controller":"InlineDropDownCtrl as vm"},js:[e.snippets.raw.sampleJs]},e}return o(e,t),e}(r.BaseDocumentationSection);d=i([s.Component({selector:"uxd-components-inline-dropdown-ng1",template:n(2043),changeDetection:s.ChangeDetectionStrategy.OnPush}),l.DocumentationSectionComponent("ComponentsInlineDropdownNg1Component"),a("design:paramtypes",[])],d),e.ComponentsInlineDropdownNg1Component=d},1703:function(t,e,n){"use strict";var o=this&&this.__decorate||function(t,e,n,o){var i,a=arguments.length,s=a<3?e:null===o?o=Object.getOwnPropertyDescriptor(e,n):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(t,e,n,o);else for(var l=t.length-1;l>=0;l--)(i=t[l])&&(s=(a<3?i(s):a>3?i(e,n,s):i(e,n))||s);return a>3&&s&&Object.defineProperty(e,n,s),s},i=this&&this.__metadata||function(t,e){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(t,e)};Object.defineProperty(e,"__esModule",{value:!0});var a=n(0),s=n(18),l=n(260),r=n(140),d=n(261),c=n(1699),p=n(1698),u=n(1700),h=n(1701),m=n(1712),g=n(1711),f=n(1706),b=n(1702),v=n(1704),w=n(1705),x=n(1707),y=n(1710),k=n(1709),C=n(1708),T=n(263),O=n(262),S=n(141),_=[c.ComponentsCheckboxComponent,p.ComponentsCheckboxNg1Component,u.ComponentsCustomDropdownNg1Component,h.ComponentsExpandingTextAreaNg1Component,m.ComponentsToggleSwitchComponent,g.ComponentsToggleSwitchNg1Component,f.ComponentsNumberPickerNg1Component,b.ComponentsInlineDropdownNg1Component,v.ComponentsInputExpandNg1Component,w.ComponentsInputMaskNg1Component,x.ComponentsRadioButtonNg1Component,y.ComponentsTagsNg1Component,k.ComponentsSlidersNg1Component,C.ComponentsSliderChartsNg1Component],j=[{path:"**",component:d.DocumentationCategoryComponent,data:{category:r.ResolverService.resolveCategoryData(r.DocumentationPage.Components,"Input Controls")}}],D=function(){function t(t,e){e.registerResolver(t)}return t}();D=o([a.NgModule({imports:[T.WrappersModule,O.TabsModule,S.CheckboxModule,S.ToggleSwitchModule,l.DocumentationComponentsModule,s.RouterModule.forChild(j)],exports:_,declarations:_,entryComponents:_}),i("design:paramtypes",[a.ComponentFactoryResolver,r.ResolverService])],D),e.ComponentsInputControlsModule=D},1704:function(t,e,n){"use strict";var o=this&&this.__extends||function(){var t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])};return function(e,n){function o(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(o.prototype=n.prototype,new o)}}(),i=this&&this.__decorate||function(t,e,n,o){var i,a=arguments.length,s=a<3?e:null===o?o=Object.getOwnPropertyDescriptor(e,n):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(t,e,n,o);else for(var l=t.length-1;l>=0;l--)(i=t[l])&&(s=(a<3?i(s):a>3?i(e,n,s):i(e,n))||s);return a>3&&s&&Object.defineProperty(e,n,s),s},a=this&&this.__metadata||function(t,e){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(t,e)};Object.defineProperty(e,"__esModule",{value:!0});var s=n(0),l=n(259),r=n(1436),d=function(t){function e(){var e=t.call(this,null,null,null,null,n(1544))||this;return e.codepen={html:e.snippets.raw.sampleHtml,htmlAttributes:{"ng-controller":"InputExpandCtrl as vm"},js:[e.snippets.raw.sampleJs]},e}return o(e,t),e}(r.BaseDocumentationSection);d=i([s.Component({selector:"uxd-components-input-expand-ng1",template:n(2044),changeDetection:s.ChangeDetectionStrategy.OnPush}),l.DocumentationSectionComponent("ComponentsInputExpandNg1Component"),a("design:paramtypes",[])],d),e.ComponentsInputExpandNg1Component=d},1705:function(t,e,n){"use strict";var o=this&&this.__extends||function(){var t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])};return function(e,n){function o(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(o.prototype=n.prototype,new o)}}(),i=this&&this.__decorate||function(t,e,n,o){var i,a=arguments.length,s=a<3?e:null===o?o=Object.getOwnPropertyDescriptor(e,n):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(t,e,n,o);else for(var l=t.length-1;l>=0;l--)(i=t[l])&&(s=(a<3?i(s):a>3?i(e,n,s):i(e,n))||s);return a>3&&s&&Object.defineProperty(e,n,s),s},a=this&&this.__metadata||function(t,e){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(t,e)};Object.defineProperty(e,"__esModule",{value:!0});var s=n(0),l=n(259),r=n(1436),d=function(t){function e(){var e=t.call(this,null,null,null,null,n(1545))||this;return e.codepen={html:e.snippets.raw.sampleHtml,htmlAttributes:{"ng-controller":"InputMaskCtrl as vm"},js:[e.snippets.raw.sampleJs]},e}return o(e,t),e}(r.BaseDocumentationSection);d=i([s.Component({selector:"uxd-components-input-mask-ng1",template:n(2045),changeDetection:s.ChangeDetectionStrategy.OnPush}),l.DocumentationSectionComponent("ComponentsInputMaskNg1Component"),a("design:paramtypes",[])],d),e.ComponentsInputMaskNg1Component=d},1706:function(t,e,n){"use strict";var o=this&&this.__extends||function(){var t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])};return function(e,n){function o(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(o.prototype=n.prototype,new o)}}(),i=this&&this.__decorate||function(t,e,n,o){var i,a=arguments.length,s=a<3?e:null===o?o=Object.getOwnPropertyDescriptor(e,n):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(t,e,n,o);else for(var l=t.length-1;l>=0;l--)(i=t[l])&&(s=(a<3?i(s):a>3?i(e,n,s):i(e,n))||s);return a>3&&s&&Object.defineProperty(e,n,s),s},a=this&&this.__metadata||function(t,e){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(t,e)};Object.defineProperty(e,"__esModule",{value:!0});var s=n(0),l=n(259),r=n(1436),d=function(t){function e(){var e=t.call(this,null,null,null,null,n(1546))||this;return e.codepen={html:e.snippets.raw.sampleHtml,htmlAttributes:{"ng-controller":"NumberPickerCtrl as vm"},js:[e.snippets.raw.sampleJs],css:[e.snippets.raw.sampleCss]},e}return o(e,t),e}(r.BaseDocumentationSection);d=i([s.Component({selector:"uxd-components-number-picker-ng1",template:n(2046),changeDetection:s.ChangeDetectionStrategy.OnPush}),l.DocumentationSectionComponent("ComponentsNumberPickerNg1Component"),a("design:paramtypes",[])],d),e.ComponentsNumberPickerNg1Component=d},1707:function(t,e,n){"use strict";var o=this&&this.__extends||function(){var t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])};return function(e,n){function o(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(o.prototype=n.prototype,new o)}}(),i=this&&this.__decorate||function(t,e,n,o){var i,a=arguments.length,s=a<3?e:null===o?o=Object.getOwnPropertyDescriptor(e,n):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(t,e,n,o);else for(var l=t.length-1;l>=0;l--)(i=t[l])&&(s=(a<3?i(s):a>3?i(e,n,s):i(e,n))||s);return a>3&&s&&Object.defineProperty(e,n,s),s},a=this&&this.__metadata||function(t,e){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(t,e)};Object.defineProperty(e,"__esModule",{value:!0});var s=n(0),l=n(259),r=n(1436),d=function(t){function e(){var e=t.call(this,null,null,null,null,n(1547))||this;return e.codepen={html:e.snippets.raw.sampleHtml,htmlAttributes:{"ng-controller":"RadioButtonCtrl as vm"},js:[e.snippets.raw.sampleJs]},e}return o(e,t),e}(r.BaseDocumentationSection);d=i([s.Component({selector:"uxd-components-radio-button-ng1",template:n(2047),changeDetection:s.ChangeDetectionStrategy.OnPush}),l.DocumentationSectionComponent("ComponentsRadioButtonNg1Component"),a("design:paramtypes",[])],d),e.ComponentsRadioButtonNg1Component=d},1708:function(t,e,n){"use strict";var o=this&&this.__extends||function(){var t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])};return function(e,n){function o(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(o.prototype=n.prototype,new o)}}(),i=this&&this.__decorate||function(t,e,n,o){var i,a=arguments.length,s=a<3?e:null===o?o=Object.getOwnPropertyDescriptor(e,n):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(t,e,n,o);else for(var l=t.length-1;l>=0;l--)(i=t[l])&&(s=(a<3?i(s):a>3?i(e,n,s):i(e,n))||s);return a>3&&s&&Object.defineProperty(e,n,s),s},a=this&&this.__metadata||function(t,e){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(t,e)};Object.defineProperty(e,"__esModule",{value:!0});var s=n(0),l=n(259),r=n(1436),d=function(t){function e(){var e=t.call(this,null,null,null,null,n(1548))||this;return e.codepen={html:e.snippets.raw.codepenHtml,htmlAttributes:{"ng-controller":"SlidersChartsCtrl as vm"},js:[e.snippets.raw.codepenJs]},e}return o(e,t),e}(r.BaseDocumentationSection);d=i([s.Component({selector:"uxd-components-slider-charts-ng1",template:n(2048)}),l.DocumentationSectionComponent("ComponentsSliderChartsNg1Component"),a("design:paramtypes",[])],d),e.ComponentsSliderChartsNg1Component=d},1709:function(t,e,n){"use strict";var o=this&&this.__extends||function(){var t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])};return function(e,n){function o(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(o.prototype=n.prototype,new o)}}(),i=this&&this.__decorate||function(t,e,n,o){var i,a=arguments.length,s=a<3?e:null===o?o=Object.getOwnPropertyDescriptor(e,n):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(t,e,n,o);else for(var l=t.length-1;l>=0;l--)(i=t[l])&&(s=(a<3?i(s):a>3?i(e,n,s):i(e,n))||s);return a>3&&s&&Object.defineProperty(e,n,s),s},a=this&&this.__metadata||function(t,e){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(t,e)};Object.defineProperty(e,"__esModule",{value:!0});var s=n(0),l=n(259),r=n(1436),d=function(t){function e(){var e=t.call(this,null,null,null,null,n(1549))||this;return e.codepen={html:e.snippets.raw.codepenHtml,htmlAttributes:{"ng-controller":"SlidersCtrl as vm"},js:[e.snippets.raw.codepenJs]},e}return o(e,t),e}(r.BaseDocumentationSection);d=i([s.Component({selector:"uxd-components-sliders-ng1",template:n(2049),changeDetection:s.ChangeDetectionStrategy.OnPush}),l.DocumentationSectionComponent("ComponentsSlidersNg1Component"),a("design:paramtypes",[])],d),e.ComponentsSlidersNg1Component=d},1710:function(t,e,n){"use strict";var o=this&&this.__extends||function(){var t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])};return function(e,n){function o(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(o.prototype=n.prototype,new o)}}(),i=this&&this.__decorate||function(t,e,n,o){var i,a=arguments.length,s=a<3?e:null===o?o=Object.getOwnPropertyDescriptor(e,n):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(t,e,n,o);else for(var l=t.length-1;l>=0;l--)(i=t[l])&&(s=(a<3?i(s):a>3?i(e,n,s):i(e,n))||s);return a>3&&s&&Object.defineProperty(e,n,s),s},a=this&&this.__metadata||function(t,e){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(t,e)};Object.defineProperty(e,"__esModule",{value:!0});var s=n(0),l=n(259),r=n(1436),d=function(t){function e(){var e=t.call(this,null,null,null,null,n(1550))||this;return e.codepen={html:e.snippets.raw.codepenHtml,htmlAttributes:{"ng-controller":"TagsCtrl as vm"},js:[e.snippets.raw.codepenJs]},e}return o(e,t),e}(r.BaseDocumentationSection);d=i([s.Component({selector:"uxd-components-tags-ng1",template:n(2050),changeDetection:s.ChangeDetectionStrategy.OnPush}),l.DocumentationSectionComponent("ComponentsTagsNg1Component"),a("design:paramtypes",[])],d),e.ComponentsTagsNg1Component=d},1711:function(t,e,n){"use strict";var o=this&&this.__extends||function(){var t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])};return function(e,n){function o(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(o.prototype=n.prototype,new o)}}(),i=this&&this.__decorate||function(t,e,n,o){var i,a=arguments.length,s=a<3?e:null===o?o=Object.getOwnPropertyDescriptor(e,n):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(t,e,n,o);else for(var l=t.length-1;l>=0;l--)(i=t[l])&&(s=(a<3?i(s):a>3?i(e,n,s):i(e,n))||s);return a>3&&s&&Object.defineProperty(e,n,s),s},a=this&&this.__metadata||function(t,e){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(t,e)};Object.defineProperty(e,"__esModule",{value:!0});var s=n(0),l=n(259),r=n(1436),d=function(t){function e(){var e=t.call(this,null,null,null,null,n(1551))||this;return e.codepen={html:e.snippets.raw.sampleHtml,htmlAttributes:{"ng-controller":"ToggleSwitchDemoCtrl as vm"},css:[e.snippets.raw.sampleCss],js:[e.snippets.raw.sampleJs]},e}return o(e,t),e}(r.BaseDocumentationSection);d=i([s.Component({selector:"uxd-toggle-switch-ng1",template:n(2051),changeDetection:s.ChangeDetectionStrategy.OnPush}),l.DocumentationSectionComponent("ComponentsToggleSwitchNg1Component"),a("design:paramtypes",[])],d),e.ComponentsToggleSwitchNg1Component=d},1712:function(t,e,n){"use strict";var o=this&&this.__extends||function(){var t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])};return function(e,n){function o(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(o.prototype=n.prototype,new o)}}(),i=this&&this.__decorate||function(t,e,n,o){var i,a=arguments.length,s=a<3?e:null===o?o=Object.getOwnPropertyDescriptor(e,n):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(t,e,n,o);else for(var l=t.length-1;l>=0;l--)(i=t[l])&&(s=(a<3?i(s):a>3?i(e,n,s):i(e,n))||s);return a>3&&s&&Object.defineProperty(e,n,s),s},a=this&&this.__metadata||function(t,e){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(t,e)};Object.defineProperty(e,"__esModule",{value:!0});var s=n(0),l=n(259),r=n(1436),d=function(t){function e(){var e=t.call(this,null,null,null,null,n(1552))||this;return e.plunk={files:{"app.component.ts":n(1529),"app.component.html":n(1528)},modules:[{imports:["ToggleSwitchModule"],library:"ux-aspects"}]},e.toggleSwitches={option1:!0,option2:!1,option3:!1,option4:!1},e.toggleSwitchDisable=!1,e}return o(e,t),e}(r.BaseDocumentationSection);d=i([s.Component({selector:"uxd-components-toggleswitch",template:n(2052)}),l.DocumentationSectionComponent("ComponentsToggleSwitchComponent"),a("design:paramtypes",[])],d),e.ComponentsToggleSwitchComponent=d},2039:function(t,e){t.exports='<uxd-checkbox-wrapper></uxd-checkbox-wrapper>\n\n<hr>\n\n<p>To create a checkbox use the <code>checkbox</code> directive with an <code>ng-model</code> to set and store the value.</p>\n\n<tabset>\n    <tab heading="HTML">\n        <uxd-snippet [content]="snippets.compiled.sampleHtml"></uxd-snippet>\n    </tab>\n    <tab heading="JavaScript">\n        <uxd-snippet [content]="snippets.compiled.sampleJs" language="javascript"></uxd-snippet>\n    </tab>\n</tabset>\n\n<p>The following attributes can be set to customize the behavior of the control.</p>\n\n<div class="demo-attributes table-responsive">\n    <table class="table m-t">\n        <tr>\n            <th>Name</th>\n            <th>Type</th>\n            <th>Binding</th>\n            <th>Description</th>\n            <th>Optional</th>\n        </tr>\n        <tr>\n            <td class="attribute">ng-model</td>\n            <td>boolean</td>\n            <td>variable</td>\n            <td>Initially sets the value of the checkbox and will be updated to contain the current value if a user toggles the\n                checkbox.</td>\n            <td>false</td>\n        </tr>\n        <tr>\n            <td class="attribute">indeterminate-value</td>\n            <td>value</td>\n            <td>variable</td>\n            <td>If <code>ng-model</code> is set to the indeterminate value specified using this attribute, it will neither display\n                the checkbox as checked or unchecked, and will instead show the indeterminate variation.</td>\n            <td>true</td>\n        </tr>\n        <tr>\n            <td class="attribute">simplified</td>\n            <td>boolean</td>\n            <td>variable</td>\n            <td>If set to <code>true</code> the checkbox will be displayed without a border and background.</td>\n            <td>true</td>\n        </tr>\n        <tr>\n            <td class="attribute">clickable</td>\n            <td>boolean</td>\n            <td>variable</td>\n            <td>If set to <code>false</code> the checkbox will not be updated when clicking on it, can be used if something else\n                is updating the state of the checkbox.</td>\n            <td>true</td>\n        </tr>\n    </table>\n</div>'},2040:function(t,e){t.exports='<div>\n    <ux-checkbox [(value)]="checkModel.option1" [disabled]="disableCheck" [simplified]="simplified">Option1</ux-checkbox>\n</div>\n\n<div>\n    <ux-checkbox [(value)]="checkModel.option2" [indeterminateValue]="indeterminateValue" [simplified]="simplified">Option2</ux-checkbox>\n</div>\n\n<div>\n    <ux-checkbox [(value)]="checkModel.option3" [simplified]="simplified">Option3</ux-checkbox>\n</div>\n\n<div>\n    <ux-checkbox [(value)]="checkModel.option4" [simplified]="simplified">Onsectetur adipiscing elit. Inte adipiscing elit onsectetur adipiscing elit. Inte adipiscing elit onsectetur adipiscing elit. Inte adipiscing elit onsectetur adipiscing elit. Inte adipiscing elit onsectetur adipiscing elit. Inte adipiscing elit onsectetur adipiscing elit.</ux-checkbox>\n</div>\n\n<br>\n\n<p class="m-t-xl">\n    <code>checkModel.option1</code> is <em>{{ checkModel.option1 }}</em>.\n    <code>checkModel.option2</code> is <em>{{ checkModel.option2 }}</em>.\n    <code>checkModel.option3</code> is <em>{{ checkModel.option3 }}</em>.\n    <code>checkModel.option4</code> is <em>{{ checkModel.option4 }}</em>.\n</p>\n\n<br>\n\n<div>\n    <button class="btn button-primary m-r-xs" \n            (click)="disableCheck = !disableCheck">\n            {{ disableCheck ? \'Click to enable Option1\' : \'Click to disable Option1\' }}\n    </button>\n\n    <button class="btn button-secondary m-r-xs" \n            (click)="checkModel.option2 = indeterminateValue">\n            Set Option2 to indeterminate state\n    </button>\n\n    <button class="btn button-accent" \n            (click)="simplified = !simplified">\n            {{ simplified ? \'Disable Simplified Style\' : \'Enable Simplified Style\' }}\n    </button>\n</div>\n\n<hr>\n\n<p>The code used for the above example is shown below:</p>\n\n<tabset>\n    <tab heading="HTML">\n        <uxd-snippet [content]="snippets.compiled.appHtml"></uxd-snippet>\n    </tab>\n    <tab heading="TypeScript">\n        <uxd-snippet [content]="snippets.compiled.appTs" language="javascript"></uxd-snippet>\n    </tab>\n</tabset>\n\n<p>The following attributes can be set to customize the behavior of the control.</p>\n\n<p>In an Angular application, <code>ngModel</code> may be used to bind the control to a form.</p>\n\n<table class="table">\n\n    <thead>\n        <tr>\n            <th>Name</th>\n            <th>Type</th>\n            <th>Description</th>\n        </tr>\n    </thead>\n\n    <tbody>\n\n        <tr>\n            <td><b>@Input @Output</b> value</td>\n            <td><b>any</b></td>\n            <td>Determines if the checkbox should be checked, unchecked or indeterminate. The default value is <code>false</code>.</td>\n        </tr>\n\n        <tr>\n            <td><b>@Input</b> indeterminateValue</td>\n            <td><b>any</b></td>\n            <td>If <code>value</code> is set to the indeterminate value specified using this attribute, it will neither display the checkbox as checked or unchecked, and will instead show the indeterminate variation. The default value is <code>-1</code>.</td>\n        </tr>\n\n        <tr>\n            <td><b>@Input</b> simplified</td>\n            <td><b>boolean</b></td>\n            <td>If set to <code>true</code> the checkbox will be displayed without a border and background. The default value is <code>false</code>.</td>\n        </tr>\n\n        <tr>\n            <td><b>@Input</b> clickable</td>\n            <td><b>boolean</b></td>\n            <td>If set to <code>true</code> the checkbox will not toggle state when clicked. The default value is <code>false</code>.</td>\n        </tr>\n\n    </tbody>\n</table>\n'},2041:function(t,e){t.exports='<uxd-custom-dropdown-wrapper></uxd-custom-dropdown-wrapper>\n\n<hr>\n\n<p>The custom dropdown can be added to a component as a popover. The contents of the custom dropdown can be defined in a template\n    and the path can be provided to the <code>popover-template</code> attribute. The example shows a custom dropdown with\n    an option to search. Additional buttons and components can be added and the callbacks should be implemented accordingly.</p>\n\n<p>The code used for the above example is shown below:</p>\n\n<tabset>\n    <tab heading="HTML">\n        <uxd-snippet [content]="snippets.compiled.sampleHtml"></uxd-snippet>\n    </tab>\n    <tab heading="Template HTML">\n        <uxd-snippet [content]="snippets.compiled.templateHtml"></uxd-snippet>\n    </tab>\n    <tab heading="JavaScript">\n        <uxd-snippet [content]="snippets.compiled.sampleJs" language="javascript"></uxd-snippet>\n    </tab>\n    <tab heading="CSS">\n        <uxd-snippet [content]="snippets.compiled.sampleCss" language="css"></uxd-snippet>\n    </tab>\n</tabset>'},2042:function(t,e){t.exports='<div class="row">\n    <div class="col-md-6 col-xs-12 m-t-md">\n        <uxd-expanding-text-area-wrapper></uxd-expanding-text-area-wrapper>\n    </div>\n</div>\n\n<hr>\n\n<p>Expanding textareas provide the same functionality as regular textareas however with the additional feature that they can\n    grow in height as more content is added to them.</p>\n\n<p>To create an expanding textarea use the <code>expanding-textarea</code> directive.</p>\n\n<uxd-snippet [content]="this.snippets.compiled.sampleHtml"></uxd-snippet>\n\n<p>Additional attributes can be specified to configure the behavior of the textarea:</p>\n\n<div class="demo-attributes table-responsive">\n    <table class="table">\n        <tr>\n            <th>Name</th>\n            <th>Type</th>\n            <th>Binding</th>\n            <th>Description</th>\n            <th>Optional</th>\n        </tr>\n        <tr>\n            <td class="attribute">disable-return</td>\n            <td>boolean</td>\n            <td>literal</td>\n            <td>If true this will prevent the user from being able to take a new line by pressing the return key.</td>\n            <td>true</td>\n        </tr>\n        <tr>\n            <td class="attribute">max-visible-lines</td>\n            <td>number</td>\n            <td>literal</td>\n            <td>Once the textarea has this many lines it will no longer grow and instead show a scrollbar. A value of 0 will\n                grow the textarea regardless of the number of lines.</td>\n            <td>true</td>\n        </tr>\n    </table>\n</div>'},2043:function(t,e){t.exports='<uxd-inline-dropdown-wrapper></uxd-inline-dropdown-wrapper>\n\n<hr>\n\n<p>Inline dropdowns adjust their width according to the length of the selected item. \nThe text preceding the dropdown can be provided using a span with the <code>.inline-dropdown-text</code> class.</p>\n\n<p>On the <code>div.btn-group</code> set the <code>dropdown</code> attribute. The button should have the <code>.btn</code>, <code>.inline-dropdown</code> and <code>.dropdown-toggle</code> classes.</p>\n\n<p>If you do not require the dotted line under the selected dropdown you can add the <code>.no-line</code> class to the button.</p>\n\n<p>The dropdown can either be opened by setting the <code>is-open</code> attribute, or by setting the dropdown-toggle attribute on the <code>.btn</code>. \nSet <code>on-toggle="yourFunction(open)"</code> for <code>yourFunction</code> to be executed every time the dropdown changes state.</p>\n\n<p>An example code for inline dropdowns is provided below:</p>\n\n<tabset>\n    <tab heading="HTML">\n        <uxd-snippet [content]="snippets.compiled.sampleHtml"></uxd-snippet>\n    </tab>\n    <tab heading="JavaScript">\n        <uxd-snippet [content]="snippets.compiled.sampleJs" language="javascript"></uxd-snippet>\n    </tab>\n</tabset>'},2044:function(t,e){t.exports='<uxd-input-expand-wrapper></uxd-input-expand-wrapper>\n\n<hr>\n\n<p>Input Expand is contained in the <code>expand-input</code> directive and the <code>.expand-input</code> class.</p>\n\n<p>Input Expand takes the following attributes:</p>\n\n<div class="demo-attributes table-responsive">\n    <table class="table">\n        <tr>\n            <th>Name</th>\n            <th>Type</th>\n            <th>Binding</th>\n            <th>Description</th>\n            <th>Optional</th>\n        </tr>\n        <tr>\n            <td class="attribute">elname</td>\n            <td>string</td>\n            <td>literal</td>\n            <td>Name of the input element.</td>\n            <td>false</td>\n        </tr>\n        <tr>\n            <td class="attribute">place-holder</td>\n            <td>string</td>\n            <td>literal</td>\n            <td>Placeholder text for an input.<br></td>\n            <td>false</td>\n        </tr>\n        <tr>\n            <td class="attribute">class-name</td>\n            <td>string</td>\n            <td>literal</td>\n            <td>Defines the classes for the input.</td>\n            <td>false</td>\n        </tr>\n        <tr>\n            <td class="attribute">focus</td>\n            <td>function</td>\n            <td>expression</td>\n            <td>A method that defines a boolean value to indicate whether an input is expanded. Can be used to display or hide\n                other elements.</td>\n            <td>false</td>\n        </tr>\n        <tr>\n            <td class="attribute">clear-text-icon</td>\n            <td>string</td>\n            <td>literal</td>\n            <td>Icon used in the clear input text button.</td>\n            <td>false</td>\n        </tr>\n        <tr>\n            <td class="attribute">close-search</td>\n            <td>string</td>\n            <td>literal</td>\n            <td>Should be set to a value which when clicked closes the input text</td>\n            <td>false</td>\n        </tr>\n        <tr>\n            <td class="attribute">expand-always</td>\n            <td>boolean</td>\n            <td>variable</td>\n            <td>Indicates whether the search should always expand or only on a larger viewport.</td>\n            <td>false</td>\n        </tr>\n        <tr>\n            <td class="attribute">on-enter</td>\n            <td>function</td>\n            <td>variable</td>\n            <td>Defines the function to be called when the enter key is pressed. The function will be called with the current\n                text entered in the field as an argument.</td>\n            <td>true</td>\n        </tr>\n    </table>\n</div>\n\n<p>The HTML used in the example above can be found below:</p>\n\n<uxd-snippet [content]="snippets.compiled.sampleHtml"></uxd-snippet>'},2045:function(t,e){t.exports='<p>An input mask can be useful when you want to restrict the format of the string a user can input. To create an input mask\n    add a <code>data-mask</code> attribute with a valid format string.</p>\n\n<p>Add the <code>placeholder</code> attribute with the value you want to be displayed as a placeholder. Add the <code>data-placeholder</code>    attribute with the character you want to be displayed when a character needs to be typed, by default it is ‘_’.</p>\n\n<p>The format string can take the following values:</p>\n\n<ul>\n    <li>9 - represents a number</li>\n    <li>a - represents a letter</li>\n    <li>* - represents an alphanumeric</li>\n    <li>[] - optional - any characters within the sqaure braces will become optional.</li>\n</ul>\n\n<p>Include an <code>aria-label</code> attribute that describes the restrictions of the input mask to provide accessibility to\n    users using assistive technologies.</p>\n\n<hr>\n\n<uxd-input-mask-wrapper></uxd-input-mask-wrapper>\n\n<hr>\n\n<p>The code to create the input masks in the example above is as follows:</p>\n\n<tabset>\n    <tab heading="HTML">\n        <uxd-snippet [content]="snippets.compiled.sampleHtml"></uxd-snippet>\n    </tab>\n    <tab heading="JavaScript">\n        <uxd-snippet [content]="snippets.compiled.sampleJs" language="javascript"></uxd-snippet>\n    </tab>\n</tabset>\n\n<blockquote>\n    <p>Refer to <a href="https://github.com/RobinHerbots/jquery.inputmask">Inputmask</a> for more options.</p>\n</blockquote>'},2046:function(t,e){t.exports='<uxd-number-picker-wrapper></uxd-number-picker-wrapper>\n\n<hr>\n\n<p>The Number Picker provides a way in which users can easily select a number value from a specified range by clicking the up\n    and down buttons or by using the up/down arrow keys on their keyboard.</p>\n\n<p>To implement the Number Picker you must use the <code>number-picker</code> directive. There are some attributes you may specify\n    on the <code>number-picker</code> directive to obtain the functionality you desire:</p>\n\n<div class="demo-attributes table-responsive">\n    <table class="table">\n        <tr>\n            <th>Name</th>\n            <th>Type</th>\n            <th>Binding</th>\n            <th>Description</th>\n            <th>Optional</th>\n        </tr>\n        <tr>\n            <td class="attribute">ng-model</td>\n            <td>number</td>\n            <td>variable</td>\n            <td>Describes the value the Number Picker is initialised with. It should be a value within the <code>max</code> and\n                <code>min</code> range and must be declared</td>\n            <td>false</td>\n        </tr>\n        <tr>\n            <td class="attribute">step</td>\n            <td>number</td>\n            <td>variable</td>\n            <td>Describes the value the Number Picker is incremeted/decremented by each time. The default value is <code>1</code></td>\n            <td>true</td>\n        </tr>\n        <tr>\n            <td class="attribute">max</td>\n            <td>number</td>\n            <td>variable</td>\n            <td>Describes the upper limit value</td>\n            <td>true</td>\n        </tr>\n        <tr>\n            <td class="attribute">min</td>\n            <td>number</td>\n            <td>variable</td>\n            <td>Describes the lower limit value</td>\n            <td>true</td>\n        </tr>\n        <tr>\n            <td class="attribute">validate</td>\n            <td>function</td>\n            <td>variable</td>\n            <td>Describes the function that will validate the input value. It should return <code>true</code> if the input is\n                invalid, <code>false</code> otherwise</td>\n            <td>true</td>\n        </tr>\n        <tr>\n            <td class="attribute">ng-disabled</td>\n            <td>boolean</td>\n            <td>variable</td>\n            <td>Determines the disabled state of the Number Picker.</td>\n            <td>true</td>\n        </tr>\n    </table>\n</div>\n\n<p>The Number Picker contains validation that will show if an input value is invalid which can occur for a number of reasons:</p>\n\n<ol>\n    <li>The value doesn\'t fall between the specified range (<code>max</code> and <code>min</code>)</li>\n    <li>The value is not a number</li>\n</ol>\n\n<p>You can see the code used in our example above by selecting the appropriate tabs below:</p>\n\n<tabset>\n    <tab heading="HTML">\n        <uxd-snippet [content]="snippets.compiled.sampleHtml"></uxd-snippet>\n    </tab>\n    <tab heading="JavaScript">\n        <uxd-snippet [content]="snippets.compiled.sampleJs" language="javascript"></uxd-snippet>\n    </tab>\n    <tab heading="CSS">\n        <uxd-snippet [content]="snippets.compiled.sampleCss" language="css"></uxd-snippet>\n    </tab>\n</tabset>'},2047:function(t,e){t.exports='<uxd-radio-button-wrapper></uxd-radio-button-wrapper>\n\n<hr>\n\n<p>To create a radio button use the <code>radiobutton</code> directive with an <code>ng-model</code> to set and store the value.</p>\n\n<tabset>\n    <tab heading="HTML">\n        <uxd-snippet [content]="snippets.compiled.sampleHtml"></uxd-snippet>\n    </tab>\n    <tab heading="JavaScript">\n        <uxd-snippet [content]="snippets.compiled.sampleJs" language="javascript"></uxd-snippet>\n    </tab>\n</tabset>\n\n<p>The following attributes can be set to customize the behavior of the control.</p>\n\n<div class="demo-attributes table-responsive">\n    <table class="table m-t">\n        <tr>\n            <th>Name</th>\n            <th>Type</th>\n            <th>Binding</th>\n            <th>Description</th>\n            <th>Optional</th>\n        </tr>\n        <tr>\n            <td class="attribute">ng-model</td>\n            <td>boolean</td>\n            <td>variable</td>\n            <td>Initially sets the value of the radio button and will be updated to contain the current value if a user toggles\n                the radio button.</td>\n            <td>false</td>\n        </tr>\n        <tr>\n            <td class="attribute">ng-value</td>\n            <td>value</td>\n            <td>variable</td>\n            <td>If this value equals the value in <code>ng-model</code> then the radio button will appear selected. If a user\n                clicks the radio button <code>ng-model</code> will be given the value specified by this attribute.</td>\n            <td>false</td>\n        </tr>\n        <tr>\n            <td class="attribute">simplified</td>\n            <td>boolean</td>\n            <td>variable</td>\n            <td>If set to <code>true</code> the radio button will be displayed without a border and background.</td>\n            <td>true</td>\n        </tr>\n        <tr>\n            <td class="attribute">clickable</td>\n            <td>boolean</td>\n            <td>variable</td>\n            <td>If set to <code>false</code> the radio button will not be updated when clicking on it, can be used if something\n                else is updating the state of the radio button.</td>\n            <td>true</td>\n        </tr>\n    </table>\n</div>\n\n<p>Use the <code>name</code> attribute to indicate which radio buttons are part of the same group.</p>'},2048:function(t,e){t.exports='<uxd-slider-charts-wrapper></uxd-slider-charts-wrapper>\n\n<hr>\n\n<h4>Slider Chart Directive</h4>\n\n<p>The component can be added to a page by using the following HTML:</p>\n\n<uxd-snippet [content]="snippets.compiled.sampleHtml"></uxd-snippet>\n\n<p>The slider chart has been primarily designed for use for filtering by date eg. within facets and should have the following\n    attributes:</p>\n\n<div class="demo-attributes table-responsive">\n    <table class="table">\n        <tr>\n            <th>Property</th>\n            <th>Type</th>\n            <th>Binding</th>\n            <th>Description</th>\n            <th>Optional</th>\n        </tr>\n        <tr>\n            <td class="attribute">ng-model</td>\n            <td>Object</td>\n            <td>Variable</td>\n            <td>The range of values for the slider.</td>\n            <td>false</td>\n        </tr>\n        <tr>\n            <td class="attribute">slider-options</td>\n            <td>Object</td>\n            <td>Variable</td>\n            <td>The options for the slider.</td>\n            <td>false</td>\n        </tr>\n        <tr>\n            <td class="attribute">chart-data</td>\n            <td>Object</td>\n            <td>Variable</td>\n            <td>The data to populate the chart.</td>\n            <td>false</td>\n        </tr>\n        <tr>\n            <td class="attribute">chart-options</td>\n            <td>Object</td>\n            <td>Variable</td>\n            <td>The options for the chart.</td>\n            <td>false</td>\n        </tr>\n    </table>\n</div>\n\n<blockquote>\n    <p><strong>Note</strong>: Refer to the <a routerLink="/charts/flot-options">Flot Options</a> page for details of chart options.</p>\n</blockquote>\n\n<blockquote>\n    <p><strong>Note</strong>: Refer to the <a routerLink="/components/input-controls" fragment="sliders-ng1">Sliders</a> page for details of\n        sliders.</p>\n</blockquote>'},2049:function(t,e){t.exports='<uxd-sliders-wrapper></uxd-sliders-wrapper>\n\n<hr>\n\n<p>The slider component can be used to allow a user to select a single value or a range of values. It can easily be customized\n    to match the desired appearance and behavior.</p>\n\n<h4>Slider Directive</h4>\n\n<p>The component can be added to a page by using the following HTML:</p>\n\n<uxd-snippet [content]="snippets.compiled.sample1Html"></uxd-snippet>\n\n<blockquote>\n    <p>Reference the CodePen for the code used in all examples above</p>\n</blockquote>\n\n<h4>Values</h4>\n\n<p>The value or range should be specified by adding an <code>ng-model</code> attribute to the directive. This should reference\n    either a value or an object in your controller, depending on the slider type specified in the chart options.</p>\n\n<p>For single value selection, an example of the data in the controller may be:</p>\n\n<uxd-snippet [content]="snippets.compiled.sample1Js" language="javascript"></uxd-snippet>\n\n<p>For range selection, an example of the data in the controller may be:</p>\n\n<uxd-snippet [content]="snippets.compiled.sample2Js" language="javascript"></uxd-snippet>\n\n<p>The variable in the controller will be updated with the correct value, or values, when the slider is dragged.</p>\n\n<h4>Options</h4>\n\n<p>A wide ranges of options can be configured to customize the control. These options should be stored in the controller and\n    passed to the control by adding an <code>options</code> attribute to the directive.</p>\n\n<p>The default options for each chart are as follows:</p>\n\n<uxd-snippet [content]="snippets.compiled.sample3Js" language="javascript"></uxd-snippet>\n\n<p>Full details on each property and the possible values for each can be found below. All properties are optional, if they are\n    not specified the default value will be used.</p>\n\n<div class="demo-attributes table-responsive">\n    <table class="table">\n        <tr>\n            <th>Property</th>\n            <th>Description</th>\n        </tr>\n        <tr>\n            <td class="attribute">type</td>\n            <td>Defines whether the slider should allow selection of a single value or a range of values. The two valid values\n                are <code>value</code> and <code>range</code>. The default value for this property is <code>value</code>.</td>\n        </tr>\n        <tr>\n            <td class="attribute">handles</td>\n            <td>This should be an object that contains properties configuring the appearance and behavior of the draggable handles\n                on the slider. If not specified the default options will be used.</td>\n        </tr>\n        <tr>\n            <td class="attribute">track</td>\n            <td>This should be an object that contains properties configuring the appearance and behavior of the track on the\n                slider. If not specified the default options will be used.</td>\n        </tr>\n    </table>\n</div>\n\n<h4>Handle Options</h4>\n\n<div class="demo-attributes table-responsive">\n    <table class="table">\n        <tr>\n            <th>Property</th>\n            <th>Description</th>\n        </tr>\n        <tr>\n            <td class="attribute">style</td>\n            <td>This allows you to choose the appearance of the drag handles. The two available options are <code>button</code>                and <code>line</code>. The default option is <code>button</code>.</td>\n        </tr>\n        <tr>\n            <td class="attribute">callout</td>\n            <td>This should be an object that configures the appearance and behavior of the drag handle callout. If not specified\n                no callout will be shown.</td>\n        </tr>\n    </table>\n</div>\n\n<h4>Callout Options</h4>\n\n<div class="demo-attributes table-responsive">\n    <table class="table">\n        <tr>\n            <th>Property</th>\n            <th>Description</th>\n        </tr>\n        <tr>\n            <td class="attribute">trigger</td>\n            <td>This option will specify when the callout should appear. The available options are:\n                <br>\n                <ul>\n                    <li><code>none</code> - The callout will never appear. This is the default option.</li>\n                    <li><code>hover</code> - The callout will appear when the mouse is over the handle and will remain visible\n                        when dragging the handle.</li>\n                    <li><code>drag</code> - The callout will appear only when the handle is being dragged.</li>\n                    <li><code>persistent</code> - The callout will always be visible.</li>\n                </ul>\n            </td>\n        </tr>\n        <tr>\n            <td class="attribute">background</td>\n            <td>Specified the background color of the callout. The default value is <code>#464646</code>.</td>\n        </tr>\n        <tr>\n            <td class="attribute">color</td>\n            <td>Specified the text color of the callout. The default value is <code>#fff</code>.</td>\n        </tr>\n        <tr>\n            <td class="attribute">formatter</td>\n            <td>This allows you to specify a function that will format the value in the callout. The function should accept the\n                value as a parameter and return the modified value. By default the value will not be modified.</td>\n        </tr>\n    </table>\n</div>\n\n<h4>Track Options</h4>\n\n<div class="demo-attributes table-responsive">\n    <table class="table">\n        <tr>\n            <th>Property</th>\n            <th>Description</th>\n        </tr>\n        <tr>\n            <td class="attribute">height</td>\n            <td>This specifies the height of the track. There are two available values, <code>wide</code> and <code>narrow</code>.\n                The default value is <code>wide</code>.</td>\n        </tr>\n        <tr>\n            <td class="attribute">min</td>\n            <td>Specifies the minimum value shown on the slider. The default is <code>0</code>.</td>\n        </tr>\n        <tr>\n            <td class="attribute">max</td>\n            <td>Specifies the maximum value shown on the slider. The default is <code>100</code>.</td>\n        </tr>\n        <tr>\n            <td class="attribute">ticks</td>\n            <td>Should be an object containing properties to customize the ticks shown beneath the chart. By default major ticks\n                are shown on every 10th value with labels, minor ticks are shown every 5 values with no labels.</td>\n        </tr>\n        <tr>\n            <td class="attribute">colors</td>\n            <td>Specifies the colors that should be used on different parts of the track. This should be an object that can contain\n                the following properties:\n                <br>\n                <br>\n                <ul>\n                    <li><code>lower</code> - Specifies the color or colors to be shown in the area before the first drag handle.\n                        This can be a string containing a color value or an array of strings which will result in a gradient.</li>\n                    <li><code>range</code> - Specifies the color or colors to be shown in the area between the first and second\n                        drag handle (the selected range of values). This only applies when a range of values can be selected.\n                        This can be a string containing a color value or an array of strings which will result in a gradient.</li>\n                    <li><code>higher</code> - Specifies the color or colors to be shown in the area after the last drag handle.\n                        This can be a string containing a color value or an array of strings which will result in a gradient.</li>\n                </ul>\n            </td>\n        </tr>\n    </table>\n</div>\n\n<h4>Tick Options</h4>\n\n<div class="demo-attributes table-responsive">\n    <table class="table">\n        <tr>\n            <th>Property</th>\n            <th>Description</th>\n        </tr>\n        <tr>\n            <td class="attribute">snap</td>\n            <td>Specifies if the slider should snap to the ticks. There are several available options:\n                <br>\n                <br>\n                <ul>\n                    <li><code>none</code> - No snapping will occur. This is the default value.</li>\n                    <li><code>major</code> - Will snap to the major ticks.</li>\n                    <li><code>minor</code> - Will snap to the minor ticks.</li>\n                    <li><code>all</code> - Will snap to both the major and minor ticks.</li>\n                </ul>\n            </td>\n        </tr>\n        <tr>\n            <td class="attribute">major</td>\n            <td>Should be an object containing properties that configure the major ticks. Major ticks will be more prominent\n                that minor ticks and tend to be less frequent.</td>\n        </tr>\n        <tr>\n            <td class="attribute">minor</td>\n            <td>Should be an object containing properties that configure the minor ticks. Minor ticks will be less prominent\n                that major ticks and tend to be more frequent.</td>\n        </tr>\n    </table>\n</div>\n\n<h4>Major & Minor Tick Options</h4>\n\n<div class="demo-attributes table-responsive">\n    <table class="table">\n        <tr>\n            <th>Property</th>\n            <th>Description</th>\n        </tr>\n        <tr>\n            <td class="attribute">show</td>\n            <td>Specifies whether this variety of ticks should be shown. The available options are <code>true</code> or <code>false</code>.\n                By default both major and minor ticks will be shown.</td>\n        </tr>\n        <tr>\n            <td class="attribute">steps</td>\n            <td>Specifies at what interval this variety of tick should appear. Default for major ticks is <code>10</code>, the\n                default for minor ticks is <code>5</code>. Additionally this can be an array containing precise values of\n                when ticks should appear. This can be useful when ticks should not appear at regular intervals.\n            </td>\n        </tr>\n        <tr>\n            <td class="attribute">labels</td>\n            <td>Specifies whether or not this variety of ticks should display labels. The available options are <code>true</code>                or <code>false</code>. By default major ticks will show labels, minor ticks will not.</td>\n        </tr>\n        <tr>\n            <td class="attribute">formatter</td>\n            <td>This allows you to specify a function that will format the value in the tick label. This should accept a value\n                as a parameter and return a modified value. By default the value will not be modified.</td>\n        </tr>\n    </table>\n</div>\n\n<h4>Adding Text Input Controls</h4>\n\n<p>Text inputs, or other controls can be used to allow users to change the value shown on the slider or to display the value\n    the slider has selected. These controls are not part of the slider component but can be easily combined by using the\n    <code>ng-model</code> directive. Adding this directive to a text input control and binding to the same value as the slider\n    will result in both controls displaying the same value, and if one is updated the other will update also. It may also\n    be useful to debounce the update in text controls to allow users to finish typing before updating the slider. For example:</p>\n\n<uxd-snippet [content]="snippets.compiled.sample2Html"></uxd-snippet>'},2050:function(t,e){t.exports='<uxd-tags-wrapper></uxd-tags-wrapper>\n\n<hr>\n\n<p>The tag input is set with the <code class="highlighter-rouge">tag-input</code> directive. It accepts the following attributes:</p>\n\n<div class="demo-attributes table-responsive">\n<table class="table">\n  <tr>\n    <th>Name</th>\n    <th>Type</th>\n    <th>Binding</th>\n    <th>Description</th>\n    <th>Optional</th>\n  </tr>\n  <tr>\n    <td class="attribute">tags</td>\n    <td>array</td>\n    <td>variable</td>\n    <td>An initial set of tags to be displayed</td>\n    <td>false</td>\n  </tr>\n  <tr>\n    <td class="attribute">full-tag-set</td>\n    <td>array</td>\n    <td>variable</td>\n    <td>A set of tags to be used for autocompletion</td>\n    <td>true</td>\n  </tr>\n  <tr>\n    <td class="attribute">api</td>\n    <td>object</td>\n    <td>variable</td>\n    <td>A set of callback functions for events and validation</td>\n    <td>true</td>\n  </tr>\n  <tr>\n    <td class="attribute">options</td>\n    <td>object</td>\n    <td>variable</td>\n    <td>An object allowing configuration of the control\'s behaviour</td>\n    <td>true</td>\n  </tr>\n  <tr>\n    <td class="attribute">ng-disabled</td>\n    <td>boolean</td>\n    <td>variable</td>\n    <td>Determines whether the control is disabled. Default is false.</td>\n    <td>true</td>\n  </tr>\n</table>\n</div>\n\n<h4>Tags</h4>\n\n<p>Tags can be specified in a number of formats. \nThe simplest format is to provide tags as an array of strings; these will be internally converted to an array of objects holding a <code class="highlighter-rouge">text</code> property. \nTags can also be supplied as an array of objects, where the <code class="highlighter-rouge">text</code> property of each member will be used for the tag control.</p>\n\n<p>Alternatively, you can specify a <code class="highlighter-rouge">format</code> property in the options for the control, and map the display properties to arbitrary values. \nSee the Options section below for more details.</p>\n\n<p>By default, tags will be added when the user presses the enter key.</p>\n\n<p>Configuration options are available for extending this to cover the space and comma keys, as well as options for the blur event of the control \nand how to handle text pasted from the clipboard. When the backspace key is pressed after a tag has been entered, the tag will be highlighted. \nThe highlighted tag can be changed with the arrow keys, and pressing backspace again will delete the tag.</p>\n\n<h4>Autocomplete</h4>\n\n<p>The tag control supports free-form typing, autocomplete assisted free-form typing, and inputs limited to autocomplete values. \nThe Options section below describes how to configure the autocomplete behaviour.</p>\n\n<p>The set of tags should be an array of strings.</p>\n\n<blockquote>\n  <p><strong>Note</strong>: that for autocomplete functionality, you must provide a value for the <code class="highlighter-rouge">full-tag-set</code> attribute, and the <code class="highlighter-rouge">autocomplete</code> configuration block must be supplied.</p>\n</blockquote>\n\n<h4>API</h4>\n\n<p>The <code class="highlighter-rouge">API</code> attribute allows you to provide an object hosting functions, which will be invoked when the corresponding internal behaviour is executed. \nAll of these functions will be called with the tag available as <code class="highlighter-rouge">$tag</code>.</p>\n\n<br>\n\n<div class="demo-attributes table-responsive">\n<table class="table">\n  <tr>\n    <th>Property</th>\n    <th>Description</th>\n  </tr>\n  <tr>\n    <td class="attribute">onTagAdding</td>\n    <td>Called before a new tag is added. This method must return <code>true</code> or <code>false</code>, with a return value of <code>false</code> preventing the tag from being added</td>\n  </tr>\n  <tr>\n    <td class="attribute">onTagAdded</td>\n    <td>Called after a new tag is added</td>\n  </tr>\n  <tr>\n    <td class="attribute">onInvalidTag</td>\n    <td>Called when a tag is invalid</td>\n  </tr>\n  <tr>\n    <td class="attribute">onTagRemoving</td>\n    <td>Called before removing a tag. This method must return <code>true</code> or <code>false</code>, with a return value of <code>false</code> preventing the tag from being removed</td>\n  </tr>\n  <tr>\n    <td class="attribute">onTagRemoved</td>\n    <td>Called after a tag is removed</td>\n  </tr>\n  <tr>\n    <td class="attribute">onTagClicked</td>\n    <td>Called when the user clicks on an existing tag</td>\n  </tr>\n</table>\n</div>\n\n<h4>Options</h4>\n\n<p>The <code class="highlighter-rouge">options</code> attribute allows you to provide an object which will configure the behaviour of the control. The following options are available:</p>\n\n<div class="demo-attributes table-responsive">\n<table class="table">\n  <tr>\n    <th>Property</th>\n    <th>Description</th>\n  </tr>\n  <tr>\n    <td class="attribute">placeholder</td>\n    <td>Placeholder text for the input control</td>\n  </tr>\n  <tr>\n    <td class="attribute">minTagLength</td>\n    <td>Minimum length for a new tag (Default: 1)</td>\n  </tr>\n  <tr>\n    <td class="attribute">maxTagLength</td>\n    <td>Maximum length for a new tag (Default: Max Int)</td>\n  </tr>\n  <tr>\n    <td class="attribute">minNumberTags</td>\n    <td>Minimum valid number of tags (Default: 0)</td>\n  </tr>\n  <tr>\n    <td class="attribute">maxNumberTags</td>\n    <td>Maximum valid number of tags (Default: Max Int)</td>\n  </tr>\n  <tr>\n    <td class="attribute">addOnSpace</td>\n    <td>Flag for if new tags should be added when the space key is pressed (Default: false)</td>\n  </tr>\n  <tr>\n    <td class="attribute">addOnComma</td>\n    <td>Flag for if new tags should be added when the comma key is pressed (Default: false)</td>\n  </tr>\n  <tr>\n    <td class="attribute">addOnBlur</td>\n    <td>Flag for if new tags should be added when the control loses focus (Default: true)</td>\n  </tr>\n  <tr>\n    <td class="attribute">addOnPaste</td>\n    <td>Flag for if new tags should be added when pasting from the clipboard (Default: true)</td>\n  </tr>\n  <tr>\n    <td class="attribute">pasteSplitPattern</td>\n    <td>When pasting from the clipboard, string delimiter for parsing input into tags (Default: \',\' )</td>\n  </tr>\n  <tr>\n    <td class="attribute">tabIndex</td>\n    <td>Tabindex for the control (Default: Undefined )</td>\n  </tr>\n  <tr>\n    <td class="attribute">template</td>\n    <td>HTML for custom tag style (optional)</td>\n  </tr>\n  <tr>\n    <td class="attribute">maxTagsMessage</td>\n    <td>String for the message which will be displayed if the user exceeds the maximum number of tags (optional)</td>\n  </tr>\n  <tr>\n    <td class="attribute">maxTagsHidden</td>\n    <td>Boolean value to hide the placeholder and autocomplete dropdown if the maximum number of tags has been reached (Default: false)</td>\n  </tr>\n  <tr>\n    <td class="attribute">format</td>\n    <td>\n        Object with the following properties:\n        <ul>\n            <li><code>key</code> - property name in your object format for uniquely identifying tags (Default: \'text\')</li>\n            <li><code>display</code> - property name in your object format for displaying as the tag\'s text (Default: \'text\')</li>\n        </ul>\n    </td>\n  </tr>\n  <tr>\n    <td class="attribute">autocomplete</td>\n    <td>\n        Object with the following properties:\n        <ul>\n            <li><code>addFromAutocompleteOnly</code> - flag for allowing only autocomplete values (Default: \'false\')</li>\n            <li><code>delay</code> - delay in ms before the autocomplete will open (Default: 100)</li>\n            <li><code>minLength</code> - number of characters the user should type before the autocomplete will open (Default: 3)</li>\n            <li><code>template</code> - html for custom autocomplete style (optional)</li>\n            <li><code>source</code> - expression to evaluate upon changing the input content (optional)</li>\n        </ul>\n    </td>\n  </tr>\n</table>\n</div>\n\n<p>The code for the above example is as follows:</p>\n\n<tabset>\n    <tab heading="HTML">\n        <uxd-snippet [content]="snippets.compiled.sampleHtml"></uxd-snippet>\n    </tab>\n    <tab heading="JavaScript">\n        <uxd-snippet [content]="snippets.compiled.sampleJs" language="javascript"></uxd-snippet>\n    </tab>\n</tabset>\n\n<hr>\n\n<p>The following example demonstrates how to use the autocomplete behaviour. Try typing the names of colours.</p>\n\n<uxd-tags-autocomplete-wrapper></uxd-tags-autocomplete-wrapper>\n\n<hr>\n\n<p>The code for the above example is as follows:</p>\n\n<tabset>\n    <tab heading="HTML">\n        <uxd-snippet [content]="snippets.compiled.autocompleteHtml"></uxd-snippet>\n    </tab>\n    <tab heading="JavaScript">\n        <uxd-snippet [content]="snippets.compiled.autocompleteJs" language="javascript"></uxd-snippet>\n    </tab>\n</tabset>\n\n<hr>\n\n<p>The following example shows how a custom template can be added to the autocomplete to provide more details. Try typing a name.</p>\n\n<uxd-tags-custom-wrapper></uxd-tags-custom-wrapper>\n\n<hr>\n\n<p>The code for the above example is as follows:</p>\n\n<tabset>\n    <tab heading="HTML">\n        <uxd-snippet [content]="snippets.compiled.customHtml"></uxd-snippet>\n    </tab>\n    <tab heading="JavaScript">\n        <uxd-snippet [content]="snippets.compiled.customJs" language="javascript"></uxd-snippet>\n    </tab>\n</tabset>'},2051:function(t,e){t.exports='<uxd-toggle-switch-wrapper></uxd-toggle-switch-wrapper>\n\n<hr>\n\n<p>To create a toggle switch use the <code>toggleswitch</code> directive with an <code>ng-model</code> attribute to set and\n    store the value. Use <code>ng-disabled</code> to control the disabled state.</p>\n\n<uxd-snippet [content]="snippets.compiled.sample1Html"></uxd-snippet>\n\n<p>Add the class <code>toggleswitch-lg</code> to use the large variant of the toggle switch.</p>\n\n<uxd-snippet [content]="snippets.compiled.sample2Html"></uxd-snippet>\n\n<p>The following attributes can be set to customize the behavior of the control.</p>\n\n<div class="demo-attributes table-responsive">\n    <table class="table m-t">\n        <tr>\n            <th>Name</th>\n            <th>Type</th>\n            <th>Binding</th>\n            <th>Description</th>\n            <th>Optional</th>\n        </tr>\n        <tr>\n            <td class="attribute">ng-model</td>\n            <td>boolean</td>\n            <td>variable</td>\n            <td>Initially sets the value of the swtich and will be updated to contain the current value if a user toggles the\n                switch.</td>\n            <td>false</td>\n        </tr>\n        <tr>\n            <td class="attribute">ng-disabled</td>\n            <td>value</td>\n            <td>variable</td>\n            <td>If this value is set to <code>true</code> the toggle switch will be disabled.</td>\n            <td>true</td>\n        </tr>\n        <tr>\n            <td class="attribute">clickable</td>\n            <td>boolean</td>\n            <td>variable</td>\n            <td>If set to <code>false</code> the switch will not be updated when clicking on it, can be used if something else\n                is updating the state of the switch.</td>\n            <td>true</td>\n        </tr>\n    </table>\n</div>\n\n<h4>Custom Styling</h4>\n\n<uxd-custom-toggle-switch-wrapper></uxd-custom-toggle-switch-wrapper>\n\n<hr>\n\n<p>Above is an example of a custom style applied to the toggle switch using CSS. Using the classes described below, one may\n    modify the appearance, size, and animations associated with the toggle switch.</p>\n\n<p>The control consists of the following components that may be styled.</p>\n\n<ul>\n    <li><code>.el-toggleswitch-label</code> is the container of both the toggle switch and the associated label.\n        <ul>\n            <li><code>.el-toggleswitch</code> contains the toggle switch components. It will also have additional classes based\n                on the state of the control. <code>.checked</code> will be present when the control is in the checked state.\n                <code>.disabled</code> will be present if the <code>ng-disabled</code> expression evaluates to true.\n                <ul>\n                    <li><code>.el-toggleswitch-bg</code> is the visible backdrop of the toggle switch.</li>\n                    <li><code>.el-toggleswitch-nub</code> is the switch component which moves when changing state.</li>\n                </ul>\n            </li>\n            <li><code>.el-toggleswitch-content</code> contains the text label.</li>\n        </ul>\n    </li>\n</ul>\n\n<p>The CSS used to create the custom appearance above is as follows. Note that a custom parent class has been applied to each\n    style rule.</p>\n\n<uxd-snippet [content]="snippets.compiled.sampleCss" language="css"></uxd-snippet>\n\n<p>To ensure that the styles override the default, create the toggle switch with the custom class applied.</p>\n\n<uxd-snippet [content]="snippets.compiled.sample3Html"></uxd-snippet>'},2052:function(t,e){t.exports='<div>\n  <ux-toggleswitch [(value)]="toggleSwitches.option1" [disabled]="toggleSwitchDisable">Toggle 1</ux-toggleswitch>\n</div>\n<div>\n  <ux-toggleswitch [(value)]="toggleSwitches.option2">Toggle 2</ux-toggleswitch>\n</div>\n<div>\n  <ux-toggleswitch [(value)]="toggleSwitches.option3">Toggle 3</ux-toggleswitch>\n</div>\n<div class="m-t-sm">\n  <ux-toggleswitch class="toggleswitch-lg" [(value)]="toggleSwitches.option4">Large Toggle</ux-toggleswitch>\n</div>\n<p class="m-t">\n  <code>toggleSwitches.option1</code> is <em>{{toggleSwitches.option1}}</em>.\n  <code>toggleSwitches.option2</code> is <em>{{toggleSwitches.option2}}</em>.\n  <code>toggleSwitches.option3</code> is <em>{{toggleSwitches.option3}}</em>.\n  <code>toggleSwitches.option4</code> is <em>{{toggleSwitches.option4}}</em>.\n</p>\n<button class="btn button-primary m-r-xs" (click)="toggleSwitchDisable = !toggleSwitchDisable">{{toggleSwitchDisable ? \'Click to enable Toggle 1\' : \'Click to disable Toggle 1\'}}</button>\n\n<hr>\n\n<p>To create a toggle switch, use the <code>toggleswitch</code> component with the <code>value</code> attribute to bind the value. Use <code>disabled</code>\nto control the disabled state.</p>\n\n<p>The code used for the above example is shown below:</p>\n\n<tabset>\n    <tab heading="HTML">\n        <uxd-snippet [content]="snippets.compiled.appHtml"></uxd-snippet>\n    </tab>\n    <tab heading="TypeScript">\n        <uxd-snippet [content]="snippets.compiled.appTs" language="javascript"></uxd-snippet>\n    </tab>\n</tabset>\n\n<p>In an Angular application, <code>ngModel</code> may be used to bind the control to a form.</p>\n\n<table class="table">\n  <thead>\n    <tr>\n      <th>Name</th>\n      <th>Type</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><b>@Input @Output</b> value</td>\n      <td><b>boolean</b></td>\n      <td>Binding for the state of the switch; <code>true</code> for "on" and <code>false</code> for "off."</td>\n    </tr>\n    <tr>\n      <td><b>@Input</b> disabled</td>\n      <td><b>boolean</b></td>\n      <td>If this value is set to <code>true</code> then the toggle switch will be disabled. The default value is <code>false</code>.</td>\n    </tr>\n    <tr>\n      <td><b>@Input</b> clickable</td>\n      <td><b>boolean</b></td>\n      <td>If set to <code>false</code> the switch will not be updated when clicking on it, can be used if something else is updating\nthe state of the switch. The default value is <code>true</code>.</td>\n    </tr>\n  </tbody>\n</table>'},2427:function(t,e){t.exports='<div>\n    <checkbox ng-model="vm.checkModel.option1" ng-disabled="vm.disableCheck" name="checkboxOption1" simplified="vm.simplified">Option1</checkbox>\n</div>\n\n<div>\n    <checkbox ng-model="vm.checkModel.option2" indeterminate-value="vm.indeterminateValue" name="checkboxOption2" simplified="vm.simplified">Option2</checkbox>\n</div>\n\n<div>\n    <checkbox ng-model="vm.checkModel.option3" name="checkboxOption3" simplified="vm.simplified">Option3</checkbox>\n</div>\n\n<div>\n    <checkbox ng-model="vm.checkModel.option4" name="checkboxOption4" simplified="vm.simplified">Onsectetur adipiscing elit. Inte adipiscing elit onsectetur adipiscing elit. Inte adipiscing elit onsectetur adipiscing elit. Inte adipiscing elit onsectetur adipiscing elit. Inte adipiscing elit onsectetur adipiscing elit. Inte adipiscing elit onsectetur adipiscing elit.</checkbox>\n</div>\n\n<p class="m-t">\n    <code>checkModel.option1</code> is <em ng-bind="vm.checkModel.option1"></em>.\n    <code>checkModel.option2</code> is <em ng-bind="vm.checkModel.option2"></em>.\n    <code>checkModel.option3</code> is <em ng-bind="vm.checkModel.option3"></em>.\n    <code>checkModel.option4</code> is <em ng-bind="vm.checkModel.option4"></em>.\n</p>\n\n<div>\n    <button class="btn button-primary m-r-xs" \n            ng-click="vm.disableCheck = !vm.disableCheck"\n            ng-bind="vm.disableCheck ? \'Click to enable Option1\' : \'Click to disable Option1\'">\n    </button>\n\n    <button class="btn button-secondary m-r-xs" \n            ng-click="vm.checkModel.option2 = vm.indeterminateValue">\n            Set Option2 to indeterminate state\n    </button>\n\n    <button class="btn button-accent" \n            ng-click="vm.simplified = !vm.simplified"\n            ng-bind="vm.simplified ? \'Disable Simplified Style\' : \'Enable Simplified Style\'">\n    </button>\n</div>'},2428:function(t,e){t.exports="angular.module('app').controller('CheckboxDemoCtrl', CheckboxDemoCtrl);\n\nfunction CheckboxDemoCtrl() {\n    var vm = this;\n\n    vm.checkModel = {\n        option1: true,\n        option2: false,\n        option3: false,\n        option4: false\n    };\n\n    vm.simplified = false;\n    vm.indeterminateValue = -1;\n    vm.disableCheck = false;\n}"},2429:function(t,e){t.exports=".dropdown-popover {\n    z-index: 1005;\n}\n\n.dropdown-outer-container {\n    padding-top: 5px;\n    padding-bottom: 5px;\n}\n\n.dropdown-container {\n    overflow: auto;\n    width: 250px;\n}\n\n.dropdown-container table {\n    border-bottom: 1px solid #e5e5e5;\n}\n\n.dropdown-container table tbody tr td {\n    padding-bottom: 6px;\n}\n\n.dropdown-container table .check>label {\n    margin-bottom: 0px;\n}\n\n.btn-pull-right {\n    float: right;\n    margin-top: 3px;\n}\n\n.group-header {\n    font-size: 18px;\n}\n\n.dropdown-body {\n    font-size: 16px;\n}\n\n.dropdown-footer {\n    text-align: right;\n    border-top: 1px solid #e5e5e5;\n    padding: 15px 15px 6px 0;\n    margin-left: -15px;\n    margin-right: -15px;\n}\n\n.inner-addon {\n    position: relative;\n}\n\n\n/* style icon */\n\n.inner-addon .hpe-icon {\n    position: absolute;\n    padding: 10px;\n    pointer-events: none;\n}\n\n\n/* align icon */\n\n.left-addon .hpe-icon {\n    left: 0px;\n}\n\n.right-addon .hpe-icon {\n    right: 0px;\n}\n\n\n/* add padding  */\n\n.left-addon input {\n    padding-left: 30px;\n}\n\n.right-addon input {\n    padding-right: 30px;\n}"},2430:function(t,e){t.exports='<div class="row">\n    <div class="col-md-4 col-md-offset-1 col-sm-4">\n        <br/>\n        <div class="btn-group filter">\n            <button class="filter-dropdown btn popover-button dropdown-toggle" popover-class="dropdown-popover" popover-animation="false"\n                popover-template="\'template.html\'"\n                popover-placement="bottom" popover-append-to-body="false" popover-popup-delay="0">\n                Show Dropdown<span class="hpe-icon hpe-down"></span>\n            </button>\n        </div>\n        <br/>\n        <br/>\n    </div>\n</div>'},2431:function(t,e){t.exports='angular.module("app").controller("CustomDropdownCtrl", CustomDropdownCtrl);\n\nCustomDropdownCtrl.$inject = [\'$scope\', \'$timeout\'];\n\nfunction CustomDropdownCtrl($scope, $timeout) {\n    var vm = this;\n\n    vm.searchBox = true;\n    vm.searchText = "";\n    vm.footer = true;\n    vm.applyText = "OK";\n    vm.cancelText = "Cancel";\n    vm.selectAllText = "Select All";\n    vm.deselectAllText = "Deselect All";\n    vm.dropdownHeight = 500;\n\n    vm.values = {\n        groups: [{\n            groupName: "Group A",\n            values: [{\n                    name: "From",\n                    selected: false,\n                    selectedChecked: false\n                }, {\n                    name: "ID",\n                    selected: false,\n                    selectedChecked: false\n                }, {\n                    name: "From Address",\n                    selected: true,\n                    selectedChecked: true\n                }, {\n                    name: "Feedback",\n                    selected: true,\n                    selectedChecked: true\n                }, {\n                    name: "To",\n                    selected: true,\n                    selectedChecked: true\n                }, {\n                    name: "To Address",\n                    selected: false,\n                    selectedChecked: false\n                }\n\n            ]\n        }, {\n            groupName: "Group B",\n            values: [{\n                    name: "Feedback Score",\n                    selected: false,\n                    selectedChecked: false\n                }, {\n                    name: "Attachment Count",\n                    selected: false,\n                    selectedChecked: false\n                }, {\n                    name: "Comment",\n                    selected: true,\n                    selectedChecked: true\n                }, {\n                    name: "Content Length",\n                    selected: false,\n                    selectedChecked: false\n                }, {\n                    name: "Content Type",\n                    selected: false,\n                    selectedChecked: false\n                }\n\n            ]\n        }, {\n            groupName: "Group C",\n            values: [{\n                name: "Overall Sentiment",\n                selected: false,\n                selectedChecked: false\n            }, {\n                name: "Analysis",\n                selected: true,\n                selectedChecked: true\n            }, {\n                name: "Index Values",\n                selected: false,\n                selectedChecked: false\n            }, {\n                name: "Generate Report",\n                selected: true,\n                selectedChecked: true\n            }]\n        }]\n    };\n\n    vm.updateSelected = function (value) {\n        value.selected = !value.selected;\n        value.selectedChecked = value.selected;\n    };\n\n    vm.applyCallback = function () {\n        //  do processing when apply is called\n\n        $timeout(function () {\n            angular.element(\'.popover-button\').click();\n        });\n\n    };\n    vm.cancelCallback = function () {\n        //  do processing when cancel is called\n        $timeout(function () {\n            vm.inputVal = "";\n            angular.element(\'.popover-button\').click();\n        });\n\n    };\n\n    vm.selectAll = function () {\n        angular.forEach(vm.values.groups, function (group) {\n\n            angular.forEach(group.values, function (value) {\n                if (vm.searchText === undefined || vm.searchText === "" || (value.name.toLowerCase()).indexOf(vm.searchText.toLowerCase()) > -1)\n                    value.selected = true;\n            });\n        });\n    };\n\n    vm.deselectAll = function () {\n        angular.forEach(vm.values.groups, function (group) {\n            angular.forEach(group.values, function (value) {\n\n                if (vm.searchText === undefined || vm.searchText === "" || (value.name.toLowerCase()).indexOf(vm.searchText.toLowerCase()) > -1)\n                    value.selected = false;\n\n            });\n        });\n    };\n\n}'},2432:function(t,e){t.exports='<div ng-controller="CustomDropdownCtrl as vm">\n    <span ng-show="vm.searchBox">\n  <div class="inner-addon right-addon">\n    <i class="hpe-icon hpe-search"></i>\n    <input  type="text" ng-model="vm.searchText" name="searchBox"\n            placeholder="Find Column.." class="form-control">\n  </div>\n  <br/>\n  </span>\n    <div class="dropdown-outer-container">\n        <div class="dropdown-container" ng-style="{height: vm.dropdownHeight+\'px\'}" scroll-config="{autoReinitialise: true,showOnlyOnHover:true,enableKeyboardNavigation:true} "\n            scroll-pane id="example-dropdown">\n            <div>\n                <table class="table table-hover m-b-sm" ng-repeat="group in vm.values.groups">\n                    <thead>\n                        <tr ng-if="(group.values |  filter:{name:vm.searchText}).length">\n                            <th><span class="group-header" ng-bind="group.groupName"></span></th>\n                        </tr>\n                    </thead>\n                    <tbody class="dropdown-body">\n                        <tr ng-repeat="value in group.values |  filter:{name:vm.searchText}" ng-click="vm.updateSelected(value)">\n                            <td>\n                                <div class="check">\n                                    <checkbox ng-model="value.selectedChecked" simplified="true" name="value.name">\n                                        <span class="listview-text-emphasis" ng-bind="value.name"></span>\n                                    </checkbox>\n                                </div>\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    </div>\n    <div class="dropdown-footer">\n        <button type="button" class="btn btn-w-m btn-primary m-r-sm" ng-click="vm.applyCallback()" ng-bind="vm.applyText"></button>\n        <button type="button" class="btn btn-w-m btn-white" ng-click="vm.cancelCallback()" ng-bind="vm.cancelText"></button>\n    </div>\n</div>'},2433:function(t,e){t.exports='<div class="row">\n    <div class="col-md-4 col-sm-6 col-xs-12 m-t-md">\n        <textarea class="form-control" rows="1" placeholder="Enter text" expanding-textarea disable-return="true" \n                  max-visible-lines="2"></textarea>\n    </div>\n</div>'},2434:function(t,e){t.exports='<span class="inline-dropdown-text">Repeat the collection</span>\n<div class="btn-group" dropdown is-open="vm.inlineDropDownOpen">\n    <button type="button" class="btn inline-dropdown dropdown-toggle" dropdown-toggle>\n    <span ng-bind="vm.inlineDropDownOptions[vm.inlineDefaultIndex]"></span>\n    <span class="hpe-icon hpe-down"></span>\n  </button>\n    <ul class="dropdown-menu" role="menu">\n        <li ng-repeat="option in vm.inlineDropDownOptions">\n            <a href="" ng-click="vm.dropClick($index)" ng-bind="option"></a>\n        </li>\n    </ul>\n</div>'},2435:function(t,e){t.exports='angular.module("app").controller("InlineDropDownCtrl", InlineDropDownCtrl);\n\nfunction InlineDropDownCtrl() {\n    var vm = this;\n\n    vm.inlineDropDownOpen = false;\n    vm.inlineDropDownOptions = ["Every Day", "Every Week", "Every Hour", "Every Month"];\n    vm.inlineDefaultIndex = 2;\n\n    vm.dropClick = function(index) {\n        vm.inlineDefaultIndex = index;        \n    };\n}'},2436:function(t,e){t.exports='<div class="row">\n    <div ng-class="{\'col-lg-12 col-md-12 col-xs-12 col-sm-12\':vm.filterSearchExpanded==true,\'p-r-nil col-lg-2 col-md-2 col-sm-2 col-xs-11\':vm.filterSearchExpanded==false}">\n        <expand-input place-holder="Filter..." class-name="input-sm form-control filter-text" elname="input-expand-search" focus="vm.expandFilter(value)"\n            clear-text-icon="hpe-close" close-search="Cancel">\n        </expand-input>\n    </div>\n</div>'},2437:function(t,e){t.exports='angular.module("app").controller("InputExpandCtrl", InputExpandCtrl);\n\nfunction InputExpandCtrl() {\n    var vm = this;\n\n    vm.filterSearchExpanded = false;\n\n    vm.expandFilter = function(value) {\n        vm.filterSearchExpanded = value;\n    };\n\n}'},2438:function(t,e){t.exports='<div class="input-group">\n    <input type="text" class="form-control" data-mask="vm.ISBNMask" placeholder="ISBN 1"\n        aria-label="ISBN 1 13 digits only"/>\n    <span class="help-block">999-99-999-9999-9</span>\n</div>\n<div class="input-group">\n    <input type="text" class="form-control" data-mask="vm.phoneMask" placeholder="Telephone Number"\n        aria-label="Telephone number 10 digits only"/>\n    <span class="help-block">(999) 999-9999</span>\n</div>\n<div class="input-group">\n    <input type="text" class="form-control" data-mask="vm.currencyMask" placeholder="Currency"\n        aria-label="Currency 11 digits only"/>\n    <span class="help-block">$ 999,999,999.99</span>\n</div>\n<div class="input-group">\n    <input type="text" class="form-control" data-mask="vm.IPMask" placeholder="IP Address"\n        aria-label="IP address 11 or 12 digits only"/>\n    <span class="help-block">99[9].999.999.999</span>\n</div>'},2439:function(t,e){t.exports='angular.module("app").controller("InputMaskCtrl", InputMaskCtrl);\n\nfunction InputMaskCtrl() {\n    var vm = this;\n\n    vm.ISBNMask = "999-99-999-9999-9";\n    vm.phoneMask = "(999) 999-9999";\n    vm.currencyMask = "$ 999,999,999.99";\n    vm.IPMask = "99[9].999.999.999";\n}'},2440:function(t,e){t.exports=".number-picker-demo {\n    width: 70px;\n}"},2441:function(t,e){t.exports='<label>Selecting an integer:</label>\n<div>\n    <number-picker step="vm.step" min="vm.min" max="vm.max" validate="vm.validate" ng-model="vm.value1" class="number-picker-demo"></number-picker>\n</div>\n<label class="m-t-md">Selecting a decimal:</label>\n<div>\n    <number-picker step="\'0.5\'" min="\'0\'" max="\'10\'" ng-model="vm.value2" class="number-picker-demo"></number-picker>\n</div>'},2442:function(t,e){t.exports='angular.module("app").controller("NumberPickerCtrl", NumberPickerCtrl);\n\nfunction NumberPickerCtrl() {\n    var vm = this;\n\n    vm.step = 1;\n    vm.min = -10;\n    vm.max = 10;\n\n    vm.value1 = 0;\n    vm.value2 = 0;\n    \n    vm.validate = function(value) {\n      if (value % vm.step !== 0 || value.toString().indexOf(\'.\') !== -1)\n        return true;\n      else \n        return false;\n    };\n}'},2443:function(t,e){t.exports='<div>\n    <radiobutton ng-model="vm.radioModel" \n                    ng-value="vm.radioOptions.option1" \n                    ng-disabled="vm.disableRadio" \n                    name="group1" \n                    simplified="vm.simplified"\n                    id="radioOption1">\n                    Option1\n    </radiobutton>\n</div>\n\n<div>\n    <radiobutton ng-model="vm.radioModel" ng-value="vm.radioOptions.option2" name="group1" simplified="vm.simplified" id="radioOption2">Option2</radiobutton>\n</div>\n\n<div>\n    <radiobutton ng-model="vm.radioModel" ng-value="vm.radioOptions.option3" name="group1" simplified="vm.simplified" id="radioOption3">Option3</radiobutton>\n</div>\n\n<div>\n    <radiobutton ng-model="vm.radioModel" ng-value="vm.radioOptions.option4" name="group1" simplified="vm.simplified" id="radioOption4">\n        Option four onsectetur adipiscing elit. Inte adipiscing elit onsectetur adipiscing elit. Inte adipiscing elit onsectetur adipiscing elit. Inte adipiscing elit onsectetur adipiscing elit. Inte adipiscing elit onsectetur adipiscing elit. Inte adipiscing elit onsectetur adipiscing elit.\n    </radiobutton>\n</div>\n\n<p class="m-t">\n    <code>radioModel</code> is <em ng-bind="vm.radioModel"></em>.\n</p>\n\n<div>\n    <button class="btn button-primary m-r-xs" \n            ng-click="vm.disableRadio = !vm.disableRadio"\n            ng-bind="vm.disableRadio ? \'Click to enable Option1\' : \'Click to disable Option1\'">\n    </button>\n\n    <button class="btn button-accent" \n            ng-click="vm.simplified = !vm.simplified"\n            ng-bind="vm.simplified ? \'Disable Simplified Style\' : \'Enable Simplified Style\'">\n    </button>\n</div>'},2444:function(t,e){t.exports='angular.module("app").controller("RadioButtonCtrl", RadioButtonCtrl);\n\nfunction RadioButtonCtrl() {\n    var vm = this;\n\n    vm.radioModel = 100;\n\n    vm.radioOptions = {\n        option1: 100,\n        option2: "string",\n        option3: {\n            test: 1\n        },\n        option4: "Wrap-Text"\n    };\n\n    vm.disableRadio = false;\n    vm.simplified = false;\n}'},2445:function(t,e){t.exports='<div class="row">\n\n    <div class="col-md-5">\n        <slider-chart ng-model="vm.value" slider-options="vm.sliderOptions" chart-data="vm.chart.data" chart-options="vm.chart.options"></slider-chart>\n\n        <div class="col-sm-3 m-t-sm">\n            <input type="text" class="form-control m-b" ng-model="vm.value.low" ng-model-options="{ debounce: 500 }">\n        </div>\n        <div class="col-sm-offset-6 col-sm-3 m-t-sm">\n            <input type="text" class="form-control m-b" ng-model="vm.value.high" ng-model-options="{ debounce: 500 }">\n        </div>\n\n    </div>\n\n</div>'},2446:function(t,e){t.exports="angular.module('app').controller('SlidersChartsCtrl', SlidersChartsCtrl);\n\nSlidersChartsCtrl.$inject = ['$colorService'];\n\nfunction SlidersChartsCtrl($colorService) {\n\n\tvar vm = this;\n\n    var accentColor = $colorService.getColor('accent').toRgb();\t   \n\n    vm.value = {\n\t    low: 1,\n\t    high: 30\n\t};\n\n\tvm.sliderOptions = {\n\t    type: 'range',\n\t    handles: {\n\t        style: 'button',\n\t        callout: {\n\t            trigger: 'hover',\n\t            background: '#464646',\n\t            color: '#fff',\n\t            formatter: function (value) {\n\t                return value;\n\t            }\n\t        }\n\t    },\n\t    track: {\n\t        height: 'narrow',\n\t        min: 1,\n\t        max: 30,\n\t        ticks: {\n\t            snap: 'major',\n\t            major: {\n\t                show: false,\n\t                steps: 1,\n\t                labels: true,\n\t                formatter: function (value) {\n\t                    return value;\n\t                }\n\t            },\n\t            minor: {\n\t                show: false,\n\t                steps: 5,\n\t                labels: false,\n\t                formatter: function (value) {\n\t                    return value;\n\t                }\n\t            }\n\t        },\n\t        colors: {\n\t            lower: '#f2f2f2',\n\t            range: accentColor,\n\t            higher: '#f2f2f2'\n\t        }\n\t    }\n\t};\n\n    vm.chart = {\n\t    data: [{\n\t\t    label: \"line\",\n\t\t    data: [\n\t\t        [1, 34],\n\t\t        [2, 25],\n\t\t        [3, 19],\n\t\t        [4, 34],\n\t\t        [5, 32],\n\t\t        [6, 44],\n\t\t        [7, 34],\n\t\t        [8, 25],\n\t\t        [9, 19],\n\t\t        [10, 36],\n\t\t        [11, 20],\n\t\t        [12, 41],\n\t\t        [13, 34],\n\t\t        [14, 20],\n\t\t        [15, 31],\n\t\t        [16, 34],\n\t\t        [17, 32],\n\t\t        [18, 44],\n\t\t        [19, 19],\n\t\t        [20, 25],\n\t\t        [21, 19],\n\t\t        [22, 21],\n\t\t        [23, 32],\n\t\t        [24, 30],\n\t\t        [25, 34],\n\t\t        [26, 25],\n\t\t        [27, 45],\n\t\t        [28, 50],\n\t\t        [29, 55],\n\t\t        [30, 48]\n\t\t    ]\n\t\t}],\n\t\toptions: {\n\t\t    series: {\n\t\t        lines: {\n\t\t            show: true,\n\t\t            lineWidth: 0,\n\t\t            fill: true,\n\t\t            fillColor: {\n\t\t                colors: [{\n\t\t                    opacity: 0.1\n\t\t                }, {\n\t\t                    opacity: 0.3\n\t\t                }]\n\t\t            }\n\t\t        },\n\t\t        shadowSize: 0,\n\t\t        highlightColor: [accentColor],\n\t\t        forecastDashStyle: [5],\n\t\t    },\n\t\t    xaxis: {\n\t\t        show: false\n\t\t    },\n\t\t    yaxis: {\n\t\t    \tshow: false\n\t\t    }, \n\t\t    colors: [accentColor],\n\t\t    grid: {\n\t\t        borderWidth: {\n\t\t            \"left\": 0,\n\t\t            \"bottom\": 0,\n\t\t            \"right\": 0,\n\t\t            \"top\": 0\n\t\t        }\n\t\t    },\n\t\t    legend: {\n\t\t        show: false\n\t\t    },\n\t\t    tooltip: {\n\t\t        show : true,\n\t\t        snap: true,\n\t\t        shifts: {\n\t\t            x: 0,\n\t\t            y: -35\n\t\t        },\n\t\t        content: \"x: %x, y: %y\"\n\t\t    }\n\t\t}\n\t};\n    \n}"},2447:function(t,e){t.exports='<slider-chart ng-model="vm.value" slider-options="vm.sliderOptions" chart-data="vm.chart.data" chart-options="vm.chart.options"></slider-chart>'},2448:function(t,e){t.exports='<div class="container-fluid">\n\n    <div class="row">\n\n        <div class="col-md-12">\n            <h4 class="text-black p-t-md p-b-md">Single Value Sliders</h4>\n        </div>\n\n        <div class="col-md-6 p-r-md p-b-md">\n            <p class="text-black p-b-md">Button Handle - Custom Labels</p>\n            <slider ng-model="vm.slider1.value" options="vm.slider1.options"></slider>\n        </div>\n        <div class="col-md-6 p-l-md p-b-md">\n            <p class="text-black p-b-md">Line Handle - Callout on Drag</p>\n            <slider ng-model="vm.slider2.value" options="vm.slider2.options"></slider>\n        </div>\n    </div>\n\n    <hr>\n\n    <div class="row">\n\n        <div class="col-md-6 p-r-md p-b-md">\n            <p class="text-black p-b-md">Narrow - Track Styling - Snapping</p>\n            <slider ng-model="vm.slider3.value" options="vm.slider3.options"></slider>\n        </div>\n        <div class="col-md-6 p-l-md p-b-md">\n            <p class="text-black p-b-md">Narrow - Gradient Track Styling - Callout on Hover</p>\n            <slider ng-model="vm.slider4.value" options="vm.slider4.options"></slider>\n        </div>\n    </div>\n\n    <hr>\n\n    <div class="row">\n\n        <div class="col-md-12">\n            <h4 class="text-black p-t-md p-b-md">Range Value Sliders</h4>\n        </div>\n\n        <div class="col-md-6 p-r-md p-b-md">\n            <p class="text-black p-b-lg">Range Track - Persistent Callout</p>\n            <slider ng-model="vm.slider5.value" options="vm.slider5.options"></slider>\n        </div>\n        <div class="col-md-6 p-l-md p-b-md">\n            <p class="text-black p-b-lg">Range Track Style - Custom Callout Styles</p>\n            <slider ng-model="vm.slider6.value" options="vm.slider6.options"></slider>\n        </div>\n    </div>\n\n    <hr>\n\n    <div class="row">\n\n        <div class="col-md-12">\n            <h4 class="text-black p-t-md p-b-md">Range Slider with Text Inputs</h4>\n        </div>\n\n        <div class="col-md-12">\n            <slider ng-model="vm.slider7.value" options="vm.slider7.options"></slider>\n        </div>\n    </div>\n\n    <div class="row m-t-sm p-t-xs">\n        <div class="col-sm-2">\n            <input type="text" class="form-control m-b" ng-model="vm.slider7.value.low" ng-model-options="{ debounce: 500 }">\n        </div>\n        <div class="col-sm-offset-8 col-sm-2">\n            <input type="text" class="form-control m-b" ng-model="vm.slider7.value.high" ng-model-options="{ debounce: 500 }">\n        </div>\n    </div>\n\n</div>'},2449:function(t,e){t.exports="angular.module('app').controller('SlidersCtrl', SlidersCtrl);\n\nSlidersCtrl.$inject = ['$colorService'];\n\nfunction SlidersCtrl($colorService) {\n    var vm = this;\n\n    vm.slider1 = {\n        value: 50,\n        options: {\n            track: {\n                ticks: {\n                    major: {\n                        steps: [0, 50, 100],\n                        labels: true,\n                        formatter: function (value) {\n                            if (value === 0) {\n                                return 'Minimum';\n                            }\n                            if (value === 50) {\n                                return 'Default';\n                            }\n                            if (value === 100) {\n                                return 'Maximum';\n                            }\n                        }\n                    },\n                    minor: {\n                        show: false\n                    }\n                }\n            }\n        }\n    };\n\n    vm.slider2 = {\n        value: 3.8,\n        options: {\n            handles: {\n                style: 'line',\n                callout: {\n                    trigger: 'drag',\n                    formatter: function (value) {\n                        return value ? value.toFixed(1) : value;\n                    }\n                }\n            },\n            track: {\n                min: 1,\n                max: 5,\n                ticks: {\n                    major: {\n                        steps: [1, 5],\n                        labels: true\n                    },\n                    minor: {\n                        steps: 1,\n                        labels: false\n                    }\n                }\n            }\n        }\n    };\n\n    vm.slider3 = {\n        value: 4,\n        options: {\n            track: {\n                min: 0,\n                max: 5,\n                height: 'narrow',\n                ticks: {\n                    snap: 'all',\n                    major: {\n                        steps: 5,\n                        labels: true\n                    },\n                    minor: {\n                        steps: 1,\n                        labels: true\n                    }\n                },\n                colors: {\n                    lower: $colorService.getColor('accent').toHex()\n                }\n            }\n        }\n    };\n\n    vm.slider4 = {\n        value: 60,\n        options: {\n            handles: {\n                style: 'line',\n                callout: {\n                    trigger: 'hover',\n                    formatter: function (value) {\n                        return value ? parseInt(value) : value;\n                    }\n                }\n            },\n            track: {\n                height: 'narrow',\n                ticks: {\n                    major: {\n                        steps: 50\n                    },\n                    minor: {\n                        steps: 10\n                    }\n                },\n                colors: {\n                    higher: ['#fdf690', '#f14a50']\n                }\n            }\n        }\n    };\n\n    vm.slider5 = {\n        value: {\n            low: 1234,\n            high: 9876\n        },\n        options: {\n            type: 'range',\n            handles: {\n                callout: {\n                    trigger: 'persistent',\n                    formatter: function (value) {\n                        return value ? parseInt(value) : value;\n                    }\n                }\n            },\n            track: {\n                height: 'narrow',\n                min: 1000,\n                max: 10000,\n                ticks: {\n                    major: {\n                        show: false\n                    },\n                    minor: {\n                        show: false\n                    }\n                },\n                colors: {\n                    range: $colorService.getColor('accent').toHex()\n                }\n            }\n        }\n    };\n\n    vm.slider6 = {\n        value: {\n            low: 22,\n            high: 76\n        },\n        options: {\n            type: 'range',\n            handles: {\n                style: 'line',\n                callout: {\n                    trigger: 'hover',\n                    background: $colorService.getColor('accent').toHex(),\n                    formatter: function (value) {\n                        return value ? parseInt(value) : value;\n                    }\n                }\n            },\n            track: {\n                height: 'narrow',\n                ticks: {\n                    major: {\n                        steps: 25\n                    },\n                    minor: {\n                        steps: 5\n                    }\n                },\n                colors: {\n                    range: $colorService.getColor('alternate1').toHex()\n                }\n            }\n        }\n    };\n\n    vm.slider7 = {\n        value: {\n            low: 25,\n            high: 75\n        },\n        options: {\n            type: 'range',\n            handles: {\n                style: 'line',\n                callout: {\n                    trigger: 'hover',\n                    background: $colorService.getColor('accent').toHex(),\n                    formatter: function (value) {\n                        return value ? parseInt(value) : value;\n                    }\n                }\n            },\n            track: {\n                ticks: {\n                    snap: 'all',\n                    major: {\n                        steps: 25\n                    },\n                    minor: {\n                        steps: 5\n                    }\n                },\n                colors: {\n                    range: $colorService.getColor('accent').toHex()\n                }\n            }\n        }\n    };\n}"},2450:function(t,e){t.exports='<slider ng-model="vm.value" options="vm.options"></slider>'},2451:function(t,e){t.exports="vm.value = 50;"},2452:function(t,e){t.exports='<slider ng-model="vm.value" options="vm.options"></slider>\n<input type="text" class="form-control m-b" ng-model="vm.value" ng-model-options="{ debounce: 500 }">'},2453:function(t,e){t.exports="vm.value = {\n    low: 25,\n    high: 75\n};"},2454:function(t,e){t.exports="vm.options = {\n    type: 'value',\n    handles: {\n        style: 'button',\n        callout: {\n            trigger: 'none',\n            background: '#464646',\n            color: '#fff',\n            formatter: function (value) {\n                return value;\n            }\n        }\n    },\n    track: {\n        height: 'wide',\n        min: 0,\n        max: 100,\n        ticks: {\n            snap: 'none',\n            major: {\n                show: true,\n                steps: 10,\n                labels: true,\n                formatter: function (value) {\n                    return value;\n                }\n            },\n            minor: {\n                show: true,\n                steps: 5,\n                labels: false,\n                formatter: function (value) {\n                    return value;\n                }\n            }\n        },\n        colors: {\n            lower: '#f2f2f2',\n            range: '#7b63a3',\n            higher: '#f2f2f2'\n        }\n    }\n};"},2455:function(t,e){t.exports='<tag-input tags="vm.tags2" full-tag-set="vm.tagSet" options="vm.demoOptions2"></tag-input>'},2456:function(t,e){t.exports='vm.tags2 = [];\n\nvm.tagSet = ["Red", "Orange", "Yellow", "Green", "Blue", "Indigo", "Violet"];\n\nvm.demoOptions2 = {\n    placeholder: "Add tag",\n    autocomplete: {\n        addFromAutocompleteOnly:true\n    }\n};'},2457:function(t,e){t.exports='<div class="row m-b-sm">\n    <div class="col-sm-6">\n        <tag-input tags="vm.tags" options="vm.demoOptions1" api="vm.demoApi"></tag-input>\n    </div>\n</div>\n<div>\n    <span>Current Tags</span>\n    <pre>{{vm.tags}}</pre>\n</div>'},2458:function(t,e){t.exports='angular.module(\'app\').controller(\'TagsCtrl\', TagsCtrl);\n\nfunction TagsCtrl() {\n    var vm = this;\n\n    vm.tags = ["Redundant", "Trivial", "Obsolete", "Deletion Scheduled", "SharePoint 2007 Repository"];\n    vm.tags2 = [];\n    vm.tags3 = [];\n\n    vm.tagSet = ["Red", "Orange", "Yellow", "Green", "Blue", "Indigo", "Violet"];\n\n    vm.people = [];\n    vm.posts = [\'Labs\', \'Finance\', \'Auditing\', \'Technical\', \'Investor Relations\', \'Operations\'];\n    for (var i = 0; i < 20; i++) {\n        var names = chance.name();\n        var email = names.toLowerCase().replace(" ", ".");\n\n        vm.people.push({\n            name: names,\n            email: email + \'@business.com\',\n            position: vm.posts[Math.floor(Math.random() * vm.posts.length)]\n        });\n    }\n\n    vm.demoOptions1 = {\n        placeholder: "Add tag",\n        maxNumberTags: 8,\n        maxTagsMessage: "Maximum number of tags has been added"\n    };\n\n    vm.demoApi = {\n        onTagAdding: function () {\n            if (vm.tags.length >= vm.demoOptions1.maxNumberTags) {\n                return false;\n            }\n            return true;\n        },\n\n        onTagRemoving: function () {\n            return true;\n        }\n    };\n\n    vm.demoOptions2 = {\n        placeholder: "Add tag",\n        autocomplete: {\n            addFromAutocompleteOnly: true\n        }\n    };\n\n    vm.demoOptions3 = {\n        placeholder: "Add tag",\n        format: {\n            display: "name",\n            key: "name"\n        },\n        autocomplete: {\n            addFromAutocompleteOnly: true,\n            template: "directives/tagInput/customAutocompleteTemplate.html",\n            minLength: 1,\n            source: function ($query) {\n                return vm.people.filter(function (person) {\n                    return person.name.toLowerCase().indexOf($query.toLowerCase()) !== -1;\n                });\n            }\n        }\n    };\n}'},2459:function(t,e){t.exports='<tag-input tags="vm.tags3" options="vm.demoOptions3"></tag-input>'},2460:function(t,e){t.exports="vm.tags3 = [];\n\nvm.people = [];\nvm.posts = ['Labs', 'Finance', 'Auditing', 'Technical', 'Investor Relations', 'Operations'];\n\nfor(var i = 0; i<20; i++) {\n    //generating dummy data\n    var names = chance.name();\n    var email = names.toLowerCase().replace(\" \", \".\");\n    \n    vm.people.push({\n        name: names,\n        email: email + '@business.com',\n        position: vm.posts[Math.floor(Math.random() * vm.posts.length)]\n    });\n}\n\nvm.demoOptions3 = {\n    placeholder: \"Add tag\",\n    format: {\n        display: \"name\",\n        key: \"name\"\n    },\n    autocomplete: {\n        addFromAutocompleteOnly: true,\n        template: \"directives/tagInput/customAutocompleteTemplate.html\",\n        minLength: 1,\n        source: function($query) {\n            return vm.people.filter(function(person) {\n                return person.name.toLowerCase().indexOf($query.toLowerCase()) !== -1;\n            });\n        }\n    }\n};"},2461:function(t,e){t.exports='<tag-input tags="vm.tags" options="vm.demoOptions1" api="vm.demoApi"></tag-input>'},2462:function(t,e){t.exports='vm.tags = ["Redundant", "Trivial", "Obsolete", "Deletion Scheduled", "SharePoint 2007 Repository" ];\nvm.tags2 = [];\n\nvm.demoOptions1 = {\n    placeholder : "Add tag",\n    maxNumberTags: 8,\n    maxTagsMessage: "Maximum number of tags has been added"\n};\n\nvm.demoApi = {\n    onTagAdding: function(tag){\n        if(vm.tags.length >= vm.demoOptions1.maxNumberTags) {\n            return false;\n        }\n        return true;\n    },\n    onTagRemoving: function(tag) {\n        return true;\n    }\n};'},2463:function(t,e){t.exports='.toggleswitch-custom .el-toggleswitch > .el-toggleswitch-bg {\n    /* This is the color of the background in the unchecked state. */ \n    background-color: #ebebeb;\n    /* These three properties are used to "shrink" the default rounded backdrop. */\n    box-sizing: border-box;\n    background-clip: content-box;\n    border: 2px solid transparent;\n    /* The new animation for the background. */\n    transition: background-color 0.3s;\n}\n\n.toggleswitch-custom .el-toggleswitch.checked > .el-toggleswitch-bg {\n    /* This is the color of the background in the checked state. */ \n    background-color: #9dd4a1;\n    /* The default control uses box-shadow to create the animation, so remove that. */\n    box-shadow: none;\n    /* The default control changes the border, so override that. */\n    border: 2px solid transparent;\n    /* The default control has a slightly different animation for unchecking, so override that. */\n    transition: background-color 0.3s;\n}\n\n.toggleswitch-custom .el-toggleswitch > .el-toggleswitch-nub {\n    /* This is the color of the switch in the unchecked state. */ \n    background-color: #fff;\n    /* Remove the border. */\n    border: 0;\n    /* Create a dropshadow. */\n    box-shadow: 0px 1px 4px 1px rgba(0, 0, 0, 0.3);\n    /* Add a color transition to the switch as well as the slide animation. */\n    transition: background-color 0.3s, left 0.15s;\n}\n\n.toggleswitch-custom .el-toggleswitch.checked > .el-toggleswitch-nub {\n    /* This is the color of the switch in the checked state. */ \n    background-color: #fff;\n}'},2464:function(t,e){t.exports='<div>\n    <toggleswitch ng-model="vm.toggleSwitches.option1" ng-disabled="vm.toggleSwitchDisable">Toggle 1</toggleswitch>\n</div>\n<div>\n    <toggleswitch ng-model="vm.toggleSwitches.option2">Toggle 2</toggleswitch>\n</div>\n<div>\n    <toggleswitch ng-model="vm.toggleSwitches.option3">Toggle 3</toggleswitch>\n</div>\n<div class="m-t-sm">\n    <toggleswitch class="toggleswitch-lg" ng-model="vm.toggleSwitches.option4">Large Toggle</toggleswitch>\n</div>\n<p class="m-t">\n    <code>toggleSwitches.option1</code> is <em ng-bind="vm.toggleSwitches.option1"></em>.\n    <code>toggleSwitches.option2</code> is <em ng-bind="vm.toggleSwitches.option2"></em>.\n    <code>toggleSwitches.option3</code> is <em ng-bind="vm.toggleSwitches.option3"></em>.\n    <code>toggleSwitches.option4</code> is <em ng-bind="vm.toggleSwitches.option4"></em>.\n</p>\n<button class="btn button-primary m-r-xs" ng-click="vm.toggleSwitchDisable = !vm.toggleSwitchDisable" ng-bind="vm.toggleSwitchDisable ? \'Click to enable Toggle 1\' : \'Click to disable Toggle 1\'"></button>\n<hr>\n<div>\n    <toggleswitch class="toggleswitch-custom" ng-model="vm.toggleSwitches.option5">Custom Toggle</toggleswitch>\n</div>'},2465:function(t,e){t.exports="angular.module('app').controller('ToggleSwitchDemoCtrl', ToggleSwitchDemoCtrl);\n\nfunction ToggleSwitchDemoCtrl() {\n    var vm = this;\n\n    vm.toggleSwitches = {\n        option1: true,\n        option2: false,\n        option3: false,\n        option4: false,\n        option5: false\n    };\n    vm.toggleSwitchDisable = false;\n}"},2466:function(t,e){t.exports='<toggleswitch ng-model="vm.toggleSwitches.option1" ng-disabled="vm.toggleSwitchDisable">Toggle 1</toggleswitch>'},2467:function(t,e){t.exports='<toggleswitch class="toggleswitch-lg" ng-model="vm.toggleSwitches.option4">Large Toggle</toggleswitch>'},2468:function(t,e){t.exports='<toggleswitch class="toggleswitch-custom" ng-model="vm.toggleSwitches.option5">Custom Toggle</toggleswitch>'}});
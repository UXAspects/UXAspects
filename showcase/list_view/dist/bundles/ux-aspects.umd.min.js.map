{"version":3,"file":"ux-aspects.umd.min.js","sources":["../../../../node_modules/.tmp/timepicker/timepicker.utils.ts","../../../../node_modules/.tmp/timepicker/timepicker-controls.util.ts","../../../../node_modules/.tmp/timepicker/reducer/timepicker.reducer.ts","../../../../node_modules/src/util/tryCatch.ts","../../../../node_modules/src/Subscription.ts","~/@ux-aspects/ux-aspects/components/date-time-picker/date-time-picker.utils.ts","../../../../node_modules/.tmp/utils/theme-provider.ts","../../../../node_modules/.tmp/utils/triggers.ts","../../../../node_modules/.tmp/positioning/positioning.service.ts","../../../../node_modules/.tmp/utils/warn-once.ts","../../../../node_modules/.tmp/typeahead/typeahead-utils.ts","~/@ux-aspects/ux-aspects/components/breadcrumbs/breadcrumbs.component.ts","~/@ux-aspects/ux-aspects/components/breadcrumbs/breadcrumbs.module.ts","~/@ux-aspects/ux-aspects/components/checkbox/checkbox.component.ts","~/@ux-aspects/ux-aspects/components/checkbox/checkbox.module.ts","~/@ux-aspects/ux-aspects/components/column-sorting/column-sorting.component.ts","~/@ux-aspects/ux-aspects/components/column-sorting/column-sorting.directive.ts","~/@ux-aspects/ux-aspects/components/column-sorting/column-sorting.module.ts","~/@ux-aspects/ux-aspects/components/dashboard/dashboard.service.ts","~/@ux-aspects/ux-aspects/components/dashboard/dashboard.component.ts","~/@ux-aspects/ux-aspects/components/dashboard/widget/dashboard-widget.component.ts","~/@ux-aspects/ux-aspects/components/dashboard/drag-handle/drag-handle.directive.ts","~/@ux-aspects/ux-aspects/directives/resize/resize.service.ts","~/@ux-aspects/ux-aspects/directives/resize/resize.directive.ts","~/@ux-aspects/ux-aspects/directives/resize/resize.module.ts","~/@ux-aspects/ux-aspects/components/dashboard/dashboard.module.ts","../../../../node_modules/.tmp/timepicker/reducer/timepicker.actions.ts","../../../../node_modules/.tmp/timepicker/timepicker.config.ts","../../../../node_modules/.tmp/mini-ngrx/store.class.ts","../../../../node_modules/src/util/root.ts","../../../../node_modules/src/util/isArray.ts","../../../../node_modules/src/util/isObject.ts","../../../../node_modules/src/util/isFunction.ts","../../../../node_modules/src/util/errorObject.ts","../../../../node_modules/src/util/UnsubscriptionError.ts","../../../../node_modules/src/scheduler/Action.ts","../../../../node_modules/src/scheduler/AsyncAction.ts","../../../../node_modules/src/scheduler/QueueAction.ts","../../../../node_modules/src/Scheduler.ts","../../../../node_modules/src/scheduler/AsyncScheduler.ts","../../../../node_modules/src/scheduler/queue.ts","../../../../node_modules/src/scheduler/QueueScheduler.ts","../../../../node_modules/.tmp/mini-ngrx/state.class.ts","../../../../node_modules/.tmp/timepicker/reducer/timepicker.store.ts","../../../../node_modules/.tmp/timepicker/timepicker.component.ts","../../../../node_modules/.tmp/timepicker/timepicker.module.ts","../../../../node_modules/.tmp/buttons/button-checkbox.directive.ts","../../../../node_modules/.tmp/buttons/button-radio.directive.ts","../../../../node_modules/.tmp/buttons/buttons.module.ts","~/@ux-aspects/ux-aspects/components/date-time-picker/date-time-picker.config.ts","~/@ux-aspects/ux-aspects/components/date-time-picker/date-time-picker.service.ts","~/@ux-aspects/ux-aspects/components/date-time-picker/date-time-picker.component.ts","~/@ux-aspects/ux-aspects/components/date-time-picker/day-view/day-view.component.ts","~/@ux-aspects/ux-aspects/components/date-time-picker/month-view/month-view.component.ts","~/@ux-aspects/ux-aspects/components/date-time-picker/year-view/year-view.component.ts","~/@ux-aspects/ux-aspects/components/date-time-picker/header/header.component.ts","~/@ux-aspects/ux-aspects/components/date-time-picker/time-view/time-view.component.ts","~/@ux-aspects/ux-aspects/components/date-time-picker/date-time-picker.module.ts","~/@ux-aspects/ux-aspects/components/ebox/ebox.component.ts","~/@ux-aspects/ux-aspects/components/ebox/ebox.module.ts","../../../../node_modules/.tmp/tooltip/tooltip.config.ts","../../../../node_modules/.tmp/utils/facade/browser.ts","../../../../node_modules/.tmp/tooltip/tooltip-container.component.ts","../../../../node_modules/.tmp/utils/trigger.class.ts","../../../../node_modules/.tmp/component-loader/content-ref.class.ts","../../../../node_modules/.tmp/component-loader/component-loader.class.ts","../../../../node_modules/.tmp/positioning/ng-positioning.ts","../../../../node_modules/.tmp/component-loader/component-loader.factory.ts","../../../../node_modules/.tmp/tooltip/tooltip.directive.ts","../../../../node_modules/.tmp/utils/decorators.ts","../../../../node_modules/.tmp/tooltip/tooltip.module.ts","../../../../node_modules/.tmp/typeahead/latin-map.ts","../../../../node_modules/.tmp/typeahead/typeahead-match.class.ts","../../../../node_modules/.tmp/utils/utils.class.ts","../../../../node_modules/.tmp/typeahead/typeahead-container.component.ts","../../../../node_modules/.tmp/typeahead/typeahead.directive.ts","../../../../node_modules/.tmp/typeahead/typeahead.module.ts","~/@ux-aspects/ux-aspects/components/facets/facet-events.ts","~/@ux-aspects/ux-aspects/components/facets/facet-container.component.ts","~/@ux-aspects/ux-aspects/components/facets/base/facet-base/facet-base.component.ts","~/@ux-aspects/ux-aspects/components/facets/base/facet-header/facet-header.component.ts","~/@ux-aspects/ux-aspects/components/facets/facet-check-list/facet-check-list.component.ts","~/@ux-aspects/ux-aspects/components/facets/facet-typeahead-list/facet-typeahead-list.component.ts","~/@ux-aspects/ux-aspects/components/facets/facets.module.ts","~/@ux-aspects/ux-aspects/components/facets/models/facet.ts","../../../../node_modules/.tmp/dropdown/bs-dropdown.config.ts","../../../../node_modules/.tmp/dropdown/bs-dropdown.state.ts","../../../../node_modules/.tmp/dropdown/bs-dropdown-container.component.ts","../../../../node_modules/.tmp/dropdown/bs-dropdown.directive.ts","../../../../node_modules/.tmp/dropdown/bs-dropdown-menu.directive.ts","../../../../node_modules/.tmp/dropdown/bs-dropdown-toggle.directive.ts","../../../../node_modules/.tmp/dropdown/bs-dropdown.module.ts","~/@ux-aspects/ux-aspects/components/filters/filter-container.component.ts","~/@ux-aspects/ux-aspects/components/filters/filter-base/filter-base.component.ts","~/@ux-aspects/ux-aspects/components/filters/filter-dynamic/filter-dynamic.component.ts","~/@ux-aspects/ux-aspects/components/filters/filter-dropdown/filter-dropdown.component.ts","~/@ux-aspects/ux-aspects/components/filters/filter.module.ts","~/@ux-aspects/ux-aspects/components/flippable-card/flippable-card.component.ts","~/@ux-aspects/ux-aspects/components/flippable-card/flippable-card.module.ts","~/@ux-aspects/ux-aspects/components/item-display-panel/item-display-panel.component.ts","~/@ux-aspects/ux-aspects/components/item-display-panel/item-display-panel.module.ts","~/@ux-aspects/ux-aspects/components/number-picker/number-picker.component.ts","~/@ux-aspects/ux-aspects/components/number-picker/number-picker.module.ts","~/@ux-aspects/ux-aspects/components/page-header/custom-menu/custom-menu.directive.ts","~/@ux-aspects/ux-aspects/components/page-header/page-header.component.ts","~/@ux-aspects/ux-aspects/components/page-header/icon-menu/icon-menu.component.ts","~/@ux-aspects/ux-aspects/components/page-header/navigation/navigation-dropdown-item/navigation-dropdown-item.component.ts","~/@ux-aspects/ux-aspects/components/page-header/navigation/navigation-item/navigation-item.component.ts","~/@ux-aspects/ux-aspects/components/page-header/navigation/navigation.component.ts","~/@ux-aspects/ux-aspects/components/page-header/page-header.module.ts","~/@ux-aspects/ux-aspects/services/color/color.service.ts","~/@ux-aspects/ux-aspects/services/color/color.module.ts","~/@ux-aspects/ux-aspects/components/progress-bar/progress-bar.component.ts","~/@ux-aspects/ux-aspects/components/progress-bar/progress-bar.module.ts","~/@ux-aspects/ux-aspects/components/radiobutton/radiobutton.component.ts","~/@ux-aspects/ux-aspects/components/radiobutton/radiobutton.module.ts","~/@ux-aspects/ux-aspects/components/search-builder/search-builder.service.ts","~/@ux-aspects/ux-aspects/components/search-builder/search-builder-group/search-builder-group.service.ts","~/@ux-aspects/ux-aspects/components/search-builder/search-builder-group/search-builder-group.component.ts","~/@ux-aspects/ux-aspects/components/search-builder/search-builder-outlet/search-builder-outlet.directive.ts","~/@ux-aspects/ux-aspects/components/search-builder/search-components/base-search.component.ts","~/@ux-aspects/ux-aspects/components/search-builder/search-components/text/text.component.ts","~/@ux-aspects/ux-aspects/components/search-builder/search-components/date/date.component.ts","~/@ux-aspects/ux-aspects/components/search-builder/search-components/date-range/date-range.component.ts","~/@ux-aspects/ux-aspects/components/search-builder/search-components/select/select.component.ts","~/@ux-aspects/ux-aspects/components/search-builder/search-builder.component.ts","../../../../node_modules/.tmp/popover/popover.config.ts","../../../../node_modules/.tmp/popover/popover-container.component.ts","../../../../node_modules/.tmp/popover/popover.directive.ts","../../../../node_modules/.tmp/popover/popover.module.ts","~/@ux-aspects/ux-aspects/components/typeahead/typeahead-event.ts","~/@ux-aspects/ux-aspects/components/typeahead/typeahead-key.service.ts","~/@ux-aspects/ux-aspects/components/typeahead/typeahead.component.ts","~/@ux-aspects/ux-aspects/directives/infinite-scroll/infinite-scroll-load-button.directive.ts","~/@ux-aspects/ux-aspects/directives/infinite-scroll/infinite-scroll-loading.directive.ts","~/@ux-aspects/ux-aspects/directives/infinite-scroll/infinite-scroll.directive.ts","~/@ux-aspects/ux-aspects/directives/infinite-scroll/infinite-scroll.module.ts","~/@ux-aspects/ux-aspects/directives/scroll-into-view-if/scroll-into-view.service.ts","~/@ux-aspects/ux-aspects/directives/scroll-into-view-if/scroll-into-view-if.directive.ts","~/@ux-aspects/ux-aspects/directives/scroll-into-view-if/scroll-into-view-if.module.ts","~/@ux-aspects/ux-aspects/components/typeahead/typeahead.module.ts","~/@ux-aspects/ux-aspects/components/select/select.component.ts","~/@ux-aspects/ux-aspects/components/tag-input/tag-input-event.ts","~/@ux-aspects/ux-aspects/components/tag-input/tag-input.component.ts","~/@ux-aspects/ux-aspects/directives/focus-if/focus-if.directive.ts","~/@ux-aspects/ux-aspects/directives/focus-if/focus-if.module.ts","~/@ux-aspects/ux-aspects/components/tag-input/tag-input.module.ts","~/@ux-aspects/ux-aspects/components/select/select.module.ts","~/@ux-aspects/ux-aspects/components/search-builder/search-builder.module.ts","~/@ux-aspects/ux-aspects/components/slider/slider.component.ts","~/@ux-aspects/ux-aspects/components/slider/slider.module.ts","~/@ux-aspects/ux-aspects/components/spark/spark.component.ts","~/@ux-aspects/ux-aspects/components/spark/spark.module.ts","~/@ux-aspects/ux-aspects/components/toggleswitch/toggleswitch.component.ts","~/@ux-aspects/ux-aspects/components/toggleswitch/toggleswitch.module.ts","~/@ux-aspects/ux-aspects/services/frame-extraction/frame-extraction.service.ts","~/@ux-aspects/ux-aspects/services/frame-extraction/frame-extraction.module.ts","~/@ux-aspects/ux-aspects/components/media-player/media-player.service.ts","~/@ux-aspects/ux-aspects/services/audio/audio.service.ts","~/@ux-aspects/ux-aspects/services/audio/audio.module.ts","~/@ux-aspects/ux-aspects/components/media-player/media-player.component.ts","~/@ux-aspects/ux-aspects/components/media-player/extensions/base-extension.directive.ts","~/@ux-aspects/ux-aspects/components/media-player/extensions/timeline/timeline.component.ts","~/@ux-aspects/ux-aspects/components/media-player/extensions/controls/controls.component.ts","~/@ux-aspects/ux-aspects/pipes/duration/duration.pipe.ts","~/@ux-aspects/ux-aspects/pipes/duration/duration.module.ts","~/@ux-aspects/ux-aspects/pipes/file-size/file-size.pipe.ts","~/@ux-aspects/ux-aspects/pipes/file-size/file-size.module.ts","~/@ux-aspects/ux-aspects/components/media-player/media-player.module.ts","~/@ux-aspects/ux-aspects/components/virtual-scroll/directives/virtual-scroll-loading.directive.ts","~/@ux-aspects/ux-aspects/components/virtual-scroll/directives/virtual-scroll-load-button.directive.ts","~/@ux-aspects/ux-aspects/components/virtual-scroll/directives/virtual-scroll-cell.directive.ts","~/@ux-aspects/ux-aspects/components/virtual-scroll/virtual-scroll.component.ts","~/@ux-aspects/ux-aspects/components/virtual-scroll/virtual-scroll.module.ts","~/@ux-aspects/ux-aspects/components/wizard/wizard-step.component.ts","~/@ux-aspects/ux-aspects/components/wizard/wizard.component.ts","~/@ux-aspects/ux-aspects/components/wizard/wizard.module.ts","~/@ux-aspects/ux-aspects/directives/help-center/help-center.service.ts","~/@ux-aspects/ux-aspects/directives/help-center/help-center-item.directive.ts","~/@ux-aspects/ux-aspects/directives/help-center/help-center.module.ts","~/@ux-aspects/ux-aspects/directives/hover-action/hover-action.service.ts","~/@ux-aspects/ux-aspects/directives/hover-action/hover-action-container.directive.ts","~/@ux-aspects/ux-aspects/directives/hover-action/hover-action.directive.ts","~/@ux-aspects/ux-aspects/directives/hover-action/hover-action.module.ts","~/@ux-aspects/ux-aspects/directives/layout-switcher/layout-switcher-item.directive.ts","~/@ux-aspects/ux-aspects/directives/layout-switcher/layout-switcher.directive.ts","~/@ux-aspects/ux-aspects/directives/layout-switcher/layout-switcher.module.ts","~/@ux-aspects/ux-aspects/pipes/string-filter/string-filter.pipe.ts","~/@ux-aspects/ux-aspects/pipes/string-filter/string-filter.module.ts","~/@ux-aspects/ux-aspects/services/persistent-data/adapters/cookie-adapter.ts","~/@ux-aspects/ux-aspects/services/persistent-data/adapters/local-storage-adapter.ts","~/@ux-aspects/ux-aspects/services/persistent-data/adapters/session-storage-adapter.ts","~/@ux-aspects/ux-aspects/services/persistent-data/persistent-data.service.ts","~/@ux-aspects/ux-aspects/services/persistent-data/persistent-data.module.ts","~/@ux-aspects/ux-aspects/services/persistent-data/adapters/storage-adapter.ts"],"sourcesContent":["import { Time } from './timepicker.models';\n\nconst dex = 10;\nconst hoursPerDay = 24;\nconst hoursPerDayHalf = 12;\nconst minutesPerHour = 60;\nconst secondsPerMinute = 60;\n\nexport function isValidDate(value?: string | Date): boolean {\n  if (!value) {\n    return false;\n  }\n\n  if (value instanceof Date && isNaN(value.getHours())) {\n    return false;\n  }\n\n  if (typeof value === 'string') {\n    return isValidDate(new Date(value));\n  }\n\n  return true;\n}\n\nexport function toNumber(value: string | number): number {\n  if (typeof value === 'number') {\n    return value;\n  }\n\n  return parseInt(value, dex);\n}\n\nexport function isNumber(value: string): boolean {\n  return !isNaN(toNumber(value));\n}\n\nexport function parseHours(\n  value: string | number,\n  isPM = false\n): number {\n  const hour = toNumber(value);\n  if (\n    isNaN(hour) ||\n    hour < 0 ||\n    hour > (isPM ? hoursPerDayHalf : hoursPerDay)\n  ) {\n    return NaN;\n  }\n\n  return hour;\n}\n\nexport function parseMinutes(value: string | number): number {\n  const minute = toNumber(value);\n  if (isNaN(minute) || minute < 0 || minute > minutesPerHour) {\n    return NaN;\n  }\n\n  return minute;\n}\n\nexport function parseSeconds(value: string | number): number {\n  const seconds = toNumber(value);\n  if (isNaN(seconds) || seconds < 0 || seconds > secondsPerMinute) {\n    return NaN;\n  }\n\n  return seconds;\n}\n\nexport function parseTime(value: string | Date): Date {\n  if (typeof value === 'string') {\n    return new Date(value);\n  }\n\n  return value;\n}\n\nexport function changeTime(value: Date, diff: Time): Date {\n  if (!value) {\n    return changeTime(createDate(new Date(), 0, 0, 0), diff);\n  }\n\n  let hour = value.getHours();\n  let minutes = value.getMinutes();\n  let seconds = value.getSeconds();\n\n  if (diff.hour) {\n    hour = (hour + toNumber(diff.hour)) % hoursPerDay;\n    if (hour < 0) {\n      hour += hoursPerDay;\n    }\n  }\n\n  if (diff.minute) {\n    minutes = minutes + toNumber(diff.minute);\n  }\n\n  if (diff.seconds) {\n    seconds = seconds + toNumber(diff.seconds);\n  }\n\n  return createDate(value, hour, minutes, seconds);\n}\n\nexport function setTime(value: Date, opts: Time): Date {\n  let hour = parseHours(opts.hour);\n  const minute = parseMinutes(opts.minute);\n  const seconds = parseSeconds(opts.seconds) || 0;\n\n  if (opts.isPM) {\n    hour += hoursPerDayHalf;\n  }\n\n  // fixme: unreachable code, value is mandatory\n  if (!value) {\n    if (!isNaN(hour) && !isNaN(minute)) {\n      return createDate(new Date(), hour, minute, seconds);\n    }\n\n    return value;\n  }\n\n  if (isNaN(hour) || isNaN(minute)) {\n    return value;\n  }\n\n  return createDate(value, hour, minute, seconds);\n}\n\nexport function createDate(\n  value: Date,\n  hours: number,\n  minutes: number,\n  seconds: number\n): Date {\n  // fixme: unreachable code, value is mandatory\n  const _value = value || new Date();\n\n  return new Date(\n    _value.getFullYear(),\n    _value.getMonth(),\n    _value.getDate(),\n    hours,\n    minutes,\n    seconds,\n    _value.getMilliseconds()\n  );\n}\n\nexport function padNumber(value: number): string {\n  const _value = value.toString();\n  if (_value.length > 1) {\n    return _value;\n  }\n\n  return `0${_value}`;\n}\n\nexport function isInputValid(\n  hours: string,\n  minutes: string,\n  seconds = '0',\n  isPM: boolean\n): boolean {\n  return !(isNaN(parseHours(hours, isPM))\n    || isNaN(parseMinutes(minutes))\n    || isNaN(parseSeconds(seconds)));\n}\n","import { changeTime } from './timepicker.utils';\nimport {\n  TimeChangeEvent,\n  TimepickerComponentState,\n  TimepickerControls\n} from './timepicker.models';\n\nexport function canChangeValue(\n  state: TimepickerComponentState,\n  event?: TimeChangeEvent\n): boolean {\n  if (state.readonlyInput) {\n    return false;\n  }\n\n  if (event) {\n    if (event.source === 'wheel' && !state.mousewheel) {\n      return false;\n    }\n\n    if (event.source === 'key' && !state.arrowkeys) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nexport function canChangeHours(\n  event: TimeChangeEvent,\n  controls: TimepickerControls\n): boolean {\n  if (!event.step) {\n    return false;\n  }\n\n  if (event.step > 0 && !controls.canIncrementHours) {\n    return false;\n  }\n\n  if (event.step < 0 && !controls.canDecrementHours) {\n    return false;\n  }\n\n  return true;\n}\n\nexport function canChangeMinutes(\n  event: TimeChangeEvent,\n  controls: TimepickerControls\n): boolean {\n  if (!event.step) {\n    return false;\n  }\n  if (event.step > 0 && !controls.canIncrementMinutes) {\n    return false;\n  }\n  if (event.step < 0 && !controls.canDecrementMinutes) {\n    return false;\n  }\n\n  return true;\n}\n\nexport function canChangeSeconds(\n  event: TimeChangeEvent,\n  controls: TimepickerControls\n): boolean {\n  if (!event.step) {\n    return false;\n  }\n  if (event.step > 0 && !controls.canIncrementSeconds) {\n    return false;\n  }\n  if (event.step < 0 && !controls.canDecrementSeconds) {\n    return false;\n  }\n\n  return true;\n}\n\nexport function getControlsValue(\n  state: TimepickerComponentState\n): TimepickerComponentState {\n  const {\n    hourStep,\n    minuteStep,\n    secondsStep,\n    readonlyInput,\n    mousewheel,\n    arrowkeys,\n    showSpinners,\n    showMeridian,\n    showSeconds,\n    meridians,\n    min,\n    max\n  } = state;\n\n  return {\n    hourStep,\n    minuteStep,\n    secondsStep,\n    readonlyInput,\n    mousewheel,\n    arrowkeys,\n    showSpinners,\n    showMeridian,\n    showSeconds,\n    meridians,\n    min,\n    max\n  };\n}\n\nexport function timepickerControls(\n  value: Date,\n  state: TimepickerComponentState\n): TimepickerControls {\n  const { min, max, hourStep, minuteStep, secondsStep, showSeconds } = state;\n  const res: TimepickerControls = {\n    canIncrementHours: true,\n    canIncrementMinutes: true,\n    canIncrementSeconds: true,\n\n    canDecrementHours: true,\n    canDecrementMinutes: true,\n    canDecrementSeconds: true\n  };\n\n  if (!value) {\n    return res;\n  }\n\n  // compare dates\n  if (max) {\n    const _newHour = changeTime(value, { hour: hourStep });\n    res.canIncrementHours = max > _newHour;\n\n    if (!res.canIncrementHours) {\n      const _newMinutes = changeTime(value, { minute: minuteStep });\n      res.canIncrementMinutes = showSeconds\n        ? max > _newMinutes\n        : max >= _newMinutes;\n    }\n\n    if (!res.canIncrementMinutes) {\n      const _newSeconds = changeTime(value, { seconds: secondsStep });\n      res.canIncrementSeconds = max >= _newSeconds;\n    }\n  }\n\n  if (min) {\n    const _newHour = changeTime(value, { hour: -hourStep });\n    res.canDecrementHours = min < _newHour;\n\n    if (!res.canDecrementHours) {\n      const _newMinutes = changeTime(value, { minute: -minuteStep });\n      res.canDecrementMinutes = showSeconds\n        ? min < _newMinutes\n        : min <= _newMinutes;\n    }\n\n    if (!res.canDecrementMinutes) {\n      const _newSeconds = changeTime(value, { seconds: -secondsStep });\n      res.canDecrementSeconds = min <= _newSeconds;\n    }\n  }\n\n  return res;\n}\n","import { Action } from '../../mini-ngrx/index';\nimport {\n  canChangeHours,\n  canChangeMinutes,\n  canChangeSeconds,\n  canChangeValue,\n  timepickerControls\n} from '../timepicker-controls.util';\nimport { TimepickerConfig } from '../timepicker.config';\nimport {\n  TimepickerComponentState,\n  TimepickerControls\n} from '../timepicker.models';\nimport { changeTime, setTime } from '../timepicker.utils';\nimport { TimepickerActions } from './timepicker.actions';\n\nexport class TimepickerState {\n  value: Date;\n  config: TimepickerComponentState;\n  controls: TimepickerControls;\n}\n\nexport const initialState: TimepickerState = {\n  value: null,\n  config: new TimepickerConfig(),\n  controls: {\n    canIncrementHours: true,\n    canIncrementMinutes: true,\n    canIncrementSeconds: true,\n\n    canDecrementHours: true,\n    canDecrementMinutes: true,\n    canDecrementSeconds: true\n  }\n};\n\nexport function timepickerReducer(state = initialState, action: Action) {\n  switch (action.type) {\n    case TimepickerActions.WRITE_VALUE: {\n      return Object.assign({}, state, { value: action.payload });\n    }\n\n    case TimepickerActions.CHANGE_HOURS: {\n      if (\n        !canChangeValue(state.config, action.payload) ||\n        !canChangeHours(action.payload, state.controls)\n      ) {\n        return state;\n      }\n\n      const _newTime = changeTime(state.value, { hour: action.payload.step });\n\n      return Object.assign({}, state, { value: _newTime });\n    }\n\n    case TimepickerActions.CHANGE_MINUTES: {\n      if (\n        !canChangeValue(state.config, action.payload) ||\n        !canChangeMinutes(action.payload, state.controls)\n      ) {\n        return state;\n      }\n\n      const _newTime = changeTime(state.value, { minute: action.payload.step });\n\n      return Object.assign({}, state, { value: _newTime });\n    }\n\n    case TimepickerActions.CHANGE_SECONDS: {\n      if (\n        !canChangeValue(state.config, action.payload) ||\n        !canChangeSeconds(action.payload, state.controls)\n      ) {\n        return state;\n      }\n\n      const _newTime = changeTime(state.value, {\n        seconds: action.payload.step\n      });\n\n      return Object.assign({}, state, { value: _newTime });\n    }\n\n    case TimepickerActions.SET_TIME_UNIT: {\n      if (!canChangeValue(state.config)) {\n        return state;\n      }\n\n      const _newTime = setTime(state.value, action.payload);\n\n      return Object.assign({}, state, { value: _newTime });\n    }\n\n    case TimepickerActions.UPDATE_CONTROLS: {\n      const _newControlsState = timepickerControls(state.value, action.payload);\n      const _newState: TimepickerState = {\n        value: state.value,\n        config: action.payload,\n        controls: _newControlsState\n      };\n\n      if (state.config.showMeridian !== _newState.config.showMeridian) {\n        _newState.value = new Date(state.value);\n      }\n\n      return Object.assign({}, state, _newState);\n    }\n\n    default:\n      return state;\n  }\n}\n","import { errorObject } from './errorObject';\n\nlet tryCatchTarget: Function;\n\nfunction tryCatcher(this: any): any {\n  try {\n    return tryCatchTarget.apply(this, arguments);\n  } catch (e) {\n    errorObject.e = e;\n    return errorObject;\n  }\n}\n\nexport function tryCatch<T extends Function>(fn: T): T {\n  tryCatchTarget = fn;\n  return <any>tryCatcher;\n};\n","import { isArray } from './util/isArray';\nimport { isObject } from './util/isObject';\nimport { isFunction } from './util/isFunction';\nimport { tryCatch } from './util/tryCatch';\nimport { errorObject } from './util/errorObject';\nimport { UnsubscriptionError } from './util/UnsubscriptionError';\n\nexport interface AnonymousSubscription {\n  unsubscribe(): void;\n}\n\nexport type TeardownLogic = AnonymousSubscription | Function | void;\n\nexport interface ISubscription extends AnonymousSubscription {\n  unsubscribe(): void;\n  readonly closed: boolean;\n}\n\n/**\n * Represents a disposable resource, such as the execution of an Observable. A\n * Subscription has one important method, `unsubscribe`, that takes no argument\n * and just disposes the resource held by the subscription.\n *\n * Additionally, subscriptions may be grouped together through the `add()`\n * method, which will attach a child Subscription to the current Subscription.\n * When a Subscription is unsubscribed, all its children (and its grandchildren)\n * will be unsubscribed as well.\n *\n * @class Subscription\n */\nexport class Subscription implements ISubscription {\n  public static EMPTY: Subscription = (function(empty: any){\n    empty.closed = true;\n    return empty;\n  }(new Subscription()));\n\n  /**\n   * A flag to indicate whether this Subscription has already been unsubscribed.\n   * @type {boolean}\n   */\n  public closed: boolean = false;\n\n  protected _parent: Subscription = null;\n  protected _parents: Subscription[] = null;\n  private _subscriptions: ISubscription[] = null;\n\n  /**\n   * @param {function(): void} [unsubscribe] A function describing how to\n   * perform the disposal of resources when the `unsubscribe` method is called.\n   */\n  constructor(unsubscribe?: () => void) {\n    if (unsubscribe) {\n      (<any> this)._unsubscribe = unsubscribe;\n    }\n  }\n\n  /**\n   * Disposes the resources held by the subscription. May, for instance, cancel\n   * an ongoing Observable execution or cancel any other type of work that\n   * started when the Subscription was created.\n   * @return {void}\n   */\n  unsubscribe(): void {\n    let hasErrors = false;\n    let errors: any[];\n\n    if (this.closed) {\n      return;\n    }\n\n    let { _parent, _parents, _unsubscribe, _subscriptions } = (<any> this);\n\n    this.closed = true;\n    this._parent = null;\n    this._parents = null;\n    // null out _subscriptions first so any child subscriptions that attempt\n    // to remove themselves from this subscription will noop\n    this._subscriptions = null;\n\n    let index = -1;\n    let len = _parents ? _parents.length : 0;\n\n    // if this._parent is null, then so is this._parents, and we\n    // don't have to remove ourselves from any parent subscriptions.\n    while (_parent) {\n      _parent.remove(this);\n      // if this._parents is null or index >= len,\n      // then _parent is set to null, and the loop exits\n      _parent = ++index < len && _parents[index] || null;\n    }\n\n    if (isFunction(_unsubscribe)) {\n      let trial = tryCatch(_unsubscribe).call(this);\n      if (trial === errorObject) {\n        hasErrors = true;\n        errors = errors || (\n          errorObject.e instanceof UnsubscriptionError ?\n            flattenUnsubscriptionErrors(errorObject.e.errors) : [errorObject.e]\n        );\n      }\n    }\n\n    if (isArray(_subscriptions)) {\n\n      index = -1;\n      len = _subscriptions.length;\n\n      while (++index < len) {\n        const sub = _subscriptions[index];\n        if (isObject(sub)) {\n          let trial = tryCatch(sub.unsubscribe).call(sub);\n          if (trial === errorObject) {\n            hasErrors = true;\n            errors = errors || [];\n            let err = errorObject.e;\n            if (err instanceof UnsubscriptionError) {\n              errors = errors.concat(flattenUnsubscriptionErrors(err.errors));\n            } else {\n              errors.push(err);\n            }\n          }\n        }\n      }\n    }\n\n    if (hasErrors) {\n      throw new UnsubscriptionError(errors);\n    }\n  }\n\n  /**\n   * Adds a tear down to be called during the unsubscribe() of this\n   * Subscription.\n   *\n   * If the tear down being added is a subscription that is already\n   * unsubscribed, is the same reference `add` is being called on, or is\n   * `Subscription.EMPTY`, it will not be added.\n   *\n   * If this subscription is already in an `closed` state, the passed\n   * tear down logic will be executed immediately.\n   *\n   * @param {TeardownLogic} teardown The additional logic to execute on\n   * teardown.\n   * @return {Subscription} Returns the Subscription used or created to be\n   * added to the inner subscriptions list. This Subscription can be used with\n   * `remove()` to remove the passed teardown logic from the inner subscriptions\n   * list.\n   */\n  add(teardown: TeardownLogic): Subscription {\n    if (!teardown || (teardown === Subscription.EMPTY)) {\n      return Subscription.EMPTY;\n    }\n\n    if (teardown === this) {\n      return this;\n    }\n\n    let subscription = (<Subscription> teardown);\n\n    switch (typeof teardown) {\n      case 'function':\n        subscription = new Subscription(<(() => void) > teardown);\n      case 'object':\n        if (subscription.closed || typeof subscription.unsubscribe !== 'function') {\n          return subscription;\n        } else if (this.closed) {\n          subscription.unsubscribe();\n          return subscription;\n        } else if (typeof subscription._addParent !== 'function' /* quack quack */) {\n          const tmp = subscription;\n          subscription = new Subscription();\n          subscription._subscriptions = [tmp];\n        }\n        break;\n      default:\n        throw new Error('unrecognized teardown ' + teardown + ' added to Subscription.');\n    }\n\n    const subscriptions = this._subscriptions || (this._subscriptions = []);\n\n    subscriptions.push(subscription);\n    subscription._addParent(this);\n\n    return subscription;\n  }\n\n  /**\n   * Removes a Subscription from the internal list of subscriptions that will\n   * unsubscribe during the unsubscribe process of this Subscription.\n   * @param {Subscription} subscription The subscription to remove.\n   * @return {void}\n   */\n  remove(subscription: Subscription): void {\n    const subscriptions = this._subscriptions;\n    if (subscriptions) {\n      const subscriptionIndex = subscriptions.indexOf(subscription);\n      if (subscriptionIndex !== -1) {\n        subscriptions.splice(subscriptionIndex, 1);\n      }\n    }\n  }\n\n  private _addParent(parent: Subscription) {\n    let { _parent, _parents } = this;\n    if (!_parent || _parent === parent) {\n      // If we don't have a parent, or the new parent is the same as the\n      // current parent, then set this._parent to the new parent.\n      this._parent = parent;\n    } else if (!_parents) {\n      // If there's already one parent, but not multiple, allocate an Array to\n      // store the rest of the parent Subscriptions.\n      this._parents = [parent];\n    } else if (_parents.indexOf(parent) === -1) {\n      // Only add the new parent to the _parents list if it's not already there.\n      _parents.push(parent);\n    }\n  }\n}\n\nfunction flattenUnsubscriptionErrors(errors: any[]) {\n return errors.reduce((errs, err) => errs.concat((err instanceof UnsubscriptionError) ? err.errors : err), []);\n}\n","\n/**\n * Convert a single dimension array to a double dimension array\n * @template T\n * @param {?} items the single dimension array to convert\n * @param {?} columns the number of items each array should have\n * @return {?}\n */\nexport function gridify<T>(items: T[], columns: number): T[][] {\n\n    const /** @type {?} */ grid: T[][] = [];\n\n    while (items.length) {\n        grid.push(items.splice(0, columns));\n    }\n\n    return grid;\n}\n/**\n * Create an array of numbers between two limits\n * @param {?} start the lower limit\n * @param {?} end the upper limit\n * @return {?}\n */\nexport function range(start: number, end: number): number[] {\n    const /** @type {?} */ list: number[] = [];\n\n    for (let /** @type {?} */ idx = start; idx <= end; idx++) {\n        list.push(idx);\n    }\n\n    return list;\n}\n/**\n * Create an array of dates between two points\n * @param {?} start the date to start the array\n * @param {?} end the date to end the array\n * @return {?}\n */\nexport function dateRange(start: Date, end: Date): Date[] {\n\n    let /** @type {?} */ dates: Date[] = [];\n\n    // loop through all the days between the date range\n    while (start <= end) {\n\n        // add the date to the array\n        dates.push(new Date(start));\n\n        // move to the next day\n        start.setDate(start.getDate() + 1);\n    }\n\n    return dates;\n}\n/**\n * Compare two dates to see if they are on the same day\n * @param {?} day1 the first date to compare\n * @param {?} day2 the second date to compare\n * @return {?}\n */\nexport function compareDays(day1: Date, day2: Date): boolean {\n    return day1.getDate() === day2.getDate() &&\n        day1.getMonth() === day2.getMonth() &&\n        day1.getFullYear() === day2.getFullYear();\n}\n/**\n * Export an array of all the available months\n */\nexport const months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\nexport const /** @type {?} */ monthsShort = months.map(month => month.substring(0, 3));\n/**\n * Export an array of all the available days of the week\n */\nexport const weekdays = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'];\nexport const /** @type {?} */ weekdaysShort = weekdays.map(weekday => weekday.substring(0, 3));","import { window } from './facade/browser';\n\nlet guessedVersion: 'bs3' | 'bs4';\n\nfunction _guessBsVersion(): 'bs3' | 'bs4' {\n  if (typeof document === 'undefined') {\n    return null;\n  }\n  const spanEl = document.createElement('span');\n  spanEl.innerText = 'test bs version';\n  document.body.appendChild(spanEl);\n  spanEl.classList.add('d-none');\n  const rect = spanEl.getBoundingClientRect();\n  document.body.removeChild(spanEl);\n  if (!rect) {\n    return 'bs3';\n  }\n\n  return rect.top === 0 ? 'bs4' : 'bs3';\n}\n\nexport function setTheme(theme: 'bs3' | 'bs4'): void {\n  guessedVersion = theme;\n}\n\n// todo: in ngx-bootstrap, bs4 will became a default one\nexport function isBs3(): boolean {\n  if (typeof window === 'undefined') {\n    return true;\n  }\n\n  if (typeof window.__theme === 'undefined') {\n    if (guessedVersion) {\n      return guessedVersion === 'bs3';\n    }\n    guessedVersion = _guessBsVersion();\n\n    return guessedVersion === 'bs3';\n  }\n\n  return window.__theme !== 'bs4';\n}\n","/**\n * @copyright Valor Software\n * @copyright Angular ng-bootstrap team\n */\nimport { Renderer2 } from '@angular/core';\nimport { Trigger } from './trigger.class';\nimport {\n  BsEventCallback, ListenOptions\n} from '../component-loader/listen-options.model';\n\nconst DEFAULT_ALIASES = {\n  hover: ['mouseover', 'mouseout'],\n  focus: ['focusin', 'focusout']\n};\n\nexport function parseTriggers(triggers: string, aliases: any = DEFAULT_ALIASES): Trigger[] {\n  const trimmedTriggers = (triggers || '').trim();\n\n  if (trimmedTriggers.length === 0) {\n    return [];\n  }\n\n  const parsedTriggers = trimmedTriggers\n    .split(/\\s+/)\n    .map((trigger: string) => trigger.split(':'))\n    .map((triggerPair: string[]) => {\n      const alias = aliases[triggerPair[0]] || triggerPair;\n\n      return new Trigger(alias[0], alias[1]);\n    });\n\n  const manualTriggers = parsedTriggers.filter((triggerPair: Trigger) =>\n    triggerPair.isManual()\n  );\n\n  if (manualTriggers.length > 1) {\n    throw new Error('Triggers parse error: only one manual trigger is allowed');\n  }\n\n  if (manualTriggers.length === 1 && parsedTriggers.length > 1) {\n    throw new Error('Triggers parse error: manual trigger can\\'t be mixed with other triggers');\n  }\n\n  return parsedTriggers;\n}\n\nexport function listenToTriggers(renderer: Renderer2,\n                                 target: any,\n                                 triggers: string,\n                                 showFn: BsEventCallback,\n                                 hideFn: BsEventCallback,\n                                 toggleFn: BsEventCallback): Function {\n  const parsedTriggers = parseTriggers(triggers);\n  const listeners: any[] = [];\n\n  if (parsedTriggers.length === 1 && parsedTriggers[0].isManual()) {\n    return Function.prototype;\n  }\n\n  parsedTriggers.forEach((trigger: Trigger) => {\n    if (trigger.open === trigger.close) {\n      listeners.push(renderer.listen(target, trigger.open, toggleFn));\n\n      return;\n    }\n\n    listeners.push(\n      renderer.listen(target, trigger.open, showFn),\n      renderer.listen(target, trigger.close, hideFn)\n    );\n  });\n\n  return () => {\n    listeners.forEach((unsubscribeFn: Function) => unsubscribeFn());\n  };\n}\n\nexport function listenToTriggersV2(renderer: Renderer2,\n                                   options: ListenOptions): Function {\n  const parsedTriggers = parseTriggers(options.triggers);\n  const target = options.target;\n  // do nothing\n  if (parsedTriggers.length === 1 && parsedTriggers[0].isManual()) {\n    return Function.prototype;\n  }\n\n  // all listeners\n  const listeners: any[] = [];\n\n  // lazy listeners registration\n  const _registerHide: Function[] = [];\n  const registerHide = () => {\n    // add hide listeners to unregister array\n    _registerHide.forEach((fn: Function) => listeners.push(fn()));\n    // register hide events only once\n    _registerHide.length = 0;\n  };\n\n  // register open\\close\\toggle listeners\n  parsedTriggers.forEach((trigger: Trigger) => {\n    const useToggle = trigger.open === trigger.close;\n    const showFn = useToggle ? options.toggle : options.show;\n\n    if (!useToggle) {\n      _registerHide.push(() =>\n        renderer.listen(target, trigger.close, options.hide)\n      );\n    }\n\n    listeners.push(\n      renderer.listen(target, trigger.open, () => showFn(registerHide))\n    );\n  });\n\n  return () => {\n    listeners.forEach((unsubscribeFn: Function) => unsubscribeFn());\n  };\n}\n\nexport function registerOutsideClick(renderer: Renderer2,\n                                     options: ListenOptions) {\n  if (!options.outsideClick) {\n    return Function.prototype;\n  }\n\n  return renderer.listen('document', 'click', (event: any) => {\n    if (options.target && options.target.contains(event.target)) {\n      return;\n    }\n    if (\n      options.targets &&\n      options.targets.some(target => target.contains(event.target))\n    ) {\n      return;\n    }\n\n    options.hide();\n  });\n}\n","import { Injectable, ElementRef } from '@angular/core';\nimport { positionElements } from './ng-positioning';\n\nexport interface PositioningOptions {\n  /** The DOM element, ElementRef, or a selector string of an element which will be moved */\n  element?: HTMLElement | ElementRef | string;\n\n  /** The DOM element, ElementRef, or a selector string of an element which the element will be attached to  */\n  target?: HTMLElement | ElementRef | string;\n\n  /**\n   * A string of the form 'vert-attachment horiz-attachment' or 'placement'\n   * - placement can be \"top\", \"bottom\", \"left\", \"right\"\n   * not yet supported:\n   * - vert-attachment can be any of 'top', 'middle', 'bottom'\n   * - horiz-attachment can be any of 'left', 'center', 'right'\n   */\n  attachment?: string;\n\n  /** A string similar to `attachment`. The one difference is that, if it's not provided,\n   * `targetAttachment` will assume the mirror image of `attachment`.\n   */\n  targetAttachment?: string;\n\n  /** A string of the form 'vert-offset horiz-offset'\n   * - vert-offset and horiz-offset can be of the form \"20px\" or \"55%\"\n   */\n  offset?: string;\n\n  /** A string similar to `offset`, but referring to the offset of the target */\n  targetOffset?: string;\n\n  /** If true component will be attached to body */\n  appendToBody?: boolean;\n}\n\n\nexport class PositioningService {\n  position(options: PositioningOptions): void {\n    const {element, target, attachment, appendToBody} = options;\n    positionElements(\n      _getHtmlElement(target),\n      _getHtmlElement(element),\n      attachment,\n      appendToBody\n    );\n  }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction _getHtmlElement(element: HTMLElement | ElementRef | string): HTMLElement {\n  // it means that we got a selector\n  if (typeof element === 'string') {\n    return document.querySelector(element) as HTMLElement;\n  }\n\n  if (element instanceof ElementRef) {\n    return element.nativeElement;\n  }\n\n  return element as HTMLElement;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { isDevMode } from '@angular/core';\nconst _messagesHash: { [key: string]: boolean } = {};\nconst _hideMsg = typeof console === 'undefined' || !('warn' in console);\n\nexport function warnOnce(msg: string): void {\n  if (!isDevMode() || _hideMsg || msg in _messagesHash) {\n    return;\n  }\n\n  _messagesHash[msg] = true;\n  /*tslint:disable-next-line*/\n  console.warn(msg);\n}\n","import { latinMap } from './latin-map';\n\nexport function latinize(str: string): string {\n  if (!str) {\n    return '';\n  }\n\n  return str.replace(/[^A-Za-z0-9\\[\\] ]/g, function (a: string): string {\n    return latinMap[a] || a;\n  });\n}\n\nexport function escapeRegexp(queryToEscape: string): string {\n  // Regex: capture the whole query string and replace it with the string\n  // that will be used to match the results, for example if the capture is\n  // 'a' the result will be \\a\n  return queryToEscape.replace(/([.?*+^$[\\]\\\\(){}|-])/g, '\\\\$1');\n}\n\n/* tslint:disable */\nexport function tokenize(str: string,\n                         wordRegexDelimiters = ' ',\n                         phraseRegexDelimiters = ''): Array<string> {\n  /* tslint:enable */\n  const regexStr = `(?:[${phraseRegexDelimiters}])([^${phraseRegexDelimiters}]+)` +\n    `(?:[${phraseRegexDelimiters}])|([^${wordRegexDelimiters}]+)`;\n  const preTokenized: string[] = str.split(new RegExp(regexStr, 'g'));\n  const result: string[] = [];\n  const preTokenizedLength: number = preTokenized.length;\n  let token: string;\n  const replacePhraseDelimiters = new RegExp(`[${phraseRegexDelimiters}]+`, 'g');\n\n  for (let i = 0; i < preTokenizedLength; i += 1) {\n    token = preTokenized[i];\n    if (token && token.length && token !== wordRegexDelimiters) {\n      result.push(token.replace(replacePhraseDelimiters, ''));\n    }\n  }\n\n  return result;\n}\n\nexport function getValueFromObject(object: any, option: string): string {\n  if (!option || typeof object !== 'object') {\n    return object.toString();\n  }\n\n  if (option.endsWith('()')) {\n    const functionName = option.slice(0, option.length - 2);\n\n    return object[functionName]().toString();\n  }\n\n  const properties: string = option\n    .replace(/\\[(\\w+)\\]/g, '.$1')\n    .replace(/^\\./, '');\n  const propertiesArray: string[] = properties.split('.');\n\n  for (const property of propertiesArray) {\n    if (property in object) {\n      // tslint:disable-next-line\n      object = object[property];\n    }\n  }\n  if (!object) {return ''; }\n\n  return object.toString();\n}\n","import { Component, Input } from '@angular/core';\nexport class BreadcrumbsComponent {\n\n     crumbs: Breadcrumb[];\n/**\n * @param {?} event\n * @param {?} crumb\n * @return {?}\n */\nclickCrumb(event: MouseEvent, crumb: Breadcrumb) {\n        if (crumb.onClick) {\n            crumb.onClick.call(null, event);\n        }\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-breadcrumbs',\n    template: `\n      <ol class=\"breadcrumb\">\n          <li *ngFor=\"let crumb of crumbs\">\n\n              <!-- If there is a router link then use a tag -->\n              <a *ngIf=\"crumb.routerLink\"\n                 [routerLink]=\"crumb.routerLink\" \n                 [fragment]=\"crumb.fragment\" \n                 [queryParams]=\"crumb.queryParams\" \n                 (click)=\"clickCrumb($event, crumb)\">\n                      {{ crumb.title }}\n              </a>\n\n              <!-- If there is not router link then display text in a span -->\n              <span *ngIf=\"!crumb.routerLink\">{{ crumb.title }}</span>\n          </li>\n      </ol>\n    `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'crumbs': [{ type: Input },],\n};\n}\n\nfunction BreadcrumbsComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nBreadcrumbsComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nBreadcrumbsComponent.ctorParameters;\n/** @type {?} */\nBreadcrumbsComponent.propDecorators;\n/** @type {?} */\nBreadcrumbsComponent.prototype.crumbs;\n}\n\n\nexport interface Breadcrumb {\n    title: string;\n    routerLink?: string;\n    fragment?: string;\n    queryParams?: any;\n    onClick?: (event: MouseEvent) => void;\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\n\nimport { BreadcrumbsComponent } from './breadcrumbs.component';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nexport class BreadcrumbsModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        CommonModule, \n        RouterModule\n    ],\n    exports: [BreadcrumbsComponent],\n    declarations: [BreadcrumbsComponent]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction BreadcrumbsModule_tsickle_Closure_declarations() {\n/** @type {?} */\nBreadcrumbsModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nBreadcrumbsModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Input, forwardRef, Output, EventEmitter } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\n\nexport const /** @type {?} */ CHECKBOX_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => CheckboxComponent),\n    multi: true\n};\nexport class CheckboxComponent implements ControlValueAccessor {\n\n     name: string = '';\n     clickable: boolean = true;\n     disabled: boolean = false;\n     simplified: boolean = false;\n     indeterminateValue: any = -1;\n     valueChange: EventEmitter<any> = new EventEmitter<any>();\n/**\n * @return {?}\n */\nget value() {\n        return this._value;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset value(value: any) {\n        this._value = value;\n\n        // invoke change event\n        this.valueChange.emit(this._value);\n\n        // call callback\n        this.onChangeCallback(this._value);\n    }\nprivate _value: any = false;\n\n    onTouchedCallback: () => void = () => { };\n    onChangeCallback: (_: any) => void = () => { };\nconstructor() { }\n/**\n * @return {?}\n */\ntoggleChecked() {\n\n        if (this.disabled === true || this.clickable === false) {\n            return;\n        }\n\n        if (this.value === this.indeterminateValue) {\n            this.value = true;\n            return;\n        }\n\n        // toggle the checked state\n        this.value = !this.value;\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nkeyDown(event: KeyboardEvent) {\n        // then toggle the checkbox\n        this.toggleChecked();\n\n        // prevent default browser behavior\n        event.stopPropagation();\n        event.preventDefault();\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nwriteValue(value: boolean) {\n        if (value !== this._value) {\n            this._value = value;\n        }\n    }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnChange(fn: any) {\n        this.onChangeCallback = fn;\n    }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnTouched(fn: any) {\n        this.onTouchedCallback = fn;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-checkbox',\n    template: `\n      <div class=\"ux-checkbox\" tabindex=\"0\"\n          [class.ux-checked]=\"value == true\"\n          [class.ux-indeterminate]=\"value == indeterminateValue\"\n          [class.ux-simplified]=\"simplified == true\"\n          [class.ux-disabled]=\"disabled == true\"\n          (keydown.space)=\"keyDown($event)\">\n\n          <input type=\"checkbox\" role=\"checkbox\" tabindex=\"-1\"\n              [name]=\"name\" \n              [checked]=\"value\" \n              [disabled]=\"disabled\" />\n        \n      </div>\n\n      <div class=\"ux-checkbox-content\">\n          <ng-content></ng-content>\n      </div>\n    `,\n    providers: [CHECKBOX_VALUE_ACCESSOR],\n    host: {\n        '(click)': 'toggleChecked()'\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'name': [{ type: Input },],\n'clickable': [{ type: Input },],\n'disabled': [{ type: Input },],\n'simplified': [{ type: Input },],\n'indeterminateValue': [{ type: Input },],\n'valueChange': [{ type: Output },],\n'value': [{ type: Input },],\n};\n}\n\nfunction CheckboxComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nCheckboxComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nCheckboxComponent.ctorParameters;\n/** @type {?} */\nCheckboxComponent.propDecorators;\n/** @type {?} */\nCheckboxComponent.prototype.name;\n/** @type {?} */\nCheckboxComponent.prototype.clickable;\n/** @type {?} */\nCheckboxComponent.prototype.disabled;\n/** @type {?} */\nCheckboxComponent.prototype.simplified;\n/** @type {?} */\nCheckboxComponent.prototype.indeterminateValue;\n/** @type {?} */\nCheckboxComponent.prototype.valueChange;\n/** @type {?} */\nCheckboxComponent.prototype._value;\n/** @type {?} */\nCheckboxComponent.prototype.onTouchedCallback;\n/** @type {?} */\nCheckboxComponent.prototype.onChangeCallback;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport {FormsModule} from '@angular/forms';\n\nimport { CheckboxComponent } from './checkbox.component';\nexport class CheckboxModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [FormsModule],\n    exports: [CheckboxComponent],\n    declarations: [CheckboxComponent]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction CheckboxModule_tsickle_Closure_declarations() {\n/** @type {?} */\nCheckboxModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nCheckboxModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { ColumnSortingDirective, ColumnSortingOrder } from './column-sorting.directive';\nimport { Component, Input, Output, EventEmitter } from '@angular/core';\nexport class ColumnSortingComponent {\n\n     state: ColumnSortingState;\n     key: string;\n     orderNumber: number;\n     stateChange: EventEmitter<ColumnSortingState> = new EventEmitter<ColumnSortingState>();\nprivate _parent: ColumnSortingDirective;\n    columnSortingState = ColumnSortingState;\n/**\n * @param {?} parent\n * @return {?}\n */\ninitParent(parent: ColumnSortingDirective) {\n        this._parent = parent;\n\n        // watch for any events\n        this._parent.events.subscribe(event => {\n\n            let /** @type {?} */ idx = event.findIndex(column => column.key === this.key);\n\n            if (idx == -1) {\n                this.state = ColumnSortingState.NoSort;\n            }\n\n            // only store the number if we have 2 or more columns being sorted\n            if (event.length > 1) {\n                this.orderNumber = idx === -1 ? null : idx + 1;\n            } else {\n                this.orderNumber = null;\n            }\n\n            this.stateChange.emit(this.state);\n\n        });\n    }\n/**\n * @return {?}\n */\nchangeState(): ColumnSortingOrder[] {\n\n        if (this.state === ColumnSortingState.Ascending) {\n            this.state = ColumnSortingState.Descending;\n        } else if (this.state === ColumnSortingState.Descending) {\n            this.state = ColumnSortingState.NoSort;\n        } else {\n            this.state = ColumnSortingState.Ascending;\n        }\n\n        // inform parent\n        return this._parent.toggleColumn(this.key, this.state);\n\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-column-sorting',\n    template: `\n      <div class=\"ux-column-sorting\">\n          <i class=\"ux-column-sorting-icon hpe-icon\" \n              [class.hpe-ascend]=\"state === columnSortingState.Ascending\" \n              [class.hpe-descend]=\"state === columnSortingState.Descending\" \n              [class.column-sorting-icon-hidden]=\"state === columnSortingState.NoSort\"></i>\n          <p class=\"ux-column-sorting-number\">{{ orderNumber }}</p>\n      </div>\n    `,\n    exportAs: 'ux-column-sorting'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'state': [{ type: Input },],\n'key': [{ type: Input },],\n'orderNumber': [{ type: Input },],\n'stateChange': [{ type: Output },],\n};\n}\n\nfunction ColumnSortingComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nColumnSortingComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nColumnSortingComponent.ctorParameters;\n/** @type {?} */\nColumnSortingComponent.propDecorators;\n/** @type {?} */\nColumnSortingComponent.prototype.state;\n/** @type {?} */\nColumnSortingComponent.prototype.key;\n/** @type {?} */\nColumnSortingComponent.prototype.orderNumber;\n/** @type {?} */\nColumnSortingComponent.prototype.stateChange;\n/** @type {?} */\nColumnSortingComponent.prototype._parent;\n/** @type {?} */\nColumnSortingComponent.prototype.columnSortingState;\n}\n\nexport type ColumnSortingState = number;\nexport let ColumnSortingState: any = {};\nColumnSortingState.Ascending = 0;\nColumnSortingState.Descending = 1;\nColumnSortingState.NoSort = 2;\nColumnSortingState[ColumnSortingState.Ascending] = \"Ascending\";\nColumnSortingState[ColumnSortingState.Descending] = \"Descending\";\nColumnSortingState[ColumnSortingState.NoSort] = \"NoSort\";\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { ColumnSortingComponent, ColumnSortingState } from './column-sorting.component';\nimport { Directive, Host, QueryList, ContentChildren, Input } from '@angular/core';\nimport { Subject } from 'rxjs/Subject';\nexport class ColumnSortingDirective {\n\n     singleSort: boolean;\n     components: QueryList<ColumnSortingComponent>;\n\n    events: Subject<ColumnSortingOrder[]> = new Subject<ColumnSortingOrder[]>();\n    order: ColumnSortingOrder[] = [];\n/**\n * @return {?}\n */\nngAfterViewInit() {\n        this.components.forEach(component => component.initParent(this));\n    }\n/**\n * @param {?} key\n * @param {?} state\n * @return {?}\n */\ntoggleColumn(key: string, state: ColumnSortingState) {\n\n        if (this.singleSort) {\n            if (state === ColumnSortingState.NoSort) {\n                this.order = [];\n            } else {\n                this.order = [{key: key, state: state}];\n            }\n        } else {\n            // reorder columns here\n            let /** @type {?} */ idx = this.order.findIndex(column => column.key === key);\n\n            // if wasnt previously selected add to list\n            if (idx === -1) {\n                this.order.push({ key: key, state: state});\n            } else if (state === ColumnSortingState.Ascending || state === ColumnSortingState.Descending) {\n                this.order.splice(idx, 1);\n                this.order.push({ key: key, state: state});\n            } else {\n                this.order.splice(idx, 1);\n            }\n        }\n\n            this.events.next(this.order);\n            // return the order\n            return this.order;\n\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: '[uxColumnSorting]'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'singleSort': [{ type: Input },],\n'components': [{ type: ContentChildren, args: [ColumnSortingComponent, ] },],\n};\n}\n\nfunction ColumnSortingDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nColumnSortingDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nColumnSortingDirective.ctorParameters;\n/** @type {?} */\nColumnSortingDirective.propDecorators;\n/** @type {?} */\nColumnSortingDirective.prototype.singleSort;\n/** @type {?} */\nColumnSortingDirective.prototype.components;\n/** @type {?} */\nColumnSortingDirective.prototype.events;\n/** @type {?} */\nColumnSortingDirective.prototype.order;\n}\n\n\nexport interface ColumnSortingOrder {\n    key: string;\n    state: ColumnSortingState; \n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\n\nimport { ColumnSortingComponent } from './column-sorting.component';\n\nimport { ColumnSortingDirective } from './column-sorting.directive';\nexport class ColumnSortingModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    exports: [ColumnSortingComponent, ColumnSortingDirective],\n    declarations: [ColumnSortingComponent, ColumnSortingDirective]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ColumnSortingModule_tsickle_Closure_declarations() {\n/** @type {?} */\nColumnSortingModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nColumnSortingModule.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable } from '@angular/core';\nimport { DashboardWidgetComponent } from './widget/dashboard-widget.component';\nimport { DashboardOptions } from './dashboard.component';\nimport { Subject } from 'rxjs/Subject';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nexport class DashboardService {\nprivate _dashboard: HTMLElement;\nprivate _widgets: DashboardWidgetComponent[] = [];\nprivate _options: DashboardOptions;\nprivate _options$: Subject<DashboardOptions> = new Subject<DashboardOptions>();\nprivate _placeholder: DashboardPlaceholder = { visible: false, x: 0, y: 0, width: 0, height: 0 };\nprivate _widgetOrigin: { column?: number, row?: number, columnSpan?: number, rowSpan?: number };\nprivate _dimensions: DashboardDimensions = {};\nprivate _actionWidget: DashboardAction;\nprivate _columnWidth: number = 0;\nprivate _rowHeight: number = 0;\nprivate _stacked: boolean = false;\nprivate _cache: DashboardCache[];\nprivate _mouseEvent: MouseEvent;\nprivate _defaultOptions: DashboardOptions = {\n        columns: 5,\n        padding: 5,\n        minWidth: 100,\n        minHeight: 100,\n        emptyRow: true\n    };\n\n    height: BehaviorSubject<number> = new BehaviorSubject<number>(0);\n    layout: Subject<DashboardLayoutData[]> = new Subject<DashboardLayoutData[]>();\n/**\n * Return all the options currently being used as a subject\n * @return {?}\n */\noptions(): Subject<DashboardOptions> {\n        return this._options$;\n    }\n/**\n * Return all the options currently being used\n * @return {?}\n */\ngetOptions(): DashboardOptions {\n        return this._options;\n    }\n/**\n * Get all the default dashboard options\n * @return {?}\n */\ngetDefaultOptions(): DashboardOptions {\n        return this._defaultOptions;\n    }\n/**\n * Set the options - automatically set default values where not specified\n * @param {?} options The DashboardOptions that will configure the dashboard\n * @return {?}\n */\nsetOptions(options: DashboardOptions): void {\n        this._options = Object.assign({}, this._defaultOptions, options);\n\n        // update the observable\n        this._options$.next(this._options);\n    }\n/**\n * Allow uniform spacing around each widget\n * @param {?} padding The number of pixels around each widget\n * @return {?}\n */\nsetPadding(padding: number) {\n        this._options.padding = padding;\n        this.options().next(this._options);\n    }\n/**\n * Set the dashboard container element\n * @param {?} dashboard The HTMLElement that is the dashboard container\n * @return {?}\n */\nsetDashboard(dashboard: HTMLElement): void {\n        this._dashboard = dashboard;\n    }\n/**\n * Add a widget to the dashboard\n * @param {?} widget The widget component to add to the dashboard\n * @return {?}\n */\naddWidget(widget: DashboardWidgetComponent): void {\n        this._widgets.push(widget);\n        \n        // re-render the dashboard\n        this.renderDashboard();\n    }\n/**\n * Remove a widget from the dashboard\n * @param {?} widget The widget to remove\n * @return {?}\n */\nremoveWidget(widget: DashboardWidgetComponent): void {\n\n        // remove a widget from the dashboard\n        this._widgets = this._widgets.filter(wgt => wgt !== widget);\n        \n        // re-render the dashboard\n        this.renderDashboard();\n    }\n/**\n * Indicate that the dashboard element has been resized\n * @param {?} width The width of the dashboard element in px\n * @param {?} height The height of the dashboard element in px\n * @return {?}\n */\nsetDimensions(width: number, height: number): void {\n        this._dimensions.width = width;\n        this._dimensions.height = height;\n\n        // trigger re-render\n        this.renderDashboard();\n    }\n/**\n * Produce an object containing all the required layout data.\n * This can be useful for exporting/saving a layout\n * @return {?}\n */\ngetLayoutData(): DashboardLayoutData[] {\n        return this._widgets.map(widget => {\n            return { id: widget.getId(), col: widget.getColumn(), row: widget.getRow(), colSpan: widget.getColumnSpan(), rowSpan: widget.getRowSpan() };\n        });\n    }\n/**\n * Position widgets programatically\n * @param {?} layout\n * @return {?}\n */\nsetLayoutData(layout: DashboardLayoutData[]): void {\n        // iterate through each widget data and find a match\n        layout.forEach(widget => {\n\n            // find the matching widget\n            let /** @type {?} */ target = this._widgets.find(wgt => wgt.getId() === widget.id);\n\n            if (target) {\n                target.setColumn(widget.col);\n                target.setRow(widget.row);\n                target.setColumnSpan(widget.colSpan);\n                target.setRowSpan(widget.rowSpan);\n            }\n        });\n    }\n/**\n * Update the positions and sizes of the widgets\n * @return {?}\n */\nrenderDashboard(): void {\n\n        // do nothing if chart options haven't yet been initialised\n        if (!this._options) {\n            return;\n        }\n\n        // get the dimensions of the dashboard\n        this._columnWidth = this._dimensions.width / this._options.columns;\n        this._rowHeight = this._options.rowHeight || this._columnWidth;\n\n        // ensure the column width is not below the min widths\n        if (this._columnWidth < this._options.minWidth) {\n            this.setStacked(true);\n        } else {\n            this.setStacked(false);\n        }\n\n        // ensure the row height is not below the min widths\n        if (this._rowHeight < this._options.minWidth) {\n            this._rowHeight = this._options.minWidth;\n        }\n\n        this.setDashboardLayout();\n\n        // iterate through each widget and set the size - except the one being resized\n        this._widgets.filter(widget => !this._actionWidget || widget !== this._actionWidget.widget)\n            .forEach(widget => widget.render());\n    }\n/**\n * Determine where widgets should be positioned based on their positions, width and the size of the container\n * @return {?}\n */\nsetDashboardLayout(): void {\n\n        // find any widgets that do not currently have a position set\n        this._widgets.filter(widget => widget.getColumn() === undefined || widget.getRow() === undefined)\n            .forEach(widget => this.setWidgetPosition(widget));\n\n        this.setDashboardHeight();\n    }\n/**\n * @param {?} stacked\n * @return {?}\n */\nsetStacked(stacked: boolean): void {\n\n        // only do the following if the stacked state has changed\n        if (stacked === this._stacked) {\n            return;\n        }\n\n        // store the stacked state\n        this._stacked = stacked;\n\n        // update the stacked state for all widgets\n        this._widgets.forEach(widget => widget.setStacked(this._stacked));\n\n        // if stacked is true we need to do some reordering etc..\n        if (stacked === true) {\n\n            // iterate through each widget set it's stacked state and\n            this.getWidgetsByOrder().forEach((widget, idx) => {\n                widget.setStacked(true);\n                widget.setColumn(0);\n                widget.setRow(idx);\n            });\n        }\n\n    }\n/**\n * @return {?}\n */\ngetWidgetsByOrder(): DashboardWidgetComponent[] {\n        return this._widgets.sort((w1, w2) => {\n\n            let /** @type {?} */ w1Position = w1.getColumn() * w1.getRow();\n            let /** @type {?} */ w2Position = w2.getColumn() * w2.getRow();\n\n            if (w1Position < w2Position) {\n                return -1;\n            }\n\n            if (w1Position > w2Position) {\n                return 1;\n            }\n\n            return 0;\n        });\n    }\n/**\n * Find a position that a widget can fit in the dashboard\n * @param {?} widget The widget to try and position\n * @return {?}\n */\nsetWidgetPosition(widget: DashboardWidgetComponent): void {\n\n        // find a position for the widget\n        let /** @type {?} */ position = 0;\n        let /** @type {?} */ success = false;\n\n        // repeat until a space is found\n        while (!success) {\n\n            // get a position to try\n            let /** @type {?} */ column = position % this._options.columns;\n            let /** @type {?} */ row = Math.floor(position / this._options.columns);\n\n            // check the current position\n            if (this.getPositionAvailable(column, row, widget.getColumnSpan(), widget.getRowSpan())) {\n                success = true;\n                widget.setColumn(column);\n                widget.setRow(row);\n                return;\n            }\n\n            position++;\n        }\n    }\n/**\n * Check if a position in the dashboard is vacant or not\n * @param {?} column\n * @param {?} row\n * @param {?} columnSpan\n * @param {?} rowSpan\n * @param {?=} ignoreWidget\n * @return {?}\n */\ngetPositionAvailable(column: number, row: number, columnSpan: number, rowSpan: number, ignoreWidget?: DashboardWidgetComponent): boolean {\n\n        // get a list of grid spaces that are populated\n        let /** @type {?} */ spaces = this.getOccupiedSpaces();\n\n        // check if the block would still be in bounds\n        if (column + columnSpan > this._options.columns) {\n            return false;\n        }\n\n        // check each required position\n        for (let /** @type {?} */ x = column; x < column + columnSpan; x++) {\n            for (let /** @type {?} */ y = row; y < row + rowSpan; y++) {\n                if (spaces.find(block => block.column === x && block.row === y && block.widget !== ignoreWidget)) {\n                    return false;\n                }\n            }\n        }\n\n        return true;\n    }\n/**\n * @return {?}\n */\ngetOccupiedSpaces(): DashboardSpace[] {\n\n        // find all spaces that are currently occupied\n        return this._widgets.filter(widget => widget.getColumn() !== undefined && widget.getRow() !== undefined)\n            .reduce((value, widget) => {\n\n                this.forEachBlock(widget, (column, row) => value.push({ widget: widget, column: column, row: row }));\n\n                return value;\n            }, []);\n    }\n/**\n * Begin resizing a widget\n * @param {?} action The the widget to resize\n * @return {?}\n */\nonResizeStart(action: DashboardAction): void {\n\n        // store the mouse event\n        this._mouseEvent = action.event;\n        this._actionWidget = action;\n\n        // bring the widget to the font\n        this.bringToFront(action.widget);\n    }\n/**\n * @param {?} action\n * @return {?}\n */\nonResizeDrag(action: DashboardAction): void {\n\n        // if there was no movement then do nothing\n        if (action.event.x === this._mouseEvent.x && action.event.y === this._mouseEvent.y) {\n            return;\n        }\n\n        // update the stored mouse event\n        this._mouseEvent = action.event;\n\n        // get handle for direction\n        let /** @type {?} */ handle = action.widget.getHandles().find(hnd => hnd.direction === action.direction);\n\n        // get the bounds of the handle\n        let /** @type {?} */ bounds = handle.element.getBoundingClientRect();\n\n        // get the center of the handle\n        let /** @type {?} */ centerX = bounds.left + (bounds.width / 2);\n        let /** @type {?} */ centerY = bounds.top + (bounds.height / 2);\n\n        // get the current mouse position\n        let /** @type {?} */ mouseX = action.event.x - centerX;\n        let /** @type {?} */ mouseY = action.event.y - centerY;\n\n        // store the new proposed dimensions for the widget\n        let /** @type {?} */ dimensions: DashboardWidgetDimensions = {\n            x: action.widget.actualX,\n            y: action.widget.actualY,\n            width: action.widget.actualWidth,\n            height: action.widget.actualHeight\n        };\n\n        // update widget based on the handle being dragged\n        switch (action.direction) {\n\n            case ActionDirection.Right:\n                dimensions.width += mouseX;\n                break;\n\n            case ActionDirection.Left:\n                dimensions.x += mouseX;\n                dimensions.width -= mouseX;\n\n                if (dimensions.width < this._options.minWidth) {\n                    let /** @type {?} */ difference = this._options.minWidth - dimensions.width;\n                    dimensions.x -= difference;\n                    dimensions.width += difference;\n                }\n\n                break;\n\n            case ActionDirection.Bottom:\n                dimensions.height += mouseY;\n                break;\n\n            case ActionDirection.Top:\n                dimensions.y += mouseY;\n                dimensions.height -= mouseY;\n\n                if (dimensions.height < this._options.minHeight) {\n                    let /** @type {?} */ difference = this._options.minHeight - dimensions.height;\n                    dimensions.y -= difference;\n                    dimensions.height += difference;\n                }\n                break;\n\n            // Support resizing on multiple axis simultaneously\n            case ActionDirection.TopLeft:\n\n                dimensions.x += mouseX;\n                dimensions.width -= mouseX;\n\n                if (dimensions.width < this._options.minWidth) {\n                    let /** @type {?} */ difference = this._options.minWidth - dimensions.width;\n                    dimensions.x -= difference;\n                    dimensions.width += difference;\n                }\n\n                dimensions.y += mouseY;\n                dimensions.height -= mouseY;\n\n                if (dimensions.height < this._options.minHeight) {\n                    let /** @type {?} */ difference = this._options.minHeight - dimensions.height;\n                    dimensions.y -= difference;\n                    dimensions.height += difference;\n                }\n                break;\n\n            case ActionDirection.TopRight:\n                dimensions.width += mouseX;\n                dimensions.y += mouseY;\n                dimensions.height -= mouseY;\n\n                if (dimensions.height < this._options.minHeight) {\n                    let /** @type {?} */ difference = this._options.minHeight - dimensions.height;\n                    dimensions.y -= difference;\n                    dimensions.height += difference;\n                }\n                break;\n\n            case ActionDirection.BottomLeft:\n                dimensions.height += mouseY;\n                dimensions.x += mouseX;\n                dimensions.width -= mouseX;\n\n                if (dimensions.width < this._options.minWidth) {\n                    let /** @type {?} */ difference = this._options.minWidth - dimensions.width;\n                    dimensions.x -= difference;\n                    dimensions.width += difference;\n                }\n                break;\n\n            case ActionDirection.BottomRight:\n                dimensions.height += mouseY;\n                dimensions.width += mouseX;\n                break;\n        }\n\n        let /** @type {?} */ currentWidth = action.widget.actualX + action.widget.actualWidth;\n        let /** @type {?} */ currentHeight = action.widget.actualY + action.widget.actualHeight;\n\n        // ensure values are within the dashboard bounds\n        if (dimensions.x < 0) {\n            dimensions.x = 0;\n            dimensions.width = currentWidth;\n        }\n\n        if (dimensions.y < 0) {\n            dimensions.y = 0;\n            dimensions.height = currentHeight;\n        }\n\n        if ((dimensions.x + dimensions.width) > this._dimensions.width) {\n            dimensions.width = this._dimensions.width - dimensions.x;\n        }\n\n        if ((dimensions.y + dimensions.height) > this._dimensions.height) {\n            dimensions.height = currentHeight;\n        }\n\n        // if the proposed width is smaller than allowed then reset width to minimum and ignore x changes\n        if (dimensions.width < this._options.minWidth) {\n            dimensions.x = action.widget.actualX;\n            dimensions.width = this._options.minWidth;\n        }\n\n        // if the proposed height is smaller than allowed then reset height to minimum and ignore y changes\n        if (dimensions.height < this._options.minHeight) {\n            dimensions.y = action.widget.actualY;\n            dimensions.height = this._options.minHeight;\n        }\n\n        // update the widget actual values\n        action.widget.setBounds(dimensions.x, dimensions.y, dimensions.width, dimensions.height);\n\n        // update placeholder position and value\n        this.setPlaceholderBounds(true, dimensions.x, dimensions.y, dimensions.width, dimensions.height);\n\n        // show the widget positions if the current positions and sizes were to persist\n        this.updateWidgetPositions(action.widget);\n    }\n/**\n * @return {?}\n */\nonResizeEnd(): void {\n\n        // commit resize changes\n        this.commitWidgetChanges();\n\n        // hide placeholder\n        this.getPlaceholder().visible = false;\n\n        this._actionWidget = null;\n        this._mouseEvent = null;\n\n        // ensure any vacant upper spaces are filled where required\n        this.shiftWidgetsUp();\n\n        // update dashboard height\n        this.setDashboardHeight();\n\n        // emit information about the layout\n        this.layout.next(this.getLayoutData());\n    }\n/**\n * @param {?} action\n * @return {?}\n */\nonDragStart(action: DashboardAction): void {\n        this.onResizeStart(action);\n\n        // store the starting placeholder position\n        this.setWidgetOrigin();\n\n        this.cacheWidgets();\n    }\n/**\n * @return {?}\n */\nonDragEnd(): void {\n        this.onResizeEnd();\n\n        this._widgetOrigin = {};\n    }\n/**\n * @param {?} action\n * @return {?}\n */\nonDrag(action: DashboardAction): void {\n\n        // if there was no movement then do nothing\n        if (action.event.pageX === this._mouseEvent.pageX && action.event.pageY === this._mouseEvent.pageY) {\n            return;\n        }\n\n        // get the current mouse position\n        let /** @type {?} */ mouseX = action.event.pageX - this._mouseEvent.pageX;\n        let /** @type {?} */ mouseY = action.event.pageY - this._mouseEvent.pageY;\n\n        // store the latest event\n        this._mouseEvent = action.event;\n\n        let /** @type {?} */ dimensions: DashboardWidgetDimensions = {\n            x: action.widget.actualX + mouseX,\n            y: action.widget.actualY + mouseY,\n            width: action.widget.actualWidth,\n            height: action.widget.actualHeight\n        };\n\n        this.restoreWidgets(true);\n\n        // update widget position\n        action.widget.setBounds(dimensions.x, dimensions.y, dimensions.width, dimensions.height);\n\n        // update placeholder position and value\n        this.setPlaceholderBounds(true, dimensions.x, dimensions.y, dimensions.width, dimensions.height);\n\n        // show the widget positions if the current positions and sizes were to persist\n        this.shiftWidgets();\n\n        this.setDashboardHeight();\n    }\n/**\n * @return {?}\n */\ncacheWidgets(): void {\n        this._cache = this._widgets.map(widget => {\n            return {\n                id: widget.getId(),\n                column: widget.getColumn(),\n                row: widget.getRow()\n            };\n        });\n    }\n/**\n * @param {?=} ignoreActionWidget\n * @return {?}\n */\nrestoreWidgets(ignoreActionWidget: boolean = false): void {\n        this._cache.filter(widget => !ignoreActionWidget || widget.id !== this._actionWidget.widget.getId()).forEach(widget => {\n            let /** @type {?} */ match = this._widgets.find(wgt => wgt.getId() === widget.id);\n\n            if (match) {\n                match.setColumn(widget.column);\n                match.setRow(widget.row);\n            }\n        });\n    }\n/**\n * When dragging any widgets that need to be moved should be moved to an appropriate position\n * @return {?}\n */\nshiftWidgets(): void {\n\n        let /** @type {?} */ widgetsToMove: DashboardWidgetComponent[] = [];\n\n        // check if there are any widgets under the placeholder\n        for (let /** @type {?} */ row = this.getPlaceholder().row; row < this.getPlaceholder().row + this.getPlaceholder().rowSpan; row++) {\n            for (let /** @type {?} */ column = this.getPlaceholder().column; column < this.getPlaceholder().column + this.getPlaceholder().columnSpan; column++) {\n\n                // store reference to any widgets that need moved\n                this.getOccupiedSpaces()\n                    .filter(space => space.column === column && space.row === row && space.widget !== this._actionWidget.widget)\n                    .forEach(space => widgetsToMove.push(space.widget));\n            }\n        }\n\n        // remove any duplicates\n        widgetsToMove = widgetsToMove.filter((widget, idx, array) => array.indexOf(widget) === idx);\n\n        // if no widgets need moved then we can stop here\n        if (widgetsToMove.length === 0) {\n            return;\n        }\n\n        // create a duplicate we can use to keep track of which have been moved\n        let /** @type {?} */ unmovedWidgets = widgetsToMove.slice();\n\n        // attempt to move any widgets to the previous widget position\n        widgetsToMove.forEach(widget => {\n\n            // get a grid off all occupied spaces - taking into account the placeholder and ignoring widgets that need moved\n            let /** @type {?} */ grid = this.getOccupiedSpaces().filter(space => !unmovedWidgets.find(wgt => wgt === space.widget));\n\n            // iterate each free block\n            for (let /** @type {?} */ row = this._widgetOrigin.row; row < this._widgetOrigin.row + this._widgetOrigin.rowSpan; row++) {\n                for (let /** @type {?} */ column = this._widgetOrigin.column; column < this._widgetOrigin.column + this._widgetOrigin.columnSpan; column++) {\n\n                    // determine if the block can fit in this space\n                    let /** @type {?} */ requiredSpaces = this.getRequiredSpacesFromPoint(widget, column, row);\n\n                    // check if widget would fit in space\n                    let /** @type {?} */ available = requiredSpaces.every(space => {\n                        return !grid.find(gridSpace => gridSpace.column === space.column && gridSpace.row === space.row) && space.column < this.getColumnCount();\n                    });\n\n                    if (available) {\n                        widget.setColumn(column);\n                        widget.setRow(row);\n                        unmovedWidgets.splice(unmovedWidgets.findIndex(wgt => wgt === widget), 1);\n                        return;\n                    }\n                }\n            }\n\n            // if we get to here then we can't simply swap the positions - next try moving right\n            if (this.canWidgetMoveRight(widget, true)) {\n\n                // after the shift check if placeholder position is still valid\n                this.validatePlaceholderPosition(ActionDirection.Right);\n                return;\n            }\n\n            // next try moving left\n            if (this.canWidgetMoveLeft(widget, true)) {\n\n                // after the shift check if placeholder position is still valid\n                this.validatePlaceholderPosition(ActionDirection.Left);\n                return;\n            }\n\n            // determine the distance that the widget needs to be moved down\n            let /** @type {?} */ distance = (this._actionWidget.widget.getRow() - widget.getRow()) + this._actionWidget.widget.getRowSpan();\n\n            // as a last resort move the widget downwards\n            this.moveWidgetDown(widget, distance);\n        });\n    }\n/**\n * After shifts have taken place we should verify the place holder position is still valid\n * @param {?} shiftDirection - the position widgets were shifted\n * @return {?}\n */\nvalidatePlaceholderPosition(shiftDirection: ActionDirection) {\n\n        // check if the placeholder is over a widget\n        if (this.getWidgetsAtPosition(this.getPlaceholder().column, this.getPlaceholder().row, true).length > 0) {\n\n            // move the placeholder the opposite direction\n            switch (shiftDirection) {\n\n                case ActionDirection.Left:\n                    this.setPlaceholderBounds(this.getPlaceholder().visible, this.getPlaceholder().x + this.getColumnWidth(), this.getPlaceholder().y, this.getPlaceholder().width, this.getPlaceholder().height);\n                    break;\n\n                case ActionDirection.Right:\n                    this.setPlaceholderBounds(this.getPlaceholder().visible, this.getPlaceholder().x - this.getColumnWidth(), this.getPlaceholder().y, this.getPlaceholder().width, this.getPlaceholder().height);\n                    break;\n            }\n\n            // validate this new position again\n            this.validatePlaceholderPosition(shiftDirection);\n        }\n    }\n/**\n * Determine if a widget can be moved left - or if it can move the widgets to the right to make space for the widget\n * @param {?} widget\n * @param {?=} performMove\n * @return {?}\n */\ncanWidgetMoveLeft(widget: DashboardWidgetComponent, performMove: boolean = false): boolean {\n\n        // check if the widget is the action widget or occupies the first column\n        if (widget === this._actionWidget.widget || widget.getColumn() === 0) {\n            return false;\n        }\n\n        // find the positions required\n        let /** @type {?} */ targetSpaces = this.getOccupiedSpaces().filter(space => space.widget === widget).map(space => {\n            return { column: space.column - widget.getColumnSpan(), row: space.row, widget: space.widget };\n        });\n\n        // check if there are widget in the required positions and if so, can they move right?\n        let /** @type {?} */ moveable = targetSpaces.every(space => this.getWidgetsAtPosition(space.column, space.row).filter(wgt => wgt !== space.widget).every(wgt => this.canWidgetMoveLeft(wgt)));\n\n        if (performMove && moveable) {\n\n            // move all widgets to the right\n            targetSpaces.forEach(space => this.getWidgetsAtPosition(space.column, space.row).filter(wgt => wgt !== space.widget).forEach(wgt => this.canWidgetMoveLeft(wgt, true)));\n\n            // move current widget to the right\n            widget.setColumn(widget.getColumn() - 1);\n        }\n\n        return moveable;\n    }\n/**\n * Determine if a widget can be moved right - or if it can move the widgets to the right to make space for the widget\n * @param {?} widget\n * @param {?=} performMove\n * @return {?}\n */\ncanWidgetMoveRight(widget: DashboardWidgetComponent, performMove: boolean = false): boolean {\n\n        // check if the widget is the dragging widget or the widget occupies the final column\n        if (widget === this._actionWidget.widget || widget.getColumn() + widget.getColumnSpan() === this._options.columns) {\n            return false;\n        }\n\n        // find the positions required\n        let /** @type {?} */ targetSpaces = this.getOccupiedSpaces().filter(space => space.widget === widget).map(space => {\n            return { column: space.column + widget.getColumnSpan(), row: space.row, widget: space.widget };\n        });\n\n        // check if there are widget in the required positions and if so, can they move right?\n        let /** @type {?} */ moveable = targetSpaces.every(space => this.getWidgetsAtPosition(space.column, space.row).filter(wgt => wgt !== space.widget).every(wgt => this.canWidgetMoveRight(wgt)));\n\n        if (performMove && moveable) {\n\n            // move all widgets to the right\n            targetSpaces.forEach(space => this.getWidgetsAtPosition(space.column, space.row).filter(wgt => wgt !== space.widget).forEach(wgt => this.canWidgetMoveRight(wgt, true)));\n\n            // move current widget to the right\n            widget.setColumn(widget.getColumn() + 1);\n        }\n\n        return moveable;\n    }\n/**\n * Store the initial position of the widget being dragged\n * @return {?}\n */\nsetWidgetOrigin(): void {\n        this._widgetOrigin = {\n            column: this._actionWidget.widget.getColumn(),\n            row: this._actionWidget.widget.getRow(),\n            columnSpan: this._actionWidget.widget.getColumnSpan(),\n            rowSpan: this._actionWidget.widget.getRowSpan()\n        };\n    }\n/**\n * Calculate all the required positions is a widget was to be positioned at a particular point\n * @param {?} widget\n * @param {?} column\n * @param {?} row\n * @return {?}\n */\ngetRequiredSpacesFromPoint(widget: DashboardWidgetComponent, column: number, row: number): DashboardSpace[] {\n        let /** @type {?} */ spaces: DashboardSpace[] = [];\n\n        for (let /** @type {?} */ y = row; y < row + widget.getRowSpan(); y++) {\n            for (let /** @type {?} */ x = column; x < column + widget.getColumnSpan(); x++) {\n                spaces.push({ column: x, row: y, widget: widget });\n            }\n        }\n\n        return spaces;\n    }\n/**\n * Position widgets based on the position of the placeholder - this is temporary until confirmed\n * @param {?} widget\n * @return {?}\n */\nupdateWidgetPositions(widget: DashboardWidgetComponent) {\n\n        // check all spaces the placeholder will occupy and move any widget currently in them down\n        for (let /** @type {?} */ column = this._placeholder.column; column < this._placeholder.column + this._placeholder.columnSpan; column++) {\n            for (let /** @type {?} */ row = this._placeholder.row; row < this._placeholder.row + this._placeholder.rowSpan; row++) {\n\n                this.getWidgetsAtPosition(column, row, true)\n                    .filter(wgt => wgt !== widget)\n                    .forEach(wgt => this.moveWidgetDown(wgt));\n            }\n        }\n\n        // update the height of the dashboard\n        this.setDashboardHeight();\n\n        // if we arent dragging the top handle then fill spaces\n        if (this._actionWidget.direction !== ActionDirection.Top &&\n            this._actionWidget.direction !== ActionDirection.TopLeft &&\n            this._actionWidget.direction !== ActionDirection.TopRight) {\n            this.shiftWidgetsUp();\n        }\n    }\n/**\n * Determine if a widget is occupying a specific row and column\n * @param {?} column The columns to check if occupied\n * @param {?} row The row to check if occupied\n * @param {?=} ignoreResizing Whether or not to ignore the widget currently being resized\n * @return {?}\n */\ngetWidgetsAtPosition(column: number, row: number, ignoreResizing: boolean = false): DashboardWidgetComponent[] {\n        return this.getOccupiedSpaces()\n            .filter(space => space.column === column && space.row === row)\n            .filter(space => space.widget !== this._actionWidget.widget || !ignoreResizing)\n            .map(space => space.widget);\n    }\n/**\n * Update the placeholder visibility, position and size\n * @param {?} visible\n * @param {?} x\n * @param {?} y\n * @param {?} width\n * @param {?} height\n * @return {?}\n */\nsetPlaceholderBounds(visible: boolean, x: number, y: number, width: number, height: number): void {\n\n        let /** @type {?} */ rounding = this._actionWidget.direction === ActionDirection.Left ||\n            this._actionWidget.direction === ActionDirection.Top ? Rounding.RoundDownBelowHalf : Rounding.RoundUpOverHalf;\n\n        this._placeholder.visible = visible;\n\n        this._placeholder.column = this.getPlaceholderColumn(x, width);\n        this._placeholder.row = this.getPlaceholderRow(y, height);\n        this._placeholder.columnSpan = this.getPlaceholderColumnSpan(width);\n        this._placeholder.rowSpan = this.getPlaceholderRowSpan(height);\n\n        // calculate the maximum number of rows\n        let /** @type {?} */ rowCount = this._widgets.filter(widget => widget !== this._actionWidget.widget)\n            .reduce((previous, widget) => Math.max(widget.getRow() + widget.getRowSpan(), previous), 0);\n\n        // constrain maximum placeholder row\n        this._placeholder.row = Math.min(this._placeholder.row, rowCount);\n\n        this._placeholder.x = (this._placeholder.column * this.getColumnWidth()) + this._options.padding;\n        this._placeholder.y = (this._placeholder.row * this.getRowHeight()) + this._options.padding;\n        this._placeholder.width = (this._placeholder.columnSpan * this.getColumnWidth()) - (this._options.padding * 2);\n        this._placeholder.height = (this._placeholder.rowSpan * this.getRowHeight()) - (this._options.padding * 2);\n\n        // set the values of the widget to match the values of the placeholder - however do not render the changes\n        this._actionWidget.widget.setColumn(this._placeholder.column, false);\n        this._actionWidget.widget.setRow(this._placeholder.row, false);\n        this._actionWidget.widget.setColumnSpan(this._placeholder.columnSpan, false);\n        this._actionWidget.widget.setRowSpan(this._placeholder.rowSpan, false);\n    }\n/**\n * Get the placeholder column position\n * @param {?} x\n * @param {?} width\n * @return {?}\n */\ngetPlaceholderColumn(x: number, width: number): number {\n\n        let /** @type {?} */ column = this.getColumnFromPx(x, this._actionWidget.direction === ActionDirection.Move ? Rounding.RoundUpOverHalf : Rounding.RoundDown);\n        let /** @type {?} */ columnSpan = Math.floor(width / this.getColumnWidth());\n        let /** @type {?} */ upperLimit = this.getColumnCount() - columnSpan;\n\n        // if we arent dragging left then just return the column\n        if (this._actionWidget.direction !== ActionDirection.Left &&\n            this._actionWidget.direction !== ActionDirection.TopLeft &&\n            this._actionWidget.direction !== ActionDirection.BottomLeft) {\n            return Math.max(Math.min(column, upperLimit), 0);\n        }\n\n        // get any overflow\n        let /** @type {?} */ overflow = width % this.getColumnWidth();\n\n        return (x <= 0 || overflow === 0 || columnSpan === 0 || overflow > (this.getColumnWidth() / 2)) ?\n            Math.max(Math.min(column, upperLimit), 0) :\n            Math.max(Math.min(column + 1, upperLimit), 0);\n    }\n/**\n * Get the column span of the placeholder\n * @param {?} width\n * @return {?}\n */\ngetPlaceholderColumnSpan(width: number): number {\n\n        let /** @type {?} */ columnSpan = this.getColumnFromPx(width);\n\n        // if we arent dragging right or left then just return the column span\n        if (this._actionWidget.direction !== ActionDirection.Right &&\n            this._actionWidget.direction !== ActionDirection.TopRight &&\n            this._actionWidget.direction !== ActionDirection.BottomRight &&\n            this._actionWidget.direction !== ActionDirection.Left &&\n            this._actionWidget.direction !== ActionDirection.TopLeft &&\n            this._actionWidget.direction !== ActionDirection.BottomLeft) {\n            return Math.max(columnSpan, 1);\n        }\n\n        // get the current column span and any overflow\n        let /** @type {?} */ overflow = width % this.getColumnWidth();\n\n        return (columnSpan > 0 && overflow > (this.getColumnWidth() / 2)) ? Math.max(columnSpan + 1, 1) : Math.max(columnSpan, 1);\n    }\n/**\n * Get the row position of the placeholder\n * @param {?} y\n * @param {?} height\n * @return {?}\n */\ngetPlaceholderRow(y: number, height: number): number {\n\n        let /** @type {?} */ row = this.getRowFromPx(y, this._actionWidget.direction === ActionDirection.Move ? Rounding.RoundUpOverHalf : Rounding.RoundDown);\n        let /** @type {?} */ rowSpan = Math.ceil(height / this.getRowHeight());\n\n        // if we arent dragging up then just return the row\n        if (this._actionWidget.direction !== ActionDirection.Top &&\n            this._actionWidget.direction !== ActionDirection.TopLeft &&\n            this._actionWidget.direction !== ActionDirection.TopRight) {\n            return Math.max(row, 0);\n        }\n\n        // get any overflow\n        let /** @type {?} */ overflow = height < this.getRowHeight() ? 0 : height % this.getRowHeight();\n\n        return (y <= 0 || rowSpan === 0 || overflow === 0 || overflow > (this.getRowHeight() / 2)) ? Math.max(row, 0) : Math.max(row + 1, 0);\n    }\n/**\n * Get the row span of the placeholder\n * @param {?} height\n * @return {?}\n */\ngetPlaceholderRowSpan(height: number): number {\n\n        let /** @type {?} */ rowSpan = this.getRowFromPx(height);\n\n        // if we arent dragging up or down then just return the column span\n        if (this._actionWidget.direction !== ActionDirection.Top &&\n            this._actionWidget.direction !== ActionDirection.TopLeft &&\n            this._actionWidget.direction !== ActionDirection.TopRight &&\n            this._actionWidget.direction !== ActionDirection.Bottom &&\n            this._actionWidget.direction !== ActionDirection.BottomLeft &&\n            this._actionWidget.direction !== ActionDirection.BottomRight) {\n            return Math.max(rowSpan, 1);\n        }\n\n        // get the current column span and any overflow\n        let /** @type {?} */ overflow = height % this.getRowHeight();\n\n        return (overflow > (this.getRowHeight() / 2)) ? Math.max(rowSpan + 1, 1) : Math.max(rowSpan, 1);\n    }\n/**\n * @param {?} x\n * @param {?=} rounding\n * @return {?}\n */\ngetColumnFromPx(x: number, rounding: Rounding = Rounding.RoundDown): number {\n\n        let /** @type {?} */ column = Math.floor(x / Math.floor(this.getColumnWidth()));\n        let /** @type {?} */ overflow = (x % Math.floor(this.getColumnWidth()));\n        let /** @type {?} */ half = this.getColumnWidth() / 2;\n\n        switch (rounding) {\n\n            case Rounding.RoundDown:\n                return column;\n\n            case Rounding.RoundDownBelowHalf:\n                return overflow < half ? column : column + 1;\n\n            case Rounding.RoundUpOverHalf:\n                return overflow > half ? column + 1 : column;\n\n            case Rounding.RoundUp:\n                return overflow > 0 ? column + 1 : column;\n        }\n\n    }\n/**\n * @param {?} y\n * @param {?=} rounding\n * @return {?}\n */\ngetRowFromPx(y: number, rounding: Rounding = Rounding.RoundDown): number {\n\n        let /** @type {?} */ row = Math.floor(y / Math.floor(this.getRowHeight()));\n        let /** @type {?} */ overflow = (y % Math.floor(this.getRowHeight()));\n        let /** @type {?} */ half = this.getRowHeight() / 2;\n\n        switch (rounding) {\n\n            case Rounding.RoundDown:\n                return row;\n\n            case Rounding.RoundDownBelowHalf:\n                return overflow < half ? row : row + 1;\n\n            case Rounding.RoundUpOverHalf:\n                return overflow > half ? row + 1 : row;\n\n            case Rounding.RoundUp:\n                return overflow > 0 ? row + 1 : row;\n        }\n    }\n/**\n * @return {?}\n */\ncommitWidgetChanges(): void {\n\n        // check that we have all the values we need\n        if (this._placeholder.column === undefined || this._placeholder.row === undefined ||\n            this._placeholder.columnSpan === undefined || this._placeholder.rowSpan === undefined) {\n            return;\n        }\n\n        if (this._actionWidget) {\n            this._actionWidget.widget.setColumn(this._placeholder.column);\n            this._actionWidget.widget.setRow(this._placeholder.row);\n            this._actionWidget.widget.setColumnSpan(this._placeholder.columnSpan);\n            this._actionWidget.widget.setRowSpan(this._placeholder.rowSpan);\n        }\n\n        // reset all placeholder values\n        this._placeholder.column = undefined;\n        this._placeholder.row = undefined;\n        this._placeholder.columnSpan = undefined;\n        this._placeholder.rowSpan = undefined;\n    }\n/**\n * @return {?}\n */\ngetPlaceholder(): DashboardPlaceholder {\n        return this._placeholder;\n    }\n/**\n * Get the current column width\n * @return {?}\n */\ngetColumnWidth(): number {\n        return Math.floor(this._columnWidth);\n    }\n/**\n * Get the current column height\n * @return {?}\n */\ngetRowHeight(): number {\n        return this._rowHeight;\n    }\n/**\n * Calculate the number of rows populated with widgets\n * @return {?}\n */\ngetRowCount(): number {\n        return this._widgets.reduce((previous, widget) => Math.max(widget.getRow() + widget.getRowSpan(), previous), 0);\n    }\n/**\n * Set the height of the dashboard container element\n * @return {?}\n */\nsetDashboardHeight(): void {\n\n        // size the dashboard container to ensure all rows fit\n        let /** @type {?} */ rowCount = this.getRowCount();\n\n        // if we should show an empty row increment the row count by 1\n        if (this._options.emptyRow) {\n            rowCount++;\n        }\n\n        this._dimensions.height = rowCount * this.getRowHeight();\n        this.height.next(this._dimensions.height);\n    }\n/**\n * Orders the z-index of all widgets to move the active one to the front\n * @param {?} widget The widget that should be brought to the front\n * @return {?}\n */\nbringToFront(widget: DashboardWidgetComponent): void {\n        this._widgets.forEach(wgt => wgt.sendToBack());\n        widget.bringToFront();\n    }\n/**\n * Move a widget down - if widgets are in the position below, then move them down further\n * @param {?} widget The widget to move downwards\n * @param {?=} distance\n * @return {?}\n */\nmoveWidgetDown(widget: DashboardWidgetComponent, distance: number = 1): void {\n\n        // move the widget down one position\n        widget.setRow(widget.getRow() + distance);\n\n        // check every space the widget occupies for collisions\n        this.forEachBlock(widget, (column, row) =>\n            this.getWidgetsAtPosition(column, row, true)\n                .filter(wgt => wgt !== widget)\n                .forEach(wgt => this.moveWidgetDown(wgt, distance)));\n    }\n/**\n * Widgets should not be allowed to have a vacant space above them - if there is one they should move upwards to fill it\n * @return {?}\n */\nshiftWidgetsUp(): void {\n\n        // check whether or not changes have been made - if so we need to repeat until stable\n        let /** @type {?} */ stable = true;\n\n        // iterate each widget and \n        this._widgets.forEach(widget => {\n\n            // if widget is already on the top row then do nothing\n            if (widget.getRow() === 0) {\n                return;\n            }\n\n            // if we are currently dragging and this is the dragging widget then skip\n            if (this._actionWidget && this._actionWidget.widget === widget) {\n                return;\n            }\n\n            if (this.getPositionAvailable(widget.getColumn(), widget.getRow() - 1, widget.getColumnSpan(), 1)) {\n                widget.setRow(widget.getRow() - 1);\n                stable = false;\n            }\n        });\n\n        // if changes occurred then we should repeat the process\n        if (!stable) {\n            this.shiftWidgetsUp();\n        }\n    }\n/**\n * Iterate over each space a widget occupied\n * @param {?} widget The widget to determine spaces\n * @param {?} callback The function to be called for each space, should expect a column and row argument witht he context being the widget\n * @return {?}\n */\nforEachBlock(widget: DashboardWidgetComponent, callback: (column: number, row: number) => void): void {\n        for (let /** @type {?} */ row = widget.getRow(); row < widget.getRow() + widget.getRowSpan(); row++) {\n            for (let /** @type {?} */ column = widget.getColumn(); column < widget.getColumn() + widget.getColumnSpan(); column++) {\n                callback.call(widget, column, row);\n            }\n        }\n    }\n/**\n * Returns the number of columns available\n * @return {?}\n */\ngetColumnCount(): number {\n        return this._stacked ? 1 : this._options.columns;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction DashboardService_tsickle_Closure_declarations() {\n/** @type {?} */\nDashboardService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDashboardService.ctorParameters;\n/** @type {?} */\nDashboardService.prototype._dashboard;\n/** @type {?} */\nDashboardService.prototype._widgets;\n/** @type {?} */\nDashboardService.prototype._options;\n/** @type {?} */\nDashboardService.prototype._options$;\n/** @type {?} */\nDashboardService.prototype._placeholder;\n/** @type {?} */\nDashboardService.prototype._widgetOrigin;\n/** @type {?} */\nDashboardService.prototype._dimensions;\n/** @type {?} */\nDashboardService.prototype._actionWidget;\n/** @type {?} */\nDashboardService.prototype._columnWidth;\n/** @type {?} */\nDashboardService.prototype._rowHeight;\n/** @type {?} */\nDashboardService.prototype._stacked;\n/** @type {?} */\nDashboardService.prototype._cache;\n/** @type {?} */\nDashboardService.prototype._mouseEvent;\n/** @type {?} */\nDashboardService.prototype._defaultOptions;\n/** @type {?} */\nDashboardService.prototype.height;\n/** @type {?} */\nDashboardService.prototype.layout;\n}\n\n\nexport interface DashboardDimensions {\n    width?: number;\n    height?: number;\n}\n\nexport interface DashboardWidgetDimensions {\n    x: number;\n    y: number;\n    width: number;\n    height: number;\n}\n\nexport interface DashboardAction {\n    widget: DashboardWidgetComponent;\n    direction: ActionDirection;\n    event: MouseEvent;\n}\n\nexport interface DashboardSpace {\n    widget: DashboardWidgetComponent;\n    column: number;\n    row: number;\n}\n\nexport interface DashboardPlaceholder {\n    visible: boolean;\n    x: number;\n    y: number;\n    width: number;\n    height: number;\n    column?: number;\n    row?: number;\n    columnSpan?: number;\n    rowSpan?: number;\n}\n\nexport interface DashboardCache {\n    id: string;\n    column: number;\n    row: number;\n}\n\nexport interface DashboardLayoutData {\n    id: string;\n    col: number;\n    row: number;\n    colSpan: number;\n    rowSpan: number;\n}\nexport type ActionDirection = number;\nexport let ActionDirection: any = {};\nActionDirection.Top = 0;\nActionDirection.TopRight = 1;\nActionDirection.Right = 2;\nActionDirection.BottomRight = 3;\nActionDirection.Bottom = 4;\nActionDirection.BottomLeft = 5;\nActionDirection.Left = 6;\nActionDirection.TopLeft = 7;\nActionDirection.Move = 8;\nActionDirection[ActionDirection.Top] = \"Top\";\nActionDirection[ActionDirection.TopRight] = \"TopRight\";\nActionDirection[ActionDirection.Right] = \"Right\";\nActionDirection[ActionDirection.BottomRight] = \"BottomRight\";\nActionDirection[ActionDirection.Bottom] = \"Bottom\";\nActionDirection[ActionDirection.BottomLeft] = \"BottomLeft\";\nActionDirection[ActionDirection.Left] = \"Left\";\nActionDirection[ActionDirection.TopLeft] = \"TopLeft\";\nActionDirection[ActionDirection.Move] = \"Move\";\n\nexport type Rounding = number;\nexport let Rounding: any = {};\nRounding.RoundDown = 0;\nRounding.RoundDownBelowHalf = 1;\nRounding.RoundUp = 2;\nRounding.RoundUpOverHalf = 3;\nRounding[Rounding.RoundDown] = \"RoundDown\";\nRounding[Rounding.RoundDownBelowHalf] = \"RoundDownBelowHalf\";\nRounding[Rounding.RoundUp] = \"RoundUp\";\nRounding[Rounding.RoundUpOverHalf] = \"RoundUpOverHalf\";\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Input, OnInit, DoCheck, ElementRef, AfterViewInit, NgZone, EventEmitter, Output } from '@angular/core';\nimport { DashboardService, DashboardLayoutData, DashboardPlaceholder } from './dashboard.service';\nimport { ResizeDimensions } from '../../directives/resize/resize.service';\nexport class DashboardComponent implements OnInit, DoCheck, AfterViewInit {\n\n     options: DashboardOptions = {};\n     layout: DashboardLayoutData[];\n     layoutChange: EventEmitter<DashboardLayoutData[]> = new EventEmitter<DashboardLayoutData[]>();\n\n    height: number = 0;\n    placeholder: DashboardPlaceholder = this._dashboardService.getPlaceholder();\nprivate _nativeElement: HTMLElement;\nprivate _options: DashboardOptions;\nprivate _layout: DashboardLayoutData[];\n/**\n * @param {?} _dashboardService\n * @param {?} _elementRef\n * @param {?} _ngZone\n */\nconstructor(private _dashboardService: DashboardService,\nprivate _elementRef: ElementRef,\nprivate _ngZone: NgZone) {\n        this._nativeElement = _elementRef.nativeElement;\n        this._dashboardService.setDashboard(this._nativeElement);\n\n        // watch for changes to component height\n        this._dashboardService.height.subscribe(height => this.height = height);\n\n        // subscribe to layout changes\n        this._dashboardService.layout.subscribe(layout => {\n            this.layout = layout;\n            this.layoutChange.emit(layout);\n        });\n    }\n/**\n * @return {?}\n */\nngOnInit(): void {\n        this.setOptions(this.options);\n    }\n/**\n * @return {?}\n */\nngDoCheck(): void {\n\n        // get the current set of options\n        let /** @type {?} */ options = Object.assign({}, this._dashboardService.getDefaultOptions(), this.options);\n\n        // if anything has changed then update them\n        if (JSON.stringify(this._dashboardService.getOptions()) !== JSON.stringify(options)) {\n            this.setOptions(options);\n        }\n\n        // check if the layout has changed\n        if (JSON.stringify(this.layout) !== JSON.stringify(this._layout)) {\n            this._layout = this.layout.slice();\n            this._dashboardService.setLayoutData(this.layout);\n        }\n    }\n/**\n * @return {?}\n */\nngAfterViewInit(): void {\n        // initially set dimensions\n        this._dashboardService.setDimensions(this._nativeElement.offsetWidth, this._nativeElement.offsetHeight);\n    }\n/**\n * @param {?} options\n * @return {?}\n */\nsetOptions(options: DashboardOptions): void {\n        this._dashboardService.setOptions(options);\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nonResize(event: ResizeDimensions): void {\n        // ensure this gets run inside Angular\n        this._ngZone.run(() => this._dashboardService.setDimensions(event.width, event.height));\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-dashboard',\n    template: `\n      <div (uxResize)=\"onResize($event)\" throttle=\"16\" class=\"dashboard-container\">\n          <ng-content></ng-content>\n      </div>\n\n      <div class=\"position-indicator\" *ngIf=\"placeholder.visible\" [style.left.px]=\"placeholder.x\" [style.top.px]=\"placeholder.y\" [style.width.px]=\"placeholder.width\"\n          [style.height.px]=\"placeholder.height\"></div>\n    `,\n    providers: [DashboardService],\n    host: {\n        '[style.height.px]': 'height'\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: DashboardService, },\n{type: ElementRef, },\n{type: NgZone, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'options': [{ type: Input },],\n'layout': [{ type: Input },],\n'layoutChange': [{ type: Output },],\n};\n}\n\nfunction DashboardComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nDashboardComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDashboardComponent.ctorParameters;\n/** @type {?} */\nDashboardComponent.propDecorators;\n/** @type {?} */\nDashboardComponent.prototype.options;\n/** @type {?} */\nDashboardComponent.prototype.layout;\n/** @type {?} */\nDashboardComponent.prototype.layoutChange;\n/** @type {?} */\nDashboardComponent.prototype.height;\n/** @type {?} */\nDashboardComponent.prototype.placeholder;\n/** @type {?} */\nDashboardComponent.prototype._nativeElement;\n/** @type {?} */\nDashboardComponent.prototype._options;\n/** @type {?} */\nDashboardComponent.prototype._layout;\n/** @type {?} */\nDashboardComponent.prototype._dashboardService;\n/** @type {?} */\nDashboardComponent.prototype._elementRef;\n/** @type {?} */\nDashboardComponent.prototype._ngZone;\n}\n\n\nexport interface DashboardOptions {\n    columns?: number;\n    padding?: number;\n    minWidth?: number;\n    minHeight?: number;\n    rowHeight?: number;\n    emptyRow?: boolean;\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Input, ElementRef, QueryList, ViewChildren, Directive, AfterViewInit, OnInit, OnDestroy } from '@angular/core';\nimport { DashboardService, ActionDirection } from '../dashboard.service';\nimport { Observable } from 'rxjs/Observable';\nimport { Subscription } from 'rxjs/Subscription';\nimport'rxjs/add/operator/takeUntil';\nexport class DashboardWidgetComponent implements OnInit, AfterViewInit, OnDestroy {\n\n     id: string;\n     col: number;\n     row: number;\n     colSpan: number = 1;\n     rowSpan: number = 1;\n     resizable: boolean = false;\n\n    actualX: number = 0;\n    actualY: number = 0;\n    actualWidth: number = 100;\n    actualHeight: number = 100;\n    padding: number = 0;\n    zIndex: number = 0;\n    stacked: boolean = false;\nprivate _column: StackableValue = { regular: undefined, stacked: undefined };\nprivate _row: StackableValue = { regular: undefined, stacked: undefined };\nprivate _columnSpan: StackableValue = { regular: 1, stacked: 1 };\nprivate _rowSpan: StackableValue = { regular: 1, stacked: 1 };\nprivate _nativeElement: HTMLElement;\nprivate _handles: ResizeHandle[];\nprivate _dragMove: Observable<MouseEvent> = Observable.fromEvent(document, 'mousemove');\nprivate _dragEnd: Observable<MouseEvent> = Observable.fromEvent(document, 'mouseup');\n/**\n * @param {?} _dashboardService\n * @param {?} _elementRef\n */\nconstructor(private _dashboardService: DashboardService,\nprivate _elementRef: ElementRef) {\n        this._nativeElement = _elementRef.nativeElement;\n\n        // add the widget to the dashboard\n        _dashboardService.addWidget(this);\n\n        // apply the current options\n        this.applyOptions();\n\n        // watch for changes to the options\n        _dashboardService.options().subscribe(opts => this.applyOptions());\n    }\n/**\n * @return {?}\n */\nngOnInit(): void {\n\n        // check to ensure values are numbers and not strings\n        if (typeof this.col === 'string') {\n            this.col = parseFloat(this.col);\n        }\n\n        if (typeof this.row === 'string') {\n            this.row = parseFloat(this.row);\n        }\n\n        if (typeof this.colSpan === 'string') {\n            this.colSpan = parseFloat(this.colSpan);\n        }\n\n        if (typeof this.rowSpan === 'string') {\n            this.rowSpan = parseFloat(this.rowSpan);\n        }\n\n        this._columnSpan.regular = this.colSpan;\n        this._rowSpan.regular = this.rowSpan;\n\n        if (!this.id) {\n            console.warn('Dashboard Widget is missing an ID.');\n\n            // set random id - keeps things working but prevents exporting of positions\n            this.id = Math.floor(Math.random() * 100000).toString();\n        }\n    }\n/**\n * Once component is initialised link the resize handle elements with their direction\n * @return {?}\n */\nngAfterViewInit(): void {\n        this.initialiseHandles();\n    }\n/**\n * If component is removed, then unregister it from the service\n * @return {?}\n */\nngOnDestroy(): void {\n        this._dashboardService.removeWidget(this);\n    }\n/**\n * Return the ID of the widget\n * @return {?}\n */\ngetId(): string {\n        return this.id;\n    }\n/**\n * Apply the current dashboard options\n * @return {?}\n */\napplyOptions(): void {\n\n        // get the current options at the time \n        let /** @type {?} */ options = this._dashboardService.getOptions();\n\n        // only update the values if options have been defined\n        if (options) {\n            // apply the initial options\n            this.padding = options.padding;\n            this._columnSpan.stacked = options.columns;\n        }\n    }\n/**\n * Set the actual position and size values\n * @return {?}\n */\nrender(): void {\n        this.actualX = this.getColumn() * this._dashboardService.getColumnWidth();\n        this.actualY = this.getRow() * this._dashboardService.getRowHeight();\n        this.actualWidth = this.getColumnSpan() * this._dashboardService.getColumnWidth();\n        this.actualHeight = this.getRowSpan() * this._dashboardService.getRowHeight();\n    }\n/**\n * Returns all the resize handles and their associated directions\n * @return {?}\n */\ngetHandles(): ResizeHandle[] {\n        return this._handles;\n    }\n/**\n * Indicates whether or not the widget should be displayed in stacked mode\n * @param {?} stacked indicates the stacked mode\n * @return {?}\n */\nsetStacked(stacked: boolean): void {\n        this.stacked = stacked;\n    }\n/**\n * @return {?}\n */\ngetColumn(): number {\n        return this.getStackableValue(this._column);\n    }\n/**\n * @return {?}\n */\ngetRow(): number {\n        return this.getStackableValue(this._row);\n    }\n/**\n * @param {?} column\n * @param {?=} render\n * @return {?}\n */\nsetColumn(column: number, render: boolean = true): void {\n        this.setStackableValue(this._column, column);\n\n        if (render) {\n            this.render();\n        }\n    }\n/**\n * @param {?} row\n * @param {?=} render\n * @return {?}\n */\nsetRow(row: number, render: boolean = true): void {\n        this.setStackableValue(this._row, row);\n\n        if (render) {\n            this.render();\n        }\n    }\n/**\n * @return {?}\n */\ngetColumnSpan(): number {\n        return this.getStackableValue(this._columnSpan);\n    }\n/**\n * @return {?}\n */\ngetRowSpan(): number {\n        return this.getStackableValue(this._rowSpan);\n    }\n/**\n * @param {?} columnSpan\n * @param {?=} render\n * @return {?}\n */\nsetColumnSpan(columnSpan: number, render: boolean = true): void {\n        this.setStackableValue(this._columnSpan, columnSpan);\n\n        if (render) {\n            this.render();\n        }\n    }\n/**\n * @param {?} rowSpan\n * @param {?=} render\n * @return {?}\n */\nsetRowSpan(rowSpan: number, render: boolean = true): void {\n        this.setStackableValue(this._rowSpan, rowSpan);\n\n        if (render) {\n            this.render();\n        }\n    }\n/**\n * @return {?}\n */\nbringToFront(): void {\n        this.zIndex = 1;\n    }\n/**\n * @return {?}\n */\nsendToBack(): void {\n        this.zIndex = 0;\n    }\n/**\n * @param {?} x\n * @param {?} y\n * @param {?} width\n * @param {?} height\n * @return {?}\n */\nsetBounds(x: number, y: number, width: number, height: number): void {\n        this.actualX = x;\n        this.actualY = y;\n        this.actualWidth = width;\n        this.actualHeight = height;\n    }\n/**\n * Allows automatic setting of stackable value\n * @param {?} property The current StackableValue object\n * @param {?} value The value to set in the appropriate field\n * @return {?}\n */\nprivate setStackableValue(property: StackableValue, value: number): void {\n        if (this.stacked) {\n            property.stacked = value;\n        } else {\n            property.regular = value;\n        }\n    }\n/**\n * Return the appropriate value from a stackable value\n * @param {?} property The Stackable value object\n * @return {?}\n */\nprivate getStackableValue(property: StackableValue): number {\n        return this.stacked ? property.stacked : property.regular;\n    }\n/**\n * Create data representations of the resize handle elements and the direction they will resize in\n * @return {?}\n */\nprivate initialiseHandles() {\n\n        this._handles = [\n            {\n                element: this._nativeElement.querySelector('.resizer-handle.handle-top'),\n                direction: ActionDirection.Top\n            },\n            {\n                element: this._nativeElement.querySelector('.resizer-handle.handle-top-right'),\n                direction: ActionDirection.TopRight\n            },\n            {\n                element: this._nativeElement.querySelector('.resizer-handle.handle-right'),\n                direction: ActionDirection.Right\n            },\n            {\n                element: this._nativeElement.querySelector('.resizer-handle.handle-bottom-right'),\n                direction: ActionDirection.BottomRight\n            },\n            {\n                element: this._nativeElement.querySelector('.resizer-handle.handle-bottom'),\n                direction: ActionDirection.Bottom\n            },\n            {\n                element: this._nativeElement.querySelector('.resizer-handle.handle-bottom-left'),\n                direction: ActionDirection.BottomLeft\n            },\n            {\n                element: this._nativeElement.querySelector('.resizer-handle.handle-left'),\n                direction: ActionDirection.Left\n            },\n            {\n                element: this._nativeElement.querySelector('.resizer-handle.handle-top-left'),\n                direction: ActionDirection.TopLeft\n            }\n        ];\n\n        // bind resize events to each handle\n        this._handles.forEach(handle => this.bindResize(handle));\n    }\n/**\n * This will apply event listeners to each resize handle\n * @param {?} handle The element and direction to subscribe to\n * @return {?}\n */\nprivate bindResize(handle: ResizeHandle): void {\n\n        // bind to resize events\n        handle.listener = Observable.fromEvent(handle.element, 'mousedown').subscribe((downEvent: MouseEvent) => {\n\n            downEvent.preventDefault();\n\n            // inform service that we are beginning to drag\n            this._dashboardService.onResizeStart({ widget: this, direction: handle.direction, event: downEvent });\n\n            let /** @type {?} */ move$ = this._dragMove.takeUntil(this._dragEnd).subscribe((moveEvent: MouseEvent) => {\n                moveEvent.preventDefault();\n                this._dashboardService.onResizeDrag({ widget: this, direction: handle.direction, event: moveEvent });\n            }, null, () => {\n                move$.unsubscribe();\n                this._dashboardService.onResizeEnd();\n            });\n\n        });\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-dashboard-widget',\n    template: `\n      <div class=\"widget-content widget-col-span-{{ getColumnSpan() }} widget-row-span-{{ getRowSpan() }}\">\n          <ng-content></ng-content>\n      </div>\n\n      <div class=\"resizer-handle handle-top\" [style.top.px]=\"padding\" [hidden]=\"!resizable\"></div>\n      <div class=\"resizer-handle handle-top-right\" [style.top.px]=\"padding\" [style.right.px]=\"padding\" [hidden]=\"!resizable && !stacked\"></div>\n      <div class=\"resizer-handle handle-right\" [style.right.px]=\"padding\" [hidden]=\"!resizable || stacked\"></div>\n      <div class=\"resizer-handle handle-bottom-right\" [style.bottom.px]=\"padding\" [style.right.px]=\"padding\" [hidden]=\"!resizable && !stacked\"></div>\n      <div class=\"resizer-handle handle-bottom\" [style.bottom.px]=\"padding\" [hidden]=\"!resizable\"></div>\n      <div class=\"resizer-handle handle-bottom-left\" [style.bottom.px]=\"padding\" [style.left.px]=\"padding\" [hidden]=\"!resizable && !stacked\"></div>\n      <div class=\"resizer-handle handle-left\" [style.left.px]=\"padding\" [hidden]=\"!resizable || stacked\"></div>\n      <div class=\"resizer-handle handle-top-left\" [style.top.px]=\"padding\" [style.left.px]=\"padding\" [hidden]=\"!resizable && !stacked\"></div>\n    `,\n    host: {\n        '[style.left.px]': 'actualX',\n        '[style.top.px]': 'actualY',\n        '[style.width.px]': 'actualWidth',\n        '[style.height.px]': 'actualHeight',\n        '[style.padding.px]': 'padding',\n        '[style.zIndex]': 'zIndex'\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: DashboardService, },\n{type: ElementRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'id': [{ type: Input },],\n'col': [{ type: Input },],\n'row': [{ type: Input },],\n'colSpan': [{ type: Input },],\n'rowSpan': [{ type: Input },],\n'resizable': [{ type: Input },],\n};\n}\n\nfunction DashboardWidgetComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nDashboardWidgetComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDashboardWidgetComponent.ctorParameters;\n/** @type {?} */\nDashboardWidgetComponent.propDecorators;\n/** @type {?} */\nDashboardWidgetComponent.prototype.id;\n/** @type {?} */\nDashboardWidgetComponent.prototype.col;\n/** @type {?} */\nDashboardWidgetComponent.prototype.row;\n/** @type {?} */\nDashboardWidgetComponent.prototype.colSpan;\n/** @type {?} */\nDashboardWidgetComponent.prototype.rowSpan;\n/** @type {?} */\nDashboardWidgetComponent.prototype.resizable;\n/** @type {?} */\nDashboardWidgetComponent.prototype.actualX;\n/** @type {?} */\nDashboardWidgetComponent.prototype.actualY;\n/** @type {?} */\nDashboardWidgetComponent.prototype.actualWidth;\n/** @type {?} */\nDashboardWidgetComponent.prototype.actualHeight;\n/** @type {?} */\nDashboardWidgetComponent.prototype.padding;\n/** @type {?} */\nDashboardWidgetComponent.prototype.zIndex;\n/** @type {?} */\nDashboardWidgetComponent.prototype.stacked;\n/** @type {?} */\nDashboardWidgetComponent.prototype._column;\n/** @type {?} */\nDashboardWidgetComponent.prototype._row;\n/** @type {?} */\nDashboardWidgetComponent.prototype._columnSpan;\n/** @type {?} */\nDashboardWidgetComponent.prototype._rowSpan;\n/** @type {?} */\nDashboardWidgetComponent.prototype._nativeElement;\n/** @type {?} */\nDashboardWidgetComponent.prototype._handles;\n/** @type {?} */\nDashboardWidgetComponent.prototype._dragMove;\n/** @type {?} */\nDashboardWidgetComponent.prototype._dragEnd;\n/** @type {?} */\nDashboardWidgetComponent.prototype._dashboardService;\n/** @type {?} */\nDashboardWidgetComponent.prototype._elementRef;\n}\n\n\nexport interface ResizeHandle {\n    element: Element;\n    direction: ActionDirection;\n    listener?: Subscription;\n}\n\nexport interface StackableValue {\n    regular: number;\n    stacked: number;\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, Host, ElementRef } from '@angular/core';\nimport { DashboardWidgetComponent } from '../widget/dashboard-widget.component';\nimport { Observable } from 'rxjs/Observable';\nimport { DashboardService, ActionDirection } from '../dashboard.service';\nexport class DashboardDragHandleDirective {\nprivate _dragMove: Observable<MouseEvent> = Observable.fromEvent(document, 'mousemove');\nprivate _dragEnd: Observable<MouseEvent> = Observable.fromEvent(document, 'mouseup');\n/**\n * @param {?} widget\n * @param {?} elementRef\n * @param {?} dashboardService\n */\nconstructor(  widget: DashboardWidgetComponent, elementRef: ElementRef, dashboardService: DashboardService) {\n\n        Observable.fromEvent(elementRef.nativeElement, 'mousedown').subscribe((downEvent: MouseEvent) => {\n\n            downEvent.preventDefault();\n\n            // inform service that we are beginning to drag\n            dashboardService.onDragStart({ widget: widget, direction: ActionDirection.Move, event: downEvent });\n\n            let move$ = this._dragMove.takeUntil(this._dragEnd).subscribe((moveEvent: MouseEvent) => {\n                moveEvent.preventDefault();\n\n                dashboardService.onDrag({ widget: widget, direction: ActionDirection.Move, event: moveEvent });\n            }, null, () => {\n                move$.unsubscribe();\n                dashboardService.onDragEnd();\n            });\n\n        });\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: '[uxDashboardWidgetDragHandle], [ux-dashboard-widget-drag-handle]'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: DashboardWidgetComponent, decorators: [{ type: Host }, ]},\n{type: ElementRef, },\n{type: DashboardService, },\n];\n}\n\nfunction DashboardDragHandleDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nDashboardDragHandleDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDashboardDragHandleDirective.ctorParameters;\n/** @type {?} */\nDashboardDragHandleDirective.prototype._dragMove;\n/** @type {?} */\nDashboardDragHandleDirective.prototype._dragEnd;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable, Renderer2 } from '@angular/core';\nimport { Subject } from 'rxjs/Subject';\nimport { Observable } from 'rxjs/Observable';\nimport'rxjs/add/observable/fromEvent';\nexport class ResizeService {\n/**\n * @param {?} nativeElement\n * @param {?} renderer\n * @return {?}\n */\naddResizeListener(nativeElement: HTMLElement, renderer: Renderer2): Subject<ResizeDimensions> {\n\n        // create subject\n        let /** @type {?} */ subject = new Subject<ResizeDimensions>();\n\n        // determine the style of the element\n        let /** @type {?} */ displayMode = window.getComputedStyle(nativeElement).getPropertyValue('display');\n\n        // create the iframe element\n        let /** @type {?} */ iframe: HTMLIFrameElement = renderer.createElement('iframe');\n\n        // style the iframe to be invisible but fill containing element\n        renderer.setStyle(iframe, 'position', 'absolute');\n        renderer.setStyle(iframe, 'width', '100%');\n        renderer.setStyle(iframe, 'height', '100%');\n        renderer.setStyle(iframe, 'top', '0');\n        renderer.setStyle(iframe, 'right', '0');\n        renderer.setStyle(iframe, 'bottom', '0');\n        renderer.setStyle(iframe, 'left', '0');\n        renderer.setStyle(iframe, 'z-index', '-1');\n        renderer.setStyle(iframe, 'opacity', '0');\n        renderer.setStyle(iframe, 'border', 'none');\n        renderer.setStyle(iframe, 'margin', '0');\n        renderer.setStyle(iframe, 'pointer-events', 'none');\n        renderer.setStyle(iframe, 'overflow', 'hidden');\n\n        // ensure the iframe ignores any tabbing\n        renderer.setAttribute(iframe, 'tabindex', '-1');\n\n        // statically positioned elements need changed to relative for this method to work\n        if (displayMode !== 'relative' && displayMode !== 'absolute' && displayMode !== 'fixed') {\n            renderer.setStyle(nativeElement, 'position', 'relative');\n        }\n\n        // add the iframe to the container element\n        renderer.appendChild(nativeElement, iframe);\n\n\n        this.waitUntilReady(iframe, () => {\n            let /** @type {?} */ iframeDoc = iframe.contentDocument || /** @type {?} */(( iframe.contentWindow.document as HTMLDocument));\n\n            let /** @type {?} */ attachListener = function () {\n                Observable.fromEvent(iframe.contentWindow, 'resize').subscribe((event: ResizeDimensions) => {\n\n                    subject.next({\n                        width: nativeElement.offsetWidth,\n                        height: nativeElement.offsetHeight\n                    });\n                });\n            };\n\n            if (iframeDoc.readyState === 'complete') {\n                attachListener();\n            } else {\n\n                // wait for iframe to load\n                iframe.addEventListener('load', () => attachListener());\n            }\n        });\n\n\n        return subject;\n    }\n/**\n * @param {?} iframe\n * @param {?} callback\n * @return {?}\n */\nprivate waitUntilReady(iframe: HTMLIFrameElement, callback: () => void) {\n        if (iframe.contentDocument || iframe.contentWindow) {\n            callback.call(this);\n        } else {\n            setTimeout(() => this.waitUntilReady(iframe, callback));\n        }\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ResizeService_tsickle_Closure_declarations() {\n/** @type {?} */\nResizeService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nResizeService.ctorParameters;\n}\n\n\nexport interface ResizeDimensions {\n    width: number;\n    height: number;\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, Output, EventEmitter, ElementRef, Input, Renderer2 } from '@angular/core';\nimport { ResizeService, ResizeDimensions } from './resize.service';\nimport'rxjs/add/operator/debounceTime';\nexport class ResizeDirective {\n\n     throttle: number = 0;\n     resize: EventEmitter<ResizeDimensions> = new EventEmitter<ResizeDimensions>();\n/**\n * @param {?} _elementRef\n * @param {?} _resizeService\n * @param {?} _renderer\n */\nconstructor(private _elementRef: ElementRef,\nprivate _resizeService: ResizeService,\nprivate _renderer: Renderer2) { }\n/**\n * @return {?}\n */\nngOnInit(): void {\n        this._resizeService.addResizeListener(this._elementRef.nativeElement, this._renderer)\n            .debounceTime(this.throttle)\n            .subscribe(event => this.resize.emit(event));\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: '[uxResize]'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: ResizeService, },\n{type: Renderer2, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'throttle': [{ type: Input },],\n'resize': [{ type: Output, args: ['uxResize', ] },],\n};\n}\n\nfunction ResizeDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nResizeDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nResizeDirective.ctorParameters;\n/** @type {?} */\nResizeDirective.propDecorators;\n/** @type {?} */\nResizeDirective.prototype.throttle;\n/** @type {?} */\nResizeDirective.prototype.resize;\n/** @type {?} */\nResizeDirective.prototype._elementRef;\n/** @type {?} */\nResizeDirective.prototype._resizeService;\n/** @type {?} */\nResizeDirective.prototype._renderer;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\n\nimport { ResizeDirective } from './resize.directive';\nimport { ResizeService } from './resize.service';\nexport class ResizeModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    exports: [ResizeDirective],\n    declarations: [ResizeDirective],\n    providers: [ResizeService]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ResizeModule_tsickle_Closure_declarations() {\n/** @type {?} */\nResizeModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nResizeModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DashboardComponent } from './dashboard.component';\nimport { DashboardWidgetComponent } from './widget/dashboard-widget.component';\nimport { DashboardService } from './dashboard.service';\nimport { DashboardDragHandleDirective } from './drag-handle/drag-handle.directive';\nimport { ResizeModule } from '../../directives/resize/index';\n\nconst /** @type {?} */ DECLARATIONS: any[] = [\n    DashboardComponent,\n    DashboardWidgetComponent,\n    DashboardDragHandleDirective\n];\nexport class DashboardModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        CommonModule,\n        ResizeModule\n    ],\n    exports: DECLARATIONS,\n    declarations: DECLARATIONS,\n    providers: [DashboardService],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction DashboardModule_tsickle_Closure_declarations() {\n/** @type {?} */\nDashboardModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDashboardModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable } from '@angular/core';\nimport { Action } from '../../mini-ngrx/index';\nimport {\n  TimeChangeEvent,\n  TimepickerComponentState,\n  Time\n} from '../timepicker.models';\n\n\nexport class TimepickerActions {\n  static readonly WRITE_VALUE = '[timepicker] write value from ng model';\n  static readonly CHANGE_HOURS = '[timepicker] change hours';\n  static readonly CHANGE_MINUTES = '[timepicker] change minutes';\n  static readonly CHANGE_SECONDS = '[timepicker] change seconds';\n  static readonly SET_TIME_UNIT = '[timepicker] set time unit';\n  static readonly UPDATE_CONTROLS = '[timepicker] update controls';\n\n  writeValue(value: Date | string) {\n    return {\n      type: TimepickerActions.WRITE_VALUE,\n      payload: value\n    };\n  }\n\n  changeHours(event: TimeChangeEvent) {\n    return {\n      type: TimepickerActions.CHANGE_HOURS,\n      payload: event\n    };\n  }\n\n  changeMinutes(event: TimeChangeEvent) {\n    return {\n      type: TimepickerActions.CHANGE_MINUTES,\n      payload: event\n    };\n  }\n\n  changeSeconds(event: TimeChangeEvent): Action {\n    return {\n      type: TimepickerActions.CHANGE_SECONDS,\n      payload: event\n    };\n  }\n\n  setTime(value: Time): Action {\n    return {\n      type: TimepickerActions.SET_TIME_UNIT,\n      payload: value\n    };\n  }\n\n  updateControls(value: TimepickerComponentState): Action {\n    return {\n      type: TimepickerActions.UPDATE_CONTROLS,\n      payload: value\n    };\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable } from '@angular/core';\n\n/** Provides default configuration values for timepicker */\n\nexport class TimepickerConfig {\n  /** hours change step */\n  hourStep = 1;\n  /** hours change step */\n  minuteStep = 5;\n  /** seconds changes step */\n  secondsStep = 10;\n  /** if true works in 12H mode and displays AM/PM. If false works in 24H mode and hides AM/PM */\n  showMeridian = true;\n  /** meridian labels based on locale */\n  meridians = ['AM', 'PM'];\n  /** if true hours and minutes fields will be readonly */\n  readonlyInput = false;\n  /** if true scroll inside hours and minutes inputs will change time */\n  mousewheel = true;\n  /** if true up/down arrowkeys inside hours and minutes inputs will change time */\n  arrowkeys = true;\n  /** if true spinner arrows above and below the inputs will be shown */\n  showSpinners = true;\n  /** show seconds in timepicker */\n  showSeconds = false;\n  /** minimum time user can select */\n  min: Date;\n  /** maximum time user can select */\n  max: Date;\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @copyright ngrx\n */\nimport { Observable } from 'rxjs/Observable';\nimport { Observer } from 'rxjs/Observer';\nimport { Operator } from 'rxjs/Operator';\nimport { distinctUntilChanged } from 'rxjs/operator/distinctUntilChanged';\n\nimport { map } from 'rxjs/operator/map';\nimport { Action, ActionReducer } from './index';\n\nexport class MiniStore<T> extends Observable<T> implements Observer<Action> {\n  constructor(\n    private _dispatcher: Observer<Action>,\n    private _reducer: ActionReducer<any>,\n    state$: Observable<any>\n  ) {\n    super();\n\n    this.source = state$;\n  }\n\n  select<R>(pathOrMapFn: (state: T) => R): Observable<R> {\n    const mapped$: Observable<R> = map.call(this, pathOrMapFn);\n\n    return distinctUntilChanged.call(mapped$);\n  }\n\n  lift<R>(operator: Operator<T, R>): MiniStore<R> {\n    const store = new MiniStore<R>(this._dispatcher, this._reducer, this);\n    store.operator = operator;\n\n    return store;\n  }\n\n  dispatch(action: Action) {\n    this._dispatcher.next(action);\n  }\n\n  next(action: Action) {\n    this._dispatcher.next(action);\n  }\n\n  error(err: any) {\n    this._dispatcher.error(err);\n  }\n\n  complete() {\n    /*noop*/\n  }\n}\n","declare let global: any;\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\ndeclare var WorkerGlobalScope: any;\n// CommonJS / Node have global context exposed as \"global\" variable.\n// We don't want to include the whole node.d.ts this this compilation unit so we'll just fake\n// the global \"global\" var for now.\n\nconst __window = typeof window !== 'undefined' && window;\nconst __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n    self instanceof WorkerGlobalScope && self;\nconst __global = typeof global !== 'undefined' && global;\nconst _root: any = __window || __global || __self;\n\n// Workaround Closure Compiler restriction: The body of a goog.module cannot use throw.\n// This is needed when used with angular/tsickle which inserts a goog.module statement.\n// Wrap in IIFE\n(function () {\n  if (!_root) {\n    throw new Error('RxJS could not find any global context (window, self, global)');\n  }\n})();\n\nexport { _root as root };","export const isArray = Array.isArray || (<T>(x: any): x is T[] => x && typeof x.length === 'number');\n","export function isObject(x: any): x is Object {\n  return x != null && typeof x === 'object';\n}\n","export function isFunction(x: any): x is Function {\n  return typeof x === 'function';\n}\n","// typeof any so that it we don't have to cast when comparing a result to the error object\nexport const errorObject: any = { e: {} };","/**\n * An error thrown when one or more errors have occurred during the\n * `unsubscribe` of a {@link Subscription}.\n */\nexport class UnsubscriptionError extends Error {\n  constructor(public errors: any[]) {\n    super();\n    const err: any = Error.call(this, errors ?\n      `${errors.length} errors occurred during unsubscription:\n  ${errors.map((err, i) => `${i + 1}) ${err.toString()}`).join('\\n  ')}` : '');\n    (<any> this).name = err.name = 'UnsubscriptionError';\n    (<any> this).stack = err.stack;\n    (<any> this).message = err.message;\n  }\n}\n","import { Scheduler } from '../Scheduler';\nimport { Subscription } from '../Subscription';\n\n/**\n * A unit of work to be executed in a {@link Scheduler}. An action is typically\n * created from within a Scheduler and an RxJS user does not need to concern\n * themselves about creating and manipulating an Action.\n *\n * ```ts\n * class Action<T> extends Subscription {\n *   new (scheduler: Scheduler, work: (state?: T) => void);\n *   schedule(state?: T, delay: number = 0): Subscription;\n * }\n * ```\n *\n * @class Action<T>\n */\nexport class Action<T> extends Subscription {\n  constructor(scheduler: Scheduler, work: (this: Action<T>, state?: T) => void) {\n    super();\n  }\n  /**\n   * Schedules this action on its parent Scheduler for execution. May be passed\n   * some context object, `state`. May happen at some point in the future,\n   * according to the `delay` parameter, if specified.\n   * @param {T} [state] Some contextual data that the `work` function uses when\n   * called by the Scheduler.\n   * @param {number} [delay] Time to wait before executing the work, where the\n   * time unit is implicit and defined by the Scheduler.\n   * @return {void}\n   */\n  public schedule(state?: T, delay: number = 0): Subscription {\n    return this;\n  }\n}\n","import { root } from '../util/root';\nimport { Action } from './Action';\nimport { Subscription } from '../Subscription';\nimport { AsyncScheduler } from './AsyncScheduler';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class AsyncAction<T> extends Action<T> {\n\n  public id: any;\n  public state: T;\n  public delay: number;\n  protected pending: boolean = false;\n\n  constructor(protected scheduler: AsyncScheduler,\n              protected work: (this: AsyncAction<T>, state?: T) => void) {\n    super(scheduler, work);\n  }\n\n  public schedule(state?: T, delay: number = 0): Subscription {\n\n    if (this.closed) {\n      return this;\n     }\n\n    // Always replace the current state with the new state.\n    this.state = state;\n\n    // Set the pending flag indicating that this action has been scheduled, or\n    // has recursively rescheduled itself.\n    this.pending = true;\n\n    const id = this.id;\n    const scheduler = this.scheduler;\n\n    //\n    // Important implementation note:\n    //\n    // Actions only execute once by default, unless rescheduled from within the\n    // scheduled callback. This allows us to implement single and repeat\n    // actions via the same code path, without adding API surface area, as well\n    // as mimic traditional recursion but across asynchronous boundaries.\n    //\n    // However, JS runtimes and timers distinguish between intervals achieved by\n    // serial `setTimeout` calls vs. a single `setInterval` call. An interval of\n    // serial `setTimeout` calls can be individually delayed, which delays\n    // scheduling the next `setTimeout`, and so on. `setInterval` attempts to\n    // guarantee the interval callback will be invoked more precisely to the\n    // interval period, regardless of load.\n    //\n    // Therefore, we use `setInterval` to schedule single and repeat actions.\n    // If the action reschedules itself with the same delay, the interval is not\n    // canceled. If the action doesn't reschedule, or reschedules with a\n    // different delay, the interval will be canceled after scheduled callback\n    // execution.\n    //\n    if (id != null) {\n      this.id = this.recycleAsyncId(scheduler, id, delay);\n    }\n\n    this.delay = delay;\n    // If this action has already an async Id, don't request a new one.\n    this.id = this.id || this.requestAsyncId(scheduler, this.id, delay);\n\n    return this;\n  }\n\n  protected requestAsyncId(scheduler: AsyncScheduler, id?: any, delay: number = 0): any {\n    return root.setInterval(scheduler.flush.bind(scheduler, this), delay);\n  }\n\n  protected recycleAsyncId(scheduler: AsyncScheduler, id: any, delay: number = 0): any {\n    // If this action is rescheduled with the same delay time, don't clear the interval id.\n    if (delay !== null && this.delay === delay && this.pending === false) {\n      return id;\n    }\n    // Otherwise, if the action's delay time is different from the current delay,\n    // or the action has been rescheduled before it's executed, clear the interval id\n    return root.clearInterval(id) && undefined || undefined;\n  }\n\n  /**\n   * Immediately executes this action and the `work` it contains.\n   * @return {any}\n   */\n  public execute(state: T, delay: number): any {\n\n    if (this.closed) {\n      return new Error('executing a cancelled action');\n    }\n\n    this.pending = false;\n    const error = this._execute(state, delay);\n    if (error) {\n      return error;\n    } else if (this.pending === false && this.id != null) {\n      // Dequeue if the action didn't reschedule itself. Don't call\n      // unsubscribe(), because the action could reschedule later.\n      // For example:\n      // ```\n      // scheduler.schedule(function doWork(counter) {\n      //   /* ... I'm a busy worker bee ... */\n      //   var originalAction = this;\n      //   /* wait 100ms before rescheduling the action */\n      //   setTimeout(function () {\n      //     originalAction.schedule(counter + 1);\n      //   }, 100);\n      // }, 1000);\n      // ```\n      this.id = this.recycleAsyncId(this.scheduler, this.id, null);\n    }\n  }\n\n  protected _execute(state: T, delay: number): any {\n    let errored: boolean = false;\n    let errorValue: any = undefined;\n    try {\n      this.work(state);\n    } catch (e) {\n      errored = true;\n      errorValue = !!e && e || new Error(e);\n    }\n    if (errored) {\n      this.unsubscribe();\n      return errorValue;\n    }\n  }\n\n  protected _unsubscribe() {\n\n    const id = this.id;\n    const scheduler = this.scheduler;\n    const actions = scheduler.actions;\n    const index = actions.indexOf(this);\n\n    this.work  = null;\n    this.state = null;\n    this.pending = false;\n    this.scheduler = null;\n\n    if (index !== -1) {\n      actions.splice(index, 1);\n    }\n\n    if (id != null) {\n      this.id = this.recycleAsyncId(scheduler, id, null);\n    }\n\n    this.delay = null;\n  }\n}\n","import { AsyncAction } from './AsyncAction';\nimport { Subscription } from '../Subscription';\nimport { QueueScheduler } from './QueueScheduler';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class QueueAction<T> extends AsyncAction<T> {\n\n  constructor(protected scheduler: QueueScheduler,\n              protected work: (this: QueueAction<T>, state?: T) => void) {\n    super(scheduler, work);\n  }\n\n  public schedule(state?: T, delay: number = 0): Subscription {\n    if (delay > 0) {\n      return super.schedule(state, delay);\n    }\n    this.delay = delay;\n    this.state = state;\n    this.scheduler.flush(this);\n    return this;\n  }\n\n  public execute(state: T, delay: number): any {\n    return (delay > 0 || this.closed) ?\n      super.execute(state, delay) :\n      this._execute(state, delay) ;\n  }\n\n  protected requestAsyncId(scheduler: QueueScheduler, id?: any, delay: number = 0): any {\n    // If delay exists and is greater than 0, or if the delay is null (the\n    // action wasn't rescheduled) but was originally scheduled as an async\n    // action, then recycle as an async action.\n    if ((delay !== null && delay > 0) || (delay === null && this.delay > 0)) {\n      return super.requestAsyncId(scheduler, id, delay);\n    }\n    // Otherwise flush the scheduler starting with this action.\n    return scheduler.flush(this);\n  }\n}\n","import { Action } from './scheduler/Action';\nimport { Subscription } from './Subscription';\n\nexport interface IScheduler {\n  now(): number;\n  schedule<T>(work: (this: Action<T>, state?: T) => void, delay?: number, state?: T): Subscription;\n}\n/**\n * An execution context and a data structure to order tasks and schedule their\n * execution. Provides a notion of (potentially virtual) time, through the\n * `now()` getter method.\n *\n * Each unit of work in a Scheduler is called an {@link Action}.\n *\n * ```ts\n * class Scheduler {\n *   now(): number;\n *   schedule(work, delay?, state?): Subscription;\n * }\n * ```\n *\n * @class Scheduler\n */\nexport class Scheduler implements IScheduler {\n\n  public static now: () => number = Date.now ? Date.now : () => +new Date();\n\n  constructor(private SchedulerAction: typeof Action,\n              now: () => number = Scheduler.now) {\n    this.now = now;\n  }\n\n  /**\n   * A getter method that returns a number representing the current time\n   * (at the time this function was called) according to the scheduler's own\n   * internal clock.\n   * @return {number} A number that represents the current time. May or may not\n   * have a relation to wall-clock time. May or may not refer to a time unit\n   * (e.g. milliseconds).\n   */\n  public now: () => number;\n\n  /**\n   * Schedules a function, `work`, for execution. May happen at some point in\n   * the future, according to the `delay` parameter, if specified. May be passed\n   * some context object, `state`, which will be passed to the `work` function.\n   *\n   * The given arguments will be processed an stored as an Action object in a\n   * queue of actions.\n   *\n   * @param {function(state: ?T): ?Subscription} work A function representing a\n   * task, or some unit of work to be executed by the Scheduler.\n   * @param {number} [delay] Time to wait before executing the work, where the\n   * time unit is implicit and defined by the Scheduler itself.\n   * @param {T} [state] Some contextual data that the `work` function uses when\n   * called by the Scheduler.\n   * @return {Subscription} A subscription in order to be able to unsubscribe\n   * the scheduled work.\n   */\n  public schedule<T>(work: (this: Action<T>, state?: T) => void, delay: number = 0, state?: T): Subscription {\n    return new this.SchedulerAction<T>(this, work).schedule(state, delay);\n  }\n}\n","import { Scheduler } from '../Scheduler';\nimport { AsyncAction } from './AsyncAction';\n\nexport class AsyncScheduler extends Scheduler {\n  public actions: Array<AsyncAction<any>> = [];\n  /**\n   * A flag to indicate whether the Scheduler is currently executing a batch of\n   * queued actions.\n   * @type {boolean}\n   */\n  public active: boolean = false;\n  /**\n   * An internal ID used to track the latest asynchronous task such as those\n   * coming from `setTimeout`, `setInterval`, `requestAnimationFrame`, and\n   * others.\n   * @type {any}\n   */\n  public scheduled: any = undefined;\n\n  public flush(action: AsyncAction<any>): void {\n\n    const {actions} = this;\n\n    if (this.active) {\n      actions.push(action);\n      return;\n    }\n\n    let error: any;\n    this.active = true;\n\n    do {\n      if (error = action.execute(action.state, action.delay)) {\n        break;\n      }\n    } while (action = actions.shift()); // exhaust the scheduler queue\n\n    this.active = false;\n\n    if (error) {\n      while (action = actions.shift()) {\n        action.unsubscribe();\n      }\n      throw error;\n    }\n  }\n}\n","import { QueueAction } from './QueueAction';\nimport { QueueScheduler } from './QueueScheduler';\n\n/**\n *\n * Queue Scheduler\n *\n * <span class=\"informal\">Put every next task on a queue, instead of executing it immediately</span>\n *\n * `queue` scheduler, when used with delay, behaves the same as {@link async} scheduler.\n *\n * When used without delay, it schedules given task synchronously - executes it right when\n * it is scheduled. However when called recursively, that is when inside the scheduled task,\n * another task is scheduled with queue scheduler, instead of executing immediately as well,\n * that task will be put on a queue and wait for current one to finish.\n *\n * This means that when you execute task with `queue` scheduler, you are sure it will end\n * before any other task scheduled with that scheduler will start.\n *\n * @examples <caption>Schedule recursively first, then do something</caption>\n *\n * Rx.Scheduler.queue.schedule(() => {\n *   Rx.Scheduler.queue.schedule(() => console.log('second')); // will not happen now, but will be put on a queue\n *\n *   console.log('first');\n * });\n *\n * // Logs:\n * // \"first\"\n * // \"second\"\n *\n *\n * @example <caption>Reschedule itself recursively</caption>\n *\n * Rx.Scheduler.queue.schedule(function(state) {\n *   if (state !== 0) {\n *     console.log('before', state);\n *     this.schedule(state - 1); // `this` references currently executing Action,\n *                               // which we reschedule with new state\n *     console.log('after', state);\n *   }\n * }, 0, 3);\n *\n * // In scheduler that runs recursively, you would expect:\n * // \"before\", 3\n * // \"before\", 2\n * // \"before\", 1\n * // \"after\", 1\n * // \"after\", 2\n * // \"after\", 3\n *\n * // But with queue it logs:\n * // \"before\", 3\n * // \"after\", 3\n * // \"before\", 2\n * // \"after\", 2\n * // \"before\", 1\n * // \"after\", 1\n *\n *\n * @static true\n * @name queue\n * @owner Scheduler\n */\n\nexport const queue = new QueueScheduler(QueueAction);\n","import { AsyncScheduler } from './AsyncScheduler';\n\nexport class QueueScheduler extends AsyncScheduler {\n}\n","/**\n * @copyright ngrx\n */\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { Observable } from 'rxjs/Observable';\nimport { Action, ActionReducer } from './index';\nimport { observeOn } from 'rxjs/operator/observeOn';\nimport { queue } from 'rxjs/scheduler/queue';\nimport { scan } from 'rxjs/operator/scan';\n\nexport class MiniState<T> extends BehaviorSubject<T> {\n  constructor(\n    _initialState: T,\n    actionsDispatcher$: Observable<Action>,\n    reducer: ActionReducer<T>\n  ) {\n    super(_initialState);\n\n    const actionInQueue$ = observeOn.call(actionsDispatcher$, queue);\n    const state$ = scan.call(\n      actionInQueue$,\n      (state: T, action: Action) => {\n        if (!action) {\n          return state;\n        }\n\n        return reducer(state, action);\n      },\n      _initialState\n    );\n\n    state$.subscribe((value: T) => this.next(value));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  timepickerReducer,\n  TimepickerState,\n  initialState\n} from './timepicker.reducer';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\n\nimport { Action } from '../../mini-ngrx/index';\nimport { MiniStore } from '../../mini-ngrx/store.class';\nimport { MiniState } from '../../mini-ngrx/state.class';\n\n\nexport class TimepickerStore extends MiniStore<TimepickerState> {\n  constructor() {\n    const _dispatcher = new BehaviorSubject<Action>({\n      type: '[mini-ngrx] dispatcher init'\n    });\n    const state = new MiniState<TimepickerState>(\n      initialState,\n      _dispatcher,\n      timepickerReducer\n    );\n    super(_dispatcher, timepickerReducer, state);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/* tslint:disable:no-forward-ref max-file-line-count */\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  forwardRef,\n  Input,\n  OnChanges,\n  Output,\n  SimpleChanges, ViewEncapsulation\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nimport { TimepickerActions } from './reducer/timepicker.actions';\nimport { TimepickerStore } from './reducer/timepicker.store';\nimport { getControlsValue } from './timepicker-controls.util';\nimport { TimepickerConfig } from './timepicker.config';\nimport {\n  TimeChangeSource,\n  TimepickerComponentState,\n  TimepickerControls\n} from './timepicker.models';\nimport {\n  isValidDate,\n  padNumber,\n  parseTime,\n  isInputValid\n} from './timepicker.utils';\nimport { fakeAsync } from '@angular/core/testing';\n\nexport const TIMEPICKER_CONTROL_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  // tslint:disable-next-line\n  useExisting: forwardRef(() => TimepickerComponent),\n  multi: true\n};\n\n\nexport class TimepickerComponent\n  implements ControlValueAccessor,\n    TimepickerComponentState,\n    TimepickerControls,\n    OnChanges {\n  /** hours change step */\n   hourStep: number;\n  /** hours change step */\n   minuteStep: number;\n  /** seconds change step */\n   secondsStep: number;\n  /** if true hours and minutes fields will be readonly */\n   readonlyInput: boolean;\n  /** if true scroll inside hours and minutes inputs will change time */\n   mousewheel: boolean;\n  /** if true up/down arrowkeys inside hours and minutes inputs will change time */\n   arrowkeys: boolean;\n  /** if true spinner arrows above and below the inputs will be shown */\n   showSpinners: boolean;\n   showMeridian: boolean;\n   showSeconds: boolean;\n\n  /** meridian labels based on locale */\n   meridians: string[];\n\n  /** minimum time user can select */\n   min: Date;\n  /** maximum time user can select */\n   max: Date;\n\n  /** emits true if value is a valid date */\n   isValid: EventEmitter<boolean> = new EventEmitter();\n\n  // ui variables\n  hours: string;\n  minutes: string;\n  seconds: string;\n  meridian: string;\n\n  get isSpinnersVisible(): boolean {\n    return this.showSpinners && !this.readonlyInput;\n  }\n\n  // min\\max validation for input fields\n  invalidHours = false;\n  invalidMinutes = false;\n  invalidSeconds = false;\n\n  // time picker controls state\n  canIncrementHours: boolean;\n  canIncrementMinutes: boolean;\n  canIncrementSeconds: boolean;\n\n  canDecrementHours: boolean;\n  canDecrementMinutes: boolean;\n  canDecrementSeconds: boolean;\n\n  // control value accessor methods\n  onChange: any = Function.prototype;\n  onTouched: any = Function.prototype;\n\n  constructor(\n    _config: TimepickerConfig,\n    _cd: ChangeDetectorRef,\n    private _store: TimepickerStore,\n    private _timepickerActions: TimepickerActions\n  ) {\n    Object.assign(this, _config);\n    // todo: add unsubscribe\n    _store.select(state => state.value).subscribe(value => {\n      // update UI values if date changed\n      this._renderTime(value);\n      this.onChange(value);\n\n      this._store.dispatch(\n        this._timepickerActions.updateControls(getControlsValue(this))\n      );\n    });\n\n    _store.select(state => state.controls).subscribe(controlsState => {\n      this.isValid.emit(\n        isInputValid(this.hours, this.minutes, this.seconds, this.isPM())\n      );\n      Object.assign(this, controlsState);\n      _cd.markForCheck();\n    });\n  }\n\n  isPM(): boolean {\n    return this.showMeridian && this.meridian === this.meridians[1];\n  }\n\n  prevDef($event: any) {\n    $event.preventDefault();\n  }\n\n  wheelSign($event: any): number {\n    return Math.sign($event.deltaY as number) * -1;\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this._store.dispatch(\n      this._timepickerActions.updateControls(getControlsValue(this))\n    );\n  }\n\n  changeHours(step: number, source: TimeChangeSource = ''): void {\n    this._store.dispatch(this._timepickerActions.changeHours({ step, source }));\n  }\n\n  changeMinutes(step: number, source: TimeChangeSource = ''): void {\n    this._store.dispatch(\n      this._timepickerActions.changeMinutes({ step, source })\n    );\n  }\n\n  changeSeconds(step: number, source: TimeChangeSource = ''): void {\n    this._store.dispatch(\n      this._timepickerActions.changeSeconds({ step, source })\n    );\n  }\n\n  updateHours(hours: string): void {\n    this.hours = hours;\n    this._updateTime();\n  }\n\n  updateMinutes(minutes: string) {\n    this.minutes = minutes;\n    this._updateTime();\n  }\n\n  updateSeconds(seconds: string) {\n    this.seconds = seconds;\n    this._updateTime();\n  }\n\n  _updateTime() {\n    const _seconds = this.showSeconds ? this.seconds : void 0;\n    if (!isInputValid(this.hours, this.minutes, _seconds, this.isPM())) {\n      this.isValid.emit(false);\n      this.onChange(null);\n\n      return;\n    }\n    this._store.dispatch(\n      this._timepickerActions.setTime({\n        hour: this.hours,\n        minute: this.minutes,\n        seconds: this.seconds,\n        isPM: this.isPM()\n      })\n    );\n  }\n\n  toggleMeridian(): void {\n    if (!this.showMeridian || this.readonlyInput) {\n      return;\n    }\n\n    const _hoursPerDayHalf = 12;\n    this._store.dispatch(\n      this._timepickerActions.changeHours({\n        step: _hoursPerDayHalf,\n        source: ''\n      })\n    );\n  }\n\n  /**\n   * Write a new value to the element.\n   */\n  writeValue(obj: any): void {\n    if (isValidDate(obj)) {\n      this._store.dispatch(this._timepickerActions.writeValue(parseTime(obj)));\n    } else if (obj == null) {\n      this._store.dispatch(this._timepickerActions.writeValue(null));\n    }\n  }\n\n  /**\n   * Set the function to be called when the control receives a change event.\n   */\n  registerOnChange(fn: (_: any) => {}): void {\n    this.onChange = fn;\n  }\n\n  /**\n   * Set the function to be called when the control receives a touch event.\n   */\n  registerOnTouched(fn: () => {}): void {\n    this.onTouched = fn;\n  }\n\n  /**\n   * This function is called when the control status changes to or from \"DISABLED\".\n   * Depending on the value, it will enable or disable the appropriate DOM element.\n   *\n   * @param isDisabled\n   */\n  setDisabledState(isDisabled: boolean): void {\n    this.readonlyInput = isDisabled;\n  }\n\n  private _renderTime(value: string | Date): void {\n    if (!isValidDate(value)) {\n      this.hours = '';\n      this.minutes = '';\n      this.seconds = '';\n      this.meridian = this.meridians[0];\n\n      return;\n    }\n\n    const _value = parseTime(value);\n    const _hoursPerDayHalf = 12;\n    let _hours = _value.getHours();\n\n    if (this.showMeridian) {\n      this.meridian = this.meridians[_hours >= _hoursPerDayHalf ? 1 : 0];\n      _hours = _hours % _hoursPerDayHalf;\n      // should be 12 PM, not 00 PM\n      if (_hours === 0) {\n        _hours = _hoursPerDayHalf;\n      }\n    }\n\n    this.hours = padNumber(_hours);\n    this.minutes = padNumber(_value.getMinutes());\n    this.seconds = padNumber(_value.getUTCSeconds());\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'timepicker',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [TIMEPICKER_CONTROL_VALUE_ACCESSOR, TimepickerStore],\n  template: \"<table> <tbody> <tr class=\\\"text-center\\\" [class.hidden]=\\\"!isSpinnersVisible\\\"> <!-- increment hours button--> <td> <a class=\\\"btn btn-link\\\" [class.disabled]=\\\"!canIncrementHours\\\" (click)=\\\"changeHours(hourStep)\\\" ><span class=\\\"bs-chevron bs-chevron-up\\\"></span></a> </td> <!-- divider --> <td>&nbsp;&nbsp;&nbsp;</td> <!-- increment minutes button --> <td> <a class=\\\"btn btn-link\\\" [class.disabled]=\\\"!canIncrementMinutes\\\" (click)=\\\"changeMinutes(minuteStep)\\\" ><span class=\\\"bs-chevron bs-chevron-up\\\"></span></a> </td> <!-- divider --> <td *ngIf=\\\"showSeconds\\\">&nbsp;</td> <!-- increment seconds button --> <td *ngIf=\\\"showSeconds\\\"> <a class=\\\"btn btn-link\\\" [class.disabled]=\\\"!canIncrementSeconds\\\" (click)=\\\"changeSeconds(secondsStep)\\\"> <span class=\\\"bs-chevron bs-chevron-up\\\"></span> </a> </td> <!-- space between --> <td>&nbsp;&nbsp;&nbsp;</td> <!-- meridian placeholder--> <td *ngIf=\\\"showMeridian\\\"></td> </tr> <tr> <!-- hours --> <td class=\\\"form-group\\\" [class.has-error]=\\\"invalidHours\\\"> <input type=\\\"text\\\" class=\\\"form-control text-center bs-timepicker-field\\\" placeholder=\\\"HH\\\" maxlength=\\\"2\\\" [readonly]=\\\"readonlyInput\\\" [value]=\\\"hours\\\" (wheel)=\\\"prevDef($event);changeHours(hourStep * wheelSign($event), 'wheel')\\\" (keydown.ArrowUp)=\\\"changeHours(hourStep, 'key')\\\" (keydown.ArrowDown)=\\\"changeHours(-hourStep, 'key')\\\" (change)=\\\"updateHours($event.target.value)\\\"></td> <!-- divider --> <td>&nbsp;:&nbsp;</td> <!-- minutes --> <td class=\\\"form-group\\\" [class.has-error]=\\\"invalidMinutes\\\"> <input type=\\\"text\\\" class=\\\"form-control text-center bs-timepicker-field\\\" placeholder=\\\"MM\\\" maxlength=\\\"2\\\" [readonly]=\\\"readonlyInput\\\" [value]=\\\"minutes\\\" (wheel)=\\\"prevDef($event);changeMinutes(minuteStep * wheelSign($event), 'wheel')\\\" (keydown.ArrowUp)=\\\"changeMinutes(minuteStep, 'key')\\\" (keydown.ArrowDown)=\\\"changeMinutes(-minuteStep, 'key')\\\" (change)=\\\"updateMinutes($event.target.value)\\\"> </td> <!-- divider --> <td *ngIf=\\\"showSeconds\\\">&nbsp;:&nbsp;</td> <!-- seconds --> <td class=\\\"form-group\\\" *ngIf=\\\"showSeconds\\\" [class.has-error]=\\\"invalidSeconds\\\"> <input type=\\\"text\\\" class=\\\"form-control text-center bs-timepicker-field\\\" placeholder=\\\"SS\\\" maxlength=\\\"2\\\" [readonly]=\\\"readonlyInput\\\" [value]=\\\"seconds\\\" (wheel)=\\\"prevDef($event);changeSeconds(secondsStep * wheelSign($event), 'wheel')\\\" (keydown.ArrowUp)=\\\"changeSeconds(secondsStep, 'key')\\\" (keydown.ArrowDown)=\\\"changeSeconds(-secondsStep, 'key')\\\" (change)=\\\"updateSeconds($event.target.value)\\\"> </td> <!-- space between --> <td>&nbsp;&nbsp;&nbsp;</td> <!-- meridian --> <td *ngIf=\\\"showMeridian\\\"> <button type=\\\"button\\\" class=\\\"btn btn-default text-center\\\" [disabled]=\\\"readonlyInput\\\" [class.disabled]=\\\"readonlyInput\\\" (click)=\\\"toggleMeridian()\\\" >{{ meridian }} </button> </td> </tr> <tr class=\\\"text-center\\\" [class.hidden]=\\\"!isSpinnersVisible\\\"> <!-- decrement hours button--> <td> <a class=\\\"btn btn-link\\\" [class.disabled]=\\\"!canDecrementHours\\\" (click)=\\\"changeHours(-hourStep)\\\"> <span class=\\\"bs-chevron bs-chevron-down\\\"></span> </a> </td> <!-- divider --> <td>&nbsp;&nbsp;&nbsp;</td> <!-- decrement minutes button--> <td> <a class=\\\"btn btn-link\\\" [class.disabled]=\\\"!canDecrementMinutes\\\" (click)=\\\"changeMinutes(-minuteStep)\\\"> <span class=\\\"bs-chevron bs-chevron-down\\\"></span> </a> </td> <!-- divider --> <td *ngIf=\\\"showSeconds\\\">&nbsp;</td> <!-- decrement seconds button--> <td *ngIf=\\\"showSeconds\\\"> <a class=\\\"btn btn-link\\\" [class.disabled]=\\\"!canDecrementSeconds\\\" (click)=\\\"changeSeconds(-secondsStep)\\\"> <span class=\\\"bs-chevron bs-chevron-down\\\"></span> </a> </td> <!-- space between --> <td>&nbsp;&nbsp;&nbsp;</td> <!-- meridian placeholder--> <td *ngIf=\\\"showMeridian\\\"></td> </tr> </tbody> </table> \",\n  styles: [`\n    .bs-chevron{\n      border-style: solid;\n      display: block;\n      width: 9px;\n      height: 9px;\n      position: relative;\n      border-width: 3px 0px 0 3px;\n    }\n    .bs-chevron-up{\n      -webkit-transform: rotate(45deg);\n      transform: rotate(45deg);\n      top: 2px;\n    }\n    .bs-chevron-down{\n      -webkit-transform: rotate(-135deg);\n      transform: rotate(-135deg);\n      top: -2px;\n    }\n    .bs-timepicker-field{\n      width: 50px;\n    }\n  `],\n  encapsulation: ViewEncapsulation.None\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: TimepickerConfig, },\n{type: ChangeDetectorRef, },\n{type: TimepickerStore, },\n{type: TimepickerActions, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'hourStep': [{ type: Input },],\n'minuteStep': [{ type: Input },],\n'secondsStep': [{ type: Input },],\n'readonlyInput': [{ type: Input },],\n'mousewheel': [{ type: Input },],\n'arrowkeys': [{ type: Input },],\n'showSpinners': [{ type: Input },],\n'showMeridian': [{ type: Input },],\n'showSeconds': [{ type: Input },],\n'meridians': [{ type: Input },],\n'min': [{ type: Input },],\n'max': [{ type: Input },],\n'isValid': [{ type: Output },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { ModuleWithProviders, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { TimepickerComponent } from './timepicker.component';\nimport { TimepickerActions } from './reducer/timepicker.actions';\nimport { TimepickerConfig } from './timepicker.config';\nimport { TimepickerStore } from './reducer/timepicker.store';\n\n\nexport class TimepickerModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: TimepickerModule,\n      providers: [TimepickerConfig, TimepickerActions, TimepickerStore]\n    };\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  imports: [CommonModule],\n  declarations: [TimepickerComponent],\n  exports: [TimepickerComponent]\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","// tslint:disable:no-use-before-declare\nimport {\n  Directive,\n  HostBinding,\n  HostListener,\n  Input,\n  OnInit,\n  forwardRef\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\n// TODO: config: activeClass - Class to apply to the checked buttons\n\nexport const CHECKBOX_CONTROL_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => ButtonCheckboxDirective),\n  multi: true\n};\n\n/**\n * Add checkbox functionality to any element\n */\n\nexport class ButtonCheckboxDirective implements ControlValueAccessor, OnInit {\n  /** Truthy value, will be set to ngModel */\n   btnCheckboxTrue: any = true;\n  /** Falsy value, will be set to ngModel */\n   btnCheckboxFalse: any = false;\n\n   state = false;\n\n  protected value: any;\n  protected isDisabled: boolean;\n\n  protected onChange: any = Function.prototype;\n  protected onTouched: any = Function.prototype;\n\n  // view -> model\n  \n  onClick(): void {\n    if (this.isDisabled) {\n      return;\n    }\n\n    this.toggle(!this.state);\n    this.onChange(this.value);\n  }\n\n  ngOnInit(): any {\n    this.toggle(this.trueValue === this.value);\n  }\n\n  protected get trueValue(): boolean {\n    return typeof this.btnCheckboxTrue !== 'undefined'\n      ? this.btnCheckboxTrue\n      : true;\n  }\n\n  protected get falseValue(): boolean {\n    return typeof this.btnCheckboxFalse !== 'undefined'\n      ? this.btnCheckboxFalse\n      : false;\n  }\n\n  toggle(state: boolean): void {\n    this.state = state;\n    this.value = this.state ? this.trueValue : this.falseValue;\n  }\n\n  // ControlValueAccessor\n  // model -> view\n  writeValue(value: any): void {\n    this.state = this.trueValue === value;\n    this.value = value ? this.trueValue : this.falseValue;\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.isDisabled = isDisabled;\n  }\n\n  registerOnChange(fn: (_: any) => {}): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: () => {}): void {\n    this.onTouched = fn;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[btnCheckbox]',\n  providers: [CHECKBOX_CONTROL_VALUE_ACCESSOR]\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'btnCheckboxTrue': [{ type: Input },],\n'btnCheckboxFalse': [{ type: Input },],\n'state': [{ type: HostBinding, args: ['class.active', ] },],\n'onClick': [{ type: HostListener, args: ['click', ] },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","// tslint:disable:no-use-before-declare\nimport {\n  ChangeDetectorRef, Directive, ElementRef, forwardRef, HostBinding,\n  HostListener, Input, OnInit\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nexport const RADIO_CONTROL_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => ButtonRadioDirective),\n  multi: true\n};\n\n/**\n * Create radio buttons or groups of buttons.\n * A value of a selected button is bound to a variable specified via ngModel.\n */\n\nexport class ButtonRadioDirective implements ControlValueAccessor, OnInit {\n  onChange: any = Function.prototype;\n  onTouched: any = Function.prototype;\n\n  /** Radio button value, will be set to `ngModel` */\n   btnRadio: any;\n  /** If `true` — radio button can be unchecked */\n   uncheckable: boolean;\n  /** Current value of radio component or group */\n   value: any;\n\n  \n  get isActive(): boolean {\n    return this.btnRadio === this.value;\n  }\n\n  constructor(private el: ElementRef, private cdr: ChangeDetectorRef) {\n  }\n\n  \n  onClick(): void {\n    if (this.el.nativeElement.attributes.disabled) {\n      return;\n    }\n\n    if (this.uncheckable && this.btnRadio === this.value) {\n      this.value = undefined;\n      this.onTouched();\n      this.onChange(this.value);\n\n      return;\n    }\n\n    if (this.btnRadio !== this.value) {\n      this.value = this.btnRadio;\n      this.onTouched();\n      this.onChange(this.value);\n    }\n  }\n\n  ngOnInit(): void {\n    this.uncheckable = typeof this.uncheckable !== 'undefined';\n  }\n\n  onBlur(): void {\n    this.onTouched();\n  }\n\n  // ControlValueAccessor\n  // model -> view\n  writeValue(value: any): void {\n    this.value = value;\n    this.cdr.markForCheck();\n  }\n\n  registerOnChange(fn: any): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this.onTouched = fn;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[btnRadio]',\n  providers: [RADIO_CONTROL_VALUE_ACCESSOR]\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: ChangeDetectorRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'btnRadio': [{ type: Input },],\n'uncheckable': [{ type: Input },],\n'value': [{ type: Input },],\n'isActive': [{ type: HostBinding, args: ['class.active', ] },],\n'onClick': [{ type: HostListener, args: ['click', ] },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\n\nimport { ButtonCheckboxDirective } from './button-checkbox.directive';\nimport { ButtonRadioDirective } from './button-radio.directive';\n\n\nexport class ButtonsModule {\n  static forRoot(): ModuleWithProviders {\n    return { ngModule: ButtonsModule, providers: [] };\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  declarations: [ButtonCheckboxDirective, ButtonRadioDirective],\n  exports: [ButtonCheckboxDirective, ButtonRadioDirective]\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * Add a config service to allow an application\n * to customize the date time picker default settings\n * across the entire application\n */\n\n\nimport { Injectable } from '@angular/core';\nimport { weekdaysShort } from './date-time-picker.utils';\nimport { DateTimePickerTimezone } from './time-view/time-view.component';\nexport class DateTimePickerConfig {\n\n    showDate: boolean = true;\n    showTime: boolean = true;\n    showTimezone: boolean = true;\n    showSeconds: boolean = false;\n    showMeridian: boolean = true;\n    showSpinners: boolean = true;\n    weekdays: string[] = weekdaysShort;\n    nowBtnText: string = 'Today';\n\n    timezones: DateTimePickerTimezone[] = [\n        { name: 'GMT-11', offset: -660 },\n        { name: 'GMT-10', offset: -600 },\n        { name: 'GMT-9', offset: -540 },\n        { name: 'GMT-8', offset: -480 },\n        { name: 'GMT-7', offset: -420 },\n        { name: 'GMT-6', offset: -360 },\n        { name: 'GMT-5', offset: -300 },\n        { name: 'GMT-4', offset: -240 },\n        { name: 'GMT-3', offset: -180 },\n        { name: 'GMT-2', offset: -12 },\n        { name: 'GMT-1', offset: -60 },\n        { name: 'GMT', offset: 0 },\n        { name: 'GMT+1', offset: 60 },\n        { name: 'GMT+2', offset: 120 },\n        { name: 'GMT+3', offset: 180 },\n        { name: 'GMT+4', offset: 240 },\n        { name: 'GMT+5', offset: 300 },\n        { name: 'GMT+6', offset: 360 },\n        { name: 'GMT+7', offset: 420 },\n        { name: 'GMT+8', offset: 480 },\n        { name: 'GMT+9', offset: 540 },\n        { name: 'GMT+10', offset: 600 },\n        { name: 'GMT+11', offset: 660 },\n        { name: 'GMT+12', offset: 720 }\n    ];\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction DateTimePickerConfig_tsickle_Closure_declarations() {\n/** @type {?} */\nDateTimePickerConfig.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDateTimePickerConfig.ctorParameters;\n/** @type {?} */\nDateTimePickerConfig.prototype.showDate;\n/** @type {?} */\nDateTimePickerConfig.prototype.showTime;\n/** @type {?} */\nDateTimePickerConfig.prototype.showTimezone;\n/** @type {?} */\nDateTimePickerConfig.prototype.showSeconds;\n/** @type {?} */\nDateTimePickerConfig.prototype.showMeridian;\n/** @type {?} */\nDateTimePickerConfig.prototype.showSpinners;\n/** @type {?} */\nDateTimePickerConfig.prototype.weekdays;\n/** @type {?} */\nDateTimePickerConfig.prototype.nowBtnText;\n/** @type {?} */\nDateTimePickerConfig.prototype.timezones;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { DatePickerMode } from './date-time-picker.component';\nimport'rxjs/add/operator/distinctUntilChanged';\nexport class DateTimePickerService {\n\n    date: BehaviorSubject<Date> = new BehaviorSubject<Date>(new Date());\n    activeDate: BehaviorSubject<Date> = new BehaviorSubject<Date>(new Date());\n\n    mode: BehaviorSubject<DatePickerMode> = new BehaviorSubject<DatePickerMode>(DatePickerMode.Day);\n\n    month: BehaviorSubject<number> = new BehaviorSubject<number>(new Date().getMonth());\n    year: BehaviorSubject<number> = new BehaviorSubject<number>(new Date().getFullYear());\nconstructor() {\n\n        // when the date changes update the current month and year\n        this.date.distinctUntilChanged((previous, current) => previous.getTime() === current.getTime()).subscribe(date => {\n            this.month.next(date.getMonth());\n            this.year.next(date.getFullYear());\n        });\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction DateTimePickerService_tsickle_Closure_declarations() {\n/** @type {?} */\nDateTimePickerService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDateTimePickerService.ctorParameters;\n/** @type {?} */\nDateTimePickerService.prototype.date;\n/** @type {?} */\nDateTimePickerService.prototype.activeDate;\n/** @type {?} */\nDateTimePickerService.prototype.mode;\n/** @type {?} */\nDateTimePickerService.prototype.month;\n/** @type {?} */\nDateTimePickerService.prototype.year;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Input, Output, EventEmitter, ViewChild } from '@angular/core';\nimport { DateTimePickerTimeViewComponent, DateTimePickerTimezone } from './time-view/time-view.component';\nimport { weekdaysShort } from './date-time-picker.utils';\nimport { DateTimePickerConfig } from './date-time-picker.config';\nimport { DateTimePickerService } from './date-time-picker.service';\nexport class DateTimePickerComponent {\n\n   timePickerComponent: DateTimePickerTimeViewComponent;\nprivate _timezone: DateTimePickerTimezone;\n\n   showDate: boolean = this._config.showDate;\n   showTime: boolean = this._config.showTime;\n   showTimezone: boolean = this._config.showTimezone;\n   showSeconds: boolean = this._config.showSeconds;\n   showMeridian: boolean = this._config.showMeridian;\n   showSpinners: boolean = this._config.showSpinners;\n   weekdays: string[] = this._config.weekdays;\n   nowBtnText: string = this._config.nowBtnText;\n   timezones: DateTimePickerTimezone[] = this._config.timezones;\n\n   dateChange: EventEmitter<Date> = new EventEmitter<Date>();\n   timezoneChange: EventEmitter<DateTimePickerTimezone> = new EventEmitter<DateTimePickerTimezone>();\n/**\n * @param {?} value\n * @return {?}\n */\nset date(value: Date) {\n\n    this.dateTimePickerService.date.next(new Date(value));\n\n    // set the active date to the new date\n    this.dateTimePickerService.activeDate.next(new Date(value));\n  }\n/**\n * @return {?}\n */\nget date(): Date {\n    return this.dateTimePickerService.date.getValue();\n  }\n/**\n * @param {?} value\n * @return {?}\n */\nset timezone(value: DateTimePickerTimezone) {\n    const /** @type {?} */ timezone = this.timezones.find(zone => zone.offset === value.offset);\n\n    // only update if the timezone is valid\n    if (timezone) {\n      this._timezone = timezone;\n    }\n  }\n/**\n * @return {?}\n */\nget timezone(): DateTimePickerTimezone {\n    return this._timezone;\n  }\n\n  // expose enum to view\n  DatePickerMode = DatePickerMode;\n/**\n * @param {?} _config\n * @param {?} dateTimePickerService\n */\nconstructor(private _config: DateTimePickerConfig,\npublic dateTimePickerService: DateTimePickerService) { }\n/**\n * This will emit the newly selected date\n * @return {?}\n */\ncommit(): void {\n    this.dateChange.emit(this.dateTimePickerService.activeDate.getValue());\n  }\n/**\n * Change the date to the current date and time\n * @return {?}\n */\nsetToNow(): void {\n\n    // set the date to the current moment\n    this.date = new Date();\n\n    // reset the timezone to the default\n    if (this.timePickerComponent) {\n      this.timePickerComponent.setDefaultTimezone();\n    }\n\n    // emit the changes\n    this.commit();\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'ux-date-time-picker',\n  template: `\n    <div class=\"calendar-container\">\n\n      <ng-container *ngIf=\"showDate\" [ngSwitch]=\"dateTimePickerService.mode | async\">\n\n        <!-- Display days in the current month -->\n        <ux-date-time-picker-day-view *ngSwitchCase=\"DatePickerMode.Day\" [weekdays]=\"weekdays\" (dateChange)=\"commit()\"></ux-date-time-picker-day-view>\n  \n        <!-- Display the months in the current year -->\n        <ux-date-time-picker-month-view *ngSwitchCase=\"DatePickerMode.Month\"></ux-date-time-picker-month-view>\n  \n        <!-- Display a decade -->\n        <ux-date-time-picker-year-view *ngSwitchCase=\"DatePickerMode.Year\"></ux-date-time-picker-year-view>\n  \n      </ng-container>\n\n      <!-- Display a Time Picker -->\n      <ux-date-time-picker-time-view *ngIf=\"showTime\" #timePicker (dateChange)=\"commit()\" [showSpinners]=\"showSpinners\" [showTimezone]=\"showTimezone\" [showSeconds]=\"showSeconds\" [showMeridian]=\"showMeridian\" (dateChange)=\"commit()\" [timezone]=\"timezone\" (timezoneChange)=\"timezoneChange.emit($event)\" [timezones]=\"timezones\"></ux-date-time-picker-time-view>\n\n    </div>\n\n    <button class=\"now-button\" (click)=\"setToNow()\">{{ nowBtnText }}</button>\n  `,\n  providers: [DateTimePickerService]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: DateTimePickerConfig, },\n{type: DateTimePickerService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'timePickerComponent': [{ type: ViewChild, args: ['timePicker', ] },],\n'showDate': [{ type: Input },],\n'showTime': [{ type: Input },],\n'showTimezone': [{ type: Input },],\n'showSeconds': [{ type: Input },],\n'showMeridian': [{ type: Input },],\n'showSpinners': [{ type: Input },],\n'weekdays': [{ type: Input },],\n'nowBtnText': [{ type: Input },],\n'timezones': [{ type: Input },],\n'dateChange': [{ type: Output },],\n'timezoneChange': [{ type: Output },],\n'date': [{ type: Input },],\n'timezone': [{ type: Input },],\n};\n}\n\nfunction DateTimePickerComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nDateTimePickerComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDateTimePickerComponent.ctorParameters;\n/** @type {?} */\nDateTimePickerComponent.propDecorators;\n/** @type {?} */\nDateTimePickerComponent.prototype.timePickerComponent;\n/** @type {?} */\nDateTimePickerComponent.prototype._timezone;\n/** @type {?} */\nDateTimePickerComponent.prototype.showDate;\n/** @type {?} */\nDateTimePickerComponent.prototype.showTime;\n/** @type {?} */\nDateTimePickerComponent.prototype.showTimezone;\n/** @type {?} */\nDateTimePickerComponent.prototype.showSeconds;\n/** @type {?} */\nDateTimePickerComponent.prototype.showMeridian;\n/** @type {?} */\nDateTimePickerComponent.prototype.showSpinners;\n/** @type {?} */\nDateTimePickerComponent.prototype.weekdays;\n/** @type {?} */\nDateTimePickerComponent.prototype.nowBtnText;\n/** @type {?} */\nDateTimePickerComponent.prototype.timezones;\n/** @type {?} */\nDateTimePickerComponent.prototype.dateChange;\n/** @type {?} */\nDateTimePickerComponent.prototype.timezoneChange;\n/** @type {?} */\nDateTimePickerComponent.prototype.DatePickerMode;\n/** @type {?} */\nDateTimePickerComponent.prototype._config;\n/** @type {?} */\nDateTimePickerComponent.prototype.dateTimePickerService;\n}\n\nexport type DatePickerMode = number;\nexport let DatePickerMode: any = {};\nDatePickerMode.Day = 0;\nDatePickerMode.Month = 1;\nDatePickerMode.Year = 2;\nDatePickerMode[DatePickerMode.Day] = \"Day\";\nDatePickerMode[DatePickerMode.Month] = \"Month\";\nDatePickerMode[DatePickerMode.Year] = \"Year\";\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Input, Output, EventEmitter, OnInit, OnDestroy } from '@angular/core';\nimport { dateRange, gridify, compareDays, months, weekdaysShort } from '../date-time-picker.utils';\nimport { DateTimePickerService } from '../date-time-picker.service';\nimport { DatePickerMode } from '../date-time-picker.component';\nimport'rxjs/add/operator/distinctUntilChanged';\nimport'rxjs/add/observable/merge';\nimport { Subscription } from 'rxjs/Subscription';\nimport { Observable } from 'rxjs/Observable';\nexport class DateTimePickerDayViewComponent implements OnInit, OnDestroy {\n\n  header: string;\n  days: DatePickerDay[][] = [];\n\n   weekdays: string[] = weekdaysShort;\n   dateChange: EventEmitter<void> = new EventEmitter<void>();\n/**\n * @param {?} value\n * @return {?}\n */\nset date(value: Date) {\n    this.dateTimePickerService.activeDate.next(value);\n  }\n/**\n * @return {?}\n */\nget date() {\n    return this.dateTimePickerService.activeDate.getValue();\n  }\n/**\n * @param {?} value\n * @return {?}\n */\nset month(value: number) {\n    this.dateTimePickerService.month.next(value);\n  }\n/**\n * @return {?}\n */\nget month(): number {\n    return this.dateTimePickerService.month.getValue();\n  }\n/**\n * @param {?} value\n * @return {?}\n */\nset year(value: number) {\n    this.dateTimePickerService.year.next(value);\n  }\n/**\n * @return {?}\n */\nget year(): number {\n    return this.dateTimePickerService.year.getValue();\n  }\nprivate _subscription: Subscription;\n/**\n * @param {?} dateTimePickerService\n */\nconstructor(public dateTimePickerService: DateTimePickerService) {}\n/**\n * @return {?}\n */\nngOnInit(): void {\n\n    // update the grid only when the value of the active date, month or year has changed\n    this._subscription = Observable.merge(\n      this.dateTimePickerService.activeDate.distinctUntilChanged(),\n      this.dateTimePickerService.month.distinctUntilChanged(),\n      this.dateTimePickerService.year.distinctUntilChanged()\n    )\n    .subscribe(() => this.update());\n\n  }\n/**\n * @return {?}\n */\nngOnDestroy(): void {\n    // remove all subscriptions\n    this._subscription.unsubscribe();\n  }\n/**\n * Navigate to the previous page of dates\n * @return {?}\n */\nprevious(): void {\n\n    // update the month\n    this.month--;\n\n    // if the month is now the previous year take that into account\n    if (this.month < 0) {\n      this.month = 11;\n      this.year--;\n    }\n\n    // update the grid\n    this.update();\n  }\n/**\n * Navigate to the next page of dates\n * @return {?}\n */\nnext(): void {\n\n    // update the month\n    this.month++;\n\n    // if the month is now the previous year take that into account\n    if (this.month > 11) {\n      this.month = 0;\n      this.year++;\n    }\n\n    // update the grid\n    this.update();\n  }\n/**\n * Updates the grid of all the days in the month\n * @return {?}\n */\nupdate(): void {\n\n    // find the lower and upper boundaries\n    const /** @type {?} */ start = new Date(this.year, this.month, 1);\n    const /** @type {?} */ end = new Date(this.year, this.month + 1, 0);\n\n    // we always want to show from the sunday - this may include showing some dates from the previous month\n    start.setDate(start.getDate() - start.getDay());\n\n    // we also want to make sure that the range ends on a saturday\n    end.setDate(end.getDate() + (6 - end.getDay()));\n\n    // create an array of all the days to display\n    const /** @type {?} */ dates = dateRange(start, end);\n\n    // update the page header\n    this.header = `${months[this.month]} ${this.year}`;\n\n    // turn the dates into a grid\n    this.days = gridify(dates, 7).map(week => week.map(date => ({\n      date: date,\n      today: this.isToday(date),\n      active: this.isActive(date),\n      currentMonth: this.isCurrentMonth(date)\n    })));\n  }\n/**\n * Select a particular date\n * @param {?} date the date to select\n * @return {?}\n */\nselect(date: Date): void {\n    // update the current date object\n    this.date = new Date(date);\n\n    // emit the new date\n    this.dateChange.emit();\n  }\n/**\n * Determine whether or not a specific date is today\n * @param {?} date The date to check\n * @return {?}\n */\nisToday(date: Date): boolean {\n    return compareDays(new Date(), date);\n  }\n/**\n * Determines whether or not a specific date is the selected one\n * @param {?} date the date to check\n * @return {?}\n */\nisActive(date: Date): boolean {\n    return compareDays(this.date, date);\n  }\n/**\n * Determine whether or not a date is within the current month\n * or is it part of another month being show to fill the grid\n * @param {?} date The date in question\n * @return {?}\n */\nisCurrentMonth(date: Date): boolean {\n    return date.getMonth() === this.month;\n  }\n/**\n * Update the date picker view to show the month picker\n * @return {?}\n */\nshowMonthPicker(): void {\n    this.dateTimePickerService.mode.next(DatePickerMode.Month);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'ux-date-time-picker-day-view',\n  template: `\n    <ux-date-time-picker-header [header]=\"header\" (previous)=\"previous()\" (next)=\"next()\" (ascend)=\"showMonthPicker()\"></ux-date-time-picker-header>\n\n    <table class=\"calendar\">\n      <thead>\n        <tr>\n          <th *ngFor=\"let day of weekdays\" class=\"weekday\">{{ day }}</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        <tr *ngFor=\"let row of days\">\n          <td *ngFor=\"let day of row\" class=\"date-cell\" [class.current]=\"day.today\" \n            [class.active]=\"day.active\" [class.preview]=\"!day.currentMonth\" \n            (mousedown)=\"select(day.date)\" (keyup.enter)=\"select(day.date)\" \n            tabindex=\"0\">{{ day.date.getDate() }}</td>\n        </tr>\n      </tbody>\n    </table>\n  `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: DateTimePickerService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'weekdays': [{ type: Input },],\n'dateChange': [{ type: Output },],\n};\n}\n\nfunction DateTimePickerDayViewComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nDateTimePickerDayViewComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDateTimePickerDayViewComponent.ctorParameters;\n/** @type {?} */\nDateTimePickerDayViewComponent.propDecorators;\n/** @type {?} */\nDateTimePickerDayViewComponent.prototype.header;\n/** @type {?} */\nDateTimePickerDayViewComponent.prototype.days;\n/** @type {?} */\nDateTimePickerDayViewComponent.prototype.weekdays;\n/** @type {?} */\nDateTimePickerDayViewComponent.prototype.dateChange;\n/** @type {?} */\nDateTimePickerDayViewComponent.prototype._subscription;\n/** @type {?} */\nDateTimePickerDayViewComponent.prototype.dateTimePickerService;\n}\n\n\nexport interface DatePickerDay {\n  date: Date;\n  today: boolean;\n  active: boolean;\n  currentMonth: boolean;\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { gridify, range, monthsShort } from '../date-time-picker.utils';\nimport { DateTimePickerService } from '../date-time-picker.service';\nimport { DatePickerMode } from '../date-time-picker.component';\nexport class DateTimePickerMonthViewComponent {\n\n  months: number[][] = gridify(range(0, 11), 4);\n  currentDate: Date = new Date();\n/**\n * @return {?}\n */\nget date() {\n    return this._dateTimePickerService.activeDate.getValue();\n  }\n/**\n * @param {?} value\n * @return {?}\n */\nset month(value: number) {\n    this._dateTimePickerService.month.next(value);\n  }\n/**\n * @return {?}\n */\nget month(): number {\n    return this._dateTimePickerService.month.getValue();\n  }\n/**\n * @param {?} value\n * @return {?}\n */\nset year(value: number) {\n    this._dateTimePickerService.year.next(value);\n  }\n/**\n * @return {?}\n */\nget year(): number {\n    return this._dateTimePickerService.year.getValue();\n  }\n/**\n * @param {?} _dateTimePickerService\n */\nconstructor(private _dateTimePickerService: DateTimePickerService) {}\n/**\n * Go to the previous year and emit the change\n * @return {?}\n */\nprevious(): void {\n    this.year--;\n  }\n/**\n * Go to the next year and emit the change\n * @return {?}\n */\nnext(): void {\n    this.year++;\n  }\n/**\n * Select a month in the calendar\n * @param {?} month the index of the month to select\n * @return {?}\n */\nselect(month: number): void {\n    this.month = month;\n\n    // show the day picker\n    this.showDayPicker();\n  }\n/**\n * Get the name of a month\n * @param {?} month the month in question\n * @return {?}\n */\ngetMonthName(month: number): string {\n    return monthsShort[month];\n  }\n/**\n * Show the daye picker view\n * @return {?}\n */\nshowDayPicker(): void {\n    this._dateTimePickerService.mode.next(DatePickerMode.Day);\n  }\n/**\n * Show the year picker view\n * @return {?}\n */\nshowYearPicker(): void {\n    this._dateTimePickerService.mode.next(DatePickerMode.Year);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'ux-date-time-picker-month-view',\n  template: `\n    <ux-date-time-picker-header [header]=\"year\" (previous)=\"previous()\" (next)=\"next()\" (ascend)=\"showYearPicker()\"></ux-date-time-picker-header>\n\n    <div class=\"calendar\">\n      <div class=\"calendar-row\" *ngFor=\"let row of months\">\n        <div class=\"calendar-item\" *ngFor=\"let item of row\" [class.active]=\"item === date.getMonth() && year === date.getFullYear()\"\n          [class.current]=\"item === currentDate.getMonth() && year === currentDate.getFullYear()\" (mousedown)=\"select(item)\" (keyup.enter)=\"select(item)\" tabindex=\"0\">{{ getMonthName(item) }}</div>\n      </div>\n    </div>\n  `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: DateTimePickerService, },\n];\n}\n\nfunction DateTimePickerMonthViewComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nDateTimePickerMonthViewComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDateTimePickerMonthViewComponent.ctorParameters;\n/** @type {?} */\nDateTimePickerMonthViewComponent.prototype.months;\n/** @type {?} */\nDateTimePickerMonthViewComponent.prototype.currentDate;\n/** @type {?} */\nDateTimePickerMonthViewComponent.prototype._dateTimePickerService;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Input, EventEmitter, Output, SimpleChanges, OnInit } from '@angular/core';\nimport { gridify, range } from '../date-time-picker.utils';\nimport { DateTimePickerService } from '../date-time-picker.service';\nimport { DatePickerMode } from '../date-time-picker.component';\nexport class DateTimePickerYearViewComponent implements OnInit {\nprivate _page: number = 0;\n\n  header: string;\n  years: number[][] = [];\n  currentYear: number = new Date().getFullYear();\n/**\n * @return {?}\n */\nngOnInit(): void {\n    this.update();\n  }\n/**\n * @param {?} value\n * @return {?}\n */\nset year(value: number) {\n    this._dateTimePickerService.year.next(value);\n  }\n/**\n * @return {?}\n */\nget year(): number {\n    return this._dateTimePickerService.year.getValue();\n  }\n/**\n * @param {?} _dateTimePickerService\n */\nconstructor(private _dateTimePickerService: DateTimePickerService) {}\n/**\n * @param {?} year\n * @return {?}\n */\nselect(year: number): void {\n    this.year = year;\n\n    // show the month picker\n    this.showMonthPicker();\n  }\n/**\n * @return {?}\n */\nprevious(): void {\n    this._page--;\n    this.update();\n  }\n/**\n * @return {?}\n */\nnext(): void {\n    this._page++;\n    this.update();\n  }\n/**\n * @return {?}\n */\nupdate(): void {\n\n    // get the years to display\n    const /** @type {?} */ decade = this.getDecade();\n\n    // update the header\n    this.header = `${decade.start} - ${decade.end}`;\n\n    // create the grid\n    this.years = gridify(decade.range, 4);\n  }\n/**\n * Get the years in the current decade to display\n * @return {?}\n */\ngetDecade(): DatePickerYearRange {\n\n    // the number of years to display\n    const /** @type {?} */ yearCount = 10;\n\n    // figure the start and end points\n    const /** @type {?} */ start = (this.year - (this.year % yearCount)) + (this._page * yearCount);\n    const /** @type {?} */ end = start + yearCount - 1;\n\n    // create an array containing all the numbers between the start and end points\n    return { start: start, end: end, range: range(start, end) };\n  }\n/**\n * Show the month picker view\n * @return {?}\n */\nshowMonthPicker(): void {\n    this._dateTimePickerService.mode.next(DatePickerMode.Month);\n  }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'ux-date-time-picker-year-view',\n  template: `\n    <ux-date-time-picker-header [header]=\"header\" [canAscend]=\"false\" (previous)=\"previous()\" (next)=\"next()\"></ux-date-time-picker-header>\n\n    <div class=\"calendar\">\n      <div class=\"calendar-row\" *ngFor=\"let row of years\">\n        <div *ngFor=\"let item of row\" class=\"calendar-item\" [class.current]=\"item === currentYear\" [class.active]=\"item === year\"\n        (mousedown)=\"select(item)\" (keyup.enter)=\"select(item)\" tabindex=\"0\">{{ item }}</div>\n      </div>\n    </div>\n  `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: DateTimePickerService, },\n];\n}\n\nfunction DateTimePickerYearViewComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nDateTimePickerYearViewComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDateTimePickerYearViewComponent.ctorParameters;\n/** @type {?} */\nDateTimePickerYearViewComponent.prototype._page;\n/** @type {?} */\nDateTimePickerYearViewComponent.prototype.header;\n/** @type {?} */\nDateTimePickerYearViewComponent.prototype.years;\n/** @type {?} */\nDateTimePickerYearViewComponent.prototype.currentYear;\n/** @type {?} */\nDateTimePickerYearViewComponent.prototype._dateTimePickerService;\n}\n\n\nexport interface DatePickerYearRange {\n  start: number;\n  end: number;\n  range: number[];\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nexport class DateTimePickerHeaderComponent {\n\n     header: string;\n     canAscend: boolean = true;\n\n     next: EventEmitter<void> = new EventEmitter<void>();\n     previous: EventEmitter<void> = new EventEmitter<void>();\n     ascend: EventEmitter<void> = new EventEmitter<void>();\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-date-time-picker-header',\n    template: `\n      <header class=\"header\">\n\n        <div class=\"header-navigation\" (click)=\"previous.emit(); $event.stopPropagation()\" (keyup.enter)=\"previous.emit()\" tabindex=\"0\">\n          <i class=\"hpe-icon hpe-previous\"></i>\n        </div>\n\n        <div class=\"header-title\" [class.active]=\"canAscend\" (click)=\"ascend.emit(); $event.stopPropagation()\" (keyup.enter)=\"ascend.emit()\" tabindex=\"0\">{{ header }}</div>\n\n        <div class=\"header-navigation\" (click)=\"next.emit(); $event.stopPropagation()\" (keyup.enter)=\"next.emit()\" tabindex=\"0\">\n          <i class=\"hpe-icon hpe-next\"></i>\n        </div>\n      </header>\n    `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'header': [{ type: Input },],\n'canAscend': [{ type: Input },],\n'next': [{ type: Output },],\n'previous': [{ type: Output },],\n'ascend': [{ type: Output },],\n};\n}\n\nfunction DateTimePickerHeaderComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nDateTimePickerHeaderComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDateTimePickerHeaderComponent.ctorParameters;\n/** @type {?} */\nDateTimePickerHeaderComponent.propDecorators;\n/** @type {?} */\nDateTimePickerHeaderComponent.prototype.header;\n/** @type {?} */\nDateTimePickerHeaderComponent.prototype.canAscend;\n/** @type {?} */\nDateTimePickerHeaderComponent.prototype.next;\n/** @type {?} */\nDateTimePickerHeaderComponent.prototype.previous;\n/** @type {?} */\nDateTimePickerHeaderComponent.prototype.ascend;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Input, EventEmitter, Output, AfterViewInit } from '@angular/core';\nexport class DateTimePickerTimeViewComponent implements AfterViewInit {\n\n     date: Date = new Date();\n     showSeconds: boolean = false;\n     showSpinners: boolean = true;\n     showTimezone: boolean = true;\n     showMeridian: boolean = true;\n\n     timezones: DateTimePickerTimezone[];\n\n     dateChange: EventEmitter<Date> = new EventEmitter<Date>();\n     timezoneChange: EventEmitter<DateTimePickerTimezone> = new EventEmitter<DateTimePickerTimezone>();\n\n    meridian: DatePickerMeridian = DatePickerMeridian.AM;\n/**\n * @param {?} value\n * @return {?}\n */\nset timezone(value: DateTimePickerTimezone) {\n        if (value !== this._timezone) {\n            this._timezone = value;\n            this.timezoneChange.emit(this._timezone);\n        }\n    }\n/**\n * @return {?}\n */\nget timezone() {\n        return this._timezone;\n    }\n\n    // Expose enum to view\n    DatePickerMeridian = DatePickerMeridian;\nprivate _timezone: DateTimePickerTimezone;\n/**\n * @return {?}\n */\nngAfterViewInit(): void {\n\n        // if the user did not specify a timezone - choose a default one\n        if (!this.timezone) {\n            setTimeout(() => this.setDefaultTimezone());\n        }\n    }\n/**\n * @return {?}\n */\nsetDefaultTimezone(): void {\n        // determine the user default timezone\n        const /** @type {?} */ offset = new Date().getTimezoneOffset();\n\n        // find the closest timezone\n        this.timezone = this.timezones.find(zone => zone.offset === offset);\n\n        // if not match was found then set to GMT\n        if (!this.timezone) {\n            this.timezone = this.timezones.find(zone => zone.offset === 0);\n        }\n    }\n/**\n * @param {?} date\n * @return {?}\n */\nupdate(date: Date | null): void {\n\n        // if the date is invalid then stop here\n        if (!date) {\n            return;\n        }\n\n        // update the meridian\n        this.meridian = date.getHours() < 12 ? DatePickerMeridian.AM : DatePickerMeridian.PM;\n        \n        // if the date has not changed then don't emit\n        if (date.getTime() !== this.date.getTime()) {\n            this.date = date;\n            this.dateChange.emit(date);\n        }\n    }\n/**\n * @param {?} meridian\n * @return {?}\n */\nsetMeridian(meridian: DatePickerMeridian): void {\n\n        // get the current hours\n        const /** @type {?} */ hours = this.date.getHours();\n\n        // if we are transitioning to AM and time is currently PM\n        if (meridian === DatePickerMeridian.AM && hours >= 12) {\n            this.date.setHours(hours - 12);\n            this.dateChange.emit(this.date);\n        }\n\n        // if we are transitioning to PM and time is currently AM\n        if (meridian === DatePickerMeridian.PM && hours < 12) {\n            this.date.setHours(hours + 12);\n            this.dateChange.emit(this.date);\n        }\n    }\n/**\n * @return {?}\n */\npreviousTimezone(): void {\n\n        // get the current zone\n        const /** @type {?} */ currentZone = this.timezones.findIndex(zone => zone.name === this.timezone.name && zone.offset === this.timezone.offset);\n\n        // try to get the previous zone\n        this.timezone = this.timezones[currentZone - 1] ? this.timezones[currentZone - 1] : this.timezones[currentZone];\n    }\n/**\n * @return {?}\n */\nnextTimezone(): void {\n        // get the current zone\n        const /** @type {?} */ currentZone = this.timezones.findIndex(zone => zone.name === this.timezone.name && zone.offset === this.timezone.offset);\n\n        // try to get the next zone\n        this.timezone = this.timezones[currentZone + 1] ? this.timezones[currentZone + 1] : this.timezones[currentZone];\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-date-time-picker-time-view',\n    template: `\n      <div class=\"time-input-container\">\n        <timepicker [ngModel]=\"date\" (ngModelChange)=\"update($event)\" [minuteStep]=\"1\" [hourStep]=\"1\" [secondsStep]=\"1\" [showSeconds]=\"showSeconds\"\n          [showSpinners]=\"showSpinners\" [showMeridian]=\"showMeridian\"></timepicker>\n\n        <div class=\"btn-group meridian-picker\" *ngIf=\"showMeridian\">\n          <button type=\"button\" class=\"btn button-toggle-accent\" [(ngModel)]=\"meridian\" (ngModelChange)=\"setMeridian($event)\" [btnRadio]=\"DatePickerMeridian.AM\">AM</button>\n          <button type=\"button\" class=\"btn button-toggle-accent\" [(ngModel)]=\"meridian\" (ngModelChange)=\"setMeridian($event)\" [btnRadio]=\"DatePickerMeridian.PM\">PM</button>\n        </div>\n\n        <table class=\"time-zone-picker-container\" *ngIf=\"showTimezone && showSpinners\">\n          <tbody>\n            <tr>\n              <td class=\"text-center\">\n                <a class=\"btn btn-link\" (click)=\"nextTimezone()\">\n                  <span class=\"hpe-icon hpe-up\"></span>\n                </a>\n              </td>\n            </tr>\n            <tr>\n              <td class=\"form-group\">\n                <div class=\"form-control time-zone-picker\">\n                  <span class=\"time-zone\">{{ timezone?.name }}</span>\n                </div>\n              </td>\n            </tr>\n            <tr>\n              <td class=\"text-center\">\n                <a class=\"btn btn-link\" (click)=\"previousTimezone()\">\n                  <span class=\"hpe-icon hpe-down\"></span>\n                </a>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n\n        <div *ngIf=\"showTimezone && !showSpinners\">\n          <select class=\"form-control time-zone-picker-select\" [(ngModel)]=\"timezone\">\n            <option *ngFor=\"let zone of timezones\" [ngValue]=\"zone\">{{ zone?.name }}</option>\n          </select>\n        </div>\n\n      </div>\n    `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'date': [{ type: Input },],\n'showSeconds': [{ type: Input },],\n'showSpinners': [{ type: Input },],\n'showTimezone': [{ type: Input },],\n'showMeridian': [{ type: Input },],\n'timezones': [{ type: Input },],\n'dateChange': [{ type: Output },],\n'timezoneChange': [{ type: Output },],\n'timezone': [{ type: Input },],\n};\n}\n\nfunction DateTimePickerTimeViewComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nDateTimePickerTimeViewComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDateTimePickerTimeViewComponent.ctorParameters;\n/** @type {?} */\nDateTimePickerTimeViewComponent.propDecorators;\n/** @type {?} */\nDateTimePickerTimeViewComponent.prototype.date;\n/** @type {?} */\nDateTimePickerTimeViewComponent.prototype.showSeconds;\n/** @type {?} */\nDateTimePickerTimeViewComponent.prototype.showSpinners;\n/** @type {?} */\nDateTimePickerTimeViewComponent.prototype.showTimezone;\n/** @type {?} */\nDateTimePickerTimeViewComponent.prototype.showMeridian;\n/** @type {?} */\nDateTimePickerTimeViewComponent.prototype.timezones;\n/** @type {?} */\nDateTimePickerTimeViewComponent.prototype.dateChange;\n/** @type {?} */\nDateTimePickerTimeViewComponent.prototype.timezoneChange;\n/** @type {?} */\nDateTimePickerTimeViewComponent.prototype.meridian;\n/** @type {?} */\nDateTimePickerTimeViewComponent.prototype.DatePickerMeridian;\n/** @type {?} */\nDateTimePickerTimeViewComponent.prototype._timezone;\n}\n\nexport type DatePickerMeridian = number;\nexport let DatePickerMeridian: any = {};\nDatePickerMeridian.AM = 0;\nDatePickerMeridian.PM = 1;\nDatePickerMeridian[DatePickerMeridian.AM] = \"AM\";\nDatePickerMeridian[DatePickerMeridian.PM] = \"PM\";\n\n\nexport interface DateTimePickerTimezone {\n    name: string;\n    offset: number;\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { TimepickerModule } from 'ngx-bootstrap/timepicker';\nimport { ButtonsModule } from 'ngx-bootstrap/buttons';\n\nimport { DateTimePickerComponent } from './date-time-picker.component';\nimport { DateTimePickerDayViewComponent } from './day-view/day-view.component';\nimport { DateTimePickerMonthViewComponent } from './month-view/month-view.component';\nimport { DateTimePickerYearViewComponent } from './year-view/year-view.component';\nimport { DateTimePickerHeaderComponent } from './header/header.component';\nimport { DateTimePickerTimeViewComponent } from './time-view/time-view.component';\nimport { DateTimePickerConfig } from './date-time-picker.config';\n\nconst /** @type {?} */ DECLARATIONS = [\n    DateTimePickerComponent,\n    DateTimePickerDayViewComponent,\n    DateTimePickerMonthViewComponent,\n    DateTimePickerYearViewComponent,\n    DateTimePickerTimeViewComponent,\n    DateTimePickerHeaderComponent\n];\nexport class DateTimePickerModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        CommonModule,\n        FormsModule,\n        TimepickerModule.forRoot(),\n        ButtonsModule.forRoot()\n    ],\n    exports: DECLARATIONS,\n    declarations: DECLARATIONS,\n    providers: [\n        DateTimePickerConfig\n    ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction DateTimePickerModule_tsickle_Closure_declarations() {\n/** @type {?} */\nDateTimePickerModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDateTimePickerModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Directive } from '@angular/core';\nexport class EboxComponent { static decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-ebox',\n    template: `\n      <div class=\"ux-ebox-header\">\n          <ng-content select=\"ux-ebox-header\"></ng-content>\n      </div>\n\n      <div class=\"ux-ebox-content\">\n          <ng-content select=\"ux-ebox-content\"></ng-content>\n      </div>\n    `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction EboxComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nEboxComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nEboxComponent.ctorParameters;\n}\n\nexport class EboxHeaderDirective { static decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'ux-ebox-header'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction EboxHeaderDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nEboxHeaderDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nEboxHeaderDirective.ctorParameters;\n}\n\nexport class EboxContentDirective { static decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'ux-ebox-content'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction EboxContentDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nEboxContentDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nEboxContentDirective.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\n\nimport { EboxComponent, EboxContentDirective, EboxHeaderDirective } from './ebox.component';\nexport class EboxModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    exports: [EboxComponent, EboxContentDirective, EboxHeaderDirective],\n    declarations: [EboxComponent, EboxContentDirective, EboxHeaderDirective]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction EboxModule_tsickle_Closure_declarations() {\n/** @type {?} */\nEboxModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nEboxModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable } from '@angular/core';\n\n/** Default values provider for tooltip */\n\nexport class TooltipConfig {\n  /** tooltip placement, supported positions: 'top', 'bottom', 'left', 'right' */\n  placement = 'top';\n  /** array of event names which triggers tooltip opening */\n  triggers = 'hover focus';\n  /** a selector specifying the element the tooltip should be appended to. Currently only supports \"body\" */\n  container: string;\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/*tslint:disable */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * JS version of browser APIs. This library can only run in the browser.\n */\nvar win = (typeof window !== 'undefined' && window) || <any>{};\n\nexport { win as window };\nexport var document = win.document;\nexport var location = win.location;\nexport var gc = win['gc'] ? () => win['gc']() : (): any => null;\nexport var performance = win['performance'] ? win['performance'] : null;\nexport const Event = win['Event'];\nexport const MouseEvent = win['MouseEvent'];\nexport const KeyboardEvent = win['KeyboardEvent'];\nexport const EventTarget = win['EventTarget'];\nexport const History = win['History'];\nexport const Location = win['Location'];\nexport const EventListener = win['EventListener'];\n","import {\n  AfterViewInit,\n  Component,\n  ChangeDetectionStrategy\n} from '@angular/core';\nimport { TooltipConfig } from './tooltip.config';\nimport { isBs3 } from '../utils/theme-provider';\n\n\nexport class TooltipContainerComponent implements AfterViewInit {\n  classMap: any;\n  placement: string;\n  containerClass: string;\n  animation: boolean;\n\n  get isBs3(): boolean {\n    return isBs3();\n  }\n\n  constructor(config: TooltipConfig) {\n    Object.assign(this, config);\n  }\n\n  ngAfterViewInit(): void {\n    this.classMap = { in: false, fade: false };\n    this.classMap[this.placement] = true;\n    this.classMap[`tooltip-${this.placement}`] = true;\n\n    this.classMap.in = true;\n    if (this.animation) {\n      this.classMap.fade = true;\n    }\n\n    if (this.containerClass) {\n      this.classMap[this.containerClass] = true;\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'bs-tooltip-container',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  // tslint:disable-next-line\n  host: {\n    '[class]':\n      '\"tooltip in tooltip-\" + placement + \" \" + \"bs-tooltip-\" + placement + \" \" + placement + \" \" + containerClass',\n    '[class.show]': '!isBs3',\n    role: 'tooltip'\n  },\n  styles: [\n    `\n    :host.tooltip {\n      display: block;\n    }\n    :host.bs-tooltip-top .arrow, :host.bs-tooltip-bottom .arrow {\n      left: calc(50% - 2.5px);\n    }\n    :host.bs-tooltip-left .arrow, :host.bs-tooltip-right .arrow {\n      top: calc(50% - 2.5px);\n    }\n  `\n  ],\n  template: `\n    <div class=\"tooltip-arrow arrow\"></div>\n    <div class=\"tooltip-inner\"><ng-content></ng-content></div>\n    `\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: TooltipConfig, },\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @copyright Valor Software\n * @copyright Angular ng-bootstrap team\n */\n\nexport class Trigger {\n  open: string;\n  close?: string;\n\n  constructor(open: string, close?: string) {\n    this.open = open;\n    this.close = close || open;\n  }\n\n  isManual(): boolean {\n    return this.open === 'manual' || this.close === 'manual';\n  }\n}\n","/**\n * @copyright Valor Software\n * @copyright Angular ng-bootstrap team\n */\n\nimport { ComponentRef, ViewRef } from '@angular/core';\n\nexport class ContentRef {\n  nodes: any[];\n  viewRef?: ViewRef;\n  componentRef?: ComponentRef<any>;\n\n  constructor(\n    nodes: any[],\n    viewRef?: ViewRef,\n    componentRef?: ComponentRef<any>\n  ) {\n    this.nodes = nodes;\n    this.viewRef = viewRef;\n    this.componentRef = componentRef;\n  }\n}\n","// tslint:disable:max-file-line-count\n// todo: add delay support\n// todo: merge events onShow, onShown, etc...\n// todo: add global positioning configuration?\nimport {\n  ApplicationRef,\n  ComponentFactory,\n  ComponentFactoryResolver,\n  ComponentRef,\n  ElementRef,\n  EmbeddedViewRef,\n  EventEmitter,\n  Injector,\n  NgZone,\n  Provider,\n  ReflectiveInjector,\n  Renderer2,\n  TemplateRef,\n  Type,\n  ViewContainerRef\n} from '@angular/core';\nimport { PositioningOptions, PositioningService } from '../positioning';\nimport { listenToTriggersV2, registerOutsideClick } from '../utils/triggers';\nimport { ContentRef } from './content-ref.class';\nimport { ListenOptions } from './listen-options.model';\n\nexport class ComponentLoader<T> {\n  onBeforeShow: EventEmitter<any> = new EventEmitter();\n  onShown: EventEmitter<any> = new EventEmitter();\n  onBeforeHide: EventEmitter<any> = new EventEmitter();\n  onHidden: EventEmitter<any> = new EventEmitter();\n\n  instance: T;\n  _componentRef: ComponentRef<T>;\n  _inlineViewRef: EmbeddedViewRef<T>;\n\n  private _providers: Provider[] = [];\n  private _componentFactory: ComponentFactory<T>;\n  private _zoneSubscription: any;\n  private _contentRef: ContentRef;\n  private _innerComponent: ComponentRef<T>;\n\n  private _unregisterListenersFn: Function;\n\n  get isShown(): boolean {\n    if (this._isHiding) {\n      return false;\n    }\n\n    return !!this._componentRef;\n  }\n\n  private _isHiding = false;\n\n  /**\n   * Placement of a component. Accepts: \"top\", \"bottom\", \"left\", \"right\"\n   */\n  private attachment: string;\n\n  /**\n   * A selector specifying the element the popover should be appended to.\n   * Currently only supports \"body\".\n   */\n  private container: string | ElementRef | any;\n\n  /**\n   * Specifies events that should trigger. Supports a space separated list of\n   * event names.\n   */\n  private triggers: string;\n\n  private _listenOpts: ListenOptions = {};\n  private _globalListener = Function.prototype;\n\n  /**\n   * Do not use this directly, it should be instanced via\n   * `ComponentLoadFactory.attach`\n   * @internal\n   */\n  // tslint:disable-next-line\n  public constructor(\n    private _viewContainerRef: ViewContainerRef,\n    private _renderer: Renderer2,\n    private _elementRef: ElementRef,\n    private _injector: Injector,\n    private _componentFactoryResolver: ComponentFactoryResolver,\n    private _ngZone: NgZone,\n    private _applicationRef: ApplicationRef,\n    private _posService: PositioningService\n  ) {}\n\n  attach(compType: Type<T>): ComponentLoader<T> {\n    this._componentFactory = this._componentFactoryResolver\n      .resolveComponentFactory<T>(compType);\n\n    return this;\n  }\n\n  // todo: add behaviour: to target element, `body`, custom element\n  to(container?: string): ComponentLoader<T> {\n    this.container = container || this.container;\n\n    return this;\n  }\n\n  position(opts?: PositioningOptions): ComponentLoader<T> {\n    this.attachment = opts.attachment || this.attachment;\n    this._elementRef = (opts.target as ElementRef) || this._elementRef;\n\n    return this;\n  }\n\n  provide(provider: Provider): ComponentLoader<T> {\n    this._providers.push(provider);\n\n    return this;\n  }\n\n  // todo: appendChild to element or document.querySelector(this.container)\n  show(\n    opts: {\n      content?: string | TemplateRef<any>;\n      context?: any;\n      [key: string]: any;\n    } = {}\n  ): ComponentRef<T> {\n    this._subscribePositioning();\n    this._innerComponent = null;\n\n    if (!this._componentRef) {\n      this.onBeforeShow.emit();\n      this._contentRef = this._getContentRef(opts.content, opts.context);\n      const injector = ReflectiveInjector.resolveAndCreate(\n        this._providers,\n        this._injector\n      );\n\n      this._componentRef = this._componentFactory.create(\n        injector,\n        this._contentRef.nodes\n      );\n      this._applicationRef.attachView(this._componentRef.hostView);\n      // this._componentRef = this._viewContainerRef\n      //   .createComponent(this._componentFactory, 0, injector, this._contentRef.nodes);\n      this.instance = this._componentRef.instance;\n\n      Object.assign(this._componentRef.instance, opts);\n\n      if (this.container instanceof ElementRef) {\n        this.container.nativeElement.appendChild(\n          this._componentRef.location.nativeElement\n        );\n      }\n\n      if (this.container === 'body' && typeof document !== 'undefined') {\n        document\n          .querySelector(this.container as string)\n          .appendChild(this._componentRef.location.nativeElement);\n      }\n\n      if (\n        !this.container &&\n        this._elementRef &&\n        this._elementRef.nativeElement.parentElement\n      ) {\n        this._elementRef.nativeElement.parentElement.appendChild(\n          this._componentRef.location.nativeElement\n        );\n      }\n\n      // we need to manually invoke change detection since events registered\n      // via\n      // Renderer::listen() are not picked up by change detection with the\n      // OnPush strategy\n      if (this._contentRef.componentRef) {\n        this._innerComponent = this._contentRef.componentRef.instance;\n        this._contentRef.componentRef.changeDetectorRef.markForCheck();\n        this._contentRef.componentRef.changeDetectorRef.detectChanges();\n      }\n      this._componentRef.changeDetectorRef.markForCheck();\n      this._componentRef.changeDetectorRef.detectChanges();\n      this.onShown.emit(this._componentRef.instance);\n    }\n\n    this._registerOutsideClick();\n\n    return this._componentRef;\n  }\n\n  hide(): ComponentLoader<T> {\n    if (!this._componentRef) {\n      return this;\n    }\n\n    this.onBeforeHide.emit(this._componentRef.instance);\n\n    const componentEl = this._componentRef.location.nativeElement;\n    componentEl.parentNode.removeChild(componentEl);\n    if (this._contentRef.componentRef) {\n      this._contentRef.componentRef.destroy();\n    }\n    this._componentRef.destroy();\n    if (this._viewContainerRef && this._contentRef.viewRef) {\n      this._viewContainerRef.remove(\n        this._viewContainerRef.indexOf(this._contentRef.viewRef)\n      );\n    }\n    if (this._contentRef.viewRef) {\n      this._contentRef.viewRef.destroy();\n    }\n    // this._viewContainerRef.remove(this._viewContainerRef.indexOf(this._componentRef.hostView));\n    //\n    // if (this._contentRef.viewRef && this._viewContainerRef.indexOf(this._contentRef.viewRef) !== -1) {\n    //   this._viewContainerRef.remove(this._viewContainerRef.indexOf(this._contentRef.viewRef));\n    // }\n\n    this._contentRef = null;\n    this._componentRef = null;\n    this._removeGlobalListener();\n\n    this.onHidden.emit();\n\n    return this;\n  }\n\n  toggle(): void {\n    if (this.isShown) {\n      this.hide();\n\n      return;\n    }\n\n    this.show();\n  }\n\n  dispose(): void {\n    if (this.isShown) {\n      this.hide();\n    }\n\n    this._unsubscribePositioning();\n\n    if (this._unregisterListenersFn) {\n      this._unregisterListenersFn();\n    }\n  }\n\n  listen(listenOpts: ListenOptions): ComponentLoader<T> {\n    this.triggers = listenOpts.triggers || this.triggers;\n    this._listenOpts.outsideClick = listenOpts.outsideClick;\n    listenOpts.target = listenOpts.target || this._elementRef.nativeElement;\n\n    const hide = (this._listenOpts.hide = () =>\n      listenOpts.hide ? listenOpts.hide() : void this.hide());\n    const show = (this._listenOpts.show = (registerHide: Function) => {\n      listenOpts.show ? listenOpts.show(registerHide) : this.show(registerHide);\n      registerHide();\n    });\n\n    const toggle = (registerHide: Function) => {\n      this.isShown ? hide() : show(registerHide);\n    };\n\n    this._unregisterListenersFn = listenToTriggersV2(this._renderer, {\n      target: listenOpts.target,\n      triggers: listenOpts.triggers,\n      show,\n      hide,\n      toggle\n    });\n\n    return this;\n  }\n\n  _removeGlobalListener() {\n    if (this._globalListener) {\n      this._globalListener();\n      this._globalListener = null;\n    }\n  }\n\n  attachInline(\n    vRef: ViewContainerRef,\n    template: TemplateRef<any>\n  ): ComponentLoader<T> {\n    this._inlineViewRef = vRef.createEmbeddedView(template);\n\n    return this;\n  }\n\n  _registerOutsideClick(): void {\n    if (!this._componentRef || !this._componentRef.location) {\n      return;\n    }\n    // why: should run after first event bubble\n    if (this._listenOpts.outsideClick) {\n      const target = this._componentRef.location.nativeElement;\n      setTimeout(() => {\n        this._globalListener = registerOutsideClick(this._renderer, {\n          targets: [target, this._elementRef.nativeElement],\n          outsideClick: this._listenOpts.outsideClick,\n          hide: () => this._listenOpts.hide()\n        });\n      });\n    }\n  }\n\n  getInnerComponent(): ComponentRef<T> {\n    return this._innerComponent;\n  }\n\n  private _subscribePositioning(): void {\n    if (this._zoneSubscription || !this.attachment) {\n      return;\n    }\n\n    this._zoneSubscription = this._ngZone.onStable.subscribe(() => {\n      if (!this._componentRef) {\n        return;\n      }\n      this._posService.position({\n        element: this._componentRef.location,\n        target: this._elementRef,\n        attachment: this.attachment,\n        appendToBody: this.container === 'body'\n      });\n    });\n  }\n\n  private _unsubscribePositioning(): void {\n    if (!this._zoneSubscription) {\n      return;\n    }\n    this._zoneSubscription.unsubscribe();\n    this._zoneSubscription = null;\n  }\n\n  private _getContentRef(\n    content: string | TemplateRef<any> | any,\n    context?: any\n  ): ContentRef {\n    if (!content) {\n      return new ContentRef([]);\n    }\n\n    if (content instanceof TemplateRef) {\n      if (this._viewContainerRef) {\n        const _viewRef = this._viewContainerRef\n          .createEmbeddedView<TemplateRef<T>>(content, context);\n        _viewRef.markForCheck();\n\n        return new ContentRef([_viewRef.rootNodes], _viewRef);\n      }\n      const viewRef = content.createEmbeddedView({});\n      this._applicationRef.attachView(viewRef);\n\n      return new ContentRef([viewRef.rootNodes], viewRef);\n    }\n\n    if (typeof content === 'function') {\n      const contentCmptFactory = this._componentFactoryResolver.resolveComponentFactory(\n        content\n      );\n      const modalContentInjector = ReflectiveInjector.resolveAndCreate(\n        [...this._providers],\n        this._injector\n      );\n      const componentRef = contentCmptFactory.create(modalContentInjector);\n      this._applicationRef.attachView(componentRef.hostView);\n\n      return new ContentRef(\n        [[componentRef.location.nativeElement]],\n        componentRef.hostView,\n        componentRef\n      );\n    }\n\n    return new ContentRef([[this._renderer.createText(`${content}`)]]);\n  }\n}\n","/**\n * @copyright Valor Software\n * @copyright Angular ng-bootstrap team\n */\n\n// previous version:\n// https://github.com/angular-ui/bootstrap/blob/07c31d0731f7cb068a1932b8e01d2312b796b4ec/src/position/position.js\n// tslint:disable\nexport class Positioning {\n  public position(element: HTMLElement, round = true): ClientRect {\n    let elPosition: ClientRect;\n    let parentOffset: ClientRect = {\n      width: 0,\n      height: 0,\n      top: 0,\n      bottom: 0,\n      left: 0,\n      right: 0\n    };\n\n    if (this.getStyle(element, 'position') === 'fixed') {\n      const bcRect = element.getBoundingClientRect();\n      elPosition = {\n        width: bcRect.width,\n        height: bcRect.height,\n        top: bcRect.top,\n        bottom: bcRect.bottom,\n        left: bcRect.left,\n        right: bcRect.right\n      };\n    } else {\n      const offsetParentEl = this.offsetParent(element);\n\n      elPosition = this.offset(element, false);\n\n      if (offsetParentEl !== document.documentElement) {\n        parentOffset = this.offset(offsetParentEl, false);\n      }\n\n      parentOffset.top += offsetParentEl.clientTop;\n      parentOffset.left += offsetParentEl.clientLeft;\n    }\n\n    elPosition.top -= parentOffset.top;\n    elPosition.bottom -= parentOffset.top;\n    elPosition.left -= parentOffset.left;\n    elPosition.right -= parentOffset.left;\n\n    if (round) {\n      elPosition.top = Math.round(elPosition.top);\n      elPosition.bottom = Math.round(elPosition.bottom);\n      elPosition.left = Math.round(elPosition.left);\n      elPosition.right = Math.round(elPosition.right);\n    }\n\n    return elPosition;\n  }\n\n  public offset(element: HTMLElement, round = true): ClientRect {\n    const elBcr = element.getBoundingClientRect();\n    const viewportOffset = {\n      top: window.pageYOffset - document.documentElement.clientTop,\n      left: window.pageXOffset - document.documentElement.clientLeft\n    };\n\n    let elOffset = {\n      height: elBcr.height || element.offsetHeight,\n      width: elBcr.width || element.offsetWidth,\n      top: elBcr.top + viewportOffset.top,\n      bottom: elBcr.bottom + viewportOffset.top,\n      left: elBcr.left + viewportOffset.left,\n      right: elBcr.right + viewportOffset.left\n    };\n\n    if (round) {\n      elOffset.height = Math.round(elOffset.height);\n      elOffset.width = Math.round(elOffset.width);\n      elOffset.top = Math.round(elOffset.top);\n      elOffset.bottom = Math.round(elOffset.bottom);\n      elOffset.left = Math.round(elOffset.left);\n      elOffset.right = Math.round(elOffset.right);\n    }\n\n    return elOffset;\n  }\n\n  public positionElements(\n    hostElement: HTMLElement,\n    targetElement: HTMLElement,\n    placement: string,\n    appendToBody?: boolean\n  ): ClientRect {\n    const hostElPosition = appendToBody\n      ? this.offset(hostElement, false)\n      : this.position(hostElement, false);\n    const targetElStyles = this.getAllStyles(targetElement);\n    const shiftWidth: any = {\n      left: hostElPosition.left,\n      center:\n        hostElPosition.left +\n        hostElPosition.width / 2 -\n        targetElement.offsetWidth / 2,\n      right: hostElPosition.left + hostElPosition.width\n    };\n    const shiftHeight: any = {\n      top: hostElPosition.top,\n      center:\n        hostElPosition.top +\n        hostElPosition.height / 2 -\n        targetElement.offsetHeight / 2,\n      bottom: hostElPosition.top + hostElPosition.height\n    };\n    const targetElBCR = targetElement.getBoundingClientRect();\n    let placementPrimary = placement.split(' ')[0] || 'top';\n    const placementSecondary = placement.split(' ')[1] || 'center';\n\n    let targetElPosition: ClientRect = {\n      height: targetElBCR.height || targetElement.offsetHeight,\n      width: targetElBCR.width || targetElement.offsetWidth,\n      top: 0,\n      bottom: targetElBCR.height || targetElement.offsetHeight,\n      left: 0,\n      right: targetElBCR.width || targetElement.offsetWidth\n    };\n\n    if (placementPrimary === 'auto') {\n      let newPlacementPrimary = this.autoPosition(\n        targetElPosition,\n        hostElPosition,\n        targetElement,\n        placementSecondary\n      );\n      if (!newPlacementPrimary)\n        newPlacementPrimary = this.autoPosition(\n          targetElPosition,\n          hostElPosition,\n          targetElement\n        );\n      if (newPlacementPrimary) placementPrimary = newPlacementPrimary;\n      targetElement.classList.add(placementPrimary);\n    }\n\n    switch (placementPrimary) {\n      case 'top':\n        targetElPosition.top =\n          hostElPosition.top -\n          (targetElement.offsetHeight +\n            parseFloat(targetElStyles.marginBottom));\n        targetElPosition.bottom +=\n          hostElPosition.top - targetElement.offsetHeight;\n        targetElPosition.left = shiftWidth[placementSecondary];\n        targetElPosition.right += shiftWidth[placementSecondary];\n        break;\n      case 'bottom':\n        targetElPosition.top = shiftHeight[placementPrimary];\n        targetElPosition.bottom += shiftHeight[placementPrimary];\n        targetElPosition.left = shiftWidth[placementSecondary];\n        targetElPosition.right += shiftWidth[placementSecondary];\n        break;\n      case 'left':\n        targetElPosition.top = shiftHeight[placementSecondary];\n        targetElPosition.bottom += shiftHeight[placementSecondary];\n        targetElPosition.left =\n          hostElPosition.left -\n          (targetElement.offsetWidth + parseFloat(targetElStyles.marginRight));\n        targetElPosition.right +=\n          hostElPosition.left - targetElement.offsetWidth;\n        break;\n      case 'right':\n        targetElPosition.top = shiftHeight[placementSecondary];\n        targetElPosition.bottom += shiftHeight[placementSecondary];\n        targetElPosition.left = shiftWidth[placementPrimary];\n        targetElPosition.right += shiftWidth[placementPrimary];\n        break;\n    }\n\n    targetElPosition.top = Math.round(targetElPosition.top);\n    targetElPosition.bottom = Math.round(targetElPosition.bottom);\n    targetElPosition.left = Math.round(targetElPosition.left);\n    targetElPosition.right = Math.round(targetElPosition.right);\n\n    return targetElPosition;\n  }\n\n  private autoPosition(\n    targetElPosition: ClientRect,\n    hostElPosition: ClientRect,\n    targetElement: HTMLElement,\n    preferredPosition?: string\n  ) {\n    if (\n      (!preferredPosition || preferredPosition === 'right') &&\n      targetElPosition.left + hostElPosition.left - targetElement.offsetWidth <\n        0\n    ) {\n      return 'right';\n    } else if (\n      (!preferredPosition || preferredPosition === 'top') &&\n      targetElPosition.bottom +\n        hostElPosition.bottom +\n        targetElement.offsetHeight >\n        window.innerHeight\n    ) {\n      return 'top';\n    } else if (\n      (!preferredPosition || preferredPosition === 'bottom') &&\n      targetElPosition.top + hostElPosition.top - targetElement.offsetHeight < 0\n    ) {\n      return 'bottom';\n    } else if (\n      (!preferredPosition || preferredPosition === 'left') &&\n      targetElPosition.right +\n        hostElPosition.right +\n        targetElement.offsetWidth >\n        window.innerWidth\n    ) {\n      return 'left';\n    }\n    return null;\n  }\n\n  private getAllStyles(element: HTMLElement) {\n    return window.getComputedStyle(element);\n  }\n\n  private getStyle(element: HTMLElement, prop: string): string {\n    return (this.getAllStyles(element) as any)[prop];\n  }\n\n  private isStaticPositioned(element: HTMLElement): boolean {\n    return (this.getStyle(element, 'position') || 'static') === 'static';\n  }\n\n  private offsetParent(element: HTMLElement): HTMLElement {\n    let offsetParentEl =\n      <HTMLElement>element.offsetParent || document.documentElement;\n\n    while (\n      offsetParentEl &&\n      offsetParentEl !== document.documentElement &&\n      this.isStaticPositioned(offsetParentEl)\n    ) {\n      offsetParentEl = <HTMLElement>offsetParentEl.offsetParent;\n    }\n\n    return offsetParentEl || document.documentElement;\n  }\n}\n\nconst positionService = new Positioning();\n\nexport function positionElements(\n  hostElement: HTMLElement,\n  targetElement: HTMLElement,\n  placement: string,\n  appendToBody?: boolean\n): void {\n  const pos = positionService.positionElements(\n    hostElement,\n    targetElement,\n    placement,\n    appendToBody\n  );\n\n  targetElement.style.top = `${pos.top}px`;\n  targetElement.style.left = `${pos.left}px`;\n}\n","import {\n  ApplicationRef, ComponentFactoryResolver, ElementRef, Injectable, Injector,\n  NgZone, Renderer2, ViewContainerRef\n} from '@angular/core';\nimport { ComponentLoader } from './component-loader.class';\nimport { PositioningService } from '../positioning';\n\n\nexport class ComponentLoaderFactory {\n  constructor(private _componentFactoryResolver: ComponentFactoryResolver,\n              private _ngZone: NgZone,\n              private _injector: Injector,\n              private _posService: PositioningService,\n              private _applicationRef: ApplicationRef) {}\n\n  /**\n   *\n   * @param _elementRef\n   * @param _viewContainerRef\n   * @param _renderer\n   * @returns {ComponentLoader}\n   */\n  createLoader<T>(_elementRef: ElementRef,\n                  _viewContainerRef: ViewContainerRef,\n                  _renderer: Renderer2): ComponentLoader<T> {\n    return new ComponentLoader<T>(\n      _viewContainerRef,\n      _renderer,\n      _elementRef,\n      this._injector,\n      this._componentFactoryResolver,\n      this._ngZone,\n      this._applicationRef,\n      this._posService\n    );\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ComponentFactoryResolver, },\n{type: NgZone, },\n{type: Injector, },\n{type: PositioningService, },\n{type: ApplicationRef, },\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","// tslint:disable:deprecation\nimport {\n  Directive, ElementRef, EventEmitter, Input, OnDestroy, OnInit, Output,\n  Renderer2, TemplateRef, ViewContainerRef\n} from '@angular/core';\nimport { TooltipContainerComponent } from './tooltip-container.component';\nimport { TooltipConfig } from './tooltip.config';\nimport { ComponentLoader, ComponentLoaderFactory } from '../component-loader';\nimport { OnChange } from '../utils/decorators';\nimport { warnOnce } from '../utils/warn-once';\n\n\nexport class TooltipDirective implements OnInit, OnDestroy {\n  /**\n   * Content to be displayed as tooltip.\n   */\n  @OnChange()\n  \n  tooltip: string | TemplateRef<any>;\n  /** Fired when tooltip content changes */\n  \n  tooltipChange: EventEmitter<string | TemplateRef<any>> = new EventEmitter();\n\n  /**\n   * Placement of a tooltip. Accepts: \"top\", \"bottom\", \"left\", \"right\"\n   */\n   placement: string;\n  /**\n   * Specifies events that should trigger. Supports a space separated list of\n   * event names.\n   */\n   triggers: string;\n  /**\n   * A selector specifying the element the tooltip should be appended to.\n   * Currently only supports \"body\".\n   */\n   container: string;\n\n  /**\n   * Returns whether or not the tooltip is currently being shown\n   */\n  \n  get isOpen(): boolean {\n    return this._tooltip.isShown;\n  }\n\n  set isOpen(value: boolean) {\n    if (value) {\n      this.show();\n    } else {\n      this.hide();\n    }\n  }\n\n  /**\n   * Allows to disable tooltip\n   */\n   isDisabled: boolean;\n\n  /**\n   * Css class for tooltip container\n   */\n   containerClass = '';\n\n  /**\n   * Emits an event when the tooltip is shown\n   */\n   onShown: EventEmitter<any>;\n  /**\n   * Emits an event when the tooltip is hidden\n   */\n   onHidden: EventEmitter<any>;\n\n  /** @deprecated - please use `tooltip` instead */\n  \n  set htmlContent(value: string | TemplateRef<any>) {\n    warnOnce('tooltipHtml was deprecated, please use `tooltip` instead');\n    this.tooltip = value;\n  }\n\n  /** @deprecated - please use `placement` instead */\n  \n  set _placement(value: string) {\n    warnOnce('tooltipPlacement was deprecated, please use `placement` instead');\n    this.placement = value;\n  }\n\n  /** @deprecated - please use `isOpen` instead*/\n  \n  set _isOpen(value: boolean) {\n    warnOnce('tooltipIsOpen was deprecated, please use `isOpen` instead');\n    this.isOpen = value;\n  }\n\n  get _isOpen(): boolean {\n    warnOnce('tooltipIsOpen was deprecated, please use `isOpen` instead');\n    return this.isOpen;\n  }\n\n  /** @deprecated - please use `isDisabled` instead */\n  \n  set _enable(value: boolean) {\n    warnOnce('tooltipEnable was deprecated, please use `isDisabled` instead');\n    this.isDisabled = value;\n  }\n\n  get _enable(): boolean {\n    warnOnce('tooltipEnable was deprecated, please use `isDisabled` instead');\n    return this.isDisabled;\n  }\n\n  /** @deprecated - please use `container=\"body\"` instead */\n  \n  set _appendToBody(value: boolean) {\n    warnOnce(\n      'tooltipAppendToBody was deprecated, please use `container=\"body\"` instead'\n    );\n    this.container = value ? 'body' : this.container;\n  }\n\n  get _appendToBody(): boolean {\n    warnOnce(\n      'tooltipAppendToBody was deprecated, please use `container=\"body\"` instead'\n    );\n    return this.container === 'body';\n  }\n\n  /** @deprecated - removed, will be added to configuration */\n   _animation = true;\n\n  /** @deprecated - will replaced with customClass */\n  \n  set _popupClass(value: string) {\n    warnOnce('tooltipClass deprecated');\n  }\n\n  /** @deprecated - removed */\n  \n  set _tooltipContext(value: any) {\n    warnOnce('tooltipContext deprecated');\n  }\n\n  /** @deprecated */\n   _delay = 0;\n\n  /** @deprecated */\n   _fadeDuration = 150;\n\n  /** @deprecated -  please use `triggers` instead */\n  \n  get _tooltipTrigger(): string | string[] {\n    warnOnce('tooltipTrigger was deprecated, please use `triggers` instead');\n    return this.triggers;\n  }\n\n  set _tooltipTrigger(value: string | string[]) {\n    warnOnce('tooltipTrigger was deprecated, please use `triggers` instead');\n    this.triggers = (value || '').toString();\n  }\n\n  /** @deprecated */\n  \n  tooltipStateChanged: EventEmitter<boolean> = new EventEmitter<boolean>();\n  protected _delayTimeoutId: number | any;\n\n  private _tooltip: ComponentLoader<TooltipContainerComponent>;\n\n  constructor(_viewContainerRef: ViewContainerRef,\n                     _renderer: Renderer2,\n                     _elementRef: ElementRef,\n                     cis: ComponentLoaderFactory,\n                     config: TooltipConfig) {\n    this._tooltip = cis\n      .createLoader<TooltipContainerComponent>(\n        _elementRef,\n        _viewContainerRef,\n        _renderer\n      )\n      .provide({provide: TooltipConfig, useValue: config});\n\n    Object.assign(this, config);\n    this.onShown = this._tooltip.onShown;\n    this.onHidden = this._tooltip.onHidden;\n  }\n\n  ngOnInit(): void {\n    this._tooltip.listen({\n      triggers: this.triggers,\n      show: () => this.show()\n    });\n    this.tooltipChange.subscribe((value: any) => {\n      if (!value) {\n        this._tooltip.hide();\n      }\n    });\n  }\n\n  /**\n   * Toggles an element’s tooltip. This is considered a “manual” triggering of\n   * the tooltip.\n   */\n  toggle(): void {\n    if (this.isOpen) {\n      return this.hide();\n    }\n\n    this.show();\n  }\n\n  /**\n   * Opens an element’s tooltip. This is considered a “manual” triggering of\n   * the tooltip.\n   */\n  show(): void {\n    if (\n      this.isOpen ||\n      this.isDisabled ||\n      this._delayTimeoutId ||\n      !this.tooltip\n    ) {\n      return;\n    }\n\n    const showTooltip = () => {\n      if (this._delayTimeoutId) {\n        this._delayTimeoutId = undefined;\n      }\n\n      this._tooltip\n        .attach(TooltipContainerComponent)\n        .to(this.container)\n        .position({attachment: this.placement})\n        .show({\n          content: this.tooltip,\n          placement: this.placement,\n          containerClass: this.containerClass\n        });\n    }\n\n    if (this._delay) {\n      this._delayTimeoutId = setTimeout(() => {\n        showTooltip();\n      }, this._delay);\n    } else {\n      showTooltip();\n    }\n  }\n\n  /**\n   * Closes an element’s tooltip. This is considered a “manual” triggering of\n   * the tooltip.\n   */\n  hide(): void {\n    if (this._delayTimeoutId) {\n      clearTimeout(this._delayTimeoutId);\n      this._delayTimeoutId = undefined;\n    }\n\n    if (!this._tooltip.isShown) {\n      return;\n    }\n\n    this._tooltip.instance.classMap.in = false;\n    setTimeout(() => {\n      this._tooltip.hide();\n    }, this._fadeDuration);\n  }\n\n  ngOnDestroy(): void {\n    this._tooltip.dispose();\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[tooltip], [tooltipHtml]',\n  exportAs: 'bs-tooltip'\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ViewContainerRef, },\n{type: Renderer2, },\n{type: ElementRef, },\n{type: ComponentLoaderFactory, },\n{type: TooltipConfig, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'tooltip': [{ type: Input },],\n'tooltipChange': [{ type: Output },],\n'placement': [{ type: Input },],\n'triggers': [{ type: Input },],\n'container': [{ type: Input },],\n'isOpen': [{ type: Input },],\n'isDisabled': [{ type: Input },],\n'containerClass': [{ type: Input },],\n'onShown': [{ type: Output },],\n'onHidden': [{ type: Output },],\n'htmlContent': [{ type: Input, args: ['tooltipHtml', ] },],\n'_placement': [{ type: Input, args: ['tooltipPlacement', ] },],\n'_isOpen': [{ type: Input, args: ['tooltipIsOpen', ] },],\n'_enable': [{ type: Input, args: ['tooltipEnable', ] },],\n'_appendToBody': [{ type: Input, args: ['tooltipAppendToBody', ] },],\n'_animation': [{ type: Input, args: ['tooltipAnimation', ] },],\n'_popupClass': [{ type: Input, args: ['tooltipClass', ] },],\n'_tooltipContext': [{ type: Input, args: ['tooltipContext', ] },],\n'_delay': [{ type: Input, args: ['tooltipPopupDelay', ] },],\n'_fadeDuration': [{ type: Input, args: ['tooltipFadeDuration', ] },],\n'_tooltipTrigger': [{ type: Input, args: ['tooltipTrigger', ] },],\n'tooltipStateChanged': [{ type: Output },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/*tslint:disable:no-invalid-this */\nexport function OnChange(defaultValue?: any): any {\n  const sufix = 'Change';\n\n  return function OnChangeHandler(target: any, propertyKey: string): void {\n    const _key = ` __${propertyKey}Value`;\n    Object.defineProperty(target, propertyKey, {\n      get(): any {\n        return this[_key];\n      },\n      set(value: any): void {\n        const prevValue = this[_key];\n        this[_key] = value;\n        if (prevValue !== value && this[propertyKey + sufix]) {\n          this[propertyKey + sufix].emit(value);\n        }\n      }\n    });\n  };\n}\n/* tslint:enable */\n","import { CommonModule } from '@angular/common';\nimport { NgModule, ModuleWithProviders } from '@angular/core';\nimport { TooltipContainerComponent } from './tooltip-container.component';\nimport { TooltipDirective } from './tooltip.directive';\nimport { TooltipConfig } from './tooltip.config';\nimport { ComponentLoaderFactory } from '../component-loader';\nimport { PositioningService } from '../positioning';\n\n\nexport class TooltipModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: TooltipModule,\n      providers: [TooltipConfig, ComponentLoaderFactory, PositioningService]\n    };\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  imports: [CommonModule],\n  declarations: [TooltipDirective, TooltipContainerComponent],\n  exports: [TooltipDirective],\n  entryComponents: [TooltipContainerComponent]\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/* tslint:disable:max-file-line-count */\nexport const latinMap: { [key: string]: string } = {\n  Á: 'A',\n  Ă: 'A',\n  Ắ: 'A',\n  Ặ: 'A',\n  Ằ: 'A',\n  Ẳ: 'A',\n  Ẵ: 'A',\n  Ǎ: 'A',\n  Â: 'A',\n  Ấ: 'A',\n  Ậ: 'A',\n  Ầ: 'A',\n  Ẩ: 'A',\n  Ẫ: 'A',\n  Ä: 'A',\n  Ǟ: 'A',\n  Ȧ: 'A',\n  Ǡ: 'A',\n  Ạ: 'A',\n  Ȁ: 'A',\n  À: 'A',\n  Ả: 'A',\n  Ȃ: 'A',\n  Ā: 'A',\n  Ą: 'A',\n  Å: 'A',\n  Ǻ: 'A',\n  Ḁ: 'A',\n  Ⱥ: 'A',\n  Ã: 'A',\n  Ꜳ: 'AA',\n  Æ: 'AE',\n  Ǽ: 'AE',\n  Ǣ: 'AE',\n  Ꜵ: 'AO',\n  Ꜷ: 'AU',\n  Ꜹ: 'AV',\n  Ꜻ: 'AV',\n  Ꜽ: 'AY',\n  Ḃ: 'B',\n  Ḅ: 'B',\n  Ɓ: 'B',\n  Ḇ: 'B',\n  Ƀ: 'B',\n  Ƃ: 'B',\n  Ć: 'C',\n  Č: 'C',\n  Ç: 'C',\n  Ḉ: 'C',\n  Ĉ: 'C',\n  Ċ: 'C',\n  Ƈ: 'C',\n  Ȼ: 'C',\n  Ď: 'D',\n  Ḑ: 'D',\n  Ḓ: 'D',\n  Ḋ: 'D',\n  Ḍ: 'D',\n  Ɗ: 'D',\n  Ḏ: 'D',\n  ǲ: 'D',\n  ǅ: 'D',\n  Đ: 'D',\n  Ƌ: 'D',\n  Ǳ: 'DZ',\n  Ǆ: 'DZ',\n  É: 'E',\n  Ĕ: 'E',\n  Ě: 'E',\n  Ȩ: 'E',\n  Ḝ: 'E',\n  Ê: 'E',\n  Ế: 'E',\n  Ệ: 'E',\n  Ề: 'E',\n  Ể: 'E',\n  Ễ: 'E',\n  Ḙ: 'E',\n  Ë: 'E',\n  Ė: 'E',\n  Ẹ: 'E',\n  Ȅ: 'E',\n  È: 'E',\n  Ẻ: 'E',\n  Ȇ: 'E',\n  Ē: 'E',\n  Ḗ: 'E',\n  Ḕ: 'E',\n  Ę: 'E',\n  Ɇ: 'E',\n  Ẽ: 'E',\n  Ḛ: 'E',\n  Ꝫ: 'ET',\n  Ḟ: 'F',\n  Ƒ: 'F',\n  Ǵ: 'G',\n  Ğ: 'G',\n  Ǧ: 'G',\n  Ģ: 'G',\n  Ĝ: 'G',\n  Ġ: 'G',\n  Ɠ: 'G',\n  Ḡ: 'G',\n  Ǥ: 'G',\n  Ḫ: 'H',\n  Ȟ: 'H',\n  Ḩ: 'H',\n  Ĥ: 'H',\n  Ⱨ: 'H',\n  Ḧ: 'H',\n  Ḣ: 'H',\n  Ḥ: 'H',\n  Ħ: 'H',\n  Í: 'I',\n  Ĭ: 'I',\n  Ǐ: 'I',\n  Î: 'I',\n  Ï: 'I',\n  Ḯ: 'I',\n  İ: 'I',\n  Ị: 'I',\n  Ȉ: 'I',\n  Ì: 'I',\n  Ỉ: 'I',\n  Ȋ: 'I',\n  Ī: 'I',\n  Į: 'I',\n  Ɨ: 'I',\n  Ĩ: 'I',\n  Ḭ: 'I',\n  Ꝺ: 'D',\n  Ꝼ: 'F',\n  Ᵹ: 'G',\n  Ꞃ: 'R',\n  Ꞅ: 'S',\n  Ꞇ: 'T',\n  Ꝭ: 'IS',\n  Ĵ: 'J',\n  Ɉ: 'J',\n  Ḱ: 'K',\n  Ǩ: 'K',\n  Ķ: 'K',\n  Ⱪ: 'K',\n  Ꝃ: 'K',\n  Ḳ: 'K',\n  Ƙ: 'K',\n  Ḵ: 'K',\n  Ꝁ: 'K',\n  Ꝅ: 'K',\n  Ĺ: 'L',\n  Ƚ: 'L',\n  Ľ: 'L',\n  Ļ: 'L',\n  Ḽ: 'L',\n  Ḷ: 'L',\n  Ḹ: 'L',\n  Ⱡ: 'L',\n  Ꝉ: 'L',\n  Ḻ: 'L',\n  Ŀ: 'L',\n  Ɫ: 'L',\n  ǈ: 'L',\n  Ł: 'L',\n  Ǉ: 'LJ',\n  Ḿ: 'M',\n  Ṁ: 'M',\n  Ṃ: 'M',\n  Ɱ: 'M',\n  Ń: 'N',\n  Ň: 'N',\n  Ņ: 'N',\n  Ṋ: 'N',\n  Ṅ: 'N',\n  Ṇ: 'N',\n  Ǹ: 'N',\n  Ɲ: 'N',\n  Ṉ: 'N',\n  Ƞ: 'N',\n  ǋ: 'N',\n  Ñ: 'N',\n  Ǌ: 'NJ',\n  Ó: 'O',\n  Ŏ: 'O',\n  Ǒ: 'O',\n  Ô: 'O',\n  Ố: 'O',\n  Ộ: 'O',\n  Ồ: 'O',\n  Ổ: 'O',\n  Ỗ: 'O',\n  Ö: 'O',\n  Ȫ: 'O',\n  Ȯ: 'O',\n  Ȱ: 'O',\n  Ọ: 'O',\n  Ő: 'O',\n  Ȍ: 'O',\n  Ò: 'O',\n  Ỏ: 'O',\n  Ơ: 'O',\n  Ớ: 'O',\n  Ợ: 'O',\n  Ờ: 'O',\n  Ở: 'O',\n  Ỡ: 'O',\n  Ȏ: 'O',\n  Ꝋ: 'O',\n  Ꝍ: 'O',\n  Ō: 'O',\n  Ṓ: 'O',\n  Ṑ: 'O',\n  Ɵ: 'O',\n  Ǫ: 'O',\n  Ǭ: 'O',\n  Ø: 'O',\n  Ǿ: 'O',\n  Õ: 'O',\n  Ṍ: 'O',\n  Ṏ: 'O',\n  Ȭ: 'O',\n  Ƣ: 'OI',\n  Ꝏ: 'OO',\n  Ɛ: 'E',\n  Ɔ: 'O',\n  Ȣ: 'OU',\n  Ṕ: 'P',\n  Ṗ: 'P',\n  Ꝓ: 'P',\n  Ƥ: 'P',\n  Ꝕ: 'P',\n  Ᵽ: 'P',\n  Ꝑ: 'P',\n  Ꝙ: 'Q',\n  Ꝗ: 'Q',\n  Ŕ: 'R',\n  Ř: 'R',\n  Ŗ: 'R',\n  Ṙ: 'R',\n  Ṛ: 'R',\n  Ṝ: 'R',\n  Ȑ: 'R',\n  Ȓ: 'R',\n  Ṟ: 'R',\n  Ɍ: 'R',\n  Ɽ: 'R',\n  Ꜿ: 'C',\n  Ǝ: 'E',\n  Ś: 'S',\n  Ṥ: 'S',\n  Š: 'S',\n  Ṧ: 'S',\n  Ş: 'S',\n  Ŝ: 'S',\n  Ș: 'S',\n  Ṡ: 'S',\n  Ṣ: 'S',\n  Ṩ: 'S',\n  Ť: 'T',\n  Ţ: 'T',\n  Ṱ: 'T',\n  Ț: 'T',\n  Ⱦ: 'T',\n  Ṫ: 'T',\n  Ṭ: 'T',\n  Ƭ: 'T',\n  Ṯ: 'T',\n  Ʈ: 'T',\n  Ŧ: 'T',\n  Ɐ: 'A',\n  Ꞁ: 'L',\n  Ɯ: 'M',\n  Ʌ: 'V',\n  Ꜩ: 'TZ',\n  Ú: 'U',\n  Ŭ: 'U',\n  Ǔ: 'U',\n  Û: 'U',\n  Ṷ: 'U',\n  Ü: 'U',\n  Ǘ: 'U',\n  Ǚ: 'U',\n  Ǜ: 'U',\n  Ǖ: 'U',\n  Ṳ: 'U',\n  Ụ: 'U',\n  Ű: 'U',\n  Ȕ: 'U',\n  Ù: 'U',\n  Ủ: 'U',\n  Ư: 'U',\n  Ứ: 'U',\n  Ự: 'U',\n  Ừ: 'U',\n  Ử: 'U',\n  Ữ: 'U',\n  Ȗ: 'U',\n  Ū: 'U',\n  Ṻ: 'U',\n  Ų: 'U',\n  Ů: 'U',\n  Ũ: 'U',\n  Ṹ: 'U',\n  Ṵ: 'U',\n  Ꝟ: 'V',\n  Ṿ: 'V',\n  Ʋ: 'V',\n  Ṽ: 'V',\n  Ꝡ: 'VY',\n  Ẃ: 'W',\n  Ŵ: 'W',\n  Ẅ: 'W',\n  Ẇ: 'W',\n  Ẉ: 'W',\n  Ẁ: 'W',\n  Ⱳ: 'W',\n  Ẍ: 'X',\n  Ẋ: 'X',\n  Ý: 'Y',\n  Ŷ: 'Y',\n  Ÿ: 'Y',\n  Ẏ: 'Y',\n  Ỵ: 'Y',\n  Ỳ: 'Y',\n  Ƴ: 'Y',\n  Ỷ: 'Y',\n  Ỿ: 'Y',\n  Ȳ: 'Y',\n  Ɏ: 'Y',\n  Ỹ: 'Y',\n  Ź: 'Z',\n  Ž: 'Z',\n  Ẑ: 'Z',\n  Ⱬ: 'Z',\n  Ż: 'Z',\n  Ẓ: 'Z',\n  Ȥ: 'Z',\n  Ẕ: 'Z',\n  Ƶ: 'Z',\n  Ĳ: 'IJ',\n  Œ: 'OE',\n  ᴀ: 'A',\n  ᴁ: 'AE',\n  ʙ: 'B',\n  ᴃ: 'B',\n  ᴄ: 'C',\n  ᴅ: 'D',\n  ᴇ: 'E',\n  ꜰ: 'F',\n  ɢ: 'G',\n  ʛ: 'G',\n  ʜ: 'H',\n  ɪ: 'I',\n  ʁ: 'R',\n  ᴊ: 'J',\n  ᴋ: 'K',\n  ʟ: 'L',\n  ᴌ: 'L',\n  ᴍ: 'M',\n  ɴ: 'N',\n  ᴏ: 'O',\n  ɶ: 'OE',\n  ᴐ: 'O',\n  ᴕ: 'OU',\n  ᴘ: 'P',\n  ʀ: 'R',\n  ᴎ: 'N',\n  ᴙ: 'R',\n  ꜱ: 'S',\n  ᴛ: 'T',\n  ⱻ: 'E',\n  ᴚ: 'R',\n  ᴜ: 'U',\n  ᴠ: 'V',\n  ᴡ: 'W',\n  ʏ: 'Y',\n  ᴢ: 'Z',\n  á: 'a',\n  ă: 'a',\n  ắ: 'a',\n  ặ: 'a',\n  ằ: 'a',\n  ẳ: 'a',\n  ẵ: 'a',\n  ǎ: 'a',\n  â: 'a',\n  ấ: 'a',\n  ậ: 'a',\n  ầ: 'a',\n  ẩ: 'a',\n  ẫ: 'a',\n  ä: 'a',\n  ǟ: 'a',\n  ȧ: 'a',\n  ǡ: 'a',\n  ạ: 'a',\n  ȁ: 'a',\n  à: 'a',\n  ả: 'a',\n  ȃ: 'a',\n  ā: 'a',\n  ą: 'a',\n  ᶏ: 'a',\n  ẚ: 'a',\n  å: 'a',\n  ǻ: 'a',\n  ḁ: 'a',\n  ⱥ: 'a',\n  ã: 'a',\n  ꜳ: 'aa',\n  æ: 'ae',\n  ǽ: 'ae',\n  ǣ: 'ae',\n  ꜵ: 'ao',\n  ꜷ: 'au',\n  ꜹ: 'av',\n  ꜻ: 'av',\n  ꜽ: 'ay',\n  ḃ: 'b',\n  ḅ: 'b',\n  ɓ: 'b',\n  ḇ: 'b',\n  ᵬ: 'b',\n  ᶀ: 'b',\n  ƀ: 'b',\n  ƃ: 'b',\n  ɵ: 'o',\n  ć: 'c',\n  č: 'c',\n  ç: 'c',\n  ḉ: 'c',\n  ĉ: 'c',\n  ɕ: 'c',\n  ċ: 'c',\n  ƈ: 'c',\n  ȼ: 'c',\n  ď: 'd',\n  ḑ: 'd',\n  ḓ: 'd',\n  ȡ: 'd',\n  ḋ: 'd',\n  ḍ: 'd',\n  ɗ: 'd',\n  ᶑ: 'd',\n  ḏ: 'd',\n  ᵭ: 'd',\n  ᶁ: 'd',\n  đ: 'd',\n  ɖ: 'd',\n  ƌ: 'd',\n  ı: 'i',\n  ȷ: 'j',\n  ɟ: 'j',\n  ʄ: 'j',\n  ǳ: 'dz',\n  ǆ: 'dz',\n  é: 'e',\n  ĕ: 'e',\n  ě: 'e',\n  ȩ: 'e',\n  ḝ: 'e',\n  ê: 'e',\n  ế: 'e',\n  ệ: 'e',\n  ề: 'e',\n  ể: 'e',\n  ễ: 'e',\n  ḙ: 'e',\n  ë: 'e',\n  ė: 'e',\n  ẹ: 'e',\n  ȅ: 'e',\n  è: 'e',\n  ẻ: 'e',\n  ȇ: 'e',\n  ē: 'e',\n  ḗ: 'e',\n  ḕ: 'e',\n  ⱸ: 'e',\n  ę: 'e',\n  ᶒ: 'e',\n  ɇ: 'e',\n  ẽ: 'e',\n  ḛ: 'e',\n  ꝫ: 'et',\n  ḟ: 'f',\n  ƒ: 'f',\n  ᵮ: 'f',\n  ᶂ: 'f',\n  ǵ: 'g',\n  ğ: 'g',\n  ǧ: 'g',\n  ģ: 'g',\n  ĝ: 'g',\n  ġ: 'g',\n  ɠ: 'g',\n  ḡ: 'g',\n  ᶃ: 'g',\n  ǥ: 'g',\n  ḫ: 'h',\n  ȟ: 'h',\n  ḩ: 'h',\n  ĥ: 'h',\n  ⱨ: 'h',\n  ḧ: 'h',\n  ḣ: 'h',\n  ḥ: 'h',\n  ɦ: 'h',\n  ẖ: 'h',\n  ħ: 'h',\n  ƕ: 'hv',\n  í: 'i',\n  ĭ: 'i',\n  ǐ: 'i',\n  î: 'i',\n  ï: 'i',\n  ḯ: 'i',\n  ị: 'i',\n  ȉ: 'i',\n  ì: 'i',\n  ỉ: 'i',\n  ȋ: 'i',\n  ī: 'i',\n  į: 'i',\n  ᶖ: 'i',\n  ɨ: 'i',\n  ĩ: 'i',\n  ḭ: 'i',\n  ꝺ: 'd',\n  ꝼ: 'f',\n  ᵹ: 'g',\n  ꞃ: 'r',\n  ꞅ: 's',\n  ꞇ: 't',\n  ꝭ: 'is',\n  ǰ: 'j',\n  ĵ: 'j',\n  ʝ: 'j',\n  ɉ: 'j',\n  ḱ: 'k',\n  ǩ: 'k',\n  ķ: 'k',\n  ⱪ: 'k',\n  ꝃ: 'k',\n  ḳ: 'k',\n  ƙ: 'k',\n  ḵ: 'k',\n  ᶄ: 'k',\n  ꝁ: 'k',\n  ꝅ: 'k',\n  ĺ: 'l',\n  ƚ: 'l',\n  ɬ: 'l',\n  ľ: 'l',\n  ļ: 'l',\n  ḽ: 'l',\n  ȴ: 'l',\n  ḷ: 'l',\n  ḹ: 'l',\n  ⱡ: 'l',\n  ꝉ: 'l',\n  ḻ: 'l',\n  ŀ: 'l',\n  ɫ: 'l',\n  ᶅ: 'l',\n  ɭ: 'l',\n  ł: 'l',\n  ǉ: 'lj',\n  ſ: 's',\n  ẜ: 's',\n  ẛ: 's',\n  ẝ: 's',\n  ḿ: 'm',\n  ṁ: 'm',\n  ṃ: 'm',\n  ɱ: 'm',\n  ᵯ: 'm',\n  ᶆ: 'm',\n  ń: 'n',\n  ň: 'n',\n  ņ: 'n',\n  ṋ: 'n',\n  ȵ: 'n',\n  ṅ: 'n',\n  ṇ: 'n',\n  ǹ: 'n',\n  ɲ: 'n',\n  ṉ: 'n',\n  ƞ: 'n',\n  ᵰ: 'n',\n  ᶇ: 'n',\n  ɳ: 'n',\n  ñ: 'n',\n  ǌ: 'nj',\n  ó: 'o',\n  ŏ: 'o',\n  ǒ: 'o',\n  ô: 'o',\n  ố: 'o',\n  ộ: 'o',\n  ồ: 'o',\n  ổ: 'o',\n  ỗ: 'o',\n  ö: 'o',\n  ȫ: 'o',\n  ȯ: 'o',\n  ȱ: 'o',\n  ọ: 'o',\n  ő: 'o',\n  ȍ: 'o',\n  ò: 'o',\n  ỏ: 'o',\n  ơ: 'o',\n  ớ: 'o',\n  ợ: 'o',\n  ờ: 'o',\n  ở: 'o',\n  ỡ: 'o',\n  ȏ: 'o',\n  ꝋ: 'o',\n  ꝍ: 'o',\n  ⱺ: 'o',\n  ō: 'o',\n  ṓ: 'o',\n  ṑ: 'o',\n  ǫ: 'o',\n  ǭ: 'o',\n  ø: 'o',\n  ǿ: 'o',\n  õ: 'o',\n  ṍ: 'o',\n  ṏ: 'o',\n  ȭ: 'o',\n  ƣ: 'oi',\n  ꝏ: 'oo',\n  ɛ: 'e',\n  ᶓ: 'e',\n  ɔ: 'o',\n  ᶗ: 'o',\n  ȣ: 'ou',\n  ṕ: 'p',\n  ṗ: 'p',\n  ꝓ: 'p',\n  ƥ: 'p',\n  ᵱ: 'p',\n  ᶈ: 'p',\n  ꝕ: 'p',\n  ᵽ: 'p',\n  ꝑ: 'p',\n  ꝙ: 'q',\n  ʠ: 'q',\n  ɋ: 'q',\n  ꝗ: 'q',\n  ŕ: 'r',\n  ř: 'r',\n  ŗ: 'r',\n  ṙ: 'r',\n  ṛ: 'r',\n  ṝ: 'r',\n  ȑ: 'r',\n  ɾ: 'r',\n  ᵳ: 'r',\n  ȓ: 'r',\n  ṟ: 'r',\n  ɼ: 'r',\n  ᵲ: 'r',\n  ᶉ: 'r',\n  ɍ: 'r',\n  ɽ: 'r',\n  ↄ: 'c',\n  ꜿ: 'c',\n  ɘ: 'e',\n  ɿ: 'r',\n  ś: 's',\n  ṥ: 's',\n  š: 's',\n  ṧ: 's',\n  ş: 's',\n  ŝ: 's',\n  ș: 's',\n  ṡ: 's',\n  ṣ: 's',\n  ṩ: 's',\n  ʂ: 's',\n  ᵴ: 's',\n  ᶊ: 's',\n  ȿ: 's',\n  ɡ: 'g',\n  ᴑ: 'o',\n  ᴓ: 'o',\n  ᴝ: 'u',\n  ť: 't',\n  ţ: 't',\n  ṱ: 't',\n  ț: 't',\n  ȶ: 't',\n  ẗ: 't',\n  ⱦ: 't',\n  ṫ: 't',\n  ṭ: 't',\n  ƭ: 't',\n  ṯ: 't',\n  ᵵ: 't',\n  ƫ: 't',\n  ʈ: 't',\n  ŧ: 't',\n  ᵺ: 'th',\n  ɐ: 'a',\n  ᴂ: 'ae',\n  ǝ: 'e',\n  ᵷ: 'g',\n  ɥ: 'h',\n  ʮ: 'h',\n  ʯ: 'h',\n  ᴉ: 'i',\n  ʞ: 'k',\n  ꞁ: 'l',\n  ɯ: 'm',\n  ɰ: 'm',\n  ᴔ: 'oe',\n  ɹ: 'r',\n  ɻ: 'r',\n  ɺ: 'r',\n  ⱹ: 'r',\n  ʇ: 't',\n  ʌ: 'v',\n  ʍ: 'w',\n  ʎ: 'y',\n  ꜩ: 'tz',\n  ú: 'u',\n  ŭ: 'u',\n  ǔ: 'u',\n  û: 'u',\n  ṷ: 'u',\n  ü: 'u',\n  ǘ: 'u',\n  ǚ: 'u',\n  ǜ: 'u',\n  ǖ: 'u',\n  ṳ: 'u',\n  ụ: 'u',\n  ű: 'u',\n  ȕ: 'u',\n  ù: 'u',\n  ủ: 'u',\n  ư: 'u',\n  ứ: 'u',\n  ự: 'u',\n  ừ: 'u',\n  ử: 'u',\n  ữ: 'u',\n  ȗ: 'u',\n  ū: 'u',\n  ṻ: 'u',\n  ų: 'u',\n  ᶙ: 'u',\n  ů: 'u',\n  ũ: 'u',\n  ṹ: 'u',\n  ṵ: 'u',\n  ᵫ: 'ue',\n  ꝸ: 'um',\n  ⱴ: 'v',\n  ꝟ: 'v',\n  ṿ: 'v',\n  ʋ: 'v',\n  ᶌ: 'v',\n  ⱱ: 'v',\n  ṽ: 'v',\n  ꝡ: 'vy',\n  ẃ: 'w',\n  ŵ: 'w',\n  ẅ: 'w',\n  ẇ: 'w',\n  ẉ: 'w',\n  ẁ: 'w',\n  ⱳ: 'w',\n  ẘ: 'w',\n  ẍ: 'x',\n  ẋ: 'x',\n  ᶍ: 'x',\n  ý: 'y',\n  ŷ: 'y',\n  ÿ: 'y',\n  ẏ: 'y',\n  ỵ: 'y',\n  ỳ: 'y',\n  ƴ: 'y',\n  ỷ: 'y',\n  ỿ: 'y',\n  ȳ: 'y',\n  ẙ: 'y',\n  ɏ: 'y',\n  ỹ: 'y',\n  ź: 'z',\n  ž: 'z',\n  ẑ: 'z',\n  ʑ: 'z',\n  ⱬ: 'z',\n  ż: 'z',\n  ẓ: 'z',\n  ȥ: 'z',\n  ẕ: 'z',\n  ᵶ: 'z',\n  ᶎ: 'z',\n  ʐ: 'z',\n  ƶ: 'z',\n  ɀ: 'z',\n  ﬀ: 'ff',\n  ﬃ: 'ffi',\n  ﬄ: 'ffl',\n  ﬁ: 'fi',\n  ﬂ: 'fl',\n  ĳ: 'ij',\n  œ: 'oe',\n  ﬆ: 'st',\n  ₐ: 'a',\n  ₑ: 'e',\n  ᵢ: 'i',\n  ⱼ: 'j',\n  ₒ: 'o',\n  ᵣ: 'r',\n  ᵤ: 'u',\n  ᵥ: 'v',\n  ₓ: 'x'\n};\n","export class TypeaheadMatch {\n  readonly value: string;\n  readonly item: any;\n  protected header: boolean;\n\n  constructor(item: any, value: string = item, header = false) {\n    this.item = item;\n    this.value = value;\n    this.header = header;\n  }\n\n  isHeader(): boolean {\n    return this.header;\n  }\n\n  toString(): string {\n    return this.value;\n  }\n}\n","import { window } from './facade/browser';\n\nexport class Utils {\n  static reflow(element: any): void {\n    ((bs: any): void => bs)(element.offsetHeight);\n  }\n\n  // source: https://github.com/jquery/jquery/blob/master/src/css/var/getStyles.js\n  static getStyles(elem: any): any {\n    // Support: IE <=11 only, Firefox <=30 (#15098, #14150)\n    // IE throws on elements created in popups\n    // FF meanwhile throws on frame elements through \"defaultView.getComputedStyle\"\n    let view = elem.ownerDocument.defaultView;\n\n    if (!view || !view.opener) {\n      view = window;\n    }\n\n    return view.getComputedStyle(elem);\n  }\n}\n","import { Component, ElementRef, HostListener, QueryList, TemplateRef, ViewChild, ViewChildren, Renderer2 } from '@angular/core';\nimport { isBs3 } from '../utils/theme-provider';\nimport { TypeaheadMatch } from './typeahead-match.class';\nimport { latinize } from './typeahead-utils';\nimport { TypeaheadDirective } from './typeahead.directive';\nimport { Utils } from '../utils/utils.class';\n\n\nexport class TypeaheadContainerComponent {\n  parent: TypeaheadDirective;\n  query: any;\n  element: ElementRef;\n  isFocused = false;\n  top: string;\n  left: string;\n  display: string;\n  placement: string;\n  dropup: boolean;\n  guiHeight: string;\n  needScrollbar: boolean;\n\n  get isBs4(): boolean {\n    return !isBs3();\n  }\n\n  protected _active: TypeaheadMatch;\n  protected _matches: TypeaheadMatch[] = [];\n\n  \n  private ulElement: ElementRef;\n\n  \n  private liElements: QueryList<ElementRef>;\n\n  constructor(element: ElementRef, private renderer: Renderer2) {\n    this.element = element;\n  }\n\n  get active(): TypeaheadMatch {\n    return this._active;\n  }\n\n  get matches(): TypeaheadMatch[] {\n    return this._matches;\n  }\n\n  set matches(value: TypeaheadMatch[]) {\n    this._matches = value;\n    this.needScrollbar = this.typeaheadScrollable && this.typeaheadOptionsInScrollableView < this.matches.length;\n    if (this.typeaheadScrollable) {\n      setTimeout(() => {\n        this.setScrollableMode();\n      });\n    }\n\n    if (this._matches.length > 0) {\n      this._active = this._matches[0];\n      if (this._active.isHeader()) {\n        this.nextActiveMatch();\n      }\n    }\n  }\n\n  get optionsListTemplate(): TemplateRef<any> {\n    return this.parent ? this.parent.optionsListTemplate : undefined;\n  }\n\n  get typeaheadScrollable(): boolean {\n    return this.parent ? this.parent.typeaheadScrollable : false;\n  }\n\n\n  get typeaheadOptionsInScrollableView(): number {\n    return this.parent ? this.parent.typeaheadOptionsInScrollableView : 5;\n  }\n\n  get itemTemplate(): TemplateRef<any> {\n    return this.parent ? this.parent.typeaheadItemTemplate : undefined;\n  }\n\n  selectActiveMatch(): void {\n    this.selectMatch(this._active);\n  }\n\n  prevActiveMatch(): void {\n    const index = this.matches.indexOf(this._active);\n    this._active = this.matches[\n      index - 1 < 0 ? this.matches.length - 1 : index - 1\n      ];\n    if (this._active.isHeader()) {\n      this.prevActiveMatch();\n    }\n    if (this.typeaheadScrollable) {\n      this.scrollPrevious(index);\n    }\n  }\n\n  nextActiveMatch(): void {\n    const index = this.matches.indexOf(this._active);\n    this._active = this.matches[\n      index + 1 > this.matches.length - 1 ? 0 : index + 1\n      ];\n    if (this._active.isHeader()) {\n      this.nextActiveMatch();\n    }\n    if (this.typeaheadScrollable) {\n      this.scrollNext(index);\n    }\n  }\n\n  selectActive(value: TypeaheadMatch): void {\n    this.isFocused = true;\n    this._active = value;\n  }\n\n  hightlight(match: TypeaheadMatch, query: any): string {\n    let itemStr: string = match.value;\n    let itemStrHelper: string = (this.parent && this.parent.typeaheadLatinize\n      ? latinize(itemStr)\n      : itemStr).toLowerCase();\n    let startIdx: number;\n    let tokenLen: number;\n    // Replaces the capture string with the same string inside of a \"strong\" tag\n    if (typeof query === 'object') {\n      const queryLen: number = query.length;\n      for (let i = 0; i < queryLen; i += 1) {\n        // query[i] is already latinized and lower case\n        startIdx = itemStrHelper.indexOf(query[i]);\n        tokenLen = query[i].length;\n        if (startIdx >= 0 && tokenLen > 0) {\n          itemStr =\n            `${itemStr.substring(0, startIdx)}<strong>${itemStr.substring(startIdx, startIdx + tokenLen)}</strong>` +\n            `${itemStr.substring(startIdx + tokenLen)}`;\n          itemStrHelper =\n            `${itemStrHelper.substring(0, startIdx)}        ${' '.repeat(tokenLen)}         ` +\n            `${itemStrHelper.substring(startIdx + tokenLen)}`;\n        }\n      }\n    } else if (query) {\n      // query is already latinized and lower case\n      startIdx = itemStrHelper.indexOf(query);\n      tokenLen = query.length;\n      if (startIdx >= 0 && tokenLen > 0) {\n        itemStr =\n          `${itemStr.substring(0, startIdx)}<strong>${itemStr.substring(startIdx, startIdx + tokenLen)}</strong>` +\n          `${itemStr.substring(startIdx + tokenLen)}`;\n      }\n    }\n\n    return itemStr;\n  }\n\n  \n  \n  focusLost(): void {\n    this.isFocused = false;\n  }\n\n  isActive(value: TypeaheadMatch): boolean {\n    return this._active === value;\n  }\n\n  selectMatch(value: TypeaheadMatch, e: Event = void 0): boolean {\n    if (e) {\n      e.stopPropagation();\n      e.preventDefault();\n    }\n    this.parent.changeModel(value);\n    setTimeout(() => this.parent.typeaheadOnSelect.emit(value), 0);\n\n    return false;\n  }\n\n  setScrollableMode(): void {\n    if (!this.ulElement) {\n      this.ulElement = this.element;\n    }\n    if (this.liElements.first) {\n      const ulStyles = Utils.getStyles(this.ulElement.nativeElement);\n      const liStyles = Utils.getStyles(this.liElements.first.nativeElement);\n      const ulPaddingBottom = parseFloat((ulStyles['padding-bottom'] ? ulStyles['padding-bottom'] : '').replace('px', ''));\n      const ulPaddingTop = parseFloat((ulStyles['padding-top'] ? ulStyles['padding-top'] : '0').replace('px', ''));\n      const optionHeight = parseFloat((liStyles['height'] ? liStyles['height'] : '0').replace('px', ''));\n      const height = this.typeaheadOptionsInScrollableView * optionHeight;\n      this.guiHeight = (height + ulPaddingTop + ulPaddingBottom) + 'px';\n    }\n    this.renderer.setStyle(this.element.nativeElement, 'visibility', 'visible');\n  }\n\n  scrollPrevious(index: number): void {\n    if (index === 0) {\n      this.scrollToBottom();\n      return;\n    }\n    if (this.liElements) {\n      const liElement = this.liElements.toArray()[index - 1];\n      if (liElement && !this.isScrolledIntoView(liElement.nativeElement)) {\n        this.ulElement.nativeElement.scrollTop = liElement.nativeElement.offsetTop;\n      }\n    }\n  }\n\n  scrollNext(index: number): void {\n    if (index + 1 > this.matches.length - 1) {\n      this.scrollToTop();\n      return;\n    }\n    if (this.liElements) {\n      const liElement = this.liElements.toArray()[index + 1];\n      if (liElement && !this.isScrolledIntoView(liElement.nativeElement)) {\n        this.ulElement.nativeElement.scrollTop =\n          liElement.nativeElement.offsetTop -\n          this.ulElement.nativeElement.offsetHeight +\n          liElement.nativeElement.offsetHeight;\n      }\n    }\n  }\n\n\n  private isScrolledIntoView = function (elem: HTMLElement) {\n    const containerViewTop = this.ulElement.nativeElement.scrollTop;\n    const containerViewBottom = containerViewTop + this.ulElement.nativeElement.offsetHeight;\n    const elemTop = elem.offsetTop;\n    const elemBottom = elemTop + elem.offsetHeight;\n\n    return ((elemBottom <= containerViewBottom) && (elemTop >= containerViewTop));\n  }\n\n  private scrollToBottom(): void {\n    this.ulElement.nativeElement.scrollTop = this.ulElement.nativeElement.scrollHeight;\n  }\n\n  private scrollToTop(): void {\n    this.ulElement.nativeElement.scrollTop = 0;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'typeahead-container',\n  // tslint:disable-next-line\n  template: \"<!-- inject options list template --> <ng-template [ngTemplateOutlet]=\\\"optionsListTemplate || (isBs4 ? bs4Template : bs3Template)\\\" [ngTemplateOutletContext]=\\\"{matches:matches, itemTemplate:itemTemplate, query:query}\\\"></ng-template> <!-- default options item template --> <ng-template #bsItemTemplate let-match=\\\"match\\\" let-query=\\\"query\\\"><span [innerHtml]=\\\"hightlight(match, query)\\\"></span> </ng-template> <!-- Bootstrap 3 options list template --> <ng-template #bs3Template> <ul class=\\\"dropdown-menu\\\" #ulElement [style.overflow-y]=\\\"needScrollbar ? 'scroll': 'auto'\\\" [style.height]=\\\"needScrollbar ? guiHeight: 'auto'\\\"> <ng-template ngFor let-match let-i=\\\"index\\\" [ngForOf]=\\\"matches\\\"> <li #liElements *ngIf=\\\"match.isHeader()\\\" class=\\\"dropdown-header\\\">{{ match }}</li> <li #liElements *ngIf=\\\"!match.isHeader()\\\" [class.active]=\\\"isActive(match)\\\" (mouseenter)=\\\"selectActive(match)\\\"> <a href=\\\"#\\\" (click)=\\\"selectMatch(match, $event)\\\" tabindex=\\\"-1\\\"> <ng-template [ngTemplateOutlet]=\\\"itemTemplate || bsItemTemplate\\\" [ngTemplateOutletContext]=\\\"{item:match.item, index:i, match:match, query:query}\\\"></ng-template> </a> </li> </ng-template> </ul> </ng-template> <!-- Bootstrap 4 options list template --> <ng-template #bs4Template> <ng-template ngFor let-match let-i=\\\"index\\\" [ngForOf]=\\\"matches\\\"> <h6 *ngIf=\\\"match.isHeader()\\\" class=\\\"dropdown-header\\\">{{ match }}</h6> <ng-template [ngIf]=\\\"!match.isHeader()\\\"> <button #liElements class=\\\"dropdown-item\\\" (click)=\\\"selectMatch(match, $event)\\\" (mouseenter)=\\\"selectActive(match)\\\" [class.active]=\\\"isActive(match)\\\"> <ng-template [ngTemplateOutlet]=\\\"itemTemplate || bsItemTemplate\\\" [ngTemplateOutletContext]=\\\"{item:match.item, index:i, match:match, query:query}\\\"></ng-template> </button> </ng-template> </ng-template> </ng-template> \",\n  host: {\n    class: 'dropdown open',\n    '[class.dropdown-menu]': 'isBs4',\n    '[style.overflow-y]' : `isBs4 && needScrollbar ? 'scroll': 'visible'`,\n    '[style.height]': `isBs4 && needScrollbar ? guiHeight: 'auto'`,\n    '[style.visibility]': `typeaheadScrollable ? 'hidden' : 'visible'`,\n    '[class.dropup]': 'dropup',\n    style: 'position: absolute;display: block;'\n  }\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Renderer2, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'ulElement': [{ type: ViewChild, args: ['ulElement', ] },],\n'liElements': [{ type: ViewChildren, args: ['liElements', ] },],\n'focusLost': [{ type: HostListener, args: ['mouseleave', ] },{ type: HostListener, args: ['blur', ] },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/* tslint:disable:max-file-line-count */\nimport {\n  ChangeDetectorRef,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  HostListener,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  Renderer2,\n  TemplateRef,\n  ViewContainerRef\n} from '@angular/core';\nimport { NgControl } from '@angular/forms';\nimport 'rxjs/add/observable/from';\nimport 'rxjs/add/operator/debounceTime';\nimport 'rxjs/add/operator/filter';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/mergeMap';\nimport 'rxjs/add/operator/toArray';\n\nimport { Observable } from 'rxjs/Observable';\nimport { Subscription } from 'rxjs/Subscription';\nimport { ComponentLoader, ComponentLoaderFactory } from '../component-loader';\nimport { TypeaheadContainerComponent } from './typeahead-container.component';\nimport { TypeaheadMatch } from './typeahead-match.class';\nimport { getValueFromObject, latinize, tokenize } from './typeahead-utils';\n\n\nexport class TypeaheadDirective implements OnInit, OnDestroy {\n  /** options source, can be Array of strings, objects or\n   * an Observable for external matching process\n   */\n   typeahead: any;\n  /** minimal no of characters that needs to be entered before\n   * typeahead kicks-in. When set to 0, typeahead shows on focus with full\n   * list of options (limited as normal by typeaheadOptionsLimit)\n   */\n   typeaheadMinLength: number = void 0;\n  /** minimal wait time after last character typed before typeahead kicks-in */\n   typeaheadWaitMs: number;\n  /** maximum length of options items list */\n   typeaheadOptionsLimit: number;\n  /** when options source is an array of objects, the name of field\n   * that contains the options value, we use array item as option in case\n   * of this field is missing. Supports nested properties and methods.\n   */\n   typeaheadOptionField: string;\n  /** when options source is an array of objects, the name of field that\n   * contains the group value, matches are grouped by this field when set.\n   */\n   typeaheadGroupField: string;\n  /** should be used only in case of typeahead attribute is array.\n   * If true - loading of options will be async, otherwise - sync.\n   * true make sense if options array is large.\n   */\n   typeaheadAsync: boolean = void 0;\n  /** match latin symbols.\n   * If true the word súper would match super and vice versa.\n   */\n   typeaheadLatinize = true;\n  /** break words with spaces. If true the text \"exact phrase\"\n   * here match would match with match exact phrase here\n   * but not with phrase here exact match (kind of \"google style\").\n   */\n   typeaheadSingleWords = true;\n  /** should be used only in case typeaheadSingleWords attribute is true.\n   * Sets the word delimiter to break words. Defaults to space.\n   */\n   typeaheadWordDelimiters = ' ';\n  /** should be used only in case typeaheadSingleWords attribute is true.\n   * Sets the word delimiter to match exact phrase.\n   * Defaults to simple and double quotes.\n   */\n   typeaheadPhraseDelimiters = '\\'\"';\n  /** used to specify a custom item template.\n   * Template variables exposed are called item and index;\n   */\n   typeaheadItemTemplate: TemplateRef<any>;\n  /** used to specify a custom options list template.\n   * Template variables: matches, itemTemplate, query\n   */\n   optionsListTemplate: TemplateRef<any>;\n  /** specifies if typeahead is scrollable  */\n   typeaheadScrollable = false;\n  /** specifies number of options to show in scroll view  */\n   typeaheadOptionsInScrollableView = 5;\n  /** fired when 'busy' state of this component was changed,\n   * fired on async mode only, returns boolean\n   */\n   typeaheadLoading: EventEmitter<boolean> = new EventEmitter();\n  /** fired on every key event and returns true\n   * in case of matches are not detected\n   */\n   typeaheadNoResults: EventEmitter<boolean> = new EventEmitter();\n  /** fired when option was selected, return object with data of this option */\n   typeaheadOnSelect: EventEmitter<TypeaheadMatch> = new EventEmitter();\n  /** fired when blur event occurres. returns the active item */\n   typeaheadOnBlur: EventEmitter<any> = new EventEmitter();\n\n  /**\n   * A selector specifying the element the typeahead should be appended to.\n   * Currently only supports \"body\".\n   */\n   container: string;\n\n  /** This attribute indicates that the dropdown should be opened upwards */\n   dropup = false;\n\n  // not yet implemented\n  /** if false restrict model values to the ones selected from the popup only will be provided */\n  // @Input() protected typeaheadEditable:boolean;\n  /** if false the first match automatically will not be focused as you type */\n  // @Input() protected typeaheadFocusFirst:boolean;\n  /** format the ng-model result after selection */\n  // @Input() protected typeaheadInputFormatter:any;\n  /** if true automatically select an item when there is one option that exactly matches the user input */\n  // @Input() protected typeaheadSelectOnExact:boolean;\n  /**  if true select the currently highlighted match on blur */\n  // @Input() protected typeaheadSelectOnBlur:boolean;\n  /**  if false don't focus the input element the typeahead directive is associated with on selection */\n    // @Input() protected typeaheadFocusOnSelect:boolean;\n\n  _container: TypeaheadContainerComponent;\n  isTypeaheadOptionsListActive = false;\n\n  protected keyUpEventEmitter: EventEmitter<any> = new EventEmitter();\n  protected _matches: TypeaheadMatch[];\n  protected placement = 'bottom-left';\n  // protected popup:ComponentRef<TypeaheadContainerComponent>;\n\n  private _typeahead: ComponentLoader<TypeaheadContainerComponent>;\n  private _subscriptions: Subscription[] = [];\n  private _outsideClickListener: Function;\n\n  constructor(private ngControl: NgControl,\n              private element: ElementRef,\n              viewContainerRef: ViewContainerRef,\n              private renderer: Renderer2,\n              cis: ComponentLoaderFactory,\n              private changeDetection: ChangeDetectorRef) {\n    this._typeahead = cis.createLoader<TypeaheadContainerComponent>(\n      element,\n      viewContainerRef,\n      renderer\n    );\n  }\n\n  ngOnInit(): void {\n    this.typeaheadOptionsLimit = this.typeaheadOptionsLimit || 20;\n    this.typeaheadMinLength =\n      this.typeaheadMinLength === void 0 ? 1 : this.typeaheadMinLength;\n    this.typeaheadWaitMs = this.typeaheadWaitMs || 0;\n\n    // async should be false in case of array\n    if (\n      this.typeaheadAsync === undefined &&\n      !(this.typeahead instanceof Observable)\n    ) {\n      this.typeaheadAsync = false;\n    }\n\n    if (this.typeahead instanceof Observable) {\n      this.typeaheadAsync = true;\n    }\n\n    if (this.typeaheadAsync) {\n      this.asyncActions();\n    } else {\n      this.syncActions();\n    }\n  }\n\n  \n  onInput(e: any): void {\n    // For `<input>`s, use the `value` property. For others that don't have a\n    // `value` (such as `<span contenteditable=\"true\">`), use either\n    // `textContent` or `innerText` (depending on which one is supported, i.e.\n    // Firefox or IE).\n    const value =\n      e.target.value !== undefined\n        ? e.target.value\n        : e.target.textContent !== undefined\n        ? e.target.textContent\n        : e.target.innerText;\n    if (value != null && value.trim().length >= this.typeaheadMinLength) {\n      this.typeaheadLoading.emit(true);\n      this.keyUpEventEmitter.emit(e.target.value);\n    } else {\n      this.typeaheadLoading.emit(false);\n      this.typeaheadNoResults.emit(false);\n      this.hide();\n    }\n  }\n\n  \n  onChange(e: any): void {\n    if (this._container) {\n      // esc\n      if (e.keyCode === 27) {\n        this.hide();\n\n        return;\n      }\n\n      // up\n      if (e.keyCode === 38) {\n        this._container.prevActiveMatch();\n\n        return;\n      }\n\n      // down\n      if (e.keyCode === 40) {\n        this._container.nextActiveMatch();\n\n        return;\n      }\n\n      // enter, tab\n      if (e.keyCode === 13 || e.keyCode === 9) {\n        this._container.selectActiveMatch();\n\n        return;\n      }\n    }\n  }\n\n  \n  \n  onFocus(): void {\n    if (this.typeaheadMinLength === 0) {\n      this.typeaheadLoading.emit(true);\n      this.keyUpEventEmitter.emit('');\n    }\n  }\n\n  \n  onBlur(): void {\n    if (this._container && !this._container.isFocused) {\n      this.typeaheadOnBlur.emit(this._container.active);\n    }\n  }\n\n  \n  onKeydown(e: any): void {\n    // no container - no problems\n    if (!this._container) {\n      return;\n    }\n\n    // if an item is visible - prevent form submission\n    if (e.keyCode === 13) {\n      e.preventDefault();\n\n      return;\n    }\n\n    // if an item is visible - don't change focus\n    if (e.keyCode === 9) {\n      e.preventDefault();\n\n      return;\n    }\n  }\n\n  changeModel(match: TypeaheadMatch): void {\n    const valueStr: string = match.value;\n    this.ngControl.viewToModelUpdate(valueStr);\n    (this.ngControl.control).setValue(valueStr);\n    this.changeDetection.markForCheck();\n    this.hide();\n  }\n\n  get matches(): any[] {\n    return this._matches;\n  }\n\n  show(): void {\n    this._typeahead\n      .attach(TypeaheadContainerComponent)\n      // todo: add append to body, after updating positioning service\n      .to(this.container)\n      .position({attachment: `${this.dropup ? 'top' : 'bottom'} left`})\n      .show({\n        typeaheadRef: this,\n        placement: this.placement,\n        animation: false,\n        dropup: this.dropup\n      });\n\n    this._outsideClickListener = this.renderer.listen('document', 'click', () => {\n      this.onOutsideClick();\n    });\n\n    this._container = this._typeahead.instance;\n    this._container.parent = this;\n    // This improves the speed as it won't have to be done for each list item\n    const normalizedQuery = (this.typeaheadLatinize\n      ? latinize(this.ngControl.control.value)\n      : this.ngControl.control.value)\n      .toString()\n      .toLowerCase();\n    this._container.query = this.typeaheadSingleWords\n      ? tokenize(\n        normalizedQuery,\n        this.typeaheadWordDelimiters,\n        this.typeaheadPhraseDelimiters\n      )\n      : normalizedQuery;\n    this._container.matches = this._matches;\n    this.element.nativeElement.focus();\n  }\n\n  hide(): void {\n    if (this._typeahead.isShown) {\n      this._typeahead.hide();\n      this._outsideClickListener();\n      this._container = null;\n    }\n  }\n\n  onOutsideClick(): void {\n    if (this._container && !this._container.isFocused) {\n      this.hide();\n    }\n  }\n\n  ngOnDestroy(): any {\n    // clean up subscriptions\n    for (const sub of this._subscriptions) {\n      sub.unsubscribe();\n    }\n    this._typeahead.dispose();\n  }\n\n  protected asyncActions(): void {\n    this._subscriptions.push(\n      this.keyUpEventEmitter\n        .debounceTime(this.typeaheadWaitMs)\n        .mergeMap(() => this.typeahead)\n        .subscribe((matches: any[]) => {\n          this.finalizeAsyncCall(matches);\n        })\n    );\n  }\n\n  protected syncActions(): void {\n    this._subscriptions.push(\n      this.keyUpEventEmitter\n        .debounceTime(this.typeaheadWaitMs)\n        .mergeMap((value: string) => {\n          const normalizedQuery = this.normalizeQuery(value);\n\n          return Observable.from(this.typeahead)\n            .filter((option: any) => {\n              return (\n                option &&\n                this.testMatch(this.normalizeOption(option), normalizedQuery)\n              );\n            })\n            .toArray();\n        })\n        .subscribe((matches: any[]) => {\n          this.finalizeAsyncCall(matches);\n        })\n    );\n  }\n\n  protected normalizeOption(option: any): any {\n    const optionValue: string = getValueFromObject(\n      option,\n      this.typeaheadOptionField\n    );\n    const normalizedOption = this.typeaheadLatinize\n      ? latinize(optionValue)\n      : optionValue;\n\n    return normalizedOption.toLowerCase();\n  }\n\n  protected normalizeQuery(value: string): any {\n    // If singleWords, break model here to not be doing extra work on each\n    // iteration\n    let normalizedQuery: any = (this.typeaheadLatinize\n      ? latinize(value)\n      : value)\n      .toString()\n      .toLowerCase();\n    normalizedQuery = this.typeaheadSingleWords\n      ? tokenize(\n        normalizedQuery,\n        this.typeaheadWordDelimiters,\n        this.typeaheadPhraseDelimiters\n      )\n      : normalizedQuery;\n\n    return normalizedQuery;\n  }\n\n  protected testMatch(match: string, test: any): boolean {\n    let spaceLength: number;\n\n    if (typeof test === 'object') {\n      spaceLength = test.length;\n      for (let i = 0; i < spaceLength; i += 1) {\n        if (test[i].length > 0 && match.indexOf(test[i]) < 0) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n\n    return match.indexOf(test) >= 0;\n  }\n\n  protected finalizeAsyncCall(matches: any[]): void {\n    this.prepareMatches(matches);\n\n    this.typeaheadLoading.emit(false);\n    this.typeaheadNoResults.emit(!this.hasMatches());\n\n    if (!this.hasMatches()) {\n      this.hide();\n\n      return;\n    }\n\n    if (this._container) {\n      // This improves the speed as it won't have to be done for each list item\n      const normalizedQuery = (this.typeaheadLatinize\n        ? latinize(this.ngControl.control.value)\n        : this.ngControl.control.value)\n        .toString()\n        .toLowerCase();\n      this._container.query = this.typeaheadSingleWords\n        ? tokenize(\n          normalizedQuery,\n          this.typeaheadWordDelimiters,\n          this.typeaheadPhraseDelimiters\n        )\n        : normalizedQuery;\n      this._container.matches = this._matches;\n    } else {\n      this.show();\n    }\n  }\n\n  protected prepareMatches(options: any[]): void {\n    const limited: any[] = options.slice(0, this.typeaheadOptionsLimit);\n\n    if (this.typeaheadGroupField) {\n      let matches: TypeaheadMatch[] = [];\n\n      // extract all group names\n      const groups = limited\n        .map((option: any) =>\n          getValueFromObject(option, this.typeaheadGroupField)\n        )\n        .filter((v: string, i: number, a: any[]) => a.indexOf(v) === i);\n\n      groups.forEach((group: string) => {\n        // add group header to array of matches\n        matches.push(new TypeaheadMatch(group, group, true));\n\n        // add each item of group to array of matches\n        matches = matches.concat(\n          limited\n            .filter(\n              (option: any) =>\n                getValueFromObject(option, this.typeaheadGroupField) === group\n            )\n            .map(\n              (option: any) =>\n                new TypeaheadMatch(\n                  option,\n                  getValueFromObject(option, this.typeaheadOptionField)\n                )\n            )\n        );\n      });\n\n      this._matches = matches;\n    } else {\n      this._matches = limited.map(\n        (option: any) =>\n          new TypeaheadMatch(\n            option,\n            getValueFromObject(option, this.typeaheadOptionField)\n          )\n      );\n    }\n  }\n\n  protected hasMatches(): boolean {\n    return this._matches.length > 0;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{selector: '[typeahead]', exportAs: 'bs-typeahead'}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: NgControl, },\n{type: ElementRef, },\n{type: ViewContainerRef, },\n{type: Renderer2, },\n{type: ComponentLoaderFactory, },\n{type: ChangeDetectorRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'typeahead': [{ type: Input },],\n'typeaheadMinLength': [{ type: Input },],\n'typeaheadWaitMs': [{ type: Input },],\n'typeaheadOptionsLimit': [{ type: Input },],\n'typeaheadOptionField': [{ type: Input },],\n'typeaheadGroupField': [{ type: Input },],\n'typeaheadAsync': [{ type: Input },],\n'typeaheadLatinize': [{ type: Input },],\n'typeaheadSingleWords': [{ type: Input },],\n'typeaheadWordDelimiters': [{ type: Input },],\n'typeaheadPhraseDelimiters': [{ type: Input },],\n'typeaheadItemTemplate': [{ type: Input },],\n'optionsListTemplate': [{ type: Input },],\n'typeaheadScrollable': [{ type: Input },],\n'typeaheadOptionsInScrollableView': [{ type: Input },],\n'typeaheadLoading': [{ type: Output },],\n'typeaheadNoResults': [{ type: Output },],\n'typeaheadOnSelect': [{ type: Output },],\n'typeaheadOnBlur': [{ type: Output },],\n'container': [{ type: Input },],\n'dropup': [{ type: Input },],\n'onInput': [{ type: HostListener, args: ['input', ['$event'], ] },],\n'onChange': [{ type: HostListener, args: ['keyup', ['$event'], ] },],\n'onFocus': [{ type: HostListener, args: ['click', ] },{ type: HostListener, args: ['focus', ] },],\n'onBlur': [{ type: HostListener, args: ['blur', ] },],\n'onKeydown': [{ type: HostListener, args: ['keydown', ['$event'], ] },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule, ModuleWithProviders } from '@angular/core';\n\nimport { TypeaheadContainerComponent } from './typeahead-container.component';\nimport { TypeaheadDirective } from './typeahead.directive';\nimport { ComponentLoaderFactory } from '../component-loader';\nimport { PositioningService } from '../positioning';\n\n\nexport class TypeaheadModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: TypeaheadModule,\n      providers: [ComponentLoaderFactory, PositioningService]\n    };\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  imports: [CommonModule],\n  declarations: [TypeaheadContainerComponent, TypeaheadDirective],\n  exports: [TypeaheadContainerComponent, TypeaheadDirective],\n  entryComponents: [TypeaheadContainerComponent]\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Facet } from './models/facet';\nexport class FacetSelect {\n/**\n * @param {?} facet\n */\nconstructor(public facet: Facet) {}\n}\n\nfunction FacetSelect_tsickle_Closure_declarations() {\n/** @type {?} */\nFacetSelect.prototype.facet;\n}\n\nexport class FacetDeselect {\n/**\n * @param {?} facet\n */\nconstructor(public facet: Facet) {}\n}\n\nfunction FacetDeselect_tsickle_Closure_declarations() {\n/** @type {?} */\nFacetDeselect.prototype.facet;\n}\n\nexport class FacetDeselectAll {\nconstructor() {}\n}\n\nexport type FacetEvent = FacetSelect | FacetDeselect | FacetDeselectAll;","import { Component, Input, EventEmitter, Output } from '@angular/core';\nimport { FacetEvent, FacetSelect, FacetDeselect, FacetDeselectAll } from './facet-events';\nimport { Facet } from './models/facet';\nexport class FacetContainerComponent {\n\n     header: string = 'Selected:';\n     clearTooltip: string = 'Clear All';\n     emptyText: string = 'No Items';\n     facets: Facet[] = [];\n\n     facetsChange: EventEmitter<Facet[]> = new EventEmitter<Facet[]>();\n     events: EventEmitter<FacetEvent> = new EventEmitter<FacetEvent>();\n/**\n * @param {?} facet\n * @return {?}\n */\nselectFacet(facet: Facet): void {\n        // push the facet on to the list\n        this.facets.push(facet);\n\n        // update the two way binding\n        this.facetsChange.emit(this.facets);\n\n        // trigger event\n        this.triggerEvent(new FacetSelect(facet));\n    }\n/**\n * @param {?} facet\n * @return {?}\n */\ndeselectFacet(facet: Facet): void {\n\n        // find the index of the item in the selected array\n        let /** @type {?} */ idx = this.facets.findIndex(selectedFacet => facet === selectedFacet);\n\n        // if match there was no match then finish\n        if (idx === -1) {\n            return;\n        }\n\n        // remove the last item\n        this.facets.splice(idx, 1);\n\n        // update the two way binding\n        this.facetsChange.emit(this.facets);\n\n        // trigger event\n        this.triggerEvent(new FacetDeselect(facet));\n    }\n/**\n * @return {?}\n */\ndeselectAllFacets(): void {\n\n        // empty the selected array\n        this.facets = [];\n\n        // update the two way binding\n        this.facetsChange.emit(this.facets);\n\n        // trigger event\n        this.triggerEvent(new FacetDeselectAll());\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nprivate triggerEvent(event: FacetEvent) {\n        this.events.next(event);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-facet-container',\n    template: `\n      <!-- Display Any Selected Facets -->\n      <div class=\"facets-selected-container\">\n\n          <!-- Display Title an Clear Button -->\n          <div class=\"facets-selected-header-container\">\n\n              <!-- Show The Selected Text -->\n              <span class=\"facets-selected-header-label\">{{ header }}</span>\n\n              <!-- Add a Clear Button -->\n              <div class=\"facets-selected-clear-button\" tabindex=\"0\" [tooltip]=\"clearTooltip\" placement=\"left\" container=\"body\" (click)=\"deselectAllFacets()\"\n                  (keyup.enter)=\"deselectAllFacets()\" *ngIf=\"facets.length > 0\">\n\n                  <svg class=\"facets-selected-clear-graphic\" viewBox=\"0 0 19 12\" shape-rendering=\"geometricPrecision\">\n                      <rect class=\"light-grey\" x=\"0\" y=\"2\" width=\"7\" height=\"2\"></rect>\n                      <rect class=\"dark-grey\" x=\"0\" y=\"5\" width=\"9\" height=\"2\"></rect>\n                      <rect class=\"light-grey\" x=\"0\" y=\"8\" width=\"7\" height=\"2\"></rect>\n                      <path class=\"dark-grey\" d=\"M9,1 h1 l9,9 v1 h-1 l-9,-9 v-1 Z\"></path>\n                      <path class=\"dark-grey\" d=\"M9,11 v-1 l9,-9 h1 v1 l-9,9 h-1 Z\"></path>\n                  </svg>\n              </div>\n\n          </div>\n\n          <!-- Display Tags For Selected Items -->\n          <div class=\"facets-selected-list\">\n\n              <!-- Show Selected Tags -->\n              <div class=\"facet-selected-tag\" tabindex=\"0\" *ngFor=\"let facet of facets\" (mousedown)=\"$event.preventDefault()\" (click)=\"deselectFacet(facet)\" (keyup.enter)=\"deselectFacet(facet)\">\n\n                  <!-- Display Label -->\n                  <span class=\"facet-selected-tag-label\">{{ facet.title }}</span>\n\n                  <!-- Display Remove Icon -->\n                  <span class=\"hpe-icon hpe-close\"></span>\n              </div>\n\n          </div>\n\n          <!-- Show Message Here if No Facets Selected -->\n          <p class=\"facets-selected-none-label\" *ngIf=\"emptyText && facets.length === 0\">{{ emptyText }}</p>\n\n      </div>\n\n      <!-- Any Facet Elements Should be Added Here By User -->\n      <div class=\"facets-region\">\n          <ng-content></ng-content>\n      </div>\n    `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'header': [{ type: Input },],\n'clearTooltip': [{ type: Input },],\n'emptyText': [{ type: Input },],\n'facets': [{ type: Input },],\n'facetsChange': [{ type: Output },],\n'events': [{ type: Output },],\n};\n}\n\nfunction FacetContainerComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nFacetContainerComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFacetContainerComponent.ctorParameters;\n/** @type {?} */\nFacetContainerComponent.propDecorators;\n/** @type {?} */\nFacetContainerComponent.prototype.header;\n/** @type {?} */\nFacetContainerComponent.prototype.clearTooltip;\n/** @type {?} */\nFacetContainerComponent.prototype.emptyText;\n/** @type {?} */\nFacetContainerComponent.prototype.facets;\n/** @type {?} */\nFacetContainerComponent.prototype.facetsChange;\n/** @type {?} */\nFacetContainerComponent.prototype.events;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Host, Input, Output, EventEmitter, OnInit, ElementRef } from '@angular/core';\nimport { FacetContainerComponent } from '../../facet-container.component';\nimport { FacetEvent, FacetDeselectAll, FacetDeselect, FacetSelect } from '../../facet-events';\nimport { Facet } from '../../models/facet';\nimport { Subject } from 'rxjs/Subject';\nimport'rxjs/add/operator/filter';\nexport class FacetBaseComponent implements OnInit {\n\n     selected: Facet[] = [];\n     selectedChange: EventEmitter<Facet[]> = new EventEmitter<Facet[]>();\n\n     events: Subject<FacetEvent> = new Subject<FacetEvent>();\n/**\n * @param {?} facetContainer\n * @param {?} _elementRef\n */\nconstructor(\nprivate facetContainer: FacetContainerComponent,\npublic _elementRef: ElementRef) {\n\n        if (facetContainer) {\n\n            // subscribe to any deselect events from the facet container\n            facetContainer.events.filter(event => event instanceof FacetDeselect)\n                .filter((event: FacetDeselect) => !!this.selected.find(facet => facet === event.facet))\n                .subscribe((event: FacetDeselect) => this.deselectFacet(event.facet));\n\n            // subscribe to any deselect all events from facet container\n            facetContainer.events.filter(event => event instanceof FacetDeselectAll).subscribe(_ => this.deselectAll());\n\n        }\n    }\n/**\n * @return {?}\n */\nngOnInit(): void {\n        // check if there should be any facets initially selected\n        if (this.facetContainer) {\n            this.selected.forEach(facet => this.facetContainer.selectFacet(facet));\n        }\n    }\n/**\n * @param {?} facet\n * @return {?}\n */\nselectFacet(facet: Facet): void {\n\n        // if the facet is disabled it should not be selected\n        if (facet.disabled) {\n            return;\n        }\n\n        // add the facet to the list of selected facets\n        this.selected.push(facet);\n\n        // send the new value to the event emitter\n        this.selectedChange.emit(this.selected);\n\n        // fire the event to the observable\n        this.triggerEvent(new FacetSelect(facet));\n\n        // tell the facet container about the selected facet\n        if (this.facetContainer) {\n            this.facetContainer.selectFacet(facet);\n        }\n    }\n/**\n * @param {?} facet\n * @return {?}\n */\ndeselectFacet(facet: Facet): void {\n\n        // find facet to remove\n        let /** @type {?} */ index = this.selected.findIndex(selectedFacet => selectedFacet === facet);\n\n        // only continue if facet is found\n        if (index !== -1) {\n\n            // remove the facet from the selected list\n            this.selected.splice(index, 1);\n\n            // emit the changes to selected event emitter\n            this.selectedChange.emit(this.selected);\n\n            // fire the event to the observable\n            this.triggerEvent(new FacetDeselect(facet));\n\n            // deselect the facet in the facet container\n            if (this.facetContainer) {\n                this.facetContainer.deselectFacet(facet);\n            }\n        }\n    }\n/**\n * @return {?}\n */\ndeselectAll(): void {\n\n        // remove all selected facets\n        this.selected = [];\n\n        // fire the event to the observable\n        this.triggerEvent(new FacetDeselectAll());\n\n        // emit the changes to the selected event emitter\n        this.selectedChange.emit(this.selected);\n    }\n/**\n * @param {?} facet\n * @return {?}\n */\ntoggleFacetSelection(facet: Facet): void {\n\n        // if the facet is selected then deselect - otherwise select it\n        if (this.isFacetSelected(facet)) {\n            this.deselectFacet(facet);\n        } else {\n            this.selectFacet(facet);\n        }\n\n    }\n/**\n * @param {?} facet\n * @return {?}\n */\nisFacetSelected(facet: Facet): boolean {\n        // determine if a facet is currently selected\n        return !!this.selected.find(selectedFacet => selectedFacet === facet);\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nprivate triggerEvent(event: FacetEvent): void {\n        this.events.next(event);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-facet-base',\n    template: '',\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: FacetContainerComponent, decorators: [{ type: Host }, ]},\n{type: ElementRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'selected': [{ type: Input },],\n'selectedChange': [{ type: Output },],\n'events': [{ type: Output },],\n};\n}\n\nfunction FacetBaseComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nFacetBaseComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFacetBaseComponent.ctorParameters;\n/** @type {?} */\nFacetBaseComponent.propDecorators;\n/** @type {?} */\nFacetBaseComponent.prototype.selected;\n/** @type {?} */\nFacetBaseComponent.prototype.selectedChange;\n/** @type {?} */\nFacetBaseComponent.prototype.events;\n/** @type {?} */\nFacetBaseComponent.prototype.facetContainer;\n/** @type {?} */\nFacetBaseComponent.prototype._elementRef;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Output, EventEmitter, Input } from '@angular/core';\nexport class FacetHeaderComponent {\n\n     header: string;\n     canExpand: boolean = true;    \n     expanded: boolean = true;\n     expandedChange: EventEmitter<boolean> = new EventEmitter<boolean>();\n/**\n * @return {?}\n */\ntoggleExpand(): void {\n\n        // if not expandable then do nothing\n        if (this.canExpand) {\n            this.expanded = !this.expanded;\n            this.expandedChange.emit(this.expanded);\n        }\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-facet-header',\n    template: `\n      <span class=\"facet-header-title\">{{ header }}</span>\n      <span class=\"hpe-icon\" [class.hpe-down]=\"expanded\" [class.hpe-previous]=\"!expanded\" *ngIf=\"canExpand\"></span>\n    `,\n    host: {\n        'tabindex': '0',\n        '(click)': 'toggleExpand()',\n        '(keyup.enter)': 'toggleExpand()'\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'header': [{ type: Input },],\n'canExpand': [{ type: Input },],\n'expanded': [{ type: Input },],\n'expandedChange': [{ type: Output },],\n};\n}\n\nfunction FacetHeaderComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nFacetHeaderComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFacetHeaderComponent.ctorParameters;\n/** @type {?} */\nFacetHeaderComponent.propDecorators;\n/** @type {?} */\nFacetHeaderComponent.prototype.header;\n/** @type {?} */\nFacetHeaderComponent.prototype.canExpand;\n/** @type {?} */\nFacetHeaderComponent.prototype.expanded;\n/** @type {?} */\nFacetHeaderComponent.prototype.expandedChange;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Input } from '@angular/core';\nimport { FacetBaseComponent } from '../base/facet-base/facet-base.component';\nimport { Facet } from '../models/facet';\nexport class FacetCheckListComponent extends FacetBaseComponent {\n\n     facets: Facet[] = [];\n     header: string;\n     scrollbar: boolean = true;\n     expanded: boolean = true;\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-facet-check-list',\n    template: `\n      <ux-facet-header [header]=\"header\" [(expanded)]=\"expanded\"></ux-facet-header>\n\n      <!-- Create a container which will show when section is expanded -->\n      <div class=\"facet-check-list-container\" [class.facet-check-list-scrollbar]=\"scrollbar\" *ngIf=\"expanded\">\n\n          <!-- Iterate through each possible facet -->\n          <div class=\"facet-check-list-item\" *ngFor=\"let facet of facets\" [class.facet-active]=\"isFacetSelected(facet)\" tabindex=\"0\"\n              (click)=\"toggleFacetSelection(facet)\" (keyup.enter)=\"toggleFacetSelection(facet)\" [class.disabled]=\"facet.disabled\">\n\n              <!-- Show check icon to indicate the state -->\n              <span class=\"facet-check-list-item-check\">\n                  <span class=\"hpe-icon hpe-active\"></span>\n              </span>\n\n              <!-- Display the title -->\n              <span class=\"facet-check-list-item-title\">{{ facet.title }}</span>\n\n              <!-- Display the count if specified -->\n              <span class=\"facet-check-list-item-count\" *ngIf=\"facet.count !== undefined\">({{ facet.count }})</span>\n          </div>\n      </div>\n    `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'facets': [{ type: Input },],\n'header': [{ type: Input },],\n'scrollbar': [{ type: Input },],\n'expanded': [{ type: Input },],\n};\n}\n\nfunction FacetCheckListComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nFacetCheckListComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFacetCheckListComponent.ctorParameters;\n/** @type {?} */\nFacetCheckListComponent.propDecorators;\n/** @type {?} */\nFacetCheckListComponent.prototype.facets;\n/** @type {?} */\nFacetCheckListComponent.prototype.header;\n/** @type {?} */\nFacetCheckListComponent.prototype.scrollbar;\n/** @type {?} */\nFacetCheckListComponent.prototype.expanded;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, OnInit, Input, Host, Pipe, PipeTransform } from '@angular/core';\nimport { FacetBaseComponent } from '../base/facet-base/facet-base.component';\nimport { Observable } from 'rxjs/Observable';\nimport { Facet } from '../models/facet';\nimport { FacetContainerComponent } from '../facet-container.component';\nimport { TypeaheadMatch } from 'ngx-bootstrap/typeahead';\nimport'rxjs/add/operator/map';\nimport'rxjs/add/observable/of';\nimport { Observer } from 'rxjs/Observer';\nexport class FacetTypeaheadListComponent extends FacetBaseComponent implements OnInit {\n\n     facets: Facet[] | Observable<Facet[]>;\n     header: string;\n     expanded: boolean = true;\n     typeaheadConfig: FacetTypeaheadListConfig = {};\n     suggestions: Facet[] = [];\n     simplified: boolean = true;\n\n    typeaheadOptions: Observable<Facet[]>;\n    searchQuery: string;\nprivate _nativeElement: HTMLElement = /** @type {?} */(( this._elementRef.nativeElement as HTMLElement));\nprivate _defaultTypeaheadConfig: FacetTypeaheadListConfig = {\n        placeholder: '',\n        maxResults: 50,\n        minCharacters: 1\n    };\n/**\n * @return {?}\n */\nngOnInit() {\n\n        // wrap the observable and filter out any already selected items or any disabled items\n        if (this.facets instanceof Observable) {\n\n            // handle an observable of data\n            this.typeaheadOptions = Observable.from(this.facets).map((facets: Facet[]) => {\n\n                // remove disabled facets, selected facets and facets that dont match search term\n                return facets.filter(facet => !facet.disabled)\n                    .filter(facet => !this.selected.find(selectedFacet => selectedFacet === facet))\n                    .filter(facet => facet.title.toUpperCase().includes(this.searchQuery.toUpperCase()));\n            });\n\n        } else {\n\n            // handle an array of data\n            this.typeaheadOptions = Observable.of(this.facets).map((facets: Facet[]) => {\n\n                // remove disabled facets, selected facets and facets that dont match search term\n                return facets.filter(facet => !facet.disabled)\n                    .filter(facet => !this.selected.find(selectedFacet => selectedFacet === facet))\n                    .filter(facet => facet.title.toUpperCase().includes(this.searchQuery.toUpperCase()));\n            });\n        }\n\n        // provide default values for typeahead config\n        for (let /** @type {?} */ prop in this._defaultTypeaheadConfig) {\n\n            // check if prop has been defined in the users typeahead config - if not set default value\n            if (this.typeaheadConfig.hasOwnProperty(prop) === false) {\n                this.typeaheadConfig[prop] = this._defaultTypeaheadConfig[prop];\n            }\n        }\n    }\n/**\n * @param {?} typeaheadOption\n * @return {?}\n */\nselectOption(typeaheadOption: TypeaheadMatch) {\n\n        // check to make sure that the item is not currently selected\n        if (this.selected.find(facet => facet === typeaheadOption.item)) {\n            return;\n        }\n\n        // select the facet\n        this.selectFacet(typeaheadOption.item);\n\n        // clear the typeahead\n        this.searchQuery = '';\n    }\n/**\n * @return {?}\n */\nscrollToFocused(): void {\n\n        let /** @type {?} */ dropdown = this._nativeElement.querySelector('.dropdown-menu');\n\n        // delay to allow the typeahead ui to update\n        setTimeout(() => {\n\n            // find the currently active element if there is one\n            let /** @type {?} */ activeElement = dropdown.querySelector('.dropdown-menu > li.active');\n\n            if (activeElement) {\n\n                // check if element is not in view\n                let /** @type {?} */ elementBounds = activeElement.getBoundingClientRect();\n                let /** @type {?} */ dropdownBounds = dropdown.getBoundingClientRect();\n\n                if (elementBounds.top < dropdownBounds.top) {\n                    dropdown.scrollTop += elementBounds.top - dropdownBounds.top;\n                }\n\n                if (elementBounds.bottom > dropdownBounds.bottom) {\n                    dropdown.scrollTop += elementBounds.bottom - dropdownBounds.bottom;\n                }\n            }\n        });\n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-facet-typeahead-list',\n    template: `\n      <ux-facet-header [header]=\"header\" [(expanded)]=\"expanded\"></ux-facet-header>\n\n      <div class=\"facet-typeahead-list-container\" *ngIf=\"expanded\">\n\n          <div class=\"facet-typeahead-list-selected-container\" *ngIf=\"suggestions?.length > 0\">\n\n              <div class=\"facet-typeahead-list-selected-option\" tabindex=\"0\" *ngFor=\"let facet of suggestions\" (click)=\"toggleFacetSelection(facet)\"\n                  (keyup.enter)=\"toggleFacetSelection(facet)\">\n\n                  <ux-checkbox [clickable]=\"false\" [value]=\"isFacetSelected(facet)\" [simplified]=\"simplified\">\n                      <span class=\"facet-typeahead-list-selected-option-title\">{{ facet.title }}</span>\n                      <span class=\"facet-typeahead-list-selected-option-count\">({{ facet.count }})</span>\n                  </ux-checkbox>\n\n              </div>\n\n          </div>\n\n          <div class=\"facet-typeahead-list-control\">\n\n              <!-- Create Typeahead Control -->\n              <input type=\"text\" class=\"form-control\" [placeholder]=\"typeaheadConfig?.placeholder\" [typeahead]=\"typeaheadOptions\" [(ngModel)]=\"searchQuery\"\n                  [typeaheadMinLength]=\"typeaheadConfig?.minCharacters\" [typeaheadOptionsLimit]=\"typeaheadConfig?.maxResults\" [typeaheadWaitMs]=\"typeaheadConfig?.delay\"\n                  (typeaheadOnSelect)=\"selectOption($event)\" [typeaheadItemTemplate]=\"facetOptionTemplate\" (keyup.ArrowUp)=\"scrollToFocused()\" (keyup.ArrowDown)=\"scrollToFocused()\">\n\n          </div>\n\n      </div>\n\n      <ng-template #facetOptionTemplate let-model=\"item\" let-index=\"index\">\n          <p class=\"facet-typeahead-list-option\"><span [innerHTML]=\"model.title | facetTypeaheadHighlight: searchQuery\"></span> <span class=\"facet-typeahead-list-option-count\"\n                  *ngIf=\"model.count\">({{ model.count }})</span></p>\n      </ng-template>\n    `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'facets': [{ type: Input },],\n'header': [{ type: Input },],\n'expanded': [{ type: Input },],\n'typeaheadConfig': [{ type: Input },],\n'suggestions': [{ type: Input },],\n'simplified': [{ type: Input },],\n};\n}\n\nfunction FacetTypeaheadListComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nFacetTypeaheadListComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFacetTypeaheadListComponent.ctorParameters;\n/** @type {?} */\nFacetTypeaheadListComponent.propDecorators;\n/** @type {?} */\nFacetTypeaheadListComponent.prototype.facets;\n/** @type {?} */\nFacetTypeaheadListComponent.prototype.header;\n/** @type {?} */\nFacetTypeaheadListComponent.prototype.expanded;\n/** @type {?} */\nFacetTypeaheadListComponent.prototype.typeaheadConfig;\n/** @type {?} */\nFacetTypeaheadListComponent.prototype.suggestions;\n/** @type {?} */\nFacetTypeaheadListComponent.prototype.simplified;\n/** @type {?} */\nFacetTypeaheadListComponent.prototype.typeaheadOptions;\n/** @type {?} */\nFacetTypeaheadListComponent.prototype.searchQuery;\n/** @type {?} */\nFacetTypeaheadListComponent.prototype._nativeElement;\n/** @type {?} */\nFacetTypeaheadListComponent.prototype._defaultTypeaheadConfig;\n}\n\n\nexport interface FacetTypeaheadListConfig {\n    placeholder?: string;\n    minCharacters?: number;\n    maxResults?: number;\n    delay?: number;\n}\nexport class FacetTypeaheadHighlight implements PipeTransform {\n/**\n * @param {?} value\n * @param {?} searchQuery\n * @return {?}\n */\ntransform(value: string, searchQuery: string): string {\n        let /** @type {?} */ regex = new RegExp(searchQuery, 'i');\n        return value.replace(regex, `<b class=\"facet-typeahead-highlighted\">${ value.match(regex) }</b>`);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Pipe, args: [{\n    name: 'facetTypeaheadHighlight'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction FacetTypeaheadHighlight_tsickle_Closure_declarations() {\n/** @type {?} */\nFacetTypeaheadHighlight.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFacetTypeaheadHighlight.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\nimport { TypeaheadModule } from 'ngx-bootstrap/typeahead';\nimport { CommonModule } from '@angular/common';\nimport { FacetContainerComponent } from './facet-container.component';\nimport { FacetBaseComponent } from './base/facet-base/facet-base.component';\nimport { FacetHeaderComponent } from './base/facet-header/facet-header.component';\nimport { FacetCheckListComponent } from './facet-check-list/facet-check-list.component';\nimport { FacetTypeaheadListComponent, FacetTypeaheadHighlight } from './facet-typeahead-list/facet-typeahead-list.component';\nimport { FormsModule } from '@angular/forms';\nimport { CheckboxModule } from '../../index';\n\nconst /** @type {?} */ DECLARATIONS = [\n    FacetContainerComponent,\n    FacetHeaderComponent,\n    FacetBaseComponent,\n    FacetCheckListComponent,\n    FacetTypeaheadListComponent,\n    FacetTypeaheadHighlight\n];\nexport class FacetsModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        CommonModule,\n        FormsModule,\n        CheckboxModule,\n        TooltipModule.forRoot(),\n        TypeaheadModule.forRoot()\n    ],\n    exports: DECLARATIONS,\n    declarations: DECLARATIONS\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction FacetsModule_tsickle_Closure_declarations() {\n/** @type {?} */\nFacetsModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFacetsModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","\nexport class Facet {\n/**\n * @param {?} title\n * @param {?=} data\n * @param {?=} count\n * @param {?=} disabled\n * @param {?=} id\n */\nconstructor(\npublic title: string,\npublic data: any = {},\npublic count?: number,\npublic disabled: boolean = false,\npublic id?: string | number\n    ) { }\n}\n\nfunction Facet_tsickle_Closure_declarations() {\n/** @type {?} */\nFacet.prototype.title;\n/** @type {?} */\nFacet.prototype.data;\n/** @type {?} */\nFacet.prototype.count;\n/** @type {?} */\nFacet.prototype.disabled;\n/** @type {?} */\nFacet.prototype.id;\n}\n","import { Injectable } from '@angular/core';\n\n/** Default dropdown configuration */\n\nexport class BsDropdownConfig {\n  /** default dropdown auto closing behavior */\n  autoClose = true;\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { EventEmitter, Injectable } from '@angular/core';\nimport { BsComponentRef } from '../component-loader/bs-component-ref.class';\n\n\nexport class BsDropdownState {\n  direction: 'down' | 'up' = 'down';\n  autoClose: boolean;\n  isOpenChange = new EventEmitter<boolean>();\n  isDisabledChange = new EventEmitter<boolean>();\n  toggleClick = new EventEmitter<boolean>();\n\n  /**\n   * Content to be displayed as popover.\n   */\n  dropdownMenu: Promise<BsComponentRef<any>>;\n  resolveDropdownMenu: (componentRef: BsComponentRef<any>) => void;\n\n  constructor() {\n    this.dropdownMenu = new Promise(resolve => {\n      this.resolveDropdownMenu = resolve;\n    });\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  OnDestroy,\n  Renderer2\n} from '@angular/core';\nimport { BsDropdownState } from './bs-dropdown.state';\n\n\nexport class BsDropdownContainerComponent implements OnDestroy {\n  isOpen = false;\n\n  get direction(): 'down' | 'up' {\n    return this._state.direction;\n  }\n\n  private _subscription: any;\n\n  constructor(\n    private _state: BsDropdownState,\n    private cd: ChangeDetectorRef,\n    private _renderer: Renderer2,\n    _element: ElementRef\n  ) {\n    this._subscription = _state.isOpenChange.subscribe((value: boolean) => {\n      this.isOpen = value;\n      const dropdown = _element.nativeElement.querySelector('.dropdown-menu');\n      if (dropdown) {\n        this._renderer.addClass(dropdown, 'show');\n        if (dropdown.classList.contains('dropdown-menu-right')) {\n          this._renderer.setStyle(dropdown, 'left', 'auto');\n          this._renderer.setStyle(dropdown, 'right', '0');\n        }\n        if (this.direction === 'up') {\n          this._renderer.setStyle(dropdown, 'top', 'auto');\n          this._renderer.setStyle(\n            dropdown,\n            'transform',\n            'translateY(-101%)'\n          );\n        }\n      }\n      this.cd.markForCheck();\n      this.cd.detectChanges();\n    });\n  }\n\n  ngOnDestroy(): void {\n    this._subscription.unsubscribe();\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'bs-dropdown-container',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    style: 'display:block;position: absolute;'\n  },\n  template: `\n    <div [class.dropup]=\"direction === 'up'\"\n         [class.dropdown]=\"direction === 'down'\"\n         [class.show]=\"isOpen\"\n         [class.open]=\"isOpen\"><ng-content></ng-content></div>\n  `\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: BsDropdownState, },\n{type: ChangeDetectorRef, },\n{type: Renderer2, },\n{type: ElementRef, },\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","// tslint:disable:max-file-line-count\nimport {\n  Directive, ElementRef, EmbeddedViewRef, EventEmitter, Input, OnDestroy,\n  OnInit, Output, Renderer2, ViewContainerRef\n} from '@angular/core';\nimport { Subscription } from 'rxjs/Subscription';\nimport 'rxjs/add/operator/filter';\nimport { ComponentLoader, ComponentLoaderFactory } from '../component-loader';\n\nimport { BsDropdownConfig } from './bs-dropdown.config';\nimport { BsDropdownContainerComponent } from './bs-dropdown-container.component';\nimport { BsDropdownState } from './bs-dropdown.state';\nimport { BsComponentRef } from '../component-loader/bs-component-ref.class';\nimport { BsDropdownMenuDirective } from './';\nimport { isBs3 } from '../utils/theme-provider';\n\n\nexport class BsDropdownDirective implements OnInit, OnDestroy {\n  /**\n   * Placement of a popover. Accepts: \"top\", \"bottom\", \"left\", \"right\"\n   */\n   placement: string;\n  /**\n   * Specifies events that should trigger. Supports a space separated list of\n   * event names.\n   */\n   triggers: string;\n  /**\n   * A selector specifying the element the popover should be appended to.\n   * Currently only supports \"body\".\n   */\n   container: string;\n\n  /**\n   * This attribute indicates that the dropdown should be opened upwards\n   */\n   dropup: boolean;\n\n  /**\n   * Indicates that dropdown will be closed on item or document click,\n   * and after pressing ESC\n   */\n  \n  set autoClose(value: boolean) {\n    this._state.autoClose = value;\n  }\n\n  get autoClose(): boolean {\n    return this._state.autoClose;\n  }\n\n  /**\n   * Disables dropdown toggle and hides dropdown menu if opened\n   */\n  \n  set isDisabled(value: boolean) {\n    this._isDisabled = value;\n    this._state.isDisabledChange.emit(value);\n    if (value) {\n      this.hide();\n    }\n  }\n\n  get isDisabled(): boolean {\n    return this._isDisabled;\n  }\n\n  /**\n   * Returns whether or not the popover is currently being shown\n   */\n  \n  get isOpen(): boolean {\n    if (this._showInline) {\n      return this._isInlineOpen;\n    }\n\n    return this._dropdown.isShown;\n  }\n\n  set isOpen(value: boolean) {\n    if (value) {\n      this.show();\n    } else {\n      this.hide();\n    }\n  }\n\n  /**\n   * Emits an event when isOpen change\n   */\n   isOpenChange: EventEmitter<any>;\n\n  /**\n   * Emits an event when the popover is shown\n   */\n   onShown: EventEmitter<any>;\n\n  /**\n   * Emits an event when the popover is hidden\n   */\n   onHidden: EventEmitter<any>;\n\n  get isBs4(): boolean {\n    return !isBs3();\n  }\n\n  // todo: move to component loader\n  private _isInlineOpen = false;\n\n  private get _showInline(): boolean {\n    return !this.container;\n  }\n\n  private _inlinedMenu: EmbeddedViewRef<BsDropdownMenuDirective>;\n\n  private _isDisabled: boolean;\n  private _dropdown: ComponentLoader<BsDropdownContainerComponent>;\n  private _subscriptions: Subscription[] = [];\n  private _isInited = false;\n\n  constructor(private _elementRef: ElementRef,\n              private _renderer: Renderer2,\n              private _viewContainerRef: ViewContainerRef,\n              private _cis: ComponentLoaderFactory,\n              private _config: BsDropdownConfig,\n              private _state: BsDropdownState) {\n    // set initial dropdown state from config\n    this._state.autoClose = this._config.autoClose;\n\n    // create dropdown component loader\n    this._dropdown = this._cis\n      .createLoader<BsDropdownContainerComponent>(\n        this._elementRef,\n        this._viewContainerRef,\n        this._renderer\n      )\n      .provide({provide: BsDropdownState, useValue: this._state});\n\n    this.onShown = this._dropdown.onShown;\n    this.onHidden = this._dropdown.onHidden;\n    this.isOpenChange = this._state.isOpenChange;\n\n  }\n\n  ngOnInit(): void {\n    // fix: seems there are an issue with `routerLinkActive`\n    // which result in duplicated call ngOnInit without call to ngOnDestroy\n    // read more: https://github.com/valor-software/ngx-bootstrap/issues/1885\n    if (this._isInited) {\n      return;\n    }\n    this._isInited = true;\n\n    // attach DOM listeners\n    this._dropdown.listen({\n      // because of dropdown inline mode\n      outsideClick: false,\n      triggers: this.triggers,\n      show: () => this.show()\n    });\n\n    // toggle visibility on toggle element click\n    this._subscriptions.push(\n      this._state.toggleClick.subscribe((value: boolean) => this.toggle(value))\n    );\n\n    // hide dropdown if set disabled while opened\n    this._subscriptions.push(\n      this._state.isDisabledChange\n        .filter((value: boolean) => value)\n        .subscribe((value: boolean) => this.hide())\n    );\n  }\n\n  /**\n   * Opens an element’s popover. This is considered a “manual” triggering of\n   * the popover.\n   */\n  show(): void {\n    if (this.isOpen || this.isDisabled) {\n      return;\n    }\n\n    if (this._showInline) {\n      if (!this._inlinedMenu) {\n        this._state.dropdownMenu.then(\n          (dropdownMenu: BsComponentRef<BsDropdownMenuDirective>) => {\n            this._dropdown.attachInline(\n              dropdownMenu.viewContainer,\n              dropdownMenu.templateRef\n            );\n            this._inlinedMenu = this._dropdown._inlineViewRef;\n            this.addBs4Polyfills();\n          }\n        )\n        // swallow errors\n          .catch();\n      }\n      this.addBs4Polyfills();\n      this._isInlineOpen = true;\n      this.onShown.emit(true);\n      this._state.isOpenChange.emit(true);\n\n      return;\n    }\n    this._state.dropdownMenu.then(dropdownMenu => {\n      // check direction in which dropdown should be opened\n      const _dropup =\n        this.dropup ||\n        (typeof this.dropup !== 'undefined' && this.dropup);\n      this._state.direction = _dropup ? 'up' : 'down';\n      const _placement =\n        this.placement || (_dropup ? 'top left' : 'bottom left');\n\n      // show dropdown\n      this._dropdown\n        .attach(BsDropdownContainerComponent)\n        .to(this.container)\n        .position({attachment: _placement})\n        .show({\n          content: dropdownMenu.templateRef,\n          placement: _placement\n        });\n\n      this._state.isOpenChange.emit(true);\n    })\n    // swallow error\n      .catch();\n  }\n\n  /**\n   * Closes an element’s popover. This is considered a “manual” triggering of\n   * the popover.\n   */\n  hide(): void {\n    if (!this.isOpen) {\n      return;\n    }\n\n    if (this._showInline) {\n      this.removeShowClass();\n      this._isInlineOpen = false;\n      this.onHidden.emit(true);\n    } else {\n      this._dropdown.hide();\n    }\n\n    this._state.isOpenChange.emit(false);\n  }\n\n  /**\n   * Toggles an element’s popover. This is considered a “manual” triggering of\n   * the popover.\n   */\n  toggle(value?: boolean): void {\n    if (this.isOpen || !value) {\n      return this.hide();\n    }\n\n    return this.show();\n  }\n\n  ngOnDestroy(): void {\n    // clean up subscriptions and destroy dropdown\n    for (const sub of this._subscriptions) {\n      sub.unsubscribe();\n    }\n    this._dropdown.dispose();\n  }\n\n  private addBs4Polyfills(): void {\n    if (!isBs3()) {\n      this.addShowClass();\n      this.checkRightAlignment();\n      this.checkDropup();\n    }\n  }\n\n  private addShowClass(): void {\n    if (this._inlinedMenu && this._inlinedMenu.rootNodes[0]) {\n      this._renderer.addClass(this._inlinedMenu.rootNodes[0], 'show');\n    }\n  }\n\n  private removeShowClass(): void {\n    if (this._inlinedMenu && this._inlinedMenu.rootNodes[0]) {\n      this._renderer.removeClass(this._inlinedMenu.rootNodes[0], 'show');\n    }\n  }\n\n  private checkRightAlignment(): void {\n    if (this._inlinedMenu && this._inlinedMenu.rootNodes[0]) {\n      const isRightAligned = this._inlinedMenu.rootNodes[0].classList.contains(\n        'dropdown-menu-right'\n      );\n      this._renderer.setStyle(\n        this._inlinedMenu.rootNodes[0],\n        'left',\n        isRightAligned ? 'auto' : '0'\n      );\n      this._renderer.setStyle(\n        this._inlinedMenu.rootNodes[0],\n        'right',\n        isRightAligned ? '0' : 'auto'\n      );\n    }\n  }\n\n  private checkDropup(): void {\n    if (this._inlinedMenu && this._inlinedMenu.rootNodes[0]) {\n      // a little hack to not break support of bootstrap 4 beta\n      this._renderer.setStyle(\n        this._inlinedMenu.rootNodes[0],\n        'top',\n        this.dropup ? 'auto' : '100%'\n      );\n      this._renderer.setStyle(\n        this._inlinedMenu.rootNodes[0],\n        'transform',\n        this.dropup ? 'translateY(-101%)' : 'translateY(0)'\n      );\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[bsDropdown],[dropdown]',\n  exportAs: 'bs-dropdown',\n  providers: [BsDropdownState],\n  host: {\n    '[class.dropup]': 'dropup',\n    '[class.open]': 'isOpen',\n    '[class.show]': 'isOpen && isBs4'\n  }\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Renderer2, },\n{type: ViewContainerRef, },\n{type: ComponentLoaderFactory, },\n{type: BsDropdownConfig, },\n{type: BsDropdownState, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'placement': [{ type: Input },],\n'triggers': [{ type: Input },],\n'container': [{ type: Input },],\n'dropup': [{ type: Input },],\n'autoClose': [{ type: Input },],\n'isDisabled': [{ type: Input },],\n'isOpen': [{ type: Input },],\n'isOpenChange': [{ type: Output },],\n'onShown': [{ type: Output },],\n'onHidden': [{ type: Output },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, TemplateRef, ViewContainerRef } from '@angular/core';\nimport { BsDropdownState } from './bs-dropdown.state';\n\n\nexport class BsDropdownMenuDirective {\n  constructor(\n    _state: BsDropdownState,\n    _viewContainer: ViewContainerRef,\n    _templateRef: TemplateRef<any>\n  ) {\n    _state.resolveDropdownMenu({\n      templateRef: _templateRef,\n      viewContainer: _viewContainer\n    });\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[bsDropdownMenu],[dropdownMenu]',\n  exportAs: 'bs-dropdown-menu'\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: BsDropdownState, },\n{type: ViewContainerRef, },\n{type: TemplateRef, },\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {\n  Directive,\n  ElementRef,\n  HostBinding,\n  HostListener,\n  Input,\n  OnDestroy\n} from '@angular/core';\nimport { Subscription } from 'rxjs/Subscription';\n\nimport { BsDropdownState } from './bs-dropdown.state';\n\n\nexport class BsDropdownToggleDirective implements OnDestroy {\n   isDisabled: boolean = null;\n\n  // @HostBinding('class.active')\n   isOpen: boolean;\n\n  private _subscriptions: Subscription[] = [];\n\n  constructor(private _state: BsDropdownState, private _element: ElementRef) {\n    // sync is open value with state\n    this._subscriptions.push(\n      this._state.isOpenChange.subscribe(\n        (value: boolean) => (this.isOpen = value)\n      )\n    );\n    // populate disabled state\n    this._subscriptions.push(\n      this._state.isDisabledChange.subscribe(\n        (value: boolean) => (this.isDisabled = value || null)\n      )\n    );\n  }\n\n  \n  onClick(): void {\n    if (this.isDisabled) {\n      return;\n    }\n    this._state.toggleClick.emit(true);\n  }\n\n  \n  onDocumentClick(event: any): void {\n    if (\n      this._state.autoClose &&\n      event.button !== 2 &&\n      !this._element.nativeElement.contains(event.target)\n    ) {\n      this._state.toggleClick.emit(false);\n    }\n  }\n\n  \n  onEsc(): void {\n    if (this._state.autoClose) {\n      this._state.toggleClick.emit(false);\n    }\n  }\n\n  ngOnDestroy(): void {\n    for (const sub of this._subscriptions) {\n      sub.unsubscribe();\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[bsDropdownToggle],[dropdownToggle]',\n  exportAs: 'bs-dropdown-toggle',\n  host: {\n    '[attr.aria-haspopup]': 'true'\n  }\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: BsDropdownState, },\n{type: ElementRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'isDisabled': [{ type: HostBinding, args: ['attr.disabled', ] },],\n'isOpen': [{ type: HostBinding, args: ['attr.aria-expanded', ] },],\n'onClick': [{ type: HostListener, args: ['click', [], ] },],\n'onDocumentClick': [{ type: HostListener, args: ['document:click', ['$event'], ] },],\n'onEsc': [{ type: HostListener, args: ['keyup.esc', ] },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { ModuleWithProviders, NgModule } from '@angular/core';\nimport { ComponentLoaderFactory } from '../component-loader';\n\nimport { PositioningService } from '../positioning';\nimport { BsDropdownContainerComponent } from './bs-dropdown-container.component';\nimport { BsDropdownMenuDirective } from './bs-dropdown-menu.directive';\nimport { BsDropdownToggleDirective } from './bs-dropdown-toggle.directive';\nimport { BsDropdownConfig } from './bs-dropdown.config';\n\nimport { BsDropdownDirective } from './bs-dropdown.directive';\nimport { BsDropdownState } from './bs-dropdown.state';\n\n\nexport class BsDropdownModule {\n  static forRoot(config?: any): ModuleWithProviders {\n    return {\n      ngModule: BsDropdownModule,\n      providers: [\n        ComponentLoaderFactory,\n        PositioningService,\n        BsDropdownState,\n        {\n          provide: BsDropdownConfig,\n          useValue: config ? config : { autoClose: true }\n        }\n      ]\n    };\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  declarations: [\n    BsDropdownMenuDirective,\n    BsDropdownToggleDirective,\n    BsDropdownContainerComponent,\n    BsDropdownDirective\n  ],\n  exports: [\n    BsDropdownMenuDirective,\n    BsDropdownToggleDirective,\n    BsDropdownDirective\n  ],\n  entryComponents: [BsDropdownContainerComponent]\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nexport class FilterContainerComponent {\n\n     filters: Filter[] = [];\n     clearTooltip: string;\n     filtersChange: EventEmitter<Filter[]> = new EventEmitter<Filter[]>();\n     events: EventEmitter<FilterEvent> = new EventEmitter<FilterEvent>();\n/**\n * @param {?} filter\n * @return {?}\n */\naddFilter(filter: Filter): void {\n        this.filters.push(filter);\n        this.events.next(new FilterAddEvent(filter));\n        this.filtersChange.emit(this.filters);\n    }\n/**\n * @param {?} filter\n * @return {?}\n */\nremoveFilter(filter: Filter): void {\n        let /** @type {?} */ idx = this.filters.findIndex(filters => filters === filter);\n\n        if (idx !== -1) {\n            this.filters.splice(idx, 1);\n            this.events.next(new FilterRemoveEvent(filter));\n            this.filtersChange.emit(this.filters);\n        }\n    }\n/**\n * @return {?}\n */\nremoveAll(): void {\n        this.events.next(new FilterRemoveAllEvent());\n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-filter-container',\n    template: `\n      <ng-content></ng-content>\n\n      <!-- Add a Clear Button -->\n      <div class=\"filter-selected-clear-button\" *ngIf=\"filters.length > 0\" [tooltip]=\"clearTooltip || 'Clear All'\" (click)=\"removeAll()\">\n    \n          <svg class=\"filter-selected-clear-graphic\" width=\"19\" height=\"12\" viewBox=\"0 0 19 12\" shape-rendering=\"geometricPrecision\">\n              <rect class=\"light-grey\" x=\"0\" y=\"2\" width=\"7\" height=\"2\"></rect>\n              <rect class=\"dark-grey\" x=\"0\" y=\"5\" width=\"9\" height=\"2\"></rect>\n              <rect class=\"light-grey\" x=\"0\" y=\"8\" width=\"7\" height=\"2\"></rect>\n              <path class=\"dark-grey\" d=\"M9,1 h1 l9,9 v1 h-1 l-9,-9 v-1 Z\"></path>\n              <path class=\"dark-grey\" d=\"M9,11 v-1 l9,-9 h1 v1 l-9,9 h-1 Z\"></path>\n          </svg>\n\n      </div>\n    `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'filters': [{ type: Input },],\n'clearTooltip': [{ type: Input },],\n'filtersChange': [{ type: Output },],\n'events': [{ type: Output },],\n};\n}\n\nfunction FilterContainerComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nFilterContainerComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFilterContainerComponent.ctorParameters;\n/** @type {?} */\nFilterContainerComponent.propDecorators;\n/** @type {?} */\nFilterContainerComponent.prototype.filters;\n/** @type {?} */\nFilterContainerComponent.prototype.clearTooltip;\n/** @type {?} */\nFilterContainerComponent.prototype.filtersChange;\n/** @type {?} */\nFilterContainerComponent.prototype.events;\n}\n\n\nexport interface Filter {\n    group: string;\n    title: string;\n    name: string;\n    initial?: boolean;\n}\nexport class FilterAddEvent {\n/**\n * @param {?} filter\n */\nconstructor(public filter: Filter) {}\n}\n\nfunction FilterAddEvent_tsickle_Closure_declarations() {\n/** @type {?} */\nFilterAddEvent.prototype.filter;\n}\n\nexport class FilterRemoveEvent {\n/**\n * @param {?} filter\n */\nconstructor(public filter: Filter) {}\n}\n\nfunction FilterRemoveEvent_tsickle_Closure_declarations() {\n/** @type {?} */\nFilterRemoveEvent.prototype.filter;\n}\n\nexport class FilterRemoveAllEvent {\n}\n\nexport type FilterEvent = FilterAddEvent | FilterRemoveEvent | FilterRemoveAllEvent;\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, Host, Input, Output } from '@angular/core';\nimport { FilterContainerComponent, Filter, FilterRemoveAllEvent } from '../filter-container.component';\nexport class FilterBaseComponent {\n\n     filters: Filter[];\n/**\n * @param {?} filtersContainer\n */\nconstructor(\nprivate filtersContainer: FilterContainerComponent) {\n\n        filtersContainer.events.filter(event => event instanceof FilterRemoveAllEvent).subscribe(this.removeFilter.bind(this));\n    }\n/**\n * @param {?} filter\n * @return {?}\n */\naddFilter(filter: Filter): void {\n        if (!filter.initial) {\n            this.filtersContainer.addFilter(filter);\n        }\n    }\n/**\n * @param {?} filter\n * @return {?}\n */\nremoveFilter(filter: Filter): void {\n        if (!filter) {\n            return;\n        }\n\n        this.filtersContainer.removeFilter(filter);\n    }\n    \nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'ux-filter-base'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: FilterContainerComponent, decorators: [{ type: Host }, ]},\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'filters': [{ type: Input },],\n};\n}\n\nfunction FilterBaseComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nFilterBaseComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFilterBaseComponent.ctorParameters;\n/** @type {?} */\nFilterBaseComponent.propDecorators;\n/** @type {?} */\nFilterBaseComponent.prototype.filters;\n/** @type {?} */\nFilterBaseComponent.prototype.filtersContainer;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { BsDropdownDirective } from 'ngx-bootstrap/dropdown';\nimport { Component, Input, ViewChild } from '@angular/core';\nimport { FilterBaseComponent } from '../filter-base/filter-base.component';\nimport { Filter, FilterContainerComponent, FilterRemoveAllEvent } from '../filter-container.component';\nimport { TypeaheadMatch } from 'ngx-bootstrap/typeahead';\nexport class FilterDynamicComponent extends FilterBaseComponent {\n\n     filters: Filter[];\n     initial: Filter;\n     options: FilterDynamicListConfig;\n\n     dropdown: BsDropdownDirective;\n\n    defaultOptions: FilterDynamicListConfig = {\n        placeholder: '',\n        minCharacters: 3\n    };\n    searchQuery: string;\n    selected: Filter;\n    showTypeahead: boolean = true;\n    typeaheadItems: string[] = [];\n/**\n * @return {?}\n */\ngetItems(): string[] {\n        return this.filters.filter(item => item !== this.initial).map(item => item.name);\n    }\n/**\n * @return {?}\n */\nngOnInit() {\n        this.selected = this.initial;\n        this.typeaheadItems = this.getItems();\n\n        if (this.options && this.options.maxIndividualItems && this.options.maxIndividualItems + 1 >= this.filters.length ) {\n            this.showTypeahead = false;\n        }\n    }\n/**\n * @param {?} typeaheadOption\n * @return {?}\n */\nselectOption(typeaheadOption: TypeaheadMatch) { \n        this.removeFilter();\n        let /** @type {?} */ idx = this.filters.findIndex(filter => filter.name === typeaheadOption.value);\n        this.selected = this.filters[idx];\n        this.addFilter(this.selected);\n        this.searchQuery = '';\n        this.dropdown.hide();\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nclickOff(event: MouseEvent) {\n\n        let /** @type {?} */ target = /** @type {?} */(( event.target as HTMLElement));\n        let /** @type {?} */ hideDropdown = true;\n\n        while (target && target.nodeName !== 'BODY') {\n            if (target.classList.contains('ux-dynamic-filter')) {\n                hideDropdown = false;\n                break;\n            } else {\n                target = target.parentElement;\n            }\n        }\n\n        if (hideDropdown) {\n            this.searchQuery = '';\n            this.dropdown.hide();\n        }\n        \n    }\n/**\n * @return {?}\n */\nremoveFilter(): void { \n        if (this.selected !== this.initial) {\n            super.removeFilter(this.selected);\n            this.selected = this.initial;\n        }\n        this.searchQuery = '';\n    }\n/**\n * @param {?} filter\n * @return {?}\n */\nselectFilter(filter: Filter) {\n        this.removeFilter();\n        this.selected = filter;\n        this.addFilter(this.selected);\n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-filter-dynamic',\n    template: `\n      <div class=\"btn-group ux-dynamic-filter\" dropdown #dynamicDropdown=\"bs-dropdown\">\n          <button (click)=\"dynamicDropdown.show()\" type=\"button\" [class.active]=\"selected !== initial\" class=\"filter-dropdown btn dropdown-toggle\">{{ selected?.title }} \n              <span class=\"hpe-icon hpe-down\"></span>\n          </button>\n          <ul *dropdownMenu class=\"dropdown-menu\" role=\"menu\">\n\n              <li class=\"dropdown-list-item\" *ngIf=\"showTypeahead\" role=\"menuitem\">\n                  <a class=\"dropdown-item\" (click)=\"removeFilter(); dynamicDropdown.hide();\">\n                      <i class=\"hpe-icon\" [class.hpe-checkmark]=\"initial === selected\"></i>\n                      <span class=\"filter-dropdown-title\">{{ initial.name }}</span>\n                  </a>\n              </li>\n\n              <li class=\"dropdown-list-item\" *ngIf=\"selected !== initial && showTypeahead\" role=\"menuitem\">\n                  <a class=\"dropdown-item\">\n                      <i class=\"hpe-icon hpe-checkmark\"></i>\n                      <span class=\"filter-dropdown-title\">{{ selected.name }}</span>\n                  </a>\n              </li>\n\n              <hr>\n\n              <li *ngIf=\"showTypeahead\" class=\"typeahead-box\">\n                  <input [(ngModel)]=\"searchQuery\" [typeahead]=\"typeaheadItems\" class=\"form-control\" \n                  (typeaheadOnSelect)=\"selectOption($event)\" \n                  [placeholder]=\"options?.placeholder || defaultOptions.placeholder\"\n                  [typeaheadMinLength]=\"options?.minCharacters || defaultOptions.minCharacters\"\n                  [typeaheadOptionsLimit]=\"options?.maxResults\">\n              </li>\n\n              <span *ngIf=\"!showTypeahead\">\n                  <li class=\"dropdown-list-item\" *ngFor=\"let filter of filters\" role=\"menuitem\">\n                      <a class=\"dropdown-item\" (click)=\"selectFilter(filter)\">\n                          <i class=\"hpe-icon\" [class.hpe-checkmark]=\"filter === selected\"></i>\n                          <span class=\"filter-dropdown-title\">{{ filter.name }}</span>\n                      </a>\n                  </li>\n              </span>\n\n          </ul>\n      </div>\n    `,\n    host: {\n        '(document:click)': 'clickOff($event)',\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'filters': [{ type: Input },],\n'initial': [{ type: Input },],\n'options': [{ type: Input },],\n'dropdown': [{ type: ViewChild, args: [BsDropdownDirective, ] },],\n};\n}\n\nfunction FilterDynamicComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nFilterDynamicComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFilterDynamicComponent.ctorParameters;\n/** @type {?} */\nFilterDynamicComponent.propDecorators;\n/** @type {?} */\nFilterDynamicComponent.prototype.filters;\n/** @type {?} */\nFilterDynamicComponent.prototype.initial;\n/** @type {?} */\nFilterDynamicComponent.prototype.options;\n/** @type {?} */\nFilterDynamicComponent.prototype.dropdown;\n/** @type {?} */\nFilterDynamicComponent.prototype.defaultOptions;\n/** @type {?} */\nFilterDynamicComponent.prototype.searchQuery;\n/** @type {?} */\nFilterDynamicComponent.prototype.selected;\n/** @type {?} */\nFilterDynamicComponent.prototype.showTypeahead;\n/** @type {?} */\nFilterDynamicComponent.prototype.typeaheadItems;\n}\n\n\nexport interface FilterDynamicListConfig {\n    placeholder?: string;\n    minCharacters?: number;\n    maxResults?: number;\n    maxIndividualItems?: number;\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Input } from '@angular/core';\nimport { FilterBaseComponent } from '../filter-base/filter-base.component';\nimport { Filter, FilterContainerComponent, FilterRemoveAllEvent } from '../filter-container.component';\nexport class FilterDropdownComponent extends FilterBaseComponent {\n\n     initial: Filter;\n\n    selected: Filter;\n/**\n * @return {?}\n */\nremoveFilter(): void {\n        super.removeFilter(this.selected);\n        this.selected = this.initial;\n    }\n/**\n * @return {?}\n */\nngOnInit() {\n        this.selected = this.initial;\n    }\n/**\n * @param {?} filter\n * @return {?}\n */\nselectFilter(filter: Filter) {\n        this.removeFilter();\n        this.selected = filter;\n        this.addFilter(this.selected);\n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-filter-dropdown',\n    template: `\n      <div class=\"btn-group\" dropdown>\n          <button dropdownToggle type=\"button\" class=\"filter-dropdown btn dropdown-toggle\" [class.active]=\"selected !== initial\">{{ selected?.title }} \n              <span class=\"hpe-icon hpe-down\"></span>\n          </button>\n          <ul *dropdownMenu class=\"dropdown-menu\" role=\"menu\">\n              <li class=\"dropdown-list-item\" *ngFor=\"let filter of filters\" role=\"menuitem\">\n                  <a class=\"dropdown-item\" (click)=\"selectFilter(filter)\">\n                      <i class=\"hpe-icon\" [class.hpe-checkmark]=\"filter === selected\"></i>\n                      <span class=\"filter-dropdown-title\">{{ filter.name }}</span>\n                  </a>\n              </li>\n          </ul>\n      </div>\n    `,\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'initial': [{ type: Input },],\n};\n}\n\nfunction FilterDropdownComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nFilterDropdownComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFilterDropdownComponent.ctorParameters;\n/** @type {?} */\nFilterDropdownComponent.propDecorators;\n/** @type {?} */\nFilterDropdownComponent.prototype.initial;\n/** @type {?} */\nFilterDropdownComponent.prototype.selected;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { TooltipModule } from 'ngx-bootstrap/tooltip';\nimport { FilterDynamicComponent } from './filter-dynamic/filter-dynamic.component';\nimport { FilterDropdownComponent } from './filter-dropdown/filter-dropdown.component';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\nimport { FilterContainerComponent } from './filter-container.component';\nimport { FilterBaseComponent } from './filter-base/filter-base.component';\nimport { TypeaheadModule } from 'ngx-bootstrap/typeahead';\nimport { FormsModule } from '@angular/forms';\n\nconst /** @type {?} */ DECLARATIONS = [\n    FilterBaseComponent,\n    FilterContainerComponent,\n    FilterDropdownComponent,\n    FilterDynamicComponent\n];\nexport class FilterModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        BsDropdownModule.forRoot(),\n        TypeaheadModule.forRoot(),\n        TooltipModule.forRoot(),\n        FormsModule,\n        CommonModule\n    ],\n    exports: DECLARATIONS,\n    declarations: DECLARATIONS\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction FilterModule_tsickle_Closure_declarations() {\n/** @type {?} */\nFilterModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFilterModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Input, Directive, HostListener, Output, EventEmitter } from '@angular/core';\nexport class FlippableCardComponent {\n\n     direction: 'horizontal' | 'vertical' = 'horizontal';\n     trigger: 'click' | 'hover' | 'manual' = 'hover';\n     width: number = 280;\n     height: number = 200;\n     flipped: boolean = false;\n     flippedChange: EventEmitter<boolean> = new EventEmitter<boolean>();\n/**\n * @param {?} state\n * @return {?}\n */\nsetFlipped(state: boolean) {\n        this.flipped = state;\n        this.flippedChange.emit(this.flipped);\n    }\n/**\n * @return {?}\n */\ntoggleFlipped() {\n        this.setFlipped(!this.flipped);\n    }\n/**\n * @return {?}\n */\nclickTrigger() {\n\n        // add or remove the class depending on whether or not the card has been flipped\n        if (this.trigger === 'click') {\n            this.toggleFlipped();\n        }\n    }\n/**\n * @return {?}\n */\nhoverEnter() {\n        // if the trigger is hover then begin to flip\n        if (this.trigger === 'hover') {\n            this.setFlipped(true);\n        }\n    }\n/**\n * @return {?}\n */\nhoverExit() {\n        if (this.trigger === 'hover') {\n            this.setFlipped(false);\n        }\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-flippable-card',\n    template: `\n      <div class=\"ux-flipper\" [class.ux-flip-card]=\"flipped\" [style.width.px]=\"width\" [style.height.px]=\"height\">\n\n          <div class=\"ux-flippable-card-front\" [style.width.px]=\"width\" [style.height.px]=\"height\">\n              <ng-content select=\"ux-flippable-card-front\"></ng-content>\n          </div>\n\n          <div class=\"ux-flippable-card-back\" [style.width.px]=\"width\" [style.height.px]=\"height\">\n              <ng-content select=\"ux-flippable-card-back\"></ng-content>\n          </div>\n      </div>\n    `,\n    host: {\n        '[class.horizontal]': 'direction === \"horizontal\"',\n        '[class.vertical]': 'direction === \"vertical\"'\n    },\n    exportAs: 'ux-flippable-card'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'direction': [{ type: Input },],\n'trigger': [{ type: Input },],\n'width': [{ type: Input },],\n'height': [{ type: Input },],\n'flipped': [{ type: Input },],\n'flippedChange': [{ type: Output },],\n'clickTrigger': [{ type: HostListener, args: ['click', ] },],\n'hoverEnter': [{ type: HostListener, args: ['mouseenter', ] },],\n'hoverExit': [{ type: HostListener, args: ['mouseleave', ] },],\n};\n}\n\nfunction FlippableCardComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nFlippableCardComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFlippableCardComponent.ctorParameters;\n/** @type {?} */\nFlippableCardComponent.propDecorators;\n/** @type {?} */\nFlippableCardComponent.prototype.direction;\n/** @type {?} */\nFlippableCardComponent.prototype.trigger;\n/** @type {?} */\nFlippableCardComponent.prototype.width;\n/** @type {?} */\nFlippableCardComponent.prototype.height;\n/** @type {?} */\nFlippableCardComponent.prototype.flipped;\n/** @type {?} */\nFlippableCardComponent.prototype.flippedChange;\n}\n\nexport class FlippableCardFrontDirective { static decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'ux-flippable-card-front'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction FlippableCardFrontDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nFlippableCardFrontDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFlippableCardFrontDirective.ctorParameters;\n}\n\nexport class FlippableCardBackDirective { static decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'ux-flippable-card-back'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction FlippableCardBackDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nFlippableCardBackDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFlippableCardBackDirective.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\n\nimport { FlippableCardComponent, FlippableCardBackDirective, FlippableCardFrontDirective } from './flippable-card.component';\nexport class FlippableCardModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    exports: [FlippableCardComponent, FlippableCardBackDirective, FlippableCardFrontDirective],\n    declarations: [FlippableCardComponent, FlippableCardBackDirective, FlippableCardFrontDirective]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction FlippableCardModule_tsickle_Closure_declarations() {\n/** @type {?} */\nFlippableCardModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFlippableCardModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Directive, Input, SimpleChange, Output, EventEmitter, ContentChild } from '@angular/core';\nexport class ItemDisplayPanelContentDirective { static decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: '[uxItemDisplayPanelContent]'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ItemDisplayPanelContentDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nItemDisplayPanelContentDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nItemDisplayPanelContentDirective.ctorParameters;\n}\n\nexport class ItemDisplayPanelFooterDirective { static decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: '[uxItemDisplayPanelFooter]'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ItemDisplayPanelFooterDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nItemDisplayPanelFooterDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nItemDisplayPanelFooterDirective.ctorParameters;\n}\n\nexport class ItemDisplayPanelComponent {\n\n     header: string;\n     top: number;\n     boxShadow: boolean = true;\n     closeVisible: boolean = true;\n     preventClose: boolean = false;\n     inline: boolean = false;\n     animate: boolean = false;\n     shadow: boolean = false;\n     width: number;\n\n     footer: ItemDisplayPanelFooterDirective;\n\n     visibleChange: EventEmitter<boolean> = new EventEmitter<boolean>();\n/**\n * @deprecated \n * Title used for adding tooltips and shouldn't be used as an input\n * instead header will be used. This is here to support backward compatibility only\n * this property should not be used.\n * @param {?} value\n * @return {?}\n */\nset title(value: string) {\n        this.header = value;\n    }\n/**\n * @return {?}\n */\nget title() {\n        return this.header;\n    }\n/**\n * @param {?} visible\n * @return {?}\n */\nset visible(visible: boolean) {\n\n        this._visible = visible;\n\n        // invoke change event\n        this.visibleChange.emit(this._visible);\n\n    }\n/**\n * @return {?}\n */\nget visible() {\n        return this._visible;\n    }\nprivate _visible: boolean = false;\n/**\n * @param {?} event\n * @return {?}\n */\nclickOff(event: MouseEvent) {\n\n        // dont close\n        if (this.preventClose) {\n            return;\n        }\n\n        // dont do anything if the panel is hidden\n        if (this._visible) {\n\n            let /** @type {?} */ target = /** @type {?} */(( event.target as HTMLElement));\n\n            // if the target node is the HTML tag, then this was triggered by scrolling and we should not close the panel\n            if (target.nodeName === 'HTML') {\n                return;\n            }\n\n            let /** @type {?} */ hidePanel = true;\n\n            while (target && target.nodeName !== 'BODY') {\n                if (target.classList.contains('ux-item-display-panel')) {\n                    hidePanel = false;\n                    break;\n                } else {\n                    target = target.parentElement;\n                }\n            }\n\n            if (hidePanel) {\n                this._visible = false;\n                this.visibleChange.emit(this._visible);\n            }\n        }\n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-item-display-panel',\n    template: `\n      <div class=\"ux-item-display-panel\" [class.box-shadow]=\"boxShadow\" [class.inline]=\"inline\" [class.animate]=\"animate\" [class.item-display-panel-hide]=\"!visible\" [style.width]=\"width\" [style.top]=\"top\" [style.height]='\"calc(100% - \" + top + \"px)\"'>\n\n          <div class=\"item-display-panel-header\" [class.item-display-panel-shadow]=\"shadow\">\n              <div class=\"heading-flex-box\">\n                  <h3>{{ header }}</h3>\n                  <span *ngIf=\"closeVisible\" class=\"heading-close-button\" tabindex=\"0\" (click)=\"visible = false\" (keydown.enter)=\"visible = false\">\n                      <i class=\"hpe-icon hpe-close\"></i>\n                  </span>\n              </div>\n          </div>\n\n          <div class=\"item-display-panel-content\">\n              <ng-content select=\"[uxItemDisplayPanelContent]\"></ng-content>\n          </div>\n\n          <div class=\"item-display-panel-footer\" *ngIf=\"footer\">\n              <ng-content select=\"[uxItemDisplayPanelFooter]\"></ng-content>\n          </div>\n\n      </div>\n    `,\n    host: {\n        '(document:click)': 'clickOff($event)',\n        '(document:keyup.escape)': 'visible = false',\n        '[class.inline-host]': 'inline',\n        '[class.visible-host]': 'visible'\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'header': [{ type: Input },],\n'top': [{ type: Input },],\n'boxShadow': [{ type: Input },],\n'closeVisible': [{ type: Input },],\n'preventClose': [{ type: Input },],\n'inline': [{ type: Input },],\n'animate': [{ type: Input },],\n'shadow': [{ type: Input },],\n'width': [{ type: Input },],\n'footer': [{ type: ContentChild, args: [ItemDisplayPanelFooterDirective, ] },],\n'visibleChange': [{ type: Output },],\n'title': [{ type: Input },],\n'visible': [{ type: Input },],\n};\n}\n\nfunction ItemDisplayPanelComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nItemDisplayPanelComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nItemDisplayPanelComponent.ctorParameters;\n/** @type {?} */\nItemDisplayPanelComponent.propDecorators;\n/** @type {?} */\nItemDisplayPanelComponent.prototype.header;\n/** @type {?} */\nItemDisplayPanelComponent.prototype.top;\n/** @type {?} */\nItemDisplayPanelComponent.prototype.boxShadow;\n/** @type {?} */\nItemDisplayPanelComponent.prototype.closeVisible;\n/** @type {?} */\nItemDisplayPanelComponent.prototype.preventClose;\n/** @type {?} */\nItemDisplayPanelComponent.prototype.inline;\n/** @type {?} */\nItemDisplayPanelComponent.prototype.animate;\n/** @type {?} */\nItemDisplayPanelComponent.prototype.shadow;\n/** @type {?} */\nItemDisplayPanelComponent.prototype.width;\n/** @type {?} */\nItemDisplayPanelComponent.prototype.footer;\n/** @type {?} */\nItemDisplayPanelComponent.prototype.visibleChange;\n/** @type {?} */\nItemDisplayPanelComponent.prototype._visible;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { CommonModule } from '@angular/common';\nimport { ItemDisplayPanelComponent, ItemDisplayPanelContentDirective, ItemDisplayPanelFooterDirective } from './item-display-panel.component';\nimport { NgModule, Input } from '@angular/core';\nimport { ModalModule } from 'ngx-bootstrap/modal';\n\nconst /** @type {?} */ DECLARATIONS = [\n    ItemDisplayPanelComponent,\n    ItemDisplayPanelContentDirective,\n    ItemDisplayPanelFooterDirective\n];\nexport class ItemDisplayPanelModule {static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        CommonModule\n    ],\n    exports: DECLARATIONS,\n    declarations: DECLARATIONS\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ItemDisplayPanelModule_tsickle_Closure_declarations() {\n/** @type {?} */\nItemDisplayPanelModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nItemDisplayPanelModule.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Input, ViewEncapsulation, EventEmitter, Output, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nexport const /** @type {?} */ NUMBER_PICKER_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => NumberPickerComponent),\n    multi: true\n};\nexport class NumberPickerComponent implements ControlValueAccessor {\nprivate _min: number = -Infinity;\nprivate _max: number = Infinity;\nprivate _step: number = 1;\nprivate _disabled: boolean = false;\nprivate _value: number = 0;\nprivate _propagateChange = (_: any) => { };\n\n     valid: boolean = true;\n     valueChange = new EventEmitter<number>();\n/**\n * @return {?}\n */\nget value(): number {\n        return this._value;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset value(value: number) {\n        this._value = value;\n        this.valueChange.emit(value);\n        this._propagateChange(value);\n    }\n/**\n * @return {?}\n */\nget min(): number {\n        return this._min;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset min(value) {\n        this._min = typeof value === 'string' ? parseFloat(value) : value;\n    }\n/**\n * @return {?}\n */\nget max(): number {\n        return this._max;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset max(value) {\n        this._max = typeof value === 'string' ? parseFloat(value) : value;\n    }\n/**\n * @return {?}\n */\nget step(): number {\n        return this._step;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset step(value) {\n        this._step = typeof value === 'string' ? parseFloat(value) : value;\n    }\n/**\n * @return {?}\n */\nget disabled(): boolean {\n        return this._disabled;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset disabled(value) {\n        this._disabled = typeof value === 'string' && (value === '' || value === 'true' || value === 'disabled') || value === true;\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nincrement(event: MouseEvent | KeyboardEvent): void {\n        event.preventDefault();\n\n        if (!this.disabled) {\n            this.value = Math.max(Math.min(this.value + this.step, this.max), this.min);\n        }\n    }\n/**\n * @param {?} event\n * @return {?}\n */\ndecrement(event: MouseEvent | KeyboardEvent): void {\n        event.preventDefault();\n\n        if (!this.disabled) {\n            this.value = Math.min(Math.max(this.value - this.step, this.min), this.max);\n        }\n    }\n/**\n * @return {?}\n */\nisValid(): boolean {\n        if (this.value < this.min || this.value > this.max) {\n            return false;\n        }\n\n        return this.valid;\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nonScroll(event: WheelEvent): void {\n\n        let /** @type {?} */ scrollValue = event.deltaY || event.wheelDelta;\n\n        if (scrollValue < 0) {\n            this.increment(event);\n        } else {\n            this.decrement(event);\n        }\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nwriteValue(value: any): void {\n        if (value !== undefined) {\n            this._value = value;\n        }\n    }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnChange(fn: any): void {\n        this._propagateChange = fn;\n    }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnTouched(fn: any): void { }\n/**\n * @param {?} isDisabled\n * @return {?}\n */\nsetDisabledState(isDisabled: boolean): void {\n        this.disabled = isDisabled;\n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-number-picker',\n    template: `\n      <input type=\"number\" class=\"form-control number-picker-input\" [(ngModel)]=\"value\" [min]=\"min\" [max]=\"max\" (keydown.ArrowDown)=\"decrement($event)\"\n          (keydown.ArrowUp)=\"increment($event)\" (wheel)=\"onScroll($event)\" step=\"any\" [disabled]=\"disabled\">\n\n      <div class=\"number-picker-controls\">\n\n          <div class=\"number-picker-control-up\" (click)=\"increment($event)\" [class.disabled]=\"disabled || value >= max\">\n              <span class=\"hpe-icon hpe-up\"></span>\n          </div>\n\n          <div class=\"number-picker-control-down\" (click)=\"decrement($event)\" [class.disabled]=\"disabled || value <= min\">\n              <span class=\"hpe-icon hpe-down\"></span>\n          </div>\n\n      </div>\n    `,\n    providers: [NUMBER_PICKER_VALUE_ACCESSOR],\n    host: {\n        '[class.has-error]': '!isValid()'\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'valid': [{ type: Input },],\n'valueChange': [{ type: Output },],\n'value': [{ type: Input, args: ['value', ] },],\n'min': [{ type: Input },],\n'max': [{ type: Input },],\n'step': [{ type: Input },],\n'disabled': [{ type: Input },],\n};\n}\n\nfunction NumberPickerComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nNumberPickerComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNumberPickerComponent.ctorParameters;\n/** @type {?} */\nNumberPickerComponent.propDecorators;\n/** @type {?} */\nNumberPickerComponent.prototype._min;\n/** @type {?} */\nNumberPickerComponent.prototype._max;\n/** @type {?} */\nNumberPickerComponent.prototype._step;\n/** @type {?} */\nNumberPickerComponent.prototype._disabled;\n/** @type {?} */\nNumberPickerComponent.prototype._value;\n/** @type {?} */\nNumberPickerComponent.prototype._propagateChange;\n/** @type {?} */\nNumberPickerComponent.prototype.valid;\n/** @type {?} */\nNumberPickerComponent.prototype.valueChange;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\n\nimport { NumberPickerComponent } from './number-picker.component';\nexport class NumberPickerModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        CommonModule,\n        FormsModule\n    ],\n    exports: [NumberPickerComponent],\n    declarations: [NumberPickerComponent]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction NumberPickerModule_tsickle_Closure_declarations() {\n/** @type {?} */\nNumberPickerModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNumberPickerModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive } from '@angular/core';\nexport class PageHeaderCustomMenuDirective { static decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{ \n    selector: '[uxPageHeaderCustomMenu]' \n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction PageHeaderCustomMenuDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nPageHeaderCustomMenuDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nPageHeaderCustomMenuDirective.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, EventEmitter, Input, Output, ContentChildren, QueryList, TemplateRef } from '@angular/core';\nimport { Breadcrumb } from '../breadcrumbs/index';\nimport { PageHeaderNavigationItem } from './navigation/navigation.component';\nimport { PageHeaderCustomMenuDirective } from './custom-menu/custom-menu.directive';\nexport class PageHeaderComponent {\n\n     logo: string;\n     items: PageHeaderNavigationItem[];\n     crumbs: Breadcrumb[];\n     header: string;\n     alignment: 'left' | 'right' | 'center' = 'center';\n     condensed: boolean = false;\n     iconMenus: PageHeaderIconMenu[];\n     backVisible: boolean = true;\n    \n     backClick = new EventEmitter();\n\n     customMenus: QueryList<TemplateRef<any>>;\n/**\n * @return {?}\n */\ngoBack() {\n        this.backClick.emit();\n    }\n/**\n * @return {?}\n */\ngetCondensedBreadcrumbs(): Breadcrumb[] {\n        if (this.crumbs) {\n\n            let /** @type {?} */ crumbs = this.crumbs.slice();\n            crumbs.push({ title: this.header });\n\n            return crumbs;\n        }\n\n        return [{ title: this.header }];\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-page-header',\n    exportAs: 'ux-page-header',\n    template: `\n      <!-- Display Upper Section when not condensed -->\n      <div class=\"page-header-actions\" *ngIf=\"!condensed\">\n\n          <div class=\"page-header-logo-container\" [hidden]=\"!logo\">\n              <img [attr.src]=\"logo\" class=\"page-header-logo\">\n          </div>\n\n          <div class=\"page-header-navigation\" [ngClass]=\"alignment\">\n\n              <!-- The Top Navigation Options -->\n              <ux-page-header-horizontal-navigation [items]=\"items\"></ux-page-header-horizontal-navigation>\n          </div>\n\n          <div class=\"page-header-icon-menus\">\n              <ng-container *ngFor=\"let menu of customMenus\" [ngTemplateOutlet]=\"menu\"></ng-container>\n\n              <ux-page-header-icon-menu *ngFor=\"let menu of iconMenus\" [menu]=\"menu\"></ux-page-header-icon-menu>\n          </div>\n      </div>\n\n      <!-- Display Lower Section When Not Condensed -->\n      <div class=\"page-header-details\" *ngIf=\"!condensed\">\n\n          <div class=\"page-header-state-container\">\n\n              <div *ngIf=\"backVisible == true\" class=\"page-header-back-button\" (click)=\"goBack()\">\n                  <span class=\"hpe-icon hpe-previous text-primary\"></span>\n              </div>\n\n              <div class=\"page-header-title-container\">\n\n                  <ux-breadcrumbs [crumbs]=\"crumbs\"></ux-breadcrumbs>\n\n                  <h1 class=\"page-header-title\">{{ header }}</h1>\n              </div>\n\n          </div>\n\n      </div>\n\n      <!-- Display This Section Optimized for Condensed Mode -->\n      <div class=\"page-header-condensed-content\" *ngIf=\"condensed\">\n\n          <div class=\"page-header-breadcrumbs\">\n              <ux-breadcrumbs [crumbs]=\"getCondensedBreadcrumbs()\"></ux-breadcrumbs>\n          </div>\n\n          <div class=\"page-header-navigation\" [ngClass]=\"alignment\">\n\n              <!-- The Top Navigation Options -->\n              <ux-page-header-horizontal-navigation [items]=\"items\"></ux-page-header-horizontal-navigation>\n          </div>\n\n          <div class=\"page-header-icon-menus\">\n              <ng-container *ngFor=\"let menu of customMenus\" [ngTemplateOutlet]=\"menu\"></ng-container>\n              <ux-page-header-icon-menu *ngFor=\"let menu of iconMenus\" [menu]=\"menu\"></ux-page-header-icon-menu>\n          </div>\n\n      </div>\n    `,\n    host: {\n        '[class.page-header-condensed]': 'condensed'\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'logo': [{ type: Input },],\n'items': [{ type: Input },],\n'crumbs': [{ type: Input },],\n'header': [{ type: Input },],\n'alignment': [{ type: Input },],\n'condensed': [{ type: Input },],\n'iconMenus': [{ type: Input },],\n'backVisible': [{ type: Input },],\n'backClick': [{ type: Output },],\n'customMenus': [{ type: ContentChildren, args: [PageHeaderCustomMenuDirective, { read: TemplateRef }, ] },],\n};\n}\n\nfunction PageHeaderComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nPageHeaderComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nPageHeaderComponent.ctorParameters;\n/** @type {?} */\nPageHeaderComponent.propDecorators;\n/** @type {?} */\nPageHeaderComponent.prototype.logo;\n/** @type {?} */\nPageHeaderComponent.prototype.items;\n/** @type {?} */\nPageHeaderComponent.prototype.crumbs;\n/** @type {?} */\nPageHeaderComponent.prototype.header;\n/** @type {?} */\nPageHeaderComponent.prototype.alignment;\n/** @type {?} */\nPageHeaderComponent.prototype.condensed;\n/** @type {?} */\nPageHeaderComponent.prototype.iconMenus;\n/** @type {?} */\nPageHeaderComponent.prototype.backVisible;\n/** @type {?} */\nPageHeaderComponent.prototype.backClick;\n/** @type {?} */\nPageHeaderComponent.prototype.customMenus;\n}\n\n\nexport interface PageHeaderIconMenu {\n    icon: string;\n    badge?: number | string;\n    select?: (menu: PageHeaderIconMenu) => void;\n    dropdown?: PageHeaderIconMenuDropdownItem[];\n}\n\nexport interface PageHeaderIconMenuDropdownItem {\n    icon?: string;\n    title: string;\n    subtitle?: string;\n    header?: boolean;\n    divider?: boolean;\n    select?: () => void;\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Input } from '@angular/core';\nimport { PageHeaderIconMenu, PageHeaderIconMenuDropdownItem } from '../page-header.component';\nexport class PageHeaderIconMenuComponent {\n\n     menu: PageHeaderIconMenu;\n/**\n * @param {?} item\n * @return {?}\n */\nselect(item: PageHeaderIconMenu | PageHeaderIconMenuDropdownItem) {\n        if (item.select) {\n            item.select.call(item, item);\n        }\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-page-header-icon-menu',\n    template: `\n      <div class=\"page-header-icon-menu\" dropdown dropdownToggle placement=\"bottom right\">\n\n          <a class=\"page-header-icon-menu-button\" (click)=\"select(menu)\">\n              <i class=\"hpe-icon\" [ngClass]=\"menu.icon\"></i>\n              <span class=\"label label-primary\" *ngIf=\"menu?.badge\">{{ menu.badge }}</span>\n          </a>\n\n          <ul *dropdownMenu class=\"dropdown-menu\" role=\"menu\">\n\n              <li role=\"menuitem\" *ngFor=\"let dropdown of menu?.dropdown\" [class.dropdown-header]=\"dropdown.header\" [class.dropdown-divider]=\"dropdown.divider\">\n\n                  <span class=\"font-bold\" *ngIf=\"dropdown.header\">{{ dropdown.title }}</span>\n\n                  <a class=\"dropdown-item\" *ngIf=\"!dropdown.header\" (click)=\"select(dropdown)\">\n                      <i class=\"hpe-icon hp-fw text-muted\" [ngClass]=\"dropdown.icon\"></i>\n                      {{ dropdown.title }}\n                      <span class=\"pull-right text-muted small\" *ngIf=\"dropdown.subtitle\">{{ dropdown.subtitle }}</span>\n                  </a>\n              </li>\n\n          </ul>\n      </div>\n    `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'menu': [{ type: Input },],\n};\n}\n\nfunction PageHeaderIconMenuComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nPageHeaderIconMenuComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nPageHeaderIconMenuComponent.ctorParameters;\n/** @type {?} */\nPageHeaderIconMenuComponent.propDecorators;\n/** @type {?} */\nPageHeaderIconMenuComponent.prototype.menu;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { BsDropdownDirective } from 'ngx-bootstrap/dropdown';\nimport { Subject } from 'rxjs/Subject';\nimport'rxjs/add/operator/debounceTime';\nimport { PageHeaderNavigationDropdownItem } from '../navigation.component';\nexport class PageHeaderNavigationDropdownItemComponent {\n\n     item: PageHeaderNavigationDropdownItem;\n     onSelect: EventEmitter<PageHeaderNavigationDropdownItem> = new EventEmitter<PageHeaderNavigationDropdownItem>();\n\n    dropdownOpen: boolean = false;\nprivate _dropdownEvents: Subject<boolean> = new Subject<boolean>();\nconstructor() {\n\n        // subscribe to stream with a debounce (a small debounce is all that is required)\n        this._dropdownEvents.debounceTime(1).subscribe(visible => this.dropdownOpen = visible);\n    }\n/**\n * @param {?} item\n * @param {?=} parentItem\n * @return {?}\n */\nselectItem(item: PageHeaderNavigationDropdownItem, parentItem?: PageHeaderNavigationDropdownItem) {\n\n        // clicking on an item with children then return\n        if (item.children) {\n            return;\n        }\n\n        // emit the selected item in an event\n        this.onSelect.emit(item);\n\n        // select the current item\n        item.selected = true;\n\n        // now also select the parent menu\n        if (parentItem) {\n            parentItem.selected = true;\n        }\n    }\n/**\n * @return {?}\n */\nhoverStart() {\n        this._dropdownEvents.next(true);\n    }\n/**\n * @return {?}\n */\nhoverLeave() {\n        this._dropdownEvents.next(false);\n    }\n/**\n * @return {?}\n */\nclose() {\n        this.dropdownOpen = false;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-page-header-horizontal-navigation-dropdown-item',\n    template: `\n      <div role=\"menu-item\" dropdown [isOpen]=\"dropdownOpen\" container=\"body\" placement=\"right\" [isDisabled]=\"!item.children\" (mouseenter)=\"hoverStart()\"\n          (mouseleave)=\"hoverLeave()\" #subMenu=\"bs-dropdown\">\n\n          <!-- Show the menu item and the arrow if there are children -->\n          <a class=\"dropdown-item\" tabindex=\"0\" [class.selected]=\"item.selected\" (keyup.enter)=\"selectItem(item); subMenu.toggle()\" (click)=\"selectItem(item)\">\n              <span class=\"dropdown-item-title\">{{ item.title }}</span>\n              <span class=\"dropdown-item-icon hpe-icon hpe-next\" *ngIf=\"item.children\"></span>\n          </a>\n\n          <!-- Allow another level of menu items -->\n          <ul *dropdownMenu class=\"dropdown-menu horizontal-navigation-dropdown-submenu\" role=\"menu\" (mouseenter)=\"hoverStart()\" (mouseleave)=\"hoverLeave()\">\n\n              <li role=\"menuitem\" *ngFor=\"let subItem of item.children\" (click)=\"selectItem(subItem, item)\" (keyup.enter)=\"selectItem(subItem, item)\">\n                  <a class=\"dropdown-item\" tabindex=\"0\" [class.selected]=\"subItem.selected\">\n                      <span class=\"dropdown-item-title\">{{ subItem.title }}</span>\n                  </a>\n              </li>\n          </ul>\n      </div>\n    `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'item': [{ type: Input },],\n'onSelect': [{ type: Output },],\n};\n}\n\nfunction PageHeaderNavigationDropdownItemComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nPageHeaderNavigationDropdownItemComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nPageHeaderNavigationDropdownItemComponent.ctorParameters;\n/** @type {?} */\nPageHeaderNavigationDropdownItemComponent.propDecorators;\n/** @type {?} */\nPageHeaderNavigationDropdownItemComponent.prototype.item;\n/** @type {?} */\nPageHeaderNavigationDropdownItemComponent.prototype.onSelect;\n/** @type {?} */\nPageHeaderNavigationDropdownItemComponent.prototype.dropdownOpen;\n/** @type {?} */\nPageHeaderNavigationDropdownItemComponent.prototype._dropdownEvents;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Input, ViewChild, ViewChildren, QueryList, OnInit, Output, EventEmitter, ElementRef } from '@angular/core';\nimport { BsDropdownDirective } from 'ngx-bootstrap/dropdown';\nimport { PageHeaderNavigationDropdownItemComponent } from '../navigation-dropdown-item/navigation-dropdown-item.component';\nimport { PageHeaderNavigationItem, PageHeaderNavigationDropdownItem } from '../navigation.component';\nexport class PageHeaderNavigationItemComponent implements OnInit {\n\n     menu: BsDropdownDirective;\n     dropdownComponents: QueryList<PageHeaderNavigationDropdownItemComponent>;\n\n     item: PageHeaderNavigationItem;\n     onSelect: EventEmitter<PageHeaderNavigationDropdownItem> = new EventEmitter<PageHeaderNavigationDropdownItem>();\n/**\n * @param {?} elementRef\n */\nconstructor(public elementRef: ElementRef) {}\n/**\n * @return {?}\n */\nngOnInit() {\n        this.menu.onHidden.subscribe(() => this.dropdownComponents.forEach(dropdown => dropdown.close()));\n    }\n/**\n * @return {?}\n */\nselectItem() {\n\n        // if the item has children then do nothing at this stage \n        if (this.item.children) {\n            return;\n        }\n\n        // otherwise select the current item\n        this.onItemSelect(this.item);\n    }\n/**\n * @param {?} item\n * @return {?}\n */\nonItemSelect(item: PageHeaderNavigationItem | PageHeaderNavigationDropdownItem) {\n        this.onSelect.emit(item);\n\n        // select the current item\n        this.item.selected = true;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-page-header-horizontal-navigation-item',\n    template: `\n      <div class=\"horizontal-navigation-button\" dropdown dropdownToggle placement=\"bottom left\" [isDisabled]=\"!item?.children\" tabindex=\"0\" container=\"body\"\n          #menu=\"bs-dropdown\" (keyup.enter)=\"menu.toggle()\" [class.selected]=\"item?.selected\" (click)=\"selectItem()\">\n\n          <span class=\"hpe-icon navigation-item-icon\" *ngIf=\"item.icon\" [ngClass]=\"item?.icon\"></span>\n          <span class=\"navigation-item-label\">{{ item?.title }}</span>\n          <span class=\"hpe-icon hpe-down\" *ngIf=\"item?.children\"></span>\n\n          <div *dropdownMenu class=\"dropdown-menu horizontal-navigation-dropdown-menu\" role=\"menu\">\n              <ux-page-header-horizontal-navigation-dropdown-item *ngFor=\"let item of item?.children\" [item]=\"item\" (onSelect)=\"onItemSelect($event)\"></ux-page-header-horizontal-navigation-dropdown-item>\n          </div>\n\n      </div>\n    `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'menu': [{ type: ViewChild, args: ['menu', ] },],\n'dropdownComponents': [{ type: ViewChildren, args: [PageHeaderNavigationDropdownItemComponent, ] },],\n'item': [{ type: Input },],\n'onSelect': [{ type: Output },],\n};\n}\n\nfunction PageHeaderNavigationItemComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nPageHeaderNavigationItemComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nPageHeaderNavigationItemComponent.ctorParameters;\n/** @type {?} */\nPageHeaderNavigationItemComponent.propDecorators;\n/** @type {?} */\nPageHeaderNavigationItemComponent.prototype.menu;\n/** @type {?} */\nPageHeaderNavigationItemComponent.prototype.dropdownComponents;\n/** @type {?} */\nPageHeaderNavigationItemComponent.prototype.item;\n/** @type {?} */\nPageHeaderNavigationItemComponent.prototype.onSelect;\n/** @type {?} */\nPageHeaderNavigationItemComponent.prototype.elementRef;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Input, ViewChildren, QueryList, ElementRef, Renderer2, AfterViewInit } from '@angular/core';\nimport { PageHeaderNavigationItemComponent } from './navigation-item/navigation-item.component';\nimport { ResizeService } from '../../../directives/resize/index';\nexport class PageHeaderNavigationComponent implements AfterViewInit {\n    \n     menuItems: QueryList<PageHeaderNavigationItemComponent>;\n     \n     items: PageHeaderNavigationItem[] = [];\n\n    indicatorVisible: boolean = false;\n    indicatorX: number = 0;\n    indicatorWidth: number = 0;\n/**\n * @param {?} elementRef\n * @param {?} resizeService\n * @param {?} renderer\n */\nconstructor(elementRef: ElementRef, resizeService: ResizeService, renderer: Renderer2) {\n        resizeService.addResizeListener(elementRef.nativeElement, renderer).subscribe(this.updateSelectedIndicator.bind(this));\n    }\n/**\n * @return {?}\n */\nngAfterViewInit(): void {\n        this.updateSelectedIndicator();\n    }\n/**\n * @param {?} item\n * @return {?}\n */\nonSelect(item: PageHeaderNavigationItem): void {\n        \n        if (item.select) {\n            item.select.call(item, item);\n        }\n\n        // deselect all items in all menus\n        this.deselectAll();\n\n        // update the selected indicator\n        this.updateSelectedIndicator();\n    }\n/**\n * @return {?}\n */\ndeselectAll(): void {\n        this.items.forEach(item => this.deselect(item));\n    }\n/**\n * @param {?} navItem\n * @return {?}\n */\ndeselect(navItem: PageHeaderNavigationItem | PageHeaderNavigationDropdownItem): void {\n        \n        // deselect the current item\n        navItem.selected = false;\n\n        // iterate any children and deselect them\n        if (navItem.children) {\n            navItem.children.forEach(item => this.deselect(item));\n        }\n\n        // update the selected indicator\n        this.updateSelectedIndicator();\n    }\n/**\n * @return {?}\n */\nupdateSelectedIndicator(): void {\n\n        setTimeout(() => {\n\n            // find the selected item\n            let /** @type {?} */ selectedItem = this.menuItems.find(item => item.item.selected);\n\n            // determine whether or not to show the indicator\n            this.indicatorVisible = !!selectedItem;\n\n            // set the width of the indicator to match the width of the navigation item\n            if (selectedItem) {\n                let /** @type {?} */ styles = getComputedStyle(selectedItem.elementRef.nativeElement);\n\n                this.indicatorX = selectedItem.elementRef.nativeElement.offsetLeft;\n                this.indicatorWidth = parseInt(styles.getPropertyValue('width'));\n            }\n        });\n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-page-header-horizontal-navigation',\n    template: `\n      <ux-page-header-horizontal-navigation-item *ngFor=\"let item of items\" [item]=\"item\" (onSelect)=\"onSelect($event)\"></ux-page-header-horizontal-navigation-item>\n      <div class=\"selected-indicator\" [style.opacity]=\"indicatorVisible ? 1 : 0\" [style.margin-left.px]=\"indicatorX\" [style.width.px]=\"indicatorWidth\"></div>\n    `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: ResizeService, },\n{type: Renderer2, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'menuItems': [{ type: ViewChildren, args: [PageHeaderNavigationItemComponent, ] },],\n'items': [{ type: Input },],\n};\n}\n\nfunction PageHeaderNavigationComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nPageHeaderNavigationComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nPageHeaderNavigationComponent.ctorParameters;\n/** @type {?} */\nPageHeaderNavigationComponent.propDecorators;\n/** @type {?} */\nPageHeaderNavigationComponent.prototype.menuItems;\n/** @type {?} */\nPageHeaderNavigationComponent.prototype.items;\n/** @type {?} */\nPageHeaderNavigationComponent.prototype.indicatorVisible;\n/** @type {?} */\nPageHeaderNavigationComponent.prototype.indicatorX;\n/** @type {?} */\nPageHeaderNavigationComponent.prototype.indicatorWidth;\n}\n\n\nexport interface PageHeaderNavigationItem {\n    icon?: string;\n    title: string;\n    selected?: boolean;\n    select?: (item: PageHeaderNavigationItem) => void;\n    children?: PageHeaderNavigationDropdownItem[];\n}\n\nexport interface PageHeaderNavigationDropdownItem {\n    title: string;\n    selected?: boolean;    \n    select?: (item: PageHeaderNavigationDropdownItem) => void;\n    children?: PageHeaderNavigationDropdownItem[];\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\n\nimport { PageHeaderComponent } from './page-header.component';\nimport { BreadcrumbsModule } from '../breadcrumbs/index';\nimport { PageHeaderIconMenuComponent } from './icon-menu/icon-menu.component';\nimport { PageHeaderNavigationComponent } from './navigation/navigation.component';\nimport { PageHeaderNavigationItemComponent } from './navigation/navigation-item/navigation-item.component';\nimport { PageHeaderNavigationDropdownItemComponent } from './navigation/navigation-dropdown-item/navigation-dropdown-item.component';\nimport { PageHeaderCustomMenuDirective } from './custom-menu/custom-menu.directive';\nimport { ResizeModule } from '../../directives/resize/index';\nexport class PageHeaderModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        CommonModule,\n        BreadcrumbsModule,\n        ResizeModule,\n        BsDropdownModule.forRoot()\n    ],\n    exports: [ \n        PageHeaderComponent,\n        PageHeaderCustomMenuDirective \n    ],\n    declarations: [ \n        PageHeaderComponent,\n        PageHeaderIconMenuComponent,\n        PageHeaderCustomMenuDirective,\n        PageHeaderNavigationComponent,\n        PageHeaderNavigationItemComponent,\n        PageHeaderNavigationDropdownItemComponent\n    ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction PageHeaderModule_tsickle_Closure_declarations() {\n/** @type {?} */\nPageHeaderModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nPageHeaderModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { ColorValueSet, ColorClassSet } from './color.service';\nimport {\n    DOCUMENT\n} from '@angular/platform-browser';\nimport {\n    Injectable,\n    Inject\n} from '@angular/core';\nexport class ColorService {\nprivate _html: string;\nprivate _element: HTMLElement;\nprivate _colors: ThemeColors;\nprivate _colorSet: any = colorSets.keppel;\n/**\n * @param {?} document\n */\nconstructor(  document: any) {\n        if (this._colorSet.colorClassSet) {\n            this._setColors();\n        } else {\n            for (let key in this._colorSet.colorValueSet) {\n                this._colors[key] = this._getColorValueByHex(this._colorSet.colorValueSet[key]);\n            }\n        }\n    }\n/**\n * @return {?}\n */\nprivate _setColors() {\n\n        this._html = '';\n\n        for (let /** @type {?} */ key in this._colorSet.colorClassSet) {\n            this._html += '<div class=\"' + this._colorSet.colorClassSet[key] + '-color\"></div>';\n        }\n\n        this._element = document.createElement('div');\n        this._element.className = 'color-chart';\n        this._element.innerHTML = this._html;\n\n        document.body.appendChild(this._element);\n\n        this._colors = {};\n\n        for (let /** @type {?} */ key in this._colorSet.colorClassSet) {\n            this._colors[key] = this.getColorValue(this._colorSet.colorClassSet[key]);\n        }\n\n        this._element.parentNode.removeChild(this._element);\n    }\n/**\n * @param {?} color\n * @return {?}\n */\nprivate _getColorValueByHex(color: string): ThemeColor {\n        let /** @type {?} */ hex = color.replace('#', '');\n\n        let /** @type {?} */ r = parseInt(hex.substring(0, 2), 16).toString();\n        let /** @type {?} */ g = parseInt(hex.substring(2, 4), 16).toString();\n        let /** @type {?} */ b = parseInt(hex.substring(4, 6), 16).toString();\n\n        return new ThemeColor(r, g, b, '1');\n    }\n/**\n * @param {?} color\n * @return {?}\n */\nprivate getColorValue(color: ColorIdentifier): ThemeColor {\n\n        let /** @type {?} */ target = this._element.querySelector('.' + this._colorSet.colorClassSet[color] + '-color');\n\n        if (!target) {\n            throw new Error('Invalid color');\n        }\n\n        let /** @type {?} */ colorValue = window.getComputedStyle(target).backgroundColor;\n\n        let /** @type {?} */ rgba = colorValue.match(/^rgba?\\((\\d+),\\s*(\\d+),\\s*(\\d+)(?:,\\s*(\\d+(?:\\.\\d+)?))?\\)$/);\n\n        return new ThemeColor(rgba[1], rgba[2], rgba[3], rgba[4]);\n    }\n/**\n * @param {?} color\n * @return {?}\n */\ngetColor(color: ColorIdentifier): ThemeColor {\n        return this._colors[color.toLowerCase()];\n    }\n/**\n * @return {?}\n */\ngetColorSet() {\n        return this._colorSet;\n    }\n/**\n * @param {?} colorSet\n * @return {?}\n */\nsetColorSet(colorSet: ColorSet) {\n        this._colorSet = colorSet;\n        this._colors = {};\n\n        if (this._colorSet.colorClassSet) {\n            this._setColors();\n        } else {\n            for (let /** @type {?} */ key in this._colorSet.colorValueSet) {\n                this._colors[key] = this._getColorValueByHex(this._colorSet.colorValueSet[key]);\n            }\n        }\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nresolve(value: string): string {\n        if (!value) {\n            return;\n        }\n        \n        value = value.replace(/\\s+/g, '-').toLowerCase();\n        \n        for (let /** @type {?} */ color in this._colors) {\n            if (value === color.toLowerCase()) {\n                return this.getColor(value).toRgba();\n            }\n        }\n\n        return value;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nresolveColorName(value: string): string {\n        return value.replace(/\\s+/g, '-').toLowerCase();\n    }\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: undefined, decorators: [{ type: Inject, args: [DOCUMENT, ] }, ]},\n];\n}\n\nfunction ColorService_tsickle_Closure_declarations() {\n/**\n * @nocollapse\n * @type {?}\n */\nColorService.ctorParameters;\n/** @type {?} */\nColorService.prototype._html;\n/** @type {?} */\nColorService.prototype._element;\n/** @type {?} */\nColorService.prototype._colors;\n/** @type {?} */\nColorService.prototype._colorSet;\n}\n\nexport class ThemeColor {\nprivate _r: string;\nprivate _g: string;\nprivate _b: string;\nprivate _a: string;\n/**\n * @param {?} r\n * @param {?} g\n * @param {?} b\n * @param {?} a\n */\nconstructor(r: string, g: string, b: string, a: string) {\n        this._r = r;\n        this._g = g;\n        this._b = b;\n        this._a = a === undefined ? '1' : a;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nstatic parse(value: string): ThemeColor {\n        let /** @type {?} */ r, /** @type {?} */ g, /** @type {?} */ b, /** @type {?} */ a = '1';\n\n        var /** @type {?} */ rgbaPattern = /^rgba?\\((\\d+),\\s*(\\d+),\\s*(\\d+)(?:,\\s*(\\d+(?:\\.\\d+)?))?\\)$/;\n        var /** @type {?} */ shortHexPattern = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;\n        var /** @type {?} */ longHexPattern = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/;\n\n        let /** @type {?} */ rgbaMatch = value.match(rgbaPattern);\n        let /** @type {?} */ shortHexMatch = value.match(shortHexPattern);\n        let /** @type {?} */ longHexMatch = value.match(longHexPattern);\n\n        if (rgbaMatch) {\n            r = rgbaMatch[1];\n            g = rgbaMatch[2];\n            b = rgbaMatch[3];\n            a = rgbaMatch[4] ? rgbaMatch[4] : '1';\n        } else if (longHexMatch) {\n            r = parseInt(longHexMatch[1], 16).toString();\n            g = parseInt(longHexMatch[2], 16).toString();\n            b = parseInt(longHexMatch[3], 16).toString();\n        } else if (shortHexMatch) {\n            r = parseInt(shortHexMatch[1] + shortHexMatch[1], 16).toString();\n            g = parseInt(shortHexMatch[2] + shortHexMatch[2], 16).toString();\n            b = parseInt(shortHexMatch[3] + shortHexMatch[3], 16).toString();\n        } else {\n            throw new Error(`Cannot parse color - ${value} is not a valid color.`);\n        }\n        return new ThemeColor(r, g, b, a);\n    }\n/**\n * @return {?}\n */\ntoHex() {\n        var /** @type {?} */ red = parseInt(this._r).toString(16);\n        var /** @type {?} */ green = parseInt(this._g).toString(16);\n        var /** @type {?} */ blue = parseInt(this._b).toString(16);\n\n        if (red.length < 2) {\n            red = '0' + red;\n        }\n        if (green.length < 2) {\n            green = '0' + green;\n        }\n        if (blue.length < 2) {\n            blue = '0' + blue;\n        }\n\n        return '#' + red + green + blue;\n    }\n/**\n * @return {?}\n */\ntoRgb() {\n        return 'rgb(' + this._r + ', ' + this._g + ', ' + this._b + ')';\n    }\n/**\n * @return {?}\n */\ntoRgba() {\n        return 'rgba(' + this._r + ', ' + this._g + ', ' + this._b + ', ' + this._a + ')';\n    }\n/**\n * @return {?}\n */\ngetRed() {\n        return this._r;\n    }\n/**\n * @return {?}\n */\ngetGreen() {\n        return this._g;\n    }\n/**\n * @return {?}\n */\ngetBlue() {\n        return this._b;\n    }\n/**\n * @return {?}\n */\ngetAlpha() {\n        return this._a;\n    }\n/**\n * @param {?} red\n * @return {?}\n */\nsetRed(red: string) {\n        this._r = red;\n        return this;\n    }\n/**\n * @param {?} green\n * @return {?}\n */\nsetGreen(green: string) {\n        this._g = green;\n        return this;\n    }\n/**\n * @param {?} blue\n * @return {?}\n */\nsetBlue(blue: string) {\n        this._b = blue;\n        return this;\n    }\n/**\n * @param {?} alpha\n * @return {?}\n */\nsetAlpha(alpha: string | number) {\n        this._a = alpha.toString();\n        return this;\n    }\n}\n\nfunction ThemeColor_tsickle_Closure_declarations() {\n/** @type {?} */\nThemeColor.prototype._r;\n/** @type {?} */\nThemeColor.prototype._g;\n/** @type {?} */\nThemeColor.prototype._b;\n/** @type {?} */\nThemeColor.prototype._a;\n}\n\n\nexport const /** @type {?} */ colorSets = {\n    keppel: {\n        colorClassSet: {\n            'primary': 'primary',\n            'accent': 'accent',\n            'secondary': 'secondary',\n            'alternate1': 'alternate1',\n            'alternate2': 'alternate2',\n            'alternate3': 'alternate3',\n            'vibrant1': 'vibrant1',\n            'vibrant2': 'vibrant2',\n            'grey1': 'grey1',\n            'grey2': 'grey2',\n            'grey3': 'grey3',\n            'grey4': 'grey4',\n            'grey5': 'grey5',\n            'grey6': 'grey6',\n            'grey7': 'grey7',\n            'grey8': 'grey8',\n            'chart1': 'chart1',\n            'chart2': 'chart2',\n            'chart3': 'chart3',\n            'chart4': 'chart4',\n            'chart5': 'chart5',\n            'chart6': 'chart6',\n            'ok': 'ok',\n            'warning': 'warning',\n            'critical': 'critical',\n            'partition1': 'partition1',\n            'partition9': 'partition9',\n            'partition10': 'partition10',\n            'partition11': 'partition11',\n            'partition12': 'partition12',\n            'partition13': 'partition13',\n            'partition14': 'partition14',\n            'social-chart-node': 'social-chart-node',\n            'social-chart-edge': 'social-chart-edge'\n        }\n    },\n    microFocus: {\n        'colorValueSet': {\n            'cerulean': '#1668c1',\n            'aqua': '#29ceff',\n            'aquamarine': '#2fd6c3',\n            'fuchsia': '#c6179d',\n            'indigo': '#7425ad',\n            'dark-blue': '#231ca5',\n            'white': '#ffffff',\n            'slightly-gray': '#f5f7f8',\n            'bright-gray': '#f1f2f3',\n            'gray': '#dcdedf',\n            'silver': '#bdbec0',\n            'dim-gray': '#656668',\n            'dark-gray': '#323435',\n            'black': '#000000',\n            'crimson-negative': '#e5004c',\n            'apricot': '#f48b34',\n            'yellow': '#fcdb1f',\n            'green-positive': '#1aac60',\n            'ultramarine': '#3939c6',\n            'skyblue': '#00abf3',\n            'pale-aqua': '#43e4ff',\n            'pale-green': '#1ffbba',\n            'lime': '#75da4d',\n            'orange': '#ffce00',\n            'magenta': '#eb23c2',\n            'pale-purple': '#ba47e2',\n            'dark-ultramarine': '#271782',\n            'steelblue': '#014272',\n            'arctic-blue': '#0b8eac',\n            'emerald': '#00a989',\n            'olive': '#5bba36',\n            'goldenrod': '#ffb000',\n            'purple': '#9b1e83',\n            'pale-eggplant': '#5216ac',\n            'red': '#ff454f',\n            'pale-amber': '#ffb24d',\n            'pale-lemon': '#fde159',\n            'pale-emerald': '#33c180',\n            'plum': '#b21646',\n            'copper': '#e57828',\n            'amber': '#ffc002',\n            'leaf-green': '#118c4f',\n            'primary': '#0073e7',\n            'accent': '#7425ad',\n            'secondary': '#ffffff',\n            'alternate1': '#29ceff',\n            'alternate2': '#2fd6c3',\n            'alternate3': '#c6179d',\n            'vibrant1': '#43e4ff',\n            'vibrant2': '#ffce00',\n            'grey1': '#000000',\n            'grey2': '#323435',\n            'grey3': '#656668',\n            'grey4': '#bdbec0',\n            'grey5': '#dcdedf',\n            'grey6': '#f1f2f3',\n            'grey7': '#f5f7f8',\n            'grey8': '#ffffff',\n            'chart1': '#3939c6',\n            'chart2': '#00abf3',\n            'chart3': '#75da4d',\n            'chart4': '#ffce00',\n            'chart5': '#eb23c2',\n            'chart6': '#ba47e2',\n            'ok': '#1aac60',\n            'warning': '#f48b34',\n            'critical': 'e5004c',\n            'partition1': '#7425ad',\n            'partition9': '#5216ac',\n            'partition10': '#5bba36',\n            'partition11': '#014272',\n            'partition12': '#ffb000',\n            'partition13': '#bdbec0',\n            'partition14': '#271782',\n            'social-chart-node': '#ff00ff',\n            'social-chart-edge': '#ff00ff'\n        }\n    }\n};\n\nexport interface ThemeColors {\n    [name: string]: ThemeColor;\n}\n\nexport interface ColorSet {\n    colorClassSet?: ColorClassSet;\n    colorValueSet?: ColorValueSet;\n}\n\nexport interface ColorClassSet {\n    [name: string]: string;\n}\n\nexport interface ColorValueSet {\n    [name: string]: string;\n}\n\nexport type ColorIdentifier = string;\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\n\nimport { ColorService } from './color.service';\nexport class ColorServiceModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [],\n    exports: [],\n    declarations: [],\n    providers: [ColorService],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ColorServiceModule_tsickle_Closure_declarations() {\n/** @type {?} */\nColorServiceModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nColorServiceModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Input, OnChanges, SimpleChanges } from '@angular/core';\nimport { ColorService } from '../../services/color/index';\nexport class ProgressBarComponent implements OnChanges {\n\n     value: number = 0;\n     max: number = 100;\n     trackColor: string = this.colorService.getColor('grey7').toHex();\n     barColor: string = this.colorService.getColor('accent').toHex();\n\n    percentage: number = 0;\n/**\n * @param {?} colorService\n */\nconstructor(private colorService: ColorService) { }\n/**\n * @param {?} changes\n * @return {?}\n */\nngOnChanges(changes: SimpleChanges): void {\n        this.percentage = (this.value / this.max) * 100;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-progress-bar',\n    template: `\n      <div class=\"progressbar-track\" [style.width.%]=\"percentage\" [style.backgroundColor]=\"barColor\">\n          <ng-content></ng-content>\n      </div>\n    `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ColorService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'value': [{ type: Input },],\n'max': [{ type: Input },],\n'trackColor': [{ type: Input },],\n'barColor': [{ type: Input },],\n};\n}\n\nfunction ProgressBarComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nProgressBarComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nProgressBarComponent.ctorParameters;\n/** @type {?} */\nProgressBarComponent.propDecorators;\n/** @type {?} */\nProgressBarComponent.prototype.value;\n/** @type {?} */\nProgressBarComponent.prototype.max;\n/** @type {?} */\nProgressBarComponent.prototype.trackColor;\n/** @type {?} */\nProgressBarComponent.prototype.barColor;\n/** @type {?} */\nProgressBarComponent.prototype.percentage;\n/** @type {?} */\nProgressBarComponent.prototype.colorService;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\n\nimport { ProgressBarComponent } from './progress-bar.component';\nimport { ColorServiceModule } from '../../services/color/index';\nexport class ProgressBarModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [ColorServiceModule],\n    exports: [ProgressBarComponent],\n    declarations: [ProgressBarComponent]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ProgressBarModule_tsickle_Closure_declarations() {\n/** @type {?} */\nProgressBarModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nProgressBarModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Input, forwardRef, HostListener, Output, EventEmitter } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\n\nexport const /** @type {?} */ RADIOBUTTON_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => RadioButtonComponent),\n    multi: true\n};\nexport class RadioButtonComponent implements ControlValueAccessor {\n\n     id: string;\n     simplified: boolean = false;\n     disabled: boolean = false;\n     name: string = '';\n     clickable: boolean = true;\n     option: any;\n     valueChange: EventEmitter<any> = new EventEmitter<any>();\n/**\n * @return {?}\n */\nget value() {\n        return this._value;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset value(value: boolean) {\n        this._value = value;\n\n        // invoke change event\n        this.valueChange.emit(this._value);\n\n        // call callback\n        this.onChangeCallback(this._value);\n    }\nprivate _value: any = false;\n\n    onTouchedCallback: () => void = () => { };\n    onChangeCallback: (_: any) => void = () => { };\n/**\n * @return {?}\n */\ncheckItem() {\n\n        if (this.disabled === true || this.clickable === false) {\n            return;\n        }\n\n        // toggle the checked state\n        this.value = this.option;\n\n        // call callback\n        this.onChangeCallback(this.value);\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nkeyDown(event: KeyboardEvent) {\n\n        // then toggle the checkbox\n        this.checkItem();\n\n        // prevent default browser behavior\n        event.stopPropagation();\n        event.preventDefault();\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nwriteValue(value: boolean) {\n        if (value !== this._value) {\n            this._value = value;\n        }\n    }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnChange(fn: any) {\n        this.onChangeCallback = fn;\n    }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnTouched(fn: any) {\n        this.onTouchedCallback = fn;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-radio-button',\n    template: `\n      <div class=\"ux-radio-button\" tabindex=\"0\"\n          [class.ux-checked]=\"value === option\"\n          [class.ux-simplified]=\"simplified === true\"\n          [class.ux-disabled]=\"disabled === true\"\n          (keydown.space)=\"keyDown($event)\">\n\n          <input type=\"radio\" role=\"radio\" tabindex=\"-1\"\n              [name]=\"name\" \n              [checked]=\"value === option\" \n              [disabled]=\"disabled\"\n              [value]=\"option\"\n              [id]=\"id\" />\n        \n      </div>\n\n      <div class=\"ux-radio-button-content\">\n          <ng-content></ng-content>\n      </div>\n    `,\n    providers: [RADIOBUTTON_VALUE_ACCESSOR]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'id': [{ type: Input },],\n'simplified': [{ type: Input },],\n'disabled': [{ type: Input },],\n'name': [{ type: Input },],\n'clickable': [{ type: Input },],\n'option': [{ type: Input },],\n'valueChange': [{ type: Output },],\n'value': [{ type: Input },],\n'checkItem': [{ type: HostListener, args: ['click', ] },],\n};\n}\n\nfunction RadioButtonComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nRadioButtonComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nRadioButtonComponent.ctorParameters;\n/** @type {?} */\nRadioButtonComponent.propDecorators;\n/** @type {?} */\nRadioButtonComponent.prototype.id;\n/** @type {?} */\nRadioButtonComponent.prototype.simplified;\n/** @type {?} */\nRadioButtonComponent.prototype.disabled;\n/** @type {?} */\nRadioButtonComponent.prototype.name;\n/** @type {?} */\nRadioButtonComponent.prototype.clickable;\n/** @type {?} */\nRadioButtonComponent.prototype.option;\n/** @type {?} */\nRadioButtonComponent.prototype.valueChange;\n/** @type {?} */\nRadioButtonComponent.prototype._value;\n/** @type {?} */\nRadioButtonComponent.prototype.onTouchedCallback;\n/** @type {?} */\nRadioButtonComponent.prototype.onChangeCallback;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport {FormsModule} from '@angular/forms';\n\nimport { RadioButtonComponent } from './radiobutton.component';\nexport class RadioButtonModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [FormsModule],\n    exports: [RadioButtonComponent],\n    declarations: [RadioButtonComponent]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction RadioButtonModule_tsickle_Closure_declarations() {\n/** @type {?} */\nRadioButtonModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nRadioButtonModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs/Subject';\nimport { SearchBuilderQuery } from './interfaces/query.interface';\nimport { SearchBuilderGroupQuery } from './interfaces/group-query.interface';\nimport { SearchBuilderComponentDefinition } from './interfaces/component-definition.interface';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nexport class SearchBuilderService {\n\n  query: SearchBuilderQuery = {};\n  queryChange: Subject<SearchBuilderQuery> = new Subject<SearchBuilderQuery>();\n  validationChange: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(true);\nprivate _componentId: number = 0;\nprivate _components: SearchBuilderComponentDefinition[] = [];\nprivate _validation: { [key: number]: boolean } = {};\n/**\n * Add a component to the internal list of components\n * @param {?} component\n * @return {?}\n */\nregisterComponent(component: SearchBuilderComponentDefinition): void {\n\n    // ensure there are no components with a matching name\n    if (this._components.find(cmp => cmp.name === component.name)) {\n      throw new Error(`Search builder components must have a unique name. The name ${component.name} has already been used.`);\n    }\n\n    // if unique then add the component to the list\n    this._components.push(component);\n  }\n/**\n * Bulk registration of components\n * (Just a helper method)\n * @param {?} components\n * @return {?}\n */\nregisterComponents(components: SearchBuilderComponentDefinition[]): void {\n    components.forEach(component => this.registerComponent(component));\n  }\n/**\n * Get a registered component class\n * @param {?} name\n * @return {?}\n */\ngetComponent(name: string): any {\n\n    // find the component\n    const /** @type {?} */ component = this._components.find(cmp => cmp.name === name);\n\n    // if there is no match throw an exception\n    if (!component) {\n      throw new Error(`No search build component with the name ${name} exists`);\n    }\n\n    // ensure config is defined - at least to an empty object\n    component.config = component.config || {};\n\n    return component;\n  }\n/**\n * Update the internal search query state\n * note that the query will be immutable\n * @param {?} query\n * @return {?}\n */\nsetQuery(query: SearchBuilderQuery): void {\n    this.query = Object.assign({}, query);\n  }\n/**\n * Return the current query state\n * @return {?}\n */\ngetQuery(): SearchBuilderQuery {\n    return this.query;\n  }\n/**\n * Trigger the observable to indicate the query has been updated\n * @return {?}\n */\nqueryHasChanged(): void {\n    this.queryChange.next(this.query);\n  }\n/**\n * Store the validation state of the query\n * @param {?} id\n * @param {?} valid\n * @return {?}\n */\nsetValid(id: number, valid: boolean): void {\n\n    // store the state for this specific component\n    this._validation[id] = valid;\n\n    // evaluate the entire validation state\n    this.validationChange.next(!Object.keys(this._validation).some(key => !this._validation[key]));\n  }\n/**\n * Generate a unique id for each component\n * @return {?}\n */\ngenerateComponentId(): number {\n    return this._componentId++;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction SearchBuilderService_tsickle_Closure_declarations() {\n/** @type {?} */\nSearchBuilderService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSearchBuilderService.ctorParameters;\n/** @type {?} */\nSearchBuilderService.prototype.query;\n/** @type {?} */\nSearchBuilderService.prototype.queryChange;\n/** @type {?} */\nSearchBuilderService.prototype.validationChange;\n/** @type {?} */\nSearchBuilderService.prototype._componentId;\n/** @type {?} */\nSearchBuilderService.prototype._components;\n/** @type {?} */\nSearchBuilderService.prototype._validation;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable } from '@angular/core';\nimport { SearchBuilderService } from '../search-builder.service';\nimport { SearchBuilderGroupQuery } from '../interfaces/group-query.interface';\nimport { SearchBuilderQuery } from '../interfaces/query.interface';\nexport class SearchBuilderGroupService {\nprivate _id: string;\n/**\n * @param {?} _searchBuilderService\n */\nconstructor(private _searchBuilderService: SearchBuilderService) { }\n/**\n * Initialise the group by defining an id\n * @param {?} id\n * @return {?}\n */\ninit(id: string): void {\n    // store the name of the group\n    this._id = id;\n\n    // create the entry in the query object if it doesn't exist\n    if (!this._searchBuilderService.query[this._id]) {\n\n      // create the section\n      this._searchBuilderService.query[this._id] = [];\n\n      // emit the changes after the initial setup\n      setTimeout(() => this._searchBuilderService.queryHasChanged());\n    }\n  }\n/**\n * Remove a field from the search builder query\n * @param {?} field\n * @return {?}\n */\nremove(field: SearchBuilderGroupQuery): void {\n    // get the query for this group\n    const /** @type {?} */ query = this.getQuery();\n\n    // remove the field from the array\n    query.splice(query.indexOf(field), 1);\n  }\n/**\n * Get the query for this specific search group\n * @return {?}\n */\ngetQuery(): SearchBuilderGroupQuery[] {\n    return this._searchBuilderService.query[this._id] ? this._searchBuilderService.query[this._id] : [];\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: SearchBuilderService, },\n];\n}\n\nfunction SearchBuilderGroupService_tsickle_Closure_declarations() {\n/** @type {?} */\nSearchBuilderGroupService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSearchBuilderGroupService.ctorParameters;\n/** @type {?} */\nSearchBuilderGroupService.prototype._id;\n/** @type {?} */\nSearchBuilderGroupService.prototype._searchBuilderService;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, OnInit, Input, Output, EventEmitter, TemplateRef } from '@angular/core';\nimport { SearchBuilderGroupService } from './search-builder-group.service';\nimport { SearchBuilderService } from '../search-builder.service';\nimport { SearchBuilderGroupQuery } from '../interfaces/group-query.interface';\nexport class SearchBuilderGroupComponent implements OnInit {\n\n   id: string;\n   header: string;\n   operator: SearchBuilderGroupOperator = 'and';\n   addText: string = 'Add a field';\n   placeholder: TemplateRef<any>;\n   showPlaceholder: boolean = false;\n\n   add: EventEmitter<MouseEvent> = new EventEmitter<MouseEvent>();\n   remove: EventEmitter<SearchBuilderGroupQuery> = new EventEmitter<SearchBuilderGroupQuery>();\n/**\n * @param {?} searchBuilderGroupService\n * @param {?} _searchBuilderService\n */\nconstructor(public searchBuilderGroupService: SearchBuilderGroupService,\nprivate _searchBuilderService: SearchBuilderService) { }\n/**\n * @return {?}\n */\nngOnInit(): void {\n\n    // ensure we have a name otherwise throw an error\n    if (!this.id) {\n      throw new Error('Search builder group must have a name attribute.');\n    }\n\n    // otherwise register the group\n    this.searchBuilderGroupService.init(this.id);\n  }\n/**\n * @param {?} field\n * @return {?}\n */\nremoveField(field: SearchBuilderGroupQuery): void {\n    this.searchBuilderGroupService.remove(field);\n    this.remove.emit(field);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'ux-search-builder-group',\n  template: `\n    <h4 class=\"search-group-title\">{{ header }}</h4>\n\n    <main class=\"search-group-content\">\n\n      <section class=\"search-group-operator search-group-operator-{{ operator }}\" [class.hidden-operator]=\"searchBuilderGroupService.getQuery().length < 2\">{{ operator }}</section>\n\n      <section class=\"search-group-items\">\n\n        <div class=\"search-group-item-container\" *ngFor=\"let field of searchBuilderGroupService.getQuery()\">\n\n          <div class=\"search-group-item\">\n            <ng-container *uxSearchBuilderOutlet=\"field.type; context: field\"></ng-container>\n          </div>\n\n          <div class=\"search-group-item-remove\" (click)=\"removeField(field)\">\n            <span class=\"hpe-icon hpe-close\"></span>\n          </div>\n        </div>\n\n        <!-- Placeholder Item -->\n        <ng-container *ngIf=\"showPlaceholder\">\n\n          <!-- The Default Placeholder -->\n          <div class=\"search-group-item-container placeholder-item\" *ngIf=\"!placeholder\">\n        \n            <div class=\"search-group-item\">\n              <label class=\"form-label\">New field</label>\n              <div class=\"form-control\"></div>\n            </div>\n  \n          </div>\n\n          <!-- Allow a custom placeholder -->\n        <ng-container *ngTemplateOutlet=\"placeholder\"></ng-container>\n\n        </ng-container>\n\n      </section>\n\n      <section class=\"search-builder-group-add-field\" (click)=\"add.emit($event)\">\n\n        <button type=\"button\" class=\"btn btn-icon btn-circular button-accent\" aria-label=\"Add Field\">\n          <span class=\"hpe-icon hpe-add\" aria-hidden=\"true\"></span>\n        </button>\n\n        <span class=\"search-builder-group-add-field-label\">{{ addText }}</span>\n\n      </section>\n\n    </main>\n\n    <hr class=\"search-builder-group-divider\">\n  `,\n  providers: [SearchBuilderGroupService]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: SearchBuilderGroupService, },\n{type: SearchBuilderService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'id': [{ type: Input },],\n'header': [{ type: Input },],\n'operator': [{ type: Input },],\n'addText': [{ type: Input },],\n'placeholder': [{ type: Input },],\n'showPlaceholder': [{ type: Input },],\n'add': [{ type: Output },],\n'remove': [{ type: Output },],\n};\n}\n\nfunction SearchBuilderGroupComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nSearchBuilderGroupComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSearchBuilderGroupComponent.ctorParameters;\n/** @type {?} */\nSearchBuilderGroupComponent.propDecorators;\n/** @type {?} */\nSearchBuilderGroupComponent.prototype.id;\n/** @type {?} */\nSearchBuilderGroupComponent.prototype.header;\n/** @type {?} */\nSearchBuilderGroupComponent.prototype.operator;\n/** @type {?} */\nSearchBuilderGroupComponent.prototype.addText;\n/** @type {?} */\nSearchBuilderGroupComponent.prototype.placeholder;\n/** @type {?} */\nSearchBuilderGroupComponent.prototype.showPlaceholder;\n/** @type {?} */\nSearchBuilderGroupComponent.prototype.add;\n/** @type {?} */\nSearchBuilderGroupComponent.prototype.remove;\n/** @type {?} */\nSearchBuilderGroupComponent.prototype.searchBuilderGroupService;\n/** @type {?} */\nSearchBuilderGroupComponent.prototype._searchBuilderService;\n}\n\n\nexport type SearchBuilderGroupOperator = 'and' | 'or' | 'not';\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, OnInit, Type, Input, ComponentRef, ComponentFactoryResolver, ViewContainerRef } from '@angular/core';\nimport { SearchBuilderService } from '../search-builder.service';\nexport class SearchBuilderOutletDirective implements OnInit {\n\n     uxSearchBuilderOutlet: string;\n     uxSearchBuilderOutletContext: any;\nprivate _componentRef: ComponentRef<any>;\n/**\n * @param {?} _viewContainerRef\n * @param {?} _componentFactoryResolver\n * @param {?} _searchBuilderService\n */\nconstructor(\nprivate _viewContainerRef: ViewContainerRef,\nprivate _componentFactoryResolver: ComponentFactoryResolver,\nprivate _searchBuilderService: SearchBuilderService\n    ) { }\n/**\n * @return {?}\n */\nngOnInit(): void {\n\n        // get the class from the type\n        const /** @type {?} */ componentDefinition = this._searchBuilderService.getComponent(this.uxSearchBuilderOutlet);\n\n        // create the component factory\n        const /** @type {?} */ componentFactory = this._componentFactoryResolver.resolveComponentFactory(componentDefinition.component);\n\n        // create the component instance\n        this._componentRef = this._viewContainerRef.createComponent(componentFactory);\n\n        // combine the predefined config with any dynmaic config\n        const /** @type {?} */ config = Object.assign({}, componentDefinition.config, this.uxSearchBuilderOutletContext.config || {});\n\n        // set the context and config property on the component instance\n        this._componentRef.instance.context = this.uxSearchBuilderOutletContext;\n        this._componentRef.instance.config = config;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: '[uxSearchBuilderOutlet]'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ViewContainerRef, },\n{type: ComponentFactoryResolver, },\n{type: SearchBuilderService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'uxSearchBuilderOutlet': [{ type: Input },],\n'uxSearchBuilderOutletContext': [{ type: Input },],\n};\n}\n\nfunction SearchBuilderOutletDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nSearchBuilderOutletDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSearchBuilderOutletDirective.ctorParameters;\n/** @type {?} */\nSearchBuilderOutletDirective.propDecorators;\n/** @type {?} */\nSearchBuilderOutletDirective.prototype.uxSearchBuilderOutlet;\n/** @type {?} */\nSearchBuilderOutletDirective.prototype.uxSearchBuilderOutletContext;\n/** @type {?} */\nSearchBuilderOutletDirective.prototype._componentRef;\n/** @type {?} */\nSearchBuilderOutletDirective.prototype._viewContainerRef;\n/** @type {?} */\nSearchBuilderOutletDirective.prototype._componentFactoryResolver;\n/** @type {?} */\nSearchBuilderOutletDirective.prototype._searchBuilderService;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, OnDestroy } from '@angular/core';\nimport { SearchBuilderService } from '../search-builder.service';\nimport { SearchBuilderGroupQuery } from '../interfaces/group-query.interface';\nimport { SearchBuilderGroupService } from '../search-builder-group/search-builder-group.service';\nimport { SearchBuilderComponentContext } from '../interfaces/component-context.interface';\nexport class BaseSearchComponent implements OnDestroy {\n\n    type: string;\n    config: any;\n    context: SearchBuilderComponentContext;\nprivate _id: number = this._searchBuilderService.generateComponentId();\nprivate _valid: boolean = true;\n/**\n * Get the current value of the component\n * @return {?}\n */\nget value() {\n        return this.context.value;\n    }\n/**\n * Set the current value of the component\n * @param {?} value\n * @return {?}\n */\nset value(value: any) {\n        this.context.value = value;\n        this._searchBuilderService.queryHasChanged();\n\n        // if value has been set perform validation\n        this.validate();\n    }\n/**\n * @return {?}\n */\nget valid(): boolean {\n        return this._valid;\n    }\n/**\n * @param {?} valid\n * @return {?}\n */\nset valid(valid: boolean) {\n        this._valid = valid;\n        this._searchBuilderService.setValid(this._id, valid);\n    }\n/**\n * @param {?} _searchBuilderService\n * @param {?} _searchBuilderGroupService\n */\nconstructor(\nprivate _searchBuilderService: SearchBuilderService,\nprivate _searchBuilderGroupService: SearchBuilderGroupService\n    ) { }\n/**\n * Make sure we clean up after ourselves\n * @return {?}\n */\nngOnDestroy(): void {\n        this.valid = true;\n    }\n/**\n * Perform any required validation on the value\n * @return {?}\n */\nvalidate(): void {\n        // if a custom validation function has been provided then use it\n        this.valid = this.config.validation ? this.config.validation(this, this.value) : true;\n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-base-search',\n    template: ''\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: SearchBuilderService, },\n{type: SearchBuilderGroupService, },\n];\n}\n\nfunction BaseSearchComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nBaseSearchComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nBaseSearchComponent.ctorParameters;\n/** @type {?} */\nBaseSearchComponent.prototype.type;\n/** @type {?} */\nBaseSearchComponent.prototype.config;\n/** @type {?} */\nBaseSearchComponent.prototype.context;\n/** @type {?} */\nBaseSearchComponent.prototype._id;\n/** @type {?} */\nBaseSearchComponent.prototype._valid;\n/** @type {?} */\nBaseSearchComponent.prototype._searchBuilderService;\n/** @type {?} */\nBaseSearchComponent.prototype._searchBuilderGroupService;\n}\n\n\nexport interface BaseSearchComponentConfig {\n    label?: string;\n    placeholder?: string;\n    validation?: (value: any) => boolean;\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, OnInit } from '@angular/core';\nimport { BaseSearchComponent, BaseSearchComponentConfig } from '../base-search.component';\nexport class SearchTextComponent extends BaseSearchComponent {\n\n  type: string = 'text';\n/**\n * @return {?}\n */\nget label(): string {\n    return this.config.label;\n  }\n/**\n * @return {?}\n */\nget placeholder(): string {\n    return this.config.placeholder || 'Enter text';\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'ux-search-text',\n  template: `\n    <label class=\"form-label\" *ngIf=\"label\">{{ label }}</label>\n    <input [placeholder]=\"placeholder\" [(ngModel)]=\"value\" class=\"form-control\">\n  `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction SearchTextComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nSearchTextComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSearchTextComponent.ctorParameters;\n/** @type {?} */\nSearchTextComponent.prototype.type;\n}\n\n\nexport interface SearchTextConfig extends BaseSearchComponentConfig { }\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, OnInit } from '@angular/core';\nimport { BaseSearchComponent, BaseSearchComponentConfig } from '../base-search.component';\nimport { DateTimePickerTimezone } from '../../../date-time-picker/index';\nexport class SearchDateComponent extends BaseSearchComponent implements OnInit {\n\n  type: string = 'date';\n/**\n * @return {?}\n */\nget label(): string {\n    return this.config.label;\n  }\n/**\n * @return {?}\n */\nget placeholder(): string {\n    return this.config.placeholder || 'Enter date';\n  }\n/**\n * @return {?}\n */\nngOnInit(): void {\n\n    // by default set to the current date if not specified\n    if (!this.value) {\n      this.value = new Date();\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'ux-search-date',\n  template: `\n    <label class=\"form-label\" *ngIf=\"label\">{{ label }}</label>\n\n    <div class=\"input-group date m-nil\">\n        <span class=\"input-group-addon\" tabindex=\"1\" (click)=\"popover.show()\">\n            <i class=\"hpe-icon hpe-calendar\" aria-hidden=\"true\"></i>\n        </span>\n        <input type=\"text\" #popover=\"bs-popover\" [ngModel]=\"value | date:'dd MMMM yyyy'\" [popover]=\"popoverTemplate\"\n            placement=\"bottom\" [outsideClick]=\"true\" containerClass=\"date-time-picker-popover\" class=\"form-control\" aria-label=\"Selected date\" [placeholder]=\"placeholder\">\n    </div>\n\n    <ng-template #popoverTemplate>\n        <ux-date-time-picker [(date)]=\"value\" [showTime]=\"false\"></ux-date-time-picker>\n    </ng-template>\n  `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction SearchDateComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nSearchDateComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSearchDateComponent.ctorParameters;\n/** @type {?} */\nSearchDateComponent.prototype.type;\n}\n\n\nexport interface SearchDateConfig extends BaseSearchComponentConfig { }\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component } from '@angular/core';\nimport { BaseSearchComponent } from '../base-search.component';\nimport { DateTimePickerTimezone } from '../../../date-time-picker/index';\nexport class SearchDateRangeComponent extends BaseSearchComponent {\n\n    type: string = 'date-range';\n/**\n * @return {?}\n */\nget label(): string {\n        return this.config.label;\n    }\n/**\n * @return {?}\n */\nget from() {\n\n        // if value does not exist the set it\n        if (!this.value || !this.value.from) {\n            this.from = new Date();\n        }\n\n        // ensure that the from value is a date object\n        if (this.value.from instanceof Date === false) {\n            this.value.from = new Date(this.value.from);\n        }\n\n        return this.value.from;\n    }\n/**\n * @param {?} fromValue\n * @return {?}\n */\nset from(fromValue: any) {\n\n        // create new object based on the current value\n        const /** @type {?} */ value = Object.assign({}, this.value);\n\n        // ensure that the from value is a date\n        if (fromValue instanceof Date === false) {\n            fromValue = new Date(fromValue);\n        }\n\n        // set the latest value\n        value.from = fromValue;\n\n        // update the value object while ensuring immutability\n        this.value = value;\n    }\n/**\n * @return {?}\n */\nget to() {\n\n        // if value does not exist the set it\n        if (!this.value || !this.value.to) {\n            this.to = new Date();\n        }\n\n        // ensure that the to value is a date object\n        if (this.value.to instanceof Date === false) {\n            this.value.to = new Date(this.value.to);\n        }\n\n        return this.value.to;\n    }\n/**\n * @param {?} toValue\n * @return {?}\n */\nset to(toValue: any) {\n\n        // create new object based on the current value\n        const /** @type {?} */ value = Object.assign({}, this.value);\n\n        // ensure that the to value is a date\n        if (toValue instanceof Date === false) {\n            toValue = new Date(toValue);\n        }\n\n        // set the latest value\n        value.to = toValue;\n\n        // update the value object while ensuring immutability\n        this.value = value;\n    }\n/**\n * @return {?}\n */\nget fromLabel(): string {\n        return this.config.fromLabel || 'From';\n    }\n/**\n * @return {?}\n */\nget toLabel(): string {\n        return this.config.toLabel || 'To';\n    }\n/**\n * @return {?}\n */\nget fromPlaceholder(): string {\n        return this.config.fromPlaceholder;\n    }\n/**\n * @return {?}\n */\nget toPlaceholder(): string {\n        return this.config.toPlaceholder;\n    }\n/**\n * Override the default validation\n * @return {?}\n */\nvalidate(): void {\n\n        // check if there is a config validation function\n        if (this.config.validation) {\n            return super.validate();\n        }\n\n        // create copies of the dates so we can modify time value (to ignore it)\n        const /** @type {?} */ from = new Date(this.value.from);\n        const /** @type {?} */ to = new Date(this.value.to);\n\n        // set the time to the same so we dont compare it\n        from.setHours(0, 0, 0, 0);\n        to.setHours(0, 0, 0, 0);\n\n        // valid if the from date is less than or equal to the to date\n        this.valid = from <= to;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-search-date-range',\n    template: `\n      <label class=\"form-label\" *ngIf=\"label\">{{ label }}</label>\n\n      <div class=\"row\">\n          <div class=\"col-sm-12\">\n              <div class=\"form-inline\" [class.has-error]=\"!valid\">\n\n                  <div class=\"form-group p-r-md\">\n                      <label class=\"form-label m-r-xs\">{{ fromLabel }}</label>\n\n                      <div class=\"input-group date m-nil\">\n                          <span class=\"input-group-addon p-r-xs\" tabindex=\"1\" (click)=\"fromPopover.show()\">\n                              <i class=\"hpe-icon hpe-calendar\" aria-hidden=\"true\"></i>\n                          </span>\n                          <input type=\"text\" #fromPopover=\"bs-popover\" [ngModel]=\"from | date:'dd MMMM yyyy'\" [popover]=\"fromPopoverTemplate\" placement=\"bottom\"\n                              [outsideClick]=\"true\" containerClass=\"date-time-picker-popover\" class=\"form-control\" aria-label=\"Selected date\" [placeholder]=\"fromPlaceholder\">\n                      </div>\n                  </div>\n\n                  <div class=\"form-group p-r-xs\">\n                      <label class=\"form-label m-r-xs\">{{ toLabel }}</label>\n\n                      <div class=\"input-group date m-nil\">\n                          <span class=\"input-group-addon\" tabindex=\"1\" (click)=\"toPopover.show()\">\n                              <i class=\"hpe-icon hpe-calendar\" aria-hidden=\"true\"></i>\n                          </span>\n                          <input type=\"text\" #toPopover=\"bs-popover\" [ngModel]=\"to | date:'dd MMMM yyyy'\" [popover]=\"toPopoverTemplate\" placement=\"bottom\"\n                              [outsideClick]=\"true\" containerClass=\"date-time-picker-popover\" class=\"form-control\" aria-label=\"Selected date\" [placeholder]=\"toPlaceholder\">\n                      </div>\n                  </div>\n\n              </div>\n          </div>\n      </div>\n\n      <ng-template #fromPopoverTemplate>\n          <ux-date-time-picker [(date)]=\"from\" [showTime]=\"false\"></ux-date-time-picker>\n      </ng-template>\n\n      <ng-template #toPopoverTemplate>\n          <ux-date-time-picker [(date)]=\"to\" [showTime]=\"false\"></ux-date-time-picker>\n      </ng-template>\n    `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction SearchDateRangeComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nSearchDateRangeComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSearchDateRangeComponent.ctorParameters;\n/** @type {?} */\nSearchDateRangeComponent.prototype.type;\n}\n\n\nexport interface SearchDateRangeConfig {\n    label?: string;\n    fromLabel?: string;\n    toLabel?: string;\n    fromPlaceholder?: string;\n    toPlaceholder?: string;\n    validation: (value: any) => boolean;\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component } from '@angular/core';\nimport { BaseSearchComponent, BaseSearchComponentConfig } from '../base-search.component';\nimport { InfiniteScrollLoadFunction } from '../../../../index';\nexport class SearchSelectComponent extends BaseSearchComponent {\n\n  type: string = 'select';\n/**\n * Provide defaults for undefined properties\n * @return {?}\n */\nget label(): string {\n    return this.config.label;\n  }\n/**\n * @return {?}\n */\nget options() {\n    return this.config.options || [];\n  }\n/**\n * @return {?}\n */\nget multiple(): boolean {\n    return this.config.multiple || false;\n  }\n/**\n * @return {?}\n */\nget placeholder(): string {\n    return this.config.placeholder || 'Select item';\n  }\n/**\n * @return {?}\n */\nget dropDirection(): string {\n    return this.config.dropDirection || 'down';\n  }\n/**\n * @return {?}\n */\nget allowNull(): boolean {\n    return this.config.allowNull || false;\n  }\n/**\n * @return {?}\n */\nget disabled(): boolean {\n    return this.config.disabled || false;\n  }\n/**\n * @return {?}\n */\nget maxHeight(): string {\n    return this.config.maxHeight || '250px';\n  }\n/**\n * @return {?}\n */\nget pageSize(): number {\n    return this.config.pageSize || 20;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'ux-search-select',\n  template: `\n    <label class=\"form-label\" *ngIf=\"label\">{{ label }}</label>\n\n    <ux-select [(value)]=\"value\" \n               [options]=\"options\" \n               [multiple]=\"multiple\" \n               [placeholder]=\"placeholder\" \n               [dropDirection]=\"dropDirection\"\n               [pageSize]=\"pageSize\"\n               [allowNull]=\"allowNull\"\n               [disabled]=\"disabled\"\n               [maxHeight]=\"maxHeight\"\n               [key]=\"config.key\"\n               [display]=\"config.display\"\n               [loadingTemplate]=\"config.loadingTemplate\"\n               [optionTemplate]=\"config.optionTemplate\"\n               [noOptionsTemplate]=\"config.noOptionsTemplate\">\n    </ux-select>\n  `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction SearchSelectComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nSearchSelectComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSearchSelectComponent.ctorParameters;\n/** @type {?} */\nSearchSelectComponent.prototype.type;\n}\n\n\nexport interface SearchSelectConfig extends BaseSearchComponentConfig {\n  options?: any[] | InfiniteScrollLoadFunction;\n  multiple?: boolean;\n  dropDirection?: 'up' | 'down';\n  allowNull?: boolean;\n  disabled?: boolean;\n  maxHeight?: string;\n  pageSize?: number;\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Input, EventEmitter, Output, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs/Subscription';\nimport { SearchBuilderService } from './search-builder.service';\nimport { SearchBuilderQuery } from './interfaces/query.interface';\nimport { SearchBuilderComponentDefinition } from './interfaces/component-definition.interface';\nimport { SearchTextComponent } from './search-components/text/text.component';\nimport { SearchDateComponent } from './search-components/date/date.component';\nimport { SearchDateRangeComponent } from './search-components/date-range/date-range.component';\nimport { SearchSelectComponent } from './search-components/select/select.component';\nimport'rxjs/add/operator/distinctUntilChanged';\nexport class SearchBuilderComponent implements OnDestroy {\n/**\n * @param {?} components\n * @return {?}\n */\nset components(components: SearchBuilderComponentDefinition[]) {\n    this._searchBuilderService.registerComponents(components);\n  }\n/**\n * @param {?} value\n * @return {?}\n */\nset query(value: SearchBuilderQuery) {\n    this._searchBuilderService.setQuery(value);\n  }\n/**\n * @return {?}\n */\nget query() {\n    return this._searchBuilderService.getQuery();\n  }\n\n   queryChange: EventEmitter<SearchBuilderQuery> = new EventEmitter<SearchBuilderQuery>();\n   valid: EventEmitter<boolean> = new EventEmitter<boolean>(true);\nprivate _querySubscription: Subscription;\nprivate _validSubscription: Subscription;\n/**\n * Register the default search builder components\n * @param {?} _searchBuilderService\n */\nconstructor(private _searchBuilderService: SearchBuilderService) {\n\n    // watch for any query changes\n    this._querySubscription = _searchBuilderService.queryChange.subscribe(query => this.queryChange.emit(query));\n\n    // watch for any changes to the validation\n    this._validSubscription = _searchBuilderService.validationChange.distinctUntilChanged().subscribe(valid => this.valid.emit(valid));\n  }\n/**\n * Remove any subscriptions and cleanup\n * @return {?}\n */\nngOnDestroy(): void {\n    this._querySubscription.unsubscribe();\n    this._validSubscription.unsubscribe();\n  }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'ux-search-builder',\n  template: `\n    <ng-content></ng-content>\n  `,\n  providers: [SearchBuilderService]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: SearchBuilderService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'components': [{ type: Input },],\n'query': [{ type: Input },],\n'queryChange': [{ type: Output },],\n'valid': [{ type: Output },],\n};\n}\n\nfunction SearchBuilderComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nSearchBuilderComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSearchBuilderComponent.ctorParameters;\n/** @type {?} */\nSearchBuilderComponent.propDecorators;\n/** @type {?} */\nSearchBuilderComponent.prototype.queryChange;\n/** @type {?} */\nSearchBuilderComponent.prototype.valid;\n/** @type {?} */\nSearchBuilderComponent.prototype._querySubscription;\n/** @type {?} */\nSearchBuilderComponent.prototype._validSubscription;\n/** @type {?} */\nSearchBuilderComponent.prototype._searchBuilderService;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable } from '@angular/core';\n\n/**\n * Configuration service for the Popover directive.\n * You can inject this service, typically in your root component, and customize\n * the values of its properties in order to provide default values for all the\n * popovers used in the application.\n */\n\nexport class PopoverConfig {\n  /**\n   * Placement of a popover. Accepts: \"top\", \"bottom\", \"left\", \"right\", \"auto\"\n   */\n  placement = 'top';\n  /**\n   * Specifies events that should trigger. Supports a space separated list of\n   * event names.\n   */\n  triggers = 'click';\n\n  outsideClick = false;\n  /**\n   * A selector specifying the element the popover should be appended to.\n   * Currently only supports \"body\".\n   */\n  container: string;\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { ChangeDetectionStrategy, Input, Component } from '@angular/core';\nimport { PopoverConfig } from './popover.config';\nimport { isBs3 } from '../utils/theme-provider';\n\n\nexport class PopoverContainerComponent {\n   placement: string;\n   title: string;\n  containerClass: string;\n\n  get isBs3(): boolean {\n    return isBs3();\n  }\n\n  constructor(config: PopoverConfig) {\n    Object.assign(this, config);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'popover-container',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  // tslint:disable-next-line\n  host: {\n    '[class]':\n      '\"popover in popover-\" + placement + \" \" + \"bs-popover-\" + placement + \" \" + placement + \" \" + containerClass',\n    '[class.show]': '!isBs3',\n    role: 'tooltip',\n    style: 'display:block;'\n  },\n  styles: [\n    `\n    :host.bs-popover-top .arrow, :host.bs-popover-bottom .arrow {\n      left: calc(50% - 5px);\n    }\n    :host.bs-popover-left .arrow, :host.bs-popover-right .arrow {\n      top: calc(50% - 2.5px);\n    }\n  `\n  ],\n  template: \"<div class=\\\"popover-arrow arrow\\\"></div> <h3 class=\\\"popover-title popover-header\\\" *ngIf=\\\"title\\\">{{ title }}</h3> <div class=\\\"popover-content popover-body\\\"> <ng-content></ng-content> </div> \"\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: PopoverConfig, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'placement': [{ type: Input },],\n'title': [{ type: Input },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {\n  Directive, ElementRef, EventEmitter, Input, OnDestroy, OnInit, Output,\n  Renderer2, TemplateRef, ViewContainerRef\n} from '@angular/core';\nimport { PopoverConfig } from './popover.config';\nimport { ComponentLoader, ComponentLoaderFactory } from '../component-loader';\nimport { PopoverContainerComponent } from './popover-container.component';\n\n/**\n * A lightweight, extensible directive for fancy popover creation.\n */\n\nexport class PopoverDirective implements OnInit, OnDestroy {\n  /**\n   * Content to be displayed as popover.\n   */\n   popover: string | TemplateRef<any>;\n  /**\n   * Context to be used if popover is a template.\n   */\n   popoverContext: any;\n  /**\n   * Title of a popover.\n   */\n   popoverTitle: string;\n  /**\n   * Placement of a popover. Accepts: \"top\", \"bottom\", \"left\", \"right\"\n   */\n   placement: 'top' | 'bottom' | 'left' | 'right' | 'auto';\n  /**\n   * Close popover on outside click\n   */\n   outsideClick = false;\n  /**\n   * Specifies events that should trigger. Supports a space separated list of\n   * event names.\n   */\n   triggers: string;\n  /**\n   * A selector specifying the element the popover should be appended to.\n   * Currently only supports \"body\".\n   */\n   container: string;\n\n  /**\n   * Css class for popover container\n   */\n   containerClass = '';\n\n  /**\n   * Returns whether or not the popover is currently being shown\n   */\n  \n  get isOpen(): boolean {\n    return this._popover.isShown;\n  }\n\n  set isOpen(value: boolean) {\n    if (value) {\n      this.show();\n    } else {\n      this.hide();\n    }\n  }\n\n  /**\n   * Emits an event when the popover is shown\n   */\n   onShown: EventEmitter<any>;\n  /**\n   * Emits an event when the popover is hidden\n   */\n   onHidden: EventEmitter<any>;\n\n  private _popover: ComponentLoader<PopoverContainerComponent>;\n  private _isInited = false;\n\n  constructor(_elementRef: ElementRef,\n              _renderer: Renderer2,\n              _viewContainerRef: ViewContainerRef,\n              _config: PopoverConfig,\n              cis: ComponentLoaderFactory) {\n    this._popover = cis\n      .createLoader<PopoverContainerComponent>(\n        _elementRef,\n        _viewContainerRef,\n        _renderer\n      )\n      .provide({provide: PopoverConfig, useValue: _config});\n    Object.assign(this, _config);\n    this.onShown = this._popover.onShown;\n    this.onHidden = this._popover.onHidden;\n\n    // fix: no focus on button on Mac OS #1795\n    if (typeof window !== 'undefined') {\n      _elementRef.nativeElement.addEventListener('click', function () {\n        try {\n          _elementRef.nativeElement.focus();\n        } catch (err) {\n          return;\n        }\n      });\n    }\n  }\n\n  /**\n   * Opens an element’s popover. This is considered a “manual” triggering of\n   * the popover.\n   */\n  show(): void {\n    if (this._popover.isShown || !this.popover) {\n      return;\n    }\n\n    this._popover\n      .attach(PopoverContainerComponent)\n      .to(this.container)\n      .position({attachment: this.placement})\n      .show({\n        content: this.popover,\n        context: this.popoverContext,\n        placement: this.placement,\n        title: this.popoverTitle,\n        containerClass: this.containerClass\n      });\n    this.isOpen = true;\n  }\n\n  /**\n   * Closes an element’s popover. This is considered a “manual” triggering of\n   * the popover.\n   */\n  hide(): void {\n    if (this.isOpen) {\n      this._popover.hide();\n      this.isOpen = false;\n    }\n  }\n\n  /**\n   * Toggles an element’s popover. This is considered a “manual” triggering of\n   * the popover.\n   */\n  toggle(): void {\n    if (this.isOpen) {\n      return this.hide();\n    }\n\n    this.show();\n  }\n\n  ngOnInit(): any {\n    // fix: seems there are an issue with `routerLinkActive`\n    // which result in duplicated call ngOnInit without call to ngOnDestroy\n    // read more: https://github.com/valor-software/ngx-bootstrap/issues/1885\n    if (this._isInited) {\n      return;\n    }\n    this._isInited = true;\n\n    this._popover.listen({\n      triggers: this.triggers,\n      outsideClick: this.outsideClick,\n      show: () => this.show()\n    });\n  }\n\n  ngOnDestroy(): any {\n    this._popover.dispose();\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{selector: '[popover]', exportAs: 'bs-popover'}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Renderer2, },\n{type: ViewContainerRef, },\n{type: PopoverConfig, },\n{type: ComponentLoaderFactory, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'popover': [{ type: Input },],\n'popoverContext': [{ type: Input },],\n'popoverTitle': [{ type: Input },],\n'placement': [{ type: Input },],\n'outsideClick': [{ type: Input },],\n'triggers': [{ type: Input },],\n'container': [{ type: Input },],\n'containerClass': [{ type: Input },],\n'isOpen': [{ type: Input },],\n'onShown': [{ type: Output },],\n'onHidden': [{ type: Output },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ComponentLoaderFactory } from '../component-loader';\nimport { PositioningService } from '../positioning';\nimport { PopoverConfig } from './popover.config';\nimport { PopoverDirective } from './popover.directive';\nimport { PopoverContainerComponent } from './popover-container.component';\n\n\nexport class PopoverModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: PopoverModule,\n      providers: [PopoverConfig, ComponentLoaderFactory, PositioningService]\n    };\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  imports: [CommonModule],\n  declarations: [PopoverDirective, PopoverContainerComponent],\n  exports: [PopoverDirective],\n  entryComponents: [PopoverContainerComponent]\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","\nexport class TypeaheadOptionEvent {\n/**\n * @param {?} option\n */\nconstructor(public option: any) {}\n}\n\nfunction TypeaheadOptionEvent_tsickle_Closure_declarations() {\n/** @type {?} */\nTypeaheadOptionEvent.prototype.option;\n}\n","import { TypeaheadComponent } from './index';\nimport { Injectable } from '@angular/core';\nexport class TypeaheadKeyService {\nconstructor() { }\n/**\n * @param {?} event\n * @param {?} typeahead\n * @return {?}\n */\nhandleKey(event: KeyboardEvent, typeahead: TypeaheadComponent) {\n        if (typeahead) {\n            switch (event.key) {\n                case 'ArrowUp':\n                case 'Up':\n                    if (!typeahead.open) {\n                        typeahead.open = true;\n                    } else {\n                        typeahead.moveHighlight(-1);\n                    }\n                    event.preventDefault();\n                    break;\n                case 'ArrowDown':\n                case 'Down':\n                    if (!typeahead.open) {\n                        typeahead.open = true;\n                    } else {\n                        typeahead.moveHighlight(1);\n                    }\n                    event.preventDefault();\n                    break;\n                case 'Escape':\n                case 'Esc':\n                    typeahead.open = false;\n                    break;\n            }\n        }\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction TypeaheadKeyService_tsickle_Closure_declarations() {\n/** @type {?} */\nTypeaheadKeyService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTypeaheadKeyService.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { InfiniteScrollLoadFunction } from '../../directives/infinite-scroll/index';\nimport { TypeaheadOptionEvent } from './typeahead-event';\nimport {\n    Component,\n    ElementRef,\n    EventEmitter,\n    Input,\n    OnChanges,\n    OnInit,\n    Output,\n    SimpleChanges,\n    TemplateRef,\n    ViewChild,\n    AfterViewInit,\n    ChangeDetectorRef\n} from '@angular/core';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { Observable } from 'rxjs/Observable';\nexport class TypeaheadComponent implements AfterViewInit, OnChanges {\n\n     options: any[] | InfiniteScrollLoadFunction;\n     filter: string;\nprivate _open: boolean = false;\n/**\n * @return {?}\n */\nget open() {\n        return this._open;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset open(value: boolean) {\n        const /** @type {?} */ originalValue = this._open;\n        this._open = value;\n        if (value !== originalValue) {\n            this.openChange.emit(value);\n            if (value) {\n                this.initOptions();\n            }\n        }\n    }\n\n     openChange = new EventEmitter<boolean>();\n\n     display: (option: any) => string | string;\n     key: (option: any) => string | string;\n     disabledOptions: any[];\n     dropDirection: 'up' | 'down' = 'down';\n     maxHeight: string = '250px';\n     openOnFilterChange: boolean = true;\n     pageSize: number = 20;\n     selectFirst: boolean = true;\n\n     loadingTemplate: TemplateRef<any>;\n     optionTemplate: TemplateRef<any>;\n     noOptionsTemplate: TemplateRef<any>;\n\n     optionSelected = new EventEmitter<TypeaheadOptionEvent>();\nprivate _highlighted = new BehaviorSubject<any>(null);\n/**\n * @return {?}\n */\nget highlighted(): any {\n        return this._highlighted.getValue();\n    }\nprivate _defaultLoadingTemplate: TemplateRef<any>;\nprivate _defaultOptionTemplate: TemplateRef<any>;\nprivate _defaultNoOptionsTemplate: TemplateRef<any>;\n\n    loadOptionsCallback: InfiniteScrollLoadFunction;\n    visibleOptions: any[] = [];\n    loading = false;\n\n    optionApi: TypeaheadOptionApi = {\n        getKey: this.getKey.bind(this),\n        getDisplay: this.getDisplay.bind(this),\n        getDisplayHtml: this.getDisplayHtml.bind(this)\n    };\n/**\n * @param {?} typeaheadElement\n * @param {?} cdRef\n */\nconstructor(public typeaheadElement: ElementRef,\nprivate cdRef: ChangeDetectorRef) {\n\n        this.loadOptionsCallback = (pageNum: number, pageSize: number, filter: any) => {\n            if (typeof this.options === 'function') {\n                return this.options(pageNum, pageSize, filter);\n            }\n            return null;\n        };\n    }\n/**\n * @return {?}\n */\nngAfterViewInit() {\n        // Attach default loading template\n        if (!this.loadingTemplate) {\n            this.loadingTemplate = this._defaultLoadingTemplate;\n        }\n\n        // Attach default option template\n        if (!this.optionTemplate) {\n            this.optionTemplate = this._defaultOptionTemplate;\n        }\n\n        // Attach default \"no results\" template\n        if (!this.noOptionsTemplate) {\n            this.noOptionsTemplate = this._defaultNoOptionsTemplate;\n        }\n\n        this.cdRef.detectChanges();\n    }\n/**\n * @param {?} changes\n * @return {?}\n */\nngOnChanges(changes: SimpleChanges) {\n        // Open the dropdown if the filter value updates\n        if (changes.filter) {\n            if (this.openOnFilterChange && changes.filter.currentValue && changes.filter.currentValue.length > 0) {\n                this.open = true;\n            }\n        }\n\n        // Re-filter visibleOptions\n        this.updateOptions();\n    }\n/**\n * @param {?} event\n * @return {?}\n */\noptionMousedownHandler(event: MouseEvent) {\n        // Workaround to prevent focus changing when an option is clicked\n        event.preventDefault();\n    }\n/**\n * @param {?} event\n * @param {?} option\n * @return {?}\n */\noptionClickHandler(event: MouseEvent, option: any) {\n        this.select(option);\n    }\n/**\n * Returns the unique key value of the given option.\n * @param {?} option\n * @return {?}\n */\ngetKey(option: any): string {\n        if (typeof this.key === 'function') {\n            return this.key(option);\n        }\n        if (typeof this.key === 'string' && option && option.hasOwnProperty(this.key)) {\n            return option[ /** @type {?} */((<string>this.key))];\n        }\n        return this.getDisplay(option);\n    }\n/**\n * Returns the display value of the given option.\n * @param {?} option\n * @return {?}\n */\ngetDisplay(option: any): string {\n        if (typeof this.display === 'function') {\n            return this.display(option);\n        }\n        if (typeof this.display === 'string' && option && option.hasOwnProperty(this.display)) {\n            return option[ /** @type {?} */((<string>this.display))];\n        }\n        return option;\n    }\n/**\n * Returns the display value of the given option with HTML markup added to highlight the part which matches the current filter value.\n * @param {?} option\n * @return {?}\n */\ngetDisplayHtml(option: any) {\n        let /** @type {?} */ displayText;\n        if (typeof option === 'string') {\n            displayText = this.getDisplay(option).replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;');\n        } else {\n            displayText = this.getDisplay(option.name).replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;');\n        }\n        let /** @type {?} */ displayHtml = displayText;\n        if (this.filter) {\n            const /** @type {?} */ length = this.filter.length;\n            const /** @type {?} */ matchIndex = displayText.toLowerCase().indexOf(this.filter.toLowerCase());\n            if (matchIndex >= 0) {\n                var /** @type {?} */ highlight = `<span class=\"ux-filter-match\">${displayText.substr(matchIndex, length)}</span>`;\n                displayHtml = displayText.substr(0, matchIndex) + highlight + displayText.substr(matchIndex + length);\n            }\n        }\n        return displayHtml;\n    }\n/**\n * Returns true if the infinite scroll component should load\n * @return {?}\n */\nisInfiniteScroll() {\n        return typeof this.options === 'function';\n    }\n/**\n * Selects the given option, emitting the optionSelected event and closing the dropdown.\n * @param {?} option\n * @return {?}\n */\nselect(option: any) {\n        if (!this.isDisabled(option)) {\n            this.optionSelected.emit(new TypeaheadOptionEvent(option));\n            this._highlighted.next(null);\n            this.open = false;\n        }\n    }\n/**\n * Returns true if the given option is part of the disabledOptions array.\n * @param {?} option\n * @return {?}\n */\nisDisabled(option: any): boolean {\n        if (this.disabledOptions) {\n            const /** @type {?} */ optionKey = this.getKey(option);\n            const /** @type {?} */ result = this.disabledOptions.find((selectedOption) => {\n                return this.getKey(selectedOption) === optionKey;\n            });\n            return result !== undefined;\n        }\n        return false;\n    }\n/**\n * Set the given option as the current highlighted option, available in the highlightedOption parameter.\n * @param {?} option\n * @return {?}\n */\nhighlight(option: any) {\n        if (!this.isDisabled(option)) {\n            this._highlighted.next(option);\n        }\n    }\n/**\n * Increment or decrement the highlighted option in the list. Disabled options are skipped.\n * @param {?} d Value to be added to the index of the highlighted option, i.e. -1 to move backwards, +1 to move forwards.\n * @return {?}\n */\nmoveHighlight(d: number): any {\n        const /** @type {?} */ highlightIndex = this.indexOfVisibleOption(this.highlighted);\n        let /** @type {?} */ newIndex = highlightIndex;\n        let /** @type {?} */ disabled = true;\n        let /** @type {?} */ inBounds = true;\n        do {\n            newIndex = newIndex + d;\n            inBounds = (newIndex >= 0 && newIndex < this.visibleOptions.length);\n            disabled = inBounds && this.isDisabled(this.visibleOptions[newIndex]);\n        }\n        while (inBounds && disabled);\n\n        if (!disabled && inBounds) {\n            this._highlighted.next(this.visibleOptions[newIndex]);\n        }\n\n        return this.highlighted;\n    }\n/**\n * Returns true if the given option is the highlighted option.\n * @param {?} option\n * @return {?}\n */\nisHighlighted(option: any): boolean {\n        return this.getKey(option) === this.getKey(this.highlighted);\n    }\n/**\n * Set up the options before the dropdown is displayed.\n * @return {?}\n */\ninitOptions() {\n        // Clear previous highlight\n        this._highlighted.next(null);\n        if (this.selectFirst) {\n            // This will highlight the first non-disabled option.\n            this.moveHighlight(1);\n        }\n    }\n/**\n * Update the visibleOptions array with the current filter.\n * @return {?}\n */\nupdateOptions() {\n        if (typeof this.options === 'object') {\n            const /** @type {?} */ normalisedInput = (this.filter || '').toLowerCase();\n            this.visibleOptions = this.options.filter((option) => {\n                return this.getDisplay(option).toLowerCase().indexOf(normalisedInput) >= 0;\n            });\n        }\n\n        this.initOptions();\n    }\n/**\n * Return the index of the given option in the visibleOptions array. Returns -1 if the option is not currently visible.\n * @param {?} option\n * @return {?}\n */\nprivate indexOfVisibleOption(option: any): number {\n        if (option) {\n            const /** @type {?} */ optionKey = this.getKey(option);\n            return this.visibleOptions.findIndex((el) => {\n                return this.getKey(el) === optionKey;\n            });\n        }\n\n        return -1;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-typeahead',\n    template: `\n      <div class=\"ux-typeahead-options\"\n          [uxInfiniteScroll]=\"loadOptionsCallback\"\n          [(collection)]=\"visibleOptions\"\n          [enabled]=\"isInfiniteScroll()\"\n          [filter]=\"filter\"\n          [loadOnScroll]=\"true\"\n          [pageSize]=\"pageSize\"\n          [scrollElement]=\"typeaheadElement\"\n          (loading)=\"loading = true\"\n          (loaded)=\"loading = false\">\n\n          <ol *ngIf=\"visibleOptions.length > 0\">\n              <li *ngFor=\"let option of visibleOptions; let i = index\"\n                  [class.disabled]=\"isDisabled(option)\"\n                  [class.highlighted]=\"isHighlighted(option)\"\n                  [uxScrollIntoViewIf]=\"isHighlighted(option)\"\n                  [scrollParent]=\"typeaheadElement.nativeElement\"\n                  (mousedown)=\"optionMousedownHandler($event)\"\n                  (click)=\"optionClickHandler($event, option)\"\n                  (mouseover)=\"highlight(option)\">\n\n                  <ng-container [ngTemplateOutlet]=\"optionTemplate\"\n                      [ngTemplateOutletContext]=\"{option: option, api: optionApi}\">\n                  </ng-container>\n\n              </li>\n          </ol>\n\n          <div *uxInfiniteScrollLoading>\n              <ng-container [ngTemplateOutlet]=\"loadingTemplate\">\n              </ng-container>\n          </div>\n\n      </div>\n      <div *ngIf=\"visibleOptions.length === 0 && !loading\">\n          <ng-container [ngTemplateOutlet]=\"noOptionsTemplate\">\n          </ng-container>\n      </div>\n\n      <ng-template #defaultLoadingTemplate>\n          <div class=\"ux-typeahead-loading\">\n              <div class=\"spinner spinner-accent spinner-bounce-middle\"></div>\n              <div>Loading...</div>\n          </div>\n      </ng-template>\n\n      <ng-template #defaultOptionTemplate let-option=\"option\" let-api=\"api\">\n          <span class=\"ux-typeahead-option\" [innerHtml]=\"api.getDisplayHtml(option)\"></span>\n      </ng-template>\n\n      <ng-template #defaultNoOptionsTemplate>\n          <span class=\"ux-typeahead-no-options\">No results</span>\n      </ng-template>\n    `,\n    host: {\n        '[class.open]': 'open',\n        '[class.drop-up]': 'dropDirection === \"up\"',\n        '[style.maxHeight]': 'maxHeight'\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: ChangeDetectorRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'options': [{ type: Input },],\n'filter': [{ type: Input },],\n'open': [{ type: Input, args: ['open', ] },],\n'openChange': [{ type: Output },],\n'display': [{ type: Input },],\n'key': [{ type: Input },],\n'disabledOptions': [{ type: Input },],\n'dropDirection': [{ type: Input },],\n'maxHeight': [{ type: Input },],\n'openOnFilterChange': [{ type: Input },],\n'pageSize': [{ type: Input },],\n'selectFirst': [{ type: Input },],\n'loadingTemplate': [{ type: Input },],\n'optionTemplate': [{ type: Input },],\n'noOptionsTemplate': [{ type: Input },],\n'optionSelected': [{ type: Output },],\n'highlighted': [{ type: Output },],\n'_defaultLoadingTemplate': [{ type: ViewChild, args: ['defaultLoadingTemplate', ] },],\n'_defaultOptionTemplate': [{ type: ViewChild, args: ['defaultOptionTemplate', ] },],\n'_defaultNoOptionsTemplate': [{ type: ViewChild, args: ['defaultNoOptionsTemplate', ] },],\n};\n}\n\nfunction TypeaheadComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nTypeaheadComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTypeaheadComponent.ctorParameters;\n/** @type {?} */\nTypeaheadComponent.propDecorators;\n/** @type {?} */\nTypeaheadComponent.prototype.options;\n/** @type {?} */\nTypeaheadComponent.prototype.filter;\n/** @type {?} */\nTypeaheadComponent.prototype._open;\n/** @type {?} */\nTypeaheadComponent.prototype.openChange;\n/** @type {?} */\nTypeaheadComponent.prototype.display;\n/** @type {?} */\nTypeaheadComponent.prototype.key;\n/** @type {?} */\nTypeaheadComponent.prototype.disabledOptions;\n/** @type {?} */\nTypeaheadComponent.prototype.dropDirection;\n/** @type {?} */\nTypeaheadComponent.prototype.maxHeight;\n/** @type {?} */\nTypeaheadComponent.prototype.openOnFilterChange;\n/** @type {?} */\nTypeaheadComponent.prototype.pageSize;\n/** @type {?} */\nTypeaheadComponent.prototype.selectFirst;\n/** @type {?} */\nTypeaheadComponent.prototype.loadingTemplate;\n/** @type {?} */\nTypeaheadComponent.prototype.optionTemplate;\n/** @type {?} */\nTypeaheadComponent.prototype.noOptionsTemplate;\n/** @type {?} */\nTypeaheadComponent.prototype.optionSelected;\n/** @type {?} */\nTypeaheadComponent.prototype._highlighted;\n/** @type {?} */\nTypeaheadComponent.prototype._defaultLoadingTemplate;\n/** @type {?} */\nTypeaheadComponent.prototype._defaultOptionTemplate;\n/** @type {?} */\nTypeaheadComponent.prototype._defaultNoOptionsTemplate;\n/** @type {?} */\nTypeaheadComponent.prototype.loadOptionsCallback;\n/** @type {?} */\nTypeaheadComponent.prototype.visibleOptions;\n/** @type {?} */\nTypeaheadComponent.prototype.loading;\n/** @type {?} */\nTypeaheadComponent.prototype.optionApi;\n/** @type {?} */\nTypeaheadComponent.prototype.typeaheadElement;\n/** @type {?} */\nTypeaheadComponent.prototype.cdRef;\n}\n\n\n/**\n * The API available to option templates.\n */\nexport interface TypeaheadOptionApi {\n\n    /**\n     * Returns the unique key value of the given option.\n     */\n    getKey(option: any): string;\n\n    /**\n     * Returns the display value of the given option.\n     */\n    getDisplay(option: any): string;\n\n    /**\n     * Returns the display value of the given option with HTML markup added to highlight the part which matches the current filter value. Override the ux-filter-match class in CSS to modify the default appearance.\n     */\n    getDisplayHtml(option: any): string;\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ElementRef, Input, Output, Renderer2, TemplateRef, ViewContainerRef } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { Subject } from 'rxjs/Subject';\nexport class InfiniteScrollLoadButtonDirective {\n/**\n * @return {?}\n */\nget visible() {\n        return this._visible;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset visible(value: boolean) {\n        if (value !== this._visible) {\n            if (value) {\n                this._viewContainer.createEmbeddedView(this._template);\n\n                // Template content follows the elementRef, which is a comment.\n                const /** @type {?} */ clickTarget = this.getNextElementSibling(this._template.elementRef.nativeElement);\n                this._renderer.listen(clickTarget, 'click', this.onClick.bind(this));\n            } else {\n                this._viewContainer.clear();\n            }\n        }\n\n        this._visible = value;\n    }\n\n     load: Observable<Event>;\nprivate _visible: boolean = false;\nprivate _load = new Subject();\n/**\n * @param {?} _element\n * @param {?} _template\n * @param {?} _viewContainer\n * @param {?} _renderer\n */\nconstructor(\nprivate _element: ElementRef,\nprivate _template: TemplateRef<any>,\nprivate _viewContainer: ViewContainerRef,\nprivate _renderer: Renderer2) {\n\n        this.load = this._load.asObservable() as Observable<Event>;\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nprivate onClick(event: MouseEvent) {\n        this._load.next(event);\n    }\n/**\n * @param {?} element\n * @return {?}\n */\nprivate getNextElementSibling(element: any): Element {\n        var /** @type {?} */ next = element;\n        while (next = next.nextSibling) {\n            if (next.nodeType === 1) {\n                return next;\n            }\n        }\n        return null;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: '[uxInfiniteScrollLoadButton]'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: TemplateRef, },\n{type: ViewContainerRef, },\n{type: Renderer2, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'visible': [{ type: Input, args: ['uxInfiniteScrollLoadButton', ] },],\n'load': [{ type: Output },],\n};\n}\n\nfunction InfiniteScrollLoadButtonDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nInfiniteScrollLoadButtonDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nInfiniteScrollLoadButtonDirective.ctorParameters;\n/** @type {?} */\nInfiniteScrollLoadButtonDirective.propDecorators;\n/** @type {?} */\nInfiniteScrollLoadButtonDirective.prototype.load;\n/** @type {?} */\nInfiniteScrollLoadButtonDirective.prototype._visible;\n/** @type {?} */\nInfiniteScrollLoadButtonDirective.prototype._load;\n/** @type {?} */\nInfiniteScrollLoadButtonDirective.prototype._element;\n/** @type {?} */\nInfiniteScrollLoadButtonDirective.prototype._template;\n/** @type {?} */\nInfiniteScrollLoadButtonDirective.prototype._viewContainer;\n/** @type {?} */\nInfiniteScrollLoadButtonDirective.prototype._renderer;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, Input, TemplateRef, ViewContainerRef } from '@angular/core';\nexport class InfiniteScrollLoadingDirective {\n/**\n * @return {?}\n */\nget visible() {\n        return this._visible;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset visible(value: boolean) {\n        if (value !== this._visible) {\n            if (value) {\n                this._viewContainer.createEmbeddedView(this._templateRef);\n            } else {\n                this._viewContainer.clear();\n            }\n        }\n        \n        this._visible = value;\n    }\nprivate _visible: boolean = false;\n/**\n * @param {?} _templateRef\n * @param {?} _viewContainer\n */\nconstructor(\nprivate _templateRef: TemplateRef<any>,\nprivate _viewContainer: ViewContainerRef) { }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: '[uxInfiniteScrollLoading]'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: TemplateRef, },\n{type: ViewContainerRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'visible': [{ type: Input, args: ['uxInfiniteScrollLoading', ] },],\n};\n}\n\nfunction InfiniteScrollLoadingDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nInfiniteScrollLoadingDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nInfiniteScrollLoadingDirective.ctorParameters;\n/** @type {?} */\nInfiniteScrollLoadingDirective.propDecorators;\n/** @type {?} */\nInfiniteScrollLoadingDirective.prototype._visible;\n/** @type {?} */\nInfiniteScrollLoadingDirective.prototype._templateRef;\n/** @type {?} */\nInfiniteScrollLoadingDirective.prototype._viewContainer;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { InfiniteScrollLoadButtonDirective } from './infinite-scroll-load-button.directive';\nimport { InfiniteScrollLoadingDirective } from './infinite-scroll-loading.directive';\nimport {\n    AfterContentInit,\n    ContentChildren,\n    Directive,\n    ElementRef,\n    EventEmitter,\n    Input,\n    OnChanges,\n    OnDestroy,\n    OnInit,\n    Output,\n    QueryList,\n    SimpleChanges\n} from '@angular/core';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { Observable } from 'rxjs/Observable';\nimport { Subject } from 'rxjs/Subject';\nimport { Subscription } from 'rxjs/Subscription';\nimport'rxjs/add/operator/auditTime';\nimport'rxjs/add/operator/combineLatest';\nimport'rxjs/add/operator/partition';\nexport class InfiniteScrollDirective implements OnInit, AfterContentInit, OnChanges, OnDestroy {\n\n     load: InfiniteScrollLoadFunction;\n\n     _collection: any[] = [];\n/**\n * @return {?}\n */\nget collection() {\n        return this._collection;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset collection(value: any[]) {\n        this.collectionChange.emit(value);\n        this._collection = value;\n    }\n\n     enabled: boolean = true;\n     filter: any;\n     loadOnInit: boolean = true;\n     loadOnScroll: boolean = true;\n     pageSize: number = 20;\n     scrollElement: ElementRef;\n\n     collectionChange = new EventEmitter<any[]>();\n     loadingEvent = new EventEmitter<InfiniteScrollLoadingEvent>();\n     loadedEvent = new EventEmitter<InfiniteScrollLoadedEvent>();\n     loadErrorEvent = new EventEmitter<InfiniteScrollLoadErrorEvent>();\nprivate _loadButtonQuery: QueryList<InfiniteScrollLoadButtonDirective>;\nprivate _loadingIndicatorQuery: QueryList<InfiniteScrollLoadingDirective>;\nprivate _nextPageNum = 0;\nprivate _domObserver: MutationObserver;\nprivate _scrollEventSub: Subscription;\nprivate _updateRequests = new Subject<InfiniteScrollRequest>();\nprivate _isLoading = new BehaviorSubject<boolean>(false);\nprivate _isExhausted = new BehaviorSubject<boolean>(false);\nprivate _loadButtonEnabled = new BehaviorSubject<boolean>(false);\nprivate _canLoadManually: Observable<boolean>;\nprivate _loadButtonSubscriptions: Subscription[] = [];\n/**\n * @param {?} _element\n */\nconstructor(private _element: ElementRef) {\n\n        this._canLoadManually = this._isLoading.combineLatest(this._isExhausted, this._loadButtonEnabled, (isLoading, isExhausted, loadButtonEnabled) => {\n            return !isLoading && !isExhausted && loadButtonEnabled;\n        });\n    }\n/**\n * @return {?}\n */\nngOnInit() {\n\n        if (!this.scrollElement) {\n            this.scrollElement = this._element;\n        }\n\n        this._loadButtonEnabled.next(!this.loadOnScroll);\n    }\n/**\n * @return {?}\n */\nngAfterContentInit() {\n\n        // There are two kinds of update requests: check and load.\n        // Check requests are throttled and will only cause an update if more data is required\n        // to fill the scrolling view, and it isn't already loading some.\n        // Load requests are not throttled and always request a page of data.\n        const /** @type {?} */ requests = this._updateRequests.partition((r) => r.check);\n        requests[0].auditTime(200).subscribe(this.doRequest.bind(this));\n        requests[1].subscribe(this.doRequest.bind(this));\n\n        if (this.enabled) {\n\n            // Subscribe to scroll events and DOM changes.\n            this.attachEventHandlers();\n        }\n\n        // Connect the Load More button visible state.\n        this._canLoadManually.subscribe((canLoad) => {\n            this._loadButtonQuery.forEach((loadButton) => {\n                loadButton.visible = canLoad;\n            });\n        });\n\n        // Connect the loading indicator visible state.\n        this._isLoading.subscribe((isLoading) => {\n            this._loadingIndicatorQuery.forEach((loading) => {\n                loading.visible = isLoading;\n            });\n        });\n\n        // Link the Load More button click event to trigger an update.\n        this.attachLoadButtonEvents();\n        this._loadButtonQuery.changes.subscribe((query) => {\n            this.attachLoadButtonEvents();\n        });\n\n        // Initial update.\n        if (this.loadOnInit) {\n            this.loadNextPage();\n        }\n    }\n/**\n * @param {?} changes\n * @return {?}\n */\nngOnChanges(changes: SimpleChanges) {\n\n        let /** @type {?} */ check = true;\n\n        if (changes.enabled && changes.enabled.currentValue !== changes.enabled.previousValue) {\n            if (changes.enabled.currentValue) {\n                this.attachEventHandlers();\n                this.reset();\n                check = false;\n            } else {\n                this.detachEventHandlers();\n            }\n        }\n\n        if (this.enabled) {\n\n            if (changes.filter && changes.filter.currentValue !== changes.filter.previousValue) {\n                this.reset();\n                check = false;\n            }\n\n            if (changes.loadOnScroll) {\n                this._loadButtonEnabled.next(!changes.loadOnScroll.currentValue);\n            }\n\n            if (changes.pageSize && changes.pageSize.currentValue !== changes.pageSize.previousValue) {\n                this.reset();\n                check = false;\n            }\n\n            this._updateRequests.next({\n                check: check,\n                pageNumber: this._nextPageNum,\n                pageSize: this.pageSize,\n                filter: this.filter\n            });\n        }\n    }\n/**\n * @return {?}\n */\nngOnDestroy() {\n        this.detachEventHandlers();\n    }\n/**\n * Request an additional page of data.\n * @return {?}\n */\nloadNextPage() {\n\n        if (!this.enabled) {\n            return;\n        }\n\n        this._updateRequests.next({\n            check: false,\n            pageNumber: this._nextPageNum,\n            pageSize: this.pageSize,\n            filter: this.filter\n        });\n    }\n/**\n * Request a check for whether an additional page of data is required. This is throttled.\n * @return {?}\n */\ncheck() {\n\n        if (!this.enabled) {\n            return;\n        }\n\n        this._updateRequests.next({\n            check: true,\n            pageNumber: this._nextPageNum,\n            pageSize: this.pageSize,\n            filter: this.filter\n        });\n    }\n/**\n * Clear the collection. Future requests will load from page 0.\n * @return {?}\n */\nreset() {\n\n        if (!this.enabled) {\n            return;\n        }\n\n        // Reset the page counter.\n        this._nextPageNum = 0;\n\n        // Clear the collection (without changing the reference).\n        if (this.collection) {\n            this.collection.length = 0;\n        }\n\n        // Reset the exhausted flag, allowing the Load More button to appear.\n        this._isExhausted.next(false);\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nprivate onScroll(event: Event) {\n        this.check();\n    }\n/**\n * @return {?}\n */\nprivate onDomChange() {\n        this.check();\n    }\n/**\n * Attach scroll event handler and DOM observer.\n * @return {?}\n */\nprivate attachEventHandlers() {\n\n        // Subscribe to the scroll event on the target element.\n        this._scrollEventSub = Observable.fromEvent(this.scrollElement.nativeElement, 'scroll')\n            .subscribe(this.onScroll.bind(this));\n\n        // Subscribe to child DOM changes. The main effect of this is to check whether even more data is\n        // required after the initial load.\n        this._domObserver = new MutationObserver(this.onDomChange.bind(this));\n        this._domObserver.observe(this.scrollElement.nativeElement, {\n            childList: true,\n            subtree: true\n        });\n    }\n/**\n * Detach scroll event handler and DOM observer.\n * @return {?}\n */\nprivate detachEventHandlers() {\n        if (this._scrollEventSub) {\n            this._scrollEventSub.unsubscribe();\n            this._scrollEventSub = null;\n        }\n\n        if (this._domObserver) {\n            this._domObserver.disconnect();\n            this._domObserver = null;\n        }\n    }\n/**\n * Remove any existing event subscriptions for the load button `load` event, then attach subscriptions\n * for any in the query.\n * @return {?}\n */\nprivate attachLoadButtonEvents() {\n        this._loadButtonSubscriptions.forEach((s) => s.unsubscribe());\n        this._loadButtonSubscriptions = this._loadButtonQuery.map((loadButton) => {\n            return loadButton.load.subscribe(this.loadNextPage.bind(this));\n        });\n    }\n/**\n * Conditionally loads a page into the collection based on directive state and request parameters.\n * @param {?} request\n * @return {?}\n */\nprivate doRequest(request: InfiniteScrollRequest) {\n\n        // Load a new page if the scroll position is beyond the threshhold and if the client code did not \n        // cancel.\n        if (this.needsData(request) && this.beginLoading(request)) {\n\n            // Invoke the callback load function, which returns a promose or plain data.\n            const /** @type {?} */ loadResult = this.load(request.pageNumber, request.pageSize, request.filter);\n\n            Promise.resolve(loadResult)\n                .then((newData) => {\n\n                    // Make sure that the parameters have not changed since the load started;\n                    // otherwise discard the results.\n                    if (request.filter === this.filter && request.pageSize === this.pageSize) {\n\n                        if (newData && newData.length) {\n                            Array.prototype.push.apply(this.collection, newData);\n                        }\n\n                        // Emit the loaded event\n                        this.endLoading(request, newData);\n                    }\n                })\n                .catch((reason) => {\n                    // Emit the loadError event\n                    this.endLoadingWithError(request, reason);\n                });\n        }\n    }\n/**\n * Returns true if the request should be fulfilled.\n * @param {?} request\n * @return {?}\n */\nprivate needsData(request: InfiniteScrollRequest): boolean {\n\n        if (!this.enabled) {\n            return false;\n        }\n\n        // Always load for a load request\n        if (!request.check) {\n            return true;\n        }\n\n        // Ignore a check request when the end of data has been detected, or if data is currently loading.\n        if (this._isExhausted.getValue() || this._isLoading.getValue()) {\n            return false;\n        }\n\n        // Load if the remaining scroll area is <= the element height.\n        if (this.scrollElement && this.loadOnScroll) {\n            const /** @type {?} */ element = /** @type {?} */(( <HTMLElement>this.scrollElement.nativeElement));\n            const /** @type {?} */ remainingScroll = element.scrollHeight - (element.scrollTop + element.clientHeight);\n            return remainingScroll <= element.clientHeight;\n        }\n\n        return false;\n    }\n/**\n * Updates state for the beginning of a load. Returns false if the `loading` event was cancelled.\n * @param {?} request\n * @return {?}\n */\nprivate beginLoading(request: InfiniteScrollRequest): boolean {\n\n        const /** @type {?} */ event = new InfiniteScrollLoadingEvent(request.pageNumber, request.pageSize, request.filter);\n        this.loadingEvent.emit(event);\n\n        this._isLoading.next(!event.defaultPrevented());\n\n        return !event.defaultPrevented();\n    }\n/**\n * Updates state from a successful load. Raises the `loaded` event.\n * @param {?} request\n * @param {?=} data\n * @return {?}\n */\nprivate endLoading(request: InfiniteScrollRequest, data?: any) {\n\n        this._isLoading.next(false);\n\n        const /** @type {?} */ isExhausted = !!(data && data.length < this.pageSize);\n        this._isExhausted.next(isExhausted);\n\n        this.loadedEvent.emit(new InfiniteScrollLoadedEvent(request.pageNumber, request.pageSize, request.filter, data, isExhausted));\n\n        this._nextPageNum += 1;\n    }\n/**\n * Updates state from a failed load. Raises the `loadError` event.\n * @param {?} request\n * @param {?} error\n * @return {?}\n */\nprivate endLoadingWithError(request: InfiniteScrollRequest, error: any) {\n\n        this._isLoading.next(false);\n\n        this.loadErrorEvent.emit(new InfiniteScrollLoadErrorEvent(request.pageNumber, request.pageSize, request.filter, error));\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: '[uxInfiniteScroll]',\n    exportAs: 'uxInfiniteScroll'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'load': [{ type: Input, args: ['uxInfiniteScroll', ] },],\n'_collection': [{ type: Input, args: ['collection', ] },],\n'enabled': [{ type: Input },],\n'filter': [{ type: Input },],\n'loadOnInit': [{ type: Input },],\n'loadOnScroll': [{ type: Input },],\n'pageSize': [{ type: Input },],\n'scrollElement': [{ type: Input },],\n'collectionChange': [{ type: Output },],\n'loadingEvent': [{ type: Output, args: ['loading', ] },],\n'loadedEvent': [{ type: Output, args: ['loaded', ] },],\n'loadErrorEvent': [{ type: Output, args: ['loadError', ] },],\n'_loadButtonQuery': [{ type: ContentChildren, args: [InfiniteScrollLoadButtonDirective, ] },],\n'_loadingIndicatorQuery': [{ type: ContentChildren, args: [InfiniteScrollLoadingDirective, ] },],\n};\n}\n\nfunction InfiniteScrollDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nInfiniteScrollDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nInfiniteScrollDirective.ctorParameters;\n/** @type {?} */\nInfiniteScrollDirective.propDecorators;\n/** @type {?} */\nInfiniteScrollDirective.prototype.load;\n/** @type {?} */\nInfiniteScrollDirective.prototype._collection;\n/** @type {?} */\nInfiniteScrollDirective.prototype.enabled;\n/** @type {?} */\nInfiniteScrollDirective.prototype.filter;\n/** @type {?} */\nInfiniteScrollDirective.prototype.loadOnInit;\n/** @type {?} */\nInfiniteScrollDirective.prototype.loadOnScroll;\n/** @type {?} */\nInfiniteScrollDirective.prototype.pageSize;\n/** @type {?} */\nInfiniteScrollDirective.prototype.scrollElement;\n/** @type {?} */\nInfiniteScrollDirective.prototype.collectionChange;\n/** @type {?} */\nInfiniteScrollDirective.prototype.loadingEvent;\n/** @type {?} */\nInfiniteScrollDirective.prototype.loadedEvent;\n/** @type {?} */\nInfiniteScrollDirective.prototype.loadErrorEvent;\n/** @type {?} */\nInfiniteScrollDirective.prototype._loadButtonQuery;\n/** @type {?} */\nInfiniteScrollDirective.prototype._loadingIndicatorQuery;\n/** @type {?} */\nInfiniteScrollDirective.prototype._nextPageNum;\n/** @type {?} */\nInfiniteScrollDirective.prototype._domObserver;\n/** @type {?} */\nInfiniteScrollDirective.prototype._scrollEventSub;\n/** @type {?} */\nInfiniteScrollDirective.prototype._updateRequests;\n/** @type {?} */\nInfiniteScrollDirective.prototype._isLoading;\n/** @type {?} */\nInfiniteScrollDirective.prototype._isExhausted;\n/** @type {?} */\nInfiniteScrollDirective.prototype._loadButtonEnabled;\n/** @type {?} */\nInfiniteScrollDirective.prototype._canLoadManually;\n/** @type {?} */\nInfiniteScrollDirective.prototype._loadButtonSubscriptions;\n/** @type {?} */\nInfiniteScrollDirective.prototype._element;\n}\n\n/**\n * The internal data associated with a load/check request.\n */\nclass InfiniteScrollRequest {\n    check: boolean;\n    pageNumber: number;\n    pageSize: number;\n    filter: any;\n}\n\nfunction InfiniteScrollRequest_tsickle_Closure_declarations() {\n/** @type {?} */\nInfiniteScrollRequest.prototype.check;\n/** @type {?} */\nInfiniteScrollRequest.prototype.pageNumber;\n/** @type {?} */\nInfiniteScrollRequest.prototype.pageSize;\n/** @type {?} */\nInfiniteScrollRequest.prototype.filter;\n}\n\n\nexport type InfiniteScrollLoadFunction = (pageNum: number, pageSize: number, filter: any) => any | Promise<any>;\n/**\n * Event raised before the `loading` function is called.\n */\nexport class InfiniteScrollLoadingEvent {\nprivate _defaultPrevented = false;\n/**\n * @param {?} pageNumber\n * @param {?} pageSize\n * @param {?} filter\n */\nconstructor(\npublic pageNumber: number,\npublic pageSize: number,\npublic filter: any) { }\n/**\n * Prevents the default behaviour of the `loading` event (loading function will not be called).\n * @return {?}\n */\npreventDefault() {\n        this._defaultPrevented = true;\n    }\n/**\n * @return {?}\n */\ndefaultPrevented(): boolean {\n        return this._defaultPrevented;\n    }\n}\n\nfunction InfiniteScrollLoadingEvent_tsickle_Closure_declarations() {\n/** @type {?} */\nInfiniteScrollLoadingEvent.prototype._defaultPrevented;\n/**\n * The index of the requested page, starting from 0.\n * @type {?}\n */\nInfiniteScrollLoadingEvent.prototype.pageNumber;\n/**\n * The number of items requested.\n * @type {?}\n */\nInfiniteScrollLoadingEvent.prototype.pageSize;\n/**\n * The filter details as provided via the `filter` binding.\n * @type {?}\n */\nInfiniteScrollLoadingEvent.prototype.filter;\n}\n\n/**\n * Event raised when the loading function result has been resolved and added to the collection.\n */\nexport class InfiniteScrollLoadedEvent {\n/**\n * @param {?} pageNumber\n * @param {?} pageSize\n * @param {?} filter\n * @param {?} data\n * @param {?} exhausted\n */\nconstructor(\npublic pageNumber: number,\npublic pageSize: number,\npublic filter: any,\npublic data: any,\npublic exhausted: boolean) { }\n}\n\nfunction InfiniteScrollLoadedEvent_tsickle_Closure_declarations() {\n/**\n * The index of the requested page, starting from 0.\n * @type {?}\n */\nInfiniteScrollLoadedEvent.prototype.pageNumber;\n/**\n * The number of items requested.\n * @type {?}\n */\nInfiniteScrollLoadedEvent.prototype.pageSize;\n/**\n * The filter details as provided via the `filter` binding.\n * @type {?}\n */\nInfiniteScrollLoadedEvent.prototype.filter;\n/**\n * The result of the promise returned from the loading function.\n * @type {?}\n */\nInfiniteScrollLoadedEvent.prototype.data;\n/**\n * True if the data is considered exhausted (number of items returned less than `pageSize`).\n * @type {?}\n */\nInfiniteScrollLoadedEvent.prototype.exhausted;\n}\n\n/**\n * Event raised if the loading function returns a rejected promise.\n */\nexport class InfiniteScrollLoadErrorEvent {\n/**\n * @param {?} pageNumber\n * @param {?} pageSize\n * @param {?} filter\n * @param {?} error\n */\nconstructor(\npublic pageNumber: number,\npublic pageSize: number,\npublic filter: any,\npublic error: any) { }\n}\n\nfunction InfiniteScrollLoadErrorEvent_tsickle_Closure_declarations() {\n/**\n * The index of the requested page, starting from 0.\n * @type {?}\n */\nInfiniteScrollLoadErrorEvent.prototype.pageNumber;\n/**\n * The number of items requested.\n * @type {?}\n */\nInfiniteScrollLoadErrorEvent.prototype.pageSize;\n/**\n * The filter details as provided via the `filter` binding.\n * @type {?}\n */\nInfiniteScrollLoadErrorEvent.prototype.filter;\n/**\n * The object provided when rejecting the promise.\n * @type {?}\n */\nInfiniteScrollLoadErrorEvent.prototype.error;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { InfiniteScrollLoadButtonDirective } from './infinite-scroll-load-button.directive';\nimport { InfiniteScrollLoadingDirective } from './infinite-scroll-loading.directive';\nimport { InfiniteScrollDirective } from './infinite-scroll.directive';\nimport { NgModule } from '@angular/core';\nexport class InfiniteScrollModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [],\n    exports: [\n        InfiniteScrollDirective,\n        InfiniteScrollLoadButtonDirective,\n        InfiniteScrollLoadingDirective\n    ],\n    declarations: [\n        InfiniteScrollDirective,\n        InfiniteScrollLoadButtonDirective,\n        InfiniteScrollLoadingDirective\n    ],\n    providers: [],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction InfiniteScrollModule_tsickle_Closure_declarations() {\n/** @type {?} */\nInfiniteScrollModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nInfiniteScrollModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable, Inject } from '@angular/core';\nexport class ScrollIntoViewService {\n/**\n * @param {?} elem\n * @param {?} scrollParent\n * @return {?}\n */\nscrollIntoView(elem: HTMLElement, scrollParent: HTMLElement) {\n        const /** @type {?} */ offsetTop = (elem.getBoundingClientRect().top + scrollParent.scrollTop) - scrollParent.getBoundingClientRect().top;\n        if (offsetTop < scrollParent.scrollTop) {\n            scrollParent.scrollTop = offsetTop;\n        } else {\n            const /** @type {?} */ offsetBottom = offsetTop + elem.offsetHeight;\n            if (offsetBottom > (scrollParent.scrollTop + scrollParent.clientHeight)) {\n                scrollParent.scrollTop = offsetBottom - scrollParent.clientHeight;\n            }\n        }\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ScrollIntoViewService_tsickle_Closure_declarations() {\n/** @type {?} */\nScrollIntoViewService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nScrollIntoViewService.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { ScrollIntoViewService } from './scroll-into-view.service';\nimport { Directive, ElementRef, Input, OnChanges, SimpleChanges } from '@angular/core';\nexport class ScrollIntoViewIfDirective implements OnChanges {\n\n     condition = false;\n     scrollParent: HTMLElement;\n/**\n * @param {?} element\n * @param {?} scrollIntoViewService\n */\nconstructor(private element: ElementRef,\nprivate scrollIntoViewService: ScrollIntoViewService) {}\n/**\n * @param {?} changes\n * @return {?}\n */\nngOnChanges(changes: SimpleChanges) {\n        if (this.condition) {\n            setTimeout(() => {\n                this.scrollIntoViewService.scrollIntoView(this.element.nativeElement, this.scrollParent);\n            });\n        }\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{ selector: '[uxScrollIntoViewIf]' }, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: ScrollIntoViewService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'condition': [{ type: Input, args: ['uxScrollIntoViewIf', ] },],\n'scrollParent': [{ type: Input },],\n};\n}\n\nfunction ScrollIntoViewIfDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nScrollIntoViewIfDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nScrollIntoViewIfDirective.ctorParameters;\n/** @type {?} */\nScrollIntoViewIfDirective.propDecorators;\n/** @type {?} */\nScrollIntoViewIfDirective.prototype.condition;\n/** @type {?} */\nScrollIntoViewIfDirective.prototype.scrollParent;\n/** @type {?} */\nScrollIntoViewIfDirective.prototype.element;\n/** @type {?} */\nScrollIntoViewIfDirective.prototype.scrollIntoViewService;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\n\nimport { ScrollIntoViewIfDirective } from './scroll-into-view-if.directive';\nimport { ScrollIntoViewService } from './scroll-into-view.service';\nexport class ScrollIntoViewIfModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [],\n    exports: [ScrollIntoViewIfDirective],\n    declarations: [ScrollIntoViewIfDirective],\n    providers: [ScrollIntoViewService],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ScrollIntoViewIfModule_tsickle_Closure_declarations() {\n/** @type {?} */\nScrollIntoViewIfModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nScrollIntoViewIfModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { InfiniteScrollModule } from '../../directives/infinite-scroll/index';\nimport { ScrollIntoViewIfModule } from '../../directives/scroll-into-view-if/index';\nimport { TypeaheadKeyService } from './typeahead-key.service';\nimport { TypeaheadComponent } from './typeahead.component';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nexport class TypeaheadModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        CommonModule,\n        InfiniteScrollModule,\n        ScrollIntoViewIfModule\n    ],\n    exports: [TypeaheadComponent],\n    declarations: [TypeaheadComponent],\n    providers: [TypeaheadKeyService],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction TypeaheadModule_tsickle_Closure_declarations() {\n/** @type {?} */\nTypeaheadModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTypeaheadModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { InfiniteScrollLoadFunction } from '../../directives/infinite-scroll/index';\nimport { TypeaheadComponent, TypeaheadKeyService, TypeaheadOptionEvent } from '../typeahead/index';\nimport { Component, ElementRef, EventEmitter, forwardRef, Inject, Input, OnChanges, OnInit, Output, SimpleChanges, TemplateRef, ViewChild } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { DOCUMENT } from '@angular/platform-browser';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { Observable } from 'rxjs/Observable';\n\nexport const /** @type {?} */ SELECT_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => SelectComponent),\n    multi: true\n};\nexport class SelectComponent implements OnInit, OnChanges, ControlValueAccessor {\nprivate _value: any;\n/**\n * @return {?}\n */\nget value() {\n        return this._value;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset value(value: any) {\n        this._value = value;\n        this.valueChange.emit(value);\n        this.propagateChange(value);\n    }\n\n     valueChange = new EventEmitter<any>();\nprivate _input = new BehaviorSubject<string>('');\n/**\n * @return {?}\n */\nget input() {\n        return this._input.getValue();\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset input(value: string) {\n        this._input.next(value);\n        this.inputChange.emit(value);\n    }\n\n     inputChange = new EventEmitter<string>();\nprivate _dropdownOpen: boolean = false;\n/**\n * @return {?}\n */\nget dropdownOpen() {\n        return this._dropdownOpen;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset dropdownOpen(value: boolean) {\n        this._dropdownOpen = value;\n        this.dropdownOpenChange.emit(value);\n    }\n\n     dropdownOpenChange = new EventEmitter<boolean>();\n\n     options: any[] | InfiniteScrollLoadFunction;\n     display: (option: any) => string | string;\n     key: (option: any) => string | string;\n     allowNull: boolean = false;\n     disabled: boolean = false;\n     dropDirection: 'up' | 'down' = 'down';\n     maxHeight: string = '250px';\n     multiple: boolean = false;\n     pageSize: number = 20;\n     placeholder: string;\n\n     loadingTemplate: TemplateRef<any>;\n     noOptionsTemplate: TemplateRef<any>;\n     optionTemplate: TemplateRef<any>;\n\n     singleInput: ElementRef;\n     multipleTypeahead: TypeaheadComponent;\n     singleTypeahead: TypeaheadComponent;\n\n    filter: Observable<string>;\n\n    propagateChange = (_: any) => { };\n/**\n * @param {?} _element\n * @param {?} _document\n * @param {?} _typeaheadKeyService\n */\nconstructor(\nprivate _element: ElementRef,\nprivate _document: HTMLDocument,\nprivate _typeaheadKeyService: TypeaheadKeyService) { }\n/**\n * @return {?}\n */\nngOnInit() {\n\n        // Changes to the input field\n        this._input.subscribe((next) => {\n            if (!this.multiple && next !== this.getDisplay(this.value)) {\n                if (this.allowNull) {\n                    this.value = null;\n                }\n            }\n        });\n\n        // Set up filter from input\n        this.filter = this._input\n            .map((input) => {\n                if (!this.multiple && input === this.getDisplay(this.value)) {\n                    return '';\n                }\n                return input;\n            })\n            .debounceTime(200);\n\n        // Changes to filter value\n        this.filter.subscribe((next) => {\n\n            // Open the dropdown when filter is nonempty.\n            if (next && next.length > 0) {\n                this.dropdownOpen = true;\n            }\n        });\n    }\n/**\n * @param {?} changes\n * @return {?}\n */\nngOnChanges(changes: SimpleChanges) {\n        if (changes.value) {\n            if (!this.multiple && changes.value.currentValue !== null) {\n                this.input = this.getDisplay(changes.value.currentValue);\n            }\n        }\n        if (changes.multiple && !changes.multiple.firstChange && changes.multiple.currentValue !== changes.multiple.previousValue) {\n            this.input = '';\n        }\n    }\n/**\n * @param {?} obj\n * @return {?}\n */\nwriteValue(obj: any): void {\n        if (obj !== undefined) {\n            this._value = obj;\n        }\n    }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnChange(fn: any): void {\n        this.propagateChange = fn;\n    }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnTouched(fn: any): void { }\n/**\n * @param {?} isDisabled\n * @return {?}\n */\nsetDisabledState(isDisabled: boolean): void {\n        this.disabled = isDisabled;\n    }\n/**\n * @param {?} event\n * @return {?}\n */\ninputClickHandler(event: MouseEvent) {\n        this.selectInputText();\n        this.dropdownOpen = true;\n    }\n/**\n * @param {?} event\n * @return {?}\n */\ninputBlurHandler(event: Event) {\n        // Close dropdown and reset text input if focus is lost\n        setTimeout(() => {\n            if (!this._element.nativeElement.contains(this._document.activeElement)) {\n                this.dropdownOpen = false;\n                if (!this.multiple) {\n                    this.input = this.getDisplay(this.value);\n                }\n            }\n        }, 200);\n    }\n/**\n * Key handler for single select only. Multiple select key handling is in TagInputComponent.\n * @param {?} event\n * @return {?}\n */\ninputKeyHandler(event: KeyboardEvent) {\n\n        // Standard keys for typeahead (up/down/esc)\n        this._typeaheadKeyService.handleKey(event, this.singleTypeahead);\n\n        switch (event.key) {\n            case 'Enter':\n                if (this.dropdownOpen) {\n                    // Set the highlighted option as the value and close\n                    this.value = this.singleTypeahead.highlighted;\n                    this.dropdownOpen = false;\n                }\n\n                // Update the input field. If dropdown isn't open then reset it to the previous value.\n                this.input = this.getDisplay(this.value);\n                event.preventDefault();\n                break;\n        }\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nsingleOptionSelected(event: TypeaheadOptionEvent) {\n        if (event.option) {\n            this.value = event.option;\n            this.dropdownOpen = false;\n        }\n    }\n/**\n * Returns the display value of the given option.\n * @param {?} option\n * @return {?}\n */\ngetDisplay(option: any): string {\n        if (option === null || option === undefined) {\n            return '';\n        }\n        if (typeof this.display === 'function') {\n            return this.display(option);\n        }\n        if (typeof this.display === 'string' && option.hasOwnProperty(this.display)) {\n            return option[ /** @type {?} */((<string>this.display))];\n        }\n        return option;\n    }\n/**\n * @return {?}\n */\nprivate selectInputText() {\n        this.singleInput.nativeElement.select();\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-select',\n    template: `\n      <ux-tag-input *ngIf=\"multiple\"\n          [(tags)]=\"value\"\n          [(input)]=\"input\"\n          [addOnPaste]=\"false\"\n          [disabled]=\"disabled\"\n          [display]=\"display\"\n          [freeInput]=\"false\"\n          [placeholder]=\"placeholder\"\n          [showTypeaheadOnClick]=\"true\">\n\n          <ux-typeahead #multipleTypeahead\n              [options]=\"options\"\n              [filter]=\"filter | async\"\n              [(open)]=\"dropdownOpen\"\n              [display]=\"display\"\n              [key]=\"key\"\n              [disabledOptions]=\"value\"\n              [dropDirection]=\"dropDirection\"\n              [maxHeight]=\"maxHeight\"\n              [pageSize]=\"pageSize\"\n              [selectFirst]=\"true\"\n              [loadingTemplate]=\"loadingTemplate\"\n              [optionTemplate]=\"optionTemplate\"\n              [noOptionsTemplate]=\"noOptionsTemplate\">\n          </ux-typeahead>\n\n      </ux-tag-input>\n\n      <div *ngIf=\"!multiple\" class=\"inner-addon right-addon\" [class.disabled]=\"disabled\">\n\n          <i class=\"hpe-icon\"\n              [class.hpe-down]=\"dropDirection === 'down'\"\n              [class.hpe-up]=\"dropDirection === 'up'\"></i>\n\n          <input #singleInput type=\"text\" class=\"form-control\"\n              [(ngModel)]=\"input\"\n              [placeholder]=\"placeholder\"\n              [disabled]=\"disabled\"\n              (click)=\"inputClickHandler($event)\"\n              (blur)=\"inputBlurHandler($event)\"\n              (keydown)=\"inputKeyHandler($event)\">\n\n          <ux-typeahead #singleTypeahead\n              [options]=\"options\"\n              [filter]=\"filter | async\"\n              [(open)]=\"dropdownOpen\"\n              [display]=\"display\"\n              [key]=\"key\"\n              [dropDirection]=\"dropDirection\"\n              [maxHeight]=\"maxHeight\"\n              [openOnFilterChange]=\"false\"\n              [pageSize]=\"pageSize\"\n              [selectFirst]=\"true\"\n              [loadingTemplate]=\"loadingTemplate\"\n              [optionTemplate]=\"optionTemplate\"\n              [noOptionsTemplate]=\"noOptionsTemplate\"\n              (optionSelected)=\"singleOptionSelected($event)\" >\n          </ux-typeahead>\n\n      </div>\n    `,\n    providers: [SELECT_VALUE_ACCESSOR]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: HTMLDocument, decorators: [{ type: Inject, args: [DOCUMENT, ] }, ]},\n{type: TypeaheadKeyService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'value': [{ type: Input },],\n'valueChange': [{ type: Output },],\n'input': [{ type: Input },],\n'inputChange': [{ type: Output },],\n'dropdownOpen': [{ type: Input },],\n'dropdownOpenChange': [{ type: Output },],\n'options': [{ type: Input },],\n'display': [{ type: Input },],\n'key': [{ type: Input },],\n'allowNull': [{ type: Input },],\n'disabled': [{ type: Input },],\n'dropDirection': [{ type: Input },],\n'maxHeight': [{ type: Input },],\n'multiple': [{ type: Input },],\n'pageSize': [{ type: Input },],\n'placeholder': [{ type: Input },],\n'loadingTemplate': [{ type: Input },],\n'noOptionsTemplate': [{ type: Input },],\n'optionTemplate': [{ type: Input },],\n'singleInput': [{ type: ViewChild, args: ['singleInput', ] },],\n'multipleTypeahead': [{ type: ViewChild, args: ['multipleTypeahead', ] },],\n'singleTypeahead': [{ type: ViewChild, args: ['singleTypeahead', ] },],\n};\n}\n\nfunction SelectComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nSelectComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSelectComponent.ctorParameters;\n/** @type {?} */\nSelectComponent.propDecorators;\n/** @type {?} */\nSelectComponent.prototype._value;\n/** @type {?} */\nSelectComponent.prototype.valueChange;\n/** @type {?} */\nSelectComponent.prototype._input;\n/** @type {?} */\nSelectComponent.prototype.inputChange;\n/** @type {?} */\nSelectComponent.prototype._dropdownOpen;\n/** @type {?} */\nSelectComponent.prototype.dropdownOpenChange;\n/** @type {?} */\nSelectComponent.prototype.options;\n/** @type {?} */\nSelectComponent.prototype.display;\n/** @type {?} */\nSelectComponent.prototype.key;\n/** @type {?} */\nSelectComponent.prototype.allowNull;\n/** @type {?} */\nSelectComponent.prototype.disabled;\n/** @type {?} */\nSelectComponent.prototype.dropDirection;\n/** @type {?} */\nSelectComponent.prototype.maxHeight;\n/** @type {?} */\nSelectComponent.prototype.multiple;\n/** @type {?} */\nSelectComponent.prototype.pageSize;\n/** @type {?} */\nSelectComponent.prototype.placeholder;\n/** @type {?} */\nSelectComponent.prototype.loadingTemplate;\n/** @type {?} */\nSelectComponent.prototype.noOptionsTemplate;\n/** @type {?} */\nSelectComponent.prototype.optionTemplate;\n/** @type {?} */\nSelectComponent.prototype.singleInput;\n/** @type {?} */\nSelectComponent.prototype.multipleTypeahead;\n/** @type {?} */\nSelectComponent.prototype.singleTypeahead;\n/** @type {?} */\nSelectComponent.prototype.filter;\n/** @type {?} */\nSelectComponent.prototype.propagateChange;\n/** @type {?} */\nSelectComponent.prototype._element;\n/** @type {?} */\nSelectComponent.prototype._document;\n/** @type {?} */\nSelectComponent.prototype._typeaheadKeyService;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","\nexport class TagInputEvent {\nprivate _defaultPrevented = false;\n/**\n * @param {?} tag\n */\nconstructor(public tag: any) {}\n/**\n * @return {?}\n */\npreventDefault() {\n        this._defaultPrevented = true;\n    }\n/**\n * @return {?}\n */\ndefaultPrevented(): boolean {\n        return this._defaultPrevented;\n    }\n}\n\nfunction TagInputEvent_tsickle_Closure_declarations() {\n/** @type {?} */\nTagInputEvent.prototype._defaultPrevented;\n/** @type {?} */\nTagInputEvent.prototype.tag;\n}\n","import { TypeaheadComponent, TypeaheadKeyService } from '../typeahead/index';\nimport { TypeaheadOptionEvent } from '../typeahead/typeahead-event';\nimport { TagInputEvent } from './tag-input-event';\nimport {\n    AfterContentInit,\n    Component,\n    ContentChildren,\n    ElementRef,\n    EventEmitter,\n    forwardRef,\n    HostListener,\n    Inject,\n    Input,\n    OnChanges,\n    OnInit,\n    Output,\n    QueryList,\n    SimpleChanges,\n    TemplateRef,\n    ViewChild\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALIDATORS, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { DOCUMENT } from '@angular/platform-browser';\n\n\nconst /** @type {?} */ TAGINPUT_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => TagInputComponent),\n    multi: true\n};\nconst /** @type {?} */ TAGINPUT_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => TagInputComponent),\n    multi: true\n};\nexport class TagInputComponent implements OnInit, AfterContentInit, OnChanges, ControlValueAccessor {\nprivate _tags: any[] = [];\n/**\n * @return {?}\n */\nget tags() {\n        if (!this._tags) {\n            this._tags = [];\n        }\n        return this._tags;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset tags(value: any[]) {\n        this._tags = value;\n        this.onChangeHandler(this._tags);\n        this.tagsChange.emit(this._tags);\n    }\n\n     tagsChange = new EventEmitter<any[]>();\nprivate _input: string = '';\n/**\n * @return {?}\n */\nget input() {\n        return this._input;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset input(value: string) {\n        this._input = value;\n        this.inputChange.emit(value);\n    }\n\n     inputChange = new EventEmitter<string>();\n\n     display: (option: any) => string | string;\n     addOnPaste: boolean = true;\n     disabled: boolean = false;\n     enforceTagLimits: boolean = false;\n     freeInput: boolean = true;\n     maxTags: number = Number.MAX_VALUE;\n     minTags: number = 0;\n     placeholder: string = '';\n     showTypeaheadOnClick: boolean = false;\n     tagDelimiters: string = '';\n     tagPattern: RegExp;\n     tagTemplate: TemplateRef<any>;\n     tagClass: TagClassFunction = () => undefined;\n     validationErrors: any = {};\n     createTagHandler: (value: string) => any;\n\n     tagAdding = new EventEmitter<TagInputEvent>();\n     tagAdded = new EventEmitter<TagInputEvent>();\n     tagInvalidated = new EventEmitter<TagInputEvent>();\n     tagRemoving = new EventEmitter<TagInputEvent>();\n     tagRemoved = new EventEmitter<TagInputEvent>();\n     tagClick = new EventEmitter<TagInputEvent>();\n\n     typeaheadQuery: QueryList<TypeaheadComponent>;\n\n     tagInput: ElementRef;\nprivate _defaultTagTemplate: TemplateRef<any>;\n\n    selectedIndex: number = -1;\n\n    tagApi: TagApi = {\n        getTagDisplay: this.getTagDisplay.bind(this),\n        removeTagAt: this.removeTagAt.bind(this),\n        canRemoveTagAt: this.canRemoveTagAt.bind(this)\n    };\n\n    valid: boolean = true;\n    inputValid: boolean = true;\n\n    typeahead: TypeaheadComponent;\nprivate onChangeHandler: (_: any) => void = () => { };\nprivate onTouchedHandler: () => void = () => { };\n/**\n * @param {?} _element\n * @param {?} _document\n * @param {?} _typeaheadKeyService\n */\nconstructor(\nprivate _element: ElementRef,\nprivate _document: Document,\nprivate _typeaheadKeyService: TypeaheadKeyService) { }\n/**\n * @return {?}\n */\nngOnInit() {\n        if (!this.tagTemplate) {\n            this.tagTemplate = this._defaultTagTemplate;\n        }\n    }\n/**\n * @return {?}\n */\nngAfterContentInit() {\n        // Watch for optional child typeahead control\n        this.connectTypeahead(this.typeaheadQuery.first);\n        this.typeaheadQuery.changes.subscribe((query) => {\n            this.connectTypeahead(query.first);\n        });\n    }\n/**\n * @param {?} changes\n * @return {?}\n */\nngOnChanges(changes: SimpleChanges) {\n        if (changes.disabled) {\n            if (changes.disabled.currentValue) {\n                // Clear selection and close dropdown\n                this.selectedIndex = -1;\n                if (this.typeahead) {\n                    this.typeahead.open = false;\n                }\n            }\n        }\n\n        // Update validation status\n        this.validate();\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nwriteValue(value: any[]) {\n        if (value) {\n            this.tags = value;\n        }\n    }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnChange(fn: any) {\n        this.onChangeHandler = fn;\n    }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnTouched(fn: any) {\n        this.onTouchedHandler = fn;\n    }\n/**\n * Validate the value of the control (tags property).\n * @return {?}\n */\nvalidate() {\n        this.valid = true;\n        let /** @type {?} */ tagRangeError = null;\n        if (this.tags && (this.tags.length < this.minTags || this.tags.length > this.maxTags)) {\n            tagRangeError = {\n                given: this.tags.length,\n                min: this.minTags,\n                max: this.maxTags\n            };\n            this.valid = false;\n        }\n        this.validationErrors['tagRangeError'] = tagRangeError;\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nkeyHandler(event: KeyboardEvent) {\n\n        if (this.disabled) { return; }\n\n        // Get the input field cursor location\n        const /** @type {?} */ inputCursorPos = this.tagInput.nativeElement.selectionStart;\n\n        // Determine if the input field has any text selected\n        const /** @type {?} */ hasSelection = this.tagInput.nativeElement.selectionStart !== this.tagInput.nativeElement.selectionEnd;\n\n        // Determine if a tag has focus\n        const /** @type {?} */ tagSelected = this.isValidTagIndex(this.selectedIndex);\n        \n        const /** @type {?} */ inputLength = this.input ? this.input.length : 0;\n\n        // Check whether the arrow keys can move the selection. Otherwise the input field takes the event.\n        const /** @type {?} */ canNavigateLeft = tagSelected || (inputCursorPos <= 0 && !hasSelection);\n        const /** @type {?} */ canNavigateRight = tagSelected || (inputCursorPos >= inputLength && !hasSelection);\n\n        // Forward key events to the typeahead component.\n        this._typeaheadKeyService.handleKey(event, this.typeahead);\n\n        switch (event.key) {\n            case 'Enter':\n                // Check if a typeahead option is highlighted\n                if (this.typeahead && this.typeahead.open && this.typeahead.highlighted) {\n                    // Add the typeahead option as a tag, clear the input, and close the dropdown\n                    this.commitTypeahead(this.typeahead.highlighted);\n                    this.typeahead.open = false;\n                } else {\n                    // Validate and add the input text as a tag, if possible\n                    this.commitInput();\n                }\n                event.preventDefault();\n                break;\n            case 'Backspace':\n                if (canNavigateLeft) {\n                    this.backspace();\n                    event.stopPropagation();\n                    event.preventDefault();\n                }\n                break;\n            case 'Delete':\n            case 'Del':\n                if (tagSelected) {\n                    this.removeTagAt(this.selectedIndex);\n                }\n                break;\n            case 'ArrowLeft':\n            case 'Left':\n                if (canNavigateLeft) {\n                    this.moveSelection(-1);\n                    event.preventDefault();\n                }\n                break;\n            case 'ArrowRight':\n            case 'Right':\n                if (canNavigateRight) {\n                    this.moveSelection(1);\n                    event.preventDefault();\n                }\n                break;\n        }\n\n        // Check for keys in the tagDelimiters\n        if (this.tagDelimiters && this.tagDelimiters.indexOf(this.getKeyChar(event)) >= 0) {\n            // Commit previous text\n            this.commitInput();\n            event.stopPropagation();\n            event.preventDefault();\n        }\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nfocusOutHandler(event: FocusEvent) {\n        // Close the dropdown on blur\n        setTimeout(() => {\n            if (!this._element.nativeElement.contains(this._document.activeElement)) {\n                this.selectedIndex = -1;\n                if (this.typeahead) {\n                    this.typeahead.open = false;\n                }\n            }\n        }, 200);\n    }\n/**\n * @param {?} event\n * @param {?} tag\n * @param {?} index\n * @return {?}\n */\ntagClickHandler(event: MouseEvent, tag: any, index: number) {\n\n        if (this.disabled) { return; }\n\n        // Send tagClick event\n        const /** @type {?} */ tagClickEvent = new TagInputEvent(tag);\n        this.tagClick.emit(tagClickEvent);\n\n        // Prevent focus if preventDefault() was called\n        if (tagClickEvent.defaultPrevented()) {\n            event.preventDefault();\n            return;\n        }\n\n        // Select the tag (for IE that doesn't propagate focus)\n        this.selectTagAt(index);\n    }\n/**\n * @return {?}\n */\ninputClickHandler() {\n\n        if (this.disabled) { return; }\n\n        if (this.typeahead && this.showTypeaheadOnClick) {\n            this.typeahead.open = true;\n        }\n    }\n/**\n * @return {?}\n */\ninputFocusHandler() {\n\n        if (this.disabled) { return; }\n\n        this.selectInput();\n    }\n/**\n * @param {?} event\n * @return {?}\n */\ninputPasteHandler(event: ClipboardEvent) {\n\n        if (this.disabled) { return; }\n\n        if (this.addOnPaste) {\n            // Get text from the clipboard\n            let /** @type {?} */ input: string = null;\n            if (event.clipboardData) {\n                input = event.clipboardData.getData('text/plain');\n            } else if (( /** @type {?} */((<any>window))).clipboardData) {\n                // Internet Explorer only\n                input = ( /** @type {?} */((<any>window))).clipboardData.getData('Text');\n            }\n\n            // Commit the clipboard text directly\n            if (this.commit(input)) {\n                this.selectInput();\n                event.stopPropagation();\n                event.preventDefault();\n            }\n        }\n    }\n/**\n * @param {?} event\n * @return {?}\n */\ntypeaheadOptionSelectedHandler(event: TypeaheadOptionEvent) {\n\n        if (this.disabled) { return; }\n\n        // When the typeahead sends the optionSelected event, commit the object directly\n        this.commitTypeahead(event.option);\n    }\n/**\n * Commit the current input value and clear the input field if successful.\n * @return {?}\n */\ncommitInput() {\n        if (this.commit(this.input)) {\n            this.selectInput();\n            this.input = '';\n        }\n    }\n/**\n * Commit the given tag object and clear the input if successful.\n * @param {?} tag\n * @return {?}\n */\ncommitTypeahead(tag: any) {\n        if (this.addTag(tag)) {\n            this.selectInput();\n            this.input = '';\n        }\n    }\n/**\n * Commit the given string value as one or more tags, if validation passes. Returns true if the tag(s) were created.\n * @param {?} input\n * @return {?}\n */\ncommit(input: string): boolean {\n        if (input && this.freeInput) {\n\n            // Split the tags by the tagDelimiters if configured\n            const /** @type {?} */ newTags = this.splitTagInput(input);\n\n            // Check tag validation for all of the individual values\n            let /** @type {?} */ allValid = true;\n            for (let /** @type {?} */ newTag of newTags) {\n                const /** @type {?} */ valid = this.validateTag(newTag);\n                if (!valid) {\n                    allValid = false;\n                }\n            }\n\n            // Add the tags if all are valid\n            if (allValid) {\n                for (let /** @type {?} */ newTag of newTags) {\n                    this.addTag(this.createTag(newTag));\n                }\n\n                return true;\n            }\n        }\n\n        return false;\n    }\n/**\n * If no tag is selected, select the rightmost tag. If a tag is selected, remove it.\n * @return {?}\n */\nbackspace() {\n\n        if (this.disabled) { return; }\n\n        if (!this.isValidTagIndex(this.selectedIndex)) {\n            this.selectTagAt(this.tags.length - 1);\n        } else {\n            this.removeTagAt(this.selectedIndex);\n        }\n    }\n/**\n * Move the highlighted option forwards or backwards in the list. Wraps at the limits.\n * @param {?} d Value to be added to the selected index, i.e. -1 to move backwards, +1 to move forwards.\n * @return {?}\n */\nmoveSelection(d: number) {\n\n        if (this.disabled) { return; }\n\n        if (this.isValidSelectIndex(this.selectedIndex)) {\n            this.selectedIndex += d;\n\n            // Do wrapping of selection when out of bounds\n            if (this.selectedIndex < 0) {\n                this.selectedIndex = this.tags.length;\n            } else if (this.selectedIndex > this.tags.length) {\n                this.selectedIndex = 0;\n            }\n        }\n    }\n/**\n * Returns a value to display for the given tag. Uses display function/property name if set, otherwise assumes that the tag is a simple string.\n * @param {?} tag\n * @return {?}\n */\ngetTagDisplay(tag: any): string {\n        if (typeof this.display === 'function') {\n            return this.display(tag);\n        }\n        if (typeof this.display === 'string') {\n            return tag[ /** @type {?} */((<string>this.display))];\n        }\n        return tag;\n    }\n/**\n * Returns true if the given index is selected (tag index or input field).\n * @param {?} index\n * @return {?}\n */\nisSelected(index: number): boolean {\n        return index === this.selectedIndex;\n    }\n/**\n * Select the tag at the given index. Does nothing if disabled is true.\n * @param {?} tagIndex\n * @return {?}\n */\nselectTagAt(tagIndex: number) {\n\n        if (this.disabled) { return; }\n\n        if (this.isValidTagIndex(tagIndex)) {\n            this.selectedIndex = tagIndex;\n        }\n    }\n/**\n * Select the input field, giving it focus. Does nothing if disabled is true.\n * @return {?}\n */\nselectInput() {\n\n        if (this.disabled) { return; }\n\n        this.selectedIndex = this.tags.length;\n    }\n/**\n * Remove the tag at the given index. Does nothing if disabled is true or the minTags property prevents removal.\n * @param {?} tagIndex\n * @return {?}\n */\nremoveTagAt(tagIndex: number) {\n\n        if (this.disabled || !this.canRemoveTagAt(tagIndex)) { return; }\n\n        // Check that the tagIndex is in range\n        if (this.isValidTagIndex(tagIndex)) {\n            const /** @type {?} */ tag = this.tags[tagIndex];\n            const /** @type {?} */ tagRemovingEvent = new TagInputEvent(tag);\n            this.tagRemoving.emit(tagRemovingEvent);\n            if (!tagRemovingEvent.defaultPrevented()) {\n                // Select input first to avoid issues with dropping focus\n                this.selectInput();\n                // Remove the tag\n                this.tags.splice(tagIndex, 1);\n                // Set focus again since indices have changed\n                this.selectInput();\n                this.tagRemoved.emit(new TagInputEvent(tag));\n                this.validate();\n            }\n        }\n    }\n/**\n * Returns true if the tag at the given index can be removed.\n * @param {?} tagIndex\n * @return {?}\n */\ncanRemoveTagAt(tagIndex: number): boolean {\n        return this.tags.length > this.minTags || !this.enforceTagLimits;\n    }\n/**\n * Returns true if the input field should be available.\n * @return {?}\n */\nisInputVisible() {\n        return this.tags.length < this.maxTags || !this.enforceTagLimits;\n    }\n/**\n * Returns true if any part of the control has focus.\n * @return {?}\n */\nhasFocus(): boolean {\n        return this.isValidSelectIndex(this.selectedIndex);\n    }\n/**\n * @param {?} typeahead\n * @return {?}\n */\nprivate connectTypeahead(typeahead: TypeaheadComponent) {\n        this.typeahead = typeahead;\n        if (this.typeahead) {\n            // Set up event handler for selected options\n            this.typeahead.optionSelected.subscribe(this.typeaheadOptionSelectedHandler.bind(this));\n        }\n    }\n/**\n * Validate the given tagValue with the tagPattern, if set. Update validationErrors on validation failure.\n * @param {?} tagValue\n * @return {?}\n */\nprivate validateTag(tagValue: string): boolean {\n        let /** @type {?} */ inputPattern = null;\n        this.inputValid = true;\n        if (this.tagPattern && !this.tagPattern.test(tagValue)) {\n            inputPattern = {\n                given: tagValue,\n                pattern: this.tagPattern\n            };\n            this.inputValid = false;\n        }\n        this.validationErrors['inputPattern'] = inputPattern;\n        return this.inputValid;\n    }\n/**\n * Create a tag object for the given tagValue. If createTagHandler is specified, use it; otherwise if displayProperty is specified, create an object with the tagValue as the single named property; otherwise return the tagValue itself.\n * @param {?} tagValue\n * @return {?}\n */\nprivate createTag(tagValue: string): any {\n        let /** @type {?} */ tag = null;\n        if (this.createTagHandler && typeof this.createTagHandler === 'function') {\n            tag = this.createTagHandler(tagValue);\n        } else if (typeof this.display === 'string') {\n            tag = {};\n            tag[ /** @type {?} */((<string>this.display))] = tagValue;\n        } else {\n            tag = tagValue;\n        }\n        return tag;\n    }\n/**\n * Add a tag object, calling the tagAdding and tagAdded events. Returns true if the tag was added to the tags array.\n * @param {?} tag\n * @return {?}\n */\nprivate addTag(tag: any): boolean {\n        if (tag) {\n            // Verify that the new tag can be displayed\n            const /** @type {?} */ displayValue = this.getTagDisplay(tag);\n            if (displayValue && typeof displayValue === 'string' && displayValue.length > 0) {\n                const /** @type {?} */ tagAddingEvent = new TagInputEvent(tag);\n                this.tagAdding.emit(tagAddingEvent);\n                if (!tagAddingEvent.defaultPrevented()) {\n                    this.tags = this.tags || [];\n                    this.tags.push(tag);\n                    this.tagAdded.emit(new TagInputEvent(tag));\n                    this.validate();\n                    return true;\n                }\n            }\n        }\n\n        return false;\n    }\n/**\n * Returns true if the given tagIndex is a valid tag index.\n * @param {?} tagIndex\n * @return {?}\n */\nprivate isValidTagIndex(tagIndex: number): boolean {\n        return tagIndex >= 0 && tagIndex < this.tags.length;\n    }\n/**\n * Returns true if the given index is a valid selection index (tags or input field).\n * @param {?} index\n * @return {?}\n */\nprivate isValidSelectIndex(index: number): boolean {\n        return index >= 0 && index <= this.tags.length;\n    }\n/**\n * Returns the character corresponding to the given key event, mainly for IE compatibility.\n * @param {?} event\n * @return {?}\n */\nprivate getKeyChar(event: KeyboardEvent): string {\n        switch (event.key) {\n            case 'Spacebar':\n                return ' ';\n        }\n        return event.key;\n    }\n/**\n * Returns an array of strings corresponding to the input string split by the tagDelimiters characters.\n * @param {?} input\n * @return {?}\n */\nprivate splitTagInput(input: string): string[] {\n        let /** @type {?} */ tagValues = [input];\n        if (this.tagDelimiters && typeof this.tagDelimiters === 'string') {\n            const /** @type {?} */ escapedDelimiters = this.tagDelimiters.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n            const /** @type {?} */ delimiterRegex = new RegExp(`[${escapedDelimiters}]`, 'g');\n            tagValues = input.split(delimiterRegex).filter((s) => s.length > 0);\n        }\n        return tagValues;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-tag-input',\n    template: `\n      <ol>\n          <li *ngFor=\"let tag of tags; let i = index\" class=\"ux-tag\"\n              [class.disabled]=\"disabled\"\n              [ngClass]=\"tagClass(tag, i, isSelected(i))\"\n              [attr.tabindex]=\"disabled ? null : i\"\n              [focusIf]=\"isSelected(i)\"\n              (click)=\"tagClickHandler($event, tag, i)\"\n              (focus)=\"selectTagAt(i)\">\n        \n              <ng-container [ngTemplateOutlet]=\"tagTemplate\"\n                  [ngTemplateOutletContext]=\"{tag: tag, index: i, disabled: disabled, api: tagApi}\">\n              </ng-container>\n\n          </li>\n          <li *ngIf=\"isInputVisible()\" class=\"ux-tag-input\">\n              <input #tagInput type=\"text\" class=\"ux-tag-input\"\n                  [(ngModel)]=\"input\"\n                  [class.invalid]=\"!inputValid\"\n                  [placeholder]=\"disabled ? '' : (placeholder || '')\"\n                  [disabled]=\"disabled\"\n                  [focusIf]=\"isSelected(tags.length)\"\n                  (click)=\"inputClickHandler()\"\n                  (focus)=\"inputFocusHandler()\"\n                  (paste)=\"inputPasteHandler($event)\">\n          </li>\n      </ol>\n\n      <ng-content #typeahead></ng-content>\n\n      <ng-template #defaultTagTemplate let-tag=\"tag\" let-index=\"index\" let-disabled=\"disabled\" let-api=\"api\">\n          <span class=\"ux-tag-text\">{{api.getTagDisplay(tag)}}</span>\n          <button *ngIf=\"api.canRemoveTagAt(index)\" type=\"button\" class=\"ux-tag-remove\" [disabled]=\"disabled\" (click)=\"api.removeTagAt(index); $event.stopPropagation();\"><i class=\"hpe-icon hpe-close\"></i></button>\n      </ng-template>\n    `,\n    providers: [TAGINPUT_VALUE_ACCESSOR, TAGINPUT_VALIDATOR],\n    host: {\n        '[class.disabled]': 'disabled',\n        '[class.focus]': 'hasFocus()',\n        '[class.invalid]': '!valid || !inputValid'\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Document, decorators: [{ type: Inject, args: [DOCUMENT, ] }, ]},\n{type: TypeaheadKeyService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'tags': [{ type: Input, args: ['tags', ] },],\n'tagsChange': [{ type: Output },],\n'input': [{ type: Input, args: ['input', ] },],\n'inputChange': [{ type: Output },],\n'display': [{ type: Input },],\n'addOnPaste': [{ type: Input },],\n'disabled': [{ type: Input },],\n'enforceTagLimits': [{ type: Input },],\n'freeInput': [{ type: Input },],\n'maxTags': [{ type: Input },],\n'minTags': [{ type: Input },],\n'placeholder': [{ type: Input },],\n'showTypeaheadOnClick': [{ type: Input },],\n'tagDelimiters': [{ type: Input },],\n'tagPattern': [{ type: Input },],\n'tagTemplate': [{ type: Input },],\n'tagClass': [{ type: Input },],\n'validationErrors': [{ type: Input },],\n'createTagHandler': [{ type: Input, args: ['createTag', ] },],\n'tagAdding': [{ type: Output },],\n'tagAdded': [{ type: Output },],\n'tagInvalidated': [{ type: Output },],\n'tagRemoving': [{ type: Output },],\n'tagRemoved': [{ type: Output },],\n'tagClick': [{ type: Output },],\n'typeaheadQuery': [{ type: ContentChildren, args: [TypeaheadComponent, ] },],\n'tagInput': [{ type: ViewChild, args: ['tagInput', ] },],\n'_defaultTagTemplate': [{ type: ViewChild, args: ['defaultTagTemplate', ] },],\n'keyHandler': [{ type: HostListener, args: ['keydown', ['$event'], ] },],\n'focusOutHandler': [{ type: HostListener, args: ['focusout', ['$event'], ] },],\n};\n}\n\nfunction TagInputComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nTagInputComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTagInputComponent.ctorParameters;\n/** @type {?} */\nTagInputComponent.propDecorators;\n/** @type {?} */\nTagInputComponent.prototype._tags;\n/** @type {?} */\nTagInputComponent.prototype.tagsChange;\n/** @type {?} */\nTagInputComponent.prototype._input;\n/** @type {?} */\nTagInputComponent.prototype.inputChange;\n/** @type {?} */\nTagInputComponent.prototype.display;\n/** @type {?} */\nTagInputComponent.prototype.addOnPaste;\n/** @type {?} */\nTagInputComponent.prototype.disabled;\n/** @type {?} */\nTagInputComponent.prototype.enforceTagLimits;\n/** @type {?} */\nTagInputComponent.prototype.freeInput;\n/** @type {?} */\nTagInputComponent.prototype.maxTags;\n/** @type {?} */\nTagInputComponent.prototype.minTags;\n/** @type {?} */\nTagInputComponent.prototype.placeholder;\n/** @type {?} */\nTagInputComponent.prototype.showTypeaheadOnClick;\n/** @type {?} */\nTagInputComponent.prototype.tagDelimiters;\n/** @type {?} */\nTagInputComponent.prototype.tagPattern;\n/** @type {?} */\nTagInputComponent.prototype.tagTemplate;\n/** @type {?} */\nTagInputComponent.prototype.tagClass;\n/** @type {?} */\nTagInputComponent.prototype.validationErrors;\n/** @type {?} */\nTagInputComponent.prototype.createTagHandler;\n/** @type {?} */\nTagInputComponent.prototype.tagAdding;\n/** @type {?} */\nTagInputComponent.prototype.tagAdded;\n/** @type {?} */\nTagInputComponent.prototype.tagInvalidated;\n/** @type {?} */\nTagInputComponent.prototype.tagRemoving;\n/** @type {?} */\nTagInputComponent.prototype.tagRemoved;\n/** @type {?} */\nTagInputComponent.prototype.tagClick;\n/** @type {?} */\nTagInputComponent.prototype.typeaheadQuery;\n/** @type {?} */\nTagInputComponent.prototype.tagInput;\n/** @type {?} */\nTagInputComponent.prototype._defaultTagTemplate;\n/** @type {?} */\nTagInputComponent.prototype.selectedIndex;\n/** @type {?} */\nTagInputComponent.prototype.tagApi;\n/** @type {?} */\nTagInputComponent.prototype.valid;\n/** @type {?} */\nTagInputComponent.prototype.inputValid;\n/** @type {?} */\nTagInputComponent.prototype.typeahead;\n/** @type {?} */\nTagInputComponent.prototype.onChangeHandler;\n/** @type {?} */\nTagInputComponent.prototype.onTouchedHandler;\n/** @type {?} */\nTagInputComponent.prototype._element;\n/** @type {?} */\nTagInputComponent.prototype._document;\n/** @type {?} */\nTagInputComponent.prototype._typeaheadKeyService;\n}\n\n\n/**\n * The API available to tag templates.\n */\nexport interface TagApi {\n    /**\n     * Returns the display value of the given tag, according to the displayProperty property. \n     */\n    getTagDisplay: (tag: any) => string;\n\n    /**\n     * Removes the tag at the given index, if possible.\n     */\n    removeTagAt: (index: number) => void;\n\n    /**\n     * \tReturns true if the tag at the given index can be removed.\n     */\n    canRemoveTagAt: (index: number) => boolean;\n}\n\n/**\n * The function used to return custom class information, for use in `ngClass`.\n */\nexport type TagClassFunction = (tag: any, index: number, selected: boolean) => (string | string[] | Set<string>);\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, Input, OnChanges, SimpleChanges, ElementRef } from '@angular/core';\nexport class FocusIfDirective implements OnChanges {\n\n     focusIf: boolean = false;\n/**\n * @param {?} elementRef\n */\nconstructor(private elementRef: ElementRef) { }\n/**\n * @param {?} changes\n * @return {?}\n */\nngOnChanges(changes: SimpleChanges): void {\n        if (changes.focusIf && changes.focusIf.previousValue === false && changes.focusIf.currentValue === true) {\n            this.elementRef.nativeElement.focus();\n        }\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{ selector: '[focusIf]' }, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'focusIf': [{ type: Input },],\n};\n}\n\nfunction FocusIfDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nFocusIfDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFocusIfDirective.ctorParameters;\n/** @type {?} */\nFocusIfDirective.propDecorators;\n/** @type {?} */\nFocusIfDirective.prototype.focusIf;\n/** @type {?} */\nFocusIfDirective.prototype.elementRef;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { FocusIfDirective } from './focus-if.directive';\nexport class FocusIfModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    exports: [FocusIfDirective],\n    declarations: [FocusIfDirective]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction FocusIfModule_tsickle_Closure_declarations() {\n/** @type {?} */\nFocusIfModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFocusIfModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { FocusIfModule } from '../../directives/focus-if/index';\nimport { TypeaheadModule } from '../typeahead/index';\nimport { TagInputComponent } from './tag-input.component';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nexport class TagInputModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        CommonModule,\n        FormsModule,\n        FocusIfModule,\n        TypeaheadModule\n    ],\n    exports: [TagInputComponent],\n    declarations: [TagInputComponent],\n    providers: [],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction TagInputModule_tsickle_Closure_declarations() {\n/** @type {?} */\nTagInputModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTagInputModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { InfiniteScrollModule } from '../../directives/infinite-scroll/index';\nimport { TagInputModule } from '../tag-input/index';\nimport { TypeaheadModule } from '../typeahead/index';\nimport { SelectComponent } from './select.component';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nexport class SelectModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        CommonModule,\n        FormsModule,\n        InfiniteScrollModule,\n        TagInputModule,\n        TypeaheadModule\n    ],\n    exports: [SelectComponent],\n    declarations: [SelectComponent]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction SelectModule_tsickle_Closure_declarations() {\n/** @type {?} */\nSelectModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSelectModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { SearchBuilderComponent } from './search-builder.component';\nimport { SearchBuilderGroupComponent } from './search-builder-group/search-builder-group.component';\nimport { SearchTextComponent } from './search-components/text/text.component';\nimport { SearchDateComponent } from './search-components/date/date.component';\nimport { SearchBuilderOutletDirective } from './search-builder-outlet/search-builder-outlet.directive';\nimport { BaseSearchComponent } from './search-components/base-search.component';\nimport { DateTimePickerModule } from '../date-time-picker/date-time-picker.module';\nimport { PopoverModule } from 'ngx-bootstrap/popover';\nimport { SearchDateRangeComponent } from './search-components/date-range/date-range.component';\nimport { SearchSelectComponent } from './search-components/select/select.component';\nimport { SelectModule } from '../select/index';\nexport class SearchBuilderModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  imports: [\n    CommonModule,\n    FormsModule,\n    DateTimePickerModule,\n    PopoverModule.forRoot(),\n    SelectModule\n  ],\n  exports: [\n    SearchBuilderComponent,\n    SearchBuilderGroupComponent,\n    BaseSearchComponent\n  ],\n  declarations: [\n    SearchBuilderComponent,\n    SearchBuilderGroupComponent,\n    SearchTextComponent,\n    SearchDateComponent,\n    SearchDateRangeComponent,\n    SearchBuilderOutletDirective,\n    SearchSelectComponent,\n    BaseSearchComponent\n  ],\n  entryComponents: [\n    SearchTextComponent,\n    SearchDateComponent,\n    SearchDateRangeComponent,\n    SearchSelectComponent\n  ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction SearchBuilderModule_tsickle_Closure_declarations() {\n/** @type {?} */\nSearchBuilderModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSearchBuilderModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Input, EventEmitter, Output, OnInit, ElementRef, ViewChild, HostListener, AfterViewInit, OnDestroy, DoCheck, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { Subscription } from 'rxjs/Subscription';\nimport'rxjs/add/observable/fromEvent';\nimport'rxjs/add/operator/switchMap';\nimport'rxjs/add/operator/takeUntil';\nimport { ColorService } from '../../services/color/index';\nexport class SliderComponent implements OnInit, AfterViewInit, DoCheck, OnDestroy {\n\n     value: SliderValue | number = 0;\n     options: SliderOptions;\n     valueChange: EventEmitter<SliderValue | number> = new EventEmitter<SliderValue | number>();\n\n     lowerThumb: ElementRef;\n     lowerTooltip: ElementRef;\n     upperThumb: ElementRef;\n     upperTooltip: ElementRef;\n     track: ElementRef;\nprivate _value: SliderValue | number;\n\n    // expose enums to Angular view\n    sliderType = SliderType;\n    sliderStyle = SliderStyle;\n    sliderSize = SliderSize;\n    sliderThumb = SliderThumb;\n    sliderTickType = SliderTickType;\n    sliderThumbEvent = SliderThumbEvent;\n\n    tracks = {\n        lower: {\n            size: 0,\n            color: ''\n        },\n        middle: {\n            size: 0,\n            color: ''\n        },\n        upper: {\n            size: 0,\n            color: ''\n        }\n    };\n\n    tooltips = {\n        lower: {\n            visible: false,\n            position: 0,\n            label: ''\n        },\n        upper: {\n            visible: false,\n            position: 0,\n            label: ''\n        }\n    };\n\n    thumbs = {\n        lower: {\n            hover: false,\n            drag: false,\n            position: 0,\n            order: 100,\n            value: /** @type {?} */(( null as number))\n        },\n        upper: {\n            hover: false,\n            drag: false,\n            position: 0,\n            order: 101,\n            value: /** @type {?} */(( null as number))\n        }\n    };\n\n    // store all the ticks to display\n    ticks: SliderTick[] = [];\n    defaultOptions: SliderOptions;\nprivate _lowerThumbDown: Observable<MouseEvent>;\nprivate _upperThumbDown: Observable<MouseEvent>;\nprivate _mouseMove: Observable<MouseEvent> = Observable.fromEvent(document, 'mousemove');\nprivate _mouseUp: Observable<MouseEvent> = Observable.fromEvent(document, 'mouseup');\nprivate _lowerDrag: Subscription;\nprivate _upperDrag: Subscription;\n/**\n * @param {?} colorService\n * @param {?} _changeDetectorRef\n */\nconstructor(colorService: ColorService,\nprivate _changeDetectorRef: ChangeDetectorRef) {\n\n        // setup default options\n        this.defaultOptions = {\n            type: SliderType.Value,\n            handles: {\n                style: SliderStyle.Button,\n                callout: {\n                    trigger: SliderCalloutTrigger.None,\n                    background: colorService.getColor('grey2').toHex(),\n                    color: '#fff',\n                    formatter: (value: number): string | number => value\n                }\n            },\n            track: {\n                height: SliderSize.Wide,\n                min: 0,\n                max: 100,\n                ticks: {\n                    snap: SliderSnap.None,\n                    major: {\n                        show: true,\n                        steps: 10,\n                        labels: true,\n                        formatter: (value: number): string | number => value\n                    },\n                    minor: {\n                        show: true,\n                        steps: 5,\n                        labels: false,\n                        formatter: (value: number): string | number => value\n                    }\n                },\n                colors: {\n                    lower: colorService.getColor('grey6').toHex(),\n                    range: colorService.getColor('accent').setAlpha(0.75).toRgba(),\n                    higher: colorService.getColor('grey6').toHex()\n                }\n            }\n        };\n    }\n/**\n * @return {?}\n */\nngOnInit() {\n\n        // set up event observables\n        this.initObservables();\n\n        this.updateOptions();\n        this.updateValues();\n\n        this.setThumbState(SliderThumb.Lower, false, false);\n        this.setThumbState(SliderThumb.Upper, false, false);\n\n        // emit the initial value\n        this.valueChange.next(this.clone(this.value));\n    }\n/**\n * @return {?}\n */\nngDoCheck() {\n\n        if (this.detectValueChange(this.value, this._value)) {\n            this.updateValues();\n            this._value = this.clone(this.value);\n        }\n    }\n/**\n * @return {?}\n */\nngAfterViewInit() {\n        // persistent tooltips will need positioned correctly at this stage\n        setTimeout(() => {\n            this.updateTooltipPosition(SliderThumb.Lower);\n            this.updateTooltipPosition(SliderThumb.Upper);\n\n            // mark as dirty\n            this._changeDetectorRef.markForCheck();\n        });\n    }\n/**\n * @return {?}\n */\nngOnDestroy() {\n        this._lowerDrag.unsubscribe();\n        this._upperDrag.unsubscribe();\n    }\n/**\n * @param {?} thumb\n * @return {?}\n */\ngetFormattedValue(thumb: SliderThumb): string | number {\n        return this.options.handles.callout.formatter(this.getThumbState(thumb).value);\n    }\n/**\n * @return {?}\n */\nprivate initObservables(): void {\n\n        // when a user begins to drag lower thumb - subscribe to mouse move events until the mouse is lifted\n        this._lowerThumbDown = Observable.fromEvent(this.lowerThumb.nativeElement, 'mousedown');\n\n        this._lowerDrag = this._lowerThumbDown.switchMap(event => {\n            event.preventDefault();\n            return this._mouseMove.takeUntil(this._mouseUp);\n        }).subscribe(event => {\n            event.preventDefault();\n            this.updateThumbPosition(event, SliderThumb.Lower);\n        });\n\n        // when a user begins to drag upper thumb - subscribe to mouse move events until the mouse is lifted\n        this._upperThumbDown = Observable.fromEvent(this.upperThumb.nativeElement, 'mousedown');\n        this._upperDrag = this._upperThumbDown.switchMap(event => {\n            event.preventDefault();\n            return this._mouseMove.takeUntil(this._mouseUp);\n        }).subscribe(event => {\n            event.preventDefault();\n            this.updateThumbPosition(event, SliderThumb.Upper);\n        });\n    }\n/**\n * @param {?} thumb\n * @return {?}\n */\nprivate getThumbState(thumb: SliderThumb) {\n        return thumb === SliderThumb.Lower ? this.thumbs.lower : this.thumbs.upper;\n    }\n/**\n * @param {?} thumb\n * @param {?} hover\n * @param {?} drag\n * @return {?}\n */\nprivate setThumbState(thumb: SliderThumb, hover: boolean, drag: boolean) {\n        if (thumb === SliderThumb.Lower) {\n            this.thumbs.lower.hover = hover;\n            this.thumbs.lower.drag = drag;\n        } else {\n            this.thumbs.upper.hover = hover;\n            this.thumbs.upper.drag = drag;\n        }\n\n        // update the visibility of the tooltips\n        this.updateTooltips(thumb);\n    }\n/**\n * @return {?}\n */\nprivate onDragEnd() {\n        // update thumb state here as we are not dragging any more\n        this.thumbEvent(SliderThumb.Lower, SliderThumbEvent.DragEnd);\n        this.thumbEvent(SliderThumb.Upper, SliderThumbEvent.DragEnd);\n    }\n/**\n * @param {?} thumb\n * @param {?} event\n * @return {?}\n */\nthumbEvent(thumb: SliderThumb, event: SliderThumbEvent): void {\n\n        // get the current thumb state\n        let /** @type {?} */ state = this.getThumbState(thumb);\n\n        // update based upon event\n        switch (event) {\n\n            case SliderThumbEvent.DragStart:\n                state.drag = true;\n                break;\n\n            case SliderThumbEvent.DragEnd:\n                state.drag = false;\n                break;\n\n            case SliderThumbEvent.MouseOver:\n                state.hover = true;\n                break;\n\n            case SliderThumbEvent.MouseLeave:\n                state.hover = false;\n                break;\n\n            case SliderThumbEvent.None:\n                state.drag = false;\n                state.hover = false;\n                break;\n        }\n\n        // update the thumb state\n        this.setThumbState(thumb, state.hover, state.drag);\n    }\n/**\n * @param {?} thumb\n * @return {?}\n */\nprivate updateTooltips(thumb: SliderThumb): void {\n\n        let /** @type {?} */ visible = false;\n        let /** @type {?} */ state = this.getThumbState(thumb);\n\n        switch (this.options.handles.callout.trigger) {\n\n            case SliderCalloutTrigger.Persistent:\n                visible = true;\n                break;\n\n            case SliderCalloutTrigger.Drag:\n                visible = state.drag;\n                break;\n\n            case SliderCalloutTrigger.Hover:\n                visible = state.hover || state.drag;\n                break;\n        }\n\n        // update the state for the corresponding thumb\n        this.getTooltip(thumb).visible = visible;\n\n        // update the tooltip text\n        this.updateTooltipText(thumb);\n\n        // update the tooltip positions\n        this.updateTooltipPosition(thumb);\n    }\n/**\n * @param {?} thumb\n * @return {?}\n */\nprivate updateTooltipText(thumb: SliderThumb) {\n\n        // get the thumb value\n        let /** @type {?} */ state = this.getThumbState(thumb);\n        let /** @type {?} */ tooltip = this.getTooltip(thumb);\n\n        // store the formatted label\n        tooltip.label = this.getFormattedValue(thumb).toString();\n    }\n/**\n * @param {?} thumb\n * @return {?}\n */\nprivate getThumbElement(thumb: SliderThumb): ElementRef {\n        return thumb === SliderThumb.Lower ? this.lowerThumb : this.upperThumb;\n    }\n/**\n * @param {?} thumb\n * @return {?}\n */\nprivate getTooltipElement(thumb: SliderThumb): ElementRef {\n        return thumb === SliderThumb.Lower ? this.lowerTooltip : this.upperTooltip;\n    }\n/**\n * @param {?} thumb\n * @return {?}\n */\nprivate getTooltip(thumb: SliderThumb) {\n        return thumb === SliderThumb.Lower ? this.tooltips.lower : this.tooltips.upper;\n    }\n/**\n * @param {?} thumb\n * @return {?}\n */\nprivate updateTooltipPosition(thumb: SliderThumb) {\n\n        let /** @type {?} */ tooltip = this.getTooltip(thumb);\n\n        // if tooltip is not visible then stop here\n        if (tooltip.visible === false) {\n            return;\n        }\n\n        let /** @type {?} */ tooltipElement = this.getTooltipElement(thumb);\n\n        // get the element widths\n        let /** @type {?} */ thumbWidth: number;\n\n        if (this.options.handles.style === SliderStyle.Button) {\n            thumbWidth = this.options.track.height === SliderSize.Narrow ? 16 : 24;\n        } else {\n            thumbWidth = 2;\n        }\n\n        let /** @type {?} */ tooltipWidth = tooltipElement.nativeElement.offsetWidth;\n\n        // calculate the tooltips new position\n        let /** @type {?} */ tooltipPosition = Math.ceil((tooltipWidth - thumbWidth) / 2);\n\n        // update tooltip position\n        tooltip.position = -tooltipPosition;\n    }\n/**\n * @param {?} value\n * @param {?} min\n * @param {?} max\n * @return {?}\n */\nprivate clamp(value: number, min: number, max: number): number {\n        return Math.min(Math.max(value, min), max);\n    }\n/**\n * @param {?} event\n * @param {?} thumb\n * @return {?}\n */\nprivate updateThumbPosition(event: MouseEvent | TouchEvent, thumb: SliderThumb): void {\n\n        // get event position - either mouse or touch\n        let /** @type {?} */ eventPosition = event instanceof MouseEvent ? event.clientX : event.touches && event.touches.length > 0 ? event.touches[0].clientX : null;\n\n        // if event position is null do nothing\n        if (eventPosition === null) {\n            return;\n        }\n\n        // get mouse position\n        let /** @type {?} */ mouseX = window.pageXOffset + eventPosition;\n\n        // get track size and position\n        let /** @type {?} */ trackBounds = this.track.nativeElement.getBoundingClientRect();\n\n        // restrict the value within the range size\n        let /** @type {?} */ position = this.clamp(mouseX - trackBounds.left, 0, trackBounds.width);\n\n        // get fraction representation of location within the track\n        let /** @type {?} */ fraction = (position / trackBounds.width);\n\n        // convert to value within the range\n        let /** @type {?} */ value = ((this.options.track.max - this.options.track.min) * fraction) + this.options.track.min;\n\n        // ensure value is valid\n        value = this.validateValue(thumb, value);\n\n        // snap to a tick if required\n        value = this.snapToTick(value, thumb);\n\n        // update the value accordingly\n        this.setThumbValue(thumb, value);\n\n        this.updateOrder(thumb);\n        this.updateValues();\n\n        // update tooltip text & position\n        this.updateTooltipText(thumb);\n        this.updateTooltipPosition(thumb);\n\n        // mark as dirty for change detection\n        this._changeDetectorRef.markForCheck();\n    }\n/**\n * @param {?} thumb\n * @return {?}\n */\nprivate updateOrder(thumb: SliderThumb): void {\n\n        let /** @type {?} */ lower = thumb === SliderThumb.Lower ? 101 : 100;\n        let /** @type {?} */ upper = thumb === SliderThumb.Lower ? 100 : 101;\n\n        // The most recently used thumb should be above\n        this.thumbs.lower.order = lower;\n        this.thumbs.upper.order = upper;\n    }\n/**\n * @param {?} value\n * @param {?} thumb\n * @return {?}\n */\nprivate snapToTick(value: number, thumb: SliderThumb): number {\n\n        // get the snap target\n        let /** @type {?} */ snapTarget: SliderSnap = this.options.track.ticks.snap;\n\n        // if snap target is none then return original value\n        if (snapTarget === SliderSnap.None) {\n            return value;\n        }\n\n        // get filtered ticks\n        let /** @type {?} */ ticks: SliderTick[];\n\n        switch (snapTarget) {\n\n            case SliderSnap.Minor:\n                ticks = this.ticks.filter(tick => tick.type === SliderTickType.Minor);\n                break;\n\n            case SliderSnap.Major:\n                ticks = this.ticks.filter(tick => tick.type === SliderTickType.Major);\n                break;\n\n            default:\n                ticks = this.ticks.slice(0);\n        }\n\n        // get the track limit\n        let /** @type {?} */ lowerLimit = this.options.track.min;\n        let /** @type {?} */ upperLimit = this.options.track.max;\n\n        if (this.options.type === SliderType.Range && thumb === SliderThumb.Lower) {\n            upperLimit = this.thumbs.upper.value;\n        }\n\n        if (this.options.type === SliderType.Range && thumb === SliderThumb.Upper) {\n            lowerLimit = this.thumbs.lower.value;\n        }\n\n        // Find the closest tick to the current position\n        let /** @type {?} */ closest = ticks.filter(tick => tick.value >= lowerLimit && tick.value <= upperLimit)\n            .reduceRight((previous, current) => {\n\n                let /** @type {?} */ previousDistance = Math.max(previous.value, value) - Math.min(previous.value, value);\n                let /** @type {?} */ currentDistance = Math.max(current.value, value) - Math.min(current.value, value);\n\n                return previousDistance < currentDistance ? previous : current;\n            });\n\n        return closest.value;\n    }\n/**\n * @param {?} thumb\n * @param {?} value\n * @return {?}\n */\nprivate validateValue(thumb: SliderThumb, value: number): number {\n\n        // if slider is not a range value is always valid providing it is within the chart min and max values\n        if (this.options.type === SliderType.Value) {\n            return Math.max(Math.min(value, this.options.track.max), this.options.track.min);\n        }\n\n        // check if value is with chart ranges\n        if (value > this.options.track.max) {\n            return thumb === SliderThumb.Lower ? Math.min(this.options.track.max, this.thumbs.upper.value) : this.options.track.max;\n        }\n\n        if (value < this.options.track.min) {\n            return thumb === SliderThumb.Upper ? Math.max(this.options.track.min, this.thumbs.lower.value) : this.options.track.min;\n        }\n\n        // otherwise we need to check to make sure lower thumb cannot go above higher and vice versa\n        if (thumb === SliderThumb.Lower) {\n\n            if (this.thumbs.upper.value === null) {\n                return value;\n            }\n\n            return value <= this.thumbs.upper.value ? value : this.thumbs.upper.value;\n        }\n\n        if (thumb === SliderThumb.Upper) {\n\n            if (this.thumbs.lower.value === null) {\n                return value;\n            }\n\n            return value >= this.thumbs.lower.value ? value : this.thumbs.lower.value;\n        }\n    }\n/**\n * @return {?}\n */\nprivate updateOptions() {\n\n        // add in the default options that user hasn't specified\n        this.options = this.deepMerge(this.options || {}, this.defaultOptions);\n\n        this.updateTrackColors();\n        this.updateTicks();\n        this.updateValues();\n    }\n/**\n * @return {?}\n */\nprivate updateValues() {\n\n        if (this.value === undefined || this.value === null) {\n            this.value = 0;\n        }\n\n        let /** @type {?} */ lowerValue = typeof this.value === 'number' ? this.value : this.value.low;\n        let /** @type {?} */ upperValue = typeof this.value === 'number' ? this.value : this.value.high;\n\n        // validate values\n        lowerValue = this.validateValue(SliderThumb.Lower, Number(lowerValue.toFixed(4)));\n        upperValue = this.validateValue(SliderThumb.Upper, Number(upperValue.toFixed(4)));\n\n        // calculate the positions as percentages\n        let /** @type {?} */ lowerPosition = (((lowerValue - this.options.track.min) / (this.options.track.max - this.options.track.min)) * 100);\n        let /** @type {?} */ upperPosition = (((upperValue - this.options.track.min) / (this.options.track.max - this.options.track.min)) * 100);\n\n        // update thumb positions\n        this.thumbs.lower.position = lowerPosition;\n        this.thumbs.upper.position = upperPosition;\n\n        // calculate the track sizes\n        this.tracks.lower.size = lowerPosition;\n        this.tracks.middle.size = upperPosition - lowerPosition;\n        this.tracks.upper.size = this.options.type === SliderType.Value ? 100 - lowerPosition : 100 - upperPosition;\n\n        // update the value input\n        this.setValue(lowerValue, upperValue);\n    }\n/**\n * @param {?} low\n * @param {?=} high\n * @return {?}\n */\nprivate setValue(low: number, high?: number): void {\n\n        this.thumbs.lower.value = low;\n        this.thumbs.upper.value = high;\n\n        let /** @type {?} */ previousValue = this.clone(this._value);\n\n        this.value = this.options.type === SliderType.Value ? low : { low: low, high: high };\n\n        // call the event emitter if changes occured\n        if (this.detectValueChange(this.value, previousValue)) {\n            this.valueChange.emit(this.clone(this.value));\n\n            this.updateTooltipText(SliderThumb.Lower);\n            this.updateTooltipText(SliderThumb.Upper);\n        } else {\n            this.valueChange.emit(this.clone(this.value));\n        }\n    }\n/**\n * @param {?} thumb\n * @param {?} value\n * @return {?}\n */\nprivate setThumbValue(thumb: SliderThumb, value: number) {\n\n        // update the thumb value\n        this.getThumbState(thumb).value = value;\n\n        // forward these changes to the value\n        this.setValue(this.thumbs.lower.value, this.thumbs.upper.value);\n    }\n/**\n * @return {?}\n */\nprivate updateTicks() {\n\n        // get tick options\n        let /** @type {?} */ majorOptions = this.options.track.ticks.major;\n        let /** @type {?} */ minorOptions = this.options.track.ticks.minor;\n\n        // check if we should show ticks\n        if (majorOptions.show === false && minorOptions.show === false) {\n            this.ticks = [];\n        }\n\n        // create ticks for both major and minor\n        let /** @type {?} */ majorTicks = this.getTicks(majorOptions, SliderTickType.Major);\n        let /** @type {?} */ minorTicks = this.getTicks(minorOptions, SliderTickType.Minor);\n\n        // remove any minor ticks that are on a major interval\n        this.ticks = this.unionTicks(majorTicks, minorTicks);\n    }\n/**\n * @return {?}\n */\nprivate updateTrackColors() {\n\n        // get colors for each part of the track\n        let /** @type {?} */ lower = this.options.track.colors.lower;\n        let /** @type {?} */ range = this.options.track.colors.range;\n        let /** @type {?} */ higher = this.options.track.colors.higher;\n\n        // update the controller value\n        this.tracks.lower.color = typeof lower === 'string' ? lower : `linear-gradient(to right, ${lower.join(', ')})`;\n        this.tracks.middle.color = typeof range === 'string' ? range : `linear-gradient(to right, ${range.join(', ')})`;\n        this.tracks.upper.color = typeof higher === 'string' ? higher : `linear-gradient(to right, ${higher.join(', ')})`;\n    }\n/**\n * @param {?} steps\n * @return {?}\n */\nprivate getSteps(steps: number | number[]): number[] {\n\n        // if they are already an array just return it\n        if (steps instanceof Array) {\n            return steps;\n        }\n\n        let /** @type {?} */ output: number[] = [];\n\n        // otherwise calculate the steps\n        for (let /** @type {?} */ idx = this.options.track.min; idx <= this.options.track.max; idx += steps) {\n            output.push(idx);\n        }\n\n        return output;\n    }\n/**\n * @param {?} options\n * @param {?} type\n * @return {?}\n */\nprivate getTicks(options: SliderTickOptions, type: SliderTickType): SliderTick[] {\n\n        // create an array to store the ticks and step points\n        let /** @type {?} */ steps = this.getSteps(options.steps);\n\n        // get some chart options\n        let /** @type {?} */ min = this.options.track.min;\n        let /** @type {?} */ max = this.options.track.max;\n\n        // convert each step to a slider tick and remove invalid ticks\n        return steps.map(step => {\n            return {\n                showTicks: options.show,\n                showLabels: options.labels,\n                type: type,\n                position: ((step - min) / (max - min)) * 100,\n                value: step,\n                label: options.formatter(step)\n            };\n        }).filter(tick => tick.position >= 0 && tick.position <= 100);\n    }\n/**\n * @param {?} majorTicks\n * @param {?} minorTicks\n * @return {?}\n */\nprivate unionTicks(majorTicks: SliderTick[], minorTicks: SliderTick[]): SliderTick[] {\n\n        // get all ticks combined removing any minor ticks with the same value as major ticks\n        return majorTicks.concat(minorTicks)\n            .filter((tick, index, array) => tick.type === SliderTickType.Major || !array.find(tk => tk.type === SliderTickType.Major && tk.position === tick.position))\n            .sort((t1, t2) => t1.value - t2.value);\n    }\n/**\n * @param {?} destination\n * @param {?} source\n * @return {?}\n */\nprivate deepMerge(destination: any, source: any) {\n\n        // loop though all of the properties in the source object\n        for (let /** @type {?} */ prop in source) {\n\n            // check if the destination object has the property\n            if (!destination.hasOwnProperty(prop)) {\n                // copy the property across\n                destination[prop] = source[prop];\n                continue;\n            }\n\n            // if the property exists and is not an object then skip\n            if (typeof destination[prop] !== 'object') {\n                continue;\n            }\n\n            // check if property is an array\n            if (destination[prop] instanceof Array) {\n                continue;\n            }\n\n            // if it is an object then perform a recursive check\n            destination[prop] = this.deepMerge(destination[prop], source[prop]);\n        }\n\n        return destination;\n    }\n/**\n * @param {?} value1\n * @param {?} value2\n * @return {?}\n */\nprivate detectValueChange(value1: number | SliderValue, value2: number | SliderValue): boolean {\n\n        // compare two slider values\n        if (this.isSliderValue(value1) && this.isSliderValue(value2)) {\n            \n            // references to the objects in the correct types\n            const /** @type {?} */ obj1 = /** @type {?} */(( value1 as SliderValue));\n            const /** @type {?} */ obj2 = /** @type {?} */(( value2 as SliderValue));\n            \n            return obj1.low !== obj2.low || obj1.high !== obj2.high;\n        }\n\n        // if not a slider value - should be number of nullable type - compare normally\n        return value1 !== value2;\n    }\n/**\n * Determines whether or not an object conforms to the\n * SliderValue interface.\n * @param {?} value - The object to check - this must be type any\n * @return {?}\n */\nprivate isSliderValue(value: any): boolean {\n\n        // check if is an object\n        if (typeof value !== 'object') {\n            return false;\n        }\n\n        // next check if it contains the necessary properties\n        return 'low' in value && 'high' in value;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nprivate clone(value: number | SliderValue): number | SliderValue {\n\n        // if it is not an object simply return the value\n        if (typeof value !== 'object') {\n            return value;\n        }\n\n        // create a new object from the existing one\n        const /** @type {?} */ instance =  Object.assign({}, value);\n\n        // delete remove the value from the old object\n        value = undefined;\n\n        // return the new instance of the object\n        return instance;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-slider',\n    template: `\n      <div class=\"track\" #track [class.narrow]=\"options.track.height === sliderSize.Narrow\" [class.wide]=\"options.track.height === sliderSize.Wide\" [class.range]=\"options.type === sliderType.Range\">\n\n          <!-- Section Beneath Lower Thumb -->\n          <div class=\"track-section track-lower\" [style.flex-grow]=\"tracks.lower.size\" [style.background]=\"tracks.lower.color\"></div>\n\n          <!-- Lower Thumb Button / Line -->\n          <div class=\"thumb lower\" #lowerThumb [style.left.%]=\"thumbs.lower.position\" [class.active]=\"thumbs.lower.drag\" [style.z-index]=\"thumbs.lower.order\" [class.button]=\"options.handles.style === sliderStyle.Button\"\n              [class.line]=\"options.handles.style === sliderStyle.Line\" [class.narrow]=\"options.track.height === sliderSize.Narrow\"\n              [class.wide]=\"options.track.height === sliderSize.Wide\" (mouseenter)=\"thumbEvent(sliderThumb.Lower, sliderThumbEvent.MouseOver)\"\n              (mouseleave)=\"thumbEvent(sliderThumb.Lower, sliderThumbEvent.MouseLeave)\" (mousedown)=\"thumbEvent(sliderThumb.Lower, sliderThumbEvent.DragStart)\">\n\n              <!-- Lower Thumb Callout -->\n              <div class=\"tooltip top tooltip-lower\" #lowerTooltip [style.opacity]=\"tooltips.lower.visible ? 1 : 0\" [style.left.px]=\"tooltips.lower.position\">\n                  <div class=\"tooltip-arrow\" [style.border-top-color]=\"options.handles.callout.background\"></div>\n                  <div class=\"tooltip-inner\" [style.background-color]=\"options.handles.callout.background\" [style.color]=\"options.handles.callout.color\">\n                      {{ tooltips.lower.label }}\n                  </div>\n              </div>\n\n          </div>\n\n          <!-- Section of Track Between Lower and Upper Thumbs -->\n          <div class=\"track-section track-range\" *ngIf=\"options.type === sliderType.Range\" [style.flex-grow]=\"tracks.middle.size\" [style.background]=\"tracks.middle.color\">\n          </div>\n\n          <!-- Upper Thumb Button / Line -->\n          <div class=\"thumb upper\" #upperThumb [hidden]=\"options.type !== sliderType.Range\" [class.active]=\"thumbs.upper.drag\" [style.left.%]=\"thumbs.upper.position\" [style.z-index]=\"thumbs.upper.order\"\n              [class.button]=\"options.handles.style === sliderStyle.Button\" [class.line]=\"options.handles.style === sliderStyle.Line\"\n              [class.narrow]=\"options.track.height === sliderSize.Narrow\" [class.wide]=\"options.track.height === sliderSize.Wide\" (mouseenter)=\"thumbEvent(sliderThumb.Upper, sliderThumbEvent.MouseOver)\"\n              (mouseleave)=\"thumbEvent(sliderThumb.Upper, sliderThumbEvent.MouseLeave)\" (mousedown)=\"thumbEvent(sliderThumb.Upper, sliderThumbEvent.DragStart)\">\n\n              <!-- Upper Thumb Callout -->\n              <div class=\"tooltip top tooltip-upper\" #upperTooltip [style.opacity]=\"tooltips.upper.visible ? 1 : 0\" [style.left.px]=\"tooltips.upper.position\">\n                  <div class=\"tooltip-arrow\" [style.border-top-color]=\"options.handles.callout.background\"></div>\n                  <div class=\"tooltip-inner\" *ngIf=\"options.type === sliderType.Range\" [style.background-color]=\"options.handles.callout.background\"\n                      [style.color]=\"options.handles.callout.color\">\n                      {{ tooltips.upper.label }}\n                  </div>\n              </div>\n          </div>\n\n          <!-- Section of Track Abover Upper Thumb -->\n          <div class=\"track-section track-higher\" [style.flex-grow]=\"tracks.upper.size\" [style.background]=\"tracks.upper.color\"></div>\n\n      </div>\n\n      <!-- Chart Ticks and Tick Labels -->\n      <div class=\"tick-container\" *ngIf=\"options.track.ticks.major.show || options.track.ticks.minor.show\" [class.show-labels]=\"options.track.ticks.major.labels || options.track.ticks.minor.labels\">\n\n          <div class=\"tick\" *ngFor=\"let tick of ticks\" [class.major]=\"tick.type === sliderTickType.Major\" [class.minor]=\"tick.type === sliderTickType.Minor\"\n              [style.left.%]=\"tick.position\" [hidden]=\"!tick.showTicks\">\n              <div class=\"tick-indicator\"></div>\n              <div class=\"tick-label\" [hidden]=\"!tick.showLabels\">{{ tick.label }}</div>\n          </div>\n      </div>\n    `,\n    changeDetection: ChangeDetectionStrategy.OnPush\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ColorService, },\n{type: ChangeDetectorRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'value': [{ type: Input },],\n'options': [{ type: Input },],\n'valueChange': [{ type: Output },],\n'lowerThumb': [{ type: ViewChild, args: ['lowerThumb', ] },],\n'lowerTooltip': [{ type: ViewChild, args: ['lowerTooltip', ] },],\n'upperThumb': [{ type: ViewChild, args: ['upperThumb', ] },],\n'upperTooltip': [{ type: ViewChild, args: ['upperTooltip', ] },],\n'track': [{ type: ViewChild, args: ['track', ] },],\n'onDragEnd': [{ type: HostListener, args: ['document:mouseup', [], ] },],\n};\n}\n\nfunction SliderComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nSliderComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSliderComponent.ctorParameters;\n/** @type {?} */\nSliderComponent.propDecorators;\n/** @type {?} */\nSliderComponent.prototype.value;\n/** @type {?} */\nSliderComponent.prototype.options;\n/** @type {?} */\nSliderComponent.prototype.valueChange;\n/** @type {?} */\nSliderComponent.prototype.lowerThumb;\n/** @type {?} */\nSliderComponent.prototype.lowerTooltip;\n/** @type {?} */\nSliderComponent.prototype.upperThumb;\n/** @type {?} */\nSliderComponent.prototype.upperTooltip;\n/** @type {?} */\nSliderComponent.prototype.track;\n/** @type {?} */\nSliderComponent.prototype._value;\n/** @type {?} */\nSliderComponent.prototype.sliderType;\n/** @type {?} */\nSliderComponent.prototype.sliderStyle;\n/** @type {?} */\nSliderComponent.prototype.sliderSize;\n/** @type {?} */\nSliderComponent.prototype.sliderThumb;\n/** @type {?} */\nSliderComponent.prototype.sliderTickType;\n/** @type {?} */\nSliderComponent.prototype.sliderThumbEvent;\n/** @type {?} */\nSliderComponent.prototype.tracks;\n/** @type {?} */\nSliderComponent.prototype.tooltips;\n/** @type {?} */\nSliderComponent.prototype.thumbs;\n/** @type {?} */\nSliderComponent.prototype.ticks;\n/** @type {?} */\nSliderComponent.prototype.defaultOptions;\n/** @type {?} */\nSliderComponent.prototype._lowerThumbDown;\n/** @type {?} */\nSliderComponent.prototype._upperThumbDown;\n/** @type {?} */\nSliderComponent.prototype._mouseMove;\n/** @type {?} */\nSliderComponent.prototype._mouseUp;\n/** @type {?} */\nSliderComponent.prototype._lowerDrag;\n/** @type {?} */\nSliderComponent.prototype._upperDrag;\n/** @type {?} */\nSliderComponent.prototype._changeDetectorRef;\n}\n\nexport type SliderType = number;\nexport let SliderType: any = {};\nSliderType.Value = 0;\nSliderType.Range = 1;\nSliderType[SliderType.Value] = \"Value\";\nSliderType[SliderType.Range] = \"Range\";\n\nexport type SliderStyle = number;\nexport let SliderStyle: any = {};\nSliderStyle.Button = 0;\nSliderStyle.Line = 1;\nSliderStyle[SliderStyle.Button] = \"Button\";\nSliderStyle[SliderStyle.Line] = \"Line\";\n\nexport type SliderSize = number;\nexport let SliderSize: any = {};\nSliderSize.Narrow = 0;\nSliderSize.Wide = 1;\nSliderSize[SliderSize.Narrow] = \"Narrow\";\nSliderSize[SliderSize.Wide] = \"Wide\";\n\nexport type SliderCalloutTrigger = number;\nexport let SliderCalloutTrigger: any = {};\nSliderCalloutTrigger.None = 0;\nSliderCalloutTrigger.Hover = 1;\nSliderCalloutTrigger.Drag = 2;\nSliderCalloutTrigger.Persistent = 3;\nSliderCalloutTrigger[SliderCalloutTrigger.None] = \"None\";\nSliderCalloutTrigger[SliderCalloutTrigger.Hover] = \"Hover\";\nSliderCalloutTrigger[SliderCalloutTrigger.Drag] = \"Drag\";\nSliderCalloutTrigger[SliderCalloutTrigger.Persistent] = \"Persistent\";\n\n\nexport interface SliderValue {\n    low: number;\n    high: number;\n}\nexport type SliderSnap = number;\nexport let SliderSnap: any = {};\nSliderSnap.None = 0;\nSliderSnap.Minor = 1;\nSliderSnap.Major = 2;\nSliderSnap.All = 3;\nSliderSnap[SliderSnap.None] = \"None\";\nSliderSnap[SliderSnap.Minor] = \"Minor\";\nSliderSnap[SliderSnap.Major] = \"Major\";\nSliderSnap[SliderSnap.All] = \"All\";\n\nexport type SliderTickType = number;\nexport let SliderTickType: any = {};\nSliderTickType.Minor = 0;\nSliderTickType.Major = 1;\nSliderTickType[SliderTickType.Minor] = \"Minor\";\nSliderTickType[SliderTickType.Major] = \"Major\";\n\n\nexport interface SliderOptions {\n    type?: SliderType;\n    handles?: SliderHandleOptions;\n    track?: SliderTrackOptions;\n}\n\nexport interface SliderHandleOptions {\n    style?: SliderStyle;\n    callout?: SliderCallout;\n}\n\nexport interface SliderTrackOptions {\n    height?: SliderSize;\n    min?: number;\n    max?: number;\n    ticks?: SliderTicksOptions;\n    colors?: SliderTrackColors;\n}\n\nexport interface SliderTicksOptions {\n    snap?: SliderSnap;\n    major?: SliderTickOptions;\n    minor?: SliderTickOptions;\n}\n\nexport interface SliderTickOptions {\n    show?: boolean;\n    steps?: number | number[];\n    labels?: boolean;\n    formatter?: (value: number) => string | number;\n}\n\nexport interface SliderTick {\n    showTicks: boolean;\n    showLabels: boolean;\n    type: SliderTickType;\n    position: number;\n    value: number;\n    label: string | number;\n}\n\nexport interface SliderTrackColors {\n    lower?: string | string[];\n    range?: string | string[];\n    higher?: string | string[];\n}\n\nexport interface SliderCallout {\n    trigger?: SliderCalloutTrigger;\n    background?: string;\n    color?: string;\n    formatter?: (value: number) => string | number;\n}\nexport type SliderThumbEvent = number;\nexport let SliderThumbEvent: any = {};\nSliderThumbEvent.None = 0;\nSliderThumbEvent.MouseOver = 1;\nSliderThumbEvent.MouseLeave = 2;\nSliderThumbEvent.DragStart = 3;\nSliderThumbEvent.DragEnd = 4;\nSliderThumbEvent[SliderThumbEvent.None] = \"None\";\nSliderThumbEvent[SliderThumbEvent.MouseOver] = \"MouseOver\";\nSliderThumbEvent[SliderThumbEvent.MouseLeave] = \"MouseLeave\";\nSliderThumbEvent[SliderThumbEvent.DragStart] = \"DragStart\";\nSliderThumbEvent[SliderThumbEvent.DragEnd] = \"DragEnd\";\n\nexport type SliderThumb = number;\nexport let SliderThumb: any = {};\nSliderThumb.Lower = 0;\nSliderThumb.Upper = 1;\nSliderThumb[SliderThumb.Lower] = \"Lower\";\nSliderThumb[SliderThumb.Upper] = \"Upper\";\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ColorServiceModule } from '../../services/color/index';\n\nimport { SliderComponent } from './slider.component';\nexport class SliderModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        CommonModule,\n        ColorServiceModule\n    ],\n    exports: [SliderComponent],\n    declarations: [SliderComponent]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction SliderModule_tsickle_Closure_declarations() {\n/** @type {?} */\nSliderModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSliderModule.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Input } from '@angular/core';\nimport { ColorService } from '../../services/color/index';\nimport { ColorIdentifier } from '../../index';\nexport class SparkComponent {\n\n    values: number[] = [];\n\n     barHeight: number = 10;\n     inlineLabel: string;\n     topLeftLabel: string;\n     topRightLabel: string;\n     bottomLeftLabel: string;\n     bottomRightLabel: string;\n     tooltip: string;\nprivate _trackColor: string;\nprivate _theme: ColorIdentifier = 'primary';\nprivate _barColor: string | string[] = [];\n/**\n * @param {?} value\n * @return {?}\n */\nset theme(value: string) {\n        this._theme = this._colorService.resolveColorName(value);\n    }\n/**\n * @return {?}\n */\nget theme(): string {\n        return this._theme;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset trackColor(value: string) {\n        this._trackColor = this._colorService.resolve(value);\n    }\n/**\n * @return {?}\n */\nget trackColor(): string {\n        return this._trackColor;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset barColor(value: string | string[]) {\n\n        if (Array.isArray(value)) {\n            this._barColor = value.map(color => this._colorService.resolve(color));\n        } else {\n            this._barColor = [this._colorService.resolve(value)];\n        }\n    }\n/**\n * @return {?}\n */\nget barColor(): string | string[] {\n        return this._barColor;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset value(value: number | number[]) {\n\n        // ensure 'value' is an array at this point\n        const /** @type {?} */ values = Array.isArray(value) ? value : [value];\n\n        // get the total value of all lines\n        let /** @type {?} */ total = Math.max(values.reduce((previous, current) => previous + current, 0), 100);\n\n        // figure out the percentages for each spark line\n        this.values = values.map(val => (val / total) * 100);\n    }\n/**\n * @return {?}\n */\nget value() {\n        return this.values;\n    }\n/**\n * @param {?} _colorService\n */\nconstructor(private _colorService: ColorService) { }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-spark',\n    template: `\n      <!-- Inline Spark Chart -->\n      <div *ngIf=\"inlineLabel\" class=\"ux-spark-inline-label-container\">\n\n          <div class=\"ux-spark-inline-label-left\" [innerHtml]=\"inlineLabel\"></div>\n\n          <div class=\"ux-spark-line\">\n\n              <div class=\"ux-spark-top-container\" *ngIf=\"topLeftLabel || topRightLabel\">\n                  <div class=\"ux-spark-label-top-left\" *ngIf=\"topLeftLabel\" [innerHtml]=\"topLeftLabel\"></div>\n                  <div class=\"ux-spark-label-top-right\" *ngIf=\"topRightLabel\" [innerHtml]=\"topRightLabel\"></div>\n              </div>\n\n              <div class=\"ux-spark ux-inline ux-spark-theme-{{theme}}\" [style.height.px]=\"barHeight\" [style.backgroundColor]=\"trackColor\" [tooltip]=\"tooltip\">\n                  <div class=\"ux-spark-bar\" *ngFor=\"let line of values; let idx = index;\" [style.width.%]=\"line\" [style.backgroundColor]=\"barColor[idx]\"></div>\n              </div>\n\n              <div class=\"ux-spark-bottom-container\" *ngIf=\"bottomLeftLabel || bottomRightLabel\">\n                  <div class=\"ux-spark-label-bottom-left\" *ngIf=\"bottomLeftLabel\" [innerHtml]=\"bottomLeftLabel\"></div>\n                  <div class=\"ux-spark-label-bottom-right\" *ngIf=\"bottomRightLabel\" [innerHtml]=\"bottomRightLabel\"></div>\n              </div>\n\n          </div>\n      </div>\n\n      <!-- End Inline Spark Chart -->\n\n\n      <!-- Non Inline Spark Chart -->\n      <div *ngIf=\"!inlineLabel\">\n\n          <div class=\"ux-spark-top-container\" *ngIf=\"topLeftLabel || topRightLabel\">\n              <div class=\"ux-spark-label-top-left\" *ngIf=\"topLeftLabel\" [innerHtml]=\"topLeftLabel\"></div>\n              <div class=\"ux-spark-label-top-right\" *ngIf=\"topRightLabel\" [innerHtml]=\"topRightLabel\"></div>\n          </div>\n\n          <div class=\"ux-spark ux-spark-theme-{{theme}}\" [class.ux-spark-multi-value]=\"values.length > 1\" [style.height.px]=\"barHeight\" [style.backgroundColor]=\"trackColor\"\n              [tooltip]=\"tooltip\">\n              <div class=\"ux-spark-bar\" *ngFor=\"let line of value; let idx = index;\" [style.width.%]=\"line\" [style.backgroundColor]=\"barColor[idx]\"></div>\n          </div>\n\n          <div class=\"ux-spark-bottom-container\" *ngIf=\"bottomLeftLabel || bottomRightLabel\">\n              <div class=\"ux-spark-label-bottom-left\" *ngIf=\"bottomLeftLabel\" [innerHtml]=\"bottomLeftLabel\"></div>\n              <div class=\"ux-spark-label-bottom-right\" *ngIf=\"bottomRightLabel\" [innerHtml]=\"bottomRightLabel\"></div>\n          </div>\n      </div>\n\n      <!-- End Non Inline Spark Chart -->\n    `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ColorService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'barHeight': [{ type: Input },],\n'inlineLabel': [{ type: Input },],\n'topLeftLabel': [{ type: Input },],\n'topRightLabel': [{ type: Input },],\n'bottomLeftLabel': [{ type: Input },],\n'bottomRightLabel': [{ type: Input },],\n'tooltip': [{ type: Input },],\n'theme': [{ type: Input },],\n'trackColor': [{ type: Input },],\n'barColor': [{ type: Input },],\n'value': [{ type: Input },],\n};\n}\n\nfunction SparkComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nSparkComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSparkComponent.ctorParameters;\n/** @type {?} */\nSparkComponent.propDecorators;\n/** @type {?} */\nSparkComponent.prototype.values;\n/** @type {?} */\nSparkComponent.prototype.barHeight;\n/** @type {?} */\nSparkComponent.prototype.inlineLabel;\n/** @type {?} */\nSparkComponent.prototype.topLeftLabel;\n/** @type {?} */\nSparkComponent.prototype.topRightLabel;\n/** @type {?} */\nSparkComponent.prototype.bottomLeftLabel;\n/** @type {?} */\nSparkComponent.prototype.bottomRightLabel;\n/** @type {?} */\nSparkComponent.prototype.tooltip;\n/** @type {?} */\nSparkComponent.prototype._trackColor;\n/** @type {?} */\nSparkComponent.prototype._theme;\n/** @type {?} */\nSparkComponent.prototype._barColor;\n/** @type {?} */\nSparkComponent.prototype._colorService;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { SparkComponent } from './spark.component';\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\nimport { ColorServiceModule } from '../../services/color/index';\nexport class SparkModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        CommonModule,\n        ColorServiceModule,\n        TooltipModule.forRoot()\n    ],\n    exports: [SparkComponent],\n    declarations: [SparkComponent]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction SparkModule_tsickle_Closure_declarations() {\n/** @type {?} */\nSparkModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSparkModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Input, Output, forwardRef, EventEmitter } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\n\nconst /** @type {?} */ TOGGLESWITCH_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => ToggleSwitchComponent),\n    multi: true\n};\nexport class ToggleSwitchComponent implements ControlValueAccessor {\n     name: string = '';\n     disabled: boolean = false;\n     clickable: boolean = true;\n\n     valueChange: EventEmitter<any> = new EventEmitter<any>();\n/**\n * @return {?}\n */\nget value() {\n        return this._value;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset value(value: boolean) {\n        this._value = value;\n\n        // Update value output\n        this.valueChange.emit(value);\n\n        // Notify ngModel\n        this.onChangeCallback(value);\n    }\nprivate _value: boolean = false;\n\n    onTouchedCallback: () => void = () => { };\n    onChangeCallback: (_: any) => void = () => { };\n/**\n * @return {?}\n */\ntoggleChecked() {\n        if (!this.disabled && this.clickable) {\n            this.value = !this.value;\n        }\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nkeydown(event: any) {\n        // if spacebar is pressed toggle state\n        if (event.keyCode === 32) {\n            this.toggleChecked();\n            event.stopPropagation();\n            event.preventDefault();\n        }\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nwriteValue(value: any) {\n        this.value = !!value;\n    }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnChange(fn: any) {\n        this.onChangeCallback = fn;\n    }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnTouched(fn: any) {\n        this.onTouchedCallback = fn;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-toggleswitch',\n    template: `\n      <div class=\"ux-toggleswitch\" \n        tabindex=\"0\"\n        (keydown)=\"keydown($event)\"\n        [class.checked]=\"value === true\"\n        [class.disabled]=\"disabled === true\">\n\n        <span class=\"ux-toggleswitch-bg\"></span>\n  \n        <span class=\"ux-toggleswitch-nub\"></span>\n\n        <input type=\"checkbox\" \n          role=\"checkbox\"\n          [name]=\"name\" \n          [checked]=\"value === true\"\n          [disabled]=\"disabled === true\"\n          tabindex=\"-1\" />\n      </div>\n\n      <div class=\"ux-toggleswitch-content\">\n        <ng-content></ng-content>\n      </div>\n    `,\n    providers: [TOGGLESWITCH_VALUE_ACCESSOR],\n    host: {\n        '(click)': 'toggleChecked()'\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'name': [{ type: Input },],\n'disabled': [{ type: Input },],\n'clickable': [{ type: Input },],\n'valueChange': [{ type: Output },],\n'value': [{ type: Input },],\n};\n}\n\nfunction ToggleSwitchComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nToggleSwitchComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nToggleSwitchComponent.ctorParameters;\n/** @type {?} */\nToggleSwitchComponent.propDecorators;\n/** @type {?} */\nToggleSwitchComponent.prototype.name;\n/** @type {?} */\nToggleSwitchComponent.prototype.disabled;\n/** @type {?} */\nToggleSwitchComponent.prototype.clickable;\n/** @type {?} */\nToggleSwitchComponent.prototype.valueChange;\n/** @type {?} */\nToggleSwitchComponent.prototype._value;\n/** @type {?} */\nToggleSwitchComponent.prototype.onTouchedCallback;\n/** @type {?} */\nToggleSwitchComponent.prototype.onChangeCallback;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { ToggleSwitchComponent } from './toggleswitch.component';\nexport class ToggleSwitchModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [ FormsModule ],\n    exports: [ ToggleSwitchComponent ],\n    declarations: [ ToggleSwitchComponent ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ToggleSwitchModule_tsickle_Closure_declarations() {\n/** @type {?} */\nToggleSwitchModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nToggleSwitchModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { Observer } from 'rxjs/Observer';\nimport'rxjs/add/observable/concat';\nexport class FrameExtractionService {\n/**\n * @param {?} source\n * @return {?}\n */\nprivate createVideoPlayer(source: string): HTMLVideoElement {\n        let /** @type {?} */ videoPlayer = document.createElement('video');\n        videoPlayer.preload = 'auto';\n        videoPlayer.src = source;\n        return videoPlayer;\n    }\n/**\n * @param {?} width\n * @param {?} height\n * @return {?}\n */\nprivate createCanvas(width: number, height: number): HTMLCanvasElement {\n        let /** @type {?} */ canvas = document.createElement('canvas');\n        canvas.width = width;\n        canvas.height = height;\n        return canvas;\n    }\n/**\n * @param {?} videoPlayer\n * @param {?} time\n * @return {?}\n */\nprivate goToFrame(videoPlayer: HTMLVideoElement, time: number): Observable<number> {\n        videoPlayer.currentTime = time;\n        return Observable.fromEvent(videoPlayer, time === 0 ? 'loadeddata' : 'seeked');\n    }\n/**\n * @param {?} videoPlayer\n * @param {?} canvas\n * @param {?} time\n * @param {?=} width\n * @param {?=} height\n * @return {?}\n */\nprivate getThumbnail(videoPlayer: HTMLVideoElement, canvas: HTMLCanvasElement, time: number, width: number = 160, height: number = 90): Observable<ExtractedFrame> {\n\n        return Observable.create((observer: Observer<ExtractedFrame>) => {\n\n            // go to specified frame\n            let /** @type {?} */ subscription = this.goToFrame(videoPlayer, time).subscribe((event: any) => {\n                // create image from current frame\n                canvas.getContext('2d').drawImage(videoPlayer, 0, 0, width, height);\n                observer.next({ image: canvas.toDataURL(), width: width, height: height, time: time });\n                observer.complete();\n                subscription.unsubscribe();\n            });\n        });\n    }\n/**\n * @param {?} source\n * @param {?} width\n * @param {?} height\n * @param {?} time\n * @return {?}\n */\ngetFrameThumbnail(source: string, width: number, height: number, time: number): Observable<ExtractedFrame> {\n\n        // create required elements\n        let /** @type {?} */ videoPlayer = this.createVideoPlayer(source);\n        let /** @type {?} */ canvas = this.createCanvas(width, height);\n\n        let /** @type {?} */ frameSubscription = this.getThumbnail(videoPlayer, canvas, time, width, height);\n\n        // ensure we release memory after we are finished        \n        frameSubscription.subscribe(null, null, () => {\n            videoPlayer = null;\n            canvas = null;\n        });\n\n        return frameSubscription;\n    }\n/**\n * @param {?} source\n * @param {?} width\n * @param {?} height\n * @param {?} start\n * @param {?} end\n * @param {?=} skip\n * @return {?}\n */\ngetFrameThumbnails(source: string, width: number, height: number, start: number, end: number, skip: number = 5): Observable<ExtractedFrame> {\n\n        // create required elements\n        let /** @type {?} */ videoPlayer = this.createVideoPlayer(source);\n        let /** @type {?} */ canvas = this.createCanvas(width, height);\n\n        return Observable.create((observer: Observer<ExtractedFrame>) => {\n\n            Observable.fromEvent(videoPlayer, 'loadedmetadata').subscribe(() => {\n\n                // calculate the frames required\n                let /** @type {?} */ frames = [];\n\n                for (let /** @type {?} */ idx = start; idx < end; idx += skip) {\n                    frames.push(this.getThumbnail(videoPlayer, canvas, idx, width, height));\n                }\n\n                Observable.concat(...frames).subscribe((frame: ExtractedFrame) => observer.next(frame), null, () => {\n                    videoPlayer = null;\n                    canvas = null;\n                    observer.complete();\n                });\n            });\n\n        });\n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction FrameExtractionService_tsickle_Closure_declarations() {\n/** @type {?} */\nFrameExtractionService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFrameExtractionService.ctorParameters;\n}\n\n\nexport interface ExtractedFrame {\n    image: string;\n    width: number;\n    height: number;\n    time: number;\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\n\nimport { FrameExtractionService } from './frame-extraction.service';\nexport class FrameExtractionModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    providers: [FrameExtractionService],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction FrameExtractionModule_tsickle_Closure_declarations() {\n/** @type {?} */\nFrameExtractionModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFrameExtractionModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { MediaPlayerType } from './media-player.component';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { Subject } from 'rxjs/Subject';\nimport { Observer } from 'rxjs/Observer';\nimport { FrameExtractionService, ExtractedFrame } from '../../services/frame-extraction/index';\nexport class MediaPlayerService {\n\n    source: string;\n    type: MediaPlayerType = 'video';\n    loaded: boolean = false;\n\n    /*\n        Create observables for media player events\n    */\n    playing: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\n    initEvent: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\n    abortEvent: Subject<void> = new Subject<void>();\n    canPlayEvent: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\n    canPlayThroughEvent: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\n    durationChangeEvent: Subject<number> = new Subject<number>();\n    endedEvent: Subject<void> = new Subject<void>();\n    errorEvent: Subject<any> = new Subject<any>();\n    loadedDataEvent: Subject<any> = new Subject<any>();\n    loadedMetadataEvent: Subject<any> = new Subject<any>();\n    loadStartEvent: Subject<void> = new Subject<void>();\n    pauseEvent: Subject<void> = new Subject<void>();\n    playEvent: Subject<void> = new Subject<void>();\n    playingEvent: Subject<boolean> = new Subject<boolean>();\n    rateChangeEvent: Subject<number> = new Subject<number>();\n    seekedEvent: Subject<number> = new Subject<number>();\n    seekingEvent: Subject<number> = new Subject<number>();\n    stalledEvent: Subject<void> = new Subject<void>();\n    suspendEvent: Subject<void> = new Subject<void>();\n    timeUpdateEvent: Subject<number> = new Subject<number>();\n    volumeChangeEvent: Subject<number> = new Subject<number>();\n    waitingEvent: Subject<void> = new Subject<void>();\n    mediaClickEvent: Subject<MouseEvent> = new Subject<MouseEvent>();\n    fullscreenEvent: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\n    quietModeEvent: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\n    progressEvent: Observable<TimeRanges> = Observable.create((observer: Observer<TimeRanges>) => {\n\n        // repeat until the whole video has fully loaded\n        let /** @type {?} */ interval = setInterval(() => {\n\n            let /** @type {?} */ buffered = /** @type {?} */(( this._mediaPlayer.buffered as TimeRanges));\n            observer.next(buffered);\n\n            if (buffered.length === 1 && buffered.start(0) === 0 && buffered.end(0) === this.duration) {\n                observer.complete();\n                clearInterval(interval);\n            }\n        }, 1000);\n    });\nprivate _mediaPlayer: HTMLMediaElement;\nprivate _hostElement: HTMLElement;\nprivate _fullscreen: boolean = false;\nprivate _quietMode: boolean;\n/**\n * @param {?} _frameExtractionService\n */\nconstructor(private _frameExtractionService: FrameExtractionService) {}\n/**\n * @return {?}\n */\nget mediaPlayer(): HTMLMediaElement {\n        return this._mediaPlayer;\n    }\n/**\n * @return {?}\n */\nget quietMode(): boolean {\n        return this._quietMode;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset quietMode(value: boolean) {\n\n        // quiet mode cannot be enabled on audio player\n        if (this.type === 'audio') {\n            value = false;\n        }\n\n        this._quietMode = value;\n        this.quietModeEvent.next(value);\n    }\n/**\n * @return {?}\n */\nget mediaPlayerWidth(): number {\n        return this._mediaPlayer ? this._mediaPlayer.offsetWidth : 0;\n    }\n/**\n * @return {?}\n */\nget mediaPlayerHeight(): number {\n        return this._mediaPlayer ? this._mediaPlayer.offsetHeight : 0;\n    }\n/**\n * @return {?}\n */\nget audioTracks(): AudioTrackList {\n        return this._mediaPlayer ? this._mediaPlayer.audioTracks : null;\n    }\n/**\n * @return {?}\n */\nget autoplay(): boolean {\n        return this._mediaPlayer ? this._mediaPlayer.autoplay : false;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset autoplay(value: boolean) {\n        this._mediaPlayer.autoplay = value;\n    }\n/**\n * @return {?}\n */\nget buffered(): TimeRanges {\n        return this._mediaPlayer ? this._mediaPlayer.buffered : new TimeRanges();\n    }\n/**\n * @return {?}\n */\nget crossOrigin(): string {\n        return this._mediaPlayer ? this._mediaPlayer.crossOrigin : null;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset crossOrigin(value: string) {\n        this._mediaPlayer.crossOrigin = value;\n    }\n/**\n * @return {?}\n */\nget currentSrc(): string {\n        return this._mediaPlayer ? this._mediaPlayer.currentSrc : null;\n    }\n/**\n * @return {?}\n */\nget currentTime(): number {\n        return this._mediaPlayer ? this._mediaPlayer.currentTime : 0;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset currentTime(value: number) {\n        this._mediaPlayer.currentTime = value;\n    }\n/**\n * @return {?}\n */\nget defaultMuted(): boolean {\n        return this._mediaPlayer ? this._mediaPlayer.defaultMuted : false;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset defaultMuted(value: boolean) {\n        this._mediaPlayer.defaultMuted = value;\n    }\n/**\n * @return {?}\n */\nget defaultPlaybackRate(): number {\n        return this._mediaPlayer ? this._mediaPlayer.defaultPlaybackRate : 1;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset defaultPlaybackRate(value: number) {\n        this._mediaPlayer.defaultPlaybackRate = value;\n    }\n/**\n * @return {?}\n */\nget duration(): number {\n        return this._mediaPlayer ? this._mediaPlayer.duration : 0;\n    }\n/**\n * @return {?}\n */\nget ended(): boolean {\n        return this._mediaPlayer ? this._mediaPlayer.ended : false;\n    }\n/**\n * @return {?}\n */\nget loop(): boolean {\n        return this._mediaPlayer ? this._mediaPlayer.loop : false;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset loop(value: boolean) {\n        this._mediaPlayer.loop = value;\n    }\n/**\n * @return {?}\n */\nget muted(): boolean {\n        return this._mediaPlayer ? this._mediaPlayer.muted : false;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset muted(value: boolean) {\n        this._mediaPlayer.muted = value;\n    }\n/**\n * @return {?}\n */\nget networkState(): number {\n        return this._mediaPlayer.networkState;\n    }\n/**\n * @return {?}\n */\nget paused(): boolean {\n        return this._mediaPlayer ? this._mediaPlayer.paused : true;\n    }\n/**\n * @return {?}\n */\nget playbackRate(): number {\n        return this._mediaPlayer ? this._mediaPlayer.playbackRate : 1;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset playbackRate(value: number) {\n        this._mediaPlayer.playbackRate = value;\n    }\n/**\n * @return {?}\n */\nget played(): TimeRanges {\n        return this._mediaPlayer ? this._mediaPlayer.played : new TimeRanges();\n    }\n/**\n * @return {?}\n */\nget preload(): string {\n        return this._mediaPlayer ? this._mediaPlayer.preload : 'auto';\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset preload(value: string) {\n        this._mediaPlayer.preload = value;\n    }\n/**\n * @return {?}\n */\nget readyState(): number {\n        return this._mediaPlayer ? this._mediaPlayer.readyState : 0;\n    }\n/**\n * @return {?}\n */\nget seekable(): TimeRanges {\n        return this._mediaPlayer ? this._mediaPlayer.seekable : new TimeRanges();\n    }\n/**\n * @return {?}\n */\nget seeking(): boolean {\n        return this._mediaPlayer ? this._mediaPlayer.seeking : false;\n    }\n/**\n * @return {?}\n */\nget src(): string {\n        return this._mediaPlayer ? this._mediaPlayer.src : '';\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset src(value: string) {\n        this._mediaPlayer.src = value;\n    }\n/**\n * @return {?}\n */\nget textTracks(): TextTrackList {\n        return this._mediaPlayer ? this._mediaPlayer.textTracks : new TextTrackList();\n    }\n/**\n * @return {?}\n */\nget videoTracks(): VideoTrackList {\n        return this._mediaPlayer ? this._mediaPlayer.videoTracks : new VideoTrackList();\n    }\n/**\n * @return {?}\n */\nget volume(): number {\n        return this._mediaPlayer ? this._mediaPlayer.volume : 1;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset volume(value: number) {\n        this._mediaPlayer.volume = value;\n    }\n/**\n * @return {?}\n */\nget fullscreen(): boolean {\n        return this._mediaPlayer ? this._fullscreen : false;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset fullscreen(value: boolean) {\n        this._fullscreen = value;\n        this.fullscreenEvent.next(value);\n    }\n/**\n * @param {?} hostElement\n * @param {?} mediaPlayer\n * @return {?}\n */\nsetMediaPlayer(hostElement: HTMLElement, mediaPlayer: HTMLMediaElement): void {\n        this._hostElement = hostElement;\n        this._mediaPlayer = mediaPlayer;\n\n        this.initEvent.next(true);\n    }\n/**\n * Toggle playing state\n * @return {?}\n */\ntogglePlay(): void {\n\n        // prevent any action is not loaded\n        if (this.loaded === false) {\n            return;\n        }\n\n        if (this.paused) {\n            this.play();\n        } else {\n            this.pause();\n        }\n    }\n/**\n * Starts playing the audio/video\n * @return {?}\n */\nplay(): void {\n        this._mediaPlayer.play();\n    }\n/**\n * Pauses the currently playing audio/video\n * @return {?}\n */\npause(): void {\n        this._mediaPlayer.pause();\n    }\n/**\n * Re-loads the audio/video element\n * @return {?}\n */\nload(): void {\n        this._mediaPlayer.load();\n    }\n/**\n * Checks if the browser can play the specified audio/video type\n * @param {?} type\n * @return {?}\n */\ncanPlayType(type: string): string {\n        return this._mediaPlayer.canPlayType(type);\n    }\n/**\n * Adds a new text track to the audio/video\n * @param {?} kind\n * @param {?} label\n * @param {?} language\n * @return {?}\n */\naddTextTrack(kind: string, label: string, language: string): TextTrack {\n        return this._mediaPlayer.addTextTrack(kind, label, language);\n    }\n/**\n * Attempt to display media in fullscreen mode\n * @return {?}\n */\nrequestFullscreen(): void {\n\n        if (this._hostElement.requestFullscreen) {\n            this._hostElement.requestFullscreen();\n        } else if (this._hostElement.webkitRequestFullscreen) {\n            this._hostElement.webkitRequestFullscreen();\n        } else if (( /** @type {?} */((<any>this._hostElement))).msRequestFullscreen) {\n            ( /** @type {?} */((<any>this._hostElement))).msRequestFullscreen();\n        } else if (( /** @type {?} */((<any>this._hostElement))).mozRequestFullScreen) {\n            ( /** @type {?} */((<any>this._hostElement))).mozRequestFullScreen();\n        }\n    }\n/**\n * Exit full screen mode\n * @return {?}\n */\nexitFullscreen(): void {\n\n        if (( /** @type {?} */((<any>this._hostElement))).exitFullscreen) {\n            document.exitFullscreen();\n        } else if (document.webkitExitFullscreen) {\n            document.webkitExitFullscreen();\n        } else if (( /** @type {?} */((<any>document))).msExitFullscreen) {\n            ( /** @type {?} */((<any>document))).msExitFullscreen();\n        } else if (( /** @type {?} */((<any>document))).mozCancelFullScreen) {\n            ( /** @type {?} */((<any>document))).mozCancelFullScreen();\n        }\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nfullscreenChange(event: Event) {\n        this.fullscreen = ( /** @type {?} */((<any>document))).fullscreen || document.webkitIsFullScreen || ( /** @type {?} */((<any>document))).mozFullScreen || ( /** @type {?} */((<any>document))).msFullscreenElement !== null && ( /** @type {?} */((<any>document))).msFullscreenElement !== undefined;\n        this.fullscreenEvent.next(this.fullscreen);\n    }\n/**\n * Toggle Fullscreen State\n * @return {?}\n */\ntoggleFullscreen(): void {\n        if (this.fullscreen) {\n            this.exitFullscreen();\n        } else {\n            this.requestFullscreen();\n        }\n    }\n/**\n * Extract the frames from the video\n * @param {?} width\n * @param {?} height\n * @param {?} skip\n * @return {?}\n */\ngetFrames(width: number, height: number, skip: number): Observable<ExtractedFrame> {\n\n        if (this.type === 'video') {\n            return this._frameExtractionService.getFrameThumbnails(this.source, width, height, 0, this.duration, 10);\n        }\n\n        return Observable.from([]);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: FrameExtractionService, },\n];\n}\n\nfunction MediaPlayerService_tsickle_Closure_declarations() {\n/** @type {?} */\nMediaPlayerService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMediaPlayerService.ctorParameters;\n/** @type {?} */\nMediaPlayerService.prototype.source;\n/** @type {?} */\nMediaPlayerService.prototype.type;\n/** @type {?} */\nMediaPlayerService.prototype.loaded;\n/** @type {?} */\nMediaPlayerService.prototype.playing;\n/** @type {?} */\nMediaPlayerService.prototype.initEvent;\n/** @type {?} */\nMediaPlayerService.prototype.abortEvent;\n/** @type {?} */\nMediaPlayerService.prototype.canPlayEvent;\n/** @type {?} */\nMediaPlayerService.prototype.canPlayThroughEvent;\n/** @type {?} */\nMediaPlayerService.prototype.durationChangeEvent;\n/** @type {?} */\nMediaPlayerService.prototype.endedEvent;\n/** @type {?} */\nMediaPlayerService.prototype.errorEvent;\n/** @type {?} */\nMediaPlayerService.prototype.loadedDataEvent;\n/** @type {?} */\nMediaPlayerService.prototype.loadedMetadataEvent;\n/** @type {?} */\nMediaPlayerService.prototype.loadStartEvent;\n/** @type {?} */\nMediaPlayerService.prototype.pauseEvent;\n/** @type {?} */\nMediaPlayerService.prototype.playEvent;\n/** @type {?} */\nMediaPlayerService.prototype.playingEvent;\n/** @type {?} */\nMediaPlayerService.prototype.rateChangeEvent;\n/** @type {?} */\nMediaPlayerService.prototype.seekedEvent;\n/** @type {?} */\nMediaPlayerService.prototype.seekingEvent;\n/** @type {?} */\nMediaPlayerService.prototype.stalledEvent;\n/** @type {?} */\nMediaPlayerService.prototype.suspendEvent;\n/** @type {?} */\nMediaPlayerService.prototype.timeUpdateEvent;\n/** @type {?} */\nMediaPlayerService.prototype.volumeChangeEvent;\n/** @type {?} */\nMediaPlayerService.prototype.waitingEvent;\n/** @type {?} */\nMediaPlayerService.prototype.mediaClickEvent;\n/** @type {?} */\nMediaPlayerService.prototype.fullscreenEvent;\n/** @type {?} */\nMediaPlayerService.prototype.quietModeEvent;\n/** @type {?} */\nMediaPlayerService.prototype.progressEvent;\n/** @type {?} */\nMediaPlayerService.prototype._mediaPlayer;\n/** @type {?} */\nMediaPlayerService.prototype._hostElement;\n/** @type {?} */\nMediaPlayerService.prototype._fullscreen;\n/** @type {?} */\nMediaPlayerService.prototype._quietMode;\n/** @type {?} */\nMediaPlayerService.prototype._frameExtractionService;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable } from '@angular/core';\nimport { Http, ResponseContentType } from '@angular/http';\nimport { Observable } from 'rxjs/Observable';\nimport { Observer } from 'rxjs/Observer';\nimport'rxjs/add/observable/of';\nexport class AudioService {\nprivate _audioBuffer: AudioBuffer;\nprivate _audioBufferSource: AudioBufferSourceNode;\nprivate _audioContext: AudioContext;\nprivate _gainNode: GainNode;\nprivate _analyserNode: AnalyserNode;\n/**\n * @param {?} _http\n */\nconstructor(private _http: Http) { }\n/**\n * @param {?} mediaElement\n * @return {?}\n */\ngetAudioFileMetadata(mediaElement: HTMLMediaElement): Observable<AudioMetadata> {\n        return Observable.create((observer: Observer<AudioMetadata>) => {\n            this._http.request(mediaElement.src, { responseType: ResponseContentType.Blob }).subscribe(response => {\n\n                let /** @type {?} */ filename = mediaElement.src.substring(mediaElement.src.lastIndexOf('/') + 1);\n                let /** @type {?} */ extension = mediaElement.src.substring(mediaElement.src.lastIndexOf('.') + 1).toLowerCase();\n                let /** @type {?} */ blob = response.blob();\n                let /** @type {?} */ description;\n\n                switch (extension) {\n                    case 'mp3':\n                        description = 'MPEG audio layer 3 file';\n                        break;\n\n                    case 'wma':\n                        description = 'Windows media audio file';\n                        break;\n\n                    case 'wav':\n                        description = 'WAVE audio file';\n                        break;\n\n                    case 'ogg':\n                        description = 'Ogg Vorbis file';\n                        break;\n\n                    case 'aac':\n                        description = 'Advanced audio coding file';\n                        break;\n\n                    case 'midi':\n                        description = 'Musical instrument digital interface file';\n                        break;\n\n                    default:\n                        description = 'Audio file';\n                        break;\n                }\n\n                observer.next({\n                    filename: filename,\n                    extension: extension,\n                    description: description,\n                    size: blob.size\n                });\n            });\n        });\n    }\n/**\n * @param {?} url\n * @return {?}\n */\ngetWaveformFromUrl(url: string): Observable<Float32Array[]> {\n\n        // if audio context is not support return a stream of empty data\n        if (!( /** @type {?} */((<any>window))).AudioContext) {\n            return Observable.of<Float32Array[]>([new Float32Array(0)]);\n        }\n\n        this._audioContext = new AudioContext();\n        this.createVolumeNode();\n        this.createAnalyserNode();\n\n        return Observable.create((observer: Observer<Float32Array[]>) => {\n\n            // load the media from the URL provided\n            this._http.request(url, { responseType: ResponseContentType.ArrayBuffer }).subscribe(response => {\n                this.getAudioBuffer(response.arrayBuffer()).subscribe(audioBuffer => {\n\n                    // create the buffer source\n                    this.createBufferSource(audioBuffer);\n\n                    let /** @type {?} */ dataPoints: Float32Array[] = [];\n                    let /** @type {?} */ channels = this._audioBuffer.numberOfChannels;\n\n                    // extract the data from each channel\n                    for (let /** @type {?} */ channelIdx = 0; channelIdx < channels; channelIdx++) {\n                        dataPoints[channelIdx] = this._audioBuffer.getChannelData(channelIdx);\n                    }\n\n                    observer.next(dataPoints);\n                    observer.complete();\n\n                    // cleanup after ourselves\n                    dataPoints = null;\n                }, (error) => observer.error(error));\n            }, (error) => observer.error(error));\n        });\n    }\n/**\n * @param {?=} channels\n * @param {?=} skip\n * @return {?}\n */\ngetWaveformPoints(channels: Float32Array[] = [], skip: number = 1000): WaveformPoint[] {\n\n        let /** @type {?} */ waveform: WaveformPoint[] = [];\n        let /** @type {?} */ duration = channels.length > 0 ? channels[0].length : 0;\n\n        // convert each channel data to a series of waveform points\n        for (let /** @type {?} */ idx = 0; idx < duration; idx += skip) {\n\n            // get all the channel data for a specific point\n            let /** @type {?} */ points = channels.map(channel => channel[idx]);\n\n            // find the minimum point and maximum points at each position across all channels\n            waveform.push({\n                min: points.reduce((previous, current) => current < previous ? current : previous),\n                max: points.reduce((previous, current) => current > previous ? current : previous)\n            });\n        }\n\n        return waveform;\n    }\n/**\n * @param {?} arrayBuffer\n * @return {?}\n */\nprivate getAudioBuffer(arrayBuffer: ArrayBuffer): Observable<AudioBuffer> {\n        return Observable.create((observer: Observer<AudioBuffer>) => {\n            this.getOfflineAudioContext().decodeAudioData(arrayBuffer, (audioBuffer: AudioBuffer) => {\n                observer.next(audioBuffer);\n                observer.complete();\n            }, (error) => observer.error(error));\n        });\n    }\n/**\n * @return {?}\n */\nprivate getOfflineAudioContext(): OfflineAudioContext {\n        return new OfflineAudioContext(1, 2, this._audioContext.sampleRate || 44100);\n    }\n/**\n * @param {?} audioBuffer\n * @return {?}\n */\nprivate createBufferSource(audioBuffer: AudioBuffer): void {\n        this.disconnectSource();\n\n        this._audioBuffer = audioBuffer;\n        this._audioBufferSource = this._audioContext.createBufferSource();\n        this._audioBufferSource.buffer = this._audioBuffer;\n        this._audioBufferSource.connect(this._analyserNode);\n    }\n/**\n * @return {?}\n */\nprivate createVolumeNode(): void {\n        this._gainNode = this._audioContext.createGain();\n        this._gainNode.connect(this._audioContext.destination);\n    }\n/**\n * @return {?}\n */\nprivate createAnalyserNode(): void {\n        this._analyserNode = this._audioContext.createAnalyser();\n        this._analyserNode.connect(this._gainNode);\n    }\n/**\n * @return {?}\n */\nprivate disconnectSource(): void {\n        if (this._audioBufferSource) {\n            this._audioBufferSource.disconnect();\n        }\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Http, },\n];\n}\n\nfunction AudioService_tsickle_Closure_declarations() {\n/** @type {?} */\nAudioService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nAudioService.ctorParameters;\n/** @type {?} */\nAudioService.prototype._audioBuffer;\n/** @type {?} */\nAudioService.prototype._audioBufferSource;\n/** @type {?} */\nAudioService.prototype._audioContext;\n/** @type {?} */\nAudioService.prototype._gainNode;\n/** @type {?} */\nAudioService.prototype._analyserNode;\n/** @type {?} */\nAudioService.prototype._http;\n}\n\n\nexport interface WaveformPoint {\n    min: number;\n    max: number;\n}\n\nexport interface AudioMetadata {\n    filename: string;\n    extension: string;\n    description: string;\n    size: number;\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { HttpModule } from '@angular/http';\nimport { AudioService } from './audio.service';\nexport class AudioServiceModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [ HttpModule ],\n    providers: [AudioService]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction AudioServiceModule_tsickle_Closure_declarations() {\n/** @type {?} */\nAudioServiceModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nAudioServiceModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Input, ViewChild, ElementRef, AfterViewInit, OnDestroy } from '@angular/core';\nimport { ExtractedFrame, FrameExtractionService } from '../../services/frame-extraction/frame-extraction.service';\nimport { MediaPlayerService } from './media-player.service';\nimport { Subject } from 'rxjs/Subject';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { Observable } from 'rxjs/Observable';\nimport { Observer } from 'rxjs/Observer';\nimport { AudioService, AudioMetadata } from '../../services/audio/index';\nimport { Subscription } from 'rxjs/Subscription';\nimport'rxjs/add/observable/from';\nimport'rxjs/add/operator/switchMap';\nexport class MediaPlayerComponent implements AfterViewInit, OnDestroy {\nprivate _playerRef: ElementRef;\nprivate _trackBarRef: ElementRef;\n\n    hovering: boolean = false;\n    audioMetadata: Observable<AudioMetadata>;\nprivate _hover$: Subscription;\nprivate _clicked$: Subscription;\nprivate _paused$: Subscription;\nprivate _playing$: Subscription;\nprivate _loading$: Subscription;\n/**\n * @return {?}\n */\nget source(): string {\n        return this.mediaPlayerService.source;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset source(value: string) {\n        this.mediaPlayerService.source = value;\n    }\n/**\n * @return {?}\n */\nget type(): MediaPlayerType {\n        return this.mediaPlayerService.type;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset type(value: MediaPlayerType) {\n        this.mediaPlayerService.type = value;\n    }\n/**\n * @return {?}\n */\nget quietMode(): boolean {\n        return this.mediaPlayerService.quietMode;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset quietMode(value: boolean) {\n        this.mediaPlayerService.quietMode = value;\n    }\n/**\n * @param {?} mediaPlayerService\n * @param {?} _audioService\n * @param {?} _elementRef\n */\nconstructor(public mediaPlayerService: MediaPlayerService,\nprivate _audioService: AudioService,\nprivate _elementRef: ElementRef) {\n\n        // show controls when hovering and in quiet mode\n        this._hover$ = Observable.fromEvent(this._elementRef.nativeElement, 'mousemove').switchMap((event: MouseEvent) => {\n            this.hovering = true;         \n            return Observable.of(event);\n        }).debounceTime(2000).subscribe(() => this.hovering = false);\n    }\n/**\n * @return {?}\n */\nngAfterViewInit(): void {\n        this.mediaPlayerService.setMediaPlayer(this._elementRef.nativeElement, this._playerRef.nativeElement);\n\n        this.audioMetadata = this._audioService.getAudioFileMetadata(this._playerRef.nativeElement);\n        this._playing$ = this.mediaPlayerService.playingEvent.subscribe(event => this.mediaPlayerService.playing.next(true));\n        this._paused$ = this.mediaPlayerService.pauseEvent.subscribe(event => this.mediaPlayerService.playing.next(false));\n        this._clicked$ = this.mediaPlayerService.mediaClickEvent.subscribe(() => this.mediaPlayerService.togglePlay());\n        this._loading$ = this.mediaPlayerService.loadedMetadataEvent.subscribe(() => this.mediaPlayerService.loaded = true);\n    }\n/**\n * @return {?}\n */\nngOnDestroy(): void {\n        this._hover$.unsubscribe();\n        this._playing$.unsubscribe();\n        this._paused$.unsubscribe();\n        this._clicked$.unsubscribe();\n        this._loading$.unsubscribe();\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-media-player',\n    template: `\n      <div class=\"video-player-container\" *ngIf=\"type === 'video'\">\n\n          <video class=\"video-player\" #player [src]=\"source\" (abort)=\"mediaPlayerService.abortEvent.next()\" (canplay)=\"mediaPlayerService.canPlayEvent.next()\"\n              (canplaythrough)=\"mediaPlayerService.canPlayThroughEvent.next()\" (durationchange)=\"mediaPlayerService.durationChangeEvent.next(player.duration)\" (ended)=\"mediaPlayerService.endedEvent.next()\"\n              (error)=\"mediaPlayerService.errorEvent.next($event)\" (loadeddata)=\"mediaPlayerService.loadedDataEvent.next($event)\" (loadedmetadata)=\"mediaPlayerService.loadedMetadataEvent.next($event)\"\n              (loadstart)=\"mediaPlayerService.loadStartEvent.next()\" (pause)=\"mediaPlayerService.pauseEvent.next()\" (play)=\"mediaPlayerService.playEvent.next()\" (playing)=\"mediaPlayerService.playingEvent.next(!player.paused)\"\n              (ratechange)=\"mediaPlayerService.rateChangeEvent.next(player.playbackRate)\" (seeked)=\"mediaPlayerService.seekedEvent.next(player.currentTime)\" (seeking)=\"mediaPlayerService.seekingEvent.next(player.currentTime)\"\n              (stalled)=\"mediaPlayerService.stalledEvent.next()\" (suspend)=\"mediaPlayerService.suspendEvent.next()\" (timeupdate)=\"mediaPlayerService.timeUpdateEvent.next(player.currentTime)\"\n              (volumechange)=\"mediaPlayerService.volumeChangeEvent.next(player.volume)\" (waiting)=\"mediaPlayerService.waitingEvent.next()\" (click)=\"mediaPlayerService.mediaClickEvent.next($event)\"></video>\n\n          <div class=\"video-overlay\" [class.playing]=\"mediaPlayerService.playing | async\">\n              <svg class=\"play-graphic\" x=\"0px\" y=\"0px\" viewBox=\"0 0 64 64\">\n                  <circle class=\"play-circle\" cx=\"32.2\" cy=\"31.8\" r=\"31.8\" />\n                  <polygon class=\"play-triangle\" points=\"23,14.1 23,50.8 48.3,32.5\" />\n              </svg>\n          </div>\n\n      </div>\n\n\n      <div class=\"audio-player\" *ngIf=\"type === 'audio'\">\n\n          <svg width=\"24px\" height=\"24px\" viewBox=\"0 0 24 24\">\n              <g stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\n                  <g transform=\"translate(-98.000000, -458.000000)\">\n                      <g transform=\"translate(98.000000, 458.000000)\">\n                          <path d=\"M4.5,0.5 L18.0435308,0.5 L23.5,6.22251502 L23.5,23.5 L4.5,23.5 L4.5,0.5 Z\" fill=\"#CCEAE2\"></path>\n                          <path d=\"M4.5,8 L4.5,0.5 L18,0.5 L23.5,6 L23.5,23.5 L18,23.5\" stroke=\"#60798D\" fill=\"#CCEAE2\"></path>\n                          <path d=\"M4,13.5 L0.5,13.5 L0.5,18.5 L4,18.5 L9.5,22.5 L9.5,9.5 L4,13.5 Z\" stroke=\"#60798D\" fill=\"#85D2BE\"></path>\n                          <path d=\"M11.5,12.5137939 C13.7576225,12.5137939 14.5,14.3709236 14.5,16 C14.5,17.6849236 13.7089152,19.5420532 11.5,19.5420532\"\n                              stroke=\"#60798D\"></path>\n                          <path d=\"M11.5,9 C15.8037643,9.04168701 18.5,11.6604805 18.5,16 C18.5,20.3395195 15.8804302,23.0079956 11.5,23\" stroke=\"#60798D\"></path>\n                          <path d=\"M17.5219116,0.761413574 L17.5219116,6 L23,6\" stroke=\"#60798D\" fill=\"#85D2BE\"></path>\n                      </g>\n                  </g>\n              </g>\n          </svg>\n\n          <p class=\"audio-file-name\">{{ (audioMetadata | async)?.filename }}</p>\n          <p class=\"audio-file-format\">{{ (audioMetadata | async)?.description }}</p>\n          <p class=\"audio-file-size\">{{ (audioMetadata | async)?.size | fileSize }}</p>\n\n          <audio #player [src]=\"source\" (abort)=\"mediaPlayerService.abortEvent.next()\" (canplay)=\"mediaPlayerService.canPlayEvent.next(true)\"\n              (canplaythrough)=\"mediaPlayerService.canPlayThroughEvent.next(true)\" (durationchange)=\"mediaPlayerService.durationChangeEvent.next(player.duration)\" (ended)=\"mediaPlayerService.endedEvent.next()\"\n              (error)=\"mediaPlayerService.errorEvent.next($event)\" (loadeddata)=\"mediaPlayerService.loadedDataEvent.next($event)\" (loadedmetadata)=\"mediaPlayerService.loadedMetadataEvent.next($event)\"\n              (loadstart)=\"mediaPlayerService.loadStartEvent.next()\" (pause)=\"mediaPlayerService.pauseEvent.next()\" (play)=\"mediaPlayerService.playEvent.next()\" (playing)=\"mediaPlayerService.playingEvent.next(!player.paused)\"\n              (ratechange)=\"mediaPlayerService.rateChangeEvent.next(player.playbackRate)\" (seeked)=\"mediaPlayerService.seekedEvent.next(player.currentTime)\" (seeking)=\"mediaPlayerService.seekingEvent.next(player.currentTime)\"\n              (stalled)=\"mediaPlayerService.stalledEvent.next()\" (suspend)=\"mediaPlayerService.suspendEvent.next()\" (timeupdate)=\"mediaPlayerService.timeUpdateEvent.next(player.currentTime)\"\n              (volumechange)=\"mediaPlayerService.volumeChangeEvent.next(player.volume)\" (waiting)=\"mediaPlayerService.waitingEvent.next()\" (click)=\"mediaPlayerService.mediaClickEvent.next($event)\"></audio>\n      </div>\n\n      <div class=\"control-bar\">\n          <ux-media-player-timeline></ux-media-player-timeline>\n          <ux-media-player-controls></ux-media-player-controls>\n      </div>\n    `,\n    providers: [ MediaPlayerService ],\n    host: {\n        'tabindex': '0',\n        '(keydown.Space)': 'mediaPlayerService.togglePlay()',\n        '[class.standard]': '!mediaPlayerService.fullscreen',\n        '[class.fullscreen]': 'mediaPlayerService.fullscreen',\n        '[class.quiet]': 'quietMode && type === \"video\" || mediaPlayerService.fullscreen',\n        '[class.hover]': 'hovering',\n        '[class.video]': 'type === \"video\"',\n        '[class.audio]': 'type === \"audio\"',\n        '(mouseenter)': 'hovering = true',\n        '(mouseleave)': 'hovering = false',\n        '(document:webkitfullscreenchange)': 'mediaPlayerService.fullscreenChange($event)',\n        '(document:mozfullscreenchange)': 'mediaPlayerService.fullscreenChange($event)',\n        '(document:MSFullscreenChange)': 'mediaPlayerService.fullscreenChange($event)'\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: MediaPlayerService, },\n{type: AudioService, },\n{type: ElementRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'_playerRef': [{ type: ViewChild, args: ['player', ] },],\n'_trackBarRef': [{ type: ViewChild, args: ['trackBar', ] },],\n'source': [{ type: Input },],\n'type': [{ type: Input },],\n'quietMode': [{ type: Input },],\n};\n}\n\nfunction MediaPlayerComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nMediaPlayerComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMediaPlayerComponent.ctorParameters;\n/** @type {?} */\nMediaPlayerComponent.propDecorators;\n/** @type {?} */\nMediaPlayerComponent.prototype._playerRef;\n/** @type {?} */\nMediaPlayerComponent.prototype._trackBarRef;\n/** @type {?} */\nMediaPlayerComponent.prototype.hovering;\n/** @type {?} */\nMediaPlayerComponent.prototype.audioMetadata;\n/** @type {?} */\nMediaPlayerComponent.prototype._hover$;\n/** @type {?} */\nMediaPlayerComponent.prototype._clicked$;\n/** @type {?} */\nMediaPlayerComponent.prototype._paused$;\n/** @type {?} */\nMediaPlayerComponent.prototype._playing$;\n/** @type {?} */\nMediaPlayerComponent.prototype._loading$;\n/** @type {?} */\nMediaPlayerComponent.prototype.mediaPlayerService;\n/** @type {?} */\nMediaPlayerComponent.prototype._audioService;\n/** @type {?} */\nMediaPlayerComponent.prototype._elementRef;\n}\n\n\nexport type MediaPlayerType = 'video' | 'audio';\n\nexport interface MediaPlayerBuffer {\n    start: number;\n    end: number;\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, Host } from '@angular/core';\nimport { MediaPlayerService } from '../media-player.service';\nexport class MediaPlayerBaseExtensionDirective {\n/**\n * @param {?} mediaPlayerService\n */\nconstructor(public mediaPlayerService: MediaPlayerService) { }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: '[mediaPlayerBaseExtension]' \n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: MediaPlayerService, },\n];\n}\n\nfunction MediaPlayerBaseExtensionDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nMediaPlayerBaseExtensionDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMediaPlayerBaseExtensionDirective.ctorParameters;\n/** @type {?} */\nMediaPlayerBaseExtensionDirective.prototype.mediaPlayerService;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, OnInit, ViewChild, ElementRef, AfterViewInit, OnDestroy } from '@angular/core';\nimport { MediaPlayerBaseExtensionDirective } from '../base-extension.directive';\nimport { Observable } from 'rxjs/Observable';\nimport'rxjs/add/operator/switchMap';\nimport'rxjs/add/operator/takeUntil';\nimport'rxjs/add/observable/fromEvent';\nimport { Subscription } from 'rxjs/Subscription';\nexport class MediaPlayerTimelineExtensionComponent extends MediaPlayerBaseExtensionDirective implements OnInit, AfterViewInit, OnDestroy {\n\n     thumb: ElementRef;\n     timelineRef: ElementRef;\n\n    current: number = 0;\n    position: number = 0;\n    duration: number = 0;\n    buffered: MediaPlayerBuffered[] = [];\n    mouseDown: boolean = false;\n    quietMode: boolean = false;\n    fullscreen: boolean = false;\nprivate _mouseEventSubscription: Subscription;\n\n    scrub = {\n        visible: false,\n        position: 0,\n        time: 0\n    };\n/**\n * @return {?}\n */\nngOnInit(): void {\n\n        // watch for changes to the current time\n        this.mediaPlayerService.durationChangeEvent.subscribe(duration => this.duration = duration);\n        this.mediaPlayerService.quietModeEvent.subscribe(quietMode => this.quietMode = quietMode);\n        this.mediaPlayerService.fullscreenEvent.subscribe(fullscreen => {\n            this.fullscreen = fullscreen;\n            this.scrub.position = 0;\n        });\n\n        this.mediaPlayerService.timeUpdateEvent.subscribe(current => {\n            this.current = current;\n            this.position = (this.current / this.duration) * 100;\n        });\n\n        this.mediaPlayerService.progressEvent.subscribe((buffered: TimeRanges) => {\n            this.buffered = [];\n\n            for (let /** @type {?} */ idx = 0; idx < buffered.length; idx++) {\n                this.buffered.push({ start: (buffered.start(idx) / this.duration) * 100, end: (buffered.end(idx) / this.duration) * 100 });\n            }\n        });\n    }\n/**\n * @return {?}\n */\nngAfterViewInit(): void {\n        let /** @type {?} */ mousedown$ = Observable.fromEvent(this.thumb.nativeElement, 'mousedown');\n        let /** @type {?} */ mousemove$ = Observable.fromEvent(document, 'mousemove');\n        let /** @type {?} */ mouseup$ = Observable.fromEvent(document, 'mouseup');\n\n        this._mouseEventSubscription = mousedown$.switchMap(event => mousemove$.takeUntil(mouseup$)).subscribe(event => {\n            this.scrub.visible = false;\n        });\n    }\n/**\n * @return {?}\n */\nngOnDestroy() {\n        this._mouseEventSubscription.unsubscribe();\n    }\n/**\n * @param {?=} event\n * @return {?}\n */\nupdateScrub(event?: MouseEvent): void {\n\n        let /** @type {?} */ target = /** @type {?} */(( event.target as HTMLElement));\n      \n        if (target.classList.contains('media-progress-bar-thumb')) {\n            return;\n        }\n\n        let /** @type {?} */ timeline = /** @type {?} */(( this.timelineRef.nativeElement as HTMLDivElement));\n        let /** @type {?} */ bounds = timeline.getBoundingClientRect();\n\n        this.scrub.position = event.offsetX;\n        this.scrub.time = (event.offsetX / bounds.width) * this.mediaPlayerService.duration;\n\n        if (this.mouseDown) {\n            this.mediaPlayerService.pause();\n            this.mediaPlayerService.currentTime = this.scrub.time;\n        }\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-media-player-timeline',\n    template: `\n      <p class=\"current-time\">{{ current | duration }}</p>\n\n      <div #timeline class=\"timeline-bar\" (mouseenter)=\"scrub.visible = true; pop.show()\" (mouseleave)=\"scrub.visible = false; pop.hide()\"\n          (mousemove)=\"updateScrub($event)\" (mouseup)=\"updateScrub($event)\" (mousedown)=\"mouseDown = true; $event.preventDefault()\">\n\n          <div class=\"buffered-bar\" *ngFor=\"let buffer of buffered\" [style.left.%]=\"buffer.start\" [style.width.%]=\"buffer.end - buffer.start\"></div>\n\n          <div class=\"media-progress-bar\" [style.width.%]=\"position\">\n              <div #progressThumb class=\"media-progress-bar-thumb\" (mouseenter)=\"scrub.visible = false; pop.hide(); $event.stopPropagation()\"\n                  (mouseleave)=\"scrub.visible = true; pop.show(); $event.stopPropagation()\"></div>\n          </div>\n\n          <div class=\"scrub-handle\" [class.scrub-handle-hidden]=\"!scrub.visible\" [style.left.px]=\"scrub.position\" [tooltip]=\"popTemplate\" placement=\"top\" triggers=\"\" #pop=\"bs-tooltip\"\n              container=\"body\" tooltipPopupDelay=\"100\" [isDisabled]=\"duration === 0\"></div>\n      </div>\n\n      <p class=\"duration-time\">{{ duration | duration }}</p>\n\n      <ng-template #popTemplate>\n          <span>{{ scrub.time | duration }}</span>\n      </ng-template>\n    `,\n    host: {\n        '(document:mouseup)': 'mouseDown = false',\n        '[class.quiet]': 'quietMode || fullscreen'\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'thumb': [{ type: ViewChild, args: ['progressThumb', ] },],\n'timelineRef': [{ type: ViewChild, args: ['timeline', ] },],\n};\n}\n\nfunction MediaPlayerTimelineExtensionComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nMediaPlayerTimelineExtensionComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMediaPlayerTimelineExtensionComponent.ctorParameters;\n/** @type {?} */\nMediaPlayerTimelineExtensionComponent.propDecorators;\n/** @type {?} */\nMediaPlayerTimelineExtensionComponent.prototype.thumb;\n/** @type {?} */\nMediaPlayerTimelineExtensionComponent.prototype.timelineRef;\n/** @type {?} */\nMediaPlayerTimelineExtensionComponent.prototype.current;\n/** @type {?} */\nMediaPlayerTimelineExtensionComponent.prototype.position;\n/** @type {?} */\nMediaPlayerTimelineExtensionComponent.prototype.duration;\n/** @type {?} */\nMediaPlayerTimelineExtensionComponent.prototype.buffered;\n/** @type {?} */\nMediaPlayerTimelineExtensionComponent.prototype.mouseDown;\n/** @type {?} */\nMediaPlayerTimelineExtensionComponent.prototype.quietMode;\n/** @type {?} */\nMediaPlayerTimelineExtensionComponent.prototype.fullscreen;\n/** @type {?} */\nMediaPlayerTimelineExtensionComponent.prototype._mouseEventSubscription;\n/** @type {?} */\nMediaPlayerTimelineExtensionComponent.prototype.scrub;\n}\n\n\nexport interface MediaPlayerBuffered {\n    start: number;\n    end: number;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, OnInit, HostListener, ElementRef, ViewChild } from '@angular/core';\nimport { MediaPlayerBaseExtensionDirective } from '../base-extension.directive';\nimport { Observable } from 'rxjs/Observable';\nimport'rxjs/add/observable/timer';\nexport class MediaPlayerControlsExtensionComponent extends MediaPlayerBaseExtensionDirective implements OnInit {\n\n    playing: boolean;\n    quietMode: boolean;\n    fullscreen: boolean = false;\n    volumeActive: boolean = false;\n    volumeDragging: boolean = false;\n\n     volumeIcon: ElementRef;\n     volumeSlider: ElementRef;\n     volumeContainer: ElementRef;\nprivate _volume: number = 50;\nprivate _previousVolume = 50;\n/**\n * @return {?}\n */\nget volume(): number {\n        return this._volume;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset volume(value: number) {\n\n        if (value === 0 && this._volume !== 0) {\n            this._previousVolume = this._volume;\n        }\n        \n        this._volume = Math.min(Math.max(value, 0), 100);\n        this.mediaPlayerService.volume = this._volume / 100;\n    }\n/**\n * @return {?}\n */\nngOnInit(): void {\n        this.mediaPlayerService.playEvent.subscribe(_ => this.playing = true);\n        this.mediaPlayerService.pauseEvent.subscribe(_ => this.playing = false);\n        this.mediaPlayerService.quietModeEvent.subscribe(quietMode => this.quietMode = quietMode);\n        this.mediaPlayerService.volumeChangeEvent.subscribe(volume => this.volume = volume * 100);\n        this.mediaPlayerService.initEvent.debounceTime(1).filter(init => init === true).subscribe(() => this.volume = this.mediaPlayerService.volume * 100);\n        this.mediaPlayerService.fullscreenEvent.subscribe(fullscreen => this.fullscreen = fullscreen);\n\n        let /** @type {?} */ mouseenter$ = Observable.fromEvent(this.volumeIcon.nativeElement, 'mouseenter');\n        let /** @type {?} */ mouseenterContainer$ = Observable.fromEvent(this.volumeContainer.nativeElement, 'mouseenter');\n        let /** @type {?} */ mouseleaveContainer$ = Observable.fromEvent(this.volumeContainer.nativeElement, 'mouseleave');\n\n        mouseenter$.subscribe(() => this.volumeActive = true);\n        mouseleaveContainer$.switchMap(() => Observable.timer(1500).takeUntil(mouseenterContainer$)).subscribe(() => this.volumeActive = false);\n    }\n/**\n * @return {?}\n */\ntoggleMute(): void {\n        if (this.volume === 0) {\n            this.volume = this._previousVolume;\n        } else {\n            this.volume = 0;\n        }\n    }\n/**\n * @return {?}\n */\ntogglePlay(): void {\n        if (this.playing) {\n            this.mediaPlayerService.pause();\n        } else {\n            this.mediaPlayerService.play();\n        }\n    }\n/**\n * @return {?}\n */\nsetFullscreen(): void {\n        this.mediaPlayerService.toggleFullscreen();\n    }\n/**\n * @return {?}\n */\ngoToStart(): void {\n        this.mediaPlayerService.currentTime = 0;\n    }\n/**\n * @return {?}\n */\ngoToEnd(): void {\n        this.mediaPlayerService.currentTime = this.mediaPlayerService.duration;\n    }\n/**\n * @param {?} event\n * @return {?}\n */\ndragStart(event: MouseEvent): void {\n        event.preventDefault();\n        this.volumeDragging = true;\n\n        let /** @type {?} */ thumb = /** @type {?} */(( event.target as HTMLDivElement));\n        thumb.focus();\n    }\n/**\n * @param {?} event\n * @return {?}\n */\ndragMove(event: MouseEvent): void {\n        if (!this.volumeDragging) {\n            return;\n        }\n\n        event.preventDefault();\n\n        let /** @type {?} */ slider = /** @type {?} */(( this.volumeSlider.nativeElement as HTMLDivElement));\n        let /** @type {?} */ bounds = slider.getBoundingClientRect();\n\n        let /** @type {?} */ x = Math.min(bounds.width, Math.max(0, event.pageX - bounds.left));\n\n        // convert to a percentage\n        this.volume = (x / bounds.width) * 100;\n    }\n/**\n * @return {?}\n */\ndragEnd(): void {\n        this.volumeDragging = false;        \n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-media-player-controls',\n    template: `\n      <div class=\"volume-container\">\n\n          <div class=\"volume-slider-container\" #volumeContainer [class.active]=\"volumeActive\">\n              <div class=\"volume-slider-icon\" #volumeIcon>\n                  <span class=\"hpe-icon\" [class.hpe-volume-mute]=\"volume === 0\" [class.hpe-volume-low]=\"volume > 0 && volume <= 70\" [class.hpe-volume]=\"volume > 70\" [tooltip]=\"muteTooltip\" (click)=\"toggleMute()\"></span>\n              </div>\n        \n              <div class=\"volume-slider-node\">\n                  <div class=\"volume-slider\" #volumeSlider>\n                      <div class=\"volume-track-lower\" [style.width.%]=\"volume\"></div>\n                      <div class=\"volume-slider-thumb\" (mousedown)=\"dragStart($event)\" [style.left.%]=\"volume\" tabindex=\"0\" (keydown.ArrowRight)=\"volume = volume + 10\" (keydown.ArrowLeft)=\"volume = volume - 10\"></div>\n                  </div>\n              </div>\n          </div>\n      </div>\n\n      <div class=\"spacer\"></div>\n\n      <svg viewBox=\"0 0 51.5 64\" width=\"14\" height=\"17\" class=\"control-button\" (click)=\"goToStart()\">\n          <rect x=\"0\" y=\"0\" width=\"7.5\" height=\"64\" />\n          <polygon points=\"51.5,64 51.5,0 7.4,32 \" />\n      </svg>\n\n      <svg viewBox=\"0 0 45 64\" width=\"20\" height=\"29\" class=\"control-button\" *ngIf=\"!playing\" (click)=\"togglePlay()\">\n          <polygon points=\"0.4,0 0.4,64 44.6,32\" />\n      </svg>\n\n      <svg viewBox=\"0 0 43 56.9\" class=\"control-button\" width=\"20\" height=\"29\" *ngIf=\"playing\" (click)=\"togglePlay()\">\n          <rect y=\"0.1\" width=\"15.7\" height=\"56.9\" />\n          <rect x=\"27.3\" y=\"0.1\" width=\"15.7\" height=\"56.9\" />\n      </svg>\n\n      <svg viewBox=\"0 0 51.5 64\" width=\"14\" height=\"17\" class=\"control-button\" (click)=\"goToEnd()\">\n          <rect x=\"44.1\" y=\"0\" width=\"7.5\" height=\"64\" />\n          <polygon points=\"0,64 0,0 44.1,32 \" />\n      </svg>\n\n      <div class=\"spacer\"></div>\n\n      <span class=\"hpe-icon\" *ngIf=\"mediaPlayerService.type !== 'audio'\" [class.hpe-expand]=\"!mediaPlayerService.fullscreen\" [class.hpe-contract]=\"mediaPlayerService.fullscreen\"\n          (click)=\"setFullscreen()\"></span>\n\n      <ng-template #muteTooltip>{{ volume === 0 ? 'Unmute' : 'Mute' }}</ng-template>\n    `,\n    host: {\n        '[class.quiet]': 'quietMode || fullscreen'\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'volumeIcon': [{ type: ViewChild, args: ['volumeIcon', ] },],\n'volumeSlider': [{ type: ViewChild, args: ['volumeSlider', ] },],\n'volumeContainer': [{ type: ViewChild, args: ['volumeContainer', ] },],\n'dragMove': [{ type: HostListener, args: ['document:mousemove', ['$event'], ] },],\n'dragEnd': [{ type: HostListener, args: ['document:mouseup', ] },],\n};\n}\n\nfunction MediaPlayerControlsExtensionComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nMediaPlayerControlsExtensionComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMediaPlayerControlsExtensionComponent.ctorParameters;\n/** @type {?} */\nMediaPlayerControlsExtensionComponent.propDecorators;\n/** @type {?} */\nMediaPlayerControlsExtensionComponent.prototype.playing;\n/** @type {?} */\nMediaPlayerControlsExtensionComponent.prototype.quietMode;\n/** @type {?} */\nMediaPlayerControlsExtensionComponent.prototype.fullscreen;\n/** @type {?} */\nMediaPlayerControlsExtensionComponent.prototype.volumeActive;\n/** @type {?} */\nMediaPlayerControlsExtensionComponent.prototype.volumeDragging;\n/** @type {?} */\nMediaPlayerControlsExtensionComponent.prototype.volumeIcon;\n/** @type {?} */\nMediaPlayerControlsExtensionComponent.prototype.volumeSlider;\n/** @type {?} */\nMediaPlayerControlsExtensionComponent.prototype.volumeContainer;\n/** @type {?} */\nMediaPlayerControlsExtensionComponent.prototype._volume;\n/** @type {?} */\nMediaPlayerControlsExtensionComponent.prototype._previousVolume;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nexport class DurationPipe implements PipeTransform {\n/**\n * @param {?} seconds\n * @return {?}\n */\ntransform(seconds: number): any {\n\n        let /** @type {?} */ minutes = Math.floor(seconds / 60);\n        let /** @type {?} */ hours = Math.floor(minutes / 60);\n        let /** @type {?} */ days = Math.floor(hours / 24);\n\n        hours = hours - (days * 24);\n        minutes = minutes - (days * 24 * 60) - (hours * 60);\n        seconds = Math.floor(seconds - (days * 24 * 60 * 60) - (hours * 60 * 60) - (minutes * 60));\n\n        if (hours > 0) {\n            return `${this.pad(hours)}:${this.pad(minutes)}:${this.pad(seconds)}`;\n        } else {\n            return `${this.pad(minutes)}:${this.pad(seconds)}`;\n        }\n    }\n/**\n * @param {?} value\n * @return {?}\n */\npad(value: number): string {\n        if (value < 10) {\n            return `0${value}`;\n        }\n\n        return value.toString();\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Pipe, args: [{\n    name: 'duration'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction DurationPipe_tsickle_Closure_declarations() {\n/** @type {?} */\nDurationPipe.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDurationPipe.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\n\nimport { DurationPipe } from './duration.pipe';\nexport class DurationPipeModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    exports: [DurationPipe],\n    declarations: [DurationPipe]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction DurationPipeModule_tsickle_Closure_declarations() {\n/** @type {?} */\nDurationPipeModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDurationPipeModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nexport class FileSizePipe implements PipeTransform {\n/**\n * @param {?} value\n * @return {?}\n */\ntransform(value: number): any {\n\n        // allow for async values\n        if (!value) {\n            return value;\n        }\n        \n        let /** @type {?} */ units = ['B', 'KB', 'MB', 'GB', 'TB'];\n\n        // calculate the which unit bracket the values should be a part of\n        let /** @type {?} */ idx = Math.floor(Math.log(value) / Math.log(1024));\n        let /** @type {?} */ formattedValue = value / Math.pow(1024, idx);\n        \n        return `${formattedValue.toFixed(2)} ${units[idx]}`;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Pipe, args: [{\n    name: 'fileSize'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction FileSizePipe_tsickle_Closure_declarations() {\n/** @type {?} */\nFileSizePipe.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFileSizePipe.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\n\nimport { FileSizePipe } from './file-size.pipe';\nexport class FileSizePipeModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    exports: [FileSizePipe],\n    declarations: [FileSizePipe]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction FileSizePipeModule_tsickle_Closure_declarations() {\n/** @type {?} */\nFileSizePipeModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFileSizePipeModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { MediaPlayerComponent } from './media-player.component';\nimport { MediaPlayerTimelineExtensionComponent } from './extensions/timeline/timeline.component';\nimport { MediaPlayerBaseExtensionDirective } from './extensions/base-extension.directive';\nimport { MediaPlayerControlsExtensionComponent } from './extensions/controls/controls.component';\nimport { FrameExtractionModule } from '../../services/frame-extraction/frame-extraction.module';\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\nimport { AudioServiceModule } from '../../services/audio/index';\nimport { DurationPipeModule } from '../../pipes/duration/index';\nimport { FileSizePipeModule } from '../../pipes/file-size/index';\nimport { MediaPlayerService } from './media-player.service';\n\nconst /** @type {?} */ DECLARATIONS = [\n    MediaPlayerComponent,\n    MediaPlayerTimelineExtensionComponent,\n    MediaPlayerBaseExtensionDirective,\n    MediaPlayerControlsExtensionComponent\n];\nexport class MediaPlayerModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        CommonModule,\n        FrameExtractionModule,\n        TooltipModule.forRoot(),\n        AudioServiceModule,\n        DurationPipeModule,\n        FileSizePipeModule\n    ],\n    exports: DECLARATIONS,\n    declarations: DECLARATIONS,\n    providers: [MediaPlayerService]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction MediaPlayerModule_tsickle_Closure_declarations() {\n/** @type {?} */\nMediaPlayerModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMediaPlayerModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive } from '@angular/core';\nexport class VirtualScrollLoadingDirective { static decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{ \n    selector: '[uxVirtualScrollLoading]' \n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction VirtualScrollLoadingDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nVirtualScrollLoadingDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nVirtualScrollLoadingDirective.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive } from '@angular/core';\nexport class VirtualScrollLoadButtonDirective { static decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: '[uxVirtualScrollLoadButton]' \n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction VirtualScrollLoadButtonDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nVirtualScrollLoadButtonDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nVirtualScrollLoadButtonDirective.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive } from '@angular/core';\nexport class VirtualScrollCellDirective {\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{ \n    selector: '[uxVirtualScrollCell]' \n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction VirtualScrollCellDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nVirtualScrollCellDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nVirtualScrollCellDirective.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, OnInit, EventEmitter, Output, Input, HostListener, ElementRef, Renderer2, AfterContentInit, ContentChild, TemplateRef, OnDestroy, SimpleChanges } from '@angular/core';\nimport { ResizeService } from '../../directives/resize/index';\nimport { VirtualScrollLoadingDirective } from './directives/virtual-scroll-loading.directive';\nimport { VirtualScrollLoadButtonDirective } from './directives/virtual-scroll-load-button.directive';\nimport { VirtualScrollCellDirective } from './directives/virtual-scroll-cell.directive';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { Observable } from 'rxjs/Observable';\nimport { Subscription } from 'rxjs/Subscription';\nexport class VirtualScrollComponent implements OnInit, AfterContentInit, OnDestroy {\n\n     collection: Observable<any[]> = Observable.create();\n     cellHeight: number;\n     loadOnScroll: boolean = true;\n\n     loading: EventEmitter<number> = new EventEmitter<number>();\n\n     cellTemplate: TemplateRef<any>;\n     loadingIndicatorTemplate: TemplateRef<any>;\n     loadButtonTemplate: TemplateRef<any>;\n\n    cells: BehaviorSubject<any[]> = new BehaviorSubject([]);\n    scrollTop: number = 0;\n    isLoading: boolean = false;\n    pageNumber: number = 0;\n    data: any[] = [];\n    loadingComplete: boolean = false;\nprivate _subscription: Subscription;\nprivate _height: number;\n/**\n * @param {?} _elementRef\n * @param {?} resizeService\n * @param {?} renderer\n */\nconstructor(private _elementRef: ElementRef, resizeService: ResizeService, renderer: Renderer2) {\n\n        // watch for any future changes to size\n        resizeService.addResizeListener(_elementRef.nativeElement, renderer).subscribe(event => this._height = event.height);\n    }\n/**\n * @return {?}\n */\nngOnInit() {\n\n        if (!this.cellHeight) {\n            throw new Error('Virtual Scroll Component requires \"cellHeight\" property to be defined.');\n        }\n\n        // subscribe to the collection\n        this.setupObservable();\n\n        // load the first page of data\n        this.loadNextPage();\n    }\n/**\n * @return {?}\n */\nngAfterContentInit(): void {\n        // re-render cells now that we can display any loading indicator or loading button\n        this.renderCells();\n    }\n/**\n * @param {?} changes\n * @return {?}\n */\nngOnChanges(changes: SimpleChanges): void {\n        if (changes.collection && changes.collection.currentValue !== changes.collection.previousValue && !changes.collection.isFirstChange()) {\n            this.setupObservable();\n            this.reset();\n        }\n    }\n/**\n * @return {?}\n */\nngOnDestroy(): void {\n        this._subscription.unsubscribe();\n    }\n/**\n * @return {?}\n */\nsetupObservable(): void {\n\n        // if there is a current subscription, unsubscribe\n        if (this._subscription && this._subscription.unsubscribe) {\n            this._subscription.unsubscribe();\n        }\n\n        this._subscription = this.collection.subscribe(collection => {\n            this.data.push(...collection);\n            this.renderCells();\n            this.isLoading = false;\n        }, null, () => {\n            this.loadingComplete = true;\n        });\n    }\n/**\n * @return {?}\n */\nrenderCells(): void {\n        this.cells.next(this.getVisibleCells());\n\n        if (this.loadOnScroll && !this.isLoading && !this.loadingComplete) {\n            const /** @type {?} */ remainingScroll = this._elementRef.nativeElement.scrollHeight - (this._elementRef.nativeElement.scrollTop + this._elementRef.nativeElement.clientHeight);\n\n            // if the current cells take up less than the height of the component then load the next page\n            if (remainingScroll <= this._elementRef.nativeElement.clientHeight) {\n                this.loadNextPage();\n            }\n        }\n    }\n/**\n * @return {?}\n */\ngetVisibleCells(): any[] {\n\n        // store the initial element height\n        if (!this._height) {\n            this._height = this._elementRef.nativeElement.offsetHeight;\n        }\n\n        // perform some calculations\n        const /** @type {?} */ scrollTop = this._elementRef.nativeElement.scrollTop;\n        const /** @type {?} */ startCell = Math.floor(scrollTop / this.cellHeight);\n        const /** @type {?} */ endCell = Math.ceil(this._height / this.cellHeight) + 1;\n\n        // update the scroll position\n        this.scrollTop = scrollTop - (scrollTop % this.cellHeight);\n\n        // return a sublist of items visible on the screen\n        return this.data.slice(startCell, startCell + endCell);\n    }\n/**\n * @return {?}\n */\ngetTotalHeight(): number {\n        return this.cellHeight * this.data.length;\n    }\n/**\n * @return {?}\n */\nloadNextPage(): void {\n        this.isLoading = true;\n        this.loading.next(this.pageNumber);\n        this.pageNumber++;\n    }\n/**\n * @return {?}\n */\nreset(): void {\n\n        // reset all values\n        this.scrollTop = 0;\n        this.data = [];\n        this._height = undefined;\n        this.pageNumber = 0;\n        this.loadingComplete = false;\n\n        // set scroll position\n        this._elementRef.nativeElement.scrollTop = 0;\n\n        // clear the current cells\n        this.renderCells();\n\n        // reload first page\n        this.loadNextPage();\n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-virtual-scroll',\n    template: `\n      <div class=\"virtual-scroll-content-height\" [style.height.px]=\"getTotalHeight()\"></div>\n      <div class=\"virtual-scroll-content\" [style.transform]=\"'translateY(' + scrollTop + 'px)'\">\n\n          <!-- Virtually Render Cells -->\n          <ng-container *ngFor=\"let cell of cells | async\">\n              <ng-container *ngTemplateOutlet=\"cellTemplate; context: { cell: cell }\"></ng-container>\n          </ng-container>\n\n          <!-- Loading Indicator -->\n          <ng-container *ngIf=\"loadingIndicatorTemplate && isLoading\" [ngTemplateOutlet]=\"loadingIndicatorTemplate\"></ng-container>\n\n          <!-- Loading Button -->\n          <div class=\"virtual-scroll-load-button\" *ngIf=\"loadButtonTemplate && !loadOnScroll && !loadingComplete && !isLoading\" (click)=\"loadNextPage()\">\n              <ng-container *ngTemplateOutlet=\"loadButtonTemplate\"></ng-container>\n          </div>\n    \n      </div>\n    `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: ResizeService, },\n{type: Renderer2, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'collection': [{ type: Input },],\n'cellHeight': [{ type: Input },],\n'loadOnScroll': [{ type: Input },],\n'loading': [{ type: Output },],\n'cellTemplate': [{ type: ContentChild, args: [VirtualScrollCellDirective, { read: TemplateRef }, ] },],\n'loadingIndicatorTemplate': [{ type: ContentChild, args: [VirtualScrollLoadingDirective, { read: TemplateRef }, ] },],\n'loadButtonTemplate': [{ type: ContentChild, args: [VirtualScrollLoadButtonDirective, { read: TemplateRef }, ] },],\n'renderCells': [{ type: HostListener, args: ['scroll', ] },],\n};\n}\n\nfunction VirtualScrollComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nVirtualScrollComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nVirtualScrollComponent.ctorParameters;\n/** @type {?} */\nVirtualScrollComponent.propDecorators;\n/** @type {?} */\nVirtualScrollComponent.prototype.collection;\n/** @type {?} */\nVirtualScrollComponent.prototype.cellHeight;\n/** @type {?} */\nVirtualScrollComponent.prototype.loadOnScroll;\n/** @type {?} */\nVirtualScrollComponent.prototype.loading;\n/** @type {?} */\nVirtualScrollComponent.prototype.cellTemplate;\n/** @type {?} */\nVirtualScrollComponent.prototype.loadingIndicatorTemplate;\n/** @type {?} */\nVirtualScrollComponent.prototype.loadButtonTemplate;\n/** @type {?} */\nVirtualScrollComponent.prototype.cells;\n/** @type {?} */\nVirtualScrollComponent.prototype.scrollTop;\n/** @type {?} */\nVirtualScrollComponent.prototype.isLoading;\n/** @type {?} */\nVirtualScrollComponent.prototype.pageNumber;\n/** @type {?} */\nVirtualScrollComponent.prototype.data;\n/** @type {?} */\nVirtualScrollComponent.prototype.loadingComplete;\n/** @type {?} */\nVirtualScrollComponent.prototype._subscription;\n/** @type {?} */\nVirtualScrollComponent.prototype._height;\n/** @type {?} */\nVirtualScrollComponent.prototype._elementRef;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { VirtualScrollComponent } from './virtual-scroll.component';\nimport { ResizeModule } from '../../directives/resize/index';\nimport { VirtualScrollLoadingDirective } from './directives/virtual-scroll-loading.directive';\nimport { VirtualScrollLoadButtonDirective } from './directives/virtual-scroll-load-button.directive';\nimport { VirtualScrollCellDirective } from './directives/virtual-scroll-cell.directive';\n\nconst /** @type {?} */ DECLARATIONS = [\n    VirtualScrollComponent,\n    VirtualScrollLoadingDirective,\n    VirtualScrollLoadButtonDirective,\n    VirtualScrollCellDirective\n];\nexport class VirtualScrollModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        CommonModule,\n        ResizeModule\n    ],\n    exports: DECLARATIONS,\n    declarations: DECLARATIONS\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction VirtualScrollModule_tsickle_Closure_declarations() {\n/** @type {?} */\nVirtualScrollModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nVirtualScrollModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Input, EventEmitter } from '@angular/core';\nexport class WizardStepComponent {\n    \n     header: string;\n     valid: boolean = true;\n     visitedChange = new EventEmitter<boolean>();\nprivate _active: boolean = false;\nprivate _visited: boolean = false;\n/**\n * @return {?}\n */\nget visited(): boolean {\n        return this._visited;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset visited(value: boolean) {\n        this._visited = value;\n        this.visitedChange.next(value);\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset active(value: boolean) {\n        \n        // store the active state of the step\n        this._active = value;\n\n        // if the value is true then the step should also be marked as visited\n        if (value === true) {\n            this.visited = true;\n        }\n    }\n/**\n * @return {?}\n */\nget active(): boolean {\n        return this._active;\n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-wizard-step',\n    template: `\n      <ng-container *ngIf=\"active\">\n          <ng-content></ng-content>\n      </ng-container>\n    `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'header': [{ type: Input },],\n'valid': [{ type: Input },],\n'visitedChange': [{ type: Input },],\n'visited': [{ type: Input },],\n};\n}\n\nfunction WizardStepComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nWizardStepComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nWizardStepComponent.ctorParameters;\n/** @type {?} */\nWizardStepComponent.propDecorators;\n/** @type {?} */\nWizardStepComponent.prototype.header;\n/** @type {?} */\nWizardStepComponent.prototype.valid;\n/** @type {?} */\nWizardStepComponent.prototype.visitedChange;\n/** @type {?} */\nWizardStepComponent.prototype._active;\n/** @type {?} */\nWizardStepComponent.prototype._visited;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Input, ContentChildren, QueryList, AfterViewInit, Output, EventEmitter } from '@angular/core';\nimport { WizardStepComponent } from './wizard-step.component';\nexport class WizardComponent implements AfterViewInit {\nprivate _step: number = 0;\n\n     steps = new QueryList<WizardStepComponent>();\n\n     orientation: 'horizontal' | 'vertical' = 'horizontal';\n\n     nextText: string = 'Next';\n     previousText: string = 'Previous';\n     cancelText: string = 'Cancel';\n     finishText: string = 'Finish';\n\n     nextTooltip: string = 'Go to the next step';\n     previousTooltip: string = 'Go to the previous step';\n     cancelTooltip: string = 'Cancel the wizard';\n     finishTooltip: string = 'Finish the wizard';\n\n     nextDisabled: boolean = false;\n     previousDisabled: boolean = false;\n     cancelDisabled: boolean = false;\n     finishDisabled: boolean = false;\n\n     nextVisible: boolean = true;\n     previousVisible: boolean = true;\n     cancelVisible: boolean = true;\n     finishVisible: boolean = true;\n     cancelAlwaysVisible: boolean = false;\n     finishAlwaysVisible: boolean = false;\n\n     onNext = new EventEmitter<number>();\n     onPrevious = new EventEmitter<number>();\n     onCancel = new EventEmitter<void>();\n     onFinish = new EventEmitter<void>();\n     stepChange = new EventEmitter<number>();\n\n    invalidIndicator: boolean = false;\n/**\n * @return {?}\n */\nget step() {\n        return this._step;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset step(value: number) {\n        \n        // only accept numbers as valid options\n        if (typeof value === 'number') {\n\n            // store the active step\n            this._step = value;\n\n            // update which steps should be active\n            this.update();\n\n            // emit the change event\n            this.stepChange.next(this.step);\n\n            // reset the invalid state\n            this.invalidIndicator = false;\n        }\n    }\n/**\n * @return {?}\n */\nngAfterViewInit(): void {\n\n        // initially set the correct visibility of the steps\n        setTimeout(this.update.bind(this));\n    }\n/**\n * Navigate to the next step\n * @return {?}\n */\nnext(): void {\n\n        // check if current step is invalid\n        if (!this.getCurrentStep().valid) {\n            this.invalidIndicator = true;\n            return;\n        }\n\n        // check if we are currently on the last step\n        if ((this.step + 1) < this.steps.length) {\n            this.step++;\n\n            // emit the current step\n            this.onNext.next(this.step);\n        }\n    }\n/**\n * Navigate to the previous step\n * @return {?}\n */\nprevious(): void {\n        \n        // check if we are currently on the last step\n        if (this.step > 0) {\n            this.step--;\n\n            // emit the current step\n            this.onPrevious.next(this.step);            \n        }\n    }\n/**\n * Perform actions when the finish button is clicked\n * @return {?}\n */\nfinish(): void {\n        this.onFinish.next();        \n    }\n/**\n * Perform actions when the cancel button is clicked\n * @return {?}\n */\ncancel(): void {\n        this.onCancel.next();\n    }\n/**\n * Update the active state of each step\n * @return {?}\n */\nupdate(): void {\n        // update which steps should be active\n        this.steps.forEach((step, idx) => step.active = idx === this.step);\n    }\n/**\n * Jump to a specific step only if the step has previously been visited\n * @param {?} step\n * @return {?}\n */\ngotoStep(step: WizardStepComponent): void {\n        if (step.visited) {\n            this.step = this.steps.toArray().findIndex(stp => stp === step);\n        }\n    }\n/**\n * Determine if the current step is the last step\n * @return {?}\n */\nisLastStep(): boolean {\n        return this.step === (this.steps.length - 1);\n    }\n/**\n * Reset the wizard - goes to first step and resets visited state\n * @return {?}\n */\nreset(): void {\n\n        // mark all steps as not visited\n        this.steps.forEach(step => step.visited = false);\n\n        // go to the first step\n        this.step = 0;\n    }\n/**\n * Get the step at the current index\n * @return {?}\n */\ngetCurrentStep(): WizardStepComponent {\n        return this.getStepAtIndex(this.step);\n    }\n/**\n * Return a step at a specific index\n * @param {?} index\n * @return {?}\n */\ngetStepAtIndex(index: number): WizardStepComponent {\n        return this.steps.toArray()[index];\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-wizard',\n    template: `\n      <div class=\"wizard-body\">\n\n          <div class=\"wizard-steps\">\n    \n              <div class=\"wizard-step\" [class.active]=\"stp.active\" [class.visited]=\"stp.visited\" [class.invalid]=\"stp.active && !stp.valid && invalidIndicator\" (click)=\"gotoStep(stp)\" *ngFor=\"let stp of steps\">\n                  {{ stp.header }}\n              </div>\n    \n          </div>\n    \n          <div class=\"wizard-content\">\n              <ng-content></ng-content>\n          </div>\n    \n      </div>\n\n      <div class=\"wizard-footer\">\n          <button #tip=\"bs-tooltip\" class=\"btn button-secondary\" *ngIf=\"previousVisible\" [tooltip]=\"previousTooltip\" container=\"body\" [disabled]=\"previousDisabled || step === 0\"\n              (click)=\"previous(); tip.hide()\">{{ previousText }}</button>\n\n          <button #tip=\"bs-tooltip\" class=\"btn button-primary\" *ngIf=\"nextVisible && !isLastStep()\" [tooltip]=\"nextTooltip\" container=\"body\" [disabled]=\"nextDisabled\"\n              (click)=\"next(); tip.hide()\">{{ nextText }}</button>\n\n          <button #tip=\"bs-tooltip\" class=\"btn button-primary\" *ngIf=\"finishVisible && isLastStep() || finishAlwaysVisible\" [tooltip]=\"finishTooltip\"\n              container=\"body\" [disabled]=\"finishDisabled\" (click)=\"finish(); tip.hide()\">{{ finishText }}</button>\n\n          <button #tip=\"bs-tooltip\" class=\"btn button-secondary\" *ngIf=\"cancelVisible && !isLastStep() || cancelAlwaysVisible\" [tooltip]=\"cancelTooltip\"\n              container=\"body\" [disabled]=\"cancelDisabled\" (click)=\"cancel(); tip.hide()\">{{ cancelText }}</button>\n      </div>\n    `,\n    host: {\n        '[class]': 'orientation'\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'steps': [{ type: ContentChildren, args: [WizardStepComponent, ] },],\n'orientation': [{ type: Input },],\n'nextText': [{ type: Input },],\n'previousText': [{ type: Input },],\n'cancelText': [{ type: Input },],\n'finishText': [{ type: Input },],\n'nextTooltip': [{ type: Input },],\n'previousTooltip': [{ type: Input },],\n'cancelTooltip': [{ type: Input },],\n'finishTooltip': [{ type: Input },],\n'nextDisabled': [{ type: Input },],\n'previousDisabled': [{ type: Input },],\n'cancelDisabled': [{ type: Input },],\n'finishDisabled': [{ type: Input },],\n'nextVisible': [{ type: Input },],\n'previousVisible': [{ type: Input },],\n'cancelVisible': [{ type: Input },],\n'finishVisible': [{ type: Input },],\n'cancelAlwaysVisible': [{ type: Input },],\n'finishAlwaysVisible': [{ type: Input },],\n'onNext': [{ type: Output },],\n'onPrevious': [{ type: Output },],\n'onCancel': [{ type: Output },],\n'onFinish': [{ type: Output },],\n'stepChange': [{ type: Output },],\n'step': [{ type: Input },],\n};\n}\n\nfunction WizardComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nWizardComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nWizardComponent.ctorParameters;\n/** @type {?} */\nWizardComponent.propDecorators;\n/** @type {?} */\nWizardComponent.prototype._step;\n/** @type {?} */\nWizardComponent.prototype.steps;\n/** @type {?} */\nWizardComponent.prototype.orientation;\n/** @type {?} */\nWizardComponent.prototype.nextText;\n/** @type {?} */\nWizardComponent.prototype.previousText;\n/** @type {?} */\nWizardComponent.prototype.cancelText;\n/** @type {?} */\nWizardComponent.prototype.finishText;\n/** @type {?} */\nWizardComponent.prototype.nextTooltip;\n/** @type {?} */\nWizardComponent.prototype.previousTooltip;\n/** @type {?} */\nWizardComponent.prototype.cancelTooltip;\n/** @type {?} */\nWizardComponent.prototype.finishTooltip;\n/** @type {?} */\nWizardComponent.prototype.nextDisabled;\n/** @type {?} */\nWizardComponent.prototype.previousDisabled;\n/** @type {?} */\nWizardComponent.prototype.cancelDisabled;\n/** @type {?} */\nWizardComponent.prototype.finishDisabled;\n/** @type {?} */\nWizardComponent.prototype.nextVisible;\n/** @type {?} */\nWizardComponent.prototype.previousVisible;\n/** @type {?} */\nWizardComponent.prototype.cancelVisible;\n/** @type {?} */\nWizardComponent.prototype.finishVisible;\n/** @type {?} */\nWizardComponent.prototype.cancelAlwaysVisible;\n/** @type {?} */\nWizardComponent.prototype.finishAlwaysVisible;\n/** @type {?} */\nWizardComponent.prototype.onNext;\n/** @type {?} */\nWizardComponent.prototype.onPrevious;\n/** @type {?} */\nWizardComponent.prototype.onCancel;\n/** @type {?} */\nWizardComponent.prototype.onFinish;\n/** @type {?} */\nWizardComponent.prototype.stepChange;\n/** @type {?} */\nWizardComponent.prototype.invalidIndicator;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\nimport { WizardComponent } from './wizard.component';\nimport { WizardStepComponent } from './wizard-step.component';\n\nconst /** @type {?} */ DECLARATIONS = [\n    WizardComponent,\n    WizardStepComponent\n];\nexport class WizardModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        CommonModule,\n        TooltipModule.forRoot()\n    ],\n    exports: DECLARATIONS,\n    declarations: DECLARATIONS\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction WizardModule_tsickle_Closure_declarations() {\n/** @type {?} */\nWizardModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nWizardModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nexport class HelpCenterService {\n\n    items: BehaviorSubject<HelpCenterItem[]> = new BehaviorSubject<HelpCenterItem[]>([]);\n/**\n * @param {?} item\n * @return {?}\n */\nregisterItem(item: HelpCenterItem): void {\n\n        // get the current items\n        let /** @type {?} */ items = this.items.getValue();\n\n        // add the new item to the list\n        items.push(item);\n\n        // update the observable\n        this.items.next(items);\n    }\n/**\n * @param {?} item\n * @return {?}\n */\nunregisterItem(item: HelpCenterItem): void {\n\n        // get the current items\n        let /** @type {?} */ items = this.items.getValue();\n\n        // remove the item being unregistered\n        items = items.filter(itm => itm !== item);\n\n        // update the observable\n        this.items.next(items);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction HelpCenterService_tsickle_Closure_declarations() {\n/** @type {?} */\nHelpCenterService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nHelpCenterService.ctorParameters;\n/** @type {?} */\nHelpCenterService.prototype.items;\n}\n\n\nexport interface HelpCenterItem {\n    icon?: string;\n    title: string;\n    select?: () => void;\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, Input, OnInit, OnDestroy } from '@angular/core';\nimport { HelpCenterService, HelpCenterItem } from './help-center.service';\nexport class HelpCenterItemDirective implements OnInit, OnDestroy {\n\n     uxHelpCenterItem: HelpCenterItem;\n/**\n * @param {?} _helpCenterService\n */\nconstructor(private _helpCenterService: HelpCenterService) { }\n/**\n * @return {?}\n */\nngOnInit(): void {\n\n        // register the item in the service\n        this._helpCenterService.registerItem(this.uxHelpCenterItem);\n    }\n/**\n * @return {?}\n */\nngOnDestroy(): void {\n        // remove this item when it is destroyed\n        this._helpCenterService.unregisterItem(this.uxHelpCenterItem);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{ selector: '[uxHelpCenterItem]' }, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: HelpCenterService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'uxHelpCenterItem': [{ type: Input },],\n};\n}\n\nfunction HelpCenterItemDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nHelpCenterItemDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nHelpCenterItemDirective.ctorParameters;\n/** @type {?} */\nHelpCenterItemDirective.propDecorators;\n/** @type {?} */\nHelpCenterItemDirective.prototype.uxHelpCenterItem;\n/** @type {?} */\nHelpCenterItemDirective.prototype._helpCenterService;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { HelpCenterItemDirective } from './help-center-item.directive';\nimport { HelpCenterService } from './help-center.service';\nexport class HelpCenterModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [],\n    exports: [HelpCenterItemDirective],\n    declarations: [HelpCenterItemDirective],\n    providers: [HelpCenterService],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction HelpCenterModule_tsickle_Closure_declarations() {\n/** @type {?} */\nHelpCenterModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nHelpCenterModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs/Subject';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { HoverActionDirective } from './hover-action.directive';\nimport { HoverActionContainerDirective } from './hover-action-container.directive';\nexport class HoverActionService {\n\n    active: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\nprivate _container: HoverActionContainerDirective;\nprivate _focused: boolean = false;\nprivate _hovered: boolean = false;\nprivate _actions: HoverActionDirective[] = [];\n/**\n * @param {?} action\n * @return {?}\n */\nregister(action: HoverActionDirective): void {\n        this._actions.push(action);\n    }\n/**\n * @param {?} action\n * @return {?}\n */\nunregister(action: HoverActionDirective): void {\n        this._actions = this._actions.filter(actn => actn !== action);\n    }\n/**\n * @param {?} container\n * @return {?}\n */\nsetContainer(container: HoverActionContainerDirective): void {\n        this._container = container;\n    }\n/**\n * @param {?} focus\n * @return {?}\n */\nsetFocusState(focus: boolean): void {\n        this._focused = focus;\n        this.updateVisibility();\n    }\n/**\n * @param {?} hover\n * @return {?}\n */\nsetHoverState(hover: boolean): void {\n        this._hovered = hover;\n        this.updateVisibility();\n    }\n/**\n * @return {?}\n */\nnext(): void {\n\n        // if container has focus then focus the first hover action\n        if (this.containerHasFocus()) {\n            this.focusActionAtIndex(0);\n            return this.updateVisibility();\n        }\n\n        // if a hover action has focus then focus the next action\n        if (this.actionHasFocus()) {\n            let /** @type {?} */ index = this.getFocusedActionIndex() + 1;\n            this.focusActionAtIndex(index);\n            this.updateVisibility();\n        }\n    }\n/**\n * @return {?}\n */\nprevious(): void {\n        // if a hover action has focus then focus the previous action\n        if (this.actionHasFocus()) {\n            let /** @type {?} */ index = this.getFocusedActionIndex() - 1;\n\n            if (index >= 0) {\n                this.focusActionAtIndex(index);\n            } else {\n                this._container.focus();\n            }\n        }\n\n        this.updateVisibility();\n    }\n/**\n * @return {?}\n */\nupdateVisibility(): void {\n        this.active.next(this._focused || this._hovered || this.actionHasFocus());\n    }\n/**\n * @param {?} index\n * @return {?}\n */\nprivate focusActionAtIndex(index: number): void {\n        if (index >= 0 && index < this._actions.length) {\n            this._actions[index].focus();\n        }\n    }\n/**\n * @return {?}\n */\nprivate getFocusedActionIndex(): number {\n        return this._actions.findIndex(action => action === this.getFocusedAction());\n    }\n/**\n * @return {?}\n */\nprivate containerHasFocus(): boolean {\n        return this._focused;\n    }\n/**\n * @return {?}\n */\nprivate actionHasFocus(): boolean {\n        return !!this.getFocusedAction();\n    }\n/**\n * @return {?}\n */\nprivate getFocusedAction(): HoverActionDirective {\n        return this._actions.find(action => action.focused);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction HoverActionService_tsickle_Closure_declarations() {\n/** @type {?} */\nHoverActionService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nHoverActionService.ctorParameters;\n/** @type {?} */\nHoverActionService.prototype.active;\n/** @type {?} */\nHoverActionService.prototype._container;\n/** @type {?} */\nHoverActionService.prototype._focused;\n/** @type {?} */\nHoverActionService.prototype._hovered;\n/** @type {?} */\nHoverActionService.prototype._actions;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ContentChildren, QueryList, HostListener, ElementRef, OnDestroy, Input } from '@angular/core';\nimport { HoverActionDirective } from './hover-action.directive';\nimport { HoverActionService } from './hover-action.service';\nimport { Subscription } from 'rxjs/Subscription';\nexport class HoverActionContainerDirective implements OnDestroy {\n\n     tabindex: number = 0;\n    active: boolean = false;\nprivate active$: Subscription;\n/**\n * @param {?} _elementRef\n * @param {?} _hoverActionService\n */\nconstructor(private _elementRef: ElementRef,\nprivate _hoverActionService: HoverActionService) {\n        // register the container element with the service\n        this._hoverActionService.setContainer(this);\n        \n        // apply a class based on the active state of the container and it's actions\n        this.active$ = this._hoverActionService.active.subscribe(active => this.active = active);\n    }\n/**\n * @return {?}\n */\nngOnDestroy(): void {\n        this.active$.unsubscribe();\n    }\n/**\n * @return {?}\n */\nfocus(): void {\n        this._elementRef.nativeElement.focus();\n    }\n/**\n * @return {?}\n */\nonFocus(): void {\n        this._hoverActionService.setFocusState(true);\n    }\n/**\n * @return {?}\n */\nonBlur(): void {\n        this._hoverActionService.setFocusState(false);\n    }\n/**\n * @return {?}\n */\nonHover(): void {\n        this._hoverActionService.setHoverState(true);\n    }\n/**\n * @return {?}\n */\nonLeave(): void {\n        this._hoverActionService.setHoverState(false);\n    }\n/**\n * @return {?}\n */\nnext(): void {\n        this._hoverActionService.next();\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: '[uxHoverActionContainer]',\n    providers: [HoverActionService],\n    host: {\n        '[class.hover-action-container-active]': 'active',\n        '[tabindex]': 'tabindex'\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: HoverActionService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'tabindex': [{ type: Input },],\n'focus': [{ type: HostListener, args: ['click', ] },],\n'onFocus': [{ type: HostListener, args: ['focus', ] },],\n'onBlur': [{ type: HostListener, args: ['blur', ] },],\n'onHover': [{ type: HostListener, args: ['mouseenter', ] },],\n'onLeave': [{ type: HostListener, args: ['mouseleave', ] },],\n'next': [{ type: HostListener, args: ['keydown.arrowright', ] },],\n};\n}\n\nfunction HoverActionContainerDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nHoverActionContainerDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nHoverActionContainerDirective.ctorParameters;\n/** @type {?} */\nHoverActionContainerDirective.propDecorators;\n/** @type {?} */\nHoverActionContainerDirective.prototype.tabindex;\n/** @type {?} */\nHoverActionContainerDirective.prototype.active;\n/** @type {?} */\nHoverActionContainerDirective.prototype.active$;\n/** @type {?} */\nHoverActionContainerDirective.prototype._elementRef;\n/** @type {?} */\nHoverActionContainerDirective.prototype._hoverActionService;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ElementRef, HostListener, OnDestroy, Input } from '@angular/core';\nimport { HoverActionService } from './hover-action.service';\nimport { Subscription } from 'rxjs/Subscription';\nexport class HoverActionDirective implements OnDestroy {\n\n     tabindex: number = 1;\n    active: boolean = false;\n    focused: boolean = false;\nprivate active$: Subscription;\n/**\n * @param {?} _elementRef\n * @param {?} _hoverActionService\n */\nconstructor(private _elementRef: ElementRef,\nprivate _hoverActionService: HoverActionService) {\n\n        // register the action\n        this._hoverActionService.register(this);\n\n        // watch for changes to the activeness of the container\n        this.active$ = this._hoverActionService.active.subscribe(active => this.active = active);\n    }\n/**\n * @return {?}\n */\nngOnDestroy(): void {\n        this._hoverActionService.unregister(this);\n        this.active$.unsubscribe();\n    }\n/**\n * @return {?}\n */\nfocus(): void {\n        this._elementRef.nativeElement.focus();\n    }\n/**\n * @return {?}\n */\nonFocus(): void {\n        this.focused = true;\n        this._hoverActionService.updateVisibility();\n    }\n/**\n * @return {?}\n */\nonBlur(): void {\n        this.focused = false;\n        this._hoverActionService.updateVisibility();\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nprevious(event: MouseEvent): void {\n        event.stopPropagation();        \n        this._hoverActionService.previous();\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nnext(event: MouseEvent): void {\n        event.stopPropagation();\n        this._hoverActionService.next();\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: '[uxHoverAction]',\n    host: {\n        '[class.hover-action-active]': 'active',\n        '[class.hover-action-focused]': 'focused',\n        '[tabindex]': 'tabindex'\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: HoverActionService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'tabindex': [{ type: Input },],\n'onFocus': [{ type: HostListener, args: ['focus', ] },],\n'onBlur': [{ type: HostListener, args: ['blur', ] },],\n'previous': [{ type: HostListener, args: ['keydown.arrowleft', ['$event'], ] },],\n'next': [{ type: HostListener, args: ['keydown.arrowright', ['$event'], ] },],\n};\n}\n\nfunction HoverActionDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nHoverActionDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nHoverActionDirective.ctorParameters;\n/** @type {?} */\nHoverActionDirective.propDecorators;\n/** @type {?} */\nHoverActionDirective.prototype.tabindex;\n/** @type {?} */\nHoverActionDirective.prototype.active;\n/** @type {?} */\nHoverActionDirective.prototype.focused;\n/** @type {?} */\nHoverActionDirective.prototype.active$;\n/** @type {?} */\nHoverActionDirective.prototype._elementRef;\n/** @type {?} */\nHoverActionDirective.prototype._hoverActionService;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { HoverActionContainerDirective } from './hover-action-container.directive';\nimport { HoverActionDirective } from './hover-action.directive';\n\nconst /** @type {?} */ DECLARATIONS = [\n    HoverActionDirective,\n    HoverActionContainerDirective\n];\nexport class HoverActionModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    exports: DECLARATIONS,\n    declarations: DECLARATIONS\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction HoverActionModule_tsickle_Closure_declarations() {\n/** @type {?} */\nHoverActionModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nHoverActionModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, Input, TemplateRef, SimpleChanges, ViewContainerRef, EmbeddedViewRef } from '@angular/core';\nexport class LayoutSwitcherItemDirective {\nprivate _config: LayoutSwitcherItem;\nprivate _embeddedView: EmbeddedViewRef<any>;\n/**\n * @param {?} _templateRef\n * @param {?} _viewContainerRef\n */\nconstructor(private _templateRef: TemplateRef<any>,\nprivate _viewContainerRef: ViewContainerRef) { }\n/**\n * @return {?}\n */\ngetLayout(): TemplateRef<any> {\n        return this._templateRef;\n    }\n/**\n * @return {?}\n */\ngetConfig(): LayoutSwitcherItem {\n        return this._config;\n    }\n/**\n * @return {?}\n */\nactivate(): void {\n        this._embeddedView = this._viewContainerRef.createEmbeddedView(this._templateRef);\n    }\n/**\n * @return {?}\n */\ndeactivate(): void {\n        let /** @type {?} */ index = this._viewContainerRef.indexOf(this._embeddedView);\n        this._viewContainerRef.remove(index);\n        this._embeddedView = null;\n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: '[uxLayoutSwitcherItem]'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: TemplateRef, },\n{type: ViewContainerRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'_config': [{ type: Input, args: ['uxLayoutSwitcherItem', ] },],\n};\n}\n\nfunction LayoutSwitcherItemDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nLayoutSwitcherItemDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nLayoutSwitcherItemDirective.ctorParameters;\n/** @type {?} */\nLayoutSwitcherItemDirective.propDecorators;\n/** @type {?} */\nLayoutSwitcherItemDirective.prototype._config;\n/** @type {?} */\nLayoutSwitcherItemDirective.prototype._embeddedView;\n/** @type {?} */\nLayoutSwitcherItemDirective.prototype._templateRef;\n/** @type {?} */\nLayoutSwitcherItemDirective.prototype._viewContainerRef;\n}\n\n\nexport interface LayoutSwitcherItem {\n    group?: string;\n    minWidth?: number;\n    maxWidth?: number;\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ElementRef, Renderer2, QueryList, ContentChildren, Input, AfterContentInit, ViewContainerRef, OnChanges, SimpleChanges } from '@angular/core';\nimport { ResizeService } from '../resize/index';\nimport { LayoutSwitcherItemDirective } from './layout-switcher-item.directive';\nexport class LayoutSwitcherDirective implements AfterContentInit, OnChanges {\n\n     group: string;\nprivate _layouts: QueryList<LayoutSwitcherItemDirective>;\nprivate _width: number;\nprivate _activeLayout: LayoutSwitcherItemDirective;\n/**\n * @param {?} _elementRef\n * @param {?} resizeService\n * @param {?} renderer\n * @param {?} _viewContainerRef\n */\nconstructor(private _elementRef: ElementRef, resizeService: ResizeService, renderer: Renderer2,\nprivate _viewContainerRef: ViewContainerRef) {\n\n        // watch for changes to the container size\n        resizeService.addResizeListener(_elementRef.nativeElement, renderer).subscribe(event => {\n            this._width = event.width;\n\n            // render the appropriate layout\n            this.updateActiveLayout();\n        });\n    }\n/**\n * @param {?} changes\n * @return {?}\n */\nngOnChanges(changes: SimpleChanges): void {\n\n        // if the active group has changed then render the appropriate layout\n        if (changes.group.currentValue !== changes.group.previousValue) {\n            this.updateActiveLayout();\n        }\n    }\n/**\n * @return {?}\n */\ngetActiveLayout(): LayoutSwitcherItemDirective | null {\n\n        // if there are currently no layouts then do nothing\n        if (!this._layouts) {\n            return null;\n        }\n\n        // otherwise find layouts that match the active group and that meet the constraints\n        return this._layouts.filter(layout => this.group === layout.getConfig().group).find(layout => {\n\n            let /** @type {?} */ minWidth = layout.getConfig().minWidth || 0;\n            let /** @type {?} */ maxWidth = layout.getConfig().maxWidth || Infinity;\n\n            return this._width >= minWidth && this._width < maxWidth;\n        });\n    }\n/**\n * @return {?}\n */\nupdateActiveLayout(): void {\n\n        // get the layout that should be shown\n        let /** @type {?} */ layout = this.getActiveLayout();\n\n        // check if we are currently showing the layout\n        if (this._activeLayout === layout) {\n            return;\n        }\n\n        // remove the current layout\n        if (this._activeLayout) {\n            this._activeLayout.deactivate();\n        }\n\n        // store the new active layout\n        this._activeLayout = layout;\n\n        // if there is an active layout then activate\n        if (this._activeLayout) {\n            this._activeLayout.activate();\n        }\n    }\n/**\n * @return {?}\n */\nngAfterContentInit(): void {\n\n        // store the initial current element width\n        this._width = this._elementRef.nativeElement.offsetWidth;\n\n        // render the appropriate layout - need a delay as Angular doesn't like changes like this in these lifecycle hooks\n        requestAnimationFrame(this.updateActiveLayout.bind(this));\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: '[uxLayoutSwitcher]'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: ResizeService, },\n{type: Renderer2, },\n{type: ViewContainerRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'group': [{ type: Input },],\n'_layouts': [{ type: ContentChildren, args: [LayoutSwitcherItemDirective, ] },],\n};\n}\n\nfunction LayoutSwitcherDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nLayoutSwitcherDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nLayoutSwitcherDirective.ctorParameters;\n/** @type {?} */\nLayoutSwitcherDirective.propDecorators;\n/** @type {?} */\nLayoutSwitcherDirective.prototype.group;\n/** @type {?} */\nLayoutSwitcherDirective.prototype._layouts;\n/** @type {?} */\nLayoutSwitcherDirective.prototype._width;\n/** @type {?} */\nLayoutSwitcherDirective.prototype._activeLayout;\n/** @type {?} */\nLayoutSwitcherDirective.prototype._elementRef;\n/** @type {?} */\nLayoutSwitcherDirective.prototype._viewContainerRef;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { LayoutSwitcherDirective } from './layout-switcher.directive';\nimport { LayoutSwitcherItemDirective } from './layout-switcher-item.directive';\nimport { ResizeModule } from '../resize/index';\n\nconst /** @type {?} */ DECLARATIONS = [\n    LayoutSwitcherDirective,\n    LayoutSwitcherItemDirective\n];\nexport class LayoutSwitcherModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        ResizeModule\n    ],\n    exports: DECLARATIONS,\n    declarations: DECLARATIONS,\n    providers: [],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction LayoutSwitcherModule_tsickle_Closure_declarations() {\n/** @type {?} */\nLayoutSwitcherModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nLayoutSwitcherModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Pipe, Injectable, PipeTransform } from '@angular/core';\nexport class StringFilterPipe implements PipeTransform {\n/**\n * @param {?} items\n * @param {?} value\n * @return {?}\n */\ntransform(items: any[], value: string): any[] {  \n        if (!items) {\n            return [];\n        }\n        return items.filter(it => it.toLowerCase().indexOf(value.toLowerCase()) >= 0);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Pipe, args: [{\n    name: 'stringFilter'\n}, ] },\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction StringFilterPipe_tsickle_Closure_declarations() {\n/** @type {?} */\nStringFilterPipe.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nStringFilterPipe.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { StringFilterPipe } from './string-filter.pipe';\nimport { NgModule } from '@angular/core';\nexport class StringFilterModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    exports: [StringFilterPipe],\n    declarations: [StringFilterPipe]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction StringFilterModule_tsickle_Closure_declarations() {\n/** @type {?} */\nStringFilterModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nStringFilterModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { StorageAdapter } from './storage-adapter';\nexport class CookieAdapter implements StorageAdapter {\n/**\n * @param {?} key\n * @return {?}\n */\ngetItem(key: string): string {\n\n        if (document.cookie) {\n\n            // get all the cookies for this site\n            const /** @type {?} */ cookies = document.cookie.split(';');\n\n            // process the cookies into a from we can easily manage\n            const /** @type {?} */ match = cookies\n                .map(cookie => ({ key: cookie.split('=')[0].trim(), value: cookie.split('=')[1].trim() }))\n                .find(cookie => cookie.key === key);\n\n            return match ? match.value : null;\n        }\n\n        return null;\n    }\n/**\n * @param {?} key\n * @param {?} value\n * @return {?}\n */\nsetItem(key: string, value: string): void {\n        document.cookie = `${key}=${value}; path=/`;\n    }\n/**\n * @param {?} key\n * @return {?}\n */\nremoveItem(key: string): void {\n\n        document.cookie.split(';').forEach(cookie => {\n            const /** @type {?} */ eqPos = cookie.indexOf('=');\n            const /** @type {?} */ name = eqPos > -1 ? cookie.substr(0, eqPos).trim() : cookie;\n\n            if (name === key) {\n                document.cookie = cookie.trim().replace(/=.*/, `=;expires=${new Date().toUTCString()};path=/`);\n            }\n        });\n    }\n/**\n * @return {?}\n */\nclear(): void {\n\n        // call remove item on each cookie\n        document.cookie.split(';').map(cookie => cookie.split('=')[0].trim())\n            .forEach(cookie => this.removeItem(cookie));\n    }\n/**\n * @return {?}\n */\ngetSupported(): StorageAdapter {\n        // cookies are supported in all browsers\n        return this;\n    }\n\n}","import { StorageAdapter } from './storage-adapter';\nimport { CookieAdapter } from './cookie-adapter';\nexport class LocalStorageAdapter implements StorageAdapter {\n/**\n * @param {?} key\n * @return {?}\n */\ngetItem(key: string): string {\n        return localStorage.getItem(key);\n    }\n/**\n * @param {?} key\n * @param {?} value\n * @return {?}\n */\nsetItem(key: string, value: string): void {\n        localStorage.setItem(key, value);\n    }\n/**\n * @param {?} key\n * @return {?}\n */\nremoveItem(key: string): void {\n        localStorage.removeItem(key);\n    }\n/**\n * @return {?}\n */\nclear(): void {\n        localStorage.clear();\n    }\n/**\n * @return {?}\n */\ngetSupported(): StorageAdapter {\n\n        // if local storage variable does not exist fall back to cookies\n        if (!localStorage) {\n            return new CookieAdapter();\n        }\n\n        // try to make a test save to local storage to see if there are any exceptions\n        try {\n            localStorage.setItem('ux-persistent-data-service', 'ux-persistent-data-service');\n            localStorage.removeItem('ux-persistent-data-service');\n\n            return this;\n        } catch ( /** @type {?} */err) {\n            return new CookieAdapter();\n        }\n    }\n\n}","import { StorageAdapter } from './storage-adapter';\nimport { CookieAdapter } from './cookie-adapter';\nexport class SessionStorageAdapter implements StorageAdapter {\n/**\n * @param {?} key\n * @return {?}\n */\ngetItem(key: string): string {\n        return sessionStorage.getItem(key);\n    }\n/**\n * @param {?} key\n * @param {?} value\n * @return {?}\n */\nsetItem(key: string, value: string): void {\n        sessionStorage.setItem(key, value);\n    }\n/**\n * @param {?} key\n * @return {?}\n */\nremoveItem(key: string): void {\n        sessionStorage.removeItem(key);\n    }\n/**\n * @return {?}\n */\nclear(): void {\n        sessionStorage.clear();\n    }\n/**\n * @return {?}\n */\ngetSupported(): StorageAdapter {\n\n        // if local storage variable does not exist fall back to cookies\n        if (!sessionStorage) {\n            return new CookieAdapter();\n        }\n\n        // try to make a test save to local storage to see if there are any exceptions\n        try {\n            sessionStorage.setItem('ux-persistent-data-service', 'ux-persistent-data-service');\n            sessionStorage.removeItem('ux-persistent-data-service');\n\n            return this;\n        } catch ( /** @type {?} */err) {\n            return new CookieAdapter();\n        }\n    }\n\n}","import { Injectable } from '@angular/core';\nimport { StorageAdapter } from './adapters/storage-adapter';\nimport { CookieAdapter } from './adapters/cookie-adapter';\nimport { LocalStorageAdapter } from './adapters/local-storage-adapter';\nimport { SessionStorageAdapter } from './adapters/session-storage-adapter';\nexport class PersistentDataService {\n/**\n * Save the item in some form of persistent storage\n * @param {?} key\n * @param {?} value\n * @param {?=} type\n * @return {?}\n */\nsetItem(key: string, value: string, type: PersistentDataStorageType = PersistentDataStorageType.LocalStorage): void {\n        this.getAdapter(type).setItem(key, value);\n    }\n/**\n * Get a stored value from persistent storage\n * @param {?} key\n * @param {?=} type\n * @return {?}\n */\ngetItem(key: string, type: PersistentDataStorageType = PersistentDataStorageType.LocalStorage): string {\n        return this.getAdapter(type).getItem(key);\n    }\n/**\n * Remove a stored value from persistent storage\n * @param {?} key\n * @param {?=} type\n * @return {?}\n */\nremoveItem(key: string, type: PersistentDataStorageType = PersistentDataStorageType.LocalStorage): void {\n        this.getAdapter(type).removeItem(key);\n    }\n/**\n * Remove a stored value from persistent storage\n * @param {?=} type\n * @return {?}\n */\nclear(type: PersistentDataStorageType = PersistentDataStorageType.LocalStorage): void {\n        this.getAdapter(type).clear();\n    }\n/**\n * Return the appropriate adapter based on the type requested\n * @param {?} type\n * @return {?}\n */\nprivate getAdapter(type: PersistentDataStorageType): StorageAdapter {\n\n        switch (type) {\n\n            case PersistentDataStorageType.Cookie:\n                return new CookieAdapter();\n\n            case PersistentDataStorageType.LocalStorage:\n                const /** @type {?} */ localStorageAdapter = new LocalStorageAdapter();\n                return localStorageAdapter.getSupported();\n\n            case PersistentDataStorageType.SessionStorage:\n                const /** @type {?} */ sessionStorageAdapter = new SessionStorageAdapter();\n                return sessionStorageAdapter.getSupported();\n        }\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction PersistentDataService_tsickle_Closure_declarations() {\n/** @type {?} */\nPersistentDataService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nPersistentDataService.ctorParameters;\n}\n\nexport type PersistentDataStorageType = number;\nexport let PersistentDataStorageType: any = {};\nPersistentDataStorageType.LocalStorage = 0;\nPersistentDataStorageType.Cookie = 1;\nPersistentDataStorageType.SessionStorage = 2;\nPersistentDataStorageType[PersistentDataStorageType.LocalStorage] = \"LocalStorage\";\nPersistentDataStorageType[PersistentDataStorageType.Cookie] = \"Cookie\";\nPersistentDataStorageType[PersistentDataStorageType.SessionStorage] = \"SessionStorage\";\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\n\nimport { PersistentDataService } from './persistent-data.service';\nexport class PersistentDataModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    providers: [PersistentDataService],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction PersistentDataModule_tsickle_Closure_declarations() {\n/** @type {?} */\nPersistentDataModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nPersistentDataModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","\n/**\n * @abstract\n */\nexport abstract class StorageAdapter {\n/**\n * @abstract\n * @param {?} key\n * @return {?}\n */\ngetItem(key: string) {}\n/**\n * @abstract\n * @param {?} key\n * @param {?} value\n * @return {?}\n */\nsetItem(key: string, value: string) {}\n/**\n * @abstract\n * @param {?} key\n * @return {?}\n */\nremoveItem(key: string) {}\n/**\n * @abstract\n * @return {?}\n */\nclear() {}\n/**\n * @abstract\n * @return {?}\n */\ngetSupported() {}\n}"],"names":["isValidDate","value","Date","isNaN","getHours","toNumber","parseInt","dex","parseHours","isPM","hour","hoursPerDayHalf","hoursPerDay","NaN","parseMinutes","minute","minutesPerHour","parseSeconds","seconds","secondsPerMinute","parseTime","changeTime","diff","createDate","minutes","getMinutes","getSeconds","hours","_value","getFullYear","getMonth","getDate","getMilliseconds","padNumber","toString","length","isInputValid","canChangeValue","state","event","readonlyInput","source","mousewheel","arrowkeys","getControlsValue","hourStep","minuteStep","secondsStep","showSpinners","showMeridian","showSeconds","meridians","min","max","timepickerReducer","action","initialState","type","TimepickerActions","WRITE_VALUE","Object","assign","payload","CHANGE_HOURS","config","controls","step","canIncrementHours","canDecrementHours","canChangeHours","_newTime","CHANGE_MINUTES","canIncrementMinutes","canDecrementMinutes","canChangeMinutes","CHANGE_SECONDS","canIncrementSeconds","canDecrementSeconds","canChangeSeconds","SET_TIME_UNIT","opts","setTime","UPDATE_CONTROLS","_newControlsState","res","_newHour","_newMinutes","_newSeconds","timepickerControls","_newState","tryCatcher","tryCatchTarget","apply","this","arguments","e","errorObject_1","errorObject","flattenUnsubscriptionErrors","errors","reduce","errs","err","concat","UnsubscriptionError_1","UnsubscriptionError","gridify","items","columns","grid","push","splice","range","start","end","list","idx","compareDays","day1","day2","isBs3","window","__theme","guessedVersion","document","spanEl","createElement","innerText","body","appendChild","classList","add","rect","getBoundingClientRect","removeChild","top","_guessBsVersion","listenToTriggersV2","renderer","options","parsedTriggers","triggers","aliases","DEFAULT_ALIASES","trimmedTriggers","trim","split","map","trigger","triggerPair","alias","Trigger","manualTriggers","filter","isManual","Error","parseTriggers","target","Function","prototype","listeners","_registerHide","registerHide","forEach","fn","useToggle","open","close","showFn","toggle","show","listen","hide","unsubscribeFn","_getHtmlElement","element","querySelector","ElementRef","nativeElement","warnOnce","msg","isDevMode","_hideMsg","_messagesHash","console","warn","latinize","str","replace","a","latinMap","tokenize","wordRegexDelimiters","phraseRegexDelimiters","token","regexStr","preTokenized","RegExp","result","preTokenizedLength","replacePhraseDelimiters","i","getValueFromObject","object","option","endsWith","slice","_i","propertiesArray_1","property","BreadcrumbsComponent","clickCrumb","crumb","onClick","call","decorators","Component","args","selector","template","ctorParameters","propDecorators","crumbs","Input","BreadcrumbsModule","NgModule","imports","CommonModule","RouterModule","exports","declarations","CHECKBOX_VALUE_ACCESSOR","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","CheckboxComponent","multi","name","clickable","disabled","simplified","indeterminateValue","valueChange","EventEmitter","onTouchedCallback","onChangeCallback","defineProperty","get","set","emit","toggleChecked","keyDown","stopPropagation","preventDefault","writeValue","registerOnChange","registerOnTouched","providers","host","(click)","Output","CheckboxModule","FormsModule","ColumnSortingComponent","stateChange","columnSortingState","ColumnSortingState","initParent","parent","_this","_parent","events","subscribe","findIndex","column","key","NoSort","orderNumber","changeState","Ascending","Descending","toggleColumn","exportAs","ColumnSortingDirective","Subject","order","ngAfterViewInit","components","component","singleSort","next","Directive","ContentChildren","ColumnSortingModule","DashboardService","_widgets","_options$","_placeholder","visible","x","y","width","height","_dimensions","_columnWidth","_rowHeight","_stacked","_defaultOptions","padding","minWidth","minHeight","emptyRow","BehaviorSubject","layout","getOptions","_options","getDefaultOptions","setOptions","setPadding","setDashboard","dashboard","_dashboard","addWidget","widget","renderDashboard","removeWidget","wgt","setDimensions","getLayoutData","id","getId","col","getColumn","row","getRow","colSpan","getColumnSpan","rowSpan","getRowSpan","setLayoutData","find","setColumn","setRow","setColumnSpan","setRowSpan","rowHeight","setStacked","setDashboardLayout","_actionWidget","render","undefined","setWidgetPosition","setDashboardHeight","stacked","getWidgetsByOrder","sort","w1","w2","w1Position","w2Position","position","success","Math","floor","getPositionAvailable","columnSpan","ignoreWidget","spaces","getOccupiedSpaces","_loop_1","_loop_2","block","state_1","state_2","forEachBlock","onResizeStart","_mouseEvent","bringToFront","onResizeDrag","bounds","getHandles","hnd","direction","centerX","left","centerY","mouseX","mouseY","dimensions","actualX","actualY","actualWidth","actualHeight","ActionDirection","Right","Left","difference","Bottom","Top","TopLeft","TopRight","BottomLeft","BottomRight","currentWidth","currentHeight","setBounds","setPlaceholderBounds","updateWidgetPositions","onResizeEnd","commitWidgetChanges","getPlaceholder","shiftWidgetsUp","onDragStart","setWidgetOrigin","cacheWidgets","onDragEnd","_widgetOrigin","onDrag","pageX","pageY","restoreWidgets","shiftWidgets","_cache","ignoreActionWidget","match","widgetsToMove","_loop_3","_loop_4","this_1","space","array","indexOf","unmovedWidgets","getRequiredSpacesFromPoint","every","gridSpace","getColumnCount","canWidgetMoveRight","validatePlaceholderPosition","canWidgetMoveLeft","distance","moveWidgetDown","shiftDirection","getWidgetsAtPosition","getColumnWidth","performMove","targetSpaces","moveable","ignoreResizing","Rounding","RoundDownBelowHalf","RoundUpOverHalf","getPlaceholderColumn","getPlaceholderRow","getPlaceholderColumnSpan","getPlaceholderRowSpan","rowCount","previous","getRowHeight","getColumnFromPx","Move","RoundDown","upperLimit","overflow","getRowFromPx","ceil","rounding","half","RoundUp","getRowCount","sendToBack","stable","callback","Injectable","DashboardComponent","_dashboardService","_elementRef","_ngZone","layoutChange","placeholder","_nativeElement","ngOnInit","ngDoCheck","JSON","stringify","_layout","offsetWidth","offsetHeight","onResize","run","[style.height.px]","NgZone","DashboardWidgetComponent","resizable","zIndex","_column","regular","_row","_columnSpan","_rowSpan","_dragMove","Observable","fromEvent","_dragEnd","applyOptions","parseFloat","random","initialiseHandles","ngOnDestroy","_handles","getStackableValue","setStackableValue","handle","bindResize","listener","downEvent","move$","takeUntil","moveEvent","unsubscribe","[style.left.px]","[style.top.px]","[style.width.px]","[style.padding.px]","[style.zIndex]","DashboardDragHandleDirective","elementRef","dashboardService","Host","ResizeService","addResizeListener","subject","displayMode","getComputedStyle","getPropertyValue","iframe","setStyle","setAttribute","waitUntilReady","attachListener","contentWindow","contentDocument","readyState","addEventListener","setTimeout","ResizeDirective","_resizeService","_renderer","throttle","resize","debounceTime","Renderer2","ResizeModule","DECLARATIONS","DashboardModule","changeHours","changeMinutes","changeSeconds","updateControls","TimepickerConfig","MiniStore","_super","_dispatcher","_reducer","state$","__extends","select","pathOrMapFn","mapped$","distinctUntilChanged","lift","operator","store","dispatch","error","complete","__window","__self","self","WorkerGlobalScope","_root","global","root_1","Array","isArray","join","stack","message","Subscription","closed","_parents","_subscriptions","_unsubscribe","hasErrors","index","len","remove","isFunction_1","isFunction","tryCatch_1","tryCatch","isArray_1","sub","isObject_1","isObject","teardown","EMPTY","subscription","_addParent","tmp","subscriptions","subscriptionIndex","empty","Action","scheduler","work","schedule","delay","Subscription_1","AsyncAction","pending","recycleAsyncId","requestAsyncId","root","setInterval","flush","bind","clearInterval","execute","_execute","errored","errorValue","actions","Action_1","QueueAction","AsyncAction_1","Scheduler","SchedulerAction","now","AsyncScheduler","active","scheduled","shift","Scheduler_1","queue_1","QueueScheduler","AsyncScheduler_1","QueueAction_1","MiniState","_initialState","actionsDispatcher$","reducer","actionInQueue$","observeOn","queue","scan","TimepickerStore","TIMEPICKER_CONTROL_VALUE_ACCESSOR","TimepickerComponent","_config","_cd","_store","_timepickerActions","isValid","invalidHours","invalidMinutes","invalidSeconds","onChange","onTouched","_renderTime","controlsState","markForCheck","meridian","prevDef","$event","wheelSign","sign","deltaY","ngOnChanges","changes","updateHours","_updateTime","updateMinutes","updateSeconds","_seconds","toggleMeridian","obj","setDisabledState","isDisabled","_hours","getUTCSeconds","changeDetection","ChangeDetectionStrategy","OnPush","styles","encapsulation","ViewEncapsulation","None","ChangeDetectorRef","TimepickerModule","forRoot","ngModule","CHECKBOX_CONTROL_VALUE_ACCESSOR","ButtonCheckboxDirective","btnCheckboxTrue","btnCheckboxFalse","trueValue","falseValue","HostBinding","HostListener","RADIO_CONTROL_VALUE_ACCESSOR","ButtonRadioDirective","el","cdr","btnRadio","attributes","uncheckable","onBlur","isActive","ButtonsModule","months","monthsShort","month","substring","weekdaysShort","weekday","DateTimePickerConfig","showDate","showTime","showTimezone","weekdays","nowBtnText","timezones","offset","DateTimePickerService","date","activeDate","mode","DatePickerMode","Day","year","current","getTime","DateTimePickerComponent","dateTimePickerService","dateChange","timezoneChange","getValue","_timezone","timezone","zone","commit","setToNow","timePickerComponent","setDefaultTimezone","ViewChild","Month","Year","DateTimePickerDayViewComponent","days","_subscription","merge","update","setDate","getDay","dates","dateRange","header","week","today","isToday","currentMonth","isCurrentMonth","showMonthPicker","DateTimePickerMonthViewComponent","_dateTimePickerService","currentDate","showDayPicker","getMonthName","showYearPicker","DateTimePickerYearViewComponent","_page","years","currentYear","decade","getDecade","DateTimePickerHeaderComponent","canAscend","ascend","DateTimePickerTimeViewComponent","DatePickerMeridian","AM","getTimezoneOffset","PM","setMeridian","setHours","previousTimezone","currentZone","nextTimezone","DateTimePickerModule","EboxComponent","EboxHeaderDirective","EboxContentDirective","EboxModule","TooltipConfig","placement","win","TooltipContainerComponent","location","classMap","in","fade","animation","containerClass","[class]","[class.show]","role","hover","focus","ContentRef","nodes","viewRef","componentRef","ComponentLoader","_viewContainerRef","_injector","_componentFactoryResolver","_applicationRef","_posService","onBeforeShow","onShown","onBeforeHide","onHidden","_providers","_isHiding","_listenOpts","_globalListener","_componentRef","attach","compType","_componentFactory","resolveComponentFactory","to","container","attachment","provider","_subscribePositioning","_innerComponent","_contentRef","_getContentRef","content","context","injector","ReflectiveInjector","resolveAndCreate","create","attachView","hostView","instance","parentElement","changeDetectorRef","detectChanges","_registerOutsideClick","componentEl","parentNode","destroy","_removeGlobalListener","isShown","dispose","_unsubscribePositioning","_unregisterListenersFn","listenOpts","outsideClick","attachInline","vRef","_inlineViewRef","createEmbeddedView","target_1","contains","targets","some","registerOutsideClick","getInnerComponent","_zoneSubscription","onStable","appendToBody","TemplateRef","_viewRef","rootNodes","contentCmptFactory","modalContentInjector","createText","positionService","Positioning","round","elPosition","parentOffset","bottom","right","getStyle","bcRect","offsetParentEl","offsetParent","documentElement","clientTop","clientLeft","elBcr","viewportOffset","pageYOffset","pageXOffset","elOffset","positionElements","hostElement","targetElement","hostElPosition","targetElStyles","getAllStyles","shiftWidth","center","shiftHeight","targetElBCR","placementPrimary","placementSecondary","targetElPosition","newPlacementPrimary","autoPosition","marginBottom","marginRight","preferredPosition","innerHeight","innerWidth","prop","isStaticPositioned","PositioningService","pos","style","ComponentLoaderFactory","createLoader","ComponentFactoryResolver","Injector","ApplicationRef","TooltipDirective","cis","tooltipChange","_animation","_delay","_fadeDuration","tooltipStateChanged","_tooltip","useValue","tooltip","isOpen","_delayTimeoutId","showTooltip","clearTimeout","ViewContainerRef","htmlContent","_placement","_isOpen","_enable","_appendToBody","_popupClass","_tooltipContext","_tooltipTrigger","__decorate","propertyKey","_key","prevValue","TooltipModule","entryComponents","Á","Ă","Ắ","Ặ","Ằ","Ẳ","Ẵ","Ǎ","Â","Ấ","Ậ","Ầ","Ẩ","Ẫ","Ä","Ǟ","Ȧ","Ǡ","Ạ","Ȁ","À","Ả","Ȃ","Ā","Ą","Å","Ǻ","Ḁ","Ⱥ","Ã","Ꜳ","Æ","Ǽ","Ǣ","Ꜵ","Ꜷ","Ꜹ","Ꜻ","Ꜽ","Ḃ","Ḅ","Ɓ","Ḇ","Ƀ","Ƃ","Ć","Č","Ç","Ḉ","Ĉ","Ċ","Ƈ","Ȼ","Ď","Ḑ","Ḓ","Ḋ","Ḍ","Ɗ","Ḏ","ǲ","ǅ","Đ","Ƌ","Ǳ","Ǆ","É","Ĕ","Ě","Ȩ","Ḝ","Ê","Ế","Ệ","Ề","Ể","Ễ","Ḙ","Ë","Ė","Ẹ","Ȅ","È","Ẻ","Ȇ","Ē","Ḗ","Ḕ","Ę","Ɇ","Ẽ","Ḛ","Ꝫ","Ḟ","Ƒ","Ǵ","Ğ","Ǧ","Ģ","Ĝ","Ġ","Ɠ","Ḡ","Ǥ","Ḫ","Ȟ","Ḩ","Ĥ","Ⱨ","Ḧ","Ḣ","Ḥ","Ħ","Í","Ĭ","Ǐ","Î","Ï","Ḯ","İ","Ị","Ȉ","Ì","Ỉ","Ȋ","Ī","Į","Ɨ","Ĩ","Ḭ","Ꝺ","Ꝼ","Ᵹ","Ꞃ","Ꞅ","Ꞇ","Ꝭ","Ĵ","Ɉ","Ḱ","Ǩ","Ķ","Ⱪ","Ꝃ","Ḳ","Ƙ","Ḵ","Ꝁ","Ꝅ","Ĺ","Ƚ","Ľ","Ļ","Ḽ","Ḷ","Ḹ","Ⱡ","Ꝉ","Ḻ","Ŀ","Ɫ","ǈ","Ł","Ǉ","Ḿ","Ṁ","Ṃ","Ɱ","Ń","Ň","Ņ","Ṋ","Ṅ","Ṇ","Ǹ","Ɲ","Ṉ","Ƞ","ǋ","Ñ","Ǌ","Ó","Ŏ","Ǒ","Ô","Ố","Ộ","Ồ","Ổ","Ỗ","Ö","Ȫ","Ȯ","Ȱ","Ọ","Ő","Ȍ","Ò","Ỏ","Ơ","Ớ","Ợ","Ờ","Ở","Ỡ","Ȏ","Ꝋ","Ꝍ","Ō","Ṓ","Ṑ","Ɵ","Ǫ","Ǭ","Ø","Ǿ","Õ","Ṍ","Ṏ","Ȭ","Ƣ","Ꝏ","Ɛ","Ɔ","Ȣ","Ṕ","Ṗ","Ꝓ","Ƥ","Ꝕ","Ᵽ","Ꝑ","Ꝙ","Ꝗ","Ŕ","Ř","Ŗ","Ṙ","Ṛ","Ṝ","Ȑ","Ȓ","Ṟ","Ɍ","Ɽ","Ꜿ","Ǝ","Ś","Ṥ","Š","Ṧ","Ş","Ŝ","Ș","Ṡ","Ṣ","Ṩ","Ť","Ţ","Ṱ","Ț","Ⱦ","Ṫ","Ṭ","Ƭ","Ṯ","Ʈ","Ŧ","Ɐ","Ꞁ","Ɯ","Ʌ","Ꜩ","Ú","Ŭ","Ǔ","Û","Ṷ","Ü","Ǘ","Ǚ","Ǜ","Ǖ","Ṳ","Ụ","Ű","Ȕ","Ù","Ủ","Ư","Ứ","Ự","Ừ","Ử","Ữ","Ȗ","Ū","Ṻ","Ų","Ů","Ũ","Ṹ","Ṵ","Ꝟ","Ṿ","Ʋ","Ṽ","Ꝡ","Ẃ","Ŵ","Ẅ","Ẇ","Ẉ","Ẁ","Ⱳ","Ẍ","Ẋ","Ý","Ŷ","Ÿ","Ẏ","Ỵ","Ỳ","Ƴ","Ỷ","Ỿ","Ȳ","Ɏ","Ỹ","Ź","Ž","Ẑ","Ⱬ","Ż","Ẓ","Ȥ","Ẕ","Ƶ","Ĳ","Œ","ᴀ","ᴁ","ʙ","ᴃ","ᴄ","ᴅ","ᴇ","ꜰ","ɢ","ʛ","ʜ","ɪ","ʁ","ᴊ","ᴋ","ʟ","ᴌ","ᴍ","ɴ","ᴏ","ɶ","ᴐ","ᴕ","ᴘ","ʀ","ᴎ","ᴙ","ꜱ","ᴛ","ⱻ","ᴚ","ᴜ","ᴠ","ᴡ","ʏ","ᴢ","á","ă","ắ","ặ","ằ","ẳ","ẵ","ǎ","â","ấ","ậ","ầ","ẩ","ẫ","ä","ǟ","ȧ","ǡ","ạ","ȁ","à","ả","ȃ","ā","ą","ᶏ","ẚ","å","ǻ","ḁ","ⱥ","ã","ꜳ","æ","ǽ","ǣ","ꜵ","ꜷ","ꜹ","ꜻ","ꜽ","ḃ","ḅ","ɓ","ḇ","ᵬ","ᶀ","ƀ","ƃ","ɵ","ć","č","ç","ḉ","ĉ","ɕ","ċ","ƈ","ȼ","ď","ḑ","ḓ","ȡ","ḋ","ḍ","ɗ","ᶑ","ḏ","ᵭ","ᶁ","đ","ɖ","ƌ","ı","ȷ","ɟ","ʄ","ǳ","ǆ","é","ĕ","ě","ȩ","ḝ","ê","ế","ệ","ề","ể","ễ","ḙ","ë","ė","ẹ","ȅ","è","ẻ","ȇ","ē","ḗ","ḕ","ⱸ","ę","ᶒ","ɇ","ẽ","ḛ","ꝫ","ḟ","ƒ","ᵮ","ᶂ","ǵ","ğ","ǧ","ģ","ĝ","ġ","ɠ","ḡ","ᶃ","ǥ","ḫ","ȟ","ḩ","ĥ","ⱨ","ḧ","ḣ","ḥ","ɦ","ẖ","ħ","ƕ","í","ĭ","ǐ","î","ï","ḯ","ị","ȉ","ì","ỉ","ȋ","ī","į","ᶖ","ɨ","ĩ","ḭ","ꝺ","ꝼ","ᵹ","ꞃ","ꞅ","ꞇ","ꝭ","ǰ","ĵ","ʝ","ɉ","ḱ","ǩ","ķ","ⱪ","ꝃ","ḳ","ƙ","ḵ","ᶄ","ꝁ","ꝅ","ĺ","ƚ","ɬ","ľ","ļ","ḽ","ȴ","ḷ","ḹ","ⱡ","ꝉ","ḻ","ŀ","ɫ","ᶅ","ɭ","ł","ǉ","ſ","ẜ","ẛ","ẝ","ḿ","ṁ","ṃ","ɱ","ᵯ","ᶆ","ń","ň","ņ","ṋ","ȵ","ṅ","ṇ","ǹ","ɲ","ṉ","ƞ","ᵰ","ᶇ","ɳ","ñ","ǌ","ó","ŏ","ǒ","ô","ố","ộ","ồ","ổ","ỗ","ö","ȫ","ȯ","ȱ","ọ","ő","ȍ","ò","ỏ","ơ","ớ","ợ","ờ","ở","ỡ","ȏ","ꝋ","ꝍ","ⱺ","ō","ṓ","ṑ","ǫ","ǭ","ø","ǿ","õ","ṍ","ṏ","ȭ","ƣ","ꝏ","ɛ","ᶓ","ɔ","ᶗ","ȣ","ṕ","ṗ","ꝓ","ƥ","ᵱ","ᶈ","ꝕ","ᵽ","ꝑ","ꝙ","ʠ","ɋ","ꝗ","ŕ","ř","ŗ","ṙ","ṛ","ṝ","ȑ","ɾ","ᵳ","ȓ","ṟ","ɼ","ᵲ","ᶉ","ɍ","ɽ","ↄ","ꜿ","ɘ","ɿ","ś","ṥ","š","ṧ","ş","ŝ","ș","ṡ","ṣ","ṩ","ʂ","ᵴ","ᶊ","ȿ","ɡ","ᴑ","ᴓ","ᴝ","ť","ţ","ṱ","ț","ȶ","ẗ","ⱦ","ṫ","ṭ","ƭ","ṯ","ᵵ","ƫ","ʈ","ŧ","ᵺ","ɐ","ᴂ","ǝ","ᵷ","ɥ","ʮ","ʯ","ᴉ","ʞ","ꞁ","ɯ","ɰ","ᴔ","ɹ","ɻ","ɺ","ⱹ","ʇ","ʌ","ʍ","ʎ","ꜩ","ú","ŭ","ǔ","û","ṷ","ü","ǘ","ǚ","ǜ","ǖ","ṳ","ụ","ű","ȕ","ù","ủ","ư","ứ","ự","ừ","ử","ữ","ȗ","ū","ṻ","ų","ᶙ","ů","ũ","ṹ","ṵ","ᵫ","ꝸ","ⱴ","ꝟ","ṿ","ʋ","ᶌ","ⱱ","ṽ","ꝡ","ẃ","ŵ","ẅ","ẇ","ẉ","ẁ","ⱳ","ẘ","ẍ","ẋ","ᶍ","ý","ŷ","ÿ","ẏ","ỵ","ỳ","ƴ","ỷ","ỿ","ȳ","ẙ","ɏ","ỹ","ź","ž","ẑ","ʑ","ⱬ","ż","ẓ","ȥ","ẕ","ᵶ","ᶎ","ʐ","ƶ","ɀ","ﬀ","ﬃ","ﬄ","ﬁ","ﬂ","ĳ","œ","ﬆ","ₐ","ₑ","ᵢ","ⱼ","ₒ","ᵣ","ᵤ","ᵥ","ₓ","TypeaheadMatch","item","isHeader","Utils","reflow","getStyles","elem","view","ownerDocument","defaultView","opener","TypeaheadContainerComponent","isFocused","_matches","isScrolledIntoView","containerViewTop","ulElement","scrollTop","containerViewBottom","elemTop","offsetTop","_active","needScrollbar","typeaheadScrollable","typeaheadOptionsInScrollableView","matches","setScrollableMode","nextActiveMatch","optionsListTemplate","typeaheadItemTemplate","selectActiveMatch","selectMatch","prevActiveMatch","scrollPrevious","scrollNext","selectActive","hightlight","query","startIdx","tokenLen","itemStr","itemStrHelper","typeaheadLatinize","toLowerCase","queryLen","repeat","focusLost","changeModel","typeaheadOnSelect","liElements","first","ulStyles","liStyles","ulPaddingBottom","ulPaddingTop","optionHeight","guiHeight","liElement","toArray","scrollToBottom","scrollToTop","scrollHeight","class","[class.dropdown-menu]","[style.overflow-y]","[style.height]","[style.visibility]","[class.dropup]","ViewChildren","TypeaheadDirective","ngControl","viewContainerRef","typeaheadMinLength","typeaheadAsync","typeaheadSingleWords","typeaheadWordDelimiters","typeaheadPhraseDelimiters","typeaheadLoading","typeaheadNoResults","typeaheadOnBlur","dropup","isTypeaheadOptionsListActive","keyUpEventEmitter","_typeahead","typeaheadOptionsLimit","typeaheadWaitMs","typeahead","asyncActions","syncActions","onInput","textContent","_container","keyCode","onFocus","onKeydown","valueStr","viewToModelUpdate","setValue","typeaheadRef","_outsideClickListener","onOutsideClick","normalizedQuery","control","_a","mergeMap","finalizeAsyncCall","normalizeQuery","from","testMatch","normalizeOption","optionValue","typeaheadOptionField","test","spaceLength","prepareMatches","hasMatches","limited","typeaheadGroupField","matches_1","v","group","NgControl","TypeaheadModule","FacetSelect","facet","FacetDeselect","FacetDeselectAll","FacetContainerComponent","clearTooltip","emptyText","facets","facetsChange","selectFacet","triggerEvent","deselectFacet","selectedFacet","deselectAllFacets","FacetBaseComponent","facetContainer","selected","selectedChange","_","deselectAll","toggleFacetSelection","isFacetSelected","FacetHeaderComponent","canExpand","expanded","expandedChange","toggleExpand","tabindex","(keyup.enter)","FacetCheckListComponent","scrollbar","FacetTypeaheadListComponent","typeaheadConfig","suggestions","_defaultTypeaheadConfig","maxResults","minCharacters","typeaheadOptions","title","toUpperCase","includes","searchQuery","of","hasOwnProperty","selectOption","typeaheadOption","scrollToFocused","dropdown","activeElement","elementBounds","dropdownBounds","FacetTypeaheadHighlight","transform","regex","Pipe","FacetsModule","Facet","data","count","BsDropdownConfig","autoClose","BsDropdownState","isOpenChange","isDisabledChange","toggleClick","dropdownMenu","Promise","resolve","resolveDropdownMenu","BsDropdownContainerComponent","_state","cd","_element","addClass","BsDropdownDirective","_cis","_isInlineOpen","_isInited","_dropdown","_isDisabled","_showInline","_inlinedMenu","then","viewContainer","templateRef","addBs4Polyfills","catch","_dropup","removeShowClass","addShowClass","checkRightAlignment","checkDropup","removeClass","isRightAligned","[class.open]","BsDropdownMenuDirective","_viewContainer","_templateRef","BsDropdownToggleDirective","onDocumentClick","button","onEsc","[attr.aria-haspopup]","BsDropdownModule","FilterContainerComponent","filters","filtersChange","addFilter","FilterAddEvent","removeFilter","FilterRemoveEvent","removeAll","FilterRemoveAllEvent","FilterBaseComponent","filtersContainer","initial","FilterDynamicComponent","defaultOptions","showTypeahead","typeaheadItems","getItems","maxIndividualItems","clickOff","hideDropdown","nodeName","selectFilter","(document:click)","FilterDropdownComponent","FilterModule","FlippableCardComponent","flipped","flippedChange","setFlipped","toggleFlipped","clickTrigger","hoverEnter","hoverExit","[class.horizontal]","[class.vertical]","FlippableCardFrontDirective","FlippableCardBackDirective","FlippableCardModule","ItemDisplayPanelContentDirective","ItemDisplayPanelFooterDirective","ItemDisplayPanelComponent","boxShadow","closeVisible","preventClose","inline","animate","shadow","visibleChange","_visible","hidePanel","(document:keyup.escape)","[class.inline-host]","[class.visible-host]","footer","ContentChild","ItemDisplayPanelModule","NUMBER_PICKER_VALUE_ACCESSOR","NumberPickerComponent","_min","Infinity","_max","_step","_disabled","_propagateChange","valid","increment","decrement","onScroll","wheelDelta","[class.has-error]","NumberPickerModule","PageHeaderCustomMenuDirective","PageHeaderComponent","alignment","condensed","backVisible","backClick","goBack","getCondensedBreadcrumbs","[class.page-header-condensed]","logo","iconMenus","customMenus","read","PageHeaderIconMenuComponent","menu","PageHeaderNavigationDropdownItemComponent","onSelect","dropdownOpen","_dropdownEvents","selectItem","parentItem","children","hoverStart","hoverLeave","PageHeaderNavigationItemComponent","dropdownComponents","onItemSelect","PageHeaderNavigationComponent","resizeService","indicatorVisible","indicatorX","indicatorWidth","updateSelectedIndicator","deselect","navItem","selectedItem","menuItems","offsetLeft","PageHeaderModule","ColorService","_colorSet","colorSets","keppel","colorClassSet","_setColors","colorValueSet","_colors","_getColorValueByHex","_html","className","innerHTML","getColorValue","color","hex","r","g","b","ThemeColor","rgba","backgroundColor","getColor","getColorSet","setColorSet","colorSet","toRgba","resolveColorName","Inject","DOCUMENT","_r","_g","_b","parse","rgbaMatch","shortHexMatch","longHexMatch","toHex","red","green","blue","toRgb","getRed","getGreen","getBlue","getAlpha","setRed","setGreen","setBlue","setAlpha","alpha","primary","accent","secondary","alternate1","alternate2","alternate3","vibrant1","vibrant2","grey1","grey2","grey3","grey4","grey5","grey6","grey7","grey8","chart1","chart2","chart3","chart4","chart5","chart6","ok","warning","critical","partition1","partition9","partition10","partition11","partition12","partition13","partition14","social-chart-node","social-chart-edge","microFocus","cerulean","aqua","aquamarine","fuchsia","indigo","dark-blue","white","slightly-gray","bright-gray","gray","silver","dim-gray","dark-gray","black","crimson-negative","apricot","yellow","green-positive","ultramarine","skyblue","pale-aqua","pale-green","lime","orange","magenta","pale-purple","dark-ultramarine","steelblue","arctic-blue","emerald","olive","goldenrod","purple","pale-eggplant","pale-amber","pale-lemon","pale-emerald","plum","copper","amber","leaf-green","ColorServiceModule","ProgressBarComponent","colorService","trackColor","barColor","percentage","ProgressBarModule","RADIOBUTTON_VALUE_ACCESSOR","RadioButtonComponent","checkItem","RadioButtonModule","SearchBuilderService","queryChange","validationChange","_componentId","_components","_validation","registerComponent","cmp","registerComponents","getComponent","setQuery","getQuery","queryHasChanged","setValid","keys","generateComponentId","SearchBuilderGroupService","_searchBuilderService","init","_id","field","SearchBuilderGroupComponent","searchBuilderGroupService","addText","showPlaceholder","removeField","SearchBuilderOutletDirective","componentDefinition","uxSearchBuilderOutlet","componentFactory","createComponent","uxSearchBuilderOutletContext","BaseSearchComponent","_searchBuilderGroupService","_valid","validate","validation","SearchTextComponent","label","SearchDateComponent","SearchDateRangeComponent","fromValue","toValue","fromLabel","toLabel","fromPlaceholder","toPlaceholder","SearchSelectComponent","multiple","dropDirection","allowNull","maxHeight","pageSize","SearchBuilderComponent","_querySubscription","_validSubscription","PopoverConfig","PopoverContainerComponent","PopoverDirective","_popover","popover","popoverContext","popoverTitle","PopoverModule","TypeaheadOptionEvent","TypeaheadKeyService","handleKey","moveHighlight","TypeaheadComponent","typeaheadElement","cdRef","_open","openChange","openOnFilterChange","selectFirst","optionSelected","_highlighted","visibleOptions","loading","optionApi","getKey","getDisplay","getDisplayHtml","loadOptionsCallback","pageNum","originalValue","initOptions","loadingTemplate","_defaultLoadingTemplate","optionTemplate","_defaultOptionTemplate","noOptionsTemplate","_defaultNoOptionsTemplate","currentValue","updateOptions","optionMousedownHandler","optionClickHandler","display","displayText","displayHtml","matchIndex","highlight","substr","isInfiniteScroll","disabledOptions","optionKey_1","selectedOption","d","newIndex","indexOfVisibleOption","highlighted","inBounds","isHighlighted","normalisedInput_1","optionKey_2","[class.drop-up]","[style.maxHeight]","InfiniteScrollLoadButtonDirective","_template","_load","load","asObservable","clickTarget","getNextElementSibling","clear","nextSibling","nodeType","InfiniteScrollLoadingDirective","InfiniteScrollDirective","_collection","enabled","loadOnInit","loadOnScroll","collectionChange","loadingEvent","loadedEvent","loadErrorEvent","_nextPageNum","_updateRequests","_isLoading","_isExhausted","_loadButtonEnabled","_loadButtonSubscriptions","_canLoadManually","combineLatest","isLoading","isExhausted","loadButtonEnabled","scrollElement","ngAfterContentInit","requests","partition","check","auditTime","doRequest","attachEventHandlers","canLoad","_loadButtonQuery","loadButton","_loadingIndicatorQuery","attachLoadButtonEvents","loadNextPage","previousValue","reset","detachEventHandlers","pageNumber","collection","onDomChange","_scrollEventSub","_domObserver","MutationObserver","observe","childList","subtree","disconnect","s","request","needsData","beginLoading","loadResult","newData","endLoading","reason","endLoadingWithError","clientHeight","InfiniteScrollLoadingEvent","defaultPrevented","InfiniteScrollLoadedEvent","InfiniteScrollLoadErrorEvent","_defaultPrevented","exhausted","InfiniteScrollModule","ScrollIntoViewService","scrollIntoView","scrollParent","offsetBottom","ScrollIntoViewIfDirective","scrollIntoViewService","condition","ScrollIntoViewIfModule","TypeaheadModule$1","SELECT_VALUE_ACCESSOR","SelectComponent","_document","_typeaheadKeyService","_input","inputChange","_dropdownOpen","dropdownOpenChange","propagateChange","input","firstChange","inputClickHandler","selectInputText","inputBlurHandler","inputKeyHandler","singleTypeahead","singleOptionSelected","singleInput","HTMLDocument","multipleTypeahead","TagInputEvent","tag","TAGINPUT_VALUE_ACCESSOR","TagInputComponent","TAGINPUT_VALIDATOR","NG_VALIDATORS","_tags","tagsChange","addOnPaste","enforceTagLimits","freeInput","maxTags","Number","MAX_VALUE","minTags","showTypeaheadOnClick","tagDelimiters","tagClass","validationErrors","tagAdding","tagAdded","tagInvalidated","tagRemoving","tagRemoved","tagClick","selectedIndex","tagApi","getTagDisplay","removeTagAt","canRemoveTagAt","inputValid","onChangeHandler","onTouchedHandler","tagTemplate","_defaultTagTemplate","connectTypeahead","typeaheadQuery","tags","tagRangeError","given","keyHandler","inputCursorPos","tagInput","selectionStart","hasSelection","selectionEnd","tagSelected","isValidTagIndex","inputLength","canNavigateLeft","canNavigateRight","commitTypeahead","commitInput","backspace","moveSelection","getKeyChar","focusOutHandler","tagClickHandler","tagClickEvent","selectTagAt","inputFocusHandler","selectInput","inputPasteHandler","clipboardData","getData","typeaheadOptionSelectedHandler","addTag","newTags","splitTagInput","allValid","_c","newTags_1","newTag","validateTag","_d","newTags_2","createTag","isValidSelectIndex","isSelected","tagIndex","tagRemovingEvent","isInputVisible","hasFocus","tagValue","inputPattern","tagPattern","pattern","createTagHandler","displayValue","tagAddingEvent","tagValues","escapedDelimiters","delimiterRegex","[class.disabled]","[class.focus]","[class.invalid]","Document","FocusIfDirective","focusIf","FocusIfModule","TagInputModule","SelectModule","SearchBuilderModule","SliderComponent","_changeDetectorRef","sliderType","SliderType","sliderStyle","SliderStyle","sliderSize","SliderSize","sliderThumb","SliderThumb","sliderTickType","SliderTickType","sliderThumbEvent","SliderThumbEvent","tracks","lower","size","middle","upper","tooltips","thumbs","drag","ticks","_mouseMove","_mouseUp","Value","handles","Button","callout","SliderCalloutTrigger","background","formatter","track","Wide","snap","SliderSnap","major","steps","labels","minor","colors","higher","initObservables","updateValues","setThumbState","Lower","Upper","clone","detectValueChange","updateTooltipPosition","_lowerDrag","_upperDrag","getFormattedValue","thumb","getThumbState","_lowerThumbDown","lowerThumb","switchMap","updateThumbPosition","_upperThumbDown","upperThumb","updateTooltips","thumbEvent","DragEnd","DragStart","MouseOver","MouseLeave","Persistent","Drag","Hover","getTooltip","updateTooltipText","getThumbElement","getTooltipElement","lowerTooltip","upperTooltip","thumbWidth","tooltipElement","Narrow","tooltipWidth","tooltipPosition","clamp","eventPosition","MouseEvent","clientX","touches","trackBounds","fraction","validateValue","snapToTick","setThumbValue","updateOrder","snapTarget","Minor","tick","Major","lowerLimit","Range","reduceRight","deepMerge","updateTrackColors","updateTicks","lowerValue","low","upperValue","high","toFixed","lowerPosition","upperPosition","majorOptions","minorOptions","majorTicks","getTicks","minorTicks","unionTicks","getSteps","output","showTicks","showLabels","tk","t1","t2","destination","value1","value2","isSliderValue","obj1","obj2","Line","All","SliderModule","SparkComponent","_colorService","values","barHeight","_theme","_barColor","_trackColor","total","val","inlineLabel","topLeftLabel","topRightLabel","bottomLeftLabel","bottomRightLabel","theme","SparkModule","TOGGLESWITCH_VALUE_ACCESSOR","ToggleSwitchComponent","keydown","ToggleSwitchModule","FrameExtractionService","createVideoPlayer","videoPlayer","preload","src","createCanvas","canvas","goToFrame","time","currentTime","getThumbnail","observer","getContext","drawImage","image","toDataURL","getFrameThumbnail","frameSubscription","getFrameThumbnails","skip","frames","frame","FrameExtractionModule","MediaPlayerService","_frameExtractionService","loaded","playing","initEvent","abortEvent","canPlayEvent","canPlayThroughEvent","durationChangeEvent","endedEvent","errorEvent","loadedDataEvent","loadedMetadataEvent","loadStartEvent","pauseEvent","playEvent","playingEvent","rateChangeEvent","seekedEvent","seekingEvent","stalledEvent","suspendEvent","timeUpdateEvent","volumeChangeEvent","waitingEvent","mediaClickEvent","fullscreenEvent","quietModeEvent","progressEvent","interval","buffered","_mediaPlayer","duration","_fullscreen","_quietMode","audioTracks","autoplay","TimeRanges","crossOrigin","currentSrc","defaultMuted","defaultPlaybackRate","ended","loop","muted","networkState","paused","playbackRate","played","seekable","seeking","textTracks","TextTrackList","videoTracks","VideoTrackList","volume","setMediaPlayer","mediaPlayer","_hostElement","togglePlay","play","pause","canPlayType","addTextTrack","kind","language","requestFullscreen","webkitRequestFullscreen","msRequestFullscreen","mozRequestFullScreen","exitFullscreen","webkitExitFullscreen","msExitFullscreen","mozCancelFullScreen","fullscreenChange","fullscreen","webkitIsFullScreen","mozFullScreen","msFullscreenElement","toggleFullscreen","getFrames","AudioService","_http","getAudioFileMetadata","mediaElement","responseType","ResponseContentType","Blob","response","description","filename","lastIndexOf","extension","blob","getWaveformFromUrl","url","AudioContext","_audioContext","createVolumeNode","createAnalyserNode","ArrayBuffer","getAudioBuffer","arrayBuffer","audioBuffer","createBufferSource","dataPoints","channels","_audioBuffer","numberOfChannels","channelIdx","getChannelData","Float32Array","getWaveformPoints","waveform","_loop_5","points","channel","getOfflineAudioContext","decodeAudioData","OfflineAudioContext","sampleRate","disconnectSource","_audioBufferSource","buffer","connect","_analyserNode","_gainNode","createGain","createAnalyser","Http","AudioServiceModule","HttpModule","MediaPlayerComponent","mediaPlayerService","_audioService","hovering","_hover$","quietMode","_playerRef","audioMetadata","_playing$","_paused$","_clicked$","_loading$","(keydown.Space)","[class.standard]","[class.fullscreen]","[class.quiet]","[class.hover]","[class.video]","[class.audio]","(mouseenter)","(mouseleave)","(document:webkitfullscreenchange)","(document:mozfullscreenchange)","(document:MSFullscreenChange)","_trackBarRef","MediaPlayerBaseExtensionDirective","MediaPlayerTimelineExtensionComponent","mouseDown","scrub","mousedown$","mousemove$","mouseup$","_mouseEventSubscription","updateScrub","timelineRef","offsetX","(document:mouseup)","MediaPlayerControlsExtensionComponent","volumeActive","volumeDragging","_volume","_previousVolume","mouseenter$","volumeIcon","mouseenterContainer$","volumeContainer","mouseleaveContainer$","timer","toggleMute","setFullscreen","goToStart","goToEnd","dragStart","dragMove","volumeSlider","dragEnd","DurationPipe","pad","DurationPipeModule","FileSizePipe","log","pow","FileSizePipeModule","MediaPlayerModule","VirtualScrollLoadingDirective","VirtualScrollLoadButtonDirective","VirtualScrollCellDirective","VirtualScrollComponent","cells","loadingComplete","_height","cellHeight","setupObservable","renderCells","isFirstChange","getVisibleCells","startCell","endCell","getTotalHeight","cellTemplate","loadingIndicatorTemplate","loadButtonTemplate","VirtualScrollModule","WizardStepComponent","visitedChange","_visited","visited","WizardComponent","QueryList","orientation","nextText","previousText","cancelText","finishText","nextTooltip","previousTooltip","cancelTooltip","finishTooltip","nextDisabled","previousDisabled","cancelDisabled","finishDisabled","nextVisible","previousVisible","cancelVisible","finishVisible","cancelAlwaysVisible","finishAlwaysVisible","onNext","onPrevious","onCancel","onFinish","stepChange","invalidIndicator","getCurrentStep","finish","cancel","gotoStep","stp","isLastStep","getStepAtIndex","WizardModule","HelpCenterService","registerItem","unregisterItem","itm","HelpCenterItemDirective","_helpCenterService","uxHelpCenterItem","HelpCenterModule","HoverActionService","_focused","_hovered","_actions","register","unregister","actn","setContainer","setFocusState","updateVisibility","setHoverState","containerHasFocus","focusActionAtIndex","actionHasFocus","getFocusedActionIndex","getFocusedAction","focused","HoverActionContainerDirective","_hoverActionService","active$","onHover","onLeave","[class.hover-action-container-active]","[tabindex]","HoverActionDirective","[class.hover-action-active]","[class.hover-action-focused]","HoverActionModule","LayoutSwitcherItemDirective","getLayout","getConfig","activate","_embeddedView","deactivate","LayoutSwitcherDirective","_width","updateActiveLayout","getActiveLayout","_layouts","maxWidth","_activeLayout","requestAnimationFrame","LayoutSwitcherModule","StringFilterPipe","it","StringFilterModule","CookieAdapter","getItem","cookie","setItem","removeItem","eqPos","toUTCString","getSupported","LocalStorageAdapter","localStorage","SessionStorageAdapter","sessionStorage","PersistentDataService","PersistentDataStorageType","LocalStorage","getAdapter","Cookie","SessionStorage","PersistentDataModule","StorageAdapter"],"mappings":"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"}

{"version":3,"file":"ux-aspects.umd.min.js","sources":["../../../../node_modules/.tmp/utils/facade/browser.ts","../../../../node_modules/.tmp/utils/theme-provider.ts","../../../../node_modules/.tmp/tooltip/tooltip-container.component.ts","../../../../node_modules/.tmp/utils/trigger.class.ts","../../../../node_modules/.tmp/utils/triggers.ts","../../../../node_modules/.tmp/component-loader/content-ref.class.ts","../../../../node_modules/.tmp/component-loader/component-loader.class.ts","../../../../node_modules/.tmp/positioning/ng-positioning.ts","../../../../node_modules/.tmp/positioning/positioning.service.ts","../../../../node_modules/.tmp/component-loader/component-loader.factory.ts","../../../../node_modules/.tmp/utils/warn-once.ts","../../../../node_modules/.tmp/tooltip/tooltip.directive.ts","../../../../node_modules/.tmp/utils/decorators.ts","../../../../node_modules/.tmp/tooltip/tooltip.module.ts","../../../../node_modules/.tmp/typeahead/latin-map.ts","../../../../node_modules/.tmp/typeahead/typeahead-match.class.ts","../../../../node_modules/.tmp/typeahead/typeahead-utils.ts","../../../../node_modules/.tmp/utils/utils.class.ts","../../../../node_modules/.tmp/typeahead/typeahead-container.component.ts","../../../../node_modules/.tmp/typeahead/typeahead.directive.ts","../../../../node_modules/.tmp/typeahead/typeahead.module.ts","~/@ux-aspects/ux-aspects/components/facets/facet-events.ts","~/@ux-aspects/ux-aspects/components/facets/facet-container.component.ts","~/@ux-aspects/ux-aspects/components/facets/base/facet-base/facet-base.component.ts","~/@ux-aspects/ux-aspects/components/facets/base/facet-header/facet-header.component.ts","~/@ux-aspects/ux-aspects/components/facets/facet-check-list/facet-check-list.component.ts","~/@ux-aspects/ux-aspects/components/facets/facet-typeahead-list/facet-typeahead-list.component.ts","~/@ux-aspects/ux-aspects/components/facets/facets.module.ts","~/@ux-aspects/ux-aspects/components/facets/models/facet.ts","../../../../node_modules/.tmp/dropdown/bs-dropdown.config.ts","../../../../node_modules/.tmp/dropdown/bs-dropdown.state.ts","../../../../node_modules/.tmp/dropdown/bs-dropdown-container.component.ts","../../../../node_modules/.tmp/dropdown/bs-dropdown.directive.ts","../../../../node_modules/.tmp/dropdown/bs-dropdown-menu.directive.ts","../../../../node_modules/.tmp/dropdown/bs-dropdown-toggle.directive.ts","../../../../node_modules/.tmp/dropdown/bs-dropdown.module.ts","~/@ux-aspects/ux-aspects/components/filters/filter-container.component.ts","~/@ux-aspects/ux-aspects/components/filters/filter-base/filter-base.component.ts","~/@ux-aspects/ux-aspects/components/filters/filter-dynamic/filter-dynamic.component.ts","~/@ux-aspects/ux-aspects/components/filters/filter-dropdown/filter-dropdown.component.ts","~/@ux-aspects/ux-aspects/components/filters/filter.module.ts","~/@ux-aspects/ux-aspects/components/flippable-card/flippable-card.component.ts","~/@ux-aspects/ux-aspects/components/flippable-card/flippable-card.module.ts","~/@ux-aspects/ux-aspects/components/item-display-panel/item-display-panel.component.ts","~/@ux-aspects/ux-aspects/components/item-display-panel/item-display-panel.module.ts","~/@ux-aspects/ux-aspects/components/wizard/wizard-step.component.ts","~/@ux-aspects/ux-aspects/components/wizard/wizard.component.ts","~/@ux-aspects/ux-aspects/components/wizard/wizard.module.ts","../../../../node_modules/src/Observer.ts","../../../../node_modules/src/symbol/rxSubscriber.ts","../../../../node_modules/src/Subscriber.ts","../../../../node_modules/src/operators/filter.ts","~/@ux-aspects/ux-aspects/components/marquee-wizard/marquee-wizard.service.ts","~/@ux-aspects/ux-aspects/components/marquee-wizard/marquee-wizard-step.component.ts","~/@ux-aspects/ux-aspects/components/marquee-wizard/marquee-wizard.component.ts","~/@ux-aspects/ux-aspects/components/marquee-wizard/marquee-wizard.module.ts","~/@ux-aspects/ux-aspects/components/number-picker/number-picker.component.ts","~/@ux-aspects/ux-aspects/components/number-picker/number-picker.module.ts","~/@ux-aspects/ux-aspects/components/page-header/custom-menu/custom-menu.directive.ts","~/@ux-aspects/ux-aspects/services/color/color.service.ts","~/@ux-aspects/ux-aspects/services/color/color.module.ts","~/@ux-aspects/ux-aspects/components/page-header/page-header.component.ts","~/@ux-aspects/ux-aspects/components/page-header/icon-menu/icon-menu.component.ts","~/@ux-aspects/ux-aspects/components/page-header/navigation/navigation-dropdown-item/navigation-dropdown-item.component.ts","~/@ux-aspects/ux-aspects/components/page-header/navigation/navigation-item/navigation-item.component.ts","~/@ux-aspects/ux-aspects/components/page-header/navigation/navigation.component.ts","~/@ux-aspects/ux-aspects/components/page-header/page-header.module.ts","~/@ux-aspects/ux-aspects/components/progress-bar/progress-bar.component.ts","~/@ux-aspects/ux-aspects/components/progress-bar/progress-bar.module.ts","~/@ux-aspects/ux-aspects/components/radiobutton/radiobutton.component.ts","~/@ux-aspects/ux-aspects/components/radiobutton/radiobutton.module.ts","~/@ux-aspects/ux-aspects/components/search-builder/search-builder.service.ts","~/@ux-aspects/ux-aspects/components/search-builder/search-builder-group/search-builder-group.service.ts","~/@ux-aspects/ux-aspects/components/search-builder/search-builder-group/search-builder-group.component.ts","~/@ux-aspects/ux-aspects/components/search-builder/search-builder-outlet/search-builder-outlet.directive.ts","~/@ux-aspects/ux-aspects/components/search-builder/search-components/base-search.component.ts","~/@ux-aspects/ux-aspects/components/search-builder/search-components/text/text.component.ts","~/@ux-aspects/ux-aspects/components/search-builder/search-components/date/date.component.ts","~/@ux-aspects/ux-aspects/components/search-builder/search-components/date-range/date-range.component.ts","~/@ux-aspects/ux-aspects/components/search-builder/search-components/select/select.component.ts","~/@ux-aspects/ux-aspects/components/search-builder/search-builder.component.ts","../../../../node_modules/.tmp/popover/popover.config.ts","../../../../node_modules/.tmp/popover/popover-container.component.ts","../../../../node_modules/.tmp/popover/popover.directive.ts","../../../../node_modules/.tmp/popover/popover.module.ts","~/@ux-aspects/ux-aspects/components/typeahead/typeahead-event.ts","~/@ux-aspects/ux-aspects/components/typeahead/typeahead-key.service.ts","~/@ux-aspects/ux-aspects/components/typeahead/typeahead.component.ts","~/@ux-aspects/ux-aspects/directives/infinite-scroll/infinite-scroll-load-button.directive.ts","~/@ux-aspects/ux-aspects/directives/infinite-scroll/infinite-scroll-loading.directive.ts","~/@ux-aspects/ux-aspects/directives/infinite-scroll/infinite-scroll.directive.ts","~/@ux-aspects/ux-aspects/directives/infinite-scroll/infinite-scroll.module.ts","~/@ux-aspects/ux-aspects/directives/scroll-into-view-if/scroll-into-view.service.ts","~/@ux-aspects/ux-aspects/directives/scroll-into-view-if/scroll-into-view-if.directive.ts","~/@ux-aspects/ux-aspects/directives/scroll-into-view-if/scroll-into-view-if.module.ts","~/@ux-aspects/ux-aspects/components/typeahead/typeahead.module.ts","~/@ux-aspects/ux-aspects/components/select/select.component.ts","~/@ux-aspects/ux-aspects/components/tag-input/tag-input-event.ts","~/@ux-aspects/ux-aspects/components/tag-input/tag-input.component.ts","~/@ux-aspects/ux-aspects/directives/focus-if/focus-if.directive.ts","~/@ux-aspects/ux-aspects/directives/focus-if/focus-if.module.ts","~/@ux-aspects/ux-aspects/components/tag-input/tag-input.module.ts","~/@ux-aspects/ux-aspects/components/select/select.module.ts","~/@ux-aspects/ux-aspects/components/search-builder/search-builder.module.ts","~/@ux-aspects/ux-aspects/components/slider/slider.component.ts","~/@ux-aspects/ux-aspects/components/slider/slider.module.ts","~/@ux-aspects/ux-aspects/components/spark/spark.component.ts","~/@ux-aspects/ux-aspects/components/spark/spark.module.ts","~/@ux-aspects/ux-aspects/components/toggleswitch/toggleswitch.component.ts","~/@ux-aspects/ux-aspects/components/toggleswitch/toggleswitch.module.ts","~/@ux-aspects/ux-aspects/services/frame-extraction/frame-extraction.service.ts","~/@ux-aspects/ux-aspects/services/frame-extraction/frame-extraction.module.ts","~/@ux-aspects/ux-aspects/components/media-player/media-player.service.ts","~/@ux-aspects/ux-aspects/services/audio/audio.service.ts","~/@ux-aspects/ux-aspects/services/audio/audio.module.ts","~/@ux-aspects/ux-aspects/components/media-player/media-player.component.ts","~/@ux-aspects/ux-aspects/components/media-player/extensions/base-extension.directive.ts","~/@ux-aspects/ux-aspects/components/media-player/extensions/timeline/timeline.component.ts","~/@ux-aspects/ux-aspects/components/media-player/extensions/controls/controls.component.ts","~/@ux-aspects/ux-aspects/pipes/duration/duration.pipe.ts","~/@ux-aspects/ux-aspects/pipes/duration/duration.module.ts","~/@ux-aspects/ux-aspects/pipes/file-size/file-size.pipe.ts","~/@ux-aspects/ux-aspects/pipes/file-size/file-size.module.ts","~/@ux-aspects/ux-aspects/components/media-player/media-player.module.ts","~/@ux-aspects/ux-aspects/components/virtual-scroll/directives/virtual-scroll-loading.directive.ts","~/@ux-aspects/ux-aspects/components/virtual-scroll/directives/virtual-scroll-load-button.directive.ts","~/@ux-aspects/ux-aspects/components/virtual-scroll/directives/virtual-scroll-cell.directive.ts","~/@ux-aspects/ux-aspects/components/virtual-scroll/virtual-scroll.component.ts","~/@ux-aspects/ux-aspects/components/virtual-scroll/virtual-scroll.module.ts","~/@ux-aspects/ux-aspects/directives/fixed-header-table/fixed-header-table.directive.ts","~/@ux-aspects/ux-aspects/directives/fixed-header-table/fixed-header-table.module.ts","~/@ux-aspects/ux-aspects/directives/help-center/help-center.service.ts","~/@ux-aspects/ux-aspects/directives/help-center/help-center-item.directive.ts","~/@ux-aspects/ux-aspects/directives/help-center/help-center.module.ts","~/@ux-aspects/ux-aspects/directives/hover-action/hover-action.service.ts","~/@ux-aspects/ux-aspects/directives/hover-action/hover-action-container.directive.ts","~/@ux-aspects/ux-aspects/directives/hover-action/hover-action.directive.ts","~/@ux-aspects/ux-aspects/directives/hover-action/hover-action.module.ts","~/@ux-aspects/ux-aspects/directives/layout-switcher/layout-switcher-item.directive.ts","~/@ux-aspects/ux-aspects/directives/layout-switcher/layout-switcher.directive.ts","~/@ux-aspects/ux-aspects/directives/layout-switcher/layout-switcher.module.ts","~/@ux-aspects/ux-aspects/pipes/string-filter/string-filter.pipe.ts","~/@ux-aspects/ux-aspects/pipes/string-filter/string-filter.module.ts","~/@ux-aspects/ux-aspects/services/persistent-data/adapters/cookie-adapter.ts","~/@ux-aspects/ux-aspects/services/persistent-data/adapters/local-storage-adapter.ts","~/@ux-aspects/ux-aspects/services/persistent-data/adapters/session-storage-adapter.ts","~/@ux-aspects/ux-aspects/services/persistent-data/persistent-data.service.ts","~/@ux-aspects/ux-aspects/services/persistent-data/persistent-data.module.ts","~/@ux-aspects/ux-aspects/services/persistent-data/adapters/storage-adapter.ts","~/@ux-aspects/ux-aspects/hybrid/components/contacts/contacts.component.ts","~/@ux-aspects/ux-aspects/hybrid/components/expand-input/expand-input.component.ts","~/@ux-aspects/ux-aspects/hybrid/components/floating-action-button/floating-action-button.component.ts","~/@ux-aspects/ux-aspects/hybrid/components/flot/flot.component.ts","~/@ux-aspects/ux-aspects/hybrid/components/grid/grid.component.ts","~/@ux-aspects/ux-aspects/hybrid/components/hierarchy-bar/hierarchy-bar.component.ts","~/@ux-aspects/ux-aspects/hybrid/components/marquee-wizard/marquee-wizard.component.ts","~/@ux-aspects/ux-aspects/hybrid/components/nested-donut/nested-donut.component.ts","~/@ux-aspects/ux-aspects/hybrid/components/organization-chart/organization-chart.component.ts","~/@ux-aspects/ux-aspects/hybrid/components/partition-map/partition-map.component.ts","~/@ux-aspects/ux-aspects/hybrid/components/peity-chart/peity-bar-chart.component.ts","~/@ux-aspects/ux-aspects/hybrid/components/peity-chart/peity-line-chart.component.ts","~/@ux-aspects/ux-aspects/hybrid/components/peity-chart/peity-pie-chart.component.ts","~/@ux-aspects/ux-aspects/hybrid/components/peity-chart/peity-updating-line-chart.component.ts","~/@ux-aspects/ux-aspects/hybrid/components/sankey-chart/sankey.component.ts","~/@ux-aspects/ux-aspects/hybrid/components/search-toolbar/search-toolbar.component.ts","~/@ux-aspects/ux-aspects/hybrid/components/select-table/select-table.component.ts","~/@ux-aspects/ux-aspects/hybrid/components/slider-chart/slider-chart.directive.ts","~/@ux-aspects/ux-aspects/hybrid/components/social-chart/social-chart.component.ts","~/@ux-aspects/ux-aspects/hybrid/components/sort-direction-toggle/sort-direction-toggle.component.ts","~/@ux-aspects/ux-aspects/hybrid/components/tree-grid/tree-grid.component.ts","~/@ux-aspects/ux-aspects/hybrid/components/thumbnail/thumbnail.component.ts","~/@ux-aspects/ux-aspects/hybrid/services/navigation-menu/navigation-menu.service.ts","~/@ux-aspects/ux-aspects/hybrid/services/notification/notification.service.ts","~/@ux-aspects/ux-aspects/hybrid/services/pdf/pdf.service.ts","~/@ux-aspects/ux-aspects/hybrid/services/time-ago/time-ago.service.ts","~/@ux-aspects/ux-aspects/hybrid/hybrid.module.ts","~/@ux-aspects/ux-aspects/components/breadcrumbs/breadcrumbs.component.ts","~/@ux-aspects/ux-aspects/components/breadcrumbs/breadcrumbs.module.ts","~/@ux-aspects/ux-aspects/components/checkbox/checkbox.component.ts","~/@ux-aspects/ux-aspects/components/checkbox/checkbox.module.ts","~/@ux-aspects/ux-aspects/components/column-sorting/column-sorting.component.ts","~/@ux-aspects/ux-aspects/components/column-sorting/column-sorting.directive.ts","~/@ux-aspects/ux-aspects/components/column-sorting/column-sorting.module.ts","~/@ux-aspects/ux-aspects/components/dashboard/dashboard.service.ts","~/@ux-aspects/ux-aspects/components/dashboard/dashboard.component.ts","~/@ux-aspects/ux-aspects/components/dashboard/widget/dashboard-widget.component.ts","~/@ux-aspects/ux-aspects/components/dashboard/drag-handle/drag-handle.directive.ts","~/@ux-aspects/ux-aspects/directives/resize/resize.service.ts","~/@ux-aspects/ux-aspects/directives/resize/resize.directive.ts","~/@ux-aspects/ux-aspects/directives/resize/resize.module.ts","~/@ux-aspects/ux-aspects/components/dashboard/dashboard.module.ts","../../../../node_modules/.tmp/timepicker/reducer/timepicker.actions.ts","../../../../node_modules/.tmp/timepicker/timepicker.utils.ts","../../../../node_modules/.tmp/timepicker/timepicker-controls.util.ts","../../../../node_modules/.tmp/timepicker/timepicker.config.ts","../../../../node_modules/.tmp/timepicker/reducer/timepicker.reducer.ts","../../../../node_modules/.tmp/mini-ngrx/store.class.ts","../../../../node_modules/src/util/root.ts","../../../../node_modules/src/util/isArray.ts","../../../../node_modules/src/util/isObject.ts","../../../../node_modules/src/util/isFunction.ts","../../../../node_modules/src/util/tryCatch.ts","../../../../node_modules/src/util/errorObject.ts","../../../../node_modules/src/util/UnsubscriptionError.ts","../../../../node_modules/src/Subscription.ts","../../../../node_modules/src/scheduler/Action.ts","../../../../node_modules/src/scheduler/AsyncAction.ts","../../../../node_modules/src/scheduler/QueueAction.ts","../../../../node_modules/src/Scheduler.ts","../../../../node_modules/src/scheduler/AsyncScheduler.ts","../../../../node_modules/src/scheduler/queue.ts","../../../../node_modules/src/scheduler/QueueScheduler.ts","../../../../node_modules/.tmp/mini-ngrx/state.class.ts","../../../../node_modules/.tmp/timepicker/reducer/timepicker.store.ts","../../../../node_modules/.tmp/timepicker/timepicker.component.ts","../../../../node_modules/.tmp/timepicker/timepicker.module.ts","../../../../node_modules/.tmp/buttons/button-checkbox.directive.ts","../../../../node_modules/.tmp/buttons/button-radio-group.directive.ts","../../../../node_modules/.tmp/buttons/button-radio.directive.ts","../../../../node_modules/.tmp/buttons/buttons.module.ts","~/@ux-aspects/ux-aspects/components/date-time-picker/date-time-picker.utils.ts","~/@ux-aspects/ux-aspects/components/date-time-picker/date-time-picker.config.ts","~/@ux-aspects/ux-aspects/components/date-time-picker/date-time-picker.service.ts","~/@ux-aspects/ux-aspects/components/date-time-picker/date-time-picker.component.ts","~/@ux-aspects/ux-aspects/components/date-time-picker/day-view/day-view.component.ts","~/@ux-aspects/ux-aspects/components/date-time-picker/month-view/month-view.component.ts","~/@ux-aspects/ux-aspects/components/date-time-picker/year-view/year-view.component.ts","~/@ux-aspects/ux-aspects/components/date-time-picker/header/header.component.ts","~/@ux-aspects/ux-aspects/components/date-time-picker/time-view/time-view.component.ts","~/@ux-aspects/ux-aspects/components/date-time-picker/date-time-picker.module.ts","~/@ux-aspects/ux-aspects/components/ebox/ebox.component.ts","~/@ux-aspects/ux-aspects/components/ebox/ebox.module.ts","../../../../node_modules/.tmp/tooltip/tooltip.config.ts"],"sourcesContent":["/*tslint:disable */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * JS version of browser APIs. This library can only run in the browser.\n */\nvar win = (typeof window !== 'undefined' && window) || <any>{};\n\nexport { win as window };\nexport var document = win.document;\nexport var location = win.location;\nexport var gc = win['gc'] ? () => win['gc']() : (): any => null;\nexport var performance = win['performance'] ? win['performance'] : null;\nexport const Event = win['Event'];\nexport const MouseEvent = win['MouseEvent'];\nexport const KeyboardEvent = win['KeyboardEvent'];\nexport const EventTarget = win['EventTarget'];\nexport const History = win['History'];\nexport const Location = win['Location'];\nexport const EventListener = win['EventListener'];\n","import { window } from './facade/browser';\n\nlet guessedVersion: 'bs3' | 'bs4';\n\nfunction _guessBsVersion(): 'bs3' | 'bs4' {\n  if (typeof document === 'undefined') {\n    return null;\n  }\n  const spanEl = document.createElement('span');\n  spanEl.innerText = 'test bs version';\n  document.body.appendChild(spanEl);\n  spanEl.classList.add('d-none');\n  const rect = spanEl.getBoundingClientRect();\n  document.body.removeChild(spanEl);\n  if (!rect) {\n    return 'bs3';\n  }\n\n  return rect.top === 0 ? 'bs4' : 'bs3';\n}\n\nexport function setTheme(theme: 'bs3' | 'bs4'): void {\n  guessedVersion = theme;\n}\n\n// todo: in ngx-bootstrap, bs4 will became a default one\nexport function isBs3(): boolean {\n  if (typeof window === 'undefined') {\n    return true;\n  }\n\n  if (typeof window.__theme === 'undefined') {\n    if (guessedVersion) {\n      return guessedVersion === 'bs3';\n    }\n    guessedVersion = _guessBsVersion();\n\n    return guessedVersion === 'bs3';\n  }\n\n  return window.__theme !== 'bs4';\n}\n","import {\n  AfterViewInit,\n  Component,\n  ChangeDetectionStrategy\n} from '@angular/core';\nimport { TooltipConfig } from './tooltip.config';\nimport { isBs3 } from '../utils/theme-provider';\n\n\nexport class TooltipContainerComponent implements AfterViewInit {\n  classMap: any;\n  placement: string;\n  containerClass: string;\n  animation: boolean;\n\n  get isBs3(): boolean {\n    return isBs3();\n  }\n\n  constructor(config: TooltipConfig) {\n    Object.assign(this, config);\n  }\n\n  ngAfterViewInit(): void {\n    this.classMap = { in: false, fade: false };\n    this.classMap[this.placement] = true;\n    this.classMap[`tooltip-${this.placement}`] = true;\n\n    this.classMap.in = true;\n    if (this.animation) {\n      this.classMap.fade = true;\n    }\n\n    if (this.containerClass) {\n      this.classMap[this.containerClass] = true;\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'bs-tooltip-container',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  // tslint:disable-next-line\n  host: {\n    '[class]':\n      '\"tooltip in tooltip-\" + placement + \" \" + \"bs-tooltip-\" + placement + \" \" + placement + \" \" + containerClass',\n    '[class.show]': '!isBs3',\n    role: 'tooltip'\n  },\n  styles: [\n    `\n    :host.tooltip {\n      display: block;\n    }\n    :host.bs-tooltip-top .arrow, :host.bs-tooltip-bottom .arrow {\n      left: 50%;\n    }\n    :host.bs-tooltip-left .arrow, :host.bs-tooltip-right .arrow {\n      top: 50%;\n    }\n  `\n  ],\n  template: `\n    <div class=\"tooltip-arrow arrow\"></div>\n    <div class=\"tooltip-inner\"><ng-content></ng-content></div>\n    `\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: TooltipConfig, },\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @copyright Valor Software\n * @copyright Angular ng-bootstrap team\n */\n\nexport class Trigger {\n  open: string;\n  close?: string;\n\n  constructor(open: string, close?: string) {\n    this.open = open;\n    this.close = close || open;\n  }\n\n  isManual(): boolean {\n    return this.open === 'manual' || this.close === 'manual';\n  }\n}\n","/**\n * @copyright Valor Software\n * @copyright Angular ng-bootstrap team\n */\nimport { Renderer2 } from '@angular/core';\nimport { Trigger } from './trigger.class';\nimport {\n  BsEventCallback, ListenOptions\n} from '../component-loader/listen-options.model';\n\nconst DEFAULT_ALIASES = {\n  hover: ['mouseover', 'mouseout'],\n  focus: ['focusin', 'focusout']\n};\n\nexport function parseTriggers(triggers: string, aliases: any = DEFAULT_ALIASES): Trigger[] {\n  const trimmedTriggers = (triggers || '').trim();\n\n  if (trimmedTriggers.length === 0) {\n    return [];\n  }\n\n  const parsedTriggers = trimmedTriggers\n    .split(/\\s+/)\n    .map((trigger: string) => trigger.split(':'))\n    .map((triggerPair: string[]) => {\n      const alias = aliases[triggerPair[0]] || triggerPair;\n\n      return new Trigger(alias[0], alias[1]);\n    });\n\n  const manualTriggers = parsedTriggers.filter((triggerPair: Trigger) =>\n    triggerPair.isManual()\n  );\n\n  if (manualTriggers.length > 1) {\n    throw new Error('Triggers parse error: only one manual trigger is allowed');\n  }\n\n  if (manualTriggers.length === 1 && parsedTriggers.length > 1) {\n    throw new Error('Triggers parse error: manual trigger can\\'t be mixed with other triggers');\n  }\n\n  return parsedTriggers;\n}\n\nexport function listenToTriggers(renderer: Renderer2,\n                                 target: any,\n                                 triggers: string,\n                                 showFn: BsEventCallback,\n                                 hideFn: BsEventCallback,\n                                 toggleFn: BsEventCallback): Function {\n  const parsedTriggers = parseTriggers(triggers);\n  const listeners: any[] = [];\n\n  if (parsedTriggers.length === 1 && parsedTriggers[0].isManual()) {\n    return Function.prototype;\n  }\n\n  parsedTriggers.forEach((trigger: Trigger) => {\n    if (trigger.open === trigger.close) {\n      listeners.push(renderer.listen(target, trigger.open, toggleFn));\n\n      return;\n    }\n\n    listeners.push(\n      renderer.listen(target, trigger.open, showFn),\n      renderer.listen(target, trigger.close, hideFn)\n    );\n  });\n\n  return () => {\n    listeners.forEach((unsubscribeFn: Function) => unsubscribeFn());\n  };\n}\n\nexport function listenToTriggersV2(renderer: Renderer2,\n                                   options: ListenOptions): Function {\n  const parsedTriggers = parseTriggers(options.triggers);\n  const target = options.target;\n  // do nothing\n  if (parsedTriggers.length === 1 && parsedTriggers[0].isManual()) {\n    return Function.prototype;\n  }\n\n  // all listeners\n  const listeners: any[] = [];\n\n  // lazy listeners registration\n  const _registerHide: Function[] = [];\n  const registerHide = () => {\n    // add hide listeners to unregister array\n    _registerHide.forEach((fn: Function) => listeners.push(fn()));\n    // register hide events only once\n    _registerHide.length = 0;\n  };\n\n  // register open\\close\\toggle listeners\n  parsedTriggers.forEach((trigger: Trigger) => {\n    const useToggle = trigger.open === trigger.close;\n    const showFn = useToggle ? options.toggle : options.show;\n\n    if (!useToggle) {\n      _registerHide.push(() =>\n        renderer.listen(target, trigger.close, options.hide)\n      );\n    }\n\n    listeners.push(\n      renderer.listen(target, trigger.open, () => showFn(registerHide))\n    );\n  });\n\n  return () => {\n    listeners.forEach((unsubscribeFn: Function) => unsubscribeFn());\n  };\n}\n\nexport function registerOutsideClick(renderer: Renderer2,\n                                     options: ListenOptions) {\n  if (!options.outsideClick) {\n    return Function.prototype;\n  }\n\n  return renderer.listen('document', 'click', (event: any) => {\n    if (options.target && options.target.contains(event.target)) {\n      return;\n    }\n    if (\n      options.targets &&\n      options.targets.some(target => target.contains(event.target))\n    ) {\n      return;\n    }\n\n    options.hide();\n  });\n}\n","/**\n * @copyright Valor Software\n * @copyright Angular ng-bootstrap team\n */\n\nimport { ComponentRef, ViewRef } from '@angular/core';\n\nexport class ContentRef {\n  nodes: any[];\n  viewRef?: ViewRef;\n  componentRef?: ComponentRef<any>;\n\n  constructor(\n    nodes: any[],\n    viewRef?: ViewRef,\n    componentRef?: ComponentRef<any>\n  ) {\n    this.nodes = nodes;\n    this.viewRef = viewRef;\n    this.componentRef = componentRef;\n  }\n}\n","// tslint:disable:max-file-line-count\n// todo: add delay support\n// todo: merge events onShow, onShown, etc...\n// todo: add global positioning configuration?\nimport {\n  ApplicationRef,\n  ComponentFactory,\n  ComponentFactoryResolver,\n  ComponentRef,\n  ElementRef,\n  EmbeddedViewRef,\n  EventEmitter,\n  Injector,\n  NgZone,\n  Provider,\n  ReflectiveInjector,\n  Renderer2,\n  TemplateRef,\n  Type,\n  ViewContainerRef\n} from '@angular/core';\nimport { PositioningOptions, PositioningService } from '../positioning/index';\nimport { listenToTriggersV2, registerOutsideClick } from '../utils/triggers';\nimport { ContentRef } from './content-ref.class';\nimport { ListenOptions } from './listen-options.model';\n\nexport class ComponentLoader<T> {\n  onBeforeShow: EventEmitter<any> = new EventEmitter();\n  onShown: EventEmitter<any> = new EventEmitter();\n  onBeforeHide: EventEmitter<any> = new EventEmitter();\n  onHidden: EventEmitter<any> = new EventEmitter();\n\n  instance: T;\n  _componentRef: ComponentRef<T>;\n  _inlineViewRef: EmbeddedViewRef<T>;\n\n  private _providers: Provider[] = [];\n  private _componentFactory: ComponentFactory<T>;\n  private _zoneSubscription: any;\n  private _contentRef: ContentRef;\n  private _innerComponent: ComponentRef<T>;\n\n  private _unregisterListenersFn: Function;\n\n  get isShown(): boolean {\n    if (this._isHiding) {\n      return false;\n    }\n\n    return !!this._componentRef;\n  }\n\n  private _isHiding = false;\n\n  /**\n   * Placement of a component. Accepts: \"top\", \"bottom\", \"left\", \"right\"\n   */\n  private attachment: string;\n\n  /**\n   * A selector specifying the element the popover should be appended to.\n   * Currently only supports \"body\".\n   */\n  private container: string | ElementRef | any;\n\n  /**\n   * Specifies events that should trigger. Supports a space separated list of\n   * event names.\n   */\n  private triggers: string;\n\n  private _listenOpts: ListenOptions = {};\n  private _globalListener = Function.prototype;\n\n  /**\n   * Do not use this directly, it should be instanced via\n   * `ComponentLoadFactory.attach`\n   * @internal\n   */\n  // tslint:disable-next-line\n  public constructor(\n    private _viewContainerRef: ViewContainerRef,\n    private _renderer: Renderer2,\n    private _elementRef: ElementRef,\n    private _injector: Injector,\n    private _componentFactoryResolver: ComponentFactoryResolver,\n    private _ngZone: NgZone,\n    private _applicationRef: ApplicationRef,\n    private _posService: PositioningService\n  ) {}\n\n  attach(compType: Type<T>): ComponentLoader<T> {\n    this._componentFactory = this._componentFactoryResolver\n      .resolveComponentFactory<T>(compType);\n\n    return this;\n  }\n\n  // todo: add behaviour: to target element, `body`, custom element\n  to(container?: string): ComponentLoader<T> {\n    this.container = container || this.container;\n\n    return this;\n  }\n\n  position(opts?: PositioningOptions): ComponentLoader<T> {\n    this.attachment = opts.attachment || this.attachment;\n    this._elementRef = (opts.target as ElementRef) || this._elementRef;\n\n    return this;\n  }\n\n  provide(provider: Provider): ComponentLoader<T> {\n    this._providers.push(provider);\n\n    return this;\n  }\n\n  // todo: appendChild to element or document.querySelector(this.container)\n\n  show(opts: {\n    content?: string | TemplateRef<any>;\n    context?: any;\n    initialState?: any; [key: string]: any;\n  } = {}\n  ): ComponentRef<T> {\n\n    this._subscribePositioning();\n    this._innerComponent = null;\n\n    if (!this._componentRef) {\n      this.onBeforeShow.emit();\n      this._contentRef = this._getContentRef(opts.content, opts.context, opts.initialState);\n      const injector = ReflectiveInjector.resolveAndCreate(this._providers, this._injector);\n\n      this._componentRef = this._componentFactory.create(injector, this._contentRef.nodes);\n      this._applicationRef.attachView(this._componentRef.hostView);\n      // this._componentRef = this._viewContainerRef\n      //   .createComponent(this._componentFactory, 0, injector, this._contentRef.nodes);\n      this.instance = this._componentRef.instance;\n\n      Object.assign(this._componentRef.instance, opts);\n\n      if (this.container instanceof ElementRef) {\n        this.container.nativeElement.appendChild(\n          this._componentRef.location.nativeElement\n        );\n      }\n\n      if (this.container === 'body' && typeof document !== 'undefined') {\n        document\n          .querySelector(this.container as string)\n          .appendChild(this._componentRef.location.nativeElement);\n      }\n\n      if (\n        !this.container &&\n        this._elementRef &&\n        this._elementRef.nativeElement.parentElement\n      ) {\n        this._elementRef.nativeElement.parentElement.appendChild(\n          this._componentRef.location.nativeElement\n        );\n      }\n\n      // we need to manually invoke change detection since events registered\n      // via\n      // Renderer::listen() are not picked up by change detection with the\n      // OnPush strategy\n      if (this._contentRef.componentRef) {\n        this._innerComponent = this._contentRef.componentRef.instance;\n        this._contentRef.componentRef.changeDetectorRef.markForCheck();\n        this._contentRef.componentRef.changeDetectorRef.detectChanges();\n      }\n      this._componentRef.changeDetectorRef.markForCheck();\n      this._componentRef.changeDetectorRef.detectChanges();\n      this.onShown.emit(this._componentRef.instance);\n    }\n\n    this._registerOutsideClick();\n\n    return this._componentRef;\n  }\n\n  hide(): ComponentLoader<T> {\n    if (!this._componentRef) {\n      return this;\n    }\n\n    this.onBeforeHide.emit(this._componentRef.instance);\n\n    const componentEl = this._componentRef.location.nativeElement;\n    componentEl.parentNode.removeChild(componentEl);\n    if (this._contentRef.componentRef) {\n      this._contentRef.componentRef.destroy();\n    }\n    this._componentRef.destroy();\n    if (this._viewContainerRef && this._contentRef.viewRef) {\n      this._viewContainerRef.remove(\n        this._viewContainerRef.indexOf(this._contentRef.viewRef)\n      );\n    }\n    if (this._contentRef.viewRef) {\n      this._contentRef.viewRef.destroy();\n    }\n    // this._viewContainerRef.remove(this._viewContainerRef.indexOf(this._componentRef.hostView));\n    //\n    // if (this._contentRef.viewRef && this._viewContainerRef.indexOf(this._contentRef.viewRef) !== -1) {\n    //   this._viewContainerRef.remove(this._viewContainerRef.indexOf(this._contentRef.viewRef));\n    // }\n\n    this._contentRef = null;\n    this._componentRef = null;\n    this._removeGlobalListener();\n\n    this.onHidden.emit();\n\n    return this;\n  }\n\n  toggle(): void {\n    if (this.isShown) {\n      this.hide();\n\n      return;\n    }\n\n    this.show();\n  }\n\n  dispose(): void {\n    if (this.isShown) {\n      this.hide();\n    }\n\n    this._unsubscribePositioning();\n\n    if (this._unregisterListenersFn) {\n      this._unregisterListenersFn();\n    }\n  }\n\n  listen(listenOpts: ListenOptions): ComponentLoader<T> {\n    this.triggers = listenOpts.triggers || this.triggers;\n    this._listenOpts.outsideClick = listenOpts.outsideClick;\n    listenOpts.target = listenOpts.target || this._elementRef.nativeElement;\n\n    const hide = (this._listenOpts.hide = () =>\n      listenOpts.hide ? listenOpts.hide() : void this.hide());\n    const show = (this._listenOpts.show = (registerHide: Function) => {\n      listenOpts.show ? listenOpts.show(registerHide) : this.show(registerHide);\n      registerHide();\n    });\n\n    const toggle = (registerHide: Function) => {\n      this.isShown ? hide() : show(registerHide);\n    };\n\n    this._unregisterListenersFn = listenToTriggersV2(this._renderer, {\n      target: listenOpts.target,\n      triggers: listenOpts.triggers,\n      show,\n      hide,\n      toggle\n    });\n\n    return this;\n  }\n\n  _removeGlobalListener() {\n    if (this._globalListener) {\n      this._globalListener();\n      this._globalListener = null;\n    }\n  }\n\n  attachInline(\n    vRef: ViewContainerRef,\n    template: TemplateRef<any>\n  ): ComponentLoader<T> {\n    this._inlineViewRef = vRef.createEmbeddedView(template);\n\n    return this;\n  }\n\n  _registerOutsideClick(): void {\n    if (!this._componentRef || !this._componentRef.location) {\n      return;\n    }\n    // why: should run after first event bubble\n    if (this._listenOpts.outsideClick) {\n      const target = this._componentRef.location.nativeElement;\n      setTimeout(() => {\n        this._globalListener = registerOutsideClick(this._renderer, {\n          targets: [target, this._elementRef.nativeElement],\n          outsideClick: this._listenOpts.outsideClick,\n          hide: () => this._listenOpts.hide()\n        });\n      });\n    }\n  }\n\n  getInnerComponent(): ComponentRef<T> {\n    return this._innerComponent;\n  }\n\n  private _subscribePositioning(): void {\n    if (this._zoneSubscription || !this.attachment) {\n      return;\n    }\n\n    this._zoneSubscription = this._ngZone.onStable.subscribe(() => {\n      if (!this._componentRef) {\n        return;\n      }\n      this._posService.position({\n        element: this._componentRef.location,\n        target: this._elementRef,\n        attachment: this.attachment,\n        appendToBody: this.container === 'body'\n      });\n    });\n  }\n\n  private _unsubscribePositioning(): void {\n    if (!this._zoneSubscription) {\n      return;\n    }\n    this._zoneSubscription.unsubscribe();\n    this._zoneSubscription = null;\n  }\n\n  private _getContentRef(\n    content: string | TemplateRef<any> | any,\n    context?: any,\n    initialState?: any\n  ): ContentRef {\n    if (!content) {\n      return new ContentRef([]);\n    }\n\n    if (content instanceof TemplateRef) {\n      if (this._viewContainerRef) {\n        const _viewRef = this._viewContainerRef\n          .createEmbeddedView<TemplateRef<T>>(content, context);\n        _viewRef.markForCheck();\n\n        return new ContentRef([_viewRef.rootNodes], _viewRef);\n      }\n      const viewRef = content.createEmbeddedView({});\n      this._applicationRef.attachView(viewRef);\n\n      return new ContentRef([viewRef.rootNodes], viewRef);\n    }\n\n    if (typeof content === 'function') {\n      const contentCmptFactory = this._componentFactoryResolver.resolveComponentFactory(\n        content\n      );\n      const modalContentInjector = ReflectiveInjector.resolveAndCreate(\n        [...this._providers],\n        this._injector\n      );\n      const componentRef = contentCmptFactory.create(modalContentInjector);\n      Object.assign(componentRef.instance, initialState);\n      this._applicationRef.attachView(componentRef.hostView);\n\n      return new ContentRef(\n        [[componentRef.location.nativeElement]],\n        componentRef.hostView,\n        componentRef\n      );\n    }\n\n    return new ContentRef([[this._renderer.createText(`${content}`)]]);\n  }\n}\n","/**\n * @copyright Valor Software\n * @copyright Angular ng-bootstrap team\n */\n\n// previous version:\n// https://github.com/angular-ui/bootstrap/blob/07c31d0731f7cb068a1932b8e01d2312b796b4ec/src/position/position.js\n// tslint:disable\nexport class Positioning {\n  public position(element: HTMLElement, round = true): ClientRect {\n    let elPosition: ClientRect;\n    let parentOffset: ClientRect = {\n      width: 0,\n      height: 0,\n      top: 0,\n      bottom: 0,\n      left: 0,\n      right: 0\n    };\n\n    if (this.getStyle(element, 'position') === 'fixed') {\n      const bcRect = element.getBoundingClientRect();\n      elPosition = {\n        width: bcRect.width,\n        height: bcRect.height,\n        top: bcRect.top,\n        bottom: bcRect.bottom,\n        left: bcRect.left,\n        right: bcRect.right\n      };\n    } else {\n      const offsetParentEl = this.offsetParent(element);\n\n      elPosition = this.offset(element, false);\n\n      if (offsetParentEl !== document.documentElement) {\n        parentOffset = this.offset(offsetParentEl, false);\n      }\n\n      parentOffset.top += offsetParentEl.clientTop;\n      parentOffset.left += offsetParentEl.clientLeft;\n    }\n\n    elPosition.top -= parentOffset.top;\n    elPosition.bottom -= parentOffset.top;\n    elPosition.left -= parentOffset.left;\n    elPosition.right -= parentOffset.left;\n\n    if (round) {\n      elPosition.top = Math.round(elPosition.top);\n      elPosition.bottom = Math.round(elPosition.bottom);\n      elPosition.left = Math.round(elPosition.left);\n      elPosition.right = Math.round(elPosition.right);\n    }\n\n    return elPosition;\n  }\n\n  public offset(element: HTMLElement, round = true): ClientRect {\n    const elBcr = element.getBoundingClientRect();\n    const viewportOffset = {\n      top: window.pageYOffset - document.documentElement.clientTop,\n      left: window.pageXOffset - document.documentElement.clientLeft\n    };\n\n    let elOffset = {\n      height: elBcr.height || element.offsetHeight,\n      width: elBcr.width || element.offsetWidth,\n      top: elBcr.top + viewportOffset.top,\n      bottom: elBcr.bottom + viewportOffset.top,\n      left: elBcr.left + viewportOffset.left,\n      right: elBcr.right + viewportOffset.left\n    };\n\n    if (round) {\n      elOffset.height = Math.round(elOffset.height);\n      elOffset.width = Math.round(elOffset.width);\n      elOffset.top = Math.round(elOffset.top);\n      elOffset.bottom = Math.round(elOffset.bottom);\n      elOffset.left = Math.round(elOffset.left);\n      elOffset.right = Math.round(elOffset.right);\n    }\n\n    return elOffset;\n  }\n\n  public positionElements(\n    hostElement: HTMLElement,\n    targetElement: HTMLElement,\n    placement: string,\n    appendToBody?: boolean\n  ): ClientRect {\n    const hostElPosition = appendToBody\n      ? this.offset(hostElement, false)\n      : this.position(hostElement, false);\n    const targetElStyles = this.getAllStyles(targetElement);\n    const shiftWidth: any = {\n      left: hostElPosition.left,\n      center:\n        hostElPosition.left +\n        hostElPosition.width / 2 -\n        targetElement.offsetWidth / 2,\n      right: hostElPosition.left + hostElPosition.width\n    };\n    const shiftHeight: any = {\n      top: hostElPosition.top,\n      center:\n        hostElPosition.top +\n        hostElPosition.height / 2 -\n        targetElement.offsetHeight / 2,\n      bottom: hostElPosition.top + hostElPosition.height\n    };\n    const targetElBCR = targetElement.getBoundingClientRect();\n    let placementPrimary = placement.split(' ')[0] || 'top';\n    const placementSecondary = placement.split(' ')[1] || 'center';\n\n    let targetElPosition: ClientRect = {\n      height: targetElBCR.height || targetElement.offsetHeight,\n      width: targetElBCR.width || targetElement.offsetWidth,\n      top: 0,\n      bottom: targetElBCR.height || targetElement.offsetHeight,\n      left: 0,\n      right: targetElBCR.width || targetElement.offsetWidth\n    };\n\n    if (placementPrimary === 'auto') {\n      let newPlacementPrimary = this.autoPosition(\n        targetElPosition,\n        hostElPosition,\n        targetElement,\n        placementSecondary\n      );\n      if (!newPlacementPrimary)\n        newPlacementPrimary = this.autoPosition(\n          targetElPosition,\n          hostElPosition,\n          targetElement\n        );\n      if (newPlacementPrimary) placementPrimary = newPlacementPrimary;\n      targetElement.classList.add(placementPrimary);\n    }\n\n    switch (placementPrimary) {\n      case 'top':\n        targetElPosition.top =\n          hostElPosition.top -\n          (targetElement.offsetHeight +\n            parseFloat(targetElStyles.marginBottom));\n        targetElPosition.bottom +=\n          hostElPosition.top - targetElement.offsetHeight;\n        targetElPosition.left = shiftWidth[placementSecondary];\n        targetElPosition.right += shiftWidth[placementSecondary];\n        break;\n      case 'bottom':\n        targetElPosition.top = shiftHeight[placementPrimary];\n        targetElPosition.bottom += shiftHeight[placementPrimary];\n        targetElPosition.left = shiftWidth[placementSecondary];\n        targetElPosition.right += shiftWidth[placementSecondary];\n        break;\n      case 'left':\n        targetElPosition.top = shiftHeight[placementSecondary];\n        targetElPosition.bottom += shiftHeight[placementSecondary];\n        targetElPosition.left =\n          hostElPosition.left -\n          (targetElement.offsetWidth + parseFloat(targetElStyles.marginRight));\n        targetElPosition.right +=\n          hostElPosition.left - targetElement.offsetWidth;\n        break;\n      case 'right':\n        targetElPosition.top = shiftHeight[placementSecondary];\n        targetElPosition.bottom += shiftHeight[placementSecondary];\n        targetElPosition.left = shiftWidth[placementPrimary];\n        targetElPosition.right += shiftWidth[placementPrimary];\n        break;\n    }\n\n    targetElPosition.top = Math.round(targetElPosition.top);\n    targetElPosition.bottom = Math.round(targetElPosition.bottom);\n    targetElPosition.left = Math.round(targetElPosition.left);\n    targetElPosition.right = Math.round(targetElPosition.right);\n\n    return targetElPosition;\n  }\n\n  private autoPosition(\n    targetElPosition: ClientRect,\n    hostElPosition: ClientRect,\n    targetElement: HTMLElement,\n    preferredPosition?: string\n  ) {\n    if (\n      (!preferredPosition || preferredPosition === 'right') &&\n      targetElPosition.left + hostElPosition.left - targetElement.offsetWidth <\n        0\n    ) {\n      return 'right';\n    } else if (\n      (!preferredPosition || preferredPosition === 'top') &&\n      targetElPosition.bottom +\n        hostElPosition.bottom +\n        targetElement.offsetHeight >\n        window.innerHeight\n    ) {\n      return 'top';\n    } else if (\n      (!preferredPosition || preferredPosition === 'bottom') &&\n      targetElPosition.top + hostElPosition.top - targetElement.offsetHeight < 0\n    ) {\n      return 'bottom';\n    } else if (\n      (!preferredPosition || preferredPosition === 'left') &&\n      targetElPosition.right +\n        hostElPosition.right +\n        targetElement.offsetWidth >\n        window.innerWidth\n    ) {\n      return 'left';\n    }\n    return null;\n  }\n\n  private getAllStyles(element: HTMLElement) {\n    return window.getComputedStyle(element);\n  }\n\n  private getStyle(element: HTMLElement, prop: string): string {\n    return (this.getAllStyles(element) as any)[prop];\n  }\n\n  private isStaticPositioned(element: HTMLElement): boolean {\n    return (this.getStyle(element, 'position') || 'static') === 'static';\n  }\n\n  private offsetParent(element: HTMLElement): HTMLElement {\n    let offsetParentEl =\n      <HTMLElement>element.offsetParent || document.documentElement;\n\n    while (\n      offsetParentEl &&\n      offsetParentEl !== document.documentElement &&\n      this.isStaticPositioned(offsetParentEl)\n    ) {\n      offsetParentEl = <HTMLElement>offsetParentEl.offsetParent;\n    }\n\n    return offsetParentEl || document.documentElement;\n  }\n}\n\nconst positionService = new Positioning();\n\nexport function positionElements(\n  hostElement: HTMLElement,\n  targetElement: HTMLElement,\n  placement: string,\n  appendToBody?: boolean\n): void {\n  const pos = positionService.positionElements(\n    hostElement,\n    targetElement,\n    placement,\n    appendToBody\n  );\n\n  targetElement.style.top = `${pos.top}px`;\n  targetElement.style.left = `${pos.left}px`;\n}\n","import { Injectable, ElementRef } from '@angular/core';\nimport { positionElements } from './ng-positioning';\n\nexport interface PositioningOptions {\n  /** The DOM element, ElementRef, or a selector string of an element which will be moved */\n  element?: HTMLElement | ElementRef | string;\n\n  /** The DOM element, ElementRef, or a selector string of an element which the element will be attached to  */\n  target?: HTMLElement | ElementRef | string;\n\n  /**\n   * A string of the form 'vert-attachment horiz-attachment' or 'placement'\n   * - placement can be \"top\", \"bottom\", \"left\", \"right\"\n   * not yet supported:\n   * - vert-attachment can be any of 'top', 'middle', 'bottom'\n   * - horiz-attachment can be any of 'left', 'center', 'right'\n   */\n  attachment?: string;\n\n  /** A string similar to `attachment`. The one difference is that, if it's not provided,\n   * `targetAttachment` will assume the mirror image of `attachment`.\n   */\n  targetAttachment?: string;\n\n  /** A string of the form 'vert-offset horiz-offset'\n   * - vert-offset and horiz-offset can be of the form \"20px\" or \"55%\"\n   */\n  offset?: string;\n\n  /** A string similar to `offset`, but referring to the offset of the target */\n  targetOffset?: string;\n\n  /** If true component will be attached to body */\n  appendToBody?: boolean;\n}\n\n\nexport class PositioningService {\n  position(options: PositioningOptions): void {\n    const {element, target, attachment, appendToBody} = options;\n    positionElements(\n      _getHtmlElement(target),\n      _getHtmlElement(element),\n      attachment,\n      appendToBody\n    );\n  }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction _getHtmlElement(element: HTMLElement | ElementRef | string): HTMLElement {\n  // it means that we got a selector\n  if (typeof element === 'string') {\n    return document.querySelector(element) as HTMLElement;\n  }\n\n  if (element instanceof ElementRef) {\n    return element.nativeElement;\n  }\n\n  return element as HTMLElement;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {\n  ApplicationRef, ComponentFactoryResolver, ElementRef, Injectable, Injector,\n  NgZone, Renderer2, ViewContainerRef\n} from '@angular/core';\nimport { ComponentLoader } from './component-loader.class';\nimport { PositioningService } from '../positioning/index';\n\n\nexport class ComponentLoaderFactory {\n  constructor(private _componentFactoryResolver: ComponentFactoryResolver,\n              private _ngZone: NgZone,\n              private _injector: Injector,\n              private _posService: PositioningService,\n              private _applicationRef: ApplicationRef) {}\n\n  /**\n   *\n   * @param _elementRef\n   * @param _viewContainerRef\n   * @param _renderer\n   * @returns {ComponentLoader}\n   */\n  createLoader<T>(_elementRef: ElementRef,\n                  _viewContainerRef: ViewContainerRef,\n                  _renderer: Renderer2): ComponentLoader<T> {\n    return new ComponentLoader<T>(\n      _viewContainerRef,\n      _renderer,\n      _elementRef,\n      this._injector,\n      this._componentFactoryResolver,\n      this._ngZone,\n      this._applicationRef,\n      this._posService\n    );\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ComponentFactoryResolver, },\n{type: NgZone, },\n{type: Injector, },\n{type: PositioningService, },\n{type: ApplicationRef, },\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { isDevMode } from '@angular/core';\nconst _messagesHash: { [key: string]: boolean } = {};\nconst _hideMsg = typeof console === 'undefined' || !('warn' in console);\n\nexport function warnOnce(msg: string): void {\n  if (!isDevMode() || _hideMsg || msg in _messagesHash) {\n    return;\n  }\n\n  _messagesHash[msg] = true;\n  /*tslint:disable-next-line*/\n  console.warn(msg);\n}\n","// tslint:disable:deprecation\nimport {\n  Directive, ElementRef, EventEmitter, Input, OnDestroy, OnInit, Output,\n  Renderer2, TemplateRef, ViewContainerRef\n} from '@angular/core';\nimport { TooltipContainerComponent } from './tooltip-container.component';\nimport { TooltipConfig } from './tooltip.config';\nimport { ComponentLoader, ComponentLoaderFactory } from '../component-loader/index';\nimport { OnChange } from '../utils/decorators';\nimport { warnOnce } from '../utils/warn-once';\nimport { parseTriggers } from '../utils/triggers';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/observable/timer';\n\n\nexport class TooltipDirective implements OnInit, OnDestroy {\n  /**\n   * Content to be displayed as tooltip.\n   */\n  @OnChange()\n  \n  tooltip: string | TemplateRef<any>;\n  /** Fired when tooltip content changes */\n  \n  tooltipChange: EventEmitter<string | TemplateRef<any>> = new EventEmitter();\n\n  /**\n   * Placement of a tooltip. Accepts: \"top\", \"bottom\", \"left\", \"right\"\n   */\n   placement: string;\n  /**\n   * Specifies events that should trigger. Supports a space separated list of\n   * event names.\n   */\n   triggers: string;\n  /**\n   * A selector specifying the element the tooltip should be appended to.\n   * Currently only supports \"body\".\n   */\n   container: string;\n\n  /**\n   * Returns whether or not the tooltip is currently being shown\n   */\n  \n  get isOpen(): boolean {\n    return this._tooltip.isShown;\n  }\n\n  set isOpen(value: boolean) {\n    if (value) {\n      this.show();\n    } else {\n      this.hide();\n    }\n  }\n\n  /**\n   * Allows to disable tooltip\n   */\n   isDisabled: boolean;\n\n  /**\n   * Css class for tooltip container\n   */\n   containerClass = '';\n  /**\n   * Delay before showing the tooltip\n   */\n   delay: number;\n\n  /**\n   * Emits an event when the tooltip is shown\n   */\n   onShown: EventEmitter<any>;\n  /**\n   * Emits an event when the tooltip is hidden\n   */\n   onHidden: EventEmitter<any>;\n\n  /** @deprecated - please use `tooltip` instead */\n  \n  set htmlContent(value: string | TemplateRef<any>) {\n    warnOnce('tooltipHtml was deprecated, please use `tooltip` instead');\n    this.tooltip = value;\n  }\n\n  /** @deprecated - please use `placement` instead */\n  \n  set _placement(value: string) {\n    warnOnce('tooltipPlacement was deprecated, please use `placement` instead');\n    this.placement = value;\n  }\n\n  /** @deprecated - please use `isOpen` instead*/\n  \n  set _isOpen(value: boolean) {\n    warnOnce('tooltipIsOpen was deprecated, please use `isOpen` instead');\n    this.isOpen = value;\n  }\n\n  get _isOpen(): boolean {\n    warnOnce('tooltipIsOpen was deprecated, please use `isOpen` instead');\n    return this.isOpen;\n  }\n\n  /** @deprecated - please use `isDisabled` instead */\n  \n  set _enable(value: boolean) {\n    warnOnce('tooltipEnable was deprecated, please use `isDisabled` instead');\n    this.isDisabled = value;\n  }\n\n  get _enable(): boolean {\n    warnOnce('tooltipEnable was deprecated, please use `isDisabled` instead');\n    return this.isDisabled;\n  }\n\n  /** @deprecated - please use `container=\"body\"` instead */\n  \n  set _appendToBody(value: boolean) {\n    warnOnce(\n      'tooltipAppendToBody was deprecated, please use `container=\"body\"` instead'\n    );\n    this.container = value ? 'body' : this.container;\n  }\n\n  get _appendToBody(): boolean {\n    warnOnce(\n      'tooltipAppendToBody was deprecated, please use `container=\"body\"` instead'\n    );\n    return this.container === 'body';\n  }\n\n  /** @deprecated - removed, will be added to configuration */\n   _animation = true;\n\n  /** @deprecated - will replaced with customClass */\n  \n  set _popupClass(value: string) {\n    warnOnce('tooltipClass deprecated');\n  }\n\n  /** @deprecated - removed */\n  \n  set _tooltipContext(value: any) {\n    warnOnce('tooltipContext deprecated');\n  }\n\n  /** @deprecated */\n  \n  set _tooltipPopupDelay(value: number) {\n    warnOnce('tooltipPopupDelay is deprecated, use `delay` instead');\n    this.delay = value;\n  }\n\n  /** @deprecated */\n   _fadeDuration = 150;\n\n  /** @deprecated -  please use `triggers` instead */\n  \n  get _tooltipTrigger(): string | string[] {\n    warnOnce('tooltipTrigger was deprecated, please use `triggers` instead');\n    return this.triggers;\n  }\n\n  set _tooltipTrigger(value: string | string[]) {\n    warnOnce('tooltipTrigger was deprecated, please use `triggers` instead');\n    this.triggers = (value || '').toString();\n  }\n\n  /** @deprecated */\n  \n  tooltipStateChanged: EventEmitter<boolean> = new EventEmitter<boolean>();\n  protected _delayTimeoutId: number | any;\n  protected _tooltipCancelShowFn: Function;\n\n  private _tooltip: ComponentLoader<TooltipContainerComponent>;\n\n  constructor(_viewContainerRef: ViewContainerRef,\n                     private _renderer: Renderer2,\n                     private _elementRef: ElementRef,\n                     cis: ComponentLoaderFactory,\n                     config: TooltipConfig) {\n    this._tooltip = cis\n      .createLoader<TooltipContainerComponent>(\n        this._elementRef,\n        _viewContainerRef,\n        this._renderer\n      )\n      .provide({provide: TooltipConfig, useValue: config});\n\n    Object.assign(this, config);\n    this.onShown = this._tooltip.onShown;\n    this.onHidden = this._tooltip.onHidden;\n  }\n\n  ngOnInit(): void {\n    this._tooltip.listen({\n      triggers: this.triggers,\n      show: () => this.show()\n    });\n    this.tooltipChange.subscribe((value: any) => {\n      if (!value) {\n        this._tooltip.hide();\n      }\n    });\n  }\n\n  /**\n   * Toggles an element’s tooltip. This is considered a “manual” triggering of\n   * the tooltip.\n   */\n  toggle(): void {\n    if (this.isOpen) {\n      return this.hide();\n    }\n\n    this.show();\n  }\n\n  /**\n   * Opens an element’s tooltip. This is considered a “manual” triggering of\n   * the tooltip.\n   */\n  show(): void {\n    if (\n      this.isOpen ||\n      this.isDisabled ||\n      this._delayTimeoutId ||\n      !this.tooltip\n    ) {\n      return;\n    }\n\n    const showTooltip = () => {\n      if (this._delayTimeoutId) {\n        this._delayTimeoutId = undefined;\n      }\n\n      this._tooltip\n        .attach(TooltipContainerComponent)\n        .to(this.container)\n        .position({attachment: this.placement})\n        .show({\n          content: this.tooltip,\n          placement: this.placement,\n          containerClass: this.containerClass\n        });\n    };\n    const cancelDelayedTooltipShowing = () => {\n      if (this._tooltipCancelShowFn) {\n        this._tooltipCancelShowFn();\n      }\n    };\n\n    if (this.delay) {\n      const timer = Observable.timer(this.delay).subscribe(() => {\n        showTooltip();\n        cancelDelayedTooltipShowing();\n      });\n\n      if (this.triggers) {\n        const triggers = parseTriggers(this.triggers);\n        this._tooltipCancelShowFn = this._renderer.listen(this._elementRef.nativeElement, triggers[0].close, () => {\n          timer.unsubscribe();\n          cancelDelayedTooltipShowing();\n        });\n      }\n    } else {\n      showTooltip();\n    }\n  }\n\n  /**\n   * Closes an element’s tooltip. This is considered a “manual” triggering of\n   * the tooltip.\n   */\n  hide(): void {\n    if (this._delayTimeoutId) {\n      clearTimeout(this._delayTimeoutId);\n      this._delayTimeoutId = undefined;\n    }\n\n    if (!this._tooltip.isShown) {\n      return;\n    }\n\n    this._tooltip.instance.classMap.in = false;\n    setTimeout(() => {\n      this._tooltip.hide();\n    }, this._fadeDuration);\n  }\n\n  ngOnDestroy(): void {\n    this._tooltip.dispose();\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[tooltip], [tooltipHtml]',\n  exportAs: 'bs-tooltip'\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ViewContainerRef, },\n{type: Renderer2, },\n{type: ElementRef, },\n{type: ComponentLoaderFactory, },\n{type: TooltipConfig, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'tooltip': [{ type: Input },],\n'tooltipChange': [{ type: Output },],\n'placement': [{ type: Input },],\n'triggers': [{ type: Input },],\n'container': [{ type: Input },],\n'isOpen': [{ type: Input },],\n'isDisabled': [{ type: Input },],\n'containerClass': [{ type: Input },],\n'delay': [{ type: Input },],\n'onShown': [{ type: Output },],\n'onHidden': [{ type: Output },],\n'htmlContent': [{ type: Input, args: ['tooltipHtml', ] },],\n'_placement': [{ type: Input, args: ['tooltipPlacement', ] },],\n'_isOpen': [{ type: Input, args: ['tooltipIsOpen', ] },],\n'_enable': [{ type: Input, args: ['tooltipEnable', ] },],\n'_appendToBody': [{ type: Input, args: ['tooltipAppendToBody', ] },],\n'_animation': [{ type: Input, args: ['tooltipAnimation', ] },],\n'_popupClass': [{ type: Input, args: ['tooltipClass', ] },],\n'_tooltipContext': [{ type: Input, args: ['tooltipContext', ] },],\n'_tooltipPopupDelay': [{ type: Input, args: ['tooltipPopupDelay', ] },],\n'_fadeDuration': [{ type: Input, args: ['tooltipFadeDuration', ] },],\n'_tooltipTrigger': [{ type: Input, args: ['tooltipTrigger', ] },],\n'tooltipStateChanged': [{ type: Output },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/*tslint:disable:no-invalid-this */\nexport function OnChange(defaultValue?: any): any {\n  const sufix = 'Change';\n\n  return function OnChangeHandler(target: any, propertyKey: string): void {\n    const _key = ` __${propertyKey}Value`;\n    Object.defineProperty(target, propertyKey, {\n      get(): any {\n        return this[_key];\n      },\n      set(value: any): void {\n        const prevValue = this[_key];\n        this[_key] = value;\n        if (prevValue !== value && this[propertyKey + sufix]) {\n          this[propertyKey + sufix].emit(value);\n        }\n      }\n    });\n  };\n}\n/* tslint:enable */\n","import { CommonModule } from '@angular/common';\nimport { NgModule, ModuleWithProviders } from '@angular/core';\nimport { TooltipContainerComponent } from './tooltip-container.component';\nimport { TooltipDirective } from './tooltip.directive';\nimport { TooltipConfig } from './tooltip.config';\nimport { ComponentLoaderFactory } from '../component-loader/index';\nimport { PositioningService } from '../positioning/index';\n\n\nexport class TooltipModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: TooltipModule,\n      providers: [TooltipConfig, ComponentLoaderFactory, PositioningService]\n    };\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  imports: [CommonModule],\n  declarations: [TooltipDirective, TooltipContainerComponent],\n  exports: [TooltipDirective],\n  entryComponents: [TooltipContainerComponent]\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/* tslint:disable */\nexport const latinMap: { [key: string]: string } = {\n    'Á': 'A',\n    'Ă': 'A',\n    'Ắ': 'A',\n    'Ặ': 'A',\n    'Ằ': 'A',\n    'Ẳ': 'A',\n    'Ẵ': 'A',\n    'Ǎ': 'A',\n    'Â': 'A',\n    'Ấ': 'A',\n    'Ậ': 'A',\n    'Ầ': 'A',\n    'Ẩ': 'A',\n    'Ẫ': 'A',\n    'Ä': 'A',\n    'Ǟ': 'A',\n    'Ȧ': 'A',\n    'Ǡ': 'A',\n    'Ạ': 'A',\n    'Ȁ': 'A',\n    'À': 'A',\n    'Ả': 'A',\n    'Ȃ': 'A',\n    'Ā': 'A',\n    'Ą': 'A',\n    'Å': 'A',\n    'Ǻ': 'A',\n    'Ḁ': 'A',\n    'Ⱥ': 'A',\n    'Ã': 'A',\n    'Ꜳ': 'AA',\n    'Æ': 'AE',\n    'Ǽ': 'AE',\n    'Ǣ': 'AE',\n    'Ꜵ': 'AO',\n    'Ꜷ': 'AU',\n    'Ꜹ': 'AV',\n    'Ꜻ': 'AV',\n    'Ꜽ': 'AY',\n    'Ḃ': 'B',\n    'Ḅ': 'B',\n    'Ɓ': 'B',\n    'Ḇ': 'B',\n    'Ƀ': 'B',\n    'Ƃ': 'B',\n    'Ć': 'C',\n    'Č': 'C',\n    'Ç': 'C',\n    'Ḉ': 'C',\n    'Ĉ': 'C',\n    'Ċ': 'C',\n    'Ƈ': 'C',\n    'Ȼ': 'C',\n    'Ď': 'D',\n    'Ḑ': 'D',\n    'Ḓ': 'D',\n    'Ḋ': 'D',\n    'Ḍ': 'D',\n    'Ɗ': 'D',\n    'Ḏ': 'D',\n    'ǲ': 'D',\n    'ǅ': 'D',\n    'Đ': 'D',\n    'Ƌ': 'D',\n    'Ǳ': 'DZ',\n    'Ǆ': 'DZ',\n    'É': 'E',\n    'Ĕ': 'E',\n    'Ě': 'E',\n    'Ȩ': 'E',\n    'Ḝ': 'E',\n    'Ê': 'E',\n    'Ế': 'E',\n    'Ệ': 'E',\n    'Ề': 'E',\n    'Ể': 'E',\n    'Ễ': 'E',\n    'Ḙ': 'E',\n    'Ë': 'E',\n    'Ė': 'E',\n    'Ẹ': 'E',\n    'Ȅ': 'E',\n    'È': 'E',\n    'Ẻ': 'E',\n    'Ȇ': 'E',\n    'Ē': 'E',\n    'Ḗ': 'E',\n    'Ḕ': 'E',\n    'Ę': 'E',\n    'Ɇ': 'E',\n    'Ẽ': 'E',\n    'Ḛ': 'E',\n    'Ꝫ': 'ET',\n    'Ḟ': 'F',\n    'Ƒ': 'F',\n    'Ǵ': 'G',\n    'Ğ': 'G',\n    'Ǧ': 'G',\n    'Ģ': 'G',\n    'Ĝ': 'G',\n    'Ġ': 'G',\n    'Ɠ': 'G',\n    'Ḡ': 'G',\n    'Ǥ': 'G',\n    'Ḫ': 'H',\n    'Ȟ': 'H',\n    'Ḩ': 'H',\n    'Ĥ': 'H',\n    'Ⱨ': 'H',\n    'Ḧ': 'H',\n    'Ḣ': 'H',\n    'Ḥ': 'H',\n    'Ħ': 'H',\n    'Í': 'I',\n    'Ĭ': 'I',\n    'Ǐ': 'I',\n    'Î': 'I',\n    'Ï': 'I',\n    'Ḯ': 'I',\n    'İ': 'I',\n    'Ị': 'I',\n    'Ȉ': 'I',\n    'Ì': 'I',\n    'Ỉ': 'I',\n    'Ȋ': 'I',\n    'Ī': 'I',\n    'Į': 'I',\n    'Ɨ': 'I',\n    'Ĩ': 'I',\n    'Ḭ': 'I',\n    'Ꝺ': 'D',\n    'Ꝼ': 'F',\n    'Ᵹ': 'G',\n    'Ꞃ': 'R',\n    'Ꞅ': 'S',\n    'Ꞇ': 'T',\n    'Ꝭ': 'IS',\n    'Ĵ': 'J',\n    'Ɉ': 'J',\n    'Ḱ': 'K',\n    'Ǩ': 'K',\n    'Ķ': 'K',\n    'Ⱪ': 'K',\n    'Ꝃ': 'K',\n    'Ḳ': 'K',\n    'Ƙ': 'K',\n    'Ḵ': 'K',\n    'Ꝁ': 'K',\n    'Ꝅ': 'K',\n    'Ĺ': 'L',\n    'Ƚ': 'L',\n    'Ľ': 'L',\n    'Ļ': 'L',\n    'Ḽ': 'L',\n    'Ḷ': 'L',\n    'Ḹ': 'L',\n    'Ⱡ': 'L',\n    'Ꝉ': 'L',\n    'Ḻ': 'L',\n    'Ŀ': 'L',\n    'Ɫ': 'L',\n    'ǈ': 'L',\n    'Ł': 'L',\n    'Ǉ': 'LJ',\n    'Ḿ': 'M',\n    'Ṁ': 'M',\n    'Ṃ': 'M',\n    'Ɱ': 'M',\n    'Ń': 'N',\n    'Ň': 'N',\n    'Ņ': 'N',\n    'Ṋ': 'N',\n    'Ṅ': 'N',\n    'Ṇ': 'N',\n    'Ǹ': 'N',\n    'Ɲ': 'N',\n    'Ṉ': 'N',\n    'Ƞ': 'N',\n    'ǋ': 'N',\n    'Ñ': 'N',\n    'Ǌ': 'NJ',\n    'Ó': 'O',\n    'Ŏ': 'O',\n    'Ǒ': 'O',\n    'Ô': 'O',\n    'Ố': 'O',\n    'Ộ': 'O',\n    'Ồ': 'O',\n    'Ổ': 'O',\n    'Ỗ': 'O',\n    'Ö': 'O',\n    'Ȫ': 'O',\n    'Ȯ': 'O',\n    'Ȱ': 'O',\n    'Ọ': 'O',\n    'Ő': 'O',\n    'Ȍ': 'O',\n    'Ò': 'O',\n    'Ỏ': 'O',\n    'Ơ': 'O',\n    'Ớ': 'O',\n    'Ợ': 'O',\n    'Ờ': 'O',\n    'Ở': 'O',\n    'Ỡ': 'O',\n    'Ȏ': 'O',\n    'Ꝋ': 'O',\n    'Ꝍ': 'O',\n    'Ō': 'O',\n    'Ṓ': 'O',\n    'Ṑ': 'O',\n    'Ɵ': 'O',\n    'Ǫ': 'O',\n    'Ǭ': 'O',\n    'Ø': 'O',\n    'Ǿ': 'O',\n    'Õ': 'O',\n    'Ṍ': 'O',\n    'Ṏ': 'O',\n    'Ȭ': 'O',\n    'Ƣ': 'OI',\n    'Ꝏ': 'OO',\n    'Ɛ': 'E',\n    'Ɔ': 'O',\n    'Ȣ': 'OU',\n    'Ṕ': 'P',\n    'Ṗ': 'P',\n    'Ꝓ': 'P',\n    'Ƥ': 'P',\n    'Ꝕ': 'P',\n    'Ᵽ': 'P',\n    'Ꝑ': 'P',\n    'Ꝙ': 'Q',\n    'Ꝗ': 'Q',\n    'Ŕ': 'R',\n    'Ř': 'R',\n    'Ŗ': 'R',\n    'Ṙ': 'R',\n    'Ṛ': 'R',\n    'Ṝ': 'R',\n    'Ȑ': 'R',\n    'Ȓ': 'R',\n    'Ṟ': 'R',\n    'Ɍ': 'R',\n    'Ɽ': 'R',\n    'Ꜿ': 'C',\n    'Ǝ': 'E',\n    'Ś': 'S',\n    'Ṥ': 'S',\n    'Š': 'S',\n    'Ṧ': 'S',\n    'Ş': 'S',\n    'Ŝ': 'S',\n    'Ș': 'S',\n    'Ṡ': 'S',\n    'Ṣ': 'S',\n    'Ṩ': 'S',\n    'Ť': 'T',\n    'Ţ': 'T',\n    'Ṱ': 'T',\n    'Ț': 'T',\n    'Ⱦ': 'T',\n    'Ṫ': 'T',\n    'Ṭ': 'T',\n    'Ƭ': 'T',\n    'Ṯ': 'T',\n    'Ʈ': 'T',\n    'Ŧ': 'T',\n    'Ɐ': 'A',\n    'Ꞁ': 'L',\n    'Ɯ': 'M',\n    'Ʌ': 'V',\n    'Ꜩ': 'TZ',\n    'Ú': 'U',\n    'Ŭ': 'U',\n    'Ǔ': 'U',\n    'Û': 'U',\n    'Ṷ': 'U',\n    'Ü': 'U',\n    'Ǘ': 'U',\n    'Ǚ': 'U',\n    'Ǜ': 'U',\n    'Ǖ': 'U',\n    'Ṳ': 'U',\n    'Ụ': 'U',\n    'Ű': 'U',\n    'Ȕ': 'U',\n    'Ù': 'U',\n    'Ủ': 'U',\n    'Ư': 'U',\n    'Ứ': 'U',\n    'Ự': 'U',\n    'Ừ': 'U',\n    'Ử': 'U',\n    'Ữ': 'U',\n    'Ȗ': 'U',\n    'Ū': 'U',\n    'Ṻ': 'U',\n    'Ų': 'U',\n    'Ů': 'U',\n    'Ũ': 'U',\n    'Ṹ': 'U',\n    'Ṵ': 'U',\n    'Ꝟ': 'V',\n    'Ṿ': 'V',\n    'Ʋ': 'V',\n    'Ṽ': 'V',\n    'Ꝡ': 'VY',\n    'Ẃ': 'W',\n    'Ŵ': 'W',\n    'Ẅ': 'W',\n    'Ẇ': 'W',\n    'Ẉ': 'W',\n    'Ẁ': 'W',\n    'Ⱳ': 'W',\n    'Ẍ': 'X',\n    'Ẋ': 'X',\n    'Ý': 'Y',\n    'Ŷ': 'Y',\n    'Ÿ': 'Y',\n    'Ẏ': 'Y',\n    'Ỵ': 'Y',\n    'Ỳ': 'Y',\n    'Ƴ': 'Y',\n    'Ỷ': 'Y',\n    'Ỿ': 'Y',\n    'Ȳ': 'Y',\n    'Ɏ': 'Y',\n    'Ỹ': 'Y',\n    'Ź': 'Z',\n    'Ž': 'Z',\n    'Ẑ': 'Z',\n    'Ⱬ': 'Z',\n    'Ż': 'Z',\n    'Ẓ': 'Z',\n    'Ȥ': 'Z',\n    'Ẕ': 'Z',\n    'Ƶ': 'Z',\n    'Ĳ': 'IJ',\n    'Œ': 'OE',\n    'ᴀ': 'A',\n    'ᴁ': 'AE',\n    'ʙ': 'B',\n    'ᴃ': 'B',\n    'ᴄ': 'C',\n    'ᴅ': 'D',\n    'ᴇ': 'E',\n    'ꜰ': 'F',\n    'ɢ': 'G',\n    'ʛ': 'G',\n    'ʜ': 'H',\n    'ɪ': 'I',\n    'ʁ': 'R',\n    'ᴊ': 'J',\n    'ᴋ': 'K',\n    'ʟ': 'L',\n    'ᴌ': 'L',\n    'ᴍ': 'M',\n    'ɴ': 'N',\n    'ᴏ': 'O',\n    'ɶ': 'OE',\n    'ᴐ': 'O',\n    'ᴕ': 'OU',\n    'ᴘ': 'P',\n    'ʀ': 'R',\n    'ᴎ': 'N',\n    'ᴙ': 'R',\n    'ꜱ': 'S',\n    'ᴛ': 'T',\n    'ⱻ': 'E',\n    'ᴚ': 'R',\n    'ᴜ': 'U',\n    'ᴠ': 'V',\n    'ᴡ': 'W',\n    'ʏ': 'Y',\n    'ᴢ': 'Z',\n    'á': 'a',\n    'ă': 'a',\n    'ắ': 'a',\n    'ặ': 'a',\n    'ằ': 'a',\n    'ẳ': 'a',\n    'ẵ': 'a',\n    'ǎ': 'a',\n    'â': 'a',\n    'ấ': 'a',\n    'ậ': 'a',\n    'ầ': 'a',\n    'ẩ': 'a',\n    'ẫ': 'a',\n    'ä': 'a',\n    'ǟ': 'a',\n    'ȧ': 'a',\n    'ǡ': 'a',\n    'ạ': 'a',\n    'ȁ': 'a',\n    'à': 'a',\n    'ả': 'a',\n    'ȃ': 'a',\n    'ā': 'a',\n    'ą': 'a',\n    'ᶏ': 'a',\n    'ẚ': 'a',\n    'å': 'a',\n    'ǻ': 'a',\n    'ḁ': 'a',\n    'ⱥ': 'a',\n    'ã': 'a',\n    'ꜳ': 'aa',\n    'æ': 'ae',\n    'ǽ': 'ae',\n    'ǣ': 'ae',\n    'ꜵ': 'ao',\n    'ꜷ': 'au',\n    'ꜹ': 'av',\n    'ꜻ': 'av',\n    'ꜽ': 'ay',\n    'ḃ': 'b',\n    'ḅ': 'b',\n    'ɓ': 'b',\n    'ḇ': 'b',\n    'ᵬ': 'b',\n    'ᶀ': 'b',\n    'ƀ': 'b',\n    'ƃ': 'b',\n    'ɵ': 'o',\n    'ć': 'c',\n    'č': 'c',\n    'ç': 'c',\n    'ḉ': 'c',\n    'ĉ': 'c',\n    'ɕ': 'c',\n    'ċ': 'c',\n    'ƈ': 'c',\n    'ȼ': 'c',\n    'ď': 'd',\n    'ḑ': 'd',\n    'ḓ': 'd',\n    'ȡ': 'd',\n    'ḋ': 'd',\n    'ḍ': 'd',\n    'ɗ': 'd',\n    'ᶑ': 'd',\n    'ḏ': 'd',\n    'ᵭ': 'd',\n    'ᶁ': 'd',\n    'đ': 'd',\n    'ɖ': 'd',\n    'ƌ': 'd',\n    'ı': 'i',\n    'ȷ': 'j',\n    'ɟ': 'j',\n    'ʄ': 'j',\n    'ǳ': 'dz',\n    'ǆ': 'dz',\n    'é': 'e',\n    'ĕ': 'e',\n    'ě': 'e',\n    'ȩ': 'e',\n    'ḝ': 'e',\n    'ê': 'e',\n    'ế': 'e',\n    'ệ': 'e',\n    'ề': 'e',\n    'ể': 'e',\n    'ễ': 'e',\n    'ḙ': 'e',\n    'ë': 'e',\n    'ė': 'e',\n    'ẹ': 'e',\n    'ȅ': 'e',\n    'è': 'e',\n    'ẻ': 'e',\n    'ȇ': 'e',\n    'ē': 'e',\n    'ḗ': 'e',\n    'ḕ': 'e',\n    'ⱸ': 'e',\n    'ę': 'e',\n    'ᶒ': 'e',\n    'ɇ': 'e',\n    'ẽ': 'e',\n    'ḛ': 'e',\n    'ꝫ': 'et',\n    'ḟ': 'f',\n    'ƒ': 'f',\n    'ᵮ': 'f',\n    'ᶂ': 'f',\n    'ǵ': 'g',\n    'ğ': 'g',\n    'ǧ': 'g',\n    'ģ': 'g',\n    'ĝ': 'g',\n    'ġ': 'g',\n    'ɠ': 'g',\n    'ḡ': 'g',\n    'ᶃ': 'g',\n    'ǥ': 'g',\n    'ḫ': 'h',\n    'ȟ': 'h',\n    'ḩ': 'h',\n    'ĥ': 'h',\n    'ⱨ': 'h',\n    'ḧ': 'h',\n    'ḣ': 'h',\n    'ḥ': 'h',\n    'ɦ': 'h',\n    'ẖ': 'h',\n    'ħ': 'h',\n    'ƕ': 'hv',\n    'í': 'i',\n    'ĭ': 'i',\n    'ǐ': 'i',\n    'î': 'i',\n    'ï': 'i',\n    'ḯ': 'i',\n    'ị': 'i',\n    'ȉ': 'i',\n    'ì': 'i',\n    'ỉ': 'i',\n    'ȋ': 'i',\n    'ī': 'i',\n    'į': 'i',\n    'ᶖ': 'i',\n    'ɨ': 'i',\n    'ĩ': 'i',\n    'ḭ': 'i',\n    'ꝺ': 'd',\n    'ꝼ': 'f',\n    'ᵹ': 'g',\n    'ꞃ': 'r',\n    'ꞅ': 's',\n    'ꞇ': 't',\n    'ꝭ': 'is',\n    'ǰ': 'j',\n    'ĵ': 'j',\n    'ʝ': 'j',\n    'ɉ': 'j',\n    'ḱ': 'k',\n    'ǩ': 'k',\n    'ķ': 'k',\n    'ⱪ': 'k',\n    'ꝃ': 'k',\n    'ḳ': 'k',\n    'ƙ': 'k',\n    'ḵ': 'k',\n    'ᶄ': 'k',\n    'ꝁ': 'k',\n    'ꝅ': 'k',\n    'ĺ': 'l',\n    'ƚ': 'l',\n    'ɬ': 'l',\n    'ľ': 'l',\n    'ļ': 'l',\n    'ḽ': 'l',\n    'ȴ': 'l',\n    'ḷ': 'l',\n    'ḹ': 'l',\n    'ⱡ': 'l',\n    'ꝉ': 'l',\n    'ḻ': 'l',\n    'ŀ': 'l',\n    'ɫ': 'l',\n    'ᶅ': 'l',\n    'ɭ': 'l',\n    'ł': 'l',\n    'ǉ': 'lj',\n    'ſ': 's',\n    'ẜ': 's',\n    'ẛ': 's',\n    'ẝ': 's',\n    'ḿ': 'm',\n    'ṁ': 'm',\n    'ṃ': 'm',\n    'ɱ': 'm',\n    'ᵯ': 'm',\n    'ᶆ': 'm',\n    'ń': 'n',\n    'ň': 'n',\n    'ņ': 'n',\n    'ṋ': 'n',\n    'ȵ': 'n',\n    'ṅ': 'n',\n    'ṇ': 'n',\n    'ǹ': 'n',\n    'ɲ': 'n',\n    'ṉ': 'n',\n    'ƞ': 'n',\n    'ᵰ': 'n',\n    'ᶇ': 'n',\n    'ɳ': 'n',\n    'ñ': 'n',\n    'ǌ': 'nj',\n    'ó': 'o',\n    'ŏ': 'o',\n    'ǒ': 'o',\n    'ô': 'o',\n    'ố': 'o',\n    'ộ': 'o',\n    'ồ': 'o',\n    'ổ': 'o',\n    'ỗ': 'o',\n    'ö': 'o',\n    'ȫ': 'o',\n    'ȯ': 'o',\n    'ȱ': 'o',\n    'ọ': 'o',\n    'ő': 'o',\n    'ȍ': 'o',\n    'ò': 'o',\n    'ỏ': 'o',\n    'ơ': 'o',\n    'ớ': 'o',\n    'ợ': 'o',\n    'ờ': 'o',\n    'ở': 'o',\n    'ỡ': 'o',\n    'ȏ': 'o',\n    'ꝋ': 'o',\n    'ꝍ': 'o',\n    'ⱺ': 'o',\n    'ō': 'o',\n    'ṓ': 'o',\n    'ṑ': 'o',\n    'ǫ': 'o',\n    'ǭ': 'o',\n    'ø': 'o',\n    'ǿ': 'o',\n    'õ': 'o',\n    'ṍ': 'o',\n    'ṏ': 'o',\n    'ȭ': 'o',\n    'ƣ': 'oi',\n    'ꝏ': 'oo',\n    'ɛ': 'e',\n    'ᶓ': 'e',\n    'ɔ': 'o',\n    'ᶗ': 'o',\n    'ȣ': 'ou',\n    'ṕ': 'p',\n    'ṗ': 'p',\n    'ꝓ': 'p',\n    'ƥ': 'p',\n    'ᵱ': 'p',\n    'ᶈ': 'p',\n    'ꝕ': 'p',\n    'ᵽ': 'p',\n    'ꝑ': 'p',\n    'ꝙ': 'q',\n    'ʠ': 'q',\n    'ɋ': 'q',\n    'ꝗ': 'q',\n    'ŕ': 'r',\n    'ř': 'r',\n    'ŗ': 'r',\n    'ṙ': 'r',\n    'ṛ': 'r',\n    'ṝ': 'r',\n    'ȑ': 'r',\n    'ɾ': 'r',\n    'ᵳ': 'r',\n    'ȓ': 'r',\n    'ṟ': 'r',\n    'ɼ': 'r',\n    'ᵲ': 'r',\n    'ᶉ': 'r',\n    'ɍ': 'r',\n    'ɽ': 'r',\n    'ↄ': 'c',\n    'ꜿ': 'c',\n    'ɘ': 'e',\n    'ɿ': 'r',\n    'ś': 's',\n    'ṥ': 's',\n    'š': 's',\n    'ṧ': 's',\n    'ş': 's',\n    'ŝ': 's',\n    'ș': 's',\n    'ṡ': 's',\n    'ṣ': 's',\n    'ṩ': 's',\n    'ʂ': 's',\n    'ᵴ': 's',\n    'ᶊ': 's',\n    'ȿ': 's',\n    'ɡ': 'g',\n    'ᴑ': 'o',\n    'ᴓ': 'o',\n    'ᴝ': 'u',\n    'ť': 't',\n    'ţ': 't',\n    'ṱ': 't',\n    'ț': 't',\n    'ȶ': 't',\n    'ẗ': 't',\n    'ⱦ': 't',\n    'ṫ': 't',\n    'ṭ': 't',\n    'ƭ': 't',\n    'ṯ': 't',\n    'ᵵ': 't',\n    'ƫ': 't',\n    'ʈ': 't',\n    'ŧ': 't',\n    'ᵺ': 'th',\n    'ɐ': 'a',\n    'ᴂ': 'ae',\n    'ǝ': 'e',\n    'ᵷ': 'g',\n    'ɥ': 'h',\n    'ʮ': 'h',\n    'ʯ': 'h',\n    'ᴉ': 'i',\n    'ʞ': 'k',\n    'ꞁ': 'l',\n    'ɯ': 'm',\n    'ɰ': 'm',\n    'ᴔ': 'oe',\n    'ɹ': 'r',\n    'ɻ': 'r',\n    'ɺ': 'r',\n    'ⱹ': 'r',\n    'ʇ': 't',\n    'ʌ': 'v',\n    'ʍ': 'w',\n    'ʎ': 'y',\n    'ꜩ': 'tz',\n    'ú': 'u',\n    'ŭ': 'u',\n    'ǔ': 'u',\n    'û': 'u',\n    'ṷ': 'u',\n    'ü': 'u',\n    'ǘ': 'u',\n    'ǚ': 'u',\n    'ǜ': 'u',\n    'ǖ': 'u',\n    'ṳ': 'u',\n    'ụ': 'u',\n    'ű': 'u',\n    'ȕ': 'u',\n    'ù': 'u',\n    'ủ': 'u',\n    'ư': 'u',\n    'ứ': 'u',\n    'ự': 'u',\n    'ừ': 'u',\n    'ử': 'u',\n    'ữ': 'u',\n    'ȗ': 'u',\n    'ū': 'u',\n    'ṻ': 'u',\n    'ų': 'u',\n    'ᶙ': 'u',\n    'ů': 'u',\n    'ũ': 'u',\n    'ṹ': 'u',\n    'ṵ': 'u',\n    'ᵫ': 'ue',\n    'ꝸ': 'um',\n    'ⱴ': 'v',\n    'ꝟ': 'v',\n    'ṿ': 'v',\n    'ʋ': 'v',\n    'ᶌ': 'v',\n    'ⱱ': 'v',\n    'ṽ': 'v',\n    'ꝡ': 'vy',\n    'ẃ': 'w',\n    'ŵ': 'w',\n    'ẅ': 'w',\n    'ẇ': 'w',\n    'ẉ': 'w',\n    'ẁ': 'w',\n    'ⱳ': 'w',\n    'ẘ': 'w',\n    'ẍ': 'x',\n    'ẋ': 'x',\n    'ᶍ': 'x',\n    'ý': 'y',\n    'ŷ': 'y',\n    'ÿ': 'y',\n    'ẏ': 'y',\n    'ỵ': 'y',\n    'ỳ': 'y',\n    'ƴ': 'y',\n    'ỷ': 'y',\n    'ỿ': 'y',\n    'ȳ': 'y',\n    'ẙ': 'y',\n    'ɏ': 'y',\n    'ỹ': 'y',\n    'ź': 'z',\n    'ž': 'z',\n    'ẑ': 'z',\n    'ʑ': 'z',\n    'ⱬ': 'z',\n    'ż': 'z',\n    'ẓ': 'z',\n    'ȥ': 'z',\n    'ẕ': 'z',\n    'ᵶ': 'z',\n    'ᶎ': 'z',\n    'ʐ': 'z',\n    'ƶ': 'z',\n    'ɀ': 'z',\n    'ﬀ': 'ff',\n    'ﬃ': 'ffi',\n    'ﬄ': 'ffl',\n    'ﬁ': 'fi',\n    'ﬂ': 'fl',\n    'ĳ': 'ij',\n    'œ': 'oe',\n    'ﬆ': 'st',\n    'ₐ': 'a',\n    'ₑ': 'e',\n    'ᵢ': 'i',\n    'ⱼ': 'j',\n    'ₒ': 'o',\n    'ᵣ': 'r',\n    'ᵤ': 'u',\n    'ᵥ': 'v',\n    'ₓ': 'x'\n};\n","export class TypeaheadMatch {\n  readonly value: string;\n  readonly item: any;\n  protected header: boolean;\n\n  constructor(item: any, value: string = item, header = false) {\n    this.item = item;\n    this.value = value;\n    this.header = header;\n  }\n\n  isHeader(): boolean {\n    return this.header;\n  }\n\n  toString(): string {\n    return this.value;\n  }\n}\n","import { latinMap } from './latin-map';\n\nexport function latinize(str: string): string {\n  if (!str) {\n    return '';\n  }\n\n  return str.replace(/[^A-Za-z0-9\\[\\] ]/g, function (a: string): string {\n    return latinMap[a] || a;\n  });\n}\n\nexport function escapeRegexp(queryToEscape: string): string {\n  // Regex: capture the whole query string and replace it with the string\n  // that will be used to match the results, for example if the capture is\n  // 'a' the result will be \\a\n  return queryToEscape.replace(/([.?*+^$[\\]\\\\(){}|-])/g, '\\\\$1');\n}\n\n/* tslint:disable */\nexport function tokenize(str: string,\n                         wordRegexDelimiters = ' ',\n                         phraseRegexDelimiters = ''): Array<string> {\n  /* tslint:enable */\n  const regexStr = `(?:[${phraseRegexDelimiters}])([^${phraseRegexDelimiters}]+)` +\n    `(?:[${phraseRegexDelimiters}])|([^${wordRegexDelimiters}]+)`;\n  const preTokenized: string[] = str.split(new RegExp(regexStr, 'g'));\n  const result: string[] = [];\n  const preTokenizedLength: number = preTokenized.length;\n  let token: string;\n  const replacePhraseDelimiters = new RegExp(`[${phraseRegexDelimiters}]+`, 'g');\n\n  for (let i = 0; i < preTokenizedLength; i += 1) {\n    token = preTokenized[i];\n    if (token && token.length && token !== wordRegexDelimiters) {\n      result.push(token.replace(replacePhraseDelimiters, ''));\n    }\n  }\n\n  return result;\n}\n\nexport function getValueFromObject(object: any, option: string): string {\n  if (!option || typeof object !== 'object') {\n    return object.toString();\n  }\n\n  if (option.endsWith('()')) {\n    const functionName = option.slice(0, option.length - 2);\n\n    return object[functionName]().toString();\n  }\n\n  const properties: string = option\n    .replace(/\\[(\\w+)\\]/g, '.$1')\n    .replace(/^\\./, '');\n  const propertiesArray: string[] = properties.split('.');\n\n  for (const property of propertiesArray) {\n    if (property in object) {\n      // tslint:disable-next-line\n      object = object[property];\n    }\n  }\n  if (!object) {return ''; }\n\n  return object.toString();\n}\n","import { window } from './facade/browser';\n\nexport class Utils {\n  static reflow(element: any): void {\n    ((bs: any): void => bs)(element.offsetHeight);\n  }\n\n  // source: https://github.com/jquery/jquery/blob/master/src/css/var/getStyles.js\n  static getStyles(elem: any): any {\n    // Support: IE <=11 only, Firefox <=30 (#15098, #14150)\n    // IE throws on elements created in popups\n    // FF meanwhile throws on frame elements through \"defaultView.getComputedStyle\"\n    let view = elem.ownerDocument.defaultView;\n\n    if (!view || !view.opener) {\n      view = window;\n    }\n\n    return view.getComputedStyle(elem);\n  }\n}\n","import { Component, ElementRef, HostListener, QueryList, TemplateRef, ViewChild, ViewChildren, Renderer2 } from '@angular/core';\nimport { isBs3 } from '../utils/theme-provider';\nimport { TypeaheadMatch } from './typeahead-match.class';\nimport { latinize } from './typeahead-utils';\nimport { TypeaheadDirective } from './typeahead.directive';\nimport { Utils } from '../utils/utils.class';\n\n\nexport class TypeaheadContainerComponent {\n  parent: TypeaheadDirective;\n  query: any;\n  element: ElementRef;\n  isFocused = false;\n  top: string;\n  left: string;\n  display: string;\n  placement: string;\n  dropup: boolean;\n  guiHeight: string;\n  needScrollbar: boolean;\n\n  get isBs4(): boolean {\n    return !isBs3();\n  }\n\n  protected _active: TypeaheadMatch;\n  protected _matches: TypeaheadMatch[] = [];\n\n  \n  private ulElement: ElementRef;\n\n  \n  private liElements: QueryList<ElementRef>;\n\n  constructor(element: ElementRef, private renderer: Renderer2) {\n    this.element = element;\n  }\n\n  get active(): TypeaheadMatch {\n    return this._active;\n  }\n\n  get matches(): TypeaheadMatch[] {\n    return this._matches;\n  }\n\n  set matches(value: TypeaheadMatch[]) {\n    this._matches = value;\n    this.needScrollbar = this.typeaheadScrollable && this.typeaheadOptionsInScrollableView < this.matches.length;\n    if (this.typeaheadScrollable) {\n      setTimeout(() => {\n        this.setScrollableMode();\n      });\n    }\n\n    if (this._matches.length > 0) {\n      this._active = this._matches[0];\n      if (this._active.isHeader()) {\n        this.nextActiveMatch();\n      }\n    }\n  }\n\n  get optionsListTemplate(): TemplateRef<any> {\n    return this.parent ? this.parent.optionsListTemplate : undefined;\n  }\n\n  get typeaheadScrollable(): boolean {\n    return this.parent ? this.parent.typeaheadScrollable : false;\n  }\n\n\n  get typeaheadOptionsInScrollableView(): number {\n    return this.parent ? this.parent.typeaheadOptionsInScrollableView : 5;\n  }\n\n  get itemTemplate(): TemplateRef<any> {\n    return this.parent ? this.parent.typeaheadItemTemplate : undefined;\n  }\n\n  selectActiveMatch(): void {\n    this.selectMatch(this._active);\n  }\n\n  prevActiveMatch(): void {\n    const index = this.matches.indexOf(this._active);\n    this._active = this.matches[\n      index - 1 < 0 ? this.matches.length - 1 : index - 1\n      ];\n    if (this._active.isHeader()) {\n      this.prevActiveMatch();\n    }\n    if (this.typeaheadScrollable) {\n      this.scrollPrevious(index);\n    }\n  }\n\n  nextActiveMatch(): void {\n    const index = this.matches.indexOf(this._active);\n    this._active = this.matches[\n      index + 1 > this.matches.length - 1 ? 0 : index + 1\n      ];\n    if (this._active.isHeader()) {\n      this.nextActiveMatch();\n    }\n    if (this.typeaheadScrollable) {\n      this.scrollNext(index);\n    }\n  }\n\n  selectActive(value: TypeaheadMatch): void {\n    this.isFocused = true;\n    this._active = value;\n  }\n\n  hightlight(match: TypeaheadMatch, query: any): string {\n    let itemStr: string = match.value;\n    let itemStrHelper: string = (this.parent && this.parent.typeaheadLatinize\n      ? latinize(itemStr)\n      : itemStr).toLowerCase();\n    let startIdx: number;\n    let tokenLen: number;\n    // Replaces the capture string with the same string inside of a \"strong\" tag\n    if (typeof query === 'object') {\n      const queryLen: number = query.length;\n      for (let i = 0; i < queryLen; i += 1) {\n        // query[i] is already latinized and lower case\n        startIdx = itemStrHelper.indexOf(query[i]);\n        tokenLen = query[i].length;\n        if (startIdx >= 0 && tokenLen > 0) {\n          itemStr =\n            `${itemStr.substring(0, startIdx)}<strong>${itemStr.substring(startIdx, startIdx + tokenLen)}</strong>` +\n            `${itemStr.substring(startIdx + tokenLen)}`;\n          itemStrHelper =\n            `${itemStrHelper.substring(0, startIdx)}        ${' '.repeat(tokenLen)}         ` +\n            `${itemStrHelper.substring(startIdx + tokenLen)}`;\n        }\n      }\n    } else if (query) {\n      // query is already latinized and lower case\n      startIdx = itemStrHelper.indexOf(query);\n      tokenLen = query.length;\n      if (startIdx >= 0 && tokenLen > 0) {\n        itemStr =\n          `${itemStr.substring(0, startIdx)}<strong>${itemStr.substring(startIdx, startIdx + tokenLen)}</strong>` +\n          `${itemStr.substring(startIdx + tokenLen)}`;\n      }\n    }\n\n    return itemStr;\n  }\n\n  \n  \n  focusLost(): void {\n    this.isFocused = false;\n  }\n\n  isActive(value: TypeaheadMatch): boolean {\n    return this._active === value;\n  }\n\n  selectMatch(value: TypeaheadMatch, e: Event = void 0): boolean {\n    if (e) {\n      e.stopPropagation();\n      e.preventDefault();\n    }\n    this.parent.changeModel(value);\n    setTimeout(() => this.parent.typeaheadOnSelect.emit(value), 0);\n\n    return false;\n  }\n\n  setScrollableMode(): void {\n    if (!this.ulElement) {\n      this.ulElement = this.element;\n    }\n    if (this.liElements.first) {\n      const ulStyles = Utils.getStyles(this.ulElement.nativeElement);\n      const liStyles = Utils.getStyles(this.liElements.first.nativeElement);\n      const ulPaddingBottom = parseFloat((ulStyles['padding-bottom'] ? ulStyles['padding-bottom'] : '').replace('px', ''));\n      const ulPaddingTop = parseFloat((ulStyles['padding-top'] ? ulStyles['padding-top'] : '0').replace('px', ''));\n      const optionHeight = parseFloat((liStyles['height'] ? liStyles['height'] : '0').replace('px', ''));\n      const height = this.typeaheadOptionsInScrollableView * optionHeight;\n      this.guiHeight = (height + ulPaddingTop + ulPaddingBottom) + 'px';\n    }\n    this.renderer.setStyle(this.element.nativeElement, 'visibility', 'visible');\n  }\n\n  scrollPrevious(index: number): void {\n    if (index === 0) {\n      this.scrollToBottom();\n      return;\n    }\n    if (this.liElements) {\n      const liElement = this.liElements.toArray()[index - 1];\n      if (liElement && !this.isScrolledIntoView(liElement.nativeElement)) {\n        this.ulElement.nativeElement.scrollTop = liElement.nativeElement.offsetTop;\n      }\n    }\n  }\n\n  scrollNext(index: number): void {\n    if (index + 1 > this.matches.length - 1) {\n      this.scrollToTop();\n      return;\n    }\n    if (this.liElements) {\n      const liElement = this.liElements.toArray()[index + 1];\n      if (liElement && !this.isScrolledIntoView(liElement.nativeElement)) {\n        this.ulElement.nativeElement.scrollTop =\n          liElement.nativeElement.offsetTop -\n          this.ulElement.nativeElement.offsetHeight +\n          liElement.nativeElement.offsetHeight;\n      }\n    }\n  }\n\n\n  private isScrolledIntoView = function (elem: HTMLElement) {\n    const containerViewTop = this.ulElement.nativeElement.scrollTop;\n    const containerViewBottom = containerViewTop + this.ulElement.nativeElement.offsetHeight;\n    const elemTop = elem.offsetTop;\n    const elemBottom = elemTop + elem.offsetHeight;\n\n    return ((elemBottom <= containerViewBottom) && (elemTop >= containerViewTop));\n  }\n\n  private scrollToBottom(): void {\n    this.ulElement.nativeElement.scrollTop = this.ulElement.nativeElement.scrollHeight;\n  }\n\n  private scrollToTop(): void {\n    this.ulElement.nativeElement.scrollTop = 0;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'typeahead-container',\n  // tslint:disable-next-line\n  template: \"<!-- inject options list template --> <ng-template [ngTemplateOutlet]=\\\"optionsListTemplate || (isBs4 ? bs4Template : bs3Template)\\\" [ngTemplateOutletContext]=\\\"{matches:matches, itemTemplate:itemTemplate, query:query}\\\"></ng-template> <!-- default options item template --> <ng-template #bsItemTemplate let-match=\\\"match\\\" let-query=\\\"query\\\"><span [innerHtml]=\\\"hightlight(match, query)\\\"></span> </ng-template> <!-- Bootstrap 3 options list template --> <ng-template #bs3Template> <ul class=\\\"dropdown-menu\\\" #ulElement [style.overflow-y]=\\\"needScrollbar ? 'scroll': 'auto'\\\" [style.height]=\\\"needScrollbar ? guiHeight: 'auto'\\\"> <ng-template ngFor let-match let-i=\\\"index\\\" [ngForOf]=\\\"matches\\\"> <li #liElements *ngIf=\\\"match.isHeader()\\\" class=\\\"dropdown-header\\\">{{ match }}</li> <li #liElements *ngIf=\\\"!match.isHeader()\\\" [class.active]=\\\"isActive(match)\\\" (mouseenter)=\\\"selectActive(match)\\\"> <a href=\\\"#\\\" (click)=\\\"selectMatch(match, $event)\\\" tabindex=\\\"-1\\\"> <ng-template [ngTemplateOutlet]=\\\"itemTemplate || bsItemTemplate\\\" [ngTemplateOutletContext]=\\\"{item:match.item, index:i, match:match, query:query}\\\"></ng-template> </a> </li> </ng-template> </ul> </ng-template> <!-- Bootstrap 4 options list template --> <ng-template #bs4Template> <ng-template ngFor let-match let-i=\\\"index\\\" [ngForOf]=\\\"matches\\\"> <h6 *ngIf=\\\"match.isHeader()\\\" class=\\\"dropdown-header\\\">{{ match }}</h6> <ng-template [ngIf]=\\\"!match.isHeader()\\\"> <button #liElements class=\\\"dropdown-item\\\" (click)=\\\"selectMatch(match, $event)\\\" (mouseenter)=\\\"selectActive(match)\\\" [class.active]=\\\"isActive(match)\\\"> <ng-template [ngTemplateOutlet]=\\\"itemTemplate || bsItemTemplate\\\" [ngTemplateOutletContext]=\\\"{item:match.item, index:i, match:match, query:query}\\\"></ng-template> </button> </ng-template> </ng-template> </ng-template> \",\n  host: {\n    class: 'dropdown open',\n    '[class.dropdown-menu]': 'isBs4',\n    '[style.overflow-y]' : `isBs4 && needScrollbar ? 'scroll': 'visible'`,\n    '[style.height]': `isBs4 && needScrollbar ? guiHeight: 'auto'`,\n    '[style.visibility]': `typeaheadScrollable ? 'hidden' : 'visible'`,\n    '[class.dropup]': 'dropup',\n    style: 'position: absolute;display: block;'\n  }\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Renderer2, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'ulElement': [{ type: ViewChild, args: ['ulElement', ] },],\n'liElements': [{ type: ViewChildren, args: ['liElements', ] },],\n'focusLost': [{ type: HostListener, args: ['mouseleave', ] },{ type: HostListener, args: ['blur', ] },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/* tslint:disable:max-file-line-count */\nimport {\n  ChangeDetectorRef,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  HostListener,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  Renderer2,\n  TemplateRef,\n  ViewContainerRef\n} from '@angular/core';\nimport { NgControl } from '@angular/forms';\nimport 'rxjs/add/observable/from';\nimport 'rxjs/add/operator/debounceTime';\nimport 'rxjs/add/operator/filter';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/mergeMap';\nimport 'rxjs/add/operator/toArray';\n\nimport { Observable } from 'rxjs/Observable';\nimport { Subscription } from 'rxjs/Subscription';\nimport { ComponentLoader, ComponentLoaderFactory } from '../component-loader/index';\nimport { TypeaheadContainerComponent } from './typeahead-container.component';\nimport { TypeaheadMatch } from './typeahead-match.class';\nimport { getValueFromObject, latinize, tokenize } from './typeahead-utils';\n\n\nexport class TypeaheadDirective implements OnInit, OnDestroy {\n  /** options source, can be Array of strings, objects or\n   * an Observable for external matching process\n   */\n   typeahead: any;\n  /** minimal no of characters that needs to be entered before\n   * typeahead kicks-in. When set to 0, typeahead shows on focus with full\n   * list of options (limited as normal by typeaheadOptionsLimit)\n   */\n   typeaheadMinLength: number = void 0;\n  /** minimal wait time after last character typed before typeahead kicks-in */\n   typeaheadWaitMs: number;\n  /** maximum length of options items list */\n   typeaheadOptionsLimit: number;\n  /** when options source is an array of objects, the name of field\n   * that contains the options value, we use array item as option in case\n   * of this field is missing. Supports nested properties and methods.\n   */\n   typeaheadOptionField: string;\n  /** when options source is an array of objects, the name of field that\n   * contains the group value, matches are grouped by this field when set.\n   */\n   typeaheadGroupField: string;\n  /** should be used only in case of typeahead attribute is array.\n   * If true - loading of options will be async, otherwise - sync.\n   * true make sense if options array is large.\n   */\n   typeaheadAsync: boolean = void 0;\n  /** match latin symbols.\n   * If true the word súper would match super and vice versa.\n   */\n   typeaheadLatinize = true;\n  /** break words with spaces. If true the text \"exact phrase\"\n   * here match would match with match exact phrase here\n   * but not with phrase here exact match (kind of \"google style\").\n   */\n   typeaheadSingleWords = true;\n  /** should be used only in case typeaheadSingleWords attribute is true.\n   * Sets the word delimiter to break words. Defaults to space.\n   */\n   typeaheadWordDelimiters = ' ';\n  /** should be used only in case typeaheadSingleWords attribute is true.\n   * Sets the word delimiter to match exact phrase.\n   * Defaults to simple and double quotes.\n   */\n   typeaheadPhraseDelimiters = '\\'\"';\n  /** used to specify a custom item template.\n   * Template variables exposed are called item and index;\n   */\n   typeaheadItemTemplate: TemplateRef<any>;\n  /** used to specify a custom options list template.\n   * Template variables: matches, itemTemplate, query\n   */\n   optionsListTemplate: TemplateRef<any>;\n  /** specifies if typeahead is scrollable  */\n   typeaheadScrollable = false;\n  /** specifies number of options to show in scroll view  */\n   typeaheadOptionsInScrollableView = 5;\n  /** fired when 'busy' state of this component was changed,\n   * fired on async mode only, returns boolean\n   */\n   typeaheadLoading: EventEmitter<boolean> = new EventEmitter();\n  /** fired on every key event and returns true\n   * in case of matches are not detected\n   */\n   typeaheadNoResults: EventEmitter<boolean> = new EventEmitter();\n  /** fired when option was selected, return object with data of this option */\n   typeaheadOnSelect: EventEmitter<TypeaheadMatch> = new EventEmitter();\n  /** fired when blur event occurres. returns the active item */\n   typeaheadOnBlur: EventEmitter<any> = new EventEmitter();\n\n  /**\n   * A selector specifying the element the typeahead should be appended to.\n   * Currently only supports \"body\".\n   */\n   container: string;\n\n  /** This attribute indicates that the dropdown should be opened upwards */\n   dropup = false;\n\n  // not yet implemented\n  /** if false restrict model values to the ones selected from the popup only will be provided */\n  // @Input() protected typeaheadEditable:boolean;\n  /** if false the first match automatically will not be focused as you type */\n  // @Input() protected typeaheadFocusFirst:boolean;\n  /** format the ng-model result after selection */\n  // @Input() protected typeaheadInputFormatter:any;\n  /** if true automatically select an item when there is one option that exactly matches the user input */\n  // @Input() protected typeaheadSelectOnExact:boolean;\n  /**  if true select the currently highlighted match on blur */\n  // @Input() protected typeaheadSelectOnBlur:boolean;\n  /**  if false don't focus the input element the typeahead directive is associated with on selection */\n    // @Input() protected typeaheadFocusOnSelect:boolean;\n\n  _container: TypeaheadContainerComponent;\n  isTypeaheadOptionsListActive = false;\n\n  protected keyUpEventEmitter: EventEmitter<any> = new EventEmitter();\n  protected _matches: TypeaheadMatch[];\n  protected placement = 'bottom-left';\n  // protected popup:ComponentRef<TypeaheadContainerComponent>;\n\n  private _typeahead: ComponentLoader<TypeaheadContainerComponent>;\n  private _subscriptions: Subscription[] = [];\n  private _outsideClickListener: Function;\n\n  constructor(private ngControl: NgControl,\n              private element: ElementRef,\n              viewContainerRef: ViewContainerRef,\n              private renderer: Renderer2,\n              cis: ComponentLoaderFactory,\n              private changeDetection: ChangeDetectorRef) {\n    this._typeahead = cis.createLoader<TypeaheadContainerComponent>(\n      element,\n      viewContainerRef,\n      renderer\n    );\n  }\n\n  ngOnInit(): void {\n    this.typeaheadOptionsLimit = this.typeaheadOptionsLimit || 20;\n    this.typeaheadMinLength =\n      this.typeaheadMinLength === void 0 ? 1 : this.typeaheadMinLength;\n    this.typeaheadWaitMs = this.typeaheadWaitMs || 0;\n\n    // async should be false in case of array\n    if (\n      this.typeaheadAsync === undefined &&\n      !(this.typeahead instanceof Observable)\n    ) {\n      this.typeaheadAsync = false;\n    }\n\n    if (this.typeahead instanceof Observable) {\n      this.typeaheadAsync = true;\n    }\n\n    if (this.typeaheadAsync) {\n      this.asyncActions();\n    } else {\n      this.syncActions();\n    }\n  }\n\n  \n  onInput(e: any): void {\n    // For `<input>`s, use the `value` property. For others that don't have a\n    // `value` (such as `<span contenteditable=\"true\">`), use either\n    // `textContent` or `innerText` (depending on which one is supported, i.e.\n    // Firefox or IE).\n    const value =\n      e.target.value !== undefined\n        ? e.target.value\n        : e.target.textContent !== undefined\n        ? e.target.textContent\n        : e.target.innerText;\n    if (value != null && value.trim().length >= this.typeaheadMinLength) {\n      this.typeaheadLoading.emit(true);\n      this.keyUpEventEmitter.emit(e.target.value);\n    } else {\n      this.typeaheadLoading.emit(false);\n      this.typeaheadNoResults.emit(false);\n      this.hide();\n    }\n  }\n\n  \n  onChange(e: any): void {\n    if (this._container) {\n      // esc\n      if (e.keyCode === 27) {\n        this.hide();\n\n        return;\n      }\n\n      // up\n      if (e.keyCode === 38) {\n        this._container.prevActiveMatch();\n\n        return;\n      }\n\n      // down\n      if (e.keyCode === 40) {\n        this._container.nextActiveMatch();\n\n        return;\n      }\n\n      // enter, tab\n      if (e.keyCode === 13) {\n        this._container.selectActiveMatch();\n\n        return;\n      }\n    }\n  }\n\n  \n  \n  onFocus(): void {\n    if (this.typeaheadMinLength === 0) {\n      this.typeaheadLoading.emit(true);\n      this.keyUpEventEmitter.emit(this.element.nativeElement.value || '');\n    }\n  }\n\n  \n  onBlur(): void {\n    if (this._container && !this._container.isFocused) {\n      this.typeaheadOnBlur.emit(this._container.active);\n    }\n  }\n\n  \n  onKeydown(e: any): void {\n    // no container - no problems\n    if (!this._container) {\n      return;\n    }\n\n    // if an item is visible - prevent form submission\n    if (e.keyCode === 13) {\n      e.preventDefault();\n\n      return;\n    }\n\n    // if an item is visible - don't change focus\n    if (e.keyCode === 9) {\n      e.preventDefault();\n      this._container.selectActiveMatch();\n\n      return;\n    }\n  }\n\n  changeModel(match: TypeaheadMatch): void {\n    const valueStr: string = match.value;\n    this.ngControl.viewToModelUpdate(valueStr);\n    (this.ngControl.control).setValue(valueStr);\n    this.changeDetection.markForCheck();\n    this.hide();\n  }\n\n  get matches(): any[] {\n    return this._matches;\n  }\n\n  show(): void {\n    this._typeahead\n      .attach(TypeaheadContainerComponent)\n      // todo: add append to body, after updating positioning service\n      .to(this.container)\n      .position({attachment: `${this.dropup ? 'top' : 'bottom'} left`})\n      .show({\n        typeaheadRef: this,\n        placement: this.placement,\n        animation: false,\n        dropup: this.dropup\n      });\n\n    this._outsideClickListener = this.renderer.listen('document', 'click', (e: MouseEvent) => {\n      if (this.typeaheadMinLength === 0 && this.element.nativeElement.contains(e.target)) {\n        return;\n      }\n      this.onOutsideClick();\n    });\n\n    this._container = this._typeahead.instance;\n    this._container.parent = this;\n    // This improves the speed as it won't have to be done for each list item\n    const normalizedQuery = (this.typeaheadLatinize\n      ? latinize(this.ngControl.control.value)\n      : this.ngControl.control.value)\n      .toString()\n      .toLowerCase();\n    this._container.query = this.typeaheadSingleWords\n      ? tokenize(\n        normalizedQuery,\n        this.typeaheadWordDelimiters,\n        this.typeaheadPhraseDelimiters\n      )\n      : normalizedQuery;\n    this._container.matches = this._matches;\n    this.element.nativeElement.focus();\n  }\n\n  hide(): void {\n    if (this._typeahead.isShown) {\n      this._typeahead.hide();\n      this._outsideClickListener();\n      this._container = null;\n    }\n  }\n\n  onOutsideClick(): void {\n    if (this._container && !this._container.isFocused) {\n      this.hide();\n    }\n  }\n\n  ngOnDestroy(): any {\n    // clean up subscriptions\n    for (const sub of this._subscriptions) {\n      sub.unsubscribe();\n    }\n    this._typeahead.dispose();\n  }\n\n  protected asyncActions(): void {\n    this._subscriptions.push(\n      this.keyUpEventEmitter\n        .debounceTime(this.typeaheadWaitMs)\n        .mergeMap(() => this.typeahead)\n        .subscribe((matches: any[]) => {\n          this.finalizeAsyncCall(matches);\n        })\n    );\n  }\n\n  protected syncActions(): void {\n    this._subscriptions.push(\n      this.keyUpEventEmitter\n        .debounceTime(this.typeaheadWaitMs)\n        .mergeMap((value: string) => {\n          const normalizedQuery = this.normalizeQuery(value);\n\n          return Observable.from(this.typeahead)\n            .filter((option: any) => {\n              return (\n                option &&\n                this.testMatch(this.normalizeOption(option), normalizedQuery)\n              );\n            })\n            .toArray();\n        })\n        .subscribe((matches: any[]) => {\n          this.finalizeAsyncCall(matches);\n        })\n    );\n  }\n\n  protected normalizeOption(option: any): any {\n    const optionValue: string = getValueFromObject(\n      option,\n      this.typeaheadOptionField\n    );\n    const normalizedOption = this.typeaheadLatinize\n      ? latinize(optionValue)\n      : optionValue;\n\n    return normalizedOption.toLowerCase();\n  }\n\n  protected normalizeQuery(value: string): any {\n    // If singleWords, break model here to not be doing extra work on each\n    // iteration\n    let normalizedQuery: any = (this.typeaheadLatinize\n      ? latinize(value)\n      : value)\n      .toString()\n      .toLowerCase();\n    normalizedQuery = this.typeaheadSingleWords\n      ? tokenize(\n        normalizedQuery,\n        this.typeaheadWordDelimiters,\n        this.typeaheadPhraseDelimiters\n      )\n      : normalizedQuery;\n\n    return normalizedQuery;\n  }\n\n  protected testMatch(match: string, test: any): boolean {\n    let spaceLength: number;\n\n    if (typeof test === 'object') {\n      spaceLength = test.length;\n      for (let i = 0; i < spaceLength; i += 1) {\n        if (test[i].length > 0 && match.indexOf(test[i]) < 0) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n\n    return match.indexOf(test) >= 0;\n  }\n\n  protected finalizeAsyncCall(matches: any[]): void {\n    this.prepareMatches(matches);\n\n    this.typeaheadLoading.emit(false);\n    this.typeaheadNoResults.emit(!this.hasMatches());\n\n    if (!this.hasMatches()) {\n      this.hide();\n\n      return;\n    }\n\n    if (this._container) {\n      // This improves the speed as it won't have to be done for each list item\n      const normalizedQuery = (this.typeaheadLatinize\n        ? latinize(this.ngControl.control.value)\n        : this.ngControl.control.value)\n        .toString()\n        .toLowerCase();\n      this._container.query = this.typeaheadSingleWords\n        ? tokenize(\n          normalizedQuery,\n          this.typeaheadWordDelimiters,\n          this.typeaheadPhraseDelimiters\n        )\n        : normalizedQuery;\n      this._container.matches = this._matches;\n    } else {\n      this.show();\n    }\n  }\n\n  protected prepareMatches(options: any[]): void {\n    const limited: any[] = options.slice(0, this.typeaheadOptionsLimit);\n\n    if (this.typeaheadGroupField) {\n      let matches: TypeaheadMatch[] = [];\n\n      // extract all group names\n      const groups = limited\n        .map((option: any) =>\n          getValueFromObject(option, this.typeaheadGroupField)\n        )\n        .filter((v: string, i: number, a: any[]) => a.indexOf(v) === i);\n\n      groups.forEach((group: string) => {\n        // add group header to array of matches\n        matches.push(new TypeaheadMatch(group, group, true));\n\n        // add each item of group to array of matches\n        matches = matches.concat(\n          limited\n            .filter(\n              (option: any) =>\n                getValueFromObject(option, this.typeaheadGroupField) === group\n            )\n            .map(\n              (option: any) =>\n                new TypeaheadMatch(\n                  option,\n                  getValueFromObject(option, this.typeaheadOptionField)\n                )\n            )\n        );\n      });\n\n      this._matches = matches;\n    } else {\n      this._matches = limited.map(\n        (option: any) =>\n          new TypeaheadMatch(\n            option,\n            getValueFromObject(option, this.typeaheadOptionField)\n          )\n      );\n    }\n  }\n\n  protected hasMatches(): boolean {\n    return this._matches.length > 0;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{selector: '[typeahead]', exportAs: 'bs-typeahead'}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: NgControl, },\n{type: ElementRef, },\n{type: ViewContainerRef, },\n{type: Renderer2, },\n{type: ComponentLoaderFactory, },\n{type: ChangeDetectorRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'typeahead': [{ type: Input },],\n'typeaheadMinLength': [{ type: Input },],\n'typeaheadWaitMs': [{ type: Input },],\n'typeaheadOptionsLimit': [{ type: Input },],\n'typeaheadOptionField': [{ type: Input },],\n'typeaheadGroupField': [{ type: Input },],\n'typeaheadAsync': [{ type: Input },],\n'typeaheadLatinize': [{ type: Input },],\n'typeaheadSingleWords': [{ type: Input },],\n'typeaheadWordDelimiters': [{ type: Input },],\n'typeaheadPhraseDelimiters': [{ type: Input },],\n'typeaheadItemTemplate': [{ type: Input },],\n'optionsListTemplate': [{ type: Input },],\n'typeaheadScrollable': [{ type: Input },],\n'typeaheadOptionsInScrollableView': [{ type: Input },],\n'typeaheadLoading': [{ type: Output },],\n'typeaheadNoResults': [{ type: Output },],\n'typeaheadOnSelect': [{ type: Output },],\n'typeaheadOnBlur': [{ type: Output },],\n'container': [{ type: Input },],\n'dropup': [{ type: Input },],\n'onInput': [{ type: HostListener, args: ['input', ['$event'], ] },],\n'onChange': [{ type: HostListener, args: ['keyup', ['$event'], ] },],\n'onFocus': [{ type: HostListener, args: ['click', ] },{ type: HostListener, args: ['focus', ] },],\n'onBlur': [{ type: HostListener, args: ['blur', ] },],\n'onKeydown': [{ type: HostListener, args: ['keydown', ['$event'], ] },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule, ModuleWithProviders } from '@angular/core';\n\nimport { TypeaheadContainerComponent } from './typeahead-container.component';\nimport { TypeaheadDirective } from './typeahead.directive';\nimport { ComponentLoaderFactory } from '../component-loader/index';\nimport { PositioningService } from '../positioning/index';\n\n\nexport class TypeaheadModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: TypeaheadModule,\n      providers: [ComponentLoaderFactory, PositioningService]\n    };\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  imports: [CommonModule],\n  declarations: [TypeaheadContainerComponent, TypeaheadDirective],\n  exports: [TypeaheadContainerComponent, TypeaheadDirective],\n  entryComponents: [TypeaheadContainerComponent]\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Facet } from './models/facet';\nexport class FacetSelect {\n/**\n * @param {?} facet\n */\nconstructor(public facet: Facet) {}\n}\n\nfunction FacetSelect_tsickle_Closure_declarations() {\n/** @type {?} */\nFacetSelect.prototype.facet;\n}\n\nexport class FacetDeselect {\n/**\n * @param {?} facet\n */\nconstructor(public facet: Facet) {}\n}\n\nfunction FacetDeselect_tsickle_Closure_declarations() {\n/** @type {?} */\nFacetDeselect.prototype.facet;\n}\n\nexport class FacetDeselectAll {\nconstructor() {}\n}\n\nexport type FacetEvent = FacetSelect | FacetDeselect | FacetDeselectAll;","import { Component, Input, EventEmitter, Output } from '@angular/core';\nimport { FacetEvent, FacetSelect, FacetDeselect, FacetDeselectAll } from './facet-events';\nimport { Facet } from './models/facet';\nexport class FacetContainerComponent {\n\n     header: string = 'Selected:';\n     clearTooltip: string = 'Clear All';\n     emptyText: string = 'No Items';\n     facets: Facet[] = [];\n\n     facetsChange: EventEmitter<Facet[]> = new EventEmitter<Facet[]>();\n     events: EventEmitter<FacetEvent> = new EventEmitter<FacetEvent>();\n/**\n * @param {?} facet\n * @return {?}\n */\nselectFacet(facet: Facet): void {\n        // push the facet on to the list\n        this.facets.push(facet);\n\n        // update the two way binding\n        this.facetsChange.emit(this.facets);\n\n        // trigger event\n        this.triggerEvent(new FacetSelect(facet));\n    }\n/**\n * @param {?} facet\n * @return {?}\n */\ndeselectFacet(facet: Facet): void {\n\n        // find the index of the item in the selected array\n        let /** @type {?} */ idx = this.facets.findIndex(selectedFacet => facet === selectedFacet);\n\n        // if match there was no match then finish\n        if (idx === -1) {\n            return;\n        }\n\n        // remove the last item\n        this.facets.splice(idx, 1);\n\n        // update the two way binding\n        this.facetsChange.emit(this.facets);\n\n        // trigger event\n        this.triggerEvent(new FacetDeselect(facet));\n    }\n/**\n * @return {?}\n */\ndeselectAllFacets(): void {\n\n        // empty the selected array\n        this.facets = [];\n\n        // update the two way binding\n        this.facetsChange.emit(this.facets);\n\n        // trigger event\n        this.triggerEvent(new FacetDeselectAll());\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nprivate triggerEvent(event: FacetEvent) {\n        this.events.next(event);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-facet-container',\n    template: `\n      <!-- Display Any Selected Facets -->\n      <div class=\"facets-selected-container\">\n\n          <!-- Display Title an Clear Button -->\n          <div class=\"facets-selected-header-container\">\n\n              <!-- Show The Selected Text -->\n              <span class=\"facets-selected-header-label\">{{ header }}</span>\n\n              <!-- Add a Clear Button -->\n              <div class=\"facets-selected-clear-button\" tabindex=\"0\" [tooltip]=\"clearTooltip\" placement=\"left\" container=\"body\" (click)=\"deselectAllFacets()\"\n                  (keyup.enter)=\"deselectAllFacets()\" *ngIf=\"facets.length > 0\">\n\n                  <svg class=\"facets-selected-clear-graphic\" viewBox=\"0 0 19 12\" shape-rendering=\"geometricPrecision\">\n                      <rect class=\"light-grey\" x=\"0\" y=\"2\" width=\"7\" height=\"2\"></rect>\n                      <rect class=\"dark-grey\" x=\"0\" y=\"5\" width=\"9\" height=\"2\"></rect>\n                      <rect class=\"light-grey\" x=\"0\" y=\"8\" width=\"7\" height=\"2\"></rect>\n                      <path class=\"dark-grey\" d=\"M9,1 h1 l9,9 v1 h-1 l-9,-9 v-1 Z\"></path>\n                      <path class=\"dark-grey\" d=\"M9,11 v-1 l9,-9 h1 v1 l-9,9 h-1 Z\"></path>\n                  </svg>\n              </div>\n\n          </div>\n\n          <!-- Display Tags For Selected Items -->\n          <div class=\"facets-selected-list\">\n\n              <!-- Show Selected Tags -->\n              <div class=\"facet-selected-tag\" tabindex=\"0\" *ngFor=\"let facet of facets\" (mousedown)=\"$event.preventDefault()\" (click)=\"deselectFacet(facet)\" (keyup.enter)=\"deselectFacet(facet)\">\n\n                  <!-- Display Label -->\n                  <span class=\"facet-selected-tag-label\">{{ facet.title }}</span>\n\n                  <!-- Display Remove Icon -->\n                  <span class=\"hpe-icon hpe-close\"></span>\n              </div>\n\n          </div>\n\n          <!-- Show Message Here if No Facets Selected -->\n          <p class=\"facets-selected-none-label\" *ngIf=\"emptyText && facets.length === 0\">{{ emptyText }}</p>\n\n      </div>\n\n      <!-- Any Facet Elements Should be Added Here By User -->\n      <div class=\"facets-region\">\n          <ng-content></ng-content>\n      </div>\n    `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'header': [{ type: Input },],\n'clearTooltip': [{ type: Input },],\n'emptyText': [{ type: Input },],\n'facets': [{ type: Input },],\n'facetsChange': [{ type: Output },],\n'events': [{ type: Output },],\n};\n}\n\nfunction FacetContainerComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nFacetContainerComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFacetContainerComponent.ctorParameters;\n/** @type {?} */\nFacetContainerComponent.propDecorators;\n/** @type {?} */\nFacetContainerComponent.prototype.header;\n/** @type {?} */\nFacetContainerComponent.prototype.clearTooltip;\n/** @type {?} */\nFacetContainerComponent.prototype.emptyText;\n/** @type {?} */\nFacetContainerComponent.prototype.facets;\n/** @type {?} */\nFacetContainerComponent.prototype.facetsChange;\n/** @type {?} */\nFacetContainerComponent.prototype.events;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Host, Input, Output, EventEmitter, OnInit, ElementRef } from '@angular/core';\nimport { FacetContainerComponent } from '../../facet-container.component';\nimport { FacetEvent, FacetDeselectAll, FacetDeselect, FacetSelect } from '../../facet-events';\nimport { Facet } from '../../models/facet';\nimport { Subject } from 'rxjs/Subject';\nimport'rxjs/add/operator/filter';\nexport class FacetBaseComponent implements OnInit {\n\n     selected: Facet[] = [];\n     selectedChange: EventEmitter<Facet[]> = new EventEmitter<Facet[]>();\n\n     events: Subject<FacetEvent> = new Subject<FacetEvent>();\n/**\n * @param {?} facetContainer\n * @param {?} _elementRef\n */\nconstructor(\nprivate facetContainer: FacetContainerComponent,\npublic _elementRef: ElementRef) {\n\n        if (facetContainer) {\n\n            // subscribe to any deselect events from the facet container\n            facetContainer.events.filter(event => event instanceof FacetDeselect)\n                .filter((event: FacetDeselect) => !!this.selected.find(facet => facet === event.facet))\n                .subscribe((event: FacetDeselect) => this.deselectFacet(event.facet));\n\n            // subscribe to any deselect all events from facet container\n            facetContainer.events.filter(event => event instanceof FacetDeselectAll).subscribe(_ => this.deselectAll());\n\n        }\n    }\n/**\n * @return {?}\n */\nngOnInit(): void {\n        // check if there should be any facets initially selected\n        if (this.facetContainer) {\n            this.selected.forEach(facet => this.facetContainer.selectFacet(facet));\n        }\n    }\n/**\n * @param {?} facet\n * @return {?}\n */\nselectFacet(facet: Facet): void {\n\n        // if the facet is disabled it should not be selected\n        if (facet.disabled) {\n            return;\n        }\n\n        // add the facet to the list of selected facets\n        this.selected.push(facet);\n\n        // send the new value to the event emitter\n        this.selectedChange.emit(this.selected);\n\n        // fire the event to the observable\n        this.triggerEvent(new FacetSelect(facet));\n\n        // tell the facet container about the selected facet\n        if (this.facetContainer) {\n            this.facetContainer.selectFacet(facet);\n        }\n    }\n/**\n * @param {?} facet\n * @return {?}\n */\ndeselectFacet(facet: Facet): void {\n\n        // find facet to remove\n        let /** @type {?} */ index = this.selected.findIndex(selectedFacet => selectedFacet === facet);\n\n        // only continue if facet is found\n        if (index !== -1) {\n\n            // remove the facet from the selected list\n            this.selected.splice(index, 1);\n\n            // emit the changes to selected event emitter\n            this.selectedChange.emit(this.selected);\n\n            // fire the event to the observable\n            this.triggerEvent(new FacetDeselect(facet));\n\n            // deselect the facet in the facet container\n            if (this.facetContainer) {\n                this.facetContainer.deselectFacet(facet);\n            }\n        }\n    }\n/**\n * @return {?}\n */\ndeselectAll(): void {\n\n        // remove all selected facets\n        this.selected = [];\n\n        // fire the event to the observable\n        this.triggerEvent(new FacetDeselectAll());\n\n        // emit the changes to the selected event emitter\n        this.selectedChange.emit(this.selected);\n    }\n/**\n * @param {?} facet\n * @return {?}\n */\ntoggleFacetSelection(facet: Facet): void {\n\n        // if the facet is selected then deselect - otherwise select it\n        if (this.isFacetSelected(facet)) {\n            this.deselectFacet(facet);\n        } else {\n            this.selectFacet(facet);\n        }\n\n    }\n/**\n * @param {?} facet\n * @return {?}\n */\nisFacetSelected(facet: Facet): boolean {\n        // determine if a facet is currently selected\n        return !!this.selected.find(selectedFacet => selectedFacet === facet);\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nprivate triggerEvent(event: FacetEvent): void {\n        this.events.next(event);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-facet-base',\n    template: '',\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: FacetContainerComponent, decorators: [{ type: Host }, ]},\n{type: ElementRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'selected': [{ type: Input },],\n'selectedChange': [{ type: Output },],\n'events': [{ type: Output },],\n};\n}\n\nfunction FacetBaseComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nFacetBaseComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFacetBaseComponent.ctorParameters;\n/** @type {?} */\nFacetBaseComponent.propDecorators;\n/** @type {?} */\nFacetBaseComponent.prototype.selected;\n/** @type {?} */\nFacetBaseComponent.prototype.selectedChange;\n/** @type {?} */\nFacetBaseComponent.prototype.events;\n/** @type {?} */\nFacetBaseComponent.prototype.facetContainer;\n/** @type {?} */\nFacetBaseComponent.prototype._elementRef;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Output, EventEmitter, Input } from '@angular/core';\nexport class FacetHeaderComponent {\n\n     header: string;\n     canExpand: boolean = true;    \n     expanded: boolean = true;\n     expandedChange: EventEmitter<boolean> = new EventEmitter<boolean>();\n/**\n * @return {?}\n */\ntoggleExpand(): void {\n\n        // if not expandable then do nothing\n        if (this.canExpand) {\n            this.expanded = !this.expanded;\n            this.expandedChange.emit(this.expanded);\n        }\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-facet-header',\n    template: `\n      <span class=\"facet-header-title\">{{ header }}</span>\n      <span class=\"hpe-icon\" [class.hpe-down]=\"expanded\" [class.hpe-previous]=\"!expanded\" *ngIf=\"canExpand\"></span>\n    `,\n    host: {\n        'tabindex': '0',\n        '(click)': 'toggleExpand()',\n        '(keyup.enter)': 'toggleExpand()'\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'header': [{ type: Input },],\n'canExpand': [{ type: Input },],\n'expanded': [{ type: Input },],\n'expandedChange': [{ type: Output },],\n};\n}\n\nfunction FacetHeaderComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nFacetHeaderComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFacetHeaderComponent.ctorParameters;\n/** @type {?} */\nFacetHeaderComponent.propDecorators;\n/** @type {?} */\nFacetHeaderComponent.prototype.header;\n/** @type {?} */\nFacetHeaderComponent.prototype.canExpand;\n/** @type {?} */\nFacetHeaderComponent.prototype.expanded;\n/** @type {?} */\nFacetHeaderComponent.prototype.expandedChange;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Input } from '@angular/core';\nimport { FacetBaseComponent } from '../base/facet-base/facet-base.component';\nimport { Facet } from '../models/facet';\nexport class FacetCheckListComponent extends FacetBaseComponent {\n\n     facets: Facet[] = [];\n     header: string;\n     scrollbar: boolean = true;\n     expanded: boolean = true;\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-facet-check-list',\n    template: `\n      <ux-facet-header [header]=\"header\" [(expanded)]=\"expanded\"></ux-facet-header>\n\n      <!-- Create a container which will show when section is expanded -->\n      <div class=\"facet-check-list-container\" [class.facet-check-list-scrollbar]=\"scrollbar\" *ngIf=\"expanded\">\n\n          <!-- Iterate through each possible facet -->\n          <div class=\"facet-check-list-item\" *ngFor=\"let facet of facets\" [class.facet-active]=\"isFacetSelected(facet)\" tabindex=\"0\"\n              (click)=\"toggleFacetSelection(facet)\" (keyup.enter)=\"toggleFacetSelection(facet)\" [class.disabled]=\"facet.disabled\">\n\n              <!-- Show check icon to indicate the state -->\n              <span class=\"facet-check-list-item-check\">\n                  <span class=\"hpe-icon hpe-active\"></span>\n              </span>\n\n              <!-- Display the title -->\n              <span class=\"facet-check-list-item-title\">{{ facet.title }}</span>\n\n              <!-- Display the count if specified -->\n              <span class=\"facet-check-list-item-count\" *ngIf=\"facet.count !== undefined\">({{ facet.count }})</span>\n          </div>\n      </div>\n    `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'facets': [{ type: Input },],\n'header': [{ type: Input },],\n'scrollbar': [{ type: Input },],\n'expanded': [{ type: Input },],\n};\n}\n\nfunction FacetCheckListComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nFacetCheckListComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFacetCheckListComponent.ctorParameters;\n/** @type {?} */\nFacetCheckListComponent.propDecorators;\n/** @type {?} */\nFacetCheckListComponent.prototype.facets;\n/** @type {?} */\nFacetCheckListComponent.prototype.header;\n/** @type {?} */\nFacetCheckListComponent.prototype.scrollbar;\n/** @type {?} */\nFacetCheckListComponent.prototype.expanded;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, OnInit, Input, Host, Pipe, PipeTransform } from '@angular/core';\nimport { FacetBaseComponent } from '../base/facet-base/facet-base.component';\nimport { Observable } from 'rxjs/Observable';\nimport { Facet } from '../models/facet';\nimport { FacetContainerComponent } from '../facet-container.component';\nimport { TypeaheadMatch } from 'ngx-bootstrap/typeahead';\nimport'rxjs/add/operator/map';\nimport'rxjs/add/observable/of';\nimport { Observer } from 'rxjs/Observer';\nexport class FacetTypeaheadListComponent extends FacetBaseComponent implements OnInit {\n\n     facets: Facet[] | Observable<Facet[]>;\n     header: string;\n     expanded: boolean = true;\n     typeaheadConfig: FacetTypeaheadListConfig = {};\n     suggestions: Facet[] = [];\n     simplified: boolean = true;\n\n    typeaheadOptions: Observable<Facet[]>;\n    searchQuery: string;\nprivate _nativeElement: HTMLElement = /** @type {?} */(( this._elementRef.nativeElement as HTMLElement));\nprivate _defaultTypeaheadConfig: FacetTypeaheadListConfig = {\n        placeholder: '',\n        maxResults: 50,\n        minCharacters: 1\n    };\n/**\n * @return {?}\n */\nngOnInit() {\n\n        // wrap the observable and filter out any already selected items or any disabled items\n        if (this.facets instanceof Observable) {\n\n            // handle an observable of data\n            this.typeaheadOptions = Observable.from(this.facets).map((facets: Facet[]) => {\n\n                // remove disabled facets, selected facets and facets that dont match search term\n                return facets.filter(facet => !facet.disabled)\n                    .filter(facet => !this.selected.find(selectedFacet => selectedFacet === facet))\n                    .filter(facet => facet.title.toUpperCase().includes(this.searchQuery.toUpperCase()));\n            });\n\n        } else {\n\n            // handle an array of data\n            this.typeaheadOptions = Observable.of(this.facets).map((facets: Facet[]) => {\n\n                // remove disabled facets, selected facets and facets that dont match search term\n                return facets.filter(facet => !facet.disabled)\n                    .filter(facet => !this.selected.find(selectedFacet => selectedFacet === facet))\n                    .filter(facet => facet.title.toUpperCase().includes(this.searchQuery.toUpperCase()));\n            });\n        }\n\n        // provide default values for typeahead config\n        for (let /** @type {?} */ prop in this._defaultTypeaheadConfig) {\n\n            // check if prop has been defined in the users typeahead config - if not set default value\n            if (this.typeaheadConfig.hasOwnProperty(prop) === false) {\n                this.typeaheadConfig[prop] = this._defaultTypeaheadConfig[prop];\n            }\n        }\n    }\n/**\n * @param {?} typeaheadOption\n * @return {?}\n */\nselectOption(typeaheadOption: TypeaheadMatch) {\n\n        // check to make sure that the item is not currently selected\n        if (this.selected.find(facet => facet === typeaheadOption.item)) {\n            return;\n        }\n\n        // select the facet\n        this.selectFacet(typeaheadOption.item);\n\n        // clear the typeahead\n        this.searchQuery = '';\n    }\n/**\n * @return {?}\n */\nscrollToFocused(): void {\n\n        let /** @type {?} */ dropdown = this._nativeElement.querySelector('.dropdown-menu');\n\n        // delay to allow the typeahead ui to update\n        setTimeout(() => {\n\n            // find the currently active element if there is one\n            let /** @type {?} */ activeElement = dropdown.querySelector('.dropdown-menu > li.active');\n\n            if (activeElement) {\n\n                // check if element is not in view\n                let /** @type {?} */ elementBounds = activeElement.getBoundingClientRect();\n                let /** @type {?} */ dropdownBounds = dropdown.getBoundingClientRect();\n\n                if (elementBounds.top < dropdownBounds.top) {\n                    dropdown.scrollTop += elementBounds.top - dropdownBounds.top;\n                }\n\n                if (elementBounds.bottom > dropdownBounds.bottom) {\n                    dropdown.scrollTop += elementBounds.bottom - dropdownBounds.bottom;\n                }\n            }\n        });\n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-facet-typeahead-list',\n    template: `\n      <ux-facet-header [header]=\"header\" [(expanded)]=\"expanded\"></ux-facet-header>\n\n      <div class=\"facet-typeahead-list-container\" *ngIf=\"expanded\">\n\n          <div class=\"facet-typeahead-list-selected-container\" *ngIf=\"suggestions?.length > 0\">\n\n              <div class=\"facet-typeahead-list-selected-option\" tabindex=\"0\" *ngFor=\"let facet of suggestions\" (click)=\"toggleFacetSelection(facet)\"\n                  (keyup.enter)=\"toggleFacetSelection(facet)\">\n\n                  <ux-checkbox [clickable]=\"false\" [value]=\"isFacetSelected(facet)\" [simplified]=\"simplified\">\n                      <span class=\"facet-typeahead-list-selected-option-title\">{{ facet.title }}</span>\n                      <span class=\"facet-typeahead-list-selected-option-count\">({{ facet.count }})</span>\n                  </ux-checkbox>\n\n              </div>\n\n          </div>\n\n          <div class=\"facet-typeahead-list-control\">\n\n              <!-- Create Typeahead Control -->\n              <input type=\"text\" class=\"form-control\" [placeholder]=\"typeaheadConfig?.placeholder\" [typeahead]=\"typeaheadOptions\" [(ngModel)]=\"searchQuery\"\n                  [typeaheadMinLength]=\"typeaheadConfig?.minCharacters\" [typeaheadOptionsLimit]=\"typeaheadConfig?.maxResults\" [typeaheadWaitMs]=\"typeaheadConfig?.delay\"\n                  (typeaheadOnSelect)=\"selectOption($event)\" [typeaheadItemTemplate]=\"facetOptionTemplate\" (keyup.ArrowUp)=\"scrollToFocused()\" (keyup.ArrowDown)=\"scrollToFocused()\">\n\n          </div>\n\n      </div>\n\n      <ng-template #facetOptionTemplate let-model=\"item\" let-index=\"index\">\n          <p class=\"facet-typeahead-list-option\"><span [innerHTML]=\"model.title | facetTypeaheadHighlight: searchQuery\"></span> <span class=\"facet-typeahead-list-option-count\"\n                  *ngIf=\"model.count\">({{ model.count }})</span></p>\n      </ng-template>\n    `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'facets': [{ type: Input },],\n'header': [{ type: Input },],\n'expanded': [{ type: Input },],\n'typeaheadConfig': [{ type: Input },],\n'suggestions': [{ type: Input },],\n'simplified': [{ type: Input },],\n};\n}\n\nfunction FacetTypeaheadListComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nFacetTypeaheadListComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFacetTypeaheadListComponent.ctorParameters;\n/** @type {?} */\nFacetTypeaheadListComponent.propDecorators;\n/** @type {?} */\nFacetTypeaheadListComponent.prototype.facets;\n/** @type {?} */\nFacetTypeaheadListComponent.prototype.header;\n/** @type {?} */\nFacetTypeaheadListComponent.prototype.expanded;\n/** @type {?} */\nFacetTypeaheadListComponent.prototype.typeaheadConfig;\n/** @type {?} */\nFacetTypeaheadListComponent.prototype.suggestions;\n/** @type {?} */\nFacetTypeaheadListComponent.prototype.simplified;\n/** @type {?} */\nFacetTypeaheadListComponent.prototype.typeaheadOptions;\n/** @type {?} */\nFacetTypeaheadListComponent.prototype.searchQuery;\n/** @type {?} */\nFacetTypeaheadListComponent.prototype._nativeElement;\n/** @type {?} */\nFacetTypeaheadListComponent.prototype._defaultTypeaheadConfig;\n}\n\n\nexport interface FacetTypeaheadListConfig {\n    placeholder?: string;\n    minCharacters?: number;\n    maxResults?: number;\n    delay?: number;\n}\nexport class FacetTypeaheadHighlight implements PipeTransform {\n/**\n * @param {?} value\n * @param {?} searchQuery\n * @return {?}\n */\ntransform(value: string, searchQuery: string): string {\n        let /** @type {?} */ regex = new RegExp(searchQuery, 'i');\n        return value.replace(regex, `<b class=\"facet-typeahead-highlighted\">${ value.match(regex) }</b>`);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Pipe, args: [{\n    name: 'facetTypeaheadHighlight'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction FacetTypeaheadHighlight_tsickle_Closure_declarations() {\n/** @type {?} */\nFacetTypeaheadHighlight.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFacetTypeaheadHighlight.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\nimport { TypeaheadModule } from 'ngx-bootstrap/typeahead';\nimport { CommonModule } from '@angular/common';\nimport { FacetContainerComponent } from './facet-container.component';\nimport { FacetBaseComponent } from './base/facet-base/facet-base.component';\nimport { FacetHeaderComponent } from './base/facet-header/facet-header.component';\nimport { FacetCheckListComponent } from './facet-check-list/facet-check-list.component';\nimport { FacetTypeaheadListComponent, FacetTypeaheadHighlight } from './facet-typeahead-list/facet-typeahead-list.component';\nimport { FormsModule } from '@angular/forms';\nimport { CheckboxModule } from '../../index';\n\nconst /** @type {?} */ DECLARATIONS = [\n    FacetContainerComponent,\n    FacetHeaderComponent,\n    FacetBaseComponent,\n    FacetCheckListComponent,\n    FacetTypeaheadListComponent,\n    FacetTypeaheadHighlight\n];\nexport class FacetsModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        CommonModule,\n        FormsModule,\n        CheckboxModule,\n        TooltipModule.forRoot(),\n        TypeaheadModule.forRoot()\n    ],\n    exports: DECLARATIONS,\n    declarations: DECLARATIONS\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction FacetsModule_tsickle_Closure_declarations() {\n/** @type {?} */\nFacetsModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFacetsModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","\nexport class Facet {\n/**\n * @param {?} title\n * @param {?=} data\n * @param {?=} count\n * @param {?=} disabled\n * @param {?=} id\n */\nconstructor(\npublic title: string,\npublic data: any = {},\npublic count?: number,\npublic disabled: boolean = false,\npublic id?: string | number\n    ) { }\n}\n\nfunction Facet_tsickle_Closure_declarations() {\n/** @type {?} */\nFacet.prototype.title;\n/** @type {?} */\nFacet.prototype.data;\n/** @type {?} */\nFacet.prototype.count;\n/** @type {?} */\nFacet.prototype.disabled;\n/** @type {?} */\nFacet.prototype.id;\n}\n","import { Injectable } from '@angular/core';\n\n/** Default dropdown configuration */\n\nexport class BsDropdownConfig {\n  /** default dropdown auto closing behavior */\n  autoClose = true;\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { EventEmitter, Injectable } from '@angular/core';\nimport { BsComponentRef } from '../component-loader/bs-component-ref.class';\n\n\nexport class BsDropdownState {\n  direction: 'down' | 'up' = 'down';\n  autoClose: boolean;\n  isOpenChange = new EventEmitter<boolean>();\n  isDisabledChange = new EventEmitter<boolean>();\n  toggleClick = new EventEmitter<boolean>();\n\n  /**\n   * Content to be displayed as popover.\n   */\n  dropdownMenu: Promise<BsComponentRef<any>>;\n  resolveDropdownMenu: (componentRef: BsComponentRef<any>) => void;\n\n  constructor() {\n    this.dropdownMenu = new Promise(resolve => {\n      this.resolveDropdownMenu = resolve;\n    });\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  OnDestroy,\n  Renderer2\n} from '@angular/core';\nimport { BsDropdownState } from './bs-dropdown.state';\nimport { isBs3 } from '../utils/theme-provider';\n\n\nexport class BsDropdownContainerComponent implements OnDestroy {\n  isOpen = false;\n\n  get direction(): 'down' | 'up' {\n    return this._state.direction;\n  }\n\n  private _subscription: any;\n\n  constructor(\n    private _state: BsDropdownState,\n    private cd: ChangeDetectorRef,\n    private _renderer: Renderer2,\n    _element: ElementRef\n  ) {\n    this._subscription = _state.isOpenChange.subscribe((value: boolean) => {\n      this.isOpen = value;\n      const dropdown = _element.nativeElement.querySelector('.dropdown-menu');\n      if (dropdown && !isBs3()) {\n        this._renderer.addClass(dropdown, 'show');\n        if (dropdown.classList.contains('dropdown-menu-right')) {\n          this._renderer.setStyle(dropdown, 'left', 'auto');\n          this._renderer.setStyle(dropdown, 'right', '0');\n        }\n        if (this.direction === 'up') {\n          this._renderer.setStyle(dropdown, 'top', 'auto');\n          this._renderer.setStyle(\n            dropdown,\n            'transform',\n            'translateY(-101%)'\n          );\n        }\n      }\n      this.cd.markForCheck();\n      this.cd.detectChanges();\n    });\n  }\n\n  ngOnDestroy(): void {\n    this._subscription.unsubscribe();\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'bs-dropdown-container',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    style: 'display:block;position: absolute;'\n  },\n  template: `\n    <div [class.dropup]=\"direction === 'up'\"\n         [class.dropdown]=\"direction === 'down'\"\n         [class.show]=\"isOpen\"\n         [class.open]=\"isOpen\"><ng-content></ng-content></div>\n  `\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: BsDropdownState, },\n{type: ChangeDetectorRef, },\n{type: Renderer2, },\n{type: ElementRef, },\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","// tslint:disable:max-file-line-count\nimport {\n  Directive, ElementRef, EmbeddedViewRef, EventEmitter, Input, OnDestroy,\n  OnInit, Output, Renderer2, ViewContainerRef\n} from '@angular/core';\nimport { Subscription } from 'rxjs/Subscription';\nimport 'rxjs/add/operator/filter';\nimport { ComponentLoader, ComponentLoaderFactory } from '../component-loader/index';\n\nimport { BsDropdownConfig } from './bs-dropdown.config';\nimport { BsDropdownContainerComponent } from './bs-dropdown-container.component';\nimport { BsDropdownState } from './bs-dropdown.state';\nimport { BsComponentRef } from '../component-loader/bs-component-ref.class';\nimport { BsDropdownMenuDirective } from './';\nimport { isBs3 } from '../utils/theme-provider';\n\n\nexport class BsDropdownDirective implements OnInit, OnDestroy {\n  /**\n   * Placement of a popover. Accepts: \"top\", \"bottom\", \"left\", \"right\"\n   */\n   placement: string;\n  /**\n   * Specifies events that should trigger. Supports a space separated list of\n   * event names.\n   */\n   triggers: string;\n  /**\n   * A selector specifying the element the popover should be appended to.\n   * Currently only supports \"body\".\n   */\n   container: string;\n\n  /**\n   * This attribute indicates that the dropdown should be opened upwards\n   */\n   dropup: boolean;\n\n  /**\n   * Indicates that dropdown will be closed on item or document click,\n   * and after pressing ESC\n   */\n  \n  set autoClose(value: boolean) {\n    this._state.autoClose = value;\n  }\n\n  get autoClose(): boolean {\n    return this._state.autoClose;\n  }\n\n  /**\n   * Disables dropdown toggle and hides dropdown menu if opened\n   */\n  \n  set isDisabled(value: boolean) {\n    this._isDisabled = value;\n    this._state.isDisabledChange.emit(value);\n    if (value) {\n      this.hide();\n    }\n  }\n\n  get isDisabled(): boolean {\n    return this._isDisabled;\n  }\n\n  /**\n   * Returns whether or not the popover is currently being shown\n   */\n  \n  get isOpen(): boolean {\n    if (this._showInline) {\n      return this._isInlineOpen;\n    }\n\n    return this._dropdown.isShown;\n  }\n\n  set isOpen(value: boolean) {\n    if (value) {\n      this.show();\n    } else {\n      this.hide();\n    }\n  }\n\n  /**\n   * Emits an event when isOpen change\n   */\n   isOpenChange: EventEmitter<any>;\n\n  /**\n   * Emits an event when the popover is shown\n   */\n   onShown: EventEmitter<any>;\n\n  /**\n   * Emits an event when the popover is hidden\n   */\n   onHidden: EventEmitter<any>;\n\n  get isBs4(): boolean {\n    return !isBs3();\n  }\n\n  // todo: move to component loader\n  private _isInlineOpen = false;\n\n  private get _showInline(): boolean {\n    return !this.container;\n  }\n\n  private _inlinedMenu: EmbeddedViewRef<BsDropdownMenuDirective>;\n\n  private _isDisabled: boolean;\n  private _dropdown: ComponentLoader<BsDropdownContainerComponent>;\n  private _subscriptions: Subscription[] = [];\n  private _isInited = false;\n\n  constructor(private _elementRef: ElementRef,\n              private _renderer: Renderer2,\n              private _viewContainerRef: ViewContainerRef,\n              private _cis: ComponentLoaderFactory,\n              private _config: BsDropdownConfig,\n              private _state: BsDropdownState) {\n    // set initial dropdown state from config\n    this._state.autoClose = this._config.autoClose;\n\n    // create dropdown component loader\n    this._dropdown = this._cis\n      .createLoader<BsDropdownContainerComponent>(\n        this._elementRef,\n        this._viewContainerRef,\n        this._renderer\n      )\n      .provide({provide: BsDropdownState, useValue: this._state});\n\n    this.onShown = this._dropdown.onShown;\n    this.onHidden = this._dropdown.onHidden;\n    this.isOpenChange = this._state.isOpenChange;\n\n  }\n\n  ngOnInit(): void {\n    // fix: seems there are an issue with `routerLinkActive`\n    // which result in duplicated call ngOnInit without call to ngOnDestroy\n    // read more: https://github.com/valor-software/ngx-bootstrap/issues/1885\n    if (this._isInited) {\n      return;\n    }\n    this._isInited = true;\n\n    // attach DOM listeners\n    this._dropdown.listen({\n      // because of dropdown inline mode\n      outsideClick: false,\n      triggers: this.triggers,\n      show: () => this.show()\n    });\n\n    // toggle visibility on toggle element click\n    this._subscriptions.push(\n      this._state.toggleClick.subscribe((value: boolean) => this.toggle(value))\n    );\n\n    // hide dropdown if set disabled while opened\n    this._subscriptions.push(\n      this._state.isDisabledChange\n        .filter((value: boolean) => value)\n        .subscribe((value: boolean) => this.hide())\n    );\n  }\n\n  /**\n   * Opens an element’s popover. This is considered a “manual” triggering of\n   * the popover.\n   */\n  show(): void {\n    if (this.isOpen || this.isDisabled) {\n      return;\n    }\n\n    if (this._showInline) {\n      if (!this._inlinedMenu) {\n        this._state.dropdownMenu.then(\n          (dropdownMenu: BsComponentRef<BsDropdownMenuDirective>) => {\n            this._dropdown.attachInline(\n              dropdownMenu.viewContainer,\n              dropdownMenu.templateRef\n            );\n            this._inlinedMenu = this._dropdown._inlineViewRef;\n            this.addBs4Polyfills();\n          }\n        )\n        // swallow errors\n          .catch();\n      }\n      this.addBs4Polyfills();\n      this._isInlineOpen = true;\n      this.onShown.emit(true);\n      this._state.isOpenChange.emit(true);\n\n      return;\n    }\n    this._state.dropdownMenu.then(dropdownMenu => {\n      // check direction in which dropdown should be opened\n      const _dropup =\n        this.dropup ||\n        (typeof this.dropup !== 'undefined' && this.dropup);\n      this._state.direction = _dropup ? 'up' : 'down';\n      const _placement =\n        this.placement || (_dropup ? 'top left' : 'bottom left');\n\n      // show dropdown\n      this._dropdown\n        .attach(BsDropdownContainerComponent)\n        .to(this.container)\n        .position({attachment: _placement})\n        .show({\n          content: dropdownMenu.templateRef,\n          placement: _placement\n        });\n\n      this._state.isOpenChange.emit(true);\n    })\n    // swallow error\n      .catch();\n  }\n\n  /**\n   * Closes an element’s popover. This is considered a “manual” triggering of\n   * the popover.\n   */\n  hide(): void {\n    if (!this.isOpen) {\n      return;\n    }\n\n    if (this._showInline) {\n      this.removeShowClass();\n      this._isInlineOpen = false;\n      this.onHidden.emit(true);\n    } else {\n      this._dropdown.hide();\n    }\n\n    this._state.isOpenChange.emit(false);\n  }\n\n  /**\n   * Toggles an element’s popover. This is considered a “manual” triggering of\n   * the popover.\n   */\n  toggle(value?: boolean): void {\n    if (this.isOpen || !value) {\n      return this.hide();\n    }\n\n    return this.show();\n  }\n\n  ngOnDestroy(): void {\n    // clean up subscriptions and destroy dropdown\n    for (const sub of this._subscriptions) {\n      sub.unsubscribe();\n    }\n    this._dropdown.dispose();\n  }\n\n  private addBs4Polyfills(): void {\n    if (!isBs3()) {\n      this.addShowClass();\n      this.checkRightAlignment();\n      this.checkDropup();\n    }\n  }\n\n  private addShowClass(): void {\n    if (this._inlinedMenu && this._inlinedMenu.rootNodes[0]) {\n      this._renderer.addClass(this._inlinedMenu.rootNodes[0], 'show');\n    }\n  }\n\n  private removeShowClass(): void {\n    if (this._inlinedMenu && this._inlinedMenu.rootNodes[0]) {\n      this._renderer.removeClass(this._inlinedMenu.rootNodes[0], 'show');\n    }\n  }\n\n  private checkRightAlignment(): void {\n    if (this._inlinedMenu && this._inlinedMenu.rootNodes[0]) {\n      const isRightAligned = this._inlinedMenu.rootNodes[0].classList.contains(\n        'dropdown-menu-right'\n      );\n      this._renderer.setStyle(\n        this._inlinedMenu.rootNodes[0],\n        'left',\n        isRightAligned ? 'auto' : '0'\n      );\n      this._renderer.setStyle(\n        this._inlinedMenu.rootNodes[0],\n        'right',\n        isRightAligned ? '0' : 'auto'\n      );\n    }\n  }\n\n  private checkDropup(): void {\n    if (this._inlinedMenu && this._inlinedMenu.rootNodes[0]) {\n      // a little hack to not break support of bootstrap 4 beta\n      this._renderer.setStyle(\n        this._inlinedMenu.rootNodes[0],\n        'top',\n        this.dropup ? 'auto' : '100%'\n      );\n      this._renderer.setStyle(\n        this._inlinedMenu.rootNodes[0],\n        'transform',\n        this.dropup ? 'translateY(-101%)' : 'translateY(0)'\n      );\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[bsDropdown],[dropdown]',\n  exportAs: 'bs-dropdown',\n  providers: [BsDropdownState],\n  host: {\n    '[class.dropup]': 'dropup',\n    '[class.open]': 'isOpen',\n    '[class.show]': 'isOpen && isBs4'\n  }\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Renderer2, },\n{type: ViewContainerRef, },\n{type: ComponentLoaderFactory, },\n{type: BsDropdownConfig, },\n{type: BsDropdownState, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'placement': [{ type: Input },],\n'triggers': [{ type: Input },],\n'container': [{ type: Input },],\n'dropup': [{ type: Input },],\n'autoClose': [{ type: Input },],\n'isDisabled': [{ type: Input },],\n'isOpen': [{ type: Input },],\n'isOpenChange': [{ type: Output },],\n'onShown': [{ type: Output },],\n'onHidden': [{ type: Output },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, TemplateRef, ViewContainerRef } from '@angular/core';\nimport { BsDropdownState } from './bs-dropdown.state';\n\n\nexport class BsDropdownMenuDirective {\n  constructor(\n    _state: BsDropdownState,\n    _viewContainer: ViewContainerRef,\n    _templateRef: TemplateRef<any>\n  ) {\n    _state.resolveDropdownMenu({\n      templateRef: _templateRef,\n      viewContainer: _viewContainer\n    });\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[bsDropdownMenu],[dropdownMenu]',\n  exportAs: 'bs-dropdown-menu'\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: BsDropdownState, },\n{type: ViewContainerRef, },\n{type: TemplateRef, },\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {\n  Directive,\n  ElementRef,\n  HostBinding,\n  HostListener,\n  Input,\n  OnDestroy\n} from '@angular/core';\nimport { Subscription } from 'rxjs/Subscription';\n\nimport { BsDropdownState } from './bs-dropdown.state';\n\n\nexport class BsDropdownToggleDirective implements OnDestroy {\n   isDisabled: boolean = null;\n\n  // @HostBinding('class.active')\n   isOpen: boolean;\n\n  private _subscriptions: Subscription[] = [];\n\n  constructor(private _state: BsDropdownState, private _element: ElementRef) {\n    // sync is open value with state\n    this._subscriptions.push(\n      this._state.isOpenChange.subscribe(\n        (value: boolean) => (this.isOpen = value)\n      )\n    );\n    // populate disabled state\n    this._subscriptions.push(\n      this._state.isDisabledChange.subscribe(\n        (value: boolean) => (this.isDisabled = value || null)\n      )\n    );\n  }\n\n  \n  onClick(): void {\n    if (this.isDisabled) {\n      return;\n    }\n    this._state.toggleClick.emit(true);\n  }\n\n  \n  onDocumentClick(event: any): void {\n    if (\n      this._state.autoClose &&\n      event.button !== 2 &&\n      !this._element.nativeElement.contains(event.target)\n    ) {\n      this._state.toggleClick.emit(false);\n    }\n  }\n\n  \n  onEsc(): void {\n    if (this._state.autoClose) {\n      this._state.toggleClick.emit(false);\n    }\n  }\n\n  ngOnDestroy(): void {\n    for (const sub of this._subscriptions) {\n      sub.unsubscribe();\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[bsDropdownToggle],[dropdownToggle]',\n  exportAs: 'bs-dropdown-toggle',\n  host: {\n    '[attr.aria-haspopup]': 'true'\n  }\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: BsDropdownState, },\n{type: ElementRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'isDisabled': [{ type: HostBinding, args: ['attr.disabled', ] },],\n'isOpen': [{ type: HostBinding, args: ['attr.aria-expanded', ] },],\n'onClick': [{ type: HostListener, args: ['click', [], ] },],\n'onDocumentClick': [{ type: HostListener, args: ['document:click', ['$event'], ] },],\n'onEsc': [{ type: HostListener, args: ['keyup.esc', ] },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { ModuleWithProviders, NgModule } from '@angular/core';\nimport { ComponentLoaderFactory } from '../component-loader/index';\n\nimport { PositioningService } from '../positioning/index';\nimport { BsDropdownContainerComponent } from './bs-dropdown-container.component';\nimport { BsDropdownMenuDirective } from './bs-dropdown-menu.directive';\nimport { BsDropdownToggleDirective } from './bs-dropdown-toggle.directive';\nimport { BsDropdownConfig } from './bs-dropdown.config';\n\nimport { BsDropdownDirective } from './bs-dropdown.directive';\nimport { BsDropdownState } from './bs-dropdown.state';\n\n\nexport class BsDropdownModule {\n  static forRoot(config?: any): ModuleWithProviders {\n    return {\n      ngModule: BsDropdownModule,\n      providers: [\n        ComponentLoaderFactory,\n        PositioningService,\n        BsDropdownState,\n        {\n          provide: BsDropdownConfig,\n          useValue: config ? config : { autoClose: true }\n        }\n      ]\n    };\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  declarations: [\n    BsDropdownMenuDirective,\n    BsDropdownToggleDirective,\n    BsDropdownContainerComponent,\n    BsDropdownDirective\n  ],\n  exports: [\n    BsDropdownMenuDirective,\n    BsDropdownToggleDirective,\n    BsDropdownDirective\n  ],\n  entryComponents: [BsDropdownContainerComponent]\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nexport class FilterContainerComponent {\n\n     filters: Filter[] = [];\n     clearTooltip: string;\n     filtersChange: EventEmitter<Filter[]> = new EventEmitter<Filter[]>();\n     events: EventEmitter<FilterEvent> = new EventEmitter<FilterEvent>();\n/**\n * @param {?} filter\n * @return {?}\n */\naddFilter(filter: Filter): void {\n        this.filters.push(filter);\n        this.events.next(new FilterAddEvent(filter));\n        this.filtersChange.emit(this.filters);\n    }\n/**\n * @param {?} filter\n * @return {?}\n */\nremoveFilter(filter: Filter): void {\n        let /** @type {?} */ idx = this.filters.findIndex(filters => filters === filter);\n\n        if (idx !== -1) {\n            this.filters.splice(idx, 1);\n            this.events.next(new FilterRemoveEvent(filter));\n            this.filtersChange.emit(this.filters);\n        }\n    }\n/**\n * @return {?}\n */\nremoveAll(): void {\n        this.events.next(new FilterRemoveAllEvent());\n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-filter-container',\n    template: `\n      <ng-content></ng-content>\n\n      <!-- Add a Clear Button -->\n      <div class=\"filter-selected-clear-button\" *ngIf=\"filters.length > 0\" [tooltip]=\"clearTooltip || 'Clear All'\" (click)=\"removeAll()\">\n    \n          <svg class=\"filter-selected-clear-graphic\" width=\"19\" height=\"12\" viewBox=\"0 0 19 12\" shape-rendering=\"geometricPrecision\">\n              <rect class=\"light-grey\" x=\"0\" y=\"2\" width=\"7\" height=\"2\"></rect>\n              <rect class=\"dark-grey\" x=\"0\" y=\"5\" width=\"9\" height=\"2\"></rect>\n              <rect class=\"light-grey\" x=\"0\" y=\"8\" width=\"7\" height=\"2\"></rect>\n              <path class=\"dark-grey\" d=\"M9,1 h1 l9,9 v1 h-1 l-9,-9 v-1 Z\"></path>\n              <path class=\"dark-grey\" d=\"M9,11 v-1 l9,-9 h1 v1 l-9,9 h-1 Z\"></path>\n          </svg>\n\n      </div>\n    `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'filters': [{ type: Input },],\n'clearTooltip': [{ type: Input },],\n'filtersChange': [{ type: Output },],\n'events': [{ type: Output },],\n};\n}\n\nfunction FilterContainerComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nFilterContainerComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFilterContainerComponent.ctorParameters;\n/** @type {?} */\nFilterContainerComponent.propDecorators;\n/** @type {?} */\nFilterContainerComponent.prototype.filters;\n/** @type {?} */\nFilterContainerComponent.prototype.clearTooltip;\n/** @type {?} */\nFilterContainerComponent.prototype.filtersChange;\n/** @type {?} */\nFilterContainerComponent.prototype.events;\n}\n\n\nexport interface Filter {\n    group: string;\n    title: string;\n    name: string;\n    initial?: boolean;\n}\nexport class FilterAddEvent {\n/**\n * @param {?} filter\n */\nconstructor(public filter: Filter) {}\n}\n\nfunction FilterAddEvent_tsickle_Closure_declarations() {\n/** @type {?} */\nFilterAddEvent.prototype.filter;\n}\n\nexport class FilterRemoveEvent {\n/**\n * @param {?} filter\n */\nconstructor(public filter: Filter) {}\n}\n\nfunction FilterRemoveEvent_tsickle_Closure_declarations() {\n/** @type {?} */\nFilterRemoveEvent.prototype.filter;\n}\n\nexport class FilterRemoveAllEvent {\n}\n\nexport type FilterEvent = FilterAddEvent | FilterRemoveEvent | FilterRemoveAllEvent;\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, Host, Input, Output } from '@angular/core';\nimport { FilterContainerComponent, Filter, FilterRemoveAllEvent } from '../filter-container.component';\nexport class FilterBaseComponent {\n\n     filters: Filter[];\n/**\n * @param {?} filtersContainer\n */\nconstructor(\nprivate filtersContainer: FilterContainerComponent) {\n\n        filtersContainer.events.filter(event => event instanceof FilterRemoveAllEvent).subscribe(this.removeFilter.bind(this));\n    }\n/**\n * @param {?} filter\n * @return {?}\n */\naddFilter(filter: Filter): void {\n        if (!filter.initial) {\n            this.filtersContainer.addFilter(filter);\n        }\n    }\n/**\n * @param {?} filter\n * @return {?}\n */\nremoveFilter(filter: Filter): void {\n        if (!filter) {\n            return;\n        }\n\n        this.filtersContainer.removeFilter(filter);\n    }\n    \nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'ux-filter-base'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: FilterContainerComponent, decorators: [{ type: Host }, ]},\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'filters': [{ type: Input },],\n};\n}\n\nfunction FilterBaseComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nFilterBaseComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFilterBaseComponent.ctorParameters;\n/** @type {?} */\nFilterBaseComponent.propDecorators;\n/** @type {?} */\nFilterBaseComponent.prototype.filters;\n/** @type {?} */\nFilterBaseComponent.prototype.filtersContainer;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { BsDropdownDirective } from 'ngx-bootstrap/dropdown';\nimport { Component, Input, ViewChild } from '@angular/core';\nimport { FilterBaseComponent } from '../filter-base/filter-base.component';\nimport { Filter, FilterContainerComponent, FilterRemoveAllEvent } from '../filter-container.component';\nimport { TypeaheadMatch } from 'ngx-bootstrap/typeahead';\nexport class FilterDynamicComponent extends FilterBaseComponent {\n\n     filters: Filter[];\n     initial: Filter;\n     options: FilterDynamicListConfig;\n\n     dropdown: BsDropdownDirective;\n\n    defaultOptions: FilterDynamicListConfig = {\n        placeholder: '',\n        minCharacters: 3\n    };\n    searchQuery: string;\n    selected: Filter;\n    showTypeahead: boolean = true;\n    typeaheadItems: string[] = [];\n/**\n * @return {?}\n */\ngetItems(): string[] {\n        return this.filters.filter(item => item !== this.initial).map(item => item.name);\n    }\n/**\n * @return {?}\n */\nngOnInit() {\n        this.selected = this.initial;\n        this.typeaheadItems = this.getItems();\n\n        if (this.options && this.options.maxIndividualItems && this.options.maxIndividualItems + 1 >= this.filters.length ) {\n            this.showTypeahead = false;\n        }\n    }\n/**\n * @param {?} typeaheadOption\n * @return {?}\n */\nselectOption(typeaheadOption: TypeaheadMatch) { \n        this.removeFilter();\n        let /** @type {?} */ idx = this.filters.findIndex(filter => filter.name === typeaheadOption.value);\n        this.selected = this.filters[idx];\n        this.addFilter(this.selected);\n        this.searchQuery = '';\n        this.dropdown.hide();\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nclickOff(event: MouseEvent) {\n\n        let /** @type {?} */ target = /** @type {?} */(( event.target as HTMLElement));\n        let /** @type {?} */ hideDropdown = true;\n\n        while (target && target.nodeName !== 'BODY') {\n            if (target.classList.contains('ux-dynamic-filter')) {\n                hideDropdown = false;\n                break;\n            } else {\n                target = target.parentElement;\n            }\n        }\n\n        if (hideDropdown) {\n            this.searchQuery = '';\n            this.dropdown.hide();\n        }\n        \n    }\n/**\n * @return {?}\n */\nremoveFilter(): void { \n        if (this.selected !== this.initial) {\n            super.removeFilter(this.selected);\n            this.selected = this.initial;\n        }\n        this.searchQuery = '';\n    }\n/**\n * @param {?} filter\n * @return {?}\n */\nselectFilter(filter: Filter) {\n        this.removeFilter();\n        this.selected = filter;\n        this.addFilter(this.selected);\n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-filter-dynamic',\n    template: `\n      <div class=\"btn-group ux-dynamic-filter\" dropdown #dynamicDropdown=\"bs-dropdown\">\n          <button (click)=\"dynamicDropdown.show()\" type=\"button\" [class.active]=\"selected !== initial\" class=\"filter-dropdown btn dropdown-toggle\">{{ selected?.title }} \n              <span class=\"hpe-icon hpe-down\"></span>\n          </button>\n          <ul *dropdownMenu class=\"dropdown-menu\" role=\"menu\">\n\n              <li class=\"dropdown-list-item\" *ngIf=\"showTypeahead\" role=\"menuitem\">\n                  <a class=\"dropdown-item\" (click)=\"removeFilter(); dynamicDropdown.hide();\">\n                      <i class=\"hpe-icon\" [class.hpe-checkmark]=\"initial === selected\"></i>\n                      <span class=\"filter-dropdown-title\">{{ initial.name }}</span>\n                  </a>\n              </li>\n\n              <li class=\"dropdown-list-item\" *ngIf=\"selected !== initial && showTypeahead\" role=\"menuitem\">\n                  <a class=\"dropdown-item\">\n                      <i class=\"hpe-icon hpe-checkmark\"></i>\n                      <span class=\"filter-dropdown-title\">{{ selected.name }}</span>\n                  </a>\n              </li>\n\n              <hr>\n\n              <li *ngIf=\"showTypeahead\" class=\"typeahead-box\">\n                  <input [(ngModel)]=\"searchQuery\" [typeahead]=\"typeaheadItems\" class=\"form-control\" \n                  (typeaheadOnSelect)=\"selectOption($event)\" \n                  [placeholder]=\"options?.placeholder || defaultOptions.placeholder\"\n                  [typeaheadMinLength]=\"options?.minCharacters || defaultOptions.minCharacters\"\n                  [typeaheadOptionsLimit]=\"options?.maxResults\">\n              </li>\n\n              <span *ngIf=\"!showTypeahead\">\n                  <li class=\"dropdown-list-item\" *ngFor=\"let filter of filters\" role=\"menuitem\">\n                      <a class=\"dropdown-item\" (click)=\"selectFilter(filter)\">\n                          <i class=\"hpe-icon\" [class.hpe-checkmark]=\"filter === selected\"></i>\n                          <span class=\"filter-dropdown-title\">{{ filter.name }}</span>\n                      </a>\n                  </li>\n              </span>\n\n          </ul>\n      </div>\n    `,\n    host: {\n        '(document:click)': 'clickOff($event)',\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'filters': [{ type: Input },],\n'initial': [{ type: Input },],\n'options': [{ type: Input },],\n'dropdown': [{ type: ViewChild, args: [BsDropdownDirective, ] },],\n};\n}\n\nfunction FilterDynamicComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nFilterDynamicComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFilterDynamicComponent.ctorParameters;\n/** @type {?} */\nFilterDynamicComponent.propDecorators;\n/** @type {?} */\nFilterDynamicComponent.prototype.filters;\n/** @type {?} */\nFilterDynamicComponent.prototype.initial;\n/** @type {?} */\nFilterDynamicComponent.prototype.options;\n/** @type {?} */\nFilterDynamicComponent.prototype.dropdown;\n/** @type {?} */\nFilterDynamicComponent.prototype.defaultOptions;\n/** @type {?} */\nFilterDynamicComponent.prototype.searchQuery;\n/** @type {?} */\nFilterDynamicComponent.prototype.selected;\n/** @type {?} */\nFilterDynamicComponent.prototype.showTypeahead;\n/** @type {?} */\nFilterDynamicComponent.prototype.typeaheadItems;\n}\n\n\nexport interface FilterDynamicListConfig {\n    placeholder?: string;\n    minCharacters?: number;\n    maxResults?: number;\n    maxIndividualItems?: number;\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Input } from '@angular/core';\nimport { FilterBaseComponent } from '../filter-base/filter-base.component';\nimport { Filter, FilterContainerComponent, FilterRemoveAllEvent } from '../filter-container.component';\nexport class FilterDropdownComponent extends FilterBaseComponent {\n\n     initial: Filter;\n\n    selected: Filter;\n/**\n * @return {?}\n */\nremoveFilter(): void {\n        super.removeFilter(this.selected);\n        this.selected = this.initial;\n    }\n/**\n * @return {?}\n */\nngOnInit() {\n        this.selected = this.initial;\n    }\n/**\n * @param {?} filter\n * @return {?}\n */\nselectFilter(filter: Filter) {\n        this.removeFilter();\n        this.selected = filter;\n        this.addFilter(this.selected);\n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-filter-dropdown',\n    template: `\n      <div class=\"btn-group\" dropdown>\n          <button dropdownToggle type=\"button\" class=\"filter-dropdown btn dropdown-toggle\" [class.active]=\"selected !== initial\">{{ selected?.title }} \n              <span class=\"hpe-icon hpe-down\"></span>\n          </button>\n          <ul *dropdownMenu class=\"dropdown-menu\" role=\"menu\">\n              <li class=\"dropdown-list-item\" *ngFor=\"let filter of filters\" role=\"menuitem\">\n                  <a class=\"dropdown-item\" (click)=\"selectFilter(filter)\">\n                      <i class=\"hpe-icon\" [class.hpe-checkmark]=\"filter === selected\"></i>\n                      <span class=\"filter-dropdown-title\">{{ filter.name }}</span>\n                  </a>\n              </li>\n          </ul>\n      </div>\n    `,\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'initial': [{ type: Input },],\n};\n}\n\nfunction FilterDropdownComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nFilterDropdownComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFilterDropdownComponent.ctorParameters;\n/** @type {?} */\nFilterDropdownComponent.propDecorators;\n/** @type {?} */\nFilterDropdownComponent.prototype.initial;\n/** @type {?} */\nFilterDropdownComponent.prototype.selected;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { TooltipModule } from 'ngx-bootstrap/tooltip';\nimport { FilterDynamicComponent } from './filter-dynamic/filter-dynamic.component';\nimport { FilterDropdownComponent } from './filter-dropdown/filter-dropdown.component';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\nimport { FilterContainerComponent } from './filter-container.component';\nimport { FilterBaseComponent } from './filter-base/filter-base.component';\nimport { TypeaheadModule } from 'ngx-bootstrap/typeahead';\nimport { FormsModule } from '@angular/forms';\n\nconst /** @type {?} */ DECLARATIONS = [\n    FilterBaseComponent,\n    FilterContainerComponent,\n    FilterDropdownComponent,\n    FilterDynamicComponent\n];\nexport class FilterModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        BsDropdownModule.forRoot(),\n        TypeaheadModule.forRoot(),\n        TooltipModule.forRoot(),\n        FormsModule,\n        CommonModule\n    ],\n    exports: DECLARATIONS,\n    declarations: DECLARATIONS\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction FilterModule_tsickle_Closure_declarations() {\n/** @type {?} */\nFilterModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFilterModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Input, Directive, HostListener, Output, EventEmitter } from '@angular/core';\nexport class FlippableCardComponent {\n\n     direction: 'horizontal' | 'vertical' = 'horizontal';\n     trigger: 'click' | 'hover' | 'manual' = 'hover';\n     width: number = 280;\n     height: number = 200;\n     flipped: boolean = false;\n     flippedChange: EventEmitter<boolean> = new EventEmitter<boolean>();\n/**\n * @param {?} state\n * @return {?}\n */\nsetFlipped(state: boolean) {\n        this.flipped = state;\n        this.flippedChange.emit(this.flipped);\n    }\n/**\n * @return {?}\n */\ntoggleFlipped() {\n        this.setFlipped(!this.flipped);\n    }\n/**\n * @return {?}\n */\nclickTrigger() {\n\n        // add or remove the class depending on whether or not the card has been flipped\n        if (this.trigger === 'click') {\n            this.toggleFlipped();\n        }\n    }\n/**\n * @return {?}\n */\nhoverEnter() {\n        // if the trigger is hover then begin to flip\n        if (this.trigger === 'hover') {\n            this.setFlipped(true);\n        }\n    }\n/**\n * @return {?}\n */\nhoverExit() {\n        if (this.trigger === 'hover') {\n            this.setFlipped(false);\n        }\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-flippable-card',\n    template: `\n      <div class=\"ux-flipper\" [class.ux-flip-card]=\"flipped\" [style.width.px]=\"width\" [style.height.px]=\"height\">\n\n          <div class=\"ux-flippable-card-front\" [style.width.px]=\"width\" [style.height.px]=\"height\">\n              <ng-content select=\"ux-flippable-card-front\"></ng-content>\n          </div>\n\n          <div class=\"ux-flippable-card-back\" [style.width.px]=\"width\" [style.height.px]=\"height\">\n              <ng-content select=\"ux-flippable-card-back\"></ng-content>\n          </div>\n      </div>\n    `,\n    host: {\n        '[class.horizontal]': 'direction === \"horizontal\"',\n        '[class.vertical]': 'direction === \"vertical\"'\n    },\n    exportAs: 'ux-flippable-card'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'direction': [{ type: Input },],\n'trigger': [{ type: Input },],\n'width': [{ type: Input },],\n'height': [{ type: Input },],\n'flipped': [{ type: Input },],\n'flippedChange': [{ type: Output },],\n'clickTrigger': [{ type: HostListener, args: ['click', ] },],\n'hoverEnter': [{ type: HostListener, args: ['mouseenter', ] },],\n'hoverExit': [{ type: HostListener, args: ['mouseleave', ] },],\n};\n}\n\nfunction FlippableCardComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nFlippableCardComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFlippableCardComponent.ctorParameters;\n/** @type {?} */\nFlippableCardComponent.propDecorators;\n/** @type {?} */\nFlippableCardComponent.prototype.direction;\n/** @type {?} */\nFlippableCardComponent.prototype.trigger;\n/** @type {?} */\nFlippableCardComponent.prototype.width;\n/** @type {?} */\nFlippableCardComponent.prototype.height;\n/** @type {?} */\nFlippableCardComponent.prototype.flipped;\n/** @type {?} */\nFlippableCardComponent.prototype.flippedChange;\n}\n\nexport class FlippableCardFrontDirective { static decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'ux-flippable-card-front'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction FlippableCardFrontDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nFlippableCardFrontDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFlippableCardFrontDirective.ctorParameters;\n}\n\nexport class FlippableCardBackDirective { static decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'ux-flippable-card-back'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction FlippableCardBackDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nFlippableCardBackDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFlippableCardBackDirective.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\n\nimport { FlippableCardComponent, FlippableCardBackDirective, FlippableCardFrontDirective } from './flippable-card.component';\nexport class FlippableCardModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    exports: [FlippableCardComponent, FlippableCardBackDirective, FlippableCardFrontDirective],\n    declarations: [FlippableCardComponent, FlippableCardBackDirective, FlippableCardFrontDirective]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction FlippableCardModule_tsickle_Closure_declarations() {\n/** @type {?} */\nFlippableCardModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFlippableCardModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Directive, Input, SimpleChange, Output, EventEmitter, ContentChild } from '@angular/core';\nexport class ItemDisplayPanelContentDirective { static decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: '[uxItemDisplayPanelContent]'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ItemDisplayPanelContentDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nItemDisplayPanelContentDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nItemDisplayPanelContentDirective.ctorParameters;\n}\n\nexport class ItemDisplayPanelFooterDirective { static decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: '[uxItemDisplayPanelFooter]'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ItemDisplayPanelFooterDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nItemDisplayPanelFooterDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nItemDisplayPanelFooterDirective.ctorParameters;\n}\n\nexport class ItemDisplayPanelComponent {\n\n     header: string;\n     top: number;\n     boxShadow: boolean = true;\n     closeVisible: boolean = true;\n     preventClose: boolean = false;\n     inline: boolean = false;\n     animate: boolean = false;\n     shadow: boolean = false;\n     width: number;\n\n     footer: ItemDisplayPanelFooterDirective;\n\n     visibleChange: EventEmitter<boolean> = new EventEmitter<boolean>();\n/**\n * @deprecated \n * Title used for adding tooltips and shouldn't be used as an input\n * instead header will be used. This is here to support backward compatibility only\n * this property should not be used.\n * @param {?} value\n * @return {?}\n */\nset title(value: string) {\n        this.header = value;\n    }\n/**\n * @return {?}\n */\nget title() {\n        return this.header;\n    }\n/**\n * @param {?} visible\n * @return {?}\n */\nset visible(visible: boolean) {\n\n        this._visible = visible;\n\n        // invoke change event\n        this.visibleChange.emit(this._visible);\n\n    }\n/**\n * @return {?}\n */\nget visible() {\n        return this._visible;\n    }\nprivate _visible: boolean = false;\n/**\n * @param {?} event\n * @return {?}\n */\nclickOff(event: MouseEvent) {\n\n        // dont close\n        if (this.preventClose) {\n            return;\n        }\n\n        // dont do anything if the panel is hidden\n        if (this._visible) {\n\n            let /** @type {?} */ target = /** @type {?} */(( event.target as HTMLElement));\n\n            // if the target node is the HTML tag, then this was triggered by scrolling and we should not close the panel\n            if (target.nodeName === 'HTML') {\n                return;\n            }\n\n            let /** @type {?} */ hidePanel = true;\n\n            while (target && target.nodeName !== 'BODY') {\n                if (target.classList.contains('ux-item-display-panel')) {\n                    hidePanel = false;\n                    break;\n                } else {\n                    target = target.parentElement;\n                }\n            }\n\n            if (hidePanel) {\n                this._visible = false;\n                this.visibleChange.emit(this._visible);\n            }\n        }\n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-item-display-panel',\n    template: `\n      <div class=\"ux-item-display-panel\" [class.box-shadow]=\"boxShadow\" [class.inline]=\"inline\" [class.animate]=\"animate\" [class.item-display-panel-hide]=\"!visible\" [style.width]=\"width\" [style.top.px]=\"top\" [style.height]='\"calc(100% - \" + top + \"px)\"'>\n\n          <div class=\"item-display-panel-header\" [class.item-display-panel-shadow]=\"shadow\">\n              <div class=\"heading-flex-box\">\n                  <h3>{{ header }}</h3>\n                  <span *ngIf=\"closeVisible\" class=\"heading-close-button\" tabindex=\"0\" (click)=\"visible = false\" (keydown.enter)=\"visible = false\">\n                      <i class=\"hpe-icon hpe-close\"></i>\n                  </span>\n              </div>\n          </div>\n\n          <div class=\"item-display-panel-content\">\n              <ng-content select=\"[uxItemDisplayPanelContent]\"></ng-content>\n          </div>\n\n          <div class=\"item-display-panel-footer\" *ngIf=\"footer\">\n              <ng-content select=\"[uxItemDisplayPanelFooter]\"></ng-content>\n          </div>\n\n      </div>\n    `,\n    host: {\n        '(document:click)': 'clickOff($event)',\n        '(document:keyup.escape)': 'visible = false',\n        '[class.inline-host]': 'inline',\n        '[class.visible-host]': 'visible'\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'header': [{ type: Input },],\n'top': [{ type: Input },],\n'boxShadow': [{ type: Input },],\n'closeVisible': [{ type: Input },],\n'preventClose': [{ type: Input },],\n'inline': [{ type: Input },],\n'animate': [{ type: Input },],\n'shadow': [{ type: Input },],\n'width': [{ type: Input },],\n'footer': [{ type: ContentChild, args: [ItemDisplayPanelFooterDirective, ] },],\n'visibleChange': [{ type: Output },],\n'title': [{ type: Input },],\n'visible': [{ type: Input },],\n};\n}\n\nfunction ItemDisplayPanelComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nItemDisplayPanelComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nItemDisplayPanelComponent.ctorParameters;\n/** @type {?} */\nItemDisplayPanelComponent.propDecorators;\n/** @type {?} */\nItemDisplayPanelComponent.prototype.header;\n/** @type {?} */\nItemDisplayPanelComponent.prototype.top;\n/** @type {?} */\nItemDisplayPanelComponent.prototype.boxShadow;\n/** @type {?} */\nItemDisplayPanelComponent.prototype.closeVisible;\n/** @type {?} */\nItemDisplayPanelComponent.prototype.preventClose;\n/** @type {?} */\nItemDisplayPanelComponent.prototype.inline;\n/** @type {?} */\nItemDisplayPanelComponent.prototype.animate;\n/** @type {?} */\nItemDisplayPanelComponent.prototype.shadow;\n/** @type {?} */\nItemDisplayPanelComponent.prototype.width;\n/** @type {?} */\nItemDisplayPanelComponent.prototype.footer;\n/** @type {?} */\nItemDisplayPanelComponent.prototype.visibleChange;\n/** @type {?} */\nItemDisplayPanelComponent.prototype._visible;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { CommonModule } from '@angular/common';\nimport { ItemDisplayPanelComponent, ItemDisplayPanelContentDirective, ItemDisplayPanelFooterDirective } from './item-display-panel.component';\nimport { NgModule, Input } from '@angular/core';\nimport { ModalModule } from 'ngx-bootstrap/modal';\n\nconst /** @type {?} */ DECLARATIONS = [\n    ItemDisplayPanelComponent,\n    ItemDisplayPanelContentDirective,\n    ItemDisplayPanelFooterDirective\n];\nexport class ItemDisplayPanelModule {static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        CommonModule\n    ],\n    exports: DECLARATIONS,\n    declarations: DECLARATIONS\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ItemDisplayPanelModule_tsickle_Closure_declarations() {\n/** @type {?} */\nItemDisplayPanelModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nItemDisplayPanelModule.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Input, EventEmitter } from '@angular/core';\nexport class WizardStepComponent {\n    \n     header: string;\n     valid: boolean = true;\n     visitedChange = new EventEmitter<boolean>();\nprivate _active: boolean = false;\nprivate _visited: boolean = false;\n/**\n * @return {?}\n */\nget visited(): boolean {\n        return this._visited;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset visited(value: boolean) {\n        this._visited = value;\n        this.visitedChange.next(value);\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset active(value: boolean) {\n        \n        // store the active state of the step\n        this._active = value;\n\n        // if the value is true then the step should also be marked as visited\n        if (value === true) {\n            this.visited = true;\n        }\n    }\n/**\n * @return {?}\n */\nget active(): boolean {\n        return this._active;\n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-wizard-step',\n    template: `\n      <ng-container *ngIf=\"active\">\n          <ng-content></ng-content>\n      </ng-container>\n    `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'header': [{ type: Input },],\n'valid': [{ type: Input },],\n'visitedChange': [{ type: Input },],\n'visited': [{ type: Input },],\n};\n}\n\nfunction WizardStepComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nWizardStepComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nWizardStepComponent.ctorParameters;\n/** @type {?} */\nWizardStepComponent.propDecorators;\n/** @type {?} */\nWizardStepComponent.prototype.header;\n/** @type {?} */\nWizardStepComponent.prototype.valid;\n/** @type {?} */\nWizardStepComponent.prototype.visitedChange;\n/** @type {?} */\nWizardStepComponent.prototype._active;\n/** @type {?} */\nWizardStepComponent.prototype._visited;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { AfterViewInit, Component, ContentChildren, EventEmitter, Input, Output, QueryList } from '@angular/core';\nimport { WizardStepComponent } from './wizard-step.component';\nexport class WizardComponent implements AfterViewInit {\nprivate _step: number = 0;\n\n     steps = new QueryList<WizardStepComponent>();\n\n     orientation: 'horizontal' | 'vertical' = 'horizontal';\n\n     nextText: string = 'Next';\n     previousText: string = 'Previous';\n     cancelText: string = 'Cancel';\n     finishText: string = 'Finish';\n\n     nextTooltip: string = 'Go to the next step';\n     previousTooltip: string = 'Go to the previous step';\n     cancelTooltip: string = 'Cancel the wizard';\n     finishTooltip: string = 'Finish the wizard';\n\n     nextDisabled: boolean = false;\n     previousDisabled: boolean = false;\n     cancelDisabled: boolean = false;\n     finishDisabled: boolean = false;\n\n     nextVisible: boolean = true;\n     previousVisible: boolean = true;\n     cancelVisible: boolean = true;\n     finishVisible: boolean = true;\n     cancelAlwaysVisible: boolean = false;\n     finishAlwaysVisible: boolean = false;\n\n     onNext = new EventEmitter<number>();\n     onPrevious = new EventEmitter<number>();\n     onCancel = new EventEmitter<void>();\n     onFinishing = new EventEmitter<void>();\n     onFinish = new EventEmitter<void>();\n     stepChanging = new EventEmitter<StepChangingEvent>();\n     stepChange = new EventEmitter<number>();\n\n    invalidIndicator: boolean = false;\n/**\n * @return {?}\n */\nget step() {\n        return this._step;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset step(value: number) {\n\n        // only accept numbers as valid options\n        if (typeof value === 'number') {\n\n            // store the active step\n            this._step = value;\n\n            // update which steps should be active\n            this.update();\n\n            // emit the change event\n            this.stepChange.next(this.step);\n\n            // reset the invalid state\n            this.invalidIndicator = false;\n        }\n    }\n/**\n * @return {?}\n */\nngAfterViewInit(): void {\n\n        // initially set the correct visibility of the steps\n        setTimeout(this.update.bind(this));\n    }\n/**\n * Navigate to the next step\n * @return {?}\n */\nnext(): void {\n\n        this.stepChanging.next(new StepChangingEvent(this.step, this.step + 1));\n\n        // check if current step is invalid\n        if (!this.getCurrentStep().valid) {\n            this.invalidIndicator = true;\n            return;\n        }\n\n        // check if we are currently on the last step\n        if ((this.step + 1) < this.steps.length) {\n            this.step++;\n\n            // emit the current step\n            this.onNext.next(this.step);\n        }\n    }\n/**\n * Navigate to the previous step\n * @return {?}\n */\nprevious(): void {\n\n        this.stepChanging.next(new StepChangingEvent(this.step, this.step - 1));\n\n        // check if we are currently on the last step\n        if (this.step > 0) {\n            this.step--;\n\n            // emit the current step\n            this.onPrevious.next(this.step);\n        }\n    }\n/**\n * Perform actions when the finish button is clicked\n * @return {?}\n */\nfinish(): Promise<void> {\n\n        // fires when the finish button is clicked always\n        this.onFinishing.next();\n\n        /**\n         * This is required because we need to ensure change detection has run\n         * to determine whether or not we have the latest value for the 'valid' input\n         * on the current step. Unfortunately we can't use ChangeDetectorRef as we are looking to run\n         * on content children, and we cant use ApplicationRef.tick() as this does not work in a hybrid app, eg. our docs\n         */\n        return new Promise<void>(resolve => {\n            setTimeout(() => {\n\n                // only fires when the finish button is clicked and the step is valid\n                if (this.getCurrentStep().valid) {\n                    this.onFinish.next();        \n                }\n\n                resolve();\n            });\n        });\n    }\n/**\n * Perform actions when the cancel button is clicked\n * @return {?}\n */\ncancel(): void {\n        this.onCancel.next();\n    }\n/**\n * Update the active state of each step\n * @return {?}\n */\nupdate(): void {\n        // update which steps should be active\n        this.steps.forEach((step, idx) => step.active = idx === this.step);\n    }\n/**\n * Jump to a specific step only if the step has previously been visited\n * @param {?} step\n * @return {?}\n */\ngotoStep(step: WizardStepComponent): void {\n        if (step.visited) {\n\n            const /** @type {?} */ stepIndex = this.steps.toArray().findIndex(stp => stp === step);\n\n            this.stepChanging.next(new StepChangingEvent(this.step, stepIndex));\n\n            this.step = stepIndex;\n        }\n    }\n/**\n * Determine if the current step is the last step\n * @return {?}\n */\nisLastStep(): boolean {\n        return this.step === (this.steps.length - 1);\n    }\n/**\n * Reset the wizard - goes to first step and resets visited state\n * @return {?}\n */\nreset(): void {\n\n        // mark all steps as not visited\n        this.steps.forEach(step => step.visited = false);\n\n        // go to the first step\n        this.step = 0;\n    }\n/**\n * Get the step at the current index\n * @return {?}\n */\ngetCurrentStep(): WizardStepComponent {\n        return this.getStepAtIndex(this.step);\n    }\n/**\n * Return a step at a specific index\n * @param {?} index\n * @return {?}\n */\ngetStepAtIndex(index: number): WizardStepComponent {\n        return this.steps.toArray()[index];\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-wizard',\n    template: `\n      <div class=\"wizard-body\">\n\n          <div class=\"wizard-steps\">\n    \n              <div class=\"wizard-step\" [class.active]=\"stp.active\" [class.visited]=\"stp.visited\" [class.invalid]=\"stp.active && !stp.valid && invalidIndicator\" (click)=\"gotoStep(stp)\" *ngFor=\"let stp of steps\">\n                  {{ stp.header }}\n              </div>\n    \n          </div>\n    \n          <div class=\"wizard-content\">\n              <ng-content></ng-content>\n          </div>\n    \n      </div>\n\n      <div class=\"wizard-footer\">\n          <button #tip=\"bs-tooltip\" class=\"btn button-secondary\" *ngIf=\"previousVisible\" [tooltip]=\"previousTooltip\" container=\"body\" [disabled]=\"previousDisabled || step === 0\"\n              (click)=\"previous(); tip.hide()\">{{ previousText }}</button>\n\n          <button #tip=\"bs-tooltip\" class=\"btn button-primary\" *ngIf=\"nextVisible && !isLastStep()\" [tooltip]=\"nextTooltip\" container=\"body\" [disabled]=\"nextDisabled\"\n              (click)=\"next(); tip.hide()\">{{ nextText }}</button>\n\n          <button #tip=\"bs-tooltip\" class=\"btn button-primary\" *ngIf=\"finishVisible && isLastStep() || finishAlwaysVisible\" [tooltip]=\"finishTooltip\"\n              container=\"body\" [disabled]=\"finishDisabled\" (click)=\"finish(); tip.hide()\">{{ finishText }}</button>\n\n          <button #tip=\"bs-tooltip\" class=\"btn button-secondary\" *ngIf=\"cancelVisible && !isLastStep() || cancelAlwaysVisible\" [tooltip]=\"cancelTooltip\"\n              container=\"body\" [disabled]=\"cancelDisabled\" (click)=\"cancel(); tip.hide()\">{{ cancelText }}</button>\n      </div>\n    `,\n    host: {\n        '[class]': 'orientation'\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'steps': [{ type: ContentChildren, args: [WizardStepComponent, ] },],\n'orientation': [{ type: Input },],\n'nextText': [{ type: Input },],\n'previousText': [{ type: Input },],\n'cancelText': [{ type: Input },],\n'finishText': [{ type: Input },],\n'nextTooltip': [{ type: Input },],\n'previousTooltip': [{ type: Input },],\n'cancelTooltip': [{ type: Input },],\n'finishTooltip': [{ type: Input },],\n'nextDisabled': [{ type: Input },],\n'previousDisabled': [{ type: Input },],\n'cancelDisabled': [{ type: Input },],\n'finishDisabled': [{ type: Input },],\n'nextVisible': [{ type: Input },],\n'previousVisible': [{ type: Input },],\n'cancelVisible': [{ type: Input },],\n'finishVisible': [{ type: Input },],\n'cancelAlwaysVisible': [{ type: Input },],\n'finishAlwaysVisible': [{ type: Input },],\n'onNext': [{ type: Output },],\n'onPrevious': [{ type: Output },],\n'onCancel': [{ type: Output },],\n'onFinishing': [{ type: Output },],\n'onFinish': [{ type: Output },],\n'stepChanging': [{ type: Output },],\n'stepChange': [{ type: Output },],\n'step': [{ type: Input },],\n};\n}\n\nfunction WizardComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nWizardComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nWizardComponent.ctorParameters;\n/** @type {?} */\nWizardComponent.propDecorators;\n/** @type {?} */\nWizardComponent.prototype._step;\n/** @type {?} */\nWizardComponent.prototype.steps;\n/** @type {?} */\nWizardComponent.prototype.orientation;\n/** @type {?} */\nWizardComponent.prototype.nextText;\n/** @type {?} */\nWizardComponent.prototype.previousText;\n/** @type {?} */\nWizardComponent.prototype.cancelText;\n/** @type {?} */\nWizardComponent.prototype.finishText;\n/** @type {?} */\nWizardComponent.prototype.nextTooltip;\n/** @type {?} */\nWizardComponent.prototype.previousTooltip;\n/** @type {?} */\nWizardComponent.prototype.cancelTooltip;\n/** @type {?} */\nWizardComponent.prototype.finishTooltip;\n/** @type {?} */\nWizardComponent.prototype.nextDisabled;\n/** @type {?} */\nWizardComponent.prototype.previousDisabled;\n/** @type {?} */\nWizardComponent.prototype.cancelDisabled;\n/** @type {?} */\nWizardComponent.prototype.finishDisabled;\n/** @type {?} */\nWizardComponent.prototype.nextVisible;\n/** @type {?} */\nWizardComponent.prototype.previousVisible;\n/** @type {?} */\nWizardComponent.prototype.cancelVisible;\n/** @type {?} */\nWizardComponent.prototype.finishVisible;\n/** @type {?} */\nWizardComponent.prototype.cancelAlwaysVisible;\n/** @type {?} */\nWizardComponent.prototype.finishAlwaysVisible;\n/** @type {?} */\nWizardComponent.prototype.onNext;\n/** @type {?} */\nWizardComponent.prototype.onPrevious;\n/** @type {?} */\nWizardComponent.prototype.onCancel;\n/** @type {?} */\nWizardComponent.prototype.onFinishing;\n/** @type {?} */\nWizardComponent.prototype.onFinish;\n/** @type {?} */\nWizardComponent.prototype.stepChanging;\n/** @type {?} */\nWizardComponent.prototype.stepChange;\n/** @type {?} */\nWizardComponent.prototype.invalidIndicator;\n}\n\nexport class StepChangingEvent {\n/**\n * @param {?} from\n * @param {?} to\n */\nconstructor(public from: number,\npublic to: number) { }\n}\n\nfunction StepChangingEvent_tsickle_Closure_declarations() {\n/** @type {?} */\nStepChangingEvent.prototype.from;\n/** @type {?} */\nStepChangingEvent.prototype.to;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\nimport { WizardComponent } from './wizard.component';\nimport { WizardStepComponent } from './wizard-step.component';\n\nconst /** @type {?} */ DECLARATIONS = [\n    WizardComponent,\n    WizardStepComponent\n];\nexport class WizardModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        CommonModule,\n        TooltipModule.forRoot()\n    ],\n    exports: DECLARATIONS,\n    declarations: DECLARATIONS\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction WizardModule_tsickle_Closure_declarations() {\n/** @type {?} */\nWizardModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nWizardModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","export interface NextObserver<T> {\n  closed?: boolean;\n  next: (value: T) => void;\n  error?: (err: any) => void;\n  complete?: () => void;\n}\n\nexport interface ErrorObserver<T> {\n  closed?: boolean;\n  next?: (value: T) => void;\n  error: (err: any) => void;\n  complete?: () => void;\n}\n\nexport interface CompletionObserver<T> {\n  closed?: boolean;\n  next?: (value: T) => void;\n  error?: (err: any) => void;\n  complete: () => void;\n}\n\nexport type PartialObserver<T> = NextObserver<T> | ErrorObserver<T> | CompletionObserver<T>;\n\nexport interface Observer<T> {\n  closed?: boolean;\n  next: (value: T) => void;\n  error: (err: any) => void;\n  complete: () => void;\n}\n\nexport const empty: Observer<any> = {\n  closed: true,\n  next(value: any): void { /* noop */},\n  error(err: any): void { throw err; },\n  complete(): void { /*noop*/ }\n};\n","import { root } from '../util/root';\n\nconst Symbol: any = root.Symbol;\n\nexport const rxSubscriber = (typeof Symbol === 'function' && typeof Symbol.for === 'function') ?\n  Symbol.for('rxSubscriber') : '@@rxSubscriber';\n\n/**\n * @deprecated use rxSubscriber instead\n */\nexport const $$rxSubscriber = rxSubscriber;\n","import { isFunction } from './util/isFunction';\nimport { Observer, PartialObserver } from './Observer';\nimport { Subscription } from './Subscription';\nimport { empty as emptyObserver } from './Observer';\nimport { rxSubscriber as rxSubscriberSymbol } from './symbol/rxSubscriber';\n\n/**\n * Implements the {@link Observer} interface and extends the\n * {@link Subscription} class. While the {@link Observer} is the public API for\n * consuming the values of an {@link Observable}, all Observers get converted to\n * a Subscriber, in order to provide Subscription-like capabilities such as\n * `unsubscribe`. Subscriber is a common type in RxJS, and crucial for\n * implementing operators, but it is rarely used as a public API.\n *\n * @class Subscriber<T>\n */\nexport class Subscriber<T> extends Subscription implements Observer<T> {\n\n  [rxSubscriberSymbol]() { return this; }\n\n  /**\n   * A static factory for a Subscriber, given a (potentially partial) definition\n   * of an Observer.\n   * @param {function(x: ?T): void} [next] The `next` callback of an Observer.\n   * @param {function(e: ?any): void} [error] The `error` callback of an\n   * Observer.\n   * @param {function(): void} [complete] The `complete` callback of an\n   * Observer.\n   * @return {Subscriber<T>} A Subscriber wrapping the (partially defined)\n   * Observer represented by the given arguments.\n   */\n  static create<T>(next?: (x?: T) => void,\n                   error?: (e?: any) => void,\n                   complete?: () => void): Subscriber<T> {\n    const subscriber = new Subscriber(next, error, complete);\n    subscriber.syncErrorThrowable = false;\n    return subscriber;\n  }\n\n  public syncErrorValue: any = null;\n  public syncErrorThrown: boolean = false;\n  public syncErrorThrowable: boolean = false;\n\n  protected isStopped: boolean = false;\n  protected destination: PartialObserver<any>; // this `any` is the escape hatch to erase extra type param (e.g. R)\n\n  /**\n   * @param {Observer|function(value: T): void} [destinationOrNext] A partially\n   * defined Observer or a `next` callback function.\n   * @param {function(e: ?any): void} [error] The `error` callback of an\n   * Observer.\n   * @param {function(): void} [complete] The `complete` callback of an\n   * Observer.\n   */\n  constructor(destinationOrNext?: PartialObserver<any> | ((value: T) => void),\n              error?: (e?: any) => void,\n              complete?: () => void) {\n    super();\n\n    switch (arguments.length) {\n      case 0:\n        this.destination = emptyObserver;\n        break;\n      case 1:\n        if (!destinationOrNext) {\n          this.destination = emptyObserver;\n          break;\n        }\n        if (typeof destinationOrNext === 'object') {\n          if (destinationOrNext instanceof Subscriber) {\n            this.syncErrorThrowable = destinationOrNext.syncErrorThrowable;\n            this.destination = (<Subscriber<any>> destinationOrNext);\n            (<any> this.destination).add(this);\n          } else {\n            this.syncErrorThrowable = true;\n            this.destination = new SafeSubscriber<T>(this, <PartialObserver<any>> destinationOrNext);\n          }\n          break;\n        }\n      default:\n        this.syncErrorThrowable = true;\n        this.destination = new SafeSubscriber<T>(this, <((value: T) => void)> destinationOrNext, error, complete);\n        break;\n    }\n  }\n\n  /**\n   * The {@link Observer} callback to receive notifications of type `next` from\n   * the Observable, with a value. The Observable may call this method 0 or more\n   * times.\n   * @param {T} [value] The `next` value.\n   * @return {void}\n   */\n  next(value?: T): void {\n    if (!this.isStopped) {\n      this._next(value);\n    }\n  }\n\n  /**\n   * The {@link Observer} callback to receive notifications of type `error` from\n   * the Observable, with an attached {@link Error}. Notifies the Observer that\n   * the Observable has experienced an error condition.\n   * @param {any} [err] The `error` exception.\n   * @return {void}\n   */\n  error(err?: any): void {\n    if (!this.isStopped) {\n      this.isStopped = true;\n      this._error(err);\n    }\n  }\n\n  /**\n   * The {@link Observer} callback to receive a valueless notification of type\n   * `complete` from the Observable. Notifies the Observer that the Observable\n   * has finished sending push-based notifications.\n   * @return {void}\n   */\n  complete(): void {\n    if (!this.isStopped) {\n      this.isStopped = true;\n      this._complete();\n    }\n  }\n\n  unsubscribe(): void {\n    if (this.closed) {\n      return;\n    }\n    this.isStopped = true;\n    super.unsubscribe();\n  }\n\n  protected _next(value: T): void {\n    this.destination.next(value);\n  }\n\n  protected _error(err: any): void {\n    this.destination.error(err);\n    this.unsubscribe();\n  }\n\n  protected _complete(): void {\n    this.destination.complete();\n    this.unsubscribe();\n  }\n\n  protected _unsubscribeAndRecycle(): Subscriber<T> {\n    const { _parent, _parents } = this;\n    this._parent = null;\n    this._parents = null;\n    this.unsubscribe();\n    this.closed = false;\n    this.isStopped = false;\n    this._parent = _parent;\n    this._parents = _parents;\n    return this;\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SafeSubscriber<T> extends Subscriber<T> {\n\n  private _context: any;\n\n  constructor(private _parentSubscriber: Subscriber<T>,\n              observerOrNext?: PartialObserver<T> | ((value: T) => void),\n              error?: (e?: any) => void,\n              complete?: () => void) {\n    super();\n\n    let next: ((value: T) => void);\n    let context: any = this;\n\n    if (isFunction(observerOrNext)) {\n      next = (<((value: T) => void)> observerOrNext);\n    } else if (observerOrNext) {\n      next = (<PartialObserver<T>> observerOrNext).next;\n      error = (<PartialObserver<T>> observerOrNext).error;\n      complete = (<PartialObserver<T>> observerOrNext).complete;\n      if (observerOrNext !== emptyObserver) {\n        context = Object.create(observerOrNext);\n        if (isFunction(context.unsubscribe)) {\n          this.add(<() => void> context.unsubscribe.bind(context));\n        }\n        context.unsubscribe = this.unsubscribe.bind(this);\n      }\n    }\n\n    this._context = context;\n    this._next = next;\n    this._error = error;\n    this._complete = complete;\n  }\n\n  next(value?: T): void {\n    if (!this.isStopped && this._next) {\n      const { _parentSubscriber } = this;\n      if (!_parentSubscriber.syncErrorThrowable) {\n        this.__tryOrUnsub(this._next, value);\n      } else if (this.__tryOrSetError(_parentSubscriber, this._next, value)) {\n        this.unsubscribe();\n      }\n    }\n  }\n\n  error(err?: any): void {\n    if (!this.isStopped) {\n      const { _parentSubscriber } = this;\n      if (this._error) {\n        if (!_parentSubscriber.syncErrorThrowable) {\n          this.__tryOrUnsub(this._error, err);\n          this.unsubscribe();\n        } else {\n          this.__tryOrSetError(_parentSubscriber, this._error, err);\n          this.unsubscribe();\n        }\n      } else if (!_parentSubscriber.syncErrorThrowable) {\n        this.unsubscribe();\n        throw err;\n      } else {\n        _parentSubscriber.syncErrorValue = err;\n        _parentSubscriber.syncErrorThrown = true;\n        this.unsubscribe();\n      }\n    }\n  }\n\n  complete(): void {\n    if (!this.isStopped) {\n      const { _parentSubscriber } = this;\n      if (this._complete) {\n        const wrappedComplete = () => this._complete.call(this._context);\n\n        if (!_parentSubscriber.syncErrorThrowable) {\n          this.__tryOrUnsub(wrappedComplete);\n          this.unsubscribe();\n        } else {\n          this.__tryOrSetError(_parentSubscriber, wrappedComplete);\n          this.unsubscribe();\n        }\n      } else {\n        this.unsubscribe();\n      }\n    }\n  }\n\n  private __tryOrUnsub(fn: Function, value?: any): void {\n    try {\n      fn.call(this._context, value);\n    } catch (err) {\n      this.unsubscribe();\n      throw err;\n    }\n  }\n\n  private __tryOrSetError(parent: Subscriber<T>, fn: Function, value?: any): boolean {\n    try {\n      fn.call(this._context, value);\n    } catch (err) {\n      parent.syncErrorValue = err;\n      parent.syncErrorThrown = true;\n      return true;\n    }\n    return false;\n  }\n\n  protected _unsubscribe(): void {\n    const { _parentSubscriber } = this;\n    this._context = null;\n    this._parentSubscriber = null;\n    _parentSubscriber.unsubscribe();\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { TeardownLogic } from '../Subscription';\nimport { OperatorFunction, MonoTypeOperatorFunction } from '../interfaces';\n\n/* tslint:disable:max-line-length */\nexport function filter<T, S extends T>(predicate: (value: T, index: number) => value is S,\n                                       thisArg?: any): OperatorFunction<T, S>;\nexport function filter<T>(predicate: (value: T, index: number) => boolean,\n                          thisArg?: any): MonoTypeOperatorFunction<T>;\n/* tslint:enable:max-line-length */\n\n/**\n * Filter items emitted by the source Observable by only emitting those that\n * satisfy a specified predicate.\n *\n * <span class=\"informal\">Like\n * [Array.prototype.filter()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter),\n * it only emits a value from the source if it passes a criterion function.</span>\n *\n * <img src=\"./img/filter.png\" width=\"100%\">\n *\n * Similar to the well-known `Array.prototype.filter` method, this operator\n * takes values from the source Observable, passes them through a `predicate`\n * function and only emits those values that yielded `true`.\n *\n * @example <caption>Emit only click events whose target was a DIV element</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var clicksOnDivs = clicks.filter(ev => ev.target.tagName === 'DIV');\n * clicksOnDivs.subscribe(x => console.log(x));\n *\n * @see {@link distinct}\n * @see {@link distinctUntilChanged}\n * @see {@link distinctUntilKeyChanged}\n * @see {@link ignoreElements}\n * @see {@link partition}\n * @see {@link skip}\n *\n * @param {function(value: T, index: number): boolean} predicate A function that\n * evaluates each value emitted by the source Observable. If it returns `true`,\n * the value is emitted, if `false` the value is not passed to the output\n * Observable. The `index` parameter is the number `i` for the i-th source\n * emission that has happened since the subscription, starting from the number\n * `0`.\n * @param {any} [thisArg] An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return {Observable} An Observable of values from the source that were\n * allowed by the `predicate` function.\n * @method filter\n * @owner Observable\n */\nexport function filter<T>(predicate: (value: T, index: number) => boolean,\n                          thisArg?: any): MonoTypeOperatorFunction<T> {\n  return function filterOperatorFunction(source: Observable<T>): Observable<T> {\n    return source.lift(new FilterOperator(predicate, thisArg));\n  };\n}\n\nclass FilterOperator<T> implements Operator<T, T> {\n  constructor(private predicate: (value: T, index: number) => boolean,\n              private thisArg?: any) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new FilterSubscriber(subscriber, this.predicate, this.thisArg));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass FilterSubscriber<T> extends Subscriber<T> {\n\n  count: number = 0;\n\n  constructor(destination: Subscriber<T>,\n              private predicate: (value: T, index: number) => boolean,\n              private thisArg: any) {\n    super(destination);\n  }\n\n  // the try catch block below is left specifically for\n  // optimization and perf reasons. a tryCatcher is not necessary here.\n  protected _next(value: T) {\n    let result: any;\n    try {\n      result = this.predicate.call(this.thisArg, value, this.count++);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    if (result) {\n      this.destination.next(value);\n    }\n  }\n}","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs/Subject';\nimport { MarqueeWizardStepComponent } from './marquee-wizard-step.component';\n/**\n * This service is required to provide a form of communication\n * between the marquee wizard steps and the containing marquee wizard.\n * We cannot inject the Host due to the steps being content children \n * rather than view children.\n */\nexport class MarqueeWizardService {\n    valid$ = new Subject<MarqueeWizardValidEvent>();\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction MarqueeWizardService_tsickle_Closure_declarations() {\n/** @type {?} */\nMarqueeWizardService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMarqueeWizardService.ctorParameters;\n/** @type {?} */\nMarqueeWizardService.prototype.valid$;\n}\n\n\nexport interface MarqueeWizardValidEvent {\n    step: MarqueeWizardStepComponent;\n    valid: boolean;\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { WizardStepComponent } from '../wizard/index';\nimport { MarqueeWizardService } from './marquee-wizard.service';\nexport class MarqueeWizardStepComponent extends WizardStepComponent {\n\n     icon: string;\n     completed: boolean = false;\n     completedChange = new EventEmitter<boolean>();\n/**\n * @return {?}\n */\nget valid(): boolean {\n        return this._valid;\n    }\n/**\n * @param {?} valid\n * @return {?}\n */\nset valid(valid: boolean) {\n        this._valid = valid;\n\n        if (this._marqueeWizardService) {\n            this._marqueeWizardService.valid$.next({ step: this, valid: valid });\n        }\n    }\nprivate _valid: boolean = true;\n/**\n * @param {?} _marqueeWizardService\n */\nconstructor(private _marqueeWizardService: MarqueeWizardService) {\n        super();\n    }\n/**\n * Update the completed state and emit the latest value\n * @param {?} completed whether or not the step is completed\n * @return {?}\n */\nsetCompleted(completed: boolean): void {\n        this.completed = completed;\n        this.completedChange.emit(completed);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-marquee-wizard-step',\n    template: `\n      <ng-container *ngIf=\"active\">\n          <ng-content></ng-content>\n      </ng-container>\n    `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: MarqueeWizardService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'icon': [{ type: Input },],\n'completed': [{ type: Input },],\n'completedChange': [{ type: Output },],\n};\n}\n\nfunction MarqueeWizardStepComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nMarqueeWizardStepComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMarqueeWizardStepComponent.ctorParameters;\n/** @type {?} */\nMarqueeWizardStepComponent.propDecorators;\n/** @type {?} */\nMarqueeWizardStepComponent.prototype.icon;\n/** @type {?} */\nMarqueeWizardStepComponent.prototype.completed;\n/** @type {?} */\nMarqueeWizardStepComponent.prototype.completedChange;\n/** @type {?} */\nMarqueeWizardStepComponent.prototype._valid;\n/** @type {?} */\nMarqueeWizardStepComponent.prototype._marqueeWizardService;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Input, ContentChildren, QueryList, TemplateRef } from '@angular/core';\nimport { filter } from 'rxjs/operators/filter';\n\nimport { WizardComponent } from '../wizard/index';\nimport { MarqueeWizardStepComponent } from './marquee-wizard-step.component';\nimport { MarqueeWizardService, MarqueeWizardValidEvent } from './marquee-wizard.service';\nexport class MarqueeWizardComponent extends WizardComponent {\n\n     description: string | TemplateRef<any>;\n     steps = new QueryList<MarqueeWizardStepComponent>();\n/**\n * @return {?}\n */\nget isTemplate(): boolean {\n        return this.description && this.description instanceof TemplateRef;\n    }\n/**\n * @param {?} marqueeWizardService\n */\nconstructor(marqueeWizardService: MarqueeWizardService) {\n        super();\n\n        marqueeWizardService.valid$.pipe(\n            filter((event: MarqueeWizardValidEvent) => !event.valid)\n        ).subscribe(this.validChange.bind(this));\n    }\n/**\n * If the current step is valid, mark it as\n * complete and go to the next step\n * @return {?}\n */\nnext(): void {\n\n        // get the current step\n        const /** @type {?} */ step = /** @type {?} */(( this.getCurrentStep() as MarqueeWizardStepComponent));\n\n        if (step.valid) {\n            super.next();\n\n            // mark this step as completed\n            step.setCompleted(true);\n        }\n    }\n/**\n * Emit the onFinishing event and if valid the onFinish event.\n * Also mark the final step as completed if it is valid\n * @return {?}\n */\nfinish(): Promise<void> {\n\n        // get the current step\n        const /** @type {?} */ step = /** @type {?} */(( this.getCurrentStep() as MarqueeWizardStepComponent));\n\n        // call the original finish function\n        return super.finish().then(() => {\n            // if the step is valid indicate that it is now complete\n            if (step.valid) {\n                step.setCompleted(true);\n            }\n        });\n    }\n/**\n * If a step in the wizard becomes invalid, all steps sequentially after\n * it, should become unvisited and incomplete\n * @param {?} state\n * @return {?}\n */\nvalidChange(state: MarqueeWizardValidEvent): void {\n        \n        const /** @type {?} */ steps = this.steps.toArray();\n        const /** @type {?} */ current = steps.findIndex(step => step === state.step);\n        const /** @type {?} */ affected = steps.slice(current);\n\n        affected.forEach(step => {\n\n            // the step should no longer be completed\n            step.completed = false;\n\n            // if the step is not the current step then also mark it as unvisited\n            if (step !== state.step) {\n                step.visited = false;\n            }\n        });\n\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-marquee-wizard',\n    template: `\n      <div class=\"marquee-wizard-side-panel\">\n\n          <div class=\"marquee-wizard-description-container\" *ngIf=\"description\">\n              <!-- If a template was provided display it -->\n              <ng-container *ngIf=\"isTemplate\" [ngTemplateOutlet]=\"description\"></ng-container>\n\n              <!-- Otherwise wimply display the string -->\n              <ng-container *ngIf=\"!isTemplate\">\n                  <p>{{ description }}</p>\n              </ng-container>\n          </div>\n\n          <ul class=\"marquee-wizard-steps\">\n\n              <li class=\"marquee-wizard-step\" *ngFor=\"let step of steps\" (click)=\"gotoStep(step)\" [class.active]=\"step.active\" [class.visited]=\"step.visited\" [class.invalid]=\"!step.valid\">\n                  <i class=\"marquee-wizard-step-icon\" [ngClass]=\"step.icon\"></i>\n                  <span class=\"marquee-wizard-step-title\">{{ step.header }}</span>\n                  <span class=\"marquee-wizard-step-status hpe-icon hpe-checkmark\" *ngIf=\"step.completed\"></span>\n              </li>\n\n          </ul>\n      </div>\n\n      <div class=\"marquee-wizard-content-panel\">\n          <div class=\"marquee-wizard-content\">\n              <ng-content></ng-content>\n          </div>\n\n          <div class=\"modal-footer\">\n\n              <button #tip=\"bs-tooltip\" class=\"btn button-secondary\" *ngIf=\"previousVisible\" [tooltip]=\"previousTooltip\" container=\"body\"\n                  [disabled]=\"previousDisabled || step === 0\" (click)=\"previous(); tip.hide()\">{{ previousText }}</button>\n\n              <button #tip=\"bs-tooltip\" class=\"btn button-primary\" *ngIf=\"nextVisible && !isLastStep()\" [tooltip]=\"nextTooltip\" container=\"body\"\n                  [disabled]=\"nextDisabled\" (click)=\"next(); tip.hide()\">{{ nextText }}</button>\n\n              <button #tip=\"bs-tooltip\" class=\"btn button-primary\" *ngIf=\"finishVisible && isLastStep() || finishAlwaysVisible\" [tooltip]=\"finishTooltip\"\n                  container=\"body\" [disabled]=\"finishDisabled\" (click)=\"finish(); tip.hide()\">{{ finishText }}</button>\n\n              <button #tip=\"bs-tooltip\" class=\"btn button-secondary\" *ngIf=\"cancelVisible && !isLastStep() || cancelAlwaysVisible\" [tooltip]=\"cancelTooltip\"\n                  container=\"body\" [disabled]=\"cancelDisabled\" (click)=\"cancel(); tip.hide()\">{{ cancelText }}</button>\n          </div>\n      </div>\n    `,\n    providers: [ MarqueeWizardService ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: MarqueeWizardService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'description': [{ type: Input },],\n'steps': [{ type: ContentChildren, args: [MarqueeWizardStepComponent, ] },],\n};\n}\n\nfunction MarqueeWizardComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nMarqueeWizardComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMarqueeWizardComponent.ctorParameters;\n/** @type {?} */\nMarqueeWizardComponent.propDecorators;\n/** @type {?} */\nMarqueeWizardComponent.prototype.description;\n/** @type {?} */\nMarqueeWizardComponent.prototype.steps;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\n\nimport { WizardModule } from '../wizard/index';\nimport { MarqueeWizardComponent } from './marquee-wizard.component';\nimport { MarqueeWizardStepComponent } from './marquee-wizard-step.component';\nexport class MarqueeWizardModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        CommonModule,\n        WizardModule,\n        TooltipModule.forRoot()\n    ],\n    exports: [\n        MarqueeWizardComponent,\n        MarqueeWizardStepComponent\n    ],\n    declarations: [\n        MarqueeWizardComponent,\n        MarqueeWizardStepComponent\n    ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction MarqueeWizardModule_tsickle_Closure_declarations() {\n/** @type {?} */\nMarqueeWizardModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMarqueeWizardModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Input, ViewEncapsulation, EventEmitter, Output, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nexport const /** @type {?} */ NUMBER_PICKER_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => NumberPickerComponent),\n    multi: true\n};\nexport class NumberPickerComponent implements ControlValueAccessor {\nprivate _min: number = -Infinity;\nprivate _max: number = Infinity;\nprivate _step: number = 1;\nprivate _disabled: boolean = false;\nprivate _value: number = 0;\nprivate _propagateChange = (_: any) => { };\n\n     valid: boolean = true;\n     valueChange = new EventEmitter<number>();\n/**\n * @return {?}\n */\nget value(): number {\n        return this._value;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset value(value: number) {\n        this._value = value;\n        this.valueChange.emit(value);\n        this._propagateChange(value);\n    }\n/**\n * @return {?}\n */\nget min(): number {\n        return this._min;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset min(value) {\n        this._min = typeof value === 'string' ? parseFloat(value) : value;\n    }\n/**\n * @return {?}\n */\nget max(): number {\n        return this._max;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset max(value) {\n        this._max = typeof value === 'string' ? parseFloat(value) : value;\n    }\n/**\n * @return {?}\n */\nget step(): number {\n        return this._step;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset step(value) {\n        this._step = typeof value === 'string' ? parseFloat(value) : value;\n    }\n/**\n * @return {?}\n */\nget disabled(): boolean {\n        return this._disabled;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset disabled(value) {\n        this._disabled = typeof value === 'string' && (value === '' || value === 'true' || value === 'disabled') || value === true;\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nincrement(event: MouseEvent | KeyboardEvent): void {\n        event.preventDefault();\n\n        if (!this.disabled) {\n            this.value = Math.max(Math.min(this.value + this.step, this.max), this.min);\n        }\n    }\n/**\n * @param {?} event\n * @return {?}\n */\ndecrement(event: MouseEvent | KeyboardEvent): void {\n        event.preventDefault();\n\n        if (!this.disabled) {\n            this.value = Math.min(Math.max(this.value - this.step, this.min), this.max);\n        }\n    }\n/**\n * @return {?}\n */\nisValid(): boolean {\n        if (this.value < this.min || this.value > this.max) {\n            return false;\n        }\n\n        return this.valid;\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nonScroll(event: WheelEvent): void {\n\n        let /** @type {?} */ scrollValue = event.deltaY || event.wheelDelta;\n\n        if (scrollValue < 0) {\n            this.increment(event);\n        } else {\n            this.decrement(event);\n        }\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nwriteValue(value: any): void {\n        if (value !== undefined) {\n            this._value = value;\n        }\n    }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnChange(fn: any): void {\n        this._propagateChange = fn;\n    }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnTouched(fn: any): void { }\n/**\n * @param {?} isDisabled\n * @return {?}\n */\nsetDisabledState(isDisabled: boolean): void {\n        this.disabled = isDisabled;\n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-number-picker',\n    template: `\n      <input type=\"number\" class=\"form-control number-picker-input\" [(ngModel)]=\"value\" [min]=\"min\" [max]=\"max\" (keydown.ArrowDown)=\"decrement($event)\"\n          (keydown.ArrowUp)=\"increment($event)\" (wheel)=\"onScroll($event)\" step=\"any\" [disabled]=\"disabled\">\n\n      <div class=\"number-picker-controls\">\n\n          <div class=\"number-picker-control-up\" (click)=\"increment($event)\" [class.disabled]=\"disabled || value >= max\">\n              <span class=\"hpe-icon hpe-up\"></span>\n          </div>\n\n          <div class=\"number-picker-control-down\" (click)=\"decrement($event)\" [class.disabled]=\"disabled || value <= min\">\n              <span class=\"hpe-icon hpe-down\"></span>\n          </div>\n\n      </div>\n    `,\n    providers: [NUMBER_PICKER_VALUE_ACCESSOR],\n    host: {\n        '[class.has-error]': '!isValid()'\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'valid': [{ type: Input },],\n'valueChange': [{ type: Output },],\n'value': [{ type: Input, args: ['value', ] },],\n'min': [{ type: Input },],\n'max': [{ type: Input },],\n'step': [{ type: Input },],\n'disabled': [{ type: Input },],\n};\n}\n\nfunction NumberPickerComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nNumberPickerComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNumberPickerComponent.ctorParameters;\n/** @type {?} */\nNumberPickerComponent.propDecorators;\n/** @type {?} */\nNumberPickerComponent.prototype._min;\n/** @type {?} */\nNumberPickerComponent.prototype._max;\n/** @type {?} */\nNumberPickerComponent.prototype._step;\n/** @type {?} */\nNumberPickerComponent.prototype._disabled;\n/** @type {?} */\nNumberPickerComponent.prototype._value;\n/** @type {?} */\nNumberPickerComponent.prototype._propagateChange;\n/** @type {?} */\nNumberPickerComponent.prototype.valid;\n/** @type {?} */\nNumberPickerComponent.prototype.valueChange;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\n\nimport { NumberPickerComponent } from './number-picker.component';\nexport class NumberPickerModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        CommonModule,\n        FormsModule\n    ],\n    exports: [NumberPickerComponent],\n    declarations: [NumberPickerComponent]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction NumberPickerModule_tsickle_Closure_declarations() {\n/** @type {?} */\nNumberPickerModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNumberPickerModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive } from '@angular/core';\nexport class PageHeaderCustomMenuDirective { static decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{ \n    selector: '[uxPageHeaderCustomMenu]' \n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction PageHeaderCustomMenuDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nPageHeaderCustomMenuDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nPageHeaderCustomMenuDirective.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable, Inject } from '@angular/core';\nimport { DOCUMENT } from '@angular/platform-browser';\nimport { ColorValueSet, ColorClassSet } from './color.service';\nexport class ColorService {\nprivate _html: string;\nprivate _element: HTMLElement;\nprivate _colors: ThemeColors;\nprivate _colorSet: any = colorSets.keppel;\n/**\n * @param {?} document\n */\nconstructor( document: Document) {\n        if (this._colorSet.colorClassSet) {\n            this.setColors();\n        } else {\n            for (let key in this._colorSet.colorValueSet) {\n                this._colors[key] = this.getColorValueByHex(this._colorSet.colorValueSet[key]);\n            }\n        }\n    }\n/**\n * @return {?}\n */\nprivate setColors() {\n\n        this._html = '';\n\n        for (let /** @type {?} */ key in this._colorSet.colorClassSet) {\n            this._html += '<div class=\"' + this._colorSet.colorClassSet[key] + '-color\"></div>';\n        }\n\n        this._element = document.createElement('div');\n        this._element.className = 'color-chart';\n        this._element.innerHTML = this._html;\n\n        document.body.appendChild(this._element);\n\n        this._colors = {};\n\n        for (let /** @type {?} */ key in this._colorSet.colorClassSet) {\n            this._colors[key] = this.getColorValue(this._colorSet.colorClassSet[key]);\n        }\n\n        this._element.parentNode.removeChild(this._element);\n    }\n/**\n * @param {?} color\n * @return {?}\n */\nprivate getColorValueByHex(color: string): ThemeColor {\n        const /** @type {?} */ hex = color.replace('#', '');\n\n        const /** @type {?} */ r = parseInt(hex.substring(0, 2), 16).toString();\n        const /** @type {?} */ g = parseInt(hex.substring(2, 4), 16).toString();\n        const /** @type {?} */ b = parseInt(hex.substring(4, 6), 16).toString();\n\n        return new ThemeColor(r, g, b, '1');\n    }\n/**\n * @param {?} color\n * @return {?}\n */\nprivate getColorValue(color: ColorIdentifier): ThemeColor {\n\n        const /** @type {?} */ target = this._element.querySelector('.' + this._colorSet.colorClassSet[color] + '-color');\n\n        if (!target) {\n            throw new Error('Invalid color');\n        }\n\n        const /** @type {?} */ colorValue = window.getComputedStyle(target).backgroundColor;\n\n        const /** @type {?} */ rgba = colorValue.match(/^rgba?\\((\\d+),\\s*(\\d+),\\s*(\\d+)(?:,\\s*(\\d+(?:\\.\\d+)?))?\\)$/);\n\n        return new ThemeColor(rgba[1], rgba[2], rgba[3], rgba[4]);\n    }\n/**\n * @param {?} color\n * @return {?}\n */\ngetColor(color: ColorIdentifier): ThemeColor {\n        const /** @type {?} */ themeColor = this._colors[color.toLowerCase()];\n        return new ThemeColor(themeColor.getRed(), themeColor.getGreen(), themeColor.getBlue(), themeColor.getAlpha());\n    }\n/**\n * @return {?}\n */\ngetColorSet() {\n        return this._colorSet;\n    }\n/**\n * @param {?} colorSet\n * @return {?}\n */\nsetColorSet(colorSet: ColorSet) {\n        this._colorSet = colorSet;\n        this._colors = {};\n\n        if (this._colorSet.colorClassSet) {\n            this.setColors();\n        } else {\n            for (let /** @type {?} */ key in this._colorSet.colorValueSet) {\n                this._colors[key] = this.getColorValueByHex(this._colorSet.colorValueSet[key]);\n            }\n        }\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nresolve(value: string): string {\n        if (!value) {\n            return;\n        }\n        \n        const /** @type {?} */ colorName = this.resolveColorName(value);\n        \n        for (let /** @type {?} */ color in this._colors) {\n            if (colorName === color.toLowerCase()) {\n                return this.getColor(colorName).toRgba();\n            }\n        }\n\n        return value;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nresolveColorName(value: string): string {\n        return value.replace(/\\s+/g, '-').toLowerCase();\n    }\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Document, decorators: [{ type: Inject, args: [DOCUMENT, ] }, ]},\n];\n}\n\nfunction ColorService_tsickle_Closure_declarations() {\n/**\n * @nocollapse\n * @type {?}\n */\nColorService.ctorParameters;\n/** @type {?} */\nColorService.prototype._html;\n/** @type {?} */\nColorService.prototype._element;\n/** @type {?} */\nColorService.prototype._colors;\n/** @type {?} */\nColorService.prototype._colorSet;\n}\n\nexport class ThemeColor {\nprivate _r: string;\nprivate _g: string;\nprivate _b: string;\nprivate _a: string;\n/**\n * @param {?} r\n * @param {?} g\n * @param {?} b\n * @param {?} a\n */\nconstructor(r: string, g: string, b: string, a: string) {\n        this._r = r;\n        this._g = g;\n        this._b = b;\n        this._a = a === undefined ? '1' : a;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nstatic parse(value: string): ThemeColor {\n        let /** @type {?} */ r, /** @type {?} */ g, /** @type {?} */ b, /** @type {?} */ a = '1';\n\n        const /** @type {?} */ rgbaPattern = /^rgba?\\((\\d+),\\s*(\\d+),\\s*(\\d+)(?:,\\s*(\\d+(?:\\.\\d+)?))?\\)$/;\n        const /** @type {?} */ shortHexPattern = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;\n        const /** @type {?} */ longHexPattern = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/;\n\n        const /** @type {?} */ rgbaMatch = value.match(rgbaPattern);\n        const /** @type {?} */ shortHexMatch = value.match(shortHexPattern);\n        const /** @type {?} */ longHexMatch = value.match(longHexPattern);\n\n        if (rgbaMatch) {\n            r = rgbaMatch[1];\n            g = rgbaMatch[2];\n            b = rgbaMatch[3];\n            a = rgbaMatch[4] ? rgbaMatch[4] : '1';\n        } else if (longHexMatch) {\n            r = parseInt(longHexMatch[1], 16).toString();\n            g = parseInt(longHexMatch[2], 16).toString();\n            b = parseInt(longHexMatch[3], 16).toString();\n        } else if (shortHexMatch) {\n            r = parseInt(shortHexMatch[1] + shortHexMatch[1], 16).toString();\n            g = parseInt(shortHexMatch[2] + shortHexMatch[2], 16).toString();\n            b = parseInt(shortHexMatch[3] + shortHexMatch[3], 16).toString();\n        } else {\n            throw new Error(`Cannot parse color - ${value} is not a valid color.`);\n        }\n        return new ThemeColor(r, g, b, a);\n    }\n/**\n * @return {?}\n */\ntoHex() {\n        let /** @type {?} */ red = parseInt(this._r).toString(16);\n        let /** @type {?} */ green = parseInt(this._g).toString(16);\n        let /** @type {?} */ blue = parseInt(this._b).toString(16);\n\n        if (red.length < 2) {\n            red = '0' + red;\n        }\n        if (green.length < 2) {\n            green = '0' + green;\n        }\n        if (blue.length < 2) {\n            blue = '0' + blue;\n        }\n\n        return '#' + red + green + blue;\n    }\n/**\n * @return {?}\n */\ntoRgb() {\n        return 'rgb(' + this._r + ', ' + this._g + ', ' + this._b + ')';\n    }\n/**\n * @return {?}\n */\ntoRgba() {\n        return 'rgba(' + this._r + ', ' + this._g + ', ' + this._b + ', ' + this._a + ')';\n    }\n/**\n * @return {?}\n */\ngetRed() {\n        return this._r;\n    }\n/**\n * @return {?}\n */\ngetGreen() {\n        return this._g;\n    }\n/**\n * @return {?}\n */\ngetBlue() {\n        return this._b;\n    }\n/**\n * @return {?}\n */\ngetAlpha() {\n        return this._a;\n    }\n/**\n * @param {?} red\n * @return {?}\n */\nsetRed(red: string) {\n        this._r = red;\n        return this;\n    }\n/**\n * @param {?} green\n * @return {?}\n */\nsetGreen(green: string) {\n        this._g = green;\n        return this;\n    }\n/**\n * @param {?} blue\n * @return {?}\n */\nsetBlue(blue: string) {\n        this._b = blue;\n        return this;\n    }\n/**\n * @param {?} alpha\n * @return {?}\n */\nsetAlpha(alpha: string | number) {\n        this._a = alpha.toString();\n        return this;\n    }\n}\n\nfunction ThemeColor_tsickle_Closure_declarations() {\n/** @type {?} */\nThemeColor.prototype._r;\n/** @type {?} */\nThemeColor.prototype._g;\n/** @type {?} */\nThemeColor.prototype._b;\n/** @type {?} */\nThemeColor.prototype._a;\n}\n\n\nexport const /** @type {?} */ colorSets = {\n    keppel: {\n        colorClassSet: {\n            'primary': 'primary',\n            'accent': 'accent',\n            'secondary': 'secondary',\n            'alternate1': 'alternate1',\n            'alternate2': 'alternate2',\n            'alternate3': 'alternate3',\n            'vibrant1': 'vibrant1',\n            'vibrant2': 'vibrant2',\n            'grey1': 'grey1',\n            'grey2': 'grey2',\n            'grey3': 'grey3',\n            'grey4': 'grey4',\n            'grey5': 'grey5',\n            'grey6': 'grey6',\n            'grey7': 'grey7',\n            'grey8': 'grey8',\n            'chart1': 'chart1',\n            'chart2': 'chart2',\n            'chart3': 'chart3',\n            'chart4': 'chart4',\n            'chart5': 'chart5',\n            'chart6': 'chart6',\n            'ok': 'ok',\n            'warning': 'warning',\n            'critical': 'critical',\n            'partition1': 'partition1',\n            'partition9': 'partition9',\n            'partition10': 'partition10',\n            'partition11': 'partition11',\n            'partition12': 'partition12',\n            'partition13': 'partition13',\n            'partition14': 'partition14',\n            'social-chart-node': 'social-chart-node',\n            'social-chart-edge': 'social-chart-edge'\n        }\n    },\n    microFocus: {\n        'colorValueSet': {\n            'cerulean': '#1668c1',\n            'aqua': '#29ceff',\n            'aquamarine': '#2fd6c3',\n            'fuchsia': '#c6179d',\n            'indigo': '#7425ad',\n            'dark-blue': '#231ca5',\n            'white': '#ffffff',\n            'slightly-gray': '#f5f7f8',\n            'bright-gray': '#f1f2f3',\n            'gray': '#dcdedf',\n            'silver': '#bdbec0',\n            'dim-gray': '#656668',\n            'dark-gray': '#323435',\n            'black': '#000000',\n            'crimson-negative': '#e5004c',\n            'apricot': '#f48b34',\n            'yellow': '#fcdb1f',\n            'green-positive': '#1aac60',\n            'ultramarine': '#3939c6',\n            'skyblue': '#00abf3',\n            'pale-aqua': '#43e4ff',\n            'pale-green': '#1ffbba',\n            'lime': '#75da4d',\n            'orange': '#ffce00',\n            'magenta': '#eb23c2',\n            'pale-purple': '#ba47e2',\n            'dark-ultramarine': '#271782',\n            'steelblue': '#014272',\n            'arctic-blue': '#0b8eac',\n            'emerald': '#00a989',\n            'olive': '#5bba36',\n            'goldenrod': '#ffb000',\n            'purple': '#9b1e83',\n            'pale-eggplant': '#5216ac',\n            'red': '#ff454f',\n            'pale-amber': '#ffb24d',\n            'pale-lemon': '#fde159',\n            'pale-emerald': '#33c180',\n            'plum': '#b21646',\n            'copper': '#e57828',\n            'amber': '#ffc002',\n            'leaf-green': '#118c4f',\n            'primary': '#0073e7',\n            'accent': '#7425ad',\n            'secondary': '#ffffff',\n            'alternate1': '#29ceff',\n            'alternate2': '#2fd6c3',\n            'alternate3': '#c6179d',\n            'vibrant1': '#43e4ff',\n            'vibrant2': '#ffce00',\n            'grey1': '#000000',\n            'grey2': '#323435',\n            'grey3': '#656668',\n            'grey4': '#bdbec0',\n            'grey5': '#dcdedf',\n            'grey6': '#f1f2f3',\n            'grey7': '#f5f7f8',\n            'grey8': '#ffffff',\n            'chart1': '#3939c6',\n            'chart2': '#00abf3',\n            'chart3': '#75da4d',\n            'chart4': '#ffce00',\n            'chart5': '#eb23c2',\n            'chart6': '#ba47e2',\n            'ok': '#1aac60',\n            'warning': '#f48b34',\n            'critical': 'e5004c',\n            'partition1': '#7425ad',\n            'partition9': '#5216ac',\n            'partition10': '#5bba36',\n            'partition11': '#014272',\n            'partition12': '#ffb000',\n            'partition13': '#bdbec0',\n            'partition14': '#271782',\n            'social-chart-node': '#ff00ff',\n            'social-chart-edge': '#ff00ff'\n        }\n    }\n};\n\nexport interface ThemeColors {\n    [name: string]: ThemeColor;\n}\n\nexport interface ColorSet {\n    colorClassSet?: ColorClassSet;\n    colorValueSet?: ColorValueSet;\n}\n\nexport interface ColorClassSet {\n    [name: string]: string;\n}\n\nexport interface ColorValueSet {\n    [name: string]: string;\n}\n\nexport type ColorIdentifier = string;\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\n\nimport { ColorService } from './color.service';\nexport class ColorServiceModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [],\n    exports: [],\n    declarations: [],\n    providers: [ColorService],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ColorServiceModule_tsickle_Closure_declarations() {\n/** @type {?} */\nColorServiceModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nColorServiceModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, EventEmitter, Input, Output, ContentChildren, QueryList, TemplateRef } from '@angular/core';\nimport { Breadcrumb } from '../breadcrumbs/index';\nimport { PageHeaderNavigationItem } from './navigation/navigation.component';\nimport { PageHeaderCustomMenuDirective } from './custom-menu/custom-menu.directive';\nimport { ColorService } from '../../services/color/index';\nexport class PageHeaderComponent {\n\n     logo: string;\n     items: PageHeaderNavigationItem[];\n     crumbs: Breadcrumb[];\n     header: string;\n     alignment: 'left' | 'right' | 'center' = 'center';\n     condensed: boolean = false;\n     iconMenus: PageHeaderIconMenu[];\n     backVisible: boolean = true;\n/**\n * @param {?} color\n * @return {?}\n */\nset familyBackground(color: string) {\n        this._familyBackground = this._colorService.resolve(color);\n    }\n/**\n * @return {?}\n */\nget familyBackground(): string {\n        return this._familyBackground;\n    }\n/**\n * @param {?} color\n * @return {?}\n */\nset familyForeground(color: string) {\n        this._familyForeground = this._colorService.resolve(color);\n    }\n/**\n * @return {?}\n */\nget familyForeground(): string {\n        return this._familyForeground;\n    }\n    \n     backClick = new EventEmitter();\n\n     customMenus: QueryList<TemplateRef<any>>;\nprivate _familyBackground: string;\nprivate _familyForeground: string;\n/**\n * @param {?} _colorService\n */\nconstructor(private _colorService: ColorService) {}\n/**\n * @return {?}\n */\ngoBack() {\n        this.backClick.emit();\n    }\n/**\n * @return {?}\n */\ngetCondensedBreadcrumbs(): Breadcrumb[] {\n        if (this.crumbs) {\n\n            let /** @type {?} */ crumbs = this.crumbs.slice();\n            crumbs.push({ title: this.header });\n\n            return crumbs;\n        }\n\n        return [{ title: this.header }];\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-page-header',\n    exportAs: 'ux-page-header',\n    template: `\n      <!-- Display Upper Section when not condensed -->\n      <div class=\"page-header-actions\" *ngIf=\"!condensed\">\n\n          <div class=\"page-header-logo-container\" [hidden]=\"!logo\">\n              <img [attr.src]=\"logo\" class=\"page-header-logo\">\n          </div>\n\n          <div class=\"page-header-navigation\" [ngClass]=\"alignment\">\n\n              <!-- The Top Navigation Options -->\n              <ux-page-header-horizontal-navigation [items]=\"items\"></ux-page-header-horizontal-navigation>\n          </div>\n\n          <div class=\"page-header-icon-menus\">\n              <ng-container *ngFor=\"let menu of customMenus\" [ngTemplateOutlet]=\"menu\"></ng-container>\n\n              <ux-page-header-icon-menu *ngFor=\"let menu of iconMenus\" [menu]=\"menu\"></ux-page-header-icon-menu>\n          </div>\n      </div>\n\n      <!-- Display Lower Section When Not Condensed -->\n      <div class=\"page-header-details\" *ngIf=\"!condensed\">\n\n          <div class=\"page-header-state-container\">\n\n              <div *ngIf=\"backVisible == true\" class=\"page-header-back-button\" (click)=\"goBack()\">\n                  <span class=\"hpe-icon hpe-previous text-primary\"></span>\n              </div>\n\n              <div class=\"page-header-title-container\">\n\n                  <ux-breadcrumbs [crumbs]=\"crumbs\"></ux-breadcrumbs>\n\n                  <h1 class=\"page-header-title\" [style.backgroundColor]=\"familyBackground\" [style.color]=\"familyForeground\">{{ header }}</h1>\n              </div>\n\n          </div>\n\n      </div>\n\n      <!-- Display This Section Optimized for Condensed Mode -->\n      <div class=\"page-header-condensed-content\" *ngIf=\"condensed\">\n\n          <div class=\"page-header-breadcrumbs\">\n              <ux-breadcrumbs [crumbs]=\"getCondensedBreadcrumbs()\"></ux-breadcrumbs>\n          </div>\n\n          <div class=\"page-header-navigation\" [ngClass]=\"alignment\">\n\n              <!-- The Top Navigation Options -->\n              <ux-page-header-horizontal-navigation [items]=\"items\"></ux-page-header-horizontal-navigation>\n          </div>\n\n          <div class=\"page-header-icon-menus\">\n              <ng-container *ngFor=\"let menu of customMenus\" [ngTemplateOutlet]=\"menu\"></ng-container>\n              <ux-page-header-icon-menu *ngFor=\"let menu of iconMenus\" [menu]=\"menu\"></ux-page-header-icon-menu>\n          </div>\n\n      </div>\n    `,\n    host: {\n        '[class.page-header-condensed]': 'condensed'\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ColorService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'logo': [{ type: Input },],\n'items': [{ type: Input },],\n'crumbs': [{ type: Input },],\n'header': [{ type: Input },],\n'alignment': [{ type: Input },],\n'condensed': [{ type: Input },],\n'iconMenus': [{ type: Input },],\n'backVisible': [{ type: Input },],\n'familyBackground': [{ type: Input },],\n'familyForeground': [{ type: Input },],\n'backClick': [{ type: Output },],\n'customMenus': [{ type: ContentChildren, args: [PageHeaderCustomMenuDirective, { read: TemplateRef }, ] },],\n};\n}\n\nfunction PageHeaderComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nPageHeaderComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nPageHeaderComponent.ctorParameters;\n/** @type {?} */\nPageHeaderComponent.propDecorators;\n/** @type {?} */\nPageHeaderComponent.prototype.logo;\n/** @type {?} */\nPageHeaderComponent.prototype.items;\n/** @type {?} */\nPageHeaderComponent.prototype.crumbs;\n/** @type {?} */\nPageHeaderComponent.prototype.header;\n/** @type {?} */\nPageHeaderComponent.prototype.alignment;\n/** @type {?} */\nPageHeaderComponent.prototype.condensed;\n/** @type {?} */\nPageHeaderComponent.prototype.iconMenus;\n/** @type {?} */\nPageHeaderComponent.prototype.backVisible;\n/** @type {?} */\nPageHeaderComponent.prototype.backClick;\n/** @type {?} */\nPageHeaderComponent.prototype.customMenus;\n/** @type {?} */\nPageHeaderComponent.prototype._familyBackground;\n/** @type {?} */\nPageHeaderComponent.prototype._familyForeground;\n/** @type {?} */\nPageHeaderComponent.prototype._colorService;\n}\n\n\nexport interface PageHeaderIconMenu {\n    icon: string;\n    badge?: number | string;\n    select?: (menu: PageHeaderIconMenu) => void;\n    dropdown?: PageHeaderIconMenuDropdownItem[];\n}\n\nexport interface PageHeaderIconMenuDropdownItem {\n    icon?: string;\n    title: string;\n    subtitle?: string;\n    header?: boolean;\n    divider?: boolean;\n    select?: () => void;\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Input } from '@angular/core';\nimport { PageHeaderIconMenu, PageHeaderIconMenuDropdownItem } from '../page-header.component';\nexport class PageHeaderIconMenuComponent {\n\n     menu: PageHeaderIconMenu;\n/**\n * @param {?} item\n * @return {?}\n */\nselect(item: PageHeaderIconMenu | PageHeaderIconMenuDropdownItem) {\n        if (item.select) {\n            item.select.call(item, item);\n        }\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-page-header-icon-menu',\n    template: `\n      <div class=\"page-header-icon-menu\" dropdown dropdownToggle placement=\"bottom right\">\n\n          <a class=\"page-header-icon-menu-button\" (click)=\"select(menu)\">\n              <i class=\"hpe-icon\" [ngClass]=\"menu.icon\"></i>\n              <span class=\"label label-primary\" *ngIf=\"menu?.badge\">{{ menu.badge }}</span>\n          </a>\n\n          <ul *dropdownMenu class=\"dropdown-menu\" role=\"menu\">\n\n              <li role=\"menuitem\" *ngFor=\"let dropdown of menu?.dropdown\" [class.dropdown-header]=\"dropdown.header\" [class.dropdown-divider]=\"dropdown.divider\">\n\n                  <span class=\"font-bold\" *ngIf=\"dropdown.header\">{{ dropdown.title }}</span>\n\n                  <a class=\"dropdown-item\" *ngIf=\"!dropdown.header\" (click)=\"select(dropdown)\">\n                      <i class=\"hpe-icon hp-fw text-muted\" [ngClass]=\"dropdown.icon\"></i>\n                      {{ dropdown.title }}\n                      <span class=\"pull-right text-muted small\" *ngIf=\"dropdown.subtitle\">{{ dropdown.subtitle }}</span>\n                  </a>\n              </li>\n\n          </ul>\n      </div>\n    `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'menu': [{ type: Input },],\n};\n}\n\nfunction PageHeaderIconMenuComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nPageHeaderIconMenuComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nPageHeaderIconMenuComponent.ctorParameters;\n/** @type {?} */\nPageHeaderIconMenuComponent.propDecorators;\n/** @type {?} */\nPageHeaderIconMenuComponent.prototype.menu;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { BsDropdownDirective } from 'ngx-bootstrap/dropdown';\nimport { Subject } from 'rxjs/Subject';\nimport'rxjs/add/operator/debounceTime';\nimport { PageHeaderNavigationDropdownItem } from '../navigation.component';\nexport class PageHeaderNavigationDropdownItemComponent {\n\n     item: PageHeaderNavigationDropdownItem;\n     onSelect: EventEmitter<PageHeaderNavigationDropdownItem> = new EventEmitter<PageHeaderNavigationDropdownItem>();\n\n    dropdownOpen: boolean = false;\nprivate _dropdownEvents: Subject<boolean> = new Subject<boolean>();\nconstructor() {\n\n        // subscribe to stream with a debounce (a small debounce is all that is required)\n        this._dropdownEvents.debounceTime(1).subscribe(visible => this.dropdownOpen = visible);\n    }\n/**\n * @param {?} item\n * @param {?=} parentItem\n * @return {?}\n */\nselectItem(item: PageHeaderNavigationDropdownItem, parentItem?: PageHeaderNavigationDropdownItem) {\n\n        // clicking on an item with children then return\n        if (item.children) {\n            return;\n        }\n\n        // emit the selected item in an event\n        this.onSelect.emit(item);\n\n        // select the current item\n        item.selected = true;\n\n        // now also select the parent menu\n        if (parentItem) {\n            parentItem.selected = true;\n        }\n    }\n/**\n * @return {?}\n */\nhoverStart() {\n        this._dropdownEvents.next(true);\n    }\n/**\n * @return {?}\n */\nhoverLeave() {\n        this._dropdownEvents.next(false);\n    }\n/**\n * @return {?}\n */\nclose() {\n        this.dropdownOpen = false;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-page-header-horizontal-navigation-dropdown-item',\n    template: `\n      <div role=\"menu-item\" dropdown [isOpen]=\"dropdownOpen\" container=\"body\" placement=\"right\" [isDisabled]=\"!item.children\" (mouseenter)=\"hoverStart()\"\n          (mouseleave)=\"hoverLeave()\" #subMenu=\"bs-dropdown\">\n\n          <!-- Show the menu item and the arrow if there are children -->\n          <a class=\"dropdown-item\" tabindex=\"0\" [class.selected]=\"item.selected\" (keyup.enter)=\"selectItem(item); subMenu.toggle()\" (click)=\"selectItem(item)\">\n              <span class=\"dropdown-item-title\">{{ item.title }}</span>\n              <span class=\"dropdown-item-icon hpe-icon hpe-next\" *ngIf=\"item.children\"></span>\n          </a>\n\n          <!-- Allow another level of menu items -->\n          <ul *dropdownMenu class=\"dropdown-menu horizontal-navigation-dropdown-submenu\" role=\"menu\" (mouseenter)=\"hoverStart()\" (mouseleave)=\"hoverLeave()\">\n\n              <li role=\"menuitem\" *ngFor=\"let subItem of item.children\" (click)=\"selectItem(subItem, item)\" (keyup.enter)=\"selectItem(subItem, item)\">\n                  <a class=\"dropdown-item\" tabindex=\"0\" [class.selected]=\"subItem.selected\">\n                      <span class=\"dropdown-item-title\">{{ subItem.title }}</span>\n                  </a>\n              </li>\n          </ul>\n      </div>\n    `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'item': [{ type: Input },],\n'onSelect': [{ type: Output },],\n};\n}\n\nfunction PageHeaderNavigationDropdownItemComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nPageHeaderNavigationDropdownItemComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nPageHeaderNavigationDropdownItemComponent.ctorParameters;\n/** @type {?} */\nPageHeaderNavigationDropdownItemComponent.propDecorators;\n/** @type {?} */\nPageHeaderNavigationDropdownItemComponent.prototype.item;\n/** @type {?} */\nPageHeaderNavigationDropdownItemComponent.prototype.onSelect;\n/** @type {?} */\nPageHeaderNavigationDropdownItemComponent.prototype.dropdownOpen;\n/** @type {?} */\nPageHeaderNavigationDropdownItemComponent.prototype._dropdownEvents;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Input, ViewChild, ViewChildren, QueryList, OnInit, Output, EventEmitter, ElementRef } from '@angular/core';\nimport { BsDropdownDirective } from 'ngx-bootstrap/dropdown';\nimport { PageHeaderNavigationDropdownItemComponent } from '../navigation-dropdown-item/navigation-dropdown-item.component';\nimport { PageHeaderNavigationItem, PageHeaderNavigationDropdownItem } from '../navigation.component';\nexport class PageHeaderNavigationItemComponent implements OnInit {\n\n     menu: BsDropdownDirective;\n     dropdownComponents: QueryList<PageHeaderNavigationDropdownItemComponent>;\n\n     item: PageHeaderNavigationItem;\n     onSelect: EventEmitter<PageHeaderNavigationDropdownItem> = new EventEmitter<PageHeaderNavigationDropdownItem>();\n/**\n * @param {?} elementRef\n */\nconstructor(public elementRef: ElementRef) {}\n/**\n * @return {?}\n */\nngOnInit() {\n        this.menu.onHidden.subscribe(() => this.dropdownComponents.forEach(dropdown => dropdown.close()));\n    }\n/**\n * @return {?}\n */\nselectItem() {\n\n        // if the item has children then do nothing at this stage \n        if (this.item.children) {\n            return;\n        }\n\n        // otherwise select the current item\n        this.onItemSelect(this.item);\n    }\n/**\n * @param {?} item\n * @return {?}\n */\nonItemSelect(item: PageHeaderNavigationItem | PageHeaderNavigationDropdownItem) {\n        this.onSelect.emit(item);\n\n        // select the current item\n        this.item.selected = true;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-page-header-horizontal-navigation-item',\n    template: `\n      <div class=\"horizontal-navigation-button\" dropdown dropdownToggle placement=\"bottom left\" [isDisabled]=\"!item?.children\" tabindex=\"0\" container=\"body\"\n          #menu=\"bs-dropdown\" (keyup.enter)=\"menu.toggle()\" [class.selected]=\"item?.selected\" (click)=\"selectItem()\">\n\n          <span class=\"hpe-icon navigation-item-icon\" *ngIf=\"item.icon\" [ngClass]=\"item?.icon\"></span>\n          <span class=\"navigation-item-label\">{{ item?.title }}</span>\n          <span class=\"hpe-icon hpe-down\" *ngIf=\"item?.children\"></span>\n\n          <div *dropdownMenu class=\"dropdown-menu horizontal-navigation-dropdown-menu\" role=\"menu\">\n              <ux-page-header-horizontal-navigation-dropdown-item *ngFor=\"let item of item?.children\" [item]=\"item\" (onSelect)=\"onItemSelect($event)\"></ux-page-header-horizontal-navigation-dropdown-item>\n          </div>\n\n      </div>\n    `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'menu': [{ type: ViewChild, args: ['menu', ] },],\n'dropdownComponents': [{ type: ViewChildren, args: [PageHeaderNavigationDropdownItemComponent, ] },],\n'item': [{ type: Input },],\n'onSelect': [{ type: Output },],\n};\n}\n\nfunction PageHeaderNavigationItemComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nPageHeaderNavigationItemComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nPageHeaderNavigationItemComponent.ctorParameters;\n/** @type {?} */\nPageHeaderNavigationItemComponent.propDecorators;\n/** @type {?} */\nPageHeaderNavigationItemComponent.prototype.menu;\n/** @type {?} */\nPageHeaderNavigationItemComponent.prototype.dropdownComponents;\n/** @type {?} */\nPageHeaderNavigationItemComponent.prototype.item;\n/** @type {?} */\nPageHeaderNavigationItemComponent.prototype.onSelect;\n/** @type {?} */\nPageHeaderNavigationItemComponent.prototype.elementRef;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Input, ViewChildren, QueryList, ElementRef, Renderer2, AfterViewInit } from '@angular/core';\nimport { PageHeaderNavigationItemComponent } from './navigation-item/navigation-item.component';\nimport { ResizeService } from '../../../directives/resize/index';\nexport class PageHeaderNavigationComponent implements AfterViewInit {\n    \n     menuItems: QueryList<PageHeaderNavigationItemComponent>;\n     \n     items: PageHeaderNavigationItem[] = [];\n\n    indicatorVisible: boolean = false;\n    indicatorX: number = 0;\n    indicatorWidth: number = 0;\n/**\n * @param {?} elementRef\n * @param {?} resizeService\n * @param {?} renderer\n */\nconstructor(elementRef: ElementRef, resizeService: ResizeService, renderer: Renderer2) {\n        resizeService.addResizeListener(elementRef.nativeElement, renderer).subscribe(this.updateSelectedIndicator.bind(this));\n    }\n/**\n * @return {?}\n */\nngAfterViewInit(): void {\n        this.updateSelectedIndicator();\n    }\n/**\n * @param {?} item\n * @return {?}\n */\nonSelect(item: PageHeaderNavigationItem): void {\n        \n        if (item.select) {\n            item.select.call(item, item);\n        }\n\n        // deselect all items in all menus\n        this.deselectAll();\n\n        // update the selected indicator\n        this.updateSelectedIndicator();\n    }\n/**\n * @return {?}\n */\ndeselectAll(): void {\n        this.items.forEach(item => this.deselect(item));\n    }\n/**\n * @param {?} navItem\n * @return {?}\n */\ndeselect(navItem: PageHeaderNavigationItem | PageHeaderNavigationDropdownItem): void {\n        \n        // deselect the current item\n        navItem.selected = false;\n\n        // iterate any children and deselect them\n        if (navItem.children) {\n            navItem.children.forEach(item => this.deselect(item));\n        }\n\n        // update the selected indicator\n        this.updateSelectedIndicator();\n    }\n/**\n * @return {?}\n */\nupdateSelectedIndicator(): void {\n\n        setTimeout(() => {\n\n            // find the selected item\n            let /** @type {?} */ selectedItem = this.menuItems.find(item => item.item.selected);\n\n            // determine whether or not to show the indicator\n            this.indicatorVisible = !!selectedItem;\n\n            // set the width of the indicator to match the width of the navigation item\n            if (selectedItem) {\n                let /** @type {?} */ styles = getComputedStyle(selectedItem.elementRef.nativeElement);\n\n                this.indicatorX = selectedItem.elementRef.nativeElement.offsetLeft;\n                this.indicatorWidth = parseInt(styles.getPropertyValue('width'));\n            }\n        });\n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-page-header-horizontal-navigation',\n    template: `\n      <ux-page-header-horizontal-navigation-item *ngFor=\"let item of items\" [item]=\"item\" (onSelect)=\"onSelect($event)\"></ux-page-header-horizontal-navigation-item>\n      <div class=\"selected-indicator\" [style.opacity]=\"indicatorVisible ? 1 : 0\" [style.margin-left.px]=\"indicatorX\" [style.width.px]=\"indicatorWidth\"></div>\n    `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: ResizeService, },\n{type: Renderer2, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'menuItems': [{ type: ViewChildren, args: [PageHeaderNavigationItemComponent, ] },],\n'items': [{ type: Input },],\n};\n}\n\nfunction PageHeaderNavigationComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nPageHeaderNavigationComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nPageHeaderNavigationComponent.ctorParameters;\n/** @type {?} */\nPageHeaderNavigationComponent.propDecorators;\n/** @type {?} */\nPageHeaderNavigationComponent.prototype.menuItems;\n/** @type {?} */\nPageHeaderNavigationComponent.prototype.items;\n/** @type {?} */\nPageHeaderNavigationComponent.prototype.indicatorVisible;\n/** @type {?} */\nPageHeaderNavigationComponent.prototype.indicatorX;\n/** @type {?} */\nPageHeaderNavigationComponent.prototype.indicatorWidth;\n}\n\n\nexport interface PageHeaderNavigationItem {\n    icon?: string;\n    title: string;\n    selected?: boolean;\n    select?: (item: PageHeaderNavigationItem) => void;\n    children?: PageHeaderNavigationDropdownItem[];\n}\n\nexport interface PageHeaderNavigationDropdownItem {\n    title: string;\n    selected?: boolean;    \n    select?: (item: PageHeaderNavigationDropdownItem) => void;\n    children?: PageHeaderNavigationDropdownItem[];\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\n\nimport { PageHeaderComponent } from './page-header.component';\nimport { BreadcrumbsModule } from '../breadcrumbs/index';\nimport { PageHeaderIconMenuComponent } from './icon-menu/icon-menu.component';\nimport { PageHeaderNavigationComponent } from './navigation/navigation.component';\nimport { PageHeaderNavigationItemComponent } from './navigation/navigation-item/navigation-item.component';\nimport { PageHeaderNavigationDropdownItemComponent } from './navigation/navigation-dropdown-item/navigation-dropdown-item.component';\nimport { PageHeaderCustomMenuDirective } from './custom-menu/custom-menu.directive';\nimport { ResizeModule } from '../../directives/resize/index';\nimport { ColorServiceModule } from '../../services/color/index';\nexport class PageHeaderModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        CommonModule,\n        BreadcrumbsModule,\n        ColorServiceModule,\n        ResizeModule,\n        BsDropdownModule.forRoot()\n    ],\n    exports: [ \n        PageHeaderComponent,\n        PageHeaderCustomMenuDirective \n    ],\n    declarations: [ \n        PageHeaderComponent,\n        PageHeaderIconMenuComponent,\n        PageHeaderCustomMenuDirective,\n        PageHeaderNavigationComponent,\n        PageHeaderNavigationItemComponent,\n        PageHeaderNavigationDropdownItemComponent\n    ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction PageHeaderModule_tsickle_Closure_declarations() {\n/** @type {?} */\nPageHeaderModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nPageHeaderModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Input, OnChanges, SimpleChanges } from '@angular/core';\nimport { ColorService } from '../../services/color/index';\nexport class ProgressBarComponent implements OnChanges {\n\n     value: number = 0;\n     max: number = 100;\n     trackColor: string = this.colorService.getColor('grey7').toHex();\n     barColor: string = this.colorService.getColor('accent').toHex();\n\n    percentage: number = 0;\n/**\n * @param {?} colorService\n */\nconstructor(private colorService: ColorService) { }\n/**\n * @param {?} changes\n * @return {?}\n */\nngOnChanges(changes: SimpleChanges): void {\n        this.percentage = (this.value / this.max) * 100;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-progress-bar',\n    template: `\n      <div class=\"progressbar-track\" [style.width.%]=\"percentage\" [style.backgroundColor]=\"barColor\">\n          <ng-content></ng-content>\n      </div>\n    `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ColorService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'value': [{ type: Input },],\n'max': [{ type: Input },],\n'trackColor': [{ type: Input },],\n'barColor': [{ type: Input },],\n};\n}\n\nfunction ProgressBarComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nProgressBarComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nProgressBarComponent.ctorParameters;\n/** @type {?} */\nProgressBarComponent.propDecorators;\n/** @type {?} */\nProgressBarComponent.prototype.value;\n/** @type {?} */\nProgressBarComponent.prototype.max;\n/** @type {?} */\nProgressBarComponent.prototype.trackColor;\n/** @type {?} */\nProgressBarComponent.prototype.barColor;\n/** @type {?} */\nProgressBarComponent.prototype.percentage;\n/** @type {?} */\nProgressBarComponent.prototype.colorService;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\n\nimport { ProgressBarComponent } from './progress-bar.component';\nimport { ColorServiceModule } from '../../services/color/index';\nexport class ProgressBarModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [ColorServiceModule],\n    exports: [ProgressBarComponent],\n    declarations: [ProgressBarComponent]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ProgressBarModule_tsickle_Closure_declarations() {\n/** @type {?} */\nProgressBarModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nProgressBarModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Input, forwardRef, HostListener, Output, EventEmitter } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\n\nexport const /** @type {?} */ RADIOBUTTON_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => RadioButtonComponent),\n    multi: true\n};\nexport class RadioButtonComponent implements ControlValueAccessor {\n\n     id: string;\n     simplified: boolean = false;\n     disabled: boolean = false;\n     name: string = '';\n     clickable: boolean = true;\n     option: any;\n     valueChange: EventEmitter<any> = new EventEmitter<any>();\n/**\n * @return {?}\n */\nget value() {\n        return this._value;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset value(value: boolean) {\n        this._value = value;\n\n        // invoke change event\n        this.valueChange.emit(this._value);\n\n        // call callback\n        this.onChangeCallback(this._value);\n    }\nprivate _value: any = false;\n\n    onTouchedCallback: () => void = () => { };\n    onChangeCallback: (_: any) => void = () => { };\n/**\n * @return {?}\n */\ncheckItem() {\n\n        if (this.disabled === true || this.clickable === false) {\n            return;\n        }\n\n        // toggle the checked state\n        this.value = this.option;\n\n        // call callback\n        this.onChangeCallback(this.value);\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nkeyDown(event: KeyboardEvent) {\n\n        // then toggle the checkbox\n        this.checkItem();\n\n        // prevent default browser behavior\n        event.stopPropagation();\n        event.preventDefault();\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nwriteValue(value: boolean) {\n        if (value !== this._value) {\n            this._value = value;\n        }\n    }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnChange(fn: any) {\n        this.onChangeCallback = fn;\n    }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnTouched(fn: any) {\n        this.onTouchedCallback = fn;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-radio-button',\n    template: `\n      <div class=\"ux-radio-button\" tabindex=\"0\"\n          [class.ux-checked]=\"value === option\"\n          [class.ux-simplified]=\"simplified === true\"\n          [class.ux-disabled]=\"disabled === true\"\n          (keydown.space)=\"keyDown($event)\">\n\n          <input type=\"radio\" role=\"radio\" tabindex=\"-1\"\n              [name]=\"name\" \n              [checked]=\"value === option\" \n              [disabled]=\"disabled\"\n              [value]=\"option\"\n              [id]=\"id\" />\n        \n      </div>\n\n      <div class=\"ux-radio-button-content\">\n          <ng-content></ng-content>\n      </div>\n    `,\n    providers: [RADIOBUTTON_VALUE_ACCESSOR]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'id': [{ type: Input },],\n'simplified': [{ type: Input },],\n'disabled': [{ type: Input },],\n'name': [{ type: Input },],\n'clickable': [{ type: Input },],\n'option': [{ type: Input },],\n'valueChange': [{ type: Output },],\n'value': [{ type: Input },],\n'checkItem': [{ type: HostListener, args: ['click', ] },],\n};\n}\n\nfunction RadioButtonComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nRadioButtonComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nRadioButtonComponent.ctorParameters;\n/** @type {?} */\nRadioButtonComponent.propDecorators;\n/** @type {?} */\nRadioButtonComponent.prototype.id;\n/** @type {?} */\nRadioButtonComponent.prototype.simplified;\n/** @type {?} */\nRadioButtonComponent.prototype.disabled;\n/** @type {?} */\nRadioButtonComponent.prototype.name;\n/** @type {?} */\nRadioButtonComponent.prototype.clickable;\n/** @type {?} */\nRadioButtonComponent.prototype.option;\n/** @type {?} */\nRadioButtonComponent.prototype.valueChange;\n/** @type {?} */\nRadioButtonComponent.prototype._value;\n/** @type {?} */\nRadioButtonComponent.prototype.onTouchedCallback;\n/** @type {?} */\nRadioButtonComponent.prototype.onChangeCallback;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport {FormsModule} from '@angular/forms';\n\nimport { RadioButtonComponent } from './radiobutton.component';\nexport class RadioButtonModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [FormsModule],\n    exports: [RadioButtonComponent],\n    declarations: [RadioButtonComponent]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction RadioButtonModule_tsickle_Closure_declarations() {\n/** @type {?} */\nRadioButtonModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nRadioButtonModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs/Subject';\nimport { SearchBuilderQuery } from './interfaces/query.interface';\nimport { SearchBuilderGroupQuery } from './interfaces/group-query.interface';\nimport { SearchBuilderComponentDefinition } from './interfaces/component-definition.interface';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nexport class SearchBuilderService {\n\n  query: SearchBuilderQuery = {};\n  queryChange: Subject<SearchBuilderQuery> = new Subject<SearchBuilderQuery>();\n  validationChange: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(true);\nprivate _componentId: number = 0;\nprivate _components: SearchBuilderComponentDefinition[] = [];\nprivate _validation: { [key: number]: boolean } = {};\n/**\n * Add a component to the internal list of components\n * @param {?} component\n * @return {?}\n */\nregisterComponent(component: SearchBuilderComponentDefinition): void {\n\n    // ensure there are no components with a matching name\n    if (this._components.find(cmp => cmp.name === component.name)) {\n      throw new Error(`Search builder components must have a unique name. The name ${component.name} has already been used.`);\n    }\n\n    // if unique then add the component to the list\n    this._components.push(component);\n  }\n/**\n * Bulk registration of components\n * (Just a helper method)\n * @param {?} components\n * @return {?}\n */\nregisterComponents(components: SearchBuilderComponentDefinition[]): void {\n    components.forEach(component => this.registerComponent(component));\n  }\n/**\n * Get a registered component class\n * @param {?} name\n * @return {?}\n */\ngetComponent(name: string): any {\n\n    // find the component\n    const /** @type {?} */ component = this._components.find(cmp => cmp.name === name);\n\n    // if there is no match throw an exception\n    if (!component) {\n      throw new Error(`No search build component with the name ${name} exists`);\n    }\n\n    // ensure config is defined - at least to an empty object\n    component.config = component.config || {};\n\n    return component;\n  }\n/**\n * Update the internal search query state\n * note that the query will be immutable\n * @param {?} query\n * @return {?}\n */\nsetQuery(query: SearchBuilderQuery): void {\n    this.query = Object.assign({}, query);\n  }\n/**\n * Return the current query state\n * @return {?}\n */\ngetQuery(): SearchBuilderQuery {\n    return this.query;\n  }\n/**\n * Trigger the observable to indicate the query has been updated\n * @return {?}\n */\nqueryHasChanged(): void {\n    this.queryChange.next(this.query);\n  }\n/**\n * Store the validation state of the query\n * @param {?} id\n * @param {?} valid\n * @return {?}\n */\nsetValid(id: number, valid: boolean): void {\n\n    // store the state for this specific component\n    this._validation[id] = valid;\n\n    // evaluate the entire validation state\n    this.validationChange.next(!Object.keys(this._validation).some(key => !this._validation[key]));\n  }\n/**\n * Generate a unique id for each component\n * @return {?}\n */\ngenerateComponentId(): number {\n    return this._componentId++;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction SearchBuilderService_tsickle_Closure_declarations() {\n/** @type {?} */\nSearchBuilderService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSearchBuilderService.ctorParameters;\n/** @type {?} */\nSearchBuilderService.prototype.query;\n/** @type {?} */\nSearchBuilderService.prototype.queryChange;\n/** @type {?} */\nSearchBuilderService.prototype.validationChange;\n/** @type {?} */\nSearchBuilderService.prototype._componentId;\n/** @type {?} */\nSearchBuilderService.prototype._components;\n/** @type {?} */\nSearchBuilderService.prototype._validation;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable } from '@angular/core';\nimport { SearchBuilderService } from '../search-builder.service';\nimport { SearchBuilderGroupQuery } from '../interfaces/group-query.interface';\nimport { SearchBuilderQuery } from '../interfaces/query.interface';\nexport class SearchBuilderGroupService {\nprivate _id: string;\n/**\n * @param {?} _searchBuilderService\n */\nconstructor(private _searchBuilderService: SearchBuilderService) { }\n/**\n * Initialise the group by defining an id\n * @param {?} id\n * @return {?}\n */\ninit(id: string): void {\n    // store the name of the group\n    this._id = id;\n\n    // create the entry in the query object if it doesn't exist\n    if (!this._searchBuilderService.query[this._id]) {\n\n      // create the section\n      this._searchBuilderService.query[this._id] = [];\n\n      // emit the changes after the initial setup\n      setTimeout(() => this._searchBuilderService.queryHasChanged());\n    }\n  }\n/**\n * Remove a field from the search builder query\n * @param {?} field\n * @return {?}\n */\nremove(field: SearchBuilderGroupQuery): void {\n    // get the query for this group\n    const /** @type {?} */ query = this.getQuery();\n\n    // remove the field from the array\n    query.splice(query.indexOf(field), 1);\n  }\n/**\n * Get the query for this specific search group\n * @return {?}\n */\ngetQuery(): SearchBuilderGroupQuery[] {\n    return this._searchBuilderService.query[this._id] ? this._searchBuilderService.query[this._id] : [];\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: SearchBuilderService, },\n];\n}\n\nfunction SearchBuilderGroupService_tsickle_Closure_declarations() {\n/** @type {?} */\nSearchBuilderGroupService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSearchBuilderGroupService.ctorParameters;\n/** @type {?} */\nSearchBuilderGroupService.prototype._id;\n/** @type {?} */\nSearchBuilderGroupService.prototype._searchBuilderService;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, OnInit, Input, Output, EventEmitter, TemplateRef } from '@angular/core';\nimport { SearchBuilderGroupService } from './search-builder-group.service';\nimport { SearchBuilderService } from '../search-builder.service';\nimport { SearchBuilderGroupQuery } from '../interfaces/group-query.interface';\nexport class SearchBuilderGroupComponent implements OnInit {\n\n   id: string;\n   header: string;\n   operator: SearchBuilderGroupOperator = 'and';\n   addText: string = 'Add a field';\n   placeholder: TemplateRef<any>;\n   showPlaceholder: boolean = false;\n\n   add: EventEmitter<MouseEvent> = new EventEmitter<MouseEvent>();\n   remove: EventEmitter<SearchBuilderGroupQuery> = new EventEmitter<SearchBuilderGroupQuery>();\n/**\n * @param {?} searchBuilderGroupService\n * @param {?} _searchBuilderService\n */\nconstructor(public searchBuilderGroupService: SearchBuilderGroupService,\nprivate _searchBuilderService: SearchBuilderService) { }\n/**\n * @return {?}\n */\nngOnInit(): void {\n\n    // ensure we have a name otherwise throw an error\n    if (!this.id) {\n      throw new Error('Search builder group must have a name attribute.');\n    }\n\n    // otherwise register the group\n    this.searchBuilderGroupService.init(this.id);\n  }\n/**\n * @param {?} field\n * @return {?}\n */\nremoveField(field: SearchBuilderGroupQuery): void {\n    this.searchBuilderGroupService.remove(field);\n    this.remove.emit(field);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'ux-search-builder-group',\n  template: `\n    <h4 class=\"search-group-title\">{{ header }}</h4>\n\n    <main class=\"search-group-content\">\n\n      <section class=\"search-group-operator search-group-operator-{{ operator }}\" [class.hidden-operator]=\"searchBuilderGroupService.getQuery().length < 2\">{{ operator }}</section>\n\n      <section class=\"search-group-items\">\n\n        <div class=\"search-group-item-container\" *ngFor=\"let field of searchBuilderGroupService.getQuery()\">\n\n          <div class=\"search-group-item\">\n            <ng-container *uxSearchBuilderOutlet=\"field.type; context: field\"></ng-container>\n          </div>\n\n          <div class=\"search-group-item-remove\" (click)=\"removeField(field)\">\n            <span class=\"hpe-icon hpe-close\"></span>\n          </div>\n        </div>\n\n        <!-- Placeholder Item -->\n        <ng-container *ngIf=\"showPlaceholder\">\n\n          <!-- The Default Placeholder -->\n          <div class=\"search-group-item-container placeholder-item\" *ngIf=\"!placeholder\">\n        \n            <div class=\"search-group-item\">\n              <label class=\"form-label\">New field</label>\n              <div class=\"form-control\"></div>\n            </div>\n  \n          </div>\n\n          <!-- Allow a custom placeholder -->\n        <ng-container *ngTemplateOutlet=\"placeholder\"></ng-container>\n\n        </ng-container>\n\n      </section>\n\n      <section class=\"search-builder-group-add-field\" (click)=\"add.emit($event)\">\n\n        <button type=\"button\" class=\"btn btn-icon btn-circular button-accent\" aria-label=\"Add Field\">\n          <span class=\"hpe-icon hpe-add\" aria-hidden=\"true\"></span>\n        </button>\n\n        <span class=\"search-builder-group-add-field-label\">{{ addText }}</span>\n\n      </section>\n\n    </main>\n\n    <hr class=\"search-builder-group-divider\">\n  `,\n  providers: [SearchBuilderGroupService]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: SearchBuilderGroupService, },\n{type: SearchBuilderService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'id': [{ type: Input },],\n'header': [{ type: Input },],\n'operator': [{ type: Input },],\n'addText': [{ type: Input },],\n'placeholder': [{ type: Input },],\n'showPlaceholder': [{ type: Input },],\n'add': [{ type: Output },],\n'remove': [{ type: Output },],\n};\n}\n\nfunction SearchBuilderGroupComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nSearchBuilderGroupComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSearchBuilderGroupComponent.ctorParameters;\n/** @type {?} */\nSearchBuilderGroupComponent.propDecorators;\n/** @type {?} */\nSearchBuilderGroupComponent.prototype.id;\n/** @type {?} */\nSearchBuilderGroupComponent.prototype.header;\n/** @type {?} */\nSearchBuilderGroupComponent.prototype.operator;\n/** @type {?} */\nSearchBuilderGroupComponent.prototype.addText;\n/** @type {?} */\nSearchBuilderGroupComponent.prototype.placeholder;\n/** @type {?} */\nSearchBuilderGroupComponent.prototype.showPlaceholder;\n/** @type {?} */\nSearchBuilderGroupComponent.prototype.add;\n/** @type {?} */\nSearchBuilderGroupComponent.prototype.remove;\n/** @type {?} */\nSearchBuilderGroupComponent.prototype.searchBuilderGroupService;\n/** @type {?} */\nSearchBuilderGroupComponent.prototype._searchBuilderService;\n}\n\n\nexport type SearchBuilderGroupOperator = 'and' | 'or' | 'not';\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, OnInit, Type, Input, ComponentRef, ComponentFactoryResolver, ViewContainerRef } from '@angular/core';\nimport { SearchBuilderService } from '../search-builder.service';\nexport class SearchBuilderOutletDirective implements OnInit {\n\n     uxSearchBuilderOutlet: string;\n     uxSearchBuilderOutletContext: any;\nprivate _componentRef: ComponentRef<any>;\n/**\n * @param {?} _viewContainerRef\n * @param {?} _componentFactoryResolver\n * @param {?} _searchBuilderService\n */\nconstructor(\nprivate _viewContainerRef: ViewContainerRef,\nprivate _componentFactoryResolver: ComponentFactoryResolver,\nprivate _searchBuilderService: SearchBuilderService\n    ) { }\n/**\n * @return {?}\n */\nngOnInit(): void {\n\n        // get the class from the type\n        const /** @type {?} */ componentDefinition = this._searchBuilderService.getComponent(this.uxSearchBuilderOutlet);\n\n        // create the component factory\n        const /** @type {?} */ componentFactory = this._componentFactoryResolver.resolveComponentFactory(componentDefinition.component);\n\n        // create the component instance\n        this._componentRef = this._viewContainerRef.createComponent(componentFactory);\n\n        // combine the predefined config with any dynmaic config\n        const /** @type {?} */ config = Object.assign({}, componentDefinition.config, this.uxSearchBuilderOutletContext.config || {});\n\n        // set the context and config property on the component instance\n        this._componentRef.instance.context = this.uxSearchBuilderOutletContext;\n        this._componentRef.instance.config = config;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: '[uxSearchBuilderOutlet]'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ViewContainerRef, },\n{type: ComponentFactoryResolver, },\n{type: SearchBuilderService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'uxSearchBuilderOutlet': [{ type: Input },],\n'uxSearchBuilderOutletContext': [{ type: Input },],\n};\n}\n\nfunction SearchBuilderOutletDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nSearchBuilderOutletDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSearchBuilderOutletDirective.ctorParameters;\n/** @type {?} */\nSearchBuilderOutletDirective.propDecorators;\n/** @type {?} */\nSearchBuilderOutletDirective.prototype.uxSearchBuilderOutlet;\n/** @type {?} */\nSearchBuilderOutletDirective.prototype.uxSearchBuilderOutletContext;\n/** @type {?} */\nSearchBuilderOutletDirective.prototype._componentRef;\n/** @type {?} */\nSearchBuilderOutletDirective.prototype._viewContainerRef;\n/** @type {?} */\nSearchBuilderOutletDirective.prototype._componentFactoryResolver;\n/** @type {?} */\nSearchBuilderOutletDirective.prototype._searchBuilderService;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, OnDestroy } from '@angular/core';\nimport { SearchBuilderService } from '../search-builder.service';\nimport { SearchBuilderGroupQuery } from '../interfaces/group-query.interface';\nimport { SearchBuilderGroupService } from '../search-builder-group/search-builder-group.service';\nimport { SearchBuilderComponentContext } from '../interfaces/component-context.interface';\nexport class BaseSearchComponent implements OnDestroy {\n\n    type: string;\n    config: any;\n    context: SearchBuilderComponentContext;\nprivate _id: number = this._searchBuilderService.generateComponentId();\nprivate _valid: boolean = true;\n/**\n * Get the current value of the component\n * @return {?}\n */\nget value() {\n        return this.context.value;\n    }\n/**\n * Set the current value of the component\n * @param {?} value\n * @return {?}\n */\nset value(value: any) {\n        this.context.value = value;\n        this._searchBuilderService.queryHasChanged();\n\n        // if value has been set perform validation\n        this.validate();\n    }\n/**\n * @return {?}\n */\nget valid(): boolean {\n        return this._valid;\n    }\n/**\n * @param {?} valid\n * @return {?}\n */\nset valid(valid: boolean) {\n        this._valid = valid;\n        this._searchBuilderService.setValid(this._id, valid);\n    }\n/**\n * @param {?} _searchBuilderService\n * @param {?} _searchBuilderGroupService\n */\nconstructor(\nprivate _searchBuilderService: SearchBuilderService,\nprivate _searchBuilderGroupService: SearchBuilderGroupService\n    ) { }\n/**\n * Make sure we clean up after ourselves\n * @return {?}\n */\nngOnDestroy(): void {\n        this.valid = true;\n    }\n/**\n * Perform any required validation on the value\n * @return {?}\n */\nvalidate(): void {\n        // if a custom validation function has been provided then use it\n        this.valid = this.config.validation ? this.config.validation(this, this.value) : true;\n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-base-search',\n    template: ''\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: SearchBuilderService, },\n{type: SearchBuilderGroupService, },\n];\n}\n\nfunction BaseSearchComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nBaseSearchComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nBaseSearchComponent.ctorParameters;\n/** @type {?} */\nBaseSearchComponent.prototype.type;\n/** @type {?} */\nBaseSearchComponent.prototype.config;\n/** @type {?} */\nBaseSearchComponent.prototype.context;\n/** @type {?} */\nBaseSearchComponent.prototype._id;\n/** @type {?} */\nBaseSearchComponent.prototype._valid;\n/** @type {?} */\nBaseSearchComponent.prototype._searchBuilderService;\n/** @type {?} */\nBaseSearchComponent.prototype._searchBuilderGroupService;\n}\n\n\nexport interface BaseSearchComponentConfig {\n    label?: string;\n    placeholder?: string;\n    validation?: (value: any) => boolean;\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, OnInit } from '@angular/core';\nimport { BaseSearchComponent, BaseSearchComponentConfig } from '../base-search.component';\nexport class SearchTextComponent extends BaseSearchComponent {\n\n  type: string = 'text';\n/**\n * @return {?}\n */\nget label(): string {\n    return this.config.label;\n  }\n/**\n * @return {?}\n */\nget placeholder(): string {\n    return this.config.placeholder || 'Enter text';\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'ux-search-text',\n  template: `\n    <label class=\"form-label\" *ngIf=\"label\">{{ label }}</label>\n    <input [placeholder]=\"placeholder\" [(ngModel)]=\"value\" class=\"form-control\">\n  `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction SearchTextComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nSearchTextComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSearchTextComponent.ctorParameters;\n/** @type {?} */\nSearchTextComponent.prototype.type;\n}\n\n\nexport interface SearchTextConfig extends BaseSearchComponentConfig { }\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, OnInit } from '@angular/core';\nimport { BaseSearchComponent, BaseSearchComponentConfig } from '../base-search.component';\nimport { DateTimePickerTimezone } from '../../../date-time-picker/index';\nexport class SearchDateComponent extends BaseSearchComponent implements OnInit {\n\n  type: string = 'date';\n/**\n * @return {?}\n */\nget label(): string {\n    return this.config.label;\n  }\n/**\n * @return {?}\n */\nget placeholder(): string {\n    return this.config.placeholder || 'Enter date';\n  }\n/**\n * @return {?}\n */\nngOnInit(): void {\n\n    // by default set to the current date if not specified\n    if (!this.value) {\n      this.value = new Date();\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'ux-search-date',\n  template: `\n    <label class=\"form-label\" *ngIf=\"label\">{{ label }}</label>\n\n    <div class=\"input-group date m-nil\">\n        <span class=\"input-group-addon\" tabindex=\"1\" (click)=\"popover.show()\">\n            <i class=\"hpe-icon hpe-calendar\" aria-hidden=\"true\"></i>\n        </span>\n        <input type=\"text\" #popover=\"bs-popover\" [ngModel]=\"value | date:'dd MMMM yyyy'\" [popover]=\"popoverTemplate\"\n            placement=\"bottom\" [outsideClick]=\"true\" containerClass=\"date-time-picker-popover\" class=\"form-control\" aria-label=\"Selected date\" [placeholder]=\"placeholder\">\n    </div>\n\n    <ng-template #popoverTemplate>\n        <ux-date-time-picker [(date)]=\"value\" [showTime]=\"false\"></ux-date-time-picker>\n    </ng-template>\n  `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction SearchDateComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nSearchDateComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSearchDateComponent.ctorParameters;\n/** @type {?} */\nSearchDateComponent.prototype.type;\n}\n\n\nexport interface SearchDateConfig extends BaseSearchComponentConfig { }\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component } from '@angular/core';\nimport { BaseSearchComponent } from '../base-search.component';\nimport { DateTimePickerTimezone } from '../../../date-time-picker/index';\nexport class SearchDateRangeComponent extends BaseSearchComponent {\n\n    type: string = 'date-range';\n/**\n * @return {?}\n */\nget label(): string {\n        return this.config.label;\n    }\n/**\n * @return {?}\n */\nget from() {\n\n        // if value does not exist the set it\n        if (!this.value || !this.value.from) {\n            this.from = new Date();\n        }\n\n        // ensure that the from value is a date object\n        if (this.value.from instanceof Date === false) {\n            this.value.from = new Date(this.value.from);\n        }\n\n        return this.value.from;\n    }\n/**\n * @param {?} fromValue\n * @return {?}\n */\nset from(fromValue: any) {\n\n        // create new object based on the current value\n        const /** @type {?} */ value = Object.assign({}, this.value);\n\n        // ensure that the from value is a date\n        if (fromValue instanceof Date === false) {\n            fromValue = new Date(fromValue);\n        }\n\n        // set the latest value\n        value.from = fromValue;\n\n        // update the value object while ensuring immutability\n        this.value = value;\n    }\n/**\n * @return {?}\n */\nget to() {\n\n        // if value does not exist the set it\n        if (!this.value || !this.value.to) {\n            this.to = new Date();\n        }\n\n        // ensure that the to value is a date object\n        if (this.value.to instanceof Date === false) {\n            this.value.to = new Date(this.value.to);\n        }\n\n        return this.value.to;\n    }\n/**\n * @param {?} toValue\n * @return {?}\n */\nset to(toValue: any) {\n\n        // create new object based on the current value\n        const /** @type {?} */ value = Object.assign({}, this.value);\n\n        // ensure that the to value is a date\n        if (toValue instanceof Date === false) {\n            toValue = new Date(toValue);\n        }\n\n        // set the latest value\n        value.to = toValue;\n\n        // update the value object while ensuring immutability\n        this.value = value;\n    }\n/**\n * @return {?}\n */\nget fromLabel(): string {\n        return this.config.fromLabel || 'From';\n    }\n/**\n * @return {?}\n */\nget toLabel(): string {\n        return this.config.toLabel || 'To';\n    }\n/**\n * @return {?}\n */\nget fromPlaceholder(): string {\n        return this.config.fromPlaceholder;\n    }\n/**\n * @return {?}\n */\nget toPlaceholder(): string {\n        return this.config.toPlaceholder;\n    }\n/**\n * Override the default validation\n * @return {?}\n */\nvalidate(): void {\n\n        // check if there is a config validation function\n        if (this.config.validation) {\n            return super.validate();\n        }\n\n        // create copies of the dates so we can modify time value (to ignore it)\n        const /** @type {?} */ from = new Date(this.value.from);\n        const /** @type {?} */ to = new Date(this.value.to);\n\n        // set the time to the same so we dont compare it\n        from.setHours(0, 0, 0, 0);\n        to.setHours(0, 0, 0, 0);\n\n        // valid if the from date is less than or equal to the to date\n        this.valid = from <= to;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-search-date-range',\n    template: `\n      <label class=\"form-label\" *ngIf=\"label\">{{ label }}</label>\n\n      <div class=\"row\">\n          <div class=\"col-sm-12\">\n              <div class=\"form-inline\" [class.has-error]=\"!valid\">\n\n                  <div class=\"form-group p-r-md\">\n                      <label class=\"form-label m-r-xs\">{{ fromLabel }}</label>\n\n                      <div class=\"input-group date m-nil\">\n                          <span class=\"input-group-addon p-r-xs\" tabindex=\"1\" (click)=\"fromPopover.show()\">\n                              <i class=\"hpe-icon hpe-calendar\" aria-hidden=\"true\"></i>\n                          </span>\n                          <input type=\"text\" #fromPopover=\"bs-popover\" [ngModel]=\"from | date:'dd MMMM yyyy'\" [popover]=\"fromPopoverTemplate\" placement=\"bottom\"\n                              [outsideClick]=\"true\" containerClass=\"date-time-picker-popover\" class=\"form-control\" aria-label=\"Selected date\" [placeholder]=\"fromPlaceholder\">\n                      </div>\n                  </div>\n\n                  <div class=\"form-group p-r-xs\">\n                      <label class=\"form-label m-r-xs\">{{ toLabel }}</label>\n\n                      <div class=\"input-group date m-nil\">\n                          <span class=\"input-group-addon\" tabindex=\"1\" (click)=\"toPopover.show()\">\n                              <i class=\"hpe-icon hpe-calendar\" aria-hidden=\"true\"></i>\n                          </span>\n                          <input type=\"text\" #toPopover=\"bs-popover\" [ngModel]=\"to | date:'dd MMMM yyyy'\" [popover]=\"toPopoverTemplate\" placement=\"bottom\"\n                              [outsideClick]=\"true\" containerClass=\"date-time-picker-popover\" class=\"form-control\" aria-label=\"Selected date\" [placeholder]=\"toPlaceholder\">\n                      </div>\n                  </div>\n\n              </div>\n          </div>\n      </div>\n\n      <ng-template #fromPopoverTemplate>\n          <ux-date-time-picker [(date)]=\"from\" [showTime]=\"false\"></ux-date-time-picker>\n      </ng-template>\n\n      <ng-template #toPopoverTemplate>\n          <ux-date-time-picker [(date)]=\"to\" [showTime]=\"false\"></ux-date-time-picker>\n      </ng-template>\n    `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction SearchDateRangeComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nSearchDateRangeComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSearchDateRangeComponent.ctorParameters;\n/** @type {?} */\nSearchDateRangeComponent.prototype.type;\n}\n\n\nexport interface SearchDateRangeConfig {\n    label?: string;\n    fromLabel?: string;\n    toLabel?: string;\n    fromPlaceholder?: string;\n    toPlaceholder?: string;\n    validation: (value: any) => boolean;\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component } from '@angular/core';\nimport { BaseSearchComponent, BaseSearchComponentConfig } from '../base-search.component';\nimport { InfiniteScrollLoadFunction } from '../../../../index';\nexport class SearchSelectComponent extends BaseSearchComponent {\n\n  type: string = 'select';\n/**\n * Provide defaults for undefined properties\n * @return {?}\n */\nget label(): string {\n    return this.config.label;\n  }\n/**\n * @return {?}\n */\nget options() {\n    return this.config.options || [];\n  }\n/**\n * @return {?}\n */\nget multiple(): boolean {\n    return this.config.multiple || false;\n  }\n/**\n * @return {?}\n */\nget placeholder(): string {\n    return this.config.placeholder || 'Select item';\n  }\n/**\n * @return {?}\n */\nget dropDirection(): string {\n    return this.config.dropDirection || 'down';\n  }\n/**\n * @return {?}\n */\nget allowNull(): boolean {\n    return this.config.allowNull || false;\n  }\n/**\n * @return {?}\n */\nget disabled(): boolean {\n    return this.config.disabled || false;\n  }\n/**\n * @return {?}\n */\nget maxHeight(): string {\n    return this.config.maxHeight || '250px';\n  }\n/**\n * @return {?}\n */\nget pageSize(): number {\n    return this.config.pageSize || 20;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'ux-search-select',\n  template: `\n    <label class=\"form-label\" *ngIf=\"label\">{{ label }}</label>\n\n    <ux-select [(value)]=\"value\" \n               [options]=\"options\" \n               [multiple]=\"multiple\" \n               [placeholder]=\"placeholder\" \n               [dropDirection]=\"dropDirection\"\n               [pageSize]=\"pageSize\"\n               [allowNull]=\"allowNull\"\n               [disabled]=\"disabled\"\n               [maxHeight]=\"maxHeight\"\n               [key]=\"config.key\"\n               [display]=\"config.display\"\n               [loadingTemplate]=\"config.loadingTemplate\"\n               [optionTemplate]=\"config.optionTemplate\"\n               [noOptionsTemplate]=\"config.noOptionsTemplate\">\n    </ux-select>\n  `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction SearchSelectComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nSearchSelectComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSearchSelectComponent.ctorParameters;\n/** @type {?} */\nSearchSelectComponent.prototype.type;\n}\n\n\nexport interface SearchSelectConfig extends BaseSearchComponentConfig {\n  options?: any[] | InfiniteScrollLoadFunction;\n  multiple?: boolean;\n  dropDirection?: 'up' | 'down';\n  allowNull?: boolean;\n  disabled?: boolean;\n  maxHeight?: string;\n  pageSize?: number;\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Input, EventEmitter, Output, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs/Subscription';\nimport { SearchBuilderService } from './search-builder.service';\nimport { SearchBuilderQuery } from './interfaces/query.interface';\nimport { SearchBuilderComponentDefinition } from './interfaces/component-definition.interface';\nimport { SearchTextComponent } from './search-components/text/text.component';\nimport { SearchDateComponent } from './search-components/date/date.component';\nimport { SearchDateRangeComponent } from './search-components/date-range/date-range.component';\nimport { SearchSelectComponent } from './search-components/select/select.component';\nimport'rxjs/add/operator/distinctUntilChanged';\nexport class SearchBuilderComponent implements OnDestroy {\n/**\n * @param {?} components\n * @return {?}\n */\nset components(components: SearchBuilderComponentDefinition[]) {\n    this._searchBuilderService.registerComponents(components);\n  }\n/**\n * @param {?} value\n * @return {?}\n */\nset query(value: SearchBuilderQuery) {\n    this._searchBuilderService.setQuery(value);\n  }\n/**\n * @return {?}\n */\nget query() {\n    return this._searchBuilderService.getQuery();\n  }\n\n   queryChange: EventEmitter<SearchBuilderQuery> = new EventEmitter<SearchBuilderQuery>();\n   valid: EventEmitter<boolean> = new EventEmitter<boolean>(true);\nprivate _querySubscription: Subscription;\nprivate _validSubscription: Subscription;\n/**\n * Register the default search builder components\n * @param {?} _searchBuilderService\n */\nconstructor(private _searchBuilderService: SearchBuilderService) {\n\n    // watch for any query changes\n    this._querySubscription = _searchBuilderService.queryChange.subscribe(query => this.queryChange.emit(query));\n\n    // watch for any changes to the validation\n    this._validSubscription = _searchBuilderService.validationChange.distinctUntilChanged().subscribe(valid => this.valid.emit(valid));\n  }\n/**\n * Remove any subscriptions and cleanup\n * @return {?}\n */\nngOnDestroy(): void {\n    this._querySubscription.unsubscribe();\n    this._validSubscription.unsubscribe();\n  }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'ux-search-builder',\n  template: `\n    <ng-content></ng-content>\n  `,\n  providers: [SearchBuilderService]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: SearchBuilderService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'components': [{ type: Input },],\n'query': [{ type: Input },],\n'queryChange': [{ type: Output },],\n'valid': [{ type: Output },],\n};\n}\n\nfunction SearchBuilderComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nSearchBuilderComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSearchBuilderComponent.ctorParameters;\n/** @type {?} */\nSearchBuilderComponent.propDecorators;\n/** @type {?} */\nSearchBuilderComponent.prototype.queryChange;\n/** @type {?} */\nSearchBuilderComponent.prototype.valid;\n/** @type {?} */\nSearchBuilderComponent.prototype._querySubscription;\n/** @type {?} */\nSearchBuilderComponent.prototype._validSubscription;\n/** @type {?} */\nSearchBuilderComponent.prototype._searchBuilderService;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable } from '@angular/core';\n\n/**\n * Configuration service for the Popover directive.\n * You can inject this service, typically in your root component, and customize\n * the values of its properties in order to provide default values for all the\n * popovers used in the application.\n */\n\nexport class PopoverConfig {\n  /**\n   * Placement of a popover. Accepts: \"top\", \"bottom\", \"left\", \"right\", \"auto\"\n   */\n  placement = 'top';\n  /**\n   * Specifies events that should trigger. Supports a space separated list of\n   * event names.\n   */\n  triggers = 'click';\n\n  outsideClick = false;\n  /**\n   * A selector specifying the element the popover should be appended to.\n   * Currently only supports \"body\".\n   */\n  container: string;\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { ChangeDetectionStrategy, Input, Component } from '@angular/core';\nimport { PopoverConfig } from './popover.config';\nimport { isBs3 } from '../utils/theme-provider';\n\n\nexport class PopoverContainerComponent {\n   placement: string;\n   title: string;\n  containerClass: string;\n\n  get isBs3(): boolean {\n    return isBs3();\n  }\n\n  constructor(config: PopoverConfig) {\n    Object.assign(this, config);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'popover-container',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  // tslint:disable-next-line\n  host: {\n    '[class]':\n      '\"popover in popover-\" + placement + \" \" + \"bs-popover-\" + placement + \" \" + placement + \" \" + containerClass',\n    '[class.show]': '!isBs3',\n    role: 'tooltip',\n    style: 'display:block;'\n  },\n  styles: [\n    `\n    :host.bs-popover-top .arrow, :host.bs-popover-bottom .arrow {\n      left: 50%;\n    }\n    :host.bs-popover-left .arrow, :host.bs-popover-right .arrow {\n      top: 50%;\n    }\n  `\n  ],\n  template: \"<div class=\\\"popover-arrow arrow\\\"></div> <h3 class=\\\"popover-title popover-header\\\" *ngIf=\\\"title\\\">{{ title }}</h3> <div class=\\\"popover-content popover-body\\\"> <ng-content></ng-content> </div> \"\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: PopoverConfig, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'placement': [{ type: Input },],\n'title': [{ type: Input },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {\n  Directive, ElementRef, EventEmitter, Input, OnDestroy, OnInit, Output,\n  Renderer2, TemplateRef, ViewContainerRef\n} from '@angular/core';\nimport { PopoverConfig } from './popover.config';\nimport { ComponentLoader, ComponentLoaderFactory } from '../component-loader/index';\nimport { PopoverContainerComponent } from './popover-container.component';\n\n/**\n * A lightweight, extensible directive for fancy popover creation.\n */\n\nexport class PopoverDirective implements OnInit, OnDestroy {\n  /**\n   * Content to be displayed as popover.\n   */\n   popover: string | TemplateRef<any>;\n  /**\n   * Context to be used if popover is a template.\n   */\n   popoverContext: any;\n  /**\n   * Title of a popover.\n   */\n   popoverTitle: string;\n  /**\n   * Placement of a popover. Accepts: \"top\", \"bottom\", \"left\", \"right\"\n   */\n   placement: 'top' | 'bottom' | 'left' | 'right' | 'auto';\n  /**\n   * Close popover on outside click\n   */\n   outsideClick = false;\n  /**\n   * Specifies events that should trigger. Supports a space separated list of\n   * event names.\n   */\n   triggers: string;\n  /**\n   * A selector specifying the element the popover should be appended to.\n   * Currently only supports \"body\".\n   */\n   container: string;\n\n  /**\n   * Css class for popover container\n   */\n   containerClass = '';\n\n  /**\n   * Returns whether or not the popover is currently being shown\n   */\n  \n  get isOpen(): boolean {\n    return this._popover.isShown;\n  }\n\n  set isOpen(value: boolean) {\n    if (value) {\n      this.show();\n    } else {\n      this.hide();\n    }\n  }\n\n  /**\n   * Emits an event when the popover is shown\n   */\n   onShown: EventEmitter<any>;\n  /**\n   * Emits an event when the popover is hidden\n   */\n   onHidden: EventEmitter<any>;\n\n  private _popover: ComponentLoader<PopoverContainerComponent>;\n  private _isInited = false;\n\n  constructor(_elementRef: ElementRef,\n              _renderer: Renderer2,\n              _viewContainerRef: ViewContainerRef,\n              _config: PopoverConfig,\n              cis: ComponentLoaderFactory) {\n    this._popover = cis\n      .createLoader<PopoverContainerComponent>(\n        _elementRef,\n        _viewContainerRef,\n        _renderer\n      )\n      .provide({provide: PopoverConfig, useValue: _config});\n    Object.assign(this, _config);\n    this.onShown = this._popover.onShown;\n    this.onHidden = this._popover.onHidden;\n\n    // fix: no focus on button on Mac OS #1795\n    if (typeof window !== 'undefined') {\n      _elementRef.nativeElement.addEventListener('click', function () {\n        try {\n          _elementRef.nativeElement.focus();\n        } catch (err) {\n          return;\n        }\n      });\n    }\n  }\n\n  /**\n   * Opens an element’s popover. This is considered a “manual” triggering of\n   * the popover.\n   */\n  show(): void {\n    if (this._popover.isShown || !this.popover) {\n      return;\n    }\n\n    this._popover\n      .attach(PopoverContainerComponent)\n      .to(this.container)\n      .position({attachment: this.placement})\n      .show({\n        content: this.popover,\n        context: this.popoverContext,\n        placement: this.placement,\n        title: this.popoverTitle,\n        containerClass: this.containerClass\n      });\n    this.isOpen = true;\n  }\n\n  /**\n   * Closes an element’s popover. This is considered a “manual” triggering of\n   * the popover.\n   */\n  hide(): void {\n    if (this.isOpen) {\n      this._popover.hide();\n      this.isOpen = false;\n    }\n  }\n\n  /**\n   * Toggles an element’s popover. This is considered a “manual” triggering of\n   * the popover.\n   */\n  toggle(): void {\n    if (this.isOpen) {\n      return this.hide();\n    }\n\n    this.show();\n  }\n\n  ngOnInit(): any {\n    // fix: seems there are an issue with `routerLinkActive`\n    // which result in duplicated call ngOnInit without call to ngOnDestroy\n    // read more: https://github.com/valor-software/ngx-bootstrap/issues/1885\n    if (this._isInited) {\n      return;\n    }\n    this._isInited = true;\n\n    this._popover.listen({\n      triggers: this.triggers,\n      outsideClick: this.outsideClick,\n      show: () => this.show()\n    });\n  }\n\n  ngOnDestroy(): any {\n    this._popover.dispose();\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{selector: '[popover]', exportAs: 'bs-popover'}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Renderer2, },\n{type: ViewContainerRef, },\n{type: PopoverConfig, },\n{type: ComponentLoaderFactory, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'popover': [{ type: Input },],\n'popoverContext': [{ type: Input },],\n'popoverTitle': [{ type: Input },],\n'placement': [{ type: Input },],\n'outsideClick': [{ type: Input },],\n'triggers': [{ type: Input },],\n'container': [{ type: Input },],\n'containerClass': [{ type: Input },],\n'isOpen': [{ type: Input },],\n'onShown': [{ type: Output },],\n'onHidden': [{ type: Output },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ComponentLoaderFactory } from '../component-loader/index';\nimport { PositioningService } from '../positioning/index';\nimport { PopoverConfig } from './popover.config';\nimport { PopoverDirective } from './popover.directive';\nimport { PopoverContainerComponent } from './popover-container.component';\n\n\nexport class PopoverModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: PopoverModule,\n      providers: [PopoverConfig, ComponentLoaderFactory, PositioningService]\n    };\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  imports: [CommonModule],\n  declarations: [PopoverDirective, PopoverContainerComponent],\n  exports: [PopoverDirective],\n  entryComponents: [PopoverContainerComponent]\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","\nexport class TypeaheadOptionEvent {\n/**\n * @param {?} option\n */\nconstructor(public option: any) {}\n}\n\nfunction TypeaheadOptionEvent_tsickle_Closure_declarations() {\n/** @type {?} */\nTypeaheadOptionEvent.prototype.option;\n}\n","import { TypeaheadComponent } from './index';\nimport { Injectable } from '@angular/core';\nexport class TypeaheadKeyService {\nconstructor() { }\n/**\n * @param {?} event\n * @param {?} typeahead\n * @return {?}\n */\nhandleKey(event: KeyboardEvent, typeahead: TypeaheadComponent) {\n        if (typeahead) {\n            switch (event.key) {\n                case 'ArrowUp':\n                case 'Up':\n                    if (!typeahead.open) {\n                        typeahead.open = true;\n                    } else {\n                        typeahead.moveHighlight(-1);\n                    }\n                    event.preventDefault();\n                    break;\n                case 'ArrowDown':\n                case 'Down':\n                    if (!typeahead.open) {\n                        typeahead.open = true;\n                    } else {\n                        typeahead.moveHighlight(1);\n                    }\n                    event.preventDefault();\n                    break;\n                case 'Escape':\n                case 'Esc':\n                    typeahead.open = false;\n                    break;\n            }\n        }\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction TypeaheadKeyService_tsickle_Closure_declarations() {\n/** @type {?} */\nTypeaheadKeyService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTypeaheadKeyService.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { InfiniteScrollLoadFunction } from '../../directives/infinite-scroll/index';\nimport { TypeaheadOptionEvent } from './typeahead-event';\nimport {\n    Component,\n    ElementRef,\n    EventEmitter,\n    Input,\n    OnChanges,\n    OnInit,\n    Output,\n    SimpleChanges,\n    TemplateRef,\n    ViewChild,\n    AfterViewInit,\n    ChangeDetectorRef\n} from '@angular/core';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { Observable } from 'rxjs/Observable';\nexport class TypeaheadComponent implements AfterViewInit, OnChanges {\n\n     options: any[] | InfiniteScrollLoadFunction;\n     filter: string;\nprivate _open: boolean = false;\n/**\n * @return {?}\n */\nget open() {\n        return this._open;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset open(value: boolean) {\n        const /** @type {?} */ originalValue = this._open;\n        this._open = value;\n        if (value !== originalValue) {\n            this.openChange.emit(value);\n            if (value) {\n                this.initOptions();\n            }\n        }\n    }\n\n     openChange = new EventEmitter<boolean>();\n\n     display: (option: any) => string | string;\n     key: (option: any) => string | string;\n     disabledOptions: any[];\n     dropDirection: 'up' | 'down' = 'down';\n     maxHeight: string = '250px';\n     openOnFilterChange: boolean = true;\n     pageSize: number = 20;\n     selectFirst: boolean = true;\n\n     loadingTemplate: TemplateRef<any>;\n     optionTemplate: TemplateRef<any>;\n     noOptionsTemplate: TemplateRef<any>;\n\n     optionSelected = new EventEmitter<TypeaheadOptionEvent>();\nprivate _highlighted = new BehaviorSubject<any>(null);\n/**\n * @return {?}\n */\nget highlighted(): any {\n        return this._highlighted.getValue();\n    }\nprivate _defaultLoadingTemplate: TemplateRef<any>;\nprivate _defaultOptionTemplate: TemplateRef<any>;\nprivate _defaultNoOptionsTemplate: TemplateRef<any>;\n\n    loadOptionsCallback: InfiniteScrollLoadFunction;\n    visibleOptions: any[] = [];\n    loading = false;\n\n    optionApi: TypeaheadOptionApi = {\n        getKey: this.getKey.bind(this),\n        getDisplay: this.getDisplay.bind(this),\n        getDisplayHtml: this.getDisplayHtml.bind(this)\n    };\n/**\n * @param {?} typeaheadElement\n * @param {?} cdRef\n */\nconstructor(public typeaheadElement: ElementRef,\nprivate cdRef: ChangeDetectorRef) {\n\n        this.loadOptionsCallback = (pageNum: number, pageSize: number, filter: any) => {\n            if (typeof this.options === 'function') {\n                return this.options(pageNum, pageSize, filter);\n            }\n            return null;\n        };\n    }\n/**\n * @return {?}\n */\nngAfterViewInit() {\n        // Attach default loading template\n        if (!this.loadingTemplate) {\n            this.loadingTemplate = this._defaultLoadingTemplate;\n        }\n\n        // Attach default option template\n        if (!this.optionTemplate) {\n            this.optionTemplate = this._defaultOptionTemplate;\n        }\n\n        // Attach default \"no results\" template\n        if (!this.noOptionsTemplate) {\n            this.noOptionsTemplate = this._defaultNoOptionsTemplate;\n        }\n\n        this.cdRef.detectChanges();\n    }\n/**\n * @param {?} changes\n * @return {?}\n */\nngOnChanges(changes: SimpleChanges) {\n        // Open the dropdown if the filter value updates\n        if (changes.filter) {\n            if (this.openOnFilterChange && changes.filter.currentValue && changes.filter.currentValue.length > 0) {\n                this.open = true;\n            }\n        }\n\n        // Re-filter visibleOptions\n        this.updateOptions();\n    }\n/**\n * @param {?} event\n * @return {?}\n */\noptionMousedownHandler(event: MouseEvent) {\n        // Workaround to prevent focus changing when an option is clicked\n        event.preventDefault();\n    }\n/**\n * @param {?} event\n * @param {?} option\n * @return {?}\n */\noptionClickHandler(event: MouseEvent, option: any) {\n        this.select(option);\n    }\n/**\n * Returns the unique key value of the given option.\n * @param {?} option\n * @return {?}\n */\ngetKey(option: any): string {\n        if (typeof this.key === 'function') {\n            return this.key(option);\n        }\n        if (typeof this.key === 'string' && option && option.hasOwnProperty(this.key)) {\n            return option[ /** @type {?} */((<string>this.key))];\n        }\n        return this.getDisplay(option);\n    }\n/**\n * Returns the display value of the given option.\n * @param {?} option\n * @return {?}\n */\ngetDisplay(option: any): string {\n        if (typeof this.display === 'function') {\n            return this.display(option);\n        }\n        if (typeof this.display === 'string' && option && option.hasOwnProperty(this.display)) {\n            return option[ /** @type {?} */((<string>this.display))];\n        }\n        return option;\n    }\n/**\n * Returns the display value of the given option with HTML markup added to highlight the part which matches the current filter value.\n * @param {?} option\n * @return {?}\n */\ngetDisplayHtml(option: any) {\n        let /** @type {?} */ displayText;\n        if (typeof option === 'string') {\n            displayText = this.getDisplay(option).replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;');\n        } else {\n            displayText = this.getDisplay(option.name).replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;');\n        }\n        let /** @type {?} */ displayHtml = displayText;\n        if (this.filter) {\n            const /** @type {?} */ length = this.filter.length;\n            const /** @type {?} */ matchIndex = displayText.toLowerCase().indexOf(this.filter.toLowerCase());\n            if (matchIndex >= 0) {\n                var /** @type {?} */ highlight = `<span class=\"ux-filter-match\">${displayText.substr(matchIndex, length)}</span>`;\n                displayHtml = displayText.substr(0, matchIndex) + highlight + displayText.substr(matchIndex + length);\n            }\n        }\n        return displayHtml;\n    }\n/**\n * Returns true if the infinite scroll component should load\n * @return {?}\n */\nisInfiniteScroll() {\n        return typeof this.options === 'function';\n    }\n/**\n * Selects the given option, emitting the optionSelected event and closing the dropdown.\n * @param {?} option\n * @return {?}\n */\nselect(option: any) {\n        if (!this.isDisabled(option)) {\n            this.optionSelected.emit(new TypeaheadOptionEvent(option));\n            this._highlighted.next(null);\n            this.open = false;\n        }\n    }\n/**\n * Returns true if the given option is part of the disabledOptions array.\n * @param {?} option\n * @return {?}\n */\nisDisabled(option: any): boolean {\n        if (this.disabledOptions) {\n            const /** @type {?} */ optionKey = this.getKey(option);\n            const /** @type {?} */ result = this.disabledOptions.find((selectedOption) => {\n                return this.getKey(selectedOption) === optionKey;\n            });\n            return result !== undefined;\n        }\n        return false;\n    }\n/**\n * Set the given option as the current highlighted option, available in the highlightedOption parameter.\n * @param {?} option\n * @return {?}\n */\nhighlight(option: any) {\n        if (!this.isDisabled(option)) {\n            this._highlighted.next(option);\n        }\n    }\n/**\n * Increment or decrement the highlighted option in the list. Disabled options are skipped.\n * @param {?} d Value to be added to the index of the highlighted option, i.e. -1 to move backwards, +1 to move forwards.\n * @return {?}\n */\nmoveHighlight(d: number): any {\n        const /** @type {?} */ highlightIndex = this.indexOfVisibleOption(this.highlighted);\n        let /** @type {?} */ newIndex = highlightIndex;\n        let /** @type {?} */ disabled = true;\n        let /** @type {?} */ inBounds = true;\n        do {\n            newIndex = newIndex + d;\n            inBounds = (newIndex >= 0 && newIndex < this.visibleOptions.length);\n            disabled = inBounds && this.isDisabled(this.visibleOptions[newIndex]);\n        }\n        while (inBounds && disabled);\n\n        if (!disabled && inBounds) {\n            this._highlighted.next(this.visibleOptions[newIndex]);\n        }\n\n        return this.highlighted;\n    }\n/**\n * Returns true if the given option is the highlighted option.\n * @param {?} option\n * @return {?}\n */\nisHighlighted(option: any): boolean {\n        return this.getKey(option) === this.getKey(this.highlighted);\n    }\n/**\n * Set up the options before the dropdown is displayed.\n * @return {?}\n */\ninitOptions() {\n        // Clear previous highlight\n        this._highlighted.next(null);\n        if (this.selectFirst) {\n            // This will highlight the first non-disabled option.\n            this.moveHighlight(1);\n        }\n    }\n/**\n * Update the visibleOptions array with the current filter.\n * @return {?}\n */\nupdateOptions() {\n        if (typeof this.options === 'object') {\n            const /** @type {?} */ normalisedInput = (this.filter || '').toLowerCase();\n            this.visibleOptions = this.options.filter((option) => {\n                return this.getDisplay(option).toLowerCase().indexOf(normalisedInput) >= 0;\n            });\n        }\n\n        this.initOptions();\n    }\n/**\n * Return the index of the given option in the visibleOptions array. Returns -1 if the option is not currently visible.\n * @param {?} option\n * @return {?}\n */\nprivate indexOfVisibleOption(option: any): number {\n        if (option) {\n            const /** @type {?} */ optionKey = this.getKey(option);\n            return this.visibleOptions.findIndex((el) => {\n                return this.getKey(el) === optionKey;\n            });\n        }\n\n        return -1;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-typeahead',\n    template: `\n      <div class=\"ux-typeahead-options\"\n          [uxInfiniteScroll]=\"loadOptionsCallback\"\n          [(collection)]=\"visibleOptions\"\n          [enabled]=\"isInfiniteScroll()\"\n          [filter]=\"filter\"\n          [loadOnScroll]=\"true\"\n          [pageSize]=\"pageSize\"\n          [scrollElement]=\"typeaheadElement\"\n          (loading)=\"loading = true\"\n          (loaded)=\"loading = false\">\n\n          <ol *ngIf=\"visibleOptions.length > 0\">\n              <li *ngFor=\"let option of visibleOptions; let i = index\"\n                  [class.disabled]=\"isDisabled(option)\"\n                  [class.highlighted]=\"isHighlighted(option)\"\n                  [uxScrollIntoViewIf]=\"isHighlighted(option)\"\n                  [scrollParent]=\"typeaheadElement.nativeElement\"\n                  (mousedown)=\"optionMousedownHandler($event)\"\n                  (click)=\"optionClickHandler($event, option)\"\n                  (mouseover)=\"highlight(option)\">\n\n                  <ng-container [ngTemplateOutlet]=\"optionTemplate\"\n                      [ngTemplateOutletContext]=\"{option: option, api: optionApi}\">\n                  </ng-container>\n\n              </li>\n          </ol>\n\n          <div *uxInfiniteScrollLoading>\n              <ng-container [ngTemplateOutlet]=\"loadingTemplate\">\n              </ng-container>\n          </div>\n\n      </div>\n      <div *ngIf=\"visibleOptions.length === 0 && !loading\">\n          <ng-container [ngTemplateOutlet]=\"noOptionsTemplate\">\n          </ng-container>\n      </div>\n\n      <ng-template #defaultLoadingTemplate>\n          <div class=\"ux-typeahead-loading\">\n              <div class=\"spinner spinner-accent spinner-bounce-middle\"></div>\n              <div>Loading...</div>\n          </div>\n      </ng-template>\n\n      <ng-template #defaultOptionTemplate let-option=\"option\" let-api=\"api\">\n          <span class=\"ux-typeahead-option\" [innerHtml]=\"api.getDisplayHtml(option)\"></span>\n      </ng-template>\n\n      <ng-template #defaultNoOptionsTemplate>\n          <span class=\"ux-typeahead-no-options\">No results</span>\n      </ng-template>\n    `,\n    host: {\n        '[class.open]': 'open',\n        '[class.drop-up]': 'dropDirection === \"up\"',\n        '[style.maxHeight]': 'maxHeight'\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: ChangeDetectorRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'options': [{ type: Input },],\n'filter': [{ type: Input },],\n'open': [{ type: Input, args: ['open', ] },],\n'openChange': [{ type: Output },],\n'display': [{ type: Input },],\n'key': [{ type: Input },],\n'disabledOptions': [{ type: Input },],\n'dropDirection': [{ type: Input },],\n'maxHeight': [{ type: Input },],\n'openOnFilterChange': [{ type: Input },],\n'pageSize': [{ type: Input },],\n'selectFirst': [{ type: Input },],\n'loadingTemplate': [{ type: Input },],\n'optionTemplate': [{ type: Input },],\n'noOptionsTemplate': [{ type: Input },],\n'optionSelected': [{ type: Output },],\n'highlighted': [{ type: Output },],\n'_defaultLoadingTemplate': [{ type: ViewChild, args: ['defaultLoadingTemplate', ] },],\n'_defaultOptionTemplate': [{ type: ViewChild, args: ['defaultOptionTemplate', ] },],\n'_defaultNoOptionsTemplate': [{ type: ViewChild, args: ['defaultNoOptionsTemplate', ] },],\n};\n}\n\nfunction TypeaheadComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nTypeaheadComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTypeaheadComponent.ctorParameters;\n/** @type {?} */\nTypeaheadComponent.propDecorators;\n/** @type {?} */\nTypeaheadComponent.prototype.options;\n/** @type {?} */\nTypeaheadComponent.prototype.filter;\n/** @type {?} */\nTypeaheadComponent.prototype._open;\n/** @type {?} */\nTypeaheadComponent.prototype.openChange;\n/** @type {?} */\nTypeaheadComponent.prototype.display;\n/** @type {?} */\nTypeaheadComponent.prototype.key;\n/** @type {?} */\nTypeaheadComponent.prototype.disabledOptions;\n/** @type {?} */\nTypeaheadComponent.prototype.dropDirection;\n/** @type {?} */\nTypeaheadComponent.prototype.maxHeight;\n/** @type {?} */\nTypeaheadComponent.prototype.openOnFilterChange;\n/** @type {?} */\nTypeaheadComponent.prototype.pageSize;\n/** @type {?} */\nTypeaheadComponent.prototype.selectFirst;\n/** @type {?} */\nTypeaheadComponent.prototype.loadingTemplate;\n/** @type {?} */\nTypeaheadComponent.prototype.optionTemplate;\n/** @type {?} */\nTypeaheadComponent.prototype.noOptionsTemplate;\n/** @type {?} */\nTypeaheadComponent.prototype.optionSelected;\n/** @type {?} */\nTypeaheadComponent.prototype._highlighted;\n/** @type {?} */\nTypeaheadComponent.prototype._defaultLoadingTemplate;\n/** @type {?} */\nTypeaheadComponent.prototype._defaultOptionTemplate;\n/** @type {?} */\nTypeaheadComponent.prototype._defaultNoOptionsTemplate;\n/** @type {?} */\nTypeaheadComponent.prototype.loadOptionsCallback;\n/** @type {?} */\nTypeaheadComponent.prototype.visibleOptions;\n/** @type {?} */\nTypeaheadComponent.prototype.loading;\n/** @type {?} */\nTypeaheadComponent.prototype.optionApi;\n/** @type {?} */\nTypeaheadComponent.prototype.typeaheadElement;\n/** @type {?} */\nTypeaheadComponent.prototype.cdRef;\n}\n\n\n/**\n * The API available to option templates.\n */\nexport interface TypeaheadOptionApi {\n\n    /**\n     * Returns the unique key value of the given option.\n     */\n    getKey(option: any): string;\n\n    /**\n     * Returns the display value of the given option.\n     */\n    getDisplay(option: any): string;\n\n    /**\n     * Returns the display value of the given option with HTML markup added to highlight the part which matches the current filter value. Override the ux-filter-match class in CSS to modify the default appearance.\n     */\n    getDisplayHtml(option: any): string;\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ElementRef, Input, Output, Renderer2, TemplateRef, ViewContainerRef } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { Subject } from 'rxjs/Subject';\nexport class InfiniteScrollLoadButtonDirective {\n/**\n * @return {?}\n */\nget visible() {\n        return this._visible;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset visible(value: boolean) {\n        if (value !== this._visible) {\n            if (value) {\n                this._viewContainer.createEmbeddedView(this._template);\n\n                // Template content follows the elementRef, which is a comment.\n                const /** @type {?} */ clickTarget = this.getNextElementSibling(this._template.elementRef.nativeElement);\n                this._renderer.listen(clickTarget, 'click', this.onClick.bind(this));\n            } else {\n                this._viewContainer.clear();\n            }\n        }\n\n        this._visible = value;\n    }\n\n     load: Observable<Event>;\nprivate _visible: boolean = false;\nprivate _load = new Subject();\n/**\n * @param {?} _element\n * @param {?} _template\n * @param {?} _viewContainer\n * @param {?} _renderer\n */\nconstructor(\nprivate _element: ElementRef,\nprivate _template: TemplateRef<any>,\nprivate _viewContainer: ViewContainerRef,\nprivate _renderer: Renderer2) {\n\n        this.load = this._load.asObservable() as Observable<Event>;\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nprivate onClick(event: MouseEvent) {\n        this._load.next(event);\n    }\n/**\n * @param {?} element\n * @return {?}\n */\nprivate getNextElementSibling(element: any): Element {\n        var /** @type {?} */ next = element;\n        while (next = next.nextSibling) {\n            if (next.nodeType === 1) {\n                return next;\n            }\n        }\n        return null;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: '[uxInfiniteScrollLoadButton]'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: TemplateRef, },\n{type: ViewContainerRef, },\n{type: Renderer2, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'visible': [{ type: Input, args: ['uxInfiniteScrollLoadButton', ] },],\n'load': [{ type: Output },],\n};\n}\n\nfunction InfiniteScrollLoadButtonDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nInfiniteScrollLoadButtonDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nInfiniteScrollLoadButtonDirective.ctorParameters;\n/** @type {?} */\nInfiniteScrollLoadButtonDirective.propDecorators;\n/** @type {?} */\nInfiniteScrollLoadButtonDirective.prototype.load;\n/** @type {?} */\nInfiniteScrollLoadButtonDirective.prototype._visible;\n/** @type {?} */\nInfiniteScrollLoadButtonDirective.prototype._load;\n/** @type {?} */\nInfiniteScrollLoadButtonDirective.prototype._element;\n/** @type {?} */\nInfiniteScrollLoadButtonDirective.prototype._template;\n/** @type {?} */\nInfiniteScrollLoadButtonDirective.prototype._viewContainer;\n/** @type {?} */\nInfiniteScrollLoadButtonDirective.prototype._renderer;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, Input, TemplateRef, ViewContainerRef } from '@angular/core';\nexport class InfiniteScrollLoadingDirective {\n/**\n * @return {?}\n */\nget visible() {\n        return this._visible;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset visible(value: boolean) {\n        if (value !== this._visible) {\n            if (value) {\n                this._viewContainer.createEmbeddedView(this._templateRef);\n            } else {\n                this._viewContainer.clear();\n            }\n        }\n        \n        this._visible = value;\n    }\nprivate _visible: boolean = false;\n/**\n * @param {?} _templateRef\n * @param {?} _viewContainer\n */\nconstructor(\nprivate _templateRef: TemplateRef<any>,\nprivate _viewContainer: ViewContainerRef) { }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: '[uxInfiniteScrollLoading]'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: TemplateRef, },\n{type: ViewContainerRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'visible': [{ type: Input, args: ['uxInfiniteScrollLoading', ] },],\n};\n}\n\nfunction InfiniteScrollLoadingDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nInfiniteScrollLoadingDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nInfiniteScrollLoadingDirective.ctorParameters;\n/** @type {?} */\nInfiniteScrollLoadingDirective.propDecorators;\n/** @type {?} */\nInfiniteScrollLoadingDirective.prototype._visible;\n/** @type {?} */\nInfiniteScrollLoadingDirective.prototype._templateRef;\n/** @type {?} */\nInfiniteScrollLoadingDirective.prototype._viewContainer;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { InfiniteScrollLoadButtonDirective } from './infinite-scroll-load-button.directive';\nimport { InfiniteScrollLoadingDirective } from './infinite-scroll-loading.directive';\nimport {\n    AfterContentInit,\n    ContentChildren,\n    Directive,\n    ElementRef,\n    EventEmitter,\n    Input,\n    OnChanges,\n    OnDestroy,\n    OnInit,\n    Output,\n    QueryList,\n    SimpleChanges\n} from '@angular/core';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { Observable } from 'rxjs/Observable';\nimport { Subject } from 'rxjs/Subject';\nimport { Subscription } from 'rxjs/Subscription';\nimport'rxjs/add/operator/auditTime';\nimport'rxjs/add/operator/combineLatest';\nimport'rxjs/add/operator/partition';\nexport class InfiniteScrollDirective implements OnInit, AfterContentInit, OnChanges, OnDestroy {\n\n     load: InfiniteScrollLoadFunction;\n\n     _collection: any[] = [];\n/**\n * @return {?}\n */\nget collection() {\n        return this._collection;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset collection(value: any[]) {\n        this.collectionChange.emit(value);\n        this._collection = value;\n    }\n\n     enabled: boolean = true;\n     filter: any;\n     loadOnInit: boolean = true;\n     loadOnScroll: boolean = true;\n     pageSize: number = 20;\n     scrollElement: ElementRef;\n\n     collectionChange = new EventEmitter<any[]>();\n     loadingEvent = new EventEmitter<InfiniteScrollLoadingEvent>();\n     loadedEvent = new EventEmitter<InfiniteScrollLoadedEvent>();\n     loadErrorEvent = new EventEmitter<InfiniteScrollLoadErrorEvent>();\nprivate _loadButtonQuery: QueryList<InfiniteScrollLoadButtonDirective>;\nprivate _loadingIndicatorQuery: QueryList<InfiniteScrollLoadingDirective>;\nprivate _nextPageNum = 0;\nprivate _domObserver: MutationObserver;\nprivate _scrollEventSub: Subscription;\nprivate _updateRequests = new Subject<InfiniteScrollRequest>();\nprivate _isLoading = new BehaviorSubject<boolean>(false);\nprivate _isExhausted = new BehaviorSubject<boolean>(false);\nprivate _loadButtonEnabled = new BehaviorSubject<boolean>(false);\nprivate _canLoadManually: Observable<boolean>;\nprivate _loadButtonSubscriptions: Subscription[] = [];\n/**\n * @param {?} _element\n */\nconstructor(private _element: ElementRef) {\n\n        this._canLoadManually = this._isLoading.combineLatest(this._isExhausted, this._loadButtonEnabled, (isLoading, isExhausted, loadButtonEnabled) => {\n            return !isLoading && !isExhausted && loadButtonEnabled;\n        });\n    }\n/**\n * @return {?}\n */\nngOnInit() {\n\n        if (!this.scrollElement) {\n            this.scrollElement = this._element;\n        }\n\n        this._loadButtonEnabled.next(!this.loadOnScroll);\n    }\n/**\n * @return {?}\n */\nngAfterContentInit() {\n\n        // There are two kinds of update requests: check and load.\n        // Check requests are throttled and will only cause an update if more data is required\n        // to fill the scrolling view, and it isn't already loading some.\n        // Load requests are not throttled and always request a page of data.\n        const /** @type {?} */ requests = this._updateRequests.partition((r) => r.check);\n        requests[0].auditTime(200).subscribe(this.doRequest.bind(this));\n        requests[1].subscribe(this.doRequest.bind(this));\n\n        if (this.enabled) {\n\n            // Subscribe to scroll events and DOM changes.\n            this.attachEventHandlers();\n        }\n\n        // Connect the Load More button visible state.\n        this._canLoadManually.subscribe((canLoad) => {\n            this._loadButtonQuery.forEach((loadButton) => {\n                loadButton.visible = canLoad;\n            });\n        });\n\n        // Connect the loading indicator visible state.\n        this._isLoading.subscribe((isLoading) => {\n            this._loadingIndicatorQuery.forEach((loading) => {\n                loading.visible = isLoading;\n            });\n        });\n\n        // Link the Load More button click event to trigger an update.\n        this.attachLoadButtonEvents();\n        this._loadButtonQuery.changes.subscribe((query) => {\n            this.attachLoadButtonEvents();\n        });\n\n        // Initial update.\n        if (this.loadOnInit) {\n            this.loadNextPage();\n        }\n    }\n/**\n * @param {?} changes\n * @return {?}\n */\nngOnChanges(changes: SimpleChanges) {\n\n        let /** @type {?} */ check = true;\n\n        if (changes.enabled && changes.enabled.currentValue !== changes.enabled.previousValue) {\n            if (changes.enabled.currentValue) {\n                this.attachEventHandlers();\n                this.reset();\n                check = false;\n            } else {\n                this.detachEventHandlers();\n            }\n        }\n\n        if (this.enabled) {\n\n            if (changes.filter && changes.filter.currentValue !== changes.filter.previousValue) {\n                this.reset();\n                check = false;\n            }\n\n            if (changes.loadOnScroll) {\n                this._loadButtonEnabled.next(!changes.loadOnScroll.currentValue);\n            }\n\n            if (changes.pageSize && changes.pageSize.currentValue !== changes.pageSize.previousValue) {\n                this.reset();\n                check = false;\n            }\n\n            this._updateRequests.next({\n                check: check,\n                pageNumber: this._nextPageNum,\n                pageSize: this.pageSize,\n                filter: this.filter\n            });\n        }\n    }\n/**\n * @return {?}\n */\nngOnDestroy() {\n        this.detachEventHandlers();\n    }\n/**\n * Request an additional page of data.\n * @return {?}\n */\nloadNextPage() {\n\n        if (!this.enabled) {\n            return;\n        }\n\n        this._updateRequests.next({\n            check: false,\n            pageNumber: this._nextPageNum,\n            pageSize: this.pageSize,\n            filter: this.filter\n        });\n    }\n/**\n * Request a check for whether an additional page of data is required. This is throttled.\n * @return {?}\n */\ncheck() {\n\n        if (!this.enabled) {\n            return;\n        }\n\n        this._updateRequests.next({\n            check: true,\n            pageNumber: this._nextPageNum,\n            pageSize: this.pageSize,\n            filter: this.filter\n        });\n    }\n/**\n * Clear the collection. Future requests will load from page 0.\n * @return {?}\n */\nreset() {\n\n        if (!this.enabled) {\n            return;\n        }\n\n        // Reset the page counter.\n        this._nextPageNum = 0;\n\n        // Clear the collection (without changing the reference).\n        if (this.collection) {\n            this.collection.length = 0;\n        }\n\n        // Reset the exhausted flag, allowing the Load More button to appear.\n        this._isExhausted.next(false);\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nprivate onScroll(event: Event) {\n        this.check();\n    }\n/**\n * @return {?}\n */\nprivate onDomChange() {\n        this.check();\n    }\n/**\n * Attach scroll event handler and DOM observer.\n * @return {?}\n */\nprivate attachEventHandlers() {\n\n        // Subscribe to the scroll event on the target element.\n        this._scrollEventSub = Observable.fromEvent(this.scrollElement.nativeElement, 'scroll')\n            .subscribe(this.onScroll.bind(this));\n\n        // Subscribe to child DOM changes. The main effect of this is to check whether even more data is\n        // required after the initial load.\n        this._domObserver = new MutationObserver(this.onDomChange.bind(this));\n        this._domObserver.observe(this.scrollElement.nativeElement, {\n            childList: true,\n            subtree: true\n        });\n    }\n/**\n * Detach scroll event handler and DOM observer.\n * @return {?}\n */\nprivate detachEventHandlers() {\n        if (this._scrollEventSub) {\n            this._scrollEventSub.unsubscribe();\n            this._scrollEventSub = null;\n        }\n\n        if (this._domObserver) {\n            this._domObserver.disconnect();\n            this._domObserver = null;\n        }\n    }\n/**\n * Remove any existing event subscriptions for the load button `load` event, then attach subscriptions\n * for any in the query.\n * @return {?}\n */\nprivate attachLoadButtonEvents() {\n        this._loadButtonSubscriptions.forEach((s) => s.unsubscribe());\n        this._loadButtonSubscriptions = this._loadButtonQuery.map((loadButton) => {\n            return loadButton.load.subscribe(this.loadNextPage.bind(this));\n        });\n    }\n/**\n * Conditionally loads a page into the collection based on directive state and request parameters.\n * @param {?} request\n * @return {?}\n */\nprivate doRequest(request: InfiniteScrollRequest) {\n\n        // Load a new page if the scroll position is beyond the threshhold and if the client code did not \n        // cancel.\n        if (this.needsData(request) && this.beginLoading(request)) {\n\n            // Invoke the callback load function, which returns a promose or plain data.\n            const /** @type {?} */ loadResult = this.load(request.pageNumber, request.pageSize, request.filter);\n\n            Promise.resolve(loadResult)\n                .then((newData) => {\n\n                    // Make sure that the parameters have not changed since the load started;\n                    // otherwise discard the results.\n                    if (request.filter === this.filter && request.pageSize === this.pageSize) {\n\n                        if (newData && newData.length) {\n                            Array.prototype.push.apply(this.collection, newData);\n                        }\n\n                        // Emit the loaded event\n                        this.endLoading(request, newData);\n                    }\n                })\n                .catch((reason) => {\n                    // Emit the loadError event\n                    this.endLoadingWithError(request, reason);\n                });\n        }\n    }\n/**\n * Returns true if the request should be fulfilled.\n * @param {?} request\n * @return {?}\n */\nprivate needsData(request: InfiniteScrollRequest): boolean {\n\n        if (!this.enabled) {\n            return false;\n        }\n\n        // Always load for a load request\n        if (!request.check) {\n            return true;\n        }\n\n        // Ignore a check request when the end of data has been detected, or if data is currently loading.\n        if (this._isExhausted.getValue() || this._isLoading.getValue()) {\n            return false;\n        }\n\n        // Load if the remaining scroll area is <= the element height.\n        if (this.scrollElement && this.loadOnScroll) {\n            const /** @type {?} */ element = /** @type {?} */(( <HTMLElement>this.scrollElement.nativeElement));\n            const /** @type {?} */ remainingScroll = element.scrollHeight - (element.scrollTop + element.clientHeight);\n            return remainingScroll <= element.clientHeight;\n        }\n\n        return false;\n    }\n/**\n * Updates state for the beginning of a load. Returns false if the `loading` event was cancelled.\n * @param {?} request\n * @return {?}\n */\nprivate beginLoading(request: InfiniteScrollRequest): boolean {\n\n        const /** @type {?} */ event = new InfiniteScrollLoadingEvent(request.pageNumber, request.pageSize, request.filter);\n        this.loadingEvent.emit(event);\n\n        this._isLoading.next(!event.defaultPrevented());\n\n        return !event.defaultPrevented();\n    }\n/**\n * Updates state from a successful load. Raises the `loaded` event.\n * @param {?} request\n * @param {?=} data\n * @return {?}\n */\nprivate endLoading(request: InfiniteScrollRequest, data?: any) {\n\n        this._isLoading.next(false);\n\n        const /** @type {?} */ isExhausted = !!(data && data.length < this.pageSize);\n        this._isExhausted.next(isExhausted);\n\n        this.loadedEvent.emit(new InfiniteScrollLoadedEvent(request.pageNumber, request.pageSize, request.filter, data, isExhausted));\n\n        this._nextPageNum += 1;\n    }\n/**\n * Updates state from a failed load. Raises the `loadError` event.\n * @param {?} request\n * @param {?} error\n * @return {?}\n */\nprivate endLoadingWithError(request: InfiniteScrollRequest, error: any) {\n\n        this._isLoading.next(false);\n\n        this.loadErrorEvent.emit(new InfiniteScrollLoadErrorEvent(request.pageNumber, request.pageSize, request.filter, error));\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: '[uxInfiniteScroll]',\n    exportAs: 'uxInfiniteScroll'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'load': [{ type: Input, args: ['uxInfiniteScroll', ] },],\n'_collection': [{ type: Input, args: ['collection', ] },],\n'enabled': [{ type: Input },],\n'filter': [{ type: Input },],\n'loadOnInit': [{ type: Input },],\n'loadOnScroll': [{ type: Input },],\n'pageSize': [{ type: Input },],\n'scrollElement': [{ type: Input },],\n'collectionChange': [{ type: Output },],\n'loadingEvent': [{ type: Output, args: ['loading', ] },],\n'loadedEvent': [{ type: Output, args: ['loaded', ] },],\n'loadErrorEvent': [{ type: Output, args: ['loadError', ] },],\n'_loadButtonQuery': [{ type: ContentChildren, args: [InfiniteScrollLoadButtonDirective, ] },],\n'_loadingIndicatorQuery': [{ type: ContentChildren, args: [InfiniteScrollLoadingDirective, ] },],\n};\n}\n\nfunction InfiniteScrollDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nInfiniteScrollDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nInfiniteScrollDirective.ctorParameters;\n/** @type {?} */\nInfiniteScrollDirective.propDecorators;\n/** @type {?} */\nInfiniteScrollDirective.prototype.load;\n/** @type {?} */\nInfiniteScrollDirective.prototype._collection;\n/** @type {?} */\nInfiniteScrollDirective.prototype.enabled;\n/** @type {?} */\nInfiniteScrollDirective.prototype.filter;\n/** @type {?} */\nInfiniteScrollDirective.prototype.loadOnInit;\n/** @type {?} */\nInfiniteScrollDirective.prototype.loadOnScroll;\n/** @type {?} */\nInfiniteScrollDirective.prototype.pageSize;\n/** @type {?} */\nInfiniteScrollDirective.prototype.scrollElement;\n/** @type {?} */\nInfiniteScrollDirective.prototype.collectionChange;\n/** @type {?} */\nInfiniteScrollDirective.prototype.loadingEvent;\n/** @type {?} */\nInfiniteScrollDirective.prototype.loadedEvent;\n/** @type {?} */\nInfiniteScrollDirective.prototype.loadErrorEvent;\n/** @type {?} */\nInfiniteScrollDirective.prototype._loadButtonQuery;\n/** @type {?} */\nInfiniteScrollDirective.prototype._loadingIndicatorQuery;\n/** @type {?} */\nInfiniteScrollDirective.prototype._nextPageNum;\n/** @type {?} */\nInfiniteScrollDirective.prototype._domObserver;\n/** @type {?} */\nInfiniteScrollDirective.prototype._scrollEventSub;\n/** @type {?} */\nInfiniteScrollDirective.prototype._updateRequests;\n/** @type {?} */\nInfiniteScrollDirective.prototype._isLoading;\n/** @type {?} */\nInfiniteScrollDirective.prototype._isExhausted;\n/** @type {?} */\nInfiniteScrollDirective.prototype._loadButtonEnabled;\n/** @type {?} */\nInfiniteScrollDirective.prototype._canLoadManually;\n/** @type {?} */\nInfiniteScrollDirective.prototype._loadButtonSubscriptions;\n/** @type {?} */\nInfiniteScrollDirective.prototype._element;\n}\n\n/**\n * The internal data associated with a load/check request.\n */\nclass InfiniteScrollRequest {\n    check: boolean;\n    pageNumber: number;\n    pageSize: number;\n    filter: any;\n}\n\nfunction InfiniteScrollRequest_tsickle_Closure_declarations() {\n/** @type {?} */\nInfiniteScrollRequest.prototype.check;\n/** @type {?} */\nInfiniteScrollRequest.prototype.pageNumber;\n/** @type {?} */\nInfiniteScrollRequest.prototype.pageSize;\n/** @type {?} */\nInfiniteScrollRequest.prototype.filter;\n}\n\n\nexport type InfiniteScrollLoadFunction = (pageNum: number, pageSize: number, filter: any) => any | Promise<any>;\n/**\n * Event raised before the `loading` function is called.\n */\nexport class InfiniteScrollLoadingEvent {\nprivate _defaultPrevented = false;\n/**\n * @param {?} pageNumber\n * @param {?} pageSize\n * @param {?} filter\n */\nconstructor(\npublic pageNumber: number,\npublic pageSize: number,\npublic filter: any) { }\n/**\n * Prevents the default behaviour of the `loading` event (loading function will not be called).\n * @return {?}\n */\npreventDefault() {\n        this._defaultPrevented = true;\n    }\n/**\n * @return {?}\n */\ndefaultPrevented(): boolean {\n        return this._defaultPrevented;\n    }\n}\n\nfunction InfiniteScrollLoadingEvent_tsickle_Closure_declarations() {\n/** @type {?} */\nInfiniteScrollLoadingEvent.prototype._defaultPrevented;\n/**\n * The index of the requested page, starting from 0.\n * @type {?}\n */\nInfiniteScrollLoadingEvent.prototype.pageNumber;\n/**\n * The number of items requested.\n * @type {?}\n */\nInfiniteScrollLoadingEvent.prototype.pageSize;\n/**\n * The filter details as provided via the `filter` binding.\n * @type {?}\n */\nInfiniteScrollLoadingEvent.prototype.filter;\n}\n\n/**\n * Event raised when the loading function result has been resolved and added to the collection.\n */\nexport class InfiniteScrollLoadedEvent {\n/**\n * @param {?} pageNumber\n * @param {?} pageSize\n * @param {?} filter\n * @param {?} data\n * @param {?} exhausted\n */\nconstructor(\npublic pageNumber: number,\npublic pageSize: number,\npublic filter: any,\npublic data: any,\npublic exhausted: boolean) { }\n}\n\nfunction InfiniteScrollLoadedEvent_tsickle_Closure_declarations() {\n/**\n * The index of the requested page, starting from 0.\n * @type {?}\n */\nInfiniteScrollLoadedEvent.prototype.pageNumber;\n/**\n * The number of items requested.\n * @type {?}\n */\nInfiniteScrollLoadedEvent.prototype.pageSize;\n/**\n * The filter details as provided via the `filter` binding.\n * @type {?}\n */\nInfiniteScrollLoadedEvent.prototype.filter;\n/**\n * The result of the promise returned from the loading function.\n * @type {?}\n */\nInfiniteScrollLoadedEvent.prototype.data;\n/**\n * True if the data is considered exhausted (number of items returned less than `pageSize`).\n * @type {?}\n */\nInfiniteScrollLoadedEvent.prototype.exhausted;\n}\n\n/**\n * Event raised if the loading function returns a rejected promise.\n */\nexport class InfiniteScrollLoadErrorEvent {\n/**\n * @param {?} pageNumber\n * @param {?} pageSize\n * @param {?} filter\n * @param {?} error\n */\nconstructor(\npublic pageNumber: number,\npublic pageSize: number,\npublic filter: any,\npublic error: any) { }\n}\n\nfunction InfiniteScrollLoadErrorEvent_tsickle_Closure_declarations() {\n/**\n * The index of the requested page, starting from 0.\n * @type {?}\n */\nInfiniteScrollLoadErrorEvent.prototype.pageNumber;\n/**\n * The number of items requested.\n * @type {?}\n */\nInfiniteScrollLoadErrorEvent.prototype.pageSize;\n/**\n * The filter details as provided via the `filter` binding.\n * @type {?}\n */\nInfiniteScrollLoadErrorEvent.prototype.filter;\n/**\n * The object provided when rejecting the promise.\n * @type {?}\n */\nInfiniteScrollLoadErrorEvent.prototype.error;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { InfiniteScrollLoadButtonDirective } from './infinite-scroll-load-button.directive';\nimport { InfiniteScrollLoadingDirective } from './infinite-scroll-loading.directive';\nimport { InfiniteScrollDirective } from './infinite-scroll.directive';\nimport { NgModule } from '@angular/core';\nexport class InfiniteScrollModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [],\n    exports: [\n        InfiniteScrollDirective,\n        InfiniteScrollLoadButtonDirective,\n        InfiniteScrollLoadingDirective\n    ],\n    declarations: [\n        InfiniteScrollDirective,\n        InfiniteScrollLoadButtonDirective,\n        InfiniteScrollLoadingDirective\n    ],\n    providers: [],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction InfiniteScrollModule_tsickle_Closure_declarations() {\n/** @type {?} */\nInfiniteScrollModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nInfiniteScrollModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable, Inject } from '@angular/core';\nexport class ScrollIntoViewService {\n/**\n * @param {?} elem\n * @param {?} scrollParent\n * @return {?}\n */\nscrollIntoView(elem: HTMLElement, scrollParent: HTMLElement) {\n        const /** @type {?} */ offsetTop = (elem.getBoundingClientRect().top + scrollParent.scrollTop) - scrollParent.getBoundingClientRect().top;\n        if (offsetTop < scrollParent.scrollTop) {\n            scrollParent.scrollTop = offsetTop;\n        } else {\n            const /** @type {?} */ offsetBottom = offsetTop + elem.offsetHeight;\n            if (offsetBottom > (scrollParent.scrollTop + scrollParent.clientHeight)) {\n                scrollParent.scrollTop = offsetBottom - scrollParent.clientHeight;\n            }\n        }\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ScrollIntoViewService_tsickle_Closure_declarations() {\n/** @type {?} */\nScrollIntoViewService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nScrollIntoViewService.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { ScrollIntoViewService } from './scroll-into-view.service';\nimport { Directive, ElementRef, Input, OnChanges, SimpleChanges } from '@angular/core';\nexport class ScrollIntoViewIfDirective implements OnChanges {\n\n     condition = false;\n     scrollParent: HTMLElement;\n/**\n * @param {?} element\n * @param {?} scrollIntoViewService\n */\nconstructor(private element: ElementRef,\nprivate scrollIntoViewService: ScrollIntoViewService) {}\n/**\n * @param {?} changes\n * @return {?}\n */\nngOnChanges(changes: SimpleChanges) {\n        if (this.condition) {\n            setTimeout(() => {\n                this.scrollIntoViewService.scrollIntoView(this.element.nativeElement, this.scrollParent);\n            });\n        }\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{ selector: '[uxScrollIntoViewIf]' }, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: ScrollIntoViewService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'condition': [{ type: Input, args: ['uxScrollIntoViewIf', ] },],\n'scrollParent': [{ type: Input },],\n};\n}\n\nfunction ScrollIntoViewIfDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nScrollIntoViewIfDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nScrollIntoViewIfDirective.ctorParameters;\n/** @type {?} */\nScrollIntoViewIfDirective.propDecorators;\n/** @type {?} */\nScrollIntoViewIfDirective.prototype.condition;\n/** @type {?} */\nScrollIntoViewIfDirective.prototype.scrollParent;\n/** @type {?} */\nScrollIntoViewIfDirective.prototype.element;\n/** @type {?} */\nScrollIntoViewIfDirective.prototype.scrollIntoViewService;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\n\nimport { ScrollIntoViewIfDirective } from './scroll-into-view-if.directive';\nimport { ScrollIntoViewService } from './scroll-into-view.service';\nexport class ScrollIntoViewIfModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [],\n    exports: [ScrollIntoViewIfDirective],\n    declarations: [ScrollIntoViewIfDirective],\n    providers: [ScrollIntoViewService],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ScrollIntoViewIfModule_tsickle_Closure_declarations() {\n/** @type {?} */\nScrollIntoViewIfModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nScrollIntoViewIfModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { InfiniteScrollModule } from '../../directives/infinite-scroll/index';\nimport { ScrollIntoViewIfModule } from '../../directives/scroll-into-view-if/index';\nimport { TypeaheadKeyService } from './typeahead-key.service';\nimport { TypeaheadComponent } from './typeahead.component';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nexport class TypeaheadModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        CommonModule,\n        InfiniteScrollModule,\n        ScrollIntoViewIfModule\n    ],\n    exports: [TypeaheadComponent],\n    declarations: [TypeaheadComponent],\n    providers: [TypeaheadKeyService],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction TypeaheadModule_tsickle_Closure_declarations() {\n/** @type {?} */\nTypeaheadModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTypeaheadModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { InfiniteScrollLoadFunction } from '../../directives/infinite-scroll/index';\nimport { TypeaheadComponent, TypeaheadKeyService, TypeaheadOptionEvent } from '../typeahead/index';\nimport { Component, ElementRef, EventEmitter, forwardRef, Inject, Input, OnChanges, OnInit, Output, SimpleChanges, TemplateRef, ViewChild } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { DOCUMENT } from '@angular/platform-browser';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { Observable } from 'rxjs/Observable';\n\nexport const /** @type {?} */ SELECT_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => SelectComponent),\n    multi: true\n};\nexport class SelectComponent implements OnInit, OnChanges, ControlValueAccessor {\nprivate _value: any;\n/**\n * @return {?}\n */\nget value() {\n        return this._value;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset value(value: any) {\n        this._value = value;\n        this.valueChange.emit(value);\n        this.propagateChange(value);\n    }\n\n     valueChange = new EventEmitter<any>();\nprivate _input = new BehaviorSubject<string>('');\n/**\n * @return {?}\n */\nget input() {\n        return this._input.getValue();\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset input(value: string) {\n        this._input.next(value);\n        this.inputChange.emit(value);\n    }\n\n     inputChange = new EventEmitter<string>();\nprivate _dropdownOpen: boolean = false;\n/**\n * @return {?}\n */\nget dropdownOpen() {\n        return this._dropdownOpen;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset dropdownOpen(value: boolean) {\n        this._dropdownOpen = value;\n        this.dropdownOpenChange.emit(value);\n    }\n\n     dropdownOpenChange = new EventEmitter<boolean>();\n\n     options: any[] | InfiniteScrollLoadFunction;\n     display: (option: any) => string | string;\n     key: (option: any) => string | string;\n     allowNull: boolean = false;\n     disabled: boolean = false;\n     dropDirection: 'up' | 'down' = 'down';\n     maxHeight: string = '250px';\n     multiple: boolean = false;\n     pageSize: number = 20;\n     placeholder: string;\n\n     loadingTemplate: TemplateRef<any>;\n     noOptionsTemplate: TemplateRef<any>;\n     optionTemplate: TemplateRef<any>;\n\n     singleInput: ElementRef;\n     multipleTypeahead: TypeaheadComponent;\n     singleTypeahead: TypeaheadComponent;\n\n    filter: Observable<string>;\n\n    propagateChange = (_: any) => { };\n/**\n * @param {?} _element\n * @param {?} _document\n * @param {?} _typeaheadKeyService\n */\nconstructor(\nprivate _element: ElementRef,\nprivate _document: Document,\nprivate _typeaheadKeyService: TypeaheadKeyService) { }\n/**\n * @return {?}\n */\nngOnInit() {\n\n        // Changes to the input field\n        this._input.subscribe((next) => {\n            if (!this.multiple && next !== this.getDisplay(this.value)) {\n                if (this.allowNull) {\n                    this.value = null;\n                }\n            }\n        });\n\n        // Set up filter from input\n        this.filter = this._input\n            .map((input) => {\n                if (!this.multiple && input === this.getDisplay(this.value)) {\n                    return '';\n                }\n                return input;\n            })\n            .debounceTime(200);\n\n        // Changes to filter value\n        this.filter.subscribe((next) => {\n\n            // Open the dropdown when filter is nonempty.\n            if (next && next.length > 0) {\n                this.dropdownOpen = true;\n            }\n        });\n    }\n/**\n * @param {?} changes\n * @return {?}\n */\nngOnChanges(changes: SimpleChanges) {\n        if (changes.value) {\n            if (!this.multiple && changes.value.currentValue !== null) {\n                this.input = this.getDisplay(changes.value.currentValue);\n            }\n        }\n        if (changes.multiple && !changes.multiple.firstChange && changes.multiple.currentValue !== changes.multiple.previousValue) {\n            this.input = '';\n        }\n    }\n/**\n * @param {?} obj\n * @return {?}\n */\nwriteValue(obj: any): void {\n        if (obj !== undefined) {\n            this._value = obj;\n        }\n    }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnChange(fn: any): void {\n        this.propagateChange = fn;\n    }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnTouched(fn: any): void { }\n/**\n * @param {?} isDisabled\n * @return {?}\n */\nsetDisabledState(isDisabled: boolean): void {\n        this.disabled = isDisabled;\n    }\n/**\n * @param {?} event\n * @return {?}\n */\ninputClickHandler(event: MouseEvent) {\n        this.selectInputText();\n        this.dropdownOpen = true;\n    }\n/**\n * @param {?} event\n * @return {?}\n */\ninputBlurHandler(event: Event) {\n        // Close dropdown and reset text input if focus is lost\n        setTimeout(() => {\n            if (!this._element.nativeElement.contains(this._document.activeElement)) {\n                this.dropdownOpen = false;\n                if (!this.multiple) {\n                    this.input = this.getDisplay(this.value);\n                }\n            }\n        }, 200);\n    }\n/**\n * Key handler for single select only. Multiple select key handling is in TagInputComponent.\n * @param {?} event\n * @return {?}\n */\ninputKeyHandler(event: KeyboardEvent) {\n\n        // Standard keys for typeahead (up/down/esc)\n        this._typeaheadKeyService.handleKey(event, this.singleTypeahead);\n\n        switch (event.key) {\n            case 'Enter':\n                if (this.dropdownOpen) {\n                    // Set the highlighted option as the value and close\n                    this.value = this.singleTypeahead.highlighted;\n                    this.dropdownOpen = false;\n                }\n\n                // Update the input field. If dropdown isn't open then reset it to the previous value.\n                this.input = this.getDisplay(this.value);\n                event.preventDefault();\n                break;\n        }\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nsingleOptionSelected(event: TypeaheadOptionEvent) {\n        if (event.option) {\n            this.value = event.option;\n            this.dropdownOpen = false;\n        }\n    }\n/**\n * Returns the display value of the given option.\n * @param {?} option\n * @return {?}\n */\ngetDisplay(option: any): string {\n        if (option === null || option === undefined) {\n            return '';\n        }\n        if (typeof this.display === 'function') {\n            return this.display(option);\n        }\n        if (typeof this.display === 'string' && option.hasOwnProperty(this.display)) {\n            return option[ /** @type {?} */((<string>this.display))];\n        }\n        return option;\n    }\n/**\n * @return {?}\n */\nprivate selectInputText() {\n        this.singleInput.nativeElement.select();\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-select',\n    template: `\n      <ux-tag-input *ngIf=\"multiple\"\n          [(tags)]=\"value\"\n          [(input)]=\"input\"\n          [addOnPaste]=\"false\"\n          [disabled]=\"disabled\"\n          [display]=\"display\"\n          [freeInput]=\"false\"\n          [placeholder]=\"placeholder\"\n          [showTypeaheadOnClick]=\"true\">\n\n          <ux-typeahead #multipleTypeahead\n              [options]=\"options\"\n              [filter]=\"filter | async\"\n              [(open)]=\"dropdownOpen\"\n              [display]=\"display\"\n              [key]=\"key\"\n              [disabledOptions]=\"value\"\n              [dropDirection]=\"dropDirection\"\n              [maxHeight]=\"maxHeight\"\n              [pageSize]=\"pageSize\"\n              [selectFirst]=\"true\"\n              [loadingTemplate]=\"loadingTemplate\"\n              [optionTemplate]=\"optionTemplate\"\n              [noOptionsTemplate]=\"noOptionsTemplate\">\n          </ux-typeahead>\n\n      </ux-tag-input>\n\n      <div *ngIf=\"!multiple\" class=\"inner-addon right-addon\" [class.disabled]=\"disabled\">\n\n          <i class=\"hpe-icon\"\n              [class.hpe-down]=\"dropDirection === 'down'\"\n              [class.hpe-up]=\"dropDirection === 'up'\"></i>\n\n          <input #singleInput type=\"text\" class=\"form-control\"\n              [(ngModel)]=\"input\"\n              [placeholder]=\"placeholder\"\n              [disabled]=\"disabled\"\n              (click)=\"inputClickHandler($event)\"\n              (blur)=\"inputBlurHandler($event)\"\n              (keydown)=\"inputKeyHandler($event)\">\n\n          <ux-typeahead #singleTypeahead\n              [options]=\"options\"\n              [filter]=\"filter | async\"\n              [(open)]=\"dropdownOpen\"\n              [display]=\"display\"\n              [key]=\"key\"\n              [dropDirection]=\"dropDirection\"\n              [maxHeight]=\"maxHeight\"\n              [openOnFilterChange]=\"false\"\n              [pageSize]=\"pageSize\"\n              [selectFirst]=\"true\"\n              [loadingTemplate]=\"loadingTemplate\"\n              [optionTemplate]=\"optionTemplate\"\n              [noOptionsTemplate]=\"noOptionsTemplate\"\n              (optionSelected)=\"singleOptionSelected($event)\" >\n          </ux-typeahead>\n\n      </div>\n    `,\n    providers: [SELECT_VALUE_ACCESSOR]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Document, decorators: [{ type: Inject, args: [DOCUMENT, ] }, ]},\n{type: TypeaheadKeyService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'value': [{ type: Input },],\n'valueChange': [{ type: Output },],\n'input': [{ type: Input },],\n'inputChange': [{ type: Output },],\n'dropdownOpen': [{ type: Input },],\n'dropdownOpenChange': [{ type: Output },],\n'options': [{ type: Input },],\n'display': [{ type: Input },],\n'key': [{ type: Input },],\n'allowNull': [{ type: Input },],\n'disabled': [{ type: Input },],\n'dropDirection': [{ type: Input },],\n'maxHeight': [{ type: Input },],\n'multiple': [{ type: Input },],\n'pageSize': [{ type: Input },],\n'placeholder': [{ type: Input },],\n'loadingTemplate': [{ type: Input },],\n'noOptionsTemplate': [{ type: Input },],\n'optionTemplate': [{ type: Input },],\n'singleInput': [{ type: ViewChild, args: ['singleInput', ] },],\n'multipleTypeahead': [{ type: ViewChild, args: ['multipleTypeahead', ] },],\n'singleTypeahead': [{ type: ViewChild, args: ['singleTypeahead', ] },],\n};\n}\n\nfunction SelectComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nSelectComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSelectComponent.ctorParameters;\n/** @type {?} */\nSelectComponent.propDecorators;\n/** @type {?} */\nSelectComponent.prototype._value;\n/** @type {?} */\nSelectComponent.prototype.valueChange;\n/** @type {?} */\nSelectComponent.prototype._input;\n/** @type {?} */\nSelectComponent.prototype.inputChange;\n/** @type {?} */\nSelectComponent.prototype._dropdownOpen;\n/** @type {?} */\nSelectComponent.prototype.dropdownOpenChange;\n/** @type {?} */\nSelectComponent.prototype.options;\n/** @type {?} */\nSelectComponent.prototype.display;\n/** @type {?} */\nSelectComponent.prototype.key;\n/** @type {?} */\nSelectComponent.prototype.allowNull;\n/** @type {?} */\nSelectComponent.prototype.disabled;\n/** @type {?} */\nSelectComponent.prototype.dropDirection;\n/** @type {?} */\nSelectComponent.prototype.maxHeight;\n/** @type {?} */\nSelectComponent.prototype.multiple;\n/** @type {?} */\nSelectComponent.prototype.pageSize;\n/** @type {?} */\nSelectComponent.prototype.placeholder;\n/** @type {?} */\nSelectComponent.prototype.loadingTemplate;\n/** @type {?} */\nSelectComponent.prototype.noOptionsTemplate;\n/** @type {?} */\nSelectComponent.prototype.optionTemplate;\n/** @type {?} */\nSelectComponent.prototype.singleInput;\n/** @type {?} */\nSelectComponent.prototype.multipleTypeahead;\n/** @type {?} */\nSelectComponent.prototype.singleTypeahead;\n/** @type {?} */\nSelectComponent.prototype.filter;\n/** @type {?} */\nSelectComponent.prototype.propagateChange;\n/** @type {?} */\nSelectComponent.prototype._element;\n/** @type {?} */\nSelectComponent.prototype._document;\n/** @type {?} */\nSelectComponent.prototype._typeaheadKeyService;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","\nexport class TagInputEvent {\nprivate _defaultPrevented = false;\n/**\n * @param {?} tag\n */\nconstructor(public tag: any) {}\n/**\n * @return {?}\n */\npreventDefault() {\n        this._defaultPrevented = true;\n    }\n/**\n * @return {?}\n */\ndefaultPrevented(): boolean {\n        return this._defaultPrevented;\n    }\n}\n\nfunction TagInputEvent_tsickle_Closure_declarations() {\n/** @type {?} */\nTagInputEvent.prototype._defaultPrevented;\n/** @type {?} */\nTagInputEvent.prototype.tag;\n}\n","import { TypeaheadComponent, TypeaheadKeyService } from '../typeahead/index';\nimport { TypeaheadOptionEvent } from '../typeahead/typeahead-event';\nimport { TagInputEvent } from './tag-input-event';\nimport {\n    AfterContentInit,\n    Component,\n    ContentChildren,\n    ElementRef,\n    EventEmitter,\n    forwardRef,\n    HostListener,\n    Inject,\n    Input,\n    OnChanges,\n    OnInit,\n    Output,\n    QueryList,\n    SimpleChanges,\n    TemplateRef,\n    ViewChild\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALIDATORS, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { DOCUMENT } from '@angular/platform-browser';\n\n\nconst /** @type {?} */ TAGINPUT_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => TagInputComponent),\n    multi: true\n};\nconst /** @type {?} */ TAGINPUT_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => TagInputComponent),\n    multi: true\n};\nexport class TagInputComponent implements OnInit, AfterContentInit, OnChanges, ControlValueAccessor {\nprivate _tags: any[] = [];\n/**\n * @return {?}\n */\nget tags() {\n        if (!this._tags) {\n            this._tags = [];\n        }\n        return this._tags;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset tags(value: any[]) {\n        this._tags = value;\n        this.onChangeHandler(this._tags);\n        this.tagsChange.emit(this._tags);\n    }\n\n     tagsChange = new EventEmitter<any[]>();\nprivate _input: string = '';\n/**\n * @return {?}\n */\nget input() {\n        return this._input;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset input(value: string) {\n        this._input = value;\n        this.inputChange.emit(value);\n    }\n\n     inputChange = new EventEmitter<string>();\n\n     display: (option: any) => string | string;\n     addOnPaste: boolean = true;\n     disabled: boolean = false;\n     enforceTagLimits: boolean = false;\n     freeInput: boolean = true;\n     maxTags: number = Number.MAX_VALUE;\n     minTags: number = 0;\n     placeholder: string = '';\n     showTypeaheadOnClick: boolean = false;\n     tagDelimiters: string = '';\n     tagPattern: RegExp;\n     tagTemplate: TemplateRef<any>;\n     tagClass: TagClassFunction = () => undefined;\n     validationErrors: any = {};\n     createTagHandler: (value: string) => any;\n\n     tagAdding = new EventEmitter<TagInputEvent>();\n     tagAdded = new EventEmitter<TagInputEvent>();\n     tagInvalidated = new EventEmitter<TagInputEvent>();\n     tagRemoving = new EventEmitter<TagInputEvent>();\n     tagRemoved = new EventEmitter<TagInputEvent>();\n     tagClick = new EventEmitter<TagInputEvent>();\n\n     typeaheadQuery: QueryList<TypeaheadComponent>;\n\n     tagInput: ElementRef;\nprivate _defaultTagTemplate: TemplateRef<any>;\n\n    selectedIndex: number = -1;\n\n    tagApi: TagApi = {\n        getTagDisplay: this.getTagDisplay.bind(this),\n        removeTagAt: this.removeTagAt.bind(this),\n        canRemoveTagAt: this.canRemoveTagAt.bind(this)\n    };\n\n    valid: boolean = true;\n    inputValid: boolean = true;\n\n    typeahead: TypeaheadComponent;\nprivate onChangeHandler: (_: any) => void = () => { };\nprivate onTouchedHandler: () => void = () => { };\n/**\n * @param {?} _element\n * @param {?} _document\n * @param {?} _typeaheadKeyService\n */\nconstructor(\nprivate _element: ElementRef,\nprivate _document: Document,\nprivate _typeaheadKeyService: TypeaheadKeyService) { }\n/**\n * @return {?}\n */\nngOnInit() {\n        if (!this.tagTemplate) {\n            this.tagTemplate = this._defaultTagTemplate;\n        }\n    }\n/**\n * @return {?}\n */\nngAfterContentInit() {\n        // Watch for optional child typeahead control\n        this.connectTypeahead(this.typeaheadQuery.first);\n        this.typeaheadQuery.changes.subscribe((query) => {\n            this.connectTypeahead(query.first);\n        });\n    }\n/**\n * @param {?} changes\n * @return {?}\n */\nngOnChanges(changes: SimpleChanges) {\n        if (changes.disabled) {\n            if (changes.disabled.currentValue) {\n                // Clear selection and close dropdown\n                this.selectedIndex = -1;\n                if (this.typeahead) {\n                    this.typeahead.open = false;\n                }\n            }\n        }\n\n        // Update validation status\n        this.validate();\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nwriteValue(value: any[]) {\n        if (value) {\n            this.tags = value;\n        }\n    }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnChange(fn: any) {\n        this.onChangeHandler = fn;\n    }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnTouched(fn: any) {\n        this.onTouchedHandler = fn;\n    }\n/**\n * Validate the value of the control (tags property).\n * @return {?}\n */\nvalidate() {\n        this.valid = true;\n        let /** @type {?} */ tagRangeError = null;\n        if (this.tags && (this.tags.length < this.minTags || this.tags.length > this.maxTags)) {\n            tagRangeError = {\n                given: this.tags.length,\n                min: this.minTags,\n                max: this.maxTags\n            };\n            this.valid = false;\n        }\n        this.validationErrors['tagRangeError'] = tagRangeError;\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nkeyHandler(event: KeyboardEvent) {\n\n        if (this.disabled) { return; }\n\n        // Get the input field cursor location\n        const /** @type {?} */ inputCursorPos = this.tagInput.nativeElement.selectionStart;\n\n        // Determine if the input field has any text selected\n        const /** @type {?} */ hasSelection = this.tagInput.nativeElement.selectionStart !== this.tagInput.nativeElement.selectionEnd;\n\n        // Determine if a tag has focus\n        const /** @type {?} */ tagSelected = this.isValidTagIndex(this.selectedIndex);\n        \n        const /** @type {?} */ inputLength = this.input ? this.input.length : 0;\n\n        // Check whether the arrow keys can move the selection. Otherwise the input field takes the event.\n        const /** @type {?} */ canNavigateLeft = tagSelected || (inputCursorPos <= 0 && !hasSelection);\n        const /** @type {?} */ canNavigateRight = tagSelected || (inputCursorPos >= inputLength && !hasSelection);\n\n        // Forward key events to the typeahead component.\n        this._typeaheadKeyService.handleKey(event, this.typeahead);\n\n        switch (event.key) {\n            case 'Enter':\n                // Check if a typeahead option is highlighted\n                if (this.typeahead && this.typeahead.open && this.typeahead.highlighted) {\n                    // Add the typeahead option as a tag, clear the input, and close the dropdown\n                    this.commitTypeahead(this.typeahead.highlighted);\n                    this.typeahead.open = false;\n                } else {\n                    // Validate and add the input text as a tag, if possible\n                    this.commitInput();\n                }\n                event.preventDefault();\n                break;\n            case 'Backspace':\n                if (canNavigateLeft) {\n                    this.backspace();\n                    event.stopPropagation();\n                    event.preventDefault();\n                }\n                break;\n            case 'Delete':\n            case 'Del':\n                if (tagSelected) {\n                    this.removeTagAt(this.selectedIndex);\n                }\n                break;\n            case 'ArrowLeft':\n            case 'Left':\n                if (canNavigateLeft) {\n                    this.moveSelection(-1);\n                    event.preventDefault();\n                }\n                break;\n            case 'ArrowRight':\n            case 'Right':\n                if (canNavigateRight) {\n                    this.moveSelection(1);\n                    event.preventDefault();\n                }\n                break;\n        }\n\n        // Check for keys in the tagDelimiters\n        if (this.tagDelimiters && this.tagDelimiters.indexOf(this.getKeyChar(event)) >= 0) {\n            // Commit previous text\n            this.commitInput();\n            event.stopPropagation();\n            event.preventDefault();\n        }\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nfocusOutHandler(event: FocusEvent) {\n        // Close the dropdown on blur\n        setTimeout(() => {\n            if (!this._element.nativeElement.contains(this._document.activeElement)) {\n                this.selectedIndex = -1;\n                if (this.typeahead) {\n                    this.typeahead.open = false;\n                }\n            }\n        }, 200);\n    }\n/**\n * @param {?} event\n * @param {?} tag\n * @param {?} index\n * @return {?}\n */\ntagClickHandler(event: MouseEvent, tag: any, index: number) {\n\n        if (this.disabled) { return; }\n\n        // Send tagClick event\n        const /** @type {?} */ tagClickEvent = new TagInputEvent(tag);\n        this.tagClick.emit(tagClickEvent);\n\n        // Prevent focus if preventDefault() was called\n        if (tagClickEvent.defaultPrevented()) {\n            event.preventDefault();\n            return;\n        }\n\n        // Select the tag (for IE that doesn't propagate focus)\n        this.selectTagAt(index);\n    }\n/**\n * @return {?}\n */\ninputClickHandler() {\n\n        if (this.disabled) { return; }\n\n        if (this.typeahead && this.showTypeaheadOnClick) {\n            this.typeahead.open = true;\n        }\n    }\n/**\n * @return {?}\n */\ninputFocusHandler() {\n\n        if (this.disabled) { return; }\n\n        this.selectInput();\n    }\n/**\n * @param {?} event\n * @return {?}\n */\ninputPasteHandler(event: ClipboardEvent) {\n\n        if (this.disabled) { return; }\n\n        if (this.addOnPaste) {\n            // Get text from the clipboard\n            let /** @type {?} */ input: string = null;\n            if (event.clipboardData) {\n                input = event.clipboardData.getData('text/plain');\n            } else if (( /** @type {?} */((<any>window))).clipboardData) {\n                // Internet Explorer only\n                input = ( /** @type {?} */((<any>window))).clipboardData.getData('Text');\n            }\n\n            // Commit the clipboard text directly\n            if (this.commit(input)) {\n                this.selectInput();\n                event.stopPropagation();\n                event.preventDefault();\n            }\n        }\n    }\n/**\n * @param {?} event\n * @return {?}\n */\ntypeaheadOptionSelectedHandler(event: TypeaheadOptionEvent) {\n\n        if (this.disabled) { return; }\n\n        // When the typeahead sends the optionSelected event, commit the object directly\n        this.commitTypeahead(event.option);\n    }\n/**\n * Commit the current input value and clear the input field if successful.\n * @return {?}\n */\ncommitInput() {\n        if (this.commit(this.input)) {\n            this.selectInput();\n            this.input = '';\n        }\n    }\n/**\n * Commit the given tag object and clear the input if successful.\n * @param {?} tag\n * @return {?}\n */\ncommitTypeahead(tag: any) {\n        if (this.addTag(tag)) {\n            this.selectInput();\n            this.input = '';\n        }\n    }\n/**\n * Commit the given string value as one or more tags, if validation passes. Returns true if the tag(s) were created.\n * @param {?} input\n * @return {?}\n */\ncommit(input: string): boolean {\n        if (input && this.freeInput) {\n\n            // Split the tags by the tagDelimiters if configured\n            const /** @type {?} */ newTags = this.splitTagInput(input);\n\n            // Check tag validation for all of the individual values\n            let /** @type {?} */ allValid = true;\n            for (let /** @type {?} */ newTag of newTags) {\n                const /** @type {?} */ valid = this.validateTag(newTag);\n                if (!valid) {\n                    allValid = false;\n                }\n            }\n\n            // Add the tags if all are valid\n            if (allValid) {\n                for (let /** @type {?} */ newTag of newTags) {\n                    this.addTag(this.createTag(newTag));\n                }\n\n                return true;\n            }\n        }\n\n        return false;\n    }\n/**\n * If no tag is selected, select the rightmost tag. If a tag is selected, remove it.\n * @return {?}\n */\nbackspace() {\n\n        if (this.disabled) { return; }\n\n        if (!this.isValidTagIndex(this.selectedIndex)) {\n            this.selectTagAt(this.tags.length - 1);\n        } else {\n            this.removeTagAt(this.selectedIndex);\n        }\n    }\n/**\n * Move the highlighted option forwards or backwards in the list. Wraps at the limits.\n * @param {?} d Value to be added to the selected index, i.e. -1 to move backwards, +1 to move forwards.\n * @return {?}\n */\nmoveSelection(d: number) {\n\n        if (this.disabled) { return; }\n\n        if (this.isValidSelectIndex(this.selectedIndex)) {\n            this.selectedIndex += d;\n\n            // Do wrapping of selection when out of bounds\n            if (this.selectedIndex < 0) {\n                this.selectedIndex = this.tags.length;\n            } else if (this.selectedIndex > this.tags.length) {\n                this.selectedIndex = 0;\n            }\n        }\n    }\n/**\n * Returns a value to display for the given tag. Uses display function/property name if set, otherwise assumes that the tag is a simple string.\n * @param {?} tag\n * @return {?}\n */\ngetTagDisplay(tag: any): string {\n        if (typeof this.display === 'function') {\n            return this.display(tag);\n        }\n        if (typeof this.display === 'string') {\n            return tag[ /** @type {?} */((<string>this.display))];\n        }\n        return tag;\n    }\n/**\n * Returns true if the given index is selected (tag index or input field).\n * @param {?} index\n * @return {?}\n */\nisSelected(index: number): boolean {\n        return index === this.selectedIndex;\n    }\n/**\n * Select the tag at the given index. Does nothing if disabled is true.\n * @param {?} tagIndex\n * @return {?}\n */\nselectTagAt(tagIndex: number) {\n\n        if (this.disabled) { return; }\n\n        if (this.isValidTagIndex(tagIndex)) {\n            this.selectedIndex = tagIndex;\n        }\n    }\n/**\n * Select the input field, giving it focus. Does nothing if disabled is true.\n * @return {?}\n */\nselectInput() {\n\n        if (this.disabled) { return; }\n\n        this.selectedIndex = this.tags.length;\n    }\n/**\n * Remove the tag at the given index. Does nothing if disabled is true or the minTags property prevents removal.\n * @param {?} tagIndex\n * @return {?}\n */\nremoveTagAt(tagIndex: number) {\n\n        if (this.disabled || !this.canRemoveTagAt(tagIndex)) { return; }\n\n        // Check that the tagIndex is in range\n        if (this.isValidTagIndex(tagIndex)) {\n            const /** @type {?} */ tag = this.tags[tagIndex];\n            const /** @type {?} */ tagRemovingEvent = new TagInputEvent(tag);\n            this.tagRemoving.emit(tagRemovingEvent);\n            if (!tagRemovingEvent.defaultPrevented()) {\n                // Select input first to avoid issues with dropping focus\n                this.selectInput();\n                // Remove the tag\n                this.tags.splice(tagIndex, 1);\n                // Set focus again since indices have changed\n                this.selectInput();\n                this.tagRemoved.emit(new TagInputEvent(tag));\n                this.validate();\n            }\n        }\n    }\n/**\n * Returns true if the tag at the given index can be removed.\n * @param {?} tagIndex\n * @return {?}\n */\ncanRemoveTagAt(tagIndex: number): boolean {\n        return this.tags.length > this.minTags || !this.enforceTagLimits;\n    }\n/**\n * Returns true if the input field should be available.\n * @return {?}\n */\nisInputVisible() {\n        return this.tags.length < this.maxTags || !this.enforceTagLimits;\n    }\n/**\n * Returns true if any part of the control has focus.\n * @return {?}\n */\nhasFocus(): boolean {\n        return this.isValidSelectIndex(this.selectedIndex);\n    }\n/**\n * @param {?} typeahead\n * @return {?}\n */\nprivate connectTypeahead(typeahead: TypeaheadComponent) {\n        this.typeahead = typeahead;\n        if (this.typeahead) {\n            // Set up event handler for selected options\n            this.typeahead.optionSelected.subscribe(this.typeaheadOptionSelectedHandler.bind(this));\n        }\n    }\n/**\n * Validate the given tagValue with the tagPattern, if set. Update validationErrors on validation failure.\n * @param {?} tagValue\n * @return {?}\n */\nprivate validateTag(tagValue: string): boolean {\n        let /** @type {?} */ inputPattern = null;\n        this.inputValid = true;\n        if (this.tagPattern && !this.tagPattern.test(tagValue)) {\n            inputPattern = {\n                given: tagValue,\n                pattern: this.tagPattern\n            };\n            this.inputValid = false;\n        }\n        this.validationErrors['inputPattern'] = inputPattern;\n        return this.inputValid;\n    }\n/**\n * Create a tag object for the given tagValue. If createTagHandler is specified, use it; otherwise if displayProperty is specified, create an object with the tagValue as the single named property; otherwise return the tagValue itself.\n * @param {?} tagValue\n * @return {?}\n */\nprivate createTag(tagValue: string): any {\n        let /** @type {?} */ tag = null;\n        if (this.createTagHandler && typeof this.createTagHandler === 'function') {\n            tag = this.createTagHandler(tagValue);\n        } else if (typeof this.display === 'string') {\n            tag = {};\n            tag[ /** @type {?} */((<string>this.display))] = tagValue;\n        } else {\n            tag = tagValue;\n        }\n        return tag;\n    }\n/**\n * Add a tag object, calling the tagAdding and tagAdded events. Returns true if the tag was added to the tags array.\n * @param {?} tag\n * @return {?}\n */\nprivate addTag(tag: any): boolean {\n        if (tag) {\n            // Verify that the new tag can be displayed\n            const /** @type {?} */ displayValue = this.getTagDisplay(tag);\n            if (displayValue && typeof displayValue === 'string' && displayValue.length > 0) {\n                const /** @type {?} */ tagAddingEvent = new TagInputEvent(tag);\n                this.tagAdding.emit(tagAddingEvent);\n                if (!tagAddingEvent.defaultPrevented()) {\n                    this.tags = this.tags || [];\n                    this.tags.push(tag);\n                    this.tagAdded.emit(new TagInputEvent(tag));\n                    this.validate();\n                    return true;\n                }\n            }\n        }\n\n        return false;\n    }\n/**\n * Returns true if the given tagIndex is a valid tag index.\n * @param {?} tagIndex\n * @return {?}\n */\nprivate isValidTagIndex(tagIndex: number): boolean {\n        return tagIndex >= 0 && tagIndex < this.tags.length;\n    }\n/**\n * Returns true if the given index is a valid selection index (tags or input field).\n * @param {?} index\n * @return {?}\n */\nprivate isValidSelectIndex(index: number): boolean {\n        return index >= 0 && index <= this.tags.length;\n    }\n/**\n * Returns the character corresponding to the given key event, mainly for IE compatibility.\n * @param {?} event\n * @return {?}\n */\nprivate getKeyChar(event: KeyboardEvent): string {\n        switch (event.key) {\n            case 'Spacebar':\n                return ' ';\n        }\n        return event.key;\n    }\n/**\n * Returns an array of strings corresponding to the input string split by the tagDelimiters characters.\n * @param {?} input\n * @return {?}\n */\nprivate splitTagInput(input: string): string[] {\n        let /** @type {?} */ tagValues = [input];\n        if (this.tagDelimiters && typeof this.tagDelimiters === 'string') {\n            const /** @type {?} */ escapedDelimiters = this.tagDelimiters.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n            const /** @type {?} */ delimiterRegex = new RegExp(`[${escapedDelimiters}]`, 'g');\n            tagValues = input.split(delimiterRegex).filter((s) => s.length > 0);\n        }\n        return tagValues;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-tag-input',\n    template: `\n      <ol>\n          <li *ngFor=\"let tag of tags; let i = index\" class=\"ux-tag\"\n              [class.disabled]=\"disabled\"\n              [ngClass]=\"tagClass(tag, i, isSelected(i))\"\n              [attr.tabindex]=\"disabled ? null : i\"\n              [focusIf]=\"isSelected(i)\"\n              (click)=\"tagClickHandler($event, tag, i)\"\n              (focus)=\"selectTagAt(i)\">\n        \n              <ng-container [ngTemplateOutlet]=\"tagTemplate\"\n                  [ngTemplateOutletContext]=\"{tag: tag, index: i, disabled: disabled, api: tagApi}\">\n              </ng-container>\n\n          </li>\n          <li *ngIf=\"isInputVisible()\" class=\"ux-tag-input\">\n              <input #tagInput type=\"text\" class=\"ux-tag-input\"\n                  [(ngModel)]=\"input\"\n                  [class.invalid]=\"!inputValid\"\n                  [placeholder]=\"disabled ? '' : (placeholder || '')\"\n                  [disabled]=\"disabled\"\n                  [focusIf]=\"isSelected(tags.length)\"\n                  (click)=\"inputClickHandler()\"\n                  (focus)=\"inputFocusHandler()\"\n                  (paste)=\"inputPasteHandler($event)\">\n          </li>\n      </ol>\n\n      <ng-content #typeahead></ng-content>\n\n      <ng-template #defaultTagTemplate let-tag=\"tag\" let-index=\"index\" let-disabled=\"disabled\" let-api=\"api\">\n          <span class=\"ux-tag-text\">{{api.getTagDisplay(tag)}}</span>\n          <button *ngIf=\"api.canRemoveTagAt(index)\" type=\"button\" class=\"ux-tag-remove\" [disabled]=\"disabled\" (click)=\"api.removeTagAt(index); $event.stopPropagation();\"><i class=\"hpe-icon hpe-close\"></i></button>\n      </ng-template>\n    `,\n    providers: [TAGINPUT_VALUE_ACCESSOR, TAGINPUT_VALIDATOR],\n    host: {\n        '[class.disabled]': 'disabled',\n        '[class.focus]': 'hasFocus()',\n        '[class.invalid]': '!valid || !inputValid'\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Document, decorators: [{ type: Inject, args: [DOCUMENT, ] }, ]},\n{type: TypeaheadKeyService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'tags': [{ type: Input, args: ['tags', ] },],\n'tagsChange': [{ type: Output },],\n'input': [{ type: Input, args: ['input', ] },],\n'inputChange': [{ type: Output },],\n'display': [{ type: Input },],\n'addOnPaste': [{ type: Input },],\n'disabled': [{ type: Input },],\n'enforceTagLimits': [{ type: Input },],\n'freeInput': [{ type: Input },],\n'maxTags': [{ type: Input },],\n'minTags': [{ type: Input },],\n'placeholder': [{ type: Input },],\n'showTypeaheadOnClick': [{ type: Input },],\n'tagDelimiters': [{ type: Input },],\n'tagPattern': [{ type: Input },],\n'tagTemplate': [{ type: Input },],\n'tagClass': [{ type: Input },],\n'validationErrors': [{ type: Input },],\n'createTagHandler': [{ type: Input, args: ['createTag', ] },],\n'tagAdding': [{ type: Output },],\n'tagAdded': [{ type: Output },],\n'tagInvalidated': [{ type: Output },],\n'tagRemoving': [{ type: Output },],\n'tagRemoved': [{ type: Output },],\n'tagClick': [{ type: Output },],\n'typeaheadQuery': [{ type: ContentChildren, args: [TypeaheadComponent, ] },],\n'tagInput': [{ type: ViewChild, args: ['tagInput', ] },],\n'_defaultTagTemplate': [{ type: ViewChild, args: ['defaultTagTemplate', ] },],\n'keyHandler': [{ type: HostListener, args: ['keydown', ['$event'], ] },],\n'focusOutHandler': [{ type: HostListener, args: ['focusout', ['$event'], ] },],\n};\n}\n\nfunction TagInputComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nTagInputComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTagInputComponent.ctorParameters;\n/** @type {?} */\nTagInputComponent.propDecorators;\n/** @type {?} */\nTagInputComponent.prototype._tags;\n/** @type {?} */\nTagInputComponent.prototype.tagsChange;\n/** @type {?} */\nTagInputComponent.prototype._input;\n/** @type {?} */\nTagInputComponent.prototype.inputChange;\n/** @type {?} */\nTagInputComponent.prototype.display;\n/** @type {?} */\nTagInputComponent.prototype.addOnPaste;\n/** @type {?} */\nTagInputComponent.prototype.disabled;\n/** @type {?} */\nTagInputComponent.prototype.enforceTagLimits;\n/** @type {?} */\nTagInputComponent.prototype.freeInput;\n/** @type {?} */\nTagInputComponent.prototype.maxTags;\n/** @type {?} */\nTagInputComponent.prototype.minTags;\n/** @type {?} */\nTagInputComponent.prototype.placeholder;\n/** @type {?} */\nTagInputComponent.prototype.showTypeaheadOnClick;\n/** @type {?} */\nTagInputComponent.prototype.tagDelimiters;\n/** @type {?} */\nTagInputComponent.prototype.tagPattern;\n/** @type {?} */\nTagInputComponent.prototype.tagTemplate;\n/** @type {?} */\nTagInputComponent.prototype.tagClass;\n/** @type {?} */\nTagInputComponent.prototype.validationErrors;\n/** @type {?} */\nTagInputComponent.prototype.createTagHandler;\n/** @type {?} */\nTagInputComponent.prototype.tagAdding;\n/** @type {?} */\nTagInputComponent.prototype.tagAdded;\n/** @type {?} */\nTagInputComponent.prototype.tagInvalidated;\n/** @type {?} */\nTagInputComponent.prototype.tagRemoving;\n/** @type {?} */\nTagInputComponent.prototype.tagRemoved;\n/** @type {?} */\nTagInputComponent.prototype.tagClick;\n/** @type {?} */\nTagInputComponent.prototype.typeaheadQuery;\n/** @type {?} */\nTagInputComponent.prototype.tagInput;\n/** @type {?} */\nTagInputComponent.prototype._defaultTagTemplate;\n/** @type {?} */\nTagInputComponent.prototype.selectedIndex;\n/** @type {?} */\nTagInputComponent.prototype.tagApi;\n/** @type {?} */\nTagInputComponent.prototype.valid;\n/** @type {?} */\nTagInputComponent.prototype.inputValid;\n/** @type {?} */\nTagInputComponent.prototype.typeahead;\n/** @type {?} */\nTagInputComponent.prototype.onChangeHandler;\n/** @type {?} */\nTagInputComponent.prototype.onTouchedHandler;\n/** @type {?} */\nTagInputComponent.prototype._element;\n/** @type {?} */\nTagInputComponent.prototype._document;\n/** @type {?} */\nTagInputComponent.prototype._typeaheadKeyService;\n}\n\n\n/**\n * The API available to tag templates.\n */\nexport interface TagApi {\n    /**\n     * Returns the display value of the given tag, according to the displayProperty property. \n     */\n    getTagDisplay: (tag: any) => string;\n\n    /**\n     * Removes the tag at the given index, if possible.\n     */\n    removeTagAt: (index: number) => void;\n\n    /**\n     * \tReturns true if the tag at the given index can be removed.\n     */\n    canRemoveTagAt: (index: number) => boolean;\n}\n\n/**\n * The function used to return custom class information, for use in `ngClass`.\n */\nexport type TagClassFunction = (tag: any, index: number, selected: boolean) => (string | string[] | Set<string>);\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, Input, OnChanges, SimpleChanges, ElementRef } from '@angular/core';\nexport class FocusIfDirective implements OnChanges {\n\n     focusIf: boolean = false;\n/**\n * @param {?} elementRef\n */\nconstructor(private elementRef: ElementRef) { }\n/**\n * @param {?} changes\n * @return {?}\n */\nngOnChanges(changes: SimpleChanges): void {\n        if (changes.focusIf && changes.focusIf.previousValue === false && changes.focusIf.currentValue === true) {\n            this.elementRef.nativeElement.focus();\n        }\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{ selector: '[focusIf]' }, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'focusIf': [{ type: Input },],\n};\n}\n\nfunction FocusIfDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nFocusIfDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFocusIfDirective.ctorParameters;\n/** @type {?} */\nFocusIfDirective.propDecorators;\n/** @type {?} */\nFocusIfDirective.prototype.focusIf;\n/** @type {?} */\nFocusIfDirective.prototype.elementRef;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { FocusIfDirective } from './focus-if.directive';\nexport class FocusIfModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    exports: [FocusIfDirective],\n    declarations: [FocusIfDirective]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction FocusIfModule_tsickle_Closure_declarations() {\n/** @type {?} */\nFocusIfModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFocusIfModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { FocusIfModule } from '../../directives/focus-if/index';\nimport { TypeaheadModule } from '../typeahead/index';\nimport { TagInputComponent } from './tag-input.component';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nexport class TagInputModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        CommonModule,\n        FormsModule,\n        FocusIfModule,\n        TypeaheadModule\n    ],\n    exports: [TagInputComponent],\n    declarations: [TagInputComponent],\n    providers: [],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction TagInputModule_tsickle_Closure_declarations() {\n/** @type {?} */\nTagInputModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTagInputModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { InfiniteScrollModule } from '../../directives/infinite-scroll/index';\nimport { TagInputModule } from '../tag-input/index';\nimport { TypeaheadModule } from '../typeahead/index';\nimport { SelectComponent } from './select.component';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nexport class SelectModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        CommonModule,\n        FormsModule,\n        InfiniteScrollModule,\n        TagInputModule,\n        TypeaheadModule\n    ],\n    exports: [SelectComponent],\n    declarations: [SelectComponent]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction SelectModule_tsickle_Closure_declarations() {\n/** @type {?} */\nSelectModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSelectModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { SearchBuilderComponent } from './search-builder.component';\nimport { SearchBuilderGroupComponent } from './search-builder-group/search-builder-group.component';\nimport { SearchTextComponent } from './search-components/text/text.component';\nimport { SearchDateComponent } from './search-components/date/date.component';\nimport { SearchBuilderOutletDirective } from './search-builder-outlet/search-builder-outlet.directive';\nimport { BaseSearchComponent } from './search-components/base-search.component';\nimport { DateTimePickerModule } from '../date-time-picker/date-time-picker.module';\nimport { PopoverModule } from 'ngx-bootstrap/popover';\nimport { SearchDateRangeComponent } from './search-components/date-range/date-range.component';\nimport { SearchSelectComponent } from './search-components/select/select.component';\nimport { SelectModule } from '../select/index';\nexport class SearchBuilderModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  imports: [\n    CommonModule,\n    FormsModule,\n    DateTimePickerModule,\n    PopoverModule.forRoot(),\n    SelectModule\n  ],\n  exports: [\n    SearchBuilderComponent,\n    SearchBuilderGroupComponent,\n    BaseSearchComponent\n  ],\n  declarations: [\n    SearchBuilderComponent,\n    SearchBuilderGroupComponent,\n    SearchTextComponent,\n    SearchDateComponent,\n    SearchDateRangeComponent,\n    SearchBuilderOutletDirective,\n    SearchSelectComponent,\n    BaseSearchComponent\n  ],\n  entryComponents: [\n    SearchTextComponent,\n    SearchDateComponent,\n    SearchDateRangeComponent,\n    SearchSelectComponent\n  ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction SearchBuilderModule_tsickle_Closure_declarations() {\n/** @type {?} */\nSearchBuilderModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSearchBuilderModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Input, EventEmitter, Output, OnInit, ElementRef, ViewChild, HostListener, AfterViewInit, OnDestroy, DoCheck, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { Subscription } from 'rxjs/Subscription';\nimport'rxjs/add/observable/fromEvent';\nimport'rxjs/add/operator/switchMap';\nimport'rxjs/add/operator/takeUntil';\nimport { ColorService } from '../../services/color/index';\nexport class SliderComponent implements OnInit, AfterViewInit, DoCheck, OnDestroy {\n\n     value: SliderValue | number = 0;\n     options: SliderOptions;\n     valueChange: EventEmitter<SliderValue | number> = new EventEmitter<SliderValue | number>();\n\n     lowerThumb: ElementRef;\n     lowerTooltip: ElementRef;\n     upperThumb: ElementRef;\n     upperTooltip: ElementRef;\n     track: ElementRef;\nprivate _value: SliderValue | number;\n\n    // expose enums to Angular view\n    sliderType = SliderType;\n    sliderStyle = SliderStyle;\n    sliderSize = SliderSize;\n    sliderThumb = SliderThumb;\n    sliderTickType = SliderTickType;\n    sliderThumbEvent = SliderThumbEvent;\n\n    tracks = {\n        lower: {\n            size: 0,\n            color: ''\n        },\n        middle: {\n            size: 0,\n            color: ''\n        },\n        upper: {\n            size: 0,\n            color: ''\n        }\n    };\n\n    tooltips = {\n        lower: {\n            visible: false,\n            position: 0,\n            label: ''\n        },\n        upper: {\n            visible: false,\n            position: 0,\n            label: ''\n        }\n    };\n\n    thumbs = {\n        lower: {\n            hover: false,\n            drag: false,\n            position: 0,\n            order: 100,\n            value: /** @type {?} */(( null as number))\n        },\n        upper: {\n            hover: false,\n            drag: false,\n            position: 0,\n            order: 101,\n            value: /** @type {?} */(( null as number))\n        }\n    };\n\n    // store all the ticks to display\n    ticks: SliderTick[] = [];\n    defaultOptions: SliderOptions;\nprivate _lowerThumbDown: Observable<MouseEvent>;\nprivate _upperThumbDown: Observable<MouseEvent>;\nprivate _mouseMove: Observable<MouseEvent> = Observable.fromEvent(document, 'mousemove');\nprivate _mouseUp: Observable<MouseEvent> = Observable.fromEvent(document, 'mouseup');\nprivate _lowerDrag: Subscription;\nprivate _upperDrag: Subscription;\n/**\n * @param {?} colorService\n * @param {?} _changeDetectorRef\n */\nconstructor(colorService: ColorService,\nprivate _changeDetectorRef: ChangeDetectorRef) {\n\n        // setup default options\n        this.defaultOptions = {\n            type: SliderType.Value,\n            handles: {\n                style: SliderStyle.Button,\n                callout: {\n                    trigger: SliderCalloutTrigger.None,\n                    background: colorService.getColor('grey2').toHex(),\n                    color: '#fff',\n                    formatter: (value: number): string | number => value\n                }\n            },\n            track: {\n                height: SliderSize.Wide,\n                min: 0,\n                max: 100,\n                ticks: {\n                    snap: SliderSnap.None,\n                    major: {\n                        show: true,\n                        steps: 10,\n                        labels: true,\n                        formatter: (value: number): string | number => value\n                    },\n                    minor: {\n                        show: true,\n                        steps: 5,\n                        labels: false,\n                        formatter: (value: number): string | number => value\n                    }\n                },\n                colors: {\n                    lower: colorService.getColor('grey6').toHex(),\n                    range: colorService.getColor('accent').setAlpha(0.75).toRgba(),\n                    higher: colorService.getColor('grey6').toHex()\n                }\n            }\n        };\n    }\n/**\n * @return {?}\n */\nngOnInit() {\n\n        // set up event observables\n        this.initObservables();\n\n        this.updateOptions();\n        this.updateValues();\n\n        this.setThumbState(SliderThumb.Lower, false, false);\n        this.setThumbState(SliderThumb.Upper, false, false);\n\n        // emit the initial value\n        this.valueChange.next(this.clone(this.value));\n    }\n/**\n * @return {?}\n */\nngDoCheck() {\n\n        if (this.detectValueChange(this.value, this._value)) {\n            this.updateValues();\n            this._value = this.clone(this.value);\n        }\n    }\n/**\n * @return {?}\n */\nngAfterViewInit() {\n        // persistent tooltips will need positioned correctly at this stage\n        setTimeout(() => {\n            this.updateTooltipPosition(SliderThumb.Lower);\n            this.updateTooltipPosition(SliderThumb.Upper);\n\n            // mark as dirty\n            this._changeDetectorRef.markForCheck();\n        });\n    }\n/**\n * @return {?}\n */\nngOnDestroy() {\n        this._lowerDrag.unsubscribe();\n        this._upperDrag.unsubscribe();\n    }\n/**\n * @param {?} thumb\n * @return {?}\n */\ngetFormattedValue(thumb: SliderThumb): string | number {\n        return this.options.handles.callout.formatter(this.getThumbState(thumb).value);\n    }\n/**\n * @return {?}\n */\nprivate initObservables(): void {\n\n        // when a user begins to drag lower thumb - subscribe to mouse move events until the mouse is lifted\n        this._lowerThumbDown = Observable.fromEvent(this.lowerThumb.nativeElement, 'mousedown');\n\n        this._lowerDrag = this._lowerThumbDown.switchMap(event => {\n            event.preventDefault();\n            return this._mouseMove.takeUntil(this._mouseUp);\n        }).subscribe(event => {\n            event.preventDefault();\n            this.updateThumbPosition(event, SliderThumb.Lower);\n        });\n\n        // when a user begins to drag upper thumb - subscribe to mouse move events until the mouse is lifted\n        this._upperThumbDown = Observable.fromEvent(this.upperThumb.nativeElement, 'mousedown');\n        this._upperDrag = this._upperThumbDown.switchMap(event => {\n            event.preventDefault();\n            return this._mouseMove.takeUntil(this._mouseUp);\n        }).subscribe(event => {\n            event.preventDefault();\n            this.updateThumbPosition(event, SliderThumb.Upper);\n        });\n    }\n/**\n * @param {?} thumb\n * @return {?}\n */\nprivate getThumbState(thumb: SliderThumb) {\n        return thumb === SliderThumb.Lower ? this.thumbs.lower : this.thumbs.upper;\n    }\n/**\n * @param {?} thumb\n * @param {?} hover\n * @param {?} drag\n * @return {?}\n */\nprivate setThumbState(thumb: SliderThumb, hover: boolean, drag: boolean) {\n        if (thumb === SliderThumb.Lower) {\n            this.thumbs.lower.hover = hover;\n            this.thumbs.lower.drag = drag;\n        } else {\n            this.thumbs.upper.hover = hover;\n            this.thumbs.upper.drag = drag;\n        }\n\n        // update the visibility of the tooltips\n        this.updateTooltips(thumb);\n    }\n/**\n * @return {?}\n */\nprivate onDragEnd() {\n        // update thumb state here as we are not dragging any more\n        this.thumbEvent(SliderThumb.Lower, SliderThumbEvent.DragEnd);\n        this.thumbEvent(SliderThumb.Upper, SliderThumbEvent.DragEnd);\n    }\n/**\n * @param {?} thumb\n * @param {?} event\n * @return {?}\n */\nthumbEvent(thumb: SliderThumb, event: SliderThumbEvent): void {\n\n        // get the current thumb state\n        let /** @type {?} */ state = this.getThumbState(thumb);\n\n        // update based upon event\n        switch (event) {\n\n            case SliderThumbEvent.DragStart:\n                state.drag = true;\n                break;\n\n            case SliderThumbEvent.DragEnd:\n                state.drag = false;\n                break;\n\n            case SliderThumbEvent.MouseOver:\n                state.hover = true;\n                break;\n\n            case SliderThumbEvent.MouseLeave:\n                state.hover = false;\n                break;\n\n            case SliderThumbEvent.None:\n                state.drag = false;\n                state.hover = false;\n                break;\n        }\n\n        // update the thumb state\n        this.setThumbState(thumb, state.hover, state.drag);\n    }\n/**\n * @param {?} thumb\n * @return {?}\n */\nprivate updateTooltips(thumb: SliderThumb): void {\n\n        let /** @type {?} */ visible = false;\n        let /** @type {?} */ state = this.getThumbState(thumb);\n\n        switch (this.options.handles.callout.trigger) {\n\n            case SliderCalloutTrigger.Persistent:\n                visible = true;\n                break;\n\n            case SliderCalloutTrigger.Drag:\n                visible = state.drag;\n                break;\n\n            case SliderCalloutTrigger.Hover:\n                visible = state.hover || state.drag;\n                break;\n        }\n\n        // update the state for the corresponding thumb\n        this.getTooltip(thumb).visible = visible;\n\n        // update the tooltip text\n        this.updateTooltipText(thumb);\n\n        // update the tooltip positions\n        this.updateTooltipPosition(thumb);\n    }\n/**\n * @param {?} thumb\n * @return {?}\n */\nprivate updateTooltipText(thumb: SliderThumb) {\n\n        // get the thumb value\n        let /** @type {?} */ state = this.getThumbState(thumb);\n        let /** @type {?} */ tooltip = this.getTooltip(thumb);\n\n        // store the formatted label\n        tooltip.label = this.getFormattedValue(thumb).toString();\n    }\n/**\n * @param {?} thumb\n * @return {?}\n */\nprivate getThumbElement(thumb: SliderThumb): ElementRef {\n        return thumb === SliderThumb.Lower ? this.lowerThumb : this.upperThumb;\n    }\n/**\n * @param {?} thumb\n * @return {?}\n */\nprivate getTooltipElement(thumb: SliderThumb): ElementRef {\n        return thumb === SliderThumb.Lower ? this.lowerTooltip : this.upperTooltip;\n    }\n/**\n * @param {?} thumb\n * @return {?}\n */\nprivate getTooltip(thumb: SliderThumb) {\n        return thumb === SliderThumb.Lower ? this.tooltips.lower : this.tooltips.upper;\n    }\n/**\n * @param {?} thumb\n * @return {?}\n */\nprivate updateTooltipPosition(thumb: SliderThumb) {\n\n        let /** @type {?} */ tooltip = this.getTooltip(thumb);\n\n        // if tooltip is not visible then stop here\n        if (tooltip.visible === false) {\n            return;\n        }\n\n        let /** @type {?} */ tooltipElement = this.getTooltipElement(thumb);\n\n        // get the element widths\n        let /** @type {?} */ thumbWidth: number;\n\n        if (this.options.handles.style === SliderStyle.Button) {\n            thumbWidth = this.options.track.height === SliderSize.Narrow ? 16 : 24;\n        } else {\n            thumbWidth = 2;\n        }\n\n        let /** @type {?} */ tooltipWidth = tooltipElement.nativeElement.offsetWidth;\n\n        // calculate the tooltips new position\n        let /** @type {?} */ tooltipPosition = Math.ceil((tooltipWidth - thumbWidth) / 2);\n\n        // update tooltip position\n        tooltip.position = -tooltipPosition;\n    }\n/**\n * @param {?} value\n * @param {?} min\n * @param {?} max\n * @return {?}\n */\nprivate clamp(value: number, min: number, max: number): number {\n        return Math.min(Math.max(value, min), max);\n    }\n/**\n * @param {?} event\n * @param {?} thumb\n * @return {?}\n */\nprivate updateThumbPosition(event: MouseEvent | TouchEvent, thumb: SliderThumb): void {\n\n        // get event position - either mouse or touch\n        let /** @type {?} */ eventPosition = event instanceof MouseEvent ? event.clientX : event.touches && event.touches.length > 0 ? event.touches[0].clientX : null;\n\n        // if event position is null do nothing\n        if (eventPosition === null) {\n            return;\n        }\n\n        // get mouse position\n        let /** @type {?} */ mouseX = window.pageXOffset + eventPosition;\n\n        // get track size and position\n        let /** @type {?} */ trackBounds = this.track.nativeElement.getBoundingClientRect();\n\n        // restrict the value within the range size\n        let /** @type {?} */ position = this.clamp(mouseX - trackBounds.left, 0, trackBounds.width);\n\n        // get fraction representation of location within the track\n        let /** @type {?} */ fraction = (position / trackBounds.width);\n\n        // convert to value within the range\n        let /** @type {?} */ value = ((this.options.track.max - this.options.track.min) * fraction) + this.options.track.min;\n\n        // ensure value is valid\n        value = this.validateValue(thumb, value);\n\n        // snap to a tick if required\n        value = this.snapToTick(value, thumb);\n\n        // update the value accordingly\n        this.setThumbValue(thumb, value);\n\n        this.updateOrder(thumb);\n        this.updateValues();\n\n        // update tooltip text & position\n        this.updateTooltipText(thumb);\n        this.updateTooltipPosition(thumb);\n\n        // mark as dirty for change detection\n        this._changeDetectorRef.markForCheck();\n    }\n/**\n * @param {?} thumb\n * @return {?}\n */\nprivate updateOrder(thumb: SliderThumb): void {\n\n        let /** @type {?} */ lower = thumb === SliderThumb.Lower ? 101 : 100;\n        let /** @type {?} */ upper = thumb === SliderThumb.Lower ? 100 : 101;\n\n        // The most recently used thumb should be above\n        this.thumbs.lower.order = lower;\n        this.thumbs.upper.order = upper;\n    }\n/**\n * @param {?} value\n * @param {?} thumb\n * @return {?}\n */\nprivate snapToTick(value: number, thumb: SliderThumb): number {\n\n        // get the snap target\n        const /** @type {?} */ snapTarget: SliderSnap = this.options.track.ticks.snap;\n\n        // if snap target is none then return original value\n        if (snapTarget === SliderSnap.None) {\n            return value;\n        }\n\n        // get filtered ticks\n        let /** @type {?} */ ticks: SliderTick[];\n\n        switch (snapTarget) {\n\n            case SliderSnap.Minor:\n                ticks = this.ticks.filter(tick => tick.type === SliderTickType.Minor);\n                break;\n\n            case SliderSnap.Major:\n                ticks = this.ticks.filter(tick => tick.type === SliderTickType.Major);\n                break;\n\n            default:\n                ticks = this.ticks.slice(0);\n        }\n\n        // get the track limit\n        let /** @type {?} */ lowerLimit = this.options.track.min;\n        let /** @type {?} */ upperLimit = this.options.track.max;\n\n        if (this.options.type === SliderType.Range && thumb === SliderThumb.Lower) {\n            upperLimit = this.thumbs.upper.value;\n        }\n\n        if (this.options.type === SliderType.Range && thumb === SliderThumb.Upper) {\n            lowerLimit = this.thumbs.lower.value;\n        }\n\n        // Find the closest tick to the current position\n        const /** @type {?} */ range = ticks.filter(tick => tick.value >= lowerLimit && tick.value <= upperLimit);\n\n        // If there are no close ticks in the valid range then dont snap\n        if (range.length === 0) {\n            return value;\n        }\n\n        // Find the closest tick\n        const /** @type {?} */ closest = range.reduceRight((previous, current) => {\n\n            const /** @type {?} */ previousDistance = Math.max(previous.value, value) - Math.min(previous.value, value);\n            const /** @type {?} */ currentDistance = Math.max(current.value, value) - Math.min(current.value, value);\n\n            return previousDistance < currentDistance ? previous : current;\n        });\n\n        return closest.value;\n    }\n/**\n * @param {?} thumb\n * @param {?} value\n * @return {?}\n */\nprivate validateValue(thumb: SliderThumb, value: number): number {\n\n        // if slider is not a range value is always valid providing it is within the chart min and max values\n        if (this.options.type === SliderType.Value) {\n            return Math.max(Math.min(value, this.options.track.max), this.options.track.min);\n        }\n\n        // check if value is with chart ranges\n        if (value > this.options.track.max) {\n            return thumb === SliderThumb.Lower ? Math.min(this.options.track.max, this.thumbs.upper.value) : this.options.track.max;\n        }\n\n        if (value < this.options.track.min) {\n            return thumb === SliderThumb.Upper ? Math.max(this.options.track.min, this.thumbs.lower.value) : this.options.track.min;\n        }\n\n        // otherwise we need to check to make sure lower thumb cannot go above higher and vice versa\n        if (thumb === SliderThumb.Lower) {\n\n            if (this.thumbs.upper.value === null) {\n                return value;\n            }\n\n            return value <= this.thumbs.upper.value ? value : this.thumbs.upper.value;\n        }\n\n        if (thumb === SliderThumb.Upper) {\n\n            if (this.thumbs.lower.value === null) {\n                return value;\n            }\n\n            return value >= this.thumbs.lower.value ? value : this.thumbs.lower.value;\n        }\n    }\n/**\n * @return {?}\n */\nprivate updateOptions() {\n\n        // add in the default options that user hasn't specified\n        this.options = this.deepMerge(this.options || {}, this.defaultOptions);\n\n        this.updateTrackColors();\n        this.updateTicks();\n        this.updateValues();\n    }\n/**\n * @return {?}\n */\nprivate updateValues() {\n\n        if (this.value === undefined || this.value === null) {\n            this.value = 0;\n        }\n\n        let /** @type {?} */ lowerValue = typeof this.value === 'number' ? this.value : this.value.low;\n        let /** @type {?} */ upperValue = typeof this.value === 'number' ? this.value : this.value.high;\n\n        // validate values\n        lowerValue = this.validateValue(SliderThumb.Lower, Number(lowerValue.toFixed(4)));\n        upperValue = this.validateValue(SliderThumb.Upper, Number(upperValue.toFixed(4)));\n\n        // calculate the positions as percentages\n        let /** @type {?} */ lowerPosition = (((lowerValue - this.options.track.min) / (this.options.track.max - this.options.track.min)) * 100);\n        let /** @type {?} */ upperPosition = (((upperValue - this.options.track.min) / (this.options.track.max - this.options.track.min)) * 100);\n\n        // update thumb positions\n        this.thumbs.lower.position = lowerPosition;\n        this.thumbs.upper.position = upperPosition;\n\n        // calculate the track sizes\n        this.tracks.lower.size = lowerPosition;\n        this.tracks.middle.size = upperPosition - lowerPosition;\n        this.tracks.upper.size = this.options.type === SliderType.Value ? 100 - lowerPosition : 100 - upperPosition;\n\n        // update the value input\n        this.setValue(lowerValue, upperValue);\n    }\n/**\n * @param {?} low\n * @param {?=} high\n * @return {?}\n */\nprivate setValue(low: number, high?: number): void {\n\n        this.thumbs.lower.value = low;\n        this.thumbs.upper.value = high;\n\n        let /** @type {?} */ previousValue = this.clone(this._value);\n\n        this.value = this.options.type === SliderType.Value ? low : { low: low, high: high };\n\n        // call the event emitter if changes occured\n        if (this.detectValueChange(this.value, previousValue)) {\n            this.valueChange.emit(this.clone(this.value));\n\n            this.updateTooltipText(SliderThumb.Lower);\n            this.updateTooltipText(SliderThumb.Upper);\n        } else {\n            this.valueChange.emit(this.clone(this.value));\n        }\n    }\n/**\n * @param {?} thumb\n * @param {?} value\n * @return {?}\n */\nprivate setThumbValue(thumb: SliderThumb, value: number) {\n\n        // update the thumb value\n        this.getThumbState(thumb).value = value;\n\n        // forward these changes to the value\n        this.setValue(this.thumbs.lower.value, this.thumbs.upper.value);\n    }\n/**\n * @return {?}\n */\nprivate updateTicks() {\n\n        // get tick options\n        const /** @type {?} */ majorOptions = this.options.track.ticks.major;\n        const /** @type {?} */ minorOptions = this.options.track.ticks.minor;\n\n        // check if we should show ticks\n        if (majorOptions.show === false && minorOptions.show === false) {\n            this.ticks = [];\n        }\n\n        // create ticks for both major and minor - only get the ones to be shown\n        const /** @type {?} */ majorTicks = this.getTicks(majorOptions, SliderTickType.Major).filter(tick => tick.showTicks);\n        const /** @type {?} */ minorTicks = this.getTicks(minorOptions, SliderTickType.Minor).filter(tick => tick.showTicks);\n\n        // remove any minor ticks that are on a major interval\n        this.ticks = this.unionTicks(majorTicks, minorTicks);\n    }\n/**\n * @return {?}\n */\nprivate updateTrackColors() {\n\n        // get colors for each part of the track\n        const /** @type {?} */ lower = this.options.track.colors.lower;\n        const /** @type {?} */ range = this.options.track.colors.range;\n        const /** @type {?} */ higher = this.options.track.colors.higher;\n\n        // update the controller value\n        this.tracks.lower.color = typeof lower === 'string' ? lower : `linear-gradient(to right, ${lower.join(', ')})`;\n        this.tracks.middle.color = typeof range === 'string' ? range : `linear-gradient(to right, ${range.join(', ')})`;\n        this.tracks.upper.color = typeof higher === 'string' ? higher : `linear-gradient(to right, ${higher.join(', ')})`;\n    }\n/**\n * @param {?} steps\n * @return {?}\n */\nprivate getSteps(steps: number | number[]): number[] {\n\n        // if they are already an array just return it\n        if (steps instanceof Array) {\n            return steps;\n        }\n\n        let /** @type {?} */ output: number[] = [];\n\n        // otherwise calculate the steps\n        for (let /** @type {?} */ idx = this.options.track.min; idx <= this.options.track.max; idx += steps) {\n            output.push(idx);\n        }\n\n        return output;\n    }\n/**\n * @param {?} options\n * @param {?} type\n * @return {?}\n */\nprivate getTicks(options: SliderTickOptions, type: SliderTickType): SliderTick[] {\n\n        // create an array to store the ticks and step points\n        let /** @type {?} */ steps = this.getSteps(options.steps);\n\n        // get some chart options\n        let /** @type {?} */ min = this.options.track.min;\n        let /** @type {?} */ max = this.options.track.max;\n\n        // convert each step to a slider tick and remove invalid ticks\n        return steps.map(step => {\n            return {\n                showTicks: options.show,\n                showLabels: options.labels,\n                type: type,\n                position: ((step - min) / (max - min)) * 100,\n                value: step,\n                label: options.formatter(step)\n            };\n        }).filter(tick => tick.position >= 0 && tick.position <= 100);\n    }\n/**\n * @param {?} majorTicks\n * @param {?} minorTicks\n * @return {?}\n */\nprivate unionTicks(majorTicks: SliderTick[], minorTicks: SliderTick[]): SliderTick[] {\n\n        // get all ticks combined removing any minor ticks with the same value as major ticks\n        return majorTicks.concat(minorTicks)\n            .filter((tick, index, array) => tick.type === SliderTickType.Major || !array.find(tk => tk.type === SliderTickType.Major && tk.position === tick.position))\n            .sort((t1, t2) => t1.value - t2.value);\n    }\n/**\n * @param {?} destination\n * @param {?} source\n * @return {?}\n */\nprivate deepMerge(destination: any, source: any) {\n\n        // loop though all of the properties in the source object\n        for (let /** @type {?} */ prop in source) {\n\n            // check if the destination object has the property\n            if (!destination.hasOwnProperty(prop)) {\n                // copy the property across\n                destination[prop] = source[prop];\n                continue;\n            }\n\n            // if the property exists and is not an object then skip\n            if (typeof destination[prop] !== 'object') {\n                continue;\n            }\n\n            // check if property is an array\n            if (destination[prop] instanceof Array) {\n                continue;\n            }\n\n            // if it is an object then perform a recursive check\n            destination[prop] = this.deepMerge(destination[prop], source[prop]);\n        }\n\n        return destination;\n    }\n/**\n * @param {?} value1\n * @param {?} value2\n * @return {?}\n */\nprivate detectValueChange(value1: number | SliderValue, value2: number | SliderValue): boolean {\n\n        // compare two slider values\n        if (this.isSliderValue(value1) && this.isSliderValue(value2)) {\n            \n            // references to the objects in the correct types\n            const /** @type {?} */ obj1 = /** @type {?} */(( value1 as SliderValue));\n            const /** @type {?} */ obj2 = /** @type {?} */(( value2 as SliderValue));\n            \n            return obj1.low !== obj2.low || obj1.high !== obj2.high;\n        }\n\n        // if not a slider value - should be number of nullable type - compare normally\n        return value1 !== value2;\n    }\n/**\n * Determines whether or not an object conforms to the\n * SliderValue interface.\n * @param {?} value - The object to check - this must be type any\n * @return {?}\n */\nprivate isSliderValue(value: any): boolean {\n\n        // check if is an object\n        if (typeof value !== 'object') {\n            return false;\n        }\n\n        // next check if it contains the necessary properties\n        return 'low' in value && 'high' in value;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nprivate clone(value: number | SliderValue): number | SliderValue {\n\n        // if it is not an object simply return the value\n        if (typeof value !== 'object') {\n            return value;\n        }\n\n        // create a new object from the existing one\n        const /** @type {?} */ instance =  Object.assign({}, value);\n\n        // delete remove the value from the old object\n        value = undefined;\n\n        // return the new instance of the object\n        return instance;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-slider',\n    template: `\n      <div class=\"track\" #track [class.narrow]=\"options.track.height === sliderSize.Narrow\" [class.wide]=\"options.track.height === sliderSize.Wide\" [class.range]=\"options.type === sliderType.Range\">\n\n          <!-- Section Beneath Lower Thumb -->\n          <div class=\"track-section track-lower\" [style.flex-grow]=\"tracks.lower.size\" [style.background]=\"tracks.lower.color\"></div>\n\n          <!-- Lower Thumb Button / Line -->\n          <div class=\"thumb lower\" #lowerThumb [style.left.%]=\"thumbs.lower.position\" [class.active]=\"thumbs.lower.drag\" [style.z-index]=\"thumbs.lower.order\" [class.button]=\"options.handles.style === sliderStyle.Button\"\n              [class.line]=\"options.handles.style === sliderStyle.Line\" [class.narrow]=\"options.track.height === sliderSize.Narrow\"\n              [class.wide]=\"options.track.height === sliderSize.Wide\" (mouseenter)=\"thumbEvent(sliderThumb.Lower, sliderThumbEvent.MouseOver)\"\n              (mouseleave)=\"thumbEvent(sliderThumb.Lower, sliderThumbEvent.MouseLeave)\" (mousedown)=\"thumbEvent(sliderThumb.Lower, sliderThumbEvent.DragStart)\">\n\n              <!-- Lower Thumb Callout -->\n              <div class=\"tooltip top tooltip-lower\" #lowerTooltip [style.opacity]=\"tooltips.lower.visible ? 1 : 0\" [style.left.px]=\"tooltips.lower.position\">\n                  <div class=\"tooltip-arrow\" [style.border-top-color]=\"options.handles.callout.background\"></div>\n                  <div class=\"tooltip-inner\" [style.background-color]=\"options.handles.callout.background\" [style.color]=\"options.handles.callout.color\">\n                      {{ tooltips.lower.label }}\n                  </div>\n              </div>\n\n          </div>\n\n          <!-- Section of Track Between Lower and Upper Thumbs -->\n          <div class=\"track-section track-range\" *ngIf=\"options.type === sliderType.Range\" [style.flex-grow]=\"tracks.middle.size\" [style.background]=\"tracks.middle.color\">\n          </div>\n\n          <!-- Upper Thumb Button / Line -->\n          <div class=\"thumb upper\" #upperThumb [hidden]=\"options.type !== sliderType.Range\" [class.active]=\"thumbs.upper.drag\" [style.left.%]=\"thumbs.upper.position\" [style.z-index]=\"thumbs.upper.order\"\n              [class.button]=\"options.handles.style === sliderStyle.Button\" [class.line]=\"options.handles.style === sliderStyle.Line\"\n              [class.narrow]=\"options.track.height === sliderSize.Narrow\" [class.wide]=\"options.track.height === sliderSize.Wide\" (mouseenter)=\"thumbEvent(sliderThumb.Upper, sliderThumbEvent.MouseOver)\"\n              (mouseleave)=\"thumbEvent(sliderThumb.Upper, sliderThumbEvent.MouseLeave)\" (mousedown)=\"thumbEvent(sliderThumb.Upper, sliderThumbEvent.DragStart)\">\n\n              <!-- Upper Thumb Callout -->\n              <div class=\"tooltip top tooltip-upper\" #upperTooltip [style.opacity]=\"tooltips.upper.visible ? 1 : 0\" [style.left.px]=\"tooltips.upper.position\">\n                  <div class=\"tooltip-arrow\" [style.border-top-color]=\"options.handles.callout.background\"></div>\n                  <div class=\"tooltip-inner\" *ngIf=\"options.type === sliderType.Range\" [style.background-color]=\"options.handles.callout.background\"\n                      [style.color]=\"options.handles.callout.color\">\n                      {{ tooltips.upper.label }}\n                  </div>\n              </div>\n          </div>\n\n          <!-- Section of Track Abover Upper Thumb -->\n          <div class=\"track-section track-higher\" [style.flex-grow]=\"tracks.upper.size\" [style.background]=\"tracks.upper.color\"></div>\n\n      </div>\n\n      <!-- Chart Ticks and Tick Labels -->\n      <div class=\"tick-container\" *ngIf=\"options.track.ticks.major.show || options.track.ticks.minor.show\" [class.show-labels]=\"options.track.ticks.major.labels || options.track.ticks.minor.labels\">\n\n          <div class=\"tick\" *ngFor=\"let tick of ticks\" [class.major]=\"tick.type === sliderTickType.Major\" [class.minor]=\"tick.type === sliderTickType.Minor\"\n              [style.left.%]=\"tick.position\" [hidden]=\"!tick.showTicks\">\n              <div class=\"tick-indicator\"></div>\n              <div class=\"tick-label\" [hidden]=\"!tick.showLabels\">{{ tick.label }}</div>\n          </div>\n      </div>\n    `,\n    changeDetection: ChangeDetectionStrategy.OnPush\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ColorService, },\n{type: ChangeDetectorRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'value': [{ type: Input },],\n'options': [{ type: Input },],\n'valueChange': [{ type: Output },],\n'lowerThumb': [{ type: ViewChild, args: ['lowerThumb', ] },],\n'lowerTooltip': [{ type: ViewChild, args: ['lowerTooltip', ] },],\n'upperThumb': [{ type: ViewChild, args: ['upperThumb', ] },],\n'upperTooltip': [{ type: ViewChild, args: ['upperTooltip', ] },],\n'track': [{ type: ViewChild, args: ['track', ] },],\n'onDragEnd': [{ type: HostListener, args: ['document:mouseup', [], ] },],\n};\n}\n\nfunction SliderComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nSliderComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSliderComponent.ctorParameters;\n/** @type {?} */\nSliderComponent.propDecorators;\n/** @type {?} */\nSliderComponent.prototype.value;\n/** @type {?} */\nSliderComponent.prototype.options;\n/** @type {?} */\nSliderComponent.prototype.valueChange;\n/** @type {?} */\nSliderComponent.prototype.lowerThumb;\n/** @type {?} */\nSliderComponent.prototype.lowerTooltip;\n/** @type {?} */\nSliderComponent.prototype.upperThumb;\n/** @type {?} */\nSliderComponent.prototype.upperTooltip;\n/** @type {?} */\nSliderComponent.prototype.track;\n/** @type {?} */\nSliderComponent.prototype._value;\n/** @type {?} */\nSliderComponent.prototype.sliderType;\n/** @type {?} */\nSliderComponent.prototype.sliderStyle;\n/** @type {?} */\nSliderComponent.prototype.sliderSize;\n/** @type {?} */\nSliderComponent.prototype.sliderThumb;\n/** @type {?} */\nSliderComponent.prototype.sliderTickType;\n/** @type {?} */\nSliderComponent.prototype.sliderThumbEvent;\n/** @type {?} */\nSliderComponent.prototype.tracks;\n/** @type {?} */\nSliderComponent.prototype.tooltips;\n/** @type {?} */\nSliderComponent.prototype.thumbs;\n/** @type {?} */\nSliderComponent.prototype.ticks;\n/** @type {?} */\nSliderComponent.prototype.defaultOptions;\n/** @type {?} */\nSliderComponent.prototype._lowerThumbDown;\n/** @type {?} */\nSliderComponent.prototype._upperThumbDown;\n/** @type {?} */\nSliderComponent.prototype._mouseMove;\n/** @type {?} */\nSliderComponent.prototype._mouseUp;\n/** @type {?} */\nSliderComponent.prototype._lowerDrag;\n/** @type {?} */\nSliderComponent.prototype._upperDrag;\n/** @type {?} */\nSliderComponent.prototype._changeDetectorRef;\n}\n\nexport type SliderType = number;\nexport let SliderType: any = {};\nSliderType.Value = 0;\nSliderType.Range = 1;\nSliderType[SliderType.Value] = \"Value\";\nSliderType[SliderType.Range] = \"Range\";\n\nexport type SliderStyle = number;\nexport let SliderStyle: any = {};\nSliderStyle.Button = 0;\nSliderStyle.Line = 1;\nSliderStyle[SliderStyle.Button] = \"Button\";\nSliderStyle[SliderStyle.Line] = \"Line\";\n\nexport type SliderSize = number;\nexport let SliderSize: any = {};\nSliderSize.Narrow = 0;\nSliderSize.Wide = 1;\nSliderSize[SliderSize.Narrow] = \"Narrow\";\nSliderSize[SliderSize.Wide] = \"Wide\";\n\nexport type SliderCalloutTrigger = number;\nexport let SliderCalloutTrigger: any = {};\nSliderCalloutTrigger.None = 0;\nSliderCalloutTrigger.Hover = 1;\nSliderCalloutTrigger.Drag = 2;\nSliderCalloutTrigger.Persistent = 3;\nSliderCalloutTrigger[SliderCalloutTrigger.None] = \"None\";\nSliderCalloutTrigger[SliderCalloutTrigger.Hover] = \"Hover\";\nSliderCalloutTrigger[SliderCalloutTrigger.Drag] = \"Drag\";\nSliderCalloutTrigger[SliderCalloutTrigger.Persistent] = \"Persistent\";\n\n\nexport interface SliderValue {\n    low: number;\n    high: number;\n}\nexport type SliderSnap = number;\nexport let SliderSnap: any = {};\nSliderSnap.None = 0;\nSliderSnap.Minor = 1;\nSliderSnap.Major = 2;\nSliderSnap.All = 3;\nSliderSnap[SliderSnap.None] = \"None\";\nSliderSnap[SliderSnap.Minor] = \"Minor\";\nSliderSnap[SliderSnap.Major] = \"Major\";\nSliderSnap[SliderSnap.All] = \"All\";\n\nexport type SliderTickType = number;\nexport let SliderTickType: any = {};\nSliderTickType.Minor = 0;\nSliderTickType.Major = 1;\nSliderTickType[SliderTickType.Minor] = \"Minor\";\nSliderTickType[SliderTickType.Major] = \"Major\";\n\n\nexport interface SliderOptions {\n    type?: SliderType;\n    handles?: SliderHandleOptions;\n    track?: SliderTrackOptions;\n}\n\nexport interface SliderHandleOptions {\n    style?: SliderStyle;\n    callout?: SliderCallout;\n}\n\nexport interface SliderTrackOptions {\n    height?: SliderSize;\n    min?: number;\n    max?: number;\n    ticks?: SliderTicksOptions;\n    colors?: SliderTrackColors;\n}\n\nexport interface SliderTicksOptions {\n    snap?: SliderSnap;\n    major?: SliderTickOptions;\n    minor?: SliderTickOptions;\n}\n\nexport interface SliderTickOptions {\n    show?: boolean;\n    steps?: number | number[];\n    labels?: boolean;\n    formatter?: (value: number) => string | number;\n}\n\nexport interface SliderTick {\n    showTicks: boolean;\n    showLabels: boolean;\n    type: SliderTickType;\n    position: number;\n    value: number;\n    label: string | number;\n}\n\nexport interface SliderTrackColors {\n    lower?: string | string[];\n    range?: string | string[];\n    higher?: string | string[];\n}\n\nexport interface SliderCallout {\n    trigger?: SliderCalloutTrigger;\n    background?: string;\n    color?: string;\n    formatter?: (value: number) => string | number;\n}\nexport type SliderThumbEvent = number;\nexport let SliderThumbEvent: any = {};\nSliderThumbEvent.None = 0;\nSliderThumbEvent.MouseOver = 1;\nSliderThumbEvent.MouseLeave = 2;\nSliderThumbEvent.DragStart = 3;\nSliderThumbEvent.DragEnd = 4;\nSliderThumbEvent[SliderThumbEvent.None] = \"None\";\nSliderThumbEvent[SliderThumbEvent.MouseOver] = \"MouseOver\";\nSliderThumbEvent[SliderThumbEvent.MouseLeave] = \"MouseLeave\";\nSliderThumbEvent[SliderThumbEvent.DragStart] = \"DragStart\";\nSliderThumbEvent[SliderThumbEvent.DragEnd] = \"DragEnd\";\n\nexport type SliderThumb = number;\nexport let SliderThumb: any = {};\nSliderThumb.Lower = 0;\nSliderThumb.Upper = 1;\nSliderThumb[SliderThumb.Lower] = \"Lower\";\nSliderThumb[SliderThumb.Upper] = \"Upper\";\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ColorServiceModule } from '../../services/color/index';\n\nimport { SliderComponent } from './slider.component';\nexport class SliderModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        CommonModule,\n        ColorServiceModule\n    ],\n    exports: [SliderComponent],\n    declarations: [SliderComponent]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction SliderModule_tsickle_Closure_declarations() {\n/** @type {?} */\nSliderModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSliderModule.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Input } from '@angular/core';\nimport { ColorService } from '../../services/color/index';\nimport { ColorIdentifier } from '../../index';\nexport class SparkComponent {\n\n    values: number[] = [];\n\n     barHeight: number = 10;\n     inlineLabel: string;\n     topLeftLabel: string;\n     topRightLabel: string;\n     bottomLeftLabel: string;\n     bottomRightLabel: string;\n     tooltip: string;\nprivate _trackColor: string;\nprivate _theme: ColorIdentifier = 'primary';\nprivate _barColor: string | string[] = [];\n/**\n * @param {?} value\n * @return {?}\n */\nset theme(value: string) {\n        this._theme = this._colorService.resolveColorName(value);\n    }\n/**\n * @return {?}\n */\nget theme(): string {\n        return this._theme;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset trackColor(value: string) {\n        this._trackColor = this._colorService.resolve(value);\n    }\n/**\n * @return {?}\n */\nget trackColor(): string {\n        return this._trackColor;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset barColor(value: string | string[]) {\n\n        if (Array.isArray(value)) {\n            this._barColor = value.map(color => this._colorService.resolve(color));\n        } else {\n            this._barColor = [this._colorService.resolve(value)];\n        }\n    }\n/**\n * @return {?}\n */\nget barColor(): string | string[] {\n        return this._barColor;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset value(value: number | number[]) {\n\n        // ensure 'value' is an array at this point\n        const /** @type {?} */ values = Array.isArray(value) ? value : [value];\n\n        // get the total value of all lines\n        let /** @type {?} */ total = Math.max(values.reduce((previous, current) => previous + current, 0), 100);\n\n        // figure out the percentages for each spark line\n        this.values = values.map(val => (val / total) * 100);\n    }\n/**\n * @return {?}\n */\nget value() {\n        return this.values;\n    }\n/**\n * @param {?} _colorService\n */\nconstructor(private _colorService: ColorService) { }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-spark',\n    template: `\n      <!-- Inline Spark Chart -->\n      <div *ngIf=\"inlineLabel\" class=\"ux-spark-inline-label-container\">\n\n          <div class=\"ux-spark-inline-label-left\" [innerHtml]=\"inlineLabel\"></div>\n\n          <div class=\"ux-spark-line\">\n\n              <div class=\"ux-spark-top-container\" *ngIf=\"topLeftLabel || topRightLabel\">\n                  <div class=\"ux-spark-label-top-left\" *ngIf=\"topLeftLabel\" [innerHtml]=\"topLeftLabel\"></div>\n                  <div class=\"ux-spark-label-top-right\" *ngIf=\"topRightLabel\" [innerHtml]=\"topRightLabel\"></div>\n              </div>\n\n              <div class=\"ux-spark ux-inline ux-spark-theme-{{theme}}\" [style.height.px]=\"barHeight\" [style.backgroundColor]=\"trackColor\" [tooltip]=\"tooltip\">\n                  <div class=\"ux-spark-bar\" *ngFor=\"let line of values; let idx = index;\" [style.width.%]=\"line\" [style.backgroundColor]=\"barColor[idx]\"></div>\n              </div>\n\n              <div class=\"ux-spark-bottom-container\" *ngIf=\"bottomLeftLabel || bottomRightLabel\">\n                  <div class=\"ux-spark-label-bottom-left\" *ngIf=\"bottomLeftLabel\" [innerHtml]=\"bottomLeftLabel\"></div>\n                  <div class=\"ux-spark-label-bottom-right\" *ngIf=\"bottomRightLabel\" [innerHtml]=\"bottomRightLabel\"></div>\n              </div>\n\n          </div>\n      </div>\n\n      <!-- End Inline Spark Chart -->\n\n\n      <!-- Non Inline Spark Chart -->\n      <div *ngIf=\"!inlineLabel\">\n\n          <div class=\"ux-spark-top-container\" *ngIf=\"topLeftLabel || topRightLabel\">\n              <div class=\"ux-spark-label-top-left\" *ngIf=\"topLeftLabel\" [innerHtml]=\"topLeftLabel\"></div>\n              <div class=\"ux-spark-label-top-right\" *ngIf=\"topRightLabel\" [innerHtml]=\"topRightLabel\"></div>\n          </div>\n\n          <div class=\"ux-spark ux-spark-theme-{{theme}}\" [class.ux-spark-multi-value]=\"values.length > 1\" [style.height.px]=\"barHeight\" [style.backgroundColor]=\"trackColor\"\n              [tooltip]=\"tooltip\">\n              <div class=\"ux-spark-bar\" *ngFor=\"let line of value; let idx = index;\" [style.width.%]=\"line\" [style.backgroundColor]=\"barColor[idx]\"></div>\n          </div>\n\n          <div class=\"ux-spark-bottom-container\" *ngIf=\"bottomLeftLabel || bottomRightLabel\">\n              <div class=\"ux-spark-label-bottom-left\" *ngIf=\"bottomLeftLabel\" [innerHtml]=\"bottomLeftLabel\"></div>\n              <div class=\"ux-spark-label-bottom-right\" *ngIf=\"bottomRightLabel\" [innerHtml]=\"bottomRightLabel\"></div>\n          </div>\n      </div>\n\n      <!-- End Non Inline Spark Chart -->\n    `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ColorService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'barHeight': [{ type: Input },],\n'inlineLabel': [{ type: Input },],\n'topLeftLabel': [{ type: Input },],\n'topRightLabel': [{ type: Input },],\n'bottomLeftLabel': [{ type: Input },],\n'bottomRightLabel': [{ type: Input },],\n'tooltip': [{ type: Input },],\n'theme': [{ type: Input },],\n'trackColor': [{ type: Input },],\n'barColor': [{ type: Input },],\n'value': [{ type: Input },],\n};\n}\n\nfunction SparkComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nSparkComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSparkComponent.ctorParameters;\n/** @type {?} */\nSparkComponent.propDecorators;\n/** @type {?} */\nSparkComponent.prototype.values;\n/** @type {?} */\nSparkComponent.prototype.barHeight;\n/** @type {?} */\nSparkComponent.prototype.inlineLabel;\n/** @type {?} */\nSparkComponent.prototype.topLeftLabel;\n/** @type {?} */\nSparkComponent.prototype.topRightLabel;\n/** @type {?} */\nSparkComponent.prototype.bottomLeftLabel;\n/** @type {?} */\nSparkComponent.prototype.bottomRightLabel;\n/** @type {?} */\nSparkComponent.prototype.tooltip;\n/** @type {?} */\nSparkComponent.prototype._trackColor;\n/** @type {?} */\nSparkComponent.prototype._theme;\n/** @type {?} */\nSparkComponent.prototype._barColor;\n/** @type {?} */\nSparkComponent.prototype._colorService;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { SparkComponent } from './spark.component';\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\nimport { ColorServiceModule } from '../../services/color/index';\nexport class SparkModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        CommonModule,\n        ColorServiceModule,\n        TooltipModule.forRoot()\n    ],\n    exports: [SparkComponent],\n    declarations: [SparkComponent]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction SparkModule_tsickle_Closure_declarations() {\n/** @type {?} */\nSparkModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSparkModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Input, Output, forwardRef, EventEmitter } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\n\nconst /** @type {?} */ TOGGLESWITCH_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => ToggleSwitchComponent),\n    multi: true\n};\nexport class ToggleSwitchComponent implements ControlValueAccessor {\n     name: string = '';\n     disabled: boolean = false;\n     clickable: boolean = true;\n\n     valueChange: EventEmitter<any> = new EventEmitter<any>();\n/**\n * @return {?}\n */\nget value() {\n        return this._value;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset value(value: boolean) {\n        this._value = value;\n\n        // Update value output\n        this.valueChange.emit(value);\n\n        // Notify ngModel\n        this.onChangeCallback(value);\n    }\nprivate _value: boolean = false;\n\n    onTouchedCallback: () => void = () => { };\n    onChangeCallback: (_: any) => void = () => { };\n/**\n * @return {?}\n */\ntoggleChecked() {\n        if (!this.disabled && this.clickable) {\n            this.value = !this.value;\n        }\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nkeydown(event: any) {\n        // if spacebar is pressed toggle state\n        if (event.keyCode === 32) {\n            this.toggleChecked();\n            event.stopPropagation();\n            event.preventDefault();\n        }\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nwriteValue(value: any) {\n        this.value = !!value;\n    }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnChange(fn: any) {\n        this.onChangeCallback = fn;\n    }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnTouched(fn: any) {\n        this.onTouchedCallback = fn;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-toggleswitch',\n    template: `\n      <div class=\"ux-toggleswitch\" \n        tabindex=\"0\"\n        (keydown)=\"keydown($event)\"\n        [class.checked]=\"value === true\"\n        [class.disabled]=\"disabled === true\">\n\n        <span class=\"ux-toggleswitch-bg\"></span>\n  \n        <span class=\"ux-toggleswitch-nub\"></span>\n\n        <input type=\"checkbox\" \n          role=\"checkbox\"\n          [name]=\"name\" \n          [checked]=\"value === true\"\n          [disabled]=\"disabled === true\"\n          tabindex=\"-1\" />\n      </div>\n\n      <div class=\"ux-toggleswitch-content\">\n        <ng-content></ng-content>\n      </div>\n    `,\n    providers: [TOGGLESWITCH_VALUE_ACCESSOR],\n    host: {\n        '(click)': 'toggleChecked()'\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'name': [{ type: Input },],\n'disabled': [{ type: Input },],\n'clickable': [{ type: Input },],\n'valueChange': [{ type: Output },],\n'value': [{ type: Input },],\n};\n}\n\nfunction ToggleSwitchComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nToggleSwitchComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nToggleSwitchComponent.ctorParameters;\n/** @type {?} */\nToggleSwitchComponent.propDecorators;\n/** @type {?} */\nToggleSwitchComponent.prototype.name;\n/** @type {?} */\nToggleSwitchComponent.prototype.disabled;\n/** @type {?} */\nToggleSwitchComponent.prototype.clickable;\n/** @type {?} */\nToggleSwitchComponent.prototype.valueChange;\n/** @type {?} */\nToggleSwitchComponent.prototype._value;\n/** @type {?} */\nToggleSwitchComponent.prototype.onTouchedCallback;\n/** @type {?} */\nToggleSwitchComponent.prototype.onChangeCallback;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { ToggleSwitchComponent } from './toggleswitch.component';\nexport class ToggleSwitchModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [ FormsModule ],\n    exports: [ ToggleSwitchComponent ],\n    declarations: [ ToggleSwitchComponent ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ToggleSwitchModule_tsickle_Closure_declarations() {\n/** @type {?} */\nToggleSwitchModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nToggleSwitchModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { Observer } from 'rxjs/Observer';\nimport'rxjs/add/observable/concat';\nexport class FrameExtractionService {\n/**\n * @param {?} source\n * @return {?}\n */\nprivate createVideoPlayer(source: string): HTMLVideoElement {\n        let /** @type {?} */ videoPlayer = document.createElement('video');\n        videoPlayer.preload = 'auto';\n        videoPlayer.src = source;\n        return videoPlayer;\n    }\n/**\n * @param {?} width\n * @param {?} height\n * @return {?}\n */\nprivate createCanvas(width: number, height: number): HTMLCanvasElement {\n        let /** @type {?} */ canvas = document.createElement('canvas');\n        canvas.width = width;\n        canvas.height = height;\n        return canvas;\n    }\n/**\n * @param {?} videoPlayer\n * @param {?} time\n * @return {?}\n */\nprivate goToFrame(videoPlayer: HTMLVideoElement, time: number): Observable<number> {\n        videoPlayer.currentTime = time;\n        return Observable.fromEvent(videoPlayer, time === 0 ? 'loadeddata' : 'seeked');\n    }\n/**\n * @param {?} videoPlayer\n * @param {?} canvas\n * @param {?} time\n * @param {?=} width\n * @param {?=} height\n * @return {?}\n */\nprivate getThumbnail(videoPlayer: HTMLVideoElement, canvas: HTMLCanvasElement, time: number, width: number = 160, height: number = 90): Observable<ExtractedFrame> {\n\n        return Observable.create((observer: Observer<ExtractedFrame>) => {\n\n            // go to specified frame\n            let /** @type {?} */ subscription = this.goToFrame(videoPlayer, time).subscribe((event: any) => {\n                // create image from current frame\n                canvas.getContext('2d').drawImage(videoPlayer, 0, 0, width, height);\n                observer.next({ image: canvas.toDataURL(), width: width, height: height, time: time });\n                observer.complete();\n                subscription.unsubscribe();\n            });\n        });\n    }\n/**\n * @param {?} source\n * @param {?} width\n * @param {?} height\n * @param {?} time\n * @return {?}\n */\ngetFrameThumbnail(source: string, width: number, height: number, time: number): Observable<ExtractedFrame> {\n\n        // create required elements\n        let /** @type {?} */ videoPlayer = this.createVideoPlayer(source);\n        let /** @type {?} */ canvas = this.createCanvas(width, height);\n\n        let /** @type {?} */ frameSubscription = this.getThumbnail(videoPlayer, canvas, time, width, height);\n\n        // ensure we release memory after we are finished        \n        frameSubscription.subscribe(null, null, () => {\n            videoPlayer = null;\n            canvas = null;\n        });\n\n        return frameSubscription;\n    }\n/**\n * @param {?} source\n * @param {?} width\n * @param {?} height\n * @param {?} start\n * @param {?} end\n * @param {?=} skip\n * @return {?}\n */\ngetFrameThumbnails(source: string, width: number, height: number, start: number, end: number, skip: number = 5): Observable<ExtractedFrame> {\n\n        // create required elements\n        let /** @type {?} */ videoPlayer = this.createVideoPlayer(source);\n        let /** @type {?} */ canvas = this.createCanvas(width, height);\n\n        return Observable.create((observer: Observer<ExtractedFrame>) => {\n\n            Observable.fromEvent(videoPlayer, 'loadedmetadata').subscribe(() => {\n\n                // calculate the frames required\n                let /** @type {?} */ frames = [];\n\n                for (let /** @type {?} */ idx = start; idx < end; idx += skip) {\n                    frames.push(this.getThumbnail(videoPlayer, canvas, idx, width, height));\n                }\n\n                Observable.concat(...frames).subscribe((frame: ExtractedFrame) => observer.next(frame), null, () => {\n                    videoPlayer = null;\n                    canvas = null;\n                    observer.complete();\n                });\n            });\n\n        });\n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction FrameExtractionService_tsickle_Closure_declarations() {\n/** @type {?} */\nFrameExtractionService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFrameExtractionService.ctorParameters;\n}\n\n\nexport interface ExtractedFrame {\n    image: string;\n    width: number;\n    height: number;\n    time: number;\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\n\nimport { FrameExtractionService } from './frame-extraction.service';\nexport class FrameExtractionModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    providers: [FrameExtractionService],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction FrameExtractionModule_tsickle_Closure_declarations() {\n/** @type {?} */\nFrameExtractionModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFrameExtractionModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { MediaPlayerType } from './media-player.component';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { Subject } from 'rxjs/Subject';\nimport { Observer } from 'rxjs/Observer';\nimport { FrameExtractionService, ExtractedFrame } from '../../services/frame-extraction/index';\nexport class MediaPlayerService {\n\n    source: string;\n    type: MediaPlayerType = 'video';\n    loaded: boolean = false;\n\n    /*\n        Create observables for media player events\n    */\n    playing: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\n    initEvent: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\n    abortEvent: Subject<void> = new Subject<void>();\n    canPlayEvent: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\n    canPlayThroughEvent: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\n    durationChangeEvent: Subject<number> = new Subject<number>();\n    endedEvent: Subject<void> = new Subject<void>();\n    errorEvent: Subject<any> = new Subject<any>();\n    loadedDataEvent: Subject<any> = new Subject<any>();\n    loadedMetadataEvent: Subject<any> = new Subject<any>();\n    loadStartEvent: Subject<void> = new Subject<void>();\n    pauseEvent: Subject<void> = new Subject<void>();\n    playEvent: Subject<void> = new Subject<void>();\n    playingEvent: Subject<boolean> = new Subject<boolean>();\n    rateChangeEvent: Subject<number> = new Subject<number>();\n    seekedEvent: Subject<number> = new Subject<number>();\n    seekingEvent: Subject<number> = new Subject<number>();\n    stalledEvent: Subject<void> = new Subject<void>();\n    suspendEvent: Subject<void> = new Subject<void>();\n    timeUpdateEvent: Subject<number> = new Subject<number>();\n    volumeChangeEvent: Subject<number> = new Subject<number>();\n    waitingEvent: Subject<void> = new Subject<void>();\n    mediaClickEvent: Subject<MouseEvent> = new Subject<MouseEvent>();\n    fullscreenEvent: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\n    quietModeEvent: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\n    progressEvent: Observable<TimeRanges> = Observable.create((observer: Observer<TimeRanges>) => {\n\n        // repeat until the whole video has fully loaded\n        let /** @type {?} */ interval = setInterval(() => {\n\n            let /** @type {?} */ buffered = /** @type {?} */(( this._mediaPlayer.buffered as TimeRanges));\n            observer.next(buffered);\n\n            if (buffered.length === 1 && buffered.start(0) === 0 && buffered.end(0) === this.duration) {\n                observer.complete();\n                clearInterval(interval);\n            }\n        }, 1000);\n    });\nprivate _mediaPlayer: HTMLMediaElement;\nprivate _hostElement: HTMLElement;\nprivate _fullscreen: boolean = false;\nprivate _quietMode: boolean;\n/**\n * @param {?} _frameExtractionService\n */\nconstructor(private _frameExtractionService: FrameExtractionService) {}\n/**\n * @return {?}\n */\nget mediaPlayer(): HTMLMediaElement {\n        return this._mediaPlayer;\n    }\n/**\n * @return {?}\n */\nget quietMode(): boolean {\n        return this._quietMode;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset quietMode(value: boolean) {\n\n        // quiet mode cannot be enabled on audio player\n        if (this.type === 'audio') {\n            value = false;\n        }\n\n        this._quietMode = value;\n        this.quietModeEvent.next(value);\n    }\n/**\n * @return {?}\n */\nget mediaPlayerWidth(): number {\n        return this._mediaPlayer ? this._mediaPlayer.offsetWidth : 0;\n    }\n/**\n * @return {?}\n */\nget mediaPlayerHeight(): number {\n        return this._mediaPlayer ? this._mediaPlayer.offsetHeight : 0;\n    }\n/**\n * @return {?}\n */\nget audioTracks(): AudioTrackList {\n        return this._mediaPlayer ? this._mediaPlayer.audioTracks : null;\n    }\n/**\n * @return {?}\n */\nget autoplay(): boolean {\n        return this._mediaPlayer ? this._mediaPlayer.autoplay : false;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset autoplay(value: boolean) {\n        this._mediaPlayer.autoplay = value;\n    }\n/**\n * @return {?}\n */\nget buffered(): TimeRanges {\n        return this._mediaPlayer ? this._mediaPlayer.buffered : new TimeRanges();\n    }\n/**\n * @return {?}\n */\nget crossOrigin(): string {\n        return this._mediaPlayer ? this._mediaPlayer.crossOrigin : null;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset crossOrigin(value: string) {\n        this._mediaPlayer.crossOrigin = value;\n    }\n/**\n * @return {?}\n */\nget currentSrc(): string {\n        return this._mediaPlayer ? this._mediaPlayer.currentSrc : null;\n    }\n/**\n * @return {?}\n */\nget currentTime(): number {\n        return this._mediaPlayer ? this._mediaPlayer.currentTime : 0;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset currentTime(value: number) {\n        this._mediaPlayer.currentTime = value;\n    }\n/**\n * @return {?}\n */\nget defaultMuted(): boolean {\n        return this._mediaPlayer ? this._mediaPlayer.defaultMuted : false;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset defaultMuted(value: boolean) {\n        this._mediaPlayer.defaultMuted = value;\n    }\n/**\n * @return {?}\n */\nget defaultPlaybackRate(): number {\n        return this._mediaPlayer ? this._mediaPlayer.defaultPlaybackRate : 1;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset defaultPlaybackRate(value: number) {\n        this._mediaPlayer.defaultPlaybackRate = value;\n    }\n/**\n * @return {?}\n */\nget duration(): number {\n        return this._mediaPlayer ? this._mediaPlayer.duration : 0;\n    }\n/**\n * @return {?}\n */\nget ended(): boolean {\n        return this._mediaPlayer ? this._mediaPlayer.ended : false;\n    }\n/**\n * @return {?}\n */\nget loop(): boolean {\n        return this._mediaPlayer ? this._mediaPlayer.loop : false;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset loop(value: boolean) {\n        this._mediaPlayer.loop = value;\n    }\n/**\n * @return {?}\n */\nget muted(): boolean {\n        return this._mediaPlayer ? this._mediaPlayer.muted : false;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset muted(value: boolean) {\n        this._mediaPlayer.muted = value;\n    }\n/**\n * @return {?}\n */\nget networkState(): number {\n        return this._mediaPlayer.networkState;\n    }\n/**\n * @return {?}\n */\nget paused(): boolean {\n        return this._mediaPlayer ? this._mediaPlayer.paused : true;\n    }\n/**\n * @return {?}\n */\nget playbackRate(): number {\n        return this._mediaPlayer ? this._mediaPlayer.playbackRate : 1;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset playbackRate(value: number) {\n        this._mediaPlayer.playbackRate = value;\n    }\n/**\n * @return {?}\n */\nget played(): TimeRanges {\n        return this._mediaPlayer ? this._mediaPlayer.played : new TimeRanges();\n    }\n/**\n * @return {?}\n */\nget preload(): string {\n        return this._mediaPlayer ? this._mediaPlayer.preload : 'auto';\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset preload(value: string) {\n        this._mediaPlayer.preload = value;\n    }\n/**\n * @return {?}\n */\nget readyState(): number {\n        return this._mediaPlayer ? this._mediaPlayer.readyState : 0;\n    }\n/**\n * @return {?}\n */\nget seekable(): TimeRanges {\n        return this._mediaPlayer ? this._mediaPlayer.seekable : new TimeRanges();\n    }\n/**\n * @return {?}\n */\nget seeking(): boolean {\n        return this._mediaPlayer ? this._mediaPlayer.seeking : false;\n    }\n/**\n * @return {?}\n */\nget src(): string {\n        return this._mediaPlayer ? this._mediaPlayer.src : '';\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset src(value: string) {\n        this._mediaPlayer.src = value;\n    }\n/**\n * @return {?}\n */\nget textTracks(): TextTrackList {\n        return this._mediaPlayer ? this._mediaPlayer.textTracks : new TextTrackList();\n    }\n/**\n * @return {?}\n */\nget videoTracks(): VideoTrackList {\n        return this._mediaPlayer ? this._mediaPlayer.videoTracks : new VideoTrackList();\n    }\n/**\n * @return {?}\n */\nget volume(): number {\n        return this._mediaPlayer ? this._mediaPlayer.volume : 1;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset volume(value: number) {\n        this._mediaPlayer.volume = value;\n    }\n/**\n * @return {?}\n */\nget fullscreen(): boolean {\n        return this._mediaPlayer ? this._fullscreen : false;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset fullscreen(value: boolean) {\n        this._fullscreen = value;\n        this.fullscreenEvent.next(value);\n    }\n/**\n * @param {?} hostElement\n * @param {?} mediaPlayer\n * @return {?}\n */\nsetMediaPlayer(hostElement: HTMLElement, mediaPlayer: HTMLMediaElement): void {\n        this._hostElement = hostElement;\n        this._mediaPlayer = mediaPlayer;\n\n        this.initEvent.next(true);\n    }\n/**\n * Toggle playing state\n * @return {?}\n */\ntogglePlay(): void {\n\n        // prevent any action is not loaded\n        if (this.loaded === false) {\n            return;\n        }\n\n        if (this.paused) {\n            this.play();\n        } else {\n            this.pause();\n        }\n    }\n/**\n * Starts playing the audio/video\n * @return {?}\n */\nplay(): void {\n        this._mediaPlayer.play();\n    }\n/**\n * Pauses the currently playing audio/video\n * @return {?}\n */\npause(): void {\n        this._mediaPlayer.pause();\n    }\n/**\n * Re-loads the audio/video element\n * @return {?}\n */\nload(): void {\n        this._mediaPlayer.load();\n    }\n/**\n * Checks if the browser can play the specified audio/video type\n * @param {?} type\n * @return {?}\n */\ncanPlayType(type: string): string {\n        return this._mediaPlayer.canPlayType(type);\n    }\n/**\n * Adds a new text track to the audio/video\n * @param {?} kind\n * @param {?} label\n * @param {?} language\n * @return {?}\n */\naddTextTrack(kind: string, label: string, language: string): TextTrack {\n        return this._mediaPlayer.addTextTrack(kind, label, language);\n    }\n/**\n * Attempt to display media in fullscreen mode\n * @return {?}\n */\nrequestFullscreen(): void {\n\n        if (this._hostElement.requestFullscreen) {\n            this._hostElement.requestFullscreen();\n        } else if (this._hostElement.webkitRequestFullscreen) {\n            this._hostElement.webkitRequestFullscreen();\n        } else if (( /** @type {?} */((<any>this._hostElement))).msRequestFullscreen) {\n            ( /** @type {?} */((<any>this._hostElement))).msRequestFullscreen();\n        } else if (( /** @type {?} */((<any>this._hostElement))).mozRequestFullScreen) {\n            ( /** @type {?} */((<any>this._hostElement))).mozRequestFullScreen();\n        }\n    }\n/**\n * Exit full screen mode\n * @return {?}\n */\nexitFullscreen(): void {\n\n        if (( /** @type {?} */((<any>this._hostElement))).exitFullscreen) {\n            document.exitFullscreen();\n        } else if (document.webkitExitFullscreen) {\n            document.webkitExitFullscreen();\n        } else if (( /** @type {?} */((<any>document))).msExitFullscreen) {\n            ( /** @type {?} */((<any>document))).msExitFullscreen();\n        } else if (( /** @type {?} */((<any>document))).mozCancelFullScreen) {\n            ( /** @type {?} */((<any>document))).mozCancelFullScreen();\n        }\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nfullscreenChange(event: Event) {\n        this.fullscreen = ( /** @type {?} */((<any>document))).fullscreen || document.webkitIsFullScreen || ( /** @type {?} */((<any>document))).mozFullScreen || ( /** @type {?} */((<any>document))).msFullscreenElement !== null && ( /** @type {?} */((<any>document))).msFullscreenElement !== undefined;\n        this.fullscreenEvent.next(this.fullscreen);\n    }\n/**\n * Toggle Fullscreen State\n * @return {?}\n */\ntoggleFullscreen(): void {\n        if (this.fullscreen) {\n            this.exitFullscreen();\n        } else {\n            this.requestFullscreen();\n        }\n    }\n/**\n * Extract the frames from the video\n * @param {?} width\n * @param {?} height\n * @param {?} skip\n * @return {?}\n */\ngetFrames(width: number, height: number, skip: number): Observable<ExtractedFrame> {\n\n        if (this.type === 'video') {\n            return this._frameExtractionService.getFrameThumbnails(this.source, width, height, 0, this.duration, 10);\n        }\n\n        return Observable.from([]);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: FrameExtractionService, },\n];\n}\n\nfunction MediaPlayerService_tsickle_Closure_declarations() {\n/** @type {?} */\nMediaPlayerService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMediaPlayerService.ctorParameters;\n/** @type {?} */\nMediaPlayerService.prototype.source;\n/** @type {?} */\nMediaPlayerService.prototype.type;\n/** @type {?} */\nMediaPlayerService.prototype.loaded;\n/** @type {?} */\nMediaPlayerService.prototype.playing;\n/** @type {?} */\nMediaPlayerService.prototype.initEvent;\n/** @type {?} */\nMediaPlayerService.prototype.abortEvent;\n/** @type {?} */\nMediaPlayerService.prototype.canPlayEvent;\n/** @type {?} */\nMediaPlayerService.prototype.canPlayThroughEvent;\n/** @type {?} */\nMediaPlayerService.prototype.durationChangeEvent;\n/** @type {?} */\nMediaPlayerService.prototype.endedEvent;\n/** @type {?} */\nMediaPlayerService.prototype.errorEvent;\n/** @type {?} */\nMediaPlayerService.prototype.loadedDataEvent;\n/** @type {?} */\nMediaPlayerService.prototype.loadedMetadataEvent;\n/** @type {?} */\nMediaPlayerService.prototype.loadStartEvent;\n/** @type {?} */\nMediaPlayerService.prototype.pauseEvent;\n/** @type {?} */\nMediaPlayerService.prototype.playEvent;\n/** @type {?} */\nMediaPlayerService.prototype.playingEvent;\n/** @type {?} */\nMediaPlayerService.prototype.rateChangeEvent;\n/** @type {?} */\nMediaPlayerService.prototype.seekedEvent;\n/** @type {?} */\nMediaPlayerService.prototype.seekingEvent;\n/** @type {?} */\nMediaPlayerService.prototype.stalledEvent;\n/** @type {?} */\nMediaPlayerService.prototype.suspendEvent;\n/** @type {?} */\nMediaPlayerService.prototype.timeUpdateEvent;\n/** @type {?} */\nMediaPlayerService.prototype.volumeChangeEvent;\n/** @type {?} */\nMediaPlayerService.prototype.waitingEvent;\n/** @type {?} */\nMediaPlayerService.prototype.mediaClickEvent;\n/** @type {?} */\nMediaPlayerService.prototype.fullscreenEvent;\n/** @type {?} */\nMediaPlayerService.prototype.quietModeEvent;\n/** @type {?} */\nMediaPlayerService.prototype.progressEvent;\n/** @type {?} */\nMediaPlayerService.prototype._mediaPlayer;\n/** @type {?} */\nMediaPlayerService.prototype._hostElement;\n/** @type {?} */\nMediaPlayerService.prototype._fullscreen;\n/** @type {?} */\nMediaPlayerService.prototype._quietMode;\n/** @type {?} */\nMediaPlayerService.prototype._frameExtractionService;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable } from '@angular/core';\nimport { Http, ResponseContentType } from '@angular/http';\nimport { Observable } from 'rxjs/Observable';\nimport { Observer } from 'rxjs/Observer';\nimport'rxjs/add/observable/of';\nexport class AudioService {\nprivate _audioBuffer: AudioBuffer;\nprivate _audioBufferSource: AudioBufferSourceNode;\nprivate _audioContext: AudioContext;\nprivate _gainNode: GainNode;\nprivate _analyserNode: AnalyserNode;\n/**\n * @param {?} _http\n */\nconstructor(private _http: Http) { }\n/**\n * @param {?} mediaElement\n * @return {?}\n */\ngetAudioFileMetadata(mediaElement: HTMLMediaElement): Observable<AudioMetadata> {\n        return Observable.create((observer: Observer<AudioMetadata>) => {\n            this._http.request(mediaElement.src, { responseType: ResponseContentType.Blob }).subscribe(response => {\n\n                let /** @type {?} */ filename = mediaElement.src.substring(mediaElement.src.lastIndexOf('/') + 1);\n                let /** @type {?} */ extension = mediaElement.src.substring(mediaElement.src.lastIndexOf('.') + 1).toLowerCase();\n                let /** @type {?} */ blob = response.blob();\n                let /** @type {?} */ description;\n\n                switch (extension) {\n                    case 'mp3':\n                        description = 'MPEG audio layer 3 file';\n                        break;\n\n                    case 'wma':\n                        description = 'Windows media audio file';\n                        break;\n\n                    case 'wav':\n                        description = 'WAVE audio file';\n                        break;\n\n                    case 'ogg':\n                        description = 'Ogg Vorbis file';\n                        break;\n\n                    case 'aac':\n                        description = 'Advanced audio coding file';\n                        break;\n\n                    case 'midi':\n                        description = 'Musical instrument digital interface file';\n                        break;\n\n                    default:\n                        description = 'Audio file';\n                        break;\n                }\n\n                observer.next({\n                    filename: filename,\n                    extension: extension,\n                    description: description,\n                    size: blob.size\n                });\n            });\n        });\n    }\n/**\n * @param {?} url\n * @return {?}\n */\ngetWaveformFromUrl(url: string): Observable<Float32Array[]> {\n\n        // if audio context is not support return a stream of empty data\n        if (!( /** @type {?} */((<any>window))).AudioContext) {\n            return Observable.of<Float32Array[]>([new Float32Array(0)]);\n        }\n\n        this._audioContext = new AudioContext();\n        this.createVolumeNode();\n        this.createAnalyserNode();\n\n        return Observable.create((observer: Observer<Float32Array[]>) => {\n\n            // load the media from the URL provided\n            this._http.request(url, { responseType: ResponseContentType.ArrayBuffer }).subscribe(response => {\n                this.getAudioBuffer(response.arrayBuffer()).subscribe(audioBuffer => {\n\n                    // create the buffer source\n                    this.createBufferSource(audioBuffer);\n\n                    let /** @type {?} */ dataPoints: Float32Array[] = [];\n                    let /** @type {?} */ channels = this._audioBuffer.numberOfChannels;\n\n                    // extract the data from each channel\n                    for (let /** @type {?} */ channelIdx = 0; channelIdx < channels; channelIdx++) {\n                        dataPoints[channelIdx] = this._audioBuffer.getChannelData(channelIdx);\n                    }\n\n                    observer.next(dataPoints);\n                    observer.complete();\n\n                    // cleanup after ourselves\n                    dataPoints = null;\n                }, (error) => observer.error(error));\n            }, (error) => observer.error(error));\n        });\n    }\n/**\n * @param {?=} channels\n * @param {?=} skip\n * @return {?}\n */\ngetWaveformPoints(channels: Float32Array[] = [], skip: number = 1000): WaveformPoint[] {\n\n        let /** @type {?} */ waveform: WaveformPoint[] = [];\n        let /** @type {?} */ duration = channels.length > 0 ? channels[0].length : 0;\n\n        // convert each channel data to a series of waveform points\n        for (let /** @type {?} */ idx = 0; idx < duration; idx += skip) {\n\n            // get all the channel data for a specific point\n            let /** @type {?} */ points = channels.map(channel => channel[idx]);\n\n            // find the minimum point and maximum points at each position across all channels\n            waveform.push({\n                min: points.reduce((previous, current) => current < previous ? current : previous),\n                max: points.reduce((previous, current) => current > previous ? current : previous)\n            });\n        }\n\n        return waveform;\n    }\n/**\n * @param {?} arrayBuffer\n * @return {?}\n */\nprivate getAudioBuffer(arrayBuffer: ArrayBuffer): Observable<AudioBuffer> {\n        return Observable.create((observer: Observer<AudioBuffer>) => {\n            this.getOfflineAudioContext().decodeAudioData(arrayBuffer, (audioBuffer: AudioBuffer) => {\n                observer.next(audioBuffer);\n                observer.complete();\n            }, (error) => observer.error(error));\n        });\n    }\n/**\n * @return {?}\n */\nprivate getOfflineAudioContext(): OfflineAudioContext {\n        return new OfflineAudioContext(1, 2, this._audioContext.sampleRate || 44100);\n    }\n/**\n * @param {?} audioBuffer\n * @return {?}\n */\nprivate createBufferSource(audioBuffer: AudioBuffer): void {\n        this.disconnectSource();\n\n        this._audioBuffer = audioBuffer;\n        this._audioBufferSource = this._audioContext.createBufferSource();\n        this._audioBufferSource.buffer = this._audioBuffer;\n        this._audioBufferSource.connect(this._analyserNode);\n    }\n/**\n * @return {?}\n */\nprivate createVolumeNode(): void {\n        this._gainNode = this._audioContext.createGain();\n        this._gainNode.connect(this._audioContext.destination);\n    }\n/**\n * @return {?}\n */\nprivate createAnalyserNode(): void {\n        this._analyserNode = this._audioContext.createAnalyser();\n        this._analyserNode.connect(this._gainNode);\n    }\n/**\n * @return {?}\n */\nprivate disconnectSource(): void {\n        if (this._audioBufferSource) {\n            this._audioBufferSource.disconnect();\n        }\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Http, },\n];\n}\n\nfunction AudioService_tsickle_Closure_declarations() {\n/** @type {?} */\nAudioService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nAudioService.ctorParameters;\n/** @type {?} */\nAudioService.prototype._audioBuffer;\n/** @type {?} */\nAudioService.prototype._audioBufferSource;\n/** @type {?} */\nAudioService.prototype._audioContext;\n/** @type {?} */\nAudioService.prototype._gainNode;\n/** @type {?} */\nAudioService.prototype._analyserNode;\n/** @type {?} */\nAudioService.prototype._http;\n}\n\n\nexport interface WaveformPoint {\n    min: number;\n    max: number;\n}\n\nexport interface AudioMetadata {\n    filename: string;\n    extension: string;\n    description: string;\n    size: number;\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { HttpModule } from '@angular/http';\nimport { AudioService } from './audio.service';\nexport class AudioServiceModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [ HttpModule ],\n    providers: [AudioService]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction AudioServiceModule_tsickle_Closure_declarations() {\n/** @type {?} */\nAudioServiceModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nAudioServiceModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Input, ViewChild, ElementRef, AfterViewInit, OnDestroy } from '@angular/core';\nimport { ExtractedFrame, FrameExtractionService } from '../../services/frame-extraction/frame-extraction.service';\nimport { MediaPlayerService } from './media-player.service';\nimport { Subject } from 'rxjs/Subject';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { Observable } from 'rxjs/Observable';\nimport { Observer } from 'rxjs/Observer';\nimport { AudioService, AudioMetadata } from '../../services/audio/index';\nimport { Subscription } from 'rxjs/Subscription';\nimport'rxjs/add/observable/from';\nimport'rxjs/add/operator/switchMap';\nexport class MediaPlayerComponent implements AfterViewInit, OnDestroy {\nprivate _playerRef: ElementRef;\nprivate _trackBarRef: ElementRef;\n\n    hovering: boolean = false;\n    audioMetadata: Observable<AudioMetadata>;\nprivate _hover$: Subscription;\nprivate _clicked$: Subscription;\nprivate _paused$: Subscription;\nprivate _playing$: Subscription;\nprivate _loading$: Subscription;\n/**\n * @return {?}\n */\nget source(): string {\n        return this.mediaPlayerService.source;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset source(value: string) {\n        this.mediaPlayerService.source = value;\n    }\n/**\n * @return {?}\n */\nget type(): MediaPlayerType {\n        return this.mediaPlayerService.type;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset type(value: MediaPlayerType) {\n        this.mediaPlayerService.type = value;\n    }\n/**\n * @return {?}\n */\nget quietMode(): boolean {\n        return this.mediaPlayerService.quietMode;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset quietMode(value: boolean) {\n        this.mediaPlayerService.quietMode = value;\n    }\n/**\n * @param {?} mediaPlayerService\n * @param {?} _audioService\n * @param {?} _elementRef\n */\nconstructor(public mediaPlayerService: MediaPlayerService,\nprivate _audioService: AudioService,\nprivate _elementRef: ElementRef) {\n\n        // show controls when hovering and in quiet mode\n        this._hover$ = Observable.fromEvent(this._elementRef.nativeElement, 'mousemove').switchMap((event: MouseEvent) => {\n            this.hovering = true;         \n            return Observable.of(event);\n        }).debounceTime(2000).subscribe(() => this.hovering = false);\n    }\n/**\n * @return {?}\n */\nngAfterViewInit(): void {\n        this.mediaPlayerService.setMediaPlayer(this._elementRef.nativeElement, this._playerRef.nativeElement);\n\n        this.audioMetadata = this._audioService.getAudioFileMetadata(this._playerRef.nativeElement);\n        this._playing$ = this.mediaPlayerService.playingEvent.subscribe(event => this.mediaPlayerService.playing.next(true));\n        this._paused$ = this.mediaPlayerService.pauseEvent.subscribe(event => this.mediaPlayerService.playing.next(false));\n        this._clicked$ = this.mediaPlayerService.mediaClickEvent.subscribe(() => this.mediaPlayerService.togglePlay());\n        this._loading$ = this.mediaPlayerService.loadedMetadataEvent.subscribe(() => this.mediaPlayerService.loaded = true);\n    }\n/**\n * @return {?}\n */\nngOnDestroy(): void {\n        this._hover$.unsubscribe();\n        this._playing$.unsubscribe();\n        this._paused$.unsubscribe();\n        this._clicked$.unsubscribe();\n        this._loading$.unsubscribe();\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-media-player',\n    template: `\n      <div class=\"video-player-container\" *ngIf=\"type === 'video'\">\n\n          <video class=\"video-player\" #player [src]=\"source\" (abort)=\"mediaPlayerService.abortEvent.next()\" (canplay)=\"mediaPlayerService.canPlayEvent.next()\"\n              (canplaythrough)=\"mediaPlayerService.canPlayThroughEvent.next()\" (durationchange)=\"mediaPlayerService.durationChangeEvent.next(player.duration)\" (ended)=\"mediaPlayerService.endedEvent.next()\"\n              (error)=\"mediaPlayerService.errorEvent.next($event)\" (loadeddata)=\"mediaPlayerService.loadedDataEvent.next($event)\" (loadedmetadata)=\"mediaPlayerService.loadedMetadataEvent.next($event)\"\n              (loadstart)=\"mediaPlayerService.loadStartEvent.next()\" (pause)=\"mediaPlayerService.pauseEvent.next()\" (play)=\"mediaPlayerService.playEvent.next()\" (playing)=\"mediaPlayerService.playingEvent.next(!player.paused)\"\n              (ratechange)=\"mediaPlayerService.rateChangeEvent.next(player.playbackRate)\" (seeked)=\"mediaPlayerService.seekedEvent.next(player.currentTime)\" (seeking)=\"mediaPlayerService.seekingEvent.next(player.currentTime)\"\n              (stalled)=\"mediaPlayerService.stalledEvent.next()\" (suspend)=\"mediaPlayerService.suspendEvent.next()\" (timeupdate)=\"mediaPlayerService.timeUpdateEvent.next(player.currentTime)\"\n              (volumechange)=\"mediaPlayerService.volumeChangeEvent.next(player.volume)\" (waiting)=\"mediaPlayerService.waitingEvent.next()\" (click)=\"mediaPlayerService.mediaClickEvent.next($event)\"></video>\n\n          <div class=\"video-overlay\" [class.playing]=\"mediaPlayerService.playing | async\">\n              <svg class=\"play-graphic\" x=\"0px\" y=\"0px\" viewBox=\"0 0 64 64\">\n                  <circle class=\"play-circle\" cx=\"32.2\" cy=\"31.8\" r=\"31.8\" />\n                  <polygon class=\"play-triangle\" points=\"23,14.1 23,50.8 48.3,32.5\" />\n              </svg>\n          </div>\n\n      </div>\n\n\n      <div class=\"audio-player\" *ngIf=\"type === 'audio'\">\n\n          <svg width=\"24px\" height=\"24px\" viewBox=\"0 0 24 24\">\n              <g stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\n                  <g transform=\"translate(-98.000000, -458.000000)\">\n                      <g transform=\"translate(98.000000, 458.000000)\">\n                          <path d=\"M4.5,0.5 L18.0435308,0.5 L23.5,6.22251502 L23.5,23.5 L4.5,23.5 L4.5,0.5 Z\" fill=\"#CCEAE2\"></path>\n                          <path d=\"M4.5,8 L4.5,0.5 L18,0.5 L23.5,6 L23.5,23.5 L18,23.5\" stroke=\"#60798D\" fill=\"#CCEAE2\"></path>\n                          <path d=\"M4,13.5 L0.5,13.5 L0.5,18.5 L4,18.5 L9.5,22.5 L9.5,9.5 L4,13.5 Z\" stroke=\"#60798D\" fill=\"#85D2BE\"></path>\n                          <path d=\"M11.5,12.5137939 C13.7576225,12.5137939 14.5,14.3709236 14.5,16 C14.5,17.6849236 13.7089152,19.5420532 11.5,19.5420532\"\n                              stroke=\"#60798D\"></path>\n                          <path d=\"M11.5,9 C15.8037643,9.04168701 18.5,11.6604805 18.5,16 C18.5,20.3395195 15.8804302,23.0079956 11.5,23\" stroke=\"#60798D\"></path>\n                          <path d=\"M17.5219116,0.761413574 L17.5219116,6 L23,6\" stroke=\"#60798D\" fill=\"#85D2BE\"></path>\n                      </g>\n                  </g>\n              </g>\n          </svg>\n\n          <p class=\"audio-file-name\">{{ (audioMetadata | async)?.filename }}</p>\n          <p class=\"audio-file-format\">{{ (audioMetadata | async)?.description }}</p>\n          <p class=\"audio-file-size\">{{ (audioMetadata | async)?.size | fileSize }}</p>\n\n          <audio #player [src]=\"source\" (abort)=\"mediaPlayerService.abortEvent.next()\" (canplay)=\"mediaPlayerService.canPlayEvent.next(true)\"\n              (canplaythrough)=\"mediaPlayerService.canPlayThroughEvent.next(true)\" (durationchange)=\"mediaPlayerService.durationChangeEvent.next(player.duration)\" (ended)=\"mediaPlayerService.endedEvent.next()\"\n              (error)=\"mediaPlayerService.errorEvent.next($event)\" (loadeddata)=\"mediaPlayerService.loadedDataEvent.next($event)\" (loadedmetadata)=\"mediaPlayerService.loadedMetadataEvent.next($event)\"\n              (loadstart)=\"mediaPlayerService.loadStartEvent.next()\" (pause)=\"mediaPlayerService.pauseEvent.next()\" (play)=\"mediaPlayerService.playEvent.next()\" (playing)=\"mediaPlayerService.playingEvent.next(!player.paused)\"\n              (ratechange)=\"mediaPlayerService.rateChangeEvent.next(player.playbackRate)\" (seeked)=\"mediaPlayerService.seekedEvent.next(player.currentTime)\" (seeking)=\"mediaPlayerService.seekingEvent.next(player.currentTime)\"\n              (stalled)=\"mediaPlayerService.stalledEvent.next()\" (suspend)=\"mediaPlayerService.suspendEvent.next()\" (timeupdate)=\"mediaPlayerService.timeUpdateEvent.next(player.currentTime)\"\n              (volumechange)=\"mediaPlayerService.volumeChangeEvent.next(player.volume)\" (waiting)=\"mediaPlayerService.waitingEvent.next()\" (click)=\"mediaPlayerService.mediaClickEvent.next($event)\"></audio>\n      </div>\n\n      <div class=\"control-bar\">\n          <ux-media-player-timeline></ux-media-player-timeline>\n          <ux-media-player-controls></ux-media-player-controls>\n      </div>\n    `,\n    providers: [ MediaPlayerService ],\n    host: {\n        'tabindex': '0',\n        '(keydown.Space)': 'mediaPlayerService.togglePlay()',\n        '[class.standard]': '!mediaPlayerService.fullscreen',\n        '[class.fullscreen]': 'mediaPlayerService.fullscreen',\n        '[class.quiet]': 'quietMode && type === \"video\" || mediaPlayerService.fullscreen',\n        '[class.hover]': 'hovering',\n        '[class.video]': 'type === \"video\"',\n        '[class.audio]': 'type === \"audio\"',\n        '(mouseenter)': 'hovering = true',\n        '(mouseleave)': 'hovering = false',\n        '(document:webkitfullscreenchange)': 'mediaPlayerService.fullscreenChange($event)',\n        '(document:mozfullscreenchange)': 'mediaPlayerService.fullscreenChange($event)',\n        '(document:MSFullscreenChange)': 'mediaPlayerService.fullscreenChange($event)'\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: MediaPlayerService, },\n{type: AudioService, },\n{type: ElementRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'_playerRef': [{ type: ViewChild, args: ['player', ] },],\n'_trackBarRef': [{ type: ViewChild, args: ['trackBar', ] },],\n'source': [{ type: Input },],\n'type': [{ type: Input },],\n'quietMode': [{ type: Input },],\n};\n}\n\nfunction MediaPlayerComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nMediaPlayerComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMediaPlayerComponent.ctorParameters;\n/** @type {?} */\nMediaPlayerComponent.propDecorators;\n/** @type {?} */\nMediaPlayerComponent.prototype._playerRef;\n/** @type {?} */\nMediaPlayerComponent.prototype._trackBarRef;\n/** @type {?} */\nMediaPlayerComponent.prototype.hovering;\n/** @type {?} */\nMediaPlayerComponent.prototype.audioMetadata;\n/** @type {?} */\nMediaPlayerComponent.prototype._hover$;\n/** @type {?} */\nMediaPlayerComponent.prototype._clicked$;\n/** @type {?} */\nMediaPlayerComponent.prototype._paused$;\n/** @type {?} */\nMediaPlayerComponent.prototype._playing$;\n/** @type {?} */\nMediaPlayerComponent.prototype._loading$;\n/** @type {?} */\nMediaPlayerComponent.prototype.mediaPlayerService;\n/** @type {?} */\nMediaPlayerComponent.prototype._audioService;\n/** @type {?} */\nMediaPlayerComponent.prototype._elementRef;\n}\n\n\nexport type MediaPlayerType = 'video' | 'audio';\n\nexport interface MediaPlayerBuffer {\n    start: number;\n    end: number;\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, Host } from '@angular/core';\nimport { MediaPlayerService } from '../media-player.service';\nexport class MediaPlayerBaseExtensionDirective {\n/**\n * @param {?} mediaPlayerService\n */\nconstructor(public mediaPlayerService: MediaPlayerService) { }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: '[mediaPlayerBaseExtension]' \n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: MediaPlayerService, },\n];\n}\n\nfunction MediaPlayerBaseExtensionDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nMediaPlayerBaseExtensionDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMediaPlayerBaseExtensionDirective.ctorParameters;\n/** @type {?} */\nMediaPlayerBaseExtensionDirective.prototype.mediaPlayerService;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, OnInit, ViewChild, ElementRef, AfterViewInit, OnDestroy } from '@angular/core';\nimport { MediaPlayerBaseExtensionDirective } from '../base-extension.directive';\nimport { Observable } from 'rxjs/Observable';\nimport'rxjs/add/operator/switchMap';\nimport'rxjs/add/operator/takeUntil';\nimport'rxjs/add/observable/fromEvent';\nimport { Subscription } from 'rxjs/Subscription';\nexport class MediaPlayerTimelineExtensionComponent extends MediaPlayerBaseExtensionDirective implements OnInit, AfterViewInit, OnDestroy {\n\n     thumb: ElementRef;\n     timelineRef: ElementRef;\n\n    current: number = 0;\n    position: number = 0;\n    duration: number = 0;\n    buffered: MediaPlayerBuffered[] = [];\n    mouseDown: boolean = false;\n    quietMode: boolean = false;\n    fullscreen: boolean = false;\nprivate _mouseEventSubscription: Subscription;\n\n    scrub = {\n        visible: false,\n        position: 0,\n        time: 0\n    };\n/**\n * @return {?}\n */\nngOnInit(): void {\n\n        // watch for changes to the current time\n        this.mediaPlayerService.durationChangeEvent.subscribe(duration => this.duration = duration);\n        this.mediaPlayerService.quietModeEvent.subscribe(quietMode => this.quietMode = quietMode);\n        this.mediaPlayerService.fullscreenEvent.subscribe(fullscreen => {\n            this.fullscreen = fullscreen;\n            this.scrub.position = 0;\n        });\n\n        this.mediaPlayerService.timeUpdateEvent.subscribe(current => {\n            this.current = current;\n            this.position = (this.current / this.duration) * 100;\n        });\n\n        this.mediaPlayerService.progressEvent.subscribe((buffered: TimeRanges) => {\n            this.buffered = [];\n\n            for (let /** @type {?} */ idx = 0; idx < buffered.length; idx++) {\n                this.buffered.push({ start: (buffered.start(idx) / this.duration) * 100, end: (buffered.end(idx) / this.duration) * 100 });\n            }\n        });\n    }\n/**\n * @return {?}\n */\nngAfterViewInit(): void {\n        let /** @type {?} */ mousedown$ = Observable.fromEvent(this.thumb.nativeElement, 'mousedown');\n        let /** @type {?} */ mousemove$ = Observable.fromEvent(document, 'mousemove');\n        let /** @type {?} */ mouseup$ = Observable.fromEvent(document, 'mouseup');\n\n        this._mouseEventSubscription = mousedown$.switchMap(event => mousemove$.takeUntil(mouseup$)).subscribe(event => {\n            this.scrub.visible = false;\n        });\n    }\n/**\n * @return {?}\n */\nngOnDestroy() {\n        this._mouseEventSubscription.unsubscribe();\n    }\n/**\n * @param {?=} event\n * @return {?}\n */\nupdateScrub(event?: MouseEvent): void {\n\n        let /** @type {?} */ target = /** @type {?} */(( event.target as HTMLElement));\n      \n        if (target.classList.contains('media-progress-bar-thumb')) {\n            return;\n        }\n\n        let /** @type {?} */ timeline = /** @type {?} */(( this.timelineRef.nativeElement as HTMLDivElement));\n        let /** @type {?} */ bounds = timeline.getBoundingClientRect();\n\n        this.scrub.position = event.offsetX;\n        this.scrub.time = (event.offsetX / bounds.width) * this.mediaPlayerService.duration;\n\n        if (this.mouseDown) {\n            this.mediaPlayerService.pause();\n            this.mediaPlayerService.currentTime = this.scrub.time;\n        }\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-media-player-timeline',\n    template: `\n      <p class=\"current-time\">{{ current | duration }}</p>\n\n      <div #timeline class=\"timeline-bar\" (mouseenter)=\"scrub.visible = true; pop.show()\" (mouseleave)=\"scrub.visible = false; pop.hide()\"\n          (mousemove)=\"updateScrub($event)\" (mouseup)=\"updateScrub($event)\" (mousedown)=\"mouseDown = true; $event.preventDefault()\">\n\n          <div class=\"buffered-bar\" *ngFor=\"let buffer of buffered\" [style.left.%]=\"buffer.start\" [style.width.%]=\"buffer.end - buffer.start\"></div>\n\n          <div class=\"media-progress-bar\" [style.width.%]=\"position\">\n              <div #progressThumb class=\"media-progress-bar-thumb\" (mouseenter)=\"scrub.visible = false; pop.hide(); $event.stopPropagation()\"\n                  (mouseleave)=\"scrub.visible = true; pop.show(); $event.stopPropagation()\"></div>\n          </div>\n\n          <div class=\"scrub-handle\" [class.scrub-handle-hidden]=\"!scrub.visible\" [style.left.px]=\"scrub.position\" [tooltip]=\"popTemplate\" placement=\"top\" triggers=\"\" #pop=\"bs-tooltip\"\n              container=\"body\" tooltipPopupDelay=\"100\" [isDisabled]=\"duration === 0\"></div>\n      </div>\n\n      <p class=\"duration-time\">{{ duration | duration }}</p>\n\n      <ng-template #popTemplate>\n          <span>{{ scrub.time | duration }}</span>\n      </ng-template>\n    `,\n    host: {\n        '(document:mouseup)': 'mouseDown = false',\n        '[class.quiet]': 'quietMode || fullscreen'\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'thumb': [{ type: ViewChild, args: ['progressThumb', ] },],\n'timelineRef': [{ type: ViewChild, args: ['timeline', ] },],\n};\n}\n\nfunction MediaPlayerTimelineExtensionComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nMediaPlayerTimelineExtensionComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMediaPlayerTimelineExtensionComponent.ctorParameters;\n/** @type {?} */\nMediaPlayerTimelineExtensionComponent.propDecorators;\n/** @type {?} */\nMediaPlayerTimelineExtensionComponent.prototype.thumb;\n/** @type {?} */\nMediaPlayerTimelineExtensionComponent.prototype.timelineRef;\n/** @type {?} */\nMediaPlayerTimelineExtensionComponent.prototype.current;\n/** @type {?} */\nMediaPlayerTimelineExtensionComponent.prototype.position;\n/** @type {?} */\nMediaPlayerTimelineExtensionComponent.prototype.duration;\n/** @type {?} */\nMediaPlayerTimelineExtensionComponent.prototype.buffered;\n/** @type {?} */\nMediaPlayerTimelineExtensionComponent.prototype.mouseDown;\n/** @type {?} */\nMediaPlayerTimelineExtensionComponent.prototype.quietMode;\n/** @type {?} */\nMediaPlayerTimelineExtensionComponent.prototype.fullscreen;\n/** @type {?} */\nMediaPlayerTimelineExtensionComponent.prototype._mouseEventSubscription;\n/** @type {?} */\nMediaPlayerTimelineExtensionComponent.prototype.scrub;\n}\n\n\nexport interface MediaPlayerBuffered {\n    start: number;\n    end: number;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, OnInit, HostListener, ElementRef, ViewChild } from '@angular/core';\nimport { MediaPlayerBaseExtensionDirective } from '../base-extension.directive';\nimport { Observable } from 'rxjs/Observable';\nimport'rxjs/add/observable/timer';\nexport class MediaPlayerControlsExtensionComponent extends MediaPlayerBaseExtensionDirective implements OnInit {\n\n    playing: boolean;\n    quietMode: boolean;\n    fullscreen: boolean = false;\n    volumeActive: boolean = false;\n    volumeDragging: boolean = false;\n\n     volumeIcon: ElementRef;\n     volumeSlider: ElementRef;\n     volumeContainer: ElementRef;\nprivate _volume: number = 50;\nprivate _previousVolume = 50;\n/**\n * @return {?}\n */\nget volume(): number {\n        return this._volume;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset volume(value: number) {\n\n        if (value === 0 && this._volume !== 0) {\n            this._previousVolume = this._volume;\n        }\n        \n        this._volume = Math.min(Math.max(value, 0), 100);\n        this.mediaPlayerService.volume = this._volume / 100;\n    }\n/**\n * @return {?}\n */\nngOnInit(): void {\n        this.mediaPlayerService.playEvent.subscribe(_ => this.playing = true);\n        this.mediaPlayerService.pauseEvent.subscribe(_ => this.playing = false);\n        this.mediaPlayerService.quietModeEvent.subscribe(quietMode => this.quietMode = quietMode);\n        this.mediaPlayerService.volumeChangeEvent.subscribe(volume => this.volume = volume * 100);\n        this.mediaPlayerService.initEvent.debounceTime(1).filter(init => init === true).subscribe(() => this.volume = this.mediaPlayerService.volume * 100);\n        this.mediaPlayerService.fullscreenEvent.subscribe(fullscreen => this.fullscreen = fullscreen);\n\n        let /** @type {?} */ mouseenter$ = Observable.fromEvent(this.volumeIcon.nativeElement, 'mouseenter');\n        let /** @type {?} */ mouseenterContainer$ = Observable.fromEvent(this.volumeContainer.nativeElement, 'mouseenter');\n        let /** @type {?} */ mouseleaveContainer$ = Observable.fromEvent(this.volumeContainer.nativeElement, 'mouseleave');\n\n        mouseenter$.subscribe(() => this.volumeActive = true);\n        mouseleaveContainer$.switchMap(() => Observable.timer(1500).takeUntil(mouseenterContainer$)).subscribe(() => this.volumeActive = false);\n    }\n/**\n * @return {?}\n */\ntoggleMute(): void {\n        if (this.volume === 0) {\n            this.volume = this._previousVolume;\n        } else {\n            this.volume = 0;\n        }\n    }\n/**\n * @return {?}\n */\ntogglePlay(): void {\n        if (this.playing) {\n            this.mediaPlayerService.pause();\n        } else {\n            this.mediaPlayerService.play();\n        }\n    }\n/**\n * @return {?}\n */\nsetFullscreen(): void {\n        this.mediaPlayerService.toggleFullscreen();\n    }\n/**\n * @return {?}\n */\ngoToStart(): void {\n        this.mediaPlayerService.currentTime = 0;\n    }\n/**\n * @return {?}\n */\ngoToEnd(): void {\n        this.mediaPlayerService.currentTime = this.mediaPlayerService.duration;\n    }\n/**\n * @param {?} event\n * @return {?}\n */\ndragStart(event: MouseEvent): void {\n        event.preventDefault();\n        this.volumeDragging = true;\n\n        let /** @type {?} */ thumb = /** @type {?} */(( event.target as HTMLDivElement));\n        thumb.focus();\n    }\n/**\n * @param {?} event\n * @return {?}\n */\ndragMove(event: MouseEvent): void {\n        if (!this.volumeDragging) {\n            return;\n        }\n\n        event.preventDefault();\n\n        let /** @type {?} */ slider = /** @type {?} */(( this.volumeSlider.nativeElement as HTMLDivElement));\n        let /** @type {?} */ bounds = slider.getBoundingClientRect();\n\n        let /** @type {?} */ x = Math.min(bounds.width, Math.max(0, event.pageX - bounds.left));\n\n        // convert to a percentage\n        this.volume = (x / bounds.width) * 100;\n    }\n/**\n * @return {?}\n */\ndragEnd(): void {\n        this.volumeDragging = false;        \n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-media-player-controls',\n    template: `\n      <div class=\"volume-container\">\n\n          <div class=\"volume-slider-container\" #volumeContainer [class.active]=\"volumeActive\">\n              <div class=\"volume-slider-icon\" #volumeIcon>\n                  <span class=\"hpe-icon\" [class.hpe-volume-mute]=\"volume === 0\" [class.hpe-volume-low]=\"volume > 0 && volume <= 70\" [class.hpe-volume]=\"volume > 70\" [tooltip]=\"muteTooltip\" (click)=\"toggleMute()\"></span>\n              </div>\n        \n              <div class=\"volume-slider-node\">\n                  <div class=\"volume-slider\" #volumeSlider>\n                      <div class=\"volume-track-lower\" [style.width.%]=\"volume\"></div>\n                      <div class=\"volume-slider-thumb\" (mousedown)=\"dragStart($event)\" [style.left.%]=\"volume\" tabindex=\"0\" (keydown.ArrowRight)=\"volume = volume + 10\" (keydown.ArrowLeft)=\"volume = volume - 10\"></div>\n                  </div>\n              </div>\n          </div>\n      </div>\n\n      <div class=\"spacer\"></div>\n\n      <svg viewBox=\"0 0 51.5 64\" width=\"14\" height=\"17\" class=\"control-button\" (click)=\"goToStart()\">\n          <rect x=\"0\" y=\"0\" width=\"7.5\" height=\"64\" />\n          <polygon points=\"51.5,64 51.5,0 7.4,32 \" />\n      </svg>\n\n      <svg viewBox=\"0 0 45 64\" width=\"20\" height=\"29\" class=\"control-button\" *ngIf=\"!playing\" (click)=\"togglePlay()\">\n          <polygon points=\"0.4,0 0.4,64 44.6,32\" />\n      </svg>\n\n      <svg viewBox=\"0 0 43 56.9\" class=\"control-button\" width=\"20\" height=\"29\" *ngIf=\"playing\" (click)=\"togglePlay()\">\n          <rect y=\"0.1\" width=\"15.7\" height=\"56.9\" />\n          <rect x=\"27.3\" y=\"0.1\" width=\"15.7\" height=\"56.9\" />\n      </svg>\n\n      <svg viewBox=\"0 0 51.5 64\" width=\"14\" height=\"17\" class=\"control-button\" (click)=\"goToEnd()\">\n          <rect x=\"44.1\" y=\"0\" width=\"7.5\" height=\"64\" />\n          <polygon points=\"0,64 0,0 44.1,32 \" />\n      </svg>\n\n      <div class=\"spacer\"></div>\n\n      <span class=\"hpe-icon\" *ngIf=\"mediaPlayerService.type !== 'audio'\" [class.hpe-expand]=\"!mediaPlayerService.fullscreen\" [class.hpe-contract]=\"mediaPlayerService.fullscreen\"\n          (click)=\"setFullscreen()\"></span>\n\n      <ng-template #muteTooltip>{{ volume === 0 ? 'Unmute' : 'Mute' }}</ng-template>\n    `,\n    host: {\n        '[class.quiet]': 'quietMode || fullscreen'\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'volumeIcon': [{ type: ViewChild, args: ['volumeIcon', ] },],\n'volumeSlider': [{ type: ViewChild, args: ['volumeSlider', ] },],\n'volumeContainer': [{ type: ViewChild, args: ['volumeContainer', ] },],\n'dragMove': [{ type: HostListener, args: ['document:mousemove', ['$event'], ] },],\n'dragEnd': [{ type: HostListener, args: ['document:mouseup', ] },],\n};\n}\n\nfunction MediaPlayerControlsExtensionComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nMediaPlayerControlsExtensionComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMediaPlayerControlsExtensionComponent.ctorParameters;\n/** @type {?} */\nMediaPlayerControlsExtensionComponent.propDecorators;\n/** @type {?} */\nMediaPlayerControlsExtensionComponent.prototype.playing;\n/** @type {?} */\nMediaPlayerControlsExtensionComponent.prototype.quietMode;\n/** @type {?} */\nMediaPlayerControlsExtensionComponent.prototype.fullscreen;\n/** @type {?} */\nMediaPlayerControlsExtensionComponent.prototype.volumeActive;\n/** @type {?} */\nMediaPlayerControlsExtensionComponent.prototype.volumeDragging;\n/** @type {?} */\nMediaPlayerControlsExtensionComponent.prototype.volumeIcon;\n/** @type {?} */\nMediaPlayerControlsExtensionComponent.prototype.volumeSlider;\n/** @type {?} */\nMediaPlayerControlsExtensionComponent.prototype.volumeContainer;\n/** @type {?} */\nMediaPlayerControlsExtensionComponent.prototype._volume;\n/** @type {?} */\nMediaPlayerControlsExtensionComponent.prototype._previousVolume;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nexport class DurationPipe implements PipeTransform {\n/**\n * @param {?} seconds\n * @return {?}\n */\ntransform(seconds: number): any {\n\n        let /** @type {?} */ minutes = Math.floor(seconds / 60);\n        let /** @type {?} */ hours = Math.floor(minutes / 60);\n        let /** @type {?} */ days = Math.floor(hours / 24);\n\n        hours = hours - (days * 24);\n        minutes = minutes - (days * 24 * 60) - (hours * 60);\n        seconds = Math.floor(seconds - (days * 24 * 60 * 60) - (hours * 60 * 60) - (minutes * 60));\n\n        if (hours > 0) {\n            return `${this.pad(hours)}:${this.pad(minutes)}:${this.pad(seconds)}`;\n        } else {\n            return `${this.pad(minutes)}:${this.pad(seconds)}`;\n        }\n    }\n/**\n * @param {?} value\n * @return {?}\n */\npad(value: number): string {\n        if (value < 10) {\n            return `0${value}`;\n        }\n\n        return value.toString();\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Pipe, args: [{\n    name: 'duration'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction DurationPipe_tsickle_Closure_declarations() {\n/** @type {?} */\nDurationPipe.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDurationPipe.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\n\nimport { DurationPipe } from './duration.pipe';\nexport class DurationPipeModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    exports: [DurationPipe],\n    declarations: [DurationPipe]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction DurationPipeModule_tsickle_Closure_declarations() {\n/** @type {?} */\nDurationPipeModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDurationPipeModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nexport class FileSizePipe implements PipeTransform {\n/**\n * @param {?} value\n * @return {?}\n */\ntransform(value: number): any {\n\n        // allow for async values\n        if (!value) {\n            return value;\n        }\n        \n        let /** @type {?} */ units = ['B', 'KB', 'MB', 'GB', 'TB'];\n\n        // calculate the which unit bracket the values should be a part of\n        let /** @type {?} */ idx = Math.floor(Math.log(value) / Math.log(1024));\n        let /** @type {?} */ formattedValue = value / Math.pow(1024, idx);\n        \n        return `${formattedValue.toFixed(2)} ${units[idx]}`;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Pipe, args: [{\n    name: 'fileSize'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction FileSizePipe_tsickle_Closure_declarations() {\n/** @type {?} */\nFileSizePipe.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFileSizePipe.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\n\nimport { FileSizePipe } from './file-size.pipe';\nexport class FileSizePipeModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    exports: [FileSizePipe],\n    declarations: [FileSizePipe]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction FileSizePipeModule_tsickle_Closure_declarations() {\n/** @type {?} */\nFileSizePipeModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFileSizePipeModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { MediaPlayerComponent } from './media-player.component';\nimport { MediaPlayerTimelineExtensionComponent } from './extensions/timeline/timeline.component';\nimport { MediaPlayerBaseExtensionDirective } from './extensions/base-extension.directive';\nimport { MediaPlayerControlsExtensionComponent } from './extensions/controls/controls.component';\nimport { FrameExtractionModule } from '../../services/frame-extraction/frame-extraction.module';\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\nimport { AudioServiceModule } from '../../services/audio/index';\nimport { DurationPipeModule } from '../../pipes/duration/index';\nimport { FileSizePipeModule } from '../../pipes/file-size/index';\nimport { MediaPlayerService } from './media-player.service';\n\nconst /** @type {?} */ DECLARATIONS = [\n    MediaPlayerComponent,\n    MediaPlayerTimelineExtensionComponent,\n    MediaPlayerBaseExtensionDirective,\n    MediaPlayerControlsExtensionComponent\n];\nexport class MediaPlayerModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        CommonModule,\n        FrameExtractionModule,\n        TooltipModule.forRoot(),\n        AudioServiceModule,\n        DurationPipeModule,\n        FileSizePipeModule\n    ],\n    exports: DECLARATIONS,\n    declarations: DECLARATIONS,\n    providers: [MediaPlayerService]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction MediaPlayerModule_tsickle_Closure_declarations() {\n/** @type {?} */\nMediaPlayerModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMediaPlayerModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive } from '@angular/core';\nexport class VirtualScrollLoadingDirective { static decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{ \n    selector: '[uxVirtualScrollLoading]' \n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction VirtualScrollLoadingDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nVirtualScrollLoadingDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nVirtualScrollLoadingDirective.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive } from '@angular/core';\nexport class VirtualScrollLoadButtonDirective { static decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: '[uxVirtualScrollLoadButton]' \n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction VirtualScrollLoadButtonDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nVirtualScrollLoadButtonDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nVirtualScrollLoadButtonDirective.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive } from '@angular/core';\nexport class VirtualScrollCellDirective {\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{ \n    selector: '[uxVirtualScrollCell]' \n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction VirtualScrollCellDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nVirtualScrollCellDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nVirtualScrollCellDirective.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, OnInit, EventEmitter, Output, Input, HostListener, ElementRef, Renderer2, AfterContentInit, ContentChild, TemplateRef, OnDestroy, SimpleChanges } from '@angular/core';\nimport { ResizeService } from '../../directives/resize/index';\nimport { VirtualScrollLoadingDirective } from './directives/virtual-scroll-loading.directive';\nimport { VirtualScrollLoadButtonDirective } from './directives/virtual-scroll-load-button.directive';\nimport { VirtualScrollCellDirective } from './directives/virtual-scroll-cell.directive';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { Observable } from 'rxjs/Observable';\nimport { Subscription } from 'rxjs/Subscription';\nexport class VirtualScrollComponent implements OnInit, AfterContentInit, OnDestroy {\n\n     collection: Observable<any[]> = Observable.create();\n     cellHeight: number;\n     loadOnScroll: boolean = true;\n\n     loading: EventEmitter<number> = new EventEmitter<number>();\n\n     cellTemplate: TemplateRef<any>;\n     loadingIndicatorTemplate: TemplateRef<any>;\n     loadButtonTemplate: TemplateRef<any>;\n\n    cells: BehaviorSubject<any[]> = new BehaviorSubject([]);\n    scrollTop: number = 0;\n    isLoading: boolean = false;\n    pageNumber: number = 0;\n    data: any[] = [];\n    loadingComplete: boolean = false;\nprivate _subscription: Subscription;\nprivate _height: number;\n/**\n * @param {?} _elementRef\n * @param {?} resizeService\n * @param {?} renderer\n */\nconstructor(private _elementRef: ElementRef, resizeService: ResizeService, renderer: Renderer2) {\n\n        // watch for any future changes to size\n        resizeService.addResizeListener(_elementRef.nativeElement, renderer).subscribe(event => this._height = event.height);\n    }\n/**\n * @return {?}\n */\nngOnInit() {\n\n        if (!this.cellHeight) {\n            throw new Error('Virtual Scroll Component requires \"cellHeight\" property to be defined.');\n        }\n\n        // subscribe to the collection\n        this.setupObservable();\n\n        // load the first page of data\n        this.loadNextPage();\n    }\n/**\n * @return {?}\n */\nngAfterContentInit(): void {\n        // re-render cells now that we can display any loading indicator or loading button\n        this.renderCells();\n    }\n/**\n * @param {?} changes\n * @return {?}\n */\nngOnChanges(changes: SimpleChanges): void {\n        if (changes.collection && changes.collection.currentValue !== changes.collection.previousValue && !changes.collection.isFirstChange()) {\n            this.setupObservable();\n            this.reset();\n        }\n    }\n/**\n * @return {?}\n */\nngOnDestroy(): void {\n        this._subscription.unsubscribe();\n    }\n/**\n * @return {?}\n */\nsetupObservable(): void {\n\n        // if there is a current subscription, unsubscribe\n        if (this._subscription && this._subscription.unsubscribe) {\n            this._subscription.unsubscribe();\n        }\n\n        this._subscription = this.collection.subscribe(collection => {\n            this.data.push(...collection);\n            this.renderCells();\n            this.isLoading = false;\n        }, null, () => {\n            this.loadingComplete = true;\n        });\n    }\n/**\n * @return {?}\n */\nrenderCells(): void {\n        this.cells.next(this.getVisibleCells());\n\n        if (this.loadOnScroll && !this.isLoading && !this.loadingComplete) {\n            const /** @type {?} */ remainingScroll = this._elementRef.nativeElement.scrollHeight - (this._elementRef.nativeElement.scrollTop + this._elementRef.nativeElement.clientHeight);\n\n            // if the current cells take up less than the height of the component then load the next page\n            if (remainingScroll <= this._elementRef.nativeElement.clientHeight) {\n                this.loadNextPage();\n            }\n        }\n    }\n/**\n * @return {?}\n */\ngetVisibleCells(): any[] {\n\n        // store the initial element height\n        if (!this._height) {\n            this._height = this._elementRef.nativeElement.offsetHeight;\n        }\n\n        // perform some calculations\n        const /** @type {?} */ scrollTop = this._elementRef.nativeElement.scrollTop;\n        const /** @type {?} */ startCell = Math.floor(scrollTop / this.cellHeight);\n        const /** @type {?} */ endCell = Math.ceil(this._height / this.cellHeight) + 1;\n\n        // update the scroll position\n        this.scrollTop = scrollTop - (scrollTop % this.cellHeight);\n\n        // return a sublist of items visible on the screen\n        return this.data.slice(startCell, startCell + endCell);\n    }\n/**\n * @return {?}\n */\ngetTotalHeight(): number {\n        return this.cellHeight * this.data.length;\n    }\n/**\n * @return {?}\n */\nloadNextPage(): void {\n        this.isLoading = true;\n        this.loading.next(this.pageNumber);\n        this.pageNumber++;\n    }\n/**\n * @return {?}\n */\nreset(): void {\n\n        // reset all values\n        this.scrollTop = 0;\n        this.data = [];\n        this._height = undefined;\n        this.pageNumber = 0;\n        this.loadingComplete = false;\n\n        // set scroll position\n        this._elementRef.nativeElement.scrollTop = 0;\n\n        // clear the current cells\n        this.renderCells();\n\n        // reload first page\n        this.loadNextPage();\n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-virtual-scroll',\n    template: `\n      <div class=\"virtual-scroll-content-height\" [style.height.px]=\"getTotalHeight()\"></div>\n      <div class=\"virtual-scroll-content\" [style.transform]=\"'translateY(' + scrollTop + 'px)'\">\n\n          <!-- Virtually Render Cells -->\n          <ng-container *ngFor=\"let cell of cells | async\">\n              <ng-container *ngTemplateOutlet=\"cellTemplate; context: { cell: cell }\"></ng-container>\n          </ng-container>\n\n          <!-- Loading Indicator -->\n          <ng-container *ngIf=\"loadingIndicatorTemplate && isLoading\" [ngTemplateOutlet]=\"loadingIndicatorTemplate\"></ng-container>\n\n          <!-- Loading Button -->\n          <div class=\"virtual-scroll-load-button\" *ngIf=\"loadButtonTemplate && !loadOnScroll && !loadingComplete && !isLoading\" (click)=\"loadNextPage()\">\n              <ng-container *ngTemplateOutlet=\"loadButtonTemplate\"></ng-container>\n          </div>\n    \n      </div>\n    `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: ResizeService, },\n{type: Renderer2, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'collection': [{ type: Input },],\n'cellHeight': [{ type: Input },],\n'loadOnScroll': [{ type: Input },],\n'loading': [{ type: Output },],\n'cellTemplate': [{ type: ContentChild, args: [VirtualScrollCellDirective, { read: TemplateRef }, ] },],\n'loadingIndicatorTemplate': [{ type: ContentChild, args: [VirtualScrollLoadingDirective, { read: TemplateRef }, ] },],\n'loadButtonTemplate': [{ type: ContentChild, args: [VirtualScrollLoadButtonDirective, { read: TemplateRef }, ] },],\n'renderCells': [{ type: HostListener, args: ['scroll', ] },],\n};\n}\n\nfunction VirtualScrollComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nVirtualScrollComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nVirtualScrollComponent.ctorParameters;\n/** @type {?} */\nVirtualScrollComponent.propDecorators;\n/** @type {?} */\nVirtualScrollComponent.prototype.collection;\n/** @type {?} */\nVirtualScrollComponent.prototype.cellHeight;\n/** @type {?} */\nVirtualScrollComponent.prototype.loadOnScroll;\n/** @type {?} */\nVirtualScrollComponent.prototype.loading;\n/** @type {?} */\nVirtualScrollComponent.prototype.cellTemplate;\n/** @type {?} */\nVirtualScrollComponent.prototype.loadingIndicatorTemplate;\n/** @type {?} */\nVirtualScrollComponent.prototype.loadButtonTemplate;\n/** @type {?} */\nVirtualScrollComponent.prototype.cells;\n/** @type {?} */\nVirtualScrollComponent.prototype.scrollTop;\n/** @type {?} */\nVirtualScrollComponent.prototype.isLoading;\n/** @type {?} */\nVirtualScrollComponent.prototype.pageNumber;\n/** @type {?} */\nVirtualScrollComponent.prototype.data;\n/** @type {?} */\nVirtualScrollComponent.prototype.loadingComplete;\n/** @type {?} */\nVirtualScrollComponent.prototype._subscription;\n/** @type {?} */\nVirtualScrollComponent.prototype._height;\n/** @type {?} */\nVirtualScrollComponent.prototype._elementRef;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { VirtualScrollComponent } from './virtual-scroll.component';\nimport { ResizeModule } from '../../directives/resize/index';\nimport { VirtualScrollLoadingDirective } from './directives/virtual-scroll-loading.directive';\nimport { VirtualScrollLoadButtonDirective } from './directives/virtual-scroll-load-button.directive';\nimport { VirtualScrollCellDirective } from './directives/virtual-scroll-cell.directive';\n\nconst /** @type {?} */ DECLARATIONS = [\n    VirtualScrollComponent,\n    VirtualScrollLoadingDirective,\n    VirtualScrollLoadButtonDirective,\n    VirtualScrollCellDirective\n];\nexport class VirtualScrollModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        CommonModule,\n        ResizeModule\n    ],\n    exports: DECLARATIONS,\n    declarations: DECLARATIONS\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction VirtualScrollModule_tsickle_Closure_declarations() {\n/** @type {?} */\nVirtualScrollModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nVirtualScrollModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ElementRef, OnInit, Renderer2, Input, Output, EventEmitter } from '@angular/core';\nexport class FixedHeaderTableDirective implements OnInit {\n\n   tableHeight: number | string;\n   tablePaging: EventEmitter<number> = new EventEmitter<number>();\nprivate _tableHead: HTMLElement;\nprivate _tableBody: HTMLElement;\n/**\n * @param {?} _elementRef\n * @param {?} _renderer\n */\nconstructor(private _elementRef: ElementRef,\nprivate _renderer: Renderer2) { }\n/**\n * @return {?}\n */\nngOnInit(): void {\n\n    // add class to the table\n    this._renderer.addClass(this._elementRef.nativeElement, 'ux-fixed-header-table');\n\n    // locate the important elements\n    this._tableHead = this._elementRef.nativeElement.querySelector('thead');\n    this._tableBody = this._elementRef.nativeElement.querySelector('tbody');\n\n    // bind to scroll events on the table body\n    this._renderer.listen(this._tableBody, 'scroll', this.onScroll.bind(this));\n\n    // resize the table header to account for scrollbar\n    this.setLayout();\n\n    // trigger the loading of the first page\n    this.tablePaging.emit();\n  }\n/**\n * Get the table element\n * Primarily used by column width directive\n * @return {?}\n */\ngetTable(): HTMLTableElement {\n    return this._elementRef.nativeElement;\n  }\n/**\n * Handle scroll events\n * @param {?} event\n * @return {?}\n */\nprivate onScroll(event: MouseEvent): void {\n\n    // determine if we are scrolled to the bottom and if so load the next page\n    if (this._tableBody.scrollTop === (this._tableBody.scrollHeight - this._tableBody.offsetHeight)) {\n      this.tablePaging.emit();\n    }\n  }\n/**\n * Update the size of the table header to account for the scrollbar.\n * This is important to keep the columns aligned\n * @return {?}\n */\nprivate setLayout(): void {\n\n    // calculate the size of the scrollbar\n    const /** @type {?} */ scrollbar = this._tableBody.offsetWidth - this._tableBody.clientWidth;\n\n    // add padding to the header to account for this\n    this._renderer.setStyle(this._tableHead, 'padding-right', scrollbar + 'px');\n\n    // set the desired height of the table body\n    this._renderer.setStyle(this._tableBody, 'height', typeof this.tableHeight === 'number' ? `${this.tableHeight}px` : this.tableHeight);\n  }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[uxFixedHeaderTable]'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Renderer2, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'tableHeight': [{ type: Input },],\n'tablePaging': [{ type: Output },],\n};\n}\n\nfunction FixedHeaderTableDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nFixedHeaderTableDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFixedHeaderTableDirective.ctorParameters;\n/** @type {?} */\nFixedHeaderTableDirective.propDecorators;\n/** @type {?} */\nFixedHeaderTableDirective.prototype.tableHeight;\n/** @type {?} */\nFixedHeaderTableDirective.prototype.tablePaging;\n/** @type {?} */\nFixedHeaderTableDirective.prototype._tableHead;\n/** @type {?} */\nFixedHeaderTableDirective.prototype._tableBody;\n/** @type {?} */\nFixedHeaderTableDirective.prototype._elementRef;\n/** @type {?} */\nFixedHeaderTableDirective.prototype._renderer;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\n\nimport { FixedHeaderTableDirective } from './fixed-header-table.directive';\nexport class FixedHeaderTableModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    exports: [FixedHeaderTableDirective],\n    declarations: [FixedHeaderTableDirective]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction FixedHeaderTableModule_tsickle_Closure_declarations() {\n/** @type {?} */\nFixedHeaderTableModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFixedHeaderTableModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nexport class HelpCenterService {\n\n    items: BehaviorSubject<HelpCenterItem[]> = new BehaviorSubject<HelpCenterItem[]>([]);\n/**\n * @param {?} item\n * @return {?}\n */\nregisterItem(item: HelpCenterItem): void {\n\n        // get the current items\n        let /** @type {?} */ items = this.items.getValue();\n\n        // add the new item to the list\n        items.push(item);\n\n        // update the observable\n        this.items.next(items);\n    }\n/**\n * @param {?} item\n * @return {?}\n */\nunregisterItem(item: HelpCenterItem): void {\n\n        // get the current items\n        let /** @type {?} */ items = this.items.getValue();\n\n        // remove the item being unregistered\n        items = items.filter(itm => itm !== item);\n\n        // update the observable\n        this.items.next(items);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction HelpCenterService_tsickle_Closure_declarations() {\n/** @type {?} */\nHelpCenterService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nHelpCenterService.ctorParameters;\n/** @type {?} */\nHelpCenterService.prototype.items;\n}\n\n\nexport interface HelpCenterItem {\n    icon?: string;\n    title: string;\n    select?: () => void;\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, Input, OnInit, OnDestroy } from '@angular/core';\nimport { HelpCenterService, HelpCenterItem } from './help-center.service';\nexport class HelpCenterItemDirective implements OnInit, OnDestroy {\n\n     uxHelpCenterItem: HelpCenterItem;\n/**\n * @param {?} _helpCenterService\n */\nconstructor(private _helpCenterService: HelpCenterService) { }\n/**\n * @return {?}\n */\nngOnInit(): void {\n\n        // register the item in the service\n        this._helpCenterService.registerItem(this.uxHelpCenterItem);\n    }\n/**\n * @return {?}\n */\nngOnDestroy(): void {\n        // remove this item when it is destroyed\n        this._helpCenterService.unregisterItem(this.uxHelpCenterItem);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{ selector: '[uxHelpCenterItem]' }, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: HelpCenterService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'uxHelpCenterItem': [{ type: Input },],\n};\n}\n\nfunction HelpCenterItemDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nHelpCenterItemDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nHelpCenterItemDirective.ctorParameters;\n/** @type {?} */\nHelpCenterItemDirective.propDecorators;\n/** @type {?} */\nHelpCenterItemDirective.prototype.uxHelpCenterItem;\n/** @type {?} */\nHelpCenterItemDirective.prototype._helpCenterService;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { HelpCenterItemDirective } from './help-center-item.directive';\nimport { HelpCenterService } from './help-center.service';\nexport class HelpCenterModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [],\n    exports: [HelpCenterItemDirective],\n    declarations: [HelpCenterItemDirective],\n    providers: [HelpCenterService],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction HelpCenterModule_tsickle_Closure_declarations() {\n/** @type {?} */\nHelpCenterModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nHelpCenterModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs/Subject';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { HoverActionDirective } from './hover-action.directive';\nimport { HoverActionContainerDirective } from './hover-action-container.directive';\nexport class HoverActionService {\n\n    active: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\nprivate _container: HoverActionContainerDirective;\nprivate _focused: boolean = false;\nprivate _hovered: boolean = false;\nprivate _actions: HoverActionDirective[] = [];\n/**\n * @param {?} action\n * @return {?}\n */\nregister(action: HoverActionDirective): void {\n        this._actions.push(action);\n    }\n/**\n * @param {?} action\n * @return {?}\n */\nunregister(action: HoverActionDirective): void {\n        this._actions = this._actions.filter(actn => actn !== action);\n    }\n/**\n * @param {?} container\n * @return {?}\n */\nsetContainer(container: HoverActionContainerDirective): void {\n        this._container = container;\n    }\n/**\n * @param {?} focus\n * @return {?}\n */\nsetFocusState(focus: boolean): void {\n        this._focused = focus;\n        this.updateVisibility();\n    }\n/**\n * @param {?} hover\n * @return {?}\n */\nsetHoverState(hover: boolean): void {\n        this._hovered = hover;\n        this.updateVisibility();\n    }\n/**\n * @return {?}\n */\nnext(): void {\n\n        // if container has focus then focus the first hover action\n        if (this.containerHasFocus()) {\n            this.focusActionAtIndex(0);\n            return this.updateVisibility();\n        }\n\n        // if a hover action has focus then focus the next action\n        if (this.actionHasFocus()) {\n            let /** @type {?} */ index = this.getFocusedActionIndex() + 1;\n            this.focusActionAtIndex(index);\n            this.updateVisibility();\n        }\n    }\n/**\n * @return {?}\n */\nprevious(): void {\n        // if a hover action has focus then focus the previous action\n        if (this.actionHasFocus()) {\n            let /** @type {?} */ index = this.getFocusedActionIndex() - 1;\n\n            if (index >= 0) {\n                this.focusActionAtIndex(index);\n            } else {\n                this._container.focus();\n            }\n        }\n\n        this.updateVisibility();\n    }\n/**\n * @return {?}\n */\nupdateVisibility(): void {\n        this.active.next(this._focused || this._hovered || this.actionHasFocus());\n    }\n/**\n * @param {?} index\n * @return {?}\n */\nprivate focusActionAtIndex(index: number): void {\n        if (index >= 0 && index < this._actions.length) {\n            this._actions[index].focus();\n        }\n    }\n/**\n * @return {?}\n */\nprivate getFocusedActionIndex(): number {\n        return this._actions.findIndex(action => action === this.getFocusedAction());\n    }\n/**\n * @return {?}\n */\nprivate containerHasFocus(): boolean {\n        return this._focused;\n    }\n/**\n * @return {?}\n */\nprivate actionHasFocus(): boolean {\n        return !!this.getFocusedAction();\n    }\n/**\n * @return {?}\n */\nprivate getFocusedAction(): HoverActionDirective {\n        return this._actions.find(action => action.focused);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction HoverActionService_tsickle_Closure_declarations() {\n/** @type {?} */\nHoverActionService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nHoverActionService.ctorParameters;\n/** @type {?} */\nHoverActionService.prototype.active;\n/** @type {?} */\nHoverActionService.prototype._container;\n/** @type {?} */\nHoverActionService.prototype._focused;\n/** @type {?} */\nHoverActionService.prototype._hovered;\n/** @type {?} */\nHoverActionService.prototype._actions;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ContentChildren, QueryList, HostListener, ElementRef, OnDestroy, Input } from '@angular/core';\nimport { HoverActionDirective } from './hover-action.directive';\nimport { HoverActionService } from './hover-action.service';\nimport { Subscription } from 'rxjs/Subscription';\nexport class HoverActionContainerDirective implements OnDestroy {\n\n     tabindex: number = 0;\n    active: boolean = false;\nprivate active$: Subscription;\n/**\n * @param {?} _elementRef\n * @param {?} _hoverActionService\n */\nconstructor(private _elementRef: ElementRef,\nprivate _hoverActionService: HoverActionService) {\n        // register the container element with the service\n        this._hoverActionService.setContainer(this);\n        \n        // apply a class based on the active state of the container and it's actions\n        this.active$ = this._hoverActionService.active.subscribe(active => this.active = active);\n    }\n/**\n * @return {?}\n */\nngOnDestroy(): void {\n        this.active$.unsubscribe();\n    }\n/**\n * @return {?}\n */\nfocus(): void {\n        this._elementRef.nativeElement.focus();\n    }\n/**\n * @return {?}\n */\nonFocus(): void {\n        this._hoverActionService.setFocusState(true);\n    }\n/**\n * @return {?}\n */\nonBlur(): void {\n        this._hoverActionService.setFocusState(false);\n    }\n/**\n * @return {?}\n */\nonHover(): void {\n        this._hoverActionService.setHoverState(true);\n    }\n/**\n * @return {?}\n */\nonLeave(): void {\n        this._hoverActionService.setHoverState(false);\n    }\n/**\n * @return {?}\n */\nnext(): void {\n        this._hoverActionService.next();\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: '[uxHoverActionContainer]',\n    providers: [HoverActionService],\n    host: {\n        '[class.hover-action-container-active]': 'active',\n        '[tabindex]': 'tabindex'\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: HoverActionService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'tabindex': [{ type: Input },],\n'focus': [{ type: HostListener, args: ['click', ] },],\n'onFocus': [{ type: HostListener, args: ['focus', ] },],\n'onBlur': [{ type: HostListener, args: ['blur', ] },],\n'onHover': [{ type: HostListener, args: ['mouseenter', ] },],\n'onLeave': [{ type: HostListener, args: ['mouseleave', ] },],\n'next': [{ type: HostListener, args: ['keydown.arrowright', ] },],\n};\n}\n\nfunction HoverActionContainerDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nHoverActionContainerDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nHoverActionContainerDirective.ctorParameters;\n/** @type {?} */\nHoverActionContainerDirective.propDecorators;\n/** @type {?} */\nHoverActionContainerDirective.prototype.tabindex;\n/** @type {?} */\nHoverActionContainerDirective.prototype.active;\n/** @type {?} */\nHoverActionContainerDirective.prototype.active$;\n/** @type {?} */\nHoverActionContainerDirective.prototype._elementRef;\n/** @type {?} */\nHoverActionContainerDirective.prototype._hoverActionService;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ElementRef, HostListener, OnDestroy, Input } from '@angular/core';\nimport { HoverActionService } from './hover-action.service';\nimport { Subscription } from 'rxjs/Subscription';\nexport class HoverActionDirective implements OnDestroy {\n\n     tabindex: number = 1;\n    active: boolean = false;\n    focused: boolean = false;\nprivate active$: Subscription;\n/**\n * @param {?} _elementRef\n * @param {?} _hoverActionService\n */\nconstructor(private _elementRef: ElementRef,\nprivate _hoverActionService: HoverActionService) {\n\n        // register the action\n        this._hoverActionService.register(this);\n\n        // watch for changes to the activeness of the container\n        this.active$ = this._hoverActionService.active.subscribe(active => this.active = active);\n    }\n/**\n * @return {?}\n */\nngOnDestroy(): void {\n        this._hoverActionService.unregister(this);\n        this.active$.unsubscribe();\n    }\n/**\n * @return {?}\n */\nfocus(): void {\n        this._elementRef.nativeElement.focus();\n    }\n/**\n * @return {?}\n */\nonFocus(): void {\n        this.focused = true;\n        this._hoverActionService.updateVisibility();\n    }\n/**\n * @return {?}\n */\nonBlur(): void {\n        this.focused = false;\n        this._hoverActionService.updateVisibility();\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nprevious(event: MouseEvent): void {\n        event.stopPropagation();        \n        this._hoverActionService.previous();\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nnext(event: MouseEvent): void {\n        event.stopPropagation();\n        this._hoverActionService.next();\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: '[uxHoverAction]',\n    host: {\n        '[class.hover-action-active]': 'active',\n        '[class.hover-action-focused]': 'focused',\n        '[tabindex]': 'tabindex'\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: HoverActionService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'tabindex': [{ type: Input },],\n'onFocus': [{ type: HostListener, args: ['focus', ] },],\n'onBlur': [{ type: HostListener, args: ['blur', ] },],\n'previous': [{ type: HostListener, args: ['keydown.arrowleft', ['$event'], ] },],\n'next': [{ type: HostListener, args: ['keydown.arrowright', ['$event'], ] },],\n};\n}\n\nfunction HoverActionDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nHoverActionDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nHoverActionDirective.ctorParameters;\n/** @type {?} */\nHoverActionDirective.propDecorators;\n/** @type {?} */\nHoverActionDirective.prototype.tabindex;\n/** @type {?} */\nHoverActionDirective.prototype.active;\n/** @type {?} */\nHoverActionDirective.prototype.focused;\n/** @type {?} */\nHoverActionDirective.prototype.active$;\n/** @type {?} */\nHoverActionDirective.prototype._elementRef;\n/** @type {?} */\nHoverActionDirective.prototype._hoverActionService;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { HoverActionContainerDirective } from './hover-action-container.directive';\nimport { HoverActionDirective } from './hover-action.directive';\n\nconst /** @type {?} */ DECLARATIONS = [\n    HoverActionDirective,\n    HoverActionContainerDirective\n];\nexport class HoverActionModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    exports: DECLARATIONS,\n    declarations: DECLARATIONS\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction HoverActionModule_tsickle_Closure_declarations() {\n/** @type {?} */\nHoverActionModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nHoverActionModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, Input, TemplateRef, SimpleChanges, ViewContainerRef, EmbeddedViewRef } from '@angular/core';\nexport class LayoutSwitcherItemDirective {\nprivate _config: LayoutSwitcherItem;\nprivate _embeddedView: EmbeddedViewRef<any>;\n/**\n * @param {?} _templateRef\n * @param {?} _viewContainerRef\n */\nconstructor(private _templateRef: TemplateRef<any>,\nprivate _viewContainerRef: ViewContainerRef) { }\n/**\n * @return {?}\n */\ngetLayout(): TemplateRef<any> {\n        return this._templateRef;\n    }\n/**\n * @return {?}\n */\ngetConfig(): LayoutSwitcherItem {\n        return this._config;\n    }\n/**\n * @return {?}\n */\nactivate(): void {\n        this._embeddedView = this._viewContainerRef.createEmbeddedView(this._templateRef);\n    }\n/**\n * @return {?}\n */\ndeactivate(): void {\n        let /** @type {?} */ index = this._viewContainerRef.indexOf(this._embeddedView);\n        this._viewContainerRef.remove(index);\n        this._embeddedView = null;\n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: '[uxLayoutSwitcherItem]'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: TemplateRef, },\n{type: ViewContainerRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'_config': [{ type: Input, args: ['uxLayoutSwitcherItem', ] },],\n};\n}\n\nfunction LayoutSwitcherItemDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nLayoutSwitcherItemDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nLayoutSwitcherItemDirective.ctorParameters;\n/** @type {?} */\nLayoutSwitcherItemDirective.propDecorators;\n/** @type {?} */\nLayoutSwitcherItemDirective.prototype._config;\n/** @type {?} */\nLayoutSwitcherItemDirective.prototype._embeddedView;\n/** @type {?} */\nLayoutSwitcherItemDirective.prototype._templateRef;\n/** @type {?} */\nLayoutSwitcherItemDirective.prototype._viewContainerRef;\n}\n\n\nexport interface LayoutSwitcherItem {\n    group?: string;\n    minWidth?: number;\n    maxWidth?: number;\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ElementRef, Renderer2, QueryList, ContentChildren, Input, AfterContentInit, ViewContainerRef, OnChanges, SimpleChanges } from '@angular/core';\nimport { ResizeService } from '../resize/index';\nimport { LayoutSwitcherItemDirective } from './layout-switcher-item.directive';\nexport class LayoutSwitcherDirective implements AfterContentInit, OnChanges {\n\n     group: string;\nprivate _layouts: QueryList<LayoutSwitcherItemDirective>;\nprivate _width: number;\nprivate _activeLayout: LayoutSwitcherItemDirective;\n/**\n * @param {?} _elementRef\n * @param {?} resizeService\n * @param {?} renderer\n * @param {?} _viewContainerRef\n */\nconstructor(private _elementRef: ElementRef, resizeService: ResizeService, renderer: Renderer2,\nprivate _viewContainerRef: ViewContainerRef) {\n\n        // watch for changes to the container size\n        resizeService.addResizeListener(_elementRef.nativeElement, renderer).subscribe(event => {\n            this._width = event.width;\n\n            // render the appropriate layout\n            this.updateActiveLayout();\n        });\n    }\n/**\n * @param {?} changes\n * @return {?}\n */\nngOnChanges(changes: SimpleChanges): void {\n\n        // if the active group has changed then render the appropriate layout\n        if (changes.group.currentValue !== changes.group.previousValue) {\n            this.updateActiveLayout();\n        }\n    }\n/**\n * @return {?}\n */\ngetActiveLayout(): LayoutSwitcherItemDirective | null {\n\n        // if there are currently no layouts then do nothing\n        if (!this._layouts) {\n            return null;\n        }\n\n        // otherwise find layouts that match the active group and that meet the constraints\n        return this._layouts.filter(layout => this.group === layout.getConfig().group).find(layout => {\n\n            let /** @type {?} */ minWidth = layout.getConfig().minWidth || 0;\n            let /** @type {?} */ maxWidth = layout.getConfig().maxWidth || Infinity;\n\n            return this._width >= minWidth && this._width < maxWidth;\n        });\n    }\n/**\n * @return {?}\n */\nupdateActiveLayout(): void {\n\n        // get the layout that should be shown\n        let /** @type {?} */ layout = this.getActiveLayout();\n\n        // check if we are currently showing the layout\n        if (this._activeLayout === layout) {\n            return;\n        }\n\n        // remove the current layout\n        if (this._activeLayout) {\n            this._activeLayout.deactivate();\n        }\n\n        // store the new active layout\n        this._activeLayout = layout;\n\n        // if there is an active layout then activate\n        if (this._activeLayout) {\n            this._activeLayout.activate();\n        }\n    }\n/**\n * @return {?}\n */\nngAfterContentInit(): void {\n\n        // store the initial current element width\n        this._width = this._elementRef.nativeElement.offsetWidth;\n\n        // render the appropriate layout - need a delay as Angular doesn't like changes like this in these lifecycle hooks\n        requestAnimationFrame(this.updateActiveLayout.bind(this));\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: '[uxLayoutSwitcher]'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: ResizeService, },\n{type: Renderer2, },\n{type: ViewContainerRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'group': [{ type: Input },],\n'_layouts': [{ type: ContentChildren, args: [LayoutSwitcherItemDirective, ] },],\n};\n}\n\nfunction LayoutSwitcherDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nLayoutSwitcherDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nLayoutSwitcherDirective.ctorParameters;\n/** @type {?} */\nLayoutSwitcherDirective.propDecorators;\n/** @type {?} */\nLayoutSwitcherDirective.prototype.group;\n/** @type {?} */\nLayoutSwitcherDirective.prototype._layouts;\n/** @type {?} */\nLayoutSwitcherDirective.prototype._width;\n/** @type {?} */\nLayoutSwitcherDirective.prototype._activeLayout;\n/** @type {?} */\nLayoutSwitcherDirective.prototype._elementRef;\n/** @type {?} */\nLayoutSwitcherDirective.prototype._viewContainerRef;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { LayoutSwitcherDirective } from './layout-switcher.directive';\nimport { LayoutSwitcherItemDirective } from './layout-switcher-item.directive';\nimport { ResizeModule } from '../resize/index';\n\nconst /** @type {?} */ DECLARATIONS = [\n    LayoutSwitcherDirective,\n    LayoutSwitcherItemDirective\n];\nexport class LayoutSwitcherModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        ResizeModule\n    ],\n    exports: DECLARATIONS,\n    declarations: DECLARATIONS,\n    providers: [],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction LayoutSwitcherModule_tsickle_Closure_declarations() {\n/** @type {?} */\nLayoutSwitcherModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nLayoutSwitcherModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Pipe, Injectable, PipeTransform } from '@angular/core';\nexport class StringFilterPipe implements PipeTransform {\n/**\n * @param {?} items\n * @param {?} value\n * @return {?}\n */\ntransform(items: any[], value: string): any[] {  \n        if (!items) {\n            return [];\n        }\n        return items.filter(it => it.toLowerCase().indexOf(value.toLowerCase()) >= 0);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Pipe, args: [{\n    name: 'stringFilter'\n}, ] },\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction StringFilterPipe_tsickle_Closure_declarations() {\n/** @type {?} */\nStringFilterPipe.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nStringFilterPipe.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { StringFilterPipe } from './string-filter.pipe';\nimport { NgModule } from '@angular/core';\nexport class StringFilterModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    exports: [StringFilterPipe],\n    declarations: [StringFilterPipe]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction StringFilterModule_tsickle_Closure_declarations() {\n/** @type {?} */\nStringFilterModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nStringFilterModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { StorageAdapter } from './storage-adapter';\nexport class CookieAdapter implements StorageAdapter {\n/**\n * @param {?} key\n * @return {?}\n */\ngetItem(key: string): string {\n\n        if (document.cookie) {\n\n            // get all the cookies for this site\n            const /** @type {?} */ cookies = document.cookie.split(';');\n\n            // process the cookies into a from we can easily manage\n            const /** @type {?} */ match = cookies\n                .map(cookie => ({ key: cookie.split('=')[0].trim(), value: cookie.split('=')[1].trim() }))\n                .find(cookie => cookie.key === key);\n\n            return match ? match.value : null;\n        }\n\n        return null;\n    }\n/**\n * @param {?} key\n * @param {?} value\n * @return {?}\n */\nsetItem(key: string, value: string): void {\n        document.cookie = `${key}=${value}; path=/`;\n    }\n/**\n * @param {?} key\n * @return {?}\n */\nremoveItem(key: string): void {\n\n        document.cookie.split(';').forEach(cookie => {\n            const /** @type {?} */ eqPos = cookie.indexOf('=');\n            const /** @type {?} */ name = eqPos > -1 ? cookie.substr(0, eqPos).trim() : cookie;\n\n            if (name === key) {\n                document.cookie = cookie.trim().replace(/=.*/, `=;expires=${new Date().toUTCString()};path=/`);\n            }\n        });\n    }\n/**\n * @return {?}\n */\nclear(): void {\n\n        // call remove item on each cookie\n        document.cookie.split(';').map(cookie => cookie.split('=')[0].trim())\n            .forEach(cookie => this.removeItem(cookie));\n    }\n/**\n * @return {?}\n */\ngetSupported(): StorageAdapter {\n        // cookies are supported in all browsers\n        return this;\n    }\n\n}","import { StorageAdapter } from './storage-adapter';\nimport { CookieAdapter } from './cookie-adapter';\nexport class LocalStorageAdapter implements StorageAdapter {\n/**\n * @param {?} key\n * @return {?}\n */\ngetItem(key: string): string {\n        return localStorage.getItem(key);\n    }\n/**\n * @param {?} key\n * @param {?} value\n * @return {?}\n */\nsetItem(key: string, value: string): void {\n        localStorage.setItem(key, value);\n    }\n/**\n * @param {?} key\n * @return {?}\n */\nremoveItem(key: string): void {\n        localStorage.removeItem(key);\n    }\n/**\n * @return {?}\n */\nclear(): void {\n        localStorage.clear();\n    }\n/**\n * @return {?}\n */\ngetSupported(): StorageAdapter {\n\n        // if local storage variable does not exist fall back to cookies\n        if (!localStorage) {\n            return new CookieAdapter();\n        }\n\n        // try to make a test save to local storage to see if there are any exceptions\n        try {\n            localStorage.setItem('ux-persistent-data-service', 'ux-persistent-data-service');\n            localStorage.removeItem('ux-persistent-data-service');\n\n            return this;\n        } catch ( /** @type {?} */err) {\n            return new CookieAdapter();\n        }\n    }\n\n}","import { StorageAdapter } from './storage-adapter';\nimport { CookieAdapter } from './cookie-adapter';\nexport class SessionStorageAdapter implements StorageAdapter {\n/**\n * @param {?} key\n * @return {?}\n */\ngetItem(key: string): string {\n        return sessionStorage.getItem(key);\n    }\n/**\n * @param {?} key\n * @param {?} value\n * @return {?}\n */\nsetItem(key: string, value: string): void {\n        sessionStorage.setItem(key, value);\n    }\n/**\n * @param {?} key\n * @return {?}\n */\nremoveItem(key: string): void {\n        sessionStorage.removeItem(key);\n    }\n/**\n * @return {?}\n */\nclear(): void {\n        sessionStorage.clear();\n    }\n/**\n * @return {?}\n */\ngetSupported(): StorageAdapter {\n\n        // if local storage variable does not exist fall back to cookies\n        if (!sessionStorage) {\n            return new CookieAdapter();\n        }\n\n        // try to make a test save to local storage to see if there are any exceptions\n        try {\n            sessionStorage.setItem('ux-persistent-data-service', 'ux-persistent-data-service');\n            sessionStorage.removeItem('ux-persistent-data-service');\n\n            return this;\n        } catch ( /** @type {?} */err) {\n            return new CookieAdapter();\n        }\n    }\n\n}","import { Injectable } from '@angular/core';\nimport { StorageAdapter } from './adapters/storage-adapter';\nimport { CookieAdapter } from './adapters/cookie-adapter';\nimport { LocalStorageAdapter } from './adapters/local-storage-adapter';\nimport { SessionStorageAdapter } from './adapters/session-storage-adapter';\nexport class PersistentDataService {\n/**\n * Save the item in some form of persistent storage\n * @param {?} key\n * @param {?} value\n * @param {?=} type\n * @return {?}\n */\nsetItem(key: string, value: string, type: PersistentDataStorageType = PersistentDataStorageType.LocalStorage): void {\n        this.getAdapter(type).setItem(key, value);\n    }\n/**\n * Get a stored value from persistent storage\n * @param {?} key\n * @param {?=} type\n * @return {?}\n */\ngetItem(key: string, type: PersistentDataStorageType = PersistentDataStorageType.LocalStorage): string {\n        return this.getAdapter(type).getItem(key);\n    }\n/**\n * Remove a stored value from persistent storage\n * @param {?} key\n * @param {?=} type\n * @return {?}\n */\nremoveItem(key: string, type: PersistentDataStorageType = PersistentDataStorageType.LocalStorage): void {\n        this.getAdapter(type).removeItem(key);\n    }\n/**\n * Remove a stored value from persistent storage\n * @param {?=} type\n * @return {?}\n */\nclear(type: PersistentDataStorageType = PersistentDataStorageType.LocalStorage): void {\n        this.getAdapter(type).clear();\n    }\n/**\n * Return the appropriate adapter based on the type requested\n * @param {?} type\n * @return {?}\n */\nprivate getAdapter(type: PersistentDataStorageType): StorageAdapter {\n\n        switch (type) {\n\n            case PersistentDataStorageType.Cookie:\n                return new CookieAdapter();\n\n            case PersistentDataStorageType.LocalStorage:\n                const /** @type {?} */ localStorageAdapter = new LocalStorageAdapter();\n                return localStorageAdapter.getSupported();\n\n            case PersistentDataStorageType.SessionStorage:\n                const /** @type {?} */ sessionStorageAdapter = new SessionStorageAdapter();\n                return sessionStorageAdapter.getSupported();\n        }\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction PersistentDataService_tsickle_Closure_declarations() {\n/** @type {?} */\nPersistentDataService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nPersistentDataService.ctorParameters;\n}\n\nexport type PersistentDataStorageType = number;\nexport let PersistentDataStorageType: any = {};\nPersistentDataStorageType.LocalStorage = 0;\nPersistentDataStorageType.Cookie = 1;\nPersistentDataStorageType.SessionStorage = 2;\nPersistentDataStorageType[PersistentDataStorageType.LocalStorage] = \"LocalStorage\";\nPersistentDataStorageType[PersistentDataStorageType.Cookie] = \"Cookie\";\nPersistentDataStorageType[PersistentDataStorageType.SessionStorage] = \"SessionStorage\";\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\n\nimport { PersistentDataService } from './persistent-data.service';\nexport class PersistentDataModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    providers: [PersistentDataService],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction PersistentDataModule_tsickle_Closure_declarations() {\n/** @type {?} */\nPersistentDataModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nPersistentDataModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","\n/**\n * @abstract\n */\nexport abstract class StorageAdapter {\n/**\n * @abstract\n * @param {?} key\n * @return {?}\n */\ngetItem(key: string) {}\n/**\n * @abstract\n * @param {?} key\n * @param {?} value\n * @return {?}\n */\nsetItem(key: string, value: string) {}\n/**\n * @abstract\n * @param {?} key\n * @return {?}\n */\nremoveItem(key: string) {}\n/**\n * @abstract\n * @return {?}\n */\nclear() {}\n/**\n * @abstract\n * @return {?}\n */\ngetSupported() {}\n}","import { Directive, ElementRef, Injector, Input, Output, EventEmitter } from '@angular/core';\nimport { UpgradeComponent } from '@angular/upgrade/static';\nexport class ContactsNg1Component extends UpgradeComponent {\n\n     contacts: Contact[];\n     organization: string;\n     size: 'medium' | 'small';\n     colors: any;\n     maxContacts: number;\n\n     overflowClick: EventEmitter<void> = new EventEmitter<void>();\n/**\n * @param {?} elementRef\n * @param {?} injector\n */\nconstructor(elementRef: ElementRef, injector: Injector) {\n        super('contactGroup', elementRef, injector);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'contact-group'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Injector, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'contacts': [{ type: Input },],\n'organization': [{ type: Input },],\n'size': [{ type: Input },],\n'colors': [{ type: Input },],\n'maxContacts': [{ type: Input },],\n'overflowClick': [{ type: Output },],\n};\n}\n\nfunction ContactsNg1Component_tsickle_Closure_declarations() {\n/** @type {?} */\nContactsNg1Component.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nContactsNg1Component.ctorParameters;\n/** @type {?} */\nContactsNg1Component.propDecorators;\n/** @type {?} */\nContactsNg1Component.prototype.contacts;\n/** @type {?} */\nContactsNg1Component.prototype.organization;\n/** @type {?} */\nContactsNg1Component.prototype.size;\n/** @type {?} */\nContactsNg1Component.prototype.colors;\n/** @type {?} */\nContactsNg1Component.prototype.maxContacts;\n/** @type {?} */\nContactsNg1Component.prototype.overflowClick;\n}\n\n\nexport interface Contact {\n    test: string;\n    status: 'active' | 'passive';\n    customTooltip?: {\n        template: string,\n        tooltipPosition: string;\n        data?: any;\n    };\n}\n\nexport interface Organization {\n    text: string;\n    label: 'external' | 'risk';\n    tooltip?: string;\n    customTooltip?: {\n        template: string,\n        tooltipPosition: string;\n        data?: any;\n    };\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ElementRef, Injector, Input, Output, EventEmitter } from '@angular/core';\nimport { UpgradeComponent } from '@angular/upgrade/static';\nexport class ExpandInputNg1Component extends UpgradeComponent {\n\n     elname: string;\n     placeHolder: string;\n     className: string;\n     clearTextIcon: string;\n     closeSearch: string;\n     expandAlways: boolean;\n     onEnter: Function;\n\n     focus: EventEmitter<string> = new EventEmitter<string>();\n/**\n * @param {?} elementRef\n * @param {?} injector\n */\nconstructor(elementRef: ElementRef, injector: Injector) {\n        super('expandInput', elementRef, injector);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'expand-input'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Injector, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'elname': [{ type: Input },],\n'placeHolder': [{ type: Input },],\n'className': [{ type: Input },],\n'clearTextIcon': [{ type: Input },],\n'closeSearch': [{ type: Input },],\n'expandAlways': [{ type: Input },],\n'onEnter': [{ type: Input },],\n'focus': [{ type: Output },],\n};\n}\n\nfunction ExpandInputNg1Component_tsickle_Closure_declarations() {\n/** @type {?} */\nExpandInputNg1Component.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nExpandInputNg1Component.ctorParameters;\n/** @type {?} */\nExpandInputNg1Component.propDecorators;\n/** @type {?} */\nExpandInputNg1Component.prototype.elname;\n/** @type {?} */\nExpandInputNg1Component.prototype.placeHolder;\n/** @type {?} */\nExpandInputNg1Component.prototype.className;\n/** @type {?} */\nExpandInputNg1Component.prototype.clearTextIcon;\n/** @type {?} */\nExpandInputNg1Component.prototype.closeSearch;\n/** @type {?} */\nExpandInputNg1Component.prototype.expandAlways;\n/** @type {?} */\nExpandInputNg1Component.prototype.onEnter;\n/** @type {?} */\nExpandInputNg1Component.prototype.focus;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ElementRef, Injector, Input, EventEmitter } from '@angular/core';\nimport { UpgradeComponent } from '@angular/upgrade/static';\nexport class FloatingActionButtonNg1Component extends UpgradeComponent {\n\n     items: FloatingActionButtonItem[] = [];\n     primary: string;\n     direction: 'top' | 'right' | 'bottom' | 'left';\n/**\n * @param {?} elementRef\n * @param {?} injector\n */\nconstructor(elementRef: ElementRef, injector: Injector) {\n        super('floatingActionButton', elementRef, injector);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'floating-action-button'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Injector, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'items': [{ type: Input },],\n'primary': [{ type: Input },],\n'direction': [{ type: Input },],\n};\n}\n\nfunction FloatingActionButtonNg1Component_tsickle_Closure_declarations() {\n/** @type {?} */\nFloatingActionButtonNg1Component.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFloatingActionButtonNg1Component.ctorParameters;\n/** @type {?} */\nFloatingActionButtonNg1Component.propDecorators;\n/** @type {?} */\nFloatingActionButtonNg1Component.prototype.items;\n/** @type {?} */\nFloatingActionButtonNg1Component.prototype.primary;\n/** @type {?} */\nFloatingActionButtonNg1Component.prototype.direction;\n}\n\n\nexport interface FloatingActionButtonItem {\n    icon: string;\n    event: Function;\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ElementRef, Injector, Input, Output, EventEmitter } from '@angular/core';\nimport { UpgradeComponent } from '@angular/upgrade/static';\nexport class FlotNg1Component extends UpgradeComponent {\n\n     dataset: any;\n     options: any;\n     callback: any;\n     donutLabels: any;\n     onPlotClick = new EventEmitter<any>();\n     onPlotHover = new EventEmitter<any>();\n/**\n * @param {?} elementRef\n * @param {?} injector\n */\nconstructor(elementRef: ElementRef, injector: Injector) {\n        super('uxFlotNg1', elementRef, injector);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'flot'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Injector, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'dataset': [{ type: Input },],\n'options': [{ type: Input },],\n'callback': [{ type: Input },],\n'donutLabels': [{ type: Input },],\n'onPlotClick': [{ type: Output },],\n'onPlotHover': [{ type: Output },],\n};\n}\n\nfunction FlotNg1Component_tsickle_Closure_declarations() {\n/** @type {?} */\nFlotNg1Component.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFlotNg1Component.ctorParameters;\n/** @type {?} */\nFlotNg1Component.propDecorators;\n/** @type {?} */\nFlotNg1Component.prototype.dataset;\n/** @type {?} */\nFlotNg1Component.prototype.options;\n/** @type {?} */\nFlotNg1Component.prototype.callback;\n/** @type {?} */\nFlotNg1Component.prototype.donutLabels;\n/** @type {?} */\nFlotNg1Component.prototype.onPlotClick;\n/** @type {?} */\nFlotNg1Component.prototype.onPlotHover;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ElementRef, Injector, Input, EventEmitter } from '@angular/core';\nimport { UpgradeComponent } from '@angular/upgrade/static';\nexport class GridNg1Component extends UpgradeComponent {\n\n     source: any[] = [];\n     columns: GridColumn[] = [];\n/**\n * The following inputs are undocumented\n */\noptions: any;\n     events: any;\n     plugins: any;\n/**\n * @param {?} elementRef\n * @param {?} injector\n */\nconstructor(elementRef: ElementRef, injector: Injector) {\n        super('grid', elementRef, injector);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'grid'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Injector, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'source': [{ type: Input },],\n'columns': [{ type: Input },],\n'options': [{ type: Input },],\n'events': [{ type: Input },],\n'plugins': [{ type: Input },],\n};\n}\n\nfunction GridNg1Component_tsickle_Closure_declarations() {\n/** @type {?} */\nGridNg1Component.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nGridNg1Component.ctorParameters;\n/** @type {?} */\nGridNg1Component.propDecorators;\n/** @type {?} */\nGridNg1Component.prototype.source;\n/** @type {?} */\nGridNg1Component.prototype.columns;\n/**\n * The following inputs are undocumented\n * @type {?}\n */\nGridNg1Component.prototype.options;\n/** @type {?} */\nGridNg1Component.prototype.events;\n/** @type {?} */\nGridNg1Component.prototype.plugins;\n}\n\n\nexport interface GridColumn {\n    title: string;\n    template: string;\n    width?: string;\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ElementRef, Injector, Input, EventEmitter } from '@angular/core';\nimport { UpgradeComponent } from '@angular/upgrade/static';\nexport class HierarchyBarNg1Component extends UpgradeComponent {\n\n     data: any[];\n     options: HierarchyBarOptions;\n     selectNode: any;\n     containerClass: any;\n/**\n * @param {?} elementRef\n * @param {?} injector\n */\nconstructor(elementRef: ElementRef, injector: Injector) {\n        super('hierarchyBar', elementRef, injector);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'hierarchy-bar'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Injector, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'data': [{ type: Input },],\n'options': [{ type: Input },],\n'selectNode': [{ type: Input },],\n'containerClass': [{ type: Input },],\n};\n}\n\nfunction HierarchyBarNg1Component_tsickle_Closure_declarations() {\n/** @type {?} */\nHierarchyBarNg1Component.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nHierarchyBarNg1Component.ctorParameters;\n/** @type {?} */\nHierarchyBarNg1Component.propDecorators;\n/** @type {?} */\nHierarchyBarNg1Component.prototype.data;\n/** @type {?} */\nHierarchyBarNg1Component.prototype.options;\n/** @type {?} */\nHierarchyBarNg1Component.prototype.selectNode;\n/** @type {?} */\nHierarchyBarNg1Component.prototype.containerClass;\n}\n\n\nexport interface HierarchyBarOptions {\n    enabled: boolean;\n    overview?: Function;\n    image: Function;\n    valueFormatter: Function;\n    action?: {\n        title: string;\n        event: Function;\n    };\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ElementRef, Injector, Input, Output, EventEmitter } from '@angular/core';\nimport { UpgradeComponent } from '@angular/upgrade/static';\nexport class MarqueeWizardNg1Component extends UpgradeComponent {\n\n     wizardIcon: string;\n     wizardSteps: MarqueeWizardStep[];\n     buttonOptions: MarqueeWizardOptions;\n     onChanging: Function;\n     onFinished: Function;\n     onFinishing: Function;\n     onCanceled: Function;\n     isVisited: boolean;\n     sideInfo: MarqueeWizardSideInfo;\n\n     wizardStepsChange: EventEmitter<MarqueeWizardStep[]> = new EventEmitter<MarqueeWizardStep[]>();\n/**\n * @param {?} elementRef\n * @param {?} injector\n */\nconstructor(elementRef: ElementRef, injector: Injector) {\n        super('marqueeWizard', elementRef, injector);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'marquee-wizard'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Injector, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'wizardIcon': [{ type: Input },],\n'wizardSteps': [{ type: Input },],\n'buttonOptions': [{ type: Input },],\n'onChanging': [{ type: Input },],\n'onFinished': [{ type: Input },],\n'onFinishing': [{ type: Input },],\n'onCanceled': [{ type: Input },],\n'isVisited': [{ type: Input },],\n'sideInfo': [{ type: Input },],\n'wizardStepsChange': [{ type: Output },],\n};\n}\n\nfunction MarqueeWizardNg1Component_tsickle_Closure_declarations() {\n/** @type {?} */\nMarqueeWizardNg1Component.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMarqueeWizardNg1Component.ctorParameters;\n/** @type {?} */\nMarqueeWizardNg1Component.propDecorators;\n/** @type {?} */\nMarqueeWizardNg1Component.prototype.wizardIcon;\n/** @type {?} */\nMarqueeWizardNg1Component.prototype.wizardSteps;\n/** @type {?} */\nMarqueeWizardNg1Component.prototype.buttonOptions;\n/** @type {?} */\nMarqueeWizardNg1Component.prototype.onChanging;\n/** @type {?} */\nMarqueeWizardNg1Component.prototype.onFinished;\n/** @type {?} */\nMarqueeWizardNg1Component.prototype.onFinishing;\n/** @type {?} */\nMarqueeWizardNg1Component.prototype.onCanceled;\n/** @type {?} */\nMarqueeWizardNg1Component.prototype.isVisited;\n/** @type {?} */\nMarqueeWizardNg1Component.prototype.sideInfo;\n/** @type {?} */\nMarqueeWizardNg1Component.prototype.wizardStepsChange;\n}\n\n\nexport interface MarqueeWizardStep {\n    title: string;\n    html?: string;\n    header?: string;\n    templateUrl?: string;\n    hidden?: boolean;\n    error?: boolean;\n    completed?: boolean;\n    visited?: boolean;\n}\n\nexport interface MarqueeWizardOptions {\n    nextText?: string;\n    previousText?: string;\n    finishText?: string;\n    showNext?: boolean;\n    showPrevious?: boolean;\n    showFinish?: boolean;\n    nextTooltip?: string;\n    previousTooltip?: string;\n    finishTooltip?: string;\n    previousEnabled?: boolean;\n    nextEnabled?: boolean;\n    finishEnabled?: boolean;\n}\n\nexport interface MarqueeWizardSideInfo {\n    title: string;\n    description: string;\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ElementRef, Injector, Input } from '@angular/core';\nimport { UpgradeComponent } from '@angular/upgrade/static';\nexport class NestedDonutNg1Component extends UpgradeComponent {\n\n     dataset: any;\n     options: any;\n/**\n * @param {?} elementRef\n * @param {?} injector\n */\nconstructor(elementRef: ElementRef, injector: Injector) {\n        super('uxNestedDonutNg1', elementRef, injector);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'nested-donut'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Injector, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'dataset': [{ type: Input },],\n'options': [{ type: Input },],\n};\n}\n\nfunction NestedDonutNg1Component_tsickle_Closure_declarations() {\n/** @type {?} */\nNestedDonutNg1Component.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNestedDonutNg1Component.ctorParameters;\n/** @type {?} */\nNestedDonutNg1Component.propDecorators;\n/** @type {?} */\nNestedDonutNg1Component.prototype.dataset;\n/** @type {?} */\nNestedDonutNg1Component.prototype.options;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ElementRef, Injector, Input, Output, EventEmitter } from '@angular/core';\nimport { UpgradeComponent } from '@angular/upgrade/static';\nexport class OrganizationChartNg1Component extends UpgradeComponent {\n\n     data: any;\n     options: any;\n     dataChange = new EventEmitter<any>();\n     optionsChange = new EventEmitter<any>();\n/**\n * @param {?} elementRef\n * @param {?} injector\n */\nconstructor(elementRef: ElementRef, injector: Injector) {\n        super('uxOrganizationChartNg1', elementRef, injector);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'organization-chart'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Injector, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'data': [{ type: Input },],\n'options': [{ type: Input },],\n'dataChange': [{ type: Output },],\n'optionsChange': [{ type: Output },],\n};\n}\n\nfunction OrganizationChartNg1Component_tsickle_Closure_declarations() {\n/** @type {?} */\nOrganizationChartNg1Component.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nOrganizationChartNg1Component.ctorParameters;\n/** @type {?} */\nOrganizationChartNg1Component.propDecorators;\n/** @type {?} */\nOrganizationChartNg1Component.prototype.data;\n/** @type {?} */\nOrganizationChartNg1Component.prototype.options;\n/** @type {?} */\nOrganizationChartNg1Component.prototype.dataChange;\n/** @type {?} */\nOrganizationChartNg1Component.prototype.optionsChange;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ElementRef, Injector, Input } from '@angular/core';\nimport { UpgradeComponent } from '@angular/upgrade/static';\nexport class PartitionMapNg1Component extends UpgradeComponent {\n\n     chartData: any;\n     chartOptions: any;\n     chartLoading: any;\n/**\n * @param {?} elementRef\n * @param {?} injector\n */\nconstructor(elementRef: ElementRef, injector: Injector) {\n        super('uxPartitionMapNg1', elementRef, injector);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'partition-map'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Injector, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'chartData': [{ type: Input },],\n'chartOptions': [{ type: Input },],\n'chartLoading': [{ type: Input },],\n};\n}\n\nfunction PartitionMapNg1Component_tsickle_Closure_declarations() {\n/** @type {?} */\nPartitionMapNg1Component.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nPartitionMapNg1Component.ctorParameters;\n/** @type {?} */\nPartitionMapNg1Component.propDecorators;\n/** @type {?} */\nPartitionMapNg1Component.prototype.chartData;\n/** @type {?} */\nPartitionMapNg1Component.prototype.chartOptions;\n/** @type {?} */\nPartitionMapNg1Component.prototype.chartLoading;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ElementRef, Injector, Input } from '@angular/core';\nimport { UpgradeComponent } from '@angular/upgrade/static';\nexport class PeityBarChartNg1Component extends UpgradeComponent {\n\n     data: any;\n     options: any;\n/**\n * @param {?} elementRef\n * @param {?} injector\n */\nconstructor(elementRef: ElementRef, injector: Injector) {\n        super('uxPeityBarChartNg1', elementRef, injector);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'bar-chart'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Injector, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'data': [{ type: Input },],\n'options': [{ type: Input },],\n};\n}\n\nfunction PeityBarChartNg1Component_tsickle_Closure_declarations() {\n/** @type {?} */\nPeityBarChartNg1Component.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nPeityBarChartNg1Component.ctorParameters;\n/** @type {?} */\nPeityBarChartNg1Component.propDecorators;\n/** @type {?} */\nPeityBarChartNg1Component.prototype.data;\n/** @type {?} */\nPeityBarChartNg1Component.prototype.options;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ElementRef, Injector, Input } from '@angular/core';\nimport { UpgradeComponent } from '@angular/upgrade/static';\nexport class PeityLineChartNg1Component extends UpgradeComponent {\n\n     data: any;\n     options: any;\n/**\n * @param {?} elementRef\n * @param {?} injector\n */\nconstructor(elementRef: ElementRef, injector: Injector) {\n        super('uxPeityLineChartNg1', elementRef, injector);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'line-chart'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Injector, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'data': [{ type: Input },],\n'options': [{ type: Input },],\n};\n}\n\nfunction PeityLineChartNg1Component_tsickle_Closure_declarations() {\n/** @type {?} */\nPeityLineChartNg1Component.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nPeityLineChartNg1Component.ctorParameters;\n/** @type {?} */\nPeityLineChartNg1Component.propDecorators;\n/** @type {?} */\nPeityLineChartNg1Component.prototype.data;\n/** @type {?} */\nPeityLineChartNg1Component.prototype.options;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ElementRef, Injector, Input } from '@angular/core';\nimport { UpgradeComponent } from '@angular/upgrade/static';\nexport class PeityPieChartNg1Component extends UpgradeComponent {\n\n     data: any;\n     options: any;\n/**\n * @param {?} elementRef\n * @param {?} injector\n */\nconstructor(elementRef: ElementRef, injector: Injector) {\n        super('uxPeityPieChartNg1', elementRef, injector);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'pie-chart'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Injector, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'data': [{ type: Input },],\n'options': [{ type: Input },],\n};\n}\n\nfunction PeityPieChartNg1Component_tsickle_Closure_declarations() {\n/** @type {?} */\nPeityPieChartNg1Component.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nPeityPieChartNg1Component.ctorParameters;\n/** @type {?} */\nPeityPieChartNg1Component.propDecorators;\n/** @type {?} */\nPeityPieChartNg1Component.prototype.data;\n/** @type {?} */\nPeityPieChartNg1Component.prototype.options;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ElementRef, Injector, Input } from '@angular/core';\nimport { UpgradeComponent } from '@angular/upgrade/static';\nexport class PeityUpdatingLineChartNg1Component extends UpgradeComponent {\n\n     data: any;\n     options: any;\n     method: any;\n     updateinterval: any;\n/**\n * @param {?} elementRef\n * @param {?} injector\n */\nconstructor(elementRef: ElementRef, injector: Injector) {\n        super('uxPeityUpdatingLineChartNg1', elementRef, injector);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'updating-line-chart'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Injector, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'data': [{ type: Input },],\n'options': [{ type: Input },],\n'method': [{ type: Input },],\n'updateinterval': [{ type: Input },],\n};\n}\n\nfunction PeityUpdatingLineChartNg1Component_tsickle_Closure_declarations() {\n/** @type {?} */\nPeityUpdatingLineChartNg1Component.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nPeityUpdatingLineChartNg1Component.ctorParameters;\n/** @type {?} */\nPeityUpdatingLineChartNg1Component.propDecorators;\n/** @type {?} */\nPeityUpdatingLineChartNg1Component.prototype.data;\n/** @type {?} */\nPeityUpdatingLineChartNg1Component.prototype.options;\n/** @type {?} */\nPeityUpdatingLineChartNg1Component.prototype.method;\n/** @type {?} */\nPeityUpdatingLineChartNg1Component.prototype.updateinterval;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ElementRef, Injector, Input } from '@angular/core';\nimport { UpgradeComponent } from '@angular/upgrade/static';\nexport class SankeyNg1Component extends UpgradeComponent {\n\n     chartSize: any;\n     chartData: any;\n     options: any;\n     click: any;\n/**\n * @param {?} elementRef\n * @param {?} injector\n */\nconstructor(elementRef: ElementRef, injector: Injector) {\n        super('uxSankeyNg1', elementRef, injector);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'sankey'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Injector, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'chartSize': [{ type: Input },],\n'chartData': [{ type: Input },],\n'options': [{ type: Input },],\n'click': [{ type: Input },],\n};\n}\n\nfunction SankeyNg1Component_tsickle_Closure_declarations() {\n/** @type {?} */\nSankeyNg1Component.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSankeyNg1Component.ctorParameters;\n/** @type {?} */\nSankeyNg1Component.propDecorators;\n/** @type {?} */\nSankeyNg1Component.prototype.chartSize;\n/** @type {?} */\nSankeyNg1Component.prototype.chartData;\n/** @type {?} */\nSankeyNg1Component.prototype.options;\n/** @type {?} */\nSankeyNg1Component.prototype.click;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ElementRef, Injector, Input } from '@angular/core';\nimport { UpgradeComponent } from '@angular/upgrade/static';\nexport class SearchToolbarNg1Component extends UpgradeComponent {\n\n     searchTypeahead: any[];\n     placeHolder: string;\n     closeSearch: string;\n     onSearch: Function;\n     onFocus: Function;\n/**\n * @param {?} elementRef\n * @param {?} injector\n */\nconstructor(elementRef: ElementRef, injector: Injector) {\n        super('searchToolbar', elementRef, injector);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'search-toolbar'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Injector, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'searchTypeahead': [{ type: Input },],\n'placeHolder': [{ type: Input },],\n'closeSearch': [{ type: Input },],\n'onSearch': [{ type: Input },],\n'onFocus': [{ type: Input },],\n};\n}\n\nfunction SearchToolbarNg1Component_tsickle_Closure_declarations() {\n/** @type {?} */\nSearchToolbarNg1Component.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSearchToolbarNg1Component.ctorParameters;\n/** @type {?} */\nSearchToolbarNg1Component.propDecorators;\n/** @type {?} */\nSearchToolbarNg1Component.prototype.searchTypeahead;\n/** @type {?} */\nSearchToolbarNg1Component.prototype.placeHolder;\n/** @type {?} */\nSearchToolbarNg1Component.prototype.closeSearch;\n/** @type {?} */\nSearchToolbarNg1Component.prototype.onSearch;\n/** @type {?} */\nSearchToolbarNg1Component.prototype.onFocus;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ElementRef, Injector, Input, Output, EventEmitter } from '@angular/core';\nimport { UpgradeComponent } from '@angular/upgrade/static';\nexport class SelectTableNg1Component extends UpgradeComponent {\n\n     values: any[];\n     multipleSelect: boolean;\n     selectKey: string;\n     selected: string;\n     searchText: string;\n     tableHeight: string;\n     selectHiddenItems: 'clear' | 'reselect';\n\n     selectedChange: EventEmitter<string> = new EventEmitter<string>();\n/**\n * @param {?} elementRef\n * @param {?} injector\n */\nconstructor(elementRef: ElementRef, injector: Injector) {\n        super('selectTable', elementRef, injector);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'select-table'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Injector, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'values': [{ type: Input },],\n'multipleSelect': [{ type: Input },],\n'selectKey': [{ type: Input },],\n'selected': [{ type: Input },],\n'searchText': [{ type: Input },],\n'tableHeight': [{ type: Input },],\n'selectHiddenItems': [{ type: Input },],\n'selectedChange': [{ type: Output },],\n};\n}\n\nfunction SelectTableNg1Component_tsickle_Closure_declarations() {\n/** @type {?} */\nSelectTableNg1Component.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSelectTableNg1Component.ctorParameters;\n/** @type {?} */\nSelectTableNg1Component.propDecorators;\n/** @type {?} */\nSelectTableNg1Component.prototype.values;\n/** @type {?} */\nSelectTableNg1Component.prototype.multipleSelect;\n/** @type {?} */\nSelectTableNg1Component.prototype.selectKey;\n/** @type {?} */\nSelectTableNg1Component.prototype.selected;\n/** @type {?} */\nSelectTableNg1Component.prototype.searchText;\n/** @type {?} */\nSelectTableNg1Component.prototype.tableHeight;\n/** @type {?} */\nSelectTableNg1Component.prototype.selectHiddenItems;\n/** @type {?} */\nSelectTableNg1Component.prototype.selectedChange;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ElementRef, Injector, Input, Output, EventEmitter, forwardRef } from '@angular/core';\nimport { UpgradeComponent } from '@angular/upgrade/static';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nexport const /** @type {?} */ SLIDER_CHART_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => SliderChartNg1Component),\n    multi: true\n};\nexport class SliderChartNg1Component extends UpgradeComponent implements ControlValueAccessor {\n\n     sliderOptions: any;\n     ngModel: any;\n     chartOptions: any;\n     chartData: any;\n\n     ngModelChange: EventEmitter<any> = new EventEmitter<any>();\n/**\n * @param {?} elementRef\n * @param {?} injector\n */\nconstructor(elementRef: ElementRef, injector: Injector) {\n        super('sliderChart', elementRef, injector);\n    }\n/**\n * @param {?} obj\n * @return {?}\n */\nwriteValue(obj: any): void { }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnChange(fn: any): void { }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnTouched(fn: any): void { }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'slider-chart',\n    providers: [SLIDER_CHART_VALUE_ACCESSOR]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Injector, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'sliderOptions': [{ type: Input },],\n'ngModel': [{ type: Input },],\n'chartOptions': [{ type: Input },],\n'chartData': [{ type: Input },],\n'ngModelChange': [{ type: Output },],\n};\n}\n\nfunction SliderChartNg1Component_tsickle_Closure_declarations() {\n/** @type {?} */\nSliderChartNg1Component.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSliderChartNg1Component.ctorParameters;\n/** @type {?} */\nSliderChartNg1Component.propDecorators;\n/** @type {?} */\nSliderChartNg1Component.prototype.sliderOptions;\n/** @type {?} */\nSliderChartNg1Component.prototype.ngModel;\n/** @type {?} */\nSliderChartNg1Component.prototype.chartOptions;\n/** @type {?} */\nSliderChartNg1Component.prototype.chartData;\n/** @type {?} */\nSliderChartNg1Component.prototype.ngModelChange;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ElementRef, Injector, Input } from '@angular/core';\nimport { UpgradeComponent } from '@angular/upgrade/static';\nexport class SocialChartNg1Component extends UpgradeComponent {\n\n     data: any;\n     options: any;\n     width: any;\n     height: any;\n     api: any;\n     communities: any;\n     detailStyle: any;\n     popoverStyle: any;\n     nodeDetail: any;\n     edgeDetail: any;\n     nodePopover: any;\n     edgePopover: any;\n     forceAtlasDuration: any;\n     nodeSizeAttribute: any;\n     startMaximized: any;\n     startMaximised: any;\n     showMaximizeControl: any;\n     showMaximiseControl: any;\n     socialChartContainer: any;\n     fullscreenButtonPosition: any;\n     localStrings: any;\n     chartTitle: any;\n     titleDisplayTime: any;\n     edgeWeightInfluence: any;\n     minLabels: any;\n/**\n * @param {?} elementRef\n * @param {?} injector\n */\nconstructor(elementRef: ElementRef, injector: Injector) {\n        super('uxSocialChartNg1', elementRef, injector);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'social-chart'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Injector, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'data': [{ type: Input },],\n'options': [{ type: Input },],\n'width': [{ type: Input },],\n'height': [{ type: Input },],\n'api': [{ type: Input },],\n'communities': [{ type: Input },],\n'detailStyle': [{ type: Input },],\n'popoverStyle': [{ type: Input },],\n'nodeDetail': [{ type: Input },],\n'edgeDetail': [{ type: Input },],\n'nodePopover': [{ type: Input },],\n'edgePopover': [{ type: Input },],\n'forceAtlasDuration': [{ type: Input },],\n'nodeSizeAttribute': [{ type: Input },],\n'startMaximized': [{ type: Input },],\n'startMaximised': [{ type: Input },],\n'showMaximizeControl': [{ type: Input },],\n'showMaximiseControl': [{ type: Input },],\n'socialChartContainer': [{ type: Input },],\n'fullscreenButtonPosition': [{ type: Input },],\n'localStrings': [{ type: Input },],\n'chartTitle': [{ type: Input },],\n'titleDisplayTime': [{ type: Input },],\n'edgeWeightInfluence': [{ type: Input },],\n'minLabels': [{ type: Input },],\n};\n}\n\nfunction SocialChartNg1Component_tsickle_Closure_declarations() {\n/** @type {?} */\nSocialChartNg1Component.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSocialChartNg1Component.ctorParameters;\n/** @type {?} */\nSocialChartNg1Component.propDecorators;\n/** @type {?} */\nSocialChartNg1Component.prototype.data;\n/** @type {?} */\nSocialChartNg1Component.prototype.options;\n/** @type {?} */\nSocialChartNg1Component.prototype.width;\n/** @type {?} */\nSocialChartNg1Component.prototype.height;\n/** @type {?} */\nSocialChartNg1Component.prototype.api;\n/** @type {?} */\nSocialChartNg1Component.prototype.communities;\n/** @type {?} */\nSocialChartNg1Component.prototype.detailStyle;\n/** @type {?} */\nSocialChartNg1Component.prototype.popoverStyle;\n/** @type {?} */\nSocialChartNg1Component.prototype.nodeDetail;\n/** @type {?} */\nSocialChartNg1Component.prototype.edgeDetail;\n/** @type {?} */\nSocialChartNg1Component.prototype.nodePopover;\n/** @type {?} */\nSocialChartNg1Component.prototype.edgePopover;\n/** @type {?} */\nSocialChartNg1Component.prototype.forceAtlasDuration;\n/** @type {?} */\nSocialChartNg1Component.prototype.nodeSizeAttribute;\n/** @type {?} */\nSocialChartNg1Component.prototype.startMaximized;\n/** @type {?} */\nSocialChartNg1Component.prototype.startMaximised;\n/** @type {?} */\nSocialChartNg1Component.prototype.showMaximizeControl;\n/** @type {?} */\nSocialChartNg1Component.prototype.showMaximiseControl;\n/** @type {?} */\nSocialChartNg1Component.prototype.socialChartContainer;\n/** @type {?} */\nSocialChartNg1Component.prototype.fullscreenButtonPosition;\n/** @type {?} */\nSocialChartNg1Component.prototype.localStrings;\n/** @type {?} */\nSocialChartNg1Component.prototype.chartTitle;\n/** @type {?} */\nSocialChartNg1Component.prototype.titleDisplayTime;\n/** @type {?} */\nSocialChartNg1Component.prototype.edgeWeightInfluence;\n/** @type {?} */\nSocialChartNg1Component.prototype.minLabels;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ElementRef, Injector, Input, Output, EventEmitter } from '@angular/core';\nimport { UpgradeComponent } from '@angular/upgrade/static';\nexport class SortDirectionToggleNg1Component extends UpgradeComponent {\n\n     label: string;\n     sorters: SortDirectionToggleSorter[];\n     descend: boolean;\n/**\n * @param {?} elementRef\n * @param {?} injector\n */\nconstructor(elementRef: ElementRef, injector: Injector) {\n        super('sortDirectionToggle', elementRef, injector);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'sort-direction-toggle'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Injector, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'label': [{ type: Input },],\n'sorters': [{ type: Input },],\n'descend': [{ type: Input },],\n};\n}\n\nfunction SortDirectionToggleNg1Component_tsickle_Closure_declarations() {\n/** @type {?} */\nSortDirectionToggleNg1Component.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSortDirectionToggleNg1Component.ctorParameters;\n/** @type {?} */\nSortDirectionToggleNg1Component.propDecorators;\n/** @type {?} */\nSortDirectionToggleNg1Component.prototype.label;\n/** @type {?} */\nSortDirectionToggleNg1Component.prototype.sorters;\n/** @type {?} */\nSortDirectionToggleNg1Component.prototype.descend;\n}\n\n\nexport interface SortDirectionToggleSorter {\n    name: string;\n    sort: string;\n    defaultSorter: boolean;\n    select: Function;\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ElementRef, Injector, Input, Output, EventEmitter } from '@angular/core';\nimport { UpgradeComponent } from '@angular/upgrade/static';\nexport class TreeGridNg1Component extends UpgradeComponent {\n\n     data: TreeGridData[] | Function;\n     columns: TreeGridColumn[];\n     treeData: TreeGridData[];\n     selected: any[];\n     currentRow: any;\n     options: TreeGridOptions;\n\n     optionsChange: EventEmitter<TreeGridOptions> = new EventEmitter<TreeGridOptions>();\n     selectedChange: EventEmitter<any[]> = new EventEmitter<any[]>();\n     currentRowChange: EventEmitter<any> = new EventEmitter<any>();\n     treeDataChange: EventEmitter<TreeGridData[]> = new EventEmitter<TreeGridData[]>();\n/**\n * @param {?} elementRef\n * @param {?} injector\n */\nconstructor(elementRef: ElementRef, injector: Injector) {\n        super('treegrid', elementRef, injector);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'treegrid'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Injector, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'data': [{ type: Input },],\n'columns': [{ type: Input },],\n'treeData': [{ type: Input },],\n'selected': [{ type: Input },],\n'currentRow': [{ type: Input },],\n'options': [{ type: Input },],\n'optionsChange': [{ type: Output },],\n'selectedChange': [{ type: Output },],\n'currentRowChange': [{ type: Output },],\n'treeDataChange': [{ type: Output },],\n};\n}\n\nfunction TreeGridNg1Component_tsickle_Closure_declarations() {\n/** @type {?} */\nTreeGridNg1Component.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTreeGridNg1Component.ctorParameters;\n/** @type {?} */\nTreeGridNg1Component.propDecorators;\n/** @type {?} */\nTreeGridNg1Component.prototype.data;\n/** @type {?} */\nTreeGridNg1Component.prototype.columns;\n/** @type {?} */\nTreeGridNg1Component.prototype.treeData;\n/** @type {?} */\nTreeGridNg1Component.prototype.selected;\n/** @type {?} */\nTreeGridNg1Component.prototype.currentRow;\n/** @type {?} */\nTreeGridNg1Component.prototype.options;\n/** @type {?} */\nTreeGridNg1Component.prototype.optionsChange;\n/** @type {?} */\nTreeGridNg1Component.prototype.selectedChange;\n/** @type {?} */\nTreeGridNg1Component.prototype.currentRowChange;\n/** @type {?} */\nTreeGridNg1Component.prototype.treeDataChange;\n}\n\n\nexport interface TreeGridColumn {\n    name: string;\n    value?: string | Function;\n    template?: string;\n    headerClass?: string;\n    cellClass?: string;\n    width?: string;\n    tooltip?: string;\n    tooltipPlacement?: 'top' | 'bottom' | 'left' | 'right';\n}\n\nexport interface TreeGridData {\n    dataItem: any;\n    children: any[];\n    expanded: boolean;\n    expanding: boolean;\n    level: number;\n    api: any;\n}\n\nexport interface TreeGridOptions {\n    childrenProperty?: string;\n    hasChildren?: Function;\n    maxDepth?: number;\n    expandTopLevel?: boolean;\n    select?: any;\n    expander?: any;\n    icons?: any;\n    rowClass?: string | Function;\n    sort?: Function;\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ElementRef, Injector, Input, EventEmitter } from '@angular/core';\nimport { UpgradeComponent } from '@angular/upgrade/static';\nexport class ThumbnailNg1Component extends UpgradeComponent {\n\n     url: string;\n     show: boolean;\n     width: string;\n     height: string;\n/**\n * @param {?} elementRef\n * @param {?} injector\n */\nconstructor(elementRef: ElementRef, injector: Injector) {\n        super('thumbnail', elementRef, injector);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'thumbnail'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Injector, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'url': [{ type: Input },],\n'show': [{ type: Input },],\n'width': [{ type: Input },],\n'height': [{ type: Input },],\n};\n}\n\nfunction ThumbnailNg1Component_tsickle_Closure_declarations() {\n/** @type {?} */\nThumbnailNg1Component.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nThumbnailNg1Component.ctorParameters;\n/** @type {?} */\nThumbnailNg1Component.propDecorators;\n/** @type {?} */\nThumbnailNg1Component.prototype.url;\n/** @type {?} */\nThumbnailNg1Component.prototype.show;\n/** @type {?} */\nThumbnailNg1Component.prototype.width;\n/** @type {?} */\nThumbnailNg1Component.prototype.height;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable, Inject, Injector } from '@angular/core';\nimport { INavigationMenuService } from './navigation-menu.interface';\nexport class NavigationMenuService implements INavigationMenuService {\n/**\n * @param {?} _navigationMenuService\n */\nconstructor(\nprivate _navigationMenuService: INavigationMenuService) { }\n/**\n * @return {?}\n */\nshow(): void {\n        this._navigationMenuService.show();\n    }\n/**\n * @return {?}\n */\nhide(): void {\n        this._navigationMenuService.hide();\n    }\n/**\n * @return {?}\n */\nvisible(): boolean {\n        return this._navigationMenuService.visible();\n    }\n/**\n * @return {?}\n */\ncollapseAtWidth(): number {\n        return this._navigationMenuService.collapseAtWidth();\n    }\n/**\n * @param {?} width\n * @return {?}\n */\nsetCollapseAtWidth(width: number): void {\n        this._navigationMenuService.setCollapseAtWidth(width);\n    }\n/**\n * @return {?}\n */\nsetDefaultCollapseAtWidth(): void {\n        this._navigationMenuService.setDefaultCollapseAtWidth();\n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: undefined, decorators: [{ type: Inject, args: ['$navigationMenu', ] }, ]},\n];\n}\n\nfunction NavigationMenuService_tsickle_Closure_declarations() {\n/** @type {?} */\nNavigationMenuService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNavigationMenuService.ctorParameters;\n/** @type {?} */\nNavigationMenuService.prototype._navigationMenuService;\n}\n\n/**\n * @param {?} injector\n * @return {?}\n */\nexport function navigationMenuServiceFactory(injector: Injector) {\n    return injector.get('$navigationMenu');\n}\n\nexport const /** @type {?} */ navigationMenuServiceProvider = {\n    provide: '$navigationMenu',\n    useFactory: navigationMenuServiceFactory,\n    deps: ['$injector']\n};\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable, Inject, Injector } from '@angular/core';\nimport { INotificationService, NotificationOptions } from './notification.interface';\nexport class NotificationService implements INotificationService {\n/**\n * @param {?} _notificationService\n */\nconstructor(\nprivate _notificationService: INotificationService) { }\n/**\n * @param {?} options\n * @return {?}\n */\nshowNotification(options: NotificationOptions): HTMLElement {\n        return this._notificationService.showNotification(options);   \n    }\n/**\n * @param {?} element\n * @return {?}\n */\ndismissNotification(element: HTMLElement): void {\n        this._notificationService.dismissNotification(element);\n    }\n/**\n * @return {?}\n */\ndismissAllNotifications(): void {\n        this._notificationService.dismissAllNotifications();\n    }\n/**\n * @return {?}\n */\ngetNotifications(): any[] {\n        return this._notificationService.getNotifications();\n    }\n/**\n * @param {?} visible\n * @return {?}\n */\nsetNotificationVisibility(visible: boolean): void {\n        this._notificationService.setNotificationVisibility(visible);\n    }\n/**\n * @param {?} direction\n * @return {?}\n */\nsetDirection(direction: 'append' | 'prepend'): void {\n        this._notificationService.setDirection(direction);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: undefined, decorators: [{ type: Inject, args: ['notificationService', ] }, ]},\n];\n}\n\nfunction NotificationService_tsickle_Closure_declarations() {\n/** @type {?} */\nNotificationService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNotificationService.ctorParameters;\n/** @type {?} */\nNotificationService.prototype._notificationService;\n}\n\n/**\n * @param {?} injector\n * @return {?}\n */\nexport function notificationServiceFactory(injector: Injector) {\n    return injector.get('notificationService');\n}\n\nexport const /** @type {?} */ notificationServiceProvider = {\n    provide: 'notificationService',\n    useFactory: notificationServiceFactory,\n    deps: ['$injector']\n};\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable, Inject, Injector } from '@angular/core';\nimport { IPdfService, PdfColumns, PdfOptions, PdfDocument } from './pdf.interface';\nexport class PdfService implements IPdfService {\n/**\n * @param {?} _pdfService\n */\nconstructor(\nprivate _pdfService: IPdfService) { }\n/**\n * @param {?} columns\n * @param {?} rows\n * @param {?=} options\n * @return {?}\n */\ncreateTable(columns: PdfColumns, rows: any[], options: PdfOptions = {}): PdfDocument {\n        return this._pdfService.createTable(columns, rows, options);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: undefined, decorators: [{ type: Inject, args: ['$pdf', ] }, ]},\n];\n}\n\nfunction PdfService_tsickle_Closure_declarations() {\n/** @type {?} */\nPdfService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nPdfService.ctorParameters;\n/** @type {?} */\nPdfService.prototype._pdfService;\n}\n\n/**\n * @param {?} injector\n * @return {?}\n */\nexport function pdfServiceFactory(injector: Injector) {\n    return injector.get('$pdf');\n}\n\nexport const /** @type {?} */ pdfServiceProvider = {\n    provide: '$pdf',\n    useFactory: pdfServiceFactory,\n    deps: ['$injector']\n};\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable, Inject, Injector } from '@angular/core';\nimport { ITimeAgoService, TimeAgoLocalizedTimes } from './time-ago.interface';\nexport class TimeAgoService implements ITimeAgoService {\n/**\n * @param {?} _timeAgoService\n */\nconstructor(\nprivate _timeAgoService: ITimeAgoService) { }\n/**\n * @param {?} strings\n * @return {?}\n */\nsetStrings(strings: TimeAgoLocalizedTimes): void {\n        this._timeAgoService.setStrings(strings);\n    }\n/**\n * @param {?} past\n * @param {?} present\n * @return {?}\n */\ntimeSince(past: Date, present: Date): string {\n        return this._timeAgoService.timeSince(past, present);\n    }\n/**\n * @param {?} moment\n * @return {?}\n */\ntimeSinceNow(moment: Date): string {\n        return this._timeAgoService.timeSinceNow(moment);\n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: undefined, decorators: [{ type: Inject, args: ['timeAgoService', ] }, ]},\n];\n}\n\nfunction TimeAgoService_tsickle_Closure_declarations() {\n/** @type {?} */\nTimeAgoService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTimeAgoService.ctorParameters;\n/** @type {?} */\nTimeAgoService.prototype._timeAgoService;\n}\n\n/**\n * @param {?} injector\n * @return {?}\n */\nexport function timeAgoServiceFactory(injector: Injector) {\n    return injector.get('timeAgoService');\n}\n\nexport const /** @type {?} */ timeAgoServiceProvider = {\n    provide: 'timeAgoService',\n    useFactory: timeAgoServiceFactory,\n    deps: ['$injector']\n};\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule, Injector } from '@angular/core';\n\nimport { FloatingActionButtonNg1Component } from './components/floating-action-button/floating-action-button.component';\nimport { FlotNg1Component } from './components/flot/flot.component';\nimport { NestedDonutNg1Component } from './components/nested-donut/nested-donut.component';\nimport { OrganizationChartNg1Component } from './components/organization-chart/organization-chart.component';\nimport { PartitionMapNg1Component } from './components/partition-map/partition-map.component';\nimport { PeityBarChartNg1Component } from './components/peity-chart/peity-bar-chart.component';\nimport { PeityLineChartNg1Component } from './components/peity-chart/peity-line-chart.component';\nimport { PeityPieChartNg1Component } from './components/peity-chart/peity-pie-chart.component';\nimport { PeityUpdatingLineChartNg1Component } from './components/peity-chart/peity-updating-line-chart.component';\nimport { SankeyNg1Component } from './components/sankey-chart/sankey.component';\nimport { SocialChartNg1Component } from './components/social-chart/social-chart.component';\nimport { TimeAgoService, timeAgoServiceProvider } from './services/time-ago/time-ago.service';\nimport { PdfService, pdfServiceProvider } from './services/pdf/pdf.service';\nimport { NavigationMenuService, navigationMenuServiceProvider } from './services/navigation-menu/navigation-menu.service';\nimport { NotificationService, notificationServiceProvider } from './services/notification/notification.service';\nimport { GridNg1Component } from './components/grid/grid.component';\nimport { ThumbnailNg1Component } from './components/thumbnail/thumbnail.component';\nimport { HierarchyBarNg1Component } from './components/hierarchy-bar/hierarchy-bar.component';\nimport { ContactsNg1Component } from './components/contacts/contacts.component';\nimport { ExpandInputNg1Component } from './components/expand-input/expand-input.component';\nimport { SortDirectionToggleNg1Component } from './components/sort-direction-toggle/sort-direction-toggle.component';\nimport { SearchToolbarNg1Component } from './components/search-toolbar/search-toolbar.component';\nimport { TreeGridNg1Component } from './components/tree-grid/tree-grid.component';\nimport { SelectTableNg1Component } from './components/select-table/select-table.component';\nimport { MarqueeWizardNg1Component } from './components/marquee-wizard/marquee-wizard.component';\nimport { SliderChartNg1Component } from './components/slider-chart/slider-chart.directive';\n\nconst /** @type {?} */ declarations = [\n    ContactsNg1Component,\n    ExpandInputNg1Component,\n    FloatingActionButtonNg1Component,\n    FlotNg1Component,\n    GridNg1Component,\n    HierarchyBarNg1Component,\n    MarqueeWizardNg1Component,\n    NestedDonutNg1Component,\n    OrganizationChartNg1Component,\n    PartitionMapNg1Component,\n    PeityBarChartNg1Component,\n    PeityLineChartNg1Component,\n    PeityPieChartNg1Component,\n    PeityUpdatingLineChartNg1Component,\n    SankeyNg1Component,\n    SearchToolbarNg1Component,\n    SelectTableNg1Component,\n    SliderChartNg1Component,\n    SocialChartNg1Component,\n    SortDirectionToggleNg1Component,\n    TreeGridNg1Component,\n    ThumbnailNg1Component,\n];\nexport class HybridModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [],\n    exports: declarations,\n    declarations: declarations,\n    providers: [\n        navigationMenuServiceProvider,\n        notificationServiceProvider,\n        pdfServiceProvider,\n        timeAgoServiceProvider,\n        TimeAgoService,\n        PdfService,\n        NavigationMenuService,\n        NotificationService\n    ],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction HybridModule_tsickle_Closure_declarations() {\n/** @type {?} */\nHybridModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nHybridModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Input } from '@angular/core';\nexport class BreadcrumbsComponent {\n\n     crumbs: Breadcrumb[];\n/**\n * @param {?} event\n * @param {?} crumb\n * @return {?}\n */\nclickCrumb(event: MouseEvent, crumb: Breadcrumb) {\n        if (crumb.onClick) {\n            crumb.onClick.call(null, event);\n        }\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-breadcrumbs',\n    template: `\n      <ol class=\"breadcrumb\">\n          <li *ngFor=\"let crumb of crumbs\">\n\n              <!-- If there is a router link then use a tag -->\n              <a *ngIf=\"crumb.routerLink\"\n                 [routerLink]=\"crumb.routerLink\" \n                 [fragment]=\"crumb.fragment\" \n                 [queryParams]=\"crumb.queryParams\" \n                 (click)=\"clickCrumb($event, crumb)\">\n                      {{ crumb.title }}\n              </a>\n\n              <!-- If there is not router link then display text in a span -->\n              <span *ngIf=\"!crumb.routerLink\">{{ crumb.title }}</span>\n          </li>\n      </ol>\n    `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'crumbs': [{ type: Input },],\n};\n}\n\nfunction BreadcrumbsComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nBreadcrumbsComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nBreadcrumbsComponent.ctorParameters;\n/** @type {?} */\nBreadcrumbsComponent.propDecorators;\n/** @type {?} */\nBreadcrumbsComponent.prototype.crumbs;\n}\n\n\nexport interface Breadcrumb {\n    title: string;\n    routerLink?: string;\n    fragment?: string;\n    queryParams?: any;\n    onClick?: (event: MouseEvent) => void;\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\n\nimport { BreadcrumbsComponent } from './breadcrumbs.component';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nexport class BreadcrumbsModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        CommonModule, \n        RouterModule\n    ],\n    exports: [BreadcrumbsComponent],\n    declarations: [BreadcrumbsComponent]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction BreadcrumbsModule_tsickle_Closure_declarations() {\n/** @type {?} */\nBreadcrumbsModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nBreadcrumbsModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Input, forwardRef, Output, EventEmitter } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\n\nexport const /** @type {?} */ CHECKBOX_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => CheckboxComponent),\n    multi: true\n};\nexport class CheckboxComponent implements ControlValueAccessor {\n\n     name: string = '';\n     clickable: boolean = true;\n     disabled: boolean = false;\n     simplified: boolean = false;\n     indeterminateValue: any = -1;\n     valueChange: EventEmitter<any> = new EventEmitter<any>();\n/**\n * @return {?}\n */\nget value() {\n        return this._value;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset value(value: any) {\n        this._value = value;\n\n        // invoke change event\n        this.valueChange.emit(this._value);\n\n        // call callback\n        this.onChangeCallback(this._value);\n    }\nprivate _value: any = false;\n\n    onTouchedCallback: () => void = () => { };\n    onChangeCallback: (_: any) => void = () => { };\nconstructor() { }\n/**\n * @return {?}\n */\ntoggleChecked() {\n\n        if (this.disabled === true || this.clickable === false) {\n            return;\n        }\n\n        if (this.value === this.indeterminateValue) {\n            this.value = true;\n            return;\n        }\n\n        // toggle the checked state\n        this.value = !this.value;\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nkeyDown(event: KeyboardEvent) {\n        // then toggle the checkbox\n        this.toggleChecked();\n\n        // prevent default browser behavior\n        event.stopPropagation();\n        event.preventDefault();\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nwriteValue(value: boolean) {\n        if (value !== this._value) {\n            this._value = value;\n        }\n    }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnChange(fn: any) {\n        this.onChangeCallback = fn;\n    }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnTouched(fn: any) {\n        this.onTouchedCallback = fn;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-checkbox',\n    template: `\n      <div class=\"ux-checkbox\" tabindex=\"0\"\n          [class.ux-checked]=\"value == true\"\n          [class.ux-indeterminate]=\"value == indeterminateValue\"\n          [class.ux-simplified]=\"simplified == true\"\n          [class.ux-disabled]=\"disabled == true\"\n          (keydown.space)=\"keyDown($event)\">\n\n          <input type=\"checkbox\" role=\"checkbox\" tabindex=\"-1\"\n              [name]=\"name\" \n              [checked]=\"value\" \n              [disabled]=\"disabled\" />\n        \n      </div>\n\n      <div class=\"ux-checkbox-content\">\n          <ng-content></ng-content>\n      </div>\n    `,\n    providers: [CHECKBOX_VALUE_ACCESSOR],\n    host: {\n        '(click)': 'toggleChecked()'\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'name': [{ type: Input },],\n'clickable': [{ type: Input },],\n'disabled': [{ type: Input },],\n'simplified': [{ type: Input },],\n'indeterminateValue': [{ type: Input },],\n'valueChange': [{ type: Output },],\n'value': [{ type: Input },],\n};\n}\n\nfunction CheckboxComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nCheckboxComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nCheckboxComponent.ctorParameters;\n/** @type {?} */\nCheckboxComponent.propDecorators;\n/** @type {?} */\nCheckboxComponent.prototype.name;\n/** @type {?} */\nCheckboxComponent.prototype.clickable;\n/** @type {?} */\nCheckboxComponent.prototype.disabled;\n/** @type {?} */\nCheckboxComponent.prototype.simplified;\n/** @type {?} */\nCheckboxComponent.prototype.indeterminateValue;\n/** @type {?} */\nCheckboxComponent.prototype.valueChange;\n/** @type {?} */\nCheckboxComponent.prototype._value;\n/** @type {?} */\nCheckboxComponent.prototype.onTouchedCallback;\n/** @type {?} */\nCheckboxComponent.prototype.onChangeCallback;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport {FormsModule} from '@angular/forms';\n\nimport { CheckboxComponent } from './checkbox.component';\nexport class CheckboxModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [FormsModule],\n    exports: [CheckboxComponent],\n    declarations: [CheckboxComponent]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction CheckboxModule_tsickle_Closure_declarations() {\n/** @type {?} */\nCheckboxModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nCheckboxModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { ColumnSortingDirective, ColumnSortingOrder } from './column-sorting.directive';\nimport { Component, Input, Output, EventEmitter } from '@angular/core';\nexport class ColumnSortingComponent {\n\n     state: ColumnSortingState;\n     key: string;\n     orderNumber: number;\n     stateChange: EventEmitter<ColumnSortingState> = new EventEmitter<ColumnSortingState>();\nprivate _parent: ColumnSortingDirective;\n    columnSortingState = ColumnSortingState;\n/**\n * @param {?} parent\n * @return {?}\n */\ninitParent(parent: ColumnSortingDirective) {\n        this._parent = parent;\n\n        // watch for any events\n        this._parent.events.subscribe(event => {\n\n            let /** @type {?} */ idx = event.findIndex(column => column.key === this.key);\n\n            if (idx == -1) {\n                this.state = ColumnSortingState.NoSort;\n            }\n\n            // only store the number if we have 2 or more columns being sorted\n            if (event.length > 1) {\n                this.orderNumber = idx === -1 ? null : idx + 1;\n            } else {\n                this.orderNumber = null;\n            }\n\n            this.stateChange.emit(this.state);\n\n        });\n    }\n/**\n * @return {?}\n */\nchangeState(): ColumnSortingOrder[] {\n\n        if (this.state === ColumnSortingState.Ascending) {\n            this.state = ColumnSortingState.Descending;\n        } else if (this.state === ColumnSortingState.Descending) {\n            this.state = ColumnSortingState.NoSort;\n        } else {\n            this.state = ColumnSortingState.Ascending;\n        }\n\n        // inform parent\n        return this._parent.toggleColumn(this.key, this.state);\n\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-column-sorting',\n    template: `\n      <div class=\"ux-column-sorting\">\n          <i class=\"ux-column-sorting-icon hpe-icon\" \n              [class.hpe-ascend]=\"state === columnSortingState.Ascending\" \n              [class.hpe-descend]=\"state === columnSortingState.Descending\" \n              [class.column-sorting-icon-hidden]=\"state === columnSortingState.NoSort\"></i>\n          <p class=\"ux-column-sorting-number\">{{ orderNumber }}</p>\n      </div>\n    `,\n    exportAs: 'ux-column-sorting'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'state': [{ type: Input },],\n'key': [{ type: Input },],\n'orderNumber': [{ type: Input },],\n'stateChange': [{ type: Output },],\n};\n}\n\nfunction ColumnSortingComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nColumnSortingComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nColumnSortingComponent.ctorParameters;\n/** @type {?} */\nColumnSortingComponent.propDecorators;\n/** @type {?} */\nColumnSortingComponent.prototype.state;\n/** @type {?} */\nColumnSortingComponent.prototype.key;\n/** @type {?} */\nColumnSortingComponent.prototype.orderNumber;\n/** @type {?} */\nColumnSortingComponent.prototype.stateChange;\n/** @type {?} */\nColumnSortingComponent.prototype._parent;\n/** @type {?} */\nColumnSortingComponent.prototype.columnSortingState;\n}\n\nexport type ColumnSortingState = number;\nexport let ColumnSortingState: any = {};\nColumnSortingState.Ascending = 0;\nColumnSortingState.Descending = 1;\nColumnSortingState.NoSort = 2;\nColumnSortingState[ColumnSortingState.Ascending] = \"Ascending\";\nColumnSortingState[ColumnSortingState.Descending] = \"Descending\";\nColumnSortingState[ColumnSortingState.NoSort] = \"NoSort\";\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { ColumnSortingComponent, ColumnSortingState } from './column-sorting.component';\nimport { Directive, Host, QueryList, ContentChildren, Input } from '@angular/core';\nimport { Subject } from 'rxjs/Subject';\nexport class ColumnSortingDirective {\n\n     singleSort: boolean;\n     components: QueryList<ColumnSortingComponent>;\n\n    events: Subject<ColumnSortingOrder[]> = new Subject<ColumnSortingOrder[]>();\n    order: ColumnSortingOrder[] = [];\n/**\n * @return {?}\n */\nngAfterViewInit() {\n        this.components.forEach(component => component.initParent(this));\n    }\n/**\n * @param {?} key\n * @param {?} state\n * @return {?}\n */\ntoggleColumn(key: string, state: ColumnSortingState) {\n\n        if (this.singleSort) {\n            if (state === ColumnSortingState.NoSort) {\n                this.order = [];\n            } else {\n                this.order = [{key: key, state: state}];\n            }\n        } else {\n            // reorder columns here\n            let /** @type {?} */ idx = this.order.findIndex(column => column.key === key);\n\n            // if wasnt previously selected add to list\n            if (idx === -1) {\n                this.order.push({ key: key, state: state});\n            } else if (state === ColumnSortingState.Ascending || state === ColumnSortingState.Descending) {\n                this.order.splice(idx, 1);\n                this.order.push({ key: key, state: state});\n            } else {\n                this.order.splice(idx, 1);\n            }\n        }\n\n            this.events.next(this.order);\n            // return the order\n            return this.order;\n\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: '[uxColumnSorting]'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'singleSort': [{ type: Input },],\n'components': [{ type: ContentChildren, args: [ColumnSortingComponent, ] },],\n};\n}\n\nfunction ColumnSortingDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nColumnSortingDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nColumnSortingDirective.ctorParameters;\n/** @type {?} */\nColumnSortingDirective.propDecorators;\n/** @type {?} */\nColumnSortingDirective.prototype.singleSort;\n/** @type {?} */\nColumnSortingDirective.prototype.components;\n/** @type {?} */\nColumnSortingDirective.prototype.events;\n/** @type {?} */\nColumnSortingDirective.prototype.order;\n}\n\n\nexport interface ColumnSortingOrder {\n    key: string;\n    state: ColumnSortingState; \n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\n\nimport { ColumnSortingComponent } from './column-sorting.component';\n\nimport { ColumnSortingDirective } from './column-sorting.directive';\nexport class ColumnSortingModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    exports: [ColumnSortingComponent, ColumnSortingDirective],\n    declarations: [ColumnSortingComponent, ColumnSortingDirective]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ColumnSortingModule_tsickle_Closure_declarations() {\n/** @type {?} */\nColumnSortingModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nColumnSortingModule.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable } from '@angular/core';\nimport { DashboardWidgetComponent } from './widget/dashboard-widget.component';\nimport { DashboardOptions } from './dashboard.component';\nimport { Subject } from 'rxjs/Subject';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nexport class DashboardService {\nprivate _dashboard: HTMLElement;\nprivate _widgets: DashboardWidgetComponent[] = [];\nprivate _options: DashboardOptions;\nprivate _options$: Subject<DashboardOptions> = new Subject<DashboardOptions>();\nprivate _placeholder: DashboardPlaceholder = { visible: false, x: 0, y: 0, width: 0, height: 0 };\nprivate _widgetOrigin: { column?: number, row?: number, columnSpan?: number, rowSpan?: number };\nprivate _dimensions: DashboardDimensions = {};\nprivate _actionWidget: DashboardAction;\nprivate _columnWidth: number = 0;\nprivate _rowHeight: number = 0;\nprivate _stacked: boolean = false;\nprivate _cache: DashboardCache[];\nprivate _mouseEvent: MouseEvent;\nprivate _defaultOptions: DashboardOptions = {\n        columns: 5,\n        padding: 5,\n        minWidth: 100,\n        minHeight: 100,\n        emptyRow: true\n    };\n\n    height: BehaviorSubject<number> = new BehaviorSubject<number>(0);\n    layout: Subject<DashboardLayoutData[]> = new Subject<DashboardLayoutData[]>();\n/**\n * Return all the options currently being used as a subject\n * @return {?}\n */\noptions(): Subject<DashboardOptions> {\n        return this._options$;\n    }\n/**\n * Return all the options currently being used\n * @return {?}\n */\ngetOptions(): DashboardOptions {\n        return this._options;\n    }\n/**\n * Get all the default dashboard options\n * @return {?}\n */\ngetDefaultOptions(): DashboardOptions {\n        return this._defaultOptions;\n    }\n/**\n * Set the options - automatically set default values where not specified\n * @param {?} options The DashboardOptions that will configure the dashboard\n * @return {?}\n */\nsetOptions(options: DashboardOptions): void {\n        this._options = Object.assign({}, this._defaultOptions, options);\n\n        // update the observable\n        this._options$.next(this._options);\n    }\n/**\n * Allow uniform spacing around each widget\n * @param {?} padding The number of pixels around each widget\n * @return {?}\n */\nsetPadding(padding: number) {\n        this._options.padding = padding;\n        this.options().next(this._options);\n    }\n/**\n * Set the dashboard container element\n * @param {?} dashboard The HTMLElement that is the dashboard container\n * @return {?}\n */\nsetDashboard(dashboard: HTMLElement): void {\n        this._dashboard = dashboard;\n    }\n/**\n * Add a widget to the dashboard\n * @param {?} widget The widget component to add to the dashboard\n * @return {?}\n */\naddWidget(widget: DashboardWidgetComponent): void {\n        this._widgets.push(widget);\n        \n        // re-render the dashboard\n        this.renderDashboard();\n    }\n/**\n * Remove a widget from the dashboard\n * @param {?} widget The widget to remove\n * @return {?}\n */\nremoveWidget(widget: DashboardWidgetComponent): void {\n\n        // remove a widget from the dashboard\n        this._widgets = this._widgets.filter(wgt => wgt !== widget);\n        \n        // re-render the dashboard\n        this.renderDashboard();\n    }\n/**\n * Indicate that the dashboard element has been resized\n * @param {?} width The width of the dashboard element in px\n * @param {?} height The height of the dashboard element in px\n * @return {?}\n */\nsetDimensions(width: number, height: number): void {\n        this._dimensions.width = width;\n        this._dimensions.height = height;\n\n        // trigger re-render\n        this.renderDashboard();\n    }\n/**\n * Produce an object containing all the required layout data.\n * This can be useful for exporting/saving a layout\n * @return {?}\n */\ngetLayoutData(): DashboardLayoutData[] {\n        return this._widgets.map(widget => {\n            return { id: widget.getId(), col: widget.getColumn(), row: widget.getRow(), colSpan: widget.getColumnSpan(), rowSpan: widget.getRowSpan() };\n        });\n    }\n/**\n * Position widgets programatically\n * @param {?} layout\n * @return {?}\n */\nsetLayoutData(layout: DashboardLayoutData[]): void {\n        // iterate through each widget data and find a match\n        layout.forEach(widget => {\n\n            // find the matching widget\n            let /** @type {?} */ target = this._widgets.find(wgt => wgt.getId() === widget.id);\n\n            if (target) {\n                target.setColumn(widget.col);\n                target.setRow(widget.row);\n                target.setColumnSpan(widget.colSpan);\n                target.setRowSpan(widget.rowSpan);\n            }\n        });\n    }\n/**\n * Update the positions and sizes of the widgets\n * @return {?}\n */\nrenderDashboard(): void {\n\n        // do nothing if chart options haven't yet been initialised\n        if (!this._options) {\n            return;\n        }\n\n        // get the dimensions of the dashboard\n        this._columnWidth = this._dimensions.width / this._options.columns;\n        this._rowHeight = this._options.rowHeight || this._columnWidth;\n\n        // ensure the column width is not below the min widths\n        if (this._columnWidth < this._options.minWidth) {\n            this.setStacked(true);\n        } else {\n            this.setStacked(false);\n        }\n\n        // ensure the row height is not below the min widths\n        if (this._rowHeight < this._options.minWidth) {\n            this._rowHeight = this._options.minWidth;\n        }\n\n        this.setDashboardLayout();\n\n        // iterate through each widget and set the size - except the one being resized\n        this._widgets.filter(widget => !this._actionWidget || widget !== this._actionWidget.widget)\n            .forEach(widget => widget.render());\n    }\n/**\n * Determine where widgets should be positioned based on their positions, width and the size of the container\n * @return {?}\n */\nsetDashboardLayout(): void {\n\n        // find any widgets that do not currently have a position set\n        this._widgets.filter(widget => widget.getColumn() === undefined || widget.getRow() === undefined)\n            .forEach(widget => this.setWidgetPosition(widget));\n\n        this.setDashboardHeight();\n    }\n/**\n * @param {?} stacked\n * @return {?}\n */\nsetStacked(stacked: boolean): void {\n\n        // only do the following if the stacked state has changed\n        if (stacked === this._stacked) {\n            return;\n        }\n\n        // store the stacked state\n        this._stacked = stacked;\n\n        // update the stacked state for all widgets\n        this._widgets.forEach(widget => widget.setStacked(this._stacked));\n\n        // if stacked is true we need to do some reordering etc..\n        if (stacked === true) {\n\n            // iterate through each widget set it's stacked state and\n            this.getWidgetsByOrder().forEach((widget, idx) => {\n                widget.setStacked(true);\n                widget.setColumn(0);\n                widget.setRow(idx);\n            });\n        }\n\n    }\n/**\n * @return {?}\n */\ngetWidgetsByOrder(): DashboardWidgetComponent[] {\n        return this._widgets.sort((w1, w2) => {\n\n            let /** @type {?} */ w1Position = w1.getColumn() * w1.getRow();\n            let /** @type {?} */ w2Position = w2.getColumn() * w2.getRow();\n\n            if (w1Position < w2Position) {\n                return -1;\n            }\n\n            if (w1Position > w2Position) {\n                return 1;\n            }\n\n            return 0;\n        });\n    }\n/**\n * Find a position that a widget can fit in the dashboard\n * @param {?} widget The widget to try and position\n * @return {?}\n */\nsetWidgetPosition(widget: DashboardWidgetComponent): void {\n\n        // find a position for the widget\n        let /** @type {?} */ position = 0;\n        let /** @type {?} */ success = false;\n\n        // repeat until a space is found\n        while (!success) {\n\n            // get a position to try\n            let /** @type {?} */ column = position % this._options.columns;\n            let /** @type {?} */ row = Math.floor(position / this._options.columns);\n\n            // check the current position\n            if (this.getPositionAvailable(column, row, widget.getColumnSpan(), widget.getRowSpan())) {\n                success = true;\n                widget.setColumn(column);\n                widget.setRow(row);\n                return;\n            }\n\n            position++;\n        }\n    }\n/**\n * Check if a position in the dashboard is vacant or not\n * @param {?} column\n * @param {?} row\n * @param {?} columnSpan\n * @param {?} rowSpan\n * @param {?=} ignoreWidget\n * @return {?}\n */\ngetPositionAvailable(column: number, row: number, columnSpan: number, rowSpan: number, ignoreWidget?: DashboardWidgetComponent): boolean {\n\n        // get a list of grid spaces that are populated\n        let /** @type {?} */ spaces = this.getOccupiedSpaces();\n\n        // check if the block would still be in bounds\n        if (column + columnSpan > this._options.columns) {\n            return false;\n        }\n\n        // check each required position\n        for (let /** @type {?} */ x = column; x < column + columnSpan; x++) {\n            for (let /** @type {?} */ y = row; y < row + rowSpan; y++) {\n                if (spaces.find(block => block.column === x && block.row === y && block.widget !== ignoreWidget)) {\n                    return false;\n                }\n            }\n        }\n\n        return true;\n    }\n/**\n * @return {?}\n */\ngetOccupiedSpaces(): DashboardSpace[] {\n\n        // find all spaces that are currently occupied\n        return this._widgets.filter(widget => widget.getColumn() !== undefined && widget.getRow() !== undefined)\n            .reduce((value, widget) => {\n\n                this.forEachBlock(widget, (column, row) => value.push({ widget: widget, column: column, row: row }));\n\n                return value;\n            }, []);\n    }\n/**\n * Begin resizing a widget\n * @param {?} action The the widget to resize\n * @return {?}\n */\nonResizeStart(action: DashboardAction): void {\n\n        // store the mouse event\n        this._mouseEvent = action.event;\n        this._actionWidget = action;\n\n        // bring the widget to the font\n        this.bringToFront(action.widget);\n    }\n/**\n * @param {?} action\n * @return {?}\n */\nonResizeDrag(action: DashboardAction): void {\n\n        // if there was no movement then do nothing\n        if (action.event.x === this._mouseEvent.x && action.event.y === this._mouseEvent.y) {\n            return;\n        }\n\n        // update the stored mouse event\n        this._mouseEvent = action.event;\n\n        // get handle for direction\n        let /** @type {?} */ handle = action.widget.getHandles().find(hnd => hnd.direction === action.direction);\n\n        // get the bounds of the handle\n        let /** @type {?} */ bounds = handle.element.getBoundingClientRect();\n\n        // get the center of the handle\n        let /** @type {?} */ centerX = bounds.left + (bounds.width / 2);\n        let /** @type {?} */ centerY = bounds.top + (bounds.height / 2);\n\n        // get the current mouse position\n        let /** @type {?} */ mouseX = action.event.x - centerX;\n        let /** @type {?} */ mouseY = action.event.y - centerY;\n\n        // store the new proposed dimensions for the widget\n        let /** @type {?} */ dimensions: DashboardWidgetDimensions = {\n            x: action.widget.actualX,\n            y: action.widget.actualY,\n            width: action.widget.actualWidth,\n            height: action.widget.actualHeight\n        };\n\n        // update widget based on the handle being dragged\n        switch (action.direction) {\n\n            case ActionDirection.Right:\n                dimensions.width += mouseX;\n                break;\n\n            case ActionDirection.Left:\n                dimensions.x += mouseX;\n                dimensions.width -= mouseX;\n\n                if (dimensions.width < this._options.minWidth) {\n                    let /** @type {?} */ difference = this._options.minWidth - dimensions.width;\n                    dimensions.x -= difference;\n                    dimensions.width += difference;\n                }\n\n                break;\n\n            case ActionDirection.Bottom:\n                dimensions.height += mouseY;\n                break;\n\n            case ActionDirection.Top:\n                dimensions.y += mouseY;\n                dimensions.height -= mouseY;\n\n                if (dimensions.height < this._options.minHeight) {\n                    let /** @type {?} */ difference = this._options.minHeight - dimensions.height;\n                    dimensions.y -= difference;\n                    dimensions.height += difference;\n                }\n                break;\n\n            // Support resizing on multiple axis simultaneously\n            case ActionDirection.TopLeft:\n\n                dimensions.x += mouseX;\n                dimensions.width -= mouseX;\n\n                if (dimensions.width < this._options.minWidth) {\n                    let /** @type {?} */ difference = this._options.minWidth - dimensions.width;\n                    dimensions.x -= difference;\n                    dimensions.width += difference;\n                }\n\n                dimensions.y += mouseY;\n                dimensions.height -= mouseY;\n\n                if (dimensions.height < this._options.minHeight) {\n                    let /** @type {?} */ difference = this._options.minHeight - dimensions.height;\n                    dimensions.y -= difference;\n                    dimensions.height += difference;\n                }\n                break;\n\n            case ActionDirection.TopRight:\n                dimensions.width += mouseX;\n                dimensions.y += mouseY;\n                dimensions.height -= mouseY;\n\n                if (dimensions.height < this._options.minHeight) {\n                    let /** @type {?} */ difference = this._options.minHeight - dimensions.height;\n                    dimensions.y -= difference;\n                    dimensions.height += difference;\n                }\n                break;\n\n            case ActionDirection.BottomLeft:\n                dimensions.height += mouseY;\n                dimensions.x += mouseX;\n                dimensions.width -= mouseX;\n\n                if (dimensions.width < this._options.minWidth) {\n                    let /** @type {?} */ difference = this._options.minWidth - dimensions.width;\n                    dimensions.x -= difference;\n                    dimensions.width += difference;\n                }\n                break;\n\n            case ActionDirection.BottomRight:\n                dimensions.height += mouseY;\n                dimensions.width += mouseX;\n                break;\n        }\n\n        let /** @type {?} */ currentWidth = action.widget.actualX + action.widget.actualWidth;\n        let /** @type {?} */ currentHeight = action.widget.actualY + action.widget.actualHeight;\n\n        // ensure values are within the dashboard bounds\n        if (dimensions.x < 0) {\n            dimensions.x = 0;\n            dimensions.width = currentWidth;\n        }\n\n        if (dimensions.y < 0) {\n            dimensions.y = 0;\n            dimensions.height = currentHeight;\n        }\n\n        if ((dimensions.x + dimensions.width) > this._dimensions.width) {\n            dimensions.width = this._dimensions.width - dimensions.x;\n        }\n\n        if ((dimensions.y + dimensions.height) > this._dimensions.height) {\n            dimensions.height = currentHeight;\n        }\n\n        // if the proposed width is smaller than allowed then reset width to minimum and ignore x changes\n        if (dimensions.width < this._options.minWidth) {\n            dimensions.x = action.widget.actualX;\n            dimensions.width = this._options.minWidth;\n        }\n\n        // if the proposed height is smaller than allowed then reset height to minimum and ignore y changes\n        if (dimensions.height < this._options.minHeight) {\n            dimensions.y = action.widget.actualY;\n            dimensions.height = this._options.minHeight;\n        }\n\n        // update the widget actual values\n        action.widget.setBounds(dimensions.x, dimensions.y, dimensions.width, dimensions.height);\n\n        // update placeholder position and value\n        this.setPlaceholderBounds(true, dimensions.x, dimensions.y, dimensions.width, dimensions.height);\n\n        // show the widget positions if the current positions and sizes were to persist\n        this.updateWidgetPositions(action.widget);\n    }\n/**\n * @return {?}\n */\nonResizeEnd(): void {\n\n        // commit resize changes\n        this.commitWidgetChanges();\n\n        // hide placeholder\n        this.getPlaceholder().visible = false;\n\n        this._actionWidget = null;\n        this._mouseEvent = null;\n\n        // ensure any vacant upper spaces are filled where required\n        this.shiftWidgetsUp();\n\n        // update dashboard height\n        this.setDashboardHeight();\n\n        // emit information about the layout\n        this.layout.next(this.getLayoutData());\n    }\n/**\n * @param {?} action\n * @return {?}\n */\nonDragStart(action: DashboardAction): void {\n        this.onResizeStart(action);\n\n        // store the starting placeholder position\n        this.setWidgetOrigin();\n\n        this.cacheWidgets();\n    }\n/**\n * @return {?}\n */\nonDragEnd(): void {\n        this.onResizeEnd();\n\n        this._widgetOrigin = {};\n    }\n/**\n * @param {?} action\n * @return {?}\n */\nonDrag(action: DashboardAction): void {\n\n        // if there was no movement then do nothing\n        if (action.event.pageX === this._mouseEvent.pageX && action.event.pageY === this._mouseEvent.pageY) {\n            return;\n        }\n\n        // get the current mouse position\n        let /** @type {?} */ mouseX = action.event.pageX - this._mouseEvent.pageX;\n        let /** @type {?} */ mouseY = action.event.pageY - this._mouseEvent.pageY;\n\n        // store the latest event\n        this._mouseEvent = action.event;\n\n        let /** @type {?} */ dimensions: DashboardWidgetDimensions = {\n            x: action.widget.actualX + mouseX,\n            y: action.widget.actualY + mouseY,\n            width: action.widget.actualWidth,\n            height: action.widget.actualHeight\n        };\n\n        this.restoreWidgets(true);\n\n        // update widget position\n        action.widget.setBounds(dimensions.x, dimensions.y, dimensions.width, dimensions.height);\n\n        // update placeholder position and value\n        this.setPlaceholderBounds(true, dimensions.x, dimensions.y, dimensions.width, dimensions.height);\n\n        // show the widget positions if the current positions and sizes were to persist\n        this.shiftWidgets();\n\n        this.setDashboardHeight();\n    }\n/**\n * @return {?}\n */\ncacheWidgets(): void {\n        this._cache = this._widgets.map(widget => {\n            return {\n                id: widget.getId(),\n                column: widget.getColumn(),\n                row: widget.getRow()\n            };\n        });\n    }\n/**\n * @param {?=} ignoreActionWidget\n * @return {?}\n */\nrestoreWidgets(ignoreActionWidget: boolean = false): void {\n        this._cache.filter(widget => !ignoreActionWidget || widget.id !== this._actionWidget.widget.getId()).forEach(widget => {\n            let /** @type {?} */ match = this._widgets.find(wgt => wgt.getId() === widget.id);\n\n            if (match) {\n                match.setColumn(widget.column);\n                match.setRow(widget.row);\n            }\n        });\n    }\n/**\n * When dragging any widgets that need to be moved should be moved to an appropriate position\n * @return {?}\n */\nshiftWidgets(): void {\n\n        let /** @type {?} */ widgetsToMove: DashboardWidgetComponent[] = [];\n\n        // check if there are any widgets under the placeholder\n        for (let /** @type {?} */ row = this.getPlaceholder().row; row < this.getPlaceholder().row + this.getPlaceholder().rowSpan; row++) {\n            for (let /** @type {?} */ column = this.getPlaceholder().column; column < this.getPlaceholder().column + this.getPlaceholder().columnSpan; column++) {\n\n                // store reference to any widgets that need moved\n                this.getOccupiedSpaces()\n                    .filter(space => space.column === column && space.row === row && space.widget !== this._actionWidget.widget)\n                    .forEach(space => widgetsToMove.push(space.widget));\n            }\n        }\n\n        // remove any duplicates\n        widgetsToMove = widgetsToMove.filter((widget, idx, array) => array.indexOf(widget) === idx);\n\n        // if no widgets need moved then we can stop here\n        if (widgetsToMove.length === 0) {\n            return;\n        }\n\n        // create a duplicate we can use to keep track of which have been moved\n        let /** @type {?} */ unmovedWidgets = widgetsToMove.slice();\n\n        // attempt to move any widgets to the previous widget position\n        widgetsToMove.forEach(widget => {\n\n            // get a grid off all occupied spaces - taking into account the placeholder and ignoring widgets that need moved\n            let /** @type {?} */ grid = this.getOccupiedSpaces().filter(space => !unmovedWidgets.find(wgt => wgt === space.widget));\n\n            // iterate each free block\n            for (let /** @type {?} */ row = this._widgetOrigin.row; row < this._widgetOrigin.row + this._widgetOrigin.rowSpan; row++) {\n                for (let /** @type {?} */ column = this._widgetOrigin.column; column < this._widgetOrigin.column + this._widgetOrigin.columnSpan; column++) {\n\n                    // determine if the block can fit in this space\n                    let /** @type {?} */ requiredSpaces = this.getRequiredSpacesFromPoint(widget, column, row);\n\n                    // check if widget would fit in space\n                    let /** @type {?} */ available = requiredSpaces.every(space => {\n                        return !grid.find(gridSpace => gridSpace.column === space.column && gridSpace.row === space.row) && space.column < this.getColumnCount();\n                    });\n\n                    if (available) {\n                        widget.setColumn(column);\n                        widget.setRow(row);\n                        unmovedWidgets.splice(unmovedWidgets.findIndex(wgt => wgt === widget), 1);\n                        return;\n                    }\n                }\n            }\n\n            // if we get to here then we can't simply swap the positions - next try moving right\n            if (this.canWidgetMoveRight(widget, true)) {\n\n                // after the shift check if placeholder position is still valid\n                this.validatePlaceholderPosition(ActionDirection.Right);\n                return;\n            }\n\n            // next try moving left\n            if (this.canWidgetMoveLeft(widget, true)) {\n\n                // after the shift check if placeholder position is still valid\n                this.validatePlaceholderPosition(ActionDirection.Left);\n                return;\n            }\n\n            // determine the distance that the widget needs to be moved down\n            let /** @type {?} */ distance = (this._actionWidget.widget.getRow() - widget.getRow()) + this._actionWidget.widget.getRowSpan();\n\n            // as a last resort move the widget downwards\n            this.moveWidgetDown(widget, distance);\n        });\n    }\n/**\n * After shifts have taken place we should verify the place holder position is still valid\n * @param {?} shiftDirection - the position widgets were shifted\n * @return {?}\n */\nvalidatePlaceholderPosition(shiftDirection: ActionDirection) {\n\n        // check if the placeholder is over a widget\n        if (this.getWidgetsAtPosition(this.getPlaceholder().column, this.getPlaceholder().row, true).length > 0) {\n\n            // move the placeholder the opposite direction\n            switch (shiftDirection) {\n\n                case ActionDirection.Left:\n                    this.setPlaceholderBounds(this.getPlaceholder().visible, this.getPlaceholder().x + this.getColumnWidth(), this.getPlaceholder().y, this.getPlaceholder().width, this.getPlaceholder().height);\n                    break;\n\n                case ActionDirection.Right:\n                    this.setPlaceholderBounds(this.getPlaceholder().visible, this.getPlaceholder().x - this.getColumnWidth(), this.getPlaceholder().y, this.getPlaceholder().width, this.getPlaceholder().height);\n                    break;\n            }\n\n            // validate this new position again\n            this.validatePlaceholderPosition(shiftDirection);\n        }\n    }\n/**\n * Determine if a widget can be moved left - or if it can move the widgets to the right to make space for the widget\n * @param {?} widget\n * @param {?=} performMove\n * @return {?}\n */\ncanWidgetMoveLeft(widget: DashboardWidgetComponent, performMove: boolean = false): boolean {\n\n        // check if the widget is the action widget or occupies the first column\n        if (widget === this._actionWidget.widget || widget.getColumn() === 0) {\n            return false;\n        }\n\n        // find the positions required\n        let /** @type {?} */ targetSpaces = this.getOccupiedSpaces().filter(space => space.widget === widget).map(space => {\n            return { column: space.column - widget.getColumnSpan(), row: space.row, widget: space.widget };\n        });\n\n        // check if there are widget in the required positions and if so, can they move right?\n        let /** @type {?} */ moveable = targetSpaces.every(space => this.getWidgetsAtPosition(space.column, space.row).filter(wgt => wgt !== space.widget).every(wgt => this.canWidgetMoveLeft(wgt)));\n\n        if (performMove && moveable) {\n\n            // move all widgets to the right\n            targetSpaces.forEach(space => this.getWidgetsAtPosition(space.column, space.row).filter(wgt => wgt !== space.widget).forEach(wgt => this.canWidgetMoveLeft(wgt, true)));\n\n            // move current widget to the right\n            widget.setColumn(widget.getColumn() - 1);\n        }\n\n        return moveable;\n    }\n/**\n * Determine if a widget can be moved right - or if it can move the widgets to the right to make space for the widget\n * @param {?} widget\n * @param {?=} performMove\n * @return {?}\n */\ncanWidgetMoveRight(widget: DashboardWidgetComponent, performMove: boolean = false): boolean {\n\n        // check if the widget is the dragging widget or the widget occupies the final column\n        if (widget === this._actionWidget.widget || widget.getColumn() + widget.getColumnSpan() === this._options.columns) {\n            return false;\n        }\n\n        // find the positions required\n        let /** @type {?} */ targetSpaces = this.getOccupiedSpaces().filter(space => space.widget === widget).map(space => {\n            return { column: space.column + widget.getColumnSpan(), row: space.row, widget: space.widget };\n        });\n\n        // check if there are widget in the required positions and if so, can they move right?\n        let /** @type {?} */ moveable = targetSpaces.every(space => this.getWidgetsAtPosition(space.column, space.row).filter(wgt => wgt !== space.widget).every(wgt => this.canWidgetMoveRight(wgt)));\n\n        if (performMove && moveable) {\n\n            // move all widgets to the right\n            targetSpaces.forEach(space => this.getWidgetsAtPosition(space.column, space.row).filter(wgt => wgt !== space.widget).forEach(wgt => this.canWidgetMoveRight(wgt, true)));\n\n            // move current widget to the right\n            widget.setColumn(widget.getColumn() + 1);\n        }\n\n        return moveable;\n    }\n/**\n * Store the initial position of the widget being dragged\n * @return {?}\n */\nsetWidgetOrigin(): void {\n        this._widgetOrigin = {\n            column: this._actionWidget.widget.getColumn(),\n            row: this._actionWidget.widget.getRow(),\n            columnSpan: this._actionWidget.widget.getColumnSpan(),\n            rowSpan: this._actionWidget.widget.getRowSpan()\n        };\n    }\n/**\n * Calculate all the required positions is a widget was to be positioned at a particular point\n * @param {?} widget\n * @param {?} column\n * @param {?} row\n * @return {?}\n */\ngetRequiredSpacesFromPoint(widget: DashboardWidgetComponent, column: number, row: number): DashboardSpace[] {\n        let /** @type {?} */ spaces: DashboardSpace[] = [];\n\n        for (let /** @type {?} */ y = row; y < row + widget.getRowSpan(); y++) {\n            for (let /** @type {?} */ x = column; x < column + widget.getColumnSpan(); x++) {\n                spaces.push({ column: x, row: y, widget: widget });\n            }\n        }\n\n        return spaces;\n    }\n/**\n * Position widgets based on the position of the placeholder - this is temporary until confirmed\n * @param {?} widget\n * @return {?}\n */\nupdateWidgetPositions(widget: DashboardWidgetComponent) {\n\n        // check all spaces the placeholder will occupy and move any widget currently in them down\n        for (let /** @type {?} */ column = this._placeholder.column; column < this._placeholder.column + this._placeholder.columnSpan; column++) {\n            for (let /** @type {?} */ row = this._placeholder.row; row < this._placeholder.row + this._placeholder.rowSpan; row++) {\n\n                this.getWidgetsAtPosition(column, row, true)\n                    .filter(wgt => wgt !== widget)\n                    .forEach(wgt => this.moveWidgetDown(wgt));\n            }\n        }\n\n        // update the height of the dashboard\n        this.setDashboardHeight();\n\n        // if we arent dragging the top handle then fill spaces\n        if (this._actionWidget.direction !== ActionDirection.Top &&\n            this._actionWidget.direction !== ActionDirection.TopLeft &&\n            this._actionWidget.direction !== ActionDirection.TopRight) {\n            this.shiftWidgetsUp();\n        }\n    }\n/**\n * Determine if a widget is occupying a specific row and column\n * @param {?} column The columns to check if occupied\n * @param {?} row The row to check if occupied\n * @param {?=} ignoreResizing Whether or not to ignore the widget currently being resized\n * @return {?}\n */\ngetWidgetsAtPosition(column: number, row: number, ignoreResizing: boolean = false): DashboardWidgetComponent[] {\n        return this.getOccupiedSpaces()\n            .filter(space => space.column === column && space.row === row)\n            .filter(space => space.widget !== this._actionWidget.widget || !ignoreResizing)\n            .map(space => space.widget);\n    }\n/**\n * Update the placeholder visibility, position and size\n * @param {?} visible\n * @param {?} x\n * @param {?} y\n * @param {?} width\n * @param {?} height\n * @return {?}\n */\nsetPlaceholderBounds(visible: boolean, x: number, y: number, width: number, height: number): void {\n\n        let /** @type {?} */ rounding = this._actionWidget.direction === ActionDirection.Left ||\n            this._actionWidget.direction === ActionDirection.Top ? Rounding.RoundDownBelowHalf : Rounding.RoundUpOverHalf;\n\n        this._placeholder.visible = visible;\n\n        this._placeholder.column = this.getPlaceholderColumn(x, width);\n        this._placeholder.row = this.getPlaceholderRow(y, height);\n        this._placeholder.columnSpan = this.getPlaceholderColumnSpan(width);\n        this._placeholder.rowSpan = this.getPlaceholderRowSpan(height);\n\n        // calculate the maximum number of rows\n        let /** @type {?} */ rowCount = this._widgets.filter(widget => widget !== this._actionWidget.widget)\n            .reduce((previous, widget) => Math.max(widget.getRow() + widget.getRowSpan(), previous), 0);\n\n        // constrain maximum placeholder row\n        this._placeholder.row = Math.min(this._placeholder.row, rowCount);\n\n        this._placeholder.x = (this._placeholder.column * this.getColumnWidth()) + this._options.padding;\n        this._placeholder.y = (this._placeholder.row * this.getRowHeight()) + this._options.padding;\n        this._placeholder.width = (this._placeholder.columnSpan * this.getColumnWidth()) - (this._options.padding * 2);\n        this._placeholder.height = (this._placeholder.rowSpan * this.getRowHeight()) - (this._options.padding * 2);\n\n        // set the values of the widget to match the values of the placeholder - however do not render the changes\n        this._actionWidget.widget.setColumn(this._placeholder.column, false);\n        this._actionWidget.widget.setRow(this._placeholder.row, false);\n        this._actionWidget.widget.setColumnSpan(this._placeholder.columnSpan, false);\n        this._actionWidget.widget.setRowSpan(this._placeholder.rowSpan, false);\n    }\n/**\n * Get the placeholder column position\n * @param {?} x\n * @param {?} width\n * @return {?}\n */\ngetPlaceholderColumn(x: number, width: number): number {\n\n        let /** @type {?} */ column = this.getColumnFromPx(x, this._actionWidget.direction === ActionDirection.Move ? Rounding.RoundUpOverHalf : Rounding.RoundDown);\n        let /** @type {?} */ columnSpan = Math.floor(width / this.getColumnWidth());\n        let /** @type {?} */ upperLimit = this.getColumnCount() - columnSpan;\n\n        // if we arent dragging left then just return the column\n        if (this._actionWidget.direction !== ActionDirection.Left &&\n            this._actionWidget.direction !== ActionDirection.TopLeft &&\n            this._actionWidget.direction !== ActionDirection.BottomLeft) {\n            return Math.max(Math.min(column, upperLimit), 0);\n        }\n\n        // get any overflow\n        let /** @type {?} */ overflow = width % this.getColumnWidth();\n\n        return (x <= 0 || overflow === 0 || columnSpan === 0 || overflow > (this.getColumnWidth() / 2)) ?\n            Math.max(Math.min(column, upperLimit), 0) :\n            Math.max(Math.min(column + 1, upperLimit), 0);\n    }\n/**\n * Get the column span of the placeholder\n * @param {?} width\n * @return {?}\n */\ngetPlaceholderColumnSpan(width: number): number {\n\n        let /** @type {?} */ columnSpan = this.getColumnFromPx(width);\n\n        // if we arent dragging right or left then just return the column span\n        if (this._actionWidget.direction !== ActionDirection.Right &&\n            this._actionWidget.direction !== ActionDirection.TopRight &&\n            this._actionWidget.direction !== ActionDirection.BottomRight &&\n            this._actionWidget.direction !== ActionDirection.Left &&\n            this._actionWidget.direction !== ActionDirection.TopLeft &&\n            this._actionWidget.direction !== ActionDirection.BottomLeft) {\n            return Math.max(columnSpan, 1);\n        }\n\n        // get the current column span and any overflow\n        let /** @type {?} */ overflow = width % this.getColumnWidth();\n\n        return (columnSpan > 0 && overflow > (this.getColumnWidth() / 2)) ? Math.max(columnSpan + 1, 1) : Math.max(columnSpan, 1);\n    }\n/**\n * Get the row position of the placeholder\n * @param {?} y\n * @param {?} height\n * @return {?}\n */\ngetPlaceholderRow(y: number, height: number): number {\n\n        let /** @type {?} */ row = this.getRowFromPx(y, this._actionWidget.direction === ActionDirection.Move ? Rounding.RoundUpOverHalf : Rounding.RoundDown);\n        let /** @type {?} */ rowSpan = Math.ceil(height / this.getRowHeight());\n\n        // if we arent dragging up then just return the row\n        if (this._actionWidget.direction !== ActionDirection.Top &&\n            this._actionWidget.direction !== ActionDirection.TopLeft &&\n            this._actionWidget.direction !== ActionDirection.TopRight) {\n            return Math.max(row, 0);\n        }\n\n        // get any overflow\n        let /** @type {?} */ overflow = height < this.getRowHeight() ? 0 : height % this.getRowHeight();\n\n        return (y <= 0 || rowSpan === 0 || overflow === 0 || overflow > (this.getRowHeight() / 2)) ? Math.max(row, 0) : Math.max(row + 1, 0);\n    }\n/**\n * Get the row span of the placeholder\n * @param {?} height\n * @return {?}\n */\ngetPlaceholderRowSpan(height: number): number {\n\n        let /** @type {?} */ rowSpan = this.getRowFromPx(height);\n\n        // if we arent dragging up or down then just return the column span\n        if (this._actionWidget.direction !== ActionDirection.Top &&\n            this._actionWidget.direction !== ActionDirection.TopLeft &&\n            this._actionWidget.direction !== ActionDirection.TopRight &&\n            this._actionWidget.direction !== ActionDirection.Bottom &&\n            this._actionWidget.direction !== ActionDirection.BottomLeft &&\n            this._actionWidget.direction !== ActionDirection.BottomRight) {\n            return Math.max(rowSpan, 1);\n        }\n\n        // get the current column span and any overflow\n        let /** @type {?} */ overflow = height % this.getRowHeight();\n\n        return (overflow > (this.getRowHeight() / 2)) ? Math.max(rowSpan + 1, 1) : Math.max(rowSpan, 1);\n    }\n/**\n * @param {?} x\n * @param {?=} rounding\n * @return {?}\n */\ngetColumnFromPx(x: number, rounding: Rounding = Rounding.RoundDown): number {\n\n        let /** @type {?} */ column = Math.floor(x / Math.floor(this.getColumnWidth()));\n        let /** @type {?} */ overflow = (x % Math.floor(this.getColumnWidth()));\n        let /** @type {?} */ half = this.getColumnWidth() / 2;\n\n        switch (rounding) {\n\n            case Rounding.RoundDown:\n                return column;\n\n            case Rounding.RoundDownBelowHalf:\n                return overflow < half ? column : column + 1;\n\n            case Rounding.RoundUpOverHalf:\n                return overflow > half ? column + 1 : column;\n\n            case Rounding.RoundUp:\n                return overflow > 0 ? column + 1 : column;\n        }\n\n    }\n/**\n * @param {?} y\n * @param {?=} rounding\n * @return {?}\n */\ngetRowFromPx(y: number, rounding: Rounding = Rounding.RoundDown): number {\n\n        let /** @type {?} */ row = Math.floor(y / Math.floor(this.getRowHeight()));\n        let /** @type {?} */ overflow = (y % Math.floor(this.getRowHeight()));\n        let /** @type {?} */ half = this.getRowHeight() / 2;\n\n        switch (rounding) {\n\n            case Rounding.RoundDown:\n                return row;\n\n            case Rounding.RoundDownBelowHalf:\n                return overflow < half ? row : row + 1;\n\n            case Rounding.RoundUpOverHalf:\n                return overflow > half ? row + 1 : row;\n\n            case Rounding.RoundUp:\n                return overflow > 0 ? row + 1 : row;\n        }\n    }\n/**\n * @return {?}\n */\ncommitWidgetChanges(): void {\n\n        // check that we have all the values we need\n        if (this._placeholder.column === undefined || this._placeholder.row === undefined ||\n            this._placeholder.columnSpan === undefined || this._placeholder.rowSpan === undefined) {\n            return;\n        }\n\n        if (this._actionWidget) {\n            this._actionWidget.widget.setColumn(this._placeholder.column);\n            this._actionWidget.widget.setRow(this._placeholder.row);\n            this._actionWidget.widget.setColumnSpan(this._placeholder.columnSpan);\n            this._actionWidget.widget.setRowSpan(this._placeholder.rowSpan);\n        }\n\n        // reset all placeholder values\n        this._placeholder.column = undefined;\n        this._placeholder.row = undefined;\n        this._placeholder.columnSpan = undefined;\n        this._placeholder.rowSpan = undefined;\n    }\n/**\n * @return {?}\n */\ngetPlaceholder(): DashboardPlaceholder {\n        return this._placeholder;\n    }\n/**\n * Get the current column width\n * @return {?}\n */\ngetColumnWidth(): number {\n        return Math.floor(this._columnWidth);\n    }\n/**\n * Get the current column height\n * @return {?}\n */\ngetRowHeight(): number {\n        return this._rowHeight;\n    }\n/**\n * Calculate the number of rows populated with widgets\n * @return {?}\n */\ngetRowCount(): number {\n        return this._widgets.reduce((previous, widget) => Math.max(widget.getRow() + widget.getRowSpan(), previous), 0);\n    }\n/**\n * Set the height of the dashboard container element\n * @return {?}\n */\nsetDashboardHeight(): void {\n\n        // size the dashboard container to ensure all rows fit\n        let /** @type {?} */ rowCount = this.getRowCount();\n\n        // if we should show an empty row increment the row count by 1\n        if (this._options.emptyRow) {\n            rowCount++;\n        }\n\n        this._dimensions.height = rowCount * this.getRowHeight();\n        this.height.next(this._dimensions.height);\n    }\n/**\n * Orders the z-index of all widgets to move the active one to the front\n * @param {?} widget The widget that should be brought to the front\n * @return {?}\n */\nbringToFront(widget: DashboardWidgetComponent): void {\n        this._widgets.forEach(wgt => wgt.sendToBack());\n        widget.bringToFront();\n    }\n/**\n * Move a widget down - if widgets are in the position below, then move them down further\n * @param {?} widget The widget to move downwards\n * @param {?=} distance\n * @return {?}\n */\nmoveWidgetDown(widget: DashboardWidgetComponent, distance: number = 1): void {\n\n        // move the widget down one position\n        widget.setRow(widget.getRow() + distance);\n\n        // check every space the widget occupies for collisions\n        this.forEachBlock(widget, (column, row) =>\n            this.getWidgetsAtPosition(column, row, true)\n                .filter(wgt => wgt !== widget)\n                .forEach(wgt => this.moveWidgetDown(wgt, distance)));\n    }\n/**\n * Widgets should not be allowed to have a vacant space above them - if there is one they should move upwards to fill it\n * @return {?}\n */\nshiftWidgetsUp(): void {\n\n        // check whether or not changes have been made - if so we need to repeat until stable\n        let /** @type {?} */ stable = true;\n\n        // iterate each widget and \n        this._widgets.forEach(widget => {\n\n            // if widget is already on the top row then do nothing\n            if (widget.getRow() === 0) {\n                return;\n            }\n\n            // if we are currently dragging and this is the dragging widget then skip\n            if (this._actionWidget && this._actionWidget.widget === widget) {\n                return;\n            }\n\n            if (this.getPositionAvailable(widget.getColumn(), widget.getRow() - 1, widget.getColumnSpan(), 1)) {\n                widget.setRow(widget.getRow() - 1);\n                stable = false;\n            }\n        });\n\n        // if changes occurred then we should repeat the process\n        if (!stable) {\n            this.shiftWidgetsUp();\n        }\n    }\n/**\n * Iterate over each space a widget occupied\n * @param {?} widget The widget to determine spaces\n * @param {?} callback The function to be called for each space, should expect a column and row argument witht he context being the widget\n * @return {?}\n */\nforEachBlock(widget: DashboardWidgetComponent, callback: (column: number, row: number) => void): void {\n        for (let /** @type {?} */ row = widget.getRow(); row < widget.getRow() + widget.getRowSpan(); row++) {\n            for (let /** @type {?} */ column = widget.getColumn(); column < widget.getColumn() + widget.getColumnSpan(); column++) {\n                callback.call(widget, column, row);\n            }\n        }\n    }\n/**\n * Returns the number of columns available\n * @return {?}\n */\ngetColumnCount(): number {\n        return this._stacked ? 1 : this._options.columns;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction DashboardService_tsickle_Closure_declarations() {\n/** @type {?} */\nDashboardService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDashboardService.ctorParameters;\n/** @type {?} */\nDashboardService.prototype._dashboard;\n/** @type {?} */\nDashboardService.prototype._widgets;\n/** @type {?} */\nDashboardService.prototype._options;\n/** @type {?} */\nDashboardService.prototype._options$;\n/** @type {?} */\nDashboardService.prototype._placeholder;\n/** @type {?} */\nDashboardService.prototype._widgetOrigin;\n/** @type {?} */\nDashboardService.prototype._dimensions;\n/** @type {?} */\nDashboardService.prototype._actionWidget;\n/** @type {?} */\nDashboardService.prototype._columnWidth;\n/** @type {?} */\nDashboardService.prototype._rowHeight;\n/** @type {?} */\nDashboardService.prototype._stacked;\n/** @type {?} */\nDashboardService.prototype._cache;\n/** @type {?} */\nDashboardService.prototype._mouseEvent;\n/** @type {?} */\nDashboardService.prototype._defaultOptions;\n/** @type {?} */\nDashboardService.prototype.height;\n/** @type {?} */\nDashboardService.prototype.layout;\n}\n\n\nexport interface DashboardDimensions {\n    width?: number;\n    height?: number;\n}\n\nexport interface DashboardWidgetDimensions {\n    x: number;\n    y: number;\n    width: number;\n    height: number;\n}\n\nexport interface DashboardAction {\n    widget: DashboardWidgetComponent;\n    direction: ActionDirection;\n    event: MouseEvent;\n}\n\nexport interface DashboardSpace {\n    widget: DashboardWidgetComponent;\n    column: number;\n    row: number;\n}\n\nexport interface DashboardPlaceholder {\n    visible: boolean;\n    x: number;\n    y: number;\n    width: number;\n    height: number;\n    column?: number;\n    row?: number;\n    columnSpan?: number;\n    rowSpan?: number;\n}\n\nexport interface DashboardCache {\n    id: string;\n    column: number;\n    row: number;\n}\n\nexport interface DashboardLayoutData {\n    id: string;\n    col: number;\n    row: number;\n    colSpan: number;\n    rowSpan: number;\n}\nexport type ActionDirection = number;\nexport let ActionDirection: any = {};\nActionDirection.Top = 0;\nActionDirection.TopRight = 1;\nActionDirection.Right = 2;\nActionDirection.BottomRight = 3;\nActionDirection.Bottom = 4;\nActionDirection.BottomLeft = 5;\nActionDirection.Left = 6;\nActionDirection.TopLeft = 7;\nActionDirection.Move = 8;\nActionDirection[ActionDirection.Top] = \"Top\";\nActionDirection[ActionDirection.TopRight] = \"TopRight\";\nActionDirection[ActionDirection.Right] = \"Right\";\nActionDirection[ActionDirection.BottomRight] = \"BottomRight\";\nActionDirection[ActionDirection.Bottom] = \"Bottom\";\nActionDirection[ActionDirection.BottomLeft] = \"BottomLeft\";\nActionDirection[ActionDirection.Left] = \"Left\";\nActionDirection[ActionDirection.TopLeft] = \"TopLeft\";\nActionDirection[ActionDirection.Move] = \"Move\";\n\nexport type Rounding = number;\nexport let Rounding: any = {};\nRounding.RoundDown = 0;\nRounding.RoundDownBelowHalf = 1;\nRounding.RoundUp = 2;\nRounding.RoundUpOverHalf = 3;\nRounding[Rounding.RoundDown] = \"RoundDown\";\nRounding[Rounding.RoundDownBelowHalf] = \"RoundDownBelowHalf\";\nRounding[Rounding.RoundUp] = \"RoundUp\";\nRounding[Rounding.RoundUpOverHalf] = \"RoundUpOverHalf\";\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Input, OnInit, DoCheck, ElementRef, AfterViewInit, NgZone, EventEmitter, Output } from '@angular/core';\nimport { DashboardService, DashboardLayoutData, DashboardPlaceholder } from './dashboard.service';\nimport { ResizeDimensions } from '../../directives/resize/resize.service';\nexport class DashboardComponent implements OnInit, DoCheck, AfterViewInit {\n\n     options: DashboardOptions = {};\n     layout: DashboardLayoutData[];\n     layoutChange: EventEmitter<DashboardLayoutData[]> = new EventEmitter<DashboardLayoutData[]>();\n\n    height: number = 0;\n    placeholder: DashboardPlaceholder = this._dashboardService.getPlaceholder();\nprivate _nativeElement: HTMLElement;\nprivate _options: DashboardOptions;\nprivate _layout: DashboardLayoutData[];\n/**\n * @param {?} _dashboardService\n * @param {?} _elementRef\n * @param {?} _ngZone\n */\nconstructor(private _dashboardService: DashboardService,\nprivate _elementRef: ElementRef,\nprivate _ngZone: NgZone) {\n        this._nativeElement = _elementRef.nativeElement;\n        this._dashboardService.setDashboard(this._nativeElement);\n\n        // watch for changes to component height\n        this._dashboardService.height.subscribe(height => this.height = height);\n\n        // subscribe to layout changes\n        this._dashboardService.layout.subscribe(layout => {\n            this.layout = layout;\n            this.layoutChange.emit(layout);\n        });\n    }\n/**\n * @return {?}\n */\nngOnInit(): void {\n        this.setOptions(this.options);\n    }\n/**\n * @return {?}\n */\nngDoCheck(): void {\n\n        // get the current set of options\n        let /** @type {?} */ options = Object.assign({}, this._dashboardService.getDefaultOptions(), this.options);\n\n        // if anything has changed then update them\n        if (JSON.stringify(this._dashboardService.getOptions()) !== JSON.stringify(options)) {\n            this.setOptions(options);\n        }\n\n        // check if the layout has changed\n        if (JSON.stringify(this.layout) !== JSON.stringify(this._layout)) {\n            this._layout = this.layout.slice();\n            this._dashboardService.setLayoutData(this.layout);\n        }\n    }\n/**\n * @return {?}\n */\nngAfterViewInit(): void {\n        // initially set dimensions\n        this._dashboardService.setDimensions(this._nativeElement.offsetWidth, this._nativeElement.offsetHeight);\n    }\n/**\n * @param {?} options\n * @return {?}\n */\nsetOptions(options: DashboardOptions): void {\n        this._dashboardService.setOptions(options);\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nonResize(event: ResizeDimensions): void {\n        // ensure this gets run inside Angular\n        this._ngZone.run(() => this._dashboardService.setDimensions(event.width, event.height));\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-dashboard',\n    template: `\n      <div (uxResize)=\"onResize($event)\" throttle=\"16\" class=\"dashboard-container\">\n          <ng-content></ng-content>\n      </div>\n\n      <div class=\"position-indicator\" *ngIf=\"placeholder.visible\" [style.left.px]=\"placeholder.x\" [style.top.px]=\"placeholder.y\" [style.width.px]=\"placeholder.width\"\n          [style.height.px]=\"placeholder.height\"></div>\n    `,\n    providers: [DashboardService],\n    host: {\n        '[style.height.px]': 'height'\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: DashboardService, },\n{type: ElementRef, },\n{type: NgZone, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'options': [{ type: Input },],\n'layout': [{ type: Input },],\n'layoutChange': [{ type: Output },],\n};\n}\n\nfunction DashboardComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nDashboardComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDashboardComponent.ctorParameters;\n/** @type {?} */\nDashboardComponent.propDecorators;\n/** @type {?} */\nDashboardComponent.prototype.options;\n/** @type {?} */\nDashboardComponent.prototype.layout;\n/** @type {?} */\nDashboardComponent.prototype.layoutChange;\n/** @type {?} */\nDashboardComponent.prototype.height;\n/** @type {?} */\nDashboardComponent.prototype.placeholder;\n/** @type {?} */\nDashboardComponent.prototype._nativeElement;\n/** @type {?} */\nDashboardComponent.prototype._options;\n/** @type {?} */\nDashboardComponent.prototype._layout;\n/** @type {?} */\nDashboardComponent.prototype._dashboardService;\n/** @type {?} */\nDashboardComponent.prototype._elementRef;\n/** @type {?} */\nDashboardComponent.prototype._ngZone;\n}\n\n\nexport interface DashboardOptions {\n    columns?: number;\n    padding?: number;\n    minWidth?: number;\n    minHeight?: number;\n    rowHeight?: number;\n    emptyRow?: boolean;\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Input, ElementRef, QueryList, ViewChildren, Directive, AfterViewInit, OnInit, OnDestroy } from '@angular/core';\nimport { DashboardService, ActionDirection } from '../dashboard.service';\nimport { Observable } from 'rxjs/Observable';\nimport { Subscription } from 'rxjs/Subscription';\nimport'rxjs/add/operator/takeUntil';\nexport class DashboardWidgetComponent implements OnInit, AfterViewInit, OnDestroy {\n\n     id: string;\n     col: number;\n     row: number;\n     colSpan: number = 1;\n     rowSpan: number = 1;\n     resizable: boolean = false;\n\n    actualX: number = 0;\n    actualY: number = 0;\n    actualWidth: number = 100;\n    actualHeight: number = 100;\n    padding: number = 0;\n    zIndex: number = 0;\n    stacked: boolean = false;\nprivate _column: StackableValue = { regular: undefined, stacked: undefined };\nprivate _row: StackableValue = { regular: undefined, stacked: undefined };\nprivate _columnSpan: StackableValue = { regular: 1, stacked: 1 };\nprivate _rowSpan: StackableValue = { regular: 1, stacked: 1 };\nprivate _nativeElement: HTMLElement;\nprivate _handles: ResizeHandle[];\nprivate _dragMove: Observable<MouseEvent> = Observable.fromEvent(document, 'mousemove');\nprivate _dragEnd: Observable<MouseEvent> = Observable.fromEvent(document, 'mouseup');\n/**\n * @param {?} _dashboardService\n * @param {?} _elementRef\n */\nconstructor(private _dashboardService: DashboardService,\nprivate _elementRef: ElementRef) {\n        this._nativeElement = _elementRef.nativeElement;\n\n        // add the widget to the dashboard\n        _dashboardService.addWidget(this);\n\n        // apply the current options\n        this.applyOptions();\n\n        // watch for changes to the options\n        _dashboardService.options().subscribe(opts => this.applyOptions());\n    }\n/**\n * @return {?}\n */\nngOnInit(): void {\n\n        // check to ensure values are numbers and not strings\n        if (typeof this.col === 'string') {\n            this.col = parseFloat(this.col);\n        }\n\n        if (typeof this.row === 'string') {\n            this.row = parseFloat(this.row);\n        }\n\n        if (typeof this.colSpan === 'string') {\n            this.colSpan = parseFloat(this.colSpan);\n        }\n\n        if (typeof this.rowSpan === 'string') {\n            this.rowSpan = parseFloat(this.rowSpan);\n        }\n\n        this._columnSpan.regular = this.colSpan;\n        this._rowSpan.regular = this.rowSpan;\n\n        if (!this.id) {\n            console.warn('Dashboard Widget is missing an ID.');\n\n            // set random id - keeps things working but prevents exporting of positions\n            this.id = Math.floor(Math.random() * 100000).toString();\n        }\n    }\n/**\n * Once component is initialised link the resize handle elements with their direction\n * @return {?}\n */\nngAfterViewInit(): void {\n        this.initialiseHandles();\n    }\n/**\n * If component is removed, then unregister it from the service\n * @return {?}\n */\nngOnDestroy(): void {\n        this._dashboardService.removeWidget(this);\n    }\n/**\n * Return the ID of the widget\n * @return {?}\n */\ngetId(): string {\n        return this.id;\n    }\n/**\n * Apply the current dashboard options\n * @return {?}\n */\napplyOptions(): void {\n\n        // get the current options at the time \n        let /** @type {?} */ options = this._dashboardService.getOptions();\n\n        // only update the values if options have been defined\n        if (options) {\n            // apply the initial options\n            this.padding = options.padding;\n            this._columnSpan.stacked = options.columns;\n        }\n    }\n/**\n * Set the actual position and size values\n * @return {?}\n */\nrender(): void {\n        this.actualX = this.getColumn() * this._dashboardService.getColumnWidth();\n        this.actualY = this.getRow() * this._dashboardService.getRowHeight();\n        this.actualWidth = this.getColumnSpan() * this._dashboardService.getColumnWidth();\n        this.actualHeight = this.getRowSpan() * this._dashboardService.getRowHeight();\n    }\n/**\n * Returns all the resize handles and their associated directions\n * @return {?}\n */\ngetHandles(): ResizeHandle[] {\n        return this._handles;\n    }\n/**\n * Indicates whether or not the widget should be displayed in stacked mode\n * @param {?} stacked indicates the stacked mode\n * @return {?}\n */\nsetStacked(stacked: boolean): void {\n        this.stacked = stacked;\n    }\n/**\n * @return {?}\n */\ngetColumn(): number {\n        return this.getStackableValue(this._column);\n    }\n/**\n * @return {?}\n */\ngetRow(): number {\n        return this.getStackableValue(this._row);\n    }\n/**\n * @param {?} column\n * @param {?=} render\n * @return {?}\n */\nsetColumn(column: number, render: boolean = true): void {\n        this.setStackableValue(this._column, column);\n\n        if (render) {\n            this.render();\n        }\n    }\n/**\n * @param {?} row\n * @param {?=} render\n * @return {?}\n */\nsetRow(row: number, render: boolean = true): void {\n        this.setStackableValue(this._row, row);\n\n        if (render) {\n            this.render();\n        }\n    }\n/**\n * @return {?}\n */\ngetColumnSpan(): number {\n        return this.getStackableValue(this._columnSpan);\n    }\n/**\n * @return {?}\n */\ngetRowSpan(): number {\n        return this.getStackableValue(this._rowSpan);\n    }\n/**\n * @param {?} columnSpan\n * @param {?=} render\n * @return {?}\n */\nsetColumnSpan(columnSpan: number, render: boolean = true): void {\n        this.setStackableValue(this._columnSpan, columnSpan);\n\n        if (render) {\n            this.render();\n        }\n    }\n/**\n * @param {?} rowSpan\n * @param {?=} render\n * @return {?}\n */\nsetRowSpan(rowSpan: number, render: boolean = true): void {\n        this.setStackableValue(this._rowSpan, rowSpan);\n\n        if (render) {\n            this.render();\n        }\n    }\n/**\n * @return {?}\n */\nbringToFront(): void {\n        this.zIndex = 1;\n    }\n/**\n * @return {?}\n */\nsendToBack(): void {\n        this.zIndex = 0;\n    }\n/**\n * @param {?} x\n * @param {?} y\n * @param {?} width\n * @param {?} height\n * @return {?}\n */\nsetBounds(x: number, y: number, width: number, height: number): void {\n        this.actualX = x;\n        this.actualY = y;\n        this.actualWidth = width;\n        this.actualHeight = height;\n    }\n/**\n * Allows automatic setting of stackable value\n * @param {?} property The current StackableValue object\n * @param {?} value The value to set in the appropriate field\n * @return {?}\n */\nprivate setStackableValue(property: StackableValue, value: number): void {\n        if (this.stacked) {\n            property.stacked = value;\n        } else {\n            property.regular = value;\n        }\n    }\n/**\n * Return the appropriate value from a stackable value\n * @param {?} property The Stackable value object\n * @return {?}\n */\nprivate getStackableValue(property: StackableValue): number {\n        return this.stacked ? property.stacked : property.regular;\n    }\n/**\n * Create data representations of the resize handle elements and the direction they will resize in\n * @return {?}\n */\nprivate initialiseHandles() {\n\n        this._handles = [\n            {\n                element: this._nativeElement.querySelector('.resizer-handle.handle-top'),\n                direction: ActionDirection.Top\n            },\n            {\n                element: this._nativeElement.querySelector('.resizer-handle.handle-top-right'),\n                direction: ActionDirection.TopRight\n            },\n            {\n                element: this._nativeElement.querySelector('.resizer-handle.handle-right'),\n                direction: ActionDirection.Right\n            },\n            {\n                element: this._nativeElement.querySelector('.resizer-handle.handle-bottom-right'),\n                direction: ActionDirection.BottomRight\n            },\n            {\n                element: this._nativeElement.querySelector('.resizer-handle.handle-bottom'),\n                direction: ActionDirection.Bottom\n            },\n            {\n                element: this._nativeElement.querySelector('.resizer-handle.handle-bottom-left'),\n                direction: ActionDirection.BottomLeft\n            },\n            {\n                element: this._nativeElement.querySelector('.resizer-handle.handle-left'),\n                direction: ActionDirection.Left\n            },\n            {\n                element: this._nativeElement.querySelector('.resizer-handle.handle-top-left'),\n                direction: ActionDirection.TopLeft\n            }\n        ];\n\n        // bind resize events to each handle\n        this._handles.forEach(handle => this.bindResize(handle));\n    }\n/**\n * This will apply event listeners to each resize handle\n * @param {?} handle The element and direction to subscribe to\n * @return {?}\n */\nprivate bindResize(handle: ResizeHandle): void {\n\n        // bind to resize events\n        handle.listener = Observable.fromEvent(handle.element, 'mousedown').subscribe((downEvent: MouseEvent) => {\n\n            downEvent.preventDefault();\n\n            // inform service that we are beginning to drag\n            this._dashboardService.onResizeStart({ widget: this, direction: handle.direction, event: downEvent });\n\n            let /** @type {?} */ move$ = this._dragMove.takeUntil(this._dragEnd).subscribe((moveEvent: MouseEvent) => {\n                moveEvent.preventDefault();\n                this._dashboardService.onResizeDrag({ widget: this, direction: handle.direction, event: moveEvent });\n            }, null, () => {\n                move$.unsubscribe();\n                this._dashboardService.onResizeEnd();\n            });\n\n        });\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-dashboard-widget',\n    template: `\n      <div class=\"widget-content widget-col-span-{{ getColumnSpan() }} widget-row-span-{{ getRowSpan() }}\">\n          <ng-content></ng-content>\n      </div>\n\n      <div class=\"resizer-handle handle-top\" [style.top.px]=\"padding\" [hidden]=\"!resizable\"></div>\n      <div class=\"resizer-handle handle-top-right\" [style.top.px]=\"padding\" [style.right.px]=\"padding\" [hidden]=\"!resizable && !stacked\"></div>\n      <div class=\"resizer-handle handle-right\" [style.right.px]=\"padding\" [hidden]=\"!resizable || stacked\"></div>\n      <div class=\"resizer-handle handle-bottom-right\" [style.bottom.px]=\"padding\" [style.right.px]=\"padding\" [hidden]=\"!resizable && !stacked\"></div>\n      <div class=\"resizer-handle handle-bottom\" [style.bottom.px]=\"padding\" [hidden]=\"!resizable\"></div>\n      <div class=\"resizer-handle handle-bottom-left\" [style.bottom.px]=\"padding\" [style.left.px]=\"padding\" [hidden]=\"!resizable && !stacked\"></div>\n      <div class=\"resizer-handle handle-left\" [style.left.px]=\"padding\" [hidden]=\"!resizable || stacked\"></div>\n      <div class=\"resizer-handle handle-top-left\" [style.top.px]=\"padding\" [style.left.px]=\"padding\" [hidden]=\"!resizable && !stacked\"></div>\n    `,\n    host: {\n        '[style.left.px]': 'actualX',\n        '[style.top.px]': 'actualY',\n        '[style.width.px]': 'actualWidth',\n        '[style.height.px]': 'actualHeight',\n        '[style.padding.px]': 'padding',\n        '[style.zIndex]': 'zIndex'\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: DashboardService, },\n{type: ElementRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'id': [{ type: Input },],\n'col': [{ type: Input },],\n'row': [{ type: Input },],\n'colSpan': [{ type: Input },],\n'rowSpan': [{ type: Input },],\n'resizable': [{ type: Input },],\n};\n}\n\nfunction DashboardWidgetComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nDashboardWidgetComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDashboardWidgetComponent.ctorParameters;\n/** @type {?} */\nDashboardWidgetComponent.propDecorators;\n/** @type {?} */\nDashboardWidgetComponent.prototype.id;\n/** @type {?} */\nDashboardWidgetComponent.prototype.col;\n/** @type {?} */\nDashboardWidgetComponent.prototype.row;\n/** @type {?} */\nDashboardWidgetComponent.prototype.colSpan;\n/** @type {?} */\nDashboardWidgetComponent.prototype.rowSpan;\n/** @type {?} */\nDashboardWidgetComponent.prototype.resizable;\n/** @type {?} */\nDashboardWidgetComponent.prototype.actualX;\n/** @type {?} */\nDashboardWidgetComponent.prototype.actualY;\n/** @type {?} */\nDashboardWidgetComponent.prototype.actualWidth;\n/** @type {?} */\nDashboardWidgetComponent.prototype.actualHeight;\n/** @type {?} */\nDashboardWidgetComponent.prototype.padding;\n/** @type {?} */\nDashboardWidgetComponent.prototype.zIndex;\n/** @type {?} */\nDashboardWidgetComponent.prototype.stacked;\n/** @type {?} */\nDashboardWidgetComponent.prototype._column;\n/** @type {?} */\nDashboardWidgetComponent.prototype._row;\n/** @type {?} */\nDashboardWidgetComponent.prototype._columnSpan;\n/** @type {?} */\nDashboardWidgetComponent.prototype._rowSpan;\n/** @type {?} */\nDashboardWidgetComponent.prototype._nativeElement;\n/** @type {?} */\nDashboardWidgetComponent.prototype._handles;\n/** @type {?} */\nDashboardWidgetComponent.prototype._dragMove;\n/** @type {?} */\nDashboardWidgetComponent.prototype._dragEnd;\n/** @type {?} */\nDashboardWidgetComponent.prototype._dashboardService;\n/** @type {?} */\nDashboardWidgetComponent.prototype._elementRef;\n}\n\n\nexport interface ResizeHandle {\n    element: Element;\n    direction: ActionDirection;\n    listener?: Subscription;\n}\n\nexport interface StackableValue {\n    regular: number;\n    stacked: number;\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, Host, ElementRef } from '@angular/core';\nimport { DashboardWidgetComponent } from '../widget/dashboard-widget.component';\nimport { Observable } from 'rxjs/Observable';\nimport { DashboardService, ActionDirection } from '../dashboard.service';\nexport class DashboardDragHandleDirective {\nprivate _dragMove: Observable<MouseEvent> = Observable.fromEvent(document, 'mousemove');\nprivate _dragEnd: Observable<MouseEvent> = Observable.fromEvent(document, 'mouseup');\n/**\n * @param {?} widget\n * @param {?} elementRef\n * @param {?} dashboardService\n */\nconstructor(  widget: DashboardWidgetComponent, elementRef: ElementRef, dashboardService: DashboardService) {\n\n        Observable.fromEvent(elementRef.nativeElement, 'mousedown').subscribe((downEvent: MouseEvent) => {\n\n            downEvent.preventDefault();\n\n            // inform service that we are beginning to drag\n            dashboardService.onDragStart({ widget: widget, direction: ActionDirection.Move, event: downEvent });\n\n            let move$ = this._dragMove.takeUntil(this._dragEnd).subscribe((moveEvent: MouseEvent) => {\n                moveEvent.preventDefault();\n\n                dashboardService.onDrag({ widget: widget, direction: ActionDirection.Move, event: moveEvent });\n            }, null, () => {\n                move$.unsubscribe();\n                dashboardService.onDragEnd();\n            });\n\n        });\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: '[uxDashboardWidgetDragHandle], [ux-dashboard-widget-drag-handle]'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: DashboardWidgetComponent, decorators: [{ type: Host }, ]},\n{type: ElementRef, },\n{type: DashboardService, },\n];\n}\n\nfunction DashboardDragHandleDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nDashboardDragHandleDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDashboardDragHandleDirective.ctorParameters;\n/** @type {?} */\nDashboardDragHandleDirective.prototype._dragMove;\n/** @type {?} */\nDashboardDragHandleDirective.prototype._dragEnd;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable, Renderer2 } from '@angular/core';\nimport { Subject } from 'rxjs/Subject';\nimport { Observable } from 'rxjs/Observable';\nimport'rxjs/add/observable/fromEvent';\nexport class ResizeService {\n/**\n * @param {?} nativeElement\n * @param {?} renderer\n * @return {?}\n */\naddResizeListener(nativeElement: HTMLElement, renderer: Renderer2): Subject<ResizeDimensions> {\n\n        // create subject\n        let /** @type {?} */ subject = new Subject<ResizeDimensions>();\n\n        // determine the style of the element\n        let /** @type {?} */ displayMode = window.getComputedStyle(nativeElement).getPropertyValue('display');\n\n        // create the iframe element\n        let /** @type {?} */ iframe: HTMLIFrameElement = renderer.createElement('iframe');\n\n        // style the iframe to be invisible but fill containing element\n        renderer.setStyle(iframe, 'position', 'absolute');\n        renderer.setStyle(iframe, 'width', '100%');\n        renderer.setStyle(iframe, 'height', '100%');\n        renderer.setStyle(iframe, 'top', '0');\n        renderer.setStyle(iframe, 'right', '0');\n        renderer.setStyle(iframe, 'bottom', '0');\n        renderer.setStyle(iframe, 'left', '0');\n        renderer.setStyle(iframe, 'z-index', '-1');\n        renderer.setStyle(iframe, 'opacity', '0');\n        renderer.setStyle(iframe, 'border', 'none');\n        renderer.setStyle(iframe, 'margin', '0');\n        renderer.setStyle(iframe, 'pointer-events', 'none');\n        renderer.setStyle(iframe, 'overflow', 'hidden');\n\n        // ensure the iframe ignores any tabbing\n        renderer.setAttribute(iframe, 'tabindex', '-1');\n\n        // statically positioned elements need changed to relative for this method to work\n        if (displayMode !== 'relative' && displayMode !== 'absolute' && displayMode !== 'fixed') {\n            renderer.setStyle(nativeElement, 'position', 'relative');\n        }\n\n        // add the iframe to the container element\n        renderer.appendChild(nativeElement, iframe);\n\n\n        this.waitUntilReady(iframe, () => {\n            let /** @type {?} */ iframeDoc = iframe.contentDocument || /** @type {?} */(( iframe.contentWindow.document as Document));\n\n            let /** @type {?} */ attachListener = function () {\n                Observable.fromEvent(iframe.contentWindow, 'resize').subscribe((event: ResizeDimensions) => {\n\n                    subject.next({\n                        width: nativeElement.offsetWidth,\n                        height: nativeElement.offsetHeight\n                    });\n                });\n            };\n\n            if (iframeDoc.readyState === 'complete') {\n                attachListener();\n            } else {\n\n                // wait for iframe to load\n                iframe.addEventListener('load', () => attachListener());\n            }\n        });\n\n\n        return subject;\n    }\n/**\n * @param {?} iframe\n * @param {?} callback\n * @return {?}\n */\nprivate waitUntilReady(iframe: HTMLIFrameElement, callback: () => void) {\n        if (iframe.contentDocument || iframe.contentWindow) {\n            callback.call(this);\n        } else {\n            setTimeout(() => this.waitUntilReady(iframe, callback));\n        }\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ResizeService_tsickle_Closure_declarations() {\n/** @type {?} */\nResizeService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nResizeService.ctorParameters;\n}\n\n\nexport interface ResizeDimensions {\n    width: number;\n    height: number;\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, Output, EventEmitter, ElementRef, Input, Renderer2 } from '@angular/core';\nimport { ResizeService, ResizeDimensions } from './resize.service';\nimport'rxjs/add/operator/debounceTime';\nexport class ResizeDirective {\n\n     throttle: number = 0;\n     resize: EventEmitter<ResizeDimensions> = new EventEmitter<ResizeDimensions>();\n/**\n * @param {?} _elementRef\n * @param {?} _resizeService\n * @param {?} _renderer\n */\nconstructor(private _elementRef: ElementRef,\nprivate _resizeService: ResizeService,\nprivate _renderer: Renderer2) { }\n/**\n * @return {?}\n */\nngOnInit(): void {\n        this._resizeService.addResizeListener(this._elementRef.nativeElement, this._renderer)\n            .debounceTime(this.throttle)\n            .subscribe(event => this.resize.emit(event));\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: '[uxResize]'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: ResizeService, },\n{type: Renderer2, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'throttle': [{ type: Input },],\n'resize': [{ type: Output, args: ['uxResize', ] },],\n};\n}\n\nfunction ResizeDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nResizeDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nResizeDirective.ctorParameters;\n/** @type {?} */\nResizeDirective.propDecorators;\n/** @type {?} */\nResizeDirective.prototype.throttle;\n/** @type {?} */\nResizeDirective.prototype.resize;\n/** @type {?} */\nResizeDirective.prototype._elementRef;\n/** @type {?} */\nResizeDirective.prototype._resizeService;\n/** @type {?} */\nResizeDirective.prototype._renderer;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\n\nimport { ResizeDirective } from './resize.directive';\nimport { ResizeService } from './resize.service';\nexport class ResizeModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    exports: [ResizeDirective],\n    declarations: [ResizeDirective],\n    providers: [ResizeService]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ResizeModule_tsickle_Closure_declarations() {\n/** @type {?} */\nResizeModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nResizeModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DashboardComponent } from './dashboard.component';\nimport { DashboardWidgetComponent } from './widget/dashboard-widget.component';\nimport { DashboardService } from './dashboard.service';\nimport { DashboardDragHandleDirective } from './drag-handle/drag-handle.directive';\nimport { ResizeModule } from '../../directives/resize/index';\n\nconst /** @type {?} */ DECLARATIONS: any[] = [\n    DashboardComponent,\n    DashboardWidgetComponent,\n    DashboardDragHandleDirective\n];\nexport class DashboardModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        CommonModule,\n        ResizeModule\n    ],\n    exports: DECLARATIONS,\n    declarations: DECLARATIONS,\n    providers: [DashboardService],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction DashboardModule_tsickle_Closure_declarations() {\n/** @type {?} */\nDashboardModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDashboardModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable } from '@angular/core';\nimport { Action } from '../../mini-ngrx/index';\nimport {\n  TimeChangeEvent,\n  TimepickerComponentState,\n  Time\n} from '../timepicker.models';\n\n\nexport class TimepickerActions {\n  static readonly WRITE_VALUE = '[timepicker] write value from ng model';\n  static readonly CHANGE_HOURS = '[timepicker] change hours';\n  static readonly CHANGE_MINUTES = '[timepicker] change minutes';\n  static readonly CHANGE_SECONDS = '[timepicker] change seconds';\n  static readonly SET_TIME_UNIT = '[timepicker] set time unit';\n  static readonly UPDATE_CONTROLS = '[timepicker] update controls';\n\n  writeValue(value: Date | string) {\n    return {\n      type: TimepickerActions.WRITE_VALUE,\n      payload: value\n    };\n  }\n\n  changeHours(event: TimeChangeEvent) {\n    return {\n      type: TimepickerActions.CHANGE_HOURS,\n      payload: event\n    };\n  }\n\n  changeMinutes(event: TimeChangeEvent) {\n    return {\n      type: TimepickerActions.CHANGE_MINUTES,\n      payload: event\n    };\n  }\n\n  changeSeconds(event: TimeChangeEvent): Action {\n    return {\n      type: TimepickerActions.CHANGE_SECONDS,\n      payload: event\n    };\n  }\n\n  setTime(value: Time): Action {\n    return {\n      type: TimepickerActions.SET_TIME_UNIT,\n      payload: value\n    };\n  }\n\n  updateControls(value: TimepickerComponentState): Action {\n    return {\n      type: TimepickerActions.UPDATE_CONTROLS,\n      payload: value\n    };\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Time } from './timepicker.models';\n\nconst dex = 10;\nconst hoursPerDay = 24;\nconst hoursPerDayHalf = 12;\nconst minutesPerHour = 60;\nconst secondsPerMinute = 60;\n\nexport function isValidDate(value?: string | Date): boolean {\n  if (!value) {\n    return false;\n  }\n\n  if (value instanceof Date && isNaN(value.getHours())) {\n    return false;\n  }\n\n  if (typeof value === 'string') {\n    return isValidDate(new Date(value));\n  }\n\n  return true;\n}\n\nexport function toNumber(value: string | number): number {\n  if (typeof value === 'number') {\n    return value;\n  }\n\n  return parseInt(value, dex);\n}\n\nexport function isNumber(value: any): value is number {\n  return !isNaN(toNumber(value));\n}\n\nexport function parseHours(\n  value: string | number,\n  isPM = false\n): number {\n  const hour = toNumber(value);\n  if (\n    isNaN(hour) ||\n    hour < 0 ||\n    hour > (isPM ? hoursPerDayHalf : hoursPerDay)\n  ) {\n    return NaN;\n  }\n\n  return hour;\n}\n\nexport function parseMinutes(value: string | number): number {\n  const minute = toNumber(value);\n  if (isNaN(minute) || minute < 0 || minute > minutesPerHour) {\n    return NaN;\n  }\n\n  return minute;\n}\n\nexport function parseSeconds(value: string | number): number {\n  const seconds = toNumber(value);\n  if (isNaN(seconds) || seconds < 0 || seconds > secondsPerMinute) {\n    return NaN;\n  }\n\n  return seconds;\n}\n\nexport function parseTime(value: string | Date): Date {\n  if (typeof value === 'string') {\n    return new Date(value);\n  }\n\n  return value;\n}\n\nexport function changeTime(value: Date, diff: Time): Date {\n  if (!value) {\n    return changeTime(createDate(new Date(), 0, 0, 0), diff);\n  }\n\n  let hour = value.getHours();\n  let minutes = value.getMinutes();\n  let seconds = value.getSeconds();\n\n  if (diff.hour) {\n    hour = (hour + toNumber(diff.hour)) % hoursPerDay;\n    if (hour < 0) {\n      hour += hoursPerDay;\n    }\n  }\n\n  if (diff.minute) {\n    minutes = minutes + toNumber(diff.minute);\n  }\n\n  if (diff.seconds) {\n    seconds = seconds + toNumber(diff.seconds);\n  }\n\n  return createDate(value, hour, minutes, seconds);\n}\n\nexport function setTime(value: Date, opts: Time): Date {\n  let hour = parseHours(opts.hour);\n  const minute = parseMinutes(opts.minute);\n  const seconds = parseSeconds(opts.seconds) || 0;\n\n  if (opts.isPM) {\n    hour += hoursPerDayHalf;\n  }\n\n  // fixme: unreachable code, value is mandatory\n  if (!value) {\n    if (!isNaN(hour) && !isNaN(minute)) {\n      return createDate(new Date(), hour, minute, seconds);\n    }\n\n    return value;\n  }\n\n  if (isNaN(hour) || isNaN(minute)) {\n    return value;\n  }\n\n  return createDate(value, hour, minute, seconds);\n}\n\nexport function createDate(\n  value: Date,\n  hours: number,\n  minutes: number,\n  seconds: number\n): Date {\n  // fixme: unreachable code, value is mandatory\n  const _value = value || new Date();\n\n  return new Date(\n    _value.getFullYear(),\n    _value.getMonth(),\n    _value.getDate(),\n    hours,\n    minutes,\n    seconds,\n    _value.getMilliseconds()\n  );\n}\n\nexport function padNumber(value: number): string {\n  const _value = value.toString();\n  if (_value.length > 1) {\n    return _value;\n  }\n\n  return `0${_value}`;\n}\n\nexport function isInputValid(\n  hours: string,\n  minutes = '0',\n  seconds = '0',\n  isPM: boolean\n): boolean {\n  return !(isNaN(parseHours(hours, isPM))\n    || isNaN(parseMinutes(minutes))\n    || isNaN(parseSeconds(seconds)));\n}\n","import { changeTime } from './timepicker.utils';\nimport {\n  TimeChangeEvent,\n  TimepickerComponentState,\n  TimepickerControls\n} from './timepicker.models';\n\nexport function canChangeValue(\n  state: TimepickerComponentState,\n  event?: TimeChangeEvent\n): boolean {\n  if (state.readonlyInput) {\n    return false;\n  }\n\n  if (event) {\n    if (event.source === 'wheel' && !state.mousewheel) {\n      return false;\n    }\n\n    if (event.source === 'key' && !state.arrowkeys) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nexport function canChangeHours(\n  event: TimeChangeEvent,\n  controls: TimepickerControls\n): boolean {\n  if (!event.step) {\n    return false;\n  }\n\n  if (event.step > 0 && !controls.canIncrementHours) {\n    return false;\n  }\n\n  if (event.step < 0 && !controls.canDecrementHours) {\n    return false;\n  }\n\n  return true;\n}\n\nexport function canChangeMinutes(\n  event: TimeChangeEvent,\n  controls: TimepickerControls\n): boolean {\n  if (!event.step) {\n    return false;\n  }\n  if (event.step > 0 && !controls.canIncrementMinutes) {\n    return false;\n  }\n  if (event.step < 0 && !controls.canDecrementMinutes) {\n    return false;\n  }\n\n  return true;\n}\n\nexport function canChangeSeconds(\n  event: TimeChangeEvent,\n  controls: TimepickerControls\n): boolean {\n  if (!event.step) {\n    return false;\n  }\n  if (event.step > 0 && !controls.canIncrementSeconds) {\n    return false;\n  }\n  if (event.step < 0 && !controls.canDecrementSeconds) {\n    return false;\n  }\n\n  return true;\n}\n\nexport function getControlsValue(\n  state: TimepickerComponentState\n): TimepickerComponentState {\n  const {\n    hourStep,\n    minuteStep,\n    secondsStep,\n    readonlyInput,\n    mousewheel,\n    arrowkeys,\n    showSpinners,\n    showMeridian,\n    showSeconds,\n    meridians,\n    min,\n    max\n  } = state;\n\n  return {\n    hourStep,\n    minuteStep,\n    secondsStep,\n    readonlyInput,\n    mousewheel,\n    arrowkeys,\n    showSpinners,\n    showMeridian,\n    showSeconds,\n    meridians,\n    min,\n    max\n  };\n}\n\nexport function timepickerControls(\n  value: Date,\n  state: TimepickerComponentState\n): TimepickerControls {\n  const { min, max, hourStep, minuteStep, secondsStep, showSeconds } = state;\n  const res: TimepickerControls = {\n    canIncrementHours: true,\n    canIncrementMinutes: true,\n    canIncrementSeconds: true,\n\n    canDecrementHours: true,\n    canDecrementMinutes: true,\n    canDecrementSeconds: true\n  };\n\n  if (!value) {\n    return res;\n  }\n\n  // compare dates\n  if (max) {\n    const _newHour = changeTime(value, { hour: hourStep });\n    res.canIncrementHours = max > _newHour;\n\n    if (!res.canIncrementHours) {\n      const _newMinutes = changeTime(value, { minute: minuteStep });\n      res.canIncrementMinutes = showSeconds\n        ? max > _newMinutes\n        : max >= _newMinutes;\n    }\n\n    if (!res.canIncrementMinutes) {\n      const _newSeconds = changeTime(value, { seconds: secondsStep });\n      res.canIncrementSeconds = max >= _newSeconds;\n    }\n  }\n\n  if (min) {\n    const _newHour = changeTime(value, { hour: -hourStep });\n    res.canDecrementHours = min < _newHour;\n\n    if (!res.canDecrementHours) {\n      const _newMinutes = changeTime(value, { minute: -minuteStep });\n      res.canDecrementMinutes = showSeconds\n        ? min < _newMinutes\n        : min <= _newMinutes;\n    }\n\n    if (!res.canDecrementMinutes) {\n      const _newSeconds = changeTime(value, { seconds: -secondsStep });\n      res.canDecrementSeconds = min <= _newSeconds;\n    }\n  }\n\n  return res;\n}\n","import { Injectable } from '@angular/core';\n\n/** Provides default configuration values for timepicker */\n\nexport class TimepickerConfig {\n  /** hours change step */\n  hourStep = 1;\n  /** hours change step */\n  minuteStep = 5;\n  /** seconds changes step */\n  secondsStep = 10;\n  /** if true works in 12H mode and displays AM/PM. If false works in 24H mode and hides AM/PM */\n  showMeridian = true;\n  /** meridian labels based on locale */\n  meridians = ['AM', 'PM'];\n  /** if true hours and minutes fields will be readonly */\n  readonlyInput = false;\n  /** if true scroll inside hours and minutes inputs will change time */\n  mousewheel = true;\n  /** if true up/down arrowkeys inside hours and minutes inputs will change time */\n  arrowkeys = true;\n  /** if true spinner arrows above and below the inputs will be shown */\n  showSpinners = true;\n  /** show seconds in timepicker */\n  showSeconds = false;\n  /** show minutes in timepicker */\n  showMinutes = true;\n  /** minimum time user can select */\n  min: Date;\n  /** maximum time user can select */\n  max: Date;\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Action } from '../../mini-ngrx/index';\nimport {\n  canChangeHours,\n  canChangeMinutes,\n  canChangeSeconds,\n  canChangeValue,\n  timepickerControls\n} from '../timepicker-controls.util';\nimport { TimepickerConfig } from '../timepicker.config';\nimport {\n  TimepickerComponentState,\n  TimepickerControls\n} from '../timepicker.models';\nimport { changeTime, setTime } from '../timepicker.utils';\nimport { TimepickerActions } from './timepicker.actions';\n\nexport class TimepickerState {\n  value: Date;\n  config: TimepickerComponentState;\n  controls: TimepickerControls;\n}\n\nexport const initialState: TimepickerState = {\n  value: null,\n  config: new TimepickerConfig(),\n  controls: {\n    canIncrementHours: true,\n    canIncrementMinutes: true,\n    canIncrementSeconds: true,\n\n    canDecrementHours: true,\n    canDecrementMinutes: true,\n    canDecrementSeconds: true\n  }\n};\n\nexport function timepickerReducer(state = initialState, action: Action) {\n  switch (action.type) {\n    case TimepickerActions.WRITE_VALUE: {\n      return Object.assign({}, state, { value: action.payload });\n    }\n\n    case TimepickerActions.CHANGE_HOURS: {\n      if (\n        !canChangeValue(state.config, action.payload) ||\n        !canChangeHours(action.payload, state.controls)\n      ) {\n        return state;\n      }\n\n      const _newTime = changeTime(state.value, { hour: action.payload.step });\n\n      return Object.assign({}, state, { value: _newTime });\n    }\n\n    case TimepickerActions.CHANGE_MINUTES: {\n      if (\n        !canChangeValue(state.config, action.payload) ||\n        !canChangeMinutes(action.payload, state.controls)\n      ) {\n        return state;\n      }\n\n      const _newTime = changeTime(state.value, { minute: action.payload.step });\n\n      return Object.assign({}, state, { value: _newTime });\n    }\n\n    case TimepickerActions.CHANGE_SECONDS: {\n      if (\n        !canChangeValue(state.config, action.payload) ||\n        !canChangeSeconds(action.payload, state.controls)\n      ) {\n        return state;\n      }\n\n      const _newTime = changeTime(state.value, {\n        seconds: action.payload.step\n      });\n\n      return Object.assign({}, state, { value: _newTime });\n    }\n\n    case TimepickerActions.SET_TIME_UNIT: {\n      if (!canChangeValue(state.config)) {\n        return state;\n      }\n\n      const _newTime = setTime(state.value, action.payload);\n\n      return Object.assign({}, state, { value: _newTime });\n    }\n\n    case TimepickerActions.UPDATE_CONTROLS: {\n      const _newControlsState = timepickerControls(state.value, action.payload);\n      const _newState: TimepickerState = {\n        value: state.value,\n        config: action.payload,\n        controls: _newControlsState\n      };\n\n      if (state.config.showMeridian !== _newState.config.showMeridian) {\n        if(state.value){\n          _newState.value = new Date(state.value);\n        }\n      }\n\n      return Object.assign({}, state, _newState);\n    }\n\n    default:\n      return state;\n  }\n}\n","/**\n * @copyright ngrx\n */\nimport { Observable } from 'rxjs/Observable';\nimport { Observer } from 'rxjs/Observer';\nimport { Operator } from 'rxjs/Operator';\nimport { distinctUntilChanged } from 'rxjs/operator/distinctUntilChanged';\n\nimport { map } from 'rxjs/operator/map';\nimport { Action, ActionReducer } from './index';\n\nexport class MiniStore<T> extends Observable<T> implements Observer<Action> {\n  constructor(\n    private _dispatcher: Observer<Action>,\n    private _reducer: ActionReducer<any>,\n    state$: Observable<any>\n  ) {\n    super();\n\n    this.source = state$;\n  }\n\n  select<R>(pathOrMapFn: (state: T) => R): Observable<R> {\n    const mapped$: Observable<R> = map.call(this, pathOrMapFn);\n\n    return distinctUntilChanged.call(mapped$);\n  }\n\n  lift<R>(operator: Operator<T, R>): MiniStore<R> {\n    const store = new MiniStore<R>(this._dispatcher, this._reducer, this);\n    store.operator = operator;\n\n    return store;\n  }\n\n  dispatch(action: Action) {\n    this._dispatcher.next(action);\n  }\n\n  next(action: Action) {\n    this._dispatcher.next(action);\n  }\n\n  error(err: any) {\n    this._dispatcher.error(err);\n  }\n\n  complete() {\n    /*noop*/\n  }\n}\n","declare let global: any;\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\ndeclare var WorkerGlobalScope: any;\n// CommonJS / Node have global context exposed as \"global\" variable.\n// We don't want to include the whole node.d.ts this this compilation unit so we'll just fake\n// the global \"global\" var for now.\n\nconst __window = typeof window !== 'undefined' && window;\nconst __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n    self instanceof WorkerGlobalScope && self;\nconst __global = typeof global !== 'undefined' && global;\nconst _root: any = __window || __global || __self;\n\n// Workaround Closure Compiler restriction: The body of a goog.module cannot use throw.\n// This is needed when used with angular/tsickle which inserts a goog.module statement.\n// Wrap in IIFE\n(function () {\n  if (!_root) {\n    throw new Error('RxJS could not find any global context (window, self, global)');\n  }\n})();\n\nexport { _root as root };","export const isArray = Array.isArray || (<T>(x: any): x is T[] => x && typeof x.length === 'number');\n","export function isObject(x: any): x is Object {\n  return x != null && typeof x === 'object';\n}\n","export function isFunction(x: any): x is Function {\n  return typeof x === 'function';\n}\n","import { errorObject } from './errorObject';\n\nlet tryCatchTarget: Function;\n\nfunction tryCatcher(this: any): any {\n  try {\n    return tryCatchTarget.apply(this, arguments);\n  } catch (e) {\n    errorObject.e = e;\n    return errorObject;\n  }\n}\n\nexport function tryCatch<T extends Function>(fn: T): T {\n  tryCatchTarget = fn;\n  return <any>tryCatcher;\n};\n","// typeof any so that it we don't have to cast when comparing a result to the error object\nexport const errorObject: any = { e: {} };","/**\n * An error thrown when one or more errors have occurred during the\n * `unsubscribe` of a {@link Subscription}.\n */\nexport class UnsubscriptionError extends Error {\n  constructor(public errors: any[]) {\n    super();\n    const err: any = Error.call(this, errors ?\n      `${errors.length} errors occurred during unsubscription:\n  ${errors.map((err, i) => `${i + 1}) ${err.toString()}`).join('\\n  ')}` : '');\n    (<any> this).name = err.name = 'UnsubscriptionError';\n    (<any> this).stack = err.stack;\n    (<any> this).message = err.message;\n  }\n}\n","import { isArray } from './util/isArray';\nimport { isObject } from './util/isObject';\nimport { isFunction } from './util/isFunction';\nimport { tryCatch } from './util/tryCatch';\nimport { errorObject } from './util/errorObject';\nimport { UnsubscriptionError } from './util/UnsubscriptionError';\n\nexport interface AnonymousSubscription {\n  unsubscribe(): void;\n}\n\nexport type TeardownLogic = AnonymousSubscription | Function | void;\n\nexport interface ISubscription extends AnonymousSubscription {\n  unsubscribe(): void;\n  readonly closed: boolean;\n}\n\n/**\n * Represents a disposable resource, such as the execution of an Observable. A\n * Subscription has one important method, `unsubscribe`, that takes no argument\n * and just disposes the resource held by the subscription.\n *\n * Additionally, subscriptions may be grouped together through the `add()`\n * method, which will attach a child Subscription to the current Subscription.\n * When a Subscription is unsubscribed, all its children (and its grandchildren)\n * will be unsubscribed as well.\n *\n * @class Subscription\n */\nexport class Subscription implements ISubscription {\n  public static EMPTY: Subscription = (function(empty: any){\n    empty.closed = true;\n    return empty;\n  }(new Subscription()));\n\n  /**\n   * A flag to indicate whether this Subscription has already been unsubscribed.\n   * @type {boolean}\n   */\n  public closed: boolean = false;\n\n  protected _parent: Subscription = null;\n  protected _parents: Subscription[] = null;\n  private _subscriptions: ISubscription[] = null;\n\n  /**\n   * @param {function(): void} [unsubscribe] A function describing how to\n   * perform the disposal of resources when the `unsubscribe` method is called.\n   */\n  constructor(unsubscribe?: () => void) {\n    if (unsubscribe) {\n      (<any> this)._unsubscribe = unsubscribe;\n    }\n  }\n\n  /**\n   * Disposes the resources held by the subscription. May, for instance, cancel\n   * an ongoing Observable execution or cancel any other type of work that\n   * started when the Subscription was created.\n   * @return {void}\n   */\n  unsubscribe(): void {\n    let hasErrors = false;\n    let errors: any[];\n\n    if (this.closed) {\n      return;\n    }\n\n    let { _parent, _parents, _unsubscribe, _subscriptions } = (<any> this);\n\n    this.closed = true;\n    this._parent = null;\n    this._parents = null;\n    // null out _subscriptions first so any child subscriptions that attempt\n    // to remove themselves from this subscription will noop\n    this._subscriptions = null;\n\n    let index = -1;\n    let len = _parents ? _parents.length : 0;\n\n    // if this._parent is null, then so is this._parents, and we\n    // don't have to remove ourselves from any parent subscriptions.\n    while (_parent) {\n      _parent.remove(this);\n      // if this._parents is null or index >= len,\n      // then _parent is set to null, and the loop exits\n      _parent = ++index < len && _parents[index] || null;\n    }\n\n    if (isFunction(_unsubscribe)) {\n      let trial = tryCatch(_unsubscribe).call(this);\n      if (trial === errorObject) {\n        hasErrors = true;\n        errors = errors || (\n          errorObject.e instanceof UnsubscriptionError ?\n            flattenUnsubscriptionErrors(errorObject.e.errors) : [errorObject.e]\n        );\n      }\n    }\n\n    if (isArray(_subscriptions)) {\n\n      index = -1;\n      len = _subscriptions.length;\n\n      while (++index < len) {\n        const sub = _subscriptions[index];\n        if (isObject(sub)) {\n          let trial = tryCatch(sub.unsubscribe).call(sub);\n          if (trial === errorObject) {\n            hasErrors = true;\n            errors = errors || [];\n            let err = errorObject.e;\n            if (err instanceof UnsubscriptionError) {\n              errors = errors.concat(flattenUnsubscriptionErrors(err.errors));\n            } else {\n              errors.push(err);\n            }\n          }\n        }\n      }\n    }\n\n    if (hasErrors) {\n      throw new UnsubscriptionError(errors);\n    }\n  }\n\n  /**\n   * Adds a tear down to be called during the unsubscribe() of this\n   * Subscription.\n   *\n   * If the tear down being added is a subscription that is already\n   * unsubscribed, is the same reference `add` is being called on, or is\n   * `Subscription.EMPTY`, it will not be added.\n   *\n   * If this subscription is already in an `closed` state, the passed\n   * tear down logic will be executed immediately.\n   *\n   * @param {TeardownLogic} teardown The additional logic to execute on\n   * teardown.\n   * @return {Subscription} Returns the Subscription used or created to be\n   * added to the inner subscriptions list. This Subscription can be used with\n   * `remove()` to remove the passed teardown logic from the inner subscriptions\n   * list.\n   */\n  add(teardown: TeardownLogic): Subscription {\n    if (!teardown || (teardown === Subscription.EMPTY)) {\n      return Subscription.EMPTY;\n    }\n\n    if (teardown === this) {\n      return this;\n    }\n\n    let subscription = (<Subscription> teardown);\n\n    switch (typeof teardown) {\n      case 'function':\n        subscription = new Subscription(<(() => void) > teardown);\n      case 'object':\n        if (subscription.closed || typeof subscription.unsubscribe !== 'function') {\n          return subscription;\n        } else if (this.closed) {\n          subscription.unsubscribe();\n          return subscription;\n        } else if (typeof subscription._addParent !== 'function' /* quack quack */) {\n          const tmp = subscription;\n          subscription = new Subscription();\n          subscription._subscriptions = [tmp];\n        }\n        break;\n      default:\n        throw new Error('unrecognized teardown ' + teardown + ' added to Subscription.');\n    }\n\n    const subscriptions = this._subscriptions || (this._subscriptions = []);\n\n    subscriptions.push(subscription);\n    subscription._addParent(this);\n\n    return subscription;\n  }\n\n  /**\n   * Removes a Subscription from the internal list of subscriptions that will\n   * unsubscribe during the unsubscribe process of this Subscription.\n   * @param {Subscription} subscription The subscription to remove.\n   * @return {void}\n   */\n  remove(subscription: Subscription): void {\n    const subscriptions = this._subscriptions;\n    if (subscriptions) {\n      const subscriptionIndex = subscriptions.indexOf(subscription);\n      if (subscriptionIndex !== -1) {\n        subscriptions.splice(subscriptionIndex, 1);\n      }\n    }\n  }\n\n  private _addParent(parent: Subscription) {\n    let { _parent, _parents } = this;\n    if (!_parent || _parent === parent) {\n      // If we don't have a parent, or the new parent is the same as the\n      // current parent, then set this._parent to the new parent.\n      this._parent = parent;\n    } else if (!_parents) {\n      // If there's already one parent, but not multiple, allocate an Array to\n      // store the rest of the parent Subscriptions.\n      this._parents = [parent];\n    } else if (_parents.indexOf(parent) === -1) {\n      // Only add the new parent to the _parents list if it's not already there.\n      _parents.push(parent);\n    }\n  }\n}\n\nfunction flattenUnsubscriptionErrors(errors: any[]) {\n return errors.reduce((errs, err) => errs.concat((err instanceof UnsubscriptionError) ? err.errors : err), []);\n}\n","import { Scheduler } from '../Scheduler';\nimport { Subscription } from '../Subscription';\n\n/**\n * A unit of work to be executed in a {@link Scheduler}. An action is typically\n * created from within a Scheduler and an RxJS user does not need to concern\n * themselves about creating and manipulating an Action.\n *\n * ```ts\n * class Action<T> extends Subscription {\n *   new (scheduler: Scheduler, work: (state?: T) => void);\n *   schedule(state?: T, delay: number = 0): Subscription;\n * }\n * ```\n *\n * @class Action<T>\n */\nexport class Action<T> extends Subscription {\n  constructor(scheduler: Scheduler, work: (this: Action<T>, state?: T) => void) {\n    super();\n  }\n  /**\n   * Schedules this action on its parent Scheduler for execution. May be passed\n   * some context object, `state`. May happen at some point in the future,\n   * according to the `delay` parameter, if specified.\n   * @param {T} [state] Some contextual data that the `work` function uses when\n   * called by the Scheduler.\n   * @param {number} [delay] Time to wait before executing the work, where the\n   * time unit is implicit and defined by the Scheduler.\n   * @return {void}\n   */\n  public schedule(state?: T, delay: number = 0): Subscription {\n    return this;\n  }\n}\n","import { root } from '../util/root';\nimport { Action } from './Action';\nimport { Subscription } from '../Subscription';\nimport { AsyncScheduler } from './AsyncScheduler';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class AsyncAction<T> extends Action<T> {\n\n  public id: any;\n  public state: T;\n  public delay: number;\n  protected pending: boolean = false;\n\n  constructor(protected scheduler: AsyncScheduler,\n              protected work: (this: AsyncAction<T>, state?: T) => void) {\n    super(scheduler, work);\n  }\n\n  public schedule(state?: T, delay: number = 0): Subscription {\n\n    if (this.closed) {\n      return this;\n     }\n\n    // Always replace the current state with the new state.\n    this.state = state;\n\n    // Set the pending flag indicating that this action has been scheduled, or\n    // has recursively rescheduled itself.\n    this.pending = true;\n\n    const id = this.id;\n    const scheduler = this.scheduler;\n\n    //\n    // Important implementation note:\n    //\n    // Actions only execute once by default, unless rescheduled from within the\n    // scheduled callback. This allows us to implement single and repeat\n    // actions via the same code path, without adding API surface area, as well\n    // as mimic traditional recursion but across asynchronous boundaries.\n    //\n    // However, JS runtimes and timers distinguish between intervals achieved by\n    // serial `setTimeout` calls vs. a single `setInterval` call. An interval of\n    // serial `setTimeout` calls can be individually delayed, which delays\n    // scheduling the next `setTimeout`, and so on. `setInterval` attempts to\n    // guarantee the interval callback will be invoked more precisely to the\n    // interval period, regardless of load.\n    //\n    // Therefore, we use `setInterval` to schedule single and repeat actions.\n    // If the action reschedules itself with the same delay, the interval is not\n    // canceled. If the action doesn't reschedule, or reschedules with a\n    // different delay, the interval will be canceled after scheduled callback\n    // execution.\n    //\n    if (id != null) {\n      this.id = this.recycleAsyncId(scheduler, id, delay);\n    }\n\n    this.delay = delay;\n    // If this action has already an async Id, don't request a new one.\n    this.id = this.id || this.requestAsyncId(scheduler, this.id, delay);\n\n    return this;\n  }\n\n  protected requestAsyncId(scheduler: AsyncScheduler, id?: any, delay: number = 0): any {\n    return root.setInterval(scheduler.flush.bind(scheduler, this), delay);\n  }\n\n  protected recycleAsyncId(scheduler: AsyncScheduler, id: any, delay: number = 0): any {\n    // If this action is rescheduled with the same delay time, don't clear the interval id.\n    if (delay !== null && this.delay === delay && this.pending === false) {\n      return id;\n    }\n    // Otherwise, if the action's delay time is different from the current delay,\n    // or the action has been rescheduled before it's executed, clear the interval id\n    return root.clearInterval(id) && undefined || undefined;\n  }\n\n  /**\n   * Immediately executes this action and the `work` it contains.\n   * @return {any}\n   */\n  public execute(state: T, delay: number): any {\n\n    if (this.closed) {\n      return new Error('executing a cancelled action');\n    }\n\n    this.pending = false;\n    const error = this._execute(state, delay);\n    if (error) {\n      return error;\n    } else if (this.pending === false && this.id != null) {\n      // Dequeue if the action didn't reschedule itself. Don't call\n      // unsubscribe(), because the action could reschedule later.\n      // For example:\n      // ```\n      // scheduler.schedule(function doWork(counter) {\n      //   /* ... I'm a busy worker bee ... */\n      //   var originalAction = this;\n      //   /* wait 100ms before rescheduling the action */\n      //   setTimeout(function () {\n      //     originalAction.schedule(counter + 1);\n      //   }, 100);\n      // }, 1000);\n      // ```\n      this.id = this.recycleAsyncId(this.scheduler, this.id, null);\n    }\n  }\n\n  protected _execute(state: T, delay: number): any {\n    let errored: boolean = false;\n    let errorValue: any = undefined;\n    try {\n      this.work(state);\n    } catch (e) {\n      errored = true;\n      errorValue = !!e && e || new Error(e);\n    }\n    if (errored) {\n      this.unsubscribe();\n      return errorValue;\n    }\n  }\n\n  protected _unsubscribe() {\n\n    const id = this.id;\n    const scheduler = this.scheduler;\n    const actions = scheduler.actions;\n    const index = actions.indexOf(this);\n\n    this.work  = null;\n    this.state = null;\n    this.pending = false;\n    this.scheduler = null;\n\n    if (index !== -1) {\n      actions.splice(index, 1);\n    }\n\n    if (id != null) {\n      this.id = this.recycleAsyncId(scheduler, id, null);\n    }\n\n    this.delay = null;\n  }\n}\n","import { AsyncAction } from './AsyncAction';\nimport { Subscription } from '../Subscription';\nimport { QueueScheduler } from './QueueScheduler';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class QueueAction<T> extends AsyncAction<T> {\n\n  constructor(protected scheduler: QueueScheduler,\n              protected work: (this: QueueAction<T>, state?: T) => void) {\n    super(scheduler, work);\n  }\n\n  public schedule(state?: T, delay: number = 0): Subscription {\n    if (delay > 0) {\n      return super.schedule(state, delay);\n    }\n    this.delay = delay;\n    this.state = state;\n    this.scheduler.flush(this);\n    return this;\n  }\n\n  public execute(state: T, delay: number): any {\n    return (delay > 0 || this.closed) ?\n      super.execute(state, delay) :\n      this._execute(state, delay) ;\n  }\n\n  protected requestAsyncId(scheduler: QueueScheduler, id?: any, delay: number = 0): any {\n    // If delay exists and is greater than 0, or if the delay is null (the\n    // action wasn't rescheduled) but was originally scheduled as an async\n    // action, then recycle as an async action.\n    if ((delay !== null && delay > 0) || (delay === null && this.delay > 0)) {\n      return super.requestAsyncId(scheduler, id, delay);\n    }\n    // Otherwise flush the scheduler starting with this action.\n    return scheduler.flush(this);\n  }\n}\n","import { Action } from './scheduler/Action';\nimport { Subscription } from './Subscription';\n\nexport interface IScheduler {\n  now(): number;\n  schedule<T>(work: (this: Action<T>, state?: T) => void, delay?: number, state?: T): Subscription;\n}\n/**\n * An execution context and a data structure to order tasks and schedule their\n * execution. Provides a notion of (potentially virtual) time, through the\n * `now()` getter method.\n *\n * Each unit of work in a Scheduler is called an {@link Action}.\n *\n * ```ts\n * class Scheduler {\n *   now(): number;\n *   schedule(work, delay?, state?): Subscription;\n * }\n * ```\n *\n * @class Scheduler\n */\nexport class Scheduler implements IScheduler {\n\n  public static now: () => number = Date.now ? Date.now : () => +new Date();\n\n  constructor(private SchedulerAction: typeof Action,\n              now: () => number = Scheduler.now) {\n    this.now = now;\n  }\n\n  /**\n   * A getter method that returns a number representing the current time\n   * (at the time this function was called) according to the scheduler's own\n   * internal clock.\n   * @return {number} A number that represents the current time. May or may not\n   * have a relation to wall-clock time. May or may not refer to a time unit\n   * (e.g. milliseconds).\n   */\n  public now: () => number;\n\n  /**\n   * Schedules a function, `work`, for execution. May happen at some point in\n   * the future, according to the `delay` parameter, if specified. May be passed\n   * some context object, `state`, which will be passed to the `work` function.\n   *\n   * The given arguments will be processed an stored as an Action object in a\n   * queue of actions.\n   *\n   * @param {function(state: ?T): ?Subscription} work A function representing a\n   * task, or some unit of work to be executed by the Scheduler.\n   * @param {number} [delay] Time to wait before executing the work, where the\n   * time unit is implicit and defined by the Scheduler itself.\n   * @param {T} [state] Some contextual data that the `work` function uses when\n   * called by the Scheduler.\n   * @return {Subscription} A subscription in order to be able to unsubscribe\n   * the scheduled work.\n   */\n  public schedule<T>(work: (this: Action<T>, state?: T) => void, delay: number = 0, state?: T): Subscription {\n    return new this.SchedulerAction<T>(this, work).schedule(state, delay);\n  }\n}\n","import { Scheduler } from '../Scheduler';\nimport { AsyncAction } from './AsyncAction';\n\nexport class AsyncScheduler extends Scheduler {\n  public actions: Array<AsyncAction<any>> = [];\n  /**\n   * A flag to indicate whether the Scheduler is currently executing a batch of\n   * queued actions.\n   * @type {boolean}\n   */\n  public active: boolean = false;\n  /**\n   * An internal ID used to track the latest asynchronous task such as those\n   * coming from `setTimeout`, `setInterval`, `requestAnimationFrame`, and\n   * others.\n   * @type {any}\n   */\n  public scheduled: any = undefined;\n\n  public flush(action: AsyncAction<any>): void {\n\n    const {actions} = this;\n\n    if (this.active) {\n      actions.push(action);\n      return;\n    }\n\n    let error: any;\n    this.active = true;\n\n    do {\n      if (error = action.execute(action.state, action.delay)) {\n        break;\n      }\n    } while (action = actions.shift()); // exhaust the scheduler queue\n\n    this.active = false;\n\n    if (error) {\n      while (action = actions.shift()) {\n        action.unsubscribe();\n      }\n      throw error;\n    }\n  }\n}\n","import { QueueAction } from './QueueAction';\nimport { QueueScheduler } from './QueueScheduler';\n\n/**\n *\n * Queue Scheduler\n *\n * <span class=\"informal\">Put every next task on a queue, instead of executing it immediately</span>\n *\n * `queue` scheduler, when used with delay, behaves the same as {@link async} scheduler.\n *\n * When used without delay, it schedules given task synchronously - executes it right when\n * it is scheduled. However when called recursively, that is when inside the scheduled task,\n * another task is scheduled with queue scheduler, instead of executing immediately as well,\n * that task will be put on a queue and wait for current one to finish.\n *\n * This means that when you execute task with `queue` scheduler, you are sure it will end\n * before any other task scheduled with that scheduler will start.\n *\n * @examples <caption>Schedule recursively first, then do something</caption>\n *\n * Rx.Scheduler.queue.schedule(() => {\n *   Rx.Scheduler.queue.schedule(() => console.log('second')); // will not happen now, but will be put on a queue\n *\n *   console.log('first');\n * });\n *\n * // Logs:\n * // \"first\"\n * // \"second\"\n *\n *\n * @example <caption>Reschedule itself recursively</caption>\n *\n * Rx.Scheduler.queue.schedule(function(state) {\n *   if (state !== 0) {\n *     console.log('before', state);\n *     this.schedule(state - 1); // `this` references currently executing Action,\n *                               // which we reschedule with new state\n *     console.log('after', state);\n *   }\n * }, 0, 3);\n *\n * // In scheduler that runs recursively, you would expect:\n * // \"before\", 3\n * // \"before\", 2\n * // \"before\", 1\n * // \"after\", 1\n * // \"after\", 2\n * // \"after\", 3\n *\n * // But with queue it logs:\n * // \"before\", 3\n * // \"after\", 3\n * // \"before\", 2\n * // \"after\", 2\n * // \"before\", 1\n * // \"after\", 1\n *\n *\n * @static true\n * @name queue\n * @owner Scheduler\n */\n\nexport const queue = new QueueScheduler(QueueAction);\n","import { AsyncScheduler } from './AsyncScheduler';\n\nexport class QueueScheduler extends AsyncScheduler {\n}\n","/**\n * @copyright ngrx\n */\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { Observable } from 'rxjs/Observable';\nimport { Action, ActionReducer } from './index';\nimport { observeOn } from 'rxjs/operator/observeOn';\nimport { queue } from 'rxjs/scheduler/queue';\nimport { scan } from 'rxjs/operator/scan';\n\nexport class MiniState<T> extends BehaviorSubject<T> {\n  constructor(\n    _initialState: T,\n    actionsDispatcher$: Observable<Action>,\n    reducer: ActionReducer<T>\n  ) {\n    super(_initialState);\n\n    const actionInQueue$ = observeOn.call(actionsDispatcher$, queue);\n    const state$ = scan.call(\n      actionInQueue$,\n      (state: T, action: Action) => {\n        if (!action) {\n          return state;\n        }\n\n        return reducer(state, action);\n      },\n      _initialState\n    );\n\n    state$.subscribe((value: T) => this.next(value));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  timepickerReducer,\n  TimepickerState,\n  initialState\n} from './timepicker.reducer';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\n\nimport { Action } from '../../mini-ngrx/index';\nimport { MiniStore } from '../../mini-ngrx/store.class';\nimport { MiniState } from '../../mini-ngrx/state.class';\n\n\nexport class TimepickerStore extends MiniStore<TimepickerState> {\n  constructor() {\n    const _dispatcher = new BehaviorSubject<Action>({\n      type: '[mini-ngrx] dispatcher init'\n    });\n    const state = new MiniState<TimepickerState>(\n      initialState,\n      _dispatcher,\n      timepickerReducer\n    );\n    super(_dispatcher, timepickerReducer, state);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/* tslint:disable:no-forward-ref max-file-line-count */\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  forwardRef,\n  Input,\n  OnChanges,\n  Output,\n  SimpleChanges, ViewEncapsulation\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nimport { TimepickerActions } from './reducer/timepicker.actions';\nimport { TimepickerStore } from './reducer/timepicker.store';\nimport { getControlsValue } from './timepicker-controls.util';\nimport { TimepickerConfig } from './timepicker.config';\nimport {\n  TimeChangeSource,\n  TimepickerComponentState,\n  TimepickerControls\n} from './timepicker.models';\nimport {\n  isValidDate,\n  padNumber,\n  parseTime,\n  isInputValid, parseSeconds\n} from './timepicker.utils';\nimport { fakeAsync } from '@angular/core/testing';\n\nexport const TIMEPICKER_CONTROL_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  // tslint:disable-next-line\n  useExisting: forwardRef(() => TimepickerComponent),\n  multi: true\n};\n\n\nexport class TimepickerComponent\n  implements ControlValueAccessor,\n    TimepickerComponentState,\n    TimepickerControls,\n    OnChanges {\n  /** hours change step */\n   hourStep: number;\n  /** hours change step */\n   minuteStep: number;\n  /** seconds change step */\n   secondsStep: number;\n  /** if true hours and minutes fields will be readonly */\n   readonlyInput: boolean;\n  /** if true scroll inside hours and minutes inputs will change time */\n   mousewheel: boolean;\n  /** if true up/down arrowkeys inside hours and minutes inputs will change time */\n   arrowkeys: boolean;\n  /** if true spinner arrows above and below the inputs will be shown */\n   showSpinners: boolean;\n  /** if true meridian button will be shown */\n   showMeridian: boolean;\n  /** show minutes in timepicker */\n   showMinutes: boolean;\n  /** show seconds in timepicker */\n   showSeconds: boolean;\n  /** meridian labels based on locale */\n   meridians: string[];\n  /** minimum time user can select */\n   min: Date;\n  /** maximum time user can select */\n   max: Date;\n\n  /** emits true if value is a valid date */\n   isValid: EventEmitter<boolean> = new EventEmitter();\n\n  // ui variables\n  hours: string;\n  minutes: string;\n  seconds: string;\n  meridian: string;\n\n  get isSpinnersVisible(): boolean {\n    return this.showSpinners && !this.readonlyInput;\n  }\n\n  // min\\max validation for input fields\n  invalidHours = false;\n  invalidMinutes = false;\n  invalidSeconds = false;\n\n  // time picker controls state\n  canIncrementHours: boolean;\n  canIncrementMinutes: boolean;\n  canIncrementSeconds: boolean;\n\n  canDecrementHours: boolean;\n  canDecrementMinutes: boolean;\n  canDecrementSeconds: boolean;\n\n  // control value accessor methods\n  onChange: any = Function.prototype;\n  onTouched: any = Function.prototype;\n\n  constructor(\n    _config: TimepickerConfig,\n    _cd: ChangeDetectorRef,\n    private _store: TimepickerStore,\n    private _timepickerActions: TimepickerActions\n  ) {\n    Object.assign(this, _config);\n    // todo: add unsubscribe\n    _store.select(state => state.value).subscribe(value => {\n      // update UI values if date changed\n      this._renderTime(value);\n      this.onChange(value);\n\n      this._store.dispatch(\n        this._timepickerActions.updateControls(getControlsValue(this))\n      );\n    });\n\n    _store.select(state => state.controls).subscribe(controlsState => {\n      this.isValid.emit(\n        isInputValid(this.hours, this.minutes, this.seconds, this.isPM())\n      );\n      Object.assign(this, controlsState);\n      _cd.markForCheck();\n    });\n  }\n\n  isPM(): boolean {\n    return this.showMeridian && this.meridian === this.meridians[1];\n  }\n\n  prevDef($event: any) {\n    $event.preventDefault();\n  }\n\n  wheelSign($event: any): number {\n    return Math.sign($event.deltaY as number) * -1;\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this._store.dispatch(\n      this._timepickerActions.updateControls(getControlsValue(this))\n    );\n  }\n\n  changeHours(step: number, source: TimeChangeSource = ''): void {\n    this._store.dispatch(this._timepickerActions.changeHours({ step, source }));\n  }\n\n  changeMinutes(step: number, source: TimeChangeSource = ''): void {\n    this._store.dispatch(\n      this._timepickerActions.changeMinutes({ step, source })\n    );\n  }\n\n  changeSeconds(step: number, source: TimeChangeSource = ''): void {\n    this._store.dispatch(\n      this._timepickerActions.changeSeconds({ step, source })\n    );\n  }\n\n  updateHours(hours: string): void {\n    this.hours = hours;\n    this._updateTime();\n  }\n\n  updateMinutes(minutes: string) {\n    this.minutes = minutes;\n    this._updateTime();\n  }\n\n  updateSeconds(seconds: string) {\n    this.seconds = seconds;\n    this._updateTime();\n  }\n\n  _updateTime() {\n    const _seconds = this.showSeconds ? this.seconds : void 0;\n    const _minutes = this.showMinutes ? this.minutes : void 0;\n    if (!isInputValid(this.hours, _minutes, _seconds, this.isPM())) {\n      this.isValid.emit(false);\n      this.onChange(null);\n\n      return;\n    }\n    this._store.dispatch(\n      this._timepickerActions.setTime({\n        hour: this.hours,\n        minute: this.minutes,\n        seconds: this.seconds,\n        isPM: this.isPM()\n      })\n    );\n  }\n\n  toggleMeridian(): void {\n    if (!this.showMeridian || this.readonlyInput) {\n      return;\n    }\n\n    const _hoursPerDayHalf = 12;\n    this._store.dispatch(\n      this._timepickerActions.changeHours({\n        step: _hoursPerDayHalf,\n        source: ''\n      })\n    );\n  }\n\n  /**\n   * Write a new value to the element.\n   */\n  writeValue(obj: any): void {\n    if (isValidDate(obj)) {\n      this._store.dispatch(this._timepickerActions.writeValue(parseTime(obj)));\n    } else if (obj == null) {\n      this._store.dispatch(this._timepickerActions.writeValue(null));\n    }\n  }\n\n  /**\n   * Set the function to be called when the control receives a change event.\n   */\n  registerOnChange(fn: (_: any) => {}): void {\n    this.onChange = fn;\n  }\n\n  /**\n   * Set the function to be called when the control receives a touch event.\n   */\n  registerOnTouched(fn: () => {}): void {\n    this.onTouched = fn;\n  }\n\n  /**\n   * This function is called when the control status changes to or from \"DISABLED\".\n   * Depending on the value, it will enable or disable the appropriate DOM element.\n   *\n   * @param isDisabled\n   */\n  setDisabledState(isDisabled: boolean): void {\n    this.readonlyInput = isDisabled;\n  }\n\n  private _renderTime(value: string | Date): void {\n    if (!isValidDate(value)) {\n      this.hours = '';\n      this.minutes = '';\n      this.seconds = '';\n      this.meridian = this.meridians[0];\n\n      return;\n    }\n\n    const _value = parseTime(value);\n    const _hoursPerDayHalf = 12;\n    let _hours = _value.getHours();\n\n    if (this.showMeridian) {\n      this.meridian = this.meridians[_hours >= _hoursPerDayHalf ? 1 : 0];\n      _hours = _hours % _hoursPerDayHalf;\n      // should be 12 PM, not 00 PM\n      if (_hours === 0) {\n        _hours = _hoursPerDayHalf;\n      }\n    }\n\n    this.hours = padNumber(_hours);\n    this.minutes = padNumber(_value.getMinutes());\n    this.seconds = padNumber(_value.getUTCSeconds());\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'timepicker',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [TIMEPICKER_CONTROL_VALUE_ACCESSOR, TimepickerStore],\n  template: \"<table> <tbody> <tr class=\\\"text-center\\\" [class.hidden]=\\\"!isSpinnersVisible\\\"> <!-- increment hours button--> <td> <a class=\\\"btn btn-link\\\" [class.disabled]=\\\"!canIncrementHours\\\" (click)=\\\"changeHours(hourStep)\\\" ><span class=\\\"bs-chevron bs-chevron-up\\\"></span></a> </td> <!-- divider --> <td *ngIf=\\\"showMinutes\\\">&nbsp;&nbsp;&nbsp;</td> <!-- increment minutes button --> <td *ngIf=\\\"showMinutes\\\"> <a class=\\\"btn btn-link\\\" [class.disabled]=\\\"!canIncrementMinutes\\\" (click)=\\\"changeMinutes(minuteStep)\\\" ><span class=\\\"bs-chevron bs-chevron-up\\\"></span></a> </td> <!-- divider --> <td *ngIf=\\\"showSeconds\\\">&nbsp;</td> <!-- increment seconds button --> <td *ngIf=\\\"showSeconds\\\"> <a class=\\\"btn btn-link\\\" [class.disabled]=\\\"!canIncrementSeconds\\\" (click)=\\\"changeSeconds(secondsStep)\\\"> <span class=\\\"bs-chevron bs-chevron-up\\\"></span> </a> </td> <!-- space between --> <td>&nbsp;&nbsp;&nbsp;</td> <!-- meridian placeholder--> <td *ngIf=\\\"showMeridian\\\"></td> </tr> <tr> <!-- hours --> <td class=\\\"form-group\\\" [class.has-error]=\\\"invalidHours\\\"> <input type=\\\"text\\\" class=\\\"form-control text-center bs-timepicker-field\\\" placeholder=\\\"HH\\\" maxlength=\\\"2\\\" [readonly]=\\\"readonlyInput\\\" [value]=\\\"hours\\\" (wheel)=\\\"prevDef($event);changeHours(hourStep * wheelSign($event), 'wheel')\\\" (keydown.ArrowUp)=\\\"changeHours(hourStep, 'key')\\\" (keydown.ArrowDown)=\\\"changeHours(-hourStep, 'key')\\\" (change)=\\\"updateHours($event.target.value)\\\"></td> <!-- divider --> <td *ngIf=\\\"showMinutes\\\">&nbsp;:&nbsp;</td> <!-- minutes --> <td class=\\\"form-group\\\" *ngIf=\\\"showMinutes\\\"[class.has-error]=\\\"invalidMinutes\\\"> <input type=\\\"text\\\" class=\\\"form-control text-center bs-timepicker-field\\\" placeholder=\\\"MM\\\" maxlength=\\\"2\\\" [readonly]=\\\"readonlyInput\\\" [value]=\\\"minutes\\\" (wheel)=\\\"prevDef($event);changeMinutes(minuteStep * wheelSign($event), 'wheel')\\\" (keydown.ArrowUp)=\\\"changeMinutes(minuteStep, 'key')\\\" (keydown.ArrowDown)=\\\"changeMinutes(-minuteStep, 'key')\\\" (change)=\\\"updateMinutes($event.target.value)\\\"> </td> <!-- divider --> <td *ngIf=\\\"showSeconds\\\">&nbsp;:&nbsp;</td> <!-- seconds --> <td class=\\\"form-group\\\" *ngIf=\\\"showSeconds\\\" [class.has-error]=\\\"invalidSeconds\\\"> <input type=\\\"text\\\" class=\\\"form-control text-center bs-timepicker-field\\\" placeholder=\\\"SS\\\" maxlength=\\\"2\\\" [readonly]=\\\"readonlyInput\\\" [value]=\\\"seconds\\\" (wheel)=\\\"prevDef($event);changeSeconds(secondsStep * wheelSign($event), 'wheel')\\\" (keydown.ArrowUp)=\\\"changeSeconds(secondsStep, 'key')\\\" (keydown.ArrowDown)=\\\"changeSeconds(-secondsStep, 'key')\\\" (change)=\\\"updateSeconds($event.target.value)\\\"> </td> <!-- space between --> <td>&nbsp;&nbsp;&nbsp;</td> <!-- meridian --> <td *ngIf=\\\"showMeridian\\\"> <button type=\\\"button\\\" class=\\\"btn btn-default text-center\\\" [disabled]=\\\"readonlyInput\\\" [class.disabled]=\\\"readonlyInput\\\" (click)=\\\"toggleMeridian()\\\" >{{ meridian }} </button> </td> </tr> <tr class=\\\"text-center\\\" [class.hidden]=\\\"!isSpinnersVisible\\\"> <!-- decrement hours button--> <td> <a class=\\\"btn btn-link\\\" [class.disabled]=\\\"!canDecrementHours\\\" (click)=\\\"changeHours(-hourStep)\\\"> <span class=\\\"bs-chevron bs-chevron-down\\\"></span> </a> </td> <!-- divider --> <td *ngIf=\\\"showMinutes\\\">&nbsp;&nbsp;&nbsp;</td> <!-- decrement minutes button--> <td *ngIf=\\\"showMinutes\\\"> <a class=\\\"btn btn-link\\\" [class.disabled]=\\\"!canDecrementMinutes\\\" (click)=\\\"changeMinutes(-minuteStep)\\\"> <span class=\\\"bs-chevron bs-chevron-down\\\"></span> </a> </td> <!-- divider --> <td *ngIf=\\\"showSeconds\\\">&nbsp;</td> <!-- decrement seconds button--> <td *ngIf=\\\"showSeconds\\\"> <a class=\\\"btn btn-link\\\" [class.disabled]=\\\"!canDecrementSeconds\\\" (click)=\\\"changeSeconds(-secondsStep)\\\"> <span class=\\\"bs-chevron bs-chevron-down\\\"></span> </a> </td> <!-- space between --> <td>&nbsp;&nbsp;&nbsp;</td> <!-- meridian placeholder--> <td *ngIf=\\\"showMeridian\\\"></td> </tr> </tbody> </table> \",\n  styles: [`\n    .bs-chevron{\n      border-style: solid;\n      display: block;\n      width: 9px;\n      height: 9px;\n      position: relative;\n      border-width: 3px 0px 0 3px;\n    }\n    .bs-chevron-up{\n      -webkit-transform: rotate(45deg);\n      transform: rotate(45deg);\n      top: 2px;\n    }\n    .bs-chevron-down{\n      -webkit-transform: rotate(-135deg);\n      transform: rotate(-135deg);\n      top: -2px;\n    }\n    .bs-timepicker-field{\n      width: 50px;\n    }\n  `],\n  encapsulation: ViewEncapsulation.None\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: TimepickerConfig, },\n{type: ChangeDetectorRef, },\n{type: TimepickerStore, },\n{type: TimepickerActions, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'hourStep': [{ type: Input },],\n'minuteStep': [{ type: Input },],\n'secondsStep': [{ type: Input },],\n'readonlyInput': [{ type: Input },],\n'mousewheel': [{ type: Input },],\n'arrowkeys': [{ type: Input },],\n'showSpinners': [{ type: Input },],\n'showMeridian': [{ type: Input },],\n'showMinutes': [{ type: Input },],\n'showSeconds': [{ type: Input },],\n'meridians': [{ type: Input },],\n'min': [{ type: Input },],\n'max': [{ type: Input },],\n'isValid': [{ type: Output },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { ModuleWithProviders, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { TimepickerComponent } from './timepicker.component';\nimport { TimepickerActions } from './reducer/timepicker.actions';\nimport { TimepickerConfig } from './timepicker.config';\nimport { TimepickerStore } from './reducer/timepicker.store';\n\n\nexport class TimepickerModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: TimepickerModule,\n      providers: [TimepickerConfig, TimepickerActions, TimepickerStore]\n    };\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  imports: [CommonModule],\n  declarations: [TimepickerComponent],\n  exports: [TimepickerComponent]\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","// tslint:disable:no-use-before-declare\nimport {\n  Directive,\n  HostBinding,\n  HostListener,\n  Input,\n  OnInit,\n  forwardRef\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\n// TODO: config: activeClass - Class to apply to the checked buttons\n\nexport const CHECKBOX_CONTROL_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => ButtonCheckboxDirective),\n  multi: true\n};\n\n/**\n * Add checkbox functionality to any element\n */\n\nexport class ButtonCheckboxDirective implements ControlValueAccessor, OnInit {\n  /** Truthy value, will be set to ngModel */\n   btnCheckboxTrue: any = true;\n  /** Falsy value, will be set to ngModel */\n   btnCheckboxFalse: any = false;\n\n   state = false;\n\n  protected value: any;\n  protected isDisabled: boolean;\n\n  protected onChange: any = Function.prototype;\n  protected onTouched: any = Function.prototype;\n\n  // view -> model\n  \n  onClick(): void {\n    if (this.isDisabled) {\n      return;\n    }\n\n    this.toggle(!this.state);\n    this.onChange(this.value);\n  }\n\n  ngOnInit(): any {\n    this.toggle(this.trueValue === this.value);\n  }\n\n  protected get trueValue(): boolean {\n    return typeof this.btnCheckboxTrue !== 'undefined'\n      ? this.btnCheckboxTrue\n      : true;\n  }\n\n  protected get falseValue(): boolean {\n    return typeof this.btnCheckboxFalse !== 'undefined'\n      ? this.btnCheckboxFalse\n      : false;\n  }\n\n  toggle(state: boolean): void {\n    this.state = state;\n    this.value = this.state ? this.trueValue : this.falseValue;\n  }\n\n  // ControlValueAccessor\n  // model -> view\n  writeValue(value: any): void {\n    this.state = this.trueValue === value;\n    this.value = value ? this.trueValue : this.falseValue;\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.isDisabled = isDisabled;\n  }\n\n  registerOnChange(fn: (_: any) => {}): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: () => {}): void {\n    this.onTouched = fn;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[btnCheckbox]',\n  providers: [CHECKBOX_CONTROL_VALUE_ACCESSOR]\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'btnCheckboxTrue': [{ type: Input },],\n'btnCheckboxFalse': [{ type: Input },],\n'state': [{ type: HostBinding, args: ['class.active', ] },],\n'onClick': [{ type: HostListener, args: ['click', ] },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","// tslint:disable:no-use-before-declare\nimport { ChangeDetectorRef, Directive, ElementRef, forwardRef, Input } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nexport const RADIO_CONTROL_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => ButtonRadioGroupDirective),\n  multi: true\n};\n\n/**\n * A group of radio buttons.\n * A value of a selected button is bound to a variable specified via ngModel.\n */\n\nexport class ButtonRadioGroupDirective implements ControlValueAccessor {\n  onChange: any = Function.prototype;\n  onTouched: any = Function.prototype;\n\n  get value(): any {\n    return this._value;\n  }\n  set value(value: any) {\n    this._value = value;\n  }\n\n  private _value: any;\n\n  constructor(private el: ElementRef, private cdr: ChangeDetectorRef) {}\n\n  writeValue(value: any): void {\n    this._value = value;\n    this.cdr.markForCheck();\n  }\n\n  registerOnChange(fn: any): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this.onTouched = fn;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[btnRadioGroup]',\n  providers: [RADIO_CONTROL_VALUE_ACCESSOR]\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: ChangeDetectorRef, },\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","// tslint:disable:no-use-before-declare\nimport {\n  ChangeDetectorRef, Directive, ElementRef, forwardRef, HostBinding, HostListener, Input, OnInit,\n  Optional, Renderer2\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { ButtonRadioGroupDirective } from './button-radio-group.directive';\n\nexport const RADIO_CONTROL_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => ButtonRadioDirective),\n  multi: true\n};\n\n/**\n * Create radio buttons or groups of buttons.\n * A value of a selected button is bound to a variable specified via ngModel.\n */\n\nexport class ButtonRadioDirective implements ControlValueAccessor, OnInit {\n  onChange: any = Function.prototype;\n  onTouched: any = Function.prototype;\n  private _value: any;\n  private _disabled: boolean;\n\n  /** Radio button value, will be set to `ngModel` */\n   btnRadio: any;\n  /** If `true` — radio button can be unchecked */\n   uncheckable: boolean;\n  /** Current value of radio component or group */\n   get value(): any {\n    return this.group ? this.group.value : this._value;\n  }\n\n  set value(value: any) {\n    if (this.group) {\n      this.group.value = value;\n\n      return;\n    }\n    this._value = value;\n  }\n  /** If `true` — radio button is disabled */\n   get disabled(): boolean {\n    return this._disabled;\n  }\n\n  set disabled(disabled: boolean) {\n    this._disabled = disabled;\n    this.setDisabledState(disabled);\n  }\n\n  \n  get isActive(): boolean {\n    return this.btnRadio === this.value;\n  }\n\n  constructor(\n    private el: ElementRef,\n    private cdr: ChangeDetectorRef,\n     private group: ButtonRadioGroupDirective,\n    private renderer: Renderer2\n  ) {}\n\n  \n  onClick(): void {\n    if (this.el.nativeElement.attributes.disabled || !this.uncheckable && this.btnRadio === this.value) {\n      return;\n    }\n\n    this.value = this.uncheckable && this.btnRadio === this.value ? undefined : this.btnRadio;\n    this._onChange(this.value);\n  }\n\n  ngOnInit(): void {\n    this.uncheckable = typeof this.uncheckable !== 'undefined';\n  }\n\n  onBlur(): void {\n    this.onTouched();\n  }\n\n  _onChange(value: any): void {\n    if (this.group) {\n      this.group.onTouched();\n      this.group.onChange(value);\n\n      return;\n    }\n    this.onTouched();\n    this.onChange(value);\n  }\n\n  // ControlValueAccessor\n  // model -> view\n  writeValue(value: any): void {\n    this.value = value;\n    this.cdr.markForCheck();\n  }\n\n  registerOnChange(fn: any): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this.onTouched = fn;\n  }\n\n  setDisabledState(disabled: boolean): void {\n    if (disabled) {\n      this.renderer.setAttribute(this.el.nativeElement, 'disabled', 'disabled');\n\n      return;\n    }\n    this.renderer.removeAttribute(this.el.nativeElement, 'disabled');\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[btnRadio]',\n  providers: [RADIO_CONTROL_VALUE_ACCESSOR]\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: ChangeDetectorRef, },\n{type: ButtonRadioGroupDirective, decorators: [{ type: Optional }, ]},\n{type: Renderer2, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'btnRadio': [{ type: Input },],\n'uncheckable': [{ type: Input },],\n'value': [{ type: Input },],\n'disabled': [{ type: Input },],\n'isActive': [{ type: HostBinding, args: ['class.active', ] },],\n'onClick': [{ type: HostListener, args: ['click', ] },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\n\nimport { ButtonCheckboxDirective } from './button-checkbox.directive';\nimport { ButtonRadioDirective } from './button-radio.directive';\nimport { ButtonRadioGroupDirective } from './button-radio-group.directive';\n\n\nexport class ButtonsModule {\n  static forRoot(): ModuleWithProviders {\n    return { ngModule: ButtonsModule, providers: [] };\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  declarations: [ButtonCheckboxDirective, ButtonRadioDirective, ButtonRadioGroupDirective],\n  exports: [ButtonCheckboxDirective, ButtonRadioDirective, ButtonRadioGroupDirective]\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","\n/**\n * Convert a single dimension array to a double dimension array\n * @template T\n * @param {?} items the single dimension array to convert\n * @param {?} columns the number of items each array should have\n * @return {?}\n */\nexport function gridify<T>(items: T[], columns: number): T[][] {\n\n    const /** @type {?} */ grid: T[][] = [];\n\n    while (items.length) {\n        grid.push(items.splice(0, columns));\n    }\n\n    return grid;\n}\n/**\n * Create an array of numbers between two limits\n * @param {?} start the lower limit\n * @param {?} end the upper limit\n * @return {?}\n */\nexport function range(start: number, end: number): number[] {\n    const /** @type {?} */ list: number[] = [];\n\n    for (let /** @type {?} */ idx = start; idx <= end; idx++) {\n        list.push(idx);\n    }\n\n    return list;\n}\n/**\n * Create an array of dates between two points\n * @param {?} start the date to start the array\n * @param {?} end the date to end the array\n * @return {?}\n */\nexport function dateRange(start: Date, end: Date): Date[] {\n\n    let /** @type {?} */ dates: Date[] = [];\n\n    // loop through all the days between the date range\n    while (start <= end) {\n\n        // add the date to the array\n        dates.push(new Date(start));\n\n        // move to the next day\n        start.setDate(start.getDate() + 1);\n    }\n\n    return dates;\n}\n/**\n * Compare two dates to see if they are on the same day\n * @param {?} day1 the first date to compare\n * @param {?} day2 the second date to compare\n * @return {?}\n */\nexport function compareDays(day1: Date, day2: Date): boolean {\n    return day1.getDate() === day2.getDate() &&\n        day1.getMonth() === day2.getMonth() &&\n        day1.getFullYear() === day2.getFullYear();\n}\n/**\n * Export an array of all the available months\n */\nexport const months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\nexport const /** @type {?} */ monthsShort = months.map(month => month.substring(0, 3));\n/**\n * Export an array of all the available days of the week\n */\nexport const weekdays = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'];\nexport const /** @type {?} */ weekdaysShort = weekdays.map(weekday => weekday.substring(0, 3));","/**\n * Add a config service to allow an application\n * to customize the date time picker default settings\n * across the entire application\n */\n\n\nimport { Injectable } from '@angular/core';\nimport { weekdaysShort } from './date-time-picker.utils';\nimport { DateTimePickerTimezone } from './time-view/time-view.component';\nexport class DateTimePickerConfig {\n\n    showDate: boolean = true;\n    showTime: boolean = true;\n    showTimezone: boolean = true;\n    showSeconds: boolean = false;\n    showMeridian: boolean = true;\n    showSpinners: boolean = true;\n    weekdays: string[] = weekdaysShort;\n    nowBtnText: string = 'Today';\n\n    timezones: DateTimePickerTimezone[] = [\n        { name: 'GMT-11', offset: -660 },\n        { name: 'GMT-10', offset: -600 },\n        { name: 'GMT-9', offset: -540 },\n        { name: 'GMT-8', offset: -480 },\n        { name: 'GMT-7', offset: -420 },\n        { name: 'GMT-6', offset: -360 },\n        { name: 'GMT-5', offset: -300 },\n        { name: 'GMT-4', offset: -240 },\n        { name: 'GMT-3', offset: -180 },\n        { name: 'GMT-2', offset: -12 },\n        { name: 'GMT-1', offset: -60 },\n        { name: 'GMT', offset: 0 },\n        { name: 'GMT+1', offset: 60 },\n        { name: 'GMT+2', offset: 120 },\n        { name: 'GMT+3', offset: 180 },\n        { name: 'GMT+4', offset: 240 },\n        { name: 'GMT+5', offset: 300 },\n        { name: 'GMT+6', offset: 360 },\n        { name: 'GMT+7', offset: 420 },\n        { name: 'GMT+8', offset: 480 },\n        { name: 'GMT+9', offset: 540 },\n        { name: 'GMT+10', offset: 600 },\n        { name: 'GMT+11', offset: 660 },\n        { name: 'GMT+12', offset: 720 }\n    ];\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction DateTimePickerConfig_tsickle_Closure_declarations() {\n/** @type {?} */\nDateTimePickerConfig.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDateTimePickerConfig.ctorParameters;\n/** @type {?} */\nDateTimePickerConfig.prototype.showDate;\n/** @type {?} */\nDateTimePickerConfig.prototype.showTime;\n/** @type {?} */\nDateTimePickerConfig.prototype.showTimezone;\n/** @type {?} */\nDateTimePickerConfig.prototype.showSeconds;\n/** @type {?} */\nDateTimePickerConfig.prototype.showMeridian;\n/** @type {?} */\nDateTimePickerConfig.prototype.showSpinners;\n/** @type {?} */\nDateTimePickerConfig.prototype.weekdays;\n/** @type {?} */\nDateTimePickerConfig.prototype.nowBtnText;\n/** @type {?} */\nDateTimePickerConfig.prototype.timezones;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { DatePickerMode } from './date-time-picker.component';\nimport'rxjs/add/operator/distinctUntilChanged';\nexport class DateTimePickerService {\n\n    date: BehaviorSubject<Date> = new BehaviorSubject<Date>(new Date());\n    activeDate: BehaviorSubject<Date> = new BehaviorSubject<Date>(new Date());\n\n    mode: BehaviorSubject<DatePickerMode> = new BehaviorSubject<DatePickerMode>(DatePickerMode.Day);\n\n    month: BehaviorSubject<number> = new BehaviorSubject<number>(new Date().getMonth());\n    year: BehaviorSubject<number> = new BehaviorSubject<number>(new Date().getFullYear());\nconstructor() {\n\n        // when the date changes update the current month and year\n        this.date.distinctUntilChanged((previous, current) => previous.getTime() === current.getTime()).subscribe(date => {\n            this.month.next(date.getMonth());\n            this.year.next(date.getFullYear());\n        });\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction DateTimePickerService_tsickle_Closure_declarations() {\n/** @type {?} */\nDateTimePickerService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDateTimePickerService.ctorParameters;\n/** @type {?} */\nDateTimePickerService.prototype.date;\n/** @type {?} */\nDateTimePickerService.prototype.activeDate;\n/** @type {?} */\nDateTimePickerService.prototype.mode;\n/** @type {?} */\nDateTimePickerService.prototype.month;\n/** @type {?} */\nDateTimePickerService.prototype.year;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Input, Output, EventEmitter, ViewChild } from '@angular/core';\nimport { DateTimePickerTimeViewComponent, DateTimePickerTimezone } from './time-view/time-view.component';\nimport { weekdaysShort } from './date-time-picker.utils';\nimport { DateTimePickerConfig } from './date-time-picker.config';\nimport { DateTimePickerService } from './date-time-picker.service';\nexport class DateTimePickerComponent {\n\n   timePickerComponent: DateTimePickerTimeViewComponent;\nprivate _timezone: DateTimePickerTimezone;\n\n   showDate: boolean = this._config.showDate;\n   showTime: boolean = this._config.showTime;\n   showTimezone: boolean = this._config.showTimezone;\n   showSeconds: boolean = this._config.showSeconds;\n   showMeridian: boolean = this._config.showMeridian;\n   showSpinners: boolean = this._config.showSpinners;\n   weekdays: string[] = this._config.weekdays;\n   nowBtnText: string = this._config.nowBtnText;\n   timezones: DateTimePickerTimezone[] = this._config.timezones;\n\n   dateChange: EventEmitter<Date> = new EventEmitter<Date>();\n   timezoneChange: EventEmitter<DateTimePickerTimezone> = new EventEmitter<DateTimePickerTimezone>();\n/**\n * @param {?} value\n * @return {?}\n */\nset date(value: Date) {\n\n    this.dateTimePickerService.date.next(new Date(value));\n\n    // set the active date to the new date\n    this.dateTimePickerService.activeDate.next(new Date(value));\n  }\n/**\n * @return {?}\n */\nget date(): Date {\n    return this.dateTimePickerService.date.getValue();\n  }\n/**\n * @param {?} value\n * @return {?}\n */\nset timezone(value: DateTimePickerTimezone) {\n    const /** @type {?} */ timezone = this.timezones.find(zone => zone.offset === value.offset);\n\n    // only update if the timezone is valid\n    if (timezone) {\n      this._timezone = timezone;\n    }\n  }\n/**\n * @return {?}\n */\nget timezone(): DateTimePickerTimezone {\n    return this._timezone;\n  }\n\n  // expose enum to view\n  DatePickerMode = DatePickerMode;\n/**\n * @param {?} _config\n * @param {?} dateTimePickerService\n */\nconstructor(private _config: DateTimePickerConfig,\npublic dateTimePickerService: DateTimePickerService) { }\n/**\n * This will emit the newly selected date\n * @return {?}\n */\ncommit(): void {\n    this.dateChange.emit(this.dateTimePickerService.activeDate.getValue());\n  }\n/**\n * Change the date to the current date and time\n * @return {?}\n */\nsetToNow(): void {\n\n    // set the date to the current moment\n    this.date = new Date();\n\n    // reset the timezone to the default\n    if (this.timePickerComponent) {\n      this.timePickerComponent.setDefaultTimezone();\n    }\n\n    // emit the changes\n    this.commit();\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'ux-date-time-picker',\n  template: `\n    <div class=\"calendar-container\">\n\n      <ng-container *ngIf=\"showDate\" [ngSwitch]=\"dateTimePickerService.mode | async\">\n\n        <!-- Display days in the current month -->\n        <ux-date-time-picker-day-view *ngSwitchCase=\"DatePickerMode.Day\" [weekdays]=\"weekdays\" (dateChange)=\"commit()\"></ux-date-time-picker-day-view>\n  \n        <!-- Display the months in the current year -->\n        <ux-date-time-picker-month-view *ngSwitchCase=\"DatePickerMode.Month\"></ux-date-time-picker-month-view>\n  \n        <!-- Display a decade -->\n        <ux-date-time-picker-year-view *ngSwitchCase=\"DatePickerMode.Year\"></ux-date-time-picker-year-view>\n  \n      </ng-container>\n\n      <!-- Display a Time Picker -->\n      <ux-date-time-picker-time-view *ngIf=\"showTime\" #timePicker (dateChange)=\"commit()\" [showSpinners]=\"showSpinners\" [showTimezone]=\"showTimezone\" [showSeconds]=\"showSeconds\" [showMeridian]=\"showMeridian\" (dateChange)=\"commit()\" [timezone]=\"timezone\" (timezoneChange)=\"timezoneChange.emit($event)\" [timezones]=\"timezones\"></ux-date-time-picker-time-view>\n\n    </div>\n\n    <button class=\"now-button\" (click)=\"setToNow()\">{{ nowBtnText }}</button>\n  `,\n  providers: [DateTimePickerService]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: DateTimePickerConfig, },\n{type: DateTimePickerService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'timePickerComponent': [{ type: ViewChild, args: ['timePicker', ] },],\n'showDate': [{ type: Input },],\n'showTime': [{ type: Input },],\n'showTimezone': [{ type: Input },],\n'showSeconds': [{ type: Input },],\n'showMeridian': [{ type: Input },],\n'showSpinners': [{ type: Input },],\n'weekdays': [{ type: Input },],\n'nowBtnText': [{ type: Input },],\n'timezones': [{ type: Input },],\n'dateChange': [{ type: Output },],\n'timezoneChange': [{ type: Output },],\n'date': [{ type: Input },],\n'timezone': [{ type: Input },],\n};\n}\n\nfunction DateTimePickerComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nDateTimePickerComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDateTimePickerComponent.ctorParameters;\n/** @type {?} */\nDateTimePickerComponent.propDecorators;\n/** @type {?} */\nDateTimePickerComponent.prototype.timePickerComponent;\n/** @type {?} */\nDateTimePickerComponent.prototype._timezone;\n/** @type {?} */\nDateTimePickerComponent.prototype.showDate;\n/** @type {?} */\nDateTimePickerComponent.prototype.showTime;\n/** @type {?} */\nDateTimePickerComponent.prototype.showTimezone;\n/** @type {?} */\nDateTimePickerComponent.prototype.showSeconds;\n/** @type {?} */\nDateTimePickerComponent.prototype.showMeridian;\n/** @type {?} */\nDateTimePickerComponent.prototype.showSpinners;\n/** @type {?} */\nDateTimePickerComponent.prototype.weekdays;\n/** @type {?} */\nDateTimePickerComponent.prototype.nowBtnText;\n/** @type {?} */\nDateTimePickerComponent.prototype.timezones;\n/** @type {?} */\nDateTimePickerComponent.prototype.dateChange;\n/** @type {?} */\nDateTimePickerComponent.prototype.timezoneChange;\n/** @type {?} */\nDateTimePickerComponent.prototype.DatePickerMode;\n/** @type {?} */\nDateTimePickerComponent.prototype._config;\n/** @type {?} */\nDateTimePickerComponent.prototype.dateTimePickerService;\n}\n\nexport type DatePickerMode = number;\nexport let DatePickerMode: any = {};\nDatePickerMode.Day = 0;\nDatePickerMode.Month = 1;\nDatePickerMode.Year = 2;\nDatePickerMode[DatePickerMode.Day] = \"Day\";\nDatePickerMode[DatePickerMode.Month] = \"Month\";\nDatePickerMode[DatePickerMode.Year] = \"Year\";\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Input, Output, EventEmitter, OnInit, OnDestroy } from '@angular/core';\nimport { dateRange, gridify, compareDays, months, weekdaysShort } from '../date-time-picker.utils';\nimport { DateTimePickerService } from '../date-time-picker.service';\nimport { DatePickerMode } from '../date-time-picker.component';\nimport'rxjs/add/operator/distinctUntilChanged';\nimport'rxjs/add/observable/merge';\nimport { Subscription } from 'rxjs/Subscription';\nimport { Observable } from 'rxjs/Observable';\nexport class DateTimePickerDayViewComponent implements OnInit, OnDestroy {\n\n  header: string;\n  days: DatePickerDay[][] = [];\n\n   weekdays: string[] = weekdaysShort;\n   dateChange: EventEmitter<void> = new EventEmitter<void>();\n/**\n * @param {?} value\n * @return {?}\n */\nset date(value: Date) {\n    this.dateTimePickerService.activeDate.next(value);\n  }\n/**\n * @return {?}\n */\nget date() {\n    return this.dateTimePickerService.activeDate.getValue();\n  }\n/**\n * @param {?} value\n * @return {?}\n */\nset month(value: number) {\n    this.dateTimePickerService.month.next(value);\n  }\n/**\n * @return {?}\n */\nget month(): number {\n    return this.dateTimePickerService.month.getValue();\n  }\n/**\n * @param {?} value\n * @return {?}\n */\nset year(value: number) {\n    this.dateTimePickerService.year.next(value);\n  }\n/**\n * @return {?}\n */\nget year(): number {\n    return this.dateTimePickerService.year.getValue();\n  }\nprivate _subscription: Subscription;\n/**\n * @param {?} dateTimePickerService\n */\nconstructor(public dateTimePickerService: DateTimePickerService) {}\n/**\n * @return {?}\n */\nngOnInit(): void {\n\n    // update the grid only when the value of the active date, month or year has changed\n    this._subscription = Observable.merge(\n      this.dateTimePickerService.activeDate.distinctUntilChanged(),\n      this.dateTimePickerService.month.distinctUntilChanged(),\n      this.dateTimePickerService.year.distinctUntilChanged()\n    )\n    .subscribe(() => this.update());\n\n  }\n/**\n * @return {?}\n */\nngOnDestroy(): void {\n    // remove all subscriptions\n    this._subscription.unsubscribe();\n  }\n/**\n * Navigate to the previous page of dates\n * @return {?}\n */\nprevious(): void {\n\n    // update the month\n    this.month--;\n\n    // if the month is now the previous year take that into account\n    if (this.month < 0) {\n      this.month = 11;\n      this.year--;\n    }\n\n    // update the grid\n    this.update();\n  }\n/**\n * Navigate to the next page of dates\n * @return {?}\n */\nnext(): void {\n\n    // update the month\n    this.month++;\n\n    // if the month is now the previous year take that into account\n    if (this.month > 11) {\n      this.month = 0;\n      this.year++;\n    }\n\n    // update the grid\n    this.update();\n  }\n/**\n * Updates the grid of all the days in the month\n * @return {?}\n */\nupdate(): void {\n\n    // find the lower and upper boundaries\n    const /** @type {?} */ start = new Date(this.year, this.month, 1);\n    const /** @type {?} */ end = new Date(this.year, this.month + 1, 0);\n\n    // we always want to show from the sunday - this may include showing some dates from the previous month\n    start.setDate(start.getDate() - start.getDay());\n\n    // we also want to make sure that the range ends on a saturday\n    end.setDate(end.getDate() + (6 - end.getDay()));\n\n    // create an array of all the days to display\n    const /** @type {?} */ dates = dateRange(start, end);\n\n    // update the page header\n    this.header = `${months[this.month]} ${this.year}`;\n\n    // turn the dates into a grid\n    this.days = gridify(dates, 7).map(week => week.map(date => ({\n      date: date,\n      today: this.isToday(date),\n      active: this.isActive(date),\n      currentMonth: this.isCurrentMonth(date)\n    })));\n  }\n/**\n * Select a particular date\n * @param {?} date the date to select\n * @return {?}\n */\nselect(date: Date): void {\n    // update the current date object\n    this.date = new Date(date);\n\n    // emit the new date\n    this.dateChange.emit();\n  }\n/**\n * Determine whether or not a specific date is today\n * @param {?} date The date to check\n * @return {?}\n */\nisToday(date: Date): boolean {\n    return compareDays(new Date(), date);\n  }\n/**\n * Determines whether or not a specific date is the selected one\n * @param {?} date the date to check\n * @return {?}\n */\nisActive(date: Date): boolean {\n    return compareDays(this.date, date);\n  }\n/**\n * Determine whether or not a date is within the current month\n * or is it part of another month being show to fill the grid\n * @param {?} date The date in question\n * @return {?}\n */\nisCurrentMonth(date: Date): boolean {\n    return date.getMonth() === this.month;\n  }\n/**\n * Update the date picker view to show the month picker\n * @return {?}\n */\nshowMonthPicker(): void {\n    this.dateTimePickerService.mode.next(DatePickerMode.Month);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'ux-date-time-picker-day-view',\n  template: `\n    <ux-date-time-picker-header [header]=\"header\" (previous)=\"previous()\" (next)=\"next()\" (ascend)=\"showMonthPicker()\"></ux-date-time-picker-header>\n\n    <table class=\"calendar\">\n      <thead>\n        <tr>\n          <th *ngFor=\"let day of weekdays\" class=\"weekday\">{{ day }}</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        <tr *ngFor=\"let row of days\">\n          <td *ngFor=\"let day of row\" class=\"date-cell\" [class.current]=\"day.today\" \n            [class.active]=\"day.active\" [class.preview]=\"!day.currentMonth\" \n            (mousedown)=\"select(day.date)\" (keyup.enter)=\"select(day.date)\" \n            tabindex=\"0\">{{ day.date.getDate() }}</td>\n        </tr>\n      </tbody>\n    </table>\n  `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: DateTimePickerService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'weekdays': [{ type: Input },],\n'dateChange': [{ type: Output },],\n};\n}\n\nfunction DateTimePickerDayViewComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nDateTimePickerDayViewComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDateTimePickerDayViewComponent.ctorParameters;\n/** @type {?} */\nDateTimePickerDayViewComponent.propDecorators;\n/** @type {?} */\nDateTimePickerDayViewComponent.prototype.header;\n/** @type {?} */\nDateTimePickerDayViewComponent.prototype.days;\n/** @type {?} */\nDateTimePickerDayViewComponent.prototype.weekdays;\n/** @type {?} */\nDateTimePickerDayViewComponent.prototype.dateChange;\n/** @type {?} */\nDateTimePickerDayViewComponent.prototype._subscription;\n/** @type {?} */\nDateTimePickerDayViewComponent.prototype.dateTimePickerService;\n}\n\n\nexport interface DatePickerDay {\n  date: Date;\n  today: boolean;\n  active: boolean;\n  currentMonth: boolean;\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { gridify, range, monthsShort } from '../date-time-picker.utils';\nimport { DateTimePickerService } from '../date-time-picker.service';\nimport { DatePickerMode } from '../date-time-picker.component';\nexport class DateTimePickerMonthViewComponent {\n\n  months: number[][] = gridify(range(0, 11), 4);\n  currentDate: Date = new Date();\n/**\n * @return {?}\n */\nget date() {\n    return this._dateTimePickerService.activeDate.getValue();\n  }\n/**\n * @param {?} value\n * @return {?}\n */\nset month(value: number) {\n    this._dateTimePickerService.month.next(value);\n  }\n/**\n * @return {?}\n */\nget month(): number {\n    return this._dateTimePickerService.month.getValue();\n  }\n/**\n * @param {?} value\n * @return {?}\n */\nset year(value: number) {\n    this._dateTimePickerService.year.next(value);\n  }\n/**\n * @return {?}\n */\nget year(): number {\n    return this._dateTimePickerService.year.getValue();\n  }\n/**\n * @param {?} _dateTimePickerService\n */\nconstructor(private _dateTimePickerService: DateTimePickerService) {}\n/**\n * Go to the previous year and emit the change\n * @return {?}\n */\nprevious(): void {\n    this.year--;\n  }\n/**\n * Go to the next year and emit the change\n * @return {?}\n */\nnext(): void {\n    this.year++;\n  }\n/**\n * Select a month in the calendar\n * @param {?} month the index of the month to select\n * @return {?}\n */\nselect(month: number): void {\n    this.month = month;\n\n    // show the day picker\n    this.showDayPicker();\n  }\n/**\n * Get the name of a month\n * @param {?} month the month in question\n * @return {?}\n */\ngetMonthName(month: number): string {\n    return monthsShort[month];\n  }\n/**\n * Show the daye picker view\n * @return {?}\n */\nshowDayPicker(): void {\n    this._dateTimePickerService.mode.next(DatePickerMode.Day);\n  }\n/**\n * Show the year picker view\n * @return {?}\n */\nshowYearPicker(): void {\n    this._dateTimePickerService.mode.next(DatePickerMode.Year);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'ux-date-time-picker-month-view',\n  template: `\n    <ux-date-time-picker-header [header]=\"year\" (previous)=\"previous()\" (next)=\"next()\" (ascend)=\"showYearPicker()\"></ux-date-time-picker-header>\n\n    <div class=\"calendar\">\n      <div class=\"calendar-row\" *ngFor=\"let row of months\">\n        <div class=\"calendar-item\" *ngFor=\"let item of row\" [class.active]=\"item === date.getMonth() && year === date.getFullYear()\"\n          [class.current]=\"item === currentDate.getMonth() && year === currentDate.getFullYear()\" (mousedown)=\"select(item)\" (keyup.enter)=\"select(item)\" tabindex=\"0\">{{ getMonthName(item) }}</div>\n      </div>\n    </div>\n  `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: DateTimePickerService, },\n];\n}\n\nfunction DateTimePickerMonthViewComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nDateTimePickerMonthViewComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDateTimePickerMonthViewComponent.ctorParameters;\n/** @type {?} */\nDateTimePickerMonthViewComponent.prototype.months;\n/** @type {?} */\nDateTimePickerMonthViewComponent.prototype.currentDate;\n/** @type {?} */\nDateTimePickerMonthViewComponent.prototype._dateTimePickerService;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Input, EventEmitter, Output, SimpleChanges, OnInit } from '@angular/core';\nimport { gridify, range } from '../date-time-picker.utils';\nimport { DateTimePickerService } from '../date-time-picker.service';\nimport { DatePickerMode } from '../date-time-picker.component';\nexport class DateTimePickerYearViewComponent implements OnInit {\nprivate _page: number = 0;\n\n  header: string;\n  years: number[][] = [];\n  currentYear: number = new Date().getFullYear();\n/**\n * @return {?}\n */\nngOnInit(): void {\n    this.update();\n  }\n/**\n * @param {?} value\n * @return {?}\n */\nset year(value: number) {\n    this._dateTimePickerService.year.next(value);\n  }\n/**\n * @return {?}\n */\nget year(): number {\n    return this._dateTimePickerService.year.getValue();\n  }\n/**\n * @param {?} _dateTimePickerService\n */\nconstructor(private _dateTimePickerService: DateTimePickerService) {}\n/**\n * @param {?} year\n * @return {?}\n */\nselect(year: number): void {\n    this.year = year;\n\n    // show the month picker\n    this.showMonthPicker();\n  }\n/**\n * @return {?}\n */\nprevious(): void {\n    this._page--;\n    this.update();\n  }\n/**\n * @return {?}\n */\nnext(): void {\n    this._page++;\n    this.update();\n  }\n/**\n * @return {?}\n */\nupdate(): void {\n\n    // get the years to display\n    const /** @type {?} */ decade = this.getDecade();\n\n    // update the header\n    this.header = `${decade.start} - ${decade.end}`;\n\n    // create the grid\n    this.years = gridify(decade.range, 4);\n  }\n/**\n * Get the years in the current decade to display\n * @return {?}\n */\ngetDecade(): DatePickerYearRange {\n\n    // the number of years to display\n    const /** @type {?} */ yearCount = 10;\n\n    // figure the start and end points\n    const /** @type {?} */ start = (this.year - (this.year % yearCount)) + (this._page * yearCount);\n    const /** @type {?} */ end = start + yearCount - 1;\n\n    // create an array containing all the numbers between the start and end points\n    return { start: start, end: end, range: range(start, end) };\n  }\n/**\n * Show the month picker view\n * @return {?}\n */\nshowMonthPicker(): void {\n    this._dateTimePickerService.mode.next(DatePickerMode.Month);\n  }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'ux-date-time-picker-year-view',\n  template: `\n    <ux-date-time-picker-header [header]=\"header\" [canAscend]=\"false\" (previous)=\"previous()\" (next)=\"next()\"></ux-date-time-picker-header>\n\n    <div class=\"calendar\">\n      <div class=\"calendar-row\" *ngFor=\"let row of years\">\n        <div *ngFor=\"let item of row\" class=\"calendar-item\" [class.current]=\"item === currentYear\" [class.active]=\"item === year\"\n        (mousedown)=\"select(item)\" (keyup.enter)=\"select(item)\" tabindex=\"0\">{{ item }}</div>\n      </div>\n    </div>\n  `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: DateTimePickerService, },\n];\n}\n\nfunction DateTimePickerYearViewComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nDateTimePickerYearViewComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDateTimePickerYearViewComponent.ctorParameters;\n/** @type {?} */\nDateTimePickerYearViewComponent.prototype._page;\n/** @type {?} */\nDateTimePickerYearViewComponent.prototype.header;\n/** @type {?} */\nDateTimePickerYearViewComponent.prototype.years;\n/** @type {?} */\nDateTimePickerYearViewComponent.prototype.currentYear;\n/** @type {?} */\nDateTimePickerYearViewComponent.prototype._dateTimePickerService;\n}\n\n\nexport interface DatePickerYearRange {\n  start: number;\n  end: number;\n  range: number[];\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nexport class DateTimePickerHeaderComponent {\n\n     header: string;\n     canAscend: boolean = true;\n\n     next: EventEmitter<void> = new EventEmitter<void>();\n     previous: EventEmitter<void> = new EventEmitter<void>();\n     ascend: EventEmitter<void> = new EventEmitter<void>();\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-date-time-picker-header',\n    template: `\n      <header class=\"header\">\n\n        <div class=\"header-navigation\" (click)=\"previous.emit(); $event.stopPropagation()\" (keyup.enter)=\"previous.emit()\" tabindex=\"0\">\n          <i class=\"hpe-icon hpe-previous\"></i>\n        </div>\n\n        <div class=\"header-title\" [class.active]=\"canAscend\" (click)=\"ascend.emit(); $event.stopPropagation()\" (keyup.enter)=\"ascend.emit()\" tabindex=\"0\">{{ header }}</div>\n\n        <div class=\"header-navigation\" (click)=\"next.emit(); $event.stopPropagation()\" (keyup.enter)=\"next.emit()\" tabindex=\"0\">\n          <i class=\"hpe-icon hpe-next\"></i>\n        </div>\n      </header>\n    `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'header': [{ type: Input },],\n'canAscend': [{ type: Input },],\n'next': [{ type: Output },],\n'previous': [{ type: Output },],\n'ascend': [{ type: Output },],\n};\n}\n\nfunction DateTimePickerHeaderComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nDateTimePickerHeaderComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDateTimePickerHeaderComponent.ctorParameters;\n/** @type {?} */\nDateTimePickerHeaderComponent.propDecorators;\n/** @type {?} */\nDateTimePickerHeaderComponent.prototype.header;\n/** @type {?} */\nDateTimePickerHeaderComponent.prototype.canAscend;\n/** @type {?} */\nDateTimePickerHeaderComponent.prototype.next;\n/** @type {?} */\nDateTimePickerHeaderComponent.prototype.previous;\n/** @type {?} */\nDateTimePickerHeaderComponent.prototype.ascend;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Input, EventEmitter, Output, AfterViewInit } from '@angular/core';\nexport class DateTimePickerTimeViewComponent implements AfterViewInit {\n\n     date: Date = new Date();\n     showSeconds: boolean = false;\n     showSpinners: boolean = true;\n     showTimezone: boolean = true;\n     showMeridian: boolean = true;\n\n     timezones: DateTimePickerTimezone[];\n\n     dateChange: EventEmitter<Date> = new EventEmitter<Date>();\n     timezoneChange: EventEmitter<DateTimePickerTimezone> = new EventEmitter<DateTimePickerTimezone>();\n\n    meridian: DatePickerMeridian = DatePickerMeridian.AM;\n/**\n * @param {?} value\n * @return {?}\n */\nset timezone(value: DateTimePickerTimezone) {\n        if (value !== this._timezone) {\n            this._timezone = value;\n            this.timezoneChange.emit(this._timezone);\n        }\n    }\n/**\n * @return {?}\n */\nget timezone() {\n        return this._timezone;\n    }\n\n    // Expose enum to view\n    DatePickerMeridian = DatePickerMeridian;\nprivate _timezone: DateTimePickerTimezone;\n/**\n * @return {?}\n */\nngAfterViewInit(): void {\n\n        // if the user did not specify a timezone - choose a default one\n        if (!this.timezone) {\n            setTimeout(() => this.setDefaultTimezone());\n        }\n    }\n/**\n * @return {?}\n */\nsetDefaultTimezone(): void {\n        // determine the user default timezone\n        const /** @type {?} */ offset = new Date().getTimezoneOffset();\n\n        // find the closest timezone\n        this.timezone = this.timezones.find(zone => zone.offset === offset);\n\n        // if not match was found then set to GMT\n        if (!this.timezone) {\n            this.timezone = this.timezones.find(zone => zone.offset === 0);\n        }\n    }\n/**\n * @param {?} date\n * @return {?}\n */\nupdate(date: Date | null): void {\n\n        // if the date is invalid then stop here\n        if (!date) {\n            return;\n        }\n\n        // update the meridian\n        this.meridian = date.getHours() < 12 ? DatePickerMeridian.AM : DatePickerMeridian.PM;\n        \n        // if the date has not changed then don't emit\n        if (date.getTime() !== this.date.getTime()) {\n            this.date = date;\n            this.dateChange.emit(date);\n        }\n    }\n/**\n * @param {?} meridian\n * @return {?}\n */\nsetMeridian(meridian: DatePickerMeridian): void {\n\n        // get the current hours\n        const /** @type {?} */ hours = this.date.getHours();\n\n        // if we are transitioning to AM and time is currently PM\n        if (meridian === DatePickerMeridian.AM && hours >= 12) {\n            this.date.setHours(hours - 12);\n            this.dateChange.emit(this.date);\n        }\n\n        // if we are transitioning to PM and time is currently AM\n        if (meridian === DatePickerMeridian.PM && hours < 12) {\n            this.date.setHours(hours + 12);\n            this.dateChange.emit(this.date);\n        }\n    }\n/**\n * @return {?}\n */\npreviousTimezone(): void {\n\n        // get the current zone\n        const /** @type {?} */ currentZone = this.timezones.findIndex(zone => zone.name === this.timezone.name && zone.offset === this.timezone.offset);\n\n        // try to get the previous zone\n        this.timezone = this.timezones[currentZone - 1] ? this.timezones[currentZone - 1] : this.timezones[currentZone];\n    }\n/**\n * @return {?}\n */\nnextTimezone(): void {\n        // get the current zone\n        const /** @type {?} */ currentZone = this.timezones.findIndex(zone => zone.name === this.timezone.name && zone.offset === this.timezone.offset);\n\n        // try to get the next zone\n        this.timezone = this.timezones[currentZone + 1] ? this.timezones[currentZone + 1] : this.timezones[currentZone];\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-date-time-picker-time-view',\n    template: `\n      <div class=\"time-input-container\">\n        <timepicker [ngModel]=\"date\" (ngModelChange)=\"update($event)\" [minuteStep]=\"1\" [hourStep]=\"1\" [secondsStep]=\"1\" [showSeconds]=\"showSeconds\"\n          [showSpinners]=\"showSpinners\" [showMeridian]=\"showMeridian\"></timepicker>\n\n        <div class=\"btn-group meridian-picker\" *ngIf=\"showMeridian\">\n          <button type=\"button\" class=\"btn button-toggle-accent\" [(ngModel)]=\"meridian\" (ngModelChange)=\"setMeridian($event)\" [btnRadio]=\"DatePickerMeridian.AM\">AM</button>\n          <button type=\"button\" class=\"btn button-toggle-accent\" [(ngModel)]=\"meridian\" (ngModelChange)=\"setMeridian($event)\" [btnRadio]=\"DatePickerMeridian.PM\">PM</button>\n        </div>\n\n        <table class=\"time-zone-picker-container\" *ngIf=\"showTimezone && showSpinners\">\n          <tbody>\n            <tr>\n              <td class=\"text-center\">\n                <a class=\"btn btn-link\" (click)=\"nextTimezone()\">\n                  <span class=\"hpe-icon hpe-up\"></span>\n                </a>\n              </td>\n            </tr>\n            <tr>\n              <td class=\"form-group\">\n                <div class=\"form-control time-zone-picker\">\n                  <span class=\"time-zone\">{{ timezone?.name }}</span>\n                </div>\n              </td>\n            </tr>\n            <tr>\n              <td class=\"text-center\">\n                <a class=\"btn btn-link\" (click)=\"previousTimezone()\">\n                  <span class=\"hpe-icon hpe-down\"></span>\n                </a>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n\n        <div *ngIf=\"showTimezone && !showSpinners\">\n          <select class=\"form-control time-zone-picker-select\" [(ngModel)]=\"timezone\">\n            <option *ngFor=\"let zone of timezones\" [ngValue]=\"zone\">{{ zone?.name }}</option>\n          </select>\n        </div>\n\n      </div>\n    `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'date': [{ type: Input },],\n'showSeconds': [{ type: Input },],\n'showSpinners': [{ type: Input },],\n'showTimezone': [{ type: Input },],\n'showMeridian': [{ type: Input },],\n'timezones': [{ type: Input },],\n'dateChange': [{ type: Output },],\n'timezoneChange': [{ type: Output },],\n'timezone': [{ type: Input },],\n};\n}\n\nfunction DateTimePickerTimeViewComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nDateTimePickerTimeViewComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDateTimePickerTimeViewComponent.ctorParameters;\n/** @type {?} */\nDateTimePickerTimeViewComponent.propDecorators;\n/** @type {?} */\nDateTimePickerTimeViewComponent.prototype.date;\n/** @type {?} */\nDateTimePickerTimeViewComponent.prototype.showSeconds;\n/** @type {?} */\nDateTimePickerTimeViewComponent.prototype.showSpinners;\n/** @type {?} */\nDateTimePickerTimeViewComponent.prototype.showTimezone;\n/** @type {?} */\nDateTimePickerTimeViewComponent.prototype.showMeridian;\n/** @type {?} */\nDateTimePickerTimeViewComponent.prototype.timezones;\n/** @type {?} */\nDateTimePickerTimeViewComponent.prototype.dateChange;\n/** @type {?} */\nDateTimePickerTimeViewComponent.prototype.timezoneChange;\n/** @type {?} */\nDateTimePickerTimeViewComponent.prototype.meridian;\n/** @type {?} */\nDateTimePickerTimeViewComponent.prototype.DatePickerMeridian;\n/** @type {?} */\nDateTimePickerTimeViewComponent.prototype._timezone;\n}\n\nexport type DatePickerMeridian = number;\nexport let DatePickerMeridian: any = {};\nDatePickerMeridian.AM = 0;\nDatePickerMeridian.PM = 1;\nDatePickerMeridian[DatePickerMeridian.AM] = \"AM\";\nDatePickerMeridian[DatePickerMeridian.PM] = \"PM\";\n\n\nexport interface DateTimePickerTimezone {\n    name: string;\n    offset: number;\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { TimepickerModule } from 'ngx-bootstrap/timepicker';\nimport { ButtonsModule } from 'ngx-bootstrap/buttons';\n\nimport { DateTimePickerComponent } from './date-time-picker.component';\nimport { DateTimePickerDayViewComponent } from './day-view/day-view.component';\nimport { DateTimePickerMonthViewComponent } from './month-view/month-view.component';\nimport { DateTimePickerYearViewComponent } from './year-view/year-view.component';\nimport { DateTimePickerHeaderComponent } from './header/header.component';\nimport { DateTimePickerTimeViewComponent } from './time-view/time-view.component';\nimport { DateTimePickerConfig } from './date-time-picker.config';\n\nconst /** @type {?} */ DECLARATIONS = [\n    DateTimePickerComponent,\n    DateTimePickerDayViewComponent,\n    DateTimePickerMonthViewComponent,\n    DateTimePickerYearViewComponent,\n    DateTimePickerTimeViewComponent,\n    DateTimePickerHeaderComponent\n];\nexport class DateTimePickerModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        CommonModule,\n        FormsModule,\n        TimepickerModule.forRoot(),\n        ButtonsModule.forRoot()\n    ],\n    exports: DECLARATIONS,\n    declarations: DECLARATIONS,\n    providers: [\n        DateTimePickerConfig\n    ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction DateTimePickerModule_tsickle_Closure_declarations() {\n/** @type {?} */\nDateTimePickerModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDateTimePickerModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Directive } from '@angular/core';\nexport class EboxComponent { static decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-ebox',\n    template: `\n      <div class=\"ux-ebox-header\">\n          <ng-content select=\"ux-ebox-header\"></ng-content>\n      </div>\n\n      <div class=\"ux-ebox-content\">\n          <ng-content select=\"ux-ebox-content\"></ng-content>\n      </div>\n    `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction EboxComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nEboxComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nEboxComponent.ctorParameters;\n}\n\nexport class EboxHeaderDirective { static decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'ux-ebox-header'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction EboxHeaderDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nEboxHeaderDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nEboxHeaderDirective.ctorParameters;\n}\n\nexport class EboxContentDirective { static decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'ux-ebox-content'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction EboxContentDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nEboxContentDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nEboxContentDirective.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\n\nimport { EboxComponent, EboxContentDirective, EboxHeaderDirective } from './ebox.component';\nexport class EboxModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    exports: [EboxComponent, EboxContentDirective, EboxHeaderDirective],\n    declarations: [EboxComponent, EboxContentDirective, EboxHeaderDirective]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction EboxModule_tsickle_Closure_declarations() {\n/** @type {?} */\nEboxModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nEboxModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable } from '@angular/core';\n\n/** Default values provider for tooltip */\n\nexport class TooltipConfig {\n  /** tooltip placement, supported positions: 'top', 'bottom', 'left', 'right' */\n  placement = 'top';\n  /** array of event names which triggers tooltip opening */\n  triggers = 'hover focus';\n  /** a selector specifying the element the tooltip should be appended to. Currently only supports \"body\" */\n  container: string;\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"],"names":["win","document","location","isBs3","window","__theme","guessedVersion","spanEl","createElement","innerText","body","appendChild","classList","add","rect","getBoundingClientRect","removeChild","top","_guessBsVersion","TooltipContainerComponent","config","Object","assign","this","defineProperty","prototype","get","ngAfterViewInit","classMap","in","fade","placement","animation","containerClass","decorators","type","Component","args","selector","changeDetection","ChangeDetectionStrategy","OnPush","host","[class]","[class.show]","role","styles","template","ctorParameters","TooltipConfig","Trigger","open","close","isManual","DEFAULT_ALIASES","hover","focus","parseTriggers","triggers","aliases","trimmedTriggers","trim","length","parsedTriggers","split","map","trigger","triggerPair","alias","manualTriggers","filter","Error","ContentRef","nodes","viewRef","componentRef","ComponentLoader","_viewContainerRef","_renderer","_elementRef","_injector","_componentFactoryResolver","_ngZone","_applicationRef","_posService","onBeforeShow","EventEmitter","onShown","onBeforeHide","onHidden","_providers","_isHiding","_listenOpts","_globalListener","Function","_componentRef","attach","compType","_componentFactory","resolveComponentFactory","to","container","position","opts","attachment","target","provide","provider","push","show","_subscribePositioning","_innerComponent","emit","_contentRef","_getContentRef","content","context","initialState","injector","ReflectiveInjector","resolveAndCreate","create","attachView","hostView","instance","ElementRef","nativeElement","querySelector","parentElement","changeDetectorRef","markForCheck","detectChanges","_registerOutsideClick","hide","componentEl","parentNode","destroy","remove","indexOf","_removeGlobalListener","toggle","isShown","dispose","_unsubscribePositioning","_unregisterListenersFn","listen","listenOpts","_this","outsideClick","registerHide","renderer","options","listeners","_registerHide","forEach","fn","useToggle","showFn","unsubscribeFn","listenToTriggersV2","attachInline","vRef","_inlineViewRef","createEmbeddedView","target_1","setTimeout","targets","event","contains","some","getInnerComponent","_zoneSubscription","onStable","subscribe","element","appendToBody","unsubscribe","TemplateRef","_viewRef","rootNodes","contentCmptFactory","modalContentInjector","slice","createText","positionService","Positioning","round","elPosition","parentOffset","width","height","bottom","left","right","getStyle","bcRect","offsetParentEl","offsetParent","offset","documentElement","clientTop","clientLeft","Math","elBcr","viewportOffset","pageYOffset","pageXOffset","elOffset","offsetHeight","offsetWidth","positionElements","hostElement","targetElement","hostElPosition","targetElStyles","getAllStyles","shiftWidth","center","shiftHeight","targetElBCR","placementPrimary","placementSecondary","targetElPosition","newPlacementPrimary","autoPosition","parseFloat","marginBottom","marginRight","preferredPosition","innerHeight","innerWidth","getComputedStyle","prop","isStaticPositioned","PositioningService","pos","_getHtmlElement","style","Injectable","ComponentLoaderFactory","createLoader","ComponentFactoryResolver","NgZone","Injector","ApplicationRef","_messagesHash","_hideMsg","console","warnOnce","msg","isDevMode","warn","TooltipDirective","cis","tooltipChange","_animation","_fadeDuration","tooltipStateChanged","_tooltip","useValue","set","value","tooltip","isOpen","isDisabled","delay","toString","ngOnInit","_delayTimeoutId","showTooltip","undefined","cancelDelayedTooltipShowing","_tooltipCancelShowFn","timer_1","Observable","timer","clearTimeout","ngOnDestroy","Directive","exportAs","ViewContainerRef","Renderer2","propDecorators","Input","Output","htmlContent","_placement","_isOpen","_enable","_appendToBody","_popupClass","_tooltipContext","_tooltipPopupDelay","_tooltipTrigger","__decorate","propertyKey","_key","prevValue","TooltipModule","forRoot","ngModule","providers","NgModule","imports","CommonModule","declarations","exports","entryComponents","latinMap","Á","Ă","Ắ","Ặ","Ằ","Ẳ","Ẵ","Ǎ","Â","Ấ","Ậ","Ầ","Ẩ","Ẫ","Ä","Ǟ","Ȧ","Ǡ","Ạ","Ȁ","À","Ả","Ȃ","Ā","Ą","Å","Ǻ","Ḁ","Ⱥ","Ã","Ꜳ","Æ","Ǽ","Ǣ","Ꜵ","Ꜷ","Ꜹ","Ꜻ","Ꜽ","Ḃ","Ḅ","Ɓ","Ḇ","Ƀ","Ƃ","Ć","Č","Ç","Ḉ","Ĉ","Ċ","Ƈ","Ȼ","Ď","Ḑ","Ḓ","Ḋ","Ḍ","Ɗ","Ḏ","ǲ","ǅ","Đ","Ƌ","Ǳ","Ǆ","É","Ĕ","Ě","Ȩ","Ḝ","Ê","Ế","Ệ","Ề","Ể","Ễ","Ḙ","Ë","Ė","Ẹ","Ȅ","È","Ẻ","Ȇ","Ē","Ḗ","Ḕ","Ę","Ɇ","Ẽ","Ḛ","Ꝫ","Ḟ","Ƒ","Ǵ","Ğ","Ǧ","Ģ","Ĝ","Ġ","Ɠ","Ḡ","Ǥ","Ḫ","Ȟ","Ḩ","Ĥ","Ⱨ","Ḧ","Ḣ","Ḥ","Ħ","Í","Ĭ","Ǐ","Î","Ï","Ḯ","İ","Ị","Ȉ","Ì","Ỉ","Ȋ","Ī","Į","Ɨ","Ĩ","Ḭ","Ꝺ","Ꝼ","Ᵹ","Ꞃ","Ꞅ","Ꞇ","Ꝭ","Ĵ","Ɉ","Ḱ","Ǩ","Ķ","Ⱪ","Ꝃ","Ḳ","Ƙ","Ḵ","Ꝁ","Ꝅ","Ĺ","Ƚ","Ľ","Ļ","Ḽ","Ḷ","Ḹ","Ⱡ","Ꝉ","Ḻ","Ŀ","Ɫ","ǈ","Ł","Ǉ","Ḿ","Ṁ","Ṃ","Ɱ","Ń","Ň","Ņ","Ṋ","Ṅ","Ṇ","Ǹ","Ɲ","Ṉ","Ƞ","ǋ","Ñ","Ǌ","Ó","Ŏ","Ǒ","Ô","Ố","Ộ","Ồ","Ổ","Ỗ","Ö","Ȫ","Ȯ","Ȱ","Ọ","Ő","Ȍ","Ò","Ỏ","Ơ","Ớ","Ợ","Ờ","Ở","Ỡ","Ȏ","Ꝋ","Ꝍ","Ō","Ṓ","Ṑ","Ɵ","Ǫ","Ǭ","Ø","Ǿ","Õ","Ṍ","Ṏ","Ȭ","Ƣ","Ꝏ","Ɛ","Ɔ","Ȣ","Ṕ","Ṗ","Ꝓ","Ƥ","Ꝕ","Ᵽ","Ꝑ","Ꝙ","Ꝗ","Ŕ","Ř","Ŗ","Ṙ","Ṛ","Ṝ","Ȑ","Ȓ","Ṟ","Ɍ","Ɽ","Ꜿ","Ǝ","Ś","Ṥ","Š","Ṧ","Ş","Ŝ","Ș","Ṡ","Ṣ","Ṩ","Ť","Ţ","Ṱ","Ț","Ⱦ","Ṫ","Ṭ","Ƭ","Ṯ","Ʈ","Ŧ","Ɐ","Ꞁ","Ɯ","Ʌ","Ꜩ","Ú","Ŭ","Ǔ","Û","Ṷ","Ü","Ǘ","Ǚ","Ǜ","Ǖ","Ṳ","Ụ","Ű","Ȕ","Ù","Ủ","Ư","Ứ","Ự","Ừ","Ử","Ữ","Ȗ","Ū","Ṻ","Ų","Ů","Ũ","Ṹ","Ṵ","Ꝟ","Ṿ","Ʋ","Ṽ","Ꝡ","Ẃ","Ŵ","Ẅ","Ẇ","Ẉ","Ẁ","Ⱳ","Ẍ","Ẋ","Ý","Ŷ","Ÿ","Ẏ","Ỵ","Ỳ","Ƴ","Ỷ","Ỿ","Ȳ","Ɏ","Ỹ","Ź","Ž","Ẑ","Ⱬ","Ż","Ẓ","Ȥ","Ẕ","Ƶ","Ĳ","Œ","ᴀ","ᴁ","ʙ","ᴃ","ᴄ","ᴅ","ᴇ","ꜰ","ɢ","ʛ","ʜ","ɪ","ʁ","ᴊ","ᴋ","ʟ","ᴌ","ᴍ","ɴ","ᴏ","ɶ","ᴐ","ᴕ","ᴘ","ʀ","ᴎ","ᴙ","ꜱ","ᴛ","ⱻ","ᴚ","ᴜ","ᴠ","ᴡ","ʏ","ᴢ","á","ă","ắ","ặ","ằ","ẳ","ẵ","ǎ","â","ấ","ậ","ầ","ẩ","ẫ","ä","ǟ","ȧ","ǡ","ạ","ȁ","à","ả","ȃ","ā","ą","ᶏ","ẚ","å","ǻ","ḁ","ⱥ","ã","ꜳ","æ","ǽ","ǣ","ꜵ","ꜷ","ꜹ","ꜻ","ꜽ","ḃ","ḅ","ɓ","ḇ","ᵬ","ᶀ","ƀ","ƃ","ɵ","ć","č","ç","ḉ","ĉ","ɕ","ċ","ƈ","ȼ","ď","ḑ","ḓ","ȡ","ḋ","ḍ","ɗ","ᶑ","ḏ","ᵭ","ᶁ","đ","ɖ","ƌ","ı","ȷ","ɟ","ʄ","ǳ","ǆ","é","ĕ","ě","ȩ","ḝ","ê","ế","ệ","ề","ể","ễ","ḙ","ë","ė","ẹ","ȅ","è","ẻ","ȇ","ē","ḗ","ḕ","ⱸ","ę","ᶒ","ɇ","ẽ","ḛ","ꝫ","ḟ","ƒ","ᵮ","ᶂ","ǵ","ğ","ǧ","ģ","ĝ","ġ","ɠ","ḡ","ᶃ","ǥ","ḫ","ȟ","ḩ","ĥ","ⱨ","ḧ","ḣ","ḥ","ɦ","ẖ","ħ","ƕ","í","ĭ","ǐ","î","ï","ḯ","ị","ȉ","ì","ỉ","ȋ","ī","į","ᶖ","ɨ","ĩ","ḭ","ꝺ","ꝼ","ᵹ","ꞃ","ꞅ","ꞇ","ꝭ","ǰ","ĵ","ʝ","ɉ","ḱ","ǩ","ķ","ⱪ","ꝃ","ḳ","ƙ","ḵ","ᶄ","ꝁ","ꝅ","ĺ","ƚ","ɬ","ľ","ļ","ḽ","ȴ","ḷ","ḹ","ⱡ","ꝉ","ḻ","ŀ","ɫ","ᶅ","ɭ","ł","ǉ","ſ","ẜ","ẛ","ẝ","ḿ","ṁ","ṃ","ɱ","ᵯ","ᶆ","ń","ň","ņ","ṋ","ȵ","ṅ","ṇ","ǹ","ɲ","ṉ","ƞ","ᵰ","ᶇ","ɳ","ñ","ǌ","ó","ŏ","ǒ","ô","ố","ộ","ồ","ổ","ỗ","ö","ȫ","ȯ","ȱ","ọ","ő","ȍ","ò","ỏ","ơ","ớ","ợ","ờ","ở","ỡ","ȏ","ꝋ","ꝍ","ⱺ","ō","ṓ","ṑ","ǫ","ǭ","ø","ǿ","õ","ṍ","ṏ","ȭ","ƣ","ꝏ","ɛ","ᶓ","ɔ","ᶗ","ȣ","ṕ","ṗ","ꝓ","ƥ","ᵱ","ᶈ","ꝕ","ᵽ","ꝑ","ꝙ","ʠ","ɋ","ꝗ","ŕ","ř","ŗ","ṙ","ṛ","ṝ","ȑ","ɾ","ᵳ","ȓ","ṟ","ɼ","ᵲ","ᶉ","ɍ","ɽ","ↄ","ꜿ","ɘ","ɿ","ś","ṥ","š","ṧ","ş","ŝ","ș","ṡ","ṣ","ṩ","ʂ","ᵴ","ᶊ","ȿ","ɡ","ᴑ","ᴓ","ᴝ","ť","ţ","ṱ","ț","ȶ","ẗ","ⱦ","ṫ","ṭ","ƭ","ṯ","ᵵ","ƫ","ʈ","ŧ","ᵺ","ɐ","ᴂ","ǝ","ᵷ","ɥ","ʮ","ʯ","ᴉ","ʞ","ꞁ","ɯ","ɰ","ᴔ","ɹ","ɻ","ɺ","ⱹ","ʇ","ʌ","ʍ","ʎ","ꜩ","ú","ŭ","ǔ","û","ṷ","ü","ǘ","ǚ","ǜ","ǖ","ṳ","ụ","ű","ȕ","ù","ủ","ư","ứ","ự","ừ","ử","ữ","ȗ","ū","ṻ","ų","ᶙ","ů","ũ","ṹ","ṵ","ᵫ","ꝸ","ⱴ","ꝟ","ṿ","ʋ","ᶌ","ⱱ","ṽ","ꝡ","ẃ","ŵ","ẅ","ẇ","ẉ","ẁ","ⱳ","ẘ","ẍ","ẋ","ᶍ","ý","ŷ","ÿ","ẏ","ỵ","ỳ","ƴ","ỷ","ỿ","ȳ","ẙ","ɏ","ỹ","ź","ž","ẑ","ʑ","ⱬ","ż","ẓ","ȥ","ẕ","ᵶ","ᶎ","ʐ","ƶ","ɀ","ﬀ","ﬃ","ﬄ","ﬁ","ﬂ","ĳ","œ","ﬆ","ₐ","ₑ","ᵢ","ⱼ","ₒ","ᵣ","ᵤ","ᵥ","ₓ","TypeaheadMatch","item","header","isHeader","latinize","str","replace","a","tokenize","wordRegexDelimiters","phraseRegexDelimiters","token","regexStr","preTokenized","RegExp","result","preTokenizedLength","replacePhraseDelimiters","i","getValueFromObject","object","option","endsWith","_i","propertiesArray_1","property","Utils","reflow","getStyles","elem","view","ownerDocument","defaultView","opener","TypeaheadContainerComponent","isFocused","_matches","isScrolledIntoView","containerViewTop","ulElement","scrollTop","containerViewBottom","elemTop","offsetTop","_active","needScrollbar","typeaheadScrollable","typeaheadOptionsInScrollableView","matches","setScrollableMode","nextActiveMatch","parent","optionsListTemplate","typeaheadItemTemplate","selectActiveMatch","selectMatch","prevActiveMatch","index","scrollPrevious","scrollNext","selectActive","hightlight","match","query","startIdx","tokenLen","itemStr","itemStrHelper","typeaheadLatinize","toLowerCase","queryLen","substring","repeat","focusLost","isActive","e","stopPropagation","preventDefault","changeModel","typeaheadOnSelect","liElements","first","ulStyles","liStyles","ulPaddingBottom","ulPaddingTop","optionHeight","guiHeight","setStyle","liElement","toArray","scrollToBottom","scrollToTop","scrollHeight","class","[class.dropdown-menu]","[style.overflow-y]","[style.height]","[style.visibility]","[class.dropup]","ViewChild","ViewChildren","HostListener","TypeaheadDirective","ngControl","viewContainerRef","typeaheadMinLength","typeaheadAsync","typeaheadSingleWords","typeaheadWordDelimiters","typeaheadPhraseDelimiters","typeaheadLoading","typeaheadNoResults","typeaheadOnBlur","dropup","isTypeaheadOptionsListActive","keyUpEventEmitter","_subscriptions","_typeahead","typeaheadOptionsLimit","typeaheadWaitMs","typeahead","asyncActions","syncActions","onInput","textContent","onChange","_container","keyCode","onFocus","onBlur","active","onKeydown","valueStr","viewToModelUpdate","setValue","typeaheadRef","_outsideClickListener","onOutsideClick","normalizedQuery","control","_a","debounceTime","mergeMap","finalizeAsyncCall","normalizeQuery","from","testMatch","normalizeOption","optionValue","typeaheadOptionField","test","spaceLength","prepareMatches","hasMatches","limited","typeaheadGroupField","matches_1","v","group","concat","NgControl","ChangeDetectorRef","TypeaheadModule","FacetSelect","facet","FacetDeselect","FacetDeselectAll","FacetContainerComponent","clearTooltip","emptyText","facets","facetsChange","events","selectFacet","triggerEvent","deselectFacet","idx","findIndex","selectedFacet","splice","deselectAllFacets","next","FacetBaseComponent","facetContainer","selected","selectedChange","Subject","find","_","deselectAll","disabled","toggleFacetSelection","isFacetSelected","Host","FacetHeaderComponent","canExpand","expanded","expandedChange","toggleExpand","tabindex","(click)","(keyup.enter)","FacetCheckListComponent","_super","apply","arguments","scrollbar","__extends","FacetTypeaheadListComponent","typeaheadConfig","suggestions","simplified","_nativeElement","_defaultTypeaheadConfig","placeholder","maxResults","minCharacters","typeaheadOptions","title","toUpperCase","includes","searchQuery","of","hasOwnProperty","selectOption","typeaheadOption","scrollToFocused","dropdown","activeElement","elementBounds","dropdownBounds","FacetTypeaheadHighlight","transform","regex","Pipe","name","DECLARATIONS","FacetsModule","FormsModule","CheckboxModule","Facet","data","count","id","BsDropdownConfig","autoClose","BsDropdownState","direction","isOpenChange","isDisabledChange","toggleClick","dropdownMenu","Promise","resolve","resolveDropdownMenu","BsDropdownContainerComponent","_state","cd","_element","_subscription","addClass","BsDropdownDirective","_cis","_config","_isInlineOpen","_isInited","_dropdown","_isDisabled","_showInline","_inlinedMenu","then","viewContainer","templateRef","addBs4Polyfills","catch","_dropup","removeShowClass","addShowClass","checkRightAlignment","checkDropup","removeClass","isRightAligned","[class.open]","BsDropdownMenuDirective","_viewContainer","_templateRef","BsDropdownToggleDirective","onClick","onDocumentClick","button","onEsc","[attr.aria-haspopup]","HostBinding","BsDropdownModule","FilterContainerComponent","filters","filtersChange","addFilter","FilterAddEvent","removeFilter","FilterRemoveEvent","removeAll","FilterRemoveAllEvent","FilterBaseComponent","filtersContainer","bind","initial","FilterDynamicComponent","defaultOptions","showTypeahead","typeaheadItems","getItems","maxIndividualItems","clickOff","hideDropdown","nodeName","call","selectFilter","(document:click)","FilterDropdownComponent","FilterModule","FlippableCardComponent","flipped","flippedChange","setFlipped","state","toggleFlipped","clickTrigger","hoverEnter","hoverExit","[class.horizontal]","[class.vertical]","FlippableCardFrontDirective","FlippableCardBackDirective","FlippableCardModule","ItemDisplayPanelContentDirective","ItemDisplayPanelFooterDirective","ItemDisplayPanelComponent","boxShadow","closeVisible","preventClose","inline","animate","shadow","visibleChange","_visible","visible","hidePanel","(document:keyup.escape)","[class.inline-host]","[class.visible-host]","footer","ContentChild","ItemDisplayPanelModule","WizardStepComponent","valid","visitedChange","_visited","visited","WizardComponent","_step","steps","QueryList","orientation","nextText","previousText","cancelText","finishText","nextTooltip","previousTooltip","cancelTooltip","finishTooltip","nextDisabled","previousDisabled","cancelDisabled","finishDisabled","nextVisible","previousVisible","cancelVisible","finishVisible","cancelAlwaysVisible","finishAlwaysVisible","onNext","onPrevious","onCancel","onFinishing","onFinish","stepChanging","stepChange","invalidIndicator","update","step","StepChangingEvent","getCurrentStep","previous","finish","cancel","gotoStep","stepIndex","stp","isLastStep","reset","getStepAtIndex","ContentChildren","WizardModule","closed","error","err","complete","Symbol","root_1","root","rxSubscriber","for","$$rxSubscriber","Subscriber","destinationOrNext","syncErrorValue","syncErrorThrown","syncErrorThrowable","isStopped","destination","Observer_1","empty","SafeSubscriber","rxSubscriber_1","subscriber","_next","_error","_complete","_unsubscribeAndRecycle","_parent","_parents","Subscription_1","Subscription","Subscriber_2","_parentSubscriber","observerOrNext","isFunction_1","isFunction","_context","__tryOrSetError","__tryOrUnsub","wrappedComplete","_unsubscribe","filter_2","predicate","thisArg","source","lift","FilterOperator","FilterSubscriber","Subscriber_1","MarqueeWizardService","valid$","MarqueeWizardStepComponent","_marqueeWizardService","completed","completedChange","_valid","setCompleted","icon","MarqueeWizardComponent","marqueeWizardService","pipe","validChange","description","current","MarqueeWizardModule","NUMBER_PICKER_VALUE_ACCESSOR","NG_VALUE_ACCESSOR","useExisting","forwardRef","NumberPickerComponent","multi","_min","Infinity","_max","_disabled","_value","_propagateChange","valueChange","increment","max","min","decrement","isValid","onScroll","deltaY","wheelDelta","writeValue","registerOnChange","registerOnTouched","setDisabledState","[class.has-error]","NumberPickerModule","PageHeaderCustomMenuDirective","ColorService","_colorSet","colorSets","keppel","colorClassSet","setColors","key","colorValueSet","_colors","getColorValueByHex","_html","className","innerHTML","getColorValue","color","hex","r","parseInt","g","b","ThemeColor","rgba","backgroundColor","getColor","themeColor","getRed","getGreen","getBlue","getAlpha","getColorSet","setColorSet","colorSet","colorName","resolveColorName","toRgba","Document","Inject","DOCUMENT","_r","_g","_b","parse","rgbaMatch","shortHexMatch","longHexMatch","toHex","red","green","blue","toRgb","setRed","setGreen","setBlue","setAlpha","alpha","primary","accent","secondary","alternate1","alternate2","alternate3","vibrant1","vibrant2","grey1","grey2","grey3","grey4","grey5","grey6","grey7","grey8","chart1","chart2","chart3","chart4","chart5","chart6","ok","warning","critical","partition1","partition9","partition10","partition11","partition12","partition13","partition14","social-chart-node","social-chart-edge","microFocus","cerulean","aqua","aquamarine","fuchsia","indigo","dark-blue","white","slightly-gray","bright-gray","gray","silver","dim-gray","dark-gray","black","crimson-negative","apricot","yellow","green-positive","ultramarine","skyblue","pale-aqua","pale-green","lime","orange","magenta","pale-purple","dark-ultramarine","steelblue","arctic-blue","emerald","olive","goldenrod","purple","pale-eggplant","pale-amber","pale-lemon","pale-emerald","plum","copper","amber","leaf-green","ColorServiceModule","PageHeaderComponent","_colorService","alignment","condensed","backVisible","backClick","_familyBackground","_familyForeground","goBack","getCondensedBreadcrumbs","crumbs","[class.page-header-condensed]","logo","items","iconMenus","familyBackground","familyForeground","customMenus","read","PageHeaderIconMenuComponent","select","menu","PageHeaderNavigationDropdownItemComponent","onSelect","dropdownOpen","_dropdownEvents","selectItem","parentItem","children","hoverStart","hoverLeave","PageHeaderNavigationItemComponent","elementRef","dropdownComponents","onItemSelect","PageHeaderNavigationComponent","resizeService","indicatorVisible","indicatorX","indicatorWidth","addResizeListener","updateSelectedIndicator","deselect","navItem","selectedItem","menuItems","offsetLeft","getPropertyValue","ResizeService","PageHeaderModule","BreadcrumbsModule","ResizeModule","ProgressBarComponent","colorService","trackColor","barColor","percentage","ngOnChanges","changes","ProgressBarModule","RADIOBUTTON_VALUE_ACCESSOR","RadioButtonComponent","clickable","onTouchedCallback","onChangeCallback","checkItem","keyDown","RadioButtonModule","SearchBuilderService","queryChange","validationChange","BehaviorSubject","_componentId","_components","_validation","registerComponent","component","cmp","registerComponents","components","getComponent","setQuery","getQuery","queryHasChanged","setValid","keys","generateComponentId","SearchBuilderGroupService","_searchBuilderService","init","_id","field","SearchBuilderGroupComponent","searchBuilderGroupService","operator","addText","showPlaceholder","removeField","SearchBuilderOutletDirective","componentDefinition","uxSearchBuilderOutlet","componentFactory","createComponent","uxSearchBuilderOutletContext","BaseSearchComponent","_searchBuilderGroupService","validate","validation","SearchTextComponent","label","SearchDateComponent","Date","SearchDateRangeComponent","fromValue","toValue","fromLabel","toLabel","fromPlaceholder","toPlaceholder","setHours","SearchSelectComponent","multiple","dropDirection","allowNull","maxHeight","pageSize","SearchBuilderComponent","_querySubscription","_validSubscription","distinctUntilChanged","PopoverConfig","PopoverContainerComponent","PopoverDirective","_popover","addEventListener","popover","popoverContext","popoverTitle","PopoverModule","TypeaheadOptionEvent","TypeaheadKeyService","handleKey","moveHighlight","TypeaheadComponent","typeaheadElement","cdRef","_open","openChange","openOnFilterChange","selectFirst","optionSelected","_highlighted","visibleOptions","loading","optionApi","getKey","getDisplay","getDisplayHtml","loadOptionsCallback","pageNum","originalValue","initOptions","getValue","loadingTemplate","_defaultLoadingTemplate","optionTemplate","_defaultOptionTemplate","noOptionsTemplate","_defaultNoOptionsTemplate","currentValue","updateOptions","optionMousedownHandler","optionClickHandler","display","displayText","displayHtml","matchIndex","highlight","substr","isInfiniteScroll","disabledOptions","optionKey_1","selectedOption","d","newIndex","indexOfVisibleOption","highlighted","inBounds","isHighlighted","normalisedInput_1","optionKey_2","el","[class.drop-up]","[style.maxHeight]","InfiniteScrollLoadButtonDirective","_template","_load","load","asObservable","clickTarget","getNextElementSibling","clear","nextSibling","nodeType","InfiniteScrollLoadingDirective","InfiniteScrollDirective","_collection","enabled","loadOnInit","loadOnScroll","collectionChange","loadingEvent","loadedEvent","loadErrorEvent","_nextPageNum","_updateRequests","_isLoading","_isExhausted","_loadButtonEnabled","_loadButtonSubscriptions","_canLoadManually","combineLatest","isLoading","isExhausted","loadButtonEnabled","scrollElement","ngAfterContentInit","requests","partition","check","auditTime","doRequest","attachEventHandlers","canLoad","_loadButtonQuery","loadButton","_loadingIndicatorQuery","attachLoadButtonEvents","loadNextPage","previousValue","detachEventHandlers","pageNumber","collection","onDomChange","_scrollEventSub","fromEvent","_domObserver","MutationObserver","observe","childList","subtree","disconnect","s","request","needsData","beginLoading","loadResult","newData","Array","endLoading","reason","endLoadingWithError","clientHeight","InfiniteScrollLoadingEvent","defaultPrevented","InfiniteScrollLoadedEvent","InfiniteScrollLoadErrorEvent","_defaultPrevented","exhausted","InfiniteScrollModule","ScrollIntoViewService","scrollIntoView","scrollParent","offsetBottom","ScrollIntoViewIfDirective","scrollIntoViewService","condition","ScrollIntoViewIfModule","TypeaheadModule$1","SELECT_VALUE_ACCESSOR","SelectComponent","_document","_typeaheadKeyService","_input","inputChange","_dropdownOpen","dropdownOpenChange","propagateChange","input","firstChange","obj","inputClickHandler","selectInputText","inputBlurHandler","inputKeyHandler","singleTypeahead","singleOptionSelected","singleInput","multipleTypeahead","TagInputEvent","tag","TAGINPUT_VALUE_ACCESSOR","TagInputComponent","TAGINPUT_VALIDATOR","NG_VALIDATORS","_tags","tagsChange","addOnPaste","enforceTagLimits","freeInput","maxTags","Number","MAX_VALUE","minTags","showTypeaheadOnClick","tagDelimiters","tagClass","validationErrors","tagAdding","tagAdded","tagInvalidated","tagRemoving","tagRemoved","tagClick","selectedIndex","tagApi","getTagDisplay","removeTagAt","canRemoveTagAt","inputValid","onChangeHandler","onTouchedHandler","tagTemplate","_defaultTagTemplate","connectTypeahead","typeaheadQuery","tags","tagRangeError","given","keyHandler","inputCursorPos","tagInput","selectionStart","hasSelection","selectionEnd","tagSelected","isValidTagIndex","inputLength","canNavigateLeft","canNavigateRight","commitTypeahead","commitInput","backspace","moveSelection","getKeyChar","focusOutHandler","tagClickHandler","tagClickEvent","selectTagAt","inputFocusHandler","selectInput","inputPasteHandler","clipboardData","getData","commit","typeaheadOptionSelectedHandler","addTag","newTags","splitTagInput","allValid","_c","newTags_1","newTag","validateTag","_d","newTags_2","createTag","isValidSelectIndex","isSelected","tagIndex","tagRemovingEvent","isInputVisible","hasFocus","tagValue","inputPattern","tagPattern","pattern","createTagHandler","displayValue","tagAddingEvent","tagValues","escapedDelimiters","delimiterRegex","[class.disabled]","[class.focus]","[class.invalid]","FocusIfDirective","focusIf","FocusIfModule","TagInputModule","SelectModule","SearchBuilderModule","DateTimePickerModule","SliderComponent","_changeDetectorRef","sliderType","SliderType","sliderStyle","SliderStyle","sliderSize","SliderSize","sliderThumb","SliderThumb","sliderTickType","SliderTickType","sliderThumbEvent","SliderThumbEvent","tracks","lower","size","middle","upper","tooltips","thumbs","drag","order","ticks","_mouseMove","_mouseUp","Value","handles","Button","callout","SliderCalloutTrigger","None","background","formatter","track","Wide","snap","SliderSnap","major","labels","minor","colors","range","higher","initObservables","updateValues","setThumbState","Lower","Upper","clone","ngDoCheck","detectValueChange","updateTooltipPosition","_lowerDrag","_upperDrag","getFormattedValue","thumb","getThumbState","_lowerThumbDown","lowerThumb","switchMap","takeUntil","updateThumbPosition","_upperThumbDown","upperThumb","updateTooltips","onDragEnd","thumbEvent","DragEnd","DragStart","MouseOver","MouseLeave","Persistent","Drag","Hover","getTooltip","updateTooltipText","getThumbElement","getTooltipElement","lowerTooltip","upperTooltip","thumbWidth","tooltipElement","Narrow","tooltipWidth","tooltipPosition","ceil","clamp","eventPosition","MouseEvent","clientX","touches","mouseX","trackBounds","fraction","validateValue","snapToTick","setThumbValue","updateOrder","snapTarget","Minor","tick","Major","lowerLimit","upperLimit","Range","reduceRight","deepMerge","updateTrackColors","updateTicks","lowerValue","low","upperValue","high","toFixed","lowerPosition","upperPosition","majorOptions","minorOptions","majorTicks","getTicks","showTicks","minorTicks","unionTicks","join","getSteps","output","showLabels","array","tk","sort","t1","t2","value1","value2","isSliderValue","obj1","obj2","Line","All","SliderModule","SparkComponent","values","barHeight","_theme","_barColor","_trackColor","isArray","total","reduce","val","inlineLabel","topLeftLabel","topRightLabel","bottomLeftLabel","bottomRightLabel","theme","SparkModule","TOGGLESWITCH_VALUE_ACCESSOR","ToggleSwitchComponent","toggleChecked","keydown","ToggleSwitchModule","FrameExtractionService","createVideoPlayer","videoPlayer","preload","src","createCanvas","canvas","goToFrame","time","currentTime","getThumbnail","observer","subscription","getContext","drawImage","image","toDataURL","getFrameThumbnail","frameSubscription","getFrameThumbnails","start","end","skip","frames","frame","FrameExtractionModule","MediaPlayerService","_frameExtractionService","loaded","playing","initEvent","abortEvent","canPlayEvent","canPlayThroughEvent","durationChangeEvent","endedEvent","errorEvent","loadedDataEvent","loadedMetadataEvent","loadStartEvent","pauseEvent","playEvent","playingEvent","rateChangeEvent","seekedEvent","seekingEvent","stalledEvent","suspendEvent","timeUpdateEvent","volumeChangeEvent","waitingEvent","mediaClickEvent","fullscreenEvent","quietModeEvent","progressEvent","interval","setInterval","buffered","_mediaPlayer","duration","clearInterval","_fullscreen","_quietMode","audioTracks","autoplay","TimeRanges","crossOrigin","currentSrc","defaultMuted","defaultPlaybackRate","ended","loop","muted","networkState","paused","playbackRate","played","readyState","seekable","seeking","textTracks","TextTrackList","videoTracks","VideoTrackList","volume","setMediaPlayer","mediaPlayer","_hostElement","togglePlay","play","pause","canPlayType","addTextTrack","kind","language","requestFullscreen","webkitRequestFullscreen","msRequestFullscreen","mozRequestFullScreen","exitFullscreen","webkitExitFullscreen","msExitFullscreen","mozCancelFullScreen","fullscreenChange","fullscreen","webkitIsFullScreen","mozFullScreen","msFullscreenElement","toggleFullscreen","getFrames","AudioService","_http","getAudioFileMetadata","mediaElement","responseType","ResponseContentType","Blob","response","filename","lastIndexOf","extension","blob","getWaveformFromUrl","url","AudioContext","_audioContext","createVolumeNode","createAnalyserNode","ArrayBuffer","getAudioBuffer","arrayBuffer","audioBuffer","createBufferSource","dataPoints","channels","_audioBuffer","numberOfChannels","channelIdx","getChannelData","Float32Array","getWaveformPoints","waveform","_loop_5","points","channel","getOfflineAudioContext","decodeAudioData","OfflineAudioContext","sampleRate","disconnectSource","_audioBufferSource","buffer","connect","_analyserNode","_gainNode","createGain","createAnalyser","Http","AudioServiceModule","HttpModule","MediaPlayerComponent","mediaPlayerService","_audioService","hovering","_hover$","quietMode","_playerRef","audioMetadata","_playing$","_paused$","_clicked$","_loading$","(keydown.Space)","[class.standard]","[class.fullscreen]","[class.quiet]","[class.hover]","[class.video]","[class.audio]","(mouseenter)","(mouseleave)","(document:webkitfullscreenchange)","(document:mozfullscreenchange)","(document:MSFullscreenChange)","_trackBarRef","MediaPlayerBaseExtensionDirective","MediaPlayerTimelineExtensionComponent","mouseDown","scrub","mousedown$","mousemove$","mouseup$","_mouseEventSubscription","updateScrub","bounds","timelineRef","offsetX","(document:mouseup)","MediaPlayerControlsExtensionComponent","volumeActive","volumeDragging","_volume","_previousVolume","mouseenter$","volumeIcon","mouseenterContainer$","volumeContainer","mouseleaveContainer$","toggleMute","setFullscreen","goToStart","goToEnd","dragStart","dragMove","volumeSlider","x","pageX","dragEnd","DurationPipe","seconds","minutes","floor","hours","days","pad","DurationPipeModule","FileSizePipe","log","pow","FileSizePipeModule","MediaPlayerModule","VirtualScrollLoadingDirective","VirtualScrollLoadButtonDirective","VirtualScrollCellDirective","VirtualScrollComponent","cells","loadingComplete","_height","cellHeight","setupObservable","renderCells","isFirstChange","getVisibleCells","startCell","endCell","getTotalHeight","cellTemplate","loadingIndicatorTemplate","loadButtonTemplate","VirtualScrollModule","FixedHeaderTableDirective","tablePaging","_tableHead","_tableBody","setLayout","getTable","clientWidth","tableHeight","FixedHeaderTableModule","HelpCenterService","registerItem","unregisterItem","itm","HelpCenterItemDirective","_helpCenterService","uxHelpCenterItem","HelpCenterModule","HoverActionService","_focused","_hovered","_actions","register","action","unregister","actn","setContainer","setFocusState","updateVisibility","setHoverState","containerHasFocus","focusActionAtIndex","actionHasFocus","getFocusedActionIndex","getFocusedAction","focused","HoverActionContainerDirective","_hoverActionService","active$","onHover","onLeave","[class.hover-action-container-active]","[tabindex]","HoverActionDirective","[class.hover-action-active]","[class.hover-action-focused]","HoverActionModule","LayoutSwitcherItemDirective","getLayout","getConfig","activate","_embeddedView","deactivate","LayoutSwitcherDirective","_width","updateActiveLayout","getActiveLayout","_layouts","layout","minWidth","maxWidth","_activeLayout","requestAnimationFrame","LayoutSwitcherModule","StringFilterPipe","it","StringFilterModule","CookieAdapter","getItem","cookie","setItem","removeItem","eqPos","toUTCString","getSupported","LocalStorageAdapter","localStorage","SessionStorageAdapter","sessionStorage","PersistentDataService","PersistentDataStorageType","LocalStorage","getAdapter","Cookie","SessionStorage","PersistentDataModule","StorageAdapter","ContactsNg1Component","overflowClick","UpgradeComponent","contacts","organization","maxContacts","ExpandInputNg1Component","elname","placeHolder","clearTextIcon","closeSearch","expandAlways","onEnter","FloatingActionButtonNg1Component","FlotNg1Component","onPlotClick","onPlotHover","dataset","callback","donutLabels","GridNg1Component","columns","plugins","HierarchyBarNg1Component","selectNode","MarqueeWizardNg1Component","wizardStepsChange","wizardIcon","wizardSteps","buttonOptions","onChanging","onFinished","onCanceled","isVisited","sideInfo","NestedDonutNg1Component","OrganizationChartNg1Component","dataChange","optionsChange","PartitionMapNg1Component","chartData","chartOptions","chartLoading","PeityBarChartNg1Component","PeityLineChartNg1Component","PeityPieChartNg1Component","PeityUpdatingLineChartNg1Component","method","updateinterval","SankeyNg1Component","chartSize","click","SearchToolbarNg1Component","searchTypeahead","onSearch","SelectTableNg1Component","multipleSelect","selectKey","searchText","selectHiddenItems","SLIDER_CHART_VALUE_ACCESSOR","SliderChartNg1Component","ngModelChange","sliderOptions","ngModel","SocialChartNg1Component","api","communities","detailStyle","popoverStyle","nodeDetail","edgeDetail","nodePopover","edgePopover","forceAtlasDuration","nodeSizeAttribute","startMaximized","startMaximised","showMaximizeControl","showMaximiseControl","socialChartContainer","fullscreenButtonPosition","localStrings","chartTitle","titleDisplayTime","edgeWeightInfluence","minLabels","SortDirectionToggleNg1Component","sorters","descend","TreeGridNg1Component","currentRowChange","treeDataChange","treeData","currentRow","ThumbnailNg1Component","NavigationMenuService","_navigationMenuService","collapseAtWidth","setCollapseAtWidth","setDefaultCollapseAtWidth","navigationMenuServiceFactory","navigationMenuServiceProvider","useFactory","deps","NotificationService","_notificationService","showNotification","dismissNotification","dismissAllNotifications","getNotifications","setNotificationVisibility","setDirection","notificationServiceFactory","notificationServiceProvider","PdfService","_pdfService","createTable","rows","pdfServiceFactory","pdfServiceProvider","TimeAgoService","_timeAgoService","setStrings","strings","timeSince","past","present","timeSinceNow","moment","timeAgoServiceFactory","timeAgoServiceProvider","HybridModule","BreadcrumbsComponent","clickCrumb","crumb","RouterModule","CHECKBOX_VALUE_ACCESSOR","CheckboxComponent","indeterminateValue","ColumnSortingComponent","stateChange","columnSortingState","ColumnSortingState","initParent","column","NoSort","orderNumber","changeState","Ascending","Descending","toggleColumn","ColumnSortingDirective","singleSort","ColumnSortingModule","DashboardService","_widgets","_options$","_placeholder","y","_dimensions","_columnWidth","_rowHeight","_stacked","_defaultOptions","padding","minHeight","emptyRow","getOptions","_options","getDefaultOptions","setOptions","setPadding","setDashboard","dashboard","_dashboard","addWidget","widget","renderDashboard","removeWidget","wgt","setDimensions","getLayoutData","getId","col","getColumn","row","getRow","colSpan","getColumnSpan","rowSpan","getRowSpan","setLayoutData","setColumn","setRow","setColumnSpan","setRowSpan","rowHeight","setStacked","setDashboardLayout","_actionWidget","render","setWidgetPosition","setDashboardHeight","stacked","getWidgetsByOrder","w1","w2","w1Position","w2Position","success","getPositionAvailable","columnSpan","ignoreWidget","spaces","getOccupiedSpaces","_loop_1","_loop_2","block","state_1","state_2","forEachBlock","onResizeStart","_mouseEvent","bringToFront","onResizeDrag","getHandles","hnd","centerX","centerY","mouseY","dimensions","actualX","actualY","actualWidth","actualHeight","ActionDirection","Right","Left","difference","Bottom","Top","TopLeft","TopRight","BottomLeft","BottomRight","currentWidth","currentHeight","setBounds","setPlaceholderBounds","updateWidgetPositions","onResizeEnd","commitWidgetChanges","getPlaceholder","shiftWidgetsUp","onDragStart","setWidgetOrigin","cacheWidgets","_widgetOrigin","onDrag","pageY","restoreWidgets","shiftWidgets","_cache","ignoreActionWidget","widgetsToMove","_loop_3","_loop_4","this_1","space","unmovedWidgets","grid","getRequiredSpacesFromPoint","every","gridSpace","getColumnCount","canWidgetMoveRight","validatePlaceholderPosition","canWidgetMoveLeft","distance","moveWidgetDown","shiftDirection","getWidgetsAtPosition","getColumnWidth","performMove","targetSpaces","moveable","ignoreResizing","Rounding","RoundDownBelowHalf","RoundUpOverHalf","getPlaceholderColumn","getPlaceholderRow","getPlaceholderColumnSpan","getPlaceholderRowSpan","rowCount","getRowHeight","getColumnFromPx","Move","RoundDown","overflow","getRowFromPx","rounding","half","RoundUp","getRowCount","sendToBack","stable","DashboardComponent","_dashboardService","layoutChange","JSON","stringify","_layout","onResize","run","[style.height.px]","DashboardWidgetComponent","resizable","zIndex","_column","regular","_row","_columnSpan","_rowSpan","_dragMove","_dragEnd","applyOptions","random","initialiseHandles","_handles","getStackableValue","setStackableValue","handle","bindResize","listener","downEvent","move$","moveEvent","[style.left.px]","[style.top.px]","[style.width.px]","[style.padding.px]","[style.zIndex]","DashboardDragHandleDirective","dashboardService","subject","displayMode","iframe","setAttribute","waitUntilReady","iframeDoc","contentDocument","contentWindow","attachListener","ResizeDirective","_resizeService","throttle","resize","DashboardModule","TimepickerActions","WRITE_VALUE","payload","changeHours","CHANGE_HOURS","changeMinutes","CHANGE_MINUTES","changeSeconds","CHANGE_SECONDS","setTime","SET_TIME_UNIT","updateControls","UPDATE_CONTROLS","dex","hoursPerDay","hoursPerDayHalf","minutesPerHour","secondsPerMinute","isValidDate","isNaN","getHours","toNumber","parseHours","isPM","hour","NaN","parseMinutes","minute","parseSeconds","parseTime","changeTime","diff","createDate","getMinutes","getSeconds","getFullYear","getMonth","getDate","getMilliseconds","padNumber","isInputValid","canChangeValue","readonlyInput","mousewheel","arrowkeys","getControlsValue","hourStep","minuteStep","secondsStep","showSpinners","showMeridian","showSeconds","meridians","TimepickerConfig","showMinutes","controls","canIncrementHours","canIncrementMinutes","canIncrementSeconds","canDecrementHours","canDecrementMinutes","canDecrementSeconds","timepickerReducer","_newTime","_newControlsState","res","_newHour","_newMinutes","_newSeconds","timepickerControls","_newState","MiniStore","_dispatcher","_reducer","state$","pathOrMapFn","mapped$","store","dispatch","__window","__self","self","WorkerGlobalScope","_root","global","tryCatchTarget","tryCatcher","errorObject_1","errorObject","UnsubscriptionError","errors","stack","message","flattenUnsubscriptionErrors","errs","UnsubscriptionError_1","hasErrors","len","tryCatch_1","tryCatch","isArray_1","sub","isObject_1","isObject","teardown","EMPTY","_addParent","tmp","subscriptions","subscriptionIndex","Action","scheduler","work","schedule","AsyncAction","pending","recycleAsyncId","requestAsyncId","flush","execute","_execute","errored","errorValue","actions","Action_1","QueueAction","AsyncAction_1","Scheduler","SchedulerAction","now","AsyncScheduler","scheduled","shift","Scheduler_1","queue_1","QueueScheduler","AsyncScheduler_1","QueueAction_1","MiniState","_initialState","actionsDispatcher$","reducer","actionInQueue$","observeOn","queue","scan","TimepickerStore","TIMEPICKER_CONTROL_VALUE_ACCESSOR","TimepickerComponent","_cd","_store","_timepickerActions","invalidHours","invalidMinutes","invalidSeconds","onTouched","_renderTime","controlsState","meridian","prevDef","$event","wheelSign","sign","updateHours","_updateTime","updateMinutes","updateSeconds","_seconds","_minutes","toggleMeridian","_hours","getUTCSeconds","encapsulation","ViewEncapsulation","TimepickerModule","CHECKBOX_CONTROL_VALUE_ACCESSOR","ButtonCheckboxDirective","btnCheckboxTrue","btnCheckboxFalse","trueValue","falseValue","RADIO_CONTROL_VALUE_ACCESSOR","ButtonRadioGroupDirective","cdr","ButtonRadioDirective","btnRadio","attributes","uncheckable","_onChange","removeAttribute","Optional","ButtonsModule","gridify","list","compareDays","day1","day2","months","monthsShort","month","weekdaysShort","weekday","DateTimePickerConfig","showDate","showTime","showTimezone","weekdays","nowBtnText","timezones","DateTimePickerService","date","activeDate","mode","DatePickerMode","Day","year","getTime","DateTimePickerComponent","dateTimePickerService","dateChange","timezoneChange","_timezone","timezone","zone","setToNow","timePickerComponent","setDefaultTimezone","Month","Year","DateTimePickerDayViewComponent","merge","setDate","getDay","dates","dateRange","week","today","isToday","currentMonth","isCurrentMonth","showMonthPicker","DateTimePickerMonthViewComponent","_dateTimePickerService","currentDate","showDayPicker","getMonthName","showYearPicker","DateTimePickerYearViewComponent","_page","years","currentYear","decade","getDecade","DateTimePickerHeaderComponent","canAscend","ascend","DateTimePickerTimeViewComponent","DatePickerMeridian","AM","getTimezoneOffset","PM","setMeridian","previousTimezone","currentZone","nextTimezone","EboxComponent","EboxHeaderDirective","EboxContentDirective","EboxModule"],"mappings":"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"}

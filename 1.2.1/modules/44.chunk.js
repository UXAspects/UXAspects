webpackJsonp([44],{1555:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var o=function(){function e(e,t,n,o,r){this.snippets={compiled:{},raw:{}},this.loadSnippetsFromRequireContext(this.snippets.raw,r),this.snippets.compiled=this.snippets.raw}return e.prototype.loadSnippetsFromRequireContext=function(e,t){t&&t.keys().forEach(function(n){var o=n.replace("./","").replace(/\W+(\w)/g,function(e){return e[1].toUpperCase()});e[o]=t(n)})},e}();t.BaseDocumentationSection=o},1758:function(e,t,n){function o(e){return n(r(e))}function r(e){var t=a[e];if(!(t+1))throw new Error("Cannot find module '"+e+"'.");return t}var a={"./controller.js":2793,"./layout.html":2794};o.keys=function(){return Object.keys(a)},o.resolve=r,e.exports=o,o.id=1758},1759:function(e,t,n){function o(e){return n(r(e))}function r(e){var t=a[e];if(!(t+1))throw new Error("Cannot find module '"+e+"'.");return t}var a={"./app.html":2795,"./app.ts":2796};o.keys=function(){return Object.keys(a)},o.resolve=r,e.exports=o,o.id=1759},1949:function(e,t,n){"use strict";var o=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])};return function(t,n){function o(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(o.prototype=n.prototype,new o)}}(),r=this&&this.__decorate||function(e,t,n,o){var r,a=arguments.length,s=a<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,n):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,o);else for(var p=e.length-1;p>=0;p--)(r=e[p])&&(s=(a<3?r(s):a>3?r(t,n,s):r(t,n))||s);return a>3&&s&&Object.defineProperty(t,n,s),s},a=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)};Object.defineProperty(t,"__esModule",{value:!0});var s=n(0),p=n(1555),c=n(299),i=function(e){function t(){var t=e.call(this,null,null,null,null,n(1758))||this;return t.codepen={html:t.snippets.raw.layoutHtml,htmlAttributes:{"ng-controller":"ProgressBarDemoCtrl as vm"},js:[t.snippets.raw.controllerJs]},t}return o(t,e),t}(p.BaseDocumentationSection);i=r([s.Component({selector:"uxd-progress-bar-ng1",template:n(2298),changeDetection:s.ChangeDetectionStrategy.OnPush}),c.DocumentationSectionComponent("ComponentsProgressBarNg1Component"),a("design:paramtypes",[])],i),t.ComponentsProgressBarNg1Component=i},1950:function(e,t,n){"use strict";var o=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])};return function(t,n){function o(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(o.prototype=n.prototype,new o)}}(),r=this&&this.__decorate||function(e,t,n,o){var r,a=arguments.length,s=a<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,n):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,o);else for(var p=e.length-1;p>=0;p--)(r=e[p])&&(s=(a<3?r(s):a>3?r(t,n,s):r(t,n))||s);return a>3&&s&&Object.defineProperty(t,n,s),s},a=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)};Object.defineProperty(t,"__esModule",{value:!0});var s=n(0),p=n(1555),c=n(299),i=function(e){function t(){var t=e.call(this,null,null,null,null,n(1759))||this;return t.value=15,t.plunk={files:{"app.component.html":t.snippets.compiled.appHtml,"app.component.ts":t.snippets.compiled.appTs},modules:[{imports:["ProgressBarModule"],library:"ux-aspects"}]},t}return o(t,e),t.prototype.randomize=function(){this.value=Math.floor(100*Math.random()+1)},t}(p.BaseDocumentationSection);i=r([s.Component({selector:"uxd-progress-bar",template:n(2299)}),c.DocumentationSectionComponent("ComponentsProgressBarComponent"),a("design:paramtypes",[])],i),t.ComponentsProgressBarComponent=i},1951:function(e,t,n){"use strict";var o=this&&this.__decorate||function(e,t,n,o){var r,a=arguments.length,s=a<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,n):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,o);else for(var p=e.length-1;p>=0;p--)(r=e[p])&&(s=(a<3?r(s):a>3?r(t,n,s):r(t,n))||s);return a>3&&s&&Object.defineProperty(t,n,s),s},r=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)};Object.defineProperty(t,"__esModule",{value:!0});var a=n(0),s=n(20),p=n(300),c=n(158),i=n(301),u=n(1949),l=n(303),d=n(302),m=n(1950),f=n(159),b=[u.ComponentsProgressBarNg1Component,m.ComponentsProgressBarComponent],h=[{path:"**",component:i.DocumentationCategoryComponent,data:{category:c.ResolverService.resolveCategoryData(c.DocumentationPage.Components,"Progress")}}],g=function(){function e(e,t){t.registerResolver(e)}return e}();g=o([a.NgModule({imports:[l.WrappersModule,d.TabsModule,f.ProgressBarModule,p.DocumentationComponentsModule,s.RouterModule.forChild(h)],exports:b,declarations:b,entryComponents:b}),r("design:paramtypes",[a.ComponentFactoryResolver,c.ResolverService])],g),t.ComponentsProgressModule=g},2298:function(e,t){e.exports='<uxd-progress-bar-wrapper></uxd-progress-bar-wrapper>\n\n<hr>\n\n<p>Create a <code>progressbar</code> element and set the value attribute to the value property. Set <code>type="accent"</code>\n  and the max attribute to the maximum allowed value. Inside the <code>progressbar</code> element you can specify a <code>span</code>\n  which can be used to display the current value.</p>\n\n<tabset>\n  <tab heading="HTML">\n    <uxd-snippet [content]="snippets.compiled.layoutHtml" language="html"></uxd-snippet>\n  </tab>\n  <tab heading="JavaScript">\n    <uxd-snippet [content]="snippets.compiled.controllerJs" language="javascript"></uxd-snippet>\n  </tab>\n</tabset>'},2299:function(e,t){e.exports='<ux-progress-bar class="m-b-md" [value]="value" max="100">\n    <span>{{ value }}%</span>\n</ux-progress-bar>\n\n<button type="button" class="btn btn-primary" (click)="randomize()">Random</button>\n\n<hr>\n\n<p>\n    A progress bar can be created by using the <code>ux-progress-bar</code> component. Custom content can be added to the\n    bar by adding HTML inside the <code>ux-progress-bar</code> tag. The following attributes can be used to configure the appearance and behavior of the progress bar:\n</p>\n\n<table class="table">\n\n    <thead>\n        <tr>\n            <th>Name</th>\n            <th>Type</th>\n            <th>Description</th>\n        </tr>\n    </thead>\n\n    <tbody>\n\n        <tr>\n            <td><b>@Input</b> value</td>\n            <td><b>number</b></td>\n            <td>The value the bar should represent. This will be compared to the <code>max</code> value to determine the width of the bar.</td>\n        </tr>\n        \n        <tr>\n            <td><b>@Input</b> max</td>\n            <td><b>number</b></td>\n            <td>The upper limit of the bar. The default value is <code>100</code>.</td>\n        </tr>\n        \n        <tr>\n            <td><b>@Input</b> trackColor</td>\n            <td><b>string</b></td>\n            <td>The color of the track. The default value is <code>grey7</code>.</td>\n        </tr>\n        \n        <tr>\n            <td><b>@Input</b> barColor</td>\n            <td><b>string</b></td>\n            <td>The color of the bar. The default value is <code>accent</code>.</td>\n        </tr>\n\n    </tbody>\n</table>\n\n\n<p>The following code can be used to create the example above:</p>\n\n<tabset>\n  <tab heading="HTML">\n    <uxd-snippet [content]="snippets.compiled.appHtml" language="html"></uxd-snippet>\n  </tab>\n  <tab heading="JavaScript">\n    <uxd-snippet [content]="snippets.compiled.appTs" language="javascript"></uxd-snippet>\n  </tab>\n</tabset>'},2793:function(e,t){e.exports="angular.module('app').controller('ProgressBarDemoCtrl', ProgressBarDemoCtrl);\n\nfunction ProgressBarDemoCtrl() {\n    var vm = this;\n\n    vm.percentComplete = 15;\n\n    vm.random = function () {\n        vm.percentComplete = Math.floor((Math.random() * 100) + 1);\n    };\n}"},2794:function(e,t){e.exports='<progressbar value="vm.percentComplete" type="accent" max="100">\n    <span ng-bind="vm.percentComplete+\'%\'"></span>\n</progressbar>\n<button type="button" class="btn btn-primary" ng-click="vm.random()">Random</button>'},2795:function(e,t){e.exports='<ux-progress-bar class="m-b-md" [value]="value" max="100">\n    <span>{{ value }}%</span>\n</ux-progress-bar>\n\n<button type="button" class="btn btn-primary" (click)="randomize()">Random</button>'},2796:function(e,t){e.exports="import { Component } from '@angular/core';\n\n@Component({\n    selector: 'app',\n    templateUrl: './src/app.component.html'\n})\nexport class AppComponent {\n\n    value: number = 15;\n\n    randomize() {\n        this.value = Math.floor((Math.random() * 100) + 1);\n    }\n}\n"}});
webpackJsonp([18],{1559:function(t,n,e){"use strict";!function(t){for(var e in t)n.hasOwnProperty(e)||(n[e]=t[e])}(e(1560))},1560:function(t,n,e){"use strict";function o(t,n){return"rgba("+t.concat(n).join(",")+")"}function r(t,n){return Math.floor(Math.random()*(n-t+1))+t}function a(t){return{backgroundColor:o(t,.4),borderColor:o(t,1),pointBackgroundColor:o(t,1),pointBorderColor:"#fff",pointHoverBackgroundColor:"#fff",pointHoverBorderColor:o(t,.8)}}function i(t){return{backgroundColor:o(t,.6),borderColor:o(t,1),hoverBackgroundColor:o(t,.8),hoverBorderColor:o(t,1)}}function l(t){return{backgroundColor:t.map(function(t){return o(t,.6)}),borderColor:t.map(function(){return"#fff"}),pointBackgroundColor:t.map(function(t){return o(t,1)}),pointBorderColor:t.map(function(){return"#fff"}),pointHoverBackgroundColor:t.map(function(t){return o(t,1)}),pointHoverBorderColor:t.map(function(t){return o(t,1)})}}function s(t){return{backgroundColor:t.map(function(t){return o(t,.6)}),borderColor:t.map(function(t){return o(t,1)}),hoverBackgroundColor:t.map(function(t){return o(t,.8)}),hoverBorderColor:t.map(function(t){return o(t,1)})}}function c(){return[r(0,255),r(0,255),r(0,255)]}function d(t){return f.defaultColors[t]||c()}function h(t){for(var n=new Array(t),e=0;e<t;e++)n[e]=f.defaultColors[e]||c();return n}function p(t,n,e){return"pie"===t||"doughnut"===t?l(h(e)):"polarArea"===t?s(h(e)):"line"===t||"radar"===t?a(d(n)):"bar"===t||"horizontalBar"===t?i(d(n)):d(n)}var u=this&&this.__decorate||function(t,n,e,o){var r,a=arguments.length,i=a<3?n:null===o?o=Object.getOwnPropertyDescriptor(n,e):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(t,n,e,o);else for(var l=t.length-1;l>=0;l--)(r=t[l])&&(i=(a<3?r(i):a>3?r(n,e,i):r(n,e))||i);return a>3&&i&&Object.defineProperty(n,e,i),i},C=this&&this.__metadata||function(t,n){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(t,n)},g=e(0),b=e(1562),f=function(){function t(t){this.labels=[],this.options={},this.chartClick=new g.EventEmitter,this.chartHover=new g.EventEmitter,this.initFlag=!1,this.element=t}return t.prototype.ngOnInit=function(){this.ctx=this.element.nativeElement.getContext("2d"),this.cvs=this.element.nativeElement,this.initFlag=!0,(this.data||this.datasets)&&this.refresh()},t.prototype.ngOnChanges=function(t){this.initFlag&&(t.hasOwnProperty("data")||t.hasOwnProperty("datasets")?(t.data?this.updateChartData(t.data.currentValue):this.updateChartData(t.datasets.currentValue),this.chart.update()):this.refresh())},t.prototype.ngOnDestroy=function(){this.chart&&(this.chart.destroy(),this.chart=void 0)},t.prototype.getChartBuilder=function(t){var n=this,e=this.getDatasets(),o=Object.assign({},this.options);!1===this.legend&&(o.legend={display:!1}),o.hover=o.hover||{},o.hover.onHover||(o.hover.onHover=function(t){t&&!t.length||n.chartHover.emit({active:t})}),o.onClick||(o.onClick=function(t,e){n.chartClick.emit({event:t,active:e})});var r={type:this.chartType,data:{labels:this.labels,datasets:e},options:o};return new b.Chart(t,r)},t.prototype.updateChartData=function(t){Array.isArray(t[0].data)?this.chart.data.datasets.forEach(function(n,e){n.data=t[e].data,t[e].label&&(n.label=t[e].label)}):this.chart.data.datasets[0].data=t},t.prototype.getDatasets=function(){var t=this,n=void 0;if((!this.datasets||!this.datasets.length&&this.data&&this.data.length)&&(n=Array.isArray(this.data[0])?this.data.map(function(n,e){return{data:n,label:t.labels[e]||"Label "+e}}):[{data:this.data,label:"Label 0"}]),(this.datasets&&this.datasets.length||n&&n.length)&&(n=(this.datasets||n).map(function(n,e){var o=Object.assign({},n);return t.colors&&t.colors.length?Object.assign(o,t.colors[e]):Object.assign(o,p(t.chartType,e,o.data.length)),o})),!n)throw new Error("ng-charts configuration error,\n      data or datasets field are required to render char "+this.chartType);return n},t.prototype.refresh=function(){this.ngOnDestroy(),this.chart=this.getChartBuilder(this.ctx)},t}();f.defaultColors=[[255,99,132],[54,162,235],[255,206,86],[231,233,237],[75,192,192],[151,187,205],[220,220,220],[247,70,74],[70,191,189],[253,180,92],[148,159,177],[77,83,96]],u([g.Input(),C("design:type",Array)],f.prototype,"data",void 0),u([g.Input(),C("design:type",Array)],f.prototype,"datasets",void 0),u([g.Input(),C("design:type",Array)],f.prototype,"labels",void 0),u([g.Input(),C("design:type",Object)],f.prototype,"options",void 0),u([g.Input(),C("design:type",String)],f.prototype,"chartType",void 0),u([g.Input(),C("design:type",Array)],f.prototype,"colors",void 0),u([g.Input(),C("design:type",Boolean)],f.prototype,"legend",void 0),u([g.Output(),C("design:type",g.EventEmitter)],f.prototype,"chartClick",void 0),u([g.Output(),C("design:type",g.EventEmitter)],f.prototype,"chartHover",void 0),f=u([g.Directive({selector:"canvas[baseChart]",exportAs:"base-chart"}),C("design:paramtypes",[g.ElementRef])],f),n.BaseChartDirective=f;var m=function(){function t(){}return t}();m=u([g.NgModule({declarations:[f],exports:[f],imports:[]})],m),n.ChartsModule=m},1665:function(t,n){t.exports=".demo-chart-container {\n    display: block;\n    position: relative;\n    height: 200px;\n}"},1666:function(t,n){t.exports='<div class="demo-chart-container">\n\n    <canvas baseChart \n            [datasets]="lineChartData"\n            [labels]="lineChartLabels"\n            [options]="lineChartOptions"\n            [legend]="lineChartLegend"\n            [colors]="lineChartColors"\n            chartType="line">\n    </canvas>\n\n</div>'},1667:function(t,n){t.exports="import { Component } from '@angular/core';\nimport { ColorService } from 'ux-aspects';\n\n@Component({\n    selector: 'app',\n    templateUrl: './src/app.component.html',\n    styleUrls: ['./src/app.component.css']\n})\nexport class AppComponent {\n\n    // configure the directive data\n    lineChartData: Chart.ChartData;\n\n    lineChartLabels: string[] = ['1', '2', '3', '4', '5', '6', '7', '8', '9'];\n    lineChartOptions: Chart.ChartOptions;\n    lineChartLegend: boolean = false;\n    lineChartColors: any;\n\n    constructor(colorService: ColorService) {\n\n        let tooltipBackgroundColor = colorService.getColor('grey2').toHex();\n        let gridBorderColor = colorService.getColor('grey4').toHex();\n        let gridColor = colorService.getColor('grey6').toHex();\n        let lineBorderColor = colorService.getColor('chart1').toRgb();\n        let lineFillColor = colorService.getColor('chart1').setAlpha(0.1).toRgba();\n        let lineForecastFillColor = colorService.getColor('chart1').setAlpha(0.06).toRgba();\n        let pointBorderColor = colorService.getColor('chart1').setAlpha(0.5).toRgba();\n\n        this.lineChartData = [{\n            data: [34, 25, 19, 34, 32, 44],\n            borderWidth: 1\n        },\n        {\n            data: [, , , , , 44, 45, 50, 55],\n            borderDash: [5],\n            borderWidth: 1\n        }];\n\n        this.lineChartOptions = {\n            maintainAspectRatio: false,\n            responsive: true,\n            elements: {\n                line: {\n                    tension: 0\n                }\n            },\n            scales: {\n                xAxes: [{\n                    gridLines: {\n                        color: gridColor\n                    }\n                }],\n                yAxes: [{\n                    ticks: {\n                        beginAtZero: true\n                    } as Chart.LinearTickOptions,\n                    gridLines: {\n                        color: gridColor\n                    }\n                }]\n            },\n            tooltips: {\n                backgroundColor: tooltipBackgroundColor,\n                cornerRadius: 0,\n                callbacks: {\n                    title: (item: Chart.ChartTooltipItem[]) => {\n                        return;\n                    },\n                    label: (item: Chart.ChartTooltipItem) => {\n                        return `x: ${item.xLabel}, y: ${item.yLabel}`;\n                    }\n                },\n                displayColors: false\n            } as any\n        };\n\n        this.lineChartColors = [\n            {\n                borderColor: lineBorderColor,\n                backgroundColor: lineFillColor,\n                pointBackgroundColor: 'transparent',\n                pointBorderColor: 'transparent',\n                pointHoverBorderColor: pointBorderColor,\n                pointHoverBorderWidth: 3,\n                pointHoverRadius: 5,\n                pointHitRadius: 5\n            },\n            {\n                borderColor: lineBorderColor,\n                backgroundColor: lineForecastFillColor,\n                pointBorderColor: 'transparent',\n                pointBackgroundColor: 'transparent',\n                pointHoverBorderColor: pointBorderColor,\n                pointHoverBorderWidth: 3,\n                pointHoverRadius: 5,\n                pointHitRadius: 5\n            }\n        ];\n    }\n\n}"},1668:function(t,n){t.exports=".demo-chart-container {\n    display: block;\n    position: relative;\n    height: 200px;\n}\n\n.multi-axis-legend {\n  position: absolute;\n  bottom: 32px;\n  left: 38px;\n  background-color: #ffffff;\n  opacity: 0.85;\n}\n\n.multi-axis-legend .multi-axis-legend-list {\n  list-style-type: none;\n  padding: 0;\n  margin: 0;\n}\n\n.multi-axis-legend .multi-axis-legend-list .multi-axis-legend-list-item {\n  padding: 0 5px;\n}\n\n.multi-axis-legend .multi-axis-legend-list .multi-axis-legend-list-item .multi-axis-legend-box {\n  display: inline-block;\n  width: 12px;\n  height: 12px;\n  border-width: 1px;\n  border-style: solid;\n}\n\n.multi-axis-legend .multi-axis-legend-list .multi-axis-legend-list-item .multi-axis-legend-text {\n  color: #999999;\n  font-size: 13px;\n  vertical-align: text-bottom;\n  margin-left: 3px;\n}\n"},1669:function(t,n){t.exports='<div class="demo-chart-container">\n\n    <canvas baseChart \n            [datasets]="lineChartData"\n            [options]="lineChartOptions"\n            [legend]="lineChartLegend"\n            [colors]="lineChartColors"\n            chartType="line">\n    </canvas>\n\n    <div class="multi-axis-legend" [innerHtml]="lineChartLegendContents"></div>\n\n</div>'},1670:function(t,n){t.exports="import { Component, Inject, ViewChild, AfterViewInit, ViewEncapsulation } from '@angular/core';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\nimport { ColorService } from 'ux-aspects';\nimport { BaseChartDirective } from 'ng2-charts';\nimport { FlotData } from './flot-data';\n\n@Component({\n    selector: 'app',\n    templateUrl: './src/app.component.html',\n    styleUrls: ['./src/app.component.css'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class AppComponent implements AfterViewInit {\n\n    // access the chart directive properties\n    @ViewChild(BaseChartDirective) baseChart: BaseChartDirective;\n\n    // configure the directive data\n    lineChartData: Chart.ChartData;\n    lineChartOptions: Chart.ChartOptions;\n    lineChartLegend: boolean = false;\n    lineChartColors: any;\n\n    lineChartLegendContents: SafeHtml;\n\n    constructor(private sanitizer: DomSanitizer, colorService: ColorService) {\n\n        let tooltipBackgroundColor = colorService.getColor('grey2').toHex();\n        let gridColor = colorService.getColor('grey6').toHex();\n\n        let lineBorderColor1 = colorService.getColor('chart1').toRgb();\n        let lineFillColor1 = colorService.getColor('chart1').setAlpha(0.1).toRgba();\n        let lineForecastFillColor1 = colorService.getColor('chart1').setAlpha(0.06).toRgba();\n        let pointBorderColor1 = colorService.getColor('chart1').setAlpha(0.5).toRgba();\n\n        let lineBorderColor2 = colorService.getColor('chart2').toRgb();\n        let lineFillColor2 = colorService.getColor('chart2').setAlpha(0.1).toRgba();\n        let lineForecastFillColor2 = colorService.getColor('chart2').setAlpha(0.06).toRgba();\n        let pointBorderColor2 = colorService.getColor('chart2').setAlpha(0.5).toRgba();\n\n        let oilPrices = FlotData.getOilPrices().map((values: number[]) => {\n            return {\n                x: values[0],\n                y: values[1]\n            };\n        });\n\n        let exchangeRates = FlotData.getExchangeRates().map((values: number[]) => {\n            return {\n                x: values[0],\n                y: values[1]\n            };\n        });\n\n        this.lineChartData = [\n            {\n                label: 'Oil price ($)',\n                data: oilPrices,\n                borderWidth: 1,\n                yAxisID: 'y-axis-1'\n            },\n            {\n                label: 'USD/EUR exchange rate',\n                data: exchangeRates,\n                borderWidth: 1,\n                yAxisID: 'y-axis-2'\n            }\n        ];\n\n        this.lineChartOptions = {\n            maintainAspectRatio: false,\n            responsive: true,\n            elements: {\n                line: {\n                    tension: 0\n                }\n            },\n            hover: {\n                mode: 'nearest'\n            },\n            legendCallback: (chart: any) => {\n\n                let sets = chart.data.datasets.map((dataset: Chart.ChartDataSets) => {\n                    return `<li class=\"multi-axis-legend-list-item\">\n                                <span class=\"multi-axis-legend-box\" style=\"background-color: ${dataset.backgroundColor}; border-color: ${dataset.borderColor}\"></span> \n                                <span class=\"multi-axis-legend-text\">${dataset.label}</span>\n                            </li>`;\n                });\n\n                // create html for chart legend\n                return `<ul class=\"multi-axis-legend-list\">${ sets.join('') }</ul>`;\n            },\n            scales: {\n                xAxes: [{\n                    type: 'linear',\n                    position: 'bottom',\n                    ticks: {\n                        min: 1167692400000,\n                        max: 1220824800000,\n                        stepSize: 5313240000,\n                        callback: (value: number, index: number, values: number[]) => {\n                            let date = new Date(value);\n                            return date.toLocaleString('en', { month: 'short' }) + ' ' + date.toLocaleString('en', { year: 'numeric' });\n                        }\n                    } as Chart.LinearTickOptions\n                }],\n                yAxes: [{\n                    id: 'y-axis-1',\n                    position: 'left',\n                    ticks: {\n                        min: 0,\n                        max: 150,\n                        stepSize: 50\n                    } as Chart.LinearTickOptions,\n                    gridLines: {\n                        color: gridColor\n                    }\n                },\n                {\n                    id: 'y-axis-2',\n                    position: 'right',\n                    ticks: {\n                        min: 0,\n                        max: 0.79,\n                        stepSize: 0.79 / 3,\n                        callback: (value: number, index: number, values: number[]) => {\n                            return value.toFixed(2) + '€';\n                        }\n                    } as Chart.LinearTickOptions,\n                    gridLines: {\n                        display: false\n                    }\n                }]\n            },\n            tooltips: {\n                backgroundColor: tooltipBackgroundColor,\n                cornerRadius: 0,\n                callbacks: {\n                    title: (item: Chart.ChartTooltipItem[]) => {\n                        return;\n                    },\n                    label: (item: Chart.ChartTooltipItem) => {\n\n                        let date = new Date(item.xLabel);\n\n                        if (item.datasetIndex === 1) {\n                            return `USD/EUR exchange rate for ${date.getFullYear().toString().substr(-2)}-${date.getMonth()}m-${date.getDate()}d was ${Number(item.yLabel).toFixed(2)}€`;\n                        } else {\n                            return `Oil price ($) ${date.getFullYear().toString().substr(-2)}-${date.getMonth()}m-${date.getDate()}d was ${item.yLabel}`;\n                        }\n                    }\n                },\n                displayColors: false\n            } as any\n        } as any;\n\n        this.lineChartColors = [\n            {\n                borderColor: lineBorderColor1,\n                backgroundColor: lineFillColor1,\n                pointBackgroundColor: 'transparent',\n                pointBorderColor: 'transparent',\n                pointHoverBorderColor: pointBorderColor1,\n                pointHoverBorderWidth: 3,\n                pointHoverRadius: 5,\n                pointHitRadius: 5\n            },\n            {\n                borderColor: lineBorderColor2,\n                backgroundColor: lineFillColor2,\n                pointBackgroundColor: 'transparent',\n                pointBorderColor: 'transparent',\n                pointHoverBorderColor: pointBorderColor2,\n                pointHoverBorderWidth: 3,\n                pointHoverRadius: 5,\n                pointHitRadius: 5\n            }\n        ];\n    }\n\n    ngAfterViewInit() {\n\n        // get the HTML for the legend after timeout - as expressions cannot be updated here\n        setTimeout(() => {\n            this.lineChartLegendContents = this.sanitizer.bypassSecurityTrustHtml(this.baseChart.chart.generateLegend());\n        });\n    }\n\n}"},1671:function(t,n){t.exports=".demo-chart-container-stack {\n    display: block;\n    position: relative;        \n    height: 400px;\n}"},1672:function(t,n){t.exports='<div class="demo-chart-container-stack">\n\n    <canvas baseChart \n            [datasets]="lineChartData"\n            [labels]="lineChartLabels"\n            [options]="lineChartOptions"\n            [legend]="lineChartLegend"\n            [colors]="lineChartColors"\n            chartType="line">\n    </canvas>\n\n</div>'},1673:function(t,n){t.exports="import { Component } from '@angular/core';\nimport { ColorService } from 'ux-aspects';\n\n@Component({\n    selector: 'app',\n    templateUrl: './src/app.component.html',\n    styleUrls: ['./src/app.component.css']\n})\nexport class AppComponent {\n\n    // configure the directive data\n    lineChartData: Chart.ChartData;\n\n    lineChartLabels: string[] = ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12', '13'];\n    lineChartOptions: Chart.ChartOptions;\n    lineChartLegend: boolean = false;\n    lineChartColors: any;\n\n    constructor(colorService: ColorService) {\n\n        let tooltipBackgroundColor = colorService.getColor('grey2').toHex();\n        let lineBorderColor1 = colorService.getColor('chart1').toRgb();\n        let lineFillColor1 = colorService.getColor('chart1').setAlpha(0.1).toRgba();\n        let lineForecastFillColor1 = colorService.getColor('chart1').setAlpha(0.06).toRgba();\n        let pointBorderColor1 = colorService.getColor('chart1').setAlpha(0.5).toRgba();\n\n        let lineBorderColor2 = colorService.getColor('chart2').toRgb();\n        let lineFillColor2 = colorService.getColor('chart2').setAlpha(0.1).toRgba();\n        let lineForecastFillColor2 = colorService.getColor('chart2').setAlpha(0.06).toRgba();\n        let pointBorderColor2 = colorService.getColor('chart2').setAlpha(0.5).toRgba();\n\n        let lineBorderColor3 = colorService.getColor('chart3').toRgb();\n        let lineFillColor3 = colorService.getColor('chart3').setAlpha(0.1).toRgba();\n        let lineForecastFillColor3 = colorService.getColor('chart3').setAlpha(0.06).toRgba();\n        let pointBorderColor3 = colorService.getColor('chart3').setAlpha(0.5).toRgba();\n\n        this.lineChartData = [{\n            data: this.getRandomData(),\n            borderWidth: 1\n        },\n        {\n            data: this.getRandomData(),\n            borderWidth: 1\n        },\n        {\n            data: this.getRandomData(),\n            borderWidth: 1\n        }];\n\n        this.lineChartOptions = {\n            maintainAspectRatio: false,\n            responsive: true,\n            hover: {\n                mode: 'nearest'\n            },\n            elements: {\n                line: {\n                    tension: 0\n                }\n            },\n            scales: {\n                ticks: {\n                    min: 0,\n                    max: 25000\n                },\n                yAxes: [{\n                    stacked: true,\n                    ticks: {\n                        min: 0,\n                        max: 30000,\n                        stepSize: 5000,\n                        callback: value => `${ value }€`\n                    } as Chart.LinearTickOptions\n                }]\n            },\n            tooltips: {\n                backgroundColor: tooltipBackgroundColor,\n                cornerRadius: 0,\n                callbacks: {\n                    title: (item: Chart.ChartTooltipItem[]) => {\n                        return;\n                    },\n                    label: (item: Chart.ChartTooltipItem) => `Sales ${ item.datasetIndex + 1 } - ${ item.yLabel }€ in cycle ${ item.index + 1 }`\n                },\n                displayColors: false\n            } as any\n        };\n\n        this.lineChartColors = [\n            {\n                borderColor: lineBorderColor1,\n                backgroundColor: lineFillColor1,\n                pointBackgroundColor: 'transparent',\n                pointBorderColor: 'transparent',\n                pointHoverBorderColor: pointBorderColor1,\n                pointHoverBorderWidth: 3,\n                pointHoverRadius: 5,\n                pointHitRadius: 5\n            },\n            {\n                borderColor: lineBorderColor2,\n                backgroundColor: lineFillColor2,\n                pointBackgroundColor: 'transparent',\n                pointBorderColor: 'transparent',\n                pointHoverBorderColor: pointBorderColor2,\n                pointHoverBorderWidth: 3,\n                pointHoverRadius: 5,\n                pointHitRadius: 5\n            },\n            {\n                borderColor: lineBorderColor3,\n                backgroundColor: lineFillColor3,\n                pointBackgroundColor: 'transparent',\n                pointBorderColor: 'transparent',\n                pointHoverBorderColor: pointBorderColor3,\n                pointHoverBorderWidth: 3,\n                pointHoverRadius: 5,\n                pointHitRadius: 5\n            }\n        ];\n    }\n\n    getRandomData(): number[] {\n        let data: number[] = [];\n\n        for (let idx = 0; idx < 13; idx++) {\n            data.push(Math.floor(Math.random() * 10000));\n        }\n\n        return data;\n    }\n\n}"},1821:function(t,n,e){"use strict";var o=this&&this.__decorate||function(t,n,e,o){var r,a=arguments.length,i=a<3?n:null===o?o=Object.getOwnPropertyDescriptor(n,e):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(t,n,e,o);else for(var l=t.length-1;l>=0;l--)(r=t[l])&&(i=(a<3?r(i):a>3?r(n,e,i):r(n,e))||i);return a>3&&i&&Object.defineProperty(n,e,i),i},r=this&&this.__metadata||function(t,n){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(t,n)};Object.defineProperty(n,"__esModule",{value:!0});var a=e(0),i=e(299),l=e(159),s=function(){function t(t){this.htmlCode=e(2516),this.jsCode=e(2517),this.accessibilityHtml=e(2515),this.codepen={html:this.htmlCode,htmlAttributes:{"ng-controller":"LineChartCtrl as lc"},js:[this.jsCode]};var n={chartColor:t.getColor("chart1").toRgb(),chartForecast:t.getColor("chart1").setAlpha(.06).toRgba(),gridColor:t.getColor("grey4").toHex(),tickColor:t.getColor("grey6").toHex(),borderColor:t.getColor("grey2").setAlpha(.5).toRgba()};this.data=[{label:"line",data:[[1,34],[2,25],[3,19],[4,34],[5,32],[6,44]],forecastData:[[7,45],[8,50],[9,55]]}],this.options={series:{lines:{show:!0,lineWidth:1,fill:!0,fillColor:{colors:[{opacity:.1},{opacity:.1}]}},shadowSize:0,highlightColor:[n.chartColor],forecastFillColor:[n.chartForecast],forecastColor:[n.chartColor],forecastDashStyle:[5]},xaxis:{tickDecimals:0},colors:[n.chartColor],grid:{color:[n.gridColor],hoverable:!0,clickable:!0,tickColor:[n.tickColor],borderWidth:{left:1,bottom:1,right:0,top:0},borderColor:{left:[n.borderColor],bottom:[n.borderColor]}},legend:{show:!1},tooltip:{show:!0,shifts:{x:0,y:-35},content:"x: %x, y: %y"}}}return t}();s=o([a.Component({selector:"uxd-charts-line-chart-ng1",template:e(2197),changeDetection:a.ChangeDetectionStrategy.OnPush}),i.DocumentationSectionComponent("ChartsLineChartNg1Component"),r("design:paramtypes",[l.ColorService])],s),n.ChartsLineChartNg1Component=s},1822:function(t,n,e){"use strict";var o=this&&this.__decorate||function(t,n,e,o){var r,a=arguments.length,i=a<3?n:null===o?o=Object.getOwnPropertyDescriptor(n,e):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(t,n,e,o);else for(var l=t.length-1;l>=0;l--)(r=t[l])&&(i=(a<3?r(i):a>3?r(n,e,i):r(n,e))||i);return a>3&&i&&Object.defineProperty(n,e,i),i},r=this&&this.__metadata||function(t,n){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(t,n)};Object.defineProperty(n,"__esModule",{value:!0});var a=e(0),i=e(299),l=e(159),s=function(){function t(t){this.plunk={files:{"app.component.ts":e(1667),"app.component.html":e(1666),"app.component.css":e(1665)},modules:[{library:"chart.js"},{imports:["ChartsModule"],library:"ng2-charts"},{imports:["ColorServiceModule"],library:"ux-aspects"}],mappings:[{alias:"chart.js",source:"https://unpkg.com/chart.js@2.5.0/dist/Chart.min.js"},{alias:"ng2-charts",source:"https://unpkg.com/ng2-charts@1.5.0/bundles/ng2-charts.umd.min.js"}]},this.lineChartLabels=["1","2","3","4","5","6","7","8","9"],this.lineChartLegend=!1,this.htmlCode=e(1666),this.tsCode=e(1667),this.cssCode=e(1665);var n=t.getColor("grey2").toHex(),o=(t.getColor("grey4").toHex(),t.getColor("grey6").toHex()),r=t.getColor("chart1").toRgb(),a=t.getColor("chart1").setAlpha(.1).toRgba(),i=t.getColor("chart1").setAlpha(.06).toRgba(),l=t.getColor("chart1").setAlpha(.5).toRgba();this.lineChartData=[{data:[34,25,19,34,32,44],borderWidth:1},{data:[,,,,,44,45,50,55],borderDash:[5],borderWidth:1}],this.lineChartOptions={maintainAspectRatio:!1,responsive:!0,elements:{line:{tension:0}},scales:{xAxes:[{gridLines:{color:o}}],yAxes:[{ticks:{beginAtZero:!0},gridLines:{color:o}}]},tooltips:{backgroundColor:n,cornerRadius:0,callbacks:{title:function(t){},label:function(t){return"x: "+t.xLabel+", y: "+t.yLabel}},displayColors:!1}},this.lineChartColors=[{borderColor:r,backgroundColor:a,pointBackgroundColor:"transparent",pointBorderColor:"transparent",pointHoverBorderColor:l,pointHoverBorderWidth:3,pointHoverRadius:5,pointHitRadius:5},{borderColor:r,backgroundColor:i,pointBorderColor:"transparent",pointBackgroundColor:"transparent",pointHoverBorderColor:l,pointHoverBorderWidth:3,pointHoverRadius:5,pointHitRadius:5}]}return t}();s=o([a.Component({selector:"uxd-charts-line-chart",template:e(2198)}),i.DocumentationSectionComponent("ChartsLineChartComponent"),r("design:paramtypes",[l.ColorService])],s),n.ChartsLineChartComponent=s},1823:function(t,n,e){"use strict";var o=this&&this.__decorate||function(t,n,e,o){var r,a=arguments.length,i=a<3?n:null===o?o=Object.getOwnPropertyDescriptor(n,e):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(t,n,e,o);else for(var l=t.length-1;l>=0;l--)(r=t[l])&&(i=(a<3?r(i):a>3?r(n,e,i):r(n,e))||i);return a>3&&i&&Object.defineProperty(n,e,i),i},r=this&&this.__metadata||function(t,n){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(t,n)};Object.defineProperty(n,"__esModule",{value:!0});var a=e(0),i=e(20),l=e(302),s=e(1559),c=e(1821),d=e(1824),h=e(1826),p=e(301),u=e(158),C=e(303),g=e(300),b=e(1822),f=e(1827),m=e(1825),v=[c.ChartsLineChartNg1Component,d.ChartsMultipleAxisLineChartNg1Component,h.ChartsStackedLineChartNg1Component,b.ChartsLineChartComponent,f.ChartsStackedLineChartComponent,m.ChartsMultipleAxisLineChartComponent],y=[{path:"**",component:p.DocumentationCategoryComponent,data:{category:u.ResolverService.resolveCategoryData(u.DocumentationPage.Charts,"Line Charts")}}],x=function(){function t(t,n){n.registerResolver(t)}return t}();x=o([a.NgModule({imports:[l.TabsModule,C.WrappersModule,g.DocumentationComponentsModule,s.ChartsModule,i.RouterModule.forChild(y)],exports:v,declarations:v,entryComponents:v}),r("design:paramtypes",[a.ComponentFactoryResolver,u.ResolverService])],x),n.ChartsLineChartsModule=x},1824:function(t,n,e){"use strict";var o=this&&this.__decorate||function(t,n,e,o){var r,a=arguments.length,i=a<3?n:null===o?o=Object.getOwnPropertyDescriptor(n,e):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(t,n,e,o);else for(var l=t.length-1;l>=0;l--)(r=t[l])&&(i=(a<3?r(i):a>3?r(n,e,i):r(n,e))||i);return a>3&&i&&Object.defineProperty(n,e,i),i},r=this&&this.__metadata||function(t,n){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(t,n)},a=this&&this.__param||function(t,n){return function(e,o){n(e,o,t)}};Object.defineProperty(n,"__esModule",{value:!0});var i=e(0),l=e(299),s=e(159),c=function(){function t(t,n){this.htmlCode=e(2518),this.jsCode=e(2519),this.codepen={html:this.htmlCode,htmlAttributes:{"ng-controller":"MultipleAxisLineChartCtrl as lc"},js:[this.jsCode]};var o={chart1Color:t.getColor("chart1").toRgb(),chart2Color:t.getColor("chart2").toRgb(),gridColor:t.getColor("grey4").toHex(),tickColor:t.getColor("grey6").toHex(),borderColor:t.getColor("grey2").setAlpha(.5).toRgba()},r=n.getOilPrices(),a=n.getExchangeRates();this.data=[{data:r,label:"Oil price ($)",lines:{show:!0,fill:!0,lineWidth:1,fillColor:{colors:[{opacity:.1},{opacity:.1}]}},shadowSize:0,highlightColor:[o.chart1Color]},{data:a,label:"USD/EUR exchange rate",yaxis:2,lines:{show:!0,fill:!0,lineWidth:1,fillColor:{colors:[{opacity:.2},{opacity:.2}]}},shadowSize:0,highlightColor:[o.chart2Color]}],this.options={xaxes:[{mode:"time"}],yaxes:[{min:0},{position:"right",alignTicksWithAxis:1,tickFormatter:this.euroFormatter}],legend:{position:"sw"},colors:[o.chart1Color,o.chart2Color],grid:{color:[o.gridColor],clickable:!0,tickColor:[o.tickColor],borderWidth:{bottom:1,left:1,top:0,right:0},borderColor:{bottom:[o.borderColor],left:[o.borderColor]},hoverable:!0},tooltip:{show:!0,shifts:{x:0,y:-35},content:"%s for %x was %y",xDateFormat:"%y-%0m-%0d"}}}return t.prototype.euroFormatter=function(t,n){return t.toFixed(n.tickDecimals)+"€"},t}();c=o([i.Component({selector:"uxd-charts-multiple-axis-line-chart-ng1",template:e(2199),changeDetection:i.ChangeDetectionStrategy.OnPush}),l.DocumentationSectionComponent("ChartsMultipleAxisLineChartNg1Component"),a(1,i.Inject("flotDataService")),r("design:paramtypes",[s.ColorService,Object])],c),n.ChartsMultipleAxisLineChartNg1Component=c},1825:function(t,n,e){"use strict";var o=this&&this.__decorate||function(t,n,e,o){var r,a=arguments.length,i=a<3?n:null===o?o=Object.getOwnPropertyDescriptor(n,e):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(t,n,e,o);else for(var l=t.length-1;l>=0;l--)(r=t[l])&&(i=(a<3?r(i):a>3?r(n,e,i):r(n,e))||i);return a>3&&i&&Object.defineProperty(n,e,i),i},r=this&&this.__metadata||function(t,n){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(t,n)},a=this&&this.__param||function(t,n){return function(e,o){n(e,o,t)}};Object.defineProperty(n,"__esModule",{value:!0});var i=e(0),l=e(14),s=e(299),c=e(159),d=e(1559),h=function(){function t(t,n,o){this.sanitizer=t,this.plunk={files:{"app.component.ts":e(1670),"app.component.html":e(1669),"app.component.css":e(1668),"flot-data.ts":e(2520)},modules:[{library:"chart.js"},{imports:["ChartsModule"],library:"ng2-charts"},{imports:["ColorServiceModule"],library:"ux-aspects"}],mappings:[{alias:"chart.js",source:"https://unpkg.com/chart.js@2.5.0/dist/Chart.min.js"},{alias:"ng2-charts",source:"https://unpkg.com/ng2-charts@1.5.0/bundles/ng2-charts.umd.min.js"}]},this.lineChartLegend=!1,this.htmlCode=e(1669),this.tsCode=e(1670),this.cssCode=e(1668);var r=n.getColor("grey2").toHex(),a=n.getColor("grey6").toHex(),i=n.getColor("chart1").toRgb(),l=n.getColor("chart1").setAlpha(.1).toRgba(),s=(n.getColor("chart1").setAlpha(.06).toRgba(),n.getColor("chart1").setAlpha(.5).toRgba()),c=n.getColor("chart2").toRgb(),d=n.getColor("chart2").setAlpha(.1).toRgba(),h=(n.getColor("chart2").setAlpha(.06).toRgba(),n.getColor("chart2").setAlpha(.5).toRgba()),p=o.getOilPrices().map(function(t){return{x:t[0],y:t[1]}}),u=o.getExchangeRates().map(function(t){return{x:t[0],y:t[1]}});this.lineChartData=[{label:"Oil price ($)",data:p,borderWidth:1,yAxisID:"y-axis-1"},{label:"USD/EUR exchange rate",data:u,borderWidth:1,yAxisID:"y-axis-2"}],this.lineChartOptions={maintainAspectRatio:!1,responsive:!0,elements:{line:{tension:0}},hover:{mode:"nearest"},legendCallback:function(t){return'<ul class="multi-axis-legend-list">'+t.data.datasets.map(function(t){return'<li class="multi-axis-legend-list-item">\n                                <span class="multi-axis-legend-box" style="background-color: '+t.backgroundColor+"; border-color: "+t.borderColor+'"></span> \n                                <span class="multi-axis-legend-text">'+t.label+"</span>\n                            </li>"}).join("")+"</ul>"},scales:{xAxes:[{type:"linear",position:"bottom",ticks:{min:11676924e5,max:12208248e5,stepSize:531324e4,callback:function(t,n,e){var o=new Date(t);return o.toLocaleString("en",{month:"short"})+" "+o.toLocaleString("en",{year:"numeric"})}}}],yAxes:[{id:"y-axis-1",position:"left",ticks:{min:0,max:150,stepSize:50},gridLines:{color:a}},{id:"y-axis-2",position:"right",ticks:{min:0,max:.79,stepSize:.79/3,callback:function(t,n,e){return t.toFixed(2)+"€"}},gridLines:{display:!1}}]},tooltips:{backgroundColor:r,cornerRadius:0,callbacks:{title:function(t){},label:function(t){var n=new Date(t.xLabel);return 1===t.datasetIndex?"USD/EUR exchange rate for "+n.getFullYear().toString().substr(-2)+"-"+n.getMonth()+"m-"+n.getDate()+"d was "+Number(t.yLabel).toFixed(2)+"€":"Oil price ($) "+n.getFullYear().toString().substr(-2)+"-"+n.getMonth()+"m-"+n.getDate()+"d was "+t.yLabel}},displayColors:!1}},this.lineChartColors=[{borderColor:i,backgroundColor:l,pointBackgroundColor:"transparent",pointBorderColor:"transparent",pointHoverBorderColor:s,pointHoverBorderWidth:3,pointHoverRadius:5,pointHitRadius:5},{borderColor:c,backgroundColor:d,pointBackgroundColor:"transparent",pointBorderColor:"transparent",pointHoverBorderColor:h,pointHoverBorderWidth:3,pointHoverRadius:5,pointHitRadius:5}]}return t.prototype.ngAfterViewInit=function(){var t=this;setTimeout(function(){t.lineChartLegendContents=t.sanitizer.bypassSecurityTrustHtml(t.baseChart.chart.generateLegend())})},t}();o([i.ViewChild(d.BaseChartDirective),r("design:type",d.BaseChartDirective)],h.prototype,"baseChart",void 0),h=o([i.Component({selector:"uxd-charts-multi-axis-line-chart",template:e(2200),styles:[e(3133)],encapsulation:i.ViewEncapsulation.None}),s.DocumentationSectionComponent("ChartsMultipleAxisLineChartComponent"),a(2,i.Inject("flotDataService")),r("design:paramtypes",[l.DomSanitizer,c.ColorService,Object])],h),n.ChartsMultipleAxisLineChartComponent=h},1826:function(t,n,e){"use strict";var o=this&&this.__decorate||function(t,n,e,o){var r,a=arguments.length,i=a<3?n:null===o?o=Object.getOwnPropertyDescriptor(n,e):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(t,n,e,o);else for(var l=t.length-1;l>=0;l--)(r=t[l])&&(i=(a<3?r(i):a>3?r(n,e,i):r(n,e))||i);return a>3&&i&&Object.defineProperty(n,e,i),i},r=this&&this.__metadata||function(t,n){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(t,n)};Object.defineProperty(n,"__esModule",{value:!0});var a=e(0),i=e(299),l=e(159),s=function(){function t(t){this.htmlCode=e(2522),this.jsCode=e(2523),this.accessibilityHtml=e(2521),this.legendHtml=e(2525),this.legendCss=e(2524),this.legendJs=e(2526),this.codepen={html:this.htmlCode,htmlAttributes:{"ng-controller":"StackedLineChartCtrl as lc"},js:[this.jsCode]};for(var n={chart1Color:t.getColor("chart1").toRgb(),chart2Color:t.getColor("chart2").toRgb(),chart3Color:t.getColor("chart3").toRgb(),chart1Fill:t.getColor("chart1").setAlpha(.2).toRgba(),chart2Fill:t.getColor("chart2").setAlpha(.2).toRgba(),chart3Fill:t.getColor("chart3").setAlpha(.2).toRgba(),chart1Hover:t.getColor("chart1").setAlpha(.3).toRgba(),chart2Hover:t.getColor("chart2").setAlpha(.3).toRgba(),chart3Hover:t.getColor("chart3").setAlpha(.3).toRgba(),chart1Forecast:t.getColor("chart1").setAlpha(.06).toRgba(),chart2Forecast:t.getColor("chart2").setAlpha(.06).toRgba(),chart3Forecast:t.getColor("chart3").setAlpha(.06).toRgba(),gridColor:t.getColor("grey4").toHex(),tickColor:t.getColor("grey6").toHex(),borderColor:t.getColor("grey2").setAlpha(.5).toRgba()},o=[],r=[],a=[],i=[],l=[],s=[],c=1;c<=10;c+=1)o.push([c,Math.floor(1e4*Math.random())]),r.push([c,Math.floor(1e4*Math.random())]),a.push([c,Math.floor(1e4*Math.random())]);for(var c=11;c<=13;c+=1)i.push([c,Math.floor(1e4*Math.random())]),l.push([c,Math.floor(1e4*Math.random())]),s.push([c,Math.floor(1e4*Math.random())]);this.data=[{label:"Sales 1",data:o,color:[n.chart1Color],fillColor:n.chart1Fill,highlightColor:[n.chart1Hover],shadowSize:0,forecastData:i,forecastFillColor:[n.chart1Forecast],forecastColor:[n.chart1Color],forecastHighLightColor:[n.chart1Hover]},{label:"Sales 2",data:r,color:[n.chart2Color],fillColor:n.chart2Fill,highlightColor:[n.chart2Hover],shadowSize:0,forecastData:l,forecastFillColor:[n.chart2Forecast],forecastColor:[n.chart2Color],forecastDashStyle:[5],forecastHighLightColor:[n.chart2Hover]},{label:"Sales 3",data:a,color:[n.chart3Color],fillColor:[n.chart3Fill],highlightColor:[n.chart3Hover],shadowSize:0,forecastData:s,forecastFillColor:[n.chart3Forecast],forecastColor:[n.chart3Color],forecastDashStyle:[5],forecastHighLightColor:[n.chart3Hover]}],this.options={series:{stack:!0,lines:{show:!0,fill:!0}},yaxis:{tickFormatter:this.euroFormatter},xaxis:{tickDecimals:0},grid:{color:[n.gridColor],hoverable:!0,clickable:!0,tickcolor:[n.tickColor],borderWidth:{left:1,bottom:1,right:0,top:0},borderColor:{left:[n.borderColor],bottom:[n.borderColor]}},legend:{show:!0,container:"#legendHolderLine",noColumns:0},tooltip:{show:!0,shifts:{x:0,y:-35},content:"%s - %y in cycle %x"}}}return t.prototype.euroFormatter=function(t,n){return t.toFixed(n.tickDecimals)+"€"},t}();s=o([a.Component({selector:"uxd-charts-stacked-line-chart-ng1",template:e(2201),changeDetection:a.ChangeDetectionStrategy.OnPush}),i.DocumentationSectionComponent("ChartsStackedLineChartNg1Component"),r("design:paramtypes",[l.ColorService])],s),n.ChartsStackedLineChartNg1Component=s},1827:function(t,n,e){"use strict";var o=this&&this.__decorate||function(t,n,e,o){var r,a=arguments.length,i=a<3?n:null===o?o=Object.getOwnPropertyDescriptor(n,e):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(t,n,e,o);else for(var l=t.length-1;l>=0;l--)(r=t[l])&&(i=(a<3?r(i):a>3?r(n,e,i):r(n,e))||i);return a>3&&i&&Object.defineProperty(n,e,i),i},r=this&&this.__metadata||function(t,n){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(t,n)};Object.defineProperty(n,"__esModule",{value:!0});var a=e(0),i=e(299),l=e(159),s=function(){function t(t){this.plunk={files:{"app.component.ts":e(1673),"app.component.html":e(1672),"app.component.css":e(1671)},modules:[{library:"chart.js"},{imports:["ChartsModule"],library:"ng2-charts"},{imports:["ColorServiceModule"],library:"ux-aspects"}],mappings:[{alias:"chart.js",source:"https://unpkg.com/chart.js@2.5.0/dist/Chart.min.js"},{alias:"ng2-charts",source:"https://unpkg.com/ng2-charts@1.5.0/bundles/ng2-charts.umd.min.js"}]},this.lineChartLabels=["1","2","3","4","5","6","7","8","9","10","11","12","13"],this.lineChartLegend=!1,this.htmlCode=e(1672),this.tsCode=e(1673),this.cssCode=e(1671);var n=t.getColor("grey2").toHex(),o=t.getColor("chart1").toRgb(),r=t.getColor("chart1").setAlpha(.1).toRgba(),a=(t.getColor("chart1").setAlpha(.06).toRgba(),t.getColor("chart1").setAlpha(.5).toRgba()),i=t.getColor("chart2").toRgb(),l=t.getColor("chart2").setAlpha(.1).toRgba(),s=(t.getColor("chart2").setAlpha(.06).toRgba(),t.getColor("chart2").setAlpha(.5).toRgba()),c=t.getColor("chart3").toRgb(),d=t.getColor("chart3").setAlpha(.1).toRgba(),h=(t.getColor("chart3").setAlpha(.06).toRgba(),t.getColor("chart3").setAlpha(.5).toRgba());this.lineChartData=[{data:this.getRandomData(),borderWidth:1},{data:this.getRandomData(),borderWidth:1},{data:this.getRandomData(),borderWidth:1}],this.lineChartOptions={maintainAspectRatio:!1,responsive:!0,hover:{mode:"nearest"},elements:{line:{tension:0}},scales:{ticks:{min:0,max:25e3},yAxes:[{stacked:!0,ticks:{min:0,max:3e4,stepSize:5e3,callback:function(t){return t+"€"}}}]},tooltips:{backgroundColor:n,cornerRadius:0,callbacks:{title:function(t){},label:function(t){return"Sales "+(t.datasetIndex+1)+" - "+t.yLabel+"€ in cycle "+(t.index+1)}},displayColors:!1}},this.lineChartColors=[{borderColor:o,backgroundColor:r,pointBackgroundColor:"transparent",pointBorderColor:"transparent",pointHoverBorderColor:a,pointHoverBorderWidth:3,pointHoverRadius:5,pointHitRadius:5},{borderColor:i,backgroundColor:l,pointBackgroundColor:"transparent",pointBorderColor:"transparent",pointHoverBorderColor:s,pointHoverBorderWidth:3,pointHoverRadius:5,pointHitRadius:5},{borderColor:c,backgroundColor:d,pointBackgroundColor:"transparent",pointBorderColor:"transparent",pointHoverBorderColor:h,pointHoverBorderWidth:3,pointHoverRadius:5,pointHitRadius:5}]}return t.prototype.getRandomData=function(){for(var t=[],n=0;n<13;n++)t.push(Math.floor(1e4*Math.random()));return t},t}();s=o([a.Component({selector:"uxd-charts-stacked-line-chart",template:e(2202)}),i.DocumentationSectionComponent("ChartsStackedLineChartComponent"),r("design:paramtypes",[l.ColorService])],s),n.ChartsStackedLineChartComponent=s},2131:function(t,n,e){n=t.exports=e(10)(void 0),n.push([t.i,".multi-axis-legend {\n  position: absolute;\n  bottom: 32px;\n  left: 38px;\n  background-color: #ffffff;\n  opacity: 0.85;\n}\n.multi-axis-legend .multi-axis-legend-list {\n  list-style-type: none;\n  padding: 0;\n  margin: 0;\n}\n.multi-axis-legend .multi-axis-legend-list .multi-axis-legend-list-item {\n  padding: 0 5px;\n}\n.multi-axis-legend .multi-axis-legend-list .multi-axis-legend-list-item .multi-axis-legend-box {\n  display: inline-block;\n  width: 12px;\n  height: 12px;\n  border-width: 1px;\n  border-style: solid;\n}\n.multi-axis-legend .multi-axis-legend-list .multi-axis-legend-list-item .multi-axis-legend-text {\n  color: #999999;\n  font-size: 13px;\n  vertical-align: text-bottom;\n  margin-left: 3px;\n}\n",""])},2197:function(t,n){t.exports='<div class="flot-chart">\n    <ux-flot-ng1 [dataset]="data" [options]="options"></ux-flot-ng1>\n</div>\n\n<hr>\n\n<div class="demo-attributes table-responsive">\n<table class="table">\n    <tbody><tr>\n        <th>Property</th>\n        <th>Type</th>\n        <th>Description</th>\n        <th>Optional</th>\n    </tr>\n    <tr>\n        <td class="attribute">label</td>\n        <td>string</td>\n        <td>Label name specified in the legend.</td>\n        <td>true</td>\n    </tr>\n    <tr>\n        <td class="attribute">data</td>\n        <td>number or array</td>\n        <td>An array of coordinates in the chart e.g. [ [x1, y1], [x2, y2], ... ]</td>\n        <td>false</td>\n    </tr>\n    <tr>\n        <td class="attribute">forecastData</td>\n        <td>number or array</td>\n        <td>An array of coordinates defining the forecast or future data.</td>\n        <td>true</td>\n    </tr>\n</tbody></table>\n</div>\n\n<p>Line Charts are defined by the <code>flot</code> directive. The dataset and options attribute define the line chart data and options respectively.\nDataset and Options are defined within the LineChartCtrl.</p>\n\n<tabset>\n    <tab heading="HTML">\n        <uxd-snippet language="html" [code]="htmlCode"></uxd-snippet>\n    </tab>\n    \n    <tab heading="Javascript">\n        <uxd-snippet language="javascript" [code]="jsCode"></uxd-snippet>\n    </tab>\n</tabset>\n\n<blockquote>\n  <p><strong>Note</strong>: Refer to the <a routerLink="/charts/flot-options">Flot Options</a> page for details of chart options.</p>\n</blockquote>\n\n<p>To convey chart information to users with assistive technologies, you can include a text version of the data. Use the sr-only class to make the text hidden but visible to screen readers, and give the container a tabindex attribute so it can be reached with the keyboard, and place it near the chart.</p>\n\n<uxd-snippet language="html" [code]="accessibilityHtml"></uxd-snippet>\n\n<blockquote>\n    <p><strong>Note</strong>: To upgrade this component to use in an Angular 4 application use: <code>upgradeAdapter.upgradeNg1Component(\'uxFlotNg1\')</code></p>\n</blockquote>'},2198:function(t,n){t.exports='<div class="demo-chart-container">\n\n    <canvas baseChart \n            [datasets]="lineChartData"\n            [labels]="lineChartLabels"\n            [options]="lineChartOptions"\n            [legend]="lineChartLegend"\n            [colors]="lineChartColors"\n            chartType="line">\n    </canvas>\n\n</div>\n\n\n<hr>\n\n<p>\n    Line Charts can be added using the <code>ng2-charts</code> library. \n    The <code>chart.js</code> library needs to be imported and the <code>ChartsModule</code> needs to be added to the appropriate NgModule.\n</p>\n\n<br>\n\n<p>The <code>baseChart</code> directive should be added to a <code>canvas</code> element and the following attributes can be used to customize the chart behavior and appearance:</p>\n\n\n<table class="table">\n\n    <thead>\n        <tr>\n            <th>Name</th>\n            <th>Type</th>\n            <th>Description</th>\n        </tr>\n    </thead>\n\n    <tbody>\n\n        <tr>\n            <td><b>@Input</b> datasets</td>\n            <td><b>object[]</b></td>\n            <td>Contains the data and properties for each data set to be displayed in the chart.</td>\n        </tr>\n\n        <tr>\n            <td><b>@Input</b> chartType</td>\n            <td><b>string</b></td>\n            <td>Indicates the type of the chart. Possible options are: <code>line</code>, <code>bar</code>, <code>radar</code>, <code>pie</code>, <code>polarArea</code>, <code>doughnut</code></td>\n        </tr>\n\n        <tr>\n            <td><b>@Input</b> options</td>\n            <td><b>ChartOptions</b></td>\n            <td>Configures the appearance and behavior of all aspects of the chart.</td>\n        </tr>\n\n        <tr>\n            <td><b>@Input</b> colors</td>\n            <td><b>object[]</b></td>\n            <td>Configure the color values to be used within the chart.</td>\n        </tr>\n\n        <tr>\n            <td><b>@Input</b> legend</td>\n            <td><b>boolean</b></td>\n            <td>Determines whether or not the legend should be displayed.</td>\n        </tr>\n\n        <tr>\n            <td><b>@Output</b> chartClick</td>\n            <td></td>\n            <td>Fires when click on a chart has occurred, returns information regarding active points and labels</td>\n        </tr>\n\n        <tr>\n            <td><b>@Output</b> chartHover</td>\n            <td></td>\n            <td>Fires when mousemove (hover) on a chart has occurred, returns information regarding active points and labels.</td>\n        </tr>\n\n    </tbody>\n</table>\n\n<p>Complete documentation on the directive and chart options can be found at the documentation links below.</p>\n\n<p>The following code can be used to create the example above: </p>\n\n<tabset>\n\n    <tab heading="HTML">\n        <uxd-snippet language="html" [code]="htmlCode"></uxd-snippet>\n    </tab>\n    \n    <tab heading="TypeScript">\n        <uxd-snippet language="javascript" [code]="tsCode"></uxd-snippet>\n    </tab>\n    \n    <tab heading="CSS">\n        <uxd-snippet language="css" [code]="cssCode"></uxd-snippet>\n    </tab>\n\n</tabset>\n\n<br>\n\n<blockquote>\n\n    <p class="m-b-nil">\n        <b>Dependencies: </b>\n        <a class="hyperlink" href="https://www.npmjs.com/package/ng2-charts">ng2-charts</a>, \n        <a class="hyperlink" href="https://www.npmjs.com/package/chart.js">chart.js</a>\n    </p>\n\n    <p class="m-b-nil">\n        <b>Type Definitions: </b>\n        <a class="hyperlink" href="https://www.npmjs.com/package/@types/chart.js">@types/chart.js</a>\n    </p>\n\n    <p class="m-b-nil">\n        <b>Modules: </b>\n        <span>ChartsModule</span>\n    </p>\n\n\n    <p class="m-b-nil">\n        <b>Documentation: </b>\n        <a class="hyperlink" href="http://valor-software.com/ng2-charts/">Angular Directive Documentation</a>, \n        <a class="hyperlink" href="http://www.chartjs.org/docs/">Chart Library Documentation</a>\n    </p>\n</blockquote>'},2199:function(t,n){t.exports='<div class="flot-chart">\n    <ux-flot-ng1 [dataset]="data" [options]="options"></ux-flot-ng1>\n</div>\n\n<hr>\n\n<div class="demo-attributes table-responsive">\n    <table class="table">\n        <tbody>\n            <tr>\n                <th>Property</th>\n                <th>Type</th>\n                <th>Description</th>\n                <th>Optional</th>\n            </tr>\n            <tr>\n                <td class="attribute">label</td>\n                <td>string</td>\n                <td>Label name specified in the legend.</td>\n                <td>true</td>\n            </tr>\n            <tr>\n                <td class="attribute">data</td>\n                <td>array</td>\n                <td>Coordinates in the chart e.g. [ [x1, y1], [x2, y2], ... ]</td>\n                <td>false</td>\n            </tr>\n            <tr>\n                <td class="attribute">lines</td>\n                <td>object</td>\n                <td>Defines the parameters of the axis line.</td>\n                <td>true</td>\n            </tr>\n        </tbody>\n    </table>\n</div>\n\n<p>The following attributes should be defined within <code>lines</code></p>\n\n<div class="demo-attributes table-responsive">\n    <table class="table">\n        <tbody>\n            <tr>\n                <th>Property</th>\n                <th>Type</th>\n                <th>Description</th>\n                <th>Optional</th>\n            </tr>\n            <tr>\n                <td class="attribute">show</td>\n                <td>boolean</td>\n                <td>If set to true displays the chart.</td>\n                <td>true</td>\n            </tr>\n            <tr>\n                <td class="attribute">fillColor</td>\n                <td>array</td>\n                <td>Specifies the colors of the fill. If more than one color is specified this will produce a gradient.</td>\n                <td>true</td>\n            </tr>\n            <tr>\n                <td class="attribute">fill</td>\n                <td>boolean or number</td>\n                <td>If set to true fills the chart with colors in the fillColors property. A number between 0 and 1 defines the\n                    opacity of the fill.</td>\n                <td>true</td>\n            </tr>\n            <tr>\n                <td class="attribute">lineWidth</td>\n                <td>number</td>\n                <td>Defines the thickness of the line or outline in pixels.</td>\n                <td>true</td>\n            </tr>\n            <tr>\n                <td class="attribute">highlightColor</td>\n                <td>color</td>\n                <td>Default color of the translucent overlay used to highlight on mouse hover.</td>\n                <td>true</td>\n            </tr>\n            <tr>\n                <td class="attribute">shadowSize</td>\n                <td>number</td>\n                <td>Default size of shadows in pixels. Set it to 0 to remove shadows.</td>\n                <td>true</td>\n            </tr>\n        </tbody>\n    </table>\n</div>\n\n<p>MultiAxes Charts are defined by the <code>flot</code> directive. The dataset and options attribute define the multiaxes chart\n    data and options respectively. Dataset and Options are defined within the MultipleAxisLineChartCtrl.</p>\n\n<tabset>\n    <tab heading="HTML">\n        <uxd-snippet language="html" [code]="htmlCode"></uxd-snippet>\n    </tab>\n    \n    <tab heading="Javascript">\n        <uxd-snippet language="javascript" [code]="jsCode"></uxd-snippet>\n    </tab>\n</tabset>\n\n<p>The following attributes should be defined within <code>options</code></p>\n\n<div class="demo-attributes table-responsive">\n    <table class="table">\n        <tbody>\n            <tr>\n                <th>Property</th>\n                <th>Type</th>\n                <th>Description</th>\n                <th>Optional</th>\n            </tr>\n            <tr>\n                <td class="attribute">xaxis</td>\n                <td>array</td>\n                <td>Defines if more than one x-axis is used.</td>\n                <td>true</td>\n            </tr>\n            <tr>\n                <td class="attribute">yaxis</td>\n                <td>array</td>\n                <td>Defines if more than one y-axis is used.</td>\n                <td>true</td>\n            </tr>\n        </tbody>\n    </table>\n</div>\n\n<p>The following attributes should be defined within <code>xaxis</code></p>\n\n<div class="demo-attributes table-responsive">\n    <table class="table">\n        <tbody>\n            <tr>\n                <th>Property</th>\n                <th>Type</th>\n                <th>Description</th>\n                <th>Optional</th>\n            </tr>\n            <tr>\n                <td class="attribute">mode</td>\n                <td>null or time</td>\n                <td>Defines how data is represented on the x-axes.</td>\n                <td>true</td>\n            </tr>\n        </tbody>\n    </table>\n</div>\n\n<p>The following attributes should be defined within <code>yaxis</code></p>\n\n<div class="demo-attributes table-responsive">\n    <table class="table">\n        <tbody>\n            <tr>\n                <th>Property</th>\n                <th>Type</th>\n                <th>Description</th>\n                <th>Optional</th>\n            </tr>\n            <tr>\n                <td class="attribute">min</td>\n                <td>number</td>\n                <td>Defines the minimum value of the y-axis.</td>\n                <td>true</td>\n            </tr>\n            <tr>\n                <td class="attribute">alignTicksWidthAxis</td>\n                <td>null or number</td>\n                <td>Aligns the ticks of this axis with the ticks of the other axis.</td>\n                <td>true</td>\n            </tr>\n            <tr>\n                <td class="attribute">position</td>\n                <td>string</td>\n                <td>Set as "top" or "bottom" or "right" or "left", specifies the position of the axis.</td>\n                <td>true</td>\n            </tr>\n            <tr>\n                <td class="attribute">tickFormatter</td>\n                <td>function</td>\n                <td>Defines how ticks are formatted.</td>\n                <td>true</td>\n            </tr>\n        </tbody>\n    </table>\n</div>\n\n<blockquote>\n    <p><strong>Note</strong>: Refer to the <a routerLink="/charts/flot-options">Flot Options</a> page for details of chart options.</p>\n</blockquote>\n\n<p>To support users of assistive technologies, provide a text summary of the chart with an <code>aria-label</code> or <code>span</code>    hidden with the <code>sr-only</code> class. For multiple axes charts the most appropriate information to convey will\n    vary depending on the chart’s purpose.</p>\n\n<blockquote>\n    <p><strong>Note</strong>: To upgrade this component to use in an Angular 4 application use: <code>upgradeAdapter.upgradeNg1Component(\'uxFlotNg1\')</code></p>\n</blockquote>'},2200:function(t,n){t.exports='<div class="demo-chart-container">\n\n    <canvas baseChart \n            [datasets]="lineChartData"\n            [options]="lineChartOptions"\n            [legend]="lineChartLegend"\n            [colors]="lineChartColors"\n            chartType="line">\n    </canvas>\n\n    <div class="multi-axis-legend" [innerHtml]="lineChartLegendContents"></div>\n\n</div>\n\n<hr>\n\n<p>\n    Multiple Axis Line Charts can be added using the <code>ng2-charts</code> library. \n    The <code>chart.js</code> library needs to be imported and the <code>ChartsModule</code> needs to be added to the appropriate NgModule.\n</p>\n\n<br>\n\n<p>The <code>baseChart</code> directive should be added to a <code>canvas</code> element and the following attributes can be used to customize the chart behavior and appearance:</p>\n\n\n<table class="table">\n\n    <thead>\n        <tr>\n            <th>Name</th>\n            <th>Type</th>\n            <th>Description</th>\n        </tr>\n    </thead>\n\n    <tbody>\n\n        <tr>\n            <td><b>@Input</b> datasets</td>\n            <td><b>object[]</b></td>\n            <td>Contains the data and properties for each data set to be displayed in the chart.</td>\n        </tr>\n\n        <tr>\n            <td><b>@Input</b> chartType</td>\n            <td><b>string</b></td>\n            <td>Indicates the type of the chart. Possible options are: <code>line</code>, <code>bar</code>, <code>radar</code>, <code>pie</code>, <code>polarArea</code>, <code>doughnut</code></td>\n        </tr>\n\n        <tr>\n            <td><b>@Input</b> options</td>\n            <td><b>ChartOptions</b></td>\n            <td>Configures the appearance and behavior of all aspects of the chart.</td>\n        </tr>\n\n        <tr>\n            <td><b>@Input</b> colors</td>\n            <td><b>object[]</b></td>\n            <td>Configure the color values to be used within the chart.</td>\n        </tr>\n\n        <tr>\n            <td><b>@Input</b> legend</td>\n            <td><b>boolean</b></td>\n            <td>Determines whether or not the legend should be displayed.</td>\n        </tr>\n\n        <tr>\n            <td><b>@Output</b> chartClick</td>\n            <td></td>\n            <td>Fires when click on a chart has occurred, returns information regarding active points and labels</td>\n        </tr>\n\n        <tr>\n            <td><b>@Output</b> chartHover</td>\n            <td></td>\n            <td>Fires when mousemove (hover) on a chart has occurred, returns information regarding active points and labels.</td>\n        </tr>\n\n    </tbody>\n</table>\n\n<p>Complete documentation on the directive and chart options can be found at the documentation links below.</p>\n\n<p>The following code can be used to create the example above: </p>\n\n<tabset>\n\n    <tab heading="HTML">\n        <uxd-snippet language="html" [code]="htmlCode"></uxd-snippet>\n    </tab>\n    \n    <tab heading="TypeScript">\n        <uxd-snippet language="javascript" [code]="tsCode"></uxd-snippet>\n    </tab>\n    \n    <tab heading="CSS">\n        <uxd-snippet language="css" [code]="cssCode"></uxd-snippet>\n    </tab>\n\n</tabset>\n\n<br>\n\n<blockquote>\n\n    <p class="m-b-nil">\n        <b>Dependencies: </b>\n        <a class="hyperlink" href="https://www.npmjs.com/package/ng2-charts">ng2-charts</a>, \n        <a class="hyperlink" href="https://www.npmjs.com/package/chart.js">chart.js</a>\n    </p>\n\n    <p class="m-b-nil">\n        <b>Type Definitions: </b>\n        <a class="hyperlink" href="https://www.npmjs.com/package/@types/chart.js">@types/chart.js</a>\n    </p>\n\n    <p class="m-b-nil">\n        <b>Modules: </b>\n        <span>ChartsModule</span>\n    </p>\n\n\n    <p class="m-b-nil">\n        <b>Documentation: </b>\n        <a class="hyperlink" href="http://valor-software.com/ng2-charts/">Angular Directive Documentation</a>, \n        <a class="hyperlink" href="http://www.chartjs.org/docs/">Chart Library Documentation</a>\n    </p>\n</blockquote>'},2201:function(t,n){t.exports='<div class="flot-chart-stack">\n    <ux-flot-ng1 [dataset]="data" [options]="options"></ux-flot-ng1>\n</div>\n\n<hr>\n\n<div class="demo-attributes table-responsive">\n    <table class="table">\n        <tbody>\n            <tr>\n                <th>Property</th>\n                <th>Type</th>\n                <th>Description</th>\n                <th>Optional</th>\n            </tr>\n            <tr>\n                <td class="attribute">label</td>\n                <td>string</td>\n                <td>Label name specified in the legend.</td>\n                <td>true</td>\n            </tr>\n            <tr>\n                <td class="attribute">data</td>\n                <td>number or array</td>\n                <td>An array of coordinates in the chart e.g. [ [x1, y1], [x2, y2], ... ]</td>\n                <td>false</td>\n            </tr>\n            <tr>\n                <td class="attribute">color</td>\n                <td>color</td>\n                <td>Defines the color of each line.</td>\n                <td>true</td>\n            </tr>\n            <tr>\n                <td class="attribute">fillColor</td>\n                <td>color</td>\n                <td>Defines the color of the filled area beneath each line.</td>\n                <td>true</td>\n            </tr>\n            <tr>\n                <td class="attribute">highlightColor</td>\n                <td>color</td>\n                <td>Default color of the translucent overlay used to highlight on mouse hover.</td>\n                <td>true</td>\n            </tr>\n            <tr>\n                <td class="attribute">forecastFillColor</td>\n                <td>color</td>\n                <td>Defines the fill color for the portion representing forecast data.</td>\n                <td>true</td>\n            </tr>\n            <tr>\n                <td class="attribute">forecastColor</td>\n                <td>color</td>\n                <td>Defines the stroke color for the portion representing forecast data.</td>\n                <td>true</td>\n            </tr>\n            <tr>\n                <td class="attribute">forecastHighlightColor</td>\n                <td>color</td>\n                <td>Default color of the translucent overlay used to highlight on mouse hover for the portion representing forecast\n                    data.</td>\n                <td>true</td>\n            </tr>\n            <tr>\n                <td class="attribute">forecastDashStyle</td>\n                <td>array</td>\n                <td>Default is [5], defines a list of numbers that specifies distances to alternately draw a line and a gap (in\n                    coordinate space units). Similar to this property in HTML5 Canvas.</td>\n                <td>true</td>\n            </tr>\n            <tr>\n                <td class="attribute">forecastData</td>\n                <td>number or array</td>\n                <td>Coordinates defining the forecast or future data. An array of coordinates in chart e.g. [ [x1, y1], [x2,\n                    y2], ... ]</td>\n                <td>true</td>\n            </tr>\n            <tr>\n                <td class="attribute">shadowSize</td>\n                <td>number</td>\n                <td>Default size of shadows in pixels. Set it to 0 to remove shadows.</td>\n                <td>true</td>\n            </tr>\n        </tbody>\n    </table>\n</div>\n\n<p>Stacked Line Charts are defined by the <code>flot</code> directive. The dataset and options attributes define the chart data\n    and options respectively. Dataset and Options are defined within the StackedLineChartCtrl.</p>\n\n<tabset>\n    <tab heading="HTML">\n        <uxd-snippet language="html" [code]="htmlCode"></uxd-snippet>\n    </tab>\n\n    <tab heading="Javascript">\n        <uxd-snippet language="javascript" [code]="jsCode"></uxd-snippet>\n    </tab>\n</tabset>\n\n<div class="demo-attributes table-responsive">\n    <table class="table">\n        <tbody>\n            <tr>\n                <th>Property</th>\n                <th>Type</th>\n                <th>Description</th>\n                <th>Optional</th>\n            </tr>\n            <tr>\n                <td class="attribute">stack</td>\n                <td>boolean</td>\n                <td>If set to true shows the chart in stacked form.</td>\n                <td>true</td>\n            </tr>\n        </tbody>\n    </table>\n</div>\n\n<blockquote>\n    <p><strong>Note</strong>: Refer to the <a routerLink="/charts/flot-options">Flot Options</a> page for details of chart options.</p>\n</blockquote>\n\n<p>Stacked line charts are an enhanced version of line charts. For more information on options, refer to the line chart documentation.</p>\n\n<p>To convey chart information to users with assistive technologies, you can include a text version of the data. Use the <code>sr-only</code>    class to make the text hidden but visible to screen readers, and give the container a <code>tabindex</code> attribute\n    so it can be reached with the keyboard, and place it near the chart.</p>\n\n<uxd-snippet language="html" [code]="accessibilityHtml"></uxd-snippet>\n\n<p>The legends are custom-styled in this example. To place the legends separately from the chart, you can define a <code>div</code>    with an id and specify this in legend options. The styles and options applied here are:</p>\n\n<tabset>\n    <tab heading="HTML">\n        <uxd-snippet language="html" [code]="legendHtml"></uxd-snippet>\n    </tab>\n    \n    <tab heading="CSS">\n        <uxd-snippet language="css" [code]="legendCss"></uxd-snippet>\n    </tab>\n    \n    <tab heading="Javascript">\n        <uxd-snippet language="javascript" [code]="legendJs"></uxd-snippet>\n    </tab>\n\n</tabset>\n\n<blockquote>\n    <p><strong>Note</strong>: To upgrade this component to use in an Angular 4 application use: <code>upgradeAdapter.upgradeNg1Component(\'uxFlotNg1\')</code></p>\n</blockquote>'},2202:function(t,n){t.exports='<div class="demo-chart-container-stack">\n\n    <canvas baseChart \n            [datasets]="lineChartData"\n            [labels]="lineChartLabels"\n            [options]="lineChartOptions"\n            [legend]="lineChartLegend"\n            [colors]="lineChartColors"\n            chartType="line">\n    </canvas>\n\n</div>\n\n\n<hr>\n\n<p>\n    Stacked Line Charts can be added using the <code>ng2-charts</code> library. \n    The <code>chart.js</code> library needs to be imported and the <code>ChartsModule</code> needs to be added to the appropriate NgModule.\n</p>\n\n<br>\n\n<p>The <code>baseChart</code> directive should be added to a <code>canvas</code> element and the following attributes can be used to customize the chart behavior and appearance:</p>\n\n\n<table class="table">\n\n    <thead>\n        <tr>\n            <th>Name</th>\n            <th>Type</th>\n            <th>Description</th>\n        </tr>\n    </thead>\n\n    <tbody>\n\n        <tr>\n            <td><b>@Input</b> datasets</td>\n            <td><b>object[]</b></td>\n            <td>Contains the data and properties for each data set to be displayed in the chart.</td>\n        </tr>\n\n        <tr>\n            <td><b>@Input</b> chartType</td>\n            <td><b>string</b></td>\n            <td>Indicates the type of the chart. Possible options are: <code>line</code>, <code>bar</code>, <code>radar</code>, <code>pie</code>, <code>polarArea</code>, <code>doughnut</code></td>\n        </tr>\n\n        <tr>\n            <td><b>@Input</b> options</td>\n            <td><b>ChartOptions</b></td>\n            <td>Configures the appearance and behavior of all aspects of the chart.</td>\n        </tr>\n\n        <tr>\n            <td><b>@Input</b> colors</td>\n            <td><b>object[]</b></td>\n            <td>Configure the color values to be used within the chart.</td>\n        </tr>\n\n        <tr>\n            <td><b>@Input</b> legend</td>\n            <td><b>boolean</b></td>\n            <td>Determines whether or not the legend should be displayed.</td>\n        </tr>\n\n        <tr>\n            <td><b>@Output</b> chartClick</td>\n            <td></td>\n            <td>Fires when click on a chart has occurred, returns information regarding active points and labels</td>\n        </tr>\n\n        <tr>\n            <td><b>@Output</b> chartHover</td>\n            <td></td>\n            <td>Fires when mousemove (hover) on a chart has occurred, returns information regarding active points and labels.</td>\n        </tr>\n\n    </tbody>\n</table>\n\n<p>Complete documentation on the directive and chart options can be found at the documentation links below.</p>\n\n<p>The following code can be used to create the example above: </p>\n\n<tabset>\n\n    <tab heading="HTML">\n        <uxd-snippet language="html" [code]="htmlCode"></uxd-snippet>\n    </tab>\n    \n    <tab heading="TypeScript">\n        <uxd-snippet language="javascript" [code]="tsCode"></uxd-snippet>\n    </tab>\n    \n    <tab heading="CSS">\n        <uxd-snippet language="css" [code]="cssCode"></uxd-snippet>\n    </tab>\n\n</tabset>\n\n<br>\n\n<blockquote>\n\n    <p class="m-b-nil">\n        <b>Dependencies: </b>\n        <a class="hyperlink" href="https://www.npmjs.com/package/ng2-charts">ng2-charts</a>, \n        <a class="hyperlink" href="https://www.npmjs.com/package/chart.js">chart.js</a>\n    </p>\n\n    <p class="m-b-nil">\n        <b>Type Definitions: </b>\n        <a class="hyperlink" href="https://www.npmjs.com/package/@types/chart.js">@types/chart.js</a>\n    </p>\n\n    <p class="m-b-nil">\n        <b>Modules: </b>\n        <span>ChartsModule</span>\n    </p>\n\n\n    <p class="m-b-nil">\n        <b>Documentation: </b>\n        <a class="hyperlink" href="http://valor-software.com/ng2-charts/">Angular Directive Documentation</a>, \n        <a class="hyperlink" href="http://www.chartjs.org/docs/">Chart Library Documentation</a>\n    </p>\n</blockquote>'},2515:function(t,n){t.exports='<span tabindex="1" class="sr-only">\n    <span ng-repeat="item in lc.lineChart.data[0].data">{{item[1]}},</span>\n</span>'},2516:function(t,n){t.exports='<div class="flot-chart">\n  <flot dataset="lc.lineChart.data" options="lc.lineChart.lineoptions"\n    on-plot-click="lc.lineChart.onPlotClick(event,pos,item)"\n    on-hover-click="lc.lineChart.onPlotHover(event,pos,item)">\n  </flot>\n</div>'},2517:function(t,n){t.exports='angular.module("app").controller("LineChartCtrl", LineChartCtrl);\n\nLineChartCtrl.$inject = [\'$colorService\'];\n\nfunction LineChartCtrl($colorService) {\n\n    var lc = this;\n\n    var flotChartColors = {\n        chartColor: $colorService.getColor(\'chart1\').toRgb(),\n        chartForecast: $colorService.getColor(\'chart1\').setAlpha(0.06).toRgba(),\n        gridColor: $colorService.getColor(\'grey4\').toHex(),\n        tickColor: $colorService.getColor(\'grey6\').toHex(),\n        borderColor: $colorService.getColor(\'grey2\').setAlpha(0.5).toRgba()\n    };\n\n    lc.lineChart = {\n        data: [{\n            label: "line",\n            data: [\n                [1, 34],\n                [2, 25],\n                [3, 19],\n                [4, 34],\n                [5, 32],\n                [6, 44]\n            ],\n            forecastData: [\n                [7, 45],\n                [8, 50],\n                [9, 55]\n            ]\n        }],\n        lineoptions: {\n            series: {\n                lines: {\n                    show: true,\n                    lineWidth: 1,\n                    fill: true,\n                    fillColor: {\n                        colors: [{\n                            opacity: 0.1\n                        }, {\n                            opacity: 0.1\n                        }]\n                    }\n                },\n                shadowSize: 0,\n                highlightColor: [flotChartColors.chartColor],\n                forecastFillColor: [flotChartColors.chartForecast],\n                forecastColor: [flotChartColors.chartColor],\n                forecastDashStyle: [5]\n            },\n            xaxis: {\n                tickDecimals: 0\n            },\n            colors: [flotChartColors.chartColor],\n            grid: {\n                color: [flotChartColors.gridColor],\n                hoverable: true,\n                clickable: true,\n                tickColor: [flotChartColors.tickColor],\n                borderWidth: {\n                    "left": 1,\n                    "bottom": 1,\n                    "right": 0,\n                    "top": 0\n                },\n                borderColor: {\n                    "left": [flotChartColors.borderColor],\n                    "bottom": [flotChartColors.borderColor]\n                }\n            },\n            legend: {\n                show: false\n            },\n            tooltip: {\n                show: true,\n                shifts: {\n                    x: 0,\n                    y: -35\n                },\n                content: "x: %x, y: %y"\n            }\n        },\n        onPlotClick: function () {\n            //Code to be executed when plot is clicked.\n        },\n        onPlotHover: function () {\n            //Code to be executed when plot area is hovered.\n        }\n\n    };\n\n}'},2518:function(t,n){t.exports='<div class="flot-chart">\n  <flot dataset="lc.multiaxesChart.data" options="lc.multiaxesChart.options"\n      on-plot-click="lc.multiaxesChart.onPlotClick(event,pos,item)"\n      on-hover-click="lc.multiaxesChart.onPlotHover(event,pos,item)">\n  </flot>\n</div>'},2519:function(t,n){t.exports='angular.module(\'app\').controller(\'MultipleAxisLineChartCtrl\', MultipleAxisLineChartCtrl);\n\nMultipleAxisLineChartCtrl.$inject = [\'flotDataService\', \'$colorService\'];\n\nfunction MultipleAxisLineChartCtrl(flotDataService, $colorService) {\n\n    var lc = this;\n\n    var flotChartColors = {\n        chart1Color: $colorService.getColor(\'chart1\').toRgb(),\n        chart2Color: $colorService.getColor(\'chart2\').toRgb(),\n        gridColor: $colorService.getColor(\'grey4\').toHex(),\n        tickColor: $colorService.getColor(\'grey6\').toHex(),\n        borderColor: $colorService.getColor(\'grey2\').setAlpha(0.5).toRgba()\n    };\n\n    var d1 = [],\n        d2 = [],\n        d3 = [],\n        d4 = [],\n        d5 = [],\n        d6 = [];\n\n    for (var i = 1; i <= 10; i += 1) {\n        d1.push([i, parseInt(Math.random() * 10000)]);\n        d2.push([i, parseInt(Math.random() * 10000)]);\n        d3.push([i, parseInt(Math.random() * 10000)]);\n    }\n\n    for (i = 11; i <= 13; i += 1) {\n        d4.push([i, parseInt(Math.random() * 10000)]);\n        d5.push([i, parseInt(Math.random() * 10000)]);\n        d6.push([i, parseInt(Math.random() * 10000)]);\n    }\n\n    var oilprices = flotDataService.getOilPrices();\n\n    var exchangerates = flotDataService.getExchangeRates();\n\n    function euroFormatter(v, axis) {\n        return v.toFixed(axis.tickDecimals) + "€";\n    }\n\n    lc.multiaxesChart = {\n        data: [{\n            data: oilprices,\n            label: "Oil price ($)",\n            lines: {\n                show: true,\n                fill: true,\n                lineWidth: 1,\n                fillColor: {\n                    colors: [{\n                        opacity: 0.1\n                    }, {\n                        opacity: 0.1\n                    }]\n                }\n            },\n            shadowSize: 0,\n            highlightColor: [flotChartColors.chart1Color]\n        }, {\n            data: exchangerates,\n            label: "USD/EUR exchange rate",\n            yaxis: 2,\n            lines: {\n                show: true,\n                fill: true,\n                lineWidth: 1,\n                fillColor: {\n                    colors: [{\n                        opacity: 0.2\n                    }, {\n                        opacity: 0.2\n                    }]\n                }\n            },\n            shadowSize: 0,\n            highlightColor: [flotChartColors.chart2Color]\n        }],\n        options: {\n            xaxes: [{\n                mode: \'time\'\n            }],\n            yaxes: [{\n                min: 0\n            }, {\n                // align if we are to the right\n                position: "right",\n                alignTicksWithAxis: 1,\n                tickFormatter: euroFormatter\n            }],\n            legend: {\n                position: \'sw\'\n            },\n            colors: [flotChartColors.chart1Color, flotChartColors.chart2Color],\n            grid: {\n                color: [flotChartColors.gridColor],\n                clickable: true,\n                tickColor: [flotChartColors.tickColor],\n                borderWidth: {\n                    "bottom": 1,\n                    "left": 1,\n                    "top": 0,\n                    "right": 0\n                },\n                borderColor: {\n                    "bottom": [flotChartColors.borderColor],\n                    "left": [flotChartColors.borderColor]\n                },\n                hoverable: true //IMPORTANT! this is needed for tooltip to work,\n            },\n            tooltip: {\n                show: true,\n                shifts: {\n                    x: 0,\n                    y: -35\n                },\n                content: "%s for %x was %y",\n                xDateFormat: "%y-%0m-%0d"\n            }\n        }\n    };\n\n}'},2520:function(t,n){t.exports="export class FlotData {\n\n    static getOilPrices() {\n        return [\n            [1167692400000, 61.05],\n            [1167778800000, 58.32],\n            [1167865200000, 57.35],\n            [1167951600000, 56.31],\n            [1168210800000, 55.55],\n            [1168297200000, 55.64],\n            [1168383600000, 54.02],\n            [1168470000000, 51.88],\n            [1168556400000, 52.99],\n            [1168815600000, 52.99],\n            [1168902000000, 51.21],\n            [1168988400000, 52.24],\n            [1169074800000, 50.48],\n            [1169161200000, 51.99],\n            [1169420400000, 51.13],\n            [1169506800000, 55.04],\n            [1169593200000, 55.37],\n            [1169679600000, 54.23],\n            [1169766000000, 55.42],\n            [1170025200000, 54.01],\n            [1170111600000, 56.97],\n            [1170198000000, 58.14],\n            [1170284400000, 58.14],\n            [1170370800000, 59.02],\n            [1170630000000, 58.74],\n            [1170716400000, 58.88],\n            [1170802800000, 57.71],\n            [1170889200000, 59.71],\n            [1170975600000, 59.89],\n            [1171234800000, 57.81],\n            [1171321200000, 59.06],\n            [1171407600000, 58.00],\n            [1171494000000, 57.99],\n            [1171580400000, 59.39],\n            [1171839600000, 59.39],\n            [1171926000000, 58.07],\n            [1172012400000, 60.07],\n            [1172098800000, 61.14],\n            [1172444400000, 61.39],\n            [1172530800000, 61.46],\n            [1172617200000, 61.79],\n            [1172703600000, 62.00],\n            [1172790000000, 60.07],\n            [1173135600000, 60.69],\n            [1173222000000, 61.82],\n            [1173308400000, 60.05],\n            [1173654000000, 58.91],\n            [1173740400000, 57.93],\n            [1173826800000, 58.16],\n            [1173913200000, 57.55],\n            [1173999600000, 57.11],\n            [1174258800000, 56.59],\n            [1174345200000, 59.61],\n            [1174518000000, 61.69],\n            [1174604400000, 62.28],\n            [1174860000000, 62.91],\n            [1174946400000, 62.93],\n            [1175032800000, 64.03],\n            [1175119200000, 66.03],\n            [1175205600000, 65.87],\n            [1175464800000, 64.64],\n            [1175637600000, 64.38],\n            [1175724000000, 64.28],\n            [1175810400000, 64.28],\n            [1176069600000, 61.51],\n            [1176156000000, 61.89],\n            [1176242400000, 62.01],\n            [1176328800000, 63.85],\n            [1176415200000, 63.63],\n            [1176674400000, 63.61],\n            [1176760800000, 63.10],\n            [1176847200000, 63.13],\n            [1176933600000, 61.83],\n            [1177020000000, 63.38],\n            [1177279200000, 64.58],\n            [1177452000000, 65.84],\n            [1177538400000, 65.06],\n            [1177624800000, 66.46],\n            [1177884000000, 64.40],\n            [1178056800000, 63.68],\n            [1178143200000, 63.19],\n            [1178229600000, 61.93],\n            [1178488800000, 61.47],\n            [1178575200000, 61.55],\n            [1178748000000, 61.81],\n            [1178834400000, 62.37],\n            [1179093600000, 62.46],\n            [1179180000000, 63.17],\n            [1179266400000, 62.55],\n            [1179352800000, 64.94],\n            [1179698400000, 66.27],\n            [1179784800000, 65.50],\n            [1179871200000, 65.77],\n            [1179957600000, 64.18],\n            [1180044000000, 65.20],\n            [1180389600000, 63.15],\n            [1180476000000, 63.49],\n            [1180562400000, 65.08],\n            [1180908000000, 66.30],\n            [1180994400000, 65.96],\n            [1181167200000, 66.93],\n            [1181253600000, 65.98],\n            [1181599200000, 65.35],\n            [1181685600000, 66.26],\n            [1181858400000, 68.00],\n            [1182117600000, 69.09],\n            [1182204000000, 69.10],\n            [1182290400000, 68.19],\n            [1182376800000, 68.19],\n            [1182463200000, 69.14],\n            [1182722400000, 68.19],\n            [1182808800000, 67.77],\n            [1182895200000, 68.97],\n            [1182981600000, 69.57],\n            [1183068000000, 70.68],\n            [1183327200000, 71.09],\n            [1183413600000, 70.92],\n            [1183586400000, 71.81],\n            [1183672800000, 72.81],\n            [1183932000000, 72.19],\n            [1184018400000, 72.56],\n            [1184191200000, 72.50],\n            [1184277600000, 74.15],\n            [1184623200000, 75.05],\n            [1184796000000, 75.92],\n            [1184882400000, 75.57],\n            [1185141600000, 74.89],\n            [1185228000000, 73.56],\n            [1185314400000, 75.57],\n            [1185400800000, 74.95],\n            [1185487200000, 76.83],\n            [1185832800000, 78.21],\n            [1185919200000, 76.53],\n            [1186005600000, 76.86],\n            [1186092000000, 76.00],\n            [1186437600000, 71.59],\n            [1186696800000, 71.47],\n            [1186956000000, 71.62],\n            [1187042400000, 71.00],\n            [1187301600000, 71.98],\n            [1187560800000, 71.12],\n            [1187647200000, 69.47],\n            [1187733600000, 69.26],\n            [1187820000000, 69.83],\n            [1187906400000, 71.09],\n            [1188165600000, 71.73],\n            [1188338400000, 73.36],\n            [1188511200000, 74.04],\n            [1188856800000, 76.30],\n            [1189116000000, 77.49],\n            [1189461600000, 78.23],\n            [1189548000000, 79.91],\n            [1189634400000, 80.09],\n            [1189720800000, 79.10],\n            [1189980000000, 80.57],\n            [1190066400000, 81.93],\n            [1190239200000, 83.32],\n            [1190325600000, 81.62],\n            [1190584800000, 80.95],\n            [1190671200000, 79.53],\n            [1190757600000, 80.30],\n            [1190844000000, 82.88],\n            [1190930400000, 81.66],\n            [1191189600000, 80.24],\n            [1191276000000, 80.05],\n            [1191362400000, 79.94],\n            [1191448800000, 81.44],\n            [1191535200000, 81.22],\n            [1191794400000, 79.02],\n            [1191880800000, 80.26],\n            [1191967200000, 80.30],\n            [1192053600000, 83.08],\n            [1192140000000, 83.69],\n            [1192399200000, 86.13],\n            [1192485600000, 87.61],\n            [1192572000000, 87.40],\n            [1192658400000, 89.47],\n            [1192744800000, 88.60],\n            [1193004000000, 87.56],\n            [1193090400000, 87.56],\n            [1193176800000, 87.10],\n            [1193263200000, 91.86],\n            [1193612400000, 93.53],\n            [1193698800000, 94.53],\n            [1193871600000, 95.93],\n            [1194217200000, 93.98],\n            [1194303600000, 96.37],\n            [1194476400000, 95.46],\n            [1194562800000, 96.32],\n            [1195081200000, 93.43],\n            [1195167600000, 95.10],\n            [1195426800000, 94.64],\n            [1195513200000, 95.10],\n            [1196031600000, 97.70],\n            [1196118000000, 94.42],\n            [1196204400000, 90.62],\n            [1196290800000, 91.01],\n            [1196377200000, 88.71],\n            [1196636400000, 88.32],\n            [1196809200000, 90.23],\n            [1196982000000, 88.28],\n            [1197241200000, 87.86],\n            [1197327600000, 90.02],\n            [1197414000000, 92.25],\n            [1197586800000, 90.63],\n            [1197846000000, 90.63],\n            [1197932400000, 90.49],\n            [1198018800000, 91.24],\n            [1198105200000, 91.06],\n            [1198191600000, 90.49],\n            [1198710000000, 96.62],\n            [1198796400000, 96.00],\n            [1199142000000, 99.62],\n            [1199314800000, 99.18],\n            [1199401200000, 95.09],\n            [1199660400000, 96.33],\n            [1199833200000, 95.67],\n            [1200351600000, 91.90],\n            [1200438000000, 90.84],\n            [1200524400000, 90.13],\n            [1200610800000, 90.57],\n            [1200956400000, 89.21],\n            [1201042800000, 86.99],\n            [1201129200000, 89.85],\n            [1201474800000, 90.99],\n            [1201561200000, 91.64],\n            [1201647600000, 92.33],\n            [1201734000000, 91.75],\n            [1202079600000, 90.02],\n            [1202166000000, 88.41],\n            [1202252400000, 87.14],\n            [1202338800000, 88.11],\n            [1202425200000, 91.77],\n            [1202770800000, 92.78],\n            [1202857200000, 93.27],\n            [1202943600000, 95.46],\n            [1203030000000, 95.46],\n            [1203289200000, 101.74],\n            [1203462000000, 98.81],\n            [1203894000000, 100.88],\n            [1204066800000, 99.64],\n            [1204153200000, 102.59],\n            [1204239600000, 101.84],\n            [1204498800000, 99.52],\n            [1204585200000, 99.52],\n            [1204671600000, 104.52],\n            [1204758000000, 105.47],\n            [1204844400000, 105.15],\n            [1205103600000, 108.75],\n            [1205276400000, 109.92],\n            [1205362800000, 110.33],\n            [1205449200000, 110.21],\n            [1205708400000, 105.68],\n            [1205967600000, 101.84],\n            [1206313200000, 100.86],\n            [1206399600000, 101.22],\n            [1206486000000, 105.90],\n            [1206572400000, 107.58],\n            [1206658800000, 105.62],\n            [1206914400000, 101.58],\n            [1207000800000, 100.98],\n            [1207173600000, 103.83],\n            [1207260000000, 106.23],\n            [1207605600000, 108.50],\n            [1207778400000, 110.11],\n            [1207864800000, 110.14],\n            [1208210400000, 113.79],\n            [1208296800000, 114.93],\n            [1208383200000, 114.86],\n            [1208728800000, 117.48],\n            [1208815200000, 118.30],\n            [1208988000000, 116.06],\n            [1209074400000, 118.52],\n            [1209333600000, 118.75],\n            [1209420000000, 113.46],\n            [1209592800000, 112.52],\n            [1210024800000, 121.84],\n            [1210111200000, 123.53],\n            [1210197600000, 123.69],\n            [1210543200000, 124.23],\n            [1210629600000, 125.80],\n            [1210716000000, 126.29],\n            [1211148000000, 127.05],\n            [1211320800000, 129.07],\n            [1211493600000, 132.19],\n            [1211839200000, 128.85],\n            [1212357600000, 127.76],\n            [1212703200000, 138.54],\n            [1212962400000, 136.80],\n            [1213135200000, 136.38],\n            [1213308000000, 134.86],\n            [1213653600000, 134.01],\n            [1213740000000, 136.68],\n            [1213912800000, 135.65],\n            [1214172000000, 134.62],\n            [1214258400000, 134.62],\n            [1214344800000, 134.62],\n            [1214431200000, 139.64],\n            [1214517600000, 140.21],\n            [1214776800000, 140.00],\n            [1214863200000, 140.97],\n            [1214949600000, 143.57],\n            [1215036000000, 145.29],\n            [1215381600000, 141.37],\n            [1215468000000, 136.04],\n            [1215727200000, 146.40],\n            [1215986400000, 145.18],\n            [1216072800000, 138.74],\n            [1216159200000, 134.60],\n            [1216245600000, 129.29],\n            [1216332000000, 130.65],\n            [1216677600000, 127.95],\n            [1216850400000, 127.95],\n            [1217282400000, 122.19],\n            [1217455200000, 124.08],\n            [1217541600000, 125.10],\n            [1217800800000, 121.41],\n            [1217887200000, 119.17],\n            [1217973600000, 118.58],\n            [1218060000000, 120.02],\n            [1218405600000, 114.45],\n            [1218492000000, 113.01],\n            [1218578400000, 116.00],\n            [1218751200000, 113.77],\n            [1219010400000, 112.87],\n            [1219096800000, 114.53],\n            [1219269600000, 114.98],\n            [1219356000000, 114.98],\n            [1219701600000, 116.27],\n            [1219788000000, 118.15],\n            [1219874400000, 115.59],\n            [1219960800000, 115.46],\n            [1220306400000, 109.71],\n            [1220392800000, 109.35],\n            [1220565600000, 106.23],\n            [1220824800000, 106.34]\n        ];\n    }\n\n    static getExchangeRates() {\n        return [\n            [1167606000000, 0.7580],\n            [1167692400000, 0.7580],\n            [1167778800000, 0.75470],\n            [1167865200000, 0.75490],\n            [1167951600000, 0.76130],\n            [1168038000000, 0.76550],\n            [1168124400000, 0.76930],\n            [1168210800000, 0.76940],\n            [1168297200000, 0.76880],\n            [1168383600000, 0.76780],\n            [1168470000000, 0.77080],\n            [1168556400000, 0.77270],\n            [1168642800000, 0.77490],\n            [1168729200000, 0.77410],\n            [1168815600000, 0.77410],\n            [1168902000000, 0.77320],\n            [1168988400000, 0.77270],\n            [1169074800000, 0.77370],\n            [1169161200000, 0.77240],\n            [1169247600000, 0.77120],\n            [1169334000000, 0.7720],\n            [1169420400000, 0.77210],\n            [1169506800000, 0.77170],\n            [1169593200000, 0.77040],\n            [1169679600000, 0.7690],\n            [1169766000000, 0.77110],\n            [1169852400000, 0.7740],\n            [1169938800000, 0.77450],\n            [1170025200000, 0.77450],\n            [1170111600000, 0.7740],\n            [1170198000000, 0.77160],\n            [1170284400000, 0.77130],\n            [1170370800000, 0.76780],\n            [1170457200000, 0.76880],\n            [1170543600000, 0.77180],\n            [1170630000000, 0.77180],\n            [1170716400000, 0.77280],\n            [1170802800000, 0.77290],\n            [1170889200000, 0.76980],\n            [1170975600000, 0.76850],\n            [1171062000000, 0.76810],\n            [1171148400000, 0.7690],\n            [1171234800000, 0.7690],\n            [1171321200000, 0.76980],\n            [1171407600000, 0.76990],\n            [1171494000000, 0.76510],\n            [1171580400000, 0.76130],\n            [1171666800000, 0.76160],\n            [1171753200000, 0.76140],\n            [1171839600000, 0.76140],\n            [1171926000000, 0.76070],\n            [1172012400000, 0.76020],\n            [1172098800000, 0.76110],\n            [1172185200000, 0.76220],\n            [1172271600000, 0.76150],\n            [1172358000000, 0.75980],\n            [1172444400000, 0.75980],\n            [1172530800000, 0.75920],\n            [1172617200000, 0.75730],\n            [1172703600000, 0.75660],\n            [1172790000000, 0.75670],\n            [1172876400000, 0.75910],\n            [1172962800000, 0.75820],\n            [1173049200000, 0.75850],\n            [1173135600000, 0.76130],\n            [1173222000000, 0.76310],\n            [1173308400000, 0.76150],\n            [1173394800000, 0.760],\n            [1173481200000, 0.76130],\n            [1173567600000, 0.76270],\n            [1173654000000, 0.76270],\n            [1173740400000, 0.76080],\n            [1173826800000, 0.75830],\n            [1173913200000, 0.75750],\n            [1173999600000, 0.75620],\n            [1174086000000, 0.7520],\n            [1174172400000, 0.75120],\n            [1174258800000, 0.75120],\n            [1174345200000, 0.75170],\n            [1174431600000, 0.7520],\n            [1174518000000, 0.75110],\n            [1174604400000, 0.7480],\n            [1174690800000, 0.75090],\n            [1174777200000, 0.75310],\n            [1174860000000, 0.75310],\n            [1174946400000, 0.75270],\n            [1175032800000, 0.74980],\n            [1175119200000, 0.74930],\n            [1175205600000, 0.75040],\n            [1175292000000, 0.750],\n            [1175378400000, 0.74910],\n            [1175464800000, 0.74910],\n            [1175551200000, 0.74850],\n            [1175637600000, 0.74840],\n            [1175724000000, 0.74920],\n            [1175810400000, 0.74710],\n            [1175896800000, 0.74590],\n            [1175983200000, 0.74770],\n            [1176069600000, 0.74770],\n            [1176156000000, 0.74830],\n            [1176242400000, 0.74580],\n            [1176328800000, 0.74480],\n            [1176415200000, 0.7430],\n            [1176501600000, 0.73990],\n            [1176588000000, 0.73950],\n            [1176674400000, 0.73950],\n            [1176760800000, 0.73780],\n            [1176847200000, 0.73820],\n            [1176933600000, 0.73620],\n            [1177020000000, 0.73550],\n            [1177106400000, 0.73480],\n            [1177192800000, 0.73610],\n            [1177279200000, 0.73610],\n            [1177365600000, 0.73650],\n            [1177452000000, 0.73620],\n            [1177538400000, 0.73310],\n            [1177624800000, 0.73390],\n            [1177711200000, 0.73440],\n            [1177797600000, 0.73270],\n            [1177884000000, 0.73270],\n            [1177970400000, 0.73360],\n            [1178056800000, 0.73330],\n            [1178143200000, 0.73590],\n            [1178229600000, 0.73590],\n            [1178316000000, 0.73720],\n            [1178402400000, 0.7360],\n            [1178488800000, 0.7360],\n            [1178575200000, 0.7350],\n            [1178661600000, 0.73650],\n            [1178748000000, 0.73840],\n            [1178834400000, 0.73950],\n            [1178920800000, 0.74130],\n            [1179007200000, 0.73970],\n            [1179093600000, 0.73960],\n            [1179180000000, 0.73850],\n            [1179266400000, 0.73780],\n            [1179352800000, 0.73660],\n            [1179439200000, 0.740],\n            [1179525600000, 0.74110],\n            [1179612000000, 0.74060],\n            [1179698400000, 0.74050],\n            [1179784800000, 0.74140],\n            [1179871200000, 0.74310],\n            [1179957600000, 0.74310],\n            [1180044000000, 0.74380],\n            [1180130400000, 0.74430],\n            [1180216800000, 0.74430],\n            [1180303200000, 0.74430],\n            [1180389600000, 0.74340],\n            [1180476000000, 0.74290],\n            [1180562400000, 0.74420],\n            [1180648800000, 0.7440],\n            [1180735200000, 0.74390],\n            [1180821600000, 0.74370],\n            [1180908000000, 0.74370],\n            [1180994400000, 0.74290],\n            [1181080800000, 0.74030],\n            [1181167200000, 0.73990],\n            [1181253600000, 0.74180],\n            [1181340000000, 0.74680],\n            [1181426400000, 0.7480],\n            [1181512800000, 0.7480],\n            [1181599200000, 0.7490],\n            [1181685600000, 0.74940],\n            [1181772000000, 0.75220],\n            [1181858400000, 0.75150],\n            [1181944800000, 0.75020],\n            [1182031200000, 0.74720],\n            [1182117600000, 0.74720],\n            [1182204000000, 0.74620],\n            [1182290400000, 0.74550],\n            [1182376800000, 0.74490],\n            [1182463200000, 0.74670],\n            [1182549600000, 0.74580],\n            [1182636000000, 0.74270],\n            [1182722400000, 0.74270],\n            [1182808800000, 0.7430],\n            [1182895200000, 0.74290],\n            [1182981600000, 0.7440],\n            [1183068000000, 0.7430],\n            [1183154400000, 0.74220],\n            [1183240800000, 0.73880],\n            [1183327200000, 0.73880],\n            [1183413600000, 0.73690],\n            [1183500000000, 0.73450],\n            [1183586400000, 0.73450],\n            [1183672800000, 0.73450],\n            [1183759200000, 0.73520],\n            [1183845600000, 0.73410],\n            [1183932000000, 0.73410],\n            [1184018400000, 0.7340],\n            [1184104800000, 0.73240],\n            [1184191200000, 0.72720],\n            [1184277600000, 0.72640],\n            [1184364000000, 0.72550],\n            [1184450400000, 0.72580],\n            [1184536800000, 0.72580],\n            [1184623200000, 0.72560],\n            [1184709600000, 0.72570],\n            [1184796000000, 0.72470],\n            [1184882400000, 0.72430],\n            [1184968800000, 0.72440],\n            [1185055200000, 0.72350],\n            [1185141600000, 0.72350],\n            [1185228000000, 0.72350],\n            [1185314400000, 0.72350],\n            [1185400800000, 0.72620],\n            [1185487200000, 0.72880],\n            [1185573600000, 0.73010],\n            [1185660000000, 0.73370],\n            [1185746400000, 0.73370],\n            [1185832800000, 0.73240],\n            [1185919200000, 0.72970],\n            [1186005600000, 0.73170],\n            [1186092000000, 0.73150],\n            [1186178400000, 0.72880],\n            [1186264800000, 0.72630],\n            [1186351200000, 0.72630],\n            [1186437600000, 0.72420],\n            [1186524000000, 0.72530],\n            [1186610400000, 0.72640],\n            [1186696800000, 0.7270],\n            [1186783200000, 0.73120],\n            [1186869600000, 0.73050],\n            [1186956000000, 0.73050],\n            [1187042400000, 0.73180],\n            [1187128800000, 0.73580],\n            [1187215200000, 0.74090],\n            [1187301600000, 0.74540],\n            [1187388000000, 0.74370],\n            [1187474400000, 0.74240],\n            [1187560800000, 0.74240],\n            [1187647200000, 0.74150],\n            [1187733600000, 0.74190],\n            [1187820000000, 0.74140],\n            [1187906400000, 0.73770],\n            [1187992800000, 0.73550],\n            [1188079200000, 0.73150],\n            [1188165600000, 0.73150],\n            [1188252000000, 0.7320],\n            [1188338400000, 0.73320],\n            [1188424800000, 0.73460],\n            [1188511200000, 0.73280],\n            [1188597600000, 0.73230],\n            [1188684000000, 0.7340],\n            [1188770400000, 0.7340],\n            [1188856800000, 0.73360],\n            [1188943200000, 0.73510],\n            [1189029600000, 0.73460],\n            [1189116000000, 0.73210],\n            [1189202400000, 0.72940],\n            [1189288800000, 0.72660],\n            [1189375200000, 0.72660],\n            [1189461600000, 0.72540],\n            [1189548000000, 0.72420],\n            [1189634400000, 0.72130],\n            [1189720800000, 0.71970],\n            [1189807200000, 0.72090],\n            [1189893600000, 0.7210],\n            [1189980000000, 0.7210],\n            [1190066400000, 0.7210],\n            [1190152800000, 0.72090],\n            [1190239200000, 0.71590],\n            [1190325600000, 0.71330],\n            [1190412000000, 0.71050],\n            [1190498400000, 0.70990],\n            [1190584800000, 0.70990],\n            [1190671200000, 0.70930],\n            [1190757600000, 0.70930],\n            [1190844000000, 0.70760],\n            [1190930400000, 0.7070],\n            [1191016800000, 0.70490],\n            [1191103200000, 0.70120],\n            [1191189600000, 0.70110],\n            [1191276000000, 0.70190],\n            [1191362400000, 0.70460],\n            [1191448800000, 0.70630],\n            [1191535200000, 0.70890],\n            [1191621600000, 0.70770],\n            [1191708000000, 0.70770],\n            [1191794400000, 0.70770],\n            [1191880800000, 0.70910],\n            [1191967200000, 0.71180],\n            [1192053600000, 0.70790],\n            [1192140000000, 0.70530],\n            [1192226400000, 0.7050],\n            [1192312800000, 0.70550],\n            [1192399200000, 0.70550],\n            [1192485600000, 0.70450],\n            [1192572000000, 0.70510],\n            [1192658400000, 0.70510],\n            [1192744800000, 0.70170],\n            [1192831200000, 0.70],\n            [1192917600000, 0.69950],\n            [1193004000000, 0.69940],\n            [1193090400000, 0.70140],\n            [1193176800000, 0.70360],\n            [1193263200000, 0.70210],\n            [1193349600000, 0.70020],\n            [1193436000000, 0.69670],\n            [1193522400000, 0.6950],\n            [1193612400000, 0.6950],\n            [1193698800000, 0.69390],\n            [1193785200000, 0.6940],\n            [1193871600000, 0.69220],\n            [1193958000000, 0.69190],\n            [1194044400000, 0.69140],\n            [1194130800000, 0.68940],\n            [1194217200000, 0.68910],\n            [1194303600000, 0.69040],\n            [1194390000000, 0.6890],\n            [1194476400000, 0.68340],\n            [1194562800000, 0.68230],\n            [1194649200000, 0.68070],\n            [1194735600000, 0.68150],\n            [1194822000000, 0.68150],\n            [1194908400000, 0.68470],\n            [1194994800000, 0.68590],\n            [1195081200000, 0.68220],\n            [1195167600000, 0.68270],\n            [1195254000000, 0.68370],\n            [1195340400000, 0.68230],\n            [1195426800000, 0.68220],\n            [1195513200000, 0.68220],\n            [1195599600000, 0.67920],\n            [1195686000000, 0.67460],\n            [1195772400000, 0.67350],\n            [1195858800000, 0.67310],\n            [1195945200000, 0.67420],\n            [1196031600000, 0.67440],\n            [1196118000000, 0.67390],\n            [1196204400000, 0.67310],\n            [1196290800000, 0.67610],\n            [1196377200000, 0.67610],\n            [1196463600000, 0.67850],\n            [1196550000000, 0.68180],\n            [1196636400000, 0.68360],\n            [1196722800000, 0.68230],\n            [1196809200000, 0.68050],\n            [1196895600000, 0.67930],\n            [1196982000000, 0.68490],\n            [1197068400000, 0.68330],\n            [1197154800000, 0.68250],\n            [1197241200000, 0.68250],\n            [1197327600000, 0.68160],\n            [1197414000000, 0.67990],\n            [1197500400000, 0.68130],\n            [1197586800000, 0.68090],\n            [1197673200000, 0.68680],\n            [1197759600000, 0.69330],\n            [1197846000000, 0.69330],\n            [1197932400000, 0.69450],\n            [1198018800000, 0.69440],\n            [1198105200000, 0.69460],\n            [1198191600000, 0.69640],\n            [1198278000000, 0.69650],\n            [1198364400000, 0.69560],\n            [1198450800000, 0.69560],\n            [1198537200000, 0.6950],\n            [1198623600000, 0.69480],\n            [1198710000000, 0.69280],\n            [1198796400000, 0.68870],\n            [1198882800000, 0.68240],\n            [1198969200000, 0.67940],\n            [1199055600000, 0.67940],\n            [1199142000000, 0.68030],\n            [1199228400000, 0.68550],\n            [1199314800000, 0.68240],\n            [1199401200000, 0.67910],\n            [1199487600000, 0.67830],\n            [1199574000000, 0.67850],\n            [1199660400000, 0.67850],\n            [1199746800000, 0.67970],\n            [1199833200000, 0.680],\n            [1199919600000, 0.68030],\n            [1200006000000, 0.68050],\n            [1200092400000, 0.6760],\n            [1200178800000, 0.6770],\n            [1200265200000, 0.6770],\n            [1200351600000, 0.67360],\n            [1200438000000, 0.67260],\n            [1200524400000, 0.67640],\n            [1200610800000, 0.68210],\n            [1200697200000, 0.68310],\n            [1200783600000, 0.68420],\n            [1200870000000, 0.68420],\n            [1200956400000, 0.68870],\n            [1201042800000, 0.69030],\n            [1201129200000, 0.68480],\n            [1201215600000, 0.68240],\n            [1201302000000, 0.67880],\n            [1201388400000, 0.68140],\n            [1201474800000, 0.68140],\n            [1201561200000, 0.67970],\n            [1201647600000, 0.67690],\n            [1201734000000, 0.67650],\n            [1201820400000, 0.67330],\n            [1201906800000, 0.67290],\n            [1201993200000, 0.67580],\n            [1202079600000, 0.67580],\n            [1202166000000, 0.6750],\n            [1202252400000, 0.6780],\n            [1202338800000, 0.68330],\n            [1202425200000, 0.68560],\n            [1202511600000, 0.69030],\n            [1202598000000, 0.68960],\n            [1202684400000, 0.68960],\n            [1202770800000, 0.68820],\n            [1202857200000, 0.68790],\n            [1202943600000, 0.68620],\n            [1203030000000, 0.68520],\n            [1203116400000, 0.68230],\n            [1203202800000, 0.68130],\n            [1203289200000, 0.68130],\n            [1203375600000, 0.68220],\n            [1203462000000, 0.68020],\n            [1203548400000, 0.68020],\n            [1203634800000, 0.67840],\n            [1203721200000, 0.67480],\n            [1203807600000, 0.67470],\n            [1203894000000, 0.67470],\n            [1203980400000, 0.67480],\n            [1204066800000, 0.67330],\n            [1204153200000, 0.6650],\n            [1204239600000, 0.66110],\n            [1204326000000, 0.65830],\n            [1204412400000, 0.6590],\n            [1204498800000, 0.6590],\n            [1204585200000, 0.65810],\n            [1204671600000, 0.65780],\n            [1204758000000, 0.65740],\n            [1204844400000, 0.65320],\n            [1204930800000, 0.65020],\n            [1205017200000, 0.65140],\n            [1205103600000, 0.65140],\n            [1205190000000, 0.65070],\n            [1205276400000, 0.6510],\n            [1205362800000, 0.64890],\n            [1205449200000, 0.64240],\n            [1205535600000, 0.64060],\n            [1205622000000, 0.63820],\n            [1205708400000, 0.63820],\n            [1205794800000, 0.63410],\n            [1205881200000, 0.63440],\n            [1205967600000, 0.63780],\n            [1206054000000, 0.64390],\n            [1206140400000, 0.64780],\n            [1206226800000, 0.64810],\n            [1206313200000, 0.64810],\n            [1206399600000, 0.64940],\n            [1206486000000, 0.64380],\n            [1206572400000, 0.63770],\n            [1206658800000, 0.63290],\n            [1206745200000, 0.63360],\n            [1206831600000, 0.63330],\n            [1206914400000, 0.63330],\n            [1207000800000, 0.6330],\n            [1207087200000, 0.63710],\n            [1207173600000, 0.64030],\n            [1207260000000, 0.63960],\n            [1207346400000, 0.63640],\n            [1207432800000, 0.63560],\n            [1207519200000, 0.63560],\n            [1207605600000, 0.63680],\n            [1207692000000, 0.63570],\n            [1207778400000, 0.63540],\n            [1207864800000, 0.6320],\n            [1207951200000, 0.63320],\n            [1208037600000, 0.63280],\n            [1208124000000, 0.63310],\n            [1208210400000, 0.63420],\n            [1208296800000, 0.63210],\n            [1208383200000, 0.63020],\n            [1208469600000, 0.62780],\n            [1208556000000, 0.63080],\n            [1208642400000, 0.63240],\n            [1208728800000, 0.63240],\n            [1208815200000, 0.63070],\n            [1208901600000, 0.62770],\n            [1208988000000, 0.62690],\n            [1209074400000, 0.63350],\n            [1209160800000, 0.63920],\n            [1209247200000, 0.640],\n            [1209333600000, 0.64010],\n            [1209420000000, 0.63960],\n            [1209506400000, 0.64070],\n            [1209592800000, 0.64230],\n            [1209679200000, 0.64290],\n            [1209765600000, 0.64720],\n            [1209852000000, 0.64850],\n            [1209938400000, 0.64860],\n            [1210024800000, 0.64670],\n            [1210111200000, 0.64440],\n            [1210197600000, 0.64670],\n            [1210284000000, 0.65090],\n            [1210370400000, 0.64780],\n            [1210456800000, 0.64610],\n            [1210543200000, 0.64610],\n            [1210629600000, 0.64680],\n            [1210716000000, 0.64490],\n            [1210802400000, 0.6470],\n            [1210888800000, 0.64610],\n            [1210975200000, 0.64520],\n            [1211061600000, 0.64220],\n            [1211148000000, 0.64220],\n            [1211234400000, 0.64250],\n            [1211320800000, 0.64140],\n            [1211407200000, 0.63660],\n            [1211493600000, 0.63460],\n            [1211580000000, 0.6350],\n            [1211666400000, 0.63460],\n            [1211752800000, 0.63460],\n            [1211839200000, 0.63430],\n            [1211925600000, 0.63460],\n            [1212012000000, 0.63790],\n            [1212098400000, 0.64160],\n            [1212184800000, 0.64420],\n            [1212271200000, 0.64310],\n            [1212357600000, 0.64310],\n            [1212444000000, 0.64350],\n            [1212530400000, 0.6440],\n            [1212616800000, 0.64730],\n            [1212703200000, 0.64690],\n            [1212789600000, 0.63860],\n            [1212876000000, 0.63560],\n            [1212962400000, 0.6340],\n            [1213048800000, 0.63460],\n            [1213135200000, 0.6430],\n            [1213221600000, 0.64520],\n            [1213308000000, 0.64670],\n            [1213394400000, 0.65060],\n            [1213480800000, 0.65040],\n            [1213567200000, 0.65030],\n            [1213653600000, 0.64810],\n            [1213740000000, 0.64510],\n            [1213826400000, 0.6450],\n            [1213912800000, 0.64410],\n            [1213999200000, 0.64140],\n            [1214085600000, 0.64090],\n            [1214172000000, 0.64090],\n            [1214258400000, 0.64280],\n            [1214344800000, 0.64310],\n            [1214431200000, 0.64180],\n            [1214517600000, 0.63710],\n            [1214604000000, 0.63490],\n            [1214690400000, 0.63330],\n            [1214776800000, 0.63340],\n            [1214863200000, 0.63380],\n            [1214949600000, 0.63420],\n            [1215036000000, 0.6320],\n            [1215122400000, 0.63180],\n            [1215208800000, 0.6370],\n            [1215295200000, 0.63680],\n            [1215381600000, 0.63680],\n            [1215468000000, 0.63830],\n            [1215554400000, 0.63710],\n            [1215640800000, 0.63710],\n            [1215727200000, 0.63550],\n            [1215813600000, 0.6320],\n            [1215900000000, 0.62770],\n            [1215986400000, 0.62760],\n            [1216072800000, 0.62910],\n            [1216159200000, 0.62740],\n            [1216245600000, 0.62930],\n            [1216332000000, 0.63110],\n            [1216418400000, 0.6310],\n            [1216504800000, 0.63120],\n            [1216591200000, 0.63120],\n            [1216677600000, 0.63040],\n            [1216764000000, 0.62940],\n            [1216850400000, 0.63480],\n            [1216936800000, 0.63780],\n            [1217023200000, 0.63680],\n            [1217109600000, 0.63680],\n            [1217196000000, 0.63680],\n            [1217282400000, 0.6360],\n            [1217368800000, 0.6370],\n            [1217455200000, 0.64180],\n            [1217541600000, 0.64110],\n            [1217628000000, 0.64350],\n            [1217714400000, 0.64270],\n            [1217800800000, 0.64270],\n            [1217887200000, 0.64190],\n            [1217973600000, 0.64460],\n            [1218060000000, 0.64680],\n            [1218146400000, 0.64870],\n            [1218232800000, 0.65940],\n            [1218319200000, 0.66660],\n            [1218405600000, 0.66660],\n            [1218492000000, 0.66780],\n            [1218578400000, 0.67120],\n            [1218664800000, 0.67050],\n            [1218751200000, 0.67180],\n            [1218837600000, 0.67840],\n            [1218924000000, 0.68110],\n            [1219010400000, 0.68110],\n            [1219096800000, 0.67940],\n            [1219183200000, 0.68040],\n            [1219269600000, 0.67810],\n            [1219356000000, 0.67560],\n            [1219442400000, 0.67350],\n            [1219528800000, 0.67630],\n            [1219615200000, 0.67620],\n            [1219701600000, 0.67770],\n            [1219788000000, 0.68150],\n            [1219874400000, 0.68020],\n            [1219960800000, 0.6780],\n            [1220047200000, 0.67960],\n            [1220133600000, 0.68170],\n            [1220220000000, 0.68170],\n            [1220306400000, 0.68320],\n            [1220392800000, 0.68770],\n            [1220479200000, 0.69120],\n            [1220565600000, 0.69140],\n            [1220652000000, 0.70090],\n            [1220738400000, 0.70120],\n            [1220824800000, 0.7010],\n            [1220911200000, 0.70050]\n        ];\n    }\n}"},2521:function(t,n){t.exports='<span tabindex="1" class="sr-only">\n    <span ng-repeat="item in lc.lineChart.data[0].data">{{item[1]}},</span>\n</span>'},2522:function(t,n){t.exports='<div class="flot-chart-stack">\n    <flot dataset="lc.stackLineChart.data" options="lc.stackLineChart.stackoptions" on-plot-click="lc.stackLineChart.onPlotClick(event,pos,item)"\n        on-hover-click="lc.stackLineChart.onPlotHover(event,pos,item)"></flot>\n</div>'},2523:function(t,n){t.exports="angular.module(\"app\").controller(\"StackedLineChartCtrl\", StackedLineChartCtrl);\n\nStackedLineChartCtrl.$inject = ['$colorService'];\n\nfunction StackedLineChartCtrl($colorService) {\n\n    var lc = this;\n\n    var flotChartColors = {\n        chart1Color: $colorService.getColor('chart1').toRgb(),\n        chart2Color: $colorService.getColor('chart2').toRgb(),\n        chart3Color: $colorService.getColor('chart3').toRgb(),\n        chart1Fill: $colorService.getColor('chart1').setAlpha(0.2).toRgba(),\n        chart2Fill: $colorService.getColor('chart2').setAlpha(0.2).toRgba(),\n        chart3Fill: $colorService.getColor('chart3').setAlpha(0.2).toRgba(),\n        chart1Hover: $colorService.getColor('chart1').setAlpha(0.3).toRgba(),\n        chart2Hover: $colorService.getColor('chart2').setAlpha(0.3).toRgba(),\n        chart3Hover: $colorService.getColor('chart3').setAlpha(0.3).toRgba(),\n        chart1Forecast: $colorService.getColor('chart1').setAlpha(0.06).toRgba(),\n        chart2Forecast: $colorService.getColor('chart2').setAlpha(0.06).toRgba(),\n        chart3Forecast: $colorService.getColor('chart3').setAlpha(0.06).toRgba(),\n        gridColor: $colorService.getColor('grey4').toHex(),\n        tickColor: $colorService.getColor('grey6').toHex(),\n        borderColor: $colorService.getColor('grey2').setAlpha(0.5).toRgba(),\n    };\n\n    var d1 = [],\n        d2 = [],\n        d3 = [],\n        d4 = [],\n        d5 = [],\n        d6 = [];\n\n    for (var i = 1; i <= 10; i += 1) {\n        d1.push([i, parseInt(Math.random() * 10000)]);\n        d2.push([i, parseInt(Math.random() * 10000)]);\n        d3.push([i, parseInt(Math.random() * 10000)]);\n    }\n\n    for (i = 11; i <= 13; i += 1) {\n        d4.push([i, parseInt(Math.random() * 10000)]);\n        d5.push([i, parseInt(Math.random() * 10000)]);\n        d6.push([i, parseInt(Math.random() * 10000)]);\n    }\n\n    function euroFormatter(v, axis) {\n        return v.toFixed(axis.tickDecimals) + \"€\";\n    }\n\n    lc.stackLineChart = {\n        data: [{\n            label: \"Sales 1\",\n            data: d1,\n            color: [flotChartColors.chart1Color],\n            fillColor: flotChartColors.chart1Fill,\n            highlightColor: [flotChartColors.chart1Hover],\n            shadowSize: 0,\n            forecastData: d4,\n            forecastFillColor: [flotChartColors.chart1Forecast],\n            forecastColor: [flotChartColors.chart1Color],\n            forecastHighLightColor: [flotChartColors.chart1Hover]\n        }, {\n            label: \"Sales 2\",\n            data: d2,\n            color: [flotChartColors.chart2Color],\n            fillColor: flotChartColors.chart2Fill,\n            highlightColor: [flotChartColors.chart2Hover],\n            shadowSize: 0,\n            forecastData: d5,\n            forecastFillColor: [flotChartColors.chart2Forecast],\n            forecastColor: [flotChartColors.chart2Color],\n            forecastDashStyle: [5],\n            forecastHighLightColor: [flotChartColors.chart2Hover]\n        }, {\n            label: \"Sales 3\",\n            data: d3,\n            color: [flotChartColors.chart3Color],\n            fillColor: [flotChartColors.chart3Fill],\n            highlightColor: [flotChartColors.chart3Hover],\n            shadowSize: 0,\n            forecastData: d6,\n            forecastFillColor: [flotChartColors.chart3Forecast],\n            forecastColor: [flotChartColors.chart3Color],\n            forecastDashStyle: [5],\n            forecastHighLightColor: [flotChartColors.chart3Hover]\n        }],\n        stackoptions: {\n            series: {\n                stack: true,\n                lines: {\n                    show: true,\n                    fill: true\n                }\n            },\n            yaxis: {\n                tickFormatter: euroFormatter\n            },\n            xaxis: {\n                tickDecimals: 0\n            },\n            grid: {\n                color: [flotChartColors.gridColor],\n                hoverable: true,\n                clickable: true,\n                tickcolor: [flotChartColors.tickColor],\n                borderWidth: {\n                    \"left\": 1,\n                    \"bottom\": 1,\n                    \"right\": 0,\n                    \"top\": 0\n                },\n                borderColor: {\n                    \"left\": [flotChartColors.borderColor],\n                    \"bottom\": [flotChartColors.borderColor]\n                }\n            },\n            legend: {\n                show: true,\n                container: \"#legendHolderLine\",\n                noColumns: 0\n            },\n            tooltip: {\n                show: true,\n                shifts: {\n                    x: 0,\n                    y: -35\n                },\n                content: \"%s - %y in cycle %x\"\n            }\n        }\n    };\n\n}"},2524:function(t,n){t.exports="#legendHolderLine {\n    margin-left: 33%;\n}\n\n#legendHolderLine .legendLabel {\n    padding-right:40px;\n    font-size:16px;\n    padding-left: 6px;\n}\n\n#legendHolderLine .legendColorBox > div {\n    border: 0px !important;\n}\n\n#legendHolderLine .legendColorBox > div > div {\n    opacity: 1;\n}"},2525:function(t,n){t.exports='<div class="flot-chart-stack">\n    ...\n</div>\n<div id="legendHolderLine" class="p-l-lg"></div>'},2526:function(t,n){t.exports=' ...\nlegend: {\n    show: true,\n    container:"#legendHolderLine",\n    noColumns: 0\n},\n...'},3133:function(t,n,e){var o=e(2131);t.exports="string"==typeof o?o:o.toString()}});
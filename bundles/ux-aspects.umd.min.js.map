{"version":3,"file":"ux-aspects.umd.min.js","sources":["../../../../node_modules/.tmp/utils/facade/browser.ts","../../../../node_modules/.tmp/utils/theme-provider.ts","../../../../node_modules/.tmp/tooltip/tooltip-container.component.ts","../../../../node_modules/.tmp/utils/trigger.class.ts","../../../../node_modules/.tmp/utils/triggers.ts","../../../../node_modules/.tmp/component-loader/content-ref.class.ts","../../../../node_modules/.tmp/component-loader/component-loader.class.ts","../../../../node_modules/.tmp/positioning/ng-positioning.ts","../../../../node_modules/.tmp/positioning/positioning.service.ts","../../../../node_modules/.tmp/component-loader/component-loader.factory.ts","../../../../node_modules/.tmp/utils/warn-once.ts","../../../../node_modules/.tmp/tooltip/tooltip.directive.ts","../../../../node_modules/.tmp/utils/decorators.ts","../../../../node_modules/.tmp/tooltip/tooltip.module.ts","../../../../node_modules/.tmp/typeahead/latin-map.ts","../../../../node_modules/.tmp/typeahead/typeahead-match.class.ts","../../../../node_modules/.tmp/typeahead/typeahead-utils.ts","../../../../node_modules/.tmp/utils/utils.class.ts","../../../../node_modules/.tmp/typeahead/typeahead-container.component.ts","../../../../node_modules/.tmp/typeahead/typeahead.directive.ts","../../../../node_modules/.tmp/typeahead/typeahead.module.ts","~/@ux-aspects/ux-aspects/components/facets/facet-events.ts","~/@ux-aspects/ux-aspects/components/facets/facet-container.component.ts","~/@ux-aspects/ux-aspects/components/facets/base/facet-base/facet-base.component.ts","~/@ux-aspects/ux-aspects/components/facets/base/facet-header/facet-header.component.ts","~/@ux-aspects/ux-aspects/components/facets/facet-check-list/facet-check-list.component.ts","~/@ux-aspects/ux-aspects/components/facets/facet-typeahead-list/facet-typeahead-list.component.ts","~/@ux-aspects/ux-aspects/components/facets/facets.module.ts","~/@ux-aspects/ux-aspects/components/facets/models/facet.ts","../../../../node_modules/.tmp/dropdown/bs-dropdown.config.ts","../../../../node_modules/.tmp/dropdown/bs-dropdown.state.ts","../../../../node_modules/.tmp/dropdown/bs-dropdown-container.component.ts","../../../../node_modules/.tmp/dropdown/bs-dropdown.directive.ts","../../../../node_modules/.tmp/dropdown/bs-dropdown-menu.directive.ts","../../../../node_modules/.tmp/dropdown/bs-dropdown-toggle.directive.ts","../../../../node_modules/.tmp/dropdown/bs-dropdown.module.ts","~/@ux-aspects/ux-aspects/components/filters/filter-container.component.ts","~/@ux-aspects/ux-aspects/components/filters/filter-base/filter-base.component.ts","~/@ux-aspects/ux-aspects/components/filters/filter-dynamic/filter-dynamic.component.ts","~/@ux-aspects/ux-aspects/components/filters/filter-dropdown/filter-dropdown.component.ts","~/@ux-aspects/ux-aspects/components/filters/filter.module.ts","~/@ux-aspects/ux-aspects/components/flippable-card/flippable-card.component.ts","~/@ux-aspects/ux-aspects/components/flippable-card/flippable-card.module.ts","~/@ux-aspects/ux-aspects/components/item-display-panel/item-display-panel.component.ts","~/@ux-aspects/ux-aspects/components/item-display-panel/item-display-panel.module.ts","~/@ux-aspects/ux-aspects/components/number-picker/number-picker.component.ts","~/@ux-aspects/ux-aspects/components/number-picker/number-picker.module.ts","~/@ux-aspects/ux-aspects/components/page-header/custom-menu/custom-menu.directive.ts","~/@ux-aspects/ux-aspects/components/page-header/page-header.component.ts","~/@ux-aspects/ux-aspects/components/page-header/icon-menu/icon-menu.component.ts","~/@ux-aspects/ux-aspects/components/page-header/navigation/navigation-dropdown-item/navigation-dropdown-item.component.ts","~/@ux-aspects/ux-aspects/components/page-header/navigation/navigation-item/navigation-item.component.ts","~/@ux-aspects/ux-aspects/components/page-header/navigation/navigation.component.ts","~/@ux-aspects/ux-aspects/components/page-header/page-header.module.ts","~/@ux-aspects/ux-aspects/services/color/color.service.ts","~/@ux-aspects/ux-aspects/services/color/color.module.ts","~/@ux-aspects/ux-aspects/components/progress-bar/progress-bar.component.ts","~/@ux-aspects/ux-aspects/components/progress-bar/progress-bar.module.ts","~/@ux-aspects/ux-aspects/components/radiobutton/radiobutton.component.ts","~/@ux-aspects/ux-aspects/components/radiobutton/radiobutton.module.ts","~/@ux-aspects/ux-aspects/components/search-builder/search-builder.service.ts","~/@ux-aspects/ux-aspects/components/search-builder/search-builder-group/search-builder-group.service.ts","~/@ux-aspects/ux-aspects/components/search-builder/search-builder-group/search-builder-group.component.ts","~/@ux-aspects/ux-aspects/components/search-builder/search-builder-outlet/search-builder-outlet.directive.ts","~/@ux-aspects/ux-aspects/components/search-builder/search-components/base-search.component.ts","~/@ux-aspects/ux-aspects/components/search-builder/search-components/text/text.component.ts","~/@ux-aspects/ux-aspects/components/search-builder/search-components/date/date.component.ts","~/@ux-aspects/ux-aspects/components/search-builder/search-components/date-range/date-range.component.ts","~/@ux-aspects/ux-aspects/components/search-builder/search-components/select/select.component.ts","~/@ux-aspects/ux-aspects/components/search-builder/search-builder.component.ts","../../../../node_modules/.tmp/popover/popover.config.ts","../../../../node_modules/.tmp/popover/popover-container.component.ts","../../../../node_modules/.tmp/popover/popover.directive.ts","../../../../node_modules/.tmp/popover/popover.module.ts","~/@ux-aspects/ux-aspects/components/typeahead/typeahead-event.ts","~/@ux-aspects/ux-aspects/components/typeahead/typeahead-key.service.ts","~/@ux-aspects/ux-aspects/components/typeahead/typeahead.component.ts","~/@ux-aspects/ux-aspects/directives/infinite-scroll/infinite-scroll-load-button.directive.ts","~/@ux-aspects/ux-aspects/directives/infinite-scroll/infinite-scroll-loading.directive.ts","~/@ux-aspects/ux-aspects/directives/infinite-scroll/infinite-scroll.directive.ts","~/@ux-aspects/ux-aspects/directives/infinite-scroll/infinite-scroll.module.ts","~/@ux-aspects/ux-aspects/directives/scroll-into-view-if/scroll-into-view.service.ts","~/@ux-aspects/ux-aspects/directives/scroll-into-view-if/scroll-into-view-if.directive.ts","~/@ux-aspects/ux-aspects/directives/scroll-into-view-if/scroll-into-view-if.module.ts","~/@ux-aspects/ux-aspects/components/typeahead/typeahead.module.ts","~/@ux-aspects/ux-aspects/components/select/select.component.ts","~/@ux-aspects/ux-aspects/components/tag-input/tag-input-event.ts","~/@ux-aspects/ux-aspects/components/tag-input/tag-input.component.ts","~/@ux-aspects/ux-aspects/directives/focus-if/focus-if.directive.ts","~/@ux-aspects/ux-aspects/directives/focus-if/focus-if.module.ts","~/@ux-aspects/ux-aspects/components/tag-input/tag-input.module.ts","~/@ux-aspects/ux-aspects/components/select/select.module.ts","~/@ux-aspects/ux-aspects/components/search-builder/search-builder.module.ts","~/@ux-aspects/ux-aspects/components/slider/slider.component.ts","~/@ux-aspects/ux-aspects/components/slider/slider.module.ts","~/@ux-aspects/ux-aspects/components/spark/spark.component.ts","~/@ux-aspects/ux-aspects/components/spark/spark.module.ts","~/@ux-aspects/ux-aspects/components/toggleswitch/toggleswitch.component.ts","~/@ux-aspects/ux-aspects/components/toggleswitch/toggleswitch.module.ts","~/@ux-aspects/ux-aspects/services/frame-extraction/frame-extraction.service.ts","~/@ux-aspects/ux-aspects/services/frame-extraction/frame-extraction.module.ts","~/@ux-aspects/ux-aspects/components/media-player/media-player.service.ts","~/@ux-aspects/ux-aspects/services/audio/audio.service.ts","~/@ux-aspects/ux-aspects/services/audio/audio.module.ts","~/@ux-aspects/ux-aspects/components/media-player/media-player.component.ts","~/@ux-aspects/ux-aspects/components/media-player/extensions/base-extension.directive.ts","~/@ux-aspects/ux-aspects/components/media-player/extensions/timeline/timeline.component.ts","~/@ux-aspects/ux-aspects/components/media-player/extensions/controls/controls.component.ts","~/@ux-aspects/ux-aspects/pipes/duration/duration.pipe.ts","~/@ux-aspects/ux-aspects/pipes/duration/duration.module.ts","~/@ux-aspects/ux-aspects/pipes/file-size/file-size.pipe.ts","~/@ux-aspects/ux-aspects/pipes/file-size/file-size.module.ts","~/@ux-aspects/ux-aspects/components/media-player/media-player.module.ts","~/@ux-aspects/ux-aspects/components/virtual-scroll/directives/virtual-scroll-loading.directive.ts","~/@ux-aspects/ux-aspects/components/virtual-scroll/directives/virtual-scroll-load-button.directive.ts","~/@ux-aspects/ux-aspects/components/virtual-scroll/directives/virtual-scroll-cell.directive.ts","~/@ux-aspects/ux-aspects/components/virtual-scroll/virtual-scroll.component.ts","~/@ux-aspects/ux-aspects/components/virtual-scroll/virtual-scroll.module.ts","~/@ux-aspects/ux-aspects/components/wizard/wizard-step.component.ts","~/@ux-aspects/ux-aspects/components/wizard/wizard.component.ts","~/@ux-aspects/ux-aspects/components/wizard/wizard.module.ts","~/@ux-aspects/ux-aspects/directives/fixed-header-table/fixed-header-table.directive.ts","~/@ux-aspects/ux-aspects/directives/fixed-header-table/fixed-header-table.module.ts","~/@ux-aspects/ux-aspects/directives/help-center/help-center.service.ts","~/@ux-aspects/ux-aspects/directives/help-center/help-center-item.directive.ts","~/@ux-aspects/ux-aspects/directives/help-center/help-center.module.ts","~/@ux-aspects/ux-aspects/directives/hover-action/hover-action.service.ts","~/@ux-aspects/ux-aspects/directives/hover-action/hover-action-container.directive.ts","~/@ux-aspects/ux-aspects/directives/hover-action/hover-action.directive.ts","~/@ux-aspects/ux-aspects/directives/hover-action/hover-action.module.ts","~/@ux-aspects/ux-aspects/directives/layout-switcher/layout-switcher-item.directive.ts","~/@ux-aspects/ux-aspects/directives/layout-switcher/layout-switcher.directive.ts","~/@ux-aspects/ux-aspects/directives/layout-switcher/layout-switcher.module.ts","~/@ux-aspects/ux-aspects/pipes/string-filter/string-filter.pipe.ts","~/@ux-aspects/ux-aspects/pipes/string-filter/string-filter.module.ts","~/@ux-aspects/ux-aspects/services/persistent-data/adapters/cookie-adapter.ts","~/@ux-aspects/ux-aspects/services/persistent-data/adapters/local-storage-adapter.ts","~/@ux-aspects/ux-aspects/services/persistent-data/adapters/session-storage-adapter.ts","~/@ux-aspects/ux-aspects/services/persistent-data/persistent-data.service.ts","~/@ux-aspects/ux-aspects/services/persistent-data/persistent-data.module.ts","~/@ux-aspects/ux-aspects/services/persistent-data/adapters/storage-adapter.ts","~/@ux-aspects/ux-aspects/components/breadcrumbs/breadcrumbs.component.ts","~/@ux-aspects/ux-aspects/components/breadcrumbs/breadcrumbs.module.ts","~/@ux-aspects/ux-aspects/components/checkbox/checkbox.component.ts","~/@ux-aspects/ux-aspects/components/checkbox/checkbox.module.ts","~/@ux-aspects/ux-aspects/components/column-sorting/column-sorting.component.ts","~/@ux-aspects/ux-aspects/components/column-sorting/column-sorting.directive.ts","~/@ux-aspects/ux-aspects/components/column-sorting/column-sorting.module.ts","~/@ux-aspects/ux-aspects/components/dashboard/dashboard.service.ts","~/@ux-aspects/ux-aspects/components/dashboard/dashboard.component.ts","~/@ux-aspects/ux-aspects/components/dashboard/widget/dashboard-widget.component.ts","~/@ux-aspects/ux-aspects/components/dashboard/drag-handle/drag-handle.directive.ts","~/@ux-aspects/ux-aspects/directives/resize/resize.service.ts","~/@ux-aspects/ux-aspects/directives/resize/resize.directive.ts","~/@ux-aspects/ux-aspects/directives/resize/resize.module.ts","~/@ux-aspects/ux-aspects/components/dashboard/dashboard.module.ts","../../../../node_modules/.tmp/timepicker/reducer/timepicker.actions.ts","../../../../node_modules/.tmp/timepicker/timepicker.utils.ts","../../../../node_modules/.tmp/timepicker/timepicker-controls.util.ts","../../../../node_modules/.tmp/timepicker/timepicker.config.ts","../../../../node_modules/.tmp/timepicker/reducer/timepicker.reducer.ts","../../../../node_modules/.tmp/mini-ngrx/store.class.ts","../../../../node_modules/src/util/root.ts","../../../../node_modules/src/util/isArray.ts","../../../../node_modules/src/util/isObject.ts","../../../../node_modules/src/util/isFunction.ts","../../../../node_modules/src/util/tryCatch.ts","../../../../node_modules/src/util/errorObject.ts","../../../../node_modules/src/util/UnsubscriptionError.ts","../../../../node_modules/src/Subscription.ts","../../../../node_modules/src/scheduler/Action.ts","../../../../node_modules/src/scheduler/AsyncAction.ts","../../../../node_modules/src/scheduler/QueueAction.ts","../../../../node_modules/src/Scheduler.ts","../../../../node_modules/src/scheduler/AsyncScheduler.ts","../../../../node_modules/src/scheduler/queue.ts","../../../../node_modules/src/scheduler/QueueScheduler.ts","../../../../node_modules/.tmp/mini-ngrx/state.class.ts","../../../../node_modules/.tmp/timepicker/reducer/timepicker.store.ts","../../../../node_modules/.tmp/timepicker/timepicker.component.ts","../../../../node_modules/.tmp/timepicker/timepicker.module.ts","../../../../node_modules/.tmp/buttons/button-checkbox.directive.ts","../../../../node_modules/.tmp/buttons/button-radio.directive.ts","../../../../node_modules/.tmp/buttons/buttons.module.ts","~/@ux-aspects/ux-aspects/components/date-time-picker/date-time-picker.utils.ts","~/@ux-aspects/ux-aspects/components/date-time-picker/date-time-picker.config.ts","~/@ux-aspects/ux-aspects/components/date-time-picker/date-time-picker.service.ts","~/@ux-aspects/ux-aspects/components/date-time-picker/date-time-picker.component.ts","~/@ux-aspects/ux-aspects/components/date-time-picker/day-view/day-view.component.ts","~/@ux-aspects/ux-aspects/components/date-time-picker/month-view/month-view.component.ts","~/@ux-aspects/ux-aspects/components/date-time-picker/year-view/year-view.component.ts","~/@ux-aspects/ux-aspects/components/date-time-picker/header/header.component.ts","~/@ux-aspects/ux-aspects/components/date-time-picker/time-view/time-view.component.ts","~/@ux-aspects/ux-aspects/components/date-time-picker/date-time-picker.module.ts","~/@ux-aspects/ux-aspects/components/ebox/ebox.component.ts","~/@ux-aspects/ux-aspects/components/ebox/ebox.module.ts","../../../../node_modules/.tmp/tooltip/tooltip.config.ts"],"sourcesContent":["/*tslint:disable */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * JS version of browser APIs. This library can only run in the browser.\n */\nvar win = (typeof window !== 'undefined' && window) || <any>{};\n\nexport { win as window };\nexport var document = win.document;\nexport var location = win.location;\nexport var gc = win['gc'] ? () => win['gc']() : (): any => null;\nexport var performance = win['performance'] ? win['performance'] : null;\nexport const Event = win['Event'];\nexport const MouseEvent = win['MouseEvent'];\nexport const KeyboardEvent = win['KeyboardEvent'];\nexport const EventTarget = win['EventTarget'];\nexport const History = win['History'];\nexport const Location = win['Location'];\nexport const EventListener = win['EventListener'];\n","import { window } from './facade/browser';\n\nlet guessedVersion: 'bs3' | 'bs4';\n\nfunction _guessBsVersion(): 'bs3' | 'bs4' {\n  if (typeof document === 'undefined') {\n    return null;\n  }\n  const spanEl = document.createElement('span');\n  spanEl.innerText = 'test bs version';\n  document.body.appendChild(spanEl);\n  spanEl.classList.add('d-none');\n  const rect = spanEl.getBoundingClientRect();\n  document.body.removeChild(spanEl);\n  if (!rect) {\n    return 'bs3';\n  }\n\n  return rect.top === 0 ? 'bs4' : 'bs3';\n}\n\nexport function setTheme(theme: 'bs3' | 'bs4'): void {\n  guessedVersion = theme;\n}\n\n// todo: in ngx-bootstrap, bs4 will became a default one\nexport function isBs3(): boolean {\n  if (typeof window === 'undefined') {\n    return true;\n  }\n\n  if (typeof window.__theme === 'undefined') {\n    if (guessedVersion) {\n      return guessedVersion === 'bs3';\n    }\n    guessedVersion = _guessBsVersion();\n\n    return guessedVersion === 'bs3';\n  }\n\n  return window.__theme !== 'bs4';\n}\n","import {\n  AfterViewInit,\n  Component,\n  ChangeDetectionStrategy\n} from '@angular/core';\nimport { TooltipConfig } from './tooltip.config';\nimport { isBs3 } from '../utils/theme-provider';\n\n\nexport class TooltipContainerComponent implements AfterViewInit {\n  classMap: any;\n  placement: string;\n  containerClass: string;\n  animation: boolean;\n\n  get isBs3(): boolean {\n    return isBs3();\n  }\n\n  constructor(config: TooltipConfig) {\n    Object.assign(this, config);\n  }\n\n  ngAfterViewInit(): void {\n    this.classMap = { in: false, fade: false };\n    this.classMap[this.placement] = true;\n    this.classMap[`tooltip-${this.placement}`] = true;\n\n    this.classMap.in = true;\n    if (this.animation) {\n      this.classMap.fade = true;\n    }\n\n    if (this.containerClass) {\n      this.classMap[this.containerClass] = true;\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'bs-tooltip-container',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  // tslint:disable-next-line\n  host: {\n    '[class]':\n      '\"tooltip in tooltip-\" + placement + \" \" + \"bs-tooltip-\" + placement + \" \" + placement + \" \" + containerClass',\n    '[class.show]': '!isBs3',\n    role: 'tooltip'\n  },\n  styles: [\n    `\n    :host.tooltip {\n      display: block;\n    }\n    :host.bs-tooltip-top .arrow, :host.bs-tooltip-bottom .arrow {\n      left: calc(50% - 2.5px);\n    }\n    :host.bs-tooltip-left .arrow, :host.bs-tooltip-right .arrow {\n      top: calc(50% - 2.5px);\n    }\n  `\n  ],\n  template: `\n    <div class=\"tooltip-arrow arrow\"></div>\n    <div class=\"tooltip-inner\"><ng-content></ng-content></div>\n    `\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: TooltipConfig, },\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @copyright Valor Software\n * @copyright Angular ng-bootstrap team\n */\n\nexport class Trigger {\n  open: string;\n  close?: string;\n\n  constructor(open: string, close?: string) {\n    this.open = open;\n    this.close = close || open;\n  }\n\n  isManual(): boolean {\n    return this.open === 'manual' || this.close === 'manual';\n  }\n}\n","/**\n * @copyright Valor Software\n * @copyright Angular ng-bootstrap team\n */\nimport { Renderer2 } from '@angular/core';\nimport { Trigger } from './trigger.class';\nimport {\n  BsEventCallback, ListenOptions\n} from '../component-loader/listen-options.model';\n\nconst DEFAULT_ALIASES = {\n  hover: ['mouseover', 'mouseout'],\n  focus: ['focusin', 'focusout']\n};\n\nexport function parseTriggers(triggers: string, aliases: any = DEFAULT_ALIASES): Trigger[] {\n  const trimmedTriggers = (triggers || '').trim();\n\n  if (trimmedTriggers.length === 0) {\n    return [];\n  }\n\n  const parsedTriggers = trimmedTriggers\n    .split(/\\s+/)\n    .map((trigger: string) => trigger.split(':'))\n    .map((triggerPair: string[]) => {\n      const alias = aliases[triggerPair[0]] || triggerPair;\n\n      return new Trigger(alias[0], alias[1]);\n    });\n\n  const manualTriggers = parsedTriggers.filter((triggerPair: Trigger) =>\n    triggerPair.isManual()\n  );\n\n  if (manualTriggers.length > 1) {\n    throw new Error('Triggers parse error: only one manual trigger is allowed');\n  }\n\n  if (manualTriggers.length === 1 && parsedTriggers.length > 1) {\n    throw new Error('Triggers parse error: manual trigger can\\'t be mixed with other triggers');\n  }\n\n  return parsedTriggers;\n}\n\nexport function listenToTriggers(renderer: Renderer2,\n                                 target: any,\n                                 triggers: string,\n                                 showFn: BsEventCallback,\n                                 hideFn: BsEventCallback,\n                                 toggleFn: BsEventCallback): Function {\n  const parsedTriggers = parseTriggers(triggers);\n  const listeners: any[] = [];\n\n  if (parsedTriggers.length === 1 && parsedTriggers[0].isManual()) {\n    return Function.prototype;\n  }\n\n  parsedTriggers.forEach((trigger: Trigger) => {\n    if (trigger.open === trigger.close) {\n      listeners.push(renderer.listen(target, trigger.open, toggleFn));\n\n      return;\n    }\n\n    listeners.push(\n      renderer.listen(target, trigger.open, showFn),\n      renderer.listen(target, trigger.close, hideFn)\n    );\n  });\n\n  return () => {\n    listeners.forEach((unsubscribeFn: Function) => unsubscribeFn());\n  };\n}\n\nexport function listenToTriggersV2(renderer: Renderer2,\n                                   options: ListenOptions): Function {\n  const parsedTriggers = parseTriggers(options.triggers);\n  const target = options.target;\n  // do nothing\n  if (parsedTriggers.length === 1 && parsedTriggers[0].isManual()) {\n    return Function.prototype;\n  }\n\n  // all listeners\n  const listeners: any[] = [];\n\n  // lazy listeners registration\n  const _registerHide: Function[] = [];\n  const registerHide = () => {\n    // add hide listeners to unregister array\n    _registerHide.forEach((fn: Function) => listeners.push(fn()));\n    // register hide events only once\n    _registerHide.length = 0;\n  };\n\n  // register open\\close\\toggle listeners\n  parsedTriggers.forEach((trigger: Trigger) => {\n    const useToggle = trigger.open === trigger.close;\n    const showFn = useToggle ? options.toggle : options.show;\n\n    if (!useToggle) {\n      _registerHide.push(() =>\n        renderer.listen(target, trigger.close, options.hide)\n      );\n    }\n\n    listeners.push(\n      renderer.listen(target, trigger.open, () => showFn(registerHide))\n    );\n  });\n\n  return () => {\n    listeners.forEach((unsubscribeFn: Function) => unsubscribeFn());\n  };\n}\n\nexport function registerOutsideClick(renderer: Renderer2,\n                                     options: ListenOptions) {\n  if (!options.outsideClick) {\n    return Function.prototype;\n  }\n\n  return renderer.listen('document', 'click', (event: any) => {\n    if (options.target && options.target.contains(event.target)) {\n      return;\n    }\n    if (\n      options.targets &&\n      options.targets.some(target => target.contains(event.target))\n    ) {\n      return;\n    }\n\n    options.hide();\n  });\n}\n","/**\n * @copyright Valor Software\n * @copyright Angular ng-bootstrap team\n */\n\nimport { ComponentRef, ViewRef } from '@angular/core';\n\nexport class ContentRef {\n  nodes: any[];\n  viewRef?: ViewRef;\n  componentRef?: ComponentRef<any>;\n\n  constructor(\n    nodes: any[],\n    viewRef?: ViewRef,\n    componentRef?: ComponentRef<any>\n  ) {\n    this.nodes = nodes;\n    this.viewRef = viewRef;\n    this.componentRef = componentRef;\n  }\n}\n","// tslint:disable:max-file-line-count\n// todo: add delay support\n// todo: merge events onShow, onShown, etc...\n// todo: add global positioning configuration?\nimport {\n  ApplicationRef,\n  ComponentFactory,\n  ComponentFactoryResolver,\n  ComponentRef,\n  ElementRef,\n  EmbeddedViewRef,\n  EventEmitter,\n  Injector,\n  NgZone,\n  Provider,\n  ReflectiveInjector,\n  Renderer2,\n  TemplateRef,\n  Type,\n  ViewContainerRef\n} from '@angular/core';\nimport { PositioningOptions, PositioningService } from '../positioning';\nimport { listenToTriggersV2, registerOutsideClick } from '../utils/triggers';\nimport { ContentRef } from './content-ref.class';\nimport { ListenOptions } from './listen-options.model';\n\nexport class ComponentLoader<T> {\n  onBeforeShow: EventEmitter<any> = new EventEmitter();\n  onShown: EventEmitter<any> = new EventEmitter();\n  onBeforeHide: EventEmitter<any> = new EventEmitter();\n  onHidden: EventEmitter<any> = new EventEmitter();\n\n  instance: T;\n  _componentRef: ComponentRef<T>;\n  _inlineViewRef: EmbeddedViewRef<T>;\n\n  private _providers: Provider[] = [];\n  private _componentFactory: ComponentFactory<T>;\n  private _zoneSubscription: any;\n  private _contentRef: ContentRef;\n  private _innerComponent: ComponentRef<T>;\n\n  private _unregisterListenersFn: Function;\n\n  get isShown(): boolean {\n    if (this._isHiding) {\n      return false;\n    }\n\n    return !!this._componentRef;\n  }\n\n  private _isHiding = false;\n\n  /**\n   * Placement of a component. Accepts: \"top\", \"bottom\", \"left\", \"right\"\n   */\n  private attachment: string;\n\n  /**\n   * A selector specifying the element the popover should be appended to.\n   * Currently only supports \"body\".\n   */\n  private container: string | ElementRef | any;\n\n  /**\n   * Specifies events that should trigger. Supports a space separated list of\n   * event names.\n   */\n  private triggers: string;\n\n  private _listenOpts: ListenOptions = {};\n  private _globalListener = Function.prototype;\n\n  /**\n   * Do not use this directly, it should be instanced via\n   * `ComponentLoadFactory.attach`\n   * @internal\n   */\n  // tslint:disable-next-line\n  public constructor(\n    private _viewContainerRef: ViewContainerRef,\n    private _renderer: Renderer2,\n    private _elementRef: ElementRef,\n    private _injector: Injector,\n    private _componentFactoryResolver: ComponentFactoryResolver,\n    private _ngZone: NgZone,\n    private _applicationRef: ApplicationRef,\n    private _posService: PositioningService\n  ) {}\n\n  attach(compType: Type<T>): ComponentLoader<T> {\n    this._componentFactory = this._componentFactoryResolver\n      .resolveComponentFactory<T>(compType);\n\n    return this;\n  }\n\n  // todo: add behaviour: to target element, `body`, custom element\n  to(container?: string): ComponentLoader<T> {\n    this.container = container || this.container;\n\n    return this;\n  }\n\n  position(opts?: PositioningOptions): ComponentLoader<T> {\n    this.attachment = opts.attachment || this.attachment;\n    this._elementRef = (opts.target as ElementRef) || this._elementRef;\n\n    return this;\n  }\n\n  provide(provider: Provider): ComponentLoader<T> {\n    this._providers.push(provider);\n\n    return this;\n  }\n\n  // todo: appendChild to element or document.querySelector(this.container)\n  show(\n    opts: {\n      content?: string | TemplateRef<any>;\n      context?: any;\n      [key: string]: any;\n    } = {}\n  ): ComponentRef<T> {\n    this._subscribePositioning();\n    this._innerComponent = null;\n\n    if (!this._componentRef) {\n      this.onBeforeShow.emit();\n      this._contentRef = this._getContentRef(opts.content, opts.context);\n      const injector = ReflectiveInjector.resolveAndCreate(\n        this._providers,\n        this._injector\n      );\n\n      this._componentRef = this._componentFactory.create(\n        injector,\n        this._contentRef.nodes\n      );\n      this._applicationRef.attachView(this._componentRef.hostView);\n      // this._componentRef = this._viewContainerRef\n      //   .createComponent(this._componentFactory, 0, injector, this._contentRef.nodes);\n      this.instance = this._componentRef.instance;\n\n      Object.assign(this._componentRef.instance, opts);\n\n      if (this.container instanceof ElementRef) {\n        this.container.nativeElement.appendChild(\n          this._componentRef.location.nativeElement\n        );\n      }\n\n      if (this.container === 'body' && typeof document !== 'undefined') {\n        document\n          .querySelector(this.container as string)\n          .appendChild(this._componentRef.location.nativeElement);\n      }\n\n      if (\n        !this.container &&\n        this._elementRef &&\n        this._elementRef.nativeElement.parentElement\n      ) {\n        this._elementRef.nativeElement.parentElement.appendChild(\n          this._componentRef.location.nativeElement\n        );\n      }\n\n      // we need to manually invoke change detection since events registered\n      // via\n      // Renderer::listen() are not picked up by change detection with the\n      // OnPush strategy\n      if (this._contentRef.componentRef) {\n        this._innerComponent = this._contentRef.componentRef.instance;\n        this._contentRef.componentRef.changeDetectorRef.markForCheck();\n        this._contentRef.componentRef.changeDetectorRef.detectChanges();\n      }\n      this._componentRef.changeDetectorRef.markForCheck();\n      this._componentRef.changeDetectorRef.detectChanges();\n      this.onShown.emit(this._componentRef.instance);\n    }\n\n    this._registerOutsideClick();\n\n    return this._componentRef;\n  }\n\n  hide(): ComponentLoader<T> {\n    if (!this._componentRef) {\n      return this;\n    }\n\n    this.onBeforeHide.emit(this._componentRef.instance);\n\n    const componentEl = this._componentRef.location.nativeElement;\n    componentEl.parentNode.removeChild(componentEl);\n    if (this._contentRef.componentRef) {\n      this._contentRef.componentRef.destroy();\n    }\n    this._componentRef.destroy();\n    if (this._viewContainerRef && this._contentRef.viewRef) {\n      this._viewContainerRef.remove(\n        this._viewContainerRef.indexOf(this._contentRef.viewRef)\n      );\n    }\n    if (this._contentRef.viewRef) {\n      this._contentRef.viewRef.destroy();\n    }\n    // this._viewContainerRef.remove(this._viewContainerRef.indexOf(this._componentRef.hostView));\n    //\n    // if (this._contentRef.viewRef && this._viewContainerRef.indexOf(this._contentRef.viewRef) !== -1) {\n    //   this._viewContainerRef.remove(this._viewContainerRef.indexOf(this._contentRef.viewRef));\n    // }\n\n    this._contentRef = null;\n    this._componentRef = null;\n    this._removeGlobalListener();\n\n    this.onHidden.emit();\n\n    return this;\n  }\n\n  toggle(): void {\n    if (this.isShown) {\n      this.hide();\n\n      return;\n    }\n\n    this.show();\n  }\n\n  dispose(): void {\n    if (this.isShown) {\n      this.hide();\n    }\n\n    this._unsubscribePositioning();\n\n    if (this._unregisterListenersFn) {\n      this._unregisterListenersFn();\n    }\n  }\n\n  listen(listenOpts: ListenOptions): ComponentLoader<T> {\n    this.triggers = listenOpts.triggers || this.triggers;\n    this._listenOpts.outsideClick = listenOpts.outsideClick;\n    listenOpts.target = listenOpts.target || this._elementRef.nativeElement;\n\n    const hide = (this._listenOpts.hide = () =>\n      listenOpts.hide ? listenOpts.hide() : void this.hide());\n    const show = (this._listenOpts.show = (registerHide: Function) => {\n      listenOpts.show ? listenOpts.show(registerHide) : this.show(registerHide);\n      registerHide();\n    });\n\n    const toggle = (registerHide: Function) => {\n      this.isShown ? hide() : show(registerHide);\n    };\n\n    this._unregisterListenersFn = listenToTriggersV2(this._renderer, {\n      target: listenOpts.target,\n      triggers: listenOpts.triggers,\n      show,\n      hide,\n      toggle\n    });\n\n    return this;\n  }\n\n  _removeGlobalListener() {\n    if (this._globalListener) {\n      this._globalListener();\n      this._globalListener = null;\n    }\n  }\n\n  attachInline(\n    vRef: ViewContainerRef,\n    template: TemplateRef<any>\n  ): ComponentLoader<T> {\n    this._inlineViewRef = vRef.createEmbeddedView(template);\n\n    return this;\n  }\n\n  _registerOutsideClick(): void {\n    if (!this._componentRef || !this._componentRef.location) {\n      return;\n    }\n    // why: should run after first event bubble\n    if (this._listenOpts.outsideClick) {\n      const target = this._componentRef.location.nativeElement;\n      setTimeout(() => {\n        this._globalListener = registerOutsideClick(this._renderer, {\n          targets: [target, this._elementRef.nativeElement],\n          outsideClick: this._listenOpts.outsideClick,\n          hide: () => this._listenOpts.hide()\n        });\n      });\n    }\n  }\n\n  getInnerComponent(): ComponentRef<T> {\n    return this._innerComponent;\n  }\n\n  private _subscribePositioning(): void {\n    if (this._zoneSubscription || !this.attachment) {\n      return;\n    }\n\n    this._zoneSubscription = this._ngZone.onStable.subscribe(() => {\n      if (!this._componentRef) {\n        return;\n      }\n      this._posService.position({\n        element: this._componentRef.location,\n        target: this._elementRef,\n        attachment: this.attachment,\n        appendToBody: this.container === 'body'\n      });\n    });\n  }\n\n  private _unsubscribePositioning(): void {\n    if (!this._zoneSubscription) {\n      return;\n    }\n    this._zoneSubscription.unsubscribe();\n    this._zoneSubscription = null;\n  }\n\n  private _getContentRef(\n    content: string | TemplateRef<any> | any,\n    context?: any\n  ): ContentRef {\n    if (!content) {\n      return new ContentRef([]);\n    }\n\n    if (content instanceof TemplateRef) {\n      if (this._viewContainerRef) {\n        const _viewRef = this._viewContainerRef\n          .createEmbeddedView<TemplateRef<T>>(content, context);\n        _viewRef.markForCheck();\n\n        return new ContentRef([_viewRef.rootNodes], _viewRef);\n      }\n      const viewRef = content.createEmbeddedView({});\n      this._applicationRef.attachView(viewRef);\n\n      return new ContentRef([viewRef.rootNodes], viewRef);\n    }\n\n    if (typeof content === 'function') {\n      const contentCmptFactory = this._componentFactoryResolver.resolveComponentFactory(\n        content\n      );\n      const modalContentInjector = ReflectiveInjector.resolveAndCreate(\n        [...this._providers],\n        this._injector\n      );\n      const componentRef = contentCmptFactory.create(modalContentInjector);\n      this._applicationRef.attachView(componentRef.hostView);\n\n      return new ContentRef(\n        [[componentRef.location.nativeElement]],\n        componentRef.hostView,\n        componentRef\n      );\n    }\n\n    return new ContentRef([[this._renderer.createText(`${content}`)]]);\n  }\n}\n","/**\n * @copyright Valor Software\n * @copyright Angular ng-bootstrap team\n */\n\n// previous version:\n// https://github.com/angular-ui/bootstrap/blob/07c31d0731f7cb068a1932b8e01d2312b796b4ec/src/position/position.js\n// tslint:disable\nexport class Positioning {\n  public position(element: HTMLElement, round = true): ClientRect {\n    let elPosition: ClientRect;\n    let parentOffset: ClientRect = {\n      width: 0,\n      height: 0,\n      top: 0,\n      bottom: 0,\n      left: 0,\n      right: 0\n    };\n\n    if (this.getStyle(element, 'position') === 'fixed') {\n      const bcRect = element.getBoundingClientRect();\n      elPosition = {\n        width: bcRect.width,\n        height: bcRect.height,\n        top: bcRect.top,\n        bottom: bcRect.bottom,\n        left: bcRect.left,\n        right: bcRect.right\n      };\n    } else {\n      const offsetParentEl = this.offsetParent(element);\n\n      elPosition = this.offset(element, false);\n\n      if (offsetParentEl !== document.documentElement) {\n        parentOffset = this.offset(offsetParentEl, false);\n      }\n\n      parentOffset.top += offsetParentEl.clientTop;\n      parentOffset.left += offsetParentEl.clientLeft;\n    }\n\n    elPosition.top -= parentOffset.top;\n    elPosition.bottom -= parentOffset.top;\n    elPosition.left -= parentOffset.left;\n    elPosition.right -= parentOffset.left;\n\n    if (round) {\n      elPosition.top = Math.round(elPosition.top);\n      elPosition.bottom = Math.round(elPosition.bottom);\n      elPosition.left = Math.round(elPosition.left);\n      elPosition.right = Math.round(elPosition.right);\n    }\n\n    return elPosition;\n  }\n\n  public offset(element: HTMLElement, round = true): ClientRect {\n    const elBcr = element.getBoundingClientRect();\n    const viewportOffset = {\n      top: window.pageYOffset - document.documentElement.clientTop,\n      left: window.pageXOffset - document.documentElement.clientLeft\n    };\n\n    let elOffset = {\n      height: elBcr.height || element.offsetHeight,\n      width: elBcr.width || element.offsetWidth,\n      top: elBcr.top + viewportOffset.top,\n      bottom: elBcr.bottom + viewportOffset.top,\n      left: elBcr.left + viewportOffset.left,\n      right: elBcr.right + viewportOffset.left\n    };\n\n    if (round) {\n      elOffset.height = Math.round(elOffset.height);\n      elOffset.width = Math.round(elOffset.width);\n      elOffset.top = Math.round(elOffset.top);\n      elOffset.bottom = Math.round(elOffset.bottom);\n      elOffset.left = Math.round(elOffset.left);\n      elOffset.right = Math.round(elOffset.right);\n    }\n\n    return elOffset;\n  }\n\n  public positionElements(\n    hostElement: HTMLElement,\n    targetElement: HTMLElement,\n    placement: string,\n    appendToBody?: boolean\n  ): ClientRect {\n    const hostElPosition = appendToBody\n      ? this.offset(hostElement, false)\n      : this.position(hostElement, false);\n    const targetElStyles = this.getAllStyles(targetElement);\n    const shiftWidth: any = {\n      left: hostElPosition.left,\n      center:\n        hostElPosition.left +\n        hostElPosition.width / 2 -\n        targetElement.offsetWidth / 2,\n      right: hostElPosition.left + hostElPosition.width\n    };\n    const shiftHeight: any = {\n      top: hostElPosition.top,\n      center:\n        hostElPosition.top +\n        hostElPosition.height / 2 -\n        targetElement.offsetHeight / 2,\n      bottom: hostElPosition.top + hostElPosition.height\n    };\n    const targetElBCR = targetElement.getBoundingClientRect();\n    let placementPrimary = placement.split(' ')[0] || 'top';\n    const placementSecondary = placement.split(' ')[1] || 'center';\n\n    let targetElPosition: ClientRect = {\n      height: targetElBCR.height || targetElement.offsetHeight,\n      width: targetElBCR.width || targetElement.offsetWidth,\n      top: 0,\n      bottom: targetElBCR.height || targetElement.offsetHeight,\n      left: 0,\n      right: targetElBCR.width || targetElement.offsetWidth\n    };\n\n    if (placementPrimary === 'auto') {\n      let newPlacementPrimary = this.autoPosition(\n        targetElPosition,\n        hostElPosition,\n        targetElement,\n        placementSecondary\n      );\n      if (!newPlacementPrimary)\n        newPlacementPrimary = this.autoPosition(\n          targetElPosition,\n          hostElPosition,\n          targetElement\n        );\n      if (newPlacementPrimary) placementPrimary = newPlacementPrimary;\n      targetElement.classList.add(placementPrimary);\n    }\n\n    switch (placementPrimary) {\n      case 'top':\n        targetElPosition.top =\n          hostElPosition.top -\n          (targetElement.offsetHeight +\n            parseFloat(targetElStyles.marginBottom));\n        targetElPosition.bottom +=\n          hostElPosition.top - targetElement.offsetHeight;\n        targetElPosition.left = shiftWidth[placementSecondary];\n        targetElPosition.right += shiftWidth[placementSecondary];\n        break;\n      case 'bottom':\n        targetElPosition.top = shiftHeight[placementPrimary];\n        targetElPosition.bottom += shiftHeight[placementPrimary];\n        targetElPosition.left = shiftWidth[placementSecondary];\n        targetElPosition.right += shiftWidth[placementSecondary];\n        break;\n      case 'left':\n        targetElPosition.top = shiftHeight[placementSecondary];\n        targetElPosition.bottom += shiftHeight[placementSecondary];\n        targetElPosition.left =\n          hostElPosition.left -\n          (targetElement.offsetWidth + parseFloat(targetElStyles.marginRight));\n        targetElPosition.right +=\n          hostElPosition.left - targetElement.offsetWidth;\n        break;\n      case 'right':\n        targetElPosition.top = shiftHeight[placementSecondary];\n        targetElPosition.bottom += shiftHeight[placementSecondary];\n        targetElPosition.left = shiftWidth[placementPrimary];\n        targetElPosition.right += shiftWidth[placementPrimary];\n        break;\n    }\n\n    targetElPosition.top = Math.round(targetElPosition.top);\n    targetElPosition.bottom = Math.round(targetElPosition.bottom);\n    targetElPosition.left = Math.round(targetElPosition.left);\n    targetElPosition.right = Math.round(targetElPosition.right);\n\n    return targetElPosition;\n  }\n\n  private autoPosition(\n    targetElPosition: ClientRect,\n    hostElPosition: ClientRect,\n    targetElement: HTMLElement,\n    preferredPosition?: string\n  ) {\n    if (\n      (!preferredPosition || preferredPosition === 'right') &&\n      targetElPosition.left + hostElPosition.left - targetElement.offsetWidth <\n        0\n    ) {\n      return 'right';\n    } else if (\n      (!preferredPosition || preferredPosition === 'top') &&\n      targetElPosition.bottom +\n        hostElPosition.bottom +\n        targetElement.offsetHeight >\n        window.innerHeight\n    ) {\n      return 'top';\n    } else if (\n      (!preferredPosition || preferredPosition === 'bottom') &&\n      targetElPosition.top + hostElPosition.top - targetElement.offsetHeight < 0\n    ) {\n      return 'bottom';\n    } else if (\n      (!preferredPosition || preferredPosition === 'left') &&\n      targetElPosition.right +\n        hostElPosition.right +\n        targetElement.offsetWidth >\n        window.innerWidth\n    ) {\n      return 'left';\n    }\n    return null;\n  }\n\n  private getAllStyles(element: HTMLElement) {\n    return window.getComputedStyle(element);\n  }\n\n  private getStyle(element: HTMLElement, prop: string): string {\n    return (this.getAllStyles(element) as any)[prop];\n  }\n\n  private isStaticPositioned(element: HTMLElement): boolean {\n    return (this.getStyle(element, 'position') || 'static') === 'static';\n  }\n\n  private offsetParent(element: HTMLElement): HTMLElement {\n    let offsetParentEl =\n      <HTMLElement>element.offsetParent || document.documentElement;\n\n    while (\n      offsetParentEl &&\n      offsetParentEl !== document.documentElement &&\n      this.isStaticPositioned(offsetParentEl)\n    ) {\n      offsetParentEl = <HTMLElement>offsetParentEl.offsetParent;\n    }\n\n    return offsetParentEl || document.documentElement;\n  }\n}\n\nconst positionService = new Positioning();\n\nexport function positionElements(\n  hostElement: HTMLElement,\n  targetElement: HTMLElement,\n  placement: string,\n  appendToBody?: boolean\n): void {\n  const pos = positionService.positionElements(\n    hostElement,\n    targetElement,\n    placement,\n    appendToBody\n  );\n\n  targetElement.style.top = `${pos.top}px`;\n  targetElement.style.left = `${pos.left}px`;\n}\n","import { Injectable, ElementRef } from '@angular/core';\nimport { positionElements } from './ng-positioning';\n\nexport interface PositioningOptions {\n  /** The DOM element, ElementRef, or a selector string of an element which will be moved */\n  element?: HTMLElement | ElementRef | string;\n\n  /** The DOM element, ElementRef, or a selector string of an element which the element will be attached to  */\n  target?: HTMLElement | ElementRef | string;\n\n  /**\n   * A string of the form 'vert-attachment horiz-attachment' or 'placement'\n   * - placement can be \"top\", \"bottom\", \"left\", \"right\"\n   * not yet supported:\n   * - vert-attachment can be any of 'top', 'middle', 'bottom'\n   * - horiz-attachment can be any of 'left', 'center', 'right'\n   */\n  attachment?: string;\n\n  /** A string similar to `attachment`. The one difference is that, if it's not provided,\n   * `targetAttachment` will assume the mirror image of `attachment`.\n   */\n  targetAttachment?: string;\n\n  /** A string of the form 'vert-offset horiz-offset'\n   * - vert-offset and horiz-offset can be of the form \"20px\" or \"55%\"\n   */\n  offset?: string;\n\n  /** A string similar to `offset`, but referring to the offset of the target */\n  targetOffset?: string;\n\n  /** If true component will be attached to body */\n  appendToBody?: boolean;\n}\n\n\nexport class PositioningService {\n  position(options: PositioningOptions): void {\n    const {element, target, attachment, appendToBody} = options;\n    positionElements(\n      _getHtmlElement(target),\n      _getHtmlElement(element),\n      attachment,\n      appendToBody\n    );\n  }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction _getHtmlElement(element: HTMLElement | ElementRef | string): HTMLElement {\n  // it means that we got a selector\n  if (typeof element === 'string') {\n    return document.querySelector(element) as HTMLElement;\n  }\n\n  if (element instanceof ElementRef) {\n    return element.nativeElement;\n  }\n\n  return element as HTMLElement;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {\n  ApplicationRef, ComponentFactoryResolver, ElementRef, Injectable, Injector,\n  NgZone, Renderer2, ViewContainerRef\n} from '@angular/core';\nimport { ComponentLoader } from './component-loader.class';\nimport { PositioningService } from '../positioning';\n\n\nexport class ComponentLoaderFactory {\n  constructor(private _componentFactoryResolver: ComponentFactoryResolver,\n              private _ngZone: NgZone,\n              private _injector: Injector,\n              private _posService: PositioningService,\n              private _applicationRef: ApplicationRef) {}\n\n  /**\n   *\n   * @param _elementRef\n   * @param _viewContainerRef\n   * @param _renderer\n   * @returns {ComponentLoader}\n   */\n  createLoader<T>(_elementRef: ElementRef,\n                  _viewContainerRef: ViewContainerRef,\n                  _renderer: Renderer2): ComponentLoader<T> {\n    return new ComponentLoader<T>(\n      _viewContainerRef,\n      _renderer,\n      _elementRef,\n      this._injector,\n      this._componentFactoryResolver,\n      this._ngZone,\n      this._applicationRef,\n      this._posService\n    );\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ComponentFactoryResolver, },\n{type: NgZone, },\n{type: Injector, },\n{type: PositioningService, },\n{type: ApplicationRef, },\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { isDevMode } from '@angular/core';\nconst _messagesHash: { [key: string]: boolean } = {};\nconst _hideMsg = typeof console === 'undefined' || !('warn' in console);\n\nexport function warnOnce(msg: string): void {\n  if (!isDevMode() || _hideMsg || msg in _messagesHash) {\n    return;\n  }\n\n  _messagesHash[msg] = true;\n  /*tslint:disable-next-line*/\n  console.warn(msg);\n}\n","// tslint:disable:deprecation\nimport {\n  Directive, ElementRef, EventEmitter, Input, OnDestroy, OnInit, Output,\n  Renderer2, TemplateRef, ViewContainerRef\n} from '@angular/core';\nimport { TooltipContainerComponent } from './tooltip-container.component';\nimport { TooltipConfig } from './tooltip.config';\nimport { ComponentLoader, ComponentLoaderFactory } from '../component-loader';\nimport { OnChange } from '../utils/decorators';\nimport { warnOnce } from '../utils/warn-once';\n\n\nexport class TooltipDirective implements OnInit, OnDestroy {\n  /**\n   * Content to be displayed as tooltip.\n   */\n  @OnChange()\n  \n  tooltip: string | TemplateRef<any>;\n  /** Fired when tooltip content changes */\n  \n  tooltipChange: EventEmitter<string | TemplateRef<any>> = new EventEmitter();\n\n  /**\n   * Placement of a tooltip. Accepts: \"top\", \"bottom\", \"left\", \"right\"\n   */\n   placement: string;\n  /**\n   * Specifies events that should trigger. Supports a space separated list of\n   * event names.\n   */\n   triggers: string;\n  /**\n   * A selector specifying the element the tooltip should be appended to.\n   * Currently only supports \"body\".\n   */\n   container: string;\n\n  /**\n   * Returns whether or not the tooltip is currently being shown\n   */\n  \n  get isOpen(): boolean {\n    return this._tooltip.isShown;\n  }\n\n  set isOpen(value: boolean) {\n    if (value) {\n      this.show();\n    } else {\n      this.hide();\n    }\n  }\n\n  /**\n   * Allows to disable tooltip\n   */\n   isDisabled: boolean;\n\n  /**\n   * Css class for tooltip container\n   */\n   containerClass = '';\n\n  /**\n   * Emits an event when the tooltip is shown\n   */\n   onShown: EventEmitter<any>;\n  /**\n   * Emits an event when the tooltip is hidden\n   */\n   onHidden: EventEmitter<any>;\n\n  /** @deprecated - please use `tooltip` instead */\n  \n  set htmlContent(value: string | TemplateRef<any>) {\n    warnOnce('tooltipHtml was deprecated, please use `tooltip` instead');\n    this.tooltip = value;\n  }\n\n  /** @deprecated - please use `placement` instead */\n  \n  set _placement(value: string) {\n    warnOnce('tooltipPlacement was deprecated, please use `placement` instead');\n    this.placement = value;\n  }\n\n  /** @deprecated - please use `isOpen` instead*/\n  \n  set _isOpen(value: boolean) {\n    warnOnce('tooltipIsOpen was deprecated, please use `isOpen` instead');\n    this.isOpen = value;\n  }\n\n  get _isOpen(): boolean {\n    warnOnce('tooltipIsOpen was deprecated, please use `isOpen` instead');\n    return this.isOpen;\n  }\n\n  /** @deprecated - please use `isDisabled` instead */\n  \n  set _enable(value: boolean) {\n    warnOnce('tooltipEnable was deprecated, please use `isDisabled` instead');\n    this.isDisabled = value;\n  }\n\n  get _enable(): boolean {\n    warnOnce('tooltipEnable was deprecated, please use `isDisabled` instead');\n    return this.isDisabled;\n  }\n\n  /** @deprecated - please use `container=\"body\"` instead */\n  \n  set _appendToBody(value: boolean) {\n    warnOnce(\n      'tooltipAppendToBody was deprecated, please use `container=\"body\"` instead'\n    );\n    this.container = value ? 'body' : this.container;\n  }\n\n  get _appendToBody(): boolean {\n    warnOnce(\n      'tooltipAppendToBody was deprecated, please use `container=\"body\"` instead'\n    );\n    return this.container === 'body';\n  }\n\n  /** @deprecated - removed, will be added to configuration */\n   _animation = true;\n\n  /** @deprecated - will replaced with customClass */\n  \n  set _popupClass(value: string) {\n    warnOnce('tooltipClass deprecated');\n  }\n\n  /** @deprecated - removed */\n  \n  set _tooltipContext(value: any) {\n    warnOnce('tooltipContext deprecated');\n  }\n\n  /** @deprecated */\n   _delay = 0;\n\n  /** @deprecated */\n   _fadeDuration = 150;\n\n  /** @deprecated -  please use `triggers` instead */\n  \n  get _tooltipTrigger(): string | string[] {\n    warnOnce('tooltipTrigger was deprecated, please use `triggers` instead');\n    return this.triggers;\n  }\n\n  set _tooltipTrigger(value: string | string[]) {\n    warnOnce('tooltipTrigger was deprecated, please use `triggers` instead');\n    this.triggers = (value || '').toString();\n  }\n\n  /** @deprecated */\n  \n  tooltipStateChanged: EventEmitter<boolean> = new EventEmitter<boolean>();\n  protected _delayTimeoutId: number | any;\n\n  private _tooltip: ComponentLoader<TooltipContainerComponent>;\n\n  constructor(_viewContainerRef: ViewContainerRef,\n                     _renderer: Renderer2,\n                     _elementRef: ElementRef,\n                     cis: ComponentLoaderFactory,\n                     config: TooltipConfig) {\n    this._tooltip = cis\n      .createLoader<TooltipContainerComponent>(\n        _elementRef,\n        _viewContainerRef,\n        _renderer\n      )\n      .provide({provide: TooltipConfig, useValue: config});\n\n    Object.assign(this, config);\n    this.onShown = this._tooltip.onShown;\n    this.onHidden = this._tooltip.onHidden;\n  }\n\n  ngOnInit(): void {\n    this._tooltip.listen({\n      triggers: this.triggers,\n      show: () => this.show()\n    });\n    this.tooltipChange.subscribe((value: any) => {\n      if (!value) {\n        this._tooltip.hide();\n      }\n    });\n  }\n\n  /**\n   * Toggles an element’s tooltip. This is considered a “manual” triggering of\n   * the tooltip.\n   */\n  toggle(): void {\n    if (this.isOpen) {\n      return this.hide();\n    }\n\n    this.show();\n  }\n\n  /**\n   * Opens an element’s tooltip. This is considered a “manual” triggering of\n   * the tooltip.\n   */\n  show(): void {\n    if (\n      this.isOpen ||\n      this.isDisabled ||\n      this._delayTimeoutId ||\n      !this.tooltip\n    ) {\n      return;\n    }\n\n    const showTooltip = () => {\n      if (this._delayTimeoutId) {\n        this._delayTimeoutId = undefined;\n      }\n\n      this._tooltip\n        .attach(TooltipContainerComponent)\n        .to(this.container)\n        .position({attachment: this.placement})\n        .show({\n          content: this.tooltip,\n          placement: this.placement,\n          containerClass: this.containerClass\n        });\n    }\n\n    if (this._delay) {\n      this._delayTimeoutId = setTimeout(() => {\n        showTooltip();\n      }, this._delay);\n    } else {\n      showTooltip();\n    }\n  }\n\n  /**\n   * Closes an element’s tooltip. This is considered a “manual” triggering of\n   * the tooltip.\n   */\n  hide(): void {\n    if (this._delayTimeoutId) {\n      clearTimeout(this._delayTimeoutId);\n      this._delayTimeoutId = undefined;\n    }\n\n    if (!this._tooltip.isShown) {\n      return;\n    }\n\n    this._tooltip.instance.classMap.in = false;\n    setTimeout(() => {\n      this._tooltip.hide();\n    }, this._fadeDuration);\n  }\n\n  ngOnDestroy(): void {\n    this._tooltip.dispose();\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[tooltip], [tooltipHtml]',\n  exportAs: 'bs-tooltip'\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ViewContainerRef, },\n{type: Renderer2, },\n{type: ElementRef, },\n{type: ComponentLoaderFactory, },\n{type: TooltipConfig, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'tooltip': [{ type: Input },],\n'tooltipChange': [{ type: Output },],\n'placement': [{ type: Input },],\n'triggers': [{ type: Input },],\n'container': [{ type: Input },],\n'isOpen': [{ type: Input },],\n'isDisabled': [{ type: Input },],\n'containerClass': [{ type: Input },],\n'onShown': [{ type: Output },],\n'onHidden': [{ type: Output },],\n'htmlContent': [{ type: Input, args: ['tooltipHtml', ] },],\n'_placement': [{ type: Input, args: ['tooltipPlacement', ] },],\n'_isOpen': [{ type: Input, args: ['tooltipIsOpen', ] },],\n'_enable': [{ type: Input, args: ['tooltipEnable', ] },],\n'_appendToBody': [{ type: Input, args: ['tooltipAppendToBody', ] },],\n'_animation': [{ type: Input, args: ['tooltipAnimation', ] },],\n'_popupClass': [{ type: Input, args: ['tooltipClass', ] },],\n'_tooltipContext': [{ type: Input, args: ['tooltipContext', ] },],\n'_delay': [{ type: Input, args: ['tooltipPopupDelay', ] },],\n'_fadeDuration': [{ type: Input, args: ['tooltipFadeDuration', ] },],\n'_tooltipTrigger': [{ type: Input, args: ['tooltipTrigger', ] },],\n'tooltipStateChanged': [{ type: Output },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/*tslint:disable:no-invalid-this */\nexport function OnChange(defaultValue?: any): any {\n  const sufix = 'Change';\n\n  return function OnChangeHandler(target: any, propertyKey: string): void {\n    const _key = ` __${propertyKey}Value`;\n    Object.defineProperty(target, propertyKey, {\n      get(): any {\n        return this[_key];\n      },\n      set(value: any): void {\n        const prevValue = this[_key];\n        this[_key] = value;\n        if (prevValue !== value && this[propertyKey + sufix]) {\n          this[propertyKey + sufix].emit(value);\n        }\n      }\n    });\n  };\n}\n/* tslint:enable */\n","import { CommonModule } from '@angular/common';\nimport { NgModule, ModuleWithProviders } from '@angular/core';\nimport { TooltipContainerComponent } from './tooltip-container.component';\nimport { TooltipDirective } from './tooltip.directive';\nimport { TooltipConfig } from './tooltip.config';\nimport { ComponentLoaderFactory } from '../component-loader';\nimport { PositioningService } from '../positioning';\n\n\nexport class TooltipModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: TooltipModule,\n      providers: [TooltipConfig, ComponentLoaderFactory, PositioningService]\n    };\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  imports: [CommonModule],\n  declarations: [TooltipDirective, TooltipContainerComponent],\n  exports: [TooltipDirective],\n  entryComponents: [TooltipContainerComponent]\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/* tslint:disable */\nexport const latinMap: { [key: string]: string } = {\n    'Á': 'A',\n    'Ă': 'A',\n    'Ắ': 'A',\n    'Ặ': 'A',\n    'Ằ': 'A',\n    'Ẳ': 'A',\n    'Ẵ': 'A',\n    'Ǎ': 'A',\n    'Â': 'A',\n    'Ấ': 'A',\n    'Ậ': 'A',\n    'Ầ': 'A',\n    'Ẩ': 'A',\n    'Ẫ': 'A',\n    'Ä': 'A',\n    'Ǟ': 'A',\n    'Ȧ': 'A',\n    'Ǡ': 'A',\n    'Ạ': 'A',\n    'Ȁ': 'A',\n    'À': 'A',\n    'Ả': 'A',\n    'Ȃ': 'A',\n    'Ā': 'A',\n    'Ą': 'A',\n    'Å': 'A',\n    'Ǻ': 'A',\n    'Ḁ': 'A',\n    'Ⱥ': 'A',\n    'Ã': 'A',\n    'Ꜳ': 'AA',\n    'Æ': 'AE',\n    'Ǽ': 'AE',\n    'Ǣ': 'AE',\n    'Ꜵ': 'AO',\n    'Ꜷ': 'AU',\n    'Ꜹ': 'AV',\n    'Ꜻ': 'AV',\n    'Ꜽ': 'AY',\n    'Ḃ': 'B',\n    'Ḅ': 'B',\n    'Ɓ': 'B',\n    'Ḇ': 'B',\n    'Ƀ': 'B',\n    'Ƃ': 'B',\n    'Ć': 'C',\n    'Č': 'C',\n    'Ç': 'C',\n    'Ḉ': 'C',\n    'Ĉ': 'C',\n    'Ċ': 'C',\n    'Ƈ': 'C',\n    'Ȼ': 'C',\n    'Ď': 'D',\n    'Ḑ': 'D',\n    'Ḓ': 'D',\n    'Ḋ': 'D',\n    'Ḍ': 'D',\n    'Ɗ': 'D',\n    'Ḏ': 'D',\n    'ǲ': 'D',\n    'ǅ': 'D',\n    'Đ': 'D',\n    'Ƌ': 'D',\n    'Ǳ': 'DZ',\n    'Ǆ': 'DZ',\n    'É': 'E',\n    'Ĕ': 'E',\n    'Ě': 'E',\n    'Ȩ': 'E',\n    'Ḝ': 'E',\n    'Ê': 'E',\n    'Ế': 'E',\n    'Ệ': 'E',\n    'Ề': 'E',\n    'Ể': 'E',\n    'Ễ': 'E',\n    'Ḙ': 'E',\n    'Ë': 'E',\n    'Ė': 'E',\n    'Ẹ': 'E',\n    'Ȅ': 'E',\n    'È': 'E',\n    'Ẻ': 'E',\n    'Ȇ': 'E',\n    'Ē': 'E',\n    'Ḗ': 'E',\n    'Ḕ': 'E',\n    'Ę': 'E',\n    'Ɇ': 'E',\n    'Ẽ': 'E',\n    'Ḛ': 'E',\n    'Ꝫ': 'ET',\n    'Ḟ': 'F',\n    'Ƒ': 'F',\n    'Ǵ': 'G',\n    'Ğ': 'G',\n    'Ǧ': 'G',\n    'Ģ': 'G',\n    'Ĝ': 'G',\n    'Ġ': 'G',\n    'Ɠ': 'G',\n    'Ḡ': 'G',\n    'Ǥ': 'G',\n    'Ḫ': 'H',\n    'Ȟ': 'H',\n    'Ḩ': 'H',\n    'Ĥ': 'H',\n    'Ⱨ': 'H',\n    'Ḧ': 'H',\n    'Ḣ': 'H',\n    'Ḥ': 'H',\n    'Ħ': 'H',\n    'Í': 'I',\n    'Ĭ': 'I',\n    'Ǐ': 'I',\n    'Î': 'I',\n    'Ï': 'I',\n    'Ḯ': 'I',\n    'İ': 'I',\n    'Ị': 'I',\n    'Ȉ': 'I',\n    'Ì': 'I',\n    'Ỉ': 'I',\n    'Ȋ': 'I',\n    'Ī': 'I',\n    'Į': 'I',\n    'Ɨ': 'I',\n    'Ĩ': 'I',\n    'Ḭ': 'I',\n    'Ꝺ': 'D',\n    'Ꝼ': 'F',\n    'Ᵹ': 'G',\n    'Ꞃ': 'R',\n    'Ꞅ': 'S',\n    'Ꞇ': 'T',\n    'Ꝭ': 'IS',\n    'Ĵ': 'J',\n    'Ɉ': 'J',\n    'Ḱ': 'K',\n    'Ǩ': 'K',\n    'Ķ': 'K',\n    'Ⱪ': 'K',\n    'Ꝃ': 'K',\n    'Ḳ': 'K',\n    'Ƙ': 'K',\n    'Ḵ': 'K',\n    'Ꝁ': 'K',\n    'Ꝅ': 'K',\n    'Ĺ': 'L',\n    'Ƚ': 'L',\n    'Ľ': 'L',\n    'Ļ': 'L',\n    'Ḽ': 'L',\n    'Ḷ': 'L',\n    'Ḹ': 'L',\n    'Ⱡ': 'L',\n    'Ꝉ': 'L',\n    'Ḻ': 'L',\n    'Ŀ': 'L',\n    'Ɫ': 'L',\n    'ǈ': 'L',\n    'Ł': 'L',\n    'Ǉ': 'LJ',\n    'Ḿ': 'M',\n    'Ṁ': 'M',\n    'Ṃ': 'M',\n    'Ɱ': 'M',\n    'Ń': 'N',\n    'Ň': 'N',\n    'Ņ': 'N',\n    'Ṋ': 'N',\n    'Ṅ': 'N',\n    'Ṇ': 'N',\n    'Ǹ': 'N',\n    'Ɲ': 'N',\n    'Ṉ': 'N',\n    'Ƞ': 'N',\n    'ǋ': 'N',\n    'Ñ': 'N',\n    'Ǌ': 'NJ',\n    'Ó': 'O',\n    'Ŏ': 'O',\n    'Ǒ': 'O',\n    'Ô': 'O',\n    'Ố': 'O',\n    'Ộ': 'O',\n    'Ồ': 'O',\n    'Ổ': 'O',\n    'Ỗ': 'O',\n    'Ö': 'O',\n    'Ȫ': 'O',\n    'Ȯ': 'O',\n    'Ȱ': 'O',\n    'Ọ': 'O',\n    'Ő': 'O',\n    'Ȍ': 'O',\n    'Ò': 'O',\n    'Ỏ': 'O',\n    'Ơ': 'O',\n    'Ớ': 'O',\n    'Ợ': 'O',\n    'Ờ': 'O',\n    'Ở': 'O',\n    'Ỡ': 'O',\n    'Ȏ': 'O',\n    'Ꝋ': 'O',\n    'Ꝍ': 'O',\n    'Ō': 'O',\n    'Ṓ': 'O',\n    'Ṑ': 'O',\n    'Ɵ': 'O',\n    'Ǫ': 'O',\n    'Ǭ': 'O',\n    'Ø': 'O',\n    'Ǿ': 'O',\n    'Õ': 'O',\n    'Ṍ': 'O',\n    'Ṏ': 'O',\n    'Ȭ': 'O',\n    'Ƣ': 'OI',\n    'Ꝏ': 'OO',\n    'Ɛ': 'E',\n    'Ɔ': 'O',\n    'Ȣ': 'OU',\n    'Ṕ': 'P',\n    'Ṗ': 'P',\n    'Ꝓ': 'P',\n    'Ƥ': 'P',\n    'Ꝕ': 'P',\n    'Ᵽ': 'P',\n    'Ꝑ': 'P',\n    'Ꝙ': 'Q',\n    'Ꝗ': 'Q',\n    'Ŕ': 'R',\n    'Ř': 'R',\n    'Ŗ': 'R',\n    'Ṙ': 'R',\n    'Ṛ': 'R',\n    'Ṝ': 'R',\n    'Ȑ': 'R',\n    'Ȓ': 'R',\n    'Ṟ': 'R',\n    'Ɍ': 'R',\n    'Ɽ': 'R',\n    'Ꜿ': 'C',\n    'Ǝ': 'E',\n    'Ś': 'S',\n    'Ṥ': 'S',\n    'Š': 'S',\n    'Ṧ': 'S',\n    'Ş': 'S',\n    'Ŝ': 'S',\n    'Ș': 'S',\n    'Ṡ': 'S',\n    'Ṣ': 'S',\n    'Ṩ': 'S',\n    'Ť': 'T',\n    'Ţ': 'T',\n    'Ṱ': 'T',\n    'Ț': 'T',\n    'Ⱦ': 'T',\n    'Ṫ': 'T',\n    'Ṭ': 'T',\n    'Ƭ': 'T',\n    'Ṯ': 'T',\n    'Ʈ': 'T',\n    'Ŧ': 'T',\n    'Ɐ': 'A',\n    'Ꞁ': 'L',\n    'Ɯ': 'M',\n    'Ʌ': 'V',\n    'Ꜩ': 'TZ',\n    'Ú': 'U',\n    'Ŭ': 'U',\n    'Ǔ': 'U',\n    'Û': 'U',\n    'Ṷ': 'U',\n    'Ü': 'U',\n    'Ǘ': 'U',\n    'Ǚ': 'U',\n    'Ǜ': 'U',\n    'Ǖ': 'U',\n    'Ṳ': 'U',\n    'Ụ': 'U',\n    'Ű': 'U',\n    'Ȕ': 'U',\n    'Ù': 'U',\n    'Ủ': 'U',\n    'Ư': 'U',\n    'Ứ': 'U',\n    'Ự': 'U',\n    'Ừ': 'U',\n    'Ử': 'U',\n    'Ữ': 'U',\n    'Ȗ': 'U',\n    'Ū': 'U',\n    'Ṻ': 'U',\n    'Ų': 'U',\n    'Ů': 'U',\n    'Ũ': 'U',\n    'Ṹ': 'U',\n    'Ṵ': 'U',\n    'Ꝟ': 'V',\n    'Ṿ': 'V',\n    'Ʋ': 'V',\n    'Ṽ': 'V',\n    'Ꝡ': 'VY',\n    'Ẃ': 'W',\n    'Ŵ': 'W',\n    'Ẅ': 'W',\n    'Ẇ': 'W',\n    'Ẉ': 'W',\n    'Ẁ': 'W',\n    'Ⱳ': 'W',\n    'Ẍ': 'X',\n    'Ẋ': 'X',\n    'Ý': 'Y',\n    'Ŷ': 'Y',\n    'Ÿ': 'Y',\n    'Ẏ': 'Y',\n    'Ỵ': 'Y',\n    'Ỳ': 'Y',\n    'Ƴ': 'Y',\n    'Ỷ': 'Y',\n    'Ỿ': 'Y',\n    'Ȳ': 'Y',\n    'Ɏ': 'Y',\n    'Ỹ': 'Y',\n    'Ź': 'Z',\n    'Ž': 'Z',\n    'Ẑ': 'Z',\n    'Ⱬ': 'Z',\n    'Ż': 'Z',\n    'Ẓ': 'Z',\n    'Ȥ': 'Z',\n    'Ẕ': 'Z',\n    'Ƶ': 'Z',\n    'Ĳ': 'IJ',\n    'Œ': 'OE',\n    'ᴀ': 'A',\n    'ᴁ': 'AE',\n    'ʙ': 'B',\n    'ᴃ': 'B',\n    'ᴄ': 'C',\n    'ᴅ': 'D',\n    'ᴇ': 'E',\n    'ꜰ': 'F',\n    'ɢ': 'G',\n    'ʛ': 'G',\n    'ʜ': 'H',\n    'ɪ': 'I',\n    'ʁ': 'R',\n    'ᴊ': 'J',\n    'ᴋ': 'K',\n    'ʟ': 'L',\n    'ᴌ': 'L',\n    'ᴍ': 'M',\n    'ɴ': 'N',\n    'ᴏ': 'O',\n    'ɶ': 'OE',\n    'ᴐ': 'O',\n    'ᴕ': 'OU',\n    'ᴘ': 'P',\n    'ʀ': 'R',\n    'ᴎ': 'N',\n    'ᴙ': 'R',\n    'ꜱ': 'S',\n    'ᴛ': 'T',\n    'ⱻ': 'E',\n    'ᴚ': 'R',\n    'ᴜ': 'U',\n    'ᴠ': 'V',\n    'ᴡ': 'W',\n    'ʏ': 'Y',\n    'ᴢ': 'Z',\n    'á': 'a',\n    'ă': 'a',\n    'ắ': 'a',\n    'ặ': 'a',\n    'ằ': 'a',\n    'ẳ': 'a',\n    'ẵ': 'a',\n    'ǎ': 'a',\n    'â': 'a',\n    'ấ': 'a',\n    'ậ': 'a',\n    'ầ': 'a',\n    'ẩ': 'a',\n    'ẫ': 'a',\n    'ä': 'a',\n    'ǟ': 'a',\n    'ȧ': 'a',\n    'ǡ': 'a',\n    'ạ': 'a',\n    'ȁ': 'a',\n    'à': 'a',\n    'ả': 'a',\n    'ȃ': 'a',\n    'ā': 'a',\n    'ą': 'a',\n    'ᶏ': 'a',\n    'ẚ': 'a',\n    'å': 'a',\n    'ǻ': 'a',\n    'ḁ': 'a',\n    'ⱥ': 'a',\n    'ã': 'a',\n    'ꜳ': 'aa',\n    'æ': 'ae',\n    'ǽ': 'ae',\n    'ǣ': 'ae',\n    'ꜵ': 'ao',\n    'ꜷ': 'au',\n    'ꜹ': 'av',\n    'ꜻ': 'av',\n    'ꜽ': 'ay',\n    'ḃ': 'b',\n    'ḅ': 'b',\n    'ɓ': 'b',\n    'ḇ': 'b',\n    'ᵬ': 'b',\n    'ᶀ': 'b',\n    'ƀ': 'b',\n    'ƃ': 'b',\n    'ɵ': 'o',\n    'ć': 'c',\n    'č': 'c',\n    'ç': 'c',\n    'ḉ': 'c',\n    'ĉ': 'c',\n    'ɕ': 'c',\n    'ċ': 'c',\n    'ƈ': 'c',\n    'ȼ': 'c',\n    'ď': 'd',\n    'ḑ': 'd',\n    'ḓ': 'd',\n    'ȡ': 'd',\n    'ḋ': 'd',\n    'ḍ': 'd',\n    'ɗ': 'd',\n    'ᶑ': 'd',\n    'ḏ': 'd',\n    'ᵭ': 'd',\n    'ᶁ': 'd',\n    'đ': 'd',\n    'ɖ': 'd',\n    'ƌ': 'd',\n    'ı': 'i',\n    'ȷ': 'j',\n    'ɟ': 'j',\n    'ʄ': 'j',\n    'ǳ': 'dz',\n    'ǆ': 'dz',\n    'é': 'e',\n    'ĕ': 'e',\n    'ě': 'e',\n    'ȩ': 'e',\n    'ḝ': 'e',\n    'ê': 'e',\n    'ế': 'e',\n    'ệ': 'e',\n    'ề': 'e',\n    'ể': 'e',\n    'ễ': 'e',\n    'ḙ': 'e',\n    'ë': 'e',\n    'ė': 'e',\n    'ẹ': 'e',\n    'ȅ': 'e',\n    'è': 'e',\n    'ẻ': 'e',\n    'ȇ': 'e',\n    'ē': 'e',\n    'ḗ': 'e',\n    'ḕ': 'e',\n    'ⱸ': 'e',\n    'ę': 'e',\n    'ᶒ': 'e',\n    'ɇ': 'e',\n    'ẽ': 'e',\n    'ḛ': 'e',\n    'ꝫ': 'et',\n    'ḟ': 'f',\n    'ƒ': 'f',\n    'ᵮ': 'f',\n    'ᶂ': 'f',\n    'ǵ': 'g',\n    'ğ': 'g',\n    'ǧ': 'g',\n    'ģ': 'g',\n    'ĝ': 'g',\n    'ġ': 'g',\n    'ɠ': 'g',\n    'ḡ': 'g',\n    'ᶃ': 'g',\n    'ǥ': 'g',\n    'ḫ': 'h',\n    'ȟ': 'h',\n    'ḩ': 'h',\n    'ĥ': 'h',\n    'ⱨ': 'h',\n    'ḧ': 'h',\n    'ḣ': 'h',\n    'ḥ': 'h',\n    'ɦ': 'h',\n    'ẖ': 'h',\n    'ħ': 'h',\n    'ƕ': 'hv',\n    'í': 'i',\n    'ĭ': 'i',\n    'ǐ': 'i',\n    'î': 'i',\n    'ï': 'i',\n    'ḯ': 'i',\n    'ị': 'i',\n    'ȉ': 'i',\n    'ì': 'i',\n    'ỉ': 'i',\n    'ȋ': 'i',\n    'ī': 'i',\n    'į': 'i',\n    'ᶖ': 'i',\n    'ɨ': 'i',\n    'ĩ': 'i',\n    'ḭ': 'i',\n    'ꝺ': 'd',\n    'ꝼ': 'f',\n    'ᵹ': 'g',\n    'ꞃ': 'r',\n    'ꞅ': 's',\n    'ꞇ': 't',\n    'ꝭ': 'is',\n    'ǰ': 'j',\n    'ĵ': 'j',\n    'ʝ': 'j',\n    'ɉ': 'j',\n    'ḱ': 'k',\n    'ǩ': 'k',\n    'ķ': 'k',\n    'ⱪ': 'k',\n    'ꝃ': 'k',\n    'ḳ': 'k',\n    'ƙ': 'k',\n    'ḵ': 'k',\n    'ᶄ': 'k',\n    'ꝁ': 'k',\n    'ꝅ': 'k',\n    'ĺ': 'l',\n    'ƚ': 'l',\n    'ɬ': 'l',\n    'ľ': 'l',\n    'ļ': 'l',\n    'ḽ': 'l',\n    'ȴ': 'l',\n    'ḷ': 'l',\n    'ḹ': 'l',\n    'ⱡ': 'l',\n    'ꝉ': 'l',\n    'ḻ': 'l',\n    'ŀ': 'l',\n    'ɫ': 'l',\n    'ᶅ': 'l',\n    'ɭ': 'l',\n    'ł': 'l',\n    'ǉ': 'lj',\n    'ſ': 's',\n    'ẜ': 's',\n    'ẛ': 's',\n    'ẝ': 's',\n    'ḿ': 'm',\n    'ṁ': 'm',\n    'ṃ': 'm',\n    'ɱ': 'm',\n    'ᵯ': 'm',\n    'ᶆ': 'm',\n    'ń': 'n',\n    'ň': 'n',\n    'ņ': 'n',\n    'ṋ': 'n',\n    'ȵ': 'n',\n    'ṅ': 'n',\n    'ṇ': 'n',\n    'ǹ': 'n',\n    'ɲ': 'n',\n    'ṉ': 'n',\n    'ƞ': 'n',\n    'ᵰ': 'n',\n    'ᶇ': 'n',\n    'ɳ': 'n',\n    'ñ': 'n',\n    'ǌ': 'nj',\n    'ó': 'o',\n    'ŏ': 'o',\n    'ǒ': 'o',\n    'ô': 'o',\n    'ố': 'o',\n    'ộ': 'o',\n    'ồ': 'o',\n    'ổ': 'o',\n    'ỗ': 'o',\n    'ö': 'o',\n    'ȫ': 'o',\n    'ȯ': 'o',\n    'ȱ': 'o',\n    'ọ': 'o',\n    'ő': 'o',\n    'ȍ': 'o',\n    'ò': 'o',\n    'ỏ': 'o',\n    'ơ': 'o',\n    'ớ': 'o',\n    'ợ': 'o',\n    'ờ': 'o',\n    'ở': 'o',\n    'ỡ': 'o',\n    'ȏ': 'o',\n    'ꝋ': 'o',\n    'ꝍ': 'o',\n    'ⱺ': 'o',\n    'ō': 'o',\n    'ṓ': 'o',\n    'ṑ': 'o',\n    'ǫ': 'o',\n    'ǭ': 'o',\n    'ø': 'o',\n    'ǿ': 'o',\n    'õ': 'o',\n    'ṍ': 'o',\n    'ṏ': 'o',\n    'ȭ': 'o',\n    'ƣ': 'oi',\n    'ꝏ': 'oo',\n    'ɛ': 'e',\n    'ᶓ': 'e',\n    'ɔ': 'o',\n    'ᶗ': 'o',\n    'ȣ': 'ou',\n    'ṕ': 'p',\n    'ṗ': 'p',\n    'ꝓ': 'p',\n    'ƥ': 'p',\n    'ᵱ': 'p',\n    'ᶈ': 'p',\n    'ꝕ': 'p',\n    'ᵽ': 'p',\n    'ꝑ': 'p',\n    'ꝙ': 'q',\n    'ʠ': 'q',\n    'ɋ': 'q',\n    'ꝗ': 'q',\n    'ŕ': 'r',\n    'ř': 'r',\n    'ŗ': 'r',\n    'ṙ': 'r',\n    'ṛ': 'r',\n    'ṝ': 'r',\n    'ȑ': 'r',\n    'ɾ': 'r',\n    'ᵳ': 'r',\n    'ȓ': 'r',\n    'ṟ': 'r',\n    'ɼ': 'r',\n    'ᵲ': 'r',\n    'ᶉ': 'r',\n    'ɍ': 'r',\n    'ɽ': 'r',\n    'ↄ': 'c',\n    'ꜿ': 'c',\n    'ɘ': 'e',\n    'ɿ': 'r',\n    'ś': 's',\n    'ṥ': 's',\n    'š': 's',\n    'ṧ': 's',\n    'ş': 's',\n    'ŝ': 's',\n    'ș': 's',\n    'ṡ': 's',\n    'ṣ': 's',\n    'ṩ': 's',\n    'ʂ': 's',\n    'ᵴ': 's',\n    'ᶊ': 's',\n    'ȿ': 's',\n    'ɡ': 'g',\n    'ᴑ': 'o',\n    'ᴓ': 'o',\n    'ᴝ': 'u',\n    'ť': 't',\n    'ţ': 't',\n    'ṱ': 't',\n    'ț': 't',\n    'ȶ': 't',\n    'ẗ': 't',\n    'ⱦ': 't',\n    'ṫ': 't',\n    'ṭ': 't',\n    'ƭ': 't',\n    'ṯ': 't',\n    'ᵵ': 't',\n    'ƫ': 't',\n    'ʈ': 't',\n    'ŧ': 't',\n    'ᵺ': 'th',\n    'ɐ': 'a',\n    'ᴂ': 'ae',\n    'ǝ': 'e',\n    'ᵷ': 'g',\n    'ɥ': 'h',\n    'ʮ': 'h',\n    'ʯ': 'h',\n    'ᴉ': 'i',\n    'ʞ': 'k',\n    'ꞁ': 'l',\n    'ɯ': 'm',\n    'ɰ': 'm',\n    'ᴔ': 'oe',\n    'ɹ': 'r',\n    'ɻ': 'r',\n    'ɺ': 'r',\n    'ⱹ': 'r',\n    'ʇ': 't',\n    'ʌ': 'v',\n    'ʍ': 'w',\n    'ʎ': 'y',\n    'ꜩ': 'tz',\n    'ú': 'u',\n    'ŭ': 'u',\n    'ǔ': 'u',\n    'û': 'u',\n    'ṷ': 'u',\n    'ü': 'u',\n    'ǘ': 'u',\n    'ǚ': 'u',\n    'ǜ': 'u',\n    'ǖ': 'u',\n    'ṳ': 'u',\n    'ụ': 'u',\n    'ű': 'u',\n    'ȕ': 'u',\n    'ù': 'u',\n    'ủ': 'u',\n    'ư': 'u',\n    'ứ': 'u',\n    'ự': 'u',\n    'ừ': 'u',\n    'ử': 'u',\n    'ữ': 'u',\n    'ȗ': 'u',\n    'ū': 'u',\n    'ṻ': 'u',\n    'ų': 'u',\n    'ᶙ': 'u',\n    'ů': 'u',\n    'ũ': 'u',\n    'ṹ': 'u',\n    'ṵ': 'u',\n    'ᵫ': 'ue',\n    'ꝸ': 'um',\n    'ⱴ': 'v',\n    'ꝟ': 'v',\n    'ṿ': 'v',\n    'ʋ': 'v',\n    'ᶌ': 'v',\n    'ⱱ': 'v',\n    'ṽ': 'v',\n    'ꝡ': 'vy',\n    'ẃ': 'w',\n    'ŵ': 'w',\n    'ẅ': 'w',\n    'ẇ': 'w',\n    'ẉ': 'w',\n    'ẁ': 'w',\n    'ⱳ': 'w',\n    'ẘ': 'w',\n    'ẍ': 'x',\n    'ẋ': 'x',\n    'ᶍ': 'x',\n    'ý': 'y',\n    'ŷ': 'y',\n    'ÿ': 'y',\n    'ẏ': 'y',\n    'ỵ': 'y',\n    'ỳ': 'y',\n    'ƴ': 'y',\n    'ỷ': 'y',\n    'ỿ': 'y',\n    'ȳ': 'y',\n    'ẙ': 'y',\n    'ɏ': 'y',\n    'ỹ': 'y',\n    'ź': 'z',\n    'ž': 'z',\n    'ẑ': 'z',\n    'ʑ': 'z',\n    'ⱬ': 'z',\n    'ż': 'z',\n    'ẓ': 'z',\n    'ȥ': 'z',\n    'ẕ': 'z',\n    'ᵶ': 'z',\n    'ᶎ': 'z',\n    'ʐ': 'z',\n    'ƶ': 'z',\n    'ɀ': 'z',\n    'ﬀ': 'ff',\n    'ﬃ': 'ffi',\n    'ﬄ': 'ffl',\n    'ﬁ': 'fi',\n    'ﬂ': 'fl',\n    'ĳ': 'ij',\n    'œ': 'oe',\n    'ﬆ': 'st',\n    'ₐ': 'a',\n    'ₑ': 'e',\n    'ᵢ': 'i',\n    'ⱼ': 'j',\n    'ₒ': 'o',\n    'ᵣ': 'r',\n    'ᵤ': 'u',\n    'ᵥ': 'v',\n    'ₓ': 'x'\n};\n","export class TypeaheadMatch {\n  readonly value: string;\n  readonly item: any;\n  protected header: boolean;\n\n  constructor(item: any, value: string = item, header = false) {\n    this.item = item;\n    this.value = value;\n    this.header = header;\n  }\n\n  isHeader(): boolean {\n    return this.header;\n  }\n\n  toString(): string {\n    return this.value;\n  }\n}\n","import { latinMap } from './latin-map';\n\nexport function latinize(str: string): string {\n  if (!str) {\n    return '';\n  }\n\n  return str.replace(/[^A-Za-z0-9\\[\\] ]/g, function (a: string): string {\n    return latinMap[a] || a;\n  });\n}\n\nexport function escapeRegexp(queryToEscape: string): string {\n  // Regex: capture the whole query string and replace it with the string\n  // that will be used to match the results, for example if the capture is\n  // 'a' the result will be \\a\n  return queryToEscape.replace(/([.?*+^$[\\]\\\\(){}|-])/g, '\\\\$1');\n}\n\n/* tslint:disable */\nexport function tokenize(str: string,\n                         wordRegexDelimiters = ' ',\n                         phraseRegexDelimiters = ''): Array<string> {\n  /* tslint:enable */\n  const regexStr = `(?:[${phraseRegexDelimiters}])([^${phraseRegexDelimiters}]+)` +\n    `(?:[${phraseRegexDelimiters}])|([^${wordRegexDelimiters}]+)`;\n  const preTokenized: string[] = str.split(new RegExp(regexStr, 'g'));\n  const result: string[] = [];\n  const preTokenizedLength: number = preTokenized.length;\n  let token: string;\n  const replacePhraseDelimiters = new RegExp(`[${phraseRegexDelimiters}]+`, 'g');\n\n  for (let i = 0; i < preTokenizedLength; i += 1) {\n    token = preTokenized[i];\n    if (token && token.length && token !== wordRegexDelimiters) {\n      result.push(token.replace(replacePhraseDelimiters, ''));\n    }\n  }\n\n  return result;\n}\n\nexport function getValueFromObject(object: any, option: string): string {\n  if (!option || typeof object !== 'object') {\n    return object.toString();\n  }\n\n  if (option.endsWith('()')) {\n    const functionName = option.slice(0, option.length - 2);\n\n    return object[functionName]().toString();\n  }\n\n  const properties: string = option\n    .replace(/\\[(\\w+)\\]/g, '.$1')\n    .replace(/^\\./, '');\n  const propertiesArray: string[] = properties.split('.');\n\n  for (const property of propertiesArray) {\n    if (property in object) {\n      // tslint:disable-next-line\n      object = object[property];\n    }\n  }\n  if (!object) {return ''; }\n\n  return object.toString();\n}\n","import { window } from './facade/browser';\n\nexport class Utils {\n  static reflow(element: any): void {\n    ((bs: any): void => bs)(element.offsetHeight);\n  }\n\n  // source: https://github.com/jquery/jquery/blob/master/src/css/var/getStyles.js\n  static getStyles(elem: any): any {\n    // Support: IE <=11 only, Firefox <=30 (#15098, #14150)\n    // IE throws on elements created in popups\n    // FF meanwhile throws on frame elements through \"defaultView.getComputedStyle\"\n    let view = elem.ownerDocument.defaultView;\n\n    if (!view || !view.opener) {\n      view = window;\n    }\n\n    return view.getComputedStyle(elem);\n  }\n}\n","import { Component, ElementRef, HostListener, QueryList, TemplateRef, ViewChild, ViewChildren, Renderer2 } from '@angular/core';\nimport { isBs3 } from '../utils/theme-provider';\nimport { TypeaheadMatch } from './typeahead-match.class';\nimport { latinize } from './typeahead-utils';\nimport { TypeaheadDirective } from './typeahead.directive';\nimport { Utils } from '../utils/utils.class';\n\n\nexport class TypeaheadContainerComponent {\n  parent: TypeaheadDirective;\n  query: any;\n  element: ElementRef;\n  isFocused = false;\n  top: string;\n  left: string;\n  display: string;\n  placement: string;\n  dropup: boolean;\n  guiHeight: string;\n  needScrollbar: boolean;\n\n  get isBs4(): boolean {\n    return !isBs3();\n  }\n\n  protected _active: TypeaheadMatch;\n  protected _matches: TypeaheadMatch[] = [];\n\n  \n  private ulElement: ElementRef;\n\n  \n  private liElements: QueryList<ElementRef>;\n\n  constructor(element: ElementRef, private renderer: Renderer2) {\n    this.element = element;\n  }\n\n  get active(): TypeaheadMatch {\n    return this._active;\n  }\n\n  get matches(): TypeaheadMatch[] {\n    return this._matches;\n  }\n\n  set matches(value: TypeaheadMatch[]) {\n    this._matches = value;\n    this.needScrollbar = this.typeaheadScrollable && this.typeaheadOptionsInScrollableView < this.matches.length;\n    if (this.typeaheadScrollable) {\n      setTimeout(() => {\n        this.setScrollableMode();\n      });\n    }\n\n    if (this._matches.length > 0) {\n      this._active = this._matches[0];\n      if (this._active.isHeader()) {\n        this.nextActiveMatch();\n      }\n    }\n  }\n\n  get optionsListTemplate(): TemplateRef<any> {\n    return this.parent ? this.parent.optionsListTemplate : undefined;\n  }\n\n  get typeaheadScrollable(): boolean {\n    return this.parent ? this.parent.typeaheadScrollable : false;\n  }\n\n\n  get typeaheadOptionsInScrollableView(): number {\n    return this.parent ? this.parent.typeaheadOptionsInScrollableView : 5;\n  }\n\n  get itemTemplate(): TemplateRef<any> {\n    return this.parent ? this.parent.typeaheadItemTemplate : undefined;\n  }\n\n  selectActiveMatch(): void {\n    this.selectMatch(this._active);\n  }\n\n  prevActiveMatch(): void {\n    const index = this.matches.indexOf(this._active);\n    this._active = this.matches[\n      index - 1 < 0 ? this.matches.length - 1 : index - 1\n      ];\n    if (this._active.isHeader()) {\n      this.prevActiveMatch();\n    }\n    if (this.typeaheadScrollable) {\n      this.scrollPrevious(index);\n    }\n  }\n\n  nextActiveMatch(): void {\n    const index = this.matches.indexOf(this._active);\n    this._active = this.matches[\n      index + 1 > this.matches.length - 1 ? 0 : index + 1\n      ];\n    if (this._active.isHeader()) {\n      this.nextActiveMatch();\n    }\n    if (this.typeaheadScrollable) {\n      this.scrollNext(index);\n    }\n  }\n\n  selectActive(value: TypeaheadMatch): void {\n    this.isFocused = true;\n    this._active = value;\n  }\n\n  hightlight(match: TypeaheadMatch, query: any): string {\n    let itemStr: string = match.value;\n    let itemStrHelper: string = (this.parent && this.parent.typeaheadLatinize\n      ? latinize(itemStr)\n      : itemStr).toLowerCase();\n    let startIdx: number;\n    let tokenLen: number;\n    // Replaces the capture string with the same string inside of a \"strong\" tag\n    if (typeof query === 'object') {\n      const queryLen: number = query.length;\n      for (let i = 0; i < queryLen; i += 1) {\n        // query[i] is already latinized and lower case\n        startIdx = itemStrHelper.indexOf(query[i]);\n        tokenLen = query[i].length;\n        if (startIdx >= 0 && tokenLen > 0) {\n          itemStr =\n            `${itemStr.substring(0, startIdx)}<strong>${itemStr.substring(startIdx, startIdx + tokenLen)}</strong>` +\n            `${itemStr.substring(startIdx + tokenLen)}`;\n          itemStrHelper =\n            `${itemStrHelper.substring(0, startIdx)}        ${' '.repeat(tokenLen)}         ` +\n            `${itemStrHelper.substring(startIdx + tokenLen)}`;\n        }\n      }\n    } else if (query) {\n      // query is already latinized and lower case\n      startIdx = itemStrHelper.indexOf(query);\n      tokenLen = query.length;\n      if (startIdx >= 0 && tokenLen > 0) {\n        itemStr =\n          `${itemStr.substring(0, startIdx)}<strong>${itemStr.substring(startIdx, startIdx + tokenLen)}</strong>` +\n          `${itemStr.substring(startIdx + tokenLen)}`;\n      }\n    }\n\n    return itemStr;\n  }\n\n  \n  \n  focusLost(): void {\n    this.isFocused = false;\n  }\n\n  isActive(value: TypeaheadMatch): boolean {\n    return this._active === value;\n  }\n\n  selectMatch(value: TypeaheadMatch, e: Event = void 0): boolean {\n    if (e) {\n      e.stopPropagation();\n      e.preventDefault();\n    }\n    this.parent.changeModel(value);\n    setTimeout(() => this.parent.typeaheadOnSelect.emit(value), 0);\n\n    return false;\n  }\n\n  setScrollableMode(): void {\n    if (!this.ulElement) {\n      this.ulElement = this.element;\n    }\n    if (this.liElements.first) {\n      const ulStyles = Utils.getStyles(this.ulElement.nativeElement);\n      const liStyles = Utils.getStyles(this.liElements.first.nativeElement);\n      const ulPaddingBottom = parseFloat((ulStyles['padding-bottom'] ? ulStyles['padding-bottom'] : '').replace('px', ''));\n      const ulPaddingTop = parseFloat((ulStyles['padding-top'] ? ulStyles['padding-top'] : '0').replace('px', ''));\n      const optionHeight = parseFloat((liStyles['height'] ? liStyles['height'] : '0').replace('px', ''));\n      const height = this.typeaheadOptionsInScrollableView * optionHeight;\n      this.guiHeight = (height + ulPaddingTop + ulPaddingBottom) + 'px';\n    }\n    this.renderer.setStyle(this.element.nativeElement, 'visibility', 'visible');\n  }\n\n  scrollPrevious(index: number): void {\n    if (index === 0) {\n      this.scrollToBottom();\n      return;\n    }\n    if (this.liElements) {\n      const liElement = this.liElements.toArray()[index - 1];\n      if (liElement && !this.isScrolledIntoView(liElement.nativeElement)) {\n        this.ulElement.nativeElement.scrollTop = liElement.nativeElement.offsetTop;\n      }\n    }\n  }\n\n  scrollNext(index: number): void {\n    if (index + 1 > this.matches.length - 1) {\n      this.scrollToTop();\n      return;\n    }\n    if (this.liElements) {\n      const liElement = this.liElements.toArray()[index + 1];\n      if (liElement && !this.isScrolledIntoView(liElement.nativeElement)) {\n        this.ulElement.nativeElement.scrollTop =\n          liElement.nativeElement.offsetTop -\n          this.ulElement.nativeElement.offsetHeight +\n          liElement.nativeElement.offsetHeight;\n      }\n    }\n  }\n\n\n  private isScrolledIntoView = function (elem: HTMLElement) {\n    const containerViewTop = this.ulElement.nativeElement.scrollTop;\n    const containerViewBottom = containerViewTop + this.ulElement.nativeElement.offsetHeight;\n    const elemTop = elem.offsetTop;\n    const elemBottom = elemTop + elem.offsetHeight;\n\n    return ((elemBottom <= containerViewBottom) && (elemTop >= containerViewTop));\n  }\n\n  private scrollToBottom(): void {\n    this.ulElement.nativeElement.scrollTop = this.ulElement.nativeElement.scrollHeight;\n  }\n\n  private scrollToTop(): void {\n    this.ulElement.nativeElement.scrollTop = 0;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'typeahead-container',\n  // tslint:disable-next-line\n  template: \"<!-- inject options list template --> <ng-template [ngTemplateOutlet]=\\\"optionsListTemplate || (isBs4 ? bs4Template : bs3Template)\\\" [ngTemplateOutletContext]=\\\"{matches:matches, itemTemplate:itemTemplate, query:query}\\\"></ng-template> <!-- default options item template --> <ng-template #bsItemTemplate let-match=\\\"match\\\" let-query=\\\"query\\\"><span [innerHtml]=\\\"hightlight(match, query)\\\"></span> </ng-template> <!-- Bootstrap 3 options list template --> <ng-template #bs3Template> <ul class=\\\"dropdown-menu\\\" #ulElement [style.overflow-y]=\\\"needScrollbar ? 'scroll': 'auto'\\\" [style.height]=\\\"needScrollbar ? guiHeight: 'auto'\\\"> <ng-template ngFor let-match let-i=\\\"index\\\" [ngForOf]=\\\"matches\\\"> <li #liElements *ngIf=\\\"match.isHeader()\\\" class=\\\"dropdown-header\\\">{{ match }}</li> <li #liElements *ngIf=\\\"!match.isHeader()\\\" [class.active]=\\\"isActive(match)\\\" (mouseenter)=\\\"selectActive(match)\\\"> <a href=\\\"#\\\" (click)=\\\"selectMatch(match, $event)\\\" tabindex=\\\"-1\\\"> <ng-template [ngTemplateOutlet]=\\\"itemTemplate || bsItemTemplate\\\" [ngTemplateOutletContext]=\\\"{item:match.item, index:i, match:match, query:query}\\\"></ng-template> </a> </li> </ng-template> </ul> </ng-template> <!-- Bootstrap 4 options list template --> <ng-template #bs4Template> <ng-template ngFor let-match let-i=\\\"index\\\" [ngForOf]=\\\"matches\\\"> <h6 *ngIf=\\\"match.isHeader()\\\" class=\\\"dropdown-header\\\">{{ match }}</h6> <ng-template [ngIf]=\\\"!match.isHeader()\\\"> <button #liElements class=\\\"dropdown-item\\\" (click)=\\\"selectMatch(match, $event)\\\" (mouseenter)=\\\"selectActive(match)\\\" [class.active]=\\\"isActive(match)\\\"> <ng-template [ngTemplateOutlet]=\\\"itemTemplate || bsItemTemplate\\\" [ngTemplateOutletContext]=\\\"{item:match.item, index:i, match:match, query:query}\\\"></ng-template> </button> </ng-template> </ng-template> </ng-template> \",\n  host: {\n    class: 'dropdown open',\n    '[class.dropdown-menu]': 'isBs4',\n    '[style.overflow-y]' : `isBs4 && needScrollbar ? 'scroll': 'visible'`,\n    '[style.height]': `isBs4 && needScrollbar ? guiHeight: 'auto'`,\n    '[style.visibility]': `typeaheadScrollable ? 'hidden' : 'visible'`,\n    '[class.dropup]': 'dropup',\n    style: 'position: absolute;display: block;'\n  }\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Renderer2, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'ulElement': [{ type: ViewChild, args: ['ulElement', ] },],\n'liElements': [{ type: ViewChildren, args: ['liElements', ] },],\n'focusLost': [{ type: HostListener, args: ['mouseleave', ] },{ type: HostListener, args: ['blur', ] },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/* tslint:disable:max-file-line-count */\nimport {\n  ChangeDetectorRef,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  HostListener,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  Renderer2,\n  TemplateRef,\n  ViewContainerRef\n} from '@angular/core';\nimport { NgControl } from '@angular/forms';\nimport 'rxjs/add/observable/from';\nimport 'rxjs/add/operator/debounceTime';\nimport 'rxjs/add/operator/filter';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/mergeMap';\nimport 'rxjs/add/operator/toArray';\n\nimport { Observable } from 'rxjs/Observable';\nimport { Subscription } from 'rxjs/Subscription';\nimport { ComponentLoader, ComponentLoaderFactory } from '../component-loader';\nimport { TypeaheadContainerComponent } from './typeahead-container.component';\nimport { TypeaheadMatch } from './typeahead-match.class';\nimport { getValueFromObject, latinize, tokenize } from './typeahead-utils';\n\n\nexport class TypeaheadDirective implements OnInit, OnDestroy {\n  /** options source, can be Array of strings, objects or\n   * an Observable for external matching process\n   */\n   typeahead: any;\n  /** minimal no of characters that needs to be entered before\n   * typeahead kicks-in. When set to 0, typeahead shows on focus with full\n   * list of options (limited as normal by typeaheadOptionsLimit)\n   */\n   typeaheadMinLength: number = void 0;\n  /** minimal wait time after last character typed before typeahead kicks-in */\n   typeaheadWaitMs: number;\n  /** maximum length of options items list */\n   typeaheadOptionsLimit: number;\n  /** when options source is an array of objects, the name of field\n   * that contains the options value, we use array item as option in case\n   * of this field is missing. Supports nested properties and methods.\n   */\n   typeaheadOptionField: string;\n  /** when options source is an array of objects, the name of field that\n   * contains the group value, matches are grouped by this field when set.\n   */\n   typeaheadGroupField: string;\n  /** should be used only in case of typeahead attribute is array.\n   * If true - loading of options will be async, otherwise - sync.\n   * true make sense if options array is large.\n   */\n   typeaheadAsync: boolean = void 0;\n  /** match latin symbols.\n   * If true the word súper would match super and vice versa.\n   */\n   typeaheadLatinize = true;\n  /** break words with spaces. If true the text \"exact phrase\"\n   * here match would match with match exact phrase here\n   * but not with phrase here exact match (kind of \"google style\").\n   */\n   typeaheadSingleWords = true;\n  /** should be used only in case typeaheadSingleWords attribute is true.\n   * Sets the word delimiter to break words. Defaults to space.\n   */\n   typeaheadWordDelimiters = ' ';\n  /** should be used only in case typeaheadSingleWords attribute is true.\n   * Sets the word delimiter to match exact phrase.\n   * Defaults to simple and double quotes.\n   */\n   typeaheadPhraseDelimiters = '\\'\"';\n  /** used to specify a custom item template.\n   * Template variables exposed are called item and index;\n   */\n   typeaheadItemTemplate: TemplateRef<any>;\n  /** used to specify a custom options list template.\n   * Template variables: matches, itemTemplate, query\n   */\n   optionsListTemplate: TemplateRef<any>;\n  /** specifies if typeahead is scrollable  */\n   typeaheadScrollable = false;\n  /** specifies number of options to show in scroll view  */\n   typeaheadOptionsInScrollableView = 5;\n  /** fired when 'busy' state of this component was changed,\n   * fired on async mode only, returns boolean\n   */\n   typeaheadLoading: EventEmitter<boolean> = new EventEmitter();\n  /** fired on every key event and returns true\n   * in case of matches are not detected\n   */\n   typeaheadNoResults: EventEmitter<boolean> = new EventEmitter();\n  /** fired when option was selected, return object with data of this option */\n   typeaheadOnSelect: EventEmitter<TypeaheadMatch> = new EventEmitter();\n  /** fired when blur event occurres. returns the active item */\n   typeaheadOnBlur: EventEmitter<any> = new EventEmitter();\n\n  /**\n   * A selector specifying the element the typeahead should be appended to.\n   * Currently only supports \"body\".\n   */\n   container: string;\n\n  /** This attribute indicates that the dropdown should be opened upwards */\n   dropup = false;\n\n  // not yet implemented\n  /** if false restrict model values to the ones selected from the popup only will be provided */\n  // @Input() protected typeaheadEditable:boolean;\n  /** if false the first match automatically will not be focused as you type */\n  // @Input() protected typeaheadFocusFirst:boolean;\n  /** format the ng-model result after selection */\n  // @Input() protected typeaheadInputFormatter:any;\n  /** if true automatically select an item when there is one option that exactly matches the user input */\n  // @Input() protected typeaheadSelectOnExact:boolean;\n  /**  if true select the currently highlighted match on blur */\n  // @Input() protected typeaheadSelectOnBlur:boolean;\n  /**  if false don't focus the input element the typeahead directive is associated with on selection */\n    // @Input() protected typeaheadFocusOnSelect:boolean;\n\n  _container: TypeaheadContainerComponent;\n  isTypeaheadOptionsListActive = false;\n\n  protected keyUpEventEmitter: EventEmitter<any> = new EventEmitter();\n  protected _matches: TypeaheadMatch[];\n  protected placement = 'bottom-left';\n  // protected popup:ComponentRef<TypeaheadContainerComponent>;\n\n  private _typeahead: ComponentLoader<TypeaheadContainerComponent>;\n  private _subscriptions: Subscription[] = [];\n  private _outsideClickListener: Function;\n\n  constructor(private ngControl: NgControl,\n              private element: ElementRef,\n              viewContainerRef: ViewContainerRef,\n              private renderer: Renderer2,\n              cis: ComponentLoaderFactory,\n              private changeDetection: ChangeDetectorRef) {\n    this._typeahead = cis.createLoader<TypeaheadContainerComponent>(\n      element,\n      viewContainerRef,\n      renderer\n    );\n  }\n\n  ngOnInit(): void {\n    this.typeaheadOptionsLimit = this.typeaheadOptionsLimit || 20;\n    this.typeaheadMinLength =\n      this.typeaheadMinLength === void 0 ? 1 : this.typeaheadMinLength;\n    this.typeaheadWaitMs = this.typeaheadWaitMs || 0;\n\n    // async should be false in case of array\n    if (\n      this.typeaheadAsync === undefined &&\n      !(this.typeahead instanceof Observable)\n    ) {\n      this.typeaheadAsync = false;\n    }\n\n    if (this.typeahead instanceof Observable) {\n      this.typeaheadAsync = true;\n    }\n\n    if (this.typeaheadAsync) {\n      this.asyncActions();\n    } else {\n      this.syncActions();\n    }\n  }\n\n  \n  onInput(e: any): void {\n    // For `<input>`s, use the `value` property. For others that don't have a\n    // `value` (such as `<span contenteditable=\"true\">`), use either\n    // `textContent` or `innerText` (depending on which one is supported, i.e.\n    // Firefox or IE).\n    const value =\n      e.target.value !== undefined\n        ? e.target.value\n        : e.target.textContent !== undefined\n        ? e.target.textContent\n        : e.target.innerText;\n    if (value != null && value.trim().length >= this.typeaheadMinLength) {\n      this.typeaheadLoading.emit(true);\n      this.keyUpEventEmitter.emit(e.target.value);\n    } else {\n      this.typeaheadLoading.emit(false);\n      this.typeaheadNoResults.emit(false);\n      this.hide();\n    }\n  }\n\n  \n  onChange(e: any): void {\n    if (this._container) {\n      // esc\n      if (e.keyCode === 27) {\n        this.hide();\n\n        return;\n      }\n\n      // up\n      if (e.keyCode === 38) {\n        this._container.prevActiveMatch();\n\n        return;\n      }\n\n      // down\n      if (e.keyCode === 40) {\n        this._container.nextActiveMatch();\n\n        return;\n      }\n\n      // enter, tab\n      if (e.keyCode === 13 || e.keyCode === 9) {\n        this._container.selectActiveMatch();\n\n        return;\n      }\n    }\n  }\n\n  \n  \n  onFocus(): void {\n    if (this.typeaheadMinLength === 0) {\n      this.typeaheadLoading.emit(true);\n      this.keyUpEventEmitter.emit('');\n    }\n  }\n\n  \n  onBlur(): void {\n    if (this._container && !this._container.isFocused) {\n      this.typeaheadOnBlur.emit(this._container.active);\n    }\n  }\n\n  \n  onKeydown(e: any): void {\n    // no container - no problems\n    if (!this._container) {\n      return;\n    }\n\n    // if an item is visible - prevent form submission\n    if (e.keyCode === 13) {\n      e.preventDefault();\n\n      return;\n    }\n\n    // if an item is visible - don't change focus\n    if (e.keyCode === 9) {\n      e.preventDefault();\n\n      return;\n    }\n  }\n\n  changeModel(match: TypeaheadMatch): void {\n    const valueStr: string = match.value;\n    this.ngControl.viewToModelUpdate(valueStr);\n    (this.ngControl.control).setValue(valueStr);\n    this.changeDetection.markForCheck();\n    this.hide();\n  }\n\n  get matches(): any[] {\n    return this._matches;\n  }\n\n  show(): void {\n    this._typeahead\n      .attach(TypeaheadContainerComponent)\n      // todo: add append to body, after updating positioning service\n      .to(this.container)\n      .position({attachment: `${this.dropup ? 'top' : 'bottom'} left`})\n      .show({\n        typeaheadRef: this,\n        placement: this.placement,\n        animation: false,\n        dropup: this.dropup\n      });\n\n    this._outsideClickListener = this.renderer.listen('document', 'click', () => {\n      this.onOutsideClick();\n    });\n\n    this._container = this._typeahead.instance;\n    this._container.parent = this;\n    // This improves the speed as it won't have to be done for each list item\n    const normalizedQuery = (this.typeaheadLatinize\n      ? latinize(this.ngControl.control.value)\n      : this.ngControl.control.value)\n      .toString()\n      .toLowerCase();\n    this._container.query = this.typeaheadSingleWords\n      ? tokenize(\n        normalizedQuery,\n        this.typeaheadWordDelimiters,\n        this.typeaheadPhraseDelimiters\n      )\n      : normalizedQuery;\n    this._container.matches = this._matches;\n    this.element.nativeElement.focus();\n  }\n\n  hide(): void {\n    if (this._typeahead.isShown) {\n      this._typeahead.hide();\n      this._outsideClickListener();\n      this._container = null;\n    }\n  }\n\n  onOutsideClick(): void {\n    if (this._container && !this._container.isFocused) {\n      this.hide();\n    }\n  }\n\n  ngOnDestroy(): any {\n    // clean up subscriptions\n    for (const sub of this._subscriptions) {\n      sub.unsubscribe();\n    }\n    this._typeahead.dispose();\n  }\n\n  protected asyncActions(): void {\n    this._subscriptions.push(\n      this.keyUpEventEmitter\n        .debounceTime(this.typeaheadWaitMs)\n        .mergeMap(() => this.typeahead)\n        .subscribe((matches: any[]) => {\n          this.finalizeAsyncCall(matches);\n        })\n    );\n  }\n\n  protected syncActions(): void {\n    this._subscriptions.push(\n      this.keyUpEventEmitter\n        .debounceTime(this.typeaheadWaitMs)\n        .mergeMap((value: string) => {\n          const normalizedQuery = this.normalizeQuery(value);\n\n          return Observable.from(this.typeahead)\n            .filter((option: any) => {\n              return (\n                option &&\n                this.testMatch(this.normalizeOption(option), normalizedQuery)\n              );\n            })\n            .toArray();\n        })\n        .subscribe((matches: any[]) => {\n          this.finalizeAsyncCall(matches);\n        })\n    );\n  }\n\n  protected normalizeOption(option: any): any {\n    const optionValue: string = getValueFromObject(\n      option,\n      this.typeaheadOptionField\n    );\n    const normalizedOption = this.typeaheadLatinize\n      ? latinize(optionValue)\n      : optionValue;\n\n    return normalizedOption.toLowerCase();\n  }\n\n  protected normalizeQuery(value: string): any {\n    // If singleWords, break model here to not be doing extra work on each\n    // iteration\n    let normalizedQuery: any = (this.typeaheadLatinize\n      ? latinize(value)\n      : value)\n      .toString()\n      .toLowerCase();\n    normalizedQuery = this.typeaheadSingleWords\n      ? tokenize(\n        normalizedQuery,\n        this.typeaheadWordDelimiters,\n        this.typeaheadPhraseDelimiters\n      )\n      : normalizedQuery;\n\n    return normalizedQuery;\n  }\n\n  protected testMatch(match: string, test: any): boolean {\n    let spaceLength: number;\n\n    if (typeof test === 'object') {\n      spaceLength = test.length;\n      for (let i = 0; i < spaceLength; i += 1) {\n        if (test[i].length > 0 && match.indexOf(test[i]) < 0) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n\n    return match.indexOf(test) >= 0;\n  }\n\n  protected finalizeAsyncCall(matches: any[]): void {\n    this.prepareMatches(matches);\n\n    this.typeaheadLoading.emit(false);\n    this.typeaheadNoResults.emit(!this.hasMatches());\n\n    if (!this.hasMatches()) {\n      this.hide();\n\n      return;\n    }\n\n    if (this._container) {\n      // This improves the speed as it won't have to be done for each list item\n      const normalizedQuery = (this.typeaheadLatinize\n        ? latinize(this.ngControl.control.value)\n        : this.ngControl.control.value)\n        .toString()\n        .toLowerCase();\n      this._container.query = this.typeaheadSingleWords\n        ? tokenize(\n          normalizedQuery,\n          this.typeaheadWordDelimiters,\n          this.typeaheadPhraseDelimiters\n        )\n        : normalizedQuery;\n      this._container.matches = this._matches;\n    } else {\n      this.show();\n    }\n  }\n\n  protected prepareMatches(options: any[]): void {\n    const limited: any[] = options.slice(0, this.typeaheadOptionsLimit);\n\n    if (this.typeaheadGroupField) {\n      let matches: TypeaheadMatch[] = [];\n\n      // extract all group names\n      const groups = limited\n        .map((option: any) =>\n          getValueFromObject(option, this.typeaheadGroupField)\n        )\n        .filter((v: string, i: number, a: any[]) => a.indexOf(v) === i);\n\n      groups.forEach((group: string) => {\n        // add group header to array of matches\n        matches.push(new TypeaheadMatch(group, group, true));\n\n        // add each item of group to array of matches\n        matches = matches.concat(\n          limited\n            .filter(\n              (option: any) =>\n                getValueFromObject(option, this.typeaheadGroupField) === group\n            )\n            .map(\n              (option: any) =>\n                new TypeaheadMatch(\n                  option,\n                  getValueFromObject(option, this.typeaheadOptionField)\n                )\n            )\n        );\n      });\n\n      this._matches = matches;\n    } else {\n      this._matches = limited.map(\n        (option: any) =>\n          new TypeaheadMatch(\n            option,\n            getValueFromObject(option, this.typeaheadOptionField)\n          )\n      );\n    }\n  }\n\n  protected hasMatches(): boolean {\n    return this._matches.length > 0;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{selector: '[typeahead]', exportAs: 'bs-typeahead'}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: NgControl, },\n{type: ElementRef, },\n{type: ViewContainerRef, },\n{type: Renderer2, },\n{type: ComponentLoaderFactory, },\n{type: ChangeDetectorRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'typeahead': [{ type: Input },],\n'typeaheadMinLength': [{ type: Input },],\n'typeaheadWaitMs': [{ type: Input },],\n'typeaheadOptionsLimit': [{ type: Input },],\n'typeaheadOptionField': [{ type: Input },],\n'typeaheadGroupField': [{ type: Input },],\n'typeaheadAsync': [{ type: Input },],\n'typeaheadLatinize': [{ type: Input },],\n'typeaheadSingleWords': [{ type: Input },],\n'typeaheadWordDelimiters': [{ type: Input },],\n'typeaheadPhraseDelimiters': [{ type: Input },],\n'typeaheadItemTemplate': [{ type: Input },],\n'optionsListTemplate': [{ type: Input },],\n'typeaheadScrollable': [{ type: Input },],\n'typeaheadOptionsInScrollableView': [{ type: Input },],\n'typeaheadLoading': [{ type: Output },],\n'typeaheadNoResults': [{ type: Output },],\n'typeaheadOnSelect': [{ type: Output },],\n'typeaheadOnBlur': [{ type: Output },],\n'container': [{ type: Input },],\n'dropup': [{ type: Input },],\n'onInput': [{ type: HostListener, args: ['input', ['$event'], ] },],\n'onChange': [{ type: HostListener, args: ['keyup', ['$event'], ] },],\n'onFocus': [{ type: HostListener, args: ['click', ] },{ type: HostListener, args: ['focus', ] },],\n'onBlur': [{ type: HostListener, args: ['blur', ] },],\n'onKeydown': [{ type: HostListener, args: ['keydown', ['$event'], ] },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule, ModuleWithProviders } from '@angular/core';\n\nimport { TypeaheadContainerComponent } from './typeahead-container.component';\nimport { TypeaheadDirective } from './typeahead.directive';\nimport { ComponentLoaderFactory } from '../component-loader';\nimport { PositioningService } from '../positioning';\n\n\nexport class TypeaheadModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: TypeaheadModule,\n      providers: [ComponentLoaderFactory, PositioningService]\n    };\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  imports: [CommonModule],\n  declarations: [TypeaheadContainerComponent, TypeaheadDirective],\n  exports: [TypeaheadContainerComponent, TypeaheadDirective],\n  entryComponents: [TypeaheadContainerComponent]\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Facet } from './models/facet';\nexport class FacetSelect {\n/**\n * @param {?} facet\n */\nconstructor(public facet: Facet) {}\n}\n\nfunction FacetSelect_tsickle_Closure_declarations() {\n/** @type {?} */\nFacetSelect.prototype.facet;\n}\n\nexport class FacetDeselect {\n/**\n * @param {?} facet\n */\nconstructor(public facet: Facet) {}\n}\n\nfunction FacetDeselect_tsickle_Closure_declarations() {\n/** @type {?} */\nFacetDeselect.prototype.facet;\n}\n\nexport class FacetDeselectAll {\nconstructor() {}\n}\n\nexport type FacetEvent = FacetSelect | FacetDeselect | FacetDeselectAll;","import { Component, Input, EventEmitter, Output } from '@angular/core';\nimport { FacetEvent, FacetSelect, FacetDeselect, FacetDeselectAll } from './facet-events';\nimport { Facet } from './models/facet';\nexport class FacetContainerComponent {\n\n     header: string = 'Selected:';\n     clearTooltip: string = 'Clear All';\n     emptyText: string = 'No Items';\n     facets: Facet[] = [];\n\n     facetsChange: EventEmitter<Facet[]> = new EventEmitter<Facet[]>();\n     events: EventEmitter<FacetEvent> = new EventEmitter<FacetEvent>();\n/**\n * @param {?} facet\n * @return {?}\n */\nselectFacet(facet: Facet): void {\n        // push the facet on to the list\n        this.facets.push(facet);\n\n        // update the two way binding\n        this.facetsChange.emit(this.facets);\n\n        // trigger event\n        this.triggerEvent(new FacetSelect(facet));\n    }\n/**\n * @param {?} facet\n * @return {?}\n */\ndeselectFacet(facet: Facet): void {\n\n        // find the index of the item in the selected array\n        let /** @type {?} */ idx = this.facets.findIndex(selectedFacet => facet === selectedFacet);\n\n        // if match there was no match then finish\n        if (idx === -1) {\n            return;\n        }\n\n        // remove the last item\n        this.facets.splice(idx, 1);\n\n        // update the two way binding\n        this.facetsChange.emit(this.facets);\n\n        // trigger event\n        this.triggerEvent(new FacetDeselect(facet));\n    }\n/**\n * @return {?}\n */\ndeselectAllFacets(): void {\n\n        // empty the selected array\n        this.facets = [];\n\n        // update the two way binding\n        this.facetsChange.emit(this.facets);\n\n        // trigger event\n        this.triggerEvent(new FacetDeselectAll());\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nprivate triggerEvent(event: FacetEvent) {\n        this.events.next(event);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-facet-container',\n    template: `\n      <!-- Display Any Selected Facets -->\n      <div class=\"facets-selected-container\">\n\n          <!-- Display Title an Clear Button -->\n          <div class=\"facets-selected-header-container\">\n\n              <!-- Show The Selected Text -->\n              <span class=\"facets-selected-header-label\">{{ header }}</span>\n\n              <!-- Add a Clear Button -->\n              <div class=\"facets-selected-clear-button\" tabindex=\"0\" [tooltip]=\"clearTooltip\" placement=\"left\" container=\"body\" (click)=\"deselectAllFacets()\"\n                  (keyup.enter)=\"deselectAllFacets()\" *ngIf=\"facets.length > 0\">\n\n                  <svg class=\"facets-selected-clear-graphic\" viewBox=\"0 0 19 12\" shape-rendering=\"geometricPrecision\">\n                      <rect class=\"light-grey\" x=\"0\" y=\"2\" width=\"7\" height=\"2\"></rect>\n                      <rect class=\"dark-grey\" x=\"0\" y=\"5\" width=\"9\" height=\"2\"></rect>\n                      <rect class=\"light-grey\" x=\"0\" y=\"8\" width=\"7\" height=\"2\"></rect>\n                      <path class=\"dark-grey\" d=\"M9,1 h1 l9,9 v1 h-1 l-9,-9 v-1 Z\"></path>\n                      <path class=\"dark-grey\" d=\"M9,11 v-1 l9,-9 h1 v1 l-9,9 h-1 Z\"></path>\n                  </svg>\n              </div>\n\n          </div>\n\n          <!-- Display Tags For Selected Items -->\n          <div class=\"facets-selected-list\">\n\n              <!-- Show Selected Tags -->\n              <div class=\"facet-selected-tag\" tabindex=\"0\" *ngFor=\"let facet of facets\" (mousedown)=\"$event.preventDefault()\" (click)=\"deselectFacet(facet)\" (keyup.enter)=\"deselectFacet(facet)\">\n\n                  <!-- Display Label -->\n                  <span class=\"facet-selected-tag-label\">{{ facet.title }}</span>\n\n                  <!-- Display Remove Icon -->\n                  <span class=\"hpe-icon hpe-close\"></span>\n              </div>\n\n          </div>\n\n          <!-- Show Message Here if No Facets Selected -->\n          <p class=\"facets-selected-none-label\" *ngIf=\"emptyText && facets.length === 0\">{{ emptyText }}</p>\n\n      </div>\n\n      <!-- Any Facet Elements Should be Added Here By User -->\n      <div class=\"facets-region\">\n          <ng-content></ng-content>\n      </div>\n    `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'header': [{ type: Input },],\n'clearTooltip': [{ type: Input },],\n'emptyText': [{ type: Input },],\n'facets': [{ type: Input },],\n'facetsChange': [{ type: Output },],\n'events': [{ type: Output },],\n};\n}\n\nfunction FacetContainerComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nFacetContainerComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFacetContainerComponent.ctorParameters;\n/** @type {?} */\nFacetContainerComponent.propDecorators;\n/** @type {?} */\nFacetContainerComponent.prototype.header;\n/** @type {?} */\nFacetContainerComponent.prototype.clearTooltip;\n/** @type {?} */\nFacetContainerComponent.prototype.emptyText;\n/** @type {?} */\nFacetContainerComponent.prototype.facets;\n/** @type {?} */\nFacetContainerComponent.prototype.facetsChange;\n/** @type {?} */\nFacetContainerComponent.prototype.events;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Host, Input, Output, EventEmitter, OnInit, ElementRef } from '@angular/core';\nimport { FacetContainerComponent } from '../../facet-container.component';\nimport { FacetEvent, FacetDeselectAll, FacetDeselect, FacetSelect } from '../../facet-events';\nimport { Facet } from '../../models/facet';\nimport { Subject } from 'rxjs/Subject';\nimport'rxjs/add/operator/filter';\nexport class FacetBaseComponent implements OnInit {\n\n     selected: Facet[] = [];\n     selectedChange: EventEmitter<Facet[]> = new EventEmitter<Facet[]>();\n\n     events: Subject<FacetEvent> = new Subject<FacetEvent>();\n/**\n * @param {?} facetContainer\n * @param {?} _elementRef\n */\nconstructor(\nprivate facetContainer: FacetContainerComponent,\npublic _elementRef: ElementRef) {\n\n        if (facetContainer) {\n\n            // subscribe to any deselect events from the facet container\n            facetContainer.events.filter(event => event instanceof FacetDeselect)\n                .filter((event: FacetDeselect) => !!this.selected.find(facet => facet === event.facet))\n                .subscribe((event: FacetDeselect) => this.deselectFacet(event.facet));\n\n            // subscribe to any deselect all events from facet container\n            facetContainer.events.filter(event => event instanceof FacetDeselectAll).subscribe(_ => this.deselectAll());\n\n        }\n    }\n/**\n * @return {?}\n */\nngOnInit(): void {\n        // check if there should be any facets initially selected\n        if (this.facetContainer) {\n            this.selected.forEach(facet => this.facetContainer.selectFacet(facet));\n        }\n    }\n/**\n * @param {?} facet\n * @return {?}\n */\nselectFacet(facet: Facet): void {\n\n        // if the facet is disabled it should not be selected\n        if (facet.disabled) {\n            return;\n        }\n\n        // add the facet to the list of selected facets\n        this.selected.push(facet);\n\n        // send the new value to the event emitter\n        this.selectedChange.emit(this.selected);\n\n        // fire the event to the observable\n        this.triggerEvent(new FacetSelect(facet));\n\n        // tell the facet container about the selected facet\n        if (this.facetContainer) {\n            this.facetContainer.selectFacet(facet);\n        }\n    }\n/**\n * @param {?} facet\n * @return {?}\n */\ndeselectFacet(facet: Facet): void {\n\n        // find facet to remove\n        let /** @type {?} */ index = this.selected.findIndex(selectedFacet => selectedFacet === facet);\n\n        // only continue if facet is found\n        if (index !== -1) {\n\n            // remove the facet from the selected list\n            this.selected.splice(index, 1);\n\n            // emit the changes to selected event emitter\n            this.selectedChange.emit(this.selected);\n\n            // fire the event to the observable\n            this.triggerEvent(new FacetDeselect(facet));\n\n            // deselect the facet in the facet container\n            if (this.facetContainer) {\n                this.facetContainer.deselectFacet(facet);\n            }\n        }\n    }\n/**\n * @return {?}\n */\ndeselectAll(): void {\n\n        // remove all selected facets\n        this.selected = [];\n\n        // fire the event to the observable\n        this.triggerEvent(new FacetDeselectAll());\n\n        // emit the changes to the selected event emitter\n        this.selectedChange.emit(this.selected);\n    }\n/**\n * @param {?} facet\n * @return {?}\n */\ntoggleFacetSelection(facet: Facet): void {\n\n        // if the facet is selected then deselect - otherwise select it\n        if (this.isFacetSelected(facet)) {\n            this.deselectFacet(facet);\n        } else {\n            this.selectFacet(facet);\n        }\n\n    }\n/**\n * @param {?} facet\n * @return {?}\n */\nisFacetSelected(facet: Facet): boolean {\n        // determine if a facet is currently selected\n        return !!this.selected.find(selectedFacet => selectedFacet === facet);\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nprivate triggerEvent(event: FacetEvent): void {\n        this.events.next(event);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-facet-base',\n    template: '',\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: FacetContainerComponent, decorators: [{ type: Host }, ]},\n{type: ElementRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'selected': [{ type: Input },],\n'selectedChange': [{ type: Output },],\n'events': [{ type: Output },],\n};\n}\n\nfunction FacetBaseComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nFacetBaseComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFacetBaseComponent.ctorParameters;\n/** @type {?} */\nFacetBaseComponent.propDecorators;\n/** @type {?} */\nFacetBaseComponent.prototype.selected;\n/** @type {?} */\nFacetBaseComponent.prototype.selectedChange;\n/** @type {?} */\nFacetBaseComponent.prototype.events;\n/** @type {?} */\nFacetBaseComponent.prototype.facetContainer;\n/** @type {?} */\nFacetBaseComponent.prototype._elementRef;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Output, EventEmitter, Input } from '@angular/core';\nexport class FacetHeaderComponent {\n\n     header: string;\n     canExpand: boolean = true;    \n     expanded: boolean = true;\n     expandedChange: EventEmitter<boolean> = new EventEmitter<boolean>();\n/**\n * @return {?}\n */\ntoggleExpand(): void {\n\n        // if not expandable then do nothing\n        if (this.canExpand) {\n            this.expanded = !this.expanded;\n            this.expandedChange.emit(this.expanded);\n        }\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-facet-header',\n    template: `\n      <span class=\"facet-header-title\">{{ header }}</span>\n      <span class=\"hpe-icon\" [class.hpe-down]=\"expanded\" [class.hpe-previous]=\"!expanded\" *ngIf=\"canExpand\"></span>\n    `,\n    host: {\n        'tabindex': '0',\n        '(click)': 'toggleExpand()',\n        '(keyup.enter)': 'toggleExpand()'\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'header': [{ type: Input },],\n'canExpand': [{ type: Input },],\n'expanded': [{ type: Input },],\n'expandedChange': [{ type: Output },],\n};\n}\n\nfunction FacetHeaderComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nFacetHeaderComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFacetHeaderComponent.ctorParameters;\n/** @type {?} */\nFacetHeaderComponent.propDecorators;\n/** @type {?} */\nFacetHeaderComponent.prototype.header;\n/** @type {?} */\nFacetHeaderComponent.prototype.canExpand;\n/** @type {?} */\nFacetHeaderComponent.prototype.expanded;\n/** @type {?} */\nFacetHeaderComponent.prototype.expandedChange;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Input } from '@angular/core';\nimport { FacetBaseComponent } from '../base/facet-base/facet-base.component';\nimport { Facet } from '../models/facet';\nexport class FacetCheckListComponent extends FacetBaseComponent {\n\n     facets: Facet[] = [];\n     header: string;\n     scrollbar: boolean = true;\n     expanded: boolean = true;\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-facet-check-list',\n    template: `\n      <ux-facet-header [header]=\"header\" [(expanded)]=\"expanded\"></ux-facet-header>\n\n      <!-- Create a container which will show when section is expanded -->\n      <div class=\"facet-check-list-container\" [class.facet-check-list-scrollbar]=\"scrollbar\" *ngIf=\"expanded\">\n\n          <!-- Iterate through each possible facet -->\n          <div class=\"facet-check-list-item\" *ngFor=\"let facet of facets\" [class.facet-active]=\"isFacetSelected(facet)\" tabindex=\"0\"\n              (click)=\"toggleFacetSelection(facet)\" (keyup.enter)=\"toggleFacetSelection(facet)\" [class.disabled]=\"facet.disabled\">\n\n              <!-- Show check icon to indicate the state -->\n              <span class=\"facet-check-list-item-check\">\n                  <span class=\"hpe-icon hpe-active\"></span>\n              </span>\n\n              <!-- Display the title -->\n              <span class=\"facet-check-list-item-title\">{{ facet.title }}</span>\n\n              <!-- Display the count if specified -->\n              <span class=\"facet-check-list-item-count\" *ngIf=\"facet.count !== undefined\">({{ facet.count }})</span>\n          </div>\n      </div>\n    `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'facets': [{ type: Input },],\n'header': [{ type: Input },],\n'scrollbar': [{ type: Input },],\n'expanded': [{ type: Input },],\n};\n}\n\nfunction FacetCheckListComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nFacetCheckListComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFacetCheckListComponent.ctorParameters;\n/** @type {?} */\nFacetCheckListComponent.propDecorators;\n/** @type {?} */\nFacetCheckListComponent.prototype.facets;\n/** @type {?} */\nFacetCheckListComponent.prototype.header;\n/** @type {?} */\nFacetCheckListComponent.prototype.scrollbar;\n/** @type {?} */\nFacetCheckListComponent.prototype.expanded;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, OnInit, Input, Host, Pipe, PipeTransform } from '@angular/core';\nimport { FacetBaseComponent } from '../base/facet-base/facet-base.component';\nimport { Observable } from 'rxjs/Observable';\nimport { Facet } from '../models/facet';\nimport { FacetContainerComponent } from '../facet-container.component';\nimport { TypeaheadMatch } from 'ngx-bootstrap/typeahead';\nimport'rxjs/add/operator/map';\nimport'rxjs/add/observable/of';\nimport { Observer } from 'rxjs/Observer';\nexport class FacetTypeaheadListComponent extends FacetBaseComponent implements OnInit {\n\n     facets: Facet[] | Observable<Facet[]>;\n     header: string;\n     expanded: boolean = true;\n     typeaheadConfig: FacetTypeaheadListConfig = {};\n     suggestions: Facet[] = [];\n     simplified: boolean = true;\n\n    typeaheadOptions: Observable<Facet[]>;\n    searchQuery: string;\nprivate _nativeElement: HTMLElement = /** @type {?} */(( this._elementRef.nativeElement as HTMLElement));\nprivate _defaultTypeaheadConfig: FacetTypeaheadListConfig = {\n        placeholder: '',\n        maxResults: 50,\n        minCharacters: 1\n    };\n/**\n * @return {?}\n */\nngOnInit() {\n\n        // wrap the observable and filter out any already selected items or any disabled items\n        if (this.facets instanceof Observable) {\n\n            // handle an observable of data\n            this.typeaheadOptions = Observable.from(this.facets).map((facets: Facet[]) => {\n\n                // remove disabled facets, selected facets and facets that dont match search term\n                return facets.filter(facet => !facet.disabled)\n                    .filter(facet => !this.selected.find(selectedFacet => selectedFacet === facet))\n                    .filter(facet => facet.title.toUpperCase().includes(this.searchQuery.toUpperCase()));\n            });\n\n        } else {\n\n            // handle an array of data\n            this.typeaheadOptions = Observable.of(this.facets).map((facets: Facet[]) => {\n\n                // remove disabled facets, selected facets and facets that dont match search term\n                return facets.filter(facet => !facet.disabled)\n                    .filter(facet => !this.selected.find(selectedFacet => selectedFacet === facet))\n                    .filter(facet => facet.title.toUpperCase().includes(this.searchQuery.toUpperCase()));\n            });\n        }\n\n        // provide default values for typeahead config\n        for (let /** @type {?} */ prop in this._defaultTypeaheadConfig) {\n\n            // check if prop has been defined in the users typeahead config - if not set default value\n            if (this.typeaheadConfig.hasOwnProperty(prop) === false) {\n                this.typeaheadConfig[prop] = this._defaultTypeaheadConfig[prop];\n            }\n        }\n    }\n/**\n * @param {?} typeaheadOption\n * @return {?}\n */\nselectOption(typeaheadOption: TypeaheadMatch) {\n\n        // check to make sure that the item is not currently selected\n        if (this.selected.find(facet => facet === typeaheadOption.item)) {\n            return;\n        }\n\n        // select the facet\n        this.selectFacet(typeaheadOption.item);\n\n        // clear the typeahead\n        this.searchQuery = '';\n    }\n/**\n * @return {?}\n */\nscrollToFocused(): void {\n\n        let /** @type {?} */ dropdown = this._nativeElement.querySelector('.dropdown-menu');\n\n        // delay to allow the typeahead ui to update\n        setTimeout(() => {\n\n            // find the currently active element if there is one\n            let /** @type {?} */ activeElement = dropdown.querySelector('.dropdown-menu > li.active');\n\n            if (activeElement) {\n\n                // check if element is not in view\n                let /** @type {?} */ elementBounds = activeElement.getBoundingClientRect();\n                let /** @type {?} */ dropdownBounds = dropdown.getBoundingClientRect();\n\n                if (elementBounds.top < dropdownBounds.top) {\n                    dropdown.scrollTop += elementBounds.top - dropdownBounds.top;\n                }\n\n                if (elementBounds.bottom > dropdownBounds.bottom) {\n                    dropdown.scrollTop += elementBounds.bottom - dropdownBounds.bottom;\n                }\n            }\n        });\n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-facet-typeahead-list',\n    template: `\n      <ux-facet-header [header]=\"header\" [(expanded)]=\"expanded\"></ux-facet-header>\n\n      <div class=\"facet-typeahead-list-container\" *ngIf=\"expanded\">\n\n          <div class=\"facet-typeahead-list-selected-container\" *ngIf=\"suggestions?.length > 0\">\n\n              <div class=\"facet-typeahead-list-selected-option\" tabindex=\"0\" *ngFor=\"let facet of suggestions\" (click)=\"toggleFacetSelection(facet)\"\n                  (keyup.enter)=\"toggleFacetSelection(facet)\">\n\n                  <ux-checkbox [clickable]=\"false\" [value]=\"isFacetSelected(facet)\" [simplified]=\"simplified\">\n                      <span class=\"facet-typeahead-list-selected-option-title\">{{ facet.title }}</span>\n                      <span class=\"facet-typeahead-list-selected-option-count\">({{ facet.count }})</span>\n                  </ux-checkbox>\n\n              </div>\n\n          </div>\n\n          <div class=\"facet-typeahead-list-control\">\n\n              <!-- Create Typeahead Control -->\n              <input type=\"text\" class=\"form-control\" [placeholder]=\"typeaheadConfig?.placeholder\" [typeahead]=\"typeaheadOptions\" [(ngModel)]=\"searchQuery\"\n                  [typeaheadMinLength]=\"typeaheadConfig?.minCharacters\" [typeaheadOptionsLimit]=\"typeaheadConfig?.maxResults\" [typeaheadWaitMs]=\"typeaheadConfig?.delay\"\n                  (typeaheadOnSelect)=\"selectOption($event)\" [typeaheadItemTemplate]=\"facetOptionTemplate\" (keyup.ArrowUp)=\"scrollToFocused()\" (keyup.ArrowDown)=\"scrollToFocused()\">\n\n          </div>\n\n      </div>\n\n      <ng-template #facetOptionTemplate let-model=\"item\" let-index=\"index\">\n          <p class=\"facet-typeahead-list-option\"><span [innerHTML]=\"model.title | facetTypeaheadHighlight: searchQuery\"></span> <span class=\"facet-typeahead-list-option-count\"\n                  *ngIf=\"model.count\">({{ model.count }})</span></p>\n      </ng-template>\n    `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'facets': [{ type: Input },],\n'header': [{ type: Input },],\n'expanded': [{ type: Input },],\n'typeaheadConfig': [{ type: Input },],\n'suggestions': [{ type: Input },],\n'simplified': [{ type: Input },],\n};\n}\n\nfunction FacetTypeaheadListComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nFacetTypeaheadListComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFacetTypeaheadListComponent.ctorParameters;\n/** @type {?} */\nFacetTypeaheadListComponent.propDecorators;\n/** @type {?} */\nFacetTypeaheadListComponent.prototype.facets;\n/** @type {?} */\nFacetTypeaheadListComponent.prototype.header;\n/** @type {?} */\nFacetTypeaheadListComponent.prototype.expanded;\n/** @type {?} */\nFacetTypeaheadListComponent.prototype.typeaheadConfig;\n/** @type {?} */\nFacetTypeaheadListComponent.prototype.suggestions;\n/** @type {?} */\nFacetTypeaheadListComponent.prototype.simplified;\n/** @type {?} */\nFacetTypeaheadListComponent.prototype.typeaheadOptions;\n/** @type {?} */\nFacetTypeaheadListComponent.prototype.searchQuery;\n/** @type {?} */\nFacetTypeaheadListComponent.prototype._nativeElement;\n/** @type {?} */\nFacetTypeaheadListComponent.prototype._defaultTypeaheadConfig;\n}\n\n\nexport interface FacetTypeaheadListConfig {\n    placeholder?: string;\n    minCharacters?: number;\n    maxResults?: number;\n    delay?: number;\n}\nexport class FacetTypeaheadHighlight implements PipeTransform {\n/**\n * @param {?} value\n * @param {?} searchQuery\n * @return {?}\n */\ntransform(value: string, searchQuery: string): string {\n        let /** @type {?} */ regex = new RegExp(searchQuery, 'i');\n        return value.replace(regex, `<b class=\"facet-typeahead-highlighted\">${ value.match(regex) }</b>`);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Pipe, args: [{\n    name: 'facetTypeaheadHighlight'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction FacetTypeaheadHighlight_tsickle_Closure_declarations() {\n/** @type {?} */\nFacetTypeaheadHighlight.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFacetTypeaheadHighlight.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\nimport { TypeaheadModule } from 'ngx-bootstrap/typeahead';\nimport { CommonModule } from '@angular/common';\nimport { FacetContainerComponent } from './facet-container.component';\nimport { FacetBaseComponent } from './base/facet-base/facet-base.component';\nimport { FacetHeaderComponent } from './base/facet-header/facet-header.component';\nimport { FacetCheckListComponent } from './facet-check-list/facet-check-list.component';\nimport { FacetTypeaheadListComponent, FacetTypeaheadHighlight } from './facet-typeahead-list/facet-typeahead-list.component';\nimport { FormsModule } from '@angular/forms';\nimport { CheckboxModule } from '../../index';\n\nconst /** @type {?} */ DECLARATIONS = [\n    FacetContainerComponent,\n    FacetHeaderComponent,\n    FacetBaseComponent,\n    FacetCheckListComponent,\n    FacetTypeaheadListComponent,\n    FacetTypeaheadHighlight\n];\nexport class FacetsModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        CommonModule,\n        FormsModule,\n        CheckboxModule,\n        TooltipModule.forRoot(),\n        TypeaheadModule.forRoot()\n    ],\n    exports: DECLARATIONS,\n    declarations: DECLARATIONS\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction FacetsModule_tsickle_Closure_declarations() {\n/** @type {?} */\nFacetsModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFacetsModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","\nexport class Facet {\n/**\n * @param {?} title\n * @param {?=} data\n * @param {?=} count\n * @param {?=} disabled\n * @param {?=} id\n */\nconstructor(\npublic title: string,\npublic data: any = {},\npublic count?: number,\npublic disabled: boolean = false,\npublic id?: string | number\n    ) { }\n}\n\nfunction Facet_tsickle_Closure_declarations() {\n/** @type {?} */\nFacet.prototype.title;\n/** @type {?} */\nFacet.prototype.data;\n/** @type {?} */\nFacet.prototype.count;\n/** @type {?} */\nFacet.prototype.disabled;\n/** @type {?} */\nFacet.prototype.id;\n}\n","import { Injectable } from '@angular/core';\n\n/** Default dropdown configuration */\n\nexport class BsDropdownConfig {\n  /** default dropdown auto closing behavior */\n  autoClose = true;\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { EventEmitter, Injectable } from '@angular/core';\nimport { BsComponentRef } from '../component-loader/bs-component-ref.class';\n\n\nexport class BsDropdownState {\n  direction: 'down' | 'up' = 'down';\n  autoClose: boolean;\n  isOpenChange = new EventEmitter<boolean>();\n  isDisabledChange = new EventEmitter<boolean>();\n  toggleClick = new EventEmitter<boolean>();\n\n  /**\n   * Content to be displayed as popover.\n   */\n  dropdownMenu: Promise<BsComponentRef<any>>;\n  resolveDropdownMenu: (componentRef: BsComponentRef<any>) => void;\n\n  constructor() {\n    this.dropdownMenu = new Promise(resolve => {\n      this.resolveDropdownMenu = resolve;\n    });\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  OnDestroy,\n  Renderer2\n} from '@angular/core';\nimport { BsDropdownState } from './bs-dropdown.state';\n\n\nexport class BsDropdownContainerComponent implements OnDestroy {\n  isOpen = false;\n\n  get direction(): 'down' | 'up' {\n    return this._state.direction;\n  }\n\n  private _subscription: any;\n\n  constructor(\n    private _state: BsDropdownState,\n    private cd: ChangeDetectorRef,\n    private _renderer: Renderer2,\n    _element: ElementRef\n  ) {\n    this._subscription = _state.isOpenChange.subscribe((value: boolean) => {\n      this.isOpen = value;\n      const dropdown = _element.nativeElement.querySelector('.dropdown-menu');\n      if (dropdown) {\n        this._renderer.addClass(dropdown, 'show');\n        if (dropdown.classList.contains('dropdown-menu-right')) {\n          this._renderer.setStyle(dropdown, 'left', 'auto');\n          this._renderer.setStyle(dropdown, 'right', '0');\n        }\n        if (this.direction === 'up') {\n          this._renderer.setStyle(dropdown, 'top', 'auto');\n          this._renderer.setStyle(\n            dropdown,\n            'transform',\n            'translateY(-101%)'\n          );\n        }\n      }\n      this.cd.markForCheck();\n      this.cd.detectChanges();\n    });\n  }\n\n  ngOnDestroy(): void {\n    this._subscription.unsubscribe();\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'bs-dropdown-container',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    style: 'display:block;position: absolute;'\n  },\n  template: `\n    <div [class.dropup]=\"direction === 'up'\"\n         [class.dropdown]=\"direction === 'down'\"\n         [class.show]=\"isOpen\"\n         [class.open]=\"isOpen\"><ng-content></ng-content></div>\n  `\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: BsDropdownState, },\n{type: ChangeDetectorRef, },\n{type: Renderer2, },\n{type: ElementRef, },\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","// tslint:disable:max-file-line-count\nimport {\n  Directive, ElementRef, EmbeddedViewRef, EventEmitter, Input, OnDestroy,\n  OnInit, Output, Renderer2, ViewContainerRef\n} from '@angular/core';\nimport { Subscription } from 'rxjs/Subscription';\nimport 'rxjs/add/operator/filter';\nimport { ComponentLoader, ComponentLoaderFactory } from '../component-loader';\n\nimport { BsDropdownConfig } from './bs-dropdown.config';\nimport { BsDropdownContainerComponent } from './bs-dropdown-container.component';\nimport { BsDropdownState } from './bs-dropdown.state';\nimport { BsComponentRef } from '../component-loader/bs-component-ref.class';\nimport { BsDropdownMenuDirective } from './';\nimport { isBs3 } from '../utils/theme-provider';\n\n\nexport class BsDropdownDirective implements OnInit, OnDestroy {\n  /**\n   * Placement of a popover. Accepts: \"top\", \"bottom\", \"left\", \"right\"\n   */\n   placement: string;\n  /**\n   * Specifies events that should trigger. Supports a space separated list of\n   * event names.\n   */\n   triggers: string;\n  /**\n   * A selector specifying the element the popover should be appended to.\n   * Currently only supports \"body\".\n   */\n   container: string;\n\n  /**\n   * This attribute indicates that the dropdown should be opened upwards\n   */\n   dropup: boolean;\n\n  /**\n   * Indicates that dropdown will be closed on item or document click,\n   * and after pressing ESC\n   */\n  \n  set autoClose(value: boolean) {\n    this._state.autoClose = value;\n  }\n\n  get autoClose(): boolean {\n    return this._state.autoClose;\n  }\n\n  /**\n   * Disables dropdown toggle and hides dropdown menu if opened\n   */\n  \n  set isDisabled(value: boolean) {\n    this._isDisabled = value;\n    this._state.isDisabledChange.emit(value);\n    if (value) {\n      this.hide();\n    }\n  }\n\n  get isDisabled(): boolean {\n    return this._isDisabled;\n  }\n\n  /**\n   * Returns whether or not the popover is currently being shown\n   */\n  \n  get isOpen(): boolean {\n    if (this._showInline) {\n      return this._isInlineOpen;\n    }\n\n    return this._dropdown.isShown;\n  }\n\n  set isOpen(value: boolean) {\n    if (value) {\n      this.show();\n    } else {\n      this.hide();\n    }\n  }\n\n  /**\n   * Emits an event when isOpen change\n   */\n   isOpenChange: EventEmitter<any>;\n\n  /**\n   * Emits an event when the popover is shown\n   */\n   onShown: EventEmitter<any>;\n\n  /**\n   * Emits an event when the popover is hidden\n   */\n   onHidden: EventEmitter<any>;\n\n  get isBs4(): boolean {\n    return !isBs3();\n  }\n\n  // todo: move to component loader\n  private _isInlineOpen = false;\n\n  private get _showInline(): boolean {\n    return !this.container;\n  }\n\n  private _inlinedMenu: EmbeddedViewRef<BsDropdownMenuDirective>;\n\n  private _isDisabled: boolean;\n  private _dropdown: ComponentLoader<BsDropdownContainerComponent>;\n  private _subscriptions: Subscription[] = [];\n  private _isInited = false;\n\n  constructor(private _elementRef: ElementRef,\n              private _renderer: Renderer2,\n              private _viewContainerRef: ViewContainerRef,\n              private _cis: ComponentLoaderFactory,\n              private _config: BsDropdownConfig,\n              private _state: BsDropdownState) {\n    // set initial dropdown state from config\n    this._state.autoClose = this._config.autoClose;\n\n    // create dropdown component loader\n    this._dropdown = this._cis\n      .createLoader<BsDropdownContainerComponent>(\n        this._elementRef,\n        this._viewContainerRef,\n        this._renderer\n      )\n      .provide({provide: BsDropdownState, useValue: this._state});\n\n    this.onShown = this._dropdown.onShown;\n    this.onHidden = this._dropdown.onHidden;\n    this.isOpenChange = this._state.isOpenChange;\n\n  }\n\n  ngOnInit(): void {\n    // fix: seems there are an issue with `routerLinkActive`\n    // which result in duplicated call ngOnInit without call to ngOnDestroy\n    // read more: https://github.com/valor-software/ngx-bootstrap/issues/1885\n    if (this._isInited) {\n      return;\n    }\n    this._isInited = true;\n\n    // attach DOM listeners\n    this._dropdown.listen({\n      // because of dropdown inline mode\n      outsideClick: false,\n      triggers: this.triggers,\n      show: () => this.show()\n    });\n\n    // toggle visibility on toggle element click\n    this._subscriptions.push(\n      this._state.toggleClick.subscribe((value: boolean) => this.toggle(value))\n    );\n\n    // hide dropdown if set disabled while opened\n    this._subscriptions.push(\n      this._state.isDisabledChange\n        .filter((value: boolean) => value)\n        .subscribe((value: boolean) => this.hide())\n    );\n  }\n\n  /**\n   * Opens an element’s popover. This is considered a “manual” triggering of\n   * the popover.\n   */\n  show(): void {\n    if (this.isOpen || this.isDisabled) {\n      return;\n    }\n\n    if (this._showInline) {\n      if (!this._inlinedMenu) {\n        this._state.dropdownMenu.then(\n          (dropdownMenu: BsComponentRef<BsDropdownMenuDirective>) => {\n            this._dropdown.attachInline(\n              dropdownMenu.viewContainer,\n              dropdownMenu.templateRef\n            );\n            this._inlinedMenu = this._dropdown._inlineViewRef;\n            this.addBs4Polyfills();\n          }\n        )\n        // swallow errors\n          .catch();\n      }\n      this.addBs4Polyfills();\n      this._isInlineOpen = true;\n      this.onShown.emit(true);\n      this._state.isOpenChange.emit(true);\n\n      return;\n    }\n    this._state.dropdownMenu.then(dropdownMenu => {\n      // check direction in which dropdown should be opened\n      const _dropup =\n        this.dropup ||\n        (typeof this.dropup !== 'undefined' && this.dropup);\n      this._state.direction = _dropup ? 'up' : 'down';\n      const _placement =\n        this.placement || (_dropup ? 'top left' : 'bottom left');\n\n      // show dropdown\n      this._dropdown\n        .attach(BsDropdownContainerComponent)\n        .to(this.container)\n        .position({attachment: _placement})\n        .show({\n          content: dropdownMenu.templateRef,\n          placement: _placement\n        });\n\n      this._state.isOpenChange.emit(true);\n    })\n    // swallow error\n      .catch();\n  }\n\n  /**\n   * Closes an element’s popover. This is considered a “manual” triggering of\n   * the popover.\n   */\n  hide(): void {\n    if (!this.isOpen) {\n      return;\n    }\n\n    if (this._showInline) {\n      this.removeShowClass();\n      this._isInlineOpen = false;\n      this.onHidden.emit(true);\n    } else {\n      this._dropdown.hide();\n    }\n\n    this._state.isOpenChange.emit(false);\n  }\n\n  /**\n   * Toggles an element’s popover. This is considered a “manual” triggering of\n   * the popover.\n   */\n  toggle(value?: boolean): void {\n    if (this.isOpen || !value) {\n      return this.hide();\n    }\n\n    return this.show();\n  }\n\n  ngOnDestroy(): void {\n    // clean up subscriptions and destroy dropdown\n    for (const sub of this._subscriptions) {\n      sub.unsubscribe();\n    }\n    this._dropdown.dispose();\n  }\n\n  private addBs4Polyfills(): void {\n    if (!isBs3()) {\n      this.addShowClass();\n      this.checkRightAlignment();\n      this.checkDropup();\n    }\n  }\n\n  private addShowClass(): void {\n    if (this._inlinedMenu && this._inlinedMenu.rootNodes[0]) {\n      this._renderer.addClass(this._inlinedMenu.rootNodes[0], 'show');\n    }\n  }\n\n  private removeShowClass(): void {\n    if (this._inlinedMenu && this._inlinedMenu.rootNodes[0]) {\n      this._renderer.removeClass(this._inlinedMenu.rootNodes[0], 'show');\n    }\n  }\n\n  private checkRightAlignment(): void {\n    if (this._inlinedMenu && this._inlinedMenu.rootNodes[0]) {\n      const isRightAligned = this._inlinedMenu.rootNodes[0].classList.contains(\n        'dropdown-menu-right'\n      );\n      this._renderer.setStyle(\n        this._inlinedMenu.rootNodes[0],\n        'left',\n        isRightAligned ? 'auto' : '0'\n      );\n      this._renderer.setStyle(\n        this._inlinedMenu.rootNodes[0],\n        'right',\n        isRightAligned ? '0' : 'auto'\n      );\n    }\n  }\n\n  private checkDropup(): void {\n    if (this._inlinedMenu && this._inlinedMenu.rootNodes[0]) {\n      // a little hack to not break support of bootstrap 4 beta\n      this._renderer.setStyle(\n        this._inlinedMenu.rootNodes[0],\n        'top',\n        this.dropup ? 'auto' : '100%'\n      );\n      this._renderer.setStyle(\n        this._inlinedMenu.rootNodes[0],\n        'transform',\n        this.dropup ? 'translateY(-101%)' : 'translateY(0)'\n      );\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[bsDropdown],[dropdown]',\n  exportAs: 'bs-dropdown',\n  providers: [BsDropdownState],\n  host: {\n    '[class.dropup]': 'dropup',\n    '[class.open]': 'isOpen',\n    '[class.show]': 'isOpen && isBs4'\n  }\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Renderer2, },\n{type: ViewContainerRef, },\n{type: ComponentLoaderFactory, },\n{type: BsDropdownConfig, },\n{type: BsDropdownState, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'placement': [{ type: Input },],\n'triggers': [{ type: Input },],\n'container': [{ type: Input },],\n'dropup': [{ type: Input },],\n'autoClose': [{ type: Input },],\n'isDisabled': [{ type: Input },],\n'isOpen': [{ type: Input },],\n'isOpenChange': [{ type: Output },],\n'onShown': [{ type: Output },],\n'onHidden': [{ type: Output },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, TemplateRef, ViewContainerRef } from '@angular/core';\nimport { BsDropdownState } from './bs-dropdown.state';\n\n\nexport class BsDropdownMenuDirective {\n  constructor(\n    _state: BsDropdownState,\n    _viewContainer: ViewContainerRef,\n    _templateRef: TemplateRef<any>\n  ) {\n    _state.resolveDropdownMenu({\n      templateRef: _templateRef,\n      viewContainer: _viewContainer\n    });\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[bsDropdownMenu],[dropdownMenu]',\n  exportAs: 'bs-dropdown-menu'\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: BsDropdownState, },\n{type: ViewContainerRef, },\n{type: TemplateRef, },\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {\n  Directive,\n  ElementRef,\n  HostBinding,\n  HostListener,\n  Input,\n  OnDestroy\n} from '@angular/core';\nimport { Subscription } from 'rxjs/Subscription';\n\nimport { BsDropdownState } from './bs-dropdown.state';\n\n\nexport class BsDropdownToggleDirective implements OnDestroy {\n   isDisabled: boolean = null;\n\n  // @HostBinding('class.active')\n   isOpen: boolean;\n\n  private _subscriptions: Subscription[] = [];\n\n  constructor(private _state: BsDropdownState, private _element: ElementRef) {\n    // sync is open value with state\n    this._subscriptions.push(\n      this._state.isOpenChange.subscribe(\n        (value: boolean) => (this.isOpen = value)\n      )\n    );\n    // populate disabled state\n    this._subscriptions.push(\n      this._state.isDisabledChange.subscribe(\n        (value: boolean) => (this.isDisabled = value || null)\n      )\n    );\n  }\n\n  \n  onClick(): void {\n    if (this.isDisabled) {\n      return;\n    }\n    this._state.toggleClick.emit(true);\n  }\n\n  \n  onDocumentClick(event: any): void {\n    if (\n      this._state.autoClose &&\n      event.button !== 2 &&\n      !this._element.nativeElement.contains(event.target)\n    ) {\n      this._state.toggleClick.emit(false);\n    }\n  }\n\n  \n  onEsc(): void {\n    if (this._state.autoClose) {\n      this._state.toggleClick.emit(false);\n    }\n  }\n\n  ngOnDestroy(): void {\n    for (const sub of this._subscriptions) {\n      sub.unsubscribe();\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[bsDropdownToggle],[dropdownToggle]',\n  exportAs: 'bs-dropdown-toggle',\n  host: {\n    '[attr.aria-haspopup]': 'true'\n  }\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: BsDropdownState, },\n{type: ElementRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'isDisabled': [{ type: HostBinding, args: ['attr.disabled', ] },],\n'isOpen': [{ type: HostBinding, args: ['attr.aria-expanded', ] },],\n'onClick': [{ type: HostListener, args: ['click', [], ] },],\n'onDocumentClick': [{ type: HostListener, args: ['document:click', ['$event'], ] },],\n'onEsc': [{ type: HostListener, args: ['keyup.esc', ] },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { ModuleWithProviders, NgModule } from '@angular/core';\nimport { ComponentLoaderFactory } from '../component-loader';\n\nimport { PositioningService } from '../positioning';\nimport { BsDropdownContainerComponent } from './bs-dropdown-container.component';\nimport { BsDropdownMenuDirective } from './bs-dropdown-menu.directive';\nimport { BsDropdownToggleDirective } from './bs-dropdown-toggle.directive';\nimport { BsDropdownConfig } from './bs-dropdown.config';\n\nimport { BsDropdownDirective } from './bs-dropdown.directive';\nimport { BsDropdownState } from './bs-dropdown.state';\n\n\nexport class BsDropdownModule {\n  static forRoot(config?: any): ModuleWithProviders {\n    return {\n      ngModule: BsDropdownModule,\n      providers: [\n        ComponentLoaderFactory,\n        PositioningService,\n        BsDropdownState,\n        {\n          provide: BsDropdownConfig,\n          useValue: config ? config : { autoClose: true }\n        }\n      ]\n    };\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  declarations: [\n    BsDropdownMenuDirective,\n    BsDropdownToggleDirective,\n    BsDropdownContainerComponent,\n    BsDropdownDirective\n  ],\n  exports: [\n    BsDropdownMenuDirective,\n    BsDropdownToggleDirective,\n    BsDropdownDirective\n  ],\n  entryComponents: [BsDropdownContainerComponent]\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nexport class FilterContainerComponent {\n\n     filters: Filter[] = [];\n     clearTooltip: string;\n     filtersChange: EventEmitter<Filter[]> = new EventEmitter<Filter[]>();\n     events: EventEmitter<FilterEvent> = new EventEmitter<FilterEvent>();\n/**\n * @param {?} filter\n * @return {?}\n */\naddFilter(filter: Filter): void {\n        this.filters.push(filter);\n        this.events.next(new FilterAddEvent(filter));\n        this.filtersChange.emit(this.filters);\n    }\n/**\n * @param {?} filter\n * @return {?}\n */\nremoveFilter(filter: Filter): void {\n        let /** @type {?} */ idx = this.filters.findIndex(filters => filters === filter);\n\n        if (idx !== -1) {\n            this.filters.splice(idx, 1);\n            this.events.next(new FilterRemoveEvent(filter));\n            this.filtersChange.emit(this.filters);\n        }\n    }\n/**\n * @return {?}\n */\nremoveAll(): void {\n        this.events.next(new FilterRemoveAllEvent());\n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-filter-container',\n    template: `\n      <ng-content></ng-content>\n\n      <!-- Add a Clear Button -->\n      <div class=\"filter-selected-clear-button\" *ngIf=\"filters.length > 0\" [tooltip]=\"clearTooltip || 'Clear All'\" (click)=\"removeAll()\">\n    \n          <svg class=\"filter-selected-clear-graphic\" width=\"19\" height=\"12\" viewBox=\"0 0 19 12\" shape-rendering=\"geometricPrecision\">\n              <rect class=\"light-grey\" x=\"0\" y=\"2\" width=\"7\" height=\"2\"></rect>\n              <rect class=\"dark-grey\" x=\"0\" y=\"5\" width=\"9\" height=\"2\"></rect>\n              <rect class=\"light-grey\" x=\"0\" y=\"8\" width=\"7\" height=\"2\"></rect>\n              <path class=\"dark-grey\" d=\"M9,1 h1 l9,9 v1 h-1 l-9,-9 v-1 Z\"></path>\n              <path class=\"dark-grey\" d=\"M9,11 v-1 l9,-9 h1 v1 l-9,9 h-1 Z\"></path>\n          </svg>\n\n      </div>\n    `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'filters': [{ type: Input },],\n'clearTooltip': [{ type: Input },],\n'filtersChange': [{ type: Output },],\n'events': [{ type: Output },],\n};\n}\n\nfunction FilterContainerComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nFilterContainerComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFilterContainerComponent.ctorParameters;\n/** @type {?} */\nFilterContainerComponent.propDecorators;\n/** @type {?} */\nFilterContainerComponent.prototype.filters;\n/** @type {?} */\nFilterContainerComponent.prototype.clearTooltip;\n/** @type {?} */\nFilterContainerComponent.prototype.filtersChange;\n/** @type {?} */\nFilterContainerComponent.prototype.events;\n}\n\n\nexport interface Filter {\n    group: string;\n    title: string;\n    name: string;\n    initial?: boolean;\n}\nexport class FilterAddEvent {\n/**\n * @param {?} filter\n */\nconstructor(public filter: Filter) {}\n}\n\nfunction FilterAddEvent_tsickle_Closure_declarations() {\n/** @type {?} */\nFilterAddEvent.prototype.filter;\n}\n\nexport class FilterRemoveEvent {\n/**\n * @param {?} filter\n */\nconstructor(public filter: Filter) {}\n}\n\nfunction FilterRemoveEvent_tsickle_Closure_declarations() {\n/** @type {?} */\nFilterRemoveEvent.prototype.filter;\n}\n\nexport class FilterRemoveAllEvent {\n}\n\nexport type FilterEvent = FilterAddEvent | FilterRemoveEvent | FilterRemoveAllEvent;\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, Host, Input, Output } from '@angular/core';\nimport { FilterContainerComponent, Filter, FilterRemoveAllEvent } from '../filter-container.component';\nexport class FilterBaseComponent {\n\n     filters: Filter[];\n/**\n * @param {?} filtersContainer\n */\nconstructor(\nprivate filtersContainer: FilterContainerComponent) {\n\n        filtersContainer.events.filter(event => event instanceof FilterRemoveAllEvent).subscribe(this.removeFilter.bind(this));\n    }\n/**\n * @param {?} filter\n * @return {?}\n */\naddFilter(filter: Filter): void {\n        if (!filter.initial) {\n            this.filtersContainer.addFilter(filter);\n        }\n    }\n/**\n * @param {?} filter\n * @return {?}\n */\nremoveFilter(filter: Filter): void {\n        if (!filter) {\n            return;\n        }\n\n        this.filtersContainer.removeFilter(filter);\n    }\n    \nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'ux-filter-base'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: FilterContainerComponent, decorators: [{ type: Host }, ]},\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'filters': [{ type: Input },],\n};\n}\n\nfunction FilterBaseComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nFilterBaseComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFilterBaseComponent.ctorParameters;\n/** @type {?} */\nFilterBaseComponent.propDecorators;\n/** @type {?} */\nFilterBaseComponent.prototype.filters;\n/** @type {?} */\nFilterBaseComponent.prototype.filtersContainer;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { BsDropdownDirective } from 'ngx-bootstrap/dropdown';\nimport { Component, Input, ViewChild } from '@angular/core';\nimport { FilterBaseComponent } from '../filter-base/filter-base.component';\nimport { Filter, FilterContainerComponent, FilterRemoveAllEvent } from '../filter-container.component';\nimport { TypeaheadMatch } from 'ngx-bootstrap/typeahead';\nexport class FilterDynamicComponent extends FilterBaseComponent {\n\n     filters: Filter[];\n     initial: Filter;\n     options: FilterDynamicListConfig;\n\n     dropdown: BsDropdownDirective;\n\n    defaultOptions: FilterDynamicListConfig = {\n        placeholder: '',\n        minCharacters: 3\n    };\n    searchQuery: string;\n    selected: Filter;\n    showTypeahead: boolean = true;\n    typeaheadItems: string[] = [];\n/**\n * @return {?}\n */\ngetItems(): string[] {\n        return this.filters.filter(item => item !== this.initial).map(item => item.name);\n    }\n/**\n * @return {?}\n */\nngOnInit() {\n        this.selected = this.initial;\n        this.typeaheadItems = this.getItems();\n\n        if (this.options && this.options.maxIndividualItems && this.options.maxIndividualItems + 1 >= this.filters.length ) {\n            this.showTypeahead = false;\n        }\n    }\n/**\n * @param {?} typeaheadOption\n * @return {?}\n */\nselectOption(typeaheadOption: TypeaheadMatch) { \n        this.removeFilter();\n        let /** @type {?} */ idx = this.filters.findIndex(filter => filter.name === typeaheadOption.value);\n        this.selected = this.filters[idx];\n        this.addFilter(this.selected);\n        this.searchQuery = '';\n        this.dropdown.hide();\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nclickOff(event: MouseEvent) {\n\n        let /** @type {?} */ target = /** @type {?} */(( event.target as HTMLElement));\n        let /** @type {?} */ hideDropdown = true;\n\n        while (target && target.nodeName !== 'BODY') {\n            if (target.classList.contains('ux-dynamic-filter')) {\n                hideDropdown = false;\n                break;\n            } else {\n                target = target.parentElement;\n            }\n        }\n\n        if (hideDropdown) {\n            this.searchQuery = '';\n            this.dropdown.hide();\n        }\n        \n    }\n/**\n * @return {?}\n */\nremoveFilter(): void { \n        if (this.selected !== this.initial) {\n            super.removeFilter(this.selected);\n            this.selected = this.initial;\n        }\n        this.searchQuery = '';\n    }\n/**\n * @param {?} filter\n * @return {?}\n */\nselectFilter(filter: Filter) {\n        this.removeFilter();\n        this.selected = filter;\n        this.addFilter(this.selected);\n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-filter-dynamic',\n    template: `\n      <div class=\"btn-group ux-dynamic-filter\" dropdown #dynamicDropdown=\"bs-dropdown\">\n          <button (click)=\"dynamicDropdown.show()\" type=\"button\" [class.active]=\"selected !== initial\" class=\"filter-dropdown btn dropdown-toggle\">{{ selected?.title }} \n              <span class=\"hpe-icon hpe-down\"></span>\n          </button>\n          <ul *dropdownMenu class=\"dropdown-menu\" role=\"menu\">\n\n              <li class=\"dropdown-list-item\" *ngIf=\"showTypeahead\" role=\"menuitem\">\n                  <a class=\"dropdown-item\" (click)=\"removeFilter(); dynamicDropdown.hide();\">\n                      <i class=\"hpe-icon\" [class.hpe-checkmark]=\"initial === selected\"></i>\n                      <span class=\"filter-dropdown-title\">{{ initial.name }}</span>\n                  </a>\n              </li>\n\n              <li class=\"dropdown-list-item\" *ngIf=\"selected !== initial && showTypeahead\" role=\"menuitem\">\n                  <a class=\"dropdown-item\">\n                      <i class=\"hpe-icon hpe-checkmark\"></i>\n                      <span class=\"filter-dropdown-title\">{{ selected.name }}</span>\n                  </a>\n              </li>\n\n              <hr>\n\n              <li *ngIf=\"showTypeahead\" class=\"typeahead-box\">\n                  <input [(ngModel)]=\"searchQuery\" [typeahead]=\"typeaheadItems\" class=\"form-control\" \n                  (typeaheadOnSelect)=\"selectOption($event)\" \n                  [placeholder]=\"options?.placeholder || defaultOptions.placeholder\"\n                  [typeaheadMinLength]=\"options?.minCharacters || defaultOptions.minCharacters\"\n                  [typeaheadOptionsLimit]=\"options?.maxResults\">\n              </li>\n\n              <span *ngIf=\"!showTypeahead\">\n                  <li class=\"dropdown-list-item\" *ngFor=\"let filter of filters\" role=\"menuitem\">\n                      <a class=\"dropdown-item\" (click)=\"selectFilter(filter)\">\n                          <i class=\"hpe-icon\" [class.hpe-checkmark]=\"filter === selected\"></i>\n                          <span class=\"filter-dropdown-title\">{{ filter.name }}</span>\n                      </a>\n                  </li>\n              </span>\n\n          </ul>\n      </div>\n    `,\n    host: {\n        '(document:click)': 'clickOff($event)',\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'filters': [{ type: Input },],\n'initial': [{ type: Input },],\n'options': [{ type: Input },],\n'dropdown': [{ type: ViewChild, args: [BsDropdownDirective, ] },],\n};\n}\n\nfunction FilterDynamicComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nFilterDynamicComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFilterDynamicComponent.ctorParameters;\n/** @type {?} */\nFilterDynamicComponent.propDecorators;\n/** @type {?} */\nFilterDynamicComponent.prototype.filters;\n/** @type {?} */\nFilterDynamicComponent.prototype.initial;\n/** @type {?} */\nFilterDynamicComponent.prototype.options;\n/** @type {?} */\nFilterDynamicComponent.prototype.dropdown;\n/** @type {?} */\nFilterDynamicComponent.prototype.defaultOptions;\n/** @type {?} */\nFilterDynamicComponent.prototype.searchQuery;\n/** @type {?} */\nFilterDynamicComponent.prototype.selected;\n/** @type {?} */\nFilterDynamicComponent.prototype.showTypeahead;\n/** @type {?} */\nFilterDynamicComponent.prototype.typeaheadItems;\n}\n\n\nexport interface FilterDynamicListConfig {\n    placeholder?: string;\n    minCharacters?: number;\n    maxResults?: number;\n    maxIndividualItems?: number;\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Input } from '@angular/core';\nimport { FilterBaseComponent } from '../filter-base/filter-base.component';\nimport { Filter, FilterContainerComponent, FilterRemoveAllEvent } from '../filter-container.component';\nexport class FilterDropdownComponent extends FilterBaseComponent {\n\n     initial: Filter;\n\n    selected: Filter;\n/**\n * @return {?}\n */\nremoveFilter(): void {\n        super.removeFilter(this.selected);\n        this.selected = this.initial;\n    }\n/**\n * @return {?}\n */\nngOnInit() {\n        this.selected = this.initial;\n    }\n/**\n * @param {?} filter\n * @return {?}\n */\nselectFilter(filter: Filter) {\n        this.removeFilter();\n        this.selected = filter;\n        this.addFilter(this.selected);\n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-filter-dropdown',\n    template: `\n      <div class=\"btn-group\" dropdown>\n          <button dropdownToggle type=\"button\" class=\"filter-dropdown btn dropdown-toggle\" [class.active]=\"selected !== initial\">{{ selected?.title }} \n              <span class=\"hpe-icon hpe-down\"></span>\n          </button>\n          <ul *dropdownMenu class=\"dropdown-menu\" role=\"menu\">\n              <li class=\"dropdown-list-item\" *ngFor=\"let filter of filters\" role=\"menuitem\">\n                  <a class=\"dropdown-item\" (click)=\"selectFilter(filter)\">\n                      <i class=\"hpe-icon\" [class.hpe-checkmark]=\"filter === selected\"></i>\n                      <span class=\"filter-dropdown-title\">{{ filter.name }}</span>\n                  </a>\n              </li>\n          </ul>\n      </div>\n    `,\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'initial': [{ type: Input },],\n};\n}\n\nfunction FilterDropdownComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nFilterDropdownComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFilterDropdownComponent.ctorParameters;\n/** @type {?} */\nFilterDropdownComponent.propDecorators;\n/** @type {?} */\nFilterDropdownComponent.prototype.initial;\n/** @type {?} */\nFilterDropdownComponent.prototype.selected;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { TooltipModule } from 'ngx-bootstrap/tooltip';\nimport { FilterDynamicComponent } from './filter-dynamic/filter-dynamic.component';\nimport { FilterDropdownComponent } from './filter-dropdown/filter-dropdown.component';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\nimport { FilterContainerComponent } from './filter-container.component';\nimport { FilterBaseComponent } from './filter-base/filter-base.component';\nimport { TypeaheadModule } from 'ngx-bootstrap/typeahead';\nimport { FormsModule } from '@angular/forms';\n\nconst /** @type {?} */ DECLARATIONS = [\n    FilterBaseComponent,\n    FilterContainerComponent,\n    FilterDropdownComponent,\n    FilterDynamicComponent\n];\nexport class FilterModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        BsDropdownModule.forRoot(),\n        TypeaheadModule.forRoot(),\n        TooltipModule.forRoot(),\n        FormsModule,\n        CommonModule\n    ],\n    exports: DECLARATIONS,\n    declarations: DECLARATIONS\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction FilterModule_tsickle_Closure_declarations() {\n/** @type {?} */\nFilterModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFilterModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Input, Directive, HostListener, Output, EventEmitter } from '@angular/core';\nexport class FlippableCardComponent {\n\n     direction: 'horizontal' | 'vertical' = 'horizontal';\n     trigger: 'click' | 'hover' | 'manual' = 'hover';\n     width: number = 280;\n     height: number = 200;\n     flipped: boolean = false;\n     flippedChange: EventEmitter<boolean> = new EventEmitter<boolean>();\n/**\n * @param {?} state\n * @return {?}\n */\nsetFlipped(state: boolean) {\n        this.flipped = state;\n        this.flippedChange.emit(this.flipped);\n    }\n/**\n * @return {?}\n */\ntoggleFlipped() {\n        this.setFlipped(!this.flipped);\n    }\n/**\n * @return {?}\n */\nclickTrigger() {\n\n        // add or remove the class depending on whether or not the card has been flipped\n        if (this.trigger === 'click') {\n            this.toggleFlipped();\n        }\n    }\n/**\n * @return {?}\n */\nhoverEnter() {\n        // if the trigger is hover then begin to flip\n        if (this.trigger === 'hover') {\n            this.setFlipped(true);\n        }\n    }\n/**\n * @return {?}\n */\nhoverExit() {\n        if (this.trigger === 'hover') {\n            this.setFlipped(false);\n        }\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-flippable-card',\n    template: `\n      <div class=\"ux-flipper\" [class.ux-flip-card]=\"flipped\" [style.width.px]=\"width\" [style.height.px]=\"height\">\n\n          <div class=\"ux-flippable-card-front\" [style.width.px]=\"width\" [style.height.px]=\"height\">\n              <ng-content select=\"ux-flippable-card-front\"></ng-content>\n          </div>\n\n          <div class=\"ux-flippable-card-back\" [style.width.px]=\"width\" [style.height.px]=\"height\">\n              <ng-content select=\"ux-flippable-card-back\"></ng-content>\n          </div>\n      </div>\n    `,\n    host: {\n        '[class.horizontal]': 'direction === \"horizontal\"',\n        '[class.vertical]': 'direction === \"vertical\"'\n    },\n    exportAs: 'ux-flippable-card'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'direction': [{ type: Input },],\n'trigger': [{ type: Input },],\n'width': [{ type: Input },],\n'height': [{ type: Input },],\n'flipped': [{ type: Input },],\n'flippedChange': [{ type: Output },],\n'clickTrigger': [{ type: HostListener, args: ['click', ] },],\n'hoverEnter': [{ type: HostListener, args: ['mouseenter', ] },],\n'hoverExit': [{ type: HostListener, args: ['mouseleave', ] },],\n};\n}\n\nfunction FlippableCardComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nFlippableCardComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFlippableCardComponent.ctorParameters;\n/** @type {?} */\nFlippableCardComponent.propDecorators;\n/** @type {?} */\nFlippableCardComponent.prototype.direction;\n/** @type {?} */\nFlippableCardComponent.prototype.trigger;\n/** @type {?} */\nFlippableCardComponent.prototype.width;\n/** @type {?} */\nFlippableCardComponent.prototype.height;\n/** @type {?} */\nFlippableCardComponent.prototype.flipped;\n/** @type {?} */\nFlippableCardComponent.prototype.flippedChange;\n}\n\nexport class FlippableCardFrontDirective { static decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'ux-flippable-card-front'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction FlippableCardFrontDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nFlippableCardFrontDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFlippableCardFrontDirective.ctorParameters;\n}\n\nexport class FlippableCardBackDirective { static decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'ux-flippable-card-back'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction FlippableCardBackDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nFlippableCardBackDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFlippableCardBackDirective.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\n\nimport { FlippableCardComponent, FlippableCardBackDirective, FlippableCardFrontDirective } from './flippable-card.component';\nexport class FlippableCardModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    exports: [FlippableCardComponent, FlippableCardBackDirective, FlippableCardFrontDirective],\n    declarations: [FlippableCardComponent, FlippableCardBackDirective, FlippableCardFrontDirective]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction FlippableCardModule_tsickle_Closure_declarations() {\n/** @type {?} */\nFlippableCardModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFlippableCardModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Directive, Input, SimpleChange, Output, EventEmitter, ContentChild } from '@angular/core';\nexport class ItemDisplayPanelContentDirective { static decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: '[uxItemDisplayPanelContent]'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ItemDisplayPanelContentDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nItemDisplayPanelContentDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nItemDisplayPanelContentDirective.ctorParameters;\n}\n\nexport class ItemDisplayPanelFooterDirective { static decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: '[uxItemDisplayPanelFooter]'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ItemDisplayPanelFooterDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nItemDisplayPanelFooterDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nItemDisplayPanelFooterDirective.ctorParameters;\n}\n\nexport class ItemDisplayPanelComponent {\n\n     header: string;\n     top: number;\n     boxShadow: boolean = true;\n     closeVisible: boolean = true;\n     preventClose: boolean = false;\n     inline: boolean = false;\n     animate: boolean = false;\n     shadow: boolean = false;\n     width: number;\n\n     footer: ItemDisplayPanelFooterDirective;\n\n     visibleChange: EventEmitter<boolean> = new EventEmitter<boolean>();\n/**\n * @deprecated \n * Title used for adding tooltips and shouldn't be used as an input\n * instead header will be used. This is here to support backward compatibility only\n * this property should not be used.\n * @param {?} value\n * @return {?}\n */\nset title(value: string) {\n        this.header = value;\n    }\n/**\n * @return {?}\n */\nget title() {\n        return this.header;\n    }\n/**\n * @param {?} visible\n * @return {?}\n */\nset visible(visible: boolean) {\n\n        this._visible = visible;\n\n        // invoke change event\n        this.visibleChange.emit(this._visible);\n\n    }\n/**\n * @return {?}\n */\nget visible() {\n        return this._visible;\n    }\nprivate _visible: boolean = false;\n/**\n * @param {?} event\n * @return {?}\n */\nclickOff(event: MouseEvent) {\n\n        // dont close\n        if (this.preventClose) {\n            return;\n        }\n\n        // dont do anything if the panel is hidden\n        if (this._visible) {\n\n            let /** @type {?} */ target = /** @type {?} */(( event.target as HTMLElement));\n\n            // if the target node is the HTML tag, then this was triggered by scrolling and we should not close the panel\n            if (target.nodeName === 'HTML') {\n                return;\n            }\n\n            let /** @type {?} */ hidePanel = true;\n\n            while (target && target.nodeName !== 'BODY') {\n                if (target.classList.contains('ux-item-display-panel')) {\n                    hidePanel = false;\n                    break;\n                } else {\n                    target = target.parentElement;\n                }\n            }\n\n            if (hidePanel) {\n                this._visible = false;\n                this.visibleChange.emit(this._visible);\n            }\n        }\n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-item-display-panel',\n    template: `\n      <div class=\"ux-item-display-panel\" [class.box-shadow]=\"boxShadow\" [class.inline]=\"inline\" [class.animate]=\"animate\" [class.item-display-panel-hide]=\"!visible\" [style.width]=\"width\" [style.top.px]=\"top\" [style.height]='\"calc(100% - \" + top + \"px)\"'>\n\n          <div class=\"item-display-panel-header\" [class.item-display-panel-shadow]=\"shadow\">\n              <div class=\"heading-flex-box\">\n                  <h3>{{ header }}</h3>\n                  <span *ngIf=\"closeVisible\" class=\"heading-close-button\" tabindex=\"0\" (click)=\"visible = false\" (keydown.enter)=\"visible = false\">\n                      <i class=\"hpe-icon hpe-close\"></i>\n                  </span>\n              </div>\n          </div>\n\n          <div class=\"item-display-panel-content\">\n              <ng-content select=\"[uxItemDisplayPanelContent]\"></ng-content>\n          </div>\n\n          <div class=\"item-display-panel-footer\" *ngIf=\"footer\">\n              <ng-content select=\"[uxItemDisplayPanelFooter]\"></ng-content>\n          </div>\n\n      </div>\n    `,\n    host: {\n        '(document:click)': 'clickOff($event)',\n        '(document:keyup.escape)': 'visible = false',\n        '[class.inline-host]': 'inline',\n        '[class.visible-host]': 'visible'\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'header': [{ type: Input },],\n'top': [{ type: Input },],\n'boxShadow': [{ type: Input },],\n'closeVisible': [{ type: Input },],\n'preventClose': [{ type: Input },],\n'inline': [{ type: Input },],\n'animate': [{ type: Input },],\n'shadow': [{ type: Input },],\n'width': [{ type: Input },],\n'footer': [{ type: ContentChild, args: [ItemDisplayPanelFooterDirective, ] },],\n'visibleChange': [{ type: Output },],\n'title': [{ type: Input },],\n'visible': [{ type: Input },],\n};\n}\n\nfunction ItemDisplayPanelComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nItemDisplayPanelComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nItemDisplayPanelComponent.ctorParameters;\n/** @type {?} */\nItemDisplayPanelComponent.propDecorators;\n/** @type {?} */\nItemDisplayPanelComponent.prototype.header;\n/** @type {?} */\nItemDisplayPanelComponent.prototype.top;\n/** @type {?} */\nItemDisplayPanelComponent.prototype.boxShadow;\n/** @type {?} */\nItemDisplayPanelComponent.prototype.closeVisible;\n/** @type {?} */\nItemDisplayPanelComponent.prototype.preventClose;\n/** @type {?} */\nItemDisplayPanelComponent.prototype.inline;\n/** @type {?} */\nItemDisplayPanelComponent.prototype.animate;\n/** @type {?} */\nItemDisplayPanelComponent.prototype.shadow;\n/** @type {?} */\nItemDisplayPanelComponent.prototype.width;\n/** @type {?} */\nItemDisplayPanelComponent.prototype.footer;\n/** @type {?} */\nItemDisplayPanelComponent.prototype.visibleChange;\n/** @type {?} */\nItemDisplayPanelComponent.prototype._visible;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { CommonModule } from '@angular/common';\nimport { ItemDisplayPanelComponent, ItemDisplayPanelContentDirective, ItemDisplayPanelFooterDirective } from './item-display-panel.component';\nimport { NgModule, Input } from '@angular/core';\nimport { ModalModule } from 'ngx-bootstrap/modal';\n\nconst /** @type {?} */ DECLARATIONS = [\n    ItemDisplayPanelComponent,\n    ItemDisplayPanelContentDirective,\n    ItemDisplayPanelFooterDirective\n];\nexport class ItemDisplayPanelModule {static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        CommonModule\n    ],\n    exports: DECLARATIONS,\n    declarations: DECLARATIONS\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ItemDisplayPanelModule_tsickle_Closure_declarations() {\n/** @type {?} */\nItemDisplayPanelModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nItemDisplayPanelModule.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Input, ViewEncapsulation, EventEmitter, Output, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nexport const /** @type {?} */ NUMBER_PICKER_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => NumberPickerComponent),\n    multi: true\n};\nexport class NumberPickerComponent implements ControlValueAccessor {\nprivate _min: number = -Infinity;\nprivate _max: number = Infinity;\nprivate _step: number = 1;\nprivate _disabled: boolean = false;\nprivate _value: number = 0;\nprivate _propagateChange = (_: any) => { };\n\n     valid: boolean = true;\n     valueChange = new EventEmitter<number>();\n/**\n * @return {?}\n */\nget value(): number {\n        return this._value;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset value(value: number) {\n        this._value = value;\n        this.valueChange.emit(value);\n        this._propagateChange(value);\n    }\n/**\n * @return {?}\n */\nget min(): number {\n        return this._min;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset min(value) {\n        this._min = typeof value === 'string' ? parseFloat(value) : value;\n    }\n/**\n * @return {?}\n */\nget max(): number {\n        return this._max;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset max(value) {\n        this._max = typeof value === 'string' ? parseFloat(value) : value;\n    }\n/**\n * @return {?}\n */\nget step(): number {\n        return this._step;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset step(value) {\n        this._step = typeof value === 'string' ? parseFloat(value) : value;\n    }\n/**\n * @return {?}\n */\nget disabled(): boolean {\n        return this._disabled;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset disabled(value) {\n        this._disabled = typeof value === 'string' && (value === '' || value === 'true' || value === 'disabled') || value === true;\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nincrement(event: MouseEvent | KeyboardEvent): void {\n        event.preventDefault();\n\n        if (!this.disabled) {\n            this.value = Math.max(Math.min(this.value + this.step, this.max), this.min);\n        }\n    }\n/**\n * @param {?} event\n * @return {?}\n */\ndecrement(event: MouseEvent | KeyboardEvent): void {\n        event.preventDefault();\n\n        if (!this.disabled) {\n            this.value = Math.min(Math.max(this.value - this.step, this.min), this.max);\n        }\n    }\n/**\n * @return {?}\n */\nisValid(): boolean {\n        if (this.value < this.min || this.value > this.max) {\n            return false;\n        }\n\n        return this.valid;\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nonScroll(event: WheelEvent): void {\n\n        let /** @type {?} */ scrollValue = event.deltaY || event.wheelDelta;\n\n        if (scrollValue < 0) {\n            this.increment(event);\n        } else {\n            this.decrement(event);\n        }\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nwriteValue(value: any): void {\n        if (value !== undefined) {\n            this._value = value;\n        }\n    }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnChange(fn: any): void {\n        this._propagateChange = fn;\n    }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnTouched(fn: any): void { }\n/**\n * @param {?} isDisabled\n * @return {?}\n */\nsetDisabledState(isDisabled: boolean): void {\n        this.disabled = isDisabled;\n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-number-picker',\n    template: `\n      <input type=\"number\" class=\"form-control number-picker-input\" [(ngModel)]=\"value\" [min]=\"min\" [max]=\"max\" (keydown.ArrowDown)=\"decrement($event)\"\n          (keydown.ArrowUp)=\"increment($event)\" (wheel)=\"onScroll($event)\" step=\"any\" [disabled]=\"disabled\">\n\n      <div class=\"number-picker-controls\">\n\n          <div class=\"number-picker-control-up\" (click)=\"increment($event)\" [class.disabled]=\"disabled || value >= max\">\n              <span class=\"hpe-icon hpe-up\"></span>\n          </div>\n\n          <div class=\"number-picker-control-down\" (click)=\"decrement($event)\" [class.disabled]=\"disabled || value <= min\">\n              <span class=\"hpe-icon hpe-down\"></span>\n          </div>\n\n      </div>\n    `,\n    providers: [NUMBER_PICKER_VALUE_ACCESSOR],\n    host: {\n        '[class.has-error]': '!isValid()'\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'valid': [{ type: Input },],\n'valueChange': [{ type: Output },],\n'value': [{ type: Input, args: ['value', ] },],\n'min': [{ type: Input },],\n'max': [{ type: Input },],\n'step': [{ type: Input },],\n'disabled': [{ type: Input },],\n};\n}\n\nfunction NumberPickerComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nNumberPickerComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNumberPickerComponent.ctorParameters;\n/** @type {?} */\nNumberPickerComponent.propDecorators;\n/** @type {?} */\nNumberPickerComponent.prototype._min;\n/** @type {?} */\nNumberPickerComponent.prototype._max;\n/** @type {?} */\nNumberPickerComponent.prototype._step;\n/** @type {?} */\nNumberPickerComponent.prototype._disabled;\n/** @type {?} */\nNumberPickerComponent.prototype._value;\n/** @type {?} */\nNumberPickerComponent.prototype._propagateChange;\n/** @type {?} */\nNumberPickerComponent.prototype.valid;\n/** @type {?} */\nNumberPickerComponent.prototype.valueChange;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\n\nimport { NumberPickerComponent } from './number-picker.component';\nexport class NumberPickerModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        CommonModule,\n        FormsModule\n    ],\n    exports: [NumberPickerComponent],\n    declarations: [NumberPickerComponent]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction NumberPickerModule_tsickle_Closure_declarations() {\n/** @type {?} */\nNumberPickerModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNumberPickerModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive } from '@angular/core';\nexport class PageHeaderCustomMenuDirective { static decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{ \n    selector: '[uxPageHeaderCustomMenu]' \n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction PageHeaderCustomMenuDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nPageHeaderCustomMenuDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nPageHeaderCustomMenuDirective.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, EventEmitter, Input, Output, ContentChildren, QueryList, TemplateRef } from '@angular/core';\nimport { Breadcrumb } from '../breadcrumbs/index';\nimport { PageHeaderNavigationItem } from './navigation/navigation.component';\nimport { PageHeaderCustomMenuDirective } from './custom-menu/custom-menu.directive';\nexport class PageHeaderComponent {\n\n     logo: string;\n     items: PageHeaderNavigationItem[];\n     crumbs: Breadcrumb[];\n     header: string;\n     alignment: 'left' | 'right' | 'center' = 'center';\n     condensed: boolean = false;\n     iconMenus: PageHeaderIconMenu[];\n     backVisible: boolean = true;\n    \n     backClick = new EventEmitter();\n\n     customMenus: QueryList<TemplateRef<any>>;\n/**\n * @return {?}\n */\ngoBack() {\n        this.backClick.emit();\n    }\n/**\n * @return {?}\n */\ngetCondensedBreadcrumbs(): Breadcrumb[] {\n        if (this.crumbs) {\n\n            let /** @type {?} */ crumbs = this.crumbs.slice();\n            crumbs.push({ title: this.header });\n\n            return crumbs;\n        }\n\n        return [{ title: this.header }];\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-page-header',\n    exportAs: 'ux-page-header',\n    template: `\n      <!-- Display Upper Section when not condensed -->\n      <div class=\"page-header-actions\" *ngIf=\"!condensed\">\n\n          <div class=\"page-header-logo-container\" [hidden]=\"!logo\">\n              <img [attr.src]=\"logo\" class=\"page-header-logo\">\n          </div>\n\n          <div class=\"page-header-navigation\" [ngClass]=\"alignment\">\n\n              <!-- The Top Navigation Options -->\n              <ux-page-header-horizontal-navigation [items]=\"items\"></ux-page-header-horizontal-navigation>\n          </div>\n\n          <div class=\"page-header-icon-menus\">\n              <ng-container *ngFor=\"let menu of customMenus\" [ngTemplateOutlet]=\"menu\"></ng-container>\n\n              <ux-page-header-icon-menu *ngFor=\"let menu of iconMenus\" [menu]=\"menu\"></ux-page-header-icon-menu>\n          </div>\n      </div>\n\n      <!-- Display Lower Section When Not Condensed -->\n      <div class=\"page-header-details\" *ngIf=\"!condensed\">\n\n          <div class=\"page-header-state-container\">\n\n              <div *ngIf=\"backVisible == true\" class=\"page-header-back-button\" (click)=\"goBack()\">\n                  <span class=\"hpe-icon hpe-previous text-primary\"></span>\n              </div>\n\n              <div class=\"page-header-title-container\">\n\n                  <ux-breadcrumbs [crumbs]=\"crumbs\"></ux-breadcrumbs>\n\n                  <h1 class=\"page-header-title\">{{ header }}</h1>\n              </div>\n\n          </div>\n\n      </div>\n\n      <!-- Display This Section Optimized for Condensed Mode -->\n      <div class=\"page-header-condensed-content\" *ngIf=\"condensed\">\n\n          <div class=\"page-header-breadcrumbs\">\n              <ux-breadcrumbs [crumbs]=\"getCondensedBreadcrumbs()\"></ux-breadcrumbs>\n          </div>\n\n          <div class=\"page-header-navigation\" [ngClass]=\"alignment\">\n\n              <!-- The Top Navigation Options -->\n              <ux-page-header-horizontal-navigation [items]=\"items\"></ux-page-header-horizontal-navigation>\n          </div>\n\n          <div class=\"page-header-icon-menus\">\n              <ng-container *ngFor=\"let menu of customMenus\" [ngTemplateOutlet]=\"menu\"></ng-container>\n              <ux-page-header-icon-menu *ngFor=\"let menu of iconMenus\" [menu]=\"menu\"></ux-page-header-icon-menu>\n          </div>\n\n      </div>\n    `,\n    host: {\n        '[class.page-header-condensed]': 'condensed'\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'logo': [{ type: Input },],\n'items': [{ type: Input },],\n'crumbs': [{ type: Input },],\n'header': [{ type: Input },],\n'alignment': [{ type: Input },],\n'condensed': [{ type: Input },],\n'iconMenus': [{ type: Input },],\n'backVisible': [{ type: Input },],\n'backClick': [{ type: Output },],\n'customMenus': [{ type: ContentChildren, args: [PageHeaderCustomMenuDirective, { read: TemplateRef }, ] },],\n};\n}\n\nfunction PageHeaderComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nPageHeaderComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nPageHeaderComponent.ctorParameters;\n/** @type {?} */\nPageHeaderComponent.propDecorators;\n/** @type {?} */\nPageHeaderComponent.prototype.logo;\n/** @type {?} */\nPageHeaderComponent.prototype.items;\n/** @type {?} */\nPageHeaderComponent.prototype.crumbs;\n/** @type {?} */\nPageHeaderComponent.prototype.header;\n/** @type {?} */\nPageHeaderComponent.prototype.alignment;\n/** @type {?} */\nPageHeaderComponent.prototype.condensed;\n/** @type {?} */\nPageHeaderComponent.prototype.iconMenus;\n/** @type {?} */\nPageHeaderComponent.prototype.backVisible;\n/** @type {?} */\nPageHeaderComponent.prototype.backClick;\n/** @type {?} */\nPageHeaderComponent.prototype.customMenus;\n}\n\n\nexport interface PageHeaderIconMenu {\n    icon: string;\n    badge?: number | string;\n    select?: (menu: PageHeaderIconMenu) => void;\n    dropdown?: PageHeaderIconMenuDropdownItem[];\n}\n\nexport interface PageHeaderIconMenuDropdownItem {\n    icon?: string;\n    title: string;\n    subtitle?: string;\n    header?: boolean;\n    divider?: boolean;\n    select?: () => void;\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Input } from '@angular/core';\nimport { PageHeaderIconMenu, PageHeaderIconMenuDropdownItem } from '../page-header.component';\nexport class PageHeaderIconMenuComponent {\n\n     menu: PageHeaderIconMenu;\n/**\n * @param {?} item\n * @return {?}\n */\nselect(item: PageHeaderIconMenu | PageHeaderIconMenuDropdownItem) {\n        if (item.select) {\n            item.select.call(item, item);\n        }\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-page-header-icon-menu',\n    template: `\n      <div class=\"page-header-icon-menu\" dropdown dropdownToggle placement=\"bottom right\">\n\n          <a class=\"page-header-icon-menu-button\" (click)=\"select(menu)\">\n              <i class=\"hpe-icon\" [ngClass]=\"menu.icon\"></i>\n              <span class=\"label label-primary\" *ngIf=\"menu?.badge\">{{ menu.badge }}</span>\n          </a>\n\n          <ul *dropdownMenu class=\"dropdown-menu\" role=\"menu\">\n\n              <li role=\"menuitem\" *ngFor=\"let dropdown of menu?.dropdown\" [class.dropdown-header]=\"dropdown.header\" [class.dropdown-divider]=\"dropdown.divider\">\n\n                  <span class=\"font-bold\" *ngIf=\"dropdown.header\">{{ dropdown.title }}</span>\n\n                  <a class=\"dropdown-item\" *ngIf=\"!dropdown.header\" (click)=\"select(dropdown)\">\n                      <i class=\"hpe-icon hp-fw text-muted\" [ngClass]=\"dropdown.icon\"></i>\n                      {{ dropdown.title }}\n                      <span class=\"pull-right text-muted small\" *ngIf=\"dropdown.subtitle\">{{ dropdown.subtitle }}</span>\n                  </a>\n              </li>\n\n          </ul>\n      </div>\n    `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'menu': [{ type: Input },],\n};\n}\n\nfunction PageHeaderIconMenuComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nPageHeaderIconMenuComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nPageHeaderIconMenuComponent.ctorParameters;\n/** @type {?} */\nPageHeaderIconMenuComponent.propDecorators;\n/** @type {?} */\nPageHeaderIconMenuComponent.prototype.menu;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { BsDropdownDirective } from 'ngx-bootstrap/dropdown';\nimport { Subject } from 'rxjs/Subject';\nimport'rxjs/add/operator/debounceTime';\nimport { PageHeaderNavigationDropdownItem } from '../navigation.component';\nexport class PageHeaderNavigationDropdownItemComponent {\n\n     item: PageHeaderNavigationDropdownItem;\n     onSelect: EventEmitter<PageHeaderNavigationDropdownItem> = new EventEmitter<PageHeaderNavigationDropdownItem>();\n\n    dropdownOpen: boolean = false;\nprivate _dropdownEvents: Subject<boolean> = new Subject<boolean>();\nconstructor() {\n\n        // subscribe to stream with a debounce (a small debounce is all that is required)\n        this._dropdownEvents.debounceTime(1).subscribe(visible => this.dropdownOpen = visible);\n    }\n/**\n * @param {?} item\n * @param {?=} parentItem\n * @return {?}\n */\nselectItem(item: PageHeaderNavigationDropdownItem, parentItem?: PageHeaderNavigationDropdownItem) {\n\n        // clicking on an item with children then return\n        if (item.children) {\n            return;\n        }\n\n        // emit the selected item in an event\n        this.onSelect.emit(item);\n\n        // select the current item\n        item.selected = true;\n\n        // now also select the parent menu\n        if (parentItem) {\n            parentItem.selected = true;\n        }\n    }\n/**\n * @return {?}\n */\nhoverStart() {\n        this._dropdownEvents.next(true);\n    }\n/**\n * @return {?}\n */\nhoverLeave() {\n        this._dropdownEvents.next(false);\n    }\n/**\n * @return {?}\n */\nclose() {\n        this.dropdownOpen = false;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-page-header-horizontal-navigation-dropdown-item',\n    template: `\n      <div role=\"menu-item\" dropdown [isOpen]=\"dropdownOpen\" container=\"body\" placement=\"right\" [isDisabled]=\"!item.children\" (mouseenter)=\"hoverStart()\"\n          (mouseleave)=\"hoverLeave()\" #subMenu=\"bs-dropdown\">\n\n          <!-- Show the menu item and the arrow if there are children -->\n          <a class=\"dropdown-item\" tabindex=\"0\" [class.selected]=\"item.selected\" (keyup.enter)=\"selectItem(item); subMenu.toggle()\" (click)=\"selectItem(item)\">\n              <span class=\"dropdown-item-title\">{{ item.title }}</span>\n              <span class=\"dropdown-item-icon hpe-icon hpe-next\" *ngIf=\"item.children\"></span>\n          </a>\n\n          <!-- Allow another level of menu items -->\n          <ul *dropdownMenu class=\"dropdown-menu horizontal-navigation-dropdown-submenu\" role=\"menu\" (mouseenter)=\"hoverStart()\" (mouseleave)=\"hoverLeave()\">\n\n              <li role=\"menuitem\" *ngFor=\"let subItem of item.children\" (click)=\"selectItem(subItem, item)\" (keyup.enter)=\"selectItem(subItem, item)\">\n                  <a class=\"dropdown-item\" tabindex=\"0\" [class.selected]=\"subItem.selected\">\n                      <span class=\"dropdown-item-title\">{{ subItem.title }}</span>\n                  </a>\n              </li>\n          </ul>\n      </div>\n    `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'item': [{ type: Input },],\n'onSelect': [{ type: Output },],\n};\n}\n\nfunction PageHeaderNavigationDropdownItemComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nPageHeaderNavigationDropdownItemComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nPageHeaderNavigationDropdownItemComponent.ctorParameters;\n/** @type {?} */\nPageHeaderNavigationDropdownItemComponent.propDecorators;\n/** @type {?} */\nPageHeaderNavigationDropdownItemComponent.prototype.item;\n/** @type {?} */\nPageHeaderNavigationDropdownItemComponent.prototype.onSelect;\n/** @type {?} */\nPageHeaderNavigationDropdownItemComponent.prototype.dropdownOpen;\n/** @type {?} */\nPageHeaderNavigationDropdownItemComponent.prototype._dropdownEvents;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Input, ViewChild, ViewChildren, QueryList, OnInit, Output, EventEmitter, ElementRef } from '@angular/core';\nimport { BsDropdownDirective } from 'ngx-bootstrap/dropdown';\nimport { PageHeaderNavigationDropdownItemComponent } from '../navigation-dropdown-item/navigation-dropdown-item.component';\nimport { PageHeaderNavigationItem, PageHeaderNavigationDropdownItem } from '../navigation.component';\nexport class PageHeaderNavigationItemComponent implements OnInit {\n\n     menu: BsDropdownDirective;\n     dropdownComponents: QueryList<PageHeaderNavigationDropdownItemComponent>;\n\n     item: PageHeaderNavigationItem;\n     onSelect: EventEmitter<PageHeaderNavigationDropdownItem> = new EventEmitter<PageHeaderNavigationDropdownItem>();\n/**\n * @param {?} elementRef\n */\nconstructor(public elementRef: ElementRef) {}\n/**\n * @return {?}\n */\nngOnInit() {\n        this.menu.onHidden.subscribe(() => this.dropdownComponents.forEach(dropdown => dropdown.close()));\n    }\n/**\n * @return {?}\n */\nselectItem() {\n\n        // if the item has children then do nothing at this stage \n        if (this.item.children) {\n            return;\n        }\n\n        // otherwise select the current item\n        this.onItemSelect(this.item);\n    }\n/**\n * @param {?} item\n * @return {?}\n */\nonItemSelect(item: PageHeaderNavigationItem | PageHeaderNavigationDropdownItem) {\n        this.onSelect.emit(item);\n\n        // select the current item\n        this.item.selected = true;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-page-header-horizontal-navigation-item',\n    template: `\n      <div class=\"horizontal-navigation-button\" dropdown dropdownToggle placement=\"bottom left\" [isDisabled]=\"!item?.children\" tabindex=\"0\" container=\"body\"\n          #menu=\"bs-dropdown\" (keyup.enter)=\"menu.toggle()\" [class.selected]=\"item?.selected\" (click)=\"selectItem()\">\n\n          <span class=\"hpe-icon navigation-item-icon\" *ngIf=\"item.icon\" [ngClass]=\"item?.icon\"></span>\n          <span class=\"navigation-item-label\">{{ item?.title }}</span>\n          <span class=\"hpe-icon hpe-down\" *ngIf=\"item?.children\"></span>\n\n          <div *dropdownMenu class=\"dropdown-menu horizontal-navigation-dropdown-menu\" role=\"menu\">\n              <ux-page-header-horizontal-navigation-dropdown-item *ngFor=\"let item of item?.children\" [item]=\"item\" (onSelect)=\"onItemSelect($event)\"></ux-page-header-horizontal-navigation-dropdown-item>\n          </div>\n\n      </div>\n    `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'menu': [{ type: ViewChild, args: ['menu', ] },],\n'dropdownComponents': [{ type: ViewChildren, args: [PageHeaderNavigationDropdownItemComponent, ] },],\n'item': [{ type: Input },],\n'onSelect': [{ type: Output },],\n};\n}\n\nfunction PageHeaderNavigationItemComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nPageHeaderNavigationItemComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nPageHeaderNavigationItemComponent.ctorParameters;\n/** @type {?} */\nPageHeaderNavigationItemComponent.propDecorators;\n/** @type {?} */\nPageHeaderNavigationItemComponent.prototype.menu;\n/** @type {?} */\nPageHeaderNavigationItemComponent.prototype.dropdownComponents;\n/** @type {?} */\nPageHeaderNavigationItemComponent.prototype.item;\n/** @type {?} */\nPageHeaderNavigationItemComponent.prototype.onSelect;\n/** @type {?} */\nPageHeaderNavigationItemComponent.prototype.elementRef;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Input, ViewChildren, QueryList, ElementRef, Renderer2, AfterViewInit } from '@angular/core';\nimport { PageHeaderNavigationItemComponent } from './navigation-item/navigation-item.component';\nimport { ResizeService } from '../../../directives/resize/index';\nexport class PageHeaderNavigationComponent implements AfterViewInit {\n    \n     menuItems: QueryList<PageHeaderNavigationItemComponent>;\n     \n     items: PageHeaderNavigationItem[] = [];\n\n    indicatorVisible: boolean = false;\n    indicatorX: number = 0;\n    indicatorWidth: number = 0;\n/**\n * @param {?} elementRef\n * @param {?} resizeService\n * @param {?} renderer\n */\nconstructor(elementRef: ElementRef, resizeService: ResizeService, renderer: Renderer2) {\n        resizeService.addResizeListener(elementRef.nativeElement, renderer).subscribe(this.updateSelectedIndicator.bind(this));\n    }\n/**\n * @return {?}\n */\nngAfterViewInit(): void {\n        this.updateSelectedIndicator();\n    }\n/**\n * @param {?} item\n * @return {?}\n */\nonSelect(item: PageHeaderNavigationItem): void {\n        \n        if (item.select) {\n            item.select.call(item, item);\n        }\n\n        // deselect all items in all menus\n        this.deselectAll();\n\n        // update the selected indicator\n        this.updateSelectedIndicator();\n    }\n/**\n * @return {?}\n */\ndeselectAll(): void {\n        this.items.forEach(item => this.deselect(item));\n    }\n/**\n * @param {?} navItem\n * @return {?}\n */\ndeselect(navItem: PageHeaderNavigationItem | PageHeaderNavigationDropdownItem): void {\n        \n        // deselect the current item\n        navItem.selected = false;\n\n        // iterate any children and deselect them\n        if (navItem.children) {\n            navItem.children.forEach(item => this.deselect(item));\n        }\n\n        // update the selected indicator\n        this.updateSelectedIndicator();\n    }\n/**\n * @return {?}\n */\nupdateSelectedIndicator(): void {\n\n        setTimeout(() => {\n\n            // find the selected item\n            let /** @type {?} */ selectedItem = this.menuItems.find(item => item.item.selected);\n\n            // determine whether or not to show the indicator\n            this.indicatorVisible = !!selectedItem;\n\n            // set the width of the indicator to match the width of the navigation item\n            if (selectedItem) {\n                let /** @type {?} */ styles = getComputedStyle(selectedItem.elementRef.nativeElement);\n\n                this.indicatorX = selectedItem.elementRef.nativeElement.offsetLeft;\n                this.indicatorWidth = parseInt(styles.getPropertyValue('width'));\n            }\n        });\n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-page-header-horizontal-navigation',\n    template: `\n      <ux-page-header-horizontal-navigation-item *ngFor=\"let item of items\" [item]=\"item\" (onSelect)=\"onSelect($event)\"></ux-page-header-horizontal-navigation-item>\n      <div class=\"selected-indicator\" [style.opacity]=\"indicatorVisible ? 1 : 0\" [style.margin-left.px]=\"indicatorX\" [style.width.px]=\"indicatorWidth\"></div>\n    `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: ResizeService, },\n{type: Renderer2, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'menuItems': [{ type: ViewChildren, args: [PageHeaderNavigationItemComponent, ] },],\n'items': [{ type: Input },],\n};\n}\n\nfunction PageHeaderNavigationComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nPageHeaderNavigationComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nPageHeaderNavigationComponent.ctorParameters;\n/** @type {?} */\nPageHeaderNavigationComponent.propDecorators;\n/** @type {?} */\nPageHeaderNavigationComponent.prototype.menuItems;\n/** @type {?} */\nPageHeaderNavigationComponent.prototype.items;\n/** @type {?} */\nPageHeaderNavigationComponent.prototype.indicatorVisible;\n/** @type {?} */\nPageHeaderNavigationComponent.prototype.indicatorX;\n/** @type {?} */\nPageHeaderNavigationComponent.prototype.indicatorWidth;\n}\n\n\nexport interface PageHeaderNavigationItem {\n    icon?: string;\n    title: string;\n    selected?: boolean;\n    select?: (item: PageHeaderNavigationItem) => void;\n    children?: PageHeaderNavigationDropdownItem[];\n}\n\nexport interface PageHeaderNavigationDropdownItem {\n    title: string;\n    selected?: boolean;    \n    select?: (item: PageHeaderNavigationDropdownItem) => void;\n    children?: PageHeaderNavigationDropdownItem[];\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\n\nimport { PageHeaderComponent } from './page-header.component';\nimport { BreadcrumbsModule } from '../breadcrumbs/index';\nimport { PageHeaderIconMenuComponent } from './icon-menu/icon-menu.component';\nimport { PageHeaderNavigationComponent } from './navigation/navigation.component';\nimport { PageHeaderNavigationItemComponent } from './navigation/navigation-item/navigation-item.component';\nimport { PageHeaderNavigationDropdownItemComponent } from './navigation/navigation-dropdown-item/navigation-dropdown-item.component';\nimport { PageHeaderCustomMenuDirective } from './custom-menu/custom-menu.directive';\nimport { ResizeModule } from '../../directives/resize/index';\nexport class PageHeaderModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        CommonModule,\n        BreadcrumbsModule,\n        ResizeModule,\n        BsDropdownModule.forRoot()\n    ],\n    exports: [ \n        PageHeaderComponent,\n        PageHeaderCustomMenuDirective \n    ],\n    declarations: [ \n        PageHeaderComponent,\n        PageHeaderIconMenuComponent,\n        PageHeaderCustomMenuDirective,\n        PageHeaderNavigationComponent,\n        PageHeaderNavigationItemComponent,\n        PageHeaderNavigationDropdownItemComponent\n    ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction PageHeaderModule_tsickle_Closure_declarations() {\n/** @type {?} */\nPageHeaderModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nPageHeaderModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { ColorValueSet, ColorClassSet } from './color.service';\nimport {\n    DOCUMENT\n} from '@angular/platform-browser';\nimport {\n    Injectable,\n    Inject\n} from '@angular/core';\nexport class ColorService {\nprivate _html: string;\nprivate _element: HTMLElement;\nprivate _colors: ThemeColors;\nprivate _colorSet: any = colorSets.keppel;\n/**\n * @param {?} document\n */\nconstructor(  document: any) {\n        if (this._colorSet.colorClassSet) {\n            this._setColors();\n        } else {\n            for (let key in this._colorSet.colorValueSet) {\n                this._colors[key] = this._getColorValueByHex(this._colorSet.colorValueSet[key]);\n            }\n        }\n    }\n/**\n * @return {?}\n */\nprivate _setColors() {\n\n        this._html = '';\n\n        for (let /** @type {?} */ key in this._colorSet.colorClassSet) {\n            this._html += '<div class=\"' + this._colorSet.colorClassSet[key] + '-color\"></div>';\n        }\n\n        this._element = document.createElement('div');\n        this._element.className = 'color-chart';\n        this._element.innerHTML = this._html;\n\n        document.body.appendChild(this._element);\n\n        this._colors = {};\n\n        for (let /** @type {?} */ key in this._colorSet.colorClassSet) {\n            this._colors[key] = this.getColorValue(this._colorSet.colorClassSet[key]);\n        }\n\n        this._element.parentNode.removeChild(this._element);\n    }\n/**\n * @param {?} color\n * @return {?}\n */\nprivate _getColorValueByHex(color: string): ThemeColor {\n        let /** @type {?} */ hex = color.replace('#', '');\n\n        let /** @type {?} */ r = parseInt(hex.substring(0, 2), 16).toString();\n        let /** @type {?} */ g = parseInt(hex.substring(2, 4), 16).toString();\n        let /** @type {?} */ b = parseInt(hex.substring(4, 6), 16).toString();\n\n        return new ThemeColor(r, g, b, '1');\n    }\n/**\n * @param {?} color\n * @return {?}\n */\nprivate getColorValue(color: ColorIdentifier): ThemeColor {\n\n        let /** @type {?} */ target = this._element.querySelector('.' + this._colorSet.colorClassSet[color] + '-color');\n\n        if (!target) {\n            throw new Error('Invalid color');\n        }\n\n        let /** @type {?} */ colorValue = window.getComputedStyle(target).backgroundColor;\n\n        let /** @type {?} */ rgba = colorValue.match(/^rgba?\\((\\d+),\\s*(\\d+),\\s*(\\d+)(?:,\\s*(\\d+(?:\\.\\d+)?))?\\)$/);\n\n        return new ThemeColor(rgba[1], rgba[2], rgba[3], rgba[4]);\n    }\n/**\n * @param {?} color\n * @return {?}\n */\ngetColor(color: ColorIdentifier): ThemeColor {\n        return this._colors[color.toLowerCase()];\n    }\n/**\n * @return {?}\n */\ngetColorSet() {\n        return this._colorSet;\n    }\n/**\n * @param {?} colorSet\n * @return {?}\n */\nsetColorSet(colorSet: ColorSet) {\n        this._colorSet = colorSet;\n        this._colors = {};\n\n        if (this._colorSet.colorClassSet) {\n            this._setColors();\n        } else {\n            for (let /** @type {?} */ key in this._colorSet.colorValueSet) {\n                this._colors[key] = this._getColorValueByHex(this._colorSet.colorValueSet[key]);\n            }\n        }\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nresolve(value: string): string {\n        if (!value) {\n            return;\n        }\n        \n        const /** @type {?} */ colorName = value.replace(/\\s+/g, '-').toLowerCase();\n        \n        for (let /** @type {?} */ color in this._colors) {\n            if (colorName === color.toLowerCase()) {\n                return this.getColor(colorName).toRgba();\n            }\n        }\n\n        return value;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nresolveColorName(value: string): string {\n        return value.replace(/\\s+/g, '-').toLowerCase();\n    }\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: undefined, decorators: [{ type: Inject, args: [DOCUMENT, ] }, ]},\n];\n}\n\nfunction ColorService_tsickle_Closure_declarations() {\n/**\n * @nocollapse\n * @type {?}\n */\nColorService.ctorParameters;\n/** @type {?} */\nColorService.prototype._html;\n/** @type {?} */\nColorService.prototype._element;\n/** @type {?} */\nColorService.prototype._colors;\n/** @type {?} */\nColorService.prototype._colorSet;\n}\n\nexport class ThemeColor {\nprivate _r: string;\nprivate _g: string;\nprivate _b: string;\nprivate _a: string;\n/**\n * @param {?} r\n * @param {?} g\n * @param {?} b\n * @param {?} a\n */\nconstructor(r: string, g: string, b: string, a: string) {\n        this._r = r;\n        this._g = g;\n        this._b = b;\n        this._a = a === undefined ? '1' : a;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nstatic parse(value: string): ThemeColor {\n        let /** @type {?} */ r, /** @type {?} */ g, /** @type {?} */ b, /** @type {?} */ a = '1';\n\n        var /** @type {?} */ rgbaPattern = /^rgba?\\((\\d+),\\s*(\\d+),\\s*(\\d+)(?:,\\s*(\\d+(?:\\.\\d+)?))?\\)$/;\n        var /** @type {?} */ shortHexPattern = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;\n        var /** @type {?} */ longHexPattern = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/;\n\n        let /** @type {?} */ rgbaMatch = value.match(rgbaPattern);\n        let /** @type {?} */ shortHexMatch = value.match(shortHexPattern);\n        let /** @type {?} */ longHexMatch = value.match(longHexPattern);\n\n        if (rgbaMatch) {\n            r = rgbaMatch[1];\n            g = rgbaMatch[2];\n            b = rgbaMatch[3];\n            a = rgbaMatch[4] ? rgbaMatch[4] : '1';\n        } else if (longHexMatch) {\n            r = parseInt(longHexMatch[1], 16).toString();\n            g = parseInt(longHexMatch[2], 16).toString();\n            b = parseInt(longHexMatch[3], 16).toString();\n        } else if (shortHexMatch) {\n            r = parseInt(shortHexMatch[1] + shortHexMatch[1], 16).toString();\n            g = parseInt(shortHexMatch[2] + shortHexMatch[2], 16).toString();\n            b = parseInt(shortHexMatch[3] + shortHexMatch[3], 16).toString();\n        } else {\n            throw new Error(`Cannot parse color - ${value} is not a valid color.`);\n        }\n        return new ThemeColor(r, g, b, a);\n    }\n/**\n * @return {?}\n */\ntoHex() {\n        var /** @type {?} */ red = parseInt(this._r).toString(16);\n        var /** @type {?} */ green = parseInt(this._g).toString(16);\n        var /** @type {?} */ blue = parseInt(this._b).toString(16);\n\n        if (red.length < 2) {\n            red = '0' + red;\n        }\n        if (green.length < 2) {\n            green = '0' + green;\n        }\n        if (blue.length < 2) {\n            blue = '0' + blue;\n        }\n\n        return '#' + red + green + blue;\n    }\n/**\n * @return {?}\n */\ntoRgb() {\n        return 'rgb(' + this._r + ', ' + this._g + ', ' + this._b + ')';\n    }\n/**\n * @return {?}\n */\ntoRgba() {\n        return 'rgba(' + this._r + ', ' + this._g + ', ' + this._b + ', ' + this._a + ')';\n    }\n/**\n * @return {?}\n */\ngetRed() {\n        return this._r;\n    }\n/**\n * @return {?}\n */\ngetGreen() {\n        return this._g;\n    }\n/**\n * @return {?}\n */\ngetBlue() {\n        return this._b;\n    }\n/**\n * @return {?}\n */\ngetAlpha() {\n        return this._a;\n    }\n/**\n * @param {?} red\n * @return {?}\n */\nsetRed(red: string) {\n        this._r = red;\n        return this;\n    }\n/**\n * @param {?} green\n * @return {?}\n */\nsetGreen(green: string) {\n        this._g = green;\n        return this;\n    }\n/**\n * @param {?} blue\n * @return {?}\n */\nsetBlue(blue: string) {\n        this._b = blue;\n        return this;\n    }\n/**\n * @param {?} alpha\n * @return {?}\n */\nsetAlpha(alpha: string | number) {\n        this._a = alpha.toString();\n        return this;\n    }\n}\n\nfunction ThemeColor_tsickle_Closure_declarations() {\n/** @type {?} */\nThemeColor.prototype._r;\n/** @type {?} */\nThemeColor.prototype._g;\n/** @type {?} */\nThemeColor.prototype._b;\n/** @type {?} */\nThemeColor.prototype._a;\n}\n\n\nexport const /** @type {?} */ colorSets = {\n    keppel: {\n        colorClassSet: {\n            'primary': 'primary',\n            'accent': 'accent',\n            'secondary': 'secondary',\n            'alternate1': 'alternate1',\n            'alternate2': 'alternate2',\n            'alternate3': 'alternate3',\n            'vibrant1': 'vibrant1',\n            'vibrant2': 'vibrant2',\n            'grey1': 'grey1',\n            'grey2': 'grey2',\n            'grey3': 'grey3',\n            'grey4': 'grey4',\n            'grey5': 'grey5',\n            'grey6': 'grey6',\n            'grey7': 'grey7',\n            'grey8': 'grey8',\n            'chart1': 'chart1',\n            'chart2': 'chart2',\n            'chart3': 'chart3',\n            'chart4': 'chart4',\n            'chart5': 'chart5',\n            'chart6': 'chart6',\n            'ok': 'ok',\n            'warning': 'warning',\n            'critical': 'critical',\n            'partition1': 'partition1',\n            'partition9': 'partition9',\n            'partition10': 'partition10',\n            'partition11': 'partition11',\n            'partition12': 'partition12',\n            'partition13': 'partition13',\n            'partition14': 'partition14',\n            'social-chart-node': 'social-chart-node',\n            'social-chart-edge': 'social-chart-edge'\n        }\n    },\n    microFocus: {\n        'colorValueSet': {\n            'cerulean': '#1668c1',\n            'aqua': '#29ceff',\n            'aquamarine': '#2fd6c3',\n            'fuchsia': '#c6179d',\n            'indigo': '#7425ad',\n            'dark-blue': '#231ca5',\n            'white': '#ffffff',\n            'slightly-gray': '#f5f7f8',\n            'bright-gray': '#f1f2f3',\n            'gray': '#dcdedf',\n            'silver': '#bdbec0',\n            'dim-gray': '#656668',\n            'dark-gray': '#323435',\n            'black': '#000000',\n            'crimson-negative': '#e5004c',\n            'apricot': '#f48b34',\n            'yellow': '#fcdb1f',\n            'green-positive': '#1aac60',\n            'ultramarine': '#3939c6',\n            'skyblue': '#00abf3',\n            'pale-aqua': '#43e4ff',\n            'pale-green': '#1ffbba',\n            'lime': '#75da4d',\n            'orange': '#ffce00',\n            'magenta': '#eb23c2',\n            'pale-purple': '#ba47e2',\n            'dark-ultramarine': '#271782',\n            'steelblue': '#014272',\n            'arctic-blue': '#0b8eac',\n            'emerald': '#00a989',\n            'olive': '#5bba36',\n            'goldenrod': '#ffb000',\n            'purple': '#9b1e83',\n            'pale-eggplant': '#5216ac',\n            'red': '#ff454f',\n            'pale-amber': '#ffb24d',\n            'pale-lemon': '#fde159',\n            'pale-emerald': '#33c180',\n            'plum': '#b21646',\n            'copper': '#e57828',\n            'amber': '#ffc002',\n            'leaf-green': '#118c4f',\n            'primary': '#0073e7',\n            'accent': '#7425ad',\n            'secondary': '#ffffff',\n            'alternate1': '#29ceff',\n            'alternate2': '#2fd6c3',\n            'alternate3': '#c6179d',\n            'vibrant1': '#43e4ff',\n            'vibrant2': '#ffce00',\n            'grey1': '#000000',\n            'grey2': '#323435',\n            'grey3': '#656668',\n            'grey4': '#bdbec0',\n            'grey5': '#dcdedf',\n            'grey6': '#f1f2f3',\n            'grey7': '#f5f7f8',\n            'grey8': '#ffffff',\n            'chart1': '#3939c6',\n            'chart2': '#00abf3',\n            'chart3': '#75da4d',\n            'chart4': '#ffce00',\n            'chart5': '#eb23c2',\n            'chart6': '#ba47e2',\n            'ok': '#1aac60',\n            'warning': '#f48b34',\n            'critical': 'e5004c',\n            'partition1': '#7425ad',\n            'partition9': '#5216ac',\n            'partition10': '#5bba36',\n            'partition11': '#014272',\n            'partition12': '#ffb000',\n            'partition13': '#bdbec0',\n            'partition14': '#271782',\n            'social-chart-node': '#ff00ff',\n            'social-chart-edge': '#ff00ff'\n        }\n    }\n};\n\nexport interface ThemeColors {\n    [name: string]: ThemeColor;\n}\n\nexport interface ColorSet {\n    colorClassSet?: ColorClassSet;\n    colorValueSet?: ColorValueSet;\n}\n\nexport interface ColorClassSet {\n    [name: string]: string;\n}\n\nexport interface ColorValueSet {\n    [name: string]: string;\n}\n\nexport type ColorIdentifier = string;\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\n\nimport { ColorService } from './color.service';\nexport class ColorServiceModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [],\n    exports: [],\n    declarations: [],\n    providers: [ColorService],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ColorServiceModule_tsickle_Closure_declarations() {\n/** @type {?} */\nColorServiceModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nColorServiceModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Input, OnChanges, SimpleChanges } from '@angular/core';\nimport { ColorService } from '../../services/color/index';\nexport class ProgressBarComponent implements OnChanges {\n\n     value: number = 0;\n     max: number = 100;\n     trackColor: string = this.colorService.getColor('grey7').toHex();\n     barColor: string = this.colorService.getColor('accent').toHex();\n\n    percentage: number = 0;\n/**\n * @param {?} colorService\n */\nconstructor(private colorService: ColorService) { }\n/**\n * @param {?} changes\n * @return {?}\n */\nngOnChanges(changes: SimpleChanges): void {\n        this.percentage = (this.value / this.max) * 100;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-progress-bar',\n    template: `\n      <div class=\"progressbar-track\" [style.width.%]=\"percentage\" [style.backgroundColor]=\"barColor\">\n          <ng-content></ng-content>\n      </div>\n    `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ColorService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'value': [{ type: Input },],\n'max': [{ type: Input },],\n'trackColor': [{ type: Input },],\n'barColor': [{ type: Input },],\n};\n}\n\nfunction ProgressBarComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nProgressBarComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nProgressBarComponent.ctorParameters;\n/** @type {?} */\nProgressBarComponent.propDecorators;\n/** @type {?} */\nProgressBarComponent.prototype.value;\n/** @type {?} */\nProgressBarComponent.prototype.max;\n/** @type {?} */\nProgressBarComponent.prototype.trackColor;\n/** @type {?} */\nProgressBarComponent.prototype.barColor;\n/** @type {?} */\nProgressBarComponent.prototype.percentage;\n/** @type {?} */\nProgressBarComponent.prototype.colorService;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\n\nimport { ProgressBarComponent } from './progress-bar.component';\nimport { ColorServiceModule } from '../../services/color/index';\nexport class ProgressBarModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [ColorServiceModule],\n    exports: [ProgressBarComponent],\n    declarations: [ProgressBarComponent]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ProgressBarModule_tsickle_Closure_declarations() {\n/** @type {?} */\nProgressBarModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nProgressBarModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Input, forwardRef, HostListener, Output, EventEmitter } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\n\nexport const /** @type {?} */ RADIOBUTTON_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => RadioButtonComponent),\n    multi: true\n};\nexport class RadioButtonComponent implements ControlValueAccessor {\n\n     id: string;\n     simplified: boolean = false;\n     disabled: boolean = false;\n     name: string = '';\n     clickable: boolean = true;\n     option: any;\n     valueChange: EventEmitter<any> = new EventEmitter<any>();\n/**\n * @return {?}\n */\nget value() {\n        return this._value;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset value(value: boolean) {\n        this._value = value;\n\n        // invoke change event\n        this.valueChange.emit(this._value);\n\n        // call callback\n        this.onChangeCallback(this._value);\n    }\nprivate _value: any = false;\n\n    onTouchedCallback: () => void = () => { };\n    onChangeCallback: (_: any) => void = () => { };\n/**\n * @return {?}\n */\ncheckItem() {\n\n        if (this.disabled === true || this.clickable === false) {\n            return;\n        }\n\n        // toggle the checked state\n        this.value = this.option;\n\n        // call callback\n        this.onChangeCallback(this.value);\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nkeyDown(event: KeyboardEvent) {\n\n        // then toggle the checkbox\n        this.checkItem();\n\n        // prevent default browser behavior\n        event.stopPropagation();\n        event.preventDefault();\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nwriteValue(value: boolean) {\n        if (value !== this._value) {\n            this._value = value;\n        }\n    }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnChange(fn: any) {\n        this.onChangeCallback = fn;\n    }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnTouched(fn: any) {\n        this.onTouchedCallback = fn;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-radio-button',\n    template: `\n      <div class=\"ux-radio-button\" tabindex=\"0\"\n          [class.ux-checked]=\"value === option\"\n          [class.ux-simplified]=\"simplified === true\"\n          [class.ux-disabled]=\"disabled === true\"\n          (keydown.space)=\"keyDown($event)\">\n\n          <input type=\"radio\" role=\"radio\" tabindex=\"-1\"\n              [name]=\"name\" \n              [checked]=\"value === option\" \n              [disabled]=\"disabled\"\n              [value]=\"option\"\n              [id]=\"id\" />\n        \n      </div>\n\n      <div class=\"ux-radio-button-content\">\n          <ng-content></ng-content>\n      </div>\n    `,\n    providers: [RADIOBUTTON_VALUE_ACCESSOR]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'id': [{ type: Input },],\n'simplified': [{ type: Input },],\n'disabled': [{ type: Input },],\n'name': [{ type: Input },],\n'clickable': [{ type: Input },],\n'option': [{ type: Input },],\n'valueChange': [{ type: Output },],\n'value': [{ type: Input },],\n'checkItem': [{ type: HostListener, args: ['click', ] },],\n};\n}\n\nfunction RadioButtonComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nRadioButtonComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nRadioButtonComponent.ctorParameters;\n/** @type {?} */\nRadioButtonComponent.propDecorators;\n/** @type {?} */\nRadioButtonComponent.prototype.id;\n/** @type {?} */\nRadioButtonComponent.prototype.simplified;\n/** @type {?} */\nRadioButtonComponent.prototype.disabled;\n/** @type {?} */\nRadioButtonComponent.prototype.name;\n/** @type {?} */\nRadioButtonComponent.prototype.clickable;\n/** @type {?} */\nRadioButtonComponent.prototype.option;\n/** @type {?} */\nRadioButtonComponent.prototype.valueChange;\n/** @type {?} */\nRadioButtonComponent.prototype._value;\n/** @type {?} */\nRadioButtonComponent.prototype.onTouchedCallback;\n/** @type {?} */\nRadioButtonComponent.prototype.onChangeCallback;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport {FormsModule} from '@angular/forms';\n\nimport { RadioButtonComponent } from './radiobutton.component';\nexport class RadioButtonModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [FormsModule],\n    exports: [RadioButtonComponent],\n    declarations: [RadioButtonComponent]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction RadioButtonModule_tsickle_Closure_declarations() {\n/** @type {?} */\nRadioButtonModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nRadioButtonModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs/Subject';\nimport { SearchBuilderQuery } from './interfaces/query.interface';\nimport { SearchBuilderGroupQuery } from './interfaces/group-query.interface';\nimport { SearchBuilderComponentDefinition } from './interfaces/component-definition.interface';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nexport class SearchBuilderService {\n\n  query: SearchBuilderQuery = {};\n  queryChange: Subject<SearchBuilderQuery> = new Subject<SearchBuilderQuery>();\n  validationChange: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(true);\nprivate _componentId: number = 0;\nprivate _components: SearchBuilderComponentDefinition[] = [];\nprivate _validation: { [key: number]: boolean } = {};\n/**\n * Add a component to the internal list of components\n * @param {?} component\n * @return {?}\n */\nregisterComponent(component: SearchBuilderComponentDefinition): void {\n\n    // ensure there are no components with a matching name\n    if (this._components.find(cmp => cmp.name === component.name)) {\n      throw new Error(`Search builder components must have a unique name. The name ${component.name} has already been used.`);\n    }\n\n    // if unique then add the component to the list\n    this._components.push(component);\n  }\n/**\n * Bulk registration of components\n * (Just a helper method)\n * @param {?} components\n * @return {?}\n */\nregisterComponents(components: SearchBuilderComponentDefinition[]): void {\n    components.forEach(component => this.registerComponent(component));\n  }\n/**\n * Get a registered component class\n * @param {?} name\n * @return {?}\n */\ngetComponent(name: string): any {\n\n    // find the component\n    const /** @type {?} */ component = this._components.find(cmp => cmp.name === name);\n\n    // if there is no match throw an exception\n    if (!component) {\n      throw new Error(`No search build component with the name ${name} exists`);\n    }\n\n    // ensure config is defined - at least to an empty object\n    component.config = component.config || {};\n\n    return component;\n  }\n/**\n * Update the internal search query state\n * note that the query will be immutable\n * @param {?} query\n * @return {?}\n */\nsetQuery(query: SearchBuilderQuery): void {\n    this.query = Object.assign({}, query);\n  }\n/**\n * Return the current query state\n * @return {?}\n */\ngetQuery(): SearchBuilderQuery {\n    return this.query;\n  }\n/**\n * Trigger the observable to indicate the query has been updated\n * @return {?}\n */\nqueryHasChanged(): void {\n    this.queryChange.next(this.query);\n  }\n/**\n * Store the validation state of the query\n * @param {?} id\n * @param {?} valid\n * @return {?}\n */\nsetValid(id: number, valid: boolean): void {\n\n    // store the state for this specific component\n    this._validation[id] = valid;\n\n    // evaluate the entire validation state\n    this.validationChange.next(!Object.keys(this._validation).some(key => !this._validation[key]));\n  }\n/**\n * Generate a unique id for each component\n * @return {?}\n */\ngenerateComponentId(): number {\n    return this._componentId++;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction SearchBuilderService_tsickle_Closure_declarations() {\n/** @type {?} */\nSearchBuilderService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSearchBuilderService.ctorParameters;\n/** @type {?} */\nSearchBuilderService.prototype.query;\n/** @type {?} */\nSearchBuilderService.prototype.queryChange;\n/** @type {?} */\nSearchBuilderService.prototype.validationChange;\n/** @type {?} */\nSearchBuilderService.prototype._componentId;\n/** @type {?} */\nSearchBuilderService.prototype._components;\n/** @type {?} */\nSearchBuilderService.prototype._validation;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable } from '@angular/core';\nimport { SearchBuilderService } from '../search-builder.service';\nimport { SearchBuilderGroupQuery } from '../interfaces/group-query.interface';\nimport { SearchBuilderQuery } from '../interfaces/query.interface';\nexport class SearchBuilderGroupService {\nprivate _id: string;\n/**\n * @param {?} _searchBuilderService\n */\nconstructor(private _searchBuilderService: SearchBuilderService) { }\n/**\n * Initialise the group by defining an id\n * @param {?} id\n * @return {?}\n */\ninit(id: string): void {\n    // store the name of the group\n    this._id = id;\n\n    // create the entry in the query object if it doesn't exist\n    if (!this._searchBuilderService.query[this._id]) {\n\n      // create the section\n      this._searchBuilderService.query[this._id] = [];\n\n      // emit the changes after the initial setup\n      setTimeout(() => this._searchBuilderService.queryHasChanged());\n    }\n  }\n/**\n * Remove a field from the search builder query\n * @param {?} field\n * @return {?}\n */\nremove(field: SearchBuilderGroupQuery): void {\n    // get the query for this group\n    const /** @type {?} */ query = this.getQuery();\n\n    // remove the field from the array\n    query.splice(query.indexOf(field), 1);\n  }\n/**\n * Get the query for this specific search group\n * @return {?}\n */\ngetQuery(): SearchBuilderGroupQuery[] {\n    return this._searchBuilderService.query[this._id] ? this._searchBuilderService.query[this._id] : [];\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: SearchBuilderService, },\n];\n}\n\nfunction SearchBuilderGroupService_tsickle_Closure_declarations() {\n/** @type {?} */\nSearchBuilderGroupService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSearchBuilderGroupService.ctorParameters;\n/** @type {?} */\nSearchBuilderGroupService.prototype._id;\n/** @type {?} */\nSearchBuilderGroupService.prototype._searchBuilderService;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, OnInit, Input, Output, EventEmitter, TemplateRef } from '@angular/core';\nimport { SearchBuilderGroupService } from './search-builder-group.service';\nimport { SearchBuilderService } from '../search-builder.service';\nimport { SearchBuilderGroupQuery } from '../interfaces/group-query.interface';\nexport class SearchBuilderGroupComponent implements OnInit {\n\n   id: string;\n   header: string;\n   operator: SearchBuilderGroupOperator = 'and';\n   addText: string = 'Add a field';\n   placeholder: TemplateRef<any>;\n   showPlaceholder: boolean = false;\n\n   add: EventEmitter<MouseEvent> = new EventEmitter<MouseEvent>();\n   remove: EventEmitter<SearchBuilderGroupQuery> = new EventEmitter<SearchBuilderGroupQuery>();\n/**\n * @param {?} searchBuilderGroupService\n * @param {?} _searchBuilderService\n */\nconstructor(public searchBuilderGroupService: SearchBuilderGroupService,\nprivate _searchBuilderService: SearchBuilderService) { }\n/**\n * @return {?}\n */\nngOnInit(): void {\n\n    // ensure we have a name otherwise throw an error\n    if (!this.id) {\n      throw new Error('Search builder group must have a name attribute.');\n    }\n\n    // otherwise register the group\n    this.searchBuilderGroupService.init(this.id);\n  }\n/**\n * @param {?} field\n * @return {?}\n */\nremoveField(field: SearchBuilderGroupQuery): void {\n    this.searchBuilderGroupService.remove(field);\n    this.remove.emit(field);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'ux-search-builder-group',\n  template: `\n    <h4 class=\"search-group-title\">{{ header }}</h4>\n\n    <main class=\"search-group-content\">\n\n      <section class=\"search-group-operator search-group-operator-{{ operator }}\" [class.hidden-operator]=\"searchBuilderGroupService.getQuery().length < 2\">{{ operator }}</section>\n\n      <section class=\"search-group-items\">\n\n        <div class=\"search-group-item-container\" *ngFor=\"let field of searchBuilderGroupService.getQuery()\">\n\n          <div class=\"search-group-item\">\n            <ng-container *uxSearchBuilderOutlet=\"field.type; context: field\"></ng-container>\n          </div>\n\n          <div class=\"search-group-item-remove\" (click)=\"removeField(field)\">\n            <span class=\"hpe-icon hpe-close\"></span>\n          </div>\n        </div>\n\n        <!-- Placeholder Item -->\n        <ng-container *ngIf=\"showPlaceholder\">\n\n          <!-- The Default Placeholder -->\n          <div class=\"search-group-item-container placeholder-item\" *ngIf=\"!placeholder\">\n        \n            <div class=\"search-group-item\">\n              <label class=\"form-label\">New field</label>\n              <div class=\"form-control\"></div>\n            </div>\n  \n          </div>\n\n          <!-- Allow a custom placeholder -->\n        <ng-container *ngTemplateOutlet=\"placeholder\"></ng-container>\n\n        </ng-container>\n\n      </section>\n\n      <section class=\"search-builder-group-add-field\" (click)=\"add.emit($event)\">\n\n        <button type=\"button\" class=\"btn btn-icon btn-circular button-accent\" aria-label=\"Add Field\">\n          <span class=\"hpe-icon hpe-add\" aria-hidden=\"true\"></span>\n        </button>\n\n        <span class=\"search-builder-group-add-field-label\">{{ addText }}</span>\n\n      </section>\n\n    </main>\n\n    <hr class=\"search-builder-group-divider\">\n  `,\n  providers: [SearchBuilderGroupService]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: SearchBuilderGroupService, },\n{type: SearchBuilderService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'id': [{ type: Input },],\n'header': [{ type: Input },],\n'operator': [{ type: Input },],\n'addText': [{ type: Input },],\n'placeholder': [{ type: Input },],\n'showPlaceholder': [{ type: Input },],\n'add': [{ type: Output },],\n'remove': [{ type: Output },],\n};\n}\n\nfunction SearchBuilderGroupComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nSearchBuilderGroupComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSearchBuilderGroupComponent.ctorParameters;\n/** @type {?} */\nSearchBuilderGroupComponent.propDecorators;\n/** @type {?} */\nSearchBuilderGroupComponent.prototype.id;\n/** @type {?} */\nSearchBuilderGroupComponent.prototype.header;\n/** @type {?} */\nSearchBuilderGroupComponent.prototype.operator;\n/** @type {?} */\nSearchBuilderGroupComponent.prototype.addText;\n/** @type {?} */\nSearchBuilderGroupComponent.prototype.placeholder;\n/** @type {?} */\nSearchBuilderGroupComponent.prototype.showPlaceholder;\n/** @type {?} */\nSearchBuilderGroupComponent.prototype.add;\n/** @type {?} */\nSearchBuilderGroupComponent.prototype.remove;\n/** @type {?} */\nSearchBuilderGroupComponent.prototype.searchBuilderGroupService;\n/** @type {?} */\nSearchBuilderGroupComponent.prototype._searchBuilderService;\n}\n\n\nexport type SearchBuilderGroupOperator = 'and' | 'or' | 'not';\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, OnInit, Type, Input, ComponentRef, ComponentFactoryResolver, ViewContainerRef } from '@angular/core';\nimport { SearchBuilderService } from '../search-builder.service';\nexport class SearchBuilderOutletDirective implements OnInit {\n\n     uxSearchBuilderOutlet: string;\n     uxSearchBuilderOutletContext: any;\nprivate _componentRef: ComponentRef<any>;\n/**\n * @param {?} _viewContainerRef\n * @param {?} _componentFactoryResolver\n * @param {?} _searchBuilderService\n */\nconstructor(\nprivate _viewContainerRef: ViewContainerRef,\nprivate _componentFactoryResolver: ComponentFactoryResolver,\nprivate _searchBuilderService: SearchBuilderService\n    ) { }\n/**\n * @return {?}\n */\nngOnInit(): void {\n\n        // get the class from the type\n        const /** @type {?} */ componentDefinition = this._searchBuilderService.getComponent(this.uxSearchBuilderOutlet);\n\n        // create the component factory\n        const /** @type {?} */ componentFactory = this._componentFactoryResolver.resolveComponentFactory(componentDefinition.component);\n\n        // create the component instance\n        this._componentRef = this._viewContainerRef.createComponent(componentFactory);\n\n        // combine the predefined config with any dynmaic config\n        const /** @type {?} */ config = Object.assign({}, componentDefinition.config, this.uxSearchBuilderOutletContext.config || {});\n\n        // set the context and config property on the component instance\n        this._componentRef.instance.context = this.uxSearchBuilderOutletContext;\n        this._componentRef.instance.config = config;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: '[uxSearchBuilderOutlet]'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ViewContainerRef, },\n{type: ComponentFactoryResolver, },\n{type: SearchBuilderService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'uxSearchBuilderOutlet': [{ type: Input },],\n'uxSearchBuilderOutletContext': [{ type: Input },],\n};\n}\n\nfunction SearchBuilderOutletDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nSearchBuilderOutletDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSearchBuilderOutletDirective.ctorParameters;\n/** @type {?} */\nSearchBuilderOutletDirective.propDecorators;\n/** @type {?} */\nSearchBuilderOutletDirective.prototype.uxSearchBuilderOutlet;\n/** @type {?} */\nSearchBuilderOutletDirective.prototype.uxSearchBuilderOutletContext;\n/** @type {?} */\nSearchBuilderOutletDirective.prototype._componentRef;\n/** @type {?} */\nSearchBuilderOutletDirective.prototype._viewContainerRef;\n/** @type {?} */\nSearchBuilderOutletDirective.prototype._componentFactoryResolver;\n/** @type {?} */\nSearchBuilderOutletDirective.prototype._searchBuilderService;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, OnDestroy } from '@angular/core';\nimport { SearchBuilderService } from '../search-builder.service';\nimport { SearchBuilderGroupQuery } from '../interfaces/group-query.interface';\nimport { SearchBuilderGroupService } from '../search-builder-group/search-builder-group.service';\nimport { SearchBuilderComponentContext } from '../interfaces/component-context.interface';\nexport class BaseSearchComponent implements OnDestroy {\n\n    type: string;\n    config: any;\n    context: SearchBuilderComponentContext;\nprivate _id: number = this._searchBuilderService.generateComponentId();\nprivate _valid: boolean = true;\n/**\n * Get the current value of the component\n * @return {?}\n */\nget value() {\n        return this.context.value;\n    }\n/**\n * Set the current value of the component\n * @param {?} value\n * @return {?}\n */\nset value(value: any) {\n        this.context.value = value;\n        this._searchBuilderService.queryHasChanged();\n\n        // if value has been set perform validation\n        this.validate();\n    }\n/**\n * @return {?}\n */\nget valid(): boolean {\n        return this._valid;\n    }\n/**\n * @param {?} valid\n * @return {?}\n */\nset valid(valid: boolean) {\n        this._valid = valid;\n        this._searchBuilderService.setValid(this._id, valid);\n    }\n/**\n * @param {?} _searchBuilderService\n * @param {?} _searchBuilderGroupService\n */\nconstructor(\nprivate _searchBuilderService: SearchBuilderService,\nprivate _searchBuilderGroupService: SearchBuilderGroupService\n    ) { }\n/**\n * Make sure we clean up after ourselves\n * @return {?}\n */\nngOnDestroy(): void {\n        this.valid = true;\n    }\n/**\n * Perform any required validation on the value\n * @return {?}\n */\nvalidate(): void {\n        // if a custom validation function has been provided then use it\n        this.valid = this.config.validation ? this.config.validation(this, this.value) : true;\n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-base-search',\n    template: ''\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: SearchBuilderService, },\n{type: SearchBuilderGroupService, },\n];\n}\n\nfunction BaseSearchComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nBaseSearchComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nBaseSearchComponent.ctorParameters;\n/** @type {?} */\nBaseSearchComponent.prototype.type;\n/** @type {?} */\nBaseSearchComponent.prototype.config;\n/** @type {?} */\nBaseSearchComponent.prototype.context;\n/** @type {?} */\nBaseSearchComponent.prototype._id;\n/** @type {?} */\nBaseSearchComponent.prototype._valid;\n/** @type {?} */\nBaseSearchComponent.prototype._searchBuilderService;\n/** @type {?} */\nBaseSearchComponent.prototype._searchBuilderGroupService;\n}\n\n\nexport interface BaseSearchComponentConfig {\n    label?: string;\n    placeholder?: string;\n    validation?: (value: any) => boolean;\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, OnInit } from '@angular/core';\nimport { BaseSearchComponent, BaseSearchComponentConfig } from '../base-search.component';\nexport class SearchTextComponent extends BaseSearchComponent {\n\n  type: string = 'text';\n/**\n * @return {?}\n */\nget label(): string {\n    return this.config.label;\n  }\n/**\n * @return {?}\n */\nget placeholder(): string {\n    return this.config.placeholder || 'Enter text';\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'ux-search-text',\n  template: `\n    <label class=\"form-label\" *ngIf=\"label\">{{ label }}</label>\n    <input [placeholder]=\"placeholder\" [(ngModel)]=\"value\" class=\"form-control\">\n  `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction SearchTextComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nSearchTextComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSearchTextComponent.ctorParameters;\n/** @type {?} */\nSearchTextComponent.prototype.type;\n}\n\n\nexport interface SearchTextConfig extends BaseSearchComponentConfig { }\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, OnInit } from '@angular/core';\nimport { BaseSearchComponent, BaseSearchComponentConfig } from '../base-search.component';\nimport { DateTimePickerTimezone } from '../../../date-time-picker/index';\nexport class SearchDateComponent extends BaseSearchComponent implements OnInit {\n\n  type: string = 'date';\n/**\n * @return {?}\n */\nget label(): string {\n    return this.config.label;\n  }\n/**\n * @return {?}\n */\nget placeholder(): string {\n    return this.config.placeholder || 'Enter date';\n  }\n/**\n * @return {?}\n */\nngOnInit(): void {\n\n    // by default set to the current date if not specified\n    if (!this.value) {\n      this.value = new Date();\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'ux-search-date',\n  template: `\n    <label class=\"form-label\" *ngIf=\"label\">{{ label }}</label>\n\n    <div class=\"input-group date m-nil\">\n        <span class=\"input-group-addon\" tabindex=\"1\" (click)=\"popover.show()\">\n            <i class=\"hpe-icon hpe-calendar\" aria-hidden=\"true\"></i>\n        </span>\n        <input type=\"text\" #popover=\"bs-popover\" [ngModel]=\"value | date:'dd MMMM yyyy'\" [popover]=\"popoverTemplate\"\n            placement=\"bottom\" [outsideClick]=\"true\" containerClass=\"date-time-picker-popover\" class=\"form-control\" aria-label=\"Selected date\" [placeholder]=\"placeholder\">\n    </div>\n\n    <ng-template #popoverTemplate>\n        <ux-date-time-picker [(date)]=\"value\" [showTime]=\"false\"></ux-date-time-picker>\n    </ng-template>\n  `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction SearchDateComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nSearchDateComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSearchDateComponent.ctorParameters;\n/** @type {?} */\nSearchDateComponent.prototype.type;\n}\n\n\nexport interface SearchDateConfig extends BaseSearchComponentConfig { }\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component } from '@angular/core';\nimport { BaseSearchComponent } from '../base-search.component';\nimport { DateTimePickerTimezone } from '../../../date-time-picker/index';\nexport class SearchDateRangeComponent extends BaseSearchComponent {\n\n    type: string = 'date-range';\n/**\n * @return {?}\n */\nget label(): string {\n        return this.config.label;\n    }\n/**\n * @return {?}\n */\nget from() {\n\n        // if value does not exist the set it\n        if (!this.value || !this.value.from) {\n            this.from = new Date();\n        }\n\n        // ensure that the from value is a date object\n        if (this.value.from instanceof Date === false) {\n            this.value.from = new Date(this.value.from);\n        }\n\n        return this.value.from;\n    }\n/**\n * @param {?} fromValue\n * @return {?}\n */\nset from(fromValue: any) {\n\n        // create new object based on the current value\n        const /** @type {?} */ value = Object.assign({}, this.value);\n\n        // ensure that the from value is a date\n        if (fromValue instanceof Date === false) {\n            fromValue = new Date(fromValue);\n        }\n\n        // set the latest value\n        value.from = fromValue;\n\n        // update the value object while ensuring immutability\n        this.value = value;\n    }\n/**\n * @return {?}\n */\nget to() {\n\n        // if value does not exist the set it\n        if (!this.value || !this.value.to) {\n            this.to = new Date();\n        }\n\n        // ensure that the to value is a date object\n        if (this.value.to instanceof Date === false) {\n            this.value.to = new Date(this.value.to);\n        }\n\n        return this.value.to;\n    }\n/**\n * @param {?} toValue\n * @return {?}\n */\nset to(toValue: any) {\n\n        // create new object based on the current value\n        const /** @type {?} */ value = Object.assign({}, this.value);\n\n        // ensure that the to value is a date\n        if (toValue instanceof Date === false) {\n            toValue = new Date(toValue);\n        }\n\n        // set the latest value\n        value.to = toValue;\n\n        // update the value object while ensuring immutability\n        this.value = value;\n    }\n/**\n * @return {?}\n */\nget fromLabel(): string {\n        return this.config.fromLabel || 'From';\n    }\n/**\n * @return {?}\n */\nget toLabel(): string {\n        return this.config.toLabel || 'To';\n    }\n/**\n * @return {?}\n */\nget fromPlaceholder(): string {\n        return this.config.fromPlaceholder;\n    }\n/**\n * @return {?}\n */\nget toPlaceholder(): string {\n        return this.config.toPlaceholder;\n    }\n/**\n * Override the default validation\n * @return {?}\n */\nvalidate(): void {\n\n        // check if there is a config validation function\n        if (this.config.validation) {\n            return super.validate();\n        }\n\n        // create copies of the dates so we can modify time value (to ignore it)\n        const /** @type {?} */ from = new Date(this.value.from);\n        const /** @type {?} */ to = new Date(this.value.to);\n\n        // set the time to the same so we dont compare it\n        from.setHours(0, 0, 0, 0);\n        to.setHours(0, 0, 0, 0);\n\n        // valid if the from date is less than or equal to the to date\n        this.valid = from <= to;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-search-date-range',\n    template: `\n      <label class=\"form-label\" *ngIf=\"label\">{{ label }}</label>\n\n      <div class=\"row\">\n          <div class=\"col-sm-12\">\n              <div class=\"form-inline\" [class.has-error]=\"!valid\">\n\n                  <div class=\"form-group p-r-md\">\n                      <label class=\"form-label m-r-xs\">{{ fromLabel }}</label>\n\n                      <div class=\"input-group date m-nil\">\n                          <span class=\"input-group-addon p-r-xs\" tabindex=\"1\" (click)=\"fromPopover.show()\">\n                              <i class=\"hpe-icon hpe-calendar\" aria-hidden=\"true\"></i>\n                          </span>\n                          <input type=\"text\" #fromPopover=\"bs-popover\" [ngModel]=\"from | date:'dd MMMM yyyy'\" [popover]=\"fromPopoverTemplate\" placement=\"bottom\"\n                              [outsideClick]=\"true\" containerClass=\"date-time-picker-popover\" class=\"form-control\" aria-label=\"Selected date\" [placeholder]=\"fromPlaceholder\">\n                      </div>\n                  </div>\n\n                  <div class=\"form-group p-r-xs\">\n                      <label class=\"form-label m-r-xs\">{{ toLabel }}</label>\n\n                      <div class=\"input-group date m-nil\">\n                          <span class=\"input-group-addon\" tabindex=\"1\" (click)=\"toPopover.show()\">\n                              <i class=\"hpe-icon hpe-calendar\" aria-hidden=\"true\"></i>\n                          </span>\n                          <input type=\"text\" #toPopover=\"bs-popover\" [ngModel]=\"to | date:'dd MMMM yyyy'\" [popover]=\"toPopoverTemplate\" placement=\"bottom\"\n                              [outsideClick]=\"true\" containerClass=\"date-time-picker-popover\" class=\"form-control\" aria-label=\"Selected date\" [placeholder]=\"toPlaceholder\">\n                      </div>\n                  </div>\n\n              </div>\n          </div>\n      </div>\n\n      <ng-template #fromPopoverTemplate>\n          <ux-date-time-picker [(date)]=\"from\" [showTime]=\"false\"></ux-date-time-picker>\n      </ng-template>\n\n      <ng-template #toPopoverTemplate>\n          <ux-date-time-picker [(date)]=\"to\" [showTime]=\"false\"></ux-date-time-picker>\n      </ng-template>\n    `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction SearchDateRangeComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nSearchDateRangeComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSearchDateRangeComponent.ctorParameters;\n/** @type {?} */\nSearchDateRangeComponent.prototype.type;\n}\n\n\nexport interface SearchDateRangeConfig {\n    label?: string;\n    fromLabel?: string;\n    toLabel?: string;\n    fromPlaceholder?: string;\n    toPlaceholder?: string;\n    validation: (value: any) => boolean;\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component } from '@angular/core';\nimport { BaseSearchComponent, BaseSearchComponentConfig } from '../base-search.component';\nimport { InfiniteScrollLoadFunction } from '../../../../index';\nexport class SearchSelectComponent extends BaseSearchComponent {\n\n  type: string = 'select';\n/**\n * Provide defaults for undefined properties\n * @return {?}\n */\nget label(): string {\n    return this.config.label;\n  }\n/**\n * @return {?}\n */\nget options() {\n    return this.config.options || [];\n  }\n/**\n * @return {?}\n */\nget multiple(): boolean {\n    return this.config.multiple || false;\n  }\n/**\n * @return {?}\n */\nget placeholder(): string {\n    return this.config.placeholder || 'Select item';\n  }\n/**\n * @return {?}\n */\nget dropDirection(): string {\n    return this.config.dropDirection || 'down';\n  }\n/**\n * @return {?}\n */\nget allowNull(): boolean {\n    return this.config.allowNull || false;\n  }\n/**\n * @return {?}\n */\nget disabled(): boolean {\n    return this.config.disabled || false;\n  }\n/**\n * @return {?}\n */\nget maxHeight(): string {\n    return this.config.maxHeight || '250px';\n  }\n/**\n * @return {?}\n */\nget pageSize(): number {\n    return this.config.pageSize || 20;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'ux-search-select',\n  template: `\n    <label class=\"form-label\" *ngIf=\"label\">{{ label }}</label>\n\n    <ux-select [(value)]=\"value\" \n               [options]=\"options\" \n               [multiple]=\"multiple\" \n               [placeholder]=\"placeholder\" \n               [dropDirection]=\"dropDirection\"\n               [pageSize]=\"pageSize\"\n               [allowNull]=\"allowNull\"\n               [disabled]=\"disabled\"\n               [maxHeight]=\"maxHeight\"\n               [key]=\"config.key\"\n               [display]=\"config.display\"\n               [loadingTemplate]=\"config.loadingTemplate\"\n               [optionTemplate]=\"config.optionTemplate\"\n               [noOptionsTemplate]=\"config.noOptionsTemplate\">\n    </ux-select>\n  `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction SearchSelectComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nSearchSelectComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSearchSelectComponent.ctorParameters;\n/** @type {?} */\nSearchSelectComponent.prototype.type;\n}\n\n\nexport interface SearchSelectConfig extends BaseSearchComponentConfig {\n  options?: any[] | InfiniteScrollLoadFunction;\n  multiple?: boolean;\n  dropDirection?: 'up' | 'down';\n  allowNull?: boolean;\n  disabled?: boolean;\n  maxHeight?: string;\n  pageSize?: number;\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Input, EventEmitter, Output, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs/Subscription';\nimport { SearchBuilderService } from './search-builder.service';\nimport { SearchBuilderQuery } from './interfaces/query.interface';\nimport { SearchBuilderComponentDefinition } from './interfaces/component-definition.interface';\nimport { SearchTextComponent } from './search-components/text/text.component';\nimport { SearchDateComponent } from './search-components/date/date.component';\nimport { SearchDateRangeComponent } from './search-components/date-range/date-range.component';\nimport { SearchSelectComponent } from './search-components/select/select.component';\nimport'rxjs/add/operator/distinctUntilChanged';\nexport class SearchBuilderComponent implements OnDestroy {\n/**\n * @param {?} components\n * @return {?}\n */\nset components(components: SearchBuilderComponentDefinition[]) {\n    this._searchBuilderService.registerComponents(components);\n  }\n/**\n * @param {?} value\n * @return {?}\n */\nset query(value: SearchBuilderQuery) {\n    this._searchBuilderService.setQuery(value);\n  }\n/**\n * @return {?}\n */\nget query() {\n    return this._searchBuilderService.getQuery();\n  }\n\n   queryChange: EventEmitter<SearchBuilderQuery> = new EventEmitter<SearchBuilderQuery>();\n   valid: EventEmitter<boolean> = new EventEmitter<boolean>(true);\nprivate _querySubscription: Subscription;\nprivate _validSubscription: Subscription;\n/**\n * Register the default search builder components\n * @param {?} _searchBuilderService\n */\nconstructor(private _searchBuilderService: SearchBuilderService) {\n\n    // watch for any query changes\n    this._querySubscription = _searchBuilderService.queryChange.subscribe(query => this.queryChange.emit(query));\n\n    // watch for any changes to the validation\n    this._validSubscription = _searchBuilderService.validationChange.distinctUntilChanged().subscribe(valid => this.valid.emit(valid));\n  }\n/**\n * Remove any subscriptions and cleanup\n * @return {?}\n */\nngOnDestroy(): void {\n    this._querySubscription.unsubscribe();\n    this._validSubscription.unsubscribe();\n  }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'ux-search-builder',\n  template: `\n    <ng-content></ng-content>\n  `,\n  providers: [SearchBuilderService]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: SearchBuilderService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'components': [{ type: Input },],\n'query': [{ type: Input },],\n'queryChange': [{ type: Output },],\n'valid': [{ type: Output },],\n};\n}\n\nfunction SearchBuilderComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nSearchBuilderComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSearchBuilderComponent.ctorParameters;\n/** @type {?} */\nSearchBuilderComponent.propDecorators;\n/** @type {?} */\nSearchBuilderComponent.prototype.queryChange;\n/** @type {?} */\nSearchBuilderComponent.prototype.valid;\n/** @type {?} */\nSearchBuilderComponent.prototype._querySubscription;\n/** @type {?} */\nSearchBuilderComponent.prototype._validSubscription;\n/** @type {?} */\nSearchBuilderComponent.prototype._searchBuilderService;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable } from '@angular/core';\n\n/**\n * Configuration service for the Popover directive.\n * You can inject this service, typically in your root component, and customize\n * the values of its properties in order to provide default values for all the\n * popovers used in the application.\n */\n\nexport class PopoverConfig {\n  /**\n   * Placement of a popover. Accepts: \"top\", \"bottom\", \"left\", \"right\", \"auto\"\n   */\n  placement = 'top';\n  /**\n   * Specifies events that should trigger. Supports a space separated list of\n   * event names.\n   */\n  triggers = 'click';\n\n  outsideClick = false;\n  /**\n   * A selector specifying the element the popover should be appended to.\n   * Currently only supports \"body\".\n   */\n  container: string;\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { ChangeDetectionStrategy, Input, Component } from '@angular/core';\nimport { PopoverConfig } from './popover.config';\nimport { isBs3 } from '../utils/theme-provider';\n\n\nexport class PopoverContainerComponent {\n   placement: string;\n   title: string;\n  containerClass: string;\n\n  get isBs3(): boolean {\n    return isBs3();\n  }\n\n  constructor(config: PopoverConfig) {\n    Object.assign(this, config);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'popover-container',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  // tslint:disable-next-line\n  host: {\n    '[class]':\n      '\"popover in popover-\" + placement + \" \" + \"bs-popover-\" + placement + \" \" + placement + \" \" + containerClass',\n    '[class.show]': '!isBs3',\n    role: 'tooltip',\n    style: 'display:block;'\n  },\n  styles: [\n    `\n    :host.bs-popover-top .arrow, :host.bs-popover-bottom .arrow {\n      left: calc(50% - 5px);\n    }\n    :host.bs-popover-left .arrow, :host.bs-popover-right .arrow {\n      top: calc(50% - 2.5px);\n    }\n  `\n  ],\n  template: \"<div class=\\\"popover-arrow arrow\\\"></div> <h3 class=\\\"popover-title popover-header\\\" *ngIf=\\\"title\\\">{{ title }}</h3> <div class=\\\"popover-content popover-body\\\"> <ng-content></ng-content> </div> \"\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: PopoverConfig, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'placement': [{ type: Input },],\n'title': [{ type: Input },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {\n  Directive, ElementRef, EventEmitter, Input, OnDestroy, OnInit, Output,\n  Renderer2, TemplateRef, ViewContainerRef\n} from '@angular/core';\nimport { PopoverConfig } from './popover.config';\nimport { ComponentLoader, ComponentLoaderFactory } from '../component-loader';\nimport { PopoverContainerComponent } from './popover-container.component';\n\n/**\n * A lightweight, extensible directive for fancy popover creation.\n */\n\nexport class PopoverDirective implements OnInit, OnDestroy {\n  /**\n   * Content to be displayed as popover.\n   */\n   popover: string | TemplateRef<any>;\n  /**\n   * Context to be used if popover is a template.\n   */\n   popoverContext: any;\n  /**\n   * Title of a popover.\n   */\n   popoverTitle: string;\n  /**\n   * Placement of a popover. Accepts: \"top\", \"bottom\", \"left\", \"right\"\n   */\n   placement: 'top' | 'bottom' | 'left' | 'right' | 'auto';\n  /**\n   * Close popover on outside click\n   */\n   outsideClick = false;\n  /**\n   * Specifies events that should trigger. Supports a space separated list of\n   * event names.\n   */\n   triggers: string;\n  /**\n   * A selector specifying the element the popover should be appended to.\n   * Currently only supports \"body\".\n   */\n   container: string;\n\n  /**\n   * Css class for popover container\n   */\n   containerClass = '';\n\n  /**\n   * Returns whether or not the popover is currently being shown\n   */\n  \n  get isOpen(): boolean {\n    return this._popover.isShown;\n  }\n\n  set isOpen(value: boolean) {\n    if (value) {\n      this.show();\n    } else {\n      this.hide();\n    }\n  }\n\n  /**\n   * Emits an event when the popover is shown\n   */\n   onShown: EventEmitter<any>;\n  /**\n   * Emits an event when the popover is hidden\n   */\n   onHidden: EventEmitter<any>;\n\n  private _popover: ComponentLoader<PopoverContainerComponent>;\n  private _isInited = false;\n\n  constructor(_elementRef: ElementRef,\n              _renderer: Renderer2,\n              _viewContainerRef: ViewContainerRef,\n              _config: PopoverConfig,\n              cis: ComponentLoaderFactory) {\n    this._popover = cis\n      .createLoader<PopoverContainerComponent>(\n        _elementRef,\n        _viewContainerRef,\n        _renderer\n      )\n      .provide({provide: PopoverConfig, useValue: _config});\n    Object.assign(this, _config);\n    this.onShown = this._popover.onShown;\n    this.onHidden = this._popover.onHidden;\n\n    // fix: no focus on button on Mac OS #1795\n    if (typeof window !== 'undefined') {\n      _elementRef.nativeElement.addEventListener('click', function () {\n        try {\n          _elementRef.nativeElement.focus();\n        } catch (err) {\n          return;\n        }\n      });\n    }\n  }\n\n  /**\n   * Opens an element’s popover. This is considered a “manual” triggering of\n   * the popover.\n   */\n  show(): void {\n    if (this._popover.isShown || !this.popover) {\n      return;\n    }\n\n    this._popover\n      .attach(PopoverContainerComponent)\n      .to(this.container)\n      .position({attachment: this.placement})\n      .show({\n        content: this.popover,\n        context: this.popoverContext,\n        placement: this.placement,\n        title: this.popoverTitle,\n        containerClass: this.containerClass\n      });\n    this.isOpen = true;\n  }\n\n  /**\n   * Closes an element’s popover. This is considered a “manual” triggering of\n   * the popover.\n   */\n  hide(): void {\n    if (this.isOpen) {\n      this._popover.hide();\n      this.isOpen = false;\n    }\n  }\n\n  /**\n   * Toggles an element’s popover. This is considered a “manual” triggering of\n   * the popover.\n   */\n  toggle(): void {\n    if (this.isOpen) {\n      return this.hide();\n    }\n\n    this.show();\n  }\n\n  ngOnInit(): any {\n    // fix: seems there are an issue with `routerLinkActive`\n    // which result in duplicated call ngOnInit without call to ngOnDestroy\n    // read more: https://github.com/valor-software/ngx-bootstrap/issues/1885\n    if (this._isInited) {\n      return;\n    }\n    this._isInited = true;\n\n    this._popover.listen({\n      triggers: this.triggers,\n      outsideClick: this.outsideClick,\n      show: () => this.show()\n    });\n  }\n\n  ngOnDestroy(): any {\n    this._popover.dispose();\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{selector: '[popover]', exportAs: 'bs-popover'}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Renderer2, },\n{type: ViewContainerRef, },\n{type: PopoverConfig, },\n{type: ComponentLoaderFactory, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'popover': [{ type: Input },],\n'popoverContext': [{ type: Input },],\n'popoverTitle': [{ type: Input },],\n'placement': [{ type: Input },],\n'outsideClick': [{ type: Input },],\n'triggers': [{ type: Input },],\n'container': [{ type: Input },],\n'containerClass': [{ type: Input },],\n'isOpen': [{ type: Input },],\n'onShown': [{ type: Output },],\n'onHidden': [{ type: Output },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ComponentLoaderFactory } from '../component-loader';\nimport { PositioningService } from '../positioning';\nimport { PopoverConfig } from './popover.config';\nimport { PopoverDirective } from './popover.directive';\nimport { PopoverContainerComponent } from './popover-container.component';\n\n\nexport class PopoverModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: PopoverModule,\n      providers: [PopoverConfig, ComponentLoaderFactory, PositioningService]\n    };\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  imports: [CommonModule],\n  declarations: [PopoverDirective, PopoverContainerComponent],\n  exports: [PopoverDirective],\n  entryComponents: [PopoverContainerComponent]\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","\nexport class TypeaheadOptionEvent {\n/**\n * @param {?} option\n */\nconstructor(public option: any) {}\n}\n\nfunction TypeaheadOptionEvent_tsickle_Closure_declarations() {\n/** @type {?} */\nTypeaheadOptionEvent.prototype.option;\n}\n","import { TypeaheadComponent } from './index';\nimport { Injectable } from '@angular/core';\nexport class TypeaheadKeyService {\nconstructor() { }\n/**\n * @param {?} event\n * @param {?} typeahead\n * @return {?}\n */\nhandleKey(event: KeyboardEvent, typeahead: TypeaheadComponent) {\n        if (typeahead) {\n            switch (event.key) {\n                case 'ArrowUp':\n                case 'Up':\n                    if (!typeahead.open) {\n                        typeahead.open = true;\n                    } else {\n                        typeahead.moveHighlight(-1);\n                    }\n                    event.preventDefault();\n                    break;\n                case 'ArrowDown':\n                case 'Down':\n                    if (!typeahead.open) {\n                        typeahead.open = true;\n                    } else {\n                        typeahead.moveHighlight(1);\n                    }\n                    event.preventDefault();\n                    break;\n                case 'Escape':\n                case 'Esc':\n                    typeahead.open = false;\n                    break;\n            }\n        }\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction TypeaheadKeyService_tsickle_Closure_declarations() {\n/** @type {?} */\nTypeaheadKeyService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTypeaheadKeyService.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { InfiniteScrollLoadFunction } from '../../directives/infinite-scroll/index';\nimport { TypeaheadOptionEvent } from './typeahead-event';\nimport {\n    Component,\n    ElementRef,\n    EventEmitter,\n    Input,\n    OnChanges,\n    OnInit,\n    Output,\n    SimpleChanges,\n    TemplateRef,\n    ViewChild,\n    AfterViewInit,\n    ChangeDetectorRef\n} from '@angular/core';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { Observable } from 'rxjs/Observable';\nexport class TypeaheadComponent implements AfterViewInit, OnChanges {\n\n     options: any[] | InfiniteScrollLoadFunction;\n     filter: string;\nprivate _open: boolean = false;\n/**\n * @return {?}\n */\nget open() {\n        return this._open;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset open(value: boolean) {\n        const /** @type {?} */ originalValue = this._open;\n        this._open = value;\n        if (value !== originalValue) {\n            this.openChange.emit(value);\n            if (value) {\n                this.initOptions();\n            }\n        }\n    }\n\n     openChange = new EventEmitter<boolean>();\n\n     display: (option: any) => string | string;\n     key: (option: any) => string | string;\n     disabledOptions: any[];\n     dropDirection: 'up' | 'down' = 'down';\n     maxHeight: string = '250px';\n     openOnFilterChange: boolean = true;\n     pageSize: number = 20;\n     selectFirst: boolean = true;\n\n     loadingTemplate: TemplateRef<any>;\n     optionTemplate: TemplateRef<any>;\n     noOptionsTemplate: TemplateRef<any>;\n\n     optionSelected = new EventEmitter<TypeaheadOptionEvent>();\nprivate _highlighted = new BehaviorSubject<any>(null);\n/**\n * @return {?}\n */\nget highlighted(): any {\n        return this._highlighted.getValue();\n    }\nprivate _defaultLoadingTemplate: TemplateRef<any>;\nprivate _defaultOptionTemplate: TemplateRef<any>;\nprivate _defaultNoOptionsTemplate: TemplateRef<any>;\n\n    loadOptionsCallback: InfiniteScrollLoadFunction;\n    visibleOptions: any[] = [];\n    loading = false;\n\n    optionApi: TypeaheadOptionApi = {\n        getKey: this.getKey.bind(this),\n        getDisplay: this.getDisplay.bind(this),\n        getDisplayHtml: this.getDisplayHtml.bind(this)\n    };\n/**\n * @param {?} typeaheadElement\n * @param {?} cdRef\n */\nconstructor(public typeaheadElement: ElementRef,\nprivate cdRef: ChangeDetectorRef) {\n\n        this.loadOptionsCallback = (pageNum: number, pageSize: number, filter: any) => {\n            if (typeof this.options === 'function') {\n                return this.options(pageNum, pageSize, filter);\n            }\n            return null;\n        };\n    }\n/**\n * @return {?}\n */\nngAfterViewInit() {\n        // Attach default loading template\n        if (!this.loadingTemplate) {\n            this.loadingTemplate = this._defaultLoadingTemplate;\n        }\n\n        // Attach default option template\n        if (!this.optionTemplate) {\n            this.optionTemplate = this._defaultOptionTemplate;\n        }\n\n        // Attach default \"no results\" template\n        if (!this.noOptionsTemplate) {\n            this.noOptionsTemplate = this._defaultNoOptionsTemplate;\n        }\n\n        this.cdRef.detectChanges();\n    }\n/**\n * @param {?} changes\n * @return {?}\n */\nngOnChanges(changes: SimpleChanges) {\n        // Open the dropdown if the filter value updates\n        if (changes.filter) {\n            if (this.openOnFilterChange && changes.filter.currentValue && changes.filter.currentValue.length > 0) {\n                this.open = true;\n            }\n        }\n\n        // Re-filter visibleOptions\n        this.updateOptions();\n    }\n/**\n * @param {?} event\n * @return {?}\n */\noptionMousedownHandler(event: MouseEvent) {\n        // Workaround to prevent focus changing when an option is clicked\n        event.preventDefault();\n    }\n/**\n * @param {?} event\n * @param {?} option\n * @return {?}\n */\noptionClickHandler(event: MouseEvent, option: any) {\n        this.select(option);\n    }\n/**\n * Returns the unique key value of the given option.\n * @param {?} option\n * @return {?}\n */\ngetKey(option: any): string {\n        if (typeof this.key === 'function') {\n            return this.key(option);\n        }\n        if (typeof this.key === 'string' && option && option.hasOwnProperty(this.key)) {\n            return option[ /** @type {?} */((<string>this.key))];\n        }\n        return this.getDisplay(option);\n    }\n/**\n * Returns the display value of the given option.\n * @param {?} option\n * @return {?}\n */\ngetDisplay(option: any): string {\n        if (typeof this.display === 'function') {\n            return this.display(option);\n        }\n        if (typeof this.display === 'string' && option && option.hasOwnProperty(this.display)) {\n            return option[ /** @type {?} */((<string>this.display))];\n        }\n        return option;\n    }\n/**\n * Returns the display value of the given option with HTML markup added to highlight the part which matches the current filter value.\n * @param {?} option\n * @return {?}\n */\ngetDisplayHtml(option: any) {\n        let /** @type {?} */ displayText;\n        if (typeof option === 'string') {\n            displayText = this.getDisplay(option).replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;');\n        } else {\n            displayText = this.getDisplay(option.name).replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;');\n        }\n        let /** @type {?} */ displayHtml = displayText;\n        if (this.filter) {\n            const /** @type {?} */ length = this.filter.length;\n            const /** @type {?} */ matchIndex = displayText.toLowerCase().indexOf(this.filter.toLowerCase());\n            if (matchIndex >= 0) {\n                var /** @type {?} */ highlight = `<span class=\"ux-filter-match\">${displayText.substr(matchIndex, length)}</span>`;\n                displayHtml = displayText.substr(0, matchIndex) + highlight + displayText.substr(matchIndex + length);\n            }\n        }\n        return displayHtml;\n    }\n/**\n * Returns true if the infinite scroll component should load\n * @return {?}\n */\nisInfiniteScroll() {\n        return typeof this.options === 'function';\n    }\n/**\n * Selects the given option, emitting the optionSelected event and closing the dropdown.\n * @param {?} option\n * @return {?}\n */\nselect(option: any) {\n        if (!this.isDisabled(option)) {\n            this.optionSelected.emit(new TypeaheadOptionEvent(option));\n            this._highlighted.next(null);\n            this.open = false;\n        }\n    }\n/**\n * Returns true if the given option is part of the disabledOptions array.\n * @param {?} option\n * @return {?}\n */\nisDisabled(option: any): boolean {\n        if (this.disabledOptions) {\n            const /** @type {?} */ optionKey = this.getKey(option);\n            const /** @type {?} */ result = this.disabledOptions.find((selectedOption) => {\n                return this.getKey(selectedOption) === optionKey;\n            });\n            return result !== undefined;\n        }\n        return false;\n    }\n/**\n * Set the given option as the current highlighted option, available in the highlightedOption parameter.\n * @param {?} option\n * @return {?}\n */\nhighlight(option: any) {\n        if (!this.isDisabled(option)) {\n            this._highlighted.next(option);\n        }\n    }\n/**\n * Increment or decrement the highlighted option in the list. Disabled options are skipped.\n * @param {?} d Value to be added to the index of the highlighted option, i.e. -1 to move backwards, +1 to move forwards.\n * @return {?}\n */\nmoveHighlight(d: number): any {\n        const /** @type {?} */ highlightIndex = this.indexOfVisibleOption(this.highlighted);\n        let /** @type {?} */ newIndex = highlightIndex;\n        let /** @type {?} */ disabled = true;\n        let /** @type {?} */ inBounds = true;\n        do {\n            newIndex = newIndex + d;\n            inBounds = (newIndex >= 0 && newIndex < this.visibleOptions.length);\n            disabled = inBounds && this.isDisabled(this.visibleOptions[newIndex]);\n        }\n        while (inBounds && disabled);\n\n        if (!disabled && inBounds) {\n            this._highlighted.next(this.visibleOptions[newIndex]);\n        }\n\n        return this.highlighted;\n    }\n/**\n * Returns true if the given option is the highlighted option.\n * @param {?} option\n * @return {?}\n */\nisHighlighted(option: any): boolean {\n        return this.getKey(option) === this.getKey(this.highlighted);\n    }\n/**\n * Set up the options before the dropdown is displayed.\n * @return {?}\n */\ninitOptions() {\n        // Clear previous highlight\n        this._highlighted.next(null);\n        if (this.selectFirst) {\n            // This will highlight the first non-disabled option.\n            this.moveHighlight(1);\n        }\n    }\n/**\n * Update the visibleOptions array with the current filter.\n * @return {?}\n */\nupdateOptions() {\n        if (typeof this.options === 'object') {\n            const /** @type {?} */ normalisedInput = (this.filter || '').toLowerCase();\n            this.visibleOptions = this.options.filter((option) => {\n                return this.getDisplay(option).toLowerCase().indexOf(normalisedInput) >= 0;\n            });\n        }\n\n        this.initOptions();\n    }\n/**\n * Return the index of the given option in the visibleOptions array. Returns -1 if the option is not currently visible.\n * @param {?} option\n * @return {?}\n */\nprivate indexOfVisibleOption(option: any): number {\n        if (option) {\n            const /** @type {?} */ optionKey = this.getKey(option);\n            return this.visibleOptions.findIndex((el) => {\n                return this.getKey(el) === optionKey;\n            });\n        }\n\n        return -1;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-typeahead',\n    template: `\n      <div class=\"ux-typeahead-options\"\n          [uxInfiniteScroll]=\"loadOptionsCallback\"\n          [(collection)]=\"visibleOptions\"\n          [enabled]=\"isInfiniteScroll()\"\n          [filter]=\"filter\"\n          [loadOnScroll]=\"true\"\n          [pageSize]=\"pageSize\"\n          [scrollElement]=\"typeaheadElement\"\n          (loading)=\"loading = true\"\n          (loaded)=\"loading = false\">\n\n          <ol *ngIf=\"visibleOptions.length > 0\">\n              <li *ngFor=\"let option of visibleOptions; let i = index\"\n                  [class.disabled]=\"isDisabled(option)\"\n                  [class.highlighted]=\"isHighlighted(option)\"\n                  [uxScrollIntoViewIf]=\"isHighlighted(option)\"\n                  [scrollParent]=\"typeaheadElement.nativeElement\"\n                  (mousedown)=\"optionMousedownHandler($event)\"\n                  (click)=\"optionClickHandler($event, option)\"\n                  (mouseover)=\"highlight(option)\">\n\n                  <ng-container [ngTemplateOutlet]=\"optionTemplate\"\n                      [ngTemplateOutletContext]=\"{option: option, api: optionApi}\">\n                  </ng-container>\n\n              </li>\n          </ol>\n\n          <div *uxInfiniteScrollLoading>\n              <ng-container [ngTemplateOutlet]=\"loadingTemplate\">\n              </ng-container>\n          </div>\n\n      </div>\n      <div *ngIf=\"visibleOptions.length === 0 && !loading\">\n          <ng-container [ngTemplateOutlet]=\"noOptionsTemplate\">\n          </ng-container>\n      </div>\n\n      <ng-template #defaultLoadingTemplate>\n          <div class=\"ux-typeahead-loading\">\n              <div class=\"spinner spinner-accent spinner-bounce-middle\"></div>\n              <div>Loading...</div>\n          </div>\n      </ng-template>\n\n      <ng-template #defaultOptionTemplate let-option=\"option\" let-api=\"api\">\n          <span class=\"ux-typeahead-option\" [innerHtml]=\"api.getDisplayHtml(option)\"></span>\n      </ng-template>\n\n      <ng-template #defaultNoOptionsTemplate>\n          <span class=\"ux-typeahead-no-options\">No results</span>\n      </ng-template>\n    `,\n    host: {\n        '[class.open]': 'open',\n        '[class.drop-up]': 'dropDirection === \"up\"',\n        '[style.maxHeight]': 'maxHeight'\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: ChangeDetectorRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'options': [{ type: Input },],\n'filter': [{ type: Input },],\n'open': [{ type: Input, args: ['open', ] },],\n'openChange': [{ type: Output },],\n'display': [{ type: Input },],\n'key': [{ type: Input },],\n'disabledOptions': [{ type: Input },],\n'dropDirection': [{ type: Input },],\n'maxHeight': [{ type: Input },],\n'openOnFilterChange': [{ type: Input },],\n'pageSize': [{ type: Input },],\n'selectFirst': [{ type: Input },],\n'loadingTemplate': [{ type: Input },],\n'optionTemplate': [{ type: Input },],\n'noOptionsTemplate': [{ type: Input },],\n'optionSelected': [{ type: Output },],\n'highlighted': [{ type: Output },],\n'_defaultLoadingTemplate': [{ type: ViewChild, args: ['defaultLoadingTemplate', ] },],\n'_defaultOptionTemplate': [{ type: ViewChild, args: ['defaultOptionTemplate', ] },],\n'_defaultNoOptionsTemplate': [{ type: ViewChild, args: ['defaultNoOptionsTemplate', ] },],\n};\n}\n\nfunction TypeaheadComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nTypeaheadComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTypeaheadComponent.ctorParameters;\n/** @type {?} */\nTypeaheadComponent.propDecorators;\n/** @type {?} */\nTypeaheadComponent.prototype.options;\n/** @type {?} */\nTypeaheadComponent.prototype.filter;\n/** @type {?} */\nTypeaheadComponent.prototype._open;\n/** @type {?} */\nTypeaheadComponent.prototype.openChange;\n/** @type {?} */\nTypeaheadComponent.prototype.display;\n/** @type {?} */\nTypeaheadComponent.prototype.key;\n/** @type {?} */\nTypeaheadComponent.prototype.disabledOptions;\n/** @type {?} */\nTypeaheadComponent.prototype.dropDirection;\n/** @type {?} */\nTypeaheadComponent.prototype.maxHeight;\n/** @type {?} */\nTypeaheadComponent.prototype.openOnFilterChange;\n/** @type {?} */\nTypeaheadComponent.prototype.pageSize;\n/** @type {?} */\nTypeaheadComponent.prototype.selectFirst;\n/** @type {?} */\nTypeaheadComponent.prototype.loadingTemplate;\n/** @type {?} */\nTypeaheadComponent.prototype.optionTemplate;\n/** @type {?} */\nTypeaheadComponent.prototype.noOptionsTemplate;\n/** @type {?} */\nTypeaheadComponent.prototype.optionSelected;\n/** @type {?} */\nTypeaheadComponent.prototype._highlighted;\n/** @type {?} */\nTypeaheadComponent.prototype._defaultLoadingTemplate;\n/** @type {?} */\nTypeaheadComponent.prototype._defaultOptionTemplate;\n/** @type {?} */\nTypeaheadComponent.prototype._defaultNoOptionsTemplate;\n/** @type {?} */\nTypeaheadComponent.prototype.loadOptionsCallback;\n/** @type {?} */\nTypeaheadComponent.prototype.visibleOptions;\n/** @type {?} */\nTypeaheadComponent.prototype.loading;\n/** @type {?} */\nTypeaheadComponent.prototype.optionApi;\n/** @type {?} */\nTypeaheadComponent.prototype.typeaheadElement;\n/** @type {?} */\nTypeaheadComponent.prototype.cdRef;\n}\n\n\n/**\n * The API available to option templates.\n */\nexport interface TypeaheadOptionApi {\n\n    /**\n     * Returns the unique key value of the given option.\n     */\n    getKey(option: any): string;\n\n    /**\n     * Returns the display value of the given option.\n     */\n    getDisplay(option: any): string;\n\n    /**\n     * Returns the display value of the given option with HTML markup added to highlight the part which matches the current filter value. Override the ux-filter-match class in CSS to modify the default appearance.\n     */\n    getDisplayHtml(option: any): string;\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ElementRef, Input, Output, Renderer2, TemplateRef, ViewContainerRef } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { Subject } from 'rxjs/Subject';\nexport class InfiniteScrollLoadButtonDirective {\n/**\n * @return {?}\n */\nget visible() {\n        return this._visible;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset visible(value: boolean) {\n        if (value !== this._visible) {\n            if (value) {\n                this._viewContainer.createEmbeddedView(this._template);\n\n                // Template content follows the elementRef, which is a comment.\n                const /** @type {?} */ clickTarget = this.getNextElementSibling(this._template.elementRef.nativeElement);\n                this._renderer.listen(clickTarget, 'click', this.onClick.bind(this));\n            } else {\n                this._viewContainer.clear();\n            }\n        }\n\n        this._visible = value;\n    }\n\n     load: Observable<Event>;\nprivate _visible: boolean = false;\nprivate _load = new Subject();\n/**\n * @param {?} _element\n * @param {?} _template\n * @param {?} _viewContainer\n * @param {?} _renderer\n */\nconstructor(\nprivate _element: ElementRef,\nprivate _template: TemplateRef<any>,\nprivate _viewContainer: ViewContainerRef,\nprivate _renderer: Renderer2) {\n\n        this.load = this._load.asObservable() as Observable<Event>;\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nprivate onClick(event: MouseEvent) {\n        this._load.next(event);\n    }\n/**\n * @param {?} element\n * @return {?}\n */\nprivate getNextElementSibling(element: any): Element {\n        var /** @type {?} */ next = element;\n        while (next = next.nextSibling) {\n            if (next.nodeType === 1) {\n                return next;\n            }\n        }\n        return null;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: '[uxInfiniteScrollLoadButton]'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: TemplateRef, },\n{type: ViewContainerRef, },\n{type: Renderer2, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'visible': [{ type: Input, args: ['uxInfiniteScrollLoadButton', ] },],\n'load': [{ type: Output },],\n};\n}\n\nfunction InfiniteScrollLoadButtonDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nInfiniteScrollLoadButtonDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nInfiniteScrollLoadButtonDirective.ctorParameters;\n/** @type {?} */\nInfiniteScrollLoadButtonDirective.propDecorators;\n/** @type {?} */\nInfiniteScrollLoadButtonDirective.prototype.load;\n/** @type {?} */\nInfiniteScrollLoadButtonDirective.prototype._visible;\n/** @type {?} */\nInfiniteScrollLoadButtonDirective.prototype._load;\n/** @type {?} */\nInfiniteScrollLoadButtonDirective.prototype._element;\n/** @type {?} */\nInfiniteScrollLoadButtonDirective.prototype._template;\n/** @type {?} */\nInfiniteScrollLoadButtonDirective.prototype._viewContainer;\n/** @type {?} */\nInfiniteScrollLoadButtonDirective.prototype._renderer;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, Input, TemplateRef, ViewContainerRef } from '@angular/core';\nexport class InfiniteScrollLoadingDirective {\n/**\n * @return {?}\n */\nget visible() {\n        return this._visible;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset visible(value: boolean) {\n        if (value !== this._visible) {\n            if (value) {\n                this._viewContainer.createEmbeddedView(this._templateRef);\n            } else {\n                this._viewContainer.clear();\n            }\n        }\n        \n        this._visible = value;\n    }\nprivate _visible: boolean = false;\n/**\n * @param {?} _templateRef\n * @param {?} _viewContainer\n */\nconstructor(\nprivate _templateRef: TemplateRef<any>,\nprivate _viewContainer: ViewContainerRef) { }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: '[uxInfiniteScrollLoading]'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: TemplateRef, },\n{type: ViewContainerRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'visible': [{ type: Input, args: ['uxInfiniteScrollLoading', ] },],\n};\n}\n\nfunction InfiniteScrollLoadingDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nInfiniteScrollLoadingDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nInfiniteScrollLoadingDirective.ctorParameters;\n/** @type {?} */\nInfiniteScrollLoadingDirective.propDecorators;\n/** @type {?} */\nInfiniteScrollLoadingDirective.prototype._visible;\n/** @type {?} */\nInfiniteScrollLoadingDirective.prototype._templateRef;\n/** @type {?} */\nInfiniteScrollLoadingDirective.prototype._viewContainer;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { InfiniteScrollLoadButtonDirective } from './infinite-scroll-load-button.directive';\nimport { InfiniteScrollLoadingDirective } from './infinite-scroll-loading.directive';\nimport {\n    AfterContentInit,\n    ContentChildren,\n    Directive,\n    ElementRef,\n    EventEmitter,\n    Input,\n    OnChanges,\n    OnDestroy,\n    OnInit,\n    Output,\n    QueryList,\n    SimpleChanges\n} from '@angular/core';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { Observable } from 'rxjs/Observable';\nimport { Subject } from 'rxjs/Subject';\nimport { Subscription } from 'rxjs/Subscription';\nimport'rxjs/add/operator/auditTime';\nimport'rxjs/add/operator/combineLatest';\nimport'rxjs/add/operator/partition';\nexport class InfiniteScrollDirective implements OnInit, AfterContentInit, OnChanges, OnDestroy {\n\n     load: InfiniteScrollLoadFunction;\n\n     _collection: any[] = [];\n/**\n * @return {?}\n */\nget collection() {\n        return this._collection;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset collection(value: any[]) {\n        this.collectionChange.emit(value);\n        this._collection = value;\n    }\n\n     enabled: boolean = true;\n     filter: any;\n     loadOnInit: boolean = true;\n     loadOnScroll: boolean = true;\n     pageSize: number = 20;\n     scrollElement: ElementRef;\n\n     collectionChange = new EventEmitter<any[]>();\n     loadingEvent = new EventEmitter<InfiniteScrollLoadingEvent>();\n     loadedEvent = new EventEmitter<InfiniteScrollLoadedEvent>();\n     loadErrorEvent = new EventEmitter<InfiniteScrollLoadErrorEvent>();\nprivate _loadButtonQuery: QueryList<InfiniteScrollLoadButtonDirective>;\nprivate _loadingIndicatorQuery: QueryList<InfiniteScrollLoadingDirective>;\nprivate _nextPageNum = 0;\nprivate _domObserver: MutationObserver;\nprivate _scrollEventSub: Subscription;\nprivate _updateRequests = new Subject<InfiniteScrollRequest>();\nprivate _isLoading = new BehaviorSubject<boolean>(false);\nprivate _isExhausted = new BehaviorSubject<boolean>(false);\nprivate _loadButtonEnabled = new BehaviorSubject<boolean>(false);\nprivate _canLoadManually: Observable<boolean>;\nprivate _loadButtonSubscriptions: Subscription[] = [];\n/**\n * @param {?} _element\n */\nconstructor(private _element: ElementRef) {\n\n        this._canLoadManually = this._isLoading.combineLatest(this._isExhausted, this._loadButtonEnabled, (isLoading, isExhausted, loadButtonEnabled) => {\n            return !isLoading && !isExhausted && loadButtonEnabled;\n        });\n    }\n/**\n * @return {?}\n */\nngOnInit() {\n\n        if (!this.scrollElement) {\n            this.scrollElement = this._element;\n        }\n\n        this._loadButtonEnabled.next(!this.loadOnScroll);\n    }\n/**\n * @return {?}\n */\nngAfterContentInit() {\n\n        // There are two kinds of update requests: check and load.\n        // Check requests are throttled and will only cause an update if more data is required\n        // to fill the scrolling view, and it isn't already loading some.\n        // Load requests are not throttled and always request a page of data.\n        const /** @type {?} */ requests = this._updateRequests.partition((r) => r.check);\n        requests[0].auditTime(200).subscribe(this.doRequest.bind(this));\n        requests[1].subscribe(this.doRequest.bind(this));\n\n        if (this.enabled) {\n\n            // Subscribe to scroll events and DOM changes.\n            this.attachEventHandlers();\n        }\n\n        // Connect the Load More button visible state.\n        this._canLoadManually.subscribe((canLoad) => {\n            this._loadButtonQuery.forEach((loadButton) => {\n                loadButton.visible = canLoad;\n            });\n        });\n\n        // Connect the loading indicator visible state.\n        this._isLoading.subscribe((isLoading) => {\n            this._loadingIndicatorQuery.forEach((loading) => {\n                loading.visible = isLoading;\n            });\n        });\n\n        // Link the Load More button click event to trigger an update.\n        this.attachLoadButtonEvents();\n        this._loadButtonQuery.changes.subscribe((query) => {\n            this.attachLoadButtonEvents();\n        });\n\n        // Initial update.\n        if (this.loadOnInit) {\n            this.loadNextPage();\n        }\n    }\n/**\n * @param {?} changes\n * @return {?}\n */\nngOnChanges(changes: SimpleChanges) {\n\n        let /** @type {?} */ check = true;\n\n        if (changes.enabled && changes.enabled.currentValue !== changes.enabled.previousValue) {\n            if (changes.enabled.currentValue) {\n                this.attachEventHandlers();\n                this.reset();\n                check = false;\n            } else {\n                this.detachEventHandlers();\n            }\n        }\n\n        if (this.enabled) {\n\n            if (changes.filter && changes.filter.currentValue !== changes.filter.previousValue) {\n                this.reset();\n                check = false;\n            }\n\n            if (changes.loadOnScroll) {\n                this._loadButtonEnabled.next(!changes.loadOnScroll.currentValue);\n            }\n\n            if (changes.pageSize && changes.pageSize.currentValue !== changes.pageSize.previousValue) {\n                this.reset();\n                check = false;\n            }\n\n            this._updateRequests.next({\n                check: check,\n                pageNumber: this._nextPageNum,\n                pageSize: this.pageSize,\n                filter: this.filter\n            });\n        }\n    }\n/**\n * @return {?}\n */\nngOnDestroy() {\n        this.detachEventHandlers();\n    }\n/**\n * Request an additional page of data.\n * @return {?}\n */\nloadNextPage() {\n\n        if (!this.enabled) {\n            return;\n        }\n\n        this._updateRequests.next({\n            check: false,\n            pageNumber: this._nextPageNum,\n            pageSize: this.pageSize,\n            filter: this.filter\n        });\n    }\n/**\n * Request a check for whether an additional page of data is required. This is throttled.\n * @return {?}\n */\ncheck() {\n\n        if (!this.enabled) {\n            return;\n        }\n\n        this._updateRequests.next({\n            check: true,\n            pageNumber: this._nextPageNum,\n            pageSize: this.pageSize,\n            filter: this.filter\n        });\n    }\n/**\n * Clear the collection. Future requests will load from page 0.\n * @return {?}\n */\nreset() {\n\n        if (!this.enabled) {\n            return;\n        }\n\n        // Reset the page counter.\n        this._nextPageNum = 0;\n\n        // Clear the collection (without changing the reference).\n        if (this.collection) {\n            this.collection.length = 0;\n        }\n\n        // Reset the exhausted flag, allowing the Load More button to appear.\n        this._isExhausted.next(false);\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nprivate onScroll(event: Event) {\n        this.check();\n    }\n/**\n * @return {?}\n */\nprivate onDomChange() {\n        this.check();\n    }\n/**\n * Attach scroll event handler and DOM observer.\n * @return {?}\n */\nprivate attachEventHandlers() {\n\n        // Subscribe to the scroll event on the target element.\n        this._scrollEventSub = Observable.fromEvent(this.scrollElement.nativeElement, 'scroll')\n            .subscribe(this.onScroll.bind(this));\n\n        // Subscribe to child DOM changes. The main effect of this is to check whether even more data is\n        // required after the initial load.\n        this._domObserver = new MutationObserver(this.onDomChange.bind(this));\n        this._domObserver.observe(this.scrollElement.nativeElement, {\n            childList: true,\n            subtree: true\n        });\n    }\n/**\n * Detach scroll event handler and DOM observer.\n * @return {?}\n */\nprivate detachEventHandlers() {\n        if (this._scrollEventSub) {\n            this._scrollEventSub.unsubscribe();\n            this._scrollEventSub = null;\n        }\n\n        if (this._domObserver) {\n            this._domObserver.disconnect();\n            this._domObserver = null;\n        }\n    }\n/**\n * Remove any existing event subscriptions for the load button `load` event, then attach subscriptions\n * for any in the query.\n * @return {?}\n */\nprivate attachLoadButtonEvents() {\n        this._loadButtonSubscriptions.forEach((s) => s.unsubscribe());\n        this._loadButtonSubscriptions = this._loadButtonQuery.map((loadButton) => {\n            return loadButton.load.subscribe(this.loadNextPage.bind(this));\n        });\n    }\n/**\n * Conditionally loads a page into the collection based on directive state and request parameters.\n * @param {?} request\n * @return {?}\n */\nprivate doRequest(request: InfiniteScrollRequest) {\n\n        // Load a new page if the scroll position is beyond the threshhold and if the client code did not \n        // cancel.\n        if (this.needsData(request) && this.beginLoading(request)) {\n\n            // Invoke the callback load function, which returns a promose or plain data.\n            const /** @type {?} */ loadResult = this.load(request.pageNumber, request.pageSize, request.filter);\n\n            Promise.resolve(loadResult)\n                .then((newData) => {\n\n                    // Make sure that the parameters have not changed since the load started;\n                    // otherwise discard the results.\n                    if (request.filter === this.filter && request.pageSize === this.pageSize) {\n\n                        if (newData && newData.length) {\n                            Array.prototype.push.apply(this.collection, newData);\n                        }\n\n                        // Emit the loaded event\n                        this.endLoading(request, newData);\n                    }\n                })\n                .catch((reason) => {\n                    // Emit the loadError event\n                    this.endLoadingWithError(request, reason);\n                });\n        }\n    }\n/**\n * Returns true if the request should be fulfilled.\n * @param {?} request\n * @return {?}\n */\nprivate needsData(request: InfiniteScrollRequest): boolean {\n\n        if (!this.enabled) {\n            return false;\n        }\n\n        // Always load for a load request\n        if (!request.check) {\n            return true;\n        }\n\n        // Ignore a check request when the end of data has been detected, or if data is currently loading.\n        if (this._isExhausted.getValue() || this._isLoading.getValue()) {\n            return false;\n        }\n\n        // Load if the remaining scroll area is <= the element height.\n        if (this.scrollElement && this.loadOnScroll) {\n            const /** @type {?} */ element = /** @type {?} */(( <HTMLElement>this.scrollElement.nativeElement));\n            const /** @type {?} */ remainingScroll = element.scrollHeight - (element.scrollTop + element.clientHeight);\n            return remainingScroll <= element.clientHeight;\n        }\n\n        return false;\n    }\n/**\n * Updates state for the beginning of a load. Returns false if the `loading` event was cancelled.\n * @param {?} request\n * @return {?}\n */\nprivate beginLoading(request: InfiniteScrollRequest): boolean {\n\n        const /** @type {?} */ event = new InfiniteScrollLoadingEvent(request.pageNumber, request.pageSize, request.filter);\n        this.loadingEvent.emit(event);\n\n        this._isLoading.next(!event.defaultPrevented());\n\n        return !event.defaultPrevented();\n    }\n/**\n * Updates state from a successful load. Raises the `loaded` event.\n * @param {?} request\n * @param {?=} data\n * @return {?}\n */\nprivate endLoading(request: InfiniteScrollRequest, data?: any) {\n\n        this._isLoading.next(false);\n\n        const /** @type {?} */ isExhausted = !!(data && data.length < this.pageSize);\n        this._isExhausted.next(isExhausted);\n\n        this.loadedEvent.emit(new InfiniteScrollLoadedEvent(request.pageNumber, request.pageSize, request.filter, data, isExhausted));\n\n        this._nextPageNum += 1;\n    }\n/**\n * Updates state from a failed load. Raises the `loadError` event.\n * @param {?} request\n * @param {?} error\n * @return {?}\n */\nprivate endLoadingWithError(request: InfiniteScrollRequest, error: any) {\n\n        this._isLoading.next(false);\n\n        this.loadErrorEvent.emit(new InfiniteScrollLoadErrorEvent(request.pageNumber, request.pageSize, request.filter, error));\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: '[uxInfiniteScroll]',\n    exportAs: 'uxInfiniteScroll'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'load': [{ type: Input, args: ['uxInfiniteScroll', ] },],\n'_collection': [{ type: Input, args: ['collection', ] },],\n'enabled': [{ type: Input },],\n'filter': [{ type: Input },],\n'loadOnInit': [{ type: Input },],\n'loadOnScroll': [{ type: Input },],\n'pageSize': [{ type: Input },],\n'scrollElement': [{ type: Input },],\n'collectionChange': [{ type: Output },],\n'loadingEvent': [{ type: Output, args: ['loading', ] },],\n'loadedEvent': [{ type: Output, args: ['loaded', ] },],\n'loadErrorEvent': [{ type: Output, args: ['loadError', ] },],\n'_loadButtonQuery': [{ type: ContentChildren, args: [InfiniteScrollLoadButtonDirective, ] },],\n'_loadingIndicatorQuery': [{ type: ContentChildren, args: [InfiniteScrollLoadingDirective, ] },],\n};\n}\n\nfunction InfiniteScrollDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nInfiniteScrollDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nInfiniteScrollDirective.ctorParameters;\n/** @type {?} */\nInfiniteScrollDirective.propDecorators;\n/** @type {?} */\nInfiniteScrollDirective.prototype.load;\n/** @type {?} */\nInfiniteScrollDirective.prototype._collection;\n/** @type {?} */\nInfiniteScrollDirective.prototype.enabled;\n/** @type {?} */\nInfiniteScrollDirective.prototype.filter;\n/** @type {?} */\nInfiniteScrollDirective.prototype.loadOnInit;\n/** @type {?} */\nInfiniteScrollDirective.prototype.loadOnScroll;\n/** @type {?} */\nInfiniteScrollDirective.prototype.pageSize;\n/** @type {?} */\nInfiniteScrollDirective.prototype.scrollElement;\n/** @type {?} */\nInfiniteScrollDirective.prototype.collectionChange;\n/** @type {?} */\nInfiniteScrollDirective.prototype.loadingEvent;\n/** @type {?} */\nInfiniteScrollDirective.prototype.loadedEvent;\n/** @type {?} */\nInfiniteScrollDirective.prototype.loadErrorEvent;\n/** @type {?} */\nInfiniteScrollDirective.prototype._loadButtonQuery;\n/** @type {?} */\nInfiniteScrollDirective.prototype._loadingIndicatorQuery;\n/** @type {?} */\nInfiniteScrollDirective.prototype._nextPageNum;\n/** @type {?} */\nInfiniteScrollDirective.prototype._domObserver;\n/** @type {?} */\nInfiniteScrollDirective.prototype._scrollEventSub;\n/** @type {?} */\nInfiniteScrollDirective.prototype._updateRequests;\n/** @type {?} */\nInfiniteScrollDirective.prototype._isLoading;\n/** @type {?} */\nInfiniteScrollDirective.prototype._isExhausted;\n/** @type {?} */\nInfiniteScrollDirective.prototype._loadButtonEnabled;\n/** @type {?} */\nInfiniteScrollDirective.prototype._canLoadManually;\n/** @type {?} */\nInfiniteScrollDirective.prototype._loadButtonSubscriptions;\n/** @type {?} */\nInfiniteScrollDirective.prototype._element;\n}\n\n/**\n * The internal data associated with a load/check request.\n */\nclass InfiniteScrollRequest {\n    check: boolean;\n    pageNumber: number;\n    pageSize: number;\n    filter: any;\n}\n\nfunction InfiniteScrollRequest_tsickle_Closure_declarations() {\n/** @type {?} */\nInfiniteScrollRequest.prototype.check;\n/** @type {?} */\nInfiniteScrollRequest.prototype.pageNumber;\n/** @type {?} */\nInfiniteScrollRequest.prototype.pageSize;\n/** @type {?} */\nInfiniteScrollRequest.prototype.filter;\n}\n\n\nexport type InfiniteScrollLoadFunction = (pageNum: number, pageSize: number, filter: any) => any | Promise<any>;\n/**\n * Event raised before the `loading` function is called.\n */\nexport class InfiniteScrollLoadingEvent {\nprivate _defaultPrevented = false;\n/**\n * @param {?} pageNumber\n * @param {?} pageSize\n * @param {?} filter\n */\nconstructor(\npublic pageNumber: number,\npublic pageSize: number,\npublic filter: any) { }\n/**\n * Prevents the default behaviour of the `loading` event (loading function will not be called).\n * @return {?}\n */\npreventDefault() {\n        this._defaultPrevented = true;\n    }\n/**\n * @return {?}\n */\ndefaultPrevented(): boolean {\n        return this._defaultPrevented;\n    }\n}\n\nfunction InfiniteScrollLoadingEvent_tsickle_Closure_declarations() {\n/** @type {?} */\nInfiniteScrollLoadingEvent.prototype._defaultPrevented;\n/**\n * The index of the requested page, starting from 0.\n * @type {?}\n */\nInfiniteScrollLoadingEvent.prototype.pageNumber;\n/**\n * The number of items requested.\n * @type {?}\n */\nInfiniteScrollLoadingEvent.prototype.pageSize;\n/**\n * The filter details as provided via the `filter` binding.\n * @type {?}\n */\nInfiniteScrollLoadingEvent.prototype.filter;\n}\n\n/**\n * Event raised when the loading function result has been resolved and added to the collection.\n */\nexport class InfiniteScrollLoadedEvent {\n/**\n * @param {?} pageNumber\n * @param {?} pageSize\n * @param {?} filter\n * @param {?} data\n * @param {?} exhausted\n */\nconstructor(\npublic pageNumber: number,\npublic pageSize: number,\npublic filter: any,\npublic data: any,\npublic exhausted: boolean) { }\n}\n\nfunction InfiniteScrollLoadedEvent_tsickle_Closure_declarations() {\n/**\n * The index of the requested page, starting from 0.\n * @type {?}\n */\nInfiniteScrollLoadedEvent.prototype.pageNumber;\n/**\n * The number of items requested.\n * @type {?}\n */\nInfiniteScrollLoadedEvent.prototype.pageSize;\n/**\n * The filter details as provided via the `filter` binding.\n * @type {?}\n */\nInfiniteScrollLoadedEvent.prototype.filter;\n/**\n * The result of the promise returned from the loading function.\n * @type {?}\n */\nInfiniteScrollLoadedEvent.prototype.data;\n/**\n * True if the data is considered exhausted (number of items returned less than `pageSize`).\n * @type {?}\n */\nInfiniteScrollLoadedEvent.prototype.exhausted;\n}\n\n/**\n * Event raised if the loading function returns a rejected promise.\n */\nexport class InfiniteScrollLoadErrorEvent {\n/**\n * @param {?} pageNumber\n * @param {?} pageSize\n * @param {?} filter\n * @param {?} error\n */\nconstructor(\npublic pageNumber: number,\npublic pageSize: number,\npublic filter: any,\npublic error: any) { }\n}\n\nfunction InfiniteScrollLoadErrorEvent_tsickle_Closure_declarations() {\n/**\n * The index of the requested page, starting from 0.\n * @type {?}\n */\nInfiniteScrollLoadErrorEvent.prototype.pageNumber;\n/**\n * The number of items requested.\n * @type {?}\n */\nInfiniteScrollLoadErrorEvent.prototype.pageSize;\n/**\n * The filter details as provided via the `filter` binding.\n * @type {?}\n */\nInfiniteScrollLoadErrorEvent.prototype.filter;\n/**\n * The object provided when rejecting the promise.\n * @type {?}\n */\nInfiniteScrollLoadErrorEvent.prototype.error;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { InfiniteScrollLoadButtonDirective } from './infinite-scroll-load-button.directive';\nimport { InfiniteScrollLoadingDirective } from './infinite-scroll-loading.directive';\nimport { InfiniteScrollDirective } from './infinite-scroll.directive';\nimport { NgModule } from '@angular/core';\nexport class InfiniteScrollModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [],\n    exports: [\n        InfiniteScrollDirective,\n        InfiniteScrollLoadButtonDirective,\n        InfiniteScrollLoadingDirective\n    ],\n    declarations: [\n        InfiniteScrollDirective,\n        InfiniteScrollLoadButtonDirective,\n        InfiniteScrollLoadingDirective\n    ],\n    providers: [],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction InfiniteScrollModule_tsickle_Closure_declarations() {\n/** @type {?} */\nInfiniteScrollModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nInfiniteScrollModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable, Inject } from '@angular/core';\nexport class ScrollIntoViewService {\n/**\n * @param {?} elem\n * @param {?} scrollParent\n * @return {?}\n */\nscrollIntoView(elem: HTMLElement, scrollParent: HTMLElement) {\n        const /** @type {?} */ offsetTop = (elem.getBoundingClientRect().top + scrollParent.scrollTop) - scrollParent.getBoundingClientRect().top;\n        if (offsetTop < scrollParent.scrollTop) {\n            scrollParent.scrollTop = offsetTop;\n        } else {\n            const /** @type {?} */ offsetBottom = offsetTop + elem.offsetHeight;\n            if (offsetBottom > (scrollParent.scrollTop + scrollParent.clientHeight)) {\n                scrollParent.scrollTop = offsetBottom - scrollParent.clientHeight;\n            }\n        }\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ScrollIntoViewService_tsickle_Closure_declarations() {\n/** @type {?} */\nScrollIntoViewService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nScrollIntoViewService.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { ScrollIntoViewService } from './scroll-into-view.service';\nimport { Directive, ElementRef, Input, OnChanges, SimpleChanges } from '@angular/core';\nexport class ScrollIntoViewIfDirective implements OnChanges {\n\n     condition = false;\n     scrollParent: HTMLElement;\n/**\n * @param {?} element\n * @param {?} scrollIntoViewService\n */\nconstructor(private element: ElementRef,\nprivate scrollIntoViewService: ScrollIntoViewService) {}\n/**\n * @param {?} changes\n * @return {?}\n */\nngOnChanges(changes: SimpleChanges) {\n        if (this.condition) {\n            setTimeout(() => {\n                this.scrollIntoViewService.scrollIntoView(this.element.nativeElement, this.scrollParent);\n            });\n        }\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{ selector: '[uxScrollIntoViewIf]' }, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: ScrollIntoViewService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'condition': [{ type: Input, args: ['uxScrollIntoViewIf', ] },],\n'scrollParent': [{ type: Input },],\n};\n}\n\nfunction ScrollIntoViewIfDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nScrollIntoViewIfDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nScrollIntoViewIfDirective.ctorParameters;\n/** @type {?} */\nScrollIntoViewIfDirective.propDecorators;\n/** @type {?} */\nScrollIntoViewIfDirective.prototype.condition;\n/** @type {?} */\nScrollIntoViewIfDirective.prototype.scrollParent;\n/** @type {?} */\nScrollIntoViewIfDirective.prototype.element;\n/** @type {?} */\nScrollIntoViewIfDirective.prototype.scrollIntoViewService;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\n\nimport { ScrollIntoViewIfDirective } from './scroll-into-view-if.directive';\nimport { ScrollIntoViewService } from './scroll-into-view.service';\nexport class ScrollIntoViewIfModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [],\n    exports: [ScrollIntoViewIfDirective],\n    declarations: [ScrollIntoViewIfDirective],\n    providers: [ScrollIntoViewService],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ScrollIntoViewIfModule_tsickle_Closure_declarations() {\n/** @type {?} */\nScrollIntoViewIfModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nScrollIntoViewIfModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { InfiniteScrollModule } from '../../directives/infinite-scroll/index';\nimport { ScrollIntoViewIfModule } from '../../directives/scroll-into-view-if/index';\nimport { TypeaheadKeyService } from './typeahead-key.service';\nimport { TypeaheadComponent } from './typeahead.component';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nexport class TypeaheadModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        CommonModule,\n        InfiniteScrollModule,\n        ScrollIntoViewIfModule\n    ],\n    exports: [TypeaheadComponent],\n    declarations: [TypeaheadComponent],\n    providers: [TypeaheadKeyService],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction TypeaheadModule_tsickle_Closure_declarations() {\n/** @type {?} */\nTypeaheadModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTypeaheadModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { InfiniteScrollLoadFunction } from '../../directives/infinite-scroll/index';\nimport { TypeaheadComponent, TypeaheadKeyService, TypeaheadOptionEvent } from '../typeahead/index';\nimport { Component, ElementRef, EventEmitter, forwardRef, Inject, Input, OnChanges, OnInit, Output, SimpleChanges, TemplateRef, ViewChild } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { DOCUMENT } from '@angular/platform-browser';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { Observable } from 'rxjs/Observable';\n\nexport const /** @type {?} */ SELECT_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => SelectComponent),\n    multi: true\n};\nexport class SelectComponent implements OnInit, OnChanges, ControlValueAccessor {\nprivate _value: any;\n/**\n * @return {?}\n */\nget value() {\n        return this._value;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset value(value: any) {\n        this._value = value;\n        this.valueChange.emit(value);\n        this.propagateChange(value);\n    }\n\n     valueChange = new EventEmitter<any>();\nprivate _input = new BehaviorSubject<string>('');\n/**\n * @return {?}\n */\nget input() {\n        return this._input.getValue();\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset input(value: string) {\n        this._input.next(value);\n        this.inputChange.emit(value);\n    }\n\n     inputChange = new EventEmitter<string>();\nprivate _dropdownOpen: boolean = false;\n/**\n * @return {?}\n */\nget dropdownOpen() {\n        return this._dropdownOpen;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset dropdownOpen(value: boolean) {\n        this._dropdownOpen = value;\n        this.dropdownOpenChange.emit(value);\n    }\n\n     dropdownOpenChange = new EventEmitter<boolean>();\n\n     options: any[] | InfiniteScrollLoadFunction;\n     display: (option: any) => string | string;\n     key: (option: any) => string | string;\n     allowNull: boolean = false;\n     disabled: boolean = false;\n     dropDirection: 'up' | 'down' = 'down';\n     maxHeight: string = '250px';\n     multiple: boolean = false;\n     pageSize: number = 20;\n     placeholder: string;\n\n     loadingTemplate: TemplateRef<any>;\n     noOptionsTemplate: TemplateRef<any>;\n     optionTemplate: TemplateRef<any>;\n\n     singleInput: ElementRef;\n     multipleTypeahead: TypeaheadComponent;\n     singleTypeahead: TypeaheadComponent;\n\n    filter: Observable<string>;\n\n    propagateChange = (_: any) => { };\n/**\n * @param {?} _element\n * @param {?} _document\n * @param {?} _typeaheadKeyService\n */\nconstructor(\nprivate _element: ElementRef,\nprivate _document: HTMLDocument,\nprivate _typeaheadKeyService: TypeaheadKeyService) { }\n/**\n * @return {?}\n */\nngOnInit() {\n\n        // Changes to the input field\n        this._input.subscribe((next) => {\n            if (!this.multiple && next !== this.getDisplay(this.value)) {\n                if (this.allowNull) {\n                    this.value = null;\n                }\n            }\n        });\n\n        // Set up filter from input\n        this.filter = this._input\n            .map((input) => {\n                if (!this.multiple && input === this.getDisplay(this.value)) {\n                    return '';\n                }\n                return input;\n            })\n            .debounceTime(200);\n\n        // Changes to filter value\n        this.filter.subscribe((next) => {\n\n            // Open the dropdown when filter is nonempty.\n            if (next && next.length > 0) {\n                this.dropdownOpen = true;\n            }\n        });\n    }\n/**\n * @param {?} changes\n * @return {?}\n */\nngOnChanges(changes: SimpleChanges) {\n        if (changes.value) {\n            if (!this.multiple && changes.value.currentValue !== null) {\n                this.input = this.getDisplay(changes.value.currentValue);\n            }\n        }\n        if (changes.multiple && !changes.multiple.firstChange && changes.multiple.currentValue !== changes.multiple.previousValue) {\n            this.input = '';\n        }\n    }\n/**\n * @param {?} obj\n * @return {?}\n */\nwriteValue(obj: any): void {\n        if (obj !== undefined) {\n            this._value = obj;\n        }\n    }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnChange(fn: any): void {\n        this.propagateChange = fn;\n    }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnTouched(fn: any): void { }\n/**\n * @param {?} isDisabled\n * @return {?}\n */\nsetDisabledState(isDisabled: boolean): void {\n        this.disabled = isDisabled;\n    }\n/**\n * @param {?} event\n * @return {?}\n */\ninputClickHandler(event: MouseEvent) {\n        this.selectInputText();\n        this.dropdownOpen = true;\n    }\n/**\n * @param {?} event\n * @return {?}\n */\ninputBlurHandler(event: Event) {\n        // Close dropdown and reset text input if focus is lost\n        setTimeout(() => {\n            if (!this._element.nativeElement.contains(this._document.activeElement)) {\n                this.dropdownOpen = false;\n                if (!this.multiple) {\n                    this.input = this.getDisplay(this.value);\n                }\n            }\n        }, 200);\n    }\n/**\n * Key handler for single select only. Multiple select key handling is in TagInputComponent.\n * @param {?} event\n * @return {?}\n */\ninputKeyHandler(event: KeyboardEvent) {\n\n        // Standard keys for typeahead (up/down/esc)\n        this._typeaheadKeyService.handleKey(event, this.singleTypeahead);\n\n        switch (event.key) {\n            case 'Enter':\n                if (this.dropdownOpen) {\n                    // Set the highlighted option as the value and close\n                    this.value = this.singleTypeahead.highlighted;\n                    this.dropdownOpen = false;\n                }\n\n                // Update the input field. If dropdown isn't open then reset it to the previous value.\n                this.input = this.getDisplay(this.value);\n                event.preventDefault();\n                break;\n        }\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nsingleOptionSelected(event: TypeaheadOptionEvent) {\n        if (event.option) {\n            this.value = event.option;\n            this.dropdownOpen = false;\n        }\n    }\n/**\n * Returns the display value of the given option.\n * @param {?} option\n * @return {?}\n */\ngetDisplay(option: any): string {\n        if (option === null || option === undefined) {\n            return '';\n        }\n        if (typeof this.display === 'function') {\n            return this.display(option);\n        }\n        if (typeof this.display === 'string' && option.hasOwnProperty(this.display)) {\n            return option[ /** @type {?} */((<string>this.display))];\n        }\n        return option;\n    }\n/**\n * @return {?}\n */\nprivate selectInputText() {\n        this.singleInput.nativeElement.select();\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-select',\n    template: `\n      <ux-tag-input *ngIf=\"multiple\"\n          [(tags)]=\"value\"\n          [(input)]=\"input\"\n          [addOnPaste]=\"false\"\n          [disabled]=\"disabled\"\n          [display]=\"display\"\n          [freeInput]=\"false\"\n          [placeholder]=\"placeholder\"\n          [showTypeaheadOnClick]=\"true\">\n\n          <ux-typeahead #multipleTypeahead\n              [options]=\"options\"\n              [filter]=\"filter | async\"\n              [(open)]=\"dropdownOpen\"\n              [display]=\"display\"\n              [key]=\"key\"\n              [disabledOptions]=\"value\"\n              [dropDirection]=\"dropDirection\"\n              [maxHeight]=\"maxHeight\"\n              [pageSize]=\"pageSize\"\n              [selectFirst]=\"true\"\n              [loadingTemplate]=\"loadingTemplate\"\n              [optionTemplate]=\"optionTemplate\"\n              [noOptionsTemplate]=\"noOptionsTemplate\">\n          </ux-typeahead>\n\n      </ux-tag-input>\n\n      <div *ngIf=\"!multiple\" class=\"inner-addon right-addon\" [class.disabled]=\"disabled\">\n\n          <i class=\"hpe-icon\"\n              [class.hpe-down]=\"dropDirection === 'down'\"\n              [class.hpe-up]=\"dropDirection === 'up'\"></i>\n\n          <input #singleInput type=\"text\" class=\"form-control\"\n              [(ngModel)]=\"input\"\n              [placeholder]=\"placeholder\"\n              [disabled]=\"disabled\"\n              (click)=\"inputClickHandler($event)\"\n              (blur)=\"inputBlurHandler($event)\"\n              (keydown)=\"inputKeyHandler($event)\">\n\n          <ux-typeahead #singleTypeahead\n              [options]=\"options\"\n              [filter]=\"filter | async\"\n              [(open)]=\"dropdownOpen\"\n              [display]=\"display\"\n              [key]=\"key\"\n              [dropDirection]=\"dropDirection\"\n              [maxHeight]=\"maxHeight\"\n              [openOnFilterChange]=\"false\"\n              [pageSize]=\"pageSize\"\n              [selectFirst]=\"true\"\n              [loadingTemplate]=\"loadingTemplate\"\n              [optionTemplate]=\"optionTemplate\"\n              [noOptionsTemplate]=\"noOptionsTemplate\"\n              (optionSelected)=\"singleOptionSelected($event)\" >\n          </ux-typeahead>\n\n      </div>\n    `,\n    providers: [SELECT_VALUE_ACCESSOR]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: HTMLDocument, decorators: [{ type: Inject, args: [DOCUMENT, ] }, ]},\n{type: TypeaheadKeyService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'value': [{ type: Input },],\n'valueChange': [{ type: Output },],\n'input': [{ type: Input },],\n'inputChange': [{ type: Output },],\n'dropdownOpen': [{ type: Input },],\n'dropdownOpenChange': [{ type: Output },],\n'options': [{ type: Input },],\n'display': [{ type: Input },],\n'key': [{ type: Input },],\n'allowNull': [{ type: Input },],\n'disabled': [{ type: Input },],\n'dropDirection': [{ type: Input },],\n'maxHeight': [{ type: Input },],\n'multiple': [{ type: Input },],\n'pageSize': [{ type: Input },],\n'placeholder': [{ type: Input },],\n'loadingTemplate': [{ type: Input },],\n'noOptionsTemplate': [{ type: Input },],\n'optionTemplate': [{ type: Input },],\n'singleInput': [{ type: ViewChild, args: ['singleInput', ] },],\n'multipleTypeahead': [{ type: ViewChild, args: ['multipleTypeahead', ] },],\n'singleTypeahead': [{ type: ViewChild, args: ['singleTypeahead', ] },],\n};\n}\n\nfunction SelectComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nSelectComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSelectComponent.ctorParameters;\n/** @type {?} */\nSelectComponent.propDecorators;\n/** @type {?} */\nSelectComponent.prototype._value;\n/** @type {?} */\nSelectComponent.prototype.valueChange;\n/** @type {?} */\nSelectComponent.prototype._input;\n/** @type {?} */\nSelectComponent.prototype.inputChange;\n/** @type {?} */\nSelectComponent.prototype._dropdownOpen;\n/** @type {?} */\nSelectComponent.prototype.dropdownOpenChange;\n/** @type {?} */\nSelectComponent.prototype.options;\n/** @type {?} */\nSelectComponent.prototype.display;\n/** @type {?} */\nSelectComponent.prototype.key;\n/** @type {?} */\nSelectComponent.prototype.allowNull;\n/** @type {?} */\nSelectComponent.prototype.disabled;\n/** @type {?} */\nSelectComponent.prototype.dropDirection;\n/** @type {?} */\nSelectComponent.prototype.maxHeight;\n/** @type {?} */\nSelectComponent.prototype.multiple;\n/** @type {?} */\nSelectComponent.prototype.pageSize;\n/** @type {?} */\nSelectComponent.prototype.placeholder;\n/** @type {?} */\nSelectComponent.prototype.loadingTemplate;\n/** @type {?} */\nSelectComponent.prototype.noOptionsTemplate;\n/** @type {?} */\nSelectComponent.prototype.optionTemplate;\n/** @type {?} */\nSelectComponent.prototype.singleInput;\n/** @type {?} */\nSelectComponent.prototype.multipleTypeahead;\n/** @type {?} */\nSelectComponent.prototype.singleTypeahead;\n/** @type {?} */\nSelectComponent.prototype.filter;\n/** @type {?} */\nSelectComponent.prototype.propagateChange;\n/** @type {?} */\nSelectComponent.prototype._element;\n/** @type {?} */\nSelectComponent.prototype._document;\n/** @type {?} */\nSelectComponent.prototype._typeaheadKeyService;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","\nexport class TagInputEvent {\nprivate _defaultPrevented = false;\n/**\n * @param {?} tag\n */\nconstructor(public tag: any) {}\n/**\n * @return {?}\n */\npreventDefault() {\n        this._defaultPrevented = true;\n    }\n/**\n * @return {?}\n */\ndefaultPrevented(): boolean {\n        return this._defaultPrevented;\n    }\n}\n\nfunction TagInputEvent_tsickle_Closure_declarations() {\n/** @type {?} */\nTagInputEvent.prototype._defaultPrevented;\n/** @type {?} */\nTagInputEvent.prototype.tag;\n}\n","import { TypeaheadComponent, TypeaheadKeyService } from '../typeahead/index';\nimport { TypeaheadOptionEvent } from '../typeahead/typeahead-event';\nimport { TagInputEvent } from './tag-input-event';\nimport {\n    AfterContentInit,\n    Component,\n    ContentChildren,\n    ElementRef,\n    EventEmitter,\n    forwardRef,\n    HostListener,\n    Inject,\n    Input,\n    OnChanges,\n    OnInit,\n    Output,\n    QueryList,\n    SimpleChanges,\n    TemplateRef,\n    ViewChild\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALIDATORS, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { DOCUMENT } from '@angular/platform-browser';\n\n\nconst /** @type {?} */ TAGINPUT_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => TagInputComponent),\n    multi: true\n};\nconst /** @type {?} */ TAGINPUT_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => TagInputComponent),\n    multi: true\n};\nexport class TagInputComponent implements OnInit, AfterContentInit, OnChanges, ControlValueAccessor {\nprivate _tags: any[] = [];\n/**\n * @return {?}\n */\nget tags() {\n        if (!this._tags) {\n            this._tags = [];\n        }\n        return this._tags;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset tags(value: any[]) {\n        this._tags = value;\n        this.onChangeHandler(this._tags);\n        this.tagsChange.emit(this._tags);\n    }\n\n     tagsChange = new EventEmitter<any[]>();\nprivate _input: string = '';\n/**\n * @return {?}\n */\nget input() {\n        return this._input;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset input(value: string) {\n        this._input = value;\n        this.inputChange.emit(value);\n    }\n\n     inputChange = new EventEmitter<string>();\n\n     display: (option: any) => string | string;\n     addOnPaste: boolean = true;\n     disabled: boolean = false;\n     enforceTagLimits: boolean = false;\n     freeInput: boolean = true;\n     maxTags: number = Number.MAX_VALUE;\n     minTags: number = 0;\n     placeholder: string = '';\n     showTypeaheadOnClick: boolean = false;\n     tagDelimiters: string = '';\n     tagPattern: RegExp;\n     tagTemplate: TemplateRef<any>;\n     tagClass: TagClassFunction = () => undefined;\n     validationErrors: any = {};\n     createTagHandler: (value: string) => any;\n\n     tagAdding = new EventEmitter<TagInputEvent>();\n     tagAdded = new EventEmitter<TagInputEvent>();\n     tagInvalidated = new EventEmitter<TagInputEvent>();\n     tagRemoving = new EventEmitter<TagInputEvent>();\n     tagRemoved = new EventEmitter<TagInputEvent>();\n     tagClick = new EventEmitter<TagInputEvent>();\n\n     typeaheadQuery: QueryList<TypeaheadComponent>;\n\n     tagInput: ElementRef;\nprivate _defaultTagTemplate: TemplateRef<any>;\n\n    selectedIndex: number = -1;\n\n    tagApi: TagApi = {\n        getTagDisplay: this.getTagDisplay.bind(this),\n        removeTagAt: this.removeTagAt.bind(this),\n        canRemoveTagAt: this.canRemoveTagAt.bind(this)\n    };\n\n    valid: boolean = true;\n    inputValid: boolean = true;\n\n    typeahead: TypeaheadComponent;\nprivate onChangeHandler: (_: any) => void = () => { };\nprivate onTouchedHandler: () => void = () => { };\n/**\n * @param {?} _element\n * @param {?} _document\n * @param {?} _typeaheadKeyService\n */\nconstructor(\nprivate _element: ElementRef,\nprivate _document: Document,\nprivate _typeaheadKeyService: TypeaheadKeyService) { }\n/**\n * @return {?}\n */\nngOnInit() {\n        if (!this.tagTemplate) {\n            this.tagTemplate = this._defaultTagTemplate;\n        }\n    }\n/**\n * @return {?}\n */\nngAfterContentInit() {\n        // Watch for optional child typeahead control\n        this.connectTypeahead(this.typeaheadQuery.first);\n        this.typeaheadQuery.changes.subscribe((query) => {\n            this.connectTypeahead(query.first);\n        });\n    }\n/**\n * @param {?} changes\n * @return {?}\n */\nngOnChanges(changes: SimpleChanges) {\n        if (changes.disabled) {\n            if (changes.disabled.currentValue) {\n                // Clear selection and close dropdown\n                this.selectedIndex = -1;\n                if (this.typeahead) {\n                    this.typeahead.open = false;\n                }\n            }\n        }\n\n        // Update validation status\n        this.validate();\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nwriteValue(value: any[]) {\n        if (value) {\n            this.tags = value;\n        }\n    }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnChange(fn: any) {\n        this.onChangeHandler = fn;\n    }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnTouched(fn: any) {\n        this.onTouchedHandler = fn;\n    }\n/**\n * Validate the value of the control (tags property).\n * @return {?}\n */\nvalidate() {\n        this.valid = true;\n        let /** @type {?} */ tagRangeError = null;\n        if (this.tags && (this.tags.length < this.minTags || this.tags.length > this.maxTags)) {\n            tagRangeError = {\n                given: this.tags.length,\n                min: this.minTags,\n                max: this.maxTags\n            };\n            this.valid = false;\n        }\n        this.validationErrors['tagRangeError'] = tagRangeError;\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nkeyHandler(event: KeyboardEvent) {\n\n        if (this.disabled) { return; }\n\n        // Get the input field cursor location\n        const /** @type {?} */ inputCursorPos = this.tagInput.nativeElement.selectionStart;\n\n        // Determine if the input field has any text selected\n        const /** @type {?} */ hasSelection = this.tagInput.nativeElement.selectionStart !== this.tagInput.nativeElement.selectionEnd;\n\n        // Determine if a tag has focus\n        const /** @type {?} */ tagSelected = this.isValidTagIndex(this.selectedIndex);\n        \n        const /** @type {?} */ inputLength = this.input ? this.input.length : 0;\n\n        // Check whether the arrow keys can move the selection. Otherwise the input field takes the event.\n        const /** @type {?} */ canNavigateLeft = tagSelected || (inputCursorPos <= 0 && !hasSelection);\n        const /** @type {?} */ canNavigateRight = tagSelected || (inputCursorPos >= inputLength && !hasSelection);\n\n        // Forward key events to the typeahead component.\n        this._typeaheadKeyService.handleKey(event, this.typeahead);\n\n        switch (event.key) {\n            case 'Enter':\n                // Check if a typeahead option is highlighted\n                if (this.typeahead && this.typeahead.open && this.typeahead.highlighted) {\n                    // Add the typeahead option as a tag, clear the input, and close the dropdown\n                    this.commitTypeahead(this.typeahead.highlighted);\n                    this.typeahead.open = false;\n                } else {\n                    // Validate and add the input text as a tag, if possible\n                    this.commitInput();\n                }\n                event.preventDefault();\n                break;\n            case 'Backspace':\n                if (canNavigateLeft) {\n                    this.backspace();\n                    event.stopPropagation();\n                    event.preventDefault();\n                }\n                break;\n            case 'Delete':\n            case 'Del':\n                if (tagSelected) {\n                    this.removeTagAt(this.selectedIndex);\n                }\n                break;\n            case 'ArrowLeft':\n            case 'Left':\n                if (canNavigateLeft) {\n                    this.moveSelection(-1);\n                    event.preventDefault();\n                }\n                break;\n            case 'ArrowRight':\n            case 'Right':\n                if (canNavigateRight) {\n                    this.moveSelection(1);\n                    event.preventDefault();\n                }\n                break;\n        }\n\n        // Check for keys in the tagDelimiters\n        if (this.tagDelimiters && this.tagDelimiters.indexOf(this.getKeyChar(event)) >= 0) {\n            // Commit previous text\n            this.commitInput();\n            event.stopPropagation();\n            event.preventDefault();\n        }\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nfocusOutHandler(event: FocusEvent) {\n        // Close the dropdown on blur\n        setTimeout(() => {\n            if (!this._element.nativeElement.contains(this._document.activeElement)) {\n                this.selectedIndex = -1;\n                if (this.typeahead) {\n                    this.typeahead.open = false;\n                }\n            }\n        }, 200);\n    }\n/**\n * @param {?} event\n * @param {?} tag\n * @param {?} index\n * @return {?}\n */\ntagClickHandler(event: MouseEvent, tag: any, index: number) {\n\n        if (this.disabled) { return; }\n\n        // Send tagClick event\n        const /** @type {?} */ tagClickEvent = new TagInputEvent(tag);\n        this.tagClick.emit(tagClickEvent);\n\n        // Prevent focus if preventDefault() was called\n        if (tagClickEvent.defaultPrevented()) {\n            event.preventDefault();\n            return;\n        }\n\n        // Select the tag (for IE that doesn't propagate focus)\n        this.selectTagAt(index);\n    }\n/**\n * @return {?}\n */\ninputClickHandler() {\n\n        if (this.disabled) { return; }\n\n        if (this.typeahead && this.showTypeaheadOnClick) {\n            this.typeahead.open = true;\n        }\n    }\n/**\n * @return {?}\n */\ninputFocusHandler() {\n\n        if (this.disabled) { return; }\n\n        this.selectInput();\n    }\n/**\n * @param {?} event\n * @return {?}\n */\ninputPasteHandler(event: ClipboardEvent) {\n\n        if (this.disabled) { return; }\n\n        if (this.addOnPaste) {\n            // Get text from the clipboard\n            let /** @type {?} */ input: string = null;\n            if (event.clipboardData) {\n                input = event.clipboardData.getData('text/plain');\n            } else if (( /** @type {?} */((<any>window))).clipboardData) {\n                // Internet Explorer only\n                input = ( /** @type {?} */((<any>window))).clipboardData.getData('Text');\n            }\n\n            // Commit the clipboard text directly\n            if (this.commit(input)) {\n                this.selectInput();\n                event.stopPropagation();\n                event.preventDefault();\n            }\n        }\n    }\n/**\n * @param {?} event\n * @return {?}\n */\ntypeaheadOptionSelectedHandler(event: TypeaheadOptionEvent) {\n\n        if (this.disabled) { return; }\n\n        // When the typeahead sends the optionSelected event, commit the object directly\n        this.commitTypeahead(event.option);\n    }\n/**\n * Commit the current input value and clear the input field if successful.\n * @return {?}\n */\ncommitInput() {\n        if (this.commit(this.input)) {\n            this.selectInput();\n            this.input = '';\n        }\n    }\n/**\n * Commit the given tag object and clear the input if successful.\n * @param {?} tag\n * @return {?}\n */\ncommitTypeahead(tag: any) {\n        if (this.addTag(tag)) {\n            this.selectInput();\n            this.input = '';\n        }\n    }\n/**\n * Commit the given string value as one or more tags, if validation passes. Returns true if the tag(s) were created.\n * @param {?} input\n * @return {?}\n */\ncommit(input: string): boolean {\n        if (input && this.freeInput) {\n\n            // Split the tags by the tagDelimiters if configured\n            const /** @type {?} */ newTags = this.splitTagInput(input);\n\n            // Check tag validation for all of the individual values\n            let /** @type {?} */ allValid = true;\n            for (let /** @type {?} */ newTag of newTags) {\n                const /** @type {?} */ valid = this.validateTag(newTag);\n                if (!valid) {\n                    allValid = false;\n                }\n            }\n\n            // Add the tags if all are valid\n            if (allValid) {\n                for (let /** @type {?} */ newTag of newTags) {\n                    this.addTag(this.createTag(newTag));\n                }\n\n                return true;\n            }\n        }\n\n        return false;\n    }\n/**\n * If no tag is selected, select the rightmost tag. If a tag is selected, remove it.\n * @return {?}\n */\nbackspace() {\n\n        if (this.disabled) { return; }\n\n        if (!this.isValidTagIndex(this.selectedIndex)) {\n            this.selectTagAt(this.tags.length - 1);\n        } else {\n            this.removeTagAt(this.selectedIndex);\n        }\n    }\n/**\n * Move the highlighted option forwards or backwards in the list. Wraps at the limits.\n * @param {?} d Value to be added to the selected index, i.e. -1 to move backwards, +1 to move forwards.\n * @return {?}\n */\nmoveSelection(d: number) {\n\n        if (this.disabled) { return; }\n\n        if (this.isValidSelectIndex(this.selectedIndex)) {\n            this.selectedIndex += d;\n\n            // Do wrapping of selection when out of bounds\n            if (this.selectedIndex < 0) {\n                this.selectedIndex = this.tags.length;\n            } else if (this.selectedIndex > this.tags.length) {\n                this.selectedIndex = 0;\n            }\n        }\n    }\n/**\n * Returns a value to display for the given tag. Uses display function/property name if set, otherwise assumes that the tag is a simple string.\n * @param {?} tag\n * @return {?}\n */\ngetTagDisplay(tag: any): string {\n        if (typeof this.display === 'function') {\n            return this.display(tag);\n        }\n        if (typeof this.display === 'string') {\n            return tag[ /** @type {?} */((<string>this.display))];\n        }\n        return tag;\n    }\n/**\n * Returns true if the given index is selected (tag index or input field).\n * @param {?} index\n * @return {?}\n */\nisSelected(index: number): boolean {\n        return index === this.selectedIndex;\n    }\n/**\n * Select the tag at the given index. Does nothing if disabled is true.\n * @param {?} tagIndex\n * @return {?}\n */\nselectTagAt(tagIndex: number) {\n\n        if (this.disabled) { return; }\n\n        if (this.isValidTagIndex(tagIndex)) {\n            this.selectedIndex = tagIndex;\n        }\n    }\n/**\n * Select the input field, giving it focus. Does nothing if disabled is true.\n * @return {?}\n */\nselectInput() {\n\n        if (this.disabled) { return; }\n\n        this.selectedIndex = this.tags.length;\n    }\n/**\n * Remove the tag at the given index. Does nothing if disabled is true or the minTags property prevents removal.\n * @param {?} tagIndex\n * @return {?}\n */\nremoveTagAt(tagIndex: number) {\n\n        if (this.disabled || !this.canRemoveTagAt(tagIndex)) { return; }\n\n        // Check that the tagIndex is in range\n        if (this.isValidTagIndex(tagIndex)) {\n            const /** @type {?} */ tag = this.tags[tagIndex];\n            const /** @type {?} */ tagRemovingEvent = new TagInputEvent(tag);\n            this.tagRemoving.emit(tagRemovingEvent);\n            if (!tagRemovingEvent.defaultPrevented()) {\n                // Select input first to avoid issues with dropping focus\n                this.selectInput();\n                // Remove the tag\n                this.tags.splice(tagIndex, 1);\n                // Set focus again since indices have changed\n                this.selectInput();\n                this.tagRemoved.emit(new TagInputEvent(tag));\n                this.validate();\n            }\n        }\n    }\n/**\n * Returns true if the tag at the given index can be removed.\n * @param {?} tagIndex\n * @return {?}\n */\ncanRemoveTagAt(tagIndex: number): boolean {\n        return this.tags.length > this.minTags || !this.enforceTagLimits;\n    }\n/**\n * Returns true if the input field should be available.\n * @return {?}\n */\nisInputVisible() {\n        return this.tags.length < this.maxTags || !this.enforceTagLimits;\n    }\n/**\n * Returns true if any part of the control has focus.\n * @return {?}\n */\nhasFocus(): boolean {\n        return this.isValidSelectIndex(this.selectedIndex);\n    }\n/**\n * @param {?} typeahead\n * @return {?}\n */\nprivate connectTypeahead(typeahead: TypeaheadComponent) {\n        this.typeahead = typeahead;\n        if (this.typeahead) {\n            // Set up event handler for selected options\n            this.typeahead.optionSelected.subscribe(this.typeaheadOptionSelectedHandler.bind(this));\n        }\n    }\n/**\n * Validate the given tagValue with the tagPattern, if set. Update validationErrors on validation failure.\n * @param {?} tagValue\n * @return {?}\n */\nprivate validateTag(tagValue: string): boolean {\n        let /** @type {?} */ inputPattern = null;\n        this.inputValid = true;\n        if (this.tagPattern && !this.tagPattern.test(tagValue)) {\n            inputPattern = {\n                given: tagValue,\n                pattern: this.tagPattern\n            };\n            this.inputValid = false;\n        }\n        this.validationErrors['inputPattern'] = inputPattern;\n        return this.inputValid;\n    }\n/**\n * Create a tag object for the given tagValue. If createTagHandler is specified, use it; otherwise if displayProperty is specified, create an object with the tagValue as the single named property; otherwise return the tagValue itself.\n * @param {?} tagValue\n * @return {?}\n */\nprivate createTag(tagValue: string): any {\n        let /** @type {?} */ tag = null;\n        if (this.createTagHandler && typeof this.createTagHandler === 'function') {\n            tag = this.createTagHandler(tagValue);\n        } else if (typeof this.display === 'string') {\n            tag = {};\n            tag[ /** @type {?} */((<string>this.display))] = tagValue;\n        } else {\n            tag = tagValue;\n        }\n        return tag;\n    }\n/**\n * Add a tag object, calling the tagAdding and tagAdded events. Returns true if the tag was added to the tags array.\n * @param {?} tag\n * @return {?}\n */\nprivate addTag(tag: any): boolean {\n        if (tag) {\n            // Verify that the new tag can be displayed\n            const /** @type {?} */ displayValue = this.getTagDisplay(tag);\n            if (displayValue && typeof displayValue === 'string' && displayValue.length > 0) {\n                const /** @type {?} */ tagAddingEvent = new TagInputEvent(tag);\n                this.tagAdding.emit(tagAddingEvent);\n                if (!tagAddingEvent.defaultPrevented()) {\n                    this.tags = this.tags || [];\n                    this.tags.push(tag);\n                    this.tagAdded.emit(new TagInputEvent(tag));\n                    this.validate();\n                    return true;\n                }\n            }\n        }\n\n        return false;\n    }\n/**\n * Returns true if the given tagIndex is a valid tag index.\n * @param {?} tagIndex\n * @return {?}\n */\nprivate isValidTagIndex(tagIndex: number): boolean {\n        return tagIndex >= 0 && tagIndex < this.tags.length;\n    }\n/**\n * Returns true if the given index is a valid selection index (tags or input field).\n * @param {?} index\n * @return {?}\n */\nprivate isValidSelectIndex(index: number): boolean {\n        return index >= 0 && index <= this.tags.length;\n    }\n/**\n * Returns the character corresponding to the given key event, mainly for IE compatibility.\n * @param {?} event\n * @return {?}\n */\nprivate getKeyChar(event: KeyboardEvent): string {\n        switch (event.key) {\n            case 'Spacebar':\n                return ' ';\n        }\n        return event.key;\n    }\n/**\n * Returns an array of strings corresponding to the input string split by the tagDelimiters characters.\n * @param {?} input\n * @return {?}\n */\nprivate splitTagInput(input: string): string[] {\n        let /** @type {?} */ tagValues = [input];\n        if (this.tagDelimiters && typeof this.tagDelimiters === 'string') {\n            const /** @type {?} */ escapedDelimiters = this.tagDelimiters.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n            const /** @type {?} */ delimiterRegex = new RegExp(`[${escapedDelimiters}]`, 'g');\n            tagValues = input.split(delimiterRegex).filter((s) => s.length > 0);\n        }\n        return tagValues;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-tag-input',\n    template: `\n      <ol>\n          <li *ngFor=\"let tag of tags; let i = index\" class=\"ux-tag\"\n              [class.disabled]=\"disabled\"\n              [ngClass]=\"tagClass(tag, i, isSelected(i))\"\n              [attr.tabindex]=\"disabled ? null : i\"\n              [focusIf]=\"isSelected(i)\"\n              (click)=\"tagClickHandler($event, tag, i)\"\n              (focus)=\"selectTagAt(i)\">\n        \n              <ng-container [ngTemplateOutlet]=\"tagTemplate\"\n                  [ngTemplateOutletContext]=\"{tag: tag, index: i, disabled: disabled, api: tagApi}\">\n              </ng-container>\n\n          </li>\n          <li *ngIf=\"isInputVisible()\" class=\"ux-tag-input\">\n              <input #tagInput type=\"text\" class=\"ux-tag-input\"\n                  [(ngModel)]=\"input\"\n                  [class.invalid]=\"!inputValid\"\n                  [placeholder]=\"disabled ? '' : (placeholder || '')\"\n                  [disabled]=\"disabled\"\n                  [focusIf]=\"isSelected(tags.length)\"\n                  (click)=\"inputClickHandler()\"\n                  (focus)=\"inputFocusHandler()\"\n                  (paste)=\"inputPasteHandler($event)\">\n          </li>\n      </ol>\n\n      <ng-content #typeahead></ng-content>\n\n      <ng-template #defaultTagTemplate let-tag=\"tag\" let-index=\"index\" let-disabled=\"disabled\" let-api=\"api\">\n          <span class=\"ux-tag-text\">{{api.getTagDisplay(tag)}}</span>\n          <button *ngIf=\"api.canRemoveTagAt(index)\" type=\"button\" class=\"ux-tag-remove\" [disabled]=\"disabled\" (click)=\"api.removeTagAt(index); $event.stopPropagation();\"><i class=\"hpe-icon hpe-close\"></i></button>\n      </ng-template>\n    `,\n    providers: [TAGINPUT_VALUE_ACCESSOR, TAGINPUT_VALIDATOR],\n    host: {\n        '[class.disabled]': 'disabled',\n        '[class.focus]': 'hasFocus()',\n        '[class.invalid]': '!valid || !inputValid'\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Document, decorators: [{ type: Inject, args: [DOCUMENT, ] }, ]},\n{type: TypeaheadKeyService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'tags': [{ type: Input, args: ['tags', ] },],\n'tagsChange': [{ type: Output },],\n'input': [{ type: Input, args: ['input', ] },],\n'inputChange': [{ type: Output },],\n'display': [{ type: Input },],\n'addOnPaste': [{ type: Input },],\n'disabled': [{ type: Input },],\n'enforceTagLimits': [{ type: Input },],\n'freeInput': [{ type: Input },],\n'maxTags': [{ type: Input },],\n'minTags': [{ type: Input },],\n'placeholder': [{ type: Input },],\n'showTypeaheadOnClick': [{ type: Input },],\n'tagDelimiters': [{ type: Input },],\n'tagPattern': [{ type: Input },],\n'tagTemplate': [{ type: Input },],\n'tagClass': [{ type: Input },],\n'validationErrors': [{ type: Input },],\n'createTagHandler': [{ type: Input, args: ['createTag', ] },],\n'tagAdding': [{ type: Output },],\n'tagAdded': [{ type: Output },],\n'tagInvalidated': [{ type: Output },],\n'tagRemoving': [{ type: Output },],\n'tagRemoved': [{ type: Output },],\n'tagClick': [{ type: Output },],\n'typeaheadQuery': [{ type: ContentChildren, args: [TypeaheadComponent, ] },],\n'tagInput': [{ type: ViewChild, args: ['tagInput', ] },],\n'_defaultTagTemplate': [{ type: ViewChild, args: ['defaultTagTemplate', ] },],\n'keyHandler': [{ type: HostListener, args: ['keydown', ['$event'], ] },],\n'focusOutHandler': [{ type: HostListener, args: ['focusout', ['$event'], ] },],\n};\n}\n\nfunction TagInputComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nTagInputComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTagInputComponent.ctorParameters;\n/** @type {?} */\nTagInputComponent.propDecorators;\n/** @type {?} */\nTagInputComponent.prototype._tags;\n/** @type {?} */\nTagInputComponent.prototype.tagsChange;\n/** @type {?} */\nTagInputComponent.prototype._input;\n/** @type {?} */\nTagInputComponent.prototype.inputChange;\n/** @type {?} */\nTagInputComponent.prototype.display;\n/** @type {?} */\nTagInputComponent.prototype.addOnPaste;\n/** @type {?} */\nTagInputComponent.prototype.disabled;\n/** @type {?} */\nTagInputComponent.prototype.enforceTagLimits;\n/** @type {?} */\nTagInputComponent.prototype.freeInput;\n/** @type {?} */\nTagInputComponent.prototype.maxTags;\n/** @type {?} */\nTagInputComponent.prototype.minTags;\n/** @type {?} */\nTagInputComponent.prototype.placeholder;\n/** @type {?} */\nTagInputComponent.prototype.showTypeaheadOnClick;\n/** @type {?} */\nTagInputComponent.prototype.tagDelimiters;\n/** @type {?} */\nTagInputComponent.prototype.tagPattern;\n/** @type {?} */\nTagInputComponent.prototype.tagTemplate;\n/** @type {?} */\nTagInputComponent.prototype.tagClass;\n/** @type {?} */\nTagInputComponent.prototype.validationErrors;\n/** @type {?} */\nTagInputComponent.prototype.createTagHandler;\n/** @type {?} */\nTagInputComponent.prototype.tagAdding;\n/** @type {?} */\nTagInputComponent.prototype.tagAdded;\n/** @type {?} */\nTagInputComponent.prototype.tagInvalidated;\n/** @type {?} */\nTagInputComponent.prototype.tagRemoving;\n/** @type {?} */\nTagInputComponent.prototype.tagRemoved;\n/** @type {?} */\nTagInputComponent.prototype.tagClick;\n/** @type {?} */\nTagInputComponent.prototype.typeaheadQuery;\n/** @type {?} */\nTagInputComponent.prototype.tagInput;\n/** @type {?} */\nTagInputComponent.prototype._defaultTagTemplate;\n/** @type {?} */\nTagInputComponent.prototype.selectedIndex;\n/** @type {?} */\nTagInputComponent.prototype.tagApi;\n/** @type {?} */\nTagInputComponent.prototype.valid;\n/** @type {?} */\nTagInputComponent.prototype.inputValid;\n/** @type {?} */\nTagInputComponent.prototype.typeahead;\n/** @type {?} */\nTagInputComponent.prototype.onChangeHandler;\n/** @type {?} */\nTagInputComponent.prototype.onTouchedHandler;\n/** @type {?} */\nTagInputComponent.prototype._element;\n/** @type {?} */\nTagInputComponent.prototype._document;\n/** @type {?} */\nTagInputComponent.prototype._typeaheadKeyService;\n}\n\n\n/**\n * The API available to tag templates.\n */\nexport interface TagApi {\n    /**\n     * Returns the display value of the given tag, according to the displayProperty property. \n     */\n    getTagDisplay: (tag: any) => string;\n\n    /**\n     * Removes the tag at the given index, if possible.\n     */\n    removeTagAt: (index: number) => void;\n\n    /**\n     * \tReturns true if the tag at the given index can be removed.\n     */\n    canRemoveTagAt: (index: number) => boolean;\n}\n\n/**\n * The function used to return custom class information, for use in `ngClass`.\n */\nexport type TagClassFunction = (tag: any, index: number, selected: boolean) => (string | string[] | Set<string>);\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, Input, OnChanges, SimpleChanges, ElementRef } from '@angular/core';\nexport class FocusIfDirective implements OnChanges {\n\n     focusIf: boolean = false;\n/**\n * @param {?} elementRef\n */\nconstructor(private elementRef: ElementRef) { }\n/**\n * @param {?} changes\n * @return {?}\n */\nngOnChanges(changes: SimpleChanges): void {\n        if (changes.focusIf && changes.focusIf.previousValue === false && changes.focusIf.currentValue === true) {\n            this.elementRef.nativeElement.focus();\n        }\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{ selector: '[focusIf]' }, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'focusIf': [{ type: Input },],\n};\n}\n\nfunction FocusIfDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nFocusIfDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFocusIfDirective.ctorParameters;\n/** @type {?} */\nFocusIfDirective.propDecorators;\n/** @type {?} */\nFocusIfDirective.prototype.focusIf;\n/** @type {?} */\nFocusIfDirective.prototype.elementRef;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { FocusIfDirective } from './focus-if.directive';\nexport class FocusIfModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    exports: [FocusIfDirective],\n    declarations: [FocusIfDirective]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction FocusIfModule_tsickle_Closure_declarations() {\n/** @type {?} */\nFocusIfModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFocusIfModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { FocusIfModule } from '../../directives/focus-if/index';\nimport { TypeaheadModule } from '../typeahead/index';\nimport { TagInputComponent } from './tag-input.component';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nexport class TagInputModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        CommonModule,\n        FormsModule,\n        FocusIfModule,\n        TypeaheadModule\n    ],\n    exports: [TagInputComponent],\n    declarations: [TagInputComponent],\n    providers: [],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction TagInputModule_tsickle_Closure_declarations() {\n/** @type {?} */\nTagInputModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTagInputModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { InfiniteScrollModule } from '../../directives/infinite-scroll/index';\nimport { TagInputModule } from '../tag-input/index';\nimport { TypeaheadModule } from '../typeahead/index';\nimport { SelectComponent } from './select.component';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nexport class SelectModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        CommonModule,\n        FormsModule,\n        InfiniteScrollModule,\n        TagInputModule,\n        TypeaheadModule\n    ],\n    exports: [SelectComponent],\n    declarations: [SelectComponent]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction SelectModule_tsickle_Closure_declarations() {\n/** @type {?} */\nSelectModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSelectModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { SearchBuilderComponent } from './search-builder.component';\nimport { SearchBuilderGroupComponent } from './search-builder-group/search-builder-group.component';\nimport { SearchTextComponent } from './search-components/text/text.component';\nimport { SearchDateComponent } from './search-components/date/date.component';\nimport { SearchBuilderOutletDirective } from './search-builder-outlet/search-builder-outlet.directive';\nimport { BaseSearchComponent } from './search-components/base-search.component';\nimport { DateTimePickerModule } from '../date-time-picker/date-time-picker.module';\nimport { PopoverModule } from 'ngx-bootstrap/popover';\nimport { SearchDateRangeComponent } from './search-components/date-range/date-range.component';\nimport { SearchSelectComponent } from './search-components/select/select.component';\nimport { SelectModule } from '../select/index';\nexport class SearchBuilderModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  imports: [\n    CommonModule,\n    FormsModule,\n    DateTimePickerModule,\n    PopoverModule.forRoot(),\n    SelectModule\n  ],\n  exports: [\n    SearchBuilderComponent,\n    SearchBuilderGroupComponent,\n    BaseSearchComponent\n  ],\n  declarations: [\n    SearchBuilderComponent,\n    SearchBuilderGroupComponent,\n    SearchTextComponent,\n    SearchDateComponent,\n    SearchDateRangeComponent,\n    SearchBuilderOutletDirective,\n    SearchSelectComponent,\n    BaseSearchComponent\n  ],\n  entryComponents: [\n    SearchTextComponent,\n    SearchDateComponent,\n    SearchDateRangeComponent,\n    SearchSelectComponent\n  ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction SearchBuilderModule_tsickle_Closure_declarations() {\n/** @type {?} */\nSearchBuilderModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSearchBuilderModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Input, EventEmitter, Output, OnInit, ElementRef, ViewChild, HostListener, AfterViewInit, OnDestroy, DoCheck, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { Subscription } from 'rxjs/Subscription';\nimport'rxjs/add/observable/fromEvent';\nimport'rxjs/add/operator/switchMap';\nimport'rxjs/add/operator/takeUntil';\nimport { ColorService } from '../../services/color/index';\nexport class SliderComponent implements OnInit, AfterViewInit, DoCheck, OnDestroy {\n\n     value: SliderValue | number = 0;\n     options: SliderOptions;\n     valueChange: EventEmitter<SliderValue | number> = new EventEmitter<SliderValue | number>();\n\n     lowerThumb: ElementRef;\n     lowerTooltip: ElementRef;\n     upperThumb: ElementRef;\n     upperTooltip: ElementRef;\n     track: ElementRef;\nprivate _value: SliderValue | number;\n\n    // expose enums to Angular view\n    sliderType = SliderType;\n    sliderStyle = SliderStyle;\n    sliderSize = SliderSize;\n    sliderThumb = SliderThumb;\n    sliderTickType = SliderTickType;\n    sliderThumbEvent = SliderThumbEvent;\n\n    tracks = {\n        lower: {\n            size: 0,\n            color: ''\n        },\n        middle: {\n            size: 0,\n            color: ''\n        },\n        upper: {\n            size: 0,\n            color: ''\n        }\n    };\n\n    tooltips = {\n        lower: {\n            visible: false,\n            position: 0,\n            label: ''\n        },\n        upper: {\n            visible: false,\n            position: 0,\n            label: ''\n        }\n    };\n\n    thumbs = {\n        lower: {\n            hover: false,\n            drag: false,\n            position: 0,\n            order: 100,\n            value: /** @type {?} */(( null as number))\n        },\n        upper: {\n            hover: false,\n            drag: false,\n            position: 0,\n            order: 101,\n            value: /** @type {?} */(( null as number))\n        }\n    };\n\n    // store all the ticks to display\n    ticks: SliderTick[] = [];\n    defaultOptions: SliderOptions;\nprivate _lowerThumbDown: Observable<MouseEvent>;\nprivate _upperThumbDown: Observable<MouseEvent>;\nprivate _mouseMove: Observable<MouseEvent> = Observable.fromEvent(document, 'mousemove');\nprivate _mouseUp: Observable<MouseEvent> = Observable.fromEvent(document, 'mouseup');\nprivate _lowerDrag: Subscription;\nprivate _upperDrag: Subscription;\n/**\n * @param {?} colorService\n * @param {?} _changeDetectorRef\n */\nconstructor(colorService: ColorService,\nprivate _changeDetectorRef: ChangeDetectorRef) {\n\n        // setup default options\n        this.defaultOptions = {\n            type: SliderType.Value,\n            handles: {\n                style: SliderStyle.Button,\n                callout: {\n                    trigger: SliderCalloutTrigger.None,\n                    background: colorService.getColor('grey2').toHex(),\n                    color: '#fff',\n                    formatter: (value: number): string | number => value\n                }\n            },\n            track: {\n                height: SliderSize.Wide,\n                min: 0,\n                max: 100,\n                ticks: {\n                    snap: SliderSnap.None,\n                    major: {\n                        show: true,\n                        steps: 10,\n                        labels: true,\n                        formatter: (value: number): string | number => value\n                    },\n                    minor: {\n                        show: true,\n                        steps: 5,\n                        labels: false,\n                        formatter: (value: number): string | number => value\n                    }\n                },\n                colors: {\n                    lower: colorService.getColor('grey6').toHex(),\n                    range: colorService.getColor('accent').setAlpha(0.75).toRgba(),\n                    higher: colorService.getColor('grey6').toHex()\n                }\n            }\n        };\n    }\n/**\n * @return {?}\n */\nngOnInit() {\n\n        // set up event observables\n        this.initObservables();\n\n        this.updateOptions();\n        this.updateValues();\n\n        this.setThumbState(SliderThumb.Lower, false, false);\n        this.setThumbState(SliderThumb.Upper, false, false);\n\n        // emit the initial value\n        this.valueChange.next(this.clone(this.value));\n    }\n/**\n * @return {?}\n */\nngDoCheck() {\n\n        if (this.detectValueChange(this.value, this._value)) {\n            this.updateValues();\n            this._value = this.clone(this.value);\n        }\n    }\n/**\n * @return {?}\n */\nngAfterViewInit() {\n        // persistent tooltips will need positioned correctly at this stage\n        setTimeout(() => {\n            this.updateTooltipPosition(SliderThumb.Lower);\n            this.updateTooltipPosition(SliderThumb.Upper);\n\n            // mark as dirty\n            this._changeDetectorRef.markForCheck();\n        });\n    }\n/**\n * @return {?}\n */\nngOnDestroy() {\n        this._lowerDrag.unsubscribe();\n        this._upperDrag.unsubscribe();\n    }\n/**\n * @param {?} thumb\n * @return {?}\n */\ngetFormattedValue(thumb: SliderThumb): string | number {\n        return this.options.handles.callout.formatter(this.getThumbState(thumb).value);\n    }\n/**\n * @return {?}\n */\nprivate initObservables(): void {\n\n        // when a user begins to drag lower thumb - subscribe to mouse move events until the mouse is lifted\n        this._lowerThumbDown = Observable.fromEvent(this.lowerThumb.nativeElement, 'mousedown');\n\n        this._lowerDrag = this._lowerThumbDown.switchMap(event => {\n            event.preventDefault();\n            return this._mouseMove.takeUntil(this._mouseUp);\n        }).subscribe(event => {\n            event.preventDefault();\n            this.updateThumbPosition(event, SliderThumb.Lower);\n        });\n\n        // when a user begins to drag upper thumb - subscribe to mouse move events until the mouse is lifted\n        this._upperThumbDown = Observable.fromEvent(this.upperThumb.nativeElement, 'mousedown');\n        this._upperDrag = this._upperThumbDown.switchMap(event => {\n            event.preventDefault();\n            return this._mouseMove.takeUntil(this._mouseUp);\n        }).subscribe(event => {\n            event.preventDefault();\n            this.updateThumbPosition(event, SliderThumb.Upper);\n        });\n    }\n/**\n * @param {?} thumb\n * @return {?}\n */\nprivate getThumbState(thumb: SliderThumb) {\n        return thumb === SliderThumb.Lower ? this.thumbs.lower : this.thumbs.upper;\n    }\n/**\n * @param {?} thumb\n * @param {?} hover\n * @param {?} drag\n * @return {?}\n */\nprivate setThumbState(thumb: SliderThumb, hover: boolean, drag: boolean) {\n        if (thumb === SliderThumb.Lower) {\n            this.thumbs.lower.hover = hover;\n            this.thumbs.lower.drag = drag;\n        } else {\n            this.thumbs.upper.hover = hover;\n            this.thumbs.upper.drag = drag;\n        }\n\n        // update the visibility of the tooltips\n        this.updateTooltips(thumb);\n    }\n/**\n * @return {?}\n */\nprivate onDragEnd() {\n        // update thumb state here as we are not dragging any more\n        this.thumbEvent(SliderThumb.Lower, SliderThumbEvent.DragEnd);\n        this.thumbEvent(SliderThumb.Upper, SliderThumbEvent.DragEnd);\n    }\n/**\n * @param {?} thumb\n * @param {?} event\n * @return {?}\n */\nthumbEvent(thumb: SliderThumb, event: SliderThumbEvent): void {\n\n        // get the current thumb state\n        let /** @type {?} */ state = this.getThumbState(thumb);\n\n        // update based upon event\n        switch (event) {\n\n            case SliderThumbEvent.DragStart:\n                state.drag = true;\n                break;\n\n            case SliderThumbEvent.DragEnd:\n                state.drag = false;\n                break;\n\n            case SliderThumbEvent.MouseOver:\n                state.hover = true;\n                break;\n\n            case SliderThumbEvent.MouseLeave:\n                state.hover = false;\n                break;\n\n            case SliderThumbEvent.None:\n                state.drag = false;\n                state.hover = false;\n                break;\n        }\n\n        // update the thumb state\n        this.setThumbState(thumb, state.hover, state.drag);\n    }\n/**\n * @param {?} thumb\n * @return {?}\n */\nprivate updateTooltips(thumb: SliderThumb): void {\n\n        let /** @type {?} */ visible = false;\n        let /** @type {?} */ state = this.getThumbState(thumb);\n\n        switch (this.options.handles.callout.trigger) {\n\n            case SliderCalloutTrigger.Persistent:\n                visible = true;\n                break;\n\n            case SliderCalloutTrigger.Drag:\n                visible = state.drag;\n                break;\n\n            case SliderCalloutTrigger.Hover:\n                visible = state.hover || state.drag;\n                break;\n        }\n\n        // update the state for the corresponding thumb\n        this.getTooltip(thumb).visible = visible;\n\n        // update the tooltip text\n        this.updateTooltipText(thumb);\n\n        // update the tooltip positions\n        this.updateTooltipPosition(thumb);\n    }\n/**\n * @param {?} thumb\n * @return {?}\n */\nprivate updateTooltipText(thumb: SliderThumb) {\n\n        // get the thumb value\n        let /** @type {?} */ state = this.getThumbState(thumb);\n        let /** @type {?} */ tooltip = this.getTooltip(thumb);\n\n        // store the formatted label\n        tooltip.label = this.getFormattedValue(thumb).toString();\n    }\n/**\n * @param {?} thumb\n * @return {?}\n */\nprivate getThumbElement(thumb: SliderThumb): ElementRef {\n        return thumb === SliderThumb.Lower ? this.lowerThumb : this.upperThumb;\n    }\n/**\n * @param {?} thumb\n * @return {?}\n */\nprivate getTooltipElement(thumb: SliderThumb): ElementRef {\n        return thumb === SliderThumb.Lower ? this.lowerTooltip : this.upperTooltip;\n    }\n/**\n * @param {?} thumb\n * @return {?}\n */\nprivate getTooltip(thumb: SliderThumb) {\n        return thumb === SliderThumb.Lower ? this.tooltips.lower : this.tooltips.upper;\n    }\n/**\n * @param {?} thumb\n * @return {?}\n */\nprivate updateTooltipPosition(thumb: SliderThumb) {\n\n        let /** @type {?} */ tooltip = this.getTooltip(thumb);\n\n        // if tooltip is not visible then stop here\n        if (tooltip.visible === false) {\n            return;\n        }\n\n        let /** @type {?} */ tooltipElement = this.getTooltipElement(thumb);\n\n        // get the element widths\n        let /** @type {?} */ thumbWidth: number;\n\n        if (this.options.handles.style === SliderStyle.Button) {\n            thumbWidth = this.options.track.height === SliderSize.Narrow ? 16 : 24;\n        } else {\n            thumbWidth = 2;\n        }\n\n        let /** @type {?} */ tooltipWidth = tooltipElement.nativeElement.offsetWidth;\n\n        // calculate the tooltips new position\n        let /** @type {?} */ tooltipPosition = Math.ceil((tooltipWidth - thumbWidth) / 2);\n\n        // update tooltip position\n        tooltip.position = -tooltipPosition;\n    }\n/**\n * @param {?} value\n * @param {?} min\n * @param {?} max\n * @return {?}\n */\nprivate clamp(value: number, min: number, max: number): number {\n        return Math.min(Math.max(value, min), max);\n    }\n/**\n * @param {?} event\n * @param {?} thumb\n * @return {?}\n */\nprivate updateThumbPosition(event: MouseEvent | TouchEvent, thumb: SliderThumb): void {\n\n        // get event position - either mouse or touch\n        let /** @type {?} */ eventPosition = event instanceof MouseEvent ? event.clientX : event.touches && event.touches.length > 0 ? event.touches[0].clientX : null;\n\n        // if event position is null do nothing\n        if (eventPosition === null) {\n            return;\n        }\n\n        // get mouse position\n        let /** @type {?} */ mouseX = window.pageXOffset + eventPosition;\n\n        // get track size and position\n        let /** @type {?} */ trackBounds = this.track.nativeElement.getBoundingClientRect();\n\n        // restrict the value within the range size\n        let /** @type {?} */ position = this.clamp(mouseX - trackBounds.left, 0, trackBounds.width);\n\n        // get fraction representation of location within the track\n        let /** @type {?} */ fraction = (position / trackBounds.width);\n\n        // convert to value within the range\n        let /** @type {?} */ value = ((this.options.track.max - this.options.track.min) * fraction) + this.options.track.min;\n\n        // ensure value is valid\n        value = this.validateValue(thumb, value);\n\n        // snap to a tick if required\n        value = this.snapToTick(value, thumb);\n\n        // update the value accordingly\n        this.setThumbValue(thumb, value);\n\n        this.updateOrder(thumb);\n        this.updateValues();\n\n        // update tooltip text & position\n        this.updateTooltipText(thumb);\n        this.updateTooltipPosition(thumb);\n\n        // mark as dirty for change detection\n        this._changeDetectorRef.markForCheck();\n    }\n/**\n * @param {?} thumb\n * @return {?}\n */\nprivate updateOrder(thumb: SliderThumb): void {\n\n        let /** @type {?} */ lower = thumb === SliderThumb.Lower ? 101 : 100;\n        let /** @type {?} */ upper = thumb === SliderThumb.Lower ? 100 : 101;\n\n        // The most recently used thumb should be above\n        this.thumbs.lower.order = lower;\n        this.thumbs.upper.order = upper;\n    }\n/**\n * @param {?} value\n * @param {?} thumb\n * @return {?}\n */\nprivate snapToTick(value: number, thumb: SliderThumb): number {\n\n        // get the snap target\n        let /** @type {?} */ snapTarget: SliderSnap = this.options.track.ticks.snap;\n\n        // if snap target is none then return original value\n        if (snapTarget === SliderSnap.None) {\n            return value;\n        }\n\n        // get filtered ticks\n        let /** @type {?} */ ticks: SliderTick[];\n\n        switch (snapTarget) {\n\n            case SliderSnap.Minor:\n                ticks = this.ticks.filter(tick => tick.type === SliderTickType.Minor);\n                break;\n\n            case SliderSnap.Major:\n                ticks = this.ticks.filter(tick => tick.type === SliderTickType.Major);\n                break;\n\n            default:\n                ticks = this.ticks.slice(0);\n        }\n\n        // get the track limit\n        let /** @type {?} */ lowerLimit = this.options.track.min;\n        let /** @type {?} */ upperLimit = this.options.track.max;\n\n        if (this.options.type === SliderType.Range && thumb === SliderThumb.Lower) {\n            upperLimit = this.thumbs.upper.value;\n        }\n\n        if (this.options.type === SliderType.Range && thumb === SliderThumb.Upper) {\n            lowerLimit = this.thumbs.lower.value;\n        }\n\n        // Find the closest tick to the current position\n        let /** @type {?} */ closest = ticks.filter(tick => tick.value >= lowerLimit && tick.value <= upperLimit)\n            .reduceRight((previous, current) => {\n\n                let /** @type {?} */ previousDistance = Math.max(previous.value, value) - Math.min(previous.value, value);\n                let /** @type {?} */ currentDistance = Math.max(current.value, value) - Math.min(current.value, value);\n\n                return previousDistance < currentDistance ? previous : current;\n            });\n\n        return closest.value;\n    }\n/**\n * @param {?} thumb\n * @param {?} value\n * @return {?}\n */\nprivate validateValue(thumb: SliderThumb, value: number): number {\n\n        // if slider is not a range value is always valid providing it is within the chart min and max values\n        if (this.options.type === SliderType.Value) {\n            return Math.max(Math.min(value, this.options.track.max), this.options.track.min);\n        }\n\n        // check if value is with chart ranges\n        if (value > this.options.track.max) {\n            return thumb === SliderThumb.Lower ? Math.min(this.options.track.max, this.thumbs.upper.value) : this.options.track.max;\n        }\n\n        if (value < this.options.track.min) {\n            return thumb === SliderThumb.Upper ? Math.max(this.options.track.min, this.thumbs.lower.value) : this.options.track.min;\n        }\n\n        // otherwise we need to check to make sure lower thumb cannot go above higher and vice versa\n        if (thumb === SliderThumb.Lower) {\n\n            if (this.thumbs.upper.value === null) {\n                return value;\n            }\n\n            return value <= this.thumbs.upper.value ? value : this.thumbs.upper.value;\n        }\n\n        if (thumb === SliderThumb.Upper) {\n\n            if (this.thumbs.lower.value === null) {\n                return value;\n            }\n\n            return value >= this.thumbs.lower.value ? value : this.thumbs.lower.value;\n        }\n    }\n/**\n * @return {?}\n */\nprivate updateOptions() {\n\n        // add in the default options that user hasn't specified\n        this.options = this.deepMerge(this.options || {}, this.defaultOptions);\n\n        this.updateTrackColors();\n        this.updateTicks();\n        this.updateValues();\n    }\n/**\n * @return {?}\n */\nprivate updateValues() {\n\n        if (this.value === undefined || this.value === null) {\n            this.value = 0;\n        }\n\n        let /** @type {?} */ lowerValue = typeof this.value === 'number' ? this.value : this.value.low;\n        let /** @type {?} */ upperValue = typeof this.value === 'number' ? this.value : this.value.high;\n\n        // validate values\n        lowerValue = this.validateValue(SliderThumb.Lower, Number(lowerValue.toFixed(4)));\n        upperValue = this.validateValue(SliderThumb.Upper, Number(upperValue.toFixed(4)));\n\n        // calculate the positions as percentages\n        let /** @type {?} */ lowerPosition = (((lowerValue - this.options.track.min) / (this.options.track.max - this.options.track.min)) * 100);\n        let /** @type {?} */ upperPosition = (((upperValue - this.options.track.min) / (this.options.track.max - this.options.track.min)) * 100);\n\n        // update thumb positions\n        this.thumbs.lower.position = lowerPosition;\n        this.thumbs.upper.position = upperPosition;\n\n        // calculate the track sizes\n        this.tracks.lower.size = lowerPosition;\n        this.tracks.middle.size = upperPosition - lowerPosition;\n        this.tracks.upper.size = this.options.type === SliderType.Value ? 100 - lowerPosition : 100 - upperPosition;\n\n        // update the value input\n        this.setValue(lowerValue, upperValue);\n    }\n/**\n * @param {?} low\n * @param {?=} high\n * @return {?}\n */\nprivate setValue(low: number, high?: number): void {\n\n        this.thumbs.lower.value = low;\n        this.thumbs.upper.value = high;\n\n        let /** @type {?} */ previousValue = this.clone(this._value);\n\n        this.value = this.options.type === SliderType.Value ? low : { low: low, high: high };\n\n        // call the event emitter if changes occured\n        if (this.detectValueChange(this.value, previousValue)) {\n            this.valueChange.emit(this.clone(this.value));\n\n            this.updateTooltipText(SliderThumb.Lower);\n            this.updateTooltipText(SliderThumb.Upper);\n        } else {\n            this.valueChange.emit(this.clone(this.value));\n        }\n    }\n/**\n * @param {?} thumb\n * @param {?} value\n * @return {?}\n */\nprivate setThumbValue(thumb: SliderThumb, value: number) {\n\n        // update the thumb value\n        this.getThumbState(thumb).value = value;\n\n        // forward these changes to the value\n        this.setValue(this.thumbs.lower.value, this.thumbs.upper.value);\n    }\n/**\n * @return {?}\n */\nprivate updateTicks() {\n\n        // get tick options\n        let /** @type {?} */ majorOptions = this.options.track.ticks.major;\n        let /** @type {?} */ minorOptions = this.options.track.ticks.minor;\n\n        // check if we should show ticks\n        if (majorOptions.show === false && minorOptions.show === false) {\n            this.ticks = [];\n        }\n\n        // create ticks for both major and minor\n        let /** @type {?} */ majorTicks = this.getTicks(majorOptions, SliderTickType.Major);\n        let /** @type {?} */ minorTicks = this.getTicks(minorOptions, SliderTickType.Minor);\n\n        // remove any minor ticks that are on a major interval\n        this.ticks = this.unionTicks(majorTicks, minorTicks);\n    }\n/**\n * @return {?}\n */\nprivate updateTrackColors() {\n\n        // get colors for each part of the track\n        let /** @type {?} */ lower = this.options.track.colors.lower;\n        let /** @type {?} */ range = this.options.track.colors.range;\n        let /** @type {?} */ higher = this.options.track.colors.higher;\n\n        // update the controller value\n        this.tracks.lower.color = typeof lower === 'string' ? lower : `linear-gradient(to right, ${lower.join(', ')})`;\n        this.tracks.middle.color = typeof range === 'string' ? range : `linear-gradient(to right, ${range.join(', ')})`;\n        this.tracks.upper.color = typeof higher === 'string' ? higher : `linear-gradient(to right, ${higher.join(', ')})`;\n    }\n/**\n * @param {?} steps\n * @return {?}\n */\nprivate getSteps(steps: number | number[]): number[] {\n\n        // if they are already an array just return it\n        if (steps instanceof Array) {\n            return steps;\n        }\n\n        let /** @type {?} */ output: number[] = [];\n\n        // otherwise calculate the steps\n        for (let /** @type {?} */ idx = this.options.track.min; idx <= this.options.track.max; idx += steps) {\n            output.push(idx);\n        }\n\n        return output;\n    }\n/**\n * @param {?} options\n * @param {?} type\n * @return {?}\n */\nprivate getTicks(options: SliderTickOptions, type: SliderTickType): SliderTick[] {\n\n        // create an array to store the ticks and step points\n        let /** @type {?} */ steps = this.getSteps(options.steps);\n\n        // get some chart options\n        let /** @type {?} */ min = this.options.track.min;\n        let /** @type {?} */ max = this.options.track.max;\n\n        // convert each step to a slider tick and remove invalid ticks\n        return steps.map(step => {\n            return {\n                showTicks: options.show,\n                showLabels: options.labels,\n                type: type,\n                position: ((step - min) / (max - min)) * 100,\n                value: step,\n                label: options.formatter(step)\n            };\n        }).filter(tick => tick.position >= 0 && tick.position <= 100);\n    }\n/**\n * @param {?} majorTicks\n * @param {?} minorTicks\n * @return {?}\n */\nprivate unionTicks(majorTicks: SliderTick[], minorTicks: SliderTick[]): SliderTick[] {\n\n        // get all ticks combined removing any minor ticks with the same value as major ticks\n        return majorTicks.concat(minorTicks)\n            .filter((tick, index, array) => tick.type === SliderTickType.Major || !array.find(tk => tk.type === SliderTickType.Major && tk.position === tick.position))\n            .sort((t1, t2) => t1.value - t2.value);\n    }\n/**\n * @param {?} destination\n * @param {?} source\n * @return {?}\n */\nprivate deepMerge(destination: any, source: any) {\n\n        // loop though all of the properties in the source object\n        for (let /** @type {?} */ prop in source) {\n\n            // check if the destination object has the property\n            if (!destination.hasOwnProperty(prop)) {\n                // copy the property across\n                destination[prop] = source[prop];\n                continue;\n            }\n\n            // if the property exists and is not an object then skip\n            if (typeof destination[prop] !== 'object') {\n                continue;\n            }\n\n            // check if property is an array\n            if (destination[prop] instanceof Array) {\n                continue;\n            }\n\n            // if it is an object then perform a recursive check\n            destination[prop] = this.deepMerge(destination[prop], source[prop]);\n        }\n\n        return destination;\n    }\n/**\n * @param {?} value1\n * @param {?} value2\n * @return {?}\n */\nprivate detectValueChange(value1: number | SliderValue, value2: number | SliderValue): boolean {\n\n        // compare two slider values\n        if (this.isSliderValue(value1) && this.isSliderValue(value2)) {\n            \n            // references to the objects in the correct types\n            const /** @type {?} */ obj1 = /** @type {?} */(( value1 as SliderValue));\n            const /** @type {?} */ obj2 = /** @type {?} */(( value2 as SliderValue));\n            \n            return obj1.low !== obj2.low || obj1.high !== obj2.high;\n        }\n\n        // if not a slider value - should be number of nullable type - compare normally\n        return value1 !== value2;\n    }\n/**\n * Determines whether or not an object conforms to the\n * SliderValue interface.\n * @param {?} value - The object to check - this must be type any\n * @return {?}\n */\nprivate isSliderValue(value: any): boolean {\n\n        // check if is an object\n        if (typeof value !== 'object') {\n            return false;\n        }\n\n        // next check if it contains the necessary properties\n        return 'low' in value && 'high' in value;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nprivate clone(value: number | SliderValue): number | SliderValue {\n\n        // if it is not an object simply return the value\n        if (typeof value !== 'object') {\n            return value;\n        }\n\n        // create a new object from the existing one\n        const /** @type {?} */ instance =  Object.assign({}, value);\n\n        // delete remove the value from the old object\n        value = undefined;\n\n        // return the new instance of the object\n        return instance;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-slider',\n    template: `\n      <div class=\"track\" #track [class.narrow]=\"options.track.height === sliderSize.Narrow\" [class.wide]=\"options.track.height === sliderSize.Wide\" [class.range]=\"options.type === sliderType.Range\">\n\n          <!-- Section Beneath Lower Thumb -->\n          <div class=\"track-section track-lower\" [style.flex-grow]=\"tracks.lower.size\" [style.background]=\"tracks.lower.color\"></div>\n\n          <!-- Lower Thumb Button / Line -->\n          <div class=\"thumb lower\" #lowerThumb [style.left.%]=\"thumbs.lower.position\" [class.active]=\"thumbs.lower.drag\" [style.z-index]=\"thumbs.lower.order\" [class.button]=\"options.handles.style === sliderStyle.Button\"\n              [class.line]=\"options.handles.style === sliderStyle.Line\" [class.narrow]=\"options.track.height === sliderSize.Narrow\"\n              [class.wide]=\"options.track.height === sliderSize.Wide\" (mouseenter)=\"thumbEvent(sliderThumb.Lower, sliderThumbEvent.MouseOver)\"\n              (mouseleave)=\"thumbEvent(sliderThumb.Lower, sliderThumbEvent.MouseLeave)\" (mousedown)=\"thumbEvent(sliderThumb.Lower, sliderThumbEvent.DragStart)\">\n\n              <!-- Lower Thumb Callout -->\n              <div class=\"tooltip top tooltip-lower\" #lowerTooltip [style.opacity]=\"tooltips.lower.visible ? 1 : 0\" [style.left.px]=\"tooltips.lower.position\">\n                  <div class=\"tooltip-arrow\" [style.border-top-color]=\"options.handles.callout.background\"></div>\n                  <div class=\"tooltip-inner\" [style.background-color]=\"options.handles.callout.background\" [style.color]=\"options.handles.callout.color\">\n                      {{ tooltips.lower.label }}\n                  </div>\n              </div>\n\n          </div>\n\n          <!-- Section of Track Between Lower and Upper Thumbs -->\n          <div class=\"track-section track-range\" *ngIf=\"options.type === sliderType.Range\" [style.flex-grow]=\"tracks.middle.size\" [style.background]=\"tracks.middle.color\">\n          </div>\n\n          <!-- Upper Thumb Button / Line -->\n          <div class=\"thumb upper\" #upperThumb [hidden]=\"options.type !== sliderType.Range\" [class.active]=\"thumbs.upper.drag\" [style.left.%]=\"thumbs.upper.position\" [style.z-index]=\"thumbs.upper.order\"\n              [class.button]=\"options.handles.style === sliderStyle.Button\" [class.line]=\"options.handles.style === sliderStyle.Line\"\n              [class.narrow]=\"options.track.height === sliderSize.Narrow\" [class.wide]=\"options.track.height === sliderSize.Wide\" (mouseenter)=\"thumbEvent(sliderThumb.Upper, sliderThumbEvent.MouseOver)\"\n              (mouseleave)=\"thumbEvent(sliderThumb.Upper, sliderThumbEvent.MouseLeave)\" (mousedown)=\"thumbEvent(sliderThumb.Upper, sliderThumbEvent.DragStart)\">\n\n              <!-- Upper Thumb Callout -->\n              <div class=\"tooltip top tooltip-upper\" #upperTooltip [style.opacity]=\"tooltips.upper.visible ? 1 : 0\" [style.left.px]=\"tooltips.upper.position\">\n                  <div class=\"tooltip-arrow\" [style.border-top-color]=\"options.handles.callout.background\"></div>\n                  <div class=\"tooltip-inner\" *ngIf=\"options.type === sliderType.Range\" [style.background-color]=\"options.handles.callout.background\"\n                      [style.color]=\"options.handles.callout.color\">\n                      {{ tooltips.upper.label }}\n                  </div>\n              </div>\n          </div>\n\n          <!-- Section of Track Abover Upper Thumb -->\n          <div class=\"track-section track-higher\" [style.flex-grow]=\"tracks.upper.size\" [style.background]=\"tracks.upper.color\"></div>\n\n      </div>\n\n      <!-- Chart Ticks and Tick Labels -->\n      <div class=\"tick-container\" *ngIf=\"options.track.ticks.major.show || options.track.ticks.minor.show\" [class.show-labels]=\"options.track.ticks.major.labels || options.track.ticks.minor.labels\">\n\n          <div class=\"tick\" *ngFor=\"let tick of ticks\" [class.major]=\"tick.type === sliderTickType.Major\" [class.minor]=\"tick.type === sliderTickType.Minor\"\n              [style.left.%]=\"tick.position\" [hidden]=\"!tick.showTicks\">\n              <div class=\"tick-indicator\"></div>\n              <div class=\"tick-label\" [hidden]=\"!tick.showLabels\">{{ tick.label }}</div>\n          </div>\n      </div>\n    `,\n    changeDetection: ChangeDetectionStrategy.OnPush\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ColorService, },\n{type: ChangeDetectorRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'value': [{ type: Input },],\n'options': [{ type: Input },],\n'valueChange': [{ type: Output },],\n'lowerThumb': [{ type: ViewChild, args: ['lowerThumb', ] },],\n'lowerTooltip': [{ type: ViewChild, args: ['lowerTooltip', ] },],\n'upperThumb': [{ type: ViewChild, args: ['upperThumb', ] },],\n'upperTooltip': [{ type: ViewChild, args: ['upperTooltip', ] },],\n'track': [{ type: ViewChild, args: ['track', ] },],\n'onDragEnd': [{ type: HostListener, args: ['document:mouseup', [], ] },],\n};\n}\n\nfunction SliderComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nSliderComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSliderComponent.ctorParameters;\n/** @type {?} */\nSliderComponent.propDecorators;\n/** @type {?} */\nSliderComponent.prototype.value;\n/** @type {?} */\nSliderComponent.prototype.options;\n/** @type {?} */\nSliderComponent.prototype.valueChange;\n/** @type {?} */\nSliderComponent.prototype.lowerThumb;\n/** @type {?} */\nSliderComponent.prototype.lowerTooltip;\n/** @type {?} */\nSliderComponent.prototype.upperThumb;\n/** @type {?} */\nSliderComponent.prototype.upperTooltip;\n/** @type {?} */\nSliderComponent.prototype.track;\n/** @type {?} */\nSliderComponent.prototype._value;\n/** @type {?} */\nSliderComponent.prototype.sliderType;\n/** @type {?} */\nSliderComponent.prototype.sliderStyle;\n/** @type {?} */\nSliderComponent.prototype.sliderSize;\n/** @type {?} */\nSliderComponent.prototype.sliderThumb;\n/** @type {?} */\nSliderComponent.prototype.sliderTickType;\n/** @type {?} */\nSliderComponent.prototype.sliderThumbEvent;\n/** @type {?} */\nSliderComponent.prototype.tracks;\n/** @type {?} */\nSliderComponent.prototype.tooltips;\n/** @type {?} */\nSliderComponent.prototype.thumbs;\n/** @type {?} */\nSliderComponent.prototype.ticks;\n/** @type {?} */\nSliderComponent.prototype.defaultOptions;\n/** @type {?} */\nSliderComponent.prototype._lowerThumbDown;\n/** @type {?} */\nSliderComponent.prototype._upperThumbDown;\n/** @type {?} */\nSliderComponent.prototype._mouseMove;\n/** @type {?} */\nSliderComponent.prototype._mouseUp;\n/** @type {?} */\nSliderComponent.prototype._lowerDrag;\n/** @type {?} */\nSliderComponent.prototype._upperDrag;\n/** @type {?} */\nSliderComponent.prototype._changeDetectorRef;\n}\n\nexport type SliderType = number;\nexport let SliderType: any = {};\nSliderType.Value = 0;\nSliderType.Range = 1;\nSliderType[SliderType.Value] = \"Value\";\nSliderType[SliderType.Range] = \"Range\";\n\nexport type SliderStyle = number;\nexport let SliderStyle: any = {};\nSliderStyle.Button = 0;\nSliderStyle.Line = 1;\nSliderStyle[SliderStyle.Button] = \"Button\";\nSliderStyle[SliderStyle.Line] = \"Line\";\n\nexport type SliderSize = number;\nexport let SliderSize: any = {};\nSliderSize.Narrow = 0;\nSliderSize.Wide = 1;\nSliderSize[SliderSize.Narrow] = \"Narrow\";\nSliderSize[SliderSize.Wide] = \"Wide\";\n\nexport type SliderCalloutTrigger = number;\nexport let SliderCalloutTrigger: any = {};\nSliderCalloutTrigger.None = 0;\nSliderCalloutTrigger.Hover = 1;\nSliderCalloutTrigger.Drag = 2;\nSliderCalloutTrigger.Persistent = 3;\nSliderCalloutTrigger[SliderCalloutTrigger.None] = \"None\";\nSliderCalloutTrigger[SliderCalloutTrigger.Hover] = \"Hover\";\nSliderCalloutTrigger[SliderCalloutTrigger.Drag] = \"Drag\";\nSliderCalloutTrigger[SliderCalloutTrigger.Persistent] = \"Persistent\";\n\n\nexport interface SliderValue {\n    low: number;\n    high: number;\n}\nexport type SliderSnap = number;\nexport let SliderSnap: any = {};\nSliderSnap.None = 0;\nSliderSnap.Minor = 1;\nSliderSnap.Major = 2;\nSliderSnap.All = 3;\nSliderSnap[SliderSnap.None] = \"None\";\nSliderSnap[SliderSnap.Minor] = \"Minor\";\nSliderSnap[SliderSnap.Major] = \"Major\";\nSliderSnap[SliderSnap.All] = \"All\";\n\nexport type SliderTickType = number;\nexport let SliderTickType: any = {};\nSliderTickType.Minor = 0;\nSliderTickType.Major = 1;\nSliderTickType[SliderTickType.Minor] = \"Minor\";\nSliderTickType[SliderTickType.Major] = \"Major\";\n\n\nexport interface SliderOptions {\n    type?: SliderType;\n    handles?: SliderHandleOptions;\n    track?: SliderTrackOptions;\n}\n\nexport interface SliderHandleOptions {\n    style?: SliderStyle;\n    callout?: SliderCallout;\n}\n\nexport interface SliderTrackOptions {\n    height?: SliderSize;\n    min?: number;\n    max?: number;\n    ticks?: SliderTicksOptions;\n    colors?: SliderTrackColors;\n}\n\nexport interface SliderTicksOptions {\n    snap?: SliderSnap;\n    major?: SliderTickOptions;\n    minor?: SliderTickOptions;\n}\n\nexport interface SliderTickOptions {\n    show?: boolean;\n    steps?: number | number[];\n    labels?: boolean;\n    formatter?: (value: number) => string | number;\n}\n\nexport interface SliderTick {\n    showTicks: boolean;\n    showLabels: boolean;\n    type: SliderTickType;\n    position: number;\n    value: number;\n    label: string | number;\n}\n\nexport interface SliderTrackColors {\n    lower?: string | string[];\n    range?: string | string[];\n    higher?: string | string[];\n}\n\nexport interface SliderCallout {\n    trigger?: SliderCalloutTrigger;\n    background?: string;\n    color?: string;\n    formatter?: (value: number) => string | number;\n}\nexport type SliderThumbEvent = number;\nexport let SliderThumbEvent: any = {};\nSliderThumbEvent.None = 0;\nSliderThumbEvent.MouseOver = 1;\nSliderThumbEvent.MouseLeave = 2;\nSliderThumbEvent.DragStart = 3;\nSliderThumbEvent.DragEnd = 4;\nSliderThumbEvent[SliderThumbEvent.None] = \"None\";\nSliderThumbEvent[SliderThumbEvent.MouseOver] = \"MouseOver\";\nSliderThumbEvent[SliderThumbEvent.MouseLeave] = \"MouseLeave\";\nSliderThumbEvent[SliderThumbEvent.DragStart] = \"DragStart\";\nSliderThumbEvent[SliderThumbEvent.DragEnd] = \"DragEnd\";\n\nexport type SliderThumb = number;\nexport let SliderThumb: any = {};\nSliderThumb.Lower = 0;\nSliderThumb.Upper = 1;\nSliderThumb[SliderThumb.Lower] = \"Lower\";\nSliderThumb[SliderThumb.Upper] = \"Upper\";\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ColorServiceModule } from '../../services/color/index';\n\nimport { SliderComponent } from './slider.component';\nexport class SliderModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        CommonModule,\n        ColorServiceModule\n    ],\n    exports: [SliderComponent],\n    declarations: [SliderComponent]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction SliderModule_tsickle_Closure_declarations() {\n/** @type {?} */\nSliderModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSliderModule.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Input } from '@angular/core';\nimport { ColorService } from '../../services/color/index';\nimport { ColorIdentifier } from '../../index';\nexport class SparkComponent {\n\n    values: number[] = [];\n\n     barHeight: number = 10;\n     inlineLabel: string;\n     topLeftLabel: string;\n     topRightLabel: string;\n     bottomLeftLabel: string;\n     bottomRightLabel: string;\n     tooltip: string;\nprivate _trackColor: string;\nprivate _theme: ColorIdentifier = 'primary';\nprivate _barColor: string | string[] = [];\n/**\n * @param {?} value\n * @return {?}\n */\nset theme(value: string) {\n        this._theme = this._colorService.resolveColorName(value);\n    }\n/**\n * @return {?}\n */\nget theme(): string {\n        return this._theme;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset trackColor(value: string) {\n        this._trackColor = this._colorService.resolve(value);\n    }\n/**\n * @return {?}\n */\nget trackColor(): string {\n        return this._trackColor;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset barColor(value: string | string[]) {\n\n        if (Array.isArray(value)) {\n            this._barColor = value.map(color => this._colorService.resolve(color));\n        } else {\n            this._barColor = [this._colorService.resolve(value)];\n        }\n    }\n/**\n * @return {?}\n */\nget barColor(): string | string[] {\n        return this._barColor;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset value(value: number | number[]) {\n\n        // ensure 'value' is an array at this point\n        const /** @type {?} */ values = Array.isArray(value) ? value : [value];\n\n        // get the total value of all lines\n        let /** @type {?} */ total = Math.max(values.reduce((previous, current) => previous + current, 0), 100);\n\n        // figure out the percentages for each spark line\n        this.values = values.map(val => (val / total) * 100);\n    }\n/**\n * @return {?}\n */\nget value() {\n        return this.values;\n    }\n/**\n * @param {?} _colorService\n */\nconstructor(private _colorService: ColorService) { }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-spark',\n    template: `\n      <!-- Inline Spark Chart -->\n      <div *ngIf=\"inlineLabel\" class=\"ux-spark-inline-label-container\">\n\n          <div class=\"ux-spark-inline-label-left\" [innerHtml]=\"inlineLabel\"></div>\n\n          <div class=\"ux-spark-line\">\n\n              <div class=\"ux-spark-top-container\" *ngIf=\"topLeftLabel || topRightLabel\">\n                  <div class=\"ux-spark-label-top-left\" *ngIf=\"topLeftLabel\" [innerHtml]=\"topLeftLabel\"></div>\n                  <div class=\"ux-spark-label-top-right\" *ngIf=\"topRightLabel\" [innerHtml]=\"topRightLabel\"></div>\n              </div>\n\n              <div class=\"ux-spark ux-inline ux-spark-theme-{{theme}}\" [style.height.px]=\"barHeight\" [style.backgroundColor]=\"trackColor\" [tooltip]=\"tooltip\">\n                  <div class=\"ux-spark-bar\" *ngFor=\"let line of values; let idx = index;\" [style.width.%]=\"line\" [style.backgroundColor]=\"barColor[idx]\"></div>\n              </div>\n\n              <div class=\"ux-spark-bottom-container\" *ngIf=\"bottomLeftLabel || bottomRightLabel\">\n                  <div class=\"ux-spark-label-bottom-left\" *ngIf=\"bottomLeftLabel\" [innerHtml]=\"bottomLeftLabel\"></div>\n                  <div class=\"ux-spark-label-bottom-right\" *ngIf=\"bottomRightLabel\" [innerHtml]=\"bottomRightLabel\"></div>\n              </div>\n\n          </div>\n      </div>\n\n      <!-- End Inline Spark Chart -->\n\n\n      <!-- Non Inline Spark Chart -->\n      <div *ngIf=\"!inlineLabel\">\n\n          <div class=\"ux-spark-top-container\" *ngIf=\"topLeftLabel || topRightLabel\">\n              <div class=\"ux-spark-label-top-left\" *ngIf=\"topLeftLabel\" [innerHtml]=\"topLeftLabel\"></div>\n              <div class=\"ux-spark-label-top-right\" *ngIf=\"topRightLabel\" [innerHtml]=\"topRightLabel\"></div>\n          </div>\n\n          <div class=\"ux-spark ux-spark-theme-{{theme}}\" [class.ux-spark-multi-value]=\"values.length > 1\" [style.height.px]=\"barHeight\" [style.backgroundColor]=\"trackColor\"\n              [tooltip]=\"tooltip\">\n              <div class=\"ux-spark-bar\" *ngFor=\"let line of value; let idx = index;\" [style.width.%]=\"line\" [style.backgroundColor]=\"barColor[idx]\"></div>\n          </div>\n\n          <div class=\"ux-spark-bottom-container\" *ngIf=\"bottomLeftLabel || bottomRightLabel\">\n              <div class=\"ux-spark-label-bottom-left\" *ngIf=\"bottomLeftLabel\" [innerHtml]=\"bottomLeftLabel\"></div>\n              <div class=\"ux-spark-label-bottom-right\" *ngIf=\"bottomRightLabel\" [innerHtml]=\"bottomRightLabel\"></div>\n          </div>\n      </div>\n\n      <!-- End Non Inline Spark Chart -->\n    `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ColorService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'barHeight': [{ type: Input },],\n'inlineLabel': [{ type: Input },],\n'topLeftLabel': [{ type: Input },],\n'topRightLabel': [{ type: Input },],\n'bottomLeftLabel': [{ type: Input },],\n'bottomRightLabel': [{ type: Input },],\n'tooltip': [{ type: Input },],\n'theme': [{ type: Input },],\n'trackColor': [{ type: Input },],\n'barColor': [{ type: Input },],\n'value': [{ type: Input },],\n};\n}\n\nfunction SparkComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nSparkComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSparkComponent.ctorParameters;\n/** @type {?} */\nSparkComponent.propDecorators;\n/** @type {?} */\nSparkComponent.prototype.values;\n/** @type {?} */\nSparkComponent.prototype.barHeight;\n/** @type {?} */\nSparkComponent.prototype.inlineLabel;\n/** @type {?} */\nSparkComponent.prototype.topLeftLabel;\n/** @type {?} */\nSparkComponent.prototype.topRightLabel;\n/** @type {?} */\nSparkComponent.prototype.bottomLeftLabel;\n/** @type {?} */\nSparkComponent.prototype.bottomRightLabel;\n/** @type {?} */\nSparkComponent.prototype.tooltip;\n/** @type {?} */\nSparkComponent.prototype._trackColor;\n/** @type {?} */\nSparkComponent.prototype._theme;\n/** @type {?} */\nSparkComponent.prototype._barColor;\n/** @type {?} */\nSparkComponent.prototype._colorService;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { SparkComponent } from './spark.component';\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\nimport { ColorServiceModule } from '../../services/color/index';\nexport class SparkModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        CommonModule,\n        ColorServiceModule,\n        TooltipModule.forRoot()\n    ],\n    exports: [SparkComponent],\n    declarations: [SparkComponent]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction SparkModule_tsickle_Closure_declarations() {\n/** @type {?} */\nSparkModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSparkModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Input, Output, forwardRef, EventEmitter } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\n\nconst /** @type {?} */ TOGGLESWITCH_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => ToggleSwitchComponent),\n    multi: true\n};\nexport class ToggleSwitchComponent implements ControlValueAccessor {\n     name: string = '';\n     disabled: boolean = false;\n     clickable: boolean = true;\n\n     valueChange: EventEmitter<any> = new EventEmitter<any>();\n/**\n * @return {?}\n */\nget value() {\n        return this._value;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset value(value: boolean) {\n        this._value = value;\n\n        // Update value output\n        this.valueChange.emit(value);\n\n        // Notify ngModel\n        this.onChangeCallback(value);\n    }\nprivate _value: boolean = false;\n\n    onTouchedCallback: () => void = () => { };\n    onChangeCallback: (_: any) => void = () => { };\n/**\n * @return {?}\n */\ntoggleChecked() {\n        if (!this.disabled && this.clickable) {\n            this.value = !this.value;\n        }\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nkeydown(event: any) {\n        // if spacebar is pressed toggle state\n        if (event.keyCode === 32) {\n            this.toggleChecked();\n            event.stopPropagation();\n            event.preventDefault();\n        }\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nwriteValue(value: any) {\n        this.value = !!value;\n    }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnChange(fn: any) {\n        this.onChangeCallback = fn;\n    }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnTouched(fn: any) {\n        this.onTouchedCallback = fn;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-toggleswitch',\n    template: `\n      <div class=\"ux-toggleswitch\" \n        tabindex=\"0\"\n        (keydown)=\"keydown($event)\"\n        [class.checked]=\"value === true\"\n        [class.disabled]=\"disabled === true\">\n\n        <span class=\"ux-toggleswitch-bg\"></span>\n  \n        <span class=\"ux-toggleswitch-nub\"></span>\n\n        <input type=\"checkbox\" \n          role=\"checkbox\"\n          [name]=\"name\" \n          [checked]=\"value === true\"\n          [disabled]=\"disabled === true\"\n          tabindex=\"-1\" />\n      </div>\n\n      <div class=\"ux-toggleswitch-content\">\n        <ng-content></ng-content>\n      </div>\n    `,\n    providers: [TOGGLESWITCH_VALUE_ACCESSOR],\n    host: {\n        '(click)': 'toggleChecked()'\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'name': [{ type: Input },],\n'disabled': [{ type: Input },],\n'clickable': [{ type: Input },],\n'valueChange': [{ type: Output },],\n'value': [{ type: Input },],\n};\n}\n\nfunction ToggleSwitchComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nToggleSwitchComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nToggleSwitchComponent.ctorParameters;\n/** @type {?} */\nToggleSwitchComponent.propDecorators;\n/** @type {?} */\nToggleSwitchComponent.prototype.name;\n/** @type {?} */\nToggleSwitchComponent.prototype.disabled;\n/** @type {?} */\nToggleSwitchComponent.prototype.clickable;\n/** @type {?} */\nToggleSwitchComponent.prototype.valueChange;\n/** @type {?} */\nToggleSwitchComponent.prototype._value;\n/** @type {?} */\nToggleSwitchComponent.prototype.onTouchedCallback;\n/** @type {?} */\nToggleSwitchComponent.prototype.onChangeCallback;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { ToggleSwitchComponent } from './toggleswitch.component';\nexport class ToggleSwitchModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [ FormsModule ],\n    exports: [ ToggleSwitchComponent ],\n    declarations: [ ToggleSwitchComponent ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ToggleSwitchModule_tsickle_Closure_declarations() {\n/** @type {?} */\nToggleSwitchModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nToggleSwitchModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { Observer } from 'rxjs/Observer';\nimport'rxjs/add/observable/concat';\nexport class FrameExtractionService {\n/**\n * @param {?} source\n * @return {?}\n */\nprivate createVideoPlayer(source: string): HTMLVideoElement {\n        let /** @type {?} */ videoPlayer = document.createElement('video');\n        videoPlayer.preload = 'auto';\n        videoPlayer.src = source;\n        return videoPlayer;\n    }\n/**\n * @param {?} width\n * @param {?} height\n * @return {?}\n */\nprivate createCanvas(width: number, height: number): HTMLCanvasElement {\n        let /** @type {?} */ canvas = document.createElement('canvas');\n        canvas.width = width;\n        canvas.height = height;\n        return canvas;\n    }\n/**\n * @param {?} videoPlayer\n * @param {?} time\n * @return {?}\n */\nprivate goToFrame(videoPlayer: HTMLVideoElement, time: number): Observable<number> {\n        videoPlayer.currentTime = time;\n        return Observable.fromEvent(videoPlayer, time === 0 ? 'loadeddata' : 'seeked');\n    }\n/**\n * @param {?} videoPlayer\n * @param {?} canvas\n * @param {?} time\n * @param {?=} width\n * @param {?=} height\n * @return {?}\n */\nprivate getThumbnail(videoPlayer: HTMLVideoElement, canvas: HTMLCanvasElement, time: number, width: number = 160, height: number = 90): Observable<ExtractedFrame> {\n\n        return Observable.create((observer: Observer<ExtractedFrame>) => {\n\n            // go to specified frame\n            let /** @type {?} */ subscription = this.goToFrame(videoPlayer, time).subscribe((event: any) => {\n                // create image from current frame\n                canvas.getContext('2d').drawImage(videoPlayer, 0, 0, width, height);\n                observer.next({ image: canvas.toDataURL(), width: width, height: height, time: time });\n                observer.complete();\n                subscription.unsubscribe();\n            });\n        });\n    }\n/**\n * @param {?} source\n * @param {?} width\n * @param {?} height\n * @param {?} time\n * @return {?}\n */\ngetFrameThumbnail(source: string, width: number, height: number, time: number): Observable<ExtractedFrame> {\n\n        // create required elements\n        let /** @type {?} */ videoPlayer = this.createVideoPlayer(source);\n        let /** @type {?} */ canvas = this.createCanvas(width, height);\n\n        let /** @type {?} */ frameSubscription = this.getThumbnail(videoPlayer, canvas, time, width, height);\n\n        // ensure we release memory after we are finished        \n        frameSubscription.subscribe(null, null, () => {\n            videoPlayer = null;\n            canvas = null;\n        });\n\n        return frameSubscription;\n    }\n/**\n * @param {?} source\n * @param {?} width\n * @param {?} height\n * @param {?} start\n * @param {?} end\n * @param {?=} skip\n * @return {?}\n */\ngetFrameThumbnails(source: string, width: number, height: number, start: number, end: number, skip: number = 5): Observable<ExtractedFrame> {\n\n        // create required elements\n        let /** @type {?} */ videoPlayer = this.createVideoPlayer(source);\n        let /** @type {?} */ canvas = this.createCanvas(width, height);\n\n        return Observable.create((observer: Observer<ExtractedFrame>) => {\n\n            Observable.fromEvent(videoPlayer, 'loadedmetadata').subscribe(() => {\n\n                // calculate the frames required\n                let /** @type {?} */ frames = [];\n\n                for (let /** @type {?} */ idx = start; idx < end; idx += skip) {\n                    frames.push(this.getThumbnail(videoPlayer, canvas, idx, width, height));\n                }\n\n                Observable.concat(...frames).subscribe((frame: ExtractedFrame) => observer.next(frame), null, () => {\n                    videoPlayer = null;\n                    canvas = null;\n                    observer.complete();\n                });\n            });\n\n        });\n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction FrameExtractionService_tsickle_Closure_declarations() {\n/** @type {?} */\nFrameExtractionService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFrameExtractionService.ctorParameters;\n}\n\n\nexport interface ExtractedFrame {\n    image: string;\n    width: number;\n    height: number;\n    time: number;\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\n\nimport { FrameExtractionService } from './frame-extraction.service';\nexport class FrameExtractionModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    providers: [FrameExtractionService],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction FrameExtractionModule_tsickle_Closure_declarations() {\n/** @type {?} */\nFrameExtractionModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFrameExtractionModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { MediaPlayerType } from './media-player.component';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { Subject } from 'rxjs/Subject';\nimport { Observer } from 'rxjs/Observer';\nimport { FrameExtractionService, ExtractedFrame } from '../../services/frame-extraction/index';\nexport class MediaPlayerService {\n\n    source: string;\n    type: MediaPlayerType = 'video';\n    loaded: boolean = false;\n\n    /*\n        Create observables for media player events\n    */\n    playing: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\n    initEvent: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\n    abortEvent: Subject<void> = new Subject<void>();\n    canPlayEvent: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\n    canPlayThroughEvent: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\n    durationChangeEvent: Subject<number> = new Subject<number>();\n    endedEvent: Subject<void> = new Subject<void>();\n    errorEvent: Subject<any> = new Subject<any>();\n    loadedDataEvent: Subject<any> = new Subject<any>();\n    loadedMetadataEvent: Subject<any> = new Subject<any>();\n    loadStartEvent: Subject<void> = new Subject<void>();\n    pauseEvent: Subject<void> = new Subject<void>();\n    playEvent: Subject<void> = new Subject<void>();\n    playingEvent: Subject<boolean> = new Subject<boolean>();\n    rateChangeEvent: Subject<number> = new Subject<number>();\n    seekedEvent: Subject<number> = new Subject<number>();\n    seekingEvent: Subject<number> = new Subject<number>();\n    stalledEvent: Subject<void> = new Subject<void>();\n    suspendEvent: Subject<void> = new Subject<void>();\n    timeUpdateEvent: Subject<number> = new Subject<number>();\n    volumeChangeEvent: Subject<number> = new Subject<number>();\n    waitingEvent: Subject<void> = new Subject<void>();\n    mediaClickEvent: Subject<MouseEvent> = new Subject<MouseEvent>();\n    fullscreenEvent: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\n    quietModeEvent: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\n    progressEvent: Observable<TimeRanges> = Observable.create((observer: Observer<TimeRanges>) => {\n\n        // repeat until the whole video has fully loaded\n        let /** @type {?} */ interval = setInterval(() => {\n\n            let /** @type {?} */ buffered = /** @type {?} */(( this._mediaPlayer.buffered as TimeRanges));\n            observer.next(buffered);\n\n            if (buffered.length === 1 && buffered.start(0) === 0 && buffered.end(0) === this.duration) {\n                observer.complete();\n                clearInterval(interval);\n            }\n        }, 1000);\n    });\nprivate _mediaPlayer: HTMLMediaElement;\nprivate _hostElement: HTMLElement;\nprivate _fullscreen: boolean = false;\nprivate _quietMode: boolean;\n/**\n * @param {?} _frameExtractionService\n */\nconstructor(private _frameExtractionService: FrameExtractionService) {}\n/**\n * @return {?}\n */\nget mediaPlayer(): HTMLMediaElement {\n        return this._mediaPlayer;\n    }\n/**\n * @return {?}\n */\nget quietMode(): boolean {\n        return this._quietMode;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset quietMode(value: boolean) {\n\n        // quiet mode cannot be enabled on audio player\n        if (this.type === 'audio') {\n            value = false;\n        }\n\n        this._quietMode = value;\n        this.quietModeEvent.next(value);\n    }\n/**\n * @return {?}\n */\nget mediaPlayerWidth(): number {\n        return this._mediaPlayer ? this._mediaPlayer.offsetWidth : 0;\n    }\n/**\n * @return {?}\n */\nget mediaPlayerHeight(): number {\n        return this._mediaPlayer ? this._mediaPlayer.offsetHeight : 0;\n    }\n/**\n * @return {?}\n */\nget audioTracks(): AudioTrackList {\n        return this._mediaPlayer ? this._mediaPlayer.audioTracks : null;\n    }\n/**\n * @return {?}\n */\nget autoplay(): boolean {\n        return this._mediaPlayer ? this._mediaPlayer.autoplay : false;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset autoplay(value: boolean) {\n        this._mediaPlayer.autoplay = value;\n    }\n/**\n * @return {?}\n */\nget buffered(): TimeRanges {\n        return this._mediaPlayer ? this._mediaPlayer.buffered : new TimeRanges();\n    }\n/**\n * @return {?}\n */\nget crossOrigin(): string {\n        return this._mediaPlayer ? this._mediaPlayer.crossOrigin : null;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset crossOrigin(value: string) {\n        this._mediaPlayer.crossOrigin = value;\n    }\n/**\n * @return {?}\n */\nget currentSrc(): string {\n        return this._mediaPlayer ? this._mediaPlayer.currentSrc : null;\n    }\n/**\n * @return {?}\n */\nget currentTime(): number {\n        return this._mediaPlayer ? this._mediaPlayer.currentTime : 0;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset currentTime(value: number) {\n        this._mediaPlayer.currentTime = value;\n    }\n/**\n * @return {?}\n */\nget defaultMuted(): boolean {\n        return this._mediaPlayer ? this._mediaPlayer.defaultMuted : false;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset defaultMuted(value: boolean) {\n        this._mediaPlayer.defaultMuted = value;\n    }\n/**\n * @return {?}\n */\nget defaultPlaybackRate(): number {\n        return this._mediaPlayer ? this._mediaPlayer.defaultPlaybackRate : 1;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset defaultPlaybackRate(value: number) {\n        this._mediaPlayer.defaultPlaybackRate = value;\n    }\n/**\n * @return {?}\n */\nget duration(): number {\n        return this._mediaPlayer ? this._mediaPlayer.duration : 0;\n    }\n/**\n * @return {?}\n */\nget ended(): boolean {\n        return this._mediaPlayer ? this._mediaPlayer.ended : false;\n    }\n/**\n * @return {?}\n */\nget loop(): boolean {\n        return this._mediaPlayer ? this._mediaPlayer.loop : false;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset loop(value: boolean) {\n        this._mediaPlayer.loop = value;\n    }\n/**\n * @return {?}\n */\nget muted(): boolean {\n        return this._mediaPlayer ? this._mediaPlayer.muted : false;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset muted(value: boolean) {\n        this._mediaPlayer.muted = value;\n    }\n/**\n * @return {?}\n */\nget networkState(): number {\n        return this._mediaPlayer.networkState;\n    }\n/**\n * @return {?}\n */\nget paused(): boolean {\n        return this._mediaPlayer ? this._mediaPlayer.paused : true;\n    }\n/**\n * @return {?}\n */\nget playbackRate(): number {\n        return this._mediaPlayer ? this._mediaPlayer.playbackRate : 1;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset playbackRate(value: number) {\n        this._mediaPlayer.playbackRate = value;\n    }\n/**\n * @return {?}\n */\nget played(): TimeRanges {\n        return this._mediaPlayer ? this._mediaPlayer.played : new TimeRanges();\n    }\n/**\n * @return {?}\n */\nget preload(): string {\n        return this._mediaPlayer ? this._mediaPlayer.preload : 'auto';\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset preload(value: string) {\n        this._mediaPlayer.preload = value;\n    }\n/**\n * @return {?}\n */\nget readyState(): number {\n        return this._mediaPlayer ? this._mediaPlayer.readyState : 0;\n    }\n/**\n * @return {?}\n */\nget seekable(): TimeRanges {\n        return this._mediaPlayer ? this._mediaPlayer.seekable : new TimeRanges();\n    }\n/**\n * @return {?}\n */\nget seeking(): boolean {\n        return this._mediaPlayer ? this._mediaPlayer.seeking : false;\n    }\n/**\n * @return {?}\n */\nget src(): string {\n        return this._mediaPlayer ? this._mediaPlayer.src : '';\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset src(value: string) {\n        this._mediaPlayer.src = value;\n    }\n/**\n * @return {?}\n */\nget textTracks(): TextTrackList {\n        return this._mediaPlayer ? this._mediaPlayer.textTracks : new TextTrackList();\n    }\n/**\n * @return {?}\n */\nget videoTracks(): VideoTrackList {\n        return this._mediaPlayer ? this._mediaPlayer.videoTracks : new VideoTrackList();\n    }\n/**\n * @return {?}\n */\nget volume(): number {\n        return this._mediaPlayer ? this._mediaPlayer.volume : 1;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset volume(value: number) {\n        this._mediaPlayer.volume = value;\n    }\n/**\n * @return {?}\n */\nget fullscreen(): boolean {\n        return this._mediaPlayer ? this._fullscreen : false;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset fullscreen(value: boolean) {\n        this._fullscreen = value;\n        this.fullscreenEvent.next(value);\n    }\n/**\n * @param {?} hostElement\n * @param {?} mediaPlayer\n * @return {?}\n */\nsetMediaPlayer(hostElement: HTMLElement, mediaPlayer: HTMLMediaElement): void {\n        this._hostElement = hostElement;\n        this._mediaPlayer = mediaPlayer;\n\n        this.initEvent.next(true);\n    }\n/**\n * Toggle playing state\n * @return {?}\n */\ntogglePlay(): void {\n\n        // prevent any action is not loaded\n        if (this.loaded === false) {\n            return;\n        }\n\n        if (this.paused) {\n            this.play();\n        } else {\n            this.pause();\n        }\n    }\n/**\n * Starts playing the audio/video\n * @return {?}\n */\nplay(): void {\n        this._mediaPlayer.play();\n    }\n/**\n * Pauses the currently playing audio/video\n * @return {?}\n */\npause(): void {\n        this._mediaPlayer.pause();\n    }\n/**\n * Re-loads the audio/video element\n * @return {?}\n */\nload(): void {\n        this._mediaPlayer.load();\n    }\n/**\n * Checks if the browser can play the specified audio/video type\n * @param {?} type\n * @return {?}\n */\ncanPlayType(type: string): string {\n        return this._mediaPlayer.canPlayType(type);\n    }\n/**\n * Adds a new text track to the audio/video\n * @param {?} kind\n * @param {?} label\n * @param {?} language\n * @return {?}\n */\naddTextTrack(kind: string, label: string, language: string): TextTrack {\n        return this._mediaPlayer.addTextTrack(kind, label, language);\n    }\n/**\n * Attempt to display media in fullscreen mode\n * @return {?}\n */\nrequestFullscreen(): void {\n\n        if (this._hostElement.requestFullscreen) {\n            this._hostElement.requestFullscreen();\n        } else if (this._hostElement.webkitRequestFullscreen) {\n            this._hostElement.webkitRequestFullscreen();\n        } else if (( /** @type {?} */((<any>this._hostElement))).msRequestFullscreen) {\n            ( /** @type {?} */((<any>this._hostElement))).msRequestFullscreen();\n        } else if (( /** @type {?} */((<any>this._hostElement))).mozRequestFullScreen) {\n            ( /** @type {?} */((<any>this._hostElement))).mozRequestFullScreen();\n        }\n    }\n/**\n * Exit full screen mode\n * @return {?}\n */\nexitFullscreen(): void {\n\n        if (( /** @type {?} */((<any>this._hostElement))).exitFullscreen) {\n            document.exitFullscreen();\n        } else if (document.webkitExitFullscreen) {\n            document.webkitExitFullscreen();\n        } else if (( /** @type {?} */((<any>document))).msExitFullscreen) {\n            ( /** @type {?} */((<any>document))).msExitFullscreen();\n        } else if (( /** @type {?} */((<any>document))).mozCancelFullScreen) {\n            ( /** @type {?} */((<any>document))).mozCancelFullScreen();\n        }\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nfullscreenChange(event: Event) {\n        this.fullscreen = ( /** @type {?} */((<any>document))).fullscreen || document.webkitIsFullScreen || ( /** @type {?} */((<any>document))).mozFullScreen || ( /** @type {?} */((<any>document))).msFullscreenElement !== null && ( /** @type {?} */((<any>document))).msFullscreenElement !== undefined;\n        this.fullscreenEvent.next(this.fullscreen);\n    }\n/**\n * Toggle Fullscreen State\n * @return {?}\n */\ntoggleFullscreen(): void {\n        if (this.fullscreen) {\n            this.exitFullscreen();\n        } else {\n            this.requestFullscreen();\n        }\n    }\n/**\n * Extract the frames from the video\n * @param {?} width\n * @param {?} height\n * @param {?} skip\n * @return {?}\n */\ngetFrames(width: number, height: number, skip: number): Observable<ExtractedFrame> {\n\n        if (this.type === 'video') {\n            return this._frameExtractionService.getFrameThumbnails(this.source, width, height, 0, this.duration, 10);\n        }\n\n        return Observable.from([]);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: FrameExtractionService, },\n];\n}\n\nfunction MediaPlayerService_tsickle_Closure_declarations() {\n/** @type {?} */\nMediaPlayerService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMediaPlayerService.ctorParameters;\n/** @type {?} */\nMediaPlayerService.prototype.source;\n/** @type {?} */\nMediaPlayerService.prototype.type;\n/** @type {?} */\nMediaPlayerService.prototype.loaded;\n/** @type {?} */\nMediaPlayerService.prototype.playing;\n/** @type {?} */\nMediaPlayerService.prototype.initEvent;\n/** @type {?} */\nMediaPlayerService.prototype.abortEvent;\n/** @type {?} */\nMediaPlayerService.prototype.canPlayEvent;\n/** @type {?} */\nMediaPlayerService.prototype.canPlayThroughEvent;\n/** @type {?} */\nMediaPlayerService.prototype.durationChangeEvent;\n/** @type {?} */\nMediaPlayerService.prototype.endedEvent;\n/** @type {?} */\nMediaPlayerService.prototype.errorEvent;\n/** @type {?} */\nMediaPlayerService.prototype.loadedDataEvent;\n/** @type {?} */\nMediaPlayerService.prototype.loadedMetadataEvent;\n/** @type {?} */\nMediaPlayerService.prototype.loadStartEvent;\n/** @type {?} */\nMediaPlayerService.prototype.pauseEvent;\n/** @type {?} */\nMediaPlayerService.prototype.playEvent;\n/** @type {?} */\nMediaPlayerService.prototype.playingEvent;\n/** @type {?} */\nMediaPlayerService.prototype.rateChangeEvent;\n/** @type {?} */\nMediaPlayerService.prototype.seekedEvent;\n/** @type {?} */\nMediaPlayerService.prototype.seekingEvent;\n/** @type {?} */\nMediaPlayerService.prototype.stalledEvent;\n/** @type {?} */\nMediaPlayerService.prototype.suspendEvent;\n/** @type {?} */\nMediaPlayerService.prototype.timeUpdateEvent;\n/** @type {?} */\nMediaPlayerService.prototype.volumeChangeEvent;\n/** @type {?} */\nMediaPlayerService.prototype.waitingEvent;\n/** @type {?} */\nMediaPlayerService.prototype.mediaClickEvent;\n/** @type {?} */\nMediaPlayerService.prototype.fullscreenEvent;\n/** @type {?} */\nMediaPlayerService.prototype.quietModeEvent;\n/** @type {?} */\nMediaPlayerService.prototype.progressEvent;\n/** @type {?} */\nMediaPlayerService.prototype._mediaPlayer;\n/** @type {?} */\nMediaPlayerService.prototype._hostElement;\n/** @type {?} */\nMediaPlayerService.prototype._fullscreen;\n/** @type {?} */\nMediaPlayerService.prototype._quietMode;\n/** @type {?} */\nMediaPlayerService.prototype._frameExtractionService;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable } from '@angular/core';\nimport { Http, ResponseContentType } from '@angular/http';\nimport { Observable } from 'rxjs/Observable';\nimport { Observer } from 'rxjs/Observer';\nimport'rxjs/add/observable/of';\nexport class AudioService {\nprivate _audioBuffer: AudioBuffer;\nprivate _audioBufferSource: AudioBufferSourceNode;\nprivate _audioContext: AudioContext;\nprivate _gainNode: GainNode;\nprivate _analyserNode: AnalyserNode;\n/**\n * @param {?} _http\n */\nconstructor(private _http: Http) { }\n/**\n * @param {?} mediaElement\n * @return {?}\n */\ngetAudioFileMetadata(mediaElement: HTMLMediaElement): Observable<AudioMetadata> {\n        return Observable.create((observer: Observer<AudioMetadata>) => {\n            this._http.request(mediaElement.src, { responseType: ResponseContentType.Blob }).subscribe(response => {\n\n                let /** @type {?} */ filename = mediaElement.src.substring(mediaElement.src.lastIndexOf('/') + 1);\n                let /** @type {?} */ extension = mediaElement.src.substring(mediaElement.src.lastIndexOf('.') + 1).toLowerCase();\n                let /** @type {?} */ blob = response.blob();\n                let /** @type {?} */ description;\n\n                switch (extension) {\n                    case 'mp3':\n                        description = 'MPEG audio layer 3 file';\n                        break;\n\n                    case 'wma':\n                        description = 'Windows media audio file';\n                        break;\n\n                    case 'wav':\n                        description = 'WAVE audio file';\n                        break;\n\n                    case 'ogg':\n                        description = 'Ogg Vorbis file';\n                        break;\n\n                    case 'aac':\n                        description = 'Advanced audio coding file';\n                        break;\n\n                    case 'midi':\n                        description = 'Musical instrument digital interface file';\n                        break;\n\n                    default:\n                        description = 'Audio file';\n                        break;\n                }\n\n                observer.next({\n                    filename: filename,\n                    extension: extension,\n                    description: description,\n                    size: blob.size\n                });\n            });\n        });\n    }\n/**\n * @param {?} url\n * @return {?}\n */\ngetWaveformFromUrl(url: string): Observable<Float32Array[]> {\n\n        // if audio context is not support return a stream of empty data\n        if (!( /** @type {?} */((<any>window))).AudioContext) {\n            return Observable.of<Float32Array[]>([new Float32Array(0)]);\n        }\n\n        this._audioContext = new AudioContext();\n        this.createVolumeNode();\n        this.createAnalyserNode();\n\n        return Observable.create((observer: Observer<Float32Array[]>) => {\n\n            // load the media from the URL provided\n            this._http.request(url, { responseType: ResponseContentType.ArrayBuffer }).subscribe(response => {\n                this.getAudioBuffer(response.arrayBuffer()).subscribe(audioBuffer => {\n\n                    // create the buffer source\n                    this.createBufferSource(audioBuffer);\n\n                    let /** @type {?} */ dataPoints: Float32Array[] = [];\n                    let /** @type {?} */ channels = this._audioBuffer.numberOfChannels;\n\n                    // extract the data from each channel\n                    for (let /** @type {?} */ channelIdx = 0; channelIdx < channels; channelIdx++) {\n                        dataPoints[channelIdx] = this._audioBuffer.getChannelData(channelIdx);\n                    }\n\n                    observer.next(dataPoints);\n                    observer.complete();\n\n                    // cleanup after ourselves\n                    dataPoints = null;\n                }, (error) => observer.error(error));\n            }, (error) => observer.error(error));\n        });\n    }\n/**\n * @param {?=} channels\n * @param {?=} skip\n * @return {?}\n */\ngetWaveformPoints(channels: Float32Array[] = [], skip: number = 1000): WaveformPoint[] {\n\n        let /** @type {?} */ waveform: WaveformPoint[] = [];\n        let /** @type {?} */ duration = channels.length > 0 ? channels[0].length : 0;\n\n        // convert each channel data to a series of waveform points\n        for (let /** @type {?} */ idx = 0; idx < duration; idx += skip) {\n\n            // get all the channel data for a specific point\n            let /** @type {?} */ points = channels.map(channel => channel[idx]);\n\n            // find the minimum point and maximum points at each position across all channels\n            waveform.push({\n                min: points.reduce((previous, current) => current < previous ? current : previous),\n                max: points.reduce((previous, current) => current > previous ? current : previous)\n            });\n        }\n\n        return waveform;\n    }\n/**\n * @param {?} arrayBuffer\n * @return {?}\n */\nprivate getAudioBuffer(arrayBuffer: ArrayBuffer): Observable<AudioBuffer> {\n        return Observable.create((observer: Observer<AudioBuffer>) => {\n            this.getOfflineAudioContext().decodeAudioData(arrayBuffer, (audioBuffer: AudioBuffer) => {\n                observer.next(audioBuffer);\n                observer.complete();\n            }, (error) => observer.error(error));\n        });\n    }\n/**\n * @return {?}\n */\nprivate getOfflineAudioContext(): OfflineAudioContext {\n        return new OfflineAudioContext(1, 2, this._audioContext.sampleRate || 44100);\n    }\n/**\n * @param {?} audioBuffer\n * @return {?}\n */\nprivate createBufferSource(audioBuffer: AudioBuffer): void {\n        this.disconnectSource();\n\n        this._audioBuffer = audioBuffer;\n        this._audioBufferSource = this._audioContext.createBufferSource();\n        this._audioBufferSource.buffer = this._audioBuffer;\n        this._audioBufferSource.connect(this._analyserNode);\n    }\n/**\n * @return {?}\n */\nprivate createVolumeNode(): void {\n        this._gainNode = this._audioContext.createGain();\n        this._gainNode.connect(this._audioContext.destination);\n    }\n/**\n * @return {?}\n */\nprivate createAnalyserNode(): void {\n        this._analyserNode = this._audioContext.createAnalyser();\n        this._analyserNode.connect(this._gainNode);\n    }\n/**\n * @return {?}\n */\nprivate disconnectSource(): void {\n        if (this._audioBufferSource) {\n            this._audioBufferSource.disconnect();\n        }\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Http, },\n];\n}\n\nfunction AudioService_tsickle_Closure_declarations() {\n/** @type {?} */\nAudioService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nAudioService.ctorParameters;\n/** @type {?} */\nAudioService.prototype._audioBuffer;\n/** @type {?} */\nAudioService.prototype._audioBufferSource;\n/** @type {?} */\nAudioService.prototype._audioContext;\n/** @type {?} */\nAudioService.prototype._gainNode;\n/** @type {?} */\nAudioService.prototype._analyserNode;\n/** @type {?} */\nAudioService.prototype._http;\n}\n\n\nexport interface WaveformPoint {\n    min: number;\n    max: number;\n}\n\nexport interface AudioMetadata {\n    filename: string;\n    extension: string;\n    description: string;\n    size: number;\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { HttpModule } from '@angular/http';\nimport { AudioService } from './audio.service';\nexport class AudioServiceModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [ HttpModule ],\n    providers: [AudioService]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction AudioServiceModule_tsickle_Closure_declarations() {\n/** @type {?} */\nAudioServiceModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nAudioServiceModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Input, ViewChild, ElementRef, AfterViewInit, OnDestroy } from '@angular/core';\nimport { ExtractedFrame, FrameExtractionService } from '../../services/frame-extraction/frame-extraction.service';\nimport { MediaPlayerService } from './media-player.service';\nimport { Subject } from 'rxjs/Subject';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { Observable } from 'rxjs/Observable';\nimport { Observer } from 'rxjs/Observer';\nimport { AudioService, AudioMetadata } from '../../services/audio/index';\nimport { Subscription } from 'rxjs/Subscription';\nimport'rxjs/add/observable/from';\nimport'rxjs/add/operator/switchMap';\nexport class MediaPlayerComponent implements AfterViewInit, OnDestroy {\nprivate _playerRef: ElementRef;\nprivate _trackBarRef: ElementRef;\n\n    hovering: boolean = false;\n    audioMetadata: Observable<AudioMetadata>;\nprivate _hover$: Subscription;\nprivate _clicked$: Subscription;\nprivate _paused$: Subscription;\nprivate _playing$: Subscription;\nprivate _loading$: Subscription;\n/**\n * @return {?}\n */\nget source(): string {\n        return this.mediaPlayerService.source;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset source(value: string) {\n        this.mediaPlayerService.source = value;\n    }\n/**\n * @return {?}\n */\nget type(): MediaPlayerType {\n        return this.mediaPlayerService.type;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset type(value: MediaPlayerType) {\n        this.mediaPlayerService.type = value;\n    }\n/**\n * @return {?}\n */\nget quietMode(): boolean {\n        return this.mediaPlayerService.quietMode;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset quietMode(value: boolean) {\n        this.mediaPlayerService.quietMode = value;\n    }\n/**\n * @param {?} mediaPlayerService\n * @param {?} _audioService\n * @param {?} _elementRef\n */\nconstructor(public mediaPlayerService: MediaPlayerService,\nprivate _audioService: AudioService,\nprivate _elementRef: ElementRef) {\n\n        // show controls when hovering and in quiet mode\n        this._hover$ = Observable.fromEvent(this._elementRef.nativeElement, 'mousemove').switchMap((event: MouseEvent) => {\n            this.hovering = true;         \n            return Observable.of(event);\n        }).debounceTime(2000).subscribe(() => this.hovering = false);\n    }\n/**\n * @return {?}\n */\nngAfterViewInit(): void {\n        this.mediaPlayerService.setMediaPlayer(this._elementRef.nativeElement, this._playerRef.nativeElement);\n\n        this.audioMetadata = this._audioService.getAudioFileMetadata(this._playerRef.nativeElement);\n        this._playing$ = this.mediaPlayerService.playingEvent.subscribe(event => this.mediaPlayerService.playing.next(true));\n        this._paused$ = this.mediaPlayerService.pauseEvent.subscribe(event => this.mediaPlayerService.playing.next(false));\n        this._clicked$ = this.mediaPlayerService.mediaClickEvent.subscribe(() => this.mediaPlayerService.togglePlay());\n        this._loading$ = this.mediaPlayerService.loadedMetadataEvent.subscribe(() => this.mediaPlayerService.loaded = true);\n    }\n/**\n * @return {?}\n */\nngOnDestroy(): void {\n        this._hover$.unsubscribe();\n        this._playing$.unsubscribe();\n        this._paused$.unsubscribe();\n        this._clicked$.unsubscribe();\n        this._loading$.unsubscribe();\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-media-player',\n    template: `\n      <div class=\"video-player-container\" *ngIf=\"type === 'video'\">\n\n          <video class=\"video-player\" #player [src]=\"source\" (abort)=\"mediaPlayerService.abortEvent.next()\" (canplay)=\"mediaPlayerService.canPlayEvent.next()\"\n              (canplaythrough)=\"mediaPlayerService.canPlayThroughEvent.next()\" (durationchange)=\"mediaPlayerService.durationChangeEvent.next(player.duration)\" (ended)=\"mediaPlayerService.endedEvent.next()\"\n              (error)=\"mediaPlayerService.errorEvent.next($event)\" (loadeddata)=\"mediaPlayerService.loadedDataEvent.next($event)\" (loadedmetadata)=\"mediaPlayerService.loadedMetadataEvent.next($event)\"\n              (loadstart)=\"mediaPlayerService.loadStartEvent.next()\" (pause)=\"mediaPlayerService.pauseEvent.next()\" (play)=\"mediaPlayerService.playEvent.next()\" (playing)=\"mediaPlayerService.playingEvent.next(!player.paused)\"\n              (ratechange)=\"mediaPlayerService.rateChangeEvent.next(player.playbackRate)\" (seeked)=\"mediaPlayerService.seekedEvent.next(player.currentTime)\" (seeking)=\"mediaPlayerService.seekingEvent.next(player.currentTime)\"\n              (stalled)=\"mediaPlayerService.stalledEvent.next()\" (suspend)=\"mediaPlayerService.suspendEvent.next()\" (timeupdate)=\"mediaPlayerService.timeUpdateEvent.next(player.currentTime)\"\n              (volumechange)=\"mediaPlayerService.volumeChangeEvent.next(player.volume)\" (waiting)=\"mediaPlayerService.waitingEvent.next()\" (click)=\"mediaPlayerService.mediaClickEvent.next($event)\"></video>\n\n          <div class=\"video-overlay\" [class.playing]=\"mediaPlayerService.playing | async\">\n              <svg class=\"play-graphic\" x=\"0px\" y=\"0px\" viewBox=\"0 0 64 64\">\n                  <circle class=\"play-circle\" cx=\"32.2\" cy=\"31.8\" r=\"31.8\" />\n                  <polygon class=\"play-triangle\" points=\"23,14.1 23,50.8 48.3,32.5\" />\n              </svg>\n          </div>\n\n      </div>\n\n\n      <div class=\"audio-player\" *ngIf=\"type === 'audio'\">\n\n          <svg width=\"24px\" height=\"24px\" viewBox=\"0 0 24 24\">\n              <g stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\n                  <g transform=\"translate(-98.000000, -458.000000)\">\n                      <g transform=\"translate(98.000000, 458.000000)\">\n                          <path d=\"M4.5,0.5 L18.0435308,0.5 L23.5,6.22251502 L23.5,23.5 L4.5,23.5 L4.5,0.5 Z\" fill=\"#CCEAE2\"></path>\n                          <path d=\"M4.5,8 L4.5,0.5 L18,0.5 L23.5,6 L23.5,23.5 L18,23.5\" stroke=\"#60798D\" fill=\"#CCEAE2\"></path>\n                          <path d=\"M4,13.5 L0.5,13.5 L0.5,18.5 L4,18.5 L9.5,22.5 L9.5,9.5 L4,13.5 Z\" stroke=\"#60798D\" fill=\"#85D2BE\"></path>\n                          <path d=\"M11.5,12.5137939 C13.7576225,12.5137939 14.5,14.3709236 14.5,16 C14.5,17.6849236 13.7089152,19.5420532 11.5,19.5420532\"\n                              stroke=\"#60798D\"></path>\n                          <path d=\"M11.5,9 C15.8037643,9.04168701 18.5,11.6604805 18.5,16 C18.5,20.3395195 15.8804302,23.0079956 11.5,23\" stroke=\"#60798D\"></path>\n                          <path d=\"M17.5219116,0.761413574 L17.5219116,6 L23,6\" stroke=\"#60798D\" fill=\"#85D2BE\"></path>\n                      </g>\n                  </g>\n              </g>\n          </svg>\n\n          <p class=\"audio-file-name\">{{ (audioMetadata | async)?.filename }}</p>\n          <p class=\"audio-file-format\">{{ (audioMetadata | async)?.description }}</p>\n          <p class=\"audio-file-size\">{{ (audioMetadata | async)?.size | fileSize }}</p>\n\n          <audio #player [src]=\"source\" (abort)=\"mediaPlayerService.abortEvent.next()\" (canplay)=\"mediaPlayerService.canPlayEvent.next(true)\"\n              (canplaythrough)=\"mediaPlayerService.canPlayThroughEvent.next(true)\" (durationchange)=\"mediaPlayerService.durationChangeEvent.next(player.duration)\" (ended)=\"mediaPlayerService.endedEvent.next()\"\n              (error)=\"mediaPlayerService.errorEvent.next($event)\" (loadeddata)=\"mediaPlayerService.loadedDataEvent.next($event)\" (loadedmetadata)=\"mediaPlayerService.loadedMetadataEvent.next($event)\"\n              (loadstart)=\"mediaPlayerService.loadStartEvent.next()\" (pause)=\"mediaPlayerService.pauseEvent.next()\" (play)=\"mediaPlayerService.playEvent.next()\" (playing)=\"mediaPlayerService.playingEvent.next(!player.paused)\"\n              (ratechange)=\"mediaPlayerService.rateChangeEvent.next(player.playbackRate)\" (seeked)=\"mediaPlayerService.seekedEvent.next(player.currentTime)\" (seeking)=\"mediaPlayerService.seekingEvent.next(player.currentTime)\"\n              (stalled)=\"mediaPlayerService.stalledEvent.next()\" (suspend)=\"mediaPlayerService.suspendEvent.next()\" (timeupdate)=\"mediaPlayerService.timeUpdateEvent.next(player.currentTime)\"\n              (volumechange)=\"mediaPlayerService.volumeChangeEvent.next(player.volume)\" (waiting)=\"mediaPlayerService.waitingEvent.next()\" (click)=\"mediaPlayerService.mediaClickEvent.next($event)\"></audio>\n      </div>\n\n      <div class=\"control-bar\">\n          <ux-media-player-timeline></ux-media-player-timeline>\n          <ux-media-player-controls></ux-media-player-controls>\n      </div>\n    `,\n    providers: [ MediaPlayerService ],\n    host: {\n        'tabindex': '0',\n        '(keydown.Space)': 'mediaPlayerService.togglePlay()',\n        '[class.standard]': '!mediaPlayerService.fullscreen',\n        '[class.fullscreen]': 'mediaPlayerService.fullscreen',\n        '[class.quiet]': 'quietMode && type === \"video\" || mediaPlayerService.fullscreen',\n        '[class.hover]': 'hovering',\n        '[class.video]': 'type === \"video\"',\n        '[class.audio]': 'type === \"audio\"',\n        '(mouseenter)': 'hovering = true',\n        '(mouseleave)': 'hovering = false',\n        '(document:webkitfullscreenchange)': 'mediaPlayerService.fullscreenChange($event)',\n        '(document:mozfullscreenchange)': 'mediaPlayerService.fullscreenChange($event)',\n        '(document:MSFullscreenChange)': 'mediaPlayerService.fullscreenChange($event)'\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: MediaPlayerService, },\n{type: AudioService, },\n{type: ElementRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'_playerRef': [{ type: ViewChild, args: ['player', ] },],\n'_trackBarRef': [{ type: ViewChild, args: ['trackBar', ] },],\n'source': [{ type: Input },],\n'type': [{ type: Input },],\n'quietMode': [{ type: Input },],\n};\n}\n\nfunction MediaPlayerComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nMediaPlayerComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMediaPlayerComponent.ctorParameters;\n/** @type {?} */\nMediaPlayerComponent.propDecorators;\n/** @type {?} */\nMediaPlayerComponent.prototype._playerRef;\n/** @type {?} */\nMediaPlayerComponent.prototype._trackBarRef;\n/** @type {?} */\nMediaPlayerComponent.prototype.hovering;\n/** @type {?} */\nMediaPlayerComponent.prototype.audioMetadata;\n/** @type {?} */\nMediaPlayerComponent.prototype._hover$;\n/** @type {?} */\nMediaPlayerComponent.prototype._clicked$;\n/** @type {?} */\nMediaPlayerComponent.prototype._paused$;\n/** @type {?} */\nMediaPlayerComponent.prototype._playing$;\n/** @type {?} */\nMediaPlayerComponent.prototype._loading$;\n/** @type {?} */\nMediaPlayerComponent.prototype.mediaPlayerService;\n/** @type {?} */\nMediaPlayerComponent.prototype._audioService;\n/** @type {?} */\nMediaPlayerComponent.prototype._elementRef;\n}\n\n\nexport type MediaPlayerType = 'video' | 'audio';\n\nexport interface MediaPlayerBuffer {\n    start: number;\n    end: number;\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, Host } from '@angular/core';\nimport { MediaPlayerService } from '../media-player.service';\nexport class MediaPlayerBaseExtensionDirective {\n/**\n * @param {?} mediaPlayerService\n */\nconstructor(public mediaPlayerService: MediaPlayerService) { }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: '[mediaPlayerBaseExtension]' \n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: MediaPlayerService, },\n];\n}\n\nfunction MediaPlayerBaseExtensionDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nMediaPlayerBaseExtensionDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMediaPlayerBaseExtensionDirective.ctorParameters;\n/** @type {?} */\nMediaPlayerBaseExtensionDirective.prototype.mediaPlayerService;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, OnInit, ViewChild, ElementRef, AfterViewInit, OnDestroy } from '@angular/core';\nimport { MediaPlayerBaseExtensionDirective } from '../base-extension.directive';\nimport { Observable } from 'rxjs/Observable';\nimport'rxjs/add/operator/switchMap';\nimport'rxjs/add/operator/takeUntil';\nimport'rxjs/add/observable/fromEvent';\nimport { Subscription } from 'rxjs/Subscription';\nexport class MediaPlayerTimelineExtensionComponent extends MediaPlayerBaseExtensionDirective implements OnInit, AfterViewInit, OnDestroy {\n\n     thumb: ElementRef;\n     timelineRef: ElementRef;\n\n    current: number = 0;\n    position: number = 0;\n    duration: number = 0;\n    buffered: MediaPlayerBuffered[] = [];\n    mouseDown: boolean = false;\n    quietMode: boolean = false;\n    fullscreen: boolean = false;\nprivate _mouseEventSubscription: Subscription;\n\n    scrub = {\n        visible: false,\n        position: 0,\n        time: 0\n    };\n/**\n * @return {?}\n */\nngOnInit(): void {\n\n        // watch for changes to the current time\n        this.mediaPlayerService.durationChangeEvent.subscribe(duration => this.duration = duration);\n        this.mediaPlayerService.quietModeEvent.subscribe(quietMode => this.quietMode = quietMode);\n        this.mediaPlayerService.fullscreenEvent.subscribe(fullscreen => {\n            this.fullscreen = fullscreen;\n            this.scrub.position = 0;\n        });\n\n        this.mediaPlayerService.timeUpdateEvent.subscribe(current => {\n            this.current = current;\n            this.position = (this.current / this.duration) * 100;\n        });\n\n        this.mediaPlayerService.progressEvent.subscribe((buffered: TimeRanges) => {\n            this.buffered = [];\n\n            for (let /** @type {?} */ idx = 0; idx < buffered.length; idx++) {\n                this.buffered.push({ start: (buffered.start(idx) / this.duration) * 100, end: (buffered.end(idx) / this.duration) * 100 });\n            }\n        });\n    }\n/**\n * @return {?}\n */\nngAfterViewInit(): void {\n        let /** @type {?} */ mousedown$ = Observable.fromEvent(this.thumb.nativeElement, 'mousedown');\n        let /** @type {?} */ mousemove$ = Observable.fromEvent(document, 'mousemove');\n        let /** @type {?} */ mouseup$ = Observable.fromEvent(document, 'mouseup');\n\n        this._mouseEventSubscription = mousedown$.switchMap(event => mousemove$.takeUntil(mouseup$)).subscribe(event => {\n            this.scrub.visible = false;\n        });\n    }\n/**\n * @return {?}\n */\nngOnDestroy() {\n        this._mouseEventSubscription.unsubscribe();\n    }\n/**\n * @param {?=} event\n * @return {?}\n */\nupdateScrub(event?: MouseEvent): void {\n\n        let /** @type {?} */ target = /** @type {?} */(( event.target as HTMLElement));\n      \n        if (target.classList.contains('media-progress-bar-thumb')) {\n            return;\n        }\n\n        let /** @type {?} */ timeline = /** @type {?} */(( this.timelineRef.nativeElement as HTMLDivElement));\n        let /** @type {?} */ bounds = timeline.getBoundingClientRect();\n\n        this.scrub.position = event.offsetX;\n        this.scrub.time = (event.offsetX / bounds.width) * this.mediaPlayerService.duration;\n\n        if (this.mouseDown) {\n            this.mediaPlayerService.pause();\n            this.mediaPlayerService.currentTime = this.scrub.time;\n        }\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-media-player-timeline',\n    template: `\n      <p class=\"current-time\">{{ current | duration }}</p>\n\n      <div #timeline class=\"timeline-bar\" (mouseenter)=\"scrub.visible = true; pop.show()\" (mouseleave)=\"scrub.visible = false; pop.hide()\"\n          (mousemove)=\"updateScrub($event)\" (mouseup)=\"updateScrub($event)\" (mousedown)=\"mouseDown = true; $event.preventDefault()\">\n\n          <div class=\"buffered-bar\" *ngFor=\"let buffer of buffered\" [style.left.%]=\"buffer.start\" [style.width.%]=\"buffer.end - buffer.start\"></div>\n\n          <div class=\"media-progress-bar\" [style.width.%]=\"position\">\n              <div #progressThumb class=\"media-progress-bar-thumb\" (mouseenter)=\"scrub.visible = false; pop.hide(); $event.stopPropagation()\"\n                  (mouseleave)=\"scrub.visible = true; pop.show(); $event.stopPropagation()\"></div>\n          </div>\n\n          <div class=\"scrub-handle\" [class.scrub-handle-hidden]=\"!scrub.visible\" [style.left.px]=\"scrub.position\" [tooltip]=\"popTemplate\" placement=\"top\" triggers=\"\" #pop=\"bs-tooltip\"\n              container=\"body\" tooltipPopupDelay=\"100\" [isDisabled]=\"duration === 0\"></div>\n      </div>\n\n      <p class=\"duration-time\">{{ duration | duration }}</p>\n\n      <ng-template #popTemplate>\n          <span>{{ scrub.time | duration }}</span>\n      </ng-template>\n    `,\n    host: {\n        '(document:mouseup)': 'mouseDown = false',\n        '[class.quiet]': 'quietMode || fullscreen'\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'thumb': [{ type: ViewChild, args: ['progressThumb', ] },],\n'timelineRef': [{ type: ViewChild, args: ['timeline', ] },],\n};\n}\n\nfunction MediaPlayerTimelineExtensionComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nMediaPlayerTimelineExtensionComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMediaPlayerTimelineExtensionComponent.ctorParameters;\n/** @type {?} */\nMediaPlayerTimelineExtensionComponent.propDecorators;\n/** @type {?} */\nMediaPlayerTimelineExtensionComponent.prototype.thumb;\n/** @type {?} */\nMediaPlayerTimelineExtensionComponent.prototype.timelineRef;\n/** @type {?} */\nMediaPlayerTimelineExtensionComponent.prototype.current;\n/** @type {?} */\nMediaPlayerTimelineExtensionComponent.prototype.position;\n/** @type {?} */\nMediaPlayerTimelineExtensionComponent.prototype.duration;\n/** @type {?} */\nMediaPlayerTimelineExtensionComponent.prototype.buffered;\n/** @type {?} */\nMediaPlayerTimelineExtensionComponent.prototype.mouseDown;\n/** @type {?} */\nMediaPlayerTimelineExtensionComponent.prototype.quietMode;\n/** @type {?} */\nMediaPlayerTimelineExtensionComponent.prototype.fullscreen;\n/** @type {?} */\nMediaPlayerTimelineExtensionComponent.prototype._mouseEventSubscription;\n/** @type {?} */\nMediaPlayerTimelineExtensionComponent.prototype.scrub;\n}\n\n\nexport interface MediaPlayerBuffered {\n    start: number;\n    end: number;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, OnInit, HostListener, ElementRef, ViewChild } from '@angular/core';\nimport { MediaPlayerBaseExtensionDirective } from '../base-extension.directive';\nimport { Observable } from 'rxjs/Observable';\nimport'rxjs/add/observable/timer';\nexport class MediaPlayerControlsExtensionComponent extends MediaPlayerBaseExtensionDirective implements OnInit {\n\n    playing: boolean;\n    quietMode: boolean;\n    fullscreen: boolean = false;\n    volumeActive: boolean = false;\n    volumeDragging: boolean = false;\n\n     volumeIcon: ElementRef;\n     volumeSlider: ElementRef;\n     volumeContainer: ElementRef;\nprivate _volume: number = 50;\nprivate _previousVolume = 50;\n/**\n * @return {?}\n */\nget volume(): number {\n        return this._volume;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset volume(value: number) {\n\n        if (value === 0 && this._volume !== 0) {\n            this._previousVolume = this._volume;\n        }\n        \n        this._volume = Math.min(Math.max(value, 0), 100);\n        this.mediaPlayerService.volume = this._volume / 100;\n    }\n/**\n * @return {?}\n */\nngOnInit(): void {\n        this.mediaPlayerService.playEvent.subscribe(_ => this.playing = true);\n        this.mediaPlayerService.pauseEvent.subscribe(_ => this.playing = false);\n        this.mediaPlayerService.quietModeEvent.subscribe(quietMode => this.quietMode = quietMode);\n        this.mediaPlayerService.volumeChangeEvent.subscribe(volume => this.volume = volume * 100);\n        this.mediaPlayerService.initEvent.debounceTime(1).filter(init => init === true).subscribe(() => this.volume = this.mediaPlayerService.volume * 100);\n        this.mediaPlayerService.fullscreenEvent.subscribe(fullscreen => this.fullscreen = fullscreen);\n\n        let /** @type {?} */ mouseenter$ = Observable.fromEvent(this.volumeIcon.nativeElement, 'mouseenter');\n        let /** @type {?} */ mouseenterContainer$ = Observable.fromEvent(this.volumeContainer.nativeElement, 'mouseenter');\n        let /** @type {?} */ mouseleaveContainer$ = Observable.fromEvent(this.volumeContainer.nativeElement, 'mouseleave');\n\n        mouseenter$.subscribe(() => this.volumeActive = true);\n        mouseleaveContainer$.switchMap(() => Observable.timer(1500).takeUntil(mouseenterContainer$)).subscribe(() => this.volumeActive = false);\n    }\n/**\n * @return {?}\n */\ntoggleMute(): void {\n        if (this.volume === 0) {\n            this.volume = this._previousVolume;\n        } else {\n            this.volume = 0;\n        }\n    }\n/**\n * @return {?}\n */\ntogglePlay(): void {\n        if (this.playing) {\n            this.mediaPlayerService.pause();\n        } else {\n            this.mediaPlayerService.play();\n        }\n    }\n/**\n * @return {?}\n */\nsetFullscreen(): void {\n        this.mediaPlayerService.toggleFullscreen();\n    }\n/**\n * @return {?}\n */\ngoToStart(): void {\n        this.mediaPlayerService.currentTime = 0;\n    }\n/**\n * @return {?}\n */\ngoToEnd(): void {\n        this.mediaPlayerService.currentTime = this.mediaPlayerService.duration;\n    }\n/**\n * @param {?} event\n * @return {?}\n */\ndragStart(event: MouseEvent): void {\n        event.preventDefault();\n        this.volumeDragging = true;\n\n        let /** @type {?} */ thumb = /** @type {?} */(( event.target as HTMLDivElement));\n        thumb.focus();\n    }\n/**\n * @param {?} event\n * @return {?}\n */\ndragMove(event: MouseEvent): void {\n        if (!this.volumeDragging) {\n            return;\n        }\n\n        event.preventDefault();\n\n        let /** @type {?} */ slider = /** @type {?} */(( this.volumeSlider.nativeElement as HTMLDivElement));\n        let /** @type {?} */ bounds = slider.getBoundingClientRect();\n\n        let /** @type {?} */ x = Math.min(bounds.width, Math.max(0, event.pageX - bounds.left));\n\n        // convert to a percentage\n        this.volume = (x / bounds.width) * 100;\n    }\n/**\n * @return {?}\n */\ndragEnd(): void {\n        this.volumeDragging = false;        \n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-media-player-controls',\n    template: `\n      <div class=\"volume-container\">\n\n          <div class=\"volume-slider-container\" #volumeContainer [class.active]=\"volumeActive\">\n              <div class=\"volume-slider-icon\" #volumeIcon>\n                  <span class=\"hpe-icon\" [class.hpe-volume-mute]=\"volume === 0\" [class.hpe-volume-low]=\"volume > 0 && volume <= 70\" [class.hpe-volume]=\"volume > 70\" [tooltip]=\"muteTooltip\" (click)=\"toggleMute()\"></span>\n              </div>\n        \n              <div class=\"volume-slider-node\">\n                  <div class=\"volume-slider\" #volumeSlider>\n                      <div class=\"volume-track-lower\" [style.width.%]=\"volume\"></div>\n                      <div class=\"volume-slider-thumb\" (mousedown)=\"dragStart($event)\" [style.left.%]=\"volume\" tabindex=\"0\" (keydown.ArrowRight)=\"volume = volume + 10\" (keydown.ArrowLeft)=\"volume = volume - 10\"></div>\n                  </div>\n              </div>\n          </div>\n      </div>\n\n      <div class=\"spacer\"></div>\n\n      <svg viewBox=\"0 0 51.5 64\" width=\"14\" height=\"17\" class=\"control-button\" (click)=\"goToStart()\">\n          <rect x=\"0\" y=\"0\" width=\"7.5\" height=\"64\" />\n          <polygon points=\"51.5,64 51.5,0 7.4,32 \" />\n      </svg>\n\n      <svg viewBox=\"0 0 45 64\" width=\"20\" height=\"29\" class=\"control-button\" *ngIf=\"!playing\" (click)=\"togglePlay()\">\n          <polygon points=\"0.4,0 0.4,64 44.6,32\" />\n      </svg>\n\n      <svg viewBox=\"0 0 43 56.9\" class=\"control-button\" width=\"20\" height=\"29\" *ngIf=\"playing\" (click)=\"togglePlay()\">\n          <rect y=\"0.1\" width=\"15.7\" height=\"56.9\" />\n          <rect x=\"27.3\" y=\"0.1\" width=\"15.7\" height=\"56.9\" />\n      </svg>\n\n      <svg viewBox=\"0 0 51.5 64\" width=\"14\" height=\"17\" class=\"control-button\" (click)=\"goToEnd()\">\n          <rect x=\"44.1\" y=\"0\" width=\"7.5\" height=\"64\" />\n          <polygon points=\"0,64 0,0 44.1,32 \" />\n      </svg>\n\n      <div class=\"spacer\"></div>\n\n      <span class=\"hpe-icon\" *ngIf=\"mediaPlayerService.type !== 'audio'\" [class.hpe-expand]=\"!mediaPlayerService.fullscreen\" [class.hpe-contract]=\"mediaPlayerService.fullscreen\"\n          (click)=\"setFullscreen()\"></span>\n\n      <ng-template #muteTooltip>{{ volume === 0 ? 'Unmute' : 'Mute' }}</ng-template>\n    `,\n    host: {\n        '[class.quiet]': 'quietMode || fullscreen'\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'volumeIcon': [{ type: ViewChild, args: ['volumeIcon', ] },],\n'volumeSlider': [{ type: ViewChild, args: ['volumeSlider', ] },],\n'volumeContainer': [{ type: ViewChild, args: ['volumeContainer', ] },],\n'dragMove': [{ type: HostListener, args: ['document:mousemove', ['$event'], ] },],\n'dragEnd': [{ type: HostListener, args: ['document:mouseup', ] },],\n};\n}\n\nfunction MediaPlayerControlsExtensionComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nMediaPlayerControlsExtensionComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMediaPlayerControlsExtensionComponent.ctorParameters;\n/** @type {?} */\nMediaPlayerControlsExtensionComponent.propDecorators;\n/** @type {?} */\nMediaPlayerControlsExtensionComponent.prototype.playing;\n/** @type {?} */\nMediaPlayerControlsExtensionComponent.prototype.quietMode;\n/** @type {?} */\nMediaPlayerControlsExtensionComponent.prototype.fullscreen;\n/** @type {?} */\nMediaPlayerControlsExtensionComponent.prototype.volumeActive;\n/** @type {?} */\nMediaPlayerControlsExtensionComponent.prototype.volumeDragging;\n/** @type {?} */\nMediaPlayerControlsExtensionComponent.prototype.volumeIcon;\n/** @type {?} */\nMediaPlayerControlsExtensionComponent.prototype.volumeSlider;\n/** @type {?} */\nMediaPlayerControlsExtensionComponent.prototype.volumeContainer;\n/** @type {?} */\nMediaPlayerControlsExtensionComponent.prototype._volume;\n/** @type {?} */\nMediaPlayerControlsExtensionComponent.prototype._previousVolume;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nexport class DurationPipe implements PipeTransform {\n/**\n * @param {?} seconds\n * @return {?}\n */\ntransform(seconds: number): any {\n\n        let /** @type {?} */ minutes = Math.floor(seconds / 60);\n        let /** @type {?} */ hours = Math.floor(minutes / 60);\n        let /** @type {?} */ days = Math.floor(hours / 24);\n\n        hours = hours - (days * 24);\n        minutes = minutes - (days * 24 * 60) - (hours * 60);\n        seconds = Math.floor(seconds - (days * 24 * 60 * 60) - (hours * 60 * 60) - (minutes * 60));\n\n        if (hours > 0) {\n            return `${this.pad(hours)}:${this.pad(minutes)}:${this.pad(seconds)}`;\n        } else {\n            return `${this.pad(minutes)}:${this.pad(seconds)}`;\n        }\n    }\n/**\n * @param {?} value\n * @return {?}\n */\npad(value: number): string {\n        if (value < 10) {\n            return `0${value}`;\n        }\n\n        return value.toString();\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Pipe, args: [{\n    name: 'duration'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction DurationPipe_tsickle_Closure_declarations() {\n/** @type {?} */\nDurationPipe.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDurationPipe.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\n\nimport { DurationPipe } from './duration.pipe';\nexport class DurationPipeModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    exports: [DurationPipe],\n    declarations: [DurationPipe]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction DurationPipeModule_tsickle_Closure_declarations() {\n/** @type {?} */\nDurationPipeModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDurationPipeModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nexport class FileSizePipe implements PipeTransform {\n/**\n * @param {?} value\n * @return {?}\n */\ntransform(value: number): any {\n\n        // allow for async values\n        if (!value) {\n            return value;\n        }\n        \n        let /** @type {?} */ units = ['B', 'KB', 'MB', 'GB', 'TB'];\n\n        // calculate the which unit bracket the values should be a part of\n        let /** @type {?} */ idx = Math.floor(Math.log(value) / Math.log(1024));\n        let /** @type {?} */ formattedValue = value / Math.pow(1024, idx);\n        \n        return `${formattedValue.toFixed(2)} ${units[idx]}`;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Pipe, args: [{\n    name: 'fileSize'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction FileSizePipe_tsickle_Closure_declarations() {\n/** @type {?} */\nFileSizePipe.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFileSizePipe.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\n\nimport { FileSizePipe } from './file-size.pipe';\nexport class FileSizePipeModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    exports: [FileSizePipe],\n    declarations: [FileSizePipe]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction FileSizePipeModule_tsickle_Closure_declarations() {\n/** @type {?} */\nFileSizePipeModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFileSizePipeModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { MediaPlayerComponent } from './media-player.component';\nimport { MediaPlayerTimelineExtensionComponent } from './extensions/timeline/timeline.component';\nimport { MediaPlayerBaseExtensionDirective } from './extensions/base-extension.directive';\nimport { MediaPlayerControlsExtensionComponent } from './extensions/controls/controls.component';\nimport { FrameExtractionModule } from '../../services/frame-extraction/frame-extraction.module';\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\nimport { AudioServiceModule } from '../../services/audio/index';\nimport { DurationPipeModule } from '../../pipes/duration/index';\nimport { FileSizePipeModule } from '../../pipes/file-size/index';\nimport { MediaPlayerService } from './media-player.service';\n\nconst /** @type {?} */ DECLARATIONS = [\n    MediaPlayerComponent,\n    MediaPlayerTimelineExtensionComponent,\n    MediaPlayerBaseExtensionDirective,\n    MediaPlayerControlsExtensionComponent\n];\nexport class MediaPlayerModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        CommonModule,\n        FrameExtractionModule,\n        TooltipModule.forRoot(),\n        AudioServiceModule,\n        DurationPipeModule,\n        FileSizePipeModule\n    ],\n    exports: DECLARATIONS,\n    declarations: DECLARATIONS,\n    providers: [MediaPlayerService]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction MediaPlayerModule_tsickle_Closure_declarations() {\n/** @type {?} */\nMediaPlayerModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMediaPlayerModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive } from '@angular/core';\nexport class VirtualScrollLoadingDirective { static decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{ \n    selector: '[uxVirtualScrollLoading]' \n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction VirtualScrollLoadingDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nVirtualScrollLoadingDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nVirtualScrollLoadingDirective.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive } from '@angular/core';\nexport class VirtualScrollLoadButtonDirective { static decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: '[uxVirtualScrollLoadButton]' \n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction VirtualScrollLoadButtonDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nVirtualScrollLoadButtonDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nVirtualScrollLoadButtonDirective.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive } from '@angular/core';\nexport class VirtualScrollCellDirective {\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{ \n    selector: '[uxVirtualScrollCell]' \n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction VirtualScrollCellDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nVirtualScrollCellDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nVirtualScrollCellDirective.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, OnInit, EventEmitter, Output, Input, HostListener, ElementRef, Renderer2, AfterContentInit, ContentChild, TemplateRef, OnDestroy, SimpleChanges } from '@angular/core';\nimport { ResizeService } from '../../directives/resize/index';\nimport { VirtualScrollLoadingDirective } from './directives/virtual-scroll-loading.directive';\nimport { VirtualScrollLoadButtonDirective } from './directives/virtual-scroll-load-button.directive';\nimport { VirtualScrollCellDirective } from './directives/virtual-scroll-cell.directive';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { Observable } from 'rxjs/Observable';\nimport { Subscription } from 'rxjs/Subscription';\nexport class VirtualScrollComponent implements OnInit, AfterContentInit, OnDestroy {\n\n     collection: Observable<any[]> = Observable.create();\n     cellHeight: number;\n     loadOnScroll: boolean = true;\n\n     loading: EventEmitter<number> = new EventEmitter<number>();\n\n     cellTemplate: TemplateRef<any>;\n     loadingIndicatorTemplate: TemplateRef<any>;\n     loadButtonTemplate: TemplateRef<any>;\n\n    cells: BehaviorSubject<any[]> = new BehaviorSubject([]);\n    scrollTop: number = 0;\n    isLoading: boolean = false;\n    pageNumber: number = 0;\n    data: any[] = [];\n    loadingComplete: boolean = false;\nprivate _subscription: Subscription;\nprivate _height: number;\n/**\n * @param {?} _elementRef\n * @param {?} resizeService\n * @param {?} renderer\n */\nconstructor(private _elementRef: ElementRef, resizeService: ResizeService, renderer: Renderer2) {\n\n        // watch for any future changes to size\n        resizeService.addResizeListener(_elementRef.nativeElement, renderer).subscribe(event => this._height = event.height);\n    }\n/**\n * @return {?}\n */\nngOnInit() {\n\n        if (!this.cellHeight) {\n            throw new Error('Virtual Scroll Component requires \"cellHeight\" property to be defined.');\n        }\n\n        // subscribe to the collection\n        this.setupObservable();\n\n        // load the first page of data\n        this.loadNextPage();\n    }\n/**\n * @return {?}\n */\nngAfterContentInit(): void {\n        // re-render cells now that we can display any loading indicator or loading button\n        this.renderCells();\n    }\n/**\n * @param {?} changes\n * @return {?}\n */\nngOnChanges(changes: SimpleChanges): void {\n        if (changes.collection && changes.collection.currentValue !== changes.collection.previousValue && !changes.collection.isFirstChange()) {\n            this.setupObservable();\n            this.reset();\n        }\n    }\n/**\n * @return {?}\n */\nngOnDestroy(): void {\n        this._subscription.unsubscribe();\n    }\n/**\n * @return {?}\n */\nsetupObservable(): void {\n\n        // if there is a current subscription, unsubscribe\n        if (this._subscription && this._subscription.unsubscribe) {\n            this._subscription.unsubscribe();\n        }\n\n        this._subscription = this.collection.subscribe(collection => {\n            this.data.push(...collection);\n            this.renderCells();\n            this.isLoading = false;\n        }, null, () => {\n            this.loadingComplete = true;\n        });\n    }\n/**\n * @return {?}\n */\nrenderCells(): void {\n        this.cells.next(this.getVisibleCells());\n\n        if (this.loadOnScroll && !this.isLoading && !this.loadingComplete) {\n            const /** @type {?} */ remainingScroll = this._elementRef.nativeElement.scrollHeight - (this._elementRef.nativeElement.scrollTop + this._elementRef.nativeElement.clientHeight);\n\n            // if the current cells take up less than the height of the component then load the next page\n            if (remainingScroll <= this._elementRef.nativeElement.clientHeight) {\n                this.loadNextPage();\n            }\n        }\n    }\n/**\n * @return {?}\n */\ngetVisibleCells(): any[] {\n\n        // store the initial element height\n        if (!this._height) {\n            this._height = this._elementRef.nativeElement.offsetHeight;\n        }\n\n        // perform some calculations\n        const /** @type {?} */ scrollTop = this._elementRef.nativeElement.scrollTop;\n        const /** @type {?} */ startCell = Math.floor(scrollTop / this.cellHeight);\n        const /** @type {?} */ endCell = Math.ceil(this._height / this.cellHeight) + 1;\n\n        // update the scroll position\n        this.scrollTop = scrollTop - (scrollTop % this.cellHeight);\n\n        // return a sublist of items visible on the screen\n        return this.data.slice(startCell, startCell + endCell);\n    }\n/**\n * @return {?}\n */\ngetTotalHeight(): number {\n        return this.cellHeight * this.data.length;\n    }\n/**\n * @return {?}\n */\nloadNextPage(): void {\n        this.isLoading = true;\n        this.loading.next(this.pageNumber);\n        this.pageNumber++;\n    }\n/**\n * @return {?}\n */\nreset(): void {\n\n        // reset all values\n        this.scrollTop = 0;\n        this.data = [];\n        this._height = undefined;\n        this.pageNumber = 0;\n        this.loadingComplete = false;\n\n        // set scroll position\n        this._elementRef.nativeElement.scrollTop = 0;\n\n        // clear the current cells\n        this.renderCells();\n\n        // reload first page\n        this.loadNextPage();\n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-virtual-scroll',\n    template: `\n      <div class=\"virtual-scroll-content-height\" [style.height.px]=\"getTotalHeight()\"></div>\n      <div class=\"virtual-scroll-content\" [style.transform]=\"'translateY(' + scrollTop + 'px)'\">\n\n          <!-- Virtually Render Cells -->\n          <ng-container *ngFor=\"let cell of cells | async\">\n              <ng-container *ngTemplateOutlet=\"cellTemplate; context: { cell: cell }\"></ng-container>\n          </ng-container>\n\n          <!-- Loading Indicator -->\n          <ng-container *ngIf=\"loadingIndicatorTemplate && isLoading\" [ngTemplateOutlet]=\"loadingIndicatorTemplate\"></ng-container>\n\n          <!-- Loading Button -->\n          <div class=\"virtual-scroll-load-button\" *ngIf=\"loadButtonTemplate && !loadOnScroll && !loadingComplete && !isLoading\" (click)=\"loadNextPage()\">\n              <ng-container *ngTemplateOutlet=\"loadButtonTemplate\"></ng-container>\n          </div>\n    \n      </div>\n    `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: ResizeService, },\n{type: Renderer2, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'collection': [{ type: Input },],\n'cellHeight': [{ type: Input },],\n'loadOnScroll': [{ type: Input },],\n'loading': [{ type: Output },],\n'cellTemplate': [{ type: ContentChild, args: [VirtualScrollCellDirective, { read: TemplateRef }, ] },],\n'loadingIndicatorTemplate': [{ type: ContentChild, args: [VirtualScrollLoadingDirective, { read: TemplateRef }, ] },],\n'loadButtonTemplate': [{ type: ContentChild, args: [VirtualScrollLoadButtonDirective, { read: TemplateRef }, ] },],\n'renderCells': [{ type: HostListener, args: ['scroll', ] },],\n};\n}\n\nfunction VirtualScrollComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nVirtualScrollComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nVirtualScrollComponent.ctorParameters;\n/** @type {?} */\nVirtualScrollComponent.propDecorators;\n/** @type {?} */\nVirtualScrollComponent.prototype.collection;\n/** @type {?} */\nVirtualScrollComponent.prototype.cellHeight;\n/** @type {?} */\nVirtualScrollComponent.prototype.loadOnScroll;\n/** @type {?} */\nVirtualScrollComponent.prototype.loading;\n/** @type {?} */\nVirtualScrollComponent.prototype.cellTemplate;\n/** @type {?} */\nVirtualScrollComponent.prototype.loadingIndicatorTemplate;\n/** @type {?} */\nVirtualScrollComponent.prototype.loadButtonTemplate;\n/** @type {?} */\nVirtualScrollComponent.prototype.cells;\n/** @type {?} */\nVirtualScrollComponent.prototype.scrollTop;\n/** @type {?} */\nVirtualScrollComponent.prototype.isLoading;\n/** @type {?} */\nVirtualScrollComponent.prototype.pageNumber;\n/** @type {?} */\nVirtualScrollComponent.prototype.data;\n/** @type {?} */\nVirtualScrollComponent.prototype.loadingComplete;\n/** @type {?} */\nVirtualScrollComponent.prototype._subscription;\n/** @type {?} */\nVirtualScrollComponent.prototype._height;\n/** @type {?} */\nVirtualScrollComponent.prototype._elementRef;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { VirtualScrollComponent } from './virtual-scroll.component';\nimport { ResizeModule } from '../../directives/resize/index';\nimport { VirtualScrollLoadingDirective } from './directives/virtual-scroll-loading.directive';\nimport { VirtualScrollLoadButtonDirective } from './directives/virtual-scroll-load-button.directive';\nimport { VirtualScrollCellDirective } from './directives/virtual-scroll-cell.directive';\n\nconst /** @type {?} */ DECLARATIONS = [\n    VirtualScrollComponent,\n    VirtualScrollLoadingDirective,\n    VirtualScrollLoadButtonDirective,\n    VirtualScrollCellDirective\n];\nexport class VirtualScrollModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        CommonModule,\n        ResizeModule\n    ],\n    exports: DECLARATIONS,\n    declarations: DECLARATIONS\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction VirtualScrollModule_tsickle_Closure_declarations() {\n/** @type {?} */\nVirtualScrollModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nVirtualScrollModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Input, EventEmitter } from '@angular/core';\nexport class WizardStepComponent {\n    \n     header: string;\n     valid: boolean = true;\n     visitedChange = new EventEmitter<boolean>();\nprivate _active: boolean = false;\nprivate _visited: boolean = false;\n/**\n * @return {?}\n */\nget visited(): boolean {\n        return this._visited;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset visited(value: boolean) {\n        this._visited = value;\n        this.visitedChange.next(value);\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset active(value: boolean) {\n        \n        // store the active state of the step\n        this._active = value;\n\n        // if the value is true then the step should also be marked as visited\n        if (value === true) {\n            this.visited = true;\n        }\n    }\n/**\n * @return {?}\n */\nget active(): boolean {\n        return this._active;\n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-wizard-step',\n    template: `\n      <ng-container *ngIf=\"active\">\n          <ng-content></ng-content>\n      </ng-container>\n    `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'header': [{ type: Input },],\n'valid': [{ type: Input },],\n'visitedChange': [{ type: Input },],\n'visited': [{ type: Input },],\n};\n}\n\nfunction WizardStepComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nWizardStepComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nWizardStepComponent.ctorParameters;\n/** @type {?} */\nWizardStepComponent.propDecorators;\n/** @type {?} */\nWizardStepComponent.prototype.header;\n/** @type {?} */\nWizardStepComponent.prototype.valid;\n/** @type {?} */\nWizardStepComponent.prototype.visitedChange;\n/** @type {?} */\nWizardStepComponent.prototype._active;\n/** @type {?} */\nWizardStepComponent.prototype._visited;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Input, ContentChildren, QueryList, AfterViewInit, Output, EventEmitter } from '@angular/core';\nimport { WizardStepComponent } from './wizard-step.component';\nexport class WizardComponent implements AfterViewInit {\nprivate _step: number = 0;\n\n     steps = new QueryList<WizardStepComponent>();\n\n     orientation: 'horizontal' | 'vertical' = 'horizontal';\n\n     nextText: string = 'Next';\n     previousText: string = 'Previous';\n     cancelText: string = 'Cancel';\n     finishText: string = 'Finish';\n\n     nextTooltip: string = 'Go to the next step';\n     previousTooltip: string = 'Go to the previous step';\n     cancelTooltip: string = 'Cancel the wizard';\n     finishTooltip: string = 'Finish the wizard';\n\n     nextDisabled: boolean = false;\n     previousDisabled: boolean = false;\n     cancelDisabled: boolean = false;\n     finishDisabled: boolean = false;\n\n     nextVisible: boolean = true;\n     previousVisible: boolean = true;\n     cancelVisible: boolean = true;\n     finishVisible: boolean = true;\n     cancelAlwaysVisible: boolean = false;\n     finishAlwaysVisible: boolean = false;\n\n     onNext = new EventEmitter<number>();\n     onPrevious = new EventEmitter<number>();\n     onCancel = new EventEmitter<void>();\n     onFinish = new EventEmitter<void>();\n     stepChange = new EventEmitter<number>();\n\n    invalidIndicator: boolean = false;\n/**\n * @return {?}\n */\nget step() {\n        return this._step;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset step(value: number) {\n        \n        // only accept numbers as valid options\n        if (typeof value === 'number') {\n\n            // store the active step\n            this._step = value;\n\n            // update which steps should be active\n            this.update();\n\n            // emit the change event\n            this.stepChange.next(this.step);\n\n            // reset the invalid state\n            this.invalidIndicator = false;\n        }\n    }\n/**\n * @return {?}\n */\nngAfterViewInit(): void {\n\n        // initially set the correct visibility of the steps\n        setTimeout(this.update.bind(this));\n    }\n/**\n * Navigate to the next step\n * @return {?}\n */\nnext(): void {\n\n        // check if current step is invalid\n        if (!this.getCurrentStep().valid) {\n            this.invalidIndicator = true;\n            return;\n        }\n\n        // check if we are currently on the last step\n        if ((this.step + 1) < this.steps.length) {\n            this.step++;\n\n            // emit the current step\n            this.onNext.next(this.step);\n        }\n    }\n/**\n * Navigate to the previous step\n * @return {?}\n */\nprevious(): void {\n        \n        // check if we are currently on the last step\n        if (this.step > 0) {\n            this.step--;\n\n            // emit the current step\n            this.onPrevious.next(this.step);            \n        }\n    }\n/**\n * Perform actions when the finish button is clicked\n * @return {?}\n */\nfinish(): void {\n        this.onFinish.next();        \n    }\n/**\n * Perform actions when the cancel button is clicked\n * @return {?}\n */\ncancel(): void {\n        this.onCancel.next();\n    }\n/**\n * Update the active state of each step\n * @return {?}\n */\nupdate(): void {\n        // update which steps should be active\n        this.steps.forEach((step, idx) => step.active = idx === this.step);\n    }\n/**\n * Jump to a specific step only if the step has previously been visited\n * @param {?} step\n * @return {?}\n */\ngotoStep(step: WizardStepComponent): void {\n        if (step.visited) {\n            this.step = this.steps.toArray().findIndex(stp => stp === step);\n        }\n    }\n/**\n * Determine if the current step is the last step\n * @return {?}\n */\nisLastStep(): boolean {\n        return this.step === (this.steps.length - 1);\n    }\n/**\n * Reset the wizard - goes to first step and resets visited state\n * @return {?}\n */\nreset(): void {\n\n        // mark all steps as not visited\n        this.steps.forEach(step => step.visited = false);\n\n        // go to the first step\n        this.step = 0;\n    }\n/**\n * Get the step at the current index\n * @return {?}\n */\ngetCurrentStep(): WizardStepComponent {\n        return this.getStepAtIndex(this.step);\n    }\n/**\n * Return a step at a specific index\n * @param {?} index\n * @return {?}\n */\ngetStepAtIndex(index: number): WizardStepComponent {\n        return this.steps.toArray()[index];\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-wizard',\n    template: `\n      <div class=\"wizard-body\">\n\n          <div class=\"wizard-steps\">\n    \n              <div class=\"wizard-step\" [class.active]=\"stp.active\" [class.visited]=\"stp.visited\" [class.invalid]=\"stp.active && !stp.valid && invalidIndicator\" (click)=\"gotoStep(stp)\" *ngFor=\"let stp of steps\">\n                  {{ stp.header }}\n              </div>\n    \n          </div>\n    \n          <div class=\"wizard-content\">\n              <ng-content></ng-content>\n          </div>\n    \n      </div>\n\n      <div class=\"wizard-footer\">\n          <button #tip=\"bs-tooltip\" class=\"btn button-secondary\" *ngIf=\"previousVisible\" [tooltip]=\"previousTooltip\" container=\"body\" [disabled]=\"previousDisabled || step === 0\"\n              (click)=\"previous(); tip.hide()\">{{ previousText }}</button>\n\n          <button #tip=\"bs-tooltip\" class=\"btn button-primary\" *ngIf=\"nextVisible && !isLastStep()\" [tooltip]=\"nextTooltip\" container=\"body\" [disabled]=\"nextDisabled\"\n              (click)=\"next(); tip.hide()\">{{ nextText }}</button>\n\n          <button #tip=\"bs-tooltip\" class=\"btn button-primary\" *ngIf=\"finishVisible && isLastStep() || finishAlwaysVisible\" [tooltip]=\"finishTooltip\"\n              container=\"body\" [disabled]=\"finishDisabled\" (click)=\"finish(); tip.hide()\">{{ finishText }}</button>\n\n          <button #tip=\"bs-tooltip\" class=\"btn button-secondary\" *ngIf=\"cancelVisible && !isLastStep() || cancelAlwaysVisible\" [tooltip]=\"cancelTooltip\"\n              container=\"body\" [disabled]=\"cancelDisabled\" (click)=\"cancel(); tip.hide()\">{{ cancelText }}</button>\n      </div>\n    `,\n    host: {\n        '[class]': 'orientation'\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'steps': [{ type: ContentChildren, args: [WizardStepComponent, ] },],\n'orientation': [{ type: Input },],\n'nextText': [{ type: Input },],\n'previousText': [{ type: Input },],\n'cancelText': [{ type: Input },],\n'finishText': [{ type: Input },],\n'nextTooltip': [{ type: Input },],\n'previousTooltip': [{ type: Input },],\n'cancelTooltip': [{ type: Input },],\n'finishTooltip': [{ type: Input },],\n'nextDisabled': [{ type: Input },],\n'previousDisabled': [{ type: Input },],\n'cancelDisabled': [{ type: Input },],\n'finishDisabled': [{ type: Input },],\n'nextVisible': [{ type: Input },],\n'previousVisible': [{ type: Input },],\n'cancelVisible': [{ type: Input },],\n'finishVisible': [{ type: Input },],\n'cancelAlwaysVisible': [{ type: Input },],\n'finishAlwaysVisible': [{ type: Input },],\n'onNext': [{ type: Output },],\n'onPrevious': [{ type: Output },],\n'onCancel': [{ type: Output },],\n'onFinish': [{ type: Output },],\n'stepChange': [{ type: Output },],\n'step': [{ type: Input },],\n};\n}\n\nfunction WizardComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nWizardComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nWizardComponent.ctorParameters;\n/** @type {?} */\nWizardComponent.propDecorators;\n/** @type {?} */\nWizardComponent.prototype._step;\n/** @type {?} */\nWizardComponent.prototype.steps;\n/** @type {?} */\nWizardComponent.prototype.orientation;\n/** @type {?} */\nWizardComponent.prototype.nextText;\n/** @type {?} */\nWizardComponent.prototype.previousText;\n/** @type {?} */\nWizardComponent.prototype.cancelText;\n/** @type {?} */\nWizardComponent.prototype.finishText;\n/** @type {?} */\nWizardComponent.prototype.nextTooltip;\n/** @type {?} */\nWizardComponent.prototype.previousTooltip;\n/** @type {?} */\nWizardComponent.prototype.cancelTooltip;\n/** @type {?} */\nWizardComponent.prototype.finishTooltip;\n/** @type {?} */\nWizardComponent.prototype.nextDisabled;\n/** @type {?} */\nWizardComponent.prototype.previousDisabled;\n/** @type {?} */\nWizardComponent.prototype.cancelDisabled;\n/** @type {?} */\nWizardComponent.prototype.finishDisabled;\n/** @type {?} */\nWizardComponent.prototype.nextVisible;\n/** @type {?} */\nWizardComponent.prototype.previousVisible;\n/** @type {?} */\nWizardComponent.prototype.cancelVisible;\n/** @type {?} */\nWizardComponent.prototype.finishVisible;\n/** @type {?} */\nWizardComponent.prototype.cancelAlwaysVisible;\n/** @type {?} */\nWizardComponent.prototype.finishAlwaysVisible;\n/** @type {?} */\nWizardComponent.prototype.onNext;\n/** @type {?} */\nWizardComponent.prototype.onPrevious;\n/** @type {?} */\nWizardComponent.prototype.onCancel;\n/** @type {?} */\nWizardComponent.prototype.onFinish;\n/** @type {?} */\nWizardComponent.prototype.stepChange;\n/** @type {?} */\nWizardComponent.prototype.invalidIndicator;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\nimport { WizardComponent } from './wizard.component';\nimport { WizardStepComponent } from './wizard-step.component';\n\nconst /** @type {?} */ DECLARATIONS = [\n    WizardComponent,\n    WizardStepComponent\n];\nexport class WizardModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        CommonModule,\n        TooltipModule.forRoot()\n    ],\n    exports: DECLARATIONS,\n    declarations: DECLARATIONS\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction WizardModule_tsickle_Closure_declarations() {\n/** @type {?} */\nWizardModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nWizardModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ElementRef, OnInit, Renderer2, Input, Output, EventEmitter } from '@angular/core';\nexport class FixedHeaderTableDirective implements OnInit {\n\n   tableHeight: number | string;\n   tablePaging: EventEmitter<number> = new EventEmitter<number>();\nprivate _tableHead: HTMLElement;\nprivate _tableBody: HTMLElement;\n/**\n * @param {?} _elementRef\n * @param {?} _renderer\n */\nconstructor(private _elementRef: ElementRef,\nprivate _renderer: Renderer2) { }\n/**\n * @return {?}\n */\nngOnInit(): void {\n\n    // add class to the table\n    this._renderer.addClass(this._elementRef.nativeElement, 'ux-fixed-header-table');\n\n    // locate the important elements\n    this._tableHead = this._elementRef.nativeElement.querySelector('thead');\n    this._tableBody = this._elementRef.nativeElement.querySelector('tbody');\n\n    // bind to scroll events on the table body\n    this._renderer.listen(this._tableBody, 'scroll', this.onScroll.bind(this));\n\n    // resize the table header to account for scrollbar\n    this.setLayout();\n\n    // trigger the loading of the first page\n    this.tablePaging.emit();\n  }\n/**\n * Get the table element\n * Primarily used by column width directive\n * @return {?}\n */\ngetTable(): HTMLTableElement {\n    return this._elementRef.nativeElement;\n  }\n/**\n * Handle scroll events\n * @param {?} event\n * @return {?}\n */\nprivate onScroll(event: MouseEvent): void {\n\n    // determine if we are scrolled to the bottom and if so load the next page\n    if (this._tableBody.scrollTop === (this._tableBody.scrollHeight - this._tableBody.offsetHeight)) {\n      this.tablePaging.emit();\n    }\n  }\n/**\n * Update the size of the table header to account for the scrollbar.\n * This is important to keep the columns aligned\n * @return {?}\n */\nprivate setLayout(): void {\n\n    // calculate the size of the scrollbar\n    const /** @type {?} */ scrollbar = this._tableBody.offsetWidth - this._tableBody.clientWidth;\n\n    // add padding to the header to account for this\n    this._renderer.setStyle(this._tableHead, 'padding-right', scrollbar + 'px');\n\n    // set the desired height of the table body\n    this._renderer.setStyle(this._tableBody, 'height', typeof this.tableHeight === 'number' ? `${this.tableHeight}px` : this.tableHeight);\n  }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[uxFixedHeaderTable]'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Renderer2, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'tableHeight': [{ type: Input },],\n'tablePaging': [{ type: Output },],\n};\n}\n\nfunction FixedHeaderTableDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nFixedHeaderTableDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFixedHeaderTableDirective.ctorParameters;\n/** @type {?} */\nFixedHeaderTableDirective.propDecorators;\n/** @type {?} */\nFixedHeaderTableDirective.prototype.tableHeight;\n/** @type {?} */\nFixedHeaderTableDirective.prototype.tablePaging;\n/** @type {?} */\nFixedHeaderTableDirective.prototype._tableHead;\n/** @type {?} */\nFixedHeaderTableDirective.prototype._tableBody;\n/** @type {?} */\nFixedHeaderTableDirective.prototype._elementRef;\n/** @type {?} */\nFixedHeaderTableDirective.prototype._renderer;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\n\nimport { FixedHeaderTableDirective } from './fixed-header-table.directive';\nexport class FixedHeaderTableModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    exports: [FixedHeaderTableDirective],\n    declarations: [FixedHeaderTableDirective]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction FixedHeaderTableModule_tsickle_Closure_declarations() {\n/** @type {?} */\nFixedHeaderTableModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFixedHeaderTableModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nexport class HelpCenterService {\n\n    items: BehaviorSubject<HelpCenterItem[]> = new BehaviorSubject<HelpCenterItem[]>([]);\n/**\n * @param {?} item\n * @return {?}\n */\nregisterItem(item: HelpCenterItem): void {\n\n        // get the current items\n        let /** @type {?} */ items = this.items.getValue();\n\n        // add the new item to the list\n        items.push(item);\n\n        // update the observable\n        this.items.next(items);\n    }\n/**\n * @param {?} item\n * @return {?}\n */\nunregisterItem(item: HelpCenterItem): void {\n\n        // get the current items\n        let /** @type {?} */ items = this.items.getValue();\n\n        // remove the item being unregistered\n        items = items.filter(itm => itm !== item);\n\n        // update the observable\n        this.items.next(items);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction HelpCenterService_tsickle_Closure_declarations() {\n/** @type {?} */\nHelpCenterService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nHelpCenterService.ctorParameters;\n/** @type {?} */\nHelpCenterService.prototype.items;\n}\n\n\nexport interface HelpCenterItem {\n    icon?: string;\n    title: string;\n    select?: () => void;\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, Input, OnInit, OnDestroy } from '@angular/core';\nimport { HelpCenterService, HelpCenterItem } from './help-center.service';\nexport class HelpCenterItemDirective implements OnInit, OnDestroy {\n\n     uxHelpCenterItem: HelpCenterItem;\n/**\n * @param {?} _helpCenterService\n */\nconstructor(private _helpCenterService: HelpCenterService) { }\n/**\n * @return {?}\n */\nngOnInit(): void {\n\n        // register the item in the service\n        this._helpCenterService.registerItem(this.uxHelpCenterItem);\n    }\n/**\n * @return {?}\n */\nngOnDestroy(): void {\n        // remove this item when it is destroyed\n        this._helpCenterService.unregisterItem(this.uxHelpCenterItem);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{ selector: '[uxHelpCenterItem]' }, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: HelpCenterService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'uxHelpCenterItem': [{ type: Input },],\n};\n}\n\nfunction HelpCenterItemDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nHelpCenterItemDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nHelpCenterItemDirective.ctorParameters;\n/** @type {?} */\nHelpCenterItemDirective.propDecorators;\n/** @type {?} */\nHelpCenterItemDirective.prototype.uxHelpCenterItem;\n/** @type {?} */\nHelpCenterItemDirective.prototype._helpCenterService;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { HelpCenterItemDirective } from './help-center-item.directive';\nimport { HelpCenterService } from './help-center.service';\nexport class HelpCenterModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [],\n    exports: [HelpCenterItemDirective],\n    declarations: [HelpCenterItemDirective],\n    providers: [HelpCenterService],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction HelpCenterModule_tsickle_Closure_declarations() {\n/** @type {?} */\nHelpCenterModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nHelpCenterModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs/Subject';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { HoverActionDirective } from './hover-action.directive';\nimport { HoverActionContainerDirective } from './hover-action-container.directive';\nexport class HoverActionService {\n\n    active: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\nprivate _container: HoverActionContainerDirective;\nprivate _focused: boolean = false;\nprivate _hovered: boolean = false;\nprivate _actions: HoverActionDirective[] = [];\n/**\n * @param {?} action\n * @return {?}\n */\nregister(action: HoverActionDirective): void {\n        this._actions.push(action);\n    }\n/**\n * @param {?} action\n * @return {?}\n */\nunregister(action: HoverActionDirective): void {\n        this._actions = this._actions.filter(actn => actn !== action);\n    }\n/**\n * @param {?} container\n * @return {?}\n */\nsetContainer(container: HoverActionContainerDirective): void {\n        this._container = container;\n    }\n/**\n * @param {?} focus\n * @return {?}\n */\nsetFocusState(focus: boolean): void {\n        this._focused = focus;\n        this.updateVisibility();\n    }\n/**\n * @param {?} hover\n * @return {?}\n */\nsetHoverState(hover: boolean): void {\n        this._hovered = hover;\n        this.updateVisibility();\n    }\n/**\n * @return {?}\n */\nnext(): void {\n\n        // if container has focus then focus the first hover action\n        if (this.containerHasFocus()) {\n            this.focusActionAtIndex(0);\n            return this.updateVisibility();\n        }\n\n        // if a hover action has focus then focus the next action\n        if (this.actionHasFocus()) {\n            let /** @type {?} */ index = this.getFocusedActionIndex() + 1;\n            this.focusActionAtIndex(index);\n            this.updateVisibility();\n        }\n    }\n/**\n * @return {?}\n */\nprevious(): void {\n        // if a hover action has focus then focus the previous action\n        if (this.actionHasFocus()) {\n            let /** @type {?} */ index = this.getFocusedActionIndex() - 1;\n\n            if (index >= 0) {\n                this.focusActionAtIndex(index);\n            } else {\n                this._container.focus();\n            }\n        }\n\n        this.updateVisibility();\n    }\n/**\n * @return {?}\n */\nupdateVisibility(): void {\n        this.active.next(this._focused || this._hovered || this.actionHasFocus());\n    }\n/**\n * @param {?} index\n * @return {?}\n */\nprivate focusActionAtIndex(index: number): void {\n        if (index >= 0 && index < this._actions.length) {\n            this._actions[index].focus();\n        }\n    }\n/**\n * @return {?}\n */\nprivate getFocusedActionIndex(): number {\n        return this._actions.findIndex(action => action === this.getFocusedAction());\n    }\n/**\n * @return {?}\n */\nprivate containerHasFocus(): boolean {\n        return this._focused;\n    }\n/**\n * @return {?}\n */\nprivate actionHasFocus(): boolean {\n        return !!this.getFocusedAction();\n    }\n/**\n * @return {?}\n */\nprivate getFocusedAction(): HoverActionDirective {\n        return this._actions.find(action => action.focused);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction HoverActionService_tsickle_Closure_declarations() {\n/** @type {?} */\nHoverActionService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nHoverActionService.ctorParameters;\n/** @type {?} */\nHoverActionService.prototype.active;\n/** @type {?} */\nHoverActionService.prototype._container;\n/** @type {?} */\nHoverActionService.prototype._focused;\n/** @type {?} */\nHoverActionService.prototype._hovered;\n/** @type {?} */\nHoverActionService.prototype._actions;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ContentChildren, QueryList, HostListener, ElementRef, OnDestroy, Input } from '@angular/core';\nimport { HoverActionDirective } from './hover-action.directive';\nimport { HoverActionService } from './hover-action.service';\nimport { Subscription } from 'rxjs/Subscription';\nexport class HoverActionContainerDirective implements OnDestroy {\n\n     tabindex: number = 0;\n    active: boolean = false;\nprivate active$: Subscription;\n/**\n * @param {?} _elementRef\n * @param {?} _hoverActionService\n */\nconstructor(private _elementRef: ElementRef,\nprivate _hoverActionService: HoverActionService) {\n        // register the container element with the service\n        this._hoverActionService.setContainer(this);\n        \n        // apply a class based on the active state of the container and it's actions\n        this.active$ = this._hoverActionService.active.subscribe(active => this.active = active);\n    }\n/**\n * @return {?}\n */\nngOnDestroy(): void {\n        this.active$.unsubscribe();\n    }\n/**\n * @return {?}\n */\nfocus(): void {\n        this._elementRef.nativeElement.focus();\n    }\n/**\n * @return {?}\n */\nonFocus(): void {\n        this._hoverActionService.setFocusState(true);\n    }\n/**\n * @return {?}\n */\nonBlur(): void {\n        this._hoverActionService.setFocusState(false);\n    }\n/**\n * @return {?}\n */\nonHover(): void {\n        this._hoverActionService.setHoverState(true);\n    }\n/**\n * @return {?}\n */\nonLeave(): void {\n        this._hoverActionService.setHoverState(false);\n    }\n/**\n * @return {?}\n */\nnext(): void {\n        this._hoverActionService.next();\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: '[uxHoverActionContainer]',\n    providers: [HoverActionService],\n    host: {\n        '[class.hover-action-container-active]': 'active',\n        '[tabindex]': 'tabindex'\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: HoverActionService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'tabindex': [{ type: Input },],\n'focus': [{ type: HostListener, args: ['click', ] },],\n'onFocus': [{ type: HostListener, args: ['focus', ] },],\n'onBlur': [{ type: HostListener, args: ['blur', ] },],\n'onHover': [{ type: HostListener, args: ['mouseenter', ] },],\n'onLeave': [{ type: HostListener, args: ['mouseleave', ] },],\n'next': [{ type: HostListener, args: ['keydown.arrowright', ] },],\n};\n}\n\nfunction HoverActionContainerDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nHoverActionContainerDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nHoverActionContainerDirective.ctorParameters;\n/** @type {?} */\nHoverActionContainerDirective.propDecorators;\n/** @type {?} */\nHoverActionContainerDirective.prototype.tabindex;\n/** @type {?} */\nHoverActionContainerDirective.prototype.active;\n/** @type {?} */\nHoverActionContainerDirective.prototype.active$;\n/** @type {?} */\nHoverActionContainerDirective.prototype._elementRef;\n/** @type {?} */\nHoverActionContainerDirective.prototype._hoverActionService;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ElementRef, HostListener, OnDestroy, Input } from '@angular/core';\nimport { HoverActionService } from './hover-action.service';\nimport { Subscription } from 'rxjs/Subscription';\nexport class HoverActionDirective implements OnDestroy {\n\n     tabindex: number = 1;\n    active: boolean = false;\n    focused: boolean = false;\nprivate active$: Subscription;\n/**\n * @param {?} _elementRef\n * @param {?} _hoverActionService\n */\nconstructor(private _elementRef: ElementRef,\nprivate _hoverActionService: HoverActionService) {\n\n        // register the action\n        this._hoverActionService.register(this);\n\n        // watch for changes to the activeness of the container\n        this.active$ = this._hoverActionService.active.subscribe(active => this.active = active);\n    }\n/**\n * @return {?}\n */\nngOnDestroy(): void {\n        this._hoverActionService.unregister(this);\n        this.active$.unsubscribe();\n    }\n/**\n * @return {?}\n */\nfocus(): void {\n        this._elementRef.nativeElement.focus();\n    }\n/**\n * @return {?}\n */\nonFocus(): void {\n        this.focused = true;\n        this._hoverActionService.updateVisibility();\n    }\n/**\n * @return {?}\n */\nonBlur(): void {\n        this.focused = false;\n        this._hoverActionService.updateVisibility();\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nprevious(event: MouseEvent): void {\n        event.stopPropagation();        \n        this._hoverActionService.previous();\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nnext(event: MouseEvent): void {\n        event.stopPropagation();\n        this._hoverActionService.next();\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: '[uxHoverAction]',\n    host: {\n        '[class.hover-action-active]': 'active',\n        '[class.hover-action-focused]': 'focused',\n        '[tabindex]': 'tabindex'\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: HoverActionService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'tabindex': [{ type: Input },],\n'onFocus': [{ type: HostListener, args: ['focus', ] },],\n'onBlur': [{ type: HostListener, args: ['blur', ] },],\n'previous': [{ type: HostListener, args: ['keydown.arrowleft', ['$event'], ] },],\n'next': [{ type: HostListener, args: ['keydown.arrowright', ['$event'], ] },],\n};\n}\n\nfunction HoverActionDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nHoverActionDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nHoverActionDirective.ctorParameters;\n/** @type {?} */\nHoverActionDirective.propDecorators;\n/** @type {?} */\nHoverActionDirective.prototype.tabindex;\n/** @type {?} */\nHoverActionDirective.prototype.active;\n/** @type {?} */\nHoverActionDirective.prototype.focused;\n/** @type {?} */\nHoverActionDirective.prototype.active$;\n/** @type {?} */\nHoverActionDirective.prototype._elementRef;\n/** @type {?} */\nHoverActionDirective.prototype._hoverActionService;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { HoverActionContainerDirective } from './hover-action-container.directive';\nimport { HoverActionDirective } from './hover-action.directive';\n\nconst /** @type {?} */ DECLARATIONS = [\n    HoverActionDirective,\n    HoverActionContainerDirective\n];\nexport class HoverActionModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    exports: DECLARATIONS,\n    declarations: DECLARATIONS\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction HoverActionModule_tsickle_Closure_declarations() {\n/** @type {?} */\nHoverActionModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nHoverActionModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, Input, TemplateRef, SimpleChanges, ViewContainerRef, EmbeddedViewRef } from '@angular/core';\nexport class LayoutSwitcherItemDirective {\nprivate _config: LayoutSwitcherItem;\nprivate _embeddedView: EmbeddedViewRef<any>;\n/**\n * @param {?} _templateRef\n * @param {?} _viewContainerRef\n */\nconstructor(private _templateRef: TemplateRef<any>,\nprivate _viewContainerRef: ViewContainerRef) { }\n/**\n * @return {?}\n */\ngetLayout(): TemplateRef<any> {\n        return this._templateRef;\n    }\n/**\n * @return {?}\n */\ngetConfig(): LayoutSwitcherItem {\n        return this._config;\n    }\n/**\n * @return {?}\n */\nactivate(): void {\n        this._embeddedView = this._viewContainerRef.createEmbeddedView(this._templateRef);\n    }\n/**\n * @return {?}\n */\ndeactivate(): void {\n        let /** @type {?} */ index = this._viewContainerRef.indexOf(this._embeddedView);\n        this._viewContainerRef.remove(index);\n        this._embeddedView = null;\n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: '[uxLayoutSwitcherItem]'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: TemplateRef, },\n{type: ViewContainerRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'_config': [{ type: Input, args: ['uxLayoutSwitcherItem', ] },],\n};\n}\n\nfunction LayoutSwitcherItemDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nLayoutSwitcherItemDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nLayoutSwitcherItemDirective.ctorParameters;\n/** @type {?} */\nLayoutSwitcherItemDirective.propDecorators;\n/** @type {?} */\nLayoutSwitcherItemDirective.prototype._config;\n/** @type {?} */\nLayoutSwitcherItemDirective.prototype._embeddedView;\n/** @type {?} */\nLayoutSwitcherItemDirective.prototype._templateRef;\n/** @type {?} */\nLayoutSwitcherItemDirective.prototype._viewContainerRef;\n}\n\n\nexport interface LayoutSwitcherItem {\n    group?: string;\n    minWidth?: number;\n    maxWidth?: number;\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ElementRef, Renderer2, QueryList, ContentChildren, Input, AfterContentInit, ViewContainerRef, OnChanges, SimpleChanges } from '@angular/core';\nimport { ResizeService } from '../resize/index';\nimport { LayoutSwitcherItemDirective } from './layout-switcher-item.directive';\nexport class LayoutSwitcherDirective implements AfterContentInit, OnChanges {\n\n     group: string;\nprivate _layouts: QueryList<LayoutSwitcherItemDirective>;\nprivate _width: number;\nprivate _activeLayout: LayoutSwitcherItemDirective;\n/**\n * @param {?} _elementRef\n * @param {?} resizeService\n * @param {?} renderer\n * @param {?} _viewContainerRef\n */\nconstructor(private _elementRef: ElementRef, resizeService: ResizeService, renderer: Renderer2,\nprivate _viewContainerRef: ViewContainerRef) {\n\n        // watch for changes to the container size\n        resizeService.addResizeListener(_elementRef.nativeElement, renderer).subscribe(event => {\n            this._width = event.width;\n\n            // render the appropriate layout\n            this.updateActiveLayout();\n        });\n    }\n/**\n * @param {?} changes\n * @return {?}\n */\nngOnChanges(changes: SimpleChanges): void {\n\n        // if the active group has changed then render the appropriate layout\n        if (changes.group.currentValue !== changes.group.previousValue) {\n            this.updateActiveLayout();\n        }\n    }\n/**\n * @return {?}\n */\ngetActiveLayout(): LayoutSwitcherItemDirective | null {\n\n        // if there are currently no layouts then do nothing\n        if (!this._layouts) {\n            return null;\n        }\n\n        // otherwise find layouts that match the active group and that meet the constraints\n        return this._layouts.filter(layout => this.group === layout.getConfig().group).find(layout => {\n\n            let /** @type {?} */ minWidth = layout.getConfig().minWidth || 0;\n            let /** @type {?} */ maxWidth = layout.getConfig().maxWidth || Infinity;\n\n            return this._width >= minWidth && this._width < maxWidth;\n        });\n    }\n/**\n * @return {?}\n */\nupdateActiveLayout(): void {\n\n        // get the layout that should be shown\n        let /** @type {?} */ layout = this.getActiveLayout();\n\n        // check if we are currently showing the layout\n        if (this._activeLayout === layout) {\n            return;\n        }\n\n        // remove the current layout\n        if (this._activeLayout) {\n            this._activeLayout.deactivate();\n        }\n\n        // store the new active layout\n        this._activeLayout = layout;\n\n        // if there is an active layout then activate\n        if (this._activeLayout) {\n            this._activeLayout.activate();\n        }\n    }\n/**\n * @return {?}\n */\nngAfterContentInit(): void {\n\n        // store the initial current element width\n        this._width = this._elementRef.nativeElement.offsetWidth;\n\n        // render the appropriate layout - need a delay as Angular doesn't like changes like this in these lifecycle hooks\n        requestAnimationFrame(this.updateActiveLayout.bind(this));\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: '[uxLayoutSwitcher]'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: ResizeService, },\n{type: Renderer2, },\n{type: ViewContainerRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'group': [{ type: Input },],\n'_layouts': [{ type: ContentChildren, args: [LayoutSwitcherItemDirective, ] },],\n};\n}\n\nfunction LayoutSwitcherDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nLayoutSwitcherDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nLayoutSwitcherDirective.ctorParameters;\n/** @type {?} */\nLayoutSwitcherDirective.propDecorators;\n/** @type {?} */\nLayoutSwitcherDirective.prototype.group;\n/** @type {?} */\nLayoutSwitcherDirective.prototype._layouts;\n/** @type {?} */\nLayoutSwitcherDirective.prototype._width;\n/** @type {?} */\nLayoutSwitcherDirective.prototype._activeLayout;\n/** @type {?} */\nLayoutSwitcherDirective.prototype._elementRef;\n/** @type {?} */\nLayoutSwitcherDirective.prototype._viewContainerRef;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { LayoutSwitcherDirective } from './layout-switcher.directive';\nimport { LayoutSwitcherItemDirective } from './layout-switcher-item.directive';\nimport { ResizeModule } from '../resize/index';\n\nconst /** @type {?} */ DECLARATIONS = [\n    LayoutSwitcherDirective,\n    LayoutSwitcherItemDirective\n];\nexport class LayoutSwitcherModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        ResizeModule\n    ],\n    exports: DECLARATIONS,\n    declarations: DECLARATIONS,\n    providers: [],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction LayoutSwitcherModule_tsickle_Closure_declarations() {\n/** @type {?} */\nLayoutSwitcherModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nLayoutSwitcherModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Pipe, Injectable, PipeTransform } from '@angular/core';\nexport class StringFilterPipe implements PipeTransform {\n/**\n * @param {?} items\n * @param {?} value\n * @return {?}\n */\ntransform(items: any[], value: string): any[] {  \n        if (!items) {\n            return [];\n        }\n        return items.filter(it => it.toLowerCase().indexOf(value.toLowerCase()) >= 0);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Pipe, args: [{\n    name: 'stringFilter'\n}, ] },\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction StringFilterPipe_tsickle_Closure_declarations() {\n/** @type {?} */\nStringFilterPipe.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nStringFilterPipe.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { StringFilterPipe } from './string-filter.pipe';\nimport { NgModule } from '@angular/core';\nexport class StringFilterModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    exports: [StringFilterPipe],\n    declarations: [StringFilterPipe]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction StringFilterModule_tsickle_Closure_declarations() {\n/** @type {?} */\nStringFilterModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nStringFilterModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { StorageAdapter } from './storage-adapter';\nexport class CookieAdapter implements StorageAdapter {\n/**\n * @param {?} key\n * @return {?}\n */\ngetItem(key: string): string {\n\n        if (document.cookie) {\n\n            // get all the cookies for this site\n            const /** @type {?} */ cookies = document.cookie.split(';');\n\n            // process the cookies into a from we can easily manage\n            const /** @type {?} */ match = cookies\n                .map(cookie => ({ key: cookie.split('=')[0].trim(), value: cookie.split('=')[1].trim() }))\n                .find(cookie => cookie.key === key);\n\n            return match ? match.value : null;\n        }\n\n        return null;\n    }\n/**\n * @param {?} key\n * @param {?} value\n * @return {?}\n */\nsetItem(key: string, value: string): void {\n        document.cookie = `${key}=${value}; path=/`;\n    }\n/**\n * @param {?} key\n * @return {?}\n */\nremoveItem(key: string): void {\n\n        document.cookie.split(';').forEach(cookie => {\n            const /** @type {?} */ eqPos = cookie.indexOf('=');\n            const /** @type {?} */ name = eqPos > -1 ? cookie.substr(0, eqPos).trim() : cookie;\n\n            if (name === key) {\n                document.cookie = cookie.trim().replace(/=.*/, `=;expires=${new Date().toUTCString()};path=/`);\n            }\n        });\n    }\n/**\n * @return {?}\n */\nclear(): void {\n\n        // call remove item on each cookie\n        document.cookie.split(';').map(cookie => cookie.split('=')[0].trim())\n            .forEach(cookie => this.removeItem(cookie));\n    }\n/**\n * @return {?}\n */\ngetSupported(): StorageAdapter {\n        // cookies are supported in all browsers\n        return this;\n    }\n\n}","import { StorageAdapter } from './storage-adapter';\nimport { CookieAdapter } from './cookie-adapter';\nexport class LocalStorageAdapter implements StorageAdapter {\n/**\n * @param {?} key\n * @return {?}\n */\ngetItem(key: string): string {\n        return localStorage.getItem(key);\n    }\n/**\n * @param {?} key\n * @param {?} value\n * @return {?}\n */\nsetItem(key: string, value: string): void {\n        localStorage.setItem(key, value);\n    }\n/**\n * @param {?} key\n * @return {?}\n */\nremoveItem(key: string): void {\n        localStorage.removeItem(key);\n    }\n/**\n * @return {?}\n */\nclear(): void {\n        localStorage.clear();\n    }\n/**\n * @return {?}\n */\ngetSupported(): StorageAdapter {\n\n        // if local storage variable does not exist fall back to cookies\n        if (!localStorage) {\n            return new CookieAdapter();\n        }\n\n        // try to make a test save to local storage to see if there are any exceptions\n        try {\n            localStorage.setItem('ux-persistent-data-service', 'ux-persistent-data-service');\n            localStorage.removeItem('ux-persistent-data-service');\n\n            return this;\n        } catch ( /** @type {?} */err) {\n            return new CookieAdapter();\n        }\n    }\n\n}","import { StorageAdapter } from './storage-adapter';\nimport { CookieAdapter } from './cookie-adapter';\nexport class SessionStorageAdapter implements StorageAdapter {\n/**\n * @param {?} key\n * @return {?}\n */\ngetItem(key: string): string {\n        return sessionStorage.getItem(key);\n    }\n/**\n * @param {?} key\n * @param {?} value\n * @return {?}\n */\nsetItem(key: string, value: string): void {\n        sessionStorage.setItem(key, value);\n    }\n/**\n * @param {?} key\n * @return {?}\n */\nremoveItem(key: string): void {\n        sessionStorage.removeItem(key);\n    }\n/**\n * @return {?}\n */\nclear(): void {\n        sessionStorage.clear();\n    }\n/**\n * @return {?}\n */\ngetSupported(): StorageAdapter {\n\n        // if local storage variable does not exist fall back to cookies\n        if (!sessionStorage) {\n            return new CookieAdapter();\n        }\n\n        // try to make a test save to local storage to see if there are any exceptions\n        try {\n            sessionStorage.setItem('ux-persistent-data-service', 'ux-persistent-data-service');\n            sessionStorage.removeItem('ux-persistent-data-service');\n\n            return this;\n        } catch ( /** @type {?} */err) {\n            return new CookieAdapter();\n        }\n    }\n\n}","import { Injectable } from '@angular/core';\nimport { StorageAdapter } from './adapters/storage-adapter';\nimport { CookieAdapter } from './adapters/cookie-adapter';\nimport { LocalStorageAdapter } from './adapters/local-storage-adapter';\nimport { SessionStorageAdapter } from './adapters/session-storage-adapter';\nexport class PersistentDataService {\n/**\n * Save the item in some form of persistent storage\n * @param {?} key\n * @param {?} value\n * @param {?=} type\n * @return {?}\n */\nsetItem(key: string, value: string, type: PersistentDataStorageType = PersistentDataStorageType.LocalStorage): void {\n        this.getAdapter(type).setItem(key, value);\n    }\n/**\n * Get a stored value from persistent storage\n * @param {?} key\n * @param {?=} type\n * @return {?}\n */\ngetItem(key: string, type: PersistentDataStorageType = PersistentDataStorageType.LocalStorage): string {\n        return this.getAdapter(type).getItem(key);\n    }\n/**\n * Remove a stored value from persistent storage\n * @param {?} key\n * @param {?=} type\n * @return {?}\n */\nremoveItem(key: string, type: PersistentDataStorageType = PersistentDataStorageType.LocalStorage): void {\n        this.getAdapter(type).removeItem(key);\n    }\n/**\n * Remove a stored value from persistent storage\n * @param {?=} type\n * @return {?}\n */\nclear(type: PersistentDataStorageType = PersistentDataStorageType.LocalStorage): void {\n        this.getAdapter(type).clear();\n    }\n/**\n * Return the appropriate adapter based on the type requested\n * @param {?} type\n * @return {?}\n */\nprivate getAdapter(type: PersistentDataStorageType): StorageAdapter {\n\n        switch (type) {\n\n            case PersistentDataStorageType.Cookie:\n                return new CookieAdapter();\n\n            case PersistentDataStorageType.LocalStorage:\n                const /** @type {?} */ localStorageAdapter = new LocalStorageAdapter();\n                return localStorageAdapter.getSupported();\n\n            case PersistentDataStorageType.SessionStorage:\n                const /** @type {?} */ sessionStorageAdapter = new SessionStorageAdapter();\n                return sessionStorageAdapter.getSupported();\n        }\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction PersistentDataService_tsickle_Closure_declarations() {\n/** @type {?} */\nPersistentDataService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nPersistentDataService.ctorParameters;\n}\n\nexport type PersistentDataStorageType = number;\nexport let PersistentDataStorageType: any = {};\nPersistentDataStorageType.LocalStorage = 0;\nPersistentDataStorageType.Cookie = 1;\nPersistentDataStorageType.SessionStorage = 2;\nPersistentDataStorageType[PersistentDataStorageType.LocalStorage] = \"LocalStorage\";\nPersistentDataStorageType[PersistentDataStorageType.Cookie] = \"Cookie\";\nPersistentDataStorageType[PersistentDataStorageType.SessionStorage] = \"SessionStorage\";\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\n\nimport { PersistentDataService } from './persistent-data.service';\nexport class PersistentDataModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    providers: [PersistentDataService],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction PersistentDataModule_tsickle_Closure_declarations() {\n/** @type {?} */\nPersistentDataModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nPersistentDataModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","\n/**\n * @abstract\n */\nexport abstract class StorageAdapter {\n/**\n * @abstract\n * @param {?} key\n * @return {?}\n */\ngetItem(key: string) {}\n/**\n * @abstract\n * @param {?} key\n * @param {?} value\n * @return {?}\n */\nsetItem(key: string, value: string) {}\n/**\n * @abstract\n * @param {?} key\n * @return {?}\n */\nremoveItem(key: string) {}\n/**\n * @abstract\n * @return {?}\n */\nclear() {}\n/**\n * @abstract\n * @return {?}\n */\ngetSupported() {}\n}","import { Component, Input } from '@angular/core';\nexport class BreadcrumbsComponent {\n\n     crumbs: Breadcrumb[];\n/**\n * @param {?} event\n * @param {?} crumb\n * @return {?}\n */\nclickCrumb(event: MouseEvent, crumb: Breadcrumb) {\n        if (crumb.onClick) {\n            crumb.onClick.call(null, event);\n        }\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-breadcrumbs',\n    template: `\n      <ol class=\"breadcrumb\">\n          <li *ngFor=\"let crumb of crumbs\">\n\n              <!-- If there is a router link then use a tag -->\n              <a *ngIf=\"crumb.routerLink\"\n                 [routerLink]=\"crumb.routerLink\" \n                 [fragment]=\"crumb.fragment\" \n                 [queryParams]=\"crumb.queryParams\" \n                 (click)=\"clickCrumb($event, crumb)\">\n                      {{ crumb.title }}\n              </a>\n\n              <!-- If there is not router link then display text in a span -->\n              <span *ngIf=\"!crumb.routerLink\">{{ crumb.title }}</span>\n          </li>\n      </ol>\n    `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'crumbs': [{ type: Input },],\n};\n}\n\nfunction BreadcrumbsComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nBreadcrumbsComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nBreadcrumbsComponent.ctorParameters;\n/** @type {?} */\nBreadcrumbsComponent.propDecorators;\n/** @type {?} */\nBreadcrumbsComponent.prototype.crumbs;\n}\n\n\nexport interface Breadcrumb {\n    title: string;\n    routerLink?: string;\n    fragment?: string;\n    queryParams?: any;\n    onClick?: (event: MouseEvent) => void;\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\n\nimport { BreadcrumbsComponent } from './breadcrumbs.component';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nexport class BreadcrumbsModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        CommonModule, \n        RouterModule\n    ],\n    exports: [BreadcrumbsComponent],\n    declarations: [BreadcrumbsComponent]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction BreadcrumbsModule_tsickle_Closure_declarations() {\n/** @type {?} */\nBreadcrumbsModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nBreadcrumbsModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Input, forwardRef, Output, EventEmitter } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\n\nexport const /** @type {?} */ CHECKBOX_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => CheckboxComponent),\n    multi: true\n};\nexport class CheckboxComponent implements ControlValueAccessor {\n\n     name: string = '';\n     clickable: boolean = true;\n     disabled: boolean = false;\n     simplified: boolean = false;\n     indeterminateValue: any = -1;\n     valueChange: EventEmitter<any> = new EventEmitter<any>();\n/**\n * @return {?}\n */\nget value() {\n        return this._value;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset value(value: any) {\n        this._value = value;\n\n        // invoke change event\n        this.valueChange.emit(this._value);\n\n        // call callback\n        this.onChangeCallback(this._value);\n    }\nprivate _value: any = false;\n\n    onTouchedCallback: () => void = () => { };\n    onChangeCallback: (_: any) => void = () => { };\nconstructor() { }\n/**\n * @return {?}\n */\ntoggleChecked() {\n\n        if (this.disabled === true || this.clickable === false) {\n            return;\n        }\n\n        if (this.value === this.indeterminateValue) {\n            this.value = true;\n            return;\n        }\n\n        // toggle the checked state\n        this.value = !this.value;\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nkeyDown(event: KeyboardEvent) {\n        // then toggle the checkbox\n        this.toggleChecked();\n\n        // prevent default browser behavior\n        event.stopPropagation();\n        event.preventDefault();\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nwriteValue(value: boolean) {\n        if (value !== this._value) {\n            this._value = value;\n        }\n    }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnChange(fn: any) {\n        this.onChangeCallback = fn;\n    }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnTouched(fn: any) {\n        this.onTouchedCallback = fn;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-checkbox',\n    template: `\n      <div class=\"ux-checkbox\" tabindex=\"0\"\n          [class.ux-checked]=\"value == true\"\n          [class.ux-indeterminate]=\"value == indeterminateValue\"\n          [class.ux-simplified]=\"simplified == true\"\n          [class.ux-disabled]=\"disabled == true\"\n          (keydown.space)=\"keyDown($event)\">\n\n          <input type=\"checkbox\" role=\"checkbox\" tabindex=\"-1\"\n              [name]=\"name\" \n              [checked]=\"value\" \n              [disabled]=\"disabled\" />\n        \n      </div>\n\n      <div class=\"ux-checkbox-content\">\n          <ng-content></ng-content>\n      </div>\n    `,\n    providers: [CHECKBOX_VALUE_ACCESSOR],\n    host: {\n        '(click)': 'toggleChecked()'\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'name': [{ type: Input },],\n'clickable': [{ type: Input },],\n'disabled': [{ type: Input },],\n'simplified': [{ type: Input },],\n'indeterminateValue': [{ type: Input },],\n'valueChange': [{ type: Output },],\n'value': [{ type: Input },],\n};\n}\n\nfunction CheckboxComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nCheckboxComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nCheckboxComponent.ctorParameters;\n/** @type {?} */\nCheckboxComponent.propDecorators;\n/** @type {?} */\nCheckboxComponent.prototype.name;\n/** @type {?} */\nCheckboxComponent.prototype.clickable;\n/** @type {?} */\nCheckboxComponent.prototype.disabled;\n/** @type {?} */\nCheckboxComponent.prototype.simplified;\n/** @type {?} */\nCheckboxComponent.prototype.indeterminateValue;\n/** @type {?} */\nCheckboxComponent.prototype.valueChange;\n/** @type {?} */\nCheckboxComponent.prototype._value;\n/** @type {?} */\nCheckboxComponent.prototype.onTouchedCallback;\n/** @type {?} */\nCheckboxComponent.prototype.onChangeCallback;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport {FormsModule} from '@angular/forms';\n\nimport { CheckboxComponent } from './checkbox.component';\nexport class CheckboxModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [FormsModule],\n    exports: [CheckboxComponent],\n    declarations: [CheckboxComponent]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction CheckboxModule_tsickle_Closure_declarations() {\n/** @type {?} */\nCheckboxModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nCheckboxModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { ColumnSortingDirective, ColumnSortingOrder } from './column-sorting.directive';\nimport { Component, Input, Output, EventEmitter } from '@angular/core';\nexport class ColumnSortingComponent {\n\n     state: ColumnSortingState;\n     key: string;\n     orderNumber: number;\n     stateChange: EventEmitter<ColumnSortingState> = new EventEmitter<ColumnSortingState>();\nprivate _parent: ColumnSortingDirective;\n    columnSortingState = ColumnSortingState;\n/**\n * @param {?} parent\n * @return {?}\n */\ninitParent(parent: ColumnSortingDirective) {\n        this._parent = parent;\n\n        // watch for any events\n        this._parent.events.subscribe(event => {\n\n            let /** @type {?} */ idx = event.findIndex(column => column.key === this.key);\n\n            if (idx == -1) {\n                this.state = ColumnSortingState.NoSort;\n            }\n\n            // only store the number if we have 2 or more columns being sorted\n            if (event.length > 1) {\n                this.orderNumber = idx === -1 ? null : idx + 1;\n            } else {\n                this.orderNumber = null;\n            }\n\n            this.stateChange.emit(this.state);\n\n        });\n    }\n/**\n * @return {?}\n */\nchangeState(): ColumnSortingOrder[] {\n\n        if (this.state === ColumnSortingState.Ascending) {\n            this.state = ColumnSortingState.Descending;\n        } else if (this.state === ColumnSortingState.Descending) {\n            this.state = ColumnSortingState.NoSort;\n        } else {\n            this.state = ColumnSortingState.Ascending;\n        }\n\n        // inform parent\n        return this._parent.toggleColumn(this.key, this.state);\n\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-column-sorting',\n    template: `\n      <div class=\"ux-column-sorting\">\n          <i class=\"ux-column-sorting-icon hpe-icon\" \n              [class.hpe-ascend]=\"state === columnSortingState.Ascending\" \n              [class.hpe-descend]=\"state === columnSortingState.Descending\" \n              [class.column-sorting-icon-hidden]=\"state === columnSortingState.NoSort\"></i>\n          <p class=\"ux-column-sorting-number\">{{ orderNumber }}</p>\n      </div>\n    `,\n    exportAs: 'ux-column-sorting'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'state': [{ type: Input },],\n'key': [{ type: Input },],\n'orderNumber': [{ type: Input },],\n'stateChange': [{ type: Output },],\n};\n}\n\nfunction ColumnSortingComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nColumnSortingComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nColumnSortingComponent.ctorParameters;\n/** @type {?} */\nColumnSortingComponent.propDecorators;\n/** @type {?} */\nColumnSortingComponent.prototype.state;\n/** @type {?} */\nColumnSortingComponent.prototype.key;\n/** @type {?} */\nColumnSortingComponent.prototype.orderNumber;\n/** @type {?} */\nColumnSortingComponent.prototype.stateChange;\n/** @type {?} */\nColumnSortingComponent.prototype._parent;\n/** @type {?} */\nColumnSortingComponent.prototype.columnSortingState;\n}\n\nexport type ColumnSortingState = number;\nexport let ColumnSortingState: any = {};\nColumnSortingState.Ascending = 0;\nColumnSortingState.Descending = 1;\nColumnSortingState.NoSort = 2;\nColumnSortingState[ColumnSortingState.Ascending] = \"Ascending\";\nColumnSortingState[ColumnSortingState.Descending] = \"Descending\";\nColumnSortingState[ColumnSortingState.NoSort] = \"NoSort\";\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { ColumnSortingComponent, ColumnSortingState } from './column-sorting.component';\nimport { Directive, Host, QueryList, ContentChildren, Input } from '@angular/core';\nimport { Subject } from 'rxjs/Subject';\nexport class ColumnSortingDirective {\n\n     singleSort: boolean;\n     components: QueryList<ColumnSortingComponent>;\n\n    events: Subject<ColumnSortingOrder[]> = new Subject<ColumnSortingOrder[]>();\n    order: ColumnSortingOrder[] = [];\n/**\n * @return {?}\n */\nngAfterViewInit() {\n        this.components.forEach(component => component.initParent(this));\n    }\n/**\n * @param {?} key\n * @param {?} state\n * @return {?}\n */\ntoggleColumn(key: string, state: ColumnSortingState) {\n\n        if (this.singleSort) {\n            if (state === ColumnSortingState.NoSort) {\n                this.order = [];\n            } else {\n                this.order = [{key: key, state: state}];\n            }\n        } else {\n            // reorder columns here\n            let /** @type {?} */ idx = this.order.findIndex(column => column.key === key);\n\n            // if wasnt previously selected add to list\n            if (idx === -1) {\n                this.order.push({ key: key, state: state});\n            } else if (state === ColumnSortingState.Ascending || state === ColumnSortingState.Descending) {\n                this.order.splice(idx, 1);\n                this.order.push({ key: key, state: state});\n            } else {\n                this.order.splice(idx, 1);\n            }\n        }\n\n            this.events.next(this.order);\n            // return the order\n            return this.order;\n\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: '[uxColumnSorting]'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'singleSort': [{ type: Input },],\n'components': [{ type: ContentChildren, args: [ColumnSortingComponent, ] },],\n};\n}\n\nfunction ColumnSortingDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nColumnSortingDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nColumnSortingDirective.ctorParameters;\n/** @type {?} */\nColumnSortingDirective.propDecorators;\n/** @type {?} */\nColumnSortingDirective.prototype.singleSort;\n/** @type {?} */\nColumnSortingDirective.prototype.components;\n/** @type {?} */\nColumnSortingDirective.prototype.events;\n/** @type {?} */\nColumnSortingDirective.prototype.order;\n}\n\n\nexport interface ColumnSortingOrder {\n    key: string;\n    state: ColumnSortingState; \n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\n\nimport { ColumnSortingComponent } from './column-sorting.component';\n\nimport { ColumnSortingDirective } from './column-sorting.directive';\nexport class ColumnSortingModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    exports: [ColumnSortingComponent, ColumnSortingDirective],\n    declarations: [ColumnSortingComponent, ColumnSortingDirective]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ColumnSortingModule_tsickle_Closure_declarations() {\n/** @type {?} */\nColumnSortingModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nColumnSortingModule.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable } from '@angular/core';\nimport { DashboardWidgetComponent } from './widget/dashboard-widget.component';\nimport { DashboardOptions } from './dashboard.component';\nimport { Subject } from 'rxjs/Subject';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nexport class DashboardService {\nprivate _dashboard: HTMLElement;\nprivate _widgets: DashboardWidgetComponent[] = [];\nprivate _options: DashboardOptions;\nprivate _options$: Subject<DashboardOptions> = new Subject<DashboardOptions>();\nprivate _placeholder: DashboardPlaceholder = { visible: false, x: 0, y: 0, width: 0, height: 0 };\nprivate _widgetOrigin: { column?: number, row?: number, columnSpan?: number, rowSpan?: number };\nprivate _dimensions: DashboardDimensions = {};\nprivate _actionWidget: DashboardAction;\nprivate _columnWidth: number = 0;\nprivate _rowHeight: number = 0;\nprivate _stacked: boolean = false;\nprivate _cache: DashboardCache[];\nprivate _mouseEvent: MouseEvent;\nprivate _defaultOptions: DashboardOptions = {\n        columns: 5,\n        padding: 5,\n        minWidth: 100,\n        minHeight: 100,\n        emptyRow: true\n    };\n\n    height: BehaviorSubject<number> = new BehaviorSubject<number>(0);\n    layout: Subject<DashboardLayoutData[]> = new Subject<DashboardLayoutData[]>();\n/**\n * Return all the options currently being used as a subject\n * @return {?}\n */\noptions(): Subject<DashboardOptions> {\n        return this._options$;\n    }\n/**\n * Return all the options currently being used\n * @return {?}\n */\ngetOptions(): DashboardOptions {\n        return this._options;\n    }\n/**\n * Get all the default dashboard options\n * @return {?}\n */\ngetDefaultOptions(): DashboardOptions {\n        return this._defaultOptions;\n    }\n/**\n * Set the options - automatically set default values where not specified\n * @param {?} options The DashboardOptions that will configure the dashboard\n * @return {?}\n */\nsetOptions(options: DashboardOptions): void {\n        this._options = Object.assign({}, this._defaultOptions, options);\n\n        // update the observable\n        this._options$.next(this._options);\n    }\n/**\n * Allow uniform spacing around each widget\n * @param {?} padding The number of pixels around each widget\n * @return {?}\n */\nsetPadding(padding: number) {\n        this._options.padding = padding;\n        this.options().next(this._options);\n    }\n/**\n * Set the dashboard container element\n * @param {?} dashboard The HTMLElement that is the dashboard container\n * @return {?}\n */\nsetDashboard(dashboard: HTMLElement): void {\n        this._dashboard = dashboard;\n    }\n/**\n * Add a widget to the dashboard\n * @param {?} widget The widget component to add to the dashboard\n * @return {?}\n */\naddWidget(widget: DashboardWidgetComponent): void {\n        this._widgets.push(widget);\n        \n        // re-render the dashboard\n        this.renderDashboard();\n    }\n/**\n * Remove a widget from the dashboard\n * @param {?} widget The widget to remove\n * @return {?}\n */\nremoveWidget(widget: DashboardWidgetComponent): void {\n\n        // remove a widget from the dashboard\n        this._widgets = this._widgets.filter(wgt => wgt !== widget);\n        \n        // re-render the dashboard\n        this.renderDashboard();\n    }\n/**\n * Indicate that the dashboard element has been resized\n * @param {?} width The width of the dashboard element in px\n * @param {?} height The height of the dashboard element in px\n * @return {?}\n */\nsetDimensions(width: number, height: number): void {\n        this._dimensions.width = width;\n        this._dimensions.height = height;\n\n        // trigger re-render\n        this.renderDashboard();\n    }\n/**\n * Produce an object containing all the required layout data.\n * This can be useful for exporting/saving a layout\n * @return {?}\n */\ngetLayoutData(): DashboardLayoutData[] {\n        return this._widgets.map(widget => {\n            return { id: widget.getId(), col: widget.getColumn(), row: widget.getRow(), colSpan: widget.getColumnSpan(), rowSpan: widget.getRowSpan() };\n        });\n    }\n/**\n * Position widgets programatically\n * @param {?} layout\n * @return {?}\n */\nsetLayoutData(layout: DashboardLayoutData[]): void {\n        // iterate through each widget data and find a match\n        layout.forEach(widget => {\n\n            // find the matching widget\n            let /** @type {?} */ target = this._widgets.find(wgt => wgt.getId() === widget.id);\n\n            if (target) {\n                target.setColumn(widget.col);\n                target.setRow(widget.row);\n                target.setColumnSpan(widget.colSpan);\n                target.setRowSpan(widget.rowSpan);\n            }\n        });\n    }\n/**\n * Update the positions and sizes of the widgets\n * @return {?}\n */\nrenderDashboard(): void {\n\n        // do nothing if chart options haven't yet been initialised\n        if (!this._options) {\n            return;\n        }\n\n        // get the dimensions of the dashboard\n        this._columnWidth = this._dimensions.width / this._options.columns;\n        this._rowHeight = this._options.rowHeight || this._columnWidth;\n\n        // ensure the column width is not below the min widths\n        if (this._columnWidth < this._options.minWidth) {\n            this.setStacked(true);\n        } else {\n            this.setStacked(false);\n        }\n\n        // ensure the row height is not below the min widths\n        if (this._rowHeight < this._options.minWidth) {\n            this._rowHeight = this._options.minWidth;\n        }\n\n        this.setDashboardLayout();\n\n        // iterate through each widget and set the size - except the one being resized\n        this._widgets.filter(widget => !this._actionWidget || widget !== this._actionWidget.widget)\n            .forEach(widget => widget.render());\n    }\n/**\n * Determine where widgets should be positioned based on their positions, width and the size of the container\n * @return {?}\n */\nsetDashboardLayout(): void {\n\n        // find any widgets that do not currently have a position set\n        this._widgets.filter(widget => widget.getColumn() === undefined || widget.getRow() === undefined)\n            .forEach(widget => this.setWidgetPosition(widget));\n\n        this.setDashboardHeight();\n    }\n/**\n * @param {?} stacked\n * @return {?}\n */\nsetStacked(stacked: boolean): void {\n\n        // only do the following if the stacked state has changed\n        if (stacked === this._stacked) {\n            return;\n        }\n\n        // store the stacked state\n        this._stacked = stacked;\n\n        // update the stacked state for all widgets\n        this._widgets.forEach(widget => widget.setStacked(this._stacked));\n\n        // if stacked is true we need to do some reordering etc..\n        if (stacked === true) {\n\n            // iterate through each widget set it's stacked state and\n            this.getWidgetsByOrder().forEach((widget, idx) => {\n                widget.setStacked(true);\n                widget.setColumn(0);\n                widget.setRow(idx);\n            });\n        }\n\n    }\n/**\n * @return {?}\n */\ngetWidgetsByOrder(): DashboardWidgetComponent[] {\n        return this._widgets.sort((w1, w2) => {\n\n            let /** @type {?} */ w1Position = w1.getColumn() * w1.getRow();\n            let /** @type {?} */ w2Position = w2.getColumn() * w2.getRow();\n\n            if (w1Position < w2Position) {\n                return -1;\n            }\n\n            if (w1Position > w2Position) {\n                return 1;\n            }\n\n            return 0;\n        });\n    }\n/**\n * Find a position that a widget can fit in the dashboard\n * @param {?} widget The widget to try and position\n * @return {?}\n */\nsetWidgetPosition(widget: DashboardWidgetComponent): void {\n\n        // find a position for the widget\n        let /** @type {?} */ position = 0;\n        let /** @type {?} */ success = false;\n\n        // repeat until a space is found\n        while (!success) {\n\n            // get a position to try\n            let /** @type {?} */ column = position % this._options.columns;\n            let /** @type {?} */ row = Math.floor(position / this._options.columns);\n\n            // check the current position\n            if (this.getPositionAvailable(column, row, widget.getColumnSpan(), widget.getRowSpan())) {\n                success = true;\n                widget.setColumn(column);\n                widget.setRow(row);\n                return;\n            }\n\n            position++;\n        }\n    }\n/**\n * Check if a position in the dashboard is vacant or not\n * @param {?} column\n * @param {?} row\n * @param {?} columnSpan\n * @param {?} rowSpan\n * @param {?=} ignoreWidget\n * @return {?}\n */\ngetPositionAvailable(column: number, row: number, columnSpan: number, rowSpan: number, ignoreWidget?: DashboardWidgetComponent): boolean {\n\n        // get a list of grid spaces that are populated\n        let /** @type {?} */ spaces = this.getOccupiedSpaces();\n\n        // check if the block would still be in bounds\n        if (column + columnSpan > this._options.columns) {\n            return false;\n        }\n\n        // check each required position\n        for (let /** @type {?} */ x = column; x < column + columnSpan; x++) {\n            for (let /** @type {?} */ y = row; y < row + rowSpan; y++) {\n                if (spaces.find(block => block.column === x && block.row === y && block.widget !== ignoreWidget)) {\n                    return false;\n                }\n            }\n        }\n\n        return true;\n    }\n/**\n * @return {?}\n */\ngetOccupiedSpaces(): DashboardSpace[] {\n\n        // find all spaces that are currently occupied\n        return this._widgets.filter(widget => widget.getColumn() !== undefined && widget.getRow() !== undefined)\n            .reduce((value, widget) => {\n\n                this.forEachBlock(widget, (column, row) => value.push({ widget: widget, column: column, row: row }));\n\n                return value;\n            }, []);\n    }\n/**\n * Begin resizing a widget\n * @param {?} action The the widget to resize\n * @return {?}\n */\nonResizeStart(action: DashboardAction): void {\n\n        // store the mouse event\n        this._mouseEvent = action.event;\n        this._actionWidget = action;\n\n        // bring the widget to the font\n        this.bringToFront(action.widget);\n    }\n/**\n * @param {?} action\n * @return {?}\n */\nonResizeDrag(action: DashboardAction): void {\n\n        // if there was no movement then do nothing\n        if (action.event.x === this._mouseEvent.x && action.event.y === this._mouseEvent.y) {\n            return;\n        }\n\n        // update the stored mouse event\n        this._mouseEvent = action.event;\n\n        // get handle for direction\n        let /** @type {?} */ handle = action.widget.getHandles().find(hnd => hnd.direction === action.direction);\n\n        // get the bounds of the handle\n        let /** @type {?} */ bounds = handle.element.getBoundingClientRect();\n\n        // get the center of the handle\n        let /** @type {?} */ centerX = bounds.left + (bounds.width / 2);\n        let /** @type {?} */ centerY = bounds.top + (bounds.height / 2);\n\n        // get the current mouse position\n        let /** @type {?} */ mouseX = action.event.x - centerX;\n        let /** @type {?} */ mouseY = action.event.y - centerY;\n\n        // store the new proposed dimensions for the widget\n        let /** @type {?} */ dimensions: DashboardWidgetDimensions = {\n            x: action.widget.actualX,\n            y: action.widget.actualY,\n            width: action.widget.actualWidth,\n            height: action.widget.actualHeight\n        };\n\n        // update widget based on the handle being dragged\n        switch (action.direction) {\n\n            case ActionDirection.Right:\n                dimensions.width += mouseX;\n                break;\n\n            case ActionDirection.Left:\n                dimensions.x += mouseX;\n                dimensions.width -= mouseX;\n\n                if (dimensions.width < this._options.minWidth) {\n                    let /** @type {?} */ difference = this._options.minWidth - dimensions.width;\n                    dimensions.x -= difference;\n                    dimensions.width += difference;\n                }\n\n                break;\n\n            case ActionDirection.Bottom:\n                dimensions.height += mouseY;\n                break;\n\n            case ActionDirection.Top:\n                dimensions.y += mouseY;\n                dimensions.height -= mouseY;\n\n                if (dimensions.height < this._options.minHeight) {\n                    let /** @type {?} */ difference = this._options.minHeight - dimensions.height;\n                    dimensions.y -= difference;\n                    dimensions.height += difference;\n                }\n                break;\n\n            // Support resizing on multiple axis simultaneously\n            case ActionDirection.TopLeft:\n\n                dimensions.x += mouseX;\n                dimensions.width -= mouseX;\n\n                if (dimensions.width < this._options.minWidth) {\n                    let /** @type {?} */ difference = this._options.minWidth - dimensions.width;\n                    dimensions.x -= difference;\n                    dimensions.width += difference;\n                }\n\n                dimensions.y += mouseY;\n                dimensions.height -= mouseY;\n\n                if (dimensions.height < this._options.minHeight) {\n                    let /** @type {?} */ difference = this._options.minHeight - dimensions.height;\n                    dimensions.y -= difference;\n                    dimensions.height += difference;\n                }\n                break;\n\n            case ActionDirection.TopRight:\n                dimensions.width += mouseX;\n                dimensions.y += mouseY;\n                dimensions.height -= mouseY;\n\n                if (dimensions.height < this._options.minHeight) {\n                    let /** @type {?} */ difference = this._options.minHeight - dimensions.height;\n                    dimensions.y -= difference;\n                    dimensions.height += difference;\n                }\n                break;\n\n            case ActionDirection.BottomLeft:\n                dimensions.height += mouseY;\n                dimensions.x += mouseX;\n                dimensions.width -= mouseX;\n\n                if (dimensions.width < this._options.minWidth) {\n                    let /** @type {?} */ difference = this._options.minWidth - dimensions.width;\n                    dimensions.x -= difference;\n                    dimensions.width += difference;\n                }\n                break;\n\n            case ActionDirection.BottomRight:\n                dimensions.height += mouseY;\n                dimensions.width += mouseX;\n                break;\n        }\n\n        let /** @type {?} */ currentWidth = action.widget.actualX + action.widget.actualWidth;\n        let /** @type {?} */ currentHeight = action.widget.actualY + action.widget.actualHeight;\n\n        // ensure values are within the dashboard bounds\n        if (dimensions.x < 0) {\n            dimensions.x = 0;\n            dimensions.width = currentWidth;\n        }\n\n        if (dimensions.y < 0) {\n            dimensions.y = 0;\n            dimensions.height = currentHeight;\n        }\n\n        if ((dimensions.x + dimensions.width) > this._dimensions.width) {\n            dimensions.width = this._dimensions.width - dimensions.x;\n        }\n\n        if ((dimensions.y + dimensions.height) > this._dimensions.height) {\n            dimensions.height = currentHeight;\n        }\n\n        // if the proposed width is smaller than allowed then reset width to minimum and ignore x changes\n        if (dimensions.width < this._options.minWidth) {\n            dimensions.x = action.widget.actualX;\n            dimensions.width = this._options.minWidth;\n        }\n\n        // if the proposed height is smaller than allowed then reset height to minimum and ignore y changes\n        if (dimensions.height < this._options.minHeight) {\n            dimensions.y = action.widget.actualY;\n            dimensions.height = this._options.minHeight;\n        }\n\n        // update the widget actual values\n        action.widget.setBounds(dimensions.x, dimensions.y, dimensions.width, dimensions.height);\n\n        // update placeholder position and value\n        this.setPlaceholderBounds(true, dimensions.x, dimensions.y, dimensions.width, dimensions.height);\n\n        // show the widget positions if the current positions and sizes were to persist\n        this.updateWidgetPositions(action.widget);\n    }\n/**\n * @return {?}\n */\nonResizeEnd(): void {\n\n        // commit resize changes\n        this.commitWidgetChanges();\n\n        // hide placeholder\n        this.getPlaceholder().visible = false;\n\n        this._actionWidget = null;\n        this._mouseEvent = null;\n\n        // ensure any vacant upper spaces are filled where required\n        this.shiftWidgetsUp();\n\n        // update dashboard height\n        this.setDashboardHeight();\n\n        // emit information about the layout\n        this.layout.next(this.getLayoutData());\n    }\n/**\n * @param {?} action\n * @return {?}\n */\nonDragStart(action: DashboardAction): void {\n        this.onResizeStart(action);\n\n        // store the starting placeholder position\n        this.setWidgetOrigin();\n\n        this.cacheWidgets();\n    }\n/**\n * @return {?}\n */\nonDragEnd(): void {\n        this.onResizeEnd();\n\n        this._widgetOrigin = {};\n    }\n/**\n * @param {?} action\n * @return {?}\n */\nonDrag(action: DashboardAction): void {\n\n        // if there was no movement then do nothing\n        if (action.event.pageX === this._mouseEvent.pageX && action.event.pageY === this._mouseEvent.pageY) {\n            return;\n        }\n\n        // get the current mouse position\n        let /** @type {?} */ mouseX = action.event.pageX - this._mouseEvent.pageX;\n        let /** @type {?} */ mouseY = action.event.pageY - this._mouseEvent.pageY;\n\n        // store the latest event\n        this._mouseEvent = action.event;\n\n        let /** @type {?} */ dimensions: DashboardWidgetDimensions = {\n            x: action.widget.actualX + mouseX,\n            y: action.widget.actualY + mouseY,\n            width: action.widget.actualWidth,\n            height: action.widget.actualHeight\n        };\n\n        this.restoreWidgets(true);\n\n        // update widget position\n        action.widget.setBounds(dimensions.x, dimensions.y, dimensions.width, dimensions.height);\n\n        // update placeholder position and value\n        this.setPlaceholderBounds(true, dimensions.x, dimensions.y, dimensions.width, dimensions.height);\n\n        // show the widget positions if the current positions and sizes were to persist\n        this.shiftWidgets();\n\n        this.setDashboardHeight();\n    }\n/**\n * @return {?}\n */\ncacheWidgets(): void {\n        this._cache = this._widgets.map(widget => {\n            return {\n                id: widget.getId(),\n                column: widget.getColumn(),\n                row: widget.getRow()\n            };\n        });\n    }\n/**\n * @param {?=} ignoreActionWidget\n * @return {?}\n */\nrestoreWidgets(ignoreActionWidget: boolean = false): void {\n        this._cache.filter(widget => !ignoreActionWidget || widget.id !== this._actionWidget.widget.getId()).forEach(widget => {\n            let /** @type {?} */ match = this._widgets.find(wgt => wgt.getId() === widget.id);\n\n            if (match) {\n                match.setColumn(widget.column);\n                match.setRow(widget.row);\n            }\n        });\n    }\n/**\n * When dragging any widgets that need to be moved should be moved to an appropriate position\n * @return {?}\n */\nshiftWidgets(): void {\n\n        let /** @type {?} */ widgetsToMove: DashboardWidgetComponent[] = [];\n\n        // check if there are any widgets under the placeholder\n        for (let /** @type {?} */ row = this.getPlaceholder().row; row < this.getPlaceholder().row + this.getPlaceholder().rowSpan; row++) {\n            for (let /** @type {?} */ column = this.getPlaceholder().column; column < this.getPlaceholder().column + this.getPlaceholder().columnSpan; column++) {\n\n                // store reference to any widgets that need moved\n                this.getOccupiedSpaces()\n                    .filter(space => space.column === column && space.row === row && space.widget !== this._actionWidget.widget)\n                    .forEach(space => widgetsToMove.push(space.widget));\n            }\n        }\n\n        // remove any duplicates\n        widgetsToMove = widgetsToMove.filter((widget, idx, array) => array.indexOf(widget) === idx);\n\n        // if no widgets need moved then we can stop here\n        if (widgetsToMove.length === 0) {\n            return;\n        }\n\n        // create a duplicate we can use to keep track of which have been moved\n        let /** @type {?} */ unmovedWidgets = widgetsToMove.slice();\n\n        // attempt to move any widgets to the previous widget position\n        widgetsToMove.forEach(widget => {\n\n            // get a grid off all occupied spaces - taking into account the placeholder and ignoring widgets that need moved\n            let /** @type {?} */ grid = this.getOccupiedSpaces().filter(space => !unmovedWidgets.find(wgt => wgt === space.widget));\n\n            // iterate each free block\n            for (let /** @type {?} */ row = this._widgetOrigin.row; row < this._widgetOrigin.row + this._widgetOrigin.rowSpan; row++) {\n                for (let /** @type {?} */ column = this._widgetOrigin.column; column < this._widgetOrigin.column + this._widgetOrigin.columnSpan; column++) {\n\n                    // determine if the block can fit in this space\n                    let /** @type {?} */ requiredSpaces = this.getRequiredSpacesFromPoint(widget, column, row);\n\n                    // check if widget would fit in space\n                    let /** @type {?} */ available = requiredSpaces.every(space => {\n                        return !grid.find(gridSpace => gridSpace.column === space.column && gridSpace.row === space.row) && space.column < this.getColumnCount();\n                    });\n\n                    if (available) {\n                        widget.setColumn(column);\n                        widget.setRow(row);\n                        unmovedWidgets.splice(unmovedWidgets.findIndex(wgt => wgt === widget), 1);\n                        return;\n                    }\n                }\n            }\n\n            // if we get to here then we can't simply swap the positions - next try moving right\n            if (this.canWidgetMoveRight(widget, true)) {\n\n                // after the shift check if placeholder position is still valid\n                this.validatePlaceholderPosition(ActionDirection.Right);\n                return;\n            }\n\n            // next try moving left\n            if (this.canWidgetMoveLeft(widget, true)) {\n\n                // after the shift check if placeholder position is still valid\n                this.validatePlaceholderPosition(ActionDirection.Left);\n                return;\n            }\n\n            // determine the distance that the widget needs to be moved down\n            let /** @type {?} */ distance = (this._actionWidget.widget.getRow() - widget.getRow()) + this._actionWidget.widget.getRowSpan();\n\n            // as a last resort move the widget downwards\n            this.moveWidgetDown(widget, distance);\n        });\n    }\n/**\n * After shifts have taken place we should verify the place holder position is still valid\n * @param {?} shiftDirection - the position widgets were shifted\n * @return {?}\n */\nvalidatePlaceholderPosition(shiftDirection: ActionDirection) {\n\n        // check if the placeholder is over a widget\n        if (this.getWidgetsAtPosition(this.getPlaceholder().column, this.getPlaceholder().row, true).length > 0) {\n\n            // move the placeholder the opposite direction\n            switch (shiftDirection) {\n\n                case ActionDirection.Left:\n                    this.setPlaceholderBounds(this.getPlaceholder().visible, this.getPlaceholder().x + this.getColumnWidth(), this.getPlaceholder().y, this.getPlaceholder().width, this.getPlaceholder().height);\n                    break;\n\n                case ActionDirection.Right:\n                    this.setPlaceholderBounds(this.getPlaceholder().visible, this.getPlaceholder().x - this.getColumnWidth(), this.getPlaceholder().y, this.getPlaceholder().width, this.getPlaceholder().height);\n                    break;\n            }\n\n            // validate this new position again\n            this.validatePlaceholderPosition(shiftDirection);\n        }\n    }\n/**\n * Determine if a widget can be moved left - or if it can move the widgets to the right to make space for the widget\n * @param {?} widget\n * @param {?=} performMove\n * @return {?}\n */\ncanWidgetMoveLeft(widget: DashboardWidgetComponent, performMove: boolean = false): boolean {\n\n        // check if the widget is the action widget or occupies the first column\n        if (widget === this._actionWidget.widget || widget.getColumn() === 0) {\n            return false;\n        }\n\n        // find the positions required\n        let /** @type {?} */ targetSpaces = this.getOccupiedSpaces().filter(space => space.widget === widget).map(space => {\n            return { column: space.column - widget.getColumnSpan(), row: space.row, widget: space.widget };\n        });\n\n        // check if there are widget in the required positions and if so, can they move right?\n        let /** @type {?} */ moveable = targetSpaces.every(space => this.getWidgetsAtPosition(space.column, space.row).filter(wgt => wgt !== space.widget).every(wgt => this.canWidgetMoveLeft(wgt)));\n\n        if (performMove && moveable) {\n\n            // move all widgets to the right\n            targetSpaces.forEach(space => this.getWidgetsAtPosition(space.column, space.row).filter(wgt => wgt !== space.widget).forEach(wgt => this.canWidgetMoveLeft(wgt, true)));\n\n            // move current widget to the right\n            widget.setColumn(widget.getColumn() - 1);\n        }\n\n        return moveable;\n    }\n/**\n * Determine if a widget can be moved right - or if it can move the widgets to the right to make space for the widget\n * @param {?} widget\n * @param {?=} performMove\n * @return {?}\n */\ncanWidgetMoveRight(widget: DashboardWidgetComponent, performMove: boolean = false): boolean {\n\n        // check if the widget is the dragging widget or the widget occupies the final column\n        if (widget === this._actionWidget.widget || widget.getColumn() + widget.getColumnSpan() === this._options.columns) {\n            return false;\n        }\n\n        // find the positions required\n        let /** @type {?} */ targetSpaces = this.getOccupiedSpaces().filter(space => space.widget === widget).map(space => {\n            return { column: space.column + widget.getColumnSpan(), row: space.row, widget: space.widget };\n        });\n\n        // check if there are widget in the required positions and if so, can they move right?\n        let /** @type {?} */ moveable = targetSpaces.every(space => this.getWidgetsAtPosition(space.column, space.row).filter(wgt => wgt !== space.widget).every(wgt => this.canWidgetMoveRight(wgt)));\n\n        if (performMove && moveable) {\n\n            // move all widgets to the right\n            targetSpaces.forEach(space => this.getWidgetsAtPosition(space.column, space.row).filter(wgt => wgt !== space.widget).forEach(wgt => this.canWidgetMoveRight(wgt, true)));\n\n            // move current widget to the right\n            widget.setColumn(widget.getColumn() + 1);\n        }\n\n        return moveable;\n    }\n/**\n * Store the initial position of the widget being dragged\n * @return {?}\n */\nsetWidgetOrigin(): void {\n        this._widgetOrigin = {\n            column: this._actionWidget.widget.getColumn(),\n            row: this._actionWidget.widget.getRow(),\n            columnSpan: this._actionWidget.widget.getColumnSpan(),\n            rowSpan: this._actionWidget.widget.getRowSpan()\n        };\n    }\n/**\n * Calculate all the required positions is a widget was to be positioned at a particular point\n * @param {?} widget\n * @param {?} column\n * @param {?} row\n * @return {?}\n */\ngetRequiredSpacesFromPoint(widget: DashboardWidgetComponent, column: number, row: number): DashboardSpace[] {\n        let /** @type {?} */ spaces: DashboardSpace[] = [];\n\n        for (let /** @type {?} */ y = row; y < row + widget.getRowSpan(); y++) {\n            for (let /** @type {?} */ x = column; x < column + widget.getColumnSpan(); x++) {\n                spaces.push({ column: x, row: y, widget: widget });\n            }\n        }\n\n        return spaces;\n    }\n/**\n * Position widgets based on the position of the placeholder - this is temporary until confirmed\n * @param {?} widget\n * @return {?}\n */\nupdateWidgetPositions(widget: DashboardWidgetComponent) {\n\n        // check all spaces the placeholder will occupy and move any widget currently in them down\n        for (let /** @type {?} */ column = this._placeholder.column; column < this._placeholder.column + this._placeholder.columnSpan; column++) {\n            for (let /** @type {?} */ row = this._placeholder.row; row < this._placeholder.row + this._placeholder.rowSpan; row++) {\n\n                this.getWidgetsAtPosition(column, row, true)\n                    .filter(wgt => wgt !== widget)\n                    .forEach(wgt => this.moveWidgetDown(wgt));\n            }\n        }\n\n        // update the height of the dashboard\n        this.setDashboardHeight();\n\n        // if we arent dragging the top handle then fill spaces\n        if (this._actionWidget.direction !== ActionDirection.Top &&\n            this._actionWidget.direction !== ActionDirection.TopLeft &&\n            this._actionWidget.direction !== ActionDirection.TopRight) {\n            this.shiftWidgetsUp();\n        }\n    }\n/**\n * Determine if a widget is occupying a specific row and column\n * @param {?} column The columns to check if occupied\n * @param {?} row The row to check if occupied\n * @param {?=} ignoreResizing Whether or not to ignore the widget currently being resized\n * @return {?}\n */\ngetWidgetsAtPosition(column: number, row: number, ignoreResizing: boolean = false): DashboardWidgetComponent[] {\n        return this.getOccupiedSpaces()\n            .filter(space => space.column === column && space.row === row)\n            .filter(space => space.widget !== this._actionWidget.widget || !ignoreResizing)\n            .map(space => space.widget);\n    }\n/**\n * Update the placeholder visibility, position and size\n * @param {?} visible\n * @param {?} x\n * @param {?} y\n * @param {?} width\n * @param {?} height\n * @return {?}\n */\nsetPlaceholderBounds(visible: boolean, x: number, y: number, width: number, height: number): void {\n\n        let /** @type {?} */ rounding = this._actionWidget.direction === ActionDirection.Left ||\n            this._actionWidget.direction === ActionDirection.Top ? Rounding.RoundDownBelowHalf : Rounding.RoundUpOverHalf;\n\n        this._placeholder.visible = visible;\n\n        this._placeholder.column = this.getPlaceholderColumn(x, width);\n        this._placeholder.row = this.getPlaceholderRow(y, height);\n        this._placeholder.columnSpan = this.getPlaceholderColumnSpan(width);\n        this._placeholder.rowSpan = this.getPlaceholderRowSpan(height);\n\n        // calculate the maximum number of rows\n        let /** @type {?} */ rowCount = this._widgets.filter(widget => widget !== this._actionWidget.widget)\n            .reduce((previous, widget) => Math.max(widget.getRow() + widget.getRowSpan(), previous), 0);\n\n        // constrain maximum placeholder row\n        this._placeholder.row = Math.min(this._placeholder.row, rowCount);\n\n        this._placeholder.x = (this._placeholder.column * this.getColumnWidth()) + this._options.padding;\n        this._placeholder.y = (this._placeholder.row * this.getRowHeight()) + this._options.padding;\n        this._placeholder.width = (this._placeholder.columnSpan * this.getColumnWidth()) - (this._options.padding * 2);\n        this._placeholder.height = (this._placeholder.rowSpan * this.getRowHeight()) - (this._options.padding * 2);\n\n        // set the values of the widget to match the values of the placeholder - however do not render the changes\n        this._actionWidget.widget.setColumn(this._placeholder.column, false);\n        this._actionWidget.widget.setRow(this._placeholder.row, false);\n        this._actionWidget.widget.setColumnSpan(this._placeholder.columnSpan, false);\n        this._actionWidget.widget.setRowSpan(this._placeholder.rowSpan, false);\n    }\n/**\n * Get the placeholder column position\n * @param {?} x\n * @param {?} width\n * @return {?}\n */\ngetPlaceholderColumn(x: number, width: number): number {\n\n        let /** @type {?} */ column = this.getColumnFromPx(x, this._actionWidget.direction === ActionDirection.Move ? Rounding.RoundUpOverHalf : Rounding.RoundDown);\n        let /** @type {?} */ columnSpan = Math.floor(width / this.getColumnWidth());\n        let /** @type {?} */ upperLimit = this.getColumnCount() - columnSpan;\n\n        // if we arent dragging left then just return the column\n        if (this._actionWidget.direction !== ActionDirection.Left &&\n            this._actionWidget.direction !== ActionDirection.TopLeft &&\n            this._actionWidget.direction !== ActionDirection.BottomLeft) {\n            return Math.max(Math.min(column, upperLimit), 0);\n        }\n\n        // get any overflow\n        let /** @type {?} */ overflow = width % this.getColumnWidth();\n\n        return (x <= 0 || overflow === 0 || columnSpan === 0 || overflow > (this.getColumnWidth() / 2)) ?\n            Math.max(Math.min(column, upperLimit), 0) :\n            Math.max(Math.min(column + 1, upperLimit), 0);\n    }\n/**\n * Get the column span of the placeholder\n * @param {?} width\n * @return {?}\n */\ngetPlaceholderColumnSpan(width: number): number {\n\n        let /** @type {?} */ columnSpan = this.getColumnFromPx(width);\n\n        // if we arent dragging right or left then just return the column span\n        if (this._actionWidget.direction !== ActionDirection.Right &&\n            this._actionWidget.direction !== ActionDirection.TopRight &&\n            this._actionWidget.direction !== ActionDirection.BottomRight &&\n            this._actionWidget.direction !== ActionDirection.Left &&\n            this._actionWidget.direction !== ActionDirection.TopLeft &&\n            this._actionWidget.direction !== ActionDirection.BottomLeft) {\n            return Math.max(columnSpan, 1);\n        }\n\n        // get the current column span and any overflow\n        let /** @type {?} */ overflow = width % this.getColumnWidth();\n\n        return (columnSpan > 0 && overflow > (this.getColumnWidth() / 2)) ? Math.max(columnSpan + 1, 1) : Math.max(columnSpan, 1);\n    }\n/**\n * Get the row position of the placeholder\n * @param {?} y\n * @param {?} height\n * @return {?}\n */\ngetPlaceholderRow(y: number, height: number): number {\n\n        let /** @type {?} */ row = this.getRowFromPx(y, this._actionWidget.direction === ActionDirection.Move ? Rounding.RoundUpOverHalf : Rounding.RoundDown);\n        let /** @type {?} */ rowSpan = Math.ceil(height / this.getRowHeight());\n\n        // if we arent dragging up then just return the row\n        if (this._actionWidget.direction !== ActionDirection.Top &&\n            this._actionWidget.direction !== ActionDirection.TopLeft &&\n            this._actionWidget.direction !== ActionDirection.TopRight) {\n            return Math.max(row, 0);\n        }\n\n        // get any overflow\n        let /** @type {?} */ overflow = height < this.getRowHeight() ? 0 : height % this.getRowHeight();\n\n        return (y <= 0 || rowSpan === 0 || overflow === 0 || overflow > (this.getRowHeight() / 2)) ? Math.max(row, 0) : Math.max(row + 1, 0);\n    }\n/**\n * Get the row span of the placeholder\n * @param {?} height\n * @return {?}\n */\ngetPlaceholderRowSpan(height: number): number {\n\n        let /** @type {?} */ rowSpan = this.getRowFromPx(height);\n\n        // if we arent dragging up or down then just return the column span\n        if (this._actionWidget.direction !== ActionDirection.Top &&\n            this._actionWidget.direction !== ActionDirection.TopLeft &&\n            this._actionWidget.direction !== ActionDirection.TopRight &&\n            this._actionWidget.direction !== ActionDirection.Bottom &&\n            this._actionWidget.direction !== ActionDirection.BottomLeft &&\n            this._actionWidget.direction !== ActionDirection.BottomRight) {\n            return Math.max(rowSpan, 1);\n        }\n\n        // get the current column span and any overflow\n        let /** @type {?} */ overflow = height % this.getRowHeight();\n\n        return (overflow > (this.getRowHeight() / 2)) ? Math.max(rowSpan + 1, 1) : Math.max(rowSpan, 1);\n    }\n/**\n * @param {?} x\n * @param {?=} rounding\n * @return {?}\n */\ngetColumnFromPx(x: number, rounding: Rounding = Rounding.RoundDown): number {\n\n        let /** @type {?} */ column = Math.floor(x / Math.floor(this.getColumnWidth()));\n        let /** @type {?} */ overflow = (x % Math.floor(this.getColumnWidth()));\n        let /** @type {?} */ half = this.getColumnWidth() / 2;\n\n        switch (rounding) {\n\n            case Rounding.RoundDown:\n                return column;\n\n            case Rounding.RoundDownBelowHalf:\n                return overflow < half ? column : column + 1;\n\n            case Rounding.RoundUpOverHalf:\n                return overflow > half ? column + 1 : column;\n\n            case Rounding.RoundUp:\n                return overflow > 0 ? column + 1 : column;\n        }\n\n    }\n/**\n * @param {?} y\n * @param {?=} rounding\n * @return {?}\n */\ngetRowFromPx(y: number, rounding: Rounding = Rounding.RoundDown): number {\n\n        let /** @type {?} */ row = Math.floor(y / Math.floor(this.getRowHeight()));\n        let /** @type {?} */ overflow = (y % Math.floor(this.getRowHeight()));\n        let /** @type {?} */ half = this.getRowHeight() / 2;\n\n        switch (rounding) {\n\n            case Rounding.RoundDown:\n                return row;\n\n            case Rounding.RoundDownBelowHalf:\n                return overflow < half ? row : row + 1;\n\n            case Rounding.RoundUpOverHalf:\n                return overflow > half ? row + 1 : row;\n\n            case Rounding.RoundUp:\n                return overflow > 0 ? row + 1 : row;\n        }\n    }\n/**\n * @return {?}\n */\ncommitWidgetChanges(): void {\n\n        // check that we have all the values we need\n        if (this._placeholder.column === undefined || this._placeholder.row === undefined ||\n            this._placeholder.columnSpan === undefined || this._placeholder.rowSpan === undefined) {\n            return;\n        }\n\n        if (this._actionWidget) {\n            this._actionWidget.widget.setColumn(this._placeholder.column);\n            this._actionWidget.widget.setRow(this._placeholder.row);\n            this._actionWidget.widget.setColumnSpan(this._placeholder.columnSpan);\n            this._actionWidget.widget.setRowSpan(this._placeholder.rowSpan);\n        }\n\n        // reset all placeholder values\n        this._placeholder.column = undefined;\n        this._placeholder.row = undefined;\n        this._placeholder.columnSpan = undefined;\n        this._placeholder.rowSpan = undefined;\n    }\n/**\n * @return {?}\n */\ngetPlaceholder(): DashboardPlaceholder {\n        return this._placeholder;\n    }\n/**\n * Get the current column width\n * @return {?}\n */\ngetColumnWidth(): number {\n        return Math.floor(this._columnWidth);\n    }\n/**\n * Get the current column height\n * @return {?}\n */\ngetRowHeight(): number {\n        return this._rowHeight;\n    }\n/**\n * Calculate the number of rows populated with widgets\n * @return {?}\n */\ngetRowCount(): number {\n        return this._widgets.reduce((previous, widget) => Math.max(widget.getRow() + widget.getRowSpan(), previous), 0);\n    }\n/**\n * Set the height of the dashboard container element\n * @return {?}\n */\nsetDashboardHeight(): void {\n\n        // size the dashboard container to ensure all rows fit\n        let /** @type {?} */ rowCount = this.getRowCount();\n\n        // if we should show an empty row increment the row count by 1\n        if (this._options.emptyRow) {\n            rowCount++;\n        }\n\n        this._dimensions.height = rowCount * this.getRowHeight();\n        this.height.next(this._dimensions.height);\n    }\n/**\n * Orders the z-index of all widgets to move the active one to the front\n * @param {?} widget The widget that should be brought to the front\n * @return {?}\n */\nbringToFront(widget: DashboardWidgetComponent): void {\n        this._widgets.forEach(wgt => wgt.sendToBack());\n        widget.bringToFront();\n    }\n/**\n * Move a widget down - if widgets are in the position below, then move them down further\n * @param {?} widget The widget to move downwards\n * @param {?=} distance\n * @return {?}\n */\nmoveWidgetDown(widget: DashboardWidgetComponent, distance: number = 1): void {\n\n        // move the widget down one position\n        widget.setRow(widget.getRow() + distance);\n\n        // check every space the widget occupies for collisions\n        this.forEachBlock(widget, (column, row) =>\n            this.getWidgetsAtPosition(column, row, true)\n                .filter(wgt => wgt !== widget)\n                .forEach(wgt => this.moveWidgetDown(wgt, distance)));\n    }\n/**\n * Widgets should not be allowed to have a vacant space above them - if there is one they should move upwards to fill it\n * @return {?}\n */\nshiftWidgetsUp(): void {\n\n        // check whether or not changes have been made - if so we need to repeat until stable\n        let /** @type {?} */ stable = true;\n\n        // iterate each widget and \n        this._widgets.forEach(widget => {\n\n            // if widget is already on the top row then do nothing\n            if (widget.getRow() === 0) {\n                return;\n            }\n\n            // if we are currently dragging and this is the dragging widget then skip\n            if (this._actionWidget && this._actionWidget.widget === widget) {\n                return;\n            }\n\n            if (this.getPositionAvailable(widget.getColumn(), widget.getRow() - 1, widget.getColumnSpan(), 1)) {\n                widget.setRow(widget.getRow() - 1);\n                stable = false;\n            }\n        });\n\n        // if changes occurred then we should repeat the process\n        if (!stable) {\n            this.shiftWidgetsUp();\n        }\n    }\n/**\n * Iterate over each space a widget occupied\n * @param {?} widget The widget to determine spaces\n * @param {?} callback The function to be called for each space, should expect a column and row argument witht he context being the widget\n * @return {?}\n */\nforEachBlock(widget: DashboardWidgetComponent, callback: (column: number, row: number) => void): void {\n        for (let /** @type {?} */ row = widget.getRow(); row < widget.getRow() + widget.getRowSpan(); row++) {\n            for (let /** @type {?} */ column = widget.getColumn(); column < widget.getColumn() + widget.getColumnSpan(); column++) {\n                callback.call(widget, column, row);\n            }\n        }\n    }\n/**\n * Returns the number of columns available\n * @return {?}\n */\ngetColumnCount(): number {\n        return this._stacked ? 1 : this._options.columns;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction DashboardService_tsickle_Closure_declarations() {\n/** @type {?} */\nDashboardService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDashboardService.ctorParameters;\n/** @type {?} */\nDashboardService.prototype._dashboard;\n/** @type {?} */\nDashboardService.prototype._widgets;\n/** @type {?} */\nDashboardService.prototype._options;\n/** @type {?} */\nDashboardService.prototype._options$;\n/** @type {?} */\nDashboardService.prototype._placeholder;\n/** @type {?} */\nDashboardService.prototype._widgetOrigin;\n/** @type {?} */\nDashboardService.prototype._dimensions;\n/** @type {?} */\nDashboardService.prototype._actionWidget;\n/** @type {?} */\nDashboardService.prototype._columnWidth;\n/** @type {?} */\nDashboardService.prototype._rowHeight;\n/** @type {?} */\nDashboardService.prototype._stacked;\n/** @type {?} */\nDashboardService.prototype._cache;\n/** @type {?} */\nDashboardService.prototype._mouseEvent;\n/** @type {?} */\nDashboardService.prototype._defaultOptions;\n/** @type {?} */\nDashboardService.prototype.height;\n/** @type {?} */\nDashboardService.prototype.layout;\n}\n\n\nexport interface DashboardDimensions {\n    width?: number;\n    height?: number;\n}\n\nexport interface DashboardWidgetDimensions {\n    x: number;\n    y: number;\n    width: number;\n    height: number;\n}\n\nexport interface DashboardAction {\n    widget: DashboardWidgetComponent;\n    direction: ActionDirection;\n    event: MouseEvent;\n}\n\nexport interface DashboardSpace {\n    widget: DashboardWidgetComponent;\n    column: number;\n    row: number;\n}\n\nexport interface DashboardPlaceholder {\n    visible: boolean;\n    x: number;\n    y: number;\n    width: number;\n    height: number;\n    column?: number;\n    row?: number;\n    columnSpan?: number;\n    rowSpan?: number;\n}\n\nexport interface DashboardCache {\n    id: string;\n    column: number;\n    row: number;\n}\n\nexport interface DashboardLayoutData {\n    id: string;\n    col: number;\n    row: number;\n    colSpan: number;\n    rowSpan: number;\n}\nexport type ActionDirection = number;\nexport let ActionDirection: any = {};\nActionDirection.Top = 0;\nActionDirection.TopRight = 1;\nActionDirection.Right = 2;\nActionDirection.BottomRight = 3;\nActionDirection.Bottom = 4;\nActionDirection.BottomLeft = 5;\nActionDirection.Left = 6;\nActionDirection.TopLeft = 7;\nActionDirection.Move = 8;\nActionDirection[ActionDirection.Top] = \"Top\";\nActionDirection[ActionDirection.TopRight] = \"TopRight\";\nActionDirection[ActionDirection.Right] = \"Right\";\nActionDirection[ActionDirection.BottomRight] = \"BottomRight\";\nActionDirection[ActionDirection.Bottom] = \"Bottom\";\nActionDirection[ActionDirection.BottomLeft] = \"BottomLeft\";\nActionDirection[ActionDirection.Left] = \"Left\";\nActionDirection[ActionDirection.TopLeft] = \"TopLeft\";\nActionDirection[ActionDirection.Move] = \"Move\";\n\nexport type Rounding = number;\nexport let Rounding: any = {};\nRounding.RoundDown = 0;\nRounding.RoundDownBelowHalf = 1;\nRounding.RoundUp = 2;\nRounding.RoundUpOverHalf = 3;\nRounding[Rounding.RoundDown] = \"RoundDown\";\nRounding[Rounding.RoundDownBelowHalf] = \"RoundDownBelowHalf\";\nRounding[Rounding.RoundUp] = \"RoundUp\";\nRounding[Rounding.RoundUpOverHalf] = \"RoundUpOverHalf\";\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Input, OnInit, DoCheck, ElementRef, AfterViewInit, NgZone, EventEmitter, Output } from '@angular/core';\nimport { DashboardService, DashboardLayoutData, DashboardPlaceholder } from './dashboard.service';\nimport { ResizeDimensions } from '../../directives/resize/resize.service';\nexport class DashboardComponent implements OnInit, DoCheck, AfterViewInit {\n\n     options: DashboardOptions = {};\n     layout: DashboardLayoutData[];\n     layoutChange: EventEmitter<DashboardLayoutData[]> = new EventEmitter<DashboardLayoutData[]>();\n\n    height: number = 0;\n    placeholder: DashboardPlaceholder = this._dashboardService.getPlaceholder();\nprivate _nativeElement: HTMLElement;\nprivate _options: DashboardOptions;\nprivate _layout: DashboardLayoutData[];\n/**\n * @param {?} _dashboardService\n * @param {?} _elementRef\n * @param {?} _ngZone\n */\nconstructor(private _dashboardService: DashboardService,\nprivate _elementRef: ElementRef,\nprivate _ngZone: NgZone) {\n        this._nativeElement = _elementRef.nativeElement;\n        this._dashboardService.setDashboard(this._nativeElement);\n\n        // watch for changes to component height\n        this._dashboardService.height.subscribe(height => this.height = height);\n\n        // subscribe to layout changes\n        this._dashboardService.layout.subscribe(layout => {\n            this.layout = layout;\n            this.layoutChange.emit(layout);\n        });\n    }\n/**\n * @return {?}\n */\nngOnInit(): void {\n        this.setOptions(this.options);\n    }\n/**\n * @return {?}\n */\nngDoCheck(): void {\n\n        // get the current set of options\n        let /** @type {?} */ options = Object.assign({}, this._dashboardService.getDefaultOptions(), this.options);\n\n        // if anything has changed then update them\n        if (JSON.stringify(this._dashboardService.getOptions()) !== JSON.stringify(options)) {\n            this.setOptions(options);\n        }\n\n        // check if the layout has changed\n        if (JSON.stringify(this.layout) !== JSON.stringify(this._layout)) {\n            this._layout = this.layout.slice();\n            this._dashboardService.setLayoutData(this.layout);\n        }\n    }\n/**\n * @return {?}\n */\nngAfterViewInit(): void {\n        // initially set dimensions\n        this._dashboardService.setDimensions(this._nativeElement.offsetWidth, this._nativeElement.offsetHeight);\n    }\n/**\n * @param {?} options\n * @return {?}\n */\nsetOptions(options: DashboardOptions): void {\n        this._dashboardService.setOptions(options);\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nonResize(event: ResizeDimensions): void {\n        // ensure this gets run inside Angular\n        this._ngZone.run(() => this._dashboardService.setDimensions(event.width, event.height));\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-dashboard',\n    template: `\n      <div (uxResize)=\"onResize($event)\" throttle=\"16\" class=\"dashboard-container\">\n          <ng-content></ng-content>\n      </div>\n\n      <div class=\"position-indicator\" *ngIf=\"placeholder.visible\" [style.left.px]=\"placeholder.x\" [style.top.px]=\"placeholder.y\" [style.width.px]=\"placeholder.width\"\n          [style.height.px]=\"placeholder.height\"></div>\n    `,\n    providers: [DashboardService],\n    host: {\n        '[style.height.px]': 'height'\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: DashboardService, },\n{type: ElementRef, },\n{type: NgZone, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'options': [{ type: Input },],\n'layout': [{ type: Input },],\n'layoutChange': [{ type: Output },],\n};\n}\n\nfunction DashboardComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nDashboardComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDashboardComponent.ctorParameters;\n/** @type {?} */\nDashboardComponent.propDecorators;\n/** @type {?} */\nDashboardComponent.prototype.options;\n/** @type {?} */\nDashboardComponent.prototype.layout;\n/** @type {?} */\nDashboardComponent.prototype.layoutChange;\n/** @type {?} */\nDashboardComponent.prototype.height;\n/** @type {?} */\nDashboardComponent.prototype.placeholder;\n/** @type {?} */\nDashboardComponent.prototype._nativeElement;\n/** @type {?} */\nDashboardComponent.prototype._options;\n/** @type {?} */\nDashboardComponent.prototype._layout;\n/** @type {?} */\nDashboardComponent.prototype._dashboardService;\n/** @type {?} */\nDashboardComponent.prototype._elementRef;\n/** @type {?} */\nDashboardComponent.prototype._ngZone;\n}\n\n\nexport interface DashboardOptions {\n    columns?: number;\n    padding?: number;\n    minWidth?: number;\n    minHeight?: number;\n    rowHeight?: number;\n    emptyRow?: boolean;\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Input, ElementRef, QueryList, ViewChildren, Directive, AfterViewInit, OnInit, OnDestroy } from '@angular/core';\nimport { DashboardService, ActionDirection } from '../dashboard.service';\nimport { Observable } from 'rxjs/Observable';\nimport { Subscription } from 'rxjs/Subscription';\nimport'rxjs/add/operator/takeUntil';\nexport class DashboardWidgetComponent implements OnInit, AfterViewInit, OnDestroy {\n\n     id: string;\n     col: number;\n     row: number;\n     colSpan: number = 1;\n     rowSpan: number = 1;\n     resizable: boolean = false;\n\n    actualX: number = 0;\n    actualY: number = 0;\n    actualWidth: number = 100;\n    actualHeight: number = 100;\n    padding: number = 0;\n    zIndex: number = 0;\n    stacked: boolean = false;\nprivate _column: StackableValue = { regular: undefined, stacked: undefined };\nprivate _row: StackableValue = { regular: undefined, stacked: undefined };\nprivate _columnSpan: StackableValue = { regular: 1, stacked: 1 };\nprivate _rowSpan: StackableValue = { regular: 1, stacked: 1 };\nprivate _nativeElement: HTMLElement;\nprivate _handles: ResizeHandle[];\nprivate _dragMove: Observable<MouseEvent> = Observable.fromEvent(document, 'mousemove');\nprivate _dragEnd: Observable<MouseEvent> = Observable.fromEvent(document, 'mouseup');\n/**\n * @param {?} _dashboardService\n * @param {?} _elementRef\n */\nconstructor(private _dashboardService: DashboardService,\nprivate _elementRef: ElementRef) {\n        this._nativeElement = _elementRef.nativeElement;\n\n        // add the widget to the dashboard\n        _dashboardService.addWidget(this);\n\n        // apply the current options\n        this.applyOptions();\n\n        // watch for changes to the options\n        _dashboardService.options().subscribe(opts => this.applyOptions());\n    }\n/**\n * @return {?}\n */\nngOnInit(): void {\n\n        // check to ensure values are numbers and not strings\n        if (typeof this.col === 'string') {\n            this.col = parseFloat(this.col);\n        }\n\n        if (typeof this.row === 'string') {\n            this.row = parseFloat(this.row);\n        }\n\n        if (typeof this.colSpan === 'string') {\n            this.colSpan = parseFloat(this.colSpan);\n        }\n\n        if (typeof this.rowSpan === 'string') {\n            this.rowSpan = parseFloat(this.rowSpan);\n        }\n\n        this._columnSpan.regular = this.colSpan;\n        this._rowSpan.regular = this.rowSpan;\n\n        if (!this.id) {\n            console.warn('Dashboard Widget is missing an ID.');\n\n            // set random id - keeps things working but prevents exporting of positions\n            this.id = Math.floor(Math.random() * 100000).toString();\n        }\n    }\n/**\n * Once component is initialised link the resize handle elements with their direction\n * @return {?}\n */\nngAfterViewInit(): void {\n        this.initialiseHandles();\n    }\n/**\n * If component is removed, then unregister it from the service\n * @return {?}\n */\nngOnDestroy(): void {\n        this._dashboardService.removeWidget(this);\n    }\n/**\n * Return the ID of the widget\n * @return {?}\n */\ngetId(): string {\n        return this.id;\n    }\n/**\n * Apply the current dashboard options\n * @return {?}\n */\napplyOptions(): void {\n\n        // get the current options at the time \n        let /** @type {?} */ options = this._dashboardService.getOptions();\n\n        // only update the values if options have been defined\n        if (options) {\n            // apply the initial options\n            this.padding = options.padding;\n            this._columnSpan.stacked = options.columns;\n        }\n    }\n/**\n * Set the actual position and size values\n * @return {?}\n */\nrender(): void {\n        this.actualX = this.getColumn() * this._dashboardService.getColumnWidth();\n        this.actualY = this.getRow() * this._dashboardService.getRowHeight();\n        this.actualWidth = this.getColumnSpan() * this._dashboardService.getColumnWidth();\n        this.actualHeight = this.getRowSpan() * this._dashboardService.getRowHeight();\n    }\n/**\n * Returns all the resize handles and their associated directions\n * @return {?}\n */\ngetHandles(): ResizeHandle[] {\n        return this._handles;\n    }\n/**\n * Indicates whether or not the widget should be displayed in stacked mode\n * @param {?} stacked indicates the stacked mode\n * @return {?}\n */\nsetStacked(stacked: boolean): void {\n        this.stacked = stacked;\n    }\n/**\n * @return {?}\n */\ngetColumn(): number {\n        return this.getStackableValue(this._column);\n    }\n/**\n * @return {?}\n */\ngetRow(): number {\n        return this.getStackableValue(this._row);\n    }\n/**\n * @param {?} column\n * @param {?=} render\n * @return {?}\n */\nsetColumn(column: number, render: boolean = true): void {\n        this.setStackableValue(this._column, column);\n\n        if (render) {\n            this.render();\n        }\n    }\n/**\n * @param {?} row\n * @param {?=} render\n * @return {?}\n */\nsetRow(row: number, render: boolean = true): void {\n        this.setStackableValue(this._row, row);\n\n        if (render) {\n            this.render();\n        }\n    }\n/**\n * @return {?}\n */\ngetColumnSpan(): number {\n        return this.getStackableValue(this._columnSpan);\n    }\n/**\n * @return {?}\n */\ngetRowSpan(): number {\n        return this.getStackableValue(this._rowSpan);\n    }\n/**\n * @param {?} columnSpan\n * @param {?=} render\n * @return {?}\n */\nsetColumnSpan(columnSpan: number, render: boolean = true): void {\n        this.setStackableValue(this._columnSpan, columnSpan);\n\n        if (render) {\n            this.render();\n        }\n    }\n/**\n * @param {?} rowSpan\n * @param {?=} render\n * @return {?}\n */\nsetRowSpan(rowSpan: number, render: boolean = true): void {\n        this.setStackableValue(this._rowSpan, rowSpan);\n\n        if (render) {\n            this.render();\n        }\n    }\n/**\n * @return {?}\n */\nbringToFront(): void {\n        this.zIndex = 1;\n    }\n/**\n * @return {?}\n */\nsendToBack(): void {\n        this.zIndex = 0;\n    }\n/**\n * @param {?} x\n * @param {?} y\n * @param {?} width\n * @param {?} height\n * @return {?}\n */\nsetBounds(x: number, y: number, width: number, height: number): void {\n        this.actualX = x;\n        this.actualY = y;\n        this.actualWidth = width;\n        this.actualHeight = height;\n    }\n/**\n * Allows automatic setting of stackable value\n * @param {?} property The current StackableValue object\n * @param {?} value The value to set in the appropriate field\n * @return {?}\n */\nprivate setStackableValue(property: StackableValue, value: number): void {\n        if (this.stacked) {\n            property.stacked = value;\n        } else {\n            property.regular = value;\n        }\n    }\n/**\n * Return the appropriate value from a stackable value\n * @param {?} property The Stackable value object\n * @return {?}\n */\nprivate getStackableValue(property: StackableValue): number {\n        return this.stacked ? property.stacked : property.regular;\n    }\n/**\n * Create data representations of the resize handle elements and the direction they will resize in\n * @return {?}\n */\nprivate initialiseHandles() {\n\n        this._handles = [\n            {\n                element: this._nativeElement.querySelector('.resizer-handle.handle-top'),\n                direction: ActionDirection.Top\n            },\n            {\n                element: this._nativeElement.querySelector('.resizer-handle.handle-top-right'),\n                direction: ActionDirection.TopRight\n            },\n            {\n                element: this._nativeElement.querySelector('.resizer-handle.handle-right'),\n                direction: ActionDirection.Right\n            },\n            {\n                element: this._nativeElement.querySelector('.resizer-handle.handle-bottom-right'),\n                direction: ActionDirection.BottomRight\n            },\n            {\n                element: this._nativeElement.querySelector('.resizer-handle.handle-bottom'),\n                direction: ActionDirection.Bottom\n            },\n            {\n                element: this._nativeElement.querySelector('.resizer-handle.handle-bottom-left'),\n                direction: ActionDirection.BottomLeft\n            },\n            {\n                element: this._nativeElement.querySelector('.resizer-handle.handle-left'),\n                direction: ActionDirection.Left\n            },\n            {\n                element: this._nativeElement.querySelector('.resizer-handle.handle-top-left'),\n                direction: ActionDirection.TopLeft\n            }\n        ];\n\n        // bind resize events to each handle\n        this._handles.forEach(handle => this.bindResize(handle));\n    }\n/**\n * This will apply event listeners to each resize handle\n * @param {?} handle The element and direction to subscribe to\n * @return {?}\n */\nprivate bindResize(handle: ResizeHandle): void {\n\n        // bind to resize events\n        handle.listener = Observable.fromEvent(handle.element, 'mousedown').subscribe((downEvent: MouseEvent) => {\n\n            downEvent.preventDefault();\n\n            // inform service that we are beginning to drag\n            this._dashboardService.onResizeStart({ widget: this, direction: handle.direction, event: downEvent });\n\n            let /** @type {?} */ move$ = this._dragMove.takeUntil(this._dragEnd).subscribe((moveEvent: MouseEvent) => {\n                moveEvent.preventDefault();\n                this._dashboardService.onResizeDrag({ widget: this, direction: handle.direction, event: moveEvent });\n            }, null, () => {\n                move$.unsubscribe();\n                this._dashboardService.onResizeEnd();\n            });\n\n        });\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-dashboard-widget',\n    template: `\n      <div class=\"widget-content widget-col-span-{{ getColumnSpan() }} widget-row-span-{{ getRowSpan() }}\">\n          <ng-content></ng-content>\n      </div>\n\n      <div class=\"resizer-handle handle-top\" [style.top.px]=\"padding\" [hidden]=\"!resizable\"></div>\n      <div class=\"resizer-handle handle-top-right\" [style.top.px]=\"padding\" [style.right.px]=\"padding\" [hidden]=\"!resizable && !stacked\"></div>\n      <div class=\"resizer-handle handle-right\" [style.right.px]=\"padding\" [hidden]=\"!resizable || stacked\"></div>\n      <div class=\"resizer-handle handle-bottom-right\" [style.bottom.px]=\"padding\" [style.right.px]=\"padding\" [hidden]=\"!resizable && !stacked\"></div>\n      <div class=\"resizer-handle handle-bottom\" [style.bottom.px]=\"padding\" [hidden]=\"!resizable\"></div>\n      <div class=\"resizer-handle handle-bottom-left\" [style.bottom.px]=\"padding\" [style.left.px]=\"padding\" [hidden]=\"!resizable && !stacked\"></div>\n      <div class=\"resizer-handle handle-left\" [style.left.px]=\"padding\" [hidden]=\"!resizable || stacked\"></div>\n      <div class=\"resizer-handle handle-top-left\" [style.top.px]=\"padding\" [style.left.px]=\"padding\" [hidden]=\"!resizable && !stacked\"></div>\n    `,\n    host: {\n        '[style.left.px]': 'actualX',\n        '[style.top.px]': 'actualY',\n        '[style.width.px]': 'actualWidth',\n        '[style.height.px]': 'actualHeight',\n        '[style.padding.px]': 'padding',\n        '[style.zIndex]': 'zIndex'\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: DashboardService, },\n{type: ElementRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'id': [{ type: Input },],\n'col': [{ type: Input },],\n'row': [{ type: Input },],\n'colSpan': [{ type: Input },],\n'rowSpan': [{ type: Input },],\n'resizable': [{ type: Input },],\n};\n}\n\nfunction DashboardWidgetComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nDashboardWidgetComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDashboardWidgetComponent.ctorParameters;\n/** @type {?} */\nDashboardWidgetComponent.propDecorators;\n/** @type {?} */\nDashboardWidgetComponent.prototype.id;\n/** @type {?} */\nDashboardWidgetComponent.prototype.col;\n/** @type {?} */\nDashboardWidgetComponent.prototype.row;\n/** @type {?} */\nDashboardWidgetComponent.prototype.colSpan;\n/** @type {?} */\nDashboardWidgetComponent.prototype.rowSpan;\n/** @type {?} */\nDashboardWidgetComponent.prototype.resizable;\n/** @type {?} */\nDashboardWidgetComponent.prototype.actualX;\n/** @type {?} */\nDashboardWidgetComponent.prototype.actualY;\n/** @type {?} */\nDashboardWidgetComponent.prototype.actualWidth;\n/** @type {?} */\nDashboardWidgetComponent.prototype.actualHeight;\n/** @type {?} */\nDashboardWidgetComponent.prototype.padding;\n/** @type {?} */\nDashboardWidgetComponent.prototype.zIndex;\n/** @type {?} */\nDashboardWidgetComponent.prototype.stacked;\n/** @type {?} */\nDashboardWidgetComponent.prototype._column;\n/** @type {?} */\nDashboardWidgetComponent.prototype._row;\n/** @type {?} */\nDashboardWidgetComponent.prototype._columnSpan;\n/** @type {?} */\nDashboardWidgetComponent.prototype._rowSpan;\n/** @type {?} */\nDashboardWidgetComponent.prototype._nativeElement;\n/** @type {?} */\nDashboardWidgetComponent.prototype._handles;\n/** @type {?} */\nDashboardWidgetComponent.prototype._dragMove;\n/** @type {?} */\nDashboardWidgetComponent.prototype._dragEnd;\n/** @type {?} */\nDashboardWidgetComponent.prototype._dashboardService;\n/** @type {?} */\nDashboardWidgetComponent.prototype._elementRef;\n}\n\n\nexport interface ResizeHandle {\n    element: Element;\n    direction: ActionDirection;\n    listener?: Subscription;\n}\n\nexport interface StackableValue {\n    regular: number;\n    stacked: number;\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, Host, ElementRef } from '@angular/core';\nimport { DashboardWidgetComponent } from '../widget/dashboard-widget.component';\nimport { Observable } from 'rxjs/Observable';\nimport { DashboardService, ActionDirection } from '../dashboard.service';\nexport class DashboardDragHandleDirective {\nprivate _dragMove: Observable<MouseEvent> = Observable.fromEvent(document, 'mousemove');\nprivate _dragEnd: Observable<MouseEvent> = Observable.fromEvent(document, 'mouseup');\n/**\n * @param {?} widget\n * @param {?} elementRef\n * @param {?} dashboardService\n */\nconstructor(  widget: DashboardWidgetComponent, elementRef: ElementRef, dashboardService: DashboardService) {\n\n        Observable.fromEvent(elementRef.nativeElement, 'mousedown').subscribe((downEvent: MouseEvent) => {\n\n            downEvent.preventDefault();\n\n            // inform service that we are beginning to drag\n            dashboardService.onDragStart({ widget: widget, direction: ActionDirection.Move, event: downEvent });\n\n            let move$ = this._dragMove.takeUntil(this._dragEnd).subscribe((moveEvent: MouseEvent) => {\n                moveEvent.preventDefault();\n\n                dashboardService.onDrag({ widget: widget, direction: ActionDirection.Move, event: moveEvent });\n            }, null, () => {\n                move$.unsubscribe();\n                dashboardService.onDragEnd();\n            });\n\n        });\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: '[uxDashboardWidgetDragHandle], [ux-dashboard-widget-drag-handle]'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: DashboardWidgetComponent, decorators: [{ type: Host }, ]},\n{type: ElementRef, },\n{type: DashboardService, },\n];\n}\n\nfunction DashboardDragHandleDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nDashboardDragHandleDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDashboardDragHandleDirective.ctorParameters;\n/** @type {?} */\nDashboardDragHandleDirective.prototype._dragMove;\n/** @type {?} */\nDashboardDragHandleDirective.prototype._dragEnd;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable, Renderer2 } from '@angular/core';\nimport { Subject } from 'rxjs/Subject';\nimport { Observable } from 'rxjs/Observable';\nimport'rxjs/add/observable/fromEvent';\nexport class ResizeService {\n/**\n * @param {?} nativeElement\n * @param {?} renderer\n * @return {?}\n */\naddResizeListener(nativeElement: HTMLElement, renderer: Renderer2): Subject<ResizeDimensions> {\n\n        // create subject\n        let /** @type {?} */ subject = new Subject<ResizeDimensions>();\n\n        // determine the style of the element\n        let /** @type {?} */ displayMode = window.getComputedStyle(nativeElement).getPropertyValue('display');\n\n        // create the iframe element\n        let /** @type {?} */ iframe: HTMLIFrameElement = renderer.createElement('iframe');\n\n        // style the iframe to be invisible but fill containing element\n        renderer.setStyle(iframe, 'position', 'absolute');\n        renderer.setStyle(iframe, 'width', '100%');\n        renderer.setStyle(iframe, 'height', '100%');\n        renderer.setStyle(iframe, 'top', '0');\n        renderer.setStyle(iframe, 'right', '0');\n        renderer.setStyle(iframe, 'bottom', '0');\n        renderer.setStyle(iframe, 'left', '0');\n        renderer.setStyle(iframe, 'z-index', '-1');\n        renderer.setStyle(iframe, 'opacity', '0');\n        renderer.setStyle(iframe, 'border', 'none');\n        renderer.setStyle(iframe, 'margin', '0');\n        renderer.setStyle(iframe, 'pointer-events', 'none');\n        renderer.setStyle(iframe, 'overflow', 'hidden');\n\n        // ensure the iframe ignores any tabbing\n        renderer.setAttribute(iframe, 'tabindex', '-1');\n\n        // statically positioned elements need changed to relative for this method to work\n        if (displayMode !== 'relative' && displayMode !== 'absolute' && displayMode !== 'fixed') {\n            renderer.setStyle(nativeElement, 'position', 'relative');\n        }\n\n        // add the iframe to the container element\n        renderer.appendChild(nativeElement, iframe);\n\n\n        this.waitUntilReady(iframe, () => {\n            let /** @type {?} */ iframeDoc = iframe.contentDocument || /** @type {?} */(( iframe.contentWindow.document as HTMLDocument));\n\n            let /** @type {?} */ attachListener = function () {\n                Observable.fromEvent(iframe.contentWindow, 'resize').subscribe((event: ResizeDimensions) => {\n\n                    subject.next({\n                        width: nativeElement.offsetWidth,\n                        height: nativeElement.offsetHeight\n                    });\n                });\n            };\n\n            if (iframeDoc.readyState === 'complete') {\n                attachListener();\n            } else {\n\n                // wait for iframe to load\n                iframe.addEventListener('load', () => attachListener());\n            }\n        });\n\n\n        return subject;\n    }\n/**\n * @param {?} iframe\n * @param {?} callback\n * @return {?}\n */\nprivate waitUntilReady(iframe: HTMLIFrameElement, callback: () => void) {\n        if (iframe.contentDocument || iframe.contentWindow) {\n            callback.call(this);\n        } else {\n            setTimeout(() => this.waitUntilReady(iframe, callback));\n        }\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ResizeService_tsickle_Closure_declarations() {\n/** @type {?} */\nResizeService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nResizeService.ctorParameters;\n}\n\n\nexport interface ResizeDimensions {\n    width: number;\n    height: number;\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, Output, EventEmitter, ElementRef, Input, Renderer2 } from '@angular/core';\nimport { ResizeService, ResizeDimensions } from './resize.service';\nimport'rxjs/add/operator/debounceTime';\nexport class ResizeDirective {\n\n     throttle: number = 0;\n     resize: EventEmitter<ResizeDimensions> = new EventEmitter<ResizeDimensions>();\n/**\n * @param {?} _elementRef\n * @param {?} _resizeService\n * @param {?} _renderer\n */\nconstructor(private _elementRef: ElementRef,\nprivate _resizeService: ResizeService,\nprivate _renderer: Renderer2) { }\n/**\n * @return {?}\n */\nngOnInit(): void {\n        this._resizeService.addResizeListener(this._elementRef.nativeElement, this._renderer)\n            .debounceTime(this.throttle)\n            .subscribe(event => this.resize.emit(event));\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: '[uxResize]'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: ResizeService, },\n{type: Renderer2, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'throttle': [{ type: Input },],\n'resize': [{ type: Output, args: ['uxResize', ] },],\n};\n}\n\nfunction ResizeDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nResizeDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nResizeDirective.ctorParameters;\n/** @type {?} */\nResizeDirective.propDecorators;\n/** @type {?} */\nResizeDirective.prototype.throttle;\n/** @type {?} */\nResizeDirective.prototype.resize;\n/** @type {?} */\nResizeDirective.prototype._elementRef;\n/** @type {?} */\nResizeDirective.prototype._resizeService;\n/** @type {?} */\nResizeDirective.prototype._renderer;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\n\nimport { ResizeDirective } from './resize.directive';\nimport { ResizeService } from './resize.service';\nexport class ResizeModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    exports: [ResizeDirective],\n    declarations: [ResizeDirective],\n    providers: [ResizeService]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ResizeModule_tsickle_Closure_declarations() {\n/** @type {?} */\nResizeModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nResizeModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DashboardComponent } from './dashboard.component';\nimport { DashboardWidgetComponent } from './widget/dashboard-widget.component';\nimport { DashboardService } from './dashboard.service';\nimport { DashboardDragHandleDirective } from './drag-handle/drag-handle.directive';\nimport { ResizeModule } from '../../directives/resize/index';\n\nconst /** @type {?} */ DECLARATIONS: any[] = [\n    DashboardComponent,\n    DashboardWidgetComponent,\n    DashboardDragHandleDirective\n];\nexport class DashboardModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        CommonModule,\n        ResizeModule\n    ],\n    exports: DECLARATIONS,\n    declarations: DECLARATIONS,\n    providers: [DashboardService],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction DashboardModule_tsickle_Closure_declarations() {\n/** @type {?} */\nDashboardModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDashboardModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable } from '@angular/core';\nimport { Action } from '../../mini-ngrx/index';\nimport {\n  TimeChangeEvent,\n  TimepickerComponentState,\n  Time\n} from '../timepicker.models';\n\n\nexport class TimepickerActions {\n  static readonly WRITE_VALUE = '[timepicker] write value from ng model';\n  static readonly CHANGE_HOURS = '[timepicker] change hours';\n  static readonly CHANGE_MINUTES = '[timepicker] change minutes';\n  static readonly CHANGE_SECONDS = '[timepicker] change seconds';\n  static readonly SET_TIME_UNIT = '[timepicker] set time unit';\n  static readonly UPDATE_CONTROLS = '[timepicker] update controls';\n\n  writeValue(value: Date | string) {\n    return {\n      type: TimepickerActions.WRITE_VALUE,\n      payload: value\n    };\n  }\n\n  changeHours(event: TimeChangeEvent) {\n    return {\n      type: TimepickerActions.CHANGE_HOURS,\n      payload: event\n    };\n  }\n\n  changeMinutes(event: TimeChangeEvent) {\n    return {\n      type: TimepickerActions.CHANGE_MINUTES,\n      payload: event\n    };\n  }\n\n  changeSeconds(event: TimeChangeEvent): Action {\n    return {\n      type: TimepickerActions.CHANGE_SECONDS,\n      payload: event\n    };\n  }\n\n  setTime(value: Time): Action {\n    return {\n      type: TimepickerActions.SET_TIME_UNIT,\n      payload: value\n    };\n  }\n\n  updateControls(value: TimepickerComponentState): Action {\n    return {\n      type: TimepickerActions.UPDATE_CONTROLS,\n      payload: value\n    };\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Time } from './timepicker.models';\n\nconst dex = 10;\nconst hoursPerDay = 24;\nconst hoursPerDayHalf = 12;\nconst minutesPerHour = 60;\nconst secondsPerMinute = 60;\n\nexport function isValidDate(value?: string | Date): boolean {\n  if (!value) {\n    return false;\n  }\n\n  if (value instanceof Date && isNaN(value.getHours())) {\n    return false;\n  }\n\n  if (typeof value === 'string') {\n    return isValidDate(new Date(value));\n  }\n\n  return true;\n}\n\nexport function toNumber(value: string | number): number {\n  if (typeof value === 'number') {\n    return value;\n  }\n\n  return parseInt(value, dex);\n}\n\nexport function isNumber(value: string): boolean {\n  return !isNaN(toNumber(value));\n}\n\nexport function parseHours(\n  value: string | number,\n  isPM = false\n): number {\n  const hour = toNumber(value);\n  if (\n    isNaN(hour) ||\n    hour < 0 ||\n    hour > (isPM ? hoursPerDayHalf : hoursPerDay)\n  ) {\n    return NaN;\n  }\n\n  return hour;\n}\n\nexport function parseMinutes(value: string | number): number {\n  const minute = toNumber(value);\n  if (isNaN(minute) || minute < 0 || minute > minutesPerHour) {\n    return NaN;\n  }\n\n  return minute;\n}\n\nexport function parseSeconds(value: string | number): number {\n  const seconds = toNumber(value);\n  if (isNaN(seconds) || seconds < 0 || seconds > secondsPerMinute) {\n    return NaN;\n  }\n\n  return seconds;\n}\n\nexport function parseTime(value: string | Date): Date {\n  if (typeof value === 'string') {\n    return new Date(value);\n  }\n\n  return value;\n}\n\nexport function changeTime(value: Date, diff: Time): Date {\n  if (!value) {\n    return changeTime(createDate(new Date(), 0, 0, 0), diff);\n  }\n\n  let hour = value.getHours();\n  let minutes = value.getMinutes();\n  let seconds = value.getSeconds();\n\n  if (diff.hour) {\n    hour = (hour + toNumber(diff.hour)) % hoursPerDay;\n    if (hour < 0) {\n      hour += hoursPerDay;\n    }\n  }\n\n  if (diff.minute) {\n    minutes = minutes + toNumber(diff.minute);\n  }\n\n  if (diff.seconds) {\n    seconds = seconds + toNumber(diff.seconds);\n  }\n\n  return createDate(value, hour, minutes, seconds);\n}\n\nexport function setTime(value: Date, opts: Time): Date {\n  let hour = parseHours(opts.hour);\n  const minute = parseMinutes(opts.minute);\n  const seconds = parseSeconds(opts.seconds) || 0;\n\n  if (opts.isPM) {\n    hour += hoursPerDayHalf;\n  }\n\n  // fixme: unreachable code, value is mandatory\n  if (!value) {\n    if (!isNaN(hour) && !isNaN(minute)) {\n      return createDate(new Date(), hour, minute, seconds);\n    }\n\n    return value;\n  }\n\n  if (isNaN(hour) || isNaN(minute)) {\n    return value;\n  }\n\n  return createDate(value, hour, minute, seconds);\n}\n\nexport function createDate(\n  value: Date,\n  hours: number,\n  minutes: number,\n  seconds: number\n): Date {\n  // fixme: unreachable code, value is mandatory\n  const _value = value || new Date();\n\n  return new Date(\n    _value.getFullYear(),\n    _value.getMonth(),\n    _value.getDate(),\n    hours,\n    minutes,\n    seconds,\n    _value.getMilliseconds()\n  );\n}\n\nexport function padNumber(value: number): string {\n  const _value = value.toString();\n  if (_value.length > 1) {\n    return _value;\n  }\n\n  return `0${_value}`;\n}\n\nexport function isInputValid(\n  hours: string,\n  minutes: string,\n  seconds = '0',\n  isPM: boolean\n): boolean {\n  return !(isNaN(parseHours(hours, isPM))\n    || isNaN(parseMinutes(minutes))\n    || isNaN(parseSeconds(seconds)));\n}\n","import { changeTime } from './timepicker.utils';\nimport {\n  TimeChangeEvent,\n  TimepickerComponentState,\n  TimepickerControls\n} from './timepicker.models';\n\nexport function canChangeValue(\n  state: TimepickerComponentState,\n  event?: TimeChangeEvent\n): boolean {\n  if (state.readonlyInput) {\n    return false;\n  }\n\n  if (event) {\n    if (event.source === 'wheel' && !state.mousewheel) {\n      return false;\n    }\n\n    if (event.source === 'key' && !state.arrowkeys) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nexport function canChangeHours(\n  event: TimeChangeEvent,\n  controls: TimepickerControls\n): boolean {\n  if (!event.step) {\n    return false;\n  }\n\n  if (event.step > 0 && !controls.canIncrementHours) {\n    return false;\n  }\n\n  if (event.step < 0 && !controls.canDecrementHours) {\n    return false;\n  }\n\n  return true;\n}\n\nexport function canChangeMinutes(\n  event: TimeChangeEvent,\n  controls: TimepickerControls\n): boolean {\n  if (!event.step) {\n    return false;\n  }\n  if (event.step > 0 && !controls.canIncrementMinutes) {\n    return false;\n  }\n  if (event.step < 0 && !controls.canDecrementMinutes) {\n    return false;\n  }\n\n  return true;\n}\n\nexport function canChangeSeconds(\n  event: TimeChangeEvent,\n  controls: TimepickerControls\n): boolean {\n  if (!event.step) {\n    return false;\n  }\n  if (event.step > 0 && !controls.canIncrementSeconds) {\n    return false;\n  }\n  if (event.step < 0 && !controls.canDecrementSeconds) {\n    return false;\n  }\n\n  return true;\n}\n\nexport function getControlsValue(\n  state: TimepickerComponentState\n): TimepickerComponentState {\n  const {\n    hourStep,\n    minuteStep,\n    secondsStep,\n    readonlyInput,\n    mousewheel,\n    arrowkeys,\n    showSpinners,\n    showMeridian,\n    showSeconds,\n    meridians,\n    min,\n    max\n  } = state;\n\n  return {\n    hourStep,\n    minuteStep,\n    secondsStep,\n    readonlyInput,\n    mousewheel,\n    arrowkeys,\n    showSpinners,\n    showMeridian,\n    showSeconds,\n    meridians,\n    min,\n    max\n  };\n}\n\nexport function timepickerControls(\n  value: Date,\n  state: TimepickerComponentState\n): TimepickerControls {\n  const { min, max, hourStep, minuteStep, secondsStep, showSeconds } = state;\n  const res: TimepickerControls = {\n    canIncrementHours: true,\n    canIncrementMinutes: true,\n    canIncrementSeconds: true,\n\n    canDecrementHours: true,\n    canDecrementMinutes: true,\n    canDecrementSeconds: true\n  };\n\n  if (!value) {\n    return res;\n  }\n\n  // compare dates\n  if (max) {\n    const _newHour = changeTime(value, { hour: hourStep });\n    res.canIncrementHours = max > _newHour;\n\n    if (!res.canIncrementHours) {\n      const _newMinutes = changeTime(value, { minute: minuteStep });\n      res.canIncrementMinutes = showSeconds\n        ? max > _newMinutes\n        : max >= _newMinutes;\n    }\n\n    if (!res.canIncrementMinutes) {\n      const _newSeconds = changeTime(value, { seconds: secondsStep });\n      res.canIncrementSeconds = max >= _newSeconds;\n    }\n  }\n\n  if (min) {\n    const _newHour = changeTime(value, { hour: -hourStep });\n    res.canDecrementHours = min < _newHour;\n\n    if (!res.canDecrementHours) {\n      const _newMinutes = changeTime(value, { minute: -minuteStep });\n      res.canDecrementMinutes = showSeconds\n        ? min < _newMinutes\n        : min <= _newMinutes;\n    }\n\n    if (!res.canDecrementMinutes) {\n      const _newSeconds = changeTime(value, { seconds: -secondsStep });\n      res.canDecrementSeconds = min <= _newSeconds;\n    }\n  }\n\n  return res;\n}\n","import { Injectable } from '@angular/core';\n\n/** Provides default configuration values for timepicker */\n\nexport class TimepickerConfig {\n  /** hours change step */\n  hourStep = 1;\n  /** hours change step */\n  minuteStep = 5;\n  /** seconds changes step */\n  secondsStep = 10;\n  /** if true works in 12H mode and displays AM/PM. If false works in 24H mode and hides AM/PM */\n  showMeridian = true;\n  /** meridian labels based on locale */\n  meridians = ['AM', 'PM'];\n  /** if true hours and minutes fields will be readonly */\n  readonlyInput = false;\n  /** if true scroll inside hours and minutes inputs will change time */\n  mousewheel = true;\n  /** if true up/down arrowkeys inside hours and minutes inputs will change time */\n  arrowkeys = true;\n  /** if true spinner arrows above and below the inputs will be shown */\n  showSpinners = true;\n  /** show seconds in timepicker */\n  showSeconds = false;\n  /** minimum time user can select */\n  min: Date;\n  /** maximum time user can select */\n  max: Date;\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Action } from '../../mini-ngrx/index';\nimport {\n  canChangeHours,\n  canChangeMinutes,\n  canChangeSeconds,\n  canChangeValue,\n  timepickerControls\n} from '../timepicker-controls.util';\nimport { TimepickerConfig } from '../timepicker.config';\nimport {\n  TimepickerComponentState,\n  TimepickerControls\n} from '../timepicker.models';\nimport { changeTime, setTime } from '../timepicker.utils';\nimport { TimepickerActions } from './timepicker.actions';\n\nexport class TimepickerState {\n  value: Date;\n  config: TimepickerComponentState;\n  controls: TimepickerControls;\n}\n\nexport const initialState: TimepickerState = {\n  value: null,\n  config: new TimepickerConfig(),\n  controls: {\n    canIncrementHours: true,\n    canIncrementMinutes: true,\n    canIncrementSeconds: true,\n\n    canDecrementHours: true,\n    canDecrementMinutes: true,\n    canDecrementSeconds: true\n  }\n};\n\nexport function timepickerReducer(state = initialState, action: Action) {\n  switch (action.type) {\n    case TimepickerActions.WRITE_VALUE: {\n      return Object.assign({}, state, { value: action.payload });\n    }\n\n    case TimepickerActions.CHANGE_HOURS: {\n      if (\n        !canChangeValue(state.config, action.payload) ||\n        !canChangeHours(action.payload, state.controls)\n      ) {\n        return state;\n      }\n\n      const _newTime = changeTime(state.value, { hour: action.payload.step });\n\n      return Object.assign({}, state, { value: _newTime });\n    }\n\n    case TimepickerActions.CHANGE_MINUTES: {\n      if (\n        !canChangeValue(state.config, action.payload) ||\n        !canChangeMinutes(action.payload, state.controls)\n      ) {\n        return state;\n      }\n\n      const _newTime = changeTime(state.value, { minute: action.payload.step });\n\n      return Object.assign({}, state, { value: _newTime });\n    }\n\n    case TimepickerActions.CHANGE_SECONDS: {\n      if (\n        !canChangeValue(state.config, action.payload) ||\n        !canChangeSeconds(action.payload, state.controls)\n      ) {\n        return state;\n      }\n\n      const _newTime = changeTime(state.value, {\n        seconds: action.payload.step\n      });\n\n      return Object.assign({}, state, { value: _newTime });\n    }\n\n    case TimepickerActions.SET_TIME_UNIT: {\n      if (!canChangeValue(state.config)) {\n        return state;\n      }\n\n      const _newTime = setTime(state.value, action.payload);\n\n      return Object.assign({}, state, { value: _newTime });\n    }\n\n    case TimepickerActions.UPDATE_CONTROLS: {\n      const _newControlsState = timepickerControls(state.value, action.payload);\n      const _newState: TimepickerState = {\n        value: state.value,\n        config: action.payload,\n        controls: _newControlsState\n      };\n\n      if (state.config.showMeridian !== _newState.config.showMeridian) {\n        if(state.value){\n          _newState.value = new Date(state.value);\n        }\n      }\n\n      return Object.assign({}, state, _newState);\n    }\n\n    default:\n      return state;\n  }\n}\n","/**\n * @copyright ngrx\n */\nimport { Observable } from 'rxjs/Observable';\nimport { Observer } from 'rxjs/Observer';\nimport { Operator } from 'rxjs/Operator';\nimport { distinctUntilChanged } from 'rxjs/operator/distinctUntilChanged';\n\nimport { map } from 'rxjs/operator/map';\nimport { Action, ActionReducer } from './index';\n\nexport class MiniStore<T> extends Observable<T> implements Observer<Action> {\n  constructor(\n    private _dispatcher: Observer<Action>,\n    private _reducer: ActionReducer<any>,\n    state$: Observable<any>\n  ) {\n    super();\n\n    this.source = state$;\n  }\n\n  select<R>(pathOrMapFn: (state: T) => R): Observable<R> {\n    const mapped$: Observable<R> = map.call(this, pathOrMapFn);\n\n    return distinctUntilChanged.call(mapped$);\n  }\n\n  lift<R>(operator: Operator<T, R>): MiniStore<R> {\n    const store = new MiniStore<R>(this._dispatcher, this._reducer, this);\n    store.operator = operator;\n\n    return store;\n  }\n\n  dispatch(action: Action) {\n    this._dispatcher.next(action);\n  }\n\n  next(action: Action) {\n    this._dispatcher.next(action);\n  }\n\n  error(err: any) {\n    this._dispatcher.error(err);\n  }\n\n  complete() {\n    /*noop*/\n  }\n}\n","declare let global: any;\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\ndeclare var WorkerGlobalScope: any;\n// CommonJS / Node have global context exposed as \"global\" variable.\n// We don't want to include the whole node.d.ts this this compilation unit so we'll just fake\n// the global \"global\" var for now.\n\nconst __window = typeof window !== 'undefined' && window;\nconst __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n    self instanceof WorkerGlobalScope && self;\nconst __global = typeof global !== 'undefined' && global;\nconst _root: any = __window || __global || __self;\n\n// Workaround Closure Compiler restriction: The body of a goog.module cannot use throw.\n// This is needed when used with angular/tsickle which inserts a goog.module statement.\n// Wrap in IIFE\n(function () {\n  if (!_root) {\n    throw new Error('RxJS could not find any global context (window, self, global)');\n  }\n})();\n\nexport { _root as root };","export const isArray = Array.isArray || (<T>(x: any): x is T[] => x && typeof x.length === 'number');\n","export function isObject(x: any): x is Object {\n  return x != null && typeof x === 'object';\n}\n","export function isFunction(x: any): x is Function {\n  return typeof x === 'function';\n}\n","import { errorObject } from './errorObject';\n\nlet tryCatchTarget: Function;\n\nfunction tryCatcher(this: any): any {\n  try {\n    return tryCatchTarget.apply(this, arguments);\n  } catch (e) {\n    errorObject.e = e;\n    return errorObject;\n  }\n}\n\nexport function tryCatch<T extends Function>(fn: T): T {\n  tryCatchTarget = fn;\n  return <any>tryCatcher;\n};\n","// typeof any so that it we don't have to cast when comparing a result to the error object\nexport const errorObject: any = { e: {} };","/**\n * An error thrown when one or more errors have occurred during the\n * `unsubscribe` of a {@link Subscription}.\n */\nexport class UnsubscriptionError extends Error {\n  constructor(public errors: any[]) {\n    super();\n    const err: any = Error.call(this, errors ?\n      `${errors.length} errors occurred during unsubscription:\n  ${errors.map((err, i) => `${i + 1}) ${err.toString()}`).join('\\n  ')}` : '');\n    (<any> this).name = err.name = 'UnsubscriptionError';\n    (<any> this).stack = err.stack;\n    (<any> this).message = err.message;\n  }\n}\n","import { isArray } from './util/isArray';\nimport { isObject } from './util/isObject';\nimport { isFunction } from './util/isFunction';\nimport { tryCatch } from './util/tryCatch';\nimport { errorObject } from './util/errorObject';\nimport { UnsubscriptionError } from './util/UnsubscriptionError';\n\nexport interface AnonymousSubscription {\n  unsubscribe(): void;\n}\n\nexport type TeardownLogic = AnonymousSubscription | Function | void;\n\nexport interface ISubscription extends AnonymousSubscription {\n  unsubscribe(): void;\n  readonly closed: boolean;\n}\n\n/**\n * Represents a disposable resource, such as the execution of an Observable. A\n * Subscription has one important method, `unsubscribe`, that takes no argument\n * and just disposes the resource held by the subscription.\n *\n * Additionally, subscriptions may be grouped together through the `add()`\n * method, which will attach a child Subscription to the current Subscription.\n * When a Subscription is unsubscribed, all its children (and its grandchildren)\n * will be unsubscribed as well.\n *\n * @class Subscription\n */\nexport class Subscription implements ISubscription {\n  public static EMPTY: Subscription = (function(empty: any){\n    empty.closed = true;\n    return empty;\n  }(new Subscription()));\n\n  /**\n   * A flag to indicate whether this Subscription has already been unsubscribed.\n   * @type {boolean}\n   */\n  public closed: boolean = false;\n\n  protected _parent: Subscription = null;\n  protected _parents: Subscription[] = null;\n  private _subscriptions: ISubscription[] = null;\n\n  /**\n   * @param {function(): void} [unsubscribe] A function describing how to\n   * perform the disposal of resources when the `unsubscribe` method is called.\n   */\n  constructor(unsubscribe?: () => void) {\n    if (unsubscribe) {\n      (<any> this)._unsubscribe = unsubscribe;\n    }\n  }\n\n  /**\n   * Disposes the resources held by the subscription. May, for instance, cancel\n   * an ongoing Observable execution or cancel any other type of work that\n   * started when the Subscription was created.\n   * @return {void}\n   */\n  unsubscribe(): void {\n    let hasErrors = false;\n    let errors: any[];\n\n    if (this.closed) {\n      return;\n    }\n\n    let { _parent, _parents, _unsubscribe, _subscriptions } = (<any> this);\n\n    this.closed = true;\n    this._parent = null;\n    this._parents = null;\n    // null out _subscriptions first so any child subscriptions that attempt\n    // to remove themselves from this subscription will noop\n    this._subscriptions = null;\n\n    let index = -1;\n    let len = _parents ? _parents.length : 0;\n\n    // if this._parent is null, then so is this._parents, and we\n    // don't have to remove ourselves from any parent subscriptions.\n    while (_parent) {\n      _parent.remove(this);\n      // if this._parents is null or index >= len,\n      // then _parent is set to null, and the loop exits\n      _parent = ++index < len && _parents[index] || null;\n    }\n\n    if (isFunction(_unsubscribe)) {\n      let trial = tryCatch(_unsubscribe).call(this);\n      if (trial === errorObject) {\n        hasErrors = true;\n        errors = errors || (\n          errorObject.e instanceof UnsubscriptionError ?\n            flattenUnsubscriptionErrors(errorObject.e.errors) : [errorObject.e]\n        );\n      }\n    }\n\n    if (isArray(_subscriptions)) {\n\n      index = -1;\n      len = _subscriptions.length;\n\n      while (++index < len) {\n        const sub = _subscriptions[index];\n        if (isObject(sub)) {\n          let trial = tryCatch(sub.unsubscribe).call(sub);\n          if (trial === errorObject) {\n            hasErrors = true;\n            errors = errors || [];\n            let err = errorObject.e;\n            if (err instanceof UnsubscriptionError) {\n              errors = errors.concat(flattenUnsubscriptionErrors(err.errors));\n            } else {\n              errors.push(err);\n            }\n          }\n        }\n      }\n    }\n\n    if (hasErrors) {\n      throw new UnsubscriptionError(errors);\n    }\n  }\n\n  /**\n   * Adds a tear down to be called during the unsubscribe() of this\n   * Subscription.\n   *\n   * If the tear down being added is a subscription that is already\n   * unsubscribed, is the same reference `add` is being called on, or is\n   * `Subscription.EMPTY`, it will not be added.\n   *\n   * If this subscription is already in an `closed` state, the passed\n   * tear down logic will be executed immediately.\n   *\n   * @param {TeardownLogic} teardown The additional logic to execute on\n   * teardown.\n   * @return {Subscription} Returns the Subscription used or created to be\n   * added to the inner subscriptions list. This Subscription can be used with\n   * `remove()` to remove the passed teardown logic from the inner subscriptions\n   * list.\n   */\n  add(teardown: TeardownLogic): Subscription {\n    if (!teardown || (teardown === Subscription.EMPTY)) {\n      return Subscription.EMPTY;\n    }\n\n    if (teardown === this) {\n      return this;\n    }\n\n    let subscription = (<Subscription> teardown);\n\n    switch (typeof teardown) {\n      case 'function':\n        subscription = new Subscription(<(() => void) > teardown);\n      case 'object':\n        if (subscription.closed || typeof subscription.unsubscribe !== 'function') {\n          return subscription;\n        } else if (this.closed) {\n          subscription.unsubscribe();\n          return subscription;\n        } else if (typeof subscription._addParent !== 'function' /* quack quack */) {\n          const tmp = subscription;\n          subscription = new Subscription();\n          subscription._subscriptions = [tmp];\n        }\n        break;\n      default:\n        throw new Error('unrecognized teardown ' + teardown + ' added to Subscription.');\n    }\n\n    const subscriptions = this._subscriptions || (this._subscriptions = []);\n\n    subscriptions.push(subscription);\n    subscription._addParent(this);\n\n    return subscription;\n  }\n\n  /**\n   * Removes a Subscription from the internal list of subscriptions that will\n   * unsubscribe during the unsubscribe process of this Subscription.\n   * @param {Subscription} subscription The subscription to remove.\n   * @return {void}\n   */\n  remove(subscription: Subscription): void {\n    const subscriptions = this._subscriptions;\n    if (subscriptions) {\n      const subscriptionIndex = subscriptions.indexOf(subscription);\n      if (subscriptionIndex !== -1) {\n        subscriptions.splice(subscriptionIndex, 1);\n      }\n    }\n  }\n\n  private _addParent(parent: Subscription) {\n    let { _parent, _parents } = this;\n    if (!_parent || _parent === parent) {\n      // If we don't have a parent, or the new parent is the same as the\n      // current parent, then set this._parent to the new parent.\n      this._parent = parent;\n    } else if (!_parents) {\n      // If there's already one parent, but not multiple, allocate an Array to\n      // store the rest of the parent Subscriptions.\n      this._parents = [parent];\n    } else if (_parents.indexOf(parent) === -1) {\n      // Only add the new parent to the _parents list if it's not already there.\n      _parents.push(parent);\n    }\n  }\n}\n\nfunction flattenUnsubscriptionErrors(errors: any[]) {\n return errors.reduce((errs, err) => errs.concat((err instanceof UnsubscriptionError) ? err.errors : err), []);\n}\n","import { Scheduler } from '../Scheduler';\nimport { Subscription } from '../Subscription';\n\n/**\n * A unit of work to be executed in a {@link Scheduler}. An action is typically\n * created from within a Scheduler and an RxJS user does not need to concern\n * themselves about creating and manipulating an Action.\n *\n * ```ts\n * class Action<T> extends Subscription {\n *   new (scheduler: Scheduler, work: (state?: T) => void);\n *   schedule(state?: T, delay: number = 0): Subscription;\n * }\n * ```\n *\n * @class Action<T>\n */\nexport class Action<T> extends Subscription {\n  constructor(scheduler: Scheduler, work: (this: Action<T>, state?: T) => void) {\n    super();\n  }\n  /**\n   * Schedules this action on its parent Scheduler for execution. May be passed\n   * some context object, `state`. May happen at some point in the future,\n   * according to the `delay` parameter, if specified.\n   * @param {T} [state] Some contextual data that the `work` function uses when\n   * called by the Scheduler.\n   * @param {number} [delay] Time to wait before executing the work, where the\n   * time unit is implicit and defined by the Scheduler.\n   * @return {void}\n   */\n  public schedule(state?: T, delay: number = 0): Subscription {\n    return this;\n  }\n}\n","import { root } from '../util/root';\nimport { Action } from './Action';\nimport { Subscription } from '../Subscription';\nimport { AsyncScheduler } from './AsyncScheduler';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class AsyncAction<T> extends Action<T> {\n\n  public id: any;\n  public state: T;\n  public delay: number;\n  protected pending: boolean = false;\n\n  constructor(protected scheduler: AsyncScheduler,\n              protected work: (this: AsyncAction<T>, state?: T) => void) {\n    super(scheduler, work);\n  }\n\n  public schedule(state?: T, delay: number = 0): Subscription {\n\n    if (this.closed) {\n      return this;\n     }\n\n    // Always replace the current state with the new state.\n    this.state = state;\n\n    // Set the pending flag indicating that this action has been scheduled, or\n    // has recursively rescheduled itself.\n    this.pending = true;\n\n    const id = this.id;\n    const scheduler = this.scheduler;\n\n    //\n    // Important implementation note:\n    //\n    // Actions only execute once by default, unless rescheduled from within the\n    // scheduled callback. This allows us to implement single and repeat\n    // actions via the same code path, without adding API surface area, as well\n    // as mimic traditional recursion but across asynchronous boundaries.\n    //\n    // However, JS runtimes and timers distinguish between intervals achieved by\n    // serial `setTimeout` calls vs. a single `setInterval` call. An interval of\n    // serial `setTimeout` calls can be individually delayed, which delays\n    // scheduling the next `setTimeout`, and so on. `setInterval` attempts to\n    // guarantee the interval callback will be invoked more precisely to the\n    // interval period, regardless of load.\n    //\n    // Therefore, we use `setInterval` to schedule single and repeat actions.\n    // If the action reschedules itself with the same delay, the interval is not\n    // canceled. If the action doesn't reschedule, or reschedules with a\n    // different delay, the interval will be canceled after scheduled callback\n    // execution.\n    //\n    if (id != null) {\n      this.id = this.recycleAsyncId(scheduler, id, delay);\n    }\n\n    this.delay = delay;\n    // If this action has already an async Id, don't request a new one.\n    this.id = this.id || this.requestAsyncId(scheduler, this.id, delay);\n\n    return this;\n  }\n\n  protected requestAsyncId(scheduler: AsyncScheduler, id?: any, delay: number = 0): any {\n    return root.setInterval(scheduler.flush.bind(scheduler, this), delay);\n  }\n\n  protected recycleAsyncId(scheduler: AsyncScheduler, id: any, delay: number = 0): any {\n    // If this action is rescheduled with the same delay time, don't clear the interval id.\n    if (delay !== null && this.delay === delay && this.pending === false) {\n      return id;\n    }\n    // Otherwise, if the action's delay time is different from the current delay,\n    // or the action has been rescheduled before it's executed, clear the interval id\n    return root.clearInterval(id) && undefined || undefined;\n  }\n\n  /**\n   * Immediately executes this action and the `work` it contains.\n   * @return {any}\n   */\n  public execute(state: T, delay: number): any {\n\n    if (this.closed) {\n      return new Error('executing a cancelled action');\n    }\n\n    this.pending = false;\n    const error = this._execute(state, delay);\n    if (error) {\n      return error;\n    } else if (this.pending === false && this.id != null) {\n      // Dequeue if the action didn't reschedule itself. Don't call\n      // unsubscribe(), because the action could reschedule later.\n      // For example:\n      // ```\n      // scheduler.schedule(function doWork(counter) {\n      //   /* ... I'm a busy worker bee ... */\n      //   var originalAction = this;\n      //   /* wait 100ms before rescheduling the action */\n      //   setTimeout(function () {\n      //     originalAction.schedule(counter + 1);\n      //   }, 100);\n      // }, 1000);\n      // ```\n      this.id = this.recycleAsyncId(this.scheduler, this.id, null);\n    }\n  }\n\n  protected _execute(state: T, delay: number): any {\n    let errored: boolean = false;\n    let errorValue: any = undefined;\n    try {\n      this.work(state);\n    } catch (e) {\n      errored = true;\n      errorValue = !!e && e || new Error(e);\n    }\n    if (errored) {\n      this.unsubscribe();\n      return errorValue;\n    }\n  }\n\n  protected _unsubscribe() {\n\n    const id = this.id;\n    const scheduler = this.scheduler;\n    const actions = scheduler.actions;\n    const index = actions.indexOf(this);\n\n    this.work  = null;\n    this.state = null;\n    this.pending = false;\n    this.scheduler = null;\n\n    if (index !== -1) {\n      actions.splice(index, 1);\n    }\n\n    if (id != null) {\n      this.id = this.recycleAsyncId(scheduler, id, null);\n    }\n\n    this.delay = null;\n  }\n}\n","import { AsyncAction } from './AsyncAction';\nimport { Subscription } from '../Subscription';\nimport { QueueScheduler } from './QueueScheduler';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class QueueAction<T> extends AsyncAction<T> {\n\n  constructor(protected scheduler: QueueScheduler,\n              protected work: (this: QueueAction<T>, state?: T) => void) {\n    super(scheduler, work);\n  }\n\n  public schedule(state?: T, delay: number = 0): Subscription {\n    if (delay > 0) {\n      return super.schedule(state, delay);\n    }\n    this.delay = delay;\n    this.state = state;\n    this.scheduler.flush(this);\n    return this;\n  }\n\n  public execute(state: T, delay: number): any {\n    return (delay > 0 || this.closed) ?\n      super.execute(state, delay) :\n      this._execute(state, delay) ;\n  }\n\n  protected requestAsyncId(scheduler: QueueScheduler, id?: any, delay: number = 0): any {\n    // If delay exists and is greater than 0, or if the delay is null (the\n    // action wasn't rescheduled) but was originally scheduled as an async\n    // action, then recycle as an async action.\n    if ((delay !== null && delay > 0) || (delay === null && this.delay > 0)) {\n      return super.requestAsyncId(scheduler, id, delay);\n    }\n    // Otherwise flush the scheduler starting with this action.\n    return scheduler.flush(this);\n  }\n}\n","import { Action } from './scheduler/Action';\nimport { Subscription } from './Subscription';\n\nexport interface IScheduler {\n  now(): number;\n  schedule<T>(work: (this: Action<T>, state?: T) => void, delay?: number, state?: T): Subscription;\n}\n/**\n * An execution context and a data structure to order tasks and schedule their\n * execution. Provides a notion of (potentially virtual) time, through the\n * `now()` getter method.\n *\n * Each unit of work in a Scheduler is called an {@link Action}.\n *\n * ```ts\n * class Scheduler {\n *   now(): number;\n *   schedule(work, delay?, state?): Subscription;\n * }\n * ```\n *\n * @class Scheduler\n */\nexport class Scheduler implements IScheduler {\n\n  public static now: () => number = Date.now ? Date.now : () => +new Date();\n\n  constructor(private SchedulerAction: typeof Action,\n              now: () => number = Scheduler.now) {\n    this.now = now;\n  }\n\n  /**\n   * A getter method that returns a number representing the current time\n   * (at the time this function was called) according to the scheduler's own\n   * internal clock.\n   * @return {number} A number that represents the current time. May or may not\n   * have a relation to wall-clock time. May or may not refer to a time unit\n   * (e.g. milliseconds).\n   */\n  public now: () => number;\n\n  /**\n   * Schedules a function, `work`, for execution. May happen at some point in\n   * the future, according to the `delay` parameter, if specified. May be passed\n   * some context object, `state`, which will be passed to the `work` function.\n   *\n   * The given arguments will be processed an stored as an Action object in a\n   * queue of actions.\n   *\n   * @param {function(state: ?T): ?Subscription} work A function representing a\n   * task, or some unit of work to be executed by the Scheduler.\n   * @param {number} [delay] Time to wait before executing the work, where the\n   * time unit is implicit and defined by the Scheduler itself.\n   * @param {T} [state] Some contextual data that the `work` function uses when\n   * called by the Scheduler.\n   * @return {Subscription} A subscription in order to be able to unsubscribe\n   * the scheduled work.\n   */\n  public schedule<T>(work: (this: Action<T>, state?: T) => void, delay: number = 0, state?: T): Subscription {\n    return new this.SchedulerAction<T>(this, work).schedule(state, delay);\n  }\n}\n","import { Scheduler } from '../Scheduler';\nimport { AsyncAction } from './AsyncAction';\n\nexport class AsyncScheduler extends Scheduler {\n  public actions: Array<AsyncAction<any>> = [];\n  /**\n   * A flag to indicate whether the Scheduler is currently executing a batch of\n   * queued actions.\n   * @type {boolean}\n   */\n  public active: boolean = false;\n  /**\n   * An internal ID used to track the latest asynchronous task such as those\n   * coming from `setTimeout`, `setInterval`, `requestAnimationFrame`, and\n   * others.\n   * @type {any}\n   */\n  public scheduled: any = undefined;\n\n  public flush(action: AsyncAction<any>): void {\n\n    const {actions} = this;\n\n    if (this.active) {\n      actions.push(action);\n      return;\n    }\n\n    let error: any;\n    this.active = true;\n\n    do {\n      if (error = action.execute(action.state, action.delay)) {\n        break;\n      }\n    } while (action = actions.shift()); // exhaust the scheduler queue\n\n    this.active = false;\n\n    if (error) {\n      while (action = actions.shift()) {\n        action.unsubscribe();\n      }\n      throw error;\n    }\n  }\n}\n","import { QueueAction } from './QueueAction';\nimport { QueueScheduler } from './QueueScheduler';\n\n/**\n *\n * Queue Scheduler\n *\n * <span class=\"informal\">Put every next task on a queue, instead of executing it immediately</span>\n *\n * `queue` scheduler, when used with delay, behaves the same as {@link async} scheduler.\n *\n * When used without delay, it schedules given task synchronously - executes it right when\n * it is scheduled. However when called recursively, that is when inside the scheduled task,\n * another task is scheduled with queue scheduler, instead of executing immediately as well,\n * that task will be put on a queue and wait for current one to finish.\n *\n * This means that when you execute task with `queue` scheduler, you are sure it will end\n * before any other task scheduled with that scheduler will start.\n *\n * @examples <caption>Schedule recursively first, then do something</caption>\n *\n * Rx.Scheduler.queue.schedule(() => {\n *   Rx.Scheduler.queue.schedule(() => console.log('second')); // will not happen now, but will be put on a queue\n *\n *   console.log('first');\n * });\n *\n * // Logs:\n * // \"first\"\n * // \"second\"\n *\n *\n * @example <caption>Reschedule itself recursively</caption>\n *\n * Rx.Scheduler.queue.schedule(function(state) {\n *   if (state !== 0) {\n *     console.log('before', state);\n *     this.schedule(state - 1); // `this` references currently executing Action,\n *                               // which we reschedule with new state\n *     console.log('after', state);\n *   }\n * }, 0, 3);\n *\n * // In scheduler that runs recursively, you would expect:\n * // \"before\", 3\n * // \"before\", 2\n * // \"before\", 1\n * // \"after\", 1\n * // \"after\", 2\n * // \"after\", 3\n *\n * // But with queue it logs:\n * // \"before\", 3\n * // \"after\", 3\n * // \"before\", 2\n * // \"after\", 2\n * // \"before\", 1\n * // \"after\", 1\n *\n *\n * @static true\n * @name queue\n * @owner Scheduler\n */\n\nexport const queue = new QueueScheduler(QueueAction);\n","import { AsyncScheduler } from './AsyncScheduler';\n\nexport class QueueScheduler extends AsyncScheduler {\n}\n","/**\n * @copyright ngrx\n */\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { Observable } from 'rxjs/Observable';\nimport { Action, ActionReducer } from './index';\nimport { observeOn } from 'rxjs/operator/observeOn';\nimport { queue } from 'rxjs/scheduler/queue';\nimport { scan } from 'rxjs/operator/scan';\n\nexport class MiniState<T> extends BehaviorSubject<T> {\n  constructor(\n    _initialState: T,\n    actionsDispatcher$: Observable<Action>,\n    reducer: ActionReducer<T>\n  ) {\n    super(_initialState);\n\n    const actionInQueue$ = observeOn.call(actionsDispatcher$, queue);\n    const state$ = scan.call(\n      actionInQueue$,\n      (state: T, action: Action) => {\n        if (!action) {\n          return state;\n        }\n\n        return reducer(state, action);\n      },\n      _initialState\n    );\n\n    state$.subscribe((value: T) => this.next(value));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  timepickerReducer,\n  TimepickerState,\n  initialState\n} from './timepicker.reducer';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\n\nimport { Action } from '../../mini-ngrx/index';\nimport { MiniStore } from '../../mini-ngrx/store.class';\nimport { MiniState } from '../../mini-ngrx/state.class';\n\n\nexport class TimepickerStore extends MiniStore<TimepickerState> {\n  constructor() {\n    const _dispatcher = new BehaviorSubject<Action>({\n      type: '[mini-ngrx] dispatcher init'\n    });\n    const state = new MiniState<TimepickerState>(\n      initialState,\n      _dispatcher,\n      timepickerReducer\n    );\n    super(_dispatcher, timepickerReducer, state);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/* tslint:disable:no-forward-ref max-file-line-count */\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  forwardRef,\n  Input,\n  OnChanges,\n  Output,\n  SimpleChanges, ViewEncapsulation\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nimport { TimepickerActions } from './reducer/timepicker.actions';\nimport { TimepickerStore } from './reducer/timepicker.store';\nimport { getControlsValue } from './timepicker-controls.util';\nimport { TimepickerConfig } from './timepicker.config';\nimport {\n  TimeChangeSource,\n  TimepickerComponentState,\n  TimepickerControls\n} from './timepicker.models';\nimport {\n  isValidDate,\n  padNumber,\n  parseTime,\n  isInputValid\n} from './timepicker.utils';\nimport { fakeAsync } from '@angular/core/testing';\n\nexport const TIMEPICKER_CONTROL_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  // tslint:disable-next-line\n  useExisting: forwardRef(() => TimepickerComponent),\n  multi: true\n};\n\n\nexport class TimepickerComponent\n  implements ControlValueAccessor,\n    TimepickerComponentState,\n    TimepickerControls,\n    OnChanges {\n  /** hours change step */\n   hourStep: number;\n  /** hours change step */\n   minuteStep: number;\n  /** seconds change step */\n   secondsStep: number;\n  /** if true hours and minutes fields will be readonly */\n   readonlyInput: boolean;\n  /** if true scroll inside hours and minutes inputs will change time */\n   mousewheel: boolean;\n  /** if true up/down arrowkeys inside hours and minutes inputs will change time */\n   arrowkeys: boolean;\n  /** if true spinner arrows above and below the inputs will be shown */\n   showSpinners: boolean;\n   showMeridian: boolean;\n   showSeconds: boolean;\n\n  /** meridian labels based on locale */\n   meridians: string[];\n\n  /** minimum time user can select */\n   min: Date;\n  /** maximum time user can select */\n   max: Date;\n\n  /** emits true if value is a valid date */\n   isValid: EventEmitter<boolean> = new EventEmitter();\n\n  // ui variables\n  hours: string;\n  minutes: string;\n  seconds: string;\n  meridian: string;\n\n  get isSpinnersVisible(): boolean {\n    return this.showSpinners && !this.readonlyInput;\n  }\n\n  // min\\max validation for input fields\n  invalidHours = false;\n  invalidMinutes = false;\n  invalidSeconds = false;\n\n  // time picker controls state\n  canIncrementHours: boolean;\n  canIncrementMinutes: boolean;\n  canIncrementSeconds: boolean;\n\n  canDecrementHours: boolean;\n  canDecrementMinutes: boolean;\n  canDecrementSeconds: boolean;\n\n  // control value accessor methods\n  onChange: any = Function.prototype;\n  onTouched: any = Function.prototype;\n\n  constructor(\n    _config: TimepickerConfig,\n    _cd: ChangeDetectorRef,\n    private _store: TimepickerStore,\n    private _timepickerActions: TimepickerActions\n  ) {\n    Object.assign(this, _config);\n    // todo: add unsubscribe\n    _store.select(state => state.value).subscribe(value => {\n      // update UI values if date changed\n      this._renderTime(value);\n      this.onChange(value);\n\n      this._store.dispatch(\n        this._timepickerActions.updateControls(getControlsValue(this))\n      );\n    });\n\n    _store.select(state => state.controls).subscribe(controlsState => {\n      this.isValid.emit(\n        isInputValid(this.hours, this.minutes, this.seconds, this.isPM())\n      );\n      Object.assign(this, controlsState);\n      _cd.markForCheck();\n    });\n  }\n\n  isPM(): boolean {\n    return this.showMeridian && this.meridian === this.meridians[1];\n  }\n\n  prevDef($event: any) {\n    $event.preventDefault();\n  }\n\n  wheelSign($event: any): number {\n    return Math.sign($event.deltaY as number) * -1;\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this._store.dispatch(\n      this._timepickerActions.updateControls(getControlsValue(this))\n    );\n  }\n\n  changeHours(step: number, source: TimeChangeSource = ''): void {\n    this._store.dispatch(this._timepickerActions.changeHours({ step, source }));\n  }\n\n  changeMinutes(step: number, source: TimeChangeSource = ''): void {\n    this._store.dispatch(\n      this._timepickerActions.changeMinutes({ step, source })\n    );\n  }\n\n  changeSeconds(step: number, source: TimeChangeSource = ''): void {\n    this._store.dispatch(\n      this._timepickerActions.changeSeconds({ step, source })\n    );\n  }\n\n  updateHours(hours: string): void {\n    this.hours = hours;\n    this._updateTime();\n  }\n\n  updateMinutes(minutes: string) {\n    this.minutes = minutes;\n    this._updateTime();\n  }\n\n  updateSeconds(seconds: string) {\n    this.seconds = seconds;\n    this._updateTime();\n  }\n\n  _updateTime() {\n    const _seconds = this.showSeconds ? this.seconds : void 0;\n    if (!isInputValid(this.hours, this.minutes, _seconds, this.isPM())) {\n      this.isValid.emit(false);\n      this.onChange(null);\n\n      return;\n    }\n    this._store.dispatch(\n      this._timepickerActions.setTime({\n        hour: this.hours,\n        minute: this.minutes,\n        seconds: this.seconds,\n        isPM: this.isPM()\n      })\n    );\n  }\n\n  toggleMeridian(): void {\n    if (!this.showMeridian || this.readonlyInput) {\n      return;\n    }\n\n    const _hoursPerDayHalf = 12;\n    this._store.dispatch(\n      this._timepickerActions.changeHours({\n        step: _hoursPerDayHalf,\n        source: ''\n      })\n    );\n  }\n\n  /**\n   * Write a new value to the element.\n   */\n  writeValue(obj: any): void {\n    if (isValidDate(obj)) {\n      this._store.dispatch(this._timepickerActions.writeValue(parseTime(obj)));\n    } else if (obj == null) {\n      this._store.dispatch(this._timepickerActions.writeValue(null));\n    }\n  }\n\n  /**\n   * Set the function to be called when the control receives a change event.\n   */\n  registerOnChange(fn: (_: any) => {}): void {\n    this.onChange = fn;\n  }\n\n  /**\n   * Set the function to be called when the control receives a touch event.\n   */\n  registerOnTouched(fn: () => {}): void {\n    this.onTouched = fn;\n  }\n\n  /**\n   * This function is called when the control status changes to or from \"DISABLED\".\n   * Depending on the value, it will enable or disable the appropriate DOM element.\n   *\n   * @param isDisabled\n   */\n  setDisabledState(isDisabled: boolean): void {\n    this.readonlyInput = isDisabled;\n  }\n\n  private _renderTime(value: string | Date): void {\n    if (!isValidDate(value)) {\n      this.hours = '';\n      this.minutes = '';\n      this.seconds = '';\n      this.meridian = this.meridians[0];\n\n      return;\n    }\n\n    const _value = parseTime(value);\n    const _hoursPerDayHalf = 12;\n    let _hours = _value.getHours();\n\n    if (this.showMeridian) {\n      this.meridian = this.meridians[_hours >= _hoursPerDayHalf ? 1 : 0];\n      _hours = _hours % _hoursPerDayHalf;\n      // should be 12 PM, not 00 PM\n      if (_hours === 0) {\n        _hours = _hoursPerDayHalf;\n      }\n    }\n\n    this.hours = padNumber(_hours);\n    this.minutes = padNumber(_value.getMinutes());\n    this.seconds = padNumber(_value.getUTCSeconds());\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'timepicker',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [TIMEPICKER_CONTROL_VALUE_ACCESSOR, TimepickerStore],\n  template: \"<table> <tbody> <tr class=\\\"text-center\\\" [class.hidden]=\\\"!isSpinnersVisible\\\"> <!-- increment hours button--> <td> <a class=\\\"btn btn-link\\\" [class.disabled]=\\\"!canIncrementHours\\\" (click)=\\\"changeHours(hourStep)\\\" ><span class=\\\"bs-chevron bs-chevron-up\\\"></span></a> </td> <!-- divider --> <td>&nbsp;&nbsp;&nbsp;</td> <!-- increment minutes button --> <td> <a class=\\\"btn btn-link\\\" [class.disabled]=\\\"!canIncrementMinutes\\\" (click)=\\\"changeMinutes(minuteStep)\\\" ><span class=\\\"bs-chevron bs-chevron-up\\\"></span></a> </td> <!-- divider --> <td *ngIf=\\\"showSeconds\\\">&nbsp;</td> <!-- increment seconds button --> <td *ngIf=\\\"showSeconds\\\"> <a class=\\\"btn btn-link\\\" [class.disabled]=\\\"!canIncrementSeconds\\\" (click)=\\\"changeSeconds(secondsStep)\\\"> <span class=\\\"bs-chevron bs-chevron-up\\\"></span> </a> </td> <!-- space between --> <td>&nbsp;&nbsp;&nbsp;</td> <!-- meridian placeholder--> <td *ngIf=\\\"showMeridian\\\"></td> </tr> <tr> <!-- hours --> <td class=\\\"form-group\\\" [class.has-error]=\\\"invalidHours\\\"> <input type=\\\"text\\\" class=\\\"form-control text-center bs-timepicker-field\\\" placeholder=\\\"HH\\\" maxlength=\\\"2\\\" [readonly]=\\\"readonlyInput\\\" [value]=\\\"hours\\\" (wheel)=\\\"prevDef($event);changeHours(hourStep * wheelSign($event), 'wheel')\\\" (keydown.ArrowUp)=\\\"changeHours(hourStep, 'key')\\\" (keydown.ArrowDown)=\\\"changeHours(-hourStep, 'key')\\\" (change)=\\\"updateHours($event.target.value)\\\"></td> <!-- divider --> <td>&nbsp;:&nbsp;</td> <!-- minutes --> <td class=\\\"form-group\\\" [class.has-error]=\\\"invalidMinutes\\\"> <input type=\\\"text\\\" class=\\\"form-control text-center bs-timepicker-field\\\" placeholder=\\\"MM\\\" maxlength=\\\"2\\\" [readonly]=\\\"readonlyInput\\\" [value]=\\\"minutes\\\" (wheel)=\\\"prevDef($event);changeMinutes(minuteStep * wheelSign($event), 'wheel')\\\" (keydown.ArrowUp)=\\\"changeMinutes(minuteStep, 'key')\\\" (keydown.ArrowDown)=\\\"changeMinutes(-minuteStep, 'key')\\\" (change)=\\\"updateMinutes($event.target.value)\\\"> </td> <!-- divider --> <td *ngIf=\\\"showSeconds\\\">&nbsp;:&nbsp;</td> <!-- seconds --> <td class=\\\"form-group\\\" *ngIf=\\\"showSeconds\\\" [class.has-error]=\\\"invalidSeconds\\\"> <input type=\\\"text\\\" class=\\\"form-control text-center bs-timepicker-field\\\" placeholder=\\\"SS\\\" maxlength=\\\"2\\\" [readonly]=\\\"readonlyInput\\\" [value]=\\\"seconds\\\" (wheel)=\\\"prevDef($event);changeSeconds(secondsStep * wheelSign($event), 'wheel')\\\" (keydown.ArrowUp)=\\\"changeSeconds(secondsStep, 'key')\\\" (keydown.ArrowDown)=\\\"changeSeconds(-secondsStep, 'key')\\\" (change)=\\\"updateSeconds($event.target.value)\\\"> </td> <!-- space between --> <td>&nbsp;&nbsp;&nbsp;</td> <!-- meridian --> <td *ngIf=\\\"showMeridian\\\"> <button type=\\\"button\\\" class=\\\"btn btn-default text-center\\\" [disabled]=\\\"readonlyInput\\\" [class.disabled]=\\\"readonlyInput\\\" (click)=\\\"toggleMeridian()\\\" >{{ meridian }} </button> </td> </tr> <tr class=\\\"text-center\\\" [class.hidden]=\\\"!isSpinnersVisible\\\"> <!-- decrement hours button--> <td> <a class=\\\"btn btn-link\\\" [class.disabled]=\\\"!canDecrementHours\\\" (click)=\\\"changeHours(-hourStep)\\\"> <span class=\\\"bs-chevron bs-chevron-down\\\"></span> </a> </td> <!-- divider --> <td>&nbsp;&nbsp;&nbsp;</td> <!-- decrement minutes button--> <td> <a class=\\\"btn btn-link\\\" [class.disabled]=\\\"!canDecrementMinutes\\\" (click)=\\\"changeMinutes(-minuteStep)\\\"> <span class=\\\"bs-chevron bs-chevron-down\\\"></span> </a> </td> <!-- divider --> <td *ngIf=\\\"showSeconds\\\">&nbsp;</td> <!-- decrement seconds button--> <td *ngIf=\\\"showSeconds\\\"> <a class=\\\"btn btn-link\\\" [class.disabled]=\\\"!canDecrementSeconds\\\" (click)=\\\"changeSeconds(-secondsStep)\\\"> <span class=\\\"bs-chevron bs-chevron-down\\\"></span> </a> </td> <!-- space between --> <td>&nbsp;&nbsp;&nbsp;</td> <!-- meridian placeholder--> <td *ngIf=\\\"showMeridian\\\"></td> </tr> </tbody> </table> \",\n  styles: [`\n    .bs-chevron{\n      border-style: solid;\n      display: block;\n      width: 9px;\n      height: 9px;\n      position: relative;\n      border-width: 3px 0px 0 3px;\n    }\n    .bs-chevron-up{\n      -webkit-transform: rotate(45deg);\n      transform: rotate(45deg);\n      top: 2px;\n    }\n    .bs-chevron-down{\n      -webkit-transform: rotate(-135deg);\n      transform: rotate(-135deg);\n      top: -2px;\n    }\n    .bs-timepicker-field{\n      width: 50px;\n    }\n  `],\n  encapsulation: ViewEncapsulation.None\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: TimepickerConfig, },\n{type: ChangeDetectorRef, },\n{type: TimepickerStore, },\n{type: TimepickerActions, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'hourStep': [{ type: Input },],\n'minuteStep': [{ type: Input },],\n'secondsStep': [{ type: Input },],\n'readonlyInput': [{ type: Input },],\n'mousewheel': [{ type: Input },],\n'arrowkeys': [{ type: Input },],\n'showSpinners': [{ type: Input },],\n'showMeridian': [{ type: Input },],\n'showSeconds': [{ type: Input },],\n'meridians': [{ type: Input },],\n'min': [{ type: Input },],\n'max': [{ type: Input },],\n'isValid': [{ type: Output },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { ModuleWithProviders, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { TimepickerComponent } from './timepicker.component';\nimport { TimepickerActions } from './reducer/timepicker.actions';\nimport { TimepickerConfig } from './timepicker.config';\nimport { TimepickerStore } from './reducer/timepicker.store';\n\n\nexport class TimepickerModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: TimepickerModule,\n      providers: [TimepickerConfig, TimepickerActions, TimepickerStore]\n    };\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  imports: [CommonModule],\n  declarations: [TimepickerComponent],\n  exports: [TimepickerComponent]\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","// tslint:disable:no-use-before-declare\nimport {\n  Directive,\n  HostBinding,\n  HostListener,\n  Input,\n  OnInit,\n  forwardRef\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\n// TODO: config: activeClass - Class to apply to the checked buttons\n\nexport const CHECKBOX_CONTROL_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => ButtonCheckboxDirective),\n  multi: true\n};\n\n/**\n * Add checkbox functionality to any element\n */\n\nexport class ButtonCheckboxDirective implements ControlValueAccessor, OnInit {\n  /** Truthy value, will be set to ngModel */\n   btnCheckboxTrue: any = true;\n  /** Falsy value, will be set to ngModel */\n   btnCheckboxFalse: any = false;\n\n   state = false;\n\n  protected value: any;\n  protected isDisabled: boolean;\n\n  protected onChange: any = Function.prototype;\n  protected onTouched: any = Function.prototype;\n\n  // view -> model\n  \n  onClick(): void {\n    if (this.isDisabled) {\n      return;\n    }\n\n    this.toggle(!this.state);\n    this.onChange(this.value);\n  }\n\n  ngOnInit(): any {\n    this.toggle(this.trueValue === this.value);\n  }\n\n  protected get trueValue(): boolean {\n    return typeof this.btnCheckboxTrue !== 'undefined'\n      ? this.btnCheckboxTrue\n      : true;\n  }\n\n  protected get falseValue(): boolean {\n    return typeof this.btnCheckboxFalse !== 'undefined'\n      ? this.btnCheckboxFalse\n      : false;\n  }\n\n  toggle(state: boolean): void {\n    this.state = state;\n    this.value = this.state ? this.trueValue : this.falseValue;\n  }\n\n  // ControlValueAccessor\n  // model -> view\n  writeValue(value: any): void {\n    this.state = this.trueValue === value;\n    this.value = value ? this.trueValue : this.falseValue;\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.isDisabled = isDisabled;\n  }\n\n  registerOnChange(fn: (_: any) => {}): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: () => {}): void {\n    this.onTouched = fn;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[btnCheckbox]',\n  providers: [CHECKBOX_CONTROL_VALUE_ACCESSOR]\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'btnCheckboxTrue': [{ type: Input },],\n'btnCheckboxFalse': [{ type: Input },],\n'state': [{ type: HostBinding, args: ['class.active', ] },],\n'onClick': [{ type: HostListener, args: ['click', ] },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","// tslint:disable:no-use-before-declare\nimport {\n  ChangeDetectorRef, Directive, ElementRef, forwardRef, HostBinding,\n  HostListener, Input, OnInit\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nexport const RADIO_CONTROL_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => ButtonRadioDirective),\n  multi: true\n};\n\n/**\n * Create radio buttons or groups of buttons.\n * A value of a selected button is bound to a variable specified via ngModel.\n */\n\nexport class ButtonRadioDirective implements ControlValueAccessor, OnInit {\n  onChange: any = Function.prototype;\n  onTouched: any = Function.prototype;\n\n  /** Radio button value, will be set to `ngModel` */\n   btnRadio: any;\n  /** If `true` — radio button can be unchecked */\n   uncheckable: boolean;\n  /** Current value of radio component or group */\n   value: any;\n\n  \n  get isActive(): boolean {\n    return this.btnRadio === this.value;\n  }\n\n  constructor(private el: ElementRef, private cdr: ChangeDetectorRef) {\n  }\n\n  \n  onClick(): void {\n    if (this.el.nativeElement.attributes.disabled) {\n      return;\n    }\n\n    if (this.uncheckable && this.btnRadio === this.value) {\n      this.value = undefined;\n      this.onTouched();\n      this.onChange(this.value);\n\n      return;\n    }\n\n    if (this.btnRadio !== this.value) {\n      this.value = this.btnRadio;\n      this.onTouched();\n      this.onChange(this.value);\n    }\n  }\n\n  ngOnInit(): void {\n    this.uncheckable = typeof this.uncheckable !== 'undefined';\n  }\n\n  onBlur(): void {\n    this.onTouched();\n  }\n\n  // ControlValueAccessor\n  // model -> view\n  writeValue(value: any): void {\n    this.value = value;\n    this.cdr.markForCheck();\n  }\n\n  registerOnChange(fn: any): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this.onTouched = fn;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[btnRadio]',\n  providers: [RADIO_CONTROL_VALUE_ACCESSOR]\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: ChangeDetectorRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'btnRadio': [{ type: Input },],\n'uncheckable': [{ type: Input },],\n'value': [{ type: Input },],\n'isActive': [{ type: HostBinding, args: ['class.active', ] },],\n'onClick': [{ type: HostListener, args: ['click', ] },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\n\nimport { ButtonCheckboxDirective } from './button-checkbox.directive';\nimport { ButtonRadioDirective } from './button-radio.directive';\n\n\nexport class ButtonsModule {\n  static forRoot(): ModuleWithProviders {\n    return { ngModule: ButtonsModule, providers: [] };\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  declarations: [ButtonCheckboxDirective, ButtonRadioDirective],\n  exports: [ButtonCheckboxDirective, ButtonRadioDirective]\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","\n/**\n * Convert a single dimension array to a double dimension array\n * @template T\n * @param {?} items the single dimension array to convert\n * @param {?} columns the number of items each array should have\n * @return {?}\n */\nexport function gridify<T>(items: T[], columns: number): T[][] {\n\n    const /** @type {?} */ grid: T[][] = [];\n\n    while (items.length) {\n        grid.push(items.splice(0, columns));\n    }\n\n    return grid;\n}\n/**\n * Create an array of numbers between two limits\n * @param {?} start the lower limit\n * @param {?} end the upper limit\n * @return {?}\n */\nexport function range(start: number, end: number): number[] {\n    const /** @type {?} */ list: number[] = [];\n\n    for (let /** @type {?} */ idx = start; idx <= end; idx++) {\n        list.push(idx);\n    }\n\n    return list;\n}\n/**\n * Create an array of dates between two points\n * @param {?} start the date to start the array\n * @param {?} end the date to end the array\n * @return {?}\n */\nexport function dateRange(start: Date, end: Date): Date[] {\n\n    let /** @type {?} */ dates: Date[] = [];\n\n    // loop through all the days between the date range\n    while (start <= end) {\n\n        // add the date to the array\n        dates.push(new Date(start));\n\n        // move to the next day\n        start.setDate(start.getDate() + 1);\n    }\n\n    return dates;\n}\n/**\n * Compare two dates to see if they are on the same day\n * @param {?} day1 the first date to compare\n * @param {?} day2 the second date to compare\n * @return {?}\n */\nexport function compareDays(day1: Date, day2: Date): boolean {\n    return day1.getDate() === day2.getDate() &&\n        day1.getMonth() === day2.getMonth() &&\n        day1.getFullYear() === day2.getFullYear();\n}\n/**\n * Export an array of all the available months\n */\nexport const months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\nexport const /** @type {?} */ monthsShort = months.map(month => month.substring(0, 3));\n/**\n * Export an array of all the available days of the week\n */\nexport const weekdays = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'];\nexport const /** @type {?} */ weekdaysShort = weekdays.map(weekday => weekday.substring(0, 3));","/**\n * Add a config service to allow an application\n * to customize the date time picker default settings\n * across the entire application\n */\n\n\nimport { Injectable } from '@angular/core';\nimport { weekdaysShort } from './date-time-picker.utils';\nimport { DateTimePickerTimezone } from './time-view/time-view.component';\nexport class DateTimePickerConfig {\n\n    showDate: boolean = true;\n    showTime: boolean = true;\n    showTimezone: boolean = true;\n    showSeconds: boolean = false;\n    showMeridian: boolean = true;\n    showSpinners: boolean = true;\n    weekdays: string[] = weekdaysShort;\n    nowBtnText: string = 'Today';\n\n    timezones: DateTimePickerTimezone[] = [\n        { name: 'GMT-11', offset: -660 },\n        { name: 'GMT-10', offset: -600 },\n        { name: 'GMT-9', offset: -540 },\n        { name: 'GMT-8', offset: -480 },\n        { name: 'GMT-7', offset: -420 },\n        { name: 'GMT-6', offset: -360 },\n        { name: 'GMT-5', offset: -300 },\n        { name: 'GMT-4', offset: -240 },\n        { name: 'GMT-3', offset: -180 },\n        { name: 'GMT-2', offset: -12 },\n        { name: 'GMT-1', offset: -60 },\n        { name: 'GMT', offset: 0 },\n        { name: 'GMT+1', offset: 60 },\n        { name: 'GMT+2', offset: 120 },\n        { name: 'GMT+3', offset: 180 },\n        { name: 'GMT+4', offset: 240 },\n        { name: 'GMT+5', offset: 300 },\n        { name: 'GMT+6', offset: 360 },\n        { name: 'GMT+7', offset: 420 },\n        { name: 'GMT+8', offset: 480 },\n        { name: 'GMT+9', offset: 540 },\n        { name: 'GMT+10', offset: 600 },\n        { name: 'GMT+11', offset: 660 },\n        { name: 'GMT+12', offset: 720 }\n    ];\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction DateTimePickerConfig_tsickle_Closure_declarations() {\n/** @type {?} */\nDateTimePickerConfig.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDateTimePickerConfig.ctorParameters;\n/** @type {?} */\nDateTimePickerConfig.prototype.showDate;\n/** @type {?} */\nDateTimePickerConfig.prototype.showTime;\n/** @type {?} */\nDateTimePickerConfig.prototype.showTimezone;\n/** @type {?} */\nDateTimePickerConfig.prototype.showSeconds;\n/** @type {?} */\nDateTimePickerConfig.prototype.showMeridian;\n/** @type {?} */\nDateTimePickerConfig.prototype.showSpinners;\n/** @type {?} */\nDateTimePickerConfig.prototype.weekdays;\n/** @type {?} */\nDateTimePickerConfig.prototype.nowBtnText;\n/** @type {?} */\nDateTimePickerConfig.prototype.timezones;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { DatePickerMode } from './date-time-picker.component';\nimport'rxjs/add/operator/distinctUntilChanged';\nexport class DateTimePickerService {\n\n    date: BehaviorSubject<Date> = new BehaviorSubject<Date>(new Date());\n    activeDate: BehaviorSubject<Date> = new BehaviorSubject<Date>(new Date());\n\n    mode: BehaviorSubject<DatePickerMode> = new BehaviorSubject<DatePickerMode>(DatePickerMode.Day);\n\n    month: BehaviorSubject<number> = new BehaviorSubject<number>(new Date().getMonth());\n    year: BehaviorSubject<number> = new BehaviorSubject<number>(new Date().getFullYear());\nconstructor() {\n\n        // when the date changes update the current month and year\n        this.date.distinctUntilChanged((previous, current) => previous.getTime() === current.getTime()).subscribe(date => {\n            this.month.next(date.getMonth());\n            this.year.next(date.getFullYear());\n        });\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction DateTimePickerService_tsickle_Closure_declarations() {\n/** @type {?} */\nDateTimePickerService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDateTimePickerService.ctorParameters;\n/** @type {?} */\nDateTimePickerService.prototype.date;\n/** @type {?} */\nDateTimePickerService.prototype.activeDate;\n/** @type {?} */\nDateTimePickerService.prototype.mode;\n/** @type {?} */\nDateTimePickerService.prototype.month;\n/** @type {?} */\nDateTimePickerService.prototype.year;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Input, Output, EventEmitter, ViewChild } from '@angular/core';\nimport { DateTimePickerTimeViewComponent, DateTimePickerTimezone } from './time-view/time-view.component';\nimport { weekdaysShort } from './date-time-picker.utils';\nimport { DateTimePickerConfig } from './date-time-picker.config';\nimport { DateTimePickerService } from './date-time-picker.service';\nexport class DateTimePickerComponent {\n\n   timePickerComponent: DateTimePickerTimeViewComponent;\nprivate _timezone: DateTimePickerTimezone;\n\n   showDate: boolean = this._config.showDate;\n   showTime: boolean = this._config.showTime;\n   showTimezone: boolean = this._config.showTimezone;\n   showSeconds: boolean = this._config.showSeconds;\n   showMeridian: boolean = this._config.showMeridian;\n   showSpinners: boolean = this._config.showSpinners;\n   weekdays: string[] = this._config.weekdays;\n   nowBtnText: string = this._config.nowBtnText;\n   timezones: DateTimePickerTimezone[] = this._config.timezones;\n\n   dateChange: EventEmitter<Date> = new EventEmitter<Date>();\n   timezoneChange: EventEmitter<DateTimePickerTimezone> = new EventEmitter<DateTimePickerTimezone>();\n/**\n * @param {?} value\n * @return {?}\n */\nset date(value: Date) {\n\n    this.dateTimePickerService.date.next(new Date(value));\n\n    // set the active date to the new date\n    this.dateTimePickerService.activeDate.next(new Date(value));\n  }\n/**\n * @return {?}\n */\nget date(): Date {\n    return this.dateTimePickerService.date.getValue();\n  }\n/**\n * @param {?} value\n * @return {?}\n */\nset timezone(value: DateTimePickerTimezone) {\n    const /** @type {?} */ timezone = this.timezones.find(zone => zone.offset === value.offset);\n\n    // only update if the timezone is valid\n    if (timezone) {\n      this._timezone = timezone;\n    }\n  }\n/**\n * @return {?}\n */\nget timezone(): DateTimePickerTimezone {\n    return this._timezone;\n  }\n\n  // expose enum to view\n  DatePickerMode = DatePickerMode;\n/**\n * @param {?} _config\n * @param {?} dateTimePickerService\n */\nconstructor(private _config: DateTimePickerConfig,\npublic dateTimePickerService: DateTimePickerService) { }\n/**\n * This will emit the newly selected date\n * @return {?}\n */\ncommit(): void {\n    this.dateChange.emit(this.dateTimePickerService.activeDate.getValue());\n  }\n/**\n * Change the date to the current date and time\n * @return {?}\n */\nsetToNow(): void {\n\n    // set the date to the current moment\n    this.date = new Date();\n\n    // reset the timezone to the default\n    if (this.timePickerComponent) {\n      this.timePickerComponent.setDefaultTimezone();\n    }\n\n    // emit the changes\n    this.commit();\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'ux-date-time-picker',\n  template: `\n    <div class=\"calendar-container\">\n\n      <ng-container *ngIf=\"showDate\" [ngSwitch]=\"dateTimePickerService.mode | async\">\n\n        <!-- Display days in the current month -->\n        <ux-date-time-picker-day-view *ngSwitchCase=\"DatePickerMode.Day\" [weekdays]=\"weekdays\" (dateChange)=\"commit()\"></ux-date-time-picker-day-view>\n  \n        <!-- Display the months in the current year -->\n        <ux-date-time-picker-month-view *ngSwitchCase=\"DatePickerMode.Month\"></ux-date-time-picker-month-view>\n  \n        <!-- Display a decade -->\n        <ux-date-time-picker-year-view *ngSwitchCase=\"DatePickerMode.Year\"></ux-date-time-picker-year-view>\n  \n      </ng-container>\n\n      <!-- Display a Time Picker -->\n      <ux-date-time-picker-time-view *ngIf=\"showTime\" #timePicker (dateChange)=\"commit()\" [showSpinners]=\"showSpinners\" [showTimezone]=\"showTimezone\" [showSeconds]=\"showSeconds\" [showMeridian]=\"showMeridian\" (dateChange)=\"commit()\" [timezone]=\"timezone\" (timezoneChange)=\"timezoneChange.emit($event)\" [timezones]=\"timezones\"></ux-date-time-picker-time-view>\n\n    </div>\n\n    <button class=\"now-button\" (click)=\"setToNow()\">{{ nowBtnText }}</button>\n  `,\n  providers: [DateTimePickerService]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: DateTimePickerConfig, },\n{type: DateTimePickerService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'timePickerComponent': [{ type: ViewChild, args: ['timePicker', ] },],\n'showDate': [{ type: Input },],\n'showTime': [{ type: Input },],\n'showTimezone': [{ type: Input },],\n'showSeconds': [{ type: Input },],\n'showMeridian': [{ type: Input },],\n'showSpinners': [{ type: Input },],\n'weekdays': [{ type: Input },],\n'nowBtnText': [{ type: Input },],\n'timezones': [{ type: Input },],\n'dateChange': [{ type: Output },],\n'timezoneChange': [{ type: Output },],\n'date': [{ type: Input },],\n'timezone': [{ type: Input },],\n};\n}\n\nfunction DateTimePickerComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nDateTimePickerComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDateTimePickerComponent.ctorParameters;\n/** @type {?} */\nDateTimePickerComponent.propDecorators;\n/** @type {?} */\nDateTimePickerComponent.prototype.timePickerComponent;\n/** @type {?} */\nDateTimePickerComponent.prototype._timezone;\n/** @type {?} */\nDateTimePickerComponent.prototype.showDate;\n/** @type {?} */\nDateTimePickerComponent.prototype.showTime;\n/** @type {?} */\nDateTimePickerComponent.prototype.showTimezone;\n/** @type {?} */\nDateTimePickerComponent.prototype.showSeconds;\n/** @type {?} */\nDateTimePickerComponent.prototype.showMeridian;\n/** @type {?} */\nDateTimePickerComponent.prototype.showSpinners;\n/** @type {?} */\nDateTimePickerComponent.prototype.weekdays;\n/** @type {?} */\nDateTimePickerComponent.prototype.nowBtnText;\n/** @type {?} */\nDateTimePickerComponent.prototype.timezones;\n/** @type {?} */\nDateTimePickerComponent.prototype.dateChange;\n/** @type {?} */\nDateTimePickerComponent.prototype.timezoneChange;\n/** @type {?} */\nDateTimePickerComponent.prototype.DatePickerMode;\n/** @type {?} */\nDateTimePickerComponent.prototype._config;\n/** @type {?} */\nDateTimePickerComponent.prototype.dateTimePickerService;\n}\n\nexport type DatePickerMode = number;\nexport let DatePickerMode: any = {};\nDatePickerMode.Day = 0;\nDatePickerMode.Month = 1;\nDatePickerMode.Year = 2;\nDatePickerMode[DatePickerMode.Day] = \"Day\";\nDatePickerMode[DatePickerMode.Month] = \"Month\";\nDatePickerMode[DatePickerMode.Year] = \"Year\";\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Input, Output, EventEmitter, OnInit, OnDestroy } from '@angular/core';\nimport { dateRange, gridify, compareDays, months, weekdaysShort } from '../date-time-picker.utils';\nimport { DateTimePickerService } from '../date-time-picker.service';\nimport { DatePickerMode } from '../date-time-picker.component';\nimport'rxjs/add/operator/distinctUntilChanged';\nimport'rxjs/add/observable/merge';\nimport { Subscription } from 'rxjs/Subscription';\nimport { Observable } from 'rxjs/Observable';\nexport class DateTimePickerDayViewComponent implements OnInit, OnDestroy {\n\n  header: string;\n  days: DatePickerDay[][] = [];\n\n   weekdays: string[] = weekdaysShort;\n   dateChange: EventEmitter<void> = new EventEmitter<void>();\n/**\n * @param {?} value\n * @return {?}\n */\nset date(value: Date) {\n    this.dateTimePickerService.activeDate.next(value);\n  }\n/**\n * @return {?}\n */\nget date() {\n    return this.dateTimePickerService.activeDate.getValue();\n  }\n/**\n * @param {?} value\n * @return {?}\n */\nset month(value: number) {\n    this.dateTimePickerService.month.next(value);\n  }\n/**\n * @return {?}\n */\nget month(): number {\n    return this.dateTimePickerService.month.getValue();\n  }\n/**\n * @param {?} value\n * @return {?}\n */\nset year(value: number) {\n    this.dateTimePickerService.year.next(value);\n  }\n/**\n * @return {?}\n */\nget year(): number {\n    return this.dateTimePickerService.year.getValue();\n  }\nprivate _subscription: Subscription;\n/**\n * @param {?} dateTimePickerService\n */\nconstructor(public dateTimePickerService: DateTimePickerService) {}\n/**\n * @return {?}\n */\nngOnInit(): void {\n\n    // update the grid only when the value of the active date, month or year has changed\n    this._subscription = Observable.merge(\n      this.dateTimePickerService.activeDate.distinctUntilChanged(),\n      this.dateTimePickerService.month.distinctUntilChanged(),\n      this.dateTimePickerService.year.distinctUntilChanged()\n    )\n    .subscribe(() => this.update());\n\n  }\n/**\n * @return {?}\n */\nngOnDestroy(): void {\n    // remove all subscriptions\n    this._subscription.unsubscribe();\n  }\n/**\n * Navigate to the previous page of dates\n * @return {?}\n */\nprevious(): void {\n\n    // update the month\n    this.month--;\n\n    // if the month is now the previous year take that into account\n    if (this.month < 0) {\n      this.month = 11;\n      this.year--;\n    }\n\n    // update the grid\n    this.update();\n  }\n/**\n * Navigate to the next page of dates\n * @return {?}\n */\nnext(): void {\n\n    // update the month\n    this.month++;\n\n    // if the month is now the previous year take that into account\n    if (this.month > 11) {\n      this.month = 0;\n      this.year++;\n    }\n\n    // update the grid\n    this.update();\n  }\n/**\n * Updates the grid of all the days in the month\n * @return {?}\n */\nupdate(): void {\n\n    // find the lower and upper boundaries\n    const /** @type {?} */ start = new Date(this.year, this.month, 1);\n    const /** @type {?} */ end = new Date(this.year, this.month + 1, 0);\n\n    // we always want to show from the sunday - this may include showing some dates from the previous month\n    start.setDate(start.getDate() - start.getDay());\n\n    // we also want to make sure that the range ends on a saturday\n    end.setDate(end.getDate() + (6 - end.getDay()));\n\n    // create an array of all the days to display\n    const /** @type {?} */ dates = dateRange(start, end);\n\n    // update the page header\n    this.header = `${months[this.month]} ${this.year}`;\n\n    // turn the dates into a grid\n    this.days = gridify(dates, 7).map(week => week.map(date => ({\n      date: date,\n      today: this.isToday(date),\n      active: this.isActive(date),\n      currentMonth: this.isCurrentMonth(date)\n    })));\n  }\n/**\n * Select a particular date\n * @param {?} date the date to select\n * @return {?}\n */\nselect(date: Date): void {\n    // update the current date object\n    this.date = new Date(date);\n\n    // emit the new date\n    this.dateChange.emit();\n  }\n/**\n * Determine whether or not a specific date is today\n * @param {?} date The date to check\n * @return {?}\n */\nisToday(date: Date): boolean {\n    return compareDays(new Date(), date);\n  }\n/**\n * Determines whether or not a specific date is the selected one\n * @param {?} date the date to check\n * @return {?}\n */\nisActive(date: Date): boolean {\n    return compareDays(this.date, date);\n  }\n/**\n * Determine whether or not a date is within the current month\n * or is it part of another month being show to fill the grid\n * @param {?} date The date in question\n * @return {?}\n */\nisCurrentMonth(date: Date): boolean {\n    return date.getMonth() === this.month;\n  }\n/**\n * Update the date picker view to show the month picker\n * @return {?}\n */\nshowMonthPicker(): void {\n    this.dateTimePickerService.mode.next(DatePickerMode.Month);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'ux-date-time-picker-day-view',\n  template: `\n    <ux-date-time-picker-header [header]=\"header\" (previous)=\"previous()\" (next)=\"next()\" (ascend)=\"showMonthPicker()\"></ux-date-time-picker-header>\n\n    <table class=\"calendar\">\n      <thead>\n        <tr>\n          <th *ngFor=\"let day of weekdays\" class=\"weekday\">{{ day }}</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        <tr *ngFor=\"let row of days\">\n          <td *ngFor=\"let day of row\" class=\"date-cell\" [class.current]=\"day.today\" \n            [class.active]=\"day.active\" [class.preview]=\"!day.currentMonth\" \n            (mousedown)=\"select(day.date)\" (keyup.enter)=\"select(day.date)\" \n            tabindex=\"0\">{{ day.date.getDate() }}</td>\n        </tr>\n      </tbody>\n    </table>\n  `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: DateTimePickerService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'weekdays': [{ type: Input },],\n'dateChange': [{ type: Output },],\n};\n}\n\nfunction DateTimePickerDayViewComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nDateTimePickerDayViewComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDateTimePickerDayViewComponent.ctorParameters;\n/** @type {?} */\nDateTimePickerDayViewComponent.propDecorators;\n/** @type {?} */\nDateTimePickerDayViewComponent.prototype.header;\n/** @type {?} */\nDateTimePickerDayViewComponent.prototype.days;\n/** @type {?} */\nDateTimePickerDayViewComponent.prototype.weekdays;\n/** @type {?} */\nDateTimePickerDayViewComponent.prototype.dateChange;\n/** @type {?} */\nDateTimePickerDayViewComponent.prototype._subscription;\n/** @type {?} */\nDateTimePickerDayViewComponent.prototype.dateTimePickerService;\n}\n\n\nexport interface DatePickerDay {\n  date: Date;\n  today: boolean;\n  active: boolean;\n  currentMonth: boolean;\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { gridify, range, monthsShort } from '../date-time-picker.utils';\nimport { DateTimePickerService } from '../date-time-picker.service';\nimport { DatePickerMode } from '../date-time-picker.component';\nexport class DateTimePickerMonthViewComponent {\n\n  months: number[][] = gridify(range(0, 11), 4);\n  currentDate: Date = new Date();\n/**\n * @return {?}\n */\nget date() {\n    return this._dateTimePickerService.activeDate.getValue();\n  }\n/**\n * @param {?} value\n * @return {?}\n */\nset month(value: number) {\n    this._dateTimePickerService.month.next(value);\n  }\n/**\n * @return {?}\n */\nget month(): number {\n    return this._dateTimePickerService.month.getValue();\n  }\n/**\n * @param {?} value\n * @return {?}\n */\nset year(value: number) {\n    this._dateTimePickerService.year.next(value);\n  }\n/**\n * @return {?}\n */\nget year(): number {\n    return this._dateTimePickerService.year.getValue();\n  }\n/**\n * @param {?} _dateTimePickerService\n */\nconstructor(private _dateTimePickerService: DateTimePickerService) {}\n/**\n * Go to the previous year and emit the change\n * @return {?}\n */\nprevious(): void {\n    this.year--;\n  }\n/**\n * Go to the next year and emit the change\n * @return {?}\n */\nnext(): void {\n    this.year++;\n  }\n/**\n * Select a month in the calendar\n * @param {?} month the index of the month to select\n * @return {?}\n */\nselect(month: number): void {\n    this.month = month;\n\n    // show the day picker\n    this.showDayPicker();\n  }\n/**\n * Get the name of a month\n * @param {?} month the month in question\n * @return {?}\n */\ngetMonthName(month: number): string {\n    return monthsShort[month];\n  }\n/**\n * Show the daye picker view\n * @return {?}\n */\nshowDayPicker(): void {\n    this._dateTimePickerService.mode.next(DatePickerMode.Day);\n  }\n/**\n * Show the year picker view\n * @return {?}\n */\nshowYearPicker(): void {\n    this._dateTimePickerService.mode.next(DatePickerMode.Year);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'ux-date-time-picker-month-view',\n  template: `\n    <ux-date-time-picker-header [header]=\"year\" (previous)=\"previous()\" (next)=\"next()\" (ascend)=\"showYearPicker()\"></ux-date-time-picker-header>\n\n    <div class=\"calendar\">\n      <div class=\"calendar-row\" *ngFor=\"let row of months\">\n        <div class=\"calendar-item\" *ngFor=\"let item of row\" [class.active]=\"item === date.getMonth() && year === date.getFullYear()\"\n          [class.current]=\"item === currentDate.getMonth() && year === currentDate.getFullYear()\" (mousedown)=\"select(item)\" (keyup.enter)=\"select(item)\" tabindex=\"0\">{{ getMonthName(item) }}</div>\n      </div>\n    </div>\n  `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: DateTimePickerService, },\n];\n}\n\nfunction DateTimePickerMonthViewComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nDateTimePickerMonthViewComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDateTimePickerMonthViewComponent.ctorParameters;\n/** @type {?} */\nDateTimePickerMonthViewComponent.prototype.months;\n/** @type {?} */\nDateTimePickerMonthViewComponent.prototype.currentDate;\n/** @type {?} */\nDateTimePickerMonthViewComponent.prototype._dateTimePickerService;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Input, EventEmitter, Output, SimpleChanges, OnInit } from '@angular/core';\nimport { gridify, range } from '../date-time-picker.utils';\nimport { DateTimePickerService } from '../date-time-picker.service';\nimport { DatePickerMode } from '../date-time-picker.component';\nexport class DateTimePickerYearViewComponent implements OnInit {\nprivate _page: number = 0;\n\n  header: string;\n  years: number[][] = [];\n  currentYear: number = new Date().getFullYear();\n/**\n * @return {?}\n */\nngOnInit(): void {\n    this.update();\n  }\n/**\n * @param {?} value\n * @return {?}\n */\nset year(value: number) {\n    this._dateTimePickerService.year.next(value);\n  }\n/**\n * @return {?}\n */\nget year(): number {\n    return this._dateTimePickerService.year.getValue();\n  }\n/**\n * @param {?} _dateTimePickerService\n */\nconstructor(private _dateTimePickerService: DateTimePickerService) {}\n/**\n * @param {?} year\n * @return {?}\n */\nselect(year: number): void {\n    this.year = year;\n\n    // show the month picker\n    this.showMonthPicker();\n  }\n/**\n * @return {?}\n */\nprevious(): void {\n    this._page--;\n    this.update();\n  }\n/**\n * @return {?}\n */\nnext(): void {\n    this._page++;\n    this.update();\n  }\n/**\n * @return {?}\n */\nupdate(): void {\n\n    // get the years to display\n    const /** @type {?} */ decade = this.getDecade();\n\n    // update the header\n    this.header = `${decade.start} - ${decade.end}`;\n\n    // create the grid\n    this.years = gridify(decade.range, 4);\n  }\n/**\n * Get the years in the current decade to display\n * @return {?}\n */\ngetDecade(): DatePickerYearRange {\n\n    // the number of years to display\n    const /** @type {?} */ yearCount = 10;\n\n    // figure the start and end points\n    const /** @type {?} */ start = (this.year - (this.year % yearCount)) + (this._page * yearCount);\n    const /** @type {?} */ end = start + yearCount - 1;\n\n    // create an array containing all the numbers between the start and end points\n    return { start: start, end: end, range: range(start, end) };\n  }\n/**\n * Show the month picker view\n * @return {?}\n */\nshowMonthPicker(): void {\n    this._dateTimePickerService.mode.next(DatePickerMode.Month);\n  }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'ux-date-time-picker-year-view',\n  template: `\n    <ux-date-time-picker-header [header]=\"header\" [canAscend]=\"false\" (previous)=\"previous()\" (next)=\"next()\"></ux-date-time-picker-header>\n\n    <div class=\"calendar\">\n      <div class=\"calendar-row\" *ngFor=\"let row of years\">\n        <div *ngFor=\"let item of row\" class=\"calendar-item\" [class.current]=\"item === currentYear\" [class.active]=\"item === year\"\n        (mousedown)=\"select(item)\" (keyup.enter)=\"select(item)\" tabindex=\"0\">{{ item }}</div>\n      </div>\n    </div>\n  `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: DateTimePickerService, },\n];\n}\n\nfunction DateTimePickerYearViewComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nDateTimePickerYearViewComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDateTimePickerYearViewComponent.ctorParameters;\n/** @type {?} */\nDateTimePickerYearViewComponent.prototype._page;\n/** @type {?} */\nDateTimePickerYearViewComponent.prototype.header;\n/** @type {?} */\nDateTimePickerYearViewComponent.prototype.years;\n/** @type {?} */\nDateTimePickerYearViewComponent.prototype.currentYear;\n/** @type {?} */\nDateTimePickerYearViewComponent.prototype._dateTimePickerService;\n}\n\n\nexport interface DatePickerYearRange {\n  start: number;\n  end: number;\n  range: number[];\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nexport class DateTimePickerHeaderComponent {\n\n     header: string;\n     canAscend: boolean = true;\n\n     next: EventEmitter<void> = new EventEmitter<void>();\n     previous: EventEmitter<void> = new EventEmitter<void>();\n     ascend: EventEmitter<void> = new EventEmitter<void>();\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-date-time-picker-header',\n    template: `\n      <header class=\"header\">\n\n        <div class=\"header-navigation\" (click)=\"previous.emit(); $event.stopPropagation()\" (keyup.enter)=\"previous.emit()\" tabindex=\"0\">\n          <i class=\"hpe-icon hpe-previous\"></i>\n        </div>\n\n        <div class=\"header-title\" [class.active]=\"canAscend\" (click)=\"ascend.emit(); $event.stopPropagation()\" (keyup.enter)=\"ascend.emit()\" tabindex=\"0\">{{ header }}</div>\n\n        <div class=\"header-navigation\" (click)=\"next.emit(); $event.stopPropagation()\" (keyup.enter)=\"next.emit()\" tabindex=\"0\">\n          <i class=\"hpe-icon hpe-next\"></i>\n        </div>\n      </header>\n    `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'header': [{ type: Input },],\n'canAscend': [{ type: Input },],\n'next': [{ type: Output },],\n'previous': [{ type: Output },],\n'ascend': [{ type: Output },],\n};\n}\n\nfunction DateTimePickerHeaderComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nDateTimePickerHeaderComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDateTimePickerHeaderComponent.ctorParameters;\n/** @type {?} */\nDateTimePickerHeaderComponent.propDecorators;\n/** @type {?} */\nDateTimePickerHeaderComponent.prototype.header;\n/** @type {?} */\nDateTimePickerHeaderComponent.prototype.canAscend;\n/** @type {?} */\nDateTimePickerHeaderComponent.prototype.next;\n/** @type {?} */\nDateTimePickerHeaderComponent.prototype.previous;\n/** @type {?} */\nDateTimePickerHeaderComponent.prototype.ascend;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Input, EventEmitter, Output, AfterViewInit } from '@angular/core';\nexport class DateTimePickerTimeViewComponent implements AfterViewInit {\n\n     date: Date = new Date();\n     showSeconds: boolean = false;\n     showSpinners: boolean = true;\n     showTimezone: boolean = true;\n     showMeridian: boolean = true;\n\n     timezones: DateTimePickerTimezone[];\n\n     dateChange: EventEmitter<Date> = new EventEmitter<Date>();\n     timezoneChange: EventEmitter<DateTimePickerTimezone> = new EventEmitter<DateTimePickerTimezone>();\n\n    meridian: DatePickerMeridian = DatePickerMeridian.AM;\n/**\n * @param {?} value\n * @return {?}\n */\nset timezone(value: DateTimePickerTimezone) {\n        if (value !== this._timezone) {\n            this._timezone = value;\n            this.timezoneChange.emit(this._timezone);\n        }\n    }\n/**\n * @return {?}\n */\nget timezone() {\n        return this._timezone;\n    }\n\n    // Expose enum to view\n    DatePickerMeridian = DatePickerMeridian;\nprivate _timezone: DateTimePickerTimezone;\n/**\n * @return {?}\n */\nngAfterViewInit(): void {\n\n        // if the user did not specify a timezone - choose a default one\n        if (!this.timezone) {\n            setTimeout(() => this.setDefaultTimezone());\n        }\n    }\n/**\n * @return {?}\n */\nsetDefaultTimezone(): void {\n        // determine the user default timezone\n        const /** @type {?} */ offset = new Date().getTimezoneOffset();\n\n        // find the closest timezone\n        this.timezone = this.timezones.find(zone => zone.offset === offset);\n\n        // if not match was found then set to GMT\n        if (!this.timezone) {\n            this.timezone = this.timezones.find(zone => zone.offset === 0);\n        }\n    }\n/**\n * @param {?} date\n * @return {?}\n */\nupdate(date: Date | null): void {\n\n        // if the date is invalid then stop here\n        if (!date) {\n            return;\n        }\n\n        // update the meridian\n        this.meridian = date.getHours() < 12 ? DatePickerMeridian.AM : DatePickerMeridian.PM;\n        \n        // if the date has not changed then don't emit\n        if (date.getTime() !== this.date.getTime()) {\n            this.date = date;\n            this.dateChange.emit(date);\n        }\n    }\n/**\n * @param {?} meridian\n * @return {?}\n */\nsetMeridian(meridian: DatePickerMeridian): void {\n\n        // get the current hours\n        const /** @type {?} */ hours = this.date.getHours();\n\n        // if we are transitioning to AM and time is currently PM\n        if (meridian === DatePickerMeridian.AM && hours >= 12) {\n            this.date.setHours(hours - 12);\n            this.dateChange.emit(this.date);\n        }\n\n        // if we are transitioning to PM and time is currently AM\n        if (meridian === DatePickerMeridian.PM && hours < 12) {\n            this.date.setHours(hours + 12);\n            this.dateChange.emit(this.date);\n        }\n    }\n/**\n * @return {?}\n */\npreviousTimezone(): void {\n\n        // get the current zone\n        const /** @type {?} */ currentZone = this.timezones.findIndex(zone => zone.name === this.timezone.name && zone.offset === this.timezone.offset);\n\n        // try to get the previous zone\n        this.timezone = this.timezones[currentZone - 1] ? this.timezones[currentZone - 1] : this.timezones[currentZone];\n    }\n/**\n * @return {?}\n */\nnextTimezone(): void {\n        // get the current zone\n        const /** @type {?} */ currentZone = this.timezones.findIndex(zone => zone.name === this.timezone.name && zone.offset === this.timezone.offset);\n\n        // try to get the next zone\n        this.timezone = this.timezones[currentZone + 1] ? this.timezones[currentZone + 1] : this.timezones[currentZone];\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-date-time-picker-time-view',\n    template: `\n      <div class=\"time-input-container\">\n        <timepicker [ngModel]=\"date\" (ngModelChange)=\"update($event)\" [minuteStep]=\"1\" [hourStep]=\"1\" [secondsStep]=\"1\" [showSeconds]=\"showSeconds\"\n          [showSpinners]=\"showSpinners\" [showMeridian]=\"showMeridian\"></timepicker>\n\n        <div class=\"btn-group meridian-picker\" *ngIf=\"showMeridian\">\n          <button type=\"button\" class=\"btn button-toggle-accent\" [(ngModel)]=\"meridian\" (ngModelChange)=\"setMeridian($event)\" [btnRadio]=\"DatePickerMeridian.AM\">AM</button>\n          <button type=\"button\" class=\"btn button-toggle-accent\" [(ngModel)]=\"meridian\" (ngModelChange)=\"setMeridian($event)\" [btnRadio]=\"DatePickerMeridian.PM\">PM</button>\n        </div>\n\n        <table class=\"time-zone-picker-container\" *ngIf=\"showTimezone && showSpinners\">\n          <tbody>\n            <tr>\n              <td class=\"text-center\">\n                <a class=\"btn btn-link\" (click)=\"nextTimezone()\">\n                  <span class=\"hpe-icon hpe-up\"></span>\n                </a>\n              </td>\n            </tr>\n            <tr>\n              <td class=\"form-group\">\n                <div class=\"form-control time-zone-picker\">\n                  <span class=\"time-zone\">{{ timezone?.name }}</span>\n                </div>\n              </td>\n            </tr>\n            <tr>\n              <td class=\"text-center\">\n                <a class=\"btn btn-link\" (click)=\"previousTimezone()\">\n                  <span class=\"hpe-icon hpe-down\"></span>\n                </a>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n\n        <div *ngIf=\"showTimezone && !showSpinners\">\n          <select class=\"form-control time-zone-picker-select\" [(ngModel)]=\"timezone\">\n            <option *ngFor=\"let zone of timezones\" [ngValue]=\"zone\">{{ zone?.name }}</option>\n          </select>\n        </div>\n\n      </div>\n    `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'date': [{ type: Input },],\n'showSeconds': [{ type: Input },],\n'showSpinners': [{ type: Input },],\n'showTimezone': [{ type: Input },],\n'showMeridian': [{ type: Input },],\n'timezones': [{ type: Input },],\n'dateChange': [{ type: Output },],\n'timezoneChange': [{ type: Output },],\n'timezone': [{ type: Input },],\n};\n}\n\nfunction DateTimePickerTimeViewComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nDateTimePickerTimeViewComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDateTimePickerTimeViewComponent.ctorParameters;\n/** @type {?} */\nDateTimePickerTimeViewComponent.propDecorators;\n/** @type {?} */\nDateTimePickerTimeViewComponent.prototype.date;\n/** @type {?} */\nDateTimePickerTimeViewComponent.prototype.showSeconds;\n/** @type {?} */\nDateTimePickerTimeViewComponent.prototype.showSpinners;\n/** @type {?} */\nDateTimePickerTimeViewComponent.prototype.showTimezone;\n/** @type {?} */\nDateTimePickerTimeViewComponent.prototype.showMeridian;\n/** @type {?} */\nDateTimePickerTimeViewComponent.prototype.timezones;\n/** @type {?} */\nDateTimePickerTimeViewComponent.prototype.dateChange;\n/** @type {?} */\nDateTimePickerTimeViewComponent.prototype.timezoneChange;\n/** @type {?} */\nDateTimePickerTimeViewComponent.prototype.meridian;\n/** @type {?} */\nDateTimePickerTimeViewComponent.prototype.DatePickerMeridian;\n/** @type {?} */\nDateTimePickerTimeViewComponent.prototype._timezone;\n}\n\nexport type DatePickerMeridian = number;\nexport let DatePickerMeridian: any = {};\nDatePickerMeridian.AM = 0;\nDatePickerMeridian.PM = 1;\nDatePickerMeridian[DatePickerMeridian.AM] = \"AM\";\nDatePickerMeridian[DatePickerMeridian.PM] = \"PM\";\n\n\nexport interface DateTimePickerTimezone {\n    name: string;\n    offset: number;\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { TimepickerModule } from 'ngx-bootstrap/timepicker';\nimport { ButtonsModule } from 'ngx-bootstrap/buttons';\n\nimport { DateTimePickerComponent } from './date-time-picker.component';\nimport { DateTimePickerDayViewComponent } from './day-view/day-view.component';\nimport { DateTimePickerMonthViewComponent } from './month-view/month-view.component';\nimport { DateTimePickerYearViewComponent } from './year-view/year-view.component';\nimport { DateTimePickerHeaderComponent } from './header/header.component';\nimport { DateTimePickerTimeViewComponent } from './time-view/time-view.component';\nimport { DateTimePickerConfig } from './date-time-picker.config';\n\nconst /** @type {?} */ DECLARATIONS = [\n    DateTimePickerComponent,\n    DateTimePickerDayViewComponent,\n    DateTimePickerMonthViewComponent,\n    DateTimePickerYearViewComponent,\n    DateTimePickerTimeViewComponent,\n    DateTimePickerHeaderComponent\n];\nexport class DateTimePickerModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        CommonModule,\n        FormsModule,\n        TimepickerModule.forRoot(),\n        ButtonsModule.forRoot()\n    ],\n    exports: DECLARATIONS,\n    declarations: DECLARATIONS,\n    providers: [\n        DateTimePickerConfig\n    ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction DateTimePickerModule_tsickle_Closure_declarations() {\n/** @type {?} */\nDateTimePickerModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDateTimePickerModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Directive } from '@angular/core';\nexport class EboxComponent { static decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-ebox',\n    template: `\n      <div class=\"ux-ebox-header\">\n          <ng-content select=\"ux-ebox-header\"></ng-content>\n      </div>\n\n      <div class=\"ux-ebox-content\">\n          <ng-content select=\"ux-ebox-content\"></ng-content>\n      </div>\n    `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction EboxComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nEboxComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nEboxComponent.ctorParameters;\n}\n\nexport class EboxHeaderDirective { static decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'ux-ebox-header'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction EboxHeaderDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nEboxHeaderDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nEboxHeaderDirective.ctorParameters;\n}\n\nexport class EboxContentDirective { static decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'ux-ebox-content'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction EboxContentDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nEboxContentDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nEboxContentDirective.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\n\nimport { EboxComponent, EboxContentDirective, EboxHeaderDirective } from './ebox.component';\nexport class EboxModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    exports: [EboxComponent, EboxContentDirective, EboxHeaderDirective],\n    declarations: [EboxComponent, EboxContentDirective, EboxHeaderDirective]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction EboxModule_tsickle_Closure_declarations() {\n/** @type {?} */\nEboxModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nEboxModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable } from '@angular/core';\n\n/** Default values provider for tooltip */\n\nexport class TooltipConfig {\n  /** tooltip placement, supported positions: 'top', 'bottom', 'left', 'right' */\n  placement = 'top';\n  /** array of event names which triggers tooltip opening */\n  triggers = 'hover focus';\n  /** a selector specifying the element the tooltip should be appended to. Currently only supports \"body\" */\n  container: string;\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"],"names":["win","document","location","isBs3","window","__theme","guessedVersion","spanEl","createElement","innerText","body","appendChild","classList","add","rect","getBoundingClientRect","removeChild","top","_guessBsVersion","TooltipContainerComponent","config","Object","assign","this","defineProperty","prototype","get","ngAfterViewInit","classMap","in","fade","placement","animation","containerClass","decorators","type","Component","args","selector","changeDetection","ChangeDetectionStrategy","OnPush","host","[class]","[class.show]","role","styles","template","ctorParameters","TooltipConfig","Trigger","open","close","isManual","DEFAULT_ALIASES","hover","focus","listenToTriggersV2","renderer","options","parsedTriggers","triggers","aliases","trimmedTriggers","trim","length","split","map","trigger","triggerPair","alias","manualTriggers","filter","Error","parseTriggers","target","Function","listeners","_registerHide","registerHide","forEach","fn","push","useToggle","showFn","toggle","show","listen","hide","unsubscribeFn","ContentRef","nodes","viewRef","componentRef","ComponentLoader","_viewContainerRef","_renderer","_elementRef","_injector","_componentFactoryResolver","_ngZone","_applicationRef","_posService","onBeforeShow","EventEmitter","onShown","onBeforeHide","onHidden","_providers","_isHiding","_listenOpts","_globalListener","_componentRef","attach","compType","_componentFactory","resolveComponentFactory","to","container","position","opts","attachment","provide","provider","_subscribePositioning","_innerComponent","emit","_contentRef","_getContentRef","content","context","injector","ReflectiveInjector","resolveAndCreate","create","attachView","hostView","instance","ElementRef","nativeElement","querySelector","parentElement","changeDetectorRef","markForCheck","detectChanges","_registerOutsideClick","componentEl","parentNode","destroy","remove","indexOf","_removeGlobalListener","isShown","dispose","_unsubscribePositioning","_unregisterListenersFn","listenOpts","_this","outsideClick","attachInline","vRef","_inlineViewRef","createEmbeddedView","target_1","setTimeout","targets","event","contains","some","getInnerComponent","_zoneSubscription","onStable","subscribe","element","appendToBody","unsubscribe","TemplateRef","_viewRef","rootNodes","contentCmptFactory","modalContentInjector","slice","createText","positionService","Positioning","round","elPosition","parentOffset","width","height","bottom","left","right","getStyle","bcRect","offsetParentEl","offsetParent","offset","documentElement","clientTop","clientLeft","Math","elBcr","viewportOffset","pageYOffset","pageXOffset","elOffset","offsetHeight","offsetWidth","positionElements","hostElement","targetElement","hostElPosition","targetElStyles","getAllStyles","shiftWidth","center","shiftHeight","targetElBCR","placementPrimary","placementSecondary","targetElPosition","newPlacementPrimary","autoPosition","parseFloat","marginBottom","marginRight","preferredPosition","innerHeight","innerWidth","getComputedStyle","prop","isStaticPositioned","PositioningService","pos","style","_getHtmlElement","Injectable","ComponentLoaderFactory","createLoader","ComponentFactoryResolver","NgZone","Injector","ApplicationRef","_messagesHash","_hideMsg","console","warnOnce","msg","isDevMode","warn","TooltipDirective","cis","tooltipChange","_animation","_delay","_fadeDuration","tooltipStateChanged","_tooltip","useValue","set","value","tooltip","isOpen","isDisabled","toString","ngOnInit","_delayTimeoutId","showTooltip","undefined","clearTimeout","ngOnDestroy","Directive","exportAs","ViewContainerRef","Renderer2","propDecorators","Input","Output","htmlContent","_placement","_isOpen","_enable","_appendToBody","_popupClass","_tooltipContext","_tooltipTrigger","__decorate","propertyKey","_key","prevValue","TooltipModule","forRoot","ngModule","providers","NgModule","imports","CommonModule","declarations","exports","entryComponents","latinMap","Á","Ă","Ắ","Ặ","Ằ","Ẳ","Ẵ","Ǎ","Â","Ấ","Ậ","Ầ","Ẩ","Ẫ","Ä","Ǟ","Ȧ","Ǡ","Ạ","Ȁ","À","Ả","Ȃ","Ā","Ą","Å","Ǻ","Ḁ","Ⱥ","Ã","Ꜳ","Æ","Ǽ","Ǣ","Ꜵ","Ꜷ","Ꜹ","Ꜻ","Ꜽ","Ḃ","Ḅ","Ɓ","Ḇ","Ƀ","Ƃ","Ć","Č","Ç","Ḉ","Ĉ","Ċ","Ƈ","Ȼ","Ď","Ḑ","Ḓ","Ḋ","Ḍ","Ɗ","Ḏ","ǲ","ǅ","Đ","Ƌ","Ǳ","Ǆ","É","Ĕ","Ě","Ȩ","Ḝ","Ê","Ế","Ệ","Ề","Ể","Ễ","Ḙ","Ë","Ė","Ẹ","Ȅ","È","Ẻ","Ȇ","Ē","Ḗ","Ḕ","Ę","Ɇ","Ẽ","Ḛ","Ꝫ","Ḟ","Ƒ","Ǵ","Ğ","Ǧ","Ģ","Ĝ","Ġ","Ɠ","Ḡ","Ǥ","Ḫ","Ȟ","Ḩ","Ĥ","Ⱨ","Ḧ","Ḣ","Ḥ","Ħ","Í","Ĭ","Ǐ","Î","Ï","Ḯ","İ","Ị","Ȉ","Ì","Ỉ","Ȋ","Ī","Į","Ɨ","Ĩ","Ḭ","Ꝺ","Ꝼ","Ᵹ","Ꞃ","Ꞅ","Ꞇ","Ꝭ","Ĵ","Ɉ","Ḱ","Ǩ","Ķ","Ⱪ","Ꝃ","Ḳ","Ƙ","Ḵ","Ꝁ","Ꝅ","Ĺ","Ƚ","Ľ","Ļ","Ḽ","Ḷ","Ḹ","Ⱡ","Ꝉ","Ḻ","Ŀ","Ɫ","ǈ","Ł","Ǉ","Ḿ","Ṁ","Ṃ","Ɱ","Ń","Ň","Ņ","Ṋ","Ṅ","Ṇ","Ǹ","Ɲ","Ṉ","Ƞ","ǋ","Ñ","Ǌ","Ó","Ŏ","Ǒ","Ô","Ố","Ộ","Ồ","Ổ","Ỗ","Ö","Ȫ","Ȯ","Ȱ","Ọ","Ő","Ȍ","Ò","Ỏ","Ơ","Ớ","Ợ","Ờ","Ở","Ỡ","Ȏ","Ꝋ","Ꝍ","Ō","Ṓ","Ṑ","Ɵ","Ǫ","Ǭ","Ø","Ǿ","Õ","Ṍ","Ṏ","Ȭ","Ƣ","Ꝏ","Ɛ","Ɔ","Ȣ","Ṕ","Ṗ","Ꝓ","Ƥ","Ꝕ","Ᵽ","Ꝑ","Ꝙ","Ꝗ","Ŕ","Ř","Ŗ","Ṙ","Ṛ","Ṝ","Ȑ","Ȓ","Ṟ","Ɍ","Ɽ","Ꜿ","Ǝ","Ś","Ṥ","Š","Ṧ","Ş","Ŝ","Ș","Ṡ","Ṣ","Ṩ","Ť","Ţ","Ṱ","Ț","Ⱦ","Ṫ","Ṭ","Ƭ","Ṯ","Ʈ","Ŧ","Ɐ","Ꞁ","Ɯ","Ʌ","Ꜩ","Ú","Ŭ","Ǔ","Û","Ṷ","Ü","Ǘ","Ǚ","Ǜ","Ǖ","Ṳ","Ụ","Ű","Ȕ","Ù","Ủ","Ư","Ứ","Ự","Ừ","Ử","Ữ","Ȗ","Ū","Ṻ","Ų","Ů","Ũ","Ṹ","Ṵ","Ꝟ","Ṿ","Ʋ","Ṽ","Ꝡ","Ẃ","Ŵ","Ẅ","Ẇ","Ẉ","Ẁ","Ⱳ","Ẍ","Ẋ","Ý","Ŷ","Ÿ","Ẏ","Ỵ","Ỳ","Ƴ","Ỷ","Ỿ","Ȳ","Ɏ","Ỹ","Ź","Ž","Ẑ","Ⱬ","Ż","Ẓ","Ȥ","Ẕ","Ƶ","Ĳ","Œ","ᴀ","ᴁ","ʙ","ᴃ","ᴄ","ᴅ","ᴇ","ꜰ","ɢ","ʛ","ʜ","ɪ","ʁ","ᴊ","ᴋ","ʟ","ᴌ","ᴍ","ɴ","ᴏ","ɶ","ᴐ","ᴕ","ᴘ","ʀ","ᴎ","ᴙ","ꜱ","ᴛ","ⱻ","ᴚ","ᴜ","ᴠ","ᴡ","ʏ","ᴢ","á","ă","ắ","ặ","ằ","ẳ","ẵ","ǎ","â","ấ","ậ","ầ","ẩ","ẫ","ä","ǟ","ȧ","ǡ","ạ","ȁ","à","ả","ȃ","ā","ą","ᶏ","ẚ","å","ǻ","ḁ","ⱥ","ã","ꜳ","æ","ǽ","ǣ","ꜵ","ꜷ","ꜹ","ꜻ","ꜽ","ḃ","ḅ","ɓ","ḇ","ᵬ","ᶀ","ƀ","ƃ","ɵ","ć","č","ç","ḉ","ĉ","ɕ","ċ","ƈ","ȼ","ď","ḑ","ḓ","ȡ","ḋ","ḍ","ɗ","ᶑ","ḏ","ᵭ","ᶁ","đ","ɖ","ƌ","ı","ȷ","ɟ","ʄ","ǳ","ǆ","é","ĕ","ě","ȩ","ḝ","ê","ế","ệ","ề","ể","ễ","ḙ","ë","ė","ẹ","ȅ","è","ẻ","ȇ","ē","ḗ","ḕ","ⱸ","ę","ᶒ","ɇ","ẽ","ḛ","ꝫ","ḟ","ƒ","ᵮ","ᶂ","ǵ","ğ","ǧ","ģ","ĝ","ġ","ɠ","ḡ","ᶃ","ǥ","ḫ","ȟ","ḩ","ĥ","ⱨ","ḧ","ḣ","ḥ","ɦ","ẖ","ħ","ƕ","í","ĭ","ǐ","î","ï","ḯ","ị","ȉ","ì","ỉ","ȋ","ī","į","ᶖ","ɨ","ĩ","ḭ","ꝺ","ꝼ","ᵹ","ꞃ","ꞅ","ꞇ","ꝭ","ǰ","ĵ","ʝ","ɉ","ḱ","ǩ","ķ","ⱪ","ꝃ","ḳ","ƙ","ḵ","ᶄ","ꝁ","ꝅ","ĺ","ƚ","ɬ","ľ","ļ","ḽ","ȴ","ḷ","ḹ","ⱡ","ꝉ","ḻ","ŀ","ɫ","ᶅ","ɭ","ł","ǉ","ſ","ẜ","ẛ","ẝ","ḿ","ṁ","ṃ","ɱ","ᵯ","ᶆ","ń","ň","ņ","ṋ","ȵ","ṅ","ṇ","ǹ","ɲ","ṉ","ƞ","ᵰ","ᶇ","ɳ","ñ","ǌ","ó","ŏ","ǒ","ô","ố","ộ","ồ","ổ","ỗ","ö","ȫ","ȯ","ȱ","ọ","ő","ȍ","ò","ỏ","ơ","ớ","ợ","ờ","ở","ỡ","ȏ","ꝋ","ꝍ","ⱺ","ō","ṓ","ṑ","ǫ","ǭ","ø","ǿ","õ","ṍ","ṏ","ȭ","ƣ","ꝏ","ɛ","ᶓ","ɔ","ᶗ","ȣ","ṕ","ṗ","ꝓ","ƥ","ᵱ","ᶈ","ꝕ","ᵽ","ꝑ","ꝙ","ʠ","ɋ","ꝗ","ŕ","ř","ŗ","ṙ","ṛ","ṝ","ȑ","ɾ","ᵳ","ȓ","ṟ","ɼ","ᵲ","ᶉ","ɍ","ɽ","ↄ","ꜿ","ɘ","ɿ","ś","ṥ","š","ṧ","ş","ŝ","ș","ṡ","ṣ","ṩ","ʂ","ᵴ","ᶊ","ȿ","ɡ","ᴑ","ᴓ","ᴝ","ť","ţ","ṱ","ț","ȶ","ẗ","ⱦ","ṫ","ṭ","ƭ","ṯ","ᵵ","ƫ","ʈ","ŧ","ᵺ","ɐ","ᴂ","ǝ","ᵷ","ɥ","ʮ","ʯ","ᴉ","ʞ","ꞁ","ɯ","ɰ","ᴔ","ɹ","ɻ","ɺ","ⱹ","ʇ","ʌ","ʍ","ʎ","ꜩ","ú","ŭ","ǔ","û","ṷ","ü","ǘ","ǚ","ǜ","ǖ","ṳ","ụ","ű","ȕ","ù","ủ","ư","ứ","ự","ừ","ử","ữ","ȗ","ū","ṻ","ų","ᶙ","ů","ũ","ṹ","ṵ","ᵫ","ꝸ","ⱴ","ꝟ","ṿ","ʋ","ᶌ","ⱱ","ṽ","ꝡ","ẃ","ŵ","ẅ","ẇ","ẉ","ẁ","ⱳ","ẘ","ẍ","ẋ","ᶍ","ý","ŷ","ÿ","ẏ","ỵ","ỳ","ƴ","ỷ","ỿ","ȳ","ẙ","ɏ","ỹ","ź","ž","ẑ","ʑ","ⱬ","ż","ẓ","ȥ","ẕ","ᵶ","ᶎ","ʐ","ƶ","ɀ","ﬀ","ﬃ","ﬄ","ﬁ","ﬂ","ĳ","œ","ﬆ","ₐ","ₑ","ᵢ","ⱼ","ₒ","ᵣ","ᵤ","ᵥ","ₓ","TypeaheadMatch","item","header","isHeader","latinize","str","replace","a","tokenize","wordRegexDelimiters","phraseRegexDelimiters","token","regexStr","preTokenized","RegExp","result","preTokenizedLength","replacePhraseDelimiters","i","getValueFromObject","object","option","endsWith","_i","propertiesArray_1","property","Utils","reflow","getStyles","elem","view","ownerDocument","defaultView","opener","TypeaheadContainerComponent","isFocused","_matches","isScrolledIntoView","containerViewTop","ulElement","scrollTop","containerViewBottom","elemTop","offsetTop","_active","needScrollbar","typeaheadScrollable","typeaheadOptionsInScrollableView","matches","setScrollableMode","nextActiveMatch","parent","optionsListTemplate","typeaheadItemTemplate","selectActiveMatch","selectMatch","prevActiveMatch","index","scrollPrevious","scrollNext","selectActive","hightlight","match","query","startIdx","tokenLen","itemStr","itemStrHelper","typeaheadLatinize","toLowerCase","queryLen","substring","repeat","focusLost","isActive","e","stopPropagation","preventDefault","changeModel","typeaheadOnSelect","liElements","first","ulStyles","liStyles","ulPaddingBottom","ulPaddingTop","optionHeight","guiHeight","setStyle","liElement","toArray","scrollToBottom","scrollToTop","scrollHeight","class","[class.dropdown-menu]","[style.overflow-y]","[style.height]","[style.visibility]","[class.dropup]","ViewChild","ViewChildren","HostListener","TypeaheadDirective","ngControl","viewContainerRef","typeaheadMinLength","typeaheadAsync","typeaheadSingleWords","typeaheadWordDelimiters","typeaheadPhraseDelimiters","typeaheadLoading","typeaheadNoResults","typeaheadOnBlur","dropup","isTypeaheadOptionsListActive","keyUpEventEmitter","_subscriptions","_typeahead","typeaheadOptionsLimit","typeaheadWaitMs","typeahead","Observable","asyncActions","syncActions","onInput","textContent","onChange","_container","keyCode","onFocus","onBlur","active","onKeydown","valueStr","viewToModelUpdate","setValue","typeaheadRef","_outsideClickListener","onOutsideClick","normalizedQuery","control","_a","debounceTime","mergeMap","finalizeAsyncCall","normalizeQuery","from","testMatch","normalizeOption","optionValue","typeaheadOptionField","test","spaceLength","prepareMatches","hasMatches","limited","typeaheadGroupField","matches_1","v","group","concat","NgControl","ChangeDetectorRef","TypeaheadModule","FacetSelect","facet","FacetDeselect","FacetDeselectAll","FacetContainerComponent","clearTooltip","emptyText","facets","facetsChange","events","selectFacet","triggerEvent","deselectFacet","idx","findIndex","selectedFacet","splice","deselectAllFacets","next","FacetBaseComponent","facetContainer","selected","selectedChange","Subject","find","_","deselectAll","disabled","toggleFacetSelection","isFacetSelected","Host","FacetHeaderComponent","canExpand","expanded","expandedChange","toggleExpand","tabindex","(click)","(keyup.enter)","FacetCheckListComponent","_super","__extends","apply","arguments","scrollbar","FacetTypeaheadListComponent","typeaheadConfig","suggestions","simplified","_nativeElement","_defaultTypeaheadConfig","placeholder","maxResults","minCharacters","typeaheadOptions","title","toUpperCase","includes","searchQuery","of","hasOwnProperty","selectOption","typeaheadOption","scrollToFocused","dropdown","activeElement","elementBounds","dropdownBounds","FacetTypeaheadHighlight","transform","regex","Pipe","name","DECLARATIONS","FacetsModule","FormsModule","CheckboxModule","Facet","data","count","id","BsDropdownConfig","autoClose","BsDropdownState","direction","isOpenChange","isDisabledChange","toggleClick","dropdownMenu","Promise","resolve","resolveDropdownMenu","BsDropdownContainerComponent","_state","cd","_element","_subscription","addClass","BsDropdownDirective","_cis","_config","_isInlineOpen","_isInited","_dropdown","_isDisabled","_showInline","_inlinedMenu","then","viewContainer","templateRef","addBs4Polyfills","catch","_dropup","removeShowClass","addShowClass","checkRightAlignment","checkDropup","removeClass","isRightAligned","[class.open]","BsDropdownMenuDirective","_viewContainer","_templateRef","BsDropdownToggleDirective","onClick","onDocumentClick","button","onEsc","[attr.aria-haspopup]","HostBinding","BsDropdownModule","FilterContainerComponent","filters","filtersChange","addFilter","FilterAddEvent","removeFilter","FilterRemoveEvent","removeAll","FilterRemoveAllEvent","FilterBaseComponent","filtersContainer","bind","initial","FilterDynamicComponent","defaultOptions","showTypeahead","typeaheadItems","getItems","maxIndividualItems","clickOff","hideDropdown","nodeName","call","selectFilter","(document:click)","FilterDropdownComponent","FilterModule","FlippableCardComponent","flipped","flippedChange","setFlipped","state","toggleFlipped","clickTrigger","hoverEnter","hoverExit","[class.horizontal]","[class.vertical]","FlippableCardFrontDirective","FlippableCardBackDirective","FlippableCardModule","ItemDisplayPanelContentDirective","ItemDisplayPanelFooterDirective","ItemDisplayPanelComponent","boxShadow","closeVisible","preventClose","inline","animate","shadow","visibleChange","_visible","visible","hidePanel","(document:keyup.escape)","[class.inline-host]","[class.visible-host]","footer","ContentChild","ItemDisplayPanelModule","NUMBER_PICKER_VALUE_ACCESSOR","NG_VALUE_ACCESSOR","useExisting","forwardRef","NumberPickerComponent","multi","_min","Infinity","_max","_step","_disabled","_value","_propagateChange","valid","valueChange","increment","max","min","step","decrement","isValid","onScroll","deltaY","wheelDelta","writeValue","registerOnChange","registerOnTouched","setDisabledState","[class.has-error]","NumberPickerModule","PageHeaderCustomMenuDirective","PageHeaderComponent","alignment","condensed","backVisible","backClick","goBack","getCondensedBreadcrumbs","crumbs","[class.page-header-condensed]","logo","items","iconMenus","customMenus","ContentChildren","read","PageHeaderIconMenuComponent","select","menu","PageHeaderNavigationDropdownItemComponent","onSelect","dropdownOpen","_dropdownEvents","selectItem","parentItem","children","hoverStart","hoverLeave","PageHeaderNavigationItemComponent","elementRef","dropdownComponents","onItemSelect","PageHeaderNavigationComponent","resizeService","indicatorVisible","indicatorX","indicatorWidth","addResizeListener","updateSelectedIndicator","deselect","navItem","selectedItem","menuItems","offsetLeft","parseInt","getPropertyValue","ResizeService","PageHeaderModule","BreadcrumbsModule","ResizeModule","ColorService","_colorSet","colorSets","keppel","colorClassSet","_setColors","key","colorValueSet","_colors","_getColorValueByHex","_html","className","innerHTML","getColorValue","color","hex","r","g","b","ThemeColor","rgba","backgroundColor","getColor","getColorSet","setColorSet","colorSet","colorName","toRgba","resolveColorName","Inject","DOCUMENT","_r","_g","_b","parse","rgbaMatch","shortHexMatch","longHexMatch","toHex","red","green","blue","toRgb","getRed","getGreen","getBlue","getAlpha","setRed","setGreen","setBlue","setAlpha","alpha","primary","accent","secondary","alternate1","alternate2","alternate3","vibrant1","vibrant2","grey1","grey2","grey3","grey4","grey5","grey6","grey7","grey8","chart1","chart2","chart3","chart4","chart5","chart6","ok","warning","critical","partition1","partition9","partition10","partition11","partition12","partition13","partition14","social-chart-node","social-chart-edge","microFocus","cerulean","aqua","aquamarine","fuchsia","indigo","dark-blue","white","slightly-gray","bright-gray","gray","silver","dim-gray","dark-gray","black","crimson-negative","apricot","yellow","green-positive","ultramarine","skyblue","pale-aqua","pale-green","lime","orange","magenta","pale-purple","dark-ultramarine","steelblue","arctic-blue","emerald","olive","goldenrod","purple","pale-eggplant","pale-amber","pale-lemon","pale-emerald","plum","copper","amber","leaf-green","ColorServiceModule","ProgressBarComponent","colorService","trackColor","barColor","percentage","ngOnChanges","changes","ProgressBarModule","RADIOBUTTON_VALUE_ACCESSOR","RadioButtonComponent","clickable","onTouchedCallback","onChangeCallback","checkItem","keyDown","RadioButtonModule","SearchBuilderService","queryChange","validationChange","BehaviorSubject","_componentId","_components","_validation","registerComponent","component","cmp","registerComponents","components","getComponent","setQuery","getQuery","queryHasChanged","setValid","keys","generateComponentId","SearchBuilderGroupService","_searchBuilderService","init","_id","field","SearchBuilderGroupComponent","searchBuilderGroupService","operator","addText","showPlaceholder","removeField","SearchBuilderOutletDirective","componentDefinition","uxSearchBuilderOutlet","componentFactory","createComponent","uxSearchBuilderOutletContext","BaseSearchComponent","_searchBuilderGroupService","_valid","validate","validation","SearchTextComponent","label","SearchDateComponent","Date","SearchDateRangeComponent","fromValue","toValue","fromLabel","toLabel","fromPlaceholder","toPlaceholder","setHours","SearchSelectComponent","multiple","dropDirection","allowNull","maxHeight","pageSize","SearchBuilderComponent","_querySubscription","_validSubscription","distinctUntilChanged","PopoverConfig","PopoverContainerComponent","PopoverDirective","_popover","addEventListener","err","popover","popoverContext","popoverTitle","PopoverModule","TypeaheadOptionEvent","TypeaheadKeyService","handleKey","moveHighlight","TypeaheadComponent","typeaheadElement","cdRef","_open","openChange","openOnFilterChange","selectFirst","optionSelected","_highlighted","visibleOptions","loading","optionApi","getKey","getDisplay","getDisplayHtml","loadOptionsCallback","pageNum","originalValue","initOptions","getValue","loadingTemplate","_defaultLoadingTemplate","optionTemplate","_defaultOptionTemplate","noOptionsTemplate","_defaultNoOptionsTemplate","currentValue","updateOptions","optionMousedownHandler","optionClickHandler","display","displayText","displayHtml","matchIndex","highlight","substr","isInfiniteScroll","disabledOptions","optionKey_1","selectedOption","d","newIndex","indexOfVisibleOption","highlighted","inBounds","isHighlighted","normalisedInput_1","optionKey_2","el","[class.drop-up]","[style.maxHeight]","InfiniteScrollLoadButtonDirective","_template","_load","load","asObservable","clickTarget","getNextElementSibling","clear","nextSibling","nodeType","InfiniteScrollLoadingDirective","InfiniteScrollDirective","_collection","enabled","loadOnInit","loadOnScroll","collectionChange","loadingEvent","loadedEvent","loadErrorEvent","_nextPageNum","_updateRequests","_isLoading","_isExhausted","_loadButtonEnabled","_loadButtonSubscriptions","_canLoadManually","combineLatest","isLoading","isExhausted","loadButtonEnabled","scrollElement","ngAfterContentInit","requests","partition","check","auditTime","doRequest","attachEventHandlers","canLoad","_loadButtonQuery","loadButton","_loadingIndicatorQuery","attachLoadButtonEvents","loadNextPage","previousValue","reset","detachEventHandlers","pageNumber","collection","onDomChange","_scrollEventSub","fromEvent","_domObserver","MutationObserver","observe","childList","subtree","disconnect","s","request","needsData","beginLoading","loadResult","newData","Array","endLoading","reason","endLoadingWithError","clientHeight","InfiniteScrollLoadingEvent","defaultPrevented","InfiniteScrollLoadedEvent","error","InfiniteScrollLoadErrorEvent","_defaultPrevented","exhausted","InfiniteScrollModule","ScrollIntoViewService","scrollIntoView","scrollParent","offsetBottom","ScrollIntoViewIfDirective","scrollIntoViewService","condition","ScrollIntoViewIfModule","TypeaheadModule$1","SELECT_VALUE_ACCESSOR","SelectComponent","_document","_typeaheadKeyService","_input","inputChange","_dropdownOpen","dropdownOpenChange","propagateChange","input","firstChange","obj","inputClickHandler","selectInputText","inputBlurHandler","inputKeyHandler","singleTypeahead","singleOptionSelected","singleInput","HTMLDocument","multipleTypeahead","TagInputEvent","tag","TAGINPUT_VALUE_ACCESSOR","TagInputComponent","TAGINPUT_VALIDATOR","NG_VALIDATORS","_tags","tagsChange","addOnPaste","enforceTagLimits","freeInput","maxTags","Number","MAX_VALUE","minTags","showTypeaheadOnClick","tagDelimiters","tagClass","validationErrors","tagAdding","tagAdded","tagInvalidated","tagRemoving","tagRemoved","tagClick","selectedIndex","tagApi","getTagDisplay","removeTagAt","canRemoveTagAt","inputValid","onChangeHandler","onTouchedHandler","tagTemplate","_defaultTagTemplate","connectTypeahead","typeaheadQuery","tags","tagRangeError","given","keyHandler","inputCursorPos","tagInput","selectionStart","hasSelection","selectionEnd","tagSelected","isValidTagIndex","inputLength","canNavigateLeft","canNavigateRight","commitTypeahead","commitInput","backspace","moveSelection","getKeyChar","focusOutHandler","tagClickHandler","tagClickEvent","selectTagAt","inputFocusHandler","selectInput","inputPasteHandler","clipboardData","getData","commit","typeaheadOptionSelectedHandler","addTag","newTags","splitTagInput","allValid","_c","newTags_1","newTag","validateTag","_d","newTags_2","createTag","isValidSelectIndex","isSelected","tagIndex","tagRemovingEvent","isInputVisible","hasFocus","tagValue","inputPattern","tagPattern","pattern","createTagHandler","displayValue","tagAddingEvent","tagValues","escapedDelimiters","delimiterRegex","[class.disabled]","[class.focus]","[class.invalid]","Document","FocusIfDirective","focusIf","FocusIfModule","TagInputModule","SelectModule","SearchBuilderModule","DateTimePickerModule","SliderComponent","_changeDetectorRef","sliderType","SliderType","sliderStyle","SliderStyle","sliderSize","SliderSize","sliderThumb","SliderThumb","sliderTickType","SliderTickType","sliderThumbEvent","SliderThumbEvent","tracks","lower","size","middle","upper","tooltips","thumbs","drag","order","ticks","_mouseMove","_mouseUp","Value","handles","Button","callout","SliderCalloutTrigger","None","background","formatter","track","Wide","snap","SliderSnap","major","steps","labels","minor","colors","range","higher","initObservables","updateValues","setThumbState","Lower","Upper","clone","ngDoCheck","detectValueChange","updateTooltipPosition","_lowerDrag","_upperDrag","getFormattedValue","thumb","getThumbState","_lowerThumbDown","lowerThumb","switchMap","takeUntil","updateThumbPosition","_upperThumbDown","upperThumb","updateTooltips","onDragEnd","thumbEvent","DragEnd","DragStart","MouseOver","MouseLeave","Persistent","Drag","Hover","getTooltip","updateTooltipText","getThumbElement","getTooltipElement","lowerTooltip","upperTooltip","thumbWidth","tooltipElement","Narrow","tooltipWidth","tooltipPosition","ceil","clamp","eventPosition","MouseEvent","clientX","touches","mouseX","trackBounds","fraction","validateValue","snapToTick","setThumbValue","updateOrder","snapTarget","Minor","tick","Major","lowerLimit","upperLimit","Range","reduceRight","previous","current","deepMerge","updateTrackColors","updateTicks","lowerValue","low","upperValue","high","toFixed","lowerPosition","upperPosition","majorOptions","minorOptions","majorTicks","getTicks","minorTicks","unionTicks","join","getSteps","output","showTicks","showLabels","array","tk","sort","t1","t2","destination","source","value1","value2","isSliderValue","obj1","obj2","Line","All","SliderModule","SparkComponent","_colorService","values","barHeight","_theme","_barColor","_trackColor","isArray","total","reduce","val","inlineLabel","topLeftLabel","topRightLabel","bottomLeftLabel","bottomRightLabel","theme","SparkModule","TOGGLESWITCH_VALUE_ACCESSOR","ToggleSwitchComponent","toggleChecked","keydown","ToggleSwitchModule","FrameExtractionService","createVideoPlayer","videoPlayer","preload","src","createCanvas","canvas","goToFrame","time","currentTime","getThumbnail","observer","subscription","getContext","drawImage","image","toDataURL","complete","getFrameThumbnail","frameSubscription","getFrameThumbnails","start","end","skip","frames","frame","FrameExtractionModule","MediaPlayerService","_frameExtractionService","loaded","playing","initEvent","abortEvent","canPlayEvent","canPlayThroughEvent","durationChangeEvent","endedEvent","errorEvent","loadedDataEvent","loadedMetadataEvent","loadStartEvent","pauseEvent","playEvent","playingEvent","rateChangeEvent","seekedEvent","seekingEvent","stalledEvent","suspendEvent","timeUpdateEvent","volumeChangeEvent","waitingEvent","mediaClickEvent","fullscreenEvent","quietModeEvent","progressEvent","interval","setInterval","buffered","_mediaPlayer","duration","clearInterval","_fullscreen","_quietMode","audioTracks","autoplay","TimeRanges","crossOrigin","currentSrc","defaultMuted","defaultPlaybackRate","ended","loop","muted","networkState","paused","playbackRate","played","readyState","seekable","seeking","textTracks","TextTrackList","videoTracks","VideoTrackList","volume","setMediaPlayer","mediaPlayer","_hostElement","togglePlay","play","pause","canPlayType","addTextTrack","kind","language","requestFullscreen","webkitRequestFullscreen","msRequestFullscreen","mozRequestFullScreen","exitFullscreen","webkitExitFullscreen","msExitFullscreen","mozCancelFullScreen","fullscreenChange","fullscreen","webkitIsFullScreen","mozFullScreen","msFullscreenElement","toggleFullscreen","getFrames","AudioService","_http","getAudioFileMetadata","mediaElement","responseType","ResponseContentType","Blob","response","description","filename","lastIndexOf","extension","blob","getWaveformFromUrl","url","AudioContext","_audioContext","createVolumeNode","createAnalyserNode","ArrayBuffer","getAudioBuffer","arrayBuffer","audioBuffer","createBufferSource","dataPoints","channels","_audioBuffer","numberOfChannels","channelIdx","getChannelData","Float32Array","getWaveformPoints","waveform","_loop_5","points","channel","getOfflineAudioContext","decodeAudioData","OfflineAudioContext","sampleRate","disconnectSource","_audioBufferSource","buffer","connect","_analyserNode","_gainNode","createGain","createAnalyser","Http","AudioServiceModule","HttpModule","MediaPlayerComponent","mediaPlayerService","_audioService","hovering","_hover$","quietMode","_playerRef","audioMetadata","_playing$","_paused$","_clicked$","_loading$","(keydown.Space)","[class.standard]","[class.fullscreen]","[class.quiet]","[class.hover]","[class.video]","[class.audio]","(mouseenter)","(mouseleave)","(document:webkitfullscreenchange)","(document:mozfullscreenchange)","(document:MSFullscreenChange)","_trackBarRef","MediaPlayerBaseExtensionDirective","MediaPlayerTimelineExtensionComponent","mouseDown","scrub","mousedown$","mousemove$","mouseup$","_mouseEventSubscription","updateScrub","bounds","timelineRef","offsetX","(document:mouseup)","MediaPlayerControlsExtensionComponent","volumeActive","volumeDragging","_volume","_previousVolume","mouseenter$","volumeIcon","mouseenterContainer$","volumeContainer","mouseleaveContainer$","timer","toggleMute","setFullscreen","goToStart","goToEnd","dragStart","dragMove","volumeSlider","x","pageX","dragEnd","DurationPipe","seconds","minutes","floor","hours","days","pad","DurationPipeModule","FileSizePipe","log","pow","FileSizePipeModule","MediaPlayerModule","VirtualScrollLoadingDirective","VirtualScrollLoadButtonDirective","VirtualScrollCellDirective","VirtualScrollComponent","cells","loadingComplete","_height","cellHeight","setupObservable","renderCells","isFirstChange","getVisibleCells","startCell","endCell","getTotalHeight","cellTemplate","loadingIndicatorTemplate","loadButtonTemplate","VirtualScrollModule","WizardStepComponent","visitedChange","_visited","visited","WizardComponent","QueryList","orientation","nextText","previousText","cancelText","finishText","nextTooltip","previousTooltip","cancelTooltip","finishTooltip","nextDisabled","previousDisabled","cancelDisabled","finishDisabled","nextVisible","previousVisible","cancelVisible","finishVisible","cancelAlwaysVisible","finishAlwaysVisible","onNext","onPrevious","onCancel","onFinish","stepChange","invalidIndicator","update","getCurrentStep","finish","cancel","gotoStep","stp","isLastStep","getStepAtIndex","WizardModule","FixedHeaderTableDirective","tablePaging","_tableHead","_tableBody","setLayout","getTable","clientWidth","tableHeight","FixedHeaderTableModule","HelpCenterService","registerItem","unregisterItem","itm","HelpCenterItemDirective","_helpCenterService","uxHelpCenterItem","HelpCenterModule","HoverActionService","_focused","_hovered","_actions","register","action","unregister","actn","setContainer","setFocusState","updateVisibility","setHoverState","containerHasFocus","focusActionAtIndex","actionHasFocus","getFocusedActionIndex","getFocusedAction","focused","HoverActionContainerDirective","_hoverActionService","active$","onHover","onLeave","[class.hover-action-container-active]","[tabindex]","HoverActionDirective","[class.hover-action-active]","[class.hover-action-focused]","HoverActionModule","LayoutSwitcherItemDirective","getLayout","getConfig","activate","_embeddedView","deactivate","LayoutSwitcherDirective","_width","updateActiveLayout","getActiveLayout","_layouts","layout","minWidth","maxWidth","_activeLayout","requestAnimationFrame","LayoutSwitcherModule","StringFilterPipe","it","StringFilterModule","CookieAdapter","getItem","cookie","setItem","removeItem","eqPos","toUTCString","getSupported","LocalStorageAdapter","localStorage","SessionStorageAdapter","sessionStorage","PersistentDataService","PersistentDataStorageType","LocalStorage","getAdapter","Cookie","SessionStorage","PersistentDataModule","StorageAdapter","BreadcrumbsComponent","clickCrumb","crumb","RouterModule","CHECKBOX_VALUE_ACCESSOR","CheckboxComponent","indeterminateValue","ColumnSortingComponent","stateChange","columnSortingState","ColumnSortingState","initParent","_parent","column","NoSort","orderNumber","changeState","Ascending","Descending","toggleColumn","ColumnSortingDirective","singleSort","ColumnSortingModule","DashboardService","_widgets","_options$","_placeholder","y","_dimensions","_columnWidth","_rowHeight","_stacked","_defaultOptions","columns","padding","minHeight","emptyRow","getOptions","_options","getDefaultOptions","setOptions","setPadding","setDashboard","dashboard","_dashboard","addWidget","widget","renderDashboard","removeWidget","wgt","setDimensions","getLayoutData","getId","col","getColumn","row","getRow","colSpan","getColumnSpan","rowSpan","getRowSpan","setLayoutData","setColumn","setRow","setColumnSpan","setRowSpan","rowHeight","setStacked","setDashboardLayout","_actionWidget","render","setWidgetPosition","setDashboardHeight","stacked","getWidgetsByOrder","w1","w2","w1Position","w2Position","success","getPositionAvailable","columnSpan","ignoreWidget","spaces","getOccupiedSpaces","_loop_1","_loop_2","block","state_1","state_2","forEachBlock","onResizeStart","_mouseEvent","bringToFront","onResizeDrag","getHandles","hnd","centerX","centerY","mouseY","dimensions","actualX","actualY","actualWidth","actualHeight","ActionDirection","Right","Left","difference","Bottom","Top","TopLeft","TopRight","BottomLeft","BottomRight","currentWidth","currentHeight","setBounds","setPlaceholderBounds","updateWidgetPositions","onResizeEnd","commitWidgetChanges","getPlaceholder","shiftWidgetsUp","onDragStart","setWidgetOrigin","cacheWidgets","_widgetOrigin","onDrag","pageY","restoreWidgets","shiftWidgets","_cache","ignoreActionWidget","widgetsToMove","_loop_3","_loop_4","this_1","space","unmovedWidgets","grid","getRequiredSpacesFromPoint","every","gridSpace","getColumnCount","canWidgetMoveRight","validatePlaceholderPosition","canWidgetMoveLeft","distance","moveWidgetDown","shiftDirection","getWidgetsAtPosition","getColumnWidth","performMove","targetSpaces","moveable","ignoreResizing","Rounding","RoundDownBelowHalf","RoundUpOverHalf","getPlaceholderColumn","getPlaceholderRow","getPlaceholderColumnSpan","getPlaceholderRowSpan","rowCount","getRowHeight","getColumnFromPx","Move","RoundDown","overflow","getRowFromPx","rounding","half","RoundUp","getRowCount","sendToBack","stable","callback","DashboardComponent","_dashboardService","layoutChange","JSON","stringify","_layout","onResize","run","[style.height.px]","DashboardWidgetComponent","resizable","zIndex","_column","regular","_row","_columnSpan","_rowSpan","_dragMove","_dragEnd","applyOptions","random","initialiseHandles","_handles","getStackableValue","setStackableValue","handle","bindResize","listener","downEvent","move$","moveEvent","[style.left.px]","[style.top.px]","[style.width.px]","[style.padding.px]","[style.zIndex]","DashboardDragHandleDirective","dashboardService","subject","displayMode","iframe","setAttribute","waitUntilReady","attachListener","contentWindow","contentDocument","ResizeDirective","_resizeService","throttle","resize","DashboardModule","TimepickerActions","WRITE_VALUE","payload","changeHours","CHANGE_HOURS","changeMinutes","CHANGE_MINUTES","changeSeconds","CHANGE_SECONDS","setTime","SET_TIME_UNIT","updateControls","UPDATE_CONTROLS","dex","hoursPerDay","hoursPerDayHalf","minutesPerHour","secondsPerMinute","isValidDate","isNaN","getHours","toNumber","parseHours","isPM","hour","NaN","parseMinutes","minute","parseSeconds","parseTime","changeTime","diff","createDate","getMinutes","getSeconds","getFullYear","getMonth","getDate","getMilliseconds","padNumber","isInputValid","canChangeValue","readonlyInput","mousewheel","arrowkeys","getControlsValue","hourStep","minuteStep","secondsStep","showSpinners","showMeridian","showSeconds","meridians","TimepickerConfig","initialState","controls","canIncrementHours","canIncrementMinutes","canIncrementSeconds","canDecrementHours","canDecrementMinutes","canDecrementSeconds","timepickerReducer","_newTime","_newControlsState","res","_newHour","_newMinutes","_newSeconds","timepickerControls","_newState","MiniStore","_dispatcher","_reducer","state$","pathOrMapFn","mapped$","lift","store","dispatch","__window","__self","self","WorkerGlobalScope","_root","global","root_1","tryCatchTarget","tryCatcher","errorObject_1","errorObject","UnsubscriptionError","errors","stack","message","flattenUnsubscriptionErrors","errs","UnsubscriptionError_1","Subscription","closed","_parents","_unsubscribe","hasErrors","len","isFunction_1","isFunction","tryCatch_1","tryCatch","isArray_1","sub","isObject_1","isObject","teardown","EMPTY","_addParent","tmp","subscriptions","subscriptionIndex","empty","Action","scheduler","work","schedule","delay","Subscription_1","AsyncAction","pending","recycleAsyncId","requestAsyncId","root","flush","execute","_execute","errored","errorValue","actions","Action_1","QueueAction","AsyncAction_1","Scheduler","SchedulerAction","now","AsyncScheduler","scheduled","shift","Scheduler_1","queue_1","QueueScheduler","AsyncScheduler_1","QueueAction_1","MiniState","_initialState","actionsDispatcher$","reducer","actionInQueue$","observeOn","queue","scan","TimepickerStore","TIMEPICKER_CONTROL_VALUE_ACCESSOR","TimepickerComponent","_cd","_store","_timepickerActions","invalidHours","invalidMinutes","invalidSeconds","onTouched","_renderTime","controlsState","meridian","prevDef","$event","wheelSign","sign","updateHours","_updateTime","updateMinutes","updateSeconds","_seconds","toggleMeridian","_hours","getUTCSeconds","encapsulation","ViewEncapsulation","TimepickerModule","CHECKBOX_CONTROL_VALUE_ACCESSOR","ButtonCheckboxDirective","btnCheckboxTrue","btnCheckboxFalse","trueValue","falseValue","RADIO_CONTROL_VALUE_ACCESSOR","ButtonRadioDirective","cdr","btnRadio","attributes","uncheckable","ButtonsModule","gridify","list","compareDays","day1","day2","months","monthsShort","month","weekdaysShort","weekday","DateTimePickerConfig","showDate","showTime","showTimezone","weekdays","nowBtnText","timezones","DateTimePickerService","date","activeDate","mode","DatePickerMode","Day","year","getTime","DateTimePickerComponent","dateTimePickerService","dateChange","timezoneChange","_timezone","timezone","zone","setToNow","timePickerComponent","setDefaultTimezone","Month","Year","DateTimePickerDayViewComponent","merge","setDate","getDay","dates","dateRange","week","today","isToday","currentMonth","isCurrentMonth","showMonthPicker","DateTimePickerMonthViewComponent","_dateTimePickerService","currentDate","showDayPicker","getMonthName","showYearPicker","DateTimePickerYearViewComponent","_page","years","currentYear","decade","getDecade","DateTimePickerHeaderComponent","canAscend","ascend","DateTimePickerTimeViewComponent","DatePickerMeridian","AM","getTimezoneOffset","PM","setMeridian","previousTimezone","currentZone","nextTimezone","EboxComponent","EboxHeaderDirective","EboxContentDirective","EboxModule"],"mappings":"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"}

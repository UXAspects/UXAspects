{"version":3,"file":"ux-aspects.umd.min.js","sources":["../../../../node_modules/.tmp/timepicker/timepicker.utils.ts","../../../../node_modules/.tmp/timepicker/timepicker-controls.util.ts","../../../../node_modules/.tmp/timepicker/reducer/timepicker.reducer.ts","../../../../node_modules/src/util/tryCatch.ts","../../../../node_modules/src/Subscription.ts","~/@ux-aspects/ux-aspects/components/date-time-picker/date-time-picker.utils.ts","../../../../node_modules/.tmp/utils/theme-provider.ts","../../../../node_modules/.tmp/utils/triggers.ts","../../../../node_modules/.tmp/positioning/positioning.service.ts","../../../../node_modules/.tmp/utils/warn-once.ts","../../../../node_modules/.tmp/typeahead/typeahead-utils.ts","~/@ux-aspects/ux-aspects/components/breadcrumbs/breadcrumbs.component.ts","~/@ux-aspects/ux-aspects/components/breadcrumbs/breadcrumbs.module.ts","~/@ux-aspects/ux-aspects/components/checkbox/checkbox.component.ts","~/@ux-aspects/ux-aspects/components/checkbox/checkbox.module.ts","~/@ux-aspects/ux-aspects/components/column-sorting/column-sorting.component.ts","~/@ux-aspects/ux-aspects/components/column-sorting/column-sorting.directive.ts","~/@ux-aspects/ux-aspects/components/column-sorting/column-sorting.module.ts","~/@ux-aspects/ux-aspects/components/dashboard/dashboard.service.ts","~/@ux-aspects/ux-aspects/components/dashboard/dashboard.component.ts","~/@ux-aspects/ux-aspects/components/dashboard/widget/dashboard-widget.component.ts","~/@ux-aspects/ux-aspects/components/dashboard/drag-handle/drag-handle.directive.ts","~/@ux-aspects/ux-aspects/directives/resize/resize.service.ts","~/@ux-aspects/ux-aspects/directives/resize/resize.directive.ts","~/@ux-aspects/ux-aspects/directives/resize/resize.module.ts","~/@ux-aspects/ux-aspects/components/dashboard/dashboard.module.ts","../../../../node_modules/.tmp/timepicker/reducer/timepicker.actions.ts","../../../../node_modules/.tmp/timepicker/timepicker.config.ts","../../../../node_modules/.tmp/mini-ngrx/store.class.ts","../../../../node_modules/src/util/root.ts","../../../../node_modules/src/util/isArray.ts","../../../../node_modules/src/util/isObject.ts","../../../../node_modules/src/util/isFunction.ts","../../../../node_modules/src/util/errorObject.ts","../../../../node_modules/src/util/UnsubscriptionError.ts","../../../../node_modules/src/scheduler/Action.ts","../../../../node_modules/src/scheduler/AsyncAction.ts","../../../../node_modules/src/scheduler/QueueAction.ts","../../../../node_modules/src/Scheduler.ts","../../../../node_modules/src/scheduler/AsyncScheduler.ts","../../../../node_modules/src/scheduler/queue.ts","../../../../node_modules/src/scheduler/QueueScheduler.ts","../../../../node_modules/.tmp/mini-ngrx/state.class.ts","../../../../node_modules/.tmp/timepicker/reducer/timepicker.store.ts","../../../../node_modules/.tmp/timepicker/timepicker.component.ts","../../../../node_modules/.tmp/timepicker/timepicker.module.ts","../../../../node_modules/.tmp/buttons/button-checkbox.directive.ts","../../../../node_modules/.tmp/buttons/button-radio.directive.ts","../../../../node_modules/.tmp/buttons/buttons.module.ts","~/@ux-aspects/ux-aspects/components/date-time-picker/date-time-picker.config.ts","~/@ux-aspects/ux-aspects/components/date-time-picker/date-time-picker.component.ts","~/@ux-aspects/ux-aspects/components/date-time-picker/day-view/day-view.component.ts","~/@ux-aspects/ux-aspects/components/date-time-picker/month-view/month-view.component.ts","~/@ux-aspects/ux-aspects/components/date-time-picker/year-view/year-view.component.ts","~/@ux-aspects/ux-aspects/components/date-time-picker/header/header.component.ts","~/@ux-aspects/ux-aspects/components/date-time-picker/time-view/time-view.component.ts","~/@ux-aspects/ux-aspects/components/date-time-picker/date-time-picker.module.ts","~/@ux-aspects/ux-aspects/components/ebox/ebox.component.ts","~/@ux-aspects/ux-aspects/components/ebox/ebox.module.ts","../../../../node_modules/.tmp/tooltip/tooltip.config.ts","../../../../node_modules/.tmp/utils/facade/browser.ts","../../../../node_modules/.tmp/tooltip/tooltip-container.component.ts","../../../../node_modules/.tmp/utils/trigger.class.ts","../../../../node_modules/.tmp/component-loader/content-ref.class.ts","../../../../node_modules/.tmp/component-loader/component-loader.class.ts","../../../../node_modules/.tmp/positioning/ng-positioning.ts","../../../../node_modules/.tmp/component-loader/component-loader.factory.ts","../../../../node_modules/.tmp/tooltip/tooltip.directive.ts","../../../../node_modules/.tmp/utils/decorators.ts","../../../../node_modules/.tmp/tooltip/tooltip.module.ts","../../../../node_modules/.tmp/typeahead/latin-map.ts","../../../../node_modules/.tmp/typeahead/typeahead-match.class.ts","../../../../node_modules/.tmp/utils/utils.class.ts","../../../../node_modules/.tmp/typeahead/typeahead-container.component.ts","../../../../node_modules/.tmp/typeahead/typeahead.directive.ts","../../../../node_modules/.tmp/typeahead/typeahead.module.ts","~/@ux-aspects/ux-aspects/components/facets/facet-events.ts","~/@ux-aspects/ux-aspects/components/facets/facet-container.component.ts","~/@ux-aspects/ux-aspects/components/facets/base/facet-base/facet-base.component.ts","~/@ux-aspects/ux-aspects/components/facets/base/facet-header/facet-header.component.ts","~/@ux-aspects/ux-aspects/components/facets/facet-check-list/facet-check-list.component.ts","~/@ux-aspects/ux-aspects/components/facets/facet-typeahead-list/facet-typeahead-list.component.ts","~/@ux-aspects/ux-aspects/components/facets/facets.module.ts","~/@ux-aspects/ux-aspects/components/facets/models/facet.ts","../../../../node_modules/.tmp/dropdown/bs-dropdown.config.ts","../../../../node_modules/.tmp/dropdown/bs-dropdown.state.ts","../../../../node_modules/.tmp/dropdown/bs-dropdown-container.component.ts","../../../../node_modules/.tmp/dropdown/bs-dropdown.directive.ts","../../../../node_modules/.tmp/dropdown/bs-dropdown-menu.directive.ts","../../../../node_modules/.tmp/dropdown/bs-dropdown-toggle.directive.ts","../../../../node_modules/.tmp/dropdown/bs-dropdown.module.ts","~/@ux-aspects/ux-aspects/components/filters/filter-container.component.ts","~/@ux-aspects/ux-aspects/components/filters/filter-base/filter-base.component.ts","~/@ux-aspects/ux-aspects/components/filters/filter-dynamic/filter-dynamic.component.ts","~/@ux-aspects/ux-aspects/components/filters/filter-dropdown/filter-dropdown.component.ts","~/@ux-aspects/ux-aspects/components/filters/filter.module.ts","~/@ux-aspects/ux-aspects/components/flippable-card/flippable-card.component.ts","~/@ux-aspects/ux-aspects/components/flippable-card/flippable-card.module.ts","~/@ux-aspects/ux-aspects/components/item-display-panel/item-display-panel.component.ts","~/@ux-aspects/ux-aspects/components/item-display-panel/item-display-panel.module.ts","~/@ux-aspects/ux-aspects/components/number-picker/number-picker.component.ts","~/@ux-aspects/ux-aspects/components/number-picker/number-picker.module.ts","~/@ux-aspects/ux-aspects/components/page-header/custom-menu/custom-menu.directive.ts","~/@ux-aspects/ux-aspects/components/page-header/page-header.component.ts","~/@ux-aspects/ux-aspects/components/page-header/icon-menu/icon-menu.component.ts","~/@ux-aspects/ux-aspects/components/page-header/navigation/navigation-dropdown-item/navigation-dropdown-item.component.ts","~/@ux-aspects/ux-aspects/components/page-header/navigation/navigation-item/navigation-item.component.ts","~/@ux-aspects/ux-aspects/components/page-header/navigation/navigation.component.ts","~/@ux-aspects/ux-aspects/components/page-header/page-header.module.ts","~/@ux-aspects/ux-aspects/services/color/color.service.ts","~/@ux-aspects/ux-aspects/services/color/color.module.ts","~/@ux-aspects/ux-aspects/components/progress-bar/progress-bar.component.ts","~/@ux-aspects/ux-aspects/components/progress-bar/progress-bar.module.ts","~/@ux-aspects/ux-aspects/components/radiobutton/radiobutton.component.ts","~/@ux-aspects/ux-aspects/components/radiobutton/radiobutton.module.ts","~/@ux-aspects/ux-aspects/components/search-builder/search-builder.service.ts","~/@ux-aspects/ux-aspects/components/search-builder/search-builder-group/search-builder-group.service.ts","~/@ux-aspects/ux-aspects/components/search-builder/search-builder-group/search-builder-group.component.ts","~/@ux-aspects/ux-aspects/components/search-builder/search-builder-outlet/search-builder-outlet.directive.ts","~/@ux-aspects/ux-aspects/components/search-builder/search-components/base-search.component.ts","~/@ux-aspects/ux-aspects/components/search-builder/search-components/search-text/search-text.component.ts","~/@ux-aspects/ux-aspects/components/search-builder/search-builder.component.ts","~/@ux-aspects/ux-aspects/components/search-builder/search-builder.module.ts","~/@ux-aspects/ux-aspects/components/typeahead/typeahead-event.ts","~/@ux-aspects/ux-aspects/components/typeahead/typeahead-key.service.ts","~/@ux-aspects/ux-aspects/components/typeahead/typeahead.component.ts","~/@ux-aspects/ux-aspects/directives/infinite-scroll/infinite-scroll-load-button.directive.ts","~/@ux-aspects/ux-aspects/directives/infinite-scroll/infinite-scroll-loading.directive.ts","~/@ux-aspects/ux-aspects/directives/infinite-scroll/infinite-scroll.directive.ts","~/@ux-aspects/ux-aspects/directives/infinite-scroll/infinite-scroll.module.ts","~/@ux-aspects/ux-aspects/directives/scroll-into-view-if/scroll-into-view.service.ts","~/@ux-aspects/ux-aspects/directives/scroll-into-view-if/scroll-into-view-if.directive.ts","~/@ux-aspects/ux-aspects/directives/scroll-into-view-if/scroll-into-view-if.module.ts","~/@ux-aspects/ux-aspects/components/typeahead/typeahead.module.ts","~/@ux-aspects/ux-aspects/components/select/select.component.ts","~/@ux-aspects/ux-aspects/components/tag-input/tag-input-event.ts","~/@ux-aspects/ux-aspects/components/tag-input/tag-input.component.ts","~/@ux-aspects/ux-aspects/directives/focus-if/focus-if.directive.ts","~/@ux-aspects/ux-aspects/directives/focus-if/focus-if.module.ts","~/@ux-aspects/ux-aspects/components/tag-input/tag-input.module.ts","~/@ux-aspects/ux-aspects/components/select/select.module.ts","~/@ux-aspects/ux-aspects/components/slider/slider.component.ts","~/@ux-aspects/ux-aspects/components/slider/slider.module.ts","~/@ux-aspects/ux-aspects/components/spark/spark.component.ts","~/@ux-aspects/ux-aspects/components/spark/spark.module.ts","~/@ux-aspects/ux-aspects/components/toggleswitch/toggleswitch.component.ts","~/@ux-aspects/ux-aspects/components/toggleswitch/toggleswitch.module.ts","~/@ux-aspects/ux-aspects/services/frame-extraction/frame-extraction.service.ts","~/@ux-aspects/ux-aspects/services/frame-extraction/frame-extraction.module.ts","~/@ux-aspects/ux-aspects/components/media-player/media-player.service.ts","~/@ux-aspects/ux-aspects/services/audio/audio.service.ts","~/@ux-aspects/ux-aspects/services/audio/audio.module.ts","~/@ux-aspects/ux-aspects/components/media-player/media-player.component.ts","~/@ux-aspects/ux-aspects/components/media-player/extensions/base-extension.directive.ts","~/@ux-aspects/ux-aspects/components/media-player/extensions/timeline/timeline.component.ts","~/@ux-aspects/ux-aspects/components/media-player/extensions/controls/controls.component.ts","~/@ux-aspects/ux-aspects/pipes/duration/duration.pipe.ts","~/@ux-aspects/ux-aspects/pipes/duration/duration.module.ts","~/@ux-aspects/ux-aspects/pipes/file-size/file-size.pipe.ts","~/@ux-aspects/ux-aspects/pipes/file-size/file-size.module.ts","~/@ux-aspects/ux-aspects/components/media-player/media-player.module.ts","~/@ux-aspects/ux-aspects/components/virtual-scroll/directives/virtual-scroll-loading.directive.ts","~/@ux-aspects/ux-aspects/components/virtual-scroll/directives/virtual-scroll-load-button.directive.ts","~/@ux-aspects/ux-aspects/components/virtual-scroll/directives/virtual-scroll-cell.directive.ts","~/@ux-aspects/ux-aspects/components/virtual-scroll/virtual-scroll.component.ts","~/@ux-aspects/ux-aspects/components/virtual-scroll/virtual-scroll.module.ts","~/@ux-aspects/ux-aspects/components/wizard/wizard-step.component.ts","~/@ux-aspects/ux-aspects/components/wizard/wizard.component.ts","~/@ux-aspects/ux-aspects/components/wizard/wizard.module.ts","~/@ux-aspects/ux-aspects/directives/help-center/help-center.service.ts","~/@ux-aspects/ux-aspects/directives/help-center/help-center-item.directive.ts","~/@ux-aspects/ux-aspects/directives/help-center/help-center.module.ts","~/@ux-aspects/ux-aspects/directives/hover-action/hover-action.service.ts","~/@ux-aspects/ux-aspects/directives/hover-action/hover-action-container.directive.ts","~/@ux-aspects/ux-aspects/directives/hover-action/hover-action.directive.ts","~/@ux-aspects/ux-aspects/directives/hover-action/hover-action.module.ts","~/@ux-aspects/ux-aspects/directives/layout-switcher/layout-switcher-item.directive.ts","~/@ux-aspects/ux-aspects/directives/layout-switcher/layout-switcher.directive.ts","~/@ux-aspects/ux-aspects/directives/layout-switcher/layout-switcher.module.ts","~/@ux-aspects/ux-aspects/pipes/string-filter/string-filter.pipe.ts","~/@ux-aspects/ux-aspects/pipes/string-filter/string-filter.module.ts","~/@ux-aspects/ux-aspects/services/persistent-data/adapters/cookie-adapter.ts","~/@ux-aspects/ux-aspects/services/persistent-data/adapters/local-storage-adapter.ts","~/@ux-aspects/ux-aspects/services/persistent-data/adapters/session-storage-adapter.ts","~/@ux-aspects/ux-aspects/services/persistent-data/persistent-data.service.ts","~/@ux-aspects/ux-aspects/services/persistent-data/persistent-data.module.ts","~/@ux-aspects/ux-aspects/services/persistent-data/adapters/storage-adapter.ts"],"sourcesContent":["import { Time } from './timepicker.models';\n\nconst dex = 10;\nconst hoursPerDay = 24;\nconst hoursPerDayHalf = 12;\nconst minutesPerHour = 60;\nconst secondsPerMinute = 60;\n\nexport function isValidDate(value?: string | Date): boolean {\n  if (!value) {\n    return false;\n  }\n\n  if (value instanceof Date && isNaN(value.getHours())) {\n    return false;\n  }\n\n  if (typeof value === 'string') {\n    return isValidDate(new Date(value));\n  }\n\n  return true;\n}\n\nexport function toNumber(value: string | number): number {\n  if (typeof value === 'number') {\n    return value;\n  }\n\n  return parseInt(value, dex);\n}\n\nexport function isNumber(value: string): boolean {\n  return !isNaN(toNumber(value));\n}\n\nexport function parseHours(\n  value: string | number,\n  isPM = false\n): number {\n  const hour = toNumber(value);\n  if (\n    isNaN(hour) ||\n    hour < 0 ||\n    hour > (isPM ? hoursPerDayHalf : hoursPerDay)\n  ) {\n    return NaN;\n  }\n\n  return hour;\n}\n\nexport function parseMinutes(value: string | number): number {\n  const minute = toNumber(value);\n  if (isNaN(minute) || minute < 0 || minute > minutesPerHour) {\n    return NaN;\n  }\n\n  return minute;\n}\n\nexport function parseSeconds(value: string | number): number {\n  const seconds = toNumber(value);\n  if (isNaN(seconds) || seconds < 0 || seconds > secondsPerMinute) {\n    return NaN;\n  }\n\n  return seconds;\n}\n\nexport function parseTime(value: string | Date): Date {\n  if (typeof value === 'string') {\n    return new Date(value);\n  }\n\n  return value;\n}\n\nexport function changeTime(value: Date, diff: Time): Date {\n  if (!value) {\n    return changeTime(createDate(new Date(), 0, 0, 0), diff);\n  }\n\n  let hour = value.getHours();\n  let minutes = value.getMinutes();\n  let seconds = value.getSeconds();\n\n  if (diff.hour) {\n    hour = (hour + toNumber(diff.hour)) % hoursPerDay;\n    if (hour < 0) {\n      hour += hoursPerDay;\n    }\n  }\n\n  if (diff.minute) {\n    minutes = minutes + toNumber(diff.minute);\n  }\n\n  if (diff.seconds) {\n    seconds = seconds + toNumber(diff.seconds);\n  }\n\n  return createDate(value, hour, minutes, seconds);\n}\n\nexport function setTime(value: Date, opts: Time): Date {\n  let hour = parseHours(opts.hour);\n  const minute = parseMinutes(opts.minute);\n  const seconds = parseSeconds(opts.seconds) || 0;\n\n  if (opts.isPM) {\n    hour += hoursPerDayHalf;\n  }\n\n  // fixme: unreachable code, value is mandatory\n  if (!value) {\n    if (!isNaN(hour) && !isNaN(minute)) {\n      return createDate(new Date(), hour, minute, seconds);\n    }\n\n    return value;\n  }\n\n  if (isNaN(hour) || isNaN(minute)) {\n    return value;\n  }\n\n  return createDate(value, hour, minute, seconds);\n}\n\nexport function createDate(\n  value: Date,\n  hours: number,\n  minutes: number,\n  seconds: number\n): Date {\n  // fixme: unreachable code, value is mandatory\n  const _value = value || new Date();\n\n  return new Date(\n    _value.getFullYear(),\n    _value.getMonth(),\n    _value.getDate(),\n    hours,\n    minutes,\n    seconds,\n    _value.getMilliseconds()\n  );\n}\n\nexport function padNumber(value: number): string {\n  const _value = value.toString();\n  if (_value.length > 1) {\n    return _value;\n  }\n\n  return `0${_value}`;\n}\n\nexport function isInputValid(\n  hours: string,\n  minutes: string,\n  seconds = '0',\n  isPM: boolean\n): boolean {\n  return !(isNaN(parseHours(hours, isPM))\n    || isNaN(parseMinutes(minutes))\n    || isNaN(parseSeconds(seconds)));\n}\n","import { changeTime } from './timepicker.utils';\nimport {\n  TimeChangeEvent,\n  TimepickerComponentState,\n  TimepickerControls\n} from './timepicker.models';\n\nexport function canChangeValue(\n  state: TimepickerComponentState,\n  event?: TimeChangeEvent\n): boolean {\n  if (state.readonlyInput) {\n    return false;\n  }\n\n  if (event) {\n    if (event.source === 'wheel' && !state.mousewheel) {\n      return false;\n    }\n\n    if (event.source === 'key' && !state.arrowkeys) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nexport function canChangeHours(\n  event: TimeChangeEvent,\n  controls: TimepickerControls\n): boolean {\n  if (!event.step) {\n    return false;\n  }\n\n  if (event.step > 0 && !controls.canIncrementHours) {\n    return false;\n  }\n\n  if (event.step < 0 && !controls.canDecrementHours) {\n    return false;\n  }\n\n  return true;\n}\n\nexport function canChangeMinutes(\n  event: TimeChangeEvent,\n  controls: TimepickerControls\n): boolean {\n  if (!event.step) {\n    return false;\n  }\n  if (event.step > 0 && !controls.canIncrementMinutes) {\n    return false;\n  }\n  if (event.step < 0 && !controls.canDecrementMinutes) {\n    return false;\n  }\n\n  return true;\n}\n\nexport function canChangeSeconds(\n  event: TimeChangeEvent,\n  controls: TimepickerControls\n): boolean {\n  if (!event.step) {\n    return false;\n  }\n  if (event.step > 0 && !controls.canIncrementSeconds) {\n    return false;\n  }\n  if (event.step < 0 && !controls.canDecrementSeconds) {\n    return false;\n  }\n\n  return true;\n}\n\nexport function getControlsValue(\n  state: TimepickerComponentState\n): TimepickerComponentState {\n  const {\n    hourStep,\n    minuteStep,\n    secondsStep,\n    readonlyInput,\n    mousewheel,\n    arrowkeys,\n    showSpinners,\n    showMeridian,\n    showSeconds,\n    meridians,\n    min,\n    max\n  } = state;\n\n  return {\n    hourStep,\n    minuteStep,\n    secondsStep,\n    readonlyInput,\n    mousewheel,\n    arrowkeys,\n    showSpinners,\n    showMeridian,\n    showSeconds,\n    meridians,\n    min,\n    max\n  };\n}\n\nexport function timepickerControls(\n  value: Date,\n  state: TimepickerComponentState\n): TimepickerControls {\n  const { min, max, hourStep, minuteStep, secondsStep, showSeconds } = state;\n  const res: TimepickerControls = {\n    canIncrementHours: true,\n    canIncrementMinutes: true,\n    canIncrementSeconds: true,\n\n    canDecrementHours: true,\n    canDecrementMinutes: true,\n    canDecrementSeconds: true\n  };\n\n  if (!value) {\n    return res;\n  }\n\n  // compare dates\n  if (max) {\n    const _newHour = changeTime(value, { hour: hourStep });\n    res.canIncrementHours = max > _newHour;\n\n    if (!res.canIncrementHours) {\n      const _newMinutes = changeTime(value, { minute: minuteStep });\n      res.canIncrementMinutes = showSeconds\n        ? max > _newMinutes\n        : max >= _newMinutes;\n    }\n\n    if (!res.canIncrementMinutes) {\n      const _newSeconds = changeTime(value, { seconds: secondsStep });\n      res.canIncrementSeconds = max >= _newSeconds;\n    }\n  }\n\n  if (min) {\n    const _newHour = changeTime(value, { hour: -hourStep });\n    res.canDecrementHours = min < _newHour;\n\n    if (!res.canDecrementHours) {\n      const _newMinutes = changeTime(value, { minute: -minuteStep });\n      res.canDecrementMinutes = showSeconds\n        ? min < _newMinutes\n        : min <= _newMinutes;\n    }\n\n    if (!res.canDecrementMinutes) {\n      const _newSeconds = changeTime(value, { seconds: -secondsStep });\n      res.canDecrementSeconds = min <= _newSeconds;\n    }\n  }\n\n  return res;\n}\n","import { Action } from '../../mini-ngrx/index';\nimport {\n  canChangeHours,\n  canChangeMinutes,\n  canChangeSeconds,\n  canChangeValue,\n  timepickerControls\n} from '../timepicker-controls.util';\nimport { TimepickerConfig } from '../timepicker.config';\nimport {\n  TimepickerComponentState,\n  TimepickerControls\n} from '../timepicker.models';\nimport { changeTime, setTime } from '../timepicker.utils';\nimport { TimepickerActions } from './timepicker.actions';\n\nexport class TimepickerState {\n  value: Date;\n  config: TimepickerComponentState;\n  controls: TimepickerControls;\n}\n\nexport const initialState: TimepickerState = {\n  value: null,\n  config: new TimepickerConfig(),\n  controls: {\n    canIncrementHours: true,\n    canIncrementMinutes: true,\n    canIncrementSeconds: true,\n\n    canDecrementHours: true,\n    canDecrementMinutes: true,\n    canDecrementSeconds: true\n  }\n};\n\nexport function timepickerReducer(state = initialState, action: Action) {\n  switch (action.type) {\n    case TimepickerActions.WRITE_VALUE: {\n      return Object.assign({}, state, { value: action.payload });\n    }\n\n    case TimepickerActions.CHANGE_HOURS: {\n      if (\n        !canChangeValue(state.config, action.payload) ||\n        !canChangeHours(action.payload, state.controls)\n      ) {\n        return state;\n      }\n\n      const _newTime = changeTime(state.value, { hour: action.payload.step });\n\n      return Object.assign({}, state, { value: _newTime });\n    }\n\n    case TimepickerActions.CHANGE_MINUTES: {\n      if (\n        !canChangeValue(state.config, action.payload) ||\n        !canChangeMinutes(action.payload, state.controls)\n      ) {\n        return state;\n      }\n\n      const _newTime = changeTime(state.value, { minute: action.payload.step });\n\n      return Object.assign({}, state, { value: _newTime });\n    }\n\n    case TimepickerActions.CHANGE_SECONDS: {\n      if (\n        !canChangeValue(state.config, action.payload) ||\n        !canChangeSeconds(action.payload, state.controls)\n      ) {\n        return state;\n      }\n\n      const _newTime = changeTime(state.value, {\n        seconds: action.payload.step\n      });\n\n      return Object.assign({}, state, { value: _newTime });\n    }\n\n    case TimepickerActions.SET_TIME_UNIT: {\n      if (!canChangeValue(state.config)) {\n        return state;\n      }\n\n      const _newTime = setTime(state.value, action.payload);\n\n      return Object.assign({}, state, { value: _newTime });\n    }\n\n    case TimepickerActions.UPDATE_CONTROLS: {\n      const _newControlsState = timepickerControls(state.value, action.payload);\n      const _newState: TimepickerState = {\n        value: state.value,\n        config: action.payload,\n        controls: _newControlsState\n      };\n\n      if (state.config.showMeridian !== _newState.config.showMeridian) {\n        _newState.value = new Date(state.value);\n      }\n\n      return Object.assign({}, state, _newState);\n    }\n\n    default:\n      return state;\n  }\n}\n","import { errorObject } from './errorObject';\n\nlet tryCatchTarget: Function;\n\nfunction tryCatcher(this: any): any {\n  try {\n    return tryCatchTarget.apply(this, arguments);\n  } catch (e) {\n    errorObject.e = e;\n    return errorObject;\n  }\n}\n\nexport function tryCatch<T extends Function>(fn: T): T {\n  tryCatchTarget = fn;\n  return <any>tryCatcher;\n};\n","import { isArray } from './util/isArray';\nimport { isObject } from './util/isObject';\nimport { isFunction } from './util/isFunction';\nimport { tryCatch } from './util/tryCatch';\nimport { errorObject } from './util/errorObject';\nimport { UnsubscriptionError } from './util/UnsubscriptionError';\n\nexport interface AnonymousSubscription {\n  unsubscribe(): void;\n}\n\nexport type TeardownLogic = AnonymousSubscription | Function | void;\n\nexport interface ISubscription extends AnonymousSubscription {\n  unsubscribe(): void;\n  readonly closed: boolean;\n}\n\n/**\n * Represents a disposable resource, such as the execution of an Observable. A\n * Subscription has one important method, `unsubscribe`, that takes no argument\n * and just disposes the resource held by the subscription.\n *\n * Additionally, subscriptions may be grouped together through the `add()`\n * method, which will attach a child Subscription to the current Subscription.\n * When a Subscription is unsubscribed, all its children (and its grandchildren)\n * will be unsubscribed as well.\n *\n * @class Subscription\n */\nexport class Subscription implements ISubscription {\n  public static EMPTY: Subscription = (function(empty: any){\n    empty.closed = true;\n    return empty;\n  }(new Subscription()));\n\n  /**\n   * A flag to indicate whether this Subscription has already been unsubscribed.\n   * @type {boolean}\n   */\n  public closed: boolean = false;\n\n  protected _parent: Subscription = null;\n  protected _parents: Subscription[] = null;\n  private _subscriptions: ISubscription[] = null;\n\n  /**\n   * @param {function(): void} [unsubscribe] A function describing how to\n   * perform the disposal of resources when the `unsubscribe` method is called.\n   */\n  constructor(unsubscribe?: () => void) {\n    if (unsubscribe) {\n      (<any> this)._unsubscribe = unsubscribe;\n    }\n  }\n\n  /**\n   * Disposes the resources held by the subscription. May, for instance, cancel\n   * an ongoing Observable execution or cancel any other type of work that\n   * started when the Subscription was created.\n   * @return {void}\n   */\n  unsubscribe(): void {\n    let hasErrors = false;\n    let errors: any[];\n\n    if (this.closed) {\n      return;\n    }\n\n    let { _parent, _parents, _unsubscribe, _subscriptions } = (<any> this);\n\n    this.closed = true;\n    this._parent = null;\n    this._parents = null;\n    // null out _subscriptions first so any child subscriptions that attempt\n    // to remove themselves from this subscription will noop\n    this._subscriptions = null;\n\n    let index = -1;\n    let len = _parents ? _parents.length : 0;\n\n    // if this._parent is null, then so is this._parents, and we\n    // don't have to remove ourselves from any parent subscriptions.\n    while (_parent) {\n      _parent.remove(this);\n      // if this._parents is null or index >= len,\n      // then _parent is set to null, and the loop exits\n      _parent = ++index < len && _parents[index] || null;\n    }\n\n    if (isFunction(_unsubscribe)) {\n      let trial = tryCatch(_unsubscribe).call(this);\n      if (trial === errorObject) {\n        hasErrors = true;\n        errors = errors || (\n          errorObject.e instanceof UnsubscriptionError ?\n            flattenUnsubscriptionErrors(errorObject.e.errors) : [errorObject.e]\n        );\n      }\n    }\n\n    if (isArray(_subscriptions)) {\n\n      index = -1;\n      len = _subscriptions.length;\n\n      while (++index < len) {\n        const sub = _subscriptions[index];\n        if (isObject(sub)) {\n          let trial = tryCatch(sub.unsubscribe).call(sub);\n          if (trial === errorObject) {\n            hasErrors = true;\n            errors = errors || [];\n            let err = errorObject.e;\n            if (err instanceof UnsubscriptionError) {\n              errors = errors.concat(flattenUnsubscriptionErrors(err.errors));\n            } else {\n              errors.push(err);\n            }\n          }\n        }\n      }\n    }\n\n    if (hasErrors) {\n      throw new UnsubscriptionError(errors);\n    }\n  }\n\n  /**\n   * Adds a tear down to be called during the unsubscribe() of this\n   * Subscription.\n   *\n   * If the tear down being added is a subscription that is already\n   * unsubscribed, is the same reference `add` is being called on, or is\n   * `Subscription.EMPTY`, it will not be added.\n   *\n   * If this subscription is already in an `closed` state, the passed\n   * tear down logic will be executed immediately.\n   *\n   * @param {TeardownLogic} teardown The additional logic to execute on\n   * teardown.\n   * @return {Subscription} Returns the Subscription used or created to be\n   * added to the inner subscriptions list. This Subscription can be used with\n   * `remove()` to remove the passed teardown logic from the inner subscriptions\n   * list.\n   */\n  add(teardown: TeardownLogic): Subscription {\n    if (!teardown || (teardown === Subscription.EMPTY)) {\n      return Subscription.EMPTY;\n    }\n\n    if (teardown === this) {\n      return this;\n    }\n\n    let subscription = (<Subscription> teardown);\n\n    switch (typeof teardown) {\n      case 'function':\n        subscription = new Subscription(<(() => void) > teardown);\n      case 'object':\n        if (subscription.closed || typeof subscription.unsubscribe !== 'function') {\n          return subscription;\n        } else if (this.closed) {\n          subscription.unsubscribe();\n          return subscription;\n        } else if (typeof subscription._addParent !== 'function' /* quack quack */) {\n          const tmp = subscription;\n          subscription = new Subscription();\n          subscription._subscriptions = [tmp];\n        }\n        break;\n      default:\n        throw new Error('unrecognized teardown ' + teardown + ' added to Subscription.');\n    }\n\n    const subscriptions = this._subscriptions || (this._subscriptions = []);\n\n    subscriptions.push(subscription);\n    subscription._addParent(this);\n\n    return subscription;\n  }\n\n  /**\n   * Removes a Subscription from the internal list of subscriptions that will\n   * unsubscribe during the unsubscribe process of this Subscription.\n   * @param {Subscription} subscription The subscription to remove.\n   * @return {void}\n   */\n  remove(subscription: Subscription): void {\n    const subscriptions = this._subscriptions;\n    if (subscriptions) {\n      const subscriptionIndex = subscriptions.indexOf(subscription);\n      if (subscriptionIndex !== -1) {\n        subscriptions.splice(subscriptionIndex, 1);\n      }\n    }\n  }\n\n  private _addParent(parent: Subscription) {\n    let { _parent, _parents } = this;\n    if (!_parent || _parent === parent) {\n      // If we don't have a parent, or the new parent is the same as the\n      // current parent, then set this._parent to the new parent.\n      this._parent = parent;\n    } else if (!_parents) {\n      // If there's already one parent, but not multiple, allocate an Array to\n      // store the rest of the parent Subscriptions.\n      this._parents = [parent];\n    } else if (_parents.indexOf(parent) === -1) {\n      // Only add the new parent to the _parents list if it's not already there.\n      _parents.push(parent);\n    }\n  }\n}\n\nfunction flattenUnsubscriptionErrors(errors: any[]) {\n return errors.reduce((errs, err) => errs.concat((err instanceof UnsubscriptionError) ? err.errors : err), []);\n}\n","\n/**\n * Convert a single dimension array to a double dimension array\n * @template T\n * @param {?} items the single dimension array to convert\n * @param {?} columns the number of items each array should have\n * @return {?}\n */\nexport function gridify<T>(items: T[], columns: number): T[][] {\n\n    const /** @type {?} */ grid: T[][] = [];\n\n    while (items.length) {\n        grid.push(items.splice(0, columns));\n    }\n\n    return grid;\n}\n/**\n * Create an array of numbers between two limits\n * @param {?} start the lower limit\n * @param {?} end the upper limit\n * @return {?}\n */\nexport function range(start: number, end: number): number[] {\n    const /** @type {?} */ list: number[] = [];\n\n    for (let /** @type {?} */ idx = start; idx <= end; idx++) {\n        list.push(idx);\n    }\n\n    return list;\n}\n/**\n * Create an array of dates between two points\n * @param {?} start the date to start the array\n * @param {?} end the date to end the array\n * @return {?}\n */\nexport function dateRange(start: Date, end: Date): Date[] {\n\n    let /** @type {?} */ dates: Date[] = [];\n\n    // loop through all the days between the date range\n    while (start <= end) {\n\n        // add the date to the array\n        dates.push(new Date(start));\n\n        // move to the next day\n        start.setDate(start.getDate() + 1);\n    }\n\n    return dates;\n}\n/**\n * Compare two dates to see if they are on the same day\n * @param {?} day1 the first date to compare\n * @param {?} day2 the second date to compare\n * @return {?}\n */\nexport function compareDays(day1: Date, day2: Date): boolean {\n    return day1.getDate() === day2.getDate() &&\n        day1.getMonth() === day2.getMonth() &&\n        day1.getFullYear() === day2.getFullYear();\n}\n/**\n * Export an array of all the available months\n */\nexport const months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\nexport const /** @type {?} */ monthsShort = months.map(month => month.substring(0, 3));\n/**\n * Export an array of all the available days of the week\n */\nexport const weekdays = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'];\nexport const /** @type {?} */ weekdaysShort = weekdays.map(weekday => weekday.substring(0, 3));","import { window } from './facade/browser';\n\nlet guessedVersion: 'bs3' | 'bs4';\n\nfunction _guessBsVersion(): 'bs3' | 'bs4' {\n  if (typeof document === 'undefined') {\n    return null;\n  }\n  const spanEl = document.createElement('span');\n  spanEl.innerText = 'test bs version';\n  document.body.appendChild(spanEl);\n  spanEl.classList.add('d-none');\n  const rect = spanEl.getBoundingClientRect();\n  document.body.removeChild(spanEl);\n  if (!rect) {\n    return 'bs3';\n  }\n\n  return rect.top === 0 ? 'bs4' : 'bs3';\n}\n\nexport function setTheme(theme: 'bs3' | 'bs4'): void {\n  guessedVersion = theme;\n}\n\n// todo: in ngx-bootstrap, bs4 will became a default one\nexport function isBs3(): boolean {\n  if (typeof window === 'undefined') {\n    return true;\n  }\n\n  if (typeof window.__theme === 'undefined') {\n    if (guessedVersion) {\n      return guessedVersion === 'bs3';\n    }\n    guessedVersion = _guessBsVersion();\n\n    return guessedVersion === 'bs3';\n  }\n\n  return window.__theme !== 'bs4';\n}\n","/**\n * @copyright Valor Software\n * @copyright Angular ng-bootstrap team\n */\nimport { Renderer2 } from '@angular/core';\nimport { Trigger } from './trigger.class';\nimport {\n  BsEventCallback, ListenOptions\n} from '../component-loader/listen-options.model';\n\nconst DEFAULT_ALIASES = {\n  hover: ['mouseover', 'mouseout'],\n  focus: ['focusin', 'focusout']\n};\n\nexport function parseTriggers(triggers: string, aliases: any = DEFAULT_ALIASES): Trigger[] {\n  const trimmedTriggers = (triggers || '').trim();\n\n  if (trimmedTriggers.length === 0) {\n    return [];\n  }\n\n  const parsedTriggers = trimmedTriggers\n    .split(/\\s+/)\n    .map((trigger: string) => trigger.split(':'))\n    .map((triggerPair: string[]) => {\n      const alias = aliases[triggerPair[0]] || triggerPair;\n\n      return new Trigger(alias[0], alias[1]);\n    });\n\n  const manualTriggers = parsedTriggers.filter((triggerPair: Trigger) =>\n    triggerPair.isManual()\n  );\n\n  if (manualTriggers.length > 1) {\n    throw new Error('Triggers parse error: only one manual trigger is allowed');\n  }\n\n  if (manualTriggers.length === 1 && parsedTriggers.length > 1) {\n    throw new Error('Triggers parse error: manual trigger can\\'t be mixed with other triggers');\n  }\n\n  return parsedTriggers;\n}\n\nexport function listenToTriggers(renderer: Renderer2,\n                                 target: any,\n                                 triggers: string,\n                                 showFn: BsEventCallback,\n                                 hideFn: BsEventCallback,\n                                 toggleFn: BsEventCallback): Function {\n  const parsedTriggers = parseTriggers(triggers);\n  const listeners: any[] = [];\n\n  if (parsedTriggers.length === 1 && parsedTriggers[0].isManual()) {\n    return Function.prototype;\n  }\n\n  parsedTriggers.forEach((trigger: Trigger) => {\n    if (trigger.open === trigger.close) {\n      listeners.push(renderer.listen(target, trigger.open, toggleFn));\n\n      return;\n    }\n\n    listeners.push(\n      renderer.listen(target, trigger.open, showFn),\n      renderer.listen(target, trigger.close, hideFn)\n    );\n  });\n\n  return () => {\n    listeners.forEach((unsubscribeFn: Function) => unsubscribeFn());\n  };\n}\n\nexport function listenToTriggersV2(renderer: Renderer2,\n                                   options: ListenOptions): Function {\n  const parsedTriggers = parseTriggers(options.triggers);\n  const target = options.target;\n  // do nothing\n  if (parsedTriggers.length === 1 && parsedTriggers[0].isManual()) {\n    return Function.prototype;\n  }\n\n  // all listeners\n  const listeners: any[] = [];\n\n  // lazy listeners registration\n  const _registerHide: Function[] = [];\n  const registerHide = () => {\n    // add hide listeners to unregister array\n    _registerHide.forEach((fn: Function) => listeners.push(fn()));\n    // register hide events only once\n    _registerHide.length = 0;\n  };\n\n  // register open\\close\\toggle listeners\n  parsedTriggers.forEach((trigger: Trigger) => {\n    const useToggle = trigger.open === trigger.close;\n    const showFn = useToggle ? options.toggle : options.show;\n\n    if (!useToggle) {\n      _registerHide.push(() =>\n        renderer.listen(target, trigger.close, options.hide)\n      );\n    }\n\n    listeners.push(\n      renderer.listen(target, trigger.open, () => showFn(registerHide))\n    );\n  });\n\n  return () => {\n    listeners.forEach((unsubscribeFn: Function) => unsubscribeFn());\n  };\n}\n\nexport function registerOutsideClick(renderer: Renderer2,\n                                     options: ListenOptions) {\n  if (!options.outsideClick) {\n    return Function.prototype;\n  }\n\n  return renderer.listen('document', 'click', (event: any) => {\n    if (options.target && options.target.contains(event.target)) {\n      return;\n    }\n    if (\n      options.targets &&\n      options.targets.some(target => target.contains(event.target))\n    ) {\n      return;\n    }\n\n    options.hide();\n  });\n}\n","import { Injectable, ElementRef } from '@angular/core';\nimport { positionElements } from './ng-positioning';\n\nexport interface PositioningOptions {\n  /** The DOM element, ElementRef, or a selector string of an element which will be moved */\n  element?: HTMLElement | ElementRef | string;\n\n  /** The DOM element, ElementRef, or a selector string of an element which the element will be attached to  */\n  target?: HTMLElement | ElementRef | string;\n\n  /**\n   * A string of the form 'vert-attachment horiz-attachment' or 'placement'\n   * - placement can be \"top\", \"bottom\", \"left\", \"right\"\n   * not yet supported:\n   * - vert-attachment can be any of 'top', 'middle', 'bottom'\n   * - horiz-attachment can be any of 'left', 'center', 'right'\n   */\n  attachment?: string;\n\n  /** A string similar to `attachment`. The one difference is that, if it's not provided,\n   * `targetAttachment` will assume the mirror image of `attachment`.\n   */\n  targetAttachment?: string;\n\n  /** A string of the form 'vert-offset horiz-offset'\n   * - vert-offset and horiz-offset can be of the form \"20px\" or \"55%\"\n   */\n  offset?: string;\n\n  /** A string similar to `offset`, but referring to the offset of the target */\n  targetOffset?: string;\n\n  /** If true component will be attached to body */\n  appendToBody?: boolean;\n}\n\n\nexport class PositioningService {\n  position(options: PositioningOptions): void {\n    const {element, target, attachment, appendToBody} = options;\n    positionElements(\n      _getHtmlElement(target),\n      _getHtmlElement(element),\n      attachment,\n      appendToBody\n    );\n  }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction _getHtmlElement(element: HTMLElement | ElementRef | string): HTMLElement {\n  // it means that we got a selector\n  if (typeof element === 'string') {\n    return document.querySelector(element) as HTMLElement;\n  }\n\n  if (element instanceof ElementRef) {\n    return element.nativeElement;\n  }\n\n  return element as HTMLElement;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { isDevMode } from '@angular/core';\nconst _messagesHash: { [key: string]: boolean } = {};\nconst _hideMsg = typeof console === 'undefined' || !('warn' in console);\n\nexport function warnOnce(msg: string): void {\n  if (!isDevMode() || _hideMsg || msg in _messagesHash) {\n    return;\n  }\n\n  _messagesHash[msg] = true;\n  /*tslint:disable-next-line*/\n  console.warn(msg);\n}\n","import { latinMap } from './latin-map';\n\nexport function latinize(str: string): string {\n  if (!str) {\n    return '';\n  }\n\n  return str.replace(/[^A-Za-z0-9\\[\\] ]/g, function (a: string): string {\n    return latinMap[a] || a;\n  });\n}\n\nexport function escapeRegexp(queryToEscape: string): string {\n  // Regex: capture the whole query string and replace it with the string\n  // that will be used to match the results, for example if the capture is\n  // 'a' the result will be \\a\n  return queryToEscape.replace(/([.?*+^$[\\]\\\\(){}|-])/g, '\\\\$1');\n}\n\n/* tslint:disable */\nexport function tokenize(str: string,\n                         wordRegexDelimiters = ' ',\n                         phraseRegexDelimiters = ''): Array<string> {\n  /* tslint:enable */\n  const regexStr = `(?:[${phraseRegexDelimiters}])([^${phraseRegexDelimiters}]+)` +\n    `(?:[${phraseRegexDelimiters}])|([^${wordRegexDelimiters}]+)`;\n  const preTokenized: string[] = str.split(new RegExp(regexStr, 'g'));\n  const result: string[] = [];\n  const preTokenizedLength: number = preTokenized.length;\n  let token: string;\n  const replacePhraseDelimiters = new RegExp(`[${phraseRegexDelimiters}]+`, 'g');\n\n  for (let i = 0; i < preTokenizedLength; i += 1) {\n    token = preTokenized[i];\n    if (token && token.length && token !== wordRegexDelimiters) {\n      result.push(token.replace(replacePhraseDelimiters, ''));\n    }\n  }\n\n  return result;\n}\n\nexport function getValueFromObject(object: any, option: string): string {\n  if (!option || typeof object !== 'object') {\n    return object.toString();\n  }\n\n  if (option.endsWith('()')) {\n    const functionName = option.slice(0, option.length - 2);\n\n    return object[functionName]().toString();\n  }\n\n  const properties: string = option\n    .replace(/\\[(\\w+)\\]/g, '.$1')\n    .replace(/^\\./, '');\n  const propertiesArray: string[] = properties.split('.');\n\n  for (const property of propertiesArray) {\n    if (property in object) {\n      // tslint:disable-next-line\n      object = object[property];\n    }\n  }\n  if (!object) {return ''; }\n\n  return object.toString();\n}\n","import { Component, Input } from '@angular/core';\nexport class BreadcrumbsComponent {\n\n     crumbs: Breadcrumb[];\n/**\n * @param {?} event\n * @param {?} crumb\n * @return {?}\n */\nclickCrumb(event: MouseEvent, crumb: Breadcrumb) {\n        if (crumb.onClick) {\n            crumb.onClick.call(null, event);\n        }\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-breadcrumbs',\n    template: `\n      <ol class=\"breadcrumb\">\n          <li *ngFor=\"let crumb of crumbs\">\n\n              <!-- If there is a router link then use a tag -->\n              <a *ngIf=\"crumb.routerLink\"\n                 [routerLink]=\"crumb.routerLink\" \n                 [fragment]=\"crumb.fragment\" \n                 [queryParams]=\"crumb.queryParams\" \n                 (click)=\"clickCrumb($event, crumb)\">\n                      {{ crumb.title }}\n              </a>\n\n              <!-- If there is not router link then display text in a span -->\n              <span *ngIf=\"!crumb.routerLink\">{{ crumb.title }}</span>\n          </li>\n      </ol>\n    `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'crumbs': [{ type: Input },],\n};\n}\n\nfunction BreadcrumbsComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nBreadcrumbsComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nBreadcrumbsComponent.ctorParameters;\n/** @type {?} */\nBreadcrumbsComponent.propDecorators;\n/** @type {?} */\nBreadcrumbsComponent.prototype.crumbs;\n}\n\n\nexport interface Breadcrumb {\n    title: string;\n    routerLink?: string;\n    fragment?: string;\n    queryParams?: any;\n    onClick?: (event: MouseEvent) => void;\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\n\nimport { BreadcrumbsComponent } from './breadcrumbs.component';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nexport class BreadcrumbsModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        CommonModule, \n        RouterModule\n    ],\n    exports: [BreadcrumbsComponent],\n    declarations: [BreadcrumbsComponent]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction BreadcrumbsModule_tsickle_Closure_declarations() {\n/** @type {?} */\nBreadcrumbsModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nBreadcrumbsModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Input, forwardRef, Output, EventEmitter } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\n\nexport const /** @type {?} */ CHECKBOX_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => CheckboxComponent),\n    multi: true\n};\nexport class CheckboxComponent implements ControlValueAccessor {\n\n     name: string = '';\n     clickable: boolean = true;\n     disabled: boolean = false;\n     simplified: boolean = false;\n     indeterminateValue: any = -1;\n     valueChange: EventEmitter<any> = new EventEmitter<any>();\n/**\n * @return {?}\n */\nget value() {\n        return this._value;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset value(value: any) {\n        this._value = value;\n\n        // invoke change event\n        this.valueChange.emit(this._value);\n\n        // call callback\n        this.onChangeCallback(this._value);\n    }\nprivate _value: any = false;\n\n    onTouchedCallback: () => void = () => { };\n    onChangeCallback: (_: any) => void = () => { };\nconstructor() { }\n/**\n * @return {?}\n */\ntoggleChecked() {\n\n        if (this.disabled === true || this.clickable === false) {\n            return;\n        }\n\n        if (this.value === this.indeterminateValue) {\n            this.value = true;\n            return;\n        }\n\n        // toggle the checked state\n        this.value = !this.value;\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nkeyDown(event: KeyboardEvent) {\n        // then toggle the checkbox\n        this.toggleChecked();\n\n        // prevent default browser behavior\n        event.stopPropagation();\n        event.preventDefault();\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nwriteValue(value: boolean) {\n        if (value !== this._value) {\n            this._value = value;\n        }\n    }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnChange(fn: any) {\n        this.onChangeCallback = fn;\n    }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnTouched(fn: any) {\n        this.onTouchedCallback = fn;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-checkbox',\n    template: `\n      <div class=\"ux-checkbox\" tabindex=\"0\"\n          [class.ux-checked]=\"value == true\"\n          [class.ux-indeterminate]=\"value == indeterminateValue\"\n          [class.ux-simplified]=\"simplified == true\"\n          [class.ux-disabled]=\"disabled == true\"\n          (keydown.space)=\"keyDown($event)\">\n\n          <input type=\"checkbox\" role=\"checkbox\" tabindex=\"-1\"\n              [name]=\"name\" \n              [checked]=\"value\" \n              [disabled]=\"disabled\" />\n        \n      </div>\n\n      <div class=\"ux-checkbox-content\">\n          <ng-content></ng-content>\n      </div>\n    `,\n    providers: [CHECKBOX_VALUE_ACCESSOR],\n    host: {\n        '(click)': 'toggleChecked()'\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'name': [{ type: Input },],\n'clickable': [{ type: Input },],\n'disabled': [{ type: Input },],\n'simplified': [{ type: Input },],\n'indeterminateValue': [{ type: Input },],\n'valueChange': [{ type: Output },],\n'value': [{ type: Input },],\n};\n}\n\nfunction CheckboxComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nCheckboxComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nCheckboxComponent.ctorParameters;\n/** @type {?} */\nCheckboxComponent.propDecorators;\n/** @type {?} */\nCheckboxComponent.prototype.name;\n/** @type {?} */\nCheckboxComponent.prototype.clickable;\n/** @type {?} */\nCheckboxComponent.prototype.disabled;\n/** @type {?} */\nCheckboxComponent.prototype.simplified;\n/** @type {?} */\nCheckboxComponent.prototype.indeterminateValue;\n/** @type {?} */\nCheckboxComponent.prototype.valueChange;\n/** @type {?} */\nCheckboxComponent.prototype._value;\n/** @type {?} */\nCheckboxComponent.prototype.onTouchedCallback;\n/** @type {?} */\nCheckboxComponent.prototype.onChangeCallback;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport {FormsModule} from '@angular/forms';\n\nimport { CheckboxComponent } from './checkbox.component';\nexport class CheckboxModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [FormsModule],\n    exports: [CheckboxComponent],\n    declarations: [CheckboxComponent]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction CheckboxModule_tsickle_Closure_declarations() {\n/** @type {?} */\nCheckboxModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nCheckboxModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { ColumnSortingDirective, ColumnSortingOrder } from './column-sorting.directive';\nimport { Component, Input, Output, EventEmitter } from '@angular/core';\nexport class ColumnSortingComponent {\n\n     state: ColumnSortingState;\n     key: string;\n     orderNumber: number;\n     stateChange: EventEmitter<ColumnSortingState> = new EventEmitter<ColumnSortingState>();\nprivate _parent: ColumnSortingDirective;\n    columnSortingState = ColumnSortingState;\n/**\n * @param {?} parent\n * @return {?}\n */\ninitParent(parent: ColumnSortingDirective) {\n        this._parent = parent;\n\n        // watch for any events\n        this._parent.events.subscribe(event => {\n\n            let /** @type {?} */ idx = event.findIndex(column => column.key === this.key);\n\n            if (idx == -1) {\n                this.state = ColumnSortingState.NoSort;\n            }\n\n            // only store the number if we have 2 or more columns being sorted\n            if (event.length > 1) {\n                this.orderNumber = idx === -1 ? null : idx + 1;\n            } else {\n                this.orderNumber = null;\n            }\n\n            this.stateChange.emit(this.state);\n\n        });\n    }\n/**\n * @return {?}\n */\nchangeState(): ColumnSortingOrder[] {\n\n        if (this.state === ColumnSortingState.Ascending) {\n            this.state = ColumnSortingState.Descending;\n        } else if (this.state === ColumnSortingState.Descending) {\n            this.state = ColumnSortingState.NoSort;\n        } else {\n            this.state = ColumnSortingState.Ascending;\n        }\n\n        // inform parent\n        return this._parent.toggleColumn(this.key, this.state);\n\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-column-sorting',\n    template: `\n      <div class=\"ux-column-sorting\">\n          <i class=\"ux-column-sorting-icon hpe-icon\" \n              [class.hpe-ascend]=\"state === columnSortingState.Ascending\" \n              [class.hpe-descend]=\"state === columnSortingState.Descending\" \n              [class.column-sorting-icon-hidden]=\"state === columnSortingState.NoSort\"></i>\n          <p class=\"ux-column-sorting-number\">{{ orderNumber }}</p>\n      </div>\n    `,\n    exportAs: 'ux-column-sorting'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'state': [{ type: Input },],\n'key': [{ type: Input },],\n'orderNumber': [{ type: Input },],\n'stateChange': [{ type: Output },],\n};\n}\n\nfunction ColumnSortingComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nColumnSortingComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nColumnSortingComponent.ctorParameters;\n/** @type {?} */\nColumnSortingComponent.propDecorators;\n/** @type {?} */\nColumnSortingComponent.prototype.state;\n/** @type {?} */\nColumnSortingComponent.prototype.key;\n/** @type {?} */\nColumnSortingComponent.prototype.orderNumber;\n/** @type {?} */\nColumnSortingComponent.prototype.stateChange;\n/** @type {?} */\nColumnSortingComponent.prototype._parent;\n/** @type {?} */\nColumnSortingComponent.prototype.columnSortingState;\n}\n\nexport type ColumnSortingState = number;\nexport let ColumnSortingState: any = {};\nColumnSortingState.Ascending = 0;\nColumnSortingState.Descending = 1;\nColumnSortingState.NoSort = 2;\nColumnSortingState[ColumnSortingState.Ascending] = \"Ascending\";\nColumnSortingState[ColumnSortingState.Descending] = \"Descending\";\nColumnSortingState[ColumnSortingState.NoSort] = \"NoSort\";\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { ColumnSortingComponent, ColumnSortingState } from './column-sorting.component';\nimport { Directive, Host, QueryList, ContentChildren, Input } from '@angular/core';\nimport { Subject } from 'rxjs/Subject';\nexport class ColumnSortingDirective {\n\n     singleSort: boolean;\n     components: QueryList<ColumnSortingComponent>;\n\n    events: Subject<ColumnSortingOrder[]> = new Subject<ColumnSortingOrder[]>();\n    order: ColumnSortingOrder[] = [];\n/**\n * @return {?}\n */\nngAfterViewInit() {\n        this.components.forEach(component => component.initParent(this));\n    }\n/**\n * @param {?} key\n * @param {?} state\n * @return {?}\n */\ntoggleColumn(key: string, state: ColumnSortingState) {\n\n        if (this.singleSort) {\n            if (state === ColumnSortingState.NoSort) {\n                this.order = [];\n            } else {\n                this.order = [{key: key, state: state}];\n            }\n        } else {\n            // reorder columns here\n            let /** @type {?} */ idx = this.order.findIndex(column => column.key === key);\n\n            // if wasnt previously selected add to list\n            if (idx === -1) {\n                this.order.push({ key: key, state: state});\n            } else if (state === ColumnSortingState.Ascending || state === ColumnSortingState.Descending) {\n                this.order.splice(idx, 1);\n                this.order.push({ key: key, state: state});\n            } else {\n                this.order.splice(idx, 1);\n            }\n        }\n\n            this.events.next(this.order);\n            // return the order\n            return this.order;\n\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: '[uxColumnSorting]'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'singleSort': [{ type: Input },],\n'components': [{ type: ContentChildren, args: [ColumnSortingComponent, ] },],\n};\n}\n\nfunction ColumnSortingDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nColumnSortingDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nColumnSortingDirective.ctorParameters;\n/** @type {?} */\nColumnSortingDirective.propDecorators;\n/** @type {?} */\nColumnSortingDirective.prototype.singleSort;\n/** @type {?} */\nColumnSortingDirective.prototype.components;\n/** @type {?} */\nColumnSortingDirective.prototype.events;\n/** @type {?} */\nColumnSortingDirective.prototype.order;\n}\n\n\nexport interface ColumnSortingOrder {\n    key: string;\n    state: ColumnSortingState; \n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\n\nimport { ColumnSortingComponent } from './column-sorting.component';\n\nimport { ColumnSortingDirective } from './column-sorting.directive';\nexport class ColumnSortingModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    exports: [ColumnSortingComponent, ColumnSortingDirective],\n    declarations: [ColumnSortingComponent, ColumnSortingDirective]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ColumnSortingModule_tsickle_Closure_declarations() {\n/** @type {?} */\nColumnSortingModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nColumnSortingModule.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable } from '@angular/core';\nimport { DashboardWidgetComponent } from './widget/dashboard-widget.component';\nimport { DashboardOptions } from './dashboard.component';\nimport { Subject } from 'rxjs/Subject';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nexport class DashboardService {\nprivate _dashboard: HTMLElement;\nprivate _widgets: DashboardWidgetComponent[] = [];\nprivate _options: DashboardOptions;\nprivate _options$: Subject<DashboardOptions> = new Subject<DashboardOptions>();\nprivate _placeholder: DashboardPlaceholder = { visible: false, x: 0, y: 0, width: 0, height: 0 };\nprivate _widgetOrigin: { column?: number, row?: number, columnSpan?: number, rowSpan?: number };\nprivate _dimensions: DashboardDimensions = {};\nprivate _actionWidget: DashboardAction;\nprivate _columnWidth: number = 0;\nprivate _rowHeight: number = 0;\nprivate _stacked: boolean = false;\nprivate _cache: DashboardCache[];\nprivate _mouseEvent: MouseEvent;\nprivate _defaultOptions: DashboardOptions = {\n        columns: 5,\n        padding: 5,\n        minWidth: 100,\n        minHeight: 100,\n        emptyRow: true\n    };\n\n    height: BehaviorSubject<number> = new BehaviorSubject<number>(0);\n    layout: Subject<DashboardLayoutData[]> = new Subject<DashboardLayoutData[]>();\n/**\n * Return all the options currently being used as a subject\n * @return {?}\n */\noptions(): Subject<DashboardOptions> {\n        return this._options$;\n    }\n/**\n * Return all the options currently being used\n * @return {?}\n */\ngetOptions(): DashboardOptions {\n        return this._options;\n    }\n/**\n * Get all the default dashboard options\n * @return {?}\n */\ngetDefaultOptions(): DashboardOptions {\n        return this._defaultOptions;\n    }\n/**\n * Set the options - automatically set default values where not specified\n * @param {?} options The DashboardOptions that will configure the dashboard\n * @return {?}\n */\nsetOptions(options: DashboardOptions): void {\n        this._options = Object.assign({}, this._defaultOptions, options);\n\n        // update the observable\n        this._options$.next(this._options);\n    }\n/**\n * Allow uniform spacing around each widget\n * @param {?} padding The number of pixels around each widget\n * @return {?}\n */\nsetPadding(padding: number) {\n        this._options.padding = padding;\n        this.options().next(this._options);\n    }\n/**\n * Set the dashboard container element\n * @param {?} dashboard The HTMLElement that is the dashboard container\n * @return {?}\n */\nsetDashboard(dashboard: HTMLElement): void {\n        this._dashboard = dashboard;\n    }\n/**\n * Add a widget to the dashboard\n * @param {?} widget The widget component to add to the dashboard\n * @return {?}\n */\naddWidget(widget: DashboardWidgetComponent): void {\n        this._widgets.push(widget);\n        \n        // re-render the dashboard\n        this.renderDashboard();\n    }\n/**\n * Remove a widget from the dashboard\n * @param {?} widget The widget to remove\n * @return {?}\n */\nremoveWidget(widget: DashboardWidgetComponent): void {\n\n        // remove a widget from the dashboard\n        this._widgets = this._widgets.filter(wgt => wgt !== widget);\n        \n        // re-render the dashboard\n        this.renderDashboard();\n    }\n/**\n * Indicate that the dashboard element has been resized\n * @param {?} width The width of the dashboard element in px\n * @param {?} height The height of the dashboard element in px\n * @return {?}\n */\nsetDimensions(width: number, height: number): void {\n        this._dimensions.width = width;\n        this._dimensions.height = height;\n\n        // trigger re-render\n        this.renderDashboard();\n    }\n/**\n * Produce an object containing all the required layout data.\n * This can be useful for exporting/saving a layout\n * @return {?}\n */\ngetLayoutData(): DashboardLayoutData[] {\n        return this._widgets.map(widget => {\n            return { id: widget.getId(), col: widget.getColumn(), row: widget.getRow(), colSpan: widget.getColumnSpan(), rowSpan: widget.getRowSpan() };\n        });\n    }\n/**\n * Position widgets programatically\n * @param {?} layout\n * @return {?}\n */\nsetLayoutData(layout: DashboardLayoutData[]): void {\n        // iterate through each widget data and find a match\n        layout.forEach(widget => {\n\n            // find the matching widget\n            let /** @type {?} */ target = this._widgets.find(wgt => wgt.getId() === widget.id);\n\n            if (target) {\n                target.setColumn(widget.col);\n                target.setRow(widget.row);\n                target.setColumnSpan(widget.colSpan);\n                target.setRowSpan(widget.rowSpan);\n            }\n        });\n    }\n/**\n * Update the positions and sizes of the widgets\n * @return {?}\n */\nrenderDashboard(): void {\n\n        // do nothing if chart options haven't yet been initialised\n        if (!this._options) {\n            return;\n        }\n\n        // get the dimensions of the dashboard\n        this._columnWidth = this._dimensions.width / this._options.columns;\n        this._rowHeight = this._options.rowHeight || this._columnWidth;\n\n        // ensure the column width is not below the min widths\n        if (this._columnWidth < this._options.minWidth) {\n            this.setStacked(true);\n        } else {\n            this.setStacked(false);\n        }\n\n        // ensure the row height is not below the min widths\n        if (this._rowHeight < this._options.minWidth) {\n            this._rowHeight = this._options.minWidth;\n        }\n\n        this.setDashboardLayout();\n\n        // iterate through each widget and set the size - except the one being resized\n        this._widgets.filter(widget => !this._actionWidget || widget !== this._actionWidget.widget)\n            .forEach(widget => widget.render());\n    }\n/**\n * Determine where widgets should be positioned based on their positions, width and the size of the container\n * @return {?}\n */\nsetDashboardLayout(): void {\n\n        // find any widgets that do not currently have a position set\n        this._widgets.filter(widget => widget.getColumn() === undefined || widget.getRow() === undefined)\n            .forEach(widget => this.setWidgetPosition(widget));\n\n        this.setDashboardHeight();\n    }\n/**\n * @param {?} stacked\n * @return {?}\n */\nsetStacked(stacked: boolean): void {\n\n        // only do the following if the stacked state has changed\n        if (stacked === this._stacked) {\n            return;\n        }\n\n        // store the stacked state\n        this._stacked = stacked;\n\n        // update the stacked state for all widgets\n        this._widgets.forEach(widget => widget.setStacked(this._stacked));\n\n        // if stacked is true we need to do some reordering etc..\n        if (stacked === true) {\n\n            // iterate through each widget set it's stacked state and\n            this.getWidgetsByOrder().forEach((widget, idx) => {\n                widget.setStacked(true);\n                widget.setColumn(0);\n                widget.setRow(idx);\n            });\n        }\n\n    }\n/**\n * @return {?}\n */\ngetWidgetsByOrder(): DashboardWidgetComponent[] {\n        return this._widgets.sort((w1, w2) => {\n\n            let /** @type {?} */ w1Position = w1.getColumn() * w1.getRow();\n            let /** @type {?} */ w2Position = w2.getColumn() * w2.getRow();\n\n            if (w1Position < w2Position) {\n                return -1;\n            }\n\n            if (w1Position > w2Position) {\n                return 1;\n            }\n\n            return 0;\n        });\n    }\n/**\n * Find a position that a widget can fit in the dashboard\n * @param {?} widget The widget to try and position\n * @return {?}\n */\nsetWidgetPosition(widget: DashboardWidgetComponent): void {\n\n        // find a position for the widget\n        let /** @type {?} */ position = 0;\n        let /** @type {?} */ success = false;\n\n        // repeat until a space is found\n        while (!success) {\n\n            // get a position to try\n            let /** @type {?} */ column = position % this._options.columns;\n            let /** @type {?} */ row = Math.floor(position / this._options.columns);\n\n            // check the current position\n            if (this.getPositionAvailable(column, row, widget.getColumnSpan(), widget.getRowSpan())) {\n                success = true;\n                widget.setColumn(column);\n                widget.setRow(row);\n                return;\n            }\n\n            position++;\n        }\n    }\n/**\n * Check if a position in the dashboard is vacant or not\n * @param {?} column\n * @param {?} row\n * @param {?} columnSpan\n * @param {?} rowSpan\n * @param {?=} ignoreWidget\n * @return {?}\n */\ngetPositionAvailable(column: number, row: number, columnSpan: number, rowSpan: number, ignoreWidget?: DashboardWidgetComponent): boolean {\n\n        // get a list of grid spaces that are populated\n        let /** @type {?} */ spaces = this.getOccupiedSpaces();\n\n        // check if the block would still be in bounds\n        if (column + columnSpan > this._options.columns) {\n            return false;\n        }\n\n        // check each required position\n        for (let /** @type {?} */ x = column; x < column + columnSpan; x++) {\n            for (let /** @type {?} */ y = row; y < row + rowSpan; y++) {\n                if (spaces.find(block => block.column === x && block.row === y && block.widget !== ignoreWidget)) {\n                    return false;\n                }\n            }\n        }\n\n        return true;\n    }\n/**\n * @return {?}\n */\ngetOccupiedSpaces(): DashboardSpace[] {\n\n        // find all spaces that are currently occupied\n        return this._widgets.filter(widget => widget.getColumn() !== undefined && widget.getRow() !== undefined)\n            .reduce((value, widget) => {\n\n                this.forEachBlock(widget, (column, row) => value.push({ widget: widget, column: column, row: row }));\n\n                return value;\n            }, []);\n    }\n/**\n * Begin resizing a widget\n * @param {?} action The the widget to resize\n * @return {?}\n */\nonResizeStart(action: DashboardAction): void {\n\n        // store the mouse event\n        this._mouseEvent = action.event;\n        this._actionWidget = action;\n\n        // bring the widget to the font\n        this.bringToFront(action.widget);\n    }\n/**\n * @param {?} action\n * @return {?}\n */\nonResizeDrag(action: DashboardAction): void {\n\n        // if there was no movement then do nothing\n        if (action.event.x === this._mouseEvent.x && action.event.y === this._mouseEvent.y) {\n            return;\n        }\n\n        // update the stored mouse event\n        this._mouseEvent = action.event;\n\n        // get handle for direction\n        let /** @type {?} */ handle = action.widget.getHandles().find(hnd => hnd.direction === action.direction);\n\n        // get the bounds of the handle\n        let /** @type {?} */ bounds = handle.element.getBoundingClientRect();\n\n        // get the center of the handle\n        let /** @type {?} */ centerX = bounds.left + (bounds.width / 2);\n        let /** @type {?} */ centerY = bounds.top + (bounds.height / 2);\n\n        // get the current mouse position\n        let /** @type {?} */ mouseX = action.event.x - centerX;\n        let /** @type {?} */ mouseY = action.event.y - centerY;\n\n        // store the new proposed dimensions for the widget\n        let /** @type {?} */ dimensions: DashboardWidgetDimensions = {\n            x: action.widget.actualX,\n            y: action.widget.actualY,\n            width: action.widget.actualWidth,\n            height: action.widget.actualHeight\n        };\n\n        // update widget based on the handle being dragged\n        switch (action.direction) {\n\n            case ActionDirection.Right:\n                dimensions.width += mouseX;\n                break;\n\n            case ActionDirection.Left:\n                dimensions.x += mouseX;\n                dimensions.width -= mouseX;\n\n                if (dimensions.width < this._options.minWidth) {\n                    let /** @type {?} */ difference = this._options.minWidth - dimensions.width;\n                    dimensions.x -= difference;\n                    dimensions.width += difference;\n                }\n\n                break;\n\n            case ActionDirection.Bottom:\n                dimensions.height += mouseY;\n                break;\n\n            case ActionDirection.Top:\n                dimensions.y += mouseY;\n                dimensions.height -= mouseY;\n\n                if (dimensions.height < this._options.minHeight) {\n                    let /** @type {?} */ difference = this._options.minHeight - dimensions.height;\n                    dimensions.y -= difference;\n                    dimensions.height += difference;\n                }\n                break;\n\n            // Support resizing on multiple axis simultaneously\n            case ActionDirection.TopLeft:\n\n                dimensions.x += mouseX;\n                dimensions.width -= mouseX;\n\n                if (dimensions.width < this._options.minWidth) {\n                    let /** @type {?} */ difference = this._options.minWidth - dimensions.width;\n                    dimensions.x -= difference;\n                    dimensions.width += difference;\n                }\n\n                dimensions.y += mouseY;\n                dimensions.height -= mouseY;\n\n                if (dimensions.height < this._options.minHeight) {\n                    let /** @type {?} */ difference = this._options.minHeight - dimensions.height;\n                    dimensions.y -= difference;\n                    dimensions.height += difference;\n                }\n                break;\n\n            case ActionDirection.TopRight:\n                dimensions.width += mouseX;\n                dimensions.y += mouseY;\n                dimensions.height -= mouseY;\n\n                if (dimensions.height < this._options.minHeight) {\n                    let /** @type {?} */ difference = this._options.minHeight - dimensions.height;\n                    dimensions.y -= difference;\n                    dimensions.height += difference;\n                }\n                break;\n\n            case ActionDirection.BottomLeft:\n                dimensions.height += mouseY;\n                dimensions.x += mouseX;\n                dimensions.width -= mouseX;\n\n                if (dimensions.width < this._options.minWidth) {\n                    let /** @type {?} */ difference = this._options.minWidth - dimensions.width;\n                    dimensions.x -= difference;\n                    dimensions.width += difference;\n                }\n                break;\n\n            case ActionDirection.BottomRight:\n                dimensions.height += mouseY;\n                dimensions.width += mouseX;\n                break;\n        }\n\n        let /** @type {?} */ currentWidth = action.widget.actualX + action.widget.actualWidth;\n        let /** @type {?} */ currentHeight = action.widget.actualY + action.widget.actualHeight;\n\n        // ensure values are within the dashboard bounds\n        if (dimensions.x < 0) {\n            dimensions.x = 0;\n            dimensions.width = currentWidth;\n        }\n\n        if (dimensions.y < 0) {\n            dimensions.y = 0;\n            dimensions.height = currentHeight;\n        }\n\n        if ((dimensions.x + dimensions.width) > this._dimensions.width) {\n            dimensions.width = this._dimensions.width - dimensions.x;\n        }\n\n        if ((dimensions.y + dimensions.height) > this._dimensions.height) {\n            dimensions.height = currentHeight;\n        }\n\n        // if the proposed width is smaller than allowed then reset width to minimum and ignore x changes\n        if (dimensions.width < this._options.minWidth) {\n            dimensions.x = action.widget.actualX;\n            dimensions.width = this._options.minWidth;\n        }\n\n        // if the proposed height is smaller than allowed then reset height to minimum and ignore y changes\n        if (dimensions.height < this._options.minHeight) {\n            dimensions.y = action.widget.actualY;\n            dimensions.height = this._options.minHeight;\n        }\n\n        // update the widget actual values\n        action.widget.setBounds(dimensions.x, dimensions.y, dimensions.width, dimensions.height);\n\n        // update placeholder position and value\n        this.setPlaceholderBounds(true, dimensions.x, dimensions.y, dimensions.width, dimensions.height);\n\n        // show the widget positions if the current positions and sizes were to persist\n        this.updateWidgetPositions(action.widget);\n    }\n/**\n * @return {?}\n */\nonResizeEnd(): void {\n\n        // commit resize changes\n        this.commitWidgetChanges();\n\n        // hide placeholder\n        this.getPlaceholder().visible = false;\n\n        this._actionWidget = null;\n        this._mouseEvent = null;\n\n        // ensure any vacant upper spaces are filled where required\n        this.shiftWidgetsUp();\n\n        // update dashboard height\n        this.setDashboardHeight();\n\n        // emit information about the layout\n        this.layout.next(this.getLayoutData());\n    }\n/**\n * @param {?} action\n * @return {?}\n */\nonDragStart(action: DashboardAction): void {\n        this.onResizeStart(action);\n\n        // store the starting placeholder position\n        this.setWidgetOrigin();\n\n        this.cacheWidgets();\n    }\n/**\n * @return {?}\n */\nonDragEnd(): void {\n        this.onResizeEnd();\n\n        this._widgetOrigin = {};\n    }\n/**\n * @param {?} action\n * @return {?}\n */\nonDrag(action: DashboardAction): void {\n\n        // if there was no movement then do nothing\n        if (action.event.pageX === this._mouseEvent.pageX && action.event.pageY === this._mouseEvent.pageY) {\n            return;\n        }\n\n        // get the current mouse position\n        let /** @type {?} */ mouseX = action.event.pageX - this._mouseEvent.pageX;\n        let /** @type {?} */ mouseY = action.event.pageY - this._mouseEvent.pageY;\n\n        // store the latest event\n        this._mouseEvent = action.event;\n\n        let /** @type {?} */ dimensions: DashboardWidgetDimensions = {\n            x: action.widget.actualX + mouseX,\n            y: action.widget.actualY + mouseY,\n            width: action.widget.actualWidth,\n            height: action.widget.actualHeight\n        };\n\n        this.restoreWidgets(true);\n\n        // update widget position\n        action.widget.setBounds(dimensions.x, dimensions.y, dimensions.width, dimensions.height);\n\n        // update placeholder position and value\n        this.setPlaceholderBounds(true, dimensions.x, dimensions.y, dimensions.width, dimensions.height);\n\n        // show the widget positions if the current positions and sizes were to persist\n        this.shiftWidgets();\n\n        this.setDashboardHeight();\n    }\n/**\n * @return {?}\n */\ncacheWidgets(): void {\n        this._cache = this._widgets.map(widget => {\n            return {\n                id: widget.getId(),\n                column: widget.getColumn(),\n                row: widget.getRow()\n            };\n        });\n    }\n/**\n * @param {?=} ignoreActionWidget\n * @return {?}\n */\nrestoreWidgets(ignoreActionWidget: boolean = false): void {\n        this._cache.filter(widget => !ignoreActionWidget || widget.id !== this._actionWidget.widget.getId()).forEach(widget => {\n            let /** @type {?} */ match = this._widgets.find(wgt => wgt.getId() === widget.id);\n\n            if (match) {\n                match.setColumn(widget.column);\n                match.setRow(widget.row);\n            }\n        });\n    }\n/**\n * When dragging any widgets that need to be moved should be moved to an appropriate position\n * @return {?}\n */\nshiftWidgets(): void {\n\n        let /** @type {?} */ widgetsToMove: DashboardWidgetComponent[] = [];\n\n        // check if there are any widgets under the placeholder\n        for (let /** @type {?} */ row = this.getPlaceholder().row; row < this.getPlaceholder().row + this.getPlaceholder().rowSpan; row++) {\n            for (let /** @type {?} */ column = this.getPlaceholder().column; column < this.getPlaceholder().column + this.getPlaceholder().columnSpan; column++) {\n\n                // store reference to any widgets that need moved\n                this.getOccupiedSpaces()\n                    .filter(space => space.column === column && space.row === row && space.widget !== this._actionWidget.widget)\n                    .forEach(space => widgetsToMove.push(space.widget));\n            }\n        }\n\n        // remove any duplicates\n        widgetsToMove = widgetsToMove.filter((widget, idx, array) => array.indexOf(widget) === idx);\n\n        // if no widgets need moved then we can stop here\n        if (widgetsToMove.length === 0) {\n            return;\n        }\n\n        // create a duplicate we can use to keep track of which have been moved\n        let /** @type {?} */ unmovedWidgets = widgetsToMove.slice();\n\n        // attempt to move any widgets to the previous widget position\n        widgetsToMove.forEach(widget => {\n\n            // get a grid off all occupied spaces - taking into account the placeholder and ignoring widgets that need moved\n            let /** @type {?} */ grid = this.getOccupiedSpaces().filter(space => !unmovedWidgets.find(wgt => wgt === space.widget));\n\n            // iterate each free block\n            for (let /** @type {?} */ row = this._widgetOrigin.row; row < this._widgetOrigin.row + this._widgetOrigin.rowSpan; row++) {\n                for (let /** @type {?} */ column = this._widgetOrigin.column; column < this._widgetOrigin.column + this._widgetOrigin.columnSpan; column++) {\n\n                    // determine if the block can fit in this space\n                    let /** @type {?} */ requiredSpaces = this.getRequiredSpacesFromPoint(widget, column, row);\n\n                    // check if widget would fit in space\n                    let /** @type {?} */ available = requiredSpaces.every(space => {\n                        return !grid.find(gridSpace => gridSpace.column === space.column && gridSpace.row === space.row) && space.column < this.getColumnCount();\n                    });\n\n                    if (available) {\n                        widget.setColumn(column);\n                        widget.setRow(row);\n                        unmovedWidgets.splice(unmovedWidgets.findIndex(wgt => wgt === widget), 1);\n                        return;\n                    }\n                }\n            }\n\n            // if we get to here then we can't simply swap the positions - next try moving right\n            if (this.canWidgetMoveRight(widget, true)) {\n\n                // after the shift check if placeholder position is still valid\n                this.validatePlaceholderPosition(ActionDirection.Right);\n                return;\n            }\n\n            // next try moving left\n            if (this.canWidgetMoveLeft(widget, true)) {\n\n                // after the shift check if placeholder position is still valid\n                this.validatePlaceholderPosition(ActionDirection.Left);\n                return;\n            }\n\n            // determine the distance that the widget needs to be moved down\n            let /** @type {?} */ distance = (this._actionWidget.widget.getRow() - widget.getRow()) + this._actionWidget.widget.getRowSpan();\n\n            // as a last resort move the widget downwards\n            this.moveWidgetDown(widget, distance);\n        });\n    }\n/**\n * After shifts have taken place we should verify the place holder position is still valid\n * @param {?} shiftDirection - the position widgets were shifted\n * @return {?}\n */\nvalidatePlaceholderPosition(shiftDirection: ActionDirection) {\n\n        // check if the placeholder is over a widget\n        if (this.getWidgetsAtPosition(this.getPlaceholder().column, this.getPlaceholder().row, true).length > 0) {\n\n            // move the placeholder the opposite direction\n            switch (shiftDirection) {\n\n                case ActionDirection.Left:\n                    this.setPlaceholderBounds(this.getPlaceholder().visible, this.getPlaceholder().x + this.getColumnWidth(), this.getPlaceholder().y, this.getPlaceholder().width, this.getPlaceholder().height);\n                    break;\n\n                case ActionDirection.Right:\n                    this.setPlaceholderBounds(this.getPlaceholder().visible, this.getPlaceholder().x - this.getColumnWidth(), this.getPlaceholder().y, this.getPlaceholder().width, this.getPlaceholder().height);\n                    break;\n            }\n\n            // validate this new position again\n            this.validatePlaceholderPosition(shiftDirection);\n        }\n    }\n/**\n * Determine if a widget can be moved left - or if it can move the widgets to the right to make space for the widget\n * @param {?} widget\n * @param {?=} performMove\n * @return {?}\n */\ncanWidgetMoveLeft(widget: DashboardWidgetComponent, performMove: boolean = false): boolean {\n\n        // check if the widget is the action widget or occupies the first column\n        if (widget === this._actionWidget.widget || widget.getColumn() === 0) {\n            return false;\n        }\n\n        // find the positions required\n        let /** @type {?} */ targetSpaces = this.getOccupiedSpaces().filter(space => space.widget === widget).map(space => {\n            return { column: space.column - widget.getColumnSpan(), row: space.row, widget: space.widget };\n        });\n\n        // check if there are widget in the required positions and if so, can they move right?\n        let /** @type {?} */ moveable = targetSpaces.every(space => this.getWidgetsAtPosition(space.column, space.row).filter(wgt => wgt !== space.widget).every(wgt => this.canWidgetMoveLeft(wgt)));\n\n        if (performMove && moveable) {\n\n            // move all widgets to the right\n            targetSpaces.forEach(space => this.getWidgetsAtPosition(space.column, space.row).filter(wgt => wgt !== space.widget).forEach(wgt => this.canWidgetMoveLeft(wgt, true)));\n\n            // move current widget to the right\n            widget.setColumn(widget.getColumn() - 1);\n        }\n\n        return moveable;\n    }\n/**\n * Determine if a widget can be moved right - or if it can move the widgets to the right to make space for the widget\n * @param {?} widget\n * @param {?=} performMove\n * @return {?}\n */\ncanWidgetMoveRight(widget: DashboardWidgetComponent, performMove: boolean = false): boolean {\n\n        // check if the widget is the dragging widget or the widget occupies the final column\n        if (widget === this._actionWidget.widget || widget.getColumn() + widget.getColumnSpan() === this._options.columns) {\n            return false;\n        }\n\n        // find the positions required\n        let /** @type {?} */ targetSpaces = this.getOccupiedSpaces().filter(space => space.widget === widget).map(space => {\n            return { column: space.column + widget.getColumnSpan(), row: space.row, widget: space.widget };\n        });\n\n        // check if there are widget in the required positions and if so, can they move right?\n        let /** @type {?} */ moveable = targetSpaces.every(space => this.getWidgetsAtPosition(space.column, space.row).filter(wgt => wgt !== space.widget).every(wgt => this.canWidgetMoveRight(wgt)));\n\n        if (performMove && moveable) {\n\n            // move all widgets to the right\n            targetSpaces.forEach(space => this.getWidgetsAtPosition(space.column, space.row).filter(wgt => wgt !== space.widget).forEach(wgt => this.canWidgetMoveRight(wgt, true)));\n\n            // move current widget to the right\n            widget.setColumn(widget.getColumn() + 1);\n        }\n\n        return moveable;\n    }\n/**\n * Store the initial position of the widget being dragged\n * @return {?}\n */\nsetWidgetOrigin(): void {\n        this._widgetOrigin = {\n            column: this._actionWidget.widget.getColumn(),\n            row: this._actionWidget.widget.getRow(),\n            columnSpan: this._actionWidget.widget.getColumnSpan(),\n            rowSpan: this._actionWidget.widget.getRowSpan()\n        };\n    }\n/**\n * Calculate all the required positions is a widget was to be positioned at a particular point\n * @param {?} widget\n * @param {?} column\n * @param {?} row\n * @return {?}\n */\ngetRequiredSpacesFromPoint(widget: DashboardWidgetComponent, column: number, row: number): DashboardSpace[] {\n        let /** @type {?} */ spaces: DashboardSpace[] = [];\n\n        for (let /** @type {?} */ y = row; y < row + widget.getRowSpan(); y++) {\n            for (let /** @type {?} */ x = column; x < column + widget.getColumnSpan(); x++) {\n                spaces.push({ column: x, row: y, widget: widget });\n            }\n        }\n\n        return spaces;\n    }\n/**\n * Position widgets based on the position of the placeholder - this is temporary until confirmed\n * @param {?} widget\n * @return {?}\n */\nupdateWidgetPositions(widget: DashboardWidgetComponent) {\n\n        // check all spaces the placeholder will occupy and move any widget currently in them down\n        for (let /** @type {?} */ column = this._placeholder.column; column < this._placeholder.column + this._placeholder.columnSpan; column++) {\n            for (let /** @type {?} */ row = this._placeholder.row; row < this._placeholder.row + this._placeholder.rowSpan; row++) {\n\n                this.getWidgetsAtPosition(column, row, true)\n                    .filter(wgt => wgt !== widget)\n                    .forEach(wgt => this.moveWidgetDown(wgt));\n            }\n        }\n\n        // update the height of the dashboard\n        this.setDashboardHeight();\n\n        // if we arent dragging the top handle then fill spaces\n        if (this._actionWidget.direction !== ActionDirection.Top &&\n            this._actionWidget.direction !== ActionDirection.TopLeft &&\n            this._actionWidget.direction !== ActionDirection.TopRight) {\n            this.shiftWidgetsUp();\n        }\n    }\n/**\n * Determine if a widget is occupying a specific row and column\n * @param {?} column The columns to check if occupied\n * @param {?} row The row to check if occupied\n * @param {?=} ignoreResizing Whether or not to ignore the widget currently being resized\n * @return {?}\n */\ngetWidgetsAtPosition(column: number, row: number, ignoreResizing: boolean = false): DashboardWidgetComponent[] {\n        return this.getOccupiedSpaces()\n            .filter(space => space.column === column && space.row === row)\n            .filter(space => space.widget !== this._actionWidget.widget || !ignoreResizing)\n            .map(space => space.widget);\n    }\n/**\n * Update the placeholder visibility, position and size\n * @param {?} visible\n * @param {?} x\n * @param {?} y\n * @param {?} width\n * @param {?} height\n * @return {?}\n */\nsetPlaceholderBounds(visible: boolean, x: number, y: number, width: number, height: number): void {\n\n        let /** @type {?} */ rounding = this._actionWidget.direction === ActionDirection.Left ||\n            this._actionWidget.direction === ActionDirection.Top ? Rounding.RoundDownBelowHalf : Rounding.RoundUpOverHalf;\n\n        this._placeholder.visible = visible;\n\n        this._placeholder.column = this.getPlaceholderColumn(x, width);\n        this._placeholder.row = this.getPlaceholderRow(y, height);\n        this._placeholder.columnSpan = this.getPlaceholderColumnSpan(width);\n        this._placeholder.rowSpan = this.getPlaceholderRowSpan(height);\n\n        // calculate the maximum number of rows\n        let /** @type {?} */ rowCount = this._widgets.filter(widget => widget !== this._actionWidget.widget)\n            .reduce((previous, widget) => Math.max(widget.getRow() + widget.getRowSpan(), previous), 0);\n\n        // constrain maximum placeholder row\n        this._placeholder.row = Math.min(this._placeholder.row, rowCount);\n\n        this._placeholder.x = (this._placeholder.column * this.getColumnWidth()) + this._options.padding;\n        this._placeholder.y = (this._placeholder.row * this.getRowHeight()) + this._options.padding;\n        this._placeholder.width = (this._placeholder.columnSpan * this.getColumnWidth()) - (this._options.padding * 2);\n        this._placeholder.height = (this._placeholder.rowSpan * this.getRowHeight()) - (this._options.padding * 2);\n\n        // set the values of the widget to match the values of the placeholder - however do not render the changes\n        this._actionWidget.widget.setColumn(this._placeholder.column, false);\n        this._actionWidget.widget.setRow(this._placeholder.row, false);\n        this._actionWidget.widget.setColumnSpan(this._placeholder.columnSpan, false);\n        this._actionWidget.widget.setRowSpan(this._placeholder.rowSpan, false);\n    }\n/**\n * Get the placeholder column position\n * @param {?} x\n * @param {?} width\n * @return {?}\n */\ngetPlaceholderColumn(x: number, width: number): number {\n\n        let /** @type {?} */ column = this.getColumnFromPx(x, this._actionWidget.direction === ActionDirection.Move ? Rounding.RoundUpOverHalf : Rounding.RoundDown);\n        let /** @type {?} */ columnSpan = Math.floor(width / this.getColumnWidth());\n        let /** @type {?} */ upperLimit = this.getColumnCount() - columnSpan;\n\n        // if we arent dragging left then just return the column\n        if (this._actionWidget.direction !== ActionDirection.Left &&\n            this._actionWidget.direction !== ActionDirection.TopLeft &&\n            this._actionWidget.direction !== ActionDirection.BottomLeft) {\n            return Math.max(Math.min(column, upperLimit), 0);\n        }\n\n        // get any overflow\n        let /** @type {?} */ overflow = width % this.getColumnWidth();\n\n        return (x <= 0 || overflow === 0 || columnSpan === 0 || overflow > (this.getColumnWidth() / 2)) ?\n            Math.max(Math.min(column, upperLimit), 0) :\n            Math.max(Math.min(column + 1, upperLimit), 0);\n    }\n/**\n * Get the column span of the placeholder\n * @param {?} width\n * @return {?}\n */\ngetPlaceholderColumnSpan(width: number): number {\n\n        let /** @type {?} */ columnSpan = this.getColumnFromPx(width);\n\n        // if we arent dragging right or left then just return the column span\n        if (this._actionWidget.direction !== ActionDirection.Right &&\n            this._actionWidget.direction !== ActionDirection.TopRight &&\n            this._actionWidget.direction !== ActionDirection.BottomRight &&\n            this._actionWidget.direction !== ActionDirection.Left &&\n            this._actionWidget.direction !== ActionDirection.TopLeft &&\n            this._actionWidget.direction !== ActionDirection.BottomLeft) {\n            return Math.max(columnSpan, 1);\n        }\n\n        // get the current column span and any overflow\n        let /** @type {?} */ overflow = width % this.getColumnWidth();\n\n        return (columnSpan > 0 && overflow > (this.getColumnWidth() / 2)) ? Math.max(columnSpan + 1, 1) : Math.max(columnSpan, 1);\n    }\n/**\n * Get the row position of the placeholder\n * @param {?} y\n * @param {?} height\n * @return {?}\n */\ngetPlaceholderRow(y: number, height: number): number {\n\n        let /** @type {?} */ row = this.getRowFromPx(y, this._actionWidget.direction === ActionDirection.Move ? Rounding.RoundUpOverHalf : Rounding.RoundDown);\n        let /** @type {?} */ rowSpan = Math.ceil(height / this.getRowHeight());\n\n        // if we arent dragging up then just return the row\n        if (this._actionWidget.direction !== ActionDirection.Top &&\n            this._actionWidget.direction !== ActionDirection.TopLeft &&\n            this._actionWidget.direction !== ActionDirection.TopRight) {\n            return Math.max(row, 0);\n        }\n\n        // get any overflow\n        let /** @type {?} */ overflow = height < this.getRowHeight() ? 0 : height % this.getRowHeight();\n\n        return (y <= 0 || rowSpan === 0 || overflow === 0 || overflow > (this.getRowHeight() / 2)) ? Math.max(row, 0) : Math.max(row + 1, 0);\n    }\n/**\n * Get the row span of the placeholder\n * @param {?} height\n * @return {?}\n */\ngetPlaceholderRowSpan(height: number): number {\n\n        let /** @type {?} */ rowSpan = this.getRowFromPx(height);\n\n        // if we arent dragging up or down then just return the column span\n        if (this._actionWidget.direction !== ActionDirection.Top &&\n            this._actionWidget.direction !== ActionDirection.TopLeft &&\n            this._actionWidget.direction !== ActionDirection.TopRight &&\n            this._actionWidget.direction !== ActionDirection.Bottom &&\n            this._actionWidget.direction !== ActionDirection.BottomLeft &&\n            this._actionWidget.direction !== ActionDirection.BottomRight) {\n            return Math.max(rowSpan, 1);\n        }\n\n        // get the current column span and any overflow\n        let /** @type {?} */ overflow = height % this.getRowHeight();\n\n        return (overflow > (this.getRowHeight() / 2)) ? Math.max(rowSpan + 1, 1) : Math.max(rowSpan, 1);\n    }\n/**\n * @param {?} x\n * @param {?=} rounding\n * @return {?}\n */\ngetColumnFromPx(x: number, rounding: Rounding = Rounding.RoundDown): number {\n\n        let /** @type {?} */ column = Math.floor(x / Math.floor(this.getColumnWidth()));\n        let /** @type {?} */ overflow = (x % Math.floor(this.getColumnWidth()));\n        let /** @type {?} */ half = this.getColumnWidth() / 2;\n\n        switch (rounding) {\n\n            case Rounding.RoundDown:\n                return column;\n\n            case Rounding.RoundDownBelowHalf:\n                return overflow < half ? column : column + 1;\n\n            case Rounding.RoundUpOverHalf:\n                return overflow > half ? column + 1 : column;\n\n            case Rounding.RoundUp:\n                return overflow > 0 ? column + 1 : column;\n        }\n\n    }\n/**\n * @param {?} y\n * @param {?=} rounding\n * @return {?}\n */\ngetRowFromPx(y: number, rounding: Rounding = Rounding.RoundDown): number {\n\n        let /** @type {?} */ row = Math.floor(y / Math.floor(this.getRowHeight()));\n        let /** @type {?} */ overflow = (y % Math.floor(this.getRowHeight()));\n        let /** @type {?} */ half = this.getRowHeight() / 2;\n\n        switch (rounding) {\n\n            case Rounding.RoundDown:\n                return row;\n\n            case Rounding.RoundDownBelowHalf:\n                return overflow < half ? row : row + 1;\n\n            case Rounding.RoundUpOverHalf:\n                return overflow > half ? row + 1 : row;\n\n            case Rounding.RoundUp:\n                return overflow > 0 ? row + 1 : row;\n        }\n    }\n/**\n * @return {?}\n */\ncommitWidgetChanges(): void {\n\n        // check that we have all the values we need\n        if (this._placeholder.column === undefined || this._placeholder.row === undefined ||\n            this._placeholder.columnSpan === undefined || this._placeholder.rowSpan === undefined) {\n            return;\n        }\n\n        if (this._actionWidget) {\n            this._actionWidget.widget.setColumn(this._placeholder.column);\n            this._actionWidget.widget.setRow(this._placeholder.row);\n            this._actionWidget.widget.setColumnSpan(this._placeholder.columnSpan);\n            this._actionWidget.widget.setRowSpan(this._placeholder.rowSpan);\n        }\n\n        // reset all placeholder values\n        this._placeholder.column = undefined;\n        this._placeholder.row = undefined;\n        this._placeholder.columnSpan = undefined;\n        this._placeholder.rowSpan = undefined;\n    }\n/**\n * @return {?}\n */\ngetPlaceholder(): DashboardPlaceholder {\n        return this._placeholder;\n    }\n/**\n * Get the current column width\n * @return {?}\n */\ngetColumnWidth(): number {\n        return Math.floor(this._columnWidth);\n    }\n/**\n * Get the current column height\n * @return {?}\n */\ngetRowHeight(): number {\n        return this._rowHeight;\n    }\n/**\n * Calculate the number of rows populated with widgets\n * @return {?}\n */\ngetRowCount(): number {\n        return this._widgets.reduce((previous, widget) => Math.max(widget.getRow() + widget.getRowSpan(), previous), 0);\n    }\n/**\n * Set the height of the dashboard container element\n * @return {?}\n */\nsetDashboardHeight(): void {\n\n        // size the dashboard container to ensure all rows fit\n        let /** @type {?} */ rowCount = this.getRowCount();\n\n        // if we should show an empty row increment the row count by 1\n        if (this._options.emptyRow) {\n            rowCount++;\n        }\n\n        this._dimensions.height = rowCount * this.getRowHeight();\n        this.height.next(this._dimensions.height);\n    }\n/**\n * Orders the z-index of all widgets to move the active one to the front\n * @param {?} widget The widget that should be brought to the front\n * @return {?}\n */\nbringToFront(widget: DashboardWidgetComponent): void {\n        this._widgets.forEach(wgt => wgt.sendToBack());\n        widget.bringToFront();\n    }\n/**\n * Move a widget down - if widgets are in the position below, then move them down further\n * @param {?} widget The widget to move downwards\n * @param {?=} distance\n * @return {?}\n */\nmoveWidgetDown(widget: DashboardWidgetComponent, distance: number = 1): void {\n\n        // move the widget down one position\n        widget.setRow(widget.getRow() + distance);\n\n        // check every space the widget occupies for collisions\n        this.forEachBlock(widget, (column, row) =>\n            this.getWidgetsAtPosition(column, row, true)\n                .filter(wgt => wgt !== widget)\n                .forEach(wgt => this.moveWidgetDown(wgt, distance)));\n    }\n/**\n * Widgets should not be allowed to have a vacant space above them - if there is one they should move upwards to fill it\n * @return {?}\n */\nshiftWidgetsUp(): void {\n\n        // check whether or not changes have been made - if so we need to repeat until stable\n        let /** @type {?} */ stable = true;\n\n        // iterate each widget and \n        this._widgets.forEach(widget => {\n\n            // if widget is already on the top row then do nothing\n            if (widget.getRow() === 0) {\n                return;\n            }\n\n            // if we are currently dragging and this is the dragging widget then skip\n            if (this._actionWidget && this._actionWidget.widget === widget) {\n                return;\n            }\n\n            if (this.getPositionAvailable(widget.getColumn(), widget.getRow() - 1, widget.getColumnSpan(), 1)) {\n                widget.setRow(widget.getRow() - 1);\n                stable = false;\n            }\n        });\n\n        // if changes occurred then we should repeat the process\n        if (!stable) {\n            this.shiftWidgetsUp();\n        }\n    }\n/**\n * Iterate over each space a widget occupied\n * @param {?} widget The widget to determine spaces\n * @param {?} callback The function to be called for each space, should expect a column and row argument witht he context being the widget\n * @return {?}\n */\nforEachBlock(widget: DashboardWidgetComponent, callback: (column: number, row: number) => void): void {\n        for (let /** @type {?} */ row = widget.getRow(); row < widget.getRow() + widget.getRowSpan(); row++) {\n            for (let /** @type {?} */ column = widget.getColumn(); column < widget.getColumn() + widget.getColumnSpan(); column++) {\n                callback.call(widget, column, row);\n            }\n        }\n    }\n/**\n * Returns the number of columns available\n * @return {?}\n */\ngetColumnCount(): number {\n        return this._stacked ? 1 : this._options.columns;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction DashboardService_tsickle_Closure_declarations() {\n/** @type {?} */\nDashboardService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDashboardService.ctorParameters;\n/** @type {?} */\nDashboardService.prototype._dashboard;\n/** @type {?} */\nDashboardService.prototype._widgets;\n/** @type {?} */\nDashboardService.prototype._options;\n/** @type {?} */\nDashboardService.prototype._options$;\n/** @type {?} */\nDashboardService.prototype._placeholder;\n/** @type {?} */\nDashboardService.prototype._widgetOrigin;\n/** @type {?} */\nDashboardService.prototype._dimensions;\n/** @type {?} */\nDashboardService.prototype._actionWidget;\n/** @type {?} */\nDashboardService.prototype._columnWidth;\n/** @type {?} */\nDashboardService.prototype._rowHeight;\n/** @type {?} */\nDashboardService.prototype._stacked;\n/** @type {?} */\nDashboardService.prototype._cache;\n/** @type {?} */\nDashboardService.prototype._mouseEvent;\n/** @type {?} */\nDashboardService.prototype._defaultOptions;\n/** @type {?} */\nDashboardService.prototype.height;\n/** @type {?} */\nDashboardService.prototype.layout;\n}\n\n\nexport interface DashboardDimensions {\n    width?: number;\n    height?: number;\n}\n\nexport interface DashboardWidgetDimensions {\n    x: number;\n    y: number;\n    width: number;\n    height: number;\n}\n\nexport interface DashboardAction {\n    widget: DashboardWidgetComponent;\n    direction: ActionDirection;\n    event: MouseEvent;\n}\n\nexport interface DashboardSpace {\n    widget: DashboardWidgetComponent;\n    column: number;\n    row: number;\n}\n\nexport interface DashboardPlaceholder {\n    visible: boolean;\n    x: number;\n    y: number;\n    width: number;\n    height: number;\n    column?: number;\n    row?: number;\n    columnSpan?: number;\n    rowSpan?: number;\n}\n\nexport interface DashboardCache {\n    id: string;\n    column: number;\n    row: number;\n}\n\nexport interface DashboardLayoutData {\n    id: string;\n    col: number;\n    row: number;\n    colSpan: number;\n    rowSpan: number;\n}\nexport type ActionDirection = number;\nexport let ActionDirection: any = {};\nActionDirection.Top = 0;\nActionDirection.TopRight = 1;\nActionDirection.Right = 2;\nActionDirection.BottomRight = 3;\nActionDirection.Bottom = 4;\nActionDirection.BottomLeft = 5;\nActionDirection.Left = 6;\nActionDirection.TopLeft = 7;\nActionDirection.Move = 8;\nActionDirection[ActionDirection.Top] = \"Top\";\nActionDirection[ActionDirection.TopRight] = \"TopRight\";\nActionDirection[ActionDirection.Right] = \"Right\";\nActionDirection[ActionDirection.BottomRight] = \"BottomRight\";\nActionDirection[ActionDirection.Bottom] = \"Bottom\";\nActionDirection[ActionDirection.BottomLeft] = \"BottomLeft\";\nActionDirection[ActionDirection.Left] = \"Left\";\nActionDirection[ActionDirection.TopLeft] = \"TopLeft\";\nActionDirection[ActionDirection.Move] = \"Move\";\n\nexport type Rounding = number;\nexport let Rounding: any = {};\nRounding.RoundDown = 0;\nRounding.RoundDownBelowHalf = 1;\nRounding.RoundUp = 2;\nRounding.RoundUpOverHalf = 3;\nRounding[Rounding.RoundDown] = \"RoundDown\";\nRounding[Rounding.RoundDownBelowHalf] = \"RoundDownBelowHalf\";\nRounding[Rounding.RoundUp] = \"RoundUp\";\nRounding[Rounding.RoundUpOverHalf] = \"RoundUpOverHalf\";\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Input, OnInit, DoCheck, ElementRef, AfterViewInit, NgZone, EventEmitter, Output } from '@angular/core';\nimport { DashboardService, DashboardLayoutData, DashboardPlaceholder } from './dashboard.service';\nimport { ResizeDimensions } from '../../directives/resize/resize.service';\nexport class DashboardComponent implements OnInit, DoCheck, AfterViewInit {\n\n     options: DashboardOptions = {};\n     layout: DashboardLayoutData[];\n     layoutChange: EventEmitter<DashboardLayoutData[]> = new EventEmitter<DashboardLayoutData[]>();\n\n    height: number = 0;\n    placeholder: DashboardPlaceholder = this._dashboardService.getPlaceholder();\nprivate _nativeElement: HTMLElement;\nprivate _options: DashboardOptions;\nprivate _layout: DashboardLayoutData[];\n/**\n * @param {?} _dashboardService\n * @param {?} _elementRef\n * @param {?} _ngZone\n */\nconstructor(private _dashboardService: DashboardService,\nprivate _elementRef: ElementRef,\nprivate _ngZone: NgZone) {\n        this._nativeElement = _elementRef.nativeElement;\n        this._dashboardService.setDashboard(this._nativeElement);\n\n        // watch for changes to component height\n        this._dashboardService.height.subscribe(height => this.height = height);\n\n        // subscribe to layout changes\n        this._dashboardService.layout.subscribe(layout => {\n            this.layout = layout;\n            this.layoutChange.emit(layout);\n        });\n    }\n/**\n * @return {?}\n */\nngOnInit(): void {\n        this.setOptions(this.options);\n    }\n/**\n * @return {?}\n */\nngDoCheck(): void {\n\n        // get the current set of options\n        let /** @type {?} */ options = Object.assign({}, this._dashboardService.getDefaultOptions(), this.options);\n\n        // if anything has changed then update them\n        if (JSON.stringify(this._dashboardService.getOptions()) !== JSON.stringify(options)) {\n            this.setOptions(options);\n        }\n\n        // check if the layout has changed\n        if (JSON.stringify(this.layout) !== JSON.stringify(this._layout)) {\n            this._layout = this.layout.slice();\n            this._dashboardService.setLayoutData(this.layout);\n        }\n    }\n/**\n * @return {?}\n */\nngAfterViewInit(): void {\n        // initially set dimensions\n        this._dashboardService.setDimensions(this._nativeElement.offsetWidth, this._nativeElement.offsetHeight);\n    }\n/**\n * @param {?} options\n * @return {?}\n */\nsetOptions(options: DashboardOptions): void {\n        this._dashboardService.setOptions(options);\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nonResize(event: ResizeDimensions): void {\n        // ensure this gets run inside Angular\n        this._ngZone.run(() => this._dashboardService.setDimensions(event.width, event.height));\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-dashboard',\n    template: `\n      <div (uxResize)=\"onResize($event)\" throttle=\"16\" class=\"dashboard-container\">\n          <ng-content></ng-content>\n      </div>\n\n      <div class=\"position-indicator\" *ngIf=\"placeholder.visible\" [style.left.px]=\"placeholder.x\" [style.top.px]=\"placeholder.y\" [style.width.px]=\"placeholder.width\"\n          [style.height.px]=\"placeholder.height\"></div>\n    `,\n    providers: [DashboardService],\n    host: {\n        '[style.height.px]': 'height'\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: DashboardService, },\n{type: ElementRef, },\n{type: NgZone, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'options': [{ type: Input },],\n'layout': [{ type: Input },],\n'layoutChange': [{ type: Output },],\n};\n}\n\nfunction DashboardComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nDashboardComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDashboardComponent.ctorParameters;\n/** @type {?} */\nDashboardComponent.propDecorators;\n/** @type {?} */\nDashboardComponent.prototype.options;\n/** @type {?} */\nDashboardComponent.prototype.layout;\n/** @type {?} */\nDashboardComponent.prototype.layoutChange;\n/** @type {?} */\nDashboardComponent.prototype.height;\n/** @type {?} */\nDashboardComponent.prototype.placeholder;\n/** @type {?} */\nDashboardComponent.prototype._nativeElement;\n/** @type {?} */\nDashboardComponent.prototype._options;\n/** @type {?} */\nDashboardComponent.prototype._layout;\n/** @type {?} */\nDashboardComponent.prototype._dashboardService;\n/** @type {?} */\nDashboardComponent.prototype._elementRef;\n/** @type {?} */\nDashboardComponent.prototype._ngZone;\n}\n\n\nexport interface DashboardOptions {\n    columns?: number;\n    padding?: number;\n    minWidth?: number;\n    minHeight?: number;\n    rowHeight?: number;\n    emptyRow?: boolean;\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Input, ElementRef, QueryList, ViewChildren, Directive, AfterViewInit, OnInit, OnDestroy } from '@angular/core';\nimport { DashboardService, ActionDirection } from '../dashboard.service';\nimport { Observable } from 'rxjs/Observable';\nimport { Subscription } from 'rxjs/Subscription';\nimport'rxjs/add/operator/takeUntil';\nexport class DashboardWidgetComponent implements OnInit, AfterViewInit, OnDestroy {\n\n     id: string;\n     col: number;\n     row: number;\n     colSpan: number = 1;\n     rowSpan: number = 1;\n     resizable: boolean = false;\n\n    actualX: number = 0;\n    actualY: number = 0;\n    actualWidth: number = 100;\n    actualHeight: number = 100;\n    padding: number = 0;\n    zIndex: number = 0;\n    stacked: boolean = false;\nprivate _column: StackableValue = { regular: undefined, stacked: undefined };\nprivate _row: StackableValue = { regular: undefined, stacked: undefined };\nprivate _columnSpan: StackableValue = { regular: 1, stacked: 1 };\nprivate _rowSpan: StackableValue = { regular: 1, stacked: 1 };\nprivate _nativeElement: HTMLElement;\nprivate _handles: ResizeHandle[];\nprivate _dragMove: Observable<MouseEvent> = Observable.fromEvent(document, 'mousemove');\nprivate _dragEnd: Observable<MouseEvent> = Observable.fromEvent(document, 'mouseup');\n/**\n * @param {?} _dashboardService\n * @param {?} _elementRef\n */\nconstructor(private _dashboardService: DashboardService,\nprivate _elementRef: ElementRef) {\n        this._nativeElement = _elementRef.nativeElement;\n\n        // add the widget to the dashboard\n        _dashboardService.addWidget(this);\n\n        // apply the current options\n        this.applyOptions();\n\n        // watch for changes to the options\n        _dashboardService.options().subscribe(opts => this.applyOptions());\n    }\n/**\n * @return {?}\n */\nngOnInit(): void {\n\n        // check to ensure values are numbers and not strings\n        if (typeof this.col === 'string') {\n            this.col = parseFloat(this.col);\n        }\n\n        if (typeof this.row === 'string') {\n            this.row = parseFloat(this.row);\n        }\n\n        if (typeof this.colSpan === 'string') {\n            this.colSpan = parseFloat(this.colSpan);\n        }\n\n        if (typeof this.rowSpan === 'string') {\n            this.rowSpan = parseFloat(this.rowSpan);\n        }\n\n        this._columnSpan.regular = this.colSpan;\n        this._rowSpan.regular = this.rowSpan;\n\n        if (!this.id) {\n            console.warn('Dashboard Widget is missing an ID.');\n\n            // set random id - keeps things working but prevents exporting of positions\n            this.id = Math.floor(Math.random() * 100000).toString();\n        }\n    }\n/**\n * Once component is initialised link the resize handle elements with their direction\n * @return {?}\n */\nngAfterViewInit(): void {\n        this.initialiseHandles();\n    }\n/**\n * If component is removed, then unregister it from the service\n * @return {?}\n */\nngOnDestroy(): void {\n        this._dashboardService.removeWidget(this);\n    }\n/**\n * Return the ID of the widget\n * @return {?}\n */\ngetId(): string {\n        return this.id;\n    }\n/**\n * Apply the current dashboard options\n * @return {?}\n */\napplyOptions(): void {\n\n        // get the current options at the time \n        let /** @type {?} */ options = this._dashboardService.getOptions();\n\n        // only update the values if options have been defined\n        if (options) {\n            // apply the initial options\n            this.padding = options.padding;\n            this._columnSpan.stacked = options.columns;\n        }\n    }\n/**\n * Set the actual position and size values\n * @return {?}\n */\nrender(): void {\n        this.actualX = this.getColumn() * this._dashboardService.getColumnWidth();\n        this.actualY = this.getRow() * this._dashboardService.getRowHeight();\n        this.actualWidth = this.getColumnSpan() * this._dashboardService.getColumnWidth();\n        this.actualHeight = this.getRowSpan() * this._dashboardService.getRowHeight();\n    }\n/**\n * Returns all the resize handles and their associated directions\n * @return {?}\n */\ngetHandles(): ResizeHandle[] {\n        return this._handles;\n    }\n/**\n * Indicates whether or not the widget should be displayed in stacked mode\n * @param {?} stacked indicates the stacked mode\n * @return {?}\n */\nsetStacked(stacked: boolean): void {\n        this.stacked = stacked;\n    }\n/**\n * @return {?}\n */\ngetColumn(): number {\n        return this.getStackableValue(this._column);\n    }\n/**\n * @return {?}\n */\ngetRow(): number {\n        return this.getStackableValue(this._row);\n    }\n/**\n * @param {?} column\n * @param {?=} render\n * @return {?}\n */\nsetColumn(column: number, render: boolean = true): void {\n        this.setStackableValue(this._column, column);\n\n        if (render) {\n            this.render();\n        }\n    }\n/**\n * @param {?} row\n * @param {?=} render\n * @return {?}\n */\nsetRow(row: number, render: boolean = true): void {\n        this.setStackableValue(this._row, row);\n\n        if (render) {\n            this.render();\n        }\n    }\n/**\n * @return {?}\n */\ngetColumnSpan(): number {\n        return this.getStackableValue(this._columnSpan);\n    }\n/**\n * @return {?}\n */\ngetRowSpan(): number {\n        return this.getStackableValue(this._rowSpan);\n    }\n/**\n * @param {?} columnSpan\n * @param {?=} render\n * @return {?}\n */\nsetColumnSpan(columnSpan: number, render: boolean = true): void {\n        this.setStackableValue(this._columnSpan, columnSpan);\n\n        if (render) {\n            this.render();\n        }\n    }\n/**\n * @param {?} rowSpan\n * @param {?=} render\n * @return {?}\n */\nsetRowSpan(rowSpan: number, render: boolean = true): void {\n        this.setStackableValue(this._rowSpan, rowSpan);\n\n        if (render) {\n            this.render();\n        }\n    }\n/**\n * @return {?}\n */\nbringToFront(): void {\n        this.zIndex = 1;\n    }\n/**\n * @return {?}\n */\nsendToBack(): void {\n        this.zIndex = 0;\n    }\n/**\n * @param {?} x\n * @param {?} y\n * @param {?} width\n * @param {?} height\n * @return {?}\n */\nsetBounds(x: number, y: number, width: number, height: number): void {\n        this.actualX = x;\n        this.actualY = y;\n        this.actualWidth = width;\n        this.actualHeight = height;\n    }\n/**\n * Allows automatic setting of stackable value\n * @param {?} property The current StackableValue object\n * @param {?} value The value to set in the appropriate field\n * @return {?}\n */\nprivate setStackableValue(property: StackableValue, value: number): void {\n        if (this.stacked) {\n            property.stacked = value;\n        } else {\n            property.regular = value;\n        }\n    }\n/**\n * Return the appropriate value from a stackable value\n * @param {?} property The Stackable value object\n * @return {?}\n */\nprivate getStackableValue(property: StackableValue): number {\n        return this.stacked ? property.stacked : property.regular;\n    }\n/**\n * Create data representations of the resize handle elements and the direction they will resize in\n * @return {?}\n */\nprivate initialiseHandles() {\n\n        this._handles = [\n            {\n                element: this._nativeElement.querySelector('.resizer-handle.handle-top'),\n                direction: ActionDirection.Top\n            },\n            {\n                element: this._nativeElement.querySelector('.resizer-handle.handle-top-right'),\n                direction: ActionDirection.TopRight\n            },\n            {\n                element: this._nativeElement.querySelector('.resizer-handle.handle-right'),\n                direction: ActionDirection.Right\n            },\n            {\n                element: this._nativeElement.querySelector('.resizer-handle.handle-bottom-right'),\n                direction: ActionDirection.BottomRight\n            },\n            {\n                element: this._nativeElement.querySelector('.resizer-handle.handle-bottom'),\n                direction: ActionDirection.Bottom\n            },\n            {\n                element: this._nativeElement.querySelector('.resizer-handle.handle-bottom-left'),\n                direction: ActionDirection.BottomLeft\n            },\n            {\n                element: this._nativeElement.querySelector('.resizer-handle.handle-left'),\n                direction: ActionDirection.Left\n            },\n            {\n                element: this._nativeElement.querySelector('.resizer-handle.handle-top-left'),\n                direction: ActionDirection.TopLeft\n            }\n        ];\n\n        // bind resize events to each handle\n        this._handles.forEach(handle => this.bindResize(handle));\n    }\n/**\n * This will apply event listeners to each resize handle\n * @param {?} handle The element and direction to subscribe to\n * @return {?}\n */\nprivate bindResize(handle: ResizeHandle): void {\n\n        // bind to resize events\n        handle.listener = Observable.fromEvent(handle.element, 'mousedown').subscribe((downEvent: MouseEvent) => {\n\n            downEvent.preventDefault();\n\n            // inform service that we are beginning to drag\n            this._dashboardService.onResizeStart({ widget: this, direction: handle.direction, event: downEvent });\n\n            let /** @type {?} */ move$ = this._dragMove.takeUntil(this._dragEnd).subscribe((moveEvent: MouseEvent) => {\n                moveEvent.preventDefault();\n                this._dashboardService.onResizeDrag({ widget: this, direction: handle.direction, event: moveEvent });\n            }, null, () => {\n                move$.unsubscribe();\n                this._dashboardService.onResizeEnd();\n            });\n\n        });\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-dashboard-widget',\n    template: `\n      <div class=\"widget-content widget-col-span-{{ getColumnSpan() }} widget-row-span-{{ getRowSpan() }}\">\n          <ng-content></ng-content>\n      </div>\n\n      <div class=\"resizer-handle handle-top\" [style.top.px]=\"padding\" [hidden]=\"!resizable\"></div>\n      <div class=\"resizer-handle handle-top-right\" [style.top.px]=\"padding\" [style.right.px]=\"padding\" [hidden]=\"!resizable && !stacked\"></div>\n      <div class=\"resizer-handle handle-right\" [style.right.px]=\"padding\" [hidden]=\"!resizable || stacked\"></div>\n      <div class=\"resizer-handle handle-bottom-right\" [style.bottom.px]=\"padding\" [style.right.px]=\"padding\" [hidden]=\"!resizable && !stacked\"></div>\n      <div class=\"resizer-handle handle-bottom\" [style.bottom.px]=\"padding\" [hidden]=\"!resizable\"></div>\n      <div class=\"resizer-handle handle-bottom-left\" [style.bottom.px]=\"padding\" [style.left.px]=\"padding\" [hidden]=\"!resizable && !stacked\"></div>\n      <div class=\"resizer-handle handle-left\" [style.left.px]=\"padding\" [hidden]=\"!resizable || stacked\"></div>\n      <div class=\"resizer-handle handle-top-left\" [style.top.px]=\"padding\" [style.left.px]=\"padding\" [hidden]=\"!resizable && !stacked\"></div>\n    `,\n    host: {\n        '[style.left.px]': 'actualX',\n        '[style.top.px]': 'actualY',\n        '[style.width.px]': 'actualWidth',\n        '[style.height.px]': 'actualHeight',\n        '[style.padding.px]': 'padding',\n        '[style.zIndex]': 'zIndex'\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: DashboardService, },\n{type: ElementRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'id': [{ type: Input },],\n'col': [{ type: Input },],\n'row': [{ type: Input },],\n'colSpan': [{ type: Input },],\n'rowSpan': [{ type: Input },],\n'resizable': [{ type: Input },],\n};\n}\n\nfunction DashboardWidgetComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nDashboardWidgetComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDashboardWidgetComponent.ctorParameters;\n/** @type {?} */\nDashboardWidgetComponent.propDecorators;\n/** @type {?} */\nDashboardWidgetComponent.prototype.id;\n/** @type {?} */\nDashboardWidgetComponent.prototype.col;\n/** @type {?} */\nDashboardWidgetComponent.prototype.row;\n/** @type {?} */\nDashboardWidgetComponent.prototype.colSpan;\n/** @type {?} */\nDashboardWidgetComponent.prototype.rowSpan;\n/** @type {?} */\nDashboardWidgetComponent.prototype.resizable;\n/** @type {?} */\nDashboardWidgetComponent.prototype.actualX;\n/** @type {?} */\nDashboardWidgetComponent.prototype.actualY;\n/** @type {?} */\nDashboardWidgetComponent.prototype.actualWidth;\n/** @type {?} */\nDashboardWidgetComponent.prototype.actualHeight;\n/** @type {?} */\nDashboardWidgetComponent.prototype.padding;\n/** @type {?} */\nDashboardWidgetComponent.prototype.zIndex;\n/** @type {?} */\nDashboardWidgetComponent.prototype.stacked;\n/** @type {?} */\nDashboardWidgetComponent.prototype._column;\n/** @type {?} */\nDashboardWidgetComponent.prototype._row;\n/** @type {?} */\nDashboardWidgetComponent.prototype._columnSpan;\n/** @type {?} */\nDashboardWidgetComponent.prototype._rowSpan;\n/** @type {?} */\nDashboardWidgetComponent.prototype._nativeElement;\n/** @type {?} */\nDashboardWidgetComponent.prototype._handles;\n/** @type {?} */\nDashboardWidgetComponent.prototype._dragMove;\n/** @type {?} */\nDashboardWidgetComponent.prototype._dragEnd;\n/** @type {?} */\nDashboardWidgetComponent.prototype._dashboardService;\n/** @type {?} */\nDashboardWidgetComponent.prototype._elementRef;\n}\n\n\nexport interface ResizeHandle {\n    element: Element;\n    direction: ActionDirection;\n    listener?: Subscription;\n}\n\nexport interface StackableValue {\n    regular: number;\n    stacked: number;\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, Host, ElementRef } from '@angular/core';\nimport { DashboardWidgetComponent } from '../widget/dashboard-widget.component';\nimport { Observable } from 'rxjs/Observable';\nimport { DashboardService, ActionDirection } from '../dashboard.service';\nexport class DashboardDragHandleDirective {\nprivate _dragMove: Observable<MouseEvent> = Observable.fromEvent(document, 'mousemove');\nprivate _dragEnd: Observable<MouseEvent> = Observable.fromEvent(document, 'mouseup');\n/**\n * @param {?} widget\n * @param {?} elementRef\n * @param {?} dashboardService\n */\nconstructor(  widget: DashboardWidgetComponent, elementRef: ElementRef, dashboardService: DashboardService) {\n\n        Observable.fromEvent(elementRef.nativeElement, 'mousedown').subscribe((downEvent: MouseEvent) => {\n\n            downEvent.preventDefault();\n\n            // inform service that we are beginning to drag\n            dashboardService.onDragStart({ widget: widget, direction: ActionDirection.Move, event: downEvent });\n\n            let move$ = this._dragMove.takeUntil(this._dragEnd).subscribe((moveEvent: MouseEvent) => {\n                moveEvent.preventDefault();\n\n                dashboardService.onDrag({ widget: widget, direction: ActionDirection.Move, event: moveEvent });\n            }, null, () => {\n                move$.unsubscribe();\n                dashboardService.onDragEnd();\n            });\n\n        });\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: '[uxDashboardWidgetDragHandle], [ux-dashboard-widget-drag-handle]'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: DashboardWidgetComponent, decorators: [{ type: Host }, ]},\n{type: ElementRef, },\n{type: DashboardService, },\n];\n}\n\nfunction DashboardDragHandleDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nDashboardDragHandleDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDashboardDragHandleDirective.ctorParameters;\n/** @type {?} */\nDashboardDragHandleDirective.prototype._dragMove;\n/** @type {?} */\nDashboardDragHandleDirective.prototype._dragEnd;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable, Renderer2 } from '@angular/core';\nimport { Subject } from 'rxjs/Subject';\nimport { Observable } from 'rxjs/Observable';\nimport'rxjs/add/observable/fromEvent';\nexport class ResizeService {\n/**\n * @param {?} nativeElement\n * @param {?} renderer\n * @return {?}\n */\naddResizeListener(nativeElement: HTMLElement, renderer: Renderer2): Subject<ResizeDimensions> {\n\n        // create subject\n        let /** @type {?} */ subject = new Subject<ResizeDimensions>();\n\n        // determine the style of the element\n        let /** @type {?} */ displayMode = window.getComputedStyle(nativeElement).getPropertyValue('display');\n\n        // create the iframe element\n        let /** @type {?} */ iframe: HTMLIFrameElement = renderer.createElement('iframe');\n\n        // style the iframe to be invisible but fill containing element\n        renderer.setStyle(iframe, 'position', 'absolute');\n        renderer.setStyle(iframe, 'width', '100%');\n        renderer.setStyle(iframe, 'height', '100%');\n        renderer.setStyle(iframe, 'top', '0');\n        renderer.setStyle(iframe, 'right', '0');\n        renderer.setStyle(iframe, 'bottom', '0');\n        renderer.setStyle(iframe, 'left', '0');\n        renderer.setStyle(iframe, 'z-index', '-1');\n        renderer.setStyle(iframe, 'opacity', '0');\n        renderer.setStyle(iframe, 'border', 'none');\n        renderer.setStyle(iframe, 'margin', '0');\n        renderer.setStyle(iframe, 'pointer-events', 'none');\n        renderer.setStyle(iframe, 'overflow', 'hidden');\n\n        // ensure the iframe ignores any tabbing\n        renderer.setAttribute(iframe, 'tabindex', '-1');\n\n        // statically positioned elements need changed to relative for this method to work\n        if (displayMode !== 'relative' && displayMode !== 'absolute' && displayMode !== 'fixed') {\n            renderer.setStyle(nativeElement, 'position', 'relative');\n        }\n\n        // add the iframe to the container element\n        renderer.appendChild(nativeElement, iframe);\n\n\n        this.waitUntilReady(iframe, () => {\n            let /** @type {?} */ iframeDoc = iframe.contentDocument || /** @type {?} */(( iframe.contentWindow.document as HTMLDocument));\n\n            let /** @type {?} */ attachListener = function () {\n                Observable.fromEvent(iframe.contentWindow, 'resize').subscribe((event: ResizeDimensions) => {\n\n                    subject.next({\n                        width: nativeElement.offsetWidth,\n                        height: nativeElement.offsetHeight\n                    });\n                });\n            };\n\n            if (iframeDoc.readyState === 'complete') {\n                attachListener();\n            } else {\n\n                // wait for iframe to load\n                iframe.addEventListener('load', () => attachListener());\n            }\n        });\n\n\n        return subject;\n    }\n/**\n * @param {?} iframe\n * @param {?} callback\n * @return {?}\n */\nprivate waitUntilReady(iframe: HTMLIFrameElement, callback: () => void) {\n        if (iframe.contentDocument || iframe.contentWindow) {\n            callback.call(this);\n        } else {\n            setTimeout(() => this.waitUntilReady(iframe, callback));\n        }\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ResizeService_tsickle_Closure_declarations() {\n/** @type {?} */\nResizeService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nResizeService.ctorParameters;\n}\n\n\nexport interface ResizeDimensions {\n    width: number;\n    height: number;\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, Output, EventEmitter, ElementRef, Input, Renderer2 } from '@angular/core';\nimport { ResizeService, ResizeDimensions } from './resize.service';\nimport'rxjs/add/operator/debounceTime';\nexport class ResizeDirective {\n\n     throttle: number = 0;\n     resize: EventEmitter<ResizeDimensions> = new EventEmitter<ResizeDimensions>();\n/**\n * @param {?} _elementRef\n * @param {?} _resizeService\n * @param {?} _renderer\n */\nconstructor(private _elementRef: ElementRef,\nprivate _resizeService: ResizeService,\nprivate _renderer: Renderer2) { }\n/**\n * @return {?}\n */\nngOnInit(): void {\n        this._resizeService.addResizeListener(this._elementRef.nativeElement, this._renderer)\n            .debounceTime(this.throttle)\n            .subscribe(event => this.resize.emit(event));\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: '[uxResize]'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: ResizeService, },\n{type: Renderer2, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'throttle': [{ type: Input },],\n'resize': [{ type: Output, args: ['uxResize', ] },],\n};\n}\n\nfunction ResizeDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nResizeDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nResizeDirective.ctorParameters;\n/** @type {?} */\nResizeDirective.propDecorators;\n/** @type {?} */\nResizeDirective.prototype.throttle;\n/** @type {?} */\nResizeDirective.prototype.resize;\n/** @type {?} */\nResizeDirective.prototype._elementRef;\n/** @type {?} */\nResizeDirective.prototype._resizeService;\n/** @type {?} */\nResizeDirective.prototype._renderer;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\n\nimport { ResizeDirective } from './resize.directive';\nimport { ResizeService } from './resize.service';\nexport class ResizeModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    exports: [ResizeDirective],\n    declarations: [ResizeDirective],\n    providers: [ResizeService]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ResizeModule_tsickle_Closure_declarations() {\n/** @type {?} */\nResizeModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nResizeModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DashboardComponent } from './dashboard.component';\nimport { DashboardWidgetComponent } from './widget/dashboard-widget.component';\nimport { DashboardService } from './dashboard.service';\nimport { DashboardDragHandleDirective } from './drag-handle/drag-handle.directive';\nimport { ResizeModule } from '../../directives/resize/index';\n\nconst /** @type {?} */ DECLARATIONS: any[] = [\n    DashboardComponent,\n    DashboardWidgetComponent,\n    DashboardDragHandleDirective\n];\nexport class DashboardModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        CommonModule,\n        ResizeModule\n    ],\n    exports: DECLARATIONS,\n    declarations: DECLARATIONS,\n    providers: [DashboardService],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction DashboardModule_tsickle_Closure_declarations() {\n/** @type {?} */\nDashboardModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDashboardModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable } from '@angular/core';\nimport { Action } from '../../mini-ngrx/index';\nimport {\n  TimeChangeEvent,\n  TimepickerComponentState,\n  Time\n} from '../timepicker.models';\n\n\nexport class TimepickerActions {\n  static readonly WRITE_VALUE = '[timepicker] write value from ng model';\n  static readonly CHANGE_HOURS = '[timepicker] change hours';\n  static readonly CHANGE_MINUTES = '[timepicker] change minutes';\n  static readonly CHANGE_SECONDS = '[timepicker] change seconds';\n  static readonly SET_TIME_UNIT = '[timepicker] set time unit';\n  static readonly UPDATE_CONTROLS = '[timepicker] update controls';\n\n  writeValue(value: Date | string) {\n    return {\n      type: TimepickerActions.WRITE_VALUE,\n      payload: value\n    };\n  }\n\n  changeHours(event: TimeChangeEvent) {\n    return {\n      type: TimepickerActions.CHANGE_HOURS,\n      payload: event\n    };\n  }\n\n  changeMinutes(event: TimeChangeEvent) {\n    return {\n      type: TimepickerActions.CHANGE_MINUTES,\n      payload: event\n    };\n  }\n\n  changeSeconds(event: TimeChangeEvent): Action {\n    return {\n      type: TimepickerActions.CHANGE_SECONDS,\n      payload: event\n    };\n  }\n\n  setTime(value: Time): Action {\n    return {\n      type: TimepickerActions.SET_TIME_UNIT,\n      payload: value\n    };\n  }\n\n  updateControls(value: TimepickerComponentState): Action {\n    return {\n      type: TimepickerActions.UPDATE_CONTROLS,\n      payload: value\n    };\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable } from '@angular/core';\n\n/** Provides default configuration values for timepicker */\n\nexport class TimepickerConfig {\n  /** hours change step */\n  hourStep = 1;\n  /** hours change step */\n  minuteStep = 5;\n  /** seconds changes step */\n  secondsStep = 10;\n  /** if true works in 12H mode and displays AM/PM. If false works in 24H mode and hides AM/PM */\n  showMeridian = true;\n  /** meridian labels based on locale */\n  meridians = ['AM', 'PM'];\n  /** if true hours and minutes fields will be readonly */\n  readonlyInput = false;\n  /** if true scroll inside hours and minutes inputs will change time */\n  mousewheel = true;\n  /** if true up/down arrowkeys inside hours and minutes inputs will change time */\n  arrowkeys = true;\n  /** if true spinner arrows above and below the inputs will be shown */\n  showSpinners = true;\n  /** show seconds in timepicker */\n  showSeconds = false;\n  /** minimum time user can select */\n  min: Date;\n  /** maximum time user can select */\n  max: Date;\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @copyright ngrx\n */\nimport { Observable } from 'rxjs/Observable';\nimport { Observer } from 'rxjs/Observer';\nimport { Operator } from 'rxjs/Operator';\nimport { distinctUntilChanged } from 'rxjs/operator/distinctUntilChanged';\n\nimport { map } from 'rxjs/operator/map';\nimport { Action, ActionReducer } from './index';\n\nexport class MiniStore<T> extends Observable<T> implements Observer<Action> {\n  constructor(\n    private _dispatcher: Observer<Action>,\n    private _reducer: ActionReducer<any>,\n    state$: Observable<any>\n  ) {\n    super();\n\n    this.source = state$;\n  }\n\n  select<R>(pathOrMapFn: (state: T) => R): Observable<R> {\n    const mapped$: Observable<R> = map.call(this, pathOrMapFn);\n\n    return distinctUntilChanged.call(mapped$);\n  }\n\n  lift<R>(operator: Operator<T, R>): MiniStore<R> {\n    const store = new MiniStore<R>(this._dispatcher, this._reducer, this);\n    store.operator = operator;\n\n    return store;\n  }\n\n  dispatch(action: Action) {\n    this._dispatcher.next(action);\n  }\n\n  next(action: Action) {\n    this._dispatcher.next(action);\n  }\n\n  error(err: any) {\n    this._dispatcher.error(err);\n  }\n\n  complete() {\n    /*noop*/\n  }\n}\n","declare let global: any;\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\ndeclare var WorkerGlobalScope: any;\n// CommonJS / Node have global context exposed as \"global\" variable.\n// We don't want to include the whole node.d.ts this this compilation unit so we'll just fake\n// the global \"global\" var for now.\n\nconst __window = typeof window !== 'undefined' && window;\nconst __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n    self instanceof WorkerGlobalScope && self;\nconst __global = typeof global !== 'undefined' && global;\nconst _root: any = __window || __global || __self;\n\n// Workaround Closure Compiler restriction: The body of a goog.module cannot use throw.\n// This is needed when used with angular/tsickle which inserts a goog.module statement.\n// Wrap in IIFE\n(function () {\n  if (!_root) {\n    throw new Error('RxJS could not find any global context (window, self, global)');\n  }\n})();\n\nexport { _root as root };","export const isArray = Array.isArray || (<T>(x: any): x is T[] => x && typeof x.length === 'number');\n","export function isObject(x: any): x is Object {\n  return x != null && typeof x === 'object';\n}\n","export function isFunction(x: any): x is Function {\n  return typeof x === 'function';\n}\n","// typeof any so that it we don't have to cast when comparing a result to the error object\nexport const errorObject: any = { e: {} };","/**\n * An error thrown when one or more errors have occurred during the\n * `unsubscribe` of a {@link Subscription}.\n */\nexport class UnsubscriptionError extends Error {\n  constructor(public errors: any[]) {\n    super();\n    const err: any = Error.call(this, errors ?\n      `${errors.length} errors occurred during unsubscription:\n  ${errors.map((err, i) => `${i + 1}) ${err.toString()}`).join('\\n  ')}` : '');\n    (<any> this).name = err.name = 'UnsubscriptionError';\n    (<any> this).stack = err.stack;\n    (<any> this).message = err.message;\n  }\n}\n","import { Scheduler } from '../Scheduler';\nimport { Subscription } from '../Subscription';\n\n/**\n * A unit of work to be executed in a {@link Scheduler}. An action is typically\n * created from within a Scheduler and an RxJS user does not need to concern\n * themselves about creating and manipulating an Action.\n *\n * ```ts\n * class Action<T> extends Subscription {\n *   new (scheduler: Scheduler, work: (state?: T) => void);\n *   schedule(state?: T, delay: number = 0): Subscription;\n * }\n * ```\n *\n * @class Action<T>\n */\nexport class Action<T> extends Subscription {\n  constructor(scheduler: Scheduler, work: (this: Action<T>, state?: T) => void) {\n    super();\n  }\n  /**\n   * Schedules this action on its parent Scheduler for execution. May be passed\n   * some context object, `state`. May happen at some point in the future,\n   * according to the `delay` parameter, if specified.\n   * @param {T} [state] Some contextual data that the `work` function uses when\n   * called by the Scheduler.\n   * @param {number} [delay] Time to wait before executing the work, where the\n   * time unit is implicit and defined by the Scheduler.\n   * @return {void}\n   */\n  public schedule(state?: T, delay: number = 0): Subscription {\n    return this;\n  }\n}\n","import { root } from '../util/root';\nimport { Action } from './Action';\nimport { Subscription } from '../Subscription';\nimport { AsyncScheduler } from './AsyncScheduler';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class AsyncAction<T> extends Action<T> {\n\n  public id: any;\n  public state: T;\n  public delay: number;\n  protected pending: boolean = false;\n\n  constructor(protected scheduler: AsyncScheduler,\n              protected work: (this: AsyncAction<T>, state?: T) => void) {\n    super(scheduler, work);\n  }\n\n  public schedule(state?: T, delay: number = 0): Subscription {\n\n    if (this.closed) {\n      return this;\n     }\n\n    // Always replace the current state with the new state.\n    this.state = state;\n\n    // Set the pending flag indicating that this action has been scheduled, or\n    // has recursively rescheduled itself.\n    this.pending = true;\n\n    const id = this.id;\n    const scheduler = this.scheduler;\n\n    //\n    // Important implementation note:\n    //\n    // Actions only execute once by default, unless rescheduled from within the\n    // scheduled callback. This allows us to implement single and repeat\n    // actions via the same code path, without adding API surface area, as well\n    // as mimic traditional recursion but across asynchronous boundaries.\n    //\n    // However, JS runtimes and timers distinguish between intervals achieved by\n    // serial `setTimeout` calls vs. a single `setInterval` call. An interval of\n    // serial `setTimeout` calls can be individually delayed, which delays\n    // scheduling the next `setTimeout`, and so on. `setInterval` attempts to\n    // guarantee the interval callback will be invoked more precisely to the\n    // interval period, regardless of load.\n    //\n    // Therefore, we use `setInterval` to schedule single and repeat actions.\n    // If the action reschedules itself with the same delay, the interval is not\n    // canceled. If the action doesn't reschedule, or reschedules with a\n    // different delay, the interval will be canceled after scheduled callback\n    // execution.\n    //\n    if (id != null) {\n      this.id = this.recycleAsyncId(scheduler, id, delay);\n    }\n\n    this.delay = delay;\n    // If this action has already an async Id, don't request a new one.\n    this.id = this.id || this.requestAsyncId(scheduler, this.id, delay);\n\n    return this;\n  }\n\n  protected requestAsyncId(scheduler: AsyncScheduler, id?: any, delay: number = 0): any {\n    return root.setInterval(scheduler.flush.bind(scheduler, this), delay);\n  }\n\n  protected recycleAsyncId(scheduler: AsyncScheduler, id: any, delay: number = 0): any {\n    // If this action is rescheduled with the same delay time, don't clear the interval id.\n    if (delay !== null && this.delay === delay && this.pending === false) {\n      return id;\n    }\n    // Otherwise, if the action's delay time is different from the current delay,\n    // or the action has been rescheduled before it's executed, clear the interval id\n    return root.clearInterval(id) && undefined || undefined;\n  }\n\n  /**\n   * Immediately executes this action and the `work` it contains.\n   * @return {any}\n   */\n  public execute(state: T, delay: number): any {\n\n    if (this.closed) {\n      return new Error('executing a cancelled action');\n    }\n\n    this.pending = false;\n    const error = this._execute(state, delay);\n    if (error) {\n      return error;\n    } else if (this.pending === false && this.id != null) {\n      // Dequeue if the action didn't reschedule itself. Don't call\n      // unsubscribe(), because the action could reschedule later.\n      // For example:\n      // ```\n      // scheduler.schedule(function doWork(counter) {\n      //   /* ... I'm a busy worker bee ... */\n      //   var originalAction = this;\n      //   /* wait 100ms before rescheduling the action */\n      //   setTimeout(function () {\n      //     originalAction.schedule(counter + 1);\n      //   }, 100);\n      // }, 1000);\n      // ```\n      this.id = this.recycleAsyncId(this.scheduler, this.id, null);\n    }\n  }\n\n  protected _execute(state: T, delay: number): any {\n    let errored: boolean = false;\n    let errorValue: any = undefined;\n    try {\n      this.work(state);\n    } catch (e) {\n      errored = true;\n      errorValue = !!e && e || new Error(e);\n    }\n    if (errored) {\n      this.unsubscribe();\n      return errorValue;\n    }\n  }\n\n  protected _unsubscribe() {\n\n    const id = this.id;\n    const scheduler = this.scheduler;\n    const actions = scheduler.actions;\n    const index = actions.indexOf(this);\n\n    this.work  = null;\n    this.state = null;\n    this.pending = false;\n    this.scheduler = null;\n\n    if (index !== -1) {\n      actions.splice(index, 1);\n    }\n\n    if (id != null) {\n      this.id = this.recycleAsyncId(scheduler, id, null);\n    }\n\n    this.delay = null;\n  }\n}\n","import { AsyncAction } from './AsyncAction';\nimport { Subscription } from '../Subscription';\nimport { QueueScheduler } from './QueueScheduler';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class QueueAction<T> extends AsyncAction<T> {\n\n  constructor(protected scheduler: QueueScheduler,\n              protected work: (this: QueueAction<T>, state?: T) => void) {\n    super(scheduler, work);\n  }\n\n  public schedule(state?: T, delay: number = 0): Subscription {\n    if (delay > 0) {\n      return super.schedule(state, delay);\n    }\n    this.delay = delay;\n    this.state = state;\n    this.scheduler.flush(this);\n    return this;\n  }\n\n  public execute(state: T, delay: number): any {\n    return (delay > 0 || this.closed) ?\n      super.execute(state, delay) :\n      this._execute(state, delay) ;\n  }\n\n  protected requestAsyncId(scheduler: QueueScheduler, id?: any, delay: number = 0): any {\n    // If delay exists and is greater than 0, or if the delay is null (the\n    // action wasn't rescheduled) but was originally scheduled as an async\n    // action, then recycle as an async action.\n    if ((delay !== null && delay > 0) || (delay === null && this.delay > 0)) {\n      return super.requestAsyncId(scheduler, id, delay);\n    }\n    // Otherwise flush the scheduler starting with this action.\n    return scheduler.flush(this);\n  }\n}\n","import { Action } from './scheduler/Action';\nimport { Subscription } from './Subscription';\n\nexport interface IScheduler {\n  now(): number;\n  schedule<T>(work: (this: Action<T>, state?: T) => void, delay?: number, state?: T): Subscription;\n}\n/**\n * An execution context and a data structure to order tasks and schedule their\n * execution. Provides a notion of (potentially virtual) time, through the\n * `now()` getter method.\n *\n * Each unit of work in a Scheduler is called an {@link Action}.\n *\n * ```ts\n * class Scheduler {\n *   now(): number;\n *   schedule(work, delay?, state?): Subscription;\n * }\n * ```\n *\n * @class Scheduler\n */\nexport class Scheduler implements IScheduler {\n\n  public static now: () => number = Date.now ? Date.now : () => +new Date();\n\n  constructor(private SchedulerAction: typeof Action,\n              now: () => number = Scheduler.now) {\n    this.now = now;\n  }\n\n  /**\n   * A getter method that returns a number representing the current time\n   * (at the time this function was called) according to the scheduler's own\n   * internal clock.\n   * @return {number} A number that represents the current time. May or may not\n   * have a relation to wall-clock time. May or may not refer to a time unit\n   * (e.g. milliseconds).\n   */\n  public now: () => number;\n\n  /**\n   * Schedules a function, `work`, for execution. May happen at some point in\n   * the future, according to the `delay` parameter, if specified. May be passed\n   * some context object, `state`, which will be passed to the `work` function.\n   *\n   * The given arguments will be processed an stored as an Action object in a\n   * queue of actions.\n   *\n   * @param {function(state: ?T): ?Subscription} work A function representing a\n   * task, or some unit of work to be executed by the Scheduler.\n   * @param {number} [delay] Time to wait before executing the work, where the\n   * time unit is implicit and defined by the Scheduler itself.\n   * @param {T} [state] Some contextual data that the `work` function uses when\n   * called by the Scheduler.\n   * @return {Subscription} A subscription in order to be able to unsubscribe\n   * the scheduled work.\n   */\n  public schedule<T>(work: (this: Action<T>, state?: T) => void, delay: number = 0, state?: T): Subscription {\n    return new this.SchedulerAction<T>(this, work).schedule(state, delay);\n  }\n}\n","import { Scheduler } from '../Scheduler';\nimport { AsyncAction } from './AsyncAction';\n\nexport class AsyncScheduler extends Scheduler {\n  public actions: Array<AsyncAction<any>> = [];\n  /**\n   * A flag to indicate whether the Scheduler is currently executing a batch of\n   * queued actions.\n   * @type {boolean}\n   */\n  public active: boolean = false;\n  /**\n   * An internal ID used to track the latest asynchronous task such as those\n   * coming from `setTimeout`, `setInterval`, `requestAnimationFrame`, and\n   * others.\n   * @type {any}\n   */\n  public scheduled: any = undefined;\n\n  public flush(action: AsyncAction<any>): void {\n\n    const {actions} = this;\n\n    if (this.active) {\n      actions.push(action);\n      return;\n    }\n\n    let error: any;\n    this.active = true;\n\n    do {\n      if (error = action.execute(action.state, action.delay)) {\n        break;\n      }\n    } while (action = actions.shift()); // exhaust the scheduler queue\n\n    this.active = false;\n\n    if (error) {\n      while (action = actions.shift()) {\n        action.unsubscribe();\n      }\n      throw error;\n    }\n  }\n}\n","import { QueueAction } from './QueueAction';\nimport { QueueScheduler } from './QueueScheduler';\n\n/**\n *\n * Queue Scheduler\n *\n * <span class=\"informal\">Put every next task on a queue, instead of executing it immediately</span>\n *\n * `queue` scheduler, when used with delay, behaves the same as {@link async} scheduler.\n *\n * When used without delay, it schedules given task synchronously - executes it right when\n * it is scheduled. However when called recursively, that is when inside the scheduled task,\n * another task is scheduled with queue scheduler, instead of executing immediately as well,\n * that task will be put on a queue and wait for current one to finish.\n *\n * This means that when you execute task with `queue` scheduler, you are sure it will end\n * before any other task scheduled with that scheduler will start.\n *\n * @examples <caption>Schedule recursively first, then do something</caption>\n *\n * Rx.Scheduler.queue.schedule(() => {\n *   Rx.Scheduler.queue.schedule(() => console.log('second')); // will not happen now, but will be put on a queue\n *\n *   console.log('first');\n * });\n *\n * // Logs:\n * // \"first\"\n * // \"second\"\n *\n *\n * @example <caption>Reschedule itself recursively</caption>\n *\n * Rx.Scheduler.queue.schedule(function(state) {\n *   if (state !== 0) {\n *     console.log('before', state);\n *     this.schedule(state - 1); // `this` references currently executing Action,\n *                               // which we reschedule with new state\n *     console.log('after', state);\n *   }\n * }, 0, 3);\n *\n * // In scheduler that runs recursively, you would expect:\n * // \"before\", 3\n * // \"before\", 2\n * // \"before\", 1\n * // \"after\", 1\n * // \"after\", 2\n * // \"after\", 3\n *\n * // But with queue it logs:\n * // \"before\", 3\n * // \"after\", 3\n * // \"before\", 2\n * // \"after\", 2\n * // \"before\", 1\n * // \"after\", 1\n *\n *\n * @static true\n * @name queue\n * @owner Scheduler\n */\n\nexport const queue = new QueueScheduler(QueueAction);\n","import { AsyncScheduler } from './AsyncScheduler';\n\nexport class QueueScheduler extends AsyncScheduler {\n}\n","/**\n * @copyright ngrx\n */\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { Observable } from 'rxjs/Observable';\nimport { Action, ActionReducer } from './index';\nimport { observeOn } from 'rxjs/operator/observeOn';\nimport { queue } from 'rxjs/scheduler/queue';\nimport { scan } from 'rxjs/operator/scan';\n\nexport class MiniState<T> extends BehaviorSubject<T> {\n  constructor(\n    _initialState: T,\n    actionsDispatcher$: Observable<Action>,\n    reducer: ActionReducer<T>\n  ) {\n    super(_initialState);\n\n    const actionInQueue$ = observeOn.call(actionsDispatcher$, queue);\n    const state$ = scan.call(\n      actionInQueue$,\n      (state: T, action: Action) => {\n        if (!action) {\n          return state;\n        }\n\n        return reducer(state, action);\n      },\n      _initialState\n    );\n\n    state$.subscribe((value: T) => this.next(value));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  timepickerReducer,\n  TimepickerState,\n  initialState\n} from './timepicker.reducer';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\n\nimport { Action } from '../../mini-ngrx/index';\nimport { MiniStore } from '../../mini-ngrx/store.class';\nimport { MiniState } from '../../mini-ngrx/state.class';\n\n\nexport class TimepickerStore extends MiniStore<TimepickerState> {\n  constructor() {\n    const _dispatcher = new BehaviorSubject<Action>({\n      type: '[mini-ngrx] dispatcher init'\n    });\n    const state = new MiniState<TimepickerState>(\n      initialState,\n      _dispatcher,\n      timepickerReducer\n    );\n    super(_dispatcher, timepickerReducer, state);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/* tslint:disable:no-forward-ref max-file-line-count */\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  forwardRef,\n  Input,\n  OnChanges,\n  Output,\n  SimpleChanges, ViewEncapsulation\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nimport { TimepickerActions } from './reducer/timepicker.actions';\nimport { TimepickerStore } from './reducer/timepicker.store';\nimport { getControlsValue } from './timepicker-controls.util';\nimport { TimepickerConfig } from './timepicker.config';\nimport {\n  TimeChangeSource,\n  TimepickerComponentState,\n  TimepickerControls\n} from './timepicker.models';\nimport {\n  isValidDate,\n  padNumber,\n  parseTime,\n  isInputValid\n} from './timepicker.utils';\nimport { fakeAsync } from '@angular/core/testing';\n\nexport const TIMEPICKER_CONTROL_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  // tslint:disable-next-line\n  useExisting: forwardRef(() => TimepickerComponent),\n  multi: true\n};\n\n\nexport class TimepickerComponent\n  implements ControlValueAccessor,\n    TimepickerComponentState,\n    TimepickerControls,\n    OnChanges {\n  /** hours change step */\n   hourStep: number;\n  /** hours change step */\n   minuteStep: number;\n  /** seconds change step */\n   secondsStep: number;\n  /** if true hours and minutes fields will be readonly */\n   readonlyInput: boolean;\n  /** if true scroll inside hours and minutes inputs will change time */\n   mousewheel: boolean;\n  /** if true up/down arrowkeys inside hours and minutes inputs will change time */\n   arrowkeys: boolean;\n  /** if true spinner arrows above and below the inputs will be shown */\n   showSpinners: boolean;\n   showMeridian: boolean;\n   showSeconds: boolean;\n\n  /** meridian labels based on locale */\n   meridians: string[];\n\n  /** minimum time user can select */\n   min: Date;\n  /** maximum time user can select */\n   max: Date;\n\n  /** emits true if value is a valid date */\n   isValid: EventEmitter<boolean> = new EventEmitter();\n\n  // ui variables\n  hours: string;\n  minutes: string;\n  seconds: string;\n  meridian: string;\n\n  get isSpinnersVisible(): boolean {\n    return this.showSpinners && !this.readonlyInput;\n  }\n\n  // min\\max validation for input fields\n  invalidHours = false;\n  invalidMinutes = false;\n  invalidSeconds = false;\n\n  // time picker controls state\n  canIncrementHours: boolean;\n  canIncrementMinutes: boolean;\n  canIncrementSeconds: boolean;\n\n  canDecrementHours: boolean;\n  canDecrementMinutes: boolean;\n  canDecrementSeconds: boolean;\n\n  // control value accessor methods\n  onChange: any = Function.prototype;\n  onTouched: any = Function.prototype;\n\n  constructor(\n    _config: TimepickerConfig,\n    _cd: ChangeDetectorRef,\n    private _store: TimepickerStore,\n    private _timepickerActions: TimepickerActions\n  ) {\n    Object.assign(this, _config);\n    // todo: add unsubscribe\n    _store.select(state => state.value).subscribe(value => {\n      // update UI values if date changed\n      this._renderTime(value);\n      this.onChange(value);\n\n      this._store.dispatch(\n        this._timepickerActions.updateControls(getControlsValue(this))\n      );\n    });\n\n    _store.select(state => state.controls).subscribe(controlsState => {\n      this.isValid.emit(\n        isInputValid(this.hours, this.minutes, this.seconds, this.isPM())\n      );\n      Object.assign(this, controlsState);\n      _cd.markForCheck();\n    });\n  }\n\n  isPM(): boolean {\n    return this.showMeridian && this.meridian === this.meridians[1];\n  }\n\n  prevDef($event: any) {\n    $event.preventDefault();\n  }\n\n  wheelSign($event: any): number {\n    return Math.sign($event.deltaY as number) * -1;\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this._store.dispatch(\n      this._timepickerActions.updateControls(getControlsValue(this))\n    );\n  }\n\n  changeHours(step: number, source: TimeChangeSource = ''): void {\n    this._store.dispatch(this._timepickerActions.changeHours({ step, source }));\n  }\n\n  changeMinutes(step: number, source: TimeChangeSource = ''): void {\n    this._store.dispatch(\n      this._timepickerActions.changeMinutes({ step, source })\n    );\n  }\n\n  changeSeconds(step: number, source: TimeChangeSource = ''): void {\n    this._store.dispatch(\n      this._timepickerActions.changeSeconds({ step, source })\n    );\n  }\n\n  updateHours(hours: string): void {\n    this.hours = hours;\n    this._updateTime();\n  }\n\n  updateMinutes(minutes: string) {\n    this.minutes = minutes;\n    this._updateTime();\n  }\n\n  updateSeconds(seconds: string) {\n    this.seconds = seconds;\n    this._updateTime();\n  }\n\n  _updateTime() {\n    const _seconds = this.showSeconds ? this.seconds : void 0;\n    if (!isInputValid(this.hours, this.minutes, _seconds, this.isPM())) {\n      this.isValid.emit(false);\n      this.onChange(null);\n\n      return;\n    }\n    this._store.dispatch(\n      this._timepickerActions.setTime({\n        hour: this.hours,\n        minute: this.minutes,\n        seconds: this.seconds,\n        isPM: this.isPM()\n      })\n    );\n  }\n\n  toggleMeridian(): void {\n    if (!this.showMeridian || this.readonlyInput) {\n      return;\n    }\n\n    const _hoursPerDayHalf = 12;\n    this._store.dispatch(\n      this._timepickerActions.changeHours({\n        step: _hoursPerDayHalf,\n        source: ''\n      })\n    );\n  }\n\n  /**\n   * Write a new value to the element.\n   */\n  writeValue(obj: any): void {\n    if (isValidDate(obj)) {\n      this._store.dispatch(this._timepickerActions.writeValue(parseTime(obj)));\n    } else if (obj == null) {\n      this._store.dispatch(this._timepickerActions.writeValue(null));\n    }\n  }\n\n  /**\n   * Set the function to be called when the control receives a change event.\n   */\n  registerOnChange(fn: (_: any) => {}): void {\n    this.onChange = fn;\n  }\n\n  /**\n   * Set the function to be called when the control receives a touch event.\n   */\n  registerOnTouched(fn: () => {}): void {\n    this.onTouched = fn;\n  }\n\n  /**\n   * This function is called when the control status changes to or from \"DISABLED\".\n   * Depending on the value, it will enable or disable the appropriate DOM element.\n   *\n   * @param isDisabled\n   */\n  setDisabledState(isDisabled: boolean): void {\n    this.readonlyInput = isDisabled;\n  }\n\n  private _renderTime(value: string | Date): void {\n    if (!isValidDate(value)) {\n      this.hours = '';\n      this.minutes = '';\n      this.seconds = '';\n      this.meridian = this.meridians[0];\n\n      return;\n    }\n\n    const _value = parseTime(value);\n    const _hoursPerDayHalf = 12;\n    let _hours = _value.getHours();\n\n    if (this.showMeridian) {\n      this.meridian = this.meridians[_hours >= _hoursPerDayHalf ? 1 : 0];\n      _hours = _hours % _hoursPerDayHalf;\n      // should be 12 PM, not 00 PM\n      if (_hours === 0) {\n        _hours = _hoursPerDayHalf;\n      }\n    }\n\n    this.hours = padNumber(_hours);\n    this.minutes = padNumber(_value.getMinutes());\n    this.seconds = padNumber(_value.getUTCSeconds());\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'timepicker',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [TIMEPICKER_CONTROL_VALUE_ACCESSOR, TimepickerStore],\n  template: \"<table> <tbody> <tr class=\\\"text-center\\\" [class.hidden]=\\\"!isSpinnersVisible\\\"> <!-- increment hours button--> <td> <a class=\\\"btn btn-link\\\" [class.disabled]=\\\"!canIncrementHours\\\" (click)=\\\"changeHours(hourStep)\\\" ><span class=\\\"bs-chevron bs-chevron-up\\\"></span></a> </td> <!-- divider --> <td>&nbsp;&nbsp;&nbsp;</td> <!-- increment minutes button --> <td> <a class=\\\"btn btn-link\\\" [class.disabled]=\\\"!canIncrementMinutes\\\" (click)=\\\"changeMinutes(minuteStep)\\\" ><span class=\\\"bs-chevron bs-chevron-up\\\"></span></a> </td> <!-- divider --> <td *ngIf=\\\"showSeconds\\\">&nbsp;</td> <!-- increment seconds button --> <td *ngIf=\\\"showSeconds\\\"> <a class=\\\"btn btn-link\\\" [class.disabled]=\\\"!canIncrementSeconds\\\" (click)=\\\"changeSeconds(secondsStep)\\\"> <span class=\\\"bs-chevron bs-chevron-up\\\"></span> </a> </td> <!-- space between --> <td>&nbsp;&nbsp;&nbsp;</td> <!-- meridian placeholder--> <td *ngIf=\\\"showMeridian\\\"></td> </tr> <tr> <!-- hours --> <td class=\\\"form-group\\\" [class.has-error]=\\\"invalidHours\\\"> <input type=\\\"text\\\" class=\\\"form-control text-center bs-timepicker-field\\\" placeholder=\\\"HH\\\" maxlength=\\\"2\\\" [readonly]=\\\"readonlyInput\\\" [value]=\\\"hours\\\" (wheel)=\\\"prevDef($event);changeHours(hourStep * wheelSign($event), 'wheel')\\\" (keydown.ArrowUp)=\\\"changeHours(hourStep, 'key')\\\" (keydown.ArrowDown)=\\\"changeHours(-hourStep, 'key')\\\" (change)=\\\"updateHours($event.target.value)\\\"></td> <!-- divider --> <td>&nbsp;:&nbsp;</td> <!-- minutes --> <td class=\\\"form-group\\\" [class.has-error]=\\\"invalidMinutes\\\"> <input type=\\\"text\\\" class=\\\"form-control text-center bs-timepicker-field\\\" placeholder=\\\"MM\\\" maxlength=\\\"2\\\" [readonly]=\\\"readonlyInput\\\" [value]=\\\"minutes\\\" (wheel)=\\\"prevDef($event);changeMinutes(minuteStep * wheelSign($event), 'wheel')\\\" (keydown.ArrowUp)=\\\"changeMinutes(minuteStep, 'key')\\\" (keydown.ArrowDown)=\\\"changeMinutes(-minuteStep, 'key')\\\" (change)=\\\"updateMinutes($event.target.value)\\\"> </td> <!-- divider --> <td *ngIf=\\\"showSeconds\\\">&nbsp;:&nbsp;</td> <!-- seconds --> <td class=\\\"form-group\\\" *ngIf=\\\"showSeconds\\\" [class.has-error]=\\\"invalidSeconds\\\"> <input type=\\\"text\\\" class=\\\"form-control text-center bs-timepicker-field\\\" placeholder=\\\"SS\\\" maxlength=\\\"2\\\" [readonly]=\\\"readonlyInput\\\" [value]=\\\"seconds\\\" (wheel)=\\\"prevDef($event);changeSeconds(secondsStep * wheelSign($event), 'wheel')\\\" (keydown.ArrowUp)=\\\"changeSeconds(secondsStep, 'key')\\\" (keydown.ArrowDown)=\\\"changeSeconds(-secondsStep, 'key')\\\" (change)=\\\"updateSeconds($event.target.value)\\\"> </td> <!-- space between --> <td>&nbsp;&nbsp;&nbsp;</td> <!-- meridian --> <td *ngIf=\\\"showMeridian\\\"> <button type=\\\"button\\\" class=\\\"btn btn-default text-center\\\" [disabled]=\\\"readonlyInput\\\" [class.disabled]=\\\"readonlyInput\\\" (click)=\\\"toggleMeridian()\\\" >{{ meridian }} </button> </td> </tr> <tr class=\\\"text-center\\\" [class.hidden]=\\\"!isSpinnersVisible\\\"> <!-- decrement hours button--> <td> <a class=\\\"btn btn-link\\\" [class.disabled]=\\\"!canDecrementHours\\\" (click)=\\\"changeHours(-hourStep)\\\"> <span class=\\\"bs-chevron bs-chevron-down\\\"></span> </a> </td> <!-- divider --> <td>&nbsp;&nbsp;&nbsp;</td> <!-- decrement minutes button--> <td> <a class=\\\"btn btn-link\\\" [class.disabled]=\\\"!canDecrementMinutes\\\" (click)=\\\"changeMinutes(-minuteStep)\\\"> <span class=\\\"bs-chevron bs-chevron-down\\\"></span> </a> </td> <!-- divider --> <td *ngIf=\\\"showSeconds\\\">&nbsp;</td> <!-- decrement seconds button--> <td *ngIf=\\\"showSeconds\\\"> <a class=\\\"btn btn-link\\\" [class.disabled]=\\\"!canDecrementSeconds\\\" (click)=\\\"changeSeconds(-secondsStep)\\\"> <span class=\\\"bs-chevron bs-chevron-down\\\"></span> </a> </td> <!-- space between --> <td>&nbsp;&nbsp;&nbsp;</td> <!-- meridian placeholder--> <td *ngIf=\\\"showMeridian\\\"></td> </tr> </tbody> </table> \",\n  styles: [`\n    .bs-chevron{\n      border-style: solid;\n      display: block;\n      width: 9px;\n      height: 9px;\n      position: relative;\n      border-width: 3px 0px 0 3px;\n    }\n    .bs-chevron-up{\n      -webkit-transform: rotate(45deg);\n      transform: rotate(45deg);\n      top: 2px;\n    }\n    .bs-chevron-down{\n      -webkit-transform: rotate(-135deg);\n      transform: rotate(-135deg);\n      top: -2px;\n    }\n    .bs-timepicker-field{\n      width: 50px;\n    }\n  `],\n  encapsulation: ViewEncapsulation.None\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: TimepickerConfig, },\n{type: ChangeDetectorRef, },\n{type: TimepickerStore, },\n{type: TimepickerActions, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'hourStep': [{ type: Input },],\n'minuteStep': [{ type: Input },],\n'secondsStep': [{ type: Input },],\n'readonlyInput': [{ type: Input },],\n'mousewheel': [{ type: Input },],\n'arrowkeys': [{ type: Input },],\n'showSpinners': [{ type: Input },],\n'showMeridian': [{ type: Input },],\n'showSeconds': [{ type: Input },],\n'meridians': [{ type: Input },],\n'min': [{ type: Input },],\n'max': [{ type: Input },],\n'isValid': [{ type: Output },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { ModuleWithProviders, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { TimepickerComponent } from './timepicker.component';\nimport { TimepickerActions } from './reducer/timepicker.actions';\nimport { TimepickerConfig } from './timepicker.config';\nimport { TimepickerStore } from './reducer/timepicker.store';\n\n\nexport class TimepickerModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: TimepickerModule,\n      providers: [TimepickerConfig, TimepickerActions, TimepickerStore]\n    };\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  imports: [CommonModule],\n  declarations: [TimepickerComponent],\n  exports: [TimepickerComponent]\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","// tslint:disable:no-use-before-declare\nimport {\n  Directive,\n  HostBinding,\n  HostListener,\n  Input,\n  OnInit,\n  forwardRef\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\n// TODO: config: activeClass - Class to apply to the checked buttons\n\nexport const CHECKBOX_CONTROL_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => ButtonCheckboxDirective),\n  multi: true\n};\n\n/**\n * Add checkbox functionality to any element\n */\n\nexport class ButtonCheckboxDirective implements ControlValueAccessor, OnInit {\n  /** Truthy value, will be set to ngModel */\n   btnCheckboxTrue: any = true;\n  /** Falsy value, will be set to ngModel */\n   btnCheckboxFalse: any = false;\n\n   state = false;\n\n  protected value: any;\n  protected isDisabled: boolean;\n\n  protected onChange: any = Function.prototype;\n  protected onTouched: any = Function.prototype;\n\n  // view -> model\n  \n  onClick(): void {\n    if (this.isDisabled) {\n      return;\n    }\n\n    this.toggle(!this.state);\n    this.onChange(this.value);\n  }\n\n  ngOnInit(): any {\n    this.toggle(this.trueValue === this.value);\n  }\n\n  protected get trueValue(): boolean {\n    return typeof this.btnCheckboxTrue !== 'undefined'\n      ? this.btnCheckboxTrue\n      : true;\n  }\n\n  protected get falseValue(): boolean {\n    return typeof this.btnCheckboxFalse !== 'undefined'\n      ? this.btnCheckboxFalse\n      : false;\n  }\n\n  toggle(state: boolean): void {\n    this.state = state;\n    this.value = this.state ? this.trueValue : this.falseValue;\n  }\n\n  // ControlValueAccessor\n  // model -> view\n  writeValue(value: any): void {\n    this.state = this.trueValue === value;\n    this.value = value ? this.trueValue : this.falseValue;\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.isDisabled = isDisabled;\n  }\n\n  registerOnChange(fn: (_: any) => {}): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: () => {}): void {\n    this.onTouched = fn;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[btnCheckbox]',\n  providers: [CHECKBOX_CONTROL_VALUE_ACCESSOR]\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'btnCheckboxTrue': [{ type: Input },],\n'btnCheckboxFalse': [{ type: Input },],\n'state': [{ type: HostBinding, args: ['class.active', ] },],\n'onClick': [{ type: HostListener, args: ['click', ] },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","// tslint:disable:no-use-before-declare\nimport {\n  ChangeDetectorRef, Directive, ElementRef, forwardRef, HostBinding,\n  HostListener, Input, OnInit\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nexport const RADIO_CONTROL_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => ButtonRadioDirective),\n  multi: true\n};\n\n/**\n * Create radio buttons or groups of buttons.\n * A value of a selected button is bound to a variable specified via ngModel.\n */\n\nexport class ButtonRadioDirective implements ControlValueAccessor, OnInit {\n  onChange: any = Function.prototype;\n  onTouched: any = Function.prototype;\n\n  /** Radio button value, will be set to `ngModel` */\n   btnRadio: any;\n  /** If `true` — radio button can be unchecked */\n   uncheckable: boolean;\n  /** Current value of radio component or group */\n   value: any;\n\n  \n  get isActive(): boolean {\n    return this.btnRadio === this.value;\n  }\n\n  constructor(private el: ElementRef, private cdr: ChangeDetectorRef) {\n  }\n\n  \n  onClick(): void {\n    if (this.el.nativeElement.attributes.disabled) {\n      return;\n    }\n\n    if (this.uncheckable && this.btnRadio === this.value) {\n      this.value = undefined;\n      this.onTouched();\n      this.onChange(this.value);\n\n      return;\n    }\n\n    if (this.btnRadio !== this.value) {\n      this.value = this.btnRadio;\n      this.onTouched();\n      this.onChange(this.value);\n    }\n  }\n\n  ngOnInit(): void {\n    this.uncheckable = typeof this.uncheckable !== 'undefined';\n  }\n\n  onBlur(): void {\n    this.onTouched();\n  }\n\n  // ControlValueAccessor\n  // model -> view\n  writeValue(value: any): void {\n    this.value = value;\n    this.cdr.markForCheck();\n  }\n\n  registerOnChange(fn: any): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this.onTouched = fn;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[btnRadio]',\n  providers: [RADIO_CONTROL_VALUE_ACCESSOR]\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: ChangeDetectorRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'btnRadio': [{ type: Input },],\n'uncheckable': [{ type: Input },],\n'value': [{ type: Input },],\n'isActive': [{ type: HostBinding, args: ['class.active', ] },],\n'onClick': [{ type: HostListener, args: ['click', ] },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\n\nimport { ButtonCheckboxDirective } from './button-checkbox.directive';\nimport { ButtonRadioDirective } from './button-radio.directive';\n\n\nexport class ButtonsModule {\n  static forRoot(): ModuleWithProviders {\n    return { ngModule: ButtonsModule, providers: [] };\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  declarations: [ButtonCheckboxDirective, ButtonRadioDirective],\n  exports: [ButtonCheckboxDirective, ButtonRadioDirective]\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * Add a config service to allow an application\n * to customize the date time picker default settings\n * across the entire application\n */\n\n\nimport { Injectable } from '@angular/core';\nimport { weekdaysShort } from './date-time-picker.utils';\nimport { DateTimePickerTimezone } from './time-view/time-view.component';\nexport class DateTimePickerConfig {\n\n    showDate: boolean = true;\n    showTime: boolean = true;\n    showTimezone: boolean = true;\n    showSeconds: boolean = false;\n    showMeridian: boolean = true;\n    showSpinners: boolean = true;\n    weekdays: string[] = weekdaysShort;\n    nowBtnText: string = 'Today';\n\n    timezones: DateTimePickerTimezone[] = [\n        { name: 'GMT-11', offset: -660 },\n        { name: 'GMT-10', offset: -600 },\n        { name: 'GMT-9', offset: -540 },\n        { name: 'GMT-8', offset: -480 },\n        { name: 'GMT-7', offset: -420 },\n        { name: 'GMT-6', offset: -360 },\n        { name: 'GMT-5', offset: -300 },\n        { name: 'GMT-4', offset: -240 },\n        { name: 'GMT-3', offset: -180 },\n        { name: 'GMT-2', offset: -12 },\n        { name: 'GMT-1', offset: -60 },\n        { name: 'GMT', offset: 0 },\n        { name: 'GMT+1', offset: 60 },\n        { name: 'GMT+2', offset: 120 },\n        { name: 'GMT+3', offset: 180 },\n        { name: 'GMT+4', offset: 240 },\n        { name: 'GMT+5', offset: 300 },\n        { name: 'GMT+6', offset: 360 },\n        { name: 'GMT+7', offset: 420 },\n        { name: 'GMT+8', offset: 480 },\n        { name: 'GMT+9', offset: 540 },\n        { name: 'GMT+10', offset: 600 },\n        { name: 'GMT+11', offset: 660 },\n        { name: 'GMT+12', offset: 720 }\n    ];\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction DateTimePickerConfig_tsickle_Closure_declarations() {\n/** @type {?} */\nDateTimePickerConfig.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDateTimePickerConfig.ctorParameters;\n/** @type {?} */\nDateTimePickerConfig.prototype.showDate;\n/** @type {?} */\nDateTimePickerConfig.prototype.showTime;\n/** @type {?} */\nDateTimePickerConfig.prototype.showTimezone;\n/** @type {?} */\nDateTimePickerConfig.prototype.showSeconds;\n/** @type {?} */\nDateTimePickerConfig.prototype.showMeridian;\n/** @type {?} */\nDateTimePickerConfig.prototype.showSpinners;\n/** @type {?} */\nDateTimePickerConfig.prototype.weekdays;\n/** @type {?} */\nDateTimePickerConfig.prototype.nowBtnText;\n/** @type {?} */\nDateTimePickerConfig.prototype.timezones;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Input, Output, EventEmitter, ViewChild } from '@angular/core';\nimport { DateTimePickerTimeViewComponent, DateTimePickerTimezone } from './time-view/time-view.component';\nimport { weekdaysShort } from './date-time-picker.utils';\nimport { DateTimePickerConfig } from './date-time-picker.config';\nexport class DateTimePickerComponent {\n\n   timePickerComponent: DateTimePickerTimeViewComponent;\n\n  activeDate: Date = new Date();\n  month: number = new Date().getMonth();\n  year: number = new Date().getFullYear();\nprivate _date: Date = new Date();\nprivate _timezone: DateTimePickerTimezone;\n\n   showDate: boolean = this._config.showDate;\n   showTime: boolean = this._config.showTime;\n   showTimezone: boolean = this._config.showTimezone;\n   showSeconds: boolean = this._config.showSeconds;\n   showMeridian: boolean = this._config.showMeridian;\n   showSpinners: boolean = this._config.showSpinners;\n   weekdays: string[] = this._config.weekdays;\n   nowBtnText: string = this._config.nowBtnText;\n   timezones: DateTimePickerTimezone[] = this._config.timezones;\n\n   dateChange: EventEmitter<Date> = new EventEmitter<Date>();\n   timezoneChange: EventEmitter<DateTimePickerTimezone> = new EventEmitter<DateTimePickerTimezone>();\n/**\n * @param {?} value\n * @return {?}\n */\nset date(value: Date) {\n    this._date = new Date(value);\n\n    // update the month and year\n    this.month = this._date.getMonth();\n    this.year = this._date.getFullYear();\n\n    // set the active date to the new date\n    this.activeDate = new Date(value);\n  }\n/**\n * @return {?}\n */\nget date(): Date {\n    return this._date;\n  }\n/**\n * @param {?} value\n * @return {?}\n */\nset timezone(value: DateTimePickerTimezone) {\n    const /** @type {?} */ timezone = this.timezones.find(zone => zone.offset === value.offset);\n\n    // only update if the timezone is valid\n    if (timezone) {\n      this._timezone = timezone;\n    }\n  }\n/**\n * @return {?}\n */\nget timezone(): DateTimePickerTimezone {\n    return this._timezone;\n  }\n\n\n  mode: DatePickerMode = DatePickerMode.Day;\n\n  // expose enum to view\n  DatePickerMode = DatePickerMode;\n/**\n * @param {?} _config\n */\nconstructor(private _config: DateTimePickerConfig) { }\n/**\n * This will emit the newly selected date\n * @return {?}\n */\ncommit(): void {\n    this.dateChange.emit(this.activeDate);\n  }\n/**\n * Change the date to the current date and time\n * @return {?}\n */\nsetToNow(): void {\n\n    // set the date to the current moment\n    this.date = new Date();\n\n    // reset the timezone to the default\n    if (this.timePickerComponent) {\n      this.timePickerComponent.setDefaultTimezone();\n    }\n\n    // emit the changes\n    this.commit();\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'ux-date-time-picker',\n  template: `\n    <div class=\"calendar-container\">\n\n      <ng-container *ngIf=\"showDate\" [ngSwitch]=\"mode\">\n\n        <!-- Display days in the current month -->\n        <ux-date-time-picker-day-view *ngSwitchCase=\"DatePickerMode.Day\" [(date)]=\"activeDate\" [(month)]=\"month\" [(year)]=\"year\" [weekdays]=\"weekdays\" (dateChange)=\"commit()\" (ascend)=\"mode = DatePickerMode.Month\"></ux-date-time-picker-day-view>\n  \n        <!-- Display the months in the current year -->\n        <ux-date-time-picker-month-view *ngSwitchCase=\"DatePickerMode.Month\" [date]=\"activeDate\" [(month)]=\"month\" [(year)]=\"year\" (monthChange)=\"mode = DatePickerMode.Day\" (ascend)=\"mode = DatePickerMode.Year\"></ux-date-time-picker-month-view>\n  \n        <!-- Display a decade -->\n        <ux-date-time-picker-year-view *ngSwitchCase=\"DatePickerMode.Year\" [(year)]=\"year\" (yearChange)=\"mode = DatePickerMode.Month\"></ux-date-time-picker-year-view>\n  \n      </ng-container>\n\n      <!-- Display a Time Picker -->\n      <ux-date-time-picker-time-view *ngIf=\"showTime\" #timePicker [(date)]=\"activeDate\" (dateChange)=\"commit()\" [showSpinners]=\"showSpinners\" [showTimezone]=\"showTimezone\" [showSeconds]=\"showSeconds\" [showMeridian]=\"showMeridian\" (dateChange)=\"commit()\" [timezone]=\"timezone\" (timezoneChange)=\"timezoneChange.emit($event)\" [timezones]=\"timezones\"></ux-date-time-picker-time-view>\n\n    </div>\n\n    <button class=\"now-button\" (click)=\"setToNow()\">{{ nowBtnText }}</button>\n  `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: DateTimePickerConfig, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'timePickerComponent': [{ type: ViewChild, args: ['timePicker', ] },],\n'showDate': [{ type: Input },],\n'showTime': [{ type: Input },],\n'showTimezone': [{ type: Input },],\n'showSeconds': [{ type: Input },],\n'showMeridian': [{ type: Input },],\n'showSpinners': [{ type: Input },],\n'weekdays': [{ type: Input },],\n'nowBtnText': [{ type: Input },],\n'timezones': [{ type: Input },],\n'dateChange': [{ type: Output },],\n'timezoneChange': [{ type: Output },],\n'date': [{ type: Input },],\n'timezone': [{ type: Input },],\n};\n}\n\nfunction DateTimePickerComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nDateTimePickerComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDateTimePickerComponent.ctorParameters;\n/** @type {?} */\nDateTimePickerComponent.propDecorators;\n/** @type {?} */\nDateTimePickerComponent.prototype.timePickerComponent;\n/** @type {?} */\nDateTimePickerComponent.prototype.activeDate;\n/** @type {?} */\nDateTimePickerComponent.prototype.month;\n/** @type {?} */\nDateTimePickerComponent.prototype.year;\n/** @type {?} */\nDateTimePickerComponent.prototype._date;\n/** @type {?} */\nDateTimePickerComponent.prototype._timezone;\n/** @type {?} */\nDateTimePickerComponent.prototype.showDate;\n/** @type {?} */\nDateTimePickerComponent.prototype.showTime;\n/** @type {?} */\nDateTimePickerComponent.prototype.showTimezone;\n/** @type {?} */\nDateTimePickerComponent.prototype.showSeconds;\n/** @type {?} */\nDateTimePickerComponent.prototype.showMeridian;\n/** @type {?} */\nDateTimePickerComponent.prototype.showSpinners;\n/** @type {?} */\nDateTimePickerComponent.prototype.weekdays;\n/** @type {?} */\nDateTimePickerComponent.prototype.nowBtnText;\n/** @type {?} */\nDateTimePickerComponent.prototype.timezones;\n/** @type {?} */\nDateTimePickerComponent.prototype.dateChange;\n/** @type {?} */\nDateTimePickerComponent.prototype.timezoneChange;\n/** @type {?} */\nDateTimePickerComponent.prototype.mode;\n/** @type {?} */\nDateTimePickerComponent.prototype.DatePickerMode;\n/** @type {?} */\nDateTimePickerComponent.prototype._config;\n}\n\nexport type DatePickerMode = number;\nexport let DatePickerMode: any = {};\nDatePickerMode.Day = 0;\nDatePickerMode.Month = 1;\nDatePickerMode.Year = 2;\nDatePickerMode[DatePickerMode.Day] = \"Day\";\nDatePickerMode[DatePickerMode.Month] = \"Month\";\nDatePickerMode[DatePickerMode.Year] = \"Year\";\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { dateRange, gridify, compareDays, months, weekdaysShort } from '../date-time-picker.utils';\nexport class DateTimePickerDayViewComponent {\n\n  header: string;\n  days: DatePickerDay[][] = [];\nprivate _date: Date;\n\n   month: number = new Date().getMonth();\n   year: number = new Date().getFullYear();\n   weekdays: string[] = weekdaysShort;\n   ascend: EventEmitter<void> = new EventEmitter<void>();\n   dateChange: EventEmitter<Date> = new EventEmitter<Date>();\n   monthChange: EventEmitter<number> = new EventEmitter<number>();\n   yearChange: EventEmitter<number> = new EventEmitter<number>();\n/**\n * @param {?} value\n * @return {?}\n */\nset date(value: Date) {\n    this._date = value;\n    \n    // update the month and year\n    this.month = this._date.getMonth();\n    this.year = this._date.getFullYear();\n\n    // emit the changes\n    this.monthChange.emit(this.month);\n    this.yearChange.emit(this.year);\n\n    this.update();\n  }\n/**\n * @return {?}\n */\nget date(): Date {\n    return this._date;\n  }\n/**\n * Navigate to the previous page of dates\n * @return {?}\n */\nprevious(): void {\n\n    // update the month\n    this.month--;\n\n    // if the month is now the previous year take that into account\n    if (this.month < 0) {\n      this.month = 11;\n      this.year--;\n    }\n\n    // emit the changes\n    this.monthChange.emit(this.month);\n    this.yearChange.emit(this.year);\n\n    // update the grid\n    this.update();\n  }\n/**\n * Navigate to the next page of dates\n * @return {?}\n */\nnext(): void {\n\n    // update the month\n    this.month++;\n\n    // if the month is now the previous year take that into account\n    if (this.month > 11) {\n      this.month = 0;\n      this.year++;\n    }\n\n    // emit the changes\n    this.monthChange.emit(this.month);\n    this.yearChange.emit(this.year);\n\n    // update the grid\n    this.update();\n  }\n/**\n * Updates the grid of all the days in the month\n * @return {?}\n */\nupdate(): void {\n\n    // find the lower and upper boundaries\n    const /** @type {?} */ start = new Date(this.year, this.month, 1);\n    const /** @type {?} */ end = new Date(this.year, this.month + 1, 0);\n\n    // we always want to show from the sunday - this may include showing some dates from the previous month\n    start.setDate(start.getDate() - start.getDay());\n\n    // we also want to make sure that the range ends on a saturday\n    end.setDate(end.getDate() + (6 - end.getDay()));\n\n    // create an array of all the days to display\n    const /** @type {?} */ dates = dateRange(start, end);\n\n    // update the page header\n    this.header = `${months[this.month]} ${this.year}`;\n\n    // turn the dates into a grid\n    this.days = gridify(dates, 7).map(week => week.map(date => ({\n      date: date,\n      today: this.isToday(date),\n      active: this.isActive(date),\n      currentMonth: this.isCurrentMonth(date)\n    })));\n  }\n/**\n * Select a particular date\n * @param {?} date the date to select\n * @return {?}\n */\nselect(date: Date): void {\n    // update the current date object\n    this._date = new Date(date);\n\n    // emit the new date\n    this.dateChange.emit(this._date);\n  }\n/**\n * Determine whether or not a specific date is today\n * @param {?} date The date to check\n * @return {?}\n */\nisToday(date: Date): boolean {\n    return compareDays(new Date(), date);\n  }\n/**\n * Determines whether or not a specific date is the selected one\n * @param {?} date the date to check\n * @return {?}\n */\nisActive(date: Date): boolean {\n    return compareDays(this.date, date);\n  }\n/**\n * Determine whether or not a date is within the current month\n * or is it part of another month being show to fill the grid\n * @param {?} date The date in question\n * @return {?}\n */\nisCurrentMonth(date: Date): boolean {\n    return date.getMonth() === this.month;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'ux-date-time-picker-day-view',\n  template: `\n    <ux-date-time-picker-header [header]=\"header\" (previous)=\"previous()\" (next)=\"next()\" (ascend)=\"ascend.emit()\"></ux-date-time-picker-header>\n\n    <table class=\"calendar\">\n      <thead>\n        <tr>\n          <th *ngFor=\"let day of weekdays\" class=\"weekday\">{{ day }}</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        <tr *ngFor=\"let row of days\">\n          <td *ngFor=\"let day of row\" class=\"date-cell\" [class.current]=\"day.today\" \n            [class.active]=\"day.active\" [class.preview]=\"!day.currentMonth\" \n            (click)=\"select(day.date)\" (keyup.enter)=\"select(day.date)\" \n            tabindex=\"0\">{{ day.date.getDate() }}</td>\n        </tr>\n      </tbody>\n    </table>\n  `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'month': [{ type: Input },],\n'year': [{ type: Input },],\n'weekdays': [{ type: Input },],\n'ascend': [{ type: Output },],\n'dateChange': [{ type: Output },],\n'monthChange': [{ type: Output },],\n'yearChange': [{ type: Output },],\n'date': [{ type: Input },],\n};\n}\n\nfunction DateTimePickerDayViewComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nDateTimePickerDayViewComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDateTimePickerDayViewComponent.ctorParameters;\n/** @type {?} */\nDateTimePickerDayViewComponent.propDecorators;\n/** @type {?} */\nDateTimePickerDayViewComponent.prototype.header;\n/** @type {?} */\nDateTimePickerDayViewComponent.prototype.days;\n/** @type {?} */\nDateTimePickerDayViewComponent.prototype._date;\n/** @type {?} */\nDateTimePickerDayViewComponent.prototype.month;\n/** @type {?} */\nDateTimePickerDayViewComponent.prototype.year;\n/** @type {?} */\nDateTimePickerDayViewComponent.prototype.weekdays;\n/** @type {?} */\nDateTimePickerDayViewComponent.prototype.ascend;\n/** @type {?} */\nDateTimePickerDayViewComponent.prototype.dateChange;\n/** @type {?} */\nDateTimePickerDayViewComponent.prototype.monthChange;\n/** @type {?} */\nDateTimePickerDayViewComponent.prototype.yearChange;\n}\n\n\nexport interface DatePickerDay {\n  date: Date;\n  today: boolean;\n  active: boolean;\n  currentMonth: boolean;\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { gridify, range, monthsShort } from '../date-time-picker.utils';\nexport class DateTimePickerMonthViewComponent {\n\n\n   date: Date = new Date();\n   year: number = new Date().getFullYear();\n   month: number = new Date().getMonth();\n\n   monthChange: EventEmitter<number> = new EventEmitter<number>();\n   yearChange: EventEmitter<number> = new EventEmitter<number>();\n   ascend: EventEmitter<void> = new EventEmitter<void>();\n\n  months: number[][] = gridify(range(0, 11), 4);\n  currentDate: Date = new Date();\n/**\n * Go to the previous year and emit the change\n * @return {?}\n */\nprevious(): void {\n    this.yearChange.emit(--this.year);\n  }\n/**\n * Go to the next year and emit the change\n * @return {?}\n */\nnext(): void {\n    this.yearChange.emit(++this.year);\n  }\n/**\n * Select a month in the calendar\n * @param {?} month the index of the month to select\n * @return {?}\n */\nselect(month: number): void {\n\n    // store the new month\n    this.month = month;\n\n    // emit the changes\n    this.monthChange.emit(this.month);\n    this.yearChange.emit(this.year);\n  }\n/**\n * Get the name of a month\n * @param {?} month the month in question\n * @return {?}\n */\ngetMonthName(month: number): string {\n    return monthsShort[month];\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'ux-date-time-picker-month-view',\n  template: `\n    <ux-date-time-picker-header [header]=\"year\" (previous)=\"previous()\" (next)=\"next()\" (ascend)=\"ascend.emit()\"></ux-date-time-picker-header>\n\n    <div class=\"calendar\">\n      <div class=\"calendar-row\" *ngFor=\"let row of months\">\n        <div class=\"calendar-item\" *ngFor=\"let item of row\" [class.active]=\"item === date.getMonth() && year === date.getFullYear()\"\n          [class.current]=\"item === currentDate.getMonth() && year === currentDate.getFullYear()\" (click)=\"select(item); $event.stopPropagation()\" (keyup.enter)=\"select(item)\" tabindex=\"0\">{{ getMonthName(item) }}</div>\n      </div>\n    </div>\n  `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'date': [{ type: Input },],\n'year': [{ type: Input },],\n'month': [{ type: Input },],\n'monthChange': [{ type: Output },],\n'yearChange': [{ type: Output },],\n'ascend': [{ type: Output },],\n};\n}\n\nfunction DateTimePickerMonthViewComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nDateTimePickerMonthViewComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDateTimePickerMonthViewComponent.ctorParameters;\n/** @type {?} */\nDateTimePickerMonthViewComponent.propDecorators;\n/** @type {?} */\nDateTimePickerMonthViewComponent.prototype.date;\n/** @type {?} */\nDateTimePickerMonthViewComponent.prototype.year;\n/** @type {?} */\nDateTimePickerMonthViewComponent.prototype.month;\n/** @type {?} */\nDateTimePickerMonthViewComponent.prototype.monthChange;\n/** @type {?} */\nDateTimePickerMonthViewComponent.prototype.yearChange;\n/** @type {?} */\nDateTimePickerMonthViewComponent.prototype.ascend;\n/** @type {?} */\nDateTimePickerMonthViewComponent.prototype.months;\n/** @type {?} */\nDateTimePickerMonthViewComponent.prototype.currentDate;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Input, EventEmitter, Output, SimpleChanges, OnInit } from '@angular/core';\nimport { gridify, range } from '../date-time-picker.utils';\nexport class DateTimePickerYearViewComponent implements OnInit {\nprivate _page: number = 0;\n\n  header: string;\n  years: number[][] = [];\n  currentYear: number = new Date().getFullYear();\n\n   year: number = new Date().getFullYear();\n   yearChange: EventEmitter<number> = new EventEmitter<number>();\n/**\n * @return {?}\n */\nngOnInit(): void {\n    this.update();\n  }\n/**\n * @param {?} year\n * @return {?}\n */\nselect(year: number): void {\n\n    // set the year of of the date\n    this.year = year;\n\n    // emit the date change\n    this.yearChange.emit(this.year);\n  }\n/**\n * @return {?}\n */\nprevious(): void {\n    this._page--;\n    this.update();\n  }\n/**\n * @return {?}\n */\nnext(): void {\n    this._page++;\n    this.update();\n  }\n/**\n * @return {?}\n */\nupdate(): void {\n\n    // get the years to display\n    const /** @type {?} */ decade = this.getDecade();\n\n    // update the header\n    this.header = `${decade.start} - ${decade.end}`;\n\n    // create the grid\n    this.years = gridify(decade.range, 4);\n  }\n/**\n * Get the years in the current decade to display\n * @return {?}\n */\ngetDecade(): DatePickerYearRange {\n\n    // the number of years to display\n    const /** @type {?} */ yearCount = 10;\n\n    // figure the start and end points\n    const /** @type {?} */ start = (this.year - (this.year % yearCount)) + (this._page * yearCount);\n    const /** @type {?} */ end = start + yearCount - 1;\n\n    // create an array containing all the numbers between the start and end points\n    return { start: start, end: end, range: range(start, end) };\n  }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'ux-date-time-picker-year-view',\n  template: `\n    <ux-date-time-picker-header [header]=\"header\" [canAscend]=\"false\" (previous)=\"previous()\" (next)=\"next()\"></ux-date-time-picker-header>\n\n    <div class=\"calendar\">\n      <div class=\"calendar-row\" *ngFor=\"let row of years\">\n        <div *ngFor=\"let item of row\" class=\"calendar-item\" [class.current]=\"item === currentYear\" [class.active]=\"item === year\"\n        (click)=\"select(item); $event.stopPropagation()\" (keyup.enter)=\"select(item)\" tabindex=\"0\">{{ item }}</div>\n      </div>\n    </div>\n  `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'year': [{ type: Input },],\n'yearChange': [{ type: Output },],\n};\n}\n\nfunction DateTimePickerYearViewComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nDateTimePickerYearViewComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDateTimePickerYearViewComponent.ctorParameters;\n/** @type {?} */\nDateTimePickerYearViewComponent.propDecorators;\n/** @type {?} */\nDateTimePickerYearViewComponent.prototype._page;\n/** @type {?} */\nDateTimePickerYearViewComponent.prototype.header;\n/** @type {?} */\nDateTimePickerYearViewComponent.prototype.years;\n/** @type {?} */\nDateTimePickerYearViewComponent.prototype.currentYear;\n/** @type {?} */\nDateTimePickerYearViewComponent.prototype.year;\n/** @type {?} */\nDateTimePickerYearViewComponent.prototype.yearChange;\n}\n\n\nexport interface DatePickerYearRange {\n  start: number;\n  end: number;\n  range: number[];\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nexport class DateTimePickerHeaderComponent {\n\n     header: string;\n     canAscend: boolean = true;\n\n     next: EventEmitter<void> = new EventEmitter<void>();\n     previous: EventEmitter<void> = new EventEmitter<void>();\n     ascend: EventEmitter<void> = new EventEmitter<void>();\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-date-time-picker-header',\n    template: `\n      <header class=\"header\">\n\n        <div class=\"header-navigation\" (click)=\"previous.emit(); $event.stopPropagation()\" (keyup.enter)=\"previous.emit()\" tabindex=\"0\">\n          <i class=\"hpe-icon hpe-previous\"></i>\n        </div>\n\n        <div class=\"header-title\" [class.active]=\"canAscend\" (click)=\"ascend.emit(); $event.stopPropagation()\" (keyup.enter)=\"ascend.emit()\" tabindex=\"0\">{{ header }}</div>\n\n        <div class=\"header-navigation\" (click)=\"next.emit(); $event.stopPropagation()\" (keyup.enter)=\"next.emit()\" tabindex=\"0\">\n          <i class=\"hpe-icon hpe-next\"></i>\n        </div>\n      </header>\n    `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'header': [{ type: Input },],\n'canAscend': [{ type: Input },],\n'next': [{ type: Output },],\n'previous': [{ type: Output },],\n'ascend': [{ type: Output },],\n};\n}\n\nfunction DateTimePickerHeaderComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nDateTimePickerHeaderComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDateTimePickerHeaderComponent.ctorParameters;\n/** @type {?} */\nDateTimePickerHeaderComponent.propDecorators;\n/** @type {?} */\nDateTimePickerHeaderComponent.prototype.header;\n/** @type {?} */\nDateTimePickerHeaderComponent.prototype.canAscend;\n/** @type {?} */\nDateTimePickerHeaderComponent.prototype.next;\n/** @type {?} */\nDateTimePickerHeaderComponent.prototype.previous;\n/** @type {?} */\nDateTimePickerHeaderComponent.prototype.ascend;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Input, EventEmitter, Output, AfterViewInit } from '@angular/core';\nexport class DateTimePickerTimeViewComponent implements AfterViewInit {\n\n     date: Date = new Date();\n     showSeconds: boolean = false;\n     showSpinners: boolean = true;\n     showTimezone: boolean = true;\n     showMeridian: boolean = true;\n\n     timezones: DateTimePickerTimezone[];\n\n     dateChange: EventEmitter<Date> = new EventEmitter<Date>();\n     timezoneChange: EventEmitter<DateTimePickerTimezone> = new EventEmitter<DateTimePickerTimezone>();\n\n    meridian: DatePickerMeridian = DatePickerMeridian.AM;\n/**\n * @param {?} value\n * @return {?}\n */\nset timezone(value: DateTimePickerTimezone) {\n        if (value !== this._timezone) {\n            this._timezone = value;\n            this.timezoneChange.emit(this._timezone);\n        }\n    }\n/**\n * @return {?}\n */\nget timezone() {\n        return this._timezone;\n    }\n\n    // Expose enum to view\n    DatePickerMeridian = DatePickerMeridian;\nprivate _timezone: DateTimePickerTimezone;\n/**\n * @return {?}\n */\nngAfterViewInit(): void {\n\n        // if the user did not specify a timezone - choose a default one\n        if (!this.timezone) {\n            setTimeout(() => this.setDefaultTimezone());\n        }\n    }\n/**\n * @return {?}\n */\nsetDefaultTimezone(): void {\n        // determine the user default timezone\n        const /** @type {?} */ offset = new Date().getTimezoneOffset();\n\n        // find the closest timezone\n        this.timezone = this.timezones.find(zone => zone.offset === offset);\n\n        // if not match was found then set to GMT\n        if (!this.timezone) {\n            this.timezone = this.timezones.find(zone => zone.offset === 0);\n        }\n    }\n/**\n * @param {?} date\n * @return {?}\n */\nupdate(date: Date | null): void {\n\n        // if the date is invalid then stop here\n        if (!date) {\n            return;\n        }\n\n        // update the meridian\n        this.meridian = date.getHours() < 12 ? DatePickerMeridian.AM : DatePickerMeridian.PM;\n        \n        // if the date has not changed then don't emit\n        if (date.getTime() !== this.date.getTime()) {\n            this.date = date;\n            this.dateChange.emit(date);\n        }\n    }\n/**\n * @param {?} meridian\n * @return {?}\n */\nsetMeridian(meridian: DatePickerMeridian): void {\n\n        // get the current hours\n        const /** @type {?} */ hours = this.date.getHours();\n\n        // if we are transitioning to AM and time is currently PM\n        if (meridian === DatePickerMeridian.AM && hours >= 12) {\n            this.date.setHours(hours - 12);\n            this.dateChange.emit(this.date);\n        }\n\n        // if we are transitioning to PM and time is currently AM\n        if (meridian === DatePickerMeridian.PM && hours < 12) {\n            this.date.setHours(hours + 12);\n            this.dateChange.emit(this.date);\n        }\n    }\n/**\n * @return {?}\n */\npreviousTimezone(): void {\n\n        // get the current zone\n        const /** @type {?} */ currentZone = this.timezones.findIndex(zone => zone.name === this.timezone.name && zone.offset === this.timezone.offset);\n\n        // try to get the previous zone\n        this.timezone = this.timezones[currentZone - 1] ? this.timezones[currentZone - 1] : this.timezones[currentZone];\n    }\n/**\n * @return {?}\n */\nnextTimezone(): void {\n        // get the current zone\n        const /** @type {?} */ currentZone = this.timezones.findIndex(zone => zone.name === this.timezone.name && zone.offset === this.timezone.offset);\n\n        // try to get the next zone\n        this.timezone = this.timezones[currentZone + 1] ? this.timezones[currentZone + 1] : this.timezones[currentZone];\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-date-time-picker-time-view',\n    template: `\n      <div class=\"time-input-container\">\n        <timepicker [ngModel]=\"date\" (ngModelChange)=\"update($event)\" [minuteStep]=\"1\" [hourStep]=\"1\" [secondsStep]=\"1\" [showSeconds]=\"showSeconds\"\n          [showSpinners]=\"showSpinners\" [showMeridian]=\"showMeridian\"></timepicker>\n\n        <div class=\"btn-group meridian-picker\" *ngIf=\"showMeridian\">\n          <button type=\"button\" class=\"btn button-toggle-accent\" [(ngModel)]=\"meridian\" (ngModelChange)=\"setMeridian($event)\" [btnRadio]=\"DatePickerMeridian.AM\">AM</button>\n          <button type=\"button\" class=\"btn button-toggle-accent\" [(ngModel)]=\"meridian\" (ngModelChange)=\"setMeridian($event)\" [btnRadio]=\"DatePickerMeridian.PM\">PM</button>\n        </div>\n\n        <table class=\"time-zone-picker-container\" *ngIf=\"showTimezone && showSpinners\">\n          <tbody>\n            <tr>\n              <td class=\"text-center\">\n                <a class=\"btn btn-link\" (click)=\"nextTimezone()\">\n                  <span class=\"hpe-icon hpe-up\"></span>\n                </a>\n              </td>\n            </tr>\n            <tr>\n              <td class=\"form-group\">\n                <div class=\"form-control time-zone-picker\">\n                  <span class=\"time-zone\">{{ timezone?.name }}</span>\n                </div>\n              </td>\n            </tr>\n            <tr>\n              <td class=\"text-center\">\n                <a class=\"btn btn-link\" (click)=\"previousTimezone()\">\n                  <span class=\"hpe-icon hpe-down\"></span>\n                </a>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n\n        <div *ngIf=\"showTimezone && !showSpinners\">\n          <select class=\"form-control time-zone-picker-select\" [(ngModel)]=\"timezone\">\n            <option *ngFor=\"let zone of timezones\" [ngValue]=\"zone\">{{ zone?.name }}</option>\n          </select>\n        </div>\n\n      </div>\n    `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'date': [{ type: Input },],\n'showSeconds': [{ type: Input },],\n'showSpinners': [{ type: Input },],\n'showTimezone': [{ type: Input },],\n'showMeridian': [{ type: Input },],\n'timezones': [{ type: Input },],\n'dateChange': [{ type: Output },],\n'timezoneChange': [{ type: Output },],\n'timezone': [{ type: Input },],\n};\n}\n\nfunction DateTimePickerTimeViewComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nDateTimePickerTimeViewComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDateTimePickerTimeViewComponent.ctorParameters;\n/** @type {?} */\nDateTimePickerTimeViewComponent.propDecorators;\n/** @type {?} */\nDateTimePickerTimeViewComponent.prototype.date;\n/** @type {?} */\nDateTimePickerTimeViewComponent.prototype.showSeconds;\n/** @type {?} */\nDateTimePickerTimeViewComponent.prototype.showSpinners;\n/** @type {?} */\nDateTimePickerTimeViewComponent.prototype.showTimezone;\n/** @type {?} */\nDateTimePickerTimeViewComponent.prototype.showMeridian;\n/** @type {?} */\nDateTimePickerTimeViewComponent.prototype.timezones;\n/** @type {?} */\nDateTimePickerTimeViewComponent.prototype.dateChange;\n/** @type {?} */\nDateTimePickerTimeViewComponent.prototype.timezoneChange;\n/** @type {?} */\nDateTimePickerTimeViewComponent.prototype.meridian;\n/** @type {?} */\nDateTimePickerTimeViewComponent.prototype.DatePickerMeridian;\n/** @type {?} */\nDateTimePickerTimeViewComponent.prototype._timezone;\n}\n\nexport type DatePickerMeridian = number;\nexport let DatePickerMeridian: any = {};\nDatePickerMeridian.AM = 0;\nDatePickerMeridian.PM = 1;\nDatePickerMeridian[DatePickerMeridian.AM] = \"AM\";\nDatePickerMeridian[DatePickerMeridian.PM] = \"PM\";\n\n\nexport interface DateTimePickerTimezone {\n    name: string;\n    offset: number;\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { TimepickerModule } from 'ngx-bootstrap/timepicker';\nimport { ButtonsModule } from 'ngx-bootstrap/buttons';\n\nimport { DateTimePickerComponent } from './date-time-picker.component';\nimport { DateTimePickerDayViewComponent } from './day-view/day-view.component';\nimport { DateTimePickerMonthViewComponent } from './month-view/month-view.component';\nimport { DateTimePickerYearViewComponent } from './year-view/year-view.component';\nimport { DateTimePickerHeaderComponent } from './header/header.component';\nimport { DateTimePickerTimeViewComponent } from './time-view/time-view.component';\nimport { DateTimePickerConfig } from './date-time-picker.config';\n\nconst /** @type {?} */ DECLARATIONS = [\n    DateTimePickerComponent,\n    DateTimePickerDayViewComponent,\n    DateTimePickerMonthViewComponent,\n    DateTimePickerYearViewComponent,\n    DateTimePickerTimeViewComponent,\n    DateTimePickerHeaderComponent\n];\nexport class DateTimePickerModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        CommonModule,\n        FormsModule,\n        TimepickerModule.forRoot(),\n        ButtonsModule.forRoot()\n    ],\n    exports: DECLARATIONS,\n    declarations: DECLARATIONS,\n    providers: [\n        DateTimePickerConfig\n    ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction DateTimePickerModule_tsickle_Closure_declarations() {\n/** @type {?} */\nDateTimePickerModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDateTimePickerModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Directive } from '@angular/core';\nexport class EboxComponent { static decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-ebox',\n    template: `\n      <div class=\"ux-ebox-header\">\n          <ng-content select=\"ux-ebox-header\"></ng-content>\n      </div>\n\n      <div class=\"ux-ebox-content\">\n          <ng-content select=\"ux-ebox-content\"></ng-content>\n      </div>\n    `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction EboxComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nEboxComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nEboxComponent.ctorParameters;\n}\n\nexport class EboxHeaderDirective { static decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'ux-ebox-header'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction EboxHeaderDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nEboxHeaderDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nEboxHeaderDirective.ctorParameters;\n}\n\nexport class EboxContentDirective { static decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'ux-ebox-content'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction EboxContentDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nEboxContentDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nEboxContentDirective.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\n\nimport { EboxComponent, EboxContentDirective, EboxHeaderDirective } from './ebox.component';\nexport class EboxModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    exports: [EboxComponent, EboxContentDirective, EboxHeaderDirective],\n    declarations: [EboxComponent, EboxContentDirective, EboxHeaderDirective]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction EboxModule_tsickle_Closure_declarations() {\n/** @type {?} */\nEboxModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nEboxModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable } from '@angular/core';\n\n/** Default values provider for tooltip */\n\nexport class TooltipConfig {\n  /** tooltip placement, supported positions: 'top', 'bottom', 'left', 'right' */\n  placement = 'top';\n  /** array of event names which triggers tooltip opening */\n  triggers = 'hover focus';\n  /** a selector specifying the element the tooltip should be appended to. Currently only supports \"body\" */\n  container: string;\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/*tslint:disable */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * JS version of browser APIs. This library can only run in the browser.\n */\nvar win = (typeof window !== 'undefined' && window) || <any>{};\n\nexport { win as window };\nexport var document = win.document;\nexport var location = win.location;\nexport var gc = win['gc'] ? () => win['gc']() : (): any => null;\nexport var performance = win['performance'] ? win['performance'] : null;\nexport const Event = win['Event'];\nexport const MouseEvent = win['MouseEvent'];\nexport const KeyboardEvent = win['KeyboardEvent'];\nexport const EventTarget = win['EventTarget'];\nexport const History = win['History'];\nexport const Location = win['Location'];\nexport const EventListener = win['EventListener'];\n","import {\n  AfterViewInit,\n  Component,\n  ChangeDetectionStrategy\n} from '@angular/core';\nimport { TooltipConfig } from './tooltip.config';\nimport { isBs3 } from '../utils/theme-provider';\n\n\nexport class TooltipContainerComponent implements AfterViewInit {\n  classMap: any;\n  placement: string;\n  containerClass: string;\n  animation: boolean;\n\n  get isBs3(): boolean {\n    return isBs3();\n  }\n\n  constructor(config: TooltipConfig) {\n    Object.assign(this, config);\n  }\n\n  ngAfterViewInit(): void {\n    this.classMap = { in: false, fade: false };\n    this.classMap[this.placement] = true;\n    this.classMap[`tooltip-${this.placement}`] = true;\n\n    this.classMap.in = true;\n    if (this.animation) {\n      this.classMap.fade = true;\n    }\n\n    if (this.containerClass) {\n      this.classMap[this.containerClass] = true;\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'bs-tooltip-container',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  // tslint:disable-next-line\n  host: {\n    '[class]':\n      '\"tooltip in tooltip-\" + placement + \" \" + \"bs-tooltip-\" + placement + \" \" + placement + \" \" + containerClass',\n    '[class.show]': '!isBs3',\n    role: 'tooltip'\n  },\n  styles: [\n    `\n    :host.tooltip {\n      display: block;\n    }\n    :host.bs-tooltip-top .arrow, :host.bs-tooltip-bottom .arrow {\n      left: calc(50% - 2.5px);\n    }\n    :host.bs-tooltip-left .arrow, :host.bs-tooltip-right .arrow {\n      top: calc(50% - 2.5px);\n    }\n  `\n  ],\n  template: `\n    <div class=\"tooltip-arrow arrow\"></div>\n    <div class=\"tooltip-inner\"><ng-content></ng-content></div>\n    `\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: TooltipConfig, },\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @copyright Valor Software\n * @copyright Angular ng-bootstrap team\n */\n\nexport class Trigger {\n  open: string;\n  close?: string;\n\n  constructor(open: string, close?: string) {\n    this.open = open;\n    this.close = close || open;\n  }\n\n  isManual(): boolean {\n    return this.open === 'manual' || this.close === 'manual';\n  }\n}\n","/**\n * @copyright Valor Software\n * @copyright Angular ng-bootstrap team\n */\n\nimport { ComponentRef, ViewRef } from '@angular/core';\n\nexport class ContentRef {\n  nodes: any[];\n  viewRef?: ViewRef;\n  componentRef?: ComponentRef<any>;\n\n  constructor(\n    nodes: any[],\n    viewRef?: ViewRef,\n    componentRef?: ComponentRef<any>\n  ) {\n    this.nodes = nodes;\n    this.viewRef = viewRef;\n    this.componentRef = componentRef;\n  }\n}\n","// tslint:disable:max-file-line-count\n// todo: add delay support\n// todo: merge events onShow, onShown, etc...\n// todo: add global positioning configuration?\nimport {\n  ApplicationRef,\n  ComponentFactory,\n  ComponentFactoryResolver,\n  ComponentRef,\n  ElementRef,\n  EmbeddedViewRef,\n  EventEmitter,\n  Injector,\n  NgZone,\n  Provider,\n  ReflectiveInjector,\n  Renderer2,\n  TemplateRef,\n  Type,\n  ViewContainerRef\n} from '@angular/core';\nimport { PositioningOptions, PositioningService } from '../positioning';\nimport { listenToTriggersV2, registerOutsideClick } from '../utils/triggers';\nimport { ContentRef } from './content-ref.class';\nimport { ListenOptions } from './listen-options.model';\n\nexport class ComponentLoader<T> {\n  onBeforeShow: EventEmitter<any> = new EventEmitter();\n  onShown: EventEmitter<any> = new EventEmitter();\n  onBeforeHide: EventEmitter<any> = new EventEmitter();\n  onHidden: EventEmitter<any> = new EventEmitter();\n\n  instance: T;\n  _componentRef: ComponentRef<T>;\n  _inlineViewRef: EmbeddedViewRef<T>;\n\n  private _providers: Provider[] = [];\n  private _componentFactory: ComponentFactory<T>;\n  private _zoneSubscription: any;\n  private _contentRef: ContentRef;\n  private _innerComponent: ComponentRef<T>;\n\n  private _unregisterListenersFn: Function;\n\n  get isShown(): boolean {\n    if (this._isHiding) {\n      return false;\n    }\n\n    return !!this._componentRef;\n  }\n\n  private _isHiding = false;\n\n  /**\n   * Placement of a component. Accepts: \"top\", \"bottom\", \"left\", \"right\"\n   */\n  private attachment: string;\n\n  /**\n   * A selector specifying the element the popover should be appended to.\n   * Currently only supports \"body\".\n   */\n  private container: string | ElementRef | any;\n\n  /**\n   * Specifies events that should trigger. Supports a space separated list of\n   * event names.\n   */\n  private triggers: string;\n\n  private _listenOpts: ListenOptions = {};\n  private _globalListener = Function.prototype;\n\n  /**\n   * Do not use this directly, it should be instanced via\n   * `ComponentLoadFactory.attach`\n   * @internal\n   */\n  // tslint:disable-next-line\n  public constructor(\n    private _viewContainerRef: ViewContainerRef,\n    private _renderer: Renderer2,\n    private _elementRef: ElementRef,\n    private _injector: Injector,\n    private _componentFactoryResolver: ComponentFactoryResolver,\n    private _ngZone: NgZone,\n    private _applicationRef: ApplicationRef,\n    private _posService: PositioningService\n  ) {}\n\n  attach(compType: Type<T>): ComponentLoader<T> {\n    this._componentFactory = this._componentFactoryResolver\n      .resolveComponentFactory<T>(compType);\n\n    return this;\n  }\n\n  // todo: add behaviour: to target element, `body`, custom element\n  to(container?: string): ComponentLoader<T> {\n    this.container = container || this.container;\n\n    return this;\n  }\n\n  position(opts?: PositioningOptions): ComponentLoader<T> {\n    this.attachment = opts.attachment || this.attachment;\n    this._elementRef = (opts.target as ElementRef) || this._elementRef;\n\n    return this;\n  }\n\n  provide(provider: Provider): ComponentLoader<T> {\n    this._providers.push(provider);\n\n    return this;\n  }\n\n  // todo: appendChild to element or document.querySelector(this.container)\n  show(\n    opts: {\n      content?: string | TemplateRef<any>;\n      context?: any;\n      [key: string]: any;\n    } = {}\n  ): ComponentRef<T> {\n    this._subscribePositioning();\n    this._innerComponent = null;\n\n    if (!this._componentRef) {\n      this.onBeforeShow.emit();\n      this._contentRef = this._getContentRef(opts.content, opts.context);\n      const injector = ReflectiveInjector.resolveAndCreate(\n        this._providers,\n        this._injector\n      );\n\n      this._componentRef = this._componentFactory.create(\n        injector,\n        this._contentRef.nodes\n      );\n      this._applicationRef.attachView(this._componentRef.hostView);\n      // this._componentRef = this._viewContainerRef\n      //   .createComponent(this._componentFactory, 0, injector, this._contentRef.nodes);\n      this.instance = this._componentRef.instance;\n\n      Object.assign(this._componentRef.instance, opts);\n\n      if (this.container instanceof ElementRef) {\n        this.container.nativeElement.appendChild(\n          this._componentRef.location.nativeElement\n        );\n      }\n\n      if (this.container === 'body' && typeof document !== 'undefined') {\n        document\n          .querySelector(this.container as string)\n          .appendChild(this._componentRef.location.nativeElement);\n      }\n\n      if (\n        !this.container &&\n        this._elementRef &&\n        this._elementRef.nativeElement.parentElement\n      ) {\n        this._elementRef.nativeElement.parentElement.appendChild(\n          this._componentRef.location.nativeElement\n        );\n      }\n\n      // we need to manually invoke change detection since events registered\n      // via\n      // Renderer::listen() are not picked up by change detection with the\n      // OnPush strategy\n      if (this._contentRef.componentRef) {\n        this._innerComponent = this._contentRef.componentRef.instance;\n        this._contentRef.componentRef.changeDetectorRef.markForCheck();\n        this._contentRef.componentRef.changeDetectorRef.detectChanges();\n      }\n      this._componentRef.changeDetectorRef.markForCheck();\n      this._componentRef.changeDetectorRef.detectChanges();\n      this.onShown.emit(this._componentRef.instance);\n    }\n\n    this._registerOutsideClick();\n\n    return this._componentRef;\n  }\n\n  hide(): ComponentLoader<T> {\n    if (!this._componentRef) {\n      return this;\n    }\n\n    this.onBeforeHide.emit(this._componentRef.instance);\n\n    const componentEl = this._componentRef.location.nativeElement;\n    componentEl.parentNode.removeChild(componentEl);\n    if (this._contentRef.componentRef) {\n      this._contentRef.componentRef.destroy();\n    }\n    this._componentRef.destroy();\n    if (this._viewContainerRef && this._contentRef.viewRef) {\n      this._viewContainerRef.remove(\n        this._viewContainerRef.indexOf(this._contentRef.viewRef)\n      );\n    }\n    // this._viewContainerRef.remove(this._viewContainerRef.indexOf(this._componentRef.hostView));\n    //\n    // if (this._contentRef.viewRef && this._viewContainerRef.indexOf(this._contentRef.viewRef) !== -1) {\n    //   this._viewContainerRef.remove(this._viewContainerRef.indexOf(this._contentRef.viewRef));\n    // }\n\n    this._contentRef = null;\n    this._componentRef = null;\n    this._removeGlobalListener();\n\n    this.onHidden.emit();\n\n    return this;\n  }\n\n  toggle(): void {\n    if (this.isShown) {\n      this.hide();\n\n      return;\n    }\n\n    this.show();\n  }\n\n  dispose(): void {\n    if (this.isShown) {\n      this.hide();\n    }\n\n    this._unsubscribePositioning();\n\n    if (this._unregisterListenersFn) {\n      this._unregisterListenersFn();\n    }\n  }\n\n  listen(listenOpts: ListenOptions): ComponentLoader<T> {\n    this.triggers = listenOpts.triggers || this.triggers;\n    this._listenOpts.outsideClick = listenOpts.outsideClick;\n    listenOpts.target = listenOpts.target || this._elementRef.nativeElement;\n\n    const hide = (this._listenOpts.hide = () =>\n      listenOpts.hide ? listenOpts.hide() : void this.hide());\n    const show = (this._listenOpts.show = (registerHide: Function) => {\n      listenOpts.show ? listenOpts.show(registerHide) : this.show(registerHide);\n      registerHide();\n    });\n\n    const toggle = (registerHide: Function) => {\n      this.isShown ? hide() : show(registerHide);\n    };\n\n    this._unregisterListenersFn = listenToTriggersV2(this._renderer, {\n      target: listenOpts.target,\n      triggers: listenOpts.triggers,\n      show,\n      hide,\n      toggle\n    });\n\n    return this;\n  }\n\n  _removeGlobalListener() {\n    if (this._globalListener) {\n      this._globalListener();\n      this._globalListener = null;\n    }\n  }\n\n  attachInline(\n    vRef: ViewContainerRef,\n    template: TemplateRef<any>\n  ): ComponentLoader<T> {\n    this._inlineViewRef = vRef.createEmbeddedView(template);\n\n    return this;\n  }\n\n  _registerOutsideClick(): void {\n    if (!this._componentRef || !this._componentRef.location) {\n      return;\n    }\n    // why: should run after first event bubble\n    if (this._listenOpts.outsideClick) {\n      const target = this._componentRef.location.nativeElement;\n      setTimeout(() => {\n        this._globalListener = registerOutsideClick(this._renderer, {\n          targets: [target, this._elementRef.nativeElement],\n          outsideClick: this._listenOpts.outsideClick,\n          hide: () => this._listenOpts.hide()\n        });\n      });\n    }\n  }\n\n  getInnerComponent(): ComponentRef<T> {\n    return this._innerComponent;\n  }\n\n  private _subscribePositioning(): void {\n    if (this._zoneSubscription || !this.attachment) {\n      return;\n    }\n\n    this._zoneSubscription = this._ngZone.onStable.subscribe(() => {\n      if (!this._componentRef) {\n        return;\n      }\n      this._posService.position({\n        element: this._componentRef.location,\n        target: this._elementRef,\n        attachment: this.attachment,\n        appendToBody: this.container === 'body'\n      });\n    });\n  }\n\n  private _unsubscribePositioning(): void {\n    if (!this._zoneSubscription) {\n      return;\n    }\n    this._zoneSubscription.unsubscribe();\n    this._zoneSubscription = null;\n  }\n\n  private _getContentRef(\n    content: string | TemplateRef<any> | any,\n    context?: any\n  ): ContentRef {\n    if (!content) {\n      return new ContentRef([]);\n    }\n\n    if (content instanceof TemplateRef) {\n      if (this._viewContainerRef) {\n        const _viewRef = this._viewContainerRef\n          .createEmbeddedView<TemplateRef<T>>(content, context);\n        _viewRef.markForCheck();\n\n        return new ContentRef([_viewRef.rootNodes], _viewRef);\n      }\n      const viewRef = content.createEmbeddedView({});\n      this._applicationRef.attachView(viewRef);\n\n      return new ContentRef([viewRef.rootNodes], viewRef);\n    }\n\n    if (typeof content === 'function') {\n      const contentCmptFactory = this._componentFactoryResolver.resolveComponentFactory(\n        content\n      );\n      const modalContentInjector = ReflectiveInjector.resolveAndCreate(\n        [...this._providers],\n        this._injector\n      );\n      const componentRef = contentCmptFactory.create(modalContentInjector);\n      this._applicationRef.attachView(componentRef.hostView);\n\n      return new ContentRef(\n        [[componentRef.location.nativeElement]],\n        componentRef.hostView,\n        componentRef\n      );\n    }\n\n    return new ContentRef([[this._renderer.createText(`${content}`)]]);\n  }\n}\n","/**\n * @copyright Valor Software\n * @copyright Angular ng-bootstrap team\n */\n\n// previous version:\n// https://github.com/angular-ui/bootstrap/blob/07c31d0731f7cb068a1932b8e01d2312b796b4ec/src/position/position.js\n// tslint:disable\nexport class Positioning {\n  public position(element: HTMLElement, round = true): ClientRect {\n    let elPosition: ClientRect;\n    let parentOffset: ClientRect = {\n      width: 0,\n      height: 0,\n      top: 0,\n      bottom: 0,\n      left: 0,\n      right: 0\n    };\n\n    if (this.getStyle(element, 'position') === 'fixed') {\n      const bcRect = element.getBoundingClientRect();\n      elPosition = {\n        width: bcRect.width,\n        height: bcRect.height,\n        top: bcRect.top,\n        bottom: bcRect.bottom,\n        left: bcRect.left,\n        right: bcRect.right\n      };\n    } else {\n      const offsetParentEl = this.offsetParent(element);\n\n      elPosition = this.offset(element, false);\n\n      if (offsetParentEl !== document.documentElement) {\n        parentOffset = this.offset(offsetParentEl, false);\n      }\n\n      parentOffset.top += offsetParentEl.clientTop;\n      parentOffset.left += offsetParentEl.clientLeft;\n    }\n\n    elPosition.top -= parentOffset.top;\n    elPosition.bottom -= parentOffset.top;\n    elPosition.left -= parentOffset.left;\n    elPosition.right -= parentOffset.left;\n\n    if (round) {\n      elPosition.top = Math.round(elPosition.top);\n      elPosition.bottom = Math.round(elPosition.bottom);\n      elPosition.left = Math.round(elPosition.left);\n      elPosition.right = Math.round(elPosition.right);\n    }\n\n    return elPosition;\n  }\n\n  public offset(element: HTMLElement, round = true): ClientRect {\n    const elBcr = element.getBoundingClientRect();\n    const viewportOffset = {\n      top: window.pageYOffset - document.documentElement.clientTop,\n      left: window.pageXOffset - document.documentElement.clientLeft\n    };\n\n    let elOffset = {\n      height: elBcr.height || element.offsetHeight,\n      width: elBcr.width || element.offsetWidth,\n      top: elBcr.top + viewportOffset.top,\n      bottom: elBcr.bottom + viewportOffset.top,\n      left: elBcr.left + viewportOffset.left,\n      right: elBcr.right + viewportOffset.left\n    };\n\n    if (round) {\n      elOffset.height = Math.round(elOffset.height);\n      elOffset.width = Math.round(elOffset.width);\n      elOffset.top = Math.round(elOffset.top);\n      elOffset.bottom = Math.round(elOffset.bottom);\n      elOffset.left = Math.round(elOffset.left);\n      elOffset.right = Math.round(elOffset.right);\n    }\n\n    return elOffset;\n  }\n\n  public positionElements(\n    hostElement: HTMLElement,\n    targetElement: HTMLElement,\n    placement: string,\n    appendToBody?: boolean\n  ): ClientRect {\n    const hostElPosition = appendToBody\n      ? this.offset(hostElement, false)\n      : this.position(hostElement, false);\n    const targetElStyles = this.getAllStyles(targetElement);\n    const shiftWidth: any = {\n      left: hostElPosition.left,\n      center:\n        hostElPosition.left +\n        hostElPosition.width / 2 -\n        targetElement.offsetWidth / 2,\n      right: hostElPosition.left + hostElPosition.width\n    };\n    const shiftHeight: any = {\n      top: hostElPosition.top,\n      center:\n        hostElPosition.top +\n        hostElPosition.height / 2 -\n        targetElement.offsetHeight / 2,\n      bottom: hostElPosition.top + hostElPosition.height\n    };\n    const targetElBCR = targetElement.getBoundingClientRect();\n    let placementPrimary = placement.split(' ')[0] || 'top';\n    const placementSecondary = placement.split(' ')[1] || 'center';\n\n    let targetElPosition: ClientRect = {\n      height: targetElBCR.height || targetElement.offsetHeight,\n      width: targetElBCR.width || targetElement.offsetWidth,\n      top: 0,\n      bottom: targetElBCR.height || targetElement.offsetHeight,\n      left: 0,\n      right: targetElBCR.width || targetElement.offsetWidth\n    };\n\n    if (placementPrimary === 'auto') {\n      let newPlacementPrimary = this.autoPosition(\n        targetElPosition,\n        hostElPosition,\n        targetElement,\n        placementSecondary\n      );\n      if (!newPlacementPrimary)\n        newPlacementPrimary = this.autoPosition(\n          targetElPosition,\n          hostElPosition,\n          targetElement\n        );\n      if (newPlacementPrimary) placementPrimary = newPlacementPrimary;\n      targetElement.classList.add(placementPrimary);\n    }\n\n    switch (placementPrimary) {\n      case 'top':\n        targetElPosition.top =\n          hostElPosition.top -\n          (targetElement.offsetHeight +\n            parseFloat(targetElStyles.marginBottom));\n        targetElPosition.bottom +=\n          hostElPosition.top - targetElement.offsetHeight;\n        targetElPosition.left = shiftWidth[placementSecondary];\n        targetElPosition.right += shiftWidth[placementSecondary];\n        break;\n      case 'bottom':\n        targetElPosition.top = shiftHeight[placementPrimary];\n        targetElPosition.bottom += shiftHeight[placementPrimary];\n        targetElPosition.left = shiftWidth[placementSecondary];\n        targetElPosition.right += shiftWidth[placementSecondary];\n        break;\n      case 'left':\n        targetElPosition.top = shiftHeight[placementSecondary];\n        targetElPosition.bottom += shiftHeight[placementSecondary];\n        targetElPosition.left =\n          hostElPosition.left -\n          (targetElement.offsetWidth + parseFloat(targetElStyles.marginRight));\n        targetElPosition.right +=\n          hostElPosition.left - targetElement.offsetWidth;\n        break;\n      case 'right':\n        targetElPosition.top = shiftHeight[placementSecondary];\n        targetElPosition.bottom += shiftHeight[placementSecondary];\n        targetElPosition.left = shiftWidth[placementPrimary];\n        targetElPosition.right += shiftWidth[placementPrimary];\n        break;\n    }\n\n    targetElPosition.top = Math.round(targetElPosition.top);\n    targetElPosition.bottom = Math.round(targetElPosition.bottom);\n    targetElPosition.left = Math.round(targetElPosition.left);\n    targetElPosition.right = Math.round(targetElPosition.right);\n\n    return targetElPosition;\n  }\n\n  private autoPosition(\n    targetElPosition: ClientRect,\n    hostElPosition: ClientRect,\n    targetElement: HTMLElement,\n    preferredPosition?: string\n  ) {\n    if (\n      (!preferredPosition || preferredPosition === 'right') &&\n      targetElPosition.left + hostElPosition.left - targetElement.offsetWidth <\n        0\n    ) {\n      return 'right';\n    } else if (\n      (!preferredPosition || preferredPosition === 'top') &&\n      targetElPosition.bottom +\n        hostElPosition.bottom +\n        targetElement.offsetHeight >\n        window.innerHeight\n    ) {\n      return 'top';\n    } else if (\n      (!preferredPosition || preferredPosition === 'bottom') &&\n      targetElPosition.top + hostElPosition.top - targetElement.offsetHeight < 0\n    ) {\n      return 'bottom';\n    } else if (\n      (!preferredPosition || preferredPosition === 'left') &&\n      targetElPosition.right +\n        hostElPosition.right +\n        targetElement.offsetWidth >\n        window.innerWidth\n    ) {\n      return 'left';\n    }\n    return null;\n  }\n\n  private getAllStyles(element: HTMLElement) {\n    return window.getComputedStyle(element);\n  }\n\n  private getStyle(element: HTMLElement, prop: string): string {\n    return (this.getAllStyles(element) as any)[prop];\n  }\n\n  private isStaticPositioned(element: HTMLElement): boolean {\n    return (this.getStyle(element, 'position') || 'static') === 'static';\n  }\n\n  private offsetParent(element: HTMLElement): HTMLElement {\n    let offsetParentEl =\n      <HTMLElement>element.offsetParent || document.documentElement;\n\n    while (\n      offsetParentEl &&\n      offsetParentEl !== document.documentElement &&\n      this.isStaticPositioned(offsetParentEl)\n    ) {\n      offsetParentEl = <HTMLElement>offsetParentEl.offsetParent;\n    }\n\n    return offsetParentEl || document.documentElement;\n  }\n}\n\nconst positionService = new Positioning();\n\nexport function positionElements(\n  hostElement: HTMLElement,\n  targetElement: HTMLElement,\n  placement: string,\n  appendToBody?: boolean\n): void {\n  const pos = positionService.positionElements(\n    hostElement,\n    targetElement,\n    placement,\n    appendToBody\n  );\n\n  targetElement.style.top = `${pos.top}px`;\n  targetElement.style.left = `${pos.left}px`;\n}\n","import {\n  ApplicationRef, ComponentFactoryResolver, ElementRef, Injectable, Injector,\n  NgZone, Renderer2, ViewContainerRef\n} from '@angular/core';\nimport { ComponentLoader } from './component-loader.class';\nimport { PositioningService } from '../positioning';\n\n\nexport class ComponentLoaderFactory {\n  constructor(private _componentFactoryResolver: ComponentFactoryResolver,\n              private _ngZone: NgZone,\n              private _injector: Injector,\n              private _posService: PositioningService,\n              private _applicationRef: ApplicationRef) {}\n\n  /**\n   *\n   * @param _elementRef\n   * @param _viewContainerRef\n   * @param _renderer\n   * @returns {ComponentLoader}\n   */\n  createLoader<T>(_elementRef: ElementRef,\n                  _viewContainerRef: ViewContainerRef,\n                  _renderer: Renderer2): ComponentLoader<T> {\n    return new ComponentLoader<T>(\n      _viewContainerRef,\n      _renderer,\n      _elementRef,\n      this._injector,\n      this._componentFactoryResolver,\n      this._ngZone,\n      this._applicationRef,\n      this._posService\n    );\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ComponentFactoryResolver, },\n{type: NgZone, },\n{type: Injector, },\n{type: PositioningService, },\n{type: ApplicationRef, },\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","// tslint:disable:deprecation\nimport {\n  Directive, ElementRef, EventEmitter, Input, OnDestroy, OnInit, Output,\n  Renderer2, TemplateRef, ViewContainerRef\n} from '@angular/core';\nimport { TooltipContainerComponent } from './tooltip-container.component';\nimport { TooltipConfig } from './tooltip.config';\nimport { ComponentLoader, ComponentLoaderFactory } from '../component-loader';\nimport { OnChange } from '../utils/decorators';\nimport { warnOnce } from '../utils/warn-once';\n\n\nexport class TooltipDirective implements OnInit, OnDestroy {\n  /**\n   * Content to be displayed as tooltip.\n   */\n  @OnChange()\n  \n  tooltip: string | TemplateRef<any>;\n  /** Fired when tooltip content changes */\n  \n  tooltipChange: EventEmitter<string | TemplateRef<any>> = new EventEmitter();\n\n  /**\n   * Placement of a tooltip. Accepts: \"top\", \"bottom\", \"left\", \"right\"\n   */\n   placement: string;\n  /**\n   * Specifies events that should trigger. Supports a space separated list of\n   * event names.\n   */\n   triggers: string;\n  /**\n   * A selector specifying the element the tooltip should be appended to.\n   * Currently only supports \"body\".\n   */\n   container: string;\n\n  /**\n   * Returns whether or not the tooltip is currently being shown\n   */\n  \n  get isOpen(): boolean {\n    return this._tooltip.isShown;\n  }\n\n  set isOpen(value: boolean) {\n    if (value) {\n      this.show();\n    } else {\n      this.hide();\n    }\n  }\n\n  /**\n   * Allows to disable tooltip\n   */\n   isDisabled: boolean;\n\n  /**\n   * Css class for tooltip container\n   */\n   containerClass = '';\n\n  /**\n   * Emits an event when the tooltip is shown\n   */\n   onShown: EventEmitter<any>;\n  /**\n   * Emits an event when the tooltip is hidden\n   */\n   onHidden: EventEmitter<any>;\n\n  /** @deprecated - please use `tooltip` instead */\n  \n  set htmlContent(value: string | TemplateRef<any>) {\n    warnOnce('tooltipHtml was deprecated, please use `tooltip` instead');\n    this.tooltip = value;\n  }\n\n  /** @deprecated - please use `placement` instead */\n  \n  set _placement(value: string) {\n    warnOnce('tooltipPlacement was deprecated, please use `placement` instead');\n    this.placement = value;\n  }\n\n  /** @deprecated - please use `isOpen` instead*/\n  \n  set _isOpen(value: boolean) {\n    warnOnce('tooltipIsOpen was deprecated, please use `isOpen` instead');\n    this.isOpen = value;\n  }\n\n  get _isOpen(): boolean {\n    warnOnce('tooltipIsOpen was deprecated, please use `isOpen` instead');\n    return this.isOpen;\n  }\n\n  /** @deprecated - please use `isDisabled` instead */\n  \n  set _enable(value: boolean) {\n    warnOnce('tooltipEnable was deprecated, please use `isDisabled` instead');\n    this.isDisabled = value;\n  }\n\n  get _enable(): boolean {\n    warnOnce('tooltipEnable was deprecated, please use `isDisabled` instead');\n    return this.isDisabled;\n  }\n\n  /** @deprecated - please use `container=\"body\"` instead */\n  \n  set _appendToBody(value: boolean) {\n    warnOnce(\n      'tooltipAppendToBody was deprecated, please use `container=\"body\"` instead'\n    );\n    this.container = value ? 'body' : this.container;\n  }\n\n  get _appendToBody(): boolean {\n    warnOnce(\n      'tooltipAppendToBody was deprecated, please use `container=\"body\"` instead'\n    );\n    return this.container === 'body';\n  }\n\n  /** @deprecated - removed, will be added to configuration */\n   _animation = true;\n\n  /** @deprecated - will replaced with customClass */\n  \n  set _popupClass(value: string) {\n    warnOnce('tooltipClass deprecated');\n  }\n\n  /** @deprecated - removed */\n  \n  set _tooltipContext(value: any) {\n    warnOnce('tooltipContext deprecated');\n  }\n\n  /** @deprecated */\n   _delay = 0;\n\n  /** @deprecated */\n   _fadeDuration = 150;\n\n  /** @deprecated -  please use `triggers` instead */\n  \n  get _tooltipTrigger(): string | string[] {\n    warnOnce('tooltipTrigger was deprecated, please use `triggers` instead');\n    return this.triggers;\n  }\n\n  set _tooltipTrigger(value: string | string[]) {\n    warnOnce('tooltipTrigger was deprecated, please use `triggers` instead');\n    this.triggers = (value || '').toString();\n  }\n\n  /** @deprecated */\n  \n  tooltipStateChanged: EventEmitter<boolean> = new EventEmitter<boolean>();\n  protected _delayTimeoutId: number | any;\n\n  private _tooltip: ComponentLoader<TooltipContainerComponent>;\n\n  constructor(_viewContainerRef: ViewContainerRef,\n                     _renderer: Renderer2,\n                     _elementRef: ElementRef,\n                     cis: ComponentLoaderFactory,\n                     config: TooltipConfig) {\n    this._tooltip = cis\n      .createLoader<TooltipContainerComponent>(\n        _elementRef,\n        _viewContainerRef,\n        _renderer\n      )\n      .provide({provide: TooltipConfig, useValue: config});\n\n    Object.assign(this, config);\n    this.onShown = this._tooltip.onShown;\n    this.onHidden = this._tooltip.onHidden;\n  }\n\n  ngOnInit(): void {\n    this._tooltip.listen({\n      triggers: this.triggers,\n      show: () => this.show()\n    });\n    this.tooltipChange.subscribe((value: any) => {\n      if (!value) {\n        this._tooltip.hide();\n      }\n    });\n  }\n\n  /**\n   * Toggles an element’s tooltip. This is considered a “manual” triggering of\n   * the tooltip.\n   */\n  toggle(): void {\n    if (this.isOpen) {\n      return this.hide();\n    }\n\n    this.show();\n  }\n\n  /**\n   * Opens an element’s tooltip. This is considered a “manual” triggering of\n   * the tooltip.\n   */\n  show(): void {\n    if (\n      this.isOpen ||\n      this.isDisabled ||\n      this._delayTimeoutId ||\n      !this.tooltip\n    ) {\n      return;\n    }\n\n    const showTooltip = () => {\n      if (this._delayTimeoutId) {\n        this._delayTimeoutId = undefined;\n      }\n\n      this._tooltip\n        .attach(TooltipContainerComponent)\n        .to(this.container)\n        .position({attachment: this.placement})\n        .show({\n          content: this.tooltip,\n          placement: this.placement,\n          containerClass: this.containerClass\n        });\n    }\n\n    if (this._delay) {\n      this._delayTimeoutId = setTimeout(() => {\n        showTooltip();\n      }, this._delay);\n    } else {\n      showTooltip();\n    }\n  }\n\n  /**\n   * Closes an element’s tooltip. This is considered a “manual” triggering of\n   * the tooltip.\n   */\n  hide(): void {\n    if (this._delayTimeoutId) {\n      clearTimeout(this._delayTimeoutId);\n      this._delayTimeoutId = undefined;\n    }\n\n    if (!this._tooltip.isShown) {\n      return;\n    }\n\n    this._tooltip.instance.classMap.in = false;\n    setTimeout(() => {\n      this._tooltip.hide();\n    }, this._fadeDuration);\n  }\n\n  ngOnDestroy(): void {\n    this._tooltip.dispose();\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[tooltip], [tooltipHtml]',\n  exportAs: 'bs-tooltip'\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ViewContainerRef, },\n{type: Renderer2, },\n{type: ElementRef, },\n{type: ComponentLoaderFactory, },\n{type: TooltipConfig, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'tooltip': [{ type: Input },],\n'tooltipChange': [{ type: Output },],\n'placement': [{ type: Input },],\n'triggers': [{ type: Input },],\n'container': [{ type: Input },],\n'isOpen': [{ type: Input },],\n'isDisabled': [{ type: Input },],\n'containerClass': [{ type: Input },],\n'onShown': [{ type: Output },],\n'onHidden': [{ type: Output },],\n'htmlContent': [{ type: Input, args: ['tooltipHtml', ] },],\n'_placement': [{ type: Input, args: ['tooltipPlacement', ] },],\n'_isOpen': [{ type: Input, args: ['tooltipIsOpen', ] },],\n'_enable': [{ type: Input, args: ['tooltipEnable', ] },],\n'_appendToBody': [{ type: Input, args: ['tooltipAppendToBody', ] },],\n'_animation': [{ type: Input, args: ['tooltipAnimation', ] },],\n'_popupClass': [{ type: Input, args: ['tooltipClass', ] },],\n'_tooltipContext': [{ type: Input, args: ['tooltipContext', ] },],\n'_delay': [{ type: Input, args: ['tooltipPopupDelay', ] },],\n'_fadeDuration': [{ type: Input, args: ['tooltipFadeDuration', ] },],\n'_tooltipTrigger': [{ type: Input, args: ['tooltipTrigger', ] },],\n'tooltipStateChanged': [{ type: Output },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/*tslint:disable:no-invalid-this */\nexport function OnChange(defaultValue?: any): any {\n  const sufix = 'Change';\n\n  return function OnChangeHandler(target: any, propertyKey: string): void {\n    const _key = ` __${propertyKey}Value`;\n    Object.defineProperty(target, propertyKey, {\n      get(): any {\n        return this[_key];\n      },\n      set(value: any): void {\n        const prevValue = this[_key];\n        this[_key] = value;\n        if (prevValue !== value && this[propertyKey + sufix]) {\n          this[propertyKey + sufix].emit(value);\n        }\n      }\n    });\n  };\n}\n/* tslint:enable */\n","import { CommonModule } from '@angular/common';\nimport { NgModule, ModuleWithProviders } from '@angular/core';\nimport { TooltipContainerComponent } from './tooltip-container.component';\nimport { TooltipDirective } from './tooltip.directive';\nimport { TooltipConfig } from './tooltip.config';\nimport { ComponentLoaderFactory } from '../component-loader';\nimport { PositioningService } from '../positioning';\n\n\nexport class TooltipModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: TooltipModule,\n      providers: [TooltipConfig, ComponentLoaderFactory, PositioningService]\n    };\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  imports: [CommonModule],\n  declarations: [TooltipDirective, TooltipContainerComponent],\n  exports: [TooltipDirective],\n  entryComponents: [TooltipContainerComponent]\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/* tslint:disable:max-file-line-count */\nexport const latinMap: { [key: string]: string } = {\n  Á: 'A',\n  Ă: 'A',\n  Ắ: 'A',\n  Ặ: 'A',\n  Ằ: 'A',\n  Ẳ: 'A',\n  Ẵ: 'A',\n  Ǎ: 'A',\n  Â: 'A',\n  Ấ: 'A',\n  Ậ: 'A',\n  Ầ: 'A',\n  Ẩ: 'A',\n  Ẫ: 'A',\n  Ä: 'A',\n  Ǟ: 'A',\n  Ȧ: 'A',\n  Ǡ: 'A',\n  Ạ: 'A',\n  Ȁ: 'A',\n  À: 'A',\n  Ả: 'A',\n  Ȃ: 'A',\n  Ā: 'A',\n  Ą: 'A',\n  Å: 'A',\n  Ǻ: 'A',\n  Ḁ: 'A',\n  Ⱥ: 'A',\n  Ã: 'A',\n  Ꜳ: 'AA',\n  Æ: 'AE',\n  Ǽ: 'AE',\n  Ǣ: 'AE',\n  Ꜵ: 'AO',\n  Ꜷ: 'AU',\n  Ꜹ: 'AV',\n  Ꜻ: 'AV',\n  Ꜽ: 'AY',\n  Ḃ: 'B',\n  Ḅ: 'B',\n  Ɓ: 'B',\n  Ḇ: 'B',\n  Ƀ: 'B',\n  Ƃ: 'B',\n  Ć: 'C',\n  Č: 'C',\n  Ç: 'C',\n  Ḉ: 'C',\n  Ĉ: 'C',\n  Ċ: 'C',\n  Ƈ: 'C',\n  Ȼ: 'C',\n  Ď: 'D',\n  Ḑ: 'D',\n  Ḓ: 'D',\n  Ḋ: 'D',\n  Ḍ: 'D',\n  Ɗ: 'D',\n  Ḏ: 'D',\n  ǲ: 'D',\n  ǅ: 'D',\n  Đ: 'D',\n  Ƌ: 'D',\n  Ǳ: 'DZ',\n  Ǆ: 'DZ',\n  É: 'E',\n  Ĕ: 'E',\n  Ě: 'E',\n  Ȩ: 'E',\n  Ḝ: 'E',\n  Ê: 'E',\n  Ế: 'E',\n  Ệ: 'E',\n  Ề: 'E',\n  Ể: 'E',\n  Ễ: 'E',\n  Ḙ: 'E',\n  Ë: 'E',\n  Ė: 'E',\n  Ẹ: 'E',\n  Ȅ: 'E',\n  È: 'E',\n  Ẻ: 'E',\n  Ȇ: 'E',\n  Ē: 'E',\n  Ḗ: 'E',\n  Ḕ: 'E',\n  Ę: 'E',\n  Ɇ: 'E',\n  Ẽ: 'E',\n  Ḛ: 'E',\n  Ꝫ: 'ET',\n  Ḟ: 'F',\n  Ƒ: 'F',\n  Ǵ: 'G',\n  Ğ: 'G',\n  Ǧ: 'G',\n  Ģ: 'G',\n  Ĝ: 'G',\n  Ġ: 'G',\n  Ɠ: 'G',\n  Ḡ: 'G',\n  Ǥ: 'G',\n  Ḫ: 'H',\n  Ȟ: 'H',\n  Ḩ: 'H',\n  Ĥ: 'H',\n  Ⱨ: 'H',\n  Ḧ: 'H',\n  Ḣ: 'H',\n  Ḥ: 'H',\n  Ħ: 'H',\n  Í: 'I',\n  Ĭ: 'I',\n  Ǐ: 'I',\n  Î: 'I',\n  Ï: 'I',\n  Ḯ: 'I',\n  İ: 'I',\n  Ị: 'I',\n  Ȉ: 'I',\n  Ì: 'I',\n  Ỉ: 'I',\n  Ȋ: 'I',\n  Ī: 'I',\n  Į: 'I',\n  Ɨ: 'I',\n  Ĩ: 'I',\n  Ḭ: 'I',\n  Ꝺ: 'D',\n  Ꝼ: 'F',\n  Ᵹ: 'G',\n  Ꞃ: 'R',\n  Ꞅ: 'S',\n  Ꞇ: 'T',\n  Ꝭ: 'IS',\n  Ĵ: 'J',\n  Ɉ: 'J',\n  Ḱ: 'K',\n  Ǩ: 'K',\n  Ķ: 'K',\n  Ⱪ: 'K',\n  Ꝃ: 'K',\n  Ḳ: 'K',\n  Ƙ: 'K',\n  Ḵ: 'K',\n  Ꝁ: 'K',\n  Ꝅ: 'K',\n  Ĺ: 'L',\n  Ƚ: 'L',\n  Ľ: 'L',\n  Ļ: 'L',\n  Ḽ: 'L',\n  Ḷ: 'L',\n  Ḹ: 'L',\n  Ⱡ: 'L',\n  Ꝉ: 'L',\n  Ḻ: 'L',\n  Ŀ: 'L',\n  Ɫ: 'L',\n  ǈ: 'L',\n  Ł: 'L',\n  Ǉ: 'LJ',\n  Ḿ: 'M',\n  Ṁ: 'M',\n  Ṃ: 'M',\n  Ɱ: 'M',\n  Ń: 'N',\n  Ň: 'N',\n  Ņ: 'N',\n  Ṋ: 'N',\n  Ṅ: 'N',\n  Ṇ: 'N',\n  Ǹ: 'N',\n  Ɲ: 'N',\n  Ṉ: 'N',\n  Ƞ: 'N',\n  ǋ: 'N',\n  Ñ: 'N',\n  Ǌ: 'NJ',\n  Ó: 'O',\n  Ŏ: 'O',\n  Ǒ: 'O',\n  Ô: 'O',\n  Ố: 'O',\n  Ộ: 'O',\n  Ồ: 'O',\n  Ổ: 'O',\n  Ỗ: 'O',\n  Ö: 'O',\n  Ȫ: 'O',\n  Ȯ: 'O',\n  Ȱ: 'O',\n  Ọ: 'O',\n  Ő: 'O',\n  Ȍ: 'O',\n  Ò: 'O',\n  Ỏ: 'O',\n  Ơ: 'O',\n  Ớ: 'O',\n  Ợ: 'O',\n  Ờ: 'O',\n  Ở: 'O',\n  Ỡ: 'O',\n  Ȏ: 'O',\n  Ꝋ: 'O',\n  Ꝍ: 'O',\n  Ō: 'O',\n  Ṓ: 'O',\n  Ṑ: 'O',\n  Ɵ: 'O',\n  Ǫ: 'O',\n  Ǭ: 'O',\n  Ø: 'O',\n  Ǿ: 'O',\n  Õ: 'O',\n  Ṍ: 'O',\n  Ṏ: 'O',\n  Ȭ: 'O',\n  Ƣ: 'OI',\n  Ꝏ: 'OO',\n  Ɛ: 'E',\n  Ɔ: 'O',\n  Ȣ: 'OU',\n  Ṕ: 'P',\n  Ṗ: 'P',\n  Ꝓ: 'P',\n  Ƥ: 'P',\n  Ꝕ: 'P',\n  Ᵽ: 'P',\n  Ꝑ: 'P',\n  Ꝙ: 'Q',\n  Ꝗ: 'Q',\n  Ŕ: 'R',\n  Ř: 'R',\n  Ŗ: 'R',\n  Ṙ: 'R',\n  Ṛ: 'R',\n  Ṝ: 'R',\n  Ȑ: 'R',\n  Ȓ: 'R',\n  Ṟ: 'R',\n  Ɍ: 'R',\n  Ɽ: 'R',\n  Ꜿ: 'C',\n  Ǝ: 'E',\n  Ś: 'S',\n  Ṥ: 'S',\n  Š: 'S',\n  Ṧ: 'S',\n  Ş: 'S',\n  Ŝ: 'S',\n  Ș: 'S',\n  Ṡ: 'S',\n  Ṣ: 'S',\n  Ṩ: 'S',\n  Ť: 'T',\n  Ţ: 'T',\n  Ṱ: 'T',\n  Ț: 'T',\n  Ⱦ: 'T',\n  Ṫ: 'T',\n  Ṭ: 'T',\n  Ƭ: 'T',\n  Ṯ: 'T',\n  Ʈ: 'T',\n  Ŧ: 'T',\n  Ɐ: 'A',\n  Ꞁ: 'L',\n  Ɯ: 'M',\n  Ʌ: 'V',\n  Ꜩ: 'TZ',\n  Ú: 'U',\n  Ŭ: 'U',\n  Ǔ: 'U',\n  Û: 'U',\n  Ṷ: 'U',\n  Ü: 'U',\n  Ǘ: 'U',\n  Ǚ: 'U',\n  Ǜ: 'U',\n  Ǖ: 'U',\n  Ṳ: 'U',\n  Ụ: 'U',\n  Ű: 'U',\n  Ȕ: 'U',\n  Ù: 'U',\n  Ủ: 'U',\n  Ư: 'U',\n  Ứ: 'U',\n  Ự: 'U',\n  Ừ: 'U',\n  Ử: 'U',\n  Ữ: 'U',\n  Ȗ: 'U',\n  Ū: 'U',\n  Ṻ: 'U',\n  Ų: 'U',\n  Ů: 'U',\n  Ũ: 'U',\n  Ṹ: 'U',\n  Ṵ: 'U',\n  Ꝟ: 'V',\n  Ṿ: 'V',\n  Ʋ: 'V',\n  Ṽ: 'V',\n  Ꝡ: 'VY',\n  Ẃ: 'W',\n  Ŵ: 'W',\n  Ẅ: 'W',\n  Ẇ: 'W',\n  Ẉ: 'W',\n  Ẁ: 'W',\n  Ⱳ: 'W',\n  Ẍ: 'X',\n  Ẋ: 'X',\n  Ý: 'Y',\n  Ŷ: 'Y',\n  Ÿ: 'Y',\n  Ẏ: 'Y',\n  Ỵ: 'Y',\n  Ỳ: 'Y',\n  Ƴ: 'Y',\n  Ỷ: 'Y',\n  Ỿ: 'Y',\n  Ȳ: 'Y',\n  Ɏ: 'Y',\n  Ỹ: 'Y',\n  Ź: 'Z',\n  Ž: 'Z',\n  Ẑ: 'Z',\n  Ⱬ: 'Z',\n  Ż: 'Z',\n  Ẓ: 'Z',\n  Ȥ: 'Z',\n  Ẕ: 'Z',\n  Ƶ: 'Z',\n  Ĳ: 'IJ',\n  Œ: 'OE',\n  ᴀ: 'A',\n  ᴁ: 'AE',\n  ʙ: 'B',\n  ᴃ: 'B',\n  ᴄ: 'C',\n  ᴅ: 'D',\n  ᴇ: 'E',\n  ꜰ: 'F',\n  ɢ: 'G',\n  ʛ: 'G',\n  ʜ: 'H',\n  ɪ: 'I',\n  ʁ: 'R',\n  ᴊ: 'J',\n  ᴋ: 'K',\n  ʟ: 'L',\n  ᴌ: 'L',\n  ᴍ: 'M',\n  ɴ: 'N',\n  ᴏ: 'O',\n  ɶ: 'OE',\n  ᴐ: 'O',\n  ᴕ: 'OU',\n  ᴘ: 'P',\n  ʀ: 'R',\n  ᴎ: 'N',\n  ᴙ: 'R',\n  ꜱ: 'S',\n  ᴛ: 'T',\n  ⱻ: 'E',\n  ᴚ: 'R',\n  ᴜ: 'U',\n  ᴠ: 'V',\n  ᴡ: 'W',\n  ʏ: 'Y',\n  ᴢ: 'Z',\n  á: 'a',\n  ă: 'a',\n  ắ: 'a',\n  ặ: 'a',\n  ằ: 'a',\n  ẳ: 'a',\n  ẵ: 'a',\n  ǎ: 'a',\n  â: 'a',\n  ấ: 'a',\n  ậ: 'a',\n  ầ: 'a',\n  ẩ: 'a',\n  ẫ: 'a',\n  ä: 'a',\n  ǟ: 'a',\n  ȧ: 'a',\n  ǡ: 'a',\n  ạ: 'a',\n  ȁ: 'a',\n  à: 'a',\n  ả: 'a',\n  ȃ: 'a',\n  ā: 'a',\n  ą: 'a',\n  ᶏ: 'a',\n  ẚ: 'a',\n  å: 'a',\n  ǻ: 'a',\n  ḁ: 'a',\n  ⱥ: 'a',\n  ã: 'a',\n  ꜳ: 'aa',\n  æ: 'ae',\n  ǽ: 'ae',\n  ǣ: 'ae',\n  ꜵ: 'ao',\n  ꜷ: 'au',\n  ꜹ: 'av',\n  ꜻ: 'av',\n  ꜽ: 'ay',\n  ḃ: 'b',\n  ḅ: 'b',\n  ɓ: 'b',\n  ḇ: 'b',\n  ᵬ: 'b',\n  ᶀ: 'b',\n  ƀ: 'b',\n  ƃ: 'b',\n  ɵ: 'o',\n  ć: 'c',\n  č: 'c',\n  ç: 'c',\n  ḉ: 'c',\n  ĉ: 'c',\n  ɕ: 'c',\n  ċ: 'c',\n  ƈ: 'c',\n  ȼ: 'c',\n  ď: 'd',\n  ḑ: 'd',\n  ḓ: 'd',\n  ȡ: 'd',\n  ḋ: 'd',\n  ḍ: 'd',\n  ɗ: 'd',\n  ᶑ: 'd',\n  ḏ: 'd',\n  ᵭ: 'd',\n  ᶁ: 'd',\n  đ: 'd',\n  ɖ: 'd',\n  ƌ: 'd',\n  ı: 'i',\n  ȷ: 'j',\n  ɟ: 'j',\n  ʄ: 'j',\n  ǳ: 'dz',\n  ǆ: 'dz',\n  é: 'e',\n  ĕ: 'e',\n  ě: 'e',\n  ȩ: 'e',\n  ḝ: 'e',\n  ê: 'e',\n  ế: 'e',\n  ệ: 'e',\n  ề: 'e',\n  ể: 'e',\n  ễ: 'e',\n  ḙ: 'e',\n  ë: 'e',\n  ė: 'e',\n  ẹ: 'e',\n  ȅ: 'e',\n  è: 'e',\n  ẻ: 'e',\n  ȇ: 'e',\n  ē: 'e',\n  ḗ: 'e',\n  ḕ: 'e',\n  ⱸ: 'e',\n  ę: 'e',\n  ᶒ: 'e',\n  ɇ: 'e',\n  ẽ: 'e',\n  ḛ: 'e',\n  ꝫ: 'et',\n  ḟ: 'f',\n  ƒ: 'f',\n  ᵮ: 'f',\n  ᶂ: 'f',\n  ǵ: 'g',\n  ğ: 'g',\n  ǧ: 'g',\n  ģ: 'g',\n  ĝ: 'g',\n  ġ: 'g',\n  ɠ: 'g',\n  ḡ: 'g',\n  ᶃ: 'g',\n  ǥ: 'g',\n  ḫ: 'h',\n  ȟ: 'h',\n  ḩ: 'h',\n  ĥ: 'h',\n  ⱨ: 'h',\n  ḧ: 'h',\n  ḣ: 'h',\n  ḥ: 'h',\n  ɦ: 'h',\n  ẖ: 'h',\n  ħ: 'h',\n  ƕ: 'hv',\n  í: 'i',\n  ĭ: 'i',\n  ǐ: 'i',\n  î: 'i',\n  ï: 'i',\n  ḯ: 'i',\n  ị: 'i',\n  ȉ: 'i',\n  ì: 'i',\n  ỉ: 'i',\n  ȋ: 'i',\n  ī: 'i',\n  į: 'i',\n  ᶖ: 'i',\n  ɨ: 'i',\n  ĩ: 'i',\n  ḭ: 'i',\n  ꝺ: 'd',\n  ꝼ: 'f',\n  ᵹ: 'g',\n  ꞃ: 'r',\n  ꞅ: 's',\n  ꞇ: 't',\n  ꝭ: 'is',\n  ǰ: 'j',\n  ĵ: 'j',\n  ʝ: 'j',\n  ɉ: 'j',\n  ḱ: 'k',\n  ǩ: 'k',\n  ķ: 'k',\n  ⱪ: 'k',\n  ꝃ: 'k',\n  ḳ: 'k',\n  ƙ: 'k',\n  ḵ: 'k',\n  ᶄ: 'k',\n  ꝁ: 'k',\n  ꝅ: 'k',\n  ĺ: 'l',\n  ƚ: 'l',\n  ɬ: 'l',\n  ľ: 'l',\n  ļ: 'l',\n  ḽ: 'l',\n  ȴ: 'l',\n  ḷ: 'l',\n  ḹ: 'l',\n  ⱡ: 'l',\n  ꝉ: 'l',\n  ḻ: 'l',\n  ŀ: 'l',\n  ɫ: 'l',\n  ᶅ: 'l',\n  ɭ: 'l',\n  ł: 'l',\n  ǉ: 'lj',\n  ſ: 's',\n  ẜ: 's',\n  ẛ: 's',\n  ẝ: 's',\n  ḿ: 'm',\n  ṁ: 'm',\n  ṃ: 'm',\n  ɱ: 'm',\n  ᵯ: 'm',\n  ᶆ: 'm',\n  ń: 'n',\n  ň: 'n',\n  ņ: 'n',\n  ṋ: 'n',\n  ȵ: 'n',\n  ṅ: 'n',\n  ṇ: 'n',\n  ǹ: 'n',\n  ɲ: 'n',\n  ṉ: 'n',\n  ƞ: 'n',\n  ᵰ: 'n',\n  ᶇ: 'n',\n  ɳ: 'n',\n  ñ: 'n',\n  ǌ: 'nj',\n  ó: 'o',\n  ŏ: 'o',\n  ǒ: 'o',\n  ô: 'o',\n  ố: 'o',\n  ộ: 'o',\n  ồ: 'o',\n  ổ: 'o',\n  ỗ: 'o',\n  ö: 'o',\n  ȫ: 'o',\n  ȯ: 'o',\n  ȱ: 'o',\n  ọ: 'o',\n  ő: 'o',\n  ȍ: 'o',\n  ò: 'o',\n  ỏ: 'o',\n  ơ: 'o',\n  ớ: 'o',\n  ợ: 'o',\n  ờ: 'o',\n  ở: 'o',\n  ỡ: 'o',\n  ȏ: 'o',\n  ꝋ: 'o',\n  ꝍ: 'o',\n  ⱺ: 'o',\n  ō: 'o',\n  ṓ: 'o',\n  ṑ: 'o',\n  ǫ: 'o',\n  ǭ: 'o',\n  ø: 'o',\n  ǿ: 'o',\n  õ: 'o',\n  ṍ: 'o',\n  ṏ: 'o',\n  ȭ: 'o',\n  ƣ: 'oi',\n  ꝏ: 'oo',\n  ɛ: 'e',\n  ᶓ: 'e',\n  ɔ: 'o',\n  ᶗ: 'o',\n  ȣ: 'ou',\n  ṕ: 'p',\n  ṗ: 'p',\n  ꝓ: 'p',\n  ƥ: 'p',\n  ᵱ: 'p',\n  ᶈ: 'p',\n  ꝕ: 'p',\n  ᵽ: 'p',\n  ꝑ: 'p',\n  ꝙ: 'q',\n  ʠ: 'q',\n  ɋ: 'q',\n  ꝗ: 'q',\n  ŕ: 'r',\n  ř: 'r',\n  ŗ: 'r',\n  ṙ: 'r',\n  ṛ: 'r',\n  ṝ: 'r',\n  ȑ: 'r',\n  ɾ: 'r',\n  ᵳ: 'r',\n  ȓ: 'r',\n  ṟ: 'r',\n  ɼ: 'r',\n  ᵲ: 'r',\n  ᶉ: 'r',\n  ɍ: 'r',\n  ɽ: 'r',\n  ↄ: 'c',\n  ꜿ: 'c',\n  ɘ: 'e',\n  ɿ: 'r',\n  ś: 's',\n  ṥ: 's',\n  š: 's',\n  ṧ: 's',\n  ş: 's',\n  ŝ: 's',\n  ș: 's',\n  ṡ: 's',\n  ṣ: 's',\n  ṩ: 's',\n  ʂ: 's',\n  ᵴ: 's',\n  ᶊ: 's',\n  ȿ: 's',\n  ɡ: 'g',\n  ᴑ: 'o',\n  ᴓ: 'o',\n  ᴝ: 'u',\n  ť: 't',\n  ţ: 't',\n  ṱ: 't',\n  ț: 't',\n  ȶ: 't',\n  ẗ: 't',\n  ⱦ: 't',\n  ṫ: 't',\n  ṭ: 't',\n  ƭ: 't',\n  ṯ: 't',\n  ᵵ: 't',\n  ƫ: 't',\n  ʈ: 't',\n  ŧ: 't',\n  ᵺ: 'th',\n  ɐ: 'a',\n  ᴂ: 'ae',\n  ǝ: 'e',\n  ᵷ: 'g',\n  ɥ: 'h',\n  ʮ: 'h',\n  ʯ: 'h',\n  ᴉ: 'i',\n  ʞ: 'k',\n  ꞁ: 'l',\n  ɯ: 'm',\n  ɰ: 'm',\n  ᴔ: 'oe',\n  ɹ: 'r',\n  ɻ: 'r',\n  ɺ: 'r',\n  ⱹ: 'r',\n  ʇ: 't',\n  ʌ: 'v',\n  ʍ: 'w',\n  ʎ: 'y',\n  ꜩ: 'tz',\n  ú: 'u',\n  ŭ: 'u',\n  ǔ: 'u',\n  û: 'u',\n  ṷ: 'u',\n  ü: 'u',\n  ǘ: 'u',\n  ǚ: 'u',\n  ǜ: 'u',\n  ǖ: 'u',\n  ṳ: 'u',\n  ụ: 'u',\n  ű: 'u',\n  ȕ: 'u',\n  ù: 'u',\n  ủ: 'u',\n  ư: 'u',\n  ứ: 'u',\n  ự: 'u',\n  ừ: 'u',\n  ử: 'u',\n  ữ: 'u',\n  ȗ: 'u',\n  ū: 'u',\n  ṻ: 'u',\n  ų: 'u',\n  ᶙ: 'u',\n  ů: 'u',\n  ũ: 'u',\n  ṹ: 'u',\n  ṵ: 'u',\n  ᵫ: 'ue',\n  ꝸ: 'um',\n  ⱴ: 'v',\n  ꝟ: 'v',\n  ṿ: 'v',\n  ʋ: 'v',\n  ᶌ: 'v',\n  ⱱ: 'v',\n  ṽ: 'v',\n  ꝡ: 'vy',\n  ẃ: 'w',\n  ŵ: 'w',\n  ẅ: 'w',\n  ẇ: 'w',\n  ẉ: 'w',\n  ẁ: 'w',\n  ⱳ: 'w',\n  ẘ: 'w',\n  ẍ: 'x',\n  ẋ: 'x',\n  ᶍ: 'x',\n  ý: 'y',\n  ŷ: 'y',\n  ÿ: 'y',\n  ẏ: 'y',\n  ỵ: 'y',\n  ỳ: 'y',\n  ƴ: 'y',\n  ỷ: 'y',\n  ỿ: 'y',\n  ȳ: 'y',\n  ẙ: 'y',\n  ɏ: 'y',\n  ỹ: 'y',\n  ź: 'z',\n  ž: 'z',\n  ẑ: 'z',\n  ʑ: 'z',\n  ⱬ: 'z',\n  ż: 'z',\n  ẓ: 'z',\n  ȥ: 'z',\n  ẕ: 'z',\n  ᵶ: 'z',\n  ᶎ: 'z',\n  ʐ: 'z',\n  ƶ: 'z',\n  ɀ: 'z',\n  ﬀ: 'ff',\n  ﬃ: 'ffi',\n  ﬄ: 'ffl',\n  ﬁ: 'fi',\n  ﬂ: 'fl',\n  ĳ: 'ij',\n  œ: 'oe',\n  ﬆ: 'st',\n  ₐ: 'a',\n  ₑ: 'e',\n  ᵢ: 'i',\n  ⱼ: 'j',\n  ₒ: 'o',\n  ᵣ: 'r',\n  ᵤ: 'u',\n  ᵥ: 'v',\n  ₓ: 'x'\n};\n","export class TypeaheadMatch {\n  readonly value: string;\n  readonly item: any;\n  protected header: boolean;\n\n  constructor(item: any, value: string = item, header = false) {\n    this.item = item;\n    this.value = value;\n    this.header = header;\n  }\n\n  isHeader(): boolean {\n    return this.header;\n  }\n\n  toString(): string {\n    return this.value;\n  }\n}\n","import { window } from './facade/browser';\n\nexport class Utils {\n  static reflow(element: any): void {\n    ((bs: any): void => bs)(element.offsetHeight);\n  }\n\n  // source: https://github.com/jquery/jquery/blob/master/src/css/var/getStyles.js\n  static getStyles(elem: any): any {\n    // Support: IE <=11 only, Firefox <=30 (#15098, #14150)\n    // IE throws on elements created in popups\n    // FF meanwhile throws on frame elements through \"defaultView.getComputedStyle\"\n    let view = elem.ownerDocument.defaultView;\n\n    if (!view || !view.opener) {\n      view = window;\n    }\n\n    return view.getComputedStyle(elem);\n  }\n}\n","import { Component, ElementRef, HostListener, QueryList, TemplateRef, ViewChild, ViewChildren, Renderer2 } from '@angular/core';\nimport { isBs3 } from '../utils/theme-provider';\nimport { TypeaheadMatch } from './typeahead-match.class';\nimport { latinize } from './typeahead-utils';\nimport { TypeaheadDirective } from './typeahead.directive';\nimport { Utils } from '../utils/utils.class';\n\n\nexport class TypeaheadContainerComponent {\n  parent: TypeaheadDirective;\n  query: any;\n  element: ElementRef;\n  isFocused = false;\n  top: string;\n  left: string;\n  display: string;\n  placement: string;\n  dropup: boolean;\n  guiHeight: string;\n  needScrollbar: boolean;\n\n  get isBs4(): boolean {\n    return !isBs3();\n  }\n\n  protected _active: TypeaheadMatch;\n  protected _matches: TypeaheadMatch[] = [];\n\n  \n  private ulElement: ElementRef;\n\n  \n  private liElements: QueryList<ElementRef>;\n\n  constructor(element: ElementRef, private renderer: Renderer2) {\n    this.element = element;\n  }\n\n  get active(): TypeaheadMatch {\n    return this._active;\n  }\n\n  get matches(): TypeaheadMatch[] {\n    return this._matches;\n  }\n\n  set matches(value: TypeaheadMatch[]) {\n    this._matches = value;\n    this.needScrollbar = this.typeaheadScrollable && this.typeaheadOptionsInScrollableView < this.matches.length;\n    if (this.typeaheadScrollable) {\n      setTimeout(() => {\n        this.setScrollableMode();\n      });\n    }\n\n    if (this._matches.length > 0) {\n      this._active = this._matches[0];\n      if (this._active.isHeader()) {\n        this.nextActiveMatch();\n      }\n    }\n  }\n\n  get optionsListTemplate(): TemplateRef<any> {\n    return this.parent ? this.parent.optionsListTemplate : undefined;\n  }\n\n  get typeaheadScrollable(): boolean {\n    return this.parent ? this.parent.typeaheadScrollable : false;\n  }\n\n\n  get typeaheadOptionsInScrollableView(): number {\n    return this.parent ? this.parent.typeaheadOptionsInScrollableView : 5;\n  }\n\n  get itemTemplate(): TemplateRef<any> {\n    return this.parent ? this.parent.typeaheadItemTemplate : undefined;\n  }\n\n  selectActiveMatch(): void {\n    this.selectMatch(this._active);\n  }\n\n  prevActiveMatch(): void {\n    const index = this.matches.indexOf(this._active);\n    this._active = this.matches[\n      index - 1 < 0 ? this.matches.length - 1 : index - 1\n      ];\n    if (this._active.isHeader()) {\n      this.prevActiveMatch();\n    }\n    if (this.typeaheadScrollable) {\n      this.scrollPrevious(index);\n    }\n  }\n\n  nextActiveMatch(): void {\n    const index = this.matches.indexOf(this._active);\n    this._active = this.matches[\n      index + 1 > this.matches.length - 1 ? 0 : index + 1\n      ];\n    if (this._active.isHeader()) {\n      this.nextActiveMatch();\n    }\n    if (this.typeaheadScrollable) {\n      this.scrollNext(index);\n    }\n  }\n\n  selectActive(value: TypeaheadMatch): void {\n    this.isFocused = true;\n    this._active = value;\n  }\n\n  hightlight(match: TypeaheadMatch, query: any): string {\n    let itemStr: string = match.value;\n    let itemStrHelper: string = (this.parent && this.parent.typeaheadLatinize\n      ? latinize(itemStr)\n      : itemStr).toLowerCase();\n    let startIdx: number;\n    let tokenLen: number;\n    // Replaces the capture string with the same string inside of a \"strong\" tag\n    if (typeof query === 'object') {\n      const queryLen: number = query.length;\n      for (let i = 0; i < queryLen; i += 1) {\n        // query[i] is already latinized and lower case\n        startIdx = itemStrHelper.indexOf(query[i]);\n        tokenLen = query[i].length;\n        if (startIdx >= 0 && tokenLen > 0) {\n          itemStr =\n            `${itemStr.substring(0, startIdx)}<strong>${itemStr.substring(startIdx, startIdx + tokenLen)}</strong>` +\n            `${itemStr.substring(startIdx + tokenLen)}`;\n          itemStrHelper =\n            `${itemStrHelper.substring(0, startIdx)}        ${' '.repeat(tokenLen)}         ` +\n            `${itemStrHelper.substring(startIdx + tokenLen)}`;\n        }\n      }\n    } else if (query) {\n      // query is already latinized and lower case\n      startIdx = itemStrHelper.indexOf(query);\n      tokenLen = query.length;\n      if (startIdx >= 0 && tokenLen > 0) {\n        itemStr =\n          `${itemStr.substring(0, startIdx)}<strong>${itemStr.substring(startIdx, startIdx + tokenLen)}</strong>` +\n          `${itemStr.substring(startIdx + tokenLen)}`;\n      }\n    }\n\n    return itemStr;\n  }\n\n  \n  \n  focusLost(): void {\n    this.isFocused = false;\n  }\n\n  isActive(value: TypeaheadMatch): boolean {\n    return this._active === value;\n  }\n\n  selectMatch(value: TypeaheadMatch, e: Event = void 0): boolean {\n    if (e) {\n      e.stopPropagation();\n      e.preventDefault();\n    }\n    this.parent.changeModel(value);\n    setTimeout(() => this.parent.typeaheadOnSelect.emit(value), 0);\n\n    return false;\n  }\n\n  setScrollableMode(): void {\n    if (!this.ulElement) {\n      this.ulElement = this.element;\n    }\n    if (this.liElements.first) {\n      const ulStyles = Utils.getStyles(this.ulElement.nativeElement);\n      const liStyles = Utils.getStyles(this.liElements.first.nativeElement);\n      const ulPaddingBottom = parseFloat((ulStyles['padding-bottom'] ? ulStyles['padding-bottom'] : '').replace('px', ''));\n      const ulPaddingTop = parseFloat((ulStyles['padding-top'] ? ulStyles['padding-top'] : '0').replace('px', ''));\n      const optionHeight = parseFloat((liStyles['height'] ? liStyles['height'] : '0').replace('px', ''));\n      const height = this.typeaheadOptionsInScrollableView * optionHeight;\n      this.guiHeight = (height + ulPaddingTop + ulPaddingBottom) + 'px';\n    }\n    this.renderer.setStyle(this.element.nativeElement, 'visibility', 'visible');\n  }\n\n  scrollPrevious(index: number): void {\n    if (index === 0) {\n      this.scrollToBottom();\n      return;\n    }\n    if (this.liElements) {\n      const liElement = this.liElements.toArray()[index - 1];\n      if (liElement && !this.isScrolledIntoView(liElement.nativeElement)) {\n        this.ulElement.nativeElement.scrollTop = liElement.nativeElement.offsetTop;\n      }\n    }\n  }\n\n  scrollNext(index: number): void {\n    if (index + 1 > this.matches.length - 1) {\n      this.scrollToTop();\n      return;\n    }\n    if (this.liElements) {\n      const liElement = this.liElements.toArray()[index + 1];\n      if (liElement && !this.isScrolledIntoView(liElement.nativeElement)) {\n        this.ulElement.nativeElement.scrollTop =\n          liElement.nativeElement.offsetTop -\n          this.ulElement.nativeElement.offsetHeight +\n          liElement.nativeElement.offsetHeight;\n      }\n    }\n  }\n\n\n  private isScrolledIntoView = function (elem: HTMLElement) {\n    const containerViewTop = this.ulElement.nativeElement.scrollTop;\n    const containerViewBottom = containerViewTop + this.ulElement.nativeElement.offsetHeight;\n    const elemTop = elem.offsetTop;\n    const elemBottom = elemTop + elem.offsetHeight;\n\n    return ((elemBottom <= containerViewBottom) && (elemTop >= containerViewTop));\n  }\n\n  private scrollToBottom(): void {\n    this.ulElement.nativeElement.scrollTop = this.ulElement.nativeElement.scrollHeight;\n  }\n\n  private scrollToTop(): void {\n    this.ulElement.nativeElement.scrollTop = 0;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'typeahead-container',\n  // tslint:disable-next-line\n  template: \"<!-- inject options list template --> <ng-template [ngTemplateOutlet]=\\\"optionsListTemplate || (isBs4 ? bs4Template : bs3Template)\\\" [ngTemplateOutletContext]=\\\"{matches:matches, itemTemplate:itemTemplate, query:query}\\\"></ng-template> <!-- default options item template --> <ng-template #bsItemTemplate let-match=\\\"match\\\" let-query=\\\"query\\\"><span [innerHtml]=\\\"hightlight(match, query)\\\"></span> </ng-template> <!-- Bootstrap 3 options list template --> <ng-template #bs3Template> <ul class=\\\"dropdown-menu\\\" #ulElement [style.overflow-y]=\\\"needScrollbar ? 'scroll': 'auto'\\\" [style.height]=\\\"needScrollbar ? guiHeight: 'auto'\\\"> <ng-template ngFor let-match let-i=\\\"index\\\" [ngForOf]=\\\"matches\\\"> <li #liElements *ngIf=\\\"match.isHeader()\\\" class=\\\"dropdown-header\\\">{{ match }}</li> <li #liElements *ngIf=\\\"!match.isHeader()\\\" [class.active]=\\\"isActive(match)\\\" (mouseenter)=\\\"selectActive(match)\\\"> <a href=\\\"#\\\" (click)=\\\"selectMatch(match, $event)\\\" tabindex=\\\"-1\\\"> <ng-template [ngTemplateOutlet]=\\\"itemTemplate || bsItemTemplate\\\" [ngTemplateOutletContext]=\\\"{item:match.item, index:i, match:match, query:query}\\\"></ng-template> </a> </li> </ng-template> </ul> </ng-template> <!-- Bootstrap 4 options list template --> <ng-template #bs4Template> <ng-template ngFor let-match let-i=\\\"index\\\" [ngForOf]=\\\"matches\\\"> <h6 *ngIf=\\\"match.isHeader()\\\" class=\\\"dropdown-header\\\">{{ match }}</h6> <ng-template [ngIf]=\\\"!match.isHeader()\\\"> <button #liElements class=\\\"dropdown-item\\\" (click)=\\\"selectMatch(match, $event)\\\" (mouseenter)=\\\"selectActive(match)\\\" [class.active]=\\\"isActive(match)\\\"> <ng-template [ngTemplateOutlet]=\\\"itemTemplate || bsItemTemplate\\\" [ngTemplateOutletContext]=\\\"{item:match.item, index:i, match:match, query:query}\\\"></ng-template> </button> </ng-template> </ng-template> </ng-template> \",\n  host: {\n    class: 'dropdown open',\n    '[class.dropdown-menu]': 'isBs4',\n    '[style.overflow-y]' : `isBs4 && needScrollbar ? 'scroll': 'visible'`,\n    '[style.height]': `isBs4 && needScrollbar ? guiHeight: 'auto'`,\n    '[style.visibility]': `typeaheadScrollable ? 'hidden' : 'visible'`,\n    '[class.dropup]': 'dropup',\n    style: 'position: absolute;display: block;'\n  }\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Renderer2, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'ulElement': [{ type: ViewChild, args: ['ulElement', ] },],\n'liElements': [{ type: ViewChildren, args: ['liElements', ] },],\n'focusLost': [{ type: HostListener, args: ['mouseleave', ] },{ type: HostListener, args: ['blur', ] },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/* tslint:disable:max-file-line-count */\nimport {\n  ChangeDetectorRef,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  HostListener,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  Renderer2,\n  TemplateRef,\n  ViewContainerRef\n} from '@angular/core';\nimport { NgControl } from '@angular/forms';\nimport 'rxjs/add/observable/from';\nimport 'rxjs/add/operator/debounceTime';\nimport 'rxjs/add/operator/filter';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/mergeMap';\nimport 'rxjs/add/operator/toArray';\n\nimport { Observable } from 'rxjs/Observable';\nimport { Subscription } from 'rxjs/Subscription';\nimport { ComponentLoader, ComponentLoaderFactory } from '../component-loader';\nimport { TypeaheadContainerComponent } from './typeahead-container.component';\nimport { TypeaheadMatch } from './typeahead-match.class';\nimport { getValueFromObject, latinize, tokenize } from './typeahead-utils';\n\n\nexport class TypeaheadDirective implements OnInit, OnDestroy {\n  /** options source, can be Array of strings, objects or\n   * an Observable for external matching process\n   */\n   typeahead: any;\n  /** minimal no of characters that needs to be entered before\n   * typeahead kicks-in. When set to 0, typeahead shows on focus with full\n   * list of options (limited as normal by typeaheadOptionsLimit)\n   */\n   typeaheadMinLength: number = void 0;\n  /** minimal wait time after last character typed before typeahead kicks-in */\n   typeaheadWaitMs: number;\n  /** maximum length of options items list */\n   typeaheadOptionsLimit: number;\n  /** when options source is an array of objects, the name of field\n   * that contains the options value, we use array item as option in case\n   * of this field is missing. Supports nested properties and methods.\n   */\n   typeaheadOptionField: string;\n  /** when options source is an array of objects, the name of field that\n   * contains the group value, matches are grouped by this field when set.\n   */\n   typeaheadGroupField: string;\n  /** should be used only in case of typeahead attribute is array.\n   * If true - loading of options will be async, otherwise - sync.\n   * true make sense if options array is large.\n   */\n   typeaheadAsync: boolean = void 0;\n  /** match latin symbols.\n   * If true the word súper would match super and vice versa.\n   */\n   typeaheadLatinize = true;\n  /** break words with spaces. If true the text \"exact phrase\"\n   * here match would match with match exact phrase here\n   * but not with phrase here exact match (kind of \"google style\").\n   */\n   typeaheadSingleWords = true;\n  /** should be used only in case typeaheadSingleWords attribute is true.\n   * Sets the word delimiter to break words. Defaults to space.\n   */\n   typeaheadWordDelimiters = ' ';\n  /** should be used only in case typeaheadSingleWords attribute is true.\n   * Sets the word delimiter to match exact phrase.\n   * Defaults to simple and double quotes.\n   */\n   typeaheadPhraseDelimiters = '\\'\"';\n  /** used to specify a custom item template.\n   * Template variables exposed are called item and index;\n   */\n   typeaheadItemTemplate: TemplateRef<any>;\n  /** used to specify a custom options list template.\n   * Template variables: matches, itemTemplate, query\n   */\n   optionsListTemplate: TemplateRef<any>;\n  /** specifies if typeahead is scrollable  */\n   typeaheadScrollable = false;\n  /** specifies number of options to show in scroll view  */\n   typeaheadOptionsInScrollableView = 5;\n  /** fired when 'busy' state of this component was changed,\n   * fired on async mode only, returns boolean\n   */\n   typeaheadLoading: EventEmitter<boolean> = new EventEmitter();\n  /** fired on every key event and returns true\n   * in case of matches are not detected\n   */\n   typeaheadNoResults: EventEmitter<boolean> = new EventEmitter();\n  /** fired when option was selected, return object with data of this option */\n   typeaheadOnSelect: EventEmitter<TypeaheadMatch> = new EventEmitter();\n  /** fired when blur event occurres. returns the active item */\n   typeaheadOnBlur: EventEmitter<any> = new EventEmitter();\n\n  /**\n   * A selector specifying the element the typeahead should be appended to.\n   * Currently only supports \"body\".\n   */\n   container: string;\n\n  /** This attribute indicates that the dropdown should be opened upwards */\n   dropup = false;\n\n  // not yet implemented\n  /** if false restrict model values to the ones selected from the popup only will be provided */\n  // @Input() protected typeaheadEditable:boolean;\n  /** if false the first match automatically will not be focused as you type */\n  // @Input() protected typeaheadFocusFirst:boolean;\n  /** format the ng-model result after selection */\n  // @Input() protected typeaheadInputFormatter:any;\n  /** if true automatically select an item when there is one option that exactly matches the user input */\n  // @Input() protected typeaheadSelectOnExact:boolean;\n  /**  if true select the currently highlighted match on blur */\n  // @Input() protected typeaheadSelectOnBlur:boolean;\n  /**  if false don't focus the input element the typeahead directive is associated with on selection */\n    // @Input() protected typeaheadFocusOnSelect:boolean;\n\n  _container: TypeaheadContainerComponent;\n  isTypeaheadOptionsListActive = false;\n\n  protected keyUpEventEmitter: EventEmitter<any> = new EventEmitter();\n  protected _matches: TypeaheadMatch[];\n  protected placement = 'bottom-left';\n  // protected popup:ComponentRef<TypeaheadContainerComponent>;\n\n  private _typeahead: ComponentLoader<TypeaheadContainerComponent>;\n  private _subscriptions: Subscription[] = [];\n  private _outsideClickListener: Function;\n\n  constructor(private ngControl: NgControl,\n              private element: ElementRef,\n              viewContainerRef: ViewContainerRef,\n              private renderer: Renderer2,\n              cis: ComponentLoaderFactory,\n              private changeDetection: ChangeDetectorRef) {\n    this._typeahead = cis.createLoader<TypeaheadContainerComponent>(\n      element,\n      viewContainerRef,\n      renderer\n    );\n  }\n\n  ngOnInit(): void {\n    this.typeaheadOptionsLimit = this.typeaheadOptionsLimit || 20;\n    this.typeaheadMinLength =\n      this.typeaheadMinLength === void 0 ? 1 : this.typeaheadMinLength;\n    this.typeaheadWaitMs = this.typeaheadWaitMs || 0;\n\n    // async should be false in case of array\n    if (\n      this.typeaheadAsync === undefined &&\n      !(this.typeahead instanceof Observable)\n    ) {\n      this.typeaheadAsync = false;\n    }\n\n    if (this.typeahead instanceof Observable) {\n      this.typeaheadAsync = true;\n    }\n\n    if (this.typeaheadAsync) {\n      this.asyncActions();\n    } else {\n      this.syncActions();\n    }\n  }\n\n  \n  onInput(e: any): void {\n    // For `<input>`s, use the `value` property. For others that don't have a\n    // `value` (such as `<span contenteditable=\"true\">`), use either\n    // `textContent` or `innerText` (depending on which one is supported, i.e.\n    // Firefox or IE).\n    const value =\n      e.target.value !== undefined\n        ? e.target.value\n        : e.target.textContent !== undefined\n        ? e.target.textContent\n        : e.target.innerText;\n    if (value != null && value.trim().length >= this.typeaheadMinLength) {\n      this.typeaheadLoading.emit(true);\n      this.keyUpEventEmitter.emit(e.target.value);\n    } else {\n      this.typeaheadLoading.emit(false);\n      this.typeaheadNoResults.emit(false);\n      this.hide();\n    }\n  }\n\n  \n  onChange(e: any): void {\n    if (this._container) {\n      // esc\n      if (e.keyCode === 27) {\n        this.hide();\n\n        return;\n      }\n\n      // up\n      if (e.keyCode === 38) {\n        this._container.prevActiveMatch();\n\n        return;\n      }\n\n      // down\n      if (e.keyCode === 40) {\n        this._container.nextActiveMatch();\n\n        return;\n      }\n\n      // enter, tab\n      if (e.keyCode === 13 || e.keyCode === 9) {\n        this._container.selectActiveMatch();\n\n        return;\n      }\n    }\n  }\n\n  \n  \n  onFocus(): void {\n    if (this.typeaheadMinLength === 0) {\n      this.typeaheadLoading.emit(true);\n      this.keyUpEventEmitter.emit('');\n    }\n  }\n\n  \n  onBlur(): void {\n    if (this._container && !this._container.isFocused) {\n      this.typeaheadOnBlur.emit(this._container.active);\n    }\n  }\n\n  \n  onKeydown(e: any): void {\n    // no container - no problems\n    if (!this._container) {\n      return;\n    }\n\n    // if an item is visible - prevent form submission\n    if (e.keyCode === 13) {\n      e.preventDefault();\n\n      return;\n    }\n\n    // if an item is visible - don't change focus\n    if (e.keyCode === 9) {\n      e.preventDefault();\n\n      return;\n    }\n  }\n\n  changeModel(match: TypeaheadMatch): void {\n    const valueStr: string = match.value;\n    this.ngControl.viewToModelUpdate(valueStr);\n    (this.ngControl.control).setValue(valueStr);\n    this.changeDetection.markForCheck();\n    this.hide();\n  }\n\n  get matches(): any[] {\n    return this._matches;\n  }\n\n  show(): void {\n    this._typeahead\n      .attach(TypeaheadContainerComponent)\n      // todo: add append to body, after updating positioning service\n      .to(this.container)\n      .position({attachment: `${this.dropup ? 'top' : 'bottom'} left`})\n      .show({\n        typeaheadRef: this,\n        placement: this.placement,\n        animation: false,\n        dropup: this.dropup\n      });\n\n    this._outsideClickListener = this.renderer.listen('document', 'click', () => {\n      this.onOutsideClick();\n    });\n\n    this._container = this._typeahead.instance;\n    this._container.parent = this;\n    // This improves the speed as it won't have to be done for each list item\n    const normalizedQuery = (this.typeaheadLatinize\n      ? latinize(this.ngControl.control.value)\n      : this.ngControl.control.value)\n      .toString()\n      .toLowerCase();\n    this._container.query = this.typeaheadSingleWords\n      ? tokenize(\n        normalizedQuery,\n        this.typeaheadWordDelimiters,\n        this.typeaheadPhraseDelimiters\n      )\n      : normalizedQuery;\n    this._container.matches = this._matches;\n    this.element.nativeElement.focus();\n  }\n\n  hide(): void {\n    if (this._typeahead.isShown) {\n      this._typeahead.hide();\n      this._outsideClickListener();\n      this._container = null;\n    }\n  }\n\n  onOutsideClick(): void {\n    if (this._container && !this._container.isFocused) {\n      this.hide();\n    }\n  }\n\n  ngOnDestroy(): any {\n    // clean up subscriptions\n    for (const sub of this._subscriptions) {\n      sub.unsubscribe();\n    }\n    this._typeahead.dispose();\n  }\n\n  protected asyncActions(): void {\n    this._subscriptions.push(\n      this.keyUpEventEmitter\n        .debounceTime(this.typeaheadWaitMs)\n        .mergeMap(() => this.typeahead)\n        .subscribe((matches: any[]) => {\n          this.finalizeAsyncCall(matches);\n        })\n    );\n  }\n\n  protected syncActions(): void {\n    this._subscriptions.push(\n      this.keyUpEventEmitter\n        .debounceTime(this.typeaheadWaitMs)\n        .mergeMap((value: string) => {\n          const normalizedQuery = this.normalizeQuery(value);\n\n          return Observable.from(this.typeahead)\n            .filter((option: any) => {\n              return (\n                option &&\n                this.testMatch(this.normalizeOption(option), normalizedQuery)\n              );\n            })\n            .toArray();\n        })\n        .subscribe((matches: any[]) => {\n          this.finalizeAsyncCall(matches);\n        })\n    );\n  }\n\n  protected normalizeOption(option: any): any {\n    const optionValue: string = getValueFromObject(\n      option,\n      this.typeaheadOptionField\n    );\n    const normalizedOption = this.typeaheadLatinize\n      ? latinize(optionValue)\n      : optionValue;\n\n    return normalizedOption.toLowerCase();\n  }\n\n  protected normalizeQuery(value: string): any {\n    // If singleWords, break model here to not be doing extra work on each\n    // iteration\n    let normalizedQuery: any = (this.typeaheadLatinize\n      ? latinize(value)\n      : value)\n      .toString()\n      .toLowerCase();\n    normalizedQuery = this.typeaheadSingleWords\n      ? tokenize(\n        normalizedQuery,\n        this.typeaheadWordDelimiters,\n        this.typeaheadPhraseDelimiters\n      )\n      : normalizedQuery;\n\n    return normalizedQuery;\n  }\n\n  protected testMatch(match: string, test: any): boolean {\n    let spaceLength: number;\n\n    if (typeof test === 'object') {\n      spaceLength = test.length;\n      for (let i = 0; i < spaceLength; i += 1) {\n        if (test[i].length > 0 && match.indexOf(test[i]) < 0) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n\n    return match.indexOf(test) >= 0;\n  }\n\n  protected finalizeAsyncCall(matches: any[]): void {\n    this.prepareMatches(matches);\n\n    this.typeaheadLoading.emit(false);\n    this.typeaheadNoResults.emit(!this.hasMatches());\n\n    if (!this.hasMatches()) {\n      this.hide();\n\n      return;\n    }\n\n    if (this._container) {\n      // This improves the speed as it won't have to be done for each list item\n      const normalizedQuery = (this.typeaheadLatinize\n        ? latinize(this.ngControl.control.value)\n        : this.ngControl.control.value)\n        .toString()\n        .toLowerCase();\n      this._container.query = this.typeaheadSingleWords\n        ? tokenize(\n          normalizedQuery,\n          this.typeaheadWordDelimiters,\n          this.typeaheadPhraseDelimiters\n        )\n        : normalizedQuery;\n      this._container.matches = this._matches;\n    } else {\n      this.show();\n    }\n  }\n\n  protected prepareMatches(options: any[]): void {\n    const limited: any[] = options.slice(0, this.typeaheadOptionsLimit);\n\n    if (this.typeaheadGroupField) {\n      let matches: TypeaheadMatch[] = [];\n\n      // extract all group names\n      const groups = limited\n        .map((option: any) =>\n          getValueFromObject(option, this.typeaheadGroupField)\n        )\n        .filter((v: string, i: number, a: any[]) => a.indexOf(v) === i);\n\n      groups.forEach((group: string) => {\n        // add group header to array of matches\n        matches.push(new TypeaheadMatch(group, group, true));\n\n        // add each item of group to array of matches\n        matches = matches.concat(\n          limited\n            .filter(\n              (option: any) =>\n                getValueFromObject(option, this.typeaheadGroupField) === group\n            )\n            .map(\n              (option: any) =>\n                new TypeaheadMatch(\n                  option,\n                  getValueFromObject(option, this.typeaheadOptionField)\n                )\n            )\n        );\n      });\n\n      this._matches = matches;\n    } else {\n      this._matches = limited.map(\n        (option: any) =>\n          new TypeaheadMatch(\n            option,\n            getValueFromObject(option, this.typeaheadOptionField)\n          )\n      );\n    }\n  }\n\n  protected hasMatches(): boolean {\n    return this._matches.length > 0;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{selector: '[typeahead]', exportAs: 'bs-typeahead'}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: NgControl, },\n{type: ElementRef, },\n{type: ViewContainerRef, },\n{type: Renderer2, },\n{type: ComponentLoaderFactory, },\n{type: ChangeDetectorRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'typeahead': [{ type: Input },],\n'typeaheadMinLength': [{ type: Input },],\n'typeaheadWaitMs': [{ type: Input },],\n'typeaheadOptionsLimit': [{ type: Input },],\n'typeaheadOptionField': [{ type: Input },],\n'typeaheadGroupField': [{ type: Input },],\n'typeaheadAsync': [{ type: Input },],\n'typeaheadLatinize': [{ type: Input },],\n'typeaheadSingleWords': [{ type: Input },],\n'typeaheadWordDelimiters': [{ type: Input },],\n'typeaheadPhraseDelimiters': [{ type: Input },],\n'typeaheadItemTemplate': [{ type: Input },],\n'optionsListTemplate': [{ type: Input },],\n'typeaheadScrollable': [{ type: Input },],\n'typeaheadOptionsInScrollableView': [{ type: Input },],\n'typeaheadLoading': [{ type: Output },],\n'typeaheadNoResults': [{ type: Output },],\n'typeaheadOnSelect': [{ type: Output },],\n'typeaheadOnBlur': [{ type: Output },],\n'container': [{ type: Input },],\n'dropup': [{ type: Input },],\n'onInput': [{ type: HostListener, args: ['input', ['$event'], ] },],\n'onChange': [{ type: HostListener, args: ['keyup', ['$event'], ] },],\n'onFocus': [{ type: HostListener, args: ['click', ] },{ type: HostListener, args: ['focus', ] },],\n'onBlur': [{ type: HostListener, args: ['blur', ] },],\n'onKeydown': [{ type: HostListener, args: ['keydown', ['$event'], ] },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule, ModuleWithProviders } from '@angular/core';\n\nimport { TypeaheadContainerComponent } from './typeahead-container.component';\nimport { TypeaheadDirective } from './typeahead.directive';\nimport { ComponentLoaderFactory } from '../component-loader';\nimport { PositioningService } from '../positioning';\n\n\nexport class TypeaheadModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: TypeaheadModule,\n      providers: [ComponentLoaderFactory, PositioningService]\n    };\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  imports: [CommonModule],\n  declarations: [TypeaheadContainerComponent, TypeaheadDirective],\n  exports: [TypeaheadContainerComponent, TypeaheadDirective],\n  entryComponents: [TypeaheadContainerComponent]\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Facet } from './models/facet';\nexport class FacetSelect {\n/**\n * @param {?} facet\n */\nconstructor(public facet: Facet) {}\n}\n\nfunction FacetSelect_tsickle_Closure_declarations() {\n/** @type {?} */\nFacetSelect.prototype.facet;\n}\n\nexport class FacetDeselect {\n/**\n * @param {?} facet\n */\nconstructor(public facet: Facet) {}\n}\n\nfunction FacetDeselect_tsickle_Closure_declarations() {\n/** @type {?} */\nFacetDeselect.prototype.facet;\n}\n\nexport class FacetDeselectAll {\nconstructor() {}\n}\n\nexport type FacetEvent = FacetSelect | FacetDeselect | FacetDeselectAll;","import { Component, Input, EventEmitter, Output } from '@angular/core';\nimport { FacetEvent, FacetSelect, FacetDeselect, FacetDeselectAll } from './facet-events';\nimport { Facet } from './models/facet';\nexport class FacetContainerComponent {\n\n     header: string = 'Selected:';\n     clearTooltip: string = 'Clear All';\n     emptyText: string = 'No Items';\n     facets: Facet[] = [];\n\n     facetsChange: EventEmitter<Facet[]> = new EventEmitter<Facet[]>();\n     events: EventEmitter<FacetEvent> = new EventEmitter<FacetEvent>();\n/**\n * @param {?} facet\n * @return {?}\n */\nselectFacet(facet: Facet): void {\n        // push the facet on to the list\n        this.facets.push(facet);\n\n        // update the two way binding\n        this.facetsChange.emit(this.facets);\n\n        // trigger event\n        this.triggerEvent(new FacetSelect(facet));\n    }\n/**\n * @param {?} facet\n * @return {?}\n */\ndeselectFacet(facet: Facet): void {\n\n        // find the index of the item in the selected array\n        let /** @type {?} */ idx = this.facets.findIndex(selectedFacet => facet === selectedFacet);\n\n        // if match there was no match then finish\n        if (idx === -1) {\n            return;\n        }\n\n        // remove the last item\n        this.facets.splice(idx, 1);\n\n        // update the two way binding\n        this.facetsChange.emit(this.facets);\n\n        // trigger event\n        this.triggerEvent(new FacetDeselect(facet));\n    }\n/**\n * @return {?}\n */\ndeselectAllFacets(): void {\n\n        // empty the selected array\n        this.facets = [];\n\n        // update the two way binding\n        this.facetsChange.emit(this.facets);\n\n        // trigger event\n        this.triggerEvent(new FacetDeselectAll());\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nprivate triggerEvent(event: FacetEvent) {\n        this.events.next(event);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-facet-container',\n    template: `\n      <!-- Display Any Selected Facets -->\n      <div class=\"facets-selected-container\">\n\n          <!-- Display Title an Clear Button -->\n          <div class=\"facets-selected-header-container\">\n\n              <!-- Show The Selected Text -->\n              <span class=\"facets-selected-header-label\">{{ header }}</span>\n\n              <!-- Add a Clear Button -->\n              <div class=\"facets-selected-clear-button\" tabindex=\"0\" [tooltip]=\"clearTooltip\" placement=\"left\" container=\"body\" (click)=\"deselectAllFacets()\"\n                  (keyup.enter)=\"deselectAllFacets()\" *ngIf=\"facets.length > 0\">\n\n                  <svg class=\"facets-selected-clear-graphic\" viewBox=\"0 0 19 12\" shape-rendering=\"geometricPrecision\">\n                      <rect class=\"light-grey\" x=\"0\" y=\"2\" width=\"7\" height=\"2\"></rect>\n                      <rect class=\"dark-grey\" x=\"0\" y=\"5\" width=\"9\" height=\"2\"></rect>\n                      <rect class=\"light-grey\" x=\"0\" y=\"8\" width=\"7\" height=\"2\"></rect>\n                      <path class=\"dark-grey\" d=\"M9,1 h1 l9,9 v1 h-1 l-9,-9 v-1 Z\"></path>\n                      <path class=\"dark-grey\" d=\"M9,11 v-1 l9,-9 h1 v1 l-9,9 h-1 Z\"></path>\n                  </svg>\n              </div>\n\n          </div>\n\n          <!-- Display Tags For Selected Items -->\n          <div class=\"facets-selected-list\">\n\n              <!-- Show Selected Tags -->\n              <div class=\"facet-selected-tag\" tabindex=\"0\" *ngFor=\"let facet of facets\" (mousedown)=\"$event.preventDefault()\" (click)=\"deselectFacet(facet)\" (keyup.enter)=\"deselectFacet(facet)\">\n\n                  <!-- Display Label -->\n                  <span class=\"facet-selected-tag-label\">{{ facet.title }}</span>\n\n                  <!-- Display Remove Icon -->\n                  <span class=\"hpe-icon hpe-close\"></span>\n              </div>\n\n          </div>\n\n          <!-- Show Message Here if No Facets Selected -->\n          <p class=\"facets-selected-none-label\" *ngIf=\"emptyText && facets.length === 0\">{{ emptyText }}</p>\n\n      </div>\n\n      <!-- Any Facet Elements Should be Added Here By User -->\n      <div class=\"facets-region\">\n          <ng-content></ng-content>\n      </div>\n    `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'header': [{ type: Input },],\n'clearTooltip': [{ type: Input },],\n'emptyText': [{ type: Input },],\n'facets': [{ type: Input },],\n'facetsChange': [{ type: Output },],\n'events': [{ type: Output },],\n};\n}\n\nfunction FacetContainerComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nFacetContainerComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFacetContainerComponent.ctorParameters;\n/** @type {?} */\nFacetContainerComponent.propDecorators;\n/** @type {?} */\nFacetContainerComponent.prototype.header;\n/** @type {?} */\nFacetContainerComponent.prototype.clearTooltip;\n/** @type {?} */\nFacetContainerComponent.prototype.emptyText;\n/** @type {?} */\nFacetContainerComponent.prototype.facets;\n/** @type {?} */\nFacetContainerComponent.prototype.facetsChange;\n/** @type {?} */\nFacetContainerComponent.prototype.events;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Host, Input, Output, EventEmitter, OnInit, ElementRef } from '@angular/core';\nimport { FacetContainerComponent } from '../../facet-container.component';\nimport { FacetEvent, FacetDeselectAll, FacetDeselect, FacetSelect } from '../../facet-events';\nimport { Facet } from '../../models/facet';\nimport { Subject } from 'rxjs/Subject';\nimport'rxjs/add/operator/filter';\nexport class FacetBaseComponent implements OnInit {\n\n     selected: Facet[] = [];\n     selectedChange: EventEmitter<Facet[]> = new EventEmitter<Facet[]>();\n\n     events: Subject<FacetEvent> = new Subject<FacetEvent>();\n/**\n * @param {?} facetContainer\n * @param {?} _elementRef\n */\nconstructor(\nprivate facetContainer: FacetContainerComponent,\npublic _elementRef: ElementRef) {\n\n        if (facetContainer) {\n\n            // subscribe to any deselect events from the facet container\n            facetContainer.events.filter(event => event instanceof FacetDeselect)\n                .filter((event: FacetDeselect) => !!this.selected.find(facet => facet === event.facet))\n                .subscribe((event: FacetDeselect) => this.deselectFacet(event.facet));\n\n            // subscribe to any deselect all events from facet container\n            facetContainer.events.filter(event => event instanceof FacetDeselectAll).subscribe(_ => this.deselectAll());\n\n        }\n    }\n/**\n * @return {?}\n */\nngOnInit(): void {\n        // check if there should be any facets initially selected\n        if (this.facetContainer) {\n            this.selected.forEach(facet => this.facetContainer.selectFacet(facet));\n        }\n    }\n/**\n * @param {?} facet\n * @return {?}\n */\nselectFacet(facet: Facet): void {\n\n        // if the facet is disabled it should not be selected\n        if (facet.disabled) {\n            return;\n        }\n\n        // add the facet to the list of selected facets\n        this.selected.push(facet);\n\n        // send the new value to the event emitter\n        this.selectedChange.emit(this.selected);\n\n        // fire the event to the observable\n        this.triggerEvent(new FacetSelect(facet));\n\n        // tell the facet container about the selected facet\n        if (this.facetContainer) {\n            this.facetContainer.selectFacet(facet);\n        }\n    }\n/**\n * @param {?} facet\n * @return {?}\n */\ndeselectFacet(facet: Facet): void {\n\n        // find facet to remove\n        let /** @type {?} */ index = this.selected.findIndex(selectedFacet => selectedFacet === facet);\n\n        // only continue if facet is found\n        if (index !== -1) {\n\n            // remove the facet from the selected list\n            this.selected.splice(index, 1);\n\n            // emit the changes to selected event emitter\n            this.selectedChange.emit(this.selected);\n\n            // fire the event to the observable\n            this.triggerEvent(new FacetDeselect(facet));\n\n            // deselect the facet in the facet container\n            if (this.facetContainer) {\n                this.facetContainer.deselectFacet(facet);\n            }\n        }\n    }\n/**\n * @return {?}\n */\ndeselectAll(): void {\n\n        // remove all selected facets\n        this.selected = [];\n\n        // fire the event to the observable\n        this.triggerEvent(new FacetDeselectAll());\n\n        // emit the changes to the selected event emitter\n        this.selectedChange.emit(this.selected);\n    }\n/**\n * @param {?} facet\n * @return {?}\n */\ntoggleFacetSelection(facet: Facet): void {\n\n        // if the facet is selected then deselect - otherwise select it\n        if (this.isFacetSelected(facet)) {\n            this.deselectFacet(facet);\n        } else {\n            this.selectFacet(facet);\n        }\n\n    }\n/**\n * @param {?} facet\n * @return {?}\n */\nisFacetSelected(facet: Facet): boolean {\n        // determine if a facet is currently selected\n        return !!this.selected.find(selectedFacet => selectedFacet === facet);\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nprivate triggerEvent(event: FacetEvent): void {\n        this.events.next(event);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-facet-base',\n    template: '',\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: FacetContainerComponent, decorators: [{ type: Host }, ]},\n{type: ElementRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'selected': [{ type: Input },],\n'selectedChange': [{ type: Output },],\n'events': [{ type: Output },],\n};\n}\n\nfunction FacetBaseComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nFacetBaseComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFacetBaseComponent.ctorParameters;\n/** @type {?} */\nFacetBaseComponent.propDecorators;\n/** @type {?} */\nFacetBaseComponent.prototype.selected;\n/** @type {?} */\nFacetBaseComponent.prototype.selectedChange;\n/** @type {?} */\nFacetBaseComponent.prototype.events;\n/** @type {?} */\nFacetBaseComponent.prototype.facetContainer;\n/** @type {?} */\nFacetBaseComponent.prototype._elementRef;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Output, EventEmitter, Input } from '@angular/core';\nexport class FacetHeaderComponent {\n\n     header: string;\n     canExpand: boolean = true;    \n     expanded: boolean = true;\n     expandedChange: EventEmitter<boolean> = new EventEmitter<boolean>();\n/**\n * @return {?}\n */\ntoggleExpand(): void {\n\n        // if not expandable then do nothing\n        if (this.canExpand) {\n            this.expanded = !this.expanded;\n            this.expandedChange.emit(this.expanded);\n        }\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-facet-header',\n    template: `\n      <span class=\"facet-header-title\">{{ header }}</span>\n      <span class=\"hpe-icon\" [class.hpe-down]=\"expanded\" [class.hpe-previous]=\"!expanded\" *ngIf=\"canExpand\"></span>\n    `,\n    host: {\n        'tabindex': '0',\n        '(click)': 'toggleExpand()',\n        '(keyup.enter)': 'toggleExpand()'\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'header': [{ type: Input },],\n'canExpand': [{ type: Input },],\n'expanded': [{ type: Input },],\n'expandedChange': [{ type: Output },],\n};\n}\n\nfunction FacetHeaderComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nFacetHeaderComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFacetHeaderComponent.ctorParameters;\n/** @type {?} */\nFacetHeaderComponent.propDecorators;\n/** @type {?} */\nFacetHeaderComponent.prototype.header;\n/** @type {?} */\nFacetHeaderComponent.prototype.canExpand;\n/** @type {?} */\nFacetHeaderComponent.prototype.expanded;\n/** @type {?} */\nFacetHeaderComponent.prototype.expandedChange;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Input } from '@angular/core';\nimport { FacetBaseComponent } from '../base/facet-base/facet-base.component';\nimport { Facet } from '../models/facet';\nexport class FacetCheckListComponent extends FacetBaseComponent {\n\n     facets: Facet[] = [];\n     header: string;\n     scrollbar: boolean = true;\n     expanded: boolean = true;\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-facet-check-list',\n    template: `\n      <ux-facet-header [header]=\"header\" [(expanded)]=\"expanded\"></ux-facet-header>\n\n      <!-- Create a container which will show when section is expanded -->\n      <div class=\"facet-check-list-container\" [class.facet-check-list-scrollbar]=\"scrollbar\" *ngIf=\"expanded\">\n\n          <!-- Iterate through each possible facet -->\n          <div class=\"facet-check-list-item\" *ngFor=\"let facet of facets\" [class.facet-active]=\"isFacetSelected(facet)\" tabindex=\"0\"\n              (click)=\"toggleFacetSelection(facet)\" (keyup.enter)=\"toggleFacetSelection(facet)\" [class.disabled]=\"facet.disabled\">\n\n              <!-- Show check icon to indicate the state -->\n              <span class=\"facet-check-list-item-check\">\n                  <span class=\"hpe-icon hpe-active\"></span>\n              </span>\n\n              <!-- Display the title -->\n              <span class=\"facet-check-list-item-title\">{{ facet.title }}</span>\n\n              <!-- Display the count if specified -->\n              <span class=\"facet-check-list-item-count\" *ngIf=\"facet.count !== undefined\">({{ facet.count }})</span>\n          </div>\n      </div>\n    `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'facets': [{ type: Input },],\n'header': [{ type: Input },],\n'scrollbar': [{ type: Input },],\n'expanded': [{ type: Input },],\n};\n}\n\nfunction FacetCheckListComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nFacetCheckListComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFacetCheckListComponent.ctorParameters;\n/** @type {?} */\nFacetCheckListComponent.propDecorators;\n/** @type {?} */\nFacetCheckListComponent.prototype.facets;\n/** @type {?} */\nFacetCheckListComponent.prototype.header;\n/** @type {?} */\nFacetCheckListComponent.prototype.scrollbar;\n/** @type {?} */\nFacetCheckListComponent.prototype.expanded;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, OnInit, Input, Host, Pipe, PipeTransform } from '@angular/core';\nimport { FacetBaseComponent } from '../base/facet-base/facet-base.component';\nimport { Observable } from 'rxjs/Observable';\nimport { Facet } from '../models/facet';\nimport { FacetContainerComponent } from '../facet-container.component';\nimport { TypeaheadMatch } from 'ngx-bootstrap/typeahead';\nimport'rxjs/add/operator/map';\nimport'rxjs/add/observable/of';\nimport { Observer } from 'rxjs/Observer';\nexport class FacetTypeaheadListComponent extends FacetBaseComponent implements OnInit {\n\n     facets: Facet[] | Observable<Facet[]>;\n     header: string;\n     expanded: boolean = true;\n     typeaheadConfig: FacetTypeaheadListConfig = {};\n     suggestions: Facet[] = [];\n     simplified: boolean = true;\n\n    typeaheadOptions: Observable<Facet[]>;\n    searchQuery: string;\nprivate _nativeElement: HTMLElement = /** @type {?} */(( this._elementRef.nativeElement as HTMLElement));\nprivate _defaultTypeaheadConfig: FacetTypeaheadListConfig = {\n        placeholder: '',\n        maxResults: 50,\n        minCharacters: 1\n    };\n/**\n * @return {?}\n */\nngOnInit() {\n\n        // wrap the observable and filter out any already selected items or any disabled items\n        if (this.facets instanceof Observable) {\n\n            // handle an observable of data\n            this.typeaheadOptions = Observable.from(this.facets).map((facets: Facet[]) => {\n\n                // remove disabled facets, selected facets and facets that dont match search term\n                return facets.filter(facet => !facet.disabled)\n                    .filter(facet => !this.selected.find(selectedFacet => selectedFacet === facet))\n                    .filter(facet => facet.title.toUpperCase().includes(this.searchQuery.toUpperCase()));\n            });\n\n        } else {\n\n            // handle an array of data\n            this.typeaheadOptions = Observable.of(this.facets).map((facets: Facet[]) => {\n\n                // remove disabled facets, selected facets and facets that dont match search term\n                return facets.filter(facet => !facet.disabled)\n                    .filter(facet => !this.selected.find(selectedFacet => selectedFacet === facet))\n                    .filter(facet => facet.title.toUpperCase().includes(this.searchQuery.toUpperCase()));\n            });\n        }\n\n        // provide default values for typeahead config\n        for (let /** @type {?} */ prop in this._defaultTypeaheadConfig) {\n\n            // check if prop has been defined in the users typeahead config - if not set default value\n            if (this.typeaheadConfig.hasOwnProperty(prop) === false) {\n                this.typeaheadConfig[prop] = this._defaultTypeaheadConfig[prop];\n            }\n        }\n    }\n/**\n * @param {?} typeaheadOption\n * @return {?}\n */\nselectOption(typeaheadOption: TypeaheadMatch) {\n\n        // check to make sure that the item is not currently selected\n        if (this.selected.find(facet => facet === typeaheadOption.item)) {\n            return;\n        }\n\n        // select the facet\n        this.selectFacet(typeaheadOption.item);\n\n        // clear the typeahead\n        this.searchQuery = '';\n    }\n/**\n * @return {?}\n */\nscrollToFocused(): void {\n\n        let /** @type {?} */ dropdown = this._nativeElement.querySelector('.dropdown-menu');\n\n        // delay to allow the typeahead ui to update\n        setTimeout(() => {\n\n            // find the currently active element if there is one\n            let /** @type {?} */ activeElement = dropdown.querySelector('.dropdown-menu > li.active');\n\n            if (activeElement) {\n\n                // check if element is not in view\n                let /** @type {?} */ elementBounds = activeElement.getBoundingClientRect();\n                let /** @type {?} */ dropdownBounds = dropdown.getBoundingClientRect();\n\n                if (elementBounds.top < dropdownBounds.top) {\n                    dropdown.scrollTop += elementBounds.top - dropdownBounds.top;\n                }\n\n                if (elementBounds.bottom > dropdownBounds.bottom) {\n                    dropdown.scrollTop += elementBounds.bottom - dropdownBounds.bottom;\n                }\n            }\n        });\n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-facet-typeahead-list',\n    template: `\n      <ux-facet-header [header]=\"header\" [(expanded)]=\"expanded\"></ux-facet-header>\n\n      <div class=\"facet-typeahead-list-container\" *ngIf=\"expanded\">\n\n          <div class=\"facet-typeahead-list-selected-container\" *ngIf=\"suggestions?.length > 0\">\n\n              <div class=\"facet-typeahead-list-selected-option\" tabindex=\"0\" *ngFor=\"let facet of suggestions\" (click)=\"toggleFacetSelection(facet)\"\n                  (keyup.enter)=\"toggleFacetSelection(facet)\">\n\n                  <ux-checkbox [clickable]=\"false\" [value]=\"isFacetSelected(facet)\" [simplified]=\"simplified\">\n                      <span class=\"facet-typeahead-list-selected-option-title\">{{ facet.title }}</span>\n                      <span class=\"facet-typeahead-list-selected-option-count\">({{ facet.count }})</span>\n                  </ux-checkbox>\n\n              </div>\n\n          </div>\n\n          <div class=\"facet-typeahead-list-control\">\n\n              <!-- Create Typeahead Control -->\n              <input type=\"text\" class=\"form-control\" [placeholder]=\"typeaheadConfig?.placeholder\" [typeahead]=\"typeaheadOptions\" [(ngModel)]=\"searchQuery\"\n                  [typeaheadMinLength]=\"typeaheadConfig?.minCharacters\" [typeaheadOptionsLimit]=\"typeaheadConfig?.maxResults\" [typeaheadWaitMs]=\"typeaheadConfig?.delay\"\n                  (typeaheadOnSelect)=\"selectOption($event)\" [typeaheadItemTemplate]=\"facetOptionTemplate\" (keyup.ArrowUp)=\"scrollToFocused()\" (keyup.ArrowDown)=\"scrollToFocused()\">\n\n          </div>\n\n      </div>\n\n      <ng-template #facetOptionTemplate let-model=\"item\" let-index=\"index\">\n          <p class=\"facet-typeahead-list-option\"><span [innerHTML]=\"model.title | facetTypeaheadHighlight: searchQuery\"></span> <span class=\"facet-typeahead-list-option-count\"\n                  *ngIf=\"model.count\">({{ model.count }})</span></p>\n      </ng-template>\n    `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'facets': [{ type: Input },],\n'header': [{ type: Input },],\n'expanded': [{ type: Input },],\n'typeaheadConfig': [{ type: Input },],\n'suggestions': [{ type: Input },],\n'simplified': [{ type: Input },],\n};\n}\n\nfunction FacetTypeaheadListComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nFacetTypeaheadListComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFacetTypeaheadListComponent.ctorParameters;\n/** @type {?} */\nFacetTypeaheadListComponent.propDecorators;\n/** @type {?} */\nFacetTypeaheadListComponent.prototype.facets;\n/** @type {?} */\nFacetTypeaheadListComponent.prototype.header;\n/** @type {?} */\nFacetTypeaheadListComponent.prototype.expanded;\n/** @type {?} */\nFacetTypeaheadListComponent.prototype.typeaheadConfig;\n/** @type {?} */\nFacetTypeaheadListComponent.prototype.suggestions;\n/** @type {?} */\nFacetTypeaheadListComponent.prototype.simplified;\n/** @type {?} */\nFacetTypeaheadListComponent.prototype.typeaheadOptions;\n/** @type {?} */\nFacetTypeaheadListComponent.prototype.searchQuery;\n/** @type {?} */\nFacetTypeaheadListComponent.prototype._nativeElement;\n/** @type {?} */\nFacetTypeaheadListComponent.prototype._defaultTypeaheadConfig;\n}\n\n\nexport interface FacetTypeaheadListConfig {\n    placeholder?: string;\n    minCharacters?: number;\n    maxResults?: number;\n    delay?: number;\n}\nexport class FacetTypeaheadHighlight implements PipeTransform {\n/**\n * @param {?} value\n * @param {?} searchQuery\n * @return {?}\n */\ntransform(value: string, searchQuery: string): string {\n        let /** @type {?} */ regex = new RegExp(searchQuery, 'i');\n        return value.replace(regex, `<b class=\"facet-typeahead-highlighted\">${ value.match(regex) }</b>`);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Pipe, args: [{\n    name: 'facetTypeaheadHighlight'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction FacetTypeaheadHighlight_tsickle_Closure_declarations() {\n/** @type {?} */\nFacetTypeaheadHighlight.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFacetTypeaheadHighlight.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\nimport { TypeaheadModule } from 'ngx-bootstrap/typeahead';\nimport { CommonModule } from '@angular/common';\nimport { FacetContainerComponent } from './facet-container.component';\nimport { FacetBaseComponent } from './base/facet-base/facet-base.component';\nimport { FacetHeaderComponent } from './base/facet-header/facet-header.component';\nimport { FacetCheckListComponent } from './facet-check-list/facet-check-list.component';\nimport { FacetTypeaheadListComponent, FacetTypeaheadHighlight } from './facet-typeahead-list/facet-typeahead-list.component';\nimport { FormsModule } from '@angular/forms';\nimport { CheckboxModule } from '../../index';\n\nconst /** @type {?} */ DECLARATIONS = [\n    FacetContainerComponent,\n    FacetHeaderComponent,\n    FacetBaseComponent,\n    FacetCheckListComponent,\n    FacetTypeaheadListComponent,\n    FacetTypeaheadHighlight\n];\nexport class FacetsModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        CommonModule,\n        FormsModule,\n        CheckboxModule,\n        TooltipModule.forRoot(),\n        TypeaheadModule.forRoot()\n    ],\n    exports: DECLARATIONS,\n    declarations: DECLARATIONS\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction FacetsModule_tsickle_Closure_declarations() {\n/** @type {?} */\nFacetsModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFacetsModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","\nexport class Facet {\n/**\n * @param {?} title\n * @param {?=} data\n * @param {?=} count\n * @param {?=} disabled\n * @param {?=} id\n */\nconstructor(\npublic title: string,\npublic data: any = {},\npublic count?: number,\npublic disabled: boolean = false,\npublic id?: string | number\n    ) { }\n}\n\nfunction Facet_tsickle_Closure_declarations() {\n/** @type {?} */\nFacet.prototype.title;\n/** @type {?} */\nFacet.prototype.data;\n/** @type {?} */\nFacet.prototype.count;\n/** @type {?} */\nFacet.prototype.disabled;\n/** @type {?} */\nFacet.prototype.id;\n}\n","import { Injectable } from '@angular/core';\n\n/** Default dropdown configuration */\n\nexport class BsDropdownConfig {\n  /** default dropdown auto closing behavior */\n  autoClose = true;\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { EventEmitter, Injectable } from '@angular/core';\nimport { BsComponentRef } from '../component-loader/bs-component-ref.class';\n\n\nexport class BsDropdownState {\n  direction: 'down' | 'up' = 'down';\n  autoClose: boolean;\n  isOpenChange = new EventEmitter<boolean>();\n  isDisabledChange = new EventEmitter<boolean>();\n  toggleClick = new EventEmitter<boolean>();\n\n  /**\n   * Content to be displayed as popover.\n   */\n  dropdownMenu: Promise<BsComponentRef<any>>;\n  resolveDropdownMenu: (componentRef: BsComponentRef<any>) => void;\n\n  constructor() {\n    this.dropdownMenu = new Promise(resolve => {\n      this.resolveDropdownMenu = resolve;\n    });\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  OnDestroy,\n  Renderer2\n} from '@angular/core';\nimport { BsDropdownState } from './bs-dropdown.state';\n\n\nexport class BsDropdownContainerComponent implements OnDestroy {\n  isOpen = false;\n\n  get direction(): 'down' | 'up' {\n    return this._state.direction;\n  }\n\n  private _subscription: any;\n\n  constructor(\n    private _state: BsDropdownState,\n    private cd: ChangeDetectorRef,\n    private _renderer: Renderer2,\n    _element: ElementRef\n  ) {\n    this._subscription = _state.isOpenChange.subscribe((value: boolean) => {\n      this.isOpen = value;\n      const dropdown = _element.nativeElement.querySelector('.dropdown-menu');\n      if (dropdown) {\n        this._renderer.addClass(dropdown, 'show');\n        if (dropdown.classList.contains('dropdown-menu-right')) {\n          this._renderer.setStyle(dropdown, 'left', 'auto');\n          this._renderer.setStyle(dropdown, 'right', '0');\n        }\n        if (this.direction === 'up') {\n          this._renderer.setStyle(dropdown, 'top', 'auto');\n          this._renderer.setStyle(\n            dropdown,\n            'transform',\n            'translateY(-101%)'\n          );\n        }\n      }\n      this.cd.markForCheck();\n      this.cd.detectChanges();\n    });\n  }\n\n  ngOnDestroy(): void {\n    this._subscription.unsubscribe();\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'bs-dropdown-container',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    style: 'display:block;position: absolute;'\n  },\n  template: `\n    <div [class.dropup]=\"direction === 'up'\"\n         [class.dropdown]=\"direction === 'down'\"\n         [class.show]=\"isOpen\"\n         [class.open]=\"isOpen\"><ng-content></ng-content></div>\n  `\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: BsDropdownState, },\n{type: ChangeDetectorRef, },\n{type: Renderer2, },\n{type: ElementRef, },\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","// tslint:disable:max-file-line-count\nimport {\n  Directive, ElementRef, EmbeddedViewRef, EventEmitter, Input, OnDestroy,\n  OnInit, Output, Renderer2, ViewContainerRef\n} from '@angular/core';\nimport { Subscription } from 'rxjs/Subscription';\nimport 'rxjs/add/operator/filter';\nimport { ComponentLoader, ComponentLoaderFactory } from '../component-loader';\n\nimport { BsDropdownConfig } from './bs-dropdown.config';\nimport { BsDropdownContainerComponent } from './bs-dropdown-container.component';\nimport { BsDropdownState } from './bs-dropdown.state';\nimport { BsComponentRef } from '../component-loader/bs-component-ref.class';\nimport { BsDropdownMenuDirective } from './';\nimport { isBs3 } from '../utils/theme-provider';\n\n\nexport class BsDropdownDirective implements OnInit, OnDestroy {\n  /**\n   * Placement of a popover. Accepts: \"top\", \"bottom\", \"left\", \"right\"\n   */\n   placement: string;\n  /**\n   * Specifies events that should trigger. Supports a space separated list of\n   * event names.\n   */\n   triggers: string;\n  /**\n   * A selector specifying the element the popover should be appended to.\n   * Currently only supports \"body\".\n   */\n   container: string;\n\n  /**\n   * This attribute indicates that the dropdown should be opened upwards\n   */\n   dropup: boolean;\n\n  /**\n   * Indicates that dropdown will be closed on item or document click,\n   * and after pressing ESC\n   */\n  \n  set autoClose(value: boolean) {\n    this._state.autoClose = value;\n  }\n\n  get autoClose(): boolean {\n    return this._state.autoClose;\n  }\n\n  /**\n   * Disables dropdown toggle and hides dropdown menu if opened\n   */\n  \n  set isDisabled(value: boolean) {\n    this._isDisabled = value;\n    this._state.isDisabledChange.emit(value);\n    if (value) {\n      this.hide();\n    }\n  }\n\n  get isDisabled(): boolean {\n    return this._isDisabled;\n  }\n\n  /**\n   * Returns whether or not the popover is currently being shown\n   */\n  \n  get isOpen(): boolean {\n    if (this._showInline) {\n      return this._isInlineOpen;\n    }\n\n    return this._dropdown.isShown;\n  }\n\n  set isOpen(value: boolean) {\n    if (value) {\n      this.show();\n    } else {\n      this.hide();\n    }\n  }\n\n  /**\n   * Emits an event when isOpen change\n   */\n   isOpenChange: EventEmitter<any>;\n\n  /**\n   * Emits an event when the popover is shown\n   */\n   onShown: EventEmitter<any>;\n\n  /**\n   * Emits an event when the popover is hidden\n   */\n   onHidden: EventEmitter<any>;\n\n  get isBs4(): boolean {\n    return !isBs3();\n  }\n\n  // todo: move to component loader\n  private _isInlineOpen = false;\n\n  private get _showInline(): boolean {\n    return !this.container;\n  }\n\n  private _inlinedMenu: EmbeddedViewRef<BsDropdownMenuDirective>;\n\n  private _isDisabled: boolean;\n  private _dropdown: ComponentLoader<BsDropdownContainerComponent>;\n  private _subscriptions: Subscription[] = [];\n  private _isInited = false;\n\n  constructor(private _elementRef: ElementRef,\n              private _renderer: Renderer2,\n              private _viewContainerRef: ViewContainerRef,\n              private _cis: ComponentLoaderFactory,\n              private _config: BsDropdownConfig,\n              private _state: BsDropdownState) {\n    // set initial dropdown state from config\n    this._state.autoClose = this._config.autoClose;\n\n    // create dropdown component loader\n    this._dropdown = this._cis\n      .createLoader<BsDropdownContainerComponent>(\n        this._elementRef,\n        this._viewContainerRef,\n        this._renderer\n      )\n      .provide({provide: BsDropdownState, useValue: this._state});\n\n    this.onShown = this._dropdown.onShown;\n    this.onHidden = this._dropdown.onHidden;\n    this.isOpenChange = this._state.isOpenChange;\n\n  }\n\n  ngOnInit(): void {\n    // fix: seems there are an issue with `routerLinkActive`\n    // which result in duplicated call ngOnInit without call to ngOnDestroy\n    // read more: https://github.com/valor-software/ngx-bootstrap/issues/1885\n    if (this._isInited) {\n      return;\n    }\n    this._isInited = true;\n\n    // attach DOM listeners\n    this._dropdown.listen({\n      // because of dropdown inline mode\n      outsideClick: false,\n      triggers: this.triggers,\n      show: () => this.show()\n    });\n\n    // toggle visibility on toggle element click\n    this._subscriptions.push(\n      this._state.toggleClick.subscribe((value: boolean) => this.toggle(value))\n    );\n\n    // hide dropdown if set disabled while opened\n    this._subscriptions.push(\n      this._state.isDisabledChange\n        .filter((value: boolean) => value)\n        .subscribe((value: boolean) => this.hide())\n    );\n  }\n\n  /**\n   * Opens an element’s popover. This is considered a “manual” triggering of\n   * the popover.\n   */\n  show(): void {\n    if (this.isOpen || this.isDisabled) {\n      return;\n    }\n\n    if (this._showInline) {\n      if (!this._inlinedMenu) {\n        this._state.dropdownMenu.then(\n          (dropdownMenu: BsComponentRef<BsDropdownMenuDirective>) => {\n            this._dropdown.attachInline(\n              dropdownMenu.viewContainer,\n              dropdownMenu.templateRef\n            );\n            this._inlinedMenu = this._dropdown._inlineViewRef;\n            this.addBs4Polyfills();\n          }\n        )\n        // swallow errors\n          .catch();\n      }\n      this.addBs4Polyfills();\n      this._isInlineOpen = true;\n      this.onShown.emit(true);\n      this._state.isOpenChange.emit(true);\n\n      return;\n    }\n    this._state.dropdownMenu.then(dropdownMenu => {\n      // check direction in which dropdown should be opened\n      const _dropup =\n        this.dropup ||\n        (typeof this.dropup !== 'undefined' && this.dropup);\n      this._state.direction = _dropup ? 'up' : 'down';\n      const _placement =\n        this.placement || (_dropup ? 'top left' : 'bottom left');\n\n      // show dropdown\n      this._dropdown\n        .attach(BsDropdownContainerComponent)\n        .to(this.container)\n        .position({attachment: _placement})\n        .show({\n          content: dropdownMenu.templateRef,\n          placement: _placement\n        });\n\n      this._state.isOpenChange.emit(true);\n    })\n    // swallow error\n      .catch();\n  }\n\n  /**\n   * Closes an element’s popover. This is considered a “manual” triggering of\n   * the popover.\n   */\n  hide(): void {\n    if (!this.isOpen) {\n      return;\n    }\n\n    if (this._showInline) {\n      this.removeShowClass();\n      this._isInlineOpen = false;\n      this.onHidden.emit(true);\n    } else {\n      this._dropdown.hide();\n    }\n\n    this._state.isOpenChange.emit(false);\n  }\n\n  /**\n   * Toggles an element’s popover. This is considered a “manual” triggering of\n   * the popover.\n   */\n  toggle(value?: boolean): void {\n    if (this.isOpen || !value) {\n      return this.hide();\n    }\n\n    return this.show();\n  }\n\n  ngOnDestroy(): void {\n    // clean up subscriptions and destroy dropdown\n    for (const sub of this._subscriptions) {\n      sub.unsubscribe();\n    }\n    this._dropdown.dispose();\n  }\n\n  private addBs4Polyfills(): void {\n    if (!isBs3()) {\n      this.addShowClass();\n      this.checkRightAlignment();\n      this.checkDropup();\n    }\n  }\n\n  private addShowClass(): void {\n    if (this._inlinedMenu && this._inlinedMenu.rootNodes[0]) {\n      this._renderer.addClass(this._inlinedMenu.rootNodes[0], 'show');\n    }\n  }\n\n  private removeShowClass(): void {\n    if (this._inlinedMenu && this._inlinedMenu.rootNodes[0]) {\n      this._renderer.removeClass(this._inlinedMenu.rootNodes[0], 'show');\n    }\n  }\n\n  private checkRightAlignment(): void {\n    if (this._inlinedMenu && this._inlinedMenu.rootNodes[0]) {\n      const isRightAligned = this._inlinedMenu.rootNodes[0].classList.contains(\n        'dropdown-menu-right'\n      );\n      this._renderer.setStyle(\n        this._inlinedMenu.rootNodes[0],\n        'left',\n        isRightAligned ? 'auto' : '0'\n      );\n      this._renderer.setStyle(\n        this._inlinedMenu.rootNodes[0],\n        'right',\n        isRightAligned ? '0' : 'auto'\n      );\n    }\n  }\n\n  private checkDropup(): void {\n    if (this._inlinedMenu && this._inlinedMenu.rootNodes[0]) {\n      // a little hack to not break support of bootstrap 4 beta\n      this._renderer.setStyle(\n        this._inlinedMenu.rootNodes[0],\n        'top',\n        this.dropup ? 'auto' : '100%'\n      );\n      this._renderer.setStyle(\n        this._inlinedMenu.rootNodes[0],\n        'transform',\n        this.dropup ? 'translateY(-101%)' : 'translateY(0)'\n      );\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[bsDropdown],[dropdown]',\n  exportAs: 'bs-dropdown',\n  providers: [BsDropdownState],\n  host: {\n    '[class.dropup]': 'dropup',\n    '[class.open]': 'isOpen',\n    '[class.show]': 'isOpen && isBs4'\n  }\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Renderer2, },\n{type: ViewContainerRef, },\n{type: ComponentLoaderFactory, },\n{type: BsDropdownConfig, },\n{type: BsDropdownState, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'placement': [{ type: Input },],\n'triggers': [{ type: Input },],\n'container': [{ type: Input },],\n'dropup': [{ type: Input },],\n'autoClose': [{ type: Input },],\n'isDisabled': [{ type: Input },],\n'isOpen': [{ type: Input },],\n'isOpenChange': [{ type: Output },],\n'onShown': [{ type: Output },],\n'onHidden': [{ type: Output },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, TemplateRef, ViewContainerRef } from '@angular/core';\nimport { BsDropdownState } from './bs-dropdown.state';\n\n\nexport class BsDropdownMenuDirective {\n  constructor(\n    _state: BsDropdownState,\n    _viewContainer: ViewContainerRef,\n    _templateRef: TemplateRef<any>\n  ) {\n    _state.resolveDropdownMenu({\n      templateRef: _templateRef,\n      viewContainer: _viewContainer\n    });\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[bsDropdownMenu],[dropdownMenu]',\n  exportAs: 'bs-dropdown-menu'\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: BsDropdownState, },\n{type: ViewContainerRef, },\n{type: TemplateRef, },\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {\n  Directive,\n  ElementRef,\n  HostBinding,\n  HostListener,\n  Input,\n  OnDestroy\n} from '@angular/core';\nimport { Subscription } from 'rxjs/Subscription';\n\nimport { BsDropdownState } from './bs-dropdown.state';\n\n\nexport class BsDropdownToggleDirective implements OnDestroy {\n   isDisabled: boolean = null;\n\n  // @HostBinding('class.active')\n   isOpen: boolean;\n\n  private _subscriptions: Subscription[] = [];\n\n  constructor(private _state: BsDropdownState, private _element: ElementRef) {\n    // sync is open value with state\n    this._subscriptions.push(\n      this._state.isOpenChange.subscribe(\n        (value: boolean) => (this.isOpen = value)\n      )\n    );\n    // populate disabled state\n    this._subscriptions.push(\n      this._state.isDisabledChange.subscribe(\n        (value: boolean) => (this.isDisabled = value || null)\n      )\n    );\n  }\n\n  \n  onClick(): void {\n    if (this.isDisabled) {\n      return;\n    }\n    this._state.toggleClick.emit(true);\n  }\n\n  \n  onDocumentClick(event: any): void {\n    if (\n      this._state.autoClose &&\n      event.button !== 2 &&\n      !this._element.nativeElement.contains(event.target)\n    ) {\n      this._state.toggleClick.emit(false);\n    }\n  }\n\n  \n  onEsc(): void {\n    if (this._state.autoClose) {\n      this._state.toggleClick.emit(false);\n    }\n  }\n\n  ngOnDestroy(): void {\n    for (const sub of this._subscriptions) {\n      sub.unsubscribe();\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[bsDropdownToggle],[dropdownToggle]',\n  exportAs: 'bs-dropdown-toggle',\n  host: {\n    '[attr.aria-haspopup]': 'true'\n  }\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: BsDropdownState, },\n{type: ElementRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'isDisabled': [{ type: HostBinding, args: ['attr.disabled', ] },],\n'isOpen': [{ type: HostBinding, args: ['attr.aria-expanded', ] },],\n'onClick': [{ type: HostListener, args: ['click', [], ] },],\n'onDocumentClick': [{ type: HostListener, args: ['document:click', ['$event'], ] },],\n'onEsc': [{ type: HostListener, args: ['keyup.esc', ] },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { ModuleWithProviders, NgModule } from '@angular/core';\nimport { ComponentLoaderFactory } from '../component-loader';\n\nimport { PositioningService } from '../positioning';\nimport { BsDropdownContainerComponent } from './bs-dropdown-container.component';\nimport { BsDropdownMenuDirective } from './bs-dropdown-menu.directive';\nimport { BsDropdownToggleDirective } from './bs-dropdown-toggle.directive';\nimport { BsDropdownConfig } from './bs-dropdown.config';\n\nimport { BsDropdownDirective } from './bs-dropdown.directive';\nimport { BsDropdownState } from './bs-dropdown.state';\n\n\nexport class BsDropdownModule {\n  static forRoot(config?: any): ModuleWithProviders {\n    return {\n      ngModule: BsDropdownModule,\n      providers: [\n        ComponentLoaderFactory,\n        PositioningService,\n        BsDropdownState,\n        {\n          provide: BsDropdownConfig,\n          useValue: config ? config : { autoClose: true }\n        }\n      ]\n    };\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  declarations: [\n    BsDropdownMenuDirective,\n    BsDropdownToggleDirective,\n    BsDropdownContainerComponent,\n    BsDropdownDirective\n  ],\n  exports: [\n    BsDropdownMenuDirective,\n    BsDropdownToggleDirective,\n    BsDropdownDirective\n  ],\n  entryComponents: [BsDropdownContainerComponent]\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nexport class FilterContainerComponent {\n\n     filters: Filter[] = [];\n     clearTooltip: string;\n     filtersChange: EventEmitter<Filter[]> = new EventEmitter<Filter[]>();\n     events: EventEmitter<FilterEvent> = new EventEmitter<FilterEvent>();\n/**\n * @param {?} filter\n * @return {?}\n */\naddFilter(filter: Filter): void {\n        this.filters.push(filter);\n        this.events.next(new FilterAddEvent(filter));\n        this.filtersChange.emit(this.filters);\n    }\n/**\n * @param {?} filter\n * @return {?}\n */\nremoveFilter(filter: Filter): void {\n        let /** @type {?} */ idx = this.filters.findIndex(filters => filters === filter);\n\n        if (idx !== -1) {\n            this.filters.splice(idx, 1);\n            this.events.next(new FilterRemoveEvent(filter));\n            this.filtersChange.emit(this.filters);\n        }\n    }\n/**\n * @return {?}\n */\nremoveAll(): void {\n        this.events.next(new FilterRemoveAllEvent());\n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-filter-container',\n    template: `\n      <ng-content></ng-content>\n\n      <!-- Add a Clear Button -->\n      <div class=\"filter-selected-clear-button\" *ngIf=\"filters.length > 0\" [tooltip]=\"clearTooltip || 'Clear All'\" (click)=\"removeAll()\">\n    \n          <svg class=\"filter-selected-clear-graphic\" width=\"19\" height=\"12\" viewBox=\"0 0 19 12\" shape-rendering=\"geometricPrecision\">\n              <rect class=\"light-grey\" x=\"0\" y=\"2\" width=\"7\" height=\"2\"></rect>\n              <rect class=\"dark-grey\" x=\"0\" y=\"5\" width=\"9\" height=\"2\"></rect>\n              <rect class=\"light-grey\" x=\"0\" y=\"8\" width=\"7\" height=\"2\"></rect>\n              <path class=\"dark-grey\" d=\"M9,1 h1 l9,9 v1 h-1 l-9,-9 v-1 Z\"></path>\n              <path class=\"dark-grey\" d=\"M9,11 v-1 l9,-9 h1 v1 l-9,9 h-1 Z\"></path>\n          </svg>\n\n      </div>\n    `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'filters': [{ type: Input },],\n'clearTooltip': [{ type: Input },],\n'filtersChange': [{ type: Output },],\n'events': [{ type: Output },],\n};\n}\n\nfunction FilterContainerComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nFilterContainerComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFilterContainerComponent.ctorParameters;\n/** @type {?} */\nFilterContainerComponent.propDecorators;\n/** @type {?} */\nFilterContainerComponent.prototype.filters;\n/** @type {?} */\nFilterContainerComponent.prototype.clearTooltip;\n/** @type {?} */\nFilterContainerComponent.prototype.filtersChange;\n/** @type {?} */\nFilterContainerComponent.prototype.events;\n}\n\n\nexport interface Filter {\n    group: string;\n    title: string;\n    name: string;\n    initial?: boolean;\n}\nexport class FilterAddEvent {\n/**\n * @param {?} filter\n */\nconstructor(public filter: Filter) {}\n}\n\nfunction FilterAddEvent_tsickle_Closure_declarations() {\n/** @type {?} */\nFilterAddEvent.prototype.filter;\n}\n\nexport class FilterRemoveEvent {\n/**\n * @param {?} filter\n */\nconstructor(public filter: Filter) {}\n}\n\nfunction FilterRemoveEvent_tsickle_Closure_declarations() {\n/** @type {?} */\nFilterRemoveEvent.prototype.filter;\n}\n\nexport class FilterRemoveAllEvent {\n}\n\nexport type FilterEvent = FilterAddEvent | FilterRemoveEvent | FilterRemoveAllEvent;\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, Host, Input, Output } from '@angular/core';\nimport { FilterContainerComponent, Filter, FilterRemoveAllEvent } from '../filter-container.component';\nexport class FilterBaseComponent {\n\n     filters: Filter[];\n/**\n * @param {?} filtersContainer\n */\nconstructor(\nprivate filtersContainer: FilterContainerComponent) {\n\n        filtersContainer.events.filter(event => event instanceof FilterRemoveAllEvent).subscribe(this.removeFilter.bind(this));\n    }\n/**\n * @param {?} filter\n * @return {?}\n */\naddFilter(filter: Filter): void {\n        if (!filter.initial) {\n            this.filtersContainer.addFilter(filter);\n        }\n    }\n/**\n * @param {?} filter\n * @return {?}\n */\nremoveFilter(filter: Filter): void {\n        if (!filter) {\n            return;\n        }\n\n        this.filtersContainer.removeFilter(filter);\n    }\n    \nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'ux-filter-base'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: FilterContainerComponent, decorators: [{ type: Host }, ]},\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'filters': [{ type: Input },],\n};\n}\n\nfunction FilterBaseComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nFilterBaseComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFilterBaseComponent.ctorParameters;\n/** @type {?} */\nFilterBaseComponent.propDecorators;\n/** @type {?} */\nFilterBaseComponent.prototype.filters;\n/** @type {?} */\nFilterBaseComponent.prototype.filtersContainer;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { BsDropdownDirective } from 'ngx-bootstrap/dropdown';\nimport { Component, Input, ViewChild } from '@angular/core';\nimport { FilterBaseComponent } from '../filter-base/filter-base.component';\nimport { Filter, FilterContainerComponent, FilterRemoveAllEvent } from '../filter-container.component';\nimport { TypeaheadMatch } from 'ngx-bootstrap/typeahead';\nexport class FilterDynamicComponent extends FilterBaseComponent {\n\n     filters: Filter[];\n     initial: Filter;\n     options: FilterDynamicListConfig;\n\n     dropdown: BsDropdownDirective;\n\n    defaultOptions: FilterDynamicListConfig = {\n        placeholder: '',\n        minCharacters: 3\n    };\n    searchQuery: string;\n    selected: Filter;\n    showTypeahead: boolean = true;\n    typeaheadItems: string[] = [];\n/**\n * @return {?}\n */\ngetItems(): string[] {\n        return this.filters.filter(item => item !== this.initial).map(item => item.name);\n    }\n/**\n * @return {?}\n */\nngOnInit() {\n        this.selected = this.initial;\n        this.typeaheadItems = this.getItems();\n\n        if (this.options && this.options.maxIndividualItems && this.options.maxIndividualItems + 1 >= this.filters.length ) {\n            this.showTypeahead = false;\n        }\n    }\n/**\n * @param {?} typeaheadOption\n * @return {?}\n */\nselectOption(typeaheadOption: TypeaheadMatch) { \n        this.removeFilter();\n        let /** @type {?} */ idx = this.filters.findIndex(filter => filter.name === typeaheadOption.value);\n        this.selected = this.filters[idx];\n        this.addFilter(this.selected);\n        this.searchQuery = '';\n        this.dropdown.hide();\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nclickOff(event: MouseEvent) {\n\n        let /** @type {?} */ target = /** @type {?} */(( event.target as HTMLElement));\n        let /** @type {?} */ hideDropdown = true;\n\n        while (target && target.nodeName !== 'BODY') {\n            if (target.classList.contains('ux-dynamic-filter')) {\n                hideDropdown = false;\n                break;\n            } else {\n                target = target.parentElement;\n            }\n        }\n\n        if (hideDropdown) {\n            this.searchQuery = '';\n            this.dropdown.hide();\n        }\n        \n    }\n/**\n * @return {?}\n */\nremoveFilter(): void { \n        if (this.selected !== this.initial) {\n            super.removeFilter(this.selected);\n            this.selected = this.initial;\n        }\n        this.searchQuery = '';\n    }\n/**\n * @param {?} filter\n * @return {?}\n */\nselectFilter(filter: Filter) {\n        this.removeFilter();\n        this.selected = filter;\n        this.addFilter(this.selected);\n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-filter-dynamic',\n    template: `\n      <div class=\"btn-group ux-dynamic-filter\" dropdown #dynamicDropdown=\"bs-dropdown\">\n          <button (click)=\"dynamicDropdown.show()\" type=\"button\" [class.active]=\"selected !== initial\" class=\"filter-dropdown btn dropdown-toggle\">{{ selected?.title }} \n              <span class=\"hpe-icon hpe-down\"></span>\n          </button>\n          <ul *dropdownMenu class=\"dropdown-menu\" role=\"menu\">\n\n              <li class=\"dropdown-list-item\" *ngIf=\"showTypeahead\" role=\"menuitem\">\n                  <a class=\"dropdown-item\" (click)=\"removeFilter(); dynamicDropdown.hide();\">\n                      <i class=\"hpe-icon\" [class.hpe-checkmark]=\"initial === selected\"></i>\n                      <span class=\"filter-dropdown-title\">{{ initial.name }}</span>\n                  </a>\n              </li>\n\n              <li class=\"dropdown-list-item\" *ngIf=\"selected !== initial && showTypeahead\" role=\"menuitem\">\n                  <a class=\"dropdown-item\">\n                      <i class=\"hpe-icon hpe-checkmark\"></i>\n                      <span class=\"filter-dropdown-title\">{{ selected.name }}</span>\n                  </a>\n              </li>\n\n              <hr>\n\n              <li *ngIf=\"showTypeahead\" class=\"typeahead-box\">\n                  <input [(ngModel)]=\"searchQuery\" [typeahead]=\"typeaheadItems\" class=\"form-control\" \n                  (typeaheadOnSelect)=\"selectOption($event)\" \n                  [placeholder]=\"options?.placeholder || defaultOptions.placeholder\"\n                  [typeaheadMinLength]=\"options?.minCharacters || defaultOptions.minCharacters\"\n                  [typeaheadOptionsLimit]=\"options?.maxResults\">\n              </li>\n\n              <span *ngIf=\"!showTypeahead\">\n                  <li class=\"dropdown-list-item\" *ngFor=\"let filter of filters\" role=\"menuitem\">\n                      <a class=\"dropdown-item\" (click)=\"selectFilter(filter)\">\n                          <i class=\"hpe-icon\" [class.hpe-checkmark]=\"filter === selected\"></i>\n                          <span class=\"filter-dropdown-title\">{{ filter.name }}</span>\n                      </a>\n                  </li>\n              </span>\n\n          </ul>\n      </div>\n    `,\n    host: {\n        '(document:click)': 'clickOff($event)',\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'filters': [{ type: Input },],\n'initial': [{ type: Input },],\n'options': [{ type: Input },],\n'dropdown': [{ type: ViewChild, args: [BsDropdownDirective, ] },],\n};\n}\n\nfunction FilterDynamicComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nFilterDynamicComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFilterDynamicComponent.ctorParameters;\n/** @type {?} */\nFilterDynamicComponent.propDecorators;\n/** @type {?} */\nFilterDynamicComponent.prototype.filters;\n/** @type {?} */\nFilterDynamicComponent.prototype.initial;\n/** @type {?} */\nFilterDynamicComponent.prototype.options;\n/** @type {?} */\nFilterDynamicComponent.prototype.dropdown;\n/** @type {?} */\nFilterDynamicComponent.prototype.defaultOptions;\n/** @type {?} */\nFilterDynamicComponent.prototype.searchQuery;\n/** @type {?} */\nFilterDynamicComponent.prototype.selected;\n/** @type {?} */\nFilterDynamicComponent.prototype.showTypeahead;\n/** @type {?} */\nFilterDynamicComponent.prototype.typeaheadItems;\n}\n\n\nexport interface FilterDynamicListConfig {\n    placeholder?: string;\n    minCharacters?: number;\n    maxResults?: number;\n    maxIndividualItems?: number;\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Input } from '@angular/core';\nimport { FilterBaseComponent } from '../filter-base/filter-base.component';\nimport { Filter, FilterContainerComponent, FilterRemoveAllEvent } from '../filter-container.component';\nexport class FilterDropdownComponent extends FilterBaseComponent {\n\n     initial: Filter;\n\n    selected: Filter;\n/**\n * @return {?}\n */\nremoveFilter(): void {\n        super.removeFilter(this.selected);\n        this.selected = this.initial;\n    }\n/**\n * @return {?}\n */\nngOnInit() {\n        this.selected = this.initial;\n    }\n/**\n * @param {?} filter\n * @return {?}\n */\nselectFilter(filter: Filter) {\n        this.removeFilter();\n        this.selected = filter;\n        this.addFilter(this.selected);\n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-filter-dropdown',\n    template: `\n      <div class=\"btn-group\" dropdown>\n          <button dropdownToggle type=\"button\" class=\"filter-dropdown btn dropdown-toggle\" [class.active]=\"selected !== initial\">{{ selected?.title }} \n              <span class=\"hpe-icon hpe-down\"></span>\n          </button>\n          <ul *dropdownMenu class=\"dropdown-menu\" role=\"menu\">\n              <li class=\"dropdown-list-item\" *ngFor=\"let filter of filters\" role=\"menuitem\">\n                  <a class=\"dropdown-item\" (click)=\"selectFilter(filter)\">\n                      <i class=\"hpe-icon\" [class.hpe-checkmark]=\"filter === selected\"></i>\n                      <span class=\"filter-dropdown-title\">{{ filter.name }}</span>\n                  </a>\n              </li>\n          </ul>\n      </div>\n    `,\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'initial': [{ type: Input },],\n};\n}\n\nfunction FilterDropdownComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nFilterDropdownComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFilterDropdownComponent.ctorParameters;\n/** @type {?} */\nFilterDropdownComponent.propDecorators;\n/** @type {?} */\nFilterDropdownComponent.prototype.initial;\n/** @type {?} */\nFilterDropdownComponent.prototype.selected;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { TooltipModule } from 'ngx-bootstrap/tooltip';\nimport { FilterDynamicComponent } from './filter-dynamic/filter-dynamic.component';\nimport { FilterDropdownComponent } from './filter-dropdown/filter-dropdown.component';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\nimport { FilterContainerComponent } from './filter-container.component';\nimport { FilterBaseComponent } from './filter-base/filter-base.component';\nimport { TypeaheadModule } from 'ngx-bootstrap/typeahead';\nimport { FormsModule } from '@angular/forms';\n\nconst /** @type {?} */ DECLARATIONS = [\n    FilterBaseComponent,\n    FilterContainerComponent,\n    FilterDropdownComponent,\n    FilterDynamicComponent\n];\nexport class FilterModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        BsDropdownModule.forRoot(),\n        TypeaheadModule.forRoot(),\n        TooltipModule.forRoot(),\n        FormsModule,\n        CommonModule\n    ],\n    exports: DECLARATIONS,\n    declarations: DECLARATIONS\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction FilterModule_tsickle_Closure_declarations() {\n/** @type {?} */\nFilterModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFilterModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Input, Directive, HostListener, Output, EventEmitter } from '@angular/core';\nexport class FlippableCardComponent {\n\n     direction: 'horizontal' | 'vertical' = 'horizontal';\n     trigger: 'click' | 'hover' | 'manual' = 'hover';\n     width: number = 280;\n     height: number = 200;\n     flipped: boolean = false;\n     flippedChange: EventEmitter<boolean> = new EventEmitter<boolean>();\n/**\n * @param {?} state\n * @return {?}\n */\nsetFlipped(state: boolean) {\n        this.flipped = state;\n        this.flippedChange.emit(this.flipped);\n    }\n/**\n * @return {?}\n */\ntoggleFlipped() {\n        this.setFlipped(!this.flipped);\n    }\n/**\n * @return {?}\n */\nclickTrigger() {\n\n        // add or remove the class depending on whether or not the card has been flipped\n        if (this.trigger === 'click') {\n            this.toggleFlipped();\n        }\n    }\n/**\n * @return {?}\n */\nhoverEnter() {\n        // if the trigger is hover then begin to flip\n        if (this.trigger === 'hover') {\n            this.setFlipped(true);\n        }\n    }\n/**\n * @return {?}\n */\nhoverExit() {\n        if (this.trigger === 'hover') {\n            this.setFlipped(false);\n        }\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-flippable-card',\n    template: `\n      <div class=\"ux-flipper\" [class.ux-flip-card]=\"flipped\" [style.width.px]=\"width\" [style.height.px]=\"height\">\n\n          <div class=\"ux-flippable-card-front\" [style.width.px]=\"width\" [style.height.px]=\"height\">\n              <ng-content select=\"ux-flippable-card-front\"></ng-content>\n          </div>\n\n          <div class=\"ux-flippable-card-back\" [style.width.px]=\"width\" [style.height.px]=\"height\">\n              <ng-content select=\"ux-flippable-card-back\"></ng-content>\n          </div>\n      </div>\n    `,\n    host: {\n        '[class.horizontal]': 'direction === \"horizontal\"',\n        '[class.vertical]': 'direction === \"vertical\"'\n    },\n    exportAs: 'ux-flippable-card'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'direction': [{ type: Input },],\n'trigger': [{ type: Input },],\n'width': [{ type: Input },],\n'height': [{ type: Input },],\n'flipped': [{ type: Input },],\n'flippedChange': [{ type: Output },],\n'clickTrigger': [{ type: HostListener, args: ['click', ] },],\n'hoverEnter': [{ type: HostListener, args: ['mouseenter', ] },],\n'hoverExit': [{ type: HostListener, args: ['mouseleave', ] },],\n};\n}\n\nfunction FlippableCardComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nFlippableCardComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFlippableCardComponent.ctorParameters;\n/** @type {?} */\nFlippableCardComponent.propDecorators;\n/** @type {?} */\nFlippableCardComponent.prototype.direction;\n/** @type {?} */\nFlippableCardComponent.prototype.trigger;\n/** @type {?} */\nFlippableCardComponent.prototype.width;\n/** @type {?} */\nFlippableCardComponent.prototype.height;\n/** @type {?} */\nFlippableCardComponent.prototype.flipped;\n/** @type {?} */\nFlippableCardComponent.prototype.flippedChange;\n}\n\nexport class FlippableCardFrontDirective { static decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'ux-flippable-card-front'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction FlippableCardFrontDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nFlippableCardFrontDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFlippableCardFrontDirective.ctorParameters;\n}\n\nexport class FlippableCardBackDirective { static decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'ux-flippable-card-back'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction FlippableCardBackDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nFlippableCardBackDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFlippableCardBackDirective.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\n\nimport { FlippableCardComponent, FlippableCardBackDirective, FlippableCardFrontDirective } from './flippable-card.component';\nexport class FlippableCardModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    exports: [FlippableCardComponent, FlippableCardBackDirective, FlippableCardFrontDirective],\n    declarations: [FlippableCardComponent, FlippableCardBackDirective, FlippableCardFrontDirective]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction FlippableCardModule_tsickle_Closure_declarations() {\n/** @type {?} */\nFlippableCardModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFlippableCardModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Directive, Input, SimpleChange, Output, EventEmitter, ContentChild } from '@angular/core';\nexport class ItemDisplayPanelContentDirective { static decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: '[uxItemDisplayPanelContent]'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ItemDisplayPanelContentDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nItemDisplayPanelContentDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nItemDisplayPanelContentDirective.ctorParameters;\n}\n\nexport class ItemDisplayPanelFooterDirective { static decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: '[uxItemDisplayPanelFooter]'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ItemDisplayPanelFooterDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nItemDisplayPanelFooterDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nItemDisplayPanelFooterDirective.ctorParameters;\n}\n\nexport class ItemDisplayPanelComponent {\n     title: string;\n     footer: ItemDisplayPanelFooterDirective;\n    \n     visibleChange: EventEmitter<boolean> = new EventEmitter<boolean>();\n/**\n * @return {?}\n */\nget top(): number {\n        return this._top;\n    }\n/**\n * @param {?} top\n * @return {?}\n */\nset top(top: number) {\n        this._top = typeof top === 'string' ? parseFloat(top) : top;\n    }\n/**\n * @return {?}\n */\nget visible() {\n        return this._visible;\n    }\n/**\n * @param {?} visible\n * @return {?}\n */\nset visible(visible: boolean) {\n\n        this._visible = visible;\n\n        // invoke change event\n        this.visibleChange.emit(this._visible);\n \n    }\n/**\n * @return {?}\n */\nget boxShadow() {\n        return this._boxShadow;\n    }\n/**\n * @param {?} boxShadow\n * @return {?}\n */\nset boxShadow(boxShadow: boolean) {\n        this._boxShadow = typeof boxShadow === 'string' ? !(boxShadow === 'false') : boxShadow;\n    }\n/**\n * @return {?}\n */\nget closeVisible() {\n        return this._closeVisible;\n    }\n/**\n * @param {?} closeVisible\n * @return {?}\n */\nset closeVisible(closeVisible: boolean) {\n        this._closeVisible = typeof closeVisible === 'string' ? !(closeVisible === 'false') : closeVisible;\n    }\n/**\n * @return {?}\n */\nget preventClose() {\n        return this._preventClose;\n    }\n/**\n * @param {?} preventClose\n * @return {?}\n */\nset preventClose(preventClose: boolean) {\n        this._preventClose = typeof preventClose === 'string' ? preventClose === 'true' : preventClose;\n    }\n/**\n * @return {?}\n */\nget inline() {\n        return this._inline;\n    }\n/**\n * @param {?} inline\n * @return {?}\n */\nset inline(inline: boolean) {\n        this._inline = typeof inline === 'string' ? inline === 'true' : inline;\n    }\n/**\n * @return {?}\n */\nget animate() {\n        return this._animate;\n    }\n/**\n * @param {?} animate\n * @return {?}\n */\nset animate(animate: boolean) {\n        this._animate = typeof animate === 'string' ? animate === 'true' : animate;\n    }\n/**\n * @return {?}\n */\nget shadow() {\n        return this._shadow;\n    }\n/**\n * @param {?} shadow\n * @return {?}\n */\nset shadow(shadow: boolean) {\n        this._shadow = typeof shadow === 'string' ? shadow === 'true' : shadow;\n    }\nprivate _top: number;\nprivate _visible: boolean = false;\nprivate _boxShadow: boolean = true;\nprivate _closeVisible: boolean = true;\nprivate _preventClose: boolean = false;\nprivate _inline: boolean = false;\nprivate _animate: boolean = false;\nprivate _shadow: boolean = false;\n/**\n * @param {?} event\n * @return {?}\n */\nclickOff(event: any) {\n\n        // dont close\n        if (this.preventClose) {\n            return;\n        }\n       \n        // dont do anything if the panel is hidden\n        if (this._visible) {\n            let /** @type {?} */ target = event.target;\n\n            // if the target node is the HTML tag, then this was triggered by scrolling and we should not close the panel\n            if (target.nodeName === 'HTML') {\n                return;\n            }\n\n            let /** @type {?} */ hidePanel = true;\n\n            while (target && target.nodeName !== 'BODY') {\n                if (target.classList.contains('ux-item-display-panel')) {\n                    hidePanel = false;\n                    break;\n                } else {\n                    target = target.parentElement;\n                }\n            }\n\n            if (hidePanel) {\n                this._visible = false;\n                this.visibleChange.emit(this._visible);\n            }\n        }\n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-item-display-panel',\n    template: `\n      <div class=\"ux-item-display-panel\" [class.box-shadow]=\"boxShadow\" [class.inline]=\"inline\" [class.animate]=\"animate\" [class.item-display-panel-hide]=\"!visible\" [style.top]=\"top\" [style.height]='\"calc(100% - \" + top + \"px)\"'>\n\n          <div class=\"item-display-panel-header\" [class.item-display-panel-shadow]=\"shadow\">\n              <div class=\"heading-flex-box\">\n                  <h3>{{ title }}</h3>\n                  <span *ngIf=\"closeVisible\" class=\"heading-close-button\" tabindex=\"0\" (click)=\"visible = false\" (keydown.enter)=\"visible = false\">\n                      <i class=\"hpe-icon hpe-close\"></i>\n                  </span>\n              </div>\n          </div>\n\n          <div class=\"item-display-panel-content\">\n              <ng-content select=\"[uxItemDisplayPanelContent]\"></ng-content>\n          </div>\n\n          <div class=\"item-display-panel-footer\" *ngIf=\"footer\">\n              <ng-content select=\"[uxItemDisplayPanelFooter]\"></ng-content>\n          </div>\n\n      </div>\n    `,\n    host: {\n        '(document:click)': 'clickOff($event)',\n        '(document:keyup.escape)': 'visible = false',\n        '[class.inline-host]' : 'inline', \n        '[class.visible-host]' : 'visible'\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'title': [{ type: Input },],\n'footer': [{ type: ContentChild, args: [ItemDisplayPanelFooterDirective, ] },],\n'visibleChange': [{ type: Output },],\n'top': [{ type: Input },],\n'visible': [{ type: Input },],\n'boxShadow': [{ type: Input },],\n'closeVisible': [{ type: Input },],\n'preventClose': [{ type: Input },],\n'inline': [{ type: Input },],\n'animate': [{ type: Input },],\n'shadow': [{ type: Input },],\n};\n}\n\nfunction ItemDisplayPanelComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nItemDisplayPanelComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nItemDisplayPanelComponent.ctorParameters;\n/** @type {?} */\nItemDisplayPanelComponent.propDecorators;\n/** @type {?} */\nItemDisplayPanelComponent.prototype.title;\n/** @type {?} */\nItemDisplayPanelComponent.prototype.footer;\n/** @type {?} */\nItemDisplayPanelComponent.prototype.visibleChange;\n/** @type {?} */\nItemDisplayPanelComponent.prototype._top;\n/** @type {?} */\nItemDisplayPanelComponent.prototype._visible;\n/** @type {?} */\nItemDisplayPanelComponent.prototype._boxShadow;\n/** @type {?} */\nItemDisplayPanelComponent.prototype._closeVisible;\n/** @type {?} */\nItemDisplayPanelComponent.prototype._preventClose;\n/** @type {?} */\nItemDisplayPanelComponent.prototype._inline;\n/** @type {?} */\nItemDisplayPanelComponent.prototype._animate;\n/** @type {?} */\nItemDisplayPanelComponent.prototype._shadow;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { CommonModule } from '@angular/common';\nimport { ItemDisplayPanelComponent, ItemDisplayPanelContentDirective, ItemDisplayPanelFooterDirective } from './item-display-panel.component';\nimport { NgModule, Input } from '@angular/core';\nimport { ModalModule } from 'ngx-bootstrap/modal';\n\nconst /** @type {?} */ DECLARATIONS = [\n    ItemDisplayPanelComponent,\n    ItemDisplayPanelContentDirective,\n    ItemDisplayPanelFooterDirective\n];\nexport class ItemDisplayPanelModule {static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        CommonModule\n    ],\n    exports: DECLARATIONS,\n    declarations: DECLARATIONS\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ItemDisplayPanelModule_tsickle_Closure_declarations() {\n/** @type {?} */\nItemDisplayPanelModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nItemDisplayPanelModule.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Input, ViewEncapsulation, EventEmitter, Output, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nexport const /** @type {?} */ NUMBER_PICKER_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => NumberPickerComponent),\n    multi: true\n};\nexport class NumberPickerComponent implements ControlValueAccessor {\nprivate _min: number = -Infinity;\nprivate _max: number = Infinity;\nprivate _step: number = 1;\nprivate _disabled: boolean = false;\nprivate _value: number = 0;\nprivate _propagateChange = (_: any) => { };\n\n     valid: boolean = true;\n     valueChange = new EventEmitter<number>();\n/**\n * @return {?}\n */\nget value(): number {\n        return this._value;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset value(value: number) {\n        this._value = value;\n        this.valueChange.emit(value);\n        this._propagateChange(value);\n    }\n/**\n * @return {?}\n */\nget min(): number {\n        return this._min;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset min(value) {\n        this._min = typeof value === 'string' ? parseFloat(value) : value;\n    }\n/**\n * @return {?}\n */\nget max(): number {\n        return this._max;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset max(value) {\n        this._max = typeof value === 'string' ? parseFloat(value) : value;\n    }\n/**\n * @return {?}\n */\nget step(): number {\n        return this._step;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset step(value) {\n        this._step = typeof value === 'string' ? parseFloat(value) : value;\n    }\n/**\n * @return {?}\n */\nget disabled(): boolean {\n        return this._disabled;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset disabled(value) {\n        this._disabled = typeof value === 'string' && (value === '' || value === 'true' || value === 'disabled') || value === true;\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nincrement(event: MouseEvent | KeyboardEvent): void {\n        event.preventDefault();\n\n        if (!this.disabled) {\n            this.value = Math.max(Math.min(this.value + this.step, this.max), this.min);\n        }\n    }\n/**\n * @param {?} event\n * @return {?}\n */\ndecrement(event: MouseEvent | KeyboardEvent): void {\n        event.preventDefault();\n\n        if (!this.disabled) {\n            this.value = Math.min(Math.max(this.value - this.step, this.min), this.max);\n        }\n    }\n/**\n * @return {?}\n */\nisValid(): boolean {\n        if (this.value < this.min || this.value > this.max) {\n            return false;\n        }\n\n        return this.valid;\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nonScroll(event: WheelEvent): void {\n\n        let /** @type {?} */ scrollValue = event.deltaY || event.wheelDelta;\n\n        if (scrollValue < 0) {\n            this.increment(event);\n        } else {\n            this.decrement(event);\n        }\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nwriteValue(value: any): void {\n        if (value !== undefined) {\n            this._value = value;\n        }\n    }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnChange(fn: any): void {\n        this._propagateChange = fn;\n    }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnTouched(fn: any): void { }\n/**\n * @param {?} isDisabled\n * @return {?}\n */\nsetDisabledState(isDisabled: boolean): void {\n        this.disabled = isDisabled;\n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-number-picker',\n    template: `\n      <input type=\"number\" class=\"form-control number-picker-input\" [(ngModel)]=\"value\" [min]=\"min\" [max]=\"max\" (keydown.ArrowDown)=\"decrement($event)\"\n          (keydown.ArrowUp)=\"increment($event)\" (wheel)=\"onScroll($event)\" step=\"any\" [disabled]=\"disabled\">\n\n      <div class=\"number-picker-controls\">\n\n          <div class=\"number-picker-control-up\" (click)=\"increment($event)\" [class.disabled]=\"disabled || value >= max\">\n              <span class=\"hpe-icon hpe-up\"></span>\n          </div>\n\n          <div class=\"number-picker-control-down\" (click)=\"decrement($event)\" [class.disabled]=\"disabled || value <= min\">\n              <span class=\"hpe-icon hpe-down\"></span>\n          </div>\n\n      </div>\n    `,\n    providers: [NUMBER_PICKER_VALUE_ACCESSOR],\n    host: {\n        '[class.has-error]': '!isValid()'\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'valid': [{ type: Input },],\n'valueChange': [{ type: Output },],\n'value': [{ type: Input, args: ['value', ] },],\n'min': [{ type: Input },],\n'max': [{ type: Input },],\n'step': [{ type: Input },],\n'disabled': [{ type: Input },],\n};\n}\n\nfunction NumberPickerComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nNumberPickerComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNumberPickerComponent.ctorParameters;\n/** @type {?} */\nNumberPickerComponent.propDecorators;\n/** @type {?} */\nNumberPickerComponent.prototype._min;\n/** @type {?} */\nNumberPickerComponent.prototype._max;\n/** @type {?} */\nNumberPickerComponent.prototype._step;\n/** @type {?} */\nNumberPickerComponent.prototype._disabled;\n/** @type {?} */\nNumberPickerComponent.prototype._value;\n/** @type {?} */\nNumberPickerComponent.prototype._propagateChange;\n/** @type {?} */\nNumberPickerComponent.prototype.valid;\n/** @type {?} */\nNumberPickerComponent.prototype.valueChange;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\n\nimport { NumberPickerComponent } from './number-picker.component';\nexport class NumberPickerModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        CommonModule,\n        FormsModule\n    ],\n    exports: [NumberPickerComponent],\n    declarations: [NumberPickerComponent]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction NumberPickerModule_tsickle_Closure_declarations() {\n/** @type {?} */\nNumberPickerModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNumberPickerModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive } from '@angular/core';\nexport class PageHeaderCustomMenuDirective { static decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{ \n    selector: '[uxPageHeaderCustomMenu]' \n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction PageHeaderCustomMenuDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nPageHeaderCustomMenuDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nPageHeaderCustomMenuDirective.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, EventEmitter, Input, Output, ContentChildren, QueryList, TemplateRef } from '@angular/core';\nimport { Breadcrumb } from '../breadcrumbs/index';\nimport { PageHeaderNavigationItem } from './navigation/navigation.component';\nimport { PageHeaderCustomMenuDirective } from './custom-menu/custom-menu.directive';\nexport class PageHeaderComponent {\n\n     logo: string;\n     items: PageHeaderNavigationItem[];\n     crumbs: Breadcrumb[];\n     header: string;\n     alignment: 'left' | 'right' | 'center' = 'center';\n     condensed: boolean = false;\n     iconMenus: PageHeaderIconMenu[];\n     backVisible: boolean = true;\n    \n     backClick = new EventEmitter();\n\n     customMenus: QueryList<TemplateRef<any>>;\n/**\n * @return {?}\n */\ngoBack() {\n        this.backClick.emit();\n    }\n/**\n * @return {?}\n */\ngetCondensedBreadcrumbs(): Breadcrumb[] {\n        if (this.crumbs) {\n\n            let /** @type {?} */ crumbs = this.crumbs.slice();\n            crumbs.push({ title: this.header });\n\n            return crumbs;\n        }\n\n        return [{ title: this.header }];\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-page-header',\n    exportAs: 'ux-page-header',\n    template: `\n      <!-- Display Upper Section when not condensed -->\n      <div class=\"page-header-actions\" *ngIf=\"!condensed\">\n\n          <div class=\"page-header-logo-container\" [hidden]=\"!logo\">\n              <img [attr.src]=\"logo\" class=\"page-header-logo\">\n          </div>\n\n          <div class=\"page-header-navigation\" [ngClass]=\"alignment\">\n\n              <!-- The Top Navigation Options -->\n              <ux-page-header-horizontal-navigation [items]=\"items\"></ux-page-header-horizontal-navigation>\n          </div>\n\n          <div class=\"page-header-icon-menus\">\n              <ng-container *ngFor=\"let menu of customMenus\" [ngTemplateOutlet]=\"menu\"></ng-container>\n\n              <ux-page-header-icon-menu *ngFor=\"let menu of iconMenus\" [menu]=\"menu\"></ux-page-header-icon-menu>\n          </div>\n      </div>\n\n      <!-- Display Lower Section When Not Condensed -->\n      <div class=\"page-header-details\" *ngIf=\"!condensed\">\n\n          <div class=\"page-header-state-container\">\n\n              <div *ngIf=\"backVisible == true\" class=\"page-header-back-button\" (click)=\"goBack()\">\n                  <span class=\"hpe-icon hpe-previous text-primary\"></span>\n              </div>\n\n              <div class=\"page-header-title-container\">\n\n                  <ux-breadcrumbs [crumbs]=\"crumbs\"></ux-breadcrumbs>\n\n                  <h1 class=\"page-header-title\">{{ header }}</h1>\n              </div>\n\n          </div>\n\n      </div>\n\n      <!-- Display This Section Optimized for Condensed Mode -->\n      <div class=\"page-header-condensed-content\" *ngIf=\"condensed\">\n\n          <div class=\"page-header-breadcrumbs\">\n              <ux-breadcrumbs [crumbs]=\"getCondensedBreadcrumbs()\"></ux-breadcrumbs>\n          </div>\n\n          <div class=\"page-header-navigation\" [ngClass]=\"alignment\">\n\n              <!-- The Top Navigation Options -->\n              <ux-page-header-horizontal-navigation [items]=\"items\"></ux-page-header-horizontal-navigation>\n          </div>\n\n          <div class=\"page-header-icon-menus\">\n              <ng-container *ngFor=\"let menu of customMenus\" [ngTemplateOutlet]=\"menu\"></ng-container>\n              <ux-page-header-icon-menu *ngFor=\"let menu of iconMenus\" [menu]=\"menu\"></ux-page-header-icon-menu>\n          </div>\n\n      </div>\n    `,\n    host: {\n        '[class.page-header-condensed]': 'condensed'\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'logo': [{ type: Input },],\n'items': [{ type: Input },],\n'crumbs': [{ type: Input },],\n'header': [{ type: Input },],\n'alignment': [{ type: Input },],\n'condensed': [{ type: Input },],\n'iconMenus': [{ type: Input },],\n'backVisible': [{ type: Input },],\n'backClick': [{ type: Output },],\n'customMenus': [{ type: ContentChildren, args: [PageHeaderCustomMenuDirective, { read: TemplateRef }, ] },],\n};\n}\n\nfunction PageHeaderComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nPageHeaderComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nPageHeaderComponent.ctorParameters;\n/** @type {?} */\nPageHeaderComponent.propDecorators;\n/** @type {?} */\nPageHeaderComponent.prototype.logo;\n/** @type {?} */\nPageHeaderComponent.prototype.items;\n/** @type {?} */\nPageHeaderComponent.prototype.crumbs;\n/** @type {?} */\nPageHeaderComponent.prototype.header;\n/** @type {?} */\nPageHeaderComponent.prototype.alignment;\n/** @type {?} */\nPageHeaderComponent.prototype.condensed;\n/** @type {?} */\nPageHeaderComponent.prototype.iconMenus;\n/** @type {?} */\nPageHeaderComponent.prototype.backVisible;\n/** @type {?} */\nPageHeaderComponent.prototype.backClick;\n/** @type {?} */\nPageHeaderComponent.prototype.customMenus;\n}\n\n\nexport interface PageHeaderIconMenu {\n    icon: string;\n    badge?: number | string;\n    select?: (menu: PageHeaderIconMenu) => void;\n    dropdown?: PageHeaderIconMenuDropdownItem[];\n}\n\nexport interface PageHeaderIconMenuDropdownItem {\n    icon?: string;\n    title: string;\n    subtitle?: string;\n    header?: boolean;\n    divider?: boolean;\n    select?: () => void;\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Input } from '@angular/core';\nimport { PageHeaderIconMenu, PageHeaderIconMenuDropdownItem } from '../page-header.component';\nexport class PageHeaderIconMenuComponent {\n\n     menu: PageHeaderIconMenu;\n/**\n * @param {?} item\n * @return {?}\n */\nselect(item: PageHeaderIconMenu | PageHeaderIconMenuDropdownItem) {\n        if (item.select) {\n            item.select.call(item, item);\n        }\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-page-header-icon-menu',\n    template: `\n      <div class=\"page-header-icon-menu\" dropdown dropdownToggle placement=\"bottom right\">\n\n          <a class=\"page-header-icon-menu-button\" (click)=\"select(menu)\">\n              <i class=\"hpe-icon\" [ngClass]=\"menu.icon\"></i>\n              <span class=\"label label-primary\" *ngIf=\"menu?.badge\">{{ menu.badge }}</span>\n          </a>\n\n          <ul *dropdownMenu class=\"dropdown-menu\" role=\"menu\">\n\n              <li role=\"menuitem\" *ngFor=\"let dropdown of menu?.dropdown\" [class.dropdown-header]=\"dropdown.header\" [class.dropdown-divider]=\"dropdown.divider\">\n\n                  <span class=\"font-bold\" *ngIf=\"dropdown.header\">{{ dropdown.title }}</span>\n\n                  <a class=\"dropdown-item\" *ngIf=\"!dropdown.header\" (click)=\"select(dropdown)\">\n                      <i class=\"hpe-icon hp-fw text-muted\" [ngClass]=\"dropdown.icon\"></i>\n                      {{ dropdown.title }}\n                      <span class=\"pull-right text-muted small\" *ngIf=\"dropdown.subtitle\">{{ dropdown.subtitle }}</span>\n                  </a>\n              </li>\n\n          </ul>\n      </div>\n    `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'menu': [{ type: Input },],\n};\n}\n\nfunction PageHeaderIconMenuComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nPageHeaderIconMenuComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nPageHeaderIconMenuComponent.ctorParameters;\n/** @type {?} */\nPageHeaderIconMenuComponent.propDecorators;\n/** @type {?} */\nPageHeaderIconMenuComponent.prototype.menu;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { BsDropdownDirective } from 'ngx-bootstrap/dropdown';\nimport { Subject } from 'rxjs/Subject';\nimport'rxjs/add/operator/debounceTime';\nimport { PageHeaderNavigationDropdownItem } from '../navigation.component';\nexport class PageHeaderNavigationDropdownItemComponent {\n\n     item: PageHeaderNavigationDropdownItem;\n     onSelect: EventEmitter<PageHeaderNavigationDropdownItem> = new EventEmitter<PageHeaderNavigationDropdownItem>();\n\n    dropdownOpen: boolean = false;\nprivate _dropdownEvents: Subject<boolean> = new Subject<boolean>();\nconstructor() {\n\n        // subscribe to stream with a debounce (a small debounce is all that is required)\n        this._dropdownEvents.debounceTime(1).subscribe(visible => this.dropdownOpen = visible);\n    }\n/**\n * @param {?} item\n * @param {?=} parentItem\n * @return {?}\n */\nselectItem(item: PageHeaderNavigationDropdownItem, parentItem?: PageHeaderNavigationDropdownItem) {\n\n        // clicking on an item with children then return\n        if (item.children) {\n            return;\n        }\n\n        // emit the selected item in an event\n        this.onSelect.emit(item);\n\n        // select the current item\n        item.selected = true;\n\n        // now also select the parent menu\n        if (parentItem) {\n            parentItem.selected = true;\n        }\n    }\n/**\n * @return {?}\n */\nhoverStart() {\n        this._dropdownEvents.next(true);\n    }\n/**\n * @return {?}\n */\nhoverLeave() {\n        this._dropdownEvents.next(false);\n    }\n/**\n * @return {?}\n */\nclose() {\n        this.dropdownOpen = false;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-page-header-horizontal-navigation-dropdown-item',\n    template: `\n      <div role=\"menu-item\" dropdown [isOpen]=\"dropdownOpen\" container=\"body\" placement=\"right\" [isDisabled]=\"!item.children\" (mouseenter)=\"hoverStart()\"\n          (mouseleave)=\"hoverLeave()\" #subMenu=\"bs-dropdown\">\n\n          <!-- Show the menu item and the arrow if there are children -->\n          <a class=\"dropdown-item\" tabindex=\"0\" [class.selected]=\"item.selected\" (keyup.enter)=\"selectItem(item); subMenu.toggle()\" (click)=\"selectItem(item)\">\n              <span class=\"dropdown-item-title\">{{ item.title }}</span>\n              <span class=\"dropdown-item-icon hpe-icon hpe-next\" *ngIf=\"item.children\"></span>\n          </a>\n\n          <!-- Allow another level of menu items -->\n          <ul *dropdownMenu class=\"dropdown-menu horizontal-navigation-dropdown-submenu\" role=\"menu\" (mouseenter)=\"hoverStart()\" (mouseleave)=\"hoverLeave()\">\n\n              <li role=\"menuitem\" *ngFor=\"let subItem of item.children\" (click)=\"selectItem(subItem, item)\" (keyup.enter)=\"selectItem(subItem, item)\">\n                  <a class=\"dropdown-item\" tabindex=\"0\" [class.selected]=\"subItem.selected\">\n                      <span class=\"dropdown-item-title\">{{ subItem.title }}</span>\n                  </a>\n              </li>\n          </ul>\n      </div>\n    `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'item': [{ type: Input },],\n'onSelect': [{ type: Output },],\n};\n}\n\nfunction PageHeaderNavigationDropdownItemComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nPageHeaderNavigationDropdownItemComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nPageHeaderNavigationDropdownItemComponent.ctorParameters;\n/** @type {?} */\nPageHeaderNavigationDropdownItemComponent.propDecorators;\n/** @type {?} */\nPageHeaderNavigationDropdownItemComponent.prototype.item;\n/** @type {?} */\nPageHeaderNavigationDropdownItemComponent.prototype.onSelect;\n/** @type {?} */\nPageHeaderNavigationDropdownItemComponent.prototype.dropdownOpen;\n/** @type {?} */\nPageHeaderNavigationDropdownItemComponent.prototype._dropdownEvents;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Input, ViewChild, ViewChildren, QueryList, OnInit, Output, EventEmitter, ElementRef } from '@angular/core';\nimport { BsDropdownDirective } from 'ngx-bootstrap/dropdown';\nimport { PageHeaderNavigationDropdownItemComponent } from '../navigation-dropdown-item/navigation-dropdown-item.component';\nimport { PageHeaderNavigationItem, PageHeaderNavigationDropdownItem } from '../navigation.component';\nexport class PageHeaderNavigationItemComponent implements OnInit {\n\n     menu: BsDropdownDirective;\n     dropdownComponents: QueryList<PageHeaderNavigationDropdownItemComponent>;\n\n     item: PageHeaderNavigationItem;\n     onSelect: EventEmitter<PageHeaderNavigationDropdownItem> = new EventEmitter<PageHeaderNavigationDropdownItem>();\n/**\n * @param {?} elementRef\n */\nconstructor(public elementRef: ElementRef) {}\n/**\n * @return {?}\n */\nngOnInit() {\n        this.menu.onHidden.subscribe(() => this.dropdownComponents.forEach(dropdown => dropdown.close()));\n    }\n/**\n * @return {?}\n */\nselectItem() {\n\n        // if the item has children then do nothing at this stage \n        if (this.item.children) {\n            return;\n        }\n\n        // otherwise select the current item\n        this.onItemSelect(this.item);\n    }\n/**\n * @param {?} item\n * @return {?}\n */\nonItemSelect(item: PageHeaderNavigationItem | PageHeaderNavigationDropdownItem) {\n        this.onSelect.emit(item);\n\n        // select the current item\n        this.item.selected = true;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-page-header-horizontal-navigation-item',\n    template: `\n      <div class=\"horizontal-navigation-button\" dropdown dropdownToggle placement=\"bottom left\" [isDisabled]=\"!item?.children\" tabindex=\"0\" container=\"body\"\n          #menu=\"bs-dropdown\" (keyup.enter)=\"menu.toggle()\" [class.selected]=\"item?.selected\" (click)=\"selectItem()\">\n\n          <span class=\"hpe-icon navigation-item-icon\" *ngIf=\"item.icon\" [ngClass]=\"item?.icon\"></span>\n          <span class=\"navigation-item-label\">{{ item?.title }}</span>\n          <span class=\"hpe-icon hpe-down\" *ngIf=\"item?.children\"></span>\n\n          <div *dropdownMenu class=\"dropdown-menu horizontal-navigation-dropdown-menu\" role=\"menu\">\n              <ux-page-header-horizontal-navigation-dropdown-item *ngFor=\"let item of item?.children\" [item]=\"item\" (onSelect)=\"onItemSelect($event)\"></ux-page-header-horizontal-navigation-dropdown-item>\n          </div>\n\n      </div>\n    `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'menu': [{ type: ViewChild, args: ['menu', ] },],\n'dropdownComponents': [{ type: ViewChildren, args: [PageHeaderNavigationDropdownItemComponent, ] },],\n'item': [{ type: Input },],\n'onSelect': [{ type: Output },],\n};\n}\n\nfunction PageHeaderNavigationItemComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nPageHeaderNavigationItemComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nPageHeaderNavigationItemComponent.ctorParameters;\n/** @type {?} */\nPageHeaderNavigationItemComponent.propDecorators;\n/** @type {?} */\nPageHeaderNavigationItemComponent.prototype.menu;\n/** @type {?} */\nPageHeaderNavigationItemComponent.prototype.dropdownComponents;\n/** @type {?} */\nPageHeaderNavigationItemComponent.prototype.item;\n/** @type {?} */\nPageHeaderNavigationItemComponent.prototype.onSelect;\n/** @type {?} */\nPageHeaderNavigationItemComponent.prototype.elementRef;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Input, ViewChildren, QueryList, ElementRef, Renderer2, AfterViewInit } from '@angular/core';\nimport { PageHeaderNavigationItemComponent } from './navigation-item/navigation-item.component';\nimport { ResizeService } from '../../../directives/resize/index';\nexport class PageHeaderNavigationComponent implements AfterViewInit {\n    \n     menuItems: QueryList<PageHeaderNavigationItemComponent>;\n     \n     items: PageHeaderNavigationItem[] = [];\n\n    indicatorVisible: boolean = false;\n    indicatorX: number = 0;\n    indicatorWidth: number = 0;\n/**\n * @param {?} elementRef\n * @param {?} resizeService\n * @param {?} renderer\n */\nconstructor(elementRef: ElementRef, resizeService: ResizeService, renderer: Renderer2) {\n        resizeService.addResizeListener(elementRef.nativeElement, renderer).subscribe(this.updateSelectedIndicator.bind(this));\n    }\n/**\n * @return {?}\n */\nngAfterViewInit(): void {\n        this.updateSelectedIndicator();\n    }\n/**\n * @param {?} item\n * @return {?}\n */\nonSelect(item: PageHeaderNavigationItem): void {\n        \n        if (item.select) {\n            item.select.call(item, item);\n        }\n\n        // deselect all items in all menus\n        this.deselectAll();\n\n        // update the selected indicator\n        this.updateSelectedIndicator();\n    }\n/**\n * @return {?}\n */\ndeselectAll(): void {\n        this.items.forEach(item => this.deselect(item));\n    }\n/**\n * @param {?} navItem\n * @return {?}\n */\ndeselect(navItem: PageHeaderNavigationItem | PageHeaderNavigationDropdownItem): void {\n        \n        // deselect the current item\n        navItem.selected = false;\n\n        // iterate any children and deselect them\n        if (navItem.children) {\n            navItem.children.forEach(item => this.deselect(item));\n        }\n\n        // update the selected indicator\n        this.updateSelectedIndicator();\n    }\n/**\n * @return {?}\n */\nupdateSelectedIndicator(): void {\n\n        setTimeout(() => {\n\n            // find the selected item\n            let /** @type {?} */ selectedItem = this.menuItems.find(item => item.item.selected);\n\n            // determine whether or not to show the indicator\n            this.indicatorVisible = !!selectedItem;\n\n            // set the width of the indicator to match the width of the navigation item\n            if (selectedItem) {\n                let /** @type {?} */ styles = getComputedStyle(selectedItem.elementRef.nativeElement);\n\n                this.indicatorX = selectedItem.elementRef.nativeElement.offsetLeft;\n                this.indicatorWidth = parseInt(styles.getPropertyValue('width'));\n            }\n        });\n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-page-header-horizontal-navigation',\n    template: `\n      <ux-page-header-horizontal-navigation-item *ngFor=\"let item of items\" [item]=\"item\" (onSelect)=\"onSelect($event)\"></ux-page-header-horizontal-navigation-item>\n      <div class=\"selected-indicator\" [style.opacity]=\"indicatorVisible ? 1 : 0\" [style.margin-left.px]=\"indicatorX\" [style.width.px]=\"indicatorWidth\"></div>\n    `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: ResizeService, },\n{type: Renderer2, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'menuItems': [{ type: ViewChildren, args: [PageHeaderNavigationItemComponent, ] },],\n'items': [{ type: Input },],\n};\n}\n\nfunction PageHeaderNavigationComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nPageHeaderNavigationComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nPageHeaderNavigationComponent.ctorParameters;\n/** @type {?} */\nPageHeaderNavigationComponent.propDecorators;\n/** @type {?} */\nPageHeaderNavigationComponent.prototype.menuItems;\n/** @type {?} */\nPageHeaderNavigationComponent.prototype.items;\n/** @type {?} */\nPageHeaderNavigationComponent.prototype.indicatorVisible;\n/** @type {?} */\nPageHeaderNavigationComponent.prototype.indicatorX;\n/** @type {?} */\nPageHeaderNavigationComponent.prototype.indicatorWidth;\n}\n\n\nexport interface PageHeaderNavigationItem {\n    icon?: string;\n    title: string;\n    selected?: boolean;\n    select?: (item: PageHeaderNavigationItem) => void;\n    children?: PageHeaderNavigationDropdownItem[];\n}\n\nexport interface PageHeaderNavigationDropdownItem {\n    title: string;\n    selected?: boolean;    \n    select?: (item: PageHeaderNavigationDropdownItem) => void;\n    children?: PageHeaderNavigationDropdownItem[];\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\n\nimport { PageHeaderComponent } from './page-header.component';\nimport { BreadcrumbsModule } from '../breadcrumbs/index';\nimport { PageHeaderIconMenuComponent } from './icon-menu/icon-menu.component';\nimport { PageHeaderNavigationComponent } from './navigation/navigation.component';\nimport { PageHeaderNavigationItemComponent } from './navigation/navigation-item/navigation-item.component';\nimport { PageHeaderNavigationDropdownItemComponent } from './navigation/navigation-dropdown-item/navigation-dropdown-item.component';\nimport { PageHeaderCustomMenuDirective } from './custom-menu/custom-menu.directive';\nimport { ResizeModule } from '../../directives/resize/index';\nexport class PageHeaderModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        CommonModule,\n        BreadcrumbsModule,\n        ResizeModule,\n        BsDropdownModule.forRoot()\n    ],\n    exports: [ \n        PageHeaderComponent,\n        PageHeaderCustomMenuDirective \n    ],\n    declarations: [ \n        PageHeaderComponent,\n        PageHeaderIconMenuComponent,\n        PageHeaderCustomMenuDirective,\n        PageHeaderNavigationComponent,\n        PageHeaderNavigationItemComponent,\n        PageHeaderNavigationDropdownItemComponent\n    ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction PageHeaderModule_tsickle_Closure_declarations() {\n/** @type {?} */\nPageHeaderModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nPageHeaderModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { ColorValueSet, ColorClassSet } from './color.service';\nimport {\n    DOCUMENT\n} from '@angular/platform-browser';\nimport {\n    Injectable,\n    Inject\n} from '@angular/core';\nexport class ColorService {\nprivate _html: string;\nprivate _element: HTMLElement;\nprivate _colors: ThemeColors;\nprivate _colorSet: any = colorSets.keppel;\n/**\n * @param {?} document\n */\nconstructor(  document: any) {\n        if (this._colorSet.colorClassSet) {\n            this._setColors();\n        } else {\n            for (let key in this._colorSet.colorValueSet) {\n                this._colors[key] = this._getColorValueByHex(this._colorSet.colorValueSet[key]);\n            }\n        }\n    }\n/**\n * @return {?}\n */\nprivate _setColors() {\n\n        this._html = '';\n\n        for (let /** @type {?} */ key in this._colorSet.colorClassSet) {\n            this._html += '<div class=\"' + this._colorSet.colorClassSet[key] + '-color\"></div>';\n        }\n\n        this._element = document.createElement('div');\n        this._element.className = 'color-chart';\n        this._element.innerHTML = this._html;\n\n        document.body.appendChild(this._element);\n\n        this._colors = {};\n\n        for (let /** @type {?} */ key in this._colorSet.colorClassSet) {\n            this._colors[key] = this.getColorValue(this._colorSet.colorClassSet[key]);\n        }\n\n        this._element.parentNode.removeChild(this._element);\n    }\n/**\n * @param {?} color\n * @return {?}\n */\nprivate _getColorValueByHex(color: string): ThemeColor {\n        let /** @type {?} */ hex = color.replace('#', '');\n\n        let /** @type {?} */ r = parseInt(hex.substring(0, 2), 16).toString();\n        let /** @type {?} */ g = parseInt(hex.substring(2, 4), 16).toString();\n        let /** @type {?} */ b = parseInt(hex.substring(4, 6), 16).toString();\n\n        return new ThemeColor(r, g, b, '1');\n    }\n/**\n * @param {?} color\n * @return {?}\n */\nprivate getColorValue(color: ColorIdentifier): ThemeColor {\n\n        let /** @type {?} */ target = this._element.querySelector('.' + this._colorSet.colorClassSet[color] + '-color');\n\n        if (!target) {\n            throw new Error('Invalid color');\n        }\n\n        let /** @type {?} */ colorValue = window.getComputedStyle(target).backgroundColor;\n\n        let /** @type {?} */ rgba = colorValue.match(/^rgba?\\((\\d+),\\s*(\\d+),\\s*(\\d+)(?:,\\s*(\\d+(?:\\.\\d+)?))?\\)$/);\n\n        return new ThemeColor(rgba[1], rgba[2], rgba[3], rgba[4]);\n    }\n/**\n * @param {?} color\n * @return {?}\n */\ngetColor(color: ColorIdentifier): ThemeColor {\n        return this._colors[color.toLowerCase()];\n    }\n/**\n * @return {?}\n */\ngetColorSet() {\n        return this._colorSet;\n    }\n/**\n * @param {?} colorSet\n * @return {?}\n */\nsetColorSet(colorSet: ColorSet) {\n        this._colorSet = colorSet;\n        this._colors = {};\n\n        if (this._colorSet.colorClassSet) {\n            this._setColors();\n        } else {\n            for (let /** @type {?} */ key in this._colorSet.colorValueSet) {\n                this._colors[key] = this._getColorValueByHex(this._colorSet.colorValueSet[key]);\n            }\n        }\n    }\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: undefined, decorators: [{ type: Inject, args: [DOCUMENT, ] }, ]},\n];\n}\n\nfunction ColorService_tsickle_Closure_declarations() {\n/**\n * @nocollapse\n * @type {?}\n */\nColorService.ctorParameters;\n/** @type {?} */\nColorService.prototype._html;\n/** @type {?} */\nColorService.prototype._element;\n/** @type {?} */\nColorService.prototype._colors;\n/** @type {?} */\nColorService.prototype._colorSet;\n}\n\nexport class ThemeColor {\nprivate _r: string;\nprivate _g: string;\nprivate _b: string;\nprivate _a: string;\n/**\n * @param {?} r\n * @param {?} g\n * @param {?} b\n * @param {?} a\n */\nconstructor(r: string, g: string, b: string, a: string) {\n        this._r = r;\n        this._g = g;\n        this._b = b;\n        this._a = a === undefined ? '1' : a;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nstatic parse(value: string): ThemeColor {\n        let /** @type {?} */ r, /** @type {?} */ g, /** @type {?} */ b, /** @type {?} */ a = '1';\n\n        var /** @type {?} */ rgbaPattern = /^rgba?\\((\\d+),\\s*(\\d+),\\s*(\\d+)(?:,\\s*(\\d+(?:\\.\\d+)?))?\\)$/;\n        var /** @type {?} */ shortHexPattern = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;\n        var /** @type {?} */ longHexPattern = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/;\n\n        let /** @type {?} */ rgbaMatch = value.match(rgbaPattern);\n        let /** @type {?} */ shortHexMatch = value.match(shortHexPattern);\n        let /** @type {?} */ longHexMatch = value.match(longHexPattern);\n\n        if (rgbaMatch) {\n            r = rgbaMatch[1];\n            g = rgbaMatch[2];\n            b = rgbaMatch[3];\n            a = rgbaMatch[4] ? rgbaMatch[4] : '1';\n        } else if (longHexMatch) {\n            r = parseInt(longHexMatch[1], 16).toString();\n            g = parseInt(longHexMatch[2], 16).toString();\n            b = parseInt(longHexMatch[3], 16).toString();\n        } else if (shortHexMatch) {\n            r = parseInt(shortHexMatch[1] + shortHexMatch[1], 16).toString();\n            g = parseInt(shortHexMatch[2] + shortHexMatch[2], 16).toString();\n            b = parseInt(shortHexMatch[3] + shortHexMatch[3], 16).toString();\n        } else {\n            throw new Error(`Cannot parse color - ${value} is not a valid color.`);\n        }\n        return new ThemeColor(r, g, b, a);\n    }\n/**\n * @return {?}\n */\ntoHex() {\n        var /** @type {?} */ red = parseInt(this._r).toString(16);\n        var /** @type {?} */ green = parseInt(this._g).toString(16);\n        var /** @type {?} */ blue = parseInt(this._b).toString(16);\n\n        if (red.length < 2) {\n            red = '0' + red;\n        }\n        if (green.length < 2) {\n            green = '0' + green;\n        }\n        if (blue.length < 2) {\n            blue = '0' + blue;\n        }\n\n        return '#' + red + green + blue;\n    }\n/**\n * @return {?}\n */\ntoRgb() {\n        return 'rgb(' + this._r + ', ' + this._g + ', ' + this._b + ')';\n    }\n/**\n * @return {?}\n */\ntoRgba() {\n        return 'rgba(' + this._r + ', ' + this._g + ', ' + this._b + ', ' + this._a + ')';\n    }\n/**\n * @return {?}\n */\ngetRed() {\n        return this._r;\n    }\n/**\n * @return {?}\n */\ngetGreen() {\n        return this._g;\n    }\n/**\n * @return {?}\n */\ngetBlue() {\n        return this._b;\n    }\n/**\n * @return {?}\n */\ngetAlpha() {\n        return this._a;\n    }\n/**\n * @param {?} red\n * @return {?}\n */\nsetRed(red: string) {\n        this._r = red;\n        return this;\n    }\n/**\n * @param {?} green\n * @return {?}\n */\nsetGreen(green: string) {\n        this._g = green;\n        return this;\n    }\n/**\n * @param {?} blue\n * @return {?}\n */\nsetBlue(blue: string) {\n        this._b = blue;\n        return this;\n    }\n/**\n * @param {?} alpha\n * @return {?}\n */\nsetAlpha(alpha: string | number) {\n        this._a = alpha.toString();\n        return this;\n    }\n}\n\nfunction ThemeColor_tsickle_Closure_declarations() {\n/** @type {?} */\nThemeColor.prototype._r;\n/** @type {?} */\nThemeColor.prototype._g;\n/** @type {?} */\nThemeColor.prototype._b;\n/** @type {?} */\nThemeColor.prototype._a;\n}\n\n\nexport const /** @type {?} */ colorSets = {\n    keppel: {\n        colorClassSet: {\n            'primary': 'primary',\n            'accent': 'accent',\n            'secondary': 'secondary',\n            'alternate1': 'alternate1',\n            'alternate2': 'alternate2',\n            'alternate3': 'alternate3',\n            'vibrant1': 'vibrant1',\n            'vibrant2': 'vibrant2',\n            'grey1': 'grey1',\n            'grey2': 'grey2',\n            'grey3': 'grey3',\n            'grey4': 'grey4',\n            'grey5': 'grey5',\n            'grey6': 'grey6',\n            'grey7': 'grey7',\n            'grey8': 'grey8',\n            'chart1': 'chart1',\n            'chart2': 'chart2',\n            'chart3': 'chart3',\n            'chart4': 'chart4',\n            'chart5': 'chart5',\n            'chart6': 'chart6',\n            'ok': 'ok',\n            'warning': 'warning',\n            'critical': 'critical',\n            'partition1': 'partition1',\n            'partition9': 'partition9',\n            'partition10': 'partition10',\n            'partition11': 'partition11',\n            'partition12': 'partition12',\n            'partition13': 'partition13',\n            'partition14': 'partition14',\n            'social-chart-node': 'social-chart-node',\n            'social-chart-edge': 'social-chart-edge'\n        }\n    },\n    microFocus: {\n        'colorValueSet': {\n            'cerulean': '#1668c1',\n            'aqua': '#29ceff',\n            'aquamarine': '#2fd6c3',\n            'fuchsia': '#c6179d',\n            'indigo': '#7425ad',\n            'dark-blue': '#231ca5',\n            'white': '#ffffff',\n            'slightly-gray': '#f5f7f8',\n            'bright-gray': '#f1f2f3',\n            'gray': '#dcdedf',\n            'silver': '#bdbec0',\n            'dim-gray': '#656668',\n            'dark-gray': '#323435',\n            'black': '#000000',\n            'crimson-negative': '#e5004c',\n            'apricot': '#f48b34',\n            'yellow': '#fcdb1f',\n            'green-positive': '#1aac60',\n            'ultramarine': '#3939c6',\n            'skyblue': '#00abf3',\n            'pale-aqua': '#43e4ff',\n            'pale-green': '#1ffbba',\n            'lime': '#75da4d',\n            'orange': '#ffce00',\n            'magenta': '#eb23c2',\n            'pale-purple': '#ba47e2',\n            'dark-ultramarine': '#271782',\n            'steelblue': '#014272',\n            'arctic-blue': '#0b8eac',\n            'emerald': '#00a989',\n            'olive': '#5bba36',\n            'goldenrod': '#ffb000',\n            'purple': '#9b1e83',\n            'pale-eggplant': '#5216ac',\n            'red': '#ff454f',\n            'pale-amber': '#ffb24d',\n            'pale-lemon': '#fde159',\n            'pale-emerald': '#33c180',\n            'plum': '#b21646',\n            'copper': '#e57828',\n            'amber': '#ffc002',\n            'leaf-green': '#118c4f',\n            'primary': '#0073e7',\n            'accent': '#7425ad',\n            'secondary': '#ffffff',\n            'alternate1': '#29ceff',\n            'alternate2': '#2fd6c3',\n            'alternate3': '#c6179d',\n            'vibrant1': '#43e4ff',\n            'vibrant2': '#ffce00',\n            'grey1': '#000000',\n            'grey2': '#323435',\n            'grey3': '#656668',\n            'grey4': '#bdbec0',\n            'grey5': '#dcdedf',\n            'grey6': '#f1f2f3',\n            'grey7': '#f5f7f8',\n            'grey8': '#ffffff',\n            'chart1': '#3939c6',\n            'chart2': '#00abf3',\n            'chart3': '#75da4d',\n            'chart4': '#ffce00',\n            'chart5': '#eb23c2',\n            'chart6': '#ba47e2',\n            'ok': '#1aac60',\n            'warning': '#f48b34',\n            'critical': 'e5004c',\n            'partition1': '#7425ad',\n            'partition9': '#5216ac',\n            'partition10': '#5bba36',\n            'partition11': '#014272',\n            'partition12': '#ffb000',\n            'partition13': '#bdbec0',\n            'partition14': '#271782',\n            'social-chart-node': '#ff00ff',\n            'social-chart-edge': '#ff00ff'\n        }\n    }\n};\n\nexport interface ThemeColors {\n    [name: string]: ThemeColor;\n}\n\nexport interface ColorSet {\n    colorClassSet?: ColorClassSet;\n    colorValueSet?: ColorValueSet;\n}\n\nexport interface ColorClassSet {\n    [name: string]: string;\n}\n\nexport interface ColorValueSet {\n    [name: string]: string;\n}\n\nexport type ColorIdentifier = string;\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\n\nimport { ColorService } from './color.service';\nexport class ColorServiceModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [],\n    exports: [],\n    declarations: [],\n    providers: [ColorService],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ColorServiceModule_tsickle_Closure_declarations() {\n/** @type {?} */\nColorServiceModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nColorServiceModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Input, OnChanges, SimpleChanges } from '@angular/core';\nimport { ColorService } from '../../services/color/index';\nexport class ProgressBarComponent implements OnChanges {\n\n     value: number = 0;\n     max: number = 100;\n     trackColor: string = this.colorService.getColor('grey7').toHex();\n     barColor: string = this.colorService.getColor('accent').toHex();\n\n    percentage: number = 0;\n/**\n * @param {?} colorService\n */\nconstructor(private colorService: ColorService) { }\n/**\n * @param {?} changes\n * @return {?}\n */\nngOnChanges(changes: SimpleChanges): void {\n        this.percentage = (this.value / this.max) * 100;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-progress-bar',\n    template: `\n      <div class=\"progressbar-track\" [style.width.%]=\"percentage\" [style.backgroundColor]=\"barColor\">\n          <ng-content></ng-content>\n      </div>\n    `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ColorService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'value': [{ type: Input },],\n'max': [{ type: Input },],\n'trackColor': [{ type: Input },],\n'barColor': [{ type: Input },],\n};\n}\n\nfunction ProgressBarComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nProgressBarComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nProgressBarComponent.ctorParameters;\n/** @type {?} */\nProgressBarComponent.propDecorators;\n/** @type {?} */\nProgressBarComponent.prototype.value;\n/** @type {?} */\nProgressBarComponent.prototype.max;\n/** @type {?} */\nProgressBarComponent.prototype.trackColor;\n/** @type {?} */\nProgressBarComponent.prototype.barColor;\n/** @type {?} */\nProgressBarComponent.prototype.percentage;\n/** @type {?} */\nProgressBarComponent.prototype.colorService;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\n\nimport { ProgressBarComponent } from './progress-bar.component';\nimport { ColorServiceModule } from '../../services/color/index';\nexport class ProgressBarModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [ColorServiceModule],\n    exports: [ProgressBarComponent],\n    declarations: [ProgressBarComponent]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ProgressBarModule_tsickle_Closure_declarations() {\n/** @type {?} */\nProgressBarModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nProgressBarModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Input, forwardRef, HostListener, Output, EventEmitter } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\n\nexport const /** @type {?} */ RADIOBUTTON_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => RadioButtonComponent),\n    multi: true\n};\nexport class RadioButtonComponent implements ControlValueAccessor {\n\n     id: string;\n     simplified: boolean = false;\n     disabled: boolean = false;\n     name: string = '';\n     clickable: boolean = true;\n     option: any;\n     valueChange: EventEmitter<any> = new EventEmitter<any>();\n/**\n * @return {?}\n */\nget value() {\n        return this._value;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset value(value: boolean) {\n        this._value = value;\n\n        // invoke change event\n        this.valueChange.emit(this._value);\n\n        // call callback\n        this.onChangeCallback(this._value);\n    }\nprivate _value: any = false;\n\n    onTouchedCallback: () => void = () => { };\n    onChangeCallback: (_: any) => void = () => { };\n/**\n * @return {?}\n */\ncheckItem() {\n\n        if (this.disabled === true || this.clickable === false) {\n            return;\n        }\n\n        // toggle the checked state\n        this.value = this.option;\n\n        // call callback\n        this.onChangeCallback(this.value);\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nkeyDown(event: KeyboardEvent) {\n\n        // then toggle the checkbox\n        this.checkItem();\n\n        // prevent default browser behavior\n        event.stopPropagation();\n        event.preventDefault();\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nwriteValue(value: boolean) {\n        if (value !== this._value) {\n            this._value = value;\n        }\n    }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnChange(fn: any) {\n        this.onChangeCallback = fn;\n    }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnTouched(fn: any) {\n        this.onTouchedCallback = fn;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-radio-button',\n    template: `\n      <div class=\"ux-radio-button\" tabindex=\"0\"\n          [class.ux-checked]=\"value === option\"\n          [class.ux-simplified]=\"simplified === true\"\n          [class.ux-disabled]=\"disabled === true\"\n          (keydown.space)=\"keyDown($event)\">\n\n          <input type=\"radio\" role=\"radio\" tabindex=\"-1\"\n              [name]=\"name\" \n              [checked]=\"value === option\" \n              [disabled]=\"disabled\"\n              [value]=\"option\"\n              [id]=\"id\" />\n        \n      </div>\n\n      <div class=\"ux-radio-button-content\">\n          <ng-content></ng-content>\n      </div>\n    `,\n    providers: [RADIOBUTTON_VALUE_ACCESSOR]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'id': [{ type: Input },],\n'simplified': [{ type: Input },],\n'disabled': [{ type: Input },],\n'name': [{ type: Input },],\n'clickable': [{ type: Input },],\n'option': [{ type: Input },],\n'valueChange': [{ type: Output },],\n'value': [{ type: Input },],\n'checkItem': [{ type: HostListener, args: ['click', ] },],\n};\n}\n\nfunction RadioButtonComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nRadioButtonComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nRadioButtonComponent.ctorParameters;\n/** @type {?} */\nRadioButtonComponent.propDecorators;\n/** @type {?} */\nRadioButtonComponent.prototype.id;\n/** @type {?} */\nRadioButtonComponent.prototype.simplified;\n/** @type {?} */\nRadioButtonComponent.prototype.disabled;\n/** @type {?} */\nRadioButtonComponent.prototype.name;\n/** @type {?} */\nRadioButtonComponent.prototype.clickable;\n/** @type {?} */\nRadioButtonComponent.prototype.option;\n/** @type {?} */\nRadioButtonComponent.prototype.valueChange;\n/** @type {?} */\nRadioButtonComponent.prototype._value;\n/** @type {?} */\nRadioButtonComponent.prototype.onTouchedCallback;\n/** @type {?} */\nRadioButtonComponent.prototype.onChangeCallback;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport {FormsModule} from '@angular/forms';\n\nimport { RadioButtonComponent } from './radiobutton.component';\nexport class RadioButtonModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [FormsModule],\n    exports: [RadioButtonComponent],\n    declarations: [RadioButtonComponent]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction RadioButtonModule_tsickle_Closure_declarations() {\n/** @type {?} */\nRadioButtonModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nRadioButtonModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs/Subject';\nimport { SearchBuilderQuery } from './interfaces/query.interface';\nimport { SearchBuilderGroupQuery } from './interfaces/group-query.interface';\nimport { SearchBuilderComponentDefinition } from './interfaces/component-definition.interface';\nexport class SearchBuilderService {\n\n  query: SearchBuilderQuery = {};\n  queryChange: Subject<SearchBuilderQuery> = new Subject<SearchBuilderQuery>();\nprivate _components: { [key: string]: any } = {};\n/**\n * Add a component to the internal list of components\n * @param {?} name\n * @param {?} component\n * @return {?}\n */\nregisterComponent(name: string, component: any): void {\n\n    // ensure there are no components with a matching name\n    if (this._components.hasOwnProperty(name)) {\n      throw new Error(`Search builder components must have a unique name. The name ${component.name} has already been used.`);\n    }\n\n    // if unique then add the component to the list\n    this._components[name] = component;\n  }\n/**\n * Bulk registration of components\n * (Just a helper method)\n * @param {?} components\n * @return {?}\n */\nregisterComponents(components: SearchBuilderComponentDefinition[]): void {\n    components.forEach(component => this.registerComponent(component.name, component.component));\n  }\n/**\n * Get a registered component class\n * @param {?} type\n * @return {?}\n */\ngetComponent(type: string): any {\n    return this._components[type];\n  }\n/**\n * Update the internal search query state\n * note that the query will be immutable\n * @param {?} query\n * @return {?}\n */\nsetQuery(query: SearchBuilderQuery): void {\n    this.query = Object.assign({}, query);\n  }\n/**\n * Return the current query state\n * @return {?}\n */\ngetQuery(): SearchBuilderQuery {\n    return this.query;\n  }\n/**\n * Trigger the observable to indicate the query has been updated\n * @return {?}\n */\nqueryHasChanged(): void {\n    this.queryChange.next(this.query);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction SearchBuilderService_tsickle_Closure_declarations() {\n/** @type {?} */\nSearchBuilderService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSearchBuilderService.ctorParameters;\n/** @type {?} */\nSearchBuilderService.prototype.query;\n/** @type {?} */\nSearchBuilderService.prototype.queryChange;\n/** @type {?} */\nSearchBuilderService.prototype._components;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable } from '@angular/core';\nimport { SearchBuilderService } from '../search-builder.service';\nimport { SearchBuilderGroupQuery } from '../interfaces/group-query.interface';\nimport { SearchBuilderQuery } from '../interfaces/query.interface';\nexport class SearchBuilderGroupService {\nprivate _id: string;\n/**\n * @param {?} _searchBuilderService\n */\nconstructor(private _searchBuilderService: SearchBuilderService) { }\n/**\n * Initialise the group by defining an id\n * @param {?} id\n * @return {?}\n */\ninit(id: string): void {\n    // store the name of the group\n    this._id = id;\n\n    // create the entry in the query object if it doesn't exist\n    if (!this._searchBuilderService.query[this._id]) {\n\n      // create the section\n      this._searchBuilderService.query[this._id] = [];\n\n      // emit the changes after the initial setup\n      setTimeout(() => this._searchBuilderService.queryHasChanged());\n    }\n  }\n/**\n * Remove a field from the search builder query\n * @param {?} field\n * @return {?}\n */\nremove(field: SearchBuilderGroupQuery): void {\n    // get the query for this group\n    const /** @type {?} */ query = this.getQuery();\n\n    // remove the field from the array\n    query.splice(query.indexOf(field), 1);\n  }\n/**\n * Get the query for this specific search group\n * @return {?}\n */\ngetQuery(): SearchBuilderGroupQuery[] {\n    return this._searchBuilderService.query[this._id] ? this._searchBuilderService.query[this._id] : [];\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: SearchBuilderService, },\n];\n}\n\nfunction SearchBuilderGroupService_tsickle_Closure_declarations() {\n/** @type {?} */\nSearchBuilderGroupService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSearchBuilderGroupService.ctorParameters;\n/** @type {?} */\nSearchBuilderGroupService.prototype._id;\n/** @type {?} */\nSearchBuilderGroupService.prototype._searchBuilderService;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, OnInit, Input, Output, EventEmitter, TemplateRef } from '@angular/core';\nimport { SearchBuilderGroupService } from './search-builder-group.service';\nimport { SearchBuilderService } from '../search-builder.service';\nimport { SearchBuilderGroupQuery } from '../interfaces/group-query.interface';\nexport class SearchBuilderGroupComponent implements OnInit {\n\n   id: string;\n   header: string;\n   operator: SearchBuilderGroupOperator = 'and';\n   addText: string = 'Add a field';\n   placeholder: TemplateRef<any>;\n   showPlaceholder: boolean = false;\n\n   add: EventEmitter<void> = new EventEmitter<void>();\n   remove: EventEmitter<SearchBuilderGroupQuery> = new EventEmitter<SearchBuilderGroupQuery>();\n/**\n * @param {?} searchBuilderGroupService\n * @param {?} _searchBuilderService\n */\nconstructor(public searchBuilderGroupService: SearchBuilderGroupService,\nprivate _searchBuilderService: SearchBuilderService) { }\n/**\n * @return {?}\n */\nngOnInit(): void {\n\n    // ensure we have a name otherwise throw an error\n    if (!this.id) {\n      throw new Error('Search builder group must have a name attribute.');\n    }\n\n    // otherwise register the group\n    this.searchBuilderGroupService.init(this.id);\n  }\n/**\n * @param {?} field\n * @return {?}\n */\nremoveField(field: SearchBuilderGroupQuery): void {\n    this.searchBuilderGroupService.remove(field);\n    this.remove.emit(field);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'ux-search-builder-group',\n  template: `\n    <h4 class=\"search-group-title\">{{ header }}</h4>\n\n    <main class=\"search-group-content\">\n\n      <section class=\"search-group-operator search-group-operator-{{ operator }}\" [class.hidden-operator]=\"searchBuilderGroupService.getQuery().length < 2\">{{ operator }}</section>\n\n      <section class=\"search-group-items\">\n\n        <div class=\"search-group-item-container\" *ngFor=\"let field of searchBuilderGroupService.getQuery()\">\n\n          <div class=\"search-group-item\">\n            <ng-container *uxSearchBuilderOutlet=\"field.type; context: field\"></ng-container>\n          </div>\n\n          <div class=\"search-group-item-remove\" (click)=\"removeField(field)\">\n            <span class=\"hpe-icon hpe-close\"></span>\n          </div>\n        </div>\n\n        <!-- Placeholder Item -->\n        <ng-container *ngIf=\"showPlaceholder\">\n\n          <!-- The Default Placeholder -->\n          <div class=\"search-group-item-container placeholder-item\" *ngIf=\"!placeholder\">\n        \n            <div class=\"search-group-item\">\n              <label class=\"form-label\">New field</label>\n              <div class=\"form-control\"></div>\n            </div>\n  \n          </div>\n\n          <!-- Allow a custom placeholder -->\n        <ng-container *ngTemplateOutlet=\"placeholder\"></ng-container>\n\n        </ng-container>\n\n      </section>\n\n      <section class=\"search-builder-group-add-field\" (click)=\"add.emit()\">\n\n        <button type=\"button\" class=\"btn btn-icon btn-circular button-accent\" aria-label=\"Add Field\">\n          <span class=\"hpe-icon hpe-add\" aria-hidden=\"true\"></span>\n        </button>\n\n        <span class=\"search-builder-group-add-field-label\">{{ addText }}</span>\n\n      </section>\n\n    </main>\n\n    <hr class=\"search-builder-group-divider\">\n  `,\n  providers: [SearchBuilderGroupService]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: SearchBuilderGroupService, },\n{type: SearchBuilderService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'id': [{ type: Input },],\n'header': [{ type: Input },],\n'operator': [{ type: Input },],\n'addText': [{ type: Input },],\n'placeholder': [{ type: Input },],\n'showPlaceholder': [{ type: Input },],\n'add': [{ type: Output },],\n'remove': [{ type: Output },],\n};\n}\n\nfunction SearchBuilderGroupComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nSearchBuilderGroupComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSearchBuilderGroupComponent.ctorParameters;\n/** @type {?} */\nSearchBuilderGroupComponent.propDecorators;\n/** @type {?} */\nSearchBuilderGroupComponent.prototype.id;\n/** @type {?} */\nSearchBuilderGroupComponent.prototype.header;\n/** @type {?} */\nSearchBuilderGroupComponent.prototype.operator;\n/** @type {?} */\nSearchBuilderGroupComponent.prototype.addText;\n/** @type {?} */\nSearchBuilderGroupComponent.prototype.placeholder;\n/** @type {?} */\nSearchBuilderGroupComponent.prototype.showPlaceholder;\n/** @type {?} */\nSearchBuilderGroupComponent.prototype.add;\n/** @type {?} */\nSearchBuilderGroupComponent.prototype.remove;\n/** @type {?} */\nSearchBuilderGroupComponent.prototype.searchBuilderGroupService;\n/** @type {?} */\nSearchBuilderGroupComponent.prototype._searchBuilderService;\n}\n\n\nexport type SearchBuilderGroupOperator = 'and' | 'or' | 'not';\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, OnInit, Type, Input, ComponentRef, ComponentFactoryResolver, ViewContainerRef } from '@angular/core';\nimport { SearchBuilderService } from '../search-builder.service';\nexport class SearchBuilderOutletDirective implements OnInit {\n\n     uxSearchBuilderOutlet: string;\n     uxSearchBuilderOutletContext: any;\nprivate _componentRef: ComponentRef<any>;\n/**\n * @param {?} _viewContainerRef\n * @param {?} _componentFactoryResolver\n * @param {?} _searchBuilderService\n */\nconstructor(\nprivate _viewContainerRef: ViewContainerRef,\nprivate _componentFactoryResolver: ComponentFactoryResolver,\nprivate _searchBuilderService: SearchBuilderService\n    ) { }\n/**\n * @return {?}\n */\nngOnInit(): void {\n\n        // get the class from the type\n        const /** @type {?} */ component = this._searchBuilderService.getComponent(this.uxSearchBuilderOutlet);\n\n        // create the component factory\n        const /** @type {?} */ componentFactory = this._componentFactoryResolver.resolveComponentFactory(component);\n\n        // create the component instance\n        this._componentRef = this._viewContainerRef.createComponent(componentFactory);\n\n        // set the context and config property on the component instance\n        this._componentRef.instance.context = this.uxSearchBuilderOutletContext;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: '[uxSearchBuilderOutlet]'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ViewContainerRef, },\n{type: ComponentFactoryResolver, },\n{type: SearchBuilderService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'uxSearchBuilderOutlet': [{ type: Input },],\n'uxSearchBuilderOutletContext': [{ type: Input },],\n};\n}\n\nfunction SearchBuilderOutletDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nSearchBuilderOutletDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSearchBuilderOutletDirective.ctorParameters;\n/** @type {?} */\nSearchBuilderOutletDirective.propDecorators;\n/** @type {?} */\nSearchBuilderOutletDirective.prototype.uxSearchBuilderOutlet;\n/** @type {?} */\nSearchBuilderOutletDirective.prototype.uxSearchBuilderOutletContext;\n/** @type {?} */\nSearchBuilderOutletDirective.prototype._componentRef;\n/** @type {?} */\nSearchBuilderOutletDirective.prototype._viewContainerRef;\n/** @type {?} */\nSearchBuilderOutletDirective.prototype._componentFactoryResolver;\n/** @type {?} */\nSearchBuilderOutletDirective.prototype._searchBuilderService;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component } from '@angular/core';\nimport { SearchBuilderService } from '../search-builder.service';\nimport { SearchBuilderGroupQuery } from '../interfaces/group-query.interface';\nimport { SearchBuilderGroupService } from '../search-builder-group/search-builder-group.service';\nexport class BaseSearchComponent {\n\n    type: string;\n    context: SearchBuilderGroupQuery;\n/**\n * @param {?} _searchBuilderService\n * @param {?} _searchBuilderGroupService\n */\nconstructor(\nprivate _searchBuilderService: SearchBuilderService,\nprivate _searchBuilderGroupService: SearchBuilderGroupService\n    ) { }\n/**\n * @param {?} value\n * @return {?}\n */\nsetValue(value: any): void {\n        this.context.value = value;\n        this._searchBuilderService.queryHasChanged();\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-base-search',\n    template: ''\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: SearchBuilderService, },\n{type: SearchBuilderGroupService, },\n];\n}\n\nfunction BaseSearchComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nBaseSearchComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nBaseSearchComponent.ctorParameters;\n/** @type {?} */\nBaseSearchComponent.prototype.type;\n/** @type {?} */\nBaseSearchComponent.prototype.context;\n/** @type {?} */\nBaseSearchComponent.prototype._searchBuilderService;\n/** @type {?} */\nBaseSearchComponent.prototype._searchBuilderGroupService;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { SearchBuilderGroupService } from '../../search-builder-group/search-builder-group.service';\nimport { BaseSearchComponent } from '../base-search.component';\nexport class SearchTextComponent extends BaseSearchComponent implements OnInit {\n\n  value: string;\n  type: string = 'text';\n  label: string;\n  placeholder: string = 'Enter text';\n/**\n * @return {?}\n */\nngOnInit(): void {\n\n    // set initial value if there is one\n    if (this.context.value) {\n      this.value = this.context.value;\n    }\n\n    // if there are no configuration options we can stop here\n    if (!this.context.config) {\n      return;\n    }\n\n    // if there is placeholder property then use it\n    if (this.context.config.placeholder) {\n      this.placeholder = this.context.config.placeholder;\n    }\n\n    // if there is label property then use it\n    if (this.context.config.label) {\n      this.label = this.context.config.label;\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'ux-search-text',\n  template: `\n    <label class=\"form-label\" *ngIf=\"label\">{{ label }}</label>\n    <input [placeholder]=\"placeholder\" [(ngModel)]=\"value\" (ngModelChange)=\"setValue($event)\" class=\"form-control\">\n  `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction SearchTextComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nSearchTextComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSearchTextComponent.ctorParameters;\n/** @type {?} */\nSearchTextComponent.prototype.value;\n/** @type {?} */\nSearchTextComponent.prototype.type;\n/** @type {?} */\nSearchTextComponent.prototype.label;\n/** @type {?} */\nSearchTextComponent.prototype.placeholder;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Input, EventEmitter, Output, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs/Subscription';\nimport { SearchBuilderService } from './search-builder.service';\nimport { SearchBuilderQuery } from './interfaces/query.interface';\nimport { SearchBuilderComponentDefinition } from './interfaces/component-definition.interface';\nimport { SearchTextComponent } from './search-components/search-text/search-text.component';\nexport class SearchBuilderComponent implements OnDestroy {\n/**\n * @param {?} components\n * @return {?}\n */\nset components(components: SearchBuilderComponentDefinition[]) {\n    this._searchBuilderService.registerComponents(components);\n  }\n/**\n * @param {?} value\n * @return {?}\n */\nset query(value: SearchBuilderQuery) {\n    this._searchBuilderService.setQuery(value);\n  }\n/**\n * @return {?}\n */\nget query() {\n    return this._searchBuilderService.getQuery();\n  }\n\n   queryChange: EventEmitter<SearchBuilderQuery> = new EventEmitter<SearchBuilderQuery>();\nprivate _subscription: Subscription;\n/**\n * Register the default search builder components\n * @param {?} _searchBuilderService\n */\nconstructor(private _searchBuilderService: SearchBuilderService) {\n\n    // add the default components\n    _searchBuilderService.registerComponent('text', SearchTextComponent);\n\n    // watch for any query changes\n    this._subscription = _searchBuilderService.queryChange.subscribe(query => this.queryChange.emit(query));\n  }\n/**\n * @return {?}\n */\nngOnDestroy(): void {\n    this._subscription.unsubscribe();\n  }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'ux-search-builder',\n  template: `\n    <ng-content></ng-content>\n  `,\n  providers: [SearchBuilderService]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: SearchBuilderService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'components': [{ type: Input },],\n'query': [{ type: Input },],\n'queryChange': [{ type: Output },],\n};\n}\n\nfunction SearchBuilderComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nSearchBuilderComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSearchBuilderComponent.ctorParameters;\n/** @type {?} */\nSearchBuilderComponent.propDecorators;\n/** @type {?} */\nSearchBuilderComponent.prototype.queryChange;\n/** @type {?} */\nSearchBuilderComponent.prototype._subscription;\n/** @type {?} */\nSearchBuilderComponent.prototype._searchBuilderService;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { SearchBuilderComponent } from './search-builder.component';\nimport { SearchBuilderGroupComponent } from './search-builder-group/search-builder-group.component';\nimport { SearchTextComponent } from './search-components/search-text/search-text.component';\nimport { SearchBuilderOutletDirective } from './search-builder-outlet/search-builder-outlet.directive';\nimport { BaseSearchComponent } from './search-components/base-search.component';\nexport class SearchBuilderModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  imports: [\n    CommonModule,\n    FormsModule\n  ],\n  exports: [\n    SearchBuilderComponent,\n    SearchBuilderGroupComponent,\n    BaseSearchComponent\n  ],\n  declarations: [\n    SearchBuilderComponent,\n    SearchBuilderGroupComponent,\n    SearchTextComponent,\n    SearchBuilderOutletDirective,\n    BaseSearchComponent\n  ],\n  entryComponents: [SearchTextComponent]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction SearchBuilderModule_tsickle_Closure_declarations() {\n/** @type {?} */\nSearchBuilderModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSearchBuilderModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","\nexport class TypeaheadOptionEvent {\n/**\n * @param {?} option\n */\nconstructor(public option: any) {}\n}\n\nfunction TypeaheadOptionEvent_tsickle_Closure_declarations() {\n/** @type {?} */\nTypeaheadOptionEvent.prototype.option;\n}\n","import { TypeaheadComponent } from './index';\nimport { Injectable } from '@angular/core';\nexport class TypeaheadKeyService {\nconstructor() { }\n/**\n * @param {?} event\n * @param {?} typeahead\n * @return {?}\n */\nhandleKey(event: KeyboardEvent, typeahead: TypeaheadComponent) {\n        if (typeahead) {\n            switch (event.key) {\n                case 'ArrowUp':\n                case 'Up':\n                    if (!typeahead.open) {\n                        typeahead.open = true;\n                    } else {\n                        typeahead.moveHighlight(-1);\n                    }\n                    event.preventDefault();\n                    break;\n                case 'ArrowDown':\n                case 'Down':\n                    if (!typeahead.open) {\n                        typeahead.open = true;\n                    } else {\n                        typeahead.moveHighlight(1);\n                    }\n                    event.preventDefault();\n                    break;\n                case 'Escape':\n                case 'Esc':\n                    typeahead.open = false;\n                    break;\n            }\n        }\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction TypeaheadKeyService_tsickle_Closure_declarations() {\n/** @type {?} */\nTypeaheadKeyService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTypeaheadKeyService.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { InfiniteScrollLoadFunction } from '../../directives/infinite-scroll/index';\nimport { TypeaheadOptionEvent } from './typeahead-event';\nimport {\n    Component,\n    ElementRef,\n    EventEmitter,\n    Input,\n    OnChanges,\n    OnInit,\n    Output,\n    SimpleChanges,\n    TemplateRef,\n    ViewChild,\n    AfterViewInit,\n    ChangeDetectorRef\n} from '@angular/core';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { Observable } from 'rxjs/Observable';\nexport class TypeaheadComponent implements AfterViewInit, OnChanges {\n\n     options: any[] | InfiniteScrollLoadFunction;\n     filter: string;\nprivate _open: boolean = false;\n/**\n * @return {?}\n */\nget open() {\n        return this._open;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset open(value: boolean) {\n        const /** @type {?} */ originalValue = this._open;\n        this._open = value;\n        if (value !== originalValue) {\n            this.openChange.emit(value);\n            if (value) {\n                this.initOptions();\n            }\n        }\n    }\n\n     openChange = new EventEmitter<boolean>();\n\n     display: (option: any) => string | string;\n     key: (option: any) => string | string;\n     disabledOptions: any[];\n     dropDirection: 'up' | 'down' = 'down';\n     maxHeight: string = '250px';\n     openOnFilterChange: boolean = true;\n     pageSize: number = 20;\n     selectFirst: boolean = true;\n\n     loadingTemplate: TemplateRef<any>;\n     optionTemplate: TemplateRef<any>;\n     noOptionsTemplate: TemplateRef<any>;\n\n     optionSelected = new EventEmitter<TypeaheadOptionEvent>();\nprivate _highlighted = new BehaviorSubject<any>(null);\n/**\n * @return {?}\n */\nget highlighted(): any {\n        return this._highlighted.getValue();\n    }\nprivate _defaultLoadingTemplate: TemplateRef<any>;\nprivate _defaultOptionTemplate: TemplateRef<any>;\nprivate _defaultNoOptionsTemplate: TemplateRef<any>;\n\n    loadOptionsCallback: InfiniteScrollLoadFunction;\n    visibleOptions: any[] = [];\n    loading = false;\n\n    optionApi: TypeaheadOptionApi = {\n        getKey: this.getKey.bind(this),\n        getDisplay: this.getDisplay.bind(this),\n        getDisplayHtml: this.getDisplayHtml.bind(this)\n    };\n/**\n * @param {?} typeaheadElement\n * @param {?} cdRef\n */\nconstructor(public typeaheadElement: ElementRef,\nprivate cdRef: ChangeDetectorRef) {\n\n        this.loadOptionsCallback = (pageNum: number, pageSize: number, filter: any) => {\n            if (typeof this.options === 'function') {\n                return this.options(pageNum, pageSize, filter);\n            }\n            return null;\n        };\n    }\n/**\n * @return {?}\n */\nngAfterViewInit() {\n        // Attach default loading template\n        if (!this.loadingTemplate) {\n            this.loadingTemplate = this._defaultLoadingTemplate;\n        }\n\n        // Attach default option template\n        if (!this.optionTemplate) {\n            this.optionTemplate = this._defaultOptionTemplate;\n        }\n\n        // Attach default \"no results\" template\n        if (!this.noOptionsTemplate) {\n            this.noOptionsTemplate = this._defaultNoOptionsTemplate;\n        }\n\n        this.cdRef.detectChanges();\n    }\n/**\n * @param {?} changes\n * @return {?}\n */\nngOnChanges(changes: SimpleChanges) {\n        // Open the dropdown if the filter value updates\n        if (changes.filter) {\n            if (this.openOnFilterChange && changes.filter.currentValue && changes.filter.currentValue.length > 0) {\n                this.open = true;\n            }\n        }\n\n        // Re-filter visibleOptions\n        this.updateOptions();\n    }\n/**\n * @param {?} event\n * @return {?}\n */\noptionMousedownHandler(event: MouseEvent) {\n        // Workaround to prevent focus changing when an option is clicked\n        event.preventDefault();\n    }\n/**\n * @param {?} event\n * @param {?} option\n * @return {?}\n */\noptionClickHandler(event: MouseEvent, option: any) {\n        this.select(option);\n    }\n/**\n * Returns the unique key value of the given option.\n * @param {?} option\n * @return {?}\n */\ngetKey(option: any): string {\n        if (typeof this.key === 'function') {\n            return this.key(option);\n        }\n        if (typeof this.key === 'string' && option && option.hasOwnProperty(this.key)) {\n            return option[ /** @type {?} */((<string>this.key))];\n        }\n        return this.getDisplay(option);\n    }\n/**\n * Returns the display value of the given option.\n * @param {?} option\n * @return {?}\n */\ngetDisplay(option: any): string {\n        if (typeof this.display === 'function') {\n            return this.display(option);\n        }\n        if (typeof this.display === 'string' && option && option.hasOwnProperty(this.display)) {\n            return option[ /** @type {?} */((<string>this.display))];\n        }\n        return option;\n    }\n/**\n * Returns the display value of the given option with HTML markup added to highlight the part which matches the current filter value.\n * @param {?} option\n * @return {?}\n */\ngetDisplayHtml(option: any) {\n        let /** @type {?} */ displayText;\n        if (typeof option === 'string') {\n            displayText = this.getDisplay(option).replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;');\n        } else {\n            displayText = this.getDisplay(option.name).replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;');\n        }\n        let /** @type {?} */ displayHtml = displayText;\n        if (this.filter) {\n            const /** @type {?} */ length = this.filter.length;\n            const /** @type {?} */ matchIndex = displayText.toLowerCase().indexOf(this.filter.toLowerCase());\n            if (matchIndex >= 0) {\n                var /** @type {?} */ highlight = `<span class=\"ux-filter-match\">${displayText.substr(matchIndex, length)}</span>`;\n                displayHtml = displayText.substr(0, matchIndex) + highlight + displayText.substr(matchIndex + length);\n            }\n        }\n        return displayHtml;\n    }\n/**\n * Returns true if the infinite scroll component should load\n * @return {?}\n */\nisInfiniteScroll() {\n        return typeof this.options === 'function';\n    }\n/**\n * Selects the given option, emitting the optionSelected event and closing the dropdown.\n * @param {?} option\n * @return {?}\n */\nselect(option: any) {\n        if (!this.isDisabled(option)) {\n            this.optionSelected.emit(new TypeaheadOptionEvent(option));\n            this._highlighted.next(null);\n            this.open = false;\n        }\n    }\n/**\n * Returns true if the given option is part of the disabledOptions array.\n * @param {?} option\n * @return {?}\n */\nisDisabled(option: any): boolean {\n        if (this.disabledOptions) {\n            const /** @type {?} */ optionKey = this.getKey(option);\n            const /** @type {?} */ result = this.disabledOptions.find((selectedOption) => {\n                return this.getKey(selectedOption) === optionKey;\n            });\n            return result !== undefined;\n        }\n        return false;\n    }\n/**\n * Set the given option as the current highlighted option, available in the highlightedOption parameter.\n * @param {?} option\n * @return {?}\n */\nhighlight(option: any) {\n        if (!this.isDisabled(option)) {\n            this._highlighted.next(option);\n        }\n    }\n/**\n * Increment or decrement the highlighted option in the list. Disabled options are skipped.\n * @param {?} d Value to be added to the index of the highlighted option, i.e. -1 to move backwards, +1 to move forwards.\n * @return {?}\n */\nmoveHighlight(d: number): any {\n        const /** @type {?} */ highlightIndex = this.indexOfVisibleOption(this.highlighted);\n        let /** @type {?} */ newIndex = highlightIndex;\n        let /** @type {?} */ disabled = true;\n        let /** @type {?} */ inBounds = true;\n        do {\n            newIndex = newIndex + d;\n            inBounds = (newIndex >= 0 && newIndex < this.visibleOptions.length);\n            disabled = inBounds && this.isDisabled(this.visibleOptions[newIndex]);\n        }\n        while (inBounds && disabled);\n\n        if (!disabled && inBounds) {\n            this._highlighted.next(this.visibleOptions[newIndex]);\n        }\n\n        return this.highlighted;\n    }\n/**\n * Returns true if the given option is the highlighted option.\n * @param {?} option\n * @return {?}\n */\nisHighlighted(option: any): boolean {\n        return this.getKey(option) === this.getKey(this.highlighted);\n    }\n/**\n * Set up the options before the dropdown is displayed.\n * @return {?}\n */\ninitOptions() {\n        // Clear previous highlight\n        this._highlighted.next(null);\n        if (this.selectFirst) {\n            // This will highlight the first non-disabled option.\n            this.moveHighlight(1);\n        }\n    }\n/**\n * Update the visibleOptions array with the current filter.\n * @return {?}\n */\nupdateOptions() {\n        if (typeof this.options === 'object') {\n            const /** @type {?} */ normalisedInput = (this.filter || '').toLowerCase();\n            this.visibleOptions = this.options.filter((option) => {\n                return this.getDisplay(option).toLowerCase().indexOf(normalisedInput) >= 0;\n            });\n        }\n\n        this.initOptions();\n    }\n/**\n * Return the index of the given option in the visibleOptions array. Returns -1 if the option is not currently visible.\n * @param {?} option\n * @return {?}\n */\nprivate indexOfVisibleOption(option: any): number {\n        if (option) {\n            const /** @type {?} */ optionKey = this.getKey(option);\n            return this.visibleOptions.findIndex((el) => {\n                return this.getKey(el) === optionKey;\n            });\n        }\n\n        return -1;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-typeahead',\n    template: `\n      <div class=\"ux-typeahead-options\"\n          [uxInfiniteScroll]=\"loadOptionsCallback\"\n          [(collection)]=\"visibleOptions\"\n          [enabled]=\"isInfiniteScroll()\"\n          [filter]=\"filter\"\n          [loadOnScroll]=\"true\"\n          [pageSize]=\"pageSize\"\n          [scrollElement]=\"typeaheadElement\"\n          (loading)=\"loading = true\"\n          (loaded)=\"loading = false\">\n\n          <ol *ngIf=\"visibleOptions.length > 0\">\n              <li *ngFor=\"let option of visibleOptions; let i = index\"\n                  [class.disabled]=\"isDisabled(option)\"\n                  [class.highlighted]=\"isHighlighted(option)\"\n                  [uxScrollIntoViewIf]=\"isHighlighted(option)\"\n                  [scrollParent]=\"typeaheadElement.nativeElement\"\n                  (mousedown)=\"optionMousedownHandler($event)\"\n                  (click)=\"optionClickHandler($event, option)\"\n                  (mouseover)=\"highlight(option)\">\n\n                  <ng-container [ngTemplateOutlet]=\"optionTemplate\"\n                      [ngTemplateOutletContext]=\"{option: option, api: optionApi}\">\n                  </ng-container>\n\n              </li>\n          </ol>\n\n          <div *uxInfiniteScrollLoading>\n              <ng-container [ngTemplateOutlet]=\"loadingTemplate\">\n              </ng-container>\n          </div>\n\n      </div>\n      <div *ngIf=\"visibleOptions.length === 0 && !loading\">\n          <ng-container [ngTemplateOutlet]=\"noOptionsTemplate\">\n          </ng-container>\n      </div>\n\n      <ng-template #defaultLoadingTemplate>\n          <div class=\"ux-typeahead-loading\">\n              <div class=\"spinner spinner-accent spinner-bounce-middle\"></div>\n              <div>Loading...</div>\n          </div>\n      </ng-template>\n\n      <ng-template #defaultOptionTemplate let-option=\"option\" let-api=\"api\">\n          <span class=\"ux-typeahead-option\" [innerHtml]=\"api.getDisplayHtml(option)\"></span>\n      </ng-template>\n\n      <ng-template #defaultNoOptionsTemplate>\n          <span class=\"ux-typeahead-no-options\">No results</span>\n      </ng-template>\n    `,\n    host: {\n        '[class.open]': 'open',\n        '[class.drop-up]': 'dropDirection === \"up\"',\n        '[style.maxHeight]': 'maxHeight'\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: ChangeDetectorRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'options': [{ type: Input },],\n'filter': [{ type: Input },],\n'open': [{ type: Input, args: ['open', ] },],\n'openChange': [{ type: Output },],\n'display': [{ type: Input },],\n'key': [{ type: Input },],\n'disabledOptions': [{ type: Input },],\n'dropDirection': [{ type: Input },],\n'maxHeight': [{ type: Input },],\n'openOnFilterChange': [{ type: Input },],\n'pageSize': [{ type: Input },],\n'selectFirst': [{ type: Input },],\n'loadingTemplate': [{ type: Input },],\n'optionTemplate': [{ type: Input },],\n'noOptionsTemplate': [{ type: Input },],\n'optionSelected': [{ type: Output },],\n'highlighted': [{ type: Output },],\n'_defaultLoadingTemplate': [{ type: ViewChild, args: ['defaultLoadingTemplate', ] },],\n'_defaultOptionTemplate': [{ type: ViewChild, args: ['defaultOptionTemplate', ] },],\n'_defaultNoOptionsTemplate': [{ type: ViewChild, args: ['defaultNoOptionsTemplate', ] },],\n};\n}\n\nfunction TypeaheadComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nTypeaheadComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTypeaheadComponent.ctorParameters;\n/** @type {?} */\nTypeaheadComponent.propDecorators;\n/** @type {?} */\nTypeaheadComponent.prototype.options;\n/** @type {?} */\nTypeaheadComponent.prototype.filter;\n/** @type {?} */\nTypeaheadComponent.prototype._open;\n/** @type {?} */\nTypeaheadComponent.prototype.openChange;\n/** @type {?} */\nTypeaheadComponent.prototype.display;\n/** @type {?} */\nTypeaheadComponent.prototype.key;\n/** @type {?} */\nTypeaheadComponent.prototype.disabledOptions;\n/** @type {?} */\nTypeaheadComponent.prototype.dropDirection;\n/** @type {?} */\nTypeaheadComponent.prototype.maxHeight;\n/** @type {?} */\nTypeaheadComponent.prototype.openOnFilterChange;\n/** @type {?} */\nTypeaheadComponent.prototype.pageSize;\n/** @type {?} */\nTypeaheadComponent.prototype.selectFirst;\n/** @type {?} */\nTypeaheadComponent.prototype.loadingTemplate;\n/** @type {?} */\nTypeaheadComponent.prototype.optionTemplate;\n/** @type {?} */\nTypeaheadComponent.prototype.noOptionsTemplate;\n/** @type {?} */\nTypeaheadComponent.prototype.optionSelected;\n/** @type {?} */\nTypeaheadComponent.prototype._highlighted;\n/** @type {?} */\nTypeaheadComponent.prototype._defaultLoadingTemplate;\n/** @type {?} */\nTypeaheadComponent.prototype._defaultOptionTemplate;\n/** @type {?} */\nTypeaheadComponent.prototype._defaultNoOptionsTemplate;\n/** @type {?} */\nTypeaheadComponent.prototype.loadOptionsCallback;\n/** @type {?} */\nTypeaheadComponent.prototype.visibleOptions;\n/** @type {?} */\nTypeaheadComponent.prototype.loading;\n/** @type {?} */\nTypeaheadComponent.prototype.optionApi;\n/** @type {?} */\nTypeaheadComponent.prototype.typeaheadElement;\n/** @type {?} */\nTypeaheadComponent.prototype.cdRef;\n}\n\n\n/**\n * The API available to option templates.\n */\nexport interface TypeaheadOptionApi {\n\n    /**\n     * Returns the unique key value of the given option.\n     */\n    getKey(option: any): string;\n\n    /**\n     * Returns the display value of the given option.\n     */\n    getDisplay(option: any): string;\n\n    /**\n     * Returns the display value of the given option with HTML markup added to highlight the part which matches the current filter value. Override the ux-filter-match class in CSS to modify the default appearance.\n     */\n    getDisplayHtml(option: any): string;\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ElementRef, Input, Output, Renderer2, TemplateRef, ViewContainerRef } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { Subject } from 'rxjs/Subject';\nexport class InfiniteScrollLoadButtonDirective {\n/**\n * @return {?}\n */\nget visible() {\n        return this._visible;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset visible(value: boolean) {\n        if (value !== this._visible) {\n            if (value) {\n                this._viewContainer.createEmbeddedView(this._template);\n\n                // Template content follows the elementRef, which is a comment.\n                const /** @type {?} */ clickTarget = this.getNextElementSibling(this._template.elementRef.nativeElement);\n                this._renderer.listen(clickTarget, 'click', this.onClick.bind(this));\n            } else {\n                this._viewContainer.clear();\n            }\n        }\n\n        this._visible = value;\n    }\n\n     load: Observable<Event>;\nprivate _visible: boolean = false;\nprivate _load = new Subject();\n/**\n * @param {?} _element\n * @param {?} _template\n * @param {?} _viewContainer\n * @param {?} _renderer\n */\nconstructor(\nprivate _element: ElementRef,\nprivate _template: TemplateRef<any>,\nprivate _viewContainer: ViewContainerRef,\nprivate _renderer: Renderer2) {\n\n        this.load = this._load.asObservable() as Observable<Event>;\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nprivate onClick(event: MouseEvent) {\n        this._load.next(event);\n    }\n/**\n * @param {?} element\n * @return {?}\n */\nprivate getNextElementSibling(element: any): Element {\n        var /** @type {?} */ next = element;\n        while (next = next.nextSibling) {\n            if (next.nodeType === 1) {\n                return next;\n            }\n        }\n        return null;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: '[uxInfiniteScrollLoadButton]'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: TemplateRef, },\n{type: ViewContainerRef, },\n{type: Renderer2, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'visible': [{ type: Input, args: ['uxInfiniteScrollLoadButton', ] },],\n'load': [{ type: Output },],\n};\n}\n\nfunction InfiniteScrollLoadButtonDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nInfiniteScrollLoadButtonDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nInfiniteScrollLoadButtonDirective.ctorParameters;\n/** @type {?} */\nInfiniteScrollLoadButtonDirective.propDecorators;\n/** @type {?} */\nInfiniteScrollLoadButtonDirective.prototype.load;\n/** @type {?} */\nInfiniteScrollLoadButtonDirective.prototype._visible;\n/** @type {?} */\nInfiniteScrollLoadButtonDirective.prototype._load;\n/** @type {?} */\nInfiniteScrollLoadButtonDirective.prototype._element;\n/** @type {?} */\nInfiniteScrollLoadButtonDirective.prototype._template;\n/** @type {?} */\nInfiniteScrollLoadButtonDirective.prototype._viewContainer;\n/** @type {?} */\nInfiniteScrollLoadButtonDirective.prototype._renderer;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, Input, TemplateRef, ViewContainerRef } from '@angular/core';\nexport class InfiniteScrollLoadingDirective {\n/**\n * @return {?}\n */\nget visible() {\n        return this._visible;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset visible(value: boolean) {\n        if (value !== this._visible) {\n            if (value) {\n                this._viewContainer.createEmbeddedView(this._templateRef);\n            } else {\n                this._viewContainer.clear();\n            }\n        }\n        \n        this._visible = value;\n    }\nprivate _visible: boolean = false;\n/**\n * @param {?} _templateRef\n * @param {?} _viewContainer\n */\nconstructor(\nprivate _templateRef: TemplateRef<any>,\nprivate _viewContainer: ViewContainerRef) { }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: '[uxInfiniteScrollLoading]'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: TemplateRef, },\n{type: ViewContainerRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'visible': [{ type: Input, args: ['uxInfiniteScrollLoading', ] },],\n};\n}\n\nfunction InfiniteScrollLoadingDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nInfiniteScrollLoadingDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nInfiniteScrollLoadingDirective.ctorParameters;\n/** @type {?} */\nInfiniteScrollLoadingDirective.propDecorators;\n/** @type {?} */\nInfiniteScrollLoadingDirective.prototype._visible;\n/** @type {?} */\nInfiniteScrollLoadingDirective.prototype._templateRef;\n/** @type {?} */\nInfiniteScrollLoadingDirective.prototype._viewContainer;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { InfiniteScrollLoadButtonDirective } from './infinite-scroll-load-button.directive';\nimport { InfiniteScrollLoadingDirective } from './infinite-scroll-loading.directive';\nimport {\n    AfterContentInit,\n    ContentChildren,\n    Directive,\n    ElementRef,\n    EventEmitter,\n    Input,\n    OnChanges,\n    OnDestroy,\n    OnInit,\n    Output,\n    QueryList,\n    SimpleChanges\n} from '@angular/core';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { Observable } from 'rxjs/Observable';\nimport { Subject } from 'rxjs/Subject';\nimport { Subscription } from 'rxjs/Subscription';\nimport'rxjs/add/operator/auditTime';\nimport'rxjs/add/operator/combineLatest';\nimport'rxjs/add/operator/partition';\nexport class InfiniteScrollDirective implements OnInit, AfterContentInit, OnChanges, OnDestroy {\n\n     load: InfiniteScrollLoadFunction;\n\n     _collection: any[] = [];\n/**\n * @return {?}\n */\nget collection() {\n        return this._collection;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset collection(value: any[]) {\n        this.collectionChange.emit(value);\n        this._collection = value;\n    }\n\n     enabled: boolean = true;\n     filter: any;\n     loadOnInit: boolean = true;\n     loadOnScroll: boolean = true;\n     pageSize: number = 20;\n     scrollElement: ElementRef;\n\n     collectionChange = new EventEmitter<any[]>();\n     loadingEvent = new EventEmitter<InfiniteScrollLoadingEvent>();\n     loadedEvent = new EventEmitter<InfiniteScrollLoadedEvent>();\n     loadErrorEvent = new EventEmitter<InfiniteScrollLoadErrorEvent>();\nprivate _loadButtonQuery: QueryList<InfiniteScrollLoadButtonDirective>;\nprivate _loadingIndicatorQuery: QueryList<InfiniteScrollLoadingDirective>;\nprivate _nextPageNum = 0;\nprivate _domObserver: MutationObserver;\nprivate _scrollEventSub: Subscription;\nprivate _updateRequests = new Subject<InfiniteScrollRequest>();\nprivate _isLoading = new BehaviorSubject<boolean>(false);\nprivate _isExhausted = new BehaviorSubject<boolean>(false);\nprivate _loadButtonEnabled = new BehaviorSubject<boolean>(false);\nprivate _canLoadManually: Observable<boolean>;\nprivate _loadButtonSubscriptions: Subscription[] = [];\n/**\n * @param {?} _element\n */\nconstructor(private _element: ElementRef) {\n\n        this._canLoadManually = this._isLoading.combineLatest(this._isExhausted, this._loadButtonEnabled, (isLoading, isExhausted, loadButtonEnabled) => {\n            return !isLoading && !isExhausted && loadButtonEnabled;\n        });\n    }\n/**\n * @return {?}\n */\nngOnInit() {\n\n        if (!this.scrollElement) {\n            this.scrollElement = this._element;\n        }\n\n        this._loadButtonEnabled.next(!this.loadOnScroll);\n    }\n/**\n * @return {?}\n */\nngAfterContentInit() {\n\n        // There are two kinds of update requests: check and load.\n        // Check requests are throttled and will only cause an update if more data is required\n        // to fill the scrolling view, and it isn't already loading some.\n        // Load requests are not throttled and always request a page of data.\n        const /** @type {?} */ requests = this._updateRequests.partition((r) => r.check);\n        requests[0].auditTime(200).subscribe(this.doRequest.bind(this));\n        requests[1].subscribe(this.doRequest.bind(this));\n\n        if (this.enabled) {\n\n            // Subscribe to scroll events and DOM changes.\n            this.attachEventHandlers();\n        }\n\n        // Connect the Load More button visible state.\n        this._canLoadManually.subscribe((canLoad) => {\n            this._loadButtonQuery.forEach((loadButton) => {\n                loadButton.visible = canLoad;\n            });\n        });\n\n        // Connect the loading indicator visible state.\n        this._isLoading.subscribe((isLoading) => {\n            this._loadingIndicatorQuery.forEach((loading) => {\n                loading.visible = isLoading;\n            });\n        });\n\n        // Link the Load More button click event to trigger an update.\n        this.attachLoadButtonEvents();\n        this._loadButtonQuery.changes.subscribe((query) => {\n            this.attachLoadButtonEvents();\n        });\n\n        // Initial update.\n        if (this.loadOnInit) {\n            this.loadNextPage();\n        }\n    }\n/**\n * @param {?} changes\n * @return {?}\n */\nngOnChanges(changes: SimpleChanges) {\n\n        let /** @type {?} */ check = true;\n\n        if (changes.enabled && changes.enabled.currentValue !== changes.enabled.previousValue) {\n            if (changes.enabled.currentValue) {\n                this.attachEventHandlers();\n                this.reset();\n                check = false;\n            } else {\n                this.detachEventHandlers();\n            }\n        }\n\n        if (this.enabled) {\n\n            if (changes.filter && changes.filter.currentValue !== changes.filter.previousValue) {\n                this.reset();\n                check = false;\n            }\n\n            if (changes.loadOnScroll) {\n                this._loadButtonEnabled.next(!changes.loadOnScroll.currentValue);\n            }\n\n            if (changes.pageSize && changes.pageSize.currentValue !== changes.pageSize.previousValue) {\n                this.reset();\n                check = false;\n            }\n\n            this._updateRequests.next({\n                check: check,\n                pageNumber: this._nextPageNum,\n                pageSize: this.pageSize,\n                filter: this.filter\n            });\n        }\n    }\n/**\n * @return {?}\n */\nngOnDestroy() {\n        this.detachEventHandlers();\n    }\n/**\n * Request an additional page of data.\n * @return {?}\n */\nloadNextPage() {\n\n        if (!this.enabled) {\n            return;\n        }\n\n        this._updateRequests.next({\n            check: false,\n            pageNumber: this._nextPageNum,\n            pageSize: this.pageSize,\n            filter: this.filter\n        });\n    }\n/**\n * Request a check for whether an additional page of data is required. This is throttled.\n * @return {?}\n */\ncheck() {\n\n        if (!this.enabled) {\n            return;\n        }\n\n        this._updateRequests.next({\n            check: true,\n            pageNumber: this._nextPageNum,\n            pageSize: this.pageSize,\n            filter: this.filter\n        });\n    }\n/**\n * Clear the collection. Future requests will load from page 0.\n * @return {?}\n */\nreset() {\n\n        if (!this.enabled) {\n            return;\n        }\n\n        // Reset the page counter.\n        this._nextPageNum = 0;\n\n        // Clear the collection (without changing the reference).\n        if (this.collection) {\n            this.collection.length = 0;\n        }\n\n        // Reset the exhausted flag, allowing the Load More button to appear.\n        this._isExhausted.next(false);\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nprivate onScroll(event: Event) {\n        this.check();\n    }\n/**\n * @return {?}\n */\nprivate onDomChange() {\n        this.check();\n    }\n/**\n * Attach scroll event handler and DOM observer.\n * @return {?}\n */\nprivate attachEventHandlers() {\n\n        // Subscribe to the scroll event on the target element.\n        this._scrollEventSub = Observable.fromEvent(this.scrollElement.nativeElement, 'scroll')\n            .subscribe(this.onScroll.bind(this));\n\n        // Subscribe to child DOM changes. The main effect of this is to check whether even more data is\n        // required after the initial load.\n        this._domObserver = new MutationObserver(this.onDomChange.bind(this));\n        this._domObserver.observe(this.scrollElement.nativeElement, {\n            childList: true,\n            subtree: true\n        });\n    }\n/**\n * Detach scroll event handler and DOM observer.\n * @return {?}\n */\nprivate detachEventHandlers() {\n        if (this._scrollEventSub) {\n            this._scrollEventSub.unsubscribe();\n            this._scrollEventSub = null;\n        }\n\n        if (this._domObserver) {\n            this._domObserver.disconnect();\n            this._domObserver = null;\n        }\n    }\n/**\n * Remove any existing event subscriptions for the load button `load` event, then attach subscriptions\n * for any in the query.\n * @return {?}\n */\nprivate attachLoadButtonEvents() {\n        this._loadButtonSubscriptions.forEach((s) => s.unsubscribe());\n        this._loadButtonSubscriptions = this._loadButtonQuery.map((loadButton) => {\n            return loadButton.load.subscribe(this.loadNextPage.bind(this));\n        });\n    }\n/**\n * Conditionally loads a page into the collection based on directive state and request parameters.\n * @param {?} request\n * @return {?}\n */\nprivate doRequest(request: InfiniteScrollRequest) {\n\n        // Load a new page if the scroll position is beyond the threshhold and if the client code did not \n        // cancel.\n        if (this.needsData(request) && this.beginLoading(request)) {\n\n            // Invoke the callback load function, which returns a promose or plain data.\n            const /** @type {?} */ loadResult = this.load(request.pageNumber, request.pageSize, request.filter);\n\n            Promise.resolve(loadResult)\n                .then((newData) => {\n\n                    // Make sure that the parameters have not changed since the load started;\n                    // otherwise discard the results.\n                    if (request.filter === this.filter && request.pageSize === this.pageSize) {\n\n                        if (newData && newData.length) {\n                            Array.prototype.push.apply(this.collection, newData);\n                        }\n\n                        // Emit the loaded event\n                        this.endLoading(request, newData);\n                    }\n                })\n                .catch((reason) => {\n                    // Emit the loadError event\n                    this.endLoadingWithError(request, reason);\n                });\n        }\n    }\n/**\n * Returns true if the request should be fulfilled.\n * @param {?} request\n * @return {?}\n */\nprivate needsData(request: InfiniteScrollRequest): boolean {\n\n        if (!this.enabled) {\n            return false;\n        }\n\n        // Always load for a load request\n        if (!request.check) {\n            return true;\n        }\n\n        // Ignore a check request when the end of data has been detected, or if data is currently loading.\n        if (this._isExhausted.getValue() || this._isLoading.getValue()) {\n            return false;\n        }\n\n        // Load if the remaining scroll area is <= the element height.\n        if (this.scrollElement && this.loadOnScroll) {\n            const /** @type {?} */ element = /** @type {?} */(( <HTMLElement>this.scrollElement.nativeElement));\n            const /** @type {?} */ remainingScroll = element.scrollHeight - (element.scrollTop + element.clientHeight);\n            return remainingScroll <= element.clientHeight;\n        }\n\n        return false;\n    }\n/**\n * Updates state for the beginning of a load. Returns false if the `loading` event was cancelled.\n * @param {?} request\n * @return {?}\n */\nprivate beginLoading(request: InfiniteScrollRequest): boolean {\n\n        const /** @type {?} */ event = new InfiniteScrollLoadingEvent(request.pageNumber, request.pageSize, request.filter);\n        this.loadingEvent.emit(event);\n\n        this._isLoading.next(!event.defaultPrevented());\n\n        return !event.defaultPrevented();\n    }\n/**\n * Updates state from a successful load. Raises the `loaded` event.\n * @param {?} request\n * @param {?=} data\n * @return {?}\n */\nprivate endLoading(request: InfiniteScrollRequest, data?: any) {\n\n        this._isLoading.next(false);\n\n        const /** @type {?} */ isExhausted = !!(data && data.length < this.pageSize);\n        this._isExhausted.next(isExhausted);\n\n        this.loadedEvent.emit(new InfiniteScrollLoadedEvent(request.pageNumber, request.pageSize, request.filter, data, isExhausted));\n\n        this._nextPageNum += 1;\n    }\n/**\n * Updates state from a failed load. Raises the `loadError` event.\n * @param {?} request\n * @param {?} error\n * @return {?}\n */\nprivate endLoadingWithError(request: InfiniteScrollRequest, error: any) {\n\n        this._isLoading.next(false);\n\n        this.loadErrorEvent.emit(new InfiniteScrollLoadErrorEvent(request.pageNumber, request.pageSize, request.filter, error));\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: '[uxInfiniteScroll]',\n    exportAs: 'uxInfiniteScroll'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'load': [{ type: Input, args: ['uxInfiniteScroll', ] },],\n'_collection': [{ type: Input, args: ['collection', ] },],\n'enabled': [{ type: Input },],\n'filter': [{ type: Input },],\n'loadOnInit': [{ type: Input },],\n'loadOnScroll': [{ type: Input },],\n'pageSize': [{ type: Input },],\n'scrollElement': [{ type: Input },],\n'collectionChange': [{ type: Output },],\n'loadingEvent': [{ type: Output, args: ['loading', ] },],\n'loadedEvent': [{ type: Output, args: ['loaded', ] },],\n'loadErrorEvent': [{ type: Output, args: ['loadError', ] },],\n'_loadButtonQuery': [{ type: ContentChildren, args: [InfiniteScrollLoadButtonDirective, ] },],\n'_loadingIndicatorQuery': [{ type: ContentChildren, args: [InfiniteScrollLoadingDirective, ] },],\n};\n}\n\nfunction InfiniteScrollDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nInfiniteScrollDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nInfiniteScrollDirective.ctorParameters;\n/** @type {?} */\nInfiniteScrollDirective.propDecorators;\n/** @type {?} */\nInfiniteScrollDirective.prototype.load;\n/** @type {?} */\nInfiniteScrollDirective.prototype._collection;\n/** @type {?} */\nInfiniteScrollDirective.prototype.enabled;\n/** @type {?} */\nInfiniteScrollDirective.prototype.filter;\n/** @type {?} */\nInfiniteScrollDirective.prototype.loadOnInit;\n/** @type {?} */\nInfiniteScrollDirective.prototype.loadOnScroll;\n/** @type {?} */\nInfiniteScrollDirective.prototype.pageSize;\n/** @type {?} */\nInfiniteScrollDirective.prototype.scrollElement;\n/** @type {?} */\nInfiniteScrollDirective.prototype.collectionChange;\n/** @type {?} */\nInfiniteScrollDirective.prototype.loadingEvent;\n/** @type {?} */\nInfiniteScrollDirective.prototype.loadedEvent;\n/** @type {?} */\nInfiniteScrollDirective.prototype.loadErrorEvent;\n/** @type {?} */\nInfiniteScrollDirective.prototype._loadButtonQuery;\n/** @type {?} */\nInfiniteScrollDirective.prototype._loadingIndicatorQuery;\n/** @type {?} */\nInfiniteScrollDirective.prototype._nextPageNum;\n/** @type {?} */\nInfiniteScrollDirective.prototype._domObserver;\n/** @type {?} */\nInfiniteScrollDirective.prototype._scrollEventSub;\n/** @type {?} */\nInfiniteScrollDirective.prototype._updateRequests;\n/** @type {?} */\nInfiniteScrollDirective.prototype._isLoading;\n/** @type {?} */\nInfiniteScrollDirective.prototype._isExhausted;\n/** @type {?} */\nInfiniteScrollDirective.prototype._loadButtonEnabled;\n/** @type {?} */\nInfiniteScrollDirective.prototype._canLoadManually;\n/** @type {?} */\nInfiniteScrollDirective.prototype._loadButtonSubscriptions;\n/** @type {?} */\nInfiniteScrollDirective.prototype._element;\n}\n\n/**\n * The internal data associated with a load/check request.\n */\nclass InfiniteScrollRequest {\n    check: boolean;\n    pageNumber: number;\n    pageSize: number;\n    filter: any;\n}\n\nfunction InfiniteScrollRequest_tsickle_Closure_declarations() {\n/** @type {?} */\nInfiniteScrollRequest.prototype.check;\n/** @type {?} */\nInfiniteScrollRequest.prototype.pageNumber;\n/** @type {?} */\nInfiniteScrollRequest.prototype.pageSize;\n/** @type {?} */\nInfiniteScrollRequest.prototype.filter;\n}\n\n\nexport type InfiniteScrollLoadFunction = (pageNum: number, pageSize: number, filter: any) => any | Promise<any>;\n/**\n * Event raised before the `loading` function is called.\n */\nexport class InfiniteScrollLoadingEvent {\nprivate _defaultPrevented = false;\n/**\n * @param {?} pageNumber\n * @param {?} pageSize\n * @param {?} filter\n */\nconstructor(\npublic pageNumber: number,\npublic pageSize: number,\npublic filter: any) { }\n/**\n * Prevents the default behaviour of the `loading` event (loading function will not be called).\n * @return {?}\n */\npreventDefault() {\n        this._defaultPrevented = true;\n    }\n/**\n * @return {?}\n */\ndefaultPrevented(): boolean {\n        return this._defaultPrevented;\n    }\n}\n\nfunction InfiniteScrollLoadingEvent_tsickle_Closure_declarations() {\n/** @type {?} */\nInfiniteScrollLoadingEvent.prototype._defaultPrevented;\n/**\n * The index of the requested page, starting from 0.\n * @type {?}\n */\nInfiniteScrollLoadingEvent.prototype.pageNumber;\n/**\n * The number of items requested.\n * @type {?}\n */\nInfiniteScrollLoadingEvent.prototype.pageSize;\n/**\n * The filter details as provided via the `filter` binding.\n * @type {?}\n */\nInfiniteScrollLoadingEvent.prototype.filter;\n}\n\n/**\n * Event raised when the loading function result has been resolved and added to the collection.\n */\nexport class InfiniteScrollLoadedEvent {\n/**\n * @param {?} pageNumber\n * @param {?} pageSize\n * @param {?} filter\n * @param {?} data\n * @param {?} exhausted\n */\nconstructor(\npublic pageNumber: number,\npublic pageSize: number,\npublic filter: any,\npublic data: any,\npublic exhausted: boolean) { }\n}\n\nfunction InfiniteScrollLoadedEvent_tsickle_Closure_declarations() {\n/**\n * The index of the requested page, starting from 0.\n * @type {?}\n */\nInfiniteScrollLoadedEvent.prototype.pageNumber;\n/**\n * The number of items requested.\n * @type {?}\n */\nInfiniteScrollLoadedEvent.prototype.pageSize;\n/**\n * The filter details as provided via the `filter` binding.\n * @type {?}\n */\nInfiniteScrollLoadedEvent.prototype.filter;\n/**\n * The result of the promise returned from the loading function.\n * @type {?}\n */\nInfiniteScrollLoadedEvent.prototype.data;\n/**\n * True if the data is considered exhausted (number of items returned less than `pageSize`).\n * @type {?}\n */\nInfiniteScrollLoadedEvent.prototype.exhausted;\n}\n\n/**\n * Event raised if the loading function returns a rejected promise.\n */\nexport class InfiniteScrollLoadErrorEvent {\n/**\n * @param {?} pageNumber\n * @param {?} pageSize\n * @param {?} filter\n * @param {?} error\n */\nconstructor(\npublic pageNumber: number,\npublic pageSize: number,\npublic filter: any,\npublic error: any) { }\n}\n\nfunction InfiniteScrollLoadErrorEvent_tsickle_Closure_declarations() {\n/**\n * The index of the requested page, starting from 0.\n * @type {?}\n */\nInfiniteScrollLoadErrorEvent.prototype.pageNumber;\n/**\n * The number of items requested.\n * @type {?}\n */\nInfiniteScrollLoadErrorEvent.prototype.pageSize;\n/**\n * The filter details as provided via the `filter` binding.\n * @type {?}\n */\nInfiniteScrollLoadErrorEvent.prototype.filter;\n/**\n * The object provided when rejecting the promise.\n * @type {?}\n */\nInfiniteScrollLoadErrorEvent.prototype.error;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { InfiniteScrollLoadButtonDirective } from './infinite-scroll-load-button.directive';\nimport { InfiniteScrollLoadingDirective } from './infinite-scroll-loading.directive';\nimport { InfiniteScrollDirective } from './infinite-scroll.directive';\nimport { NgModule } from '@angular/core';\nexport class InfiniteScrollModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [],\n    exports: [\n        InfiniteScrollDirective,\n        InfiniteScrollLoadButtonDirective,\n        InfiniteScrollLoadingDirective\n    ],\n    declarations: [\n        InfiniteScrollDirective,\n        InfiniteScrollLoadButtonDirective,\n        InfiniteScrollLoadingDirective\n    ],\n    providers: [],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction InfiniteScrollModule_tsickle_Closure_declarations() {\n/** @type {?} */\nInfiniteScrollModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nInfiniteScrollModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable, Inject } from '@angular/core';\nexport class ScrollIntoViewService {\n/**\n * @param {?} elem\n * @param {?} scrollParent\n * @return {?}\n */\nscrollIntoView(elem: HTMLElement, scrollParent: HTMLElement) {\n        const /** @type {?} */ offsetTop = (elem.getBoundingClientRect().top + scrollParent.scrollTop) - scrollParent.getBoundingClientRect().top;\n        if (offsetTop < scrollParent.scrollTop) {\n            scrollParent.scrollTop = offsetTop;\n        } else {\n            const /** @type {?} */ offsetBottom = offsetTop + elem.offsetHeight;\n            if (offsetBottom > (scrollParent.scrollTop + scrollParent.clientHeight)) {\n                scrollParent.scrollTop = offsetBottom - scrollParent.clientHeight;\n            }\n        }\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ScrollIntoViewService_tsickle_Closure_declarations() {\n/** @type {?} */\nScrollIntoViewService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nScrollIntoViewService.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { ScrollIntoViewService } from './scroll-into-view.service';\nimport { Directive, ElementRef, Input, OnChanges, SimpleChanges } from '@angular/core';\nexport class ScrollIntoViewIfDirective implements OnChanges {\n\n     condition = false;\n     scrollParent: HTMLElement;\n/**\n * @param {?} element\n * @param {?} scrollIntoViewService\n */\nconstructor(private element: ElementRef,\nprivate scrollIntoViewService: ScrollIntoViewService) {}\n/**\n * @param {?} changes\n * @return {?}\n */\nngOnChanges(changes: SimpleChanges) {\n        if (this.condition) {\n            setTimeout(() => {\n                this.scrollIntoViewService.scrollIntoView(this.element.nativeElement, this.scrollParent);\n            });\n        }\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{ selector: '[uxScrollIntoViewIf]' }, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: ScrollIntoViewService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'condition': [{ type: Input, args: ['uxScrollIntoViewIf', ] },],\n'scrollParent': [{ type: Input },],\n};\n}\n\nfunction ScrollIntoViewIfDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nScrollIntoViewIfDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nScrollIntoViewIfDirective.ctorParameters;\n/** @type {?} */\nScrollIntoViewIfDirective.propDecorators;\n/** @type {?} */\nScrollIntoViewIfDirective.prototype.condition;\n/** @type {?} */\nScrollIntoViewIfDirective.prototype.scrollParent;\n/** @type {?} */\nScrollIntoViewIfDirective.prototype.element;\n/** @type {?} */\nScrollIntoViewIfDirective.prototype.scrollIntoViewService;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\n\nimport { ScrollIntoViewIfDirective } from './scroll-into-view-if.directive';\nimport { ScrollIntoViewService } from './scroll-into-view.service';\nexport class ScrollIntoViewIfModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [],\n    exports: [ScrollIntoViewIfDirective],\n    declarations: [ScrollIntoViewIfDirective],\n    providers: [ScrollIntoViewService],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ScrollIntoViewIfModule_tsickle_Closure_declarations() {\n/** @type {?} */\nScrollIntoViewIfModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nScrollIntoViewIfModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { InfiniteScrollModule } from '../../directives/infinite-scroll/index';\nimport { ScrollIntoViewIfModule } from '../../directives/scroll-into-view-if/index';\nimport { TypeaheadKeyService } from './typeahead-key.service';\nimport { TypeaheadComponent } from './typeahead.component';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nexport class TypeaheadModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        CommonModule,\n        InfiniteScrollModule,\n        ScrollIntoViewIfModule\n    ],\n    exports: [TypeaheadComponent],\n    declarations: [TypeaheadComponent],\n    providers: [TypeaheadKeyService],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction TypeaheadModule_tsickle_Closure_declarations() {\n/** @type {?} */\nTypeaheadModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTypeaheadModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { InfiniteScrollLoadFunction } from '../../directives/infinite-scroll/index';\nimport { TypeaheadComponent, TypeaheadKeyService, TypeaheadOptionEvent } from '../typeahead/index';\nimport { Component, ElementRef, EventEmitter, forwardRef, Inject, Input, OnChanges, OnInit, Output, SimpleChanges, TemplateRef, ViewChild } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { DOCUMENT } from '@angular/platform-browser';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { Observable } from 'rxjs/Observable';\n\nexport const /** @type {?} */ SELECT_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => SelectComponent),\n    multi: true\n};\nexport class SelectComponent implements OnInit, OnChanges, ControlValueAccessor {\nprivate _value: any;\n/**\n * @return {?}\n */\nget value() {\n        return this._value;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset value(value: any) {\n        this._value = value;\n        this.valueChange.emit(value);\n        this.propagateChange(value);\n    }\n\n     valueChange = new EventEmitter<any>();\nprivate _input = new BehaviorSubject<string>('');\n/**\n * @return {?}\n */\nget input() {\n        return this._input.getValue();\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset input(value: string) {\n        this._input.next(value);\n        this.inputChange.emit(value);\n    }\n\n     inputChange = new EventEmitter<string>();\nprivate _dropdownOpen: boolean = false;\n/**\n * @return {?}\n */\nget dropdownOpen() {\n        return this._dropdownOpen;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset dropdownOpen(value: boolean) {\n        this._dropdownOpen = value;\n        this.dropdownOpenChange.emit(value);\n    }\n\n     dropdownOpenChange = new EventEmitter<boolean>();\n\n     options: any[] | InfiniteScrollLoadFunction;\n     display: (option: any) => string | string;\n     key: (option: any) => string | string;\n     allowNull: boolean = false;\n     disabled: boolean = false;\n     dropDirection: 'up' | 'down' = 'down';\n     maxHeight: string = '250px';\n     multiple: boolean = false;\n     pageSize: number = 20;\n     placeholder: string;\n\n     loadingTemplate: TemplateRef<any>;\n     noOptionsTemplate: TemplateRef<any>;\n     optionTemplate: TemplateRef<any>;\n\n     singleInput: ElementRef;\n     multipleTypeahead: TypeaheadComponent;\n     singleTypeahead: TypeaheadComponent;\n\n    filter: Observable<string>;\n\n    propagateChange = (_: any) => { };\n/**\n * @param {?} _element\n * @param {?} _document\n * @param {?} _typeaheadKeyService\n */\nconstructor(\nprivate _element: ElementRef,\nprivate _document: HTMLDocument,\nprivate _typeaheadKeyService: TypeaheadKeyService) { }\n/**\n * @return {?}\n */\nngOnInit() {\n\n        // Changes to the input field\n        this._input.subscribe((next) => {\n            if (!this.multiple && next !== this.getDisplay(this.value)) {\n                if (this.allowNull) {\n                    this.value = null;\n                }\n            }\n        });\n\n        // Set up filter from input\n        this.filter = this._input\n            .map((input) => {\n                if (!this.multiple && input === this.getDisplay(this.value)) {\n                    return '';\n                }\n                return input;\n            })\n            .debounceTime(200);\n\n        // Changes to filter value\n        this.filter.subscribe((next) => {\n\n            // Open the dropdown when filter is nonempty.\n            if (next && next.length > 0) {\n                this.dropdownOpen = true;\n            }\n        });\n    }\n/**\n * @param {?} changes\n * @return {?}\n */\nngOnChanges(changes: SimpleChanges) {\n        if (changes.value) {\n            if (!this.multiple && changes.value.currentValue !== null) {\n                this.input = this.getDisplay(changes.value.currentValue);\n            }\n        }\n        if (changes.multiple && changes.multiple.currentValue !== changes.multiple.previousValue) {\n            this.input = '';\n        }\n    }\n/**\n * @param {?} obj\n * @return {?}\n */\nwriteValue(obj: any): void {\n        if (obj !== undefined) {\n            this._value = obj;\n        }\n    }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnChange(fn: any): void {\n        this.propagateChange = fn;\n    }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnTouched(fn: any): void { }\n/**\n * @param {?} isDisabled\n * @return {?}\n */\nsetDisabledState(isDisabled: boolean): void {\n        this.disabled = isDisabled;\n    }\n/**\n * @param {?} event\n * @return {?}\n */\ninputClickHandler(event: MouseEvent) {\n        this.selectInputText();\n        this.dropdownOpen = true;\n    }\n/**\n * @param {?} event\n * @return {?}\n */\ninputBlurHandler(event: Event) {\n        // Close dropdown and reset text input if focus is lost\n        setTimeout(() => {\n            if (!this._element.nativeElement.contains(this._document.activeElement)) {\n                this.dropdownOpen = false;\n                if (!this.multiple) {\n                    this.input = this.getDisplay(this.value);\n                }\n            }\n        }, 200);\n    }\n/**\n * Key handler for single select only. Multiple select key handling is in TagInputComponent.\n * @param {?} event\n * @return {?}\n */\ninputKeyHandler(event: KeyboardEvent) {\n\n        // Standard keys for typeahead (up/down/esc)\n        this._typeaheadKeyService.handleKey(event, this.singleTypeahead);\n\n        switch (event.key) {\n            case 'Enter':\n                if (this.dropdownOpen) {\n                    // Set the highlighted option as the value and close\n                    this.value = this.singleTypeahead.highlighted;\n                    this.dropdownOpen = false;\n                }\n\n                // Update the input field. If dropdown isn't open then reset it to the previous value.\n                this.input = this.getDisplay(this.value);\n                event.preventDefault();\n                break;\n        }\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nsingleOptionSelected(event: TypeaheadOptionEvent) {\n        if (event.option) {\n            this.value = event.option;\n            this.dropdownOpen = false;\n        }\n    }\n/**\n * Returns the display value of the given option.\n * @param {?} option\n * @return {?}\n */\ngetDisplay(option: any): string {\n        if (option === null || option === undefined) {\n            return '';\n        }\n        if (typeof this.display === 'function') {\n            return this.display(option);\n        }\n        if (typeof this.display === 'string' && option.hasOwnProperty(this.display)) {\n            return option[ /** @type {?} */((<string>this.display))];\n        }\n        return option;\n    }\n/**\n * @return {?}\n */\nprivate selectInputText() {\n        this.singleInput.nativeElement.select();\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-select',\n    template: `\n      <ux-tag-input *ngIf=\"multiple\"\n          [(tags)]=\"value\"\n          [(input)]=\"input\"\n          [addOnPaste]=\"false\"\n          [disabled]=\"disabled\"\n          [display]=\"display\"\n          [freeInput]=\"false\"\n          [placeholder]=\"placeholder\"\n          [showTypeaheadOnClick]=\"true\">\n\n          <ux-typeahead #multipleTypeahead\n              [options]=\"options\"\n              [filter]=\"filter | async\"\n              [(open)]=\"dropdownOpen\"\n              [display]=\"display\"\n              [key]=\"key\"\n              [disabledOptions]=\"value\"\n              [dropDirection]=\"dropDirection\"\n              [maxHeight]=\"maxHeight\"\n              [pageSize]=\"pageSize\"\n              [selectFirst]=\"true\"\n              [loadingTemplate]=\"loadingTemplate\"\n              [optionTemplate]=\"optionTemplate\"\n              [noOptionsTemplate]=\"noOptionsTemplate\">\n          </ux-typeahead>\n\n      </ux-tag-input>\n\n      <div *ngIf=\"!multiple\" class=\"inner-addon right-addon\" [class.disabled]=\"disabled\">\n\n          <i class=\"hpe-icon\"\n              [class.hpe-down]=\"dropDirection === 'down'\"\n              [class.hpe-up]=\"dropDirection === 'up'\"></i>\n\n          <input #singleInput type=\"text\" class=\"form-control\"\n              [(ngModel)]=\"input\"\n              [placeholder]=\"placeholder\"\n              [disabled]=\"disabled\"\n              (click)=\"inputClickHandler($event)\"\n              (blur)=\"inputBlurHandler($event)\"\n              (keydown)=\"inputKeyHandler($event)\">\n\n          <ux-typeahead #singleTypeahead\n              [options]=\"options\"\n              [filter]=\"filter | async\"\n              [(open)]=\"dropdownOpen\"\n              [display]=\"display\"\n              [key]=\"key\"\n              [dropDirection]=\"dropDirection\"\n              [maxHeight]=\"maxHeight\"\n              [openOnFilterChange]=\"false\"\n              [pageSize]=\"pageSize\"\n              [selectFirst]=\"true\"\n              [loadingTemplate]=\"loadingTemplate\"\n              [optionTemplate]=\"optionTemplate\"\n              [noOptionsTemplate]=\"noOptionsTemplate\"\n              (optionSelected)=\"singleOptionSelected($event)\" >\n          </ux-typeahead>\n\n      </div>\n    `,\n    providers: [SELECT_VALUE_ACCESSOR]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: HTMLDocument, decorators: [{ type: Inject, args: [DOCUMENT, ] }, ]},\n{type: TypeaheadKeyService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'value': [{ type: Input, args: ['value', ] },],\n'valueChange': [{ type: Output },],\n'input': [{ type: Input, args: ['input', ] },],\n'inputChange': [{ type: Output },],\n'dropdownOpen': [{ type: Input, args: ['dropdownOpen', ] },],\n'dropdownOpenChange': [{ type: Output },],\n'options': [{ type: Input },],\n'display': [{ type: Input },],\n'key': [{ type: Input },],\n'allowNull': [{ type: Input },],\n'disabled': [{ type: Input },],\n'dropDirection': [{ type: Input },],\n'maxHeight': [{ type: Input },],\n'multiple': [{ type: Input },],\n'pageSize': [{ type: Input },],\n'placeholder': [{ type: Input },],\n'loadingTemplate': [{ type: Input },],\n'noOptionsTemplate': [{ type: Input },],\n'optionTemplate': [{ type: Input },],\n'singleInput': [{ type: ViewChild, args: ['singleInput', ] },],\n'multipleTypeahead': [{ type: ViewChild, args: ['multipleTypeahead', ] },],\n'singleTypeahead': [{ type: ViewChild, args: ['singleTypeahead', ] },],\n};\n}\n\nfunction SelectComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nSelectComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSelectComponent.ctorParameters;\n/** @type {?} */\nSelectComponent.propDecorators;\n/** @type {?} */\nSelectComponent.prototype._value;\n/** @type {?} */\nSelectComponent.prototype.valueChange;\n/** @type {?} */\nSelectComponent.prototype._input;\n/** @type {?} */\nSelectComponent.prototype.inputChange;\n/** @type {?} */\nSelectComponent.prototype._dropdownOpen;\n/** @type {?} */\nSelectComponent.prototype.dropdownOpenChange;\n/** @type {?} */\nSelectComponent.prototype.options;\n/** @type {?} */\nSelectComponent.prototype.display;\n/** @type {?} */\nSelectComponent.prototype.key;\n/** @type {?} */\nSelectComponent.prototype.allowNull;\n/** @type {?} */\nSelectComponent.prototype.disabled;\n/** @type {?} */\nSelectComponent.prototype.dropDirection;\n/** @type {?} */\nSelectComponent.prototype.maxHeight;\n/** @type {?} */\nSelectComponent.prototype.multiple;\n/** @type {?} */\nSelectComponent.prototype.pageSize;\n/** @type {?} */\nSelectComponent.prototype.placeholder;\n/** @type {?} */\nSelectComponent.prototype.loadingTemplate;\n/** @type {?} */\nSelectComponent.prototype.noOptionsTemplate;\n/** @type {?} */\nSelectComponent.prototype.optionTemplate;\n/** @type {?} */\nSelectComponent.prototype.singleInput;\n/** @type {?} */\nSelectComponent.prototype.multipleTypeahead;\n/** @type {?} */\nSelectComponent.prototype.singleTypeahead;\n/** @type {?} */\nSelectComponent.prototype.filter;\n/** @type {?} */\nSelectComponent.prototype.propagateChange;\n/** @type {?} */\nSelectComponent.prototype._element;\n/** @type {?} */\nSelectComponent.prototype._document;\n/** @type {?} */\nSelectComponent.prototype._typeaheadKeyService;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","\nexport class TagInputEvent {\nprivate _defaultPrevented = false;\n/**\n * @param {?} tag\n */\nconstructor(public tag: any) {}\n/**\n * @return {?}\n */\npreventDefault() {\n        this._defaultPrevented = true;\n    }\n/**\n * @return {?}\n */\ndefaultPrevented(): boolean {\n        return this._defaultPrevented;\n    }\n}\n\nfunction TagInputEvent_tsickle_Closure_declarations() {\n/** @type {?} */\nTagInputEvent.prototype._defaultPrevented;\n/** @type {?} */\nTagInputEvent.prototype.tag;\n}\n","import { TypeaheadComponent, TypeaheadKeyService } from '../typeahead/index';\nimport { TypeaheadOptionEvent } from '../typeahead/typeahead-event';\nimport { TagInputEvent } from './tag-input-event';\nimport {\n    AfterContentInit,\n    Component,\n    ContentChildren,\n    ElementRef,\n    EventEmitter,\n    forwardRef,\n    HostListener,\n    Inject,\n    Input,\n    OnChanges,\n    OnInit,\n    Output,\n    QueryList,\n    SimpleChanges,\n    TemplateRef,\n    ViewChild\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALIDATORS, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { DOCUMENT } from '@angular/platform-browser';\n\n\nconst /** @type {?} */ TAGINPUT_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => TagInputComponent),\n    multi: true\n};\nconst /** @type {?} */ TAGINPUT_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => TagInputComponent),\n    multi: true\n};\nexport class TagInputComponent implements OnInit, AfterContentInit, OnChanges, ControlValueAccessor {\nprivate _tags: any[] = [];\n/**\n * @return {?}\n */\nget tags() {\n        if (!this._tags) {\n            this._tags = [];\n        }\n        return this._tags;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset tags(value: any[]) {\n        this._tags = value;\n        this.onChangeHandler(this._tags);\n        this.tagsChange.emit(this._tags);\n    }\n\n     tagsChange = new EventEmitter<any[]>();\nprivate _input: string = '';\n/**\n * @return {?}\n */\nget input() {\n        return this._input;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset input(value: string) {\n        this._input = value;\n        this.inputChange.emit(value);\n    }\n\n     inputChange = new EventEmitter<string>();\n\n     display: (option: any) => string | string;\n     addOnPaste: boolean = true;\n     disabled: boolean = false;\n     enforceTagLimits: boolean = false;\n     freeInput: boolean = true;\n     maxTags: number = Number.MAX_VALUE;\n     minTags: number = 0;\n     placeholder: string = '';\n     showTypeaheadOnClick: boolean = false;\n     tagDelimiters: string = '';\n     tagPattern: RegExp;\n     tagTemplate: TemplateRef<any>;\n     tagClass: TagClassFunction = () => undefined;\n     validationErrors: any = {};\n     createTagHandler: (value: string) => any;\n\n     tagAdding = new EventEmitter<TagInputEvent>();\n     tagAdded = new EventEmitter<TagInputEvent>();\n     tagInvalidated = new EventEmitter<TagInputEvent>();\n     tagRemoving = new EventEmitter<TagInputEvent>();\n     tagRemoved = new EventEmitter<TagInputEvent>();\n     tagClick = new EventEmitter<TagInputEvent>();\n\n     typeaheadQuery: QueryList<TypeaheadComponent>;\n\n     tagInput: ElementRef;\nprivate _defaultTagTemplate: TemplateRef<any>;\n\n    selectedIndex: number = -1;\n\n    tagApi: TagApi = {\n        getTagDisplay: this.getTagDisplay.bind(this),\n        removeTagAt: this.removeTagAt.bind(this),\n        canRemoveTagAt: this.canRemoveTagAt.bind(this)\n    };\n\n    valid: boolean = true;\n    inputValid: boolean = true;\n\n    typeahead: TypeaheadComponent;\nprivate onChangeHandler: (_: any) => void = () => { };\nprivate onTouchedHandler: () => void = () => { };\n/**\n * @param {?} _element\n * @param {?} _document\n * @param {?} _typeaheadKeyService\n */\nconstructor(\nprivate _element: ElementRef,\nprivate _document: Document,\nprivate _typeaheadKeyService: TypeaheadKeyService) { }\n/**\n * @return {?}\n */\nngOnInit() {\n        if (!this.tagTemplate) {\n            this.tagTemplate = this._defaultTagTemplate;\n        }\n    }\n/**\n * @return {?}\n */\nngAfterContentInit() {\n        // Watch for optional child typeahead control\n        this.connectTypeahead(this.typeaheadQuery.first);\n        this.typeaheadQuery.changes.subscribe((query) => {\n            this.connectTypeahead(query.first);\n        });\n    }\n/**\n * @param {?} changes\n * @return {?}\n */\nngOnChanges(changes: SimpleChanges) {\n        if (changes.disabled) {\n            if (changes.disabled.currentValue) {\n                // Clear selection and close dropdown\n                this.selectedIndex = -1;\n                if (this.typeahead) {\n                    this.typeahead.open = false;\n                }\n            }\n        }\n\n        // Update validation status\n        this.validate();\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nwriteValue(value: any[]) {\n        if (value) {\n            this.tags = value;\n        }\n    }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnChange(fn: any) {\n        this.onChangeHandler = fn;\n    }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnTouched(fn: any) {\n        this.onTouchedHandler = fn;\n    }\n/**\n * Validate the value of the control (tags property).\n * @return {?}\n */\nvalidate() {\n        this.valid = true;\n        let /** @type {?} */ tagRangeError = null;\n        if (this.tags && (this.tags.length < this.minTags || this.tags.length > this.maxTags)) {\n            tagRangeError = {\n                given: this.tags.length,\n                min: this.minTags,\n                max: this.maxTags\n            };\n            this.valid = false;\n        }\n        this.validationErrors['tagRangeError'] = tagRangeError;\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nkeyHandler(event: KeyboardEvent) {\n\n        if (this.disabled) { return; }\n\n        // Get the input field cursor location\n        const /** @type {?} */ inputCursorPos = this.tagInput.nativeElement.selectionStart;\n\n        // Determine if the input field has any text selected\n        const /** @type {?} */ hasSelection = this.tagInput.nativeElement.selectionStart !== this.tagInput.nativeElement.selectionEnd;\n\n        // Determine if a tag has focus\n        const /** @type {?} */ tagSelected = this.isValidTagIndex(this.selectedIndex);\n        \n        const /** @type {?} */ inputLength = this.input ? this.input.length : 0;\n\n        // Check whether the arrow keys can move the selection. Otherwise the input field takes the event.\n        const /** @type {?} */ canNavigateLeft = tagSelected || (inputCursorPos <= 0 && !hasSelection);\n        const /** @type {?} */ canNavigateRight = tagSelected || (inputCursorPos >= inputLength && !hasSelection);\n\n        // Forward key events to the typeahead component.\n        this._typeaheadKeyService.handleKey(event, this.typeahead);\n\n        switch (event.key) {\n            case 'Enter':\n                // Check if a typeahead option is highlighted\n                if (this.typeahead && this.typeahead.open && this.typeahead.highlighted) {\n                    // Add the typeahead option as a tag, clear the input, and close the dropdown\n                    this.commitTypeahead(this.typeahead.highlighted);\n                    this.typeahead.open = false;\n                } else {\n                    // Validate and add the input text as a tag, if possible\n                    this.commitInput();\n                }\n                event.preventDefault();\n                break;\n            case 'Backspace':\n                if (canNavigateLeft) {\n                    this.backspace();\n                    event.stopPropagation();\n                    event.preventDefault();\n                }\n                break;\n            case 'Delete':\n            case 'Del':\n                if (tagSelected) {\n                    this.removeTagAt(this.selectedIndex);\n                }\n                break;\n            case 'ArrowLeft':\n            case 'Left':\n                if (canNavigateLeft) {\n                    this.moveSelection(-1);\n                    event.preventDefault();\n                }\n                break;\n            case 'ArrowRight':\n            case 'Right':\n                if (canNavigateRight) {\n                    this.moveSelection(1);\n                    event.preventDefault();\n                }\n                break;\n        }\n\n        // Check for keys in the tagDelimiters\n        if (this.tagDelimiters && this.tagDelimiters.indexOf(this.getKeyChar(event)) >= 0) {\n            // Commit previous text\n            this.commitInput();\n            event.stopPropagation();\n            event.preventDefault();\n        }\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nfocusOutHandler(event: FocusEvent) {\n        // Close the dropdown on blur\n        setTimeout(() => {\n            if (!this._element.nativeElement.contains(this._document.activeElement)) {\n                this.selectedIndex = -1;\n                if (this.typeahead) {\n                    this.typeahead.open = false;\n                }\n            }\n        }, 200);\n    }\n/**\n * @param {?} event\n * @param {?} tag\n * @param {?} index\n * @return {?}\n */\ntagClickHandler(event: MouseEvent, tag: any, index: number) {\n\n        if (this.disabled) { return; }\n\n        // Send tagClick event\n        const /** @type {?} */ tagClickEvent = new TagInputEvent(tag);\n        this.tagClick.emit(tagClickEvent);\n\n        // Prevent focus if preventDefault() was called\n        if (tagClickEvent.defaultPrevented()) {\n            event.preventDefault();\n            return;\n        }\n\n        // Select the tag (for IE that doesn't propagate focus)\n        this.selectTagAt(index);\n    }\n/**\n * @return {?}\n */\ninputClickHandler() {\n\n        if (this.disabled) { return; }\n\n        if (this.typeahead && this.showTypeaheadOnClick) {\n            this.typeahead.open = true;\n        }\n    }\n/**\n * @return {?}\n */\ninputFocusHandler() {\n\n        if (this.disabled) { return; }\n\n        this.selectInput();\n    }\n/**\n * @param {?} event\n * @return {?}\n */\ninputPasteHandler(event: ClipboardEvent) {\n\n        if (this.disabled) { return; }\n\n        if (this.addOnPaste) {\n            // Get text from the clipboard\n            let /** @type {?} */ input: string = null;\n            if (event.clipboardData) {\n                input = event.clipboardData.getData('text/plain');\n            } else if (( /** @type {?} */((<any>window))).clipboardData) {\n                // Internet Explorer only\n                input = ( /** @type {?} */((<any>window))).clipboardData.getData('Text');\n            }\n\n            // Commit the clipboard text directly\n            if (this.commit(input)) {\n                this.selectInput();\n                event.stopPropagation();\n                event.preventDefault();\n            }\n        }\n    }\n/**\n * @param {?} event\n * @return {?}\n */\ntypeaheadOptionSelectedHandler(event: TypeaheadOptionEvent) {\n\n        if (this.disabled) { return; }\n\n        // When the typeahead sends the optionSelected event, commit the object directly\n        this.commitTypeahead(event.option);\n    }\n/**\n * Commit the current input value and clear the input field if successful.\n * @return {?}\n */\ncommitInput() {\n        if (this.commit(this.input)) {\n            this.selectInput();\n            this.input = '';\n        }\n    }\n/**\n * Commit the given tag object and clear the input if successful.\n * @param {?} tag\n * @return {?}\n */\ncommitTypeahead(tag: any) {\n        if (this.addTag(tag)) {\n            this.selectInput();\n            this.input = '';\n        }\n    }\n/**\n * Commit the given string value as one or more tags, if validation passes. Returns true if the tag(s) were created.\n * @param {?} input\n * @return {?}\n */\ncommit(input: string): boolean {\n        if (input && this.freeInput) {\n\n            // Split the tags by the tagDelimiters if configured\n            const /** @type {?} */ newTags = this.splitTagInput(input);\n\n            // Check tag validation for all of the individual values\n            let /** @type {?} */ allValid = true;\n            for (let /** @type {?} */ newTag of newTags) {\n                const /** @type {?} */ valid = this.validateTag(newTag);\n                if (!valid) {\n                    allValid = false;\n                }\n            }\n\n            // Add the tags if all are valid\n            if (allValid) {\n                for (let /** @type {?} */ newTag of newTags) {\n                    this.addTag(this.createTag(newTag));\n                }\n\n                return true;\n            }\n        }\n\n        return false;\n    }\n/**\n * If no tag is selected, select the rightmost tag. If a tag is selected, remove it.\n * @return {?}\n */\nbackspace() {\n\n        if (this.disabled) { return; }\n\n        if (!this.isValidTagIndex(this.selectedIndex)) {\n            this.selectTagAt(this.tags.length - 1);\n        } else {\n            this.removeTagAt(this.selectedIndex);\n        }\n    }\n/**\n * Move the highlighted option forwards or backwards in the list. Wraps at the limits.\n * @param {?} d Value to be added to the selected index, i.e. -1 to move backwards, +1 to move forwards.\n * @return {?}\n */\nmoveSelection(d: number) {\n\n        if (this.disabled) { return; }\n\n        if (this.isValidSelectIndex(this.selectedIndex)) {\n            this.selectedIndex += d;\n\n            // Do wrapping of selection when out of bounds\n            if (this.selectedIndex < 0) {\n                this.selectedIndex = this.tags.length;\n            } else if (this.selectedIndex > this.tags.length) {\n                this.selectedIndex = 0;\n            }\n        }\n    }\n/**\n * Returns a value to display for the given tag. Uses display function/property name if set, otherwise assumes that the tag is a simple string.\n * @param {?} tag\n * @return {?}\n */\ngetTagDisplay(tag: any): string {\n        if (typeof this.display === 'function') {\n            return this.display(tag);\n        }\n        if (typeof this.display === 'string') {\n            return tag[ /** @type {?} */((<string>this.display))];\n        }\n        return tag;\n    }\n/**\n * Returns true if the given index is selected (tag index or input field).\n * @param {?} index\n * @return {?}\n */\nisSelected(index: number): boolean {\n        return index === this.selectedIndex;\n    }\n/**\n * Select the tag at the given index. Does nothing if disabled is true.\n * @param {?} tagIndex\n * @return {?}\n */\nselectTagAt(tagIndex: number) {\n\n        if (this.disabled) { return; }\n\n        if (this.isValidTagIndex(tagIndex)) {\n            this.selectedIndex = tagIndex;\n        }\n    }\n/**\n * Select the input field, giving it focus. Does nothing if disabled is true.\n * @return {?}\n */\nselectInput() {\n\n        if (this.disabled) { return; }\n\n        this.selectedIndex = this.tags.length;\n    }\n/**\n * Remove the tag at the given index. Does nothing if disabled is true or the minTags property prevents removal.\n * @param {?} tagIndex\n * @return {?}\n */\nremoveTagAt(tagIndex: number) {\n\n        if (this.disabled || !this.canRemoveTagAt(tagIndex)) { return; }\n\n        // Check that the tagIndex is in range\n        if (this.isValidTagIndex(tagIndex)) {\n            const /** @type {?} */ tag = this.tags[tagIndex];\n            const /** @type {?} */ tagRemovingEvent = new TagInputEvent(tag);\n            this.tagRemoving.emit(tagRemovingEvent);\n            if (!tagRemovingEvent.defaultPrevented()) {\n                // Select input first to avoid issues with dropping focus\n                this.selectInput();\n                // Remove the tag\n                this.tags.splice(tagIndex, 1);\n                // Set focus again since indices have changed\n                this.selectInput();\n                this.tagRemoved.emit(new TagInputEvent(tag));\n                this.validate();\n            }\n        }\n    }\n/**\n * Returns true if the tag at the given index can be removed.\n * @param {?} tagIndex\n * @return {?}\n */\ncanRemoveTagAt(tagIndex: number): boolean {\n        return this.tags.length > this.minTags || !this.enforceTagLimits;\n    }\n/**\n * Returns true if the input field should be available.\n * @return {?}\n */\nisInputVisible() {\n        return this.tags.length < this.maxTags || !this.enforceTagLimits;\n    }\n/**\n * Returns true if any part of the control has focus.\n * @return {?}\n */\nhasFocus(): boolean {\n        return this.isValidSelectIndex(this.selectedIndex);\n    }\n/**\n * @param {?} typeahead\n * @return {?}\n */\nprivate connectTypeahead(typeahead: TypeaheadComponent) {\n        this.typeahead = typeahead;\n        if (this.typeahead) {\n            // Set up event handler for selected options\n            this.typeahead.optionSelected.subscribe(this.typeaheadOptionSelectedHandler.bind(this));\n        }\n    }\n/**\n * Validate the given tagValue with the tagPattern, if set. Update validationErrors on validation failure.\n * @param {?} tagValue\n * @return {?}\n */\nprivate validateTag(tagValue: string): boolean {\n        let /** @type {?} */ inputPattern = null;\n        this.inputValid = true;\n        if (this.tagPattern && !this.tagPattern.test(tagValue)) {\n            inputPattern = {\n                given: tagValue,\n                pattern: this.tagPattern\n            };\n            this.inputValid = false;\n        }\n        this.validationErrors['inputPattern'] = inputPattern;\n        return this.inputValid;\n    }\n/**\n * Create a tag object for the given tagValue. If createTagHandler is specified, use it; otherwise if displayProperty is specified, create an object with the tagValue as the single named property; otherwise return the tagValue itself.\n * @param {?} tagValue\n * @return {?}\n */\nprivate createTag(tagValue: string): any {\n        let /** @type {?} */ tag = null;\n        if (this.createTagHandler && typeof this.createTagHandler === 'function') {\n            tag = this.createTagHandler(tagValue);\n        } else if (typeof this.display === 'string') {\n            tag = {};\n            tag[ /** @type {?} */((<string>this.display))] = tagValue;\n        } else {\n            tag = tagValue;\n        }\n        return tag;\n    }\n/**\n * Add a tag object, calling the tagAdding and tagAdded events. Returns true if the tag was added to the tags array.\n * @param {?} tag\n * @return {?}\n */\nprivate addTag(tag: any): boolean {\n        if (tag) {\n            // Verify that the new tag can be displayed\n            const /** @type {?} */ displayValue = this.getTagDisplay(tag);\n            if (displayValue && typeof displayValue === 'string' && displayValue.length > 0) {\n                const /** @type {?} */ tagAddingEvent = new TagInputEvent(tag);\n                this.tagAdding.emit(tagAddingEvent);\n                if (!tagAddingEvent.defaultPrevented()) {\n                    this.tags = this.tags || [];\n                    this.tags.push(tag);\n                    this.tagAdded.emit(new TagInputEvent(tag));\n                    this.validate();\n                    return true;\n                }\n            }\n        }\n\n        return false;\n    }\n/**\n * Returns true if the given tagIndex is a valid tag index.\n * @param {?} tagIndex\n * @return {?}\n */\nprivate isValidTagIndex(tagIndex: number): boolean {\n        return tagIndex >= 0 && tagIndex < this.tags.length;\n    }\n/**\n * Returns true if the given index is a valid selection index (tags or input field).\n * @param {?} index\n * @return {?}\n */\nprivate isValidSelectIndex(index: number): boolean {\n        return index >= 0 && index <= this.tags.length;\n    }\n/**\n * Returns the character corresponding to the given key event, mainly for IE compatibility.\n * @param {?} event\n * @return {?}\n */\nprivate getKeyChar(event: KeyboardEvent): string {\n        switch (event.key) {\n            case 'Spacebar':\n                return ' ';\n        }\n        return event.key;\n    }\n/**\n * Returns an array of strings corresponding to the input string split by the tagDelimiters characters.\n * @param {?} input\n * @return {?}\n */\nprivate splitTagInput(input: string): string[] {\n        let /** @type {?} */ tagValues = [input];\n        if (this.tagDelimiters && typeof this.tagDelimiters === 'string') {\n            const /** @type {?} */ escapedDelimiters = this.tagDelimiters.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n            const /** @type {?} */ delimiterRegex = new RegExp(`[${escapedDelimiters}]`, 'g');\n            tagValues = input.split(delimiterRegex).filter((s) => s.length > 0);\n        }\n        return tagValues;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-tag-input',\n    template: `\n      <ol>\n          <li *ngFor=\"let tag of tags; let i = index\" class=\"ux-tag\"\n              [class.disabled]=\"disabled\"\n              [ngClass]=\"tagClass(tag, i, isSelected(i))\"\n              [attr.tabindex]=\"disabled ? null : i\"\n              [focusIf]=\"isSelected(i)\"\n              (click)=\"tagClickHandler($event, tag, i)\"\n              (focus)=\"selectTagAt(i)\">\n        \n              <ng-container [ngTemplateOutlet]=\"tagTemplate\"\n                  [ngTemplateOutletContext]=\"{tag: tag, index: i, disabled: disabled, api: tagApi}\">\n              </ng-container>\n\n          </li>\n          <li *ngIf=\"isInputVisible()\" class=\"ux-tag-input\">\n              <input #tagInput type=\"text\" class=\"ux-tag-input\"\n                  [(ngModel)]=\"input\"\n                  [class.invalid]=\"!inputValid\"\n                  [placeholder]=\"disabled ? '' : (placeholder || '')\"\n                  [disabled]=\"disabled\"\n                  [focusIf]=\"isSelected(tags.length)\"\n                  (click)=\"inputClickHandler()\"\n                  (focus)=\"inputFocusHandler()\"\n                  (paste)=\"inputPasteHandler($event)\">\n          </li>\n      </ol>\n\n      <ng-content #typeahead></ng-content>\n\n      <ng-template #defaultTagTemplate let-tag=\"tag\" let-index=\"index\" let-disabled=\"disabled\" let-api=\"api\">\n          <span class=\"ux-tag-text\">{{api.getTagDisplay(tag)}}</span>\n          <button *ngIf=\"api.canRemoveTagAt(index)\" type=\"button\" class=\"ux-tag-remove\" [disabled]=\"disabled\" (click)=\"api.removeTagAt(index); $event.stopPropagation();\"><i class=\"hpe-icon hpe-close\"></i></button>\n      </ng-template>\n    `,\n    providers: [TAGINPUT_VALUE_ACCESSOR, TAGINPUT_VALIDATOR],\n    host: {\n        '[class.disabled]': 'disabled',\n        '[class.focus]': 'hasFocus()',\n        '[class.invalid]': '!valid || !inputValid'\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Document, decorators: [{ type: Inject, args: [DOCUMENT, ] }, ]},\n{type: TypeaheadKeyService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'tags': [{ type: Input, args: ['tags', ] },],\n'tagsChange': [{ type: Output },],\n'input': [{ type: Input, args: ['input', ] },],\n'inputChange': [{ type: Output },],\n'display': [{ type: Input },],\n'addOnPaste': [{ type: Input },],\n'disabled': [{ type: Input },],\n'enforceTagLimits': [{ type: Input },],\n'freeInput': [{ type: Input },],\n'maxTags': [{ type: Input },],\n'minTags': [{ type: Input },],\n'placeholder': [{ type: Input },],\n'showTypeaheadOnClick': [{ type: Input },],\n'tagDelimiters': [{ type: Input },],\n'tagPattern': [{ type: Input },],\n'tagTemplate': [{ type: Input },],\n'tagClass': [{ type: Input },],\n'validationErrors': [{ type: Input },],\n'createTagHandler': [{ type: Input, args: ['createTag', ] },],\n'tagAdding': [{ type: Output },],\n'tagAdded': [{ type: Output },],\n'tagInvalidated': [{ type: Output },],\n'tagRemoving': [{ type: Output },],\n'tagRemoved': [{ type: Output },],\n'tagClick': [{ type: Output },],\n'typeaheadQuery': [{ type: ContentChildren, args: [TypeaheadComponent, ] },],\n'tagInput': [{ type: ViewChild, args: ['tagInput', ] },],\n'_defaultTagTemplate': [{ type: ViewChild, args: ['defaultTagTemplate', ] },],\n'keyHandler': [{ type: HostListener, args: ['keydown', ['$event'], ] },],\n'focusOutHandler': [{ type: HostListener, args: ['focusout', ['$event'], ] },],\n};\n}\n\nfunction TagInputComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nTagInputComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTagInputComponent.ctorParameters;\n/** @type {?} */\nTagInputComponent.propDecorators;\n/** @type {?} */\nTagInputComponent.prototype._tags;\n/** @type {?} */\nTagInputComponent.prototype.tagsChange;\n/** @type {?} */\nTagInputComponent.prototype._input;\n/** @type {?} */\nTagInputComponent.prototype.inputChange;\n/** @type {?} */\nTagInputComponent.prototype.display;\n/** @type {?} */\nTagInputComponent.prototype.addOnPaste;\n/** @type {?} */\nTagInputComponent.prototype.disabled;\n/** @type {?} */\nTagInputComponent.prototype.enforceTagLimits;\n/** @type {?} */\nTagInputComponent.prototype.freeInput;\n/** @type {?} */\nTagInputComponent.prototype.maxTags;\n/** @type {?} */\nTagInputComponent.prototype.minTags;\n/** @type {?} */\nTagInputComponent.prototype.placeholder;\n/** @type {?} */\nTagInputComponent.prototype.showTypeaheadOnClick;\n/** @type {?} */\nTagInputComponent.prototype.tagDelimiters;\n/** @type {?} */\nTagInputComponent.prototype.tagPattern;\n/** @type {?} */\nTagInputComponent.prototype.tagTemplate;\n/** @type {?} */\nTagInputComponent.prototype.tagClass;\n/** @type {?} */\nTagInputComponent.prototype.validationErrors;\n/** @type {?} */\nTagInputComponent.prototype.createTagHandler;\n/** @type {?} */\nTagInputComponent.prototype.tagAdding;\n/** @type {?} */\nTagInputComponent.prototype.tagAdded;\n/** @type {?} */\nTagInputComponent.prototype.tagInvalidated;\n/** @type {?} */\nTagInputComponent.prototype.tagRemoving;\n/** @type {?} */\nTagInputComponent.prototype.tagRemoved;\n/** @type {?} */\nTagInputComponent.prototype.tagClick;\n/** @type {?} */\nTagInputComponent.prototype.typeaheadQuery;\n/** @type {?} */\nTagInputComponent.prototype.tagInput;\n/** @type {?} */\nTagInputComponent.prototype._defaultTagTemplate;\n/** @type {?} */\nTagInputComponent.prototype.selectedIndex;\n/** @type {?} */\nTagInputComponent.prototype.tagApi;\n/** @type {?} */\nTagInputComponent.prototype.valid;\n/** @type {?} */\nTagInputComponent.prototype.inputValid;\n/** @type {?} */\nTagInputComponent.prototype.typeahead;\n/** @type {?} */\nTagInputComponent.prototype.onChangeHandler;\n/** @type {?} */\nTagInputComponent.prototype.onTouchedHandler;\n/** @type {?} */\nTagInputComponent.prototype._element;\n/** @type {?} */\nTagInputComponent.prototype._document;\n/** @type {?} */\nTagInputComponent.prototype._typeaheadKeyService;\n}\n\n\n/**\n * The API available to tag templates.\n */\nexport interface TagApi {\n    /**\n     * Returns the display value of the given tag, according to the displayProperty property. \n     */\n    getTagDisplay: (tag: any) => string;\n\n    /**\n     * Removes the tag at the given index, if possible.\n     */\n    removeTagAt: (index: number) => void;\n\n    /**\n     * \tReturns true if the tag at the given index can be removed.\n     */\n    canRemoveTagAt: (index: number) => boolean;\n}\n\n/**\n * The function used to return custom class information, for use in `ngClass`.\n */\nexport type TagClassFunction = (tag: any, index: number, selected: boolean) => (string | string[] | Set<string>);\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, Input, OnChanges, SimpleChanges, ElementRef } from '@angular/core';\nexport class FocusIfDirective implements OnChanges {\n\n     focusIf: boolean = false;\n/**\n * @param {?} elementRef\n */\nconstructor(private elementRef: ElementRef) { }\n/**\n * @param {?} changes\n * @return {?}\n */\nngOnChanges(changes: SimpleChanges): void {\n        if (changes.focusIf && changes.focusIf.previousValue === false && changes.focusIf.currentValue === true) {\n            this.elementRef.nativeElement.focus();\n        }\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{ selector: '[focusIf]' }, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'focusIf': [{ type: Input },],\n};\n}\n\nfunction FocusIfDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nFocusIfDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFocusIfDirective.ctorParameters;\n/** @type {?} */\nFocusIfDirective.propDecorators;\n/** @type {?} */\nFocusIfDirective.prototype.focusIf;\n/** @type {?} */\nFocusIfDirective.prototype.elementRef;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { FocusIfDirective } from './focus-if.directive';\nexport class FocusIfModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    exports: [FocusIfDirective],\n    declarations: [FocusIfDirective]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction FocusIfModule_tsickle_Closure_declarations() {\n/** @type {?} */\nFocusIfModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFocusIfModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { FocusIfModule } from '../../directives/focus-if/index';\nimport { TypeaheadModule } from '../typeahead/index';\nimport { TagInputComponent } from './tag-input.component';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nexport class TagInputModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        CommonModule,\n        FormsModule,\n        FocusIfModule,\n        TypeaheadModule\n    ],\n    exports: [TagInputComponent],\n    declarations: [TagInputComponent],\n    providers: [],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction TagInputModule_tsickle_Closure_declarations() {\n/** @type {?} */\nTagInputModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTagInputModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { InfiniteScrollModule } from '../../directives/infinite-scroll/index';\nimport { TagInputModule } from '../tag-input/index';\nimport { TypeaheadModule } from '../typeahead/index';\nimport { SelectComponent } from './select.component';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nexport class SelectModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        CommonModule,\n        FormsModule,\n        InfiniteScrollModule,\n        TagInputModule,\n        TypeaheadModule\n    ],\n    exports: [SelectComponent],\n    declarations: [SelectComponent]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction SelectModule_tsickle_Closure_declarations() {\n/** @type {?} */\nSelectModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSelectModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Input, EventEmitter, Output, OnInit, ElementRef, ViewChild, HostListener, AfterViewInit, OnDestroy, DoCheck, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { Subscription } from 'rxjs/Subscription';\nimport'rxjs/add/observable/fromEvent';\nimport'rxjs/add/operator/switchMap';\nimport'rxjs/add/operator/takeUntil';\nimport { ColorService } from '../../services/color/index';\nexport class SliderComponent implements OnInit, AfterViewInit, DoCheck, OnDestroy {\n\n     value: SliderValue | number = 0;\n     options: SliderOptions;\n     valueChange: EventEmitter<SliderValue | number> = new EventEmitter<SliderValue | number>();\n\n     lowerThumb: ElementRef;\n     lowerTooltip: ElementRef;\n     upperThumb: ElementRef;\n     upperTooltip: ElementRef;\n     track: ElementRef;\nprivate _value: SliderValue | number;\n\n    // expose enums to Angular view\n    sliderType = SliderType;\n    sliderStyle = SliderStyle;\n    sliderSize = SliderSize;\n    sliderThumb = SliderThumb;\n    sliderTickType = SliderTickType;\n    sliderThumbEvent = SliderThumbEvent;\n\n    tracks = {\n        lower: {\n            size: 0,\n            color: ''\n        },\n        middle: {\n            size: 0,\n            color: ''\n        },\n        upper: {\n            size: 0,\n            color: ''\n        }\n    };\n\n    tooltips = {\n        lower: {\n            visible: false,\n            position: 0,\n            label: ''\n        },\n        upper: {\n            visible: false,\n            position: 0,\n            label: ''\n        }\n    };\n\n    thumbs = {\n        lower: {\n            hover: false,\n            drag: false,\n            position: 0,\n            order: 100,\n            value: /** @type {?} */(( null as number))\n        },\n        upper: {\n            hover: false,\n            drag: false,\n            position: 0,\n            order: 101,\n            value: /** @type {?} */(( null as number))\n        }\n    };\n\n    // store all the ticks to display\n    ticks: SliderTick[] = [];\n    defaultOptions: SliderOptions;\nprivate _lowerThumbDown: Observable<MouseEvent>;\nprivate _upperThumbDown: Observable<MouseEvent>;\nprivate _mouseMove: Observable<MouseEvent> = Observable.fromEvent(document, 'mousemove');\nprivate _mouseUp: Observable<MouseEvent> = Observable.fromEvent(document, 'mouseup');\nprivate _lowerDrag: Subscription;\nprivate _upperDrag: Subscription;\n/**\n * @param {?} colorService\n * @param {?} _changeDetectorRef\n */\nconstructor(colorService: ColorService,\nprivate _changeDetectorRef: ChangeDetectorRef) {\n\n        // setup default options\n        this.defaultOptions = {\n            type: SliderType.Value,\n            handles: {\n                style: SliderStyle.Button,\n                callout: {\n                    trigger: SliderCalloutTrigger.None,\n                    background: colorService.getColor('grey2').toHex(),\n                    color: '#fff',\n                    formatter: (value: number): string | number => value\n                }\n            },\n            track: {\n                height: SliderSize.Wide,\n                min: 0,\n                max: 100,\n                ticks: {\n                    snap: SliderSnap.None,\n                    major: {\n                        show: true,\n                        steps: 10,\n                        labels: true,\n                        formatter: (value: number): string | number => value\n                    },\n                    minor: {\n                        show: true,\n                        steps: 5,\n                        labels: false,\n                        formatter: (value: number): string | number => value\n                    }\n                },\n                colors: {\n                    lower: colorService.getColor('grey6').toHex(),\n                    range: colorService.getColor('accent').setAlpha(0.75).toRgba(),\n                    higher: colorService.getColor('grey6').toHex()\n                }\n            }\n        };\n    }\n/**\n * @return {?}\n */\nngOnInit() {\n\n        // set up event observables\n        this.initObservables();\n\n        this.updateOptions();\n        this.updateValues();\n\n        this.setThumbState(SliderThumb.Lower, false, false);\n        this.setThumbState(SliderThumb.Upper, false, false);\n\n        // emit the initial value\n        this.valueChange.next(this.clone(this.value));\n    }\n/**\n * @return {?}\n */\nngDoCheck() {\n\n        if (this.detectValueChange(this.value, this._value)) {\n            this.updateValues();\n            this._value = this.clone(this.value);\n        }\n    }\n/**\n * @return {?}\n */\nngAfterViewInit() {\n        // persistent tooltips will need positioned correctly at this stage\n        setTimeout(() => {\n            this.updateTooltipPosition(SliderThumb.Lower);\n            this.updateTooltipPosition(SliderThumb.Upper);\n\n            // mark as dirty\n            this._changeDetectorRef.markForCheck();\n        });\n    }\n/**\n * @return {?}\n */\nngOnDestroy() {\n        this._lowerDrag.unsubscribe();\n        this._upperDrag.unsubscribe();\n    }\n/**\n * @param {?} thumb\n * @return {?}\n */\ngetFormattedValue(thumb: SliderThumb): string | number {\n        return this.options.handles.callout.formatter(this.getThumbState(thumb).value);\n    }\n/**\n * @return {?}\n */\nprivate initObservables(): void {\n\n        // when a user begins to drag lower thumb - subscribe to mouse move events until the mouse is lifted\n        this._lowerThumbDown = Observable.fromEvent(this.lowerThumb.nativeElement, 'mousedown');\n\n        this._lowerDrag = this._lowerThumbDown.switchMap(event => {\n            event.preventDefault();\n            return this._mouseMove.takeUntil(this._mouseUp);\n        }).subscribe(event => {\n            event.preventDefault();\n            this.updateThumbPosition(event, SliderThumb.Lower);\n        });\n\n        // when a user begins to drag upper thumb - subscribe to mouse move events until the mouse is lifted\n        this._upperThumbDown = Observable.fromEvent(this.upperThumb.nativeElement, 'mousedown');\n        this._upperDrag = this._upperThumbDown.switchMap(event => {\n            event.preventDefault();\n            return this._mouseMove.takeUntil(this._mouseUp);\n        }).subscribe(event => {\n            event.preventDefault();\n            this.updateThumbPosition(event, SliderThumb.Upper);\n        });\n    }\n/**\n * @param {?} thumb\n * @return {?}\n */\nprivate getThumbState(thumb: SliderThumb) {\n        return thumb === SliderThumb.Lower ? this.thumbs.lower : this.thumbs.upper;\n    }\n/**\n * @param {?} thumb\n * @param {?} hover\n * @param {?} drag\n * @return {?}\n */\nprivate setThumbState(thumb: SliderThumb, hover: boolean, drag: boolean) {\n        if (thumb === SliderThumb.Lower) {\n            this.thumbs.lower.hover = hover;\n            this.thumbs.lower.drag = drag;\n        } else {\n            this.thumbs.upper.hover = hover;\n            this.thumbs.upper.drag = drag;\n        }\n\n        // update the visibility of the tooltips\n        this.updateTooltips(thumb);\n    }\n/**\n * @return {?}\n */\nprivate onDragEnd() {\n        // update thumb state here as we are not dragging any more\n        this.thumbEvent(SliderThumb.Lower, SliderThumbEvent.DragEnd);\n        this.thumbEvent(SliderThumb.Upper, SliderThumbEvent.DragEnd);\n    }\n/**\n * @param {?} thumb\n * @param {?} event\n * @return {?}\n */\nthumbEvent(thumb: SliderThumb, event: SliderThumbEvent): void {\n\n        // get the current thumb state\n        let /** @type {?} */ state = this.getThumbState(thumb);\n\n        // update based upon event\n        switch (event) {\n\n            case SliderThumbEvent.DragStart:\n                state.drag = true;\n                break;\n\n            case SliderThumbEvent.DragEnd:\n                state.drag = false;\n                break;\n\n            case SliderThumbEvent.MouseOver:\n                state.hover = true;\n                break;\n\n            case SliderThumbEvent.MouseLeave:\n                state.hover = false;\n                break;\n\n            case SliderThumbEvent.None:\n                state.drag = false;\n                state.hover = false;\n                break;\n        }\n\n        // update the thumb state\n        this.setThumbState(thumb, state.hover, state.drag);\n    }\n/**\n * @param {?} thumb\n * @return {?}\n */\nprivate updateTooltips(thumb: SliderThumb): void {\n\n        let /** @type {?} */ visible = false;\n        let /** @type {?} */ state = this.getThumbState(thumb);\n\n        switch (this.options.handles.callout.trigger) {\n\n            case SliderCalloutTrigger.Persistent:\n                visible = true;\n                break;\n\n            case SliderCalloutTrigger.Drag:\n                visible = state.drag;\n                break;\n\n            case SliderCalloutTrigger.Hover:\n                visible = state.hover || state.drag;\n                break;\n        }\n\n        // update the state for the corresponding thumb\n        this.getTooltip(thumb).visible = visible;\n\n        // update the tooltip text\n        this.updateTooltipText(thumb);\n\n        // update the tooltip positions\n        this.updateTooltipPosition(thumb);\n    }\n/**\n * @param {?} thumb\n * @return {?}\n */\nprivate updateTooltipText(thumb: SliderThumb) {\n\n        // get the thumb value\n        let /** @type {?} */ state = this.getThumbState(thumb);\n        let /** @type {?} */ tooltip = this.getTooltip(thumb);\n\n        // store the formatted label\n        tooltip.label = this.getFormattedValue(thumb).toString();\n    }\n/**\n * @param {?} thumb\n * @return {?}\n */\nprivate getThumbElement(thumb: SliderThumb): ElementRef {\n        return thumb === SliderThumb.Lower ? this.lowerThumb : this.upperThumb;\n    }\n/**\n * @param {?} thumb\n * @return {?}\n */\nprivate getTooltipElement(thumb: SliderThumb): ElementRef {\n        return thumb === SliderThumb.Lower ? this.lowerTooltip : this.upperTooltip;\n    }\n/**\n * @param {?} thumb\n * @return {?}\n */\nprivate getTooltip(thumb: SliderThumb) {\n        return thumb === SliderThumb.Lower ? this.tooltips.lower : this.tooltips.upper;\n    }\n/**\n * @param {?} thumb\n * @return {?}\n */\nprivate updateTooltipPosition(thumb: SliderThumb) {\n\n        let /** @type {?} */ tooltip = this.getTooltip(thumb);\n\n        // if tooltip is not visible then stop here\n        if (tooltip.visible === false) {\n            return;\n        }\n\n        let /** @type {?} */ tooltipElement = this.getTooltipElement(thumb);\n\n        // get the element widths\n        let /** @type {?} */ thumbWidth: number;\n\n        if (this.options.handles.style === SliderStyle.Button) {\n            thumbWidth = this.options.track.height === SliderSize.Narrow ? 16 : 24;\n        } else {\n            thumbWidth = 2;\n        }\n\n        let /** @type {?} */ tooltipWidth = tooltipElement.nativeElement.offsetWidth;\n\n        // calculate the tooltips new position\n        let /** @type {?} */ tooltipPosition = Math.ceil((tooltipWidth - thumbWidth) / 2);\n\n        // update tooltip position\n        tooltip.position = -tooltipPosition;\n    }\n/**\n * @param {?} value\n * @param {?} min\n * @param {?} max\n * @return {?}\n */\nprivate clamp(value: number, min: number, max: number): number {\n        return Math.min(Math.max(value, min), max);\n    }\n/**\n * @param {?} event\n * @param {?} thumb\n * @return {?}\n */\nprivate updateThumbPosition(event: MouseEvent | TouchEvent, thumb: SliderThumb): void {\n\n        // get event position - either mouse or touch\n        let /** @type {?} */ eventPosition = event instanceof MouseEvent ? event.clientX : event.touches && event.touches.length > 0 ? event.touches[0].clientX : null;\n\n        // if event position is null do nothing\n        if (eventPosition === null) {\n            return;\n        }\n\n        // get mouse position\n        let /** @type {?} */ mouseX = window.pageXOffset + eventPosition;\n\n        // get track size and position\n        let /** @type {?} */ trackBounds = this.track.nativeElement.getBoundingClientRect();\n\n        // restrict the value within the range size\n        let /** @type {?} */ position = this.clamp(mouseX - trackBounds.left, 0, trackBounds.width);\n\n        // get fraction representation of location within the track\n        let /** @type {?} */ fraction = (position / trackBounds.width);\n\n        // convert to value within the range\n        let /** @type {?} */ value = ((this.options.track.max - this.options.track.min) * fraction) + this.options.track.min;\n\n        // ensure value is valid\n        value = this.validateValue(thumb, value);\n\n        // snap to a tick if required\n        value = this.snapToTick(value, thumb);\n\n        // update the value accordingly\n        this.setThumbValue(thumb, value);\n\n        this.updateOrder(thumb);\n        this.updateValues();\n\n        // update tooltip text & position\n        this.updateTooltipText(thumb);\n        this.updateTooltipPosition(thumb);\n\n        // mark as dirty for change detection\n        this._changeDetectorRef.markForCheck();\n    }\n/**\n * @param {?} thumb\n * @return {?}\n */\nprivate updateOrder(thumb: SliderThumb): void {\n\n        let /** @type {?} */ lower = thumb === SliderThumb.Lower ? 101 : 100;\n        let /** @type {?} */ upper = thumb === SliderThumb.Lower ? 100 : 101;\n\n        // The most recently used thumb should be above\n        this.thumbs.lower.order = lower;\n        this.thumbs.upper.order = upper;\n    }\n/**\n * @param {?} value\n * @param {?} thumb\n * @return {?}\n */\nprivate snapToTick(value: number, thumb: SliderThumb): number {\n\n        // get the snap target\n        let /** @type {?} */ snapTarget: SliderSnap = this.options.track.ticks.snap;\n\n        // if snap target is none then return original value\n        if (snapTarget === SliderSnap.None) {\n            return value;\n        }\n\n        // get filtered ticks\n        let /** @type {?} */ ticks: SliderTick[];\n\n        switch (snapTarget) {\n\n            case SliderSnap.Minor:\n                ticks = this.ticks.filter(tick => tick.type === SliderTickType.Minor);\n                break;\n\n            case SliderSnap.Major:\n                ticks = this.ticks.filter(tick => tick.type === SliderTickType.Major);\n                break;\n\n            default:\n                ticks = this.ticks.slice(0);\n        }\n\n        // get the track limit\n        let /** @type {?} */ lowerLimit = this.options.track.min;\n        let /** @type {?} */ upperLimit = this.options.track.max;\n\n        if (this.options.type === SliderType.Range && thumb === SliderThumb.Lower) {\n            upperLimit = this.thumbs.upper.value;\n        }\n\n        if (this.options.type === SliderType.Range && thumb === SliderThumb.Upper) {\n            lowerLimit = this.thumbs.lower.value;\n        }\n\n        // Find the closest tick to the current position\n        let /** @type {?} */ closest = ticks.filter(tick => tick.value >= lowerLimit && tick.value <= upperLimit)\n            .reduceRight((previous, current) => {\n\n                let /** @type {?} */ previousDistance = Math.max(previous.value, value) - Math.min(previous.value, value);\n                let /** @type {?} */ currentDistance = Math.max(current.value, value) - Math.min(current.value, value);\n\n                return previousDistance < currentDistance ? previous : current;\n            });\n\n        return closest.value;\n    }\n/**\n * @param {?} thumb\n * @param {?} value\n * @return {?}\n */\nprivate validateValue(thumb: SliderThumb, value: number): number {\n\n        // if slider is not a range value is always valid providing it is within the chart min and max values\n        if (this.options.type === SliderType.Value) {\n            return Math.max(Math.min(value, this.options.track.max), this.options.track.min);\n        }\n\n        // check if value is with chart ranges\n        if (value > this.options.track.max) {\n            return thumb === SliderThumb.Lower ? Math.min(this.options.track.max, this.thumbs.upper.value) : this.options.track.max;\n        }\n\n        if (value < this.options.track.min) {\n            return thumb === SliderThumb.Upper ? Math.max(this.options.track.min, this.thumbs.lower.value) : this.options.track.min;\n        }\n\n        // otherwise we need to check to make sure lower thumb cannot go above higher and vice versa\n        if (thumb === SliderThumb.Lower) {\n\n            if (this.thumbs.upper.value === null) {\n                return value;\n            }\n\n            return value <= this.thumbs.upper.value ? value : this.thumbs.upper.value;\n        }\n\n        if (thumb === SliderThumb.Upper) {\n\n            if (this.thumbs.lower.value === null) {\n                return value;\n            }\n\n            return value >= this.thumbs.lower.value ? value : this.thumbs.lower.value;\n        }\n    }\n/**\n * @return {?}\n */\nprivate updateOptions() {\n\n        // add in the default options that user hasn't specified\n        this.options = this.deepMerge(this.options || {}, this.defaultOptions);\n\n        this.updateTrackColors();\n        this.updateTicks();\n        this.updateValues();\n    }\n/**\n * @return {?}\n */\nprivate updateValues() {\n\n        if (this.value === undefined || this.value === null) {\n            this.value = 0;\n        }\n\n        let /** @type {?} */ lowerValue = typeof this.value === 'number' ? this.value : this.value.low;\n        let /** @type {?} */ upperValue = typeof this.value === 'number' ? this.value : this.value.high;\n\n        // validate values\n        lowerValue = this.validateValue(SliderThumb.Lower, Number(lowerValue.toFixed(4)));\n        upperValue = this.validateValue(SliderThumb.Upper, Number(upperValue.toFixed(4)));\n\n        // calculate the positions as percentages\n        let /** @type {?} */ lowerPosition = (((lowerValue - this.options.track.min) / (this.options.track.max - this.options.track.min)) * 100);\n        let /** @type {?} */ upperPosition = (((upperValue - this.options.track.min) / (this.options.track.max - this.options.track.min)) * 100);\n\n        // update thumb positions\n        this.thumbs.lower.position = lowerPosition;\n        this.thumbs.upper.position = upperPosition;\n\n        // calculate the track sizes\n        this.tracks.lower.size = lowerPosition;\n        this.tracks.middle.size = upperPosition - lowerPosition;\n        this.tracks.upper.size = this.options.type === SliderType.Value ? 100 - lowerPosition : 100 - upperPosition;\n\n        // update the value input\n        this.setValue(lowerValue, upperValue);\n    }\n/**\n * @param {?} low\n * @param {?=} high\n * @return {?}\n */\nprivate setValue(low: number, high?: number): void {\n\n        this.thumbs.lower.value = low;\n        this.thumbs.upper.value = high;\n\n        let /** @type {?} */ previousValue = this.clone(this._value);\n\n        this.value = this.options.type === SliderType.Value ? low : { low: low, high: high };\n\n        // call the event emitter if changes occured\n        if (this.detectValueChange(this.value, previousValue)) {\n            this.valueChange.emit(this.clone(this.value));\n\n            this.updateTooltipText(SliderThumb.Lower);\n            this.updateTooltipText(SliderThumb.Upper);\n        } else {\n            this.valueChange.emit(this.clone(this.value));\n        }\n    }\n/**\n * @param {?} thumb\n * @param {?} value\n * @return {?}\n */\nprivate setThumbValue(thumb: SliderThumb, value: number) {\n\n        // update the thumb value\n        this.getThumbState(thumb).value = value;\n\n        // forward these changes to the value\n        this.setValue(this.thumbs.lower.value, this.thumbs.upper.value);\n    }\n/**\n * @return {?}\n */\nprivate updateTicks() {\n\n        // get tick options\n        let /** @type {?} */ majorOptions = this.options.track.ticks.major;\n        let /** @type {?} */ minorOptions = this.options.track.ticks.minor;\n\n        // check if we should show ticks\n        if (majorOptions.show === false && minorOptions.show === false) {\n            this.ticks = [];\n        }\n\n        // create ticks for both major and minor\n        let /** @type {?} */ majorTicks = this.getTicks(majorOptions, SliderTickType.Major);\n        let /** @type {?} */ minorTicks = this.getTicks(minorOptions, SliderTickType.Minor);\n\n        // remove any minor ticks that are on a major interval\n        this.ticks = this.unionTicks(majorTicks, minorTicks);\n    }\n/**\n * @return {?}\n */\nprivate updateTrackColors() {\n\n        // get colors for each part of the track\n        let /** @type {?} */ lower = this.options.track.colors.lower;\n        let /** @type {?} */ range = this.options.track.colors.range;\n        let /** @type {?} */ higher = this.options.track.colors.higher;\n\n        // update the controller value\n        this.tracks.lower.color = typeof lower === 'string' ? lower : `linear-gradient(to right, ${lower.join(', ')})`;\n        this.tracks.middle.color = typeof range === 'string' ? range : `linear-gradient(to right, ${range.join(', ')})`;\n        this.tracks.upper.color = typeof higher === 'string' ? higher : `linear-gradient(to right, ${higher.join(', ')})`;\n    }\n/**\n * @param {?} steps\n * @return {?}\n */\nprivate getSteps(steps: number | number[]): number[] {\n\n        // if they are already an array just return it\n        if (steps instanceof Array) {\n            return steps;\n        }\n\n        let /** @type {?} */ output: number[] = [];\n\n        // otherwise calculate the steps\n        for (let /** @type {?} */ idx = this.options.track.min; idx <= this.options.track.max; idx += steps) {\n            output.push(idx);\n        }\n\n        return output;\n    }\n/**\n * @param {?} options\n * @param {?} type\n * @return {?}\n */\nprivate getTicks(options: SliderTickOptions, type: SliderTickType): SliderTick[] {\n\n        // create an array to store the ticks and step points\n        let /** @type {?} */ steps = this.getSteps(options.steps);\n\n        // get some chart options\n        let /** @type {?} */ min = this.options.track.min;\n        let /** @type {?} */ max = this.options.track.max;\n\n        // convert each step to a slider tick and remove invalid ticks\n        return steps.map(step => {\n            return {\n                showTicks: options.show,\n                showLabels: options.labels,\n                type: type,\n                position: ((step - min) / (max - min)) * 100,\n                value: step,\n                label: options.formatter(step)\n            };\n        }).filter(tick => tick.position >= 0 && tick.position <= 100);\n    }\n/**\n * @param {?} majorTicks\n * @param {?} minorTicks\n * @return {?}\n */\nprivate unionTicks(majorTicks: SliderTick[], minorTicks: SliderTick[]): SliderTick[] {\n\n        // get all ticks combined removing any minor ticks with the same value as major ticks\n        return majorTicks.concat(minorTicks)\n            .filter((tick, index, array) => tick.type === SliderTickType.Major || !array.find(tk => tk.type === SliderTickType.Major && tk.position === tick.position))\n            .sort((t1, t2) => t1.value - t2.value);\n    }\n/**\n * @param {?} destination\n * @param {?} source\n * @return {?}\n */\nprivate deepMerge(destination: any, source: any) {\n\n        // loop though all of the properties in the source object\n        for (let /** @type {?} */ prop in source) {\n\n            // check if the destination object has the property\n            if (!destination.hasOwnProperty(prop)) {\n                // copy the property across\n                destination[prop] = source[prop];\n                continue;\n            }\n\n            // if the property exists and is not an object then skip\n            if (typeof destination[prop] !== 'object') {\n                continue;\n            }\n\n            // check if property is an array\n            if (destination[prop] instanceof Array) {\n                continue;\n            }\n\n            // if it is an object then perform a recursive check\n            destination[prop] = this.deepMerge(destination[prop], source[prop]);\n        }\n\n        return destination;\n    }\n/**\n * @param {?} value1\n * @param {?} value2\n * @return {?}\n */\nprivate detectValueChange(value1: number | SliderValue, value2: number | SliderValue): boolean {\n\n        // compare two slider values\n        if (this.isSliderValue(value1) && this.isSliderValue(value2)) {\n            \n            // references to the objects in the correct types\n            const /** @type {?} */ obj1 = /** @type {?} */(( value1 as SliderValue));\n            const /** @type {?} */ obj2 = /** @type {?} */(( value2 as SliderValue));\n            \n            return obj1.low !== obj2.low || obj1.high !== obj2.high;\n        }\n\n        // if not a slider value - should be number of nullable type - compare normally\n        return value1 !== value2;\n    }\n/**\n * Determines whether or not an object conforms to the\n * SliderValue interface.\n * @param {?} value - The object to check - this must be type any\n * @return {?}\n */\nprivate isSliderValue(value: any): boolean {\n\n        // check if is an object\n        if (typeof value !== 'object') {\n            return false;\n        }\n\n        // next check if it contains the necessary properties\n        return 'low' in value && 'high' in value;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nprivate clone(value: number | SliderValue): number | SliderValue {\n\n        // if it is not an object simply return the value\n        if (typeof value !== 'object') {\n            return value;\n        }\n\n        // create a new object from the existing one\n        const /** @type {?} */ instance =  Object.assign({}, value);\n\n        // delete remove the value from the old object\n        value = undefined;\n\n        // return the new instance of the object\n        return instance;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-slider',\n    template: `\n      <div class=\"track\" #track [class.narrow]=\"options.track.height === sliderSize.Narrow\" [class.wide]=\"options.track.height === sliderSize.Wide\" [class.range]=\"options.type === sliderType.Range\">\n\n          <!-- Section Beneath Lower Thumb -->\n          <div class=\"track-section track-lower\" [style.flex-grow]=\"tracks.lower.size\" [style.background]=\"tracks.lower.color\"></div>\n\n          <!-- Lower Thumb Button / Line -->\n          <div class=\"thumb lower\" #lowerThumb [style.left.%]=\"thumbs.lower.position\" [class.active]=\"thumbs.lower.drag\" [style.z-index]=\"thumbs.lower.order\" [class.button]=\"options.handles.style === sliderStyle.Button\"\n              [class.line]=\"options.handles.style === sliderStyle.Line\" [class.narrow]=\"options.track.height === sliderSize.Narrow\"\n              [class.wide]=\"options.track.height === sliderSize.Wide\" (mouseenter)=\"thumbEvent(sliderThumb.Lower, sliderThumbEvent.MouseOver)\"\n              (mouseleave)=\"thumbEvent(sliderThumb.Lower, sliderThumbEvent.MouseLeave)\" (mousedown)=\"thumbEvent(sliderThumb.Lower, sliderThumbEvent.DragStart)\">\n\n              <!-- Lower Thumb Callout -->\n              <div class=\"tooltip top tooltip-lower\" #lowerTooltip [style.opacity]=\"tooltips.lower.visible ? 1 : 0\" [style.left.px]=\"tooltips.lower.position\">\n                  <div class=\"tooltip-arrow\" [style.border-top-color]=\"options.handles.callout.background\"></div>\n                  <div class=\"tooltip-inner\" [style.background-color]=\"options.handles.callout.background\" [style.color]=\"options.handles.callout.color\">\n                      {{ tooltips.lower.label }}\n                  </div>\n              </div>\n\n          </div>\n\n          <!-- Section of Track Between Lower and Upper Thumbs -->\n          <div class=\"track-section track-range\" *ngIf=\"options.type === sliderType.Range\" [style.flex-grow]=\"tracks.middle.size\" [style.background]=\"tracks.middle.color\">\n          </div>\n\n          <!-- Upper Thumb Button / Line -->\n          <div class=\"thumb upper\" #upperThumb [hidden]=\"options.type !== sliderType.Range\" [class.active]=\"thumbs.upper.drag\" [style.left.%]=\"thumbs.upper.position\" [style.z-index]=\"thumbs.upper.order\"\n              [class.button]=\"options.handles.style === sliderStyle.Button\" [class.line]=\"options.handles.style === sliderStyle.Line\"\n              [class.narrow]=\"options.track.height === sliderSize.Narrow\" [class.wide]=\"options.track.height === sliderSize.Wide\" (mouseenter)=\"thumbEvent(sliderThumb.Upper, sliderThumbEvent.MouseOver)\"\n              (mouseleave)=\"thumbEvent(sliderThumb.Upper, sliderThumbEvent.MouseLeave)\" (mousedown)=\"thumbEvent(sliderThumb.Upper, sliderThumbEvent.DragStart)\">\n\n              <!-- Upper Thumb Callout -->\n              <div class=\"tooltip top tooltip-upper\" #upperTooltip [style.opacity]=\"tooltips.upper.visible ? 1 : 0\" [style.left.px]=\"tooltips.upper.position\">\n                  <div class=\"tooltip-arrow\" [style.border-top-color]=\"options.handles.callout.background\"></div>\n                  <div class=\"tooltip-inner\" *ngIf=\"options.type === sliderType.Range\" [style.background-color]=\"options.handles.callout.background\"\n                      [style.color]=\"options.handles.callout.color\">\n                      {{ tooltips.upper.label }}\n                  </div>\n              </div>\n          </div>\n\n          <!-- Section of Track Abover Upper Thumb -->\n          <div class=\"track-section track-higher\" [style.flex-grow]=\"tracks.upper.size\" [style.background]=\"tracks.upper.color\"></div>\n\n      </div>\n\n      <!-- Chart Ticks and Tick Labels -->\n      <div class=\"tick-container\" *ngIf=\"options.track.ticks.major.show || options.track.ticks.minor.show\" [class.show-labels]=\"options.track.ticks.major.labels || options.track.ticks.minor.labels\">\n\n          <div class=\"tick\" *ngFor=\"let tick of ticks\" [class.major]=\"tick.type === sliderTickType.Major\" [class.minor]=\"tick.type === sliderTickType.Minor\"\n              [style.left.%]=\"tick.position\" [hidden]=\"!tick.showTicks\">\n              <div class=\"tick-indicator\"></div>\n              <div class=\"tick-label\" [hidden]=\"!tick.showLabels\">{{ tick.label }}</div>\n          </div>\n      </div>\n    `,\n    changeDetection: ChangeDetectionStrategy.OnPush\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ColorService, },\n{type: ChangeDetectorRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'value': [{ type: Input },],\n'options': [{ type: Input },],\n'valueChange': [{ type: Output },],\n'lowerThumb': [{ type: ViewChild, args: ['lowerThumb', ] },],\n'lowerTooltip': [{ type: ViewChild, args: ['lowerTooltip', ] },],\n'upperThumb': [{ type: ViewChild, args: ['upperThumb', ] },],\n'upperTooltip': [{ type: ViewChild, args: ['upperTooltip', ] },],\n'track': [{ type: ViewChild, args: ['track', ] },],\n'onDragEnd': [{ type: HostListener, args: ['document:mouseup', [], ] },],\n};\n}\n\nfunction SliderComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nSliderComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSliderComponent.ctorParameters;\n/** @type {?} */\nSliderComponent.propDecorators;\n/** @type {?} */\nSliderComponent.prototype.value;\n/** @type {?} */\nSliderComponent.prototype.options;\n/** @type {?} */\nSliderComponent.prototype.valueChange;\n/** @type {?} */\nSliderComponent.prototype.lowerThumb;\n/** @type {?} */\nSliderComponent.prototype.lowerTooltip;\n/** @type {?} */\nSliderComponent.prototype.upperThumb;\n/** @type {?} */\nSliderComponent.prototype.upperTooltip;\n/** @type {?} */\nSliderComponent.prototype.track;\n/** @type {?} */\nSliderComponent.prototype._value;\n/** @type {?} */\nSliderComponent.prototype.sliderType;\n/** @type {?} */\nSliderComponent.prototype.sliderStyle;\n/** @type {?} */\nSliderComponent.prototype.sliderSize;\n/** @type {?} */\nSliderComponent.prototype.sliderThumb;\n/** @type {?} */\nSliderComponent.prototype.sliderTickType;\n/** @type {?} */\nSliderComponent.prototype.sliderThumbEvent;\n/** @type {?} */\nSliderComponent.prototype.tracks;\n/** @type {?} */\nSliderComponent.prototype.tooltips;\n/** @type {?} */\nSliderComponent.prototype.thumbs;\n/** @type {?} */\nSliderComponent.prototype.ticks;\n/** @type {?} */\nSliderComponent.prototype.defaultOptions;\n/** @type {?} */\nSliderComponent.prototype._lowerThumbDown;\n/** @type {?} */\nSliderComponent.prototype._upperThumbDown;\n/** @type {?} */\nSliderComponent.prototype._mouseMove;\n/** @type {?} */\nSliderComponent.prototype._mouseUp;\n/** @type {?} */\nSliderComponent.prototype._lowerDrag;\n/** @type {?} */\nSliderComponent.prototype._upperDrag;\n/** @type {?} */\nSliderComponent.prototype._changeDetectorRef;\n}\n\nexport type SliderType = number;\nexport let SliderType: any = {};\nSliderType.Value = 0;\nSliderType.Range = 1;\nSliderType[SliderType.Value] = \"Value\";\nSliderType[SliderType.Range] = \"Range\";\n\nexport type SliderStyle = number;\nexport let SliderStyle: any = {};\nSliderStyle.Button = 0;\nSliderStyle.Line = 1;\nSliderStyle[SliderStyle.Button] = \"Button\";\nSliderStyle[SliderStyle.Line] = \"Line\";\n\nexport type SliderSize = number;\nexport let SliderSize: any = {};\nSliderSize.Narrow = 0;\nSliderSize.Wide = 1;\nSliderSize[SliderSize.Narrow] = \"Narrow\";\nSliderSize[SliderSize.Wide] = \"Wide\";\n\nexport type SliderCalloutTrigger = number;\nexport let SliderCalloutTrigger: any = {};\nSliderCalloutTrigger.None = 0;\nSliderCalloutTrigger.Hover = 1;\nSliderCalloutTrigger.Drag = 2;\nSliderCalloutTrigger.Persistent = 3;\nSliderCalloutTrigger[SliderCalloutTrigger.None] = \"None\";\nSliderCalloutTrigger[SliderCalloutTrigger.Hover] = \"Hover\";\nSliderCalloutTrigger[SliderCalloutTrigger.Drag] = \"Drag\";\nSliderCalloutTrigger[SliderCalloutTrigger.Persistent] = \"Persistent\";\n\n\nexport interface SliderValue {\n    low: number;\n    high: number;\n}\nexport type SliderSnap = number;\nexport let SliderSnap: any = {};\nSliderSnap.None = 0;\nSliderSnap.Minor = 1;\nSliderSnap.Major = 2;\nSliderSnap.All = 3;\nSliderSnap[SliderSnap.None] = \"None\";\nSliderSnap[SliderSnap.Minor] = \"Minor\";\nSliderSnap[SliderSnap.Major] = \"Major\";\nSliderSnap[SliderSnap.All] = \"All\";\n\nexport type SliderTickType = number;\nexport let SliderTickType: any = {};\nSliderTickType.Minor = 0;\nSliderTickType.Major = 1;\nSliderTickType[SliderTickType.Minor] = \"Minor\";\nSliderTickType[SliderTickType.Major] = \"Major\";\n\n\nexport interface SliderOptions {\n    type?: SliderType;\n    handles?: SliderHandleOptions;\n    track?: SliderTrackOptions;\n}\n\nexport interface SliderHandleOptions {\n    style?: SliderStyle;\n    callout?: SliderCallout;\n}\n\nexport interface SliderTrackOptions {\n    height?: SliderSize;\n    min?: number;\n    max?: number;\n    ticks?: SliderTicksOptions;\n    colors?: SliderTrackColors;\n}\n\nexport interface SliderTicksOptions {\n    snap?: SliderSnap;\n    major?: SliderTickOptions;\n    minor?: SliderTickOptions;\n}\n\nexport interface SliderTickOptions {\n    show?: boolean;\n    steps?: number | number[];\n    labels?: boolean;\n    formatter?: (value: number) => string | number;\n}\n\nexport interface SliderTick {\n    showTicks: boolean;\n    showLabels: boolean;\n    type: SliderTickType;\n    position: number;\n    value: number;\n    label: string | number;\n}\n\nexport interface SliderTrackColors {\n    lower?: string | string[];\n    range?: string | string[];\n    higher?: string | string[];\n}\n\nexport interface SliderCallout {\n    trigger?: SliderCalloutTrigger;\n    background?: string;\n    color?: string;\n    formatter?: (value: number) => string | number;\n}\nexport type SliderThumbEvent = number;\nexport let SliderThumbEvent: any = {};\nSliderThumbEvent.None = 0;\nSliderThumbEvent.MouseOver = 1;\nSliderThumbEvent.MouseLeave = 2;\nSliderThumbEvent.DragStart = 3;\nSliderThumbEvent.DragEnd = 4;\nSliderThumbEvent[SliderThumbEvent.None] = \"None\";\nSliderThumbEvent[SliderThumbEvent.MouseOver] = \"MouseOver\";\nSliderThumbEvent[SliderThumbEvent.MouseLeave] = \"MouseLeave\";\nSliderThumbEvent[SliderThumbEvent.DragStart] = \"DragStart\";\nSliderThumbEvent[SliderThumbEvent.DragEnd] = \"DragEnd\";\n\nexport type SliderThumb = number;\nexport let SliderThumb: any = {};\nSliderThumb.Lower = 0;\nSliderThumb.Upper = 1;\nSliderThumb[SliderThumb.Lower] = \"Lower\";\nSliderThumb[SliderThumb.Upper] = \"Upper\";\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ColorServiceModule } from '../../services/color/index';\n\nimport { SliderComponent } from './slider.component';\nexport class SliderModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        CommonModule,\n        ColorServiceModule\n    ],\n    exports: [SliderComponent],\n    declarations: [SliderComponent]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction SliderModule_tsickle_Closure_declarations() {\n/** @type {?} */\nSliderModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSliderModule.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Input } from '@angular/core';\nimport { ColorService } from '../../services/color/index';\nimport { ColorIdentifier } from '../../index';\nexport class SparkComponent {\n\n    values: number[] = [];\n\n     trackColor: string = this._colorService.getColor('primary').setAlpha(0.2).toRgba();\n     barColor: string | string[] = this._colorService.getColor('primary').toHex();\n     barHeight: number = 10;\n     inlineLabel: string;\n     topLeftLabel: string;\n     topRightLabel: string;\n     bottomLeftLabel: string;\n     bottomRightLabel: string;\n     tooltip: string;\n/**\n * @param {?} themeName\n * @return {?}\n */\nset theme(themeName: ColorIdentifier) {\n        this.trackColor = this._colorService.getColor(themeName).setAlpha(0.2).toRgba();\n        this.barColor = this._colorService.getColor(themeName).toHex();\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset value(value: number | number[]) {\n\n        // ensure 'value' is an array at this point\n        const /** @type {?} */ values = Array.isArray(value) ? value : [value];\n\n        // get the total value of all lines\n        let /** @type {?} */ total = Math.max(values.reduce((previous, current) => previous + current, 0), 100);\n\n        // figure out the percentages for each spark line\n        this.values = values.map(val => (val / total) * 100);\n\n        // ensure 'barColor' is an array\n        this.barColor = Array.isArray(this.barColor) ? this.barColor : [this.barColor];\n    }\n/**\n * @return {?}\n */\nget value() {\n        return this.values;\n    }\n/**\n * @param {?} _colorService\n */\nconstructor(private _colorService: ColorService) { \n\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-spark',\n    template: `\n      <!-- Inline Spark Chart -->\n      <div *ngIf=\"inlineLabel\" class=\"ux-spark-inline-label-container\">\n\n          <div class=\"ux-spark-inline-label-left\" [innerHtml]=\"inlineLabel\"></div>\n\n          <div class=\"ux-spark-line\">\n\n              <div class=\"ux-spark-top-container\" *ngIf=\"topLeftLabel || topRightLabel\">\n                  <div class=\"ux-spark-label-top-left\" *ngIf=\"topLeftLabel\" [innerHtml]=\"topLeftLabel\"></div>\n                  <div class=\"ux-spark-label-top-right\" *ngIf=\"topRightLabel\" [innerHtml]=\"topRightLabel\"></div>\n              </div>\n\n              <div class=\"ux-spark ux-inline\" [style.height.px]=\"barHeight\" [style.backgroundColor]=\"trackColor\" [tooltip]=\"tooltip\">\n                  <div class=\"ux-spark-bar\" *ngFor=\"let line of values; let idx = index;\" [style.width.%]=\"line\" [style.backgroundColor]=\"barColor[idx]\"></div>\n              </div>\n\n              <div class=\"ux-spark-bottom-container\" *ngIf=\"bottomLeftLabel || bottomRightLabel\">\n                  <div class=\"ux-spark-label-bottom-left\" *ngIf=\"bottomLeftLabel\" [innerHtml]=\"bottomLeftLabel\"></div>\n                  <div class=\"ux-spark-label-bottom-right\" *ngIf=\"bottomRightLabel\" [innerHtml]=\"bottomRightLabel\"></div>\n              </div>\n\n          </div>\n      </div>\n\n      <!-- End Inline Spark Chart -->\n\n\n      <!-- Non Inline Spark Chart -->\n      <div *ngIf=\"!inlineLabel\">\n\n          <div class=\"ux-spark-top-container\" *ngIf=\"topLeftLabel || topRightLabel\">\n              <div class=\"ux-spark-label-top-left\" *ngIf=\"topLeftLabel\" [innerHtml]=\"topLeftLabel\"></div>\n              <div class=\"ux-spark-label-top-right\" *ngIf=\"topRightLabel\" [innerHtml]=\"topRightLabel\"></div>\n          </div>\n\n          <div class=\"ux-spark\" [class.ux-spark-multi-value]=\"values.length > 0\" [style.height.px]=\"barHeight\" [style.backgroundColor]=\"trackColor\"\n              [tooltip]=\"tooltip\">\n              <div class=\"ux-spark-bar\" *ngFor=\"let line of value; let idx = index;\" [style.width.%]=\"line\" [style.backgroundColor]=\"barColor[idx]\"></div>\n          </div>\n\n          <div class=\"ux-spark-bottom-container\" *ngIf=\"bottomLeftLabel || bottomRightLabel\">\n              <div class=\"ux-spark-label-bottom-left\" *ngIf=\"bottomLeftLabel\" [innerHtml]=\"bottomLeftLabel\"></div>\n              <div class=\"ux-spark-label-bottom-right\" *ngIf=\"bottomRightLabel\" [innerHtml]=\"bottomRightLabel\"></div>\n          </div>\n      </div>\n\n      <!-- End Non Inline Spark Chart -->\n    `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ColorService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'trackColor': [{ type: Input },],\n'barColor': [{ type: Input },],\n'barHeight': [{ type: Input },],\n'inlineLabel': [{ type: Input },],\n'topLeftLabel': [{ type: Input },],\n'topRightLabel': [{ type: Input },],\n'bottomLeftLabel': [{ type: Input },],\n'bottomRightLabel': [{ type: Input },],\n'tooltip': [{ type: Input },],\n'theme': [{ type: Input },],\n'value': [{ type: Input },],\n};\n}\n\nfunction SparkComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nSparkComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSparkComponent.ctorParameters;\n/** @type {?} */\nSparkComponent.propDecorators;\n/** @type {?} */\nSparkComponent.prototype.values;\n/** @type {?} */\nSparkComponent.prototype.trackColor;\n/** @type {?} */\nSparkComponent.prototype.barColor;\n/** @type {?} */\nSparkComponent.prototype.barHeight;\n/** @type {?} */\nSparkComponent.prototype.inlineLabel;\n/** @type {?} */\nSparkComponent.prototype.topLeftLabel;\n/** @type {?} */\nSparkComponent.prototype.topRightLabel;\n/** @type {?} */\nSparkComponent.prototype.bottomLeftLabel;\n/** @type {?} */\nSparkComponent.prototype.bottomRightLabel;\n/** @type {?} */\nSparkComponent.prototype.tooltip;\n/** @type {?} */\nSparkComponent.prototype._colorService;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { SparkComponent } from './spark.component';\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\nimport { ColorServiceModule } from '../../services/color/index';\nexport class SparkModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        CommonModule,\n        ColorServiceModule,\n        TooltipModule.forRoot()\n    ],\n    exports: [SparkComponent],\n    declarations: [SparkComponent]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction SparkModule_tsickle_Closure_declarations() {\n/** @type {?} */\nSparkModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSparkModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Input, Output, forwardRef, EventEmitter } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\n\nconst /** @type {?} */ TOGGLESWITCH_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => ToggleSwitchComponent),\n    multi: true\n};\nexport class ToggleSwitchComponent implements ControlValueAccessor {\n     name: string = '';\n     disabled: boolean = false;\n     clickable: boolean = true;\n\n     valueChange: EventEmitter<any> = new EventEmitter<any>();\n/**\n * @return {?}\n */\nget value() {\n        return this._value;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset value(value: boolean) {\n        this._value = value;\n\n        // Update value output\n        this.valueChange.emit(value);\n\n        // Notify ngModel\n        this.onChangeCallback(value);\n    }\nprivate _value: boolean = false;\n\n    onTouchedCallback: () => void = () => { };\n    onChangeCallback: (_: any) => void = () => { };\n/**\n * @return {?}\n */\ntoggleChecked() {\n        if (!this.disabled && this.clickable) {\n            this.value = !this.value;\n        }\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nkeydown(event: any) {\n        // if spacebar is pressed toggle state\n        if (event.keyCode === 32) {\n            this.toggleChecked();\n            event.stopPropagation();\n            event.preventDefault();\n        }\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nwriteValue(value: any) {\n        this.value = !!value;\n    }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnChange(fn: any) {\n        this.onChangeCallback = fn;\n    }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnTouched(fn: any) {\n        this.onTouchedCallback = fn;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-toggleswitch',\n    template: `\n      <div class=\"ux-toggleswitch\" \n        tabindex=\"0\"\n        (keydown)=\"keydown($event)\"\n        [class.checked]=\"value === true\"\n        [class.disabled]=\"disabled === true\">\n\n        <span class=\"ux-toggleswitch-bg\"></span>\n  \n        <span class=\"ux-toggleswitch-nub\"></span>\n\n        <input type=\"checkbox\" \n          role=\"checkbox\"\n          [name]=\"name\" \n          [checked]=\"value === true\"\n          [disabled]=\"disabled === true\"\n          tabindex=\"-1\" />\n      </div>\n\n      <div class=\"ux-toggleswitch-content\">\n        <ng-content></ng-content>\n      </div>\n    `,\n    providers: [TOGGLESWITCH_VALUE_ACCESSOR],\n    host: {\n        '(click)': 'toggleChecked()'\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'name': [{ type: Input },],\n'disabled': [{ type: Input },],\n'clickable': [{ type: Input },],\n'valueChange': [{ type: Output },],\n'value': [{ type: Input },],\n};\n}\n\nfunction ToggleSwitchComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nToggleSwitchComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nToggleSwitchComponent.ctorParameters;\n/** @type {?} */\nToggleSwitchComponent.propDecorators;\n/** @type {?} */\nToggleSwitchComponent.prototype.name;\n/** @type {?} */\nToggleSwitchComponent.prototype.disabled;\n/** @type {?} */\nToggleSwitchComponent.prototype.clickable;\n/** @type {?} */\nToggleSwitchComponent.prototype.valueChange;\n/** @type {?} */\nToggleSwitchComponent.prototype._value;\n/** @type {?} */\nToggleSwitchComponent.prototype.onTouchedCallback;\n/** @type {?} */\nToggleSwitchComponent.prototype.onChangeCallback;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { ToggleSwitchComponent } from './toggleswitch.component';\nexport class ToggleSwitchModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [ FormsModule ],\n    exports: [ ToggleSwitchComponent ],\n    declarations: [ ToggleSwitchComponent ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ToggleSwitchModule_tsickle_Closure_declarations() {\n/** @type {?} */\nToggleSwitchModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nToggleSwitchModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { Observer } from 'rxjs/Observer';\nimport'rxjs/add/observable/concat';\nexport class FrameExtractionService {\n/**\n * @param {?} source\n * @return {?}\n */\nprivate createVideoPlayer(source: string): HTMLVideoElement {\n        let /** @type {?} */ videoPlayer = document.createElement('video');\n        videoPlayer.preload = 'auto';\n        videoPlayer.src = source;\n        return videoPlayer;\n    }\n/**\n * @param {?} width\n * @param {?} height\n * @return {?}\n */\nprivate createCanvas(width: number, height: number): HTMLCanvasElement {\n        let /** @type {?} */ canvas = document.createElement('canvas');\n        canvas.width = width;\n        canvas.height = height;\n        return canvas;\n    }\n/**\n * @param {?} videoPlayer\n * @param {?} time\n * @return {?}\n */\nprivate goToFrame(videoPlayer: HTMLVideoElement, time: number): Observable<number> {\n        videoPlayer.currentTime = time;\n        return Observable.fromEvent(videoPlayer, time === 0 ? 'loadeddata' : 'seeked');\n    }\n/**\n * @param {?} videoPlayer\n * @param {?} canvas\n * @param {?} time\n * @param {?=} width\n * @param {?=} height\n * @return {?}\n */\nprivate getThumbnail(videoPlayer: HTMLVideoElement, canvas: HTMLCanvasElement, time: number, width: number = 160, height: number = 90): Observable<ExtractedFrame> {\n\n        return Observable.create((observer: Observer<ExtractedFrame>) => {\n\n            // go to specified frame\n            let /** @type {?} */ subscription = this.goToFrame(videoPlayer, time).subscribe((event: any) => {\n                // create image from current frame\n                canvas.getContext('2d').drawImage(videoPlayer, 0, 0, width, height);\n                observer.next({ image: canvas.toDataURL(), width: width, height: height, time: time });\n                observer.complete();\n                subscription.unsubscribe();\n            });\n        });\n    }\n/**\n * @param {?} source\n * @param {?} width\n * @param {?} height\n * @param {?} time\n * @return {?}\n */\ngetFrameThumbnail(source: string, width: number, height: number, time: number): Observable<ExtractedFrame> {\n\n        // create required elements\n        let /** @type {?} */ videoPlayer = this.createVideoPlayer(source);\n        let /** @type {?} */ canvas = this.createCanvas(width, height);\n\n        let /** @type {?} */ frameSubscription = this.getThumbnail(videoPlayer, canvas, time, width, height);\n\n        // ensure we release memory after we are finished        \n        frameSubscription.subscribe(null, null, () => {\n            videoPlayer = null;\n            canvas = null;\n        });\n\n        return frameSubscription;\n    }\n/**\n * @param {?} source\n * @param {?} width\n * @param {?} height\n * @param {?} start\n * @param {?} end\n * @param {?=} skip\n * @return {?}\n */\ngetFrameThumbnails(source: string, width: number, height: number, start: number, end: number, skip: number = 5): Observable<ExtractedFrame> {\n\n        // create required elements\n        let /** @type {?} */ videoPlayer = this.createVideoPlayer(source);\n        let /** @type {?} */ canvas = this.createCanvas(width, height);\n\n        return Observable.create((observer: Observer<ExtractedFrame>) => {\n\n            Observable.fromEvent(videoPlayer, 'loadedmetadata').subscribe(() => {\n\n                // calculate the frames required\n                let /** @type {?} */ frames = [];\n\n                for (let /** @type {?} */ idx = start; idx < end; idx += skip) {\n                    frames.push(this.getThumbnail(videoPlayer, canvas, idx, width, height));\n                }\n\n                Observable.concat(...frames).subscribe((frame: ExtractedFrame) => observer.next(frame), null, () => {\n                    videoPlayer = null;\n                    canvas = null;\n                    observer.complete();\n                });\n            });\n\n        });\n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction FrameExtractionService_tsickle_Closure_declarations() {\n/** @type {?} */\nFrameExtractionService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFrameExtractionService.ctorParameters;\n}\n\n\nexport interface ExtractedFrame {\n    image: string;\n    width: number;\n    height: number;\n    time: number;\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\n\nimport { FrameExtractionService } from './frame-extraction.service';\nexport class FrameExtractionModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    providers: [FrameExtractionService],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction FrameExtractionModule_tsickle_Closure_declarations() {\n/** @type {?} */\nFrameExtractionModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFrameExtractionModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { MediaPlayerType } from './media-player.component';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { Subject } from 'rxjs/Subject';\nimport { Observer } from 'rxjs/Observer';\nimport { FrameExtractionService, ExtractedFrame } from '../../services/frame-extraction/index';\nexport class MediaPlayerService {\n\n    source: string;\n    type: MediaPlayerType = 'video';\n    loaded: boolean = false;\n\n    /*\n        Create observables for media player events\n    */\n    playing: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\n    initEvent: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\n    abortEvent: Subject<void> = new Subject<void>();\n    canPlayEvent: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\n    canPlayThroughEvent: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\n    durationChangeEvent: Subject<number> = new Subject<number>();\n    endedEvent: Subject<void> = new Subject<void>();\n    errorEvent: Subject<any> = new Subject<any>();\n    loadedDataEvent: Subject<any> = new Subject<any>();\n    loadedMetadataEvent: Subject<any> = new Subject<any>();\n    loadStartEvent: Subject<void> = new Subject<void>();\n    pauseEvent: Subject<void> = new Subject<void>();\n    playEvent: Subject<void> = new Subject<void>();\n    playingEvent: Subject<boolean> = new Subject<boolean>();\n    rateChangeEvent: Subject<number> = new Subject<number>();\n    seekedEvent: Subject<number> = new Subject<number>();\n    seekingEvent: Subject<number> = new Subject<number>();\n    stalledEvent: Subject<void> = new Subject<void>();\n    suspendEvent: Subject<void> = new Subject<void>();\n    timeUpdateEvent: Subject<number> = new Subject<number>();\n    volumeChangeEvent: Subject<number> = new Subject<number>();\n    waitingEvent: Subject<void> = new Subject<void>();\n    mediaClickEvent: Subject<MouseEvent> = new Subject<MouseEvent>();\n    fullscreenEvent: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\n    quietModeEvent: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\n    progressEvent: Observable<TimeRanges> = Observable.create((observer: Observer<TimeRanges>) => {\n\n        // repeat until the whole video has fully loaded\n        let /** @type {?} */ interval = setInterval(() => {\n\n            let /** @type {?} */ buffered = /** @type {?} */(( this._mediaPlayer.buffered as TimeRanges));\n            observer.next(buffered);\n\n            if (buffered.length === 1 && buffered.start(0) === 0 && buffered.end(0) === this.duration) {\n                observer.complete();\n                clearInterval(interval);\n            }\n        }, 1000);\n    });\nprivate _mediaPlayer: HTMLMediaElement;\nprivate _hostElement: HTMLElement;\nprivate _fullscreen: boolean = false;\nprivate _quietMode: boolean;\n/**\n * @param {?} _frameExtractionService\n */\nconstructor(private _frameExtractionService: FrameExtractionService) {}\n/**\n * @return {?}\n */\nget mediaPlayer(): HTMLMediaElement {\n        return this._mediaPlayer;\n    }\n/**\n * @return {?}\n */\nget quietMode(): boolean {\n        return this._quietMode;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset quietMode(value: boolean) {\n\n        // quiet mode cannot be enabled on audio player\n        if (this.type === 'audio') {\n            value = false;\n        }\n\n        this._quietMode = value;\n        this.quietModeEvent.next(value);\n    }\n/**\n * @return {?}\n */\nget mediaPlayerWidth(): number {\n        return this._mediaPlayer ? this._mediaPlayer.offsetWidth : 0;\n    }\n/**\n * @return {?}\n */\nget mediaPlayerHeight(): number {\n        return this._mediaPlayer ? this._mediaPlayer.offsetHeight : 0;\n    }\n/**\n * @return {?}\n */\nget audioTracks(): AudioTrackList {\n        return this._mediaPlayer ? this._mediaPlayer.audioTracks : null;\n    }\n/**\n * @return {?}\n */\nget autoplay(): boolean {\n        return this._mediaPlayer ? this._mediaPlayer.autoplay : false;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset autoplay(value: boolean) {\n        this._mediaPlayer.autoplay = value;\n    }\n/**\n * @return {?}\n */\nget buffered(): TimeRanges {\n        return this._mediaPlayer ? this._mediaPlayer.buffered : new TimeRanges();\n    }\n/**\n * @return {?}\n */\nget crossOrigin(): string {\n        return this._mediaPlayer ? this._mediaPlayer.crossOrigin : null;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset crossOrigin(value: string) {\n        this._mediaPlayer.crossOrigin = value;\n    }\n/**\n * @return {?}\n */\nget currentSrc(): string {\n        return this._mediaPlayer ? this._mediaPlayer.currentSrc : null;\n    }\n/**\n * @return {?}\n */\nget currentTime(): number {\n        return this._mediaPlayer ? this._mediaPlayer.currentTime : 0;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset currentTime(value: number) {\n        this._mediaPlayer.currentTime = value;\n    }\n/**\n * @return {?}\n */\nget defaultMuted(): boolean {\n        return this._mediaPlayer ? this._mediaPlayer.defaultMuted : false;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset defaultMuted(value: boolean) {\n        this._mediaPlayer.defaultMuted = value;\n    }\n/**\n * @return {?}\n */\nget defaultPlaybackRate(): number {\n        return this._mediaPlayer ? this._mediaPlayer.defaultPlaybackRate : 1;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset defaultPlaybackRate(value: number) {\n        this._mediaPlayer.defaultPlaybackRate = value;\n    }\n/**\n * @return {?}\n */\nget duration(): number {\n        return this._mediaPlayer ? this._mediaPlayer.duration : 0;\n    }\n/**\n * @return {?}\n */\nget ended(): boolean {\n        return this._mediaPlayer ? this._mediaPlayer.ended : false;\n    }\n/**\n * @return {?}\n */\nget loop(): boolean {\n        return this._mediaPlayer ? this._mediaPlayer.loop : false;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset loop(value: boolean) {\n        this._mediaPlayer.loop = value;\n    }\n/**\n * @return {?}\n */\nget muted(): boolean {\n        return this._mediaPlayer ? this._mediaPlayer.muted : false;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset muted(value: boolean) {\n        this._mediaPlayer.muted = value;\n    }\n/**\n * @return {?}\n */\nget networkState(): number {\n        return this._mediaPlayer.networkState;\n    }\n/**\n * @return {?}\n */\nget paused(): boolean {\n        return this._mediaPlayer ? this._mediaPlayer.paused : true;\n    }\n/**\n * @return {?}\n */\nget playbackRate(): number {\n        return this._mediaPlayer ? this._mediaPlayer.playbackRate : 1;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset playbackRate(value: number) {\n        this._mediaPlayer.playbackRate = value;\n    }\n/**\n * @return {?}\n */\nget played(): TimeRanges {\n        return this._mediaPlayer ? this._mediaPlayer.played : new TimeRanges();\n    }\n/**\n * @return {?}\n */\nget preload(): string {\n        return this._mediaPlayer ? this._mediaPlayer.preload : 'auto';\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset preload(value: string) {\n        this._mediaPlayer.preload = value;\n    }\n/**\n * @return {?}\n */\nget readyState(): number {\n        return this._mediaPlayer ? this._mediaPlayer.readyState : 0;\n    }\n/**\n * @return {?}\n */\nget seekable(): TimeRanges {\n        return this._mediaPlayer ? this._mediaPlayer.seekable : new TimeRanges();\n    }\n/**\n * @return {?}\n */\nget seeking(): boolean {\n        return this._mediaPlayer ? this._mediaPlayer.seeking : false;\n    }\n/**\n * @return {?}\n */\nget src(): string {\n        return this._mediaPlayer ? this._mediaPlayer.src : '';\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset src(value: string) {\n        this._mediaPlayer.src = value;\n    }\n/**\n * @return {?}\n */\nget textTracks(): TextTrackList {\n        return this._mediaPlayer ? this._mediaPlayer.textTracks : new TextTrackList();\n    }\n/**\n * @return {?}\n */\nget videoTracks(): VideoTrackList {\n        return this._mediaPlayer ? this._mediaPlayer.videoTracks : new VideoTrackList();\n    }\n/**\n * @return {?}\n */\nget volume(): number {\n        return this._mediaPlayer ? this._mediaPlayer.volume : 1;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset volume(value: number) {\n        this._mediaPlayer.volume = value;\n    }\n/**\n * @return {?}\n */\nget fullscreen(): boolean {\n        return this._mediaPlayer ? this._fullscreen : false;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset fullscreen(value: boolean) {\n        this._fullscreen = value;\n        this.fullscreenEvent.next(value);\n    }\n/**\n * @param {?} hostElement\n * @param {?} mediaPlayer\n * @return {?}\n */\nsetMediaPlayer(hostElement: HTMLElement, mediaPlayer: HTMLMediaElement): void {\n        this._hostElement = hostElement;\n        this._mediaPlayer = mediaPlayer;\n\n        this.initEvent.next(true);\n    }\n/**\n * Toggle playing state\n * @return {?}\n */\ntogglePlay(): void {\n\n        // prevent any action is not loaded\n        if (this.loaded === false) {\n            return;\n        }\n\n        if (this.paused) {\n            this.play();\n        } else {\n            this.pause();\n        }\n    }\n/**\n * Starts playing the audio/video\n * @return {?}\n */\nplay(): void {\n        this._mediaPlayer.play();\n    }\n/**\n * Pauses the currently playing audio/video\n * @return {?}\n */\npause(): void {\n        this._mediaPlayer.pause();\n    }\n/**\n * Re-loads the audio/video element\n * @return {?}\n */\nload(): void {\n        this._mediaPlayer.load();\n    }\n/**\n * Checks if the browser can play the specified audio/video type\n * @param {?} type\n * @return {?}\n */\ncanPlayType(type: string): string {\n        return this._mediaPlayer.canPlayType(type);\n    }\n/**\n * Adds a new text track to the audio/video\n * @param {?} kind\n * @param {?} label\n * @param {?} language\n * @return {?}\n */\naddTextTrack(kind: string, label: string, language: string): TextTrack {\n        return this._mediaPlayer.addTextTrack(kind, label, language);\n    }\n/**\n * Attempt to display media in fullscreen mode\n * @return {?}\n */\nrequestFullscreen(): void {\n\n        if (this._hostElement.requestFullscreen) {\n            this._hostElement.requestFullscreen();\n        } else if (this._hostElement.webkitRequestFullscreen) {\n            this._hostElement.webkitRequestFullscreen();\n        } else if (( /** @type {?} */((<any>this._hostElement))).msRequestFullscreen) {\n            ( /** @type {?} */((<any>this._hostElement))).msRequestFullscreen();\n        } else if (( /** @type {?} */((<any>this._hostElement))).mozRequestFullScreen) {\n            ( /** @type {?} */((<any>this._hostElement))).mozRequestFullScreen();\n        }\n    }\n/**\n * Exit full screen mode\n * @return {?}\n */\nexitFullscreen(): void {\n\n        if (( /** @type {?} */((<any>this._hostElement))).exitFullscreen) {\n            document.exitFullscreen();\n        } else if (document.webkitExitFullscreen) {\n            document.webkitExitFullscreen();\n        } else if (( /** @type {?} */((<any>document))).msExitFullscreen) {\n            ( /** @type {?} */((<any>document))).msExitFullscreen();\n        } else if (( /** @type {?} */((<any>document))).mozCancelFullScreen) {\n            ( /** @type {?} */((<any>document))).mozCancelFullScreen();\n        }\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nfullscreenChange(event: Event) {\n        this.fullscreen = ( /** @type {?} */((<any>document))).fullscreen || document.webkitIsFullScreen || ( /** @type {?} */((<any>document))).mozFullScreen || ( /** @type {?} */((<any>document))).msFullscreenElement !== null && ( /** @type {?} */((<any>document))).msFullscreenElement !== undefined;\n        this.fullscreenEvent.next(this.fullscreen);\n    }\n/**\n * Toggle Fullscreen State\n * @return {?}\n */\ntoggleFullscreen(): void {\n        if (this.fullscreen) {\n            this.exitFullscreen();\n        } else {\n            this.requestFullscreen();\n        }\n    }\n/**\n * Extract the frames from the video\n * @param {?} width\n * @param {?} height\n * @param {?} skip\n * @return {?}\n */\ngetFrames(width: number, height: number, skip: number): Observable<ExtractedFrame> {\n\n        if (this.type === 'video') {\n            return this._frameExtractionService.getFrameThumbnails(this.source, width, height, 0, this.duration, 10);\n        }\n\n        return Observable.from([]);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: FrameExtractionService, },\n];\n}\n\nfunction MediaPlayerService_tsickle_Closure_declarations() {\n/** @type {?} */\nMediaPlayerService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMediaPlayerService.ctorParameters;\n/** @type {?} */\nMediaPlayerService.prototype.source;\n/** @type {?} */\nMediaPlayerService.prototype.type;\n/** @type {?} */\nMediaPlayerService.prototype.loaded;\n/** @type {?} */\nMediaPlayerService.prototype.playing;\n/** @type {?} */\nMediaPlayerService.prototype.initEvent;\n/** @type {?} */\nMediaPlayerService.prototype.abortEvent;\n/** @type {?} */\nMediaPlayerService.prototype.canPlayEvent;\n/** @type {?} */\nMediaPlayerService.prototype.canPlayThroughEvent;\n/** @type {?} */\nMediaPlayerService.prototype.durationChangeEvent;\n/** @type {?} */\nMediaPlayerService.prototype.endedEvent;\n/** @type {?} */\nMediaPlayerService.prototype.errorEvent;\n/** @type {?} */\nMediaPlayerService.prototype.loadedDataEvent;\n/** @type {?} */\nMediaPlayerService.prototype.loadedMetadataEvent;\n/** @type {?} */\nMediaPlayerService.prototype.loadStartEvent;\n/** @type {?} */\nMediaPlayerService.prototype.pauseEvent;\n/** @type {?} */\nMediaPlayerService.prototype.playEvent;\n/** @type {?} */\nMediaPlayerService.prototype.playingEvent;\n/** @type {?} */\nMediaPlayerService.prototype.rateChangeEvent;\n/** @type {?} */\nMediaPlayerService.prototype.seekedEvent;\n/** @type {?} */\nMediaPlayerService.prototype.seekingEvent;\n/** @type {?} */\nMediaPlayerService.prototype.stalledEvent;\n/** @type {?} */\nMediaPlayerService.prototype.suspendEvent;\n/** @type {?} */\nMediaPlayerService.prototype.timeUpdateEvent;\n/** @type {?} */\nMediaPlayerService.prototype.volumeChangeEvent;\n/** @type {?} */\nMediaPlayerService.prototype.waitingEvent;\n/** @type {?} */\nMediaPlayerService.prototype.mediaClickEvent;\n/** @type {?} */\nMediaPlayerService.prototype.fullscreenEvent;\n/** @type {?} */\nMediaPlayerService.prototype.quietModeEvent;\n/** @type {?} */\nMediaPlayerService.prototype.progressEvent;\n/** @type {?} */\nMediaPlayerService.prototype._mediaPlayer;\n/** @type {?} */\nMediaPlayerService.prototype._hostElement;\n/** @type {?} */\nMediaPlayerService.prototype._fullscreen;\n/** @type {?} */\nMediaPlayerService.prototype._quietMode;\n/** @type {?} */\nMediaPlayerService.prototype._frameExtractionService;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable } from '@angular/core';\nimport { Http, ResponseContentType } from '@angular/http';\nimport { Observable } from 'rxjs/Observable';\nimport { Observer } from 'rxjs/Observer';\nimport'rxjs/add/observable/of';\nexport class AudioService {\nprivate _audioBuffer: AudioBuffer;\nprivate _audioBufferSource: AudioBufferSourceNode;\nprivate _audioContext: AudioContext;\nprivate _gainNode: GainNode;\nprivate _analyserNode: AnalyserNode;\n/**\n * @param {?} _http\n */\nconstructor(private _http: Http) { }\n/**\n * @param {?} mediaElement\n * @return {?}\n */\ngetAudioFileMetadata(mediaElement: HTMLMediaElement): Observable<AudioMetadata> {\n        return Observable.create((observer: Observer<AudioMetadata>) => {\n            this._http.request(mediaElement.src, { responseType: ResponseContentType.Blob }).subscribe(response => {\n\n                let /** @type {?} */ filename = mediaElement.src.substring(mediaElement.src.lastIndexOf('/') + 1);\n                let /** @type {?} */ extension = mediaElement.src.substring(mediaElement.src.lastIndexOf('.') + 1).toLowerCase();\n                let /** @type {?} */ blob = response.blob();\n                let /** @type {?} */ description;\n\n                switch (extension) {\n                    case 'mp3':\n                        description = 'MPEG audio layer 3 file';\n                        break;\n\n                    case 'wma':\n                        description = 'Windows media audio file';\n                        break;\n\n                    case 'wav':\n                        description = 'WAVE audio file';\n                        break;\n\n                    case 'ogg':\n                        description = 'Ogg Vorbis file';\n                        break;\n\n                    case 'aac':\n                        description = 'Advanced audio coding file';\n                        break;\n\n                    case 'midi':\n                        description = 'Musical instrument digital interface file';\n                        break;\n\n                    default:\n                        description = 'Audio file';\n                        break;\n                }\n\n                observer.next({\n                    filename: filename,\n                    extension: extension,\n                    description: description,\n                    size: blob.size\n                });\n            });\n        });\n    }\n/**\n * @param {?} url\n * @return {?}\n */\ngetWaveformFromUrl(url: string): Observable<Float32Array[]> {\n\n        // if audio context is not support return a stream of empty data\n        if (!( /** @type {?} */((<any>window))).AudioContext) {\n            return Observable.of<Float32Array[]>([new Float32Array(0)]);\n        }\n\n        this._audioContext = new AudioContext();\n        this.createVolumeNode();\n        this.createAnalyserNode();\n\n        return Observable.create((observer: Observer<Float32Array[]>) => {\n\n            // load the media from the URL provided\n            this._http.request(url, { responseType: ResponseContentType.ArrayBuffer }).subscribe(response => {\n                this.getAudioBuffer(response.arrayBuffer()).subscribe(audioBuffer => {\n\n                    // create the buffer source\n                    this.createBufferSource(audioBuffer);\n\n                    let /** @type {?} */ dataPoints: Float32Array[] = [];\n                    let /** @type {?} */ channels = this._audioBuffer.numberOfChannels;\n\n                    // extract the data from each channel\n                    for (let /** @type {?} */ channelIdx = 0; channelIdx < channels; channelIdx++) {\n                        dataPoints[channelIdx] = this._audioBuffer.getChannelData(channelIdx);\n                    }\n\n                    observer.next(dataPoints);\n                    observer.complete();\n\n                    // cleanup after ourselves\n                    dataPoints = null;\n                }, (error) => observer.error(error));\n            }, (error) => observer.error(error));\n        });\n    }\n/**\n * @param {?=} channels\n * @param {?=} skip\n * @return {?}\n */\ngetWaveformPoints(channels: Float32Array[] = [], skip: number = 1000): WaveformPoint[] {\n\n        let /** @type {?} */ waveform: WaveformPoint[] = [];\n        let /** @type {?} */ duration = channels.length > 0 ? channels[0].length : 0;\n\n        // convert each channel data to a series of waveform points\n        for (let /** @type {?} */ idx = 0; idx < duration; idx += skip) {\n\n            // get all the channel data for a specific point\n            let /** @type {?} */ points = channels.map(channel => channel[idx]);\n\n            // find the minimum point and maximum points at each position across all channels\n            waveform.push({\n                min: points.reduce((previous, current) => current < previous ? current : previous),\n                max: points.reduce((previous, current) => current > previous ? current : previous)\n            });\n        }\n\n        return waveform;\n    }\n/**\n * @param {?} arrayBuffer\n * @return {?}\n */\nprivate getAudioBuffer(arrayBuffer: ArrayBuffer): Observable<AudioBuffer> {\n        return Observable.create((observer: Observer<AudioBuffer>) => {\n            this.getOfflineAudioContext().decodeAudioData(arrayBuffer, (audioBuffer: AudioBuffer) => {\n                observer.next(audioBuffer);\n                observer.complete();\n            }, (error) => observer.error(error));\n        });\n    }\n/**\n * @return {?}\n */\nprivate getOfflineAudioContext(): OfflineAudioContext {\n        return new OfflineAudioContext(1, 2, this._audioContext.sampleRate || 44100);\n    }\n/**\n * @param {?} audioBuffer\n * @return {?}\n */\nprivate createBufferSource(audioBuffer: AudioBuffer): void {\n        this.disconnectSource();\n\n        this._audioBuffer = audioBuffer;\n        this._audioBufferSource = this._audioContext.createBufferSource();\n        this._audioBufferSource.buffer = this._audioBuffer;\n        this._audioBufferSource.connect(this._analyserNode);\n    }\n/**\n * @return {?}\n */\nprivate createVolumeNode(): void {\n        this._gainNode = this._audioContext.createGain();\n        this._gainNode.connect(this._audioContext.destination);\n    }\n/**\n * @return {?}\n */\nprivate createAnalyserNode(): void {\n        this._analyserNode = this._audioContext.createAnalyser();\n        this._analyserNode.connect(this._gainNode);\n    }\n/**\n * @return {?}\n */\nprivate disconnectSource(): void {\n        if (this._audioBufferSource) {\n            this._audioBufferSource.disconnect();\n        }\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Http, },\n];\n}\n\nfunction AudioService_tsickle_Closure_declarations() {\n/** @type {?} */\nAudioService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nAudioService.ctorParameters;\n/** @type {?} */\nAudioService.prototype._audioBuffer;\n/** @type {?} */\nAudioService.prototype._audioBufferSource;\n/** @type {?} */\nAudioService.prototype._audioContext;\n/** @type {?} */\nAudioService.prototype._gainNode;\n/** @type {?} */\nAudioService.prototype._analyserNode;\n/** @type {?} */\nAudioService.prototype._http;\n}\n\n\nexport interface WaveformPoint {\n    min: number;\n    max: number;\n}\n\nexport interface AudioMetadata {\n    filename: string;\n    extension: string;\n    description: string;\n    size: number;\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { HttpModule } from '@angular/http';\nimport { AudioService } from './audio.service';\nexport class AudioServiceModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [ HttpModule ],\n    providers: [AudioService]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction AudioServiceModule_tsickle_Closure_declarations() {\n/** @type {?} */\nAudioServiceModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nAudioServiceModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Input, ViewChild, ElementRef, AfterViewInit, OnDestroy } from '@angular/core';\nimport { ExtractedFrame, FrameExtractionService } from '../../services/frame-extraction/frame-extraction.service';\nimport { MediaPlayerService } from './media-player.service';\nimport { Subject } from 'rxjs/Subject';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { Observable } from 'rxjs/Observable';\nimport { Observer } from 'rxjs/Observer';\nimport { AudioService, AudioMetadata } from '../../services/audio/index';\nimport { Subscription } from 'rxjs/Subscription';\nimport'rxjs/add/observable/from';\nimport'rxjs/add/operator/switchMap';\nexport class MediaPlayerComponent implements AfterViewInit, OnDestroy {\nprivate _playerRef: ElementRef;\nprivate _trackBarRef: ElementRef;\n\n    hovering: boolean = false;\n    audioMetadata: Observable<AudioMetadata>;\nprivate _hover$: Subscription;\nprivate _clicked$: Subscription;\nprivate _paused$: Subscription;\nprivate _playing$: Subscription;\nprivate _loading$: Subscription;\n/**\n * @return {?}\n */\nget source(): string {\n        return this.mediaPlayerService.source;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset source(value: string) {\n        this.mediaPlayerService.source = value;\n    }\n/**\n * @return {?}\n */\nget type(): MediaPlayerType {\n        return this.mediaPlayerService.type;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset type(value: MediaPlayerType) {\n        this.mediaPlayerService.type = value;\n    }\n/**\n * @return {?}\n */\nget quietMode(): boolean {\n        return this.mediaPlayerService.quietMode;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset quietMode(value: boolean) {\n        this.mediaPlayerService.quietMode = value;\n    }\n/**\n * @param {?} mediaPlayerService\n * @param {?} _audioService\n * @param {?} _elementRef\n */\nconstructor(public mediaPlayerService: MediaPlayerService,\nprivate _audioService: AudioService,\nprivate _elementRef: ElementRef) {\n\n        // show controls when hovering and in quiet mode\n        this._hover$ = Observable.fromEvent(this._elementRef.nativeElement, 'mousemove').switchMap((event: MouseEvent) => {\n            this.hovering = true;         \n            return Observable.of(event);\n        }).debounceTime(2000).subscribe(() => this.hovering = false);\n    }\n/**\n * @return {?}\n */\nngAfterViewInit(): void {\n        this.mediaPlayerService.setMediaPlayer(this._elementRef.nativeElement, this._playerRef.nativeElement);\n\n        this.audioMetadata = this._audioService.getAudioFileMetadata(this._playerRef.nativeElement);\n        this._playing$ = this.mediaPlayerService.playingEvent.subscribe(event => this.mediaPlayerService.playing.next(true));\n        this._paused$ = this.mediaPlayerService.pauseEvent.subscribe(event => this.mediaPlayerService.playing.next(false));\n        this._clicked$ = this.mediaPlayerService.mediaClickEvent.subscribe(() => this.mediaPlayerService.togglePlay());\n        this._loading$ = this.mediaPlayerService.loadedMetadataEvent.subscribe(() => this.mediaPlayerService.loaded = true);\n    }\n/**\n * @return {?}\n */\nngOnDestroy(): void {\n        this._hover$.unsubscribe();\n        this._playing$.unsubscribe();\n        this._paused$.unsubscribe();\n        this._clicked$.unsubscribe();\n        this._loading$.unsubscribe();\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-media-player',\n    template: `\n      <div class=\"video-player-container\" *ngIf=\"type === 'video'\">\n\n          <video class=\"video-player\" #player [src]=\"source\" (abort)=\"mediaPlayerService.abortEvent.next()\" (canplay)=\"mediaPlayerService.canPlayEvent.next()\"\n              (canplaythrough)=\"mediaPlayerService.canPlayThroughEvent.next()\" (durationchange)=\"mediaPlayerService.durationChangeEvent.next(player.duration)\" (ended)=\"mediaPlayerService.endedEvent.next()\"\n              (error)=\"mediaPlayerService.errorEvent.next($event)\" (loadeddata)=\"mediaPlayerService.loadedDataEvent.next($event)\" (loadedmetadata)=\"mediaPlayerService.loadedMetadataEvent.next($event)\"\n              (loadstart)=\"mediaPlayerService.loadStartEvent.next()\" (pause)=\"mediaPlayerService.pauseEvent.next()\" (play)=\"mediaPlayerService.playEvent.next()\" (playing)=\"mediaPlayerService.playingEvent.next(!player.paused)\"\n              (ratechange)=\"mediaPlayerService.rateChangeEvent.next(player.playbackRate)\" (seeked)=\"mediaPlayerService.seekedEvent.next(player.currentTime)\" (seeking)=\"mediaPlayerService.seekingEvent.next(player.currentTime)\"\n              (stalled)=\"mediaPlayerService.stalledEvent.next()\" (suspend)=\"mediaPlayerService.suspendEvent.next()\" (timeupdate)=\"mediaPlayerService.timeUpdateEvent.next(player.currentTime)\"\n              (volumechange)=\"mediaPlayerService.volumeChangeEvent.next(player.volume)\" (waiting)=\"mediaPlayerService.waitingEvent.next()\" (click)=\"mediaPlayerService.mediaClickEvent.next($event)\"></video>\n\n          <div class=\"video-overlay\" [class.playing]=\"mediaPlayerService.playing | async\">\n              <svg class=\"play-graphic\" x=\"0px\" y=\"0px\" viewBox=\"0 0 64 64\">\n                  <circle class=\"play-circle\" cx=\"32.2\" cy=\"31.8\" r=\"31.8\" />\n                  <polygon class=\"play-triangle\" points=\"23,14.1 23,50.8 48.3,32.5\" />\n              </svg>\n          </div>\n\n      </div>\n\n\n      <div class=\"audio-player\" *ngIf=\"type === 'audio'\">\n\n          <svg width=\"24px\" height=\"24px\" viewBox=\"0 0 24 24\">\n              <g stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\n                  <g transform=\"translate(-98.000000, -458.000000)\">\n                      <g transform=\"translate(98.000000, 458.000000)\">\n                          <path d=\"M4.5,0.5 L18.0435308,0.5 L23.5,6.22251502 L23.5,23.5 L4.5,23.5 L4.5,0.5 Z\" fill=\"#CCEAE2\"></path>\n                          <path d=\"M4.5,8 L4.5,0.5 L18,0.5 L23.5,6 L23.5,23.5 L18,23.5\" stroke=\"#60798D\" fill=\"#CCEAE2\"></path>\n                          <path d=\"M4,13.5 L0.5,13.5 L0.5,18.5 L4,18.5 L9.5,22.5 L9.5,9.5 L4,13.5 Z\" stroke=\"#60798D\" fill=\"#85D2BE\"></path>\n                          <path d=\"M11.5,12.5137939 C13.7576225,12.5137939 14.5,14.3709236 14.5,16 C14.5,17.6849236 13.7089152,19.5420532 11.5,19.5420532\"\n                              stroke=\"#60798D\"></path>\n                          <path d=\"M11.5,9 C15.8037643,9.04168701 18.5,11.6604805 18.5,16 C18.5,20.3395195 15.8804302,23.0079956 11.5,23\" stroke=\"#60798D\"></path>\n                          <path d=\"M17.5219116,0.761413574 L17.5219116,6 L23,6\" stroke=\"#60798D\" fill=\"#85D2BE\"></path>\n                      </g>\n                  </g>\n              </g>\n          </svg>\n\n          <p class=\"audio-file-name\">{{ (audioMetadata | async)?.filename }}</p>\n          <p class=\"audio-file-format\">{{ (audioMetadata | async)?.description }}</p>\n          <p class=\"audio-file-size\">{{ (audioMetadata | async)?.size | fileSize }}</p>\n\n          <audio #player [src]=\"source\" (abort)=\"mediaPlayerService.abortEvent.next()\" (canplay)=\"mediaPlayerService.canPlayEvent.next(true)\"\n              (canplaythrough)=\"mediaPlayerService.canPlayThroughEvent.next(true)\" (durationchange)=\"mediaPlayerService.durationChangeEvent.next(player.duration)\" (ended)=\"mediaPlayerService.endedEvent.next()\"\n              (error)=\"mediaPlayerService.errorEvent.next($event)\" (loadeddata)=\"mediaPlayerService.loadedDataEvent.next($event)\" (loadedmetadata)=\"mediaPlayerService.loadedMetadataEvent.next($event)\"\n              (loadstart)=\"mediaPlayerService.loadStartEvent.next()\" (pause)=\"mediaPlayerService.pauseEvent.next()\" (play)=\"mediaPlayerService.playEvent.next()\" (playing)=\"mediaPlayerService.playingEvent.next(!player.paused)\"\n              (ratechange)=\"mediaPlayerService.rateChangeEvent.next(player.playbackRate)\" (seeked)=\"mediaPlayerService.seekedEvent.next(player.currentTime)\" (seeking)=\"mediaPlayerService.seekingEvent.next(player.currentTime)\"\n              (stalled)=\"mediaPlayerService.stalledEvent.next()\" (suspend)=\"mediaPlayerService.suspendEvent.next()\" (timeupdate)=\"mediaPlayerService.timeUpdateEvent.next(player.currentTime)\"\n              (volumechange)=\"mediaPlayerService.volumeChangeEvent.next(player.volume)\" (waiting)=\"mediaPlayerService.waitingEvent.next()\" (click)=\"mediaPlayerService.mediaClickEvent.next($event)\"></audio>\n      </div>\n\n      <div class=\"control-bar\">\n          <ux-media-player-timeline></ux-media-player-timeline>\n          <ux-media-player-controls></ux-media-player-controls>\n      </div>\n    `,\n    providers: [ MediaPlayerService ],\n    host: {\n        'tabindex': '0',\n        '(keydown.Space)': 'mediaPlayerService.togglePlay()',\n        '[class.standard]': '!mediaPlayerService.fullscreen',\n        '[class.fullscreen]': 'mediaPlayerService.fullscreen',\n        '[class.quiet]': 'quietMode && type === \"video\" || mediaPlayerService.fullscreen',\n        '[class.hover]': 'hovering',\n        '[class.video]': 'type === \"video\"',\n        '[class.audio]': 'type === \"audio\"',\n        '(mouseenter)': 'hovering = true',\n        '(mouseleave)': 'hovering = false',\n        '(document:webkitfullscreenchange)': 'mediaPlayerService.fullscreenChange($event)',\n        '(document:mozfullscreenchange)': 'mediaPlayerService.fullscreenChange($event)',\n        '(document:MSFullscreenChange)': 'mediaPlayerService.fullscreenChange($event)'\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: MediaPlayerService, },\n{type: AudioService, },\n{type: ElementRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'_playerRef': [{ type: ViewChild, args: ['player', ] },],\n'_trackBarRef': [{ type: ViewChild, args: ['trackBar', ] },],\n'source': [{ type: Input },],\n'type': [{ type: Input },],\n'quietMode': [{ type: Input },],\n};\n}\n\nfunction MediaPlayerComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nMediaPlayerComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMediaPlayerComponent.ctorParameters;\n/** @type {?} */\nMediaPlayerComponent.propDecorators;\n/** @type {?} */\nMediaPlayerComponent.prototype._playerRef;\n/** @type {?} */\nMediaPlayerComponent.prototype._trackBarRef;\n/** @type {?} */\nMediaPlayerComponent.prototype.hovering;\n/** @type {?} */\nMediaPlayerComponent.prototype.audioMetadata;\n/** @type {?} */\nMediaPlayerComponent.prototype._hover$;\n/** @type {?} */\nMediaPlayerComponent.prototype._clicked$;\n/** @type {?} */\nMediaPlayerComponent.prototype._paused$;\n/** @type {?} */\nMediaPlayerComponent.prototype._playing$;\n/** @type {?} */\nMediaPlayerComponent.prototype._loading$;\n/** @type {?} */\nMediaPlayerComponent.prototype.mediaPlayerService;\n/** @type {?} */\nMediaPlayerComponent.prototype._audioService;\n/** @type {?} */\nMediaPlayerComponent.prototype._elementRef;\n}\n\n\nexport type MediaPlayerType = 'video' | 'audio';\n\nexport interface MediaPlayerBuffer {\n    start: number;\n    end: number;\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, Host } from '@angular/core';\nimport { MediaPlayerService } from '../media-player.service';\nexport class MediaPlayerBaseExtensionDirective {\n/**\n * @param {?} mediaPlayerService\n */\nconstructor(public mediaPlayerService: MediaPlayerService) { }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: '[mediaPlayerBaseExtension]' \n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: MediaPlayerService, },\n];\n}\n\nfunction MediaPlayerBaseExtensionDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nMediaPlayerBaseExtensionDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMediaPlayerBaseExtensionDirective.ctorParameters;\n/** @type {?} */\nMediaPlayerBaseExtensionDirective.prototype.mediaPlayerService;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, OnInit, ViewChild, ElementRef, AfterViewInit, OnDestroy } from '@angular/core';\nimport { MediaPlayerBaseExtensionDirective } from '../base-extension.directive';\nimport { Observable } from 'rxjs/Observable';\nimport'rxjs/add/operator/switchMap';\nimport'rxjs/add/operator/takeUntil';\nimport'rxjs/add/observable/fromEvent';\nimport { Subscription } from 'rxjs/Subscription';\nexport class MediaPlayerTimelineExtensionComponent extends MediaPlayerBaseExtensionDirective implements OnInit, AfterViewInit, OnDestroy {\n\n     thumb: ElementRef;\n     timelineRef: ElementRef;\n\n    current: number = 0;\n    position: number = 0;\n    duration: number = 0;\n    buffered: MediaPlayerBuffered[] = [];\n    mouseDown: boolean = false;\n    quietMode: boolean = false;\n    fullscreen: boolean = false;\nprivate _mouseEventSubscription: Subscription;\n\n    scrub = {\n        visible: false,\n        position: 0,\n        time: 0\n    };\n/**\n * @return {?}\n */\nngOnInit(): void {\n\n        // watch for changes to the current time\n        this.mediaPlayerService.durationChangeEvent.subscribe(duration => this.duration = duration);\n        this.mediaPlayerService.quietModeEvent.subscribe(quietMode => this.quietMode = quietMode);\n        this.mediaPlayerService.fullscreenEvent.subscribe(fullscreen => {\n            this.fullscreen = fullscreen;\n            this.scrub.position = 0;\n        });\n\n        this.mediaPlayerService.timeUpdateEvent.subscribe(current => {\n            this.current = current;\n            this.position = (this.current / this.duration) * 100;\n        });\n\n        this.mediaPlayerService.progressEvent.subscribe((buffered: TimeRanges) => {\n            this.buffered = [];\n\n            for (let /** @type {?} */ idx = 0; idx < buffered.length; idx++) {\n                this.buffered.push({ start: (buffered.start(idx) / this.duration) * 100, end: (buffered.end(idx) / this.duration) * 100 });\n            }\n        });\n    }\n/**\n * @return {?}\n */\nngAfterViewInit(): void {\n        let /** @type {?} */ mousedown$ = Observable.fromEvent(this.thumb.nativeElement, 'mousedown');\n        let /** @type {?} */ mousemove$ = Observable.fromEvent(document, 'mousemove');\n        let /** @type {?} */ mouseup$ = Observable.fromEvent(document, 'mouseup');\n\n        this._mouseEventSubscription = mousedown$.switchMap(event => mousemove$.takeUntil(mouseup$)).subscribe(event => {\n            this.scrub.visible = false;\n        });\n    }\n/**\n * @return {?}\n */\nngOnDestroy() {\n        this._mouseEventSubscription.unsubscribe();\n    }\n/**\n * @param {?=} event\n * @return {?}\n */\nupdateScrub(event?: MouseEvent): void {\n\n        let /** @type {?} */ target = /** @type {?} */(( event.target as HTMLElement));\n      \n        if (target.classList.contains('media-progress-bar-thumb')) {\n            return;\n        }\n\n        let /** @type {?} */ timeline = /** @type {?} */(( this.timelineRef.nativeElement as HTMLDivElement));\n        let /** @type {?} */ bounds = timeline.getBoundingClientRect();\n\n        this.scrub.position = event.offsetX;\n        this.scrub.time = (event.offsetX / bounds.width) * this.mediaPlayerService.duration;\n\n        if (this.mouseDown) {\n            this.mediaPlayerService.pause();\n            this.mediaPlayerService.currentTime = this.scrub.time;\n        }\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-media-player-timeline',\n    template: `\n      <p class=\"current-time\">{{ current | duration }}</p>\n\n      <div #timeline class=\"timeline-bar\" (mouseenter)=\"scrub.visible = true; pop.show()\" (mouseleave)=\"scrub.visible = false; pop.hide()\"\n          (mousemove)=\"updateScrub($event)\" (mouseup)=\"updateScrub($event)\" (mousedown)=\"mouseDown = true; $event.preventDefault()\">\n\n          <div class=\"buffered-bar\" *ngFor=\"let buffer of buffered\" [style.left.%]=\"buffer.start\" [style.width.%]=\"buffer.end - buffer.start\"></div>\n\n          <div class=\"media-progress-bar\" [style.width.%]=\"position\">\n              <div #progressThumb class=\"media-progress-bar-thumb\" (mouseenter)=\"scrub.visible = false; pop.hide(); $event.stopPropagation()\"\n                  (mouseleave)=\"scrub.visible = true; pop.show(); $event.stopPropagation()\"></div>\n          </div>\n\n          <div class=\"scrub-handle\" [class.scrub-handle-hidden]=\"!scrub.visible\" [style.left.px]=\"scrub.position\" [tooltip]=\"popTemplate\" placement=\"top\" triggers=\"\" #pop=\"bs-tooltip\"\n              container=\"body\" tooltipPopupDelay=\"100\" [isDisabled]=\"duration === 0\"></div>\n      </div>\n\n      <p class=\"duration-time\">{{ duration | duration }}</p>\n\n      <ng-template #popTemplate>\n          <span>{{ scrub.time | duration }}</span>\n      </ng-template>\n    `,\n    host: {\n        '(document:mouseup)': 'mouseDown = false',\n        '[class.quiet]': 'quietMode || fullscreen'\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'thumb': [{ type: ViewChild, args: ['progressThumb', ] },],\n'timelineRef': [{ type: ViewChild, args: ['timeline', ] },],\n};\n}\n\nfunction MediaPlayerTimelineExtensionComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nMediaPlayerTimelineExtensionComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMediaPlayerTimelineExtensionComponent.ctorParameters;\n/** @type {?} */\nMediaPlayerTimelineExtensionComponent.propDecorators;\n/** @type {?} */\nMediaPlayerTimelineExtensionComponent.prototype.thumb;\n/** @type {?} */\nMediaPlayerTimelineExtensionComponent.prototype.timelineRef;\n/** @type {?} */\nMediaPlayerTimelineExtensionComponent.prototype.current;\n/** @type {?} */\nMediaPlayerTimelineExtensionComponent.prototype.position;\n/** @type {?} */\nMediaPlayerTimelineExtensionComponent.prototype.duration;\n/** @type {?} */\nMediaPlayerTimelineExtensionComponent.prototype.buffered;\n/** @type {?} */\nMediaPlayerTimelineExtensionComponent.prototype.mouseDown;\n/** @type {?} */\nMediaPlayerTimelineExtensionComponent.prototype.quietMode;\n/** @type {?} */\nMediaPlayerTimelineExtensionComponent.prototype.fullscreen;\n/** @type {?} */\nMediaPlayerTimelineExtensionComponent.prototype._mouseEventSubscription;\n/** @type {?} */\nMediaPlayerTimelineExtensionComponent.prototype.scrub;\n}\n\n\nexport interface MediaPlayerBuffered {\n    start: number;\n    end: number;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, OnInit, HostListener, ElementRef, ViewChild } from '@angular/core';\nimport { MediaPlayerBaseExtensionDirective } from '../base-extension.directive';\nimport { Observable } from 'rxjs/Observable';\nimport'rxjs/add/observable/timer';\nexport class MediaPlayerControlsExtensionComponent extends MediaPlayerBaseExtensionDirective implements OnInit {\n\n    playing: boolean;\n    quietMode: boolean;\n    fullscreen: boolean = false;\n    volumeActive: boolean = false;\n    volumeDragging: boolean = false;\n\n     volumeIcon: ElementRef;\n     volumeSlider: ElementRef;\n     volumeContainer: ElementRef;\nprivate _volume: number = 50;\nprivate _previousVolume = 50;\n/**\n * @return {?}\n */\nget volume(): number {\n        return this._volume;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset volume(value: number) {\n\n        if (value === 0 && this._volume !== 0) {\n            this._previousVolume = this._volume;\n        }\n        \n        this._volume = Math.min(Math.max(value, 0), 100);\n        this.mediaPlayerService.volume = this._volume / 100;\n    }\n/**\n * @return {?}\n */\nngOnInit(): void {\n        this.mediaPlayerService.playEvent.subscribe(_ => this.playing = true);\n        this.mediaPlayerService.pauseEvent.subscribe(_ => this.playing = false);\n        this.mediaPlayerService.quietModeEvent.subscribe(quietMode => this.quietMode = quietMode);\n        this.mediaPlayerService.volumeChangeEvent.subscribe(volume => this.volume = volume * 100);\n        this.mediaPlayerService.initEvent.debounceTime(1).filter(init => init === true).subscribe(() => this.volume = this.mediaPlayerService.volume * 100);\n        this.mediaPlayerService.fullscreenEvent.subscribe(fullscreen => this.fullscreen = fullscreen);\n\n        let /** @type {?} */ mouseenter$ = Observable.fromEvent(this.volumeIcon.nativeElement, 'mouseenter');\n        let /** @type {?} */ mouseenterContainer$ = Observable.fromEvent(this.volumeContainer.nativeElement, 'mouseenter');\n        let /** @type {?} */ mouseleaveContainer$ = Observable.fromEvent(this.volumeContainer.nativeElement, 'mouseleave');\n\n        mouseenter$.subscribe(() => this.volumeActive = true);\n        mouseleaveContainer$.switchMap(() => Observable.timer(1500).takeUntil(mouseenterContainer$)).subscribe(() => this.volumeActive = false);\n    }\n/**\n * @return {?}\n */\ntoggleMute(): void {\n        if (this.volume === 0) {\n            this.volume = this._previousVolume;\n        } else {\n            this.volume = 0;\n        }\n    }\n/**\n * @return {?}\n */\ntogglePlay(): void {\n        if (this.playing) {\n            this.mediaPlayerService.pause();\n        } else {\n            this.mediaPlayerService.play();\n        }\n    }\n/**\n * @return {?}\n */\nsetFullscreen(): void {\n        this.mediaPlayerService.toggleFullscreen();\n    }\n/**\n * @return {?}\n */\ngoToStart(): void {\n        this.mediaPlayerService.currentTime = 0;\n    }\n/**\n * @return {?}\n */\ngoToEnd(): void {\n        this.mediaPlayerService.currentTime = this.mediaPlayerService.duration;\n    }\n/**\n * @param {?} event\n * @return {?}\n */\ndragStart(event: MouseEvent): void {\n        event.preventDefault();\n        this.volumeDragging = true;\n\n        let /** @type {?} */ thumb = /** @type {?} */(( event.target as HTMLDivElement));\n        thumb.focus();\n    }\n/**\n * @param {?} event\n * @return {?}\n */\ndragMove(event: MouseEvent): void {\n        if (!this.volumeDragging) {\n            return;\n        }\n\n        event.preventDefault();\n\n        let /** @type {?} */ slider = /** @type {?} */(( this.volumeSlider.nativeElement as HTMLDivElement));\n        let /** @type {?} */ bounds = slider.getBoundingClientRect();\n\n        let /** @type {?} */ x = Math.min(bounds.width, Math.max(0, event.pageX - bounds.left));\n\n        // convert to a percentage\n        this.volume = (x / bounds.width) * 100;\n    }\n/**\n * @return {?}\n */\ndragEnd(): void {\n        this.volumeDragging = false;        \n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-media-player-controls',\n    template: `\n      <div class=\"volume-container\">\n\n          <div class=\"volume-slider-container\" #volumeContainer [class.active]=\"volumeActive\">\n              <div class=\"volume-slider-icon\" #volumeIcon>\n                  <span class=\"hpe-icon\" [class.hpe-volume-mute]=\"volume === 0\" [class.hpe-volume-low]=\"volume > 0 && volume <= 70\" [class.hpe-volume]=\"volume > 70\" [tooltip]=\"muteTooltip\" (click)=\"toggleMute()\"></span>\n              </div>\n        \n              <div class=\"volume-slider-node\">\n                  <div class=\"volume-slider\" #volumeSlider>\n                      <div class=\"volume-track-lower\" [style.width.%]=\"volume\"></div>\n                      <div class=\"volume-slider-thumb\" (mousedown)=\"dragStart($event)\" [style.left.%]=\"volume\" tabindex=\"0\" (keydown.ArrowRight)=\"volume = volume + 10\" (keydown.ArrowLeft)=\"volume = volume - 10\"></div>\n                  </div>\n              </div>\n          </div>\n      </div>\n\n      <div class=\"spacer\"></div>\n\n      <svg viewBox=\"0 0 51.5 64\" width=\"14\" height=\"17\" class=\"control-button\" (click)=\"goToStart()\">\n          <rect x=\"0\" y=\"0\" width=\"7.5\" height=\"64\" />\n          <polygon points=\"51.5,64 51.5,0 7.4,32 \" />\n      </svg>\n\n      <svg viewBox=\"0 0 45 64\" width=\"20\" height=\"29\" class=\"control-button\" *ngIf=\"!playing\" (click)=\"togglePlay()\">\n          <polygon points=\"0.4,0 0.4,64 44.6,32\" />\n      </svg>\n\n      <svg viewBox=\"0 0 43 56.9\" class=\"control-button\" width=\"20\" height=\"29\" *ngIf=\"playing\" (click)=\"togglePlay()\">\n          <rect y=\"0.1\" width=\"15.7\" height=\"56.9\" />\n          <rect x=\"27.3\" y=\"0.1\" width=\"15.7\" height=\"56.9\" />\n      </svg>\n\n      <svg viewBox=\"0 0 51.5 64\" width=\"14\" height=\"17\" class=\"control-button\" (click)=\"goToEnd()\">\n          <rect x=\"44.1\" y=\"0\" width=\"7.5\" height=\"64\" />\n          <polygon points=\"0,64 0,0 44.1,32 \" />\n      </svg>\n\n      <div class=\"spacer\"></div>\n\n      <span class=\"hpe-icon\" *ngIf=\"mediaPlayerService.type !== 'audio'\" [class.hpe-expand]=\"!mediaPlayerService.fullscreen\" [class.hpe-contract]=\"mediaPlayerService.fullscreen\"\n          (click)=\"setFullscreen()\"></span>\n\n      <ng-template #muteTooltip>{{ volume === 0 ? 'Unmute' : 'Mute' }}</ng-template>\n    `,\n    host: {\n        '[class.quiet]': 'quietMode || fullscreen'\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'volumeIcon': [{ type: ViewChild, args: ['volumeIcon', ] },],\n'volumeSlider': [{ type: ViewChild, args: ['volumeSlider', ] },],\n'volumeContainer': [{ type: ViewChild, args: ['volumeContainer', ] },],\n'dragMove': [{ type: HostListener, args: ['document:mousemove', ['$event'], ] },],\n'dragEnd': [{ type: HostListener, args: ['document:mouseup', ] },],\n};\n}\n\nfunction MediaPlayerControlsExtensionComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nMediaPlayerControlsExtensionComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMediaPlayerControlsExtensionComponent.ctorParameters;\n/** @type {?} */\nMediaPlayerControlsExtensionComponent.propDecorators;\n/** @type {?} */\nMediaPlayerControlsExtensionComponent.prototype.playing;\n/** @type {?} */\nMediaPlayerControlsExtensionComponent.prototype.quietMode;\n/** @type {?} */\nMediaPlayerControlsExtensionComponent.prototype.fullscreen;\n/** @type {?} */\nMediaPlayerControlsExtensionComponent.prototype.volumeActive;\n/** @type {?} */\nMediaPlayerControlsExtensionComponent.prototype.volumeDragging;\n/** @type {?} */\nMediaPlayerControlsExtensionComponent.prototype.volumeIcon;\n/** @type {?} */\nMediaPlayerControlsExtensionComponent.prototype.volumeSlider;\n/** @type {?} */\nMediaPlayerControlsExtensionComponent.prototype.volumeContainer;\n/** @type {?} */\nMediaPlayerControlsExtensionComponent.prototype._volume;\n/** @type {?} */\nMediaPlayerControlsExtensionComponent.prototype._previousVolume;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nexport class DurationPipe implements PipeTransform {\n/**\n * @param {?} seconds\n * @return {?}\n */\ntransform(seconds: number): any {\n\n        let /** @type {?} */ minutes = Math.floor(seconds / 60);\n        let /** @type {?} */ hours = Math.floor(minutes / 60);\n        let /** @type {?} */ days = Math.floor(hours / 24);\n\n        hours = hours - (days * 24);\n        minutes = minutes - (days * 24 * 60) - (hours * 60);\n        seconds = Math.floor(seconds - (days * 24 * 60 * 60) - (hours * 60 * 60) - (minutes * 60));\n\n        if (hours > 0) {\n            return `${this.pad(hours)}:${this.pad(minutes)}:${this.pad(seconds)}`;\n        } else {\n            return `${this.pad(minutes)}:${this.pad(seconds)}`;\n        }\n    }\n/**\n * @param {?} value\n * @return {?}\n */\npad(value: number): string {\n        if (value < 10) {\n            return `0${value}`;\n        }\n\n        return value.toString();\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Pipe, args: [{\n    name: 'duration'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction DurationPipe_tsickle_Closure_declarations() {\n/** @type {?} */\nDurationPipe.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDurationPipe.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\n\nimport { DurationPipe } from './duration.pipe';\nexport class DurationPipeModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    exports: [DurationPipe],\n    declarations: [DurationPipe]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction DurationPipeModule_tsickle_Closure_declarations() {\n/** @type {?} */\nDurationPipeModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDurationPipeModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nexport class FileSizePipe implements PipeTransform {\n/**\n * @param {?} value\n * @return {?}\n */\ntransform(value: number): any {\n\n        // allow for async values\n        if (!value) {\n            return value;\n        }\n        \n        let /** @type {?} */ units = ['B', 'KB', 'MB', 'GB', 'TB'];\n\n        // calculate the which unit bracket the values should be a part of\n        let /** @type {?} */ idx = Math.floor(Math.log(value) / Math.log(1024));\n        let /** @type {?} */ formattedValue = value / Math.pow(1024, idx);\n        \n        return `${formattedValue.toFixed(2)} ${units[idx]}`;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Pipe, args: [{\n    name: 'fileSize'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction FileSizePipe_tsickle_Closure_declarations() {\n/** @type {?} */\nFileSizePipe.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFileSizePipe.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\n\nimport { FileSizePipe } from './file-size.pipe';\nexport class FileSizePipeModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    exports: [FileSizePipe],\n    declarations: [FileSizePipe]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction FileSizePipeModule_tsickle_Closure_declarations() {\n/** @type {?} */\nFileSizePipeModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFileSizePipeModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { MediaPlayerComponent } from './media-player.component';\nimport { MediaPlayerTimelineExtensionComponent } from './extensions/timeline/timeline.component';\nimport { MediaPlayerBaseExtensionDirective } from './extensions/base-extension.directive';\nimport { MediaPlayerControlsExtensionComponent } from './extensions/controls/controls.component';\nimport { FrameExtractionModule } from '../../services/frame-extraction/frame-extraction.module';\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\nimport { AudioServiceModule } from '../../services/audio/index';\nimport { DurationPipeModule } from '../../pipes/duration/index';\nimport { FileSizePipeModule } from '../../pipes/file-size/index';\nimport { MediaPlayerService } from './media-player.service';\n\nconst /** @type {?} */ DECLARATIONS = [\n    MediaPlayerComponent,\n    MediaPlayerTimelineExtensionComponent,\n    MediaPlayerBaseExtensionDirective,\n    MediaPlayerControlsExtensionComponent\n];\nexport class MediaPlayerModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        CommonModule,\n        FrameExtractionModule,\n        TooltipModule.forRoot(),\n        AudioServiceModule,\n        DurationPipeModule,\n        FileSizePipeModule\n    ],\n    exports: DECLARATIONS,\n    declarations: DECLARATIONS,\n    providers: [MediaPlayerService]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction MediaPlayerModule_tsickle_Closure_declarations() {\n/** @type {?} */\nMediaPlayerModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMediaPlayerModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive } from '@angular/core';\nexport class VirtualScrollLoadingDirective { static decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{ \n    selector: '[uxVirtualScrollLoading]' \n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction VirtualScrollLoadingDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nVirtualScrollLoadingDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nVirtualScrollLoadingDirective.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive } from '@angular/core';\nexport class VirtualScrollLoadButtonDirective { static decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: '[uxVirtualScrollLoadButton]' \n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction VirtualScrollLoadButtonDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nVirtualScrollLoadButtonDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nVirtualScrollLoadButtonDirective.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive } from '@angular/core';\nexport class VirtualScrollCellDirective {\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{ \n    selector: '[uxVirtualScrollCell]' \n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction VirtualScrollCellDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nVirtualScrollCellDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nVirtualScrollCellDirective.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, OnInit, EventEmitter, Output, Input, HostListener, ElementRef, Renderer2, AfterContentInit, ContentChild, TemplateRef, OnDestroy, SimpleChanges } from '@angular/core';\nimport { ResizeService } from '../../directives/resize/index';\nimport { VirtualScrollLoadingDirective } from './directives/virtual-scroll-loading.directive';\nimport { VirtualScrollLoadButtonDirective } from './directives/virtual-scroll-load-button.directive';\nimport { VirtualScrollCellDirective } from './directives/virtual-scroll-cell.directive';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { Observable } from 'rxjs/Observable';\nimport { Subscription } from 'rxjs/Subscription';\nexport class VirtualScrollComponent implements OnInit, AfterContentInit, OnDestroy {\n\n     collection: Observable<any[]> = Observable.create();\n     cellHeight: number;\n     loadOnScroll: boolean = true;\n\n     loading: EventEmitter<number> = new EventEmitter<number>();\n\n     cellTemplate: TemplateRef<any>;\n     loadingIndicatorTemplate: TemplateRef<any>;\n     loadButtonTemplate: TemplateRef<any>;\n\n    cells: BehaviorSubject<any[]> = new BehaviorSubject([]);\n    scrollTop: number = 0;\n    isLoading: boolean = false;\n    pageNumber: number = 0;\n    data: any[] = [];\n    loadingComplete: boolean = false;\nprivate _subscription: Subscription;\nprivate _height: number;\n/**\n * @param {?} _elementRef\n * @param {?} resizeService\n * @param {?} renderer\n */\nconstructor(private _elementRef: ElementRef, resizeService: ResizeService, renderer: Renderer2) {\n\n        // watch for any future changes to size\n        resizeService.addResizeListener(_elementRef.nativeElement, renderer).subscribe(event => this._height = event.height);\n    }\n/**\n * @return {?}\n */\nngOnInit() {\n\n        if (!this.cellHeight) {\n            throw new Error('Virtual Scroll Component requires \"cellHeight\" property to be defined.');\n        }\n\n        // subscribe to the collection\n        this.setupObservable();\n\n        // load the first page of data\n        this.loadNextPage();\n    }\n/**\n * @return {?}\n */\nngAfterContentInit(): void {\n        // re-render cells now that we can display any loading indicator or loading button\n        this.renderCells();\n    }\n/**\n * @param {?} changes\n * @return {?}\n */\nngOnChanges(changes: SimpleChanges): void {\n        if (changes.collection && changes.collection.currentValue !== changes.collection.previousValue && !changes.collection.isFirstChange()) {\n            this.setupObservable();\n            this.reset();\n        }\n    }\n/**\n * @return {?}\n */\nngOnDestroy(): void {\n        this._subscription.unsubscribe();\n    }\n/**\n * @return {?}\n */\nsetupObservable(): void {\n\n        // if there is a current subscription, unsubscribe\n        if (this._subscription && this._subscription.unsubscribe) {\n            this._subscription.unsubscribe();\n        }\n\n        this._subscription = this.collection.subscribe(collection => {\n            this.data.push(...collection);\n            this.renderCells();\n            this.isLoading = false;\n        }, null, () => {\n            this.loadingComplete = true;\n        });\n    }\n/**\n * @return {?}\n */\nrenderCells(): void {\n        this.cells.next(this.getVisibleCells());\n\n        if (this.loadOnScroll && !this.isLoading && !this.loadingComplete) {\n            const /** @type {?} */ remainingScroll = this._elementRef.nativeElement.scrollHeight - (this._elementRef.nativeElement.scrollTop + this._elementRef.nativeElement.clientHeight);\n\n            // if the current cells take up less than the height of the component then load the next page\n            if (remainingScroll <= this._elementRef.nativeElement.clientHeight) {\n                this.loadNextPage();\n            }\n        }\n    }\n/**\n * @return {?}\n */\ngetVisibleCells(): any[] {\n\n        // store the initial element height\n        if (!this._height) {\n            this._height = this._elementRef.nativeElement.offsetHeight;\n        }\n\n        // perform some calculations\n        const /** @type {?} */ scrollTop = this._elementRef.nativeElement.scrollTop;\n        const /** @type {?} */ startCell = Math.floor(scrollTop / this.cellHeight);\n        const /** @type {?} */ endCell = Math.ceil(this._height / this.cellHeight) + 1;\n\n        // update the scroll position\n        this.scrollTop = scrollTop - (scrollTop % this.cellHeight);\n\n        // return a sublist of items visible on the screen\n        return this.data.slice(startCell, startCell + endCell);\n    }\n/**\n * @return {?}\n */\ngetTotalHeight(): number {\n        return this.cellHeight * this.data.length;\n    }\n/**\n * @return {?}\n */\nloadNextPage(): void {\n        this.isLoading = true;\n        this.loading.next(this.pageNumber);\n        this.pageNumber++;\n    }\n/**\n * @return {?}\n */\nreset(): void {\n\n        // reset all values\n        this.scrollTop = 0;\n        this.data = [];\n        this._height = undefined;\n        this.pageNumber = 0;\n        this.loadingComplete = false;\n\n        // set scroll position\n        this._elementRef.nativeElement.scrollTop = 0;\n\n        // clear the current cells\n        this.renderCells();\n\n        // reload first page\n        this.loadNextPage();\n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-virtual-scroll',\n    template: `\n      <div class=\"virtual-scroll-content-height\" [style.height.px]=\"getTotalHeight()\"></div>\n      <div class=\"virtual-scroll-content\" [style.transform]=\"'translateY(' + scrollTop + 'px)'\">\n\n          <!-- Virtually Render Cells -->\n          <ng-container *ngFor=\"let cell of cells | async\">\n              <ng-container *ngTemplateOutlet=\"cellTemplate; context: { cell: cell }\"></ng-container>\n          </ng-container>\n\n          <!-- Loading Indicator -->\n          <ng-container *ngIf=\"loadingIndicatorTemplate && isLoading\" [ngTemplateOutlet]=\"loadingIndicatorTemplate\"></ng-container>\n\n          <!-- Loading Button -->\n          <div class=\"virtual-scroll-load-button\" *ngIf=\"loadButtonTemplate && !loadOnScroll && !loadingComplete && !isLoading\" (click)=\"loadNextPage()\">\n              <ng-container *ngTemplateOutlet=\"loadButtonTemplate\"></ng-container>\n          </div>\n    \n      </div>\n    `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: ResizeService, },\n{type: Renderer2, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'collection': [{ type: Input },],\n'cellHeight': [{ type: Input },],\n'loadOnScroll': [{ type: Input },],\n'loading': [{ type: Output },],\n'cellTemplate': [{ type: ContentChild, args: [VirtualScrollCellDirective, { read: TemplateRef }, ] },],\n'loadingIndicatorTemplate': [{ type: ContentChild, args: [VirtualScrollLoadingDirective, { read: TemplateRef }, ] },],\n'loadButtonTemplate': [{ type: ContentChild, args: [VirtualScrollLoadButtonDirective, { read: TemplateRef }, ] },],\n'renderCells': [{ type: HostListener, args: ['scroll', ] },],\n};\n}\n\nfunction VirtualScrollComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nVirtualScrollComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nVirtualScrollComponent.ctorParameters;\n/** @type {?} */\nVirtualScrollComponent.propDecorators;\n/** @type {?} */\nVirtualScrollComponent.prototype.collection;\n/** @type {?} */\nVirtualScrollComponent.prototype.cellHeight;\n/** @type {?} */\nVirtualScrollComponent.prototype.loadOnScroll;\n/** @type {?} */\nVirtualScrollComponent.prototype.loading;\n/** @type {?} */\nVirtualScrollComponent.prototype.cellTemplate;\n/** @type {?} */\nVirtualScrollComponent.prototype.loadingIndicatorTemplate;\n/** @type {?} */\nVirtualScrollComponent.prototype.loadButtonTemplate;\n/** @type {?} */\nVirtualScrollComponent.prototype.cells;\n/** @type {?} */\nVirtualScrollComponent.prototype.scrollTop;\n/** @type {?} */\nVirtualScrollComponent.prototype.isLoading;\n/** @type {?} */\nVirtualScrollComponent.prototype.pageNumber;\n/** @type {?} */\nVirtualScrollComponent.prototype.data;\n/** @type {?} */\nVirtualScrollComponent.prototype.loadingComplete;\n/** @type {?} */\nVirtualScrollComponent.prototype._subscription;\n/** @type {?} */\nVirtualScrollComponent.prototype._height;\n/** @type {?} */\nVirtualScrollComponent.prototype._elementRef;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { VirtualScrollComponent } from './virtual-scroll.component';\nimport { ResizeModule } from '../../directives/resize/index';\nimport { VirtualScrollLoadingDirective } from './directives/virtual-scroll-loading.directive';\nimport { VirtualScrollLoadButtonDirective } from './directives/virtual-scroll-load-button.directive';\nimport { VirtualScrollCellDirective } from './directives/virtual-scroll-cell.directive';\n\nconst /** @type {?} */ DECLARATIONS = [\n    VirtualScrollComponent,\n    VirtualScrollLoadingDirective,\n    VirtualScrollLoadButtonDirective,\n    VirtualScrollCellDirective\n];\nexport class VirtualScrollModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        CommonModule,\n        ResizeModule\n    ],\n    exports: DECLARATIONS,\n    declarations: DECLARATIONS\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction VirtualScrollModule_tsickle_Closure_declarations() {\n/** @type {?} */\nVirtualScrollModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nVirtualScrollModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Input, EventEmitter } from '@angular/core';\nexport class WizardStepComponent {\n    \n     header: string;\n     valid: boolean = true;\n     visitedChange = new EventEmitter<boolean>();\nprivate _active: boolean = false;\nprivate _visited: boolean = false;\n/**\n * @return {?}\n */\nget visited(): boolean {\n        return this._visited;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset visited(value: boolean) {\n        this._visited = value;\n        this.visitedChange.next(value);\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset active(value: boolean) {\n        \n        // store the active state of the step\n        this._active = value;\n\n        // if the value is true then the step should also be marked as visited\n        if (value === true) {\n            this.visited = true;\n        }\n    }\n/**\n * @return {?}\n */\nget active(): boolean {\n        return this._active;\n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-wizard-step',\n    template: `\n      <ng-container *ngIf=\"active\">\n          <ng-content></ng-content>\n      </ng-container>\n    `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'header': [{ type: Input },],\n'valid': [{ type: Input },],\n'visitedChange': [{ type: Input },],\n'visited': [{ type: Input },],\n};\n}\n\nfunction WizardStepComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nWizardStepComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nWizardStepComponent.ctorParameters;\n/** @type {?} */\nWizardStepComponent.propDecorators;\n/** @type {?} */\nWizardStepComponent.prototype.header;\n/** @type {?} */\nWizardStepComponent.prototype.valid;\n/** @type {?} */\nWizardStepComponent.prototype.visitedChange;\n/** @type {?} */\nWizardStepComponent.prototype._active;\n/** @type {?} */\nWizardStepComponent.prototype._visited;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Input, ContentChildren, QueryList, AfterViewInit, Output, EventEmitter } from '@angular/core';\nimport { WizardStepComponent } from './wizard-step.component';\nexport class WizardComponent implements AfterViewInit {\nprivate _step: number = 0;\n\n     steps = new QueryList<WizardStepComponent>();\n\n     orientation: 'horizontal' | 'vertical' = 'horizontal';\n\n     nextText: string = 'Next';\n     previousText: string = 'Previous';\n     cancelText: string = 'Cancel';\n     finishText: string = 'Finish';\n\n     nextTooltip: string = 'Go to the next step';\n     previousTooltip: string = 'Go to the previous step';\n     cancelTooltip: string = 'Cancel the wizard';\n     finishTooltip: string = 'Finish the wizard';\n\n     nextDisabled: boolean = false;\n     previousDisabled: boolean = false;\n     cancelDisabled: boolean = false;\n     finishDisabled: boolean = false;\n\n     nextVisible: boolean = true;\n     previousVisible: boolean = true;\n     cancelVisible: boolean = true;\n     finishVisible: boolean = true;\n     cancelAlwaysVisible: boolean = false;\n     finishAlwaysVisible: boolean = false;\n\n     onNext = new EventEmitter<number>();\n     onPrevious = new EventEmitter<number>();\n     onCancel = new EventEmitter<void>();\n     onFinish = new EventEmitter<void>();\n     stepChange = new EventEmitter<number>();\n\n    invalidIndicator: boolean = false;\n/**\n * @return {?}\n */\nget step() {\n        return this._step;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset step(value: number) {\n        \n        // only accept numbers as valid options\n        if (typeof value === 'number') {\n\n            // store the active step\n            this._step = value;\n\n            // update which steps should be active\n            this.update();\n\n            // emit the change event\n            this.stepChange.next(this.step);\n\n            // reset the invalid state\n            this.invalidIndicator = false;\n        }\n    }\n/**\n * @return {?}\n */\nngAfterViewInit(): void {\n\n        // initially set the correct visibility of the steps\n        setTimeout(this.update.bind(this));\n    }\n/**\n * Navigate to the next step\n * @return {?}\n */\nnext(): void {\n\n        // check if current step is invalid\n        if (!this.getCurrentStep().valid) {\n            this.invalidIndicator = true;\n            return;\n        }\n\n        // check if we are currently on the last step\n        if ((this.step + 1) < this.steps.length) {\n            this.step++;\n\n            // emit the current step\n            this.onNext.next(this.step);\n        }\n    }\n/**\n * Navigate to the previous step\n * @return {?}\n */\nprevious(): void {\n        \n        // check if we are currently on the last step\n        if (this.step > 0) {\n            this.step--;\n\n            // emit the current step\n            this.onPrevious.next(this.step);            \n        }\n    }\n/**\n * Perform actions when the finish button is clicked\n * @return {?}\n */\nfinish(): void {\n        this.onFinish.next();        \n    }\n/**\n * Perform actions when the cancel button is clicked\n * @return {?}\n */\ncancel(): void {\n        this.onCancel.next();\n    }\n/**\n * Update the active state of each step\n * @return {?}\n */\nupdate(): void {\n        // update which steps should be active\n        this.steps.forEach((step, idx) => step.active = idx === this.step);\n    }\n/**\n * Jump to a specific step only if the step has previously been visited\n * @param {?} step\n * @return {?}\n */\ngotoStep(step: WizardStepComponent): void {\n        if (step.visited) {\n            this.step = this.steps.toArray().findIndex(stp => stp === step);\n        }\n    }\n/**\n * Determine if the current step is the last step\n * @return {?}\n */\nisLastStep(): boolean {\n        return this.step === (this.steps.length - 1);\n    }\n/**\n * Reset the wizard - goes to first step and resets visited state\n * @return {?}\n */\nreset(): void {\n\n        // mark all steps as not visited\n        this.steps.forEach(step => step.visited = false);\n\n        // go to the first step\n        this.step = 0;\n    }\n/**\n * Get the step at the current index\n * @return {?}\n */\ngetCurrentStep(): WizardStepComponent {\n        return this.getStepAtIndex(this.step);\n    }\n/**\n * Return a step at a specific index\n * @param {?} index\n * @return {?}\n */\ngetStepAtIndex(index: number): WizardStepComponent {\n        return this.steps.toArray()[index];\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-wizard',\n    template: `\n      <div class=\"wizard-body\">\n\n          <div class=\"wizard-steps\">\n    \n              <div class=\"wizard-step\" [class.active]=\"stp.active\" [class.visited]=\"stp.visited\" [class.invalid]=\"stp.active && !stp.valid && invalidIndicator\" (click)=\"gotoStep(stp)\" *ngFor=\"let stp of steps\">\n                  {{ stp.header }}\n              </div>\n    \n          </div>\n    \n          <div class=\"wizard-content\">\n              <ng-content></ng-content>\n          </div>\n    \n      </div>\n\n      <div class=\"wizard-footer\">\n          <button #tip=\"bs-tooltip\" class=\"btn button-secondary\" *ngIf=\"previousVisible\" [tooltip]=\"previousTooltip\" container=\"body\" [disabled]=\"previousDisabled || step === 0\"\n              (click)=\"previous(); tip.hide()\">{{ previousText }}</button>\n\n          <button #tip=\"bs-tooltip\" class=\"btn button-primary\" *ngIf=\"nextVisible && !isLastStep()\" [tooltip]=\"nextTooltip\" container=\"body\" [disabled]=\"nextDisabled\"\n              (click)=\"next(); tip.hide()\">{{ nextText }}</button>\n\n          <button #tip=\"bs-tooltip\" class=\"btn button-primary\" *ngIf=\"finishVisible && isLastStep() || finishAlwaysVisible\" [tooltip]=\"finishTooltip\"\n              container=\"body\" [disabled]=\"finishDisabled\" (click)=\"finish(); tip.hide()\">{{ finishText }}</button>\n\n          <button #tip=\"bs-tooltip\" class=\"btn button-secondary\" *ngIf=\"cancelVisible && !isLastStep() || cancelAlwaysVisible\" [tooltip]=\"cancelTooltip\"\n              container=\"body\" [disabled]=\"cancelDisabled\" (click)=\"cancel(); tip.hide()\">{{ cancelText }}</button>\n      </div>\n    `,\n    host: {\n        '[class]': 'orientation'\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'steps': [{ type: ContentChildren, args: [WizardStepComponent, ] },],\n'orientation': [{ type: Input },],\n'nextText': [{ type: Input },],\n'previousText': [{ type: Input },],\n'cancelText': [{ type: Input },],\n'finishText': [{ type: Input },],\n'nextTooltip': [{ type: Input },],\n'previousTooltip': [{ type: Input },],\n'cancelTooltip': [{ type: Input },],\n'finishTooltip': [{ type: Input },],\n'nextDisabled': [{ type: Input },],\n'previousDisabled': [{ type: Input },],\n'cancelDisabled': [{ type: Input },],\n'finishDisabled': [{ type: Input },],\n'nextVisible': [{ type: Input },],\n'previousVisible': [{ type: Input },],\n'cancelVisible': [{ type: Input },],\n'finishVisible': [{ type: Input },],\n'cancelAlwaysVisible': [{ type: Input },],\n'finishAlwaysVisible': [{ type: Input },],\n'onNext': [{ type: Output },],\n'onPrevious': [{ type: Output },],\n'onCancel': [{ type: Output },],\n'onFinish': [{ type: Output },],\n'stepChange': [{ type: Output },],\n'step': [{ type: Input },],\n};\n}\n\nfunction WizardComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nWizardComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nWizardComponent.ctorParameters;\n/** @type {?} */\nWizardComponent.propDecorators;\n/** @type {?} */\nWizardComponent.prototype._step;\n/** @type {?} */\nWizardComponent.prototype.steps;\n/** @type {?} */\nWizardComponent.prototype.orientation;\n/** @type {?} */\nWizardComponent.prototype.nextText;\n/** @type {?} */\nWizardComponent.prototype.previousText;\n/** @type {?} */\nWizardComponent.prototype.cancelText;\n/** @type {?} */\nWizardComponent.prototype.finishText;\n/** @type {?} */\nWizardComponent.prototype.nextTooltip;\n/** @type {?} */\nWizardComponent.prototype.previousTooltip;\n/** @type {?} */\nWizardComponent.prototype.cancelTooltip;\n/** @type {?} */\nWizardComponent.prototype.finishTooltip;\n/** @type {?} */\nWizardComponent.prototype.nextDisabled;\n/** @type {?} */\nWizardComponent.prototype.previousDisabled;\n/** @type {?} */\nWizardComponent.prototype.cancelDisabled;\n/** @type {?} */\nWizardComponent.prototype.finishDisabled;\n/** @type {?} */\nWizardComponent.prototype.nextVisible;\n/** @type {?} */\nWizardComponent.prototype.previousVisible;\n/** @type {?} */\nWizardComponent.prototype.cancelVisible;\n/** @type {?} */\nWizardComponent.prototype.finishVisible;\n/** @type {?} */\nWizardComponent.prototype.cancelAlwaysVisible;\n/** @type {?} */\nWizardComponent.prototype.finishAlwaysVisible;\n/** @type {?} */\nWizardComponent.prototype.onNext;\n/** @type {?} */\nWizardComponent.prototype.onPrevious;\n/** @type {?} */\nWizardComponent.prototype.onCancel;\n/** @type {?} */\nWizardComponent.prototype.onFinish;\n/** @type {?} */\nWizardComponent.prototype.stepChange;\n/** @type {?} */\nWizardComponent.prototype.invalidIndicator;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\nimport { WizardComponent } from './wizard.component';\nimport { WizardStepComponent } from './wizard-step.component';\n\nconst /** @type {?} */ DECLARATIONS = [\n    WizardComponent,\n    WizardStepComponent\n];\nexport class WizardModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        CommonModule,\n        TooltipModule.forRoot()\n    ],\n    exports: DECLARATIONS,\n    declarations: DECLARATIONS\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction WizardModule_tsickle_Closure_declarations() {\n/** @type {?} */\nWizardModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nWizardModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nexport class HelpCenterService {\n\n    items: BehaviorSubject<HelpCenterItem[]> = new BehaviorSubject<HelpCenterItem[]>([]);\n/**\n * @param {?} item\n * @return {?}\n */\nregisterItem(item: HelpCenterItem): void {\n\n        // get the current items\n        let /** @type {?} */ items = this.items.getValue();\n\n        // add the new item to the list\n        items.push(item);\n\n        // update the observable\n        this.items.next(items);\n    }\n/**\n * @param {?} item\n * @return {?}\n */\nunregisterItem(item: HelpCenterItem): void {\n\n        // get the current items\n        let /** @type {?} */ items = this.items.getValue();\n\n        // remove the item being unregistered\n        items = items.filter(itm => itm !== item);\n\n        // update the observable\n        this.items.next(items);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction HelpCenterService_tsickle_Closure_declarations() {\n/** @type {?} */\nHelpCenterService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nHelpCenterService.ctorParameters;\n/** @type {?} */\nHelpCenterService.prototype.items;\n}\n\n\nexport interface HelpCenterItem {\n    icon?: string;\n    title: string;\n    select?: () => void;\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, Input, OnInit, OnDestroy } from '@angular/core';\nimport { HelpCenterService, HelpCenterItem } from './help-center.service';\nexport class HelpCenterItemDirective implements OnInit, OnDestroy {\n\n     uxHelpCenterItem: HelpCenterItem;\n/**\n * @param {?} _helpCenterService\n */\nconstructor(private _helpCenterService: HelpCenterService) { }\n/**\n * @return {?}\n */\nngOnInit(): void {\n\n        // register the item in the service\n        this._helpCenterService.registerItem(this.uxHelpCenterItem);\n    }\n/**\n * @return {?}\n */\nngOnDestroy(): void {\n        // remove this item when it is destroyed\n        this._helpCenterService.unregisterItem(this.uxHelpCenterItem);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{ selector: '[uxHelpCenterItem]' }, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: HelpCenterService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'uxHelpCenterItem': [{ type: Input },],\n};\n}\n\nfunction HelpCenterItemDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nHelpCenterItemDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nHelpCenterItemDirective.ctorParameters;\n/** @type {?} */\nHelpCenterItemDirective.propDecorators;\n/** @type {?} */\nHelpCenterItemDirective.prototype.uxHelpCenterItem;\n/** @type {?} */\nHelpCenterItemDirective.prototype._helpCenterService;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { HelpCenterItemDirective } from './help-center-item.directive';\nimport { HelpCenterService } from './help-center.service';\nexport class HelpCenterModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [],\n    exports: [HelpCenterItemDirective],\n    declarations: [HelpCenterItemDirective],\n    providers: [HelpCenterService],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction HelpCenterModule_tsickle_Closure_declarations() {\n/** @type {?} */\nHelpCenterModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nHelpCenterModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs/Subject';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { HoverActionDirective } from './hover-action.directive';\nimport { HoverActionContainerDirective } from './hover-action-container.directive';\nexport class HoverActionService {\n\n    active: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\nprivate _container: HoverActionContainerDirective;\nprivate _focused: boolean = false;\nprivate _hovered: boolean = false;\nprivate _actions: HoverActionDirective[] = [];\n/**\n * @param {?} action\n * @return {?}\n */\nregister(action: HoverActionDirective): void {\n        this._actions.push(action);\n    }\n/**\n * @param {?} action\n * @return {?}\n */\nunregister(action: HoverActionDirective): void {\n        this._actions = this._actions.filter(actn => actn !== action);\n    }\n/**\n * @param {?} container\n * @return {?}\n */\nsetContainer(container: HoverActionContainerDirective): void {\n        this._container = container;\n    }\n/**\n * @param {?} focus\n * @return {?}\n */\nsetFocusState(focus: boolean): void {\n        this._focused = focus;\n        this.updateVisibility();\n    }\n/**\n * @param {?} hover\n * @return {?}\n */\nsetHoverState(hover: boolean): void {\n        this._hovered = hover;\n        this.updateVisibility();\n    }\n/**\n * @return {?}\n */\nnext(): void {\n\n        // if container has focus then focus the first hover action\n        if (this.containerHasFocus()) {\n            this.focusActionAtIndex(0);\n            return this.updateVisibility();\n        }\n\n        // if a hover action has focus then focus the next action\n        if (this.actionHasFocus()) {\n            let /** @type {?} */ index = this.getFocusedActionIndex() + 1;\n            this.focusActionAtIndex(index);\n            this.updateVisibility();\n        }\n    }\n/**\n * @return {?}\n */\nprevious(): void {\n        // if a hover action has focus then focus the previous action\n        if (this.actionHasFocus()) {\n            let /** @type {?} */ index = this.getFocusedActionIndex() - 1;\n\n            if (index >= 0) {\n                this.focusActionAtIndex(index);\n            } else {\n                this._container.focus();\n            }\n        }\n\n        this.updateVisibility();\n    }\n/**\n * @return {?}\n */\nupdateVisibility(): void {\n        this.active.next(this._focused || this._hovered || this.actionHasFocus());\n    }\n/**\n * @param {?} index\n * @return {?}\n */\nprivate focusActionAtIndex(index: number): void {\n        if (index >= 0 && index < this._actions.length) {\n            this._actions[index].focus();\n        }\n    }\n/**\n * @return {?}\n */\nprivate getFocusedActionIndex(): number {\n        return this._actions.findIndex(action => action === this.getFocusedAction());\n    }\n/**\n * @return {?}\n */\nprivate containerHasFocus(): boolean {\n        return this._focused;\n    }\n/**\n * @return {?}\n */\nprivate actionHasFocus(): boolean {\n        return !!this.getFocusedAction();\n    }\n/**\n * @return {?}\n */\nprivate getFocusedAction(): HoverActionDirective {\n        return this._actions.find(action => action.focused);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction HoverActionService_tsickle_Closure_declarations() {\n/** @type {?} */\nHoverActionService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nHoverActionService.ctorParameters;\n/** @type {?} */\nHoverActionService.prototype.active;\n/** @type {?} */\nHoverActionService.prototype._container;\n/** @type {?} */\nHoverActionService.prototype._focused;\n/** @type {?} */\nHoverActionService.prototype._hovered;\n/** @type {?} */\nHoverActionService.prototype._actions;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ContentChildren, QueryList, HostListener, ElementRef, OnDestroy, Input } from '@angular/core';\nimport { HoverActionDirective } from './hover-action.directive';\nimport { HoverActionService } from './hover-action.service';\nimport { Subscription } from 'rxjs/Subscription';\nexport class HoverActionContainerDirective implements OnDestroy {\n\n     tabindex: number = 0;\n    active: boolean = false;\nprivate active$: Subscription;\n/**\n * @param {?} _elementRef\n * @param {?} _hoverActionService\n */\nconstructor(private _elementRef: ElementRef,\nprivate _hoverActionService: HoverActionService) {\n        // register the container element with the service\n        this._hoverActionService.setContainer(this);\n        \n        // apply a class based on the active state of the container and it's actions\n        this.active$ = this._hoverActionService.active.subscribe(active => this.active = active);\n    }\n/**\n * @return {?}\n */\nngOnDestroy(): void {\n        this.active$.unsubscribe();\n    }\n/**\n * @return {?}\n */\nfocus(): void {\n        this._elementRef.nativeElement.focus();\n    }\n/**\n * @return {?}\n */\nonFocus(): void {\n        this._hoverActionService.setFocusState(true);\n    }\n/**\n * @return {?}\n */\nonBlur(): void {\n        this._hoverActionService.setFocusState(false);\n    }\n/**\n * @return {?}\n */\nonHover(): void {\n        this._hoverActionService.setHoverState(true);\n    }\n/**\n * @return {?}\n */\nonLeave(): void {\n        this._hoverActionService.setHoverState(false);\n    }\n/**\n * @return {?}\n */\nnext(): void {\n        this._hoverActionService.next();\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: '[uxHoverActionContainer]',\n    providers: [HoverActionService],\n    host: {\n        '[class.hover-action-container-active]': 'active',\n        '[tabindex]': 'tabindex'\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: HoverActionService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'tabindex': [{ type: Input },],\n'focus': [{ type: HostListener, args: ['click', ] },],\n'onFocus': [{ type: HostListener, args: ['focus', ] },],\n'onBlur': [{ type: HostListener, args: ['blur', ] },],\n'onHover': [{ type: HostListener, args: ['mouseenter', ] },],\n'onLeave': [{ type: HostListener, args: ['mouseleave', ] },],\n'next': [{ type: HostListener, args: ['keydown.arrowright', ] },],\n};\n}\n\nfunction HoverActionContainerDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nHoverActionContainerDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nHoverActionContainerDirective.ctorParameters;\n/** @type {?} */\nHoverActionContainerDirective.propDecorators;\n/** @type {?} */\nHoverActionContainerDirective.prototype.tabindex;\n/** @type {?} */\nHoverActionContainerDirective.prototype.active;\n/** @type {?} */\nHoverActionContainerDirective.prototype.active$;\n/** @type {?} */\nHoverActionContainerDirective.prototype._elementRef;\n/** @type {?} */\nHoverActionContainerDirective.prototype._hoverActionService;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ElementRef, HostListener, OnDestroy, Input } from '@angular/core';\nimport { HoverActionService } from './hover-action.service';\nimport { Subscription } from 'rxjs/Subscription';\nexport class HoverActionDirective implements OnDestroy {\n\n     tabindex: number = 1;\n    active: boolean = false;\n    focused: boolean = false;\nprivate active$: Subscription;\n/**\n * @param {?} _elementRef\n * @param {?} _hoverActionService\n */\nconstructor(private _elementRef: ElementRef,\nprivate _hoverActionService: HoverActionService) {\n\n        // register the action\n        this._hoverActionService.register(this);\n\n        // watch for changes to the activeness of the container\n        this.active$ = this._hoverActionService.active.subscribe(active => this.active = active);\n    }\n/**\n * @return {?}\n */\nngOnDestroy(): void {\n        this._hoverActionService.unregister(this);\n        this.active$.unsubscribe();\n    }\n/**\n * @return {?}\n */\nfocus(): void {\n        this._elementRef.nativeElement.focus();\n    }\n/**\n * @return {?}\n */\nonFocus(): void {\n        this.focused = true;\n        this._hoverActionService.updateVisibility();\n    }\n/**\n * @return {?}\n */\nonBlur(): void {\n        this.focused = false;\n        this._hoverActionService.updateVisibility();\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nprevious(event: MouseEvent): void {\n        event.stopPropagation();        \n        this._hoverActionService.previous();\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nnext(event: MouseEvent): void {\n        event.stopPropagation();\n        this._hoverActionService.next();\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: '[uxHoverAction]',\n    host: {\n        '[class.hover-action-active]': 'active',\n        '[class.hover-action-focused]': 'focused',\n        '[tabindex]': 'tabindex'\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: HoverActionService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'tabindex': [{ type: Input },],\n'onFocus': [{ type: HostListener, args: ['focus', ] },],\n'onBlur': [{ type: HostListener, args: ['blur', ] },],\n'previous': [{ type: HostListener, args: ['keydown.arrowleft', ['$event'], ] },],\n'next': [{ type: HostListener, args: ['keydown.arrowright', ['$event'], ] },],\n};\n}\n\nfunction HoverActionDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nHoverActionDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nHoverActionDirective.ctorParameters;\n/** @type {?} */\nHoverActionDirective.propDecorators;\n/** @type {?} */\nHoverActionDirective.prototype.tabindex;\n/** @type {?} */\nHoverActionDirective.prototype.active;\n/** @type {?} */\nHoverActionDirective.prototype.focused;\n/** @type {?} */\nHoverActionDirective.prototype.active$;\n/** @type {?} */\nHoverActionDirective.prototype._elementRef;\n/** @type {?} */\nHoverActionDirective.prototype._hoverActionService;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { HoverActionContainerDirective } from './hover-action-container.directive';\nimport { HoverActionDirective } from './hover-action.directive';\n\nconst /** @type {?} */ DECLARATIONS = [\n    HoverActionDirective,\n    HoverActionContainerDirective\n];\nexport class HoverActionModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    exports: DECLARATIONS,\n    declarations: DECLARATIONS\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction HoverActionModule_tsickle_Closure_declarations() {\n/** @type {?} */\nHoverActionModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nHoverActionModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, Input, TemplateRef, SimpleChanges, ViewContainerRef, EmbeddedViewRef } from '@angular/core';\nexport class LayoutSwitcherItemDirective {\nprivate _config: LayoutSwitcherItem;\nprivate _embeddedView: EmbeddedViewRef<any>;\n/**\n * @param {?} _templateRef\n * @param {?} _viewContainerRef\n */\nconstructor(private _templateRef: TemplateRef<any>,\nprivate _viewContainerRef: ViewContainerRef) { }\n/**\n * @return {?}\n */\ngetLayout(): TemplateRef<any> {\n        return this._templateRef;\n    }\n/**\n * @return {?}\n */\ngetConfig(): LayoutSwitcherItem {\n        return this._config;\n    }\n/**\n * @return {?}\n */\nactivate(): void {\n        this._embeddedView = this._viewContainerRef.createEmbeddedView(this._templateRef);\n    }\n/**\n * @return {?}\n */\ndeactivate(): void {\n        let /** @type {?} */ index = this._viewContainerRef.indexOf(this._embeddedView);\n        this._viewContainerRef.remove(index);\n        this._embeddedView = null;\n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: '[uxLayoutSwitcherItem]'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: TemplateRef, },\n{type: ViewContainerRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'_config': [{ type: Input, args: ['uxLayoutSwitcherItem', ] },],\n};\n}\n\nfunction LayoutSwitcherItemDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nLayoutSwitcherItemDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nLayoutSwitcherItemDirective.ctorParameters;\n/** @type {?} */\nLayoutSwitcherItemDirective.propDecorators;\n/** @type {?} */\nLayoutSwitcherItemDirective.prototype._config;\n/** @type {?} */\nLayoutSwitcherItemDirective.prototype._embeddedView;\n/** @type {?} */\nLayoutSwitcherItemDirective.prototype._templateRef;\n/** @type {?} */\nLayoutSwitcherItemDirective.prototype._viewContainerRef;\n}\n\n\nexport interface LayoutSwitcherItem {\n    group?: string;\n    minWidth?: number;\n    maxWidth?: number;\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ElementRef, Renderer2, QueryList, ContentChildren, Input, AfterContentInit, ViewContainerRef, OnChanges, SimpleChanges } from '@angular/core';\nimport { ResizeService } from '../resize/index';\nimport { LayoutSwitcherItemDirective } from './layout-switcher-item.directive';\nexport class LayoutSwitcherDirective implements AfterContentInit, OnChanges {\n\n     group: string;\nprivate _layouts: QueryList<LayoutSwitcherItemDirective>;\nprivate _width: number;\nprivate _activeLayout: LayoutSwitcherItemDirective;\n/**\n * @param {?} _elementRef\n * @param {?} resizeService\n * @param {?} renderer\n * @param {?} _viewContainerRef\n */\nconstructor(private _elementRef: ElementRef, resizeService: ResizeService, renderer: Renderer2,\nprivate _viewContainerRef: ViewContainerRef) {\n\n        // watch for changes to the container size\n        resizeService.addResizeListener(_elementRef.nativeElement, renderer).subscribe(event => {\n            this._width = event.width;\n\n            // render the appropriate layout\n            this.updateActiveLayout();\n        });\n    }\n/**\n * @param {?} changes\n * @return {?}\n */\nngOnChanges(changes: SimpleChanges): void {\n\n        // if the active group has changed then render the appropriate layout\n        if (changes.group.currentValue !== changes.group.previousValue) {\n            this.updateActiveLayout();\n        }\n    }\n/**\n * @return {?}\n */\ngetActiveLayout(): LayoutSwitcherItemDirective | null {\n\n        // if there are currently no layouts then do nothing\n        if (!this._layouts) {\n            return null;\n        }\n\n        // otherwise find layouts that match the active group and that meet the constraints\n        return this._layouts.filter(layout => this.group === layout.getConfig().group).find(layout => {\n\n            let /** @type {?} */ minWidth = layout.getConfig().minWidth || 0;\n            let /** @type {?} */ maxWidth = layout.getConfig().maxWidth || Infinity;\n\n            return this._width >= minWidth && this._width < maxWidth;\n        });\n    }\n/**\n * @return {?}\n */\nupdateActiveLayout(): void {\n\n        // get the layout that should be shown\n        let /** @type {?} */ layout = this.getActiveLayout();\n\n        // check if we are currently showing the layout\n        if (this._activeLayout === layout) {\n            return;\n        }\n\n        // remove the current layout\n        if (this._activeLayout) {\n            this._activeLayout.deactivate();\n        }\n\n        // store the new active layout\n        this._activeLayout = layout;\n\n        // if there is an active layout then activate\n        if (this._activeLayout) {\n            this._activeLayout.activate();\n        }\n    }\n/**\n * @return {?}\n */\nngAfterContentInit(): void {\n\n        // store the initial current element width\n        this._width = this._elementRef.nativeElement.offsetWidth;\n\n        // render the appropriate layout - need a delay as Angular doesn't like changes like this in these lifecycle hooks\n        requestAnimationFrame(this.updateActiveLayout.bind(this));\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: '[uxLayoutSwitcher]'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: ResizeService, },\n{type: Renderer2, },\n{type: ViewContainerRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'group': [{ type: Input },],\n'_layouts': [{ type: ContentChildren, args: [LayoutSwitcherItemDirective, ] },],\n};\n}\n\nfunction LayoutSwitcherDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nLayoutSwitcherDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nLayoutSwitcherDirective.ctorParameters;\n/** @type {?} */\nLayoutSwitcherDirective.propDecorators;\n/** @type {?} */\nLayoutSwitcherDirective.prototype.group;\n/** @type {?} */\nLayoutSwitcherDirective.prototype._layouts;\n/** @type {?} */\nLayoutSwitcherDirective.prototype._width;\n/** @type {?} */\nLayoutSwitcherDirective.prototype._activeLayout;\n/** @type {?} */\nLayoutSwitcherDirective.prototype._elementRef;\n/** @type {?} */\nLayoutSwitcherDirective.prototype._viewContainerRef;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { LayoutSwitcherDirective } from './layout-switcher.directive';\nimport { LayoutSwitcherItemDirective } from './layout-switcher-item.directive';\nimport { ResizeModule } from '../resize/index';\n\nconst /** @type {?} */ DECLARATIONS = [\n    LayoutSwitcherDirective,\n    LayoutSwitcherItemDirective\n];\nexport class LayoutSwitcherModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        ResizeModule\n    ],\n    exports: DECLARATIONS,\n    declarations: DECLARATIONS,\n    providers: [],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction LayoutSwitcherModule_tsickle_Closure_declarations() {\n/** @type {?} */\nLayoutSwitcherModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nLayoutSwitcherModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Pipe, Injectable, PipeTransform } from '@angular/core';\nexport class StringFilterPipe implements PipeTransform {\n/**\n * @param {?} items\n * @param {?} value\n * @return {?}\n */\ntransform(items: any[], value: string): any[] {  \n        if (!items) {\n            return [];\n        }\n        return items.filter(it => it.toLowerCase().indexOf(value.toLowerCase()) >= 0);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Pipe, args: [{\n    name: 'stringFilter'\n}, ] },\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction StringFilterPipe_tsickle_Closure_declarations() {\n/** @type {?} */\nStringFilterPipe.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nStringFilterPipe.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { StringFilterPipe } from './string-filter.pipe';\nimport { NgModule } from '@angular/core';\nexport class StringFilterModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    exports: [StringFilterPipe],\n    declarations: [StringFilterPipe]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction StringFilterModule_tsickle_Closure_declarations() {\n/** @type {?} */\nStringFilterModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nStringFilterModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { StorageAdapter } from './storage-adapter';\nexport class CookieAdapter implements StorageAdapter {\n/**\n * @param {?} key\n * @return {?}\n */\ngetItem(key: string): string {\n\n        if (document.cookie) {\n\n            // get all the cookies for this site\n            const /** @type {?} */ cookies = document.cookie.split(';');\n\n            // process the cookies into a from we can easily manage\n            const /** @type {?} */ match = cookies\n                .map(cookie => ({ key: cookie.split('=')[0].trim(), value: cookie.split('=')[1].trim() }))\n                .find(cookie => cookie.key === key);\n\n            return match ? match.value : null;\n        }\n\n        return null;\n    }\n/**\n * @param {?} key\n * @param {?} value\n * @return {?}\n */\nsetItem(key: string, value: string): void {\n        document.cookie = `${key}=${value}; path=/`;\n    }\n/**\n * @param {?} key\n * @return {?}\n */\nremoveItem(key: string): void {\n\n        document.cookie.split(';').forEach(cookie => {\n            const /** @type {?} */ eqPos = cookie.indexOf('=');\n            const /** @type {?} */ name = eqPos > -1 ? cookie.substr(0, eqPos).trim() : cookie;\n\n            if (name === key) {\n                document.cookie = cookie.trim().replace(/=.*/, `=;expires=${new Date().toUTCString()};path=/`);\n            }\n        });\n    }\n/**\n * @return {?}\n */\nclear(): void {\n\n        // call remove item on each cookie\n        document.cookie.split(';').map(cookie => cookie.split('=')[0].trim())\n            .forEach(cookie => this.removeItem(cookie));\n    }\n/**\n * @return {?}\n */\ngetSupported(): StorageAdapter {\n        // cookies are supported in all browsers\n        return this;\n    }\n\n}","import { StorageAdapter } from './storage-adapter';\nimport { CookieAdapter } from './cookie-adapter';\nexport class LocalStorageAdapter implements StorageAdapter {\n/**\n * @param {?} key\n * @return {?}\n */\ngetItem(key: string): string {\n        return localStorage.getItem(key);\n    }\n/**\n * @param {?} key\n * @param {?} value\n * @return {?}\n */\nsetItem(key: string, value: string): void {\n        localStorage.setItem(key, value);\n    }\n/**\n * @param {?} key\n * @return {?}\n */\nremoveItem(key: string): void {\n        localStorage.removeItem(key);\n    }\n/**\n * @return {?}\n */\nclear(): void {\n        localStorage.clear();\n    }\n/**\n * @return {?}\n */\ngetSupported(): StorageAdapter {\n\n        // if local storage variable does not exist fall back to cookies\n        if (!localStorage) {\n            return new CookieAdapter();\n        }\n\n        // try to make a test save to local storage to see if there are any exceptions\n        try {\n            localStorage.setItem('ux-persistent-data-service', 'ux-persistent-data-service');\n            localStorage.removeItem('ux-persistent-data-service');\n\n            return this;\n        } catch ( /** @type {?} */err) {\n            return new CookieAdapter();\n        }\n    }\n\n}","import { StorageAdapter } from './storage-adapter';\nimport { CookieAdapter } from './cookie-adapter';\nexport class SessionStorageAdapter implements StorageAdapter {\n/**\n * @param {?} key\n * @return {?}\n */\ngetItem(key: string): string {\n        return sessionStorage.getItem(key);\n    }\n/**\n * @param {?} key\n * @param {?} value\n * @return {?}\n */\nsetItem(key: string, value: string): void {\n        sessionStorage.setItem(key, value);\n    }\n/**\n * @param {?} key\n * @return {?}\n */\nremoveItem(key: string): void {\n        sessionStorage.removeItem(key);\n    }\n/**\n * @return {?}\n */\nclear(): void {\n        sessionStorage.clear();\n    }\n/**\n * @return {?}\n */\ngetSupported(): StorageAdapter {\n\n        // if local storage variable does not exist fall back to cookies\n        if (!sessionStorage) {\n            return new CookieAdapter();\n        }\n\n        // try to make a test save to local storage to see if there are any exceptions\n        try {\n            sessionStorage.setItem('ux-persistent-data-service', 'ux-persistent-data-service');\n            sessionStorage.removeItem('ux-persistent-data-service');\n\n            return this;\n        } catch ( /** @type {?} */err) {\n            return new CookieAdapter();\n        }\n    }\n\n}","import { Injectable } from '@angular/core';\nimport { StorageAdapter } from './adapters/storage-adapter';\nimport { CookieAdapter } from './adapters/cookie-adapter';\nimport { LocalStorageAdapter } from './adapters/local-storage-adapter';\nimport { SessionStorageAdapter } from './adapters/session-storage-adapter';\nexport class PersistentDataService {\n/**\n * Save the item in some form of persistent storage\n * @param {?} key\n * @param {?} value\n * @param {?=} type\n * @return {?}\n */\nsetItem(key: string, value: string, type: PersistentDataStorageType = PersistentDataStorageType.LocalStorage): void {\n        this.getAdapter(type).setItem(key, value);\n    }\n/**\n * Get a stored value from persistent storage\n * @param {?} key\n * @param {?=} type\n * @return {?}\n */\ngetItem(key: string, type: PersistentDataStorageType = PersistentDataStorageType.LocalStorage): string {\n        return this.getAdapter(type).getItem(key);\n    }\n/**\n * Remove a stored value from persistent storage\n * @param {?} key\n * @param {?=} type\n * @return {?}\n */\nremoveItem(key: string, type: PersistentDataStorageType = PersistentDataStorageType.LocalStorage): void {\n        this.getAdapter(type).removeItem(key);\n    }\n/**\n * Remove a stored value from persistent storage\n * @param {?=} type\n * @return {?}\n */\nclear(type: PersistentDataStorageType = PersistentDataStorageType.LocalStorage): void {\n        this.getAdapter(type).clear();\n    }\n/**\n * Return the appropriate adapter based on the type requested\n * @param {?} type\n * @return {?}\n */\nprivate getAdapter(type: PersistentDataStorageType): StorageAdapter {\n\n        switch (type) {\n\n            case PersistentDataStorageType.Cookie:\n                return new CookieAdapter();\n\n            case PersistentDataStorageType.LocalStorage:\n                const /** @type {?} */ localStorageAdapter = new LocalStorageAdapter();\n                return localStorageAdapter.getSupported();\n\n            case PersistentDataStorageType.SessionStorage:\n                const /** @type {?} */ sessionStorageAdapter = new SessionStorageAdapter();\n                return sessionStorageAdapter.getSupported();\n        }\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction PersistentDataService_tsickle_Closure_declarations() {\n/** @type {?} */\nPersistentDataService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nPersistentDataService.ctorParameters;\n}\n\nexport type PersistentDataStorageType = number;\nexport let PersistentDataStorageType: any = {};\nPersistentDataStorageType.LocalStorage = 0;\nPersistentDataStorageType.Cookie = 1;\nPersistentDataStorageType.SessionStorage = 2;\nPersistentDataStorageType[PersistentDataStorageType.LocalStorage] = \"LocalStorage\";\nPersistentDataStorageType[PersistentDataStorageType.Cookie] = \"Cookie\";\nPersistentDataStorageType[PersistentDataStorageType.SessionStorage] = \"SessionStorage\";\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\n\nimport { PersistentDataService } from './persistent-data.service';\nexport class PersistentDataModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    providers: [PersistentDataService],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction PersistentDataModule_tsickle_Closure_declarations() {\n/** @type {?} */\nPersistentDataModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nPersistentDataModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","\n/**\n * @abstract\n */\nexport abstract class StorageAdapter {\n/**\n * @abstract\n * @param {?} key\n * @return {?}\n */\ngetItem(key: string) {}\n/**\n * @abstract\n * @param {?} key\n * @param {?} value\n * @return {?}\n */\nsetItem(key: string, value: string) {}\n/**\n * @abstract\n * @param {?} key\n * @return {?}\n */\nremoveItem(key: string) {}\n/**\n * @abstract\n * @return {?}\n */\nclear() {}\n/**\n * @abstract\n * @return {?}\n */\ngetSupported() {}\n}"],"names":["isValidDate","value","Date","isNaN","getHours","toNumber","parseInt","dex","parseHours","isPM","hour","hoursPerDayHalf","hoursPerDay","NaN","parseMinutes","minute","minutesPerHour","parseSeconds","seconds","secondsPerMinute","parseTime","changeTime","diff","createDate","minutes","getMinutes","getSeconds","hours","_value","getFullYear","getMonth","getDate","getMilliseconds","padNumber","toString","length","isInputValid","canChangeValue","state","event","readonlyInput","source","mousewheel","arrowkeys","getControlsValue","hourStep","minuteStep","secondsStep","showSpinners","showMeridian","showSeconds","meridians","min","max","timepickerReducer","action","initialState","type","TimepickerActions","WRITE_VALUE","Object","assign","payload","CHANGE_HOURS","config","controls","step","canIncrementHours","canDecrementHours","canChangeHours","_newTime","CHANGE_MINUTES","canIncrementMinutes","canDecrementMinutes","canChangeMinutes","CHANGE_SECONDS","canIncrementSeconds","canDecrementSeconds","canChangeSeconds","SET_TIME_UNIT","opts","setTime","UPDATE_CONTROLS","_newControlsState","res","_newHour","_newMinutes","_newSeconds","timepickerControls","_newState","tryCatcher","tryCatchTarget","apply","this","arguments","e","errorObject_1","errorObject","flattenUnsubscriptionErrors","errors","reduce","errs","err","concat","UnsubscriptionError_1","UnsubscriptionError","gridify","items","columns","grid","push","splice","range","start","end","list","idx","compareDays","day1","day2","isBs3","window","__theme","guessedVersion","document","spanEl","createElement","innerText","body","appendChild","classList","add","rect","getBoundingClientRect","removeChild","top","_guessBsVersion","listenToTriggersV2","renderer","options","parsedTriggers","triggers","aliases","DEFAULT_ALIASES","trimmedTriggers","trim","split","map","trigger","triggerPair","alias","Trigger","manualTriggers","filter","isManual","Error","parseTriggers","target","Function","prototype","listeners","_registerHide","registerHide","forEach","fn","useToggle","open","close","showFn","toggle","show","listen","hide","unsubscribeFn","_getHtmlElement","element","querySelector","ElementRef","nativeElement","warnOnce","msg","isDevMode","_hideMsg","_messagesHash","console","warn","latinize","str","replace","a","latinMap","tokenize","wordRegexDelimiters","phraseRegexDelimiters","token","regexStr","preTokenized","RegExp","result","preTokenizedLength","replacePhraseDelimiters","i","getValueFromObject","object","option","endsWith","slice","_i","propertiesArray_1","property","BreadcrumbsComponent","clickCrumb","crumb","onClick","call","decorators","Component","args","selector","template","ctorParameters","propDecorators","crumbs","Input","BreadcrumbsModule","NgModule","imports","CommonModule","RouterModule","exports","declarations","CHECKBOX_VALUE_ACCESSOR","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","CheckboxComponent","multi","name","clickable","disabled","simplified","indeterminateValue","valueChange","EventEmitter","onTouchedCallback","onChangeCallback","defineProperty","get","set","emit","toggleChecked","keyDown","stopPropagation","preventDefault","writeValue","registerOnChange","registerOnTouched","providers","host","(click)","Output","CheckboxModule","FormsModule","ColumnSortingComponent","stateChange","columnSortingState","ColumnSortingState","initParent","parent","_this","_parent","events","subscribe","findIndex","column","key","NoSort","orderNumber","changeState","Ascending","Descending","toggleColumn","exportAs","ColumnSortingDirective","Subject","order","ngAfterViewInit","components","component","singleSort","next","Directive","ContentChildren","ColumnSortingModule","DashboardService","_widgets","_options$","_placeholder","visible","x","y","width","height","_dimensions","_columnWidth","_rowHeight","_stacked","_defaultOptions","padding","minWidth","minHeight","emptyRow","BehaviorSubject","layout","getOptions","_options","getDefaultOptions","setOptions","setPadding","setDashboard","dashboard","_dashboard","addWidget","widget","renderDashboard","removeWidget","wgt","setDimensions","getLayoutData","id","getId","col","getColumn","row","getRow","colSpan","getColumnSpan","rowSpan","getRowSpan","setLayoutData","find","setColumn","setRow","setColumnSpan","setRowSpan","rowHeight","setStacked","setDashboardLayout","_actionWidget","render","undefined","setWidgetPosition","setDashboardHeight","stacked","getWidgetsByOrder","sort","w1","w2","w1Position","w2Position","position","success","Math","floor","getPositionAvailable","columnSpan","ignoreWidget","spaces","getOccupiedSpaces","_loop_1","_loop_2","block","state_1","state_2","forEachBlock","onResizeStart","_mouseEvent","bringToFront","onResizeDrag","bounds","getHandles","hnd","direction","centerX","left","centerY","mouseX","mouseY","dimensions","actualX","actualY","actualWidth","actualHeight","ActionDirection","Right","Left","difference","Bottom","Top","TopLeft","TopRight","BottomLeft","BottomRight","currentWidth","currentHeight","setBounds","setPlaceholderBounds","updateWidgetPositions","onResizeEnd","commitWidgetChanges","getPlaceholder","shiftWidgetsUp","onDragStart","setWidgetOrigin","cacheWidgets","onDragEnd","_widgetOrigin","onDrag","pageX","pageY","restoreWidgets","shiftWidgets","_cache","ignoreActionWidget","match","widgetsToMove","_loop_3","_loop_4","this_1","space","array","indexOf","unmovedWidgets","getRequiredSpacesFromPoint","every","gridSpace","getColumnCount","canWidgetMoveRight","validatePlaceholderPosition","canWidgetMoveLeft","distance","moveWidgetDown","shiftDirection","getWidgetsAtPosition","getColumnWidth","performMove","targetSpaces","moveable","ignoreResizing","Rounding","RoundDownBelowHalf","RoundUpOverHalf","getPlaceholderColumn","getPlaceholderRow","getPlaceholderColumnSpan","getPlaceholderRowSpan","rowCount","previous","getRowHeight","getColumnFromPx","Move","RoundDown","upperLimit","overflow","getRowFromPx","ceil","rounding","half","RoundUp","getRowCount","sendToBack","stable","callback","Injectable","DashboardComponent","_dashboardService","_elementRef","_ngZone","layoutChange","placeholder","_nativeElement","ngOnInit","ngDoCheck","JSON","stringify","_layout","offsetWidth","offsetHeight","onResize","run","[style.height.px]","NgZone","DashboardWidgetComponent","resizable","zIndex","_column","regular","_row","_columnSpan","_rowSpan","_dragMove","Observable","fromEvent","_dragEnd","applyOptions","parseFloat","random","initialiseHandles","ngOnDestroy","_handles","getStackableValue","setStackableValue","handle","bindResize","listener","downEvent","move$","takeUntil","moveEvent","unsubscribe","[style.left.px]","[style.top.px]","[style.width.px]","[style.padding.px]","[style.zIndex]","DashboardDragHandleDirective","elementRef","dashboardService","Host","ResizeService","addResizeListener","subject","displayMode","getComputedStyle","getPropertyValue","iframe","setStyle","setAttribute","waitUntilReady","attachListener","contentWindow","contentDocument","readyState","addEventListener","setTimeout","ResizeDirective","_resizeService","_renderer","throttle","resize","debounceTime","Renderer2","ResizeModule","DECLARATIONS","DashboardModule","changeHours","changeMinutes","changeSeconds","updateControls","TimepickerConfig","MiniStore","_super","_dispatcher","_reducer","state$","__extends","select","pathOrMapFn","mapped$","distinctUntilChanged","lift","operator","store","dispatch","error","complete","__window","__self","self","WorkerGlobalScope","_root","global","root_1","Array","isArray","join","stack","message","Subscription","closed","_parents","_subscriptions","_unsubscribe","hasErrors","index","len","remove","isFunction_1","isFunction","trial","tryCatch_1","tryCatch","isArray_1","sub","isObject_1","isObject","teardown","EMPTY","subscription","_addParent","tmp","subscriptions","subscriptionIndex","empty","Action","scheduler","work","schedule","delay","Subscription_1","AsyncAction","pending","recycleAsyncId","requestAsyncId","root","setInterval","flush","bind","clearInterval","execute","_execute","errored","errorValue","actions","Action_1","QueueAction","AsyncAction_1","Scheduler","SchedulerAction","now","AsyncScheduler","active","scheduled","shift","Scheduler_1","queue_1","QueueScheduler","AsyncScheduler_1","QueueAction_1","MiniState","_initialState","actionsDispatcher$","reducer","actionInQueue$","observeOn","queue","scan","TimepickerStore","TIMEPICKER_CONTROL_VALUE_ACCESSOR","TimepickerComponent","_config","_cd","_store","_timepickerActions","isValid","invalidHours","invalidMinutes","invalidSeconds","onChange","onTouched","_renderTime","controlsState","markForCheck","meridian","prevDef","$event","wheelSign","sign","deltaY","ngOnChanges","changes","updateHours","_updateTime","updateMinutes","updateSeconds","_seconds","toggleMeridian","obj","setDisabledState","isDisabled","_hours","getUTCSeconds","changeDetection","ChangeDetectionStrategy","OnPush","styles","encapsulation","ViewEncapsulation","None","ChangeDetectorRef","TimepickerModule","forRoot","ngModule","CHECKBOX_CONTROL_VALUE_ACCESSOR","ButtonCheckboxDirective","btnCheckboxTrue","btnCheckboxFalse","trueValue","falseValue","HostBinding","HostListener","RADIO_CONTROL_VALUE_ACCESSOR","ButtonRadioDirective","el","cdr","btnRadio","attributes","uncheckable","onBlur","isActive","ButtonsModule","months","monthsShort","month","substring","weekdaysShort","weekday","DateTimePickerConfig","showDate","showTime","showTimezone","weekdays","nowBtnText","timezones","offset","DateTimePickerComponent","activeDate","year","_date","dateChange","timezoneChange","mode","DatePickerMode","Day","_timezone","timezone","zone","commit","setToNow","date","timePickerComponent","setDefaultTimezone","ViewChild","Month","Year","DateTimePickerDayViewComponent","days","ascend","monthChange","yearChange","update","setDate","getDay","dates","dateRange","header","week","today","isToday","currentMonth","isCurrentMonth","DateTimePickerMonthViewComponent","currentDate","getMonthName","DateTimePickerYearViewComponent","_page","years","currentYear","decade","getDecade","DateTimePickerHeaderComponent","canAscend","DateTimePickerTimeViewComponent","DatePickerMeridian","AM","getTimezoneOffset","PM","getTime","setMeridian","setHours","previousTimezone","currentZone","nextTimezone","DateTimePickerModule","EboxComponent","EboxHeaderDirective","EboxContentDirective","EboxModule","TooltipConfig","placement","win","TooltipContainerComponent","location","classMap","in","fade","animation","containerClass","[class]","[class.show]","role","hover","focus","ContentRef","nodes","viewRef","componentRef","ComponentLoader","_viewContainerRef","_injector","_componentFactoryResolver","_applicationRef","_posService","onBeforeShow","onShown","onBeforeHide","onHidden","_providers","_isHiding","_listenOpts","_globalListener","_componentRef","attach","compType","_componentFactory","resolveComponentFactory","to","container","attachment","provider","_subscribePositioning","_innerComponent","_contentRef","_getContentRef","content","context","injector","ReflectiveInjector","resolveAndCreate","create","attachView","hostView","instance","parentElement","changeDetectorRef","detectChanges","_registerOutsideClick","componentEl","parentNode","destroy","_removeGlobalListener","isShown","dispose","_unsubscribePositioning","_unregisterListenersFn","listenOpts","outsideClick","attachInline","vRef","_inlineViewRef","createEmbeddedView","target_1","contains","targets","some","registerOutsideClick","getInnerComponent","_zoneSubscription","onStable","appendToBody","TemplateRef","_viewRef","rootNodes","contentCmptFactory","modalContentInjector","createText","positionService","Positioning","round","elPosition","parentOffset","bottom","right","getStyle","bcRect","offsetParentEl","offsetParent","documentElement","clientTop","clientLeft","elBcr","viewportOffset","pageYOffset","pageXOffset","elOffset","positionElements","hostElement","targetElement","hostElPosition","targetElStyles","getAllStyles","shiftWidth","center","shiftHeight","targetElBCR","placementPrimary","placementSecondary","targetElPosition","newPlacementPrimary","autoPosition","marginBottom","marginRight","preferredPosition","innerHeight","innerWidth","prop","isStaticPositioned","PositioningService","pos","style","ComponentLoaderFactory","createLoader","ComponentFactoryResolver","Injector","ApplicationRef","TooltipDirective","cis","tooltipChange","_animation","_delay","_fadeDuration","tooltipStateChanged","_tooltip","useValue","tooltip","isOpen","_delayTimeoutId","showTooltip","clearTimeout","ViewContainerRef","htmlContent","_placement","_isOpen","_enable","_appendToBody","_popupClass","_tooltipContext","_tooltipTrigger","__decorate","propertyKey","_key","prevValue","TooltipModule","entryComponents","Á","Ă","Ắ","Ặ","Ằ","Ẳ","Ẵ","Ǎ","Â","Ấ","Ậ","Ầ","Ẩ","Ẫ","Ä","Ǟ","Ȧ","Ǡ","Ạ","Ȁ","À","Ả","Ȃ","Ā","Ą","Å","Ǻ","Ḁ","Ⱥ","Ã","Ꜳ","Æ","Ǽ","Ǣ","Ꜵ","Ꜷ","Ꜹ","Ꜻ","Ꜽ","Ḃ","Ḅ","Ɓ","Ḇ","Ƀ","Ƃ","Ć","Č","Ç","Ḉ","Ĉ","Ċ","Ƈ","Ȼ","Ď","Ḑ","Ḓ","Ḋ","Ḍ","Ɗ","Ḏ","ǲ","ǅ","Đ","Ƌ","Ǳ","Ǆ","É","Ĕ","Ě","Ȩ","Ḝ","Ê","Ế","Ệ","Ề","Ể","Ễ","Ḙ","Ë","Ė","Ẹ","Ȅ","È","Ẻ","Ȇ","Ē","Ḗ","Ḕ","Ę","Ɇ","Ẽ","Ḛ","Ꝫ","Ḟ","Ƒ","Ǵ","Ğ","Ǧ","Ģ","Ĝ","Ġ","Ɠ","Ḡ","Ǥ","Ḫ","Ȟ","Ḩ","Ĥ","Ⱨ","Ḧ","Ḣ","Ḥ","Ħ","Í","Ĭ","Ǐ","Î","Ï","Ḯ","İ","Ị","Ȉ","Ì","Ỉ","Ȋ","Ī","Į","Ɨ","Ĩ","Ḭ","Ꝺ","Ꝼ","Ᵹ","Ꞃ","Ꞅ","Ꞇ","Ꝭ","Ĵ","Ɉ","Ḱ","Ǩ","Ķ","Ⱪ","Ꝃ","Ḳ","Ƙ","Ḵ","Ꝁ","Ꝅ","Ĺ","Ƚ","Ľ","Ļ","Ḽ","Ḷ","Ḹ","Ⱡ","Ꝉ","Ḻ","Ŀ","Ɫ","ǈ","Ł","Ǉ","Ḿ","Ṁ","Ṃ","Ɱ","Ń","Ň","Ņ","Ṋ","Ṅ","Ṇ","Ǹ","Ɲ","Ṉ","Ƞ","ǋ","Ñ","Ǌ","Ó","Ŏ","Ǒ","Ô","Ố","Ộ","Ồ","Ổ","Ỗ","Ö","Ȫ","Ȯ","Ȱ","Ọ","Ő","Ȍ","Ò","Ỏ","Ơ","Ớ","Ợ","Ờ","Ở","Ỡ","Ȏ","Ꝋ","Ꝍ","Ō","Ṓ","Ṑ","Ɵ","Ǫ","Ǭ","Ø","Ǿ","Õ","Ṍ","Ṏ","Ȭ","Ƣ","Ꝏ","Ɛ","Ɔ","Ȣ","Ṕ","Ṗ","Ꝓ","Ƥ","Ꝕ","Ᵽ","Ꝑ","Ꝙ","Ꝗ","Ŕ","Ř","Ŗ","Ṙ","Ṛ","Ṝ","Ȑ","Ȓ","Ṟ","Ɍ","Ɽ","Ꜿ","Ǝ","Ś","Ṥ","Š","Ṧ","Ş","Ŝ","Ș","Ṡ","Ṣ","Ṩ","Ť","Ţ","Ṱ","Ț","Ⱦ","Ṫ","Ṭ","Ƭ","Ṯ","Ʈ","Ŧ","Ɐ","Ꞁ","Ɯ","Ʌ","Ꜩ","Ú","Ŭ","Ǔ","Û","Ṷ","Ü","Ǘ","Ǚ","Ǜ","Ǖ","Ṳ","Ụ","Ű","Ȕ","Ù","Ủ","Ư","Ứ","Ự","Ừ","Ử","Ữ","Ȗ","Ū","Ṻ","Ų","Ů","Ũ","Ṹ","Ṵ","Ꝟ","Ṿ","Ʋ","Ṽ","Ꝡ","Ẃ","Ŵ","Ẅ","Ẇ","Ẉ","Ẁ","Ⱳ","Ẍ","Ẋ","Ý","Ŷ","Ÿ","Ẏ","Ỵ","Ỳ","Ƴ","Ỷ","Ỿ","Ȳ","Ɏ","Ỹ","Ź","Ž","Ẑ","Ⱬ","Ż","Ẓ","Ȥ","Ẕ","Ƶ","Ĳ","Œ","ᴀ","ᴁ","ʙ","ᴃ","ᴄ","ᴅ","ᴇ","ꜰ","ɢ","ʛ","ʜ","ɪ","ʁ","ᴊ","ᴋ","ʟ","ᴌ","ᴍ","ɴ","ᴏ","ɶ","ᴐ","ᴕ","ᴘ","ʀ","ᴎ","ᴙ","ꜱ","ᴛ","ⱻ","ᴚ","ᴜ","ᴠ","ᴡ","ʏ","ᴢ","á","ă","ắ","ặ","ằ","ẳ","ẵ","ǎ","â","ấ","ậ","ầ","ẩ","ẫ","ä","ǟ","ȧ","ǡ","ạ","ȁ","à","ả","ȃ","ā","ą","ᶏ","ẚ","å","ǻ","ḁ","ⱥ","ã","ꜳ","æ","ǽ","ǣ","ꜵ","ꜷ","ꜹ","ꜻ","ꜽ","ḃ","ḅ","ɓ","ḇ","ᵬ","ᶀ","ƀ","ƃ","ɵ","ć","č","ç","ḉ","ĉ","ɕ","ċ","ƈ","ȼ","ď","ḑ","ḓ","ȡ","ḋ","ḍ","ɗ","ᶑ","ḏ","ᵭ","ᶁ","đ","ɖ","ƌ","ı","ȷ","ɟ","ʄ","ǳ","ǆ","é","ĕ","ě","ȩ","ḝ","ê","ế","ệ","ề","ể","ễ","ḙ","ë","ė","ẹ","ȅ","è","ẻ","ȇ","ē","ḗ","ḕ","ⱸ","ę","ᶒ","ɇ","ẽ","ḛ","ꝫ","ḟ","ƒ","ᵮ","ᶂ","ǵ","ğ","ǧ","ģ","ĝ","ġ","ɠ","ḡ","ᶃ","ǥ","ḫ","ȟ","ḩ","ĥ","ⱨ","ḧ","ḣ","ḥ","ɦ","ẖ","ħ","ƕ","í","ĭ","ǐ","î","ï","ḯ","ị","ȉ","ì","ỉ","ȋ","ī","į","ᶖ","ɨ","ĩ","ḭ","ꝺ","ꝼ","ᵹ","ꞃ","ꞅ","ꞇ","ꝭ","ǰ","ĵ","ʝ","ɉ","ḱ","ǩ","ķ","ⱪ","ꝃ","ḳ","ƙ","ḵ","ᶄ","ꝁ","ꝅ","ĺ","ƚ","ɬ","ľ","ļ","ḽ","ȴ","ḷ","ḹ","ⱡ","ꝉ","ḻ","ŀ","ɫ","ᶅ","ɭ","ł","ǉ","ſ","ẜ","ẛ","ẝ","ḿ","ṁ","ṃ","ɱ","ᵯ","ᶆ","ń","ň","ņ","ṋ","ȵ","ṅ","ṇ","ǹ","ɲ","ṉ","ƞ","ᵰ","ᶇ","ɳ","ñ","ǌ","ó","ŏ","ǒ","ô","ố","ộ","ồ","ổ","ỗ","ö","ȫ","ȯ","ȱ","ọ","ő","ȍ","ò","ỏ","ơ","ớ","ợ","ờ","ở","ỡ","ȏ","ꝋ","ꝍ","ⱺ","ō","ṓ","ṑ","ǫ","ǭ","ø","ǿ","õ","ṍ","ṏ","ȭ","ƣ","ꝏ","ɛ","ᶓ","ɔ","ᶗ","ȣ","ṕ","ṗ","ꝓ","ƥ","ᵱ","ᶈ","ꝕ","ᵽ","ꝑ","ꝙ","ʠ","ɋ","ꝗ","ŕ","ř","ŗ","ṙ","ṛ","ṝ","ȑ","ɾ","ᵳ","ȓ","ṟ","ɼ","ᵲ","ᶉ","ɍ","ɽ","ↄ","ꜿ","ɘ","ɿ","ś","ṥ","š","ṧ","ş","ŝ","ș","ṡ","ṣ","ṩ","ʂ","ᵴ","ᶊ","ȿ","ɡ","ᴑ","ᴓ","ᴝ","ť","ţ","ṱ","ț","ȶ","ẗ","ⱦ","ṫ","ṭ","ƭ","ṯ","ᵵ","ƫ","ʈ","ŧ","ᵺ","ɐ","ᴂ","ǝ","ᵷ","ɥ","ʮ","ʯ","ᴉ","ʞ","ꞁ","ɯ","ɰ","ᴔ","ɹ","ɻ","ɺ","ⱹ","ʇ","ʌ","ʍ","ʎ","ꜩ","ú","ŭ","ǔ","û","ṷ","ü","ǘ","ǚ","ǜ","ǖ","ṳ","ụ","ű","ȕ","ù","ủ","ư","ứ","ự","ừ","ử","ữ","ȗ","ū","ṻ","ų","ᶙ","ů","ũ","ṹ","ṵ","ᵫ","ꝸ","ⱴ","ꝟ","ṿ","ʋ","ᶌ","ⱱ","ṽ","ꝡ","ẃ","ŵ","ẅ","ẇ","ẉ","ẁ","ⱳ","ẘ","ẍ","ẋ","ᶍ","ý","ŷ","ÿ","ẏ","ỵ","ỳ","ƴ","ỷ","ỿ","ȳ","ẙ","ɏ","ỹ","ź","ž","ẑ","ʑ","ⱬ","ż","ẓ","ȥ","ẕ","ᵶ","ᶎ","ʐ","ƶ","ɀ","ﬀ","ﬃ","ﬄ","ﬁ","ﬂ","ĳ","œ","ﬆ","ₐ","ₑ","ᵢ","ⱼ","ₒ","ᵣ","ᵤ","ᵥ","ₓ","TypeaheadMatch","item","isHeader","Utils","reflow","getStyles","elem","view","ownerDocument","defaultView","opener","TypeaheadContainerComponent","isFocused","_matches","isScrolledIntoView","containerViewTop","ulElement","scrollTop","containerViewBottom","elemTop","offsetTop","_active","needScrollbar","typeaheadScrollable","typeaheadOptionsInScrollableView","matches","setScrollableMode","nextActiveMatch","optionsListTemplate","typeaheadItemTemplate","selectActiveMatch","selectMatch","prevActiveMatch","scrollPrevious","scrollNext","selectActive","hightlight","query","startIdx","tokenLen","itemStr","itemStrHelper","typeaheadLatinize","toLowerCase","queryLen","repeat","focusLost","changeModel","typeaheadOnSelect","liElements","first","ulStyles","liStyles","ulPaddingBottom","ulPaddingTop","optionHeight","guiHeight","liElement","toArray","scrollToBottom","scrollToTop","scrollHeight","class","[class.dropdown-menu]","[style.overflow-y]","[style.height]","[style.visibility]","[class.dropup]","ViewChildren","TypeaheadDirective","ngControl","viewContainerRef","typeaheadMinLength","typeaheadAsync","typeaheadSingleWords","typeaheadWordDelimiters","typeaheadPhraseDelimiters","typeaheadLoading","typeaheadNoResults","typeaheadOnBlur","dropup","isTypeaheadOptionsListActive","keyUpEventEmitter","_typeahead","typeaheadOptionsLimit","typeaheadWaitMs","typeahead","asyncActions","syncActions","onInput","textContent","_container","keyCode","onFocus","onKeydown","valueStr","viewToModelUpdate","setValue","typeaheadRef","_outsideClickListener","onOutsideClick","normalizedQuery","control","_a","mergeMap","finalizeAsyncCall","normalizeQuery","from","testMatch","normalizeOption","optionValue","typeaheadOptionField","test","spaceLength","prepareMatches","hasMatches","limited","typeaheadGroupField","matches_1","v","group","NgControl","TypeaheadModule","FacetSelect","facet","FacetDeselect","FacetDeselectAll","FacetContainerComponent","clearTooltip","emptyText","facets","facetsChange","selectFacet","triggerEvent","deselectFacet","selectedFacet","deselectAllFacets","FacetBaseComponent","facetContainer","selected","selectedChange","_","deselectAll","toggleFacetSelection","isFacetSelected","FacetHeaderComponent","canExpand","expanded","expandedChange","toggleExpand","tabindex","(keyup.enter)","FacetCheckListComponent","scrollbar","FacetTypeaheadListComponent","typeaheadConfig","suggestions","_defaultTypeaheadConfig","maxResults","minCharacters","typeaheadOptions","title","toUpperCase","includes","searchQuery","of","hasOwnProperty","selectOption","typeaheadOption","scrollToFocused","dropdown","activeElement","elementBounds","dropdownBounds","FacetTypeaheadHighlight","transform","regex","Pipe","FacetsModule","Facet","data","count","BsDropdownConfig","autoClose","BsDropdownState","isOpenChange","isDisabledChange","toggleClick","dropdownMenu","Promise","resolve","resolveDropdownMenu","BsDropdownContainerComponent","_state","cd","_element","_subscription","addClass","BsDropdownDirective","_cis","_isInlineOpen","_isInited","_dropdown","_isDisabled","_showInline","_inlinedMenu","then","viewContainer","templateRef","addBs4Polyfills","catch","_dropup","removeShowClass","addShowClass","checkRightAlignment","checkDropup","removeClass","isRightAligned","[class.open]","BsDropdownMenuDirective","_viewContainer","_templateRef","BsDropdownToggleDirective","onDocumentClick","button","onEsc","[attr.aria-haspopup]","BsDropdownModule","FilterContainerComponent","filters","filtersChange","addFilter","FilterAddEvent","removeFilter","FilterRemoveEvent","removeAll","FilterRemoveAllEvent","FilterBaseComponent","filtersContainer","initial","FilterDynamicComponent","defaultOptions","showTypeahead","typeaheadItems","getItems","maxIndividualItems","clickOff","hideDropdown","nodeName","selectFilter","(document:click)","FilterDropdownComponent","FilterModule","FlippableCardComponent","flipped","flippedChange","setFlipped","toggleFlipped","clickTrigger","hoverEnter","hoverExit","[class.horizontal]","[class.vertical]","FlippableCardFrontDirective","FlippableCardBackDirective","FlippableCardModule","ItemDisplayPanelContentDirective","ItemDisplayPanelFooterDirective","ItemDisplayPanelComponent","visibleChange","_visible","_boxShadow","_closeVisible","_preventClose","_inline","_animate","_shadow","_top","boxShadow","closeVisible","preventClose","inline","animate","shadow","hidePanel","(document:keyup.escape)","[class.inline-host]","[class.visible-host]","footer","ContentChild","ItemDisplayPanelModule","NUMBER_PICKER_VALUE_ACCESSOR","NumberPickerComponent","_min","Infinity","_max","_step","_disabled","_propagateChange","valid","increment","decrement","onScroll","wheelDelta","[class.has-error]","NumberPickerModule","PageHeaderCustomMenuDirective","PageHeaderComponent","alignment","condensed","backVisible","backClick","goBack","getCondensedBreadcrumbs","[class.page-header-condensed]","logo","iconMenus","customMenus","read","PageHeaderIconMenuComponent","menu","PageHeaderNavigationDropdownItemComponent","onSelect","dropdownOpen","_dropdownEvents","selectItem","parentItem","children","hoverStart","hoverLeave","PageHeaderNavigationItemComponent","dropdownComponents","onItemSelect","PageHeaderNavigationComponent","resizeService","indicatorVisible","indicatorX","indicatorWidth","updateSelectedIndicator","deselect","navItem","selectedItem","menuItems","offsetLeft","PageHeaderModule","ColorService","_colorSet","colorSets","keppel","colorClassSet","_setColors","colorValueSet","_colors","_getColorValueByHex","_html","className","innerHTML","getColorValue","color","hex","r","g","b","ThemeColor","rgba","backgroundColor","getColor","getColorSet","setColorSet","colorSet","Inject","DOCUMENT","_r","_g","_b","parse","rgbaMatch","shortHexMatch","longHexMatch","toHex","red","green","blue","toRgb","toRgba","getRed","getGreen","getBlue","getAlpha","setRed","setGreen","setBlue","setAlpha","alpha","primary","accent","secondary","alternate1","alternate2","alternate3","vibrant1","vibrant2","grey1","grey2","grey3","grey4","grey5","grey6","grey7","grey8","chart1","chart2","chart3","chart4","chart5","chart6","ok","warning","critical","partition1","partition9","partition10","partition11","partition12","partition13","partition14","social-chart-node","social-chart-edge","microFocus","cerulean","aqua","aquamarine","fuchsia","indigo","dark-blue","white","slightly-gray","bright-gray","gray","silver","dim-gray","dark-gray","black","crimson-negative","apricot","yellow","green-positive","ultramarine","skyblue","pale-aqua","pale-green","lime","orange","magenta","pale-purple","dark-ultramarine","steelblue","arctic-blue","emerald","olive","goldenrod","purple","pale-eggplant","pale-amber","pale-lemon","pale-emerald","plum","copper","amber","leaf-green","ColorServiceModule","ProgressBarComponent","colorService","trackColor","barColor","percentage","ProgressBarModule","RADIOBUTTON_VALUE_ACCESSOR","RadioButtonComponent","checkItem","RadioButtonModule","SearchBuilderService","queryChange","_components","registerComponent","registerComponents","getComponent","setQuery","getQuery","queryHasChanged","SearchBuilderGroupService","_searchBuilderService","init","_id","field","SearchBuilderGroupComponent","searchBuilderGroupService","addText","showPlaceholder","removeField","SearchBuilderOutletDirective","uxSearchBuilderOutlet","componentFactory","createComponent","uxSearchBuilderOutletContext","BaseSearchComponent","_searchBuilderGroupService","SearchTextComponent","label","SearchBuilderComponent","SearchBuilderModule","TypeaheadOptionEvent","TypeaheadKeyService","handleKey","moveHighlight","TypeaheadComponent","typeaheadElement","cdRef","_open","openChange","dropDirection","maxHeight","openOnFilterChange","pageSize","selectFirst","optionSelected","_highlighted","visibleOptions","loading","optionApi","getKey","getDisplay","getDisplayHtml","loadOptionsCallback","pageNum","originalValue","initOptions","getValue","loadingTemplate","_defaultLoadingTemplate","optionTemplate","_defaultOptionTemplate","noOptionsTemplate","_defaultNoOptionsTemplate","currentValue","updateOptions","optionMousedownHandler","optionClickHandler","display","displayText","displayHtml","matchIndex","highlight","substr","isInfiniteScroll","disabledOptions","optionKey_1","selectedOption","d","newIndex","indexOfVisibleOption","highlighted","inBounds","isHighlighted","normalisedInput_1","optionKey_2","[class.drop-up]","[style.maxHeight]","InfiniteScrollLoadButtonDirective","_template","_load","load","asObservable","clickTarget","getNextElementSibling","clear","nextSibling","nodeType","InfiniteScrollLoadingDirective","InfiniteScrollDirective","_collection","enabled","loadOnInit","loadOnScroll","collectionChange","loadingEvent","loadedEvent","loadErrorEvent","_nextPageNum","_updateRequests","_isLoading","_isExhausted","_loadButtonEnabled","_loadButtonSubscriptions","_canLoadManually","combineLatest","isLoading","isExhausted","loadButtonEnabled","scrollElement","ngAfterContentInit","requests","partition","check","auditTime","doRequest","attachEventHandlers","canLoad","_loadButtonQuery","loadButton","_loadingIndicatorQuery","attachLoadButtonEvents","loadNextPage","previousValue","reset","detachEventHandlers","pageNumber","collection","onDomChange","_scrollEventSub","_domObserver","MutationObserver","observe","childList","subtree","disconnect","s","request","needsData","beginLoading","loadResult","newData","endLoading","reason","endLoadingWithError","clientHeight","InfiniteScrollLoadingEvent","defaultPrevented","InfiniteScrollLoadedEvent","InfiniteScrollLoadErrorEvent","_defaultPrevented","exhausted","InfiniteScrollModule","ScrollIntoViewService","scrollIntoView","scrollParent","offsetBottom","ScrollIntoViewIfDirective","scrollIntoViewService","condition","ScrollIntoViewIfModule","TypeaheadModule$1","SELECT_VALUE_ACCESSOR","SelectComponent","_document","_typeaheadKeyService","_input","inputChange","_dropdownOpen","dropdownOpenChange","allowNull","multiple","propagateChange","input","inputClickHandler","selectInputText","inputBlurHandler","inputKeyHandler","singleTypeahead","singleOptionSelected","singleInput","HTMLDocument","multipleTypeahead","TagInputEvent","tag","TAGINPUT_VALUE_ACCESSOR","TagInputComponent","TAGINPUT_VALIDATOR","NG_VALIDATORS","_tags","tagsChange","addOnPaste","enforceTagLimits","freeInput","maxTags","Number","MAX_VALUE","minTags","showTypeaheadOnClick","tagDelimiters","tagClass","validationErrors","tagAdding","tagAdded","tagInvalidated","tagRemoving","tagRemoved","tagClick","selectedIndex","tagApi","getTagDisplay","removeTagAt","canRemoveTagAt","inputValid","onChangeHandler","onTouchedHandler","tagTemplate","_defaultTagTemplate","connectTypeahead","typeaheadQuery","validate","tags","tagRangeError","given","keyHandler","inputCursorPos","tagInput","selectionStart","hasSelection","selectionEnd","tagSelected","isValidTagIndex","inputLength","canNavigateLeft","canNavigateRight","commitTypeahead","commitInput","backspace","moveSelection","getKeyChar","focusOutHandler","tagClickHandler","tagClickEvent","selectTagAt","inputFocusHandler","selectInput","inputPasteHandler","clipboardData","getData","typeaheadOptionSelectedHandler","addTag","newTags","splitTagInput","allValid","_c","newTags_1","newTag","validateTag","_d","newTags_2","createTag","isValidSelectIndex","isSelected","tagIndex","tagRemovingEvent","isInputVisible","hasFocus","tagValue","inputPattern","tagPattern","pattern","createTagHandler","displayValue","tagAddingEvent","tagValues","escapedDelimiters","delimiterRegex","[class.disabled]","[class.focus]","[class.invalid]","Document","FocusIfDirective","focusIf","FocusIfModule","TagInputModule","SelectModule","SliderComponent","_changeDetectorRef","sliderType","SliderType","sliderStyle","SliderStyle","sliderSize","SliderSize","sliderThumb","SliderThumb","sliderTickType","SliderTickType","sliderThumbEvent","SliderThumbEvent","tracks","lower","size","middle","upper","tooltips","thumbs","drag","ticks","_mouseMove","_mouseUp","Value","handles","Button","callout","SliderCalloutTrigger","background","formatter","track","Wide","snap","SliderSnap","major","steps","labels","minor","colors","higher","initObservables","updateValues","setThumbState","Lower","Upper","clone","detectValueChange","updateTooltipPosition","_lowerDrag","_upperDrag","getFormattedValue","thumb","getThumbState","_lowerThumbDown","lowerThumb","switchMap","updateThumbPosition","_upperThumbDown","upperThumb","updateTooltips","thumbEvent","DragEnd","DragStart","MouseOver","MouseLeave","Persistent","Drag","Hover","getTooltip","updateTooltipText","getThumbElement","getTooltipElement","lowerTooltip","upperTooltip","thumbWidth","tooltipElement","Narrow","tooltipWidth","tooltipPosition","clamp","eventPosition","MouseEvent","clientX","touches","trackBounds","fraction","validateValue","snapToTick","setThumbValue","updateOrder","snapTarget","Minor","tick","Major","lowerLimit","Range","reduceRight","current","deepMerge","updateTrackColors","updateTicks","lowerValue","low","upperValue","high","toFixed","lowerPosition","upperPosition","majorOptions","minorOptions","majorTicks","getTicks","minorTicks","unionTicks","getSteps","output","showTicks","showLabels","tk","t1","t2","destination","value1","value2","isSliderValue","obj1","obj2","Line","All","SliderModule","SparkComponent","_colorService","values","barHeight","themeName","total","val","inlineLabel","topLeftLabel","topRightLabel","bottomLeftLabel","bottomRightLabel","theme","SparkModule","TOGGLESWITCH_VALUE_ACCESSOR","ToggleSwitchComponent","keydown","ToggleSwitchModule","FrameExtractionService","createVideoPlayer","videoPlayer","preload","src","createCanvas","canvas","goToFrame","time","currentTime","getThumbnail","observer","getContext","drawImage","image","toDataURL","getFrameThumbnail","frameSubscription","getFrameThumbnails","skip","frames","frame","FrameExtractionModule","MediaPlayerService","_frameExtractionService","loaded","playing","initEvent","abortEvent","canPlayEvent","canPlayThroughEvent","durationChangeEvent","endedEvent","errorEvent","loadedDataEvent","loadedMetadataEvent","loadStartEvent","pauseEvent","playEvent","playingEvent","rateChangeEvent","seekedEvent","seekingEvent","stalledEvent","suspendEvent","timeUpdateEvent","volumeChangeEvent","waitingEvent","mediaClickEvent","fullscreenEvent","quietModeEvent","progressEvent","interval","buffered","_mediaPlayer","duration","_fullscreen","_quietMode","audioTracks","autoplay","TimeRanges","crossOrigin","currentSrc","defaultMuted","defaultPlaybackRate","ended","loop","muted","networkState","paused","playbackRate","played","seekable","seeking","textTracks","TextTrackList","videoTracks","VideoTrackList","volume","setMediaPlayer","mediaPlayer","_hostElement","togglePlay","play","pause","canPlayType","addTextTrack","kind","language","requestFullscreen","webkitRequestFullscreen","msRequestFullscreen","mozRequestFullScreen","exitFullscreen","webkitExitFullscreen","msExitFullscreen","mozCancelFullScreen","fullscreenChange","fullscreen","webkitIsFullScreen","mozFullScreen","msFullscreenElement","toggleFullscreen","getFrames","AudioService","_http","getAudioFileMetadata","mediaElement","responseType","ResponseContentType","Blob","response","description","filename","lastIndexOf","extension","blob","getWaveformFromUrl","url","AudioContext","_audioContext","createVolumeNode","createAnalyserNode","ArrayBuffer","getAudioBuffer","arrayBuffer","audioBuffer","createBufferSource","dataPoints","channels","_audioBuffer","numberOfChannels","channelIdx","getChannelData","Float32Array","getWaveformPoints","waveform","_loop_5","points","channel","getOfflineAudioContext","decodeAudioData","OfflineAudioContext","sampleRate","disconnectSource","_audioBufferSource","buffer","connect","_analyserNode","_gainNode","createGain","createAnalyser","Http","AudioServiceModule","HttpModule","MediaPlayerComponent","mediaPlayerService","_audioService","hovering","_hover$","quietMode","_playerRef","audioMetadata","_playing$","_paused$","_clicked$","_loading$","(keydown.Space)","[class.standard]","[class.fullscreen]","[class.quiet]","[class.hover]","[class.video]","[class.audio]","(mouseenter)","(mouseleave)","(document:webkitfullscreenchange)","(document:mozfullscreenchange)","(document:MSFullscreenChange)","_trackBarRef","MediaPlayerBaseExtensionDirective","MediaPlayerTimelineExtensionComponent","mouseDown","scrub","mousedown$","mousemove$","mouseup$","_mouseEventSubscription","updateScrub","timelineRef","offsetX","(document:mouseup)","MediaPlayerControlsExtensionComponent","volumeActive","volumeDragging","_volume","_previousVolume","mouseenter$","volumeIcon","mouseenterContainer$","volumeContainer","mouseleaveContainer$","timer","toggleMute","setFullscreen","goToStart","goToEnd","dragStart","dragMove","volumeSlider","dragEnd","DurationPipe","pad","DurationPipeModule","FileSizePipe","log","pow","FileSizePipeModule","MediaPlayerModule","VirtualScrollLoadingDirective","VirtualScrollLoadButtonDirective","VirtualScrollCellDirective","VirtualScrollComponent","cells","loadingComplete","_height","cellHeight","setupObservable","renderCells","isFirstChange","getVisibleCells","startCell","endCell","getTotalHeight","cellTemplate","loadingIndicatorTemplate","loadButtonTemplate","VirtualScrollModule","WizardStepComponent","visitedChange","_visited","visited","WizardComponent","QueryList","orientation","nextText","previousText","cancelText","finishText","nextTooltip","previousTooltip","cancelTooltip","finishTooltip","nextDisabled","previousDisabled","cancelDisabled","finishDisabled","nextVisible","previousVisible","cancelVisible","finishVisible","cancelAlwaysVisible","finishAlwaysVisible","onNext","onPrevious","onCancel","onFinish","stepChange","invalidIndicator","getCurrentStep","finish","cancel","gotoStep","stp","isLastStep","getStepAtIndex","WizardModule","HelpCenterService","registerItem","unregisterItem","itm","HelpCenterItemDirective","_helpCenterService","uxHelpCenterItem","HelpCenterModule","HoverActionService","_focused","_hovered","_actions","register","unregister","actn","setContainer","setFocusState","updateVisibility","setHoverState","containerHasFocus","focusActionAtIndex","actionHasFocus","getFocusedActionIndex","getFocusedAction","focused","HoverActionContainerDirective","_hoverActionService","active$","onHover","onLeave","[class.hover-action-container-active]","[tabindex]","HoverActionDirective","[class.hover-action-active]","[class.hover-action-focused]","HoverActionModule","LayoutSwitcherItemDirective","getLayout","getConfig","activate","_embeddedView","deactivate","LayoutSwitcherDirective","_width","updateActiveLayout","getActiveLayout","_layouts","maxWidth","_activeLayout","requestAnimationFrame","LayoutSwitcherModule","StringFilterPipe","it","StringFilterModule","CookieAdapter","getItem","cookie","setItem","removeItem","eqPos","toUTCString","getSupported","LocalStorageAdapter","localStorage","SessionStorageAdapter","sessionStorage","PersistentDataService","PersistentDataStorageType","LocalStorage","getAdapter","Cookie","SessionStorage","PersistentDataModule","StorageAdapter"],"mappings":"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"}

(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[8495],{18866:e=>{e.exports={snippet:'<span class="token selector">.demo-chart-container</span> <span class="token punctuation">{</span>\n    <span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">;</span>\n    <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>\n    <span class="token property">height</span><span class="token punctuation">:</span> 200px<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.chart-scroll-previous-btn,\n.chart-scroll-next-btn</span> <span class="token punctuation">{</span>\n  <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>\n  <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>\n  <span class="token property">align-items</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>\n  <span class="token property">justify-content</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>\n  <span class="token property">width</span><span class="token punctuation">:</span> 25px<span class="token punctuation">;</span>\n  <span class="token property">height</span><span class="token punctuation">:</span> 25px<span class="token punctuation">;</span>\n  <span class="token property">background-color</span><span class="token punctuation">:</span> #00a7a2<span class="token punctuation">;</span>\n  <span class="token property">border-radius</span><span class="token punctuation">:</span> 50%<span class="token punctuation">;</span>\n  <span class="token property">opacity</span><span class="token punctuation">:</span> 0.7<span class="token punctuation">;</span>\n  <span class="token property">cursor</span><span class="token punctuation">:</span> pointer<span class="token punctuation">;</span>\n  <span class="token property">transition</span><span class="token punctuation">:</span> opacity 0.3s ease-in-out<span class="token punctuation">;</span>\n  <span class="token property">top</span><span class="token punctuation">:</span> <span class="token function">calc</span><span class="token punctuation">(</span>50% - 22px<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token property">color</span><span class="token punctuation">:</span> #fff<span class="token punctuation">;</span>\n  <span class="token property">font-size</span><span class="token punctuation">:</span> 13px<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.chart-scroll-previous-btn:hover,\n.chart-scroll-next-btn:hover</span> <span class="token punctuation">{</span>\n  <span class="token property">opacity</span><span class="token punctuation">:</span> 0.9<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.chart-scroll-previous-btn</span> <span class="token punctuation">{</span>\n  <span class="token property">left</span><span class="token punctuation">:</span> 32px<span class="token punctuation">;</span>\n  <span class="token property">padding-right</span><span class="token punctuation">:</span> 1px<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.chart-scroll-next-btn</span> <span class="token punctuation">{</span>\n  <span class="token property">right</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>\n  <span class="token property">padding-left</span><span class="token punctuation">:</span> 2px<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n',example:".demo-chart-container {\n    display: block;\n    position: relative;\n    height: 200px;\n}\n\n.chart-scroll-previous-btn,\n.chart-scroll-next-btn {\n  position: absolute;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 25px;\n  height: 25px;\n  background-color: #00a7a2;\n  border-radius: 50%;\n  opacity: 0.7;\n  cursor: pointer;\n  transition: opacity 0.3s ease-in-out;\n  top: calc(50% - 22px);\n  color: #fff;\n  font-size: 13px;\n}\n\n.chart-scroll-previous-btn:hover,\n.chart-scroll-next-btn:hover {\n  opacity: 0.9;\n}\n\n.chart-scroll-previous-btn {\n  left: 32px;\n  padding-right: 1px;\n}\n\n.chart-scroll-next-btn {\n  right: 10px;\n  padding-left: 2px;\n}\n"}},98832:e=>{e.exports={snippet:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>demo-chart-container<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">*ngIf</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>hasPreviousPage()<span class="token punctuation">"</span></span>\n        <span class="token attr-name">aria-label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Scroll to previous chart page<span class="token punctuation">"</span></span>\n        <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>chart-scroll-previous-btn<span class="token punctuation">"</span></span>\n        <span class="token attr-name">(click)</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>goToPreviousPage()<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ux-icon</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>previous<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ux-icon</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>canvas</span> <span class="token attr-name">aria-label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Bar chart showing file type totals<span class="token punctuation">"</span></span>\n        <span class="token attr-name">baseChart</span>\n        <span class="token attr-name">[datasets]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>barChartData<span class="token punctuation">"</span></span>\n        <span class="token attr-name">[labels]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>barChartLabels<span class="token punctuation">"</span></span>\n        <span class="token attr-name">[options]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>barChartOptions<span class="token punctuation">"</span></span>\n        <span class="token attr-name">[legend]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>barChartLegend<span class="token punctuation">"</span></span>\n        <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>bar<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span> <span class="token attr-name">aria-label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Chart data<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>thead</span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>\n                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>File Type<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>\n                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>Number of Files<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>thead</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tbody</span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span> <span class="token attr-name">*ngFor</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>let label of barChartLabels; let idx = index<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>{{label}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>\n                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>{{barChartData[0].data[idx]}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tbody</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">></span></span>\n\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>canvas</span><span class="token punctuation">></span></span>\n\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">*ngIf</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>hasNextPage()<span class="token punctuation">"</span></span>\n        <span class="token attr-name">aria-label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Scroll to previous chart page<span class="token punctuation">"</span></span>\n        <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>chart-scroll-next-btn<span class="token punctuation">"</span></span>\n        <span class="token attr-name">(click)</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>goToNextPage()<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ux-icon</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>next<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ux-icon</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>',example:'<div class="demo-chart-container">\n\n    <div *ngIf="hasPreviousPage()"\n        aria-label="Scroll to previous chart page"\n        class="chart-scroll-previous-btn"\n        (click)="goToPreviousPage()">\n        <ux-icon name="previous"></ux-icon>\n    </div>\n\n    <canvas aria-label="Bar chart showing file type totals"\n        baseChart\n        [datasets]="barChartData"\n        [labels]="barChartLabels"\n        [options]="barChartOptions"\n        [legend]="barChartLegend"\n        type="bar">\n\n        <table aria-label="Chart data">\n            <thead>\n                <tr>\n                    <th>File Type</th>\n                    <th>Number of Files</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr *ngFor="let label of barChartLabels; let idx = index">\n                    <td>{{label}}</td>\n                    <td>{{barChartData[0].data[idx]}}</td>\n                </tr>\n            </tbody>\n        </table>\n\n    </canvas>\n\n    <div *ngIf="hasNextPage()"\n        aria-label="Scroll to previous chart page"\n        class="chart-scroll-next-btn"\n        (click)="goToNextPage()">\n        <ux-icon name="next"></ux-icon>\n    </div>\n\n</div>'}},71857:e=>{e.exports={snippet:'<span class="token keyword">import</span> <span class="token punctuation">{</span> Component <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@angular/core\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> ColorService <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@ux-aspects/ux-aspects\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> ChartDataset<span class="token punctuation">,</span> ChartOptions<span class="token punctuation">,</span> TooltipItem <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'chart.js\'</span><span class="token punctuation">;</span>\n\n@<span class="token function">Component</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    <span class="token literal-property property">selector</span><span class="token operator">:</span> <span class="token string">\'app-root\'</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">templateUrl</span><span class="token operator">:</span> <span class="token string">\'./app.component.html\'</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">styleUrls</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">\'./app.component.css\'</span><span class="token punctuation">]</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">AppComponent</span> <span class="token punctuation">{</span>\n\n    <span class="token comment">// configure the directive data</span>\n    <span class="token literal-property property">barChartData</span><span class="token operator">:</span> ChartDataset<span class="token operator">&lt;</span><span class="token string">\'bar\'</span><span class="token operator">></span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n    <span class="token literal-property property">barChartLabels</span><span class="token operator">:</span> string<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n    <span class="token literal-property property">barChartOptions</span><span class="token operator">:</span> ChartOptions<span class="token operator">&lt;</span><span class="token string">\'bar\'</span><span class="token operator">></span><span class="token punctuation">;</span>\n    <span class="token literal-property property">barChartLegend</span><span class="token operator">:</span> boolean <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\n    <span class="token literal-property property">barChartColors</span><span class="token operator">:</span> any<span class="token punctuation">;</span>\n\n    <span class="token literal-property property">labels</span><span class="token operator">:</span> string<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">\'.doc\'</span><span class="token punctuation">,</span> <span class="token string">\'.ppt\'</span><span class="token punctuation">,</span> <span class="token string">\'.pdf\'</span><span class="token punctuation">,</span> <span class="token string">\'.xls\'</span><span class="token punctuation">,</span> <span class="token string">\'.html\'</span><span class="token punctuation">,</span> <span class="token string">\'.txt\'</span><span class="token punctuation">,</span> <span class="token string">\'.png\'</span><span class="token punctuation">,</span> <span class="token string">\'.bmp\'</span><span class="token punctuation">,</span> <span class="token string">\'.gif\'</span><span class="token punctuation">,</span> <span class="token string">\'.svg\'</span><span class="token punctuation">,</span> <span class="token string">\'.ttf\'</span><span class="token punctuation">,</span> <span class="token string">\'.wav\'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n    <span class="token literal-property property">data</span><span class="token operator">:</span> number<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">34</span><span class="token punctuation">,</span> <span class="token number">25</span><span class="token punctuation">,</span> <span class="token number">19</span><span class="token punctuation">,</span> <span class="token number">34</span><span class="token punctuation">,</span> <span class="token number">32</span><span class="token punctuation">,</span> <span class="token number">44</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">27</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">,</span> <span class="token number">48</span><span class="token punctuation">,</span> <span class="token number">40</span><span class="token punctuation">,</span> <span class="token number">36</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n    <span class="token literal-property property">page</span><span class="token operator">:</span> number <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>\n    <span class="token literal-property property">pageSize</span><span class="token operator">:</span> number <span class="token operator">=</span> <span class="token number">4</span><span class="token punctuation">;</span>\n\n    <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">colorService</span><span class="token operator">:</span> ColorService</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n\n        <span class="token keyword">this</span><span class="token punctuation">.</span>barChartLabels <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getPageLabels</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token comment">// Prepare colors used in chart</span>\n        <span class="token keyword">const</span> gridColor <span class="token operator">=</span> colorService<span class="token punctuation">.</span><span class="token function">getColor</span><span class="token punctuation">(</span><span class="token string">\'grey6\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toHex</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">const</span> barBackgroundColor <span class="token operator">=</span> colorService<span class="token punctuation">.</span><span class="token function">getColor</span><span class="token punctuation">(</span><span class="token string">\'chart1\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setAlpha</span><span class="token punctuation">(</span><span class="token number">0.1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toRgba</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">const</span> barHoverBackgroundColor <span class="token operator">=</span> colorService<span class="token punctuation">.</span><span class="token function">getColor</span><span class="token punctuation">(</span><span class="token string">\'chart1\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setAlpha</span><span class="token punctuation">(</span><span class="token number">0.2</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toRgba</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">const</span> barBorderColor <span class="token operator">=</span> colorService<span class="token punctuation">.</span><span class="token function">getColor</span><span class="token punctuation">(</span><span class="token string">\'chart1\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toHex</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">const</span> tooltipBackgroundColor <span class="token operator">=</span> colorService<span class="token punctuation">.</span><span class="token function">getColor</span><span class="token punctuation">(</span><span class="token string">\'grey2\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toHex</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token keyword">this</span><span class="token punctuation">.</span>barChartData <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">{</span>\n            <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getPageData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n            <span class="token literal-property property">borderWidth</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>\n            <span class="token literal-property property">barPercentage</span><span class="token operator">:</span> <span class="token number">0.5</span><span class="token punctuation">,</span>\n            <span class="token literal-property property">categoryPercentage</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>\n            <span class="token literal-property property">backgroundColor</span><span class="token operator">:</span> barBackgroundColor<span class="token punctuation">,</span>\n            <span class="token literal-property property">hoverBackgroundColor</span><span class="token operator">:</span> barHoverBackgroundColor<span class="token punctuation">,</span>\n            <span class="token literal-property property">hoverBorderColor</span><span class="token operator">:</span> barBorderColor<span class="token punctuation">,</span>\n            <span class="token literal-property property">borderColor</span><span class="token operator">:</span> barBorderColor\n        <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n        <span class="token keyword">this</span><span class="token punctuation">.</span>barChartOptions <span class="token operator">=</span> <span class="token punctuation">{</span>\n            <span class="token literal-property property">maintainAspectRatio</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n            <span class="token literal-property property">responsive</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n            <span class="token literal-property property">animation</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n                <span class="token literal-property property">duration</span><span class="token operator">:</span> <span class="token number">0</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            <span class="token literal-property property">scales</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n                <span class="token literal-property property">x</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n                    <span class="token literal-property property">grid</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n                        <span class="token literal-property property">color</span><span class="token operator">:</span> <span class="token string">\'transparent\'</span>\n                    <span class="token punctuation">}</span>\n                <span class="token punctuation">}</span><span class="token punctuation">,</span>\n                <span class="token literal-property property">y</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n                    <span class="token literal-property property">grid</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n                        <span class="token literal-property property">color</span><span class="token operator">:</span> gridColor\n                    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n                    <span class="token literal-property property">min</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>\n                    <span class="token literal-property property">max</span><span class="token operator">:</span> <span class="token number">50</span><span class="token punctuation">,</span>\n                    <span class="token literal-property property">ticks</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n                        <span class="token literal-property property">stepSize</span><span class="token operator">:</span> <span class="token number">10</span>\n                    <span class="token punctuation">}</span>\n                <span class="token punctuation">}</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n                <span class="token literal-property property">tooltip</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n                    <span class="token literal-property property">backgroundColor</span><span class="token operator">:</span> tooltipBackgroundColor<span class="token punctuation">,</span>\n                    <span class="token literal-property property">cornerRadius</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>\n                    <span class="token literal-property property">callbacks</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n                        <span class="token function-variable function">title</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token string">\'\'</span><span class="token punctuation">,</span>\n                        <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token punctuation">(</span>item<span class="token operator">:</span> TooltipItem<span class="token operator">&lt;</span><span class="token string">\'bar\'</span><span class="token operator">></span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n                            <span class="token keyword">return</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">x: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>item<span class="token punctuation">.</span>label<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">, y: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>item<span class="token punctuation">.</span>formattedValue<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span>\n                        <span class="token punctuation">}</span>\n                    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n                    <span class="token literal-property property">displayColors</span><span class="token operator">:</span> <span class="token boolean">false</span>\n                <span class="token punctuation">}</span>\n            <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token function">getPageData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> number<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">{</span>\n        <span class="token keyword">const</span> startIdx <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>page <span class="token operator">*</span> <span class="token keyword">this</span><span class="token punctuation">.</span>pageSize<span class="token punctuation">;</span>\n        <span class="token keyword">const</span> endIdx <span class="token operator">=</span> startIdx <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>pageSize<span class="token punctuation">;</span>\n\n        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span>startIdx<span class="token punctuation">,</span> endIdx<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token function">getPageLabels</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> string<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">{</span>\n        <span class="token keyword">const</span> startIdx <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>page <span class="token operator">*</span> <span class="token keyword">this</span><span class="token punctuation">.</span>pageSize<span class="token punctuation">;</span>\n        <span class="token keyword">const</span> endIdx <span class="token operator">=</span> startIdx <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>pageSize<span class="token punctuation">;</span>\n\n        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>labels<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span>startIdx<span class="token punctuation">,</span> endIdx<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token function">goToPreviousPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>\n\n        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">hasPreviousPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token keyword">this</span><span class="token punctuation">.</span>page <span class="token operator">-=</span> <span class="token number">1</span><span class="token punctuation">;</span>\n\n            <span class="token comment">// get the data and labels for the new page</span>\n            <span class="token keyword">this</span><span class="token punctuation">.</span>barChartLabels <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getPageLabels</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token keyword">this</span><span class="token punctuation">.</span>barChartData<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>data <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getPageData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n\n    <span class="token punctuation">}</span>\n\n    <span class="token function">goToNextPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>\n\n        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">hasNextPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token keyword">this</span><span class="token punctuation">.</span>page <span class="token operator">+=</span> <span class="token number">1</span><span class="token punctuation">;</span>\n\n            <span class="token comment">// get the data and labels for the new page</span>\n            <span class="token keyword">this</span><span class="token punctuation">.</span>barChartLabels <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getPageLabels</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token keyword">this</span><span class="token punctuation">.</span>barChartData<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>data <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getPageData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n\n    <span class="token punctuation">}</span>\n\n    <span class="token function">hasNextPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> boolean <span class="token punctuation">{</span>\n        <span class="token comment">// get the index of the next page</span>\n        <span class="token keyword">const</span> nextPageIndex <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>page <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token keyword">this</span><span class="token punctuation">.</span>pageSize<span class="token punctuation">;</span>\n\n        <span class="token comment">// check if this index is out of bounds</span>\n        <span class="token keyword">return</span> nextPageIndex <span class="token operator">&lt;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token punctuation">.</span>length<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token function">hasPreviousPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> boolean <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>page <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n',example:"import { Component } from '@angular/core';\nimport { ColorService } from '@ux-aspects/ux-aspects';\nimport { ChartDataset, ChartOptions, TooltipItem } from 'chart.js';\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n    // configure the directive data\n    barChartData: ChartDataset<'bar'>[];\n\n    barChartLabels: string[];\n    barChartOptions: ChartOptions<'bar'>;\n    barChartLegend: boolean = false;\n    barChartColors: any;\n\n    labels: string[] = ['.doc', '.ppt', '.pdf', '.xls', '.html', '.txt', '.png', '.bmp', '.gif', '.svg', '.ttf', '.wav'];\n    data: number[] = [34, 25, 19, 34, 32, 44, 12, 27, 15, 48, 40, 36];\n\n    page: number = 0;\n    pageSize: number = 4;\n\n    constructor(colorService: ColorService) {\n\n        this.barChartLabels = this.getPageLabels();\n\n        // Prepare colors used in chart\n        const gridColor = colorService.getColor('grey6').toHex();\n        const barBackgroundColor = colorService.getColor('chart1').setAlpha(0.1).toRgba();\n        const barHoverBackgroundColor = colorService.getColor('chart1').setAlpha(0.2).toRgba();\n        const barBorderColor = colorService.getColor('chart1').toHex();\n        const tooltipBackgroundColor = colorService.getColor('grey2').toHex();\n\n        this.barChartData = [{\n            data: this.getPageData(),\n            borderWidth: 1,\n            barPercentage: 0.5,\n            categoryPercentage: 1,\n            backgroundColor: barBackgroundColor,\n            hoverBackgroundColor: barHoverBackgroundColor,\n            hoverBorderColor: barBorderColor,\n            borderColor: barBorderColor\n        }];\n\n        this.barChartOptions = {\n            maintainAspectRatio: false,\n            responsive: true,\n            animation: {\n                duration: 0\n            },\n            scales: {\n                x: {\n                    grid: {\n                        color: 'transparent'\n                    }\n                },\n                y: {\n                    grid: {\n                        color: gridColor\n                    },\n                    min: 0,\n                    max: 50,\n                    ticks: {\n                        stepSize: 10\n                    }\n                }\n            },\n            plugins: {\n                tooltip: {\n                    backgroundColor: tooltipBackgroundColor,\n                    cornerRadius: 0,\n                    callbacks: {\n                        title: () => '',\n                        label: (item: TooltipItem<'bar'>) => {\n                            return `x: ${item.label}, y: ${item.formattedValue}`;\n                        }\n                    },\n                    displayColors: false\n                }\n            }\n        };\n    }\n\n    getPageData(): number[] {\n        const startIdx = this.page * this.pageSize;\n        const endIdx = startIdx + this.pageSize;\n\n        return this.data.slice(startIdx, endIdx);\n    }\n\n    getPageLabels(): string[] {\n        const startIdx = this.page * this.pageSize;\n        const endIdx = startIdx + this.pageSize;\n\n        return this.labels.slice(startIdx, endIdx);\n    }\n\n    goToPreviousPage(): void {\n\n        if (this.hasPreviousPage()) {\n            this.page -= 1;\n\n            // get the data and labels for the new page\n            this.barChartLabels = this.getPageLabels();\n            this.barChartData[0].data = this.getPageData();\n        }\n\n    }\n\n    goToNextPage(): void {\n\n        if (this.hasNextPage()) {\n            this.page += 1;\n\n            // get the data and labels for the new page\n            this.barChartLabels = this.getPageLabels();\n            this.barChartData[0].data = this.getPageData();\n        }\n\n    }\n\n    hasNextPage(): boolean {\n        // get the index of the next page\n        const nextPageIndex = (this.page + 1) * this.pageSize;\n\n        // check if this index is out of bounds\n        return nextPageIndex < this.data.length;\n    }\n\n    hasPreviousPage(): boolean {\n        return this.page > 0;\n    }\n}\n"}},6851:(e,h,s)=>{var c={"./scrollable-chart.css":18866,"./scrollable-chart.html":98832,"./scrollable-chart.ts":71857,"docs/app/pages/charts/charts-sections/scrollable-chart/scrollable-chart/snippets/scrollable-chart.css":18866,"docs/app/pages/charts/charts-sections/scrollable-chart/scrollable-chart/snippets/scrollable-chart.html":98832,"docs/app/pages/charts/charts-sections/scrollable-chart/scrollable-chart/snippets/scrollable-chart.ts":71857};function k(o){var g=l(o);return s(g)}function l(o){if(!s.o(c,o)){var g=new Error("Cannot find module '"+o+"'");throw g.code="MODULE_NOT_FOUND",g}return c[o]}k.keys=function(){return Object.keys(c)},k.resolve=l,e.exports=k,k.id=6851},78495:(e,h,s)=>{"use strict";s.r(h),s.d(h,{ChartsScrollableChartModule:()=>N});var c=s(36895),k=s(40239),l=s(96215),o=s(59541),g=s(3745),m=s(73875),d=s(74427),C=s(48342),x=s(20391),v=s(34610),n=s(55062),f=s(30642),Z=s(1834),P=s(39327),w=s(75079),T=s(60169),U=s(73962),A=s(33403);function S(p,t){if(1&p){const a=n.EpF();n.TgZ(0,"div",26),n.NdJ("click",function(){n.CHM(a);const i=n.oxw();return n.KtG(i.goToPreviousPage())}),n._UZ(1,"ux-icon",27),n.qZA()}}function q(p,t){if(1&p&&(n.TgZ(0,"tr")(1,"td"),n._uU(2),n.qZA(),n.TgZ(3,"td"),n._uU(4),n.qZA()()),2&p){const a=t.$implicit,u=t.index,i=n.oxw();n.xp6(2),n.Oqu(a),n.xp6(2),n.Oqu(i.barChartData[0].data[u])}}function I(p,t){if(1&p){const a=n.EpF();n.TgZ(0,"div",28),n.NdJ("click",function(){n.CHM(a);const i=n.oxw();return n.KtG(i.goToNextPage())}),n._UZ(1,"ux-icon",29),n.qZA()}}let r=class extends x.u{constructor(t){super(s(6851)),this.playground={files:{"app.component.ts":this.snippets.raw.scrollableChartTs,"app.component.html":this.snippets.raw.scrollableChartHtml,"app.component.css":this.snippets.raw.scrollableChartCss},modules:[{library:"chart.js"},{imports:["NgChartsModule"],library:"ng2-charts"}]},this.barChartLegend=!1,this.labels=[".doc",".ppt",".pdf",".xls",".html",".txt",".png",".bmp",".gif",".svg",".ttf",".wav"],this.data=[34,25,19,34,32,44,12,27,15,48,40,36],this.page=0,this.pageSize=4,this.barChartLabels=this.getPageLabels();const a=t.getColor("grey6").toHex(),u=t.getColor("chart1").setAlpha(.1).toRgba(),i=t.getColor("chart1").setAlpha(.2).toRgba(),b=t.getColor("chart1").toHex(),B=t.getColor("grey2").toHex();this.barChartData=[{data:this.getPageData(),borderWidth:1,barPercentage:.5,categoryPercentage:1,backgroundColor:u,hoverBackgroundColor:i,hoverBorderColor:b,borderColor:b}],this.barChartOptions={maintainAspectRatio:!1,responsive:!0,animation:{duration:0},scales:{x:{grid:{color:"transparent"}},y:{grid:{color:a},min:0,max:50,ticks:{stepSize:10}}},plugins:{tooltip:{backgroundColor:B,cornerRadius:0,callbacks:{title:()=>"",label:y=>`x: ${y.label}, y: ${y.formattedValue}`},displayColors:!1}}}}getPageData(){const t=this.page*this.pageSize;return this.data.slice(t,t+this.pageSize)}getPageLabels(){const t=this.page*this.pageSize;return this.labels.slice(t,t+this.pageSize)}goToPreviousPage(){this.hasPreviousPage()&&(this.page-=1,this.barChartLabels=this.getPageLabels(),this.barChartData[0].data=this.getPageData())}goToNextPage(){this.hasNextPage()&&(this.page+=1,this.barChartLabels=this.getPageLabels(),this.barChartData[0].data=this.getPageData())}hasNextPage(){return(this.page+1)*this.pageSize<this.data.length}hasPreviousPage(){return this.page>0}};r.\u0275fac=function(t){return new(t||r)(n.Y36(l.x4Z))},r.\u0275cmp=n.Xpm({type:r,selectors:[["uxd-charts-scrollable-chart"]],features:[n.qOj],decls:131,vars:11,consts:[[1,"demo-chart-container"],["aria-label","Scroll to previous chart page","class","chart-scroll-previous-btn",3,"click",4,"ngIf"],["aria-label","Bar chart showing file type totals","baseChart","","type","bar",3,"datasets","labels","options","legend"],["aria-label","Chart data"],[4,"ngFor","ngForOf"],["aria-label","Scroll to previous chart page","class","chart-scroll-next-btn",3,"click",4,"ngIf"],["tableTitle","Inputs"],["uxd-api-property","","name","dataSets","type","object[]"],["uxd-api-property","","name","type","type","string"],["uxd-api-property","","name","options","type","ChartOptions"],["uxd-api-property","","name","legend","type","boolean"],["tableTitle","Outputs"],["uxd-api-property","","name","chartClick"],["uxd-api-property","","name","chartHover"],[3,"minimal"],["heading","HTML"],["language","html",3,"content"],["heading","TypeScript"],["language","javascript",3,"content"],["heading","CSS"],["language","css",3,"content"],[1,"m-b-nil"],["href","https://www.npmjs.com/package/ng2-charts",1,"hyperlink"],["href","https://www.npmjs.com/package/chart.js",1,"hyperlink"],["href","http://valor-software.com/ng2-charts/",1,"hyperlink"],["href","http://www.chartjs.org/docs/",1,"hyperlink"],["aria-label","Scroll to previous chart page",1,"chart-scroll-previous-btn",3,"click"],["name","previous"],["aria-label","Scroll to previous chart page",1,"chart-scroll-next-btn",3,"click"],["name","next"]],template:function(t,a){1&t&&(n.TgZ(0,"div",0),n.YNc(1,S,2,0,"div",1),n.TgZ(2,"canvas",2)(3,"table",3)(4,"thead")(5,"tr")(6,"th"),n._uU(7,"File Type"),n.qZA(),n.TgZ(8,"th"),n._uU(9,"Number of Files"),n.qZA()()(),n.TgZ(10,"tbody"),n.YNc(11,q,5,2,"tr",4),n.qZA()()(),n.YNc(12,I,2,0,"div",5),n.qZA(),n._UZ(13,"hr"),n.TgZ(14,"p"),n._uU(15," Scrollable Charts can be added using the "),n.TgZ(16,"code"),n._uU(17,"ng2-charts"),n.qZA(),n._uU(18," library. The "),n.TgZ(19,"code"),n._uU(20,"chart.js"),n.qZA(),n._uU(21," library needs to be imported and the "),n.TgZ(22,"code"),n._uU(23,"NgChartsModule"),n.qZA(),n._uU(24," needs to be added to the appropriate NgModule.\n"),n.qZA(),n.TgZ(25,"p"),n._uU(26,"The "),n.TgZ(27,"code"),n._uU(28,"baseChart"),n.qZA(),n._uU(29," directive should be added to a "),n.TgZ(30,"code"),n._uU(31,"canvas"),n.qZA(),n._uU(32," element and the following attributes can be used to customize the chart behavior and appearance:"),n.qZA(),n.TgZ(33,"uxd-api-properties",6)(34,"tr",7),n._uU(35," Contains the data and properties for each data set to be displayed in the chart. "),n.qZA(),n.TgZ(36,"tr",8),n._uU(37," Indicates the type of the chart. Possible options are: "),n.TgZ(38,"code"),n._uU(39,"line"),n.qZA(),n._uU(40,", "),n.TgZ(41,"code"),n._uU(42,"bar"),n.qZA(),n._uU(43,", "),n.TgZ(44,"code"),n._uU(45,"radar"),n.qZA(),n._uU(46,", "),n.TgZ(47,"code"),n._uU(48,"pie"),n.qZA(),n._uU(49,", "),n.TgZ(50,"code"),n._uU(51,"polarArea"),n.qZA(),n._uU(52,", "),n.TgZ(53,"code"),n._uU(54,"doughnut"),n.qZA()(),n.TgZ(55,"tr",9),n._uU(56," Configures the appearance and behavior of all aspects of the chart. "),n.qZA(),n.TgZ(57,"tr",10),n._uU(58," Determines whether or not the legend should be displayed. "),n.qZA()(),n.TgZ(59,"uxd-api-properties",11)(60,"tr",12),n._uU(61," Fires when click on a chart has occurred, returns information regarding active points and labels. "),n.qZA(),n.TgZ(62,"tr",13),n._uU(63," Fires when mousemove (hover) on a chart has occurred, returns information regarding active points and labels. "),n.qZA()(),n.TgZ(64,"p"),n._uU(65,"Complete documentation on the directive and chart options can be found at the documentation links below."),n.qZA(),n.TgZ(66,"p"),n._uU(67,"The following code can be used to create the example above: "),n.qZA(),n.TgZ(68,"ux-tabset",14)(69,"ux-tab",15),n._UZ(70,"uxd-snippet",16),n.qZA(),n.TgZ(71,"ux-tab",17),n._UZ(72,"uxd-snippet",18),n.qZA(),n.TgZ(73,"ux-tab",19),n._UZ(74,"uxd-snippet",20),n.qZA()(),n._UZ(75,"br"),n.TgZ(76,"p"),n._uU(77," The effect of scrolling on a chart can be achieved by simply displaying only a subset of the dataset at a time. We can add 'previous' and 'next' buttons to allow easy navigation between the different pages of data.\n"),n.qZA(),n.TgZ(78,"p"),n._uU(79," In the example above, we store the entire dataset in an array. We also store an array containing all the labels for each data point. By defining several variables ("),n.TgZ(80,"code"),n._uU(81,"pageSize"),n.qZA(),n._uU(82," & "),n.TgZ(83,"code"),n._uU(84,"pageNumber"),n.qZA(),n._uU(85,") we can easily control the datasets shown.\n"),n.qZA(),n.TgZ(86,"p"),n._uU(87," We then add several functions:\n"),n.qZA(),n.TgZ(88,"ul")(89,"li")(90,"code"),n._uU(91,"getPageData"),n.qZA(),n._uU(92," - this returns a subset of the complete dataset based on the current page number and page size."),n.qZA(),n.TgZ(93,"li")(94,"code"),n._uU(95,"getPageLabels"),n.qZA(),n._uU(96," - this returns the labels to be displayed on the x-axis that correspond to the data points shown on the page."),n.qZA(),n.TgZ(97,"li")(98,"code"),n._uU(99,"goToPreviousPage"),n.qZA(),n._uU(100," - this will decrement the current page number. It will then update the dataset and labels using methods described above."),n.qZA(),n.TgZ(101,"li")(102,"code"),n._uU(103,"hasPreviousPage"),n.qZA(),n._uU(104," - this will determine whether we are on the first page or not."),n.qZA(),n.TgZ(105,"li")(106,"code"),n._uU(107,"hasNextPage"),n.qZA(),n._uU(108," - this will determine whether we are on the last page or not."),n.qZA()(),n.TgZ(109,"blockquote")(110,"p",21)(111,"b"),n._uU(112,"Dependencies: "),n.qZA(),n.TgZ(113,"a",22),n._uU(114,"ng2-charts"),n.qZA(),n._uU(115,", "),n.TgZ(116,"a",23),n._uU(117,"chart.js"),n.qZA()(),n.TgZ(118,"p",21)(119,"b"),n._uU(120,"Modules: "),n.qZA(),n.TgZ(121,"span"),n._uU(122,"NgChartsModule"),n.qZA()(),n.TgZ(123,"p",21)(124,"b"),n._uU(125,"Documentation: "),n.qZA(),n.TgZ(126,"a",24),n._uU(127,"Angular Directive Documentation"),n.qZA(),n._uU(128,", "),n.TgZ(129,"a",25),n._uU(130,"Chart Library Documentation"),n.qZA()()()),2&t&&(n.xp6(1),n.Q6J("ngIf",a.hasPreviousPage()),n.xp6(1),n.Q6J("datasets",a.barChartData)("labels",a.barChartLabels)("options",a.barChartOptions)("legend",a.barChartLegend),n.xp6(9),n.Q6J("ngForOf",a.barChartLabels),n.xp6(1),n.Q6J("ngIf",a.hasNextPage()),n.xp6(56),n.Q6J("minimal",!1),n.xp6(2),n.Q6J("content",a.snippets.compiled.scrollableChartHtml),n.xp6(2),n.Q6J("content",a.snippets.compiled.scrollableChartTs),n.xp6(2),n.Q6J("content",a.snippets.compiled.scrollableChartCss))},dependencies:[o.jh,c.sg,c.O5,f.$,Z.S,P.j,w.G,T.o,U.A,A.i],styles:[".chart-scroll-previous-btn[_ngcontent-%COMP%], .chart-scroll-next-btn[_ngcontent-%COMP%]{position:absolute;display:flex;align-items:center;justify-content:center;width:25px;height:25px;background-color:#00a7a2;border-radius:50%;opacity:.7;cursor:pointer;transition:opacity .3s ease-in-out;top:calc(50% - 22px);color:#fff;font-size:13px}.chart-scroll-previous-btn[_ngcontent-%COMP%]:hover, .chart-scroll-next-btn[_ngcontent-%COMP%]:hover{opacity:.9}.chart-scroll-previous-btn[_ngcontent-%COMP%]{left:32px;padding-right:1px}.chart-scroll-next-btn[_ngcontent-%COMP%]{right:10px;padding-left:2px}"]}),r=(0,C.gn)([(0,v.cG)("ChartsScrollableChartComponent")],r);const D=[r],L=[{path:"**",component:m.R,data:{category:d.N.resolveCategoryData(d.I.Charts,"Scrollable Chart")}}];let N=(()=>{class p{constructor(a,u){u.registerResolver(a,D)}}return p.\u0275fac=function(a){return new(a||p)(n.LFG(n._Vd),n.LFG(d.N))},p.\u0275mod=n.oAB({type:p}),p.\u0275inj=n.cJS({imports:[o.vQ,l.oQZ,c.ez,g.N,l.QX1,k.Bz.forChild(L),l.f_l]}),p})()}}]);
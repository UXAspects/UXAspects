{"version":3,"file":"ux-aspects.umd.min.js","sources":["../../../../node_modules/.tmp/utils/facade/browser.ts","../../../../node_modules/.tmp/utils/theme-provider.ts","../../../../node_modules/.tmp/tooltip/tooltip-container.component.ts","../../../../node_modules/.tmp/utils/trigger.class.ts","../../../../node_modules/.tmp/utils/triggers.ts","../../../../node_modules/.tmp/component-loader/content-ref.class.ts","../../../../node_modules/.tmp/component-loader/component-loader.class.ts","../../../../node_modules/.tmp/positioning/ng-positioning.ts","../../../../node_modules/.tmp/positioning/positioning.service.ts","../../../../node_modules/.tmp/component-loader/component-loader.factory.ts","../../../../node_modules/.tmp/utils/warn-once.ts","../../../../node_modules/.tmp/tooltip/tooltip.directive.ts","../../../../node_modules/.tmp/utils/decorators.ts","../../../../node_modules/.tmp/tooltip/tooltip.module.ts","../../../../node_modules/.tmp/typeahead/latin-map.ts","../../../../node_modules/.tmp/typeahead/typeahead-match.class.ts","../../../../node_modules/.tmp/typeahead/typeahead-utils.ts","../../../../node_modules/.tmp/utils/utils.class.ts","../../../../node_modules/.tmp/typeahead/typeahead-container.component.ts","../../../../node_modules/.tmp/typeahead/typeahead.directive.ts","../../../../node_modules/.tmp/typeahead/typeahead.module.ts","~/@ux-aspects/ux-aspects/components/facets/facet-events.ts","~/@ux-aspects/ux-aspects/components/facets/facet-container.component.ts","~/@ux-aspects/ux-aspects/components/facets/base/facet-base/facet-base.component.ts","~/@ux-aspects/ux-aspects/components/facets/base/facet-header/facet-header.component.ts","~/@ux-aspects/ux-aspects/components/facets/facet-check-list/facet-check-list.component.ts","~/@ux-aspects/ux-aspects/components/facets/facet-typeahead-list/facet-typeahead-list.component.ts","~/@ux-aspects/ux-aspects/components/facets/facets.module.ts","~/@ux-aspects/ux-aspects/components/facets/models/facet.ts","../../../../node_modules/.tmp/dropdown/bs-dropdown.config.ts","../../../../node_modules/.tmp/dropdown/bs-dropdown.state.ts","../../../../node_modules/.tmp/dropdown/bs-dropdown-container.component.ts","../../../../node_modules/.tmp/dropdown/bs-dropdown.directive.ts","../../../../node_modules/.tmp/dropdown/bs-dropdown-menu.directive.ts","../../../../node_modules/.tmp/dropdown/bs-dropdown-toggle.directive.ts","../../../../node_modules/.tmp/dropdown/bs-dropdown.module.ts","~/@ux-aspects/ux-aspects/components/filters/filter-container.component.ts","~/@ux-aspects/ux-aspects/components/filters/filter-base/filter-base.component.ts","~/@ux-aspects/ux-aspects/components/filters/filter-dynamic/filter-dynamic.component.ts","~/@ux-aspects/ux-aspects/components/filters/filter-dropdown/filter-dropdown.component.ts","~/@ux-aspects/ux-aspects/components/filters/filter.module.ts","~/@ux-aspects/ux-aspects/components/flippable-card/flippable-card.component.ts","~/@ux-aspects/ux-aspects/components/flippable-card/flippable-card.module.ts","~/@ux-aspects/ux-aspects/components/floating-action-buttons/floating-action-buttons.service.ts","~/@ux-aspects/ux-aspects/components/floating-action-buttons/floating-action-buttons.component.ts","~/@ux-aspects/ux-aspects/components/floating-action-buttons/floating-action-button.component.ts","~/@ux-aspects/ux-aspects/components/floating-action-buttons/floating-action-buttons.module.ts","../../../../node_modules/.tmp/popover/popover.config.ts","../../../../node_modules/.tmp/popover/popover-container.component.ts","../../../../node_modules/.tmp/popover/popover.directive.ts","../../../../node_modules/.tmp/popover/popover.module.ts","~/@ux-aspects/ux-aspects/components/hierarchy-bar/hierarchy-bar.service.ts","~/@ux-aspects/ux-aspects/components/hierarchy-bar/hierarchy-bar.component.ts","~/@ux-aspects/ux-aspects/components/hierarchy-bar/hierarchy-bar.module.ts","~/@ux-aspects/ux-aspects/components/side-panel/side-panel.service.ts","~/@ux-aspects/ux-aspects/components/side-panel/side-panel.component.ts","~/@ux-aspects/ux-aspects/components/item-display-panel/item-display-panel.component.ts","~/@ux-aspects/ux-aspects/components/item-display-panel/item-display-panel.module.ts","~/@ux-aspects/ux-aspects/components/wizard/wizard-step.component.ts","~/@ux-aspects/ux-aspects/components/wizard/wizard.component.ts","~/@ux-aspects/ux-aspects/components/wizard/wizard.module.ts","~/@ux-aspects/ux-aspects/components/marquee-wizard/marquee-wizard.service.ts","~/@ux-aspects/ux-aspects/components/marquee-wizard/marquee-wizard-step.component.ts","~/@ux-aspects/ux-aspects/components/marquee-wizard/marquee-wizard.component.ts","~/@ux-aspects/ux-aspects/components/marquee-wizard/marquee-wizard.module.ts","~/@ux-aspects/ux-aspects/components/navigation/navigation.component.ts","~/@ux-aspects/ux-aspects/components/navigation/navigation-item/navigation-item.component.ts","~/@ux-aspects/ux-aspects/components/navigation/navigation.module.ts","~/@ux-aspects/ux-aspects/services/color/color.service.ts","~/@ux-aspects/ux-aspects/services/color/color.module.ts","~/@ux-aspects/ux-aspects/components/notification/notification.service.ts","~/@ux-aspects/ux-aspects/components/notification/notification-list.component.ts","~/@ux-aspects/ux-aspects/components/notification/notification.module.ts","~/@ux-aspects/ux-aspects/components/number-picker/number-picker.component.ts","~/@ux-aspects/ux-aspects/components/number-picker/number-picker.module.ts","~/@ux-aspects/ux-aspects/components/page-header/custom-menu/custom-menu.directive.ts","~/@ux-aspects/ux-aspects/components/page-header/page-header.service.ts","~/@ux-aspects/ux-aspects/components/page-header/page-header.component.ts","~/@ux-aspects/ux-aspects/components/page-header/icon-menu/icon-menu.component.ts","~/@ux-aspects/ux-aspects/components/page-header/navigation/navigation-dropdown-item/navigation-dropdown-item.component.ts","~/@ux-aspects/ux-aspects/components/page-header/navigation/navigation-item/navigation-item.component.ts","~/@ux-aspects/ux-aspects/components/page-header/navigation/navigation.component.ts","~/@ux-aspects/ux-aspects/directives/menu-navigation/menu-navigation.service.ts","~/@ux-aspects/ux-aspects/directives/menu-navigation/menu-navigation-item.directive.ts","~/@ux-aspects/ux-aspects/directives/menu-navigation/menu-navigation.directive.ts","~/@ux-aspects/ux-aspects/directives/menu-navigation/menu-navigation-toggle.directive.ts","~/@ux-aspects/ux-aspects/directives/menu-navigation/menu-navigation.module.ts","~/@ux-aspects/ux-aspects/components/page-header/page-header.module.ts","~/@ux-aspects/ux-aspects/components/progress-bar/progress-bar.component.ts","~/@ux-aspects/ux-aspects/components/progress-bar/progress-bar.module.ts","~/@ux-aspects/ux-aspects/components/radiobutton/radiobutton.component.ts","~/@ux-aspects/ux-aspects/components/radiobutton/radiobutton.module.ts","~/@ux-aspects/ux-aspects/components/search-builder/search-builder.service.ts","~/@ux-aspects/ux-aspects/components/search-builder/search-builder-group/search-builder-group.service.ts","~/@ux-aspects/ux-aspects/components/search-builder/search-builder-group/search-builder-group.component.ts","~/@ux-aspects/ux-aspects/components/search-builder/search-builder-outlet/search-builder-outlet.directive.ts","~/@ux-aspects/ux-aspects/components/search-builder/search-components/base-search.component.ts","~/@ux-aspects/ux-aspects/components/search-builder/search-components/text/text.component.ts","~/@ux-aspects/ux-aspects/components/search-builder/search-components/date/date.component.ts","~/@ux-aspects/ux-aspects/components/search-builder/search-components/date-range/date-range.component.ts","~/@ux-aspects/ux-aspects/components/search-builder/search-components/select/select.component.ts","~/@ux-aspects/ux-aspects/components/search-builder/search-builder.component.ts","~/@ux-aspects/ux-aspects/components/typeahead/typeahead-event.ts","~/@ux-aspects/ux-aspects/components/typeahead/typeahead-key.service.ts","~/@ux-aspects/ux-aspects/components/typeahead/typeahead.component.ts","~/@ux-aspects/ux-aspects/directives/infinite-scroll/infinite-scroll-load-button.directive.ts","~/@ux-aspects/ux-aspects/directives/infinite-scroll/infinite-scroll-loading.directive.ts","~/@ux-aspects/ux-aspects/directives/infinite-scroll/infinite-scroll.directive.ts","~/@ux-aspects/ux-aspects/directives/infinite-scroll/infinite-scroll.module.ts","~/@ux-aspects/ux-aspects/directives/scroll-into-view-if/scroll-into-view.service.ts","~/@ux-aspects/ux-aspects/directives/scroll-into-view-if/scroll-into-view-if.directive.ts","~/@ux-aspects/ux-aspects/directives/scroll-into-view-if/scroll-into-view-if.module.ts","~/@ux-aspects/ux-aspects/components/typeahead/typeahead.module.ts","~/@ux-aspects/ux-aspects/components/select/select.component.ts","~/@ux-aspects/ux-aspects/components/tag-input/tag-input-event.ts","~/@ux-aspects/ux-aspects/components/tag-input/tag-input.component.ts","~/@ux-aspects/ux-aspects/components/tag-input/tag-input.module.ts","~/@ux-aspects/ux-aspects/components/select/select.module.ts","~/@ux-aspects/ux-aspects/components/search-builder/search-builder.module.ts","~/@ux-aspects/ux-aspects/components/side-panel/side-panel-close.directive.ts","~/@ux-aspects/ux-aspects/components/side-panel/side-panel.module.ts","~/@ux-aspects/ux-aspects/components/slider/slider.component.ts","~/@ux-aspects/ux-aspects/components/slider/slider.module.ts","~/@ux-aspects/ux-aspects/components/spark/spark.component.ts","~/@ux-aspects/ux-aspects/components/spark/spark.module.ts","~/@ux-aspects/ux-aspects/components/timeline/timeline.component.ts","~/@ux-aspects/ux-aspects/components/timeline/timeline-event/timeline-event.component.ts","~/@ux-aspects/ux-aspects/components/timeline/timeline.module.ts","~/@ux-aspects/ux-aspects/components/toggleswitch/toggleswitch.component.ts","~/@ux-aspects/ux-aspects/components/toggleswitch/toggleswitch.module.ts","~/@ux-aspects/ux-aspects/components/toolbar-search/toolbar-search-field.directive.ts","~/@ux-aspects/ux-aspects/components/toolbar-search/toolbar-search-button.directive.ts","~/@ux-aspects/ux-aspects/components/toolbar-search/toolbar-search.component.ts","~/@ux-aspects/ux-aspects/components/toolbar-search/toolbar-search.module.ts","~/@ux-aspects/ux-aspects/services/frame-extraction/frame-extraction.service.ts","~/@ux-aspects/ux-aspects/services/frame-extraction/frame-extraction.module.ts","~/@ux-aspects/ux-aspects/components/media-player/media-player.service.ts","~/@ux-aspects/ux-aspects/services/audio/audio.service.ts","~/@ux-aspects/ux-aspects/services/audio/audio.module.ts","~/@ux-aspects/ux-aspects/components/media-player/media-player.component.ts","~/@ux-aspects/ux-aspects/components/media-player/extensions/base-extension.directive.ts","~/@ux-aspects/ux-aspects/components/media-player/extensions/timeline/timeline.component.ts","~/@ux-aspects/ux-aspects/components/media-player/extensions/controls/controls.component.ts","~/@ux-aspects/ux-aspects/pipes/duration/duration.pipe.ts","~/@ux-aspects/ux-aspects/pipes/duration/duration.module.ts","~/@ux-aspects/ux-aspects/pipes/file-size/file-size.pipe.ts","~/@ux-aspects/ux-aspects/pipes/file-size/file-size.module.ts","~/@ux-aspects/ux-aspects/components/media-player/media-player.module.ts","~/@ux-aspects/ux-aspects/components/virtual-scroll/directives/virtual-scroll-loading.directive.ts","~/@ux-aspects/ux-aspects/components/virtual-scroll/directives/virtual-scroll-load-button.directive.ts","~/@ux-aspects/ux-aspects/components/virtual-scroll/directives/virtual-scroll-cell.directive.ts","~/@ux-aspects/ux-aspects/components/virtual-scroll/virtual-scroll.component.ts","~/@ux-aspects/ux-aspects/components/virtual-scroll/virtual-scroll.module.ts","~/@ux-aspects/ux-aspects/directives/auto-grow/auto-grow.directive.ts","~/@ux-aspects/ux-aspects/directives/auto-grow/auto-grow.module.ts","~/@ux-aspects/ux-aspects/directives/fixed-header-table/fixed-header-table.directive.ts","~/@ux-aspects/ux-aspects/directives/fixed-header-table/fixed-header-table.module.ts","~/@ux-aspects/ux-aspects/directives/float-label/float-label.directive.ts","~/@ux-aspects/ux-aspects/directives/float-label/float-label.module.ts","~/@ux-aspects/ux-aspects/directives/help-center/help-center.service.ts","~/@ux-aspects/ux-aspects/directives/help-center/help-center-item.directive.ts","~/@ux-aspects/ux-aspects/directives/help-center/help-center.module.ts","~/@ux-aspects/ux-aspects/directives/hover-action/hover-action.service.ts","~/@ux-aspects/ux-aspects/directives/hover-action/hover-action-container.directive.ts","~/@ux-aspects/ux-aspects/directives/hover-action/hover-action.directive.ts","~/@ux-aspects/ux-aspects/directives/hover-action/hover-action.module.ts","~/@ux-aspects/ux-aspects/directives/layout-switcher/layout-switcher-item.directive.ts","~/@ux-aspects/ux-aspects/directives/layout-switcher/layout-switcher.directive.ts","~/@ux-aspects/ux-aspects/directives/layout-switcher/layout-switcher.module.ts","~/@ux-aspects/ux-aspects/directives/selection/strategies/selection.strategy.ts","~/@ux-aspects/ux-aspects/directives/selection/strategies/row-selection.strategy.ts","~/@ux-aspects/ux-aspects/directives/selection/strategies/simple-selection.strategy.ts","~/@ux-aspects/ux-aspects/directives/selection/selection.service.ts","~/@ux-aspects/ux-aspects/directives/selection/selection-item.directive.ts","~/@ux-aspects/ux-aspects/directives/selection/selection.directive.ts","~/@ux-aspects/ux-aspects/directives/selection/selection.module.ts","~/@ux-aspects/ux-aspects/directives/reorderable/reorderable-handle.directive.ts","~/@ux-aspects/ux-aspects/directives/reorderable/reorderable-model.directive.ts","~/@ux-aspects/ux-aspects/directives/reorderable/dragula.ts","~/@ux-aspects/ux-aspects/directives/reorderable/reorderable.service.ts","~/@ux-aspects/ux-aspects/directives/reorderable/reorderable.directive.ts","~/@ux-aspects/ux-aspects/directives/reorderable/reorderable.module.ts","~/@ux-aspects/ux-aspects/pipes/string-filter/string-filter.pipe.ts","~/@ux-aspects/ux-aspects/pipes/string-filter/string-filter.module.ts","~/@ux-aspects/ux-aspects/services/persistent-data/adapters/cookie-adapter.ts","~/@ux-aspects/ux-aspects/services/persistent-data/adapters/local-storage-adapter.ts","~/@ux-aspects/ux-aspects/services/persistent-data/adapters/session-storage-adapter.ts","~/@ux-aspects/ux-aspects/services/persistent-data/persistent-data.service.ts","~/@ux-aspects/ux-aspects/services/persistent-data/persistent-data.module.ts","~/@ux-aspects/ux-aspects/services/persistent-data/adapters/storage-adapter.ts","~/@ux-aspects/ux-aspects/hybrid/components/contacts/contacts.component.ts","~/@ux-aspects/ux-aspects/hybrid/components/expand-input/expand-input.component.ts","~/@ux-aspects/ux-aspects/hybrid/components/floating-action-button/floating-action-button.component.ts","~/@ux-aspects/ux-aspects/hybrid/components/flot/flot.component.ts","~/@ux-aspects/ux-aspects/hybrid/components/grid/grid.component.ts","~/@ux-aspects/ux-aspects/hybrid/components/hierarchy-bar/hierarchy-bar.component.ts","~/@ux-aspects/ux-aspects/hybrid/components/marquee-wizard/marquee-wizard.component.ts","~/@ux-aspects/ux-aspects/hybrid/components/nested-donut/nested-donut.component.ts","~/@ux-aspects/ux-aspects/hybrid/components/organization-chart/organization-chart.component.ts","~/@ux-aspects/ux-aspects/hybrid/components/partition-map/partition-map.component.ts","~/@ux-aspects/ux-aspects/hybrid/components/peity-chart/peity-bar-chart.component.ts","~/@ux-aspects/ux-aspects/hybrid/components/peity-chart/peity-line-chart.component.ts","~/@ux-aspects/ux-aspects/hybrid/components/peity-chart/peity-pie-chart.component.ts","~/@ux-aspects/ux-aspects/hybrid/components/peity-chart/peity-updating-line-chart.component.ts","~/@ux-aspects/ux-aspects/hybrid/components/sankey-chart/sankey.component.ts","~/@ux-aspects/ux-aspects/hybrid/components/search-toolbar/search-toolbar.component.ts","~/@ux-aspects/ux-aspects/hybrid/components/select-table/select-table.component.ts","~/@ux-aspects/ux-aspects/hybrid/components/slider-chart/slider-chart.directive.ts","~/@ux-aspects/ux-aspects/hybrid/components/social-chart/social-chart.component.ts","~/@ux-aspects/ux-aspects/hybrid/components/sort-direction-toggle/sort-direction-toggle.component.ts","~/@ux-aspects/ux-aspects/hybrid/components/tree-grid/tree-grid.component.ts","~/@ux-aspects/ux-aspects/hybrid/components/thumbnail/thumbnail.component.ts","~/@ux-aspects/ux-aspects/hybrid/services/navigation-menu/navigation-menu.service.ts","~/@ux-aspects/ux-aspects/hybrid/services/pdf/pdf.service.ts","~/@ux-aspects/ux-aspects/hybrid/services/time-ago/time-ago.service.ts","~/@ux-aspects/ux-aspects/hybrid/hybrid.module.ts","~/@ux-aspects/ux-aspects/components/breadcrumbs/breadcrumbs.component.ts","~/@ux-aspects/ux-aspects/components/breadcrumbs/breadcrumbs.module.ts","~/@ux-aspects/ux-aspects/directives/resize/resize.service.ts","../../../../node_modules/src/util/isFunction.ts","../../../../node_modules/src/util/isArray.ts","../../../../node_modules/src/util/isObject.ts","../../../../node_modules/src/util/tryCatch.ts","../../../../node_modules/src/util/errorObject.ts","../../../../node_modules/src/util/UnsubscriptionError.ts","../../../../node_modules/src/Subscription.ts","../../../../node_modules/src/Observer.ts","../../../../node_modules/src/util/root.ts","../../../../node_modules/src/symbol/rxSubscriber.ts","../../../../node_modules/src/Subscriber.ts","../../../../node_modules/src/scheduler/Action.ts","../../../../node_modules/src/scheduler/AsyncAction.ts","../../../../node_modules/src/Scheduler.ts","../../../../node_modules/src/scheduler/AsyncScheduler.ts","../../../../node_modules/src/scheduler/async.ts","../../../../node_modules/src/operators/debounceTime.ts","~/@ux-aspects/ux-aspects/directives/resize/resize.directive.ts","~/@ux-aspects/ux-aspects/directives/resize/resize.module.ts","~/@ux-aspects/ux-aspects/components/card-tabs/card-tab/card-tab-content.directive.ts","../../../../node_modules/src/OuterSubscriber.ts","../../../../node_modules/src/util/isArrayLike.ts","../../../../node_modules/src/util/isPromise.ts","../../../../node_modules/src/util/toSubscriber.ts","../../../../node_modules/src/symbol/observable.ts","../../../../node_modules/src/util/noop.ts","../../../../node_modules/src/util/pipe.ts","../../../../node_modules/src/Observable.ts","../../../../node_modules/src/symbol/iterator.ts","../../../../node_modules/src/InnerSubscriber.ts","../../../../node_modules/src/util/subscribeToResult.ts","../../../../node_modules/src/operators/audit.ts","../../../../node_modules/src/util/isNumeric.ts","../../../../node_modules/src/util/isScheduler.ts","../../../../node_modules/src/util/isDate.ts","../../../../node_modules/src/observable/TimerObservable.ts","../../../../node_modules/src/operators/buffer.ts","../../../../node_modules/src/operators/bufferCount.ts","../../../../node_modules/src/operators/bufferTime.ts","../../../../node_modules/src/operators/bufferToggle.ts","../../../../node_modules/src/operators/bufferWhen.ts","../../../../node_modules/src/operators/catchError.ts","../../../../node_modules/src/observable/ScalarObservable.ts","../../../../node_modules/src/observable/EmptyObservable.ts","../../../../node_modules/src/observable/ArrayObservable.ts","../../../../node_modules/src/operators/combineLatest.ts","../../../../node_modules/src/observable/PromiseObservable.ts","../../../../node_modules/src/observable/IteratorObservable.ts","../../../../node_modules/src/observable/ArrayLikeObservable.ts","../../../../node_modules/src/Notification.ts","../../../../node_modules/src/operators/observeOn.ts","../../../../node_modules/src/observable/FromObservable.ts","../../../../node_modules/src/operators/mergeMap.ts","../../../../node_modules/src/operators/count.ts","../../../../node_modules/src/operators/debounce.ts","../../../../node_modules/src/operators/defaultIfEmpty.ts","../../../../node_modules/src/operators/delay.ts","../../../../node_modules/src/operators/delayWhen.ts","../../../../node_modules/src/operators/dematerialize.ts","../../../../node_modules/src/util/Set.ts","../../../../node_modules/src/operators/distinct.ts","../../../../node_modules/src/operators/distinctUntilChanged.ts","../../../../node_modules/src/util/ArgumentOutOfRangeError.ts","../../../../node_modules/src/operators/elementAt.ts","../../../../node_modules/src/operators/every.ts","../../../../node_modules/src/operators/exhaust.ts","../../../../node_modules/src/operators/exhaustMap.ts","../../../../node_modules/src/operators/expand.ts","../../../../node_modules/src/operators/filter.ts","../../../../node_modules/src/operators/finalize.ts","../../../../node_modules/src/operators/find.ts","../../../../node_modules/src/util/EmptyError.ts","../../../../node_modules/src/operators/first.ts","../../../../node_modules/src/util/ObjectUnsubscribedError.ts","../../../../node_modules/src/SubjectSubscription.ts","../../../../node_modules/src/Subject.ts","../../../../node_modules/src/util/MapPolyfill.ts","../../../../node_modules/src/util/Map.ts","../../../../node_modules/src/util/FastMap.ts","../../../../node_modules/src/operators/groupBy.ts","../../../../node_modules/src/operators/ignoreElements.ts","../../../../node_modules/src/operators/isEmpty.ts","../../../../node_modules/src/operators/last.ts","../../../../node_modules/src/operators/map.ts","../../../../node_modules/src/operators/mapTo.ts","../../../../node_modules/src/operators/materialize.ts","../../../../node_modules/src/operators/scan.ts","../../../../node_modules/src/operators/takeLast.ts","../../../../node_modules/src/operators/mergeMapTo.ts","../../../../node_modules/src/operators/mergeScan.ts","../../../../node_modules/src/operators/refCount.ts","../../../../node_modules/src/observable/ConnectableObservable.ts","../../../../node_modules/src/operators/onErrorResumeNext.ts","../../../../node_modules/src/operators/pairwise.ts","../../../../node_modules/src/BehaviorSubject.ts","../../../../node_modules/src/AsyncSubject.ts","../../../../node_modules/src/scheduler/QueueAction.ts","../../../../node_modules/src/scheduler/queue.ts","../../../../node_modules/src/scheduler/QueueScheduler.ts","../../../../node_modules/src/ReplaySubject.ts","../../../../node_modules/src/observable/race.ts","../../../../node_modules/src/operators/repeat.ts","../../../../node_modules/src/operators/repeatWhen.ts","../../../../node_modules/src/operators/retry.ts","../../../../node_modules/src/operators/retryWhen.ts","../../../../node_modules/src/operators/sample.ts","../../../../node_modules/src/operators/sampleTime.ts","../../../../node_modules/src/operators/sequenceEqual.ts","../../../../node_modules/src/operators/single.ts","../../../../node_modules/src/operators/skip.ts","../../../../node_modules/src/operators/skipLast.ts","../../../../node_modules/src/operators/skipUntil.ts","../../../../node_modules/src/operators/skipWhile.ts","../../../../node_modules/src/operators/switchMap.ts","../../../../node_modules/src/operators/switchMapTo.ts","../../../../node_modules/src/operators/take.ts","../../../../node_modules/src/operators/takeUntil.ts","../../../../node_modules/src/operators/takeWhile.ts","../../../../node_modules/src/operators/tap.ts","../../../../node_modules/src/operators/throttle.ts","../../../../node_modules/src/operators/throttleTime.ts","../../../../node_modules/src/operators/timeInterval.ts","../../../../node_modules/src/util/TimeoutError.ts","../../../../node_modules/src/operators/timeout.ts","../../../../node_modules/src/operators/timeoutWith.ts","../../../../node_modules/src/operators/window.ts","../../../../node_modules/src/operators/windowCount.ts","../../../../node_modules/src/operators/windowTime.ts","../../../../node_modules/src/operators/windowToggle.ts","../../../../node_modules/src/operators/windowWhen.ts","../../../../node_modules/src/operators/withLatestFrom.ts","../../../../node_modules/src/operators/zip.ts","../../../../node_modules/src/operators.ts","~/@ux-aspects/ux-aspects/components/card-tabs/card-tabs.service.ts","~/@ux-aspects/ux-aspects/components/card-tabs/card-tab/card-tab.component.ts","~/@ux-aspects/ux-aspects/components/card-tabs/card-tabset/card-tabset.component.ts","~/@ux-aspects/ux-aspects/components/card-tabs/card-tabs.module.ts","~/@ux-aspects/ux-aspects/components/checkbox/checkbox.component.ts","~/@ux-aspects/ux-aspects/components/checkbox/checkbox.module.ts","~/@ux-aspects/ux-aspects/components/column-sorting/column-sorting.component.ts","~/@ux-aspects/ux-aspects/components/column-sorting/column-sorting.directive.ts","~/@ux-aspects/ux-aspects/components/column-sorting/column-sorting.module.ts","~/@ux-aspects/ux-aspects/components/dashboard/dashboard.service.ts","~/@ux-aspects/ux-aspects/components/dashboard/dashboard.component.ts","~/@ux-aspects/ux-aspects/components/dashboard/widget/dashboard-widget.component.ts","~/@ux-aspects/ux-aspects/directives/drag/drag.directive.ts","~/@ux-aspects/ux-aspects/components/dashboard/drag-handle/drag-handle.directive.ts","~/@ux-aspects/ux-aspects/directives/drag/drag.module.ts","~/@ux-aspects/ux-aspects/components/dashboard/dashboard.module.ts","~/@ux-aspects/ux-aspects/components/spin-button/spin-button.component.ts","~/@ux-aspects/ux-aspects/components/spin-button/spin-button.module.ts","~/@ux-aspects/ux-aspects/components/time-picker/time-format.pipe.ts","~/@ux-aspects/ux-aspects/components/time-picker/time-picker.component.ts","~/@ux-aspects/ux-aspects/components/time-picker/time-picker.module.ts","~/@ux-aspects/ux-aspects/components/date-time-picker/date-time-picker.utils.ts","~/@ux-aspects/ux-aspects/components/date-time-picker/date-time-picker.config.ts","~/@ux-aspects/ux-aspects/components/date-time-picker/date-time-picker.service.ts","~/@ux-aspects/ux-aspects/components/date-time-picker/date-time-picker.component.ts","~/@ux-aspects/ux-aspects/components/date-time-picker/day-view/day-view.service.ts","~/@ux-aspects/ux-aspects/components/date-time-picker/day-view/day-view.component.ts","~/@ux-aspects/ux-aspects/components/date-time-picker/header/header.component.ts","~/@ux-aspects/ux-aspects/components/date-time-picker/month-view/month-view.service.ts","~/@ux-aspects/ux-aspects/components/date-time-picker/month-view/month-view.component.ts","~/@ux-aspects/ux-aspects/components/date-time-picker/time-view/time-view.component.ts","~/@ux-aspects/ux-aspects/components/date-time-picker/year-view/year-view.service.ts","~/@ux-aspects/ux-aspects/components/date-time-picker/year-view/year-view.component.ts","~/@ux-aspects/ux-aspects/directives/focus-if/focus-if.directive.ts","~/@ux-aspects/ux-aspects/directives/focus-if/focus-if.module.ts","~/@ux-aspects/ux-aspects/components/date-time-picker/date-time-picker.module.ts","~/@ux-aspects/ux-aspects/components/ebox/ebox.component.ts","~/@ux-aspects/ux-aspects/components/ebox/ebox.module.ts","../../../../node_modules/.tmp/tooltip/tooltip.config.ts"],"sourcesContent":["/*tslint:disable */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * JS version of browser APIs. This library can only run in the browser.\n */\nvar win = (typeof window !== 'undefined' && window) || <any>{};\n\nexport { win as window };\nexport var document = win.document;\nexport var location = win.location;\nexport var gc = win['gc'] ? () => win['gc']() : (): any => null;\nexport var performance = win['performance'] ? win['performance'] : null;\nexport const Event = win['Event'];\nexport const MouseEvent = win['MouseEvent'];\nexport const KeyboardEvent = win['KeyboardEvent'];\nexport const EventTarget = win['EventTarget'];\nexport const History = win['History'];\nexport const Location = win['Location'];\nexport const EventListener = win['EventListener'];\n","import { window } from './facade/browser';\n\nlet guessedVersion: 'bs3' | 'bs4';\n\nfunction _guessBsVersion(): 'bs3' | 'bs4' {\n  if (typeof document === 'undefined') {\n    return null;\n  }\n  const spanEl = document.createElement('span');\n  spanEl.innerText = 'test bs version';\n  document.body.appendChild(spanEl);\n  spanEl.classList.add('d-none');\n  const rect = spanEl.getBoundingClientRect();\n  document.body.removeChild(spanEl);\n  if (!rect) {\n    return 'bs3';\n  }\n\n  return rect.top === 0 ? 'bs4' : 'bs3';\n}\n\nexport function setTheme(theme: 'bs3' | 'bs4'): void {\n  guessedVersion = theme;\n}\n\n// todo: in ngx-bootstrap, bs4 will became a default one\nexport function isBs3(): boolean {\n  if (typeof window === 'undefined') {\n    return true;\n  }\n\n  if (typeof window.__theme === 'undefined') {\n    if (guessedVersion) {\n      return guessedVersion === 'bs3';\n    }\n    guessedVersion = _guessBsVersion();\n\n    return guessedVersion === 'bs3';\n  }\n\n  return window.__theme !== 'bs4';\n}\n","import {\n  AfterViewInit,\n  Component,\n  ChangeDetectionStrategy\n} from '@angular/core';\nimport { TooltipConfig } from './tooltip.config';\nimport { isBs3 } from '../utils/theme-provider';\n\n\nexport class TooltipContainerComponent implements AfterViewInit {\n  classMap: any;\n  placement: string;\n  containerClass: string;\n  animation: boolean;\n\n  get isBs3(): boolean {\n    return isBs3();\n  }\n\n  constructor(config: TooltipConfig) {\n    Object.assign(this, config);\n  }\n\n  ngAfterViewInit(): void {\n    this.classMap = { in: false, fade: false };\n    this.classMap[this.placement] = true;\n    this.classMap[`tooltip-${this.placement}`] = true;\n\n    this.classMap.in = true;\n    if (this.animation) {\n      this.classMap.fade = true;\n    }\n\n    if (this.containerClass) {\n      this.classMap[this.containerClass] = true;\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'bs-tooltip-container',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  // tslint:disable-next-line\n  host: {\n    '[class]':\n      '\"tooltip in tooltip-\" + placement + \" \" + \"bs-tooltip-\" + placement + \" \" + placement + \" \" + containerClass',\n    '[class.show]': '!isBs3',\n    role: 'tooltip'\n  },\n  styles: [\n    `\n    :host.tooltip {\n      display: block;\n    }\n    :host.bs-tooltip-top .arrow, :host.bs-tooltip-bottom .arrow {\n      left: 50%;\n      margin-left: -6px;\n    }\n    :host.bs-tooltip-left .arrow, :host.bs-tooltip-right .arrow {\n      top: 50%;\n      margin-top: -6px;\n    }\n  `\n  ],\n  template: `\n    <div class=\"tooltip-arrow arrow\"></div>\n    <div class=\"tooltip-inner\"><ng-content></ng-content></div>\n    `\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: TooltipConfig, },\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @copyright Valor Software\n * @copyright Angular ng-bootstrap team\n */\n\nexport class Trigger {\n  open: string;\n  close?: string;\n\n  constructor(open: string, close?: string) {\n    this.open = open;\n    this.close = close || open;\n  }\n\n  isManual(): boolean {\n    return this.open === 'manual' || this.close === 'manual';\n  }\n}\n","/**\n * @copyright Valor Software\n * @copyright Angular ng-bootstrap team\n */\nimport { Renderer2 } from '@angular/core';\nimport { Trigger } from './trigger.class';\nimport {\n  BsEventCallback, ListenOptions\n} from '../component-loader/listen-options.model';\n\nconst DEFAULT_ALIASES = {\n  hover: ['mouseover', 'mouseout'],\n  focus: ['focusin', 'focusout']\n};\n\nexport function parseTriggers(triggers: string, aliases: any = DEFAULT_ALIASES): Trigger[] {\n  const trimmedTriggers = (triggers || '').trim();\n\n  if (trimmedTriggers.length === 0) {\n    return [];\n  }\n\n  const parsedTriggers = trimmedTriggers\n    .split(/\\s+/)\n    .map((trigger: string) => trigger.split(':'))\n    .map((triggerPair: string[]) => {\n      const alias = aliases[triggerPair[0]] || triggerPair;\n\n      return new Trigger(alias[0], alias[1]);\n    });\n\n  const manualTriggers = parsedTriggers.filter((triggerPair: Trigger) =>\n    triggerPair.isManual()\n  );\n\n  if (manualTriggers.length > 1) {\n    throw new Error('Triggers parse error: only one manual trigger is allowed');\n  }\n\n  if (manualTriggers.length === 1 && parsedTriggers.length > 1) {\n    throw new Error('Triggers parse error: manual trigger can\\'t be mixed with other triggers');\n  }\n\n  return parsedTriggers;\n}\n\nexport function listenToTriggers(renderer: Renderer2,\n                                 target: any,\n                                 triggers: string,\n                                 showFn: BsEventCallback,\n                                 hideFn: BsEventCallback,\n                                 toggleFn: BsEventCallback): Function {\n  const parsedTriggers = parseTriggers(triggers);\n  const listeners: any[] = [];\n\n  if (parsedTriggers.length === 1 && parsedTriggers[0].isManual()) {\n    return Function.prototype;\n  }\n\n  parsedTriggers.forEach((trigger: Trigger) => {\n    if (trigger.open === trigger.close) {\n      listeners.push(renderer.listen(target, trigger.open, toggleFn));\n\n      return;\n    }\n\n    listeners.push(\n      renderer.listen(target, trigger.open, showFn),\n      renderer.listen(target, trigger.close, hideFn)\n    );\n  });\n\n  return () => {\n    listeners.forEach((unsubscribeFn: Function) => unsubscribeFn());\n  };\n}\n\nexport function listenToTriggersV2(renderer: Renderer2,\n                                   options: ListenOptions): Function {\n  const parsedTriggers = parseTriggers(options.triggers);\n  const target = options.target;\n  // do nothing\n  if (parsedTriggers.length === 1 && parsedTriggers[0].isManual()) {\n    return Function.prototype;\n  }\n\n  // all listeners\n  const listeners: any[] = [];\n\n  // lazy listeners registration\n  const _registerHide: Function[] = [];\n  const registerHide = () => {\n    // add hide listeners to unregister array\n    _registerHide.forEach((fn: Function) => listeners.push(fn()));\n    // register hide events only once\n    _registerHide.length = 0;\n  };\n\n  // register open\\close\\toggle listeners\n  parsedTriggers.forEach((trigger: Trigger) => {\n    const useToggle = trigger.open === trigger.close;\n    const showFn = useToggle ? options.toggle : options.show;\n\n    if (!useToggle) {\n      _registerHide.push(() =>\n        renderer.listen(target, trigger.close, options.hide)\n      );\n    }\n\n    listeners.push(\n      renderer.listen(target, trigger.open, () => showFn(registerHide))\n    );\n  });\n\n  return () => {\n    listeners.forEach((unsubscribeFn: Function) => unsubscribeFn());\n  };\n}\n\nexport function registerOutsideClick(renderer: Renderer2,\n                                     options: ListenOptions) {\n  if (!options.outsideClick) {\n    return Function.prototype;\n  }\n\n  return renderer.listen('document', 'click', (event: any) => {\n    if (options.target && options.target.contains(event.target)) {\n      return;\n    }\n    if (\n      options.targets &&\n      options.targets.some(target => target.contains(event.target))\n    ) {\n      return;\n    }\n\n    options.hide();\n  });\n}\n","/**\n * @copyright Valor Software\n * @copyright Angular ng-bootstrap team\n */\n\nimport { ComponentRef, ViewRef } from '@angular/core';\n\nexport class ContentRef {\n  nodes: any[];\n  viewRef?: ViewRef;\n  componentRef?: ComponentRef<any>;\n\n  constructor(\n    nodes: any[],\n    viewRef?: ViewRef,\n    componentRef?: ComponentRef<any>\n  ) {\n    this.nodes = nodes;\n    this.viewRef = viewRef;\n    this.componentRef = componentRef;\n  }\n}\n","// tslint:disable:max-file-line-count\n// todo: add delay support\n// todo: merge events onShow, onShown, etc...\n// todo: add global positioning configuration?\nimport {\n  ApplicationRef,\n  ComponentFactory,\n  ComponentFactoryResolver,\n  ComponentRef,\n  ElementRef,\n  EmbeddedViewRef,\n  EventEmitter,\n  Injector,\n  NgZone,\n  Provider,\n  ReflectiveInjector,\n  Renderer2,\n  TemplateRef,\n  Type,\n  ViewContainerRef\n} from '@angular/core';\nimport { PositioningOptions, PositioningService } from '../positioning/index';\nimport { listenToTriggersV2, registerOutsideClick } from '../utils/triggers';\nimport { ContentRef } from './content-ref.class';\nimport { ListenOptions } from './listen-options.model';\n\nexport class ComponentLoader<T> {\n  onBeforeShow: EventEmitter<any> = new EventEmitter();\n  onShown: EventEmitter<any> = new EventEmitter();\n  onBeforeHide: EventEmitter<any> = new EventEmitter();\n  onHidden: EventEmitter<any> = new EventEmitter();\n\n  instance: T;\n  _componentRef: ComponentRef<T>;\n  _inlineViewRef: EmbeddedViewRef<T>;\n\n  private _providers: Provider[] = [];\n  private _componentFactory: ComponentFactory<T>;\n  private _zoneSubscription: any;\n  private _contentRef: ContentRef;\n  private _innerComponent: ComponentRef<T>;\n\n  private _unregisterListenersFn: Function;\n\n  get isShown(): boolean {\n    if (this._isHiding) {\n      return false;\n    }\n\n    return !!this._componentRef;\n  }\n\n  private _isHiding = false;\n\n  /**\n   * Placement of a component. Accepts: \"top\", \"bottom\", \"left\", \"right\"\n   */\n  private attachment: string;\n\n  /**\n   * A selector specifying the element the popover should be appended to.\n   * Currently only supports \"body\".\n   */\n  private container: string | ElementRef | any;\n\n  /**\n   * Specifies events that should trigger. Supports a space separated list of\n   * event names.\n   */\n  private triggers: string;\n\n  private _listenOpts: ListenOptions = {};\n  private _globalListener = Function.prototype;\n\n  /**\n   * Do not use this directly, it should be instanced via\n   * `ComponentLoadFactory.attach`\n   * @internal\n   */\n  // tslint:disable-next-line\n  public constructor(\n    private _viewContainerRef: ViewContainerRef,\n    private _renderer: Renderer2,\n    private _elementRef: ElementRef,\n    private _injector: Injector,\n    private _componentFactoryResolver: ComponentFactoryResolver,\n    private _ngZone: NgZone,\n    private _applicationRef: ApplicationRef,\n    private _posService: PositioningService\n  ) {}\n\n  attach(compType: Type<T>): ComponentLoader<T> {\n    this._componentFactory = this._componentFactoryResolver\n      .resolveComponentFactory<T>(compType);\n\n    return this;\n  }\n\n  // todo: add behaviour: to target element, `body`, custom element\n  to(container?: string): ComponentLoader<T> {\n    this.container = container || this.container;\n\n    return this;\n  }\n\n  position(opts?: PositioningOptions): ComponentLoader<T> {\n    this.attachment = opts.attachment || this.attachment;\n    this._elementRef = (opts.target as ElementRef) || this._elementRef;\n\n    return this;\n  }\n\n  provide(provider: Provider): ComponentLoader<T> {\n    this._providers.push(provider);\n\n    return this;\n  }\n\n  // todo: appendChild to element or document.querySelector(this.container)\n\n  show(opts: {\n    content?: string | TemplateRef<any>;\n    context?: any;\n    initialState?: any; [key: string]: any;\n  } = {}\n  ): ComponentRef<T> {\n\n    this._subscribePositioning();\n    this._innerComponent = null;\n\n    if (!this._componentRef) {\n      this.onBeforeShow.emit();\n      this._contentRef = this._getContentRef(opts.content, opts.context, opts.initialState);\n      const injector = ReflectiveInjector.resolveAndCreate(this._providers, this._injector);\n\n      this._componentRef = this._componentFactory.create(injector, this._contentRef.nodes);\n      this._applicationRef.attachView(this._componentRef.hostView);\n      // this._componentRef = this._viewContainerRef\n      //   .createComponent(this._componentFactory, 0, injector, this._contentRef.nodes);\n      this.instance = this._componentRef.instance;\n\n      Object.assign(this._componentRef.instance, opts);\n\n      if (this.container instanceof ElementRef) {\n        this.container.nativeElement.appendChild(\n          this._componentRef.location.nativeElement\n        );\n      }\n\n      if (this.container === 'body' && typeof document !== 'undefined') {\n        document\n          .querySelector(this.container as string)\n          .appendChild(this._componentRef.location.nativeElement);\n      }\n\n      if (\n        !this.container &&\n        this._elementRef &&\n        this._elementRef.nativeElement.parentElement\n      ) {\n        this._elementRef.nativeElement.parentElement.appendChild(\n          this._componentRef.location.nativeElement\n        );\n      }\n\n      // we need to manually invoke change detection since events registered\n      // via\n      // Renderer::listen() are not picked up by change detection with the\n      // OnPush strategy\n      if (this._contentRef.componentRef) {\n        this._innerComponent = this._contentRef.componentRef.instance;\n        this._contentRef.componentRef.changeDetectorRef.markForCheck();\n        this._contentRef.componentRef.changeDetectorRef.detectChanges();\n      }\n      this._componentRef.changeDetectorRef.markForCheck();\n      this._componentRef.changeDetectorRef.detectChanges();\n      this.onShown.emit(this._componentRef.instance);\n    }\n\n    this._registerOutsideClick();\n\n    return this._componentRef;\n  }\n\n  hide(): ComponentLoader<T> {\n    if (!this._componentRef) {\n      return this;\n    }\n\n    this.onBeforeHide.emit(this._componentRef.instance);\n\n    const componentEl = this._componentRef.location.nativeElement;\n    componentEl.parentNode.removeChild(componentEl);\n    if (this._contentRef.componentRef) {\n      this._contentRef.componentRef.destroy();\n    }\n    this._componentRef.destroy();\n    if (this._viewContainerRef && this._contentRef.viewRef) {\n      this._viewContainerRef.remove(\n        this._viewContainerRef.indexOf(this._contentRef.viewRef)\n      );\n    }\n    if (this._contentRef.viewRef) {\n      this._contentRef.viewRef.destroy();\n    }\n    // this._viewContainerRef.remove(this._viewContainerRef.indexOf(this._componentRef.hostView));\n    //\n    // if (this._contentRef.viewRef && this._viewContainerRef.indexOf(this._contentRef.viewRef) !== -1) {\n    //   this._viewContainerRef.remove(this._viewContainerRef.indexOf(this._contentRef.viewRef));\n    // }\n\n    this._contentRef = null;\n    this._componentRef = null;\n    this._removeGlobalListener();\n\n    this.onHidden.emit();\n\n    return this;\n  }\n\n  toggle(): void {\n    if (this.isShown) {\n      this.hide();\n\n      return;\n    }\n\n    this.show();\n  }\n\n  dispose(): void {\n    if (this.isShown) {\n      this.hide();\n    }\n\n    this._unsubscribePositioning();\n\n    if (this._unregisterListenersFn) {\n      this._unregisterListenersFn();\n    }\n  }\n\n  listen(listenOpts: ListenOptions): ComponentLoader<T> {\n    this.triggers = listenOpts.triggers || this.triggers;\n    this._listenOpts.outsideClick = listenOpts.outsideClick;\n    listenOpts.target = listenOpts.target || this._elementRef.nativeElement;\n\n    const hide = (this._listenOpts.hide = () =>\n      listenOpts.hide ? listenOpts.hide() : void this.hide());\n    const show = (this._listenOpts.show = (registerHide: Function) => {\n      listenOpts.show ? listenOpts.show(registerHide) : this.show(registerHide);\n      registerHide();\n    });\n\n    const toggle = (registerHide: Function) => {\n      this.isShown ? hide() : show(registerHide);\n    };\n\n    this._unregisterListenersFn = listenToTriggersV2(this._renderer, {\n      target: listenOpts.target,\n      triggers: listenOpts.triggers,\n      show,\n      hide,\n      toggle\n    });\n\n    return this;\n  }\n\n  _removeGlobalListener() {\n    if (this._globalListener) {\n      this._globalListener();\n      this._globalListener = null;\n    }\n  }\n\n  attachInline(\n    vRef: ViewContainerRef,\n    template: TemplateRef<any>\n  ): ComponentLoader<T> {\n    this._inlineViewRef = vRef.createEmbeddedView(template);\n\n    return this;\n  }\n\n  _registerOutsideClick(): void {\n    if (!this._componentRef || !this._componentRef.location) {\n      return;\n    }\n    // why: should run after first event bubble\n    if (this._listenOpts.outsideClick) {\n      const target = this._componentRef.location.nativeElement;\n      setTimeout(() => {\n        this._globalListener = registerOutsideClick(this._renderer, {\n          targets: [target, this._elementRef.nativeElement],\n          outsideClick: this._listenOpts.outsideClick,\n          hide: () => this._listenOpts.hide()\n        });\n      });\n    }\n  }\n\n  getInnerComponent(): ComponentRef<T> {\n    return this._innerComponent;\n  }\n\n  private _subscribePositioning(): void {\n    if (this._zoneSubscription || !this.attachment) {\n      return;\n    }\n\n    this._zoneSubscription = this._ngZone.onStable.subscribe(() => {\n      if (!this._componentRef) {\n        return;\n      }\n      this._posService.position({\n        element: this._componentRef.location,\n        target: this._elementRef,\n        attachment: this.attachment,\n        appendToBody: this.container === 'body'\n      });\n    });\n  }\n\n  private _unsubscribePositioning(): void {\n    if (!this._zoneSubscription) {\n      return;\n    }\n    this._zoneSubscription.unsubscribe();\n    this._zoneSubscription = null;\n  }\n\n  private _getContentRef(\n    content: string | TemplateRef<any> | any,\n    context?: any,\n    initialState?: any\n  ): ContentRef {\n    if (!content) {\n      return new ContentRef([]);\n    }\n\n    if (content instanceof TemplateRef) {\n      if (this._viewContainerRef) {\n        const _viewRef = this._viewContainerRef\n          .createEmbeddedView<TemplateRef<T>>(content, context);\n        _viewRef.markForCheck();\n\n        return new ContentRef([_viewRef.rootNodes], _viewRef);\n      }\n      const viewRef = content.createEmbeddedView({});\n      this._applicationRef.attachView(viewRef);\n\n      return new ContentRef([viewRef.rootNodes], viewRef);\n    }\n\n    if (typeof content === 'function') {\n      const contentCmptFactory = this._componentFactoryResolver.resolveComponentFactory(\n        content\n      );\n      const modalContentInjector = ReflectiveInjector.resolveAndCreate(\n        [...this._providers],\n        this._injector\n      );\n      const componentRef = contentCmptFactory.create(modalContentInjector);\n      Object.assign(componentRef.instance, initialState);\n      this._applicationRef.attachView(componentRef.hostView);\n\n      return new ContentRef(\n        [[componentRef.location.nativeElement]],\n        componentRef.hostView,\n        componentRef\n      );\n    }\n\n    return new ContentRef([[this._renderer.createText(`${content}`)]]);\n  }\n}\n","/**\n * @copyright Valor Software\n * @copyright Angular ng-bootstrap team\n */\n\n// previous version:\n// https://github.com/angular-ui/bootstrap/blob/07c31d0731f7cb068a1932b8e01d2312b796b4ec/src/position/position.js\n// tslint:disable\nexport class Positioning {\n  public position(element: HTMLElement, round = true): ClientRect {\n    let elPosition: ClientRect;\n    let parentOffset: ClientRect = {\n      width: 0,\n      height: 0,\n      top: 0,\n      bottom: 0,\n      left: 0,\n      right: 0\n    };\n\n    if (this.getStyle(element, 'position') === 'fixed') {\n      const bcRect = element.getBoundingClientRect();\n      elPosition = {\n        width: bcRect.width,\n        height: bcRect.height,\n        top: bcRect.top,\n        bottom: bcRect.bottom,\n        left: bcRect.left,\n        right: bcRect.right\n      };\n    } else {\n      const offsetParentEl = this.offsetParent(element);\n\n      elPosition = this.offset(element, false);\n\n      if (offsetParentEl !== document.documentElement) {\n        parentOffset = this.offset(offsetParentEl, false);\n      }\n\n      parentOffset.top += offsetParentEl.clientTop;\n      parentOffset.left += offsetParentEl.clientLeft;\n    }\n\n    elPosition.top -= parentOffset.top;\n    elPosition.bottom -= parentOffset.top;\n    elPosition.left -= parentOffset.left;\n    elPosition.right -= parentOffset.left;\n\n    if (round) {\n      elPosition.top = Math.round(elPosition.top);\n      elPosition.bottom = Math.round(elPosition.bottom);\n      elPosition.left = Math.round(elPosition.left);\n      elPosition.right = Math.round(elPosition.right);\n    }\n\n    return elPosition;\n  }\n\n  public offset(element: HTMLElement, round = true): ClientRect {\n    const elBcr = element.getBoundingClientRect();\n    const viewportOffset = {\n      top: window.pageYOffset - document.documentElement.clientTop,\n      left: window.pageXOffset - document.documentElement.clientLeft\n    };\n\n    let elOffset = {\n      height: elBcr.height || element.offsetHeight,\n      width: elBcr.width || element.offsetWidth,\n      top: elBcr.top + viewportOffset.top,\n      bottom: elBcr.bottom + viewportOffset.top,\n      left: elBcr.left + viewportOffset.left,\n      right: elBcr.right + viewportOffset.left\n    };\n\n    if (round) {\n      elOffset.height = Math.round(elOffset.height);\n      elOffset.width = Math.round(elOffset.width);\n      elOffset.top = Math.round(elOffset.top);\n      elOffset.bottom = Math.round(elOffset.bottom);\n      elOffset.left = Math.round(elOffset.left);\n      elOffset.right = Math.round(elOffset.right);\n    }\n\n    return elOffset;\n  }\n\n  public positionElements(\n    hostElement: HTMLElement,\n    targetElement: HTMLElement,\n    placement: string,\n    appendToBody?: boolean\n  ): ClientRect {\n    const hostElPosition = appendToBody\n      ? this.offset(hostElement, false)\n      : this.position(hostElement, false);\n    const targetElStyles = this.getAllStyles(targetElement);\n    const shiftWidth: any = {\n      left: hostElPosition.left,\n      center:\n        hostElPosition.left +\n        hostElPosition.width / 2 -\n        targetElement.offsetWidth / 2,\n      right: hostElPosition.left + hostElPosition.width\n    };\n    const shiftHeight: any = {\n      top: hostElPosition.top,\n      center:\n        hostElPosition.top +\n        hostElPosition.height / 2 -\n        targetElement.offsetHeight / 2,\n      bottom: hostElPosition.top + hostElPosition.height\n    };\n    const targetElBCR = targetElement.getBoundingClientRect();\n    let placementPrimary = placement.split(' ')[0] || 'top';\n    const placementSecondary = placement.split(' ')[1] || 'center';\n\n    let targetElPosition: ClientRect = {\n      height: targetElBCR.height || targetElement.offsetHeight,\n      width: targetElBCR.width || targetElement.offsetWidth,\n      top: 0,\n      bottom: targetElBCR.height || targetElement.offsetHeight,\n      left: 0,\n      right: targetElBCR.width || targetElement.offsetWidth\n    };\n\n    if (placementPrimary === 'auto') {\n      let newPlacementPrimary = this.autoPosition(\n        targetElPosition,\n        hostElPosition,\n        targetElement,\n        placementSecondary\n      );\n      if (!newPlacementPrimary)\n        newPlacementPrimary = this.autoPosition(\n          targetElPosition,\n          hostElPosition,\n          targetElement\n        );\n      if (newPlacementPrimary) placementPrimary = newPlacementPrimary;\n      targetElement.classList.add(placementPrimary);\n    }\n\n    switch (placementPrimary) {\n      case 'top':\n        targetElPosition.top =\n          hostElPosition.top -\n          (targetElement.offsetHeight +\n            parseFloat(targetElStyles.marginBottom));\n        targetElPosition.bottom +=\n          hostElPosition.top - targetElement.offsetHeight;\n        targetElPosition.left = shiftWidth[placementSecondary];\n        targetElPosition.right += shiftWidth[placementSecondary];\n        break;\n      case 'bottom':\n        targetElPosition.top = shiftHeight[placementPrimary];\n        targetElPosition.bottom += shiftHeight[placementPrimary];\n        targetElPosition.left = shiftWidth[placementSecondary];\n        targetElPosition.right += shiftWidth[placementSecondary];\n        break;\n      case 'left':\n        targetElPosition.top = shiftHeight[placementSecondary];\n        targetElPosition.bottom += shiftHeight[placementSecondary];\n        targetElPosition.left =\n          hostElPosition.left -\n          (targetElement.offsetWidth + parseFloat(targetElStyles.marginRight));\n        targetElPosition.right +=\n          hostElPosition.left - targetElement.offsetWidth;\n        break;\n      case 'right':\n        targetElPosition.top = shiftHeight[placementSecondary];\n        targetElPosition.bottom += shiftHeight[placementSecondary];\n        targetElPosition.left = shiftWidth[placementPrimary];\n        targetElPosition.right += shiftWidth[placementPrimary];\n        break;\n    }\n\n    targetElPosition.top = Math.round(targetElPosition.top);\n    targetElPosition.bottom = Math.round(targetElPosition.bottom);\n    targetElPosition.left = Math.round(targetElPosition.left);\n    targetElPosition.right = Math.round(targetElPosition.right);\n\n    return targetElPosition;\n  }\n\n  private autoPosition(\n    targetElPosition: ClientRect,\n    hostElPosition: ClientRect,\n    targetElement: HTMLElement,\n    preferredPosition?: string\n  ) {\n    if (\n      (!preferredPosition || preferredPosition === 'right') &&\n      targetElPosition.left + hostElPosition.left - targetElement.offsetWidth <\n        0\n    ) {\n      return 'right';\n    } else if (\n      (!preferredPosition || preferredPosition === 'top') &&\n      targetElPosition.bottom +\n        hostElPosition.bottom +\n        targetElement.offsetHeight >\n        window.innerHeight\n    ) {\n      return 'top';\n    } else if (\n      (!preferredPosition || preferredPosition === 'bottom') &&\n      targetElPosition.top + hostElPosition.top - targetElement.offsetHeight < 0\n    ) {\n      return 'bottom';\n    } else if (\n      (!preferredPosition || preferredPosition === 'left') &&\n      targetElPosition.right +\n        hostElPosition.right +\n        targetElement.offsetWidth >\n        window.innerWidth\n    ) {\n      return 'left';\n    }\n    return null;\n  }\n\n  private getAllStyles(element: HTMLElement) {\n    return window.getComputedStyle(element);\n  }\n\n  private getStyle(element: HTMLElement, prop: string): string {\n    return (this.getAllStyles(element) as any)[prop];\n  }\n\n  private isStaticPositioned(element: HTMLElement): boolean {\n    return (this.getStyle(element, 'position') || 'static') === 'static';\n  }\n\n  private offsetParent(element: HTMLElement): HTMLElement {\n    let offsetParentEl =\n      <HTMLElement>element.offsetParent || document.documentElement;\n\n    while (\n      offsetParentEl &&\n      offsetParentEl !== document.documentElement &&\n      this.isStaticPositioned(offsetParentEl)\n    ) {\n      offsetParentEl = <HTMLElement>offsetParentEl.offsetParent;\n    }\n\n    return offsetParentEl || document.documentElement;\n  }\n}\n\nconst positionService = new Positioning();\n\nexport function positionElements(\n  hostElement: HTMLElement,\n  targetElement: HTMLElement,\n  placement: string,\n  appendToBody?: boolean\n): void {\n  const pos = positionService.positionElements(\n    hostElement,\n    targetElement,\n    placement,\n    appendToBody\n  );\n\n  targetElement.style.top = `${pos.top}px`;\n  targetElement.style.left = `${pos.left}px`;\n}\n","import { Injectable, ElementRef } from '@angular/core';\nimport { positionElements } from './ng-positioning';\n\nexport interface PositioningOptions {\n  /** The DOM element, ElementRef, or a selector string of an element which will be moved */\n  element?: HTMLElement | ElementRef | string;\n\n  /** The DOM element, ElementRef, or a selector string of an element which the element will be attached to  */\n  target?: HTMLElement | ElementRef | string;\n\n  /**\n   * A string of the form 'vert-attachment horiz-attachment' or 'placement'\n   * - placement can be \"top\", \"bottom\", \"left\", \"right\"\n   * not yet supported:\n   * - vert-attachment can be any of 'top', 'middle', 'bottom'\n   * - horiz-attachment can be any of 'left', 'center', 'right'\n   */\n  attachment?: string;\n\n  /** A string similar to `attachment`. The one difference is that, if it's not provided,\n   * `targetAttachment` will assume the mirror image of `attachment`.\n   */\n  targetAttachment?: string;\n\n  /** A string of the form 'vert-offset horiz-offset'\n   * - vert-offset and horiz-offset can be of the form \"20px\" or \"55%\"\n   */\n  offset?: string;\n\n  /** A string similar to `offset`, but referring to the offset of the target */\n  targetOffset?: string;\n\n  /** If true component will be attached to body */\n  appendToBody?: boolean;\n}\n\n\nexport class PositioningService {\n  position(options: PositioningOptions): void {\n    const {element, target, attachment, appendToBody} = options;\n    positionElements(\n      _getHtmlElement(target),\n      _getHtmlElement(element),\n      attachment,\n      appendToBody\n    );\n  }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction _getHtmlElement(element: HTMLElement | ElementRef | string): HTMLElement {\n  // it means that we got a selector\n  if (typeof element === 'string') {\n    return document.querySelector(element) as HTMLElement;\n  }\n\n  if (element instanceof ElementRef) {\n    return element.nativeElement;\n  }\n\n  return element as HTMLElement;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {\n  ApplicationRef, ComponentFactoryResolver, ElementRef, Injectable, Injector,\n  NgZone, Renderer2, ViewContainerRef\n} from '@angular/core';\nimport { ComponentLoader } from './component-loader.class';\nimport { PositioningService } from '../positioning/index';\n\n\nexport class ComponentLoaderFactory {\n  constructor(private _componentFactoryResolver: ComponentFactoryResolver,\n              private _ngZone: NgZone,\n              private _injector: Injector,\n              private _posService: PositioningService,\n              private _applicationRef: ApplicationRef) {}\n\n  /**\n   *\n   * @param _elementRef\n   * @param _viewContainerRef\n   * @param _renderer\n   * @returns {ComponentLoader}\n   */\n  createLoader<T>(_elementRef: ElementRef,\n                  _viewContainerRef: ViewContainerRef,\n                  _renderer: Renderer2): ComponentLoader<T> {\n    return new ComponentLoader<T>(\n      _viewContainerRef,\n      _renderer,\n      _elementRef,\n      this._injector,\n      this._componentFactoryResolver,\n      this._ngZone,\n      this._applicationRef,\n      this._posService\n    );\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ComponentFactoryResolver, },\n{type: NgZone, },\n{type: Injector, },\n{type: PositioningService, },\n{type: ApplicationRef, },\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { isDevMode } from '@angular/core';\nconst _messagesHash: { [key: string]: boolean } = {};\nconst _hideMsg = typeof console === 'undefined' || !('warn' in console);\n\nexport function warnOnce(msg: string): void {\n  if (!isDevMode() || _hideMsg || msg in _messagesHash) {\n    return;\n  }\n\n  _messagesHash[msg] = true;\n  /*tslint:disable-next-line*/\n  console.warn(msg);\n}\n","// tslint:disable:deprecation\nimport {\n  Directive, ElementRef, EventEmitter, Input, OnDestroy, OnInit, Output,\n  Renderer2, TemplateRef, ViewContainerRef\n} from '@angular/core';\nimport { TooltipContainerComponent } from './tooltip-container.component';\nimport { TooltipConfig } from './tooltip.config';\nimport { ComponentLoader, ComponentLoaderFactory } from '../component-loader/index';\nimport { OnChange } from '../utils/decorators';\nimport { warnOnce } from '../utils/warn-once';\nimport { parseTriggers } from '../utils/triggers';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/observable/timer';\n\n\nexport class TooltipDirective implements OnInit, OnDestroy {\n  /**\n   * Content to be displayed as tooltip.\n   */\n  @OnChange()\n  \n  tooltip: string | TemplateRef<any>;\n  /** Fired when tooltip content changes */\n  \n  tooltipChange: EventEmitter<string | TemplateRef<any>> = new EventEmitter();\n\n  /**\n   * Placement of a tooltip. Accepts: \"top\", \"bottom\", \"left\", \"right\"\n   */\n   placement: string;\n  /**\n   * Specifies events that should trigger. Supports a space separated list of\n   * event names.\n   */\n   triggers: string;\n  /**\n   * A selector specifying the element the tooltip should be appended to.\n   * Currently only supports \"body\".\n   */\n   container: string;\n\n  /**\n   * Returns whether or not the tooltip is currently being shown\n   */\n  \n  get isOpen(): boolean {\n    return this._tooltip.isShown;\n  }\n\n  set isOpen(value: boolean) {\n    if (value) {\n      this.show();\n    } else {\n      this.hide();\n    }\n  }\n\n  /**\n   * Allows to disable tooltip\n   */\n   isDisabled: boolean;\n\n  /**\n   * Css class for tooltip container\n   */\n   containerClass = '';\n  /**\n   * Delay before showing the tooltip\n   */\n   delay: number;\n\n  /**\n   * Emits an event when the tooltip is shown\n   */\n   onShown: EventEmitter<any>;\n  /**\n   * Emits an event when the tooltip is hidden\n   */\n   onHidden: EventEmitter<any>;\n\n  /** @deprecated - please use `tooltip` instead */\n  \n  set htmlContent(value: string | TemplateRef<any>) {\n    warnOnce('tooltipHtml was deprecated, please use `tooltip` instead');\n    this.tooltip = value;\n  }\n\n  /** @deprecated - please use `placement` instead */\n  \n  set _placement(value: string) {\n    warnOnce('tooltipPlacement was deprecated, please use `placement` instead');\n    this.placement = value;\n  }\n\n  /** @deprecated - please use `isOpen` instead*/\n  \n  set _isOpen(value: boolean) {\n    warnOnce('tooltipIsOpen was deprecated, please use `isOpen` instead');\n    this.isOpen = value;\n  }\n\n  get _isOpen(): boolean {\n    warnOnce('tooltipIsOpen was deprecated, please use `isOpen` instead');\n    return this.isOpen;\n  }\n\n  /** @deprecated - please use `isDisabled` instead */\n  \n  set _enable(value: boolean) {\n    warnOnce('tooltipEnable was deprecated, please use `isDisabled` instead');\n    this.isDisabled = value;\n  }\n\n  get _enable(): boolean {\n    warnOnce('tooltipEnable was deprecated, please use `isDisabled` instead');\n    return this.isDisabled;\n  }\n\n  /** @deprecated - please use `container=\"body\"` instead */\n  \n  set _appendToBody(value: boolean) {\n    warnOnce(\n      'tooltipAppendToBody was deprecated, please use `container=\"body\"` instead'\n    );\n    this.container = value ? 'body' : this.container;\n  }\n\n  get _appendToBody(): boolean {\n    warnOnce(\n      'tooltipAppendToBody was deprecated, please use `container=\"body\"` instead'\n    );\n    return this.container === 'body';\n  }\n\n  /** @deprecated - removed, will be added to configuration */\n   _animation = true;\n\n  /** @deprecated - will replaced with customClass */\n  \n  set _popupClass(value: string) {\n    warnOnce('tooltipClass deprecated');\n  }\n\n  /** @deprecated - removed */\n  \n  set _tooltipContext(value: any) {\n    warnOnce('tooltipContext deprecated');\n  }\n\n  /** @deprecated */\n  \n  set _tooltipPopupDelay(value: number) {\n    warnOnce('tooltipPopupDelay is deprecated, use `delay` instead');\n    this.delay = value;\n  }\n\n  /** @deprecated */\n   _fadeDuration = 150;\n\n  /** @deprecated -  please use `triggers` instead */\n  \n  get _tooltipTrigger(): string | string[] {\n    warnOnce('tooltipTrigger was deprecated, please use `triggers` instead');\n    return this.triggers;\n  }\n\n  set _tooltipTrigger(value: string | string[]) {\n    warnOnce('tooltipTrigger was deprecated, please use `triggers` instead');\n    this.triggers = (value || '').toString();\n  }\n\n  /** @deprecated */\n  \n  tooltipStateChanged: EventEmitter<boolean> = new EventEmitter<boolean>();\n  protected _delayTimeoutId: number | any;\n  protected _tooltipCancelShowFn: Function;\n\n  private _tooltip: ComponentLoader<TooltipContainerComponent>;\n\n  constructor(_viewContainerRef: ViewContainerRef,\n                     private _renderer: Renderer2,\n                     private _elementRef: ElementRef,\n                     cis: ComponentLoaderFactory,\n                     config: TooltipConfig) {\n    this._tooltip = cis\n      .createLoader<TooltipContainerComponent>(\n        this._elementRef,\n        _viewContainerRef,\n        this._renderer\n      )\n      .provide({provide: TooltipConfig, useValue: config});\n\n    Object.assign(this, config);\n    this.onShown = this._tooltip.onShown;\n    this.onHidden = this._tooltip.onHidden;\n  }\n\n  ngOnInit(): void {\n    this._tooltip.listen({\n      triggers: this.triggers,\n      show: () => this.show()\n    });\n    this.tooltipChange.subscribe((value: any) => {\n      if (!value) {\n        this._tooltip.hide();\n      }\n    });\n  }\n\n  /**\n   * Toggles an element’s tooltip. This is considered a “manual” triggering of\n   * the tooltip.\n   */\n  toggle(): void {\n    if (this.isOpen) {\n      return this.hide();\n    }\n\n    this.show();\n  }\n\n  /**\n   * Opens an element’s tooltip. This is considered a “manual” triggering of\n   * the tooltip.\n   */\n  show(): void {\n    if (\n      this.isOpen ||\n      this.isDisabled ||\n      this._delayTimeoutId ||\n      !this.tooltip\n    ) {\n      return;\n    }\n\n    const showTooltip = () => {\n      if (this._delayTimeoutId) {\n        this._delayTimeoutId = undefined;\n      }\n\n      this._tooltip\n        .attach(TooltipContainerComponent)\n        .to(this.container)\n        .position({attachment: this.placement})\n        .show({\n          content: this.tooltip,\n          placement: this.placement,\n          containerClass: this.containerClass\n        });\n    };\n    const cancelDelayedTooltipShowing = () => {\n      if (this._tooltipCancelShowFn) {\n        this._tooltipCancelShowFn();\n      }\n    };\n\n    if (this.delay) {\n      const timer = Observable.timer(this.delay).subscribe(() => {\n        showTooltip();\n        cancelDelayedTooltipShowing();\n      });\n\n      if (this.triggers) {\n        const triggers = parseTriggers(this.triggers);\n        this._tooltipCancelShowFn = this._renderer.listen(this._elementRef.nativeElement, triggers[0].close, () => {\n          timer.unsubscribe();\n          cancelDelayedTooltipShowing();\n        });\n      }\n    } else {\n      showTooltip();\n    }\n  }\n\n  /**\n   * Closes an element’s tooltip. This is considered a “manual” triggering of\n   * the tooltip.\n   */\n  hide(): void {\n    if (this._delayTimeoutId) {\n      clearTimeout(this._delayTimeoutId);\n      this._delayTimeoutId = undefined;\n    }\n\n    if (!this._tooltip.isShown) {\n      return;\n    }\n\n    this._tooltip.instance.classMap.in = false;\n    setTimeout(() => {\n      this._tooltip.hide();\n    }, this._fadeDuration);\n  }\n\n  ngOnDestroy(): void {\n    this._tooltip.dispose();\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[tooltip], [tooltipHtml]',\n  exportAs: 'bs-tooltip'\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ViewContainerRef, },\n{type: Renderer2, },\n{type: ElementRef, },\n{type: ComponentLoaderFactory, },\n{type: TooltipConfig, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'tooltip': [{ type: Input },],\n'tooltipChange': [{ type: Output },],\n'placement': [{ type: Input },],\n'triggers': [{ type: Input },],\n'container': [{ type: Input },],\n'isOpen': [{ type: Input },],\n'isDisabled': [{ type: Input },],\n'containerClass': [{ type: Input },],\n'delay': [{ type: Input },],\n'onShown': [{ type: Output },],\n'onHidden': [{ type: Output },],\n'htmlContent': [{ type: Input, args: ['tooltipHtml', ] },],\n'_placement': [{ type: Input, args: ['tooltipPlacement', ] },],\n'_isOpen': [{ type: Input, args: ['tooltipIsOpen', ] },],\n'_enable': [{ type: Input, args: ['tooltipEnable', ] },],\n'_appendToBody': [{ type: Input, args: ['tooltipAppendToBody', ] },],\n'_animation': [{ type: Input, args: ['tooltipAnimation', ] },],\n'_popupClass': [{ type: Input, args: ['tooltipClass', ] },],\n'_tooltipContext': [{ type: Input, args: ['tooltipContext', ] },],\n'_tooltipPopupDelay': [{ type: Input, args: ['tooltipPopupDelay', ] },],\n'_fadeDuration': [{ type: Input, args: ['tooltipFadeDuration', ] },],\n'_tooltipTrigger': [{ type: Input, args: ['tooltipTrigger', ] },],\n'tooltipStateChanged': [{ type: Output },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/*tslint:disable:no-invalid-this */\nexport function OnChange(defaultValue?: any): any {\n  const sufix = 'Change';\n\n  return function OnChangeHandler(target: any, propertyKey: string): void {\n    const _key = ` __${propertyKey}Value`;\n    Object.defineProperty(target, propertyKey, {\n      get(): any {\n        return this[_key];\n      },\n      set(value: any): void {\n        const prevValue = this[_key];\n        this[_key] = value;\n        if (prevValue !== value && this[propertyKey + sufix]) {\n          this[propertyKey + sufix].emit(value);\n        }\n      }\n    });\n  };\n}\n/* tslint:enable */\n","import { CommonModule } from '@angular/common';\nimport { NgModule, ModuleWithProviders } from '@angular/core';\nimport { TooltipContainerComponent } from './tooltip-container.component';\nimport { TooltipDirective } from './tooltip.directive';\nimport { TooltipConfig } from './tooltip.config';\nimport { ComponentLoaderFactory } from '../component-loader/index';\nimport { PositioningService } from '../positioning/index';\n\n\nexport class TooltipModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: TooltipModule,\n      providers: [TooltipConfig, ComponentLoaderFactory, PositioningService]\n    };\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  imports: [CommonModule],\n  declarations: [TooltipDirective, TooltipContainerComponent],\n  exports: [TooltipDirective],\n  entryComponents: [TooltipContainerComponent]\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/* tslint:disable */\nexport const latinMap: { [key: string]: string } = {\n    'Á': 'A',\n    'Ă': 'A',\n    'Ắ': 'A',\n    'Ặ': 'A',\n    'Ằ': 'A',\n    'Ẳ': 'A',\n    'Ẵ': 'A',\n    'Ǎ': 'A',\n    'Â': 'A',\n    'Ấ': 'A',\n    'Ậ': 'A',\n    'Ầ': 'A',\n    'Ẩ': 'A',\n    'Ẫ': 'A',\n    'Ä': 'A',\n    'Ǟ': 'A',\n    'Ȧ': 'A',\n    'Ǡ': 'A',\n    'Ạ': 'A',\n    'Ȁ': 'A',\n    'À': 'A',\n    'Ả': 'A',\n    'Ȃ': 'A',\n    'Ā': 'A',\n    'Ą': 'A',\n    'Å': 'A',\n    'Ǻ': 'A',\n    'Ḁ': 'A',\n    'Ⱥ': 'A',\n    'Ã': 'A',\n    'Ꜳ': 'AA',\n    'Æ': 'AE',\n    'Ǽ': 'AE',\n    'Ǣ': 'AE',\n    'Ꜵ': 'AO',\n    'Ꜷ': 'AU',\n    'Ꜹ': 'AV',\n    'Ꜻ': 'AV',\n    'Ꜽ': 'AY',\n    'Ḃ': 'B',\n    'Ḅ': 'B',\n    'Ɓ': 'B',\n    'Ḇ': 'B',\n    'Ƀ': 'B',\n    'Ƃ': 'B',\n    'Ć': 'C',\n    'Č': 'C',\n    'Ç': 'C',\n    'Ḉ': 'C',\n    'Ĉ': 'C',\n    'Ċ': 'C',\n    'Ƈ': 'C',\n    'Ȼ': 'C',\n    'Ď': 'D',\n    'Ḑ': 'D',\n    'Ḓ': 'D',\n    'Ḋ': 'D',\n    'Ḍ': 'D',\n    'Ɗ': 'D',\n    'Ḏ': 'D',\n    'ǲ': 'D',\n    'ǅ': 'D',\n    'Đ': 'D',\n    'Ƌ': 'D',\n    'Ǳ': 'DZ',\n    'Ǆ': 'DZ',\n    'É': 'E',\n    'Ĕ': 'E',\n    'Ě': 'E',\n    'Ȩ': 'E',\n    'Ḝ': 'E',\n    'Ê': 'E',\n    'Ế': 'E',\n    'Ệ': 'E',\n    'Ề': 'E',\n    'Ể': 'E',\n    'Ễ': 'E',\n    'Ḙ': 'E',\n    'Ë': 'E',\n    'Ė': 'E',\n    'Ẹ': 'E',\n    'Ȅ': 'E',\n    'È': 'E',\n    'Ẻ': 'E',\n    'Ȇ': 'E',\n    'Ē': 'E',\n    'Ḗ': 'E',\n    'Ḕ': 'E',\n    'Ę': 'E',\n    'Ɇ': 'E',\n    'Ẽ': 'E',\n    'Ḛ': 'E',\n    'Ꝫ': 'ET',\n    'Ḟ': 'F',\n    'Ƒ': 'F',\n    'Ǵ': 'G',\n    'Ğ': 'G',\n    'Ǧ': 'G',\n    'Ģ': 'G',\n    'Ĝ': 'G',\n    'Ġ': 'G',\n    'Ɠ': 'G',\n    'Ḡ': 'G',\n    'Ǥ': 'G',\n    'Ḫ': 'H',\n    'Ȟ': 'H',\n    'Ḩ': 'H',\n    'Ĥ': 'H',\n    'Ⱨ': 'H',\n    'Ḧ': 'H',\n    'Ḣ': 'H',\n    'Ḥ': 'H',\n    'Ħ': 'H',\n    'Í': 'I',\n    'Ĭ': 'I',\n    'Ǐ': 'I',\n    'Î': 'I',\n    'Ï': 'I',\n    'Ḯ': 'I',\n    'İ': 'I',\n    'Ị': 'I',\n    'Ȉ': 'I',\n    'Ì': 'I',\n    'Ỉ': 'I',\n    'Ȋ': 'I',\n    'Ī': 'I',\n    'Į': 'I',\n    'Ɨ': 'I',\n    'Ĩ': 'I',\n    'Ḭ': 'I',\n    'Ꝺ': 'D',\n    'Ꝼ': 'F',\n    'Ᵹ': 'G',\n    'Ꞃ': 'R',\n    'Ꞅ': 'S',\n    'Ꞇ': 'T',\n    'Ꝭ': 'IS',\n    'Ĵ': 'J',\n    'Ɉ': 'J',\n    'Ḱ': 'K',\n    'Ǩ': 'K',\n    'Ķ': 'K',\n    'Ⱪ': 'K',\n    'Ꝃ': 'K',\n    'Ḳ': 'K',\n    'Ƙ': 'K',\n    'Ḵ': 'K',\n    'Ꝁ': 'K',\n    'Ꝅ': 'K',\n    'Ĺ': 'L',\n    'Ƚ': 'L',\n    'Ľ': 'L',\n    'Ļ': 'L',\n    'Ḽ': 'L',\n    'Ḷ': 'L',\n    'Ḹ': 'L',\n    'Ⱡ': 'L',\n    'Ꝉ': 'L',\n    'Ḻ': 'L',\n    'Ŀ': 'L',\n    'Ɫ': 'L',\n    'ǈ': 'L',\n    'Ł': 'L',\n    'Ǉ': 'LJ',\n    'Ḿ': 'M',\n    'Ṁ': 'M',\n    'Ṃ': 'M',\n    'Ɱ': 'M',\n    'Ń': 'N',\n    'Ň': 'N',\n    'Ņ': 'N',\n    'Ṋ': 'N',\n    'Ṅ': 'N',\n    'Ṇ': 'N',\n    'Ǹ': 'N',\n    'Ɲ': 'N',\n    'Ṉ': 'N',\n    'Ƞ': 'N',\n    'ǋ': 'N',\n    'Ñ': 'N',\n    'Ǌ': 'NJ',\n    'Ó': 'O',\n    'Ŏ': 'O',\n    'Ǒ': 'O',\n    'Ô': 'O',\n    'Ố': 'O',\n    'Ộ': 'O',\n    'Ồ': 'O',\n    'Ổ': 'O',\n    'Ỗ': 'O',\n    'Ö': 'O',\n    'Ȫ': 'O',\n    'Ȯ': 'O',\n    'Ȱ': 'O',\n    'Ọ': 'O',\n    'Ő': 'O',\n    'Ȍ': 'O',\n    'Ò': 'O',\n    'Ỏ': 'O',\n    'Ơ': 'O',\n    'Ớ': 'O',\n    'Ợ': 'O',\n    'Ờ': 'O',\n    'Ở': 'O',\n    'Ỡ': 'O',\n    'Ȏ': 'O',\n    'Ꝋ': 'O',\n    'Ꝍ': 'O',\n    'Ō': 'O',\n    'Ṓ': 'O',\n    'Ṑ': 'O',\n    'Ɵ': 'O',\n    'Ǫ': 'O',\n    'Ǭ': 'O',\n    'Ø': 'O',\n    'Ǿ': 'O',\n    'Õ': 'O',\n    'Ṍ': 'O',\n    'Ṏ': 'O',\n    'Ȭ': 'O',\n    'Ƣ': 'OI',\n    'Ꝏ': 'OO',\n    'Ɛ': 'E',\n    'Ɔ': 'O',\n    'Ȣ': 'OU',\n    'Ṕ': 'P',\n    'Ṗ': 'P',\n    'Ꝓ': 'P',\n    'Ƥ': 'P',\n    'Ꝕ': 'P',\n    'Ᵽ': 'P',\n    'Ꝑ': 'P',\n    'Ꝙ': 'Q',\n    'Ꝗ': 'Q',\n    'Ŕ': 'R',\n    'Ř': 'R',\n    'Ŗ': 'R',\n    'Ṙ': 'R',\n    'Ṛ': 'R',\n    'Ṝ': 'R',\n    'Ȑ': 'R',\n    'Ȓ': 'R',\n    'Ṟ': 'R',\n    'Ɍ': 'R',\n    'Ɽ': 'R',\n    'Ꜿ': 'C',\n    'Ǝ': 'E',\n    'Ś': 'S',\n    'Ṥ': 'S',\n    'Š': 'S',\n    'Ṧ': 'S',\n    'Ş': 'S',\n    'Ŝ': 'S',\n    'Ș': 'S',\n    'Ṡ': 'S',\n    'Ṣ': 'S',\n    'Ṩ': 'S',\n    'Ť': 'T',\n    'Ţ': 'T',\n    'Ṱ': 'T',\n    'Ț': 'T',\n    'Ⱦ': 'T',\n    'Ṫ': 'T',\n    'Ṭ': 'T',\n    'Ƭ': 'T',\n    'Ṯ': 'T',\n    'Ʈ': 'T',\n    'Ŧ': 'T',\n    'Ɐ': 'A',\n    'Ꞁ': 'L',\n    'Ɯ': 'M',\n    'Ʌ': 'V',\n    'Ꜩ': 'TZ',\n    'Ú': 'U',\n    'Ŭ': 'U',\n    'Ǔ': 'U',\n    'Û': 'U',\n    'Ṷ': 'U',\n    'Ü': 'U',\n    'Ǘ': 'U',\n    'Ǚ': 'U',\n    'Ǜ': 'U',\n    'Ǖ': 'U',\n    'Ṳ': 'U',\n    'Ụ': 'U',\n    'Ű': 'U',\n    'Ȕ': 'U',\n    'Ù': 'U',\n    'Ủ': 'U',\n    'Ư': 'U',\n    'Ứ': 'U',\n    'Ự': 'U',\n    'Ừ': 'U',\n    'Ử': 'U',\n    'Ữ': 'U',\n    'Ȗ': 'U',\n    'Ū': 'U',\n    'Ṻ': 'U',\n    'Ų': 'U',\n    'Ů': 'U',\n    'Ũ': 'U',\n    'Ṹ': 'U',\n    'Ṵ': 'U',\n    'Ꝟ': 'V',\n    'Ṿ': 'V',\n    'Ʋ': 'V',\n    'Ṽ': 'V',\n    'Ꝡ': 'VY',\n    'Ẃ': 'W',\n    'Ŵ': 'W',\n    'Ẅ': 'W',\n    'Ẇ': 'W',\n    'Ẉ': 'W',\n    'Ẁ': 'W',\n    'Ⱳ': 'W',\n    'Ẍ': 'X',\n    'Ẋ': 'X',\n    'Ý': 'Y',\n    'Ŷ': 'Y',\n    'Ÿ': 'Y',\n    'Ẏ': 'Y',\n    'Ỵ': 'Y',\n    'Ỳ': 'Y',\n    'Ƴ': 'Y',\n    'Ỷ': 'Y',\n    'Ỿ': 'Y',\n    'Ȳ': 'Y',\n    'Ɏ': 'Y',\n    'Ỹ': 'Y',\n    'Ź': 'Z',\n    'Ž': 'Z',\n    'Ẑ': 'Z',\n    'Ⱬ': 'Z',\n    'Ż': 'Z',\n    'Ẓ': 'Z',\n    'Ȥ': 'Z',\n    'Ẕ': 'Z',\n    'Ƶ': 'Z',\n    'Ĳ': 'IJ',\n    'Œ': 'OE',\n    'ᴀ': 'A',\n    'ᴁ': 'AE',\n    'ʙ': 'B',\n    'ᴃ': 'B',\n    'ᴄ': 'C',\n    'ᴅ': 'D',\n    'ᴇ': 'E',\n    'ꜰ': 'F',\n    'ɢ': 'G',\n    'ʛ': 'G',\n    'ʜ': 'H',\n    'ɪ': 'I',\n    'ʁ': 'R',\n    'ᴊ': 'J',\n    'ᴋ': 'K',\n    'ʟ': 'L',\n    'ᴌ': 'L',\n    'ᴍ': 'M',\n    'ɴ': 'N',\n    'ᴏ': 'O',\n    'ɶ': 'OE',\n    'ᴐ': 'O',\n    'ᴕ': 'OU',\n    'ᴘ': 'P',\n    'ʀ': 'R',\n    'ᴎ': 'N',\n    'ᴙ': 'R',\n    'ꜱ': 'S',\n    'ᴛ': 'T',\n    'ⱻ': 'E',\n    'ᴚ': 'R',\n    'ᴜ': 'U',\n    'ᴠ': 'V',\n    'ᴡ': 'W',\n    'ʏ': 'Y',\n    'ᴢ': 'Z',\n    'á': 'a',\n    'ă': 'a',\n    'ắ': 'a',\n    'ặ': 'a',\n    'ằ': 'a',\n    'ẳ': 'a',\n    'ẵ': 'a',\n    'ǎ': 'a',\n    'â': 'a',\n    'ấ': 'a',\n    'ậ': 'a',\n    'ầ': 'a',\n    'ẩ': 'a',\n    'ẫ': 'a',\n    'ä': 'a',\n    'ǟ': 'a',\n    'ȧ': 'a',\n    'ǡ': 'a',\n    'ạ': 'a',\n    'ȁ': 'a',\n    'à': 'a',\n    'ả': 'a',\n    'ȃ': 'a',\n    'ā': 'a',\n    'ą': 'a',\n    'ᶏ': 'a',\n    'ẚ': 'a',\n    'å': 'a',\n    'ǻ': 'a',\n    'ḁ': 'a',\n    'ⱥ': 'a',\n    'ã': 'a',\n    'ꜳ': 'aa',\n    'æ': 'ae',\n    'ǽ': 'ae',\n    'ǣ': 'ae',\n    'ꜵ': 'ao',\n    'ꜷ': 'au',\n    'ꜹ': 'av',\n    'ꜻ': 'av',\n    'ꜽ': 'ay',\n    'ḃ': 'b',\n    'ḅ': 'b',\n    'ɓ': 'b',\n    'ḇ': 'b',\n    'ᵬ': 'b',\n    'ᶀ': 'b',\n    'ƀ': 'b',\n    'ƃ': 'b',\n    'ɵ': 'o',\n    'ć': 'c',\n    'č': 'c',\n    'ç': 'c',\n    'ḉ': 'c',\n    'ĉ': 'c',\n    'ɕ': 'c',\n    'ċ': 'c',\n    'ƈ': 'c',\n    'ȼ': 'c',\n    'ď': 'd',\n    'ḑ': 'd',\n    'ḓ': 'd',\n    'ȡ': 'd',\n    'ḋ': 'd',\n    'ḍ': 'd',\n    'ɗ': 'd',\n    'ᶑ': 'd',\n    'ḏ': 'd',\n    'ᵭ': 'd',\n    'ᶁ': 'd',\n    'đ': 'd',\n    'ɖ': 'd',\n    'ƌ': 'd',\n    'ı': 'i',\n    'ȷ': 'j',\n    'ɟ': 'j',\n    'ʄ': 'j',\n    'ǳ': 'dz',\n    'ǆ': 'dz',\n    'é': 'e',\n    'ĕ': 'e',\n    'ě': 'e',\n    'ȩ': 'e',\n    'ḝ': 'e',\n    'ê': 'e',\n    'ế': 'e',\n    'ệ': 'e',\n    'ề': 'e',\n    'ể': 'e',\n    'ễ': 'e',\n    'ḙ': 'e',\n    'ë': 'e',\n    'ė': 'e',\n    'ẹ': 'e',\n    'ȅ': 'e',\n    'è': 'e',\n    'ẻ': 'e',\n    'ȇ': 'e',\n    'ē': 'e',\n    'ḗ': 'e',\n    'ḕ': 'e',\n    'ⱸ': 'e',\n    'ę': 'e',\n    'ᶒ': 'e',\n    'ɇ': 'e',\n    'ẽ': 'e',\n    'ḛ': 'e',\n    'ꝫ': 'et',\n    'ḟ': 'f',\n    'ƒ': 'f',\n    'ᵮ': 'f',\n    'ᶂ': 'f',\n    'ǵ': 'g',\n    'ğ': 'g',\n    'ǧ': 'g',\n    'ģ': 'g',\n    'ĝ': 'g',\n    'ġ': 'g',\n    'ɠ': 'g',\n    'ḡ': 'g',\n    'ᶃ': 'g',\n    'ǥ': 'g',\n    'ḫ': 'h',\n    'ȟ': 'h',\n    'ḩ': 'h',\n    'ĥ': 'h',\n    'ⱨ': 'h',\n    'ḧ': 'h',\n    'ḣ': 'h',\n    'ḥ': 'h',\n    'ɦ': 'h',\n    'ẖ': 'h',\n    'ħ': 'h',\n    'ƕ': 'hv',\n    'í': 'i',\n    'ĭ': 'i',\n    'ǐ': 'i',\n    'î': 'i',\n    'ï': 'i',\n    'ḯ': 'i',\n    'ị': 'i',\n    'ȉ': 'i',\n    'ì': 'i',\n    'ỉ': 'i',\n    'ȋ': 'i',\n    'ī': 'i',\n    'į': 'i',\n    'ᶖ': 'i',\n    'ɨ': 'i',\n    'ĩ': 'i',\n    'ḭ': 'i',\n    'ꝺ': 'd',\n    'ꝼ': 'f',\n    'ᵹ': 'g',\n    'ꞃ': 'r',\n    'ꞅ': 's',\n    'ꞇ': 't',\n    'ꝭ': 'is',\n    'ǰ': 'j',\n    'ĵ': 'j',\n    'ʝ': 'j',\n    'ɉ': 'j',\n    'ḱ': 'k',\n    'ǩ': 'k',\n    'ķ': 'k',\n    'ⱪ': 'k',\n    'ꝃ': 'k',\n    'ḳ': 'k',\n    'ƙ': 'k',\n    'ḵ': 'k',\n    'ᶄ': 'k',\n    'ꝁ': 'k',\n    'ꝅ': 'k',\n    'ĺ': 'l',\n    'ƚ': 'l',\n    'ɬ': 'l',\n    'ľ': 'l',\n    'ļ': 'l',\n    'ḽ': 'l',\n    'ȴ': 'l',\n    'ḷ': 'l',\n    'ḹ': 'l',\n    'ⱡ': 'l',\n    'ꝉ': 'l',\n    'ḻ': 'l',\n    'ŀ': 'l',\n    'ɫ': 'l',\n    'ᶅ': 'l',\n    'ɭ': 'l',\n    'ł': 'l',\n    'ǉ': 'lj',\n    'ſ': 's',\n    'ẜ': 's',\n    'ẛ': 's',\n    'ẝ': 's',\n    'ḿ': 'm',\n    'ṁ': 'm',\n    'ṃ': 'm',\n    'ɱ': 'm',\n    'ᵯ': 'm',\n    'ᶆ': 'm',\n    'ń': 'n',\n    'ň': 'n',\n    'ņ': 'n',\n    'ṋ': 'n',\n    'ȵ': 'n',\n    'ṅ': 'n',\n    'ṇ': 'n',\n    'ǹ': 'n',\n    'ɲ': 'n',\n    'ṉ': 'n',\n    'ƞ': 'n',\n    'ᵰ': 'n',\n    'ᶇ': 'n',\n    'ɳ': 'n',\n    'ñ': 'n',\n    'ǌ': 'nj',\n    'ó': 'o',\n    'ŏ': 'o',\n    'ǒ': 'o',\n    'ô': 'o',\n    'ố': 'o',\n    'ộ': 'o',\n    'ồ': 'o',\n    'ổ': 'o',\n    'ỗ': 'o',\n    'ö': 'o',\n    'ȫ': 'o',\n    'ȯ': 'o',\n    'ȱ': 'o',\n    'ọ': 'o',\n    'ő': 'o',\n    'ȍ': 'o',\n    'ò': 'o',\n    'ỏ': 'o',\n    'ơ': 'o',\n    'ớ': 'o',\n    'ợ': 'o',\n    'ờ': 'o',\n    'ở': 'o',\n    'ỡ': 'o',\n    'ȏ': 'o',\n    'ꝋ': 'o',\n    'ꝍ': 'o',\n    'ⱺ': 'o',\n    'ō': 'o',\n    'ṓ': 'o',\n    'ṑ': 'o',\n    'ǫ': 'o',\n    'ǭ': 'o',\n    'ø': 'o',\n    'ǿ': 'o',\n    'õ': 'o',\n    'ṍ': 'o',\n    'ṏ': 'o',\n    'ȭ': 'o',\n    'ƣ': 'oi',\n    'ꝏ': 'oo',\n    'ɛ': 'e',\n    'ᶓ': 'e',\n    'ɔ': 'o',\n    'ᶗ': 'o',\n    'ȣ': 'ou',\n    'ṕ': 'p',\n    'ṗ': 'p',\n    'ꝓ': 'p',\n    'ƥ': 'p',\n    'ᵱ': 'p',\n    'ᶈ': 'p',\n    'ꝕ': 'p',\n    'ᵽ': 'p',\n    'ꝑ': 'p',\n    'ꝙ': 'q',\n    'ʠ': 'q',\n    'ɋ': 'q',\n    'ꝗ': 'q',\n    'ŕ': 'r',\n    'ř': 'r',\n    'ŗ': 'r',\n    'ṙ': 'r',\n    'ṛ': 'r',\n    'ṝ': 'r',\n    'ȑ': 'r',\n    'ɾ': 'r',\n    'ᵳ': 'r',\n    'ȓ': 'r',\n    'ṟ': 'r',\n    'ɼ': 'r',\n    'ᵲ': 'r',\n    'ᶉ': 'r',\n    'ɍ': 'r',\n    'ɽ': 'r',\n    'ↄ': 'c',\n    'ꜿ': 'c',\n    'ɘ': 'e',\n    'ɿ': 'r',\n    'ś': 's',\n    'ṥ': 's',\n    'š': 's',\n    'ṧ': 's',\n    'ş': 's',\n    'ŝ': 's',\n    'ș': 's',\n    'ṡ': 's',\n    'ṣ': 's',\n    'ṩ': 's',\n    'ʂ': 's',\n    'ᵴ': 's',\n    'ᶊ': 's',\n    'ȿ': 's',\n    'ɡ': 'g',\n    'ᴑ': 'o',\n    'ᴓ': 'o',\n    'ᴝ': 'u',\n    'ť': 't',\n    'ţ': 't',\n    'ṱ': 't',\n    'ț': 't',\n    'ȶ': 't',\n    'ẗ': 't',\n    'ⱦ': 't',\n    'ṫ': 't',\n    'ṭ': 't',\n    'ƭ': 't',\n    'ṯ': 't',\n    'ᵵ': 't',\n    'ƫ': 't',\n    'ʈ': 't',\n    'ŧ': 't',\n    'ᵺ': 'th',\n    'ɐ': 'a',\n    'ᴂ': 'ae',\n    'ǝ': 'e',\n    'ᵷ': 'g',\n    'ɥ': 'h',\n    'ʮ': 'h',\n    'ʯ': 'h',\n    'ᴉ': 'i',\n    'ʞ': 'k',\n    'ꞁ': 'l',\n    'ɯ': 'm',\n    'ɰ': 'm',\n    'ᴔ': 'oe',\n    'ɹ': 'r',\n    'ɻ': 'r',\n    'ɺ': 'r',\n    'ⱹ': 'r',\n    'ʇ': 't',\n    'ʌ': 'v',\n    'ʍ': 'w',\n    'ʎ': 'y',\n    'ꜩ': 'tz',\n    'ú': 'u',\n    'ŭ': 'u',\n    'ǔ': 'u',\n    'û': 'u',\n    'ṷ': 'u',\n    'ü': 'u',\n    'ǘ': 'u',\n    'ǚ': 'u',\n    'ǜ': 'u',\n    'ǖ': 'u',\n    'ṳ': 'u',\n    'ụ': 'u',\n    'ű': 'u',\n    'ȕ': 'u',\n    'ù': 'u',\n    'ủ': 'u',\n    'ư': 'u',\n    'ứ': 'u',\n    'ự': 'u',\n    'ừ': 'u',\n    'ử': 'u',\n    'ữ': 'u',\n    'ȗ': 'u',\n    'ū': 'u',\n    'ṻ': 'u',\n    'ų': 'u',\n    'ᶙ': 'u',\n    'ů': 'u',\n    'ũ': 'u',\n    'ṹ': 'u',\n    'ṵ': 'u',\n    'ᵫ': 'ue',\n    'ꝸ': 'um',\n    'ⱴ': 'v',\n    'ꝟ': 'v',\n    'ṿ': 'v',\n    'ʋ': 'v',\n    'ᶌ': 'v',\n    'ⱱ': 'v',\n    'ṽ': 'v',\n    'ꝡ': 'vy',\n    'ẃ': 'w',\n    'ŵ': 'w',\n    'ẅ': 'w',\n    'ẇ': 'w',\n    'ẉ': 'w',\n    'ẁ': 'w',\n    'ⱳ': 'w',\n    'ẘ': 'w',\n    'ẍ': 'x',\n    'ẋ': 'x',\n    'ᶍ': 'x',\n    'ý': 'y',\n    'ŷ': 'y',\n    'ÿ': 'y',\n    'ẏ': 'y',\n    'ỵ': 'y',\n    'ỳ': 'y',\n    'ƴ': 'y',\n    'ỷ': 'y',\n    'ỿ': 'y',\n    'ȳ': 'y',\n    'ẙ': 'y',\n    'ɏ': 'y',\n    'ỹ': 'y',\n    'ź': 'z',\n    'ž': 'z',\n    'ẑ': 'z',\n    'ʑ': 'z',\n    'ⱬ': 'z',\n    'ż': 'z',\n    'ẓ': 'z',\n    'ȥ': 'z',\n    'ẕ': 'z',\n    'ᵶ': 'z',\n    'ᶎ': 'z',\n    'ʐ': 'z',\n    'ƶ': 'z',\n    'ɀ': 'z',\n    'ﬀ': 'ff',\n    'ﬃ': 'ffi',\n    'ﬄ': 'ffl',\n    'ﬁ': 'fi',\n    'ﬂ': 'fl',\n    'ĳ': 'ij',\n    'œ': 'oe',\n    'ﬆ': 'st',\n    'ₐ': 'a',\n    'ₑ': 'e',\n    'ᵢ': 'i',\n    'ⱼ': 'j',\n    'ₒ': 'o',\n    'ᵣ': 'r',\n    'ᵤ': 'u',\n    'ᵥ': 'v',\n    'ₓ': 'x'\n};\n","export class TypeaheadMatch {\n  readonly value: string;\n  readonly item: any;\n  protected header: boolean;\n\n  constructor(item: any, value: string = item, header = false) {\n    this.item = item;\n    this.value = value;\n    this.header = header;\n  }\n\n  isHeader(): boolean {\n    return this.header;\n  }\n\n  toString(): string {\n    return this.value;\n  }\n}\n","import { latinMap } from './latin-map';\n\nexport function latinize(str: string): string {\n  if (!str) {\n    return '';\n  }\n\n  return str.replace(/[^A-Za-z0-9\\[\\] ]/g, function (a: string): string {\n    return latinMap[a] || a;\n  });\n}\n\nexport function escapeRegexp(queryToEscape: string): string {\n  // Regex: capture the whole query string and replace it with the string\n  // that will be used to match the results, for example if the capture is\n  // 'a' the result will be \\a\n  return queryToEscape.replace(/([.?*+^$[\\]\\\\(){}|-])/g, '\\\\$1');\n}\n\n/* tslint:disable */\nexport function tokenize(str: string,\n                         wordRegexDelimiters = ' ',\n                         phraseRegexDelimiters = ''): Array<string> {\n  /* tslint:enable */\n  const regexStr = `(?:[${phraseRegexDelimiters}])([^${phraseRegexDelimiters}]+)` +\n    `(?:[${phraseRegexDelimiters}])|([^${wordRegexDelimiters}]+)`;\n  const preTokenized: string[] = str.split(new RegExp(regexStr, 'g'));\n  const result: string[] = [];\n  const preTokenizedLength: number = preTokenized.length;\n  let token: string;\n  const replacePhraseDelimiters = new RegExp(`[${phraseRegexDelimiters}]+`, 'g');\n\n  for (let i = 0; i < preTokenizedLength; i += 1) {\n    token = preTokenized[i];\n    if (token && token.length && token !== wordRegexDelimiters) {\n      result.push(token.replace(replacePhraseDelimiters, ''));\n    }\n  }\n\n  return result;\n}\n\nexport function getValueFromObject(object: any, option: string): string {\n  if (!option || typeof object !== 'object') {\n    return object.toString();\n  }\n\n  if (option.endsWith('()')) {\n    const functionName = option.slice(0, option.length - 2);\n\n    return object[functionName]().toString();\n  }\n\n  const properties: string = option\n    .replace(/\\[(\\w+)\\]/g, '.$1')\n    .replace(/^\\./, '');\n  const propertiesArray: string[] = properties.split('.');\n\n  for (const property of propertiesArray) {\n    if (property in object) {\n      // tslint:disable-next-line\n      object = object[property];\n    }\n  }\n  if (!object) {return ''; }\n\n  return object.toString();\n}\n","import { window } from './facade/browser';\n\nexport class Utils {\n  static reflow(element: any): void {\n    ((bs: any): void => bs)(element.offsetHeight);\n  }\n\n  // source: https://github.com/jquery/jquery/blob/master/src/css/var/getStyles.js\n  static getStyles(elem: any): any {\n    // Support: IE <=11 only, Firefox <=30 (#15098, #14150)\n    // IE throws on elements created in popups\n    // FF meanwhile throws on frame elements through \"defaultView.getComputedStyle\"\n    let view = elem.ownerDocument.defaultView;\n\n    if (!view || !view.opener) {\n      view = window;\n    }\n\n    return view.getComputedStyle(elem);\n  }\n}\n","import {\n  Component,\n  ElementRef,\n  HostListener,\n  QueryList,\n  TemplateRef,\n  ViewChild,\n  ViewChildren,\n  Renderer2\n} from '@angular/core';\n\nimport { isBs3, Utils } from '../utils';\nimport { latinize } from './typeahead-utils';\nimport { TypeaheadMatch } from './typeahead-match.class';\nimport { TypeaheadDirective } from './typeahead.directive';\n\n\nexport class TypeaheadContainerComponent {\n  parent: TypeaheadDirective;\n  query: any;\n  element: ElementRef;\n  isFocused = false;\n  top: string;\n  left: string;\n  display: string;\n  placement: string;\n  dropup: boolean;\n  guiHeight: string;\n  needScrollbar: boolean;\n\n  get isBs4(): boolean {\n    return !isBs3();\n  }\n\n  protected _active: TypeaheadMatch;\n  protected _matches: TypeaheadMatch[] = [];\n\n  \n  private ulElement: ElementRef;\n\n  \n  private liElements: QueryList<ElementRef>;\n\n  constructor(element: ElementRef, private renderer: Renderer2) {\n    this.element = element;\n  }\n\n  get active(): TypeaheadMatch {\n    return this._active;\n  }\n\n  get matches(): TypeaheadMatch[] {\n    return this._matches;\n  }\n\n  set matches(value: TypeaheadMatch[]) {\n    this._matches = value;\n    this.needScrollbar = this.typeaheadScrollable && this.typeaheadOptionsInScrollableView < this.matches.length;\n    if (this.typeaheadScrollable) {\n      setTimeout(() => {\n        this.setScrollableMode();\n      });\n    }\n\n    if (this._matches.length > 0) {\n      this._active = this._matches[0];\n      if (this._active.isHeader()) {\n        this.nextActiveMatch();\n      }\n    }\n  }\n\n  get optionsListTemplate(): TemplateRef<any> {\n    return this.parent ? this.parent.optionsListTemplate : undefined;\n  }\n\n  get typeaheadScrollable(): boolean {\n    return this.parent ? this.parent.typeaheadScrollable : false;\n  }\n\n\n  get typeaheadOptionsInScrollableView(): number {\n    return this.parent ? this.parent.typeaheadOptionsInScrollableView : 5;\n  }\n\n  get itemTemplate(): TemplateRef<any> {\n    return this.parent ? this.parent.typeaheadItemTemplate : undefined;\n  }\n\n  selectActiveMatch(): void {\n    this.selectMatch(this._active);\n  }\n\n  prevActiveMatch(): void {\n    const index = this.matches.indexOf(this._active);\n    this._active = this.matches[\n      index - 1 < 0 ? this.matches.length - 1 : index - 1\n      ];\n    if (this._active.isHeader()) {\n      this.prevActiveMatch();\n    }\n    if (this.typeaheadScrollable) {\n      this.scrollPrevious(index);\n    }\n  }\n\n  nextActiveMatch(): void {\n    const index = this.matches.indexOf(this._active);\n    this._active = this.matches[\n      index + 1 > this.matches.length - 1 ? 0 : index + 1\n      ];\n    if (this._active.isHeader()) {\n      this.nextActiveMatch();\n    }\n    if (this.typeaheadScrollable) {\n      this.scrollNext(index);\n    }\n  }\n\n  selectActive(value: TypeaheadMatch): void {\n    this.isFocused = true;\n    this._active = value;\n  }\n\n  hightlight(match: TypeaheadMatch, query: any): string {\n    let itemStr: string = match.value;\n    let itemStrHelper: string = (this.parent && this.parent.typeaheadLatinize\n      ? latinize(itemStr)\n      : itemStr).toLowerCase();\n    let startIdx: number;\n    let tokenLen: number;\n    // Replaces the capture string with the same string inside of a \"strong\" tag\n    if (typeof query === 'object') {\n      const queryLen: number = query.length;\n      for (let i = 0; i < queryLen; i += 1) {\n        // query[i] is already latinized and lower case\n        startIdx = itemStrHelper.indexOf(query[i]);\n        tokenLen = query[i].length;\n        if (startIdx >= 0 && tokenLen > 0) {\n          itemStr =\n            `${itemStr.substring(0, startIdx)}<strong>${itemStr.substring(startIdx, startIdx + tokenLen)}</strong>` +\n            `${itemStr.substring(startIdx + tokenLen)}`;\n          itemStrHelper =\n            `${itemStrHelper.substring(0, startIdx)}        ${' '.repeat(tokenLen)}         ` +\n            `${itemStrHelper.substring(startIdx + tokenLen)}`;\n        }\n      }\n    } else if (query) {\n      // query is already latinized and lower case\n      startIdx = itemStrHelper.indexOf(query);\n      tokenLen = query.length;\n      if (startIdx >= 0 && tokenLen > 0) {\n        itemStr =\n          `${itemStr.substring(0, startIdx)}<strong>${itemStr.substring(startIdx, startIdx + tokenLen)}</strong>` +\n          `${itemStr.substring(startIdx + tokenLen)}`;\n      }\n    }\n\n    return itemStr;\n  }\n\n  \n  \n  focusLost(): void {\n    this.isFocused = false;\n  }\n\n  isActive(value: TypeaheadMatch): boolean {\n    return this._active === value;\n  }\n\n  selectMatch(value: TypeaheadMatch, e: Event = void 0): boolean {\n    if (e) {\n      e.stopPropagation();\n      e.preventDefault();\n    }\n    this.parent.changeModel(value);\n    setTimeout(() => this.parent.typeaheadOnSelect.emit(value), 0);\n\n    return false;\n  }\n\n  setScrollableMode(): void {\n    if (!this.ulElement) {\n      this.ulElement = this.element;\n    }\n    if (this.liElements.first) {\n      const ulStyles = Utils.getStyles(this.ulElement.nativeElement);\n      const liStyles = Utils.getStyles(this.liElements.first.nativeElement);\n      const ulPaddingBottom = parseFloat((ulStyles['padding-bottom'] ? ulStyles['padding-bottom'] : '').replace('px', ''));\n      const ulPaddingTop = parseFloat((ulStyles['padding-top'] ? ulStyles['padding-top'] : '0').replace('px', ''));\n      const optionHeight = parseFloat((liStyles['height'] ? liStyles['height'] : '0').replace('px', ''));\n      const height = this.typeaheadOptionsInScrollableView * optionHeight;\n      this.guiHeight = `${height + ulPaddingTop + ulPaddingBottom}px`;\n    }\n    this.renderer.setStyle(this.element.nativeElement, 'visibility', 'visible');\n  }\n\n  scrollPrevious(index: number): void {\n    if (index === 0) {\n      this.scrollToBottom();\n\n      return;\n    }\n    if (this.liElements) {\n      const liElement = this.liElements.toArray()[index - 1];\n      if (liElement && !this.isScrolledIntoView(liElement.nativeElement)) {\n        this.ulElement.nativeElement.scrollTop = liElement.nativeElement.offsetTop;\n      }\n    }\n  }\n\n  scrollNext(index: number): void {\n    if (index + 1 > this.matches.length - 1) {\n      this.scrollToTop();\n\n      return;\n    }\n    if (this.liElements) {\n      const liElement = this.liElements.toArray()[index + 1];\n      if (liElement && !this.isScrolledIntoView(liElement.nativeElement)) {\n        this.ulElement.nativeElement.scrollTop =\n          liElement.nativeElement.offsetTop -\n          this.ulElement.nativeElement.offsetHeight +\n          liElement.nativeElement.offsetHeight;\n      }\n    }\n  }\n\n\n  private isScrolledIntoView = function (elem: HTMLElement) {\n    const containerViewTop = this.ulElement.nativeElement.scrollTop;\n    const containerViewBottom = containerViewTop + this.ulElement.nativeElement.offsetHeight;\n    const elemTop = elem.offsetTop;\n    const elemBottom = elemTop + elem.offsetHeight;\n\n    return ((elemBottom <= containerViewBottom) && (elemTop >= containerViewTop));\n  };\n\n  private scrollToBottom(): void {\n    this.ulElement.nativeElement.scrollTop = this.ulElement.nativeElement.scrollHeight;\n  }\n\n  private scrollToTop(): void {\n    this.ulElement.nativeElement.scrollTop = 0;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'typeahead-container',\n  // tslint:disable-next-line\n  template: \"<!-- inject options list template --> <ng-template [ngTemplateOutlet]=\\\"optionsListTemplate || (isBs4 ? bs4Template : bs3Template)\\\" [ngTemplateOutletContext]=\\\"{matches:matches, itemTemplate:itemTemplate, query:query}\\\"></ng-template> <!-- default options item template --> <ng-template #bsItemTemplate let-match=\\\"match\\\" let-query=\\\"query\\\"><span [innerHtml]=\\\"hightlight(match, query)\\\"></span> </ng-template> <!-- Bootstrap 3 options list template --> <ng-template #bs3Template> <ul class=\\\"dropdown-menu\\\" #ulElement [style.overflow-y]=\\\"needScrollbar ? 'scroll': 'auto'\\\" [style.height]=\\\"needScrollbar ? guiHeight: 'auto'\\\"> <ng-template ngFor let-match let-i=\\\"index\\\" [ngForOf]=\\\"matches\\\"> <li #liElements *ngIf=\\\"match.isHeader()\\\" class=\\\"dropdown-header\\\">{{ match }}</li> <li #liElements *ngIf=\\\"!match.isHeader()\\\" [class.active]=\\\"isActive(match)\\\" (mouseenter)=\\\"selectActive(match)\\\"> <a href=\\\"#\\\" (click)=\\\"selectMatch(match, $event)\\\" tabindex=\\\"-1\\\"> <ng-template [ngTemplateOutlet]=\\\"itemTemplate || bsItemTemplate\\\" [ngTemplateOutletContext]=\\\"{item:match.item, index:i, match:match, query:query}\\\"></ng-template> </a> </li> </ng-template> </ul> </ng-template> <!-- Bootstrap 4 options list template --> <ng-template #bs4Template> <ng-template ngFor let-match let-i=\\\"index\\\" [ngForOf]=\\\"matches\\\"> <h6 *ngIf=\\\"match.isHeader()\\\" class=\\\"dropdown-header\\\">{{ match }}</h6> <ng-template [ngIf]=\\\"!match.isHeader()\\\"> <button #liElements class=\\\"dropdown-item\\\" (click)=\\\"selectMatch(match, $event)\\\" (mouseenter)=\\\"selectActive(match)\\\" [class.active]=\\\"isActive(match)\\\"> <ng-template [ngTemplateOutlet]=\\\"itemTemplate || bsItemTemplate\\\" [ngTemplateOutletContext]=\\\"{item:match.item, index:i, match:match, query:query}\\\"></ng-template> </button> </ng-template> </ng-template> </ng-template> \",\n  host: {\n    class: 'dropdown open',\n    '[class.dropdown-menu]': 'isBs4',\n    '[style.overflow-y]' : `isBs4 && needScrollbar ? 'scroll': 'visible'`,\n    '[style.height]': `isBs4 && needScrollbar ? guiHeight: 'auto'`,\n    '[style.visibility]': `typeaheadScrollable ? 'hidden' : 'visible'`,\n    '[class.dropup]': 'dropup',\n    style: 'position: absolute;display: block;'\n  }\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Renderer2, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'ulElement': [{ type: ViewChild, args: ['ulElement', ] },],\n'liElements': [{ type: ViewChildren, args: ['liElements', ] },],\n'focusLost': [{ type: HostListener, args: ['mouseleave', ] },{ type: HostListener, args: ['blur', ] },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/* tslint:disable:max-file-line-count */\nimport {\n  ChangeDetectorRef,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  HostListener,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  Renderer2,\n  TemplateRef,\n  ViewContainerRef\n} from '@angular/core';\nimport { NgControl } from '@angular/forms';\nimport 'rxjs/add/observable/from';\nimport 'rxjs/add/operator/debounceTime';\nimport 'rxjs/add/operator/filter';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/switchMap';\nimport 'rxjs/add/operator/mergeMap';\nimport 'rxjs/add/operator/toArray';\n\nimport { Observable } from 'rxjs/Observable';\nimport { Subscription } from 'rxjs/Subscription';\nimport { ComponentLoader, ComponentLoaderFactory } from '../component-loader/index';\nimport { TypeaheadContainerComponent } from './typeahead-container.component';\nimport { TypeaheadMatch } from './typeahead-match.class';\nimport { getValueFromObject, latinize, tokenize } from './typeahead-utils';\n\n\nexport class TypeaheadDirective implements OnInit, OnDestroy {\n  /** options source, can be Array of strings, objects or\n   * an Observable for external matching process\n   */\n   typeahead: any;\n  /** minimal no of characters that needs to be entered before\n   * typeahead kicks-in. When set to 0, typeahead shows on focus with full\n   * list of options (limited as normal by typeaheadOptionsLimit)\n   */\n   typeaheadMinLength: number = void 0;\n  /** minimal wait time after last character typed before typeahead kicks-in */\n   typeaheadWaitMs: number;\n  /** maximum length of options items list */\n   typeaheadOptionsLimit: number;\n  /** when options source is an array of objects, the name of field\n   * that contains the options value, we use array item as option in case\n   * of this field is missing. Supports nested properties and methods.\n   */\n   typeaheadOptionField: string;\n  /** when options source is an array of objects, the name of field that\n   * contains the group value, matches are grouped by this field when set.\n   */\n   typeaheadGroupField: string;\n  /** should be used only in case of typeahead attribute is array.\n   * If true - loading of options will be async, otherwise - sync.\n   * true make sense if options array is large.\n   */\n   typeaheadAsync: boolean = void 0;\n  /** match latin symbols.\n   * If true the word súper would match super and vice versa.\n   */\n   typeaheadLatinize = true;\n  /** Can be use to search words by inserting a single white space between each characters\n   *  for example 'C a l i f o r n i a' will match 'California'.\n   */\n   typeaheadSingleWords = true;\n  /** should be used only in case typeaheadSingleWords attribute is true.\n   * Sets the word delimiter to break words. Defaults to space.\n   */\n   typeaheadWordDelimiters = ' ';\n  /** should be used only in case typeaheadSingleWords attribute is true.\n   * Sets the word delimiter to match exact phrase.\n   * Defaults to simple and double quotes.\n   */\n   typeaheadPhraseDelimiters = '\\'\"';\n  /** used to specify a custom item template.\n   * Template variables exposed are called item and index;\n   */\n   typeaheadItemTemplate: TemplateRef<any>;\n  /** used to specify a custom options list template.\n   * Template variables: matches, itemTemplate, query\n   */\n   optionsListTemplate: TemplateRef<any>;\n  /** specifies if typeahead is scrollable  */\n   typeaheadScrollable = false;\n  /** specifies number of options to show in scroll view  */\n   typeaheadOptionsInScrollableView = 5;\n  /** fired when 'busy' state of this component was changed,\n   * fired on async mode only, returns boolean\n   */\n   typeaheadLoading = new EventEmitter<boolean>();\n  /** fired on every key event and returns true\n   * in case of matches are not detected\n   */\n   typeaheadNoResults = new EventEmitter<boolean>();\n  /** fired when option was selected, return object with data of this option */\n   typeaheadOnSelect = new EventEmitter<TypeaheadMatch>();\n  /** fired when blur event occurres. returns the active item */\n   typeaheadOnBlur = new EventEmitter<any>();\n\n  /**\n   * A selector specifying the element the typeahead should be appended to.\n   * Currently only supports \"body\".\n   */\n   container: string;\n\n  /** This attribute indicates that the dropdown should be opened upwards */\n   dropup = false;\n\n  // not yet implemented\n  /** if false restrict model values to the ones selected from the popup only will be provided */\n  // @Input() protected typeaheadEditable:boolean;\n  /** if false the first match automatically will not be focused as you type */\n  // @Input() protected typeaheadFocusFirst:boolean;\n  /** format the ng-model result after selection */\n  // @Input() protected typeaheadInputFormatter:any;\n  /** if true automatically select an item when there is one option that exactly matches the user input */\n  // @Input() protected typeaheadSelectOnExact:boolean;\n  /**  if true select the currently highlighted match on blur */\n  // @Input() protected typeaheadSelectOnBlur:boolean;\n  /**  if false don't focus the input element the typeahead directive is associated with on selection */\n    // @Input() protected typeaheadFocusOnSelect:boolean;\n\n  _container: TypeaheadContainerComponent;\n  isTypeaheadOptionsListActive = false;\n\n  protected keyUpEventEmitter: EventEmitter<any> = new EventEmitter();\n  protected _matches: TypeaheadMatch[];\n  protected placement = 'bottom-left';\n  // protected popup:ComponentRef<TypeaheadContainerComponent>;\n\n  private _typeahead: ComponentLoader<TypeaheadContainerComponent>;\n  private _subscriptions: Subscription[] = [];\n  private _outsideClickListener: Function;\n\n  constructor(private ngControl: NgControl,\n              private element: ElementRef,\n              viewContainerRef: ViewContainerRef,\n              private renderer: Renderer2,\n              cis: ComponentLoaderFactory,\n              private changeDetection: ChangeDetectorRef) {\n    this._typeahead = cis.createLoader<TypeaheadContainerComponent>(\n      element,\n      viewContainerRef,\n      renderer\n    );\n  }\n\n  ngOnInit(): void {\n    this.typeaheadOptionsLimit = this.typeaheadOptionsLimit || 20;\n    this.typeaheadMinLength =\n      this.typeaheadMinLength === void 0 ? 1 : this.typeaheadMinLength;\n    this.typeaheadWaitMs = this.typeaheadWaitMs || 0;\n\n    // async should be false in case of array\n    if (\n      this.typeaheadAsync === undefined &&\n      !(this.typeahead instanceof Observable)\n    ) {\n      this.typeaheadAsync = false;\n    }\n\n    if (this.typeahead instanceof Observable) {\n      this.typeaheadAsync = true;\n    }\n\n    if (this.typeaheadAsync) {\n      this.asyncActions();\n    } else {\n      this.syncActions();\n    }\n  }\n\n  \n  onInput(e: any): void {\n    // For `<input>`s, use the `value` property. For others that don't have a\n    // `value` (such as `<span contenteditable=\"true\">`), use either\n    // `textContent` or `innerText` (depending on which one is supported, i.e.\n    // Firefox or IE).\n    const value =\n      e.target.value !== undefined\n        ? e.target.value\n        : e.target.textContent !== undefined\n        ? e.target.textContent\n        : e.target.innerText;\n    if (value != null && value.trim().length >= this.typeaheadMinLength) {\n      this.typeaheadLoading.emit(true);\n      this.keyUpEventEmitter.emit(e.target.value);\n    } else {\n      this.typeaheadLoading.emit(false);\n      this.typeaheadNoResults.emit(false);\n      this.hide();\n    }\n  }\n\n  \n  onChange(e: any): void {\n    if (this._container) {\n      // esc\n      if (e.keyCode === 27) {\n        this.hide();\n\n        return;\n      }\n\n      // up\n      if (e.keyCode === 38) {\n        this._container.prevActiveMatch();\n\n        return;\n      }\n\n      // down\n      if (e.keyCode === 40) {\n        this._container.nextActiveMatch();\n\n        return;\n      }\n\n      // enter, tab\n      if (e.keyCode === 13) {\n        this._container.selectActiveMatch();\n\n        return;\n      }\n    }\n  }\n\n  \n  \n  onFocus(): void {\n    if (this.typeaheadMinLength === 0) {\n      this.typeaheadLoading.emit(true);\n      this.keyUpEventEmitter.emit(this.element.nativeElement.value || '');\n    }\n  }\n\n  \n  onBlur(): void {\n    if (this._container && !this._container.isFocused) {\n      this.typeaheadOnBlur.emit(this._container.active);\n    }\n  }\n\n  \n  onKeydown(e: any): void {\n    // no container - no problems\n    if (!this._container) {\n      return;\n    }\n\n    // if an item is visible - prevent form submission\n    if (e.keyCode === 13) {\n      e.preventDefault();\n\n      return;\n    }\n\n    // if an item is visible - don't change focus\n    if (e.keyCode === 9) {\n      e.preventDefault();\n      this._container.selectActiveMatch();\n\n      return;\n    }\n  }\n\n  changeModel(match: TypeaheadMatch): void {\n    const valueStr: string = match.value;\n    this.ngControl.viewToModelUpdate(valueStr);\n    (this.ngControl.control).setValue(valueStr);\n    this.changeDetection.markForCheck();\n    this.hide();\n  }\n\n  get matches(): any[] {\n    return this._matches;\n  }\n\n  show(): void {\n    this._typeahead\n      .attach(TypeaheadContainerComponent)\n      // todo: add append to body, after updating positioning service\n      .to(this.container)\n      .position({attachment: `${this.dropup ? 'top' : 'bottom'} left`})\n      .show({\n        typeaheadRef: this,\n        placement: this.placement,\n        animation: false,\n        dropup: this.dropup\n      });\n\n    this._outsideClickListener = this.renderer.listen('document', 'click', (e: MouseEvent) => {\n      if (this.typeaheadMinLength === 0 && this.element.nativeElement.contains(e.target)) {\n        return;\n      }\n      this.onOutsideClick();\n    });\n\n    this._container = this._typeahead.instance;\n    this._container.parent = this;\n    // This improves the speed as it won't have to be done for each list item\n    const normalizedQuery = (this.typeaheadLatinize\n      ? latinize(this.ngControl.control.value)\n      : this.ngControl.control.value)\n      .toString()\n      .toLowerCase();\n    this._container.query = this.typeaheadSingleWords\n      ? tokenize(\n        normalizedQuery,\n        this.typeaheadWordDelimiters,\n        this.typeaheadPhraseDelimiters\n      )\n      : normalizedQuery;\n    this._container.matches = this._matches;\n    this.element.nativeElement.focus();\n  }\n\n  hide(): void {\n    if (this._typeahead.isShown) {\n      this._typeahead.hide();\n      this._outsideClickListener();\n      this._container = null;\n    }\n  }\n\n  onOutsideClick(): void {\n    if (this._container && !this._container.isFocused) {\n      this.hide();\n    }\n  }\n\n  ngOnDestroy(): any {\n    // clean up subscriptions\n    for (const sub of this._subscriptions) {\n      sub.unsubscribe();\n    }\n    this._typeahead.dispose();\n  }\n\n  protected asyncActions(): void {\n    this._subscriptions.push(\n      this.keyUpEventEmitter\n        .debounceTime(this.typeaheadWaitMs)\n        .switchMap(() => this.typeahead)\n        .subscribe((matches: any[]) => {\n          this.finalizeAsyncCall(matches);\n        })\n    );\n  }\n\n  protected syncActions(): void {\n    this._subscriptions.push(\n      this.keyUpEventEmitter\n        .debounceTime(this.typeaheadWaitMs)\n        .mergeMap((value: string) => {\n          const normalizedQuery = this.normalizeQuery(value);\n\n          return Observable.from(this.typeahead)\n            .filter((option: any) => {\n              return (\n                option &&\n                this.testMatch(this.normalizeOption(option), normalizedQuery)\n              );\n            })\n            .toArray();\n        })\n        .subscribe((matches: any[]) => {\n          this.finalizeAsyncCall(matches);\n        })\n    );\n  }\n\n  protected normalizeOption(option: any): any {\n    const optionValue: string = getValueFromObject(\n      option,\n      this.typeaheadOptionField\n    );\n    const normalizedOption = this.typeaheadLatinize\n      ? latinize(optionValue)\n      : optionValue;\n\n    return normalizedOption.toLowerCase();\n  }\n\n  protected normalizeQuery(value: string): any {\n    // If singleWords, break model here to not be doing extra work on each\n    // iteration\n    let normalizedQuery: any = (this.typeaheadLatinize\n      ? latinize(value)\n      : value)\n      .toString()\n      .toLowerCase();\n    normalizedQuery = this.typeaheadSingleWords\n      ? tokenize(\n        normalizedQuery,\n        this.typeaheadWordDelimiters,\n        this.typeaheadPhraseDelimiters\n      )\n      : normalizedQuery;\n\n    return normalizedQuery;\n  }\n\n  protected testMatch(match: string, test: any): boolean {\n    let spaceLength: number;\n\n    if (typeof test === 'object') {\n      spaceLength = test.length;\n      for (let i = 0; i < spaceLength; i += 1) {\n        if (test[i].length > 0 && match.indexOf(test[i]) < 0) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n\n    return match.indexOf(test) >= 0;\n  }\n\n  protected finalizeAsyncCall(matches: any[]): void {\n    this.prepareMatches(matches);\n\n    this.typeaheadLoading.emit(false);\n    this.typeaheadNoResults.emit(!this.hasMatches());\n\n    if (!this.hasMatches()) {\n      this.hide();\n\n      return;\n    }\n\n    if (this._container) {\n      // This improves the speed as it won't have to be done for each list item\n      const normalizedQuery = (this.typeaheadLatinize\n        ? latinize(this.ngControl.control.value)\n        : this.ngControl.control.value)\n        .toString()\n        .toLowerCase();\n      this._container.query = this.typeaheadSingleWords\n        ? tokenize(\n          normalizedQuery,\n          this.typeaheadWordDelimiters,\n          this.typeaheadPhraseDelimiters\n        )\n        : normalizedQuery;\n      this._container.matches = this._matches;\n    } else {\n      this.show();\n    }\n  }\n\n  protected prepareMatches(options: any[]): void {\n    const limited: any[] = options.slice(0, this.typeaheadOptionsLimit);\n\n    if (this.typeaheadGroupField) {\n      let matches: TypeaheadMatch[] = [];\n\n      // extract all group names\n      const groups = limited\n        .map((option: any) =>\n          getValueFromObject(option, this.typeaheadGroupField)\n        )\n        .filter((v: string, i: number, a: any[]) => a.indexOf(v) === i);\n\n      groups.forEach((group: string) => {\n        // add group header to array of matches\n        matches.push(new TypeaheadMatch(group, group, true));\n\n        // add each item of group to array of matches\n        matches = matches.concat(\n          limited\n            .filter(\n              (option: any) =>\n                getValueFromObject(option, this.typeaheadGroupField) === group\n            )\n            .map(\n              (option: any) =>\n                new TypeaheadMatch(\n                  option,\n                  getValueFromObject(option, this.typeaheadOptionField)\n                )\n            )\n        );\n      });\n\n      this._matches = matches;\n    } else {\n      this._matches = limited.map(\n        (option: any) =>\n          new TypeaheadMatch(\n            option,\n            getValueFromObject(option, this.typeaheadOptionField)\n          )\n      );\n    }\n  }\n\n  protected hasMatches(): boolean {\n    return this._matches.length > 0;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{selector: '[typeahead]', exportAs: 'bs-typeahead'}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: NgControl, },\n{type: ElementRef, },\n{type: ViewContainerRef, },\n{type: Renderer2, },\n{type: ComponentLoaderFactory, },\n{type: ChangeDetectorRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'typeahead': [{ type: Input },],\n'typeaheadMinLength': [{ type: Input },],\n'typeaheadWaitMs': [{ type: Input },],\n'typeaheadOptionsLimit': [{ type: Input },],\n'typeaheadOptionField': [{ type: Input },],\n'typeaheadGroupField': [{ type: Input },],\n'typeaheadAsync': [{ type: Input },],\n'typeaheadLatinize': [{ type: Input },],\n'typeaheadSingleWords': [{ type: Input },],\n'typeaheadWordDelimiters': [{ type: Input },],\n'typeaheadPhraseDelimiters': [{ type: Input },],\n'typeaheadItemTemplate': [{ type: Input },],\n'optionsListTemplate': [{ type: Input },],\n'typeaheadScrollable': [{ type: Input },],\n'typeaheadOptionsInScrollableView': [{ type: Input },],\n'typeaheadLoading': [{ type: Output },],\n'typeaheadNoResults': [{ type: Output },],\n'typeaheadOnSelect': [{ type: Output },],\n'typeaheadOnBlur': [{ type: Output },],\n'container': [{ type: Input },],\n'dropup': [{ type: Input },],\n'onInput': [{ type: HostListener, args: ['input', ['$event'], ] },],\n'onChange': [{ type: HostListener, args: ['keyup', ['$event'], ] },],\n'onFocus': [{ type: HostListener, args: ['click', ] },{ type: HostListener, args: ['focus', ] },],\n'onBlur': [{ type: HostListener, args: ['blur', ] },],\n'onKeydown': [{ type: HostListener, args: ['keydown', ['$event'], ] },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule, ModuleWithProviders } from '@angular/core';\n\nimport { TypeaheadContainerComponent } from './typeahead-container.component';\nimport { TypeaheadDirective } from './typeahead.directive';\nimport { ComponentLoaderFactory } from '../component-loader/index';\nimport { PositioningService } from '../positioning/index';\n\n\nexport class TypeaheadModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: TypeaheadModule,\n      providers: [ComponentLoaderFactory, PositioningService]\n    };\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  imports: [CommonModule],\n  declarations: [TypeaheadContainerComponent, TypeaheadDirective],\n  exports: [TypeaheadContainerComponent, TypeaheadDirective],\n  entryComponents: [TypeaheadContainerComponent]\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Facet } from './models/facet';\nexport class FacetSelect {\n/**\n * @param {?} facet\n */\nconstructor(public facet: Facet) {}\n}\n\nfunction FacetSelect_tsickle_Closure_declarations() {\n/** @type {?} */\nFacetSelect.prototype.facet;\n}\n\nexport class FacetDeselect {\n/**\n * @param {?} facet\n */\nconstructor(public facet: Facet) {}\n}\n\nfunction FacetDeselect_tsickle_Closure_declarations() {\n/** @type {?} */\nFacetDeselect.prototype.facet;\n}\n\nexport class FacetDeselectAll {\nconstructor() {}\n}\n\nexport type FacetEvent = FacetSelect | FacetDeselect | FacetDeselectAll;","import { Component, Input, EventEmitter, Output } from '@angular/core';\nimport { FacetEvent, FacetSelect, FacetDeselect, FacetDeselectAll } from './facet-events';\nimport { Facet } from './models/facet';\nexport class FacetContainerComponent {\n\n     header: string = 'Selected:';\n     clearTooltip: string = 'Clear All';\n     emptyText: string = 'No Items';\n     facets: Facet[] = [];\n\n     facetsChange: EventEmitter<Facet[]> = new EventEmitter<Facet[]>();\n     events: EventEmitter<FacetEvent> = new EventEmitter<FacetEvent>();\n/**\n * @param {?} facet\n * @return {?}\n */\nselectFacet(facet: Facet): void {\n        // push the facet on to the list\n        this.facets.push(facet);\n\n        // update the two way binding\n        this.facetsChange.emit(this.facets);\n\n        // trigger event\n        this.triggerEvent(new FacetSelect(facet));\n    }\n/**\n * @param {?} facet\n * @return {?}\n */\ndeselectFacet(facet: Facet): void {\n\n        // find the index of the item in the selected array\n        let /** @type {?} */ idx = this.facets.findIndex(selectedFacet => facet === selectedFacet);\n\n        // if match there was no match then finish\n        if (idx === -1) {\n            return;\n        }\n\n        // remove the last item\n        this.facets.splice(idx, 1);\n\n        // update the two way binding\n        this.facetsChange.emit(this.facets);\n\n        // trigger event\n        this.triggerEvent(new FacetDeselect(facet));\n    }\n/**\n * @return {?}\n */\ndeselectAllFacets(): void {\n\n        // empty the selected array\n        this.facets = [];\n\n        // update the two way binding\n        this.facetsChange.emit(this.facets);\n\n        // trigger event\n        this.triggerEvent(new FacetDeselectAll());\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nprivate triggerEvent(event: FacetEvent) {\n        this.events.next(event);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-facet-container',\n    template: `\n      <!-- Display Any Selected Facets -->\n      <div class=\"facets-selected-container\">\n\n          <!-- Display Title an Clear Button -->\n          <div class=\"facets-selected-header-container\">\n\n              <!-- Show The Selected Text -->\n              <span class=\"facets-selected-header-label\">{{ header }}</span>\n\n              <!-- Add a Clear Button -->\n              <div class=\"facets-selected-clear-button\" tabindex=\"0\" [tooltip]=\"clearTooltip\" placement=\"left\" container=\"body\" (click)=\"deselectAllFacets()\"\n                  (keyup.enter)=\"deselectAllFacets()\" *ngIf=\"facets.length > 0\">\n\n                  <svg class=\"facets-selected-clear-graphic\" viewBox=\"0 0 19 12\" shape-rendering=\"geometricPrecision\">\n                      <rect class=\"light-grey\" x=\"0\" y=\"2\" width=\"7\" height=\"2\"></rect>\n                      <rect class=\"dark-grey\" x=\"0\" y=\"5\" width=\"9\" height=\"2\"></rect>\n                      <rect class=\"light-grey\" x=\"0\" y=\"8\" width=\"7\" height=\"2\"></rect>\n                      <path class=\"dark-grey\" d=\"M9,1 h1 l9,9 v1 h-1 l-9,-9 v-1 Z\"></path>\n                      <path class=\"dark-grey\" d=\"M9,11 v-1 l9,-9 h1 v1 l-9,9 h-1 Z\"></path>\n                  </svg>\n              </div>\n\n          </div>\n\n          <!-- Display Tags For Selected Items -->\n          <div class=\"facets-selected-list\">\n\n              <!-- Show Selected Tags -->\n              <div class=\"facet-selected-tag\" tabindex=\"0\" *ngFor=\"let facet of facets\" (mousedown)=\"$event.preventDefault()\" (click)=\"deselectFacet(facet)\" (keyup.enter)=\"deselectFacet(facet)\">\n\n                  <!-- Display Label -->\n                  <span class=\"facet-selected-tag-label\">{{ facet.title }}</span>\n\n                  <!-- Display Remove Icon -->\n                  <span class=\"hpe-icon hpe-close\"></span>\n              </div>\n\n          </div>\n\n          <!-- Show Message Here if No Facets Selected -->\n          <p class=\"facets-selected-none-label\" *ngIf=\"emptyText && facets.length === 0\">{{ emptyText }}</p>\n\n      </div>\n\n      <!-- Any Facet Elements Should be Added Here By User -->\n      <div class=\"facets-region\">\n          <ng-content></ng-content>\n      </div>\n    `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'header': [{ type: Input },],\n'clearTooltip': [{ type: Input },],\n'emptyText': [{ type: Input },],\n'facets': [{ type: Input },],\n'facetsChange': [{ type: Output },],\n'events': [{ type: Output },],\n};\n}\n\nfunction FacetContainerComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nFacetContainerComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFacetContainerComponent.ctorParameters;\n/** @type {?} */\nFacetContainerComponent.propDecorators;\n/** @type {?} */\nFacetContainerComponent.prototype.header;\n/** @type {?} */\nFacetContainerComponent.prototype.clearTooltip;\n/** @type {?} */\nFacetContainerComponent.prototype.emptyText;\n/** @type {?} */\nFacetContainerComponent.prototype.facets;\n/** @type {?} */\nFacetContainerComponent.prototype.facetsChange;\n/** @type {?} */\nFacetContainerComponent.prototype.events;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Host, Input, Output, EventEmitter, OnInit, ElementRef } from '@angular/core';\nimport { FacetContainerComponent } from '../../facet-container.component';\nimport { FacetEvent, FacetDeselectAll, FacetDeselect, FacetSelect } from '../../facet-events';\nimport { Facet } from '../../models/facet';\nimport { Subject } from 'rxjs/Subject';\nimport'rxjs/add/operator/filter';\nexport class FacetBaseComponent implements OnInit {\n\n     selected: Facet[] = [];\n     selectedChange: EventEmitter<Facet[]> = new EventEmitter<Facet[]>();\n\n     events: Subject<FacetEvent> = new Subject<FacetEvent>();\n/**\n * @param {?} facetContainer\n * @param {?} _elementRef\n */\nconstructor(\nprivate facetContainer: FacetContainerComponent,\npublic _elementRef: ElementRef) {\n\n        if (facetContainer) {\n\n            // subscribe to any deselect events from the facet container\n            facetContainer.events.filter(event => event instanceof FacetDeselect)\n                .filter((event: FacetDeselect) => !!this.selected.find(facet => facet === event.facet))\n                .subscribe((event: FacetDeselect) => this.deselectFacet(event.facet));\n\n            // subscribe to any deselect all events from facet container\n            facetContainer.events.filter(event => event instanceof FacetDeselectAll).subscribe(_ => this.deselectAll());\n\n        }\n    }\n/**\n * @return {?}\n */\nngOnInit(): void {\n        // check if there should be any facets initially selected\n        if (this.facetContainer) {\n            this.selected.forEach(facet => this.facetContainer.selectFacet(facet));\n        }\n    }\n/**\n * @param {?} facet\n * @return {?}\n */\nselectFacet(facet: Facet): void {\n\n        // if the facet is disabled it should not be selected\n        if (facet.disabled) {\n            return;\n        }\n\n        // add the facet to the list of selected facets\n        this.selected.push(facet);\n\n        // send the new value to the event emitter\n        this.selectedChange.emit(this.selected);\n\n        // fire the event to the observable\n        this.triggerEvent(new FacetSelect(facet));\n\n        // tell the facet container about the selected facet\n        if (this.facetContainer) {\n            this.facetContainer.selectFacet(facet);\n        }\n    }\n/**\n * @param {?} facet\n * @return {?}\n */\ndeselectFacet(facet: Facet): void {\n\n        // find facet to remove\n        let /** @type {?} */ index = this.selected.findIndex(selectedFacet => selectedFacet === facet);\n\n        // only continue if facet is found\n        if (index !== -1) {\n\n            // remove the facet from the selected list\n            this.selected.splice(index, 1);\n\n            // emit the changes to selected event emitter\n            this.selectedChange.emit(this.selected);\n\n            // fire the event to the observable\n            this.triggerEvent(new FacetDeselect(facet));\n\n            // deselect the facet in the facet container\n            if (this.facetContainer) {\n                this.facetContainer.deselectFacet(facet);\n            }\n        }\n    }\n/**\n * @return {?}\n */\ndeselectAll(): void {\n\n        // remove all selected facets\n        this.selected = [];\n\n        // fire the event to the observable\n        this.triggerEvent(new FacetDeselectAll());\n\n        // emit the changes to the selected event emitter\n        this.selectedChange.emit(this.selected);\n    }\n/**\n * @param {?} facet\n * @return {?}\n */\ntoggleFacetSelection(facet: Facet): void {\n\n        // if the facet is selected then deselect - otherwise select it\n        if (this.isFacetSelected(facet)) {\n            this.deselectFacet(facet);\n        } else {\n            this.selectFacet(facet);\n        }\n\n    }\n/**\n * @param {?} facet\n * @return {?}\n */\nisFacetSelected(facet: Facet): boolean {\n        // determine if a facet is currently selected\n        return !!this.selected.find(selectedFacet => selectedFacet === facet);\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nprivate triggerEvent(event: FacetEvent): void {\n        this.events.next(event);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-facet-base',\n    template: '',\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: FacetContainerComponent, decorators: [{ type: Host }, ]},\n{type: ElementRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'selected': [{ type: Input },],\n'selectedChange': [{ type: Output },],\n'events': [{ type: Output },],\n};\n}\n\nfunction FacetBaseComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nFacetBaseComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFacetBaseComponent.ctorParameters;\n/** @type {?} */\nFacetBaseComponent.propDecorators;\n/** @type {?} */\nFacetBaseComponent.prototype.selected;\n/** @type {?} */\nFacetBaseComponent.prototype.selectedChange;\n/** @type {?} */\nFacetBaseComponent.prototype.events;\n/** @type {?} */\nFacetBaseComponent.prototype.facetContainer;\n/** @type {?} */\nFacetBaseComponent.prototype._elementRef;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Output, EventEmitter, Input } from '@angular/core';\nexport class FacetHeaderComponent {\n\n     header: string;\n     canExpand: boolean = true;    \n     expanded: boolean = true;\n     expandedChange: EventEmitter<boolean> = new EventEmitter<boolean>();\n/**\n * @return {?}\n */\ntoggleExpand(): void {\n\n        // if not expandable then do nothing\n        if (this.canExpand) {\n            this.expanded = !this.expanded;\n            this.expandedChange.emit(this.expanded);\n        }\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-facet-header',\n    template: `\n      <span class=\"facet-header-title\">{{ header }}</span>\n      <span class=\"hpe-icon\" [class.hpe-down]=\"expanded\" [class.hpe-previous]=\"!expanded\" *ngIf=\"canExpand\"></span>\n    `,\n    host: {\n        'tabindex': '0',\n        '(click)': 'toggleExpand()',\n        '(keyup.enter)': 'toggleExpand()'\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'header': [{ type: Input },],\n'canExpand': [{ type: Input },],\n'expanded': [{ type: Input },],\n'expandedChange': [{ type: Output },],\n};\n}\n\nfunction FacetHeaderComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nFacetHeaderComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFacetHeaderComponent.ctorParameters;\n/** @type {?} */\nFacetHeaderComponent.propDecorators;\n/** @type {?} */\nFacetHeaderComponent.prototype.header;\n/** @type {?} */\nFacetHeaderComponent.prototype.canExpand;\n/** @type {?} */\nFacetHeaderComponent.prototype.expanded;\n/** @type {?} */\nFacetHeaderComponent.prototype.expandedChange;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Input } from '@angular/core';\nimport { FacetBaseComponent } from '../base/facet-base/facet-base.component';\nimport { Facet } from '../models/facet';\nexport class FacetCheckListComponent extends FacetBaseComponent {\n\n     facets: Facet[] = [];\n     header: string;\n     scrollbar: boolean = true;\n     expanded: boolean = true;\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-facet-check-list',\n    template: `\n      <ux-facet-header [header]=\"header\" [(expanded)]=\"expanded\"></ux-facet-header>\n\n      <!-- Create a container which will show when section is expanded -->\n      <div class=\"facet-check-list-container\" [class.facet-check-list-scrollbar]=\"scrollbar\" *ngIf=\"expanded\">\n\n          <!-- Iterate through each possible facet -->\n          <div class=\"facet-check-list-item\" *ngFor=\"let facet of facets\" [class.facet-active]=\"isFacetSelected(facet)\" tabindex=\"0\"\n              (click)=\"toggleFacetSelection(facet)\" (keyup.enter)=\"toggleFacetSelection(facet)\" [class.disabled]=\"facet.disabled\">\n\n              <!-- Show check icon to indicate the state -->\n              <span class=\"facet-check-list-item-check\">\n                  <span class=\"hpe-icon hpe-active\"></span>\n              </span>\n\n              <!-- Display the title -->\n              <span class=\"facet-check-list-item-title\">{{ facet.title }}</span>\n\n              <!-- Display the count if specified -->\n              <span class=\"facet-check-list-item-count\" *ngIf=\"facet.count !== undefined\">({{ facet.count }})</span>\n          </div>\n      </div>\n    `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'facets': [{ type: Input },],\n'header': [{ type: Input },],\n'scrollbar': [{ type: Input },],\n'expanded': [{ type: Input },],\n};\n}\n\nfunction FacetCheckListComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nFacetCheckListComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFacetCheckListComponent.ctorParameters;\n/** @type {?} */\nFacetCheckListComponent.propDecorators;\n/** @type {?} */\nFacetCheckListComponent.prototype.facets;\n/** @type {?} */\nFacetCheckListComponent.prototype.header;\n/** @type {?} */\nFacetCheckListComponent.prototype.scrollbar;\n/** @type {?} */\nFacetCheckListComponent.prototype.expanded;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, OnInit, Input, Host, Pipe, PipeTransform } from '@angular/core';\nimport { FacetBaseComponent } from '../base/facet-base/facet-base.component';\nimport { Observable } from 'rxjs/Observable';\nimport { Facet } from '../models/facet';\nimport { FacetContainerComponent } from '../facet-container.component';\nimport { TypeaheadMatch } from 'ngx-bootstrap/typeahead';\nimport'rxjs/add/operator/map';\nimport'rxjs/add/observable/of';\nimport { Observer } from 'rxjs/Observer';\nexport class FacetTypeaheadListComponent extends FacetBaseComponent implements OnInit {\n\n     facets: Facet[] | Observable<Facet[]>;\n     header: string;\n     expanded: boolean = true;\n     typeaheadConfig: FacetTypeaheadListConfig = {};\n     suggestions: Facet[] = [];\n     simplified: boolean = true;\n\n    typeaheadOptions: Observable<Facet[]>;\n    searchQuery: string;\nprivate _nativeElement: HTMLElement = /** @type {?} */(( this._elementRef.nativeElement as HTMLElement));\nprivate _defaultTypeaheadConfig: FacetTypeaheadListConfig = {\n        placeholder: '',\n        maxResults: 50,\n        minCharacters: 1\n    };\n/**\n * @return {?}\n */\nngOnInit() {\n\n        // wrap the observable and filter out any already selected items or any disabled items\n        if (this.facets instanceof Observable) {\n\n            // handle an observable of data\n            this.typeaheadOptions = Observable.from(this.facets).map((facets: Facet[]) => {\n\n                // remove disabled facets, selected facets and facets that dont match search term\n                return facets.filter(facet => !facet.disabled)\n                    .filter(facet => !this.selected.find(selectedFacet => selectedFacet === facet))\n                    .filter(facet => facet.title.toUpperCase().includes(this.searchQuery.toUpperCase()));\n            });\n\n        } else {\n\n            // handle an array of data\n            this.typeaheadOptions = Observable.of(this.facets).map((facets: Facet[]) => {\n\n                // remove disabled facets, selected facets and facets that dont match search term\n                return facets.filter(facet => !facet.disabled)\n                    .filter(facet => !this.selected.find(selectedFacet => selectedFacet === facet))\n                    .filter(facet => facet.title.toUpperCase().includes(this.searchQuery.toUpperCase()));\n            });\n        }\n\n        // provide default values for typeahead config\n        for (let /** @type {?} */ prop in this._defaultTypeaheadConfig) {\n\n            // check if prop has been defined in the users typeahead config - if not set default value\n            if (this.typeaheadConfig.hasOwnProperty(prop) === false) {\n                this.typeaheadConfig[prop] = this._defaultTypeaheadConfig[prop];\n            }\n        }\n    }\n/**\n * @param {?} typeaheadOption\n * @return {?}\n */\nselectOption(typeaheadOption: TypeaheadMatch) {\n\n        // check to make sure that the item is not currently selected\n        if (this.selected.find(facet => facet === typeaheadOption.item)) {\n            return;\n        }\n\n        // select the facet\n        this.selectFacet(typeaheadOption.item);\n\n        // clear the typeahead\n        this.searchQuery = '';\n    }\n/**\n * @return {?}\n */\nscrollToFocused(): void {\n\n        let /** @type {?} */ dropdown = this._nativeElement.querySelector('.dropdown-menu');\n\n        // delay to allow the typeahead ui to update\n        setTimeout(() => {\n\n            // find the currently active element if there is one\n            let /** @type {?} */ activeElement = dropdown.querySelector('.dropdown-menu > li.active');\n\n            if (activeElement) {\n\n                // check if element is not in view\n                let /** @type {?} */ elementBounds = activeElement.getBoundingClientRect();\n                let /** @type {?} */ dropdownBounds = dropdown.getBoundingClientRect();\n\n                if (elementBounds.top < dropdownBounds.top) {\n                    dropdown.scrollTop += elementBounds.top - dropdownBounds.top;\n                }\n\n                if (elementBounds.bottom > dropdownBounds.bottom) {\n                    dropdown.scrollTop += elementBounds.bottom - dropdownBounds.bottom;\n                }\n            }\n        });\n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-facet-typeahead-list',\n    template: `\n      <ux-facet-header [header]=\"header\" [(expanded)]=\"expanded\"></ux-facet-header>\n\n      <div class=\"facet-typeahead-list-container\" *ngIf=\"expanded\">\n\n          <div class=\"facet-typeahead-list-selected-container\" *ngIf=\"suggestions?.length > 0\">\n\n              <div class=\"facet-typeahead-list-selected-option\" tabindex=\"0\" *ngFor=\"let facet of suggestions\" (click)=\"toggleFacetSelection(facet)\"\n                  (keyup.enter)=\"toggleFacetSelection(facet)\">\n\n                  <ux-checkbox [clickable]=\"false\" [value]=\"isFacetSelected(facet)\" [simplified]=\"simplified\">\n                      <span class=\"facet-typeahead-list-selected-option-title\">{{ facet.title }}</span>\n                      <span class=\"facet-typeahead-list-selected-option-count\">({{ facet.count }})</span>\n                  </ux-checkbox>\n\n              </div>\n\n          </div>\n\n          <div class=\"facet-typeahead-list-control\">\n\n              <!-- Create Typeahead Control -->\n              <input type=\"text\" class=\"form-control\" [placeholder]=\"typeaheadConfig?.placeholder\" [typeahead]=\"typeaheadOptions\" [(ngModel)]=\"searchQuery\"\n                  [typeaheadMinLength]=\"typeaheadConfig?.minCharacters\" [typeaheadOptionsLimit]=\"typeaheadConfig?.maxResults\" [typeaheadWaitMs]=\"typeaheadConfig?.delay\"\n                  (typeaheadOnSelect)=\"selectOption($event)\" [typeaheadItemTemplate]=\"facetOptionTemplate\" (keyup.ArrowUp)=\"scrollToFocused()\" (keyup.ArrowDown)=\"scrollToFocused()\">\n\n          </div>\n\n      </div>\n\n      <ng-template #facetOptionTemplate let-model=\"item\" let-index=\"index\">\n          <p class=\"facet-typeahead-list-option\"><span [innerHTML]=\"model.title | facetTypeaheadHighlight: searchQuery\"></span> <span class=\"facet-typeahead-list-option-count\"\n                  *ngIf=\"model.count\">({{ model.count }})</span></p>\n      </ng-template>\n    `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'facets': [{ type: Input },],\n'header': [{ type: Input },],\n'expanded': [{ type: Input },],\n'typeaheadConfig': [{ type: Input },],\n'suggestions': [{ type: Input },],\n'simplified': [{ type: Input },],\n};\n}\n\nfunction FacetTypeaheadListComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nFacetTypeaheadListComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFacetTypeaheadListComponent.ctorParameters;\n/** @type {?} */\nFacetTypeaheadListComponent.propDecorators;\n/** @type {?} */\nFacetTypeaheadListComponent.prototype.facets;\n/** @type {?} */\nFacetTypeaheadListComponent.prototype.header;\n/** @type {?} */\nFacetTypeaheadListComponent.prototype.expanded;\n/** @type {?} */\nFacetTypeaheadListComponent.prototype.typeaheadConfig;\n/** @type {?} */\nFacetTypeaheadListComponent.prototype.suggestions;\n/** @type {?} */\nFacetTypeaheadListComponent.prototype.simplified;\n/** @type {?} */\nFacetTypeaheadListComponent.prototype.typeaheadOptions;\n/** @type {?} */\nFacetTypeaheadListComponent.prototype.searchQuery;\n/** @type {?} */\nFacetTypeaheadListComponent.prototype._nativeElement;\n/** @type {?} */\nFacetTypeaheadListComponent.prototype._defaultTypeaheadConfig;\n}\n\n\nexport interface FacetTypeaheadListConfig {\n    placeholder?: string;\n    minCharacters?: number;\n    maxResults?: number;\n    delay?: number;\n}\nexport class FacetTypeaheadHighlight implements PipeTransform {\n/**\n * @param {?} value\n * @param {?} searchQuery\n * @return {?}\n */\ntransform(value: string, searchQuery: string): string {\n        let /** @type {?} */ regex = new RegExp(searchQuery, 'i');\n        return value.replace(regex, `<b class=\"facet-typeahead-highlighted\">${ value.match(regex) }</b>`);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Pipe, args: [{\n    name: 'facetTypeaheadHighlight'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction FacetTypeaheadHighlight_tsickle_Closure_declarations() {\n/** @type {?} */\nFacetTypeaheadHighlight.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFacetTypeaheadHighlight.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\nimport { TypeaheadModule } from 'ngx-bootstrap/typeahead';\nimport { CommonModule } from '@angular/common';\nimport { FacetContainerComponent } from './facet-container.component';\nimport { FacetBaseComponent } from './base/facet-base/facet-base.component';\nimport { FacetHeaderComponent } from './base/facet-header/facet-header.component';\nimport { FacetCheckListComponent } from './facet-check-list/facet-check-list.component';\nimport { FacetTypeaheadListComponent, FacetTypeaheadHighlight } from './facet-typeahead-list/facet-typeahead-list.component';\nimport { FormsModule } from '@angular/forms';\nimport { CheckboxModule } from '../../index';\n\nconst /** @type {?} */ DECLARATIONS = [\n    FacetContainerComponent,\n    FacetHeaderComponent,\n    FacetBaseComponent,\n    FacetCheckListComponent,\n    FacetTypeaheadListComponent,\n    FacetTypeaheadHighlight\n];\nexport class FacetsModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        CommonModule,\n        FormsModule,\n        CheckboxModule,\n        TooltipModule.forRoot(),\n        TypeaheadModule.forRoot()\n    ],\n    exports: DECLARATIONS,\n    declarations: DECLARATIONS\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction FacetsModule_tsickle_Closure_declarations() {\n/** @type {?} */\nFacetsModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFacetsModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","\nexport class Facet {\n/**\n * @param {?} title\n * @param {?=} data\n * @param {?=} count\n * @param {?=} disabled\n * @param {?=} id\n */\nconstructor(\npublic title: string,\npublic data: any = {},\npublic count?: number,\npublic disabled: boolean = false,\npublic id?: string | number\n    ) { }\n}\n\nfunction Facet_tsickle_Closure_declarations() {\n/** @type {?} */\nFacet.prototype.title;\n/** @type {?} */\nFacet.prototype.data;\n/** @type {?} */\nFacet.prototype.count;\n/** @type {?} */\nFacet.prototype.disabled;\n/** @type {?} */\nFacet.prototype.id;\n}\n","import { Injectable } from '@angular/core';\n\n/** Default dropdown configuration */\n\nexport class BsDropdownConfig {\n  /** default dropdown auto closing behavior */\n  autoClose = true;\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { EventEmitter, Injectable } from '@angular/core';\nimport { BsComponentRef } from '../component-loader/bs-component-ref.class';\n\n\nexport class BsDropdownState {\n  direction: 'down' | 'up' = 'down';\n  autoClose: boolean;\n  isOpenChange = new EventEmitter<boolean>();\n  isDisabledChange = new EventEmitter<boolean>();\n  toggleClick = new EventEmitter<boolean>();\n\n  /**\n   * Content to be displayed as popover.\n   */\n  dropdownMenu: Promise<BsComponentRef<any>>;\n  resolveDropdownMenu: (componentRef: BsComponentRef<any>) => void;\n\n  constructor() {\n    this.dropdownMenu = new Promise(resolve => {\n      this.resolveDropdownMenu = resolve;\n    });\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  OnDestroy,\n  Renderer2\n} from '@angular/core';\nimport { BsDropdownState } from './bs-dropdown.state';\nimport { isBs3 } from '../utils/theme-provider';\n\n\nexport class BsDropdownContainerComponent implements OnDestroy {\n  isOpen = false;\n\n  get direction(): 'down' | 'up' {\n    return this._state.direction;\n  }\n\n  private _subscription: any;\n\n  constructor(\n    private _state: BsDropdownState,\n    private cd: ChangeDetectorRef,\n    private _renderer: Renderer2,\n    _element: ElementRef\n  ) {\n    this._subscription = _state.isOpenChange.subscribe((value: boolean) => {\n      this.isOpen = value;\n      const dropdown = _element.nativeElement.querySelector('.dropdown-menu');\n      if (dropdown && !isBs3()) {\n        this._renderer.addClass(dropdown, 'show');\n        if (dropdown.classList.contains('dropdown-menu-right')) {\n          this._renderer.setStyle(dropdown, 'left', 'auto');\n          this._renderer.setStyle(dropdown, 'right', '0');\n        }\n        if (this.direction === 'up') {\n          this._renderer.setStyle(dropdown, 'top', 'auto');\n          this._renderer.setStyle(\n            dropdown,\n            'transform',\n            'translateY(-101%)'\n          );\n        }\n      }\n      this.cd.markForCheck();\n      this.cd.detectChanges();\n    });\n  }\n\n  ngOnDestroy(): void {\n    this._subscription.unsubscribe();\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'bs-dropdown-container',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    style: 'display:block;position: absolute;'\n  },\n  template: `\n    <div [class.dropup]=\"direction === 'up'\"\n         [class.dropdown]=\"direction === 'down'\"\n         [class.show]=\"isOpen\"\n         [class.open]=\"isOpen\"><ng-content></ng-content></div>\n  `\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: BsDropdownState, },\n{type: ChangeDetectorRef, },\n{type: Renderer2, },\n{type: ElementRef, },\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","// tslint:disable:max-file-line-count\nimport {\n  Directive, ElementRef, EmbeddedViewRef, EventEmitter, Input, OnDestroy,\n  OnInit, Output, Renderer2, ViewContainerRef\n} from '@angular/core';\nimport { Subscription } from 'rxjs/Subscription';\nimport 'rxjs/add/operator/filter';\nimport { ComponentLoader, ComponentLoaderFactory } from '../component-loader/index';\n\nimport { BsDropdownConfig } from './bs-dropdown.config';\nimport { BsDropdownContainerComponent } from './bs-dropdown-container.component';\nimport { BsDropdownState } from './bs-dropdown.state';\nimport { BsComponentRef } from '../component-loader/bs-component-ref.class';\nimport { BsDropdownMenuDirective } from './';\nimport { isBs3 } from '../utils/theme-provider';\n\n\nexport class BsDropdownDirective implements OnInit, OnDestroy {\n  /**\n   * Placement of a popover. Accepts: \"top\", \"bottom\", \"left\", \"right\"\n   */\n   placement: string;\n  /**\n   * Specifies events that should trigger. Supports a space separated list of\n   * event names.\n   */\n   triggers: string;\n  /**\n   * A selector specifying the element the popover should be appended to.\n   * Currently only supports \"body\".\n   */\n   container: string;\n\n  /**\n   * This attribute indicates that the dropdown should be opened upwards\n   */\n   dropup: boolean;\n\n  /**\n   * Indicates that dropdown will be closed on item or document click,\n   * and after pressing ESC\n   */\n  \n  set autoClose(value: boolean) {\n    this._state.autoClose = value;\n  }\n\n  get autoClose(): boolean {\n    return this._state.autoClose;\n  }\n\n  /**\n   * Disables dropdown toggle and hides dropdown menu if opened\n   */\n  \n  set isDisabled(value: boolean) {\n    this._isDisabled = value;\n    this._state.isDisabledChange.emit(value);\n    if (value) {\n      this.hide();\n    }\n  }\n\n  get isDisabled(): boolean {\n    return this._isDisabled;\n  }\n\n  /**\n   * Returns whether or not the popover is currently being shown\n   */\n  \n  get isOpen(): boolean {\n    if (this._showInline) {\n      return this._isInlineOpen;\n    }\n\n    return this._dropdown.isShown;\n  }\n\n  set isOpen(value: boolean) {\n    if (value) {\n      this.show();\n    } else {\n      this.hide();\n    }\n  }\n\n  /**\n   * Emits an event when isOpen change\n   */\n   isOpenChange: EventEmitter<any>;\n\n  /**\n   * Emits an event when the popover is shown\n   */\n   onShown: EventEmitter<any>;\n\n  /**\n   * Emits an event when the popover is hidden\n   */\n   onHidden: EventEmitter<any>;\n\n  get isBs4(): boolean {\n    return !isBs3();\n  }\n\n  // todo: move to component loader\n  private _isInlineOpen = false;\n\n  private get _showInline(): boolean {\n    return !this.container;\n  }\n\n  private _inlinedMenu: EmbeddedViewRef<BsDropdownMenuDirective>;\n\n  private _isDisabled: boolean;\n  private _dropdown: ComponentLoader<BsDropdownContainerComponent>;\n  private _subscriptions: Subscription[] = [];\n  private _isInited = false;\n\n  constructor(private _elementRef: ElementRef,\n              private _renderer: Renderer2,\n              private _viewContainerRef: ViewContainerRef,\n              private _cis: ComponentLoaderFactory,\n              private _config: BsDropdownConfig,\n              private _state: BsDropdownState) {\n    // set initial dropdown state from config\n    this._state.autoClose = this._config.autoClose;\n\n    // create dropdown component loader\n    this._dropdown = this._cis\n      .createLoader<BsDropdownContainerComponent>(\n        this._elementRef,\n        this._viewContainerRef,\n        this._renderer\n      )\n      .provide({provide: BsDropdownState, useValue: this._state});\n\n    this.onShown = this._dropdown.onShown;\n    this.onHidden = this._dropdown.onHidden;\n    this.isOpenChange = this._state.isOpenChange;\n\n  }\n\n  ngOnInit(): void {\n    // fix: seems there are an issue with `routerLinkActive`\n    // which result in duplicated call ngOnInit without call to ngOnDestroy\n    // read more: https://github.com/valor-software/ngx-bootstrap/issues/1885\n    if (this._isInited) {\n      return;\n    }\n    this._isInited = true;\n\n    // attach DOM listeners\n    this._dropdown.listen({\n      // because of dropdown inline mode\n      outsideClick: false,\n      triggers: this.triggers,\n      show: () => this.show()\n    });\n\n    // toggle visibility on toggle element click\n    this._subscriptions.push(\n      this._state.toggleClick.subscribe((value: boolean) => this.toggle(value))\n    );\n\n    // hide dropdown if set disabled while opened\n    this._subscriptions.push(\n      this._state.isDisabledChange\n        .filter((value: boolean) => value)\n        .subscribe((value: boolean) => this.hide())\n    );\n  }\n\n  /**\n   * Opens an element’s popover. This is considered a “manual” triggering of\n   * the popover.\n   */\n  show(): void {\n    if (this.isOpen || this.isDisabled) {\n      return;\n    }\n\n    if (this._showInline) {\n      if (!this._inlinedMenu) {\n        this._state.dropdownMenu.then(\n          (dropdownMenu: BsComponentRef<BsDropdownMenuDirective>) => {\n            this._dropdown.attachInline(\n              dropdownMenu.viewContainer,\n              dropdownMenu.templateRef\n            );\n            this._inlinedMenu = this._dropdown._inlineViewRef;\n            this.addBs4Polyfills();\n          }\n        )\n        // swallow errors\n          .catch();\n      }\n      this.addBs4Polyfills();\n      this._isInlineOpen = true;\n      this.onShown.emit(true);\n      this._state.isOpenChange.emit(true);\n\n      return;\n    }\n    this._state.dropdownMenu.then(dropdownMenu => {\n      // check direction in which dropdown should be opened\n      const _dropup =\n        this.dropup ||\n        (typeof this.dropup !== 'undefined' && this.dropup);\n      this._state.direction = _dropup ? 'up' : 'down';\n      const _placement =\n        this.placement || (_dropup ? 'top left' : 'bottom left');\n\n      // show dropdown\n      this._dropdown\n        .attach(BsDropdownContainerComponent)\n        .to(this.container)\n        .position({attachment: _placement})\n        .show({\n          content: dropdownMenu.templateRef,\n          placement: _placement\n        });\n\n      this._state.isOpenChange.emit(true);\n    })\n    // swallow error\n      .catch();\n  }\n\n  /**\n   * Closes an element’s popover. This is considered a “manual” triggering of\n   * the popover.\n   */\n  hide(): void {\n    if (!this.isOpen) {\n      return;\n    }\n\n    if (this._showInline) {\n      this.removeShowClass();\n      this.removeDropupStyles();\n      this._isInlineOpen = false;\n      this.onHidden.emit(true);\n    } else {\n      this._dropdown.hide();\n    }\n\n    this._state.isOpenChange.emit(false);\n  }\n\n  /**\n   * Toggles an element’s popover. This is considered a “manual” triggering of\n   * the popover. With parameter <code>true</code> allows toggling, with parameter <code>false</code>\n   * only hides opened dropdown. Parameter usage will be removed in ngx-bootstrap v3\n   */\n  toggle(value?: boolean): void {\n    if (this.isOpen || !value) {\n      return this.hide();\n    }\n\n    return this.show();\n  }\n\n  ngOnDestroy(): void {\n    // clean up subscriptions and destroy dropdown\n    for (const sub of this._subscriptions) {\n      sub.unsubscribe();\n    }\n    this._dropdown.dispose();\n  }\n\n  private addBs4Polyfills(): void {\n    if (!isBs3()) {\n      this.addShowClass();\n      this.checkRightAlignment();\n      this.addDropupStyles();\n    }\n  }\n\n  private addShowClass(): void {\n    if (this._inlinedMenu && this._inlinedMenu.rootNodes[0]) {\n      this._renderer.addClass(this._inlinedMenu.rootNodes[0], 'show');\n    }\n  }\n\n  private removeShowClass(): void {\n    if (this._inlinedMenu && this._inlinedMenu.rootNodes[0]) {\n      this._renderer.removeClass(this._inlinedMenu.rootNodes[0], 'show');\n    }\n  }\n\n  private checkRightAlignment(): void {\n    if (this._inlinedMenu && this._inlinedMenu.rootNodes[0]) {\n      const isRightAligned = this._inlinedMenu.rootNodes[0].classList.contains(\n        'dropdown-menu-right'\n      );\n      this._renderer.setStyle(\n        this._inlinedMenu.rootNodes[0],\n        'left',\n        isRightAligned ? 'auto' : '0'\n      );\n      this._renderer.setStyle(\n        this._inlinedMenu.rootNodes[0],\n        'right',\n        isRightAligned ? '0' : 'auto'\n      );\n    }\n  }\n\n  private addDropupStyles(): void {\n    if (this._inlinedMenu && this._inlinedMenu.rootNodes[0]) {\n      // a little hack to not break support of bootstrap 4 beta\n      this._renderer.setStyle(\n        this._inlinedMenu.rootNodes[0],\n        'top',\n        this.dropup ? 'auto' : '100%'\n      );\n      this._renderer.setStyle(\n        this._inlinedMenu.rootNodes[0],\n        'transform',\n        this.dropup ? 'translateY(-101%)' : 'translateY(0)'\n      );\n    }\n  }\n\n  private removeDropupStyles(): void {\n    if (this._inlinedMenu && this._inlinedMenu.rootNodes[0]) {\n      this._renderer.removeStyle(this._inlinedMenu.rootNodes[0], 'top');\n      this._renderer.removeStyle(this._inlinedMenu.rootNodes[0], 'transform');\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[bsDropdown],[dropdown]',\n  exportAs: 'bs-dropdown',\n  providers: [BsDropdownState],\n  host: {\n    '[class.dropup]': 'dropup',\n    '[class.open]': 'isOpen',\n    '[class.show]': 'isOpen && isBs4'\n  }\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Renderer2, },\n{type: ViewContainerRef, },\n{type: ComponentLoaderFactory, },\n{type: BsDropdownConfig, },\n{type: BsDropdownState, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'placement': [{ type: Input },],\n'triggers': [{ type: Input },],\n'container': [{ type: Input },],\n'dropup': [{ type: Input },],\n'autoClose': [{ type: Input },],\n'isDisabled': [{ type: Input },],\n'isOpen': [{ type: Input },],\n'isOpenChange': [{ type: Output },],\n'onShown': [{ type: Output },],\n'onHidden': [{ type: Output },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, TemplateRef, ViewContainerRef } from '@angular/core';\nimport { BsDropdownState } from './bs-dropdown.state';\n\n\nexport class BsDropdownMenuDirective {\n  constructor(\n    _state: BsDropdownState,\n    _viewContainer: ViewContainerRef,\n    _templateRef: TemplateRef<any>\n  ) {\n    _state.resolveDropdownMenu({\n      templateRef: _templateRef,\n      viewContainer: _viewContainer\n    });\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[bsDropdownMenu],[dropdownMenu]',\n  exportAs: 'bs-dropdown-menu'\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: BsDropdownState, },\n{type: ViewContainerRef, },\n{type: TemplateRef, },\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {\n  Directive,\n  ElementRef,\n  HostBinding,\n  HostListener,\n  Input,\n  OnDestroy\n} from '@angular/core';\nimport { Subscription } from 'rxjs/Subscription';\n\nimport { BsDropdownState } from './bs-dropdown.state';\n\n\nexport class BsDropdownToggleDirective implements OnDestroy {\n   isDisabled: boolean = null;\n\n  // @HostBinding('class.active')\n   isOpen: boolean;\n\n  private _subscriptions: Subscription[] = [];\n\n  constructor(private _state: BsDropdownState, private _element: ElementRef) {\n    // sync is open value with state\n    this._subscriptions.push(\n      this._state.isOpenChange.subscribe(\n        (value: boolean) => (this.isOpen = value)\n      )\n    );\n    // populate disabled state\n    this._subscriptions.push(\n      this._state.isDisabledChange.subscribe(\n        (value: boolean) => (this.isDisabled = value || null)\n      )\n    );\n  }\n\n  \n  onClick(): void {\n    if (this.isDisabled) {\n      return;\n    }\n    this._state.toggleClick.emit(true);\n  }\n\n  \n  onDocumentClick(event: any): void {\n    if (\n      this._state.autoClose &&\n      event.button !== 2 &&\n      !this._element.nativeElement.contains(event.target)\n    ) {\n      this._state.toggleClick.emit(false);\n    }\n  }\n\n  \n  onEsc(): void {\n    if (this._state.autoClose) {\n      this._state.toggleClick.emit(false);\n    }\n  }\n\n  ngOnDestroy(): void {\n    for (const sub of this._subscriptions) {\n      sub.unsubscribe();\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[bsDropdownToggle],[dropdownToggle]',\n  exportAs: 'bs-dropdown-toggle',\n  host: {\n    '[attr.aria-haspopup]': 'true'\n  }\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: BsDropdownState, },\n{type: ElementRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'isDisabled': [{ type: HostBinding, args: ['attr.disabled', ] },],\n'isOpen': [{ type: HostBinding, args: ['attr.aria-expanded', ] },],\n'onClick': [{ type: HostListener, args: ['click', [], ] },],\n'onDocumentClick': [{ type: HostListener, args: ['document:click', ['$event'], ] },],\n'onEsc': [{ type: HostListener, args: ['keyup.esc', ] },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { ModuleWithProviders, NgModule } from '@angular/core';\nimport { ComponentLoaderFactory } from '../component-loader/index';\n\nimport { PositioningService } from '../positioning/index';\nimport { BsDropdownContainerComponent } from './bs-dropdown-container.component';\nimport { BsDropdownMenuDirective } from './bs-dropdown-menu.directive';\nimport { BsDropdownToggleDirective } from './bs-dropdown-toggle.directive';\nimport { BsDropdownConfig } from './bs-dropdown.config';\n\nimport { BsDropdownDirective } from './bs-dropdown.directive';\nimport { BsDropdownState } from './bs-dropdown.state';\n\n\nexport class BsDropdownModule {\n  static forRoot(config?: any): ModuleWithProviders {\n    return {\n      ngModule: BsDropdownModule,\n      providers: [\n        ComponentLoaderFactory,\n        PositioningService,\n        BsDropdownState,\n        {\n          provide: BsDropdownConfig,\n          useValue: config ? config : { autoClose: true }\n        }\n      ]\n    };\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  declarations: [\n    BsDropdownMenuDirective,\n    BsDropdownToggleDirective,\n    BsDropdownContainerComponent,\n    BsDropdownDirective\n  ],\n  exports: [\n    BsDropdownMenuDirective,\n    BsDropdownToggleDirective,\n    BsDropdownDirective\n  ],\n  entryComponents: [BsDropdownContainerComponent]\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nexport class FilterContainerComponent {\n\n     filters: Filter[] = [];\n     clearTooltip: string;\n     filtersChange: EventEmitter<Filter[]> = new EventEmitter<Filter[]>();\n     events: EventEmitter<FilterEvent> = new EventEmitter<FilterEvent>();\n/**\n * @param {?} filter\n * @return {?}\n */\naddFilter(filter: Filter): void {\n        this.filters.push(filter);\n        this.events.next(new FilterAddEvent(filter));\n        this.filtersChange.emit(this.filters);\n    }\n/**\n * @param {?} filter\n * @return {?}\n */\nremoveFilter(filter: Filter): void {\n        let /** @type {?} */ idx = this.filters.findIndex(filters => filters === filter);\n\n        if (idx !== -1) {\n            this.filters.splice(idx, 1);\n            this.events.next(new FilterRemoveEvent(filter));\n            this.filtersChange.emit(this.filters);\n        }\n    }\n/**\n * @return {?}\n */\nremoveAll(): void {\n        this.events.next(new FilterRemoveAllEvent());\n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-filter-container',\n    template: `\n      <ng-content></ng-content>\n\n      <!-- Add a Clear Button -->\n      <div class=\"filter-selected-clear-button\" *ngIf=\"filters.length > 0\" [tooltip]=\"clearTooltip || 'Clear All'\" (click)=\"removeAll()\">\n    \n          <svg class=\"filter-selected-clear-graphic\" width=\"19\" height=\"12\" viewBox=\"0 0 19 12\" shape-rendering=\"geometricPrecision\">\n              <rect class=\"light-grey\" x=\"0\" y=\"2\" width=\"7\" height=\"2\"></rect>\n              <rect class=\"dark-grey\" x=\"0\" y=\"5\" width=\"9\" height=\"2\"></rect>\n              <rect class=\"light-grey\" x=\"0\" y=\"8\" width=\"7\" height=\"2\"></rect>\n              <path class=\"dark-grey\" d=\"M9,1 h1 l9,9 v1 h-1 l-9,-9 v-1 Z\"></path>\n              <path class=\"dark-grey\" d=\"M9,11 v-1 l9,-9 h1 v1 l-9,9 h-1 Z\"></path>\n          </svg>\n\n      </div>\n    `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'filters': [{ type: Input },],\n'clearTooltip': [{ type: Input },],\n'filtersChange': [{ type: Output },],\n'events': [{ type: Output },],\n};\n}\n\nfunction FilterContainerComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nFilterContainerComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFilterContainerComponent.ctorParameters;\n/** @type {?} */\nFilterContainerComponent.propDecorators;\n/** @type {?} */\nFilterContainerComponent.prototype.filters;\n/** @type {?} */\nFilterContainerComponent.prototype.clearTooltip;\n/** @type {?} */\nFilterContainerComponent.prototype.filtersChange;\n/** @type {?} */\nFilterContainerComponent.prototype.events;\n}\n\n\nexport interface Filter {\n    group: string;\n    title: string;\n    name: string;\n    initial?: boolean;\n}\nexport class FilterAddEvent {\n/**\n * @param {?} filter\n */\nconstructor(public filter: Filter) {}\n}\n\nfunction FilterAddEvent_tsickle_Closure_declarations() {\n/** @type {?} */\nFilterAddEvent.prototype.filter;\n}\n\nexport class FilterRemoveEvent {\n/**\n * @param {?} filter\n */\nconstructor(public filter: Filter) {}\n}\n\nfunction FilterRemoveEvent_tsickle_Closure_declarations() {\n/** @type {?} */\nFilterRemoveEvent.prototype.filter;\n}\n\nexport class FilterRemoveAllEvent {\n}\n\nexport type FilterEvent = FilterAddEvent | FilterRemoveEvent | FilterRemoveAllEvent;\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, Host, Input, Output } from '@angular/core';\nimport { FilterContainerComponent, Filter, FilterRemoveAllEvent } from '../filter-container.component';\nexport class FilterBaseComponent {\n\n     filters: Filter[];\n/**\n * @param {?} filtersContainer\n */\nconstructor(\nprivate filtersContainer: FilterContainerComponent) {\n\n        filtersContainer.events.filter(event => event instanceof FilterRemoveAllEvent).subscribe(this.removeFilter.bind(this));\n    }\n/**\n * @param {?} filter\n * @return {?}\n */\naddFilter(filter: Filter): void {\n        if (!filter.initial) {\n            this.filtersContainer.addFilter(filter);\n        }\n    }\n/**\n * @param {?} filter\n * @return {?}\n */\nremoveFilter(filter: Filter): void {\n        if (!filter) {\n            return;\n        }\n\n        this.filtersContainer.removeFilter(filter);\n    }\n    \nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'ux-filter-base'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: FilterContainerComponent, decorators: [{ type: Host }, ]},\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'filters': [{ type: Input },],\n};\n}\n\nfunction FilterBaseComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nFilterBaseComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFilterBaseComponent.ctorParameters;\n/** @type {?} */\nFilterBaseComponent.propDecorators;\n/** @type {?} */\nFilterBaseComponent.prototype.filters;\n/** @type {?} */\nFilterBaseComponent.prototype.filtersContainer;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { BsDropdownDirective } from 'ngx-bootstrap/dropdown';\nimport { Component, Input, ViewChild } from '@angular/core';\nimport { FilterBaseComponent } from '../filter-base/filter-base.component';\nimport { Filter, FilterContainerComponent, FilterRemoveAllEvent } from '../filter-container.component';\nimport { TypeaheadMatch } from 'ngx-bootstrap/typeahead';\nexport class FilterDynamicComponent extends FilterBaseComponent {\n\n     filters: Filter[];\n     initial: Filter;\n     options: FilterDynamicListConfig;\n\n     dropdown: BsDropdownDirective;\n\n    defaultOptions: FilterDynamicListConfig = {\n        placeholder: '',\n        minCharacters: 3\n    };\n    searchQuery: string;\n    selected: Filter;\n    showTypeahead: boolean = true;\n    typeaheadItems: string[] = [];\n/**\n * @return {?}\n */\ngetItems(): string[] {\n        return this.filters.filter(item => item !== this.initial).map(item => item.name);\n    }\n/**\n * @return {?}\n */\nngOnInit() {\n        this.selected = this.initial;\n        this.typeaheadItems = this.getItems();\n\n        if (this.options && this.options.maxIndividualItems && this.options.maxIndividualItems + 1 >= this.filters.length ) {\n            this.showTypeahead = false;\n        }\n    }\n/**\n * @param {?} typeaheadOption\n * @return {?}\n */\nselectOption(typeaheadOption: TypeaheadMatch) { \n        this.removeFilter();\n        let /** @type {?} */ idx = this.filters.findIndex(filter => filter.name === typeaheadOption.value);\n        this.selected = this.filters[idx];\n        this.addFilter(this.selected);\n        this.searchQuery = '';\n        this.dropdown.hide();\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nclickOff(event: MouseEvent) {\n\n        let /** @type {?} */ target = /** @type {?} */(( event.target as HTMLElement));\n        let /** @type {?} */ hideDropdown = true;\n\n        while (target && target.nodeName !== 'BODY') {\n            if (target.classList.contains('ux-dynamic-filter')) {\n                hideDropdown = false;\n                break;\n            } else {\n                target = target.parentElement;\n            }\n        }\n\n        if (hideDropdown) {\n            this.searchQuery = '';\n            this.dropdown.hide();\n        }\n        \n    }\n/**\n * @return {?}\n */\nremoveFilter(): void { \n        if (this.selected !== this.initial) {\n            super.removeFilter(this.selected);\n            this.selected = this.initial;\n        }\n        this.searchQuery = '';\n    }\n/**\n * @param {?} filter\n * @return {?}\n */\nselectFilter(filter: Filter) {\n        this.removeFilter();\n        this.selected = filter;\n        this.addFilter(this.selected);\n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-filter-dynamic',\n    template: `\n      <div class=\"btn-group ux-dynamic-filter\" dropdown #dynamicDropdown=\"bs-dropdown\">\n          <button (click)=\"dynamicDropdown.show()\" type=\"button\" [class.active]=\"selected !== initial\" class=\"filter-dropdown btn dropdown-toggle\">{{ selected?.title }} \n              <span class=\"hpe-icon hpe-down\"></span>\n          </button>\n          <ul *dropdownMenu class=\"dropdown-menu\" role=\"menu\">\n\n              <li class=\"dropdown-list-item\" *ngIf=\"showTypeahead\" role=\"menuitem\">\n                  <a class=\"dropdown-item\" (click)=\"removeFilter(); dynamicDropdown.hide();\">\n                      <i class=\"hpe-icon\" [class.hpe-checkmark]=\"initial === selected\"></i>\n                      <span class=\"filter-dropdown-title\">{{ initial.name }}</span>\n                  </a>\n              </li>\n\n              <li class=\"dropdown-list-item\" *ngIf=\"selected !== initial && showTypeahead\" role=\"menuitem\">\n                  <a class=\"dropdown-item\">\n                      <i class=\"hpe-icon hpe-checkmark\"></i>\n                      <span class=\"filter-dropdown-title\">{{ selected.name }}</span>\n                  </a>\n              </li>\n\n              <hr>\n\n              <li *ngIf=\"showTypeahead\" class=\"typeahead-box\">\n                  <input [(ngModel)]=\"searchQuery\" [typeahead]=\"typeaheadItems\" class=\"form-control\" \n                  (typeaheadOnSelect)=\"selectOption($event)\" \n                  [placeholder]=\"options?.placeholder || defaultOptions.placeholder\"\n                  [typeaheadMinLength]=\"options?.minCharacters || defaultOptions.minCharacters\"\n                  [typeaheadOptionsLimit]=\"options?.maxResults\">\n              </li>\n\n              <span *ngIf=\"!showTypeahead\">\n                  <li class=\"dropdown-list-item\" *ngFor=\"let filter of filters\" role=\"menuitem\">\n                      <a class=\"dropdown-item\" (click)=\"selectFilter(filter)\">\n                          <i class=\"hpe-icon\" [class.hpe-checkmark]=\"filter === selected\"></i>\n                          <span class=\"filter-dropdown-title\">{{ filter.name }}</span>\n                      </a>\n                  </li>\n              </span>\n\n          </ul>\n      </div>\n    `,\n    host: {\n        '(document:click)': 'clickOff($event)',\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'filters': [{ type: Input },],\n'initial': [{ type: Input },],\n'options': [{ type: Input },],\n'dropdown': [{ type: ViewChild, args: [BsDropdownDirective, ] },],\n};\n}\n\nfunction FilterDynamicComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nFilterDynamicComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFilterDynamicComponent.ctorParameters;\n/** @type {?} */\nFilterDynamicComponent.propDecorators;\n/** @type {?} */\nFilterDynamicComponent.prototype.filters;\n/** @type {?} */\nFilterDynamicComponent.prototype.initial;\n/** @type {?} */\nFilterDynamicComponent.prototype.options;\n/** @type {?} */\nFilterDynamicComponent.prototype.dropdown;\n/** @type {?} */\nFilterDynamicComponent.prototype.defaultOptions;\n/** @type {?} */\nFilterDynamicComponent.prototype.searchQuery;\n/** @type {?} */\nFilterDynamicComponent.prototype.selected;\n/** @type {?} */\nFilterDynamicComponent.prototype.showTypeahead;\n/** @type {?} */\nFilterDynamicComponent.prototype.typeaheadItems;\n}\n\n\nexport interface FilterDynamicListConfig {\n    placeholder?: string;\n    minCharacters?: number;\n    maxResults?: number;\n    maxIndividualItems?: number;\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Input } from '@angular/core';\nimport { FilterBaseComponent } from '../filter-base/filter-base.component';\nimport { Filter, FilterContainerComponent, FilterRemoveAllEvent } from '../filter-container.component';\nexport class FilterDropdownComponent extends FilterBaseComponent {\n\n     initial: Filter;\n\n    selected: Filter;\n/**\n * @return {?}\n */\nremoveFilter(): void {\n        super.removeFilter(this.selected);\n        this.selected = this.initial;\n    }\n/**\n * @return {?}\n */\nngOnInit() {\n        this.selected = this.initial;\n    }\n/**\n * @param {?} filter\n * @return {?}\n */\nselectFilter(filter: Filter) {\n        this.removeFilter();\n        this.selected = filter;\n        this.addFilter(this.selected);\n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-filter-dropdown',\n    template: `\n      <div class=\"btn-group\" dropdown>\n          <button dropdownToggle type=\"button\" class=\"filter-dropdown btn dropdown-toggle\" [class.active]=\"selected !== initial\">{{ selected?.title }} \n              <span class=\"hpe-icon hpe-down\"></span>\n          </button>\n          <ul *dropdownMenu class=\"dropdown-menu\" role=\"menu\">\n              <li class=\"dropdown-list-item\" *ngFor=\"let filter of filters\" role=\"menuitem\">\n                  <a class=\"dropdown-item\" (click)=\"selectFilter(filter)\">\n                      <i class=\"hpe-icon\" [class.hpe-checkmark]=\"filter === selected\"></i>\n                      <span class=\"filter-dropdown-title\">{{ filter.name }}</span>\n                  </a>\n              </li>\n          </ul>\n      </div>\n    `,\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'initial': [{ type: Input },],\n};\n}\n\nfunction FilterDropdownComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nFilterDropdownComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFilterDropdownComponent.ctorParameters;\n/** @type {?} */\nFilterDropdownComponent.propDecorators;\n/** @type {?} */\nFilterDropdownComponent.prototype.initial;\n/** @type {?} */\nFilterDropdownComponent.prototype.selected;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { TooltipModule } from 'ngx-bootstrap/tooltip';\nimport { FilterDynamicComponent } from './filter-dynamic/filter-dynamic.component';\nimport { FilterDropdownComponent } from './filter-dropdown/filter-dropdown.component';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\nimport { FilterContainerComponent } from './filter-container.component';\nimport { FilterBaseComponent } from './filter-base/filter-base.component';\nimport { TypeaheadModule } from 'ngx-bootstrap/typeahead';\nimport { FormsModule } from '@angular/forms';\n\nconst /** @type {?} */ DECLARATIONS = [\n    FilterBaseComponent,\n    FilterContainerComponent,\n    FilterDropdownComponent,\n    FilterDynamicComponent\n];\nexport class FilterModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        BsDropdownModule.forRoot(),\n        TypeaheadModule.forRoot(),\n        TooltipModule.forRoot(),\n        FormsModule,\n        CommonModule\n    ],\n    exports: DECLARATIONS,\n    declarations: DECLARATIONS\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction FilterModule_tsickle_Closure_declarations() {\n/** @type {?} */\nFilterModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFilterModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Input, Directive, HostListener, Output, EventEmitter } from '@angular/core';\nexport class FlippableCardComponent {\n\n     direction: 'horizontal' | 'vertical' = 'horizontal';\n     trigger: 'click' | 'hover' | 'manual' = 'hover';\n     width: number = 280;\n     height: number = 200;\n     flipped: boolean = false;\n     flippedChange: EventEmitter<boolean> = new EventEmitter<boolean>();\n/**\n * @param {?} state\n * @return {?}\n */\nsetFlipped(state: boolean) {\n        this.flipped = state;\n        this.flippedChange.emit(this.flipped);\n    }\n/**\n * @return {?}\n */\ntoggleFlipped() {\n        this.setFlipped(!this.flipped);\n    }\n/**\n * @return {?}\n */\nclickTrigger() {\n\n        // add or remove the class depending on whether or not the card has been flipped\n        if (this.trigger === 'click') {\n            this.toggleFlipped();\n        }\n    }\n/**\n * @return {?}\n */\nhoverEnter() {\n        // if the trigger is hover then begin to flip\n        if (this.trigger === 'hover') {\n            this.setFlipped(true);\n        }\n    }\n/**\n * @return {?}\n */\nhoverExit() {\n        if (this.trigger === 'hover') {\n            this.setFlipped(false);\n        }\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-flippable-card',\n    template: `\n      <div class=\"ux-flipper\" [class.ux-flip-card]=\"flipped\" [style.width.px]=\"width\" [style.height.px]=\"height\">\n\n          <div class=\"ux-flippable-card-front\" [style.width.px]=\"width\" [style.height.px]=\"height\">\n              <ng-content select=\"ux-flippable-card-front\"></ng-content>\n          </div>\n\n          <div class=\"ux-flippable-card-back\" [style.width.px]=\"width\" [style.height.px]=\"height\">\n              <ng-content select=\"ux-flippable-card-back\"></ng-content>\n          </div>\n      </div>\n    `,\n    host: {\n        '[class.horizontal]': 'direction === \"horizontal\"',\n        '[class.vertical]': 'direction === \"vertical\"'\n    },\n    exportAs: 'ux-flippable-card'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'direction': [{ type: Input },],\n'trigger': [{ type: Input },],\n'width': [{ type: Input },],\n'height': [{ type: Input },],\n'flipped': [{ type: Input },],\n'flippedChange': [{ type: Output },],\n'clickTrigger': [{ type: HostListener, args: ['click', ] },],\n'hoverEnter': [{ type: HostListener, args: ['mouseenter', ] },],\n'hoverExit': [{ type: HostListener, args: ['mouseleave', ] },],\n};\n}\n\nfunction FlippableCardComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nFlippableCardComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFlippableCardComponent.ctorParameters;\n/** @type {?} */\nFlippableCardComponent.propDecorators;\n/** @type {?} */\nFlippableCardComponent.prototype.direction;\n/** @type {?} */\nFlippableCardComponent.prototype.trigger;\n/** @type {?} */\nFlippableCardComponent.prototype.width;\n/** @type {?} */\nFlippableCardComponent.prototype.height;\n/** @type {?} */\nFlippableCardComponent.prototype.flipped;\n/** @type {?} */\nFlippableCardComponent.prototype.flippedChange;\n}\n\nexport class FlippableCardFrontDirective { static decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'ux-flippable-card-front'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction FlippableCardFrontDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nFlippableCardFrontDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFlippableCardFrontDirective.ctorParameters;\n}\n\nexport class FlippableCardBackDirective { static decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'ux-flippable-card-back'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction FlippableCardBackDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nFlippableCardBackDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFlippableCardBackDirective.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\n\nimport { FlippableCardComponent, FlippableCardBackDirective, FlippableCardFrontDirective } from './flippable-card.component';\nexport class FlippableCardModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    exports: [FlippableCardComponent, FlippableCardBackDirective, FlippableCardFrontDirective],\n    declarations: [FlippableCardComponent, FlippableCardBackDirective, FlippableCardFrontDirective]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction FlippableCardModule_tsickle_Closure_declarations() {\n/** @type {?} */\nFlippableCardModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFlippableCardModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nexport class FloatingActionButtonsService {\n\n    open$ = new BehaviorSubject<boolean>(false);\n/**\n * @return {?}\n */\nopen(): void {\n        this.open$.next(true);\n    }\n/**\n * @return {?}\n */\ntoggle(): void {\n        this.open$.next(!this.open$.getValue());\n    }\n/**\n * @return {?}\n */\nclose(): void {\n        this.open$.next(false);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction FloatingActionButtonsService_tsickle_Closure_declarations() {\n/** @type {?} */\nFloatingActionButtonsService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFloatingActionButtonsService.ctorParameters;\n/** @type {?} */\nFloatingActionButtonsService.prototype.open$;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Input, ChangeDetectionStrategy, HostListener, ElementRef, ContentChildren, QueryList, OnDestroy, AfterViewInit } from '@angular/core';\nimport { trigger, state, style, transition, animate, query, stagger } from '@angular/animations';\nimport { TooltipDirective } from 'ngx-bootstrap/tooltip';\nimport { Subscription } from 'rxjs/Subscription';\nimport { filter } from 'rxjs/operators/filter';\n\nimport { FloatingActionButtonComponent } from './floating-action-button.component';\nimport { FloatingActionButtonsService } from './floating-action-buttons.service';\nexport class FloatingActionButtonsComponent implements AfterViewInit, OnDestroy {\n\n     direction: FloatingActionButtonDirection = 'top';\n     tooltips: QueryList<TooltipDirective>;\nprivate _subscription: Subscription;\n/**\n * @param {?} fab\n * @param {?} _elementRef\n */\nconstructor(public fab: FloatingActionButtonsService,\nprivate _elementRef: ElementRef) { }\n/**\n * @return {?}\n */\nngAfterViewInit(): void {\n        this._subscription = this.fab.open$.pipe(filter(open => open === false))\n            .subscribe(() => this.tooltips.forEach(tooltip => tooltip.hide()));\n    }\n/**\n * @return {?}\n */\nngOnDestroy(): void {\n        this._subscription.unsubscribe();\n    }\n/**\n * @param {?} target\n * @return {?}\n */\nclose(target: HTMLElement): void {\n        if (!this._elementRef.nativeElement.contains(target)) {\n            this.fab.close();\n        }\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-floating-action-buttons',\n    template: `\n      <ng-content select=\"[fab-primary]\"></ng-content>\n\n      <div class=\"floating-action-button-list\" [@fabAnimation]=\"fab.open$ | async\" [ngClass]=\"direction\" *ngIf=\"fab.open$ | async\">\n          <ng-content></ng-content>\n      </div>\n    `,\n    providers: [FloatingActionButtonsService],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    preserveWhitespaces: false,\n    animations: [\n        trigger('fabAnimation', [\n            transition('void => true', [\n                query('ux-floating-action-button', style({ opacity: 0 })),\n                query('ux-floating-action-button', stagger(50, animate(250, style({ opacity: 1 }))))\n            ]),\n            transition('true => void', [\n                query('ux-floating-action-button', stagger(-50, animate(250, style({ opacity: 0 }))))\n            ])\n        ])\n    ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: FloatingActionButtonsService, },\n{type: ElementRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'direction': [{ type: Input },],\n'tooltips': [{ type: ContentChildren, args: [TooltipDirective, ] },],\n'close': [{ type: HostListener, args: ['document:click', ['$event.target'], ] },],\n};\n}\n\nfunction FloatingActionButtonsComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nFloatingActionButtonsComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFloatingActionButtonsComponent.ctorParameters;\n/** @type {?} */\nFloatingActionButtonsComponent.propDecorators;\n/** @type {?} */\nFloatingActionButtonsComponent.prototype.direction;\n/** @type {?} */\nFloatingActionButtonsComponent.prototype.tooltips;\n/** @type {?} */\nFloatingActionButtonsComponent.prototype._subscription;\n/** @type {?} */\nFloatingActionButtonsComponent.prototype.fab;\n/** @type {?} */\nFloatingActionButtonsComponent.prototype._elementRef;\n}\n\n\nexport type FloatingActionButtonDirection = 'top' | 'right' | 'bottom' | 'left';\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Input, ChangeDetectionStrategy, HostBinding, HostListener, Attribute } from '@angular/core';\nimport { FloatingActionButtonsService } from './floating-action-buttons.service';\nexport class FloatingActionButtonComponent {\n\n     icon: string;    \n     tabindex = 1;\n    \n    primary: boolean = false;\n/**\n * @param {?} primary\n * @param {?} fab\n */\nconstructor( primary: string,\npublic fab: FloatingActionButtonsService) {\n        this.primary = primary !== null;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-floating-action-button',\n    template: `\n      <button class=\"btn floating-action-button\" \n              [class.button-primary]=\"primary\" \n              [class.button-secondary]=\"!primary\" \n              (click)=\"primary ? fab.open() : fab.close()\">\n\n          <span class=\"hpe-icon floating-action-button-icon\" *ngIf=\"icon\" [ngClass]=\"icon\"></span>\n          <ng-content *ngIf=\"!icon\"></ng-content>\n\n      </button>\n    `,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    preserveWhitespaces: false\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: undefined, decorators: [{ type: Attribute, args: ['fab-primary', ] }, ]},\n{type: FloatingActionButtonsService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'icon': [{ type: Input },],\n'tabindex': [{ type: HostBinding },],\n};\n}\n\nfunction FloatingActionButtonComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nFloatingActionButtonComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFloatingActionButtonComponent.ctorParameters;\n/** @type {?} */\nFloatingActionButtonComponent.propDecorators;\n/** @type {?} */\nFloatingActionButtonComponent.prototype.icon;\n/** @type {?} */\nFloatingActionButtonComponent.prototype.tabindex;\n/** @type {?} */\nFloatingActionButtonComponent.prototype.primary;\n/** @type {?} */\nFloatingActionButtonComponent.prototype.fab;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FloatingActionButtonsComponent } from './floating-action-buttons.component';\nimport { FloatingActionButtonComponent } from './floating-action-button.component';\nexport class FloatingActionButtonsModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        CommonModule\n    ],\n    exports: [\n        FloatingActionButtonsComponent,\n        FloatingActionButtonComponent\n    ],\n    declarations: [\n        FloatingActionButtonsComponent,\n        FloatingActionButtonComponent\n    ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction FloatingActionButtonsModule_tsickle_Closure_declarations() {\n/** @type {?} */\nFloatingActionButtonsModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFloatingActionButtonsModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable } from '@angular/core';\n\n/**\n * Configuration service for the Popover directive.\n * You can inject this service, typically in your root component, and customize\n * the values of its properties in order to provide default values for all the\n * popovers used in the application.\n */\n\nexport class PopoverConfig {\n  /**\n   * Placement of a popover. Accepts: \"top\", \"bottom\", \"left\", \"right\", \"auto\"\n   */\n  placement = 'top';\n  /**\n   * Specifies events that should trigger. Supports a space separated list of\n   * event names.\n   */\n  triggers = 'click';\n\n  outsideClick = false;\n  /**\n   * A selector specifying the element the popover should be appended to.\n   * Currently only supports \"body\".\n   */\n  container: string;\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { ChangeDetectionStrategy, Input, Component } from '@angular/core';\nimport { PopoverConfig } from './popover.config';\nimport { isBs3 } from '../utils/theme-provider';\n\n\nexport class PopoverContainerComponent {\n   placement: string;\n   title: string;\n  containerClass: string;\n\n  get isBs3(): boolean {\n    return isBs3();\n  }\n\n  constructor(config: PopoverConfig) {\n    Object.assign(this, config);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'popover-container',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  // tslint:disable-next-line\n  host: {\n    '[class]':\n      '\"popover in popover-\" + placement + \" \" + \"bs-popover-\" + placement + \" \" + placement + \" \" + containerClass',\n    '[class.show]': '!isBs3',\n    role: 'tooltip',\n    style: 'display:block;'\n  },\n  styles: [\n    `\n    :host.bs-popover-top .arrow, :host.bs-popover-bottom .arrow {\n      left: 50%;\n      margin-left: -8px;\n    }\n    :host.bs-popover-left .arrow, :host.bs-popover-right .arrow {\n      top: 50%;\n      margin-top: -8px;\n    }\n  `\n  ],\n  template: \"<div class=\\\"popover-arrow arrow\\\"></div> <h3 class=\\\"popover-title popover-header\\\" *ngIf=\\\"title\\\">{{ title }}</h3> <div class=\\\"popover-content popover-body\\\"> <ng-content></ng-content> </div> \"\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: PopoverConfig, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'placement': [{ type: Input },],\n'title': [{ type: Input },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {\n  Directive, ElementRef, EventEmitter, Input, OnDestroy, OnInit, Output,\n  Renderer2, TemplateRef, ViewContainerRef\n} from '@angular/core';\nimport { PopoverConfig } from './popover.config';\nimport { ComponentLoader, ComponentLoaderFactory } from '../component-loader/index';\nimport { PopoverContainerComponent } from './popover-container.component';\n\n/**\n * A lightweight, extensible directive for fancy popover creation.\n */\n\nexport class PopoverDirective implements OnInit, OnDestroy {\n  /**\n   * Content to be displayed as popover.\n   */\n   popover: string | TemplateRef<any>;\n  /**\n   * Context to be used if popover is a template.\n   */\n   popoverContext: any;\n  /**\n   * Title of a popover.\n   */\n   popoverTitle: string;\n  /**\n   * Placement of a popover. Accepts: \"top\", \"bottom\", \"left\", \"right\"\n   */\n   placement: 'top' | 'bottom' | 'left' | 'right' | 'auto';\n  /**\n   * Close popover on outside click\n   */\n   outsideClick = false;\n  /**\n   * Specifies events that should trigger. Supports a space separated list of\n   * event names.\n   */\n   triggers: string;\n  /**\n   * A selector specifying the element the popover should be appended to.\n   * Currently only supports \"body\".\n   */\n   container: string;\n\n  /**\n   * Css class for popover container\n   */\n   containerClass = '';\n\n  /**\n   * Returns whether or not the popover is currently being shown\n   */\n  \n  get isOpen(): boolean {\n    return this._popover.isShown;\n  }\n\n  set isOpen(value: boolean) {\n    if (value) {\n      this.show();\n    } else {\n      this.hide();\n    }\n  }\n\n  /**\n   * Emits an event when the popover is shown\n   */\n   onShown: EventEmitter<any>;\n  /**\n   * Emits an event when the popover is hidden\n   */\n   onHidden: EventEmitter<any>;\n\n  private _popover: ComponentLoader<PopoverContainerComponent>;\n  private _isInited = false;\n\n  constructor(_elementRef: ElementRef,\n              _renderer: Renderer2,\n              _viewContainerRef: ViewContainerRef,\n              _config: PopoverConfig,\n              cis: ComponentLoaderFactory) {\n    this._popover = cis\n      .createLoader<PopoverContainerComponent>(\n        _elementRef,\n        _viewContainerRef,\n        _renderer\n      )\n      .provide({provide: PopoverConfig, useValue: _config});\n    Object.assign(this, _config);\n    this.onShown = this._popover.onShown;\n    this.onHidden = this._popover.onHidden;\n\n    // fix: no focus on button on Mac OS #1795\n    if (typeof window !== 'undefined') {\n      _elementRef.nativeElement.addEventListener('click', function () {\n        try {\n          _elementRef.nativeElement.focus();\n        } catch (err) {\n          return;\n        }\n      });\n    }\n  }\n\n  /**\n   * Opens an element’s popover. This is considered a “manual” triggering of\n   * the popover.\n   */\n  show(): void {\n    if (this._popover.isShown || !this.popover) {\n      return;\n    }\n\n    this._popover\n      .attach(PopoverContainerComponent)\n      .to(this.container)\n      .position({attachment: this.placement})\n      .show({\n        content: this.popover,\n        context: this.popoverContext,\n        placement: this.placement,\n        title: this.popoverTitle,\n        containerClass: this.containerClass\n      });\n    this.isOpen = true;\n  }\n\n  /**\n   * Closes an element’s popover. This is considered a “manual” triggering of\n   * the popover.\n   */\n  hide(): void {\n    if (this.isOpen) {\n      this._popover.hide();\n      this.isOpen = false;\n    }\n  }\n\n  /**\n   * Toggles an element’s popover. This is considered a “manual” triggering of\n   * the popover.\n   */\n  toggle(): void {\n    if (this.isOpen) {\n      return this.hide();\n    }\n\n    this.show();\n  }\n\n  ngOnInit(): any {\n    // fix: seems there are an issue with `routerLinkActive`\n    // which result in duplicated call ngOnInit without call to ngOnDestroy\n    // read more: https://github.com/valor-software/ngx-bootstrap/issues/1885\n    if (this._isInited) {\n      return;\n    }\n    this._isInited = true;\n\n    this._popover.listen({\n      triggers: this.triggers,\n      outsideClick: this.outsideClick,\n      show: () => this.show()\n    });\n  }\n\n  ngOnDestroy(): any {\n    this._popover.dispose();\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{selector: '[popover]', exportAs: 'bs-popover'}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Renderer2, },\n{type: ViewContainerRef, },\n{type: PopoverConfig, },\n{type: ComponentLoaderFactory, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'popover': [{ type: Input },],\n'popoverContext': [{ type: Input },],\n'popoverTitle': [{ type: Input },],\n'placement': [{ type: Input },],\n'outsideClick': [{ type: Input },],\n'triggers': [{ type: Input },],\n'container': [{ type: Input },],\n'containerClass': [{ type: Input },],\n'isOpen': [{ type: Input },],\n'onShown': [{ type: Output },],\n'onHidden': [{ type: Output },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ComponentLoaderFactory } from '../component-loader/index';\nimport { PositioningService } from '../positioning/index';\nimport { PopoverConfig } from './popover.config';\nimport { PopoverDirective } from './popover.directive';\nimport { PopoverContainerComponent } from './popover-container.component';\n\n\nexport class PopoverModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: PopoverModule,\n      providers: [PopoverConfig, ComponentLoaderFactory, PositioningService]\n    };\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  imports: [CommonModule],\n  declarations: [PopoverDirective, PopoverContainerComponent],\n  exports: [PopoverDirective],\n  entryComponents: [PopoverContainerComponent]\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { Observable } from 'rxjs/Observable';\nimport { Observer } from 'rxjs/Observer';\nimport { of } from 'rxjs/observable/of';\nimport { first } from 'rxjs/operators';\nexport class HierarchyBarService {\n\n    nodes$ = new BehaviorSubject<HierarchyBarNode[]>([]);\nprivate _root: HierarchyBarNode;\nprivate _nodes: HierarchyBarNode[] = [];\n/**\n * Store the root node of the hierarchy tree\n * @param {?} root\n * @return {?}\n */\nsetRootNode(root: HierarchyBarNode) {\n\n        // store the root node\n        this._root = root;\n\n        // create a flat structure of nodes\n        this._nodes = this.getNodeList(root);\n\n        // flatten the array - based on the selected node\n        this.nodes$.next(this.getSelectedChildren(root));\n    }\n/**\n * Select a node. This causes all nodes to be\n * deselected and the path to the selected node\n * to be selected\n * @param {?} node\n * @return {?}\n */\nselectNode(node: HierarchyBarNode): void {\n\n        // deselect all nodes\n        this.deselectAll();\n\n        // ensure the current node is selected and its parents\n        this.select(node);\n\n        // emit a new node list to trigger change detection\n        this.nodes$.next(this.getSelectedChildren(this._root));\n    }\n/**\n * Handles getting children with support for both arrays and observables\n * @param {?} node\n * @return {?}\n */\ngetChildren(node: HierarchyBarNode): Observable<HierarchyBarNodeChildren> {\n\n        if (Array.isArray(node.children)) {\n            return of({ loading: false, children: node.children });\n        }\n\n        const /** @type {?} */ children$: Observable<HierarchyBarNode[]> = node.children;\n\n        // if it is an observable then handle loading\n        return Observable.create((observer: Observer<HierarchyBarNodeChildren>) => {\n            // emit initial value\n            observer.next({ loading: true, children: [] });\n\n            // now wait until the children observable completes\n            children$.pipe(first()).subscribe(children => {\n\n                // replace the observable with an array for future loading\n                node.children = children;\n\n                // rebuild the node tree\n                this.setRootNode(this._root);\n\n                // emit the latest value\n                observer.next({ loading: false, children: children });\n\n                // close the observable stream\n                observer.complete();\n            });\n        });\n    }\n/**\n * Traverses all the parents to ensure they are selected\n * @param {?} node\n * @return {?}\n */\nprivate select(node: HierarchyBarNode): void {\n        node.selected = true;\n\n        if (node.parent) {\n            this.select(node.parent);\n        }\n    }\n/**\n * Deselects all nodes\n * @return {?}\n */\nprivate deselectAll(): void {\n        this._nodes.forEach(node => node.selected = false);\n    }\n/**\n * Gets all the nodes in the tree as a flat array.\n * It also stores the parent node in a parent property\n * on the node for easy traversal in both directions\n * @param {?} node\n * @return {?}\n */\nprivate getNodeList(node: HierarchyBarNode): HierarchyBarNode[] {\n\n        // if there are no children then return only itself\n        if (!node.children || node.children instanceof Observable || node.children.length === 0) {\n            return [node];\n        }\n\n        // store the parent property\n        node.children.forEach(child => child.parent = node);\n\n        // get all descendants of this node\n        const /** @type {?} */ descendants = node.children.reduce<HierarchyBarNode[]>((nodes, current) => [...nodes, ...this.getNodeList(current)], []);\n\n        return [node, ...descendants];\n    }\n/**\n * Gets all selected nodes from the parent node.\n * @param {?} node\n * @return {?}\n */\nprivate getSelectedChildren(node: HierarchyBarNode): HierarchyBarNode[] {\n\n        if (node.children instanceof Observable) {\n            return [node];\n        }\n\n        // get the children - and account for when there is none\n        const /** @type {?} */ children = node.children || [];\n\n        // check if any child is selected\n        const /** @type {?} */ child = children.find(_child => _child.selected);\n\n        // return the remaining chain of selected items\n        return child ? [node, ...this.getSelectedChildren(child)] : [node];\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction HierarchyBarService_tsickle_Closure_declarations() {\n/** @type {?} */\nHierarchyBarService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nHierarchyBarService.ctorParameters;\n/** @type {?} */\nHierarchyBarService.prototype.nodes$;\n/** @type {?} */\nHierarchyBarService.prototype._root;\n/** @type {?} */\nHierarchyBarService.prototype._nodes;\n}\n\n\nexport interface HierarchyBarNode {\n    icon?: string;\n    title: string;\n    selected?: boolean;\n    parent?: HierarchyBarNode;\n    children?: HierarchyBarNode[] | Observable<HierarchyBarNode[]>;\n}\n\nexport interface HierarchyBarNodeChildren {\n    loading: boolean;\n    children: HierarchyBarNode[];\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, EventEmitter, Input, OnDestroy, Output, QueryList, TemplateRef, ViewChild, ViewChildren } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { Subscription } from 'rxjs/Subscription';\nimport { debounceTime } from 'rxjs/operators';\nimport { HierarchyBarNode, HierarchyBarService } from './hierarchy-bar.service';\nexport class HierarchyBarComponent implements OnDestroy {\n/**\n * @param {?} node\n * @return {?}\n */\nset root(node: HierarchyBarNode) {\n        this.hierarchyBar.setRootNode(node);\n    }\n/**\n * @param {?} node\n * @return {?}\n */\nset selected(node: HierarchyBarNode) {\n        this.hierarchyBar.selectNode(node);\n    }\n\n     loadingIndicator: TemplateRef<any>;\n\n     selectedChange = new EventEmitter<HierarchyBarNode>();\n     nodelist: ElementRef;\n     nodes: QueryList<ElementRef>;\n\n    overflow$ = new BehaviorSubject<boolean>(false);\n    overflowNodes$ = new BehaviorSubject<HierarchyBarNode[]>([]);\nprivate _subscription = new Subscription();\n/**\n * @param {?} hierarchyBar\n */\nconstructor(public hierarchyBar: HierarchyBarService) {\n\n        // subscribe to changes in the selected node\n        const selected = hierarchyBar.nodes$.subscribe(nodes => this.selectedChange.emit(nodes.length === 0 ? null : nodes[nodes.length - 1]));\n        const changed = hierarchyBar.nodes$.pipe(debounceTime(0)).subscribe(() => this.scrollIntoView());\n\n        // store subscriptions\n        this._subscription.add(selected);\n        this._subscription.add(changed);\n    }\n/**\n * @return {?}\n */\nngOnDestroy(): void {\n        this._subscription.unsubscribe();\n    }\n/**\n * When there is overflow ensure that the rightmost\n * node remains in view at all times. The nodes no longer\n * visible be be displayed in a popover available on the\n * overflow indicator\n * @return {?}\n */\nscrollIntoView(): void {\n\n        if (!this.nodelist) {\n            return;\n        }\n\n        // get the native element\n        const { nativeElement } = this.nodelist;\n\n        // emit whether or not there is overflow\n        this.overflow$.next(nativeElement.scrollWidth > nativeElement.offsetWidth);\n\n        // if the hierarchy bar contents do not overflow then do nothing\n        if (nativeElement.scrollWidth > nativeElement.offsetWidth) {\n\n            // determine the amount of overflow\n            const /** @type {?} */ overflowAmount = nativeElement.scrollWidth - nativeElement.offsetWidth;\n\n            // determine which nodes are not fully visible\n            this.overflowNodes$.next(\n                this.nodes.filter(node => node.nativeElement.offsetLeft < overflowAmount)\n                    .map((node, index) => this.hierarchyBar.nodes$.value[index])\n            );\n\n            // move the scroll position to always show the last itme\n            this.nodelist.nativeElement.scrollLeft = overflowAmount;\n        }\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-hierarchy-bar',\n    template: `\n      <!-- Allow content to be placed on the left of the items -->\n      <aside class=\"hierarchy-bar-addons\">\n          <ng-content select=\"[uxHierarchyBarLeftAddon]\"></ng-content>\n      </aside>\n\n      <main #nodelist class=\"hierarchy-bar-nodes\" (uxResize)=\"scrollIntoView()\">\n\n          <div *ngIf=\"overflow$ | async\"\n               #popover=\"bs-popover\"\n               class=\"hierarchy-bar-overflow-indicator\"\n               [style.left.px]=\"nodelist.scrollLeft\"\n               [popover]=\"overflow\"\n               [popoverContext]=\"{ popover: popover }\"\n               placement=\"bottom\"\n               container=\"body\"\n               [outsideClick]=\"true\"\n               containerClass=\"hierarchy-bar-popover\">\n              . . .\n          </div>\n\n          <div #nodeElement class=\"hierarchy-bar-node\"\n               *ngFor=\"let node of hierarchyBar.nodes$ | async\">\n\n              <button class=\"hierarchy-bar-node-content\"\n                      [attr.aria-label]=\"node.title\"\n                      (click)=\"hierarchyBar.selectNode(node)\">\n\n                  <!-- Show an icon if specifed -->\n                  <img class=\"hierarchy-bar-node-icon\" *ngIf=\"node.icon\" [src]=\"node.icon\" alt=\"Hierarchy Bar Icon\">\n\n                  <!-- Show the name of the current node -->\n                  <span class=\"hierarchy-bar-node-title\">{{ node.title }}</span>\n\n              </button>\n\n              <!-- Show a dropdown arrow if there are children -->\n              <button *ngIf=\"node.children\"\n                    #popover=\"bs-popover\"\n                    aria-label=\"Show children\"\n                    role=\"button\"\n                    class=\"hierarchy-bar-node-arrow hpe-icon hpe-next\"\n                    [popover]=\"content\"\n                    [popoverContext]=\"{ node: node, popover: popover }\"\n                    placement=\"bottom\"\n                    container=\"body\"\n                    [outsideClick]=\"true\"\n                    containerClass=\"hierarchy-bar-popover\"\n                    tabindex=\"0\">\n              </button>\n\n          </div>\n\n      </main>\n\n      <!-- Allow content to be placed on the right of the items -->\n      <aside class=\"hierarchy-bar-addons\">\n          <ng-content select=\"[uxHierarchyBarRightAddon]\"></ng-content>\n      </aside>\n\n      <!-- Template for the popover list -->\n      <ng-template #content let-node=\"node\" let-popover=\"popover\">\n\n          <!-- Loading Indicator -->\n          <ul class=\"hierarchy-bar-node-list\" *ngIf=\"(hierarchyBar.getChildren(node) | async).loading\">\n\n              <li class=\"hierarchy-bar-node-list-item\">\n                  <ng-container [ngTemplateOutlet]=\"loadingIndicator || defaultLoadingIndicator\"></ng-container>\n              </li>\n          </ul>\n\n          <!-- List of children -->\n          <ul class=\"hierarchy-bar-node-list\" *ngIf=\"!(hierarchyBar.getChildren(node) | async).loading\">\n\n              <li *ngFor=\"let child of (hierarchyBar.getChildren(node) | async).children; let first = first\"\n                  class=\"hierarchy-bar-node-list-item\"\n                  [focusIf]=\"first\"\n                  tabindex=\"0\"\n                  (keydown.enter)=\"hierarchyBar.selectNode(child); popover.hide()\"\n                  (click)=\"hierarchyBar.selectNode(child); popover.hide()\">\n\n                  <!-- Show an icon if specifed -->\n                  <img class=\"hierarchy-bar-node-icon\" *ngIf=\"child.icon\" [src]=\"child.icon\" alt=\"Hierarchy Bar Icon\">\n\n                  <!-- Show the name of the current node -->\n                  <span class=\"hierarchy-bar-node-title\">{{ child.title }}</span>\n\n              </li>\n\n          </ul>\n      </ng-template>\n\n      <!-- Template for the overflow popover list -->\n      <ng-template #overflow let-popover=\"popover\">\n\n          <ul class=\"hierarchy-bar-node-list\">\n\n              <li *ngFor=\"let child of overflowNodes$ | async; let first = first\"\n                  class=\"hierarchy-bar-node-list-item\"\n                  tabindex=\"0\"\n                  [focusIf]=\"first\"\n                  (click)=\"hierarchyBar.selectNode(child); popover.hide()\"\n                  (keydown.enter)=\"hierarchyBar.selectNode(child); popover.hide()\">\n\n                  <!-- Show an icon if specifed -->\n                  <img class=\"hierarchy-bar-node-icon\" *ngIf=\"child.icon\" [src]=\"child.icon\" alt=\"Hierarchy Bar Icon\">\n\n                  <!-- Show the name of the current node -->\n                  <span class=\"hierarchy-bar-node-title\">{{ child.title }}</span>\n\n              </li>\n\n          </ul>\n      </ng-template>\n\n      <!-- Loading Indicator Template -->\n      <ng-template #defaultLoadingIndicator>\n          <div class=\"hierarchy-bar-node-icon\" alt=\"Hierarchy Bar Loading Indicator\">\n              <div class=\"spinner spinner-accent spinner-bounce-middle\"></div>\n          </div>\n\n          <!-- Show the name of the current node -->\n          <span class=\"hierarchy-bar-node-title\">Loading...</span>\n      </ng-template>\n    `,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    viewProviders: [HierarchyBarService]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: HierarchyBarService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'root': [{ type: Input },],\n'selected': [{ type: Input },],\n'loadingIndicator': [{ type: Input },],\n'selectedChange': [{ type: Output },],\n'nodelist': [{ type: ViewChild, args: ['nodelist', ] },],\n'nodes': [{ type: ViewChildren, args: ['nodeElement', ] },],\n};\n}\n\nfunction HierarchyBarComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nHierarchyBarComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nHierarchyBarComponent.ctorParameters;\n/** @type {?} */\nHierarchyBarComponent.propDecorators;\n/** @type {?} */\nHierarchyBarComponent.prototype.loadingIndicator;\n/** @type {?} */\nHierarchyBarComponent.prototype.selectedChange;\n/** @type {?} */\nHierarchyBarComponent.prototype.nodelist;\n/** @type {?} */\nHierarchyBarComponent.prototype.nodes;\n/** @type {?} */\nHierarchyBarComponent.prototype.overflow$;\n/** @type {?} */\nHierarchyBarComponent.prototype.overflowNodes$;\n/** @type {?} */\nHierarchyBarComponent.prototype._subscription;\n/** @type {?} */\nHierarchyBarComponent.prototype.hierarchyBar;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { PopoverModule } from 'ngx-bootstrap/popover';\nimport { FocusIfModule } from '../../directives/focus-if/index';\nimport { ResizeModule } from '../../directives/resize/index';\nimport { HierarchyBarComponent } from './hierarchy-bar.component';\nexport class HierarchyBarModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        CommonModule,\n        ResizeModule,\n        FocusIfModule,\n        PopoverModule.forRoot()\n    ],\n    exports: [HierarchyBarComponent],\n    declarations: [HierarchyBarComponent],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction HierarchyBarModule_tsickle_Closure_declarations() {\n/** @type {?} */\nHierarchyBarModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nHierarchyBarModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nexport class SidePanelService {\n\n    open$ = new BehaviorSubject<boolean>(false);\n/**\n * @return {?}\n */\nopen() {\n        this.open$.next(true);\n    }\n/**\n * @return {?}\n */\nclose() {\n        this.open$.next(false);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction SidePanelService_tsickle_Closure_declarations() {\n/** @type {?} */\nSidePanelService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSidePanelService.ctorParameters;\n/** @type {?} */\nSidePanelService.prototype.open$;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, OnInit, Input, Output, EventEmitter, OnDestroy, HostBinding, HostListener, ElementRef } from '@angular/core';\nimport { Subscription } from 'rxjs/Subscription';\nimport { SidePanelService } from './side-panel.service';\nexport class SidePanelComponent implements OnInit, OnDestroy {\n/**\n * @return {?}\n */\nget open(): boolean {\n        return this.service.open$.value;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset open(value: boolean) {\n        this.service.open$.next(value);\n    }\n\n    \n    \n    inline = false;\n\n    \n    attachTo: 'window' | 'container' = 'window';\n\n    \n    width: string | number = '50%';\n\n    \n    top: string | number = '0';\n\n    \n    \n    modal = false;\n\n    \n    \n    animate = false;\n\n    \n    closeOnExternalClick = false;\n\n    \n    openChange = new EventEmitter<boolean>();\n/**\n * @return {?}\n */\nget position() {\n        if (this.inline) {\n            return 'static';\n        }\n        if (this.attachTo === 'container') {\n            return 'absolute';\n        }\n        return 'fixed';\n    }\n/**\n * @return {?}\n */\nget cssWidth(): string {\n        if (typeof this.width === 'number') {\n            return this.width === 0 ? '0' : this.width + 'px';\n        }\n        return this.width;\n    }\n/**\n * @return {?}\n */\nget cssTop(): string {\n        if (typeof this.top === 'number') {\n            return this.top === 0 ? '0' : this.top + 'px';\n        }\n        return this.top;\n    }\n/**\n * @return {?}\n */\nget componentWidth(): string {\n        if (this.inline) {\n            return this.open ? this.cssWidth : '0';\n        }\n        return null;\n    }\n/**\n * @return {?}\n */\nget hostWidth() {\n        return this.inline ? '100%' : this.cssWidth;\n    }\nprivate _subscription: Subscription;\n/**\n * @param {?} service\n * @param {?} _elementRef\n */\nconstructor(\n        protected service: SidePanelService,\nprivate _elementRef: ElementRef\n    ) { }\n/**\n * @return {?}\n */\nngOnInit() {\n        this._subscription = this.service.open$.subscribe((next) => {\n            this.openChange.emit(next);\n        });\n    }\n/**\n * @return {?}\n */\nngOnDestroy() {\n        this._subscription.unsubscribe();\n    }\n/**\n * @return {?}\n */\nopenPanel() {\n        this.service.open();\n    }\n/**\n * @return {?}\n */\nclosePanel() {\n        this.service.close();\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nclickHandler(event: MouseEvent) {\n        if (!this.open || !this.closeOnExternalClick) {\n            return;\n        }\n\n        const /** @type {?} */ target = /** @type {?} */(( event.target as HTMLElement));\n\n        if (!this._elementRef.nativeElement.contains(target) ||\n            (target && target.classList.contains('modal-backdrop'))) {\n            this.closePanel();\n        }\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-side-panel',\n    exportAs: 'ux-side-panel',\n    template: `\n      <div *ngIf=\"modal && open\" class=\"modal-backdrop\"\n          [style.position]=\"position\"\n          [style.top]=\"cssTop\"></div>\n\n      <div class=\"ux-side-panel-host\"\n          [class.modal-panel]=\"modal\"\n          [style.position]=\"position\"\n          [style.width]=\"hostWidth\"\n          [style.top]=\"cssTop\">\n          <ng-content></ng-content>\n      </div>\n    `,\n    providers: [SidePanelService],\n    host: {\n        'class': 'ux-side-panel'\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: SidePanelService, },\n{type: ElementRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'open': [{ type: Input },{ type: HostBinding, args: ['class.open', ] },],\n'inline': [{ type: Input },{ type: HostBinding, args: ['class.inline', ] },],\n'attachTo': [{ type: Input },],\n'width': [{ type: Input },],\n'top': [{ type: Input },],\n'modal': [{ type: Input },{ type: HostBinding, args: ['attr.aria-modal', ] },],\n'animate': [{ type: Input },{ type: HostBinding, args: ['class.animate', ] },],\n'closeOnExternalClick': [{ type: Input },],\n'openChange': [{ type: Output },],\n'componentWidth': [{ type: HostBinding, args: ['style.width', ] },],\n'closePanel': [{ type: HostListener, args: ['document:keyup.escape', ] },],\n'clickHandler': [{ type: HostListener, args: ['document:click', ['$event'], ] },],\n};\n}\n\nfunction SidePanelComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nSidePanelComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSidePanelComponent.ctorParameters;\n/** @type {?} */\nSidePanelComponent.propDecorators;\n/** @type {?} */\nSidePanelComponent.prototype.inline;\n/** @type {?} */\nSidePanelComponent.prototype.attachTo;\n/** @type {?} */\nSidePanelComponent.prototype.width;\n/** @type {?} */\nSidePanelComponent.prototype.top;\n/** @type {?} */\nSidePanelComponent.prototype.modal;\n/** @type {?} */\nSidePanelComponent.prototype.animate;\n/** @type {?} */\nSidePanelComponent.prototype.closeOnExternalClick;\n/** @type {?} */\nSidePanelComponent.prototype.openChange;\n/** @type {?} */\nSidePanelComponent.prototype._subscription;\n/** @type {?} */\nSidePanelComponent.prototype.service;\n/** @type {?} */\nSidePanelComponent.prototype._elementRef;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Directive, Input, Output, EventEmitter, ContentChild, ElementRef } from '@angular/core';\nimport { Subscription } from 'rxjs/Subscription';\nimport { SidePanelComponent } from '../side-panel/side-panel.component';\nimport { SidePanelService } from '../side-panel/side-panel.service';\nexport class ItemDisplayPanelContentDirective { static decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: '[uxItemDisplayPanelContent]'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ItemDisplayPanelContentDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nItemDisplayPanelContentDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nItemDisplayPanelContentDirective.ctorParameters;\n}\n\nexport class ItemDisplayPanelFooterDirective { static decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: '[uxItemDisplayPanelFooter]'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ItemDisplayPanelFooterDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nItemDisplayPanelFooterDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nItemDisplayPanelFooterDirective.ctorParameters;\n}\n\nexport class ItemDisplayPanelComponent extends SidePanelComponent {\n\n     header: string;\n\n     boxShadow: boolean = true;\n\n     closeVisible: boolean = true;\n/**\n * @return {?}\n */\nget preventClose(): boolean {\n        return !this.closeOnExternalClick;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset preventClose(value: boolean) {\n        this.closeOnExternalClick = !value;\n    }\n\n     shadow: boolean = false;\n\n     footer: ItemDisplayPanelFooterDirective;\n\n     visibleChange: EventEmitter<boolean> = new EventEmitter<boolean>();\n/**\n * @deprecated \n * Title used for adding tooltips and shouldn't be used as an input\n * instead header will be used. This is here to support backward compatibility only\n * this property should not be used.\n * @param {?} value\n * @return {?}\n */\nset title(value: string) {\n        this.header = value;\n    }\n/**\n * @return {?}\n */\nget title() {\n        return this.header;\n    }\n/**\n * @param {?} visible\n * @return {?}\n */\nset visible(visible: boolean) {\n        this.open = visible;\n    }\n/**\n * @return {?}\n */\nget visible() {\n        return this.open;\n    }\nprivate _itemDisplayPanelSubscription: Subscription;\n/**\n * @param {?} service\n * @param {?} elementRef\n */\nconstructor(service: SidePanelService, elementRef: ElementRef) {\n        super(service, elementRef);\n\n        this.animate = false;\n        this.closeOnExternalClick = true;\n    }\n/**\n * @return {?}\n */\nngOnInit() {\n        this._itemDisplayPanelSubscription = this.service.open$.subscribe((next) => {\n            this.visibleChange.emit(next);\n        });\n    }\n/**\n * @return {?}\n */\nngOnDestroy() {\n        this._itemDisplayPanelSubscription.unsubscribe();\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-item-display-panel',\n    template: `\n      <div class=\"ux-side-panel-host ux-item-display-panel\"\n          [class.box-shadow]=\"boxShadow\"\n          [style.position]=\"position\"\n          [style.width]=\"hostWidth\"\n          [style.top]=\"cssTop\">\n\n          <div class=\"ux-side-panel-header\" [class.item-display-panel-shadow]=\"shadow\">\n              <h3>{{ header }}</h3>\n              <button *ngIf=\"closeVisible\" type=\"button\" class=\"btn btn-lg btn-link btn-icon button-secondary\" (click)=\"visible = false\">\n                  <i class=\"hpe-icon hpe-close\"></i>\n              </button>\n          </div>\n\n          <div class=\"ux-side-panel-content\">\n              <ng-content select=\"[uxItemDisplayPanelContent]\"></ng-content>\n          </div>\n\n          <div class=\"ux-side-panel-footer\" *ngIf=\"footer\">\n              <ng-content select=\"[uxItemDisplayPanelFooter]\"></ng-content>\n          </div>\n\n      </div>\n    `,\n    providers: [SidePanelService],\n    host: {\n        'class': 'ux-side-panel ux-item-display-panel'\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: SidePanelService, },\n{type: ElementRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'header': [{ type: Input },],\n'boxShadow': [{ type: Input },],\n'closeVisible': [{ type: Input },],\n'preventClose': [{ type: Input },],\n'shadow': [{ type: Input },],\n'footer': [{ type: ContentChild, args: [ItemDisplayPanelFooterDirective, ] },],\n'visibleChange': [{ type: Output },],\n'title': [{ type: Input },],\n'visible': [{ type: Input },],\n};\n}\n\nfunction ItemDisplayPanelComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nItemDisplayPanelComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nItemDisplayPanelComponent.ctorParameters;\n/** @type {?} */\nItemDisplayPanelComponent.propDecorators;\n/** @type {?} */\nItemDisplayPanelComponent.prototype.header;\n/** @type {?} */\nItemDisplayPanelComponent.prototype.boxShadow;\n/** @type {?} */\nItemDisplayPanelComponent.prototype.closeVisible;\n/** @type {?} */\nItemDisplayPanelComponent.prototype.shadow;\n/** @type {?} */\nItemDisplayPanelComponent.prototype.footer;\n/** @type {?} */\nItemDisplayPanelComponent.prototype.visibleChange;\n/** @type {?} */\nItemDisplayPanelComponent.prototype._itemDisplayPanelSubscription;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { CommonModule } from '@angular/common';\nimport { ItemDisplayPanelComponent, ItemDisplayPanelContentDirective, ItemDisplayPanelFooterDirective } from './item-display-panel.component';\nimport { NgModule, Input } from '@angular/core';\nimport { ModalModule } from 'ngx-bootstrap/modal';\n\nconst /** @type {?} */ DECLARATIONS = [\n    ItemDisplayPanelComponent,\n    ItemDisplayPanelContentDirective,\n    ItemDisplayPanelFooterDirective\n];\nexport class ItemDisplayPanelModule {static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        CommonModule\n    ],\n    exports: DECLARATIONS,\n    declarations: DECLARATIONS\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ItemDisplayPanelModule_tsickle_Closure_declarations() {\n/** @type {?} */\nItemDisplayPanelModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nItemDisplayPanelModule.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Input, EventEmitter } from '@angular/core';\nexport class WizardStepComponent {\n    \n     header: string;\n     valid: boolean = true;\n     visitedChange = new EventEmitter<boolean>();\nprivate _active: boolean = false;\nprivate _visited: boolean = false;\n/**\n * @return {?}\n */\nget visited(): boolean {\n        return this._visited;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset visited(value: boolean) {\n        this._visited = value;\n        this.visitedChange.next(value);\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset active(value: boolean) {\n        \n        // store the active state of the step\n        this._active = value;\n\n        // if the value is true then the step should also be marked as visited\n        if (value === true) {\n            this.visited = true;\n        }\n    }\n/**\n * @return {?}\n */\nget active(): boolean {\n        return this._active;\n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-wizard-step',\n    template: `\n      <ng-container *ngIf=\"active\">\n          <ng-content></ng-content>\n      </ng-container>\n    `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'header': [{ type: Input },],\n'valid': [{ type: Input },],\n'visitedChange': [{ type: Input },],\n'visited': [{ type: Input },],\n};\n}\n\nfunction WizardStepComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nWizardStepComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nWizardStepComponent.ctorParameters;\n/** @type {?} */\nWizardStepComponent.propDecorators;\n/** @type {?} */\nWizardStepComponent.prototype.header;\n/** @type {?} */\nWizardStepComponent.prototype.valid;\n/** @type {?} */\nWizardStepComponent.prototype.visitedChange;\n/** @type {?} */\nWizardStepComponent.prototype._active;\n/** @type {?} */\nWizardStepComponent.prototype._visited;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { AfterViewInit, Component, ContentChildren, EventEmitter, Input, Output, QueryList } from '@angular/core';\nimport { WizardStepComponent } from './wizard-step.component';\nexport class WizardComponent implements AfterViewInit {\nprivate _step: number = 0;\n\n     steps = new QueryList<WizardStepComponent>();\n\n     orientation: 'horizontal' | 'vertical' = 'horizontal';\n\n     nextText: string = 'Next';\n     previousText: string = 'Previous';\n     cancelText: string = 'Cancel';\n     finishText: string = 'Finish';\n\n     nextTooltip: string = 'Go to the next step';\n     previousTooltip: string = 'Go to the previous step';\n     cancelTooltip: string = 'Cancel the wizard';\n     finishTooltip: string = 'Finish the wizard';\n\n     nextDisabled: boolean = false;\n     previousDisabled: boolean = false;\n     cancelDisabled: boolean = false;\n     finishDisabled: boolean = false;\n\n     nextVisible: boolean = true;\n     previousVisible: boolean = true;\n     cancelVisible: boolean = true;\n     finishVisible: boolean = true;\n     cancelAlwaysVisible: boolean = false;\n     finishAlwaysVisible: boolean = false;\n\n     onNext = new EventEmitter<number>();\n     onPrevious = new EventEmitter<number>();\n     onCancel = new EventEmitter<void>();\n     onFinishing = new EventEmitter<void>();\n     onFinish = new EventEmitter<void>();\n     stepChanging = new EventEmitter<StepChangingEvent>();\n     stepChange = new EventEmitter<number>();\n\n    invalidIndicator: boolean = false;\n/**\n * @return {?}\n */\nget step() {\n        return this._step;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset step(value: number) {\n\n        // only accept numbers as valid options\n        if (typeof value === 'number') {\n\n            // store the active step\n            this._step = value;\n\n            // update which steps should be active\n            this.update();\n\n            // emit the change event\n            this.stepChange.next(this.step);\n\n            // reset the invalid state\n            this.invalidIndicator = false;\n        }\n    }\n/**\n * @return {?}\n */\nngAfterViewInit(): void {\n\n        // initially set the correct visibility of the steps\n        setTimeout(this.update.bind(this));\n    }\n/**\n * Navigate to the next step\n * @return {?}\n */\nnext(): void {\n\n        this.stepChanging.next(new StepChangingEvent(this.step, this.step + 1));\n\n        // check if current step is invalid\n        if (!this.getCurrentStep().valid) {\n            this.invalidIndicator = true;\n            return;\n        }\n\n        // check if we are currently on the last step\n        if ((this.step + 1) < this.steps.length) {\n            this.step++;\n\n            // emit the current step\n            this.onNext.next(this.step);\n        }\n    }\n/**\n * Navigate to the previous step\n * @return {?}\n */\nprevious(): void {\n\n        this.stepChanging.next(new StepChangingEvent(this.step, this.step - 1));\n\n        // check if we are currently on the last step\n        if (this.step > 0) {\n            this.step--;\n\n            // emit the current step\n            this.onPrevious.next(this.step);\n        }\n    }\n/**\n * Perform actions when the finish button is clicked\n * @return {?}\n */\nfinish(): Promise<void> {\n\n        // fires when the finish button is clicked always\n        this.onFinishing.next();\n\n        /**\n         * This is required because we need to ensure change detection has run\n         * to determine whether or not we have the latest value for the 'valid' input\n         * on the current step. Unfortunately we can't use ChangeDetectorRef as we are looking to run\n         * on content children, and we cant use ApplicationRef.tick() as this does not work in a hybrid app, eg. our docs\n         */\n        return new Promise<void>(resolve => {\n            setTimeout(() => {\n\n                // only fires when the finish button is clicked and the step is valid\n                if (this.getCurrentStep().valid) {\n                    this.onFinish.next();        \n                }\n\n                resolve();\n            });\n        });\n    }\n/**\n * Perform actions when the cancel button is clicked\n * @return {?}\n */\ncancel(): void {\n        this.onCancel.next();\n    }\n/**\n * Update the active state of each step\n * @return {?}\n */\nupdate(): void {\n        // update which steps should be active\n        this.steps.forEach((step, idx) => step.active = idx === this.step);\n    }\n/**\n * Jump to a specific step only if the step has previously been visited\n * @param {?} step\n * @return {?}\n */\ngotoStep(step: WizardStepComponent): void {\n        if (step.visited) {\n\n            const /** @type {?} */ stepIndex = this.steps.toArray().findIndex(stp => stp === step);\n\n            this.stepChanging.next(new StepChangingEvent(this.step, stepIndex));\n\n            this.step = stepIndex;\n        }\n    }\n/**\n * Determine if the current step is the last step\n * @return {?}\n */\nisLastStep(): boolean {\n        return this.step === (this.steps.length - 1);\n    }\n/**\n * Reset the wizard - goes to first step and resets visited state\n * @return {?}\n */\nreset(): void {\n\n        // mark all steps as not visited\n        this.steps.forEach(step => step.visited = false);\n\n        // go to the first step\n        this.step = 0;\n    }\n/**\n * Get the step at the current index\n * @return {?}\n */\ngetCurrentStep(): WizardStepComponent {\n        return this.getStepAtIndex(this.step);\n    }\n/**\n * Return a step at a specific index\n * @param {?} index\n * @return {?}\n */\ngetStepAtIndex(index: number): WizardStepComponent {\n        return this.steps.toArray()[index];\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-wizard',\n    template: `\n      <div class=\"wizard-body\">\n\n          <div class=\"wizard-steps\">\n    \n              <div class=\"wizard-step\" [class.active]=\"stp.active\" [class.visited]=\"stp.visited\" [class.invalid]=\"stp.active && !stp.valid && invalidIndicator\" (click)=\"gotoStep(stp)\" *ngFor=\"let stp of steps\">\n                  {{ stp.header }}\n              </div>\n    \n          </div>\n    \n          <div class=\"wizard-content\">\n              <ng-content></ng-content>\n          </div>\n    \n      </div>\n\n      <div class=\"wizard-footer\">\n          <button #tip=\"bs-tooltip\" class=\"btn button-secondary\" *ngIf=\"previousVisible\" [tooltip]=\"previousTooltip\" container=\"body\" [disabled]=\"previousDisabled || step === 0\"\n              (click)=\"previous(); tip.hide()\">{{ previousText }}</button>\n\n          <button #tip=\"bs-tooltip\" class=\"btn button-primary\" *ngIf=\"nextVisible && !isLastStep()\" [tooltip]=\"nextTooltip\" container=\"body\" [disabled]=\"nextDisabled\"\n              (click)=\"next(); tip.hide()\">{{ nextText }}</button>\n\n          <button #tip=\"bs-tooltip\" class=\"btn button-primary\" *ngIf=\"finishVisible && isLastStep() || finishAlwaysVisible\" [tooltip]=\"finishTooltip\"\n              container=\"body\" [disabled]=\"finishDisabled\" (click)=\"finish(); tip.hide()\">{{ finishText }}</button>\n\n          <button #tip=\"bs-tooltip\" class=\"btn button-secondary\" *ngIf=\"cancelVisible && !isLastStep() || cancelAlwaysVisible\" [tooltip]=\"cancelTooltip\"\n              container=\"body\" [disabled]=\"cancelDisabled\" (click)=\"cancel(); tip.hide()\">{{ cancelText }}</button>\n      </div>\n    `,\n    host: {\n        '[class]': 'orientation'\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'steps': [{ type: ContentChildren, args: [WizardStepComponent, ] },],\n'orientation': [{ type: Input },],\n'nextText': [{ type: Input },],\n'previousText': [{ type: Input },],\n'cancelText': [{ type: Input },],\n'finishText': [{ type: Input },],\n'nextTooltip': [{ type: Input },],\n'previousTooltip': [{ type: Input },],\n'cancelTooltip': [{ type: Input },],\n'finishTooltip': [{ type: Input },],\n'nextDisabled': [{ type: Input },],\n'previousDisabled': [{ type: Input },],\n'cancelDisabled': [{ type: Input },],\n'finishDisabled': [{ type: Input },],\n'nextVisible': [{ type: Input },],\n'previousVisible': [{ type: Input },],\n'cancelVisible': [{ type: Input },],\n'finishVisible': [{ type: Input },],\n'cancelAlwaysVisible': [{ type: Input },],\n'finishAlwaysVisible': [{ type: Input },],\n'onNext': [{ type: Output },],\n'onPrevious': [{ type: Output },],\n'onCancel': [{ type: Output },],\n'onFinishing': [{ type: Output },],\n'onFinish': [{ type: Output },],\n'stepChanging': [{ type: Output },],\n'stepChange': [{ type: Output },],\n'step': [{ type: Input },],\n};\n}\n\nfunction WizardComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nWizardComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nWizardComponent.ctorParameters;\n/** @type {?} */\nWizardComponent.propDecorators;\n/** @type {?} */\nWizardComponent.prototype._step;\n/** @type {?} */\nWizardComponent.prototype.steps;\n/** @type {?} */\nWizardComponent.prototype.orientation;\n/** @type {?} */\nWizardComponent.prototype.nextText;\n/** @type {?} */\nWizardComponent.prototype.previousText;\n/** @type {?} */\nWizardComponent.prototype.cancelText;\n/** @type {?} */\nWizardComponent.prototype.finishText;\n/** @type {?} */\nWizardComponent.prototype.nextTooltip;\n/** @type {?} */\nWizardComponent.prototype.previousTooltip;\n/** @type {?} */\nWizardComponent.prototype.cancelTooltip;\n/** @type {?} */\nWizardComponent.prototype.finishTooltip;\n/** @type {?} */\nWizardComponent.prototype.nextDisabled;\n/** @type {?} */\nWizardComponent.prototype.previousDisabled;\n/** @type {?} */\nWizardComponent.prototype.cancelDisabled;\n/** @type {?} */\nWizardComponent.prototype.finishDisabled;\n/** @type {?} */\nWizardComponent.prototype.nextVisible;\n/** @type {?} */\nWizardComponent.prototype.previousVisible;\n/** @type {?} */\nWizardComponent.prototype.cancelVisible;\n/** @type {?} */\nWizardComponent.prototype.finishVisible;\n/** @type {?} */\nWizardComponent.prototype.cancelAlwaysVisible;\n/** @type {?} */\nWizardComponent.prototype.finishAlwaysVisible;\n/** @type {?} */\nWizardComponent.prototype.onNext;\n/** @type {?} */\nWizardComponent.prototype.onPrevious;\n/** @type {?} */\nWizardComponent.prototype.onCancel;\n/** @type {?} */\nWizardComponent.prototype.onFinishing;\n/** @type {?} */\nWizardComponent.prototype.onFinish;\n/** @type {?} */\nWizardComponent.prototype.stepChanging;\n/** @type {?} */\nWizardComponent.prototype.stepChange;\n/** @type {?} */\nWizardComponent.prototype.invalidIndicator;\n}\n\nexport class StepChangingEvent {\n/**\n * @param {?} from\n * @param {?} to\n */\nconstructor(public from: number,\npublic to: number) { }\n}\n\nfunction StepChangingEvent_tsickle_Closure_declarations() {\n/** @type {?} */\nStepChangingEvent.prototype.from;\n/** @type {?} */\nStepChangingEvent.prototype.to;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\nimport { WizardComponent } from './wizard.component';\nimport { WizardStepComponent } from './wizard-step.component';\n\nconst /** @type {?} */ DECLARATIONS = [\n    WizardComponent,\n    WizardStepComponent\n];\nexport class WizardModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        CommonModule,\n        TooltipModule.forRoot()\n    ],\n    exports: DECLARATIONS,\n    declarations: DECLARATIONS\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction WizardModule_tsickle_Closure_declarations() {\n/** @type {?} */\nWizardModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nWizardModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs/Subject';\nimport { MarqueeWizardStepComponent } from './marquee-wizard-step.component';\n/**\n * This service is required to provide a form of communication\n * between the marquee wizard steps and the containing marquee wizard.\n * We cannot inject the Host due to the steps being content children \n * rather than view children.\n */\nexport class MarqueeWizardService {\n    valid$ = new Subject<MarqueeWizardValidEvent>();\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction MarqueeWizardService_tsickle_Closure_declarations() {\n/** @type {?} */\nMarqueeWizardService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMarqueeWizardService.ctorParameters;\n/** @type {?} */\nMarqueeWizardService.prototype.valid$;\n}\n\n\nexport interface MarqueeWizardValidEvent {\n    step: MarqueeWizardStepComponent;\n    valid: boolean;\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { WizardStepComponent } from '../wizard/index';\nimport { MarqueeWizardService } from './marquee-wizard.service';\nexport class MarqueeWizardStepComponent extends WizardStepComponent {\n\n     icon: string;\n     completed: boolean = false;\n     completedChange = new EventEmitter<boolean>();\n/**\n * @return {?}\n */\nget valid(): boolean {\n        return this._valid;\n    }\n/**\n * @param {?} valid\n * @return {?}\n */\nset valid(valid: boolean) {\n        this._valid = valid;\n\n        if (this._marqueeWizardService) {\n            this._marqueeWizardService.valid$.next({ step: this, valid: valid });\n        }\n    }\nprivate _valid: boolean = true;\n/**\n * @param {?} _marqueeWizardService\n */\nconstructor(private _marqueeWizardService: MarqueeWizardService) {\n        super();\n    }\n/**\n * Update the completed state and emit the latest value\n * @param {?} completed whether or not the step is completed\n * @return {?}\n */\nsetCompleted(completed: boolean): void {\n        this.completed = completed;\n        this.completedChange.emit(completed);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-marquee-wizard-step',\n    template: `\n      <ng-container *ngIf=\"active\">\n          <ng-content></ng-content>\n      </ng-container>\n    `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: MarqueeWizardService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'icon': [{ type: Input },],\n'completed': [{ type: Input },],\n'completedChange': [{ type: Output },],\n};\n}\n\nfunction MarqueeWizardStepComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nMarqueeWizardStepComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMarqueeWizardStepComponent.ctorParameters;\n/** @type {?} */\nMarqueeWizardStepComponent.propDecorators;\n/** @type {?} */\nMarqueeWizardStepComponent.prototype.icon;\n/** @type {?} */\nMarqueeWizardStepComponent.prototype.completed;\n/** @type {?} */\nMarqueeWizardStepComponent.prototype.completedChange;\n/** @type {?} */\nMarqueeWizardStepComponent.prototype._valid;\n/** @type {?} */\nMarqueeWizardStepComponent.prototype._marqueeWizardService;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Input, ContentChildren, QueryList, TemplateRef } from '@angular/core';\nimport { filter } from 'rxjs/operators/filter';\n\nimport { WizardComponent } from '../wizard/index';\nimport { MarqueeWizardStepComponent } from './marquee-wizard-step.component';\nimport { MarqueeWizardService, MarqueeWizardValidEvent } from './marquee-wizard.service';\nexport class MarqueeWizardComponent extends WizardComponent {\n\n     description: string | TemplateRef<any>;\n     steps = new QueryList<MarqueeWizardStepComponent>();\n/**\n * @return {?}\n */\nget isTemplate(): boolean {\n        return this.description && this.description instanceof TemplateRef;\n    }\n/**\n * @param {?} marqueeWizardService\n */\nconstructor(marqueeWizardService: MarqueeWizardService) {\n        super();\n\n        marqueeWizardService.valid$.pipe(\n            filter((event: MarqueeWizardValidEvent) => !event.valid)\n        ).subscribe(this.validChange.bind(this));\n    }\n/**\n * If the current step is valid, mark it as\n * complete and go to the next step\n * @return {?}\n */\nnext(): void {\n\n        // get the current step\n        const /** @type {?} */ step = /** @type {?} */(( this.getCurrentStep() as MarqueeWizardStepComponent));\n\n        if (step.valid) {\n            super.next();\n\n            // mark this step as completed\n            step.setCompleted(true);\n        }\n    }\n/**\n * Emit the onFinishing event and if valid the onFinish event.\n * Also mark the final step as completed if it is valid\n * @return {?}\n */\nfinish(): Promise<void> {\n\n        // get the current step\n        const /** @type {?} */ step = /** @type {?} */(( this.getCurrentStep() as MarqueeWizardStepComponent));\n\n        // call the original finish function\n        return super.finish().then(() => {\n            // if the step is valid indicate that it is now complete\n            if (step.valid) {\n                step.setCompleted(true);\n            }\n        });\n    }\n/**\n * If a step in the wizard becomes invalid, all steps sequentially after\n * it, should become unvisited and incomplete\n * @param {?} state\n * @return {?}\n */\nvalidChange(state: MarqueeWizardValidEvent): void {\n        \n        const /** @type {?} */ steps = this.steps.toArray();\n        const /** @type {?} */ current = steps.findIndex(step => step === state.step);\n        const /** @type {?} */ affected = steps.slice(current);\n\n        affected.forEach(step => {\n\n            // the step should no longer be completed\n            step.completed = false;\n\n            // if the step is not the current step then also mark it as unvisited\n            if (step !== state.step) {\n                step.visited = false;\n            }\n        });\n\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-marquee-wizard',\n    template: `\n      <div class=\"marquee-wizard-side-panel\">\n\n          <div class=\"marquee-wizard-description-container\" *ngIf=\"description\">\n              <!-- If a template was provided display it -->\n              <ng-container *ngIf=\"isTemplate\" [ngTemplateOutlet]=\"description\"></ng-container>\n\n              <!-- Otherwise wimply display the string -->\n              <ng-container *ngIf=\"!isTemplate\">\n                  <p>{{ description }}</p>\n              </ng-container>\n          </div>\n\n          <ul class=\"marquee-wizard-steps\">\n\n              <li class=\"marquee-wizard-step\" *ngFor=\"let step of steps\" (click)=\"gotoStep(step)\" [class.active]=\"step.active\" [class.visited]=\"step.visited\" [class.invalid]=\"!step.valid\">\n                  <i class=\"marquee-wizard-step-icon\" [ngClass]=\"step.icon\"></i>\n                  <span class=\"marquee-wizard-step-title\">{{ step.header }}</span>\n                  <span class=\"marquee-wizard-step-status hpe-icon hpe-checkmark\" *ngIf=\"step.completed\"></span>\n              </li>\n\n          </ul>\n      </div>\n\n      <div class=\"marquee-wizard-content-panel\">\n          <div class=\"marquee-wizard-content\">\n              <ng-content></ng-content>\n          </div>\n\n          <div class=\"modal-footer\">\n\n              <button #tip=\"bs-tooltip\" class=\"btn button-secondary\" *ngIf=\"previousVisible\" [tooltip]=\"previousTooltip\" container=\"body\"\n                  [disabled]=\"previousDisabled || step === 0\" (click)=\"previous(); tip.hide()\">{{ previousText }}</button>\n\n              <button #tip=\"bs-tooltip\" class=\"btn button-primary\" *ngIf=\"nextVisible && !isLastStep()\" [tooltip]=\"nextTooltip\" container=\"body\"\n                  [disabled]=\"nextDisabled\" (click)=\"next(); tip.hide()\">{{ nextText }}</button>\n\n              <button #tip=\"bs-tooltip\" class=\"btn button-primary\" *ngIf=\"finishVisible && isLastStep() || finishAlwaysVisible\" [tooltip]=\"finishTooltip\"\n                  container=\"body\" [disabled]=\"finishDisabled\" (click)=\"finish(); tip.hide()\">{{ finishText }}</button>\n\n              <button #tip=\"bs-tooltip\" class=\"btn button-secondary\" *ngIf=\"cancelVisible && !isLastStep() || cancelAlwaysVisible\" [tooltip]=\"cancelTooltip\"\n                  container=\"body\" [disabled]=\"cancelDisabled\" (click)=\"cancel(); tip.hide()\">{{ cancelText }}</button>\n          </div>\n      </div>\n    `,\n    providers: [ MarqueeWizardService ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: MarqueeWizardService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'description': [{ type: Input },],\n'steps': [{ type: ContentChildren, args: [MarqueeWizardStepComponent, ] },],\n};\n}\n\nfunction MarqueeWizardComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nMarqueeWizardComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMarqueeWizardComponent.ctorParameters;\n/** @type {?} */\nMarqueeWizardComponent.propDecorators;\n/** @type {?} */\nMarqueeWizardComponent.prototype.description;\n/** @type {?} */\nMarqueeWizardComponent.prototype.steps;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\n\nimport { WizardModule } from '../wizard/index';\nimport { MarqueeWizardComponent } from './marquee-wizard.component';\nimport { MarqueeWizardStepComponent } from './marquee-wizard-step.component';\nexport class MarqueeWizardModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        CommonModule,\n        WizardModule,\n        TooltipModule.forRoot()\n    ],\n    exports: [\n        MarqueeWizardComponent,\n        MarqueeWizardStepComponent\n    ],\n    declarations: [\n        MarqueeWizardComponent,\n        MarqueeWizardStepComponent\n    ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction MarqueeWizardModule_tsickle_Closure_declarations() {\n/** @type {?} */\nMarqueeWizardModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMarqueeWizardModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Input } from '@angular/core';\nexport class NavigationComponent {\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-navigation',\n    template: `\n      <nav class=\"tree\" role=\"navigation\">\n          <ol class=\"nav\">\n              <ng-content></ng-content>\n          </ol>\n      </nav>\n    `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction NavigationComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nNavigationComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNavigationComponent.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { ActivatedRoute, NavigationEnd, Router, RouterState, UrlTree } from '@angular/router';\nimport { AfterContentInit, AfterViewInit, Component, ContentChildren, ElementRef, Input, OnDestroy, Optional, QueryList, Renderer2, SkipSelf, HostBinding } from '@angular/core';\nimport { filter } from 'rxjs/operators/filter';\nimport { Subscription } from 'rxjs/Subscription';\nexport class NavigationItemComponent implements AfterViewInit, AfterContentInit, OnDestroy {\n\n     header: string;\n     icon: string;\n     link: string;\n      expanded: boolean = false;\n/**\n * @return {?}\n */\nget active(): boolean {\n        if (this.link) {\n            return this._router.isActive(this.link, true);\n        }\n    }\n\n    level: number = 1;\n    indentWithoutArrow: boolean = true;\nprivate _navigationEnd: Subscription;\nprivate _childrenChanges: Subscription;\nprivate _children: QueryList<NavigationItemComponent>;\n/**\n * @return {?}\n */\nget children(): NavigationItemComponent[] {\n        return this._children.filter(item => item !== this);\n    }\n/**\n * @param {?} _elementRef\n * @param {?} _renderer\n * @param {?} _parent\n * @param {?} _router\n * @param {?} _activatedRoute\n */\nconstructor(\nprivate _elementRef: ElementRef,\nprivate _renderer: Renderer2,\nprivate _parent: NavigationItemComponent,\nprivate _router: Router,\nprivate _activatedRoute: ActivatedRoute\n    ) {\n        this.level = _parent ? _parent.level + 1 : 1;\n\n        this._navigationEnd = _router.events.pipe(filter(event => event instanceof NavigationEnd))\n            .subscribe(() => this.expanded = this.hasActiveLink(this.link));\n    }\n/**\n * @return {?}\n */\nngAfterViewInit(): void {\n        // Add classes to parent for styling\n        const /** @type {?} */ parentListElement = this._elementRef.nativeElement.parentElement;\n        if (parentListElement) {\n            const /** @type {?} */ levelClass: string = this.getLevelClass();\n            if (levelClass.length > 0) {\n                this._renderer.addClass(parentListElement, 'nav');\n                this._renderer.addClass(parentListElement, levelClass);\n            }\n        }\n    }\n/**\n * @return {?}\n */\nngAfterContentInit(): void {\n        // Set 'indentWithoutArrow'\n        this.setIndentWithoutArrow();\n\n        // Update 'indentWithoutArrow' in response to changes to children\n        this._childrenChanges = this._children.changes.subscribe(() => this.setIndentWithoutArrow());\n    }\n/**\n * @return {?}\n */\nngOnDestroy(): void {\n        this._navigationEnd.unsubscribe();\n        this._childrenChanges.unsubscribe();\n    }\n/**\n * @param {?} link\n * @return {?}\n */\nprivate hasActiveLink(link: string | UrlTree): boolean {\n\n        const /** @type {?} */ tree = this._router.createUrlTree([link], {\n            relativeTo: this._activatedRoute,\n            queryParams: this._activatedRoute.snapshot.queryParams,\n            fragment: this._activatedRoute.snapshot.fragment\n        });\n\n        if (link && this._router.isActive(tree, true)) {\n            return true;\n        }\n\n        // If this component has children, check if any of them, or their descendants, are active.\n        return this.children.some((item) => item.hasActiveLink(item.link));\n    }\n/**\n * @return {?}\n */\nprivate getLevelClass(): string {\n        switch (this.level) {\n            case 2:\n                return 'nav-second-level';\n            case 3:\n                return 'nav-third-level';\n            case 4:\n                return 'nav-fourth-level';\n            case 5:\n                return 'nav-fifth-level';\n        }\n\n        return '';\n    }\n/**\n * @return {?}\n */\nprivate setIndentWithoutArrow(): void {\n        if (this.children.length > 0) {\n            // If this element has children it will be indented and will have an arrow\n            this.indentWithoutArrow = false;\n        } else if (this._parent) {\n           // If this element has a parent, indent it if any of its siblings have children\n            this.indentWithoutArrow = !this._parent.children.every((item) => item.children.length === 0);\n        } else {\n            // Top-level elements should be indented\n            this.indentWithoutArrow = true;\n        }\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: '[ux-navigation-item]',\n    template: `\n      <a *ngIf=\"link\" [class.has-arrow]=\"children.length > 0\" [class.no-arrow]=\"indentWithoutArrow\" [routerLink]=\"link\">\n          <span>{{header}}</span>\n      </a>\n      <a *ngIf=\"!link\" (click)=\"expanded = !expanded\" [class.has-arrow]=\"children.length > 0\" [class.no-arrow]=\"indentWithoutArrow\">\n          <span>{{header}}</span>\n      </a>\n      <ng-content></ng-content>\n    `,\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Renderer2, },\n{type: NavigationItemComponent, decorators: [{ type: Optional }, { type: SkipSelf }, ]},\n{type: Router, },\n{type: ActivatedRoute, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'header': [{ type: Input },],\n'icon': [{ type: Input },],\n'link': [{ type: Input },],\n'expanded': [{ type: Input },{ type: HostBinding, args: ['class.selected', ] },],\n'active': [{ type: HostBinding, args: ['class.active', ] },],\n'_children': [{ type: ContentChildren, args: [NavigationItemComponent, { descendants: true }, ] },],\n};\n}\n\nfunction NavigationItemComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nNavigationItemComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNavigationItemComponent.ctorParameters;\n/** @type {?} */\nNavigationItemComponent.propDecorators;\n/** @type {?} */\nNavigationItemComponent.prototype.header;\n/** @type {?} */\nNavigationItemComponent.prototype.icon;\n/** @type {?} */\nNavigationItemComponent.prototype.link;\n/** @type {?} */\nNavigationItemComponent.prototype.expanded;\n/** @type {?} */\nNavigationItemComponent.prototype.level;\n/** @type {?} */\nNavigationItemComponent.prototype.indentWithoutArrow;\n/** @type {?} */\nNavigationItemComponent.prototype._navigationEnd;\n/** @type {?} */\nNavigationItemComponent.prototype._childrenChanges;\n/** @type {?} */\nNavigationItemComponent.prototype._children;\n/** @type {?} */\nNavigationItemComponent.prototype._elementRef;\n/** @type {?} */\nNavigationItemComponent.prototype._renderer;\n/** @type {?} */\nNavigationItemComponent.prototype._parent;\n/** @type {?} */\nNavigationItemComponent.prototype._router;\n/** @type {?} */\nNavigationItemComponent.prototype._activatedRoute;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { NavigationComponent } from './navigation.component';\nimport { NavigationItemComponent } from './navigation-item/navigation-item.component';\nexport class NavigationModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        CommonModule,\n        RouterModule\n    ],\n    exports: [\n        NavigationComponent,\n        NavigationItemComponent\n    ],\n    declarations: [\n        NavigationComponent,\n        NavigationItemComponent\n    ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction NavigationModule_tsickle_Closure_declarations() {\n/** @type {?} */\nNavigationModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNavigationModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable, Inject } from '@angular/core';\nimport { DOCUMENT } from '@angular/platform-browser';\nimport { ColorValueSet, ColorClassSet } from './color.service';\nexport class ColorService {\nprivate _html: string;\nprivate _element: HTMLElement;\nprivate _colors: ThemeColors;\nprivate _colorSet: any = colorSets.keppel;\n/**\n * @param {?} document\n */\nconstructor( document: Document) {\n        if (this._colorSet.colorClassSet) {\n            this.setColors();\n        } else {\n            for (let key in this._colorSet.colorValueSet) {\n                this._colors[key] = this.getColorValueByHex(this._colorSet.colorValueSet[key]);\n            }\n        }\n    }\n/**\n * @return {?}\n */\nprivate setColors() {\n\n        this._html = '';\n\n        for (let /** @type {?} */ key in this._colorSet.colorClassSet) {\n            this._html += '<div class=\"' + this._colorSet.colorClassSet[key] + '-color\"></div>';\n        }\n\n        this._element = document.createElement('div');\n        this._element.className = 'color-chart';\n        this._element.innerHTML = this._html;\n\n        document.body.appendChild(this._element);\n\n        this._colors = {};\n\n        for (let /** @type {?} */ key in this._colorSet.colorClassSet) {\n            this._colors[key] = this.getColorValue(this._colorSet.colorClassSet[key]);\n        }\n\n        this._element.parentNode.removeChild(this._element);\n    }\n/**\n * @param {?} color\n * @return {?}\n */\nprivate getColorValueByHex(color: string): ThemeColor {\n        const /** @type {?} */ hex = color.replace('#', '');\n\n        const /** @type {?} */ r = parseInt(hex.substring(0, 2), 16).toString();\n        const /** @type {?} */ g = parseInt(hex.substring(2, 4), 16).toString();\n        const /** @type {?} */ b = parseInt(hex.substring(4, 6), 16).toString();\n\n        return new ThemeColor(r, g, b, '1');\n    }\n/**\n * @param {?} color\n * @return {?}\n */\nprivate getColorValue(color: ColorIdentifier): ThemeColor {\n\n        const /** @type {?} */ target = this._element.querySelector('.' + this._colorSet.colorClassSet[color] + '-color');\n\n        if (!target) {\n            throw new Error('Invalid color');\n        }\n\n        const /** @type {?} */ colorValue = window.getComputedStyle(target).backgroundColor;\n\n        const /** @type {?} */ rgba = colorValue.match(/^rgba?\\((\\d+),\\s*(\\d+),\\s*(\\d+)(?:,\\s*(\\d+(?:\\.\\d+)?))?\\)$/);\n\n        return new ThemeColor(rgba[1], rgba[2], rgba[3], rgba[4]);\n    }\n/**\n * @param {?} color\n * @return {?}\n */\ngetColor(color: ColorIdentifier): ThemeColor {\n        const /** @type {?} */ themeColor = this._colors[this.resolveColorName(color)];\n        if (!themeColor) {\n            throw new Error('Color not found: ' + color);\n        }\n        \n        return new ThemeColor(themeColor.getRed(), themeColor.getGreen(), themeColor.getBlue(), themeColor.getAlpha());\n    }\n/**\n * @return {?}\n */\ngetColorSet() {\n        return this._colorSet;\n    }\n/**\n * @param {?} colorSet\n * @return {?}\n */\nsetColorSet(colorSet: ColorSet) {\n        this._colorSet = colorSet;\n        this._colors = {};\n\n        if (this._colorSet.colorClassSet) {\n            this.setColors();\n        } else {\n            for (let /** @type {?} */ key in this._colorSet.colorValueSet) {\n                this._colors[key] = this.getColorValueByHex(this._colorSet.colorValueSet[key]);\n            }\n        }\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nresolve(value: string): string {\n        if (!value) {\n            return;\n        }\n        \n        const /** @type {?} */ colorName = this.resolveColorName(value);\n        \n        for (let /** @type {?} */ color in this._colors) {\n            if (colorName === color.toLowerCase()) {\n                return this.getColor(colorName).toRgba();\n            }\n        }\n\n        return value;\n    }\n/**\n * @param {?=} value\n * @return {?}\n */\nresolveColorName(value: string = ''): string {\n        return value.replace(/\\s+/g, '-').toLowerCase();\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Document, decorators: [{ type: Inject, args: [DOCUMENT, ] }, ]},\n];\n}\n\nfunction ColorService_tsickle_Closure_declarations() {\n/** @type {?} */\nColorService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nColorService.ctorParameters;\n/** @type {?} */\nColorService.prototype._html;\n/** @type {?} */\nColorService.prototype._element;\n/** @type {?} */\nColorService.prototype._colors;\n/** @type {?} */\nColorService.prototype._colorSet;\n}\n\nexport class ThemeColor {\nprivate _r: string;\nprivate _g: string;\nprivate _b: string;\nprivate _a: string;\n/**\n * @param {?} r\n * @param {?} g\n * @param {?} b\n * @param {?} a\n */\nconstructor(r: string, g: string, b: string, a: string) {\n        this._r = r;\n        this._g = g;\n        this._b = b;\n        this._a = a === undefined ? '1' : a;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nstatic parse(value: string): ThemeColor {\n        let /** @type {?} */ r, /** @type {?} */ g, /** @type {?} */ b, /** @type {?} */ a = '1';\n\n        const /** @type {?} */ rgbaPattern = /^rgba?\\((\\d+),\\s*(\\d+),\\s*(\\d+)(?:,\\s*(\\d+(?:\\.\\d+)?))?\\)$/;\n        const /** @type {?} */ shortHexPattern = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;\n        const /** @type {?} */ longHexPattern = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/;\n\n        const /** @type {?} */ rgbaMatch = value.match(rgbaPattern);\n        const /** @type {?} */ shortHexMatch = value.match(shortHexPattern);\n        const /** @type {?} */ longHexMatch = value.match(longHexPattern);\n\n        if (rgbaMatch) {\n            r = rgbaMatch[1];\n            g = rgbaMatch[2];\n            b = rgbaMatch[3];\n            a = rgbaMatch[4] ? rgbaMatch[4] : '1';\n        } else if (longHexMatch) {\n            r = parseInt(longHexMatch[1], 16).toString();\n            g = parseInt(longHexMatch[2], 16).toString();\n            b = parseInt(longHexMatch[3], 16).toString();\n        } else if (shortHexMatch) {\n            r = parseInt(shortHexMatch[1] + shortHexMatch[1], 16).toString();\n            g = parseInt(shortHexMatch[2] + shortHexMatch[2], 16).toString();\n            b = parseInt(shortHexMatch[3] + shortHexMatch[3], 16).toString();\n        } else {\n            throw new Error(`Cannot parse color - ${value} is not a valid color.`);\n        }\n        return new ThemeColor(r, g, b, a);\n    }\n/**\n * @return {?}\n */\ntoHex() {\n        let /** @type {?} */ red = parseInt(this._r).toString(16);\n        let /** @type {?} */ green = parseInt(this._g).toString(16);\n        let /** @type {?} */ blue = parseInt(this._b).toString(16);\n\n        if (red.length < 2) {\n            red = '0' + red;\n        }\n        if (green.length < 2) {\n            green = '0' + green;\n        }\n        if (blue.length < 2) {\n            blue = '0' + blue;\n        }\n\n        return '#' + red + green + blue;\n    }\n/**\n * @return {?}\n */\ntoRgb() {\n        return 'rgb(' + this._r + ', ' + this._g + ', ' + this._b + ')';\n    }\n/**\n * @return {?}\n */\ntoRgba() {\n        return 'rgba(' + this._r + ', ' + this._g + ', ' + this._b + ', ' + this._a + ')';\n    }\n/**\n * @return {?}\n */\ngetRed() {\n        return this._r;\n    }\n/**\n * @return {?}\n */\ngetGreen() {\n        return this._g;\n    }\n/**\n * @return {?}\n */\ngetBlue() {\n        return this._b;\n    }\n/**\n * @return {?}\n */\ngetAlpha() {\n        return this._a;\n    }\n/**\n * @param {?} red\n * @return {?}\n */\nsetRed(red: string) {\n        this._r = red;\n        return this;\n    }\n/**\n * @param {?} green\n * @return {?}\n */\nsetGreen(green: string) {\n        this._g = green;\n        return this;\n    }\n/**\n * @param {?} blue\n * @return {?}\n */\nsetBlue(blue: string) {\n        this._b = blue;\n        return this;\n    }\n/**\n * @param {?} alpha\n * @return {?}\n */\nsetAlpha(alpha: string | number) {\n        this._a = alpha.toString();\n        return this;\n    }\n}\n\nfunction ThemeColor_tsickle_Closure_declarations() {\n/** @type {?} */\nThemeColor.prototype._r;\n/** @type {?} */\nThemeColor.prototype._g;\n/** @type {?} */\nThemeColor.prototype._b;\n/** @type {?} */\nThemeColor.prototype._a;\n}\n\n\nexport const /** @type {?} */ colorSets = {\n    keppel: {\n        colorClassSet: {\n            'primary': 'primary',\n            'accent': 'accent',\n            'secondary': 'secondary',\n            'alternate1': 'alternate1',\n            'alternate2': 'alternate2',\n            'alternate3': 'alternate3',\n            'vibrant1': 'vibrant1',\n            'vibrant2': 'vibrant2',\n            'grey1': 'grey1',\n            'grey2': 'grey2',\n            'grey3': 'grey3',\n            'grey4': 'grey4',\n            'grey5': 'grey5',\n            'grey6': 'grey6',\n            'grey7': 'grey7',\n            'grey8': 'grey8',\n            'chart1': 'chart1',\n            'chart2': 'chart2',\n            'chart3': 'chart3',\n            'chart4': 'chart4',\n            'chart5': 'chart5',\n            'chart6': 'chart6',\n            'ok': 'ok',\n            'warning': 'warning',\n            'critical': 'critical',\n            'partition1': 'partition1',\n            'partition9': 'partition9',\n            'partition10': 'partition10',\n            'partition11': 'partition11',\n            'partition12': 'partition12',\n            'partition13': 'partition13',\n            'partition14': 'partition14',\n            'social-chart-node': 'social-chart-node',\n            'social-chart-edge': 'social-chart-edge'\n        }\n    },\n    microFocus: {\n        'colorValueSet': {\n            'cerulean': '#1668c1',\n            'aqua': '#29ceff',\n            'aquamarine': '#2fd6c3',\n            'fuchsia': '#c6179d',\n            'indigo': '#7425ad',\n            'dark-blue': '#231ca5',\n            'white': '#ffffff',\n            'slightly-gray': '#f5f7f8',\n            'bright-gray': '#f1f2f3',\n            'gray': '#dcdedf',\n            'silver': '#bdbec0',\n            'dim-gray': '#656668',\n            'dark-gray': '#323435',\n            'black': '#000000',\n            'crimson-negative': '#e5004c',\n            'apricot': '#f48b34',\n            'yellow': '#fcdb1f',\n            'green-positive': '#1aac60',\n            'ultramarine': '#3939c6',\n            'skyblue': '#00abf3',\n            'pale-aqua': '#43e4ff',\n            'pale-green': '#1ffbba',\n            'lime': '#75da4d',\n            'orange': '#ffce00',\n            'magenta': '#eb23c2',\n            'pale-purple': '#ba47e2',\n            'dark-ultramarine': '#271782',\n            'steelblue': '#014272',\n            'arctic-blue': '#0b8eac',\n            'emerald': '#00a989',\n            'olive': '#5bba36',\n            'goldenrod': '#ffb000',\n            'purple': '#9b1e83',\n            'pale-eggplant': '#5216ac',\n            'red': '#ff454f',\n            'pale-amber': '#ffb24d',\n            'pale-lemon': '#fde159',\n            'pale-emerald': '#33c180',\n            'plum': '#b21646',\n            'copper': '#e57828',\n            'amber': '#ffc002',\n            'leaf-green': '#118c4f',\n            'forest-green': '#00645a',\n            'primary': '#0073e7',\n            'accent': '#7425ad',\n            'secondary': '#ffffff',\n            'alternate1': '#29ceff',\n            'alternate2': '#2fd6c3',\n            'alternate3': '#c6179d',\n            'vibrant1': '#43e4ff',\n            'vibrant2': '#ffce00',\n            'grey1': '#000000',\n            'grey2': '#323435',\n            'grey3': '#656668',\n            'grey4': '#bdbec0',\n            'grey5': '#dcdedf',\n            'grey6': '#f1f2f3',\n            'grey7': '#f5f7f8',\n            'grey8': '#ffffff',\n            'chart1': '#3939c6',\n            'chart2': '#00abf3',\n            'chart3': '#75da4d',\n            'chart4': '#ffce00',\n            'chart5': '#eb23c2',\n            'chart6': '#ba47e2',\n            'ok': '#1aac60',\n            'warning': '#f48b34',\n            'critical': 'e5004c',\n            'partition1': '#7425ad',\n            'partition9': '#5216ac',\n            'partition10': '#5bba36',\n            'partition11': '#014272',\n            'partition12': '#ffb000',\n            'partition13': '#bdbec0',\n            'partition14': '#271782',\n            'social-chart-node': '#ff00ff',\n            'social-chart-edge': '#ff00ff'\n        }\n    }\n};\n\nexport interface ThemeColors {\n    [name: string]: ThemeColor;\n}\n\nexport interface ColorSet {\n    colorClassSet?: ColorClassSet;\n    colorValueSet?: ColorValueSet;\n}\n\nexport interface ColorClassSet {\n    [name: string]: string;\n}\n\nexport interface ColorValueSet {\n    [name: string]: string;\n}\n\nexport type ColorIdentifier = string;\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { ColorService } from './color.service';\nexport class ColorServiceModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    providers: [ColorService],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ColorServiceModule_tsickle_Closure_declarations() {\n/** @type {?} */\nColorServiceModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nColorServiceModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable, TemplateRef } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { ColorService } from '../../services/color/index';\nexport class NotificationService {\n\n    // provide default options\n    options: NotificationOptions = {\n        duration: 4,\n        height: 100,\n        spacing: 10,\n        backgroundColor: this._colorService.getColor('accent').toHex(),\n        iconColor: this._colorService.getColor('accent').toHex()\n    };\n\n    direction: NotificationListDirection = 'above';\n\n    notifications$: BehaviorSubject<NotificationRef[]> = new BehaviorSubject<NotificationRef[]>([]);\n/**\n * @param {?} templateRef\n * @param {?=} options\n * @param {?=} data\n * @return {?}\n */\nshow(templateRef: TemplateRef<any>, options: NotificationOptions = this.options, data: { [key: string]: any } = {}): NotificationRef {\n\n        options = { ...this.options, ...options };\n\n        const /** @type {?} */ notificationRef: NotificationRef = {\n            templateRef: templateRef,\n            duration: options.duration,\n            date: new Date(),\n            visible: true,\n            height: options.height,\n            spacing: options.spacing,\n            backgroundColor: options.backgroundColor,\n            iconColor: options.iconColor,\n            data: data\n        };\n\n        const /** @type {?} */ notifications = this.notifications$.getValue();\n\n        if (this.direction === 'above') {\n            notifications.unshift(notificationRef);\n        } else {\n            notifications.push(notificationRef);\n        }\n\n        this.notifications$.next(notifications);\n\n        // remove notification after delay\n        if (options.duration !== 0) {\n            setTimeout(() => this.dismiss(notificationRef), options.duration * 1000);\n        }\n\n        return notificationRef;\n    }\n/**\n * @return {?}\n */\ngetHistory(): NotificationRef[] {\n        return this.notifications$.getValue();\n    }\n/**\n * @param {?} notificationRef\n * @return {?}\n */\ndismiss(notificationRef: NotificationRef): void {\n        notificationRef.visible = false;\n        this.notifications$.next(this.notifications$.getValue());\n    }\n/**\n * @return {?}\n */\ndismissAll(): void {\n        this.notifications$.getValue().forEach(notificationRef => notificationRef.visible = false);\n        this.notifications$.next(this.notifications$.getValue());        \n    }\n/**\n * @param {?} _colorService\n */\nconstructor(private _colorService: ColorService) {\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ColorService, },\n];\n}\n\nfunction NotificationService_tsickle_Closure_declarations() {\n/** @type {?} */\nNotificationService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNotificationService.ctorParameters;\n/** @type {?} */\nNotificationService.prototype.options;\n/** @type {?} */\nNotificationService.prototype.direction;\n/** @type {?} */\nNotificationService.prototype.notifications$;\n/** @type {?} */\nNotificationService.prototype._colorService;\n}\n\n\nexport interface NotificationRef {\n    templateRef: TemplateRef<any>;\n    duration: number;\n    date: Date;\n    visible?: boolean;\n    height?: number;\n    spacing?: number;\n    backgroundColor?: string;\n    iconColor?: string;\n    data: { [key: string]: any };\n}\n\nexport interface NotificationOptions {\n    duration?: number;\n    height?: number;\n    spacing?: number;\n    backgroundColor?: string;\n    iconColor?: string;\n}\n\nexport type NotificationListDirection = 'above' | 'below';\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, HostBinding, Input, ChangeDetectionStrategy } from '@angular/core';\nimport { NotificationService, NotificationRef, NotificationListDirection } from './notification.service';\nimport { trigger, state, style, animate, transition } from '@angular/animations';\nimport { map } from 'rxjs/operators/map';\nimport { Observable } from 'rxjs/Observable';\nexport class NotificationListComponent {\n/**\n * @param {?} direction\n * @return {?}\n */\nset direction(direction: NotificationListDirection) {\n        this._notificationService.direction = direction;\n    }\n\n      position: NotificationListPostion = 'top-right';\n\n    notifications$: Observable<NotificationRef[]> = this._notificationService.notifications$.pipe(\n        map((notificationRefs: NotificationRef[]) => notificationRefs.filter(notificationRef => notificationRef.visible),\n    ));\n/**\n * @param {?} _notificationService\n */\nconstructor(private _notificationService: NotificationService) {\n\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-notification-list',\n    template: `\n      <div class=\"notification\" *ngFor=\"let notificationRef of notifications$ | async; let idx = index\"\n          [style.top.px]=\"(notificationRef.height + notificationRef.spacing) * idx\"\n          [style.height.px]=\"notificationRef.height\"\n          [style.background-color]=\"notificationRef.backgroundColor\"\n          [@notificationState]>\n          <ng-container *ngTemplateOutlet=\"notificationRef.templateRef; context: { $implicit: notificationRef, data: notificationRef.data }\"></ng-container>\n      </div>\n    `,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    animations: [\n        trigger('notificationState', [\n            state('in', style({ transform: 'translateY(0)', opacity: 0.9 })),\n            transition(':enter', [\n                style({ transform: 'translateY(-50px)', opacity: 0 }),\n                animate(500)\n            ]),\n            transition(':leave', [\n                animate(500, style({ transform: 'translateY(50px)', opacity: 0 }))\n            ])\n        ])\n    ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: NotificationService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'direction': [{ type: Input },],\n'position': [{ type: Input },{ type: HostBinding, args: ['class', ] },],\n};\n}\n\nfunction NotificationListComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nNotificationListComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNotificationListComponent.ctorParameters;\n/** @type {?} */\nNotificationListComponent.propDecorators;\n/** @type {?} */\nNotificationListComponent.prototype.position;\n/** @type {?} */\nNotificationListComponent.prototype.notifications$;\n/** @type {?} */\nNotificationListComponent.prototype._notificationService;\n}\n\n\nexport type NotificationListPostion = 'top-left' | 'top-right' | 'bottom-left' | 'bottom-right';\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NotificationListComponent } from './notification-list.component';\nimport { NotificationService } from './notification.service';\nimport { ColorServiceModule } from '../../services/color/index';\nexport class NotificationModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        CommonModule,\n        ColorServiceModule\n    ],\n    exports: [\n        NotificationListComponent\n    ],\n    declarations: [\n        NotificationListComponent\n    ],\n    providers: [\n        NotificationService\n    ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction NotificationModule_tsickle_Closure_declarations() {\n/** @type {?} */\nNotificationModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNotificationModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Input, ViewEncapsulation, EventEmitter, Output, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nexport const /** @type {?} */ NUMBER_PICKER_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => NumberPickerComponent),\n    multi: true\n};\nexport class NumberPickerComponent implements ControlValueAccessor {\nprivate _min: number = -Infinity;\nprivate _max: number = Infinity;\nprivate _step: number = 1;\nprivate _disabled: boolean = false;\nprivate _value: number = 0;\nprivate _propagateChange = (_: any) => { };\n\n     valid: boolean = true;\n     valueChange = new EventEmitter<number>();\n/**\n * @return {?}\n */\nget value(): number {\n        return this._value;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset value(value: number) {\n        this._value = value;\n        this.valueChange.emit(value);\n        this._propagateChange(value);\n    }\n/**\n * @return {?}\n */\nget min(): number {\n        return this._min;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset min(value) {\n        this._min = typeof value === 'string' ? parseFloat(value) : value;\n    }\n/**\n * @return {?}\n */\nget max(): number {\n        return this._max;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset max(value) {\n        this._max = typeof value === 'string' ? parseFloat(value) : value;\n    }\n/**\n * @return {?}\n */\nget step(): number {\n        return this._step;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset step(value) {\n        this._step = typeof value === 'string' ? parseFloat(value) : value;\n    }\n/**\n * @return {?}\n */\nget disabled(): boolean {\n        return this._disabled;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset disabled(value) {\n        this._disabled = typeof value === 'string' && (value === '' || value === 'true' || value === 'disabled') || value === true;\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nincrement(event: MouseEvent | KeyboardEvent): void {\n        event.preventDefault();\n\n        if (!this.disabled) {\n            this.value = Math.max(Math.min(this.value + this.step, this.max), this.min);\n        }\n    }\n/**\n * @param {?} event\n * @return {?}\n */\ndecrement(event: MouseEvent | KeyboardEvent): void {\n        event.preventDefault();\n\n        if (!this.disabled) {\n            this.value = Math.min(Math.max(this.value - this.step, this.min), this.max);\n        }\n    }\n/**\n * @return {?}\n */\nisValid(): boolean {\n        if (this.value < this.min || this.value > this.max) {\n            return false;\n        }\n\n        return this.valid;\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nonScroll(event: WheelEvent): void {\n\n        let /** @type {?} */ scrollValue = event.deltaY || event.wheelDelta;\n\n        if (scrollValue < 0) {\n            this.increment(event);\n        } else {\n            this.decrement(event);\n        }\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nwriteValue(value: any): void {\n        if (value !== undefined) {\n            this._value = value;\n        }\n    }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnChange(fn: any): void {\n        this._propagateChange = fn;\n    }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnTouched(fn: any): void { }\n/**\n * @param {?} isDisabled\n * @return {?}\n */\nsetDisabledState(isDisabled: boolean): void {\n        this.disabled = isDisabled;\n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-number-picker',\n    template: `\n      <input type=\"number\"\n             role=\"spinbutton\"\n             class=\"form-control number-picker-input\"\n             [(ngModel)]=\"value\"\n             [min]=\"min\"\n             [max]=\"max\"\n             (keydown.ArrowDown)=\"decrement($event)\"\n             (keydown.ArrowUp)=\"increment($event)\"\n             (wheel)=\"onScroll($event)\"\n             step=\"any\"\n             [disabled]=\"disabled\"\n             [attr.aria-valuemin]=\"min\"\n             [attr.aria-valuenow]=\"value\"\n             [attr.aria-valuemax]=\"max\">\n\n      <div class=\"number-picker-controls\">\n\n          <div class=\"number-picker-control-up\"\n               (click)=\"increment($event)\"\n               [class.disabled]=\"disabled || value >= max\">\n\n              <span class=\"hpe-icon hpe-up\"></span>\n          </div>\n\n          <div class=\"number-picker-control-down\"\n               (click)=\"decrement($event)\"\n               [class.disabled]=\"disabled || value <= min\">\n\n              <span class=\"hpe-icon hpe-down\"></span>\n          </div>\n\n      </div>\n    `,\n    providers: [NUMBER_PICKER_VALUE_ACCESSOR],\n    host: {\n        '[class.has-error]': '!isValid()'\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'valid': [{ type: Input },],\n'valueChange': [{ type: Output },],\n'value': [{ type: Input, args: ['value', ] },],\n'min': [{ type: Input },],\n'max': [{ type: Input },],\n'step': [{ type: Input },],\n'disabled': [{ type: Input },],\n};\n}\n\nfunction NumberPickerComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nNumberPickerComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNumberPickerComponent.ctorParameters;\n/** @type {?} */\nNumberPickerComponent.propDecorators;\n/** @type {?} */\nNumberPickerComponent.prototype._min;\n/** @type {?} */\nNumberPickerComponent.prototype._max;\n/** @type {?} */\nNumberPickerComponent.prototype._step;\n/** @type {?} */\nNumberPickerComponent.prototype._disabled;\n/** @type {?} */\nNumberPickerComponent.prototype._value;\n/** @type {?} */\nNumberPickerComponent.prototype._propagateChange;\n/** @type {?} */\nNumberPickerComponent.prototype.valid;\n/** @type {?} */\nNumberPickerComponent.prototype.valueChange;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\n\nimport { NumberPickerComponent } from './number-picker.component';\nexport class NumberPickerModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        CommonModule,\n        FormsModule\n    ],\n    exports: [NumberPickerComponent],\n    declarations: [NumberPickerComponent]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction NumberPickerModule_tsickle_Closure_declarations() {\n/** @type {?} */\nNumberPickerModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNumberPickerModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive } from '@angular/core';\nexport class PageHeaderCustomMenuDirective { static decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{ \n    selector: '[uxPageHeaderCustomMenu]' \n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction PageHeaderCustomMenuDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nPageHeaderCustomMenuDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nPageHeaderCustomMenuDirective.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { Subscription } from 'rxjs/Subscription';\nimport { map } from 'rxjs/operators';\nimport { PageHeaderIconMenu } from './interfaces';\nimport { PageHeaderNavigationDropdownItem, PageHeaderNavigationItem } from './navigation/navigation.component';\nexport class PageHeaderService implements OnDestroy {\n\n    items$ = new BehaviorSubject<PageHeaderNavigationItem[]>([]);\n    selected$ = new BehaviorSubject<PageHeaderNavigationItem>(null);\n    selectedRoot$ = new BehaviorSubject<PageHeaderNavigationItem>(null);\n    secondary$ = new BehaviorSubject<boolean>(false);\n    activeIconMenu$ = new BehaviorSubject<PageHeaderIconMenu>(null);\nprivate _subscription: Subscription;\nconstructor() {\n        this._subscription = this.selected$.pipe(map(selected => this.getRoot(selected))).subscribe(root => this.selectedRoot$.next(root));\n    }\n/**\n * @return {?}\n */\nngOnDestroy(): void {\n        this._subscription.unsubscribe();\n    }\n/**\n * @param {?} item\n * @return {?}\n */\nselect(item: PageHeaderNavigationItem): void {\n\n        // do nothing if this item is already selected\n        if (item === this.selected$.getValue()) {\n            return;\n        }\n\n        // if we are in secondary navigation mode and we click a parent - dont deselect the child\n        if (this.secondary$.getValue() === true && this.isParentOf(this.selected$.getValue(), item)) {\n            return;\n        }\n\n        // deselect all current items\n        this.deselectAll();\n\n        // call the select function if present\n        if (item.select) {\n            item.select.call(item, item);\n        }\n\n        // store the selected state\n        item.selected = true;\n\n        // select all parent items too\n        this.selectParents(item);\n\n        // emit the new selected item\n        this.selected$.next(item);\n    }\n/**\n * @param {?} item\n * @return {?}\n */\ndeselect(item: PageHeaderNavigationItem | PageHeaderNavigationDropdownItem): void {\n\n        // deselect the current item\n        item.selected = false;\n\n        // iterate any children and deselect them\n        if (item.children) {\n            item.children.forEach(_item => this.deselect(_item));\n        }\n    }\n/**\n * @return {?}\n */\ndeselectAll(): void {\n        this.items$.getValue().forEach(item => this.deselect(item));\n    }\n/**\n * @param {?=} items\n * @return {?}\n */\nsetItems(items: PageHeaderNavigationItem[] = []): void {\n        // identify all parent elements\n        items.forEach(item => this.setParent(item));\n\n        this.items$.next(items);\n    }\n/**\n * @param {?} enabled\n * @return {?}\n */\nsetSecondaryNavigation(enabled: boolean): void {\n        this.secondary$.next(enabled);\n    }\n/**\n * @param {?} item\n * @return {?}\n */\nprivate getRoot(item: PageHeaderNavigation): PageHeaderNavigation {\n        return item && item.parent ? this.getRoot(item.parent) : item;\n    }\n/**\n * @param {?} item\n * @param {?=} parent\n * @return {?}\n */\nprivate setParent(item: PageHeaderNavigation, parent?: PageHeaderNavigation | null): void {\n        // set the parent field\n        item.parent = parent;\n\n        // call this function recursively on all children\n        if (item.children) {\n            item.children.forEach(child => this.setParent(child, item));\n        }\n    }\n/**\n * @param {?} item\n * @return {?}\n */\nprivate selectParents(item: PageHeaderNavigation): void {\n        // if there is a parent then we want to set it to selected\n        if (item.parent) {\n            item.parent.selected = true;\n\n            // check if it has any parents\n            this.selectParents(item.parent);\n        }\n    }\n/**\n * @param {?} node\n * @param {?} parent\n * @return {?}\n */\nprivate isParentOf(node: PageHeaderNavigation, parent: PageHeaderNavigation): boolean {\n\n        // if there are no parents return false\n        if (!node || !node.parent) {\n            return false;\n        }\n\n        // if the parent is the match we are looking for return true\n        if (node.parent === parent) {\n            return true;\n        }\n\n        // if there are potentially grandparents then check them too\n        return this.isParentOf(node.parent, parent);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction PageHeaderService_tsickle_Closure_declarations() {\n/** @type {?} */\nPageHeaderService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nPageHeaderService.ctorParameters;\n/** @type {?} */\nPageHeaderService.prototype.items$;\n/** @type {?} */\nPageHeaderService.prototype.selected$;\n/** @type {?} */\nPageHeaderService.prototype.selectedRoot$;\n/** @type {?} */\nPageHeaderService.prototype.secondary$;\n/** @type {?} */\nPageHeaderService.prototype.activeIconMenu$;\n/** @type {?} */\nPageHeaderService.prototype._subscription;\n}\n\n\nexport type PageHeaderNavigation = PageHeaderNavigationItem | PageHeaderNavigationDropdownItem;\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, ContentChildren, EventEmitter, Input, OnDestroy, OnInit, Output, QueryList, TemplateRef } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { Subscription } from 'rxjs/Subscription';\nimport { distinctUntilChanged, filter, map } from 'rxjs/operators';\nimport { ColorService } from '../../services/color/index';\nimport { Breadcrumb } from '../breadcrumbs/index';\nimport { PageHeaderCustomMenuDirective } from './custom-menu/custom-menu.directive';\nimport { PageHeaderIconMenu } from './interfaces';\nimport { PageHeaderNavigationItem } from './navigation/navigation.component';\nimport { PageHeaderNavigation, PageHeaderService } from './page-header.service';\nexport class PageHeaderComponent implements OnInit, OnDestroy {\n\n     logo: string;\n     header: string;\n     alignment: 'left' | 'right' | 'center' = 'center';\n     condensed: boolean = false;\n     iconMenus: PageHeaderIconMenu[];\n     backVisible: boolean = true;\n     secondaryNavigationAlignment: string = 'center';\n     secondaryNavigationAutoselect: boolean = false;\n/**\n * @param {?} items\n * @return {?}\n */\nset items(items: PageHeaderNavigationItem[]) {\n        this._pageHeaderService.setItems(items);\n    }\n/**\n * @param {?} enabled\n * @return {?}\n */\nset secondaryNavigation(enabled: boolean) {\n        this._pageHeaderService.setSecondaryNavigation(enabled);\n    }\n/**\n * @return {?}\n */\nget secondaryNavigation(): boolean {\n        return this._pageHeaderService.secondary$.getValue();\n    }\n/**\n * @param {?} crumbs\n * @return {?}\n */\nset crumbs(crumbs: Breadcrumb[]) {\n        this._crumbs = crumbs;\n    }\n/**\n * @return {?}\n */\nget crumbs(): Breadcrumb[] {\n        return this.condensed ? [...this._crumbs, { title: this.header }] : this._crumbs;\n    }\n/**\n * @param {?} color\n * @return {?}\n */\nset familyBackground(color: string) {\n        this._familyBackground = this._colorService.resolve(color);\n    }\n/**\n * @return {?}\n */\nget familyBackground(): string {\n        return this._familyBackground;\n    }\n/**\n * @param {?} color\n * @return {?}\n */\nset familyForeground(color: string) {\n        this._familyForeground = this._colorService.resolve(color);\n    }\n/**\n * @return {?}\n */\nget familyForeground(): string {\n        return this._familyForeground;\n    }\n\n     backClick = new EventEmitter();\n\n     customMenus: QueryList<TemplateRef<any>>;\n\n    selected$: BehaviorSubject<PageHeaderNavigationItem> = this._pageHeaderService.selected$;\n    selectedRoot$: BehaviorSubject<PageHeaderNavigationItem> = this._pageHeaderService.selectedRoot$;\nprivate _crumbs: Breadcrumb[] = [];\nprivate _familyBackground: string;\nprivate _familyForeground: string;\nprivate _subscription: Subscription;\n/**\n * @param {?} _colorService\n * @param {?} _pageHeaderService\n */\nconstructor(private _colorService: ColorService,\nprivate _pageHeaderService: PageHeaderService) { }\n/**\n * @return {?}\n */\nngOnInit(): void {\n        this._subscription = this.selectedRoot$.pipe(\n            distinctUntilChanged(),\n            filter(() => this.secondaryNavigation && this.secondaryNavigationAutoselect),\n            filter((item: PageHeaderNavigation) => item && item.children && item.children.length > 0),\n            map(item => item.children[0])\n        ).subscribe(item => this.select(item));\n    }\n/**\n * @return {?}\n */\nngOnDestroy(): void {\n        this._subscription.unsubscribe();\n    }\n/**\n * @return {?}\n */\ngoBack(): void {\n        this.backClick.emit();\n    }\n/**\n * @param {?} item\n * @return {?}\n */\nselect(item: PageHeaderNavigation): void {\n        this._pageHeaderService.select(item);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-page-header',\n    exportAs: 'ux-page-header',\n    template: `\n      <div class=\"ux-page-header\" [class.page-header-condensed]=\"condensed\" role=\"banner\">\n\n          <!-- Display Upper Section when not condensed -->\n          <div class=\"page-header-actions\" *ngIf=\"!condensed\">\n\n              <div class=\"page-header-logo-container\" role=\"presentation\" [hidden]=\"!logo\">\n                  <img [attr.src]=\"logo\" class=\"page-header-logo\">\n              </div>\n\n              <div class=\"page-header-navigation\" [ngClass]=\"alignment\" role=\"navigation\" aria-label=\"Primary Navigation\">\n\n                  <!-- The Top Navigation Options -->\n                  <ux-page-header-horizontal-navigation></ux-page-header-horizontal-navigation>\n              </div>\n\n              <div class=\"page-header-icon-menus\" role=\"toolbar\">\n                  <ng-container *ngFor=\"let menu of customMenus\" [ngTemplateOutlet]=\"menu\"></ng-container>\n\n                  <ux-page-header-icon-menu *ngFor=\"let menu of iconMenus\" [menu]=\"menu\"></ux-page-header-icon-menu>\n              </div>\n          </div>\n\n          <!-- Display Lower Section When Not Condensed -->\n          <div class=\"page-header-details\" *ngIf=\"!condensed\">\n\n              <div class=\"page-header-state-container\" role=\"navigation\">\n\n                  <button *ngIf=\"backVisible === true\" class=\"page-header-back-button\" (click)=\"goBack()\" aria-label=\"Go Back\">\n                      <span class=\"hpe-icon hpe-previous text-primary\"></span>\n                  </button>\n\n                  <div class=\"page-header-title-container\">\n\n                      <ux-breadcrumbs [crumbs]=\"crumbs\"></ux-breadcrumbs>\n\n                      <h1 class=\"page-header-title\" [style.backgroundColor]=\"familyBackground\" [style.color]=\"familyForeground\">{{ header }}</h1>\n                  </div>\n\n              </div>\n\n          </div>\n\n          <!-- Display This Section Optimized for Condensed Mode -->\n          <div class=\"page-header-condensed-content\" *ngIf=\"condensed\">\n\n              <div class=\"page-header-breadcrumbs\" role=\"navigation\">\n                  <ux-breadcrumbs [crumbs]=\"crumbs\"></ux-breadcrumbs>\n              </div>\n\n              <div class=\"page-header-navigation\" [ngClass]=\"alignment\" role=\"navigation\" aria-label=\"Primary Navigation\">\n\n                  <!-- The Top Navigation Options -->\n                  <ux-page-header-horizontal-navigation></ux-page-header-horizontal-navigation>\n              </div>\n\n              <div class=\"page-header-icon-menus\" role=\"toolbar\">\n                  <ng-container *ngFor=\"let menu of customMenus\" [ngTemplateOutlet]=\"menu\"></ng-container>\n                  <ux-page-header-icon-menu *ngFor=\"let menu of iconMenus\" [menu]=\"menu\"></ux-page-header-icon-menu>\n              </div>\n\n          </div>\n\n      </div>\n\n      <div class=\"page-header-secondary\" [ngClass]=\"secondaryNavigationAlignment\" role=\"navigation\" *ngIf=\"secondaryNavigation && (selectedRoot$ | async)\">\n          <ul class=\"nav nav-tabs\" role=\"tablist\" aria-label=\"Secondary Navigation\" *ngIf=\"(selectedRoot$ | async)?.children; let children\">\n              <li *ngFor=\"let child of children\" [class.active]=\"child === (selected$ | async)\" role=\"none\">\n                  <a role=\"tab\"\n                      [attr.aria-selected]=\"child === (selected$ | async)\"\n                      tabindex=\"0\"\n                      (click)=\"select(child)\"\n                      (keydown.enter)=\"select(child)\">{{ child.title }}</a>\n              </li>\n          </ul>\n      </div>\n    `,\n    providers: [ PageHeaderService ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ColorService, },\n{type: PageHeaderService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'logo': [{ type: Input },],\n'header': [{ type: Input },],\n'alignment': [{ type: Input },],\n'condensed': [{ type: Input },],\n'iconMenus': [{ type: Input },],\n'backVisible': [{ type: Input },],\n'secondaryNavigationAlignment': [{ type: Input },],\n'secondaryNavigationAutoselect': [{ type: Input },],\n'items': [{ type: Input },],\n'secondaryNavigation': [{ type: Input },],\n'crumbs': [{ type: Input },],\n'familyBackground': [{ type: Input },],\n'familyForeground': [{ type: Input },],\n'backClick': [{ type: Output },],\n'customMenus': [{ type: ContentChildren, args: [PageHeaderCustomMenuDirective, { read: TemplateRef }, ] },],\n};\n}\n\nfunction PageHeaderComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nPageHeaderComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nPageHeaderComponent.ctorParameters;\n/** @type {?} */\nPageHeaderComponent.propDecorators;\n/** @type {?} */\nPageHeaderComponent.prototype.logo;\n/** @type {?} */\nPageHeaderComponent.prototype.header;\n/** @type {?} */\nPageHeaderComponent.prototype.alignment;\n/** @type {?} */\nPageHeaderComponent.prototype.condensed;\n/** @type {?} */\nPageHeaderComponent.prototype.iconMenus;\n/** @type {?} */\nPageHeaderComponent.prototype.backVisible;\n/** @type {?} */\nPageHeaderComponent.prototype.secondaryNavigationAlignment;\n/** @type {?} */\nPageHeaderComponent.prototype.secondaryNavigationAutoselect;\n/** @type {?} */\nPageHeaderComponent.prototype.backClick;\n/** @type {?} */\nPageHeaderComponent.prototype.customMenus;\n/** @type {?} */\nPageHeaderComponent.prototype.selected$;\n/** @type {?} */\nPageHeaderComponent.prototype.selectedRoot$;\n/** @type {?} */\nPageHeaderComponent.prototype._crumbs;\n/** @type {?} */\nPageHeaderComponent.prototype._familyBackground;\n/** @type {?} */\nPageHeaderComponent.prototype._familyForeground;\n/** @type {?} */\nPageHeaderComponent.prototype._subscription;\n/** @type {?} */\nPageHeaderComponent.prototype._colorService;\n/** @type {?} */\nPageHeaderComponent.prototype._pageHeaderService;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Input, OnDestroy, ViewChild } from '@angular/core';\nimport { Subscription } from 'rxjs/Subscription';\nimport { MenuNavigationToggleDirective } from '../../../directives/menu-navigation/menu-navigation-toggle.directive';\nimport { PageHeaderIconMenu, PageHeaderIconMenuDropdownItem } from '../interfaces';\nimport { PageHeaderService } from '../page-header.service';\nexport class PageHeaderIconMenuComponent implements OnDestroy {\n\n     menu: PageHeaderIconMenu;\n/**\n * @return {?}\n */\nget isOpen(): boolean {\n        return this._isOpen;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset isOpen(value: boolean) {\n        this._isOpen = value;\n        if (value) {\n            this._service.activeIconMenu$.next(this.menu);\n        }\n    }\n\n    \n    menuNavigationToggle: MenuNavigationToggleDirective;\nprivate _isOpen: boolean;\nprivate _subscription: Subscription;\n/**\n * @param {?} _service\n */\nconstructor(private _service: PageHeaderService) {\n        this._subscription = _service.activeIconMenu$.subscribe((next) => {\n            // Close all but the most recently opened menu\n            if (next !== this.menu) {\n                this._isOpen = false;\n            }\n        });\n    }\n/**\n * @return {?}\n */\nngOnDestroy(): void {\n        this._subscription.unsubscribe();\n    }\n/**\n * @param {?} item\n * @return {?}\n */\nselect(item: PageHeaderIconMenu | PageHeaderIconMenuDropdownItem) {\n        if (item.select) {\n            item.select.call(item, item);\n        }\n    }\n/**\n * @param {?} item\n * @param {?} event\n * @return {?}\n */\nkeydownHandler(item: PageHeaderIconMenu | PageHeaderIconMenuDropdownItem, event: KeyboardEvent): void {\n\n        switch (event.key) {\n            case 'Enter':\n            case ' ':\n                this.select(item);\n                this.isOpen = false;\n                this.menuNavigationToggle.focus();\n                event.preventDefault();\n                event.stopPropagation();\n                break;\n        }\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-page-header-icon-menu',\n    template: `\n      <div class=\"page-header-icon-menu\"\n          dropdown\n          placement=\"bottom right\"\n          [(isOpen)]=\"isOpen\">\n\n          <a role=\"button\"\n              class=\"page-header-icon-menu-button\"\n              [attr.aria-label]=\"menu.label\"\n              aria-haspopup=\"true\"\n              tabindex=\"0\"\n              (click)=\"select(menu)\"\n              dropdownToggle\n              uxMenuNavigationToggle\n              #menuNavigationToggle=\"uxMenuNavigationToggle\"\n              [(menuOpen)]=\"isOpen\">\n\n              <i class=\"hpe-icon\" [ngClass]=\"menu.icon\"></i>\n              <span class=\"label label-primary\" *ngIf=\"menu?.badge\" aria-hidden=\"true\">{{ menu.badge }}</span>\n\n          </a>\n\n          <ul *dropdownMenu\n              class=\"dropdown-menu\"\n              role=\"menu\"\n              uxMenuNavigation\n              [toggleButton]=\"menuNavigationToggle\">\n\n              <li *ngFor=\"let dropdown of menu?.dropdown\"\n                  role=\"none\"\n                  [class.dropdown-header]=\"dropdown.header\"\n                  [class.dropdown-divider]=\"dropdown.divider\">\n\n                  <span class=\"font-bold\" *ngIf=\"dropdown.header\">{{ dropdown.title }}</span>\n\n                  <a *ngIf=\"!dropdown.header\"\n                      role=\"menuitem\"\n                      class=\"dropdown-item\"\n                      tabindex=\"-1\"\n                      (click)=\"select(dropdown)\"\n                      (keydown)=\"keydownHandler(dropdown, $event)\"\n                      uxMenuNavigationItem>\n\n\n                      <span class=\"dropdown-item-title\">\n                          <i class=\"hpe-icon hpe-fw\" [ngClass]=\"dropdown.icon\"></i>\n                          {{ dropdown.title }}\n                      </span>\n                      <span *ngIf=\"dropdown.subtitle\" class=\"dropdown-item-subtitle\">{{ dropdown.subtitle }}</span>\n\n                  </a>\n              </li>\n\n          </ul>\n      </div>\n    `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: PageHeaderService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'menu': [{ type: Input },],\n'menuNavigationToggle': [{ type: ViewChild, args: ['menuNavigationToggle', ] },],\n};\n}\n\nfunction PageHeaderIconMenuComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nPageHeaderIconMenuComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nPageHeaderIconMenuComponent.ctorParameters;\n/** @type {?} */\nPageHeaderIconMenuComponent.propDecorators;\n/** @type {?} */\nPageHeaderIconMenuComponent.prototype.menu;\n/** @type {?} */\nPageHeaderIconMenuComponent.prototype.menuNavigationToggle;\n/** @type {?} */\nPageHeaderIconMenuComponent.prototype._isOpen;\n/** @type {?} */\nPageHeaderIconMenuComponent.prototype._subscription;\n/** @type {?} */\nPageHeaderIconMenuComponent.prototype._service;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, ElementRef, Input, OnDestroy, ViewChild } from '@angular/core';\nimport { Subject } from 'rxjs/Subject';\nimport { Subscription } from 'rxjs/Subscription';\nimport { debounceTime } from 'rxjs/operators';\nimport { PageHeaderService } from '../../page-header.service';\nimport { PageHeaderNavigationDropdownItem } from '../navigation.component';\nexport class PageHeaderNavigationDropdownItemComponent implements OnDestroy {\n\n     item: PageHeaderNavigationDropdownItem;\n\n    \n    button: ElementRef;\n\n    dropdownOpen: boolean = false;\nprivate _subscription: Subscription;\nprivate _hover$: Subject<boolean> = new Subject<boolean>();\n/**\n * @param {?} _pageHeaderService\n */\nconstructor(private _pageHeaderService: PageHeaderService) {\n\n        // subscribe to stream with a debounce (a small debounce is all that is required)\n        this._subscription = this._hover$.pipe(debounceTime(1)).subscribe(visible => this.dropdownOpen = visible);\n\n        // Close submenus when selected item changes\n        this._subscription.add(\n            _pageHeaderService.selected$.subscribe(() => {\n                this.dropdownOpen = false;\n            })\n        );\n    }\n/**\n * @return {?}\n */\nngOnDestroy(): void {\n        this._subscription.unsubscribe();\n    }\n/**\n * @param {?} item\n * @return {?}\n */\nselect(item: PageHeaderNavigationDropdownItem) {\n\n        // clicking on an item with children then return\n        if (item.children) {\n            return;\n        }\n\n        // emit the selected item in an event\n        this._pageHeaderService.select(item);\n    }\n/**\n * @return {?}\n */\nfocus(): void {\n        this.button.nativeElement.focus();\n    }\n/**\n * @return {?}\n */\nhoverStart() {\n        this._hover$.next(true);\n    }\n/**\n * @return {?}\n */\nhoverLeave() {\n        this._hover$.next(false);\n    }\n/**\n * @return {?}\n */\nclose() {\n        this.dropdownOpen = false;\n    }\n/**\n * @param {?} event\n * @param {?} item\n * @return {?}\n */\nkeydownHandler(event: KeyboardEvent, item: PageHeaderNavigationDropdownItem): void {\n\n        switch (event.key) {\n            case 'Enter':\n            case ' ':\n                this.select(item);\n                event.preventDefault();\n                event.stopPropagation();\n                break;\n        }\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-page-header-horizontal-navigation-dropdown-item',\n    exportAs: 'ux-page-header-horizontal-navigation-dropdown-item',\n    template: `\n      <div *ngIf=\"item.children && item.children.length > 0\"\n          dropdown\n          #subMenu=\"bs-dropdown\"\n          [isOpen]=\"dropdownOpen\"\n          container=\"body\"\n          placement=\"right\"\n          (mouseenter)=\"hoverStart()\"\n          (mouseleave)=\"hoverLeave()\">\n\n          <a role=\"menuitem\"\n              class=\"dropdown-item\"\n              [class.selected]=\"item.selected\"\n              aria-haspopup=\"true\"\n              [attr.aria-expanded]=\"dropdownOpen\"\n              [attr.aria-selected]=\"item.selected\"\n              tabindex=\"-1\"\n              #button\n              dropdownToggle\n              uxMenuNavigationToggle\n              #menuNavigationToggle=\"uxMenuNavigationToggle\"\n              [(menuOpen)]=\"dropdownOpen\"\n              menuPosition=\"right\">\n\n              <span class=\"dropdown-item-title\">{{ item.title }}</span>\n              <span class=\"dropdown-item-icon hpe-icon hpe-next\"></span>\n\n          </a>\n\n          <ul *dropdownMenu\n              role=\"menu\"\n              class=\"dropdown-menu horizontal-navigation-dropdown-submenu\"\n              (mouseenter)=\"hoverStart()\"\n              (mouseleave)=\"hoverLeave()\"\n              uxMenuNavigation\n              #menuNavigation=\"uxMenuNavigation\"\n              [toggleButton]=\"menuNavigationToggle\"\n              toggleButtonPosition=\"left\">\n\n              <li *ngFor=\"let subItem of item.children\" role=\"none\">\n\n                  <a role=\"menuitem\"\n                      class=\"dropdown-item\"\n                      [class.selected]=\"subItem.selected\"\n                      [attr.aria-selected]=\"subItem.selected\"\n                      tabindex=\"-1\"\n                      (click)=\"select(subItem, item)\"\n                      (keydown)=\"keydownHandler($event, subItem)\"\n                      uxMenuNavigationItem>\n\n                      <span class=\"dropdown-item-title\">{{ subItem.title }}</span>\n\n                  </a>\n\n              </li>\n          </ul>\n\n      </div>\n\n      <div *ngIf=\"!item.children || item.children.length === 0\"\n          (mouseenter)=\"hoverStart()\"\n          (mouseleave)=\"hoverLeave()\">\n\n          <a role=\"menuitem\"\n              #button\n              class=\"dropdown-item\"\n              [class.selected]=\"item.selected\"\n              [attr.aria-selected]=\"item.selected\"\n              tabindex=\"-1\"\n              (click)=\"select(item)\"\n              (keydown)=\"keydownHandler($event, item)\">\n\n              <span class=\"dropdown-item-title\">{{ item.title }}</span>\n\n          </a>\n\n      </div>\n    `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: PageHeaderService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'item': [{ type: Input },],\n'button': [{ type: ViewChild, args: ['button', ] },],\n};\n}\n\nfunction PageHeaderNavigationDropdownItemComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nPageHeaderNavigationDropdownItemComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nPageHeaderNavigationDropdownItemComponent.ctorParameters;\n/** @type {?} */\nPageHeaderNavigationDropdownItemComponent.propDecorators;\n/** @type {?} */\nPageHeaderNavigationDropdownItemComponent.prototype.item;\n/** @type {?} */\nPageHeaderNavigationDropdownItemComponent.prototype.button;\n/** @type {?} */\nPageHeaderNavigationDropdownItemComponent.prototype.dropdownOpen;\n/** @type {?} */\nPageHeaderNavigationDropdownItemComponent.prototype._subscription;\n/** @type {?} */\nPageHeaderNavigationDropdownItemComponent.prototype._hover$;\n/** @type {?} */\nPageHeaderNavigationDropdownItemComponent.prototype._pageHeaderService;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, ElementRef, Input, OnDestroy, OnInit, QueryList, ViewChild, ViewChildren } from '@angular/core';\nimport { BsDropdownDirective } from 'ngx-bootstrap/dropdown';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { Subscription } from 'rxjs/Subscription';\nimport { MenuNavigationToggleDirective } from '../../../../directives/menu-navigation/menu-navigation-toggle.directive';\nimport { PageHeaderService } from '../../page-header.service';\nimport { PageHeaderNavigationDropdownItemComponent } from '../navigation-dropdown-item/navigation-dropdown-item.component';\nimport { PageHeaderNavigationItem } from '../navigation.component';\nexport class PageHeaderNavigationItemComponent implements OnInit, OnDestroy {\n\n     button: MenuNavigationToggleDirective;\n     menu: BsDropdownDirective;\n     dropdowns: QueryList<PageHeaderNavigationDropdownItemComponent>;\n\n     item: PageHeaderNavigationItem;\n\n    secondary$: BehaviorSubject<boolean> = this._pageHeaderService.secondary$;\n\n    isOpen: boolean;\nprivate _subscription: Subscription;\n/**\n * @param {?} elementRef\n * @param {?} _pageHeaderService\n */\nconstructor(\npublic elementRef: ElementRef,\nprivate _pageHeaderService: PageHeaderService\n    ) { }\n/**\n * @return {?}\n */\nngOnInit() {\n\n        // Close submenus when selected item changes\n        this._subscription = this._pageHeaderService.selected$.subscribe((next) => {\n            if (next && this.isOpen) {\n                this.isOpen = false;\n\n                // If menu was closed, keep focus on the toggle button\n                this.button.focus();\n            }\n        });\n\n        if (this.menu) {\n            this._subscription.add(\n                this.menu.onHidden.subscribe(() => this.dropdowns.forEach(dropdown => dropdown.close()))\n            );\n        }\n    }\n/**\n * @return {?}\n */\nngOnDestroy(): void {\n        this._subscription.unsubscribe();\n    }\n/**\n * @return {?}\n */\nselect() {\n\n        // if the item has children then do nothing at this stage\n        if (this.item.children && this._pageHeaderService.secondary$.getValue() === false) {\n            return;\n        }\n\n        // otherwise select the current item\n        this._pageHeaderService.select(this.item);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-page-header-horizontal-navigation-item',\n    template: `\n      <div *ngIf=\"item.children && item.children.length > 0 && !(secondary$ | async)\"\n          dropdown\n          #menu=\"bs-dropdown\"\n          [(isOpen)]=\"isOpen\"\n          container=\"body\"\n          placement=\"bottom left\">\n\n          <button role=\"menuitem\"\n              class=\"horizontal-navigation-button\"\n              [class.selected]=\"item.selected\"\n              [class.open]=\"isOpen\"\n              aria-haspopup=\"true\"\n              [attr.aria-expanded]=\"isOpen\"\n              [attr.aria-selected]=\"item.selected\"\n              dropdownToggle\n              uxMenuNavigationToggle\n              #button=\"uxMenuNavigationToggle\"\n              [(menuOpen)]=\"isOpen\">\n\n              <span class=\"hpe-icon navigation-item-icon\" *ngIf=\"item.icon\" [ngClass]=\"item?.icon\"></span>\n              <span class=\"navigation-item-label\">{{ item?.title }}</span>\n              <span class=\"hpe-icon hpe-down\"></span>\n\n          </button>\n\n          <div *dropdownMenu\n              role=\"menu\"\n              class=\"dropdown-menu horizontal-navigation-dropdown-menu\"\n              uxMenuNavigation\n              [toggleButton]=\"button\"\n              toggleButtonPosition=\"top\">\n\n              <div *ngFor=\"let item of item?.children\" uxMenuNavigationItem (activated)=\"dropdownItem.focus()\">\n                  <ux-page-header-horizontal-navigation-dropdown-item\n                      #dropdownItem=\"ux-page-header-horizontal-navigation-dropdown-item\"\n                      [item]=\"item\">\n                  </ux-page-header-horizontal-navigation-dropdown-item>\n              </div>\n\n          </div>\n\n      </div>\n\n      <button *ngIf=\"!item.children || item.children.length === 0 || (secondary$ | async)\"\n          role=\"menuitem\"\n          class=\"horizontal-navigation-button\"\n          [class.selected]=\"item.selected\"\n          [attr.aria-selected]=\"item.selected\"\n          (click)=\"select()\">\n\n          <span class=\"hpe-icon navigation-item-icon\" *ngIf=\"item.icon\" [ngClass]=\"item?.icon\"></span>\n          <span class=\"navigation-item-label\">{{ item?.title }}</span>\n\n      </button>\n    `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: PageHeaderService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'button': [{ type: ViewChild, args: ['button', ] },],\n'menu': [{ type: ViewChild, args: ['menu', ] },],\n'dropdowns': [{ type: ViewChildren, args: [PageHeaderNavigationDropdownItemComponent, ] },],\n'item': [{ type: Input },],\n};\n}\n\nfunction PageHeaderNavigationItemComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nPageHeaderNavigationItemComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nPageHeaderNavigationItemComponent.ctorParameters;\n/** @type {?} */\nPageHeaderNavigationItemComponent.propDecorators;\n/** @type {?} */\nPageHeaderNavigationItemComponent.prototype.button;\n/** @type {?} */\nPageHeaderNavigationItemComponent.prototype.menu;\n/** @type {?} */\nPageHeaderNavigationItemComponent.prototype.dropdowns;\n/** @type {?} */\nPageHeaderNavigationItemComponent.prototype.item;\n/** @type {?} */\nPageHeaderNavigationItemComponent.prototype.secondary$;\n/** @type {?} */\nPageHeaderNavigationItemComponent.prototype.isOpen;\n/** @type {?} */\nPageHeaderNavigationItemComponent.prototype._subscription;\n/** @type {?} */\nPageHeaderNavigationItemComponent.prototype.elementRef;\n/** @type {?} */\nPageHeaderNavigationItemComponent.prototype._pageHeaderService;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { AfterViewInit, Component, ElementRef, OnDestroy, QueryList, ViewChildren } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { Subscription } from 'rxjs/Subscription';\nimport { distinctUntilChanged } from 'rxjs/operators';\nimport { ResizeService } from '../../../directives/resize/index';\nimport { PageHeaderNavigation, PageHeaderService } from '../page-header.service';\nimport { PageHeaderNavigationItemComponent } from './navigation-item/navigation-item.component';\nexport class PageHeaderNavigationComponent implements AfterViewInit, OnDestroy {\n\n     menuItems: QueryList<PageHeaderNavigationItemComponent>;\n\n    items$: BehaviorSubject<PageHeaderNavigationItem[]> = this._pageHeaderService.items$;\n    indicatorVisible: boolean = false;\n    indicatorX: number = 0;\n    indicatorWidth: number = 0;\nprivate _subscription = new Subscription();\n/**\n * @param {?} elementRef\n * @param {?} resizeService\n * @param {?} _pageHeaderService\n */\nconstructor(elementRef: ElementRef, resizeService: ResizeService,\nprivate _pageHeaderService: PageHeaderService) {\n        this._subscription.add(resizeService.addResizeListener(elementRef.nativeElement).subscribe(this.updateSelectedIndicator.bind(this)));\n        this._subscription.add(_pageHeaderService.selected$.pipe(distinctUntilChanged()).subscribe(this.updateSelectedIndicator.bind(this)));\n        this._subscription.add(_pageHeaderService.secondary$.pipe(distinctUntilChanged()).subscribe(this.updateSelectedIndicator.bind(this)));\n    }\n/**\n * @return {?}\n */\nngAfterViewInit(): void {\n        this.updateSelectedIndicator();\n    }\n/**\n * @return {?}\n */\nngOnDestroy(): void {\n        this._subscription.unsubscribe();\n    }\n/**\n * @return {?}\n */\nupdateSelectedIndicator(): void {\n        setTimeout(() => {\n            // find the selected item\n            const /** @type {?} */ selected = this.menuItems.find(item => item.item.selected);\n\n            // determine whether or not to show the indicator\n            this.indicatorVisible = !!selected;\n\n            // set the width of the indicator to match the width of the navigation item\n            if (selected) {\n                const /** @type {?} */ styles = getComputedStyle(selected.elementRef.nativeElement);\n\n                this.indicatorX = selected.elementRef.nativeElement.offsetLeft;\n                this.indicatorWidth = parseInt(styles.getPropertyValue('width'));\n            }\n        });\n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-page-header-horizontal-navigation',\n    template: `\n      <ux-page-header-horizontal-navigation-item\n          *ngFor=\"let item of items$ | async\"\n          [item]=\"item\">\n      </ux-page-header-horizontal-navigation-item>\n\n      <div class=\"selected-indicator\"\n          [style.opacity]=\"indicatorVisible ? 1 : 0\"\n          [style.margin-left.px]=\"indicatorX\"\n          [style.width.px]=\"indicatorWidth\">\n      </div>\n    `,\n    host: {\n        'role': 'menubar'\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: ResizeService, },\n{type: PageHeaderService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'menuItems': [{ type: ViewChildren, args: [PageHeaderNavigationItemComponent, ] },],\n};\n}\n\nfunction PageHeaderNavigationComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nPageHeaderNavigationComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nPageHeaderNavigationComponent.ctorParameters;\n/** @type {?} */\nPageHeaderNavigationComponent.propDecorators;\n/** @type {?} */\nPageHeaderNavigationComponent.prototype.menuItems;\n/** @type {?} */\nPageHeaderNavigationComponent.prototype.items$;\n/** @type {?} */\nPageHeaderNavigationComponent.prototype.indicatorVisible;\n/** @type {?} */\nPageHeaderNavigationComponent.prototype.indicatorX;\n/** @type {?} */\nPageHeaderNavigationComponent.prototype.indicatorWidth;\n/** @type {?} */\nPageHeaderNavigationComponent.prototype._subscription;\n/** @type {?} */\nPageHeaderNavigationComponent.prototype._pageHeaderService;\n}\n\n\nexport interface PageHeaderNavigationItem {\n    icon?: string;\n    title: string;\n    selected?: boolean;\n    select?: (item: PageHeaderNavigationItem) => void;\n    children?: PageHeaderNavigationDropdownItem[];\n    parent?: PageHeaderNavigation;\n}\n\nexport interface PageHeaderNavigationDropdownItem {\n    title: string;\n    selected?: boolean;\n    select?: (item: PageHeaderNavigationDropdownItem) => void;\n    children?: PageHeaderNavigationDropdownItem[];\n    parent?: PageHeaderNavigation;\n}\n\n// This is an alias for MF use as \"DropdownItem\" doesn't make sense in context with how it is used\nexport interface PageHeaderSecondaryNavigationItem extends PageHeaderNavigationDropdownItem { }\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { MenuNavigationItemDirective } from './menu-navigation-item.directive';\nexport class MenuNavigationService {\n\n    active$ = new BehaviorSubject<MenuNavigationItemDirective>(null);\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction MenuNavigationService_tsickle_Closure_declarations() {\n/** @type {?} */\nMenuNavigationService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMenuNavigationService.ctorParameters;\n/** @type {?} */\nMenuNavigationService.prototype.active$;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ElementRef, EventEmitter, OnDestroy, Output } from '@angular/core';\nimport { Subscription } from 'rxjs/Subscription';\nimport { MenuNavigationService } from './menu-navigation.service';\nexport class MenuNavigationItemDirective implements OnDestroy {\n\n    \n    activated = new EventEmitter();\nprivate _subscription: Subscription;\n/**\n * @param {?} _service\n * @param {?} _elementRef\n */\nconstructor(\nprivate _service: MenuNavigationService,\nprivate _elementRef: ElementRef\n    ) {\n        this._subscription = _service.active$.subscribe((next) => {\n            if (next === this) {\n                this.setActive();\n            }\n        });\n    }\n/**\n * @return {?}\n */\nngOnDestroy(): void {\n        this._subscription.unsubscribe();\n    }\n/**\n * @return {?}\n */\nsetActive(): void {\n        this._elementRef.nativeElement.focus();\n        this.activated.emit();\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: '[uxMenuNavigationItem]'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: MenuNavigationService, },\n{type: ElementRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'activated': [{ type: Output },],\n};\n}\n\nfunction MenuNavigationItemDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nMenuNavigationItemDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMenuNavigationItemDirective.ctorParameters;\n/** @type {?} */\nMenuNavigationItemDirective.propDecorators;\n/** @type {?} */\nMenuNavigationItemDirective.prototype.activated;\n/** @type {?} */\nMenuNavigationItemDirective.prototype._subscription;\n/** @type {?} */\nMenuNavigationItemDirective.prototype._service;\n/** @type {?} */\nMenuNavigationItemDirective.prototype._elementRef;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { AfterContentInit, ContentChildren, Directive, ElementRef, EventEmitter, HostListener, Inject, Input, OnDestroy, OnInit, Output, QueryList, Renderer2 } from '@angular/core';\nimport { DOCUMENT } from '@angular/platform-browser';\nimport { Subscription } from 'rxjs/Subscription';\nimport { MenuNavigationItemDirective } from './menu-navigation-item.directive';\nimport { MenuNavigationToggleDirective } from './menu-navigation-toggle.directive';\nimport { MenuNavigationService } from './menu-navigation.service';\nexport class MenuNavigationDirective implements OnInit, AfterContentInit, OnDestroy {\n\n    \n    toggleButton: MenuNavigationToggleDirective;\n\n    \n    toggleButtonPosition: 'top' | 'right' | 'bottom' | 'left' = 'top';\n\n    \n    navigatedOut = new EventEmitter<KeyboardEvent>();\n\n    \n    items: QueryList<MenuNavigationItemDirective>;\n/**\n * @return {?}\n */\nget activeIndex(): number {\n        return this._itemsOrdered.indexOf(this._service.active$.value);\n    }\nprivate _itemsOrdered: MenuNavigationItemDirective[];\nprivate _document: Document;\nprivate _subscription = new Subscription();\n/**\n * @param {?} _service\n * @param {?} _elementRef\n * @param {?} _renderer\n * @param {?} document\n */\nconstructor(\nprivate _service: MenuNavigationService,\nprivate _elementRef: ElementRef,\nprivate _renderer: Renderer2,\n         document: any\n    ) {\n        this._document = document;\n    }\n/**\n * @return {?}\n */\nngOnInit(): void {\n        if (this.toggleButton) {\n            this._subscription.add(\n                this.toggleButton.keyEnter.subscribe(this.focusFirst.bind(this))\n            );\n        }\n    }\n/**\n * @return {?}\n */\nngAfterContentInit(): void {\n\n        this._subscription.add(\n            this.items.changes.subscribe(() => {\n                this._itemsOrdered = this.items.toArray();\n            })\n        );\n\n        this._itemsOrdered = this.items.toArray();\n    }\n/**\n * @return {?}\n */\nngOnDestroy(): void {\n        this._subscription.unsubscribe();\n    }\n/**\n * @return {?}\n */\nfocusFirst(): void {\n        this.moveFirst();\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nprivate keydownHandler(event: KeyboardEvent): void {\n\n        // Only handle events when focus in within the list of menu items\n        if (!this._elementRef.nativeElement.contains(this._document.activeElement)) {\n            return;\n        }\n\n        let /** @type {?} */ handled = false;\n\n        switch (event.key) {\n\n            case 'ArrowUp':\n            case 'Up':\n                this.movePrevious(event);\n                handled = true;\n                break;\n\n            case 'ArrowDown':\n            case 'Down':\n                this.moveNext(event);\n                handled = true;\n                break;\n\n            case 'ArrowLeft':\n            case 'Left':\n                if (this.toggleButtonPosition === 'left') {\n                    this.moveToToggleButton(event);\n                    handled = true;\n                }\n                break;\n\n            case 'ArrowRight':\n            case 'Right':\n                if (this.toggleButtonPosition === 'right') {\n                    this.moveToToggleButton(event);\n                    handled = true;\n                }\n                break;\n\n            case 'Home':\n                this.moveFirst();\n                handled = true;\n                break;\n\n            case 'End':\n                this.moveLast();\n                handled = true;\n                break;\n\n            case 'Escape':\n                this.navigatedOut.emit(event);\n                handled = true;\n                break;\n        }\n\n        if (handled) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nprivate moveNext(event: KeyboardEvent): void {\n\n        // Do nothing if there's no active menu item registered\n        if (this.activeIndex < 0) {\n            return;\n        }\n\n        const /** @type {?} */ nextIndex = this.activeIndex + 1;\n        if (nextIndex < this._itemsOrdered.length) {\n\n            // Activate the next menu item\n            // (uxMenuNavigationItem subscribes to this and applies focus if it matches)\n            this._service.active$.next(this._itemsOrdered[nextIndex]);\n\n        } else {\n\n            // Check if focus went out of bounds in the direction of the origin toggle button\n            if (this.toggleButtonPosition === 'bottom') {\n                this.moveToToggleButton(event);\n            }\n        }\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nprivate movePrevious(event: KeyboardEvent): void {\n\n        // Do nothing if there's no active menu item registered\n        if (this.activeIndex < 0) {\n            return;\n        }\n\n        const /** @type {?} */ nextIndex = this.activeIndex - 1;\n        if (nextIndex >= 0) {\n\n            // Activate the previous menu item\n            // (uxMenuNavigationItem subscribes to this and applies focus if it matches)\n            this._service.active$.next(this._itemsOrdered[nextIndex]);\n\n        } else {\n\n            // Check if focus went out of bounds in the direction of the origin toggle button\n            if (this.toggleButtonPosition === 'top') {\n                this.moveToToggleButton(event);\n            }\n        }\n    }\n/**\n * @return {?}\n */\nprivate moveFirst(): void {\n        if (this._itemsOrdered.length > 0) {\n            this._service.active$.next(this._itemsOrdered[0]);\n        }\n    }\n/**\n * @return {?}\n */\nprivate moveLast(): void {\n        if (this._itemsOrdered.length > 0) {\n            this._service.active$.next(this._itemsOrdered[this._itemsOrdered.length - 1]);\n        }\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nprivate moveToToggleButton(event: KeyboardEvent): void {\n        if (this.toggleButton) {\n            this.toggleButton.focus();\n            this.toggleButton.menuOpen = false;\n        }\n\n        this.navigatedOut.emit(event);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: '[uxMenuNavigation]',\n    exportAs: 'uxMenuNavigation',\n    providers: [MenuNavigationService]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: MenuNavigationService, },\n{type: ElementRef, },\n{type: Renderer2, },\n{type: undefined, decorators: [{ type: Inject, args: [DOCUMENT, ] }, ]},\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'toggleButton': [{ type: Input },],\n'toggleButtonPosition': [{ type: Input },],\n'navigatedOut': [{ type: Output },],\n'items': [{ type: ContentChildren, args: [MenuNavigationItemDirective, { descendants: true }, ] },],\n'keydownHandler': [{ type: HostListener, args: ['document:keydown', ['$event'], ] },],\n};\n}\n\nfunction MenuNavigationDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nMenuNavigationDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMenuNavigationDirective.ctorParameters;\n/** @type {?} */\nMenuNavigationDirective.propDecorators;\n/** @type {?} */\nMenuNavigationDirective.prototype.toggleButton;\n/** @type {?} */\nMenuNavigationDirective.prototype.toggleButtonPosition;\n/** @type {?} */\nMenuNavigationDirective.prototype.navigatedOut;\n/** @type {?} */\nMenuNavigationDirective.prototype.items;\n/** @type {?} */\nMenuNavigationDirective.prototype._itemsOrdered;\n/** @type {?} */\nMenuNavigationDirective.prototype._document;\n/** @type {?} */\nMenuNavigationDirective.prototype._subscription;\n/** @type {?} */\nMenuNavigationDirective.prototype._service;\n/** @type {?} */\nMenuNavigationDirective.prototype._elementRef;\n/** @type {?} */\nMenuNavigationDirective.prototype._renderer;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ElementRef, EventEmitter, HostListener, Input, Output } from '@angular/core';\nexport class MenuNavigationToggleDirective {\n/**\n * @return {?}\n */\nget menuOpen(): boolean {\n        return this._menuOpen;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset menuOpen(value: boolean) {\n        this._menuOpen = value;\n        this.menuOpenChange.emit(value);\n    }\n\n    \n    menuPosition: 'top' | 'right' | 'bottom' | 'left' = 'bottom';\n\n    \n    menuOpenChange = new EventEmitter<boolean>();\n\n    keyEnter = new EventEmitter<void>();\nprivate _menuOpen: boolean;\n/**\n * @param {?} _elementRef\n */\nconstructor(private _elementRef: ElementRef) { }\n/**\n * @return {?}\n */\nfocus(): void {\n        this._elementRef.nativeElement.focus();\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nkeydownHandler(event: KeyboardEvent): void {\n\n        if (this.isKeyMatch(event.key)) {\n\n            // Open the menu\n            this.menuOpen = true;\n\n            // Allow the menu to init, then send the event to give it focus\n            setTimeout(() => {\n                this.keyEnter.emit();\n            });\n\n            event.preventDefault();\n            event.stopPropagation();\n        }\n    }\n/**\n * @param {?} key\n * @return {?}\n */\nprivate isKeyMatch(key: string): boolean {\n        switch (key) {\n            case 'Enter':\n            case ' ':\n                return true;\n\n            case 'ArrowUp':\n            case 'Up':\n                return this.menuPosition === 'top';\n\n            case 'ArrowDown':\n            case 'Down':\n                return this.menuPosition === 'bottom';\n\n            case 'ArrowLeft':\n            case 'Left':\n                return this.menuPosition === 'left';\n\n            case 'ArrowRight':\n            case 'Right':\n                return this.menuPosition === 'right';\n        }\n\n        return false;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: '[uxMenuNavigationToggle]',\n    exportAs: 'uxMenuNavigationToggle'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'menuOpen': [{ type: Input },],\n'menuPosition': [{ type: Input },],\n'menuOpenChange': [{ type: Output },],\n'keydownHandler': [{ type: HostListener, args: ['keydown', ['$event'], ] },],\n};\n}\n\nfunction MenuNavigationToggleDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nMenuNavigationToggleDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMenuNavigationToggleDirective.ctorParameters;\n/** @type {?} */\nMenuNavigationToggleDirective.propDecorators;\n/** @type {?} */\nMenuNavigationToggleDirective.prototype.menuPosition;\n/** @type {?} */\nMenuNavigationToggleDirective.prototype.menuOpenChange;\n/** @type {?} */\nMenuNavigationToggleDirective.prototype.keyEnter;\n/** @type {?} */\nMenuNavigationToggleDirective.prototype._menuOpen;\n/** @type {?} */\nMenuNavigationToggleDirective.prototype._elementRef;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\n\nimport { MenuNavigationDirective } from './menu-navigation.directive';\nimport { MenuNavigationItemDirective } from './menu-navigation-item.directive';\nimport { MenuNavigationToggleDirective } from './menu-navigation-toggle.directive';\n\nconst /** @type {?} */ EXPORTS = [\n    MenuNavigationDirective,\n    MenuNavigationItemDirective,\n    MenuNavigationToggleDirective\n];\nexport class MenuNavigationModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [],\n    exports: EXPORTS,\n    declarations: EXPORTS,\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction MenuNavigationModule_tsickle_Closure_declarations() {\n/** @type {?} */\nMenuNavigationModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMenuNavigationModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\n\nimport { PageHeaderComponent } from './page-header.component';\nimport { BreadcrumbsModule } from '../breadcrumbs/index';\nimport { PageHeaderIconMenuComponent } from './icon-menu/icon-menu.component';\nimport { PageHeaderNavigationComponent } from './navigation/navigation.component';\nimport { PageHeaderNavigationItemComponent } from './navigation/navigation-item/navigation-item.component';\nimport { PageHeaderNavigationDropdownItemComponent } from './navigation/navigation-dropdown-item/navigation-dropdown-item.component';\nimport { PageHeaderCustomMenuDirective } from './custom-menu/custom-menu.directive';\nimport { ResizeModule } from '../../directives/resize/index';\nimport { ColorServiceModule } from '../../services/color/index';\nimport { MenuNavigationModule } from '../../directives/menu-navigation/index';\nexport class PageHeaderModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        CommonModule,\n        BreadcrumbsModule,\n        ColorServiceModule,\n        ResizeModule,\n        MenuNavigationModule,\n        BsDropdownModule.forRoot()\n    ],\n    exports: [\n        PageHeaderComponent,\n        PageHeaderCustomMenuDirective\n    ],\n    declarations: [\n        PageHeaderComponent,\n        PageHeaderIconMenuComponent,\n        PageHeaderCustomMenuDirective,\n        PageHeaderNavigationComponent,\n        PageHeaderNavigationItemComponent,\n        PageHeaderNavigationDropdownItemComponent\n    ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction PageHeaderModule_tsickle_Closure_declarations() {\n/** @type {?} */\nPageHeaderModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nPageHeaderModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Input, ChangeDetectionStrategy } from '@angular/core';\nexport class ProgressBarComponent {\n     value: number = 0;\n     max: number = 100;\n     indeterminate: boolean = false;\n     trackColor: string;\n     barColor: string;\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-progress-bar',\n    template: `\n      <div *ngIf=\"!indeterminate\" class=\"progressbar-track\" [style.width.%]=\"(value / max) * 100\" [style.backgroundColor]=\"barColor\">\n          <ng-content></ng-content>\n      </div>\n      <div *ngIf=\"indeterminate\" class=\"progressbar-track indeterminate\" [style.backgroundColor]=\"barColor\">\n          <ng-content></ng-content>\n      </div>\n    `,\n    changeDetection: ChangeDetectionStrategy.OnPush\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'value': [{ type: Input },],\n'max': [{ type: Input },],\n'indeterminate': [{ type: Input },],\n'trackColor': [{ type: Input },],\n'barColor': [{ type: Input },],\n};\n}\n\nfunction ProgressBarComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nProgressBarComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nProgressBarComponent.ctorParameters;\n/** @type {?} */\nProgressBarComponent.propDecorators;\n/** @type {?} */\nProgressBarComponent.prototype.value;\n/** @type {?} */\nProgressBarComponent.prototype.max;\n/** @type {?} */\nProgressBarComponent.prototype.indeterminate;\n/** @type {?} */\nProgressBarComponent.prototype.trackColor;\n/** @type {?} */\nProgressBarComponent.prototype.barColor;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ProgressBarComponent } from './progress-bar.component';\nexport class ProgressBarModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        CommonModule\n    ],\n    exports: [ProgressBarComponent],\n    declarations: [ProgressBarComponent]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ProgressBarModule_tsickle_Closure_declarations() {\n/** @type {?} */\nProgressBarModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nProgressBarModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, EventEmitter, Input, Output, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nexport const /** @type {?} */ RADIOBUTTON_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => RadioButtonComponent),\n    multi: true\n};\n\nlet /** @type {?} */ uniqueRadioId = 0;\nexport class RadioButtonComponent implements ControlValueAccessor {\nprivate _radioButtonId: string = `ux-radio-button-${++uniqueRadioId}`;\n\n     id: string = this._radioButtonId;\n     name: string | null;\n     required: boolean;\n     tabindex: number = 0;\n     clickable: boolean = true;\n     disabled: boolean = false;\n     simplified: boolean = false;\n     option: any;\n     ariaLabel: string = '';\n     ariaLabelledby: string = null;\n     ariaDescribedby: string = null;\n\n     valueChange: EventEmitter<any> = new EventEmitter<any>();\n/**\n * @return {?}\n */\nget value() {\n        return this._value;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset value(value: boolean) {\n        this._value = value;\n\n        // invoke change event\n        this.valueChange.emit(this._value);\n\n        // call callback\n        this.onChangeCallback(this._value);\n        this.onTouchedCallback();        \n    }\n/**\n * @return {?}\n */\nget inputId(): string { \n        return `${this.id || this._radioButtonId}-input`;\n    }\nprivate _value: any = false;\n\n    focused: boolean = false;\n    onTouchedCallback: () => void = () => { };\n    onChangeCallback: (_: any) => void = () => { };\n/**\n * @return {?}\n */\ntoggle(): void {\n\n        if (this.disabled || !this.clickable) {\n            return;\n        }\n\n        // toggle the checked state\n        this.value = this.option;\n\n        // call callback\n        this.onChangeCallback(this.value);\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nwriteValue(value: boolean): void {\n        if (value !== this._value) {\n            this._value = value;\n        }\n    }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnChange(fn: any): void {\n        this.onChangeCallback = fn;\n    }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnTouched(fn: any): void {\n        this.onTouchedCallback = fn;\n    }\n/**\n * @param {?} isDisabled\n * @return {?}\n */\nsetDisabledState(isDisabled: boolean): void {\n        this.disabled = isDisabled;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-radio-button',\n    template: `\n      <label [attr.for]=\"inputId\" class=\"ux-radio-button\"\n             [class.ux-radio-button-checked]=\"value === option\"\n             [class.ux-radio-button-simplified]=\"simplified\"\n             [class.ux-radio-button-disabled]=\"disabled\"\n             [class.ux-radio-button-focused]=\"focused\">\n\n          <div class=\"ux-radio-button-container\">\n              <input class=\"ux-radio-button-input\"\n                  type=\"radio\"\n                  [id]=\"inputId\"\n                  [checked]=\"value === option\"\n                  [disabled]=\"disabled\"\n                  [tabindex]=\"tabindex || value === option ? 0 : -1\"\n                  [attr.name]=\"name\"\n                  [required]=\"required\"\n                  [attr.aria-label]=\"ariaLabel\"\n                  [attr.aria-labelledby]=\"ariaLabelledby\"\n                  [attr.aria-describedby]=\"ariaDescribedby\"\n                  [attr.aria-checked]=\"value === option\"\n                  (focus)=\"focused = true\"\n                  (blur)=\"focused = false\"\n                  (change)=\"toggle()\"\n                  (click)=\"$event.stopPropagation()\">\n          </div>\n\n          <span class=\"ux-radio-button-label\">\n              <ng-content></ng-content>\n          </span>\n\n      </label>\n    `,\n    providers: [RADIOBUTTON_VALUE_ACCESSOR]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'id': [{ type: Input },],\n'name': [{ type: Input },],\n'required': [{ type: Input },],\n'tabindex': [{ type: Input },],\n'clickable': [{ type: Input },],\n'disabled': [{ type: Input },],\n'simplified': [{ type: Input },],\n'option': [{ type: Input },],\n'ariaLabel': [{ type: Input, args: ['aria-label', ] },],\n'ariaLabelledby': [{ type: Input, args: ['aria-labelledby', ] },],\n'ariaDescribedby': [{ type: Input, args: ['aria-describedby', ] },],\n'valueChange': [{ type: Output },],\n'value': [{ type: Input },],\n};\n}\n\nfunction RadioButtonComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nRadioButtonComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nRadioButtonComponent.ctorParameters;\n/** @type {?} */\nRadioButtonComponent.propDecorators;\n/** @type {?} */\nRadioButtonComponent.prototype._radioButtonId;\n/** @type {?} */\nRadioButtonComponent.prototype.id;\n/** @type {?} */\nRadioButtonComponent.prototype.name;\n/** @type {?} */\nRadioButtonComponent.prototype.required;\n/** @type {?} */\nRadioButtonComponent.prototype.tabindex;\n/** @type {?} */\nRadioButtonComponent.prototype.clickable;\n/** @type {?} */\nRadioButtonComponent.prototype.disabled;\n/** @type {?} */\nRadioButtonComponent.prototype.simplified;\n/** @type {?} */\nRadioButtonComponent.prototype.option;\n/** @type {?} */\nRadioButtonComponent.prototype.ariaLabel;\n/** @type {?} */\nRadioButtonComponent.prototype.ariaLabelledby;\n/** @type {?} */\nRadioButtonComponent.prototype.ariaDescribedby;\n/** @type {?} */\nRadioButtonComponent.prototype.valueChange;\n/** @type {?} */\nRadioButtonComponent.prototype._value;\n/** @type {?} */\nRadioButtonComponent.prototype.focused;\n/** @type {?} */\nRadioButtonComponent.prototype.onTouchedCallback;\n/** @type {?} */\nRadioButtonComponent.prototype.onChangeCallback;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport {FormsModule} from '@angular/forms';\n\nimport { RadioButtonComponent } from './radiobutton.component';\nexport class RadioButtonModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [FormsModule],\n    exports: [RadioButtonComponent],\n    declarations: [RadioButtonComponent]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction RadioButtonModule_tsickle_Closure_declarations() {\n/** @type {?} */\nRadioButtonModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nRadioButtonModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs/Subject';\nimport { SearchBuilderQuery } from './interfaces/query.interface';\nimport { SearchBuilderGroupQuery } from './interfaces/group-query.interface';\nimport { SearchBuilderComponentDefinition } from './interfaces/component-definition.interface';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nexport class SearchBuilderService {\n\n  query: SearchBuilderQuery = {};\n  queryChange: Subject<SearchBuilderQuery> = new Subject<SearchBuilderQuery>();\n  validationChange: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(true);\nprivate _componentId: number = 0;\nprivate _components: SearchBuilderComponentDefinition[] = [];\nprivate _validation: { [key: number]: boolean } = {};\n/**\n * Add a component to the internal list of components\n * @param {?} component\n * @return {?}\n */\nregisterComponent(component: SearchBuilderComponentDefinition): void {\n\n    // ensure there are no components with a matching name\n    if (this._components.find(cmp => cmp.name === component.name)) {\n      throw new Error(`Search builder components must have a unique name. The name ${component.name} has already been used.`);\n    }\n\n    // if unique then add the component to the list\n    this._components.push(component);\n  }\n/**\n * Bulk registration of components\n * (Just a helper method)\n * @param {?} components\n * @return {?}\n */\nregisterComponents(components: SearchBuilderComponentDefinition[]): void {\n    components.forEach(component => this.registerComponent(component));\n  }\n/**\n * Get a registered component class\n * @param {?} name\n * @return {?}\n */\ngetComponent(name: string): any {\n\n    // find the component\n    const /** @type {?} */ component = this._components.find(cmp => cmp.name === name);\n\n    // if there is no match throw an exception\n    if (!component) {\n      throw new Error(`No search build component with the name ${name} exists`);\n    }\n\n    // ensure config is defined - at least to an empty object\n    component.config = component.config || {};\n\n    return component;\n  }\n/**\n * Update the internal search query state\n * note that the query will be immutable\n * @param {?} query\n * @return {?}\n */\nsetQuery(query: SearchBuilderQuery): void {\n    this.query = Object.assign({}, query);\n  }\n/**\n * Return the current query state\n * @return {?}\n */\ngetQuery(): SearchBuilderQuery {\n    return this.query;\n  }\n/**\n * Trigger the observable to indicate the query has been updated\n * @return {?}\n */\nqueryHasChanged(): void {\n    this.queryChange.next(this.query);\n  }\n/**\n * Store the validation state of the query\n * @param {?} id\n * @param {?} valid\n * @return {?}\n */\nsetValid(id: number, valid: boolean): void {\n\n    // store the state for this specific component\n    this._validation[id] = valid;\n\n    // evaluate the entire validation state\n    this.validationChange.next(!Object.keys(this._validation).some(key => !this._validation[key]));\n  }\n/**\n * Generate a unique id for each component\n * @return {?}\n */\ngenerateComponentId(): number {\n    return this._componentId++;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction SearchBuilderService_tsickle_Closure_declarations() {\n/** @type {?} */\nSearchBuilderService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSearchBuilderService.ctorParameters;\n/** @type {?} */\nSearchBuilderService.prototype.query;\n/** @type {?} */\nSearchBuilderService.prototype.queryChange;\n/** @type {?} */\nSearchBuilderService.prototype.validationChange;\n/** @type {?} */\nSearchBuilderService.prototype._componentId;\n/** @type {?} */\nSearchBuilderService.prototype._components;\n/** @type {?} */\nSearchBuilderService.prototype._validation;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable } from '@angular/core';\nimport { SearchBuilderService } from '../search-builder.service';\nimport { SearchBuilderGroupQuery } from '../interfaces/group-query.interface';\nimport { SearchBuilderQuery } from '../interfaces/query.interface';\nexport class SearchBuilderGroupService {\nprivate _id: string;\n/**\n * @param {?} _searchBuilderService\n */\nconstructor(private _searchBuilderService: SearchBuilderService) { }\n/**\n * Initialise the group by defining an id\n * @param {?} id\n * @return {?}\n */\ninit(id: string): void {\n    // store the name of the group\n    this._id = id;\n\n    // create the entry in the query object if it doesn't exist\n    if (!this._searchBuilderService.query[this._id]) {\n\n      // create the section\n      this._searchBuilderService.query[this._id] = [];\n\n      // emit the changes after the initial setup\n      setTimeout(() => this._searchBuilderService.queryHasChanged());\n    }\n  }\n/**\n * Remove a field from the search builder query\n * @param {?} field\n * @return {?}\n */\nremove(field: SearchBuilderGroupQuery): void {\n    // get the query for this group\n    const /** @type {?} */ query = this.getQuery();\n\n    // remove the field from the array\n    query.splice(query.indexOf(field), 1);\n  }\n/**\n * Get the query for this specific search group\n * @return {?}\n */\ngetQuery(): SearchBuilderGroupQuery[] {\n    return this._searchBuilderService.query[this._id] ? this._searchBuilderService.query[this._id] : [];\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: SearchBuilderService, },\n];\n}\n\nfunction SearchBuilderGroupService_tsickle_Closure_declarations() {\n/** @type {?} */\nSearchBuilderGroupService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSearchBuilderGroupService.ctorParameters;\n/** @type {?} */\nSearchBuilderGroupService.prototype._id;\n/** @type {?} */\nSearchBuilderGroupService.prototype._searchBuilderService;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, OnInit, Input, Output, EventEmitter, TemplateRef } from '@angular/core';\nimport { SearchBuilderGroupService } from './search-builder-group.service';\nimport { SearchBuilderService } from '../search-builder.service';\nimport { SearchBuilderGroupQuery } from '../interfaces/group-query.interface';\nexport class SearchBuilderGroupComponent implements OnInit {\n\n   id: string;\n   header: string;\n   operator: SearchBuilderGroupOperator = 'and';\n   addText: string = 'Add a field';\n   placeholder: TemplateRef<any>;\n   showPlaceholder: boolean = false;\n\n   add: EventEmitter<MouseEvent> = new EventEmitter<MouseEvent>();\n   remove: EventEmitter<SearchBuilderGroupQuery> = new EventEmitter<SearchBuilderGroupQuery>();\n/**\n * @param {?} searchBuilderGroupService\n * @param {?} _searchBuilderService\n */\nconstructor(public searchBuilderGroupService: SearchBuilderGroupService,\nprivate _searchBuilderService: SearchBuilderService) { }\n/**\n * @return {?}\n */\nngOnInit(): void {\n\n    // ensure we have a name otherwise throw an error\n    if (!this.id) {\n      throw new Error('Search builder group must have a name attribute.');\n    }\n\n    // otherwise register the group\n    this.searchBuilderGroupService.init(this.id);\n  }\n/**\n * @param {?} field\n * @return {?}\n */\nremoveField(field: SearchBuilderGroupQuery): void {\n    this.searchBuilderGroupService.remove(field);\n    this.remove.emit(field);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'ux-search-builder-group',\n  template: `\n    <h4 class=\"search-group-title\">{{ header }}</h4>\n\n    <main class=\"search-group-content\">\n\n      <section class=\"search-group-operator search-group-operator-{{ operator }}\" [class.hidden-operator]=\"searchBuilderGroupService.getQuery().length < 2\">{{ operator }}</section>\n\n      <section class=\"search-group-items\">\n\n        <div class=\"search-group-item-container\" *ngFor=\"let field of searchBuilderGroupService.getQuery()\">\n\n          <div class=\"search-group-item\">\n            <ng-container *uxSearchBuilderOutlet=\"field.type; context: field\"></ng-container>\n          </div>\n\n          <div class=\"search-group-item-remove\" (click)=\"removeField(field)\">\n            <span class=\"hpe-icon hpe-close\"></span>\n          </div>\n        </div>\n\n        <!-- Placeholder Item -->\n        <ng-container *ngIf=\"showPlaceholder\">\n\n          <!-- The Default Placeholder -->\n          <div class=\"search-group-item-container placeholder-item\" *ngIf=\"!placeholder\">\n        \n            <div class=\"search-group-item\">\n              <label class=\"form-label\">New field</label>\n              <div class=\"form-control\"></div>\n            </div>\n  \n          </div>\n\n          <!-- Allow a custom placeholder -->\n        <ng-container *ngTemplateOutlet=\"placeholder\"></ng-container>\n\n        </ng-container>\n\n      </section>\n\n      <section class=\"search-builder-group-add-field\" (click)=\"add.emit($event)\">\n\n        <button type=\"button\" class=\"btn btn-icon btn-circular button-accent\" aria-label=\"Add Field\">\n          <span class=\"hpe-icon hpe-add\" aria-hidden=\"true\"></span>\n        </button>\n\n        <span class=\"search-builder-group-add-field-label\">{{ addText }}</span>\n\n      </section>\n\n    </main>\n\n    <hr class=\"search-builder-group-divider\">\n  `,\n  providers: [SearchBuilderGroupService]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: SearchBuilderGroupService, },\n{type: SearchBuilderService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'id': [{ type: Input },],\n'header': [{ type: Input },],\n'operator': [{ type: Input },],\n'addText': [{ type: Input },],\n'placeholder': [{ type: Input },],\n'showPlaceholder': [{ type: Input },],\n'add': [{ type: Output },],\n'remove': [{ type: Output },],\n};\n}\n\nfunction SearchBuilderGroupComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nSearchBuilderGroupComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSearchBuilderGroupComponent.ctorParameters;\n/** @type {?} */\nSearchBuilderGroupComponent.propDecorators;\n/** @type {?} */\nSearchBuilderGroupComponent.prototype.id;\n/** @type {?} */\nSearchBuilderGroupComponent.prototype.header;\n/** @type {?} */\nSearchBuilderGroupComponent.prototype.operator;\n/** @type {?} */\nSearchBuilderGroupComponent.prototype.addText;\n/** @type {?} */\nSearchBuilderGroupComponent.prototype.placeholder;\n/** @type {?} */\nSearchBuilderGroupComponent.prototype.showPlaceholder;\n/** @type {?} */\nSearchBuilderGroupComponent.prototype.add;\n/** @type {?} */\nSearchBuilderGroupComponent.prototype.remove;\n/** @type {?} */\nSearchBuilderGroupComponent.prototype.searchBuilderGroupService;\n/** @type {?} */\nSearchBuilderGroupComponent.prototype._searchBuilderService;\n}\n\n\nexport type SearchBuilderGroupOperator = 'and' | 'or' | 'not';\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, OnInit, Type, Input, ComponentRef, ComponentFactoryResolver, ViewContainerRef } from '@angular/core';\nimport { SearchBuilderService } from '../search-builder.service';\nexport class SearchBuilderOutletDirective implements OnInit {\n\n     uxSearchBuilderOutlet: string;\n     uxSearchBuilderOutletContext: any;\nprivate _componentRef: ComponentRef<any>;\n/**\n * @param {?} _viewContainerRef\n * @param {?} _componentFactoryResolver\n * @param {?} _searchBuilderService\n */\nconstructor(\nprivate _viewContainerRef: ViewContainerRef,\nprivate _componentFactoryResolver: ComponentFactoryResolver,\nprivate _searchBuilderService: SearchBuilderService\n    ) { }\n/**\n * @return {?}\n */\nngOnInit(): void {\n\n        // get the class from the type\n        const /** @type {?} */ componentDefinition = this._searchBuilderService.getComponent(this.uxSearchBuilderOutlet);\n\n        // create the component factory\n        const /** @type {?} */ componentFactory = this._componentFactoryResolver.resolveComponentFactory(componentDefinition.component);\n\n        // create the component instance\n        this._componentRef = this._viewContainerRef.createComponent(componentFactory);\n\n        // combine the predefined config with any dynmaic config\n        const /** @type {?} */ config = Object.assign({}, componentDefinition.config, this.uxSearchBuilderOutletContext.config || {});\n\n        // set the context and config property on the component instance\n        this._componentRef.instance.context = this.uxSearchBuilderOutletContext;\n        this._componentRef.instance.config = config;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: '[uxSearchBuilderOutlet]'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ViewContainerRef, },\n{type: ComponentFactoryResolver, },\n{type: SearchBuilderService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'uxSearchBuilderOutlet': [{ type: Input },],\n'uxSearchBuilderOutletContext': [{ type: Input },],\n};\n}\n\nfunction SearchBuilderOutletDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nSearchBuilderOutletDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSearchBuilderOutletDirective.ctorParameters;\n/** @type {?} */\nSearchBuilderOutletDirective.propDecorators;\n/** @type {?} */\nSearchBuilderOutletDirective.prototype.uxSearchBuilderOutlet;\n/** @type {?} */\nSearchBuilderOutletDirective.prototype.uxSearchBuilderOutletContext;\n/** @type {?} */\nSearchBuilderOutletDirective.prototype._componentRef;\n/** @type {?} */\nSearchBuilderOutletDirective.prototype._viewContainerRef;\n/** @type {?} */\nSearchBuilderOutletDirective.prototype._componentFactoryResolver;\n/** @type {?} */\nSearchBuilderOutletDirective.prototype._searchBuilderService;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, OnDestroy } from '@angular/core';\nimport { SearchBuilderService } from '../search-builder.service';\nimport { SearchBuilderGroupQuery } from '../interfaces/group-query.interface';\nimport { SearchBuilderGroupService } from '../search-builder-group/search-builder-group.service';\nimport { SearchBuilderComponentContext } from '../interfaces/component-context.interface';\nexport class BaseSearchComponent implements OnDestroy {\n\n    type: string;\n    config: any;\n    context: SearchBuilderComponentContext;\nprivate _id: number = this._searchBuilderService.generateComponentId();\nprivate _valid: boolean = true;\n/**\n * Get the current value of the component\n * @return {?}\n */\nget value() {\n        return this.context.value;\n    }\n/**\n * Set the current value of the component\n * @param {?} value\n * @return {?}\n */\nset value(value: any) {\n        this.context.value = value;\n        this._searchBuilderService.queryHasChanged();\n\n        // if value has been set perform validation\n        this.validate();\n    }\n/**\n * @return {?}\n */\nget valid(): boolean {\n        return this._valid;\n    }\n/**\n * @param {?} valid\n * @return {?}\n */\nset valid(valid: boolean) {\n        this._valid = valid;\n        this._searchBuilderService.setValid(this._id, valid);\n    }\n/**\n * @param {?} _searchBuilderService\n * @param {?} _searchBuilderGroupService\n */\nconstructor(\nprivate _searchBuilderService: SearchBuilderService,\nprivate _searchBuilderGroupService: SearchBuilderGroupService\n    ) { }\n/**\n * Make sure we clean up after ourselves\n * @return {?}\n */\nngOnDestroy(): void {\n        this.valid = true;\n    }\n/**\n * Perform any required validation on the value\n * @return {?}\n */\nvalidate(): void {\n        // if a custom validation function has been provided then use it\n        this.valid = this.config.validation ? this.config.validation(this, this.value) : true;\n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-base-search',\n    template: ''\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: SearchBuilderService, },\n{type: SearchBuilderGroupService, },\n];\n}\n\nfunction BaseSearchComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nBaseSearchComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nBaseSearchComponent.ctorParameters;\n/** @type {?} */\nBaseSearchComponent.prototype.type;\n/** @type {?} */\nBaseSearchComponent.prototype.config;\n/** @type {?} */\nBaseSearchComponent.prototype.context;\n/** @type {?} */\nBaseSearchComponent.prototype._id;\n/** @type {?} */\nBaseSearchComponent.prototype._valid;\n/** @type {?} */\nBaseSearchComponent.prototype._searchBuilderService;\n/** @type {?} */\nBaseSearchComponent.prototype._searchBuilderGroupService;\n}\n\n\nexport interface BaseSearchComponentConfig {\n    label?: string;\n    placeholder?: string;\n    validation?: (value: any) => boolean;\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, OnInit } from '@angular/core';\nimport { BaseSearchComponent, BaseSearchComponentConfig } from '../base-search.component';\nexport class SearchTextComponent extends BaseSearchComponent {\n\n  type: string = 'text';\n/**\n * @return {?}\n */\nget label(): string {\n    return this.config.label;\n  }\n/**\n * @return {?}\n */\nget placeholder(): string {\n    return this.config.placeholder || 'Enter text';\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'ux-search-text',\n  template: `\n    <label class=\"form-label\" *ngIf=\"label\">{{ label }}</label>\n    <input [placeholder]=\"placeholder\" [(ngModel)]=\"value\" class=\"form-control\">\n  `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction SearchTextComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nSearchTextComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSearchTextComponent.ctorParameters;\n/** @type {?} */\nSearchTextComponent.prototype.type;\n}\n\n\nexport interface SearchTextConfig extends BaseSearchComponentConfig { }\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, OnInit } from '@angular/core';\nimport { BaseSearchComponent, BaseSearchComponentConfig } from '../base-search.component';\nimport { DateTimePickerTimezone } from '../../../date-time-picker/index';\nexport class SearchDateComponent extends BaseSearchComponent implements OnInit {\n\n  type: string = 'date';\n/**\n * @return {?}\n */\nget label(): string {\n    return this.config.label;\n  }\n/**\n * @return {?}\n */\nget placeholder(): string {\n    return this.config.placeholder || 'Enter date';\n  }\n/**\n * @return {?}\n */\nngOnInit(): void {\n\n    // by default set to the current date if not specified\n    if (!this.value) {\n      this.value = new Date();\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'ux-search-date',\n  template: `\n    <label class=\"form-label\" *ngIf=\"label\">{{ label }}</label>\n\n    <div class=\"input-group date m-nil\">\n        <span class=\"input-group-addon\" tabindex=\"1\" (click)=\"popover.show()\">\n            <i class=\"hpe-icon hpe-calendar\" aria-hidden=\"true\"></i>\n        </span>\n        <input type=\"text\" #popover=\"bs-popover\" [ngModel]=\"value | date:'dd MMMM yyyy'\" [popover]=\"popoverTemplate\"\n            placement=\"bottom\" [outsideClick]=\"true\" containerClass=\"date-time-picker-popover\" class=\"form-control\" aria-label=\"Selected date\" [placeholder]=\"placeholder\">\n    </div>\n\n    <ng-template #popoverTemplate>\n        <ux-date-time-picker [(date)]=\"value\" [showTime]=\"false\"></ux-date-time-picker>\n    </ng-template>\n  `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction SearchDateComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nSearchDateComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSearchDateComponent.ctorParameters;\n/** @type {?} */\nSearchDateComponent.prototype.type;\n}\n\n\nexport interface SearchDateConfig extends BaseSearchComponentConfig { }\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component } from '@angular/core';\nimport { BaseSearchComponent } from '../base-search.component';\nimport { DateTimePickerTimezone } from '../../../date-time-picker/index';\nexport class SearchDateRangeComponent extends BaseSearchComponent {\n\n    type: string = 'date-range';\n/**\n * @return {?}\n */\nget label(): string {\n        return this.config.label;\n    }\n/**\n * @return {?}\n */\nget from() {\n\n        // if value does not exist the set it\n        if (!this.value || !this.value.from) {\n            this.from = new Date();\n        }\n\n        // ensure that the from value is a date object\n        if (this.value.from instanceof Date === false) {\n            this.value.from = new Date(this.value.from);\n        }\n\n        return this.value.from;\n    }\n/**\n * @param {?} fromValue\n * @return {?}\n */\nset from(fromValue: any) {\n\n        // create new object based on the current value\n        const /** @type {?} */ value = Object.assign({}, this.value);\n\n        // ensure that the from value is a date\n        if (fromValue instanceof Date === false) {\n            fromValue = new Date(fromValue);\n        }\n\n        // set the latest value\n        value.from = fromValue;\n\n        // update the value object while ensuring immutability\n        this.value = value;\n    }\n/**\n * @return {?}\n */\nget to() {\n\n        // if value does not exist the set it\n        if (!this.value || !this.value.to) {\n            this.to = new Date();\n        }\n\n        // ensure that the to value is a date object\n        if (this.value.to instanceof Date === false) {\n            this.value.to = new Date(this.value.to);\n        }\n\n        return this.value.to;\n    }\n/**\n * @param {?} toValue\n * @return {?}\n */\nset to(toValue: any) {\n\n        // create new object based on the current value\n        const /** @type {?} */ value = Object.assign({}, this.value);\n\n        // ensure that the to value is a date\n        if (toValue instanceof Date === false) {\n            toValue = new Date(toValue);\n        }\n\n        // set the latest value\n        value.to = toValue;\n\n        // update the value object while ensuring immutability\n        this.value = value;\n    }\n/**\n * @return {?}\n */\nget fromLabel(): string {\n        return this.config.fromLabel || 'From';\n    }\n/**\n * @return {?}\n */\nget toLabel(): string {\n        return this.config.toLabel || 'To';\n    }\n/**\n * @return {?}\n */\nget fromPlaceholder(): string {\n        return this.config.fromPlaceholder;\n    }\n/**\n * @return {?}\n */\nget toPlaceholder(): string {\n        return this.config.toPlaceholder;\n    }\n/**\n * Override the default validation\n * @return {?}\n */\nvalidate(): void {\n\n        // check if there is a config validation function\n        if (this.config.validation) {\n            return super.validate();\n        }\n\n        // create copies of the dates so we can modify time value (to ignore it)\n        const /** @type {?} */ from = new Date(this.value.from);\n        const /** @type {?} */ to = new Date(this.value.to);\n\n        // set the time to the same so we dont compare it\n        from.setHours(0, 0, 0, 0);\n        to.setHours(0, 0, 0, 0);\n\n        // valid if the from date is less than or equal to the to date\n        this.valid = from <= to;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-search-date-range',\n    template: `\n      <label class=\"form-label\" *ngIf=\"label\">{{ label }}</label>\n\n      <div class=\"row\">\n          <div class=\"col-sm-12\">\n              <div class=\"form-inline\" [class.has-error]=\"!valid\">\n\n                  <div class=\"form-group p-r-md\">\n                      <label class=\"form-label m-r-xs\">{{ fromLabel }}</label>\n\n                      <div class=\"input-group date m-nil\">\n                          <span class=\"input-group-addon p-r-xs\" tabindex=\"1\" (click)=\"fromPopover.show()\">\n                              <i class=\"hpe-icon hpe-calendar\" aria-hidden=\"true\"></i>\n                          </span>\n                          <input type=\"text\" #fromPopover=\"bs-popover\" [ngModel]=\"from | date:'dd MMMM yyyy'\" [popover]=\"fromPopoverTemplate\" placement=\"bottom\"\n                              [outsideClick]=\"true\" containerClass=\"date-time-picker-popover\" class=\"form-control\" aria-label=\"Selected date\" [placeholder]=\"fromPlaceholder\">\n                      </div>\n                  </div>\n\n                  <div class=\"form-group p-r-xs\">\n                      <label class=\"form-label m-r-xs\">{{ toLabel }}</label>\n\n                      <div class=\"input-group date m-nil\">\n                          <span class=\"input-group-addon\" tabindex=\"1\" (click)=\"toPopover.show()\">\n                              <i class=\"hpe-icon hpe-calendar\" aria-hidden=\"true\"></i>\n                          </span>\n                          <input type=\"text\" #toPopover=\"bs-popover\" [ngModel]=\"to | date:'dd MMMM yyyy'\" [popover]=\"toPopoverTemplate\" placement=\"bottom\"\n                              [outsideClick]=\"true\" containerClass=\"date-time-picker-popover\" class=\"form-control\" aria-label=\"Selected date\" [placeholder]=\"toPlaceholder\">\n                      </div>\n                  </div>\n\n              </div>\n          </div>\n      </div>\n\n      <ng-template #fromPopoverTemplate>\n          <ux-date-time-picker [(date)]=\"from\" [showTime]=\"false\"></ux-date-time-picker>\n      </ng-template>\n\n      <ng-template #toPopoverTemplate>\n          <ux-date-time-picker [(date)]=\"to\" [showTime]=\"false\"></ux-date-time-picker>\n      </ng-template>\n    `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction SearchDateRangeComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nSearchDateRangeComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSearchDateRangeComponent.ctorParameters;\n/** @type {?} */\nSearchDateRangeComponent.prototype.type;\n}\n\n\nexport interface SearchDateRangeConfig {\n    label?: string;\n    fromLabel?: string;\n    toLabel?: string;\n    fromPlaceholder?: string;\n    toPlaceholder?: string;\n    validation: (value: any) => boolean;\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component } from '@angular/core';\nimport { BaseSearchComponent, BaseSearchComponentConfig } from '../base-search.component';\nimport { InfiniteScrollLoadFunction } from '../../../../index';\nexport class SearchSelectComponent extends BaseSearchComponent {\n\n  type: string = 'select';\n/**\n * Provide defaults for undefined properties\n * @return {?}\n */\nget label(): string {\n    return this.config.label;\n  }\n/**\n * @return {?}\n */\nget options() {\n    return this.config.options || [];\n  }\n/**\n * @return {?}\n */\nget multiple(): boolean {\n    return this.config.multiple || false;\n  }\n/**\n * @return {?}\n */\nget placeholder(): string {\n    return this.config.placeholder || 'Select item';\n  }\n/**\n * @return {?}\n */\nget dropDirection(): string {\n    return this.config.dropDirection || 'down';\n  }\n/**\n * @return {?}\n */\nget allowNull(): boolean {\n    return this.config.allowNull || false;\n  }\n/**\n * @return {?}\n */\nget disabled(): boolean {\n    return this.config.disabled || false;\n  }\n/**\n * @return {?}\n */\nget maxHeight(): string {\n    return this.config.maxHeight || '250px';\n  }\n/**\n * @return {?}\n */\nget pageSize(): number {\n    return this.config.pageSize || 20;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'ux-search-select',\n  template: `\n    <label class=\"form-label\" *ngIf=\"label\">{{ label }}</label>\n\n    <ux-select [(value)]=\"value\" \n               [options]=\"options\" \n               [multiple]=\"multiple\" \n               [placeholder]=\"placeholder\" \n               [dropDirection]=\"dropDirection\"\n               [pageSize]=\"pageSize\"\n               [allowNull]=\"allowNull\"\n               [disabled]=\"disabled\"\n               [maxHeight]=\"maxHeight\"\n               [key]=\"config.key\"\n               [display]=\"config.display\"\n               [loadingTemplate]=\"config.loadingTemplate\"\n               [optionTemplate]=\"config.optionTemplate\"\n               [noOptionsTemplate]=\"config.noOptionsTemplate\">\n    </ux-select>\n  `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction SearchSelectComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nSearchSelectComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSearchSelectComponent.ctorParameters;\n/** @type {?} */\nSearchSelectComponent.prototype.type;\n}\n\n\nexport interface SearchSelectConfig extends BaseSearchComponentConfig {\n  options?: any[] | InfiniteScrollLoadFunction;\n  multiple?: boolean;\n  dropDirection?: 'up' | 'down';\n  allowNull?: boolean;\n  disabled?: boolean;\n  maxHeight?: string;\n  pageSize?: number;\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Input, EventEmitter, Output, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs/Subscription';\nimport { SearchBuilderService } from './search-builder.service';\nimport { SearchBuilderQuery } from './interfaces/query.interface';\nimport { SearchBuilderComponentDefinition } from './interfaces/component-definition.interface';\nimport { SearchTextComponent } from './search-components/text/text.component';\nimport { SearchDateComponent } from './search-components/date/date.component';\nimport { SearchDateRangeComponent } from './search-components/date-range/date-range.component';\nimport { SearchSelectComponent } from './search-components/select/select.component';\nimport'rxjs/add/operator/distinctUntilChanged';\nexport class SearchBuilderComponent implements OnDestroy {\n/**\n * @param {?} components\n * @return {?}\n */\nset components(components: SearchBuilderComponentDefinition[]) {\n    this._searchBuilderService.registerComponents(components);\n  }\n/**\n * @param {?} value\n * @return {?}\n */\nset query(value: SearchBuilderQuery) {\n    this._searchBuilderService.setQuery(value);\n  }\n/**\n * @return {?}\n */\nget query() {\n    return this._searchBuilderService.getQuery();\n  }\n\n   queryChange: EventEmitter<SearchBuilderQuery> = new EventEmitter<SearchBuilderQuery>();\n   valid: EventEmitter<boolean> = new EventEmitter<boolean>(true);\nprivate _querySubscription: Subscription;\nprivate _validSubscription: Subscription;\n/**\n * Register the default search builder components\n * @param {?} _searchBuilderService\n */\nconstructor(private _searchBuilderService: SearchBuilderService) {\n\n    // watch for any query changes\n    this._querySubscription = _searchBuilderService.queryChange.subscribe(query => this.queryChange.emit(query));\n\n    // watch for any changes to the validation\n    this._validSubscription = _searchBuilderService.validationChange.distinctUntilChanged().subscribe(valid => this.valid.emit(valid));\n  }\n/**\n * Remove any subscriptions and cleanup\n * @return {?}\n */\nngOnDestroy(): void {\n    this._querySubscription.unsubscribe();\n    this._validSubscription.unsubscribe();\n  }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'ux-search-builder',\n  template: `\n    <ng-content></ng-content>\n  `,\n  providers: [SearchBuilderService]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: SearchBuilderService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'components': [{ type: Input },],\n'query': [{ type: Input },],\n'queryChange': [{ type: Output },],\n'valid': [{ type: Output },],\n};\n}\n\nfunction SearchBuilderComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nSearchBuilderComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSearchBuilderComponent.ctorParameters;\n/** @type {?} */\nSearchBuilderComponent.propDecorators;\n/** @type {?} */\nSearchBuilderComponent.prototype.queryChange;\n/** @type {?} */\nSearchBuilderComponent.prototype.valid;\n/** @type {?} */\nSearchBuilderComponent.prototype._querySubscription;\n/** @type {?} */\nSearchBuilderComponent.prototype._validSubscription;\n/** @type {?} */\nSearchBuilderComponent.prototype._searchBuilderService;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","\nexport class TypeaheadOptionEvent {\n/**\n * @param {?} option\n */\nconstructor(public option: any) {}\n}\n\nfunction TypeaheadOptionEvent_tsickle_Closure_declarations() {\n/** @type {?} */\nTypeaheadOptionEvent.prototype.option;\n}\n","import { TypeaheadComponent } from './index';\nimport { Injectable } from '@angular/core';\nexport class TypeaheadKeyService {\nconstructor() { }\n/**\n * @param {?} event\n * @param {?} typeahead\n * @return {?}\n */\nhandleKey(event: KeyboardEvent, typeahead: TypeaheadComponent) {\n        if (typeahead) {\n            switch (event.key) {\n                case 'ArrowUp':\n                case 'Up':\n                    if (!typeahead.open) {\n                        typeahead.open = true;\n                    } else {\n                        typeahead.moveHighlight(-1);\n                    }\n                    event.preventDefault();\n                    break;\n                case 'ArrowDown':\n                case 'Down':\n                    if (!typeahead.open) {\n                        typeahead.open = true;\n                    } else {\n                        typeahead.moveHighlight(1);\n                    }\n                    event.preventDefault();\n                    break;\n                case 'Escape':\n                case 'Esc':\n                    typeahead.open = false;\n                    break;\n            }\n        }\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction TypeaheadKeyService_tsickle_Closure_declarations() {\n/** @type {?} */\nTypeaheadKeyService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTypeaheadKeyService.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { InfiniteScrollLoadFunction } from '../../directives/infinite-scroll/index';\nimport { TypeaheadOptionEvent } from './typeahead-event';\nimport {\n    Component,\n    ElementRef,\n    EventEmitter,\n    Input,\n    OnChanges,\n    OnInit,\n    Output,\n    SimpleChanges,\n    TemplateRef,\n    ViewChild,\n    AfterViewInit,\n    ChangeDetectorRef\n} from '@angular/core';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { Observable } from 'rxjs/Observable';\nexport class TypeaheadComponent implements AfterViewInit, OnChanges {\n\n     options: any[] | InfiniteScrollLoadFunction;\n     filter: string;\nprivate _open: boolean = false;\n/**\n * @return {?}\n */\nget open() {\n        return this._open;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset open(value: boolean) {\n        const /** @type {?} */ originalValue = this._open;\n        this._open = value;\n        if (value !== originalValue) {\n            this.openChange.emit(value);\n            if (value) {\n                this.initOptions();\n            }\n        }\n    }\n\n     openChange = new EventEmitter<boolean>();\n\n     display: (option: any) => string | string;\n     key: (option: any) => string | string;\n     disabledOptions: any[];\n     dropDirection: 'up' | 'down' = 'down';\n     maxHeight: string = '250px';\n     openOnFilterChange: boolean = true;\n     pageSize: number = 20;\n     selectFirst: boolean = true;\n\n     loadingTemplate: TemplateRef<any>;\n     optionTemplate: TemplateRef<any>;\n     noOptionsTemplate: TemplateRef<any>;\n\n     optionSelected = new EventEmitter<TypeaheadOptionEvent>();\nprivate _highlighted = new BehaviorSubject<any>(null);\n/**\n * @return {?}\n */\nget highlighted(): any {\n        return this._highlighted.getValue();\n    }\nprivate _defaultLoadingTemplate: TemplateRef<any>;\nprivate _defaultOptionTemplate: TemplateRef<any>;\nprivate _defaultNoOptionsTemplate: TemplateRef<any>;\n\n    loadOptionsCallback: InfiniteScrollLoadFunction;\n    visibleOptions: any[] = [];\n    loading = false;\n\n    optionApi: TypeaheadOptionApi = {\n        getKey: this.getKey.bind(this),\n        getDisplay: this.getDisplay.bind(this),\n        getDisplayHtml: this.getDisplayHtml.bind(this)\n    };\n/**\n * @param {?} typeaheadElement\n * @param {?} cdRef\n */\nconstructor(public typeaheadElement: ElementRef,\nprivate cdRef: ChangeDetectorRef) {\n\n        this.loadOptionsCallback = (pageNum: number, pageSize: number, filter: any) => {\n            if (typeof this.options === 'function') {\n                return this.options(pageNum, pageSize, filter);\n            }\n            return null;\n        };\n    }\n/**\n * @return {?}\n */\nngAfterViewInit() {\n        // Attach default loading template\n        if (!this.loadingTemplate) {\n            this.loadingTemplate = this._defaultLoadingTemplate;\n        }\n\n        // Attach default option template\n        if (!this.optionTemplate) {\n            this.optionTemplate = this._defaultOptionTemplate;\n        }\n\n        // Attach default \"no results\" template\n        if (!this.noOptionsTemplate) {\n            this.noOptionsTemplate = this._defaultNoOptionsTemplate;\n        }\n\n        this.cdRef.detectChanges();\n    }\n/**\n * @param {?} changes\n * @return {?}\n */\nngOnChanges(changes: SimpleChanges) {\n        // Open the dropdown if the filter value updates\n        if (changes.filter) {\n            if (this.openOnFilterChange && changes.filter.currentValue && changes.filter.currentValue.length > 0) {\n                this.open = true;\n            }\n        }\n\n        // Re-filter visibleOptions\n        this.updateOptions();\n    }\n/**\n * @param {?} event\n * @return {?}\n */\noptionMousedownHandler(event: MouseEvent) {\n        // Workaround to prevent focus changing when an option is clicked\n        event.preventDefault();\n    }\n/**\n * @param {?} event\n * @param {?} option\n * @return {?}\n */\noptionClickHandler(event: MouseEvent, option: any) {\n        this.select(option);\n    }\n/**\n * Returns the unique key value of the given option.\n * @param {?} option\n * @return {?}\n */\ngetKey(option: any): string {\n        if (typeof this.key === 'function') {\n            return this.key(option);\n        }\n        if (typeof this.key === 'string' && option && option.hasOwnProperty(this.key)) {\n            return option[ /** @type {?} */((<string>this.key))];\n        }\n        return this.getDisplay(option);\n    }\n/**\n * Returns the display value of the given option.\n * @param {?} option\n * @return {?}\n */\ngetDisplay(option: any): string {\n        if (typeof this.display === 'function') {\n            return this.display(option);\n        }\n        if (typeof this.display === 'string' && option && option.hasOwnProperty(this.display)) {\n            return option[ /** @type {?} */((<string>this.display))];\n        }\n        return option;\n    }\n/**\n * Returns the display value of the given option with HTML markup added to highlight the part which matches the current filter value.\n * @param {?} option\n * @return {?}\n */\ngetDisplayHtml(option: any) {\n        let /** @type {?} */ displayText;\n        if (typeof option === 'string') {\n            displayText = this.getDisplay(option).replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;');\n        } else {\n            displayText = this.getDisplay(option.name).replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;');\n        }\n        let /** @type {?} */ displayHtml = displayText;\n        if (this.filter) {\n            const /** @type {?} */ length = this.filter.length;\n            const /** @type {?} */ matchIndex = displayText.toLowerCase().indexOf(this.filter.toLowerCase());\n            if (matchIndex >= 0) {\n                var /** @type {?} */ highlight = `<span class=\"ux-filter-match\">${displayText.substr(matchIndex, length)}</span>`;\n                displayHtml = displayText.substr(0, matchIndex) + highlight + displayText.substr(matchIndex + length);\n            }\n        }\n        return displayHtml;\n    }\n/**\n * Returns true if the infinite scroll component should load\n * @return {?}\n */\nisInfiniteScroll() {\n        return typeof this.options === 'function';\n    }\n/**\n * Selects the given option, emitting the optionSelected event and closing the dropdown.\n * @param {?} option\n * @return {?}\n */\nselect(option: any) {\n        if (!this.isDisabled(option)) {\n            this.optionSelected.emit(new TypeaheadOptionEvent(option));\n            this._highlighted.next(null);\n            this.open = false;\n        }\n    }\n/**\n * Returns true if the given option is part of the disabledOptions array.\n * @param {?} option\n * @return {?}\n */\nisDisabled(option: any): boolean {\n        if (this.disabledOptions) {\n            const /** @type {?} */ optionKey = this.getKey(option);\n            const /** @type {?} */ result = this.disabledOptions.find((selectedOption) => {\n                return this.getKey(selectedOption) === optionKey;\n            });\n            return result !== undefined;\n        }\n        return false;\n    }\n/**\n * Set the given option as the current highlighted option, available in the highlightedOption parameter.\n * @param {?} option\n * @return {?}\n */\nhighlight(option: any) {\n        if (!this.isDisabled(option)) {\n            this._highlighted.next(option);\n        }\n    }\n/**\n * Increment or decrement the highlighted option in the list. Disabled options are skipped.\n * @param {?} d Value to be added to the index of the highlighted option, i.e. -1 to move backwards, +1 to move forwards.\n * @return {?}\n */\nmoveHighlight(d: number): any {\n        const /** @type {?} */ highlightIndex = this.indexOfVisibleOption(this.highlighted);\n        let /** @type {?} */ newIndex = highlightIndex;\n        let /** @type {?} */ disabled = true;\n        let /** @type {?} */ inBounds = true;\n        do {\n            newIndex = newIndex + d;\n            inBounds = (newIndex >= 0 && newIndex < this.visibleOptions.length);\n            disabled = inBounds && this.isDisabled(this.visibleOptions[newIndex]);\n        }\n        while (inBounds && disabled);\n\n        if (!disabled && inBounds) {\n            this._highlighted.next(this.visibleOptions[newIndex]);\n        }\n\n        return this.highlighted;\n    }\n/**\n * Returns true if the given option is the highlighted option.\n * @param {?} option\n * @return {?}\n */\nisHighlighted(option: any): boolean {\n        return this.getKey(option) === this.getKey(this.highlighted);\n    }\n/**\n * Set up the options before the dropdown is displayed.\n * @return {?}\n */\ninitOptions() {\n        // Clear previous highlight\n        this._highlighted.next(null);\n        if (this.selectFirst) {\n            // This will highlight the first non-disabled option.\n            this.moveHighlight(1);\n        }\n    }\n/**\n * Update the visibleOptions array with the current filter.\n * @return {?}\n */\nupdateOptions() {\n        if (typeof this.options === 'object') {\n            const /** @type {?} */ normalisedInput = (this.filter || '').toLowerCase();\n            this.visibleOptions = this.options.filter((option) => {\n                return this.getDisplay(option).toLowerCase().indexOf(normalisedInput) >= 0;\n            });\n        }\n\n        this.initOptions();\n    }\n/**\n * Return the index of the given option in the visibleOptions array. Returns -1 if the option is not currently visible.\n * @param {?} option\n * @return {?}\n */\nprivate indexOfVisibleOption(option: any): number {\n        if (option) {\n            const /** @type {?} */ optionKey = this.getKey(option);\n            return this.visibleOptions.findIndex((el) => {\n                return this.getKey(el) === optionKey;\n            });\n        }\n\n        return -1;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-typeahead',\n    template: `\n      <div class=\"ux-typeahead-options\"\n          [uxInfiniteScroll]=\"loadOptionsCallback\"\n          [(collection)]=\"visibleOptions\"\n          [enabled]=\"isInfiniteScroll()\"\n          [filter]=\"filter\"\n          [loadOnScroll]=\"true\"\n          [pageSize]=\"pageSize\"\n          [scrollElement]=\"typeaheadElement\"\n          (loading)=\"loading = true\"\n          (loaded)=\"loading = false\">\n\n          <ol *ngIf=\"visibleOptions.length > 0\">\n              <li *ngFor=\"let option of visibleOptions; let i = index\"\n                  [class.disabled]=\"isDisabled(option)\"\n                  [class.highlighted]=\"isHighlighted(option)\"\n                  [uxScrollIntoViewIf]=\"isHighlighted(option)\"\n                  [scrollParent]=\"typeaheadElement.nativeElement\"\n                  (mousedown)=\"optionMousedownHandler($event)\"\n                  (click)=\"optionClickHandler($event, option)\"\n                  (mouseover)=\"highlight(option)\">\n\n                  <ng-container [ngTemplateOutlet]=\"optionTemplate\"\n                      [ngTemplateOutletContext]=\"{option: option, api: optionApi}\">\n                  </ng-container>\n\n              </li>\n          </ol>\n\n          <div *uxInfiniteScrollLoading>\n              <ng-container [ngTemplateOutlet]=\"loadingTemplate\">\n              </ng-container>\n          </div>\n\n      </div>\n      <div *ngIf=\"visibleOptions.length === 0 && !loading\">\n          <ng-container [ngTemplateOutlet]=\"noOptionsTemplate\">\n          </ng-container>\n      </div>\n\n      <ng-template #defaultLoadingTemplate>\n          <div class=\"ux-typeahead-loading\">\n              <div class=\"spinner spinner-accent spinner-bounce-middle\"></div>\n              <div>Loading...</div>\n          </div>\n      </ng-template>\n\n      <ng-template #defaultOptionTemplate let-option=\"option\" let-api=\"api\">\n          <span class=\"ux-typeahead-option\" [innerHtml]=\"api.getDisplayHtml(option)\"></span>\n      </ng-template>\n\n      <ng-template #defaultNoOptionsTemplate>\n          <span class=\"ux-typeahead-no-options\">No results</span>\n      </ng-template>\n    `,\n    host: {\n        '[class.open]': 'open',\n        '[class.drop-up]': 'dropDirection === \"up\"',\n        '[style.maxHeight]': 'maxHeight'\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: ChangeDetectorRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'options': [{ type: Input },],\n'filter': [{ type: Input },],\n'open': [{ type: Input, args: ['open', ] },],\n'openChange': [{ type: Output },],\n'display': [{ type: Input },],\n'key': [{ type: Input },],\n'disabledOptions': [{ type: Input },],\n'dropDirection': [{ type: Input },],\n'maxHeight': [{ type: Input },],\n'openOnFilterChange': [{ type: Input },],\n'pageSize': [{ type: Input },],\n'selectFirst': [{ type: Input },],\n'loadingTemplate': [{ type: Input },],\n'optionTemplate': [{ type: Input },],\n'noOptionsTemplate': [{ type: Input },],\n'optionSelected': [{ type: Output },],\n'highlighted': [{ type: Output },],\n'_defaultLoadingTemplate': [{ type: ViewChild, args: ['defaultLoadingTemplate', ] },],\n'_defaultOptionTemplate': [{ type: ViewChild, args: ['defaultOptionTemplate', ] },],\n'_defaultNoOptionsTemplate': [{ type: ViewChild, args: ['defaultNoOptionsTemplate', ] },],\n};\n}\n\nfunction TypeaheadComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nTypeaheadComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTypeaheadComponent.ctorParameters;\n/** @type {?} */\nTypeaheadComponent.propDecorators;\n/** @type {?} */\nTypeaheadComponent.prototype.options;\n/** @type {?} */\nTypeaheadComponent.prototype.filter;\n/** @type {?} */\nTypeaheadComponent.prototype._open;\n/** @type {?} */\nTypeaheadComponent.prototype.openChange;\n/** @type {?} */\nTypeaheadComponent.prototype.display;\n/** @type {?} */\nTypeaheadComponent.prototype.key;\n/** @type {?} */\nTypeaheadComponent.prototype.disabledOptions;\n/** @type {?} */\nTypeaheadComponent.prototype.dropDirection;\n/** @type {?} */\nTypeaheadComponent.prototype.maxHeight;\n/** @type {?} */\nTypeaheadComponent.prototype.openOnFilterChange;\n/** @type {?} */\nTypeaheadComponent.prototype.pageSize;\n/** @type {?} */\nTypeaheadComponent.prototype.selectFirst;\n/** @type {?} */\nTypeaheadComponent.prototype.loadingTemplate;\n/** @type {?} */\nTypeaheadComponent.prototype.optionTemplate;\n/** @type {?} */\nTypeaheadComponent.prototype.noOptionsTemplate;\n/** @type {?} */\nTypeaheadComponent.prototype.optionSelected;\n/** @type {?} */\nTypeaheadComponent.prototype._highlighted;\n/** @type {?} */\nTypeaheadComponent.prototype._defaultLoadingTemplate;\n/** @type {?} */\nTypeaheadComponent.prototype._defaultOptionTemplate;\n/** @type {?} */\nTypeaheadComponent.prototype._defaultNoOptionsTemplate;\n/** @type {?} */\nTypeaheadComponent.prototype.loadOptionsCallback;\n/** @type {?} */\nTypeaheadComponent.prototype.visibleOptions;\n/** @type {?} */\nTypeaheadComponent.prototype.loading;\n/** @type {?} */\nTypeaheadComponent.prototype.optionApi;\n/** @type {?} */\nTypeaheadComponent.prototype.typeaheadElement;\n/** @type {?} */\nTypeaheadComponent.prototype.cdRef;\n}\n\n\n/**\n * The API available to option templates.\n */\nexport interface TypeaheadOptionApi {\n\n    /**\n     * Returns the unique key value of the given option.\n     */\n    getKey(option: any): string;\n\n    /**\n     * Returns the display value of the given option.\n     */\n    getDisplay(option: any): string;\n\n    /**\n     * Returns the display value of the given option with HTML markup added to highlight the part which matches the current filter value. Override the ux-filter-match class in CSS to modify the default appearance.\n     */\n    getDisplayHtml(option: any): string;\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ElementRef, Input, Output, Renderer2, TemplateRef, ViewContainerRef } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { Subject } from 'rxjs/Subject';\nexport class InfiniteScrollLoadButtonDirective {\n/**\n * @return {?}\n */\nget visible() {\n        return this._visible;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset visible(value: boolean) {\n        if (value !== this._visible) {\n            if (value) {\n                this._viewContainer.createEmbeddedView(this._template);\n\n                // Template content follows the elementRef, which is a comment.\n                const /** @type {?} */ clickTarget = this.getNextElementSibling(this._template.elementRef.nativeElement);\n                this._renderer.listen(clickTarget, 'click', this.onClick.bind(this));\n            } else {\n                this._viewContainer.clear();\n            }\n        }\n\n        this._visible = value;\n    }\n\n     load: Observable<Event>;\nprivate _visible: boolean = false;\nprivate _load = new Subject();\n/**\n * @param {?} _element\n * @param {?} _template\n * @param {?} _viewContainer\n * @param {?} _renderer\n */\nconstructor(\nprivate _element: ElementRef,\nprivate _template: TemplateRef<any>,\nprivate _viewContainer: ViewContainerRef,\nprivate _renderer: Renderer2) {\n\n        this.load = this._load.asObservable() as Observable<Event>;\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nprivate onClick(event: MouseEvent) {\n        this._load.next(event);\n    }\n/**\n * @param {?} element\n * @return {?}\n */\nprivate getNextElementSibling(element: any): Element {\n        var /** @type {?} */ next = element;\n        while (next = next.nextSibling) {\n            if (next.nodeType === 1) {\n                return next;\n            }\n        }\n        return null;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: '[uxInfiniteScrollLoadButton]'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: TemplateRef, },\n{type: ViewContainerRef, },\n{type: Renderer2, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'visible': [{ type: Input, args: ['uxInfiniteScrollLoadButton', ] },],\n'load': [{ type: Output },],\n};\n}\n\nfunction InfiniteScrollLoadButtonDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nInfiniteScrollLoadButtonDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nInfiniteScrollLoadButtonDirective.ctorParameters;\n/** @type {?} */\nInfiniteScrollLoadButtonDirective.propDecorators;\n/** @type {?} */\nInfiniteScrollLoadButtonDirective.prototype.load;\n/** @type {?} */\nInfiniteScrollLoadButtonDirective.prototype._visible;\n/** @type {?} */\nInfiniteScrollLoadButtonDirective.prototype._load;\n/** @type {?} */\nInfiniteScrollLoadButtonDirective.prototype._element;\n/** @type {?} */\nInfiniteScrollLoadButtonDirective.prototype._template;\n/** @type {?} */\nInfiniteScrollLoadButtonDirective.prototype._viewContainer;\n/** @type {?} */\nInfiniteScrollLoadButtonDirective.prototype._renderer;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, Input, TemplateRef, ViewContainerRef } from '@angular/core';\nexport class InfiniteScrollLoadingDirective {\n/**\n * @return {?}\n */\nget visible() {\n        return this._visible;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset visible(value: boolean) {\n        if (value !== this._visible) {\n            if (value) {\n                this._viewContainer.createEmbeddedView(this._templateRef);\n            } else {\n                this._viewContainer.clear();\n            }\n        }\n        \n        this._visible = value;\n    }\nprivate _visible: boolean = false;\n/**\n * @param {?} _templateRef\n * @param {?} _viewContainer\n */\nconstructor(\nprivate _templateRef: TemplateRef<any>,\nprivate _viewContainer: ViewContainerRef) { }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: '[uxInfiniteScrollLoading]'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: TemplateRef, },\n{type: ViewContainerRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'visible': [{ type: Input, args: ['uxInfiniteScrollLoading', ] },],\n};\n}\n\nfunction InfiniteScrollLoadingDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nInfiniteScrollLoadingDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nInfiniteScrollLoadingDirective.ctorParameters;\n/** @type {?} */\nInfiniteScrollLoadingDirective.propDecorators;\n/** @type {?} */\nInfiniteScrollLoadingDirective.prototype._visible;\n/** @type {?} */\nInfiniteScrollLoadingDirective.prototype._templateRef;\n/** @type {?} */\nInfiniteScrollLoadingDirective.prototype._viewContainer;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { AfterContentInit, ContentChildren, Directive, ElementRef, EventEmitter, Input, OnChanges, OnDestroy, OnInit, Output, QueryList, SimpleChanges } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { Observable } from 'rxjs/Observable';\nimport { Subject } from 'rxjs/Subject';\nimport { Subscription } from 'rxjs/Subscription';\nimport'rxjs/add/operator/auditTime';\nimport'rxjs/add/operator/combineLatest';\nimport'rxjs/add/operator/first';\nimport'rxjs/add/operator/partition';\nimport { from } from 'rxjs/observable/from';\nimport { fromEvent } from 'rxjs/observable/fromEvent';\nimport { of } from 'rxjs/observable/of';\nimport { InfiniteScrollLoadButtonDirective } from './infinite-scroll-load-button.directive';\nimport { InfiniteScrollLoadingDirective } from './infinite-scroll-loading.directive';\nexport class InfiniteScrollDirective implements OnInit, AfterContentInit, OnChanges, OnDestroy {\n\n     load: InfiniteScrollLoadFunction;\n\n     _collection: any[] = [];\n/**\n * @return {?}\n */\nget collection() {\n        return this._collection;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset collection(value: any[]) {\n        this.collectionChange.emit(value);\n        this._collection = value;\n    }\n/**\n * @param {?} element\n * @return {?}\n */\nset scrollElement(element: ElementRef | HTMLElement) {\n        this._scrollElement = element instanceof ElementRef ? element : new ElementRef(element);\n    }\n\n     enabled: boolean = true;\n     filter: any;\n     loadOnInit: boolean = true;\n     loadOnScroll: boolean = true;\n     pageSize: number = 20;\n\n     collectionChange = new EventEmitter<any[]>();\n\n    \n    loadingEvent = new EventEmitter<InfiniteScrollLoadingEvent>();\n\n    \n    loadedEvent = new EventEmitter<InfiniteScrollLoadedEvent>();\n\n    \n    loadErrorEvent = new EventEmitter<InfiniteScrollLoadErrorEvent>();\nprivate _loadButtonQuery: QueryList<InfiniteScrollLoadButtonDirective>;\nprivate _loadingIndicatorQuery: QueryList<InfiniteScrollLoadingDirective>;\nprivate _pages: any[][];\nprivate _nextPageNum = 0;\nprivate _domObserver: MutationObserver;\nprivate _scrollEventSub: Subscription;\nprivate _updateRequests = new Subject<InfiniteScrollRequest>();\nprivate _isLoading = new BehaviorSubject<boolean>(false);\nprivate _isExhausted = new BehaviorSubject<boolean>(false);\nprivate _loadButtonEnabled = new BehaviorSubject<boolean>(false);\nprivate _canLoadManually: Observable<boolean>;\nprivate _scrollElement: ElementRef;\nprivate _subscriptions: Subscription[] = [];\nprivate _loadButtonSubscriptions: Subscription[] = [];\n/**\n * @param {?} _element\n */\nconstructor(private _element: ElementRef) {\n        this._canLoadManually = this._isLoading.combineLatest(\n            this._isExhausted,\n            this._loadButtonEnabled,\n            (isLoading, isExhausted, loadButtonEnabled) => {\n                return !isLoading && !isExhausted && loadButtonEnabled;\n            }\n        );\n    }\n/**\n * @return {?}\n */\nngOnInit() {\n        if (!this._scrollElement) {\n            this._scrollElement = this._element;\n        }\n\n        this._loadButtonEnabled.next(!this.loadOnScroll);\n    }\n/**\n * @return {?}\n */\nngAfterContentInit() {\n\n        // There are two kinds of update requests: check and load.\n        // Check requests are throttled and will only cause an update if more data is required\n        // to fill the scrolling view, and it isn't already loading some.\n        // Load requests are not throttled and always request a page of data.\n        const /** @type {?} */ requests = this._updateRequests.partition(r => r.check);\n        requests[0].auditTime(200).subscribe(this.doRequest.bind(this));\n        requests[1].subscribe(this.doRequest.bind(this));\n\n        if (this.enabled) {\n            // Subscribe to scroll events and DOM changes.\n            this.attachEventHandlers();\n        }\n\n        // Connect the Load More button visible state.\n        this._canLoadManually.subscribe(canLoad => {\n            this._loadButtonQuery.forEach(loadButton => {\n                loadButton.visible = canLoad;\n            });\n        });\n\n        // Connect the loading indicator visible state.\n        this._isLoading.subscribe(isLoading => {\n            this._loadingIndicatorQuery.forEach(loading => {\n                loading.visible = isLoading;\n            });\n        });\n\n        // Link the Load More button click event to trigger an update.\n        this.attachLoadButtonEvents();\n        this._loadButtonQuery.changes.subscribe(query => {\n            this.attachLoadButtonEvents();\n        });\n\n        // Initial update.\n        if (this.loadOnInit) {\n            this.loadNextPage();\n        }\n    }\n/**\n * @param {?} changes\n * @return {?}\n */\nngOnChanges(changes: SimpleChanges) {\n        let /** @type {?} */ check = true;\n\n        if (changes.enabled && changes.enabled.currentValue !== changes.enabled.previousValue) {\n            if (changes.enabled.currentValue) {\n                this.attachEventHandlers();\n                this.reset();\n                check = false;\n            } else {\n                this.detachEventHandlers();\n            }\n        }\n\n        if (this.enabled) {\n            if (changes.filter && changes.filter.currentValue !== changes.filter.previousValue) {\n                this.reset();\n                check = false;\n            }\n\n            if (changes.loadOnScroll) {\n                this._loadButtonEnabled.next(\n                    !changes.loadOnScroll.currentValue\n                );\n            }\n\n            if (changes.pageSize && changes.pageSize.currentValue !== changes.pageSize.previousValue) {\n                this.reset();\n                check = false;\n            }\n\n            this._updateRequests.next({\n                check: check,\n                pageNumber: this._nextPageNum,\n                pageSize: this.pageSize,\n                filter: this.filter\n            });\n        }\n    }\n/**\n * @return {?}\n */\nngOnDestroy() {\n        this.detachEventHandlers();\n    }\n/**\n * Request an additional page of data.\n * @return {?}\n */\nloadNextPage() {\n        if (!this.enabled) {\n            return;\n        }\n\n        this._updateRequests.next({\n            check: false,\n            pageNumber: this._nextPageNum,\n            pageSize: this.pageSize,\n            filter: this.filter\n        });\n    }\n/**\n * Request a check for whether an additional page of data is required. This is throttled.\n * @return {?}\n */\ncheck() {\n        if (!this.enabled) {\n            return;\n        }\n\n        this._updateRequests.next({\n            check: true,\n            pageNumber: this._nextPageNum,\n            pageSize: this.pageSize,\n            filter: this.filter\n        });\n    }\n/**\n * Clear the collection. Future requests will load from page 0.\n * @return {?}\n */\nreset() {\n        if (!this.enabled) {\n            return;\n        }\n\n        // Reset the page counter.\n        this._nextPageNum = 0;\n\n        this._pages = [];\n\n        // Clear the collection (without changing the reference).\n        if (this.collection) {\n            this.collection.length = 0;\n        }\n\n        // Reset the exhausted flag, allowing the Load More button to appear.\n        this._isExhausted.next(false);\n\n        // Cancel any pending requests\n        if (this._subscriptions) {\n            this._subscriptions.forEach(request => request.unsubscribe());\n        }\n    }\n/**\n * Reload the data without clearing the view.\n * @return {?}\n */\nreload() {\n        this._pages.forEach((page, i) => this.reloadPage(i));\n    }\n/**\n * Reload the data in a specific page without clearing the view.\n * @param {?} pageNum Page number\n * @return {?}\n */\nreloadPage(pageNum: number) {\n        if (!this.enabled) {\n            return;\n        }\n\n        this._updateRequests.next({\n            check: false,\n            pageNumber: pageNum,\n            pageSize: this.pageSize,\n            filter: this.filter,\n            reload: true\n        });\n    }\n/**\n * Attach scroll event handler and DOM observer.\n * @return {?}\n */\nprivate attachEventHandlers() {\n\n        // if the scrollElement is documentElement we must watch for a scroll event on the document\n        const /** @type {?} */ target = this._scrollElement.nativeElement instanceof HTMLHtmlElement ? document : this._scrollElement.nativeElement;\n\n        // Subscribe to the scroll event on the target element.\n        this._scrollEventSub = fromEvent(target, 'scroll').subscribe(this.check.bind(this));\n\n        // Subscribe to child DOM changes. The main effect of this is to check whether even more data is\n        // required after the initial load.\n        this._domObserver = new MutationObserver(this.check.bind(this));\n        this._domObserver.observe(this._scrollElement.nativeElement, {\n            childList: true,\n            subtree: true\n        });\n    }\n/**\n * Detach scroll event handler and DOM observer.\n * @return {?}\n */\nprivate detachEventHandlers() {\n        if (this._scrollEventSub) {\n            this._scrollEventSub.unsubscribe();\n            this._scrollEventSub = null;\n        }\n\n        if (this._domObserver) {\n            this._domObserver.disconnect();\n            this._domObserver = null;\n        }\n    }\n/**\n * Remove any existing event subscriptions for the load button `load` event, then attach subscriptions\n * for any in the query.\n * @return {?}\n */\nprivate attachLoadButtonEvents() {\n        this._loadButtonSubscriptions.forEach(s => s.unsubscribe());\n        this._loadButtonSubscriptions = this._loadButtonQuery.map(\n            loadButton => loadButton.load.subscribe(this.loadNextPage.bind(this))\n        );\n    }\n/**\n * Conditionally loads a page into the collection based on directive state and request parameters.\n * @param {?} request\n * @return {?}\n */\nprivate doRequest(request: InfiniteScrollRequest) {\n\n        // Load a new page if the scroll position is beyond the threshhold and if the client code did not\n        // cancel.\n        if (this.needsData(request) && this.beginLoading(request)) {\n\n            // Invoke the callback load function, which returns a promose or plain data.\n            const /** @type {?} */ loadResult = this.load(request.pageNumber, request.pageSize, request.filter);\n\n            const /** @type {?} */ observable = Array.isArray(loadResult)\n                ? of(loadResult)\n                : from<any[]>(loadResult);\n\n            const /** @type {?} */ subscription = observable.first().subscribe(\n                items => {\n                    // Make sure that the parameters have not changed since the load started;\n                    // otherwise discard the results.\n                    if (request.filter === this.filter && request.pageSize === this.pageSize) {\n                        if (items && items.length) {\n                            this.setPageItems(request.pageNumber, items);\n                        }\n\n                        // Emit the loaded event\n                        this.endLoading(request, items);\n                    }\n                },\n                reason => {\n                    // Emit the loadError event\n                    this.endLoadingWithError(request, reason);\n                },\n                () => {\n                    // remove this request from the list\n                    this._subscriptions = this._subscriptions.filter(s => s !== subscription);\n                }\n            );\n\n            // add the subscription to the list of requests\n            this._subscriptions.push(subscription);\n        }\n    }\n/**\n * Returns true if the request should be fulfilled.\n * @param {?} request\n * @return {?}\n */\nprivate needsData(request: InfiniteScrollRequest): boolean {\n        if (!this.enabled) {\n            return false;\n        }\n\n        // Always load for a load request\n        if (!request.check) {\n            return true;\n        }\n\n        // Ignore a check request when the end of data has been detected, or if data is currently loading.\n        if (this._isExhausted.getValue() || this._isLoading.getValue()) {\n            return false;\n        }\n\n        // Load if the remaining scroll area is <= the element height.\n        if (this._scrollElement && this.loadOnScroll) {\n\n            const /** @type {?} */ element = /** @type {?} */(( <HTMLElement>this._scrollElement.nativeElement));\n            const /** @type {?} */ remainingScroll =\n                element.scrollHeight -\n                (element.scrollTop + element.clientHeight);\n\n            return remainingScroll <= element.clientHeight;\n        }\n\n        return false;\n    }\n/**\n * Updates state for the beginning of a load. Returns false if the `loading` event was cancelled.\n * @param {?} request\n * @return {?}\n */\nprivate beginLoading(request: InfiniteScrollRequest): boolean {\n\n        const /** @type {?} */ event = new InfiniteScrollLoadingEvent(\n            request.pageNumber,\n            request.pageSize,\n            request.filter\n        );\n        this.loadingEvent.emit(event);\n\n        this._isLoading.next(!event.defaultPrevented());\n\n        return !event.defaultPrevented();\n    }\n/**\n * @param {?} pageNum\n * @param {?} items\n * @return {?}\n */\nprivate setPageItems(pageNum: number, items: any[]) {\n        this._pages[pageNum] = items;\n        this.collection = this._pages.reduce((previous, current) => previous.concat(current), []);\n    }\n/**\n * Updates state from a successful load. Raises the `loaded` event.\n * @param {?} request\n * @param {?=} data\n * @return {?}\n */\nprivate endLoading(request: InfiniteScrollRequest, data?: any) {\n        this._isLoading.next(false);\n\n        const /** @type {?} */ isExhausted = !!(data && data.length < this.pageSize);\n        this._isExhausted.next(isExhausted);\n\n        this.loadedEvent.emit(\n            new InfiniteScrollLoadedEvent(\n                request.pageNumber,\n                request.pageSize,\n                request.filter,\n                data,\n                isExhausted\n            )\n        );\n\n        if (!request.reload) {\n            this._nextPageNum += 1;\n        }\n    }\n/**\n * Updates state from a failed load. Raises the `loadError` event.\n * @param {?} request\n * @param {?} error\n * @return {?}\n */\nprivate endLoadingWithError(request: InfiniteScrollRequest, error: any) {\n        this._isLoading.next(false);\n\n        this.loadErrorEvent.emit(\n            new InfiniteScrollLoadErrorEvent(\n                request.pageNumber,\n                request.pageSize,\n                request.filter,\n                error\n            )\n        );\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: '[uxInfiniteScroll]',\n    exportAs: 'uxInfiniteScroll'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'load': [{ type: Input, args: ['uxInfiniteScroll', ] },],\n'_collection': [{ type: Input, args: ['collection', ] },],\n'scrollElement': [{ type: Input },],\n'enabled': [{ type: Input },],\n'filter': [{ type: Input },],\n'loadOnInit': [{ type: Input },],\n'loadOnScroll': [{ type: Input },],\n'pageSize': [{ type: Input },],\n'collectionChange': [{ type: Output },],\n'loadingEvent': [{ type: Output, args: ['loading', ] },],\n'loadedEvent': [{ type: Output, args: ['loaded', ] },],\n'loadErrorEvent': [{ type: Output, args: ['loadError', ] },],\n'_loadButtonQuery': [{ type: ContentChildren, args: [InfiniteScrollLoadButtonDirective, ] },],\n'_loadingIndicatorQuery': [{ type: ContentChildren, args: [InfiniteScrollLoadingDirective, ] },],\n};\n}\n\nfunction InfiniteScrollDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nInfiniteScrollDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nInfiniteScrollDirective.ctorParameters;\n/** @type {?} */\nInfiniteScrollDirective.propDecorators;\n/** @type {?} */\nInfiniteScrollDirective.prototype.load;\n/** @type {?} */\nInfiniteScrollDirective.prototype._collection;\n/** @type {?} */\nInfiniteScrollDirective.prototype.enabled;\n/** @type {?} */\nInfiniteScrollDirective.prototype.filter;\n/** @type {?} */\nInfiniteScrollDirective.prototype.loadOnInit;\n/** @type {?} */\nInfiniteScrollDirective.prototype.loadOnScroll;\n/** @type {?} */\nInfiniteScrollDirective.prototype.pageSize;\n/** @type {?} */\nInfiniteScrollDirective.prototype.collectionChange;\n/** @type {?} */\nInfiniteScrollDirective.prototype.loadingEvent;\n/** @type {?} */\nInfiniteScrollDirective.prototype.loadedEvent;\n/** @type {?} */\nInfiniteScrollDirective.prototype.loadErrorEvent;\n/** @type {?} */\nInfiniteScrollDirective.prototype._loadButtonQuery;\n/** @type {?} */\nInfiniteScrollDirective.prototype._loadingIndicatorQuery;\n/** @type {?} */\nInfiniteScrollDirective.prototype._pages;\n/** @type {?} */\nInfiniteScrollDirective.prototype._nextPageNum;\n/** @type {?} */\nInfiniteScrollDirective.prototype._domObserver;\n/** @type {?} */\nInfiniteScrollDirective.prototype._scrollEventSub;\n/** @type {?} */\nInfiniteScrollDirective.prototype._updateRequests;\n/** @type {?} */\nInfiniteScrollDirective.prototype._isLoading;\n/** @type {?} */\nInfiniteScrollDirective.prototype._isExhausted;\n/** @type {?} */\nInfiniteScrollDirective.prototype._loadButtonEnabled;\n/** @type {?} */\nInfiniteScrollDirective.prototype._canLoadManually;\n/** @type {?} */\nInfiniteScrollDirective.prototype._scrollElement;\n/** @type {?} */\nInfiniteScrollDirective.prototype._subscriptions;\n/** @type {?} */\nInfiniteScrollDirective.prototype._loadButtonSubscriptions;\n/** @type {?} */\nInfiniteScrollDirective.prototype._element;\n}\n\n/**\n * The internal data associated with a load/check request.\n */\nclass InfiniteScrollRequest {\n    check: boolean;\n    pageNumber: number;\n    pageSize: number;\n    filter: any;\n    reload?: boolean;\n}\n\nfunction InfiniteScrollRequest_tsickle_Closure_declarations() {\n/** @type {?} */\nInfiniteScrollRequest.prototype.check;\n/** @type {?} */\nInfiniteScrollRequest.prototype.pageNumber;\n/** @type {?} */\nInfiniteScrollRequest.prototype.pageSize;\n/** @type {?} */\nInfiniteScrollRequest.prototype.filter;\n/** @type {?} */\nInfiniteScrollRequest.prototype.reload;\n}\n\n\nexport type InfiniteScrollLoadFunction = (\n    pageNum: number,\n    pageSize: number,\n    filter: any\n) => any | Promise<any>;\n/**\n * Event raised before the `loading` function is called.\n */\nexport class InfiniteScrollLoadingEvent {\nprivate _defaultPrevented = false;\n/**\n * @param {?} pageNumber\n * @param {?} pageSize\n * @param {?} filter\n */\nconstructor(\npublic pageNumber: number,\npublic pageSize: number,\npublic filter: any\n    ) { }\n/**\n * Prevents the default behaviour of the `loading` event (loading function will not be called).\n * @return {?}\n */\npreventDefault() {\n        this._defaultPrevented = true;\n    }\n/**\n * @return {?}\n */\ndefaultPrevented(): boolean {\n        return this._defaultPrevented;\n    }\n}\n\nfunction InfiniteScrollLoadingEvent_tsickle_Closure_declarations() {\n/** @type {?} */\nInfiniteScrollLoadingEvent.prototype._defaultPrevented;\n/**\n * The index of the requested page, starting from 0.\n * @type {?}\n */\nInfiniteScrollLoadingEvent.prototype.pageNumber;\n/**\n * The number of items requested.\n * @type {?}\n */\nInfiniteScrollLoadingEvent.prototype.pageSize;\n/**\n * The filter details as provided via the `filter` binding.\n * @type {?}\n */\nInfiniteScrollLoadingEvent.prototype.filter;\n}\n\n/**\n * Event raised when the loading function result has been resolved and added to the collection.\n */\nexport class InfiniteScrollLoadedEvent {\n/**\n * @param {?} pageNumber\n * @param {?} pageSize\n * @param {?} filter\n * @param {?} data\n * @param {?} exhausted\n */\nconstructor(\npublic pageNumber: number,\npublic pageSize: number,\npublic filter: any,\npublic data: any,\npublic exhausted: boolean\n    ) { }\n}\n\nfunction InfiniteScrollLoadedEvent_tsickle_Closure_declarations() {\n/**\n * The index of the requested page, starting from 0.\n * @type {?}\n */\nInfiniteScrollLoadedEvent.prototype.pageNumber;\n/**\n * The number of items requested.\n * @type {?}\n */\nInfiniteScrollLoadedEvent.prototype.pageSize;\n/**\n * The filter details as provided via the `filter` binding.\n * @type {?}\n */\nInfiniteScrollLoadedEvent.prototype.filter;\n/**\n * The result of the promise returned from the loading function.\n * @type {?}\n */\nInfiniteScrollLoadedEvent.prototype.data;\n/**\n * True if the data is considered exhausted (number of items returned less than `pageSize`).\n * @type {?}\n */\nInfiniteScrollLoadedEvent.prototype.exhausted;\n}\n\n/**\n * Event raised if the loading function returns a rejected promise.\n */\nexport class InfiniteScrollLoadErrorEvent {\n/**\n * @param {?} pageNumber\n * @param {?} pageSize\n * @param {?} filter\n * @param {?} error\n */\nconstructor(\npublic pageNumber: number,\npublic pageSize: number,\npublic filter: any,\npublic error: any\n    ) { }\n}\n\nfunction InfiniteScrollLoadErrorEvent_tsickle_Closure_declarations() {\n/**\n * The index of the requested page, starting from 0.\n * @type {?}\n */\nInfiniteScrollLoadErrorEvent.prototype.pageNumber;\n/**\n * The number of items requested.\n * @type {?}\n */\nInfiniteScrollLoadErrorEvent.prototype.pageSize;\n/**\n * The filter details as provided via the `filter` binding.\n * @type {?}\n */\nInfiniteScrollLoadErrorEvent.prototype.filter;\n/**\n * The object provided when rejecting the promise.\n * @type {?}\n */\nInfiniteScrollLoadErrorEvent.prototype.error;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { InfiniteScrollLoadButtonDirective } from './infinite-scroll-load-button.directive';\nimport { InfiniteScrollLoadingDirective } from './infinite-scroll-loading.directive';\nimport { InfiniteScrollDirective } from './infinite-scroll.directive';\nimport { NgModule } from '@angular/core';\nexport class InfiniteScrollModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [],\n    exports: [\n        InfiniteScrollDirective,\n        InfiniteScrollLoadButtonDirective,\n        InfiniteScrollLoadingDirective\n    ],\n    declarations: [\n        InfiniteScrollDirective,\n        InfiniteScrollLoadButtonDirective,\n        InfiniteScrollLoadingDirective\n    ],\n    providers: [],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction InfiniteScrollModule_tsickle_Closure_declarations() {\n/** @type {?} */\nInfiniteScrollModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nInfiniteScrollModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable, Inject } from '@angular/core';\nexport class ScrollIntoViewService {\n/**\n * @param {?} elem\n * @param {?} scrollParent\n * @return {?}\n */\nscrollIntoView(elem: HTMLElement, scrollParent: HTMLElement) {\n        const /** @type {?} */ offsetTop = (elem.getBoundingClientRect().top + scrollParent.scrollTop) - scrollParent.getBoundingClientRect().top;\n        if (offsetTop < scrollParent.scrollTop) {\n            scrollParent.scrollTop = offsetTop;\n        } else {\n            const /** @type {?} */ offsetBottom = offsetTop + elem.offsetHeight;\n            if (offsetBottom > (scrollParent.scrollTop + scrollParent.clientHeight)) {\n                scrollParent.scrollTop = offsetBottom - scrollParent.clientHeight;\n            }\n        }\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ScrollIntoViewService_tsickle_Closure_declarations() {\n/** @type {?} */\nScrollIntoViewService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nScrollIntoViewService.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { ScrollIntoViewService } from './scroll-into-view.service';\nimport { Directive, ElementRef, Input, OnChanges, SimpleChanges } from '@angular/core';\nexport class ScrollIntoViewIfDirective implements OnChanges {\n\n     condition = false;\n     scrollParent: HTMLElement;\n/**\n * @param {?} element\n * @param {?} scrollIntoViewService\n */\nconstructor(private element: ElementRef,\nprivate scrollIntoViewService: ScrollIntoViewService) {}\n/**\n * @param {?} changes\n * @return {?}\n */\nngOnChanges(changes: SimpleChanges) {\n        if (this.condition) {\n            setTimeout(() => {\n                this.scrollIntoViewService.scrollIntoView(this.element.nativeElement, this.scrollParent);\n            });\n        }\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{ selector: '[uxScrollIntoViewIf]' }, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: ScrollIntoViewService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'condition': [{ type: Input, args: ['uxScrollIntoViewIf', ] },],\n'scrollParent': [{ type: Input },],\n};\n}\n\nfunction ScrollIntoViewIfDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nScrollIntoViewIfDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nScrollIntoViewIfDirective.ctorParameters;\n/** @type {?} */\nScrollIntoViewIfDirective.propDecorators;\n/** @type {?} */\nScrollIntoViewIfDirective.prototype.condition;\n/** @type {?} */\nScrollIntoViewIfDirective.prototype.scrollParent;\n/** @type {?} */\nScrollIntoViewIfDirective.prototype.element;\n/** @type {?} */\nScrollIntoViewIfDirective.prototype.scrollIntoViewService;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\n\nimport { ScrollIntoViewIfDirective } from './scroll-into-view-if.directive';\nimport { ScrollIntoViewService } from './scroll-into-view.service';\nexport class ScrollIntoViewIfModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [],\n    exports: [ScrollIntoViewIfDirective],\n    declarations: [ScrollIntoViewIfDirective],\n    providers: [ScrollIntoViewService],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ScrollIntoViewIfModule_tsickle_Closure_declarations() {\n/** @type {?} */\nScrollIntoViewIfModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nScrollIntoViewIfModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { InfiniteScrollModule } from '../../directives/infinite-scroll/index';\nimport { ScrollIntoViewIfModule } from '../../directives/scroll-into-view-if/index';\nimport { TypeaheadKeyService } from './typeahead-key.service';\nimport { TypeaheadComponent } from './typeahead.component';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nexport class TypeaheadModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        CommonModule,\n        InfiniteScrollModule,\n        ScrollIntoViewIfModule\n    ],\n    exports: [TypeaheadComponent],\n    declarations: [TypeaheadComponent],\n    providers: [TypeaheadKeyService],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction TypeaheadModule_tsickle_Closure_declarations() {\n/** @type {?} */\nTypeaheadModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTypeaheadModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, ElementRef, EventEmitter, Inject, Input, OnChanges, OnDestroy, OnInit, Output, SimpleChanges, StaticProvider, TemplateRef, ViewChild, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { DOCUMENT } from '@angular/platform-browser';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { Observable } from 'rxjs/Observable';\nimport { Subscription } from 'rxjs/Subscription';\nimport { debounceTime, filter, map } from 'rxjs/operators';\nimport { InfiniteScrollLoadFunction } from '../../directives/infinite-scroll/index';\nimport { TypeaheadComponent, TypeaheadKeyService, TypeaheadOptionEvent } from '../typeahead/index';\n\nexport const /** @type {?} */ SELECT_VALUE_ACCESSOR: StaticProvider = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => SelectComponent),\n    multi: true\n};\nexport class SelectComponent implements OnInit, OnChanges, OnDestroy, ControlValueAccessor {\n/**\n * @return {?}\n */\nget value() {\n        return this._value;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset value(value: any) {\n        this._value = value;\n        this.valueChange.emit(value);\n        this.propagateChange(value);\n\n        // if we are not allow multiple selection update the input value (supporting ngModel)\n        if (!this.multiple && value !== null) {\n            this.input = this.getDisplay(value);\n        }\n    }\n/**\n * @return {?}\n */\nget input() {\n        return this._input$.value;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset input(value: string) {\n        this._input$.next(value);\n        this.inputChange.emit(value);\n    }\n/**\n * @return {?}\n */\nget dropdownOpen() {\n        return this._dropdownOpen;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset dropdownOpen(value: boolean) {\n        this._dropdownOpen = value;\n        this.dropdownOpenChange.emit(value);\n    }\n\n     options: any[] | InfiniteScrollLoadFunction;\n     display: (option: any) => string | string;\n     key: (option: any) => string | string;\n     allowNull: boolean = false;\n     disabled: boolean = false;\n     dropDirection: 'up' | 'down' = 'down';\n     maxHeight: string = '250px';\n     multiple: boolean = false;\n     pageSize: number = 20;\n     placeholder: string;\n\n     loadingTemplate: TemplateRef<any>;\n     noOptionsTemplate: TemplateRef<any>;\n     optionTemplate: TemplateRef<any>;\n\n     valueChange = new EventEmitter<any>();\n     inputChange = new EventEmitter<string>();    \n     dropdownOpenChange = new EventEmitter<boolean>();    \n\n     singleInput: ElementRef;\n     multipleTypeahead: TypeaheadComponent;\n     singleTypeahead: TypeaheadComponent;\n\n    filter$: Observable<string>;\n    propagateChange = (_: any) => { };\nprivate _value: any;\nprivate _input$ = new BehaviorSubject<string>('');\nprivate _dropdownOpen: boolean = false;\nprivate _subscription = new Subscription();\n/**\n * @param {?} _element\n * @param {?} _document\n * @param {?} _typeaheadKeyService\n */\nconstructor(\nprivate _element: ElementRef,\nprivate _document: Document,\nprivate _typeaheadKeyService: TypeaheadKeyService) { }\n/**\n * @return {?}\n */\nngOnInit() {\n\n        // Changes to the input field\n        const /** @type {?} */ onInput = this._input$.pipe(\n            filter(value => this.allowNull),\n            filter(value => !this.multiple && value !== this.getDisplay(this.value))\n        ).subscribe(value => this.value = null);\n\n        // Set up filter from input\n        this.filter$ = this._input$.pipe(\n            map(input => !this.multiple && input === this.getDisplay(this.value) ? '' : input),\n            debounceTime(200)\n        );\n\n        // Open the dropdown when filter is nonempty.\n        const /** @type {?} */ onFilter = this.filter$.pipe(filter(value => value && value.length > 0)).subscribe(() => this.dropdownOpen = true);\n\n        // store the subscriptions\n        this._subscription.add(onInput);\n        this._subscription.add(onFilter);\n    }\n/**\n * @param {?} changes\n * @return {?}\n */\nngOnChanges(changes: SimpleChanges) {\n        if (changes.multiple && !changes.multiple.firstChange && changes.multiple.currentValue !== changes.multiple.previousValue) {\n            this.input = '';\n        }\n    }\n/**\n * @return {?}\n */\nngOnDestroy(): void {\n        this._subscription.unsubscribe();\n    }\n/**\n * @param {?} obj\n * @return {?}\n */\nwriteValue(obj: any): void {\n        if (obj !== undefined && obj !== this._value) {\n            this.value = obj;\n        }\n    }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnChange(fn: any): void {\n        this.propagateChange = fn;\n    }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnTouched(fn: any): void { }\n/**\n * @param {?} isDisabled\n * @return {?}\n */\nsetDisabledState(isDisabled: boolean): void {\n        this.disabled = isDisabled;\n    }\n/**\n * @param {?} event\n * @return {?}\n */\ninputClickHandler(event: MouseEvent) {\n        this.selectInputText();\n        this.dropdownOpen = true;\n    }\n/**\n * @param {?} event\n * @return {?}\n */\ninputBlurHandler(event: Event) {\n        // Close dropdown and reset text input if focus is lost\n        setTimeout(() => {\n            if (!this._element.nativeElement.contains(this._document.activeElement)) {\n                this.dropdownOpen = false;\n                if (!this.multiple) {\n                    this.input = this.getDisplay(this.value);\n                }\n            }\n        }, 200);\n    }\n/**\n * Key handler for single select only. Multiple select key handling is in TagInputComponent.\n * @param {?} event\n * @return {?}\n */\ninputKeyHandler(event: KeyboardEvent) {\n\n        // Standard keys for typeahead (up/down/esc)\n        this._typeaheadKeyService.handleKey(event, this.singleTypeahead);\n\n        switch (event.key) {\n            case 'Enter':\n                if (this._dropdownOpen) {\n                    // Set the highlighted option as the value and close\n                    this.value = this.singleTypeahead.highlighted;\n                    this.dropdownOpen = false;\n                }\n\n                // Update the input field. If dropdown isn't open then reset it to the previous value.\n                this.input = this.getDisplay(this.value);\n                event.preventDefault();\n                break;\n        }\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nsingleOptionSelected(event: TypeaheadOptionEvent) {\n        if (event.option) {\n            this.value = event.option;\n            this.dropdownOpen = false;\n        }\n    }\n/**\n * Returns the display value of the given option.\n * @param {?} option\n * @return {?}\n */\ngetDisplay(option: any): string {\n        if (option === null || option === undefined) {\n            return '';\n        }\n        if (typeof this.display === 'function') {\n            return this.display(option);\n        }\n        if (typeof this.display === 'string' && option.hasOwnProperty(this.display)) {\n            return option[ /** @type {?} */((<string>this.display))];\n        }\n        return option;\n    }\n/**\n * @return {?}\n */\nprivate selectInputText() {\n        this.singleInput.nativeElement.select();\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-select',\n    template: `\n      <ux-tag-input *ngIf=\"multiple\"\n          [(tags)]=\"value\"\n          [(input)]=\"input\"\n          [addOnPaste]=\"false\"\n          [disabled]=\"disabled\"\n          [display]=\"display\"\n          [freeInput]=\"false\"\n          [placeholder]=\"placeholder\"\n          [showTypeaheadOnClick]=\"true\">\n\n          <ux-typeahead #multipleTypeahead\n              [options]=\"options\"\n              [filter]=\"filter$ | async\"\n              [(open)]=\"dropdownOpen\"\n              [display]=\"display\"\n              [key]=\"key\"\n              [disabledOptions]=\"value\"\n              [dropDirection]=\"dropDirection\"\n              [maxHeight]=\"maxHeight\"\n              [pageSize]=\"pageSize\"\n              [selectFirst]=\"true\"\n              [loadingTemplate]=\"loadingTemplate\"\n              [optionTemplate]=\"optionTemplate\"\n              [noOptionsTemplate]=\"noOptionsTemplate\">\n          </ux-typeahead>\n\n      </ux-tag-input>\n\n      <div *ngIf=\"!multiple\" class=\"inner-addon right-addon\" [class.disabled]=\"disabled\">\n\n          <i class=\"hpe-icon\"\n              [class.hpe-down]=\"dropDirection === 'down'\"\n              [class.hpe-up]=\"dropDirection === 'up'\"></i>\n\n          <input #singleInput type=\"text\" class=\"form-control\"\n              [(ngModel)]=\"input\"\n              [placeholder]=\"placeholder\"\n              [disabled]=\"disabled\"\n              (click)=\"inputClickHandler($event)\"\n              (blur)=\"inputBlurHandler($event)\"\n              (keydown)=\"inputKeyHandler($event)\">\n\n          <ux-typeahead #singleTypeahead\n              [options]=\"options\"\n              [filter]=\"filter$ | async\"\n              [(open)]=\"dropdownOpen\"\n              [display]=\"display\"\n              [key]=\"key\"\n              [dropDirection]=\"dropDirection\"\n              [maxHeight]=\"maxHeight\"\n              [openOnFilterChange]=\"false\"\n              [pageSize]=\"pageSize\"\n              [selectFirst]=\"true\"\n              [loadingTemplate]=\"loadingTemplate\"\n              [optionTemplate]=\"optionTemplate\"\n              [noOptionsTemplate]=\"noOptionsTemplate\"\n              (optionSelected)=\"singleOptionSelected($event)\" >\n          </ux-typeahead>\n\n      </div>\n    `,\n    providers: [SELECT_VALUE_ACCESSOR]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Document, decorators: [{ type: Inject, args: [DOCUMENT, ] }, ]},\n{type: TypeaheadKeyService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'value': [{ type: Input },],\n'input': [{ type: Input },],\n'dropdownOpen': [{ type: Input },],\n'options': [{ type: Input },],\n'display': [{ type: Input },],\n'key': [{ type: Input },],\n'allowNull': [{ type: Input },],\n'disabled': [{ type: Input },],\n'dropDirection': [{ type: Input },],\n'maxHeight': [{ type: Input },],\n'multiple': [{ type: Input },],\n'pageSize': [{ type: Input },],\n'placeholder': [{ type: Input },],\n'loadingTemplate': [{ type: Input },],\n'noOptionsTemplate': [{ type: Input },],\n'optionTemplate': [{ type: Input },],\n'valueChange': [{ type: Output },],\n'inputChange': [{ type: Output },],\n'dropdownOpenChange': [{ type: Output },],\n'singleInput': [{ type: ViewChild, args: ['singleInput', ] },],\n'multipleTypeahead': [{ type: ViewChild, args: ['multipleTypeahead', ] },],\n'singleTypeahead': [{ type: ViewChild, args: ['singleTypeahead', ] },],\n};\n}\n\nfunction SelectComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nSelectComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSelectComponent.ctorParameters;\n/** @type {?} */\nSelectComponent.propDecorators;\n/** @type {?} */\nSelectComponent.prototype.options;\n/** @type {?} */\nSelectComponent.prototype.display;\n/** @type {?} */\nSelectComponent.prototype.key;\n/** @type {?} */\nSelectComponent.prototype.allowNull;\n/** @type {?} */\nSelectComponent.prototype.disabled;\n/** @type {?} */\nSelectComponent.prototype.dropDirection;\n/** @type {?} */\nSelectComponent.prototype.maxHeight;\n/** @type {?} */\nSelectComponent.prototype.multiple;\n/** @type {?} */\nSelectComponent.prototype.pageSize;\n/** @type {?} */\nSelectComponent.prototype.placeholder;\n/** @type {?} */\nSelectComponent.prototype.loadingTemplate;\n/** @type {?} */\nSelectComponent.prototype.noOptionsTemplate;\n/** @type {?} */\nSelectComponent.prototype.optionTemplate;\n/** @type {?} */\nSelectComponent.prototype.valueChange;\n/** @type {?} */\nSelectComponent.prototype.inputChange;\n/** @type {?} */\nSelectComponent.prototype.dropdownOpenChange;\n/** @type {?} */\nSelectComponent.prototype.singleInput;\n/** @type {?} */\nSelectComponent.prototype.multipleTypeahead;\n/** @type {?} */\nSelectComponent.prototype.singleTypeahead;\n/** @type {?} */\nSelectComponent.prototype.filter$;\n/** @type {?} */\nSelectComponent.prototype.propagateChange;\n/** @type {?} */\nSelectComponent.prototype._value;\n/** @type {?} */\nSelectComponent.prototype._input$;\n/** @type {?} */\nSelectComponent.prototype._dropdownOpen;\n/** @type {?} */\nSelectComponent.prototype._subscription;\n/** @type {?} */\nSelectComponent.prototype._element;\n/** @type {?} */\nSelectComponent.prototype._document;\n/** @type {?} */\nSelectComponent.prototype._typeaheadKeyService;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","\nexport class TagInputEvent {\nprivate _defaultPrevented = false;\n/**\n * @param {?} tag\n */\nconstructor(public tag: any) {}\n/**\n * @return {?}\n */\npreventDefault() {\n        this._defaultPrevented = true;\n    }\n/**\n * @return {?}\n */\ndefaultPrevented(): boolean {\n        return this._defaultPrevented;\n    }\n}\n\nfunction TagInputEvent_tsickle_Closure_declarations() {\n/** @type {?} */\nTagInputEvent.prototype._defaultPrevented;\n/** @type {?} */\nTagInputEvent.prototype.tag;\n}\n","import { TypeaheadComponent, TypeaheadKeyService } from '../typeahead/index';\nimport { TypeaheadOptionEvent } from '../typeahead/typeahead-event';\nimport { TagInputEvent } from './tag-input-event';\nimport {\n    AfterContentInit,\n    Component,\n    ContentChildren,\n    ElementRef,\n    EventEmitter,\n    forwardRef,\n    HostListener,\n    Inject,\n    Input,\n    OnChanges,\n    OnInit,\n    Output,\n    QueryList,\n    SimpleChanges,\n    TemplateRef,\n    ViewChild\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALIDATORS, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { DOCUMENT } from '@angular/platform-browser';\n\n\nconst /** @type {?} */ TAGINPUT_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => TagInputComponent),\n    multi: true\n};\nconst /** @type {?} */ TAGINPUT_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => TagInputComponent),\n    multi: true\n};\nexport class TagInputComponent implements OnInit, AfterContentInit, OnChanges, ControlValueAccessor {\nprivate _tags: any[] = [];\n/**\n * @return {?}\n */\nget tags() {\n        if (!this._tags) {\n            this._tags = [];\n        }\n        return this._tags;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset tags(value: any[]) {\n        this._tags = value;\n        this.onChangeHandler(this._tags);\n        this.tagsChange.emit(this._tags);\n    }\n\n     tagsChange = new EventEmitter<any[]>();\nprivate _input: string = '';\n/**\n * @return {?}\n */\nget input() {\n        return this._input;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset input(value: string) {\n        this._input = value;\n        this.inputChange.emit(value);\n    }\n\n     inputChange = new EventEmitter<string>();\n\n     display: (option: any) => string | string;\n     addOnPaste: boolean = true;\n     disabled: boolean = false;\n     enforceTagLimits: boolean = false;\n     freeInput: boolean = true;\n     maxTags: number = Number.MAX_VALUE;\n     minTags: number = 0;\n     placeholder: string = '';\n     showTypeaheadOnClick: boolean = false;\n     tagDelimiters: string = '';\n     tagPattern: RegExp;\n     tagTemplate: TemplateRef<any>;\n     tagClass: TagClassFunction = () => undefined;\n     validationErrors: any = {};\n     createTagHandler: (value: string) => any;\n\n     tagAdding = new EventEmitter<TagInputEvent>();\n     tagAdded = new EventEmitter<TagInputEvent>();\n     tagInvalidated = new EventEmitter<TagInputEvent>();\n     tagRemoving = new EventEmitter<TagInputEvent>();\n     tagRemoved = new EventEmitter<TagInputEvent>();\n     tagClick = new EventEmitter<TagInputEvent>();\n\n     typeaheadQuery: QueryList<TypeaheadComponent>;\n\n     tagInput: ElementRef;\nprivate _defaultTagTemplate: TemplateRef<any>;\n\n    selectedIndex: number = -1;\n\n    tagApi: TagApi = {\n        getTagDisplay: this.getTagDisplay.bind(this),\n        removeTagAt: this.removeTagAt.bind(this),\n        canRemoveTagAt: this.canRemoveTagAt.bind(this)\n    };\n\n    valid: boolean = true;\n    inputValid: boolean = true;\n\n    typeahead: TypeaheadComponent;\nprivate onChangeHandler: (_: any) => void = () => { };\nprivate onTouchedHandler: () => void = () => { };\n/**\n * @param {?} _element\n * @param {?} _document\n * @param {?} _typeaheadKeyService\n */\nconstructor(\nprivate _element: ElementRef,\nprivate _document: Document,\nprivate _typeaheadKeyService: TypeaheadKeyService) { }\n/**\n * @return {?}\n */\nngOnInit() {\n        if (!this.tagTemplate) {\n            this.tagTemplate = this._defaultTagTemplate;\n        }\n    }\n/**\n * @return {?}\n */\nngAfterContentInit() {\n        // Watch for optional child typeahead control\n        this.connectTypeahead(this.typeaheadQuery.first);\n        this.typeaheadQuery.changes.subscribe((query) => {\n            this.connectTypeahead(query.first);\n        });\n    }\n/**\n * @param {?} changes\n * @return {?}\n */\nngOnChanges(changes: SimpleChanges) {\n        if (changes.disabled) {\n            if (changes.disabled.currentValue) {\n                // Clear selection and close dropdown\n                this.selectedIndex = -1;\n                if (this.typeahead) {\n                    this.typeahead.open = false;\n                }\n            }\n        }\n\n        // Update validation status\n        this.validate();\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nwriteValue(value: any[]) {\n        if (value) {\n            this.tags = value;\n        }\n    }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnChange(fn: any) {\n        this.onChangeHandler = fn;\n    }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnTouched(fn: any) {\n        this.onTouchedHandler = fn;\n    }\n/**\n * @param {?} isDisabled\n * @return {?}\n */\nsetDisabledState(isDisabled: boolean): void {\n        this.disabled = isDisabled;\n    }\n/**\n * Validate the value of the control (tags property).\n * @return {?}\n */\nvalidate() {\n        this.valid = true;\n        let /** @type {?} */ tagRangeError = null;\n        if (this.tags && (this.tags.length < this.minTags || this.tags.length > this.maxTags)) {\n            tagRangeError = {\n                given: this.tags.length,\n                min: this.minTags,\n                max: this.maxTags\n            };\n            this.valid = false;\n        }\n        this.validationErrors['tagRangeError'] = tagRangeError;\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nkeyHandler(event: KeyboardEvent) {\n\n        if (this.disabled) { return; }\n\n        // Get the input field cursor location\n        const /** @type {?} */ inputCursorPos = this.tagInput.nativeElement.selectionStart;\n\n        // Determine if the input field has any text selected\n        const /** @type {?} */ hasSelection = this.tagInput.nativeElement.selectionStart !== this.tagInput.nativeElement.selectionEnd;\n\n        // Determine if a tag has focus\n        const /** @type {?} */ tagSelected = this.isValidTagIndex(this.selectedIndex);\n        \n        const /** @type {?} */ inputLength = this.input ? this.input.length : 0;\n\n        // Check whether the arrow keys can move the selection. Otherwise the input field takes the event.\n        const /** @type {?} */ canNavigateLeft = tagSelected || (inputCursorPos <= 0 && !hasSelection);\n        const /** @type {?} */ canNavigateRight = tagSelected || (inputCursorPos >= inputLength && !hasSelection);\n\n        // Forward key events to the typeahead component.\n        this._typeaheadKeyService.handleKey(event, this.typeahead);\n\n        switch (event.key) {\n            case 'Enter':\n                // Check if a typeahead option is highlighted\n                if (this.typeahead && this.typeahead.open && this.typeahead.highlighted) {\n                    // Add the typeahead option as a tag, clear the input, and close the dropdown\n                    this.commitTypeahead(this.typeahead.highlighted);\n                    this.typeahead.open = false;\n                } else {\n                    // Validate and add the input text as a tag, if possible\n                    this.commitInput();\n                }\n                event.preventDefault();\n                break;\n            case 'Backspace':\n                if (canNavigateLeft) {\n                    this.backspace();\n                    event.stopPropagation();\n                    event.preventDefault();\n                }\n                break;\n            case 'Delete':\n            case 'Del':\n                if (tagSelected) {\n                    this.removeTagAt(this.selectedIndex);\n                }\n                break;\n            case 'ArrowLeft':\n            case 'Left':\n                if (canNavigateLeft) {\n                    this.moveSelection(-1);\n                    event.preventDefault();\n                }\n                break;\n            case 'ArrowRight':\n            case 'Right':\n                if (canNavigateRight) {\n                    this.moveSelection(1);\n                    event.preventDefault();\n                }\n                break;\n        }\n\n        // Check for keys in the tagDelimiters\n        if (this.tagDelimiters && this.tagDelimiters.indexOf(this.getKeyChar(event)) >= 0) {\n            // Commit previous text\n            this.commitInput();\n            event.stopPropagation();\n            event.preventDefault();\n        }\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nfocusOutHandler(event: FocusEvent) {\n        // Close the dropdown on blur\n        setTimeout(() => {\n            if (!this._element.nativeElement.contains(this._document.activeElement)) {\n                this.selectedIndex = -1;\n                if (this.typeahead) {\n                    this.typeahead.open = false;\n                }\n            }\n        }, 200);\n    }\n/**\n * @param {?} event\n * @param {?} tag\n * @param {?} index\n * @return {?}\n */\ntagClickHandler(event: MouseEvent, tag: any, index: number) {\n\n        if (this.disabled) { return; }\n\n        // Send tagClick event\n        const /** @type {?} */ tagClickEvent = new TagInputEvent(tag);\n        this.tagClick.emit(tagClickEvent);\n\n        // Prevent focus if preventDefault() was called\n        if (tagClickEvent.defaultPrevented()) {\n            event.preventDefault();\n            return;\n        }\n\n        // Select the tag (for IE that doesn't propagate focus)\n        this.selectTagAt(index);\n    }\n/**\n * @return {?}\n */\ninputClickHandler() {\n\n        if (this.disabled) { return; }\n\n        if (this.typeahead && this.showTypeaheadOnClick) {\n            this.typeahead.open = true;\n        }\n    }\n/**\n * @return {?}\n */\ninputFocusHandler() {\n\n        if (this.disabled) { return; }\n\n        this.selectInput();\n    }\n/**\n * @param {?} event\n * @return {?}\n */\ninputPasteHandler(event: ClipboardEvent) {\n\n        if (this.disabled) { return; }\n\n        if (this.addOnPaste) {\n            // Get text from the clipboard\n            let /** @type {?} */ input: string = null;\n            if (event.clipboardData) {\n                input = event.clipboardData.getData('text/plain');\n            } else if (( /** @type {?} */((<any>window))).clipboardData) {\n                // Internet Explorer only\n                input = ( /** @type {?} */((<any>window))).clipboardData.getData('Text');\n            }\n\n            // Commit the clipboard text directly\n            if (this.commit(input)) {\n                this.selectInput();\n                event.stopPropagation();\n                event.preventDefault();\n            }\n        }\n    }\n/**\n * @param {?} event\n * @return {?}\n */\ntypeaheadOptionSelectedHandler(event: TypeaheadOptionEvent) {\n\n        if (this.disabled) { return; }\n\n        // When the typeahead sends the optionSelected event, commit the object directly\n        this.commitTypeahead(event.option);\n    }\n/**\n * Commit the current input value and clear the input field if successful.\n * @return {?}\n */\ncommitInput() {\n        if (this.commit(this.input)) {\n            this.selectInput();\n            this.input = '';\n        }\n    }\n/**\n * Commit the given tag object and clear the input if successful.\n * @param {?} tag\n * @return {?}\n */\ncommitTypeahead(tag: any) {\n        if (this.addTag(tag)) {\n            this.selectInput();\n            this.input = '';\n        }\n    }\n/**\n * Commit the given string value as one or more tags, if validation passes. Returns true if the tag(s) were created.\n * @param {?} input\n * @return {?}\n */\ncommit(input: string): boolean {\n        if (input && this.freeInput) {\n\n            // Split the tags by the tagDelimiters if configured\n            const /** @type {?} */ newTags = this.splitTagInput(input);\n\n            // Check tag validation for all of the individual values\n            let /** @type {?} */ allValid = true;\n            for (let /** @type {?} */ newTag of newTags) {\n                const /** @type {?} */ valid = this.validateTag(newTag);\n                if (!valid) {\n                    allValid = false;\n                }\n            }\n\n            // Add the tags if all are valid\n            if (allValid) {\n                for (let /** @type {?} */ newTag of newTags) {\n                    this.addTag(this.createTag(newTag));\n                }\n\n                return true;\n            }\n        }\n\n        return false;\n    }\n/**\n * If no tag is selected, select the rightmost tag. If a tag is selected, remove it.\n * @return {?}\n */\nbackspace() {\n\n        if (this.disabled) { return; }\n\n        if (!this.isValidTagIndex(this.selectedIndex)) {\n            this.selectTagAt(this.tags.length - 1);\n        } else {\n            this.removeTagAt(this.selectedIndex);\n        }\n    }\n/**\n * Move the highlighted option forwards or backwards in the list. Wraps at the limits.\n * @param {?} d Value to be added to the selected index, i.e. -1 to move backwards, +1 to move forwards.\n * @return {?}\n */\nmoveSelection(d: number) {\n\n        if (this.disabled) { return; }\n\n        if (this.isValidSelectIndex(this.selectedIndex)) {\n            this.selectedIndex += d;\n\n            // Do wrapping of selection when out of bounds\n            if (this.selectedIndex < 0) {\n                this.selectedIndex = this.tags.length;\n            } else if (this.selectedIndex > this.tags.length) {\n                this.selectedIndex = 0;\n            }\n        }\n    }\n/**\n * Returns a value to display for the given tag. Uses display function/property name if set, otherwise assumes that the tag is a simple string.\n * @param {?} tag\n * @return {?}\n */\ngetTagDisplay(tag: any): string {\n        if (typeof this.display === 'function') {\n            return this.display(tag);\n        }\n        if (typeof this.display === 'string') {\n            return tag[ /** @type {?} */((<string>this.display))];\n        }\n        return tag;\n    }\n/**\n * Returns true if the given index is selected (tag index or input field).\n * @param {?} index\n * @return {?}\n */\nisSelected(index: number): boolean {\n        return index === this.selectedIndex;\n    }\n/**\n * Select the tag at the given index. Does nothing if disabled is true.\n * @param {?} tagIndex\n * @return {?}\n */\nselectTagAt(tagIndex: number) {\n\n        if (this.disabled) { return; }\n\n        if (this.isValidTagIndex(tagIndex)) {\n            this.selectedIndex = tagIndex;\n        }\n    }\n/**\n * Select the input field, giving it focus. Does nothing if disabled is true.\n * @return {?}\n */\nselectInput() {\n\n        if (this.disabled) { return; }\n\n        this.selectedIndex = this.tags.length;\n    }\n/**\n * Remove the tag at the given index. Does nothing if disabled is true or the minTags property prevents removal.\n * @param {?} tagIndex\n * @return {?}\n */\nremoveTagAt(tagIndex: number) {\n\n        if (this.disabled || !this.canRemoveTagAt(tagIndex)) { return; }\n\n        // Check that the tagIndex is in range\n        if (this.isValidTagIndex(tagIndex)) {\n            const /** @type {?} */ tag = this.tags[tagIndex];\n            const /** @type {?} */ tagRemovingEvent = new TagInputEvent(tag);\n            this.tagRemoving.emit(tagRemovingEvent);\n            if (!tagRemovingEvent.defaultPrevented()) {\n                // Select input first to avoid issues with dropping focus\n                this.selectInput();\n                // Remove the tag\n                this.tags.splice(tagIndex, 1);\n                // Set focus again since indices have changed\n                this.selectInput();\n                this.tagRemoved.emit(new TagInputEvent(tag));\n                this.validate();\n            }\n        }\n    }\n/**\n * Returns true if the tag at the given index can be removed.\n * @param {?} tagIndex\n * @return {?}\n */\ncanRemoveTagAt(tagIndex: number): boolean {\n        return this.tags.length > this.minTags || !this.enforceTagLimits;\n    }\n/**\n * Returns true if the input field should be available.\n * @return {?}\n */\nisInputVisible() {\n        return this.tags.length < this.maxTags || !this.enforceTagLimits;\n    }\n/**\n * Returns true if any part of the control has focus.\n * @return {?}\n */\nhasFocus(): boolean {\n        return this.isValidSelectIndex(this.selectedIndex);\n    }\n/**\n * @param {?} typeahead\n * @return {?}\n */\nprivate connectTypeahead(typeahead: TypeaheadComponent) {\n        this.typeahead = typeahead;\n        if (this.typeahead) {\n            // Set up event handler for selected options\n            this.typeahead.optionSelected.subscribe(this.typeaheadOptionSelectedHandler.bind(this));\n        }\n    }\n/**\n * Validate the given tagValue with the tagPattern, if set. Update validationErrors on validation failure.\n * @param {?} tagValue\n * @return {?}\n */\nprivate validateTag(tagValue: string): boolean {\n        let /** @type {?} */ inputPattern = null;\n        this.inputValid = true;\n        if (this.tagPattern && !this.tagPattern.test(tagValue)) {\n            inputPattern = {\n                given: tagValue,\n                pattern: this.tagPattern\n            };\n            this.inputValid = false;\n        }\n        this.validationErrors['inputPattern'] = inputPattern;\n        return this.inputValid;\n    }\n/**\n * Create a tag object for the given tagValue. If createTagHandler is specified, use it; otherwise if displayProperty is specified, create an object with the tagValue as the single named property; otherwise return the tagValue itself.\n * @param {?} tagValue\n * @return {?}\n */\nprivate createTag(tagValue: string): any {\n        let /** @type {?} */ tag = null;\n        if (this.createTagHandler && typeof this.createTagHandler === 'function') {\n            tag = this.createTagHandler(tagValue);\n        } else if (typeof this.display === 'string') {\n            tag = {};\n            tag[ /** @type {?} */((<string>this.display))] = tagValue;\n        } else {\n            tag = tagValue;\n        }\n        return tag;\n    }\n/**\n * Add a tag object, calling the tagAdding and tagAdded events. Returns true if the tag was added to the tags array.\n * @param {?} tag\n * @return {?}\n */\nprivate addTag(tag: any): boolean {\n        if (tag) {\n            // Verify that the new tag can be displayed\n            const /** @type {?} */ displayValue = this.getTagDisplay(tag);\n            if (displayValue && typeof displayValue === 'string' && displayValue.length > 0) {\n                const /** @type {?} */ tagAddingEvent = new TagInputEvent(tag);\n                this.tagAdding.emit(tagAddingEvent);\n                if (!tagAddingEvent.defaultPrevented()) {\n                    this.tags = this.tags || [];\n                    this.tags.push(tag);\n                    this.tagAdded.emit(new TagInputEvent(tag));\n                    this.validate();\n                    return true;\n                }\n            }\n        }\n\n        return false;\n    }\n/**\n * Returns true if the given tagIndex is a valid tag index.\n * @param {?} tagIndex\n * @return {?}\n */\nprivate isValidTagIndex(tagIndex: number): boolean {\n        return tagIndex >= 0 && tagIndex < this.tags.length;\n    }\n/**\n * Returns true if the given index is a valid selection index (tags or input field).\n * @param {?} index\n * @return {?}\n */\nprivate isValidSelectIndex(index: number): boolean {\n        return index >= 0 && index <= this.tags.length;\n    }\n/**\n * Returns the character corresponding to the given key event, mainly for IE compatibility.\n * @param {?} event\n * @return {?}\n */\nprivate getKeyChar(event: KeyboardEvent): string {\n        switch (event.key) {\n            case 'Spacebar':\n                return ' ';\n        }\n        return event.key;\n    }\n/**\n * Returns an array of strings corresponding to the input string split by the tagDelimiters characters.\n * @param {?} input\n * @return {?}\n */\nprivate splitTagInput(input: string): string[] {\n        let /** @type {?} */ tagValues = [input];\n        if (this.tagDelimiters && typeof this.tagDelimiters === 'string') {\n            const /** @type {?} */ escapedDelimiters = this.tagDelimiters.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n            const /** @type {?} */ delimiterRegex = new RegExp(`[${escapedDelimiters}]`, 'g');\n            tagValues = input.split(delimiterRegex).filter((s) => s.length > 0);\n        }\n        return tagValues;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-tag-input',\n    template: `\n      <ol>\n          <li *ngFor=\"let tag of tags; let i = index\" class=\"ux-tag\"\n              [class.disabled]=\"disabled\"\n              [ngClass]=\"tagClass(tag, i, isSelected(i))\"\n              [attr.tabindex]=\"disabled ? null : i\"\n              [focusIf]=\"isSelected(i)\"\n              (click)=\"tagClickHandler($event, tag, i)\"\n              (focus)=\"selectTagAt(i)\">\n        \n              <ng-container [ngTemplateOutlet]=\"tagTemplate\"\n                  [ngTemplateOutletContext]=\"{tag: tag, index: i, disabled: disabled, api: tagApi}\">\n              </ng-container>\n\n          </li>\n          <li *ngIf=\"isInputVisible()\" class=\"ux-tag-input\">\n              <input #tagInput type=\"text\" class=\"ux-tag-input\"\n                  [(ngModel)]=\"input\"\n                  [class.invalid]=\"!inputValid\"\n                  [placeholder]=\"disabled ? '' : (placeholder || '')\"\n                  [disabled]=\"disabled\"\n                  [focusIf]=\"isSelected(tags.length)\"\n                  (click)=\"inputClickHandler()\"\n                  (focus)=\"inputFocusHandler()\"\n                  (paste)=\"inputPasteHandler($event)\">\n          </li>\n      </ol>\n\n      <ng-content #typeahead></ng-content>\n\n      <ng-template #defaultTagTemplate let-tag=\"tag\" let-index=\"index\" let-disabled=\"disabled\" let-api=\"api\">\n          <span class=\"ux-tag-text\">{{api.getTagDisplay(tag)}}</span>\n          <button *ngIf=\"api.canRemoveTagAt(index)\" type=\"button\" class=\"ux-tag-remove\" [disabled]=\"disabled\" (click)=\"api.removeTagAt(index); $event.stopPropagation();\"><i class=\"hpe-icon hpe-close\"></i></button>\n      </ng-template>\n    `,\n    providers: [TAGINPUT_VALUE_ACCESSOR, TAGINPUT_VALIDATOR],\n    host: {\n        '[class.disabled]': 'disabled',\n        '[class.focus]': 'hasFocus()',\n        '[class.invalid]': '!valid || !inputValid'\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Document, decorators: [{ type: Inject, args: [DOCUMENT, ] }, ]},\n{type: TypeaheadKeyService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'tags': [{ type: Input, args: ['tags', ] },],\n'tagsChange': [{ type: Output },],\n'input': [{ type: Input, args: ['input', ] },],\n'inputChange': [{ type: Output },],\n'display': [{ type: Input },],\n'addOnPaste': [{ type: Input },],\n'disabled': [{ type: Input },],\n'enforceTagLimits': [{ type: Input },],\n'freeInput': [{ type: Input },],\n'maxTags': [{ type: Input },],\n'minTags': [{ type: Input },],\n'placeholder': [{ type: Input },],\n'showTypeaheadOnClick': [{ type: Input },],\n'tagDelimiters': [{ type: Input },],\n'tagPattern': [{ type: Input },],\n'tagTemplate': [{ type: Input },],\n'tagClass': [{ type: Input },],\n'validationErrors': [{ type: Input },],\n'createTagHandler': [{ type: Input, args: ['createTag', ] },],\n'tagAdding': [{ type: Output },],\n'tagAdded': [{ type: Output },],\n'tagInvalidated': [{ type: Output },],\n'tagRemoving': [{ type: Output },],\n'tagRemoved': [{ type: Output },],\n'tagClick': [{ type: Output },],\n'typeaheadQuery': [{ type: ContentChildren, args: [TypeaheadComponent, ] },],\n'tagInput': [{ type: ViewChild, args: ['tagInput', ] },],\n'_defaultTagTemplate': [{ type: ViewChild, args: ['defaultTagTemplate', ] },],\n'keyHandler': [{ type: HostListener, args: ['keydown', ['$event'], ] },],\n'focusOutHandler': [{ type: HostListener, args: ['focusout', ['$event'], ] },],\n};\n}\n\nfunction TagInputComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nTagInputComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTagInputComponent.ctorParameters;\n/** @type {?} */\nTagInputComponent.propDecorators;\n/** @type {?} */\nTagInputComponent.prototype._tags;\n/** @type {?} */\nTagInputComponent.prototype.tagsChange;\n/** @type {?} */\nTagInputComponent.prototype._input;\n/** @type {?} */\nTagInputComponent.prototype.inputChange;\n/** @type {?} */\nTagInputComponent.prototype.display;\n/** @type {?} */\nTagInputComponent.prototype.addOnPaste;\n/** @type {?} */\nTagInputComponent.prototype.disabled;\n/** @type {?} */\nTagInputComponent.prototype.enforceTagLimits;\n/** @type {?} */\nTagInputComponent.prototype.freeInput;\n/** @type {?} */\nTagInputComponent.prototype.maxTags;\n/** @type {?} */\nTagInputComponent.prototype.minTags;\n/** @type {?} */\nTagInputComponent.prototype.placeholder;\n/** @type {?} */\nTagInputComponent.prototype.showTypeaheadOnClick;\n/** @type {?} */\nTagInputComponent.prototype.tagDelimiters;\n/** @type {?} */\nTagInputComponent.prototype.tagPattern;\n/** @type {?} */\nTagInputComponent.prototype.tagTemplate;\n/** @type {?} */\nTagInputComponent.prototype.tagClass;\n/** @type {?} */\nTagInputComponent.prototype.validationErrors;\n/** @type {?} */\nTagInputComponent.prototype.createTagHandler;\n/** @type {?} */\nTagInputComponent.prototype.tagAdding;\n/** @type {?} */\nTagInputComponent.prototype.tagAdded;\n/** @type {?} */\nTagInputComponent.prototype.tagInvalidated;\n/** @type {?} */\nTagInputComponent.prototype.tagRemoving;\n/** @type {?} */\nTagInputComponent.prototype.tagRemoved;\n/** @type {?} */\nTagInputComponent.prototype.tagClick;\n/** @type {?} */\nTagInputComponent.prototype.typeaheadQuery;\n/** @type {?} */\nTagInputComponent.prototype.tagInput;\n/** @type {?} */\nTagInputComponent.prototype._defaultTagTemplate;\n/** @type {?} */\nTagInputComponent.prototype.selectedIndex;\n/** @type {?} */\nTagInputComponent.prototype.tagApi;\n/** @type {?} */\nTagInputComponent.prototype.valid;\n/** @type {?} */\nTagInputComponent.prototype.inputValid;\n/** @type {?} */\nTagInputComponent.prototype.typeahead;\n/** @type {?} */\nTagInputComponent.prototype.onChangeHandler;\n/** @type {?} */\nTagInputComponent.prototype.onTouchedHandler;\n/** @type {?} */\nTagInputComponent.prototype._element;\n/** @type {?} */\nTagInputComponent.prototype._document;\n/** @type {?} */\nTagInputComponent.prototype._typeaheadKeyService;\n}\n\n\n/**\n * The API available to tag templates.\n */\nexport interface TagApi {\n    /**\n     * Returns the display value of the given tag, according to the displayProperty property. \n     */\n    getTagDisplay: (tag: any) => string;\n\n    /**\n     * Removes the tag at the given index, if possible.\n     */\n    removeTagAt: (index: number) => void;\n\n    /**\n     * \tReturns true if the tag at the given index can be removed.\n     */\n    canRemoveTagAt: (index: number) => boolean;\n}\n\n/**\n * The function used to return custom class information, for use in `ngClass`.\n */\nexport type TagClassFunction = (tag: any, index: number, selected: boolean) => (string | string[] | Set<string>);\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { FocusIfModule } from '../../directives/focus-if/index';\nimport { TypeaheadModule } from '../typeahead/index';\nimport { TagInputComponent } from './tag-input.component';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nexport class TagInputModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        CommonModule,\n        FormsModule,\n        FocusIfModule,\n        TypeaheadModule\n    ],\n    exports: [TagInputComponent],\n    declarations: [TagInputComponent],\n    providers: [],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction TagInputModule_tsickle_Closure_declarations() {\n/** @type {?} */\nTagInputModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTagInputModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { InfiniteScrollModule } from '../../directives/infinite-scroll/index';\nimport { TagInputModule } from '../tag-input/index';\nimport { TypeaheadModule } from '../typeahead/index';\nimport { SelectComponent } from './select.component';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nexport class SelectModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        CommonModule,\n        FormsModule,\n        InfiniteScrollModule,\n        TagInputModule,\n        TypeaheadModule\n    ],\n    exports: [SelectComponent],\n    declarations: [SelectComponent]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction SelectModule_tsickle_Closure_declarations() {\n/** @type {?} */\nSelectModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSelectModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { SearchBuilderComponent } from './search-builder.component';\nimport { SearchBuilderGroupComponent } from './search-builder-group/search-builder-group.component';\nimport { SearchTextComponent } from './search-components/text/text.component';\nimport { SearchDateComponent } from './search-components/date/date.component';\nimport { SearchBuilderOutletDirective } from './search-builder-outlet/search-builder-outlet.directive';\nimport { BaseSearchComponent } from './search-components/base-search.component';\nimport { DateTimePickerModule } from '../date-time-picker/date-time-picker.module';\nimport { PopoverModule } from 'ngx-bootstrap/popover';\nimport { SearchDateRangeComponent } from './search-components/date-range/date-range.component';\nimport { SearchSelectComponent } from './search-components/select/select.component';\nimport { SelectModule } from '../select/index';\nexport class SearchBuilderModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  imports: [\n    CommonModule,\n    FormsModule,\n    DateTimePickerModule,\n    PopoverModule.forRoot(),\n    SelectModule\n  ],\n  exports: [\n    SearchBuilderComponent,\n    SearchBuilderGroupComponent,\n    BaseSearchComponent\n  ],\n  declarations: [\n    SearchBuilderComponent,\n    SearchBuilderGroupComponent,\n    SearchTextComponent,\n    SearchDateComponent,\n    SearchDateRangeComponent,\n    SearchBuilderOutletDirective,\n    SearchSelectComponent,\n    BaseSearchComponent\n  ],\n  entryComponents: [\n    SearchTextComponent,\n    SearchDateComponent,\n    SearchDateRangeComponent,\n    SearchSelectComponent\n  ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction SearchBuilderModule_tsickle_Closure_declarations() {\n/** @type {?} */\nSearchBuilderModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSearchBuilderModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, HostListener } from '@angular/core';\nimport { SidePanelService } from './side-panel.service';\nexport class SidePanelCloseDirective {\n/**\n * @param {?} _service\n */\nconstructor(private _service: SidePanelService) { }\n/**\n * @return {?}\n */\nclickHandler() {\n        this._service.close();\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: '[uxSidePanelClose]'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: SidePanelService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'clickHandler': [{ type: HostListener, args: ['click', ] },],\n};\n}\n\nfunction SidePanelCloseDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nSidePanelCloseDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSidePanelCloseDirective.ctorParameters;\n/** @type {?} */\nSidePanelCloseDirective.propDecorators;\n/** @type {?} */\nSidePanelCloseDirective.prototype._service;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { SidePanelComponent } from './side-panel.component';\nimport { SidePanelCloseDirective } from './side-panel-close.directive';\n\nconst /** @type {?} */ EXPORTS = [\n    SidePanelComponent,\n    SidePanelCloseDirective\n];\nexport class SidePanelModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        CommonModule\n    ],\n    exports: EXPORTS,\n    declarations: EXPORTS\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction SidePanelModule_tsickle_Closure_declarations() {\n/** @type {?} */\nSidePanelModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSidePanelModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { AfterViewInit, ChangeDetectionStrategy, ChangeDetectorRef, Component, DoCheck, ElementRef, EventEmitter, Input, OnInit, Output, ViewChild } from '@angular/core';\nimport { ColorService } from '../../services/color/index';\nexport class SliderComponent implements OnInit, AfterViewInit, DoCheck {\n\n     value: SliderValue | number = 0;\n     options: SliderOptions;\n     valueChange: EventEmitter<SliderValue | number> = new EventEmitter<SliderValue | number>();\n\n     lowerTooltip: ElementRef;\n     upperTooltip: ElementRef;\n     track: ElementRef;\nprivate _value: SliderValue | number;\n\n    // expose enums to Angular view\n    sliderType = SliderType;\n    sliderStyle = SliderStyle;\n    sliderSize = SliderSize;\n    sliderSnap = SliderSnap;\n    sliderThumb = SliderThumb;\n    sliderTickType = SliderTickType;\n    sliderThumbEvent = SliderThumbEvent;\n    sliderCalloutTrigger = SliderCalloutTrigger;\n\n    tracks = {\n        lower: {\n            size: 0,\n            color: ''\n        },\n        middle: {\n            size: 0,\n            color: ''\n        },\n        upper: {\n            size: 0,\n            color: ''\n        }\n    };\n\n    tooltips = {\n        lower: {\n            visible: false,\n            position: 0,\n            label: ''\n        },\n        upper: {\n            visible: false,\n            position: 0,\n            label: ''\n        }\n    };\n\n    thumbs = {\n        lower: {\n            hover: false,\n            drag: false,\n            position: 0,\n            order: 100,\n            value: /** @type {?} */(( null as number))\n        },\n        upper: {\n            hover: false,\n            drag: false,\n            position: 0,\n            order: 101,\n            value: /** @type {?} */(( null as number))\n        }\n    };\n\n    // store all the ticks to display\n    ticks: SliderTick[] = [];\n    defaultOptions: SliderOptions;\n/**\n * @param {?} colorService\n * @param {?} _changeDetectorRef\n */\nconstructor(colorService: ColorService,\nprivate _changeDetectorRef: ChangeDetectorRef) {\n\n        // setup default options\n        this.defaultOptions = {\n            type: SliderType.Value,\n            handles: {\n                style: SliderStyle.Button,\n                callout: {\n                    trigger: SliderCalloutTrigger.None,\n                    background: colorService.getColor('grey2').toHex(),\n                    color: '#fff',\n                    formatter: (value: number): string | number => value\n                },\n                keyboard: {\n                    major: 5,\n                    minor: 1\n                },\n                aria: {\n                    thumb: 'Slider value',\n                    lowerThumb: 'Slider lower value',\n                    upperThumb: 'Slider upper value'\n                }\n            },\n            track: {\n                height: SliderSize.Wide,\n                min: 0,\n                max: 100,\n                ticks: {\n                    snap: SliderSnap.None,\n                    major: {\n                        show: true,\n                        steps: 10,\n                        labels: true,\n                        formatter: (value: number): string | number => value\n                    },\n                    minor: {\n                        show: true,\n                        steps: 5,\n                        labels: false,\n                        formatter: (value: number): string | number => value\n                    }\n                },\n                colors: {\n                    lower: colorService.getColor('grey6').toHex(),\n                    range: colorService.getColor('accent').setAlpha(0.75).toRgba(),\n                    higher: colorService.getColor('grey6').toHex()\n                }\n            }\n        };\n    }\n/**\n * @return {?}\n */\nngOnInit(): void {\n\n        this.updateOptions();\n        this.updateValues();\n\n        this.setThumbState(SliderThumb.Lower, false, false);\n        this.setThumbState(SliderThumb.Upper, false, false);\n\n        // emit the initial value\n        this.valueChange.next(this.clone(this.value));\n    }\n/**\n * @return {?}\n */\nngDoCheck(): void {\n\n        if (this.detectValueChange(this.value, this._value)) {\n            this.updateValues();\n            this._value = this.clone(this.value);\n        }\n    }\n/**\n * @return {?}\n */\nngAfterViewInit(): void {\n        // persistent tooltips will need positioned correctly at this stage\n        setTimeout(() => {\n            this.updateTooltipPosition(SliderThumb.Lower);\n            this.updateTooltipPosition(SliderThumb.Upper);\n\n            // mark as dirty\n            this._changeDetectorRef.markForCheck();\n        });\n    }\n/**\n * @param {?} thumb\n * @param {?} snapTarget\n * @param {?} forwards\n * @return {?}\n */\nsnapToNearestTick(thumb: SliderThumb, snapTarget: SliderSnap, forwards: boolean): void {\n\n        // get the value for the thumb\n        const { value } = this.getThumbState(thumb);\n\n        // get the closest ticks - remove any tick if we are currently on it\n        const /** @type {?} */ closest = this.getTickDistances(value, thumb, snapTarget)\n            .filter(tick => tick.value !== value)\n            .find(tick => forwards ? tick.value > value : tick.value < value);\n\n        // If we have no ticks then move by a predefined amount\n        if (closest) {\n            return this.setThumbValue(thumb, this.validateValue(thumb, closest.value));\n        }\n\n        const /** @type {?} */ step = snapTarget === SliderSnap.Major ? this.options.handles.keyboard.major : this.options.handles.keyboard.minor;\n\n        this.setThumbValue(thumb, this.validateValue(thumb, value + (forwards ? step : -step)));\n\n    }\n/**\n * @param {?} thumb\n * @param {?} forwards\n * @return {?}\n */\nsnapToEnd(thumb: SliderThumb, forwards: boolean): void {\n        this.setThumbValue(thumb, this.validateValue(thumb, forwards ? this.options.track.max : this.options.track.min));\n    }\n/**\n * @param {?} thumb\n * @return {?}\n */\ngetThumbValue(thumb: SliderThumb): number {\n        return this.getThumbState(thumb).value;\n    }\n/**\n * @param {?} thumb\n * @return {?}\n */\ngetFormattedValue(thumb: SliderThumb): string | number {\n        return this.options.handles.callout.formatter(this.getThumbState(thumb).value);\n    }\n/**\n * @param {?} thumb\n * @return {?}\n */\nprivate getThumbState(thumb: SliderThumb) {\n        return thumb === SliderThumb.Lower ? this.thumbs.lower : this.thumbs.upper;\n    }\n/**\n * @param {?} thumb\n * @param {?} hover\n * @param {?} drag\n * @return {?}\n */\nprivate setThumbState(thumb: SliderThumb, hover: boolean, drag: boolean) {\n\n        if (thumb === SliderThumb.Lower) {\n            this.thumbs.lower.hover = hover;\n            this.thumbs.lower.drag = drag;\n        } else {\n            this.thumbs.upper.hover = hover;\n            this.thumbs.upper.drag = drag;\n        }\n\n        // update the visibility of the tooltips\n        this.updateTooltips(thumb);\n    }\n/**\n * @param {?} thumb\n * @param {?} event\n * @return {?}\n */\nthumbEvent(thumb: SliderThumb, event: SliderThumbEvent): void {\n\n        // get the current thumb state\n        const /** @type {?} */ state = this.getThumbState(thumb);\n\n        // update based upon event\n        switch (event) {\n\n            case SliderThumbEvent.DragStart:\n                state.drag = true;\n                break;\n\n            case SliderThumbEvent.DragEnd:\n                state.drag = false;\n                break;\n\n            case SliderThumbEvent.MouseOver:\n                state.hover = true;\n                break;\n\n            case SliderThumbEvent.MouseLeave:\n                state.hover = false;\n                break;\n\n            case SliderThumbEvent.None:\n                state.drag = false;\n                state.hover = false;\n                break;\n        }\n\n        // update the thumb state\n        this.setThumbState(thumb, state.hover, state.drag);\n    }\n/**\n * @param {?} thumb\n * @return {?}\n */\ngetAriaValueText(thumb: SliderThumb): string | number {\n        // get the current thumb value\n        const /** @type {?} */ value = this.getThumbValue(thumb);\n\n        // get all the ticks\n        const /** @type {?} */ tick = this.ticks.find(_tick => _tick.value === value);\n\n        if (tick && tick.label) {\n            return tick.label;\n        }\n\n        // otherwise simply display the formatted value\n        return this.getFormattedValue(thumb);\n    }\n/**\n * @param {?} thumb\n * @return {?}\n */\nprivate updateTooltips(thumb: SliderThumb): void {\n\n        let /** @type {?} */ visible = false;\n        const /** @type {?} */ state = this.getThumbState(thumb);\n\n        switch (this.options.handles.callout.trigger) {\n\n            case SliderCalloutTrigger.Persistent:\n                visible = true;\n                break;\n\n            case SliderCalloutTrigger.Drag:\n                visible = state.drag;\n                break;\n\n            case SliderCalloutTrigger.Hover:\n                visible = state.hover || state.drag;\n                break;\n\n            case SliderCalloutTrigger.Dynamic:\n                visible = true;\n                break;\n        }\n\n        // update the state for the corresponding thumb\n        this.getTooltip(thumb).visible = visible;\n\n        // update the tooltip text\n        this.updateTooltipText(thumb);\n\n        // update the tooltip positions\n        this.updateTooltipPosition(thumb);\n    }\n/**\n * @param {?} thumb\n * @return {?}\n */\nprivate updateTooltipText(thumb: SliderThumb) {\n\n        // get the thumb value\n        let /** @type {?} */ state = this.getThumbState(thumb);\n        let /** @type {?} */ tooltip = this.getTooltip(thumb);\n\n        // store the formatted label\n        tooltip.label = this.getFormattedValue(thumb).toString();\n    }\n/**\n * @param {?} thumb\n * @return {?}\n */\nprivate getTooltipElement(thumb: SliderThumb): ElementRef {\n        return thumb === SliderThumb.Lower ? this.lowerTooltip : this.upperTooltip;\n    }\n/**\n * @param {?} thumb\n * @return {?}\n */\nprivate getTooltip(thumb: SliderThumb) {\n        return thumb === SliderThumb.Lower ? this.tooltips.lower : this.tooltips.upper;\n    }\n/**\n * @param {?} thumb\n * @return {?}\n */\nprivate updateTooltipPosition(thumb: SliderThumb): void {\n\n        const /** @type {?} */ tooltip = this.getTooltip(thumb);\n\n        // if tooltip is not visible then stop here\n        if (tooltip.visible === false) {\n            return;\n        }\n\n        let /** @type {?} */ tooltipElement = this.getTooltipElement(thumb);\n\n        // get the element widths\n        let /** @type {?} */ thumbWidth: number;\n\n        if (this.options.handles.style === SliderStyle.Button) {\n            thumbWidth = this.options.track.height === SliderSize.Narrow ? 16 : 24;\n        } else {\n            thumbWidth = 2;\n        }\n\n        let /** @type {?} */ tooltipWidth = tooltipElement.nativeElement.offsetWidth;\n\n        // calculate the tooltips new position\n        let /** @type {?} */ tooltipPosition = Math.ceil((tooltipWidth - thumbWidth) / 2);\n\n        // update tooltip position\n        tooltip.position = -tooltipPosition;\n\n        if (this.options.type === SliderType.Range && this.options.handles.callout.trigger === SliderCalloutTrigger.Dynamic) {\n            this.preventTooltipOverlap(tooltip);\n        }\n    }\n/**\n * @param {?} tooltip\n * @return {?}\n */\nprivate preventTooltipOverlap(tooltip: any): void {\n        const /** @type {?} */ trackWidth = this.track.nativeElement.offsetWidth;\n\n        const /** @type {?} */ lower = (trackWidth / 100) * this.thumbs.lower.position;\n        const /** @type {?} */ upper = (trackWidth / 100) * this.thumbs.upper.position;\n\n        const /** @type {?} */ lowerWidth = this.lowerTooltip.nativeElement.offsetWidth / 2;\n        const /** @type {?} */ upperWidth = this.upperTooltip.nativeElement.offsetWidth / 2;\n\n        const /** @type {?} */ diff = (lower + lowerWidth) - (upper - upperWidth);\n\n        // if the tooltips are closer than 16px then adjust so the dont move any close\n        if (diff > 0) {\n            if (tooltip === this.tooltips.lower && this.thumbs.lower.drag === false) {\n                tooltip.position -= (diff / 2);\n            } else if (tooltip === this.tooltips.upper && this.thumbs.upper.drag === false) {\n                tooltip.position += (diff / 2);\n            }\n        }\n    }\n/**\n * @param {?} value\n * @param {?} min\n * @param {?} max\n * @return {?}\n */\nprivate clamp(value: number, min: number, max: number): number {\n        return Math.min(Math.max(value, min), max);\n    }\n/**\n * @param {?} event\n * @param {?} thumb\n * @return {?}\n */\nupdateThumbPosition(event: MouseEvent | TouchEvent, thumb: SliderThumb): void {\n\n        // get event position - either mouse or touch\n        let /** @type {?} */ eventPosition = event instanceof MouseEvent ? event.clientX : event.touches && event.touches.length > 0 ? event.touches[0].clientX : null;\n\n        // if event position is null do nothing\n        if (eventPosition === null) {\n            return;\n        }\n\n        // get mouse position\n        let /** @type {?} */ mouseX = window.pageXOffset + eventPosition;\n\n        // get track size and position\n        let /** @type {?} */ trackBounds = this.track.nativeElement.getBoundingClientRect();\n\n        // restrict the value within the range size\n        let /** @type {?} */ position = this.clamp(mouseX - trackBounds.left, 0, trackBounds.width);\n\n        // get fraction representation of location within the track\n        let /** @type {?} */ fraction = (position / trackBounds.width);\n\n        // convert to value within the range\n        let /** @type {?} */ value = ((this.options.track.max - this.options.track.min) * fraction) + this.options.track.min;\n\n        // ensure value is valid\n        value = this.validateValue(thumb, value);\n\n        // snap to a tick if required\n        value = this.snapToTick(value, thumb);\n\n        // update the value accordingly\n        this.setThumbValue(thumb, value);\n\n        this.updateOrder(thumb);\n        this.updateValues();\n\n        // update tooltip text & position\n        this.updateTooltipText(thumb);\n\n        // update the position of all visible tooltips\n        this.updateTooltipPosition(SliderThumb.Lower);\n        this.updateTooltipPosition(SliderThumb.Upper);\n\n        // mark as dirty for change detection\n        this._changeDetectorRef.markForCheck();\n    }\n/**\n * @param {?} thumb\n * @return {?}\n */\nprivate updateOrder(thumb: SliderThumb): void {\n\n        let /** @type {?} */ lower = thumb === SliderThumb.Lower ? 101 : 100;\n        let /** @type {?} */ upper = thumb === SliderThumb.Lower ? 100 : 101;\n\n        // The most recently used thumb should be above\n        this.thumbs.lower.order = lower;\n        this.thumbs.upper.order = upper;\n    }\n/**\n * @param {?} value\n * @param {?} thumb\n * @param {?} snapTarget\n * @return {?}\n */\nprivate getTickDistances(value: number, thumb: SliderThumb, snapTarget: SliderSnap): SliderTick[] {\n\n        // if snap target is none then return original value\n        if (snapTarget === SliderSnap.None) {\n            return [];\n        }\n\n        // get filtered ticks\n        let /** @type {?} */ ticks: SliderTick[];\n\n        switch (snapTarget) {\n\n            case SliderSnap.Minor:\n                ticks = this.ticks.filter(tick => tick.type === SliderTickType.Minor);\n                break;\n\n            case SliderSnap.Major:\n                ticks = this.ticks.filter(tick => tick.type === SliderTickType.Major);\n                break;\n\n            default:\n                ticks = this.ticks.slice(0);\n        }\n\n        // get the track limit\n        let /** @type {?} */ lowerLimit = this.options.track.min;\n        let /** @type {?} */ upperLimit = this.options.track.max;\n\n        if (this.options.type === SliderType.Range && thumb === SliderThumb.Lower) {\n            upperLimit = this.thumbs.upper.value;\n        }\n\n        if (this.options.type === SliderType.Range && thumb === SliderThumb.Upper) {\n            lowerLimit = this.thumbs.lower.value;\n        }\n\n        // Find the closest tick to the current position\n        const /** @type {?} */ range = ticks.filter(tick => tick.value >= lowerLimit && tick.value <= upperLimit);\n\n        // If there are no close ticks in the valid range then dont snap\n        if (range.length === 0) {\n            return [];\n        }\n\n        return range.sort((tickOne, tickTwo) => {\n\n            const /** @type {?} */ tickOneDelta = Math.max(tickOne.value, value) - Math.min(tickOne.value, value);\n            const /** @type {?} */ tickTwoDelta = Math.max(tickTwo.value, value) - Math.min(tickTwo.value, value);\n            \n            return tickOneDelta - tickTwoDelta;\n        });\n    }\n/**\n * @param {?} value\n * @param {?} thumb\n * @return {?}\n */\nprivate snapToTick(value: number, thumb: SliderThumb): number {\n\n        const /** @type {?} */ tickDistances = this.getTickDistances(value, thumb, this.options.track.ticks.snap);\n\n        // if there are no ticks return the current value\n        if (tickDistances.length === 0) {\n            return value;\n        }\n\n        // get the closest tick\n        return tickDistances[0].value;\n    }\n/**\n * @param {?} thumb\n * @param {?} value\n * @return {?}\n */\nprivate validateValue(thumb: SliderThumb, value: number): number {\n\n        // if slider is not a range value is always valid providing it is within the chart min and max values\n        if (this.options.type === SliderType.Value) {\n            return Math.max(Math.min(value, this.options.track.max), this.options.track.min);\n        }\n\n        // check if value is with chart ranges\n        if (value > this.options.track.max) {\n            return thumb === SliderThumb.Lower ? Math.min(this.options.track.max, this.thumbs.upper.value) : this.options.track.max;\n        }\n\n        if (value < this.options.track.min) {\n            return thumb === SliderThumb.Upper ? Math.max(this.options.track.min, this.thumbs.lower.value) : this.options.track.min;\n        }\n\n        // otherwise we need to check to make sure lower thumb cannot go above higher and vice versa\n        if (thumb === SliderThumb.Lower) {\n\n            if (this.thumbs.upper.value === null) {\n                return value;\n            }\n\n            return value <= this.thumbs.upper.value ? value : this.thumbs.upper.value;\n        }\n\n        if (thumb === SliderThumb.Upper) {\n\n            if (this.thumbs.lower.value === null) {\n                return value;\n            }\n\n            return value >= this.thumbs.lower.value ? value : this.thumbs.lower.value;\n        }\n    }\n/**\n * @return {?}\n */\nprivate updateOptions(): void {\n\n        // add in the default options that user hasn't specified\n        this.options = this.deepMerge(this.options || {}, this.defaultOptions);\n\n        this.updateTrackColors();\n        this.updateTicks();\n        this.updateValues();\n    }\n/**\n * @return {?}\n */\nprivate updateValues(): void {\n\n        if (this.value === undefined || this.value === null) {\n            this.value = 0;\n        }\n\n        let /** @type {?} */ lowerValue = typeof this.value === 'number' ? this.value : this.value.low;\n        let /** @type {?} */ upperValue = typeof this.value === 'number' ? this.value : this.value.high;\n\n        // validate values\n        lowerValue = this.validateValue(SliderThumb.Lower, Number(lowerValue.toFixed(4)));\n        upperValue = this.validateValue(SliderThumb.Upper, Number(upperValue.toFixed(4)));\n\n        // calculate the positions as percentages\n        let /** @type {?} */ lowerPosition = (((lowerValue - this.options.track.min) / (this.options.track.max - this.options.track.min)) * 100);\n        let /** @type {?} */ upperPosition = (((upperValue - this.options.track.min) / (this.options.track.max - this.options.track.min)) * 100);\n\n        // update thumb positions\n        this.thumbs.lower.position = lowerPosition;\n        this.thumbs.upper.position = upperPosition;\n\n        // calculate the track sizes\n        this.tracks.lower.size = lowerPosition;\n        this.tracks.middle.size = upperPosition - lowerPosition;\n        this.tracks.upper.size = this.options.type === SliderType.Value ? 100 - lowerPosition : 100 - upperPosition;\n\n        // update the value input\n        this.setValue(lowerValue, upperValue);\n    }\n/**\n * @param {?} low\n * @param {?=} high\n * @return {?}\n */\nprivate setValue(low: number, high?: number): void {\n\n        this.thumbs.lower.value = low;\n        this.thumbs.upper.value = high;\n\n        let /** @type {?} */ previousValue = this.clone(this._value);\n\n        this.value = this.options.type === SliderType.Value ? low : { low: low, high: high };\n\n        // call the event emitter if changes occured\n        if (this.detectValueChange(this.value, previousValue)) {\n            this.valueChange.emit(this.clone(this.value));\n\n            this.updateTooltipText(SliderThumb.Lower);\n            this.updateTooltipText(SliderThumb.Upper);\n        } else {\n            this.valueChange.emit(this.clone(this.value));\n        }\n    }\n/**\n * @param {?} thumb\n * @param {?} value\n * @return {?}\n */\nprivate setThumbValue(thumb: SliderThumb, value: number): void {\n\n        // update the thumb value\n        this.getThumbState(thumb).value = value;\n\n        // forward these changes to the value\n        this.setValue(this.thumbs.lower.value, this.thumbs.upper.value);\n    }\n/**\n * @return {?}\n */\nprivate updateTicks(): void {\n\n        // get tick options\n        const /** @type {?} */ majorOptions = this.options.track.ticks.major;\n        const /** @type {?} */ minorOptions = this.options.track.ticks.minor;\n\n        // check if we should show ticks\n        if (majorOptions.show === false && minorOptions.show === false) {\n            this.ticks = [];\n        }\n\n        // create ticks for both major and minor - only get the ones to be shown\n        const /** @type {?} */ majorTicks = this.getTicks(majorOptions, SliderTickType.Major).filter(tick => tick.showTicks);\n        const /** @type {?} */ minorTicks = this.getTicks(minorOptions, SliderTickType.Minor).filter(tick => tick.showTicks);\n\n        // remove any minor ticks that are on a major interval\n        this.ticks = this.unionTicks(majorTicks, minorTicks);\n    }\n/**\n * @return {?}\n */\nprivate updateTrackColors(): void {\n\n        // get colors for each part of the track\n        const { lower, range, higher } = this.options.track.colors;\n\n        // update the controller value\n        this.tracks.lower.color = typeof lower === 'string' ? lower : `linear-gradient(to right, ${lower.join(', ')})`;\n        this.tracks.middle.color = typeof range === 'string' ? range : `linear-gradient(to right, ${range.join(', ')})`;\n        this.tracks.upper.color = typeof higher === 'string' ? higher : `linear-gradient(to right, ${higher.join(', ')})`;\n    }\n/**\n * @param {?} steps\n * @return {?}\n */\nprivate getSteps(steps: number | number[]): number[] {\n\n        // if they are already an array just return it\n        if (steps instanceof Array) {\n            return steps;\n        }\n\n        let /** @type {?} */ output: number[] = [];\n\n        // otherwise calculate the steps\n        for (let /** @type {?} */ idx = this.options.track.min; idx <= this.options.track.max; idx += steps) {\n            output.push(idx);\n        }\n\n        return output;\n    }\n/**\n * @param {?} options\n * @param {?} type\n * @return {?}\n */\nprivate getTicks(options: SliderTickOptions, type: SliderTickType): SliderTick[] {\n\n        // create an array to store the ticks and step points\n        let /** @type {?} */ steps = this.getSteps(options.steps);\n\n        // get some chart options\n        let /** @type {?} */ min = this.options.track.min;\n        let /** @type {?} */ max = this.options.track.max;\n\n        // convert each step to a slider tick and remove invalid ticks\n        return steps.map(step => {\n            return {\n                showTicks: options.show,\n                showLabels: options.labels,\n                type: type,\n                position: ((step - min) / (max - min)) * 100,\n                value: step,\n                label: options.formatter(step)\n            };\n        }).filter(tick => tick.position >= 0 && tick.position <= 100);\n    }\n/**\n * @param {?} majorTicks\n * @param {?} minorTicks\n * @return {?}\n */\nprivate unionTicks(majorTicks: SliderTick[], minorTicks: SliderTick[]): SliderTick[] {\n\n        // get all ticks combined removing any minor ticks with the same value as major ticks\n        return majorTicks.concat(minorTicks)\n            .filter((tick, index, array) => tick.type === SliderTickType.Major || !array.find(tk => tk.type === SliderTickType.Major && tk.position === tick.position))\n            .sort((t1, t2) => t1.value - t2.value);\n    }\n/**\n * @template T\n * @param {?} destination\n * @param {?} source\n * @return {?}\n */\nprivate deepMerge<T>(destination: T, source: T): T {\n\n        // loop though all of the properties in the source object\n        for (let /** @type {?} */ prop in source) {\n\n            // check if the destination object has the property\n            if (!destination.hasOwnProperty(prop)) {\n                // copy the property across\n                destination[prop] = source[prop];\n                continue;\n            }\n\n            // if the property exists and is not an object then skip\n            if (typeof destination[prop] !== 'object') {\n                continue;\n            }\n\n            // check if property is an array\n            if (destination[prop] instanceof Array) {\n                continue;\n            }\n\n            // if it is an object then perform a recursive check\n            destination[prop] = this.deepMerge(destination[prop], source[prop]);\n        }\n\n        return destination;\n    }\n/**\n * @param {?} value1\n * @param {?} value2\n * @return {?}\n */\nprivate detectValueChange(value1: number | SliderValue, value2: number | SliderValue): boolean {\n\n        // compare two slider values\n        if (this.isSliderValue(value1) && this.isSliderValue(value2)) {\n\n            // references to the objects in the correct types\n            const /** @type {?} */ obj1 = /** @type {?} */(( value1 as SliderValue));\n            const /** @type {?} */ obj2 = /** @type {?} */(( value2 as SliderValue));\n\n            return obj1.low !== obj2.low || obj1.high !== obj2.high;\n        }\n\n        // if not a slider value - should be number of nullable type - compare normally\n        return value1 !== value2;\n    }\n/**\n * Determines whether or not an object conforms to the\n * SliderValue interface.\n * @param {?} value - The object to check - this must be type any\n * @return {?}\n */\nprivate isSliderValue(value: any): boolean {\n\n        // check if is an object\n        if (typeof value !== 'object') {\n            return false;\n        }\n\n        // next check if it contains the necessary properties\n        return 'low' in value && 'high' in value;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nprivate clone(value: number | SliderValue): number | SliderValue {\n\n        // if it is not an object simply return the value\n        if (typeof value !== 'object') {\n            return value;\n        }\n\n        // create a new object from the existing one\n        const /** @type {?} */ instance = { ...value };\n\n        // delete remove the value from the old object\n        value = undefined;\n\n        // return the new instance of the object\n        return instance;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-slider',\n    template: `\n      <div class=\"track\" #track [class.narrow]=\"options.track.height === sliderSize.Narrow\" [class.wide]=\"options.track.height === sliderSize.Wide\" [class.range]=\"options.type === sliderType.Range\">\n\n          <!-- Section Beneath Lower Thumb -->\n          <div class=\"track-section track-lower\" [style.flex-grow]=\"tracks.lower.size\" [style.background]=\"tracks.lower.color\"></div>\n\n          <!-- Lower Thumb Button / Line -->\n          <div class=\"thumb lower\"\n              uxDrag\n              role=\"slider\"\n              tabindex=\"0\"\n              #lowerthumb\n              [attr.aria-label]=\"options.type === sliderType.Range ? options.handles.aria.lowerThumb : options.handles.aria.thumb\"\n              [attr.aria-valuemin]=\"options?.track?.min\"\n              [attr.aria-valuemax]=\"options.type === sliderType.Range ? getThumbValue(sliderThumb.Upper) : options?.track?.max\"\n              [attr.aria-valuenow]=\"getThumbValue(sliderThumb.Lower)\"\n              [attr.aria-valuetext]=\"getAriaValueText(sliderThumb.Lower)\"\n              [style.left.%]=\"thumbs.lower.position\"\n              [class.active]=\"thumbs.lower.drag\"\n              [style.z-index]=\"thumbs.lower.order\"\n              [class.button]=\"options.handles.style === sliderStyle.Button\"\n              [class.line]=\"options.handles.style === sliderStyle.Line\"\n              [class.narrow]=\"options.track.height === sliderSize.Narrow\"\n              [class.wide]=\"options.track.height === sliderSize.Wide\"\n              (dragstart)=\"thumbEvent(sliderThumb.Lower, sliderThumbEvent.DragStart); lowerthumb.focus()\"\n              (drag)=\"updateThumbPosition($event, sliderThumb.Lower)\"\n              (dragend)=\"thumbEvent(sliderThumb.Lower, sliderThumbEvent.DragEnd)\"\n              (mouseenter)=\"thumbEvent(sliderThumb.Lower, sliderThumbEvent.MouseOver)\"\n              (mouseleave)=\"thumbEvent(sliderThumb.Lower, sliderThumbEvent.MouseLeave)\"\n              (focus)=\"thumbEvent(sliderThumb.Lower, sliderThumbEvent.MouseOver)\"\n              (blur)=\"thumbEvent(sliderThumb.Lower, sliderThumbEvent.MouseLeave)\"\n              (keydown.ArrowLeft)=\"snapToNearestTick(sliderThumb.Lower, sliderSnap.All, false); $event.preventDefault()\"\n              (keydown.ArrowRight)=\"snapToNearestTick(sliderThumb.Lower, sliderSnap.All, true); $event.preventDefault()\"\n              (keydown.ArrowUp)=\"snapToNearestTick(sliderThumb.Lower, sliderSnap.All, false); $event.preventDefault()\"\n              (keydown.ArrowDown)=\"snapToNearestTick(sliderThumb.Lower, sliderSnap.All, true); $event.preventDefault()\"\n              (keydown.PageDown)=\"snapToNearestTick(sliderThumb.Lower, sliderSnap.Major, false); $event.preventDefault()\"\n              (keydown.PageUp)=\"snapToNearestTick(sliderThumb.Lower, sliderSnap.Major, true); $event.preventDefault()\"\n              (keydown.Home)=\"snapToEnd(sliderThumb.Lower, false); $event.preventDefault()\"\n              (keydown.End)=\"snapToEnd(sliderThumb.Lower, true); $event.preventDefault()\">\n\n              <!-- Lower Thumb Callout -->\n              <div class=\"tooltip top tooltip-lower\" #lowerTooltip\n                  [class.tooltip-dynamic]=\"options.handles.callout.trigger === sliderCalloutTrigger.Dynamic && thumbs.lower.drag === false\"\n                  [style.opacity]=\"tooltips.lower.visible ? 1 : 0\"\n                  [style.left.px]=\"tooltips.lower.position\">\n\n                  <div class=\"tooltip-arrow\" [style.border-top-color]=\"options.handles.callout.background\"></div>\n\n                  <div class=\"tooltip-inner\"\n                      [style.background-color]=\"options.handles.callout.background\"\n                      [style.color]=\"options.handles.callout.color\">\n                      {{ tooltips.lower.label }}\n                  </div>\n              </div>\n\n          </div>\n\n          <!-- Section of Track Between Lower and Upper Thumbs -->\n          <div class=\"track-section track-range\" *ngIf=\"options.type === sliderType.Range\" [style.flex-grow]=\"tracks.middle.size\" [style.background]=\"tracks.middle.color\">\n          </div>\n\n          <!-- Upper Thumb Button / Line -->\n          <div class=\"thumb upper\"\n              uxDrag\n              role=\"slider\"\n              tabindex=\"0\"\n              #upperthumb\n              [attr.aria-label]=\"options.handles.aria.upperThumb\"\n              [attr.aria-valuemin]=\"getThumbValue(sliderThumb.Lower) || options?.track?.min\"\n              [attr.aria-valuemax]=\"options?.track?.max\"\n              [attr.aria-valuenow]=\"getThumbValue(sliderThumb.Upper)\"\n              [attr.aria-valuetext]=\"getAriaValueText(sliderThumb.Upper)\"\n              [hidden]=\"options.type !== sliderType.Range\"\n              [class.active]=\"thumbs.upper.drag\"\n              [style.left.%]=\"thumbs.upper.position\"\n              [style.z-index]=\"thumbs.upper.order\"\n              [class.button]=\"options.handles.style === sliderStyle.Button\"\n              [class.line]=\"options.handles.style === sliderStyle.Line\"\n              [class.narrow]=\"options.track.height === sliderSize.Narrow\"\n              [class.wide]=\"options.track.height === sliderSize.Wide\"\n              (dragstart)=\"thumbEvent(sliderThumb.Upper, sliderThumbEvent.DragStart); upperthumb.focus()\"\n              (drag)=\"updateThumbPosition($event, sliderThumb.Upper)\"\n              (dragend)=\"thumbEvent(sliderThumb.Upper, sliderThumbEvent.DragEnd)\"\n              (mouseenter)=\"thumbEvent(sliderThumb.Upper, sliderThumbEvent.MouseOver)\"\n              (mouseleave)=\"thumbEvent(sliderThumb.Upper, sliderThumbEvent.MouseLeave)\"\n              (focus)=\"thumbEvent(sliderThumb.Upper, sliderThumbEvent.MouseOver)\"\n              (blur)=\"thumbEvent(sliderThumb.Upper, sliderThumbEvent.MouseLeave)\"\n              (keydown.ArrowLeft)=\"snapToNearestTick(sliderThumb.Upper, sliderSnap.All, false); $event.preventDefault()\"\n              (keydown.ArrowRight)=\"snapToNearestTick(sliderThumb.Upper, sliderSnap.All, true); $event.preventDefault()\"\n              (keydown.ArrowUp)=\"snapToNearestTick(sliderThumb.Upper, sliderSnap.All, false); $event.preventDefault()\"\n              (keydown.ArrowDown)=\"snapToNearestTick(sliderThumb.Upper, sliderSnap.All, true); $event.preventDefault()\"\n              (keydown.PageDown)=\"snapToNearestTick(sliderThumb.Upper, sliderSnap.Major, false); $event.preventDefault()\"\n              (keydown.PageUp)=\"snapToNearestTick(sliderThumb.Upper, sliderSnap.Major, true); $event.preventDefault()\"\n              (keydown.Home)=\"snapToEnd(sliderThumb.Upper, false); $event.preventDefault()\"\n              (keydown.End)=\"snapToEnd(sliderThumb.Upper, true); $event.preventDefault()\">\n\n              <!-- Upper Thumb Callout -->\n              <div class=\"tooltip top tooltip-upper\" #upperTooltip\n                  [class.tooltip-dynamic]=\"options.handles.callout.trigger === sliderCalloutTrigger.Dynamic && thumbs.upper.drag === false\"\n                  [style.opacity]=\"tooltips.upper.visible ? 1 : 0\"\n                  [style.left.px]=\"tooltips.upper.position\">\n\n                  <div class=\"tooltip-arrow\" [style.border-top-color]=\"options.handles.callout.background\"></div>\n\n                  <div class=\"tooltip-inner\"\n                      *ngIf=\"options.type === sliderType.Range\"\n                      [style.background-color]=\"options.handles.callout.background\"\n                      [style.color]=\"options.handles.callout.color\">\n                      {{ tooltips.upper.label }}\n                  </div>\n              </div>\n          </div>\n\n          <!-- Section of Track Abover Upper Thumb -->\n          <div class=\"track-section track-higher\" [style.flex-grow]=\"tracks.upper.size\" [style.background]=\"tracks.upper.color\"></div>\n\n      </div>\n\n      <!-- Chart Ticks and Tick Labels -->\n      <div class=\"tick-container\"\n          role=\"presentation\"\n          *ngIf=\"(options.track.ticks.major.show || options.track.ticks.minor.show) && options.handles.callout.trigger !== sliderCalloutTrigger.Dynamic\"\n          [class.show-labels]=\"options.track.ticks.major.labels || options.track.ticks.minor.labels\">\n\n          <div class=\"tick\"\n              *ngFor=\"let tick of ticks\"\n              [class.major]=\"tick.type === sliderTickType.Major\"\n              [class.minor]=\"tick.type === sliderTickType.Minor\"\n              [style.left.%]=\"tick.position\"\n              [hidden]=\"!tick.showTicks\">\n\n              <div class=\"tick-indicator\"></div>\n              <div class=\"tick-label\" aria-hidden=\"true\" [hidden]=\"!tick.showLabels\">{{ tick.label }}</div>\n          </div>\n      </div>\n    `,\n    changeDetection: ChangeDetectionStrategy.OnPush\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ColorService, },\n{type: ChangeDetectorRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'value': [{ type: Input },],\n'options': [{ type: Input },],\n'valueChange': [{ type: Output },],\n'lowerTooltip': [{ type: ViewChild, args: ['lowerTooltip', ] },],\n'upperTooltip': [{ type: ViewChild, args: ['upperTooltip', ] },],\n'track': [{ type: ViewChild, args: ['track', ] },],\n};\n}\n\nfunction SliderComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nSliderComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSliderComponent.ctorParameters;\n/** @type {?} */\nSliderComponent.propDecorators;\n/** @type {?} */\nSliderComponent.prototype.value;\n/** @type {?} */\nSliderComponent.prototype.options;\n/** @type {?} */\nSliderComponent.prototype.valueChange;\n/** @type {?} */\nSliderComponent.prototype.lowerTooltip;\n/** @type {?} */\nSliderComponent.prototype.upperTooltip;\n/** @type {?} */\nSliderComponent.prototype.track;\n/** @type {?} */\nSliderComponent.prototype._value;\n/** @type {?} */\nSliderComponent.prototype.sliderType;\n/** @type {?} */\nSliderComponent.prototype.sliderStyle;\n/** @type {?} */\nSliderComponent.prototype.sliderSize;\n/** @type {?} */\nSliderComponent.prototype.sliderSnap;\n/** @type {?} */\nSliderComponent.prototype.sliderThumb;\n/** @type {?} */\nSliderComponent.prototype.sliderTickType;\n/** @type {?} */\nSliderComponent.prototype.sliderThumbEvent;\n/** @type {?} */\nSliderComponent.prototype.sliderCalloutTrigger;\n/** @type {?} */\nSliderComponent.prototype.tracks;\n/** @type {?} */\nSliderComponent.prototype.tooltips;\n/** @type {?} */\nSliderComponent.prototype.thumbs;\n/** @type {?} */\nSliderComponent.prototype.ticks;\n/** @type {?} */\nSliderComponent.prototype.defaultOptions;\n/** @type {?} */\nSliderComponent.prototype._changeDetectorRef;\n}\n\nexport type SliderType = number;\nexport let SliderType: any = {};\nSliderType.Value = 0;\nSliderType.Range = 1;\nSliderType[SliderType.Value] = \"Value\";\nSliderType[SliderType.Range] = \"Range\";\n\nexport type SliderStyle = number;\nexport let SliderStyle: any = {};\nSliderStyle.Button = 0;\nSliderStyle.Line = 1;\nSliderStyle[SliderStyle.Button] = \"Button\";\nSliderStyle[SliderStyle.Line] = \"Line\";\n\nexport type SliderSize = number;\nexport let SliderSize: any = {};\nSliderSize.Narrow = 0;\nSliderSize.Wide = 1;\nSliderSize[SliderSize.Narrow] = \"Narrow\";\nSliderSize[SliderSize.Wide] = \"Wide\";\n\nexport type SliderCalloutTrigger = number;\nexport let SliderCalloutTrigger: any = {};\nSliderCalloutTrigger.None = 0;\nSliderCalloutTrigger.Hover = 1;\nSliderCalloutTrigger.Drag = 2;\nSliderCalloutTrigger.Persistent = 3;\nSliderCalloutTrigger.Dynamic = 4;\nSliderCalloutTrigger[SliderCalloutTrigger.None] = \"None\";\nSliderCalloutTrigger[SliderCalloutTrigger.Hover] = \"Hover\";\nSliderCalloutTrigger[SliderCalloutTrigger.Drag] = \"Drag\";\nSliderCalloutTrigger[SliderCalloutTrigger.Persistent] = \"Persistent\";\nSliderCalloutTrigger[SliderCalloutTrigger.Dynamic] = \"Dynamic\";\n\n\nexport interface SliderValue {\n    low: number;\n    high: number;\n}\nexport type SliderSnap = number;\nexport let SliderSnap: any = {};\nSliderSnap.None = 0;\nSliderSnap.Minor = 1;\nSliderSnap.Major = 2;\nSliderSnap.All = 3;\nSliderSnap[SliderSnap.None] = \"None\";\nSliderSnap[SliderSnap.Minor] = \"Minor\";\nSliderSnap[SliderSnap.Major] = \"Major\";\nSliderSnap[SliderSnap.All] = \"All\";\n\nexport type SliderTickType = number;\nexport let SliderTickType: any = {};\nSliderTickType.Minor = 0;\nSliderTickType.Major = 1;\nSliderTickType[SliderTickType.Minor] = \"Minor\";\nSliderTickType[SliderTickType.Major] = \"Major\";\n\n\nexport interface SliderOptions {\n    type?: SliderType;\n    handles?: SliderHandleOptions;\n    track?: SliderTrackOptions;\n}\n\nexport interface SliderHandleOptions {\n    style?: SliderStyle;\n    callout?: SliderCallout;\n    keyboard?: SliderKeyboardOptions;\n    aria?: SliderAriaOptions;\n}\n\nexport interface SliderAriaOptions {\n    thumb: string;\n    lowerThumb: string;\n    upperThumb: string;\n}\n\nexport interface SliderKeyboardOptions {\n    major?: number;\n    minor?: number;\n}\n\nexport interface SliderTrackOptions {\n    height?: SliderSize;\n    min?: number;\n    max?: number;\n    ticks?: SliderTicksOptions;\n    colors?: SliderTrackColors;\n}\n\nexport interface SliderTicksOptions {\n    snap?: SliderSnap;\n    major?: SliderTickOptions;\n    minor?: SliderTickOptions;\n}\n\nexport interface SliderTickOptions {\n    show?: boolean;\n    steps?: number | number[];\n    labels?: boolean;\n    formatter?: (value: number) => string | number;\n}\n\nexport interface SliderTick {\n    showTicks: boolean;\n    showLabels: boolean;\n    type: SliderTickType;\n    position: number;\n    value: number;\n    label: string | number;\n}\n\nexport interface SliderTrackColors {\n    lower?: string | string[];\n    range?: string | string[];\n    higher?: string | string[];\n}\n\nexport interface SliderCallout {\n    trigger?: SliderCalloutTrigger;\n    background?: string;\n    color?: string;\n    formatter?: (value: number) => string | number;\n}\nexport type SliderThumbEvent = number;\nexport let SliderThumbEvent: any = {};\nSliderThumbEvent.None = 0;\nSliderThumbEvent.MouseOver = 1;\nSliderThumbEvent.MouseLeave = 2;\nSliderThumbEvent.DragStart = 3;\nSliderThumbEvent.DragEnd = 4;\nSliderThumbEvent[SliderThumbEvent.None] = \"None\";\nSliderThumbEvent[SliderThumbEvent.MouseOver] = \"MouseOver\";\nSliderThumbEvent[SliderThumbEvent.MouseLeave] = \"MouseLeave\";\nSliderThumbEvent[SliderThumbEvent.DragStart] = \"DragStart\";\nSliderThumbEvent[SliderThumbEvent.DragEnd] = \"DragEnd\";\n\nexport type SliderThumb = number;\nexport let SliderThumb: any = {};\nSliderThumb.Lower = 0;\nSliderThumb.Upper = 1;\nSliderThumb[SliderThumb.Lower] = \"Lower\";\nSliderThumb[SliderThumb.Upper] = \"Upper\";\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ColorServiceModule } from '../../services/color/index';\n\nimport { SliderComponent } from './slider.component';\nimport { DragModule } from '../../directives/drag/index';\nexport class SliderModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        CommonModule,\n        ColorServiceModule,\n        DragModule\n    ],\n    exports: [SliderComponent],\n    declarations: [SliderComponent]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction SliderModule_tsickle_Closure_declarations() {\n/** @type {?} */\nSliderModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSliderModule.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Input, ChangeDetectionStrategy } from '@angular/core';\nimport { ColorService } from '../../services/color/index';\nimport { ColorIdentifier } from '../../index';\nexport class SparkComponent {\n\n    values: number[] = [];\n\n     barHeight: number = 10;\n     inlineLabel: string;\n     topLeftLabel: string;\n     topRightLabel: string;\n     bottomLeftLabel: string;\n     bottomRightLabel: string;\n     tooltip: string;\nprivate _trackColor: string;\nprivate _theme: ColorIdentifier = 'primary';\nprivate _barColor: string | string[] = [];\n/**\n * @param {?} value\n * @return {?}\n */\nset theme(value: string) {\n        this._theme = this._colorService.resolveColorName(value);\n    }\n/**\n * @return {?}\n */\nget theme(): string {\n        return this._theme;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset trackColor(value: string) {\n        this._trackColor = this._colorService.resolve(value);\n    }\n/**\n * @return {?}\n */\nget trackColor(): string {\n        return this._trackColor;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset barColor(value: string | string[]) {\n\n        if (Array.isArray(value)) {\n            this._barColor = value.map(color => this._colorService.resolve(color));\n        } else {\n            this._barColor = [this._colorService.resolve(value)];\n        }\n    }\n/**\n * @return {?}\n */\nget barColor(): string | string[] {\n        return this._barColor;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset value(value: number | number[]) {\n\n        // ensure 'value' is an array at this point\n        const /** @type {?} */ values = Array.isArray(value) ? value : [value];\n\n        // get the total value of all lines\n        const /** @type {?} */ total = Math.max(values.reduce((previous, current) => previous + current, 0), 100);\n\n        // figure out the percentages for each spark line\n        this.values = values.map(val => (val / total) * 100);\n    }\n/**\n * @return {?}\n */\nget value() {\n        return this.values;\n    }\n/**\n * @param {?} _colorService\n */\nconstructor(private _colorService: ColorService) { }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-spark',\n    template: `\n      <!-- Inline Spark Chart -->\n      <div *ngIf=\"inlineLabel\" class=\"ux-spark-inline-label-container\">\n\n          <div class=\"ux-spark-inline-label-left\" [innerHtml]=\"inlineLabel\"></div>\n\n          <div class=\"ux-spark-line\">\n\n              <div class=\"ux-spark-top-container\" *ngIf=\"topLeftLabel || topRightLabel\">\n                  <div class=\"ux-spark-label-top-left\" *ngIf=\"topLeftLabel\" [innerHtml]=\"topLeftLabel\"></div>\n                  <div class=\"ux-spark-label-top-right\" *ngIf=\"topRightLabel\" [innerHtml]=\"topRightLabel\"></div>\n              </div>\n\n              <div class=\"ux-spark ux-inline ux-spark-theme-{{theme}}\" [style.height.px]=\"barHeight\" [style.backgroundColor]=\"trackColor\" [tooltip]=\"tooltip\">\n                  <div class=\"ux-spark-bar\" *ngFor=\"let line of values; let idx = index;\" [style.width.%]=\"line\" [style.backgroundColor]=\"barColor[idx]\"></div>\n              </div>\n\n              <div class=\"ux-spark-bottom-container\" *ngIf=\"bottomLeftLabel || bottomRightLabel\">\n                  <div class=\"ux-spark-label-bottom-left\" *ngIf=\"bottomLeftLabel\" [innerHtml]=\"bottomLeftLabel\"></div>\n                  <div class=\"ux-spark-label-bottom-right\" *ngIf=\"bottomRightLabel\" [innerHtml]=\"bottomRightLabel\"></div>\n              </div>\n\n          </div>\n      </div>\n\n      <!-- End Inline Spark Chart -->\n\n\n      <!-- Non Inline Spark Chart -->\n      <div *ngIf=\"!inlineLabel\">\n\n          <div class=\"ux-spark-top-container\" *ngIf=\"topLeftLabel || topRightLabel\">\n              <div class=\"ux-spark-label-top-left\" *ngIf=\"topLeftLabel\" [innerHtml]=\"topLeftLabel\"></div>\n              <div class=\"ux-spark-label-top-right\" *ngIf=\"topRightLabel\" [innerHtml]=\"topRightLabel\"></div>\n          </div>\n\n          <div class=\"ux-spark ux-spark-theme-{{theme}}\" [class.ux-spark-multi-value]=\"values.length > 1\" [style.height.px]=\"barHeight\" [style.backgroundColor]=\"trackColor\"\n              [tooltip]=\"tooltip\">\n              <div class=\"ux-spark-bar\" *ngFor=\"let line of value; let idx = index;\" [style.width.%]=\"line\" [style.backgroundColor]=\"barColor[idx]\"></div>\n          </div>\n\n          <div class=\"ux-spark-bottom-container\" *ngIf=\"bottomLeftLabel || bottomRightLabel\">\n              <div class=\"ux-spark-label-bottom-left\" *ngIf=\"bottomLeftLabel\" [innerHtml]=\"bottomLeftLabel\"></div>\n              <div class=\"ux-spark-label-bottom-right\" *ngIf=\"bottomRightLabel\" [innerHtml]=\"bottomRightLabel\"></div>\n          </div>\n      </div>\n\n      <!-- End Non Inline Spark Chart -->\n    `,\n    changeDetection: ChangeDetectionStrategy.OnPush\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ColorService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'barHeight': [{ type: Input },],\n'inlineLabel': [{ type: Input },],\n'topLeftLabel': [{ type: Input },],\n'topRightLabel': [{ type: Input },],\n'bottomLeftLabel': [{ type: Input },],\n'bottomRightLabel': [{ type: Input },],\n'tooltip': [{ type: Input },],\n'theme': [{ type: Input },],\n'trackColor': [{ type: Input },],\n'barColor': [{ type: Input },],\n'value': [{ type: Input },],\n};\n}\n\nfunction SparkComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nSparkComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSparkComponent.ctorParameters;\n/** @type {?} */\nSparkComponent.propDecorators;\n/** @type {?} */\nSparkComponent.prototype.values;\n/** @type {?} */\nSparkComponent.prototype.barHeight;\n/** @type {?} */\nSparkComponent.prototype.inlineLabel;\n/** @type {?} */\nSparkComponent.prototype.topLeftLabel;\n/** @type {?} */\nSparkComponent.prototype.topRightLabel;\n/** @type {?} */\nSparkComponent.prototype.bottomLeftLabel;\n/** @type {?} */\nSparkComponent.prototype.bottomRightLabel;\n/** @type {?} */\nSparkComponent.prototype.tooltip;\n/** @type {?} */\nSparkComponent.prototype._trackColor;\n/** @type {?} */\nSparkComponent.prototype._theme;\n/** @type {?} */\nSparkComponent.prototype._barColor;\n/** @type {?} */\nSparkComponent.prototype._colorService;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { SparkComponent } from './spark.component';\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\nimport { ColorServiceModule } from '../../services/color/index';\nexport class SparkModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        CommonModule,\n        ColorServiceModule,\n        TooltipModule.forRoot()\n    ],\n    exports: [SparkComponent],\n    declarations: [SparkComponent]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction SparkModule_tsickle_Closure_declarations() {\n/** @type {?} */\nSparkModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSparkModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component } from '@angular/core';\nexport class TimelineComponent {\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-timeline',\n    template: `\n      <div class=\"timeline\">\n          <ng-content></ng-content>\n      </div>\n    `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction TimelineComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nTimelineComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTimelineComponent.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Input } from '@angular/core';\nexport class TimelineEventComponent {\n\n     badgeColor: string;\n     badgeTitle: string;\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-timeline-event',\n    template: `\n      <div class=\"timeline-badge\" [ngClass]=\"badgeColor\">\n          <span>{{badgeTitle}}</span>\n      </div>\n      <div class=\"timeline-panel\">\n          <ng-content></ng-content>\n      </div>\n    `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'badgeColor': [{ type: Input },],\n'badgeTitle': [{ type: Input },],\n};\n}\n\nfunction TimelineEventComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nTimelineEventComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTimelineEventComponent.ctorParameters;\n/** @type {?} */\nTimelineEventComponent.propDecorators;\n/** @type {?} */\nTimelineEventComponent.prototype.badgeColor;\n/** @type {?} */\nTimelineEventComponent.prototype.badgeTitle;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TimelineComponent } from './timeline.component';\nimport { TimelineEventComponent } from './timeline-event/timeline-event.component';\nexport class TimelineModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        CommonModule\n    ],\n    exports: [\n        TimelineComponent,\n        TimelineEventComponent\n    ],\n    declarations: [\n        TimelineComponent,\n        TimelineEventComponent\n    ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction TimelineModule_tsickle_Closure_declarations() {\n/** @type {?} */\nTimelineModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTimelineModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, EventEmitter, HostListener, Input, Output, forwardRef, HostBinding } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nconst /** @type {?} */ TOGGLESWITCH_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => ToggleSwitchComponent),\n    multi: true\n};\n\nlet /** @type {?} */ uniqueToggleSwitchId = 0;\nexport class ToggleSwitchComponent implements ControlValueAccessor {\nprivate _toggleSwitchId: string = `ux-toggleswitch-${++uniqueToggleSwitchId}`;\n\n     id: string = this._toggleSwitchId;\n     name: string | null;\n     tabindex: number = 0;\n     clickable: boolean = true;\n     disabled: boolean = false;\n     ariaLabel: string = '';\n     ariaLabelledby: string = null;\n\n     valueChange: EventEmitter<boolean> = new EventEmitter<boolean>();\n/**\n * @return {?}\n */\nget value() {\n        return this._value;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset value(value: boolean) {\n        this._value = value;\n\n        // Update value output\n        this.valueChange.emit(value);\n\n        // Notify ngModel\n        this.onChangeCallback(value);\n        this.onTouchedCallback();        \n    }\n/**\n * @return {?}\n */\nget inputId(): string { \n        return `${this.id || this._toggleSwitchId}-input`;\n    }\nprivate _value: boolean = false;\n\n    focused: boolean = false;\n    onTouchedCallback: () => void = () => { };\n    onChangeCallback: (_: any) => void = () => { };\n/**\n * @return {?}\n */\ntoggle(): void {\n        if (!this.disabled && this.clickable) {\n            this.value = !this.value;\n        }\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nwriteValue(value: boolean): void {\n        this.value = !!value;\n    }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnChange(fn: any): void {\n        this.onChangeCallback = fn;\n    }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnTouched(fn: any): void {\n        this.onTouchedCallback = fn;\n    }\n/**\n * @param {?} isDisabled\n * @return {?}\n */\nsetDisabledState(isDisabled: boolean): void {\n        this.disabled = isDisabled;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-toggleswitch',\n    template: `\n      <label [attr.for]=\"inputId\"\n             class=\"ux-toggleswitch\"\n             [class.ux-toggleswitch-checked]=\"value\"\n             [class.ux-toggleswitch-disabled]=\"disabled\"\n             [class.ux-toggleswitch-focused]=\"focused\">\n\n          <input class=\"ux-toggleswitch-input\"\n                 type=\"checkbox\"\n                 role=\"switch\"\n                 [id]=\"inputId\"\n                 [checked]=\"value\"\n                 [disabled]=\"disabled\"\n                 [attr.name]=\"name\"\n                 [tabindex]=\"tabindex\"\n                 [attr.aria-label]=\"ariaLabel\"\n                 [attr.aria-labelledby]=\"ariaLabelledby\"\n                 [attr.aria-checked]=\"value\"\n                 (focus)=\"focused = true\"\n                 (blur)=\"focused = false\"\n                 (change)=\"toggle()\"\n                 (click)=\"$event.stopPropagation()\">\n\n          <div class=\"ux-toggleswitch-container\">\n              <div class=\"ux-toggleswitch-bg\"></div>\n              <div class=\"ux-toggleswitch-nub\"></div>\n          </div>\n\n          <span class=\"ux-toggleswitch-label\">\n              <ng-content></ng-content>\n          </span>\n      </label>\n    `,\n    providers: [TOGGLESWITCH_VALUE_ACCESSOR]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'id': [{ type: Input },],\n'name': [{ type: Input },],\n'tabindex': [{ type: Input },],\n'clickable': [{ type: Input },],\n'disabled': [{ type: Input },],\n'ariaLabel': [{ type: Input, args: ['aria-label', ] },],\n'ariaLabelledby': [{ type: Input, args: ['aria-labelledby', ] },],\n'valueChange': [{ type: Output },],\n'value': [{ type: Input },],\n};\n}\n\nfunction ToggleSwitchComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nToggleSwitchComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nToggleSwitchComponent.ctorParameters;\n/** @type {?} */\nToggleSwitchComponent.propDecorators;\n/** @type {?} */\nToggleSwitchComponent.prototype._toggleSwitchId;\n/** @type {?} */\nToggleSwitchComponent.prototype.id;\n/** @type {?} */\nToggleSwitchComponent.prototype.name;\n/** @type {?} */\nToggleSwitchComponent.prototype.tabindex;\n/** @type {?} */\nToggleSwitchComponent.prototype.clickable;\n/** @type {?} */\nToggleSwitchComponent.prototype.disabled;\n/** @type {?} */\nToggleSwitchComponent.prototype.ariaLabel;\n/** @type {?} */\nToggleSwitchComponent.prototype.ariaLabelledby;\n/** @type {?} */\nToggleSwitchComponent.prototype.valueChange;\n/** @type {?} */\nToggleSwitchComponent.prototype._value;\n/** @type {?} */\nToggleSwitchComponent.prototype.focused;\n/** @type {?} */\nToggleSwitchComponent.prototype.onTouchedCallback;\n/** @type {?} */\nToggleSwitchComponent.prototype.onChangeCallback;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { ToggleSwitchComponent } from './toggleswitch.component';\nexport class ToggleSwitchModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [ FormsModule ],\n    exports: [ ToggleSwitchComponent ],\n    declarations: [ ToggleSwitchComponent ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ToggleSwitchModule_tsickle_Closure_declarations() {\n/** @type {?} */\nToggleSwitchModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nToggleSwitchModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModel } from '@angular/forms';\nimport { Directive, ElementRef, HostListener, EventEmitter, Output, HostBinding, Optional } from '@angular/core';\n\nconst /** @type {?} */ KEYS = {\n    ENTER: 13,\n    ESCAPE: 27\n};\nexport class ToolbarSearchFieldDirective {\n\n    \n    cancel = new EventEmitter<void>();\n\n    \n    submit = new EventEmitter<string>();\n/**\n * @return {?}\n */\nget text(): string {\n        // Use ngModel if specified on the host; otherwise read the DOM\n        if (this._ngModel) {\n            return this._ngModel.value;\n        }\n\n        return this._elementRef.nativeElement.value;\n    }\n/**\n * @param {?} _elementRef\n * @param {?} _ngModel\n */\nconstructor(\nprivate _elementRef: ElementRef,\nprivate _ngModel: NgModel) { }\n/**\n * @return {?}\n */\nfocus() {\n        setTimeout(() => {\n            this._elementRef.nativeElement.focus();\n        });\n    }\n/**\n * @return {?}\n */\nblur() {\n        setTimeout(() => {\n            this._elementRef.nativeElement.blur();\n        });\n    }\n/**\n * @return {?}\n */\nclear() {\n        // Use ngModel if specified on the host; otherwise use the DOM\n        if (this._ngModel) {\n            this._ngModel.reset();\n        } else {\n            this._elementRef.nativeElement.value = '';\n        }\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nkeydownHandler(event: KeyboardEvent) {\n        setTimeout(() => {\n            if (event.keyCode === KEYS.ENTER) {\n                this.submit.emit(this.text);\n            } else if (event.keyCode === KEYS.ESCAPE) {\n                this._elementRef.nativeElement.blur();\n                this.cancel.emit();\n            }\n        });\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: '[uxToolbarSearchField]'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: NgModel, decorators: [{ type: Optional }, ]},\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'cancel': [{ type: Output },],\n'submit': [{ type: Output },],\n'keydownHandler': [{ type: HostListener, args: ['keydown', ['$event'], ] },],\n};\n}\n\nfunction ToolbarSearchFieldDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nToolbarSearchFieldDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nToolbarSearchFieldDirective.ctorParameters;\n/** @type {?} */\nToolbarSearchFieldDirective.propDecorators;\n/** @type {?} */\nToolbarSearchFieldDirective.prototype.cancel;\n/** @type {?} */\nToolbarSearchFieldDirective.prototype.submit;\n/** @type {?} */\nToolbarSearchFieldDirective.prototype._elementRef;\n/** @type {?} */\nToolbarSearchFieldDirective.prototype._ngModel;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, HostListener, Output, EventEmitter, ElementRef } from '@angular/core';\nexport class ToolbarSearchButtonDirective {\n\n    \n    clicked = new EventEmitter<void>();\n/**\n * @return {?}\n */\nget width(): number {\n        return this._elementRef.nativeElement.offsetWidth;\n    }\n/**\n * @param {?} _elementRef\n */\nconstructor(private _elementRef: ElementRef) { }\n/**\n * @return {?}\n */\nclickHandler() {\n        this.clicked.emit();\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: '[uxToolbarSearchButton]'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'clicked': [{ type: Output },],\n'clickHandler': [{ type: HostListener, args: ['click', ] },],\n};\n}\n\nfunction ToolbarSearchButtonDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nToolbarSearchButtonDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nToolbarSearchButtonDirective.ctorParameters;\n/** @type {?} */\nToolbarSearchButtonDirective.propDecorators;\n/** @type {?} */\nToolbarSearchButtonDirective.prototype.clicked;\n/** @type {?} */\nToolbarSearchButtonDirective.prototype._elementRef;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {\n    Component,\n    ContentChild,\n    AfterContentInit,\n    HostBinding,\n    HostListener,\n    EventEmitter,\n    Output,\n    Inject,\n    ElementRef,\n    Input\n} from '@angular/core';\nimport {\n    AnimationEvent,\n    trigger,\n    transition,\n    query,\n    style,\n    animate,\n    state\n} from '@angular/animations';\nimport { DOCUMENT } from '@angular/common';\n\nimport { ToolbarSearchFieldDirective } from './toolbar-search-field.directive';\nimport { ToolbarSearchButtonDirective } from './toolbar-search-button.directive';\nimport { ColorService } from '../../services/color/color.service';\nexport class ToolbarSearchComponent implements AfterContentInit {\n/**\n * @return {?}\n */\nget expanded(): boolean {\n        return this._expanded;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset expanded(value: boolean) {\n        this._expanded = value;\n\n        this.expandedChange.emit(value);\n\n        if (value) {\n            // Set focus on the input when expanded\n            this._field.focus();\n        } else {\n            // Clear text when contracted\n            this._field.clear();\n\n            // Remove focus (works around an IE issue where the caret remains visible)\n            this._field.blur();\n        }\n    }\n\n    \n    \n    direction: 'left' | 'right' = 'right';\n\n    \n    \n    inverse = false;\n/**\n * @param {?} value\n * @return {?}\n */\nset background(value: string) {\n        this._backgroundColor = this._colorService.resolve(value) || 'transparent';\n    }\n\n    \n    expandedChange = new EventEmitter<boolean>();\n\n    \n    search = new EventEmitter<string>();\nprivate _expanded: boolean = false;\n/**\n * @return {?}\n */\nprivate get _expandedAnimation(): any {\n        return {\n            value: this.expanded ? 'expanded' : 'collapsed',\n            params: {\n                initialWidth: this._button.width + 'px'\n            }\n        };\n    }\nprivate _position = 'relative';\nprivate _backgroundColor = 'transparent';\nprivate _field: ToolbarSearchFieldDirective;\nprivate _button: ToolbarSearchButtonDirective;\nprivate _placeholder: HTMLElement;\nprivate _document: Document;\n/**\n * @param {?} _elementRef\n * @param {?} _colorService\n * @param {?} document\n */\nconstructor(\nprivate _elementRef: ElementRef,\nprivate _colorService: ColorService,\n         document: any) {\n        this._document = <Document>document;\n    }\n/**\n * @return {?}\n */\nngAfterContentInit() {\n        // Subscribe to the submit event on the input field, triggering the search event\n        this._field.submit.subscribe((text: string) => this.search.emit(text));\n\n        // Subscribe to cancel events coming from the input field\n        this._field.cancel.subscribe(() => (this.expanded = false));\n\n        // Subscribe to the button click event\n        this._button.clicked.subscribe(() => {\n            if (this.expanded && this._field.text) {\n                this.search.emit(this._field.text);\n            } else {\n                this.expanded = !this.expanded;\n            }\n        });\n\n        // Create placeholder element to avoid changing layout when switching to position: absolute\n        this.createPlaceholder();\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nanimationStart(event: AnimationEvent) {\n        if (event.toState === 'expanded') {\n            this._position = 'absolute';\n            this.enablePlaceholder(true);\n        }\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nanimationDone(event: AnimationEvent) {\n        if (event.toState === 'collapsed') {\n            this._position = 'relative';\n            this.enablePlaceholder(false);\n        }\n    }\n/**\n * @return {?}\n */\nprivate createPlaceholder() {\n        // Get width and height of the component\n        const /** @type {?} */ styles = getComputedStyle(this._elementRef.nativeElement);\n\n        // Create invisible div with the same dimensions\n        this._placeholder = this._document.createElement('div');\n        this._placeholder.style.display = 'none';\n        this._placeholder.style.width = this._button.width + 'px';\n        this._placeholder.style.height = styles.height;\n        this._placeholder.style.visibility = 'hidden';\n\n        // Add as a sibling\n        this._elementRef.nativeElement.parentNode.insertBefore(this._placeholder, this._elementRef.nativeElement);\n    }\n/**\n * @param {?} enabled\n * @return {?}\n */\nprivate enablePlaceholder(enabled: boolean) {\n        this._placeholder.style.display = (enabled ? 'inline-block' : 'none');\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-toolbar-search',\n    template: `<ng-content></ng-content>`,\n    animations: [\n        trigger('expanded', [\n            state(\n                'collapsed',\n                style({\n                    width: '{{initialWidth}}'\n                }),\n                {\n                    params: { initialWidth: '30px' }\n                }\n            ),\n            state(\n                'expanded',\n                style({\n                    width: '100%'\n                })\n            ),\n            transition('collapsed <=> expanded', [animate('0.3s ease-out')])\n        ])\n    ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: ColorService, },\n{type: undefined, decorators: [{ type: Inject, args: [DOCUMENT, ] }, ]},\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'expanded': [{ type: HostBinding, args: ['class.expanded', ] },{ type: Input },],\n'direction': [{ type: Input },{ type: HostBinding, args: ['class', ] },],\n'inverse': [{ type: Input },{ type: HostBinding, args: ['class.inverse', ] },],\n'background': [{ type: Input },],\n'expandedChange': [{ type: Output },],\n'search': [{ type: Output },],\n'_expandedAnimation': [{ type: HostBinding, args: ['@expanded', ] },],\n'_position': [{ type: HostBinding, args: ['style.position', ] },],\n'_backgroundColor': [{ type: HostBinding, args: ['style.background-color', ] },],\n'_field': [{ type: ContentChild, args: [ToolbarSearchFieldDirective, ] },],\n'_button': [{ type: ContentChild, args: [ToolbarSearchButtonDirective, ] },],\n'animationStart': [{ type: HostListener, args: ['@expanded.start', ['$event'], ] },],\n'animationDone': [{ type: HostListener, args: ['@expanded.done', ['$event'], ] },],\n};\n}\n\nfunction ToolbarSearchComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nToolbarSearchComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nToolbarSearchComponent.ctorParameters;\n/** @type {?} */\nToolbarSearchComponent.propDecorators;\n/** @type {?} */\nToolbarSearchComponent.prototype.direction;\n/** @type {?} */\nToolbarSearchComponent.prototype.inverse;\n/** @type {?} */\nToolbarSearchComponent.prototype.expandedChange;\n/** @type {?} */\nToolbarSearchComponent.prototype.search;\n/** @type {?} */\nToolbarSearchComponent.prototype._expanded;\n/** @type {?} */\nToolbarSearchComponent.prototype._position;\n/** @type {?} */\nToolbarSearchComponent.prototype._backgroundColor;\n/** @type {?} */\nToolbarSearchComponent.prototype._field;\n/** @type {?} */\nToolbarSearchComponent.prototype._button;\n/** @type {?} */\nToolbarSearchComponent.prototype._placeholder;\n/** @type {?} */\nToolbarSearchComponent.prototype._document;\n/** @type {?} */\nToolbarSearchComponent.prototype._elementRef;\n/** @type {?} */\nToolbarSearchComponent.prototype._colorService;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ToolbarSearchComponent } from './toolbar-search.component';\nimport { ToolbarSearchFieldDirective } from './toolbar-search-field.directive';\nimport { ToolbarSearchButtonDirective } from './toolbar-search-button.directive';\n\nconst /** @type {?} */ DECLARATIONS = [\n    ToolbarSearchComponent,\n    ToolbarSearchFieldDirective,\n    ToolbarSearchButtonDirective\n];\nexport class ToolbarSearchModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        CommonModule\n    ],\n    exports: DECLARATIONS,\n    declarations: DECLARATIONS,\n    providers: [],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ToolbarSearchModule_tsickle_Closure_declarations() {\n/** @type {?} */\nToolbarSearchModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nToolbarSearchModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { Observer } from 'rxjs/Observer';\nimport'rxjs/add/observable/concat';\nexport class FrameExtractionService {\n/**\n * @param {?} source\n * @return {?}\n */\nprivate createVideoPlayer(source: string): HTMLVideoElement {\n        let /** @type {?} */ videoPlayer = document.createElement('video');\n        videoPlayer.preload = 'auto';\n        videoPlayer.src = source;\n        return videoPlayer;\n    }\n/**\n * @param {?} width\n * @param {?} height\n * @return {?}\n */\nprivate createCanvas(width: number, height: number): HTMLCanvasElement {\n        let /** @type {?} */ canvas = document.createElement('canvas');\n        canvas.width = width;\n        canvas.height = height;\n        return canvas;\n    }\n/**\n * @param {?} videoPlayer\n * @param {?} time\n * @return {?}\n */\nprivate goToFrame(videoPlayer: HTMLVideoElement, time: number): Observable<number> {\n        videoPlayer.currentTime = time;\n        return Observable.fromEvent(videoPlayer, time === 0 ? 'loadeddata' : 'seeked');\n    }\n/**\n * @param {?} videoPlayer\n * @param {?} canvas\n * @param {?} time\n * @param {?=} width\n * @param {?=} height\n * @return {?}\n */\nprivate getThumbnail(videoPlayer: HTMLVideoElement, canvas: HTMLCanvasElement, time: number, width: number = 160, height: number = 90): Observable<ExtractedFrame> {\n\n        return Observable.create((observer: Observer<ExtractedFrame>) => {\n\n            // go to specified frame\n            let /** @type {?} */ subscription = this.goToFrame(videoPlayer, time).subscribe((event: any) => {\n                // create image from current frame\n                canvas.getContext('2d').drawImage(videoPlayer, 0, 0, width, height);\n                observer.next({ image: canvas.toDataURL(), width: width, height: height, time: time });\n                observer.complete();\n                subscription.unsubscribe();\n            });\n        });\n    }\n/**\n * @param {?} source\n * @param {?} width\n * @param {?} height\n * @param {?} time\n * @return {?}\n */\ngetFrameThumbnail(source: string, width: number, height: number, time: number): Observable<ExtractedFrame> {\n\n        // create required elements\n        let /** @type {?} */ videoPlayer = this.createVideoPlayer(source);\n        let /** @type {?} */ canvas = this.createCanvas(width, height);\n\n        let /** @type {?} */ frameSubscription = this.getThumbnail(videoPlayer, canvas, time, width, height);\n\n        // ensure we release memory after we are finished        \n        frameSubscription.subscribe(null, null, () => {\n            videoPlayer = null;\n            canvas = null;\n        });\n\n        return frameSubscription;\n    }\n/**\n * @param {?} source\n * @param {?} width\n * @param {?} height\n * @param {?} start\n * @param {?} end\n * @param {?=} skip\n * @return {?}\n */\ngetFrameThumbnails(source: string, width: number, height: number, start: number, end: number, skip: number = 5): Observable<ExtractedFrame> {\n\n        // create required elements\n        let /** @type {?} */ videoPlayer = this.createVideoPlayer(source);\n        let /** @type {?} */ canvas = this.createCanvas(width, height);\n\n        return Observable.create((observer: Observer<ExtractedFrame>) => {\n\n            Observable.fromEvent(videoPlayer, 'loadedmetadata').subscribe(() => {\n\n                // calculate the frames required\n                let /** @type {?} */ frames = [];\n\n                for (let /** @type {?} */ idx = start; idx < end; idx += skip) {\n                    frames.push(this.getThumbnail(videoPlayer, canvas, idx, width, height));\n                }\n\n                Observable.concat(...frames).subscribe((frame: ExtractedFrame) => observer.next(frame), null, () => {\n                    videoPlayer = null;\n                    canvas = null;\n                    observer.complete();\n                });\n            });\n\n        });\n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction FrameExtractionService_tsickle_Closure_declarations() {\n/** @type {?} */\nFrameExtractionService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFrameExtractionService.ctorParameters;\n}\n\n\nexport interface ExtractedFrame {\n    image: string;\n    width: number;\n    height: number;\n    time: number;\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\n\nimport { FrameExtractionService } from './frame-extraction.service';\nexport class FrameExtractionModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    providers: [FrameExtractionService],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction FrameExtractionModule_tsickle_Closure_declarations() {\n/** @type {?} */\nFrameExtractionModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFrameExtractionModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { MediaPlayerType } from './media-player.component';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { Subject } from 'rxjs/Subject';\nimport { Observer } from 'rxjs/Observer';\nimport { FrameExtractionService, ExtractedFrame } from '../../services/frame-extraction/index';\nexport class MediaPlayerService {\n\n    source: string;\n    type: MediaPlayerType = 'video';\n    loaded: boolean = false;\n\n    /*\n        Create observables for media player events\n    */\n    playing: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\n    initEvent: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\n    abortEvent: Subject<void> = new Subject<void>();\n    canPlayEvent: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\n    canPlayThroughEvent: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\n    durationChangeEvent: Subject<number> = new Subject<number>();\n    endedEvent: Subject<void> = new Subject<void>();\n    errorEvent: Subject<any> = new Subject<any>();\n    loadedDataEvent: Subject<any> = new Subject<any>();\n    loadedMetadataEvent: Subject<any> = new Subject<any>();\n    loadStartEvent: Subject<void> = new Subject<void>();\n    pauseEvent: Subject<void> = new Subject<void>();\n    playEvent: Subject<void> = new Subject<void>();\n    playingEvent: Subject<boolean> = new Subject<boolean>();\n    rateChangeEvent: Subject<number> = new Subject<number>();\n    seekedEvent: Subject<number> = new Subject<number>();\n    seekingEvent: Subject<number> = new Subject<number>();\n    stalledEvent: Subject<void> = new Subject<void>();\n    suspendEvent: Subject<void> = new Subject<void>();\n    timeUpdateEvent: Subject<number> = new Subject<number>();\n    volumeChangeEvent: Subject<number> = new Subject<number>();\n    waitingEvent: Subject<void> = new Subject<void>();\n    mediaClickEvent: Subject<MouseEvent> = new Subject<MouseEvent>();\n    fullscreenEvent: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\n    quietModeEvent: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\n    progressEvent: Observable<TimeRanges> = Observable.create((observer: Observer<TimeRanges>) => {\n\n        // repeat until the whole video has fully loaded\n        let /** @type {?} */ interval = setInterval(() => {\n\n            let /** @type {?} */ buffered = /** @type {?} */(( this._mediaPlayer.buffered as TimeRanges));\n            observer.next(buffered);\n\n            if (buffered.length === 1 && buffered.start(0) === 0 && buffered.end(0) === this.duration) {\n                observer.complete();\n                clearInterval(interval);\n            }\n        }, 1000);\n    });\nprivate _mediaPlayer: HTMLMediaElement;\nprivate _hostElement: HTMLElement;\nprivate _fullscreen: boolean = false;\nprivate _quietMode: boolean;\n/**\n * @param {?} _frameExtractionService\n */\nconstructor(private _frameExtractionService: FrameExtractionService) {}\n/**\n * @return {?}\n */\nget mediaPlayer(): HTMLMediaElement {\n        return this._mediaPlayer;\n    }\n/**\n * @return {?}\n */\nget quietMode(): boolean {\n        return this._quietMode;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset quietMode(value: boolean) {\n\n        // quiet mode cannot be enabled on audio player\n        if (this.type === 'audio') {\n            value = false;\n        }\n\n        this._quietMode = value;\n        this.quietModeEvent.next(value);\n    }\n/**\n * @return {?}\n */\nget mediaPlayerWidth(): number {\n        return this._mediaPlayer ? this._mediaPlayer.offsetWidth : 0;\n    }\n/**\n * @return {?}\n */\nget mediaPlayerHeight(): number {\n        return this._mediaPlayer ? this._mediaPlayer.offsetHeight : 0;\n    }\n/**\n * @return {?}\n */\nget audioTracks(): AudioTrackList {\n        return this._mediaPlayer ? this._mediaPlayer.audioTracks : null;\n    }\n/**\n * @return {?}\n */\nget autoplay(): boolean {\n        return this._mediaPlayer ? this._mediaPlayer.autoplay : false;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset autoplay(value: boolean) {\n        this._mediaPlayer.autoplay = value;\n    }\n/**\n * @return {?}\n */\nget buffered(): TimeRanges {\n        return this._mediaPlayer ? this._mediaPlayer.buffered : new TimeRanges();\n    }\n/**\n * @return {?}\n */\nget crossOrigin(): string {\n        return this._mediaPlayer ? this._mediaPlayer.crossOrigin : null;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset crossOrigin(value: string) {\n        this._mediaPlayer.crossOrigin = value;\n    }\n/**\n * @return {?}\n */\nget currentSrc(): string {\n        return this._mediaPlayer ? this._mediaPlayer.currentSrc : null;\n    }\n/**\n * @return {?}\n */\nget currentTime(): number {\n        return this._mediaPlayer ? this._mediaPlayer.currentTime : 0;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset currentTime(value: number) {\n        this._mediaPlayer.currentTime = value;\n    }\n/**\n * @return {?}\n */\nget defaultMuted(): boolean {\n        return this._mediaPlayer ? this._mediaPlayer.defaultMuted : false;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset defaultMuted(value: boolean) {\n        this._mediaPlayer.defaultMuted = value;\n    }\n/**\n * @return {?}\n */\nget defaultPlaybackRate(): number {\n        return this._mediaPlayer ? this._mediaPlayer.defaultPlaybackRate : 1;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset defaultPlaybackRate(value: number) {\n        this._mediaPlayer.defaultPlaybackRate = value;\n    }\n/**\n * @return {?}\n */\nget duration(): number {\n        return this._mediaPlayer ? this._mediaPlayer.duration : 0;\n    }\n/**\n * @return {?}\n */\nget ended(): boolean {\n        return this._mediaPlayer ? this._mediaPlayer.ended : false;\n    }\n/**\n * @return {?}\n */\nget loop(): boolean {\n        return this._mediaPlayer ? this._mediaPlayer.loop : false;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset loop(value: boolean) {\n        this._mediaPlayer.loop = value;\n    }\n/**\n * @return {?}\n */\nget muted(): boolean {\n        return this._mediaPlayer ? this._mediaPlayer.muted : false;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset muted(value: boolean) {\n        this._mediaPlayer.muted = value;\n    }\n/**\n * @return {?}\n */\nget networkState(): number {\n        return this._mediaPlayer.networkState;\n    }\n/**\n * @return {?}\n */\nget paused(): boolean {\n        return this._mediaPlayer ? this._mediaPlayer.paused : true;\n    }\n/**\n * @return {?}\n */\nget playbackRate(): number {\n        return this._mediaPlayer ? this._mediaPlayer.playbackRate : 1;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset playbackRate(value: number) {\n        this._mediaPlayer.playbackRate = value;\n    }\n/**\n * @return {?}\n */\nget played(): TimeRanges {\n        return this._mediaPlayer ? this._mediaPlayer.played : new TimeRanges();\n    }\n/**\n * @return {?}\n */\nget preload(): string {\n        return this._mediaPlayer ? this._mediaPlayer.preload : 'auto';\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset preload(value: string) {\n        this._mediaPlayer.preload = value;\n    }\n/**\n * @return {?}\n */\nget readyState(): number {\n        return this._mediaPlayer ? this._mediaPlayer.readyState : 0;\n    }\n/**\n * @return {?}\n */\nget seekable(): TimeRanges {\n        return this._mediaPlayer ? this._mediaPlayer.seekable : new TimeRanges();\n    }\n/**\n * @return {?}\n */\nget seeking(): boolean {\n        return this._mediaPlayer ? this._mediaPlayer.seeking : false;\n    }\n/**\n * @return {?}\n */\nget src(): string {\n        return this._mediaPlayer ? this._mediaPlayer.src : '';\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset src(value: string) {\n        this._mediaPlayer.src = value;\n    }\n/**\n * @return {?}\n */\nget textTracks(): TextTrackList {\n        return this._mediaPlayer ? this._mediaPlayer.textTracks : new TextTrackList();\n    }\n/**\n * @return {?}\n */\nget videoTracks(): VideoTrackList {\n        return this._mediaPlayer ? this._mediaPlayer.videoTracks : new VideoTrackList();\n    }\n/**\n * @return {?}\n */\nget volume(): number {\n        return this._mediaPlayer ? this._mediaPlayer.volume : 1;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset volume(value: number) {\n        this._mediaPlayer.volume = value;\n    }\n/**\n * @return {?}\n */\nget fullscreen(): boolean {\n        return this._mediaPlayer ? this._fullscreen : false;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset fullscreen(value: boolean) {\n        this._fullscreen = value;\n        this.fullscreenEvent.next(value);\n    }\n/**\n * @param {?} hostElement\n * @param {?} mediaPlayer\n * @return {?}\n */\nsetMediaPlayer(hostElement: HTMLElement, mediaPlayer: HTMLMediaElement): void {\n        this._hostElement = hostElement;\n        this._mediaPlayer = mediaPlayer;\n\n        this.initEvent.next(true);\n    }\n/**\n * Toggle playing state\n * @return {?}\n */\ntogglePlay(): void {\n\n        // prevent any action is not loaded\n        if (this.loaded === false) {\n            return;\n        }\n\n        if (this.paused) {\n            this.play();\n        } else {\n            this.pause();\n        }\n    }\n/**\n * Starts playing the audio/video\n * @return {?}\n */\nplay(): void {\n        this._mediaPlayer.play();\n    }\n/**\n * Pauses the currently playing audio/video\n * @return {?}\n */\npause(): void {\n        this._mediaPlayer.pause();\n    }\n/**\n * Re-loads the audio/video element\n * @return {?}\n */\nload(): void {\n        this._mediaPlayer.load();\n    }\n/**\n * Checks if the browser can play the specified audio/video type\n * @param {?} type\n * @return {?}\n */\ncanPlayType(type: string): string {\n        return this._mediaPlayer.canPlayType(type);\n    }\n/**\n * Adds a new text track to the audio/video\n * @param {?} kind\n * @param {?} label\n * @param {?} language\n * @return {?}\n */\naddTextTrack(kind: string, label: string, language: string): TextTrack {\n        return this._mediaPlayer.addTextTrack(kind, label, language);\n    }\n/**\n * Attempt to display media in fullscreen mode\n * @return {?}\n */\nrequestFullscreen(): void {\n\n        if (this._hostElement.requestFullscreen) {\n            this._hostElement.requestFullscreen();\n        } else if (this._hostElement.webkitRequestFullscreen) {\n            this._hostElement.webkitRequestFullscreen();\n        } else if (( /** @type {?} */((<any>this._hostElement))).msRequestFullscreen) {\n            ( /** @type {?} */((<any>this._hostElement))).msRequestFullscreen();\n        } else if (( /** @type {?} */((<any>this._hostElement))).mozRequestFullScreen) {\n            ( /** @type {?} */((<any>this._hostElement))).mozRequestFullScreen();\n        }\n    }\n/**\n * Exit full screen mode\n * @return {?}\n */\nexitFullscreen(): void {\n\n        if (( /** @type {?} */((<any>this._hostElement))).exitFullscreen) {\n            document.exitFullscreen();\n        } else if (document.webkitExitFullscreen) {\n            document.webkitExitFullscreen();\n        } else if (( /** @type {?} */((<any>document))).msExitFullscreen) {\n            ( /** @type {?} */((<any>document))).msExitFullscreen();\n        } else if (( /** @type {?} */((<any>document))).mozCancelFullScreen) {\n            ( /** @type {?} */((<any>document))).mozCancelFullScreen();\n        }\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nfullscreenChange(event: Event) {\n        this.fullscreen = ( /** @type {?} */((<any>document))).fullscreen || document.webkitIsFullScreen || ( /** @type {?} */((<any>document))).mozFullScreen || ( /** @type {?} */((<any>document))).msFullscreenElement !== null && ( /** @type {?} */((<any>document))).msFullscreenElement !== undefined;\n        this.fullscreenEvent.next(this.fullscreen);\n    }\n/**\n * Toggle Fullscreen State\n * @return {?}\n */\ntoggleFullscreen(): void {\n        if (this.fullscreen) {\n            this.exitFullscreen();\n        } else {\n            this.requestFullscreen();\n        }\n    }\n/**\n * Extract the frames from the video\n * @param {?} width\n * @param {?} height\n * @param {?} skip\n * @return {?}\n */\ngetFrames(width: number, height: number, skip: number): Observable<ExtractedFrame> {\n\n        if (this.type === 'video') {\n            return this._frameExtractionService.getFrameThumbnails(this.source, width, height, 0, this.duration, 10);\n        }\n\n        return Observable.from([]);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: FrameExtractionService, },\n];\n}\n\nfunction MediaPlayerService_tsickle_Closure_declarations() {\n/** @type {?} */\nMediaPlayerService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMediaPlayerService.ctorParameters;\n/** @type {?} */\nMediaPlayerService.prototype.source;\n/** @type {?} */\nMediaPlayerService.prototype.type;\n/** @type {?} */\nMediaPlayerService.prototype.loaded;\n/** @type {?} */\nMediaPlayerService.prototype.playing;\n/** @type {?} */\nMediaPlayerService.prototype.initEvent;\n/** @type {?} */\nMediaPlayerService.prototype.abortEvent;\n/** @type {?} */\nMediaPlayerService.prototype.canPlayEvent;\n/** @type {?} */\nMediaPlayerService.prototype.canPlayThroughEvent;\n/** @type {?} */\nMediaPlayerService.prototype.durationChangeEvent;\n/** @type {?} */\nMediaPlayerService.prototype.endedEvent;\n/** @type {?} */\nMediaPlayerService.prototype.errorEvent;\n/** @type {?} */\nMediaPlayerService.prototype.loadedDataEvent;\n/** @type {?} */\nMediaPlayerService.prototype.loadedMetadataEvent;\n/** @type {?} */\nMediaPlayerService.prototype.loadStartEvent;\n/** @type {?} */\nMediaPlayerService.prototype.pauseEvent;\n/** @type {?} */\nMediaPlayerService.prototype.playEvent;\n/** @type {?} */\nMediaPlayerService.prototype.playingEvent;\n/** @type {?} */\nMediaPlayerService.prototype.rateChangeEvent;\n/** @type {?} */\nMediaPlayerService.prototype.seekedEvent;\n/** @type {?} */\nMediaPlayerService.prototype.seekingEvent;\n/** @type {?} */\nMediaPlayerService.prototype.stalledEvent;\n/** @type {?} */\nMediaPlayerService.prototype.suspendEvent;\n/** @type {?} */\nMediaPlayerService.prototype.timeUpdateEvent;\n/** @type {?} */\nMediaPlayerService.prototype.volumeChangeEvent;\n/** @type {?} */\nMediaPlayerService.prototype.waitingEvent;\n/** @type {?} */\nMediaPlayerService.prototype.mediaClickEvent;\n/** @type {?} */\nMediaPlayerService.prototype.fullscreenEvent;\n/** @type {?} */\nMediaPlayerService.prototype.quietModeEvent;\n/** @type {?} */\nMediaPlayerService.prototype.progressEvent;\n/** @type {?} */\nMediaPlayerService.prototype._mediaPlayer;\n/** @type {?} */\nMediaPlayerService.prototype._hostElement;\n/** @type {?} */\nMediaPlayerService.prototype._fullscreen;\n/** @type {?} */\nMediaPlayerService.prototype._quietMode;\n/** @type {?} */\nMediaPlayerService.prototype._frameExtractionService;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable } from '@angular/core';\nimport { Http, ResponseContentType } from '@angular/http';\nimport { Observable } from 'rxjs/Observable';\nimport { Observer } from 'rxjs/Observer';\nimport'rxjs/add/observable/of';\nexport class AudioService {\nprivate _audioBuffer: AudioBuffer;\nprivate _audioBufferSource: AudioBufferSourceNode;\nprivate _audioContext: AudioContext;\nprivate _gainNode: GainNode;\nprivate _analyserNode: AnalyserNode;\n/**\n * @param {?} _http\n */\nconstructor(private _http: Http) { }\n/**\n * @param {?} mediaElement\n * @return {?}\n */\ngetAudioFileMetadata(mediaElement: HTMLMediaElement): Observable<AudioMetadata> {\n        return Observable.create((observer: Observer<AudioMetadata>) => {\n            this._http.request(mediaElement.src, { responseType: ResponseContentType.Blob }).subscribe(response => {\n\n                let /** @type {?} */ filename = mediaElement.src.substring(mediaElement.src.lastIndexOf('/') + 1);\n                let /** @type {?} */ extension = mediaElement.src.substring(mediaElement.src.lastIndexOf('.') + 1).toLowerCase();\n                let /** @type {?} */ blob = response.blob();\n                let /** @type {?} */ description;\n\n                switch (extension) {\n                    case 'mp3':\n                        description = 'MPEG audio layer 3 file';\n                        break;\n\n                    case 'wma':\n                        description = 'Windows media audio file';\n                        break;\n\n                    case 'wav':\n                        description = 'WAVE audio file';\n                        break;\n\n                    case 'ogg':\n                        description = 'Ogg Vorbis file';\n                        break;\n\n                    case 'aac':\n                        description = 'Advanced audio coding file';\n                        break;\n\n                    case 'midi':\n                        description = 'Musical instrument digital interface file';\n                        break;\n\n                    default:\n                        description = 'Audio file';\n                        break;\n                }\n\n                observer.next({\n                    filename: filename,\n                    extension: extension,\n                    description: description,\n                    size: blob.size\n                });\n            });\n        });\n    }\n/**\n * @param {?} url\n * @return {?}\n */\ngetWaveformFromUrl(url: string): Observable<Float32Array[]> {\n\n        // if audio context is not support return a stream of empty data\n        if (!( /** @type {?} */((<any>window))).AudioContext) {\n            return Observable.of<Float32Array[]>([new Float32Array(0)]);\n        }\n\n        this._audioContext = new AudioContext();\n        this.createVolumeNode();\n        this.createAnalyserNode();\n\n        return Observable.create((observer: Observer<Float32Array[]>) => {\n\n            // load the media from the URL provided\n            this._http.request(url, { responseType: ResponseContentType.ArrayBuffer }).subscribe(response => {\n                this.getAudioBuffer(response.arrayBuffer()).subscribe(audioBuffer => {\n\n                    // create the buffer source\n                    this.createBufferSource(audioBuffer);\n\n                    let /** @type {?} */ dataPoints: Float32Array[] = [];\n                    let /** @type {?} */ channels = this._audioBuffer.numberOfChannels;\n\n                    // extract the data from each channel\n                    for (let /** @type {?} */ channelIdx = 0; channelIdx < channels; channelIdx++) {\n                        dataPoints[channelIdx] = this._audioBuffer.getChannelData(channelIdx);\n                    }\n\n                    observer.next(dataPoints);\n                    observer.complete();\n\n                    // cleanup after ourselves\n                    dataPoints = null;\n                }, (error) => observer.error(error));\n            }, (error) => observer.error(error));\n        });\n    }\n/**\n * @param {?=} channels\n * @param {?=} skip\n * @return {?}\n */\ngetWaveformPoints(channels: Float32Array[] = [], skip: number = 1000): WaveformPoint[] {\n\n        let /** @type {?} */ waveform: WaveformPoint[] = [];\n        let /** @type {?} */ duration = channels.length > 0 ? channels[0].length : 0;\n\n        // convert each channel data to a series of waveform points\n        for (let /** @type {?} */ idx = 0; idx < duration; idx += skip) {\n\n            // get all the channel data for a specific point\n            let /** @type {?} */ points = channels.map(channel => channel[idx]);\n\n            // find the minimum point and maximum points at each position across all channels\n            waveform.push({\n                min: points.reduce((previous, current) => current < previous ? current : previous),\n                max: points.reduce((previous, current) => current > previous ? current : previous)\n            });\n        }\n\n        return waveform;\n    }\n/**\n * @param {?} arrayBuffer\n * @return {?}\n */\nprivate getAudioBuffer(arrayBuffer: ArrayBuffer): Observable<AudioBuffer> {\n        return Observable.create((observer: Observer<AudioBuffer>) => {\n            this.getOfflineAudioContext().decodeAudioData(arrayBuffer, (audioBuffer: AudioBuffer) => {\n                observer.next(audioBuffer);\n                observer.complete();\n            }, (error) => observer.error(error));\n        });\n    }\n/**\n * @return {?}\n */\nprivate getOfflineAudioContext(): OfflineAudioContext {\n        return new OfflineAudioContext(1, 2, this._audioContext.sampleRate || 44100);\n    }\n/**\n * @param {?} audioBuffer\n * @return {?}\n */\nprivate createBufferSource(audioBuffer: AudioBuffer): void {\n        this.disconnectSource();\n\n        this._audioBuffer = audioBuffer;\n        this._audioBufferSource = this._audioContext.createBufferSource();\n        this._audioBufferSource.buffer = this._audioBuffer;\n        this._audioBufferSource.connect(this._analyserNode);\n    }\n/**\n * @return {?}\n */\nprivate createVolumeNode(): void {\n        this._gainNode = this._audioContext.createGain();\n        this._gainNode.connect(this._audioContext.destination);\n    }\n/**\n * @return {?}\n */\nprivate createAnalyserNode(): void {\n        this._analyserNode = this._audioContext.createAnalyser();\n        this._analyserNode.connect(this._gainNode);\n    }\n/**\n * @return {?}\n */\nprivate disconnectSource(): void {\n        if (this._audioBufferSource) {\n            this._audioBufferSource.disconnect();\n        }\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Http, },\n];\n}\n\nfunction AudioService_tsickle_Closure_declarations() {\n/** @type {?} */\nAudioService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nAudioService.ctorParameters;\n/** @type {?} */\nAudioService.prototype._audioBuffer;\n/** @type {?} */\nAudioService.prototype._audioBufferSource;\n/** @type {?} */\nAudioService.prototype._audioContext;\n/** @type {?} */\nAudioService.prototype._gainNode;\n/** @type {?} */\nAudioService.prototype._analyserNode;\n/** @type {?} */\nAudioService.prototype._http;\n}\n\n\nexport interface WaveformPoint {\n    min: number;\n    max: number;\n}\n\nexport interface AudioMetadata {\n    filename: string;\n    extension: string;\n    description: string;\n    size: number;\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { HttpModule } from '@angular/http';\nimport { AudioService } from './audio.service';\nexport class AudioServiceModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [ HttpModule ],\n    providers: [AudioService]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction AudioServiceModule_tsickle_Closure_declarations() {\n/** @type {?} */\nAudioServiceModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nAudioServiceModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Input, ViewChild, ElementRef, AfterViewInit, OnDestroy } from '@angular/core';\nimport { ExtractedFrame, FrameExtractionService } from '../../services/frame-extraction/frame-extraction.service';\nimport { MediaPlayerService } from './media-player.service';\nimport { Subject } from 'rxjs/Subject';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { Observable } from 'rxjs/Observable';\nimport { Observer } from 'rxjs/Observer';\nimport { AudioService, AudioMetadata } from '../../services/audio/index';\nimport { Subscription } from 'rxjs/Subscription';\nimport'rxjs/add/observable/from';\nimport'rxjs/add/operator/switchMap';\nexport class MediaPlayerComponent implements AfterViewInit, OnDestroy {\nprivate _playerRef: ElementRef;\nprivate _trackBarRef: ElementRef;\n\n    hovering: boolean = false;\n    audioMetadata: Observable<AudioMetadata>;\nprivate _hover$: Subscription;\nprivate _clicked$: Subscription;\nprivate _paused$: Subscription;\nprivate _playing$: Subscription;\nprivate _loading$: Subscription;\n/**\n * @return {?}\n */\nget source(): string {\n        return this.mediaPlayerService.source;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset source(value: string) {\n        this.mediaPlayerService.source = value;\n    }\n/**\n * @return {?}\n */\nget type(): MediaPlayerType {\n        return this.mediaPlayerService.type;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset type(value: MediaPlayerType) {\n        this.mediaPlayerService.type = value;\n    }\n/**\n * @return {?}\n */\nget quietMode(): boolean {\n        return this.mediaPlayerService.quietMode;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset quietMode(value: boolean) {\n        this.mediaPlayerService.quietMode = value;\n    }\n/**\n * @param {?} mediaPlayerService\n * @param {?} _audioService\n * @param {?} _elementRef\n */\nconstructor(public mediaPlayerService: MediaPlayerService,\nprivate _audioService: AudioService,\nprivate _elementRef: ElementRef) {\n\n        // show controls when hovering and in quiet mode\n        this._hover$ = Observable.fromEvent(this._elementRef.nativeElement, 'mousemove').switchMap((event: MouseEvent) => {\n            this.hovering = true;         \n            return Observable.of(event);\n        }).debounceTime(2000).subscribe(() => this.hovering = false);\n    }\n/**\n * @return {?}\n */\nngAfterViewInit(): void {\n        this.mediaPlayerService.setMediaPlayer(this._elementRef.nativeElement, this._playerRef.nativeElement);\n\n        this.audioMetadata = this._audioService.getAudioFileMetadata(this._playerRef.nativeElement);\n        this._playing$ = this.mediaPlayerService.playingEvent.subscribe(event => this.mediaPlayerService.playing.next(true));\n        this._paused$ = this.mediaPlayerService.pauseEvent.subscribe(event => this.mediaPlayerService.playing.next(false));\n        this._clicked$ = this.mediaPlayerService.mediaClickEvent.subscribe(() => this.mediaPlayerService.togglePlay());\n        this._loading$ = this.mediaPlayerService.loadedMetadataEvent.subscribe(() => this.mediaPlayerService.loaded = true);\n    }\n/**\n * @return {?}\n */\nngOnDestroy(): void {\n        this._hover$.unsubscribe();\n        this._playing$.unsubscribe();\n        this._paused$.unsubscribe();\n        this._clicked$.unsubscribe();\n        this._loading$.unsubscribe();\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-media-player',\n    template: `\n      <div class=\"video-player-container\" *ngIf=\"type === 'video'\">\n\n          <video class=\"video-player\" #player [src]=\"source\" (abort)=\"mediaPlayerService.abortEvent.next()\" (canplay)=\"mediaPlayerService.canPlayEvent.next()\"\n              (canplaythrough)=\"mediaPlayerService.canPlayThroughEvent.next()\" (durationchange)=\"mediaPlayerService.durationChangeEvent.next(player.duration)\" (ended)=\"mediaPlayerService.endedEvent.next()\"\n              (error)=\"mediaPlayerService.errorEvent.next($event)\" (loadeddata)=\"mediaPlayerService.loadedDataEvent.next($event)\" (loadedmetadata)=\"mediaPlayerService.loadedMetadataEvent.next($event)\"\n              (loadstart)=\"mediaPlayerService.loadStartEvent.next()\" (pause)=\"mediaPlayerService.pauseEvent.next()\" (play)=\"mediaPlayerService.playEvent.next()\" (playing)=\"mediaPlayerService.playingEvent.next(!player.paused)\"\n              (ratechange)=\"mediaPlayerService.rateChangeEvent.next(player.playbackRate)\" (seeked)=\"mediaPlayerService.seekedEvent.next(player.currentTime)\" (seeking)=\"mediaPlayerService.seekingEvent.next(player.currentTime)\"\n              (stalled)=\"mediaPlayerService.stalledEvent.next()\" (suspend)=\"mediaPlayerService.suspendEvent.next()\" (timeupdate)=\"mediaPlayerService.timeUpdateEvent.next(player.currentTime)\"\n              (volumechange)=\"mediaPlayerService.volumeChangeEvent.next(player.volume)\" (waiting)=\"mediaPlayerService.waitingEvent.next()\" (click)=\"mediaPlayerService.mediaClickEvent.next($event)\"></video>\n\n          <div class=\"video-overlay\" [class.playing]=\"mediaPlayerService.playing | async\">\n              <svg class=\"play-graphic\" x=\"0px\" y=\"0px\" viewBox=\"0 0 64 64\">\n                  <circle class=\"play-circle\" cx=\"32.2\" cy=\"31.8\" r=\"31.8\" />\n                  <polygon class=\"play-triangle\" points=\"23,14.1 23,50.8 48.3,32.5\" />\n              </svg>\n          </div>\n\n      </div>\n\n\n      <div class=\"audio-player\" *ngIf=\"type === 'audio'\">\n\n          <svg width=\"24px\" height=\"24px\" viewBox=\"0 0 24 24\">\n              <g stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\n                  <g transform=\"translate(-98.000000, -458.000000)\">\n                      <g transform=\"translate(98.000000, 458.000000)\">\n                          <path d=\"M4.5,0.5 L18.0435308,0.5 L23.5,6.22251502 L23.5,23.5 L4.5,23.5 L4.5,0.5 Z\" fill=\"#CCEAE2\"></path>\n                          <path d=\"M4.5,8 L4.5,0.5 L18,0.5 L23.5,6 L23.5,23.5 L18,23.5\" stroke=\"#60798D\" fill=\"#CCEAE2\"></path>\n                          <path d=\"M4,13.5 L0.5,13.5 L0.5,18.5 L4,18.5 L9.5,22.5 L9.5,9.5 L4,13.5 Z\" stroke=\"#60798D\" fill=\"#85D2BE\"></path>\n                          <path d=\"M11.5,12.5137939 C13.7576225,12.5137939 14.5,14.3709236 14.5,16 C14.5,17.6849236 13.7089152,19.5420532 11.5,19.5420532\"\n                              stroke=\"#60798D\"></path>\n                          <path d=\"M11.5,9 C15.8037643,9.04168701 18.5,11.6604805 18.5,16 C18.5,20.3395195 15.8804302,23.0079956 11.5,23\" stroke=\"#60798D\"></path>\n                          <path d=\"M17.5219116,0.761413574 L17.5219116,6 L23,6\" stroke=\"#60798D\" fill=\"#85D2BE\"></path>\n                      </g>\n                  </g>\n              </g>\n          </svg>\n\n          <p class=\"audio-file-name\">{{ (audioMetadata | async)?.filename }}</p>\n          <p class=\"audio-file-format\">{{ (audioMetadata | async)?.description }}</p>\n          <p class=\"audio-file-size\">{{ (audioMetadata | async)?.size | fileSize }}</p>\n\n          <audio #player [src]=\"source\" (abort)=\"mediaPlayerService.abortEvent.next()\" (canplay)=\"mediaPlayerService.canPlayEvent.next(true)\"\n              (canplaythrough)=\"mediaPlayerService.canPlayThroughEvent.next(true)\" (durationchange)=\"mediaPlayerService.durationChangeEvent.next(player.duration)\" (ended)=\"mediaPlayerService.endedEvent.next()\"\n              (error)=\"mediaPlayerService.errorEvent.next($event)\" (loadeddata)=\"mediaPlayerService.loadedDataEvent.next($event)\" (loadedmetadata)=\"mediaPlayerService.loadedMetadataEvent.next($event)\"\n              (loadstart)=\"mediaPlayerService.loadStartEvent.next()\" (pause)=\"mediaPlayerService.pauseEvent.next()\" (play)=\"mediaPlayerService.playEvent.next()\" (playing)=\"mediaPlayerService.playingEvent.next(!player.paused)\"\n              (ratechange)=\"mediaPlayerService.rateChangeEvent.next(player.playbackRate)\" (seeked)=\"mediaPlayerService.seekedEvent.next(player.currentTime)\" (seeking)=\"mediaPlayerService.seekingEvent.next(player.currentTime)\"\n              (stalled)=\"mediaPlayerService.stalledEvent.next()\" (suspend)=\"mediaPlayerService.suspendEvent.next()\" (timeupdate)=\"mediaPlayerService.timeUpdateEvent.next(player.currentTime)\"\n              (volumechange)=\"mediaPlayerService.volumeChangeEvent.next(player.volume)\" (waiting)=\"mediaPlayerService.waitingEvent.next()\" (click)=\"mediaPlayerService.mediaClickEvent.next($event)\"></audio>\n      </div>\n\n      <div class=\"control-bar\">\n          <ux-media-player-timeline></ux-media-player-timeline>\n          <ux-media-player-controls></ux-media-player-controls>\n      </div>\n    `,\n    providers: [ MediaPlayerService ],\n    host: {\n        'tabindex': '0',\n        '(keydown.Space)': 'mediaPlayerService.togglePlay()',\n        '[class.standard]': '!mediaPlayerService.fullscreen',\n        '[class.fullscreen]': 'mediaPlayerService.fullscreen',\n        '[class.quiet]': 'quietMode && type === \"video\" || mediaPlayerService.fullscreen',\n        '[class.hover]': 'hovering',\n        '[class.video]': 'type === \"video\"',\n        '[class.audio]': 'type === \"audio\"',\n        '(mouseenter)': 'hovering = true',\n        '(mouseleave)': 'hovering = false',\n        '(document:webkitfullscreenchange)': 'mediaPlayerService.fullscreenChange($event)',\n        '(document:mozfullscreenchange)': 'mediaPlayerService.fullscreenChange($event)',\n        '(document:MSFullscreenChange)': 'mediaPlayerService.fullscreenChange($event)'\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: MediaPlayerService, },\n{type: AudioService, },\n{type: ElementRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'_playerRef': [{ type: ViewChild, args: ['player', ] },],\n'_trackBarRef': [{ type: ViewChild, args: ['trackBar', ] },],\n'source': [{ type: Input },],\n'type': [{ type: Input },],\n'quietMode': [{ type: Input },],\n};\n}\n\nfunction MediaPlayerComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nMediaPlayerComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMediaPlayerComponent.ctorParameters;\n/** @type {?} */\nMediaPlayerComponent.propDecorators;\n/** @type {?} */\nMediaPlayerComponent.prototype._playerRef;\n/** @type {?} */\nMediaPlayerComponent.prototype._trackBarRef;\n/** @type {?} */\nMediaPlayerComponent.prototype.hovering;\n/** @type {?} */\nMediaPlayerComponent.prototype.audioMetadata;\n/** @type {?} */\nMediaPlayerComponent.prototype._hover$;\n/** @type {?} */\nMediaPlayerComponent.prototype._clicked$;\n/** @type {?} */\nMediaPlayerComponent.prototype._paused$;\n/** @type {?} */\nMediaPlayerComponent.prototype._playing$;\n/** @type {?} */\nMediaPlayerComponent.prototype._loading$;\n/** @type {?} */\nMediaPlayerComponent.prototype.mediaPlayerService;\n/** @type {?} */\nMediaPlayerComponent.prototype._audioService;\n/** @type {?} */\nMediaPlayerComponent.prototype._elementRef;\n}\n\n\nexport type MediaPlayerType = 'video' | 'audio';\n\nexport interface MediaPlayerBuffer {\n    start: number;\n    end: number;\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, Host } from '@angular/core';\nimport { MediaPlayerService } from '../media-player.service';\nexport class MediaPlayerBaseExtensionDirective {\n/**\n * @param {?} mediaPlayerService\n */\nconstructor(public mediaPlayerService: MediaPlayerService) { }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: '[mediaPlayerBaseExtension]' \n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: MediaPlayerService, },\n];\n}\n\nfunction MediaPlayerBaseExtensionDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nMediaPlayerBaseExtensionDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMediaPlayerBaseExtensionDirective.ctorParameters;\n/** @type {?} */\nMediaPlayerBaseExtensionDirective.prototype.mediaPlayerService;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, OnInit, ViewChild, ElementRef, AfterViewInit, OnDestroy } from '@angular/core';\nimport { MediaPlayerBaseExtensionDirective } from '../base-extension.directive';\nimport { Observable } from 'rxjs/Observable';\nimport'rxjs/add/operator/switchMap';\nimport'rxjs/add/operator/takeUntil';\nimport'rxjs/add/observable/fromEvent';\nimport { Subscription } from 'rxjs/Subscription';\nexport class MediaPlayerTimelineExtensionComponent extends MediaPlayerBaseExtensionDirective implements OnInit, AfterViewInit, OnDestroy {\n\n     thumb: ElementRef;\n     timelineRef: ElementRef;\n\n    current: number = 0;\n    position: number = 0;\n    duration: number = 0;\n    buffered: MediaPlayerBuffered[] = [];\n    mouseDown: boolean = false;\n    quietMode: boolean = false;\n    fullscreen: boolean = false;\nprivate _mouseEventSubscription: Subscription;\n\n    scrub = {\n        visible: false,\n        position: 0,\n        time: 0\n    };\n/**\n * @return {?}\n */\nngOnInit(): void {\n\n        // watch for changes to the current time\n        this.mediaPlayerService.durationChangeEvent.subscribe(duration => this.duration = duration);\n        this.mediaPlayerService.quietModeEvent.subscribe(quietMode => this.quietMode = quietMode);\n        this.mediaPlayerService.fullscreenEvent.subscribe(fullscreen => {\n            this.fullscreen = fullscreen;\n            this.scrub.position = 0;\n        });\n\n        this.mediaPlayerService.timeUpdateEvent.subscribe(current => {\n            this.current = current;\n            this.position = (this.current / this.duration) * 100;\n        });\n\n        this.mediaPlayerService.progressEvent.subscribe((buffered: TimeRanges) => {\n            this.buffered = [];\n\n            for (let /** @type {?} */ idx = 0; idx < buffered.length; idx++) {\n                this.buffered.push({ start: (buffered.start(idx) / this.duration) * 100, end: (buffered.end(idx) / this.duration) * 100 });\n            }\n        });\n    }\n/**\n * @return {?}\n */\nngAfterViewInit(): void {\n        let /** @type {?} */ mousedown$ = Observable.fromEvent(this.thumb.nativeElement, 'mousedown');\n        let /** @type {?} */ mousemove$ = Observable.fromEvent(document, 'mousemove');\n        let /** @type {?} */ mouseup$ = Observable.fromEvent(document, 'mouseup');\n\n        this._mouseEventSubscription = mousedown$.switchMap(event => mousemove$.takeUntil(mouseup$)).subscribe(event => {\n            this.scrub.visible = false;\n        });\n    }\n/**\n * @return {?}\n */\nngOnDestroy() {\n        this._mouseEventSubscription.unsubscribe();\n    }\n/**\n * @param {?=} event\n * @return {?}\n */\nupdateScrub(event?: MouseEvent): void {\n\n        let /** @type {?} */ target = /** @type {?} */(( event.target as HTMLElement));\n      \n        if (target.classList.contains('media-progress-bar-thumb')) {\n            return;\n        }\n\n        let /** @type {?} */ timeline = /** @type {?} */(( this.timelineRef.nativeElement as HTMLDivElement));\n        let /** @type {?} */ bounds = timeline.getBoundingClientRect();\n\n        this.scrub.position = event.offsetX;\n        this.scrub.time = (event.offsetX / bounds.width) * this.mediaPlayerService.duration;\n\n        if (this.mouseDown) {\n            this.mediaPlayerService.pause();\n            this.mediaPlayerService.currentTime = this.scrub.time;\n        }\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-media-player-timeline',\n    template: `\n      <p class=\"current-time\">{{ current | duration }}</p>\n\n      <div #timeline class=\"timeline-bar\" (mouseenter)=\"scrub.visible = true; pop.show()\" (mouseleave)=\"scrub.visible = false; pop.hide()\"\n          (mousemove)=\"updateScrub($event)\" (mouseup)=\"updateScrub($event)\" (mousedown)=\"mouseDown = true; $event.preventDefault()\">\n\n          <div class=\"buffered-bar\" *ngFor=\"let buffer of buffered\" [style.left.%]=\"buffer.start\" [style.width.%]=\"buffer.end - buffer.start\"></div>\n\n          <div class=\"media-progress-bar\" [style.width.%]=\"position\">\n              <div #progressThumb class=\"media-progress-bar-thumb\" (mouseenter)=\"scrub.visible = false; pop.hide(); $event.stopPropagation()\"\n                  (mouseleave)=\"scrub.visible = true; pop.show(); $event.stopPropagation()\"></div>\n          </div>\n\n          <div class=\"scrub-handle\" [class.scrub-handle-hidden]=\"!scrub.visible\" [style.left.px]=\"scrub.position\" [tooltip]=\"popTemplate\" placement=\"top\" triggers=\"\" #pop=\"bs-tooltip\"\n              container=\"body\" tooltipPopupDelay=\"100\" [isDisabled]=\"duration === 0\"></div>\n      </div>\n\n      <p class=\"duration-time\">{{ duration | duration }}</p>\n\n      <ng-template #popTemplate>\n          <span>{{ scrub.time | duration }}</span>\n      </ng-template>\n    `,\n    host: {\n        '(document:mouseup)': 'mouseDown = false',\n        '[class.quiet]': 'quietMode || fullscreen'\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'thumb': [{ type: ViewChild, args: ['progressThumb', ] },],\n'timelineRef': [{ type: ViewChild, args: ['timeline', ] },],\n};\n}\n\nfunction MediaPlayerTimelineExtensionComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nMediaPlayerTimelineExtensionComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMediaPlayerTimelineExtensionComponent.ctorParameters;\n/** @type {?} */\nMediaPlayerTimelineExtensionComponent.propDecorators;\n/** @type {?} */\nMediaPlayerTimelineExtensionComponent.prototype.thumb;\n/** @type {?} */\nMediaPlayerTimelineExtensionComponent.prototype.timelineRef;\n/** @type {?} */\nMediaPlayerTimelineExtensionComponent.prototype.current;\n/** @type {?} */\nMediaPlayerTimelineExtensionComponent.prototype.position;\n/** @type {?} */\nMediaPlayerTimelineExtensionComponent.prototype.duration;\n/** @type {?} */\nMediaPlayerTimelineExtensionComponent.prototype.buffered;\n/** @type {?} */\nMediaPlayerTimelineExtensionComponent.prototype.mouseDown;\n/** @type {?} */\nMediaPlayerTimelineExtensionComponent.prototype.quietMode;\n/** @type {?} */\nMediaPlayerTimelineExtensionComponent.prototype.fullscreen;\n/** @type {?} */\nMediaPlayerTimelineExtensionComponent.prototype._mouseEventSubscription;\n/** @type {?} */\nMediaPlayerTimelineExtensionComponent.prototype.scrub;\n}\n\n\nexport interface MediaPlayerBuffered {\n    start: number;\n    end: number;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, OnInit, HostListener, ElementRef, ViewChild } from '@angular/core';\nimport { MediaPlayerBaseExtensionDirective } from '../base-extension.directive';\nimport { Observable } from 'rxjs/Observable';\nimport'rxjs/add/observable/timer';\nexport class MediaPlayerControlsExtensionComponent extends MediaPlayerBaseExtensionDirective implements OnInit {\n\n    playing: boolean;\n    quietMode: boolean;\n    fullscreen: boolean = false;\n    volumeActive: boolean = false;\n    volumeDragging: boolean = false;\n\n     volumeIcon: ElementRef;\n     volumeSlider: ElementRef;\n     volumeContainer: ElementRef;\nprivate _volume: number = 50;\nprivate _previousVolume = 50;\n/**\n * @return {?}\n */\nget volume(): number {\n        return this._volume;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset volume(value: number) {\n\n        if (value === 0 && this._volume !== 0) {\n            this._previousVolume = this._volume;\n        }\n        \n        this._volume = Math.min(Math.max(value, 0), 100);\n        this.mediaPlayerService.volume = this._volume / 100;\n    }\n/**\n * @return {?}\n */\nngOnInit(): void {\n        this.mediaPlayerService.playEvent.subscribe(_ => this.playing = true);\n        this.mediaPlayerService.pauseEvent.subscribe(_ => this.playing = false);\n        this.mediaPlayerService.quietModeEvent.subscribe(quietMode => this.quietMode = quietMode);\n        this.mediaPlayerService.volumeChangeEvent.subscribe(volume => this.volume = volume * 100);\n        this.mediaPlayerService.initEvent.debounceTime(1).filter(init => init === true).subscribe(() => this.volume = this.mediaPlayerService.volume * 100);\n        this.mediaPlayerService.fullscreenEvent.subscribe(fullscreen => this.fullscreen = fullscreen);\n\n        let /** @type {?} */ mouseenter$ = Observable.fromEvent(this.volumeIcon.nativeElement, 'mouseenter');\n        let /** @type {?} */ mouseenterContainer$ = Observable.fromEvent(this.volumeContainer.nativeElement, 'mouseenter');\n        let /** @type {?} */ mouseleaveContainer$ = Observable.fromEvent(this.volumeContainer.nativeElement, 'mouseleave');\n\n        mouseenter$.subscribe(() => this.volumeActive = true);\n        mouseleaveContainer$.switchMap(() => Observable.timer(1500).takeUntil(mouseenterContainer$)).subscribe(() => this.volumeActive = false);\n    }\n/**\n * @return {?}\n */\ntoggleMute(): void {\n        if (this.volume === 0) {\n            this.volume = this._previousVolume;\n        } else {\n            this.volume = 0;\n        }\n    }\n/**\n * @return {?}\n */\ntogglePlay(): void {\n        if (this.playing) {\n            this.mediaPlayerService.pause();\n        } else {\n            this.mediaPlayerService.play();\n        }\n    }\n/**\n * @return {?}\n */\nsetFullscreen(): void {\n        this.mediaPlayerService.toggleFullscreen();\n    }\n/**\n * @return {?}\n */\ngoToStart(): void {\n        this.mediaPlayerService.currentTime = 0;\n    }\n/**\n * @return {?}\n */\ngoToEnd(): void {\n        this.mediaPlayerService.currentTime = this.mediaPlayerService.duration;\n    }\n/**\n * @param {?} event\n * @return {?}\n */\ndragStart(event: MouseEvent): void {\n        event.preventDefault();\n        this.volumeDragging = true;\n\n        let /** @type {?} */ thumb = /** @type {?} */(( event.target as HTMLDivElement));\n        thumb.focus();\n    }\n/**\n * @param {?} event\n * @return {?}\n */\ndragMove(event: MouseEvent): void {\n        if (!this.volumeDragging) {\n            return;\n        }\n\n        event.preventDefault();\n\n        let /** @type {?} */ slider = /** @type {?} */(( this.volumeSlider.nativeElement as HTMLDivElement));\n        let /** @type {?} */ bounds = slider.getBoundingClientRect();\n\n        let /** @type {?} */ x = Math.min(bounds.width, Math.max(0, event.pageX - bounds.left));\n\n        // convert to a percentage\n        this.volume = (x / bounds.width) * 100;\n    }\n/**\n * @return {?}\n */\ndragEnd(): void {\n        this.volumeDragging = false;        \n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-media-player-controls',\n    template: `\n      <div class=\"volume-container\">\n\n          <div class=\"volume-slider-container\" #volumeContainer [class.active]=\"volumeActive\">\n              <div class=\"volume-slider-icon\" #volumeIcon>\n                  <span class=\"hpe-icon\" [class.hpe-volume-mute]=\"volume === 0\" [class.hpe-volume-low]=\"volume > 0 && volume <= 70\" [class.hpe-volume]=\"volume > 70\" [tooltip]=\"muteTooltip\" (click)=\"toggleMute()\"></span>\n              </div>\n        \n              <div class=\"volume-slider-node\">\n                  <div class=\"volume-slider\" #volumeSlider>\n                      <div class=\"volume-track-lower\" [style.width.%]=\"volume\"></div>\n                      <div class=\"volume-slider-thumb\" (mousedown)=\"dragStart($event)\" [style.left.%]=\"volume\" tabindex=\"0\" (keydown.ArrowRight)=\"volume = volume + 10\" (keydown.ArrowLeft)=\"volume = volume - 10\"></div>\n                  </div>\n              </div>\n          </div>\n      </div>\n\n      <div class=\"spacer\"></div>\n\n      <svg viewBox=\"0 0 51.5 64\" width=\"14\" height=\"17\" class=\"control-button\" (click)=\"goToStart()\">\n          <rect x=\"0\" y=\"0\" width=\"7.5\" height=\"64\" />\n          <polygon points=\"51.5,64 51.5,0 7.4,32 \" />\n      </svg>\n\n      <svg viewBox=\"0 0 45 64\" width=\"20\" height=\"29\" class=\"control-button\" *ngIf=\"!playing\" (click)=\"togglePlay()\">\n          <polygon points=\"0.4,0 0.4,64 44.6,32\" />\n      </svg>\n\n      <svg viewBox=\"0 0 43 56.9\" class=\"control-button\" width=\"20\" height=\"29\" *ngIf=\"playing\" (click)=\"togglePlay()\">\n          <rect y=\"0.1\" width=\"15.7\" height=\"56.9\" />\n          <rect x=\"27.3\" y=\"0.1\" width=\"15.7\" height=\"56.9\" />\n      </svg>\n\n      <svg viewBox=\"0 0 51.5 64\" width=\"14\" height=\"17\" class=\"control-button\" (click)=\"goToEnd()\">\n          <rect x=\"44.1\" y=\"0\" width=\"7.5\" height=\"64\" />\n          <polygon points=\"0,64 0,0 44.1,32 \" />\n      </svg>\n\n      <div class=\"spacer\"></div>\n\n      <span class=\"hpe-icon\" *ngIf=\"mediaPlayerService.type !== 'audio'\" [class.hpe-expand]=\"!mediaPlayerService.fullscreen\" [class.hpe-contract]=\"mediaPlayerService.fullscreen\"\n          (click)=\"setFullscreen()\"></span>\n\n      <ng-template #muteTooltip>{{ volume === 0 ? 'Unmute' : 'Mute' }}</ng-template>\n    `,\n    host: {\n        '[class.quiet]': 'quietMode || fullscreen'\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'volumeIcon': [{ type: ViewChild, args: ['volumeIcon', ] },],\n'volumeSlider': [{ type: ViewChild, args: ['volumeSlider', ] },],\n'volumeContainer': [{ type: ViewChild, args: ['volumeContainer', ] },],\n'dragMove': [{ type: HostListener, args: ['document:mousemove', ['$event'], ] },],\n'dragEnd': [{ type: HostListener, args: ['document:mouseup', ] },],\n};\n}\n\nfunction MediaPlayerControlsExtensionComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nMediaPlayerControlsExtensionComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMediaPlayerControlsExtensionComponent.ctorParameters;\n/** @type {?} */\nMediaPlayerControlsExtensionComponent.propDecorators;\n/** @type {?} */\nMediaPlayerControlsExtensionComponent.prototype.playing;\n/** @type {?} */\nMediaPlayerControlsExtensionComponent.prototype.quietMode;\n/** @type {?} */\nMediaPlayerControlsExtensionComponent.prototype.fullscreen;\n/** @type {?} */\nMediaPlayerControlsExtensionComponent.prototype.volumeActive;\n/** @type {?} */\nMediaPlayerControlsExtensionComponent.prototype.volumeDragging;\n/** @type {?} */\nMediaPlayerControlsExtensionComponent.prototype.volumeIcon;\n/** @type {?} */\nMediaPlayerControlsExtensionComponent.prototype.volumeSlider;\n/** @type {?} */\nMediaPlayerControlsExtensionComponent.prototype.volumeContainer;\n/** @type {?} */\nMediaPlayerControlsExtensionComponent.prototype._volume;\n/** @type {?} */\nMediaPlayerControlsExtensionComponent.prototype._previousVolume;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nexport class DurationPipe implements PipeTransform {\n/**\n * @param {?} seconds\n * @return {?}\n */\ntransform(seconds: number): any {\n\n        let /** @type {?} */ minutes = Math.floor(seconds / 60);\n        let /** @type {?} */ hours = Math.floor(minutes / 60);\n        let /** @type {?} */ days = Math.floor(hours / 24);\n\n        hours = hours - (days * 24);\n        minutes = minutes - (days * 24 * 60) - (hours * 60);\n        seconds = Math.floor(seconds - (days * 24 * 60 * 60) - (hours * 60 * 60) - (minutes * 60));\n\n        if (hours > 0) {\n            return `${this.pad(hours)}:${this.pad(minutes)}:${this.pad(seconds)}`;\n        } else {\n            return `${this.pad(minutes)}:${this.pad(seconds)}`;\n        }\n    }\n/**\n * @param {?} value\n * @return {?}\n */\npad(value: number): string {\n        if (value < 10) {\n            return `0${value}`;\n        }\n\n        return value.toString();\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Pipe, args: [{\n    name: 'duration'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction DurationPipe_tsickle_Closure_declarations() {\n/** @type {?} */\nDurationPipe.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDurationPipe.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\n\nimport { DurationPipe } from './duration.pipe';\nexport class DurationPipeModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    exports: [DurationPipe],\n    declarations: [DurationPipe]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction DurationPipeModule_tsickle_Closure_declarations() {\n/** @type {?} */\nDurationPipeModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDurationPipeModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nexport class FileSizePipe implements PipeTransform {\n/**\n * @param {?} value\n * @return {?}\n */\ntransform(value: number): any {\n\n        // allow for async values\n        if (!value) {\n            return value;\n        }\n        \n        let /** @type {?} */ units = ['B', 'KB', 'MB', 'GB', 'TB'];\n\n        // calculate the which unit bracket the values should be a part of\n        let /** @type {?} */ idx = Math.floor(Math.log(value) / Math.log(1024));\n        let /** @type {?} */ formattedValue = value / Math.pow(1024, idx);\n        \n        return `${formattedValue.toFixed(2)} ${units[idx]}`;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Pipe, args: [{\n    name: 'fileSize'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction FileSizePipe_tsickle_Closure_declarations() {\n/** @type {?} */\nFileSizePipe.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFileSizePipe.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\n\nimport { FileSizePipe } from './file-size.pipe';\nexport class FileSizePipeModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    exports: [FileSizePipe],\n    declarations: [FileSizePipe]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction FileSizePipeModule_tsickle_Closure_declarations() {\n/** @type {?} */\nFileSizePipeModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFileSizePipeModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { MediaPlayerComponent } from './media-player.component';\nimport { MediaPlayerTimelineExtensionComponent } from './extensions/timeline/timeline.component';\nimport { MediaPlayerBaseExtensionDirective } from './extensions/base-extension.directive';\nimport { MediaPlayerControlsExtensionComponent } from './extensions/controls/controls.component';\nimport { FrameExtractionModule } from '../../services/frame-extraction/frame-extraction.module';\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\nimport { AudioServiceModule } from '../../services/audio/index';\nimport { DurationPipeModule } from '../../pipes/duration/index';\nimport { FileSizePipeModule } from '../../pipes/file-size/index';\nimport { MediaPlayerService } from './media-player.service';\n\nconst /** @type {?} */ DECLARATIONS = [\n    MediaPlayerComponent,\n    MediaPlayerTimelineExtensionComponent,\n    MediaPlayerBaseExtensionDirective,\n    MediaPlayerControlsExtensionComponent\n];\nexport class MediaPlayerModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        CommonModule,\n        FrameExtractionModule,\n        TooltipModule.forRoot(),\n        AudioServiceModule,\n        DurationPipeModule,\n        FileSizePipeModule\n    ],\n    exports: DECLARATIONS,\n    declarations: DECLARATIONS,\n    providers: [MediaPlayerService]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction MediaPlayerModule_tsickle_Closure_declarations() {\n/** @type {?} */\nMediaPlayerModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMediaPlayerModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive } from '@angular/core';\nexport class VirtualScrollLoadingDirective { static decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{ \n    selector: '[uxVirtualScrollLoading]' \n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction VirtualScrollLoadingDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nVirtualScrollLoadingDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nVirtualScrollLoadingDirective.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive } from '@angular/core';\nexport class VirtualScrollLoadButtonDirective { static decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: '[uxVirtualScrollLoadButton]' \n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction VirtualScrollLoadButtonDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nVirtualScrollLoadButtonDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nVirtualScrollLoadButtonDirective.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive } from '@angular/core';\nexport class VirtualScrollCellDirective {\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{ \n    selector: '[uxVirtualScrollCell]' \n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction VirtualScrollCellDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nVirtualScrollCellDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nVirtualScrollCellDirective.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, OnInit, EventEmitter, Output, Input, HostListener, ElementRef, AfterContentInit, ContentChild, TemplateRef, OnDestroy, SimpleChanges } from '@angular/core';\nimport { ResizeService } from '../../directives/resize/index';\nimport { VirtualScrollLoadingDirective } from './directives/virtual-scroll-loading.directive';\nimport { VirtualScrollLoadButtonDirective } from './directives/virtual-scroll-load-button.directive';\nimport { VirtualScrollCellDirective } from './directives/virtual-scroll-cell.directive';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { Observable } from 'rxjs/Observable';\nimport { Subscription } from 'rxjs/Subscription';\nexport class VirtualScrollComponent implements OnInit, AfterContentInit, OnDestroy {\n\n     collection: Observable<any[]> = Observable.create();\n     cellHeight: number;\n     loadOnScroll: boolean = true;\n\n     loading: EventEmitter<number> = new EventEmitter<number>();\n\n     cellTemplate: TemplateRef<any>;\n     loadingIndicatorTemplate: TemplateRef<any>;\n     loadButtonTemplate: TemplateRef<any>;\n\n    cells: BehaviorSubject<any[]> = new BehaviorSubject([]);\n    scrollTop: number = 0;\n    isLoading: boolean = false;\n    pageNumber: number = 0;\n    data: any[] = [];\n    loadingComplete: boolean = false;\nprivate _subscription: Subscription;\nprivate _height: number;\n/**\n * @param {?} _elementRef\n * @param {?} resizeService\n */\nconstructor(private _elementRef: ElementRef, resizeService: ResizeService) {\n\n        // watch for any future changes to size\n        resizeService.addResizeListener(_elementRef.nativeElement).subscribe(event => this._height = event.height);\n    }\n/**\n * @return {?}\n */\nngOnInit() {\n\n        if (!this.cellHeight) {\n            throw new Error('Virtual Scroll Component requires \"cellHeight\" property to be defined.');\n        }\n\n        // subscribe to the collection\n        this.setupObservable();\n\n        // load the first page of data\n        this.loadNextPage();\n    }\n/**\n * @return {?}\n */\nngAfterContentInit(): void {\n        // re-render cells now that we can display any loading indicator or loading button\n        this.renderCells();\n    }\n/**\n * @param {?} changes\n * @return {?}\n */\nngOnChanges(changes: SimpleChanges): void {\n        if (changes.collection && changes.collection.currentValue !== changes.collection.previousValue && !changes.collection.isFirstChange()) {\n            this.setupObservable();\n            this.reset();\n        }\n    }\n/**\n * @return {?}\n */\nngOnDestroy(): void {\n        this._subscription.unsubscribe();\n    }\n/**\n * @return {?}\n */\nsetupObservable(): void {\n\n        // if there is a current subscription, unsubscribe\n        if (this._subscription && this._subscription.unsubscribe) {\n            this._subscription.unsubscribe();\n        }\n\n        this._subscription = this.collection.subscribe(collection => {\n            this.data.push(...collection);\n            this.renderCells();\n            this.isLoading = false;\n        }, null, () => {\n            this.loadingComplete = true;\n        });\n    }\n/**\n * @return {?}\n */\nrenderCells(): void {\n        this.cells.next(this.getVisibleCells());\n\n        if (this.loadOnScroll && !this.isLoading && !this.loadingComplete) {\n            const /** @type {?} */ remainingScroll = this._elementRef.nativeElement.scrollHeight - (this._elementRef.nativeElement.scrollTop + this._elementRef.nativeElement.clientHeight);\n\n            // if the current cells take up less than the height of the component then load the next page\n            if (remainingScroll <= this._elementRef.nativeElement.clientHeight) {\n                this.loadNextPage();\n            }\n        }\n    }\n/**\n * @return {?}\n */\ngetVisibleCells(): any[] {\n\n        // store the initial element height\n        if (!this._height) {\n            this._height = this._elementRef.nativeElement.offsetHeight;\n        }\n\n        // perform some calculations\n        const /** @type {?} */ scrollTop = this._elementRef.nativeElement.scrollTop;\n        const /** @type {?} */ startCell = Math.floor(scrollTop / this.cellHeight);\n        const /** @type {?} */ endCell = Math.ceil(this._height / this.cellHeight) + 1;\n\n        // update the scroll position\n        this.scrollTop = scrollTop - (scrollTop % this.cellHeight);\n\n        // return a sublist of items visible on the screen\n        return this.data.slice(startCell, startCell + endCell);\n    }\n/**\n * @return {?}\n */\ngetTotalHeight(): number {\n        return this.cellHeight * this.data.length;\n    }\n/**\n * @return {?}\n */\nloadNextPage(): void {\n        this.isLoading = true;\n        this.loading.next(this.pageNumber);\n        this.pageNumber++;\n    }\n/**\n * @return {?}\n */\nreset(): void {\n\n        // reset all values\n        this.scrollTop = 0;\n        this.data = [];\n        this._height = undefined;\n        this.pageNumber = 0;\n        this.loadingComplete = false;\n\n        // set scroll position\n        this._elementRef.nativeElement.scrollTop = 0;\n\n        // clear the current cells\n        this.renderCells();\n\n        // reload first page\n        this.loadNextPage();\n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-virtual-scroll',\n    template: `\n      <div class=\"virtual-scroll-content-height\" [style.height.px]=\"getTotalHeight()\"></div>\n      <div class=\"virtual-scroll-content\" [style.transform]=\"'translateY(' + scrollTop + 'px)'\">\n\n          <!-- Virtually Render Cells -->\n          <ng-container *ngFor=\"let cell of cells | async\">\n              <ng-container *ngTemplateOutlet=\"cellTemplate; context: { cell: cell }\"></ng-container>\n          </ng-container>\n\n          <!-- Loading Indicator -->\n          <ng-container *ngIf=\"loadingIndicatorTemplate && isLoading\" [ngTemplateOutlet]=\"loadingIndicatorTemplate\"></ng-container>\n\n          <!-- Loading Button -->\n          <div class=\"virtual-scroll-load-button\" *ngIf=\"loadButtonTemplate && !loadOnScroll && !loadingComplete && !isLoading\" (click)=\"loadNextPage()\">\n              <ng-container *ngTemplateOutlet=\"loadButtonTemplate\"></ng-container>\n          </div>\n    \n      </div>\n    `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: ResizeService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'collection': [{ type: Input },],\n'cellHeight': [{ type: Input },],\n'loadOnScroll': [{ type: Input },],\n'loading': [{ type: Output },],\n'cellTemplate': [{ type: ContentChild, args: [VirtualScrollCellDirective, { read: TemplateRef }, ] },],\n'loadingIndicatorTemplate': [{ type: ContentChild, args: [VirtualScrollLoadingDirective, { read: TemplateRef }, ] },],\n'loadButtonTemplate': [{ type: ContentChild, args: [VirtualScrollLoadButtonDirective, { read: TemplateRef }, ] },],\n'renderCells': [{ type: HostListener, args: ['scroll', ] },],\n};\n}\n\nfunction VirtualScrollComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nVirtualScrollComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nVirtualScrollComponent.ctorParameters;\n/** @type {?} */\nVirtualScrollComponent.propDecorators;\n/** @type {?} */\nVirtualScrollComponent.prototype.collection;\n/** @type {?} */\nVirtualScrollComponent.prototype.cellHeight;\n/** @type {?} */\nVirtualScrollComponent.prototype.loadOnScroll;\n/** @type {?} */\nVirtualScrollComponent.prototype.loading;\n/** @type {?} */\nVirtualScrollComponent.prototype.cellTemplate;\n/** @type {?} */\nVirtualScrollComponent.prototype.loadingIndicatorTemplate;\n/** @type {?} */\nVirtualScrollComponent.prototype.loadButtonTemplate;\n/** @type {?} */\nVirtualScrollComponent.prototype.cells;\n/** @type {?} */\nVirtualScrollComponent.prototype.scrollTop;\n/** @type {?} */\nVirtualScrollComponent.prototype.isLoading;\n/** @type {?} */\nVirtualScrollComponent.prototype.pageNumber;\n/** @type {?} */\nVirtualScrollComponent.prototype.data;\n/** @type {?} */\nVirtualScrollComponent.prototype.loadingComplete;\n/** @type {?} */\nVirtualScrollComponent.prototype._subscription;\n/** @type {?} */\nVirtualScrollComponent.prototype._height;\n/** @type {?} */\nVirtualScrollComponent.prototype._elementRef;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { VirtualScrollComponent } from './virtual-scroll.component';\nimport { ResizeModule } from '../../directives/resize/index';\nimport { VirtualScrollLoadingDirective } from './directives/virtual-scroll-loading.directive';\nimport { VirtualScrollLoadButtonDirective } from './directives/virtual-scroll-load-button.directive';\nimport { VirtualScrollCellDirective } from './directives/virtual-scroll-cell.directive';\n\nconst /** @type {?} */ DECLARATIONS = [\n    VirtualScrollComponent,\n    VirtualScrollLoadingDirective,\n    VirtualScrollLoadButtonDirective,\n    VirtualScrollCellDirective\n];\nexport class VirtualScrollModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        CommonModule,\n        ResizeModule\n    ],\n    exports: DECLARATIONS,\n    declarations: DECLARATIONS\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction VirtualScrollModule_tsickle_Closure_declarations() {\n/** @type {?} */\nVirtualScrollModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nVirtualScrollModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { AfterViewInit, Directive, ElementRef, HostListener, Renderer2 } from '@angular/core';\nexport class AutoGrowDirective implements AfterViewInit {\n/**\n * @param {?} _elementRef\n * @param {?} _renderer\n */\nconstructor(private _elementRef: ElementRef,\nprivate _renderer: Renderer2) {\n    // ensure this is a textarea or else throw error\n    if (_elementRef.nativeElement.tagName.toLowerCase() !== 'textarea') {\n      throw new Error('uxAutoGrow directive can only be used on <textarea> elements.');\n    }\n  }\n/**\n * @return {?}\n */\nngAfterViewInit(): void {\n    this.update();\n  }\n/**\n * @return {?}\n */\nupdate(): void {\n\n    // get computed style of element\n    const { paddingTop, paddingBottom } = getComputedStyle(this._elementRef.nativeElement);\n\n    // perform sizing\n    this._renderer.setStyle(this._elementRef.nativeElement, 'overflowY', 'hidden');\n    this._renderer.setStyle(this._elementRef.nativeElement, 'height', 'auto');\n\n    // get the new total height and element height\n    const { scrollHeight } = this._elementRef.nativeElement;\n    const { maxHeight } = getComputedStyle(this._elementRef.nativeElement);\n\n    // determine what the maximum allowed height is\n    const /** @type {?} */ maximum = !isNaN(parseFloat(maxHeight)) ? parseFloat(maxHeight) : Infinity;\n\n    // if there is a max height specifed we want to show the scrollbars\n    if (maximum < scrollHeight) {\n      this._renderer.setStyle(this._elementRef.nativeElement, 'overflowY', 'auto');\n      this._renderer.setStyle(this._elementRef.nativeElement, 'height', maximum + 'px');\n    } else {\n      this._renderer.setStyle(this._elementRef.nativeElement, 'height', scrollHeight + 'px');\n    }\n  }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[uxAutoGrow]'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Renderer2, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'update': [{ type: HostListener, args: ['input', ] },],\n};\n}\n\nfunction AutoGrowDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nAutoGrowDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nAutoGrowDirective.ctorParameters;\n/** @type {?} */\nAutoGrowDirective.propDecorators;\n/** @type {?} */\nAutoGrowDirective.prototype._elementRef;\n/** @type {?} */\nAutoGrowDirective.prototype._renderer;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\n\nimport { AutoGrowDirective } from './auto-grow.directive';\nexport class AutoGrowModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    exports: [AutoGrowDirective],\n    declarations: [AutoGrowDirective]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction AutoGrowModule_tsickle_Closure_declarations() {\n/** @type {?} */\nAutoGrowModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nAutoGrowModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ElementRef, OnInit, Renderer2, Input, Output, EventEmitter } from '@angular/core';\nexport class FixedHeaderTableDirective implements OnInit {\n\n   tableHeight: number | string;\n   tablePaging: EventEmitter<number> = new EventEmitter<number>();\nprivate _tableHead: HTMLElement;\nprivate _tableBody: HTMLElement;\n/**\n * @param {?} _elementRef\n * @param {?} _renderer\n */\nconstructor(private _elementRef: ElementRef,\nprivate _renderer: Renderer2) { }\n/**\n * @return {?}\n */\nngOnInit(): void {\n\n    // add class to the table\n    this._renderer.addClass(this._elementRef.nativeElement, 'ux-fixed-header-table');\n\n    // locate the important elements\n    this._tableHead = this._elementRef.nativeElement.querySelector('thead');\n    this._tableBody = this._elementRef.nativeElement.querySelector('tbody');\n\n    // bind to scroll events on the table body\n    this._renderer.listen(this._tableBody, 'scroll', this.onScroll.bind(this));\n\n    // resize the table header to account for scrollbar\n    this.setLayout();\n\n    // trigger the loading of the first page\n    this.tablePaging.emit();\n  }\n/**\n * Get the table element\n * Primarily used by column width directive\n * @return {?}\n */\ngetTable(): HTMLTableElement {\n    return this._elementRef.nativeElement;\n  }\n/**\n * Handle scroll events\n * @param {?} event\n * @return {?}\n */\nprivate onScroll(event: MouseEvent): void {\n\n    // determine if we are scrolled to the bottom and if so load the next page\n    if (this._tableBody.scrollTop === (this._tableBody.scrollHeight - this._tableBody.offsetHeight)) {\n      this.tablePaging.emit();\n    }\n  }\n/**\n * Update the size of the table header to account for the scrollbar.\n * This is important to keep the columns aligned\n * @return {?}\n */\nprivate setLayout(): void {\n\n    // calculate the size of the scrollbar\n    const /** @type {?} */ scrollbar = this._tableBody.offsetWidth - this._tableBody.clientWidth;\n\n    // add padding to the header to account for this\n    this._renderer.setStyle(this._tableHead, 'padding-right', scrollbar + 'px');\n\n    // set the desired height of the table body\n    this._renderer.setStyle(this._tableBody, 'height', typeof this.tableHeight === 'number' ? `${this.tableHeight}px` : this.tableHeight);\n  }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[uxFixedHeaderTable]'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Renderer2, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'tableHeight': [{ type: Input },],\n'tablePaging': [{ type: Output },],\n};\n}\n\nfunction FixedHeaderTableDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nFixedHeaderTableDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFixedHeaderTableDirective.ctorParameters;\n/** @type {?} */\nFixedHeaderTableDirective.propDecorators;\n/** @type {?} */\nFixedHeaderTableDirective.prototype.tableHeight;\n/** @type {?} */\nFixedHeaderTableDirective.prototype.tablePaging;\n/** @type {?} */\nFixedHeaderTableDirective.prototype._tableHead;\n/** @type {?} */\nFixedHeaderTableDirective.prototype._tableBody;\n/** @type {?} */\nFixedHeaderTableDirective.prototype._elementRef;\n/** @type {?} */\nFixedHeaderTableDirective.prototype._renderer;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\n\nimport { FixedHeaderTableDirective } from './fixed-header-table.directive';\nexport class FixedHeaderTableModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    exports: [FixedHeaderTableDirective],\n    declarations: [FixedHeaderTableDirective]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction FixedHeaderTableModule_tsickle_Closure_declarations() {\n/** @type {?} */\nFixedHeaderTableModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFixedHeaderTableModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, Input, OnInit, TemplateRef, Renderer2, OnDestroy, HostBinding, OnChanges, ElementRef } from '@angular/core';\nexport class FloatLabelDirective implements OnInit, OnChanges, OnDestroy {\n\n    \n    input: HTMLInputElement;\n\n    \n    value: any;\n\n    \n    mode: 'focus' | 'input' = 'focus';\n\n    \n    raised: boolean = false;\nprivate _focused = false;\nprivate _eventHandles: any[] = [];\n/**\n * @param {?} _elementRef\n * @param {?} _renderer\n */\nconstructor(private _elementRef: ElementRef,\nprivate _renderer: Renderer2) { }\n/**\n * @return {?}\n */\nngOnInit(): void {\n        this._eventHandles.push(\n            this._renderer.listen(this.input, 'focus', this.inputFocus.bind(this)),\n            this._renderer.listen(this.input, 'blur', this.inputBlur.bind(this)),\n            this._renderer.listen(this.input, 'input', this.inputChange.bind(this))\n        );\n\n        // Check initial input value\n        this.raised = this.hasText();\n\n        // Ensure that the `for` attribute is set\n        if (!this._elementRef.nativeElement.getAttribute('for') && this.input.getAttribute('id')) {\n            this._renderer.setAttribute(this._elementRef.nativeElement, 'for', this.input.getAttribute('id'));\n        }\n    }\n/**\n * @return {?}\n */\nngOnChanges(): void {\n        if (!(this.mode === 'focus' && this._focused)) {\n            this.raised = this.hasText();\n        }\n    }\n/**\n * @return {?}\n */\nngOnDestroy(): void {\n        // Unsubscribe event handles\n        this._eventHandles.forEach((eventHandle) => eventHandle());\n    }\n/**\n * @return {?}\n */\nprivate hasText(): boolean {\n        if (this.value === undefined) {\n            return !!this.input.value;\n        }\n        return !!this.value;\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nprivate inputFocus(event: Event): void {\n        if (this.mode === 'focus') {\n            this._focused = true;\n            this.raised = true;\n        }\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nprivate inputBlur(event: Event): void {\n        if (this.mode === 'focus') {\n            this._focused = false;\n            this.raised = this.hasText();\n        }\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nprivate inputChange(event: Event): void {\n        if (this.mode === 'input') {\n            this.raised = this.hasText();\n        }\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: '[uxFloatLabel]',\n    host: {\n        'class': 'ux-float-label'\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Renderer2, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'input': [{ type: Input, args: ['uxFloatLabel', ] },],\n'value': [{ type: Input },],\n'mode': [{ type: Input },],\n'raised': [{ type: HostBinding, args: ['class.ux-float-label-raised', ] },],\n};\n}\n\nfunction FloatLabelDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nFloatLabelDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFloatLabelDirective.ctorParameters;\n/** @type {?} */\nFloatLabelDirective.propDecorators;\n/** @type {?} */\nFloatLabelDirective.prototype.input;\n/** @type {?} */\nFloatLabelDirective.prototype.value;\n/** @type {?} */\nFloatLabelDirective.prototype.mode;\n/** @type {?} */\nFloatLabelDirective.prototype.raised;\n/** @type {?} */\nFloatLabelDirective.prototype._focused;\n/** @type {?} */\nFloatLabelDirective.prototype._eventHandles;\n/** @type {?} */\nFloatLabelDirective.prototype._elementRef;\n/** @type {?} */\nFloatLabelDirective.prototype._renderer;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\n\nimport { FloatLabelDirective } from './float-label.directive';\nexport class FloatLabelModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [],\n    exports: [FloatLabelDirective],\n    declarations: [FloatLabelDirective],\n    providers: [],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction FloatLabelModule_tsickle_Closure_declarations() {\n/** @type {?} */\nFloatLabelModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFloatLabelModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nexport class HelpCenterService {\n\n    items: BehaviorSubject<HelpCenterItem[]> = new BehaviorSubject<HelpCenterItem[]>([]);\n/**\n * @param {?} item\n * @return {?}\n */\nregisterItem(item: HelpCenterItem): void {\n\n        // get the current items\n        let /** @type {?} */ items = this.items.getValue();\n\n        // add the new item to the list\n        items.push(item);\n\n        // update the observable\n        this.items.next(items);\n    }\n/**\n * @param {?} item\n * @return {?}\n */\nunregisterItem(item: HelpCenterItem): void {\n\n        // get the current items\n        let /** @type {?} */ items = this.items.getValue();\n\n        // remove the item being unregistered\n        items = items.filter(itm => itm !== item);\n\n        // update the observable\n        this.items.next(items);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction HelpCenterService_tsickle_Closure_declarations() {\n/** @type {?} */\nHelpCenterService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nHelpCenterService.ctorParameters;\n/** @type {?} */\nHelpCenterService.prototype.items;\n}\n\n\nexport interface HelpCenterItem {\n    icon?: string;\n    title: string;\n    select?: () => void;\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, Input, OnInit, OnDestroy } from '@angular/core';\nimport { HelpCenterService, HelpCenterItem } from './help-center.service';\nexport class HelpCenterItemDirective implements OnInit, OnDestroy {\n\n     uxHelpCenterItem: HelpCenterItem;\n/**\n * @param {?} _helpCenterService\n */\nconstructor(private _helpCenterService: HelpCenterService) { }\n/**\n * @return {?}\n */\nngOnInit(): void {\n\n        // register the item in the service\n        this._helpCenterService.registerItem(this.uxHelpCenterItem);\n    }\n/**\n * @return {?}\n */\nngOnDestroy(): void {\n        // remove this item when it is destroyed\n        this._helpCenterService.unregisterItem(this.uxHelpCenterItem);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{ selector: '[uxHelpCenterItem]' }, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: HelpCenterService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'uxHelpCenterItem': [{ type: Input },],\n};\n}\n\nfunction HelpCenterItemDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nHelpCenterItemDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nHelpCenterItemDirective.ctorParameters;\n/** @type {?} */\nHelpCenterItemDirective.propDecorators;\n/** @type {?} */\nHelpCenterItemDirective.prototype.uxHelpCenterItem;\n/** @type {?} */\nHelpCenterItemDirective.prototype._helpCenterService;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { HelpCenterItemDirective } from './help-center-item.directive';\nimport { HelpCenterService } from './help-center.service';\nexport class HelpCenterModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [],\n    exports: [HelpCenterItemDirective],\n    declarations: [HelpCenterItemDirective],\n    providers: [HelpCenterService],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction HelpCenterModule_tsickle_Closure_declarations() {\n/** @type {?} */\nHelpCenterModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nHelpCenterModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs/Subject';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { HoverActionDirective } from './hover-action.directive';\nimport { HoverActionContainerDirective } from './hover-action-container.directive';\nexport class HoverActionService {\n\n    active: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\nprivate _container: HoverActionContainerDirective;\nprivate _focused: boolean = false;\nprivate _hovered: boolean = false;\nprivate _actions: HoverActionDirective[] = [];\n/**\n * @param {?} action\n * @return {?}\n */\nregister(action: HoverActionDirective): void {\n        this._actions.push(action);\n    }\n/**\n * @param {?} action\n * @return {?}\n */\nunregister(action: HoverActionDirective): void {\n        this._actions = this._actions.filter(actn => actn !== action);\n    }\n/**\n * @param {?} container\n * @return {?}\n */\nsetContainer(container: HoverActionContainerDirective): void {\n        this._container = container;\n    }\n/**\n * @param {?} focus\n * @return {?}\n */\nsetFocusState(focus: boolean): void {\n        this._focused = focus;\n        this.updateVisibility();\n    }\n/**\n * @param {?} hover\n * @return {?}\n */\nsetHoverState(hover: boolean): void {\n        this._hovered = hover;\n        this.updateVisibility();\n    }\n/**\n * @return {?}\n */\nnext(): void {\n\n        // if container has focus then focus the first hover action\n        if (this.containerHasFocus()) {\n            this.focusActionAtIndex(0);\n            return this.updateVisibility();\n        }\n\n        // if a hover action has focus then focus the next action\n        if (this.actionHasFocus()) {\n            let /** @type {?} */ index = this.getFocusedActionIndex() + 1;\n            this.focusActionAtIndex(index);\n            this.updateVisibility();\n        }\n    }\n/**\n * @return {?}\n */\nprevious(): void {\n        // if a hover action has focus then focus the previous action\n        if (this.actionHasFocus()) {\n            let /** @type {?} */ index = this.getFocusedActionIndex() - 1;\n\n            if (index >= 0) {\n                this.focusActionAtIndex(index);\n            } else {\n                this._container.focus();\n            }\n        }\n\n        this.updateVisibility();\n    }\n/**\n * @return {?}\n */\nupdateVisibility(): void {\n        this.active.next(this._focused || this._hovered || this.actionHasFocus());\n    }\n/**\n * @param {?} index\n * @return {?}\n */\nprivate focusActionAtIndex(index: number): void {\n        if (index >= 0 && index < this._actions.length) {\n            this._actions[index].focus();\n        }\n    }\n/**\n * @return {?}\n */\nprivate getFocusedActionIndex(): number {\n        return this._actions.findIndex(action => action === this.getFocusedAction());\n    }\n/**\n * @return {?}\n */\nprivate containerHasFocus(): boolean {\n        return this._focused;\n    }\n/**\n * @return {?}\n */\nprivate actionHasFocus(): boolean {\n        return !!this.getFocusedAction();\n    }\n/**\n * @return {?}\n */\nprivate getFocusedAction(): HoverActionDirective {\n        return this._actions.find(action => action.focused);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction HoverActionService_tsickle_Closure_declarations() {\n/** @type {?} */\nHoverActionService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nHoverActionService.ctorParameters;\n/** @type {?} */\nHoverActionService.prototype.active;\n/** @type {?} */\nHoverActionService.prototype._container;\n/** @type {?} */\nHoverActionService.prototype._focused;\n/** @type {?} */\nHoverActionService.prototype._hovered;\n/** @type {?} */\nHoverActionService.prototype._actions;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ContentChildren, QueryList, HostListener, ElementRef, OnDestroy, Input } from '@angular/core';\nimport { HoverActionDirective } from './hover-action.directive';\nimport { HoverActionService } from './hover-action.service';\nimport { Subscription } from 'rxjs/Subscription';\nexport class HoverActionContainerDirective implements OnDestroy {\n\n     tabindex: number = 0;\n    active: boolean = false;\nprivate active$: Subscription;\n/**\n * @param {?} _elementRef\n * @param {?} _hoverActionService\n */\nconstructor(private _elementRef: ElementRef,\nprivate _hoverActionService: HoverActionService) {\n        // register the container element with the service\n        this._hoverActionService.setContainer(this);\n        \n        // apply a class based on the active state of the container and it's actions\n        this.active$ = this._hoverActionService.active.subscribe(active => this.active = active);\n    }\n/**\n * @return {?}\n */\nngOnDestroy(): void {\n        this.active$.unsubscribe();\n    }\n/**\n * @return {?}\n */\nfocus(): void {\n        this._elementRef.nativeElement.focus();\n    }\n/**\n * @return {?}\n */\nonFocus(): void {\n        this._hoverActionService.setFocusState(true);\n    }\n/**\n * @return {?}\n */\nonBlur(): void {\n        this._hoverActionService.setFocusState(false);\n    }\n/**\n * @return {?}\n */\nonHover(): void {\n        this._hoverActionService.setHoverState(true);\n    }\n/**\n * @return {?}\n */\nonLeave(): void {\n        this._hoverActionService.setHoverState(false);\n    }\n/**\n * @return {?}\n */\nnext(): void {\n        this._hoverActionService.next();\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: '[uxHoverActionContainer]',\n    providers: [HoverActionService],\n    host: {\n        '[class.hover-action-container-active]': 'active',\n        '[tabindex]': 'tabindex'\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: HoverActionService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'tabindex': [{ type: Input },],\n'focus': [{ type: HostListener, args: ['click', ] },],\n'onFocus': [{ type: HostListener, args: ['focus', ] },],\n'onBlur': [{ type: HostListener, args: ['blur', ] },],\n'onHover': [{ type: HostListener, args: ['mouseenter', ] },],\n'onLeave': [{ type: HostListener, args: ['mouseleave', ] },],\n'next': [{ type: HostListener, args: ['keydown.arrowright', ] },],\n};\n}\n\nfunction HoverActionContainerDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nHoverActionContainerDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nHoverActionContainerDirective.ctorParameters;\n/** @type {?} */\nHoverActionContainerDirective.propDecorators;\n/** @type {?} */\nHoverActionContainerDirective.prototype.tabindex;\n/** @type {?} */\nHoverActionContainerDirective.prototype.active;\n/** @type {?} */\nHoverActionContainerDirective.prototype.active$;\n/** @type {?} */\nHoverActionContainerDirective.prototype._elementRef;\n/** @type {?} */\nHoverActionContainerDirective.prototype._hoverActionService;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ElementRef, HostListener, OnDestroy, Input } from '@angular/core';\nimport { HoverActionService } from './hover-action.service';\nimport { Subscription } from 'rxjs/Subscription';\nexport class HoverActionDirective implements OnDestroy {\n\n     tabindex: number = 1;\n    active: boolean = false;\n    focused: boolean = false;\nprivate active$: Subscription;\n/**\n * @param {?} _elementRef\n * @param {?} _hoverActionService\n */\nconstructor(private _elementRef: ElementRef,\nprivate _hoverActionService: HoverActionService) {\n\n        // register the action\n        this._hoverActionService.register(this);\n\n        // watch for changes to the activeness of the container\n        this.active$ = this._hoverActionService.active.subscribe(active => this.active = active);\n    }\n/**\n * @return {?}\n */\nngOnDestroy(): void {\n        this._hoverActionService.unregister(this);\n        this.active$.unsubscribe();\n    }\n/**\n * @return {?}\n */\nfocus(): void {\n        this._elementRef.nativeElement.focus();\n    }\n/**\n * @return {?}\n */\nonFocus(): void {\n        this.focused = true;\n        this._hoverActionService.updateVisibility();\n    }\n/**\n * @return {?}\n */\nonBlur(): void {\n        this.focused = false;\n        this._hoverActionService.updateVisibility();\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nprevious(event: MouseEvent): void {\n        event.stopPropagation();        \n        this._hoverActionService.previous();\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nnext(event: MouseEvent): void {\n        event.stopPropagation();\n        this._hoverActionService.next();\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: '[uxHoverAction]',\n    host: {\n        '[class.hover-action-active]': 'active',\n        '[class.hover-action-focused]': 'focused',\n        '[tabindex]': 'tabindex'\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: HoverActionService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'tabindex': [{ type: Input },],\n'onFocus': [{ type: HostListener, args: ['focus', ] },],\n'onBlur': [{ type: HostListener, args: ['blur', ] },],\n'previous': [{ type: HostListener, args: ['keydown.arrowleft', ['$event'], ] },],\n'next': [{ type: HostListener, args: ['keydown.arrowright', ['$event'], ] },],\n};\n}\n\nfunction HoverActionDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nHoverActionDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nHoverActionDirective.ctorParameters;\n/** @type {?} */\nHoverActionDirective.propDecorators;\n/** @type {?} */\nHoverActionDirective.prototype.tabindex;\n/** @type {?} */\nHoverActionDirective.prototype.active;\n/** @type {?} */\nHoverActionDirective.prototype.focused;\n/** @type {?} */\nHoverActionDirective.prototype.active$;\n/** @type {?} */\nHoverActionDirective.prototype._elementRef;\n/** @type {?} */\nHoverActionDirective.prototype._hoverActionService;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { HoverActionContainerDirective } from './hover-action-container.directive';\nimport { HoverActionDirective } from './hover-action.directive';\n\nconst /** @type {?} */ DECLARATIONS = [\n    HoverActionDirective,\n    HoverActionContainerDirective\n];\nexport class HoverActionModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    exports: DECLARATIONS,\n    declarations: DECLARATIONS\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction HoverActionModule_tsickle_Closure_declarations() {\n/** @type {?} */\nHoverActionModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nHoverActionModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, Input, TemplateRef, SimpleChanges, ViewContainerRef, EmbeddedViewRef } from '@angular/core';\nexport class LayoutSwitcherItemDirective {\nprivate _config: LayoutSwitcherItem;\nprivate _embeddedView: EmbeddedViewRef<any>;\n/**\n * @param {?} _templateRef\n * @param {?} _viewContainerRef\n */\nconstructor(private _templateRef: TemplateRef<any>,\nprivate _viewContainerRef: ViewContainerRef) { }\n/**\n * @return {?}\n */\ngetLayout(): TemplateRef<any> {\n        return this._templateRef;\n    }\n/**\n * @return {?}\n */\ngetConfig(): LayoutSwitcherItem {\n        return this._config;\n    }\n/**\n * @return {?}\n */\nactivate(): void {\n        this._embeddedView = this._viewContainerRef.createEmbeddedView(this._templateRef);\n    }\n/**\n * @return {?}\n */\ndeactivate(): void {\n        let /** @type {?} */ index = this._viewContainerRef.indexOf(this._embeddedView);\n        this._viewContainerRef.remove(index);\n        this._embeddedView = null;\n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: '[uxLayoutSwitcherItem]'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: TemplateRef, },\n{type: ViewContainerRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'_config': [{ type: Input, args: ['uxLayoutSwitcherItem', ] },],\n};\n}\n\nfunction LayoutSwitcherItemDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nLayoutSwitcherItemDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nLayoutSwitcherItemDirective.ctorParameters;\n/** @type {?} */\nLayoutSwitcherItemDirective.propDecorators;\n/** @type {?} */\nLayoutSwitcherItemDirective.prototype._config;\n/** @type {?} */\nLayoutSwitcherItemDirective.prototype._embeddedView;\n/** @type {?} */\nLayoutSwitcherItemDirective.prototype._templateRef;\n/** @type {?} */\nLayoutSwitcherItemDirective.prototype._viewContainerRef;\n}\n\n\nexport interface LayoutSwitcherItem {\n    group?: string;\n    minWidth?: number;\n    maxWidth?: number;\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ElementRef, QueryList, ContentChildren, Input, AfterContentInit, ViewContainerRef, OnChanges, SimpleChanges } from '@angular/core';\nimport { ResizeService } from '../resize/index';\nimport { LayoutSwitcherItemDirective } from './layout-switcher-item.directive';\nexport class LayoutSwitcherDirective implements AfterContentInit, OnChanges {\n\n     group: string;\nprivate _layouts: QueryList<LayoutSwitcherItemDirective>;\nprivate _width: number;\nprivate _activeLayout: LayoutSwitcherItemDirective;\n/**\n * @param {?} _elementRef\n * @param {?} resizeService\n * @param {?} _viewContainerRef\n */\nconstructor(private _elementRef: ElementRef, resizeService: ResizeService,\nprivate _viewContainerRef: ViewContainerRef) {\n\n        // watch for changes to the container size\n        resizeService.addResizeListener(_elementRef.nativeElement).subscribe(event => {\n            this._width = event.width;\n\n            // render the appropriate layout\n            this.updateActiveLayout();\n        });\n    }\n/**\n * @param {?} changes\n * @return {?}\n */\nngOnChanges(changes: SimpleChanges): void {\n\n        // if the active group has changed then render the appropriate layout\n        if (changes.group.currentValue !== changes.group.previousValue) {\n            this.updateActiveLayout();\n        }\n    }\n/**\n * @return {?}\n */\ngetActiveLayout(): LayoutSwitcherItemDirective | null {\n\n        // if there are currently no layouts then do nothing\n        if (!this._layouts) {\n            return null;\n        }\n\n        // otherwise find layouts that match the active group and that meet the constraints\n        return this._layouts.filter(layout => this.group === layout.getConfig().group).find(layout => {\n\n            let /** @type {?} */ minWidth = layout.getConfig().minWidth || 0;\n            let /** @type {?} */ maxWidth = layout.getConfig().maxWidth || Infinity;\n\n            return this._width >= minWidth && this._width < maxWidth;\n        });\n    }\n/**\n * @return {?}\n */\nupdateActiveLayout(): void {\n\n        // get the layout that should be shown\n        let /** @type {?} */ layout = this.getActiveLayout();\n\n        // check if we are currently showing the layout\n        if (this._activeLayout === layout) {\n            return;\n        }\n\n        // remove the current layout\n        if (this._activeLayout) {\n            this._activeLayout.deactivate();\n        }\n\n        // store the new active layout\n        this._activeLayout = layout;\n\n        // if there is an active layout then activate\n        if (this._activeLayout) {\n            this._activeLayout.activate();\n        }\n    }\n/**\n * @return {?}\n */\nngAfterContentInit(): void {\n\n        // store the initial current element width\n        this._width = this._elementRef.nativeElement.offsetWidth;\n\n        // render the appropriate layout - need a delay as Angular doesn't like changes like this in these lifecycle hooks\n        requestAnimationFrame(this.updateActiveLayout.bind(this));\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: '[uxLayoutSwitcher]'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: ResizeService, },\n{type: ViewContainerRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'group': [{ type: Input },],\n'_layouts': [{ type: ContentChildren, args: [LayoutSwitcherItemDirective, ] },],\n};\n}\n\nfunction LayoutSwitcherDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nLayoutSwitcherDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nLayoutSwitcherDirective.ctorParameters;\n/** @type {?} */\nLayoutSwitcherDirective.propDecorators;\n/** @type {?} */\nLayoutSwitcherDirective.prototype.group;\n/** @type {?} */\nLayoutSwitcherDirective.prototype._layouts;\n/** @type {?} */\nLayoutSwitcherDirective.prototype._width;\n/** @type {?} */\nLayoutSwitcherDirective.prototype._activeLayout;\n/** @type {?} */\nLayoutSwitcherDirective.prototype._elementRef;\n/** @type {?} */\nLayoutSwitcherDirective.prototype._viewContainerRef;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { LayoutSwitcherDirective } from './layout-switcher.directive';\nimport { LayoutSwitcherItemDirective } from './layout-switcher-item.directive';\nimport { ResizeModule } from '../resize/index';\n\nconst /** @type {?} */ DECLARATIONS = [\n    LayoutSwitcherDirective,\n    LayoutSwitcherItemDirective\n];\nexport class LayoutSwitcherModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        ResizeModule\n    ],\n    exports: DECLARATIONS,\n    declarations: DECLARATIONS,\n    providers: [],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction LayoutSwitcherModule_tsickle_Closure_declarations() {\n/** @type {?} */\nLayoutSwitcherModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nLayoutSwitcherModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { SelectionService } from '../selection.service';\nexport class SelectionStrategy {\n/**\n * @param {?} selectionService\n */\nconstructor(protected selectionService: SelectionService) { }\n/**\n * @param {?} event\n * @param {?} data\n * @return {?}\n */\nmousedown(event: MouseEvent, data: any): void { }\n/**\n * @param {?} event\n * @param {?} data\n * @return {?}\n */\nclick(event: MouseEvent, data: any): void { }\n/**\n * @param {?} event\n * @param {?} data\n * @return {?}\n */\nkeydown(event: KeyboardEvent, data: any): void { }\n/**\n * Select the item - default behavior\n * @param {...?} data\n * @return {?}\n */\nselect(...data: any[]): void {\n    this.selectionService.select(...data);\n  }\n/**\n * Toggle the item's selected state - default behavior\n * @param {...?} data\n * @return {?}\n */\ntoggle(...data: any[]): void {\n    this.selectionService.toggle(...data);\n  }\n/**\n * Deselect the item - default behavior\n * @param {...?} data\n * @return {?}\n */\ndeselect(...data: any[]): void {\n    this.selectionService.deselect(...data);\n  }\n/**\n * Select all items - default behavior\n * @return {?}\n */\nselectAll(): void {\n    this.select(...this.selectionService.dataset);\n  }\n/**\n * Deselect all items - default behavior\n * @return {?}\n */\ndeselectAll(): void {\n    this.deselect(...this.selectionService.dataset);\n  }\n/**\n * @return {?}\n */\ndestroy(): void { }\n}\n\nfunction SelectionStrategy_tsickle_Closure_declarations() {\n/** @type {?} */\nSelectionStrategy.prototype.selectionService;\n}\n\n","import { SelectionStrategy } from './selection.strategy';\nexport class RowSelectionStrategy extends SelectionStrategy {\nprivate _selection: Selection = { start: null, end: null };\n/**\n * By default on shift click the browser will highlight\n * text. This looks bad and we don't want this to occur\n * @param {?} event\n * @return {?}\n */\nmousedown(event: MouseEvent): void {\n    event.preventDefault();\n  }\n/**\n * When a row is clicked we want to handle selection\n * @param {?} event\n * @param {?} data\n * @return {?}\n */\nclick(event: MouseEvent, data: any): void {\n\n    // determine which modifier keys are pressed\n    const { ctrlKey, shiftKey } = event;\n\n    // if the shift key is pressed we want to perform a multiple selection\n    if (shiftKey) {\n      return this.multipleSelect(data);\n    }\n\n    // if the control key is pressed we want to perform an additive toggle selection\n    if (ctrlKey) {\n      return this.toggle(data);\n    }\n\n    // perform a single selection where all other rows are deselected\n    this.singleSelect(data);\n  }\n/**\n * To support full keyboard control we need to support the following:\n * 1. Arrow keys to navigate up and down\n * 2. Spacebar to toggle selection\n * 3. Shift + Arrow keys to multiple select\n * 4. Ctrl + Arrow keys to allow retained selection and navigation\n * @param {?} event\n * @param {?} data\n * @return {?}\n */\nkeydown(event: KeyboardEvent, data: any): void {\n\n    switch (event.keyCode) {\n\n      case KeyCode.UpArrow:\n      case KeyCode.DownArrow:\n        event.preventDefault();\n        this.navigate(event, data);\n        break;\n        \n      case KeyCode.Spacebar:\n        event.preventDefault();\n        this.selectionService.strategy.toggle(data, true);\n        break;\n\n    }\n  }\n/**\n * Override the standard toggle function to store or clear the\n * most recently selected item\n * @param {?} data\n * @param {?=} activate\n * @return {?}\n */\ntoggle(data: any, activate: boolean = false): void {\n    super.toggle(data);\n\n    // store or clear the selection\n    this.selectionService.isSelected(data) ? this.setSelectionStart(data) : this.clearSelection();\n\n    // if we want to keep the item activated then activate\n    if (activate) {\n      this.selectionService.activate(data);\n    }\n  }\n/**\n * Clear all other selected items and select only\n * the most recently selected item\n * @param {?} data\n * @return {?}\n */\nprivate singleSelect(data: any): void {\n\n    // deselect all other rows if neither modifier key is pressed\n    this.deselectAll();\n\n    // select the current row\n    this.select(data);\n\n    // store the current item as the selection start\n    this.setSelectionStart(data);\n  }\n/**\n * Handle multiple selection:\n * 1. If no start item selected - select it\n * 2. If a start item has been selected - select all in between\n * 3. If a start and end item have been selected clear the range and then select the new range\n * @param {?} data\n * @return {?}\n */\nprivate multipleSelect(data: any): void {\n\n    // if no selection currently exists then perform initial selection\n    if (!this._selection.start) {\n\n      // select the row\n      this.select(data);\n\n      // store the starting point\n      return this.setSelectionStart(data);\n    }\n\n    // if a multiple selection already took place - clear the previous selection\n    if (this._selection.start && this._selection.end) {\n      this.deselect(...this.getSelectedItems());\n    }\n\n    // set the new selection end point\n    this.setSelectionEnd(data);\n\n    // select all the items in the range\n    this.select(...this.getSelectedItems());\n  }\n/**\n * Set the selection start point. If there was previously a\n * selection end point then clear it as this is a new selection\n * @param {?} data\n * @return {?}\n */\nprivate setSelectionStart(data: any): void {\n    this._selection.start = data;\n    this._selection.end = null;\n\n    // activate the item\n    this.selectionService.activate(data);\n  }\n/**\n * Set the selection end point\n * @param {?} data\n * @return {?}\n */\nprivate setSelectionEnd(data: any): void {\n    this._selection.end = data;\n\n    // activate the item\n    this.selectionService.activate(data);\n  }\n/**\n * Clear both start and end selection points\n * @param {?=} deactivate\n * @return {?}\n */\nprivate clearSelection(deactivate: boolean = true): void {\n\n    // reset the selected item\n    this._selection = { start: null, end: null };\n\n    // remove the current active item\n    if (deactivate) {\n      this.selectionService.deactivate();\n    }\n  }\n/**\n * Determine all the items affected by the current selection.\n * Note that the end point may be above the start point so\n * we need to account for this.\n * @return {?}\n */\nprivate getSelectedItems(): any[] {\n\n    // get the latest dataset\n    const { dataset } = this.selectionService;\n\n    // get the indexes of the start and end point\n    const /** @type {?} */ startIdx = dataset.indexOf(this._selection.start);\n    const /** @type {?} */ endIdx = dataset.indexOf(this._selection.end);\n\n    // get the region of the array that is selected - note the endIdx may be before the startIdx so account for this\n    return dataset.slice(Math.min(startIdx, endIdx), Math.max(startIdx, endIdx) + 1);\n  }\n/**\n * Activate the sibling item when arrow keys are pressed\n * @param {?} event\n * @param {?} data\n * @return {?}\n */\nprivate navigate(event: KeyboardEvent, data: any): void {\n\n    // determine which modifier keys are pressed\n    const { ctrlKey, shiftKey } = event;\n\n    // if no modifier keys are pressed then deselect all and clear the selection\n    if (!ctrlKey && !shiftKey) {\n      this.deselectAll();\n      this.clearSelection(false);\n    }\n\n    // activate the sibling - if the up arrow is pressed then navigate to the previous sibling\n    const /** @type {?} */ sibling = this.selectionService.activateSibling(event.keyCode === KeyCode.UpArrow);\n\n    // if the shift key is pressed then we also want to toggle the state if the item\n    if (shiftKey && sibling) {\n\n      // if there is no current selection start then select the current row\n      if (!this._selection.start) {\n        this.multipleSelect(data);\n      }\n\n      this.multipleSelect(sibling);\n    }\n  }\n}\n\nfunction RowSelectionStrategy_tsickle_Closure_declarations() {\n/** @type {?} */\nRowSelectionStrategy.prototype._selection;\n}\n\n\nexport interface Selection {\n  start: any;\n  end: any;\n}\ntype KeyCode = number;\nlet KeyCode: any = {};\nKeyCode.UpArrow = 38;\nKeyCode.DownArrow = 40;\nKeyCode.Spacebar = 32;\nKeyCode[KeyCode.UpArrow] = \"UpArrow\";\nKeyCode[KeyCode.DownArrow] = \"DownArrow\";\nKeyCode[KeyCode.Spacebar] = \"Spacebar\";\n\n","import { SelectionStrategy } from './selection.strategy';\nexport class SimpleSelectionStrategy extends SelectionStrategy {\n/**\n * When the item is clicked simply toggle the current selected state\n * @param {?} event\n * @param {?} data\n * @return {?}\n */\nclick(event: MouseEvent, data: any): void {\n    this.toggle(data);\n  }\n/**\n * Add basic keyboard support for navigating\n * and selecting/deselecting items\n * @param {?} event\n * @param {?} data\n * @return {?}\n */\nkeydown(event: KeyboardEvent, data: any): void {\n\n    switch (event.keyCode) {\n      \n      case KeyCode.UpArrow:\n        event.preventDefault();\n        return this.selectionService.activateSibling(true);\n        \n      case KeyCode.DownArrow:\n        event.preventDefault();\n        return this.selectionService.activateSibling(false);\n      \n      case KeyCode.Spacebar:\n        event.preventDefault();      \n        return this.toggle(data);\n    }\n  }\n/**\n * Override the standard toggle function to always activate the item\n * @param {?} data\n * @return {?}\n */\ntoggle(data: any): void {\n    super.toggle(data);\n    this.selectionService.activate(data);\n  }\n}\ntype KeyCode = number;\nlet KeyCode: any = {};\nKeyCode.UpArrow = 38;\nKeyCode.DownArrow = 40;\nKeyCode.Spacebar = 32;\nKeyCode[KeyCode.UpArrow] = \"UpArrow\";\nKeyCode[KeyCode.DownArrow] = \"DownArrow\";\nKeyCode[KeyCode.Spacebar] = \"Spacebar\";\n\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { Observable } from 'rxjs/Observable';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\nimport { RowSelectionStrategy } from './strategies/row-selection.strategy';\nimport { SelectionStrategy } from './strategies/selection.strategy';\nimport { SimpleSelectionStrategy } from './strategies/simple-selection.strategy';\nexport class SelectionService implements OnDestroy {\nprivate _selection = new Set();\nprivate _rowStrategy = new RowSelectionStrategy(this);\nprivate _simpleStrategy = new SimpleSelectionStrategy(this);\n\n  dataset: any[] = [];\n  enabled: boolean = true;\n  clickEnabled: boolean = true;\n  keyboardEnabled: boolean = true;\n  strategy: SelectionStrategy = this._simpleStrategy;\n\n  active$ = new BehaviorSubject<any>(null);\n  selection$ = new BehaviorSubject<any[]>([]);\n/**\n * @return {?}\n */\nngOnDestroy(): void {\n    this._rowStrategy.destroy();\n    this._simpleStrategy.destroy();\n  }\n/**\n * If the item is not currently selected then add it\n * to the list of selected items\n * @param {...?} selections\n * @return {?}\n */\nselect(...selections: any[]): void {\n\n    // add each selection to the set\n    selections.forEach(selection => this._selection.add(selection));\n\n    // propagate the changes\n    this.selectionHasMutated();\n  }\n/**\n * Remove an item from the list of selected items\n * @param {...?} selections\n * @return {?}\n */\ndeselect(...selections: any[]): void {\n    // remove each item from the set\n    selections.forEach(selection => this._selection.delete(selection));\n\n    // propagate the changes\n    this.selectionHasMutated();\n  }\n/**\n * Toggle the selected state of any specified items\n * @param {...?} selections\n * @return {?}\n */\ntoggle(...selections: any[]): void {\n    selections.forEach(selection => this.isSelected(selection) ? this.deselect(selection) : this.select(selection));\n  }\n/**\n * Determine whether or not a specific item is currently selected\n * @param {?} data\n * @return {?}\n */\nisSelected(data: any): boolean {\n    return this._selection.has(data);\n  }\n/**\n * Return an observable specifically for notifying the subscriber\n * only when the selection state of a specific object has changed\n * @param {?} data\n * @return {?}\n */\nselected$(data: any): Observable<boolean> {\n    return this.selection$.pipe(map(() => this.isSelected(data)), distinctUntilChanged());\n  }\n/**\n * Define how selections should be performed.\n * This allows us to use an strategy pattern to handle the various keyboard\n * and mouse interactions while keeping each mode separated and\n * easily extensible if we want to add more modes in future!\n * @param {?} mode\n * @return {?}\n */\nsetMode(mode: SelectionMode): void {\n\n    switch (mode.toLowerCase().trim()) {\n\n      case 'simple':\n        this.strategy = this._simpleStrategy;\n        break;\n\n      case 'row':\n        this.strategy = this._rowStrategy;\n        break;\n\n      default:\n        throw new Error(`The selection mode '${mode}' does not exist. Valid modes are 'simple' or 'row'.`);\n    }\n  }\n/**\n * Set the current active item\n * @param {?} data\n * @return {?}\n */\nactivate(data: any): void {\n    this.active$.next(data);\n  }\n/**\n * Deactive all items\n * @return {?}\n */\ndeactivate(): void {\n    this.active$.next(null);\n  }\n/**\n * Activate the sibling of the current active item.\n * If previous is set to true the previous sibling will be activated\n * rather than the next sibling. This function will also return the\n * data of the newly activated sibling\n * @param {?=} previous\n * @return {?}\n */\nactivateSibling(previous: boolean = false): any {\n\n    // get the currently active item\n    const /** @type {?} */ current = this.active$.getValue();\n\n    // check if there is a current active item\n    if (!current) {\n      return;\n    }\n\n    // get the index of the current item\n    const /** @type {?} */ idx = this.dataset.indexOf(current);\n    const /** @type {?} */ target = this.dataset[previous ? idx - 1 : idx + 1];\n\n    // check if the target exists\n    if (target) {\n      this.activate(target);\n    }\n\n    return target;\n  }\n/**\n * @param {?} disabled\n * @return {?}\n */\nsetDisabled(disabled: boolean): void {\n    // store the current disabled state\n    this.enabled = !disabled;\n\n    // clear any stateful data\n    this.active$.next(null);\n    this._selection.clear();\n\n    // emit the selection change information\n    this.selectionHasMutated();\n  }\n/**\n * @return {?}\n */\nprivate selectionHasMutated(): void {\n    this.selection$.next(Array.from(this._selection));\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction SelectionService_tsickle_Closure_declarations() {\n/** @type {?} */\nSelectionService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSelectionService.ctorParameters;\n/** @type {?} */\nSelectionService.prototype._selection;\n/** @type {?} */\nSelectionService.prototype._rowStrategy;\n/** @type {?} */\nSelectionService.prototype._simpleStrategy;\n/** @type {?} */\nSelectionService.prototype.dataset;\n/** @type {?} */\nSelectionService.prototype.enabled;\n/** @type {?} */\nSelectionService.prototype.clickEnabled;\n/** @type {?} */\nSelectionService.prototype.keyboardEnabled;\n/** @type {?} */\nSelectionService.prototype.strategy;\n/** @type {?} */\nSelectionService.prototype.active$;\n/** @type {?} */\nSelectionService.prototype.selection$;\n}\n\n\nexport type SelectionMode = 'simple' | 'row';\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ElementRef, EventEmitter, HostBinding, HostListener, Input, OnDestroy, OnInit, Output } from '@angular/core';\nimport { Subscription } from 'rxjs/Subscription';\nimport { map } from 'rxjs/operators';\nimport { SelectionService } from './selection.service';\nexport class SelectionItemDirective implements OnInit, OnDestroy {\n\n   uxSelectionItem: any;\n/**\n * @param {?} selected\n * @return {?}\n */\nset selected(selected: boolean) {\n    selected ? this.select() : this.deselect();\n  }\n/**\n * @return {?}\n */\nget selected(): boolean {\n    return this._selected;\n  }\n  \n    tabindex: number = 0;\n   selectedChange = new EventEmitter<boolean>();\n\n   active: boolean = false;\nprivate _selected: boolean = false;\nprivate _subscriptions = new Subscription();\n/**\n * @param {?} _selectionService\n * @param {?} _elementRef\n */\nconstructor(private _selectionService: SelectionService,\nprivate _elementRef: ElementRef) { }\n/**\n * @return {?}\n */\nngOnInit(): void {\n\n    // if there is no associated data then throw an error\n    if (!this.uxSelectionItem) {\n      throw new Error('The uxSelectionItem directive must have data associated with it.');\n    }\n\n    // subscribe to selection changes on this item\n    this._subscriptions.add(this._selectionService.selected$(this.uxSelectionItem).subscribe(selected => {\n\n      // store the selected state\n      this._selected = selected;\n\n      // emit the selected state\n      this.selectedChange.emit(selected);\n    }));\n\n    // subscribe to changes to the active state\n    this._subscriptions.add(this._selectionService.active$.pipe(map(active => active === this.uxSelectionItem)).subscribe(active => {\n\n      // store the focus state\n      this.active = active;\n\n      // if it is active then focus the element\n      if (active === true) {\n        this._elementRef.nativeElement.focus();\n      }\n    }));\n  }\n/**\n * @return {?}\n */\nngOnDestroy(): void {\n    this._subscriptions.unsubscribe();\n  }\n/**\n * @param {?} event\n * @return {?}\n */\nclick(event: MouseEvent): void {\n    if (this._selectionService.enabled && this._selectionService.clickEnabled) {\n      this._selectionService.strategy.click(event, this.uxSelectionItem);\n    }\n  }\n/**\n * @param {?} event\n * @return {?}\n */\nmousedown(event: MouseEvent): void {\n    if (this._selectionService.enabled && this._selectionService.clickEnabled) {\n      this._selectionService.strategy.mousedown(event, this.uxSelectionItem);\n    }\n  }\n/**\n * @param {?} event\n * @return {?}\n */\nkeydown(event: KeyboardEvent): void {\n    if (this._selectionService.enabled && this._selectionService.keyboardEnabled) {\n      this._selectionService.strategy.keydown(event, this.uxSelectionItem);\n    }\n  }\n/**\n * Select this item using the current strategy\n * @return {?}\n */\nselect(): void {\n    if (this._selectionService.enabled) {\n      this._selectionService.strategy.select(this.uxSelectionItem);\n    }\n  }\n/**\n * Deselect this item using the current strategy\n * @return {?}\n */\ndeselect(): void {\n    if (this._selectionService.enabled) {\n      this._selectionService.strategy.deselect(this.uxSelectionItem);\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[uxSelectionItem]',\n  exportAs: 'ux-selection-item'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: SelectionService, },\n{type: ElementRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'uxSelectionItem': [{ type: Input },],\n'selected': [{ type: Input },{ type: HostBinding, args: ['class.ux-selection-selected', ] },],\n'tabindex': [{ type: Input },{ type: HostBinding, args: ['tabindex', ] },],\n'selectedChange': [{ type: Output },],\n'active': [{ type: HostBinding, args: ['class.ux-selection-focused', ] },],\n'click': [{ type: HostListener, args: ['click', ['$event'], ] },],\n'mousedown': [{ type: HostListener, args: ['mousedown', ['$event'], ] },],\n'keydown': [{ type: HostListener, args: ['keydown', ['$event'], ] },],\n};\n}\n\nfunction SelectionItemDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nSelectionItemDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSelectionItemDirective.ctorParameters;\n/** @type {?} */\nSelectionItemDirective.propDecorators;\n/** @type {?} */\nSelectionItemDirective.prototype.uxSelectionItem;\n/** @type {?} */\nSelectionItemDirective.prototype.tabindex;\n/** @type {?} */\nSelectionItemDirective.prototype.selectedChange;\n/** @type {?} */\nSelectionItemDirective.prototype.active;\n/** @type {?} */\nSelectionItemDirective.prototype._selected;\n/** @type {?} */\nSelectionItemDirective.prototype._subscriptions;\n/** @type {?} */\nSelectionItemDirective.prototype._selectionService;\n/** @type {?} */\nSelectionItemDirective.prototype._elementRef;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { AfterContentInit, ContentChildren, Directive, EventEmitter, HostBinding, HostListener, Input, OnDestroy, Output, QueryList } from '@angular/core';\nimport { Subscription } from 'rxjs/Subscription';\nimport { SelectionItemDirective } from './selection-item.directive';\nimport { SelectionMode, SelectionService } from './selection.service';\nexport class SelectionDirective implements AfterContentInit, OnDestroy {\n/**\n * @param {?} items\n * @return {?}\n */\nset uxSelection(items: any[]) {\n    this._selectionService.select(...items);\n  }\n/**\n * @param {?} disabled\n * @return {?}\n */\nset disabled(disabled: boolean) {\n    this._selectionService.setDisabled(disabled);\n  }\n/**\n * @param {?} mode\n * @return {?}\n */\nset mode(mode: SelectionMode) {\n    this._selectionService.setMode(mode);\n  }\n/**\n * @param {?} enabled\n * @return {?}\n */\nset clickSelection(enabled: boolean) {\n    this._selectionService.clickEnabled = enabled;\n  }\n/**\n * @param {?} enabled\n * @return {?}\n */\nset keyboardSelection(enabled: boolean) {\n    this._selectionService.keyboardEnabled = enabled;\n  }\n\n    tabindex: number = 0;\n\n   uxSelectionChange = new EventEmitter<any[]>();\n\n   items: QueryList<SelectionItemDirective>;\nprivate _subscriptions = new Subscription();\n/**\n * @param {?} _selectionService\n */\nconstructor(private _selectionService: SelectionService) {\n    this._subscriptions.add(_selectionService.selection$.subscribe(items => this.uxSelectionChange.emit(items)));\n  }\n/**\n * @return {?}\n */\nngAfterContentInit(): void {\n    // provide the initial list of selection items\n    this.update();\n\n    // if the list changes then inform the service\n    this._subscriptions.add(this.items.changes.subscribe(() => this.update()));\n  }\n/**\n * @return {?}\n */\nngOnDestroy(): void {\n    this._subscriptions.unsubscribe();\n  }\n/**\n * If the directive element receives focus then activate the first item\n * @return {?}\n */\nfocus(): void {\n    if (this._selectionService.enabled && this._selectionService.dataset.length > 0) {\n      this._selectionService.activate(this._selectionService.dataset[0]);\n    }\n  }\n/**\n * Update the dataset to reflect the latest selection items\n * @return {?}\n */\nupdate(): void {\n    this._selectionService.dataset = this.items.map(item => item.uxSelectionItem);\n  }\n/**\n * Select all the items in the list\n * @return {?}\n */\nselectAll(): void {\n    if (this._selectionService.enabled) {\n      this._selectionService.strategy.selectAll();\n    }\n  }\n/**\n * Deselect all currently selected items\n * @return {?}\n */\ndeselectAll(): void {\n    if (this._selectionService.enabled) {\n      this._selectionService.strategy.deselectAll();\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[uxSelection]',\n  exportAs: 'ux-selection',\n  providers: [ SelectionService ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: SelectionService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'uxSelection': [{ type: Input },],\n'disabled': [{ type: Input },],\n'mode': [{ type: Input },],\n'clickSelection': [{ type: Input },],\n'keyboardSelection': [{ type: Input },],\n'tabindex': [{ type: Input },{ type: HostBinding, args: ['tabindex', ] },],\n'uxSelectionChange': [{ type: Output },],\n'items': [{ type: ContentChildren, args: [SelectionItemDirective, ] },],\n'focus': [{ type: HostListener, args: ['focus', ] },],\n};\n}\n\nfunction SelectionDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nSelectionDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSelectionDirective.ctorParameters;\n/** @type {?} */\nSelectionDirective.propDecorators;\n/** @type {?} */\nSelectionDirective.prototype.tabindex;\n/** @type {?} */\nSelectionDirective.prototype.uxSelectionChange;\n/** @type {?} */\nSelectionDirective.prototype.items;\n/** @type {?} */\nSelectionDirective.prototype._subscriptions;\n/** @type {?} */\nSelectionDirective.prototype._selectionService;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { SelectionItemDirective } from './selection-item.directive';\nimport { SelectionDirective } from './selection.directive';\nexport class SelectionModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  imports: [\n    CommonModule\n  ],\n  declarations: [SelectionDirective, SelectionItemDirective],\n  exports: [SelectionDirective, SelectionItemDirective]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction SelectionModule_tsickle_Closure_declarations() {\n/** @type {?} */\nSelectionModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSelectionModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive } from '@angular/core';\nexport class ReorderableHandleDirective { static decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: '[uxReorderableHandle]'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ReorderableHandleDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nReorderableHandleDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nReorderableHandleDirective.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, Input, ElementRef } from '@angular/core';\nexport class ReorderableModelDirective {\n\n    // allow the user to specify a model for the item - allows use with ngFor\n     uxReorderableModel: any;\n/**\n * @param {?} elementRef\n */\nconstructor(public elementRef: ElementRef) { }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: '[uxReorderableModel]'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'uxReorderableModel': [{ type: Input },],\n};\n}\n\nfunction ReorderableModelDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nReorderableModelDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nReorderableModelDirective.ctorParameters;\n/** @type {?} */\nReorderableModelDirective.propDecorators;\n/** @type {?} */\nReorderableModelDirective.prototype.uxReorderableModel;\n/** @type {?} */\nReorderableModelDirective.prototype.elementRef;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","// WORKAROUND: ng-packagr issue - https://github.com/dherges/ng-packagr/issues/163\n\nimport * as dragulaNamespace from 'dragula';\nimport { Drake } from 'dragula';\n\nexport const /** @type {?} */ dragula: (containers?: any, options?: any) => Drake = ( /** @type {?} */((dragulaNamespace as any))).default || dragulaNamespace;","import { Injectable, EventEmitter } from '@angular/core';\nimport { Drake, DragulaOptions } from 'dragula';\nimport { dragula } from './dragula';\nexport class ReorderableService {\nprivate _groups: { [k: string]: ReorderableGroup } = {};\nprivate _uniqueGroupId = 0;\n/**\n * Returns a unique string which can be used as a group name if one was not configured.\n * @return {?}\n */\ngetUniqueGroupName(): string {\n        return '_uxReorderable_' + this._uniqueGroupId++;\n    }\n/**\n * Adds the container to the named group.\n * @param {?} groupName\n * @param {?} container\n * @return {?}\n */\nregister(groupName: string, container: ReorderableContainer): ReorderableGroup {\n\n        if (!this._groups[groupName]) {\n            this._groups[groupName] = new ReorderableGroup();\n        }\n\n        this._groups[groupName].register(container);\n\n        return this._groups[groupName];\n    }\n/**\n * Removes the container from the named group. If it was the last container in the group, destroys the group.\n * @param {?} groupName\n * @param {?} container\n * @return {?}\n */\nunregister(groupName: string, container: ReorderableContainer): void {\n\n        const /** @type {?} */ group = this._groups[groupName];\n\n        if (group) {\n            group.unregister(container);\n\n            if (group.isEmpty()) {\n                group.destroy();\n\n                delete this._groups[groupName];\n            }\n        }\n    }\n/**\n * Creates the dragula instance with the current config and attaches the events, if not already created.\n * @param {?} groupName\n * @return {?}\n */\ninitialize(groupName: string): ReorderableGroup {\n\n        const /** @type {?} */ group = this._groups[groupName];\n\n        if (group) {\n            group.initialize();\n        }\n\n        return group;\n    }\n/**\n * Returns the group object for the given name.\n * @param {?} group\n * @return {?}\n */\ngetGroup(group: string): ReorderableGroup {\n        return this._groups[group];\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ReorderableService_tsickle_Closure_declarations() {\n/** @type {?} */\nReorderableService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nReorderableService.ctorParameters;\n/** @type {?} */\nReorderableService.prototype._groups;\n/** @type {?} */\nReorderableService.prototype._uniqueGroupId;\n}\n\n\nexport interface ReorderableContainer {\n    element: Element;\n    getModelFromElement: (element: Element) => any;\n    canMove: (element: Element, container: Element, handle: Element) => boolean;\n}\n\nexport interface ReorderableDragEvent {\n    model: any;\n    element: Element;\n    source: Element;\n}\n\nexport interface ReorderableDragEndEvent {\n    model: any;\n    element: Element;\n}\n\nexport interface ReorderableDropEvent {\n    model: any;\n    element: Element;\n    target: Element;\n    source: Element;\n    sibling: Element;\n}\n\nexport interface ReorderableCancelEvent {\n    model: any;\n    element: Element;\n}\n\nexport interface ReorderableClonedEvent {\n    clone: Element;\n    element: Element;\n    type: string;\n}\n/**\n * Represents a collection of drag-and-drop containers (uxReorderable) that items can be dragged between.\n */\nexport class ReorderableGroup {\n\n    drag = new EventEmitter<ReorderableDragEvent>();\n    dragEnd = new EventEmitter<ReorderableDragEndEvent>();\n    drop = new EventEmitter<ReorderableDropEvent>();\n    cancel = new EventEmitter<ReorderableCancelEvent>();\n    cloned = new EventEmitter<ReorderableClonedEvent>();\nprivate _instance: Drake;\nprivate _containers: ReorderableContainer[] = [];\nprivate _config: DragulaOptions = {\n        moves: this.canMove.bind(this)\n    };\n/**\n * Returns true if there are no containers registered with the group.\n * @return {?}\n */\nisEmpty(): boolean {\n        return this._containers.length === 0;\n    }\n/**\n * Returns the model object (uxReorderableModel) for an elements in one of the containers in the group.\n * @param {?} element\n * @return {?}\n */\ngetModelForElement(element: Element): any {\n        for (const /** @type {?} */ container of this._containers) {\n            const /** @type {?} */ model = container.getModelFromElement(element);\n            if (model) {\n                return model;\n            }\n        }\n\n        return null;\n    }\n/**\n * Adds the container to the group.\n * @param {?} container\n * @return {?}\n */\nregister(container: ReorderableContainer): void {\n        this._containers.push(container);\n\n        if (this._instance) {\n            this._instance.containers = this._containers.map((c) => c.element);\n        }\n\n        if (!this._config.mirrorContainer) {\n            this._config.mirrorContainer = container.element;\n        }\n    }\n/**\n * Removes the container from the group.\n * @param {?} container\n * @return {?}\n */\nunregister(container: ReorderableContainer): void {\n        const /** @type {?} */ index = this._containers.indexOf(container);\n        if (index >= 0) {\n            this._containers.splice(index, 1);\n            if (this._instance) {\n                this._instance.containers = this._containers.map((c) => c.element);\n            }\n        }\n    }\n/**\n * Creates the dragula instance with the current config and attaches the events, if not already created.\n * @return {?}\n */\ninitialize(): void {\n\n        if (this._instance) {\n            return;\n        }\n\n        this._instance = dragula(this._containers.map((c) => c.element), this._config);\n\n        this._instance.on('drag', (element: Element, source: Element) => {\n            this.drag.emit({\n                model: this.getModelForElement(element),\n                element: element,\n                source: source\n            });\n        });\n        this._instance.on('dragend', (element: Element) => {\n            this.dragEnd.emit({\n                model: this.getModelForElement(element),\n                element: element\n            });\n        });\n        this._instance.on('drop', (element: Element, target: Element, source: Element, sibling: Element) => {\n            this.drop.emit({\n                model: this.getModelForElement(element),\n                element: element,\n                target: target,\n                source: source,\n                sibling: sibling\n            });\n        });\n        this._instance.on('cancel', (element: Element) => {\n            this.cancel.emit({\n                model: this.getModelForElement(element),\n                element: element\n            });\n        });\n        this._instance.on('cloned', (clone: Element, element: Element, type: string) => {\n            this.cloned.emit({\n                clone: clone,\n                element: element,\n                type: type\n            });\n        });\n    }\n/**\n * Destroys the dragula instance.\n * @return {?}\n */\ndestroy(): void {\n        if (this._instance) {\n            this._instance.destroy();\n            this._instance = null;\n        }\n    }\n/**\n * Finds the container for the containerElement and returns the results of canMove.\n * @param {?} element\n * @param {?} containerElement\n * @param {?} handle\n * @return {?}\n */\nprivate canMove(element: Element, containerElement: Element, handle: Element): boolean {\n        for (let /** @type {?} */ container of this._containers) {\n            if (container.element.isSameNode(containerElement)) {\n                return container.canMove(element, containerElement, handle);\n            }\n        }\n    }\n}\n\nfunction ReorderableGroup_tsickle_Closure_declarations() {\n/** @type {?} */\nReorderableGroup.prototype.drag;\n/** @type {?} */\nReorderableGroup.prototype.dragEnd;\n/** @type {?} */\nReorderableGroup.prototype.drop;\n/** @type {?} */\nReorderableGroup.prototype.cancel;\n/** @type {?} */\nReorderableGroup.prototype.cloned;\n/** @type {?} */\nReorderableGroup.prototype._instance;\n/** @type {?} */\nReorderableGroup.prototype._containers;\n/** @type {?} */\nReorderableGroup.prototype._config;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, Input, ElementRef, OnInit, ContentChildren, QueryList, OnDestroy, Output, EventEmitter, Renderer2, AfterViewInit, HostBinding } from '@angular/core';\nimport { Subscription } from 'rxjs/Subscription';\nimport { Drake } from 'dragula';\nimport { ReorderableHandleDirective } from './reorderable-handle.directive';\nimport { ReorderableModelDirective } from './reorderable-model.directive';\nimport { ReorderableService, ReorderableContainer, ReorderableDragEvent, ReorderableDragEndEvent, ReorderableDropEvent, ReorderableClonedEvent, ReorderableCancelEvent } from './reorderable.service';\nimport { dragula } from './dragula';\nexport class ReorderableDirective implements OnInit, AfterViewInit, OnDestroy {\n\n     reorderableModel: Array<any>;\n     reorderableGroup: string;\n     reorderableModelChange = new EventEmitter<Array<any>>();\n     reorderStart = new EventEmitter<ReorderEvent>();\n     reorderCancel = new EventEmitter<ReorderEvent>();\n     reorderEnd = new EventEmitter<ReorderEvent>();\n\n     handles: QueryList<ElementRef>;\n     models: QueryList<ReorderableModelDirective>;\nprivate _instance: Drake;\nprivate _container: ReorderableContainer;\nprivate _dragging = false;\nprivate _subscriptions = new Subscription();\n/**\n * @param {?} _elementRef\n * @param {?} _renderer\n * @param {?} _service\n */\nconstructor(\nprivate _elementRef: ElementRef,\nprivate _renderer: Renderer2,\nprivate _service: ReorderableService\n    ) { }\n/**\n * Initialise dragula and bind to all the required events\n * @return {?}\n */\nngOnInit(): void {\n\n        // If no group name then generate a unique one for this instance only\n        if (!this.reorderableGroup) {\n            this.reorderableGroup = this._service.getUniqueGroupName();\n        }\n\n        this._container = {\n            element: this._elementRef.nativeElement,\n            getModelFromElement: this.getModelFromElement.bind(this),\n            canMove: this.canMove.bind(this)\n        };\n\n        // Register for drag events on this element\n        const /** @type {?} */ group = this._service.register(this.reorderableGroup, this._container);\n        this._subscriptions.add(group.drag.subscribe(this.onDrag.bind(this)));\n        this._subscriptions.add(group.dragEnd.subscribe(this.onDragEnd.bind(this)));\n        this._subscriptions.add(group.drop.subscribe(this.onDrop.bind(this)));\n        this._subscriptions.add(group.cancel.subscribe((event: ReorderableCancelEvent) => this.reorderCancel.emit({ element: event.element, model: event.model })));\n        this._subscriptions.add(group.cloned.subscribe(this.onClone.bind(this)));\n    }\n/**\n * @return {?}\n */\nngAfterViewInit(): void {\n        this._service.initialize(this.reorderableGroup);\n    }\n/**\n * We need to destroy the dragula instance on component destroy\n * @return {?}\n */\nngOnDestroy(): void {\n        this._service.unregister(this.reorderableGroup, this._container);\n        this._subscriptions.unsubscribe();\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nonDrag(event: ReorderableDragEvent): void {\n\n        this._dragging = true;\n\n        this.reorderStart.emit({ element: event.element, model: event.model });\n    }\n/**\n * This is fired when items get reordered - we need to emit the new order of the models\n * @param {?} event\n * @return {?}\n */\nonDrop(event: ReorderableDropEvent): void {\n\n        // if there is no provided module we can skip this\n        if (!this.reorderableModel) {\n            return;\n        }\n\n        let /** @type {?} */ changed = false;\n\n        if (event.source.isSameNode(this._elementRef.nativeElement)) {\n\n            // remove this model from the list of models\n            const /** @type {?} */ index = this.reorderableModel.indexOf(event.model);\n            if (index >= 0) {\n                this.reorderableModel.splice(index, 1);\n                changed = true;\n            }\n        }\n\n        if (event.target.isSameNode(this._elementRef.nativeElement)) {\n\n            // get the position of sibling element\n            const /** @type {?} */ index = event.sibling && !event.sibling.classList.contains('gu-mirror') ?\n                this.reorderableModel.indexOf(this.getModelFromElement(event.sibling)) :\n                this.reorderableModel.length;\n\n            // insert the model at its new location\n            this.reorderableModel.splice(index, 0, event.model);\n            changed = true;\n        }\n\n        // Emit event if any changes were made\n        if (changed) {\n            this.reorderableModelChange.emit(this.reorderableModel);\n        }\n    }\n/**\n * Return the model assciated with a particular element in the list.\n * This should ensure that the items have the draggable model directive applied\n * @param {?} element\n * @return {?}\n */\ngetModelFromElement(element: Element): any {\n\n        const /** @type {?} */ model = this.models.find(_model => _model.elementRef.nativeElement === element);\n\n        if (!model) {\n            return null;\n        }\n\n        return model.uxReorderableModel;\n    }\n/**\n * When we finish dragging remove the utillity class from the element being moved\n * @param {?} event\n * @return {?}\n */\nonDragEnd(event: ReorderableDragEndEvent): void {\n\n        this._dragging = false;\n\n        if (this._elementRef.nativeElement.contains(event.element)) {\n\n            this._renderer.removeClass(event.element, 'ux-reorderable-moving');\n\n            this.reorderEnd.emit({\n                element: event.element,\n                model: event.model\n            });\n        }\n    }\n/**\n * We want to ensure that the cloned element is identical\n * to the original, regardless of it's location in the DOM tree\n * @param {?} event\n * @return {?}\n */\nonClone(event: ReorderableClonedEvent): void {\n\n        if (this._elementRef.nativeElement.contains(event.element)) {\n\n            this.setTableCellWidths(event.element, event.clone);\n            this.captureCanvases(event.element, event.clone);\n\n            this._renderer.addClass(event.element, 'ux-reorderable-moving');\n        }\n    }\n/**\n * If elements contain handles then only drag when the handle is dragged\n * otherwise drag whenever an immediate child is specified\n * @param {?} element\n * @param {?} container\n * @param {?} handle\n * @return {?}\n */\ncanMove(element: Element, container: Element, handle: Element): boolean {\n        return this.handles.length === 0 ? true : !!this.handles.find(_handle => _handle.nativeElement === handle);\n    }\n/**\n * @param {?} source\n * @param {?} target\n * @return {?}\n */\nprivate setTableCellWidths(source: Element, target: Element): void {\n\n        // if it is not a table row then skip this\n        if (source.tagName !== 'TR') {\n            return;\n        }\n\n        // find any immediate td children and fix their width\n        const /** @type {?} */ sourceCells = /** @type {?} */(( Array.from(source.children) as HTMLTableCellElement[]));\n        const /** @type {?} */ targetCells = /** @type {?} */(( Array.from(target.children) as HTMLTableCellElement[]));\n\n        // fix the width of these cells\n        sourceCells.forEach((cell, idx) => targetCells[idx].style.minWidth = getComputedStyle(cell).getPropertyValue('width'));\n    }\n/**\n * @param {?} source\n * @param {?} target\n * @return {?}\n */\nprivate captureCanvases(source: Element, target: Element): void {\n\n        // find all child canvas elements\n        const /** @type {?} */ sourceCanvases = Array.from(source.querySelectorAll('canvas'));\n        const /** @type {?} */ targetCanvases = Array.from(target.querySelectorAll('canvas'));\n\n        // replicate the canvas content\n        targetCanvases.map(canvas => canvas.getContext('2d'))\n            .forEach((context, idx) => context.drawImage(sourceCanvases[idx], 0, 0));\n\n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: '[uxReorderable]'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Renderer2, },\n{type: ReorderableService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'reorderableModel': [{ type: Input },],\n'reorderableGroup': [{ type: Input },],\n'reorderableModelChange': [{ type: Output },],\n'reorderStart': [{ type: Output },],\n'reorderCancel': [{ type: Output },],\n'reorderEnd': [{ type: Output },],\n'handles': [{ type: ContentChildren, args: [ReorderableHandleDirective, { read: ElementRef, descendants: true }, ] },],\n'models': [{ type: ContentChildren, args: [ReorderableModelDirective, ] },],\n'_dragging': [{ type: HostBinding, args: ['class.ux-reorderable-container-moving', ] },],\n};\n}\n\nfunction ReorderableDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nReorderableDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nReorderableDirective.ctorParameters;\n/** @type {?} */\nReorderableDirective.propDecorators;\n/** @type {?} */\nReorderableDirective.prototype.reorderableModel;\n/** @type {?} */\nReorderableDirective.prototype.reorderableGroup;\n/** @type {?} */\nReorderableDirective.prototype.reorderableModelChange;\n/** @type {?} */\nReorderableDirective.prototype.reorderStart;\n/** @type {?} */\nReorderableDirective.prototype.reorderCancel;\n/** @type {?} */\nReorderableDirective.prototype.reorderEnd;\n/** @type {?} */\nReorderableDirective.prototype.handles;\n/** @type {?} */\nReorderableDirective.prototype.models;\n/** @type {?} */\nReorderableDirective.prototype._instance;\n/** @type {?} */\nReorderableDirective.prototype._container;\n/** @type {?} */\nReorderableDirective.prototype._dragging;\n/** @type {?} */\nReorderableDirective.prototype._subscriptions;\n/** @type {?} */\nReorderableDirective.prototype._elementRef;\n/** @type {?} */\nReorderableDirective.prototype._renderer;\n/** @type {?} */\nReorderableDirective.prototype._service;\n}\n\n\nexport interface ReorderEvent {\n    element: Element;\n    model: any;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReorderableDirective } from './reorderable.directive';\nimport { ReorderableHandleDirective } from './reorderable-handle.directive';\nimport { ReorderableModelDirective } from './reorderable-model.directive';\nimport { ReorderableService } from './reorderable.service';\nexport class ReorderableModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        CommonModule\n    ],\n    declarations: [\n        ReorderableDirective,\n        ReorderableHandleDirective,\n        ReorderableModelDirective\n    ],\n    exports: [\n        ReorderableDirective,\n        ReorderableHandleDirective,\n        ReorderableModelDirective\n    ],\n    providers: [\n        ReorderableService\n    ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ReorderableModule_tsickle_Closure_declarations() {\n/** @type {?} */\nReorderableModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nReorderableModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Pipe, Injectable, PipeTransform } from '@angular/core';\nexport class StringFilterPipe implements PipeTransform {\n/**\n * @param {?} items\n * @param {?} value\n * @return {?}\n */\ntransform(items: any[], value: string): any[] {  \n        if (!items) {\n            return [];\n        }\n        return items.filter(it => it.toLowerCase().indexOf(value.toLowerCase()) >= 0);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Pipe, args: [{\n    name: 'stringFilter'\n}, ] },\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction StringFilterPipe_tsickle_Closure_declarations() {\n/** @type {?} */\nStringFilterPipe.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nStringFilterPipe.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { StringFilterPipe } from './string-filter.pipe';\nimport { NgModule } from '@angular/core';\nexport class StringFilterModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    exports: [StringFilterPipe],\n    declarations: [StringFilterPipe]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction StringFilterModule_tsickle_Closure_declarations() {\n/** @type {?} */\nStringFilterModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nStringFilterModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { StorageAdapter } from './storage-adapter';\nexport class CookieAdapter implements StorageAdapter {\n/**\n * @param {?} key\n * @return {?}\n */\ngetItem(key: string): string {\n\n        if (document.cookie) {\n\n            // get all the cookies for this site\n            const /** @type {?} */ cookies = document.cookie.split(';');\n\n            // process the cookies into a from we can easily manage\n            const /** @type {?} */ match = cookies\n                .map(cookie => ({ key: cookie.split('=')[0].trim(), value: cookie.split('=')[1].trim() }))\n                .find(cookie => cookie.key === key);\n\n            return match ? match.value : null;\n        }\n\n        return null;\n    }\n/**\n * @param {?} key\n * @param {?} value\n * @return {?}\n */\nsetItem(key: string, value: string): void {\n        document.cookie = `${key}=${value}; path=/`;\n    }\n/**\n * @param {?} key\n * @return {?}\n */\nremoveItem(key: string): void {\n\n        document.cookie.split(';').forEach(cookie => {\n            const /** @type {?} */ eqPos = cookie.indexOf('=');\n            const /** @type {?} */ name = eqPos > -1 ? cookie.substr(0, eqPos).trim() : cookie;\n\n            if (name === key) {\n                document.cookie = cookie.trim().replace(/=.*/, `=;expires=${new Date().toUTCString()};path=/`);\n            }\n        });\n    }\n/**\n * @return {?}\n */\nclear(): void {\n\n        // call remove item on each cookie\n        document.cookie.split(';').map(cookie => cookie.split('=')[0].trim())\n            .forEach(cookie => this.removeItem(cookie));\n    }\n/**\n * @return {?}\n */\ngetSupported(): StorageAdapter {\n        // cookies are supported in all browsers\n        return this;\n    }\n\n}","import { StorageAdapter } from './storage-adapter';\nimport { CookieAdapter } from './cookie-adapter';\nexport class LocalStorageAdapter implements StorageAdapter {\n/**\n * @param {?} key\n * @return {?}\n */\ngetItem(key: string): string {\n        return localStorage.getItem(key);\n    }\n/**\n * @param {?} key\n * @param {?} value\n * @return {?}\n */\nsetItem(key: string, value: string): void {\n        localStorage.setItem(key, value);\n    }\n/**\n * @param {?} key\n * @return {?}\n */\nremoveItem(key: string): void {\n        localStorage.removeItem(key);\n    }\n/**\n * @return {?}\n */\nclear(): void {\n        localStorage.clear();\n    }\n/**\n * @return {?}\n */\ngetSupported(): StorageAdapter {\n\n        // if local storage variable does not exist fall back to cookies\n        if (!localStorage) {\n            return new CookieAdapter();\n        }\n\n        // try to make a test save to local storage to see if there are any exceptions\n        try {\n            localStorage.setItem('ux-persistent-data-service', 'ux-persistent-data-service');\n            localStorage.removeItem('ux-persistent-data-service');\n\n            return this;\n        } catch ( /** @type {?} */err) {\n            return new CookieAdapter();\n        }\n    }\n\n}","import { StorageAdapter } from './storage-adapter';\nimport { CookieAdapter } from './cookie-adapter';\nexport class SessionStorageAdapter implements StorageAdapter {\n/**\n * @param {?} key\n * @return {?}\n */\ngetItem(key: string): string {\n        return sessionStorage.getItem(key);\n    }\n/**\n * @param {?} key\n * @param {?} value\n * @return {?}\n */\nsetItem(key: string, value: string): void {\n        sessionStorage.setItem(key, value);\n    }\n/**\n * @param {?} key\n * @return {?}\n */\nremoveItem(key: string): void {\n        sessionStorage.removeItem(key);\n    }\n/**\n * @return {?}\n */\nclear(): void {\n        sessionStorage.clear();\n    }\n/**\n * @return {?}\n */\ngetSupported(): StorageAdapter {\n\n        // if local storage variable does not exist fall back to cookies\n        if (!sessionStorage) {\n            return new CookieAdapter();\n        }\n\n        // try to make a test save to local storage to see if there are any exceptions\n        try {\n            sessionStorage.setItem('ux-persistent-data-service', 'ux-persistent-data-service');\n            sessionStorage.removeItem('ux-persistent-data-service');\n\n            return this;\n        } catch ( /** @type {?} */err) {\n            return new CookieAdapter();\n        }\n    }\n\n}","import { Injectable } from '@angular/core';\nimport { StorageAdapter } from './adapters/storage-adapter';\nimport { CookieAdapter } from './adapters/cookie-adapter';\nimport { LocalStorageAdapter } from './adapters/local-storage-adapter';\nimport { SessionStorageAdapter } from './adapters/session-storage-adapter';\nexport class PersistentDataService {\n/**\n * Save the item in some form of persistent storage\n * @param {?} key\n * @param {?} value\n * @param {?=} type\n * @return {?}\n */\nsetItem(key: string, value: string, type: PersistentDataStorageType = PersistentDataStorageType.LocalStorage): void {\n        this.getAdapter(type).setItem(key, value);\n    }\n/**\n * Get a stored value from persistent storage\n * @param {?} key\n * @param {?=} type\n * @return {?}\n */\ngetItem(key: string, type: PersistentDataStorageType = PersistentDataStorageType.LocalStorage): string {\n        return this.getAdapter(type).getItem(key);\n    }\n/**\n * Remove a stored value from persistent storage\n * @param {?} key\n * @param {?=} type\n * @return {?}\n */\nremoveItem(key: string, type: PersistentDataStorageType = PersistentDataStorageType.LocalStorage): void {\n        this.getAdapter(type).removeItem(key);\n    }\n/**\n * Remove a stored value from persistent storage\n * @param {?=} type\n * @return {?}\n */\nclear(type: PersistentDataStorageType = PersistentDataStorageType.LocalStorage): void {\n        this.getAdapter(type).clear();\n    }\n/**\n * Return the appropriate adapter based on the type requested\n * @param {?} type\n * @return {?}\n */\nprivate getAdapter(type: PersistentDataStorageType): StorageAdapter {\n\n        switch (type) {\n\n            case PersistentDataStorageType.Cookie:\n                return new CookieAdapter();\n\n            case PersistentDataStorageType.LocalStorage:\n                const /** @type {?} */ localStorageAdapter = new LocalStorageAdapter();\n                return localStorageAdapter.getSupported();\n\n            case PersistentDataStorageType.SessionStorage:\n                const /** @type {?} */ sessionStorageAdapter = new SessionStorageAdapter();\n                return sessionStorageAdapter.getSupported();\n        }\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction PersistentDataService_tsickle_Closure_declarations() {\n/** @type {?} */\nPersistentDataService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nPersistentDataService.ctorParameters;\n}\n\nexport type PersistentDataStorageType = number;\nexport let PersistentDataStorageType: any = {};\nPersistentDataStorageType.LocalStorage = 0;\nPersistentDataStorageType.Cookie = 1;\nPersistentDataStorageType.SessionStorage = 2;\nPersistentDataStorageType[PersistentDataStorageType.LocalStorage] = \"LocalStorage\";\nPersistentDataStorageType[PersistentDataStorageType.Cookie] = \"Cookie\";\nPersistentDataStorageType[PersistentDataStorageType.SessionStorage] = \"SessionStorage\";\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\n\nimport { PersistentDataService } from './persistent-data.service';\nexport class PersistentDataModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    providers: [PersistentDataService],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction PersistentDataModule_tsickle_Closure_declarations() {\n/** @type {?} */\nPersistentDataModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nPersistentDataModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","\n/**\n * @abstract\n */\nexport abstract class StorageAdapter {\n/**\n * @abstract\n * @param {?} key\n * @return {?}\n */\ngetItem(key: string) {}\n/**\n * @abstract\n * @param {?} key\n * @param {?} value\n * @return {?}\n */\nsetItem(key: string, value: string) {}\n/**\n * @abstract\n * @param {?} key\n * @return {?}\n */\nremoveItem(key: string) {}\n/**\n * @abstract\n * @return {?}\n */\nclear() {}\n/**\n * @abstract\n * @return {?}\n */\ngetSupported() {}\n}","import { Directive, ElementRef, Injector, Input, Output, EventEmitter } from '@angular/core';\nimport { UpgradeComponent } from '@angular/upgrade/static';\nexport class ContactsNg1Component extends UpgradeComponent {\n\n     contacts: Contact[];\n     organization: string;\n     size: 'medium' | 'small';\n     colors: any;\n     maxContacts: number;\n\n     overflowClick: EventEmitter<void> = new EventEmitter<void>();\n/**\n * @param {?} elementRef\n * @param {?} injector\n */\nconstructor(elementRef: ElementRef, injector: Injector) {\n        super('contactGroup', elementRef, injector);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'contact-group'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Injector, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'contacts': [{ type: Input },],\n'organization': [{ type: Input },],\n'size': [{ type: Input },],\n'colors': [{ type: Input },],\n'maxContacts': [{ type: Input },],\n'overflowClick': [{ type: Output },],\n};\n}\n\nfunction ContactsNg1Component_tsickle_Closure_declarations() {\n/** @type {?} */\nContactsNg1Component.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nContactsNg1Component.ctorParameters;\n/** @type {?} */\nContactsNg1Component.propDecorators;\n/** @type {?} */\nContactsNg1Component.prototype.contacts;\n/** @type {?} */\nContactsNg1Component.prototype.organization;\n/** @type {?} */\nContactsNg1Component.prototype.size;\n/** @type {?} */\nContactsNg1Component.prototype.colors;\n/** @type {?} */\nContactsNg1Component.prototype.maxContacts;\n/** @type {?} */\nContactsNg1Component.prototype.overflowClick;\n}\n\n\nexport interface Contact {\n    test: string;\n    status: 'active' | 'passive';\n    customTooltip?: {\n        template: string,\n        tooltipPosition: string;\n        data?: any;\n    };\n}\n\nexport interface Organization {\n    text: string;\n    label: 'external' | 'risk';\n    tooltip?: string;\n    customTooltip?: {\n        template: string,\n        tooltipPosition: string;\n        data?: any;\n    };\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ElementRef, Injector, Input, Output, EventEmitter } from '@angular/core';\nimport { UpgradeComponent } from '@angular/upgrade/static';\nexport class ExpandInputNg1Component extends UpgradeComponent {\n\n     elname: string;\n     placeHolder: string;\n     className: string;\n     clearTextIcon: string;\n     closeSearch: string;\n     expandAlways: boolean;\n     onEnter: Function;\n\n     focus: EventEmitter<string> = new EventEmitter<string>();\n/**\n * @param {?} elementRef\n * @param {?} injector\n */\nconstructor(elementRef: ElementRef, injector: Injector) {\n        super('expandInput', elementRef, injector);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'expand-input'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Injector, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'elname': [{ type: Input },],\n'placeHolder': [{ type: Input },],\n'className': [{ type: Input },],\n'clearTextIcon': [{ type: Input },],\n'closeSearch': [{ type: Input },],\n'expandAlways': [{ type: Input },],\n'onEnter': [{ type: Input },],\n'focus': [{ type: Output },],\n};\n}\n\nfunction ExpandInputNg1Component_tsickle_Closure_declarations() {\n/** @type {?} */\nExpandInputNg1Component.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nExpandInputNg1Component.ctorParameters;\n/** @type {?} */\nExpandInputNg1Component.propDecorators;\n/** @type {?} */\nExpandInputNg1Component.prototype.elname;\n/** @type {?} */\nExpandInputNg1Component.prototype.placeHolder;\n/** @type {?} */\nExpandInputNg1Component.prototype.className;\n/** @type {?} */\nExpandInputNg1Component.prototype.clearTextIcon;\n/** @type {?} */\nExpandInputNg1Component.prototype.closeSearch;\n/** @type {?} */\nExpandInputNg1Component.prototype.expandAlways;\n/** @type {?} */\nExpandInputNg1Component.prototype.onEnter;\n/** @type {?} */\nExpandInputNg1Component.prototype.focus;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ElementRef, Injector, Input, EventEmitter } from '@angular/core';\nimport { UpgradeComponent } from '@angular/upgrade/static';\nexport class FloatingActionButtonNg1Component extends UpgradeComponent {\n\n     items: FloatingActionButtonItem[] = [];\n     primary: string;\n     direction: 'top' | 'right' | 'bottom' | 'left';\n     fabTooltip: string;\n     fabTooltipPlacement: 'top' | 'right' | 'bottom' | 'left';\n/**\n * @param {?} elementRef\n * @param {?} injector\n */\nconstructor(elementRef: ElementRef, injector: Injector) {\n        super('floatingActionButton', elementRef, injector);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'floating-action-button'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Injector, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'items': [{ type: Input },],\n'primary': [{ type: Input },],\n'direction': [{ type: Input },],\n'fabTooltip': [{ type: Input },],\n'fabTooltipPlacement': [{ type: Input },],\n};\n}\n\nfunction FloatingActionButtonNg1Component_tsickle_Closure_declarations() {\n/** @type {?} */\nFloatingActionButtonNg1Component.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFloatingActionButtonNg1Component.ctorParameters;\n/** @type {?} */\nFloatingActionButtonNg1Component.propDecorators;\n/** @type {?} */\nFloatingActionButtonNg1Component.prototype.items;\n/** @type {?} */\nFloatingActionButtonNg1Component.prototype.primary;\n/** @type {?} */\nFloatingActionButtonNg1Component.prototype.direction;\n/** @type {?} */\nFloatingActionButtonNg1Component.prototype.fabTooltip;\n/** @type {?} */\nFloatingActionButtonNg1Component.prototype.fabTooltipPlacement;\n}\n\n\nexport interface FloatingActionButtonItem {\n    icon: string;\n    event: Function;\n    tooltip?: string;\n    tooltipPlacement?: string;\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ElementRef, Injector, Input, Output, EventEmitter } from '@angular/core';\nimport { UpgradeComponent } from '@angular/upgrade/static';\nexport class FlotNg1Component extends UpgradeComponent {\n\n     dataset: any;\n     options: any;\n     callback: any;\n     donutLabels: any;\n     onPlotClick = new EventEmitter<any>();\n     onPlotHover = new EventEmitter<any>();\n/**\n * @param {?} elementRef\n * @param {?} injector\n */\nconstructor(elementRef: ElementRef, injector: Injector) {\n        super('uxFlotNg1', elementRef, injector);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'flot'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Injector, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'dataset': [{ type: Input },],\n'options': [{ type: Input },],\n'callback': [{ type: Input },],\n'donutLabels': [{ type: Input },],\n'onPlotClick': [{ type: Output },],\n'onPlotHover': [{ type: Output },],\n};\n}\n\nfunction FlotNg1Component_tsickle_Closure_declarations() {\n/** @type {?} */\nFlotNg1Component.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFlotNg1Component.ctorParameters;\n/** @type {?} */\nFlotNg1Component.propDecorators;\n/** @type {?} */\nFlotNg1Component.prototype.dataset;\n/** @type {?} */\nFlotNg1Component.prototype.options;\n/** @type {?} */\nFlotNg1Component.prototype.callback;\n/** @type {?} */\nFlotNg1Component.prototype.donutLabels;\n/** @type {?} */\nFlotNg1Component.prototype.onPlotClick;\n/** @type {?} */\nFlotNg1Component.prototype.onPlotHover;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ElementRef, Injector, Input, EventEmitter } from '@angular/core';\nimport { UpgradeComponent } from '@angular/upgrade/static';\nexport class GridNg1Component extends UpgradeComponent {\n\n     source: any[] = [];\n     columns: GridColumn[] = [];\n/**\n * The following inputs are undocumented\n */\noptions: any;\n     events: any;\n     plugins: any;\n/**\n * @param {?} elementRef\n * @param {?} injector\n */\nconstructor(elementRef: ElementRef, injector: Injector) {\n        super('grid', elementRef, injector);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'grid'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Injector, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'source': [{ type: Input },],\n'columns': [{ type: Input },],\n'options': [{ type: Input },],\n'events': [{ type: Input },],\n'plugins': [{ type: Input },],\n};\n}\n\nfunction GridNg1Component_tsickle_Closure_declarations() {\n/** @type {?} */\nGridNg1Component.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nGridNg1Component.ctorParameters;\n/** @type {?} */\nGridNg1Component.propDecorators;\n/** @type {?} */\nGridNg1Component.prototype.source;\n/** @type {?} */\nGridNg1Component.prototype.columns;\n/**\n * The following inputs are undocumented\n * @type {?}\n */\nGridNg1Component.prototype.options;\n/** @type {?} */\nGridNg1Component.prototype.events;\n/** @type {?} */\nGridNg1Component.prototype.plugins;\n}\n\n\nexport interface GridColumn {\n    title: string;\n    template: string;\n    width?: string;\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ElementRef, Injector, Input, EventEmitter } from '@angular/core';\nimport { UpgradeComponent } from '@angular/upgrade/static';\nexport class HierarchyBarNg1Component extends UpgradeComponent {\n\n     data: any[];\n     options: HierarchyBarOptions;\n     selectNode: any;\n     containerClass: any;\n/**\n * @param {?} elementRef\n * @param {?} injector\n */\nconstructor(elementRef: ElementRef, injector: Injector) {\n        super('hierarchyBar', elementRef, injector);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'hierarchy-bar'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Injector, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'data': [{ type: Input },],\n'options': [{ type: Input },],\n'selectNode': [{ type: Input },],\n'containerClass': [{ type: Input },],\n};\n}\n\nfunction HierarchyBarNg1Component_tsickle_Closure_declarations() {\n/** @type {?} */\nHierarchyBarNg1Component.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nHierarchyBarNg1Component.ctorParameters;\n/** @type {?} */\nHierarchyBarNg1Component.propDecorators;\n/** @type {?} */\nHierarchyBarNg1Component.prototype.data;\n/** @type {?} */\nHierarchyBarNg1Component.prototype.options;\n/** @type {?} */\nHierarchyBarNg1Component.prototype.selectNode;\n/** @type {?} */\nHierarchyBarNg1Component.prototype.containerClass;\n}\n\n\nexport interface HierarchyBarOptions {\n    enabled: boolean;\n    overview?: Function;\n    image: Function;\n    valueFormatter: Function;\n    action?: {\n        title: string;\n        event: Function;\n    };\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ElementRef, Injector, Input, Output, EventEmitter } from '@angular/core';\nimport { UpgradeComponent } from '@angular/upgrade/static';\nexport class MarqueeWizardNg1Component extends UpgradeComponent {\n\n     wizardIcon: string;\n     wizardSteps: MarqueeWizardStep[];\n     buttonOptions: MarqueeWizardOptions;\n     onChanging: Function;\n     onFinished: Function;\n     onFinishing: Function;\n     onCanceled: Function;\n     isVisited: boolean;\n     sideInfo: MarqueeWizardSideInfo;\n\n     wizardStepsChange: EventEmitter<MarqueeWizardStep[]> = new EventEmitter<MarqueeWizardStep[]>();\n/**\n * @param {?} elementRef\n * @param {?} injector\n */\nconstructor(elementRef: ElementRef, injector: Injector) {\n        super('marqueeWizard', elementRef, injector);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'marquee-wizard'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Injector, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'wizardIcon': [{ type: Input },],\n'wizardSteps': [{ type: Input },],\n'buttonOptions': [{ type: Input },],\n'onChanging': [{ type: Input },],\n'onFinished': [{ type: Input },],\n'onFinishing': [{ type: Input },],\n'onCanceled': [{ type: Input },],\n'isVisited': [{ type: Input },],\n'sideInfo': [{ type: Input },],\n'wizardStepsChange': [{ type: Output },],\n};\n}\n\nfunction MarqueeWizardNg1Component_tsickle_Closure_declarations() {\n/** @type {?} */\nMarqueeWizardNg1Component.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMarqueeWizardNg1Component.ctorParameters;\n/** @type {?} */\nMarqueeWizardNg1Component.propDecorators;\n/** @type {?} */\nMarqueeWizardNg1Component.prototype.wizardIcon;\n/** @type {?} */\nMarqueeWizardNg1Component.prototype.wizardSteps;\n/** @type {?} */\nMarqueeWizardNg1Component.prototype.buttonOptions;\n/** @type {?} */\nMarqueeWizardNg1Component.prototype.onChanging;\n/** @type {?} */\nMarqueeWizardNg1Component.prototype.onFinished;\n/** @type {?} */\nMarqueeWizardNg1Component.prototype.onFinishing;\n/** @type {?} */\nMarqueeWizardNg1Component.prototype.onCanceled;\n/** @type {?} */\nMarqueeWizardNg1Component.prototype.isVisited;\n/** @type {?} */\nMarqueeWizardNg1Component.prototype.sideInfo;\n/** @type {?} */\nMarqueeWizardNg1Component.prototype.wizardStepsChange;\n}\n\n\nexport interface MarqueeWizardStep {\n    title: string;\n    html?: string;\n    header?: string;\n    templateUrl?: string;\n    hidden?: boolean;\n    error?: boolean;\n    completed?: boolean;\n    visited?: boolean;\n}\n\nexport interface MarqueeWizardOptions {\n    nextText?: string;\n    previousText?: string;\n    finishText?: string;\n    showNext?: boolean;\n    showPrevious?: boolean;\n    showFinish?: boolean;\n    nextTooltip?: string;\n    previousTooltip?: string;\n    finishTooltip?: string;\n    previousEnabled?: boolean;\n    nextEnabled?: boolean;\n    finishEnabled?: boolean;\n}\n\nexport interface MarqueeWizardSideInfo {\n    title: string;\n    description: string;\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ElementRef, Injector, Input } from '@angular/core';\nimport { UpgradeComponent } from '@angular/upgrade/static';\nexport class NestedDonutNg1Component extends UpgradeComponent {\n\n     dataset: any;\n     options: any;\n/**\n * @param {?} elementRef\n * @param {?} injector\n */\nconstructor(elementRef: ElementRef, injector: Injector) {\n        super('uxNestedDonutNg1', elementRef, injector);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'nested-donut'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Injector, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'dataset': [{ type: Input },],\n'options': [{ type: Input },],\n};\n}\n\nfunction NestedDonutNg1Component_tsickle_Closure_declarations() {\n/** @type {?} */\nNestedDonutNg1Component.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNestedDonutNg1Component.ctorParameters;\n/** @type {?} */\nNestedDonutNg1Component.propDecorators;\n/** @type {?} */\nNestedDonutNg1Component.prototype.dataset;\n/** @type {?} */\nNestedDonutNg1Component.prototype.options;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ElementRef, Injector, Input, Output, EventEmitter } from '@angular/core';\nimport { UpgradeComponent } from '@angular/upgrade/static';\nexport class OrganizationChartNg1Component extends UpgradeComponent {\n\n     data: any;\n     options: any;\n     dataChange = new EventEmitter<any>();\n     optionsChange = new EventEmitter<any>();\n/**\n * @param {?} elementRef\n * @param {?} injector\n */\nconstructor(elementRef: ElementRef, injector: Injector) {\n        super('uxOrganizationChartNg1', elementRef, injector);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'organization-chart'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Injector, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'data': [{ type: Input },],\n'options': [{ type: Input },],\n'dataChange': [{ type: Output },],\n'optionsChange': [{ type: Output },],\n};\n}\n\nfunction OrganizationChartNg1Component_tsickle_Closure_declarations() {\n/** @type {?} */\nOrganizationChartNg1Component.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nOrganizationChartNg1Component.ctorParameters;\n/** @type {?} */\nOrganizationChartNg1Component.propDecorators;\n/** @type {?} */\nOrganizationChartNg1Component.prototype.data;\n/** @type {?} */\nOrganizationChartNg1Component.prototype.options;\n/** @type {?} */\nOrganizationChartNg1Component.prototype.dataChange;\n/** @type {?} */\nOrganizationChartNg1Component.prototype.optionsChange;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ElementRef, Injector, Input } from '@angular/core';\nimport { UpgradeComponent } from '@angular/upgrade/static';\nexport class PartitionMapNg1Component extends UpgradeComponent {\n\n     chartData: any;\n     chartOptions: any;\n     chartLoading: any;\n/**\n * @param {?} elementRef\n * @param {?} injector\n */\nconstructor(elementRef: ElementRef, injector: Injector) {\n        super('uxPartitionMapNg1', elementRef, injector);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'partition-map'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Injector, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'chartData': [{ type: Input },],\n'chartOptions': [{ type: Input },],\n'chartLoading': [{ type: Input },],\n};\n}\n\nfunction PartitionMapNg1Component_tsickle_Closure_declarations() {\n/** @type {?} */\nPartitionMapNg1Component.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nPartitionMapNg1Component.ctorParameters;\n/** @type {?} */\nPartitionMapNg1Component.propDecorators;\n/** @type {?} */\nPartitionMapNg1Component.prototype.chartData;\n/** @type {?} */\nPartitionMapNg1Component.prototype.chartOptions;\n/** @type {?} */\nPartitionMapNg1Component.prototype.chartLoading;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ElementRef, Injector, Input } from '@angular/core';\nimport { UpgradeComponent } from '@angular/upgrade/static';\nexport class PeityBarChartNg1Component extends UpgradeComponent {\n\n     data: any;\n     options: any;\n/**\n * @param {?} elementRef\n * @param {?} injector\n */\nconstructor(elementRef: ElementRef, injector: Injector) {\n        super('uxPeityBarChartNg1', elementRef, injector);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'bar-chart'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Injector, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'data': [{ type: Input },],\n'options': [{ type: Input },],\n};\n}\n\nfunction PeityBarChartNg1Component_tsickle_Closure_declarations() {\n/** @type {?} */\nPeityBarChartNg1Component.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nPeityBarChartNg1Component.ctorParameters;\n/** @type {?} */\nPeityBarChartNg1Component.propDecorators;\n/** @type {?} */\nPeityBarChartNg1Component.prototype.data;\n/** @type {?} */\nPeityBarChartNg1Component.prototype.options;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ElementRef, Injector, Input } from '@angular/core';\nimport { UpgradeComponent } from '@angular/upgrade/static';\nexport class PeityLineChartNg1Component extends UpgradeComponent {\n\n     data: any;\n     options: any;\n/**\n * @param {?} elementRef\n * @param {?} injector\n */\nconstructor(elementRef: ElementRef, injector: Injector) {\n        super('uxPeityLineChartNg1', elementRef, injector);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'line-chart'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Injector, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'data': [{ type: Input },],\n'options': [{ type: Input },],\n};\n}\n\nfunction PeityLineChartNg1Component_tsickle_Closure_declarations() {\n/** @type {?} */\nPeityLineChartNg1Component.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nPeityLineChartNg1Component.ctorParameters;\n/** @type {?} */\nPeityLineChartNg1Component.propDecorators;\n/** @type {?} */\nPeityLineChartNg1Component.prototype.data;\n/** @type {?} */\nPeityLineChartNg1Component.prototype.options;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ElementRef, Injector, Input } from '@angular/core';\nimport { UpgradeComponent } from '@angular/upgrade/static';\nexport class PeityPieChartNg1Component extends UpgradeComponent {\n\n     data: any;\n     options: any;\n/**\n * @param {?} elementRef\n * @param {?} injector\n */\nconstructor(elementRef: ElementRef, injector: Injector) {\n        super('uxPeityPieChartNg1', elementRef, injector);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'pie-chart'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Injector, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'data': [{ type: Input },],\n'options': [{ type: Input },],\n};\n}\n\nfunction PeityPieChartNg1Component_tsickle_Closure_declarations() {\n/** @type {?} */\nPeityPieChartNg1Component.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nPeityPieChartNg1Component.ctorParameters;\n/** @type {?} */\nPeityPieChartNg1Component.propDecorators;\n/** @type {?} */\nPeityPieChartNg1Component.prototype.data;\n/** @type {?} */\nPeityPieChartNg1Component.prototype.options;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ElementRef, Injector, Input } from '@angular/core';\nimport { UpgradeComponent } from '@angular/upgrade/static';\nexport class PeityUpdatingLineChartNg1Component extends UpgradeComponent {\n\n     data: any;\n     options: any;\n     method: any;\n     updateinterval: any;\n/**\n * @param {?} elementRef\n * @param {?} injector\n */\nconstructor(elementRef: ElementRef, injector: Injector) {\n        super('uxPeityUpdatingLineChartNg1', elementRef, injector);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'updating-line-chart'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Injector, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'data': [{ type: Input },],\n'options': [{ type: Input },],\n'method': [{ type: Input },],\n'updateinterval': [{ type: Input },],\n};\n}\n\nfunction PeityUpdatingLineChartNg1Component_tsickle_Closure_declarations() {\n/** @type {?} */\nPeityUpdatingLineChartNg1Component.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nPeityUpdatingLineChartNg1Component.ctorParameters;\n/** @type {?} */\nPeityUpdatingLineChartNg1Component.propDecorators;\n/** @type {?} */\nPeityUpdatingLineChartNg1Component.prototype.data;\n/** @type {?} */\nPeityUpdatingLineChartNg1Component.prototype.options;\n/** @type {?} */\nPeityUpdatingLineChartNg1Component.prototype.method;\n/** @type {?} */\nPeityUpdatingLineChartNg1Component.prototype.updateinterval;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ElementRef, Injector, Input } from '@angular/core';\nimport { UpgradeComponent } from '@angular/upgrade/static';\nexport class SankeyNg1Component extends UpgradeComponent {\n\n     chartSize: any;\n     chartData: any;\n     options: any;\n     click: any;\n/**\n * @param {?} elementRef\n * @param {?} injector\n */\nconstructor(elementRef: ElementRef, injector: Injector) {\n        super('uxSankeyNg1', elementRef, injector);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'sankey'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Injector, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'chartSize': [{ type: Input },],\n'chartData': [{ type: Input },],\n'options': [{ type: Input },],\n'click': [{ type: Input },],\n};\n}\n\nfunction SankeyNg1Component_tsickle_Closure_declarations() {\n/** @type {?} */\nSankeyNg1Component.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSankeyNg1Component.ctorParameters;\n/** @type {?} */\nSankeyNg1Component.propDecorators;\n/** @type {?} */\nSankeyNg1Component.prototype.chartSize;\n/** @type {?} */\nSankeyNg1Component.prototype.chartData;\n/** @type {?} */\nSankeyNg1Component.prototype.options;\n/** @type {?} */\nSankeyNg1Component.prototype.click;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ElementRef, Injector, Input } from '@angular/core';\nimport { UpgradeComponent } from '@angular/upgrade/static';\nexport class SearchToolbarNg1Component extends UpgradeComponent {\n\n     searchTypeahead: any[];\n     placeHolder: string;\n     closeSearch: string;\n     onSearch: Function;\n     onFocus: Function;\n/**\n * @param {?} elementRef\n * @param {?} injector\n */\nconstructor(elementRef: ElementRef, injector: Injector) {\n        super('searchToolbar', elementRef, injector);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'search-toolbar'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Injector, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'searchTypeahead': [{ type: Input },],\n'placeHolder': [{ type: Input },],\n'closeSearch': [{ type: Input },],\n'onSearch': [{ type: Input },],\n'onFocus': [{ type: Input },],\n};\n}\n\nfunction SearchToolbarNg1Component_tsickle_Closure_declarations() {\n/** @type {?} */\nSearchToolbarNg1Component.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSearchToolbarNg1Component.ctorParameters;\n/** @type {?} */\nSearchToolbarNg1Component.propDecorators;\n/** @type {?} */\nSearchToolbarNg1Component.prototype.searchTypeahead;\n/** @type {?} */\nSearchToolbarNg1Component.prototype.placeHolder;\n/** @type {?} */\nSearchToolbarNg1Component.prototype.closeSearch;\n/** @type {?} */\nSearchToolbarNg1Component.prototype.onSearch;\n/** @type {?} */\nSearchToolbarNg1Component.prototype.onFocus;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ElementRef, Injector, Input, Output, EventEmitter } from '@angular/core';\nimport { UpgradeComponent } from '@angular/upgrade/static';\nexport class SelectTableNg1Component extends UpgradeComponent {\n\n     values: any[];\n     multipleSelect: boolean;\n     selectKey: string;\n     selected: string;\n     searchText: string;\n     tableHeight: string;\n     selectHiddenItems: 'clear' | 'reselect';\n\n     selectedChange: EventEmitter<string> = new EventEmitter<string>();\n/**\n * @param {?} elementRef\n * @param {?} injector\n */\nconstructor(elementRef: ElementRef, injector: Injector) {\n        super('selectTable', elementRef, injector);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'select-table'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Injector, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'values': [{ type: Input },],\n'multipleSelect': [{ type: Input },],\n'selectKey': [{ type: Input },],\n'selected': [{ type: Input },],\n'searchText': [{ type: Input },],\n'tableHeight': [{ type: Input },],\n'selectHiddenItems': [{ type: Input },],\n'selectedChange': [{ type: Output },],\n};\n}\n\nfunction SelectTableNg1Component_tsickle_Closure_declarations() {\n/** @type {?} */\nSelectTableNg1Component.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSelectTableNg1Component.ctorParameters;\n/** @type {?} */\nSelectTableNg1Component.propDecorators;\n/** @type {?} */\nSelectTableNg1Component.prototype.values;\n/** @type {?} */\nSelectTableNg1Component.prototype.multipleSelect;\n/** @type {?} */\nSelectTableNg1Component.prototype.selectKey;\n/** @type {?} */\nSelectTableNg1Component.prototype.selected;\n/** @type {?} */\nSelectTableNg1Component.prototype.searchText;\n/** @type {?} */\nSelectTableNg1Component.prototype.tableHeight;\n/** @type {?} */\nSelectTableNg1Component.prototype.selectHiddenItems;\n/** @type {?} */\nSelectTableNg1Component.prototype.selectedChange;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ElementRef, Injector, Input, Output, EventEmitter, forwardRef } from '@angular/core';\nimport { UpgradeComponent } from '@angular/upgrade/static';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nexport const /** @type {?} */ SLIDER_CHART_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => SliderChartNg1Component),\n    multi: true\n};\nexport class SliderChartNg1Component extends UpgradeComponent implements ControlValueAccessor {\n\n     sliderOptions: any;\n     ngModel: any;\n     chartOptions: any;\n     chartData: any;\n\n     ngModelChange: EventEmitter<any> = new EventEmitter<any>();\n/**\n * @param {?} elementRef\n * @param {?} injector\n */\nconstructor(elementRef: ElementRef, injector: Injector) {\n        super('sliderChart', elementRef, injector);\n    }\n/**\n * @param {?} obj\n * @return {?}\n */\nwriteValue(obj: any): void { }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnChange(fn: any): void { }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnTouched(fn: any): void { }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'slider-chart',\n    providers: [SLIDER_CHART_VALUE_ACCESSOR]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Injector, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'sliderOptions': [{ type: Input },],\n'ngModel': [{ type: Input },],\n'chartOptions': [{ type: Input },],\n'chartData': [{ type: Input },],\n'ngModelChange': [{ type: Output },],\n};\n}\n\nfunction SliderChartNg1Component_tsickle_Closure_declarations() {\n/** @type {?} */\nSliderChartNg1Component.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSliderChartNg1Component.ctorParameters;\n/** @type {?} */\nSliderChartNg1Component.propDecorators;\n/** @type {?} */\nSliderChartNg1Component.prototype.sliderOptions;\n/** @type {?} */\nSliderChartNg1Component.prototype.ngModel;\n/** @type {?} */\nSliderChartNg1Component.prototype.chartOptions;\n/** @type {?} */\nSliderChartNg1Component.prototype.chartData;\n/** @type {?} */\nSliderChartNg1Component.prototype.ngModelChange;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ElementRef, Injector, Input } from '@angular/core';\nimport { UpgradeComponent } from '@angular/upgrade/static';\nexport class SocialChartNg1Component extends UpgradeComponent {\n\n     data: any;\n     options: any;\n     width: any;\n     height: any;\n     api: any;\n     communities: any;\n     detailStyle: any;\n     popoverStyle: any;\n     nodeDetail: any;\n     edgeDetail: any;\n     nodePopover: any;\n     edgePopover: any;\n     forceAtlasDuration: any;\n     nodeSizeAttribute: any;\n     startMaximized: any;\n     startMaximised: any;\n     showMaximizeControl: any;\n     showMaximiseControl: any;\n     socialChartContainer: any;\n     fullscreenButtonPosition: any;\n     localStrings: any;\n     chartTitle: any;\n     titleDisplayTime: any;\n     edgeWeightInfluence: any;\n     minLabels: any;\n/**\n * @param {?} elementRef\n * @param {?} injector\n */\nconstructor(elementRef: ElementRef, injector: Injector) {\n        super('uxSocialChartNg1', elementRef, injector);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'social-chart'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Injector, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'data': [{ type: Input },],\n'options': [{ type: Input },],\n'width': [{ type: Input },],\n'height': [{ type: Input },],\n'api': [{ type: Input },],\n'communities': [{ type: Input },],\n'detailStyle': [{ type: Input },],\n'popoverStyle': [{ type: Input },],\n'nodeDetail': [{ type: Input },],\n'edgeDetail': [{ type: Input },],\n'nodePopover': [{ type: Input },],\n'edgePopover': [{ type: Input },],\n'forceAtlasDuration': [{ type: Input },],\n'nodeSizeAttribute': [{ type: Input },],\n'startMaximized': [{ type: Input },],\n'startMaximised': [{ type: Input },],\n'showMaximizeControl': [{ type: Input },],\n'showMaximiseControl': [{ type: Input },],\n'socialChartContainer': [{ type: Input },],\n'fullscreenButtonPosition': [{ type: Input },],\n'localStrings': [{ type: Input },],\n'chartTitle': [{ type: Input },],\n'titleDisplayTime': [{ type: Input },],\n'edgeWeightInfluence': [{ type: Input },],\n'minLabels': [{ type: Input },],\n};\n}\n\nfunction SocialChartNg1Component_tsickle_Closure_declarations() {\n/** @type {?} */\nSocialChartNg1Component.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSocialChartNg1Component.ctorParameters;\n/** @type {?} */\nSocialChartNg1Component.propDecorators;\n/** @type {?} */\nSocialChartNg1Component.prototype.data;\n/** @type {?} */\nSocialChartNg1Component.prototype.options;\n/** @type {?} */\nSocialChartNg1Component.prototype.width;\n/** @type {?} */\nSocialChartNg1Component.prototype.height;\n/** @type {?} */\nSocialChartNg1Component.prototype.api;\n/** @type {?} */\nSocialChartNg1Component.prototype.communities;\n/** @type {?} */\nSocialChartNg1Component.prototype.detailStyle;\n/** @type {?} */\nSocialChartNg1Component.prototype.popoverStyle;\n/** @type {?} */\nSocialChartNg1Component.prototype.nodeDetail;\n/** @type {?} */\nSocialChartNg1Component.prototype.edgeDetail;\n/** @type {?} */\nSocialChartNg1Component.prototype.nodePopover;\n/** @type {?} */\nSocialChartNg1Component.prototype.edgePopover;\n/** @type {?} */\nSocialChartNg1Component.prototype.forceAtlasDuration;\n/** @type {?} */\nSocialChartNg1Component.prototype.nodeSizeAttribute;\n/** @type {?} */\nSocialChartNg1Component.prototype.startMaximized;\n/** @type {?} */\nSocialChartNg1Component.prototype.startMaximised;\n/** @type {?} */\nSocialChartNg1Component.prototype.showMaximizeControl;\n/** @type {?} */\nSocialChartNg1Component.prototype.showMaximiseControl;\n/** @type {?} */\nSocialChartNg1Component.prototype.socialChartContainer;\n/** @type {?} */\nSocialChartNg1Component.prototype.fullscreenButtonPosition;\n/** @type {?} */\nSocialChartNg1Component.prototype.localStrings;\n/** @type {?} */\nSocialChartNg1Component.prototype.chartTitle;\n/** @type {?} */\nSocialChartNg1Component.prototype.titleDisplayTime;\n/** @type {?} */\nSocialChartNg1Component.prototype.edgeWeightInfluence;\n/** @type {?} */\nSocialChartNg1Component.prototype.minLabels;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ElementRef, Injector, Input, Output, EventEmitter } from '@angular/core';\nimport { UpgradeComponent } from '@angular/upgrade/static';\nexport class SortDirectionToggleNg1Component extends UpgradeComponent {\n\n     label: string;\n     sorters: SortDirectionToggleSorter[];\n     descend: boolean;\n/**\n * @param {?} elementRef\n * @param {?} injector\n */\nconstructor(elementRef: ElementRef, injector: Injector) {\n        super('sortDirectionToggle', elementRef, injector);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'sort-direction-toggle'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Injector, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'label': [{ type: Input },],\n'sorters': [{ type: Input },],\n'descend': [{ type: Input },],\n};\n}\n\nfunction SortDirectionToggleNg1Component_tsickle_Closure_declarations() {\n/** @type {?} */\nSortDirectionToggleNg1Component.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSortDirectionToggleNg1Component.ctorParameters;\n/** @type {?} */\nSortDirectionToggleNg1Component.propDecorators;\n/** @type {?} */\nSortDirectionToggleNg1Component.prototype.label;\n/** @type {?} */\nSortDirectionToggleNg1Component.prototype.sorters;\n/** @type {?} */\nSortDirectionToggleNg1Component.prototype.descend;\n}\n\n\nexport interface SortDirectionToggleSorter {\n    name: string;\n    sort: string;\n    defaultSorter: boolean;\n    select: Function;\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ElementRef, Injector, Input, Output, EventEmitter } from '@angular/core';\nimport { UpgradeComponent } from '@angular/upgrade/static';\nexport class TreeGridNg1Component extends UpgradeComponent {\n\n     data: TreeGridData[] | Function;\n     columns: TreeGridColumn[];\n     treeData: TreeGridData[];\n     selected: any[];\n     currentRow: any;\n     options: TreeGridOptions;\n\n     optionsChange: EventEmitter<TreeGridOptions> = new EventEmitter<TreeGridOptions>();\n     selectedChange: EventEmitter<any[]> = new EventEmitter<any[]>();\n     currentRowChange: EventEmitter<any> = new EventEmitter<any>();\n     treeDataChange: EventEmitter<TreeGridData[]> = new EventEmitter<TreeGridData[]>();\n/**\n * @param {?} elementRef\n * @param {?} injector\n */\nconstructor(elementRef: ElementRef, injector: Injector) {\n        super('treegrid', elementRef, injector);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'treegrid'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Injector, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'data': [{ type: Input },],\n'columns': [{ type: Input },],\n'treeData': [{ type: Input },],\n'selected': [{ type: Input },],\n'currentRow': [{ type: Input },],\n'options': [{ type: Input },],\n'optionsChange': [{ type: Output },],\n'selectedChange': [{ type: Output },],\n'currentRowChange': [{ type: Output },],\n'treeDataChange': [{ type: Output },],\n};\n}\n\nfunction TreeGridNg1Component_tsickle_Closure_declarations() {\n/** @type {?} */\nTreeGridNg1Component.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTreeGridNg1Component.ctorParameters;\n/** @type {?} */\nTreeGridNg1Component.propDecorators;\n/** @type {?} */\nTreeGridNg1Component.prototype.data;\n/** @type {?} */\nTreeGridNg1Component.prototype.columns;\n/** @type {?} */\nTreeGridNg1Component.prototype.treeData;\n/** @type {?} */\nTreeGridNg1Component.prototype.selected;\n/** @type {?} */\nTreeGridNg1Component.prototype.currentRow;\n/** @type {?} */\nTreeGridNg1Component.prototype.options;\n/** @type {?} */\nTreeGridNg1Component.prototype.optionsChange;\n/** @type {?} */\nTreeGridNg1Component.prototype.selectedChange;\n/** @type {?} */\nTreeGridNg1Component.prototype.currentRowChange;\n/** @type {?} */\nTreeGridNg1Component.prototype.treeDataChange;\n}\n\n\nexport interface TreeGridColumn {\n    name: string;\n    value?: string | Function;\n    template?: string;\n    headerClass?: string;\n    cellClass?: string;\n    width?: string;\n    tooltip?: string;\n    tooltipPlacement?: 'top' | 'bottom' | 'left' | 'right';\n}\n\nexport interface TreeGridData {\n    dataItem: any;\n    children: any[];\n    expanded: boolean;\n    expanding: boolean;\n    level: number;\n    api: any;\n}\n\nexport interface TreeGridOptions {\n    childrenProperty?: string;\n    hasChildren?: Function;\n    maxDepth?: number;\n    expandTopLevel?: boolean;\n    select?: any;\n    expander?: any;\n    icons?: any;\n    rowClass?: string | Function;\n    sort?: Function;\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ElementRef, Injector, Input, EventEmitter } from '@angular/core';\nimport { UpgradeComponent } from '@angular/upgrade/static';\nexport class ThumbnailNg1Component extends UpgradeComponent {\n\n     url: string;\n     show: boolean;\n     width: string;\n     height: string;\n/**\n * @param {?} elementRef\n * @param {?} injector\n */\nconstructor(elementRef: ElementRef, injector: Injector) {\n        super('thumbnail', elementRef, injector);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'thumbnail'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Injector, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'url': [{ type: Input },],\n'show': [{ type: Input },],\n'width': [{ type: Input },],\n'height': [{ type: Input },],\n};\n}\n\nfunction ThumbnailNg1Component_tsickle_Closure_declarations() {\n/** @type {?} */\nThumbnailNg1Component.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nThumbnailNg1Component.ctorParameters;\n/** @type {?} */\nThumbnailNg1Component.propDecorators;\n/** @type {?} */\nThumbnailNg1Component.prototype.url;\n/** @type {?} */\nThumbnailNg1Component.prototype.show;\n/** @type {?} */\nThumbnailNg1Component.prototype.width;\n/** @type {?} */\nThumbnailNg1Component.prototype.height;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable, Inject, Injector } from '@angular/core';\nimport { INavigationMenuService } from './navigation-menu.interface';\nexport class NavigationMenuService implements INavigationMenuService {\n/**\n * @param {?} _navigationMenuService\n */\nconstructor(\nprivate _navigationMenuService: INavigationMenuService) { }\n/**\n * @return {?}\n */\nshow(): void {\n        this._navigationMenuService.show();\n    }\n/**\n * @return {?}\n */\nhide(): void {\n        this._navigationMenuService.hide();\n    }\n/**\n * @return {?}\n */\nvisible(): boolean {\n        return this._navigationMenuService.visible();\n    }\n/**\n * @return {?}\n */\ncollapseAtWidth(): number {\n        return this._navigationMenuService.collapseAtWidth();\n    }\n/**\n * @param {?} width\n * @return {?}\n */\nsetCollapseAtWidth(width: number): void {\n        this._navigationMenuService.setCollapseAtWidth(width);\n    }\n/**\n * @return {?}\n */\nsetDefaultCollapseAtWidth(): void {\n        this._navigationMenuService.setDefaultCollapseAtWidth();\n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: undefined, decorators: [{ type: Inject, args: ['$navigationMenu', ] }, ]},\n];\n}\n\nfunction NavigationMenuService_tsickle_Closure_declarations() {\n/** @type {?} */\nNavigationMenuService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNavigationMenuService.ctorParameters;\n/** @type {?} */\nNavigationMenuService.prototype._navigationMenuService;\n}\n\n/**\n * @param {?} injector\n * @return {?}\n */\nexport function navigationMenuServiceFactory(injector: Injector) {\n    return injector.get('$navigationMenu');\n}\n\nexport const /** @type {?} */ navigationMenuServiceProvider = {\n    provide: '$navigationMenu',\n    useFactory: navigationMenuServiceFactory,\n    deps: ['$injector']\n};\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable, Inject, Injector } from '@angular/core';\nimport { IPdfService, PdfColumns, PdfOptions, PdfDocument } from './pdf.interface';\nexport class PdfService implements IPdfService {\n/**\n * @param {?} _pdfService\n */\nconstructor(\nprivate _pdfService: IPdfService) { }\n/**\n * @param {?} columns\n * @param {?} rows\n * @param {?=} options\n * @return {?}\n */\ncreateTable(columns: PdfColumns, rows: any[], options: PdfOptions = {}): PdfDocument {\n        return this._pdfService.createTable(columns, rows, options);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: undefined, decorators: [{ type: Inject, args: ['$pdf', ] }, ]},\n];\n}\n\nfunction PdfService_tsickle_Closure_declarations() {\n/** @type {?} */\nPdfService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nPdfService.ctorParameters;\n/** @type {?} */\nPdfService.prototype._pdfService;\n}\n\n/**\n * @param {?} injector\n * @return {?}\n */\nexport function pdfServiceFactory(injector: Injector) {\n    return injector.get('$pdf');\n}\n\nexport const /** @type {?} */ pdfServiceProvider = {\n    provide: '$pdf',\n    useFactory: pdfServiceFactory,\n    deps: ['$injector']\n};\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable, Inject, Injector } from '@angular/core';\nimport { ITimeAgoService, TimeAgoLocalizedTimes } from './time-ago.interface';\nexport class TimeAgoService implements ITimeAgoService {\n/**\n * @param {?} _timeAgoService\n */\nconstructor(\nprivate _timeAgoService: ITimeAgoService) { }\n/**\n * @param {?} strings\n * @return {?}\n */\nsetStrings(strings: TimeAgoLocalizedTimes): void {\n        this._timeAgoService.setStrings(strings);\n    }\n/**\n * @param {?} past\n * @param {?} present\n * @return {?}\n */\ntimeSince(past: Date, present: Date): string {\n        return this._timeAgoService.timeSince(past, present);\n    }\n/**\n * @param {?} moment\n * @return {?}\n */\ntimeSinceNow(moment: Date): string {\n        return this._timeAgoService.timeSinceNow(moment);\n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: undefined, decorators: [{ type: Inject, args: ['timeAgoService', ] }, ]},\n];\n}\n\nfunction TimeAgoService_tsickle_Closure_declarations() {\n/** @type {?} */\nTimeAgoService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTimeAgoService.ctorParameters;\n/** @type {?} */\nTimeAgoService.prototype._timeAgoService;\n}\n\n/**\n * @param {?} injector\n * @return {?}\n */\nexport function timeAgoServiceFactory(injector: Injector) {\n    return injector.get('timeAgoService');\n}\n\nexport const /** @type {?} */ timeAgoServiceProvider = {\n    provide: 'timeAgoService',\n    useFactory: timeAgoServiceFactory,\n    deps: ['$injector']\n};\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule, Injector } from '@angular/core';\n\nimport { FloatingActionButtonNg1Component } from './components/floating-action-button/floating-action-button.component';\nimport { FlotNg1Component } from './components/flot/flot.component';\nimport { NestedDonutNg1Component } from './components/nested-donut/nested-donut.component';\nimport { OrganizationChartNg1Component } from './components/organization-chart/organization-chart.component';\nimport { PartitionMapNg1Component } from './components/partition-map/partition-map.component';\nimport { PeityBarChartNg1Component } from './components/peity-chart/peity-bar-chart.component';\nimport { PeityLineChartNg1Component } from './components/peity-chart/peity-line-chart.component';\nimport { PeityPieChartNg1Component } from './components/peity-chart/peity-pie-chart.component';\nimport { PeityUpdatingLineChartNg1Component } from './components/peity-chart/peity-updating-line-chart.component';\nimport { SankeyNg1Component } from './components/sankey-chart/sankey.component';\nimport { SocialChartNg1Component } from './components/social-chart/social-chart.component';\nimport { TimeAgoService, timeAgoServiceProvider } from './services/time-ago/time-ago.service';\nimport { PdfService, pdfServiceProvider } from './services/pdf/pdf.service';\nimport { NavigationMenuService, navigationMenuServiceProvider } from './services/navigation-menu/navigation-menu.service';\nimport { GridNg1Component } from './components/grid/grid.component';\nimport { ThumbnailNg1Component } from './components/thumbnail/thumbnail.component';\nimport { HierarchyBarNg1Component } from './components/hierarchy-bar/hierarchy-bar.component';\nimport { ContactsNg1Component } from './components/contacts/contacts.component';\nimport { ExpandInputNg1Component } from './components/expand-input/expand-input.component';\nimport { SortDirectionToggleNg1Component } from './components/sort-direction-toggle/sort-direction-toggle.component';\nimport { SearchToolbarNg1Component } from './components/search-toolbar/search-toolbar.component';\nimport { TreeGridNg1Component } from './components/tree-grid/tree-grid.component';\nimport { SelectTableNg1Component } from './components/select-table/select-table.component';\nimport { MarqueeWizardNg1Component } from './components/marquee-wizard/marquee-wizard.component';\nimport { SliderChartNg1Component } from './components/slider-chart/slider-chart.directive';\n\nconst /** @type {?} */ declarations = [\n    ContactsNg1Component,\n    ExpandInputNg1Component,\n    FloatingActionButtonNg1Component,\n    FlotNg1Component,\n    GridNg1Component,\n    HierarchyBarNg1Component,\n    MarqueeWizardNg1Component,\n    NestedDonutNg1Component,\n    OrganizationChartNg1Component,\n    PartitionMapNg1Component,\n    PeityBarChartNg1Component,\n    PeityLineChartNg1Component,\n    PeityPieChartNg1Component,\n    PeityUpdatingLineChartNg1Component,\n    SankeyNg1Component,\n    SearchToolbarNg1Component,\n    SelectTableNg1Component,\n    SliderChartNg1Component,\n    SocialChartNg1Component,\n    SortDirectionToggleNg1Component,\n    TreeGridNg1Component,\n    ThumbnailNg1Component,\n];\nexport class HybridModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [],\n    exports: declarations,\n    declarations: declarations,\n    providers: [\n        navigationMenuServiceProvider,\n        pdfServiceProvider,\n        timeAgoServiceProvider,\n        TimeAgoService,\n        PdfService,\n        NavigationMenuService,\n    ],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction HybridModule_tsickle_Closure_declarations() {\n/** @type {?} */\nHybridModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nHybridModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Input } from '@angular/core';\nexport class BreadcrumbsComponent {\n\n     crumbs: Breadcrumb[];\n/**\n * @param {?} event\n * @param {?} crumb\n * @return {?}\n */\nclickCrumb(event: MouseEvent, crumb: Breadcrumb) {\n        if (crumb.onClick) {\n            crumb.onClick.call(null, event);\n        }\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-breadcrumbs',\n    template: `\n      <nav aria-label=\"Breadcrumb\">\n          <ol class=\"breadcrumb\">\n              <li *ngFor=\"let crumb of crumbs\">\n\n                  <!-- If there is a router link then use a tag -->\n                  <a *ngIf=\"crumb.routerLink || crumb.onClick\"\n                      tabindex=\"0\"\n                      [routerLink]=\"crumb.routerLink\"\n                      [fragment]=\"crumb.fragment\"\n                      [queryParams]=\"crumb.queryParams\"\n                      (click)=\"clickCrumb($event, crumb)\">\n                      {{ crumb.title }}\n                  </a>\n\n                  <!-- If there is not router link then display text in a span -->\n                  <span *ngIf=\"!crumb.routerLink && !crumb.onClick\">{{ crumb.title }}</span>\n              </li>\n          </ol>\n      </nav>\n    `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'crumbs': [{ type: Input },],\n};\n}\n\nfunction BreadcrumbsComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nBreadcrumbsComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nBreadcrumbsComponent.ctorParameters;\n/** @type {?} */\nBreadcrumbsComponent.propDecorators;\n/** @type {?} */\nBreadcrumbsComponent.prototype.crumbs;\n}\n\n\nexport interface Breadcrumb {\n    title: string;\n    routerLink?: string;\n    fragment?: string;\n    queryParams?: any;\n    onClick?: (event: MouseEvent) => void;\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\n\nimport { BreadcrumbsComponent } from './breadcrumbs.component';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nexport class BreadcrumbsModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        CommonModule, \n        RouterModule\n    ],\n    exports: [BreadcrumbsComponent],\n    declarations: [BreadcrumbsComponent]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction BreadcrumbsModule_tsickle_Closure_declarations() {\n/** @type {?} */\nBreadcrumbsModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nBreadcrumbsModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable, OnDestroy, Renderer2, RendererFactory2 } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { Subscription } from 'rxjs/Subscription';\nimport { fromEvent } from 'rxjs/observable/fromEvent';\nexport class ResizeService implements OnDestroy {\nprivate _renderer: Renderer2;\nprivate _subscription = new Subscription();\n/**\n * @param {?} rendererFactory\n */\nconstructor(rendererFactory: RendererFactory2) {\n        this._renderer = rendererFactory.createRenderer(null, null);\n    }\n/**\n * @return {?}\n */\nngOnDestroy(): void {\n        this._subscription.unsubscribe();\n    }\n/**\n * @param {?} nativeElement\n * @return {?}\n */\naddResizeListener(nativeElement: HTMLElement): BehaviorSubject<ResizeDimensions> {\n\n        // create a behavior subject subject\n        const /** @type {?} */ subject = new BehaviorSubject<ResizeDimensions>({ width: nativeElement.offsetWidth, height: nativeElement.offsetHeight });\n\n        // determine the style of the element\n        const /** @type {?} */ displayMode = window.getComputedStyle(nativeElement).getPropertyValue('display');\n\n        // create the iframe element\n        const /** @type {?} */ iframe: HTMLIFrameElement = this._renderer.createElement('iframe');\n\n        // style the iframe to be invisible but fill containing element\n        this._renderer.setStyle(iframe, 'position', 'absolute');\n        this._renderer.setStyle(iframe, 'width', '100%');\n        this._renderer.setStyle(iframe, 'height', '100%');\n        this._renderer.setStyle(iframe, 'top', '0');\n        this._renderer.setStyle(iframe, 'right', '0');\n        this._renderer.setStyle(iframe, 'bottom', '0');\n        this._renderer.setStyle(iframe, 'left', '0');\n        this._renderer.setStyle(iframe, 'z-index', '-1');\n        this._renderer.setStyle(iframe, 'opacity', '0');\n        this._renderer.setStyle(iframe, 'border', 'none');\n        this._renderer.setStyle(iframe, 'margin', '0');\n        this._renderer.setStyle(iframe, 'pointer-events', 'none');\n        this._renderer.setStyle(iframe, 'overflow', 'hidden');\n\n        // ensure the iframe ignores any tabbing\n        this._renderer.setAttribute(iframe, 'tabindex', '-1');\n\n        // statically positioned elements need changed to relative for this method to work\n        if (displayMode !== 'relative' && displayMode !== 'absolute' && displayMode !== 'fixed') {\n            this._renderer.setStyle(nativeElement, 'position', 'relative');\n        }\n\n        // add the iframe to the container element\n        this._renderer.appendChild(nativeElement, iframe);\n\n        this.waitUntilReady(iframe, () => {\n            const /** @type {?} */ iframeDoc = iframe.contentDocument || /** @type {?} */(( iframe.contentWindow.document as Document));\n\n            const /** @type {?} */ attachListener = () => {\n\n                // watch for any future resizes\n                this._subscription.add(fromEvent(iframe.contentWindow, 'resize').subscribe((event: ResizeDimensions) => \n                    subject.next({ width: nativeElement.offsetWidth, height: nativeElement.offsetHeight })));\n            };\n\n            if (iframeDoc.readyState === 'complete') {\n                attachListener();\n            } else {\n\n                // wait for iframe to load\n                iframe.addEventListener('load', () => attachListener());\n            }\n        });\n\n\n        return subject;\n    }\n/**\n * @param {?} iframe\n * @param {?} callback\n * @return {?}\n */\nprivate waitUntilReady(iframe: HTMLIFrameElement, callback: () => void) {\n        if (iframe.contentDocument || iframe.contentWindow) {\n            callback.call(this);\n        } else {\n            setTimeout(() => this.waitUntilReady(iframe, callback));\n        }\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: RendererFactory2, },\n];\n}\n\nfunction ResizeService_tsickle_Closure_declarations() {\n/** @type {?} */\nResizeService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nResizeService.ctorParameters;\n/** @type {?} */\nResizeService.prototype._renderer;\n/** @type {?} */\nResizeService.prototype._subscription;\n}\n\n\nexport interface ResizeDimensions {\n    width: number;\n    height: number;\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","export function isFunction(x: any): x is Function {\n  return typeof x === 'function';\n}\n","export const isArray = Array.isArray || (<T>(x: any): x is T[] => x && typeof x.length === 'number');\n","export function isObject(x: any): x is Object {\n  return x != null && typeof x === 'object';\n}\n","import { errorObject } from './errorObject';\n\nlet tryCatchTarget: Function;\n\nfunction tryCatcher(this: any): any {\n  try {\n    return tryCatchTarget.apply(this, arguments);\n  } catch (e) {\n    errorObject.e = e;\n    return errorObject;\n  }\n}\n\nexport function tryCatch<T extends Function>(fn: T): T {\n  tryCatchTarget = fn;\n  return <any>tryCatcher;\n};\n","// typeof any so that it we don't have to cast when comparing a result to the error object\nexport const errorObject: any = { e: {} };","/**\n * An error thrown when one or more errors have occurred during the\n * `unsubscribe` of a {@link Subscription}.\n */\nexport class UnsubscriptionError extends Error {\n  constructor(public errors: any[]) {\n    super();\n    const err: any = Error.call(this, errors ?\n      `${errors.length} errors occurred during unsubscription:\n  ${errors.map((err, i) => `${i + 1}) ${err.toString()}`).join('\\n  ')}` : '');\n    (<any> this).name = err.name = 'UnsubscriptionError';\n    (<any> this).stack = err.stack;\n    (<any> this).message = err.message;\n  }\n}\n","import { isArray } from './util/isArray';\nimport { isObject } from './util/isObject';\nimport { isFunction } from './util/isFunction';\nimport { tryCatch } from './util/tryCatch';\nimport { errorObject } from './util/errorObject';\nimport { UnsubscriptionError } from './util/UnsubscriptionError';\n\nexport interface AnonymousSubscription {\n  unsubscribe(): void;\n}\n\nexport type TeardownLogic = AnonymousSubscription | Function | void;\n\nexport interface ISubscription extends AnonymousSubscription {\n  unsubscribe(): void;\n  readonly closed: boolean;\n}\n\n/**\n * Represents a disposable resource, such as the execution of an Observable. A\n * Subscription has one important method, `unsubscribe`, that takes no argument\n * and just disposes the resource held by the subscription.\n *\n * Additionally, subscriptions may be grouped together through the `add()`\n * method, which will attach a child Subscription to the current Subscription.\n * When a Subscription is unsubscribed, all its children (and its grandchildren)\n * will be unsubscribed as well.\n *\n * @class Subscription\n */\nexport class Subscription implements ISubscription {\n  public static EMPTY: Subscription = (function(empty: any){\n    empty.closed = true;\n    return empty;\n  }(new Subscription()));\n\n  /**\n   * A flag to indicate whether this Subscription has already been unsubscribed.\n   * @type {boolean}\n   */\n  public closed: boolean = false;\n\n  protected _parent: Subscription = null;\n  protected _parents: Subscription[] = null;\n  private _subscriptions: ISubscription[] = null;\n\n  /**\n   * @param {function(): void} [unsubscribe] A function describing how to\n   * perform the disposal of resources when the `unsubscribe` method is called.\n   */\n  constructor(unsubscribe?: () => void) {\n    if (unsubscribe) {\n      (<any> this)._unsubscribe = unsubscribe;\n    }\n  }\n\n  /**\n   * Disposes the resources held by the subscription. May, for instance, cancel\n   * an ongoing Observable execution or cancel any other type of work that\n   * started when the Subscription was created.\n   * @return {void}\n   */\n  unsubscribe(): void {\n    let hasErrors = false;\n    let errors: any[];\n\n    if (this.closed) {\n      return;\n    }\n\n    let { _parent, _parents, _unsubscribe, _subscriptions } = (<any> this);\n\n    this.closed = true;\n    this._parent = null;\n    this._parents = null;\n    // null out _subscriptions first so any child subscriptions that attempt\n    // to remove themselves from this subscription will noop\n    this._subscriptions = null;\n\n    let index = -1;\n    let len = _parents ? _parents.length : 0;\n\n    // if this._parent is null, then so is this._parents, and we\n    // don't have to remove ourselves from any parent subscriptions.\n    while (_parent) {\n      _parent.remove(this);\n      // if this._parents is null or index >= len,\n      // then _parent is set to null, and the loop exits\n      _parent = ++index < len && _parents[index] || null;\n    }\n\n    if (isFunction(_unsubscribe)) {\n      let trial = tryCatch(_unsubscribe).call(this);\n      if (trial === errorObject) {\n        hasErrors = true;\n        errors = errors || (\n          errorObject.e instanceof UnsubscriptionError ?\n            flattenUnsubscriptionErrors(errorObject.e.errors) : [errorObject.e]\n        );\n      }\n    }\n\n    if (isArray(_subscriptions)) {\n\n      index = -1;\n      len = _subscriptions.length;\n\n      while (++index < len) {\n        const sub = _subscriptions[index];\n        if (isObject(sub)) {\n          let trial = tryCatch(sub.unsubscribe).call(sub);\n          if (trial === errorObject) {\n            hasErrors = true;\n            errors = errors || [];\n            let err = errorObject.e;\n            if (err instanceof UnsubscriptionError) {\n              errors = errors.concat(flattenUnsubscriptionErrors(err.errors));\n            } else {\n              errors.push(err);\n            }\n          }\n        }\n      }\n    }\n\n    if (hasErrors) {\n      throw new UnsubscriptionError(errors);\n    }\n  }\n\n  /**\n   * Adds a tear down to be called during the unsubscribe() of this\n   * Subscription.\n   *\n   * If the tear down being added is a subscription that is already\n   * unsubscribed, is the same reference `add` is being called on, or is\n   * `Subscription.EMPTY`, it will not be added.\n   *\n   * If this subscription is already in an `closed` state, the passed\n   * tear down logic will be executed immediately.\n   *\n   * @param {TeardownLogic} teardown The additional logic to execute on\n   * teardown.\n   * @return {Subscription} Returns the Subscription used or created to be\n   * added to the inner subscriptions list. This Subscription can be used with\n   * `remove()` to remove the passed teardown logic from the inner subscriptions\n   * list.\n   */\n  add(teardown: TeardownLogic): Subscription {\n    if (!teardown || (teardown === Subscription.EMPTY)) {\n      return Subscription.EMPTY;\n    }\n\n    if (teardown === this) {\n      return this;\n    }\n\n    let subscription = (<Subscription> teardown);\n\n    switch (typeof teardown) {\n      case 'function':\n        subscription = new Subscription(<(() => void) > teardown);\n      case 'object':\n        if (subscription.closed || typeof subscription.unsubscribe !== 'function') {\n          return subscription;\n        } else if (this.closed) {\n          subscription.unsubscribe();\n          return subscription;\n        } else if (typeof subscription._addParent !== 'function' /* quack quack */) {\n          const tmp = subscription;\n          subscription = new Subscription();\n          subscription._subscriptions = [tmp];\n        }\n        break;\n      default:\n        throw new Error('unrecognized teardown ' + teardown + ' added to Subscription.');\n    }\n\n    const subscriptions = this._subscriptions || (this._subscriptions = []);\n\n    subscriptions.push(subscription);\n    subscription._addParent(this);\n\n    return subscription;\n  }\n\n  /**\n   * Removes a Subscription from the internal list of subscriptions that will\n   * unsubscribe during the unsubscribe process of this Subscription.\n   * @param {Subscription} subscription The subscription to remove.\n   * @return {void}\n   */\n  remove(subscription: Subscription): void {\n    const subscriptions = this._subscriptions;\n    if (subscriptions) {\n      const subscriptionIndex = subscriptions.indexOf(subscription);\n      if (subscriptionIndex !== -1) {\n        subscriptions.splice(subscriptionIndex, 1);\n      }\n    }\n  }\n\n  private _addParent(parent: Subscription) {\n    let { _parent, _parents } = this;\n    if (!_parent || _parent === parent) {\n      // If we don't have a parent, or the new parent is the same as the\n      // current parent, then set this._parent to the new parent.\n      this._parent = parent;\n    } else if (!_parents) {\n      // If there's already one parent, but not multiple, allocate an Array to\n      // store the rest of the parent Subscriptions.\n      this._parents = [parent];\n    } else if (_parents.indexOf(parent) === -1) {\n      // Only add the new parent to the _parents list if it's not already there.\n      _parents.push(parent);\n    }\n  }\n}\n\nfunction flattenUnsubscriptionErrors(errors: any[]) {\n return errors.reduce((errs, err) => errs.concat((err instanceof UnsubscriptionError) ? err.errors : err), []);\n}\n","export interface NextObserver<T> {\n  closed?: boolean;\n  next: (value: T) => void;\n  error?: (err: any) => void;\n  complete?: () => void;\n}\n\nexport interface ErrorObserver<T> {\n  closed?: boolean;\n  next?: (value: T) => void;\n  error: (err: any) => void;\n  complete?: () => void;\n}\n\nexport interface CompletionObserver<T> {\n  closed?: boolean;\n  next?: (value: T) => void;\n  error?: (err: any) => void;\n  complete: () => void;\n}\n\nexport type PartialObserver<T> = NextObserver<T> | ErrorObserver<T> | CompletionObserver<T>;\n\nexport interface Observer<T> {\n  closed?: boolean;\n  next: (value: T) => void;\n  error: (err: any) => void;\n  complete: () => void;\n}\n\nexport const empty: Observer<any> = {\n  closed: true,\n  next(value: any): void { /* noop */},\n  error(err: any): void { throw err; },\n  complete(): void { /*noop*/ }\n};\n","declare let global: any;\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\ndeclare var WorkerGlobalScope: any;\n// CommonJS / Node have global context exposed as \"global\" variable.\n// We don't want to include the whole node.d.ts this this compilation unit so we'll just fake\n// the global \"global\" var for now.\n\nconst __window = typeof window !== 'undefined' && window;\nconst __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n    self instanceof WorkerGlobalScope && self;\nconst __global = typeof global !== 'undefined' && global;\nconst _root: any = __window || __global || __self;\n\n// Workaround Closure Compiler restriction: The body of a goog.module cannot use throw.\n// This is needed when used with angular/tsickle which inserts a goog.module statement.\n// Wrap in IIFE\n(function () {\n  if (!_root) {\n    throw new Error('RxJS could not find any global context (window, self, global)');\n  }\n})();\n\nexport { _root as root };","import { root } from '../util/root';\n\nconst Symbol: any = root.Symbol;\n\nexport const rxSubscriber = (typeof Symbol === 'function' && typeof Symbol.for === 'function') ?\n  Symbol.for('rxSubscriber') : '@@rxSubscriber';\n\n/**\n * @deprecated use rxSubscriber instead\n */\nexport const $$rxSubscriber = rxSubscriber;\n","import { isFunction } from './util/isFunction';\nimport { Observer, PartialObserver } from './Observer';\nimport { Subscription } from './Subscription';\nimport { empty as emptyObserver } from './Observer';\nimport { rxSubscriber as rxSubscriberSymbol } from './symbol/rxSubscriber';\n\n/**\n * Implements the {@link Observer} interface and extends the\n * {@link Subscription} class. While the {@link Observer} is the public API for\n * consuming the values of an {@link Observable}, all Observers get converted to\n * a Subscriber, in order to provide Subscription-like capabilities such as\n * `unsubscribe`. Subscriber is a common type in RxJS, and crucial for\n * implementing operators, but it is rarely used as a public API.\n *\n * @class Subscriber<T>\n */\nexport class Subscriber<T> extends Subscription implements Observer<T> {\n\n  [rxSubscriberSymbol]() { return this; }\n\n  /**\n   * A static factory for a Subscriber, given a (potentially partial) definition\n   * of an Observer.\n   * @param {function(x: ?T): void} [next] The `next` callback of an Observer.\n   * @param {function(e: ?any): void} [error] The `error` callback of an\n   * Observer.\n   * @param {function(): void} [complete] The `complete` callback of an\n   * Observer.\n   * @return {Subscriber<T>} A Subscriber wrapping the (partially defined)\n   * Observer represented by the given arguments.\n   */\n  static create<T>(next?: (x?: T) => void,\n                   error?: (e?: any) => void,\n                   complete?: () => void): Subscriber<T> {\n    const subscriber = new Subscriber(next, error, complete);\n    subscriber.syncErrorThrowable = false;\n    return subscriber;\n  }\n\n  public syncErrorValue: any = null;\n  public syncErrorThrown: boolean = false;\n  public syncErrorThrowable: boolean = false;\n\n  protected isStopped: boolean = false;\n  protected destination: PartialObserver<any>; // this `any` is the escape hatch to erase extra type param (e.g. R)\n\n  /**\n   * @param {Observer|function(value: T): void} [destinationOrNext] A partially\n   * defined Observer or a `next` callback function.\n   * @param {function(e: ?any): void} [error] The `error` callback of an\n   * Observer.\n   * @param {function(): void} [complete] The `complete` callback of an\n   * Observer.\n   */\n  constructor(destinationOrNext?: PartialObserver<any> | ((value: T) => void),\n              error?: (e?: any) => void,\n              complete?: () => void) {\n    super();\n\n    switch (arguments.length) {\n      case 0:\n        this.destination = emptyObserver;\n        break;\n      case 1:\n        if (!destinationOrNext) {\n          this.destination = emptyObserver;\n          break;\n        }\n        if (typeof destinationOrNext === 'object') {\n          // HACK(benlesh): To resolve an issue where Node users may have multiple\n          // copies of rxjs in their node_modules directory.\n          if (isTrustedSubscriber(destinationOrNext)) {\n            const trustedSubscriber = destinationOrNext[rxSubscriberSymbol]() as Subscriber<any>;\n            this.syncErrorThrowable = trustedSubscriber.syncErrorThrowable;\n            this.destination = trustedSubscriber;\n            trustedSubscriber.add(this);\n          } else {\n            this.syncErrorThrowable = true;\n            this.destination = new SafeSubscriber<T>(this, <PartialObserver<any>> destinationOrNext);\n          }\n          break;\n        }\n      default:\n        this.syncErrorThrowable = true;\n        this.destination = new SafeSubscriber<T>(this, <((value: T) => void)> destinationOrNext, error, complete);\n        break;\n    }\n  }\n\n  /**\n   * The {@link Observer} callback to receive notifications of type `next` from\n   * the Observable, with a value. The Observable may call this method 0 or more\n   * times.\n   * @param {T} [value] The `next` value.\n   * @return {void}\n   */\n  next(value?: T): void {\n    if (!this.isStopped) {\n      this._next(value);\n    }\n  }\n\n  /**\n   * The {@link Observer} callback to receive notifications of type `error` from\n   * the Observable, with an attached {@link Error}. Notifies the Observer that\n   * the Observable has experienced an error condition.\n   * @param {any} [err] The `error` exception.\n   * @return {void}\n   */\n  error(err?: any): void {\n    if (!this.isStopped) {\n      this.isStopped = true;\n      this._error(err);\n    }\n  }\n\n  /**\n   * The {@link Observer} callback to receive a valueless notification of type\n   * `complete` from the Observable. Notifies the Observer that the Observable\n   * has finished sending push-based notifications.\n   * @return {void}\n   */\n  complete(): void {\n    if (!this.isStopped) {\n      this.isStopped = true;\n      this._complete();\n    }\n  }\n\n  unsubscribe(): void {\n    if (this.closed) {\n      return;\n    }\n    this.isStopped = true;\n    super.unsubscribe();\n  }\n\n  protected _next(value: T): void {\n    this.destination.next(value);\n  }\n\n  protected _error(err: any): void {\n    this.destination.error(err);\n    this.unsubscribe();\n  }\n\n  protected _complete(): void {\n    this.destination.complete();\n    this.unsubscribe();\n  }\n\n  /** @deprecated internal use only */ _unsubscribeAndRecycle(): Subscriber<T> {\n    const { _parent, _parents } = this;\n    this._parent = null;\n    this._parents = null;\n    this.unsubscribe();\n    this.closed = false;\n    this.isStopped = false;\n    this._parent = _parent;\n    this._parents = _parents;\n    return this;\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SafeSubscriber<T> extends Subscriber<T> {\n\n  private _context: any;\n\n  constructor(private _parentSubscriber: Subscriber<T>,\n              observerOrNext?: PartialObserver<T> | ((value: T) => void),\n              error?: (e?: any) => void,\n              complete?: () => void) {\n    super();\n\n    let next: ((value: T) => void);\n    let context: any = this;\n\n    if (isFunction(observerOrNext)) {\n      next = (<((value: T) => void)> observerOrNext);\n    } else if (observerOrNext) {\n      next = (<PartialObserver<T>> observerOrNext).next;\n      error = (<PartialObserver<T>> observerOrNext).error;\n      complete = (<PartialObserver<T>> observerOrNext).complete;\n      if (observerOrNext !== emptyObserver) {\n        context = Object.create(observerOrNext);\n        if (isFunction(context.unsubscribe)) {\n          this.add(<() => void> context.unsubscribe.bind(context));\n        }\n        context.unsubscribe = this.unsubscribe.bind(this);\n      }\n    }\n\n    this._context = context;\n    this._next = next;\n    this._error = error;\n    this._complete = complete;\n  }\n\n  next(value?: T): void {\n    if (!this.isStopped && this._next) {\n      const { _parentSubscriber } = this;\n      if (!_parentSubscriber.syncErrorThrowable) {\n        this.__tryOrUnsub(this._next, value);\n      } else if (this.__tryOrSetError(_parentSubscriber, this._next, value)) {\n        this.unsubscribe();\n      }\n    }\n  }\n\n  error(err?: any): void {\n    if (!this.isStopped) {\n      const { _parentSubscriber } = this;\n      if (this._error) {\n        if (!_parentSubscriber.syncErrorThrowable) {\n          this.__tryOrUnsub(this._error, err);\n          this.unsubscribe();\n        } else {\n          this.__tryOrSetError(_parentSubscriber, this._error, err);\n          this.unsubscribe();\n        }\n      } else if (!_parentSubscriber.syncErrorThrowable) {\n        this.unsubscribe();\n        throw err;\n      } else {\n        _parentSubscriber.syncErrorValue = err;\n        _parentSubscriber.syncErrorThrown = true;\n        this.unsubscribe();\n      }\n    }\n  }\n\n  complete(): void {\n    if (!this.isStopped) {\n      const { _parentSubscriber } = this;\n      if (this._complete) {\n        const wrappedComplete = () => this._complete.call(this._context);\n\n        if (!_parentSubscriber.syncErrorThrowable) {\n          this.__tryOrUnsub(wrappedComplete);\n          this.unsubscribe();\n        } else {\n          this.__tryOrSetError(_parentSubscriber, wrappedComplete);\n          this.unsubscribe();\n        }\n      } else {\n        this.unsubscribe();\n      }\n    }\n  }\n\n  private __tryOrUnsub(fn: Function, value?: any): void {\n    try {\n      fn.call(this._context, value);\n    } catch (err) {\n      this.unsubscribe();\n      throw err;\n    }\n  }\n\n  private __tryOrSetError(parent: Subscriber<T>, fn: Function, value?: any): boolean {\n    try {\n      fn.call(this._context, value);\n    } catch (err) {\n      parent.syncErrorValue = err;\n      parent.syncErrorThrown = true;\n      return true;\n    }\n    return false;\n  }\n\n  /** @deprecated internal use only */ _unsubscribe(): void {\n    const { _parentSubscriber } = this;\n    this._context = null;\n    this._parentSubscriber = null;\n    _parentSubscriber.unsubscribe();\n  }\n}\n\nfunction isTrustedSubscriber(obj: any) {\n  return obj instanceof Subscriber || ('syncErrorThrowable' in obj && obj[rxSubscriberSymbol]);\n}\n","import { Scheduler } from '../Scheduler';\nimport { Subscription } from '../Subscription';\n\n/**\n * A unit of work to be executed in a {@link Scheduler}. An action is typically\n * created from within a Scheduler and an RxJS user does not need to concern\n * themselves about creating and manipulating an Action.\n *\n * ```ts\n * class Action<T> extends Subscription {\n *   new (scheduler: Scheduler, work: (state?: T) => void);\n *   schedule(state?: T, delay: number = 0): Subscription;\n * }\n * ```\n *\n * @class Action<T>\n */\nexport class Action<T> extends Subscription {\n  constructor(scheduler: Scheduler, work: (this: Action<T>, state?: T) => void) {\n    super();\n  }\n  /**\n   * Schedules this action on its parent Scheduler for execution. May be passed\n   * some context object, `state`. May happen at some point in the future,\n   * according to the `delay` parameter, if specified.\n   * @param {T} [state] Some contextual data that the `work` function uses when\n   * called by the Scheduler.\n   * @param {number} [delay] Time to wait before executing the work, where the\n   * time unit is implicit and defined by the Scheduler.\n   * @return {void}\n   */\n  public schedule(state?: T, delay: number = 0): Subscription {\n    return this;\n  }\n}\n","import { root } from '../util/root';\nimport { Action } from './Action';\nimport { Subscription } from '../Subscription';\nimport { AsyncScheduler } from './AsyncScheduler';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class AsyncAction<T> extends Action<T> {\n\n  public id: any;\n  public state: T;\n  public delay: number;\n  protected pending: boolean = false;\n\n  constructor(protected scheduler: AsyncScheduler,\n              protected work: (this: AsyncAction<T>, state?: T) => void) {\n    super(scheduler, work);\n  }\n\n  public schedule(state?: T, delay: number = 0): Subscription {\n\n    if (this.closed) {\n      return this;\n     }\n\n    // Always replace the current state with the new state.\n    this.state = state;\n\n    // Set the pending flag indicating that this action has been scheduled, or\n    // has recursively rescheduled itself.\n    this.pending = true;\n\n    const id = this.id;\n    const scheduler = this.scheduler;\n\n    //\n    // Important implementation note:\n    //\n    // Actions only execute once by default, unless rescheduled from within the\n    // scheduled callback. This allows us to implement single and repeat\n    // actions via the same code path, without adding API surface area, as well\n    // as mimic traditional recursion but across asynchronous boundaries.\n    //\n    // However, JS runtimes and timers distinguish between intervals achieved by\n    // serial `setTimeout` calls vs. a single `setInterval` call. An interval of\n    // serial `setTimeout` calls can be individually delayed, which delays\n    // scheduling the next `setTimeout`, and so on. `setInterval` attempts to\n    // guarantee the interval callback will be invoked more precisely to the\n    // interval period, regardless of load.\n    //\n    // Therefore, we use `setInterval` to schedule single and repeat actions.\n    // If the action reschedules itself with the same delay, the interval is not\n    // canceled. If the action doesn't reschedule, or reschedules with a\n    // different delay, the interval will be canceled after scheduled callback\n    // execution.\n    //\n    if (id != null) {\n      this.id = this.recycleAsyncId(scheduler, id, delay);\n    }\n\n    this.delay = delay;\n    // If this action has already an async Id, don't request a new one.\n    this.id = this.id || this.requestAsyncId(scheduler, this.id, delay);\n\n    return this;\n  }\n\n  protected requestAsyncId(scheduler: AsyncScheduler, id?: any, delay: number = 0): any {\n    return root.setInterval(scheduler.flush.bind(scheduler, this), delay);\n  }\n\n  protected recycleAsyncId(scheduler: AsyncScheduler, id: any, delay: number = 0): any {\n    // If this action is rescheduled with the same delay time, don't clear the interval id.\n    if (delay !== null && this.delay === delay && this.pending === false) {\n      return id;\n    }\n    // Otherwise, if the action's delay time is different from the current delay,\n    // or the action has been rescheduled before it's executed, clear the interval id\n    return root.clearInterval(id) && undefined || undefined;\n  }\n\n  /**\n   * Immediately executes this action and the `work` it contains.\n   * @return {any}\n   */\n  public execute(state: T, delay: number): any {\n\n    if (this.closed) {\n      return new Error('executing a cancelled action');\n    }\n\n    this.pending = false;\n    const error = this._execute(state, delay);\n    if (error) {\n      return error;\n    } else if (this.pending === false && this.id != null) {\n      // Dequeue if the action didn't reschedule itself. Don't call\n      // unsubscribe(), because the action could reschedule later.\n      // For example:\n      // ```\n      // scheduler.schedule(function doWork(counter) {\n      //   /* ... I'm a busy worker bee ... */\n      //   var originalAction = this;\n      //   /* wait 100ms before rescheduling the action */\n      //   setTimeout(function () {\n      //     originalAction.schedule(counter + 1);\n      //   }, 100);\n      // }, 1000);\n      // ```\n      this.id = this.recycleAsyncId(this.scheduler, this.id, null);\n    }\n  }\n\n  protected _execute(state: T, delay: number): any {\n    let errored: boolean = false;\n    let errorValue: any = undefined;\n    try {\n      this.work(state);\n    } catch (e) {\n      errored = true;\n      errorValue = !!e && e || new Error(e);\n    }\n    if (errored) {\n      this.unsubscribe();\n      return errorValue;\n    }\n  }\n\n  /** @deprecated internal use only */ _unsubscribe() {\n\n    const id = this.id;\n    const scheduler = this.scheduler;\n    const actions = scheduler.actions;\n    const index = actions.indexOf(this);\n\n    this.work  = null;\n    this.state = null;\n    this.pending = false;\n    this.scheduler = null;\n\n    if (index !== -1) {\n      actions.splice(index, 1);\n    }\n\n    if (id != null) {\n      this.id = this.recycleAsyncId(scheduler, id, null);\n    }\n\n    this.delay = null;\n  }\n}\n","import { Action } from './scheduler/Action';\nimport { Subscription } from './Subscription';\n\nexport interface IScheduler {\n  now(): number;\n  schedule<T>(work: (this: Action<T>, state?: T) => void, delay?: number, state?: T): Subscription;\n}\n/**\n * An execution context and a data structure to order tasks and schedule their\n * execution. Provides a notion of (potentially virtual) time, through the\n * `now()` getter method.\n *\n * Each unit of work in a Scheduler is called an {@link Action}.\n *\n * ```ts\n * class Scheduler {\n *   now(): number;\n *   schedule(work, delay?, state?): Subscription;\n * }\n * ```\n *\n * @class Scheduler\n */\nexport class Scheduler implements IScheduler {\n\n  public static now: () => number = Date.now ? Date.now : () => +new Date();\n\n  constructor(private SchedulerAction: typeof Action,\n              now: () => number = Scheduler.now) {\n    this.now = now;\n  }\n\n  /**\n   * A getter method that returns a number representing the current time\n   * (at the time this function was called) according to the scheduler's own\n   * internal clock.\n   * @return {number} A number that represents the current time. May or may not\n   * have a relation to wall-clock time. May or may not refer to a time unit\n   * (e.g. milliseconds).\n   */\n  public now: () => number;\n\n  /**\n   * Schedules a function, `work`, for execution. May happen at some point in\n   * the future, according to the `delay` parameter, if specified. May be passed\n   * some context object, `state`, which will be passed to the `work` function.\n   *\n   * The given arguments will be processed an stored as an Action object in a\n   * queue of actions.\n   *\n   * @param {function(state: ?T): ?Subscription} work A function representing a\n   * task, or some unit of work to be executed by the Scheduler.\n   * @param {number} [delay] Time to wait before executing the work, where the\n   * time unit is implicit and defined by the Scheduler itself.\n   * @param {T} [state] Some contextual data that the `work` function uses when\n   * called by the Scheduler.\n   * @return {Subscription} A subscription in order to be able to unsubscribe\n   * the scheduled work.\n   */\n  public schedule<T>(work: (this: Action<T>, state?: T) => void, delay: number = 0, state?: T): Subscription {\n    return new this.SchedulerAction<T>(this, work).schedule(state, delay);\n  }\n}\n","import { Scheduler } from '../Scheduler';\nimport { AsyncAction } from './AsyncAction';\n\nexport class AsyncScheduler extends Scheduler {\n  public actions: Array<AsyncAction<any>> = [];\n  /**\n   * A flag to indicate whether the Scheduler is currently executing a batch of\n   * queued actions.\n   * @type {boolean}\n   */\n  public active: boolean = false;\n  /**\n   * An internal ID used to track the latest asynchronous task such as those\n   * coming from `setTimeout`, `setInterval`, `requestAnimationFrame`, and\n   * others.\n   * @type {any}\n   */\n  public scheduled: any = undefined;\n\n  public flush(action: AsyncAction<any>): void {\n\n    const {actions} = this;\n\n    if (this.active) {\n      actions.push(action);\n      return;\n    }\n\n    let error: any;\n    this.active = true;\n\n    do {\n      if (error = action.execute(action.state, action.delay)) {\n        break;\n      }\n    } while (action = actions.shift()); // exhaust the scheduler queue\n\n    this.active = false;\n\n    if (error) {\n      while (action = actions.shift()) {\n        action.unsubscribe();\n      }\n      throw error;\n    }\n  }\n}\n","import { AsyncAction } from './AsyncAction';\nimport { AsyncScheduler } from './AsyncScheduler';\n\n/**\n *\n * Async Scheduler\n *\n * <span class=\"informal\">Schedule task as if you used setTimeout(task, duration)</span>\n *\n * `async` scheduler schedules tasks asynchronously, by putting them on the JavaScript\n * event loop queue. It is best used to delay tasks in time or to schedule tasks repeating\n * in intervals.\n *\n * If you just want to \"defer\" task, that is to perform it right after currently\n * executing synchronous code ends (commonly achieved by `setTimeout(deferredTask, 0)`),\n * better choice will be the {@link asap} scheduler.\n *\n * @example <caption>Use async scheduler to delay task</caption>\n * const task = () => console.log('it works!');\n *\n * Rx.Scheduler.async.schedule(task, 2000);\n *\n * // After 2 seconds logs:\n * // \"it works!\"\n *\n *\n * @example <caption>Use async scheduler to repeat task in intervals</caption>\n * function task(state) {\n *   console.log(state);\n *   this.schedule(state + 1, 1000); // `this` references currently executing Action,\n *                                   // which we reschedule with new state and delay\n * }\n *\n * Rx.Scheduler.async.schedule(task, 3000, 0);\n *\n * // Logs:\n * // 0 after 3s\n * // 1 after 4s\n * // 2 after 5s\n * // 3 after 6s\n *\n * @static true\n * @name async\n * @owner Scheduler\n */\n\nexport const async = new AsyncScheduler(AsyncAction);\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { IScheduler } from '../Scheduler';\nimport { Subscription, TeardownLogic } from '../Subscription';\nimport { async } from '../scheduler/async';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Emits a value from the source Observable only after a particular time span\n * has passed without another source emission.\n *\n * <span class=\"informal\">It's like {@link delay}, but passes only the most\n * recent value from each burst of emissions.</span>\n *\n * <img src=\"./img/debounceTime.png\" width=\"100%\">\n *\n * `debounceTime` delays values emitted by the source Observable, but drops\n * previous pending delayed emissions if a new value arrives on the source\n * Observable. This operator keeps track of the most recent value from the\n * source Observable, and emits that only when `dueTime` enough time has passed\n * without any other value appearing on the source Observable. If a new value\n * appears before `dueTime` silence occurs, the previous value will be dropped\n * and will not be emitted on the output Observable.\n *\n * This is a rate-limiting operator, because it is impossible for more than one\n * value to be emitted in any time window of duration `dueTime`, but it is also\n * a delay-like operator since output emissions do not occur at the same time as\n * they did on the source Observable. Optionally takes a {@link IScheduler} for\n * managing timers.\n *\n * @example <caption>Emit the most recent click after a burst of clicks</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.debounceTime(1000);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link auditTime}\n * @see {@link debounce}\n * @see {@link delay}\n * @see {@link sampleTime}\n * @see {@link throttleTime}\n *\n * @param {number} dueTime The timeout duration in milliseconds (or the time\n * unit determined internally by the optional `scheduler`) for the window of\n * time required to wait for emission silence before emitting the most recent\n * source value.\n * @param {Scheduler} [scheduler=async] The {@link IScheduler} to use for\n * managing the timers that handle the timeout for each value.\n * @return {Observable} An Observable that delays the emissions of the source\n * Observable by the specified `dueTime`, and may drop some values if they occur\n * too frequently.\n * @method debounceTime\n * @owner Observable\n */\nexport function debounceTime<T>(dueTime: number, scheduler: IScheduler = async): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new DebounceTimeOperator(dueTime, scheduler));\n}\n\nclass DebounceTimeOperator<T> implements Operator<T, T> {\n  constructor(private dueTime: number, private scheduler: IScheduler) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new DebounceTimeSubscriber(subscriber, this.dueTime, this.scheduler));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass DebounceTimeSubscriber<T> extends Subscriber<T> {\n  private debouncedSubscription: Subscription = null;\n  private lastValue: T = null;\n  private hasValue: boolean = false;\n\n  constructor(destination: Subscriber<T>,\n              private dueTime: number,\n              private scheduler: IScheduler) {\n    super(destination);\n  }\n\n  protected _next(value: T) {\n    this.clearDebounce();\n    this.lastValue = value;\n    this.hasValue = true;\n    this.add(this.debouncedSubscription = this.scheduler.schedule(dispatchNext, this.dueTime, this));\n  }\n\n  protected _complete() {\n    this.debouncedNext();\n    this.destination.complete();\n  }\n\n  debouncedNext(): void {\n    this.clearDebounce();\n\n    if (this.hasValue) {\n      this.destination.next(this.lastValue);\n      this.lastValue = null;\n      this.hasValue = false;\n    }\n  }\n\n  private clearDebounce(): void {\n    const debouncedSubscription = this.debouncedSubscription;\n\n    if (debouncedSubscription !== null) {\n      this.remove(debouncedSubscription);\n      debouncedSubscription.unsubscribe();\n      this.debouncedSubscription = null;\n    }\n  }\n}\n\nfunction dispatchNext(subscriber: DebounceTimeSubscriber<any>) {\n  subscriber.debouncedNext();\n}\n","import { Directive, ElementRef, EventEmitter, Input, NgZone, OnDestroy, OnInit, Output } from '@angular/core';\nimport { Subscription } from 'rxjs/Subscription';\nimport { debounceTime } from 'rxjs/operators/debounceTime';\nimport { ResizeDimensions, ResizeService } from './resize.service';\nexport class ResizeDirective implements OnInit, OnDestroy {\n\n     throttle: number = 0;\n     uxResize: EventEmitter<ResizeDimensions> = new EventEmitter<ResizeDimensions>();\nprivate _subscription: Subscription;\n/**\n * @param {?} _elementRef\n * @param {?} _resizeService\n * @param {?} _ngZone\n */\nconstructor(private _elementRef: ElementRef,\nprivate _resizeService: ResizeService,\nprivate _ngZone: NgZone) { }\n/**\n * @return {?}\n */\nngOnInit(): void {\n        this._subscription = this._resizeService.addResizeListener(this._elementRef.nativeElement)\n            .pipe(debounceTime(this.throttle))\n            .subscribe((event: ResizeDimensions) => this._ngZone.run(() => this.uxResize.emit(event)));\n    }\n/**\n * @return {?}\n */\nngOnDestroy(): void {\n        this._subscription.unsubscribe();\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: '[uxResize]',\n    providers: [ResizeService]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: ResizeService, },\n{type: NgZone, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'throttle': [{ type: Input },],\n'uxResize': [{ type: Output },],\n};\n}\n\nfunction ResizeDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nResizeDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nResizeDirective.ctorParameters;\n/** @type {?} */\nResizeDirective.propDecorators;\n/** @type {?} */\nResizeDirective.prototype.throttle;\n/** @type {?} */\nResizeDirective.prototype.uxResize;\n/** @type {?} */\nResizeDirective.prototype._subscription;\n/** @type {?} */\nResizeDirective.prototype._elementRef;\n/** @type {?} */\nResizeDirective.prototype._resizeService;\n/** @type {?} */\nResizeDirective.prototype._ngZone;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\n\nimport { ResizeDirective } from './resize.directive';\nimport { ResizeService } from './resize.service';\nexport class ResizeModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    exports: [ResizeDirective],\n    declarations: [ResizeDirective],\n    providers: [ResizeService]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ResizeModule_tsickle_Closure_declarations() {\n/** @type {?} */\nResizeModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nResizeModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive } from '@angular/core';\nexport class CardTabContentDirective { static decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[uxCardTabContent]'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction CardTabContentDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nCardTabContentDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nCardTabContentDirective.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Subscriber } from './Subscriber';\nimport { InnerSubscriber } from './InnerSubscriber';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class OuterSubscriber<T, R> extends Subscriber<T> {\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this.destination.next(innerValue);\n  }\n\n  notifyError(error: any, innerSub: InnerSubscriber<T, R>): void {\n    this.destination.error(error);\n  }\n\n  notifyComplete(innerSub: InnerSubscriber<T, R>): void {\n    this.destination.complete();\n  }\n}\n","export const isArrayLike = (<T>(x: any): x is ArrayLike<T> => x && typeof x.length === 'number');","export function isPromise<T>(value: any | Promise<T>): value is Promise<T> {\n  return value && typeof (<any>value).subscribe !== 'function' && typeof (value as any).then === 'function';\n}\n","import { Subscriber } from '../Subscriber';\nimport { rxSubscriber as rxSubscriberSymbol } from '../symbol/rxSubscriber';\nimport { PartialObserver, empty as emptyObserver } from '../Observer';\n\nexport function toSubscriber<T>(\n  nextOrObserver?: PartialObserver<T> | ((value: T) => void),\n  error?: (error: any) => void,\n  complete?: () => void): Subscriber<T> {\n\n  if (nextOrObserver) {\n    if (nextOrObserver instanceof Subscriber) {\n      return (<Subscriber<T>> nextOrObserver);\n    }\n\n    if (nextOrObserver[rxSubscriberSymbol]) {\n      return nextOrObserver[rxSubscriberSymbol]();\n    }\n  }\n\n  if (!nextOrObserver && !error && !complete) {\n    return new Subscriber(emptyObserver);\n  }\n\n  return new Subscriber(nextOrObserver, error, complete);\n}\n","import { root } from '../util/root';\n\nexport function getSymbolObservable(context: any) {\n  let $$observable: any;\n  let Symbol = context.Symbol;\n\n  if (typeof Symbol === 'function') {\n    if (Symbol.observable) {\n      $$observable = Symbol.observable;\n    } else {\n        $$observable = Symbol('observable');\n        Symbol.observable = $$observable;\n    }\n  } else {\n    $$observable = '@@observable';\n  }\n\n  return $$observable;\n}\n\nexport const observable = getSymbolObservable(root);\n\n/**\n * @deprecated use observable instead\n */\nexport const $$observable = observable;\n","/* tslint:disable:no-empty */\nexport function noop() { }\n","import { noop } from './noop';\nimport { UnaryFunction } from '../interfaces';\n\n/* tslint:disable:max-line-length */\nexport function pipe<T>(): UnaryFunction<T, T>;\nexport function pipe<T, A>(op1: UnaryFunction<T, A>): UnaryFunction<T, A>;\nexport function pipe<T, A, B>(op1: UnaryFunction<T, A>, op2: UnaryFunction<A, B>): UnaryFunction<T, B>;\nexport function pipe<T, A, B, C>(op1: UnaryFunction<T, A>, op2: UnaryFunction<A, B>, op3: UnaryFunction<B, C>): UnaryFunction<T, C>;\nexport function pipe<T, A, B, C, D>(op1: UnaryFunction<T, A>, op2: UnaryFunction<A, B>, op3: UnaryFunction<B, C>, op4: UnaryFunction<C, D>): UnaryFunction<T, D>;\nexport function pipe<T, A, B, C, D, E>(op1: UnaryFunction<T, A>, op2: UnaryFunction<A, B>, op3: UnaryFunction<B, C>, op4: UnaryFunction<C, D>, op5: UnaryFunction<D, E>): UnaryFunction<T, E>;\nexport function pipe<T, A, B, C, D, E, F>(op1: UnaryFunction<T, A>, op2: UnaryFunction<A, B>, op3: UnaryFunction<B, C>, op4: UnaryFunction<C, D>, op5: UnaryFunction<D, E>, op6: UnaryFunction<E, F>): UnaryFunction<T, F>;\nexport function pipe<T, A, B, C, D, E, F, G>(op1: UnaryFunction<T, A>, op2: UnaryFunction<A, B>, op3: UnaryFunction<B, C>, op4: UnaryFunction<C, D>, op5: UnaryFunction<D, E>, op6: UnaryFunction<E, F>, op7: UnaryFunction<F, G>): UnaryFunction<T, G>;\nexport function pipe<T, A, B, C, D, E, F, G, H>(op1: UnaryFunction<T, A>, op2: UnaryFunction<A, B>, op3: UnaryFunction<B, C>, op4: UnaryFunction<C, D>, op5: UnaryFunction<D, E>, op6: UnaryFunction<E, F>, op7: UnaryFunction<F, G>, op8: UnaryFunction<G, H>): UnaryFunction<T, H>;\nexport function pipe<T, A, B, C, D, E, F, G, H, I>(op1: UnaryFunction<T, A>, op2: UnaryFunction<A, B>, op3: UnaryFunction<B, C>, op4: UnaryFunction<C, D>, op5: UnaryFunction<D, E>, op6: UnaryFunction<E, F>, op7: UnaryFunction<F, G>, op8: UnaryFunction<G, H>, op9: UnaryFunction<H, I>): UnaryFunction<T, I>;\n/* tslint:enable:max-line-length */\n\nexport function pipe<T, R>(...fns: Array<UnaryFunction<T, R>>): UnaryFunction<T, R> {\n  return pipeFromArray(fns);\n}\n\n/* @internal */\nexport function pipeFromArray<T, R>(fns: Array<UnaryFunction<T, R>>): UnaryFunction<T, R> {\n  if (!fns) {\n    return noop as UnaryFunction<any, any>;\n  }\n\n  if (fns.length === 1) {\n    return fns[0];\n  }\n\n  return function piped(input: T): R {\n    return fns.reduce((prev: any, fn: UnaryFunction<T, R>) => fn(prev), input);\n  };\n}\n","import { PartialObserver } from './Observer';\nimport { Operator } from './Operator';\nimport { Subscriber } from './Subscriber';\nimport { Subscription, AnonymousSubscription, TeardownLogic } from './Subscription';\nimport { root } from './util/root';\nimport { toSubscriber } from './util/toSubscriber';\nimport { IfObservable } from './observable/IfObservable';\nimport { ErrorObservable } from './observable/ErrorObservable';\nimport { observable as Symbol_observable } from './symbol/observable';\nimport { OperatorFunction } from './interfaces';\nimport { pipeFromArray } from './util/pipe';\n\nexport interface Subscribable<T> {\n  subscribe(observerOrNext?: PartialObserver<T> | ((value: T) => void),\n            error?: (error: any) => void,\n            complete?: () => void): AnonymousSubscription;\n}\n\nexport type SubscribableOrPromise<T> = Subscribable<T> | PromiseLike<T>;\nexport type ObservableInput<T> = SubscribableOrPromise<T> | ArrayLike<T>;\n\n/**\n * A representation of any set of values over any amount of time. This is the most basic building block\n * of RxJS.\n *\n * @class Observable<T>\n */\nexport class Observable<T> implements Subscribable<T> {\n\n  public _isScalar: boolean = false;\n\n  /** @deprecated internal use only */ public source: Observable<any>;\n  protected operator: Operator<any, T>;\n\n  /**\n   * @constructor\n   * @param {Function} subscribe the function that is called when the Observable is\n   * initially subscribed to. This function is given a Subscriber, to which new values\n   * can be `next`ed, or an `error` method can be called to raise an error, or\n   * `complete` can be called to notify of a successful completion.\n   */\n  constructor(subscribe?: (this: Observable<T>, subscriber: Subscriber<T>) => TeardownLogic) {\n    if (subscribe) {\n      this._subscribe = subscribe;\n    }\n  }\n\n  // HACK: Since TypeScript inherits static properties too, we have to\n  // fight against TypeScript here so Subject can have a different static create signature\n  /**\n   * Creates a new cold Observable by calling the Observable constructor\n   * @static true\n   * @owner Observable\n   * @method create\n   * @param {Function} subscribe? the subscriber function to be passed to the Observable constructor\n   * @return {Observable} a new cold observable\n   */\n  static create: Function = <T>(subscribe?: (subscriber: Subscriber<T>) => TeardownLogic) => {\n    return new Observable<T>(subscribe);\n  }\n\n  /**\n   * Creates a new Observable, with this Observable as the source, and the passed\n   * operator defined as the new observable's operator.\n   * @method lift\n   * @param {Operator} operator the operator defining the operation to take on the observable\n   * @return {Observable} a new observable with the Operator applied\n   */\n  lift<R>(operator: Operator<T, R>): Observable<R> {\n    const observable = new Observable<R>();\n    observable.source = this;\n    observable.operator = operator;\n    return observable;\n  }\n\n  subscribe(observer?: PartialObserver<T>): Subscription;\n  subscribe(next?: (value: T) => void, error?: (error: any) => void, complete?: () => void): Subscription;\n  /**\n   * Invokes an execution of an Observable and registers Observer handlers for notifications it will emit.\n   *\n   * <span class=\"informal\">Use it when you have all these Observables, but still nothing is happening.</span>\n   *\n   * `subscribe` is not a regular operator, but a method that calls Observable's internal `subscribe` function. It\n   * might be for example a function that you passed to a {@link create} static factory, but most of the time it is\n   * a library implementation, which defines what and when will be emitted by an Observable. This means that calling\n   * `subscribe` is actually the moment when Observable starts its work, not when it is created, as it is often\n   * thought.\n   *\n   * Apart from starting the execution of an Observable, this method allows you to listen for values\n   * that an Observable emits, as well as for when it completes or errors. You can achieve this in two\n   * following ways.\n   *\n   * The first way is creating an object that implements {@link Observer} interface. It should have methods\n   * defined by that interface, but note that it should be just a regular JavaScript object, which you can create\n   * yourself in any way you want (ES6 class, classic function constructor, object literal etc.). In particular do\n   * not attempt to use any RxJS implementation details to create Observers - you don't need them. Remember also\n   * that your object does not have to implement all methods. If you find yourself creating a method that doesn't\n   * do anything, you can simply omit it. Note however, that if `error` method is not provided, all errors will\n   * be left uncaught.\n   *\n   * The second way is to give up on Observer object altogether and simply provide callback functions in place of its methods.\n   * This means you can provide three functions as arguments to `subscribe`, where first function is equivalent\n   * of a `next` method, second of an `error` method and third of a `complete` method. Just as in case of Observer,\n   * if you do not need to listen for something, you can omit a function, preferably by passing `undefined` or `null`,\n   * since `subscribe` recognizes these functions by where they were placed in function call. When it comes\n   * to `error` function, just as before, if not provided, errors emitted by an Observable will be thrown.\n   *\n   * Whatever style of calling `subscribe` you use, in both cases it returns a Subscription object.\n   * This object allows you to call `unsubscribe` on it, which in turn will stop work that an Observable does and will clean\n   * up all resources that an Observable used. Note that cancelling a subscription will not call `complete` callback\n   * provided to `subscribe` function, which is reserved for a regular completion signal that comes from an Observable.\n   *\n   * Remember that callbacks provided to `subscribe` are not guaranteed to be called asynchronously.\n   * It is an Observable itself that decides when these functions will be called. For example {@link of}\n   * by default emits all its values synchronously. Always check documentation for how given Observable\n   * will behave when subscribed and if its default behavior can be modified with a {@link Scheduler}.\n   *\n   * @example <caption>Subscribe with an Observer</caption>\n   * const sumObserver = {\n   *   sum: 0,\n   *   next(value) {\n   *     console.log('Adding: ' + value);\n   *     this.sum = this.sum + value;\n   *   },\n   *   error() { // We actually could just remove this method,\n   *   },        // since we do not really care about errors right now.\n   *   complete() {\n   *     console.log('Sum equals: ' + this.sum);\n   *   }\n   * };\n   *\n   * Rx.Observable.of(1, 2, 3) // Synchronously emits 1, 2, 3 and then completes.\n   * .subscribe(sumObserver);\n   *\n   * // Logs:\n   * // \"Adding: 1\"\n   * // \"Adding: 2\"\n   * // \"Adding: 3\"\n   * // \"Sum equals: 6\"\n   *\n   *\n   * @example <caption>Subscribe with functions</caption>\n   * let sum = 0;\n   *\n   * Rx.Observable.of(1, 2, 3)\n   * .subscribe(\n   *   function(value) {\n   *     console.log('Adding: ' + value);\n   *     sum = sum + value;\n   *   },\n   *   undefined,\n   *   function() {\n   *     console.log('Sum equals: ' + sum);\n   *   }\n   * );\n   *\n   * // Logs:\n   * // \"Adding: 1\"\n   * // \"Adding: 2\"\n   * // \"Adding: 3\"\n   * // \"Sum equals: 6\"\n   *\n   *\n   * @example <caption>Cancel a subscription</caption>\n   * const subscription = Rx.Observable.interval(1000).subscribe(\n   *   num => console.log(num),\n   *   undefined,\n   *   () => console.log('completed!') // Will not be called, even\n   * );                                // when cancelling subscription\n   *\n   *\n   * setTimeout(() => {\n   *   subscription.unsubscribe();\n   *   console.log('unsubscribed!');\n   * }, 2500);\n   *\n   * // Logs:\n   * // 0 after 1s\n   * // 1 after 2s\n   * // \"unsubscribed!\" after 2.5s\n   *\n   *\n   * @param {Observer|Function} observerOrNext (optional) Either an observer with methods to be called,\n   *  or the first of three possible handlers, which is the handler for each value emitted from the subscribed\n   *  Observable.\n   * @param {Function} error (optional) A handler for a terminal event resulting from an error. If no error handler is provided,\n   *  the error will be thrown as unhandled.\n   * @param {Function} complete (optional) A handler for a terminal event resulting from successful completion.\n   * @return {ISubscription} a subscription reference to the registered handlers\n   * @method subscribe\n   */\n  subscribe(observerOrNext?: PartialObserver<T> | ((value: T) => void),\n            error?: (error: any) => void,\n            complete?: () => void): Subscription {\n\n    const { operator } = this;\n    const sink = toSubscriber(observerOrNext, error, complete);\n\n    if (operator) {\n      operator.call(sink, this.source);\n    } else {\n      sink.add(this.source || !sink.syncErrorThrowable ? this._subscribe(sink) : this._trySubscribe(sink));\n    }\n\n    if (sink.syncErrorThrowable) {\n      sink.syncErrorThrowable = false;\n      if (sink.syncErrorThrown) {\n        throw sink.syncErrorValue;\n      }\n    }\n\n    return sink;\n  }\n\n  protected _trySubscribe(sink: Subscriber<T>): TeardownLogic {\n    try {\n      return this._subscribe(sink);\n    } catch (err) {\n      sink.syncErrorThrown = true;\n      sink.syncErrorValue = err;\n      sink.error(err);\n    }\n  }\n\n  /**\n   * @method forEach\n   * @param {Function} next a handler for each value emitted by the observable\n   * @param {PromiseConstructor} [PromiseCtor] a constructor function used to instantiate the Promise\n   * @return {Promise} a promise that either resolves on observable completion or\n   *  rejects with the handled error\n   */\n  forEach(next: (value: T) => void, PromiseCtor?: typeof Promise): Promise<void> {\n    if (!PromiseCtor) {\n      if (root.Rx && root.Rx.config && root.Rx.config.Promise) {\n        PromiseCtor = root.Rx.config.Promise;\n      } else if (root.Promise) {\n        PromiseCtor = root.Promise;\n      }\n    }\n\n    if (!PromiseCtor) {\n      throw new Error('no Promise impl found');\n    }\n\n    return new PromiseCtor<void>((resolve, reject) => {\n      // Must be declared in a separate statement to avoid a RefernceError when\n      // accessing subscription below in the closure due to Temporal Dead Zone.\n      let subscription: Subscription;\n      subscription = this.subscribe((value) => {\n        if (subscription) {\n          // if there is a subscription, then we can surmise\n          // the next handling is asynchronous. Any errors thrown\n          // need to be rejected explicitly and unsubscribe must be\n          // called manually\n          try {\n            next(value);\n          } catch (err) {\n            reject(err);\n            subscription.unsubscribe();\n          }\n        } else {\n          // if there is NO subscription, then we're getting a nexted\n          // value synchronously during subscription. We can just call it.\n          // If it errors, Observable's `subscribe` will ensure the\n          // unsubscription logic is called, then synchronously rethrow the error.\n          // After that, Promise will trap the error and send it\n          // down the rejection path.\n          next(value);\n        }\n      }, reject, resolve);\n    });\n  }\n\n  /** @deprecated internal use only */ _subscribe(subscriber: Subscriber<any>): TeardownLogic {\n    return this.source.subscribe(subscriber);\n  }\n\n  // `if` and `throw` are special snow flakes, the compiler sees them as reserved words\n  static if: typeof IfObservable.create;\n  static throw: typeof ErrorObservable.create;\n\n  /**\n   * An interop point defined by the es7-observable spec https://github.com/zenparsing/es-observable\n   * @method Symbol.observable\n   * @return {Observable} this instance of the observable\n   */\n  [Symbol_observable]() {\n    return this;\n  }\n\n  /* tslint:disable:max-line-length */\n  pipe(): Observable<T>\n  pipe<A>(op1: OperatorFunction<T, A>): Observable<A>\n  pipe<A, B>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>): Observable<B>\n  pipe<A, B, C>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>): Observable<C>\n  pipe<A, B, C, D>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>): Observable<D>\n  pipe<A, B, C, D, E>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>, op5: OperatorFunction<D, E>): Observable<E>\n  pipe<A, B, C, D, E, F>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>, op5: OperatorFunction<D, E>, op6: OperatorFunction<E, F>): Observable<F>\n  pipe<A, B, C, D, E, F, G>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>, op5: OperatorFunction<D, E>, op6: OperatorFunction<E, F>, op7: OperatorFunction<F, G>): Observable<G>\n  pipe<A, B, C, D, E, F, G, H>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>, op5: OperatorFunction<D, E>, op6: OperatorFunction<E, F>, op7: OperatorFunction<F, G>, op8: OperatorFunction<G, H>): Observable<H>\n  pipe<A, B, C, D, E, F, G, H, I>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>, op5: OperatorFunction<D, E>, op6: OperatorFunction<E, F>, op7: OperatorFunction<F, G>, op8: OperatorFunction<G, H>, op9: OperatorFunction<H, I>): Observable<I>\n  pipe<R>(...operations: OperatorFunction<T, R>[]): Observable<R>\n  /* tslint:enable:max-line-length */\n\n  /**\n   * Used to stitch together functional operators into a chain.\n   * @method pipe\n   * @return {Observable} the Observable result of all of the operators having\n   * been called in the order they were passed in.\n   *\n   * @example\n   *\n   * import { map, filter, scan } from 'rxjs/operators';\n   *\n   * Rx.Observable.interval(1000)\n   *   .pipe(\n   *     filter(x => x % 2 === 0),\n   *     map(x => x + x),\n   *     scan((acc, x) => acc + x)\n   *   )\n   *   .subscribe(x => console.log(x))\n   */\n  pipe<R>(...operations: OperatorFunction<T, R>[]): Observable<R> {\n    if (operations.length === 0) {\n      return this as any;\n    }\n\n    return pipeFromArray(operations)(this);\n  }\n\n  /* tslint:disable:max-line-length */\n  toPromise<T>(this: Observable<T>): Promise<T>;\n  toPromise<T>(this: Observable<T>, PromiseCtor: typeof Promise): Promise<T>;\n  toPromise<T>(this: Observable<T>, PromiseCtor: PromiseConstructorLike): Promise<T>;\n  /* tslint:enable:max-line-length */\n\n  toPromise(PromiseCtor?: PromiseConstructorLike) {\n    if (!PromiseCtor) {\n      if (root.Rx && root.Rx.config && root.Rx.config.Promise) {\n        PromiseCtor = root.Rx.config.Promise;\n      } else if (root.Promise) {\n        PromiseCtor = root.Promise;\n      }\n    }\n\n    if (!PromiseCtor) {\n      throw new Error('no Promise impl found');\n    }\n\n    return new PromiseCtor((resolve, reject) => {\n      let value: any;\n      this.subscribe((x: T) => value = x, (err: any) => reject(err), () => resolve(value));\n    }) as Promise<T>;\n  }\n}\n","import { root } from '../util/root';\n\nexport function symbolIteratorPonyfill(root: any) {\n  const Symbol: any = root.Symbol;\n\n  if (typeof Symbol === 'function') {\n    if (!Symbol.iterator) {\n      Symbol.iterator = Symbol('iterator polyfill');\n    }\n    return Symbol.iterator;\n  } else {\n    // [for Mozilla Gecko 27-35:](https://mzl.la/2ewE1zC)\n    const { Set } = root;\n    if (Set && typeof new Set()['@@iterator'] === 'function') {\n      return '@@iterator';\n    }\n    const { Map } = root;\n    // required for compatability with es6-shim\n    if (Map) {\n      let keys = Object.getOwnPropertyNames(Map.prototype);\n      for (let i = 0; i < keys.length; ++i) {\n        let key = keys[i];\n        // according to spec, Map.prototype[@@iterator] and Map.orototype.entries must be equal.\n        if (key !== 'entries' && key !== 'size' && Map.prototype[key] === Map.prototype['entries']) {\n          return key;\n        }\n      }\n    }\n    return '@@iterator';\n  }\n}\n\nexport const iterator = symbolIteratorPonyfill(root);\n\n/**\n * @deprecated use iterator instead\n */\nexport const $$iterator = iterator;\n","import { Subscriber } from './Subscriber';\nimport { OuterSubscriber } from './OuterSubscriber';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class InnerSubscriber<T, R> extends Subscriber<R> {\n  private index: number = 0;\n\n  constructor(private parent: OuterSubscriber<T, R>, private outerValue: T, private outerIndex: number) {\n    super();\n  }\n\n  protected _next(value: R): void {\n    this.parent.notifyNext(this.outerValue, value, this.outerIndex, this.index++, this);\n  }\n\n  protected _error(error: any): void {\n    this.parent.notifyError(error, this);\n    this.unsubscribe();\n  }\n\n  protected _complete(): void {\n    this.parent.notifyComplete(this);\n    this.unsubscribe();\n  }\n}\n","import { root } from './root';\nimport { isArrayLike } from './isArrayLike';\nimport { isPromise } from './isPromise';\nimport { isObject } from './isObject';\nimport { Subscriber } from '../Subscriber';\nimport { Observable, ObservableInput } from '../Observable';\nimport { iterator as Symbol_iterator } from '../symbol/iterator';\nimport { Subscription } from '../Subscription';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { observable as Symbol_observable } from '../symbol/observable';\n\nexport function subscribeToResult<T, R>(outerSubscriber: OuterSubscriber<T, R>,\n                                        result: any,\n                                        outerValue?: T,\n                                        outerIndex?: number): Subscription;\nexport function subscribeToResult<T>(outerSubscriber: OuterSubscriber<any, any>,\n                                     result: ObservableInput<T>,\n                                     outerValue?: T,\n                                     outerIndex?: number): Subscription {\n  let destination: Subscriber<any> = new InnerSubscriber(outerSubscriber, outerValue, outerIndex);\n\n  if (destination.closed) {\n    return null;\n  }\n\n  if (result instanceof Observable) {\n    if (result._isScalar) {\n      destination.next((<any>result).value);\n      destination.complete();\n      return null;\n    } else {\n      destination.syncErrorThrowable = true;\n      return result.subscribe(destination);\n    }\n  } else if (isArrayLike(result)) {\n    for (let i = 0, len = result.length; i < len && !destination.closed; i++) {\n      destination.next(result[i]);\n    }\n    if (!destination.closed) {\n      destination.complete();\n    }\n  } else if (isPromise(result)) {\n    result.then(\n      (value) => {\n        if (!destination.closed) {\n          destination.next(<any>value);\n          destination.complete();\n        }\n      },\n      (err: any) => destination.error(err)\n    )\n    .then(null, (err: any) => {\n      // Escaping the Promise trap: globally throw unhandled errors\n      root.setTimeout(() => { throw err; });\n    });\n    return destination;\n  } else if (result && typeof result[Symbol_iterator] === 'function') {\n    const iterator = <any>result[Symbol_iterator]();\n    do {\n      let item = iterator.next();\n      if (item.done) {\n        destination.complete();\n        break;\n      }\n      destination.next(item.value);\n      if (destination.closed) {\n        break;\n      }\n    } while (true);\n  } else if (result && typeof result[Symbol_observable] === 'function') {\n    const obs = result[Symbol_observable]();\n    if (typeof obs.subscribe !== 'function') {\n      destination.error(new TypeError('Provided object does not correctly implement Symbol.observable'));\n    } else {\n      return obs.subscribe(new InnerSubscriber(outerSubscriber, outerValue, outerIndex));\n    }\n  } else {\n    const value = isObject(result) ? 'an invalid object' : `'${result}'`;\n    const msg = `You provided ${value} where a stream was expected.`\n      + ' You can provide an Observable, Promise, Array, or Iterable.';\n    destination.error(new TypeError(msg));\n  }\n  return null;\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable, SubscribableOrPromise } from '../Observable';\nimport { Subscription, TeardownLogic } from '../Subscription';\n\nimport { tryCatch } from '../util/tryCatch';\nimport { errorObject } from '../util/errorObject';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Ignores source values for a duration determined by another Observable, then\n * emits the most recent value from the source Observable, then repeats this\n * process.\n *\n * <span class=\"informal\">It's like {@link auditTime}, but the silencing\n * duration is determined by a second Observable.</span>\n *\n * <img src=\"./img/audit.png\" width=\"100%\">\n *\n * `audit` is similar to `throttle`, but emits the last value from the silenced\n * time window, instead of the first value. `audit` emits the most recent value\n * from the source Observable on the output Observable as soon as its internal\n * timer becomes disabled, and ignores source values while the timer is enabled.\n * Initially, the timer is disabled. As soon as the first source value arrives,\n * the timer is enabled by calling the `durationSelector` function with the\n * source value, which returns the \"duration\" Observable. When the duration\n * Observable emits a value or completes, the timer is disabled, then the most\n * recent source value is emitted on the output Observable, and this process\n * repeats for the next source value.\n *\n * @example <caption>Emit clicks at a rate of at most one click per second</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.audit(ev => Rx.Observable.interval(1000));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link auditTime}\n * @see {@link debounce}\n * @see {@link delayWhen}\n * @see {@link sample}\n * @see {@link throttle}\n *\n * @param {function(value: T): SubscribableOrPromise} durationSelector A function\n * that receives a value from the source Observable, for computing the silencing\n * duration, returned as an Observable or a Promise.\n * @return {Observable<T>} An Observable that performs rate-limiting of\n * emissions from the source Observable.\n * @method audit\n * @owner Observable\n */\nexport function audit<T>(durationSelector: (value: T) => SubscribableOrPromise<any>): MonoTypeOperatorFunction<T> {\n  return function auditOperatorFunction(source: Observable<T>) {\n    return source.lift(new AuditOperator(durationSelector));\n  };\n}\n\nclass AuditOperator<T> implements Operator<T, T> {\n  constructor(private durationSelector: (value: T) => SubscribableOrPromise<any>) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new AuditSubscriber<T, T>(subscriber, this.durationSelector));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass AuditSubscriber<T, R> extends OuterSubscriber<T, R> {\n\n  private value: T;\n  private hasValue: boolean = false;\n  private throttled: Subscription;\n\n  constructor(destination: Subscriber<T>,\n              private durationSelector: (value: T) => SubscribableOrPromise<any>) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    this.value = value;\n    this.hasValue = true;\n    if (!this.throttled) {\n      const duration = tryCatch(this.durationSelector)(value);\n      if (duration === errorObject) {\n        this.destination.error(errorObject.e);\n      } else {\n        const innerSubscription = subscribeToResult(this, duration);\n        if (innerSubscription.closed) {\n          this.clearThrottle();\n        } else {\n          this.add(this.throttled = innerSubscription);\n        }\n      }\n    }\n  }\n\n  clearThrottle() {\n    const { value, hasValue, throttled } = this;\n    if (throttled) {\n      this.remove(throttled);\n      this.throttled = null;\n      throttled.unsubscribe();\n    }\n    if (hasValue) {\n      this.value = null;\n      this.hasValue = false;\n      this.destination.next(value);\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: R, outerIndex: number, innerIndex: number): void {\n    this.clearThrottle();\n  }\n\n  notifyComplete(): void {\n    this.clearThrottle();\n  }\n}\n","import { isArray } from '../util/isArray';\n\nexport function isNumeric(val: any): val is number {\n  // parseFloat NaNs numeric-cast false positives (null|true|false|\"\")\n  // ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n  // subtraction forces infinities to NaN\n  // adding 1 corrects loss of precision from parseFloat (#15100)\n  return !isArray(val) && (val - parseFloat(val) + 1) >= 0;\n};\n","import { Scheduler } from '../Scheduler';\nexport function isScheduler(value: any): value is Scheduler {\n  return value && typeof (<any>value).schedule === 'function';\n}\n","export function isDate(value: any): value is Date {\n  return value instanceof Date && !isNaN(+value);\n}\n","import { isNumeric } from '../util/isNumeric';\nimport { IScheduler } from '../Scheduler';\nimport { Observable } from '../Observable';\nimport { async } from '../scheduler/async';\nimport { isScheduler } from '../util/isScheduler';\nimport { isDate } from '../util/isDate';\nimport { TeardownLogic } from '../Subscription';\nimport { Subscriber } from '../Subscriber';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport class TimerObservable extends Observable<number> {\n\n  /**\n   * Creates an Observable that starts emitting after an `initialDelay` and\n   * emits ever increasing numbers after each `period` of time thereafter.\n   *\n   * <span class=\"informal\">Its like {@link interval}, but you can specify when\n   * should the emissions start.</span>\n   *\n   * <img src=\"./img/timer.png\" width=\"100%\">\n   *\n   * `timer` returns an Observable that emits an infinite sequence of ascending\n   * integers, with a constant interval of time, `period` of your choosing\n   * between those emissions. The first emission happens after the specified\n   * `initialDelay`. The initial delay may be a {@link Date}. By default, this\n   * operator uses the `async` IScheduler to provide a notion of time, but you\n   * may pass any IScheduler to it. If `period` is not specified, the output\n   * Observable emits only one value, `0`. Otherwise, it emits an infinite\n   * sequence.\n   *\n   * @example <caption>Emits ascending numbers, one every second (1000ms), starting after 3 seconds</caption>\n   * var numbers = Rx.Observable.timer(3000, 1000);\n   * numbers.subscribe(x => console.log(x));\n   *\n   * @example <caption>Emits one number after five seconds</caption>\n   * var numbers = Rx.Observable.timer(5000);\n   * numbers.subscribe(x => console.log(x));\n   *\n   * @see {@link interval}\n   * @see {@link delay}\n   *\n   * @param {number|Date} initialDelay The initial delay time to wait before\n   * emitting the first value of `0`.\n   * @param {number} [period] The period of time between emissions of the\n   * subsequent numbers.\n   * @param {Scheduler} [scheduler=async] The IScheduler to use for scheduling\n   * the emission of values, and providing a notion of \"time\".\n   * @return {Observable} An Observable that emits a `0` after the\n   * `initialDelay` and ever increasing numbers after each `period` of time\n   * thereafter.\n   * @static true\n   * @name timer\n   * @owner Observable\n   */\n  static create(initialDelay: number | Date = 0,\n                period?: number | IScheduler,\n                scheduler?: IScheduler): Observable<number> {\n    return new TimerObservable(initialDelay, period, scheduler);\n  }\n\n  static dispatch(state: any) {\n\n    const { index, period, subscriber } = state;\n    const action = (<any> this);\n\n    subscriber.next(index);\n\n    if (subscriber.closed) {\n      return;\n    } else if (period === -1) {\n      return subscriber.complete();\n    }\n\n    state.index = index + 1;\n    action.schedule(state, period);\n  }\n\n  private period: number = -1;\n  private dueTime: number = 0;\n  private scheduler: IScheduler;\n\n  constructor(dueTime: number | Date = 0,\n              period?: number | IScheduler,\n              scheduler?: IScheduler) {\n    super();\n\n    if (isNumeric(period)) {\n      this.period = Number(period) < 1 && 1 || Number(period);\n    } else if (isScheduler(period)) {\n      scheduler = <IScheduler> period;\n    }\n\n    if (!isScheduler(scheduler)) {\n      scheduler = async;\n    }\n\n    this.scheduler = scheduler;\n    this.dueTime = isDate(dueTime) ?\n      (+dueTime - this.scheduler.now()) :\n      (<number> dueTime);\n  }\n\n  /** @deprecated internal use only */ _subscribe(subscriber: Subscriber<number>): TeardownLogic {\n    const index = 0;\n    const { period, dueTime, scheduler } = this;\n\n    return scheduler.schedule(TimerObservable.dispatch, dueTime, {\n      index, period, subscriber\n    });\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OperatorFunction } from '../interfaces';\n\n/**\n * Buffers the source Observable values until `closingNotifier` emits.\n *\n * <span class=\"informal\">Collects values from the past as an array, and emits\n * that array only when another Observable emits.</span>\n *\n * <img src=\"./img/buffer.png\" width=\"100%\">\n *\n * Buffers the incoming Observable values until the given `closingNotifier`\n * Observable emits a value, at which point it emits the buffer on the output\n * Observable and starts a new buffer internally, awaiting the next time\n * `closingNotifier` emits.\n *\n * @example <caption>On every click, emit array of most recent interval events</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var interval = Rx.Observable.interval(1000);\n * var buffered = interval.buffer(clicks);\n * buffered.subscribe(x => console.log(x));\n *\n * @see {@link bufferCount}\n * @see {@link bufferTime}\n * @see {@link bufferToggle}\n * @see {@link bufferWhen}\n * @see {@link window}\n *\n * @param {Observable<any>} closingNotifier An Observable that signals the\n * buffer to be emitted on the output Observable.\n * @return {Observable<T[]>} An Observable of buffers, which are arrays of\n * values.\n * @method buffer\n * @owner Observable\n */\nexport function buffer<T>(closingNotifier: Observable<any>): OperatorFunction<T, T[]> {\n  return function bufferOperatorFunction(source: Observable<T>) {\n    return source.lift(new BufferOperator<T>(closingNotifier));\n  };\n}\n\nclass BufferOperator<T> implements Operator<T, T[]> {\n\n  constructor(private closingNotifier: Observable<any>) {\n  }\n\n  call(subscriber: Subscriber<T[]>, source: any): any {\n    return source.subscribe(new BufferSubscriber(subscriber, this.closingNotifier));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass BufferSubscriber<T> extends OuterSubscriber<T, any> {\n  private buffer: T[] = [];\n\n  constructor(destination: Subscriber<T[]>, closingNotifier: Observable<any>) {\n    super(destination);\n    this.add(subscribeToResult(this, closingNotifier));\n  }\n\n  protected _next(value: T) {\n    this.buffer.push(value);\n  }\n\n  notifyNext(outerValue: T, innerValue: any,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, any>): void {\n    const buffer = this.buffer;\n    this.buffer = [];\n    this.destination.next(buffer);\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { TeardownLogic } from '../Subscription';\nimport { OperatorFunction } from '../interfaces';\n\n/**\n * Buffers the source Observable values until the size hits the maximum\n * `bufferSize` given.\n *\n * <span class=\"informal\">Collects values from the past as an array, and emits\n * that array only when its size reaches `bufferSize`.</span>\n *\n * <img src=\"./img/bufferCount.png\" width=\"100%\">\n *\n * Buffers a number of values from the source Observable by `bufferSize` then\n * emits the buffer and clears it, and starts a new buffer each\n * `startBufferEvery` values. If `startBufferEvery` is not provided or is\n * `null`, then new buffers are started immediately at the start of the source\n * and when each buffer closes and is emitted.\n *\n * @example <caption>Emit the last two click events as an array</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var buffered = clicks.bufferCount(2);\n * buffered.subscribe(x => console.log(x));\n *\n * @example <caption>On every click, emit the last two click events as an array</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var buffered = clicks.bufferCount(2, 1);\n * buffered.subscribe(x => console.log(x));\n *\n * @see {@link buffer}\n * @see {@link bufferTime}\n * @see {@link bufferToggle}\n * @see {@link bufferWhen}\n * @see {@link pairwise}\n * @see {@link windowCount}\n *\n * @param {number} bufferSize The maximum size of the buffer emitted.\n * @param {number} [startBufferEvery] Interval at which to start a new buffer.\n * For example if `startBufferEvery` is `2`, then a new buffer will be started\n * on every other value from the source. A new buffer is started at the\n * beginning of the source by default.\n * @return {Observable<T[]>} An Observable of arrays of buffered values.\n * @method bufferCount\n * @owner Observable\n */\nexport function bufferCount<T>(bufferSize: number, startBufferEvery: number = null): OperatorFunction<T, T[]> {\n  return function bufferCountOperatorFunction(source: Observable<T>) {\n    return source.lift(new BufferCountOperator<T>(bufferSize, startBufferEvery));\n  };\n}\n\nclass BufferCountOperator<T> implements Operator<T, T[]> {\n  private subscriberClass: any;\n\n  constructor(private bufferSize: number, private startBufferEvery: number) {\n    if (!startBufferEvery || bufferSize === startBufferEvery) {\n      this.subscriberClass = BufferCountSubscriber;\n    } else {\n      this.subscriberClass = BufferSkipCountSubscriber;\n    }\n  }\n\n  call(subscriber: Subscriber<T[]>, source: any): TeardownLogic {\n    return source.subscribe(new this.subscriberClass(subscriber, this.bufferSize, this.startBufferEvery));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass BufferCountSubscriber<T> extends Subscriber<T> {\n  private buffer: T[] = [];\n\n  constructor(destination: Subscriber<T[]>, private bufferSize: number) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    const buffer = this.buffer;\n\n    buffer.push(value);\n\n    if (buffer.length == this.bufferSize) {\n      this.destination.next(buffer);\n      this.buffer = [];\n    }\n  }\n\n  protected _complete(): void {\n    const buffer = this.buffer;\n    if (buffer.length > 0) {\n      this.destination.next(buffer);\n    }\n    super._complete();\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass BufferSkipCountSubscriber<T> extends Subscriber<T> {\n  private buffers: Array<T[]> = [];\n  private count: number = 0;\n\n  constructor(destination: Subscriber<T[]>, private bufferSize: number, private startBufferEvery: number) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    const { bufferSize, startBufferEvery, buffers, count } = this;\n\n    this.count++;\n    if (count % startBufferEvery === 0) {\n      buffers.push([]);\n    }\n\n    for (let i = buffers.length; i--; ) {\n      const buffer = buffers[i];\n      buffer.push(value);\n      if (buffer.length === bufferSize) {\n        buffers.splice(i, 1);\n        this.destination.next(buffer);\n      }\n    }\n  }\n\n  protected _complete(): void {\n    const { buffers, destination } = this;\n\n    while (buffers.length > 0) {\n      let buffer = buffers.shift();\n      if (buffer.length > 0) {\n        destination.next(buffer);\n      }\n    }\n    super._complete();\n  }\n\n}\n","import { IScheduler } from '../Scheduler';\nimport { Action } from '../scheduler/Action';\nimport { Operator } from '../Operator';\nimport { async } from '../scheduler/async';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { isScheduler } from '../util/isScheduler';\nimport { OperatorFunction } from '../interfaces';\n\n/* tslint:disable:max-line-length */\nexport function bufferTime<T>(bufferTimeSpan: number, scheduler?: IScheduler): OperatorFunction<T, T[]>;\nexport function bufferTime<T>(bufferTimeSpan: number, bufferCreationInterval: number, scheduler?: IScheduler): OperatorFunction<T, T[]>;\nexport function bufferTime<T>(bufferTimeSpan: number, bufferCreationInterval: number, maxBufferSize: number, scheduler?: IScheduler): OperatorFunction<T, T[]>;\n/* tslint:enable:max-line-length */\n\n/**\n * Buffers the source Observable values for a specific time period.\n *\n * <span class=\"informal\">Collects values from the past as an array, and emits\n * those arrays periodically in time.</span>\n *\n * <img src=\"./img/bufferTime.png\" width=\"100%\">\n *\n * Buffers values from the source for a specific time duration `bufferTimeSpan`.\n * Unless the optional argument `bufferCreationInterval` is given, it emits and\n * resets the buffer every `bufferTimeSpan` milliseconds. If\n * `bufferCreationInterval` is given, this operator opens the buffer every\n * `bufferCreationInterval` milliseconds and closes (emits and resets) the\n * buffer every `bufferTimeSpan` milliseconds. When the optional argument\n * `maxBufferSize` is specified, the buffer will be closed either after\n * `bufferTimeSpan` milliseconds or when it contains `maxBufferSize` elements.\n *\n * @example <caption>Every second, emit an array of the recent click events</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var buffered = clicks.bufferTime(1000);\n * buffered.subscribe(x => console.log(x));\n *\n * @example <caption>Every 5 seconds, emit the click events from the next 2 seconds</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var buffered = clicks.bufferTime(2000, 5000);\n * buffered.subscribe(x => console.log(x));\n *\n * @see {@link buffer}\n * @see {@link bufferCount}\n * @see {@link bufferToggle}\n * @see {@link bufferWhen}\n * @see {@link windowTime}\n *\n * @param {number} bufferTimeSpan The amount of time to fill each buffer array.\n * @param {number} [bufferCreationInterval] The interval at which to start new\n * buffers.\n * @param {number} [maxBufferSize] The maximum buffer size.\n * @param {Scheduler} [scheduler=async] The scheduler on which to schedule the\n * intervals that determine buffer boundaries.\n * @return {Observable<T[]>} An observable of arrays of buffered values.\n * @method bufferTime\n * @owner Observable\n */\nexport function bufferTime<T>(bufferTimeSpan: number): OperatorFunction<T, T[]> {\n  let length: number = arguments.length;\n\n  let scheduler: IScheduler = async;\n  if (isScheduler(arguments[arguments.length - 1])) {\n    scheduler = arguments[arguments.length - 1];\n    length--;\n  }\n\n  let bufferCreationInterval: number = null;\n  if (length >= 2) {\n    bufferCreationInterval = arguments[1];\n  }\n\n  let maxBufferSize: number = Number.POSITIVE_INFINITY;\n  if (length >= 3) {\n    maxBufferSize = arguments[2];\n  }\n\n  return function bufferTimeOperatorFunction(source: Observable<T>) {\n    return source.lift(new BufferTimeOperator<T>(bufferTimeSpan, bufferCreationInterval, maxBufferSize, scheduler));\n  };\n}\n\nclass BufferTimeOperator<T> implements Operator<T, T[]> {\n  constructor(private bufferTimeSpan: number,\n              private bufferCreationInterval: number,\n              private maxBufferSize: number,\n              private scheduler: IScheduler) {\n  }\n\n  call(subscriber: Subscriber<T[]>, source: any): any {\n    return source.subscribe(new BufferTimeSubscriber(\n      subscriber, this.bufferTimeSpan, this.bufferCreationInterval, this.maxBufferSize, this.scheduler\n    ));\n  }\n}\n\nclass Context<T> {\n  buffer: T[] = [];\n  closeAction: Subscription;\n}\n\ntype CreationState<T> = {\n  bufferTimeSpan: number;\n  bufferCreationInterval: number,\n  subscriber: BufferTimeSubscriber<T>;\n  scheduler: IScheduler;\n};\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass BufferTimeSubscriber<T> extends Subscriber<T> {\n  private contexts: Array<Context<T>> = [];\n  private timespanOnly: boolean;\n\n  constructor(destination: Subscriber<T[]>,\n              private bufferTimeSpan: number,\n              private bufferCreationInterval: number,\n              private maxBufferSize: number,\n              private scheduler: IScheduler) {\n    super(destination);\n    const context = this.openContext();\n    this.timespanOnly = bufferCreationInterval == null || bufferCreationInterval < 0;\n    if (this.timespanOnly) {\n      const timeSpanOnlyState = { subscriber: this, context, bufferTimeSpan };\n      this.add(context.closeAction = scheduler.schedule(dispatchBufferTimeSpanOnly, bufferTimeSpan, timeSpanOnlyState));\n    } else {\n      const closeState = { subscriber: this, context };\n      const creationState: CreationState<T> = { bufferTimeSpan, bufferCreationInterval, subscriber: this, scheduler };\n      this.add(context.closeAction = scheduler.schedule(dispatchBufferClose, bufferTimeSpan, closeState));\n      this.add(scheduler.schedule(dispatchBufferCreation, bufferCreationInterval, creationState));\n    }\n  }\n\n  protected _next(value: T) {\n    const contexts = this.contexts;\n    const len = contexts.length;\n    let filledBufferContext: Context<T>;\n    for (let i = 0; i < len; i++) {\n      const context = contexts[i];\n      const buffer = context.buffer;\n      buffer.push(value);\n      if (buffer.length == this.maxBufferSize) {\n        filledBufferContext = context;\n      }\n    }\n\n    if (filledBufferContext) {\n      this.onBufferFull(filledBufferContext);\n    }\n  }\n\n  protected _error(err: any) {\n    this.contexts.length = 0;\n    super._error(err);\n  }\n\n  protected _complete() {\n    const { contexts, destination } = this;\n    while (contexts.length > 0) {\n      const context = contexts.shift();\n      destination.next(context.buffer);\n    }\n    super._complete();\n  }\n\n  /** @deprecated internal use only */ _unsubscribe() {\n    this.contexts = null;\n  }\n\n  protected onBufferFull(context: Context<T>) {\n    this.closeContext(context);\n    const closeAction = context.closeAction;\n    closeAction.unsubscribe();\n    this.remove(closeAction);\n\n    if (!this.closed && this.timespanOnly) {\n      context = this.openContext();\n      const bufferTimeSpan = this.bufferTimeSpan;\n      const timeSpanOnlyState = { subscriber: this, context, bufferTimeSpan };\n      this.add(context.closeAction = this.scheduler.schedule(dispatchBufferTimeSpanOnly, bufferTimeSpan, timeSpanOnlyState));\n    }\n  }\n\n  openContext(): Context<T> {\n    const context: Context<T> = new Context<T>();\n    this.contexts.push(context);\n    return context;\n  }\n\n  closeContext(context: Context<T>) {\n    this.destination.next(context.buffer);\n    const contexts = this.contexts;\n\n    const spliceIndex = contexts ? contexts.indexOf(context) : -1;\n    if (spliceIndex >= 0) {\n      contexts.splice(contexts.indexOf(context), 1);\n    }\n  }\n}\n\nfunction dispatchBufferTimeSpanOnly(this: Action<any>, state: any) {\n  const subscriber: BufferTimeSubscriber<any> = state.subscriber;\n\n  const prevContext = state.context;\n  if (prevContext) {\n    subscriber.closeContext(prevContext);\n  }\n\n  if (!subscriber.closed) {\n    state.context = subscriber.openContext();\n    state.context.closeAction = this.schedule(state, state.bufferTimeSpan);\n  }\n}\n\ninterface DispatchArg<T> {\n  subscriber: BufferTimeSubscriber<T>;\n  context: Context<T>;\n}\n\nfunction dispatchBufferCreation<T>(this: Action<CreationState<T>>, state: CreationState<T>) {\n  const { bufferCreationInterval, bufferTimeSpan, subscriber, scheduler } = state;\n  const context = subscriber.openContext();\n  const action = <Action<CreationState<T>>>this;\n  if (!subscriber.closed) {\n    subscriber.add(context.closeAction = scheduler.schedule<DispatchArg<T>>(dispatchBufferClose, bufferTimeSpan, { subscriber, context }));\n    action.schedule(state, bufferCreationInterval);\n  }\n}\n\nfunction dispatchBufferClose<T>(arg: DispatchArg<T>) {\n  const { subscriber, context } = arg;\n  subscriber.closeContext(context);\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable, SubscribableOrPromise } from '../Observable';\nimport { Subscription } from '../Subscription';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { OperatorFunction } from '../interfaces';\n\n/**\n * Buffers the source Observable values starting from an emission from\n * `openings` and ending when the output of `closingSelector` emits.\n *\n * <span class=\"informal\">Collects values from the past as an array. Starts\n * collecting only when `opening` emits, and calls the `closingSelector`\n * function to get an Observable that tells when to close the buffer.</span>\n *\n * <img src=\"./img/bufferToggle.png\" width=\"100%\">\n *\n * Buffers values from the source by opening the buffer via signals from an\n * Observable provided to `openings`, and closing and sending the buffers when\n * a Subscribable or Promise returned by the `closingSelector` function emits.\n *\n * @example <caption>Every other second, emit the click events from the next 500ms</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var openings = Rx.Observable.interval(1000);\n * var buffered = clicks.bufferToggle(openings, i =>\n *   i % 2 ? Rx.Observable.interval(500) : Rx.Observable.empty()\n * );\n * buffered.subscribe(x => console.log(x));\n *\n * @see {@link buffer}\n * @see {@link bufferCount}\n * @see {@link bufferTime}\n * @see {@link bufferWhen}\n * @see {@link windowToggle}\n *\n * @param {SubscribableOrPromise<O>} openings A Subscribable or Promise of notifications to start new\n * buffers.\n * @param {function(value: O): SubscribableOrPromise} closingSelector A function that takes\n * the value emitted by the `openings` observable and returns a Subscribable or Promise,\n * which, when it emits, signals that the associated buffer should be emitted\n * and cleared.\n * @return {Observable<T[]>} An observable of arrays of buffered values.\n * @method bufferToggle\n * @owner Observable\n */\nexport function bufferToggle<T, O>(\n  openings: SubscribableOrPromise<O>,\n  closingSelector: (value: O) => SubscribableOrPromise<any>\n): OperatorFunction<T, T[]> {\n  return function bufferToggleOperatorFunction(source: Observable<T>) {\n    return source.lift(new BufferToggleOperator<T, O>(openings, closingSelector));\n  };\n}\n\nclass BufferToggleOperator<T, O> implements Operator<T, T[]> {\n\n  constructor(private openings: SubscribableOrPromise<O>,\n              private closingSelector: (value: O) => SubscribableOrPromise<any>) {\n  }\n\n  call(subscriber: Subscriber<T[]>, source: any): any {\n    return source.subscribe(new BufferToggleSubscriber(subscriber, this.openings, this.closingSelector));\n  }\n}\n\ninterface BufferContext<T> {\n  buffer: T[];\n  subscription: Subscription;\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass BufferToggleSubscriber<T, O> extends OuterSubscriber<T, O> {\n  private contexts: Array<BufferContext<T>> = [];\n\n  constructor(destination: Subscriber<T[]>,\n              private openings: SubscribableOrPromise<O>,\n              private closingSelector: (value: O) => SubscribableOrPromise<any> | void) {\n    super(destination);\n    this.add(subscribeToResult(this, openings));\n  }\n\n  protected _next(value: T): void {\n    const contexts = this.contexts;\n    const len = contexts.length;\n    for (let i = 0; i < len; i++) {\n      contexts[i].buffer.push(value);\n    }\n  }\n\n  protected _error(err: any): void {\n    const contexts = this.contexts;\n    while (contexts.length > 0) {\n      const context = contexts.shift();\n      context.subscription.unsubscribe();\n      context.buffer = null;\n      context.subscription = null;\n    }\n    this.contexts = null;\n    super._error(err);\n  }\n\n  protected _complete(): void {\n    const contexts = this.contexts;\n    while (contexts.length > 0) {\n      const context = contexts.shift();\n      this.destination.next(context.buffer);\n      context.subscription.unsubscribe();\n      context.buffer = null;\n      context.subscription = null;\n    }\n    this.contexts = null;\n    super._complete();\n  }\n\n  notifyNext(outerValue: any, innerValue: O,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, O>): void {\n    outerValue ? this.closeBuffer(outerValue) : this.openBuffer(innerValue);\n  }\n\n  notifyComplete(innerSub: InnerSubscriber<T, O>): void {\n    this.closeBuffer((<any> innerSub).context);\n  }\n\n  private openBuffer(value: O): void {\n    try {\n      const closingSelector = this.closingSelector;\n      const closingNotifier = closingSelector.call(this, value);\n      if (closingNotifier) {\n        this.trySubscribe(closingNotifier);\n      }\n    } catch (err) {\n      this._error(err);\n    }\n  }\n\n  private closeBuffer(context: BufferContext<T>): void {\n    const contexts = this.contexts;\n\n    if (contexts && context) {\n      const { buffer, subscription } = context;\n      this.destination.next(buffer);\n      contexts.splice(contexts.indexOf(context), 1);\n      this.remove(subscription);\n      subscription.unsubscribe();\n    }\n  }\n\n  private trySubscribe(closingNotifier: any): void {\n    const contexts = this.contexts;\n\n    const buffer: Array<T> = [];\n    const subscription = new Subscription();\n    const context = { buffer, subscription };\n    contexts.push(context);\n\n    const innerSubscription = subscribeToResult(this, closingNotifier, <any>context);\n\n    if (!innerSubscription || innerSubscription.closed) {\n      this.closeBuffer(context);\n    } else {\n      (<any> innerSubscription).context = context;\n\n      this.add(innerSubscription);\n      subscription.add(innerSubscription);\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { Subscription } from '../Subscription';\nimport { tryCatch } from '../util/tryCatch';\nimport { errorObject } from '../util/errorObject';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OperatorFunction } from '../interfaces';\n\n/**\n * Buffers the source Observable values, using a factory function of closing\n * Observables to determine when to close, emit, and reset the buffer.\n *\n * <span class=\"informal\">Collects values from the past as an array. When it\n * starts collecting values, it calls a function that returns an Observable that\n * tells when to close the buffer and restart collecting.</span>\n *\n * <img src=\"./img/bufferWhen.png\" width=\"100%\">\n *\n * Opens a buffer immediately, then closes the buffer when the observable\n * returned by calling `closingSelector` function emits a value. When it closes\n * the buffer, it immediately opens a new buffer and repeats the process.\n *\n * @example <caption>Emit an array of the last clicks every [1-5] random seconds</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var buffered = clicks.bufferWhen(() =>\n *   Rx.Observable.interval(1000 + Math.random() * 4000)\n * );\n * buffered.subscribe(x => console.log(x));\n *\n * @see {@link buffer}\n * @see {@link bufferCount}\n * @see {@link bufferTime}\n * @see {@link bufferToggle}\n * @see {@link windowWhen}\n *\n * @param {function(): Observable} closingSelector A function that takes no\n * arguments and returns an Observable that signals buffer closure.\n * @return {Observable<T[]>} An observable of arrays of buffered values.\n * @method bufferWhen\n * @owner Observable\n */\nexport function bufferWhen<T>(closingSelector: () => Observable<any>): OperatorFunction<T, T[]> {\n  return function (source: Observable<T>) {\n    return source.lift(new BufferWhenOperator(closingSelector));\n  };\n}\n\nclass BufferWhenOperator<T> implements Operator<T, T[]> {\n\n  constructor(private closingSelector: () => Observable<any>) {\n  }\n\n  call(subscriber: Subscriber<T[]>, source: any): any {\n    return source.subscribe(new BufferWhenSubscriber(subscriber, this.closingSelector));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass BufferWhenSubscriber<T> extends OuterSubscriber<T, any> {\n  private buffer: T[];\n  private subscribing: boolean = false;\n  private closingSubscription: Subscription;\n\n  constructor(destination: Subscriber<T[]>, private closingSelector: () => Observable<any>) {\n    super(destination);\n    this.openBuffer();\n  }\n\n  protected _next(value: T) {\n    this.buffer.push(value);\n  }\n\n  protected _complete() {\n    const buffer = this.buffer;\n    if (buffer) {\n      this.destination.next(buffer);\n    }\n    super._complete();\n  }\n\n  /** @deprecated internal use only */ _unsubscribe() {\n    this.buffer = null;\n    this.subscribing = false;\n  }\n\n  notifyNext(outerValue: T, innerValue: any,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, any>): void {\n    this.openBuffer();\n  }\n\n  notifyComplete(): void {\n    if (this.subscribing) {\n      this.complete();\n    } else {\n      this.openBuffer();\n    }\n  }\n\n  openBuffer() {\n\n    let { closingSubscription } = this;\n\n    if (closingSubscription) {\n      this.remove(closingSubscription);\n      closingSubscription.unsubscribe();\n    }\n\n    const buffer = this.buffer;\n    if (this.buffer) {\n      this.destination.next(buffer);\n    }\n\n    this.buffer = [];\n\n    const closingNotifier = tryCatch(this.closingSelector)();\n\n    if (closingNotifier === errorObject) {\n      this.error(errorObject.e);\n    } else {\n      closingSubscription = new Subscription();\n      this.closingSubscription = closingSubscription;\n      this.add(closingSubscription);\n      this.subscribing = true;\n      closingSubscription.add(subscribeToResult(this, closingNotifier));\n      this.subscribing = false;\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable, ObservableInput } from '../Observable';\n\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OperatorFunction } from '../interfaces';\n\n/**\n * Catches errors on the observable to be handled by returning a new observable or throwing an error.\n *\n * <img src=\"./img/catch.png\" width=\"100%\">\n *\n * @example <caption>Continues with a different Observable when there's an error</caption>\n *\n * Observable.of(1, 2, 3, 4, 5)\n *   .map(n => {\n * \t   if (n == 4) {\n * \t     throw 'four!';\n *     }\n *\t   return n;\n *   })\n *   .catch(err => Observable.of('I', 'II', 'III', 'IV', 'V'))\n *   .subscribe(x => console.log(x));\n *   // 1, 2, 3, I, II, III, IV, V\n *\n * @example <caption>Retries the caught source Observable again in case of error, similar to retry() operator</caption>\n *\n * Observable.of(1, 2, 3, 4, 5)\n *   .map(n => {\n * \t   if (n === 4) {\n * \t     throw 'four!';\n *     }\n * \t   return n;\n *   })\n *   .catch((err, caught) => caught)\n *   .take(30)\n *   .subscribe(x => console.log(x));\n *   // 1, 2, 3, 1, 2, 3, ...\n *\n * @example <caption>Throws a new error when the source Observable throws an error</caption>\n *\n * Observable.of(1, 2, 3, 4, 5)\n *   .map(n => {\n *     if (n == 4) {\n *       throw 'four!';\n *     }\n *     return n;\n *   })\n *   .catch(err => {\n *     throw 'error in source. Details: ' + err;\n *   })\n *   .subscribe(\n *     x => console.log(x),\n *     err => console.log(err)\n *   );\n *   // 1, 2, 3, error in source. Details: four!\n *\n * @param {function} selector a function that takes as arguments `err`, which is the error, and `caught`, which\n *  is the source observable, in case you'd like to \"retry\" that observable by returning it again. Whatever observable\n *  is returned by the `selector` will be used to continue the observable chain.\n * @return {Observable} An observable that originates from either the source or the observable returned by the\n *  catch `selector` function.\n * @name catchError\n */\nexport function catchError<T, R>(selector: (err: any, caught: Observable<T>) => ObservableInput<R>): OperatorFunction<T, T | R> {\n  return function catchErrorOperatorFunction(source: Observable<T>): Observable<T | R> {\n    const operator = new CatchOperator(selector);\n    const caught = source.lift(operator);\n    return (operator.caught = caught as Observable<T>);\n  };\n}\n\nclass CatchOperator<T, R> implements Operator<T, T | R> {\n  caught: Observable<T>;\n\n  constructor(private selector: (err: any, caught: Observable<T>) => ObservableInput<T | R>) {\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new CatchSubscriber(subscriber, this.selector, this.caught));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass CatchSubscriber<T, R> extends OuterSubscriber<T, T | R> {\n  constructor(destination: Subscriber<any>,\n              private selector: (err: any, caught: Observable<T>) => ObservableInput<T | R>,\n              private caught: Observable<T>) {\n    super(destination);\n  }\n\n  // NOTE: overriding `error` instead of `_error` because we don't want\n  // to have this flag this subscriber as `isStopped`. We can mimic the\n  // behavior of the RetrySubscriber (from the `retry` operator), where\n  // we unsubscribe from our source chain, reset our Subscriber flags,\n  // then subscribe to the selector result.\n  error(err: any) {\n    if (!this.isStopped) {\n      let result: any;\n      try {\n        result = this.selector(err, this.caught);\n      } catch (err2) {\n        super.error(err2);\n        return;\n      }\n      this._unsubscribeAndRecycle();\n      this.add(subscribeToResult(this, result));\n    }\n  }\n}\n","import { IScheduler } from '../Scheduler';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { TeardownLogic } from '../Subscription';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport class ScalarObservable<T> extends Observable<T> {\n  static create<T>(value: T, scheduler?: IScheduler): ScalarObservable<T> {\n    return new ScalarObservable(value, scheduler);\n  }\n\n  static dispatch(state: any): void {\n    const { done, value, subscriber } = state;\n\n    if (done) {\n      subscriber.complete();\n      return;\n    }\n\n    subscriber.next(value);\n    if (subscriber.closed) {\n      return;\n    }\n\n    state.done = true;\n    (<any> this).schedule(state);\n  }\n\n  _isScalar: boolean = true;\n\n  constructor(public value: T, private scheduler?: IScheduler) {\n    super();\n    if (scheduler) {\n      this._isScalar = false;\n    }\n  }\n\n  /** @deprecated internal use only */ _subscribe(subscriber: Subscriber<T>): TeardownLogic {\n    const value = this.value;\n    const scheduler = this.scheduler;\n\n    if (scheduler) {\n      return scheduler.schedule(ScalarObservable.dispatch, 0, {\n        done: false, value, subscriber\n      });\n    } else {\n      subscriber.next(value);\n      if (!subscriber.closed) {\n        subscriber.complete();\n      }\n    }\n  }\n}\n","import { IScheduler } from '../Scheduler';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { TeardownLogic } from '../Subscription';\n\nexport interface DispatchArg<T> {\n  subscriber: Subscriber<T>;\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport class EmptyObservable<T> extends Observable<T> {\n\n  /**\n   * Creates an Observable that emits no items to the Observer and immediately\n   * emits a complete notification.\n   *\n   * <span class=\"informal\">Just emits 'complete', and nothing else.\n   * </span>\n   *\n   * <img src=\"./img/empty.png\" width=\"100%\">\n   *\n   * This static operator is useful for creating a simple Observable that only\n   * emits the complete notification. It can be used for composing with other\n   * Observables, such as in a {@link mergeMap}.\n   *\n   * @example <caption>Emit the number 7, then complete.</caption>\n   * var result = Rx.Observable.empty().startWith(7);\n   * result.subscribe(x => console.log(x));\n   *\n   * @example <caption>Map and flatten only odd numbers to the sequence 'a', 'b', 'c'</caption>\n   * var interval = Rx.Observable.interval(1000);\n   * var result = interval.mergeMap(x =>\n   *   x % 2 === 1 ? Rx.Observable.of('a', 'b', 'c') : Rx.Observable.empty()\n   * );\n   * result.subscribe(x => console.log(x));\n   *\n   * // Results in the following to the console:\n   * // x is equal to the count on the interval eg(0,1,2,3,...)\n   * // x will occur every 1000ms\n   * // if x % 2 is equal to 1 print abc\n   * // if x % 2 is not equal to 1 nothing will be output\n   *\n   * @see {@link create}\n   * @see {@link never}\n   * @see {@link of}\n   * @see {@link throw}\n   *\n   * @param {Scheduler} [scheduler] A {@link IScheduler} to use for scheduling\n   * the emission of the complete notification.\n   * @return {Observable} An \"empty\" Observable: emits only the complete\n   * notification.\n   * @static true\n   * @name empty\n   * @owner Observable\n   */\n  static create<T>(scheduler?: IScheduler): Observable<T> {\n    return new EmptyObservable<T>(scheduler);\n  }\n\n  static dispatch<T>(arg: DispatchArg<T>) {\n    const { subscriber } = arg;\n    subscriber.complete();\n  }\n\n  constructor(private scheduler?: IScheduler) {\n    super();\n  }\n\n  /** @deprecated internal use only */ _subscribe(subscriber: Subscriber<T>): TeardownLogic {\n\n    const scheduler = this.scheduler;\n\n    if (scheduler) {\n      return scheduler.schedule(EmptyObservable.dispatch, 0, { subscriber });\n    } else {\n      subscriber.complete();\n    }\n  }\n}\n","import { IScheduler } from '../Scheduler';\nimport { Observable } from '../Observable';\nimport { ScalarObservable } from './ScalarObservable';\nimport { EmptyObservable } from './EmptyObservable';\nimport { Subscriber } from '../Subscriber';\nimport { isScheduler } from '../util/isScheduler';\nimport { TeardownLogic } from '../Subscription';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport class ArrayObservable<T> extends Observable<T> {\n\n  static create<T>(array: T[], scheduler?: IScheduler): Observable<T> {\n    return new ArrayObservable(array, scheduler);\n  }\n\n  static of<T>(item1: T, scheduler?: IScheduler): Observable<T>;\n  static of<T>(item1: T, item2: T, scheduler?: IScheduler): Observable<T>;\n  static of<T>(item1: T, item2: T, item3: T, scheduler?: IScheduler): Observable<T>;\n  static of<T>(item1: T, item2: T, item3: T, item4: T, scheduler?: IScheduler): Observable<T>;\n  static of<T>(item1: T, item2: T, item3: T, item4: T, item5: T, scheduler?: IScheduler): Observable<T>;\n  static of<T>(item1: T, item2: T, item3: T, item4: T, item5: T, item6: T, scheduler?: IScheduler): Observable<T>;\n  static of<T>(...array: Array<T | IScheduler>): Observable<T>;\n  /**\n   * Creates an Observable that emits some values you specify as arguments,\n   * immediately one after the other, and then emits a complete notification.\n   *\n   * <span class=\"informal\">Emits the arguments you provide, then completes.\n   * </span>\n   *\n   * <img src=\"./img/of.png\" width=\"100%\">\n   *\n   * This static operator is useful for creating a simple Observable that only\n   * emits the arguments given, and the complete notification thereafter. It can\n   * be used for composing with other Observables, such as with {@link concat}.\n   * By default, it uses a `null` IScheduler, which means the `next`\n   * notifications are sent synchronously, although with a different IScheduler\n   * it is possible to determine when those notifications will be delivered.\n   *\n   * @example <caption>Emit 10, 20, 30, then 'a', 'b', 'c', then start ticking every second.</caption>\n   * var numbers = Rx.Observable.of(10, 20, 30);\n   * var letters = Rx.Observable.of('a', 'b', 'c');\n   * var interval = Rx.Observable.interval(1000);\n   * var result = numbers.concat(letters).concat(interval);\n   * result.subscribe(x => console.log(x));\n   *\n   * @see {@link create}\n   * @see {@link empty}\n   * @see {@link never}\n   * @see {@link throw}\n   *\n   * @param {...T} values Arguments that represent `next` values to be emitted.\n   * @param {Scheduler} [scheduler] A {@link IScheduler} to use for scheduling\n   * the emissions of the `next` notifications.\n   * @return {Observable<T>} An Observable that emits each given input value.\n   * @static true\n   * @name of\n   * @owner Observable\n   */\n  static of<T>(...array: Array<T | IScheduler>): Observable<T> {\n    let scheduler = <IScheduler>array[array.length - 1];\n    if (isScheduler(scheduler)) {\n      array.pop();\n    } else {\n      scheduler = null;\n    }\n\n    const len = array.length;\n    if (len > 1) {\n      return new ArrayObservable<T>(<any>array, scheduler);\n    } else if (len === 1) {\n      return new ScalarObservable<T>(<any>array[0], scheduler);\n    } else {\n      return new EmptyObservable<T>(scheduler);\n    }\n  }\n\n  static dispatch(state: any) {\n\n    const { array, index, count, subscriber } = state;\n\n    if (index >= count) {\n      subscriber.complete();\n      return;\n    }\n\n    subscriber.next(array[index]);\n\n    if (subscriber.closed) {\n      return;\n    }\n\n    state.index = index + 1;\n\n    (<any> this).schedule(state);\n  }\n\n  // value used if Array has one value and _isScalar\n  value: any;\n\n  constructor(private array: T[], private scheduler?: IScheduler) {\n    super();\n    if (!scheduler && array.length === 1) {\n      this._isScalar = true;\n      this.value = array[0];\n    }\n  }\n\n  /** @deprecated internal use only */ _subscribe(subscriber: Subscriber<T>): TeardownLogic {\n    let index = 0;\n    const array = this.array;\n    const count = array.length;\n    const scheduler = this.scheduler;\n\n    if (scheduler) {\n      return scheduler.schedule(ArrayObservable.dispatch, 0, {\n        array, index, count, subscriber\n      });\n    } else {\n      for (let i = 0; i < count && !subscriber.closed; i++) {\n        subscriber.next(array[i]);\n      }\n      subscriber.complete();\n    }\n  }\n}\n","import { Observable, ObservableInput } from '../Observable';\nimport { ArrayObservable } from '../observable/ArrayObservable';\nimport { isArray } from '../util/isArray';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OperatorFunction } from '../interfaces';\n\nconst none = {};\n\n/* tslint:disable:max-line-length */\nexport function combineLatest<T, R>(project: (v1: T) => R): OperatorFunction<T, R>;\nexport function combineLatest<T, T2, R>(v2: ObservableInput<T2>, project: (v1: T, v2: T2) => R): OperatorFunction<T, R>;\nexport function combineLatest<T, T2, T3, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, project: (v1: T, v2: T2, v3: T3) => R): OperatorFunction<T, R>;\nexport function combineLatest<T, T2, T3, T4, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, project: (v1: T, v2: T2, v3: T3, v4: T4) => R): OperatorFunction<T, R>;\nexport function combineLatest<T, T2, T3, T4, T5, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, project: (v1: T, v2: T2, v3: T3, v4: T4, v5: T5) => R): OperatorFunction<T, R>;\nexport function combineLatest<T, T2, T3, T4, T5, T6, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>, project: (v1: T, v2: T2, v3: T3, v4: T4, v5: T5, v6: T6) => R): OperatorFunction<T, R> ;\nexport function combineLatest<T, T2>(v2: ObservableInput<T2>): OperatorFunction<T, [T, T2]>;\nexport function combineLatest<T, T2, T3>(v2: ObservableInput<T2>, v3: ObservableInput<T3>): OperatorFunction<T, [T, T2, T3]>;\nexport function combineLatest<T, T2, T3, T4>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>): OperatorFunction<T, [T, T2, T3, T4]>;\nexport function combineLatest<T, T2, T3, T4, T5>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>): OperatorFunction<T, [T, T2, T3, T4, T5]>;\nexport function combineLatest<T, T2, T3, T4, T5, T6>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>): OperatorFunction<T, [T, T2, T3, T4, T5, T6]> ;\nexport function combineLatest<T, R>(...observables: Array<ObservableInput<T> | ((...values: Array<T>) => R)>): OperatorFunction<T, R>;\nexport function combineLatest<T, R>(array: ObservableInput<T>[]): OperatorFunction<T, Array<T>>;\nexport function combineLatest<T, TOther, R>(array: ObservableInput<TOther>[], project: (v1: T, ...values: Array<TOther>) => R): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Combines multiple Observables to create an Observable whose values are\n * calculated from the latest values of each of its input Observables.\n *\n * <span class=\"informal\">Whenever any input Observable emits a value, it\n * computes a formula using the latest values from all the inputs, then emits\n * the output of that formula.</span>\n *\n * <img src=\"./img/combineLatest.png\" width=\"100%\">\n *\n * `combineLatest` combines the values from this Observable with values from\n * Observables passed as arguments. This is done by subscribing to each\n * Observable, in order, and collecting an array of each of the most recent\n * values any time any of the input Observables emits, then either taking that\n * array and passing it as arguments to an optional `project` function and\n * emitting the return value of that, or just emitting the array of recent\n * values directly if there is no `project` function.\n *\n * @example <caption>Dynamically calculate the Body-Mass Index from an Observable of weight and one for height</caption>\n * var weight = Rx.Observable.of(70, 72, 76, 79, 75);\n * var height = Rx.Observable.of(1.76, 1.77, 1.78);\n * var bmi = weight.combineLatest(height, (w, h) => w / (h * h));\n * bmi.subscribe(x => console.log('BMI is ' + x));\n *\n * // With output to console:\n * // BMI is 24.212293388429753\n * // BMI is 23.93948099205209\n * // BMI is 23.671253629592222\n *\n * @see {@link combineAll}\n * @see {@link merge}\n * @see {@link withLatestFrom}\n *\n * @param {ObservableInput} other An input Observable to combine with the source\n * Observable. More than one input Observables may be given as argument.\n * @param {function} [project] An optional function to project the values from\n * the combined latest values into a new value on the output Observable.\n * @return {Observable} An Observable of projected values from the most recent\n * values from each input Observable, or an array of the most recent values from\n * each input Observable.\n * @method combineLatest\n * @owner Observable\n */\nexport function combineLatest<T, R>(...observables: Array<ObservableInput<any> |\n                                                    Array<ObservableInput<any>> |\n                                                    ((...values: Array<any>) => R)>): OperatorFunction<T, R> {\n  let project: (...values: Array<any>) => R = null;\n  if (typeof observables[observables.length - 1] === 'function') {\n    project = <(...values: Array<any>) => R>observables.pop();\n  }\n\n  // if the first and only other argument besides the resultSelector is an array\n  // assume it's been called with `combineLatest([obs1, obs2, obs3], project)`\n  if (observables.length === 1 && isArray(observables[0])) {\n    observables = (<any>observables[0]).slice();\n  }\n\n  return (source: Observable<T>) => source.lift.call(new ArrayObservable([source, ...observables]), new CombineLatestOperator(project));\n}\n\nexport class CombineLatestOperator<T, R> implements Operator<T, R> {\n  constructor(private project?: (...values: Array<any>) => R) {\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new CombineLatestSubscriber(subscriber, this.project));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class CombineLatestSubscriber<T, R> extends OuterSubscriber<T, R> {\n  private active: number = 0;\n  private values: any[] = [];\n  private observables: any[] = [];\n  private toRespond: number;\n\n  constructor(destination: Subscriber<R>, private project?: (...values: Array<any>) => R) {\n    super(destination);\n  }\n\n  protected _next(observable: any) {\n    this.values.push(none);\n    this.observables.push(observable);\n  }\n\n  protected _complete() {\n    const observables = this.observables;\n    const len = observables.length;\n    if (len === 0) {\n      this.destination.complete();\n    } else {\n      this.active = len;\n      this.toRespond = len;\n      for (let i = 0; i < len; i++) {\n        const observable = observables[i];\n        this.add(subscribeToResult(this, observable, observable, i));\n      }\n    }\n  }\n\n  notifyComplete(unused: Subscriber<R>): void {\n    if ((this.active -= 1) === 0) {\n      this.destination.complete();\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    const values = this.values;\n    const oldVal = values[outerIndex];\n    const toRespond = !this.toRespond\n      ? 0\n      : oldVal === none ? --this.toRespond : this.toRespond;\n    values[outerIndex] = innerValue;\n\n    if (toRespond === 0) {\n      if (this.project) {\n        this._tryProject(values);\n      } else {\n        this.destination.next(values.slice());\n      }\n    }\n  }\n\n  private _tryProject(values: any[]) {\n    let result: any;\n    try {\n      result = this.project.apply(this, values);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    this.destination.next(result);\n  }\n}\n","import { root } from '../util/root';\nimport { IScheduler } from '../Scheduler';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { TeardownLogic } from '../Subscription';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport class PromiseObservable<T> extends Observable<T> {\n\n  public value: T;\n\n  /**\n   * Converts a Promise to an Observable.\n   *\n   * <span class=\"informal\">Returns an Observable that just emits the Promise's\n   * resolved value, then completes.</span>\n   *\n   * Converts an ES2015 Promise or a Promises/A+ spec compliant Promise to an\n   * Observable. If the Promise resolves with a value, the output Observable\n   * emits that resolved value as a `next`, and then completes. If the Promise\n   * is rejected, then the output Observable emits the corresponding Error.\n   *\n   * @example <caption>Convert the Promise returned by Fetch to an Observable</caption>\n   * var result = Rx.Observable.fromPromise(fetch('http://myserver.com/'));\n   * result.subscribe(x => console.log(x), e => console.error(e));\n   *\n   * @see {@link bindCallback}\n   * @see {@link from}\n   *\n   * @param {PromiseLike<T>} promise The promise to be converted.\n   * @param {Scheduler} [scheduler] An optional IScheduler to use for scheduling\n   * the delivery of the resolved value (or the rejection).\n   * @return {Observable<T>} An Observable which wraps the Promise.\n   * @static true\n   * @name fromPromise\n   * @owner Observable\n   */\n  static create<T>(promise: PromiseLike<T>, scheduler?: IScheduler): Observable<T> {\n    return new PromiseObservable(promise, scheduler);\n  }\n\n  constructor(private promise: PromiseLike<T>, private scheduler?: IScheduler) {\n    super();\n  }\n\n  /** @deprecated internal use only */ _subscribe(subscriber: Subscriber<T>): TeardownLogic {\n    const promise = this.promise;\n    const scheduler = this.scheduler;\n\n    if (scheduler == null) {\n      if (this._isScalar) {\n        if (!subscriber.closed) {\n          subscriber.next(this.value);\n          subscriber.complete();\n        }\n      } else {\n        promise.then(\n          (value) => {\n            this.value = value;\n            this._isScalar = true;\n            if (!subscriber.closed) {\n              subscriber.next(value);\n              subscriber.complete();\n            }\n          },\n          (err) => {\n            if (!subscriber.closed) {\n              subscriber.error(err);\n            }\n          }\n        )\n        .then(null, err => {\n          // escape the promise trap, throw unhandled errors\n          root.setTimeout(() => { throw err; });\n        });\n      }\n    } else {\n      if (this._isScalar) {\n        if (!subscriber.closed) {\n          return scheduler.schedule(dispatchNext, 0, { value: this.value, subscriber });\n        }\n      } else {\n        promise.then(\n          (value) => {\n            this.value = value;\n            this._isScalar = true;\n            if (!subscriber.closed) {\n              subscriber.add(scheduler.schedule(dispatchNext, 0, { value, subscriber }));\n            }\n          },\n          (err) => {\n            if (!subscriber.closed) {\n              subscriber.add(scheduler.schedule(dispatchError, 0, { err, subscriber }));\n            }\n          })\n          .then(null, (err) => {\n            // escape the promise trap, throw unhandled errors\n            root.setTimeout(() => { throw err; });\n          });\n      }\n    }\n  }\n}\n\ninterface DispatchNextArg<T> {\n  subscriber: Subscriber<T>;\n  value: T;\n}\nfunction dispatchNext<T>(arg: DispatchNextArg<T>) {\n  const { value, subscriber } = arg;\n  if (!subscriber.closed) {\n    subscriber.next(value);\n    subscriber.complete();\n  }\n}\n\ninterface DispatchErrorArg<T> {\n  subscriber: Subscriber<T>;\n  err: any;\n}\nfunction dispatchError<T>(arg: DispatchErrorArg<T>) {\n  const { err, subscriber } = arg;\n  if (!subscriber.closed) {\n    subscriber.error(err);\n  }\n}\n","import { root } from '../util/root';\nimport { IScheduler } from '../Scheduler';\nimport { Observable } from '../Observable';\nimport { iterator as Symbol_iterator } from '../symbol/iterator';\nimport { TeardownLogic } from '../Subscription';\nimport { Subscriber } from '../Subscriber';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport class IteratorObservable<T> extends Observable<T> {\n  private iterator: any;\n\n  static create<T>(iterator: any, scheduler?: IScheduler): IteratorObservable<T> {\n    return new IteratorObservable(iterator, scheduler);\n  }\n\n  static dispatch(state: any) {\n\n    const { index, hasError, iterator, subscriber } = state;\n\n    if (hasError) {\n      subscriber.error(state.error);\n      return;\n    }\n\n    let result = iterator.next();\n    if (result.done) {\n      subscriber.complete();\n      return;\n    }\n\n    subscriber.next(result.value);\n    state.index = index + 1;\n\n    if (subscriber.closed) {\n      if (typeof iterator.return === 'function') {\n        iterator.return();\n      }\n      return;\n    }\n\n    (<any> this).schedule(state);\n  }\n\n  constructor(iterator: any, private scheduler?: IScheduler) {\n    super();\n\n    if (iterator == null) {\n      throw new Error('iterator cannot be null.');\n    }\n\n    this.iterator = getIterator(iterator);\n  }\n\n  /** @deprecated internal use only */ _subscribe(subscriber: Subscriber<T>): TeardownLogic {\n\n    let index = 0;\n    const { iterator, scheduler } = this;\n\n    if (scheduler) {\n      return scheduler.schedule(IteratorObservable.dispatch, 0, {\n        index, iterator, subscriber\n      });\n    } else {\n      do {\n        let result = iterator.next();\n        if (result.done) {\n          subscriber.complete();\n          break;\n        } else {\n          subscriber.next(result.value);\n        }\n        if (subscriber.closed) {\n          if (typeof iterator.return === 'function') {\n            iterator.return();\n          }\n          break;\n        }\n      } while (true);\n    }\n  }\n}\n\nclass StringIterator {\n  constructor(private str: string,\n              private idx: number = 0,\n              private len: number = str.length) {\n  }\n  [Symbol_iterator]() { return (this); }\n  next() {\n    return this.idx < this.len ? {\n        done: false,\n        value: this.str.charAt(this.idx++)\n    } : {\n        done: true,\n        value: undefined\n    };\n  }\n}\n\nclass ArrayIterator {\n  constructor(private arr: Array<any>,\n              private idx: number = 0,\n              private len: number = toLength(arr)) {\n  }\n  [Symbol_iterator]() { return this; }\n  next() {\n    return this.idx < this.len ? {\n        done: false,\n        value: this.arr[this.idx++]\n    } : {\n        done: true,\n        value: undefined\n    };\n  }\n}\n\nfunction getIterator(obj: any) {\n  const i = obj[Symbol_iterator];\n  if (!i && typeof obj === 'string') {\n    return new StringIterator(obj);\n  }\n  if (!i && obj.length !== undefined) {\n    return new ArrayIterator(obj);\n  }\n  if (!i) {\n    throw new TypeError('object is not iterable');\n  }\n  return obj[Symbol_iterator]();\n}\n\nconst maxSafeInteger = Math.pow(2, 53) - 1;\n\nfunction toLength(o: any) {\n  let len = +o.length;\n  if (isNaN(len)) {\n      return 0;\n  }\n  if (len === 0 || !numberIsFinite(len)) {\n      return len;\n  }\n  len = sign(len) * Math.floor(Math.abs(len));\n  if (len <= 0) {\n      return 0;\n  }\n  if (len > maxSafeInteger) {\n      return maxSafeInteger;\n  }\n  return len;\n}\n\nfunction numberIsFinite(value: any) {\n  return typeof value === 'number' && root.isFinite(value);\n}\n\nfunction sign(value: any) {\n  let valueAsNumber = +value;\n  if (valueAsNumber === 0) {\n    return valueAsNumber;\n  }\n  if (isNaN(valueAsNumber)) {\n    return valueAsNumber;\n  }\n  return valueAsNumber < 0 ? -1 : 1;\n}\n","import { IScheduler } from '../Scheduler';\nimport { Observable } from '../Observable';\nimport { ScalarObservable } from './ScalarObservable';\nimport { EmptyObservable } from './EmptyObservable';\nimport { Subscriber } from '../Subscriber';\nimport { TeardownLogic } from '../Subscription';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport class ArrayLikeObservable<T> extends Observable<T> {\n\n  static create<T>(arrayLike: ArrayLike<T>, scheduler?: IScheduler): Observable<T> {\n    const length = arrayLike.length;\n    if (length === 0) {\n      return new EmptyObservable<T>();\n    } else if (length === 1) {\n      return new ScalarObservable<T>(<any>arrayLike[0], scheduler);\n    } else {\n      return new ArrayLikeObservable(arrayLike, scheduler);\n    }\n  }\n\n  static dispatch(state: any) {\n    const { arrayLike, index, length, subscriber } = state;\n\n    if (subscriber.closed) {\n      return;\n    }\n\n    if (index >= length) {\n      subscriber.complete();\n      return;\n    }\n\n    subscriber.next(arrayLike[index]);\n\n    state.index = index + 1;\n\n    (<any> this).schedule(state);\n  }\n\n  // value used if Array has one value and _isScalar\n  private value: any;\n\n  constructor(private arrayLike: ArrayLike<T>, private scheduler?: IScheduler) {\n    super();\n    if (!scheduler && arrayLike.length === 1) {\n      this._isScalar = true;\n      this.value = arrayLike[0];\n    }\n  }\n\n  /** @deprecated internal use only */ _subscribe(subscriber: Subscriber<T>): TeardownLogic {\n    let index = 0;\n    const { arrayLike, scheduler } = this;\n    const length = arrayLike.length;\n\n    if (scheduler) {\n      return scheduler.schedule(ArrayLikeObservable.dispatch, 0, {\n        arrayLike, index, length, subscriber\n      });\n    } else {\n      for (let i = 0; i < length && !subscriber.closed; i++) {\n        subscriber.next(arrayLike[i]);\n      }\n      subscriber.complete();\n    }\n  }\n}\n","import { PartialObserver } from './Observer';\nimport { Observable } from './Observable';\n\n/**\n * Represents a push-based event or value that an {@link Observable} can emit.\n * This class is particularly useful for operators that manage notifications,\n * like {@link materialize}, {@link dematerialize}, {@link observeOn}, and\n * others. Besides wrapping the actual delivered value, it also annotates it\n * with metadata of, for instance, what type of push message it is (`next`,\n * `error`, or `complete`).\n *\n * @see {@link materialize}\n * @see {@link dematerialize}\n * @see {@link observeOn}\n *\n * @class Notification<T>\n */\nexport class Notification<T> {\n  hasValue: boolean;\n\n  constructor(public kind: string, public value?: T, public error?: any) {\n    this.hasValue = kind === 'N';\n  }\n\n  /**\n   * Delivers to the given `observer` the value wrapped by this Notification.\n   * @param {Observer} observer\n   * @return\n   */\n  observe(observer: PartialObserver<T>): any {\n    switch (this.kind) {\n      case 'N':\n        return observer.next && observer.next(this.value);\n      case 'E':\n        return observer.error && observer.error(this.error);\n      case 'C':\n        return observer.complete && observer.complete();\n    }\n  }\n\n  /**\n   * Given some {@link Observer} callbacks, deliver the value represented by the\n   * current Notification to the correctly corresponding callback.\n   * @param {function(value: T): void} next An Observer `next` callback.\n   * @param {function(err: any): void} [error] An Observer `error` callback.\n   * @param {function(): void} [complete] An Observer `complete` callback.\n   * @return {any}\n   */\n  do(next: (value: T) => void, error?: (err: any) => void, complete?: () => void): any {\n    const kind = this.kind;\n    switch (kind) {\n      case 'N':\n        return next && next(this.value);\n      case 'E':\n        return error && error(this.error);\n      case 'C':\n        return complete && complete();\n    }\n  }\n\n  /**\n   * Takes an Observer or its individual callback functions, and calls `observe`\n   * or `do` methods accordingly.\n   * @param {Observer|function(value: T): void} nextOrObserver An Observer or\n   * the `next` callback.\n   * @param {function(err: any): void} [error] An Observer `error` callback.\n   * @param {function(): void} [complete] An Observer `complete` callback.\n   * @return {any}\n   */\n  accept(nextOrObserver: PartialObserver<T> | ((value: T) => void), error?: (err: any) => void, complete?: () => void) {\n    if (nextOrObserver && typeof (<PartialObserver<T>>nextOrObserver).next === 'function') {\n      return this.observe(<PartialObserver<T>>nextOrObserver);\n    } else {\n      return this.do(<(value: T) => void>nextOrObserver, error, complete);\n    }\n  }\n\n  /**\n   * Returns a simple Observable that just delivers the notification represented\n   * by this Notification instance.\n   * @return {any}\n   */\n  toObservable(): Observable<T> {\n    const kind = this.kind;\n    switch (kind) {\n      case 'N':\n        return Observable.of(this.value);\n      case 'E':\n        return Observable.throw(this.error);\n      case 'C':\n        return Observable.empty<T>();\n    }\n    throw new Error('unexpected notification kind value');\n  }\n\n  private static completeNotification: Notification<any> = new Notification('C');\n  private static undefinedValueNotification: Notification<any> = new Notification('N', undefined);\n\n  /**\n   * A shortcut to create a Notification instance of the type `next` from a\n   * given value.\n   * @param {T} value The `next` value.\n   * @return {Notification<T>} The \"next\" Notification representing the\n   * argument.\n   */\n  static createNext<T>(value: T): Notification<T> {\n    if (typeof value !== 'undefined') {\n      return new Notification('N', value);\n    }\n    return Notification.undefinedValueNotification;\n  }\n\n  /**\n   * A shortcut to create a Notification instance of the type `error` from a\n   * given error.\n   * @param {any} [err] The `error` error.\n   * @return {Notification<T>} The \"error\" Notification representing the\n   * argument.\n   */\n  static createError<T>(err?: any): Notification<T> {\n    return new Notification('E', undefined, err);\n  }\n\n  /**\n   * A shortcut to create a Notification instance of the type `complete`.\n   * @return {Notification<any>} The valueless \"complete\" Notification.\n   */\n  static createComplete(): Notification<any> {\n    return Notification.completeNotification;\n  }\n}\n","import { Observable } from '../Observable';\nimport { IScheduler } from '../Scheduler';\nimport { Operator } from '../Operator';\nimport { PartialObserver } from '../Observer';\nimport { Subscriber } from '../Subscriber';\nimport { Notification } from '../Notification';\nimport { TeardownLogic } from '../Subscription';\nimport { Action } from '../scheduler/Action';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n *\n * Re-emits all notifications from source Observable with specified scheduler.\n *\n * <span class=\"informal\">Ensure a specific scheduler is used, from outside of an Observable.</span>\n *\n * `observeOn` is an operator that accepts a scheduler as a first parameter, which will be used to reschedule\n * notifications emitted by the source Observable. It might be useful, if you do not have control over\n * internal scheduler of a given Observable, but want to control when its values are emitted nevertheless.\n *\n * Returned Observable emits the same notifications (nexted values, complete and error events) as the source Observable,\n * but rescheduled with provided scheduler. Note that this doesn't mean that source Observables internal\n * scheduler will be replaced in any way. Original scheduler still will be used, but when the source Observable emits\n * notification, it will be immediately scheduled again - this time with scheduler passed to `observeOn`.\n * An anti-pattern would be calling `observeOn` on Observable that emits lots of values synchronously, to split\n * that emissions into asynchronous chunks. For this to happen, scheduler would have to be passed into the source\n * Observable directly (usually into the operator that creates it). `observeOn` simply delays notifications a\n * little bit more, to ensure that they are emitted at expected moments.\n *\n * As a matter of fact, `observeOn` accepts second parameter, which specifies in milliseconds with what delay notifications\n * will be emitted. The main difference between {@link delay} operator and `observeOn` is that `observeOn`\n * will delay all notifications - including error notifications - while `delay` will pass through error\n * from source Observable immediately when it is emitted. In general it is highly recommended to use `delay` operator\n * for any kind of delaying of values in the stream, while using `observeOn` to specify which scheduler should be used\n * for notification emissions in general.\n *\n * @example <caption>Ensure values in subscribe are called just before browser repaint.</caption>\n * const intervals = Rx.Observable.interval(10); // Intervals are scheduled\n *                                               // with async scheduler by default...\n *\n * intervals\n * .observeOn(Rx.Scheduler.animationFrame)       // ...but we will observe on animationFrame\n * .subscribe(val => {                           // scheduler to ensure smooth animation.\n *   someDiv.style.height = val + 'px';\n * });\n *\n * @see {@link delay}\n *\n * @param {IScheduler} scheduler Scheduler that will be used to reschedule notifications from source Observable.\n * @param {number} [delay] Number of milliseconds that states with what delay every notification should be rescheduled.\n * @return {Observable<T>} Observable that emits the same notifications as the source Observable,\n * but with provided scheduler.\n *\n * @method observeOn\n * @owner Observable\n */\nexport function observeOn<T>(scheduler: IScheduler, delay: number = 0): MonoTypeOperatorFunction<T> {\n  return function observeOnOperatorFunction(source: Observable<T>): Observable<T> {\n    return source.lift(new ObserveOnOperator(scheduler, delay));\n  };\n}\n\nexport class ObserveOnOperator<T> implements Operator<T, T> {\n  constructor(private scheduler: IScheduler, private delay: number = 0) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new ObserveOnSubscriber(subscriber, this.scheduler, this.delay));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class ObserveOnSubscriber<T> extends Subscriber<T> {\n  static dispatch(this: Action<ObserveOnMessage>, arg: ObserveOnMessage) {\n    const { notification, destination } = arg;\n    notification.observe(destination);\n    this.unsubscribe();\n  }\n\n  constructor(destination: Subscriber<T>,\n              private scheduler: IScheduler,\n              private delay: number = 0) {\n    super(destination);\n  }\n\n  private scheduleMessage(notification: Notification<any>): void {\n    this.add(this.scheduler.schedule(\n      ObserveOnSubscriber.dispatch,\n      this.delay,\n      new ObserveOnMessage(notification, this.destination)\n    ));\n  }\n\n  protected _next(value: T): void {\n    this.scheduleMessage(Notification.createNext(value));\n  }\n\n  protected _error(err: any): void {\n    this.scheduleMessage(Notification.createError(err));\n  }\n\n  protected _complete(): void {\n    this.scheduleMessage(Notification.createComplete());\n  }\n}\n\nexport class ObserveOnMessage {\n  constructor(public notification: Notification<any>,\n              public destination: PartialObserver<any>) {\n  }\n}\n","import { isArray } from '../util/isArray';\nimport { isArrayLike } from '../util/isArrayLike';\nimport { isPromise } from '../util/isPromise';\nimport { PromiseObservable } from './PromiseObservable';\nimport { IteratorObservable } from'./IteratorObservable';\nimport { ArrayObservable } from './ArrayObservable';\nimport { ArrayLikeObservable } from './ArrayLikeObservable';\n\nimport { IScheduler } from '../Scheduler';\nimport { iterator as Symbol_iterator } from '../symbol/iterator';\nimport { Observable, ObservableInput } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { ObserveOnSubscriber } from '../operators/observeOn';\nimport { observable as Symbol_observable } from '../symbol/observable';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport class FromObservable<T> extends Observable<T> {\n  constructor(private ish: ObservableInput<T>, private scheduler?: IScheduler) {\n    super(null);\n  }\n\n  static create<T>(ish: ObservableInput<T>, scheduler?: IScheduler): Observable<T>;\n  static create<T, R>(ish: ArrayLike<T>, scheduler?: IScheduler): Observable<R>;\n\n  /**\n   * Creates an Observable from an Array, an array-like object, a Promise, an\n   * iterable object, or an Observable-like object.\n   *\n   * <span class=\"informal\">Converts almost anything to an Observable.</span>\n   *\n   * <img src=\"./img/from.png\" width=\"100%\">\n   *\n   * Convert various other objects and data types into Observables. `from`\n   * converts a Promise or an array-like or an\n   * [iterable](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols#iterable)\n   * object into an Observable that emits the items in that promise or array or\n   * iterable. A String, in this context, is treated as an array of characters.\n   * Observable-like objects (contains a function named with the ES2015 Symbol\n   * for Observable) can also be converted through this operator.\n   *\n   * @example <caption>Converts an array to an Observable</caption>\n   * var array = [10, 20, 30];\n   * var result = Rx.Observable.from(array);\n   * result.subscribe(x => console.log(x));\n   *\n   * // Results in the following:\n   * // 10 20 30\n   *\n   * @example <caption>Convert an infinite iterable (from a generator) to an Observable</caption>\n   * function* generateDoubles(seed) {\n   *   var i = seed;\n   *   while (true) {\n   *     yield i;\n   *     i = 2 * i; // double it\n   *   }\n   * }\n   *\n   * var iterator = generateDoubles(3);\n   * var result = Rx.Observable.from(iterator).take(10);\n   * result.subscribe(x => console.log(x));\n   *\n   * // Results in the following:\n   * // 3 6 12 24 48 96 192 384 768 1536\n   *\n   * @see {@link create}\n   * @see {@link fromEvent}\n   * @see {@link fromEventPattern}\n   * @see {@link fromPromise}\n   *\n   * @param {ObservableInput<T>} ish A subscribable object, a Promise, an\n   * Observable-like, an Array, an iterable or an array-like object to be\n   * converted.\n   * @param {Scheduler} [scheduler] The scheduler on which to schedule the\n   * emissions of values.\n   * @return {Observable<T>} The Observable whose values are originally from the\n   * input object that was converted.\n   * @static true\n   * @name from\n   * @owner Observable\n   */\n  static create<T>(ish: ObservableInput<T>, scheduler?: IScheduler): Observable<T> {\n    if (ish != null) {\n      if (typeof ish[Symbol_observable] === 'function') {\n        if (ish instanceof Observable && !scheduler) {\n          return ish;\n        }\n        return new FromObservable<T>(ish, scheduler);\n      } else if (isArray(ish)) {\n        return new ArrayObservable<T>(ish, scheduler);\n      } else if (isPromise<T>(ish)) {\n        return new PromiseObservable<T>(ish, scheduler);\n      } else if (typeof ish[Symbol_iterator] === 'function' || typeof ish === 'string') {\n        return new IteratorObservable<T>(ish, scheduler);\n      } else if (isArrayLike(ish)) {\n        return new ArrayLikeObservable(ish, scheduler);\n      }\n    }\n\n    throw new TypeError((ish !== null && typeof ish || ish) + ' is not observable');\n  }\n\n  /** @deprecated internal use only */ _subscribe(subscriber: Subscriber<T>) {\n    const ish = this.ish;\n    const scheduler = this.scheduler;\n    if (scheduler == null) {\n      return ish[Symbol_observable]().subscribe(subscriber);\n    } else {\n      return ish[Symbol_observable]().subscribe(new ObserveOnSubscriber(subscriber, scheduler, 0));\n    }\n  }\n}\n","import { Observable, ObservableInput } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { OperatorFunction } from '../interfaces';\n\n/* tslint:disable:max-line-length */\nexport function mergeMap<T, R>(project: (value: T, index: number) => ObservableInput<R>, concurrent?: number): OperatorFunction<T, R>;\nexport function mergeMap<T, I, R>(project: (value: T, index: number) => ObservableInput<I>, resultSelector: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R, concurrent?: number): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link mergeAll}.</span>\n *\n * <img src=\"./img/mergeMap.png\" width=\"100%\">\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an Observable, and then merging those resulting Observables and\n * emitting the results of this merger.\n *\n * @example <caption>Map and flatten each letter to an Observable ticking every 1 second</caption>\n * var letters = Rx.Observable.of('a', 'b', 'c');\n * var result = letters.mergeMap(x =>\n *   Rx.Observable.interval(1000).map(i => x+i)\n * );\n * result.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // a0\n * // b0\n * // c0\n * // a1\n * // b1\n * // c1\n * // continues to list a,b,c with respective ascending integers\n *\n * @see {@link concatMap}\n * @see {@link exhaustMap}\n * @see {@link merge}\n * @see {@link mergeAll}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n * @see {@link switchMap}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\n * A function to produce the value on the output Observable based on the values\n * and the indices of the source (outer) emission and the inner Observable\n * emission. The arguments passed to this function are:\n * - `outerValue`: the value that came from the source\n * - `innerValue`: the value that came from the projected Observable\n * - `outerIndex`: the \"index\" of the value that came from the source\n * - `innerIndex`: the \"index\" of the value from the projected Observable\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @return {Observable} An Observable that emits the result of applying the\n * projection function (and the optional `resultSelector`) to each item emitted\n * by the source Observable and merging the results of the Observables obtained\n * from this transformation.\n * @method mergeMap\n * @owner Observable\n */\nexport function mergeMap<T, I, R>(project: (value: T, index: number) => ObservableInput<I>,\n                                  resultSelector?: ((outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R) | number,\n                                  concurrent: number = Number.POSITIVE_INFINITY): OperatorFunction<T, I|R> {\n  return function mergeMapOperatorFunction(source: Observable<T>) {\n    if (typeof resultSelector === 'number') {\n      concurrent = <number>resultSelector;\n      resultSelector = null;\n    }\n    return source.lift(new MergeMapOperator(project, <any>resultSelector, concurrent));\n  };\n}\n\nexport class MergeMapOperator<T, I, R> implements Operator<T, I> {\n  constructor(private project: (value: T, index: number) => ObservableInput<I>,\n              private resultSelector?: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R,\n              private concurrent: number = Number.POSITIVE_INFINITY) {\n  }\n\n  call(observer: Subscriber<I>, source: any): any {\n    return source.subscribe(new MergeMapSubscriber(\n      observer, this.project, this.resultSelector, this.concurrent\n    ));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class MergeMapSubscriber<T, I, R> extends OuterSubscriber<T, I> {\n  private hasCompleted: boolean = false;\n  private buffer: T[] = [];\n  private active: number = 0;\n  protected index: number = 0;\n\n  constructor(destination: Subscriber<I>,\n              private project: (value: T, index: number) => ObservableInput<I>,\n              private resultSelector?: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R,\n              private concurrent: number = Number.POSITIVE_INFINITY) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    if (this.active < this.concurrent) {\n      this._tryNext(value);\n    } else {\n      this.buffer.push(value);\n    }\n  }\n\n  protected _tryNext(value: T) {\n    let result: ObservableInput<I>;\n    const index = this.index++;\n    try {\n      result = this.project(value, index);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    this.active++;\n    this._innerSub(result, value, index);\n  }\n\n  private _innerSub(ish: ObservableInput<I>, value: T, index: number): void {\n    this.add(subscribeToResult<T, I>(this, ish, value, index));\n  }\n\n  protected _complete(): void {\n    this.hasCompleted = true;\n    if (this.active === 0 && this.buffer.length === 0) {\n      this.destination.complete();\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: I,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, I>): void {\n    if (this.resultSelector) {\n      this._notifyResultSelector(outerValue, innerValue, outerIndex, innerIndex);\n    } else {\n      this.destination.next(innerValue);\n    }\n  }\n\n  private _notifyResultSelector(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) {\n    let result: R;\n    try {\n      result = this.resultSelector(outerValue, innerValue, outerIndex, innerIndex);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    this.destination.next(result);\n  }\n\n  notifyComplete(innerSub: Subscription): void {\n    const buffer = this.buffer;\n    this.remove(innerSub);\n    this.active--;\n    if (buffer.length > 0) {\n      this._next(buffer.shift());\n    } else if (this.active === 0 && this.hasCompleted) {\n      this.destination.complete();\n    }\n  }\n}\n","import { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Observer } from '../Observer';\nimport { Subscriber } from '../Subscriber';\nimport { OperatorFunction } from '../interfaces';\n\n/**\n * Counts the number of emissions on the source and emits that number when the\n * source completes.\n *\n * <span class=\"informal\">Tells how many values were emitted, when the source\n * completes.</span>\n *\n * <img src=\"./img/count.png\" width=\"100%\">\n *\n * `count` transforms an Observable that emits values into an Observable that\n * emits a single value that represents the number of values emitted by the\n * source Observable. If the source Observable terminates with an error, `count`\n * will pass this error notification along without emitting a value first. If\n * the source Observable does not terminate at all, `count` will neither emit\n * a value nor terminate. This operator takes an optional `predicate` function\n * as argument, in which case the output emission will represent the number of\n * source values that matched `true` with the `predicate`.\n *\n * @example <caption>Counts how many seconds have passed before the first click happened</caption>\n * var seconds = Rx.Observable.interval(1000);\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var secondsBeforeClick = seconds.takeUntil(clicks);\n * var result = secondsBeforeClick.count();\n * result.subscribe(x => console.log(x));\n *\n * @example <caption>Counts how many odd numbers are there between 1 and 7</caption>\n * var numbers = Rx.Observable.range(1, 7);\n * var result = numbers.count(i => i % 2 === 1);\n * result.subscribe(x => console.log(x));\n *\n * // Results in:\n * // 4\n *\n * @see {@link max}\n * @see {@link min}\n * @see {@link reduce}\n *\n * @param {function(value: T, i: number, source: Observable<T>): boolean} [predicate] A\n * boolean function to select what values are to be counted. It is provided with\n * arguments of:\n * - `value`: the value from the source Observable.\n * - `index`: the (zero-based) \"index\" of the value from the source Observable.\n * - `source`: the source Observable instance itself.\n * @return {Observable} An Observable of one number that represents the count as\n * described above.\n * @method count\n * @owner Observable\n */\nexport function count<T>(predicate?: (value: T, index: number, source: Observable<T>) => boolean): OperatorFunction<T, number> {\n  return (source: Observable<T>) => source.lift(new CountOperator(predicate, source));\n}\n\nclass CountOperator<T> implements Operator<T, number> {\n  constructor(private predicate?: (value: T, index: number, source: Observable<T>) => boolean,\n              private source?: Observable<T>) {\n  }\n\n  call(subscriber: Subscriber<number>, source: any): any {\n    return source.subscribe(new CountSubscriber(subscriber, this.predicate, this.source));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass CountSubscriber<T> extends Subscriber<T> {\n  private count: number = 0;\n  private index: number = 0;\n\n  constructor(destination: Observer<number>,\n              private predicate?: (value: T, index: number, source: Observable<T>) => boolean,\n              private source?: Observable<T>) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    if (this.predicate) {\n      this._tryPredicate(value);\n    } else {\n      this.count++;\n    }\n  }\n\n  private _tryPredicate(value: T) {\n    let result: any;\n\n    try {\n      result = this.predicate(value, this.index++, this.source);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n\n    if (result) {\n      this.count++;\n    }\n  }\n\n  protected _complete(): void {\n    this.destination.next(this.count);\n    this.destination.complete();\n  }\n}\n","import { Operator } from '../Operator';\nimport { Observable, SubscribableOrPromise } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription, TeardownLogic } from '../Subscription';\n\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Emits a value from the source Observable only after a particular time span\n * determined by another Observable has passed without another source emission.\n *\n * <span class=\"informal\">It's like {@link debounceTime}, but the time span of\n * emission silence is determined by a second Observable.</span>\n *\n * <img src=\"./img/debounce.png\" width=\"100%\">\n *\n * `debounce` delays values emitted by the source Observable, but drops previous\n * pending delayed emissions if a new value arrives on the source Observable.\n * This operator keeps track of the most recent value from the source\n * Observable, and spawns a duration Observable by calling the\n * `durationSelector` function. The value is emitted only when the duration\n * Observable emits a value or completes, and if no other value was emitted on\n * the source Observable since the duration Observable was spawned. If a new\n * value appears before the duration Observable emits, the previous value will\n * be dropped and will not be emitted on the output Observable.\n *\n * Like {@link debounceTime}, this is a rate-limiting operator, and also a\n * delay-like operator since output emissions do not necessarily occur at the\n * same time as they did on the source Observable.\n *\n * @example <caption>Emit the most recent click after a burst of clicks</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.debounce(() => Rx.Observable.interval(1000));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link audit}\n * @see {@link debounceTime}\n * @see {@link delayWhen}\n * @see {@link throttle}\n *\n * @param {function(value: T): SubscribableOrPromise} durationSelector A function\n * that receives a value from the source Observable, for computing the timeout\n * duration for each source value, returned as an Observable or a Promise.\n * @return {Observable} An Observable that delays the emissions of the source\n * Observable by the specified duration Observable returned by\n * `durationSelector`, and may drop some values if they occur too frequently.\n * @method debounce\n * @owner Observable\n */\nexport function debounce<T>(durationSelector: (value: T) => SubscribableOrPromise<number>): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new DebounceOperator(durationSelector));\n}\n\nclass DebounceOperator<T> implements Operator<T, T> {\n  constructor(private durationSelector: (value: T) => SubscribableOrPromise<number>) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new DebounceSubscriber(subscriber, this.durationSelector));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass DebounceSubscriber<T, R> extends OuterSubscriber<T, R> {\n  private value: T;\n  private hasValue: boolean = false;\n  private durationSubscription: Subscription = null;\n\n  constructor(destination: Subscriber<R>,\n              private durationSelector: (value: T) => SubscribableOrPromise<number>) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    try {\n      const result = this.durationSelector.call(this, value);\n\n      if (result) {\n        this._tryNext(value, result);\n      }\n    } catch (err) {\n      this.destination.error(err);\n    }\n  }\n\n  protected _complete(): void {\n    this.emitValue();\n    this.destination.complete();\n  }\n\n  private _tryNext(value: T, duration: SubscribableOrPromise<number>): void {\n    let subscription = this.durationSubscription;\n    this.value = value;\n    this.hasValue = true;\n    if (subscription) {\n      subscription.unsubscribe();\n      this.remove(subscription);\n    }\n\n    subscription = subscribeToResult(this, duration);\n    if (!subscription.closed) {\n      this.add(this.durationSubscription = subscription);\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this.emitValue();\n  }\n\n  notifyComplete(): void {\n    this.emitValue();\n  }\n\n  emitValue(): void {\n    if (this.hasValue) {\n      const value = this.value;\n      const subscription = this.durationSubscription;\n      if (subscription) {\n        this.durationSubscription = null;\n        subscription.unsubscribe();\n        this.remove(subscription);\n      }\n      this.value = null;\n      this.hasValue = false;\n      super._next(value);\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { OperatorFunction, MonoTypeOperatorFunction } from '../interfaces';\n\n/* tslint:disable:max-line-length */\nexport function defaultIfEmpty<T>(defaultValue?: T): MonoTypeOperatorFunction<T>;\nexport function defaultIfEmpty<T, R>(defaultValue?: R): OperatorFunction<T, T | R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Emits a given value if the source Observable completes without emitting any\n * `next` value, otherwise mirrors the source Observable.\n *\n * <span class=\"informal\">If the source Observable turns out to be empty, then\n * this operator will emit a default value.</span>\n *\n * <img src=\"./img/defaultIfEmpty.png\" width=\"100%\">\n *\n * `defaultIfEmpty` emits the values emitted by the source Observable or a\n * specified default value if the source Observable is empty (completes without\n * having emitted any `next` value).\n *\n * @example <caption>If no clicks happen in 5 seconds, then emit \"no clicks\"</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var clicksBeforeFive = clicks.takeUntil(Rx.Observable.interval(5000));\n * var result = clicksBeforeFive.defaultIfEmpty('no clicks');\n * result.subscribe(x => console.log(x));\n *\n * @see {@link empty}\n * @see {@link last}\n *\n * @param {any} [defaultValue=null] The default value used if the source\n * Observable is empty.\n * @return {Observable} An Observable that emits either the specified\n * `defaultValue` if the source Observable emits no items, or the values emitted\n * by the source Observable.\n * @method defaultIfEmpty\n * @owner Observable\n */\nexport function defaultIfEmpty<T, R>(defaultValue: R = null): OperatorFunction<T, T | R> {\n  return (source: Observable<T>) => source.lift(new DefaultIfEmptyOperator(defaultValue)) as Observable<T | R>;\n}\n\nclass DefaultIfEmptyOperator<T, R> implements Operator<T, T | R> {\n\n  constructor(private defaultValue: R) {\n  }\n\n  call(subscriber: Subscriber<T | R>, source: any): any {\n    return source.subscribe(new DefaultIfEmptySubscriber(subscriber, this.defaultValue));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass DefaultIfEmptySubscriber<T, R> extends Subscriber<T> {\n  private isEmpty: boolean = true;\n\n  constructor(destination: Subscriber<T | R>, private defaultValue: R) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    this.isEmpty = false;\n    this.destination.next(value);\n  }\n\n  protected _complete(): void {\n    if (this.isEmpty) {\n      this.destination.next(this.defaultValue);\n    }\n    this.destination.complete();\n  }\n}","import { async } from '../scheduler/async';\nimport { isDate } from '../util/isDate';\nimport { Operator } from '../Operator';\nimport { IScheduler } from '../Scheduler';\nimport { Subscriber } from '../Subscriber';\nimport { Action } from '../scheduler/Action';\nimport { Notification } from '../Notification';\nimport { Observable } from '../Observable';\nimport { PartialObserver } from '../Observer';\nimport { TeardownLogic } from '../Subscription';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Delays the emission of items from the source Observable by a given timeout or\n * until a given Date.\n *\n * <span class=\"informal\">Time shifts each item by some specified amount of\n * milliseconds.</span>\n *\n * <img src=\"./img/delay.png\" width=\"100%\">\n *\n * If the delay argument is a Number, this operator time shifts the source\n * Observable by that amount of time expressed in milliseconds. The relative\n * time intervals between the values are preserved.\n *\n * If the delay argument is a Date, this operator time shifts the start of the\n * Observable execution until the given date occurs.\n *\n * @example <caption>Delay each click by one second</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var delayedClicks = clicks.delay(1000); // each click emitted after 1 second\n * delayedClicks.subscribe(x => console.log(x));\n *\n * @example <caption>Delay all clicks until a future date happens</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var date = new Date('March 15, 2050 12:00:00'); // in the future\n * var delayedClicks = clicks.delay(date); // click emitted only after that date\n * delayedClicks.subscribe(x => console.log(x));\n *\n * @see {@link debounceTime}\n * @see {@link delayWhen}\n *\n * @param {number|Date} delay The delay duration in milliseconds (a `number`) or\n * a `Date` until which the emission of the source items is delayed.\n * @param {Scheduler} [scheduler=async] The IScheduler to use for\n * managing the timers that handle the time-shift for each item.\n * @return {Observable} An Observable that delays the emissions of the source\n * Observable by the specified timeout or Date.\n * @method delay\n * @owner Observable\n */\nexport function delay<T>(delay: number|Date,\n                         scheduler: IScheduler = async): MonoTypeOperatorFunction<T> {\n  const absoluteDelay = isDate(delay);\n  const delayFor = absoluteDelay ? (+delay - scheduler.now()) : Math.abs(<number>delay);\n  return (source: Observable<T>) => source.lift(new DelayOperator(delayFor, scheduler));\n}\n\nclass DelayOperator<T> implements Operator<T, T> {\n  constructor(private delay: number,\n              private scheduler: IScheduler) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new DelaySubscriber(subscriber, this.delay, this.scheduler));\n  }\n}\n\ninterface DelayState<T> {\n  source: DelaySubscriber<T>;\n  destination: PartialObserver<T>;\n  scheduler: IScheduler;\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass DelaySubscriber<T> extends Subscriber<T> {\n  private queue: Array<DelayMessage<T>> = [];\n  private active: boolean = false;\n  private errored: boolean = false;\n\n  private static dispatch<T>(this: Action<DelayState<T>>, state: DelayState<T>): void {\n    const source = state.source;\n    const queue = source.queue;\n    const scheduler = state.scheduler;\n    const destination = state.destination;\n\n    while (queue.length > 0 && (queue[0].time - scheduler.now()) <= 0) {\n      queue.shift().notification.observe(destination);\n    }\n\n    if (queue.length > 0) {\n      const delay = Math.max(0, queue[0].time - scheduler.now());\n      this.schedule(state, delay);\n    } else {\n      this.unsubscribe();\n      source.active = false;\n    }\n  }\n\n  constructor(destination: Subscriber<T>,\n              private delay: number,\n              private scheduler: IScheduler) {\n    super(destination);\n  }\n\n  private _schedule(scheduler: IScheduler): void {\n    this.active = true;\n    this.add(scheduler.schedule<DelayState<T>>(DelaySubscriber.dispatch, this.delay, {\n      source: this, destination: this.destination, scheduler: scheduler\n    }));\n  }\n\n  private scheduleNotification(notification: Notification<T>): void {\n    if (this.errored === true) {\n      return;\n    }\n\n    const scheduler = this.scheduler;\n    const message = new DelayMessage(scheduler.now() + this.delay, notification);\n    this.queue.push(message);\n\n    if (this.active === false) {\n      this._schedule(scheduler);\n    }\n  }\n\n  protected _next(value: T) {\n    this.scheduleNotification(Notification.createNext(value));\n  }\n\n  protected _error(err: any) {\n    this.errored = true;\n    this.queue = [];\n    this.destination.error(err);\n  }\n\n  protected _complete() {\n    this.scheduleNotification(Notification.createComplete());\n  }\n}\n\nclass DelayMessage<T> {\n  constructor(public readonly time: number,\n              public readonly notification: Notification<T>) {\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { Subscription, TeardownLogic } from '../Subscription';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Delays the emission of items from the source Observable by a given time span\n * determined by the emissions of another Observable.\n *\n * <span class=\"informal\">It's like {@link delay}, but the time span of the\n * delay duration is determined by a second Observable.</span>\n *\n * <img src=\"./img/delayWhen.png\" width=\"100%\">\n *\n * `delayWhen` time shifts each emitted value from the source Observable by a\n * time span determined by another Observable. When the source emits a value,\n * the `delayDurationSelector` function is called with the source value as\n * argument, and should return an Observable, called the \"duration\" Observable.\n * The source value is emitted on the output Observable only when the duration\n * Observable emits a value or completes.\n *\n * Optionally, `delayWhen` takes a second argument, `subscriptionDelay`, which\n * is an Observable. When `subscriptionDelay` emits its first value or\n * completes, the source Observable is subscribed to and starts behaving like\n * described in the previous paragraph. If `subscriptionDelay` is not provided,\n * `delayWhen` will subscribe to the source Observable as soon as the output\n * Observable is subscribed.\n *\n * @example <caption>Delay each click by a random amount of time, between 0 and 5 seconds</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var delayedClicks = clicks.delayWhen(event =>\n *   Rx.Observable.interval(Math.random() * 5000)\n * );\n * delayedClicks.subscribe(x => console.log(x));\n *\n * @see {@link debounce}\n * @see {@link delay}\n *\n * @param {function(value: T): Observable} delayDurationSelector A function that\n * returns an Observable for each value emitted by the source Observable, which\n * is then used to delay the emission of that item on the output Observable\n * until the Observable returned from this function emits a value.\n * @param {Observable} subscriptionDelay An Observable that triggers the\n * subscription to the source Observable once it emits any value.\n * @return {Observable} An Observable that delays the emissions of the source\n * Observable by an amount of time specified by the Observable returned by\n * `delayDurationSelector`.\n * @method delayWhen\n * @owner Observable\n */\nexport function delayWhen<T>(delayDurationSelector: (value: T) => Observable<any>,\n                             subscriptionDelay?: Observable<any>): MonoTypeOperatorFunction<T> {\n  if (subscriptionDelay) {\n    return (source: Observable<T>) =>\n      new SubscriptionDelayObservable(source, subscriptionDelay)\n        .lift(new DelayWhenOperator(delayDurationSelector));\n  }\n  return (source: Observable<T>) => source.lift(new DelayWhenOperator(delayDurationSelector));\n}\n\nclass DelayWhenOperator<T> implements Operator<T, T> {\n  constructor(private delayDurationSelector: (value: T) => Observable<any>) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new DelayWhenSubscriber(subscriber, this.delayDurationSelector));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass DelayWhenSubscriber<T, R> extends OuterSubscriber<T, R> {\n  private completed: boolean = false;\n  private delayNotifierSubscriptions: Array<Subscription> = [];\n  private values: Array<T> = [];\n\n  constructor(destination: Subscriber<T>,\n              private delayDurationSelector: (value: T) => Observable<any>) {\n    super(destination);\n  }\n\n  notifyNext(outerValue: T, innerValue: any,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this.destination.next(outerValue);\n    this.removeSubscription(innerSub);\n    this.tryComplete();\n  }\n\n  notifyError(error: any, innerSub: InnerSubscriber<T, R>): void {\n    this._error(error);\n  }\n\n  notifyComplete(innerSub: InnerSubscriber<T, R>): void {\n    const value = this.removeSubscription(innerSub);\n    if (value) {\n      this.destination.next(value);\n    }\n    this.tryComplete();\n  }\n\n  protected _next(value: T): void {\n    try {\n      const delayNotifier = this.delayDurationSelector(value);\n      if (delayNotifier) {\n        this.tryDelay(delayNotifier, value);\n      }\n    } catch (err) {\n      this.destination.error(err);\n    }\n  }\n\n  protected _complete(): void {\n    this.completed = true;\n    this.tryComplete();\n  }\n\n  private removeSubscription(subscription: InnerSubscriber<T, R>): T {\n    subscription.unsubscribe();\n\n    const subscriptionIdx = this.delayNotifierSubscriptions.indexOf(subscription);\n    let value: T = null;\n\n    if (subscriptionIdx !== -1) {\n      value = this.values[subscriptionIdx];\n      this.delayNotifierSubscriptions.splice(subscriptionIdx, 1);\n      this.values.splice(subscriptionIdx, 1);\n    }\n\n    return value;\n  }\n\n  private tryDelay(delayNotifier: Observable<any>, value: T): void {\n    const notifierSubscription = subscribeToResult(this, delayNotifier, value);\n\n    if (notifierSubscription && !notifierSubscription.closed) {\n      this.add(notifierSubscription);\n      this.delayNotifierSubscriptions.push(notifierSubscription);\n    }\n\n    this.values.push(value);\n  }\n\n  private tryComplete(): void {\n    if (this.completed && this.delayNotifierSubscriptions.length === 0) {\n      this.destination.complete();\n    }\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SubscriptionDelayObservable<T> extends Observable<T> {\n  constructor(/** @deprecated internal use only */ public source: Observable<T>, private subscriptionDelay: Observable<any>) {\n    super();\n  }\n\n  /** @deprecated internal use only */ _subscribe(subscriber: Subscriber<T>) {\n    this.subscriptionDelay.subscribe(new SubscriptionDelaySubscriber(subscriber, this.source));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SubscriptionDelaySubscriber<T> extends Subscriber<T> {\n  private sourceSubscribed: boolean = false;\n\n  constructor(private parent: Subscriber<T>, private source: Observable<T>) {\n    super();\n  }\n\n  protected _next(unused: any) {\n    this.subscribeToSource();\n  }\n\n  protected _error(err: any) {\n    this.unsubscribe();\n    this.parent.error(err);\n  }\n\n  protected _complete() {\n    this.subscribeToSource();\n  }\n\n  private subscribeToSource(): void {\n    if (!this.sourceSubscribed) {\n      this.sourceSubscribed = true;\n      this.unsubscribe();\n      this.source.subscribe(this.parent);\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Notification } from '../Notification';\nimport { OperatorFunction } from '../interfaces';\n\n/**\n * Converts an Observable of {@link Notification} objects into the emissions\n * that they represent.\n *\n * <span class=\"informal\">Unwraps {@link Notification} objects as actual `next`,\n * `error` and `complete` emissions. The opposite of {@link materialize}.</span>\n *\n * <img src=\"./img/dematerialize.png\" width=\"100%\">\n *\n * `dematerialize` is assumed to operate an Observable that only emits\n * {@link Notification} objects as `next` emissions, and does not emit any\n * `error`. Such Observable is the output of a `materialize` operation. Those\n * notifications are then unwrapped using the metadata they contain, and emitted\n * as `next`, `error`, and `complete` on the output Observable.\n *\n * Use this operator in conjunction with {@link materialize}.\n *\n * @example <caption>Convert an Observable of Notifications to an actual Observable</caption>\n * var notifA = new Rx.Notification('N', 'A');\n * var notifB = new Rx.Notification('N', 'B');\n * var notifE = new Rx.Notification('E', void 0,\n *   new TypeError('x.toUpperCase is not a function')\n * );\n * var materialized = Rx.Observable.of(notifA, notifB, notifE);\n * var upperCase = materialized.dematerialize();\n * upperCase.subscribe(x => console.log(x), e => console.error(e));\n *\n * // Results in:\n * // A\n * // B\n * // TypeError: x.toUpperCase is not a function\n *\n * @see {@link Notification}\n * @see {@link materialize}\n *\n * @return {Observable} An Observable that emits items and notifications\n * embedded in Notification objects emitted by the source Observable.\n * @method dematerialize\n * @owner Observable\n */\nexport function dematerialize<T>(): OperatorFunction<Notification<T>, T> {\n  return function dematerializeOperatorFunction(source: Observable<Notification<T>>) {\n    return source.lift(new DeMaterializeOperator());\n  };\n}\n\nclass DeMaterializeOperator<T extends Notification<any>, R> implements Operator<T, R> {\n  call(subscriber: Subscriber<any>, source: any): any {\n    return source.subscribe(new DeMaterializeSubscriber(subscriber));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass DeMaterializeSubscriber<T extends Notification<any>> extends Subscriber<T> {\n  constructor(destination: Subscriber<any>) {\n    super(destination);\n  }\n\n  protected _next(value: T) {\n    value.observe(this.destination);\n  }\n}\n","import { root } from './root';\n\nexport interface ISetCtor {\n  new<T>(): ISet<T>;\n}\n\nexport interface ISet<T> {\n  add(value: T): void;\n  has(value: T): boolean;\n  size: number;\n  clear(): void;\n}\n\nexport function minimalSetImpl<T>(): ISetCtor {\n  // THIS IS NOT a full impl of Set, this is just the minimum\n  // bits of functionality we need for this library.\n  return class MinimalSet<T> implements ISet<T> {\n    private _values: T[] = [];\n\n    add(value: T): void {\n      if (!this.has(value)) {\n        this._values.push(value);\n      }\n    }\n\n    has(value: T): boolean {\n      return this._values.indexOf(value) !== -1;\n    }\n\n    get size(): number {\n      return this._values.length;\n    }\n\n    clear(): void {\n      this._values.length = 0;\n    }\n  };\n}\n\nexport const Set: ISetCtor = root.Set || minimalSetImpl();","import { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { TeardownLogic } from '../Subscription';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { ISet, Set } from '../util/Set';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Returns an Observable that emits all items emitted by the source Observable that are distinct by comparison from previous items.\n *\n * If a keySelector function is provided, then it will project each value from the source observable into a new value that it will\n * check for equality with previously projected values. If a keySelector function is not provided, it will use each value from the\n * source observable directly with an equality check against previous values.\n *\n * In JavaScript runtimes that support `Set`, this operator will use a `Set` to improve performance of the distinct value checking.\n *\n * In other runtimes, this operator will use a minimal implementation of `Set` that relies on an `Array` and `indexOf` under the\n * hood, so performance will degrade as more values are checked for distinction. Even in newer browsers, a long-running `distinct`\n * use might result in memory leaks. To help alleviate this in some scenarios, an optional `flushes` parameter is also provided so\n * that the internal `Set` can be \"flushed\", basically clearing it of values.\n *\n * @example <caption>A simple example with numbers</caption>\n * Observable.of(1, 1, 2, 2, 2, 1, 2, 3, 4, 3, 2, 1)\n *   .distinct()\n *   .subscribe(x => console.log(x)); // 1, 2, 3, 4\n *\n * @example <caption>An example using a keySelector function</caption>\n * interface Person {\n *    age: number,\n *    name: string\n * }\n *\n * Observable.of<Person>(\n *     { age: 4, name: 'Foo'},\n *     { age: 7, name: 'Bar'},\n *     { age: 5, name: 'Foo'})\n *     .distinct((p: Person) => p.name)\n *     .subscribe(x => console.log(x));\n *\n * // displays:\n * // { age: 4, name: 'Foo' }\n * // { age: 7, name: 'Bar' }\n *\n * @see {@link distinctUntilChanged}\n * @see {@link distinctUntilKeyChanged}\n *\n * @param {function} [keySelector] Optional function to select which value you want to check as distinct.\n * @param {Observable} [flushes] Optional Observable for flushing the internal HashSet of the operator.\n * @return {Observable} An Observable that emits items from the source Observable with distinct values.\n * @method distinct\n * @owner Observable\n */\nexport function distinct<T, K>(keySelector?: (value: T) => K,\n                               flushes?: Observable<any>): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new DistinctOperator(keySelector, flushes));\n}\n\nclass DistinctOperator<T, K> implements Operator<T, T> {\n  constructor(private keySelector: (value: T) => K, private flushes: Observable<any>) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new DistinctSubscriber(subscriber, this.keySelector, this.flushes));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class DistinctSubscriber<T, K> extends OuterSubscriber<T, T> {\n  private values: ISet<K> = new Set<K>();\n\n  constructor(destination: Subscriber<T>, private keySelector: (value: T) => K, flushes: Observable<any>) {\n    super(destination);\n\n    if (flushes) {\n      this.add(subscribeToResult(this, flushes));\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: T,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, T>): void {\n    this.values.clear();\n  }\n\n  notifyError(error: any, innerSub: InnerSubscriber<T, T>): void {\n    this._error(error);\n  }\n\n  protected _next(value: T): void {\n    if (this.keySelector) {\n      this._useKeySelector(value);\n    } else {\n      this._finalizeNext(value, value);\n    }\n  }\n\n  private _useKeySelector(value: T): void {\n    let key: K;\n    const { destination } = this;\n    try {\n      key = this.keySelector(value);\n    } catch (err) {\n      destination.error(err);\n      return;\n    }\n    this._finalizeNext(key, value);\n  }\n\n  private _finalizeNext(key: K|T, value: T) {\n    const { values } = this;\n    if (!values.has(<K>key)) {\n      values.add(<K>key);\n      this.destination.next(value);\n    }\n  }\n\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { tryCatch } from '../util/tryCatch';\nimport { errorObject } from '../util/errorObject';\nimport { Observable } from '../Observable';\nimport { TeardownLogic } from '../Subscription';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/* tslint:disable:max-line-length */\nexport function distinctUntilChanged<T>(compare?: (x: T, y: T) => boolean): MonoTypeOperatorFunction<T>;\nexport function distinctUntilChanged<T, K>(compare: (x: K, y: K) => boolean, keySelector: (x: T) => K): MonoTypeOperatorFunction<T>;\n/* tslint:enable:max-line-length */\n\n/**\n * Returns an Observable that emits all items emitted by the source Observable that are distinct by comparison from the previous item.\n *\n * If a comparator function is provided, then it will be called for each item to test for whether or not that value should be emitted.\n *\n * If a comparator function is not provided, an equality check is used by default.\n *\n * @example <caption>A simple example with numbers</caption>\n * Observable.of(1, 1, 2, 2, 2, 1, 1, 2, 3, 3, 4)\n *   .distinctUntilChanged()\n *   .subscribe(x => console.log(x)); // 1, 2, 1, 2, 3, 4\n *\n * @example <caption>An example using a compare function</caption>\n * interface Person {\n *    age: number,\n *    name: string\n * }\n *\n * Observable.of<Person>(\n *     { age: 4, name: 'Foo'},\n *     { age: 7, name: 'Bar'},\n *     { age: 5, name: 'Foo'})\n *     { age: 6, name: 'Foo'})\n *     .distinctUntilChanged((p: Person, q: Person) => p.name === q.name)\n *     .subscribe(x => console.log(x));\n *\n * // displays:\n * // { age: 4, name: 'Foo' }\n * // { age: 7, name: 'Bar' }\n * // { age: 5, name: 'Foo' }\n *\n * @see {@link distinct}\n * @see {@link distinctUntilKeyChanged}\n *\n * @param {function} [compare] Optional comparison function called to test if an item is distinct from the previous item in the source.\n * @return {Observable} An Observable that emits items from the source Observable with distinct values.\n * @method distinctUntilChanged\n * @owner Observable\n */\nexport function distinctUntilChanged<T, K>(compare?: (x: K, y: K) => boolean, keySelector?: (x: T) => K): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new DistinctUntilChangedOperator<T, K>(compare, keySelector));\n}\n\nclass DistinctUntilChangedOperator<T, K> implements Operator<T, T> {\n  constructor(private compare: (x: K, y: K) => boolean,\n              private keySelector: (x: T) => K) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new DistinctUntilChangedSubscriber(subscriber, this.compare, this.keySelector));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass DistinctUntilChangedSubscriber<T, K> extends Subscriber<T> {\n  private key: K;\n  private hasKey: boolean = false;\n\n  constructor(destination: Subscriber<T>,\n              compare: (x: K, y: K) => boolean,\n              private keySelector: (x: T) => K) {\n    super(destination);\n    if (typeof compare === 'function') {\n      this.compare = compare;\n    }\n  }\n\n  private compare(x: any, y: any): boolean {\n    return x === y;\n  }\n\n  protected _next(value: T): void {\n\n    const keySelector = this.keySelector;\n    let key: any = value;\n\n    if (keySelector) {\n      key = tryCatch(this.keySelector)(value);\n      if (key === errorObject) {\n        return this.destination.error(errorObject.e);\n      }\n    }\n\n    let result: any = false;\n\n    if (this.hasKey) {\n      result = tryCatch(this.compare)(this.key, key);\n      if (result === errorObject) {\n        return this.destination.error(errorObject.e);\n      }\n    } else {\n      this.hasKey = true;\n    }\n\n    if (Boolean(result) === false) {\n      this.key = key;\n      this.destination.next(value);\n    }\n  }\n}\n","/**\n * An error thrown when an element was queried at a certain index of an\n * Observable, but no such index or position exists in that sequence.\n *\n * @see {@link elementAt}\n * @see {@link take}\n * @see {@link takeLast}\n *\n * @class ArgumentOutOfRangeError\n */\nexport class ArgumentOutOfRangeError extends Error {\n  constructor() {\n    const err: any = super('argument out of range');\n    (<any> this).name = err.name = 'ArgumentOutOfRangeError';\n    (<any> this).stack = err.stack;\n    (<any> this).message = err.message;\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { ArgumentOutOfRangeError } from '../util/ArgumentOutOfRangeError';\nimport { Observable } from '../Observable';\nimport { TeardownLogic } from '../Subscription';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Emits the single value at the specified `index` in a sequence of emissions\n * from the source Observable.\n *\n * <span class=\"informal\">Emits only the i-th value, then completes.</span>\n *\n * <img src=\"./img/elementAt.png\" width=\"100%\">\n *\n * `elementAt` returns an Observable that emits the item at the specified\n * `index` in the source Observable, or a default value if that `index` is out\n * of range and the `default` argument is provided. If the `default` argument is\n * not given and the `index` is out of range, the output Observable will emit an\n * `ArgumentOutOfRangeError` error.\n *\n * @example <caption>Emit only the third click event</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.elementAt(2);\n * result.subscribe(x => console.log(x));\n *\n * // Results in:\n * // click 1 = nothing\n * // click 2 = nothing\n * // click 3 = MouseEvent object logged to console\n *\n * @see {@link first}\n * @see {@link last}\n * @see {@link skip}\n * @see {@link single}\n * @see {@link take}\n *\n * @throws {ArgumentOutOfRangeError} When using `elementAt(i)`, it delivers an\n * ArgumentOutOrRangeError to the Observer's `error` callback if `i < 0` or the\n * Observable has completed before emitting the i-th `next` notification.\n *\n * @param {number} index Is the number `i` for the i-th source emission that has\n * happened since the subscription, starting from the number `0`.\n * @param {T} [defaultValue] The default value returned for missing indices.\n * @return {Observable} An Observable that emits a single item, if it is found.\n * Otherwise, will emit the default value if given. If not, then emits an error.\n * @method elementAt\n * @owner Observable\n */\nexport function elementAt<T>(index: number, defaultValue?: T): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new ElementAtOperator(index, defaultValue));\n}\n\nclass ElementAtOperator<T> implements Operator<T, T> {\n\n  constructor(private index: number, private defaultValue?: T) {\n    if (index < 0) {\n      throw new ArgumentOutOfRangeError;\n    }\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new ElementAtSubscriber(subscriber, this.index, this.defaultValue));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass ElementAtSubscriber<T> extends Subscriber<T> {\n\n  constructor(destination: Subscriber<T>, private index: number, private defaultValue?: T) {\n    super(destination);\n  }\n\n  protected _next(x: T) {\n    if (this.index-- === 0) {\n      this.destination.next(x);\n      this.destination.complete();\n    }\n  }\n\n  protected _complete() {\n    const destination = this.destination;\n    if (this.index >= 0) {\n      if (typeof this.defaultValue !== 'undefined') {\n        destination.next(this.defaultValue);\n      } else {\n        destination.error(new ArgumentOutOfRangeError);\n      }\n    }\n    destination.complete();\n  }\n}\n","import { Operator } from '../Operator';\nimport { Observer } from '../Observer';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { OperatorFunction } from '../interfaces';\n\n/**\n * Returns an Observable that emits whether or not every item of the source satisfies the condition specified.\n *\n * @example <caption>A simple example emitting true if all elements are less than 5, false otherwise</caption>\n *  Observable.of(1, 2, 3, 4, 5, 6)\n *     .every(x => x < 5)\n *     .subscribe(x => console.log(x)); // -> false\n *\n * @param {function} predicate A function for determining if an item meets a specified condition.\n * @param {any} [thisArg] Optional object to use for `this` in the callback.\n * @return {Observable} An Observable of booleans that determines if all items of the source Observable meet the condition specified.\n * @method every\n * @owner Observable\n */\nexport function every<T>(predicate: (value: T, index: number, source: Observable<T>) => boolean,\n                         thisArg?: any): OperatorFunction<T, boolean> {\n  return (source: Observable<T>) => source.lift(new EveryOperator(predicate, thisArg, source));\n}\n\nclass EveryOperator<T> implements Operator<T, boolean> {\n  constructor(private predicate: (value: T, index: number, source: Observable<T>) => boolean,\n              private thisArg?: any,\n              private source?: Observable<T>) {\n  }\n\n  call(observer: Subscriber<boolean>, source: any): any {\n    return source.subscribe(new EverySubscriber(observer, this.predicate, this.thisArg, this.source));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass EverySubscriber<T> extends Subscriber<T> {\n  private index: number = 0;\n\n  constructor(destination: Observer<boolean>,\n              private predicate: (value: T, index: number, source: Observable<T>) => boolean,\n              private thisArg: any,\n              private source?: Observable<T>) {\n    super(destination);\n    this.thisArg = thisArg || this;\n  }\n\n  private notifyComplete(everyValueMatch: boolean): void {\n    this.destination.next(everyValueMatch);\n    this.destination.complete();\n  }\n\n  protected _next(value: T): void {\n    let result = false;\n    try {\n      result = this.predicate.call(this.thisArg, value, this.index++, this.source);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n\n    if (!result) {\n      this.notifyComplete(false);\n    }\n  }\n\n  protected _complete(): void {\n    this.notifyComplete(true);\n  }\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription, TeardownLogic } from '../Subscription';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Converts a higher-order Observable into a first-order Observable by dropping\n * inner Observables while the previous inner Observable has not yet completed.\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables by dropping the\n * next inner Observables while the current inner is still executing.</span>\n *\n * <img src=\"./img/exhaust.png\" width=\"100%\">\n *\n * `exhaust` subscribes to an Observable that emits Observables, also known as a\n * higher-order Observable. Each time it observes one of these emitted inner\n * Observables, the output Observable begins emitting the items emitted by that\n * inner Observable. So far, it behaves like {@link mergeAll}. However,\n * `exhaust` ignores every new inner Observable if the previous Observable has\n * not yet completed. Once that one completes, it will accept and flatten the\n * next inner Observable and repeat this process.\n *\n * @example <caption>Run a finite timer for each click, only if there is no currently active timer</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var higherOrder = clicks.map((ev) => Rx.Observable.interval(1000).take(5));\n * var result = higherOrder.exhaust();\n * result.subscribe(x => console.log(x));\n *\n * @see {@link combineAll}\n * @see {@link concatAll}\n * @see {@link switch}\n * @see {@link mergeAll}\n * @see {@link exhaustMap}\n * @see {@link zipAll}\n *\n * @return {Observable} An Observable that takes a source of Observables and propagates the first observable\n * exclusively until it completes before subscribing to the next.\n * @method exhaust\n * @owner Observable\n */\nexport function exhaust<T>(): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new SwitchFirstOperator<T>());\n}\n\nclass SwitchFirstOperator<T> implements Operator<T, T> {\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new SwitchFirstSubscriber(subscriber));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SwitchFirstSubscriber<T> extends OuterSubscriber<T, T> {\n  private hasCompleted: boolean = false;\n  private hasSubscription: boolean = false;\n\n  constructor(destination: Subscriber<T>) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    if (!this.hasSubscription) {\n      this.hasSubscription = true;\n      this.add(subscribeToResult(this, value));\n    }\n  }\n\n  protected _complete(): void {\n    this.hasCompleted = true;\n    if (!this.hasSubscription) {\n      this.destination.complete();\n    }\n  }\n\n  notifyComplete(innerSub: Subscription): void {\n    this.remove(innerSub);\n    this.hasSubscription = false;\n    if (this.hasCompleted) {\n      this.destination.complete();\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Observable, ObservableInput } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OperatorFunction } from '../interfaces';\n\n/* tslint:disable:max-line-length */\nexport function exhaustMap<T, R>(project: (value: T, index: number) => ObservableInput<R>): OperatorFunction<T, R>;\nexport function exhaustMap<T, I, R>(project: (value: T, index: number) => ObservableInput<I>, resultSelector: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable only if the previous projected Observable has completed.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link exhaust}.</span>\n *\n * <img src=\"./img/exhaustMap.png\" width=\"100%\">\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an (so-called \"inner\") Observable. When it projects a source value to\n * an Observable, the output Observable begins emitting the items emitted by\n * that projected Observable. However, `exhaustMap` ignores every new projected\n * Observable if the previous projected Observable has not yet completed. Once\n * that one completes, it will accept and flatten the next projected Observable\n * and repeat this process.\n *\n * @example <caption>Run a finite timer for each click, only if there is no currently active timer</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.exhaustMap((ev) => Rx.Observable.interval(1000).take(5));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link concatMap}\n * @see {@link exhaust}\n * @see {@link mergeMap}\n * @see {@link switchMap}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\n * A function to produce the value on the output Observable based on the values\n * and the indices of the source (outer) emission and the inner Observable\n * emission. The arguments passed to this function are:\n * - `outerValue`: the value that came from the source\n * - `innerValue`: the value that came from the projected Observable\n * - `outerIndex`: the \"index\" of the value that came from the source\n * - `innerIndex`: the \"index\" of the value from the projected Observable\n * @return {Observable} An Observable containing projected Observables\n * of each item of the source, ignoring projected Observables that start before\n * their preceding Observable has completed.\n * @method exhaustMap\n * @owner Observable\n */\nexport function exhaustMap<T, I, R>(\n  project: (value: T, index: number) => ObservableInput<I>,\n  resultSelector?: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R\n  ): OperatorFunction<T, R> {\n    return (source: Observable<T>) => source.lift(new SwitchFirstMapOperator(project, resultSelector));\n  }\n\nclass SwitchFirstMapOperator<T, I, R> implements Operator<T, R> {\n  constructor(private project: (value: T, index: number) => ObservableInput<I>,\n              private resultSelector?: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R) {\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new SwitchFirstMapSubscriber(subscriber, this.project, this.resultSelector));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SwitchFirstMapSubscriber<T, I, R> extends OuterSubscriber<T, I> {\n  private hasSubscription: boolean = false;\n  private hasCompleted: boolean = false;\n  private index: number = 0;\n\n  constructor(destination: Subscriber<R>,\n              private project: (value: T, index: number) => ObservableInput<I>,\n              private resultSelector?: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    if (!this.hasSubscription) {\n      this.tryNext(value);\n    }\n  }\n\n  private tryNext(value: T): void {\n    const index = this.index++;\n    const destination = this.destination;\n    try {\n      const result = this.project(value, index);\n      this.hasSubscription = true;\n      this.add(subscribeToResult(this, result, value, index));\n    } catch (err) {\n      destination.error(err);\n    }\n  }\n\n  protected _complete(): void {\n    this.hasCompleted = true;\n    if (!this.hasSubscription) {\n      this.destination.complete();\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: I,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, I>): void {\n    const { resultSelector, destination } = this;\n    if (resultSelector) {\n      this.trySelectResult(outerValue, innerValue, outerIndex, innerIndex);\n    } else {\n      destination.next(innerValue);\n    }\n  }\n\n  private trySelectResult(outerValue: T, innerValue: I,\n                          outerIndex: number, innerIndex: number): void {\n    const { resultSelector, destination } = this;\n    try {\n      const result = resultSelector(outerValue, innerValue, outerIndex, innerIndex);\n      destination.next(result);\n    } catch (err) {\n      destination.error(err);\n    }\n  }\n\n  notifyError(err: any): void {\n    this.destination.error(err);\n  }\n\n  notifyComplete(innerSub: Subscription): void {\n    this.remove(innerSub);\n\n    this.hasSubscription = false;\n    if (this.hasCompleted) {\n      this.destination.complete();\n    }\n  }\n}\n","import { Observable } from '../Observable';\nimport { IScheduler } from '../Scheduler';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { tryCatch } from '../util/tryCatch';\nimport { errorObject } from '../util/errorObject';\nimport { Subscription } from '../Subscription';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { MonoTypeOperatorFunction, OperatorFunction } from '../interfaces';\n\n/* tslint:disable:max-line-length */\nexport function expand<T>(project: (value: T, index: number) => Observable<T>, concurrent?: number, scheduler?: IScheduler): MonoTypeOperatorFunction<T>;\nexport function expand<T, R>(project: (value: T, index: number) => Observable<R>, concurrent?: number, scheduler?: IScheduler): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Recursively projects each source value to an Observable which is merged in\n * the output Observable.\n *\n * <span class=\"informal\">It's similar to {@link mergeMap}, but applies the\n * projection function to every source value as well as every output value.\n * It's recursive.</span>\n *\n * <img src=\"./img/expand.png\" width=\"100%\">\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an Observable, and then merging those resulting Observables and\n * emitting the results of this merger. *Expand* will re-emit on the output\n * Observable every source value. Then, each output value is given to the\n * `project` function which returns an inner Observable to be merged on the\n * output Observable. Those output values resulting from the projection are also\n * given to the `project` function to produce new output values. This is how\n * *expand* behaves recursively.\n *\n * @example <caption>Start emitting the powers of two on every click, at most 10 of them</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var powersOfTwo = clicks\n *   .mapTo(1)\n *   .expand(x => Rx.Observable.of(2 * x).delay(1000))\n *   .take(10);\n * powersOfTwo.subscribe(x => console.log(x));\n *\n * @see {@link mergeMap}\n * @see {@link mergeScan}\n *\n * @param {function(value: T, index: number) => Observable} project A function\n * that, when applied to an item emitted by the source or the output Observable,\n * returns an Observable.\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @param {Scheduler} [scheduler=null] The IScheduler to use for subscribing to\n * each projected inner Observable.\n * @return {Observable} An Observable that emits the source values and also\n * result of applying the projection function to each value emitted on the\n * output Observable and and merging the results of the Observables obtained\n * from this transformation.\n * @method expand\n * @owner Observable\n */\nexport function expand<T, R>(project: (value: T, index: number) => Observable<R>,\n                             concurrent: number = Number.POSITIVE_INFINITY,\n                             scheduler: IScheduler = undefined): OperatorFunction<T, R> {\n  concurrent = (concurrent || 0) < 1 ? Number.POSITIVE_INFINITY : concurrent;\n\n  return (source: Observable<T>) => source.lift(new ExpandOperator(project, concurrent, scheduler));\n}\n\nexport class ExpandOperator<T, R> implements Operator<T, R> {\n  constructor(private project: (value: T, index: number) => Observable<R>,\n              private concurrent: number,\n              private scheduler: IScheduler) {\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new ExpandSubscriber(subscriber, this.project, this.concurrent, this.scheduler));\n  }\n}\n\ninterface DispatchArg<T, R> {\n  subscriber: ExpandSubscriber<T, R>;\n  result: Observable<R>;\n  value: any;\n  index: number;\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class ExpandSubscriber<T, R> extends OuterSubscriber<T, R> {\n  private index: number = 0;\n  private active: number = 0;\n  private hasCompleted: boolean = false;\n  private buffer: any[];\n\n  constructor(destination: Subscriber<R>,\n              private project: (value: T, index: number) => Observable<R>,\n              private concurrent: number,\n              private scheduler: IScheduler) {\n    super(destination);\n    if (concurrent < Number.POSITIVE_INFINITY) {\n      this.buffer = [];\n    }\n  }\n\n  private static dispatch<T, R>(arg: DispatchArg<T, R>): void {\n    const {subscriber, result, value, index} = arg;\n    subscriber.subscribeToProjection(result, value, index);\n  }\n\n  protected _next(value: any): void {\n    const destination = this.destination;\n\n    if (destination.closed) {\n      this._complete();\n      return;\n    }\n\n    const index = this.index++;\n    if (this.active < this.concurrent) {\n      destination.next(value);\n      let result = tryCatch(this.project)(value, index);\n      if (result === errorObject) {\n        destination.error(errorObject.e);\n      } else if (!this.scheduler) {\n        this.subscribeToProjection(result, value, index);\n      } else {\n        const state: DispatchArg<T, R> = { subscriber: this, result, value, index };\n        this.add(this.scheduler.schedule(ExpandSubscriber.dispatch, 0, state));\n      }\n    } else {\n      this.buffer.push(value);\n    }\n  }\n\n  private subscribeToProjection(result: any, value: T, index: number): void {\n    this.active++;\n    this.add(subscribeToResult<T, R>(this, result, value, index));\n  }\n\n  protected _complete(): void {\n    this.hasCompleted = true;\n    if (this.hasCompleted && this.active === 0) {\n      this.destination.complete();\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this._next(innerValue);\n  }\n\n  notifyComplete(innerSub: Subscription): void {\n    const buffer = this.buffer;\n    this.remove(innerSub);\n    this.active--;\n    if (buffer && buffer.length > 0) {\n      this._next(buffer.shift());\n    }\n    if (this.hasCompleted && this.active === 0) {\n      this.destination.complete();\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { TeardownLogic } from '../Subscription';\nimport { OperatorFunction, MonoTypeOperatorFunction } from '../interfaces';\n\n/* tslint:disable:max-line-length */\nexport function filter<T, S extends T>(predicate: (value: T, index: number) => value is S,\n                                       thisArg?: any): OperatorFunction<T, S>;\nexport function filter<T>(predicate: (value: T, index: number) => boolean,\n                          thisArg?: any): MonoTypeOperatorFunction<T>;\n/* tslint:enable:max-line-length */\n\n/**\n * Filter items emitted by the source Observable by only emitting those that\n * satisfy a specified predicate.\n *\n * <span class=\"informal\">Like\n * [Array.prototype.filter()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter),\n * it only emits a value from the source if it passes a criterion function.</span>\n *\n * <img src=\"./img/filter.png\" width=\"100%\">\n *\n * Similar to the well-known `Array.prototype.filter` method, this operator\n * takes values from the source Observable, passes them through a `predicate`\n * function and only emits those values that yielded `true`.\n *\n * @example <caption>Emit only click events whose target was a DIV element</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var clicksOnDivs = clicks.filter(ev => ev.target.tagName === 'DIV');\n * clicksOnDivs.subscribe(x => console.log(x));\n *\n * @see {@link distinct}\n * @see {@link distinctUntilChanged}\n * @see {@link distinctUntilKeyChanged}\n * @see {@link ignoreElements}\n * @see {@link partition}\n * @see {@link skip}\n *\n * @param {function(value: T, index: number): boolean} predicate A function that\n * evaluates each value emitted by the source Observable. If it returns `true`,\n * the value is emitted, if `false` the value is not passed to the output\n * Observable. The `index` parameter is the number `i` for the i-th source\n * emission that has happened since the subscription, starting from the number\n * `0`.\n * @param {any} [thisArg] An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return {Observable} An Observable of values from the source that were\n * allowed by the `predicate` function.\n * @method filter\n * @owner Observable\n */\nexport function filter<T>(predicate: (value: T, index: number) => boolean,\n                          thisArg?: any): MonoTypeOperatorFunction<T> {\n  return function filterOperatorFunction(source: Observable<T>): Observable<T> {\n    return source.lift(new FilterOperator(predicate, thisArg));\n  };\n}\n\nclass FilterOperator<T> implements Operator<T, T> {\n  constructor(private predicate: (value: T, index: number) => boolean,\n              private thisArg?: any) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new FilterSubscriber(subscriber, this.predicate, this.thisArg));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass FilterSubscriber<T> extends Subscriber<T> {\n\n  count: number = 0;\n\n  constructor(destination: Subscriber<T>,\n              private predicate: (value: T, index: number) => boolean,\n              private thisArg: any) {\n    super(destination);\n  }\n\n  // the try catch block below is left specifically for\n  // optimization and perf reasons. a tryCatcher is not necessary here.\n  protected _next(value: T) {\n    let result: any;\n    try {\n      result = this.predicate.call(this.thisArg, value, this.count++);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    if (result) {\n      this.destination.next(value);\n    }\n  }\n}","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription, TeardownLogic } from '../Subscription';\nimport { Observable } from '../Observable';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Returns an Observable that mirrors the source Observable, but will call a specified function when\n * the source terminates on complete or error.\n * @param {function} callback Function to be called when source terminates.\n * @return {Observable} An Observable that mirrors the source, but will call the specified function on termination.\n * @method finally\n * @owner Observable\n */\nexport function finalize<T>(callback: () => void): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new FinallyOperator(callback));\n}\n\nclass FinallyOperator<T> implements Operator<T, T> {\n  constructor(private callback: () => void) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new FinallySubscriber(subscriber, this.callback));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass FinallySubscriber<T> extends Subscriber<T> {\n  constructor(destination: Subscriber<T>, callback: () => void) {\n    super(destination);\n    this.add(new Subscription(callback));\n  }\n}\n","import { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { OperatorFunction, MonoTypeOperatorFunction } from '../interfaces';\n\nexport function find<T, S extends T>(predicate: (value: T, index: number, source: Observable<T>) => value is S,\n                                     thisArg?: any): OperatorFunction<T, S>;\nexport function find<T, S extends T>(predicate: (value: T, index: number) => value is S,\n                                     thisArg?: any): OperatorFunction<T, S>;\nexport function find<T>(predicate: (value: T, index: number, source: Observable<T>) => boolean,\n                        thisArg?: any): MonoTypeOperatorFunction<T>;\nexport function find<T>(predicate: (value: T, index: number) => boolean,\n                        thisArg?: any): MonoTypeOperatorFunction<T>;\n/**\n * Emits only the first value emitted by the source Observable that meets some\n * condition.\n *\n * <span class=\"informal\">Finds the first value that passes some test and emits\n * that.</span>\n *\n * <img src=\"./img/find.png\" width=\"100%\">\n *\n * `find` searches for the first item in the source Observable that matches the\n * specified condition embodied by the `predicate`, and returns the first\n * occurrence in the source. Unlike {@link first}, the `predicate` is required\n * in `find`, and does not emit an error if a valid value is not found.\n *\n * @example <caption>Find and emit the first click that happens on a DIV element</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.find(ev => ev.target.tagName === 'DIV');\n * result.subscribe(x => console.log(x));\n *\n * @see {@link filter}\n * @see {@link first}\n * @see {@link findIndex}\n * @see {@link take}\n *\n * @param {function(value: T, index: number, source: Observable<T>): boolean} predicate\n * A function called with each item to test for condition matching.\n * @param {any} [thisArg] An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return {Observable<T>} An Observable of the first item that matches the\n * condition.\n * @method find\n * @owner Observable\n */\nexport function find<T>(predicate: (value: T, index: number, source: Observable<T>) => boolean,\n                        thisArg?: any): MonoTypeOperatorFunction<T> {\n  if (typeof predicate !== 'function') {\n    throw new TypeError('predicate is not a function');\n  }\n  return (source: Observable<T>) => source.lift(new FindValueOperator(predicate, source, false, thisArg));\n}\n\nexport class FindValueOperator<T> implements Operator<T, T> {\n  constructor(private predicate: (value: T, index: number, source: Observable<T>) => boolean,\n              private source: Observable<T>,\n              private yieldIndex: boolean,\n              private thisArg?: any) {\n  }\n\n  call(observer: Subscriber<T>, source: any): any {\n    return source.subscribe(new FindValueSubscriber(observer, this.predicate, this.source, this.yieldIndex, this.thisArg));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class FindValueSubscriber<T> extends Subscriber<T> {\n  private index: number = 0;\n\n  constructor(destination: Subscriber<T>,\n              private predicate: (value: T, index: number, source: Observable<T>) => boolean,\n              private source: Observable<T>,\n              private yieldIndex: boolean,\n              private thisArg?: any) {\n    super(destination);\n  }\n\n  private notifyComplete(value: any): void {\n    const destination = this.destination;\n\n    destination.next(value);\n    destination.complete();\n  }\n\n  protected _next(value: T): void {\n    const { predicate, thisArg } = this;\n    const index = this.index++;\n    try {\n      const result = predicate.call(thisArg || this, value, index, this.source);\n      if (result) {\n        this.notifyComplete(this.yieldIndex ? index : value);\n      }\n    } catch (err) {\n      this.destination.error(err);\n    }\n  }\n\n  protected _complete(): void {\n    this.notifyComplete(this.yieldIndex ? -1 : undefined);\n  }\n}\n","/**\n * An error thrown when an Observable or a sequence was queried but has no\n * elements.\n *\n * @see {@link first}\n * @see {@link last}\n * @see {@link single}\n *\n * @class EmptyError\n */\nexport class EmptyError extends Error {\n  constructor() {\n    const err: any = super('no elements in sequence');\n    (<any> this).name = err.name = 'EmptyError';\n    (<any> this).stack = err.stack;\n    (<any> this).message = err.message;\n  }\n}\n","import { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { EmptyError } from '../util/EmptyError';\nimport { OperatorFunction, MonoTypeOperatorFunction } from '../interfaces';\n/* tslint:disable:max-line-length */\nexport function first<T, S extends T>(predicate: (value: T, index: number, source: Observable<T>) => value is S): OperatorFunction<T, S>;\nexport function first<T, S extends T, R>(predicate: (value: T | S, index: number, source: Observable<T>) => value is S,\n                                         resultSelector: (value: S, index: number) => R, defaultValue?: R): OperatorFunction<T, R>;\nexport function first<T, S extends T>(predicate: (value: T, index: number, source: Observable<T>) => value is S,\n                                      resultSelector: void,\n                                      defaultValue?: S): OperatorFunction<T, S>;\nexport function first<T>(predicate?: (value: T, index: number, source: Observable<T>) => boolean): MonoTypeOperatorFunction<T>;\nexport function first<T, R>(predicate: (value: T, index: number, source: Observable<T>) => boolean,\n                            resultSelector?: (value: T, index: number) => R,\n                            defaultValue?: R): OperatorFunction<T, R>;\nexport function first<T>(predicate: (value: T, index: number, source: Observable<T>) => boolean,\n                         resultSelector: void,\n                         defaultValue?: T): MonoTypeOperatorFunction<T>;\n\n/**\n * Emits only the first value (or the first value that meets some condition)\n * emitted by the source Observable.\n *\n * <span class=\"informal\">Emits only the first value. Or emits only the first\n * value that passes some test.</span>\n *\n * <img src=\"./img/first.png\" width=\"100%\">\n *\n * If called with no arguments, `first` emits the first value of the source\n * Observable, then completes. If called with a `predicate` function, `first`\n * emits the first value of the source that matches the specified condition. It\n * may also take a `resultSelector` function to produce the output value from\n * the input value, and a `defaultValue` to emit in case the source completes\n * before it is able to emit a valid value. Throws an error if `defaultValue`\n * was not provided and a matching element is not found.\n *\n * @example <caption>Emit only the first click that happens on the DOM</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.first();\n * result.subscribe(x => console.log(x));\n *\n * @example <caption>Emits the first click that happens on a DIV</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.first(ev => ev.target.tagName === 'DIV');\n * result.subscribe(x => console.log(x));\n *\n * @see {@link filter}\n * @see {@link find}\n * @see {@link take}\n *\n * @throws {EmptyError} Delivers an EmptyError to the Observer's `error`\n * callback if the Observable completes before any `next` notification was sent.\n *\n * @param {function(value: T, index: number, source: Observable<T>): boolean} [predicate]\n * An optional function called with each item to test for condition matching.\n * @param {function(value: T, index: number): R} [resultSelector] A function to\n * produce the value on the output Observable based on the values\n * and the indices of the source Observable. The arguments passed to this\n * function are:\n * - `value`: the value that was emitted on the source.\n * - `index`: the \"index\" of the value from the source.\n * @param {R} [defaultValue] The default value emitted in case no valid value\n * was found on the source.\n * @return {Observable<T|R>} An Observable of the first item that matches the\n * condition.\n * @method first\n * @owner Observable\n */\nexport function first<T, R>(predicate?: (value: T, index: number, source: Observable<T>) => boolean,\n                            resultSelector?: ((value: T, index: number) => R) | void,\n                            defaultValue?: R): OperatorFunction<T, T | R> {\n  return (source: Observable<T>) => source.lift(new FirstOperator(predicate, resultSelector, defaultValue, source));\n}\n\nclass FirstOperator<T, R> implements Operator<T, R> {\n  constructor(private predicate?: (value: T, index: number, source: Observable<T>) => boolean,\n              private resultSelector?: ((value: T, index: number) => R) | void,\n              private defaultValue?: any,\n              private source?: Observable<T>) {\n  }\n\n  call(observer: Subscriber<R>, source: any): any {\n    return source.subscribe(new FirstSubscriber(observer, this.predicate, this.resultSelector, this.defaultValue, this.source));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass FirstSubscriber<T, R> extends Subscriber<T> {\n  private index: number = 0;\n  private hasCompleted: boolean = false;\n  private _emitted: boolean = false;\n\n  constructor(destination: Subscriber<R>,\n              private predicate?: (value: T, index: number, source: Observable<T>) => boolean,\n              private resultSelector?: ((value: T, index: number) => R) | void,\n              private defaultValue?: any,\n              private source?: Observable<T>) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    const index = this.index++;\n    if (this.predicate) {\n      this._tryPredicate(value, index);\n    } else {\n      this._emit(value, index);\n    }\n  }\n\n  private _tryPredicate(value: T, index: number) {\n    let result: any;\n    try {\n      result = this.predicate(value, index, this.source);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    if (result) {\n      this._emit(value, index);\n    }\n  }\n\n  private _emit(value: any, index: number) {\n    if (this.resultSelector) {\n      this._tryResultSelector(value, index);\n      return;\n    }\n    this._emitFinal(value);\n  }\n\n  private _tryResultSelector(value: T, index: number) {\n    let result: any;\n    try {\n      result = (<any>this).resultSelector(value, index);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    this._emitFinal(result);\n  }\n\n  private _emitFinal(value: any) {\n    const destination = this.destination;\n    if (!this._emitted) {\n      this._emitted = true;\n      destination.next(value);\n      destination.complete();\n      this.hasCompleted = true;\n    }\n  }\n\n  protected _complete(): void {\n    const destination = this.destination;\n    if (!this.hasCompleted && typeof this.defaultValue !== 'undefined') {\n      destination.next(this.defaultValue);\n      destination.complete();\n    } else if (!this.hasCompleted) {\n      destination.error(new EmptyError);\n    }\n  }\n}\n","/**\n * An error thrown when an action is invalid because the object has been\n * unsubscribed.\n *\n * @see {@link Subject}\n * @see {@link BehaviorSubject}\n *\n * @class ObjectUnsubscribedError\n */\nexport class ObjectUnsubscribedError extends Error {\n  constructor() {\n    const err: any = super('object unsubscribed');\n    (<any> this).name = err.name = 'ObjectUnsubscribedError';\n    (<any> this).stack = err.stack;\n    (<any> this).message = err.message;\n  }\n}\n","import { Subject } from './Subject';\nimport { Observer } from './Observer';\nimport { Subscription } from './Subscription';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class SubjectSubscription<T> extends Subscription {\n  closed: boolean = false;\n\n  constructor(public subject: Subject<T>, public subscriber: Observer<T>) {\n    super();\n  }\n\n  unsubscribe() {\n    if (this.closed) {\n      return;\n    }\n\n    this.closed = true;\n\n    const subject = this.subject;\n    const observers = subject.observers;\n\n    this.subject = null;\n\n    if (!observers || observers.length === 0 || subject.isStopped || subject.closed) {\n      return;\n    }\n\n    const subscriberIndex = observers.indexOf(this.subscriber);\n\n    if (subscriberIndex !== -1) {\n      observers.splice(subscriberIndex, 1);\n    }\n  }\n}\n","import { Operator } from './Operator';\nimport { Observer } from './Observer';\nimport { Observable } from './Observable';\nimport { Subscriber } from './Subscriber';\nimport { ISubscription, Subscription, TeardownLogic } from './Subscription';\nimport { ObjectUnsubscribedError } from './util/ObjectUnsubscribedError';\nimport { SubjectSubscription } from './SubjectSubscription';\nimport { rxSubscriber as rxSubscriberSymbol } from './symbol/rxSubscriber';\n\n/**\n * @class SubjectSubscriber<T>\n */\nexport class SubjectSubscriber<T> extends Subscriber<T> {\n  constructor(protected destination: Subject<T>) {\n    super(destination);\n  }\n}\n\n/**\n * @class Subject<T>\n */\nexport class Subject<T> extends Observable<T> implements ISubscription {\n\n  [rxSubscriberSymbol]() {\n    return new SubjectSubscriber(this);\n  }\n\n  observers: Observer<T>[] = [];\n\n  closed = false;\n\n  isStopped = false;\n\n  hasError = false;\n\n  thrownError: any = null;\n\n  constructor() {\n    super();\n  }\n\n  static create: Function = <T>(destination: Observer<T>, source: Observable<T>): AnonymousSubject<T> => {\n    return new AnonymousSubject<T>(destination, source);\n  }\n\n  lift<R>(operator: Operator<T, R>): Observable<R> {\n    const subject = new AnonymousSubject(this, this);\n    subject.operator = <any>operator;\n    return <any>subject;\n  }\n\n  next(value?: T) {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    }\n    if (!this.isStopped) {\n      const { observers } = this;\n      const len = observers.length;\n      const copy = observers.slice();\n      for (let i = 0; i < len; i++) {\n        copy[i].next(value);\n      }\n    }\n  }\n\n  error(err: any) {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    }\n    this.hasError = true;\n    this.thrownError = err;\n    this.isStopped = true;\n    const { observers } = this;\n    const len = observers.length;\n    const copy = observers.slice();\n    for (let i = 0; i < len; i++) {\n      copy[i].error(err);\n    }\n    this.observers.length = 0;\n  }\n\n  complete() {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    }\n    this.isStopped = true;\n    const { observers } = this;\n    const len = observers.length;\n    const copy = observers.slice();\n    for (let i = 0; i < len; i++) {\n      copy[i].complete();\n    }\n    this.observers.length = 0;\n  }\n\n  unsubscribe() {\n    this.isStopped = true;\n    this.closed = true;\n    this.observers = null;\n  }\n\n  protected _trySubscribe(subscriber: Subscriber<T>): TeardownLogic {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    } else {\n      return super._trySubscribe(subscriber);\n    }\n  }\n\n  /** @deprecated internal use only */ _subscribe(subscriber: Subscriber<T>): Subscription {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    } else if (this.hasError) {\n      subscriber.error(this.thrownError);\n      return Subscription.EMPTY;\n    } else if (this.isStopped) {\n      subscriber.complete();\n      return Subscription.EMPTY;\n    } else {\n      this.observers.push(subscriber);\n      return new SubjectSubscription(this, subscriber);\n    }\n  }\n\n  asObservable(): Observable<T> {\n    const observable = new Observable<T>();\n    (<any>observable).source = this;\n    return observable;\n  }\n}\n\n/**\n * @class AnonymousSubject<T>\n */\nexport class AnonymousSubject<T> extends Subject<T> {\n  constructor(protected destination?: Observer<T>, source?: Observable<T>) {\n    super();\n    this.source = source;\n  }\n\n  next(value: T) {\n    const { destination } = this;\n    if (destination && destination.next) {\n      destination.next(value);\n    }\n  }\n\n  error(err: any) {\n    const { destination } = this;\n    if (destination && destination.error) {\n      this.destination.error(err);\n    }\n  }\n\n  complete() {\n    const { destination } = this;\n    if (destination && destination.complete) {\n      this.destination.complete();\n    }\n  }\n\n  /** @deprecated internal use only */ _subscribe(subscriber: Subscriber<T>): Subscription {\n    const { source } = this;\n    if (source) {\n      return this.source.subscribe(subscriber);\n    } else {\n      return Subscription.EMPTY;\n    }\n  }\n}\n","export class MapPolyfill {\n  public size = 0;\n  private _values: any[] = [];\n  private _keys: any[] = [];\n\n  get(key: any) {\n    const i = this._keys.indexOf(key);\n    return i === -1 ? undefined : this._values[i];\n  }\n\n  set(key: any, value: any) {\n    const i = this._keys.indexOf(key);\n    if (i === -1) {\n      this._keys.push(key);\n      this._values.push(value);\n      this.size++;\n    } else {\n      this._values[i] = value;\n    }\n    return this;\n  }\n\n  delete(key: any): boolean {\n    const i = this._keys.indexOf(key);\n    if (i === -1) { return false; }\n    this._values.splice(i, 1);\n    this._keys.splice(i, 1);\n    this.size--;\n    return true;\n  }\n\n  clear(): void {\n    this._keys.length = 0;\n    this._values.length = 0;\n    this.size = 0;\n  }\n\n  forEach(cb: Function, thisArg: any): void {\n    for (let i = 0; i < this.size; i++) {\n      cb.call(thisArg, this._values[i], this._keys[i]);\n    }\n  }\n}","import { root } from './root';\nimport { MapPolyfill } from './MapPolyfill';\n\nexport const Map = root.Map || (() => MapPolyfill)();","export class FastMap {\n  private values: Object = {};\n\n  delete(key: string): boolean {\n    this.values[key] = null;\n    return true;\n  }\n\n  set(key: string, value: any): FastMap {\n    this.values[key] = value;\n    return this;\n  }\n\n  get(key: string): any {\n    return this.values[key];\n  }\n\n  forEach(cb: (value: any, key: any) => void, thisArg?: any): void {\n    const values = this.values;\n    for (let key in values) {\n      if (values.hasOwnProperty(key) && values[key] !== null) {\n        cb.call(thisArg, values[key], key);\n      }\n    }\n  }\n\n  clear(): void {\n    this.values = {};\n  }\n}","import { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Subject } from '../Subject';\nimport { Map } from '../util/Map';\nimport { FastMap } from '../util/FastMap';\nimport { OperatorFunction } from '../interfaces';\n\n/* tslint:disable:max-line-length */\nexport function groupBy<T, K>(keySelector: (value: T) => K): OperatorFunction<T, GroupedObservable<K, T>>;\nexport function groupBy<T, K>(keySelector: (value: T) => K, elementSelector: void, durationSelector: (grouped: GroupedObservable<K, T>) => Observable<any>): OperatorFunction<T, GroupedObservable<K, T>>;\nexport function groupBy<T, K, R>(keySelector: (value: T) => K, elementSelector?: (value: T) => R, durationSelector?: (grouped: GroupedObservable<K, R>) => Observable<any>): OperatorFunction<T, GroupedObservable<K, R>>;\nexport function groupBy<T, K, R>(keySelector: (value: T) => K, elementSelector?: (value: T) => R, durationSelector?: (grouped: GroupedObservable<K, R>) => Observable<any>, subjectSelector?: () => Subject<R>): OperatorFunction<T, GroupedObservable<K, R>>;\n/* tslint:enable:max-line-length */\n\n/**\n * Groups the items emitted by an Observable according to a specified criterion,\n * and emits these grouped items as `GroupedObservables`, one\n * {@link GroupedObservable} per group.\n *\n * <img src=\"./img/groupBy.png\" width=\"100%\">\n *\n * @example <caption>Group objects by id and return as array</caption>\n * Observable.of<Obj>({id: 1, name: 'aze1'},\n *                    {id: 2, name: 'sf2'},\n *                    {id: 2, name: 'dg2'},\n *                    {id: 1, name: 'erg1'},\n *                    {id: 1, name: 'df1'},\n *                    {id: 2, name: 'sfqfb2'},\n *                    {id: 3, name: 'qfs3'},\n *                    {id: 2, name: 'qsgqsfg2'}\n *     )\n *     .groupBy(p => p.id)\n *     .flatMap( (group$) => group$.reduce((acc, cur) => [...acc, cur], []))\n *     .subscribe(p => console.log(p));\n *\n * // displays:\n * // [ { id: 1, name: 'aze1' },\n * //   { id: 1, name: 'erg1' },\n * //   { id: 1, name: 'df1' } ]\n * //\n * // [ { id: 2, name: 'sf2' },\n * //   { id: 2, name: 'dg2' },\n * //   { id: 2, name: 'sfqfb2' },\n * //   { id: 2, name: 'qsgqsfg2' } ]\n * //\n * // [ { id: 3, name: 'qfs3' } ]\n *\n * @example <caption>Pivot data on the id field</caption>\n * Observable.of<Obj>({id: 1, name: 'aze1'},\n *                    {id: 2, name: 'sf2'},\n *                    {id: 2, name: 'dg2'},\n *                    {id: 1, name: 'erg1'},\n *                    {id: 1, name: 'df1'},\n *                    {id: 2, name: 'sfqfb2'},\n *                    {id: 3, name: 'qfs1'},\n *                    {id: 2, name: 'qsgqsfg2'}\n *                   )\n *     .groupBy(p => p.id, p => p.name)\n *     .flatMap( (group$) => group$.reduce((acc, cur) => [...acc, cur], [\"\" + group$.key]))\n *     .map(arr => ({'id': parseInt(arr[0]), 'values': arr.slice(1)}))\n *     .subscribe(p => console.log(p));\n *\n * // displays:\n * // { id: 1, values: [ 'aze1', 'erg1', 'df1' ] }\n * // { id: 2, values: [ 'sf2', 'dg2', 'sfqfb2', 'qsgqsfg2' ] }\n * // { id: 3, values: [ 'qfs1' ] }\n *\n * @param {function(value: T): K} keySelector A function that extracts the key\n * for each item.\n * @param {function(value: T): R} [elementSelector] A function that extracts the\n * return element for each item.\n * @param {function(grouped: GroupedObservable<K,R>): Observable<any>} [durationSelector]\n * A function that returns an Observable to determine how long each group should\n * exist.\n * @return {Observable<GroupedObservable<K,R>>} An Observable that emits\n * GroupedObservables, each of which corresponds to a unique key value and each\n * of which emits those items from the source Observable that share that key\n * value.\n * @method groupBy\n * @owner Observable\n */\nexport function groupBy<T, K, R>(keySelector: (value: T) => K,\n                                 elementSelector?: ((value: T) => R) | void,\n                                 durationSelector?: (grouped: GroupedObservable<K, R>) => Observable<any>,\n                                 subjectSelector?: () => Subject<R>): OperatorFunction<T, GroupedObservable<K, R>> {\n  return (source: Observable<T>) =>\n    source.lift(new GroupByOperator(keySelector, elementSelector, durationSelector, subjectSelector));\n}\n\nexport interface RefCountSubscription {\n  count: number;\n  unsubscribe: () => void;\n  closed: boolean;\n  attemptedToUnsubscribe: boolean;\n}\n\nclass GroupByOperator<T, K, R> implements Operator<T, GroupedObservable<K, R>> {\n  constructor(private keySelector: (value: T) => K,\n              private elementSelector?: ((value: T) => R) | void,\n              private durationSelector?: (grouped: GroupedObservable<K, R>) => Observable<any>,\n              private subjectSelector?: () => Subject<R>) {\n  }\n\n  call(subscriber: Subscriber<GroupedObservable<K, R>>, source: any): any {\n    return source.subscribe(new GroupBySubscriber(\n      subscriber, this.keySelector, this.elementSelector, this.durationSelector, this.subjectSelector\n    ));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass GroupBySubscriber<T, K, R> extends Subscriber<T> implements RefCountSubscription {\n  private groups: Map<K, Subject<T|R>> = null;\n  public attemptedToUnsubscribe: boolean = false;\n  public count: number = 0;\n\n  constructor(destination: Subscriber<GroupedObservable<K, R>>,\n              private keySelector: (value: T) => K,\n              private elementSelector?: ((value: T) => R) | void,\n              private durationSelector?: (grouped: GroupedObservable<K, R>) => Observable<any>,\n              private subjectSelector?: () => Subject<R>) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    let key: K;\n    try {\n      key = this.keySelector(value);\n    } catch (err) {\n      this.error(err);\n      return;\n    }\n\n    this._group(value, key);\n  }\n\n  private _group(value: T, key: K) {\n    let groups = this.groups;\n\n    if (!groups) {\n      groups = this.groups = typeof key === 'string' ? new FastMap() : new Map();\n    }\n\n    let group = groups.get(key);\n\n    let element: R;\n    if (this.elementSelector) {\n      try {\n        element = this.elementSelector(value);\n      } catch (err) {\n        this.error(err);\n      }\n    } else {\n      element = <any>value;\n    }\n\n    if (!group) {\n      group = this.subjectSelector ? this.subjectSelector() : new Subject<R>();\n      groups.set(key, group);\n      const groupedObservable = new GroupedObservable(key, group, this);\n      this.destination.next(groupedObservable);\n      if (this.durationSelector) {\n        let duration: any;\n        try {\n          duration = this.durationSelector(new GroupedObservable<K, R>(key, <Subject<R>>group));\n        } catch (err) {\n          this.error(err);\n          return;\n        }\n        this.add(duration.subscribe(new GroupDurationSubscriber(key, group, this)));\n      }\n    }\n\n    if (!group.closed) {\n      group.next(element);\n    }\n  }\n\n  protected _error(err: any): void {\n    const groups = this.groups;\n    if (groups) {\n      groups.forEach((group, key) => {\n        group.error(err);\n      });\n\n      groups.clear();\n    }\n    this.destination.error(err);\n  }\n\n  protected _complete(): void {\n    const groups = this.groups;\n    if (groups) {\n      groups.forEach((group, key) => {\n        group.complete();\n      });\n\n      groups.clear();\n    }\n    this.destination.complete();\n  }\n\n  removeGroup(key: K): void {\n    this.groups.delete(key);\n  }\n\n  unsubscribe() {\n    if (!this.closed) {\n      this.attemptedToUnsubscribe = true;\n      if (this.count === 0) {\n        super.unsubscribe();\n      }\n    }\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass GroupDurationSubscriber<K, T> extends Subscriber<T> {\n  constructor(private key: K,\n              private group: Subject<T>,\n              private parent: GroupBySubscriber<any, K, T>) {\n    super(group);\n  }\n\n  protected _next(value: T): void {\n    this.complete();\n  }\n\n  /** @deprecated internal use only */ _unsubscribe() {\n    const { parent, key } = this;\n    this.key = this.parent = null;\n    if (parent) {\n      parent.removeGroup(key);\n    }\n  }\n}\n\n/**\n * An Observable representing values belonging to the same group represented by\n * a common key. The values emitted by a GroupedObservable come from the source\n * Observable. The common key is available as the field `key` on a\n * GroupedObservable instance.\n *\n * @class GroupedObservable<K, T>\n */\nexport class GroupedObservable<K, T> extends Observable<T> {\n  constructor(public key: K,\n              private groupSubject: Subject<T>,\n              private refCountSubscription?: RefCountSubscription) {\n    super();\n  }\n\n  /** @deprecated internal use only */ _subscribe(subscriber: Subscriber<T>) {\n    const subscription = new Subscription();\n    const {refCountSubscription, groupSubject} = this;\n    if (refCountSubscription && !refCountSubscription.closed) {\n      subscription.add(new InnerRefCountSubscription(refCountSubscription));\n    }\n    subscription.add(groupSubject.subscribe(subscriber));\n    return subscription;\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass InnerRefCountSubscription extends Subscription {\n  constructor(private parent: RefCountSubscription) {\n    super();\n    parent.count++;\n  }\n\n  unsubscribe() {\n    const parent = this.parent;\n    if (!parent.closed && !this.closed) {\n      super.unsubscribe();\n      parent.count -= 1;\n      if (parent.count === 0 && parent.attemptedToUnsubscribe) {\n        parent.unsubscribe();\n      }\n    }\n  }\n}\n","import { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { noop } from '../util/noop';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Ignores all items emitted by the source Observable and only passes calls of `complete` or `error`.\n *\n * <img src=\"./img/ignoreElements.png\" width=\"100%\">\n *\n * @return {Observable} An empty Observable that only calls `complete`\n * or `error`, based on which one is called by the source Observable.\n * @method ignoreElements\n * @owner Observable\n */\nexport function ignoreElements<T>(): MonoTypeOperatorFunction<T> {\n  return function ignoreElementsOperatorFunction(source: Observable<T>) {\n    return source.lift(new IgnoreElementsOperator());\n  };\n}\n\nclass IgnoreElementsOperator<T, R> implements Operator<T, R> {\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new IgnoreElementsSubscriber(subscriber));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass IgnoreElementsSubscriber<T> extends Subscriber<T> {\n  protected _next(unused: T): void {\n    noop();\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { OperatorFunction } from '../interfaces';\n\nexport function isEmpty<T>(): OperatorFunction<T, boolean> {\n  return (source: Observable<T>) => source.lift(new IsEmptyOperator());\n}\n\nclass IsEmptyOperator implements Operator<any, boolean> {\n  call (observer: Subscriber<boolean>, source: any): any {\n    return source.subscribe(new IsEmptySubscriber(observer));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass IsEmptySubscriber extends Subscriber<any> {\n  constructor(destination: Subscriber<boolean>) {\n    super(destination);\n  }\n\n  private notifyComplete(isEmpty: boolean): void {\n    const destination = this.destination;\n\n    destination.next(isEmpty);\n    destination.complete();\n  }\n\n  protected _next(value: boolean) {\n    this.notifyComplete(false);\n  }\n\n  protected _complete() {\n    this.notifyComplete(true);\n  }\n}\n","import { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { EmptyError } from '../util/EmptyError';\nimport { OperatorFunction, MonoTypeOperatorFunction } from '../interfaces';\n\n/* tslint:disable:max-line-length */\nexport function last<T, S extends T>(predicate: (value: T, index: number, source: Observable<T>) => value is S): OperatorFunction<T, S>;\nexport function last<T, S extends T, R>(predicate: (value: T | S, index: number, source: Observable<T>) => value is S,\n                                        resultSelector: (value: S, index: number) => R, defaultValue?: R): OperatorFunction<T, R>;\nexport function last<T, S extends T>(predicate: (value: T, index: number, source: Observable<T>) => value is S,\n                                     resultSelector: void,\n                                     defaultValue?: S): OperatorFunction<T, S>;\nexport function last<T>(predicate?: (value: T, index: number, source: Observable<T>) => boolean): MonoTypeOperatorFunction<T>;\nexport function last<T, R>(predicate: (value: T, index: number, source: Observable<T>) => boolean,\n                           resultSelector?: (value: T, index: number) => R,\n                           defaultValue?: R): OperatorFunction<T, R>;\nexport function last<T>(predicate: (value: T, index: number, source: Observable<T>) => boolean,\n                        resultSelector: void,\n                        defaultValue?: T): MonoTypeOperatorFunction<T>;\n/* tslint:enable:max-line-length */\n\n/**\n * Returns an Observable that emits only the last item emitted by the source Observable.\n * It optionally takes a predicate function as a parameter, in which case, rather than emitting\n * the last item from the source Observable, the resulting Observable will emit the last item\n * from the source Observable that satisfies the predicate.\n *\n * <img src=\"./img/last.png\" width=\"100%\">\n *\n * @throws {EmptyError} Delivers an EmptyError to the Observer's `error`\n * callback if the Observable completes before any `next` notification was sent.\n * @param {function} predicate - The condition any source emitted item has to satisfy.\n * @return {Observable} An Observable that emits only the last item satisfying the given condition\n * from the source, or an NoSuchElementException if no such items are emitted.\n * @throws - Throws if no items that match the predicate are emitted by the source Observable.\n * @method last\n * @owner Observable\n */\nexport function last<T, R>(predicate?: (value: T, index: number, source: Observable<T>) => boolean,\n                           resultSelector?: ((value: T, index: number) => R) | void,\n                           defaultValue?: R): OperatorFunction<T, T | R> {\n  return (source: Observable<T>) => source.lift(new LastOperator(predicate, resultSelector, defaultValue, source));\n}\n\nclass LastOperator<T, R> implements Operator<T, R> {\n  constructor(private predicate?: (value: T, index: number, source: Observable<T>) => boolean,\n              private resultSelector?: ((value: T, index: number) => R) | void,\n              private defaultValue?: any,\n              private source?: Observable<T>) {\n  }\n\n  call(observer: Subscriber<R>, source: any): any {\n    return source.subscribe(new LastSubscriber(observer, this.predicate, this.resultSelector, this.defaultValue, this.source));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass LastSubscriber<T, R> extends Subscriber<T> {\n  private lastValue: T | R;\n  private hasValue: boolean = false;\n  private index: number = 0;\n\n  constructor(destination: Subscriber<R>,\n              private predicate?: (value: T, index: number, source: Observable<T>) => boolean,\n              private resultSelector?: ((value: T, index: number) => R) | void,\n              private defaultValue?: any,\n              private source?: Observable<T>) {\n    super(destination);\n    if (typeof defaultValue !== 'undefined') {\n      this.lastValue = defaultValue;\n      this.hasValue = true;\n    }\n  }\n\n  protected _next(value: T): void {\n    const index = this.index++;\n    if (this.predicate) {\n      this._tryPredicate(value, index);\n    } else {\n      if (this.resultSelector) {\n        this._tryResultSelector(value, index);\n        return;\n      }\n      this.lastValue = value;\n      this.hasValue = true;\n    }\n  }\n\n  private _tryPredicate(value: T, index: number) {\n    let result: any;\n    try {\n      result = this.predicate(value, index, this.source);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    if (result) {\n      if (this.resultSelector) {\n        this._tryResultSelector(value, index);\n        return;\n      }\n      this.lastValue = value;\n      this.hasValue = true;\n    }\n  }\n\n  private _tryResultSelector(value: T, index: number) {\n    let result: any;\n    try {\n      result = (<any>this).resultSelector(value, index);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    this.lastValue = result;\n    this.hasValue = true;\n  }\n\n  protected _complete(): void {\n    const destination = this.destination;\n    if (this.hasValue) {\n      destination.next(this.lastValue);\n      destination.complete();\n    } else {\n      destination.error(new EmptyError);\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { OperatorFunction } from '../interfaces';\n\n/**\n * Applies a given `project` function to each value emitted by the source\n * Observable, and emits the resulting values as an Observable.\n *\n * <span class=\"informal\">Like [Array.prototype.map()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map),\n * it passes each source value through a transformation function to get\n * corresponding output values.</span>\n *\n * <img src=\"./img/map.png\" width=\"100%\">\n *\n * Similar to the well known `Array.prototype.map` function, this operator\n * applies a projection to each value and emits that projection in the output\n * Observable.\n *\n * @example <caption>Map every click to the clientX position of that click</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var positions = clicks.map(ev => ev.clientX);\n * positions.subscribe(x => console.log(x));\n *\n * @see {@link mapTo}\n * @see {@link pluck}\n *\n * @param {function(value: T, index: number): R} project The function to apply\n * to each `value` emitted by the source Observable. The `index` parameter is\n * the number `i` for the i-th emission that has happened since the\n * subscription, starting from the number `0`.\n * @param {any} [thisArg] An optional argument to define what `this` is in the\n * `project` function.\n * @return {Observable<R>} An Observable that emits the values from the source\n * Observable transformed by the given `project` function.\n * @method map\n * @owner Observable\n */\nexport function map<T, R>(project: (value: T, index: number) => R, thisArg?: any): OperatorFunction<T, R> {\n  return function mapOperation(source: Observable<T>): Observable<R> {\n    if (typeof project !== 'function') {\n      throw new TypeError('argument is not a function. Are you looking for `mapTo()`?');\n    }\n    return source.lift(new MapOperator(project, thisArg));\n  };\n}\n\nexport class MapOperator<T, R> implements Operator<T, R> {\n  constructor(private project: (value: T, index: number) => R, private thisArg: any) {\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new MapSubscriber(subscriber, this.project, this.thisArg));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass MapSubscriber<T, R> extends Subscriber<T> {\n  count: number = 0;\n  private thisArg: any;\n\n  constructor(destination: Subscriber<R>,\n              private project: (value: T, index: number) => R,\n              thisArg: any) {\n    super(destination);\n    this.thisArg = thisArg || this;\n  }\n\n  // NOTE: This looks unoptimized, but it's actually purposefully NOT\n  // using try/catch optimizations.\n  protected _next(value: T) {\n    let result: any;\n    try {\n      result = this.project.call(this.thisArg, value, this.count++);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    this.destination.next(result);\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { OperatorFunction } from '../interfaces';\n\n/**\n * Emits the given constant value on the output Observable every time the source\n * Observable emits a value.\n *\n * <span class=\"informal\">Like {@link map}, but it maps every source value to\n * the same output value every time.</span>\n *\n * <img src=\"./img/mapTo.png\" width=\"100%\">\n *\n * Takes a constant `value` as argument, and emits that whenever the source\n * Observable emits a value. In other words, ignores the actual source value,\n * and simply uses the emission moment to know when to emit the given `value`.\n *\n * @example <caption>Map every click to the string 'Hi'</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var greetings = clicks.mapTo('Hi');\n * greetings.subscribe(x => console.log(x));\n *\n * @see {@link map}\n *\n * @param {any} value The value to map each source value to.\n * @return {Observable} An Observable that emits the given `value` every time\n * the source Observable emits something.\n * @method mapTo\n * @owner Observable\n */\nexport function mapTo<T, R>(value: R): OperatorFunction<T, R> {\n  return (source: Observable<T>) => source.lift(new MapToOperator(value));\n}\n\nclass MapToOperator<T, R> implements Operator<T, R> {\n\n  value: R;\n\n  constructor(value: R) {\n    this.value = value;\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new MapToSubscriber(subscriber, this.value));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass MapToSubscriber<T, R> extends Subscriber<T> {\n\n  value: R;\n\n  constructor(destination: Subscriber<R>, value: R) {\n    super(destination);\n    this.value = value;\n  }\n\n  protected _next(x: T) {\n    this.destination.next(this.value);\n  }\n}","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Notification } from '../Notification';\nimport { OperatorFunction } from '../interfaces';\n\n/**\n * Represents all of the notifications from the source Observable as `next`\n * emissions marked with their original types within {@link Notification}\n * objects.\n *\n * <span class=\"informal\">Wraps `next`, `error` and `complete` emissions in\n * {@link Notification} objects, emitted as `next` on the output Observable.\n * </span>\n *\n * <img src=\"./img/materialize.png\" width=\"100%\">\n *\n * `materialize` returns an Observable that emits a `next` notification for each\n * `next`, `error`, or `complete` emission of the source Observable. When the\n * source Observable emits `complete`, the output Observable will emit `next` as\n * a Notification of type \"complete\", and then it will emit `complete` as well.\n * When the source Observable emits `error`, the output will emit `next` as a\n * Notification of type \"error\", and then `complete`.\n *\n * This operator is useful for producing metadata of the source Observable, to\n * be consumed as `next` emissions. Use it in conjunction with\n * {@link dematerialize}.\n *\n * @example <caption>Convert a faulty Observable to an Observable of Notifications</caption>\n * var letters = Rx.Observable.of('a', 'b', 13, 'd');\n * var upperCase = letters.map(x => x.toUpperCase());\n * var materialized = upperCase.materialize();\n * materialized.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // - Notification {kind: \"N\", value: \"A\", error: undefined, hasValue: true}\n * // - Notification {kind: \"N\", value: \"B\", error: undefined, hasValue: true}\n * // - Notification {kind: \"E\", value: undefined, error: TypeError:\n * //   x.toUpperCase is not a function at MapSubscriber.letters.map.x\n * //   [as project] (http://1…, hasValue: false}\n *\n * @see {@link Notification}\n * @see {@link dematerialize}\n *\n * @return {Observable<Notification<T>>} An Observable that emits\n * {@link Notification} objects that wrap the original emissions from the source\n * Observable with metadata.\n * @method materialize\n * @owner Observable\n */\nexport function materialize<T>(): OperatorFunction<T, Notification<T>> {\n  return function materializeOperatorFunction(source: Observable<T>) {\n    return source.lift(new MaterializeOperator());\n  };\n}\n\nclass MaterializeOperator<T> implements Operator<T, Notification<T>> {\n  call(subscriber: Subscriber<Notification<T>>, source: any): any {\n    return source.subscribe(new MaterializeSubscriber(subscriber));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass MaterializeSubscriber<T> extends Subscriber<T> {\n  constructor(destination: Subscriber<Notification<T>>) {\n    super(destination);\n  }\n\n  protected _next(value: T) {\n    this.destination.next(Notification.createNext(value));\n  }\n\n  protected _error(err: any) {\n    const destination = this.destination;\n    destination.next(Notification.createError(err));\n    destination.complete();\n  }\n\n  protected _complete() {\n    const destination = this.destination;\n    destination.next(Notification.createComplete());\n    destination.complete();\n  }\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { OperatorFunction, MonoTypeOperatorFunction } from '../interfaces';\n\n/* tslint:disable:max-line-length */\nexport function scan<T>(accumulator: (acc: T, value: T, index: number) => T, seed?: T): MonoTypeOperatorFunction<T>;\nexport function scan<T>(accumulator: (acc: T[], value: T, index: number) => T[], seed?: T[]): OperatorFunction<T, T[]>;\nexport function scan<T, R>(accumulator: (acc: R, value: T, index: number) => R, seed?: R): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Applies an accumulator function over the source Observable, and returns each\n * intermediate result, with an optional seed value.\n *\n * <span class=\"informal\">It's like {@link reduce}, but emits the current\n * accumulation whenever the source emits a value.</span>\n *\n * <img src=\"./img/scan.png\" width=\"100%\">\n *\n * Combines together all values emitted on the source, using an accumulator\n * function that knows how to join a new source value into the accumulation from\n * the past. Is similar to {@link reduce}, but emits the intermediate\n * accumulations.\n *\n * Returns an Observable that applies a specified `accumulator` function to each\n * item emitted by the source Observable. If a `seed` value is specified, then\n * that value will be used as the initial value for the accumulator. If no seed\n * value is specified, the first item of the source is used as the seed.\n *\n * @example <caption>Count the number of click events</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var ones = clicks.mapTo(1);\n * var seed = 0;\n * var count = ones.scan((acc, one) => acc + one, seed);\n * count.subscribe(x => console.log(x));\n *\n * @see {@link expand}\n * @see {@link mergeScan}\n * @see {@link reduce}\n *\n * @param {function(acc: R, value: T, index: number): R} accumulator\n * The accumulator function called on each source value.\n * @param {T|R} [seed] The initial accumulation value.\n * @return {Observable<R>} An observable of the accumulated values.\n * @method scan\n * @owner Observable\n */\nexport function scan<T, R>(accumulator: (acc: R, value: T, index: number) => R, seed?: T | R): OperatorFunction<T, R> {\n  let hasSeed = false;\n  // providing a seed of `undefined` *should* be valid and trigger\n  // hasSeed! so don't use `seed !== undefined` checks!\n  // For this reason, we have to check it here at the original call site\n  // otherwise inside Operator/Subscriber we won't know if `undefined`\n  // means they didn't provide anything or if they literally provided `undefined`\n  if (arguments.length >= 2) {\n    hasSeed = true;\n  }\n\n  return function scanOperatorFunction(source: Observable<T>): Observable<R> {\n    return source.lift(new ScanOperator(accumulator, seed, hasSeed));\n  };\n}\n\nclass ScanOperator<T, R> implements Operator<T, R> {\n  constructor(private accumulator: (acc: R, value: T, index: number) => R, private seed?: T | R, private hasSeed: boolean = false) {}\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new ScanSubscriber(subscriber, this.accumulator, this.seed, this.hasSeed));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass ScanSubscriber<T, R> extends Subscriber<T> {\n  private index: number = 0;\n\n  get seed(): T | R {\n    return this._seed;\n  }\n\n  set seed(value: T | R) {\n    this.hasSeed = true;\n    this._seed = value;\n  }\n\n  constructor(destination: Subscriber<R>, private accumulator: (acc: R, value: T, index: number) => R, private _seed: T | R,\n              private hasSeed: boolean) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    if (!this.hasSeed) {\n      this.seed = value;\n      this.destination.next(value);\n    } else {\n      return this._tryNext(value);\n    }\n  }\n\n  private _tryNext(value: T): void {\n    const index = this.index++;\n    let result: any;\n    try {\n      result = this.accumulator(<R>this.seed, value, index);\n    } catch (err) {\n      this.destination.error(err);\n    }\n    this.seed = result;\n    this.destination.next(result);\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { ArgumentOutOfRangeError } from '../util/ArgumentOutOfRangeError';\nimport { EmptyObservable } from '../observable/EmptyObservable';\nimport { Observable } from '../Observable';\nimport { TeardownLogic } from '../Subscription';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Emits only the last `count` values emitted by the source Observable.\n *\n * <span class=\"informal\">Remembers the latest `count` values, then emits those\n * only when the source completes.</span>\n *\n * <img src=\"./img/takeLast.png\" width=\"100%\">\n *\n * `takeLast` returns an Observable that emits at most the last `count` values\n * emitted by the source Observable. If the source emits fewer than `count`\n * values then all of its values are emitted. This operator must wait until the\n * `complete` notification emission from the source in order to emit the `next`\n * values on the output Observable, because otherwise it is impossible to know\n * whether or not more values will be emitted on the source. For this reason,\n * all values are emitted synchronously, followed by the complete notification.\n *\n * @example <caption>Take the last 3 values of an Observable with many values</caption>\n * var many = Rx.Observable.range(1, 100);\n * var lastThree = many.takeLast(3);\n * lastThree.subscribe(x => console.log(x));\n *\n * @see {@link take}\n * @see {@link takeUntil}\n * @see {@link takeWhile}\n * @see {@link skip}\n *\n * @throws {ArgumentOutOfRangeError} When using `takeLast(i)`, it delivers an\n * ArgumentOutOrRangeError to the Observer's `error` callback if `i < 0`.\n *\n * @param {number} count The maximum number of values to emit from the end of\n * the sequence of values emitted by the source Observable.\n * @return {Observable<T>} An Observable that emits at most the last count\n * values emitted by the source Observable.\n * @method takeLast\n * @owner Observable\n */\nexport function takeLast<T>(count: number): MonoTypeOperatorFunction<T> {\n  return function takeLastOperatorFunction(source: Observable<T>): Observable<T> {\n    if (count === 0) {\n      return new EmptyObservable<T>();\n    } else {\n      return source.lift(new TakeLastOperator(count));\n    }\n  };\n}\n\nclass TakeLastOperator<T> implements Operator<T, T> {\n  constructor(private total: number) {\n    if (this.total < 0) {\n      throw new ArgumentOutOfRangeError;\n    }\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new TakeLastSubscriber(subscriber, this.total));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass TakeLastSubscriber<T> extends Subscriber<T> {\n  private ring: Array<T> = new Array();\n  private count: number = 0;\n\n  constructor(destination: Subscriber<T>, private total: number) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    const ring = this.ring;\n    const total = this.total;\n    const count = this.count++;\n\n    if (ring.length < total) {\n      ring.push(value);\n    } else {\n      const index = count % total;\n      ring[index] = value;\n    }\n  }\n\n  protected _complete(): void {\n    const destination = this.destination;\n    let count = this.count;\n\n    if (count > 0) {\n      const total = this.count >= this.total ? this.total : this.count;\n      const ring  = this.ring;\n\n      for (let i = 0; i < total; i++) {\n        const idx = (count++) % total;\n        destination.next(ring[idx]);\n      }\n    }\n\n    destination.complete();\n  }\n}\n","import { Observable, ObservableInput } from '../Observable';\nimport { Operator } from '../Operator';\nimport { PartialObserver } from '../Observer';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OperatorFunction } from '../interfaces';\n\n/* tslint:disable:max-line-length */\nexport function mergeMapTo<T, R>(observable: ObservableInput<R>, concurrent?: number): OperatorFunction<T, R>;\nexport function mergeMapTo<T, I, R>(observable: ObservableInput<I>, resultSelector: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R, concurrent?: number): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Projects each source value to the same Observable which is merged multiple\n * times in the output Observable.\n *\n * <span class=\"informal\">It's like {@link mergeMap}, but maps each value always\n * to the same inner Observable.</span>\n *\n * <img src=\"./img/mergeMapTo.png\" width=\"100%\">\n *\n * Maps each source value to the given Observable `innerObservable` regardless\n * of the source value, and then merges those resulting Observables into one\n * single Observable, which is the output Observable.\n *\n * @example <caption>For each click event, start an interval Observable ticking every 1 second</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.mergeMapTo(Rx.Observable.interval(1000));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link concatMapTo}\n * @see {@link merge}\n * @see {@link mergeAll}\n * @see {@link mergeMap}\n * @see {@link mergeScan}\n * @see {@link switchMapTo}\n *\n * @param {ObservableInput} innerObservable An Observable to replace each value from\n * the source Observable.\n * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\n * A function to produce the value on the output Observable based on the values\n * and the indices of the source (outer) emission and the inner Observable\n * emission. The arguments passed to this function are:\n * - `outerValue`: the value that came from the source\n * - `innerValue`: the value that came from the projected Observable\n * - `outerIndex`: the \"index\" of the value that came from the source\n * - `innerIndex`: the \"index\" of the value from the projected Observable\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @return {Observable} An Observable that emits items from the given\n * `innerObservable` (and optionally transformed through `resultSelector`) every\n * time a value is emitted on the source Observable.\n * @method mergeMapTo\n * @owner Observable\n */\nexport function mergeMapTo<T, I, R>(innerObservable: Observable<I>,\n                                    resultSelector?: ((outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R) | number,\n                                    concurrent: number = Number.POSITIVE_INFINITY): OperatorFunction<T, R> {\n  if (typeof resultSelector === 'number') {\n    concurrent = <number>resultSelector;\n    resultSelector = null;\n  }\n  return (source: Observable<T>) => source.lift(new MergeMapToOperator(innerObservable, <any>resultSelector, concurrent));\n}\n\n// TODO: Figure out correct signature here: an Operator<Observable<T>, R>\n//       needs to implement call(observer: Subscriber<R>): Subscriber<Observable<T>>\nexport class MergeMapToOperator<T, I, R> implements Operator<Observable<T>, R> {\n  constructor(private ish: ObservableInput<I>,\n              private resultSelector?: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R,\n              private concurrent: number = Number.POSITIVE_INFINITY) {\n  }\n\n  call(observer: Subscriber<R>, source: any): any {\n    return source.subscribe(new MergeMapToSubscriber(observer, this.ish, this.resultSelector, this.concurrent));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class MergeMapToSubscriber<T, I, R> extends OuterSubscriber<T, I> {\n  private hasCompleted: boolean = false;\n  private buffer: T[] = [];\n  private active: number = 0;\n  protected index: number = 0;\n\n  constructor(destination: Subscriber<R>,\n              private ish: ObservableInput<I>,\n              private resultSelector?: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R,\n              private concurrent: number = Number.POSITIVE_INFINITY) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    if (this.active < this.concurrent) {\n      const resultSelector = this.resultSelector;\n      const index = this.index++;\n      const ish = this.ish;\n      const destination = this.destination;\n\n      this.active++;\n      this._innerSub(ish, destination, resultSelector, value, index);\n    } else {\n      this.buffer.push(value);\n    }\n  }\n\n  private _innerSub(ish: ObservableInput<I>,\n                    destination: PartialObserver<I>,\n                    resultSelector: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R,\n                    value: T,\n                    index: number): void {\n    this.add(subscribeToResult<T, I>(this, ish, value, index));\n  }\n\n  protected _complete(): void {\n    this.hasCompleted = true;\n    if (this.active === 0 && this.buffer.length === 0) {\n      this.destination.complete();\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: I,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, I>): void {\n    const { resultSelector, destination } = this;\n    if (resultSelector) {\n      this.trySelectResult(outerValue, innerValue, outerIndex, innerIndex);\n    } else {\n      destination.next(innerValue);\n    }\n  }\n\n  private trySelectResult(outerValue: T, innerValue: I,\n                          outerIndex: number, innerIndex: number): void {\n    const { resultSelector, destination } = this;\n    let result: R;\n    try {\n      result = resultSelector(outerValue, innerValue, outerIndex, innerIndex);\n    } catch (err) {\n      destination.error(err);\n      return;\n    }\n\n    destination.next(result);\n  }\n\n  notifyError(err: any): void {\n    this.destination.error(err);\n  }\n\n  notifyComplete(innerSub: Subscription): void {\n    const buffer = this.buffer;\n    this.remove(innerSub);\n    this.active--;\n    if (buffer.length > 0) {\n      this._next(buffer.shift());\n    } else if (this.active === 0 && this.hasCompleted) {\n      this.destination.complete();\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { tryCatch } from '../util/tryCatch';\nimport { errorObject } from '../util/errorObject';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { OperatorFunction } from '../interfaces';\n\n/**\n * Applies an accumulator function over the source Observable where the\n * accumulator function itself returns an Observable, then each intermediate\n * Observable returned is merged into the output Observable.\n *\n * <span class=\"informal\">It's like {@link scan}, but the Observables returned\n * by the accumulator are merged into the outer Observable.</span>\n *\n * @example <caption>Count the number of click events</caption>\n * const click$ = Rx.Observable.fromEvent(document, 'click');\n * const one$ = click$.mapTo(1);\n * const seed = 0;\n * const count$ = one$.mergeScan((acc, one) => Rx.Observable.of(acc + one), seed);\n * count$.subscribe(x => console.log(x));\n *\n * // Results:\n * 1\n * 2\n * 3\n * 4\n * // ...and so on for each click\n *\n * @param {function(acc: R, value: T): Observable<R>} accumulator\n * The accumulator function called on each source value.\n * @param seed The initial accumulation value.\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of\n * input Observables being subscribed to concurrently.\n * @return {Observable<R>} An observable of the accumulated values.\n * @method mergeScan\n * @owner Observable\n */\nexport function mergeScan<T, R>(accumulator: (acc: R, value: T) => Observable<R>,\n                                seed: R,\n                                concurrent: number = Number.POSITIVE_INFINITY): OperatorFunction<T, R> {\n  return (source: Observable<T>) => source.lift(new MergeScanOperator(accumulator, seed, concurrent));\n}\n\nexport class MergeScanOperator<T, R> implements Operator<T, R> {\n  constructor(private accumulator: (acc: R, value: T) => Observable<R>,\n              private seed: R,\n              private concurrent: number) {\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new MergeScanSubscriber(\n      subscriber, this.accumulator, this.seed, this.concurrent\n    ));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class MergeScanSubscriber<T, R> extends OuterSubscriber<T, R> {\n  private hasValue: boolean = false;\n  private hasCompleted: boolean = false;\n  private buffer: Observable<any>[] = [];\n  private active: number = 0;\n  protected index: number = 0;\n\n  constructor(destination: Subscriber<R>,\n              private accumulator: (acc: R, value: T) => Observable<R>,\n              private acc: R,\n              private concurrent: number) {\n    super(destination);\n  }\n\n  protected _next(value: any): void {\n    if (this.active < this.concurrent) {\n      const index = this.index++;\n      const ish = tryCatch(this.accumulator)(this.acc, value);\n      const destination = this.destination;\n      if (ish === errorObject) {\n        destination.error(errorObject.e);\n      } else {\n        this.active++;\n        this._innerSub(ish, value, index);\n      }\n    } else {\n      this.buffer.push(value);\n    }\n  }\n\n  private _innerSub(ish: any, value: T, index: number): void {\n    this.add(subscribeToResult<T, R>(this, ish, value, index));\n  }\n\n  protected _complete(): void {\n    this.hasCompleted = true;\n    if (this.active === 0 && this.buffer.length === 0) {\n      if (this.hasValue === false) {\n        this.destination.next(this.acc);\n      }\n      this.destination.complete();\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    const { destination } = this;\n    this.acc = innerValue;\n    this.hasValue = true;\n    destination.next(innerValue);\n  }\n\n  notifyComplete(innerSub: Subscription): void {\n    const buffer = this.buffer;\n    this.remove(innerSub);\n    this.active--;\n    if (buffer.length > 0) {\n      this._next(buffer.shift());\n    } else if (this.active === 0 && this.hasCompleted) {\n      if (this.hasValue === false) {\n        this.destination.next(this.acc);\n      }\n      this.destination.complete();\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription, TeardownLogic } from '../Subscription';\nimport { MonoTypeOperatorFunction } from '../interfaces';\nimport { ConnectableObservable } from '../observable/ConnectableObservable';\nimport { Observable } from '../Observable';\n\nexport function refCount<T>(): MonoTypeOperatorFunction<T> {\n  return function refCountOperatorFunction(source: ConnectableObservable<T>): Observable<T> {\n    return source.lift(new RefCountOperator(source));\n  };\n}\n\nclass RefCountOperator<T> implements Operator<T, T> {\n  constructor(private connectable: ConnectableObservable<T>) {\n  }\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n\n    const { connectable } = this;\n    (<any> connectable)._refCount++;\n\n    const refCounter = new RefCountSubscriber(subscriber, connectable);\n    const subscription = source.subscribe(refCounter);\n\n    if (!refCounter.closed) {\n      (<any> refCounter).connection = connectable.connect();\n    }\n\n    return subscription;\n  }\n}\n\nclass RefCountSubscriber<T> extends Subscriber<T> {\n\n  private connection: Subscription;\n\n  constructor(destination: Subscriber<T>,\n              private connectable: ConnectableObservable<T>) {\n    super(destination);\n  }\n\n  /** @deprecated internal use only */ _unsubscribe() {\n\n    const { connectable } = this;\n    if (!connectable) {\n      this.connection = null;\n      return;\n    }\n\n    this.connectable = null;\n    const refCount = (<any> connectable)._refCount;\n    if (refCount <= 0) {\n      this.connection = null;\n      return;\n    }\n\n    (<any> connectable)._refCount = refCount - 1;\n    if (refCount > 1) {\n      this.connection = null;\n      return;\n    }\n\n    ///\n    // Compare the local RefCountSubscriber's connection Subscription to the\n    // connection Subscription on the shared ConnectableObservable. In cases\n    // where the ConnectableObservable source synchronously emits values, and\n    // the RefCountSubscriber's downstream Observers synchronously unsubscribe,\n    // execution continues to here before the RefCountOperator has a chance to\n    // supply the RefCountSubscriber with the shared connection Subscription.\n    // For example:\n    // ```\n    // Observable.range(0, 10)\n    //   .publish()\n    //   .refCount()\n    //   .take(5)\n    //   .subscribe();\n    // ```\n    // In order to account for this case, RefCountSubscriber should only dispose\n    // the ConnectableObservable's shared connection Subscription if the\n    // connection Subscription exists, *and* either:\n    //   a. RefCountSubscriber doesn't have a reference to the shared connection\n    //      Subscription yet, or,\n    //   b. RefCountSubscriber's connection Subscription reference is identical\n    //      to the shared connection Subscription\n    ///\n    const { connection } = this;\n    const sharedConnection = (<any> connectable)._connection;\n    this.connection = null;\n\n    if (sharedConnection && (!connection || sharedConnection === connection)) {\n      sharedConnection.unsubscribe();\n    }\n  }\n}\n","import { Subject, SubjectSubscriber } from '../Subject';\nimport { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription, TeardownLogic } from '../Subscription';\nimport { refCount as higherOrderRefCount } from '../operators/refCount';\n\n/**\n * @class ConnectableObservable<T>\n */\nexport class ConnectableObservable<T> extends Observable<T> {\n\n  /** @deprecated internal use only */ public _subject: Subject<T>;\n  /** @deprecated internal use only */ public _refCount: number = 0;\n  /** @deprecated internal use only */ public _connection: Subscription;\n  _isComplete = false;\n\n  constructor(/** @deprecated internal use only */ public source: Observable<T>,\n              /** @deprecated internal use only */ public subjectFactory: () => Subject<T>) {\n    super();\n  }\n\n  /** @deprecated internal use only */ _subscribe(subscriber: Subscriber<T>) {\n    return this.getSubject().subscribe(subscriber);\n  }\n\n  /** @deprecated internal use only */ public getSubject(): Subject<T> {\n    const subject = this._subject;\n    if (!subject || subject.isStopped) {\n      this._subject = this.subjectFactory();\n    }\n    return this._subject;\n  }\n\n  connect(): Subscription {\n    let connection = this._connection;\n    if (!connection) {\n      this._isComplete = false;\n      connection = this._connection = new Subscription();\n      connection.add(this.source\n        .subscribe(new ConnectableSubscriber(this.getSubject(), this)));\n      if (connection.closed) {\n        this._connection = null;\n        connection = Subscription.EMPTY;\n      } else {\n        this._connection = connection;\n      }\n    }\n    return connection;\n  }\n\n  refCount(): Observable<T> {\n    return higherOrderRefCount()(this) as Observable<T>;\n  }\n}\n\nconst connectableProto = <any>ConnectableObservable.prototype;\n\nexport const connectableObservableDescriptor: PropertyDescriptorMap = {\n  operator: { value: null },\n  _refCount: { value: 0, writable: true },\n  _subject: { value: null, writable: true },\n  _connection: { value: null, writable: true },\n  _subscribe: { value: connectableProto._subscribe },\n  _isComplete: { value: connectableProto._isComplete, writable: true },\n  getSubject: { value: connectableProto.getSubject },\n  connect: { value: connectableProto.connect },\n  refCount: { value: connectableProto.refCount }\n};\n\nclass ConnectableSubscriber<T> extends SubjectSubscriber<T> {\n  constructor(destination: Subject<T>,\n              private connectable: ConnectableObservable<T>) {\n    super(destination);\n  }\n  protected _error(err: any): void {\n    this._unsubscribe();\n    super._error(err);\n  }\n  protected _complete(): void {\n    this.connectable._isComplete = true;\n    this._unsubscribe();\n    super._complete();\n  }\n  /** @deprecated internal use only */ _unsubscribe() {\n    const connectable = <any>this.connectable;\n    if (connectable) {\n      this.connectable = null;\n      const connection = connectable._connection;\n      connectable._refCount = 0;\n      connectable._subject = null;\n      connectable._connection = null;\n      if (connection) {\n        connection.unsubscribe();\n      }\n    }\n  }\n}\n\nclass RefCountOperator<T> implements Operator<T, T> {\n  constructor(private connectable: ConnectableObservable<T>) {\n  }\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n\n    const { connectable } = this;\n    (<any> connectable)._refCount++;\n\n    const refCounter = new RefCountSubscriber(subscriber, connectable);\n    const subscription = source.subscribe(refCounter);\n\n    if (!refCounter.closed) {\n      (<any> refCounter).connection = connectable.connect();\n    }\n\n    return subscription;\n  }\n}\n\nclass RefCountSubscriber<T> extends Subscriber<T> {\n\n  private connection: Subscription;\n\n  constructor(destination: Subscriber<T>,\n              private connectable: ConnectableObservable<T>) {\n    super(destination);\n  }\n\n  /** @deprecated internal use only */ _unsubscribe() {\n\n    const { connectable } = this;\n    if (!connectable) {\n      this.connection = null;\n      return;\n    }\n\n    this.connectable = null;\n    const refCount = (<any> connectable)._refCount;\n    if (refCount <= 0) {\n      this.connection = null;\n      return;\n    }\n\n    (<any> connectable)._refCount = refCount - 1;\n    if (refCount > 1) {\n      this.connection = null;\n      return;\n    }\n\n    ///\n    // Compare the local RefCountSubscriber's connection Subscription to the\n    // connection Subscription on the shared ConnectableObservable. In cases\n    // where the ConnectableObservable source synchronously emits values, and\n    // the RefCountSubscriber's downstream Observers synchronously unsubscribe,\n    // execution continues to here before the RefCountOperator has a chance to\n    // supply the RefCountSubscriber with the shared connection Subscription.\n    // For example:\n    // ```\n    // Observable.range(0, 10)\n    //   .publish()\n    //   .refCount()\n    //   .take(5)\n    //   .subscribe();\n    // ```\n    // In order to account for this case, RefCountSubscriber should only dispose\n    // the ConnectableObservable's shared connection Subscription if the\n    // connection Subscription exists, *and* either:\n    //   a. RefCountSubscriber doesn't have a reference to the shared connection\n    //      Subscription yet, or,\n    //   b. RefCountSubscriber's connection Subscription reference is identical\n    //      to the shared connection Subscription\n    ///\n    const { connection } = this;\n    const sharedConnection = (<any> connectable)._connection;\n    this.connection = null;\n\n    if (sharedConnection && (!connection || sharedConnection === connection)) {\n      sharedConnection.unsubscribe();\n    }\n  }\n}\n","import { Observable, ObservableInput } from '../Observable';\nimport { FromObservable } from '../observable/FromObservable';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { isArray } from '../util/isArray';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OperatorFunction } from '../interfaces';\n\n/* tslint:disable:max-line-length */\nexport function onErrorResumeNext<T, R>(v: ObservableInput<R>): OperatorFunction<T, R>;\nexport function onErrorResumeNext<T, T2, T3, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>): OperatorFunction<T, R>;\nexport function onErrorResumeNext<T, T2, T3, T4, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>): OperatorFunction<T, R>;\nexport function onErrorResumeNext<T, T2, T3, T4, T5, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>): OperatorFunction<T, R>;\nexport function onErrorResumeNext<T, T2, T3, T4, T5, T6, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>): OperatorFunction<T, R> ;\nexport function onErrorResumeNext<T, R>(...observables: Array<ObservableInput<any> | ((...values: Array<any>) => R)>): OperatorFunction<T, R>;\nexport function onErrorResumeNext<T, R>(array: ObservableInput<any>[]): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * When any of the provided Observable emits an complete or error notification, it immediately subscribes to the next one\n * that was passed.\n *\n * <span class=\"informal\">Execute series of Observables no matter what, even if it means swallowing errors.</span>\n *\n * <img src=\"./img/onErrorResumeNext.png\" width=\"100%\">\n *\n * `onErrorResumeNext` is an operator that accepts a series of Observables, provided either directly as\n * arguments or as an array. If no single Observable is provided, returned Observable will simply behave the same\n * as the source.\n *\n * `onErrorResumeNext` returns an Observable that starts by subscribing and re-emitting values from the source Observable.\n * When its stream of values ends - no matter if Observable completed or emitted an error - `onErrorResumeNext`\n * will subscribe to the first Observable that was passed as an argument to the method. It will start re-emitting\n * its values as well and - again - when that stream ends, `onErrorResumeNext` will proceed to subscribing yet another\n * Observable in provided series, no matter if previous Observable completed or ended with an error. This will\n * be happening until there is no more Observables left in the series, at which point returned Observable will\n * complete - even if the last subscribed stream ended with an error.\n *\n * `onErrorResumeNext` can be therefore thought of as version of {@link concat} operator, which is more permissive\n * when it comes to the errors emitted by its input Observables. While `concat` subscribes to the next Observable\n * in series only if previous one successfully completed, `onErrorResumeNext` subscribes even if it ended with\n * an error.\n *\n * Note that you do not get any access to errors emitted by the Observables. In particular do not\n * expect these errors to appear in error callback passed to {@link subscribe}. If you want to take\n * specific actions based on what error was emitted by an Observable, you should try out {@link catch} instead.\n *\n *\n * @example <caption>Subscribe to the next Observable after map fails</caption>\n * Rx.Observable.of(1, 2, 3, 0)\n *   .map(x => {\n *       if (x === 0) { throw Error(); }\n         return 10 / x;\n *   })\n *   .onErrorResumeNext(Rx.Observable.of(1, 2, 3))\n *   .subscribe(\n *     val => console.log(val),\n *     err => console.log(err),          // Will never be called.\n *     () => console.log('that\\'s it!')\n *   );\n *\n * // Logs:\n * // 10\n * // 5\n * // 3.3333333333333335\n * // 1\n * // 2\n * // 3\n * // \"that's it!\"\n *\n * @see {@link concat}\n * @see {@link catch}\n *\n * @param {...ObservableInput} observables Observables passed either directly or as an array.\n * @return {Observable} An Observable that emits values from source Observable, but - if it errors - subscribes\n * to the next passed Observable and so on, until it completes or runs out of Observables.\n * @method onErrorResumeNext\n * @owner Observable\n */\n\nexport function onErrorResumeNext<T, R>(...nextSources: Array<ObservableInput<any> |\n                                                       Array<ObservableInput<any>> |\n                                                       ((...values: Array<any>) => R)>): OperatorFunction<T, R> {\n  if (nextSources.length === 1 && isArray(nextSources[0])) {\n    nextSources = <Array<Observable<any>>>nextSources[0];\n  }\n\n  return (source: Observable<T>) => source.lift(new OnErrorResumeNextOperator<T, R>(nextSources));\n}\n\n/* tslint:disable:max-line-length */\nexport function onErrorResumeNextStatic<R>(v: ObservableInput<R>): Observable<R>;\nexport function onErrorResumeNextStatic<T2, T3, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>): Observable<R>;\nexport function onErrorResumeNextStatic<T2, T3, T4, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>): Observable<R>;\nexport function onErrorResumeNextStatic<T2, T3, T4, T5, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>): Observable<R>;\nexport function onErrorResumeNextStatic<T2, T3, T4, T5, T6, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>): Observable<R>;\n\nexport function onErrorResumeNextStatic<R>(...observables: Array<ObservableInput<any> | ((...values: Array<any>) => R)>): Observable<R>;\nexport function onErrorResumeNextStatic<R>(array: ObservableInput<any>[]): Observable<R>;\n/* tslint:enable:max-line-length */\n\nexport function onErrorResumeNextStatic<T, R>(...nextSources: Array<ObservableInput<any> |\n                                                              Array<ObservableInput<any>> |\n                                                              ((...values: Array<any>) => R)>): Observable<R> {\n  let source: ObservableInput<any> = null;\n\n  if (nextSources.length === 1 && isArray(nextSources[0])) {\n    nextSources = <Array<ObservableInput<any>>>nextSources[0];\n  }\n  source = nextSources.shift();\n\n  return new FromObservable(source, null).lift(new OnErrorResumeNextOperator<T, R>(nextSources));\n}\n\nclass OnErrorResumeNextOperator<T, R> implements Operator<T, R> {\n  constructor(private nextSources: Array<ObservableInput<any>>) {\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new OnErrorResumeNextSubscriber(subscriber, this.nextSources));\n  }\n}\n\nclass OnErrorResumeNextSubscriber<T, R> extends OuterSubscriber<T, R> {\n  constructor(protected destination: Subscriber<T>,\n              private nextSources: Array<ObservableInput<any>>) {\n    super(destination);\n  }\n\n  notifyError(error: any, innerSub: InnerSubscriber<T, any>): void {\n    this.subscribeToNextSource();\n  }\n\n  notifyComplete(innerSub: InnerSubscriber<T, any>): void {\n    this.subscribeToNextSource();\n  }\n\n  protected _error(err: any): void {\n    this.subscribeToNextSource();\n  }\n\n  protected _complete(): void {\n    this.subscribeToNextSource();\n  }\n\n  private subscribeToNextSource(): void {\n    const next = this.nextSources.shift();\n    if (next) {\n      this.add(subscribeToResult(this, next));\n    } else {\n      this.destination.complete();\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { OperatorFunction } from '../interfaces';\n\n/**\n * Groups pairs of consecutive emissions together and emits them as an array of\n * two values.\n *\n * <span class=\"informal\">Puts the current value and previous value together as\n * an array, and emits that.</span>\n *\n * <img src=\"./img/pairwise.png\" width=\"100%\">\n *\n * The Nth emission from the source Observable will cause the output Observable\n * to emit an array [(N-1)th, Nth] of the previous and the current value, as a\n * pair. For this reason, `pairwise` emits on the second and subsequent\n * emissions from the source Observable, but not on the first emission, because\n * there is no previous value in that case.\n *\n * @example <caption>On every click (starting from the second), emit the relative distance to the previous click</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var pairs = clicks.pairwise();\n * var distance = pairs.map(pair => {\n *   var x0 = pair[0].clientX;\n *   var y0 = pair[0].clientY;\n *   var x1 = pair[1].clientX;\n *   var y1 = pair[1].clientY;\n *   return Math.sqrt(Math.pow(x0 - x1, 2) + Math.pow(y0 - y1, 2));\n * });\n * distance.subscribe(x => console.log(x));\n *\n * @see {@link buffer}\n * @see {@link bufferCount}\n *\n * @return {Observable<Array<T>>} An Observable of pairs (as arrays) of\n * consecutive values from the source Observable.\n * @method pairwise\n * @owner Observable\n */\nexport function pairwise<T>(): OperatorFunction<T, [T, T]> {\n  return (source: Observable<T>) => source.lift(new PairwiseOperator());\n}\n\nclass PairwiseOperator<T> implements Operator<T, [T, T]> {\n  call(subscriber: Subscriber<[T, T]>, source: any): any {\n    return source.subscribe(new PairwiseSubscriber(subscriber));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass PairwiseSubscriber<T> extends Subscriber<T> {\n  private prev: T;\n  private hasPrev: boolean = false;\n\n  constructor(destination: Subscriber<[T, T]>) {\n    super(destination);\n  }\n\n  _next(value: T): void {\n    if (this.hasPrev) {\n      this.destination.next([this.prev, value]);\n    } else {\n      this.hasPrev = true;\n    }\n\n    this.prev = value;\n  }\n}\n","import { Subject } from './Subject';\nimport { Subscriber } from './Subscriber';\nimport { Subscription, ISubscription } from './Subscription';\nimport { ObjectUnsubscribedError } from './util/ObjectUnsubscribedError';\n\n/**\n * @class BehaviorSubject<T>\n */\nexport class BehaviorSubject<T> extends Subject<T> {\n\n  constructor(private _value: T) {\n    super();\n  }\n\n  get value(): T {\n    return this.getValue();\n  }\n\n  /** @deprecated internal use only */ _subscribe(subscriber: Subscriber<T>): Subscription {\n    const subscription = super._subscribe(subscriber);\n    if (subscription && !(<ISubscription>subscription).closed) {\n      subscriber.next(this._value);\n    }\n    return subscription;\n  }\n\n  getValue(): T {\n    if (this.hasError) {\n      throw this.thrownError;\n    } else if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    } else {\n      return this._value;\n    }\n  }\n\n  next(value: T): void {\n    super.next(this._value = value);\n  }\n}\n","import { Subject } from './Subject';\nimport { Subscriber } from './Subscriber';\nimport { Subscription } from './Subscription';\n\n/**\n * @class AsyncSubject<T>\n */\nexport class AsyncSubject<T> extends Subject<T> {\n  private value: T = null;\n  private hasNext: boolean = false;\n  private hasCompleted: boolean = false;\n\n  /** @deprecated internal use only */ _subscribe(subscriber: Subscriber<any>): Subscription {\n    if (this.hasError) {\n      subscriber.error(this.thrownError);\n      return Subscription.EMPTY;\n    } else if (this.hasCompleted && this.hasNext) {\n      subscriber.next(this.value);\n      subscriber.complete();\n      return Subscription.EMPTY;\n    }\n    return super._subscribe(subscriber);\n  }\n\n  next(value: T): void {\n    if (!this.hasCompleted) {\n      this.value = value;\n      this.hasNext = true;\n    }\n  }\n\n  error(error: any): void {\n    if (!this.hasCompleted) {\n      super.error(error);\n    }\n  }\n\n  complete(): void {\n    this.hasCompleted = true;\n    if (this.hasNext) {\n      super.next(this.value);\n    }\n    super.complete();\n  }\n}\n","import { AsyncAction } from './AsyncAction';\nimport { Subscription } from '../Subscription';\nimport { QueueScheduler } from './QueueScheduler';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class QueueAction<T> extends AsyncAction<T> {\n\n  constructor(protected scheduler: QueueScheduler,\n              protected work: (this: QueueAction<T>, state?: T) => void) {\n    super(scheduler, work);\n  }\n\n  public schedule(state?: T, delay: number = 0): Subscription {\n    if (delay > 0) {\n      return super.schedule(state, delay);\n    }\n    this.delay = delay;\n    this.state = state;\n    this.scheduler.flush(this);\n    return this;\n  }\n\n  public execute(state: T, delay: number): any {\n    return (delay > 0 || this.closed) ?\n      super.execute(state, delay) :\n      this._execute(state, delay) ;\n  }\n\n  protected requestAsyncId(scheduler: QueueScheduler, id?: any, delay: number = 0): any {\n    // If delay exists and is greater than 0, or if the delay is null (the\n    // action wasn't rescheduled) but was originally scheduled as an async\n    // action, then recycle as an async action.\n    if ((delay !== null && delay > 0) || (delay === null && this.delay > 0)) {\n      return super.requestAsyncId(scheduler, id, delay);\n    }\n    // Otherwise flush the scheduler starting with this action.\n    return scheduler.flush(this);\n  }\n}\n","import { QueueAction } from './QueueAction';\nimport { QueueScheduler } from './QueueScheduler';\n\n/**\n *\n * Queue Scheduler\n *\n * <span class=\"informal\">Put every next task on a queue, instead of executing it immediately</span>\n *\n * `queue` scheduler, when used with delay, behaves the same as {@link async} scheduler.\n *\n * When used without delay, it schedules given task synchronously - executes it right when\n * it is scheduled. However when called recursively, that is when inside the scheduled task,\n * another task is scheduled with queue scheduler, instead of executing immediately as well,\n * that task will be put on a queue and wait for current one to finish.\n *\n * This means that when you execute task with `queue` scheduler, you are sure it will end\n * before any other task scheduled with that scheduler will start.\n *\n * @examples <caption>Schedule recursively first, then do something</caption>\n *\n * Rx.Scheduler.queue.schedule(() => {\n *   Rx.Scheduler.queue.schedule(() => console.log('second')); // will not happen now, but will be put on a queue\n *\n *   console.log('first');\n * });\n *\n * // Logs:\n * // \"first\"\n * // \"second\"\n *\n *\n * @example <caption>Reschedule itself recursively</caption>\n *\n * Rx.Scheduler.queue.schedule(function(state) {\n *   if (state !== 0) {\n *     console.log('before', state);\n *     this.schedule(state - 1); // `this` references currently executing Action,\n *                               // which we reschedule with new state\n *     console.log('after', state);\n *   }\n * }, 0, 3);\n *\n * // In scheduler that runs recursively, you would expect:\n * // \"before\", 3\n * // \"before\", 2\n * // \"before\", 1\n * // \"after\", 1\n * // \"after\", 2\n * // \"after\", 3\n *\n * // But with queue it logs:\n * // \"before\", 3\n * // \"after\", 3\n * // \"before\", 2\n * // \"after\", 2\n * // \"before\", 1\n * // \"after\", 1\n *\n *\n * @static true\n * @name queue\n * @owner Scheduler\n */\n\nexport const queue = new QueueScheduler(QueueAction);\n","import { AsyncScheduler } from './AsyncScheduler';\n\nexport class QueueScheduler extends AsyncScheduler {\n}\n","import { Subject } from './Subject';\nimport { IScheduler } from './Scheduler';\nimport { queue } from './scheduler/queue';\nimport { Subscriber } from './Subscriber';\nimport { Subscription } from './Subscription';\nimport { ObserveOnSubscriber } from './operators/observeOn';\nimport { ObjectUnsubscribedError } from './util/ObjectUnsubscribedError';\nimport { SubjectSubscription } from './SubjectSubscription';\n/**\n * @class ReplaySubject<T>\n */\nexport class ReplaySubject<T> extends Subject<T> {\n  private _events: ReplayEvent<T>[] = [];\n  private _bufferSize: number;\n  private _windowTime: number;\n\n  constructor(bufferSize: number = Number.POSITIVE_INFINITY,\n              windowTime: number = Number.POSITIVE_INFINITY,\n              private scheduler?: IScheduler) {\n    super();\n    this._bufferSize = bufferSize < 1 ? 1 : bufferSize;\n    this._windowTime = windowTime < 1 ? 1 : windowTime;\n  }\n\n  next(value: T): void {\n    const now = this._getNow();\n    this._events.push(new ReplayEvent(now, value));\n    this._trimBufferThenGetEvents();\n    super.next(value);\n  }\n\n  /** @deprecated internal use only */ _subscribe(subscriber: Subscriber<T>): Subscription {\n    const _events = this._trimBufferThenGetEvents();\n    const scheduler = this.scheduler;\n    let subscription: Subscription;\n\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    } else if (this.hasError) {\n      subscription = Subscription.EMPTY;\n    } else if (this.isStopped) {\n      subscription = Subscription.EMPTY;\n    } else {\n      this.observers.push(subscriber);\n      subscription = new SubjectSubscription(this, subscriber);\n    }\n\n    if (scheduler) {\n      subscriber.add(subscriber = new ObserveOnSubscriber<T>(subscriber, scheduler));\n    }\n\n    const len = _events.length;\n    for (let i = 0; i < len && !subscriber.closed; i++) {\n      subscriber.next(_events[i].value);\n    }\n\n    if (this.hasError) {\n      subscriber.error(this.thrownError);\n    } else if (this.isStopped) {\n      subscriber.complete();\n    }\n\n    return subscription;\n  }\n\n  _getNow(): number {\n    return (this.scheduler || queue).now();\n  }\n\n  private _trimBufferThenGetEvents(): ReplayEvent<T>[] {\n    const now = this._getNow();\n    const _bufferSize = this._bufferSize;\n    const _windowTime = this._windowTime;\n    const _events = this._events;\n\n    let eventsCount = _events.length;\n    let spliceCount = 0;\n\n    // Trim events that fall out of the time window.\n    // Start at the front of the list. Break early once\n    // we encounter an event that falls within the window.\n    while (spliceCount < eventsCount) {\n      if ((now - _events[spliceCount].time) < _windowTime) {\n        break;\n      }\n      spliceCount++;\n    }\n\n    if (eventsCount > _bufferSize) {\n      spliceCount = Math.max(spliceCount, eventsCount - _bufferSize);\n    }\n\n    if (spliceCount > 0) {\n      _events.splice(0, spliceCount);\n    }\n\n    return _events;\n  }\n}\n\nclass ReplayEvent<T> {\n  constructor(public time: number, public value: T) {\n  }\n}\n","import { Observable } from '../Observable';\nimport { isArray } from '../util/isArray';\nimport { ArrayObservable } from '../observable/ArrayObservable';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription, TeardownLogic } from '../Subscription';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n\n/**\n * Returns an Observable that mirrors the first source Observable to emit an item.\n * @param {...Observables} ...observables sources used to race for which Observable emits first.\n * @return {Observable} an Observable that mirrors the output of the first Observable to emit an item.\n * @static true\n * @name race\n * @owner Observable\n */\nexport function race<T>(observables: Array<Observable<T>>): Observable<T>;\nexport function race<T>(observables: Array<Observable<any>>): Observable<T>;\nexport function race<T>(...observables: Array<Observable<T> | Array<Observable<T>>>): Observable<T>;\nexport function race<T>(...observables: Array<Observable<any> | Array<Observable<any>>>): Observable<T> {\n  // if the only argument is an array, it was most likely called with\n  // `race([obs1, obs2, ...])`\n  if (observables.length === 1) {\n    if (isArray(observables[0])) {\n      observables = <Array<Observable<any>>>observables[0];\n    } else {\n      return <Observable<any>>observables[0];\n    }\n  }\n\n  return new ArrayObservable<T>(<any>observables).lift(new RaceOperator<T>());\n}\n\nexport class RaceOperator<T> implements Operator<T, T> {\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new RaceSubscriber(subscriber));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class RaceSubscriber<T> extends OuterSubscriber<T, T> {\n  private hasFirst: boolean = false;\n  private observables: Observable<any>[] = [];\n  private subscriptions: Subscription[] = [];\n\n  constructor(destination: Subscriber<T>) {\n    super(destination);\n  }\n\n  protected _next(observable: any): void {\n    this.observables.push(observable);\n  }\n\n  protected _complete() {\n    const observables = this.observables;\n    const len = observables.length;\n\n    if (len === 0) {\n      this.destination.complete();\n    } else {\n      for (let i = 0; i < len && !this.hasFirst; i++) {\n        let observable = observables[i];\n        let subscription = subscribeToResult(this, observable, observable, i);\n\n        if (this.subscriptions) {\n          this.subscriptions.push(subscription);\n        }\n        this.add(subscription);\n      }\n      this.observables = null;\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: T,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, T>): void {\n    if (!this.hasFirst) {\n      this.hasFirst = true;\n\n      for (let i = 0; i < this.subscriptions.length; i++) {\n        if (i !== outerIndex) {\n          let subscription = this.subscriptions[i];\n\n          subscription.unsubscribe();\n          this.remove(subscription);\n        }\n      }\n\n      this.subscriptions = null;\n    }\n\n    this.destination.next(innerValue);\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { EmptyObservable } from '../observable/EmptyObservable';\nimport { TeardownLogic } from '../Subscription';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Returns an Observable that repeats the stream of items emitted by the source Observable at most count times.\n *\n * <img src=\"./img/repeat.png\" width=\"100%\">\n *\n * @param {number} [count] The number of times the source Observable items are repeated, a count of 0 will yield\n * an empty Observable.\n * @return {Observable} An Observable that repeats the stream of items emitted by the source Observable at most\n * count times.\n * @method repeat\n * @owner Observable\n */\nexport function repeat<T>(count: number = -1): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => {\n    if (count === 0) {\n      return new EmptyObservable<T>();\n    } else if (count < 0) {\n      return source.lift(new RepeatOperator(-1, source));\n    } else {\n      return source.lift(new RepeatOperator(count - 1, source));\n    }\n  };\n}\n\nclass RepeatOperator<T> implements Operator<T, T> {\n  constructor(private count: number,\n              private source: Observable<T>) {\n  }\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new RepeatSubscriber(subscriber, this.count, this.source));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass RepeatSubscriber<T> extends Subscriber<T> {\n  constructor(destination: Subscriber<any>,\n              private count: number,\n              private source: Observable<T>) {\n    super(destination);\n  }\n  complete() {\n    if (!this.isStopped) {\n      const { source, count } = this;\n      if (count === 0) {\n        return super.complete();\n      } else if (count > -1) {\n        this.count = count - 1;\n      }\n      source.subscribe(this._unsubscribeAndRecycle());\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { Subject } from '../Subject';\nimport { Subscription, TeardownLogic } from '../Subscription';\nimport { tryCatch } from '../util/tryCatch';\nimport { errorObject } from '../util/errorObject';\n\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Returns an Observable that mirrors the source Observable with the exception of a `complete`. If the source\n * Observable calls `complete`, this method will emit to the Observable returned from `notifier`. If that Observable\n * calls `complete` or `error`, then this method will call `complete` or `error` on the child subscription. Otherwise\n * this method will resubscribe to the source Observable.\n *\n * <img src=\"./img/repeatWhen.png\" width=\"100%\">\n *\n * @param {function(notifications: Observable): Observable} notifier - Receives an Observable of notifications with\n * which a user can `complete` or `error`, aborting the repetition.\n * @return {Observable} The source Observable modified with repeat logic.\n * @method repeatWhen\n * @owner Observable\n */\nexport function repeatWhen<T>(notifier: (notifications: Observable<any>) => Observable<any>): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new RepeatWhenOperator(notifier));\n}\n\nclass RepeatWhenOperator<T> implements Operator<T, T> {\n  constructor(protected notifier: (notifications: Observable<any>) => Observable<any>) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new RepeatWhenSubscriber(subscriber, this.notifier, source));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass RepeatWhenSubscriber<T, R> extends OuterSubscriber<T, R> {\n\n  private notifications: Subject<any>;\n  private retries: Observable<any>;\n  private retriesSubscription: Subscription;\n  private sourceIsBeingSubscribedTo: boolean = true;\n\n  constructor(destination: Subscriber<R>,\n              private notifier: (notifications: Observable<any>) => Observable<any>,\n              private source: Observable<T>) {\n    super(destination);\n  }\n\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this.sourceIsBeingSubscribedTo = true;\n    this.source.subscribe(this);\n  }\n\n  notifyComplete(innerSub: InnerSubscriber<T, R>): void {\n    if (this.sourceIsBeingSubscribedTo === false) {\n      return super.complete();\n    }\n  }\n\n  complete() {\n    this.sourceIsBeingSubscribedTo = false;\n\n    if (!this.isStopped) {\n      if (!this.retries) {\n        this.subscribeToRetries();\n      }\n      if (!this.retriesSubscription || this.retriesSubscription.closed) {\n        return super.complete();\n      }\n\n      this._unsubscribeAndRecycle();\n      this.notifications.next();\n    }\n  }\n\n  /** @deprecated internal use only */ _unsubscribe() {\n    const { notifications, retriesSubscription } = this;\n    if (notifications) {\n      notifications.unsubscribe();\n      this.notifications = null;\n    }\n    if (retriesSubscription) {\n      retriesSubscription.unsubscribe();\n      this.retriesSubscription = null;\n    }\n    this.retries = null;\n  }\n\n  /** @deprecated internal use only */ _unsubscribeAndRecycle(): Subscriber<T> {\n    const { notifications, retries, retriesSubscription } = this;\n    this.notifications = null;\n    this.retries = null;\n    this.retriesSubscription = null;\n    super._unsubscribeAndRecycle();\n    this.notifications = notifications;\n    this.retries = retries;\n    this.retriesSubscription = retriesSubscription;\n    return this;\n  }\n\n  private subscribeToRetries() {\n    this.notifications = new Subject();\n    const retries = tryCatch(this.notifier)(this.notifications);\n    if (retries === errorObject) {\n      return super.complete();\n    }\n    this.retries = retries;\n    this.retriesSubscription = subscribeToResult(this, retries);\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { TeardownLogic } from '../Subscription';\n\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Returns an Observable that mirrors the source Observable with the exception of an `error`. If the source Observable\n * calls `error`, this method will resubscribe to the source Observable for a maximum of `count` resubscriptions (given\n * as a number parameter) rather than propagating the `error` call.\n *\n * <img src=\"./img/retry.png\" width=\"100%\">\n *\n * Any and all items emitted by the source Observable will be emitted by the resulting Observable, even those emitted\n * during failed subscriptions. For example, if an Observable fails at first but emits [1, 2] then succeeds the second\n * time and emits: [1, 2, 3, 4, 5] then the complete stream of emissions and notifications\n * would be: [1, 2, 1, 2, 3, 4, 5, `complete`].\n * @param {number} count - Number of retry attempts before failing.\n * @return {Observable} The source Observable modified with the retry logic.\n * @method retry\n * @owner Observable\n */\nexport function retry<T>(count: number = -1): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new RetryOperator(count, source));\n}\n\nclass RetryOperator<T> implements Operator<T, T> {\n  constructor(private count: number,\n              private source: Observable<T>) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new RetrySubscriber(subscriber, this.count, this.source));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass RetrySubscriber<T> extends Subscriber<T> {\n  constructor(destination: Subscriber<any>,\n              private count: number,\n              private source: Observable<T>) {\n    super(destination);\n  }\n  error(err: any) {\n    if (!this.isStopped) {\n      const { source, count } = this;\n      if (count === 0) {\n        return super.error(err);\n      } else if (count > -1) {\n        this.count = count - 1;\n      }\n      source.subscribe(this._unsubscribeAndRecycle());\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { Subject } from '../Subject';\nimport { Subscription, TeardownLogic } from '../Subscription';\nimport { tryCatch } from '../util/tryCatch';\nimport { errorObject } from '../util/errorObject';\n\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Returns an Observable that mirrors the source Observable with the exception of an `error`. If the source Observable\n * calls `error`, this method will emit the Throwable that caused the error to the Observable returned from `notifier`.\n * If that Observable calls `complete` or `error` then this method will call `complete` or `error` on the child\n * subscription. Otherwise this method will resubscribe to the source Observable.\n *\n * <img src=\"./img/retryWhen.png\" width=\"100%\">\n *\n * @param {function(errors: Observable): Observable} notifier - Receives an Observable of notifications with which a\n * user can `complete` or `error`, aborting the retry.\n * @return {Observable} The source Observable modified with retry logic.\n * @method retryWhen\n * @owner Observable\n */\nexport function retryWhen<T>(notifier: (errors: Observable<any>) => Observable<any>): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new RetryWhenOperator(notifier, source));\n}\n\nclass RetryWhenOperator<T> implements Operator<T, T> {\n  constructor(protected notifier: (errors: Observable<any>) => Observable<any>,\n              public source: Observable<T>) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new RetryWhenSubscriber(subscriber, this.notifier, this.source));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass RetryWhenSubscriber<T, R> extends OuterSubscriber<T, R> {\n\n  private errors: Subject<any>;\n  private retries: Observable<any>;\n  private retriesSubscription: Subscription;\n\n  constructor(destination: Subscriber<R>,\n              private notifier: (errors: Observable<any>) => Observable<any>,\n              private source: Observable<T>) {\n    super(destination);\n  }\n\n  error(err: any) {\n    if (!this.isStopped) {\n\n      let errors = this.errors;\n      let retries: any = this.retries;\n      let retriesSubscription = this.retriesSubscription;\n\n      if (!retries) {\n        errors = new Subject();\n        retries = tryCatch(this.notifier)(errors);\n        if (retries === errorObject) {\n          return super.error(errorObject.e);\n        }\n        retriesSubscription = subscribeToResult(this, retries);\n      } else {\n        this.errors = null;\n        this.retriesSubscription = null;\n      }\n\n      this._unsubscribeAndRecycle();\n\n      this.errors = errors;\n      this.retries = retries;\n      this.retriesSubscription = retriesSubscription;\n\n      errors.next(err);\n    }\n  }\n\n  /** @deprecated internal use only */ _unsubscribe() {\n    const { errors, retriesSubscription } = this;\n    if (errors) {\n      errors.unsubscribe();\n      this.errors = null;\n    }\n    if (retriesSubscription) {\n      retriesSubscription.unsubscribe();\n      this.retriesSubscription = null;\n    }\n    this.retries = null;\n  }\n\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    const { errors, retries, retriesSubscription } = this;\n    this.errors = null;\n    this.retries = null;\n    this.retriesSubscription = null;\n\n    this._unsubscribeAndRecycle();\n\n    this.errors = errors;\n    this.retries = retries;\n    this.retriesSubscription = retriesSubscription;\n\n    this.source.subscribe(this);\n  }\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { TeardownLogic } from '../Subscription';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Emits the most recently emitted value from the source Observable whenever\n * another Observable, the `notifier`, emits.\n *\n * <span class=\"informal\">It's like {@link sampleTime}, but samples whenever\n * the `notifier` Observable emits something.</span>\n *\n * <img src=\"./img/sample.png\" width=\"100%\">\n *\n * Whenever the `notifier` Observable emits a value or completes, `sample`\n * looks at the source Observable and emits whichever value it has most recently\n * emitted since the previous sampling, unless the source has not emitted\n * anything since the previous sampling. The `notifier` is subscribed to as soon\n * as the output Observable is subscribed.\n *\n * @example <caption>On every click, sample the most recent \"seconds\" timer</caption>\n * var seconds = Rx.Observable.interval(1000);\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = seconds.sample(clicks);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link audit}\n * @see {@link debounce}\n * @see {@link sampleTime}\n * @see {@link throttle}\n *\n * @param {Observable<any>} notifier The Observable to use for sampling the\n * source Observable.\n * @return {Observable<T>} An Observable that emits the results of sampling the\n * values emitted by the source Observable whenever the notifier Observable\n * emits value or completes.\n * @method sample\n * @owner Observable\n */\nexport function sample<T>(notifier: Observable<any>): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new SampleOperator(notifier));\n}\n\nclass SampleOperator<T> implements Operator<T, T> {\n  constructor(private notifier: Observable<any>) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    const sampleSubscriber = new SampleSubscriber(subscriber);\n    const subscription = source.subscribe(sampleSubscriber);\n    subscription.add(subscribeToResult(sampleSubscriber, this.notifier));\n    return subscription;\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SampleSubscriber<T, R> extends OuterSubscriber<T, R> {\n  private value: T;\n  private hasValue: boolean = false;\n\n  protected _next(value: T) {\n    this.value = value;\n    this.hasValue = true;\n  }\n\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this.emitValue();\n  }\n\n  notifyComplete(): void {\n    this.emitValue();\n  }\n\n  emitValue() {\n    if (this.hasValue) {\n      this.hasValue = false;\n      this.destination.next(this.value);\n    }\n  }\n}\n","import { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { IScheduler } from '../Scheduler';\nimport { Action } from '../scheduler/Action';\nimport { async } from '../scheduler/async';\nimport { TeardownLogic } from '../Subscription';\n\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Emits the most recently emitted value from the source Observable within\n * periodic time intervals.\n *\n * <span class=\"informal\">Samples the source Observable at periodic time\n * intervals, emitting what it samples.</span>\n *\n * <img src=\"./img/sampleTime.png\" width=\"100%\">\n *\n * `sampleTime` periodically looks at the source Observable and emits whichever\n * value it has most recently emitted since the previous sampling, unless the\n * source has not emitted anything since the previous sampling. The sampling\n * happens periodically in time every `period` milliseconds (or the time unit\n * defined by the optional `scheduler` argument). The sampling starts as soon as\n * the output Observable is subscribed.\n *\n * @example <caption>Every second, emit the most recent click at most once</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.sampleTime(1000);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link auditTime}\n * @see {@link debounceTime}\n * @see {@link delay}\n * @see {@link sample}\n * @see {@link throttleTime}\n *\n * @param {number} period The sampling period expressed in milliseconds or the\n * time unit determined internally by the optional `scheduler`.\n * @param {Scheduler} [scheduler=async] The {@link IScheduler} to use for\n * managing the timers that handle the sampling.\n * @return {Observable<T>} An Observable that emits the results of sampling the\n * values emitted by the source Observable at the specified time interval.\n * @method sampleTime\n * @owner Observable\n */\nexport function sampleTime<T>(period: number, scheduler: IScheduler = async): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new SampleTimeOperator(period, scheduler));\n}\n\nclass SampleTimeOperator<T> implements Operator<T, T> {\n  constructor(private period: number,\n              private scheduler: IScheduler) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new SampleTimeSubscriber(subscriber, this.period, this.scheduler));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SampleTimeSubscriber<T> extends Subscriber<T> {\n  lastValue: T;\n  hasValue: boolean = false;\n\n  constructor(destination: Subscriber<T>,\n              private period: number,\n              private scheduler: IScheduler) {\n    super(destination);\n    this.add(scheduler.schedule(dispatchNotification, period, { subscriber: this, period }));\n  }\n\n  protected _next(value: T) {\n    this.lastValue = value;\n    this.hasValue = true;\n  }\n\n  notifyNext() {\n    if (this.hasValue) {\n      this.hasValue = false;\n      this.destination.next(this.lastValue);\n    }\n  }\n}\n\nfunction dispatchNotification<T>(this: Action<any>, state: any) {\n  let { subscriber, period } = state;\n  subscriber.notifyNext();\n  this.schedule(state, period);\n}\n","import { Operator } from '../Operator';\nimport { Observer } from '../Observer';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { tryCatch } from '../util/tryCatch';\nimport { errorObject } from '../util/errorObject';\n\nimport { OperatorFunction } from '../interfaces';\n\n/**\n * Compares all values of two observables in sequence using an optional comparor function\n * and returns an observable of a single boolean value representing whether or not the two sequences\n * are equal.\n *\n * <span class=\"informal\">Checks to see of all values emitted by both observables are equal, in order.</span>\n *\n * <img src=\"./img/sequenceEqual.png\" width=\"100%\">\n *\n * `sequenceEqual` subscribes to two observables and buffers incoming values from each observable. Whenever either\n * observable emits a value, the value is buffered and the buffers are shifted and compared from the bottom\n * up; If any value pair doesn't match, the returned observable will emit `false` and complete. If one of the\n * observables completes, the operator will wait for the other observable to complete; If the other\n * observable emits before completing, the returned observable will emit `false` and complete. If one observable never\n * completes or emits after the other complets, the returned observable will never complete.\n *\n * @example <caption>figure out if the Konami code matches</caption>\n * var code = Rx.Observable.from([\n *  \"ArrowUp\",\n *  \"ArrowUp\",\n *  \"ArrowDown\",\n *  \"ArrowDown\",\n *  \"ArrowLeft\",\n *  \"ArrowRight\",\n *  \"ArrowLeft\",\n *  \"ArrowRight\",\n *  \"KeyB\",\n *  \"KeyA\",\n *  \"Enter\" // no start key, clearly.\n * ]);\n *\n * var keys = Rx.Observable.fromEvent(document, 'keyup')\n *  .map(e => e.code);\n * var matches = keys.bufferCount(11, 1)\n *  .mergeMap(\n *    last11 =>\n *      Rx.Observable.from(last11)\n *        .sequenceEqual(code)\n *   );\n * matches.subscribe(matched => console.log('Successful cheat at Contra? ', matched));\n *\n * @see {@link combineLatest}\n * @see {@link zip}\n * @see {@link withLatestFrom}\n *\n * @param {Observable} compareTo The observable sequence to compare the source sequence to.\n * @param {function} [comparor] An optional function to compare each value pair\n * @return {Observable} An Observable of a single boolean value representing whether or not\n * the values emitted by both observables were equal in sequence.\n * @method sequenceEqual\n * @owner Observable\n */\nexport function sequenceEqual<T>(compareTo: Observable<T>,\n                                 comparor?: (a: T, b: T) => boolean): OperatorFunction<T, boolean> {\n  return (source: Observable<T>) => source.lift(new SequenceEqualOperator(compareTo, comparor));\n}\n\nexport class SequenceEqualOperator<T> implements Operator<T, boolean> {\n  constructor(private compareTo: Observable<T>,\n              private comparor: (a: T, b: T) => boolean) {\n  }\n\n  call(subscriber: Subscriber<boolean>, source: any): any {\n    return source.subscribe(new SequenceEqualSubscriber(subscriber, this.compareTo, this.comparor));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class SequenceEqualSubscriber<T, R> extends Subscriber<T> {\n  private _a: T[] = [];\n  private _b: T[] = [];\n  private _oneComplete = false;\n\n  constructor(destination: Observer<R>,\n              private compareTo: Observable<T>,\n              private comparor: (a: T, b: T) => boolean) {\n    super(destination);\n    this.add(compareTo.subscribe(new SequenceEqualCompareToSubscriber(destination, this)));\n  }\n\n  protected _next(value: T): void {\n    if (this._oneComplete && this._b.length === 0) {\n      this.emit(false);\n    } else {\n      this._a.push(value);\n      this.checkValues();\n    }\n  }\n\n  public _complete(): void {\n    if (this._oneComplete) {\n      this.emit(this._a.length === 0 && this._b.length === 0);\n    } else {\n      this._oneComplete = true;\n    }\n  }\n\n  checkValues() {\n    const { _a, _b, comparor } = this;\n    while (_a.length > 0 && _b.length > 0) {\n      let a = _a.shift();\n      let b = _b.shift();\n      let areEqual = false;\n      if (comparor) {\n        areEqual = tryCatch(comparor)(a, b);\n        if (areEqual === errorObject) {\n          this.destination.error(errorObject.e);\n        }\n      } else {\n        areEqual = a === b;\n      }\n      if (!areEqual) {\n        this.emit(false);\n      }\n    }\n  }\n\n  emit(value: boolean) {\n    const { destination } = this;\n    destination.next(value);\n    destination.complete();\n  }\n\n  nextB(value: T) {\n    if (this._oneComplete && this._a.length === 0) {\n      this.emit(false);\n    } else {\n      this._b.push(value);\n      this.checkValues();\n    }\n  }\n}\n\nclass SequenceEqualCompareToSubscriber<T, R> extends Subscriber<T> {\n  constructor(destination: Observer<R>, private parent: SequenceEqualSubscriber<T, R>) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    this.parent.nextB(value);\n  }\n\n  protected _error(err: any): void {\n    this.parent.error(err);\n  }\n\n  protected _complete(): void {\n    this.parent._complete();\n  }\n}\n","import { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observer } from '../Observer';\nimport { EmptyError } from '../util/EmptyError';\nimport { TeardownLogic } from '../Subscription';\n\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Returns an Observable that emits the single item emitted by the source Observable that matches a specified\n * predicate, if that Observable emits one such item. If the source Observable emits more than one such item or no\n * such items, notify of an IllegalArgumentException or NoSuchElementException respectively.\n *\n * <img src=\"./img/single.png\" width=\"100%\">\n *\n * @throws {EmptyError} Delivers an EmptyError to the Observer's `error`\n * callback if the Observable completes before any `next` notification was sent.\n * @param {Function} predicate - A predicate function to evaluate items emitted by the source Observable.\n * @return {Observable<T>} An Observable that emits the single item emitted by the source Observable that matches\n * the predicate.\n .\n * @method single\n * @owner Observable\n */\nexport function single<T>(predicate?: (value: T, index: number, source: Observable<T>) => boolean): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new SingleOperator(predicate, source));\n}\n\nclass SingleOperator<T> implements Operator<T, T> {\n  constructor(private predicate?: (value: T, index: number, source: Observable<T>) => boolean,\n              private source?: Observable<T>) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new SingleSubscriber(subscriber, this.predicate, this.source));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SingleSubscriber<T> extends Subscriber<T> {\n  private seenValue: boolean = false;\n  private singleValue: T;\n  private index: number = 0;\n\n  constructor(destination: Observer<T>,\n              private predicate?: (value: T, index: number, source: Observable<T>) => boolean,\n              private source?: Observable<T>) {\n    super(destination);\n  }\n\n  private applySingleValue(value: T): void {\n    if (this.seenValue) {\n      this.destination.error('Sequence contains more than one element');\n    } else {\n      this.seenValue = true;\n      this.singleValue = value;\n    }\n  }\n\n  protected _next(value: T): void {\n    const index = this.index++;\n\n    if (this.predicate) {\n      this.tryNext(value, index);\n    } else {\n      this.applySingleValue(value);\n    }\n  }\n\n  private tryNext(value: T, index: number): void {\n    try {\n      if (this.predicate(value, index, this.source)) {\n        this.applySingleValue(value);\n      }\n    } catch (err) {\n      this.destination.error(err);\n    }\n  }\n\n  protected _complete(): void {\n    const destination = this.destination;\n\n    if (this.index > 0) {\n      destination.next(this.seenValue ? this.singleValue : undefined);\n      destination.complete();\n    } else {\n      destination.error(new EmptyError);\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { TeardownLogic } from '../Subscription';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Returns an Observable that skips the first `count` items emitted by the source Observable.\n *\n * <img src=\"./img/skip.png\" width=\"100%\">\n *\n * @param {Number} count - The number of times, items emitted by source Observable should be skipped.\n * @return {Observable} An Observable that skips values emitted by the source Observable.\n *\n * @method skip\n * @owner Observable\n */\nexport function skip<T>(count: number): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new SkipOperator(count));\n}\n\nclass SkipOperator<T> implements Operator<T, T> {\n  constructor(private total: number) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new SkipSubscriber(subscriber, this.total));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SkipSubscriber<T> extends Subscriber<T> {\n  count: number = 0;\n\n  constructor(destination: Subscriber<T>, private total: number) {\n    super(destination);\n  }\n\n  protected _next(x: T) {\n    if (++this.count > this.total) {\n      this.destination.next(x);\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { ArgumentOutOfRangeError } from '../util/ArgumentOutOfRangeError';\nimport { Observable } from '../Observable';\nimport { TeardownLogic } from '../Subscription';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Skip the last `count` values emitted by the source Observable.\n *\n * <img src=\"./img/skipLast.png\" width=\"100%\">\n *\n * `skipLast` returns an Observable that accumulates a queue with a length\n * enough to store the first `count` values. As more values are received,\n * values are taken from the front of the queue and produced on the result\n * sequence. This causes values to be delayed.\n *\n * @example <caption>Skip the last 2 values of an Observable with many values</caption>\n * var many = Rx.Observable.range(1, 5);\n * var skipLastTwo = many.skipLast(2);\n * skipLastTwo.subscribe(x => console.log(x));\n *\n * // Results in:\n * // 1 2 3\n *\n * @see {@link skip}\n * @see {@link skipUntil}\n * @see {@link skipWhile}\n * @see {@link take}\n *\n * @throws {ArgumentOutOfRangeError} When using `skipLast(i)`, it throws\n * ArgumentOutOrRangeError if `i < 0`.\n *\n * @param {number} count Number of elements to skip from the end of the source Observable.\n * @returns {Observable<T>} An Observable that skips the last count values\n * emitted by the source Observable.\n * @method skipLast\n * @owner Observable\n */\nexport function skipLast<T>(count: number): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new SkipLastOperator(count));\n}\n\nclass SkipLastOperator<T> implements Operator<T, T> {\n  constructor(private _skipCount: number) {\n    if (this._skipCount < 0) {\n      throw new ArgumentOutOfRangeError;\n    }\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    if (this._skipCount === 0) {\n      // If we don't want to skip any values then just subscribe\n      // to Subscriber without any further logic.\n      return source.subscribe(new Subscriber(subscriber));\n    } else {\n      return source.subscribe(new SkipLastSubscriber(subscriber, this._skipCount));\n    }\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SkipLastSubscriber<T> extends Subscriber<T> {\n  private _ring: T[];\n  private _count: number = 0;\n\n  constructor(destination: Subscriber<T>, private _skipCount: number) {\n    super(destination);\n    this._ring = new Array<T>(_skipCount);\n  }\n\n  protected _next(value: T): void {\n    const skipCount = this._skipCount;\n    const count = this._count++;\n\n    if (count < skipCount) {\n      this._ring[count] = value;\n    } else {\n      const currentIndex = count % skipCount;\n      const ring = this._ring;\n      const oldValue = ring[currentIndex];\n\n      ring[currentIndex] = value;\n      this.destination.next(oldValue);\n    }\n  }\n}","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { TeardownLogic } from '../Subscription';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Returns an Observable that skips items emitted by the source Observable until a second Observable emits an item.\n *\n * <img src=\"./img/skipUntil.png\" width=\"100%\">\n *\n * @param {Observable} notifier - The second Observable that has to emit an item before the source Observable's elements begin to\n * be mirrored by the resulting Observable.\n * @return {Observable<T>} An Observable that skips items from the source Observable until the second Observable emits\n * an item, then emits the remaining items.\n * @method skipUntil\n * @owner Observable\n */\nexport function skipUntil<T>(notifier: Observable<any>): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new SkipUntilOperator(notifier));\n}\n\nclass SkipUntilOperator<T> implements Operator<T, T> {\n  constructor(private notifier: Observable<any>) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new SkipUntilSubscriber(subscriber, this.notifier));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SkipUntilSubscriber<T, R> extends OuterSubscriber<T, R> {\n\n  private hasValue: boolean = false;\n  private isInnerStopped: boolean = false;\n\n  constructor(destination: Subscriber<any>,\n              notifier: Observable<any>) {\n    super(destination);\n    this.add(subscribeToResult(this, notifier));\n  }\n\n  protected _next(value: T) {\n    if (this.hasValue) {\n      super._next(value);\n    }\n  }\n\n  protected _complete() {\n    if (this.isInnerStopped) {\n      super._complete();\n    } else {\n      this.unsubscribe();\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this.hasValue = true;\n  }\n\n  notifyComplete(): void {\n    this.isInnerStopped = true;\n    if (this.isStopped) {\n      super._complete();\n    }\n  }\n}\n","import { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { TeardownLogic } from '../Subscription';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Returns an Observable that skips all items emitted by the source Observable as long as a specified condition holds\n * true, but emits all further source items as soon as the condition becomes false.\n *\n * <img src=\"./img/skipWhile.png\" width=\"100%\">\n *\n * @param {Function} predicate - A function to test each item emitted from the source Observable.\n * @return {Observable<T>} An Observable that begins emitting items emitted by the source Observable when the\n * specified predicate becomes false.\n * @method skipWhile\n * @owner Observable\n */\nexport function skipWhile<T>(predicate: (value: T, index: number) => boolean): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new SkipWhileOperator(predicate));\n}\n\nclass SkipWhileOperator<T> implements Operator<T, T> {\n  constructor(private predicate: (value: T, index: number) => boolean) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new SkipWhileSubscriber(subscriber, this.predicate));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SkipWhileSubscriber<T> extends Subscriber<T> {\n  private skipping: boolean = true;\n  private index: number = 0;\n\n  constructor(destination: Subscriber<T>,\n              private predicate: (value: T, index: number) => boolean) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    const destination = this.destination;\n    if (this.skipping) {\n      this.tryCallPredicate(value);\n    }\n\n    if (!this.skipping) {\n      destination.next(value);\n    }\n  }\n\n  private tryCallPredicate(value: T): void {\n    try {\n      const result = this.predicate(value, this.index++);\n      this.skipping = Boolean(result);\n    } catch (err) {\n      this.destination.error(err);\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Observable, ObservableInput } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OperatorFunction } from '../interfaces';\n\n/* tslint:disable:max-line-length */\nexport function switchMap<T, R>(project: (value: T, index: number) => ObservableInput<R>): OperatorFunction<T, R>;\nexport function switchMap<T, I, R>(project: (value: T, index: number) => ObservableInput<I>, resultSelector: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable, emitting values only from the most recently projected Observable.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link switch}.</span>\n *\n * <img src=\"./img/switchMap.png\" width=\"100%\">\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an (so-called \"inner\") Observable. Each time it observes one of these\n * inner Observables, the output Observable begins emitting the items emitted by\n * that inner Observable. When a new inner Observable is emitted, `switchMap`\n * stops emitting items from the earlier-emitted inner Observable and begins\n * emitting items from the new one. It continues to behave like this for\n * subsequent inner Observables.\n *\n * @example <caption>Rerun an interval Observable on every click event</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.switchMap((ev) => Rx.Observable.interval(1000));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link concatMap}\n * @see {@link exhaustMap}\n * @see {@link mergeMap}\n * @see {@link switch}\n * @see {@link switchMapTo}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\n * A function to produce the value on the output Observable based on the values\n * and the indices of the source (outer) emission and the inner Observable\n * emission. The arguments passed to this function are:\n * - `outerValue`: the value that came from the source\n * - `innerValue`: the value that came from the projected Observable\n * - `outerIndex`: the \"index\" of the value that came from the source\n * - `innerIndex`: the \"index\" of the value from the projected Observable\n * @return {Observable} An Observable that emits the result of applying the\n * projection function (and the optional `resultSelector`) to each item emitted\n * by the source Observable and taking only the values from the most recently\n * projected inner Observable.\n * @method switchMap\n * @owner Observable\n */\nexport function switchMap<T, I, R>(\n  project: (value: T, index: number) => ObservableInput<I>,\n  resultSelector?: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R\n): OperatorFunction<T, I | R> {\n  return function switchMapOperatorFunction(source: Observable<T>): Observable<I | R> {\n    return source.lift(new SwitchMapOperator(project, resultSelector));\n  };\n}\n\nclass SwitchMapOperator<T, I, R> implements Operator<T, I> {\n  constructor(private project: (value: T, index: number) => ObservableInput<I>,\n              private resultSelector?: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R) {\n  }\n\n  call(subscriber: Subscriber<I>, source: any): any {\n    return source.subscribe(new SwitchMapSubscriber(subscriber, this.project, this.resultSelector));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SwitchMapSubscriber<T, I, R> extends OuterSubscriber<T, I> {\n  private index: number = 0;\n  private innerSubscription: Subscription;\n\n  constructor(destination: Subscriber<I>,\n              private project: (value: T, index: number) => ObservableInput<I>,\n              private resultSelector?: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R) {\n    super(destination);\n  }\n\n  protected _next(value: T) {\n    let result: ObservableInput<I>;\n    const index = this.index++;\n    try {\n      result = this.project(value, index);\n    } catch (error) {\n      this.destination.error(error);\n      return;\n    }\n    this._innerSub(result, value, index);\n  }\n\n  private _innerSub(result: ObservableInput<I>, value: T, index: number) {\n    const innerSubscription = this.innerSubscription;\n    if (innerSubscription) {\n      innerSubscription.unsubscribe();\n    }\n    this.add(this.innerSubscription = subscribeToResult(this, result, value, index));\n  }\n\n  protected _complete(): void {\n    const {innerSubscription} = this;\n    if (!innerSubscription || innerSubscription.closed) {\n      super._complete();\n    }\n  }\n\n  /** @deprecated internal use only */ _unsubscribe() {\n    this.innerSubscription = null;\n  }\n\n  notifyComplete(innerSub: Subscription): void {\n    this.remove(innerSub);\n    this.innerSubscription = null;\n    if (this.isStopped) {\n      super._complete();\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: I,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, I>): void {\n    if (this.resultSelector) {\n      this._tryNotifyNext(outerValue, innerValue, outerIndex, innerIndex);\n    } else {\n      this.destination.next(innerValue);\n    }\n  }\n\n  private _tryNotifyNext(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): void {\n    let result: R;\n    try {\n      result = this.resultSelector(outerValue, innerValue, outerIndex, innerIndex);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    this.destination.next(result);\n  }\n}\n","import { Operator } from '../Operator';\nimport { Observable, ObservableInput } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OperatorFunction } from '../interfaces';\n\n/* tslint:disable:max-line-length */\nexport function switchMapTo<T, R>(observable: ObservableInput<R>): OperatorFunction<T, R>;\nexport function switchMapTo<T, I, R>(observable: ObservableInput<I>, resultSelector: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Projects each source value to the same Observable which is flattened multiple\n * times with {@link switch} in the output Observable.\n *\n * <span class=\"informal\">It's like {@link switchMap}, but maps each value\n * always to the same inner Observable.</span>\n *\n * <img src=\"./img/switchMapTo.png\" width=\"100%\">\n *\n * Maps each source value to the given Observable `innerObservable` regardless\n * of the source value, and then flattens those resulting Observables into one\n * single Observable, which is the output Observable. The output Observables\n * emits values only from the most recently emitted instance of\n * `innerObservable`.\n *\n * @example <caption>Rerun an interval Observable on every click event</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.switchMapTo(Rx.Observable.interval(1000));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link concatMapTo}\n * @see {@link switch}\n * @see {@link switchMap}\n * @see {@link mergeMapTo}\n *\n * @param {ObservableInput} innerObservable An Observable to replace each value from\n * the source Observable.\n * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\n * A function to produce the value on the output Observable based on the values\n * and the indices of the source (outer) emission and the inner Observable\n * emission. The arguments passed to this function are:\n * - `outerValue`: the value that came from the source\n * - `innerValue`: the value that came from the projected Observable\n * - `outerIndex`: the \"index\" of the value that came from the source\n * - `innerIndex`: the \"index\" of the value from the projected Observable\n * @return {Observable} An Observable that emits items from the given\n * `innerObservable` (and optionally transformed through `resultSelector`) every\n * time a value is emitted on the source Observable, and taking only the values\n * from the most recently projected inner Observable.\n * @method switchMapTo\n * @owner Observable\n */\nexport function switchMapTo<T, I, R>(innerObservable: Observable<I>,\n                                     resultSelector?: (outerValue: T,\n                                                       innerValue: I,\n                                                       outerIndex: number,\n                                                       innerIndex: number) => R): OperatorFunction<T, I | R> {\n  return (source: Observable<T>) => source.lift(new SwitchMapToOperator(innerObservable, resultSelector));\n}\n\nclass SwitchMapToOperator<T, I, R> implements Operator<T, I> {\n  constructor(private observable: Observable<I>,\n              private resultSelector?: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R) {\n  }\n\n  call(subscriber: Subscriber<I>, source: any): any {\n    return source.subscribe(new SwitchMapToSubscriber(subscriber, this.observable, this.resultSelector));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SwitchMapToSubscriber<T, I, R> extends OuterSubscriber<T, I> {\n  private index: number = 0;\n  private innerSubscription: Subscription;\n\n  constructor(destination: Subscriber<I>,\n              private inner: Observable<I>,\n              private resultSelector?: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R) {\n    super(destination);\n  }\n\n  protected _next(value: any) {\n    const innerSubscription = this.innerSubscription;\n    if (innerSubscription) {\n      innerSubscription.unsubscribe();\n    }\n    this.add(this.innerSubscription = subscribeToResult(this, this.inner, value, this.index++));\n  }\n\n  protected _complete() {\n    const {innerSubscription} = this;\n    if (!innerSubscription || innerSubscription.closed) {\n      super._complete();\n    }\n  }\n\n  /** @deprecated internal use only */ _unsubscribe() {\n    this.innerSubscription = null;\n  }\n\n  notifyComplete(innerSub: Subscription) {\n    this.remove(innerSub);\n    this.innerSubscription = null;\n    if (this.isStopped) {\n      super._complete();\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: I,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, I>): void {\n    const { resultSelector, destination } = this;\n    if (resultSelector) {\n      this.tryResultSelector(outerValue, innerValue, outerIndex, innerIndex);\n    } else {\n      destination.next(innerValue);\n    }\n  }\n\n  private tryResultSelector(outerValue: T, innerValue: I,\n                            outerIndex: number, innerIndex: number): void {\n    const { resultSelector, destination } = this;\n    let result: R;\n    try {\n      result = resultSelector(outerValue, innerValue, outerIndex, innerIndex);\n    } catch (err) {\n      destination.error(err);\n      return;\n    }\n\n    destination.next(result);\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { ArgumentOutOfRangeError } from '../util/ArgumentOutOfRangeError';\nimport { EmptyObservable } from '../observable/EmptyObservable';\nimport { Observable } from '../Observable';\nimport { TeardownLogic } from '../Subscription';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Emits only the first `count` values emitted by the source Observable.\n *\n * <span class=\"informal\">Takes the first `count` values from the source, then\n * completes.</span>\n *\n * <img src=\"./img/take.png\" width=\"100%\">\n *\n * `take` returns an Observable that emits only the first `count` values emitted\n * by the source Observable. If the source emits fewer than `count` values then\n * all of its values are emitted. After that, it completes, regardless if the\n * source completes.\n *\n * @example <caption>Take the first 5 seconds of an infinite 1-second interval Observable</caption>\n * var interval = Rx.Observable.interval(1000);\n * var five = interval.take(5);\n * five.subscribe(x => console.log(x));\n *\n * @see {@link takeLast}\n * @see {@link takeUntil}\n * @see {@link takeWhile}\n * @see {@link skip}\n *\n * @throws {ArgumentOutOfRangeError} When using `take(i)`, it delivers an\n * ArgumentOutOrRangeError to the Observer's `error` callback if `i < 0`.\n *\n * @param {number} count The maximum number of `next` values to emit.\n * @return {Observable<T>} An Observable that emits only the first `count`\n * values emitted by the source Observable, or all of the values from the source\n * if the source emits fewer than `count` values.\n * @method take\n * @owner Observable\n */\nexport function take<T>(count: number): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => {\n    if (count === 0) {\n      return new EmptyObservable<T>();\n    } else {\n      return source.lift(new TakeOperator(count));\n    }\n  };\n}\n\nclass TakeOperator<T> implements Operator<T, T> {\n  constructor(private total: number) {\n    if (this.total < 0) {\n      throw new ArgumentOutOfRangeError;\n    }\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new TakeSubscriber(subscriber, this.total));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass TakeSubscriber<T> extends Subscriber<T> {\n  private count: number = 0;\n\n  constructor(destination: Subscriber<T>, private total: number) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    const total = this.total;\n    const count = ++this.count;\n    if (count <= total) {\n      this.destination.next(value);\n      if (count === total) {\n        this.destination.complete();\n        this.unsubscribe();\n      }\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { TeardownLogic } from '../Subscription';\n\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Emits the values emitted by the source Observable until a `notifier`\n * Observable emits a value.\n *\n * <span class=\"informal\">Lets values pass until a second Observable,\n * `notifier`, emits something. Then, it completes.</span>\n *\n * <img src=\"./img/takeUntil.png\" width=\"100%\">\n *\n * `takeUntil` subscribes and begins mirroring the source Observable. It also\n * monitors a second Observable, `notifier` that you provide. If the `notifier`\n * emits a value or a complete notification, the output Observable stops\n * mirroring the source Observable and completes.\n *\n * @example <caption>Tick every second until the first click happens</caption>\n * var interval = Rx.Observable.interval(1000);\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = interval.takeUntil(clicks);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link take}\n * @see {@link takeLast}\n * @see {@link takeWhile}\n * @see {@link skip}\n *\n * @param {Observable} notifier The Observable whose first emitted value will\n * cause the output Observable of `takeUntil` to stop emitting values from the\n * source Observable.\n * @return {Observable<T>} An Observable that emits the values from the source\n * Observable until such time as `notifier` emits its first value.\n * @method takeUntil\n * @owner Observable\n */\nexport function takeUntil<T>(notifier: Observable<any>): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new TakeUntilOperator(notifier));\n}\n\nclass TakeUntilOperator<T> implements Operator<T, T> {\n  constructor(private notifier: Observable<any>) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new TakeUntilSubscriber(subscriber, this.notifier));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass TakeUntilSubscriber<T, R> extends OuterSubscriber<T, R> {\n\n  constructor(destination: Subscriber<any>,\n              private notifier: Observable<any>) {\n    super(destination);\n    this.add(subscribeToResult(this, notifier));\n  }\n\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this.complete();\n  }\n\n  notifyComplete(): void {\n    // noop\n  }\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { TeardownLogic } from '../Subscription';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Emits values emitted by the source Observable so long as each value satisfies\n * the given `predicate`, and then completes as soon as this `predicate` is not\n * satisfied.\n *\n * <span class=\"informal\">Takes values from the source only while they pass the\n * condition given. When the first value does not satisfy, it completes.</span>\n *\n * <img src=\"./img/takeWhile.png\" width=\"100%\">\n *\n * `takeWhile` subscribes and begins mirroring the source Observable. Each value\n * emitted on the source is given to the `predicate` function which returns a\n * boolean, representing a condition to be satisfied by the source values. The\n * output Observable emits the source values until such time as the `predicate`\n * returns false, at which point `takeWhile` stops mirroring the source\n * Observable and completes the output Observable.\n *\n * @example <caption>Emit click events only while the clientX property is greater than 200</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.takeWhile(ev => ev.clientX > 200);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link take}\n * @see {@link takeLast}\n * @see {@link takeUntil}\n * @see {@link skip}\n *\n * @param {function(value: T, index: number): boolean} predicate A function that\n * evaluates a value emitted by the source Observable and returns a boolean.\n * Also takes the (zero-based) index as the second argument.\n * @return {Observable<T>} An Observable that emits the values from the source\n * Observable so long as each value satisfies the condition defined by the\n * `predicate`, then completes.\n * @method takeWhile\n * @owner Observable\n */\nexport function takeWhile<T>(predicate: (value: T, index: number) => boolean): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new TakeWhileOperator(predicate));\n}\n\nclass TakeWhileOperator<T> implements Operator<T, T> {\n  constructor(private predicate: (value: T, index: number) => boolean) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new TakeWhileSubscriber(subscriber, this.predicate));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass TakeWhileSubscriber<T> extends Subscriber<T> {\n  private index: number = 0;\n\n  constructor(destination: Subscriber<T>,\n              private predicate: (value: T, index: number) => boolean) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    const destination = this.destination;\n    let result: boolean;\n    try {\n      result = this.predicate(value, this.index++);\n    } catch (err) {\n      destination.error(err);\n      return;\n    }\n    this.nextOrComplete(value, result);\n  }\n\n  private nextOrComplete(value: T, predicateResult: boolean): void {\n    const destination = this.destination;\n    if (Boolean(predicateResult)) {\n      destination.next(value);\n    } else {\n      destination.complete();\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { PartialObserver } from '../Observer';\nimport { TeardownLogic } from '../Subscription';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/* tslint:disable:max-line-length */\nexport function tap<T>(next: (x: T) => void, error?: (e: any) => void, complete?: () => void): MonoTypeOperatorFunction<T>;\nexport function tap<T>(observer: PartialObserver<T>): MonoTypeOperatorFunction<T>;\n/* tslint:enable:max-line-length */\n\n/**\n * Perform a side effect for every emission on the source Observable, but return\n * an Observable that is identical to the source.\n *\n * <span class=\"informal\">Intercepts each emission on the source and runs a\n * function, but returns an output which is identical to the source as long as errors don't occur.</span>\n *\n * <img src=\"./img/do.png\" width=\"100%\">\n *\n * Returns a mirrored Observable of the source Observable, but modified so that\n * the provided Observer is called to perform a side effect for every value,\n * error, and completion emitted by the source. Any errors that are thrown in\n * the aforementioned Observer or handlers are safely sent down the error path\n * of the output Observable.\n *\n * This operator is useful for debugging your Observables for the correct values\n * or performing other side effects.\n *\n * Note: this is different to a `subscribe` on the Observable. If the Observable\n * returned by `do` is not subscribed, the side effects specified by the\n * Observer will never happen. `do` therefore simply spies on existing\n * execution, it does not trigger an execution to happen like `subscribe` does.\n *\n * @example <caption>Map every click to the clientX position of that click, while also logging the click event</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var positions = clicks\n *   .do(ev => console.log(ev))\n *   .map(ev => ev.clientX);\n * positions.subscribe(x => console.log(x));\n *\n * @see {@link map}\n * @see {@link subscribe}\n *\n * @param {Observer|function} [nextOrObserver] A normal Observer object or a\n * callback for `next`.\n * @param {function} [error] Callback for errors in the source.\n * @param {function} [complete] Callback for the completion of the source.\n * @return {Observable} An Observable identical to the source, but runs the\n * specified Observer or callback(s) for each item.\n * @name tap\n */\nexport function tap<T>(nextOrObserver?: PartialObserver<T> | ((x: T) => void),\n                       error?: (e: any) => void,\n                       complete?: () => void): MonoTypeOperatorFunction<T> {\n  return function tapOperatorFunction(source: Observable<T>): Observable<T> {\n    return source.lift(new DoOperator(nextOrObserver, error, complete));\n  };\n}\n\nclass DoOperator<T> implements Operator<T, T> {\n  constructor(private nextOrObserver?: PartialObserver<T> | ((x: T) => void),\n              private error?: (e: any) => void,\n              private complete?: () => void) {\n  }\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new DoSubscriber(subscriber, this.nextOrObserver, this.error, this.complete));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass DoSubscriber<T> extends Subscriber<T> {\n\n  private safeSubscriber: Subscriber<T>;\n\n  constructor(destination: Subscriber<T>,\n              nextOrObserver?: PartialObserver<T> | ((x: T) => void),\n              error?: (e: any) => void,\n              complete?: () => void) {\n    super(destination);\n\n    const safeSubscriber = new Subscriber<T>(nextOrObserver, error, complete);\n    safeSubscriber.syncErrorThrowable = true;\n    this.add(safeSubscriber);\n    this.safeSubscriber = safeSubscriber;\n  }\n\n  protected _next(value: T): void {\n    const { safeSubscriber } = this;\n    safeSubscriber.next(value);\n    if (safeSubscriber.syncErrorThrown) {\n      this.destination.error(safeSubscriber.syncErrorValue);\n    } else {\n      this.destination.next(value);\n    }\n  }\n\n  protected _error(err: any): void {\n    const { safeSubscriber } = this;\n    safeSubscriber.error(err);\n    if (safeSubscriber.syncErrorThrown) {\n      this.destination.error(safeSubscriber.syncErrorValue);\n    } else {\n      this.destination.error(err);\n    }\n  }\n\n  protected _complete(): void {\n    const { safeSubscriber } = this;\n    safeSubscriber.complete();\n    if (safeSubscriber.syncErrorThrown) {\n      this.destination.error(safeSubscriber.syncErrorValue);\n    } else {\n      this.destination.complete();\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Observable, SubscribableOrPromise } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription, TeardownLogic } from '../Subscription';\n\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\nexport interface ThrottleConfig {\n  leading?: boolean;\n  trailing?: boolean;\n}\n\nexport const defaultThrottleConfig: ThrottleConfig = {\n  leading: true,\n  trailing: false\n};\n\n/**\n * Emits a value from the source Observable, then ignores subsequent source\n * values for a duration determined by another Observable, then repeats this\n * process.\n *\n * <span class=\"informal\">It's like {@link throttleTime}, but the silencing\n * duration is determined by a second Observable.</span>\n *\n * <img src=\"./img/throttle.png\" width=\"100%\">\n *\n * `throttle` emits the source Observable values on the output Observable\n * when its internal timer is disabled, and ignores source values when the timer\n * is enabled. Initially, the timer is disabled. As soon as the first source\n * value arrives, it is forwarded to the output Observable, and then the timer\n * is enabled by calling the `durationSelector` function with the source value,\n * which returns the \"duration\" Observable. When the duration Observable emits a\n * value or completes, the timer is disabled, and this process repeats for the\n * next source value.\n *\n * @example <caption>Emit clicks at a rate of at most one click per second</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.throttle(ev => Rx.Observable.interval(1000));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link audit}\n * @see {@link debounce}\n * @see {@link delayWhen}\n * @see {@link sample}\n * @see {@link throttleTime}\n *\n * @param {function(value: T): SubscribableOrPromise} durationSelector A function\n * that receives a value from the source Observable, for computing the silencing\n * duration for each source value, returned as an Observable or a Promise.\n * @param {Object} config a configuration object to define `leading` and `trailing` behavior. Defaults\n * to `{ leading: true, trailing: false }`.\n * @return {Observable<T>} An Observable that performs the throttle operation to\n * limit the rate of emissions from the source.\n * @method throttle\n * @owner Observable\n */\nexport function throttle<T>(durationSelector: (value: T) => SubscribableOrPromise<number>,\n                            config: ThrottleConfig = defaultThrottleConfig): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new ThrottleOperator(durationSelector, config.leading, config.trailing));\n}\n\nclass ThrottleOperator<T> implements Operator<T, T> {\n  constructor(private durationSelector: (value: T) => SubscribableOrPromise<number>,\n              private leading: boolean,\n              private trailing: boolean) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(\n      new ThrottleSubscriber(subscriber, this.durationSelector, this.leading, this.trailing)\n    );\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc\n * @ignore\n * @extends {Ignored}\n */\nclass ThrottleSubscriber<T, R> extends OuterSubscriber<T, R> {\n  private throttled: Subscription;\n  private _trailingValue: T;\n  private _hasTrailingValue = false;\n\n  constructor(protected destination: Subscriber<T>,\n              private durationSelector: (value: T) => SubscribableOrPromise<number>,\n              private _leading: boolean,\n              private _trailing: boolean) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    if (this.throttled) {\n      if (this._trailing) {\n        this._hasTrailingValue = true;\n        this._trailingValue = value;\n      }\n    } else {\n      const duration = this.tryDurationSelector(value);\n      if (duration) {\n        this.add(this.throttled = subscribeToResult(this, duration));\n      }\n      if (this._leading) {\n        this.destination.next(value);\n        if (this._trailing) {\n          this._hasTrailingValue = true;\n          this._trailingValue = value;\n        }\n      }\n    }\n  }\n\n  private tryDurationSelector(value: T): SubscribableOrPromise<any> {\n    try {\n      return this.durationSelector(value);\n    } catch (err) {\n      this.destination.error(err);\n      return null;\n    }\n  }\n\n  /** @deprecated internal use only */ _unsubscribe() {\n    const { throttled, _trailingValue, _hasTrailingValue, _trailing } = this;\n\n    this._trailingValue = null;\n    this._hasTrailingValue = false;\n\n    if (throttled) {\n      this.remove(throttled);\n      this.throttled = null;\n      throttled.unsubscribe();\n    }\n  }\n\n  private _sendTrailing() {\n    const { destination, throttled, _trailing, _trailingValue, _hasTrailingValue } = this;\n    if (throttled && _trailing && _hasTrailingValue) {\n      destination.next(_trailingValue);\n      this._trailingValue = null;\n      this._hasTrailingValue = false;\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this._sendTrailing();\n    this._unsubscribe();\n  }\n\n  notifyComplete(): void {\n    this._sendTrailing();\n    this._unsubscribe();\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { IScheduler } from '../Scheduler';\nimport { Subscription, TeardownLogic } from '../Subscription';\nimport { async } from '../scheduler/async';\nimport { Observable } from '../Observable';\nimport { ThrottleConfig, defaultThrottleConfig } from './throttle';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Emits a value from the source Observable, then ignores subsequent source\n * values for `duration` milliseconds, then repeats this process.\n *\n * <span class=\"informal\">Lets a value pass, then ignores source values for the\n * next `duration` milliseconds.</span>\n *\n * <img src=\"./img/throttleTime.png\" width=\"100%\">\n *\n * `throttleTime` emits the source Observable values on the output Observable\n * when its internal timer is disabled, and ignores source values when the timer\n * is enabled. Initially, the timer is disabled. As soon as the first source\n * value arrives, it is forwarded to the output Observable, and then the timer\n * is enabled. After `duration` milliseconds (or the time unit determined\n * internally by the optional `scheduler`) has passed, the timer is disabled,\n * and this process repeats for the next source value. Optionally takes a\n * {@link IScheduler} for managing timers.\n *\n * @example <caption>Emit clicks at a rate of at most one click per second</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.throttleTime(1000);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link auditTime}\n * @see {@link debounceTime}\n * @see {@link delay}\n * @see {@link sampleTime}\n * @see {@link throttle}\n *\n * @param {number} duration Time to wait before emitting another value after\n * emitting the last value, measured in milliseconds or the time unit determined\n * internally by the optional `scheduler`.\n * @param {Scheduler} [scheduler=async] The {@link IScheduler} to use for\n * managing the timers that handle the throttling.\n * @return {Observable<T>} An Observable that performs the throttle operation to\n * limit the rate of emissions from the source.\n * @method throttleTime\n * @owner Observable\n */\nexport function throttleTime<T>(duration: number,\n                                scheduler: IScheduler = async,\n                                config: ThrottleConfig = defaultThrottleConfig): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new ThrottleTimeOperator(duration, scheduler, config.leading, config.trailing));\n}\n\nclass ThrottleTimeOperator<T> implements Operator<T, T> {\n  constructor(private duration: number,\n              private scheduler: IScheduler,\n              private leading: boolean,\n              private trailing: boolean) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(\n      new ThrottleTimeSubscriber(subscriber, this.duration, this.scheduler, this.leading, this.trailing)\n    );\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass ThrottleTimeSubscriber<T> extends Subscriber<T> {\n  private throttled: Subscription;\n  private _hasTrailingValue: boolean = false;\n  private _trailingValue: T = null;\n\n  constructor(destination: Subscriber<T>,\n              private duration: number,\n              private scheduler: IScheduler,\n              private leading: boolean,\n              private trailing: boolean) {\n    super(destination);\n  }\n\n  protected _next(value: T) {\n    if (this.throttled) {\n      if (this.trailing) {\n        this._trailingValue = value;\n        this._hasTrailingValue = true;\n      }\n    } else {\n      this.add(this.throttled = this.scheduler.schedule(dispatchNext, this.duration, { subscriber: this }));\n      if (this.leading) {\n        this.destination.next(value);\n      }\n    }\n  }\n\n  clearThrottle() {\n    const throttled = this.throttled;\n    if (throttled) {\n      if (this.trailing && this._hasTrailingValue) {\n        this.destination.next(this._trailingValue);\n        this._trailingValue = null;\n        this._hasTrailingValue = false;\n      }\n      throttled.unsubscribe();\n      this.remove(throttled);\n      this.throttled = null;\n    }\n  }\n}\n\ninterface DispatchArg<T> {\n  subscriber: ThrottleTimeSubscriber<T>;\n}\n\nfunction dispatchNext<T>(arg: DispatchArg<T>) {\n  const { subscriber } = arg;\n  subscriber.clearThrottle();\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { IScheduler } from '../Scheduler';\nimport { async } from '../scheduler/async';\nimport { OperatorFunction } from '../interfaces';\n\nexport function timeInterval<T>(scheduler: IScheduler = async): OperatorFunction<T, TimeInterval<T>> {\n  return (source: Observable<T>) => source.lift(new TimeIntervalOperator(scheduler));\n}\n\nexport class TimeInterval<T> {\n  constructor(public value: T, public interval: number) {\n\n  }\n};\n\nclass TimeIntervalOperator<T> implements Operator<T, TimeInterval<T>> {\n  constructor(private scheduler: IScheduler) {\n\n  }\n\n  call(observer: Subscriber<TimeInterval<T>>, source: any): any {\n    return source.subscribe(new TimeIntervalSubscriber(observer, this.scheduler));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass TimeIntervalSubscriber<T> extends Subscriber<T> {\n  private lastTime: number = 0;\n\n  constructor(destination: Subscriber<TimeInterval<T>>, private scheduler: IScheduler) {\n    super(destination);\n\n    this.lastTime = scheduler.now();\n  }\n\n  protected _next(value: T) {\n    let now = this.scheduler.now();\n    let span = now - this.lastTime;\n    this.lastTime = now;\n\n    this.destination.next(new TimeInterval(value, span));\n  }\n}\n","/**\r\n * An error thrown when duetime elapses.\r\n *\r\n * @see {@link timeout}\r\n *\r\n * @class TimeoutError\r\n */\r\nexport class TimeoutError extends Error {\r\n  constructor() {\r\n    const err: any = super('Timeout has occurred');\r\n    (<any> this).name = err.name = 'TimeoutError';\r\n    (<any> this).stack = err.stack;\r\n    (<any> this).message = err.message;\r\n  }\r\n}\r\n","import { Action } from '../scheduler/Action';\nimport { async } from '../scheduler/async';\nimport { isDate } from '../util/isDate';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { IScheduler } from '../Scheduler';\nimport { Observable } from '../Observable';\nimport { TeardownLogic } from '../Subscription';\nimport { TimeoutError } from '../util/TimeoutError';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n *\n * Errors if Observable does not emit a value in given time span.\n *\n * <span class=\"informal\">Timeouts on Observable that doesn't emit values fast enough.</span>\n *\n * <img src=\"./img/timeout.png\" width=\"100%\">\n *\n * `timeout` operator accepts as an argument either a number or a Date.\n *\n * If number was provided, it returns an Observable that behaves like a source\n * Observable, unless there is a period of time where there is no value emitted.\n * So if you provide `100` as argument and first value comes after 50ms from\n * the moment of subscription, this value will be simply re-emitted by the resulting\n * Observable. If however after that 100ms passes without a second value being emitted,\n * stream will end with an error and source Observable will be unsubscribed.\n * These checks are performed throughout whole lifecycle of Observable - from the moment\n * it was subscribed to, until it completes or errors itself. Thus every value must be\n * emitted within specified period since previous value.\n *\n * If provided argument was Date, returned Observable behaves differently. It throws\n * if Observable did not complete before provided Date. This means that periods between\n * emission of particular values do not matter in this case. If Observable did not complete\n * before provided Date, source Observable will be unsubscribed. Other than that, resulting\n * stream behaves just as source Observable.\n *\n * `timeout` accepts also a Scheduler as a second parameter. It is used to schedule moment (or moments)\n * when returned Observable will check if source stream emitted value or completed.\n *\n * @example <caption>Check if ticks are emitted within certain timespan</caption>\n * const seconds = Rx.Observable.interval(1000);\n *\n * seconds.timeout(1100) // Let's use bigger timespan to be safe,\n *                       // since `interval` might fire a bit later then scheduled.\n * .subscribe(\n *     value => console.log(value), // Will emit numbers just as regular `interval` would.\n *     err => console.log(err) // Will never be called.\n * );\n *\n * seconds.timeout(900).subscribe(\n *     value => console.log(value), // Will never be called.\n *     err => console.log(err) // Will emit error before even first value is emitted,\n *                             // since it did not arrive within 900ms period.\n * );\n *\n * @example <caption>Use Date to check if Observable completed</caption>\n * const seconds = Rx.Observable.interval(1000);\n *\n * seconds.timeout(new Date(\"December 17, 2020 03:24:00\"))\n * .subscribe(\n *     value => console.log(value), // Will emit values as regular `interval` would\n *                                  // until December 17, 2020 at 03:24:00.\n *     err => console.log(err) // On December 17, 2020 at 03:24:00 it will emit an error,\n *                             // since Observable did not complete by then.\n * );\n *\n * @see {@link timeoutWith}\n *\n * @param {number|Date} due Number specifying period within which Observable must emit values\n *                          or Date specifying before when Observable should complete\n * @param {Scheduler} [scheduler] Scheduler controlling when timeout checks occur.\n * @return {Observable<T>} Observable that mirrors behaviour of source, unless timeout checks fail.\n * @method timeout\n * @owner Observable\n */\nexport function timeout<T>(due: number | Date,\n                           scheduler: IScheduler = async): MonoTypeOperatorFunction<T> {\n  const absoluteTimeout = isDate(due);\n  const waitFor = absoluteTimeout ? (+due - scheduler.now()) : Math.abs(<number>due);\n  return (source: Observable<T>) => source.lift(new TimeoutOperator(waitFor, absoluteTimeout, scheduler, new TimeoutError()));\n}\n\nclass TimeoutOperator<T> implements Operator<T, T> {\n  constructor(private waitFor: number,\n              private absoluteTimeout: boolean,\n              private scheduler: IScheduler,\n              private errorInstance: TimeoutError) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new TimeoutSubscriber<T>(\n      subscriber, this.absoluteTimeout, this.waitFor, this.scheduler, this.errorInstance\n    ));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass TimeoutSubscriber<T> extends Subscriber<T> {\n\n  private action: Action<TimeoutSubscriber<T>> = null;\n\n  constructor(destination: Subscriber<T>,\n              private absoluteTimeout: boolean,\n              private waitFor: number,\n              private scheduler: IScheduler,\n              private errorInstance: TimeoutError) {\n    super(destination);\n    this.scheduleTimeout();\n  }\n\n  private static dispatchTimeout<T>(subscriber: TimeoutSubscriber<T>): void {\n    subscriber.error(subscriber.errorInstance);\n  }\n\n  private scheduleTimeout(): void {\n    const { action } = this;\n    if (action) {\n      // Recycle the action if we've already scheduled one. All the production\n      // Scheduler Actions mutate their state/delay time and return themeselves.\n      // VirtualActions are immutable, so they create and return a clone. In this\n      // case, we need to set the action reference to the most recent VirtualAction,\n      // to ensure that's the one we clone from next time.\n      this.action = (<Action<TimeoutSubscriber<T>>> action.schedule(this, this.waitFor));\n    } else {\n      this.add(this.action = (<Action<TimeoutSubscriber<T>>> this.scheduler.schedule(\n        TimeoutSubscriber.dispatchTimeout, this.waitFor, this\n      )));\n    }\n  }\n\n  protected _next(value: T): void {\n    if (!this.absoluteTimeout) {\n      this.scheduleTimeout();\n    }\n    super._next(value);\n  }\n\n  /** @deprecated internal use only */ _unsubscribe() {\n    this.action = null;\n    this.scheduler = null;\n    this.errorInstance = null;\n  }\n}\n","import { Action } from '../scheduler/Action';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { IScheduler } from '../Scheduler';\nimport { async } from '../scheduler/async';\nimport { TeardownLogic } from '../Subscription';\nimport { Observable, ObservableInput } from '../Observable';\nimport { isDate } from '../util/isDate';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OperatorFunction, MonoTypeOperatorFunction } from '../interfaces';\n\n/* tslint:disable:max-line-length */\nexport function timeoutWith<T>(due: number | Date, withObservable: ObservableInput<T>, scheduler?: IScheduler): MonoTypeOperatorFunction<T>;\nexport function timeoutWith<T, R>(due: number | Date, withObservable: ObservableInput<R>, scheduler?: IScheduler): OperatorFunction<T, T | R>;\n/* tslint:enable:max-line-length */\n\n/**\n *\n * Errors if Observable does not emit a value in given time span, in case of which\n * subscribes to the second Observable.\n *\n * <span class=\"informal\">It's a version of `timeout` operator that let's you specify fallback Observable.</span>\n *\n * <img src=\"./img/timeoutWith.png\" width=\"100%\">\n *\n * `timeoutWith` is a variation of `timeout` operator. It behaves exactly the same,\n * still accepting as a first argument either a number or a Date, which control - respectively -\n * when values of source Observable should be emitted or when it should complete.\n *\n * The only difference is that it accepts a second, required parameter. This parameter\n * should be an Observable which will be subscribed when source Observable fails any timeout check.\n * So whenever regular `timeout` would emit an error, `timeoutWith` will instead start re-emitting\n * values from second Observable. Note that this fallback Observable is not checked for timeouts\n * itself, so it can emit values and complete at arbitrary points in time. From the moment of a second\n * subscription, Observable returned from `timeoutWith` simply mirrors fallback stream. When that\n * stream completes, it completes as well.\n *\n * Scheduler, which in case of `timeout` is provided as as second argument, can be still provided\n * here - as a third, optional parameter. It still is used to schedule timeout checks and -\n * as a consequence - when second Observable will be subscribed, since subscription happens\n * immediately after failing check.\n *\n * @example <caption>Add fallback observable</caption>\n * const seconds = Rx.Observable.interval(1000);\n * const minutes = Rx.Observable.interval(60 * 1000);\n *\n * seconds.timeoutWith(900, minutes)\n *     .subscribe(\n *         value => console.log(value), // After 900ms, will start emitting `minutes`,\n *                                      // since first value of `seconds` will not arrive fast enough.\n *         err => console.log(err) // Would be called after 900ms in case of `timeout`,\n *                                 // but here will never be called.\n *     );\n *\n * @param {number|Date} due Number specifying period within which Observable must emit values\n *                          or Date specifying before when Observable should complete\n * @param {Observable<T>} withObservable Observable which will be subscribed if source fails timeout check.\n * @param {Scheduler} [scheduler] Scheduler controlling when timeout checks occur.\n * @return {Observable<T>} Observable that mirrors behaviour of source or, when timeout check fails, of an Observable\n *                          passed as a second parameter.\n * @method timeoutWith\n * @owner Observable\n */\nexport function timeoutWith<T, R>(due: number | Date,\n                                  withObservable: ObservableInput<R>,\n                                  scheduler: IScheduler = async): OperatorFunction<T, T | R> {\n  return (source: Observable<T>) => {\n    let absoluteTimeout = isDate(due);\n    let waitFor = absoluteTimeout ? (+due - scheduler.now()) : Math.abs(<number>due);\n    return source.lift(new TimeoutWithOperator(waitFor, absoluteTimeout, withObservable, scheduler));\n  };\n}\n\nclass TimeoutWithOperator<T> implements Operator<T, T> {\n  constructor(private waitFor: number,\n              private absoluteTimeout: boolean,\n              private withObservable: ObservableInput<any>,\n              private scheduler: IScheduler) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new TimeoutWithSubscriber(\n      subscriber, this.absoluteTimeout, this.waitFor, this.withObservable, this.scheduler\n    ));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass TimeoutWithSubscriber<T, R> extends OuterSubscriber<T, R> {\n\n  private action: Action<TimeoutWithSubscriber<T, R>> = null;\n\n  constructor(destination: Subscriber<T>,\n              private absoluteTimeout: boolean,\n              private waitFor: number,\n              private withObservable: ObservableInput<any>,\n              private scheduler: IScheduler) {\n    super(destination);\n    this.scheduleTimeout();\n  }\n\n  private static dispatchTimeout<T, R>(subscriber: TimeoutWithSubscriber<T, R>): void {\n    const { withObservable } = subscriber;\n    (<any> subscriber)._unsubscribeAndRecycle();\n    subscriber.add(subscribeToResult(subscriber, withObservable));\n  }\n\n  private scheduleTimeout(): void {\n    const { action } = this;\n    if (action) {\n      // Recycle the action if we've already scheduled one. All the production\n      // Scheduler Actions mutate their state/delay time and return themeselves.\n      // VirtualActions are immutable, so they create and return a clone. In this\n      // case, we need to set the action reference to the most recent VirtualAction,\n      // to ensure that's the one we clone from next time.\n      this.action = (<Action<TimeoutWithSubscriber<T, R>>> action.schedule(this, this.waitFor));\n    } else {\n      this.add(this.action = (<Action<TimeoutWithSubscriber<T, R>>> this.scheduler.schedule(\n        TimeoutWithSubscriber.dispatchTimeout, this.waitFor, this\n      )));\n    }\n  }\n\n  protected _next(value: T): void {\n    if (!this.absoluteTimeout) {\n      this.scheduleTimeout();\n    }\n    super._next(value);\n  }\n\n  /** @deprecated internal use only */ _unsubscribe() {\n    this.action = null;\n    this.scheduler = null;\n    this.withObservable = null;\n  }\n}\n","import { Observable } from '../Observable';\nimport { OperatorFunction } from '../interfaces';\nimport { Subject } from '../Subject';\nimport { Subscriber } from '../Subscriber';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { Operator } from '../Operator';\n\n/**\n * Branch out the source Observable values as a nested Observable whenever\n * `windowBoundaries` emits.\n *\n * <span class=\"informal\">It's like {@link buffer}, but emits a nested Observable\n * instead of an array.</span>\n *\n * <img src=\"./img/window.png\" width=\"100%\">\n *\n * Returns an Observable that emits windows of items it collects from the source\n * Observable. The output Observable emits connected, non-overlapping\n * windows. It emits the current window and opens a new one whenever the\n * Observable `windowBoundaries` emits an item. Because each window is an\n * Observable, the output is a higher-order Observable.\n *\n * @example <caption>In every window of 1 second each, emit at most 2 click events</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var interval = Rx.Observable.interval(1000);\n * var result = clicks.window(interval)\n *   .map(win => win.take(2)) // each window has at most 2 emissions\n *   .mergeAll(); // flatten the Observable-of-Observables\n * result.subscribe(x => console.log(x));\n *\n * @see {@link windowCount}\n * @see {@link windowTime}\n * @see {@link windowToggle}\n * @see {@link windowWhen}\n * @see {@link buffer}\n *\n * @param {Observable<any>} windowBoundaries An Observable that completes the\n * previous window and starts a new window.\n * @return {Observable<Observable<T>>} An Observable of windows, which are\n * Observables emitting values of the source Observable.\n * @method window\n * @owner Observable\n */\nexport function window<T>(windowBoundaries: Observable<any>): OperatorFunction<T, Observable<T>> {\n  return function windowOperatorFunction(source: Observable<T>) {\n    return source.lift(new WindowOperator(windowBoundaries));\n  };\n}\n\nclass WindowOperator<T> implements Operator<T, Observable<T>> {\n\n  constructor(private windowBoundaries: Observable<any>) {\n  }\n\n  call(subscriber: Subscriber<Observable<T>>, source: any): any {\n    const windowSubscriber = new WindowSubscriber(subscriber);\n    const sourceSubscription = source.subscribe(windowSubscriber);\n    if (!sourceSubscription.closed) {\n      windowSubscriber.add(subscribeToResult(windowSubscriber, this.windowBoundaries));\n    }\n    return sourceSubscription;\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass WindowSubscriber<T> extends OuterSubscriber<T, any> {\n\n  private window: Subject<T> = new Subject<T>();\n\n  constructor(destination: Subscriber<Observable<T>>) {\n    super(destination);\n    destination.next(this.window);\n  }\n\n  notifyNext(outerValue: T, innerValue: any,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, any>): void {\n    this.openWindow();\n  }\n\n  notifyError(error: any, innerSub: InnerSubscriber<T, any>): void {\n    this._error(error);\n  }\n\n  notifyComplete(innerSub: InnerSubscriber<T, any>): void {\n    this._complete();\n  }\n\n  protected _next(value: T): void {\n    this.window.next(value);\n  }\n\n  protected _error(err: any): void {\n    this.window.error(err);\n    this.destination.error(err);\n  }\n\n  protected _complete(): void {\n    this.window.complete();\n    this.destination.complete();\n  }\n\n  /** @deprecated internal use only */ _unsubscribe() {\n    this.window = null;\n  }\n\n  private openWindow(): void  {\n    const prevWindow = this.window;\n    if (prevWindow) {\n      prevWindow.complete();\n    }\n    const destination = this.destination;\n    const newWindow = this.window = new Subject<T>();\n    destination.next(newWindow);\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { Subject } from '../Subject';\nimport { OperatorFunction } from '../interfaces';\n\n/**\n * Branch out the source Observable values as a nested Observable with each\n * nested Observable emitting at most `windowSize` values.\n *\n * <span class=\"informal\">It's like {@link bufferCount}, but emits a nested\n * Observable instead of an array.</span>\n *\n * <img src=\"./img/windowCount.png\" width=\"100%\">\n *\n * Returns an Observable that emits windows of items it collects from the source\n * Observable. The output Observable emits windows every `startWindowEvery`\n * items, each containing no more than `windowSize` items. When the source\n * Observable completes or encounters an error, the output Observable emits\n * the current window and propagates the notification from the source\n * Observable. If `startWindowEvery` is not provided, then new windows are\n * started immediately at the start of the source and when each window completes\n * with size `windowSize`.\n *\n * @example <caption>Ignore every 3rd click event, starting from the first one</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.windowCount(3)\n *   .map(win => win.skip(1)) // skip first of every 3 clicks\n *   .mergeAll(); // flatten the Observable-of-Observables\n * result.subscribe(x => console.log(x));\n *\n * @example <caption>Ignore every 3rd click event, starting from the third one</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.windowCount(2, 3)\n *   .mergeAll(); // flatten the Observable-of-Observables\n * result.subscribe(x => console.log(x));\n *\n * @see {@link window}\n * @see {@link windowTime}\n * @see {@link windowToggle}\n * @see {@link windowWhen}\n * @see {@link bufferCount}\n *\n * @param {number} windowSize The maximum number of values emitted by each\n * window.\n * @param {number} [startWindowEvery] Interval at which to start a new window.\n * For example if `startWindowEvery` is `2`, then a new window will be started\n * on every other value from the source. A new window is started at the\n * beginning of the source by default.\n * @return {Observable<Observable<T>>} An Observable of windows, which in turn\n * are Observable of values.\n * @method windowCount\n * @owner Observable\n */\nexport function windowCount<T>(windowSize: number,\n                               startWindowEvery: number = 0): OperatorFunction<T, Observable<T>> {\n  return function windowCountOperatorFunction(source: Observable<T>) {\n    return source.lift(new WindowCountOperator<T>(windowSize, startWindowEvery));\n  };\n}\n\nclass WindowCountOperator<T> implements Operator<T, Observable<T>> {\n\n  constructor(private windowSize: number,\n              private startWindowEvery: number) {\n  }\n\n  call(subscriber: Subscriber<Observable<T>>, source: any): any {\n    return source.subscribe(new WindowCountSubscriber(subscriber, this.windowSize, this.startWindowEvery));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass WindowCountSubscriber<T> extends Subscriber<T> {\n  private windows: Subject<T>[] = [ new Subject<T>() ];\n  private count: number = 0;\n\n  constructor(protected destination: Subscriber<Observable<T>>,\n              private windowSize: number,\n              private startWindowEvery: number) {\n    super(destination);\n    destination.next(this.windows[0]);\n  }\n\n  protected _next(value: T) {\n    const startWindowEvery = (this.startWindowEvery > 0) ? this.startWindowEvery : this.windowSize;\n    const destination = this.destination;\n    const windowSize = this.windowSize;\n    const windows = this.windows;\n    const len = windows.length;\n\n    for (let i = 0; i < len && !this.closed; i++) {\n      windows[i].next(value);\n    }\n    const c = this.count - windowSize + 1;\n    if (c >= 0 && c % startWindowEvery === 0 && !this.closed) {\n      windows.shift().complete();\n    }\n    if (++this.count % startWindowEvery === 0 && !this.closed) {\n      const window = new Subject<T>();\n      windows.push(window);\n      destination.next(window);\n    }\n  }\n\n  protected _error(err: any) {\n    const windows = this.windows;\n    if (windows) {\n      while (windows.length > 0 && !this.closed) {\n        windows.shift().error(err);\n      }\n    }\n    this.destination.error(err);\n  }\n\n  protected _complete() {\n    const windows = this.windows;\n    if (windows) {\n      while (windows.length > 0 && !this.closed) {\n        windows.shift().complete();\n      }\n    }\n    this.destination.complete();\n  }\n\n  /** @deprecated internal use only */ _unsubscribe() {\n    this.count = 0;\n    this.windows = null;\n  }\n}\n","import { IScheduler } from '../Scheduler';\nimport { Action } from '../scheduler/Action';\nimport { Subject } from '../Subject';\nimport { Operator } from '../Operator';\nimport { async } from '../scheduler/async';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { Subscription } from '../Subscription';\nimport { isNumeric } from '../util/isNumeric';\nimport { isScheduler } from '../util/isScheduler';\nimport { OperatorFunction } from '../interfaces';\n\n/**\n * Branch out the source Observable values as a nested Observable periodically\n * in time.\n *\n * <span class=\"informal\">It's like {@link bufferTime}, but emits a nested\n * Observable instead of an array.</span>\n *\n * <img src=\"./img/windowTime.png\" width=\"100%\">\n *\n * Returns an Observable that emits windows of items it collects from the source\n * Observable. The output Observable starts a new window periodically, as\n * determined by the `windowCreationInterval` argument. It emits each window\n * after a fixed timespan, specified by the `windowTimeSpan` argument. When the\n * source Observable completes or encounters an error, the output Observable\n * emits the current window and propagates the notification from the source\n * Observable. If `windowCreationInterval` is not provided, the output\n * Observable starts a new window when the previous window of duration\n * `windowTimeSpan` completes. If `maxWindowCount` is provided, each window\n * will emit at most fixed number of values. Window will complete immediately\n * after emitting last value and next one still will open as specified by\n * `windowTimeSpan` and `windowCreationInterval` arguments.\n *\n * @example <caption>In every window of 1 second each, emit at most 2 click events</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.windowTime(1000)\n *   .map(win => win.take(2)) // each window has at most 2 emissions\n *   .mergeAll(); // flatten the Observable-of-Observables\n * result.subscribe(x => console.log(x));\n *\n * @example <caption>Every 5 seconds start a window 1 second long, and emit at most 2 click events per window</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.windowTime(1000, 5000)\n *   .map(win => win.take(2)) // each window has at most 2 emissions\n *   .mergeAll(); // flatten the Observable-of-Observables\n * result.subscribe(x => console.log(x));\n *\n * @example <caption>Same as example above but with maxWindowCount instead of take</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.windowTime(1000, 5000, 2) // each window has still at most 2 emissions\n *   .mergeAll(); // flatten the Observable-of-Observables\n * result.subscribe(x => console.log(x));\n\n * @see {@link window}\n * @see {@link windowCount}\n * @see {@link windowToggle}\n * @see {@link windowWhen}\n * @see {@link bufferTime}\n *\n * @param {number} windowTimeSpan The amount of time to fill each window.\n * @param {number} [windowCreationInterval] The interval at which to start new\n * windows.\n * @param {number} [maxWindowSize=Number.POSITIVE_INFINITY] Max number of\n * values each window can emit before completion.\n * @param {Scheduler} [scheduler=async] The scheduler on which to schedule the\n * intervals that determine window boundaries.\n * @return {Observable<Observable<T>>} An observable of windows, which in turn\n * are Observables.\n * @method windowTime\n * @owner Observable\n */\nexport function windowTime<T>(windowTimeSpan: number,\n                              scheduler?: IScheduler): OperatorFunction<T, Observable<T>>;\nexport function windowTime<T>(windowTimeSpan: number,\n                              windowCreationInterval: number,\n                              scheduler?: IScheduler): OperatorFunction<T, Observable<T>>;\nexport function windowTime<T>(windowTimeSpan: number,\n                              windowCreationInterval: number,\n                              maxWindowSize: number,\n                              scheduler?: IScheduler): OperatorFunction<T, Observable<T>>;\n\nexport function windowTime<T>(windowTimeSpan: number): OperatorFunction<T, Observable<T>> {\n  let scheduler: IScheduler = async;\n  let windowCreationInterval: number = null;\n  let maxWindowSize: number = Number.POSITIVE_INFINITY;\n\n  if (isScheduler(arguments[3])) {\n    scheduler = arguments[3];\n  }\n\n  if (isScheduler(arguments[2])) {\n    scheduler = arguments[2];\n  } else if (isNumeric(arguments[2])) {\n    maxWindowSize = arguments[2];\n  }\n\n  if (isScheduler(arguments[1])) {\n    scheduler = arguments[1];\n  } else if (isNumeric(arguments[1])) {\n    windowCreationInterval = arguments[1];\n  }\n\n  return function windowTimeOperatorFunction(source: Observable<T>) {\n    return source.lift(new WindowTimeOperator<T>(windowTimeSpan, windowCreationInterval, maxWindowSize, scheduler));\n  };\n}\n\nclass WindowTimeOperator<T> implements Operator<T, Observable<T>> {\n\n  constructor(private windowTimeSpan: number,\n              private windowCreationInterval: number | null,\n              private maxWindowSize: number,\n              private scheduler: IScheduler) {\n  }\n\n  call(subscriber: Subscriber<Observable<T>>, source: any): any {\n    return source.subscribe(new WindowTimeSubscriber(\n      subscriber, this.windowTimeSpan, this.windowCreationInterval, this.maxWindowSize, this.scheduler\n    ));\n  }\n}\n\ninterface CreationState<T> {\n  windowTimeSpan: number;\n  windowCreationInterval: number;\n  subscriber: WindowTimeSubscriber<T>;\n  scheduler: IScheduler;\n}\n\ninterface TimeSpanOnlyState<T> {\n    window: CountedSubject<T>;\n    windowTimeSpan: number;\n    subscriber: WindowTimeSubscriber<T>;\n  }\n\ninterface CloseWindowContext<T> {\n  action: Action<CreationState<T>>;\n  subscription: Subscription;\n}\n\ninterface CloseState<T> {\n  subscriber: WindowTimeSubscriber<T>;\n  window: CountedSubject<T>;\n  context: CloseWindowContext<T>;\n}\n\nclass CountedSubject<T> extends Subject<T> {\n  private _numberOfNextedValues: number = 0;\n\n  next(value?: T): void {\n    this._numberOfNextedValues++;\n    super.next(value);\n  }\n\n  get numberOfNextedValues(): number {\n    return this._numberOfNextedValues;\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass WindowTimeSubscriber<T> extends Subscriber<T> {\n  private windows: CountedSubject<T>[] = [];\n\n  constructor(protected destination: Subscriber<Observable<T>>,\n              private windowTimeSpan: number,\n              private windowCreationInterval: number | null,\n              private maxWindowSize: number,\n              private scheduler: IScheduler) {\n    super(destination);\n\n    const window = this.openWindow();\n    if (windowCreationInterval !== null && windowCreationInterval >= 0) {\n      const closeState: CloseState<T> = { subscriber: this, window, context: <any>null };\n      const creationState: CreationState<T> = { windowTimeSpan, windowCreationInterval, subscriber: this, scheduler };\n      this.add(scheduler.schedule(dispatchWindowClose, windowTimeSpan, closeState));\n      this.add(scheduler.schedule(dispatchWindowCreation, windowCreationInterval, creationState));\n    } else {\n      const timeSpanOnlyState: TimeSpanOnlyState<T> = { subscriber: this, window, windowTimeSpan };\n      this.add(scheduler.schedule(dispatchWindowTimeSpanOnly, windowTimeSpan, timeSpanOnlyState));\n    }\n  }\n\n  protected _next(value: T): void {\n    const windows = this.windows;\n    const len = windows.length;\n    for (let i = 0; i < len; i++) {\n      const window = windows[i];\n      if (!window.closed) {\n        window.next(value);\n        if (window.numberOfNextedValues >= this.maxWindowSize) {\n          this.closeWindow(window);\n        }\n      }\n    }\n  }\n\n  protected _error(err: any): void {\n    const windows = this.windows;\n    while (windows.length > 0) {\n      windows.shift().error(err);\n    }\n    this.destination.error(err);\n  }\n\n  protected _complete(): void {\n    const windows = this.windows;\n    while (windows.length > 0) {\n      const window = windows.shift();\n      if (!window.closed) {\n        window.complete();\n      }\n    }\n    this.destination.complete();\n  }\n\n  public openWindow(): CountedSubject<T> {\n    const window = new CountedSubject<T>();\n    this.windows.push(window);\n    const destination = this.destination;\n    destination.next(window);\n    return window;\n  }\n\n  public closeWindow(window: CountedSubject<T>): void {\n    window.complete();\n    const windows = this.windows;\n    windows.splice(windows.indexOf(window), 1);\n  }\n}\n\nfunction dispatchWindowTimeSpanOnly<T>(this: Action<TimeSpanOnlyState<T>>, state: TimeSpanOnlyState<T>): void {\n  const { subscriber, windowTimeSpan, window } = state;\n  if (window) {\n    subscriber.closeWindow(window);\n  }\n  state.window = subscriber.openWindow();\n  this.schedule(state, windowTimeSpan);\n}\n\nfunction dispatchWindowCreation<T>(this: Action<CreationState<T>>, state: CreationState<T>): void {\n  const { windowTimeSpan, subscriber, scheduler, windowCreationInterval } = state;\n  const window = subscriber.openWindow();\n  const action = this;\n  let context: CloseWindowContext<T> = { action, subscription: <any>null };\n  const timeSpanState: CloseState<T> = { subscriber, window, context };\n  context.subscription = scheduler.schedule(dispatchWindowClose, windowTimeSpan, timeSpanState);\n  action.add(context.subscription);\n  action.schedule(state, windowCreationInterval);\n}\n\nfunction dispatchWindowClose<T>(state: CloseState<T>): void {\n  const { subscriber, window, context } = state;\n  if (context && context.action && context.subscription) {\n    context.action.remove(context.subscription);\n  }\n  subscriber.closeWindow(window);\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { Subject } from '../Subject';\nimport { Subscription } from '../Subscription';\nimport { tryCatch } from '../util/tryCatch';\nimport { errorObject } from '../util/errorObject';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OperatorFunction } from '../interfaces';\n\n/**\n * Branch out the source Observable values as a nested Observable starting from\n * an emission from `openings` and ending when the output of `closingSelector`\n * emits.\n *\n * <span class=\"informal\">It's like {@link bufferToggle}, but emits a nested\n * Observable instead of an array.</span>\n *\n * <img src=\"./img/windowToggle.png\" width=\"100%\">\n *\n * Returns an Observable that emits windows of items it collects from the source\n * Observable. The output Observable emits windows that contain those items\n * emitted by the source Observable between the time when the `openings`\n * Observable emits an item and when the Observable returned by\n * `closingSelector` emits an item.\n *\n * @example <caption>Every other second, emit the click events from the next 500ms</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var openings = Rx.Observable.interval(1000);\n * var result = clicks.windowToggle(openings, i =>\n *   i % 2 ? Rx.Observable.interval(500) : Rx.Observable.empty()\n * ).mergeAll();\n * result.subscribe(x => console.log(x));\n *\n * @see {@link window}\n * @see {@link windowCount}\n * @see {@link windowTime}\n * @see {@link windowWhen}\n * @see {@link bufferToggle}\n *\n * @param {Observable<O>} openings An observable of notifications to start new\n * windows.\n * @param {function(value: O): Observable} closingSelector A function that takes\n * the value emitted by the `openings` observable and returns an Observable,\n * which, when it emits (either `next` or `complete`), signals that the\n * associated window should complete.\n * @return {Observable<Observable<T>>} An observable of windows, which in turn\n * are Observables.\n * @method windowToggle\n * @owner Observable\n */\nexport function windowToggle<T, O>(openings: Observable<O>,\n                                   closingSelector: (openValue: O) => Observable<any>): OperatorFunction<T, Observable<T>> {\n  return (source: Observable<T>) => source.lift(new WindowToggleOperator<T, O>(openings, closingSelector));\n}\n\nclass WindowToggleOperator<T, O> implements Operator<T, Observable<T>> {\n\n  constructor(private openings: Observable<O>,\n              private closingSelector: (openValue: O) => Observable<any>) {\n  }\n\n  call(subscriber: Subscriber<Observable<T>>, source: any): any {\n    return source.subscribe(new WindowToggleSubscriber(\n      subscriber, this.openings, this.closingSelector\n    ));\n  }\n}\n\ninterface WindowContext<T> {\n  window: Subject<T>;\n  subscription: Subscription;\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass WindowToggleSubscriber<T, O> extends OuterSubscriber<T, any> {\n  private contexts: WindowContext<T>[] = [];\n  private openSubscription: Subscription;\n\n  constructor(destination: Subscriber<Observable<T>>,\n              private openings: Observable<O>,\n              private closingSelector: (openValue: O) => Observable<any>) {\n    super(destination);\n    this.add(this.openSubscription = subscribeToResult(this, openings, openings));\n  }\n\n  protected _next(value: T) {\n    const { contexts } = this;\n    if (contexts) {\n      const len = contexts.length;\n      for (let i = 0; i < len; i++) {\n        contexts[i].window.next(value);\n      }\n    }\n  }\n\n  protected _error(err: any) {\n\n    const { contexts } = this;\n    this.contexts = null;\n\n    if (contexts) {\n      const len = contexts.length;\n      let index = -1;\n\n      while (++index < len) {\n        const context = contexts[index];\n        context.window.error(err);\n        context.subscription.unsubscribe();\n      }\n    }\n\n    super._error(err);\n  }\n\n  protected _complete() {\n    const { contexts } = this;\n    this.contexts = null;\n    if (contexts) {\n      const len = contexts.length;\n      let index = -1;\n      while (++index < len) {\n        const context = contexts[index];\n        context.window.complete();\n        context.subscription.unsubscribe();\n      }\n    }\n    super._complete();\n  }\n\n  /** @deprecated internal use only */ _unsubscribe() {\n    const { contexts } = this;\n    this.contexts = null;\n    if (contexts) {\n      const len = contexts.length;\n      let index = -1;\n      while (++index < len) {\n        const context = contexts[index];\n        context.window.unsubscribe();\n        context.subscription.unsubscribe();\n      }\n    }\n  }\n\n  notifyNext(outerValue: any, innerValue: any,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, any>): void {\n\n    if (outerValue === this.openings) {\n\n      const { closingSelector } = this;\n      const closingNotifier = tryCatch(closingSelector)(innerValue);\n\n      if (closingNotifier === errorObject) {\n        return this.error(errorObject.e);\n      } else {\n        const window = new Subject<T>();\n        const subscription = new Subscription();\n        const context = { window, subscription };\n        this.contexts.push(context);\n        const innerSubscription = subscribeToResult(this, closingNotifier, context);\n\n        if (innerSubscription.closed) {\n          this.closeWindow(this.contexts.length - 1);\n        } else {\n          (<any> innerSubscription).context = context;\n          subscription.add(innerSubscription);\n        }\n\n        this.destination.next(window);\n\n      }\n    } else {\n      this.closeWindow(this.contexts.indexOf(outerValue));\n    }\n  }\n\n  notifyError(err: any): void {\n    this.error(err);\n  }\n\n  notifyComplete(inner: Subscription): void {\n    if (inner !== this.openSubscription) {\n      this.closeWindow(this.contexts.indexOf((<any> inner).context));\n    }\n  }\n\n  private closeWindow(index: number): void {\n    if (index === -1) {\n      return;\n    }\n\n    const { contexts } = this;\n    const context = contexts[index];\n    const { window, subscription } = context;\n    contexts.splice(index, 1);\n    window.complete();\n    subscription.unsubscribe();\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { Subject } from '../Subject';\nimport { Subscription } from '../Subscription';\nimport { tryCatch } from '../util/tryCatch';\nimport { errorObject } from '../util/errorObject';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OperatorFunction } from '../interfaces';\n\n/**\n * Branch out the source Observable values as a nested Observable using a\n * factory function of closing Observables to determine when to start a new\n * window.\n *\n * <span class=\"informal\">It's like {@link bufferWhen}, but emits a nested\n * Observable instead of an array.</span>\n *\n * <img src=\"./img/windowWhen.png\" width=\"100%\">\n *\n * Returns an Observable that emits windows of items it collects from the source\n * Observable. The output Observable emits connected, non-overlapping windows.\n * It emits the current window and opens a new one whenever the Observable\n * produced by the specified `closingSelector` function emits an item. The first\n * window is opened immediately when subscribing to the output Observable.\n *\n * @example <caption>Emit only the first two clicks events in every window of [1-5] random seconds</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks\n *   .windowWhen(() => Rx.Observable.interval(1000 + Math.random() * 4000))\n *   .map(win => win.take(2)) // each window has at most 2 emissions\n *   .mergeAll(); // flatten the Observable-of-Observables\n * result.subscribe(x => console.log(x));\n *\n * @see {@link window}\n * @see {@link windowCount}\n * @see {@link windowTime}\n * @see {@link windowToggle}\n * @see {@link bufferWhen}\n *\n * @param {function(): Observable} closingSelector A function that takes no\n * arguments and returns an Observable that signals (on either `next` or\n * `complete`) when to close the previous window and start a new one.\n * @return {Observable<Observable<T>>} An observable of windows, which in turn\n * are Observables.\n * @method windowWhen\n * @owner Observable\n */\nexport function windowWhen<T>(closingSelector: () => Observable<any>): OperatorFunction<T, Observable<T>> {\n  return function windowWhenOperatorFunction(source: Observable<T>) {\n    return source.lift(new WindowOperator<T>(closingSelector));\n  };\n}\n\nclass WindowOperator<T> implements Operator<T, Observable<T>> {\n  constructor(private closingSelector: () => Observable<any>) {\n  }\n\n  call(subscriber: Subscriber<Observable<T>>, source: any): any {\n    return source.subscribe(new WindowSubscriber(subscriber, this.closingSelector));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass WindowSubscriber<T> extends OuterSubscriber<T, any> {\n  private window: Subject<T>;\n  private closingNotification: Subscription;\n\n  constructor(protected destination: Subscriber<Observable<T>>,\n              private closingSelector: () => Observable<any>) {\n    super(destination);\n    this.openWindow();\n  }\n\n  notifyNext(outerValue: T, innerValue: any,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, any>): void {\n    this.openWindow(innerSub);\n  }\n\n  notifyError(error: any, innerSub: InnerSubscriber<T, any>): void {\n    this._error(error);\n  }\n\n  notifyComplete(innerSub: InnerSubscriber<T, any>): void {\n    this.openWindow(innerSub);\n  }\n\n  protected _next(value: T): void {\n    this.window.next(value);\n  }\n\n  protected _error(err: any): void {\n    this.window.error(err);\n    this.destination.error(err);\n    this.unsubscribeClosingNotification();\n  }\n\n  protected _complete(): void {\n    this.window.complete();\n    this.destination.complete();\n    this.unsubscribeClosingNotification();\n  }\n\n  private unsubscribeClosingNotification(): void {\n    if (this.closingNotification) {\n      this.closingNotification.unsubscribe();\n    }\n  }\n\n  private openWindow(innerSub: InnerSubscriber<T, any> = null): void {\n    if (innerSub) {\n      this.remove(innerSub);\n      innerSub.unsubscribe();\n    }\n\n    const prevWindow = this.window;\n    if (prevWindow) {\n      prevWindow.complete();\n    }\n\n    const window = this.window = new Subject<T>();\n    this.destination.next(window);\n\n    const closingNotifier = tryCatch(this.closingSelector)();\n    if (closingNotifier === errorObject) {\n      const err = errorObject.e;\n      this.destination.error(err);\n      this.window.error(err);\n    } else {\n      this.add(this.closingNotification = subscribeToResult(this, closingNotifier));\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable, ObservableInput } from '../Observable';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OperatorFunction } from '../interfaces';\n\n/* tslint:disable:max-line-length */\nexport function withLatestFrom<T, R>(project: (v1: T) => R): OperatorFunction<T, R>;\nexport function withLatestFrom<T, T2, R>(v2: ObservableInput<T2>, project: (v1: T, v2: T2) => R): OperatorFunction<T, R>;\nexport function withLatestFrom<T, T2, T3, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, project: (v1: T, v2: T2, v3: T3) => R): OperatorFunction<T, R>;\nexport function withLatestFrom<T, T2, T3, T4, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, project: (v1: T, v2: T2, v3: T3, v4: T4) => R): OperatorFunction<T, R>;\nexport function withLatestFrom<T, T2, T3, T4, T5, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, project: (v1: T, v2: T2, v3: T3, v4: T4, v5: T5) => R): OperatorFunction<T, R>;\nexport function withLatestFrom<T, T2, T3, T4, T5, T6, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>, project: (v1: T, v2: T2, v3: T3, v4: T4, v5: T5, v6: T6) => R): OperatorFunction<T, R> ;\nexport function withLatestFrom<T, T2>(v2: ObservableInput<T2>): OperatorFunction<T, [T, T2]>;\nexport function withLatestFrom<T, T2, T3>(v2: ObservableInput<T2>, v3: ObservableInput<T3>): OperatorFunction<T, [T, T2, T3]>;\nexport function withLatestFrom<T, T2, T3, T4>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>): OperatorFunction<T, [T, T2, T3, T4]>;\nexport function withLatestFrom<T, T2, T3, T4, T5>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>): OperatorFunction<T, [T, T2, T3, T4, T5]>;\nexport function withLatestFrom<T, T2, T3, T4, T5, T6>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>): OperatorFunction<T, [T, T2, T3, T4, T5, T6]> ;\nexport function withLatestFrom<T, R>(...observables: Array<ObservableInput<any> | ((...values: Array<any>) => R)>): OperatorFunction<T, R>;\nexport function withLatestFrom<T, R>(array: ObservableInput<any>[]): OperatorFunction<T, R>;\nexport function withLatestFrom<T, R>(array: ObservableInput<any>[], project: (...values: Array<any>) => R): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Combines the source Observable with other Observables to create an Observable\n * whose values are calculated from the latest values of each, only when the\n * source emits.\n *\n * <span class=\"informal\">Whenever the source Observable emits a value, it\n * computes a formula using that value plus the latest values from other input\n * Observables, then emits the output of that formula.</span>\n *\n * <img src=\"./img/withLatestFrom.png\" width=\"100%\">\n *\n * `withLatestFrom` combines each value from the source Observable (the\n * instance) with the latest values from the other input Observables only when\n * the source emits a value, optionally using a `project` function to determine\n * the value to be emitted on the output Observable. All input Observables must\n * emit at least one value before the output Observable will emit a value.\n *\n * @example <caption>On every click event, emit an array with the latest timer event plus the click event</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var timer = Rx.Observable.interval(1000);\n * var result = clicks.withLatestFrom(timer);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link combineLatest}\n *\n * @param {ObservableInput} other An input Observable to combine with the source\n * Observable. More than one input Observables may be given as argument.\n * @param {Function} [project] Projection function for combining values\n * together. Receives all values in order of the Observables passed, where the\n * first parameter is a value from the source Observable. (e.g.\n * `a.withLatestFrom(b, c, (a1, b1, c1) => a1 + b1 + c1)`). If this is not\n * passed, arrays will be emitted on the output Observable.\n * @return {Observable} An Observable of projected values from the most recent\n * values from each input Observable, or an array of the most recent values from\n * each input Observable.\n * @method withLatestFrom\n * @owner Observable\n */\nexport function withLatestFrom<T, R>(...args: Array<ObservableInput<any> | ((...values: Array<any>) => R)>): OperatorFunction<T, R> {\n  return (source: Observable<T>) => {\n    let project: any;\n    if (typeof args[args.length - 1] === 'function') {\n      project = args.pop();\n    }\n    const observables = <Observable<any>[]>args;\n    return source.lift(new WithLatestFromOperator(observables, project));\n  };\n}\n\nclass WithLatestFromOperator<T, R> implements Operator<T, R> {\n  constructor(private observables: Observable<any>[],\n              private project?: (...values: any[]) => Observable<R>) {\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new WithLatestFromSubscriber(subscriber, this.observables, this.project));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass WithLatestFromSubscriber<T, R> extends OuterSubscriber<T, R> {\n  private values: any[];\n  private toRespond: number[] = [];\n\n  constructor(destination: Subscriber<R>,\n              private observables: Observable<any>[],\n              private project?: (...values: any[]) => Observable<R>) {\n    super(destination);\n    const len = observables.length;\n    this.values = new Array(len);\n\n    for (let i = 0; i < len; i++) {\n      this.toRespond.push(i);\n    }\n\n    for (let i = 0; i < len; i++) {\n      let observable = observables[i];\n      this.add(subscribeToResult<T, R>(this, observable, <any>observable, i));\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this.values[outerIndex] = innerValue;\n    const toRespond = this.toRespond;\n    if (toRespond.length > 0) {\n      const found = toRespond.indexOf(outerIndex);\n      if (found !== -1) {\n        toRespond.splice(found, 1);\n      }\n    }\n  }\n\n  notifyComplete() {\n    // noop\n  }\n\n  protected _next(value: T) {\n    if (this.toRespond.length === 0) {\n      const args = [value, ...this.values];\n      if (this.project) {\n        this._tryProject(args);\n      } else {\n        this.destination.next(args);\n      }\n    }\n  }\n\n  private _tryProject(args: any[]) {\n    let result: any;\n    try {\n      result = this.project.apply(this, args);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    this.destination.next(result);\n  }\n}\n","import { Observable, ObservableInput } from '../Observable';\nimport { ArrayObservable } from '../observable/ArrayObservable';\nimport { isArray } from '../util/isArray';\nimport { Operator } from '../Operator';\nimport { PartialObserver } from '../Observer';\nimport { Subscriber } from '../Subscriber';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { iterator as Symbol_iterator } from '../symbol/iterator';\nimport { OperatorFunction } from '../interfaces';\n\n/* tslint:disable:max-line-length */\nexport function zip<T, R>(project: (v1: T) => R): OperatorFunction<T, R>;\nexport function zip<T, T2, R>(v2: ObservableInput<T2>, project: (v1: T, v2: T2) => R): OperatorFunction<T, R>;\nexport function zip<T, T2, T3, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, project: (v1: T, v2: T2, v3: T3) => R): OperatorFunction<T, R>;\nexport function zip<T, T2, T3, T4, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, project: (v1: T, v2: T2, v3: T3, v4: T4) => R): OperatorFunction<T, R>;\nexport function zip<T, T2, T3, T4, T5, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, project: (v1: T, v2: T2, v3: T3, v4: T4, v5: T5) => R): OperatorFunction<T, R>;\nexport function zip<T, T2, T3, T4, T5, T6, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>, project: (v1: T, v2: T2, v3: T3, v4: T4, v5: T5, v6: T6) => R): OperatorFunction<T, R> ;\nexport function zip<T, T2>(v2: ObservableInput<T2>): OperatorFunction<T, [T, T2]>;\nexport function zip<T, T2, T3>(v2: ObservableInput<T2>, v3: ObservableInput<T3>): OperatorFunction<T, [T, T2, T3]>;\nexport function zip<T, T2, T3, T4>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>): OperatorFunction<T, [T, T2, T3, T4]>;\nexport function zip<T, T2, T3, T4, T5>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>): OperatorFunction<T, [T, T2, T3, T4, T5]>;\nexport function zip<T, T2, T3, T4, T5, T6>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>): OperatorFunction<T, [T, T2, T3, T4, T5, T6]> ;\nexport function zip<T, R>(...observables: Array<ObservableInput<T> | ((...values: Array<T>) => R)>): OperatorFunction<T, R>;\nexport function zip<T, R>(array: Array<ObservableInput<T>>): OperatorFunction<T, R>;\nexport function zip<T, TOther, R>(array: Array<ObservableInput<TOther>>, project: (v1: T, ...values: Array<TOther>) => R): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * @param observables\n * @return {Observable<R>}\n * @method zip\n * @owner Observable\n */\nexport function zip<T, R>(...observables: Array<ObservableInput<any> | ((...values: Array<any>) => R)>): OperatorFunction<T, R> {\n  return function zipOperatorFunction(source: Observable<T>) {\n    return source.lift.call(zipStatic<R>(source, ...observables));\n  };\n}\n\n/* tslint:disable:max-line-length */\nexport function zipStatic<T, R>(v1: ObservableInput<T>, project: (v1: T) => R): Observable<R>;\nexport function zipStatic<T, T2, R>(v1: ObservableInput<T>, v2: ObservableInput<T2>, project: (v1: T, v2: T2) => R): Observable<R>;\nexport function zipStatic<T, T2, T3, R>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, project: (v1: T, v2: T2, v3: T3) => R): Observable<R>;\nexport function zipStatic<T, T2, T3, T4, R>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, project: (v1: T, v2: T2, v3: T3, v4: T4) => R): Observable<R>;\nexport function zipStatic<T, T2, T3, T4, T5, R>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, project: (v1: T, v2: T2, v3: T3, v4: T4, v5: T5) => R): Observable<R>;\nexport function zipStatic<T, T2, T3, T4, T5, T6, R>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>, project: (v1: T, v2: T2, v3: T3, v4: T4, v5: T5, v6: T6) => R): Observable<R>;\n\nexport function zipStatic<T, T2>(v1: ObservableInput<T>, v2: ObservableInput<T2>): Observable<[T, T2]>;\nexport function zipStatic<T, T2, T3>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>): Observable<[T, T2, T3]>;\nexport function zipStatic<T, T2, T3, T4>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>): Observable<[T, T2, T3, T4]>;\nexport function zipStatic<T, T2, T3, T4, T5>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>): Observable<[T, T2, T3, T4, T5]>;\nexport function zipStatic<T, T2, T3, T4, T5, T6>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>): Observable<[T, T2, T3, T4, T5, T6]>;\n\nexport function zipStatic<T>(array: ObservableInput<T>[]): Observable<T[]>;\nexport function zipStatic<R>(array: ObservableInput<any>[]): Observable<R>;\nexport function zipStatic<T, R>(array: ObservableInput<T>[], project: (...values: Array<T>) => R): Observable<R>;\nexport function zipStatic<R>(array: ObservableInput<any>[], project: (...values: Array<any>) => R): Observable<R>;\n\nexport function zipStatic<T>(...observables: Array<ObservableInput<T>>): Observable<T[]>;\nexport function zipStatic<T, R>(...observables: Array<ObservableInput<T> | ((...values: Array<T>) => R)>): Observable<R>;\nexport function zipStatic<R>(...observables: Array<ObservableInput<any> | ((...values: Array<any>) => R)>): Observable<R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Combines multiple Observables to create an Observable whose values are calculated from the values, in order, of each\n * of its input Observables.\n *\n * If the latest parameter is a function, this function is used to compute the created value from the input values.\n * Otherwise, an array of the input values is returned.\n *\n * @example <caption>Combine age and name from different sources</caption>\n *\n * let age$ = Observable.of<number>(27, 25, 29);\n * let name$ = Observable.of<string>('Foo', 'Bar', 'Beer');\n * let isDev$ = Observable.of<boolean>(true, true, false);\n *\n * Observable\n *     .zip(age$,\n *          name$,\n *          isDev$,\n *          (age: number, name: string, isDev: boolean) => ({ age, name, isDev }))\n *     .subscribe(x => console.log(x));\n *\n * // outputs\n * // { age: 27, name: 'Foo', isDev: true }\n * // { age: 25, name: 'Bar', isDev: true }\n * // { age: 29, name: 'Beer', isDev: false }\n *\n * @param observables\n * @return {Observable<R>}\n * @static true\n * @name zip\n * @owner Observable\n */\nexport function zipStatic<T, R>(...observables: Array<ObservableInput<any> | ((...values: Array<any>) => R)>): Observable<R> {\n  const project = <((...ys: Array<any>) => R)> observables[observables.length - 1];\n  if (typeof project === 'function') {\n    observables.pop();\n  }\n  return new ArrayObservable(observables).lift(new ZipOperator(project));\n}\n\nexport class ZipOperator<T, R> implements Operator<T, R> {\n\n  project: (...values: Array<any>) => R;\n\n  constructor(project?: (...values: Array<any>) => R) {\n    this.project = project;\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new ZipSubscriber(subscriber, this.project));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class ZipSubscriber<T, R> extends Subscriber<T> {\n  private values: any;\n  private project: (...values: Array<any>) => R;\n  private iterators: LookAheadIterator<any>[] = [];\n  private active = 0;\n\n  constructor(destination: Subscriber<R>,\n              project?: (...values: Array<any>) => R,\n              values: any = Object.create(null)) {\n    super(destination);\n    this.project = (typeof project === 'function') ? project : null;\n    this.values = values;\n  }\n\n  protected _next(value: any) {\n    const iterators = this.iterators;\n    if (isArray(value)) {\n      iterators.push(new StaticArrayIterator(value));\n    } else if (typeof value[Symbol_iterator] === 'function') {\n      iterators.push(new StaticIterator(value[Symbol_iterator]()));\n    } else {\n      iterators.push(new ZipBufferIterator(this.destination, this, value));\n    }\n  }\n\n  protected _complete() {\n    const iterators = this.iterators;\n    const len = iterators.length;\n\n    if (len === 0) {\n      this.destination.complete();\n      return;\n    }\n\n    this.active = len;\n    for (let i = 0; i < len; i++) {\n      let iterator: ZipBufferIterator<any, any> = <any>iterators[i];\n      if (iterator.stillUnsubscribed) {\n        this.add(iterator.subscribe(iterator, i));\n      } else {\n        this.active--; // not an observable\n      }\n    }\n  }\n\n  notifyInactive() {\n    this.active--;\n    if (this.active === 0) {\n      this.destination.complete();\n    }\n  }\n\n  checkIterators() {\n    const iterators = this.iterators;\n    const len = iterators.length;\n    const destination = this.destination;\n\n    // abort if not all of them have values\n    for (let i = 0; i < len; i++) {\n      let iterator = iterators[i];\n      if (typeof iterator.hasValue === 'function' && !iterator.hasValue()) {\n        return;\n      }\n    }\n\n    let shouldComplete = false;\n    const args: any[] = [];\n    for (let i = 0; i < len; i++) {\n      let iterator = iterators[i];\n      let result = iterator.next();\n\n      // check to see if it's completed now that you've gotten\n      // the next value.\n      if (iterator.hasCompleted()) {\n        shouldComplete = true;\n      }\n\n      if (result.done) {\n        destination.complete();\n        return;\n      }\n\n      args.push(result.value);\n    }\n\n    if (this.project) {\n      this._tryProject(args);\n    } else {\n      destination.next(args);\n    }\n\n    if (shouldComplete) {\n      destination.complete();\n    }\n  }\n\n  protected _tryProject(args: any[]) {\n    let result: any;\n    try {\n      result = this.project.apply(this, args);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    this.destination.next(result);\n  }\n}\n\ninterface LookAheadIterator<T> extends Iterator<T> {\n  hasValue(): boolean;\n  hasCompleted(): boolean;\n}\n\nclass StaticIterator<T> implements LookAheadIterator<T> {\n  private nextResult: IteratorResult<T>;\n\n  constructor(private iterator: Iterator<T>) {\n    this.nextResult = iterator.next();\n  }\n\n  hasValue() {\n    return true;\n  }\n\n  next(): IteratorResult<T> {\n    const result = this.nextResult;\n    this.nextResult = this.iterator.next();\n    return result;\n  }\n\n  hasCompleted() {\n    const nextResult = this.nextResult;\n    return nextResult && nextResult.done;\n  }\n}\n\nclass StaticArrayIterator<T> implements LookAheadIterator<T> {\n  private index = 0;\n  private length = 0;\n\n  constructor(private array: T[]) {\n    this.length = array.length;\n  }\n\n  [Symbol_iterator]() {\n    return this;\n  }\n\n  next(value?: any): IteratorResult<T> {\n    const i = this.index++;\n    const array = this.array;\n    return i < this.length ? { value: array[i], done: false } : { value: null, done: true };\n  }\n\n  hasValue() {\n    return this.array.length > this.index;\n  }\n\n  hasCompleted() {\n    return this.array.length === this.index;\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass ZipBufferIterator<T, R> extends OuterSubscriber<T, R> implements LookAheadIterator<T> {\n  stillUnsubscribed = true;\n  buffer: T[] = [];\n  isComplete = false;\n\n  constructor(destination: PartialObserver<T>,\n              private parent: ZipSubscriber<T, R>,\n              private observable: Observable<T>) {\n    super(destination);\n  }\n\n  [Symbol_iterator]() {\n    return this;\n  }\n\n  // NOTE: there is actually a name collision here with Subscriber.next and Iterator.next\n  //    this is legit because `next()` will never be called by a subscription in this case.\n  next(): IteratorResult<T> {\n    const buffer = this.buffer;\n    if (buffer.length === 0 && this.isComplete) {\n      return { value: null, done: true };\n    } else {\n      return { value: buffer.shift(), done: false };\n    }\n  }\n\n  hasValue() {\n    return this.buffer.length > 0;\n  }\n\n  hasCompleted() {\n    return this.buffer.length === 0 && this.isComplete;\n  }\n\n  notifyComplete() {\n    if (this.buffer.length > 0) {\n      this.isComplete = true;\n      this.parent.notifyInactive();\n    } else {\n      this.destination.complete();\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: any,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this.buffer.push(innerValue);\n    this.parent.checkIterators();\n  }\n\n  subscribe(value: any, index: number) {\n    return subscribeToResult<any, any>(this, this.observable, this, index);\n  }\n}\n","export { audit } from './operators/audit';\nexport { auditTime } from './operators/auditTime';\nexport { buffer } from './operators/buffer';\nexport { bufferCount } from './operators/bufferCount';\nexport { bufferTime } from './operators/bufferTime';\nexport { bufferToggle } from './operators/bufferToggle';\nexport { bufferWhen } from './operators/bufferWhen';\nexport { catchError } from './operators/catchError';\nexport { combineAll } from './operators/combineAll';\nexport { combineLatest } from './operators/combineLatest';\nexport { concat } from './operators/concat';\nexport { concatAll } from './operators/concatAll';\nexport { concatMap } from './operators/concatMap';\nexport { concatMapTo } from './operators/concatMapTo';\nexport { count } from './operators/count';\nexport { debounce } from './operators/debounce';\nexport { debounceTime } from './operators/debounceTime';\nexport { defaultIfEmpty } from './operators/defaultIfEmpty';\nexport { delay } from './operators/delay';\nexport { delayWhen } from './operators/delayWhen';\nexport { dematerialize } from './operators/dematerialize';\nexport { distinct } from './operators/distinct';\nexport { distinctUntilChanged } from './operators/distinctUntilChanged';\nexport { distinctUntilKeyChanged } from './operators/distinctUntilKeyChanged';\nexport { elementAt } from './operators/elementAt';\nexport { every } from './operators/every';\nexport { exhaust } from './operators/exhaust';\nexport { exhaustMap } from './operators/exhaustMap';\nexport { expand } from './operators/expand';\nexport { filter } from './operators/filter';\nexport { finalize } from './operators/finalize';\nexport { find } from './operators/find';\nexport { findIndex } from './operators/findIndex';\nexport { first } from './operators/first';\nexport { groupBy } from './operators/groupBy';\nexport { ignoreElements } from './operators/ignoreElements';\nexport { isEmpty } from './operators/isEmpty';\nexport { last } from './operators/last';\nexport { map } from './operators/map';\nexport { mapTo } from './operators/mapTo';\nexport { materialize } from './operators/materialize';\nexport { max } from './operators/max';\nexport { merge } from './operators/merge';\nexport { mergeAll } from './operators/mergeAll';\nexport { mergeMap } from './operators/mergeMap';\nexport { mergeMap as flatMap } from './operators/mergeMap';\nexport { mergeMapTo } from './operators/mergeMapTo';\nexport { mergeScan } from './operators/mergeScan';\nexport { min } from './operators/min';\nexport { multicast } from './operators/multicast';\nexport { observeOn } from './operators/observeOn';\nexport { onErrorResumeNext } from './operators/onErrorResumeNext';\nexport { pairwise } from './operators/pairwise';\nexport { partition } from './operators/partition';\nexport { pluck } from './operators/pluck';\nexport { publish } from './operators/publish';\nexport { publishBehavior } from './operators/publishBehavior';\nexport { publishLast } from './operators/publishLast';\nexport { publishReplay } from './operators/publishReplay';\nexport { race } from './operators/race';\nexport { reduce } from './operators/reduce';\nexport { repeat } from './operators/repeat';\nexport { repeatWhen } from './operators/repeatWhen';\nexport { retry } from './operators/retry';\nexport { retryWhen } from './operators/retryWhen';\nexport { refCount } from './operators/refCount';\nexport { sample } from './operators/sample';\nexport { sampleTime } from './operators/sampleTime';\nexport { scan } from './operators/scan';\nexport { sequenceEqual } from './operators/sequenceEqual';\nexport { share } from './operators/share';\nexport { shareReplay } from './operators/shareReplay';\nexport { single } from './operators/single';\nexport { skip } from './operators/skip';\nexport { skipLast } from './operators/skipLast';\nexport { skipUntil } from './operators/skipUntil';\nexport { skipWhile } from './operators/skipWhile';\nexport { startWith } from './operators/startWith';\n/**\n * TODO(https://github.com/ReactiveX/rxjs/issues/2900): Add back subscribeOn once it can be\n * treeshaken. Currently if this export is added back, it\n * forces apps to bring in asap scheduler along with\n * Immediate, root, and other supporting code.\n */\n// export { subscribeOn } from './operators/subscribeOn';\nexport { switchAll } from './operators/switchAll';\nexport { switchMap } from './operators/switchMap';\nexport { switchMapTo } from './operators/switchMapTo';\nexport { take } from './operators/take';\nexport { takeLast } from './operators/takeLast';\nexport { takeUntil } from './operators/takeUntil';\nexport { takeWhile } from './operators/takeWhile';\nexport { tap } from './operators/tap';\nexport { throttle } from './operators/throttle';\nexport { throttleTime } from './operators/throttleTime';\nexport { timeInterval } from './operators/timeInterval';\nexport { timeout } from './operators/timeout';\nexport { timeoutWith } from './operators/timeoutWith';\nexport { timestamp } from './operators/timestamp';\nexport { toArray } from './operators/toArray';\nexport { window } from './operators/window';\nexport { windowCount } from './operators/windowCount';\nexport { windowTime } from './operators/windowTime';\nexport { windowToggle } from './operators/windowToggle';\nexport { windowWhen } from './operators/windowWhen';\nexport { withLatestFrom } from './operators/withLatestFrom';\nexport { zip } from './operators/zip';\nexport { zipAll } from './operators/zipAll';\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { Subscription } from 'rxjs/Subscription';\nimport { filter } from 'rxjs/operators';\nimport { CardTabComponent } from './card-tab/card-tab.component';\nexport class CardTabsService implements OnDestroy {\n\n  tab$ = new BehaviorSubject<CardTabComponent>(null);\n  tabs$ = new BehaviorSubject<CardTabComponent[]>([]);\n  position$ = new BehaviorSubject<string>('top');\nprivate _subscription: Subscription;\nconstructor() {\n\n    // when a tab is added or removed ensure we always select one if any are available\n    this._subscription = this.tabs$.pipe(\n      filter(tabs => !this.tab$.value || !tabs.find(tab => tab === this.tab$.value)),\n    ).subscribe(tabs => this.tab$.next(tabs.length > 0 ? tabs[0] : null));\n  }\n/**\n * @return {?}\n */\nngOnDestroy(): void {\n    this._subscription.unsubscribe();\n  }\n/**\n * Add a tab to the list of tabs\n * @param {?} tab\n * @return {?}\n */\naddTab(tab: CardTabComponent): void {\n    this.tabs$.next([...this.tabs$.value, tab]);\n  }\n/**\n * Remove a tab from the list\n * @param {?} tab\n * @return {?}\n */\nremoveTab(tab: CardTabComponent): void {\n    this.tabs$.next(this.tabs$.value.filter(_tab => _tab !== tab));\n  }\n/**\n * Select the tab\n * @param {?} tab\n * @return {?}\n */\nselect(tab: CardTabComponent): void {\n    this.tab$.next(tab);\n  }\n/**\n * Set the position of the tab content\n * @param {?} position\n * @return {?}\n */\nsetPosition(position: string): void {\n    this.position$.next(position);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction CardTabsService_tsickle_Closure_declarations() {\n/** @type {?} */\nCardTabsService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nCardTabsService.ctorParameters;\n/** @type {?} */\nCardTabsService.prototype.tab$;\n/** @type {?} */\nCardTabsService.prototype.tabs$;\n/** @type {?} */\nCardTabsService.prototype.position$;\n/** @type {?} */\nCardTabsService.prototype._subscription;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { ChangeDetectionStrategy, Component, ContentChild, OnDestroy, TemplateRef } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { map } from 'rxjs/operators';\nimport { CardTabsService } from '../card-tabs.service';\nimport { CardTabContentDirective } from './card-tab-content.directive';\nexport class CardTabComponent implements OnDestroy {\n\n  active$: Observable<boolean> = this._tabService.tab$.pipe(map(tab => tab === this));\n   content: TemplateRef<any>;\n/**\n * @param {?} _tabService\n */\nconstructor(private _tabService: CardTabsService) {\n    this._tabService.addTab(this);\n  }\n/**\n * @return {?}\n */\nngOnDestroy(): void {\n    this._tabService.removeTab(this);\n  }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'ux-card-tab',\n  template: `\n    <ng-content *ngIf=\"active$ | async\"></ng-content>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: CardTabsService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'content': [{ type: ContentChild, args: [CardTabContentDirective, { read: TemplateRef }, ] },],\n};\n}\n\nfunction CardTabComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nCardTabComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nCardTabComponent.ctorParameters;\n/** @type {?} */\nCardTabComponent.propDecorators;\n/** @type {?} */\nCardTabComponent.prototype.active$;\n/** @type {?} */\nCardTabComponent.prototype.content;\n/** @type {?} */\nCardTabComponent.prototype._tabService;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, ElementRef, HostBinding, Input, ViewChild } from '@angular/core';\nimport { ResizeDimensions } from '../../../directives/resize';\nimport { CardTabComponent } from '../card-tab/card-tab.component';\nimport { CardTabsService } from '../card-tabs.service';\nexport class CardTabsetComponent {\n/**\n * @param {?} direction\n * @return {?}\n */\nset position(direction: string) {\n    this.tabService.setPosition(direction);\n  }\n/**\n * @return {?}\n */\nget position(): string {\n    return this.tabService.position$.getValue();\n  }\n\n   tablist: ElementRef;\n\n  offset: number = 0;\n  bounds: CardTabsBounds = { lower: 0, upper: 0 };\nprivate _width: number;\nprivate _innerWidth: number;\n/**\n * @param {?} tabService\n */\nconstructor(public tabService: CardTabsService) {}\n/**\n * @param {?} tab\n * @param {?} element\n * @return {?}\n */\nselect(tab: CardTabComponent, element: HTMLElement): void {\n    // select the tab\n    this.tabService.select(tab);\n\n    // ensure the tab is moved into view if required\n    this.moveIntoView(element);\n  }\n/**\n * @param {?} dimensions\n * @return {?}\n */\nresize(dimensions: ResizeDimensions): void {\n    this._width = dimensions.width;\n    this._innerWidth = this.tablist.nativeElement.scrollWidth;\n\n    this.bounds.lower = 0;\n    this.bounds.upper = -(this._innerWidth - this._width);\n  }\n/**\n * @return {?}\n */\nprevious(): void {\n    this.offset += this._width;\n\n    // ensure it remains within the allowed bounds\n    this.offset = Math.min(this.offset, this.bounds.lower);\n  }\n/**\n * @return {?}\n */\nnext(): void {\n    this.offset -= this._width;\n\n    // ensure it remains within the allowed bounds\n    this.offset = Math.max(this.offset, this.bounds.upper);\n  }\n/**\n * @param {?} element\n * @return {?}\n */\nprivate moveIntoView(element: HTMLElement): void {\n\n    // if we dont have the dimensions we cant check\n    if (!this._width || !this._innerWidth) {\n      return;\n    }\n\n    // get the current element bounds\n    const { offsetLeft, offsetWidth } = element;\n    const { marginLeft, marginRight } = getComputedStyle(element);\n\n    // calculate the visible area\n    const /** @type {?} */ viewportStart = Math.abs(this.offset);\n    const /** @type {?} */ viewportEnd = viewportStart + this._width;\n    const /** @type {?} */ cardWidth = parseFloat(marginLeft) + offsetWidth + parseFloat(marginRight);\n\n    // if we need to move to the left - figure out how much\n    if (offsetLeft < viewportStart) {\n      this.offset -= (offsetLeft - parseFloat(marginLeft)) - viewportStart;\n    }\n    \n    // if we need to move to the right - figure out how much\n    if ((offsetLeft + cardWidth) > viewportEnd) {\n      this.offset -= (offsetLeft + cardWidth) - viewportEnd;\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'ux-card-tabset',\n  template: `\n    <div class=\"card-tab-content\" role=\"tabpanel\" *ngIf=\"(tabService.tab$ | async)\">\n        <ng-content></ng-content>\n    </div>\n\n    <div class=\"card-tabs\" #tabs>\n\n        <button class=\"card-tabs-paging-btn card-tabs-paging-btn-previous\" aria-label=\"Previous Tabs\" (click)=\"previous()\" *ngIf=\"offset < bounds.lower\">\n            <i class=\"hpe-icon hpe-previous\"></i>\n        </button>\n\n        <div class=\"card-tabs-list\" role=\"tablist\" #tablist (uxResize)=\"resize($event)\" [style.transform]=\"'translateX(' + offset + 'px)'\">\n\n            <div class=\"card-tab\"\n                role=\"tab\"\n                tabindex=\"0\" #card\n                *ngFor=\"let tab of tabService.tabs$ | async\"\n                [ngClass]=\"tabService.position$ | async\"\n                [class.active]=\"tab.active$ | async\"\n                [attr.aria-selected]=\"tab.active$ | async\"\n                (click)=\"select(tab, card)\"\n                (focus)=\"tabs.scrollLeft = 0\"\n                (keydown.enter)=\"select(tab, card)\">\n\n                <ng-container [ngTemplateOutlet]=\"tab.content\"></ng-container>\n            </div>\n\n        </div>\n\n        <button class=\"card-tabs-paging-btn card-tabs-paging-btn-next\" aria-label=\"Next Tabs\" (click)=\"next()\" *ngIf=\"offset > bounds.upper\">\n            <i class=\"hpe-icon hpe-next\"></i>\n        </button>\n    </div>\n  `,\n  providers: [CardTabsService]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: CardTabsService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'position': [{ type: HostBinding, args: ['class', ] },{ type: Input },],\n'tablist': [{ type: ViewChild, args: ['tablist', ] },],\n};\n}\n\nfunction CardTabsetComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nCardTabsetComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nCardTabsetComponent.ctorParameters;\n/** @type {?} */\nCardTabsetComponent.propDecorators;\n/** @type {?} */\nCardTabsetComponent.prototype.tablist;\n/** @type {?} */\nCardTabsetComponent.prototype.offset;\n/** @type {?} */\nCardTabsetComponent.prototype.bounds;\n/** @type {?} */\nCardTabsetComponent.prototype._width;\n/** @type {?} */\nCardTabsetComponent.prototype._innerWidth;\n/** @type {?} */\nCardTabsetComponent.prototype.tabService;\n}\n\n\nexport interface CardTabsBounds {\n  lower: number;\n  upper: number;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ResizeModule } from '../../directives/resize/index';\nimport { CardTabContentDirective } from './card-tab/card-tab-content.directive';\nimport { CardTabComponent } from './card-tab/card-tab.component';\nimport { CardTabsetComponent } from './card-tabset/card-tabset.component';\nexport class CardTabsModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  imports: [\n    CommonModule,\n    ResizeModule\n  ],\n  declarations: [CardTabsetComponent, CardTabComponent, CardTabContentDirective],\n  exports: [CardTabsetComponent, CardTabComponent, CardTabContentDirective]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction CardTabsModule_tsickle_Closure_declarations() {\n/** @type {?} */\nCardTabsModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nCardTabsModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, EventEmitter, Input, Output, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nexport const /** @type {?} */ CHECKBOX_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => CheckboxComponent),\n    multi: true\n};\n\nlet /** @type {?} */ uniqueCheckboxId = 0;\nexport class CheckboxComponent implements ControlValueAccessor {\nprivate _checkboxId: string = `ux-checkbox-${++uniqueCheckboxId}`;\n\n     id: string = this._checkboxId;\n     name: string | null;\n     required: boolean;\n     tabindex: number = 0;\n     clickable: boolean = true;\n     simplified: boolean = false;\n     indeterminateValue: any = -1;\n     disabled: boolean = false;\n     ariaLabel: string = '';\n     ariaLabelledby: string = null;\n\n     valueChange: EventEmitter<any> = new EventEmitter<any>();\n/**\n * @return {?}\n */\nget value() {\n        return this._value;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset value(value: any) {\n        this._value = value;\n\n        // determine if it is in the indeterminate state\n        this.indeterminate = this._value === this.indeterminateValue;\n\n        // determine the checked state\n        this.ariaChecked = this.indeterminate ? 'mixed' : this._value;\n\n        // invoke change event\n        this.valueChange.emit(this._value);\n\n        // call callback\n        this.onChangeCallback(this._value);\n        this.onTouchedCallback();\n    }\n/**\n * @return {?}\n */\nget inputId(): string { \n        return `${this.id || this._checkboxId}-input`;\n    }\nprivate _value: any = false;\n\n    indeterminate: boolean = false;\n    ariaChecked: boolean | string;\n    focused: boolean = false;\n\n    onTouchedCallback: () => void = () => { };\n    onChangeCallback: (_: any) => void = () => { };\n/**\n * @return {?}\n */\ntoggle(): void {\n\n        if (this.disabled || !this.clickable) {\n            return;\n        }\n\n        if (this.value === this.indeterminateValue) {\n            this.value = true;\n            return;\n        }\n\n        // toggle the checked state\n        this.value = !this.value;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nwriteValue(value: any): void {\n        if (value !== this._value) {\n            this._value = value;\n        }\n    }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnChange(fn: any): void {\n        this.onChangeCallback = fn;\n    }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnTouched(fn: any): void {\n        this.onTouchedCallback = fn;\n    }\n/**\n * @param {?} isDisabled\n * @return {?}\n */\nsetDisabledState(isDisabled: boolean): void {\n        this.disabled = isDisabled;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-checkbox',\n    template: `\n      <label [attr.for]=\"inputId\"\n             class=\"ux-checkbox\"\n             [class.ux-checkbox-checked]=\"value === true\"\n             [class.ux-checkbox-indeterminate]=\"indeterminate\"\n             [class.ux-checkbox-simplified]=\"simplified\"\n             [class.ux-checkbox-disabled]=\"disabled\"\n             [class.ux-checkbox-focused]=\"focused\">\n\n          <div class=\"ux-checkbox-container\">\n              <input type=\"checkbox\"\n                     class=\"ux-checkbox-input\"\n                     [id]=\"inputId\"\n                     [required]=\"required\"\n                     [checked]=\"value\"\n                     [attr.value]=\"value\"\n                     [disabled]=\"disabled\"\n                     [attr.name]=\"name\"\n                     [tabindex]=\"tabindex\"\n                     [indeterminate]=\"indeterminate\"\n                     [attr.aria-label]=\"ariaLabel\"\n                     [attr.aria-labelledby]=\"ariaLabelledby\"\n                     [attr.aria-checked]=\"ariaChecked\"\n                     (focus)=\"focused = true\"\n                     (blur)=\"focused = false\"\n                     (change)=\"$event.stopPropagation()\"\n                     (click)=\"toggle()\">\n          </div>\n\n          <span class=\"ux-checkbox-label\">\n              <ng-content></ng-content>\n          </span>\n      </label>\n    `,\n    providers: [CHECKBOX_VALUE_ACCESSOR]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'id': [{ type: Input },],\n'name': [{ type: Input },],\n'required': [{ type: Input },],\n'tabindex': [{ type: Input },],\n'clickable': [{ type: Input },],\n'simplified': [{ type: Input },],\n'indeterminateValue': [{ type: Input },],\n'disabled': [{ type: Input },],\n'ariaLabel': [{ type: Input, args: ['aria-label', ] },],\n'ariaLabelledby': [{ type: Input, args: ['aria-labelledby', ] },],\n'valueChange': [{ type: Output },],\n'value': [{ type: Input },],\n};\n}\n\nfunction CheckboxComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nCheckboxComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nCheckboxComponent.ctorParameters;\n/** @type {?} */\nCheckboxComponent.propDecorators;\n/** @type {?} */\nCheckboxComponent.prototype._checkboxId;\n/** @type {?} */\nCheckboxComponent.prototype.id;\n/** @type {?} */\nCheckboxComponent.prototype.name;\n/** @type {?} */\nCheckboxComponent.prototype.required;\n/** @type {?} */\nCheckboxComponent.prototype.tabindex;\n/** @type {?} */\nCheckboxComponent.prototype.clickable;\n/** @type {?} */\nCheckboxComponent.prototype.simplified;\n/** @type {?} */\nCheckboxComponent.prototype.indeterminateValue;\n/** @type {?} */\nCheckboxComponent.prototype.disabled;\n/** @type {?} */\nCheckboxComponent.prototype.ariaLabel;\n/** @type {?} */\nCheckboxComponent.prototype.ariaLabelledby;\n/** @type {?} */\nCheckboxComponent.prototype.valueChange;\n/** @type {?} */\nCheckboxComponent.prototype._value;\n/** @type {?} */\nCheckboxComponent.prototype.indeterminate;\n/** @type {?} */\nCheckboxComponent.prototype.ariaChecked;\n/** @type {?} */\nCheckboxComponent.prototype.focused;\n/** @type {?} */\nCheckboxComponent.prototype.onTouchedCallback;\n/** @type {?} */\nCheckboxComponent.prototype.onChangeCallback;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport {FormsModule} from '@angular/forms';\n\nimport { CheckboxComponent } from './checkbox.component';\nexport class CheckboxModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [FormsModule],\n    exports: [CheckboxComponent],\n    declarations: [CheckboxComponent]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction CheckboxModule_tsickle_Closure_declarations() {\n/** @type {?} */\nCheckboxModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nCheckboxModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { ColumnSortingDirective, ColumnSortingOrder } from './column-sorting.directive';\nimport { Component, Input, Output, EventEmitter } from '@angular/core';\nexport class ColumnSortingComponent {\n\n     state: ColumnSortingState;\n     key: string;\n     orderNumber: number;\n     stateChange: EventEmitter<ColumnSortingState> = new EventEmitter<ColumnSortingState>();\nprivate _parent: ColumnSortingDirective;\n    columnSortingState = ColumnSortingState;\n/**\n * @param {?} parent\n * @return {?}\n */\ninitParent(parent: ColumnSortingDirective) {\n        this._parent = parent;\n\n        // watch for any events\n        this._parent.events.subscribe(event => {\n\n            let /** @type {?} */ idx = event.findIndex(column => column.key === this.key);\n\n            if (idx == -1) {\n                this.state = ColumnSortingState.NoSort;\n            }\n\n            // only store the number if we have 2 or more columns being sorted\n            if (event.length > 1) {\n                this.orderNumber = idx === -1 ? null : idx + 1;\n            } else {\n                this.orderNumber = null;\n            }\n\n            this.stateChange.emit(this.state);\n\n        });\n    }\n/**\n * @return {?}\n */\nchangeState(): ColumnSortingOrder[] {\n\n        if (this.state === ColumnSortingState.Ascending) {\n            this.state = ColumnSortingState.Descending;\n        } else if (this.state === ColumnSortingState.Descending) {\n            this.state = ColumnSortingState.NoSort;\n        } else {\n            this.state = ColumnSortingState.Ascending;\n        }\n\n        // inform parent\n        return this._parent.toggleColumn(this.key, this.state);\n\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-column-sorting',\n    template: `\n      <div class=\"ux-column-sorting\">\n          <i class=\"ux-column-sorting-icon hpe-icon\" \n              [class.hpe-ascend]=\"state === columnSortingState.Ascending\" \n              [class.hpe-descend]=\"state === columnSortingState.Descending\" \n              [class.column-sorting-icon-hidden]=\"state === columnSortingState.NoSort\"></i>\n          <p class=\"ux-column-sorting-number\">{{ orderNumber }}</p>\n      </div>\n    `,\n    exportAs: 'ux-column-sorting'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'state': [{ type: Input },],\n'key': [{ type: Input },],\n'orderNumber': [{ type: Input },],\n'stateChange': [{ type: Output },],\n};\n}\n\nfunction ColumnSortingComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nColumnSortingComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nColumnSortingComponent.ctorParameters;\n/** @type {?} */\nColumnSortingComponent.propDecorators;\n/** @type {?} */\nColumnSortingComponent.prototype.state;\n/** @type {?} */\nColumnSortingComponent.prototype.key;\n/** @type {?} */\nColumnSortingComponent.prototype.orderNumber;\n/** @type {?} */\nColumnSortingComponent.prototype.stateChange;\n/** @type {?} */\nColumnSortingComponent.prototype._parent;\n/** @type {?} */\nColumnSortingComponent.prototype.columnSortingState;\n}\n\nexport type ColumnSortingState = number;\nexport let ColumnSortingState: any = {};\nColumnSortingState.Ascending = 0;\nColumnSortingState.Descending = 1;\nColumnSortingState.NoSort = 2;\nColumnSortingState[ColumnSortingState.Ascending] = \"Ascending\";\nColumnSortingState[ColumnSortingState.Descending] = \"Descending\";\nColumnSortingState[ColumnSortingState.NoSort] = \"NoSort\";\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { ColumnSortingComponent, ColumnSortingState } from './column-sorting.component';\nimport { Directive, Host, QueryList, ContentChildren, Input } from '@angular/core';\nimport { Subject } from 'rxjs/Subject';\nexport class ColumnSortingDirective {\n\n     singleSort: boolean;\n     components: QueryList<ColumnSortingComponent>;\n\n    events: Subject<ColumnSortingOrder[]> = new Subject<ColumnSortingOrder[]>();\n    order: ColumnSortingOrder[] = [];\n/**\n * @return {?}\n */\nngAfterViewInit() {\n        this.components.forEach(component => component.initParent(this));\n    }\n/**\n * @param {?} key\n * @param {?} state\n * @return {?}\n */\ntoggleColumn(key: string, state: ColumnSortingState) {\n\n        if (this.singleSort) {\n            if (state === ColumnSortingState.NoSort) {\n                this.order = [];\n            } else {\n                this.order = [{key: key, state: state}];\n            }\n        } else {\n            // reorder columns here\n            let /** @type {?} */ idx = this.order.findIndex(column => column.key === key);\n\n            // if wasnt previously selected add to list\n            if (idx === -1) {\n                this.order.push({ key: key, state: state});\n            } else if (state === ColumnSortingState.Ascending || state === ColumnSortingState.Descending) {\n                this.order.splice(idx, 1);\n                this.order.push({ key: key, state: state});\n            } else {\n                this.order.splice(idx, 1);\n            }\n        }\n\n            this.events.next(this.order);\n            // return the order\n            return this.order;\n\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: '[uxColumnSorting]'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'singleSort': [{ type: Input },],\n'components': [{ type: ContentChildren, args: [ColumnSortingComponent, ] },],\n};\n}\n\nfunction ColumnSortingDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nColumnSortingDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nColumnSortingDirective.ctorParameters;\n/** @type {?} */\nColumnSortingDirective.propDecorators;\n/** @type {?} */\nColumnSortingDirective.prototype.singleSort;\n/** @type {?} */\nColumnSortingDirective.prototype.components;\n/** @type {?} */\nColumnSortingDirective.prototype.events;\n/** @type {?} */\nColumnSortingDirective.prototype.order;\n}\n\n\nexport interface ColumnSortingOrder {\n    key: string;\n    state: ColumnSortingState; \n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\n\nimport { ColumnSortingComponent } from './column-sorting.component';\n\nimport { ColumnSortingDirective } from './column-sorting.directive';\nexport class ColumnSortingModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    exports: [ColumnSortingComponent, ColumnSortingDirective],\n    declarations: [ColumnSortingComponent, ColumnSortingDirective]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ColumnSortingModule_tsickle_Closure_declarations() {\n/** @type {?} */\nColumnSortingModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nColumnSortingModule.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable } from '@angular/core';\nimport { DashboardWidgetComponent } from './widget/dashboard-widget.component';\nimport { DashboardOptions } from './dashboard.component';\nimport { Subject } from 'rxjs/Subject';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { filter } from 'rxjs/operators/filter';\nimport { delay } from 'rxjs/operators/delay';\nimport { map } from 'rxjs/operators/map';\nimport { distinctUntilChanged } from 'rxjs/operators/distinctUntilChanged';\nimport { Observable } from 'rxjs/Observable';\nexport class DashboardService {\nprivate _dashboard: HTMLElement;\nprivate _widgetOrigin: { column?: number, row?: number, columnSpan?: number, rowSpan?: number };\nprivate _actionWidget: DashboardAction;\nprivate _rowHeight: number = 0;\nprivate _cache: DashboardCache[];\nprivate _mouseEvent: MouseEvent;\n\n    widgets$ = new BehaviorSubject<DashboardWidgetComponent[]>([]);\n    options$ = new BehaviorSubject<DashboardOptions>(defaultOptions);\n    dimensions$ = new BehaviorSubject<DashboardDimensions>({});\n    height$: Observable<number> = this.dimensions$.pipe(delay(0), map((dimensions: DashboardDimensions) => dimensions.height), distinctUntilChanged());\n    placeholder$ = new BehaviorSubject<DashboardPlaceholder>({ visible: false, x: 0, y: 0, width: 0, height: 0 });\n    layout$ = new Subject<DashboardLayoutData[]>();\n    stacked$ = new BehaviorSubject<boolean>(false);\n/**\n * @return {?}\n */\nget options() {\n        return this.options$.getValue();\n    }\n/**\n * @return {?}\n */\nget widgets() {\n        return this.widgets$.getValue();\n    }\n/**\n * @return {?}\n */\nget stacked() {\n        return this.stacked$.getValue();\n    }\n/**\n * @return {?}\n */\nget dimensions() {\n        return this.dimensions$.getValue();\n    }\n/**\n * @return {?}\n */\nget columnWidth() {\n        return this.dimensions.width / this.options.columns;\n    }\nconstructor() {\n        this.layout$.subscribe(this.setLayoutData.bind(this));\n        this.stacked$.pipe(filter(stacked => stacked === true)).subscribe(this.updateWhenStacked.bind(this));\n        this.widgets$.pipe(delay(0)).subscribe(() => this.renderDashboard());\n        this.dimensions$.pipe(delay(0)).subscribe(() => this.renderDashboard());\n    }\n/**\n * Set the dashboard container element\n * @param {?} dashboard The HTMLElement that is the dashboard container\n * @return {?}\n */\nsetDashboard(dashboard: HTMLElement): void {\n        this._dashboard = dashboard;\n    }\n/**\n * Add a widget to the dashboard\n * @param {?} widget The widget component to add to the dashboard\n * @return {?}\n */\naddWidget(widget: DashboardWidgetComponent): void {\n        this.widgets$.next([...this.widgets$.getValue(), widget]);\n    }\n/**\n * Remove a widget from the dashboard\n * @param {?} widget The widget to remove\n * @return {?}\n */\nremoveWidget(widget: DashboardWidgetComponent): void {\n        this.widgets$.next(this.widgets$.getValue().filter(_widget => _widget !== widget));\n    }\n/**\n * Indicate that the dashboard element has been resized\n * @param {?=} width The width of the dashboard element in px\n * @param {?=} height The height of the dashboard element in px\n * @return {?}\n */\nsetDimensions(width: number = this.dimensions.width, height: number = this.dimensions.height): void {\n        if (this.dimensions.width !== width || this.dimensions.height !== height) {\n            this.dimensions$.next({ width: width, height: height });\n        }\n    }\n/**\n * Produce an object containing all the required layout data.\n * This can be useful for exporting/saving a layout\n * @return {?}\n */\ngetLayoutData(): DashboardLayoutData[] {\n        return this.widgets.map(widget => {\n            return { id: widget.id, col: widget.getColumn(), row: widget.getRow(), colSpan: widget.getColumnSpan(), rowSpan: widget.getRowSpan() };\n        });\n    }\n/**\n * Position widgets programatically\n * @param {?} widgets\n * @return {?}\n */\nsetLayoutData(widgets: DashboardLayoutData[]): void {\n\n        // iterate through each widget data and find a match\n        widgets.forEach(widget => {\n\n            // find the matching widget\n            const /** @type {?} */ target = this.widgets.find(_widget => _widget.id === widget.id);\n\n            if (target) {\n                target.setColumn(widget.col);\n                target.setRow(widget.row);\n                target.setColumnSpan(widget.colSpan);\n                target.setRowSpan(widget.rowSpan);\n            }\n        });\n    }\n/**\n * Update the positions and sizes of the widgets\n * @return {?}\n */\nrenderDashboard(): void {\n\n        // get the dimensions of the dashboard\n        this._rowHeight = this.options.rowHeight || this.columnWidth;\n\n        // ensure the column width is not below the min widths\n        this.stacked$.next(this.columnWidth < this.options.minWidth);\n\n        // ensure the row height is not below the min widths\n        if (this._rowHeight < this.options.minWidth) {\n            this._rowHeight = this.options.minWidth;\n        }\n\n        this.setDashboardLayout();\n\n        // iterate through each widget and set the size - except the one being resized\n        this.widgets.filter(widget => !this._actionWidget || widget !== this._actionWidget.widget)\n            .forEach(widget => widget.render());\n    }\n/**\n * Determine where widgets should be positioned based on their positions, width and the size of the container\n * @return {?}\n */\nsetDashboardLayout(): void {\n\n        // find any widgets that do not currently have a position set\n        this.widgets.filter(widget => widget.getColumn() === undefined || widget.getRow() === undefined)\n            .forEach(widget => this.setWidgetPosition(widget));\n\n        this.setDashboardHeight();\n    }\n/**\n * @return {?}\n */\nupdateWhenStacked(): void {\n\n        // iterate through each widget set it's stacked state and\n        this.getWidgetsByOrder().forEach((widget, idx) => {\n            widget.setColumn(0);\n            widget.setRow(idx);\n        });\n\n    }\n/**\n * @return {?}\n */\ngetWidgetsByOrder(): DashboardWidgetComponent[] {\n        return this.widgets.sort((w1, w2) => {\n\n            const /** @type {?} */ w1Position = w1.getColumn() * w1.getRow();\n            const /** @type {?} */ w2Position = w2.getColumn() * w2.getRow();\n\n            if (w1Position < w2Position) {\n                return -1;\n            }\n\n            if (w1Position > w2Position) {\n                return 1;\n            }\n\n            return 0;\n        });\n    }\n/**\n * Find a position that a widget can fit in the dashboard\n * @param {?} widget The widget to try and position\n * @return {?}\n */\nsetWidgetPosition(widget: DashboardWidgetComponent): void {\n\n        // find a position for the widget\n        let /** @type {?} */ position = 0;\n        let /** @type {?} */ success = false;\n\n        // repeat until a space is found\n        while (!success) {\n\n            // get a position to try\n            const /** @type {?} */ column = position % this.options.columns;\n            const /** @type {?} */ row = Math.floor(position / this.options.columns);\n\n            // check the current position\n            if (this.getPositionAvailable(column, row, widget.getColumnSpan(), widget.getRowSpan())) {\n                success = true;\n                widget.setColumn(column);\n                widget.setRow(row);\n                return;\n            }\n\n            if (column === 0 && widget.colSpan > this.options.columns) {\n                throw new Error('Dashboard widgets have a colSpan greater than the max number of dashboard columns!');\n            }\n\n            position++;\n        }\n    }\n/**\n * Check if a position in the dashboard is vacant or not\n * @param {?} column\n * @param {?} row\n * @param {?} columnSpan\n * @param {?} rowSpan\n * @param {?=} ignoreWidget\n * @return {?}\n */\ngetPositionAvailable(column: number, row: number, columnSpan: number, rowSpan: number, ignoreWidget?: DashboardWidgetComponent): boolean {\n\n        // get a list of grid spaces that are populated\n        const /** @type {?} */ spaces = this.getOccupiedSpaces();\n\n        // check if the block would still be in bounds\n        if (column + columnSpan > this.options.columns) {\n            return false;\n        }\n\n        // check each required position\n        for (let /** @type {?} */ x = column; x < column + columnSpan; x++) {\n            for (let /** @type {?} */ y = row; y < row + rowSpan; y++) {\n                if (spaces.find(block => block.column === x && block.row === y && block.widget !== ignoreWidget)) {\n                    return false;\n                }\n            }\n        }\n\n        return true;\n    }\n/**\n * @return {?}\n */\ngetOccupiedSpaces(): DashboardSpace[] {\n\n        // find all spaces that are currently occupied\n        return this.widgets.filter(widget => widget.getColumn() !== undefined && widget.getRow() !== undefined)\n            .reduce((value, widget) => {\n\n                this.forEachBlock(widget, (column, row) => value.push({ widget: widget, column: column, row: row }));\n\n                return value;\n            }, []);\n    }\n/**\n * Begin resizing a widget\n * @param {?} action The the widget to resize\n * @return {?}\n */\nonResizeStart(action: DashboardAction): void {\n\n        // store the mouse event\n        this._mouseEvent = action.event;\n        this._actionWidget = action;\n\n        // bring the widget to the font\n        this.bringToFront(action.widget);\n    }\n/**\n * @param {?} action\n * @return {?}\n */\nonResizeDrag(action: DashboardAction): void {\n\n        const /** @type {?} */ mousePosX = this._mouseEvent.pageX - pageXOffset;\n        const /** @type {?} */ mousePosY = this._mouseEvent.pageY - pageYOffset;\n\n        // if there was no movement then do nothing\n        if (action.event.x === mousePosX && action.event.y === mousePosY) {\n            return;\n        }\n\n        // update the stored mouse event\n        this._mouseEvent = action.event;\n\n        // get handle for direction\n        const { handle } = action;\n\n        // get the bounds of the handle\n        const /** @type {?} */ bounds = handle.getBoundingClientRect();\n\n        // get the center of the handle\n        const /** @type {?} */ centerX = bounds.left + (bounds.width / 2);\n        const /** @type {?} */ centerY = bounds.top + (bounds.height / 2);\n\n        // get the current mouse position\n        const /** @type {?} */ mouseX = mousePosX - centerX;\n        const /** @type {?} */ mouseY = mousePosY - centerY;\n\n        // store the new proposed dimensions for the widget\n        const /** @type {?} */ dimensions: DashboardWidgetDimensions = {\n            x: action.widget.x,\n            y: action.widget.y,\n            width: action.widget.width,\n            height: action.widget.height\n        };\n\n        // update widget based on the handle being dragged\n        switch (action.direction) {\n\n            case ActionDirection.Right:\n                dimensions.width += mouseX;\n                break;\n\n            case ActionDirection.Left:\n                dimensions.x += mouseX;\n                dimensions.width -= mouseX;\n\n                if (dimensions.width < this.options.minWidth) {\n                    const /** @type {?} */ difference = this.options.minWidth - dimensions.width;\n                    dimensions.x -= difference;\n                    dimensions.width += difference;\n                }\n\n                break;\n\n            case ActionDirection.Bottom:\n                dimensions.height += mouseY;\n                break;\n\n            case ActionDirection.Top:\n                dimensions.y += mouseY;\n                dimensions.height -= mouseY;\n\n                if (dimensions.height < this.options.minHeight) {\n                    const /** @type {?} */ difference = this.options.minHeight - dimensions.height;\n                    dimensions.y -= difference;\n                    dimensions.height += difference;\n                }\n                break;\n\n            // Support resizing on multiple axis simultaneously\n            case ActionDirection.TopLeft:\n\n                dimensions.x += mouseX;\n                dimensions.width -= mouseX;\n\n                if (dimensions.width < this.options.minWidth) {\n                    const /** @type {?} */ difference = this.options.minWidth - dimensions.width;\n                    dimensions.x -= difference;\n                    dimensions.width += difference;\n                }\n\n                dimensions.y += mouseY;\n                dimensions.height -= mouseY;\n\n                if (dimensions.height < this.options.minHeight) {\n                    const /** @type {?} */ difference = this.options.minHeight - dimensions.height;\n                    dimensions.y -= difference;\n                    dimensions.height += difference;\n                }\n                break;\n\n            case ActionDirection.TopRight:\n                dimensions.width += mouseX;\n                dimensions.y += mouseY;\n                dimensions.height -= mouseY;\n\n                if (dimensions.height < this.options.minHeight) {\n                    const /** @type {?} */ difference = this.options.minHeight - dimensions.height;\n                    dimensions.y -= difference;\n                    dimensions.height += difference;\n                }\n                break;\n\n            case ActionDirection.BottomLeft:\n                dimensions.height += mouseY;\n                dimensions.x += mouseX;\n                dimensions.width -= mouseX;\n\n                if (dimensions.width < this.options.minWidth) {\n                    const /** @type {?} */ difference = this.options.minWidth - dimensions.width;\n                    dimensions.x -= difference;\n                    dimensions.width += difference;\n                }\n                break;\n\n            case ActionDirection.BottomRight:\n                dimensions.height += mouseY;\n                dimensions.width += mouseX;\n                break;\n        }\n\n        const /** @type {?} */ currentWidth = action.widget.x + action.widget.width;\n        const /** @type {?} */ currentHeight = action.widget.y + action.widget.height;\n\n        // ensure values are within the dashboard bounds\n        if (dimensions.x < 0) {\n            dimensions.x = 0;\n            dimensions.width = currentWidth;\n        }\n\n        if (dimensions.y < 0) {\n            dimensions.y = 0;\n            dimensions.height = currentHeight;\n        }\n\n        if ((dimensions.x + dimensions.width) > this.dimensions.width) {\n            dimensions.width = this.dimensions.width - dimensions.x;\n        }\n\n        // if the proposed width is smaller than allowed then reset width to minimum and ignore x changes\n        if (dimensions.width < this.options.minWidth) {\n            dimensions.x = action.widget.x;\n            dimensions.width = this.options.minWidth;\n        }\n\n        // if the proposed height is smaller than allowed then reset height to minimum and ignore y changes\n        if (dimensions.height < this.options.minHeight) {\n            dimensions.y = action.widget.y;\n            dimensions.height = this.options.minHeight;\n        }\n\n        // update the widget actual values\n        action.widget.setBounds(dimensions.x, dimensions.y, dimensions.width, dimensions.height);\n\n        // update placeholder position and value\n        this.setPlaceholderBounds(true, dimensions.x, dimensions.y, dimensions.width, dimensions.height);\n\n        // show the widget positions if the current positions and sizes were to persist\n        this.updateWidgetPositions(action.widget);\n    }\n/**\n * @return {?}\n */\nonResizeEnd(): void {\n\n        const /** @type {?} */ placeholder = this.placeholder$.getValue();\n\n        // commit resize changes\n        this.commitWidgetChanges();\n\n        // hide placeholder\n        placeholder.visible = false;\n\n        // update the placeholder\n        this.placeholder$.next(placeholder);\n\n        this._actionWidget = null;\n        this._mouseEvent = null;\n\n        // ensure any vacant upper spaces are filled where required\n        this.shiftWidgetsUp();\n\n        // update dashboard height\n        this.setDashboardHeight();\n\n        // emit information about the layout\n        this.layout$.next(this.getLayoutData());\n    }\n/**\n * @param {?} action\n * @return {?}\n */\nonDragStart(action: DashboardAction): void {\n        this.onResizeStart(action);\n\n        // store the starting placeholder position\n        this.setWidgetOrigin();\n\n        this.cacheWidgets();\n    }\n/**\n * @return {?}\n */\nonDragEnd(): void {\n        this.onResizeEnd();\n\n        this._widgetOrigin = {};\n    }\n/**\n * @param {?} action\n * @return {?}\n */\nonDrag(action: DashboardAction): void {\n\n        // if there was no movement then do nothing\n        if (action.event.pageX === this._mouseEvent.pageX && action.event.pageY === this._mouseEvent.pageY) {\n            return;\n        }\n\n        // get the current mouse position\n        const /** @type {?} */ mouseX = action.event.pageX - this._mouseEvent.pageX;\n        const /** @type {?} */ mouseY = action.event.pageY - this._mouseEvent.pageY;\n\n        // store the latest event\n        this._mouseEvent = action.event;\n\n        const /** @type {?} */ dimensions: DashboardWidgetDimensions = {\n            x: action.widget.x + mouseX,\n            y: action.widget.y + mouseY,\n            width: action.widget.width,\n            height: action.widget.height\n        };\n\n        this.restoreWidgets(true);\n\n        // update widget position\n        action.widget.setBounds(dimensions.x, dimensions.y, dimensions.width, dimensions.height);\n\n        // update placeholder position and value\n        this.setPlaceholderBounds(true, dimensions.x, dimensions.y, dimensions.width, dimensions.height);\n\n        // show the widget positions if the current positions and sizes were to persist\n        this.shiftWidgets();\n\n        this.setDashboardHeight();\n    }\n/**\n * @return {?}\n */\ngetRowHeight(): number {\n        return this._rowHeight;\n    }\n/**\n * @return {?}\n */\ncacheWidgets(): void {\n        this._cache = this.widgets.map(widget => ({ id: widget.id, column: widget.getColumn(), row: widget.getRow() }));\n    }\n/**\n * @param {?=} ignoreActionWidget\n * @return {?}\n */\nrestoreWidgets(ignoreActionWidget: boolean = false): void {\n        this._cache.filter(widget => !ignoreActionWidget || widget.id !== this._actionWidget.widget.id).forEach(widget => {\n\n            const /** @type {?} */ match = this.widgets.find(wgt => wgt.id === widget.id);\n\n            if (match) {\n                match.setColumn(widget.column);\n                match.setRow(widget.row);\n            }\n        });\n    }\n/**\n * When dragging any widgets that need to be moved should be moved to an appropriate position\n * @return {?}\n */\nshiftWidgets(): void {\n\n        let /** @type {?} */ widgetsToMove: DashboardWidgetComponent[] = [];\n\n        const /** @type {?} */ placeholder = this.placeholder$.getValue();\n\n        // check if there are any widgets under the placeholder\n        for (let /** @type {?} */ row = placeholder.row; row < placeholder.row + placeholder.rowSpan; row++) {\n            for (let /** @type {?} */ column = placeholder.column; column < placeholder.column + placeholder.columnSpan; column++) {\n\n                // store reference to any widgets that need moved\n                this.getOccupiedSpaces()\n                    .filter(space => space.column === column && space.row === row && space.widget !== this._actionWidget.widget)\n                    .forEach(space => widgetsToMove.push(space.widget));\n            }\n        }\n\n        // remove any duplicates\n        widgetsToMove = widgetsToMove.filter((widget, idx, array) => array.indexOf(widget) === idx);\n\n        // if no widgets need moved then we can stop here\n        if (widgetsToMove.length === 0) {\n            return;\n        }\n\n        // create a duplicate we can use to keep track of which have been moved\n        const /** @type {?} */ unmovedWidgets = widgetsToMove.slice();\n\n        // attempt to move any widgets to the previous widget position\n        widgetsToMove.forEach(widget => {\n\n            // get a grid off all occupied spaces - taking into account the placeholder and ignoring widgets that need moved\n            const /** @type {?} */ grid = this.getOccupiedSpaces().filter(space => !unmovedWidgets.find(wgt => wgt === space.widget));\n\n            // iterate each free block\n            for (let /** @type {?} */ row = this._widgetOrigin.row; row < this._widgetOrigin.row + this._widgetOrigin.rowSpan; row++) {\n                for (let /** @type {?} */ column = this._widgetOrigin.column; column < this._widgetOrigin.column + this._widgetOrigin.columnSpan; column++) {\n\n                    // determine if the block can fit in this space\n                    let /** @type {?} */ requiredSpaces = this.getRequiredSpacesFromPoint(widget, column, row);\n\n                    // check if widget would fit in space\n                    let /** @type {?} */ available = requiredSpaces.every(space => {\n                        return !grid.find(gridSpace => gridSpace.column === space.column && gridSpace.row === space.row) && space.column < this.getColumnCount();\n                    });\n\n                    if (available) {\n                        widget.setColumn(column);\n                        widget.setRow(row);\n                        unmovedWidgets.splice(unmovedWidgets.findIndex(wgt => wgt === widget), 1);\n                        return;\n                    }\n                }\n            }\n\n            // if we get to here then we can't simply swap the positions - next try moving right\n            if (this.canWidgetMoveRight(widget, true)) {\n\n                // after the shift check if placeholder position is still valid\n                this.validatePlaceholderPosition(ActionDirection.Right);\n                return;\n            }\n\n            // next try moving left\n            if (this.canWidgetMoveLeft(widget, true)) {\n\n                // after the shift check if placeholder position is still valid\n                this.validatePlaceholderPosition(ActionDirection.Left);\n                return;\n            }\n\n            // determine the distance that the widget needs to be moved down\n            let /** @type {?} */ distance = (this._actionWidget.widget.getRow() - widget.getRow()) + this._actionWidget.widget.getRowSpan();\n\n            // as a last resort move the widget downwards\n            this.moveWidgetDown(widget, distance);\n        });\n    }\n/**\n * After shifts have taken place we should verify the place holder position is still valid\n * @param {?} shiftDirection - the position widgets were shifted\n * @return {?}\n */\nvalidatePlaceholderPosition(shiftDirection: ActionDirection) {\n\n        const /** @type {?} */ placeholder = this.placeholder$.getValue();\n\n        // check if the placeholder is over a widget\n        if (this.getWidgetsAtPosition(placeholder.column, placeholder.row, true).length > 0) {\n\n            // move the placeholder the opposite direction\n            switch (shiftDirection) {\n\n                case ActionDirection.Left:\n                    this.setPlaceholderBounds(placeholder.visible, placeholder.x + this.getColumnWidth(), placeholder.y, placeholder.width, placeholder.height);\n                    break;\n\n                case ActionDirection.Right:\n                    this.setPlaceholderBounds(placeholder.visible, placeholder.x - this.getColumnWidth(), placeholder.y, placeholder.width, placeholder.height);\n                    break;\n            }\n\n            // validate this new position again\n            this.validatePlaceholderPosition(shiftDirection);\n        }\n    }\n/**\n * Determine if a widget can be moved left - or if it can move the widgets to the right to make space for the widget\n * @param {?} widget\n * @param {?=} performMove\n * @return {?}\n */\ncanWidgetMoveLeft(widget: DashboardWidgetComponent, performMove: boolean = false): boolean {\n\n        // check if the widget is the action widget or occupies the first column\n        if (widget === this._actionWidget.widget || widget.getColumn() === 0) {\n            return false;\n        }\n\n        // find the positions required\n        const /** @type {?} */ targetSpaces = this.getOccupiedSpaces().filter(space => space.widget === widget).map(space => {\n            return { column: space.column - widget.getColumnSpan(), row: space.row, widget: space.widget };\n        });\n\n        // check if there are widget in the required positions and if so, can they move right?\n        const /** @type {?} */ moveable = targetSpaces.every(space => this.getWidgetsAtPosition(space.column, space.row).filter(wgt => wgt !== space.widget).every(wgt => this.canWidgetMoveLeft(wgt)));\n\n        if (performMove && moveable) {\n\n            // move all widgets to the right\n            targetSpaces.forEach(space => this.getWidgetsAtPosition(space.column, space.row).filter(wgt => wgt !== space.widget).forEach(wgt => this.canWidgetMoveLeft(wgt, true)));\n\n            // move current widget to the right\n            widget.setColumn(widget.getColumn() - 1);\n        }\n\n        return moveable;\n    }\n/**\n * Determine if a widget can be moved right - or if it can move the widgets to the right to make space for the widget\n * @param {?} widget\n * @param {?=} performMove\n * @return {?}\n */\ncanWidgetMoveRight(widget: DashboardWidgetComponent, performMove: boolean = false): boolean {\n\n        // check if the widget is the dragging widget or the widget occupies the final column\n        if (widget === this._actionWidget.widget || widget.getColumn() + widget.getColumnSpan() === this.options.columns) {\n            return false;\n        }\n\n        // find the positions required\n        const /** @type {?} */ targetSpaces = this.getOccupiedSpaces().filter(space => space.widget === widget).map(space => {\n            return { column: space.column + widget.getColumnSpan(), row: space.row, widget: space.widget };\n        });\n\n        // check if there are widget in the required positions and if so, can they move right?\n        const /** @type {?} */ moveable = targetSpaces.every(space => this.getWidgetsAtPosition(space.column, space.row).filter(wgt => wgt !== space.widget).every(wgt => this.canWidgetMoveRight(wgt)));\n\n        if (performMove && moveable) {\n\n            // move all widgets to the right\n            targetSpaces.forEach(space => this.getWidgetsAtPosition(space.column, space.row).filter(wgt => wgt !== space.widget).forEach(wgt => this.canWidgetMoveRight(wgt, true)));\n\n            // move current widget to the right\n            widget.setColumn(widget.getColumn() + 1);\n        }\n\n        return moveable;\n    }\n/**\n * Store the initial position of the widget being dragged\n * @return {?}\n */\nsetWidgetOrigin(): void {\n        this._widgetOrigin = {\n            column: this._actionWidget.widget.getColumn(),\n            row: this._actionWidget.widget.getRow(),\n            columnSpan: this._actionWidget.widget.getColumnSpan(),\n            rowSpan: this._actionWidget.widget.getRowSpan()\n        };\n    }\n/**\n * Calculate all the required positions is a widget was to be positioned at a particular point\n * @param {?} widget\n * @param {?} column\n * @param {?} row\n * @return {?}\n */\ngetRequiredSpacesFromPoint(widget: DashboardWidgetComponent, column: number, row: number): DashboardSpace[] {\n        const /** @type {?} */ spaces: DashboardSpace[] = [];\n\n        for (let /** @type {?} */ y = row; y < row + widget.getRowSpan(); y++) {\n            for (let /** @type {?} */ x = column; x < column + widget.getColumnSpan(); x++) {\n                spaces.push({ column: x, row: y, widget: widget });\n            }\n        }\n\n        return spaces;\n    }\n/**\n * Position widgets based on the position of the placeholder - this is temporary until confirmed\n * @param {?} widget\n * @return {?}\n */\nupdateWidgetPositions(widget: DashboardWidgetComponent) {\n\n        const /** @type {?} */ placeholder = this.placeholder$.getValue();\n\n        // check all spaces the placeholder will occupy and move any widget currently in them down\n        for (let /** @type {?} */ column = placeholder.column; column < placeholder.column + placeholder.columnSpan; column++) {\n            for (let /** @type {?} */ row = placeholder.row; row < placeholder.row + placeholder.rowSpan; row++) {\n\n                this.getWidgetsAtPosition(column, row, true)\n                    .filter(wgt => wgt !== widget)\n                    .forEach(wgt => this.moveWidgetDown(wgt));\n            }\n        }\n\n        // update the height of the dashboard\n        this.setDashboardHeight();\n\n        // if we arent dragging the top handle then fill spaces\n        if (this._actionWidget.direction !== ActionDirection.Top &&\n            this._actionWidget.direction !== ActionDirection.TopLeft &&\n            this._actionWidget.direction !== ActionDirection.TopRight) {\n            this.shiftWidgetsUp();\n        }\n    }\n/**\n * Determine if a widget is occupying a specific row and column\n * @param {?} column The columns to check if occupied\n * @param {?} row The row to check if occupied\n * @param {?=} ignoreResizing Whether or not to ignore the widget currently being resized\n * @return {?}\n */\ngetWidgetsAtPosition(column: number, row: number, ignoreResizing: boolean = false): DashboardWidgetComponent[] {\n        return this.getOccupiedSpaces()\n            .filter(space => space.column === column && space.row === row)\n            .filter(space => space.widget !== this._actionWidget.widget || !ignoreResizing)\n            .map(space => space.widget);\n    }\n/**\n * Update the placeholder visibility, position and size\n * @param {?} visible\n * @param {?} x\n * @param {?} y\n * @param {?} width\n * @param {?} height\n * @return {?}\n */\nsetPlaceholderBounds(visible: boolean, x: number, y: number, width: number, height: number): void {\n\n        const /** @type {?} */ placeholder = this.placeholder$.getValue();\n\n        const /** @type {?} */ rounding = this._actionWidget.direction === ActionDirection.Left ||\n            this._actionWidget.direction === ActionDirection.Top ? Rounding.RoundDownBelowHalf : Rounding.RoundUpOverHalf;\n\n        placeholder.visible = visible;\n\n        placeholder.column = this.getPlaceholderColumn(x, width);\n        placeholder.row = this.getPlaceholderRow(y, height);\n        placeholder.columnSpan = this.getPlaceholderColumnSpan(width);\n        placeholder.rowSpan = this.getPlaceholderRowSpan(height);\n\n        // calculate the maximum number of rows\n        const /** @type {?} */ rowCount = this.widgets.filter(widget => widget !== this._actionWidget.widget)\n            .reduce((previous, widget) => Math.max(widget.getRow() + widget.getRowSpan(), previous), 0);\n\n        // constrain maximum placeholder row\n        placeholder.row = Math.min(placeholder.row, rowCount);\n\n        placeholder.x = (placeholder.column * this.getColumnWidth()) + this.options.padding;\n        placeholder.y = (placeholder.row * this._rowHeight) + this.options.padding;\n        placeholder.width = (placeholder.columnSpan * this.getColumnWidth()) - (this.options.padding * 2);\n        placeholder.height = (placeholder.rowSpan * this._rowHeight) - (this.options.padding * 2);\n\n        // set the values of the widget to match the values of the placeholder - however do not render the changes\n        this._actionWidget.widget.setColumn(placeholder.column, false);\n        this._actionWidget.widget.setRow(placeholder.row, false);\n        this._actionWidget.widget.setColumnSpan(placeholder.columnSpan, false);\n        this._actionWidget.widget.setRowSpan(placeholder.rowSpan, false);\n\n        // update the placeholder\n        this.placeholder$.next(placeholder);\n    }\n/**\n * Get the placeholder column position\n * @param {?} x\n * @param {?} width\n * @return {?}\n */\ngetPlaceholderColumn(x: number, width: number): number {\n\n        const /** @type {?} */ column = this.getColumnFromPx(x, this._actionWidget.direction === ActionDirection.Move ? Rounding.RoundUpOverHalf : Rounding.RoundDown);\n        const /** @type {?} */ columnSpan = Math.floor(width / this.getColumnWidth());\n        const /** @type {?} */ upperLimit = this.getColumnCount() - columnSpan;\n\n        // if we arent dragging left then just return the column\n        if (this._actionWidget.direction !== ActionDirection.Left &&\n            this._actionWidget.direction !== ActionDirection.TopLeft &&\n            this._actionWidget.direction !== ActionDirection.BottomLeft) {\n            return Math.max(Math.min(column, upperLimit), 0);\n        }\n\n        // get any overflow\n        const /** @type {?} */ overflow = width % this.getColumnWidth();\n\n        return (x <= 0 || overflow === 0 || columnSpan === 0 || overflow > (this.getColumnWidth() / 2)) ?\n            Math.max(Math.min(column, upperLimit), 0) :\n            Math.max(Math.min(column + 1, upperLimit), 0);\n    }\n/**\n * Get the column span of the placeholder\n * @param {?} width\n * @return {?}\n */\ngetPlaceholderColumnSpan(width: number): number {\n\n        const /** @type {?} */ columnSpan = this.getColumnFromPx(width);\n\n        // if we arent dragging right or left then just return the column span\n        if (this._actionWidget.direction !== ActionDirection.Right &&\n            this._actionWidget.direction !== ActionDirection.TopRight &&\n            this._actionWidget.direction !== ActionDirection.BottomRight &&\n            this._actionWidget.direction !== ActionDirection.Left &&\n            this._actionWidget.direction !== ActionDirection.TopLeft &&\n            this._actionWidget.direction !== ActionDirection.BottomLeft) {\n            return Math.max(columnSpan, 1);\n        }\n\n        // get the current column span and any overflow\n        const /** @type {?} */ overflow = width % this.getColumnWidth();\n\n        return (columnSpan > 0 && overflow > (this.getColumnWidth() / 2)) ? Math.max(columnSpan + 1, 1) : Math.max(columnSpan, 1);\n    }\n/**\n * Get the row position of the placeholder\n * @param {?} y\n * @param {?} height\n * @return {?}\n */\ngetPlaceholderRow(y: number, height: number): number {\n\n        const /** @type {?} */ row = this.getRowFromPx(y, this._actionWidget.direction === ActionDirection.Move ? Rounding.RoundUpOverHalf : Rounding.RoundDown);\n        const /** @type {?} */ rowSpan = Math.ceil(height / this._rowHeight);\n\n        // if we arent dragging up then just return the row\n        if (this._actionWidget.direction !== ActionDirection.Top &&\n            this._actionWidget.direction !== ActionDirection.TopLeft &&\n            this._actionWidget.direction !== ActionDirection.TopRight) {\n            return Math.max(row, 0);\n        }\n\n        // get any overflow\n        let /** @type {?} */ overflow = height < this._rowHeight ? 0 : height % this._rowHeight;\n\n        return (y <= 0 || rowSpan === 0 || overflow === 0 || overflow > (this._rowHeight / 2)) ? Math.max(row, 0) : Math.max(row + 1, 0);\n    }\n/**\n * Get the row span of the placeholder\n * @param {?} height\n * @return {?}\n */\ngetPlaceholderRowSpan(height: number): number {\n\n        const /** @type {?} */ rowSpan = this.getRowFromPx(height);\n\n        // if we arent dragging up or down then just return the column span\n        if (this._actionWidget.direction !== ActionDirection.Top &&\n            this._actionWidget.direction !== ActionDirection.TopLeft &&\n            this._actionWidget.direction !== ActionDirection.TopRight &&\n            this._actionWidget.direction !== ActionDirection.Bottom &&\n            this._actionWidget.direction !== ActionDirection.BottomLeft &&\n            this._actionWidget.direction !== ActionDirection.BottomRight) {\n            return Math.max(rowSpan, 1);\n        }\n\n        // get the current column span and any overflow\n        const /** @type {?} */ overflow = height % this._rowHeight;\n\n        return (overflow > (this._rowHeight / 2)) ? Math.max(rowSpan + 1, 1) : Math.max(rowSpan, 1);\n    }\n/**\n * @param {?} x\n * @param {?=} rounding\n * @return {?}\n */\ngetColumnFromPx(x: number, rounding: Rounding = Rounding.RoundDown): number {\n\n        const /** @type {?} */ column = Math.floor(x / Math.floor(this.getColumnWidth()));\n        const /** @type {?} */ overflow = (x % Math.floor(this.getColumnWidth()));\n        const /** @type {?} */ half = this.getColumnWidth() / 2;\n\n        switch (rounding) {\n\n            case Rounding.RoundDown:\n                return column;\n\n            case Rounding.RoundDownBelowHalf:\n                return overflow < half ? column : column + 1;\n\n            case Rounding.RoundUpOverHalf:\n                return overflow > half ? column + 1 : column;\n\n            case Rounding.RoundUp:\n                return overflow > 0 ? column + 1 : column;\n        }\n\n    }\n/**\n * @param {?} y\n * @param {?=} rounding\n * @return {?}\n */\ngetRowFromPx(y: number, rounding: Rounding = Rounding.RoundDown): number {\n\n        const /** @type {?} */ row = Math.floor(y / Math.floor(this._rowHeight));\n        const /** @type {?} */ overflow = (y % Math.floor(this._rowHeight));\n        const /** @type {?} */ half = this._rowHeight / 2;\n\n        switch (rounding) {\n\n            case Rounding.RoundDown:\n                return row;\n\n            case Rounding.RoundDownBelowHalf:\n                return overflow < half ? row : row + 1;\n\n            case Rounding.RoundUpOverHalf:\n                return overflow > half ? row + 1 : row;\n\n            case Rounding.RoundUp:\n                return overflow > 0 ? row + 1 : row;\n        }\n    }\n/**\n * @return {?}\n */\ncommitWidgetChanges(): void {\n\n        const /** @type {?} */ placeholder = this.placeholder$.getValue();\n\n        // check that we have all the values we need\n        if (placeholder.column === undefined || placeholder.row === undefined ||\n            placeholder.columnSpan === undefined || placeholder.rowSpan === undefined) {\n            return;\n        }\n\n        if (this._actionWidget) {\n            this._actionWidget.widget.setColumn(placeholder.column);\n            this._actionWidget.widget.setRow(placeholder.row);\n            this._actionWidget.widget.setColumnSpan(placeholder.columnSpan);\n            this._actionWidget.widget.setRowSpan(placeholder.rowSpan);\n        }\n\n        // reset all placeholder values\n        placeholder.column = undefined;\n        placeholder.row = undefined;\n        placeholder.columnSpan = undefined;\n        placeholder.rowSpan = undefined;\n\n        // emit the new placeholder values\n        this.placeholder$.next(placeholder);\n    }\n/**\n * Get the current column width\n * @return {?}\n */\ngetColumnWidth(): number {\n        return Math.floor(this.columnWidth);\n    }\n/**\n * Calculate the number of rows populated with widgets\n * @return {?}\n */\ngetRowCount(): number {\n        return this.widgets.reduce((previous, widget) => Math.max(widget.getRow() + widget.getRowSpan(), previous), 0);\n    }\n/**\n * Set the height of the dashboard container element\n * @return {?}\n */\nsetDashboardHeight(): void {\n\n        // size the dashboard container to ensure all rows fit\n        let /** @type {?} */ rowCount = this.getRowCount();\n\n        // if we should show an empty row increment the row count by 1\n        if (this.options.emptyRow) {\n            rowCount++;\n        }\n\n        this.setDimensions(undefined, rowCount * this._rowHeight);\n    }\n/**\n * Orders the z-index of all widgets to move the active one to the front\n * @param {?} widget The widget that should be brought to the front\n * @return {?}\n */\nbringToFront(widget: DashboardWidgetComponent): void {\n        this.widgets.forEach(_widget => _widget === widget ? _widget.bringToFront() : _widget.sendToBack());\n    }\n/**\n * Move a widget down - if widgets are in the position below, then move them down further\n * @param {?} widget The widget to move downwards\n * @param {?=} distance\n * @return {?}\n */\nmoveWidgetDown(widget: DashboardWidgetComponent, distance: number = 1): void {\n\n        // move the widget down one position\n        widget.setRow(widget.getRow() + distance);\n\n        // check every space the widget occupies for collisions\n        this.forEachBlock(widget, (column, row) =>\n            this.getWidgetsAtPosition(column, row, true)\n                .filter(wgt => wgt !== widget)\n                .forEach(wgt => this.moveWidgetDown(wgt, distance)));\n    }\n/**\n * Widgets should not be allowed to have a vacant space above them - if there is one they should move upwards to fill it\n * @return {?}\n */\nshiftWidgetsUp(): void {\n\n        // check whether or not changes have been made - if so we need to repeat until stable\n        let /** @type {?} */ stable = true;\n\n        // iterate each widget and \n        this.widgets.forEach(widget => {\n\n            // if widget is already on the top row then do nothing\n            if (widget.getRow() === 0) {\n                return;\n            }\n\n            // if we are currently dragging and this is the dragging widget then skip\n            if (this._actionWidget && this._actionWidget.widget === widget) {\n                return;\n            }\n\n            if (this.getPositionAvailable(widget.getColumn(), widget.getRow() - 1, widget.getColumnSpan(), 1)) {\n                widget.setRow(widget.getRow() - 1);\n                stable = false;\n            }\n        });\n\n        // if changes occurred then we should repeat the process\n        if (!stable) {\n            this.shiftWidgetsUp();\n        }\n    }\n/**\n * Iterate over each space a widget occupied\n * @param {?} widget The widget to determine spaces\n * @param {?} callback The function to be called for each space, should expect a column and row argument witht he context being the widget\n * @return {?}\n */\nforEachBlock(widget: DashboardWidgetComponent, callback: (column: number, row: number) => void): void {\n        for (let /** @type {?} */ row = widget.getRow(); row < widget.getRow() + widget.getRowSpan(); row++) {\n            for (let /** @type {?} */ column = widget.getColumn(); column < widget.getColumn() + widget.getColumnSpan(); column++) {\n                callback.call(widget, column, row);\n            }\n        }\n    }\n/**\n * Returns the number of columns available\n * @return {?}\n */\ngetColumnCount(): number {\n        return this.stacked ? 1 : this.options.columns;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction DashboardService_tsickle_Closure_declarations() {\n/** @type {?} */\nDashboardService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDashboardService.ctorParameters;\n/** @type {?} */\nDashboardService.prototype._dashboard;\n/** @type {?} */\nDashboardService.prototype._widgetOrigin;\n/** @type {?} */\nDashboardService.prototype._actionWidget;\n/** @type {?} */\nDashboardService.prototype._rowHeight;\n/** @type {?} */\nDashboardService.prototype._cache;\n/** @type {?} */\nDashboardService.prototype._mouseEvent;\n/** @type {?} */\nDashboardService.prototype.widgets$;\n/** @type {?} */\nDashboardService.prototype.options$;\n/** @type {?} */\nDashboardService.prototype.dimensions$;\n/** @type {?} */\nDashboardService.prototype.height$;\n/** @type {?} */\nDashboardService.prototype.placeholder$;\n/** @type {?} */\nDashboardService.prototype.layout$;\n/** @type {?} */\nDashboardService.prototype.stacked$;\n}\n\n\nexport const /** @type {?} */ defaultOptions: DashboardOptions = { columns: 5, padding: 5, minWidth: 100, minHeight: 100, emptyRow: true };\n\nexport interface DashboardDimensions {\n    width?: number;\n    height?: number;\n}\n\nexport interface DashboardWidgetDimensions {\n    x: number;\n    y: number;\n    width: number;\n    height: number;\n}\n\nexport interface DashboardAction {\n    widget: DashboardWidgetComponent;\n    direction: ActionDirection;\n    event: MouseEvent;\n    handle?: HTMLElement;\n}\n\nexport interface DashboardSpace {\n    widget: DashboardWidgetComponent;\n    column: number;\n    row: number;\n}\n\nexport interface DashboardPlaceholder {\n    visible: boolean;\n    x: number;\n    y: number;\n    width: number;\n    height: number;\n    column?: number;\n    row?: number;\n    columnSpan?: number;\n    rowSpan?: number;\n}\n\nexport interface DashboardCache {\n    id: string;\n    column: number;\n    row: number;\n}\n\nexport interface DashboardLayoutData {\n    id: string;\n    col: number;\n    row: number;\n    colSpan: number;\n    rowSpan: number;\n}\nexport type ActionDirection = number;\nexport let ActionDirection: any = {};\nActionDirection.Top = 0;\nActionDirection.TopRight = 1;\nActionDirection.Right = 2;\nActionDirection.BottomRight = 3;\nActionDirection.Bottom = 4;\nActionDirection.BottomLeft = 5;\nActionDirection.Left = 6;\nActionDirection.TopLeft = 7;\nActionDirection.Move = 8;\nActionDirection[ActionDirection.Top] = \"Top\";\nActionDirection[ActionDirection.TopRight] = \"TopRight\";\nActionDirection[ActionDirection.Right] = \"Right\";\nActionDirection[ActionDirection.BottomRight] = \"BottomRight\";\nActionDirection[ActionDirection.Bottom] = \"Bottom\";\nActionDirection[ActionDirection.BottomLeft] = \"BottomLeft\";\nActionDirection[ActionDirection.Left] = \"Left\";\nActionDirection[ActionDirection.TopLeft] = \"TopLeft\";\nActionDirection[ActionDirection.Move] = \"Move\";\n\nexport type Rounding = number;\nexport let Rounding: any = {};\nRounding.RoundDown = 0;\nRounding.RoundDownBelowHalf = 1;\nRounding.RoundUp = 2;\nRounding.RoundUpOverHalf = 3;\nRounding[Rounding.RoundDown] = \"RoundDown\";\nRounding[Rounding.RoundDownBelowHalf] = \"RoundDownBelowHalf\";\nRounding[Rounding.RoundUp] = \"RoundUp\";\nRounding[Rounding.RoundUpOverHalf] = \"RoundUpOverHalf\";\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Input, ElementRef, AfterViewInit, EventEmitter, Output, ViewChild, ChangeDetectionStrategy } from '@angular/core';\nimport { DashboardService, DashboardLayoutData, DashboardPlaceholder, defaultOptions } from './dashboard.service';\nimport { ResizeDimensions } from '../../directives/resize/resize.service';\nexport class DashboardComponent implements AfterViewInit {\n/**\n * @param {?} layout\n * @return {?}\n */\nset layout(layout: DashboardLayoutData[]) {\n        if (layout) {\n            this.dashboardService.layout$.next(layout);\n        }\n    }\n/**\n * @param {?} options\n * @return {?}\n */\nset options(options: DashboardOptions) {\n        this.dashboardService.options$.next({ ...defaultOptions, ...options });\n    }\n    \n     layoutChange = new EventEmitter<DashboardLayoutData[]>();\n\n     dashboardElement: ElementRef;\n/**\n * @param {?} dashboardService\n */\nconstructor(public dashboardService: DashboardService) {\n        dashboardService.layout$.subscribe(layout => this.layoutChange.emit(layout));\n    }\n/**\n * Set the initial dimensions\n * @return {?}\n */\nngAfterViewInit(): void {\n        this.dashboardService.setDashboard(this.dashboardElement.nativeElement);\n        this.dashboardService.setDimensions(this.dashboardElement.nativeElement.offsetWidth, this.dashboardElement.nativeElement.offsetHeight);\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nonResize(event: ResizeDimensions): void {\n        this.dashboardService.setDimensions(event.width, event.height);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-dashboard',\n    template: `\n      <div #dashboard class=\"dashboard-container\" [style.height.px]=\"dashboardService.height$ | async\">\n          <div (uxResize)=\"onResize($event)\" [throttle]=\"16\" class=\"dashboard\">\n              <ng-content></ng-content>\n          </div>\n    \n          <div class=\"position-indicator\" *ngIf=\"(dashboardService.placeholder$ | async).visible\" \n              [style.left.px]=\"(dashboardService.placeholder$ | async).x\" \n              [style.top.px]=\"(dashboardService.placeholder$ | async).y\" \n              [style.width.px]=\"(dashboardService.placeholder$ | async).width\"\n              [style.height.px]=\"(dashboardService.placeholder$ | async).height\"></div>\n      </div>\n    `,\n    providers: [DashboardService],\n    changeDetection: ChangeDetectionStrategy.OnPush\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: DashboardService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'layout': [{ type: Input },],\n'options': [{ type: Input },],\n'layoutChange': [{ type: Output },],\n'dashboardElement': [{ type: ViewChild, args: ['dashboard', ] },],\n};\n}\n\nfunction DashboardComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nDashboardComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDashboardComponent.ctorParameters;\n/** @type {?} */\nDashboardComponent.propDecorators;\n/** @type {?} */\nDashboardComponent.prototype.layoutChange;\n/** @type {?} */\nDashboardComponent.prototype.dashboardElement;\n/** @type {?} */\nDashboardComponent.prototype.dashboardService;\n}\n\n\nexport interface DashboardOptions {\n    columns?: number;\n    padding?: number;\n    minWidth?: number;\n    minHeight?: number;\n    rowHeight?: number;\n    emptyRow?: boolean;\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Input, OnInit, OnDestroy, HostBinding, AfterViewInit } from '@angular/core';\nimport { DashboardService, ActionDirection } from '../dashboard.service';\nimport { Subscription } from 'rxjs/Subscription';\nexport class DashboardWidgetComponent implements OnInit, AfterViewInit, OnDestroy {\n\n     id: string;\n     col: number;\n     row: number;\n     colSpan: number = 1;\n     rowSpan: number = 1;\n     resizable: boolean = false;\n\n     x: number = 0;\n     y: number = 0;\n     width: number = 100;\n     height: number = 100;\n     padding: number = 0;\n     zIndex: number = 0;\nprivate _column: StackableValue = { regular: undefined, stacked: undefined };\nprivate _row: StackableValue = { regular: undefined, stacked: undefined };\nprivate _columnSpan: StackableValue = { regular: 1, stacked: 1 };\nprivate _rowSpan: StackableValue = { regular: 1, stacked: 1 };\nprivate _subscription: Subscription;\n/**\n * @param {?} dashboardService\n */\nconstructor(public dashboardService: DashboardService) {\n        this._subscription = dashboardService.options$.subscribe(() => this.update());\n    }\n/**\n * @return {?}\n */\nngOnInit(): void {\n\n        this._columnSpan.regular = this.colSpan;\n        this._rowSpan.regular = this.rowSpan;\n\n        if (!this.id) {\n            console.warn('Dashboard Widget is missing an ID.');\n\n            // set random id - keeps things working but prevents exporting of positions\n            this.id = Math.floor(Math.random() * 100000).toString();\n        }\n    }\n/**\n * @return {?}\n */\nngAfterViewInit(): void {\n        // add the widget to the dashboard\n        this.dashboardService.addWidget(this);\n\n        // apply the current options\n        this.update();\n    }\n/**\n * If component is removed, then unregister it from the service\n * @return {?}\n */\nngOnDestroy(): void {\n        this._subscription.unsubscribe();\n        this.dashboardService.removeWidget(this);\n    }\n/**\n * Apply the current dashboard options\n * @return {?}\n */\nupdate(): void {\n\n        // get the current options at the time \n        const { padding, columns } = this.dashboardService.options;\n\n        this.padding = padding;\n        this._columnSpan.stacked = columns;\n    }\n/**\n * Set the actual position and size values\n * @return {?}\n */\nrender(): void {\n        this.x = this.getColumn() * this.dashboardService.getColumnWidth();\n        this.y = this.getRow() * this.dashboardService.getRowHeight();\n        this.width = this.getColumnSpan() * this.dashboardService.getColumnWidth();\n        this.height = this.getRowSpan() * this.dashboardService.getRowHeight();\n    }\n/**\n * @return {?}\n */\ngetColumn(): number {\n        return this.getStackableValue(this._column);\n    }\n/**\n * @return {?}\n */\ngetRow(): number {\n        return this.getStackableValue(this._row);\n    }\n/**\n * @param {?} column\n * @param {?=} render\n * @return {?}\n */\nsetColumn(column: number, render: boolean = true): void {\n        this.setStackableValue(this._column, column);\n\n        if (render) {\n            this.render();\n        }\n    }\n/**\n * @param {?} row\n * @param {?=} render\n * @return {?}\n */\nsetRow(row: number, render: boolean = true): void {\n        this.setStackableValue(this._row, row);\n\n        if (render) {\n            this.render();\n        }\n    }\n/**\n * @return {?}\n */\ngetColumnSpan(): number {\n        return this.getStackableValue(this._columnSpan);\n    }\n/**\n * @return {?}\n */\ngetRowSpan(): number {\n        return this.getStackableValue(this._rowSpan);\n    }\n/**\n * @param {?} columnSpan\n * @param {?=} render\n * @return {?}\n */\nsetColumnSpan(columnSpan: number, render: boolean = true): void {\n        this.setStackableValue(this._columnSpan, columnSpan);\n\n        if (render) {\n            this.render();\n        }\n    }\n/**\n * @param {?} rowSpan\n * @param {?=} render\n * @return {?}\n */\nsetRowSpan(rowSpan: number, render: boolean = true): void {\n        this.setStackableValue(this._rowSpan, rowSpan);\n\n        if (render) {\n            this.render();\n        }\n    }\n/**\n * @return {?}\n */\nbringToFront(): void {\n        this.zIndex = 1;\n    }\n/**\n * @return {?}\n */\nsendToBack(): void {\n        this.zIndex = 0;\n    }\n/**\n * @param {?} x\n * @param {?} y\n * @param {?} width\n * @param {?} height\n * @return {?}\n */\nsetBounds(x: number, y: number, width: number, height: number): void {\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n    }\n/**\n * @param {?} handle\n * @param {?} event\n * @param {?} direction\n * @return {?}\n */\ndragstart(handle: HTMLElement, event: MouseEvent, direction: ActionDirection): void {\n        this.dashboardService.onResizeStart({ widget: this, direction: direction, event: event, handle: handle });\n    }\n/**\n * @param {?} handle\n * @param {?} event\n * @param {?} direction\n * @return {?}\n */\ndrag(handle: HTMLElement, event: MouseEvent, direction: ActionDirection): void {\n        this.dashboardService.onResizeDrag({ widget: this, direction: direction, event: event, handle: handle });\n    }\n/**\n * @return {?}\n */\ndragend(): void {\n        this.dashboardService.onResizeEnd();\n    }\n/**\n * Allows automatic setting of stackable value\n * @param {?} property The current StackableValue object\n * @param {?} value The value to set in the appropriate field\n * @return {?}\n */\nprivate setStackableValue(property: StackableValue, value: number): void {\n\n        if (this.dashboardService.stacked) {\n            property.stacked = value;\n        } else {\n            property.regular = value;\n        }\n    }\n/**\n * Return the appropriate value from a stackable value\n * @param {?} property The Stackable value object\n * @return {?}\n */\nprivate getStackableValue(property: StackableValue): number {\n        return this.dashboardService.stacked ? property.stacked : property.regular;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-dashboard-widget',\n    template: `\n      <div class=\"widget-content widget-col-span-{{ getColumnSpan() }} widget-row-span-{{ getRowSpan() }}\">\n          <ng-content></ng-content>\n      </div>\n\n      <div uxDrag #handleTop class=\"resizer-handle handle-top\" \n          (dragstart)=\"dragstart(handleTop, $event, 0)\"\n          (drag)=\"drag(handleTop, $event, 0)\"\n          (dragend)=\"dragend()\"\n          [style.top.px]=\"padding\" \n          [hidden]=\"!resizable\">\n      </div>\n\n      <div uxDrag #handleTopRight class=\"resizer-handle handle-top-right\" \n          (dragstart)=\"dragstart(handleTopRight, $event, 1)\"\n          (drag)=\"drag(handleTopRight, $event, 1)\"\n          (dragend)=\"dragend()\"\n          [style.top.px]=\"padding\" \n          [style.right.px]=\"padding\" \n          [hidden]=\"!resizable && !(dashboardService.stacked$ | async)\">\n      </div>\n\n      <div uxDrag #handleRight class=\"resizer-handle handle-right\" \n          (dragstart)=\"dragstart(handleRight, $event, 2)\"\n          (drag)=\"drag(handleRight, $event, 2)\"\n          (dragend)=\"dragend()\"\n          [style.right.px]=\"padding\" \n          [hidden]=\"!resizable || (dashboardService.stacked$ | async)\">\n      </div>\n\n      <div uxDrag #handleBottomRight class=\"resizer-handle handle-bottom-right\" \n          (dragstart)=\"dragstart(handleBottomRight, $event, 3)\"\n          (drag)=\"drag(handleBottomRight, $event, 3)\"\n          (dragend)=\"dragend()\"\n          [style.bottom.px]=\"padding\" \n          [style.right.px]=\"padding\" \n          [hidden]=\"!resizable && !(dashboardService.stacked$ | async)\">\n      </div>\n\n      <div uxDrag #handleBottom class=\"resizer-handle handle-bottom\" \n          (dragstart)=\"dragstart(handleBottom, $event, 4)\"\n          (drag)=\"drag(handleBottom, $event, 4)\"\n          (dragend)=\"dragend()\"\n          [style.bottom.px]=\"padding\" \n          [hidden]=\"!resizable\">\n      </div>\n\n      <div uxDrag #handleBottomLeft class=\"resizer-handle handle-bottom-left\" \n          (dragstart)=\"dragstart(handleBottomLeft, $event, 5)\"\n          (drag)=\"drag(handleBottomLeft, $event, 5)\"\n          (dragend)=\"dragend()\"\n          [style.bottom.px]=\"padding\" \n          [style.left.px]=\"padding\" \n          [hidden]=\"!resizable && !(dashboardService.stacked$ | async)\">\n      </div>\n\n      <div uxDrag #handleLeft class=\"resizer-handle handle-left\" \n          (dragstart)=\"dragstart(handleLeft, $event, 6)\"\n          (drag)=\"drag(handleLeft, $event, 6)\"\n          (dragend)=\"dragend()\"\n          [style.left.px]=\"padding\" \n          [hidden]=\"!resizable || (dashboardService.stacked$ | async)\">\n      </div>\n\n      <div uxDrag #handleTopLeft class=\"resizer-handle handle-top-left\" \n          (dragstart)=\"dragstart(handleTopLeft, $event, 7)\"\n          (drag)=\"drag(handleTopLeft, $event, 7)\"\n          (dragend)=\"dragend()\"\n          [style.top.px]=\"padding\" \n          [style.left.px]=\"padding\" \n          [hidden]=\"!resizable && !(dashboardService.stacked$ | async)\">\n      </div>\n    `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: DashboardService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'id': [{ type: Input },],\n'col': [{ type: Input },],\n'row': [{ type: Input },],\n'colSpan': [{ type: Input },],\n'rowSpan': [{ type: Input },],\n'resizable': [{ type: Input },],\n'x': [{ type: HostBinding, args: ['style.left.px', ] },],\n'y': [{ type: HostBinding, args: ['style.top.px', ] },],\n'width': [{ type: HostBinding, args: ['style.width.px', ] },],\n'height': [{ type: HostBinding, args: ['style.height.px', ] },],\n'padding': [{ type: HostBinding, args: ['style.padding.px', ] },],\n'zIndex': [{ type: HostBinding, args: ['style.z-index', ] },],\n};\n}\n\nfunction DashboardWidgetComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nDashboardWidgetComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDashboardWidgetComponent.ctorParameters;\n/** @type {?} */\nDashboardWidgetComponent.propDecorators;\n/** @type {?} */\nDashboardWidgetComponent.prototype.id;\n/** @type {?} */\nDashboardWidgetComponent.prototype.col;\n/** @type {?} */\nDashboardWidgetComponent.prototype.row;\n/** @type {?} */\nDashboardWidgetComponent.prototype.colSpan;\n/** @type {?} */\nDashboardWidgetComponent.prototype.rowSpan;\n/** @type {?} */\nDashboardWidgetComponent.prototype.resizable;\n/** @type {?} */\nDashboardWidgetComponent.prototype.x;\n/** @type {?} */\nDashboardWidgetComponent.prototype.y;\n/** @type {?} */\nDashboardWidgetComponent.prototype.width;\n/** @type {?} */\nDashboardWidgetComponent.prototype.height;\n/** @type {?} */\nDashboardWidgetComponent.prototype.padding;\n/** @type {?} */\nDashboardWidgetComponent.prototype.zIndex;\n/** @type {?} */\nDashboardWidgetComponent.prototype._column;\n/** @type {?} */\nDashboardWidgetComponent.prototype._row;\n/** @type {?} */\nDashboardWidgetComponent.prototype._columnSpan;\n/** @type {?} */\nDashboardWidgetComponent.prototype._rowSpan;\n/** @type {?} */\nDashboardWidgetComponent.prototype._subscription;\n/** @type {?} */\nDashboardWidgetComponent.prototype.dashboardService;\n}\n\n\nexport interface StackableValue {\n    regular: number;\n    stacked: number;\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, Output, EventEmitter, ElementRef, NgZone, OnDestroy, Input, HostListener } from '@angular/core';\nimport { fromEvent } from 'rxjs/observable/fromEvent';\nimport { Subscription } from 'rxjs/Subscription';\nimport { takeUntil } from 'rxjs/operators/takeUntil';\nexport class DragDirective implements OnDestroy {\n\n     dragstart = new EventEmitter<MouseEvent>();\n     drag = new EventEmitter<MouseEvent>();\n     dragend = new EventEmitter<void>();\nprivate _subscription: Subscription;\n/**\n * @param {?} elementRef\n * @param {?} ngZone\n */\nconstructor(elementRef: ElementRef, ngZone: NgZone) {\n        const mousedown$ = fromEvent<MouseEvent>(elementRef.nativeElement, 'mousedown');\n        const mousemove$ = fromEvent<MouseEvent>(document, 'mousemove');\n        const mouseup$ = fromEvent<MouseEvent>(document, 'mouseup');\n\n        this._subscription = mousedown$.subscribe(event => {\n            event.preventDefault();\n\n            // emit the drag start event \n            ngZone.run(() => this.dragstart.emit(event));\n\n            mousemove$.pipe(takeUntil<MouseEvent>(mouseup$)).subscribe(moveevent => {\n                moveevent.preventDefault();\n\n                // emit the drag start event \n                ngZone.run(() => this.drag.emit(moveevent));\n            }, null, \n            () => ngZone.run(() => this.dragend.emit()));\n        });\n    }\n/**\n * @return {?}\n */\nngOnDestroy(): void {\n        this._subscription.unsubscribe();\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{ \n    selector: '[uxDrag]' \n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: NgZone, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'dragstart': [{ type: Output },],\n'drag': [{ type: Output },],\n'dragend': [{ type: Output },],\n};\n}\n\nfunction DragDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nDragDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDragDirective.ctorParameters;\n/** @type {?} */\nDragDirective.propDecorators;\n/** @type {?} */\nDragDirective.prototype.dragstart;\n/** @type {?} */\nDragDirective.prototype.drag;\n/** @type {?} */\nDragDirective.prototype.dragend;\n/** @type {?} */\nDragDirective.prototype._subscription;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, NgZone, ElementRef } from '@angular/core';\n\nimport { DashboardWidgetComponent } from '../widget/dashboard-widget.component';\nimport { DashboardService, ActionDirection } from '../dashboard.service';\nimport { DragDirective } from '../../../directives/drag/drag.directive';\nexport class DashboardDragHandleDirective extends DragDirective {\n/**\n * @param {?} widget\n * @param {?} dashboardService\n * @param {?} elementRef\n * @param {?} ngZone\n */\nconstructor(widget: DashboardWidgetComponent, dashboardService: DashboardService, elementRef: ElementRef, ngZone: NgZone) {\n        super(elementRef, ngZone);\n\n        this.dragstart.subscribe((event: MouseEvent) => dashboardService.onDragStart({ widget: widget, direction: ActionDirection.Move, event: event }));\n        this.drag.subscribe((event: MouseEvent) => dashboardService.onDrag({ widget: widget, direction: ActionDirection.Move, event: event }));\n        this.dragend.subscribe(() => dashboardService.onDragEnd());\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: '[uxDashboardWidgetDragHandle], [ux-dashboard-widget-drag-handle]'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: DashboardWidgetComponent, },\n{type: DashboardService, },\n{type: ElementRef, },\n{type: NgZone, },\n];\n}\n\nfunction DashboardDragHandleDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nDashboardDragHandleDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDashboardDragHandleDirective.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\n\nimport { DragDirective } from './drag.directive';\nexport class DragModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    exports: [DragDirective],\n    declarations: [DragDirective]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction DragModule_tsickle_Closure_declarations() {\n/** @type {?} */\nDragModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDragModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DashboardComponent } from './dashboard.component';\nimport { DashboardWidgetComponent } from './widget/dashboard-widget.component';\nimport { DashboardService } from './dashboard.service';\nimport { DashboardDragHandleDirective } from './drag-handle/drag-handle.directive';\nimport { ResizeModule } from '../../directives/resize/index';\nimport { DragModule } from '../../directives/drag/index';\n\nconst /** @type {?} */ DECLARATIONS: any[] = [\n    DashboardComponent,\n    DashboardWidgetComponent,\n    DashboardDragHandleDirective\n];\nexport class DashboardModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        CommonModule,\n        ResizeModule,\n        DragModule\n    ],\n    exports: DECLARATIONS,\n    declarations: DECLARATIONS,\n    providers: [DashboardService],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction DashboardModule_tsickle_Closure_declarations() {\n/** @type {?} */\nDashboardModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDashboardModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output, ViewEncapsulation, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nexport const /** @type {?} */ SPIN_BUTTON_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => SpinButtonComponent),\n    multi: true\n};\nexport class SpinButtonComponent implements ControlValueAccessor {\n/**\n * @param {?} value\n * @return {?}\n */\nset value(value: any) {\n        this._value = value;\n        this.onChangeCallback(value);\n        this.onTouchedCallback();\n    }\n/**\n * @return {?}\n */\nget value(): any {\n        return this._value;\n    }\n\n     type: string = 'text';\n     min: number;\n     max: number;\n     placeholder: string = '';\n     disabled: boolean = false;\n     spinners: boolean = true;\n     readOnly: boolean = true;\n     scrolling: boolean = true;\n     arrowkeys: boolean = true;\n\n     incrementAriaLabel: string;\n     inputAriaLabel: string;\n     decrementAriaLabel: string;\n\n     valueChange = new EventEmitter<any>();\n\n     increment = new EventEmitter<void>();\n     decrement = new EventEmitter<void>();\n\n    onTouchedCallback: () => void = () => { };\n    onChangeCallback: (_: any) => void = () => { };\nprivate _value: any;\n/**\n * @param {?} event\n * @return {?}\n */\nscroll(event: WheelEvent): void {\n\n        if (!this.scrolling) {\n            return;\n        }\n\n        if (event.deltaY > 0) {\n            this.triggerDecrement();\n        } else {\n            this.triggerIncrement();\n        }\n\n        event.preventDefault();\n    }\n/**\n * @return {?}\n */\ntriggerIncrement(): void {\n        if (!this.disabled) {\n            this.increment.emit();\n        }\n    }\n/**\n * @return {?}\n */\ntriggerDecrement(): void {\n        if (!this.disabled) {\n            this.decrement.emit();\n        }\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nwriteValue(value: any): void {\n        this.value = value;\n    }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnChange(fn: (_: any) => void): void {\n        this.onChangeCallback = fn;\n    }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnTouched(fn: () => void): void {\n        this.onTouchedCallback = fn;\n    }\n/**\n * @param {?} isDisabled\n * @return {?}\n */\nsetDisabledState(isDisabled: boolean): void {\n        this.disabled = isDisabled;\n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-spin-button',\n    template: `\n      <button class=\"spin-button\"\n              *ngIf=\"spinners\"\n              tabindex=\"-1\"\n              [disabled]=\"disabled\"\n              [attr.aria-label]=\"incrementAriaLabel\"\n              [attr.aria-disabled]=\"disabled\"\n              (click)=\"triggerIncrement()\">\n\n        <span class=\"hpe-icon hpe-up\"></span>\n      </button>\n\n      <input [type]=\"type\"\n             role=\"spinbutton\"\n             [min]=\"min\"\n             [max]=\"max\"\n             [tabindex]=\"0\"\n             class=\"form-control\"\n             [placeholder]=\"placeholder\"\n             [readOnly]=\"readOnly\"\n             [disabled]=\"disabled\"\n             [attr.aria-label]=\"inputAriaLabel\"\n             [attr.aria-disabled]=\"disabled\"\n             [attr.aria-valuemin]=\"min\"\n             [attr.aria-valuenow]=\"value\"\n             [attr.aria-valuemax]=\"max\"\n             [attr.aria-readonly]=\"readOnly\"\n             [ngModel]=\"value\"\n             (ngModelChange)=\"valueChange.emit($event)\"\n             (wheel)=\"scroll($event)\"\n             (keydown.arrowup)=\"arrowkeys ? triggerIncrement() : null; $event.preventDefault()\"\n             (keydown.arrowdown)=\"arrowkeys ? triggerDecrement() : null; $event.preventDefault()\">\n\n      <button class=\"spin-button\"\n              *ngIf=\"spinners\"\n              tabindex=\"-1\"\n              [disabled]=\"disabled\"\n              [attr.aria-label]=\"decrementAriaLabel\"\n              [attr.aria-disabled]=\"disabled\"\n              (click)=\"triggerDecrement()\">\n\n        <span class=\"hpe-icon hpe-down\"></span>\n      </button>\n    `,\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [SPIN_BUTTON_VALUE_ACCESSOR]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'value': [{ type: Input },],\n'type': [{ type: Input },],\n'min': [{ type: Input },],\n'max': [{ type: Input },],\n'placeholder': [{ type: Input },],\n'disabled': [{ type: Input },],\n'spinners': [{ type: Input },],\n'readOnly': [{ type: Input },],\n'scrolling': [{ type: Input },],\n'arrowkeys': [{ type: Input },],\n'incrementAriaLabel': [{ type: Input },],\n'inputAriaLabel': [{ type: Input },],\n'decrementAriaLabel': [{ type: Input },],\n'valueChange': [{ type: Output },],\n'increment': [{ type: Output },],\n'decrement': [{ type: Output },],\n};\n}\n\nfunction SpinButtonComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nSpinButtonComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSpinButtonComponent.ctorParameters;\n/** @type {?} */\nSpinButtonComponent.propDecorators;\n/** @type {?} */\nSpinButtonComponent.prototype.type;\n/** @type {?} */\nSpinButtonComponent.prototype.min;\n/** @type {?} */\nSpinButtonComponent.prototype.max;\n/** @type {?} */\nSpinButtonComponent.prototype.placeholder;\n/** @type {?} */\nSpinButtonComponent.prototype.disabled;\n/** @type {?} */\nSpinButtonComponent.prototype.spinners;\n/** @type {?} */\nSpinButtonComponent.prototype.readOnly;\n/** @type {?} */\nSpinButtonComponent.prototype.scrolling;\n/** @type {?} */\nSpinButtonComponent.prototype.arrowkeys;\n/** @type {?} */\nSpinButtonComponent.prototype.incrementAriaLabel;\n/** @type {?} */\nSpinButtonComponent.prototype.inputAriaLabel;\n/** @type {?} */\nSpinButtonComponent.prototype.decrementAriaLabel;\n/** @type {?} */\nSpinButtonComponent.prototype.valueChange;\n/** @type {?} */\nSpinButtonComponent.prototype.increment;\n/** @type {?} */\nSpinButtonComponent.prototype.decrement;\n/** @type {?} */\nSpinButtonComponent.prototype.onTouchedCallback;\n/** @type {?} */\nSpinButtonComponent.prototype.onChangeCallback;\n/** @type {?} */\nSpinButtonComponent.prototype._value;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { SpinButtonComponent } from './spin-button.component';\nexport class SpinButtonModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        CommonModule,\n        FormsModule\n    ],\n    exports: [SpinButtonComponent],\n    declarations: [SpinButtonComponent]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction SpinButtonModule_tsickle_Closure_declarations() {\n/** @type {?} */\nSpinButtonModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSpinButtonModule.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nexport class TimeFormatPipe implements PipeTransform {\n/**\n * @param {?} value\n * @return {?}\n */\ntransform(value: number): string | number {\n    return value < 10 ? '0' + value : value;\n  }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Pipe, args: [{\n  name: 'timeFormat'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction TimeFormatPipe_tsickle_Closure_declarations() {\n/** @type {?} */\nTimeFormatPipe.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTimeFormatPipe.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, OnDestroy, Output, ViewEncapsulation, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { Observable } from 'rxjs/Observable';\nimport { Subscription } from 'rxjs/Subscription';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\nexport const /** @type {?} */ TIME_PICKER_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => TimePickerComponent),\n    multi: true\n};\nexport class TimePickerComponent implements ControlValueAccessor, OnDestroy {\n\n     arrowkeys: boolean = true;\n     mousewheel: boolean = true;\n     disabled: boolean = false;\n     readOnly: boolean = false;\n\n     showMeridian: boolean = false;\n     showHours: boolean = true;\n     showMinutes: boolean = true;\n     showSeconds: boolean = false;\n     showSpinners: boolean = true;\n\n     hourStep: number = 1;\n     minuteStep: number = 1;\n     secondStep: number = 1;\n\n     min: Date;\n     max: Date;\n     meridians: string[] = ['AM', 'PM'];\n/**\n * @param {?} value\n * @return {?}\n */\nset value(value: Date) {\n        this.value$.next(new Date(value));\n        this.valueChange.emit(this.value$.value);\n\n        this.onChangeCallback(this.value$.value);\n        this.onTouchedCallback();\n    }\n/**\n * @return {?}\n */\nget value(): Date {\n        return new Date(this.value$.value);\n    }\n\n     valueChange = new EventEmitter<Date>();\n     isValid = new EventEmitter<boolean>();\n\n    onTouchedCallback: () => void = () => { };\n    onChangeCallback: (_: Date) => void = () => { };\n\n    value$ = new BehaviorSubject<Date>(new Date());\n\n    // create observables that are derived from the latest value\n    hour$: Observable<number> = this.value$.pipe(map(date => date.getHours()), map(hour => this.showMeridian ? this.getMeridianTime(hour) : hour));\n    minute$: Observable<number> = this.value$.pipe(map(date => date.getMinutes()));\n    second$: Observable<number> = this.value$.pipe(map(date => date.getSeconds()));\n    meridian$: Observable<string> = this.value$.pipe(map(date => date.getHours() < 12 ? this.meridians[0] : this.meridians[1]));\n    valid$: Observable<boolean> = this.value$.pipe(map(date => this.checkValidity(date)));\nprivate _meridian: string = this.meridians[0];\nprivate _subscription: Subscription;\nconstructor() {\n        this._subscription = this.valid$.pipe(distinctUntilChanged()).subscribe(valid => this.isValid.emit(valid));\n    }\n/**\n * @return {?}\n */\nngOnDestroy(): void {\n        this._subscription.unsubscribe();\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nwriteValue(value: Date): void {\n        this.value = value;\n    }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnChange(fn: (_: Date) => void): void {\n        this.onChangeCallback = fn;\n    }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnTouched(fn: () => void): void {\n        this.onTouchedCallback = fn;\n    }\n/**\n * @param {?} isDisabled\n * @return {?}\n */\nsetDisabledState(isDisabled: boolean): void {\n        this.disabled = isDisabled;\n    }\n/**\n * @param {?} hour\n * @return {?}\n */\ngetMeridianTime(hour: number): number {\n        return hour > 12 ? hour - 12 : hour;\n    }\n/**\n * @param {?} hour\n * @return {?}\n */\nsetHour(hour: number): void {\n        const /** @type {?} */ date = this.value;\n        date.setHours(hour ? hour : 0);\n\n        this.value = date;\n    }\n/**\n * @param {?} minute\n * @return {?}\n */\nsetMinute(minute: number): void {\n        const /** @type {?} */ date = this.value;\n        date.setMinutes(minute ? minute : 0);\n\n        this.value = date;\n    }\n/**\n * @param {?} seconds\n * @return {?}\n */\nsetSeconds(seconds: number): void {\n        const /** @type {?} */ date = this.value;\n        date.setSeconds(seconds ? seconds : 0);\n\n        this.value = date;\n    }\n/**\n * @param {?=} arrowkey\n * @return {?}\n */\nincrementHour(arrowkey: boolean = false): void {\n        if (this.disabled || arrowkey && !this.arrowkeys) {\n            return;\n        }\n\n        this.setHour(this.value.getHours() + this.hourStep);\n    }\n/**\n * @param {?=} arrowkey\n * @return {?}\n */\ndecrementHour(arrowkey: boolean = false): void {\n        if (this.disabled || arrowkey && !this.arrowkeys) {\n            return;\n        }\n\n        this.setHour(this.value.getHours() - this.hourStep);\n    }\n/**\n * @param {?=} arrowkey\n * @return {?}\n */\nincrementMinute(arrowkey: boolean = false): void {\n        if (this.disabled || arrowkey && !this.arrowkeys) {\n            return;\n        }\n\n        this.setMinute(this.value.getMinutes() + this.minuteStep);\n    }\n/**\n * @param {?=} arrowkey\n * @return {?}\n */\ndecrementMinute(arrowkey: boolean = false): void {\n        if (this.disabled || arrowkey && !this.arrowkeys) {\n            return;\n        }\n\n        this.setMinute(this.value.getMinutes() - this.minuteStep);\n    }\n/**\n * @param {?=} arrowkey\n * @return {?}\n */\nincrementSecond(arrowkey: boolean = false): void {\n        if (this.disabled || arrowkey && !this.arrowkeys) {\n            return;\n        }\n\n        this.setSeconds(this.value.getSeconds() + this.secondStep);\n    }\n/**\n * @param {?=} arrowkey\n * @return {?}\n */\ndecrementSecond(arrowkey: boolean = false): void {\n        if (this.disabled || arrowkey && !this.arrowkeys) {\n            return;\n        }\n\n        this.setSeconds(this.value.getSeconds() - this.secondStep);\n    }\n/**\n * @param {?} meridian\n * @return {?}\n */\nselectMeridian(meridian: string): void {\n        this._meridian = meridian;\n\n        // get the current time\n        const /** @type {?} */ hour = this.value.getHours();\n\n        // if we have selected AM\n        if (meridian === this.meridians[0]) {\n            if (hour >= 12) {\n                this.setHour(hour - 12);\n            }\n        }\n\n        // if we have selected PM\n        if (meridian === this.meridians[1]) {\n            if (hour < 12) {\n                this.setHour(hour + 12);\n            }\n        }\n    }\n/**\n * @param {?} date\n * @return {?}\n */\ncheckValidity(date: Date): boolean {\n        let /** @type {?} */ valid = true;\n\n        if (this.min && date.getTime() <= this.min.getTime()) {\n            valid = false;\n        }\n\n        if (this.max && date.getTime() >= this.max.getTime()) {\n            valid = false;\n        }\n\n        return valid;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nhourChange(value: string): void {\n\n        // convert the string to a number\n        let /** @type {?} */ hour = parseInt(value);\n        let /** @type {?} */ currentHour = this.value.getHours();\n\n        // if the value hasn't changed, do nothing\n        if (hour === currentHour) {\n            return;\n        }\n\n        // ensure the hours is valid\n        if (!isNaN(hour)) {\n            if (hour < 0) {\n                hour = 0;\n            }\n\n            if (hour > (this.showMeridian ? 12 : 23)) {\n                hour = this.showMeridian ? 12 : 23;\n            }\n        }\n\n        hour = isNaN(hour) ? currentHour : hour;\n\n        // if the number is invalid then restore it to the previous value\n        if (this._meridian === this.meridians[0]) {\n            if (hour >= 12) {\n                hour -= 12;\n            }\n        }\n\n        // if we have selected PM\n        if (this._meridian === this.meridians[1]) {\n            if (hour < 12) {\n                hour += 12;\n            }\n        }\n\n        this.setHour(hour);\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nminuteChange(value: string): void {\n\n        // convert the string to a number\n        let /** @type {?} */ minute = parseInt(value);\n        let /** @type {?} */ currentMinute = this.value.getMinutes();\n\n        // if the value hasn't changed, do nothing\n        if (minute === currentMinute) {\n            return;\n        }\n\n        // ensure the hours is valid\n        if (!isNaN(minute)) {\n            if (minute < 0) {\n                minute = 59;\n            }\n\n            if (minute > 59) {\n                minute = 0;\n            }\n        }\n\n        // if the number is invalid then restore it to the previous value\n        this.setMinute(isNaN(minute) ? currentMinute : minute);\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nsecondChange(value: string): void {\n        // convert the string to a number\n        let /** @type {?} */ second = parseInt(value);\n        let /** @type {?} */ currentSecond = this.value.getSeconds();\n\n        // if the value hasn't changed, do nothing\n        if (second === currentSecond) {\n            return;\n        }\n\n        // ensure the hours is valid\n        if (!isNaN(second)) {\n            if (second < 0) {\n                second = 0;\n            }\n\n            if (second > 59) {\n                second = 59;\n            }\n        }\n\n        // if the number is invalid then restore it to the previous value\n        this.setSeconds(isNaN(second) ? currentSecond : second);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-time-picker',\n    template: `\n      <div class=\"time-picker\" aria-label=\"Time picker\">\n\n          <div class=\"time-picker-column\" [class.has-error]=\"!(valid$ | async)\" *ngIf=\"showHours\">\n\n              <ux-spin-button\n                  type=\"number\"\n                  class=\"time-spinner\"\n                  placeholder=\"HH\"\n                  [min]=\"0\"\n                  [max]=\"showMeridian ? 12 : 23\"\n                  [value]=\"hour$ | async | timeFormat\"\n                  (valueChange)=\"hourChange($event)\"\n                  [spinners]=\"showSpinners\"\n                  [disabled]=\"disabled\"\n                  [readOnly]=\"readOnly\"\n                  inputAriaLabel=\"hour\"\n                  incrementAriaLabel=\"Increment the hour\"\n                  decrementAriaLabel=\"Decrement the hour\"\n                  (increment)=\"incrementHour()\"\n                  (decrement)=\"decrementHour()\">\n              </ux-spin-button>\n\n          </div>\n\n          <div class=\"time-picker-separator\" *ngIf=\"showMinutes\">:</div>\n\n          <div class=\"time-picker-column\" [class.has-error]=\"!(valid$ | async)\" *ngIf=\"showMinutes\">\n\n              <ux-spin-button\n                  type=\"number\"\n                  class=\"time-spinner\"\n                  placeholder=\"MM\"\n                  [min]=\"0\"\n                  [max]=\"59\"\n                  [value]=\"minute$ | async | timeFormat\"\n                  (valueChange)=\"minuteChange($event)\"\n                  [spinners]=\"showSpinners\"\n                  [disabled]=\"disabled\"\n                  [readOnly]=\"readOnly\"\n                  inputAriaLabel=\"minute\"\n                  incrementAriaLabel=\"Increment the minute\"\n                  decrementAriaLabel=\"Decrement the minute\"\n                  (increment)=\"incrementMinute()\"\n                  (decrement)=\"decrementMinute()\">\n              </ux-spin-button>\n\n          </div>\n\n          <div class=\"time-picker-separator\" *ngIf=\"showSeconds\">:</div>\n\n          <div class=\"time-picker-column\" [class.has-error]=\"!(valid$ | async)\" *ngIf=\"showSeconds\">\n\n              <ux-spin-button\n                  type=\"number\"\n                  class=\"time-spinner\"\n                  type=\"number\"\n                  placeholder=\"SS\"\n                  [min]=\"0\"\n                  [max]=\"59\"\n                  [value]=\"second$ | async | timeFormat\"\n                  (valueChange)=\"secondChange($event)\"\n                  [spinners]=\"showSpinners\"\n                  [disabled]=\"disabled\"\n                  [readOnly]=\"readOnly\"\n                  inputAriaLabel=\"seconds\"\n                  incrementAriaLabel=\"Increment the second\"\n                  decrementAriaLabel=\"Decrement the second\"\n                  (increment)=\"incrementSecond()\"\n                  (decrement)=\"decrementSecond()\">\n              </ux-spin-button>\n\n          </div>\n      </div>\n\n      <div class=\"time-picker-meridian\" *ngIf=\"showMeridian\">\n\n          <div class=\"btn-group\" role=\"radiogroup\">\n\n              <button class=\"btn button-toggle-accent\"\n                      *ngFor=\"let meridian of meridians\"\n                      role=\"radio\"\n                      tabindex=\"0\"\n                      [disabled]=\"disabled\"\n                      (click)=\"selectMeridian(meridian)\"\n                      [class.active]=\"meridian === (meridian$ | async)\"\n                      [attr.aria-label]=\"meridian\"\n                      [attr.aria-checked]=\"meridian === (meridian$ | async)\"\n                      [attr.aria-disabled]=\"disabled\">\n                      {{ meridian }}\n              </button>\n\n          </div>\n      </div>\n    `,\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [TIME_PICKER_VALUE_ACCESSOR],\n    host: {\n        'aria-label': 'Time Picker'\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'arrowkeys': [{ type: Input },],\n'mousewheel': [{ type: Input },],\n'disabled': [{ type: Input },],\n'readOnly': [{ type: Input },],\n'showMeridian': [{ type: Input },],\n'showHours': [{ type: Input },],\n'showMinutes': [{ type: Input },],\n'showSeconds': [{ type: Input },],\n'showSpinners': [{ type: Input },],\n'hourStep': [{ type: Input },],\n'minuteStep': [{ type: Input },],\n'secondStep': [{ type: Input },],\n'min': [{ type: Input },],\n'max': [{ type: Input },],\n'meridians': [{ type: Input },],\n'value': [{ type: Input },],\n'valueChange': [{ type: Output },],\n'isValid': [{ type: Output },],\n};\n}\n\nfunction TimePickerComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nTimePickerComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTimePickerComponent.ctorParameters;\n/** @type {?} */\nTimePickerComponent.propDecorators;\n/** @type {?} */\nTimePickerComponent.prototype.arrowkeys;\n/** @type {?} */\nTimePickerComponent.prototype.mousewheel;\n/** @type {?} */\nTimePickerComponent.prototype.disabled;\n/** @type {?} */\nTimePickerComponent.prototype.readOnly;\n/** @type {?} */\nTimePickerComponent.prototype.showMeridian;\n/** @type {?} */\nTimePickerComponent.prototype.showHours;\n/** @type {?} */\nTimePickerComponent.prototype.showMinutes;\n/** @type {?} */\nTimePickerComponent.prototype.showSeconds;\n/** @type {?} */\nTimePickerComponent.prototype.showSpinners;\n/** @type {?} */\nTimePickerComponent.prototype.hourStep;\n/** @type {?} */\nTimePickerComponent.prototype.minuteStep;\n/** @type {?} */\nTimePickerComponent.prototype.secondStep;\n/** @type {?} */\nTimePickerComponent.prototype.min;\n/** @type {?} */\nTimePickerComponent.prototype.max;\n/** @type {?} */\nTimePickerComponent.prototype.meridians;\n/** @type {?} */\nTimePickerComponent.prototype.valueChange;\n/** @type {?} */\nTimePickerComponent.prototype.isValid;\n/** @type {?} */\nTimePickerComponent.prototype.onTouchedCallback;\n/** @type {?} */\nTimePickerComponent.prototype.onChangeCallback;\n/** @type {?} */\nTimePickerComponent.prototype.value$;\n/** @type {?} */\nTimePickerComponent.prototype.hour$;\n/** @type {?} */\nTimePickerComponent.prototype.minute$;\n/** @type {?} */\nTimePickerComponent.prototype.second$;\n/** @type {?} */\nTimePickerComponent.prototype.meridian$;\n/** @type {?} */\nTimePickerComponent.prototype.valid$;\n/** @type {?} */\nTimePickerComponent.prototype._meridian;\n/** @type {?} */\nTimePickerComponent.prototype._subscription;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { SpinButtonModule } from '../spin-button/index';\nimport { TimeFormatPipe } from './time-format.pipe';\nimport { TimePickerComponent } from './time-picker.component';\nexport class TimePickerModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        CommonModule,\n        FormsModule,\n        SpinButtonModule\n    ],\n    exports: [TimePickerComponent],\n    declarations: [TimePickerComponent, TimeFormatPipe],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction TimePickerModule_tsickle_Closure_declarations() {\n/** @type {?} */\nTimePickerModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTimePickerModule.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { DateTimePickerTimezone } from './date-time-picker.service';\n/**\n * Convert a single dimension array to a double dimension array\n * @template T\n * @param {?} items the single dimension array to convert\n * @param {?} columns the number of items each array should have\n * @return {?}\n */\nexport function gridify<T>(items: T[], columns: number): T[][] {\n\n    // create a copy of array so not to effect the original\n    items = items.slice(0);\n\n    const /** @type {?} */ grid: T[][] = [];\n\n    while (items.length) {\n        grid.push(items.splice(0, columns));\n    }\n\n    return grid;\n}\n/**\n * Create an array of numbers between two limits\n * @param {?} start the lower limit\n * @param {?} end the upper limit\n * @return {?}\n */\nexport function range(start: number, end: number): number[] {\n    const /** @type {?} */ list: number[] = [];\n\n    for (let /** @type {?} */ idx = start; idx <= end; idx++) {\n        list.push(idx);\n    }\n\n    return list;\n}\n/**\n * Create an array of dates between two points\n * @param {?} start the date to start the array\n * @param {?} end the date to end the array\n * @return {?}\n */\nexport function dateRange(start: Date, end: Date): Date[] {\n\n    let /** @type {?} */ dates: Date[] = [];\n\n    // loop through all the days between the date range\n    while (start <= end) {\n\n        // add the date to the array\n        dates.push(new Date(start));\n\n        // move to the next day\n        start.setDate(start.getDate() + 1);\n    }\n\n    return dates;\n}\n/**\n * Compare two dates to see if they are on the same day\n * @param {?} day1 the first date to compare\n * @param {?} day2 the second date to compare\n * @return {?}\n */\nexport function compareDays(day1: Date, day2: Date): boolean {\n    return day1.getDate() === day2.getDate() &&\n        day1.getMonth() === day2.getMonth() &&\n        day1.getFullYear() === day2.getFullYear();\n}\n/**\n * Date comparison for use primarily with distinctUntilChanged\n * @param {?} dateOne\n * @param {?} dateTwo\n * @return {?}\n */\nexport function dateComparator(dateOne: Date, dateTwo: Date): boolean {\n    return dateOne.getTime() === dateTwo.getTime();\n}\n/**\n * Timezone comparison for use primarily with distinctUntilChanged\n * @param {?} zoneOne\n * @param {?} zoneTwo\n * @return {?}\n */\nexport function timezoneComparator(zoneOne: DateTimePickerTimezone, zoneTwo: DateTimePickerTimezone): boolean {\n    return zoneOne.name === zoneTwo.name && zoneOne.offset === zoneTwo.offset;\n}\n/**\n * Export an array of all the available months\n */\nexport const months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\nexport const /** @type {?} */ monthsShort = months.map(month => month.substring(0, 3));\n/**\n * Export an array of all the available days of the week\n */\nexport const weekdays = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'];\nexport const /** @type {?} */ weekdaysShort = weekdays.map(weekday => weekday.substring(0, 3));","/**\n * Add a config service to allow an application\n * to customize the date time picker default settings\n * across the entire application\n */\n\n\nimport { Injectable } from '@angular/core';\nimport { weekdaysShort } from './date-time-picker.utils';\nimport { DateTimePickerTimezone } from './date-time-picker.service';\nexport class DateTimePickerConfig {\n\n    showDate: boolean = true;\n    showTime: boolean = true;\n    showTimezone: boolean = true;\n    showSeconds: boolean = false;\n    showMeridian: boolean = true;\n    showSpinners: boolean = true;\n    weekdays: string[] = weekdaysShort;\n    nowBtnText: string = 'Today';\n\n    timezones: DateTimePickerTimezone[] = [\n        { name: 'GMT-11', offset: 660 },\n        { name: 'GMT-10', offset: 600 },\n        { name: 'GMT-9', offset: 540 },\n        { name: 'GMT-8', offset: 480 },\n        { name: 'GMT-7', offset: 420 },\n        { name: 'GMT-6', offset: 360 },\n        { name: 'GMT-5', offset: 300 },\n        { name: 'GMT-4', offset: 240 },\n        { name: 'GMT-3', offset: 180 },\n        { name: 'GMT-2', offset: 120 },\n        { name: 'GMT-1', offset: 60 },\n        { name: 'GMT', offset: 0 },\n        { name: 'GMT+1', offset: -60 },\n        { name: 'GMT+2', offset: -120 },\n        { name: 'GMT+3', offset: -180 },\n        { name: 'GMT+4', offset: -240 },\n        { name: 'GMT+5', offset: -300 },\n        { name: 'GMT+6', offset: -360 },\n        { name: 'GMT+7', offset: -420 },\n        { name: 'GMT+8', offset: -480 },\n        { name: 'GMT+9', offset: -540 },\n        { name: 'GMT+10', offset: -600 },\n        { name: 'GMT+11', offset: -660 },\n        { name: 'GMT+12', offset: -720 }\n    ];\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction DateTimePickerConfig_tsickle_Closure_declarations() {\n/** @type {?} */\nDateTimePickerConfig.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDateTimePickerConfig.ctorParameters;\n/** @type {?} */\nDateTimePickerConfig.prototype.showDate;\n/** @type {?} */\nDateTimePickerConfig.prototype.showTime;\n/** @type {?} */\nDateTimePickerConfig.prototype.showTimezone;\n/** @type {?} */\nDateTimePickerConfig.prototype.showSeconds;\n/** @type {?} */\nDateTimePickerConfig.prototype.showMeridian;\n/** @type {?} */\nDateTimePickerConfig.prototype.showSpinners;\n/** @type {?} */\nDateTimePickerConfig.prototype.weekdays;\n/** @type {?} */\nDateTimePickerConfig.prototype.nowBtnText;\n/** @type {?} */\nDateTimePickerConfig.prototype.timezones;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { Subject } from 'rxjs/Subject';\nimport { Subscription } from 'rxjs/Subscription';\nimport { distinctUntilChanged } from 'rxjs/operators';\nimport { DateTimePickerConfig } from './date-time-picker.config';\nimport { dateComparator } from './date-time-picker.utils';\nexport class DateTimePickerService {\n\n    mode$: BehaviorSubject<DatePickerMode> = new BehaviorSubject<DatePickerMode>(DatePickerMode.Day);\n    date$: BehaviorSubject<Date> = new BehaviorSubject<Date>(new Date());\n    timezone$ = new BehaviorSubject<DateTimePickerTimezone>(this.getCurrentTimezone());\n    selected$: BehaviorSubject<Date> = new BehaviorSubject<Date>(new Date());\n\n    // the month and year to display in the viewport\n    month$: BehaviorSubject<number> = new BehaviorSubject<number>(new Date().getMonth());\n    year$: BehaviorSubject<number> = new BehaviorSubject<number>(new Date().getFullYear());\n\n    showDate$ = new BehaviorSubject<boolean>(this._config.showDate);\n    showTime$ = new BehaviorSubject<boolean>(this._config.showTime);\n    showTimezone$ = new BehaviorSubject<boolean>(this._config.showTimezone);\n    showSeconds$ = new BehaviorSubject<boolean>(this._config.showSeconds);\n    showMeridian$ = new BehaviorSubject<boolean>(this._config.showMeridian);\n    showSpinners$ = new BehaviorSubject<boolean>(this._config.showSpinners);\n    weekdays$ = new BehaviorSubject<string[]>(this._config.weekdays);\n    nowBtnText$ = new BehaviorSubject<string>(this._config.nowBtnText);\n    timezones$ = new BehaviorSubject<DateTimePickerTimezone[]>(this._config.timezones);\n\n    header$ = new BehaviorSubject<string>(null);\n    headerEvent$ = new Subject<DatePickerHeaderEvent>();\n    modeDirection: ModeDirection = ModeDirection.None;\nprivate _subscription: Subscription;\n/**\n * @param {?} _config\n */\nconstructor(private _config: DateTimePickerConfig) {\n\n        // when the active date changes set the currently selected date\n        this._subscription = this.selected$.pipe(distinctUntilChanged(dateComparator)).subscribe(date => {\n\n            // the month and year displayed in the viewport should reflect the newly selected items\n            this.setViewportMonth(date.getMonth());\n            this.setViewportYear(date.getFullYear());\n\n            // emit the new date to the component host\n            this.date$.next(date);\n        });\n    }\n/**\n * @return {?}\n */\nngOnDestroy(): void {\n        this._subscription.unsubscribe();\n    }\n/**\n * @param {?} month\n * @return {?}\n */\nsetViewportMonth(month: number): void {\n        if (month < 0) {\n            this.month$.next(11);\n            this.year$.next(this.year$.value - 1);\n        } else if (month > 11) {\n            this.month$.next(0);\n            this.year$.next(this.year$.value + 1);\n        } else {\n            this.month$.next(month);\n        }\n    }\n/**\n * @param {?} year\n * @return {?}\n */\nsetViewportYear(year: number): void {\n        this.year$.next(year);\n    }\n/**\n * @param {?} day\n * @param {?} month\n * @param {?} year\n * @return {?}\n */\nsetDate(day: number, month: number, year: number): void {\n        const /** @type {?} */ date = new Date(this.selected$.value);\n\n        date.setDate(day);\n        date.setMonth(month);\n        date.setFullYear(year);\n\n        this.selected$.next(date);\n    }\n/**\n * @return {?}\n */\nsetDateToNow(): void {\n        this.selected$.next(new Date());\n    }\n/**\n * @param {?} mode\n * @return {?}\n */\nsetViewportMode(mode: DatePickerMode): void {\n        this.mode$.next(mode);\n    }\n/**\n * @return {?}\n */\ngoToChildMode(): void {\n        this.modeDirection = ModeDirection.Descend;\n\n        switch (this.mode$.value) {\n\n            case DatePickerMode.Year:\n                return this.setViewportMode(DatePickerMode.Month);\n\n            case DatePickerMode.Month:\n                return this.setViewportMode(DatePickerMode.Day);\n        }\n    }\n/**\n * @return {?}\n */\ngoToParentMode(): void {\n        this.modeDirection = ModeDirection.Ascend;\n\n        switch (this.mode$.value) {\n\n            case DatePickerMode.Day:\n                return this.setViewportMode(DatePickerMode.Month);\n\n            case DatePickerMode.Month:\n                return this.setViewportMode(DatePickerMode.Year);\n        }\n    }\n/**\n * @return {?}\n */\ngoToNext(): void {\n        this.headerEvent$.next(DatePickerHeaderEvent.Next);\n    }\n/**\n * @return {?}\n */\ngoToPrevious(): void {\n        this.headerEvent$.next(DatePickerHeaderEvent.Previous);\n    }\n/**\n * @param {?} header\n * @return {?}\n */\nsetHeader(header: string): void {\n        this.header$.next(header);\n    }\n/**\n * @return {?}\n */\ngetCurrentTimezone(): DateTimePickerTimezone {\n        const /** @type {?} */ offset = new Date().getTimezoneOffset();\n        return this._config.timezones.find(timezone => timezone.offset === offset);\n    }\n/**\n * @param {?} timezone\n * @return {?}\n */\nsetTimezone(timezone: DateTimePickerTimezone): void {\n        this.timezone$.next(timezone);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: DateTimePickerConfig, },\n];\n}\n\nfunction DateTimePickerService_tsickle_Closure_declarations() {\n/** @type {?} */\nDateTimePickerService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDateTimePickerService.ctorParameters;\n/** @type {?} */\nDateTimePickerService.prototype.mode$;\n/** @type {?} */\nDateTimePickerService.prototype.date$;\n/** @type {?} */\nDateTimePickerService.prototype.timezone$;\n/** @type {?} */\nDateTimePickerService.prototype.selected$;\n/** @type {?} */\nDateTimePickerService.prototype.month$;\n/** @type {?} */\nDateTimePickerService.prototype.year$;\n/** @type {?} */\nDateTimePickerService.prototype.showDate$;\n/** @type {?} */\nDateTimePickerService.prototype.showTime$;\n/** @type {?} */\nDateTimePickerService.prototype.showTimezone$;\n/** @type {?} */\nDateTimePickerService.prototype.showSeconds$;\n/** @type {?} */\nDateTimePickerService.prototype.showMeridian$;\n/** @type {?} */\nDateTimePickerService.prototype.showSpinners$;\n/** @type {?} */\nDateTimePickerService.prototype.weekdays$;\n/** @type {?} */\nDateTimePickerService.prototype.nowBtnText$;\n/** @type {?} */\nDateTimePickerService.prototype.timezones$;\n/** @type {?} */\nDateTimePickerService.prototype.header$;\n/** @type {?} */\nDateTimePickerService.prototype.headerEvent$;\n/** @type {?} */\nDateTimePickerService.prototype.modeDirection;\n/** @type {?} */\nDateTimePickerService.prototype._subscription;\n/** @type {?} */\nDateTimePickerService.prototype._config;\n}\n\nexport type DatePickerMode = number;\nexport let DatePickerMode: any = {};\nDatePickerMode.Day = 0;\nDatePickerMode.Month = 1;\nDatePickerMode.Year = 2;\nDatePickerMode[DatePickerMode.Day] = \"Day\";\nDatePickerMode[DatePickerMode.Month] = \"Month\";\nDatePickerMode[DatePickerMode.Year] = \"Year\";\n\nexport type ModeDirection = number;\nexport let ModeDirection: any = {};\nModeDirection.None = 0;\nModeDirection.Ascend = 1;\nModeDirection.Descend = 2;\nModeDirection[ModeDirection.None] = \"None\";\nModeDirection[ModeDirection.Ascend] = \"Ascend\";\nModeDirection[ModeDirection.Descend] = \"Descend\";\n\nexport type DatePickerHeaderEvent = number;\nexport let DatePickerHeaderEvent: any = {};\nDatePickerHeaderEvent.Previous = 0;\nDatePickerHeaderEvent.Next = 1;\nDatePickerHeaderEvent[DatePickerHeaderEvent.Previous] = \"Previous\";\nDatePickerHeaderEvent[DatePickerHeaderEvent.Next] = \"Next\";\n\n\nexport interface DateTimePickerTimezone {\n    name: string;\n    offset: number;\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, EventEmitter, Input, OnDestroy, Output, ChangeDetectionStrategy } from '@angular/core';\nimport { Subscription } from 'rxjs/Subscription';\nimport { distinctUntilChanged } from 'rxjs/operators';\nimport { DatePickerMode, DateTimePickerService, DateTimePickerTimezone } from './date-time-picker.service';\nimport { dateComparator, timezoneComparator } from './date-time-picker.utils';\nexport class DateTimePickerComponent implements OnDestroy {\nprivate _timezone: DateTimePickerTimezone;\n/**\n * @param {?} value\n * @return {?}\n */\nset showDate(value: boolean) {\n    this.datepicker.showDate$.next(value);\n  }\n/**\n * @param {?} value\n * @return {?}\n */\nset showTime(value: boolean) {\n    this.datepicker.showTime$.next(value);\n  }\n/**\n * @param {?} value\n * @return {?}\n */\nset showTimezone(value: boolean) {\n    this.datepicker.showTimezone$.next(value);\n  }\n/**\n * @param {?} value\n * @return {?}\n */\nset showSeconds(value: boolean) {\n    this.datepicker.showSeconds$.next(value);\n  }\n/**\n * @param {?} value\n * @return {?}\n */\nset showMeridian(value: boolean) {\n    this.datepicker.showMeridian$.next(value);\n  }\n/**\n * @param {?} value\n * @return {?}\n */\nset showSpinners(value: boolean) {\n    this.datepicker.showSpinners$.next(value);\n  }\n/**\n * @param {?} value\n * @return {?}\n */\nset weekdays(value: string[]) {\n    this.datepicker.weekdays$.next(value);\n  }\n/**\n * @param {?} value\n * @return {?}\n */\nset nowBtnText(value: string) {\n    this.datepicker.nowBtnText$.next(value);\n  }\n/**\n * @param {?} value\n * @return {?}\n */\nset timezones(value: DateTimePickerTimezone[]) {\n    this.datepicker.timezones$.next(value);\n  }\n\n\n   dateChange: EventEmitter<Date> = new EventEmitter<Date>();\n   timezoneChange: EventEmitter<DateTimePickerTimezone> = new EventEmitter<DateTimePickerTimezone>();\n/**\n * @param {?} value\n * @return {?}\n */\nset date(value: Date) {\n    if (!dateComparator(value, this.datepicker.selected$.value)) {\n      this.datepicker.selected$.next(new Date(value));\n    }\n  }\n/**\n * @param {?} value\n * @return {?}\n */\nset timezone(value: DateTimePickerTimezone) {\n    this.datepicker.timezone$.next(value);\n  }\n\n  // expose enum to view\n  DatePickerMode = DatePickerMode;\nprivate _subscription = new Subscription();\n/**\n * @param {?} datepicker\n */\nconstructor(public datepicker: DateTimePickerService) {\n    const valueChange = datepicker.selected$.pipe(distinctUntilChanged(dateComparator))\n      .subscribe(date => this.dateChange.emit(date));\n\n    const timezoneChange = datepicker.timezone$.pipe(distinctUntilChanged(timezoneComparator))\n      .subscribe((timezone: DateTimePickerTimezone) => this.timezoneChange.emit(timezone));\n  }\n/**\n * @return {?}\n */\nngOnDestroy(): void {\n    this._subscription.unsubscribe();\n  }\n/**\n * Change the date to the current date and time\n * @return {?}\n */\nsetToNow(): void {\n\n    // set the date to the current moment\n    this.datepicker.setDateToNow();\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'ux-date-time-picker',\n  template: `\n    <div class=\"calendar-container\">\n\n      <ux-date-time-picker-header></ux-date-time-picker-header>\n\n      <ng-container *ngIf=\"datepicker.showDate$ | async\" [ngSwitch]=\"datepicker.mode$ | async\">\n\n          <!-- Display days in the current month -->\n          <ux-date-time-picker-day-view *ngSwitchCase=\"DatePickerMode.Day\"></ux-date-time-picker-day-view>\n\n          <!-- Display the months in the current year -->\n          <ux-date-time-picker-month-view *ngSwitchCase=\"DatePickerMode.Month\"></ux-date-time-picker-month-view>\n\n          <!-- Display a decade -->\n          <ux-date-time-picker-year-view *ngSwitchCase=\"DatePickerMode.Year\"></ux-date-time-picker-year-view>\n\n      </ng-container>\n\n      <!-- Display a Time Picker -->\n      <ux-date-time-picker-time-view *ngIf=\"datepicker.showTime$ | async\"></ux-date-time-picker-time-view>\n\n    </div>\n\n    <button class=\"now-button\" aria-label=\"Set date to now\" (click)=\"setToNow()\">{{ datepicker.nowBtnText$ | async }}</button>\n  `,\n  providers: [DateTimePickerService],\n  changeDetection: ChangeDetectionStrategy.OnPush\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: DateTimePickerService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'showDate': [{ type: Input },],\n'showTime': [{ type: Input },],\n'showTimezone': [{ type: Input },],\n'showSeconds': [{ type: Input },],\n'showMeridian': [{ type: Input },],\n'showSpinners': [{ type: Input },],\n'weekdays': [{ type: Input },],\n'nowBtnText': [{ type: Input },],\n'timezones': [{ type: Input },],\n'dateChange': [{ type: Output },],\n'timezoneChange': [{ type: Output },],\n'date': [{ type: Input },],\n'timezone': [{ type: Input },],\n};\n}\n\nfunction DateTimePickerComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nDateTimePickerComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDateTimePickerComponent.ctorParameters;\n/** @type {?} */\nDateTimePickerComponent.propDecorators;\n/** @type {?} */\nDateTimePickerComponent.prototype._timezone;\n/** @type {?} */\nDateTimePickerComponent.prototype.dateChange;\n/** @type {?} */\nDateTimePickerComponent.prototype.timezoneChange;\n/** @type {?} */\nDateTimePickerComponent.prototype.DatePickerMode;\n/** @type {?} */\nDateTimePickerComponent.prototype._subscription;\n/** @type {?} */\nDateTimePickerComponent.prototype.datepicker;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { Subscription } from 'rxjs/Subscription';\nimport { combineLatest } from 'rxjs/observable/combineLatest';\nimport { DateTimePickerService, ModeDirection } from '../date-time-picker.service';\nimport { compareDays, dateRange, gridify, months } from '../date-time-picker.utils';\nexport class DayViewService implements OnDestroy {\n\n    grid$ = new BehaviorSubject<DayViewItem[][]>([[]]);\n    focused$ = new BehaviorSubject<FocusedDayItem>(null);\nprivate _subscription: Subscription;\n/**\n * @param {?} _datepicker\n */\nconstructor(private _datepicker: DateTimePickerService) {\n        this._subscription = combineLatest(_datepicker.month$, _datepicker.year$)\n            .subscribe(([month, year]) => this.createDayGrid(month, year));\n    }\n/**\n * @return {?}\n */\nngOnDestroy(): void {\n        this._subscription.unsubscribe();\n    }\n/**\n * @param {?} day\n * @param {?} month\n * @param {?} year\n * @return {?}\n */\nsetFocus(day: number, month: number, year: number): void {\n        this.focused$.next({ day: day, month: month, year: year });\n\n        // update the date picker to show the required month and year\n        this._datepicker.setViewportMonth(month);\n        this._datepicker.setViewportYear(year);\n    }\n/**\n * @param {?} month\n * @param {?} year\n * @return {?}\n */\nprivate createDayGrid(month: number, year: number): void {\n\n        // update the header\n        this._datepicker.setHeader(months[month] + ' ' + year);\n\n        // find the lower and upper boundaries\n        const /** @type {?} */ start = new Date(year, month, 1);\n        const /** @type {?} */ end = new Date(year, month + 1, 0);\n\n        // we always want to show from the sunday - this may include showing some dates from the previous month\n        start.setDate(start.getDate() - start.getDay());\n\n        // we also want to make sure that the range ends on a saturday\n        end.setDate(end.getDate() + (6 - end.getDay()));\n\n        // create an array of all the days to display\n        const /** @type {?} */ dates: DayViewItem[] = dateRange(start, end).map(date => ({\n            day: date.getDate(),\n            month: date.getMonth(),\n            year: date.getFullYear(),\n            date: date,\n            isToday: this.isToday(date),\n            isActive: this.isActive(date),\n            isCurrentMonth: date.getMonth() === month\n        }));\n\n        // turn the dates into a grid\n        const /** @type {?} */ items: DayViewItem[][] = gridify(dates, 7);\n\n        this.grid$.next(items);\n\n        // if no item has yet been focused then focus the first day of the month\n        if ((this._datepicker.modeDirection === ModeDirection.None || this._datepicker.modeDirection === ModeDirection.Descend) && this.focused$.value === null) {\n\n            // check if the selected item is visible\n            const /** @type {?} */ selectedDay = dates.find(day => day.isCurrentMonth && day.isActive);\n\n            if (selectedDay) {\n                this.setFocus(selectedDay.day, selectedDay.month, selectedDay.year);\n            } else {\n\n                // find the first day of the month\n                const /** @type {?} */ first = dates.find(date => date.day === 1);\n    \n                // focus the date\n                this.setFocus(first.day, first.month, first.year);\n            }\n\n        }\n    }\n/**\n * Determine whether or not a specific date is today\n * @param {?} date The date to check\n * @return {?}\n */\nprivate isToday(date: Date): boolean {\n        return compareDays(new Date(), date);\n    }\n/**\n * Determines whether or not a specific date is the selected one\n * @param {?} date the date to check\n * @return {?}\n */\nprivate isActive(date: Date): boolean {\n        return compareDays(this._datepicker.selected$.value, date);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: DateTimePickerService, },\n];\n}\n\nfunction DayViewService_tsickle_Closure_declarations() {\n/** @type {?} */\nDayViewService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDayViewService.ctorParameters;\n/** @type {?} */\nDayViewService.prototype.grid$;\n/** @type {?} */\nDayViewService.prototype.focused$;\n/** @type {?} */\nDayViewService.prototype._subscription;\n/** @type {?} */\nDayViewService.prototype._datepicker;\n}\n\n\nexport interface DayViewItem {\n    day: number;\n    month: number;\n    year: number;\n    date: Date;\n    isToday: boolean;\n    isActive: boolean;\n    isCurrentMonth: boolean;\n}\n\nexport interface FocusedDayItem {\n    day: number;\n    month: number;\n    year: number;\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { ChangeDetectionStrategy, Component, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs/Subscription';\nimport { DatePickerHeaderEvent, DateTimePickerService } from '../date-time-picker.service';\nimport { DayViewItem, DayViewService } from './day-view.service';\nexport class DayViewComponent implements OnDestroy {\nprivate _subscription: Subscription;\n/**\n * @param {?} datePicker\n * @param {?} dayService\n */\nconstructor(public datePicker: DateTimePickerService,\npublic dayService: DayViewService) {\n    this._subscription = datePicker.headerEvent$\n      .subscribe(event => event === DatePickerHeaderEvent.Next ? this.next() : this.previous());\n  }\n/**\n * @return {?}\n */\nngOnDestroy(): void {\n    this._subscription.unsubscribe();\n  }\n/**\n * Navigate to the previous page of dates\n * @return {?}\n */\nprevious(): void {\n    this.datePicker.setViewportMonth(this.datePicker.month$.value - 1);\n  }\n/**\n * Navigate to the next page of dates\n * @return {?}\n */\nnext(): void {\n    this.datePicker.setViewportMonth(this.datePicker.month$.value + 1);\n  }\n/**\n * Select a particular date\n * @param {?} date the date to select\n * @param {?} element\n * @return {?}\n */\nselect(date: Date, element: HTMLElement): void {\n    // update the current date object\n    this.datePicker.setDate(date.getDate(), date.getMonth(), date.getFullYear());\n\n    // focus the newly selected date\n    this.dayService.setFocus(date.getDate(), date.getMonth(), date.getFullYear());\n  }\n/**\n * @param {?} index\n * @return {?}\n */\ntrackWeekByFn(index: number): number {\n    return index;\n  }\n/**\n * @param {?} index\n * @param {?} item\n * @return {?}\n */\ntrackDayByFn(index: number, item: DayViewItem): string {\n    return `${ item.day } ${ item.month } ${ item.year }`;\n  }\n/**\n * @param {?} item\n * @param {?} dayOffset\n * @return {?}\n */\nfocusDate(item: DayViewItem, dayOffset: number): void {\n\n    // determine the date of the day\n    const /** @type {?} */ target = new Date(item.date.setDate(item.date.getDate() + dayOffset));\n\n    // identify which date should be focused\n    this.dayService.setFocus(target.getDate(), target.getMonth(), target.getFullYear());\n  }\n/**\n * @param {?} item\n * @return {?}\n */\ngetTabbable(item: DayViewItem): boolean {\n    const /** @type {?} */ focused = this.dayService.focused$.value;\n    const /** @type {?} */ grid = this.dayService.grid$.value;\n\n    // if there is a focused month check if this is it\n    if (focused) {\n\n      // check if the focused day is visible\n      const /** @type {?} */ isFocusedDayVisible = !!grid.find(row => !!row.find(_item => _item.day === focused.day && _item.month === focused.month && _item.year === focused.year));\n      \n      if (isFocusedDayVisible) {\n        return focused.day === item.day && focused.month === item.month && focused.year === item.year;\n      }\n    }\n\n    // if there is no focusable day then check if there is a selected day\n    const /** @type {?} */ isSelectedDayVisible = !!grid.find(row => !!row.find(day => day.isActive));\n\n    if (isSelectedDayVisible) {\n        return item.isActive;\n    }\n\n    // otherwise make the first day tabbable\n    return item.day === 1;\n  }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'ux-date-time-picker-day-view',\n  template: `\n    <table class=\"calendar\">\n        <thead>\n            <tr>\n                <th *ngFor=\"let day of datePicker.weekdays$ | async\" class=\"weekday\" [attr.aria-label]=\"day\">{{ day }}</th>\n            </tr>\n        </thead>\n\n        <tbody role=\"grid\">\n            <tr role=\"row\" *ngFor=\"let row of dayService.grid$ | async; trackBy: trackWeekByFn\">\n\n                <td *ngFor=\"let item of row; trackBy: trackDayByFn\" class=\"date-cell\" role=\"gridcell\">\n\n                    <button class=\"date-button\"\n                            [focusIf]=\"(dayService.focused$ | async)?.day === item.day && (dayService.focused$ | async)?.month === item.month && (dayService.focused$ | async)?.year === item.year\"\n                            [attr.aria-label]=\"item.date | date\"\n                            [attr.aria-selected]=\"item.isActive\"\n                            [attr.aria-hidden]=\"!item.isCurrentMonth\"\n                            [class.current]=\"item.isToday\"\n                            [class.active]=\"item.isActive\"\n                            [class.preview]=\"!item.isCurrentMonth\"\n                            [tabindex]=\"getTabbable(item) ? 0 : -1\"\n                            (click)=\"select(item.date); $event.stopPropagation()\"\n                            (keydown.ArrowLeft)=\"focusDate(item, -1); $event.preventDefault()\"\n                            (keydown.ArrowRight)=\"focusDate(item, 1); $event.preventDefault()\"\n                            (keydown.ArrowUp)=\"focusDate(item, -7); $event.preventDefault()\"\n                            (keydown.ArrowDown)=\"focusDate(item, 7); $event.preventDefault()\">\n\n                        {{ item.date.getDate() }}\n                    </button>\n\n                </td>\n            </tr>\n        </tbody>\n    </table>\n  `,\n  providers: [DayViewService],\n  changeDetection: ChangeDetectionStrategy.OnPush\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: DateTimePickerService, },\n{type: DayViewService, },\n];\n}\n\nfunction DayViewComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nDayViewComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDayViewComponent.ctorParameters;\n/** @type {?} */\nDayViewComponent.prototype._subscription;\n/** @type {?} */\nDayViewComponent.prototype.datePicker;\n/** @type {?} */\nDayViewComponent.prototype.dayService;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, ChangeDetectionStrategy } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { map } from 'rxjs/operators';\nimport { DatePickerMode, DateTimePickerService } from '../date-time-picker.service';\nexport class HeaderComponent {\n\n    canAscend$: Observable<boolean> = this.datepicker.mode$.pipe(map(mode => mode !== DatePickerMode.Year));\n    \n    mode$: Observable<string> = this.datepicker.mode$.pipe(map(mode => {\n        switch (mode) {\n            case DatePickerMode.Day:\n                return 'Day';\n            case DatePickerMode.Month:\n                return 'Month';\n            case DatePickerMode.Year:\n                return 'Year';\n        }\n    }));\n\n    headerAria$: Observable<string> = this.datepicker.mode$.pipe(map(mode => {\n        switch (mode) {\n            case DatePickerMode.Day:\n                return 'Switch to show months in the year';\n            case DatePickerMode.Month:\n                return 'Switch to show years in the decade';\n            case DatePickerMode.Year:\n                return '';\n        }\n    }));\n\n    previousAria$: Observable<string> = this.datepicker.mode$.pipe(map(mode => {\n        switch (mode) {\n            case DatePickerMode.Day:\n                return 'Previous month';\n            case DatePickerMode.Month:\n                return 'Previous year';\n            case DatePickerMode.Year:\n                return 'Previous decade';\n        }\n    }));\n\n    nextAria$: Observable<string> = this.datepicker.mode$.pipe(map(mode => {\n        switch (mode) {\n            case DatePickerMode.Day:\n                return 'Next month';\n            case DatePickerMode.Month:\n                return 'Next year';\n            case DatePickerMode.Year:\n                return 'Next decade';\n        }\n    }));\n/**\n * @param {?} datepicker\n */\nconstructor(public datepicker: DateTimePickerService) { }\n/**\n * @return {?}\n */\nprevious(): void {\n        this.datepicker.goToPrevious();\n    }\n/**\n * @return {?}\n */\nascend(): void {\n        this.datepicker.goToParentMode();\n    }\n/**\n * @return {?}\n */\nnext(): void {\n        this.datepicker.goToNext();\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-date-time-picker-header',\n    template: `\n      <header class=\"header\">\n\n        <button class=\"header-navigation\"\n                (click)=\"previous(); $event.stopPropagation()\"\n                [attr.aria-label]=\"previousAria$ | async\"\n                tabindex=\"0\">\n\n          <i class=\"hpe-icon hpe-previous\"></i>\n        </button>\n\n        <button class=\"header-title\"\n                [attr.aria-label]=\"headerAria$ | async\"\n                [class.active]=\"canAscend$ | async\"\n                (click)=\"ascend(); $event.stopPropagation()\"\n                [tabindex]=\"(canAscend$ | async) ? 0 : -1\">\n             {{ datepicker.header$ | async }}\n        </button>\n\n        <button class=\"header-navigation\"\n                (click)=\"next(); $event.stopPropagation()\"\n                [attr.aria-label]=\"nextAria$ | async\"\n                tabindex=\"0\">\n\n          <i class=\"hpe-icon hpe-next\"></i>\n        </button>\n      </header>\n    `,\n    changeDetection: ChangeDetectionStrategy.OnPush\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: DateTimePickerService, },\n];\n}\n\nfunction HeaderComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nHeaderComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nHeaderComponent.ctorParameters;\n/** @type {?} */\nHeaderComponent.prototype.canAscend$;\n/** @type {?} */\nHeaderComponent.prototype.mode$;\n/** @type {?} */\nHeaderComponent.prototype.headerAria$;\n/** @type {?} */\nHeaderComponent.prototype.previousAria$;\n/** @type {?} */\nHeaderComponent.prototype.nextAria$;\n/** @type {?} */\nHeaderComponent.prototype.datepicker;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { Subscription } from 'rxjs/Subscription';\nimport { DateTimePickerService, ModeDirection } from '../date-time-picker.service';\nimport { gridify, monthsShort, range } from '../date-time-picker.utils';\nexport class MonthViewService implements OnDestroy {\n\n    grid$ = new BehaviorSubject<MonthViewItem[][]>([[]]);\n    focused$ = new BehaviorSubject<FocusedMonthItem>(null);\nprivate _subscription: Subscription;\n/**\n * @param {?} _datepicker\n */\nconstructor(private _datepicker: DateTimePickerService) {\n        this._subscription = _datepicker.year$.subscribe(year => this.createMonthGrid(year));\n    }\n/**\n * @return {?}\n */\nngOnDestroy(): void {\n        this._subscription.unsubscribe();\n    }\n/**\n * @param {?} month\n * @param {?} year\n * @return {?}\n */\nsetFocus(month: number, year: number): void {\n        this.focused$.next({ month: month, year: year });\n\n        // update the viewport to ensure focused month is visible\n        this._datepicker.setViewportYear(year);\n    }\n/**\n * @param {?} year\n * @return {?}\n */\nprivate createMonthGrid(year: number): void {\n\n        // update the header\n        this._datepicker.setHeader(year.toString());\n\n        // get the current year and month\n        const /** @type {?} */ currentMonth = new Date().getMonth();\n        const /** @type {?} */ currentYear = new Date().getFullYear();\n\n        // get the currently selected month\n        const /** @type {?} */ activeMonth = this._datepicker.selected$.value.getMonth();\n        const /** @type {?} */ activeYear = this._datepicker.selected$.value.getFullYear();\n\n        // create a 4x3 grid of month numbers\n        const /** @type {?} */ months: MonthViewItem[] = range(0, 11).map(month => {\n            return {\n                name: monthsShort[month],\n                month: month,\n                year: year,\n                isCurrentMonth: year === currentYear && month === currentMonth,\n                isActiveMonth: year === activeYear && month === activeMonth\n            };\n        });\n\n        // map these to the appropriate format\n        const /** @type {?} */ items: MonthViewItem[][] = gridify(months, 4);\n\n        // update the grid\n        this.grid$.next(items);\n\n        // if there is no focused month select the first one\n        if (this._datepicker.modeDirection === ModeDirection.Descend && this.focused$.value === null) {\n            \n            // check if the selected month is in view\n            const /** @type {?} */ selectedMonth = months.find(month => month.isActiveMonth);\n\n            this.setFocus(selectedMonth ? selectedMonth.month : 0, year);\n        }\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: DateTimePickerService, },\n];\n}\n\nfunction MonthViewService_tsickle_Closure_declarations() {\n/** @type {?} */\nMonthViewService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMonthViewService.ctorParameters;\n/** @type {?} */\nMonthViewService.prototype.grid$;\n/** @type {?} */\nMonthViewService.prototype.focused$;\n/** @type {?} */\nMonthViewService.prototype._subscription;\n/** @type {?} */\nMonthViewService.prototype._datepicker;\n}\n\n\nexport interface MonthViewItem {\n    name: string;\n    month: number;\n    year: number;\n    isCurrentMonth: boolean;\n    isActiveMonth: boolean;\n}\n\nexport interface FocusedMonthItem {\n    month: number;\n    year: number;\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { ChangeDetectionStrategy, Component, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs/Subscription';\nimport { DatePickerHeaderEvent, DateTimePickerService } from '../date-time-picker.service';\nimport { MonthViewItem, MonthViewService } from './month-view.service';\nexport class MonthViewComponent implements OnDestroy {\nprivate _subscription: Subscription;\n/**\n * @param {?} _datePicker\n * @param {?} monthService\n */\nconstructor(private _datePicker: DateTimePickerService,\npublic monthService: MonthViewService) {\n        this._subscription = _datePicker.headerEvent$\n            .subscribe(event => event === DatePickerHeaderEvent.Next ? this.next() : this.previous());\n    }\n/**\n * @return {?}\n */\nngOnDestroy(): void {\n        this._subscription.unsubscribe();\n    }\n/**\n * Go to the previous year\n * @return {?}\n */\nprevious(): void {\n        this._datePicker.setViewportYear(this._datePicker.year$.value - 1);\n    }\n/**\n * Go to the next year\n * @return {?}\n */\nnext(): void {\n        this._datePicker.setViewportYear(this._datePicker.year$.value + 1);\n    }\n/**\n * Select a month in the calendar\n * @param {?} month the index of the month to select\n * @return {?}\n */\nselect(month: number): void {\n        this._datePicker.setViewportMonth(month);\n\n        // show the day picker\n        this._datePicker.goToChildMode();\n    }\n/**\n * @param {?} item\n * @param {?} monthOffset\n * @return {?}\n */\nfocusMonth(item: MonthViewItem, monthOffset: number): void {\n        let /** @type {?} */ targetMonth = item.month + monthOffset;\n        let /** @type {?} */ targetYear = item.year;\n\n        if (targetMonth < 0) {\n            targetMonth += 12;\n            targetYear -= 1;\n        }\n\n        if (targetMonth >= 12) {\n            targetMonth -= 12;\n            targetYear += 1;\n        }\n\n        this.monthService.setFocus(targetMonth, targetYear);\n    }\n/**\n * @param {?} index\n * @return {?}\n */\ntrackRowByFn(index: number): number {\n        return index;\n    }\n/**\n * @param {?} index\n * @param {?} item\n * @return {?}\n */\ntrackMonthByFn(index: number, item: MonthViewItem): string {\n        return `${item.month} ${item.year}`;\n    }\n/**\n * @param {?} item\n * @return {?}\n */\ngetTabbable(item: MonthViewItem): boolean {\n        const /** @type {?} */ focused = this.monthService.focused$.value;\n        const /** @type {?} */ grid = this.monthService.grid$.value;\n\n        // if there is a focused month check if this is it\n        if (focused) {\n\n            // check if the focused month is visible\n            const /** @type {?} */ isFocusedMonthVisible = !!grid.find(row => !!row.find(_item => _item.month === focused.month && _item.year === focused.year));\n            \n            if (isFocusedMonthVisible) {\n                return focused.month === item.month && focused.year === item.year;\n            }\n        }\n\n        // if there is no focusable month then check if there is a selected month\n        const /** @type {?} */ isSelectedMonthVisible = !!grid.find(row => !!row.find(month => month.isActiveMonth));\n\n        if (isSelectedMonthVisible) {\n            return item.isActiveMonth;\n        }\n\n        // otherwise make the first month tabbable\n        return item.month === 0;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-date-time-picker-month-view',\n    template: `\n      <div class=\"calendar\" role=\"grid\">\n        <div class=\"calendar-row\" *ngFor=\"let row of monthService.grid$ | async; trackBy: trackRowByFn\" role=\"row\">\n\n          <button role=\"gridcell\"\n               class=\"calendar-item\"\n               *ngFor=\"let item of row; trackBy: trackMonthByFn\"\n               [focusIf]=\"(monthService.focused$ | async)?.month === item.month && (monthService.focused$ | async)?.year === item.year\"\n               [tabindex]=\"getTabbable(item) ? 0 : -1\"\n               [attr.aria-label]=\"item.name + ' ' + item.year\"\n               [attr.aria-selected]=\"item.isActiveMonth\"\n               [class.active]=\"item.isActiveMonth\"\n               [class.current]=\"item.isCurrentMonth\"\n               (click)=\"select(item.month); $event.stopPropagation()\"\n               (keydown.ArrowLeft)=\"focusMonth(item, -1); $event.preventDefault()\"\n               (keydown.ArrowRight)=\"focusMonth(item, 1); $event.preventDefault()\"\n               (keydown.ArrowUp)=\"focusMonth(item, -4); $event.preventDefault()\"\n               (keydown.ArrowDown)=\"focusMonth(item, 4); $event.preventDefault()\">\n               {{ item.name }}\n          </button>\n        </div>\n      </div>\n    `,\n    providers: [MonthViewService],\n    changeDetection: ChangeDetectionStrategy.OnPush\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: DateTimePickerService, },\n{type: MonthViewService, },\n];\n}\n\nfunction MonthViewComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nMonthViewComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMonthViewComponent.ctorParameters;\n/** @type {?} */\nMonthViewComponent.prototype._subscription;\n/** @type {?} */\nMonthViewComponent.prototype._datePicker;\n/** @type {?} */\nMonthViewComponent.prototype.monthService;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, ChangeDetectionStrategy } from '@angular/core';\nimport { DateTimePickerService } from '../date-time-picker.service';\nexport class TimeViewComponent {\n/**\n * @param {?} datepicker\n */\nconstructor(public datepicker: DateTimePickerService) { }\n/**\n * @param {?} name\n * @return {?}\n */\nselectTimezone(name: string): void {\n        const /** @type {?} */ timezones = this.datepicker.timezones$.value;\n        \n        // find matching timezone\n        const /** @type {?} */ timezone = timezones.find(_timezone => _timezone.name === name);\n\n        if (timezone) {\n            this.datepicker.setTimezone(timezone);\n        }\n    }\n/**\n * @return {?}\n */\nincrementTimezone(): void {\n        const /** @type {?} */ timezone = this.datepicker.timezone$.value;\n        const /** @type {?} */ timezones = this.datepicker.timezones$.value;\n\n        const /** @type {?} */ currentZone = timezones.findIndex(zone => zone.name === timezone.name && zone.offset === timezone.offset);\n\n        // try to get the previous zone\n        this.datepicker.setTimezone(timezones[currentZone + 1] ? timezones[currentZone + 1] : timezones[currentZone]);\n    }\n/**\n * @return {?}\n */\ndecrementTimezone(): void {\n        const /** @type {?} */ timezone = this.datepicker.timezone$.value;\n        const /** @type {?} */ timezones = this.datepicker.timezones$.value;\n\n        const /** @type {?} */ currentZone = timezones.findIndex(zone => zone.name === timezone.name && zone.offset === timezone.offset);\n\n        // try to get the previous zone\n        this.datepicker.setTimezone(timezones[currentZone - 1] ? timezones[currentZone - 1] : timezones[currentZone]);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-date-time-picker-time-view',\n    template: `\n      <ux-time-picker *ngIf=\"datepicker.showTime$ | async\"\n          [value]=\"datepicker.selected$ | async\"\n          (valueChange)=\"datepicker.selected$.next($event)\"\n          [showSeconds]=\"datepicker.showSeconds$ | async\"\n          [showMeridian]=\"datepicker.showMeridian$ | async\"\n          [showSpinners]=\"datepicker.showSpinners$ | async\">\n      </ux-time-picker>\n\n      <ng-container *ngIf=\"datepicker.showTimezone$ | async\">\n\n          <div class=\"time-zone-picker\" *ngIf=\"datepicker.showSpinners$ | async\">\n\n              <ux-spin-button\n                  class=\"time-zone-spinner\"\n                  [value]=\"(datepicker.timezone$ | async).name\"\n                  [readOnly]=\"true\"\n                  (increment)=\"incrementTimezone()\"\n                  (decrement)=\"decrementTimezone()\"\n                  inputAriaLabel=\"Time Zone\"\n                  incrementAriaLabel=\"Switch to the next time zone\"\n                  decrementAriaLabel=\"Switch to the previous time zone\">\n              </ux-spin-button>\n          </div>\n\n          <div class=\"time-zone-picker\" *ngIf=\"!(datepicker.showSpinners$ | async)\">\n\n              <select class=\"form-control time-zone-select\"\n                      tabindex=\"0\"\n                      [ngModel]=\"(datepicker.timezone$ | async).name\"\n                      (ngModelChange)=\"selectTimezone($event)\"\n                      aria-label=\"Timezone\"\n                      [attr.aria-valuenow]=\"(datepicker.timezone$ | async).name\">\n\n                  <option *ngFor=\"let zone of datepicker.timezones$ | async\"\n                          [selected]=\"zone.name === (datepicker.timezone$ | async).name\"\n                          [value]=\"zone.name\">\n                      {{ zone?.name }}\n                  </option>\n\n              </select>\n          </div>\n\n      </ng-container>\n    `,\n    changeDetection: ChangeDetectionStrategy.OnPush\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: DateTimePickerService, },\n];\n}\n\nfunction TimeViewComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nTimeViewComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTimeViewComponent.ctorParameters;\n/** @type {?} */\nTimeViewComponent.prototype.datepicker;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { Subscription } from 'rxjs/Subscription';\nimport { DatePickerHeaderEvent, DateTimePickerService } from '../date-time-picker.service';\nimport { gridify, range } from '../date-time-picker.utils';\nexport class YearViewService implements OnDestroy {\n\n    grid$ = new BehaviorSubject<YearViewItem[][]>([[]]);\n    focused$ = new BehaviorSubject<number>(null);\nprivate _year: number = new Date().getFullYear();\nprivate _subscription = new Subscription();\n/**\n * @param {?} _datepicker\n */\nconstructor(private _datepicker: DateTimePickerService) {\n        const year = _datepicker.year$.subscribe(_year => this.createYearGrid(_year));\n\n        const event = _datepicker.headerEvent$\n            .subscribe(_event => _event === DatePickerHeaderEvent.Next ? this.goToNextDecade() : this.goToPreviousDecade());\n\n        this._subscription.add(year);\n        this._subscription.add(event);\n    }\n/**\n * @return {?}\n */\nngOnDestroy(): void {\n        this._subscription.unsubscribe();\n    }\n/**\n * @param {?} year\n * @return {?}\n */\nsetFocus(year: number): void {\n        this.focused$.next(year);\n        this.createYearGrid(year);\n    }\n/**\n * @return {?}\n */\ngoToPreviousDecade(): void {\n        this.createYearGrid(this._year - 10);\n    }\n/**\n * @return {?}\n */\ngoToNextDecade(): void {\n        this.createYearGrid(this._year + 10);\n    }\n/**\n * @param {?=} year\n * @return {?}\n */\nprivate createYearGrid(year: number = this._year): void {\n\n        this._year = year;\n\n        // get the years to display\n        const /** @type {?} */ decade = this.getDecade(year);\n\n        const /** @type {?} */ currentYear = new Date().getFullYear();\n\n        // produce items in the correct format\n        const /** @type {?} */ items: YearViewItem[] = decade.range.map(_year => {\n            return {\n                year: _year,\n                isCurrentYear: _year === currentYear,\n                isActiveYear: _year === this._datepicker.year$.value\n            };\n        });\n\n        // update the header text\n        this._datepicker.setHeader(decade.start + ' - ' + decade.end);\n\n        // create the grid\n        this.grid$.next(gridify(items, 4));\n    }\n/**\n * Get the years in the current decade to display\n * @param {?} year\n * @return {?}\n */\nprivate getDecade(year: number): YearRange {\n\n        // figure the start and end points\n        const /** @type {?} */ start = (year - (year % 10));\n        const /** @type {?} */ end = start + 9;\n\n        // create an array containing all the numbers between the start and end points\n        return { start: start, end: end, range: range(start, end) };\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: DateTimePickerService, },\n];\n}\n\nfunction YearViewService_tsickle_Closure_declarations() {\n/** @type {?} */\nYearViewService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nYearViewService.ctorParameters;\n/** @type {?} */\nYearViewService.prototype.grid$;\n/** @type {?} */\nYearViewService.prototype.focused$;\n/** @type {?} */\nYearViewService.prototype._year;\n/** @type {?} */\nYearViewService.prototype._subscription;\n/** @type {?} */\nYearViewService.prototype._datepicker;\n}\n\n\n\nexport interface YearRange {\n    start: number;\n    end: number;\n    range: number[];\n}\n\nexport interface YearViewItem {\n    year: number;\n    isCurrentYear: boolean;\n    isActiveYear: boolean;\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, ChangeDetectionStrategy } from '@angular/core';\nimport { DatePickerMode, DateTimePickerService } from '../date-time-picker.service';\nimport { YearViewService, YearViewItem } from './year-view.service';\nexport class YearViewComponent {\n/**\n * @param {?} _datePicker\n * @param {?} yearService\n */\nconstructor(private _datePicker: DateTimePickerService,\npublic yearService: YearViewService) {}\n/**\n * @param {?} year\n * @return {?}\n */\nselect(year: number): void {\n    this._datePicker.setViewportYear(year);\n\n    // show the month picker\n    this._datePicker.goToChildMode();\n  }\n/**\n * @param {?} item\n * @param {?} yearOffset\n * @return {?}\n */\nfocusYear(item: YearViewItem, yearOffset: number): void {\n    this.yearService.setFocus(item.year + yearOffset);\n  }\n/**\n * @param {?} index\n * @return {?}\n */\ntrackRowByFn(index: number): number {\n    return index;\n  }\n/**\n * @param {?} index\n * @param {?} item\n * @return {?}\n */\ntrackYearByFn(index: number, item: YearViewItem): number {\n    return item.year;\n  }\n/**\n * @param {?} item\n * @return {?}\n */\ngetTabbable(item: YearViewItem): boolean {\n    const /** @type {?} */ focused = this.yearService.focused$.value;\n    const /** @type {?} */ grid = this.yearService.grid$.value;\n\n    // if there is a focused year check if this is it\n    if (focused) {\n\n        // check if the focused year is visible\n        const /** @type {?} */ isFocusedYearVisible = !!grid.find(row => !!row.find(_item => _item.year === focused));\n        \n        if (isFocusedYearVisible) {\n            return focused === item.year;\n        }\n    }\n\n    // if there is no focusable year then check if there is a selected year\n    const /** @type {?} */ isSelectedYearVisible = !!grid.find(row => !!row.find(year => year.isActiveYear));\n\n    if (isSelectedYearVisible) {\n        return item.isActiveYear;\n    }\n\n    // otherwise make the first month tabbable\n    return grid[0][0].year === item.year;\n}\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'ux-date-time-picker-year-view',\n  template: `\n    <div class=\"calendar\" role=\"grid\">\n      <div class=\"calendar-row\" role=\"row\" *ngFor=\"let row of yearService.grid$ | async; trackBy: trackRowByFn\">\n\n        <button *ngFor=\"let item of row; trackBy: trackYearByFn\"\n             role=\"gridcell\"\n             class=\"calendar-item\"\n             [focusIf]=\"(yearService.focused$ | async) === item.year\"\n             [attr.aria-label]=\"item.year\"\n             [attr.aria-selected]=\"item.isActiveYear\"\n             [class.current]=\"item.isCurrentYear\"\n             [class.active]=\"item.isActiveYear\"\n             (click)=\"select(item.year); $event.stopPropagation()\"\n             (keydown.ArrowLeft)=\"focusYear(item, -1); $event.preventDefault()\"\n             (keydown.ArrowRight)=\"focusYear(item, 1); $event.preventDefault()\"\n             (keydown.ArrowUp)=\"focusYear(item, -4); $event.preventDefault()\"\n             (keydown.ArrowDown)=\"focusYear(item, 4); $event.preventDefault()\"\n             [tabindex]=\"getTabbable(item) ? 0 : -1\">\n             {{ item.year }}\n        </button>\n      </div>\n    </div>\n  `,\n  providers: [YearViewService],\n  changeDetection: ChangeDetectionStrategy.OnPush\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: DateTimePickerService, },\n{type: YearViewService, },\n];\n}\n\nfunction YearViewComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nYearViewComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nYearViewComponent.ctorParameters;\n/** @type {?} */\nYearViewComponent.prototype._datePicker;\n/** @type {?} */\nYearViewComponent.prototype.yearService;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, Input, ElementRef } from '@angular/core';\nexport class FocusIfDirective {\n/**\n * @param {?} focus\n * @return {?}\n */\nset focusIf(focus: boolean) {\n\n        // if a timeout is pending then cancel it\n        if (this._timeout !== null) {\n            clearTimeout(this._timeout);\n        }\n\n        if (focus) {\n            this._timeout = setTimeout(() => {\n                this._elementRef.nativeElement.focus();\n                this._timeout = null;\n            });\n        }\n    }\nprivate _timeout: number = null;\n/**\n * @param {?} _elementRef\n */\nconstructor(private _elementRef: ElementRef) { }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{ \n    selector: '[focusIf]' \n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'focusIf': [{ type: Input },],\n};\n}\n\nfunction FocusIfDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nFocusIfDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFocusIfDirective.ctorParameters;\n/** @type {?} */\nFocusIfDirective.propDecorators;\n/** @type {?} */\nFocusIfDirective.prototype._timeout;\n/** @type {?} */\nFocusIfDirective.prototype._elementRef;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { FocusIfDirective } from './focus-if.directive';\nexport class FocusIfModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    exports: [FocusIfDirective],\n    declarations: [FocusIfDirective]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction FocusIfModule_tsickle_Closure_declarations() {\n/** @type {?} */\nFocusIfModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFocusIfModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { SpinButtonModule } from '../spin-button/index';\nimport { TimePickerModule } from '../time-picker/index';\nimport { DateTimePickerComponent } from './date-time-picker.component';\nimport { DateTimePickerConfig } from './date-time-picker.config';\nimport { DayViewComponent } from './day-view/day-view.component';\nimport { HeaderComponent } from './header/header.component';\nimport { MonthViewComponent } from './month-view/month-view.component';\nimport { TimeViewComponent } from './time-view/time-view.component';\nimport { YearViewComponent } from './year-view/year-view.component';\nimport { FocusIfModule } from '../../directives/focus-if/index';\nexport class DateTimePickerModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        CommonModule,\n        FormsModule,\n        TimePickerModule,\n        SpinButtonModule,\n        FocusIfModule\n    ],\n    exports: [DateTimePickerComponent],\n    declarations: [DateTimePickerComponent, HeaderComponent, DayViewComponent, MonthViewComponent, YearViewComponent, TimeViewComponent],\n    providers: [\n        DateTimePickerConfig\n    ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction DateTimePickerModule_tsickle_Closure_declarations() {\n/** @type {?} */\nDateTimePickerModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDateTimePickerModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Directive } from '@angular/core';\nexport class EboxComponent { static decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ux-ebox',\n    template: `\n      <div class=\"ux-ebox-header\">\n          <ng-content select=\"ux-ebox-header\"></ng-content>\n      </div>\n\n      <div class=\"ux-ebox-content\">\n          <ng-content select=\"ux-ebox-content\"></ng-content>\n      </div>\n    `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction EboxComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nEboxComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nEboxComponent.ctorParameters;\n}\n\nexport class EboxHeaderDirective { static decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'ux-ebox-header'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction EboxHeaderDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nEboxHeaderDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nEboxHeaderDirective.ctorParameters;\n}\n\nexport class EboxContentDirective { static decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'ux-ebox-content'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction EboxContentDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nEboxContentDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nEboxContentDirective.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\n\nimport { EboxComponent, EboxContentDirective, EboxHeaderDirective } from './ebox.component';\nexport class EboxModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    exports: [EboxComponent, EboxContentDirective, EboxHeaderDirective],\n    declarations: [EboxComponent, EboxContentDirective, EboxHeaderDirective]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction EboxModule_tsickle_Closure_declarations() {\n/** @type {?} */\nEboxModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nEboxModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable } from '@angular/core';\n\n/** Default values provider for tooltip */\n\nexport class TooltipConfig {\n  /** tooltip placement, supported positions: 'top', 'bottom', 'left', 'right' */\n  placement = 'top';\n  /** array of event names which triggers tooltip opening */\n  triggers = 'hover focus';\n  /** a selector specifying the element the tooltip should be appended to. Currently only supports \"body\" */\n  container: string;\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"],"names":["win","document","location","isBs3","window","__theme","guessedVersion","spanEl","createElement","innerText","body","appendChild","classList","add","rect","getBoundingClientRect","removeChild","top","_guessBsVersion","TooltipContainerComponent","config","Object","assign","this","defineProperty","prototype","get","ngAfterViewInit","classMap","in","fade","placement","animation","containerClass","decorators","type","Component","args","selector","changeDetection","ChangeDetectionStrategy","OnPush","host","[class]","[class.show]","role","styles","template","ctorParameters","TooltipConfig","Trigger","open","close","isManual","DEFAULT_ALIASES","hover","focus","parseTriggers","triggers","aliases","trimmedTriggers","trim","length","parsedTriggers","split","map","trigger","triggerPair","alias","manualTriggers","filter","Error","ContentRef","nodes","viewRef","componentRef","ComponentLoader","_viewContainerRef","_renderer","_elementRef","_injector","_componentFactoryResolver","_ngZone","_applicationRef","_posService","onBeforeShow","EventEmitter","onShown","onBeforeHide","onHidden","_providers","_isHiding","_listenOpts","_globalListener","Function","_componentRef","attach","compType","_componentFactory","resolveComponentFactory","to","container","position","opts","attachment","target","provide","provider","push","show","_subscribePositioning","_innerComponent","emit","_contentRef","_getContentRef","content","context","initialState","injector","ReflectiveInjector","resolveAndCreate","create","attachView","hostView","instance","ElementRef","nativeElement","querySelector","parentElement","changeDetectorRef","markForCheck","detectChanges","_registerOutsideClick","hide","componentEl","parentNode","destroy","remove","indexOf","_removeGlobalListener","toggle","isShown","dispose","_unsubscribePositioning","_unregisterListenersFn","listen","listenOpts","_this","outsideClick","registerHide","renderer","options","listeners","_registerHide","forEach","fn","useToggle","showFn","unsubscribeFn","listenToTriggersV2","attachInline","vRef","_inlineViewRef","createEmbeddedView","target_1","setTimeout","targets","event","contains","some","getInnerComponent","_zoneSubscription","onStable","subscribe","element","appendToBody","unsubscribe","TemplateRef","_viewRef","rootNodes","contentCmptFactory","modalContentInjector","slice","createText","positionService","Positioning","round","elPosition","parentOffset","width","height","bottom","left","right","getStyle","bcRect","offsetParentEl","offsetParent","offset","documentElement","clientTop","clientLeft","Math","elBcr","viewportOffset","pageYOffset","pageXOffset","elOffset","offsetHeight","offsetWidth","positionElements","hostElement","targetElement","hostElPosition","targetElStyles","getAllStyles","shiftWidth","center","shiftHeight","targetElBCR","placementPrimary","placementSecondary","targetElPosition","newPlacementPrimary","autoPosition","parseFloat","marginBottom","marginRight","preferredPosition","innerHeight","innerWidth","getComputedStyle","prop","isStaticPositioned","PositioningService","pos","_getHtmlElement","style","Injectable","ComponentLoaderFactory","createLoader","ComponentFactoryResolver","NgZone","Injector","ApplicationRef","_messagesHash","_hideMsg","console","warnOnce","msg","isDevMode","warn","TooltipDirective","cis","tooltipChange","_animation","_fadeDuration","tooltipStateChanged","_tooltip","useValue","set","value","tooltip","isOpen","isDisabled","delay","toString","ngOnInit","_delayTimeoutId","showTooltip","undefined","cancelDelayedTooltipShowing","_tooltipCancelShowFn","timer_1","Observable","timer","clearTimeout","ngOnDestroy","Directive","exportAs","ViewContainerRef","Renderer2","propDecorators","Input","Output","htmlContent","_placement","_isOpen","_enable","_appendToBody","_popupClass","_tooltipContext","_tooltipPopupDelay","_tooltipTrigger","__decorate","propertyKey","_key","TooltipModule","forRoot","ngModule","providers","NgModule","imports","CommonModule","declarations","exports","entryComponents","latinMap","Á","Ă","Ắ","Ặ","Ằ","Ẳ","Ẵ","Ǎ","Â","Ấ","Ậ","Ầ","Ẩ","Ẫ","Ä","Ǟ","Ȧ","Ǡ","Ạ","Ȁ","À","Ả","Ȃ","Ā","Ą","Å","Ǻ","Ḁ","Ⱥ","Ã","Ꜳ","Æ","Ǽ","Ǣ","Ꜵ","Ꜷ","Ꜹ","Ꜻ","Ꜽ","Ḃ","Ḅ","Ɓ","Ḇ","Ƀ","Ƃ","Ć","Č","Ç","Ḉ","Ĉ","Ċ","Ƈ","Ȼ","Ď","Ḑ","Ḓ","Ḋ","Ḍ","Ɗ","Ḏ","ǲ","ǅ","Đ","Ƌ","Ǳ","Ǆ","É","Ĕ","Ě","Ȩ","Ḝ","Ê","Ế","Ệ","Ề","Ể","Ễ","Ḙ","Ë","Ė","Ẹ","Ȅ","È","Ẻ","Ȇ","Ē","Ḗ","Ḕ","Ę","Ɇ","Ẽ","Ḛ","Ꝫ","Ḟ","Ƒ","Ǵ","Ğ","Ǧ","Ģ","Ĝ","Ġ","Ɠ","Ḡ","Ǥ","Ḫ","Ȟ","Ḩ","Ĥ","Ⱨ","Ḧ","Ḣ","Ḥ","Ħ","Í","Ĭ","Ǐ","Î","Ï","Ḯ","İ","Ị","Ȉ","Ì","Ỉ","Ȋ","Ī","Į","Ɨ","Ĩ","Ḭ","Ꝺ","Ꝼ","Ᵹ","Ꞃ","Ꞅ","Ꞇ","Ꝭ","Ĵ","Ɉ","Ḱ","Ǩ","Ķ","Ⱪ","Ꝃ","Ḳ","Ƙ","Ḵ","Ꝁ","Ꝅ","Ĺ","Ƚ","Ľ","Ļ","Ḽ","Ḷ","Ḹ","Ⱡ","Ꝉ","Ḻ","Ŀ","Ɫ","ǈ","Ł","Ǉ","Ḿ","Ṁ","Ṃ","Ɱ","Ń","Ň","Ņ","Ṋ","Ṅ","Ṇ","Ǹ","Ɲ","Ṉ","Ƞ","ǋ","Ñ","Ǌ","Ó","Ŏ","Ǒ","Ô","Ố","Ộ","Ồ","Ổ","Ỗ","Ö","Ȫ","Ȯ","Ȱ","Ọ","Ő","Ȍ","Ò","Ỏ","Ơ","Ớ","Ợ","Ờ","Ở","Ỡ","Ȏ","Ꝋ","Ꝍ","Ō","Ṓ","Ṑ","Ɵ","Ǫ","Ǭ","Ø","Ǿ","Õ","Ṍ","Ṏ","Ȭ","Ƣ","Ꝏ","Ɛ","Ɔ","Ȣ","Ṕ","Ṗ","Ꝓ","Ƥ","Ꝕ","Ᵽ","Ꝑ","Ꝙ","Ꝗ","Ŕ","Ř","Ŗ","Ṙ","Ṛ","Ṝ","Ȑ","Ȓ","Ṟ","Ɍ","Ɽ","Ꜿ","Ǝ","Ś","Ṥ","Š","Ṧ","Ş","Ŝ","Ș","Ṡ","Ṣ","Ṩ","Ť","Ţ","Ṱ","Ț","Ⱦ","Ṫ","Ṭ","Ƭ","Ṯ","Ʈ","Ŧ","Ɐ","Ꞁ","Ɯ","Ʌ","Ꜩ","Ú","Ŭ","Ǔ","Û","Ṷ","Ü","Ǘ","Ǚ","Ǜ","Ǖ","Ṳ","Ụ","Ű","Ȕ","Ù","Ủ","Ư","Ứ","Ự","Ừ","Ử","Ữ","Ȗ","Ū","Ṻ","Ų","Ů","Ũ","Ṹ","Ṵ","Ꝟ","Ṿ","Ʋ","Ṽ","Ꝡ","Ẃ","Ŵ","Ẅ","Ẇ","Ẉ","Ẁ","Ⱳ","Ẍ","Ẋ","Ý","Ŷ","Ÿ","Ẏ","Ỵ","Ỳ","Ƴ","Ỷ","Ỿ","Ȳ","Ɏ","Ỹ","Ź","Ž","Ẑ","Ⱬ","Ż","Ẓ","Ȥ","Ẕ","Ƶ","Ĳ","Œ","ᴀ","ᴁ","ʙ","ᴃ","ᴄ","ᴅ","ᴇ","ꜰ","ɢ","ʛ","ʜ","ɪ","ʁ","ᴊ","ᴋ","ʟ","ᴌ","ᴍ","ɴ","ᴏ","ɶ","ᴐ","ᴕ","ᴘ","ʀ","ᴎ","ᴙ","ꜱ","ᴛ","ⱻ","ᴚ","ᴜ","ᴠ","ᴡ","ʏ","ᴢ","á","ă","ắ","ặ","ằ","ẳ","ẵ","ǎ","â","ấ","ậ","ầ","ẩ","ẫ","ä","ǟ","ȧ","ǡ","ạ","ȁ","à","ả","ȃ","ā","ą","ᶏ","ẚ","å","ǻ","ḁ","ⱥ","ã","ꜳ","æ","ǽ","ǣ","ꜵ","ꜷ","ꜹ","ꜻ","ꜽ","ḃ","ḅ","ɓ","ḇ","ᵬ","ᶀ","ƀ","ƃ","ɵ","ć","č","ç","ḉ","ĉ","ɕ","ċ","ƈ","ȼ","ď","ḑ","ḓ","ȡ","ḋ","ḍ","ɗ","ᶑ","ḏ","ᵭ","ᶁ","đ","ɖ","ƌ","ı","ȷ","ɟ","ʄ","ǳ","ǆ","é","ĕ","ě","ȩ","ḝ","ê","ế","ệ","ề","ể","ễ","ḙ","ë","ė","ẹ","ȅ","è","ẻ","ȇ","ē","ḗ","ḕ","ⱸ","ę","ᶒ","ɇ","ẽ","ḛ","ꝫ","ḟ","ƒ","ᵮ","ᶂ","ǵ","ğ","ǧ","ģ","ĝ","ġ","ɠ","ḡ","ᶃ","ǥ","ḫ","ȟ","ḩ","ĥ","ⱨ","ḧ","ḣ","ḥ","ɦ","ẖ","ħ","ƕ","í","ĭ","ǐ","î","ï","ḯ","ị","ȉ","ì","ỉ","ȋ","ī","į","ᶖ","ɨ","ĩ","ḭ","ꝺ","ꝼ","ᵹ","ꞃ","ꞅ","ꞇ","ꝭ","ǰ","ĵ","ʝ","ɉ","ḱ","ǩ","ķ","ⱪ","ꝃ","ḳ","ƙ","ḵ","ᶄ","ꝁ","ꝅ","ĺ","ƚ","ɬ","ľ","ļ","ḽ","ȴ","ḷ","ḹ","ⱡ","ꝉ","ḻ","ŀ","ɫ","ᶅ","ɭ","ł","ǉ","ſ","ẜ","ẛ","ẝ","ḿ","ṁ","ṃ","ɱ","ᵯ","ᶆ","ń","ň","ņ","ṋ","ȵ","ṅ","ṇ","ǹ","ɲ","ṉ","ƞ","ᵰ","ᶇ","ɳ","ñ","ǌ","ó","ŏ","ǒ","ô","ố","ộ","ồ","ổ","ỗ","ö","ȫ","ȯ","ȱ","ọ","ő","ȍ","ò","ỏ","ơ","ớ","ợ","ờ","ở","ỡ","ȏ","ꝋ","ꝍ","ⱺ","ō","ṓ","ṑ","ǫ","ǭ","ø","ǿ","õ","ṍ","ṏ","ȭ","ƣ","ꝏ","ɛ","ᶓ","ɔ","ᶗ","ȣ","ṕ","ṗ","ꝓ","ƥ","ᵱ","ᶈ","ꝕ","ᵽ","ꝑ","ꝙ","ʠ","ɋ","ꝗ","ŕ","ř","ŗ","ṙ","ṛ","ṝ","ȑ","ɾ","ᵳ","ȓ","ṟ","ɼ","ᵲ","ᶉ","ɍ","ɽ","ↄ","ꜿ","ɘ","ɿ","ś","ṥ","š","ṧ","ş","ŝ","ș","ṡ","ṣ","ṩ","ʂ","ᵴ","ᶊ","ȿ","ɡ","ᴑ","ᴓ","ᴝ","ť","ţ","ṱ","ț","ȶ","ẗ","ⱦ","ṫ","ṭ","ƭ","ṯ","ᵵ","ƫ","ʈ","ŧ","ᵺ","ɐ","ᴂ","ǝ","ᵷ","ɥ","ʮ","ʯ","ᴉ","ʞ","ꞁ","ɯ","ɰ","ᴔ","ɹ","ɻ","ɺ","ⱹ","ʇ","ʌ","ʍ","ʎ","ꜩ","ú","ŭ","ǔ","û","ṷ","ü","ǘ","ǚ","ǜ","ǖ","ṳ","ụ","ű","ȕ","ù","ủ","ư","ứ","ự","ừ","ử","ữ","ȗ","ū","ṻ","ų","ᶙ","ů","ũ","ṹ","ṵ","ᵫ","ꝸ","ⱴ","ꝟ","ṿ","ʋ","ᶌ","ⱱ","ṽ","ꝡ","ẃ","ŵ","ẅ","ẇ","ẉ","ẁ","ⱳ","ẘ","ẍ","ẋ","ᶍ","ý","ŷ","ÿ","ẏ","ỵ","ỳ","ƴ","ỷ","ỿ","ȳ","ẙ","ɏ","ỹ","ź","ž","ẑ","ʑ","ⱬ","ż","ẓ","ȥ","ẕ","ᵶ","ᶎ","ʐ","ƶ","ɀ","ﬀ","ﬃ","ﬄ","ﬁ","ﬂ","ĳ","œ","ﬆ","ₐ","ₑ","ᵢ","ⱼ","ₒ","ᵣ","ᵤ","ᵥ","ₓ","TypeaheadMatch","item","header","isHeader","latinize","str","replace","a","tokenize","wordRegexDelimiters","phraseRegexDelimiters","token","regexStr","preTokenized","RegExp","result","preTokenizedLength","replacePhraseDelimiters","i","getValueFromObject","object","option","endsWith","_i","propertiesArray_1","property","Utils","reflow","getStyles","elem","view","ownerDocument","defaultView","opener","TypeaheadContainerComponent","isFocused","_matches","isScrolledIntoView","containerViewTop","ulElement","scrollTop","containerViewBottom","elemTop","offsetTop","_active","needScrollbar","typeaheadScrollable","typeaheadOptionsInScrollableView","matches","setScrollableMode","nextActiveMatch","parent","optionsListTemplate","typeaheadItemTemplate","selectActiveMatch","selectMatch","prevActiveMatch","index","scrollPrevious","scrollNext","selectActive","hightlight","match","query","startIdx","tokenLen","itemStr","itemStrHelper","typeaheadLatinize","toLowerCase","queryLen","substring","repeat","focusLost","isActive","e","stopPropagation","preventDefault","changeModel","typeaheadOnSelect","liElements","first","ulStyles","liStyles","ulPaddingBottom","ulPaddingTop","optionHeight","guiHeight","setStyle","liElement","toArray","scrollToBottom","scrollToTop","scrollHeight","class","[class.dropdown-menu]","[style.overflow-y]","[style.height]","[style.visibility]","[class.dropup]","ViewChild","ViewChildren","HostListener","TypeaheadDirective","ngControl","viewContainerRef","typeaheadMinLength","typeaheadAsync","typeaheadSingleWords","typeaheadWordDelimiters","typeaheadPhraseDelimiters","typeaheadLoading","typeaheadNoResults","typeaheadOnBlur","dropup","isTypeaheadOptionsListActive","keyUpEventEmitter","_subscriptions","_typeahead","typeaheadOptionsLimit","typeaheadWaitMs","typeahead","asyncActions","syncActions","onInput","textContent","onChange","_container","keyCode","onFocus","onBlur","active","onKeydown","valueStr","viewToModelUpdate","setValue","typeaheadRef","_outsideClickListener","onOutsideClick","normalizedQuery","control","_a","debounceTime","switchMap","finalizeAsyncCall","mergeMap","normalizeQuery","from","testMatch","normalizeOption","optionValue","typeaheadOptionField","test","spaceLength","prepareMatches","hasMatches","limited","typeaheadGroupField","matches_1","v","group","concat","NgControl","ChangeDetectorRef","TypeaheadModule","FacetSelect","facet","FacetDeselect","FacetDeselectAll","FacetContainerComponent","clearTooltip","emptyText","facets","facetsChange","events","selectFacet","triggerEvent","deselectFacet","idx","findIndex","selectedFacet","splice","deselectAllFacets","next","FacetBaseComponent","facetContainer","selected","selectedChange","Subject","find","_","deselectAll","disabled","toggleFacetSelection","isFacetSelected","Host","FacetHeaderComponent","canExpand","expanded","expandedChange","toggleExpand","tabindex","(click)","(keyup.enter)","FacetCheckListComponent","_super","apply","arguments","scrollbar","__extends","FacetTypeaheadListComponent","typeaheadConfig","suggestions","simplified","_nativeElement","_defaultTypeaheadConfig","placeholder","maxResults","minCharacters","typeaheadOptions","title","toUpperCase","includes","searchQuery","of","hasOwnProperty","selectOption","typeaheadOption","scrollToFocused","dropdown","activeElement","elementBounds","dropdownBounds","FacetTypeaheadHighlight","transform","regex","Pipe","name","DECLARATIONS","FacetsModule","FormsModule","CheckboxModule","Facet","data","count","id","BsDropdownConfig","autoClose","BsDropdownState","direction","isOpenChange","isDisabledChange","toggleClick","dropdownMenu","Promise","resolve","resolveDropdownMenu","BsDropdownContainerComponent","_state","cd","_element","_subscription","addClass","BsDropdownDirective","_cis","_config","_isInlineOpen","_isInited","_dropdown","_isDisabled","_showInline","_inlinedMenu","then","viewContainer","templateRef","addBs4Polyfills","catch","_dropup","removeShowClass","removeDropupStyles","addShowClass","checkRightAlignment","addDropupStyles","removeClass","isRightAligned","removeStyle","[class.open]","BsDropdownMenuDirective","_viewContainer","_templateRef","BsDropdownToggleDirective","onClick","onDocumentClick","button","onEsc","[attr.aria-haspopup]","HostBinding","BsDropdownModule","FilterContainerComponent","filters","filtersChange","addFilter","FilterAddEvent","removeFilter","FilterRemoveEvent","removeAll","FilterRemoveAllEvent","FilterBaseComponent","filtersContainer","bind","initial","FilterDynamicComponent","defaultOptions","showTypeahead","typeaheadItems","getItems","maxIndividualItems","clickOff","hideDropdown","nodeName","call","selectFilter","(document:click)","FilterDropdownComponent","FilterModule","FlippableCardComponent","flipped","flippedChange","setFlipped","state","toggleFlipped","clickTrigger","hoverEnter","hoverExit","[class.horizontal]","[class.vertical]","FlippableCardFrontDirective","FlippableCardBackDirective","FlippableCardModule","FloatingActionButtonsService","open$","BehaviorSubject","getValue","FloatingActionButtonsComponent","fab","pipe","tooltips","preserveWhitespaces","animations","transition","opacity","stagger","animate","ContentChildren","FloatingActionButtonComponent","primary","Attribute","icon","FloatingActionButtonsModule","PopoverConfig","PopoverContainerComponent","PopoverDirective","_popover","addEventListener","err","popover","popoverContext","popoverTitle","PopoverModule","HierarchyBarService","nodes$","_nodes","setRootNode","root","_root","getNodeList","getSelectedChildren","selectNode","node","select","getChildren","Array","isArray","children","loading","children$","observer","complete","child","descendants","reduce","current","_child","HierarchyBarComponent","hierarchyBar","overflow$","overflowNodes$","Subscription","changed","scrollIntoView","nodelist","scrollWidth","overflowAmount_1","offsetLeft","scrollLeft","viewProviders","loadingIndicator","HierarchyBarModule","ResizeModule","FocusIfModule","SidePanelService","SidePanelComponent","service","inline","attachTo","modal","closeOnExternalClick","openChange","cssWidth","openPanel","closePanel","clickHandler","componentWidth","ItemDisplayPanelContentDirective","ItemDisplayPanelFooterDirective","ItemDisplayPanelComponent","elementRef","boxShadow","closeVisible","shadow","visibleChange","visible","_itemDisplayPanelSubscription","preventClose","footer","ContentChild","ItemDisplayPanelModule","WizardStepComponent","valid","visitedChange","_visited","visited","WizardComponent","_step","steps","QueryList","orientation","nextText","previousText","cancelText","finishText","nextTooltip","previousTooltip","cancelTooltip","finishTooltip","nextDisabled","previousDisabled","cancelDisabled","finishDisabled","nextVisible","previousVisible","cancelVisible","finishVisible","cancelAlwaysVisible","finishAlwaysVisible","onNext","onPrevious","onCancel","onFinishing","onFinish","stepChanging","stepChange","invalidIndicator","update","step","StepChangingEvent","getCurrentStep","previous","finish","cancel","gotoStep","stepIndex","stp","isLastStep","reset","getStepAtIndex","WizardModule","MarqueeWizardService","valid$","MarqueeWizardStepComponent","_marqueeWizardService","completed","completedChange","_valid","setCompleted","MarqueeWizardComponent","marqueeWizardService","validChange","description","MarqueeWizardModule","NavigationComponent","NavigationItemComponent","_parent","_router","_activatedRoute","level","indentWithoutArrow","_navigationEnd","NavigationEnd","hasActiveLink","link","_children","parentListElement","levelClass","getLevelClass","ngAfterContentInit","setIndentWithoutArrow","_childrenChanges","changes","tree","createUrlTree","relativeTo","queryParams","snapshot","fragment","every","Optional","SkipSelf","Router","ActivatedRoute","NavigationModule","RouterModule","ColorService","_colorSet","colorSets","keppel","colorClassSet","setColors","key","colorValueSet","_colors","getColorValueByHex","_html","className","innerHTML","getColorValue","color","hex","r","parseInt","g","b","ThemeColor","rgba","backgroundColor","getColor","themeColor","resolveColorName","getRed","getGreen","getBlue","getAlpha","getColorSet","setColorSet","colorSet","colorName","toRgba","Document","Inject","DOCUMENT","_r","_g","_b","parse","rgbaMatch","shortHexMatch","longHexMatch","toHex","red","green","blue","toRgb","setRed","setGreen","setBlue","setAlpha","alpha","accent","secondary","alternate1","alternate2","alternate3","vibrant1","vibrant2","grey1","grey2","grey3","grey4","grey5","grey6","grey7","grey8","chart1","chart2","chart3","chart4","chart5","chart6","ok","warning","critical","partition1","partition9","partition10","partition11","partition12","partition13","partition14","social-chart-node","social-chart-edge","microFocus","cerulean","aqua","aquamarine","fuchsia","indigo","dark-blue","white","slightly-gray","bright-gray","gray","silver","dim-gray","dark-gray","black","crimson-negative","apricot","yellow","green-positive","ultramarine","skyblue","pale-aqua","pale-green","lime","orange","magenta","pale-purple","dark-ultramarine","steelblue","arctic-blue","emerald","olive","goldenrod","purple","pale-eggplant","pale-amber","pale-lemon","pale-emerald","plum","copper","amber","leaf-green","forest-green","ColorServiceModule","NotificationService","_colorService","duration","spacing","iconColor","notifications$","notificationRef","date","Date","notifications","unshift","dismiss","getHistory","dismissAll","NotificationListComponent","_notificationService","notificationRefs","NotificationModule","NUMBER_PICKER_VALUE_ACCESSOR","NG_VALUE_ACCESSOR","useExisting","forwardRef","NumberPickerComponent","multi","_min","Infinity","_max","_disabled","_value","_propagateChange","valueChange","increment","max","min","decrement","isValid","onScroll","deltaY","wheelDelta","writeValue","registerOnChange","registerOnTouched","setDisabledState","[class.has-error]","NumberPickerModule","PageHeaderCustomMenuDirective","PageHeaderService","items$","selected$","selectedRoot$","secondary$","activeIconMenu$","getRoot","isParentOf","selectParents","deselect","_item","setItems","items","setParent","setSecondaryNavigation","enabled","PageHeaderComponent","_pageHeaderService","alignment","condensed","backVisible","secondaryNavigationAlignment","secondaryNavigationAutoselect","backClick","_crumbs","crumbs","_familyBackground","_familyForeground","distinctUntilChanged","secondaryNavigation","goBack","logo","iconMenus","familyBackground","familyForeground","customMenus","read","PageHeaderIconMenuComponent","_service","menu","keydownHandler","menuNavigationToggle","PageHeaderNavigationDropdownItemComponent","dropdownOpen","_hover$","hoverStart","hoverLeave","PageHeaderNavigationItemComponent","dropdowns","PageHeaderNavigationComponent","resizeService","indicatorVisible","indicatorX","indicatorWidth","addResizeListener","updateSelectedIndicator","menuItems","getPropertyValue","ResizeService","MenuNavigationService","active$","MenuNavigationItemDirective","activated","setActive","MenuNavigationDirective","toggleButtonPosition","navigatedOut","_document","_itemsOrdered","toggleButton","keyEnter","focusFirst","moveFirst","handled","movePrevious","moveNext","moveToToggleButton","moveLast","activeIndex","nextIndex","menuOpen","MenuNavigationToggleDirective","menuPosition","menuOpenChange","_menuOpen","isKeyMatch","EXPORTS","MenuNavigationModule","PageHeaderModule","BreadcrumbsModule","ProgressBarComponent","indeterminate","trackColor","barColor","ProgressBarModule","RADIOBUTTON_VALUE_ACCESSOR","RadioButtonComponent","uniqueRadioId","_radioButtonId","clickable","ariaLabel","ariaLabelledby","ariaDescribedby","focused","onTouchedCallback","onChangeCallback","required","RadioButtonModule","SearchBuilderService","queryChange","validationChange","_componentId","_components","_validation","registerComponent","component","cmp","registerComponents","components","getComponent","setQuery","getQuery","queryHasChanged","setValid","keys","generateComponentId","SearchBuilderGroupService","_searchBuilderService","init","_id","field","SearchBuilderGroupComponent","searchBuilderGroupService","operator","addText","showPlaceholder","removeField","SearchBuilderOutletDirective","componentDefinition","uxSearchBuilderOutlet","componentFactory","createComponent","uxSearchBuilderOutletContext","BaseSearchComponent","_searchBuilderGroupService","validate","validation","SearchTextComponent","label","SearchDateComponent","SearchDateRangeComponent","fromValue","toValue","fromLabel","toLabel","fromPlaceholder","toPlaceholder","setHours","SearchSelectComponent","multiple","dropDirection","allowNull","maxHeight","pageSize","SearchBuilderComponent","_querySubscription","_validSubscription","TypeaheadOptionEvent","TypeaheadKeyService","handleKey","moveHighlight","TypeaheadComponent","typeaheadElement","cdRef","_open","openOnFilterChange","selectFirst","optionSelected","_highlighted","visibleOptions","optionApi","getKey","getDisplay","getDisplayHtml","loadOptionsCallback","pageNum","originalValue","initOptions","loadingTemplate","_defaultLoadingTemplate","optionTemplate","_defaultOptionTemplate","noOptionsTemplate","_defaultNoOptionsTemplate","ngOnChanges","currentValue","updateOptions","optionMousedownHandler","optionClickHandler","display","displayText","displayHtml","matchIndex","highlight","substr","isInfiniteScroll","disabledOptions","optionKey_1","selectedOption","d","newIndex","indexOfVisibleOption","highlighted","inBounds","isHighlighted","normalisedInput_1","optionKey_2","el","[class.drop-up]","[style.maxHeight]","InfiniteScrollLoadButtonDirective","_template","_visible","_load","load","asObservable","clickTarget","getNextElementSibling","clear","nextSibling","nodeType","InfiniteScrollLoadingDirective","InfiniteScrollDirective","_collection","loadOnInit","loadOnScroll","collectionChange","loadingEvent","loadedEvent","loadErrorEvent","_nextPageNum","_updateRequests","_isLoading","_isExhausted","_loadButtonEnabled","_loadButtonSubscriptions","_canLoadManually","combineLatest","isLoading","isExhausted","loadButtonEnabled","_scrollElement","requests","partition","check","auditTime","doRequest","attachEventHandlers","canLoad","_loadButtonQuery","loadButton","_loadingIndicatorQuery","attachLoadButtonEvents","loadNextPage","previousValue","detachEventHandlers","pageNumber","_pages","collection","request","reload","page","reloadPage","HTMLHtmlElement","_scrollEventSub","fromEvent","_domObserver","MutationObserver","observe","childList","subtree","disconnect","s","needsData","beginLoading","loadResult","subscription_1","setPageItems","endLoading","reason","endLoadingWithError","clientHeight","InfiniteScrollLoadingEvent","defaultPrevented","InfiniteScrollLoadedEvent","error","InfiniteScrollLoadErrorEvent","scrollElement","_defaultPrevented","exhausted","InfiniteScrollModule","ScrollIntoViewService","scrollParent","offsetBottom","ScrollIntoViewIfDirective","scrollIntoViewService","condition","ScrollIntoViewIfModule","TypeaheadModule$1","SELECT_VALUE_ACCESSOR","SelectComponent","_typeaheadKeyService","inputChange","dropdownOpenChange","propagateChange","_input$","_dropdownOpen","input","filter$","onFilter","firstChange","obj","inputClickHandler","selectInputText","inputBlurHandler","inputKeyHandler","singleTypeahead","singleOptionSelected","singleInput","multipleTypeahead","TagInputEvent","tag","TAGINPUT_VALUE_ACCESSOR","TagInputComponent","TAGINPUT_VALIDATOR","NG_VALIDATORS","_tags","tagsChange","_input","addOnPaste","enforceTagLimits","freeInput","maxTags","Number","MAX_VALUE","minTags","showTypeaheadOnClick","tagDelimiters","tagClass","validationErrors","tagAdding","tagAdded","tagInvalidated","tagRemoving","tagRemoved","tagClick","selectedIndex","tagApi","getTagDisplay","removeTagAt","canRemoveTagAt","inputValid","onChangeHandler","onTouchedHandler","tagTemplate","_defaultTagTemplate","connectTypeahead","typeaheadQuery","tags","tagRangeError","given","keyHandler","inputCursorPos","tagInput","selectionStart","hasSelection","selectionEnd","tagSelected","isValidTagIndex","inputLength","canNavigateLeft","canNavigateRight","commitTypeahead","commitInput","backspace","moveSelection","getKeyChar","focusOutHandler","tagClickHandler","tagClickEvent","selectTagAt","inputFocusHandler","selectInput","inputPasteHandler","clipboardData","getData","commit","typeaheadOptionSelectedHandler","addTag","newTags","splitTagInput","allValid","_d","newTags_1","newTag","validateTag","_e","newTags_2","createTag","isValidSelectIndex","isSelected","tagIndex","tagRemovingEvent","isInputVisible","hasFocus","tagValue","inputPattern","tagPattern","pattern","createTagHandler","displayValue","tagAddingEvent","tagValues","escapedDelimiters","delimiterRegex","[class.disabled]","[class.focus]","[class.invalid]","TagInputModule","SelectModule","SearchBuilderModule","DateTimePickerModule","SidePanelCloseDirective","SidePanelModule","SliderComponent","colorService","_changeDetectorRef","sliderType","SliderType","sliderStyle","SliderStyle","sliderSize","SliderSize","sliderSnap","SliderSnap","sliderThumb","SliderThumb","sliderTickType","SliderTickType","sliderThumbEvent","SliderThumbEvent","sliderCalloutTrigger","SliderCalloutTrigger","tracks","lower","size","middle","upper","thumbs","drag","order","ticks","Value","handles","Button","callout","None","background","formatter","keyboard","major","minor","aria","thumb","lowerThumb","upperThumb","track","Wide","snap","labels","colors","range","higher","updateValues","setThumbState","Lower","Upper","clone","ngDoCheck","detectValueChange","updateTooltipPosition","snapToNearestTick","snapTarget","forwards","getThumbState","closest","getTickDistances","tick","setThumbValue","validateValue","Major","snapToEnd","getThumbValue","getFormattedValue","updateTooltips","thumbEvent","DragStart","DragEnd","MouseOver","MouseLeave","getAriaValueText","_tick","Persistent","Drag","Hover","Dynamic","getTooltip","updateTooltipText","getTooltipElement","lowerTooltip","upperTooltip","thumbWidth","tooltipElement","Narrow","tooltipWidth","tooltipPosition","ceil","Range","preventTooltipOverlap","trackWidth","diff","clamp","updateThumbPosition","eventPosition","MouseEvent","clientX","touches","mouseX","trackBounds","fraction","snapToTick","updateOrder","Minor","lowerLimit","upperLimit","sort","tickOne","tickTwo","tickDistances","deepMerge","updateTrackColors","updateTicks","lowerValue","low","upperValue","high","toFixed","lowerPosition","upperPosition","majorOptions","minorOptions","majorTicks","getTicks","showTicks","minorTicks","unionTicks","join","getSteps","output","showLabels","array","tk","t1","t2","destination","source","value1","value2","isSliderValue","obj1","obj2","Line","All","SliderModule","DragModule","SparkComponent","values","barHeight","_theme","_barColor","_trackColor","total","val","inlineLabel","topLeftLabel","topRightLabel","bottomLeftLabel","bottomRightLabel","theme","SparkModule","TimelineComponent","TimelineEventComponent","badgeColor","badgeTitle","TimelineModule","TOGGLESWITCH_VALUE_ACCESSOR","ToggleSwitchComponent","uniqueToggleSwitchId","_toggleSwitchId","ToggleSwitchModule","KEYS","ToolbarSearchFieldDirective","_ngModel","submit","blur","text","NgModel","ToolbarSearchButtonDirective","clicked","ToolbarSearchComponent","inverse","search","_expanded","_position","_backgroundColor","_field","params","initialWidth","_button","createPlaceholder","animationStart","toState","enablePlaceholder","animationDone","_placeholder","visibility","insertBefore","_expandedAnimation","ToolbarSearchModule","FrameExtractionService","createVideoPlayer","videoPlayer","preload","src","createCanvas","canvas","goToFrame","time","currentTime","getThumbnail","subscription","getContext","drawImage","image","toDataURL","getFrameThumbnail","frameSubscription","getFrameThumbnails","start","end","skip","frames","frame","FrameExtractionModule","MediaPlayerService","_frameExtractionService","loaded","playing","initEvent","abortEvent","canPlayEvent","canPlayThroughEvent","durationChangeEvent","endedEvent","errorEvent","loadedDataEvent","loadedMetadataEvent","loadStartEvent","pauseEvent","playEvent","playingEvent","rateChangeEvent","seekedEvent","seekingEvent","stalledEvent","suspendEvent","timeUpdateEvent","volumeChangeEvent","waitingEvent","mediaClickEvent","fullscreenEvent","quietModeEvent","progressEvent","interval","setInterval","buffered","_mediaPlayer","clearInterval","_fullscreen","_quietMode","audioTracks","autoplay","TimeRanges","crossOrigin","currentSrc","defaultMuted","defaultPlaybackRate","ended","loop","muted","networkState","paused","playbackRate","played","readyState","seekable","seeking","textTracks","TextTrackList","videoTracks","VideoTrackList","volume","setMediaPlayer","mediaPlayer","_hostElement","togglePlay","play","pause","canPlayType","addTextTrack","kind","language","requestFullscreen","webkitRequestFullscreen","msRequestFullscreen","mozRequestFullScreen","exitFullscreen","webkitExitFullscreen","msExitFullscreen","mozCancelFullScreen","fullscreenChange","fullscreen","webkitIsFullScreen","mozFullScreen","msFullscreenElement","toggleFullscreen","getFrames","AudioService","_http","getAudioFileMetadata","mediaElement","responseType","ResponseContentType","Blob","response","filename","lastIndexOf","extension","blob","getWaveformFromUrl","url","AudioContext","_audioContext","createVolumeNode","createAnalyserNode","ArrayBuffer","getAudioBuffer","arrayBuffer","audioBuffer","createBufferSource","dataPoints","channels","_audioBuffer","numberOfChannels","channelIdx","getChannelData","Float32Array","getWaveformPoints","waveform","_loop_5","points","channel","getOfflineAudioContext","decodeAudioData","OfflineAudioContext","sampleRate","disconnectSource","_audioBufferSource","buffer","connect","_analyserNode","_gainNode","createGain","createAnalyser","Http","AudioServiceModule","HttpModule","MediaPlayerComponent","mediaPlayerService","_audioService","hovering","quietMode","_playerRef","audioMetadata","_playing$","_paused$","_clicked$","_loading$","(keydown.Space)","[class.standard]","[class.fullscreen]","[class.quiet]","[class.hover]","[class.video]","[class.audio]","(mouseenter)","(mouseleave)","(document:webkitfullscreenchange)","(document:mozfullscreenchange)","(document:MSFullscreenChange)","_trackBarRef","MediaPlayerBaseExtensionDirective","MediaPlayerTimelineExtensionComponent","mouseDown","scrub","mousedown$","mousemove$","mouseup$","_mouseEventSubscription","takeUntil","updateScrub","bounds","timelineRef","offsetX","(document:mouseup)","MediaPlayerControlsExtensionComponent","volumeActive","volumeDragging","_volume","_previousVolume","mouseenter$","volumeIcon","mouseenterContainer$","volumeContainer","mouseleaveContainer$","toggleMute","setFullscreen","goToStart","goToEnd","dragStart","dragMove","volumeSlider","x","pageX","dragEnd","DurationPipe","seconds","minutes","floor","hours","days","pad","DurationPipeModule","FileSizePipe","log","pow","FileSizePipeModule","MediaPlayerModule","VirtualScrollLoadingDirective","VirtualScrollLoadButtonDirective","VirtualScrollCellDirective","VirtualScrollComponent","cells","loadingComplete","_height","cellHeight","setupObservable","renderCells","isFirstChange","getVisibleCells","startCell","endCell","getTotalHeight","cellTemplate","loadingIndicatorTemplate","loadButtonTemplate","VirtualScrollModule","AutoGrowDirective","tagName","paddingTop","paddingBottom","maximum","isNaN","AutoGrowModule","FixedHeaderTableDirective","tablePaging","_tableHead","_tableBody","setLayout","getTable","clientWidth","tableHeight","FixedHeaderTableModule","FloatLabelDirective","mode","raised","_focused","_eventHandles","inputFocus","inputBlur","hasText","getAttribute","setAttribute","eventHandle","FloatLabelModule","HelpCenterService","registerItem","unregisterItem","itm","HelpCenterItemDirective","_helpCenterService","uxHelpCenterItem","HelpCenterModule","HoverActionService","_hovered","_actions","register","action","unregister","actn","setContainer","setFocusState","updateVisibility","setHoverState","containerHasFocus","focusActionAtIndex","actionHasFocus","getFocusedActionIndex","getFocusedAction","HoverActionContainerDirective","_hoverActionService","onHover","onLeave","[class.hover-action-container-active]","[tabindex]","HoverActionDirective","[class.hover-action-active]","[class.hover-action-focused]","HoverActionModule","LayoutSwitcherItemDirective","getLayout","getConfig","activate","_embeddedView","deactivate","LayoutSwitcherDirective","_width","updateActiveLayout","getActiveLayout","_layouts","layout","minWidth","maxWidth","_activeLayout","requestAnimationFrame","LayoutSwitcherModule","SelectionStrategy","selectionService","mousedown","click","keydown","selectAll","dataset","RowSelectionStrategy","_selection","ctrlKey","shiftKey","multipleSelect","singleSelect","KeyCode","UpArrow","DownArrow","navigate","Spacebar","strategy","setSelectionStart","clearSelection","getSelectedItems","setSelectionEnd","endIdx","sibling","activateSibling","SimpleSelectionStrategy","SelectionService","Set","_rowStrategy","_simpleStrategy","clickEnabled","keyboardEnabled","selection$","selections","selection","selectionHasMutated","delete","has","setMode","setDisabled","SelectionItemDirective","_selectionService","_selected","uxSelectionItem","SelectionDirective","uxSelectionChange","uxSelection","clickSelection","keyboardSelection","SelectionModule","ReorderableHandleDirective","ReorderableModelDirective","uxReorderableModel","dragula","((dragulaNamespace)).default","dragulaNamespace","ReorderableService","_groups","_uniqueGroupId","getUniqueGroupName","groupName","ReorderableGroup","isEmpty","initialize","getGroup","drop","cloned","_containers","moves","canMove","getModelForElement","model","getModelFromElement","_instance","containers","c","mirrorContainer","on","containerElement","handle","isSameNode","ReorderableDirective","reorderableModelChange","reorderStart","reorderCancel","reorderEnd","_dragging","reorderableGroup","onDrag","onDragEnd","onDrop","onClone","reorderableModel","models","_model","setTableCellWidths","captureCanvases","_handle","sourceCells","targetCells","cell","sourceCanvases","querySelectorAll","ReorderableModule","StringFilterPipe","it","StringFilterModule","CookieAdapter","getItem","cookie","setItem","removeItem","eqPos","toUTCString","getSupported","LocalStorageAdapter","localStorage","SessionStorageAdapter","sessionStorage","PersistentDataService","PersistentDataStorageType","LocalStorage","getAdapter","Cookie","SessionStorage","PersistentDataModule","StorageAdapter","ContactsNg1Component","overflowClick","UpgradeComponent","contacts","organization","maxContacts","ExpandInputNg1Component","elname","placeHolder","clearTextIcon","closeSearch","expandAlways","onEnter","FloatingActionButtonNg1Component","fabTooltip","fabTooltipPlacement","FlotNg1Component","onPlotClick","onPlotHover","callback","donutLabels","GridNg1Component","columns","plugins","HierarchyBarNg1Component","MarqueeWizardNg1Component","wizardStepsChange","wizardIcon","wizardSteps","buttonOptions","onChanging","onFinished","onCanceled","isVisited","sideInfo","NestedDonutNg1Component","OrganizationChartNg1Component","dataChange","optionsChange","PartitionMapNg1Component","chartData","chartOptions","chartLoading","PeityBarChartNg1Component","PeityLineChartNg1Component","PeityPieChartNg1Component","PeityUpdatingLineChartNg1Component","method","updateinterval","SankeyNg1Component","chartSize","SearchToolbarNg1Component","searchTypeahead","onSearch","SelectTableNg1Component","selectKey","searchText","selectHiddenItems","SLIDER_CHART_VALUE_ACCESSOR","SliderChartNg1Component","ngModelChange","sliderOptions","ngModel","SocialChartNg1Component","api","communities","detailStyle","popoverStyle","nodeDetail","edgeDetail","nodePopover","edgePopover","forceAtlasDuration","nodeSizeAttribute","startMaximized","startMaximised","showMaximizeControl","showMaximiseControl","socialChartContainer","fullscreenButtonPosition","localStrings","chartTitle","titleDisplayTime","edgeWeightInfluence","minLabels","SortDirectionToggleNg1Component","sorters","descend","TreeGridNg1Component","currentRowChange","treeDataChange","treeData","currentRow","ThumbnailNg1Component","NavigationMenuService","_navigationMenuService","collapseAtWidth","setCollapseAtWidth","setDefaultCollapseAtWidth","navigationMenuServiceFactory","navigationMenuServiceProvider","useFactory","deps","PdfService","_pdfService","createTable","rows","pdfServiceFactory","pdfServiceProvider","TimeAgoService","_timeAgoService","setStrings","strings","timeSince","past","present","timeSinceNow","moment","timeAgoServiceFactory","timeAgoServiceProvider","HybridModule","BreadcrumbsComponent","clickCrumb","crumb","rendererFactory","createRenderer","subject","displayMode","iframe","waitUntilReady","iframeDoc","contentDocument","contentWindow","attachListener","RendererFactory2","tryCatchTarget","tryCatcher","errorObject_1","errorObject","UnsubscriptionError","errors","stack","message","flattenUnsubscriptionErrors","errs","UnsubscriptionError_1","Subscription$$1","closed","_parents","_unsubscribe","empty","hasErrors","len","isFunction_1","isFunction","tryCatch_1","tryCatch","isArray_1","sub","isObject_1","isObject","teardown","EMPTY","_addParent","tmp","subscriptions","subscriptionIndex","__window","__self","self","WorkerGlobalScope","global","root_1","Symbol","rxSubscriber","for","$$rxSubscriber","Subscriber","destinationOrNext","syncErrorValue","syncErrorThrown","syncErrorThrowable","isStopped","Observer_1","rxSubscriber_1","trustedSubscriber","SafeSubscriber","subscriber","_next","_error","_complete","_unsubscribeAndRecycle","Subscription_1","Subscriber_2","_parentSubscriber","observerOrNext","_context","__tryOrSetError","__tryOrUnsub","wrappedComplete","Action","scheduler","work","schedule","AsyncAction","pending","recycleAsyncId","requestAsyncId","flush","execute","_execute","errored","errorValue","actions","Action_1","Scheduler","SchedulerAction","now","AsyncScheduler","scheduled","shift","Scheduler_1","AsyncScheduler_1","AsyncAction_1","debounceTime_2","dueTime","async_1","async","lift","DebounceTimeOperator","DebounceTimeSubscriber","debouncedSubscription","lastValue","hasValue","clearDebounce","dispatchNext","debouncedNext","Subscriber_1","ResizeDirective","_resizeService","throttle","uxResize","run","CardTabContentDirective","OuterSubscriber","notifyNext","outerValue","innerValue","outerIndex","innerIndex","innerSub","notifyError","notifyComplete","nextOrObserver","getSymbolObservable","$$observable","observable","pipeFromArray","fns","prev","noop_1","noop","Observable$$1","_isScalar","_subscribe","sink","toSubscriber_1","toSubscriber","_trySubscribe","PromiseCtor","Rx","reject","observable_1","operations","pipe_1","toPromise","symbolIteratorPonyfill","iterator","Set_1","Map_1","Map","getOwnPropertyNames","$$iterator","InnerSubscriber","outerSubscriber","InnerSubscriber_1","Observable_1","isArrayLike_1","isArrayLike","isPromise_1","isPromise","iterator_1","done","obs","TypeError","AuditSubscriber","durationSelector","throttled","innerSubscription","subscribeToResult_1","subscribeToResult","clearThrottle","OuterSubscriber_1","TimerObservable","period","isNumeric_1","isNumeric","isScheduler_1","isScheduler","isDate_1","isDate","initialDelay","dispatch","BufferSubscriber","closingNotifier","BufferCountSubscriber","bufferSize","BufferSkipCountSubscriber","startBufferEvery","buffers","Context","BufferTimeSubscriber","bufferTimeSpan","bufferCreationInterval","maxBufferSize","contexts","openContext","timespanOnly","timeSpanOnlyState","closeAction","dispatchBufferTimeSpanOnly","closeState","creationState","dispatchBufferClose","dispatchBufferCreation","filledBufferContext","onBufferFull","closeContext","prevContext","arg","BufferToggleSubscriber","openings","closingSelector","closeBuffer","openBuffer","trySubscribe","BufferWhenSubscriber","subscribing","closingSubscription","CatchSubscriber","caught","err2","ScalarObservable","EmptyObservable","ArrayObservable","pop","ScalarObservable_1","EmptyObservable_1","none","CombineLatestSubscriber","project","observables","toRespond","unused","oldVal","_tryProject","dispatchNext$1","dispatchError","PromiseObservable","promise","IteratorObservable_2","IteratorObservable","StringIterator","ArrayIterator","getIterator","hasError","return","charAt","arr","o","isFinite","valueAsNumber","abs","maxSafeInteger","toLength","ArrayLikeObservable","arrayLike","Notification","do","accept","toObservable","throw","createNext","undefinedValueNotification","createError","createComplete","completeNotification","observeOn_2","ObserveOnOperator","ObserveOnSubscriber","ObserveOnOperator_1","notification","scheduleMessage","ObserveOnMessage","Notification_1","FromObservable","ish","ArrayObservable_1","PromiseObservable_1","IteratorObservable_1","ArrayLikeObservable_1","observeOn_1","MergeMapSubscriber","resultSelector","concurrent","POSITIVE_INFINITY","hasCompleted","_tryNext","_innerSub","_notifyResultSelector","CountSubscriber","predicate","_tryPredicate","DebounceSubscriber","durationSubscription","emitValue","DefaultIfEmptySubscriber","defaultValue","delay_2","delayFor","DelayOperator","DelaySubscriber","queue","delay_1","_schedule","scheduleNotification","DelayMessage","SubscriptionDelaySubscriber","DelayWhenSubscriber","delayDurationSelector","delayNotifierSubscriptions","removeSubscription","tryComplete","delayNotifier","tryDelay","subscriptionIdx","notifierSubscription","SubscriptionDelayObservable","subscriptionDelay","sourceSubscribed","subscribeToSource","DeMaterializeSubscriber","minimalSetImpl","MinimalSet","_values","DistinctSubscriber","keySelector","flushes","_useKeySelector","_finalizeNext","distinctUntilChanged_2","compare","DistinctUntilChangedOperator","DistinctUntilChangedSubscriber","hasKey","y","Boolean","ArgumentOutOfRangeError","ElementAtSubscriber","ArgumentOutOfRangeError_1","EverySubscriber","thisArg","everyValueMatch","SwitchFirstSubscriber","hasSubscription","SwitchFirstMapSubscriber","tryNext","trySelectResult","ExpandSubscriber","subscribeToProjection","filter_2","FilterOperator","FilterSubscriber","FinallySubscriber","FindValueSubscriber","yieldIndex","EmptyError","first_2","FirstOperator","FirstSubscriber","_emitted","_emit","_tryResultSelector","_emitFinal","EmptyError_1","ObjectUnsubscribedError","SubjectSubscription","observers","subscriberIndex","SubjectSubscriber","SubjectSubscriber_1","Subject$$1","thrownError","AnonymousSubject","ObjectUnsubscribedError_1","copy","SubjectSubscription_1","Subject_2","MapPolyfill","_keys","cb","MapPolyfill_1","FastMap","GroupDurationSubscriber","GroupBySubscriber","elementSelector","subjectSelector","groups","attemptedToUnsubscribe","_group","FastMap_1","Subject_1","groupedObservable","GroupedObservable","removeGroup","groupSubject","refCountSubscription","InnerRefCountSubscription","IgnoreElementsSubscriber","IsEmptySubscriber","LastSubscriber","map_2","MapOperator","MapSubscriber","MapOperator_1","MapToSubscriber","MaterializeSubscriber","ScanSubscriber","accumulator","_seed","hasSeed","seed","TakeLastSubscriber","ring","MergeMapToSubscriber","MergeScanSubscriber","acc","refCount_2","RefCountOperator","connectable","_refCount","refCounter","RefCountSubscriber","connection","refCount","sharedConnection","_connection","ConnectableSubscriber","ConnectableObservable","subjectFactory","_isComplete","getSubject","_subject","refCount_1","OnErrorResumeNextSubscriber","nextSources","subscribeToNextSource","PairwiseSubscriber","hasPrev","BehaviorSubject$$1","AsyncSubject","hasNext","QueueAction","QueueScheduler","QueueAction_1","ReplayEvent","ReplaySubject","windowTime","_events","_bufferSize","_windowTime","_getNow","_trimBufferThenGetEvents","queue_1","eventsCount","spliceCount","RaceSubscriber","hasFirst","RepeatSubscriber","RepeatWhenSubscriber","notifier","sourceIsBeingSubscribedTo","retries","subscribeToRetries","retriesSubscription","RetrySubscriber","RetryWhenSubscriber","SampleSubscriber","SampleTimeSubscriber","dispatchNotification","SequenceEqualCompareToSubscriber","SequenceEqualSubscriber","compareTo","comparor","_oneComplete","checkValues","areEqual","nextB","SingleSubscriber","seenValue","applySingleValue","singleValue","SkipSubscriber","SkipLastSubscriber","_skipCount","_count","_ring","skipCount","currentIndex","oldValue","SkipUntilSubscriber","isInnerStopped","SkipWhileSubscriber","skipping","tryCallPredicate","SwitchMapSubscriber","_tryNotifyNext","SwitchMapToSubscriber","inner","tryResultSelector","TakeSubscriber","takeUntil_2","TakeUntilOperator","TakeUntilSubscriber","TakeWhileSubscriber","nextOrComplete","predicateResult","DoSubscriber","safeSubscriber","defaultThrottleConfig","leading","trailing","ThrottleOperator","ThrottleSubscriber","_leading","_trailing","_hasTrailingValue","_trailingValue","tryDurationSelector","_sendTrailing","ThrottleTimeSubscriber","dispatchNext$2","TimeInterval","TimeIntervalSubscriber","lastTime","span","TimeoutError","TimeoutSubscriber","absoluteTimeout","waitFor","errorInstance","scheduleTimeout","dispatchTimeout","TimeoutWithSubscriber","withObservable","WindowSubscriber","openWindow","prevWindow","newWindow","WindowCountSubscriber","windowSize","startWindowEvery","windows","window_1","CountedSubject","_numberOfNextedValues","WindowTimeSubscriber","windowTimeSpan","windowCreationInterval","maxWindowSize","dispatchWindowClose","dispatchWindowCreation","dispatchWindowTimeSpanOnly","numberOfNextedValues","closeWindow","window_2","timeSpanState","WindowToggleSubscriber","openSubscription","unsubscribeClosingNotification","closingNotification","WithLatestFromSubscriber","found","StaticIterator","ZipSubscriber","iterators","StaticArrayIterator","ZipBufferIterator","stillUnsubscribed","notifyInactive","checkIterators","shouldComplete","nextResult","isComplete","debounceTime$2","debounceTime_1","distinctUntilChanged$1","distinctUntilChanged_1","filter$1","filter_1","first$1","first_1","map$1","map_1","CardTabsService","throttle_1","tab$","tabs$","position$","tabs","tab","addTab","removeTab","_tab","setPosition","CardTabComponent","_tabService","CardTabsetComponent","tabService","moveIntoView","resize","dimensions","_innerWidth","tablist","marginLeft","viewportStart","viewportEnd","cardWidth","CardTabsModule","CHECKBOX_VALUE_ACCESSOR","CheckboxComponent","uniqueCheckboxId","_checkboxId","indeterminateValue","ariaChecked","ColumnSortingComponent","stateChange","columnSortingState","ColumnSortingState","initParent","column","NoSort","orderNumber","changeState","Ascending","Descending","toggleColumn","ColumnSortingDirective","singleSort","ColumnSortingModule","DashboardService","_rowHeight","widgets$","options$","dimensions$","height$","placeholder$","layout$","stacked$","setLayoutData","stacked","updateWhenStacked","renderDashboard","setDashboard","dashboard","_dashboard","addWidget","widget","removeWidget","_widget","setDimensions","getLayoutData","widgets","col","getColumn","row","getRow","colSpan","getColumnSpan","rowSpan","getRowSpan","setColumn","setRow","setColumnSpan","setRowSpan","rowHeight","columnWidth","setDashboardLayout","_actionWidget","render","setWidgetPosition","setDashboardHeight","getWidgetsByOrder","w1","w2","w1Position","w2Position","success","getPositionAvailable","columnSpan","ignoreWidget","spaces","getOccupiedSpaces","_loop_1","_loop_2","block","state_1","state_2","forEachBlock","onResizeStart","_mouseEvent","bringToFront","onResizeDrag","mousePosX","mousePosY","pageY","mouseY","ActionDirection","Right","Left","difference","Bottom","Top","minHeight","TopLeft","TopRight","BottomLeft","BottomRight","currentWidth","currentHeight","setBounds","setPlaceholderBounds","updateWidgetPositions","onResizeEnd","commitWidgetChanges","shiftWidgetsUp","onDragStart","setWidgetOrigin","cacheWidgets","_widgetOrigin","restoreWidgets","shiftWidgets","getRowHeight","_cache","ignoreActionWidget","wgt","widgetsToMove","_loop_3","_loop_4","this_1","space","unmovedWidgets","grid","getRequiredSpacesFromPoint","gridSpace","getColumnCount","canWidgetMoveRight","validatePlaceholderPosition","canWidgetMoveLeft","distance","moveWidgetDown","shiftDirection","getWidgetsAtPosition","getColumnWidth","performMove","targetSpaces","moveable","ignoreResizing","Rounding","RoundDownBelowHalf","RoundUpOverHalf","getPlaceholderColumn","getPlaceholderRow","getPlaceholderColumnSpan","getPlaceholderRowSpan","rowCount","padding","getColumnFromPx","Move","RoundDown","overflow","getRowFromPx","rounding","half","RoundUp","getRowCount","emptyRow","sendToBack","stable","DashboardComponent","dashboardService","layoutChange","dashboardElement","onResize","DashboardWidgetComponent","resizable","zIndex","_column","regular","_row","_columnSpan","_rowSpan","random","getStackableValue","setStackableValue","dragstart","dragend","DragDirective","ngZone","moveevent","DashboardDragHandleDirective","DashboardModule","SPIN_BUTTON_VALUE_ACCESSOR","SpinButtonComponent","spinners","readOnly","scrolling","arrowkeys","scroll","triggerDecrement","triggerIncrement","encapsulation","ViewEncapsulation","incrementAriaLabel","inputAriaLabel","decrementAriaLabel","SpinButtonModule","TimeFormatPipe","TIME_PICKER_VALUE_ACCESSOR","TimePickerComponent","mousewheel","showMeridian","showHours","showMinutes","showSeconds","showSpinners","hourStep","minuteStep","secondStep","meridians","value$","hour$","getHours","hour","getMeridianTime","minute$","getMinutes","second$","getSeconds","meridian$","checkValidity","_meridian","setHour","setMinute","minute","setMinutes","setSeconds","incrementHour","arrowkey","decrementHour","incrementMinute","decrementMinute","incrementSecond","decrementSecond","selectMeridian","meridian","getTime","hourChange","currentHour","minuteChange","currentMinute","secondChange","second","currentSecond","aria-label","TimePickerModule","gridify","list","compareDays","day1","day2","getDate","getMonth","getFullYear","dateComparator","dateOne","dateTwo","timezoneComparator","zoneOne","zoneTwo","months","monthsShort","month","weekdaysShort","weekday","DateTimePickerConfig","showDate","showTime","showTimezone","weekdays","nowBtnText","timezones","DateTimePickerService","mode$","DatePickerMode","Day","date$","timezone$","getCurrentTimezone","month$","year$","showDate$","showTime$","showTimezone$","showSeconds$","showMeridian$","showSpinners$","weekdays$","nowBtnText$","timezones$","header$","headerEvent$","modeDirection","ModeDirection","setViewportMonth","setViewportYear","year","setDate","day","setMonth","setFullYear","setDateToNow","setViewportMode","goToChildMode","Descend","Year","Month","goToParentMode","Ascend","goToNext","DatePickerHeaderEvent","Next","goToPrevious","Previous","setHeader","getTimezoneOffset","timezone","setTimezone","DateTimePickerComponent","datepicker","dateChange","timezoneChange","setToNow","DayViewService","_datepicker","grid$","focused$","createDayGrid","setFocus","getDay","dates","dateRange","isToday","isCurrentMonth","selectedDay","DayViewComponent","datePicker","dayService","trackWeekByFn","trackDayByFn","focusDate","dayOffset","getTabbable","HeaderComponent","canAscend$","headerAria$","previousAria$","nextAria$","ascend","MonthViewService","createMonthGrid","currentMonth","currentYear","activeMonth","activeYear","isActiveMonth","selectedMonth","MonthViewComponent","_datePicker","monthService","focusMonth","monthOffset","targetMonth","targetYear","trackRowByFn","trackMonthByFn","TimeViewComponent","selectTimezone","_timezone","incrementTimezone","currentZone","zone","decrementTimezone","YearViewService","_year","createYearGrid","_event","goToNextDecade","goToPreviousDecade","decade","getDecade","isCurrentYear","isActiveYear","YearViewComponent","yearService","focusYear","yearOffset","trackYearByFn","FocusIfDirective","_timeout","focusIf","EboxComponent","EboxHeaderDirective","EboxContentDirective","EboxModule"],"mappings":"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"}

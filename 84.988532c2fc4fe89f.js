(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[84],{7143:_=>{_.exports={snippet:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ux-accordion</span> <span class="token attr-name">[collapseOthers]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ux-accordion-panel</span>\n    <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>accordion-chevron<span class="token punctuation">"</span></span>\n    <span class="token attr-name">heading</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Tree Grid with Preloaded Data<span class="token punctuation">"</span></span>\n    <span class="token attr-name">[expanded]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span>\n  <span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span>\n      <span class="token attr-name">role</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>treegrid<span class="token punctuation">"</span></span>\n      <span class="token attr-name">aria-multiselectable</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span>\n      <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>table table-hover<span class="token punctuation">"</span></span>\n      <span class="token attr-name">[uxTreeGrid]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>items<span class="token punctuation">"</span></span>\n      <span class="token attr-name">(rowsChange)</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>rows = $event<span class="token punctuation">"</span></span>\n    <span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>thead</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>treegrid-header table-header-dark<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ux-checkbox</span> <span class="token attr-name">aria-label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Select all rows<span class="token punctuation">"</span></span> <span class="token attr-name">[(value)]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>selectAll<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ux-checkbox</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>treegrid-header-text<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Title<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>Date<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>thead</span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tbody</span> <span class="token attr-name">[uxSelection]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>selected<span class="token punctuation">"</span></span> <span class="token attr-name">mode</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>simple<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span>\n          <span class="token attr-name">*ngFor</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>let row of rows<span class="token punctuation">"</span></span>\n          <span class="token attr-name">role</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>row<span class="token punctuation">"</span></span>\n          <span class="token attr-name">[attr.aria-expanded]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>row.expanded<span class="token punctuation">"</span></span>\n          <span class="token attr-name">[attr.aria-level]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>row.state.level + 1<span class="token punctuation">"</span></span>\n          <span class="token attr-name">[attr.aria-setsize]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>row.state.setSize<span class="token punctuation">"</span></span>\n          <span class="token attr-name">[attr.aria-posinset]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>row.state.positionInSet<span class="token punctuation">"</span></span>\n          <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>clickable<span class="token punctuation">"</span></span>\n          <span class="token attr-name">[uxTreeGridRow]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>row<span class="token punctuation">"</span></span>\n          <span class="token attr-name">[canExpand]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>row.type === \'folder\'<span class="token punctuation">"</span></span>\n          <span class="token attr-name">[(expanded)]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>row.expanded<span class="token punctuation">"</span></span>\n          <span class="token attr-name">#treeGridRow</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>uxTreeGridRow<span class="token punctuation">"</span></span>\n          <span class="token attr-name">[uxSelectionItem]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>row<span class="token punctuation">"</span></span>\n          <span class="token attr-name">[selected]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>isSelected(row)<span class="token punctuation">"</span></span>\n          <span class="token attr-name">(selectedChange)</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>$event ? select(row) : deselect(row)<span class="token punctuation">"</span></span>\n        <span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name">uxTreeGridIndent</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>treegrid-expander<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span>\n                <span class="token attr-name">*ngIf</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>row.children &amp;&amp; row.children.length > 0<span class="token punctuation">"</span></span>\n                <span class="token attr-name">aria-hidden</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span>\n                <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span>\n                <span class="token attr-name">tabindex</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>-1<span class="token punctuation">"</span></span>\n                <span class="token attr-name">(click)</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>treeGridRow.toggle(); $event.stopPropagation()<span class="token punctuation">"</span></span>\n              <span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ux-icon</span>\n                  <span class="token attr-name">*ngIf</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>!treeGridRow.loading<span class="token punctuation">"</span></span>\n                  <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>chevron-right<span class="token punctuation">"</span></span>\n                  <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>treegrid-expander-icon<span class="token punctuation">"</span></span>\n                <span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ux-icon</span><span class="token punctuation">></span></span>\n\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span>\n                  <span class="token attr-name">*ngIf</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>treeGridRow.loading<span class="token punctuation">"</span></span>\n                  <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>spinner spinner-accent spinner-bounce-middle<span class="token punctuation">"</span></span>\n                <span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>\n              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>\n\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ux-checkbox</span>\n              <span class="token attr-name">aria-label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Toggle row selection<span class="token punctuation">"</span></span>\n              <span class="token attr-name">[value]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>isSelected(row)<span class="token punctuation">"</span></span>\n              <span class="token attr-name">(valueChange)</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>$event ? select(row) : deselect(row)<span class="token punctuation">"</span></span>\n            <span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ux-checkbox</span><span class="token punctuation">></span></span>\n\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>treegrid-icon<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ux-icon</span> <span class="token attr-name">[name]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>getIcon(row)<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ux-icon</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>\n\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>{{ row.title }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>\n\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>{{ row.date | date }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tbody</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">></span></span>\n\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>m-t-md<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n      Selected items:\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">*ngFor</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>let item of selected; let last = last<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n        {{ item.title + (last ? \'.\' : \', \') }}\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>em</span> <span class="token attr-name">*ngIf</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>selected?.length === 0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>none<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>em</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ux-accordion-panel</span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ux-accordion-panel</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>accordion-chevron<span class="token punctuation">"</span></span> <span class="token attr-name">heading</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Tree Grid with Asynchronous Loading<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>btn-container<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>btn button-secondary<span class="token punctuation">"</span></span> <span class="token attr-name">(click)</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>setExpanded(asyncItems, true)<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ux-icon</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>chevron-down<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ux-icon</span><span class="token punctuation">></span></span> Expand All\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>btn button-secondary<span class="token punctuation">"</span></span> <span class="token attr-name">(click)</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>setExpanded(asyncItems, false)<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ux-icon</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>chevron-right<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ux-icon</span><span class="token punctuation">></span></span> Contract All\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>btn button-secondary<span class="token punctuation">"</span></span> <span class="token attr-name">(click)</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>clearChildren()<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ux-icon</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>close<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ux-icon</span><span class="token punctuation">></span></span> Clear Cached Data\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span>\n      <span class="token attr-name">role</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>treegrid<span class="token punctuation">"</span></span>\n      <span class="token attr-name">aria-multiselectable</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span>\n      <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>table table-hover<span class="token punctuation">"</span></span>\n      <span class="token attr-name">[uxTreeGrid]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>asyncItems<span class="token punctuation">"</span></span>\n      <span class="token attr-name">(rowsChange)</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>asyncRows = $event<span class="token punctuation">"</span></span>\n      <span class="token attr-name">[loadChildren]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>loadChildrenFn<span class="token punctuation">"</span></span>\n    <span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>thead</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>treegrid-header table-header-dark<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>Name<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>Author<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>Date<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>thead</span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tbody</span> <span class="token attr-name">[(uxSelection)]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>asyncSelected<span class="token punctuation">"</span></span> <span class="token attr-name">mode</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>row<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span>\n          <span class="token attr-name">*ngFor</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>let row of asyncRows<span class="token punctuation">"</span></span>\n          <span class="token attr-name">role</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>row<span class="token punctuation">"</span></span>\n          <span class="token attr-name">[attr.aria-expanded]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>row.expanded<span class="token punctuation">"</span></span>\n          <span class="token attr-name">[attr.aria-level]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>row.state.level + 1<span class="token punctuation">"</span></span>\n          <span class="token attr-name">[attr.aria-setsize]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>row.state.setSize<span class="token punctuation">"</span></span>\n          <span class="token attr-name">[attr.aria-posinset]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>row.state.positionInSet<span class="token punctuation">"</span></span>\n          <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>clickable<span class="token punctuation">"</span></span>\n          <span class="token attr-name">[uxTreeGridRow]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>row<span class="token punctuation">"</span></span>\n          <span class="token attr-name">[canExpand]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>row.type === \'folder\'<span class="token punctuation">"</span></span>\n          <span class="token attr-name">[(expanded)]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>row.expanded<span class="token punctuation">"</span></span>\n          <span class="token attr-name">#treeGridRow</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>uxTreeGridRow<span class="token punctuation">"</span></span>\n          <span class="token attr-name">[uxSelectionItem]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>row<span class="token punctuation">"</span></span>\n        <span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name">uxTreeGridIndent</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>treegrid-expander<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span>\n                <span class="token attr-name">*ngIf</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>row.type === \'folder\'<span class="token punctuation">"</span></span>\n                <span class="token attr-name">aria-hidden</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span>\n                <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span>\n                <span class="token attr-name">tabindex</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>-1<span class="token punctuation">"</span></span>\n                <span class="token attr-name">(click)</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>treeGridRow.toggle(); $event.stopPropagation()<span class="token punctuation">"</span></span>\n              <span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ux-icon</span>\n                  <span class="token attr-name">*ngIf</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>!treeGridRow.loading<span class="token punctuation">"</span></span>\n                  <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>chevron-right<span class="token punctuation">"</span></span>\n                  <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>treegrid-expander-icon<span class="token punctuation">"</span></span>\n                <span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ux-icon</span><span class="token punctuation">></span></span>\n\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span>\n                  <span class="token attr-name">*ngIf</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>treeGridRow.loading<span class="token punctuation">"</span></span>\n                  <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>spinner spinner-accent spinner-bounce-middle<span class="token punctuation">"</span></span>\n                <span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>\n              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>\n\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>treegrid-icon<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ux-icon</span> <span class="token attr-name">[name]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>getIcon(row)<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ux-icon</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>\n\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>{{ row.title }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>\n\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>{{ row.author }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>\n\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>{{ row.date | date }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tbody</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">></span></span>\n\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>m-t-md<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n      Selected items:\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">*ngFor</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>let item of asyncSelected; let last = last<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n        {{ item.title + (last ? \'.\' : \', \') }}\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>em</span> <span class="token attr-name">*ngIf</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>asyncSelected?.length === 0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>none<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>em</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ux-accordion-panel</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ux-accordion</span><span class="token punctuation">></span></span>\n',example:'<ux-accordion [collapseOthers]="true">\n  <ux-accordion-panel\n    class="accordion-chevron"\n    heading="Tree Grid with Preloaded Data"\n    [expanded]="true"\n  >\n    <table\n      role="treegrid"\n      aria-multiselectable="true"\n      class="table table-hover"\n      [uxTreeGrid]="items"\n      (rowsChange)="rows = $event"\n    >\n      <thead>\n        <tr class="treegrid-header table-header-dark">\n          <th>\n            <ux-checkbox aria-label="Select all rows" [(value)]="selectAll"></ux-checkbox>\n            <span class="treegrid-header-text">Title</span>\n          </th>\n          <th>Date</th>\n        </tr>\n      </thead>\n      <tbody [uxSelection]="selected" mode="simple">\n        <tr\n          *ngFor="let row of rows"\n          role="row"\n          [attr.aria-expanded]="row.expanded"\n          [attr.aria-level]="row.state.level + 1"\n          [attr.aria-setsize]="row.state.setSize"\n          [attr.aria-posinset]="row.state.positionInSet"\n          class="clickable"\n          [uxTreeGridRow]="row"\n          [canExpand]="row.type === \'folder\'"\n          [(expanded)]="row.expanded"\n          #treeGridRow="uxTreeGridRow"\n          [uxSelectionItem]="row"\n          [selected]="isSelected(row)"\n          (selectedChange)="$event ? select(row) : deselect(row)"\n        >\n          <td uxTreeGridIndent>\n            <span class="treegrid-expander">\n              <button\n                *ngIf="row.children && row.children.length > 0"\n                aria-hidden="true"\n                type="button"\n                tabindex="-1"\n                (click)="treeGridRow.toggle(); $event.stopPropagation()"\n              >\n                <ux-icon\n                  *ngIf="!treeGridRow.loading"\n                  name="chevron-right"\n                  class="treegrid-expander-icon"\n                >\n                </ux-icon>\n\n                <span\n                  *ngIf="treeGridRow.loading"\n                  class="spinner spinner-accent spinner-bounce-middle"\n                >\n                </span>\n              </button>\n            </span>\n\n            <ux-checkbox\n              aria-label="Toggle row selection"\n              [value]="isSelected(row)"\n              (valueChange)="$event ? select(row) : deselect(row)"\n            ></ux-checkbox>\n\n            <span class="treegrid-icon">\n              <ux-icon [name]="getIcon(row)"></ux-icon>\n            </span>\n\n            <span>{{ row.title }}</span>\n          </td>\n\n          <td>\n            <span>{{ row.date | date }}</span>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n\n    <p class="m-t-md">\n      Selected items:\n      <span *ngFor="let item of selected; let last = last">\n        {{ item.title + (last ? \'.\' : \', \') }}\n      </span>\n      <em *ngIf="selected?.length === 0">none</em>\n    </p>\n  </ux-accordion-panel>\n  <ux-accordion-panel class="accordion-chevron" heading="Tree Grid with Asynchronous Loading">\n    <div class="btn-container">\n      <button type="button" class="btn button-secondary" (click)="setExpanded(asyncItems, true)">\n        <ux-icon name="chevron-down"></ux-icon> Expand All\n      </button>\n      <button type="button" class="btn button-secondary" (click)="setExpanded(asyncItems, false)">\n        <ux-icon name="chevron-right"></ux-icon> Contract All\n      </button>\n      <button type="button" class="btn button-secondary" (click)="clearChildren()">\n        <ux-icon name="close"></ux-icon> Clear Cached Data\n      </button>\n    </div>\n\n    <table\n      role="treegrid"\n      aria-multiselectable="true"\n      class="table table-hover"\n      [uxTreeGrid]="asyncItems"\n      (rowsChange)="asyncRows = $event"\n      [loadChildren]="loadChildrenFn"\n    >\n      <thead>\n        <tr class="treegrid-header table-header-dark">\n          <th>Name</th>\n          <th>Author</th>\n          <th>Date</th>\n        </tr>\n      </thead>\n      <tbody [(uxSelection)]="asyncSelected" mode="row">\n        <tr\n          *ngFor="let row of asyncRows"\n          role="row"\n          [attr.aria-expanded]="row.expanded"\n          [attr.aria-level]="row.state.level + 1"\n          [attr.aria-setsize]="row.state.setSize"\n          [attr.aria-posinset]="row.state.positionInSet"\n          class="clickable"\n          [uxTreeGridRow]="row"\n          [canExpand]="row.type === \'folder\'"\n          [(expanded)]="row.expanded"\n          #treeGridRow="uxTreeGridRow"\n          [uxSelectionItem]="row"\n        >\n          <td uxTreeGridIndent>\n            <span class="treegrid-expander">\n              <button\n                *ngIf="row.type === \'folder\'"\n                aria-hidden="true"\n                type="button"\n                tabindex="-1"\n                (click)="treeGridRow.toggle(); $event.stopPropagation()"\n              >\n                <ux-icon\n                  *ngIf="!treeGridRow.loading"\n                  name="chevron-right"\n                  class="treegrid-expander-icon"\n                >\n                </ux-icon>\n\n                <span\n                  *ngIf="treeGridRow.loading"\n                  class="spinner spinner-accent spinner-bounce-middle"\n                >\n                </span>\n              </button>\n            </span>\n\n            <span class="treegrid-icon">\n              <ux-icon [name]="getIcon(row)"></ux-icon>\n            </span>\n\n            <span>{{ row.title }}</span>\n          </td>\n\n          <td>\n            <span>{{ row.author }}</span>\n          </td>\n\n          <td>\n            <span>{{ row.date | date }}</span>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n\n    <p class="m-t-md">\n      Selected items:\n      <span *ngFor="let item of asyncSelected; let last = last">\n        {{ item.title + (last ? \'.\' : \', \') }}\n      </span>\n      <em *ngIf="asyncSelected?.length === 0">none</em>\n    </p>\n  </ux-accordion-panel>\n</ux-accordion>\n'}},23018:(_,Fn,u)=>{var a={"./app.html":7143,"./app.ts":35679,"docs/app/pages/components/components-sections/tree-view/tree-grid/snippets/app.html":7143,"docs/app/pages/components/components-sections/tree-view/tree-grid/snippets/app.ts":35679};function y(C){var w=L(C);return u(w)}function L(C){if(!u.o(a,C)){var w=new Error("Cannot find module '"+C+"'");throw w.code="MODULE_NOT_FOUND",w}return a[C]}y.keys=function(){return Object.keys(a)},y.resolve=L,_.exports=y,y.id=23018},30210:_=>{_.exports={snippet:'<span class="token selector">.tree-view-example-container</span> <span class="token punctuation">{</span>\n  <span class="token property">height</span><span class="token punctuation">:</span> 250px<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.node-content-wrapper</span> <span class="token punctuation">{</span>\n  <span class="token property">outline</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.node-content-wrapper:focus</span> <span class="token punctuation">{</span>\n  <span class="token property">outline</span><span class="token punctuation">:</span> 2px dotted<span class="token punctuation">;</span>\n  <span class="token property">outline</span><span class="token punctuation">:</span> auto -webkit-focus-ring-color<span class="token punctuation">;</span>\n  <span class="token property">outline-color</span><span class="token punctuation">:</span> #00a7a2<span class="token punctuation">;</span>\n  <span class="token property">outline-offset</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.node-content-wrapper.title</span> <span class="token punctuation">{</span>\n  <span class="token property">margin-left</span><span class="token punctuation">:</span> 5px<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.node-content-wrapper-focused</span> <span class="token punctuation">{</span>\n  <span class="token property">background-color</span><span class="token punctuation">:</span> #e7f1f9<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n'}},35679:_=>{_.exports={snippet:'<span class="token keyword">import</span> <span class="token punctuation">{</span> Component <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@angular/core\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> TreeGridItem<span class="token punctuation">,</span> TreeGridLoadFunction <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@ux-aspects/ux-aspects\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token string">\'chance\'</span><span class="token punctuation">;</span>\n\n@<span class="token function">Component</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token literal-property property">selector</span><span class="token operator">:</span> <span class="token string">\'app-root\'</span><span class="token punctuation">,</span>\n  <span class="token literal-property property">templateUrl</span><span class="token operator">:</span> <span class="token string">\'./app.component.html\'</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">AppComponent</span> <span class="token punctuation">{</span>\n  <span class="token literal-property property">selected</span><span class="token operator">:</span> FileNode<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">set</span> <span class="token function">selectAll</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">selectAll</span><span class="token operator">:</span> boolean <span class="token operator">|</span> <span class="token operator">-</span><span class="token number">1</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>selectAll <span class="token operator">===</span> <span class="token boolean">false</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token keyword">this</span><span class="token punctuation">.</span>selected <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>selectAll <span class="token operator">===</span> <span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token comment">// Tip: pass `this.rows` instead to select only visible rows</span>\n      <span class="token keyword">this</span><span class="token punctuation">.</span>selected <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span><span class="token keyword">this</span><span class="token punctuation">.</span>itemsFlat<span class="token punctuation">]</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token keyword">get</span> <span class="token function">selectAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> boolean <span class="token operator">|</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token punctuation">{</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>selected<span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>selected<span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token keyword">this</span><span class="token punctuation">.</span>itemsFlat<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n    <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token literal-property property">rows</span><span class="token operator">:</span> FileNode<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n  <span class="token comment">/** The raw nested data source */</span>\n  <span class="token literal-property property">items</span><span class="token operator">:</span> FileNode<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>\n    <span class="token punctuation">{</span>\n      <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">\'Documents\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">date</span><span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token string">\'2013-02-16\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">\'folder\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">children</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n        <span class="token punctuation">{</span>\n          <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">\'Pictures\'</span><span class="token punctuation">,</span>\n          <span class="token literal-property property">date</span><span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token string">\'2013-05-28\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n          <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">\'folder\'</span><span class="token punctuation">,</span>\n          <span class="token literal-property property">children</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n            <span class="token punctuation">{</span>\n              <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">\'Alcazar\'</span><span class="token punctuation">,</span>\n              <span class="token literal-property property">date</span><span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token string">\'2014-05-15\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n              <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">\'file\'</span><span class="token punctuation">,</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            <span class="token punctuation">{</span>\n              <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">\'Citadel\'</span><span class="token punctuation">,</span>\n              <span class="token literal-property property">date</span><span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token string">\'2015-09-02\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n              <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">\'file\'</span><span class="token punctuation">,</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            <span class="token punctuation">{</span>\n              <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">\'Donjon\'</span><span class="token punctuation">,</span>\n              <span class="token literal-property property">date</span><span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token string">\'2014-04-10\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n              <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">\'file\'</span><span class="token punctuation">,</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">]</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">{</span>\n          <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">\'Word files\'</span><span class="token punctuation">,</span>\n          <span class="token literal-property property">date</span><span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token string">\'2013-09-25\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n          <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">\'folder\'</span><span class="token punctuation">,</span>\n          <span class="token literal-property property">children</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n            <span class="token punctuation">{</span>\n              <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">\'Accounts\'</span><span class="token punctuation">,</span>\n              <span class="token literal-property property">date</span><span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token string">\'2013-10-04\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n              <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">\'folder\'</span><span class="token punctuation">,</span>\n              <span class="token literal-property property">children</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n                <span class="token punctuation">{</span>\n                  <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">\'Castle\'</span><span class="token punctuation">,</span>\n                  <span class="token literal-property property">date</span><span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token string">\'2014-05-15\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n                  <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">\'file\'</span><span class="token punctuation">,</span>\n                <span class="token punctuation">}</span><span class="token punctuation">,</span>\n                <span class="token punctuation">{</span>\n                  <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">\'Estate\'</span><span class="token punctuation">,</span>\n                  <span class="token literal-property property">date</span><span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token string">\'2015-08-03\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n                  <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">\'file\'</span><span class="token punctuation">,</span>\n                <span class="token punctuation">}</span><span class="token punctuation">,</span>\n                <span class="token punctuation">{</span>\n                  <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">\'Manor\'</span><span class="token punctuation">,</span>\n                  <span class="token literal-property property">date</span><span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token string">\'2014-05-30\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n                  <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">\'file\'</span><span class="token punctuation">,</span>\n                <span class="token punctuation">}</span><span class="token punctuation">,</span>\n                <span class="token punctuation">{</span>\n                  <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">\'Mansion\'</span><span class="token punctuation">,</span>\n                  <span class="token literal-property property">date</span><span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token string">\'2014-04-23\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n                  <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">\'file\'</span><span class="token punctuation">,</span>\n                <span class="token punctuation">}</span><span class="token punctuation">,</span>\n                <span class="token punctuation">{</span>\n                  <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">\'Villa\'</span><span class="token punctuation">,</span>\n                  <span class="token literal-property property">date</span><span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token string">\'2015-09-21\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n                  <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">\'file\'</span><span class="token punctuation">,</span>\n                <span class="token punctuation">}</span><span class="token punctuation">,</span>\n              <span class="token punctuation">]</span><span class="token punctuation">,</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">]</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">]</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span>\n      <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">\'Emails\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">date</span><span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token string">\'2013-03-17\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">\'folder\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">children</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n        <span class="token punctuation">{</span>\n          <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">\'Inbox\'</span><span class="token punctuation">,</span>\n          <span class="token literal-property property">date</span><span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token string">\'2013-03-17\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n          <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">\'folder\'</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">{</span>\n          <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">\'Outbox\'</span><span class="token punctuation">,</span>\n          <span class="token literal-property property">date</span><span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token string">\'2013-03-17\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n          <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">\'folder\'</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">]</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span>\n      <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">\'Empty\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">date</span><span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token string">\'2016-06-02\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">\'folder\'</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n  itemsFlat <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">flatten</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>items<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token literal-property property">asyncSelected</span><span class="token operator">:</span> FileNode<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n  <span class="token literal-property property">asyncRows</span><span class="token operator">:</span> FileNode<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n  <span class="token literal-property property">asyncItems</span><span class="token operator">:</span> FileNode<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>\n    <span class="token punctuation">{</span>\n      <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">\'Folder 1\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">\'folder\'</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span>\n      <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">\'Folder 2\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">\'folder\'</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span>\n      <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">\'Folder 3\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">\'folder\'</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n  <span class="token literal-property property">loadChildrenFn</span><span class="token operator">:</span> TreeGridLoadFunction <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">loadChildren</span><span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token function">select</span><span class="token punctuation">(</span>row<span class="token operator">:</span> FileNode<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>\n    <span class="token comment">// if the row is not currently selected then select it</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>selected<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>row<span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token keyword">this</span><span class="token punctuation">.</span>selected <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span><span class="token keyword">this</span><span class="token punctuation">.</span>selected<span class="token punctuation">,</span> row<span class="token punctuation">]</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token comment">// if the row has any children select them also</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>row<span class="token punctuation">.</span>children<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      row<span class="token punctuation">.</span>children<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">child</span> <span class="token operator">=></span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span>child<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token function">deselect</span><span class="token punctuation">(</span>row<span class="token operator">:</span> FileNode<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>\n    <span class="token comment">// deselect the current row</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span>selected <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>selected<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token parameter">_row</span> <span class="token operator">=></span> _row <span class="token operator">!==</span> row<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token comment">// if the row has any children deselect them also</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>row<span class="token punctuation">.</span>children<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      row<span class="token punctuation">.</span>children<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">child</span> <span class="token operator">=></span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">deselect</span><span class="token punctuation">(</span>child<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">checkChildren</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token function">checkChildren</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>\n    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> row <span class="token keyword">of</span> <span class="token keyword">this</span><span class="token punctuation">.</span>selected<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token comment">// eslint-disable-next-line no-prototype-builtins</span>\n      <span class="token keyword">if</span> <span class="token punctuation">(</span>row<span class="token punctuation">.</span><span class="token function">hasOwnProperty</span><span class="token punctuation">(</span><span class="token string">\'children\'</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">const</span> isChildSelected <span class="token operator">=</span> row<span class="token punctuation">.</span>children<span class="token punctuation">.</span><span class="token function">some</span><span class="token punctuation">(</span><span class="token parameter">child</span> <span class="token operator">=></span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">isSelected</span><span class="token punctuation">(</span>child<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>isChildSelected<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n          <span class="token keyword">this</span><span class="token punctuation">.</span>selected <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>selected<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token parameter">_row</span> <span class="token operator">=></span> _row <span class="token operator">!==</span> row<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token function">isSelected</span><span class="token punctuation">(</span>row<span class="token operator">:</span> FileNode<span class="token punctuation">)</span><span class="token operator">:</span> boolean <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>selected<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>row<span class="token punctuation">)</span> <span class="token operator">!==</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token function">loadChildren</span><span class="token punctuation">(</span>parent<span class="token operator">:</span> FileNode<span class="token punctuation">)</span><span class="token operator">:</span> Promise<span class="token operator">&lt;</span>FileNode<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">></span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token operator">&lt;</span>FileNode<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token parameter">resolve</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n      <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n        <span class="token keyword">const</span> index <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>asyncItems<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>parent<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">const</span> <span class="token literal-property property">result</span><span class="token operator">:</span> FileNode<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">;</span> i <span class="token operator">+=</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n          result<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n            <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">Document </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>index <span class="token operator">*</span> <span class="token number">10</span> <span class="token operator">+</span> i <span class="token operator">+</span> <span class="token number">1</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>\n            <span class="token literal-property property">author</span><span class="token operator">:</span> chance<span class="token punctuation">.</span><span class="token function">name</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n            <span class="token literal-property property">date</span><span class="token operator">:</span> chance<span class="token punctuation">.</span><span class="token function">date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n            <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">\'file\'</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n        <span class="token function">resolve</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">2000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token function">flatten</span><span class="token punctuation">(</span>items<span class="token operator">:</span> FileNode<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">:</span> FileNode<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> items<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">previous<span class="token punctuation">,</span> item</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n      <span class="token keyword">const</span> children <span class="token operator">=</span> item<span class="token punctuation">.</span>children <span class="token operator">?</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">flatten</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>children<span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n      <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token operator">...</span>previous<span class="token punctuation">,</span> item<span class="token punctuation">,</span> <span class="token operator">...</span>children<span class="token punctuation">]</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token function">clearChildren</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>\n    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> item <span class="token keyword">of</span> <span class="token keyword">this</span><span class="token punctuation">.</span>asyncItems<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      item<span class="token punctuation">.</span>expanded <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\n      <span class="token keyword">delete</span> item<span class="token punctuation">.</span>children<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token function">setExpanded</span><span class="token punctuation">(</span>items<span class="token operator">:</span> FileNode<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token literal-property property">expanded</span><span class="token operator">:</span> boolean<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>\n    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> item <span class="token keyword">of</span> items<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      item<span class="token punctuation">.</span>expanded <span class="token operator">=</span> expanded<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token function">getIcon</span><span class="token punctuation">(</span>item<span class="token operator">:</span> FileNode<span class="token punctuation">)</span><span class="token operator">:</span> string <span class="token punctuation">{</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>item<span class="token punctuation">.</span>type <span class="token operator">===</span> <span class="token string">\'folder\'</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>item<span class="token punctuation">.</span>expanded<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token keyword">return</span> <span class="token string">\'folder\'</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>item<span class="token punctuation">.</span>type <span class="token operator">===</span> <span class="token string">\'folder\'</span> <span class="token operator">&amp;&amp;</span> item<span class="token punctuation">.</span>expanded<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token keyword">return</span> <span class="token string">\'folder-open\'</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>item<span class="token punctuation">.</span>type <span class="token operator">===</span> <span class="token string">\'file\'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token keyword">return</span> <span class="token string">\'document\'</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">interface</span> <span class="token class-name">FileNode</span> <span class="token keyword">extends</span> <span class="token class-name">TreeGridItem</span> <span class="token punctuation">{</span>\n  <span class="token literal-property property">title</span><span class="token operator">:</span> string<span class="token punctuation">;</span>\n  author<span class="token operator">?</span><span class="token operator">:</span> string<span class="token punctuation">;</span>\n  date<span class="token operator">?</span><span class="token operator">:</span> Date<span class="token punctuation">;</span>\n  <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">\'folder\'</span> <span class="token operator">|</span> <span class="token string">\'file\'</span><span class="token punctuation">;</span>\n  children<span class="token operator">?</span><span class="token operator">:</span> FileNode<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n  selected<span class="token operator">?</span><span class="token operator">:</span> boolean<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n',example:"import { Component } from '@angular/core';\nimport { TreeGridItem, TreeGridLoadFunction } from '@ux-aspects/ux-aspects';\nimport 'chance';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n})\nexport class AppComponent {\n  selected: FileNode[] = [];\n\n  set selectAll(selectAll: boolean | -1) {\n    if (selectAll === false) {\n      this.selected = [];\n    } else if (selectAll === true) {\n      // Tip: pass `this.rows` instead to select only visible rows\n      this.selected = [...this.itemsFlat];\n    }\n  }\n\n  get selectAll(): boolean | -1 {\n    if (this.selected.length === 0) {\n      return false;\n    }\n    if (this.selected.length === this.itemsFlat.length) {\n      return true;\n    }\n    return -1;\n  }\n\n  rows: FileNode[] = [];\n\n  /** The raw nested data source */\n  items: FileNode[] = [\n    {\n      title: 'Documents',\n      date: new Date('2013-02-16'),\n      type: 'folder',\n      children: [\n        {\n          title: 'Pictures',\n          date: new Date('2013-05-28'),\n          type: 'folder',\n          children: [\n            {\n              title: 'Alcazar',\n              date: new Date('2014-05-15'),\n              type: 'file',\n            },\n            {\n              title: 'Citadel',\n              date: new Date('2015-09-02'),\n              type: 'file',\n            },\n            {\n              title: 'Donjon',\n              date: new Date('2014-04-10'),\n              type: 'file',\n            },\n          ],\n        },\n        {\n          title: 'Word files',\n          date: new Date('2013-09-25'),\n          type: 'folder',\n          children: [\n            {\n              title: 'Accounts',\n              date: new Date('2013-10-04'),\n              type: 'folder',\n              children: [\n                {\n                  title: 'Castle',\n                  date: new Date('2014-05-15'),\n                  type: 'file',\n                },\n                {\n                  title: 'Estate',\n                  date: new Date('2015-08-03'),\n                  type: 'file',\n                },\n                {\n                  title: 'Manor',\n                  date: new Date('2014-05-30'),\n                  type: 'file',\n                },\n                {\n                  title: 'Mansion',\n                  date: new Date('2014-04-23'),\n                  type: 'file',\n                },\n                {\n                  title: 'Villa',\n                  date: new Date('2015-09-21'),\n                  type: 'file',\n                },\n              ],\n            },\n          ],\n        },\n      ],\n    },\n    {\n      title: 'Emails',\n      date: new Date('2013-03-17'),\n      type: 'folder',\n      children: [\n        {\n          title: 'Inbox',\n          date: new Date('2013-03-17'),\n          type: 'folder',\n        },\n        {\n          title: 'Outbox',\n          date: new Date('2013-03-17'),\n          type: 'folder',\n        },\n      ],\n    },\n    {\n      title: 'Empty',\n      date: new Date('2016-06-02'),\n      type: 'folder',\n    },\n  ];\n\n  itemsFlat = this.flatten(this.items);\n\n  asyncSelected: FileNode[] = [];\n\n  asyncRows: FileNode[] = [];\n\n  asyncItems: FileNode[] = [\n    {\n      title: 'Folder 1',\n      type: 'folder',\n    },\n    {\n      title: 'Folder 2',\n      type: 'folder',\n    },\n    {\n      title: 'Folder 3',\n      type: 'folder',\n    },\n  ];\n\n  loadChildrenFn: TreeGridLoadFunction = this.loadChildren.bind(this);\n\n  select(row: FileNode): void {\n    // if the row is not currently selected then select it\n    if (this.selected.indexOf(row) === -1) {\n      this.selected = [...this.selected, row];\n    }\n\n    // if the row has any children select them also\n    if (row.children) {\n      row.children.forEach(child => this.select(child));\n    }\n  }\n\n  deselect(row: FileNode): void {\n    // deselect the current row\n    this.selected = this.selected.filter(_row => _row !== row);\n\n    // if the row has any children deselect them also\n    if (row.children) {\n      row.children.forEach(child => this.deselect(child));\n    }\n\n    this.checkChildren();\n  }\n\n  checkChildren(): void {\n    for (const row of this.selected) {\n      // eslint-disable-next-line no-prototype-builtins\n      if (row.hasOwnProperty('children')) {\n        const isChildSelected = row.children.some(child => this.isSelected(child));\n\n        if (!isChildSelected) {\n          this.selected = this.selected.filter(_row => _row !== row);\n        }\n      }\n    }\n  }\n\n  isSelected(row: FileNode): boolean {\n    return this.selected.indexOf(row) !== -1;\n  }\n\n  loadChildren(parent: FileNode): Promise<FileNode[]> {\n    return new Promise<FileNode[]>(resolve => {\n      setTimeout(() => {\n        const index = this.asyncItems.indexOf(parent);\n        const result: FileNode[] = [];\n        for (let i = 0; i < 10; i += 1) {\n          result.push({\n            title: `Document ${index * 10 + i + 1}`,\n            author: chance.name(),\n            date: chance.date(),\n            type: 'file',\n          });\n        }\n        resolve(result);\n      }, 2000);\n    });\n  }\n\n  flatten(items: FileNode[]): FileNode[] {\n    return items.reduce((previous, item) => {\n      const children = item.children ? this.flatten(item.children) : [];\n      return [...previous, item, ...children];\n    }, []);\n  }\n\n  clearChildren(): void {\n    for (const item of this.asyncItems) {\n      item.expanded = false;\n      delete item.children;\n    }\n  }\n\n  setExpanded(items: FileNode[], expanded: boolean): void {\n    for (const item of items) {\n      item.expanded = expanded;\n    }\n  }\n\n  getIcon(item: FileNode): string {\n    if (item.type === 'folder' && !item.expanded) {\n      return 'folder';\n    }\n\n    if (item.type === 'folder' && item.expanded) {\n      return 'folder-open';\n    }\n\n    if (item.type === 'file') {\n      return 'document';\n    }\n  }\n}\n\ninterface FileNode extends TreeGridItem {\n  title: string;\n  author?: string;\n  date?: Date;\n  type: 'folder' | 'file';\n  children?: FileNode[];\n  selected?: boolean;\n}\n"}},38242:_=>{_.exports={snippet:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>tree-view-example-container<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tree-root</span>\n    <span class="token attr-name">#tree</span>\n    <span class="token attr-name">role</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>tree<span class="token punctuation">"</span></span>\n    <span class="token attr-name">[nodes]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>nodes<span class="token punctuation">"</span></span>\n    <span class="token attr-name">[options]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>options<span class="token punctuation">"</span></span>\n    <span class="token attr-name">(focus)</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>focused = $event.node<span class="token punctuation">"</span></span>\n    <span class="token attr-name">(stateChange)</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>updatedFocusedItem()<span class="token punctuation">"</span></span>\n    <span class="token attr-name">(loadNodeChildren)</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>onChildrenLoaded($event.node)<span class="token punctuation">"</span></span>\n  <span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ng-template</span> <span class="token attr-name">#treeNodeFullTemplate</span> <span class="token attr-name">let-node</span> <span class="token attr-name">let-index</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>index<span class="token punctuation">"</span></span> <span class="token attr-name">let-templates</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>templates<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>tree-node<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>node-wrapper<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ux-checkbox</span>\n            <span class="token attr-name">aria-label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Toggle selection of {{ node.data.name }}<span class="token punctuation">"</span></span>\n            <span class="token attr-name">tabindex</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>-1<span class="token punctuation">"</span></span>\n            <span class="token attr-name">[value]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>node.data.checked<span class="token punctuation">"</span></span>\n            <span class="token attr-name">(valueChange)</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>setChecked(node, $event)<span class="token punctuation">"</span></span>\n            <span class="token attr-name">[indeterminateValue]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>-1<span class="token punctuation">"</span></span>\n          <span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ux-checkbox</span><span class="token punctuation">></span></span>\n\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tree-node-expander</span> <span class="token attr-name">[node]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>node<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tree-node-expander</span><span class="token punctuation">></span></span>\n\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span>\n            <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>node-content-wrapper<span class="token punctuation">"</span></span>\n            <span class="token attr-name">uxFocusIndicator</span>\n            <span class="token attr-name">[class.node-content-wrapper-active]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>node.data.checked<span class="token punctuation">"</span></span>\n            <span class="token attr-name">[class.node-content-wrapper-focused]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>node.data.checked || node.isFocused<span class="token punctuation">"</span></span>\n            <span class="token attr-name">role</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>treeitem<span class="token punctuation">"</span></span>\n            <span class="token attr-name">[attr.aria-expanded]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>node.isExpanded<span class="token punctuation">"</span></span>\n            <span class="token attr-name">[attr.aria-level]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>node.level<span class="token punctuation">"</span></span>\n            <span class="token attr-name">[tabindex]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>node === focused || !focused &amp;&amp; node.isRoot &amp;&amp; node.index === 0 ? 0 : -1<span class="token punctuation">"</span></span>\n            <span class="token attr-name">(focus)</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>focus(node)<span class="token punctuation">"</span></span>\n            <span class="token attr-name">[focusIf]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>node === focused<span class="token punctuation">"</span></span>\n            <span class="token attr-name">(click)</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>setChecked(node, !node.data.checked)<span class="token punctuation">"</span></span>\n            <span class="token attr-name">(keydown)</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>setChecked(node, !node.data.checked, $event)<span class="token punctuation">"</span></span>\n          <span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ux-icon</span> <span class="token attr-name">[name]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>getIcon(node)<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ux-icon</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">[class.title]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>{{ node.data.name }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tree-node-children</span> <span class="token attr-name">role</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>group<span class="token punctuation">"</span></span> <span class="token attr-name">[node]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>node<span class="token punctuation">"</span></span> <span class="token attr-name">[templates]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>templates<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tree-node-children</span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ng-template</span><span class="token punctuation">></span></span>\n\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ng-template</span> <span class="token attr-name">#loadingTemplate</span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>spinner spinner-accent spinner-bounce-middle<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ng-template</span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tree-root</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>btn-container<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>btn button-secondary<span class="token punctuation">"</span></span> <span class="token attr-name">(click)</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>tree.treeModel.expandAll()<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n    Expand All Nodes\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>btn button-secondary<span class="token punctuation">"</span></span> <span class="token attr-name">(click)</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>tree.treeModel.collapseAll()<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n    Collapse All Nodes\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n'}},38499:_=>{_.exports={snippet:'<span class="token keyword">import</span> <span class="token punctuation">{</span> TreeNode <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@ali-hm/angular-tree-component\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> Component <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@angular/core\'</span><span class="token punctuation">;</span>\n\n@<span class="token function">Component</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token literal-property property">selector</span><span class="token operator">:</span> <span class="token string">\'app-root\'</span><span class="token punctuation">,</span>\n  <span class="token literal-property property">templateUrl</span><span class="token operator">:</span> <span class="token string">\'./app.component.html\'</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">AppComponent</span> <span class="token punctuation">{</span>\n  <span class="token literal-property property">nodes</span><span class="token operator">:</span> TreeViewExampleNode<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>\n    <span class="token punctuation">{</span>\n      <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">\'Documents\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">children</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n        <span class="token punctuation">{</span>\n          <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token number">12</span><span class="token punctuation">,</span>\n          <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">\'Profiles\'</span><span class="token punctuation">,</span>\n          <span class="token literal-property property">children</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n            <span class="token punctuation">{</span>\n              <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">\'Alcazar\'</span><span class="token punctuation">,</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            <span class="token punctuation">{</span>\n              <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">\'Citadel\'</span><span class="token punctuation">,</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            <span class="token punctuation">{</span>\n              <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">\'Donjon\'</span><span class="token punctuation">,</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">]</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">{</span>\n          <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token number">11</span><span class="token punctuation">,</span>\n          <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">\'Word files\'</span><span class="token punctuation">,</span>\n          <span class="token literal-property property">children</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n            <span class="token punctuation">{</span>\n              <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token number">111</span><span class="token punctuation">,</span>\n              <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">\'Accounts\'</span><span class="token punctuation">,</span>\n              <span class="token literal-property property">children</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n                <span class="token punctuation">{</span>\n                  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">\'Castle\'</span><span class="token punctuation">,</span>\n                <span class="token punctuation">}</span><span class="token punctuation">,</span>\n                <span class="token punctuation">{</span>\n                  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">\'Estate\'</span><span class="token punctuation">,</span>\n                <span class="token punctuation">}</span><span class="token punctuation">,</span>\n                <span class="token punctuation">{</span>\n                  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">\'Manor\'</span><span class="token punctuation">,</span>\n                <span class="token punctuation">}</span><span class="token punctuation">,</span>\n                <span class="token punctuation">{</span>\n                  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">\'Mansion\'</span><span class="token punctuation">,</span>\n                <span class="token punctuation">}</span><span class="token punctuation">,</span>\n                <span class="token punctuation">{</span>\n                  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">\'Villa\'</span><span class="token punctuation">,</span>\n                <span class="token punctuation">}</span><span class="token punctuation">,</span>\n              <span class="token punctuation">]</span><span class="token punctuation">,</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">]</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">]</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span>\n      <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">\'Emails\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">children</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n        <span class="token punctuation">{</span>\n          <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token number">21</span><span class="token punctuation">,</span>\n          <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">\'Inbox\'</span><span class="token punctuation">,</span>\n          <span class="token literal-property property">children</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">\'Invoice\'</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">\'Order Confirmation\'</span> <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">{</span>\n          <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token number">22</span><span class="token punctuation">,</span>\n          <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">\'Outbox\'</span><span class="token punctuation">,</span>\n          <span class="token literal-property property">children</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">\'Customer Support\'</span> <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">]</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span>\n      <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">\'Pictures\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">children</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">\'IMG_001.jpg\'</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">\'IMG_002.jpg\'</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">\'IMG_003.jpg\'</span> <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n  <span class="token literal-property property">focused</span><span class="token operator">:</span> TreeNode<span class="token punctuation">;</span>\n\n  <span class="token comment">/**\n   * If tree view is tabbed to, focus the node\n   */</span>\n  <span class="token function">focus</span><span class="token punctuation">(</span>node<span class="token operator">:</span> TreeNode<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>\n    node<span class="token punctuation">.</span><span class="token function">focus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    node<span class="token punctuation">.</span>treeModel<span class="token punctuation">.</span><span class="token function">setFocus</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token comment">/** Ensure the blur state is updated consistently */</span>\n  <span class="token function">blur</span><span class="token punctuation">(</span>node<span class="token operator">:</span> TreeNode<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>focused <span class="token operator">===</span> node<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      node<span class="token punctuation">.</span><span class="token function">blur</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n      node<span class="token punctuation">.</span>treeModel<span class="token punctuation">.</span><span class="token function">setFocus</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token function">getIcon</span><span class="token punctuation">(</span>node<span class="token operator">:</span> TreeNode<span class="token punctuation">)</span><span class="token operator">:</span> string <span class="token punctuation">{</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>node<span class="token punctuation">.</span>hasChildren <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>node<span class="token punctuation">.</span>isExpanded<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token keyword">return</span> <span class="token string">\'folder\'</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>node<span class="token punctuation">.</span>hasChildren <span class="token operator">&amp;&amp;</span> node<span class="token punctuation">.</span>isExpanded<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token keyword">return</span> <span class="token string">\'folder-open\'</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>node<span class="token punctuation">.</span>hasChildren<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token keyword">return</span> <span class="token string">\'document\'</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">export</span> <span class="token keyword">interface</span> <span class="token class-name">TreeViewExampleNode</span> <span class="token punctuation">{</span>\n  id<span class="token operator">?</span><span class="token operator">:</span> number<span class="token punctuation">;</span>\n  <span class="token literal-property property">name</span><span class="token operator">:</span> string<span class="token punctuation">;</span>\n  children<span class="token operator">?</span><span class="token operator">:</span> TreeViewExampleNode<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n'}},48048:(_,Fn,u)=>{var a={"./app.snippet.css":30210,"./app.snippet.html":38242,"./app.snippet.ts":57470,"./service.snippet.ts":92230,"docs/app/pages/components/components-sections/tree-view/tree-view-custom-node/snippets/app.snippet.css":30210,"docs/app/pages/components/components-sections/tree-view/tree-view-custom-node/snippets/app.snippet.html":38242,"docs/app/pages/components/components-sections/tree-view/tree-view-custom-node/snippets/app.snippet.ts":57470,"docs/app/pages/components/components-sections/tree-view/tree-view-custom-node/snippets/service.snippet.ts":92230};function y(C){var w=L(C);return u(w)}function L(C){if(!u.o(a,C)){var w=new Error("Cannot find module '"+C+"'");throw w.code="MODULE_NOT_FOUND",w}return a[C]}y.keys=function(){return Object.keys(a)},y.resolve=L,_.exports=y,y.id=48048},49713:_=>{_.exports={snippet:'<span class="token selector">.tree-view-example-container</span> <span class="token punctuation">{</span>\n  <span class="token property">height</span><span class="token punctuation">:</span> 250px<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.tree-view-node</span> <span class="token punctuation">{</span>\n  <span class="token property">outline</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.tree-view-node.ux-focus-indicator-active > .node-content-wrapper</span> <span class="token punctuation">{</span>\n  <span class="token property">outline</span><span class="token punctuation">:</span> 2px dotted<span class="token punctuation">;</span>\n  <span class="token property">outline</span><span class="token punctuation">:</span> auto -webkit-focus-ring-color<span class="token punctuation">;</span>\n  <span class="token property">outline-color</span><span class="token punctuation">:</span> #00a7a2<span class="token punctuation">;</span>\n  <span class="token property">outline-offset</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.node-content-wrapper</span> <span class="token punctuation">{</span>\n  <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>\n  <span class="token property">align-items</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n'}},57470:_=>{_.exports={snippet:'<span class="token keyword">import</span> <span class="token punctuation">{</span> TreeNode <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@ali-hm/angular-tree-component\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> Component <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@angular/core\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> TreeViewService <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'./service.ts\'</span><span class="token punctuation">;</span>\n\n@<span class="token function">Component</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token literal-property property">selector</span><span class="token operator">:</span> <span class="token string">\'app-root\'</span><span class="token punctuation">,</span>\n  <span class="token literal-property property">templateUrl</span><span class="token operator">:</span> <span class="token string">\'./app.html\'</span><span class="token punctuation">,</span>\n  <span class="token literal-property property">styleUrls</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">\'./app.css\'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">AppComponent</span> <span class="token punctuation">{</span>\n  <span class="token literal-property property">nodes</span><span class="token operator">:</span> TreeViewExampleNode<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>\n    <span class="token punctuation">{</span>\n      <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">\'Documents\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">hasChildren</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">source</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>_treeViewService<span class="token punctuation">.</span>getDocuments<span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span>\n      <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">\'Pictures\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">hasChildren</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">source</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>_treeViewService<span class="token punctuation">.</span>getPictures<span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n  options <span class="token operator">=</span> <span class="token punctuation">{</span>\n    <span class="token function-variable function">getChildren</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">node</span><span class="token operator">:</span> TreeNode</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>node<span class="token punctuation">.</span>data<span class="token punctuation">.</span>source <span class="token operator">?</span> node<span class="token punctuation">.</span>data<span class="token punctuation">.</span><span class="token function">source</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token literal-property property">focused</span><span class="token operator">:</span> TreeNode<span class="token punctuation">;</span>\n\n  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter"><span class="token keyword">private</span> readonly _treeViewService<span class="token operator">:</span> TreeViewService</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>\n\n  <span class="token comment">/**\n   * When a node is checked the state of it\'s children should be updated (if there are any)\n   * and the state of all parent nodes should also be updated (if there are any).\n   */</span>\n  <span class="token function">setChecked</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">node</span><span class="token operator">:</span> TreeNode<span class="token punctuation">,</span> <span class="token literal-property property">checked</span><span class="token operator">:</span> boolean <span class="token operator">=</span> node<span class="token punctuation">.</span>data<span class="token punctuation">.</span>checked<span class="token punctuation">,</span> event<span class="token operator">?</span><span class="token operator">:</span> KeyboardEvent</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token comment">// if the value of the node has not changed then do nothing</span>\n    <span class="token comment">// or if triggered by keyboard only react when spacebar is pressed</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>node<span class="token punctuation">.</span>data<span class="token punctuation">.</span>checked <span class="token operator">===</span> checked <span class="token operator">||</span> <span class="token punctuation">(</span>event <span class="token operator">&amp;&amp;</span> event<span class="token punctuation">.</span>keyCode <span class="token operator">!==</span> <span class="token number">32</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token keyword">return</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setChildrenState</span><span class="token punctuation">(</span>node<span class="token punctuation">,</span> checked<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setParentNodeState</span><span class="token punctuation">(</span>node<span class="token punctuation">.</span>realParent<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token comment">// if the spacebar key was pressed then prevent the default behavior</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>event<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      event<span class="token punctuation">.</span><span class="token function">preventDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token comment">/**\n   * Update the checked state of a nodes children, eg.\n   * If the node is checked then all children should also be checked\n   * If the node is unchecked then all children should be unchecked\n   */</span>\n  <span class="token function">setChildrenState</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">node</span><span class="token operator">:</span> TreeNode<span class="token punctuation">,</span> <span class="token literal-property property">checked</span><span class="token operator">:</span> boolean <span class="token operator">=</span> node<span class="token punctuation">.</span>data<span class="token punctuation">.</span>checked</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    node<span class="token punctuation">.</span>data<span class="token punctuation">.</span>checked <span class="token operator">=</span> checked<span class="token punctuation">;</span>\n\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>node<span class="token punctuation">.</span>children<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      node<span class="token punctuation">.</span>children<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">child</span> <span class="token operator">=></span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setChildrenState</span><span class="token punctuation">(</span>child<span class="token punctuation">,</span> checked<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token comment">/**\n   * Update a nodes checked state to reflect the state of it\'s children, eg.\n   * If all child nodes are checked then the parent should be selected\n   * If all child nodes are unchecked then the parent node should also be deselected\n   * If some nodes are checked then the checkbox should show an indeterminate state\n   */</span>\n  <span class="token function">setParentNodeState</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">node</span><span class="token operator">:</span> TreeNode</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>node<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token keyword">return</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword">const</span> allChildrenChecked <span class="token operator">=</span> node<span class="token punctuation">.</span>children<span class="token punctuation">.</span><span class="token function">every</span><span class="token punctuation">(</span><span class="token parameter">child</span> <span class="token operator">=></span> child<span class="token punctuation">.</span>data<span class="token punctuation">.</span>checked<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">const</span> noChildrenChecked <span class="token operator">=</span> node<span class="token punctuation">.</span>children<span class="token punctuation">.</span><span class="token function">every</span><span class="token punctuation">(</span><span class="token parameter">child</span> <span class="token operator">=></span> <span class="token operator">!</span>child<span class="token punctuation">.</span>data<span class="token punctuation">.</span>checked<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>allChildrenChecked<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      node<span class="token punctuation">.</span>data<span class="token punctuation">.</span>checked <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>noChildrenChecked<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      node<span class="token punctuation">.</span>data<span class="token punctuation">.</span>checked <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n      node<span class="token punctuation">.</span>data<span class="token punctuation">.</span>checked <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setParentNodeState</span><span class="token punctuation">(</span>node<span class="token punctuation">.</span>parent<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token comment">/**\n   * When a node lazy loads it\'s children, update their checkboxes to reflect\n   * the current state of the parent node.\n   */</span>\n  <span class="token function">onChildrenLoaded</span><span class="token punctuation">(</span>node<span class="token operator">:</span> TreeNode<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setChildrenState</span><span class="token punctuation">(</span>node<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token comment">/**\n   * If tree view is tabbed to, focus the node\n   */</span>\n  <span class="token function">focus</span><span class="token punctuation">(</span>node<span class="token operator">:</span> TreeNode<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>\n    node<span class="token punctuation">.</span><span class="token function">focus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    node<span class="token punctuation">.</span>treeModel<span class="token punctuation">.</span><span class="token function">setFocus</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token comment">/**\n   * Ensure that the focused node is visible, otherwise reset it\n   */</span>\n  <span class="token function">updatedFocusedItem</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>\n    <span class="token comment">// check if the focused node is still visible</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">isNodeVisible</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>focused<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token keyword">this</span><span class="token punctuation">.</span>focused <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token function">isNodeVisible</span><span class="token punctuation">(</span>node<span class="token operator">:</span> TreeNode<span class="token punctuation">)</span><span class="token operator">:</span> boolean <span class="token punctuation">{</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>node<span class="token punctuation">.</span>isRoot<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>node<span class="token punctuation">.</span>parent<span class="token punctuation">.</span>isCollapsed<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">isNodeVisible</span><span class="token punctuation">(</span>node<span class="token punctuation">.</span>parent<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token function">getIcon</span><span class="token punctuation">(</span>node<span class="token operator">:</span> TreeNode<span class="token punctuation">)</span><span class="token operator">:</span> string <span class="token punctuation">{</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>node<span class="token punctuation">.</span>hasChildren <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>node<span class="token punctuation">.</span>isExpanded<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token keyword">return</span> <span class="token string">\'folder\'</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>node<span class="token punctuation">.</span>hasChildren <span class="token operator">&amp;&amp;</span> node<span class="token punctuation">.</span>isExpanded<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token keyword">return</span> <span class="token string">\'folder-open\'</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>node<span class="token punctuation">.</span>hasChildren<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token keyword">return</span> <span class="token string">\'document\'</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">export</span> <span class="token keyword">interface</span> <span class="token class-name">TreeViewExampleNode</span> <span class="token punctuation">{</span>\n  <span class="token literal-property property">name</span><span class="token operator">:</span> string<span class="token punctuation">;</span>\n  children<span class="token operator">?</span><span class="token operator">:</span> TreeViewExampleNode<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n  hasChildren<span class="token operator">?</span><span class="token operator">:</span> boolean<span class="token punctuation">;</span>\n  source<span class="token operator">?</span><span class="token operator">:</span> Function<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n'}},60084:(_,Fn,u)=>{"use strict";u.r(Fn),u.d(Fn,{ComponentsTreeViewModule:()=>zo});var a=u(17931),y=u(93965),L=function(t,s){return(L=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,e){n.__proto__=e}||function(n,e){for(var o in e)e.hasOwnProperty(o)&&(n[o]=e[o])})(t,s)};function C(t,s){function n(){this.constructor=t}L(t,s),t.prototype=null===s?Object.create(s):(n.prototype=s.prototype,new n)}var w=function(){return w=Object.assign||function(s){for(var n,e=1,o=arguments.length;e<o;e++)for(var p in n=arguments[e])Object.prototype.hasOwnProperty.call(n,p)&&(s[p]=n[p]);return s},w.apply(this,arguments)};function Qt(t,s){var n="function"==typeof Symbol&&t[Symbol.iterator];if(!n)return t;var o,r,e=n.call(t),p=[];try{for(;(void 0===s||s-- >0)&&!(o=e.next()).done;)p.push(o.value)}catch(c){r={error:c}}finally{try{o&&!o.done&&(n=e.return)&&n.call(e)}finally{if(r)throw r.error}}return p}function rt(){for(var t=[],s=0;s<arguments.length;s++)t=t.concat(Qt(arguments[s]));return t}var qn=[];Object.freeze(qn);var ct={};Object.freeze(ct);var ca={};function On(){return typeof window<"u"?window:typeof global<"u"?global:ca}function G(){return++i.mobxGuid}function d(t){throw kn(!1,t),"X"}function kn(t,s){if(!t)throw new Error("[mobx] "+(s||"An invariant failed, however the error is obfuscated because this is an production build."))}function it(t){var s=!1;return function(){if(!s)return s=!0,t.apply(this,arguments)}}var Hn=function(){};function lt(t){return null!==t&&"object"==typeof t}function vn(t){if(null===t||"object"!=typeof t)return!1;var s=Object.getPrototypeOf(t);return s===Object.prototype||null===s}function hn(t,s,n){Object.defineProperty(t,s,{enumerable:!1,writable:!0,configurable:!0,value:n})}function An(t,s,n){Object.defineProperty(t,s,{enumerable:!1,writable:!1,configurable:!0,value:n})}function pn(t,s){var n="isMobX"+t;return s.prototype[n]=!0,function(e){return lt(e)&&!0===e[n]}}function yn(t){return void 0!==On().Map&&t instanceof On().Map}function Sn(t){return t instanceof Set}function nn(t){for(var s=[];;){var n=t.next();if(n.done)break;s.push(n.value)}return s}function ns(){return"function"==typeof Symbol&&Symbol.toPrimitive||"@@toPrimitive"}function ts(t){return null===t?null:"object"==typeof t?""+t:t}function ut(){return"function"==typeof Symbol&&Symbol.iterator||"@@iterator"}function dt(t,s){An(t,ut(),s)}function In(t){return t[ut()]=ka,t}function kt(){return"function"==typeof Symbol&&Symbol.toStringTag||"@@toStringTag"}function ka(){return this}var Un=function(){function t(s){void 0===s&&(s="Atom@"+G()),this.name=s,this.isPendingUnobservation=!1,this.isBeingObserved=!1,this.observers=[],this.observersIndexes={},this.diffValue=0,this.lastAccessedBy=0,this.lowestObserverState=b.NOT_TRACKING}return t.prototype.onBecomeUnobserved=function(){},t.prototype.onBecomeObserved=function(){},t.prototype.reportObserved=function(){return vs(this)},t.prototype.reportChanged=function(){q(),function Ma(t){if(t.lowestObserverState!==b.STALE){t.lowestObserverState=b.STALE;for(var s=t.observers,n=s.length;n--;){var e=s[n];e.dependenciesState===b.UP_TO_DATE&&(e.isTracing!==J.NONE&&ys(e,t),e.onBecomeStale()),e.dependenciesState=b.STALE}}}(this),H()},t.prototype.toString=function(){return this.name},t}(),ht=pn("Atom",Un);function ss(t,s){return t===s}var bn={identity:ss,structural:function fa(t,s){return Tt(t,s)},default:function ga(t,s){return function da(t,s){return"number"==typeof t&&"number"==typeof s&&isNaN(t)&&isNaN(s)}(t,s)||ss(t,s)},shallow:function ma(t,s){return Tt(t,s,1)}},va={},ya={};function fn(t){if(!0!==t.__mobxDidRunLazyInitializers){var s=t.__mobxDecorators;if(s)for(var n in hn(t,"__mobxDidRunLazyInitializers",!0),s){var e=s[n];e.propertyCreator(t,e.prop,e.descriptor,e.decoratorTarget,e.decoratorArguments)}}}function as(t,s){return function(){var e,o=function(r,c,l,f){return!0===f?(s(r,c,l,r,e),null):(Object.prototype.hasOwnProperty.call(r,"__mobxDecorators")||hn(r,"__mobxDecorators",w({},r.__mobxDecorators)),r.__mobxDecorators[c]={prop:c,propertyCreator:s,descriptor:l,decoratorTarget:r,decoratorArguments:e},function ba(t,s){var n=s?va:ya;return n[t]||(n[t]={configurable:!0,enumerable:s,get:function(){return fn(this),this[t]},set:function(e){fn(this),this[t]=e}})}(c,t))};return function wa(t){return(2===t.length||3===t.length)&&"string"==typeof t[1]||4===t.length&&!0===t[3]}(arguments)?(e=qn,o.apply(null,arguments)):(e=Array.prototype.slice.call(arguments),o)}}function Rn(t,s,n){return tt(t)?t:Array.isArray(t)?g.array(t,{name:n}):vn(t)?g.object(t,void 0,{name:n}):yn(t)?g.map(t,{name:n}):Sn(t)?g.set(t,{name:n}):t}function Gn(t){return t}function Yn(t){var s=as(!0,function(e,o,p,r,c){!function Ms(t,s,n,e){var o=Et(t);if(Q(o)){var p=Z(o,{object:t,name:s,type:"add",newValue:n});if(!p)return;n=p.newValue}n=(o.values[s]=new ln(n,e,o.name+"."+s,!1)).value,Object.defineProperty(t,s,function ge(t){return Vs[t]||(Vs[t]={configurable:!0,enumerable:!0,get:function(){return this.$mobx.read(this,t)},set:function(s){this.$mobx.write(this,t,s)}})}(s)),o.keys&&o.keys.push(s),function ye(t,s,n,e){var o=X(t),p=O(),r=o||p?{type:"add",object:s,name:n,newValue:e}:null;p&&U(w({},r,{name:t.name,key:n})),o&&z(t,r),p&&Y()}(o,t,s,n)}(e,o,p?p.initializer?p.initializer.call(e):p.value:void 0,t)}),n=(typeof process<"u"&&process,s);return n.enhancer=t,n}var es={deep:!0,name:void 0,defaultDecorator:void 0};function wn(t){return null==t?es:"string"==typeof t?{name:t,deep:!0}:t}function Xn(t){return t.defaultDecorator?t.defaultDecorator.enhancer:!1===t.deep?Gn:Rn}Object.freeze(es),Object.freeze({deep:!1,name:void 0,defaultDecorator:void 0});var ft=Yn(Rn),Ca=Yn(function xa(t,s,n){return null==t||V(t)||j(t)||A(t)||M(t)?t:Array.isArray(t)?g.array(t,{name:n,deep:!1}):vn(t)?g.object(t,void 0,{name:n,deep:!1}):yn(t)?g.map(t,{name:n,deep:!1}):Sn(t)?g.set(t,{name:n,deep:!1}):d(!1)}),ps=Yn(Gn),Ea=Yn(function _a(t,s,n){return Tt(t,s)?s:t}),rs={box:function(t,s){arguments.length>2&&tn("box");var n=wn(s);return new ln(t,Xn(n),n.name,!0,n.equals)},shallowBox:function(t,s){return arguments.length>2&&tn("shallowBox"),g.box(t,{name:s,deep:!1})},array:function(t,s){arguments.length>2&&tn("array");var n=wn(s);return new an(t,Xn(n),n.name)},shallowArray:function(t,s){return arguments.length>2&&tn("shallowArray"),g.array(t,{name:s,deep:!1})},map:function(t,s){arguments.length>2&&tn("map");var n=wn(s);return new st(t,Xn(n),n.name)},shallowMap:function(t,s){return arguments.length>2&&tn("shallowMap"),g.map(t,{name:s,deep:!1})},set:function(t,s){arguments.length>2&&tn("set");var n=wn(s);return new et(t,Xn(n),n.name)},object:function(t,s,n){return"string"==typeof arguments[1]&&tn("object"),function Ds(t,s,n,e){var p=(e=wn(e)).defaultDecorator||(!1===e.deep?ps:ft);fn(t),Et(t,e.name,p.enhancer),q();try{for(var o in s){var r=Object.getOwnPropertyDescriptor(s,o),l=(n&&o in n?n[o]:r.get?zn:p)(t,o,r,!0);l&&Object.defineProperty(t,o,l)}}finally{H()}return t}({},t,s,wn(n))},shallowObject:function(t,s){return"string"==typeof arguments[1]&&tn("shallowObject"),g.object(t,{},{name:s,deep:!1})},ref:ps,shallow:Ca,deep:ft,struct:Ea},g=function Ta(t,s,n){if("string"==typeof arguments[1])return ft.apply(null,arguments);if(tt(t))return t;var e=vn(t)?g.object(t,s,n):Array.isArray(t)?g.array(t,s):yn(t)?g.map(t,s):Sn(t)?g.set(t,s):t;if(e!==t)return e;d(!1)};function tn(t){d("Expected one or two arguments to observable."+t+". Did you accidentally try to use observable."+t+" as decorator?")}Object.keys(rs).forEach(function(t){return g[t]=rs[t]});var zn=as(!1,function(t,s,n,e,o){!function me(t,s,n){var e=Et(t);n.name=e.name+"."+s,n.context=t,e.values[s]=new un(n),Object.defineProperty(t,s,function ve(t){return Ps[t]||(Ps[t]={configurable:i.computedConfigurable,enumerable:!1,get:function(){return $s(this).read(this,t)},set:function(s){$s(this).write(this,t,s)}})}(s))}(t,s,w({get:n.get,set:n.set},o[0]||{}))}),Da=zn({equals:bn.structural}),D=function(s,n,e){if("string"==typeof n||null!==s&&"object"==typeof s&&1===arguments.length)return zn.apply(null,arguments);var o="object"==typeof n?n:{};return o.get=s,o.set="function"==typeof n?n:o.set,o.name=o.name||s.name||"",new un(o)};D.struct=Da;var b=function(t){return t[t.NOT_TRACKING=-1]="NOT_TRACKING",t[t.UP_TO_DATE=0]="UP_TO_DATE",t[t.POSSIBLY_STALE=1]="POSSIBLY_STALE",t[t.STALE=2]="STALE",t}(b||{}),J=function(t){return t[t.NONE=0]="NONE",t[t.LOG=1]="LOG",t[t.BREAK=2]="BREAK",t}(J||{}),Wn=function(){return function t(s){this.cause=s}}();function jn(t){return t instanceof Wn}function mt(t){switch(t.dependenciesState){case b.UP_TO_DATE:return!1;case b.NOT_TRACKING:case b.STALE:return!0;case b.POSSIBLY_STALE:for(var s=xn(),n=t.observing,e=n.length,o=0;o<e;o++){var p=n[o];if(_n(p)){if(i.disableErrorBoundaries)p.get();else try{p.get()}catch{return rn(s),!0}if(t.dependenciesState===b.STALE)return rn(s),!0}}return ds(t),rn(s),!1}}function Kn(t){var s=t.observers.length>0;i.computationDepth>0&&s&&d(!1),!i.allowStateChanges&&(s||"strict"===i.enforceActions)&&d(!1)}function cs(t,s,n){var e=ls(!0);ds(t),t.newObserving=new Array(t.observing.length+100),t.unboundDepsCount=0,t.runId=++i.runId;var p,o=i.trackingDerivation;if(i.trackingDerivation=t,!0===i.disableErrorBoundaries)p=s.call(n);else try{p=s.call(n)}catch(r){p=new Wn(r)}return i.trackingDerivation=o,function Na(t){for(var s=t.observing,n=t.observing=t.newObserving,e=b.UP_TO_DATE,o=0,p=t.unboundDepsCount,r=0;r<p;r++)0===(c=n[r]).diffValue&&(c.diffValue=1,o!==r&&(n[o]=c),o++),c.dependenciesState>e&&(e=c.dependenciesState);for(n.length=o,t.newObserving=null,p=s.length;p--;)0===(c=s[p]).diffValue&&ms(c,t),c.diffValue=0;for(;o--;){var c;1===(c=n[o]).diffValue&&(c.diffValue=0,ja(c,t))}e!==b.UP_TO_DATE&&(t.dependenciesState=e,t.onBecomeStale())}(t),us(e),p}function gt(t){var s=t.observing;t.observing=[];for(var n=s.length;n--;)ms(s[n],t);t.dependenciesState=b.NOT_TRACKING}function is(t){var s=xn(),n=t();return rn(s),n}function xn(){var t=i.trackingDerivation;return i.trackingDerivation=null,t}function rn(t){i.trackingDerivation=t}function ls(t){var s=i.allowStateReads;return i.allowStateReads=t,s}function us(t){i.allowStateReads=t}function ds(t){if(t.dependenciesState!==b.UP_TO_DATE){t.dependenciesState=b.UP_TO_DATE;for(var s=t.observing,n=s.length;n--;)s[n].lowestObserverState=b.UP_TO_DATE}}var Jn=0,Fa=1;function cn(t,s){var n=function(){return function ks(t,s,n,e){var o=function Oa(t,s,n){var e=O()&&!!t,o=0;if(e){o=Date.now();var p=n&&n.length||0,r=new Array(p);if(p>0)for(var c=0;c<p;c++)r[c]=n[c];U({type:"action",name:t,object:s,arguments:r})}var l=xn();q();var T={prevDerivation:l,prevAllowStateChanges:vt(!0),prevAllowStateReads:ls(!0),notifySpy:e,startTime:o,actionId:Fa++,parentActionId:Jn};return Jn=T.actionId,T}(t,n,e);try{return s.apply(n,e)}catch(p){throw o.error=p,p}finally{!function Aa(t){Jn!==t.actionId&&d("invalid action stack. did you forget to finish an action?"),Jn=t.parentActionId,void 0!==t.error&&(i.suppressReactionErrors=!0),yt(t.prevAllowStateChanges),us(t.prevAllowStateReads),H(),rn(t.prevDerivation),t.notifySpy&&Y({time:Date.now()-t.startTime}),i.suppressReactionErrors=!1}(o)}}(t,s,this,arguments)};return n.isMobxAction=!0,n}function vt(t){var s=i.allowStateChanges;return i.allowStateChanges=t,s}function yt(t){i.allowStateChanges=t}var ln=function(t){function s(n,e,o,p,r){void 0===o&&(o="ObservableValue@"+G()),void 0===p&&(p=!0),void 0===r&&(r=bn.default);var c=t.call(this,o)||this;return c.enhancer=e,c.name=o,c.equals=r,c.hasUnreportedChange=!1,c.value=e(n,void 0,o),p&&O()&&mn({type:"create",name:c.name,newValue:""+c.value}),c}return C(s,t),s.prototype.dehanceValue=function(n){return void 0!==this.dehancer?this.dehancer(n):n},s.prototype.set=function(n){var e=this.value;if((n=this.prepareNewValue(n))!==i.UNCHANGED){var o=O();o&&U({type:"update",name:this.name,newValue:n,oldValue:e}),this.setNewValue(n),o&&Y()}},s.prototype.prepareNewValue=function(n){if(Kn(this),Q(this)){var e=Z(this,{object:this,type:"update",newValue:n});if(!e)return i.UNCHANGED;n=e.newValue}return n=this.enhancer(n,this.value,this.name),this.equals(this.value,n)?i.UNCHANGED:n},s.prototype.setNewValue=function(n){var e=this.value;this.value=n,this.reportChanged(),X(this)&&z(this,{type:"update",object:this,newValue:n,oldValue:e})},s.prototype.get=function(){return this.reportObserved(),this.dehanceValue(this.value)},s.prototype.intercept=function(n){return $n(this,n)},s.prototype.observe=function(n,e){return e&&n({object:this,type:"update",newValue:this.value,oldValue:void 0}),Ln(this,n)},s.prototype.toJSON=function(){return this.get()},s.prototype.toString=function(){return this.name+"["+this.value+"]"},s.prototype.valueOf=function(){return ts(this.get())},s}(Un);ln.prototype[ns()]=ln.prototype.valueOf,pn("ObservableValue",ln);var un=function(){function t(s){this.dependenciesState=b.NOT_TRACKING,this.observing=[],this.newObserving=null,this.isBeingObserved=!1,this.isPendingUnobservation=!1,this.observers=[],this.observersIndexes={},this.diffValue=0,this.runId=0,this.lastAccessedBy=0,this.lowestObserverState=b.UP_TO_DATE,this.unboundDepsCount=0,this.__mapid="#"+G(),this.value=new Wn(null),this.isComputing=!1,this.isRunningSetter=!1,this.isTracing=J.NONE,this.derivation=s.get,this.name=s.name||"ComputedValue@"+G(),s.set&&(this.setter=cn(this.name+"-setter",s.set)),this.equals=s.equals||(s.compareStructural||s.struct?bn.structural:bn.default),this.scope=s.context,this.requiresReaction=!!s.requiresReaction,this.keepAlive=!!s.keepAlive}return t.prototype.onBecomeStale=function(){!function Pa(t){if(t.lowestObserverState===b.UP_TO_DATE){t.lowestObserverState=b.POSSIBLY_STALE;for(var s=t.observers,n=s.length;n--;){var e=s[n];e.dependenciesState===b.UP_TO_DATE&&(e.dependenciesState=b.POSSIBLY_STALE,e.isTracing!==J.NONE&&ys(e,t),e.onBecomeStale())}}}(this)},t.prototype.onBecomeUnobserved=function(){},t.prototype.onBecomeObserved=function(){},t.prototype.get=function(){this.isComputing&&d("Cycle detected in computation "+this.name+": "+this.derivation),0!==i.inBatch||0!==this.observers.length||this.keepAlive?(vs(this),mt(this)&&this.trackAndCompute()&&function Va(t){if(t.lowestObserverState!==b.STALE){t.lowestObserverState=b.STALE;for(var s=t.observers,n=s.length;n--;){var e=s[n];e.dependenciesState===b.POSSIBLY_STALE?e.dependenciesState=b.STALE:e.dependenciesState===b.UP_TO_DATE&&(t.lowestObserverState=b.UP_TO_DATE)}}}(this)):mt(this)&&(this.warnAboutUntrackedRead(),q(),this.value=this.computeValue(!1),H());var s=this.value;if(jn(s))throw s.cause;return s},t.prototype.peek=function(){var s=this.computeValue(!1);if(jn(s))throw s.cause;return s},t.prototype.set=function(s){if(this.setter){kn(!this.isRunningSetter,"The setter of computed value '"+this.name+"' is trying to update itself. Did you intend to update an _observable_ value, instead of the computed property?"),this.isRunningSetter=!0;try{this.setter.call(this.scope,s)}finally{this.isRunningSetter=!1}}else kn(!1,!1)},t.prototype.trackAndCompute=function(){O()&&mn({object:this.scope,type:"compute",name:this.name});var s=this.value,n=this.dependenciesState===b.NOT_TRACKING,e=this.computeValue(!0),o=n||jn(s)||jn(e)||!this.equals(s,e);return o&&(this.value=e),o},t.prototype.computeValue=function(s){var n;if(this.isComputing=!0,i.computationDepth++,s)n=cs(this,this.derivation,this.scope);else if(!0===i.disableErrorBoundaries)n=this.derivation.call(this.scope);else try{n=this.derivation.call(this.scope)}catch(e){n=new Wn(e)}return i.computationDepth--,this.isComputing=!1,n},t.prototype.suspend=function(){this.keepAlive||(gt(this),this.value=void 0)},t.prototype.observe=function(s,n){var e=this,o=!0,p=void 0;return Vn(function(){var r=e.get();if(!o||n){var c=xn();s({type:"update",object:e,newValue:r,oldValue:p}),rn(c)}o=!1,p=r})},t.prototype.warnAboutUntrackedRead=function(){},t.prototype.toJSON=function(){return this.get()},t.prototype.toString=function(){return this.name+"["+this.derivation.toString()+"]"},t.prototype.valueOf=function(){return ts(this.get())},t}();un.prototype[ns()]=un.prototype.valueOf;var t,_n=pn("ComputedValue",un),Mn=function(){return function t(){this.version=5,this.UNCHANGED={},this.trackingDerivation=null,this.computationDepth=0,this.runId=0,this.mobxGuid=0,this.inBatch=0,this.pendingUnobservations=[],this.pendingReactions=[],this.isRunningReactions=!1,this.allowStateChanges=!0,this.allowStateReads=!0,this.enforceActions=!1,this.spyListeners=[],this.globalReactionErrorHandlers=[],this.computedRequiresReaction=!1,this.reactionRequiresObservable=!1,this.observableRequiresReaction=!1,this.computedConfigurable=!1,this.disableErrorBoundaries=!1,this.suppressReactionErrors=!1}}(),Qn=!0,i=((t=On()).__mobxInstanceCount>0&&!t.__mobxGlobals&&(Qn=!1),t.__mobxGlobals&&t.__mobxGlobals.version!==(new Mn).version&&(Qn=!1),Qn?t.__mobxGlobals?(t.__mobxInstanceCount+=1,t.__mobxGlobals.UNCHANGED||(t.__mobxGlobals.UNCHANGED={}),t.__mobxGlobals):(t.__mobxInstanceCount=1,t.__mobxGlobals=new Mn):(setTimeout(function(){d("There are multiple, different versions of MobX active. Make sure MobX is loaded only once or use `configure({ isolateGlobalState: true })`")},1),new Mn));function ja(t,s){var n=t.observers.length;n&&(t.observersIndexes[s.__mapid]=n),t.observers[n]=s,t.lowestObserverState>s.dependenciesState&&(t.lowestObserverState=s.dependenciesState)}function ms(t,s){if(1===t.observers.length)t.observers.length=0,gs(t);else{var n=t.observers,e=t.observersIndexes,o=n.pop();if(o!==s){var p=e[s.__mapid]||0;p?e[o.__mapid]=p:delete e[o.__mapid],n[p]=o}delete e[s.__mapid]}}function gs(t){!1===t.isPendingUnobservation&&(t.isPendingUnobservation=!0,i.pendingUnobservations.push(t))}function q(){i.inBatch++}function H(){if(0==--i.inBatch){xs();for(var t=i.pendingUnobservations,s=0;s<t.length;s++){var n=t[s];n.isPendingUnobservation=!1,0===n.observers.length&&(n.isBeingObserved&&(n.isBeingObserved=!1,n.onBecomeUnobserved()),n instanceof un&&n.suspend())}i.pendingUnobservations=[]}}function vs(t){var s=i.trackingDerivation;return null!==s?(s.runId!==t.lastAccessedBy&&(t.lastAccessedBy=s.runId,s.newObserving[s.unboundDepsCount++]=t,t.isBeingObserved||(t.isBeingObserved=!0,t.onBecomeObserved())),!0):(0===t.observers.length&&i.inBatch>0&&gs(t),!1)}function ys(t,s){if(console.log("[mobx.trace] '"+t.name+"' is invalidated due to a change in: '"+s.name+"'"),t.isTracing===J.BREAK){var n=[];bs(function Ka(t,s){return Ns(W(t,s))}(t),n,1),new Function("debugger;\n/*\nTracing '"+t.name+"'\n\nYou are entering this break point because derivation '"+t.name+"' is being traced and '"+s.name+"' is now forcing it to update.\nJust follow the stacktrace you should now see in the devtools to see precisely what piece of your code is causing this update\nThe stackframe you are looking for is at least ~6-8 stack-frames up.\n\n"+(t instanceof un?t.derivation.toString().replace(/[*]\//g,"/"):"")+"\n\nThe dependencies for this derivation are:\n\n"+n.join("\n")+"\n*/\n    ")()}}function bs(t,s,n){s.length>=1e3?s.push("(and many more)"):(s.push(""+new Array(n).join("\t")+t.name),t.dependencies&&t.dependencies.forEach(function(e){return bs(e,s,n+1)}))}var Zn=function(){function t(s,n,e,o){void 0===s&&(s="Reaction@"+G()),void 0===o&&(o=!1),this.name=s,this.onInvalidate=n,this.errorHandler=e,this.requiresObservable=o,this.observing=[],this.newObserving=[],this.dependenciesState=b.NOT_TRACKING,this.diffValue=0,this.runId=0,this.unboundDepsCount=0,this.__mapid="#"+G(),this.isDisposed=!1,this._isScheduled=!1,this._isTrackPending=!1,this._isRunning=!1,this.isTracing=J.NONE}return t.prototype.onBecomeStale=function(){this.schedule()},t.prototype.schedule=function(){this._isScheduled||(this._isScheduled=!0,i.pendingReactions.push(this),xs())},t.prototype.isScheduled=function(){return this._isScheduled},t.prototype.runReaction=function(){if(!this.isDisposed){if(q(),this._isScheduled=!1,mt(this)){this._isTrackPending=!0;try{this.onInvalidate(),this._isTrackPending&&O()&&mn({name:this.name,type:"scheduled-reaction"})}catch(s){this.reportExceptionInDerivation(s)}}H()}},t.prototype.track=function(s){q();var e,n=O();n&&(e=Date.now(),U({name:this.name,type:"reaction"})),this._isRunning=!0;var o=cs(this,s,void 0);this._isRunning=!1,this._isTrackPending=!1,this.isDisposed&&gt(this),jn(o)&&this.reportExceptionInDerivation(o.cause),n&&Y({time:Date.now()-e}),H()},t.prototype.reportExceptionInDerivation=function(s){var n=this;if(this.errorHandler)this.errorHandler(s,this);else{if(i.disableErrorBoundaries)throw s;var e="[mobx] Encountered an uncaught exception that was thrown by a reaction or observer component, in: '"+this+"'";i.suppressReactionErrors?console.warn("[mobx] (error in reaction '"+this.name+"' suppressed, fix error of causing action below)"):console.error(e,s),O()&&mn({type:"error",name:this.name,message:e,error:""+s}),i.globalReactionErrorHandlers.forEach(function(o){return o(s,n)})}},t.prototype.dispose=function(){this.isDisposed||(this.isDisposed=!0,this._isRunning||(q(),gt(this),H()))},t.prototype.getDisposer=function(){var s=this.dispose.bind(this);return s.$mobx=this,s},t.prototype.toString=function(){return"Reaction["+this.name+"]"},t.prototype.trace=function(s){void 0===s&&(s=!1),function oe(){for(var t=[],s=0;s<arguments.length;s++)t[s]=arguments[s];var n=!1;"boolean"==typeof t[t.length-1]&&(n=t.pop());var e=function pe(t){switch(t.length){case 0:return i.trackingDerivation;case 1:return W(t[0]);case 2:return W(t[0],t[1])}}(t);if(!e)return d(!1);e.isTracing===J.NONE&&console.log("[mobx.trace] '"+e.name+"' tracing enabled"),e.isTracing=n?J.BREAK:J.LOG}(this,s)},t}(),ws=100,bt=function(t){return t()};function xs(){i.inBatch>0||i.isRunningReactions||bt($a)}function $a(){i.isRunningReactions=!0;for(var t=i.pendingReactions,s=0;t.length>0;){++s===ws&&(console.error("Reaction doesn't converge to a stable state after "+ws+" iterations. Probably there is a cycle in the reactive function: "+t[0]),t.splice(0));for(var n=t.splice(0),e=0,o=n.length;e<o;e++)n[e].runReaction()}i.isRunningReactions=!1}var nt=pn("Reaction",Zn);function O(){return!!i.spyListeners.length}function mn(t){if(i.spyListeners.length)for(var s=i.spyListeners,n=0,e=s.length;n<e;n++)s[n](t)}function U(t){mn(w({},t,{spyReportStart:!0}))}var Ba={spyReportEnd:!0};function Y(t){mn(t?w({},t,{spyReportEnd:!0}):Ba)}function Ha(){d(!1)}function _s(t){return function(s,n,e){if(e){if(e.value)return{value:cn(t,e.value),enumerable:!1,configurable:!0,writable:!0};var o=e.initializer;return{enumerable:!1,configurable:!0,writable:!0,initializer:function(){return cn(t,o.call(this))}}}return function Ua(t){return function(s,n,e){Object.defineProperty(s,n,{configurable:!0,enumerable:!1,get:function(){},set:function(o){hn(this,n,k(t,o))}})}}(t).apply(this,arguments)}}var k=function(s,n,e,o){return 1===arguments.length&&"function"==typeof s?cn(s.name||"<unnamed action>",s):2===arguments.length&&"function"==typeof n?cn(s,n):1===arguments.length&&"string"==typeof s?_s(s):!0!==o?_s(n).apply(null,arguments):void(s[n]=cn(s.name||n,e.value))};function wt(t,s,n){hn(t,s,cn(s,n.bind(t)))}function Vn(t,s){void 0===s&&(s=ct);var o,n=s&&s.name||t.name||"Autorun@"+G();if(s.scheduler||s.delay){var p=Cs(s),r=!1;o=new Zn(n,function(){r||(r=!0,p(function(){r=!1,o.isDisposed||o.track(c)}))},s.onError,s.requiresObservable)}else o=new Zn(n,function(){this.track(c)},s.onError,s.requiresObservable);function c(){t(o)}return o.schedule(),o.getDisposer()}k.bound=function Ya(t,s,n,e){return!0===e?(wt(t,s,n.value),null):n?{configurable:!0,enumerable:!1,get:function(){return wt(this,s,n.value||n.initializer.call(this)),this[s]},set:Ha}:{enumerable:!1,configurable:!0,set:function(o){wt(this,s,o)},get:function(){}}};var Xa=function(t){return t()};function Cs(t){return t.scheduler?t.scheduler:t.delay?function(s){return setTimeout(s,t.delay)}:Xa}function Cn(t,s,n){void 0===n&&(n=ct),"boolean"==typeof n&&(n={fireImmediately:n});var f,e=n.name||"Reaction@"+G(),o=k(e,n.onError?function za(t,s){return function(){try{return s.apply(this,arguments)}catch(n){t.call(this,n)}}}(n.onError,s):s),p=!n.scheduler&&!n.delay,r=Cs(n),c=!0,l=!1,m=n.compareStructural?bn.structural:n.equals||bn.default,T=new Zn(e,function(){c||p?$():l||(l=!0,r($))},n.onError,n.requiresObservable);function $(){if(l=!1,!T.isDisposed){var gn=!1;T.track(function(){var R=t(T);gn=c||!m(f,R),f=R}),c&&n.fireImmediately&&o(f,T),!c&&!0===gn&&o(f,T),c&&(c=!1)}}return T.schedule(),T.getDisposer()}function Es(t,s,n){return Ts("onBecomeUnobserved",t,s,n)}function Ts(t,s,n,e){var o="function"==typeof e?W(s,n):W(s),p="function"==typeof e?e:n,r=o[t];return"function"!=typeof r?d(!1):(o[t]=function(){r.call(this),p.call(this)},function(){o[t]=r})}function Ns(t){var s={name:t.name};return t.observing&&t.observing.length>0&&(s.dependencies=function ia(t){var s=[];return t.forEach(function(n){-1===s.indexOf(n)&&s.push(n)}),s}(t.observing).map(Ns)),s}function tt(t){return 1!==arguments.length&&d(!1),function Ss(t,s){if(null==t)return!1;if(void 0!==s){if(V(t)){var n=t.$mobx;return n.values&&!!n.values[s]}return!1}return V(t)||!!t.$mobx||ht(t)||nt(t)||_n(t)}(t)}function sn(t,s){void 0===s&&(s=void 0),q();try{return t.apply(s)}finally{H()}}function Q(t){return void 0!==t.interceptors&&t.interceptors.length>0}function $n(t,s){var n=t.interceptors||(t.interceptors=[]);return n.push(s),it(function(){var e=n.indexOf(s);-1!==e&&n.splice(e,1)})}function Z(t,s){var n=xn();try{var e=t.interceptors;if(e)for(var o=0,p=e.length;o<p&&(kn(!(s=e[o](s))||s.type,"Intercept handlers should return nothing or a change object"),s);o++);return s}finally{rn(n)}}function X(t){return void 0!==t.changeListeners&&t.changeListeners.length>0}function Ln(t,s){var n=t.changeListeners||(t.changeListeners=[]);return n.push(s),it(function(){var e=n.indexOf(s);-1!==e&&n.splice(e,1)})}function z(t,s){var n=xn(),e=t.changeListeners;if(e){for(var o=0,p=(e=e.slice()).length;o<p;o++)e[o](s);rn(n)}}var ie=function(){var t=!1,s={};return Object.defineProperty(s,"0",{set:function(){t=!0}}),Object.create(s)[0]=1,!1===t}(),xt=0,_t=function(){return function t(){}}();(function le(t,s){typeof Object.setPrototypeOf<"u"?Object.setPrototypeOf(t.prototype,s):typeof t.prototype.__proto__<"u"?t.prototype.__proto__=s:t.prototype=s})(_t,Array.prototype),Object.isFrozen(Array)&&["constructor","push","shift","concat","pop","unshift","replace","find","findIndex","splice","reverse","sort"].forEach(function(t){Object.defineProperty(_t.prototype,t,{configurable:!0,writable:!0,value:Array.prototype[t]})});var Rs=function(){function t(s,n,e,o){this.array=e,this.owned=o,this.values=[],this.lastKnownLength=0,this.atom=new Un(s||"ObservableArray@"+G()),this.enhancer=function(p,r){return n(p,r,s+"[..]")}}return t.prototype.dehanceValue=function(s){return void 0!==this.dehancer?this.dehancer(s):s},t.prototype.dehanceValues=function(s){return void 0!==this.dehancer&&s.length>0?s.map(this.dehancer):s},t.prototype.intercept=function(s){return $n(this,s)},t.prototype.observe=function(s,n){return void 0===n&&(n=!1),n&&s({object:this.array,type:"splice",index:0,added:this.values.slice(),addedCount:this.values.length,removed:[],removedCount:0}),Ln(this,s)},t.prototype.getArrayLength=function(){return this.atom.reportObserved(),this.values.length},t.prototype.setArrayLength=function(s){if("number"!=typeof s||s<0)throw new Error("[mobx.array] Out of range: "+s);var n=this.values.length;if(s!==n)if(s>n){for(var e=new Array(s-n),o=0;o<s-n;o++)e[o]=void 0;this.spliceWithArray(n,0,e)}else this.spliceWithArray(s,n-s)},t.prototype.updateArrayLength=function(s,n){if(s!==this.lastKnownLength)throw new Error("[mobx] Modification exception: the internal structure of an observable array was changed. Did you use peek() to change it?");this.lastKnownLength+=n,n>0&&s+n+1>xt&&Ct(s+n+1)},t.prototype.spliceWithArray=function(s,n,e){var o=this;Kn(this.atom);var p=this.values.length;if(void 0===s?s=0:s>p?s=p:s<0&&(s=Math.max(0,p+s)),n=1===arguments.length?p-s:null==n?0:Math.max(0,Math.min(n,p-s)),void 0===e&&(e=qn),Q(this)){var r=Z(this,{object:this.array,type:"splice",index:s,removedCount:n,added:e});if(!r)return qn;n=r.removedCount,e=r.added}e=0===e.length?e:e.map(function(f){return o.enhancer(f,void 0)}),this.updateArrayLength(p,e.length-n);var l=this.spliceItemsIntoValues(s,n,e);return(0!==n||0!==e.length)&&this.notifyArraySplice(s,e,l),this.dehanceValues(l)},t.prototype.spliceItemsIntoValues=function(s,n,e){var o;if(e.length<1e4)return(o=this.values).splice.apply(o,rt([s,n],e));var p=this.values.slice(s,s+n);return this.values=this.values.slice(0,s).concat(e,this.values.slice(s+n)),p},t.prototype.notifyArrayChildUpdate=function(s,n,e){var o=!this.owned&&O(),p=X(this),r=p||o?{object:this.array,type:"update",index:s,newValue:n,oldValue:e}:null;o&&U(w({},r,{name:this.atom.name})),this.atom.reportChanged(),p&&z(this,r),o&&Y()},t.prototype.notifyArraySplice=function(s,n,e){var o=!this.owned&&O(),p=X(this),r=p||o?{object:this.array,type:"splice",index:s,removed:e,added:n,removedCount:e.length,addedCount:n.length}:null;o&&U(w({},r,{name:this.atom.name})),this.atom.reportChanged(),p&&z(this,r),o&&Y()},t}(),an=function(t){function s(n,e,o,p){void 0===o&&(o="ObservableArray@"+G()),void 0===p&&(p=!1);var r=t.call(this)||this,c=new Rs(o,e,r,p);if(An(r,"$mobx",c),n&&n.length){var l=vt(!0);r.spliceWithArray(0,0,n),yt(l)}return ie&&Object.defineProperty(c.array,"0",ue),r}return C(s,t),s.prototype.intercept=function(n){return this.$mobx.intercept(n)},s.prototype.observe=function(n,e){return void 0===e&&(e=!1),this.$mobx.observe(n,e)},s.prototype.clear=function(){return this.splice(0)},s.prototype.concat=function(){for(var n=[],e=0;e<arguments.length;e++)n[e]=arguments[e];return this.$mobx.atom.reportObserved(),Array.prototype.concat.apply(this.peek(),n.map(function(o){return j(o)?o.peek():o}))},s.prototype.replace=function(n){return this.$mobx.spliceWithArray(0,this.$mobx.values.length,n)},s.prototype.toJS=function(){return this.slice()},s.prototype.toJSON=function(){return this.toJS()},s.prototype.peek=function(){return this.$mobx.atom.reportObserved(),this.$mobx.dehanceValues(this.$mobx.values)},s.prototype.find=function(n,e,o){void 0===o&&(o=0);var p=this.findIndex.apply(this,arguments);return-1===p?void 0:this.get(p)},s.prototype.findIndex=function(n,e,o){void 0===o&&(o=0);for(var p=this.peek(),r=p.length,c=o;c<r;c++)if(n.call(e,p[c],c,this))return c;return-1},s.prototype.splice=function(n,e){for(var o=[],p=2;p<arguments.length;p++)o[p-2]=arguments[p];switch(arguments.length){case 0:return[];case 1:return this.$mobx.spliceWithArray(n);case 2:return this.$mobx.spliceWithArray(n,e)}return this.$mobx.spliceWithArray(n,e,o)},s.prototype.spliceWithArray=function(n,e,o){return this.$mobx.spliceWithArray(n,e,o)},s.prototype.push=function(){for(var n=[],e=0;e<arguments.length;e++)n[e]=arguments[e];var o=this.$mobx;return o.spliceWithArray(o.values.length,0,n),o.values.length},s.prototype.pop=function(){return this.splice(Math.max(this.$mobx.values.length-1,0),1)[0]},s.prototype.shift=function(){return this.splice(0,1)[0]},s.prototype.unshift=function(){for(var n=[],e=0;e<arguments.length;e++)n[e]=arguments[e];var o=this.$mobx;return o.spliceWithArray(0,0,n),o.values.length},s.prototype.reverse=function(){var n=this.slice();return n.reverse.apply(n,arguments)},s.prototype.sort=function(n){var e=this.slice();return e.sort.apply(e,arguments)},s.prototype.remove=function(n){var e=this.$mobx.dehanceValues(this.$mobx.values).indexOf(n);return e>-1&&(this.splice(e,1),!0)},s.prototype.move=function(n,e){function o(c){if(c<0)throw new Error("[mobx.array] Index out of bounds: "+c+" is negative");var l=this.$mobx.values.length;if(c>=l)throw new Error("[mobx.array] Index out of bounds: "+c+" is not smaller than "+l)}if(o.call(this,n),o.call(this,e),n!==e){var r,p=this.$mobx.values;r=n<e?rt(p.slice(0,n),p.slice(n+1,e+1),[p[n]],p.slice(e+1)):rt(p.slice(0,e),[p[n]],p.slice(e,n),p.slice(n+1)),this.replace(r)}},s.prototype.get=function(n){var e=this.$mobx;if(e){if(n<e.values.length)return e.atom.reportObserved(),e.dehanceValue(e.values[n]);console.warn("[mobx.array] Attempt to read an array index ("+n+") that is out of bounds ("+e.values.length+"). Please check length first. Out of bound indices will not be tracked by MobX")}},s.prototype.set=function(n,e){var o=this.$mobx,p=o.values;if(n<p.length){Kn(o.atom);var r=p[n];if(Q(o)){var c=Z(o,{type:"update",object:this,index:n,newValue:e});if(!c)return;e=c.newValue}(e=o.enhancer(e,r))!==r&&(p[n]=e,o.notifyArrayChildUpdate(n,e,r))}else{if(n!==p.length)throw new Error("[mobx.array] Index out of bounds, "+n+" is larger than "+p.length);o.spliceWithArray(n,0,[e])}},s}(_t);dt(an.prototype,function(){this.$mobx.atom.reportObserved();var t=this,s=0;return In({next:function(){return s<t.length?{value:t[s++],done:!1}:{done:!0,value:void 0}}})}),Object.defineProperty(an.prototype,"length",{enumerable:!1,configurable:!0,get:function(){return this.$mobx.getArrayLength()},set:function(t){this.$mobx.setArrayLength(t)}}),hn(an.prototype,kt(),"Array"),["every","filter","forEach","indexOf","join","lastIndexOf","map","reduce","reduceRight","slice","some","toString","toLocaleString"].forEach(function(t){var s=Array.prototype[t];kn("function"==typeof s,"Base function not defined on Array prototype: '"+t+"'"),hn(an.prototype,t,function(){return s.apply(this.peek(),arguments)})}),function ua(t,s){for(var n=0;n<s.length;n++)hn(t,s[n],t[s[n]])}(an.prototype,["constructor","intercept","observe","clear","concat","get","replace","toJS","toJSON","peek","find","findIndex","splice","spliceWithArray","push","pop","set","shift","unshift","reverse","sort","remove","move","toString","toLocaleString"]);var ue=Gs(0);function Gs(t){return{enumerable:!1,configurable:!1,get:function(){return this.get(t)},set:function(s){this.set(t,s)}}}function de(t){Object.defineProperty(an.prototype,""+t,Gs(t))}function Ct(t){for(var s=xt;s<t;s++)de(s);xt=t}Ct(1e3);var ke=pn("ObservableArrayAdministration",Rs);function j(t){return lt(t)&&ke(t.$mobx)}var he={},st=function(){function t(s,n,e){if(void 0===n&&(n=Rn),void 0===e&&(e="ObservableMap@"+G()),this.enhancer=n,this.name=e,this.$mobx=he,this._keys=new an(void 0,Gn,this.name+".keys()",!0),"function"!=typeof Map)throw new Error("mobx.map requires Map polyfill for the current browser. Check babel-polyfill or core-js/es6/map.js");this._data=new Map,this._hasMap=new Map,this.merge(s)}return t.prototype._has=function(s){return this._data.has(s)},t.prototype.has=function(s){var n=this;if(!i.trackingDerivation)return this._has(s);var e=this._hasMap.get(s);if(!e){var o=e=new ln(this._has(s),Gn,this.name+"."+at(s)+"?",!1);this._hasMap.set(s,o),Es(o,function(){return n._hasMap.delete(s)})}return e.get()},t.prototype.set=function(s,n){var e=this._has(s);if(Q(this)){var o=Z(this,{type:e?"update":"add",object:this,newValue:n,name:s});if(!o)return this;n=o.newValue}return e?this._updateValue(s,n):this._addValue(s,n),this},t.prototype.delete=function(s){var n=this;if(Q(this)&&!(e=Z(this,{type:"delete",object:this,name:s})))return!1;if(this._has(s)){var o=O(),p=X(this),e=p||o?{type:"delete",object:this,oldValue:this._data.get(s).value,name:s}:null;return o&&U(w({},e,{name:this.name,key:s})),sn(function(){n._keys.remove(s),n._updateHasMapEntry(s,!1),n._data.get(s).setNewValue(void 0),n._data.delete(s)}),p&&z(this,e),o&&Y(),!0}return!1},t.prototype._updateHasMapEntry=function(s,n){var e=this._hasMap.get(s);e&&e.setNewValue(n)},t.prototype._updateValue=function(s,n){var e=this._data.get(s);if((n=e.prepareNewValue(n))!==i.UNCHANGED){var o=O(),p=X(this),r=p||o?{type:"update",object:this,oldValue:e.value,name:s,newValue:n}:null;o&&U(w({},r,{name:this.name,key:s})),e.setNewValue(n),p&&z(this,r),o&&Y()}},t.prototype._addValue=function(s,n){var e=this;sn(function(){var c=new ln(n,e.enhancer,e.name+"."+at(s),!1);e._data.set(s,c),n=c.value,e._updateHasMapEntry(s,!0),e._keys.push(s)});var o=O(),p=X(this),r=p||o?{type:"add",object:this,name:s,newValue:n}:null;o&&U(w({},r,{name:this.name,key:s})),p&&z(this,r),o&&Y()},t.prototype.get=function(s){return this.has(s)?this.dehanceValue(this._data.get(s).get()):this.dehanceValue(void 0)},t.prototype.dehanceValue=function(s){return void 0!==this.dehancer?this.dehancer(s):s},t.prototype.keys=function(){return this._keys[ut()]()},t.prototype.values=function(){var s=this,n=0;return In({next:function(){return n<s._keys.length?{value:s.get(s._keys[n++]),done:!1}:{value:void 0,done:!0}}})},t.prototype.entries=function(){var s=this,n=0;return In({next:function(){if(n<s._keys.length){var e=s._keys[n++];return{value:[e,s.get(e)],done:!1}}return{done:!0}}})},t.prototype.forEach=function(s,n){var e=this;this._keys.forEach(function(o){return s.call(n,e.get(o),o,e)})},t.prototype.merge=function(s){var n=this;return A(s)&&(s=s.toJS()),sn(function(){vn(s)?Object.keys(s).forEach(function(e){return n.set(e,s[e])}):Array.isArray(s)?s.forEach(function(e){var o=Qt(e,2);return n.set(o[0],o[1])}):yn(s)?s.constructor!==Map?d("Cannot initialize from classes that inherit from Map: "+s.constructor.name):s.forEach(function(e,o){return n.set(o,e)}):null!=s&&d("Cannot initialize map from "+s)}),this},t.prototype.clear=function(){var s=this;sn(function(){is(function(){s._keys.slice().forEach(function(n){return s.delete(n)})})})},t.prototype.replace=function(s){var n=this;return sn(function(){for(var e=function la(t){return yn(t)||A(t)?t:Array.isArray(t)?new Map(t):vn(t)?new Map(Object.entries(t)):d("Cannot convert to map from '"+t+"'")}(s),o=n._keys,p=Array.from(e.keys()),r=!1,c=0;c<o.length;c++){var l=o[c];o.length===p.length&&l!==p[c]&&(r=!0),e.has(l)||(r=!0,n.delete(l))}e.forEach(function(f,m){n._data.has(m)||(r=!0),n.set(m,f)}),r&&n._keys.replace(p)}),this},Object.defineProperty(t.prototype,"size",{get:function(){return this._keys.length},enumerable:!0,configurable:!0}),t.prototype.toPOJO=function(){var s=this,n={};return this._keys.forEach(function(e){return n["symbol"==typeof e?e:at(e)]=s.get(e)}),n},t.prototype.toJS=function(){var s=this,n=new Map;return this._keys.forEach(function(e){return n.set(e,s.get(e))}),n},t.prototype.toJSON=function(){return this.toPOJO()},t.prototype.toString=function(){var s=this;return this.name+"[{ "+this._keys.map(function(n){return at(n)+": "+s.get(n)}).join(", ")+" }]"},t.prototype.observe=function(s,n){return Ln(this,s)},t.prototype.intercept=function(s){return $n(this,s)},t}();function at(t){return t&&t.toString?t.toString():new String(t).toString()}dt(st.prototype,function(){return this.entries()}),An(st.prototype,kt(),"Map");var A=pn("ObservableMap",st),fe={},et=function(){function t(s,n,e){if(void 0===n&&(n=Rn),void 0===e&&(e="ObservableSet@"+G()),this.name=e,this.$mobx=fe,this._data=new Set,this._atom=function ha(t,s,n){void 0===s&&(s=Hn),void 0===n&&(n=Hn);var e=new Un(t);return function Wa(t,s,n){Ts("onBecomeObserved",t,s,n)}(e,s),Es(e,n),e}(this.name),"function"!=typeof Set)throw new Error("mobx.set requires Set polyfill for the current browser. Check babel-polyfill or core-js/es6/set.js");this.enhancer=function(o,p){return n(o,p,e)},s&&this.replace(s)}return t.prototype.dehanceValue=function(s){return void 0!==this.dehancer?this.dehancer(s):s},t.prototype.clear=function(){var s=this;sn(function(){is(function(){s._data.forEach(function(n){s.delete(n)})})})},t.prototype.forEach=function(s,n){var e=this;this._data.forEach(function(o){s.call(n,o,o,e)})},Object.defineProperty(t.prototype,"size",{get:function(){return this._atom.reportObserved(),this._data.size},enumerable:!0,configurable:!0}),t.prototype.add=function(s){var n=this;if(Kn(this._atom),Q(this)&&!(e=Z(this,{type:"add",object:this,newValue:s})))return this;if(!this.has(s)){sn(function(){n._data.add(n.enhancer(s,void 0)),n._atom.reportChanged()});var o=O(),p=X(this),e=p||o?{type:"add",object:this,newValue:s}:null;p&&z(this,e)}return this},t.prototype.delete=function(s){var n=this;if(Q(this)&&!(e=Z(this,{type:"delete",object:this,oldValue:s})))return!1;if(this.has(s)){var o=O(),p=X(this),e=p||o?{type:"delete",object:this,oldValue:s}:null;return sn(function(){n._atom.reportChanged(),n._data.delete(s)}),p&&z(this,e),!0}return!1},t.prototype.has=function(s){return this._atom.reportObserved(),this._data.has(this.dehanceValue(s))},t.prototype.entries=function(){var s=0,n=nn(this.keys()),e=nn(this.values());return In({next:function(){var o=s;return s+=1,o<e.length?{value:[n[o],e[o]],done:!1}:{done:!0}}})},t.prototype.keys=function(){return this.values()},t.prototype.values=function(){this._atom.reportObserved();var e,s=this,n=0;return void 0!==this._data.values?e=nn(this._data.values()):(e=[],this._data.forEach(function(o){return e.push(o)})),In({next:function(){return n<e.length?{value:s.dehanceValue(e[n++]),done:!1}:{done:!0}}})},t.prototype.replace=function(s){var n=this;return M(s)&&(s=s.toJS()),sn(function(){Array.isArray(s)||Sn(s)?(n.clear(),s.forEach(function(e){return n.add(e)})):null!=s&&d("Cannot initialize set from "+s)}),this},t.prototype.observe=function(s,n){return Ln(this,s)},t.prototype.intercept=function(s){return $n(this,s)},t.prototype.toJS=function(){return new Set(this)},t.prototype.toString=function(){return this.name+"[ "+nn(this.keys()).join(", ")+" ]"},t}();dt(et.prototype,function(){return this.values()}),An(et.prototype,kt(),"Set");var M=pn("ObservableSet",et),js=function(){function t(s,n,e){this.target=s,this.name=n,this.defaultEnhancer=e,this.values={}}return t.prototype.read=function(s,n){if(this.target===s||(this.illegalAccess(s,n),this.values[n]))return this.values[n].get()},t.prototype.write=function(s,n,e){var o=this.target;o!==s&&this.illegalAccess(s,n);var p=this.values[n];if(p instanceof un)p.set(e);else{if(Q(this)){if(!(r=Z(this,{type:"update",object:o,name:n,newValue:e})))return;e=r.newValue}if((e=p.prepareNewValue(e))!==i.UNCHANGED){var c=X(this),l=O(),r=c||l?{type:"update",object:o,oldValue:p.value,name:n,newValue:e}:null;l&&U(w({},r,{name:this.name,key:n})),p.setNewValue(e),c&&z(this,r),l&&Y()}}},t.prototype.remove=function(s){if(this.values[s]){var n=this.target;if(Q(this)&&!(e=Z(this,{object:n,name:s,type:"remove"})))return;try{q();var o=X(this),p=O(),r=this.values[s].get();this.keys&&this.keys.remove(s),delete this.values[s],delete this.target[s];var e=o||p?{type:"remove",object:n,oldValue:r,name:s}:null;p&&U(w({},e,{name:this.name,key:s})),o&&z(this,e),p&&Y()}finally{H()}}},t.prototype.illegalAccess=function(s,n){console.warn("Property '"+n+"' of '"+s+"' was accessed through the prototype chain. Use 'decorate' instead to declare the prop or access it statically through it's owner")},t.prototype.observe=function(s,n){return Ln(this,s)},t.prototype.intercept=function(s){return $n(this,s)},t.prototype.getKeys=function(){var s=this;return void 0===this.keys&&(this.keys=new an(Object.keys(this.values).filter(function(n){return s.values[n]instanceof ln}),Gn,"keys("+this.name+")",!0)),this.keys.slice()},t}();function Et(t,s,n){void 0===s&&(s=""),void 0===n&&(n=Rn);var e=t.$mobx;return e||(vn(t)||(s=(t.constructor.name||"ObservableObject")+"@"+G()),s||(s="ObservableObject@"+G()),An(t,"$mobx",e=new js(t,s,n)),e)}var Vs=Object.create(null),Ps=Object.create(null);function $s(t){return t.$mobx||(fn(t),t.$mobx)}var be=pn("ObservableObjectAdministration",js);function V(t){return!!lt(t)&&(fn(t),be(t.$mobx))}function W(t,s){if("object"==typeof t&&null!==t){if(j(t))return void 0!==s&&d(!1),t.$mobx.atom;if(M(t))return t.$mobx;if(A(t)){var n=t;return void 0===s?W(n._keys):((e=n._data.get(s)||n._hasMap.get(s))||d(!1),e)}var e;if(fn(t),V(t))return s?((e=t.$mobx.values[s])||d(!1),e):d(!1);if(ht(t)||_n(t)||nt(t))return t}else if("function"==typeof t&&nt(t.$mobx))return t.$mobx;return d(!1)}function en(t,s){return t||d("Expecting some object"),void 0!==s?en(W(t,s)):ht(t)||_n(t)||nt(t)||A(t)||M(t)?t:(fn(t),t.$mobx?t.$mobx:void d(!1))}var Ls=Object.prototype.toString;function Tt(t,s,n){return void 0===n&&(n=-1),Dt(t,s,n)}function Dt(t,s,n,e,o){if(t===s)return 0!==t||1/t==1/s;if(null==t||null==s)return!1;if(t!=t)return s!=s;var p=typeof t;if("function"!==p&&"object"!==p&&"object"!=typeof s)return!1;t=Bs(t),s=Bs(s);var r=Ls.call(t);if(r!==Ls.call(s))return!1;switch(r){case"[object RegExp]":case"[object String]":return""+t==""+s;case"[object Number]":return+t!=+t?+s!=+s:0==+t?1/+t==1/s:+t==+s;case"[object Date]":case"[object Boolean]":return+t==+s;case"[object Symbol]":return typeof Symbol<"u"&&Symbol.valueOf.call(t)===Symbol.valueOf.call(s)}var c="[object Array]"===r;if(!c){if("object"!=typeof t||"object"!=typeof s)return!1;var l=t.constructor,f=s.constructor;if(l!==f&&!("function"==typeof l&&l instanceof l&&"function"==typeof f&&f instanceof f)&&"constructor"in t&&"constructor"in s)return!1}if(0===n)return!1;n<0&&(n=-1),o=o||[];for(var m=(e=e||[]).length;m--;)if(e[m]===t)return o[m]===s;if(e.push(t),o.push(s),c){if((m=t.length)!==s.length)return!1;for(;m--;)if(!Dt(t[m],s[m],n-1,e,o))return!1}else{var T=Object.keys(t),$=void 0;if(m=T.length,Object.keys(s).length!==m)return!1;for(;m--;)if(!xe(s,$=T[m])||!Dt(t[$],s[$],n-1,e,o))return!1}return e.pop(),o.pop(),!0}function Bs(t){return j(t)?t.peek():yn(t)||A(t)||Sn(t)||M(t)?nn(t.entries()):t}function xe(t,s){return Object.prototype.hasOwnProperty.call(t,s)}"object"==typeof __MOBX_DEVTOOLS_GLOBAL_HOOK__&&__MOBX_DEVTOOLS_GLOBAL_HOOK__.injectMobx({spy:function qa(t){return i.spyListeners.push(t),it(function(){i.spyListeners=i.spyListeners.filter(function(s){return s!==t})})},extras:{getDebugName:function we(t,s){return(void 0!==s?W(t,s):V(t)||A(t)||M(t)?en(t):W(t)).name}},$mobx:"$mobx"});const Ce=t=>({$implicit:t});function Ee(t,s){1&t&&(a.j41(0,"span"),a.EFF(1,"loading..."),a.k0s())}const Te=["*"],Tn=()=>({dontDetach:!0});function De(t,s){if(1&t&&(a.qex(0),a.j41(1,"div"),a.SdG(2),a.k0s(),a.bVm()),2&t){const n=a.XpG();a.R7$(),a.xc7("height",n.getTotalHeight())}}function Ne(t,s){if(1&t){const n=a.RV6();a.qex(0),a.j41(1,"input",1),a.bIt("click",function(o){a.eBV(n);const p=a.XpG();return a.Njj(p.node.mouseAction("checkboxClick",o))}),a.k0s(),a.bVm()}if(2&t){const n=a.XpG();a.R7$(),a.Y8G("checked",n.node.isSelected)("indeterminate",n.node.isPartiallySelected)}}function Fe(t,s){if(1&t){const n=a.RV6();a.j41(0,"span",3),a.bIt("click",function(o){a.eBV(n);const p=a.XpG(2);return a.Njj(p.node.mouseAction("expanderClick",o))}),a.nrm(1,"span",4),a.k0s()}if(2&t){const n=a.XpG(2);a.AVh("toggle-children-wrapper-expanded",n.node.isExpanded)("toggle-children-wrapper-collapsed",n.node.isCollapsed)}}function Oe(t,s){1&t&&a.nrm(0,"span",5)}function Ae(t,s){if(1&t&&(a.qex(0),a.DNE(1,Fe,2,4,"span",1)(2,Oe,1,0,"span",2),a.bVm()),2&t){const n=a.XpG();a.R7$(),a.Y8G("ngIf",n.node.hasChildren),a.R7$(),a.Y8G("ngIf",!n.node.hasChildren)}}const Se=(t,s,n)=>({$implicit:t,node:s,index:n});function Ie(t,s){if(1&t&&(a.j41(0,"span"),a.EFF(1),a.k0s()),2&t){const n=a.XpG();a.R7$(),a.JRh(n.node.displayField)}}const qs=(t,s,n,e)=>({$implicit:t,node:s,index:n,templates:e});function Re(t,s){if(1&t&&a.nrm(0,"tree-node-checkbox",4),2&t){const n=a.XpG(2);a.Y8G("node",n.node)}}function Ge(t,s){if(1&t){const n=a.RV6();a.j41(0,"div",2),a.DNE(1,Re,1,1,"tree-node-checkbox",3),a.nrm(2,"tree-node-expander",4),a.j41(3,"div",5),a.bIt("click",function(o){a.eBV(n);const p=a.XpG();return a.Njj(p.node.mouseAction("click",o))})("dblclick",function(o){a.eBV(n);const p=a.XpG();return a.Njj(p.node.mouseAction("dblClick",o))})("mouseover",function(o){a.eBV(n);const p=a.XpG();return a.Njj(p.node.mouseAction("mouseOver",o))})("mouseout",function(o){a.eBV(n);const p=a.XpG();return a.Njj(p.node.mouseAction("mouseOut",o))})("contextmenu",function(o){a.eBV(n);const p=a.XpG();return a.Njj(p.node.mouseAction("contextMenu",o))})("treeDrop",function(o){a.eBV(n);const p=a.XpG();return a.Njj(p.node.onDrop(o))})("treeDropDragOver",function(o){a.eBV(n);const p=a.XpG();return a.Njj(p.node.mouseAction("dragOver",o))})("treeDropDragLeave",function(o){a.eBV(n);const p=a.XpG();return a.Njj(p.node.mouseAction("dragLeave",o))})("treeDropDragEnter",function(o){a.eBV(n);const p=a.XpG();return a.Njj(p.node.mouseAction("dragEnter",o))}),a.nrm(4,"tree-node-content",6),a.k0s()()}if(2&t){const n=a.XpG();a.xc7("padding-left",n.node.getNodePadding()),a.R7$(),a.Y8G("ngIf",n.node.options.useCheckbox),a.R7$(),a.Y8G("node",n.node),a.R7$(),a.AVh("node-content-wrapper-active",n.node.isActive)("node-content-wrapper-focused",n.node.isFocused),a.Y8G("treeAllowDrop",n.node.allowDrop)("allowDragoverStyling",n.node.allowDragoverStyling())("treeDrag",n.node)("treeDragEnabled",n.node.allowDrag()),a.R7$(),a.Y8G("node",n.node)("index",n.index)("template",n.templates.treeNodeTemplate)}}function je(t,s){if(1&t&&a.nrm(0,"tree-node-collection",4),2&t){const n=a.XpG(3);a.Y8G("nodes",n.node.children)("templates",n.templates)("treeModel",n.node.treeModel)}}function Me(t,s){if(1&t&&a.nrm(0,"tree-loading-component",5),2&t){const n=a.XpG(3);a.xc7("padding-left",n.node.getNodePadding()),a.Y8G("template",n.templates.loadingTemplate)("node",n.node)}}function Ve(t,s){if(1&t&&(a.j41(0,"div"),a.DNE(1,je,1,3,"tree-node-collection",2)(2,Me,1,4,"tree-loading-component",3),a.k0s()),2&t){const n=a.XpG(2);a.AVh("tree-children",!0)("tree-children-no-padding",n.node.options.levelPadding),a.R7$(),a.Y8G("ngIf",n.node.children),a.R7$(),a.Y8G("ngIf",!n.node.children)}}function Pe(t,s){if(1&t&&(a.qex(0),a.DNE(1,Ve,3,6,"div",1),a.bVm()),2&t){const n=a.XpG();a.R7$(),a.Y8G("treeAnimateOpen",n.node.isExpanded)("treeAnimateOpenSpeed",n.node.options.animateSpeed)("treeAnimateOpenAcceleration",n.node.options.animateAcceleration)("treeAnimateOpenEnabled",n.node.options.animateExpand)}}function $e(t,s){if(1&t&&a.nrm(0,"tree-node",2),2&t){const n=s.$implicit,e=s.index,o=a.XpG(2);a.Y8G("node",n)("index",e)("templates",o.templates)}}function Le(t,s){if(1&t&&(a.qex(0),a.j41(1,"div"),a.DNE(2,$e,1,3,"tree-node",1),a.k0s(),a.bVm()),2&t){const n=a.XpG();a.R7$(),a.xc7("margin-top",n.marginTop),a.R7$(),a.Y8G("ngForOf",n.viewportNodes)("ngForTrackBy",n.trackNode)}}function Be(t,s){if(1&t&&a.nrm(0,"tree-node-drop-slot",6),2&t){const n=a.XpG(3);a.Y8G("dropIndex",n.node.index)("node",n.node.parent)}}function qe(t,s){if(1&t&&(a.j41(0,"div"),a.DNE(1,Be,1,2,"tree-node-drop-slot",3),a.nrm(2,"tree-node-wrapper",4)(3,"tree-node-children",5)(4,"tree-node-drop-slot",6),a.k0s()),2&t){const n=a.XpG(2);a.HbH(n.node.getClass()),a.AVh("tree-node",!0)("tree-node-expanded",n.node.isExpanded&&n.node.hasChildren)("tree-node-collapsed",n.node.isCollapsed&&n.node.hasChildren)("tree-node-leaf",n.node.isLeaf)("tree-node-active",n.node.isActive)("tree-node-focused",n.node.isFocused),a.R7$(),a.Y8G("ngIf",0===n.index),a.R7$(),a.Y8G("node",n.node)("index",n.index)("templates",n.templates),a.R7$(),a.Y8G("node",n.node)("templates",n.templates),a.R7$(),a.Y8G("dropIndex",n.node.index+1)("node",n.node.parent)}}function He(t,s){if(1&t&&(a.qex(0),a.DNE(1,qe,5,22,"div",1),a.eu8(2,2),a.bVm()),2&t){const n=a.XpG();a.R7$(),a.Y8G("ngIf",!n.templates.treeNodeFullTemplate),a.R7$(),a.Y8G("ngTemplateOutlet",n.templates.treeNodeFullTemplate)("ngTemplateOutletContext",a.ziG(3,qs,n.node,n.node,n.index,n.templates))}}const Ue=["loadingTemplate"],Ye=["treeNodeTemplate"],Xe=["treeNodeWrapperTemplate"],ze=["treeNodeFullTemplate"],We=["viewport"],Ke=(t,s,n,e)=>({loadingTemplate:t,treeNodeTemplate:s,treeNodeWrapperTemplate:n,treeNodeFullTemplate:e});function Je(t,s){if(1&t&&a.nrm(0,"tree-node-collection",4),2&t){const n=a.XpG();a.Y8G("nodes",n.treeModel.roots)("treeModel",n.treeModel)("templates",a.ziG(3,Ke,n.loadingTemplate,n.treeNodeTemplate,n.treeNodeWrapperTemplate,n.treeNodeFullTemplate))}}function Qe(t,s){if(1&t&&a.nrm(0,"tree-node-drop-slot",5),2&t){const n=a.XpG();a.Y8G("dropIndex",0)("node",n.treeModel.virtualRoot)}}let Dn=(()=>{class t{constructor(n,e){this.templateRef=n,this.viewContainer=e,this.templateBindings={}}ngOnInit(){this.view=this.viewContainer.createEmbeddedView(this.templateRef),this.dispose&&this.dispose(),this.shouldDetach()&&this.view.detach(),this.autoDetect(this.view)}shouldDetach(){return this.treeMobxAutorun&&this.treeMobxAutorun.detach}autoDetect(n){this.dispose=Vn(()=>n.detectChanges())}ngOnDestroy(){this.dispose&&this.dispose()}static{this.\u0275fac=function(e){return new(e||t)(a.rXU(a.C4Q),a.rXU(a.c1b))}}static{this.\u0275dir=a.FsC({type:t,selectors:[["","treeMobxAutorun",""]],inputs:{treeMobxAutorun:"treeMobxAutorun"}})}}return t})();const S_LEFT=37,S_UP=38,S_RIGHT=39,S_DOWN=40,S_ENTER=13,S_SPACE=32,F={TOGGLE_ACTIVE:(t,s,n)=>s&&s.toggleActivated(),TOGGLE_ACTIVE_MULTI:(t,s,n)=>s&&s.toggleActivated(!0),TOGGLE_SELECTED:(t,s,n)=>s&&s.toggleSelected(),ACTIVATE:(t,s,n)=>s.setIsActive(!0),DEACTIVATE:(t,s,n)=>s.setIsActive(!1),SELECT:(t,s,n)=>s.setIsSelected(!0),DESELECT:(t,s,n)=>s.setIsSelected(!1),FOCUS:(t,s,n)=>s.focus(),TOGGLE_EXPANDED:(t,s,n)=>s.hasChildren&&s.toggleExpanded(),EXPAND:(t,s,n)=>s.expand(),COLLAPSE:(t,s,n)=>s.collapse(),DRILL_DOWN:(t,s,n)=>t.focusDrillDown(),DRILL_UP:(t,s,n)=>t.focusDrillUp(),NEXT_NODE:(t,s,n)=>t.focusNextNode(),PREVIOUS_NODE:(t,s,n)=>t.focusPreviousNode(),MOVE_NODE:(t,s,n,{from:e,to:o})=>{n.ctrlKey?t.copyNode(e,o):t.moveNode(e,o)}},Nn={mouse:{click:F.TOGGLE_ACTIVE,dblClick:null,contextMenu:null,expanderClick:F.TOGGLE_EXPANDED,checkboxClick:F.TOGGLE_SELECTED,drop:F.MOVE_NODE},keys:{[S_RIGHT]:F.DRILL_DOWN,[S_LEFT]:F.DRILL_UP,[S_DOWN]:F.NEXT_NODE,[S_UP]:F.PREVIOUS_NODE,[S_SPACE]:F.TOGGLE_ACTIVE,[S_ENTER]:F.TOGGLE_ACTIVE}};class Hs{get hasChildrenField(){return this.options.hasChildrenField||"hasChildren"}get childrenField(){return this.options.childrenField||"children"}get displayField(){return this.options.displayField||"name"}get idField(){return this.options.idField||"id"}get isExpandedField(){return this.options.isExpandedField||"isExpanded"}get getChildren(){return this.options.getChildren}get levelPadding(){return this.options.levelPadding||0}get useVirtualScroll(){return this.options.useVirtualScroll}get animateExpand(){return this.options.animateExpand}get animateSpeed(){return this.options.animateSpeed||1}get animateAcceleration(){return this.options.animateAcceleration||1.2}get scrollOnActivate(){return void 0===this.options.scrollOnActivate||this.options.scrollOnActivate}get rtl(){return!!this.options.rtl}get rootId(){return this.options.rootId}get useCheckbox(){return this.options.useCheckbox}get useTriState(){return void 0===this.options.useTriState||this.options.useTriState}get scrollContainer(){return this.options.scrollContainer}get allowDragoverStyling(){return void 0===this.options.allowDragoverStyling||this.options.allowDragoverStyling}constructor(s={}){this.options=s,this.actionMapping={mouse:{click:this.options?.actionMapping?.mouse?.click??Nn.mouse.click,dblClick:this.options?.actionMapping?.mouse?.dblClick??Nn.mouse.dblClick,contextMenu:this.options?.actionMapping?.mouse?.contextMenu??Nn.mouse.contextMenu,expanderClick:this.options?.actionMapping?.mouse?.expanderClick??Nn.mouse.expanderClick,checkboxClick:this.options?.actionMapping?.mouse?.checkboxClick??Nn.mouse.checkboxClick,drop:this.options?.actionMapping?.mouse?.drop??Nn.mouse.drop,dragStart:this.options?.actionMapping?.mouse?.dragStart??void 0,drag:this.options?.actionMapping?.mouse?.drag??void 0,dragEnd:this.options?.actionMapping?.mouse?.dragEnd??void 0,dragOver:this.options?.actionMapping?.mouse?.dragOver??void 0,dragLeave:this.options?.actionMapping?.mouse?.dragLeave??void 0,dragEnter:this.options?.actionMapping?.mouse?.dragEnter??void 0,mouseOver:this.options?.actionMapping?.mouse?.mouseOver??void 0,mouseOut:this.options?.actionMapping?.mouse?.mouseOut??void 0},keys:{[S_RIGHT]:F.DRILL_DOWN,[S_LEFT]:F.DRILL_UP,[S_DOWN]:F.NEXT_NODE,[S_UP]:F.PREVIOUS_NODE,[S_SPACE]:F.TOGGLE_ACTIVE,[S_ENTER]:F.TOGGLE_ACTIVE}},this.options?.actionMapping?.keys&&(this.actionMapping.keys={...this.actionMapping.keys,...this.options.actionMapping.keys}),s.rtl&&(this.actionMapping.keys[39]=s.actionMapping?.keys[39]||F.DRILL_UP,this.actionMapping.keys[37]=s.actionMapping?.keys[37]||F.DRILL_DOWN)}getNodeClone(s){if(this.options.getNodeClone)return this.options.getNodeClone(s);const n=Object.assign({},s.data);return n.id&&delete n.id,n}allowDrop(s,n,e){return this.options.allowDrop instanceof Function?this.options.allowDrop(s,n,e):void 0===this.options.allowDrop||this.options.allowDrop}allowDrag(s){return this.options.allowDrag instanceof Function?this.options.allowDrag(s):this.options.allowDrag}nodeClass(s){return this.options.nodeClass?this.options.nodeClass(s):""}nodeHeight(s){if(s.data.virtual)return 0;let n=this.options.nodeHeight||22;return"function"==typeof n&&(n=n(s)),n+(0===s.index?2:1)*this.dropSlotHeight}get dropSlotHeight(){return"number"==typeof this.options.dropSlotHeight?this.options.dropSlotHeight:2}}const E={toggleExpanded:"toggleExpanded",activate:"activate",deactivate:"deactivate",nodeActivate:"nodeActivate",nodeDeactivate:"nodeDeactivate",select:"select",deselect:"deselect",focus:"focus",blur:"blur",initialized:"initialized",updateData:"updateData",moveNode:"moveNode",copyNode:"copyNode",event:"event",loadNodeChildren:"loadNodeChildren",changeFilter:"changeFilter",stateChange:"stateChange"};var I=function(t,s,n,e){var r,o=arguments.length,p=o<3?s:null===e?e=Object.getOwnPropertyDescriptor(s,n):e;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)p=Reflect.decorate(t,s,n,e);else for(var c=t.length-1;c>=0;c--)(r=t[c])&&(p=(o<3?r(p):o>3?r(s,n,p):r(s,n))||p);return o>3&&p&&Object.defineProperty(s,n,p),p};class N{get isHidden(){return this.treeModel.isHidden(this)}get isExpanded(){return this.treeModel.isExpanded(this)}get isActive(){return this.treeModel.isActive(this)}get isFocused(){return this.treeModel.isNodeFocused(this)}get isSelected(){return this.isSelectable()?this.treeModel.isSelected(this):this.children.some(s=>s.isSelected)}get isAllSelected(){return this.isSelectable()?this.treeModel.isSelected(this):this.children.every(s=>s.isAllSelected)}get isPartiallySelected(){return this.isSelected&&!this.isAllSelected}get level(){return this.parent?this.parent.level+1:0}get path(){return this.parent?[...this.parent.path,this.id]:[]}get elementRef(){throw"Element Ref is no longer supported since introducing virtual scroll\n\n      You may use a template to obtain a reference to the element"}get originalNode(){return this._originalNode}constructor(s,n,e,o){this.data=s,this.parent=n,this.treeModel=e,this.position=0,this.allowDrop=(p,r)=>this.options.allowDrop(p,{parent:this,index:0},r),this.allowDragoverStyling=()=>this.options.allowDragoverStyling,null==this.id&&(this.id=function Ze(){return Math.floor(1e13*Math.random())}()),this.index=o,this.getField("children")&&this._initChildren(),this.autoLoadChildren()}get hasChildren(){return!!(this.getField("hasChildren")||this.children&&this.children.length>0)}get isCollapsed(){return!this.isExpanded}get isLeaf(){return!this.hasChildren}get isRoot(){return this.parent.data.virtual}get realParent(){return this.isRoot?null:this.parent}get options(){return this.treeModel.options}fireEvent(s){this.treeModel.fireEvent(s)}get displayField(){return this.getField("display")}get id(){return this.getField("id")}set id(s){this.setField("id",s)}getField(s){return this.data[this.options[`${s}Field`]]}setField(s,n){this.data[this.options[`${s}Field`]]=n}_findAdjacentSibling(s,n=!1){const e=this._getParentsChildren(n),o=e.indexOf(this);return e.length>o+s?e[o+s]:null}findNextSibling(s=!1){return this._findAdjacentSibling(1,s)}findPreviousSibling(s=!1){return this._findAdjacentSibling(-1,s)}getVisibleChildren(){return this.visibleChildren}get visibleChildren(){return(this.children||[]).filter(s=>!s.isHidden)}getFirstChild(s=!1){let n=s?this.visibleChildren:this.children;return null!=n&&n.length?n[0]:null}getLastChild(s=!1){let n=s?this.visibleChildren:this.children;return null!=n&&n.length?n[n.length-1]:null}findNextNode(s=!0,n=!1){return s&&this.isExpanded&&this.getFirstChild(n)||this.findNextSibling(n)||this.parent&&this.parent.findNextNode(!1,n)}findPreviousNode(s=!1){let n=this.findPreviousSibling(s);return n?n._getLastOpenDescendant(s):this.realParent}_getLastOpenDescendant(s=!1){const n=this.getLastChild(s);return this.isCollapsed||!n?this:n._getLastOpenDescendant(s)}_getParentsChildren(s=!1){return this.parent&&(s?this.parent.getVisibleChildren():this.parent.children)||[]}getIndexInParent(s=!1){return this._getParentsChildren(s).indexOf(this)}isDescendantOf(s){return this===s||this.parent&&this.parent.isDescendantOf(s)}getNodePadding(){return this.options.levelPadding*(this.level-1)+"px"}getClass(){return[this.options.nodeClass(this),`tree-node-level-${this.level}`].join(" ")}onDrop(s){this.mouseAction("drop",s.event,{from:s.element,to:{parent:this,index:0,dropOnNode:!0}})}allowDrag(){return this.options.allowDrag(this)}loadNodeChildren(){return this.options.getChildren?Promise.resolve(this.options.getChildren(this)).then(s=>{s&&(this.setField("children",s),this._initChildren(),this.options.useTriState&&this.treeModel.isSelected(this)&&this.setIsSelected(!0),this.children.forEach(n=>{n.getField("isExpanded")&&n.hasChildren&&n.expand()}))}).then(()=>{this.fireEvent({eventName:E.loadNodeChildren,node:this})}):Promise.resolve()}expand(){return this.isExpanded||this.toggleExpanded(),this}collapse(){return this.isExpanded&&this.toggleExpanded(),this}doForAll(s){Promise.resolve(s(this)).then(()=>{this.children&&this.children.forEach(n=>n.doForAll(s))})}expandAll(){this.doForAll(s=>s.expand())}collapseAll(){this.doForAll(s=>s.collapse())}ensureVisible(){return this.realParent&&(this.realParent.expand(),this.realParent.ensureVisible()),this}toggleExpanded(){return this.setIsExpanded(!this.isExpanded),this}setIsExpanded(s){return this.hasChildren&&this.treeModel.setExpandedNode(this,s),this}autoLoadChildren(){this.handler=Cn(()=>this.isExpanded,s=>{!this.children&&this.hasChildren&&s&&this.loadNodeChildren()},{fireImmediately:!0})}dispose(){this.children&&this.children.forEach(s=>s.dispose()),this.handler&&this.handler(),this.parent=null,this.children=null}setIsActive(s,n=!1){return this.treeModel.setActiveNode(this,s,n),s&&this.focus(this.options.scrollOnActivate),this}isSelectable(){return this.isLeaf||!this.children||!this.options.useTriState}setIsSelected(s){return this.isSelectable()?this.treeModel.setSelectedNode(this,s):this.visibleChildren.forEach(n=>n.setIsSelected(s)),this}toggleSelected(){return this.setIsSelected(!this.isSelected),this}toggleActivated(s=!1){return this.setIsActive(!this.isActive,s),this}setActiveAndVisible(s=!1){return this.setIsActive(!0,s).ensureVisible(),setTimeout(this.scrollIntoView.bind(this)),this}scrollIntoView(s=!1){this.treeModel.virtualScroll.scrollIntoView(this,s)}focus(s=!0){let n=this.treeModel.getFocusedNode();return this.treeModel.setFocusedNode(this),s&&this.scrollIntoView(),n&&this.fireEvent({eventName:E.blur,node:n}),this.fireEvent({eventName:E.focus,node:this}),this}blur(){let s=this.treeModel.getFocusedNode();return this.treeModel.setFocusedNode(null),s&&this.fireEvent({eventName:E.blur,node:this}),this}setIsHidden(s){this.treeModel.setIsHidden(this,s)}hide(){this.setIsHidden(!0)}show(){this.setIsHidden(!1)}mouseAction(s,n,e=null){this.treeModel.setFocus(!0);const p=this.options.actionMapping.mouse[s];p&&p(this.treeModel,this,n,e)}getSelfHeight(){return this.options.nodeHeight(this)}_initChildren(){this.children=this.getField("children").map((s,n)=>new N(s,this,this.treeModel,n))}}I([D],N.prototype,"isHidden",null),I([D],N.prototype,"isExpanded",null),I([D],N.prototype,"isActive",null),I([D],N.prototype,"isFocused",null),I([D],N.prototype,"isSelected",null),I([D],N.prototype,"isAllSelected",null),I([D],N.prototype,"isPartiallySelected",null),I([g],N.prototype,"children",void 0),I([g],N.prototype,"index",void 0),I([g],N.prototype,"position",void 0),I([g],N.prototype,"height",void 0),I([D],N.prototype,"level",null),I([D],N.prototype,"path",null),I([D],N.prototype,"visibleChildren",null),I([k],N.prototype,"setIsSelected",null),I([k],N.prototype,"_initChildren",null);var v=function(t,s,n,e){var r,o=arguments.length,p=o<3?s:null===e?e=Object.getOwnPropertyDescriptor(s,n):e;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)p=Reflect.decorate(t,s,n,e);else for(var c=t.length-1;c>=0;c--)(r=t[c])&&(p=(o<3?r(p):o>3?r(s,n,p):r(s,n))||p);return o>3&&p&&Object.defineProperty(s,n,p),p};let h=(()=>{class t{constructor(){this.options=new Hs,this.eventNames=Object.keys(E),this.expandedNodeIds={},this.selectedLeafNodeIds={},this.activeNodeIds={},this.hiddenNodeIds={},this.focusedNodeId=null,this.firstUpdate=!0,this.subscriptions=[]}static{this.focusedTree=null}fireEvent(n){n.treeModel=this,this.events[n.eventName].emit(n),this.events.event.emit(n)}subscribe(n,e){const o=this.events[n].subscribe(e);this.subscriptions.push(o)}getFocusedNode(){return this.focusedNode}getActiveNode(){return this.activeNodes[0]}getActiveNodes(){return this.activeNodes}getVisibleRoots(){return this.virtualRoot.visibleChildren}getFirstRoot(n=!1){const e=n?this.getVisibleRoots():this.roots;return null!=e&&e.length?e[0]:null}getLastRoot(n=!1){const e=n?this.getVisibleRoots():this.roots;return null!=e&&e.length?e[e.length-1]:null}get isFocused(){return t.focusedTree===this}isNodeFocused(n){return this.focusedNode===n}isEmptyTree(){return this.roots&&0===this.roots.length}get focusedNode(){return this.focusedNodeId?this.getNodeById(this.focusedNodeId):null}get expandedNodes(){return Object.keys(this.expandedNodeIds).filter(e=>this.expandedNodeIds[e]).map(e=>this.getNodeById(e)).filter(Boolean)}get activeNodes(){return Object.keys(this.activeNodeIds).filter(e=>this.activeNodeIds[e]).map(e=>this.getNodeById(e)).filter(Boolean)}get hiddenNodes(){return Object.keys(this.hiddenNodeIds).filter(e=>this.hiddenNodeIds[e]).map(e=>this.getNodeById(e)).filter(Boolean)}get selectedLeafNodes(){return Object.keys(this.selectedLeafNodeIds).filter(e=>this.selectedLeafNodeIds[e]).map(e=>this.getNodeById(e)).filter(Boolean)}getNodeByPath(n,e=null){if(!n)return null;if(e=e||this.virtualRoot,0===n.length)return e;if(!e.children)return null;const o=n.shift(),p=e.children.find(r=>r.id===o);return p?this.getNodeByPath(n,p):null}getNodeById(n){const e=n.toString();return this.getNodeBy(o=>o.id.toString()===e)}getNodeBy(n,e=null){if(!(e=e||this.virtualRoot).children)return null;const o=e.children.find(n);if(o)return o;for(let p of e.children){const r=this.getNodeBy(n,p);if(r)return r}}isExpanded(n){return this.expandedNodeIds[n.id]}isHidden(n){return this.hiddenNodeIds[n.id]}isActive(n){return this.activeNodeIds[n.id]}isSelected(n){return this.selectedLeafNodeIds[n.id]}ngOnDestroy(){this.dispose(),this.unsubscribeAll()}dispose(){this.virtualRoot&&this.virtualRoot.dispose()}unsubscribeAll(){this.subscriptions.forEach(n=>n.unsubscribe()),this.subscriptions=[]}setData({nodes:n,options:e=null,events:o=null}){e&&(this.options=new Hs(e)),o&&(this.events=o),n&&(this.nodes=n),this.update()}update(){let n={id:this.options.rootId,virtual:!0,[this.options.childrenField]:this.nodes};this.dispose(),this.virtualRoot=new N(n,null,this,0),this.roots=this.virtualRoot.children,this.firstUpdate?this.roots&&(this.firstUpdate=!1,this._calculateExpandedNodes()):this.fireEvent({eventName:E.updateData})}setFocusedNode(n){this.focusedNodeId=n?n.id:null}setFocus(n){t.focusedTree=n?this:null}doForAll(n){this.roots.forEach(e=>e.doForAll(n))}focusNextNode(){let n=this.getFocusedNode(),e=n?n.findNextNode(!0,!0):this.getFirstRoot(!0);e&&e.focus()}focusPreviousNode(){let n=this.getFocusedNode(),e=n?n.findPreviousNode(!0):this.getLastRoot(!0);e&&e.focus()}focusDrillDown(){let n=this.getFocusedNode();if(n&&n.isCollapsed&&n.hasChildren)n.toggleExpanded();else{let e=n?n.getFirstChild(!0):this.getFirstRoot(!0);e&&e.focus()}}focusDrillUp(){let n=this.getFocusedNode();if(n)if(n.isExpanded)n.toggleExpanded();else{let e=n.realParent;e&&e.focus()}}setActiveNode(n,e,o=!1){o?this._setActiveNodeMulti(n,e):this._setActiveNodeSingle(n,e),e?(n.focus(this.options.scrollOnActivate),this.fireEvent({eventName:E.activate,node:n}),this.fireEvent({eventName:E.nodeActivate,node:n})):(this.fireEvent({eventName:E.deactivate,node:n}),this.fireEvent({eventName:E.nodeDeactivate,node:n}))}setSelectedNode(n,e){this.selectedLeafNodeIds=Object.assign({},this.selectedLeafNodeIds,{[n.id]:e}),e?(n.focus(),this.fireEvent({eventName:E.select,node:n})):this.fireEvent({eventName:E.deselect,node:n})}setExpandedNode(n,e){this.expandedNodeIds=Object.assign({},this.expandedNodeIds,{[n.id]:e}),this.fireEvent({eventName:E.toggleExpanded,node:n,isExpanded:e})}expandAll(){this.roots.forEach(n=>n.expandAll())}collapseAll(){this.roots.forEach(n=>n.collapseAll())}setIsHidden(n,e){this.hiddenNodeIds=Object.assign({},this.hiddenNodeIds,{[n.id]:e})}setHiddenNodeIds(n){this.hiddenNodeIds=n.reduce((e,o)=>Object.assign(e,{[o]:!0}),{})}performKeyAction(n,e){const o=this.options.actionMapping.keys[e.keyCode];return!!o&&(e.preventDefault(),o(this,n,e),!0)}filterNodes(n,e=!0){let o;if(!n)return this.clearFilter();if(n&&"string"==typeof n.valueOf())o=r=>-1!==r.displayField.toLowerCase().indexOf(n.toLowerCase());else{if(!n||"function"!=typeof n)return console.error("Don't know what to do with filter",n),void console.error("Should be either a string or function");o=n}const p={};this.roots.forEach(r=>this._filterNode(p,r,o,e)),this.hiddenNodeIds=p,this.fireEvent({eventName:E.changeFilter})}clearFilter(){this.hiddenNodeIds={},this.fireEvent({eventName:E.changeFilter})}moveNode(n,e){const o=n.getIndexInParent(),p=n.parent;if(!this.canMoveNode(n,e,o))return;const r=p.getField("children");e.parent.getField("children")||e.parent.setField("children",[]);const c=e.parent.getField("children"),l=r.splice(o,1)[0];let f=p===e.parent&&e.index>o?e.index-1:e.index;c.splice(f,0,l),p.treeModel.update(),e.parent.treeModel!==p.treeModel&&e.parent.treeModel.update(),this.fireEvent({eventName:E.moveNode,node:l,to:{parent:e.parent.data,index:f},from:{parent:p.data,index:o}})}copyNode(n,e){const o=n.getIndexInParent();if(!this.canMoveNode(n,e,o))return;e.parent.getField("children")||e.parent.setField("children",[]);const p=e.parent.getField("children"),r=this.options.getNodeClone(n);p.splice(e.index,0,r),n.treeModel.update(),e.parent.treeModel!==n.treeModel&&e.parent.treeModel.update(),this.fireEvent({eventName:E.copyNode,node:r,to:{parent:e.parent.data,index:e.index}})}getState(){return{expandedNodeIds:this.expandedNodeIds,selectedLeafNodeIds:this.selectedLeafNodeIds,activeNodeIds:this.activeNodeIds,hiddenNodeIds:this.hiddenNodeIds,focusedNodeId:this.focusedNodeId}}setState(n){n&&Object.assign(this,{expandedNodeIds:n.expandedNodeIds||{},selectedLeafNodeIds:n.selectedLeafNodeIds||{},activeNodeIds:n.activeNodeIds||{},hiddenNodeIds:n.hiddenNodeIds||{},focusedNodeId:n.focusedNodeId})}subscribeToState(n){Vn(()=>n(this.getState()))}canMoveNode(n,e,o=void 0){return o||n.getIndexInParent(),(n.parent!==e.parent||o!==e.index)&&!e.parent.isDescendantOf(n)}calculateExpandedNodes(){this._calculateExpandedNodes()}_filterNode(n,e,o,p){let r=o(e);return e.children&&e.children.forEach(c=>{this._filterNode(n,c,o,p)&&(r=!0)}),r||(n[e.id]=!0),p&&r&&e.ensureVisible(),r}_calculateExpandedNodes(n=null){(n=n||this.virtualRoot).data[this.options.isExpandedField]&&(this.expandedNodeIds=Object.assign({},this.expandedNodeIds,{[n.id]:!0})),n.children&&n.children.forEach(e=>this._calculateExpandedNodes(e))}_setActiveNodeSingle(n,e){this.activeNodes.filter(o=>o!==n).forEach(o=>{this.fireEvent({eventName:E.deactivate,node:o}),this.fireEvent({eventName:E.nodeDeactivate,node:o})}),this.activeNodeIds=e?{[n.id]:!0}:{}}_setActiveNodeMulti(n,e){this.activeNodeIds=Object.assign({},this.activeNodeIds,{[n.id]:e})}static{this.\u0275fac=function(e){return new(e||t)}}static{this.\u0275prov=a.jDH({token:t,factory:t.\u0275fac})}}return t})();v([g],h.prototype,"roots",void 0),v([g],h.prototype,"expandedNodeIds",void 0),v([g],h.prototype,"selectedLeafNodeIds",void 0),v([g],h.prototype,"activeNodeIds",void 0),v([g],h.prototype,"hiddenNodeIds",void 0),v([g],h.prototype,"focusedNodeId",void 0),v([g],h.prototype,"virtualRoot",void 0),v([D],h.prototype,"focusedNode",null),v([D],h.prototype,"expandedNodes",null),v([D],h.prototype,"activeNodes",null),v([D],h.prototype,"hiddenNodes",null),v([D],h.prototype,"selectedLeafNodes",null),v([k],h.prototype,"setData",null),v([k],h.prototype,"update",null),v([k],h.prototype,"setFocusedNode",null),v([k],h.prototype,"setFocus",null),v([k],h.prototype,"doForAll",null),v([k],h.prototype,"focusNextNode",null),v([k],h.prototype,"focusPreviousNode",null),v([k],h.prototype,"focusDrillDown",null),v([k],h.prototype,"focusDrillUp",null),v([k],h.prototype,"setActiveNode",null),v([k],h.prototype,"setSelectedNode",null),v([k],h.prototype,"setExpandedNode",null),v([k],h.prototype,"expandAll",null),v([k],h.prototype,"collapseAll",null),v([k],h.prototype,"setIsHidden",null),v([k],h.prototype,"setHiddenNodeIds",null),v([k],h.prototype,"filterNodes",null),v([k],h.prototype,"clearFilter",null),v([k],h.prototype,"moveNode",null),v([k],h.prototype,"copyNode",null),v([k],h.prototype,"setState",null);let Nt=(()=>{class t{constructor(){this._draggedElement=null}set(n){this._draggedElement=n}get(){return this._draggedElement}isDragging(){return!!this.get()}static{this.\u0275fac=function(e){return new(e||t)}}static{this.\u0275prov=a.jDH({token:t,factory:t.\u0275fac,providedIn:"root"})}}return t})();var on=function(t,s,n,e){var r,o=arguments.length,p=o<3?s:null===e?e=Object.getOwnPropertyDescriptor(s,n):e;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)p=Reflect.decorate(t,s,n,e);else for(var c=t.length-1;c>=0;c--)(r=t[c])&&(p=(o<3?r(p):o>3?r(s,n,p):r(s,n))||p);return o>3&&p&&Object.defineProperty(s,n,p),p};let K=(()=>{class t{get y(){return 150*this.yBlocks}get totalHeight(){return this.treeModel.virtualRoot?this.treeModel.virtualRoot.height:0}constructor(n){this.treeModel=n,this.yBlocks=0,this.x=0,this.viewportHeight=null,this.viewport=null,n.virtualScroll=this,this._dispose=[Vn(()=>this.fixScroll())]}fireEvent(n){this.treeModel.fireEvent(n)}init(){const n=this.recalcPositions.bind(this);n(),this._dispose=[...this._dispose,Cn(()=>this.treeModel.roots,n),Cn(()=>this.treeModel.expandedNodeIds,n),Cn(()=>this.treeModel.hiddenNodeIds,n)],this.treeModel.subscribe(E.loadNodeChildren,n)}isEnabled(){return this.treeModel.options.useVirtualScroll}_setYBlocks(n){this.yBlocks=n}recalcPositions(){this.treeModel.virtualRoot.height=this._getPositionAfter(this.treeModel.getVisibleRoots(),0)}_getPositionAfter(n,e){let o=e;return n.forEach(p=>{p.position=o,o=this._getPositionAfterNode(p,o)}),o}_getPositionAfterNode(n,e){let o=n.getSelfHeight()+e;return n.children&&n.isExpanded&&(o=this._getPositionAfter(n.visibleChildren,o)),n.height=o-e,o}clear(){this._dispose.forEach(n=>n())}setViewport(n){Object.assign(this,{viewport:n,x:n.scrollLeft,yBlocks:Math.round(n.scrollTop/150),viewportHeight:n.getBoundingClientRect?n.getBoundingClientRect().height:0})}scrollIntoView(n,e,o=!0){if(n.options.scrollContainer){const p=n.options.scrollContainer,r=p.getBoundingClientRect().height,c=p.getBoundingClientRect().top,l=this.viewport.getBoundingClientRect().top+n.position-c;(e||l<p.scrollTop||l+n.getSelfHeight()>p.scrollTop+r)&&(p.scrollTop=o?l-r/2:l)}else(e||n.position<this.y||n.position+n.getSelfHeight()>this.y+this.viewportHeight)&&this.viewport&&(this.viewport.scrollTop=o?n.position-this.viewportHeight/2:n.position,this._setYBlocks(Math.floor(this.viewport.scrollTop/150)))}getViewportNodes(n){if(!n)return[];const e=n.filter(l=>!l.isHidden);if(!this.isEnabled())return e;if(!this.viewportHeight||!e.length)return[];const o=e.slice(-1)[0];if(!o.height&&0===o.position)return[];const p=Ys(e,l=>l.position+500>this.y||l.position+l.height>this.y),r=Ys(e,l=>l.position-500>this.y+this.viewportHeight,p),c=[];for(let l=p;l<=r;l++)c.push(e[l]);return c}fixScroll(){const n=Math.max(0,this.totalHeight-this.viewportHeight);this.y<0&&this._setYBlocks(0),this.y>n&&this._setYBlocks(n/150)}static{this.\u0275fac=function(e){return new(e||t)(a.KVO(h))}}static{this.\u0275prov=a.jDH({token:t,factory:t.\u0275fac})}}return t})();function Ys(t,s,n=0){let e=n,o=t.length-1;for(;e!==o;){let p=Math.floor((e+o)/2);s(t[p])?o=p:e=e===p?o:p}return e}on([g],K.prototype,"yBlocks",void 0),on([g],K.prototype,"x",void 0),on([g],K.prototype,"viewportHeight",void 0),on([D],K.prototype,"y",null),on([D],K.prototype,"totalHeight",null),on([k],K.prototype,"_setYBlocks",null),on([k],K.prototype,"recalcPositions",null),on([k],K.prototype,"setViewport",null),on([k],K.prototype,"scrollIntoView",null);let no=(()=>{class t{static{this.\u0275fac=function(e){return new(e||t)}}static{this.\u0275cmp=a.VBU({type:t,selectors:[["tree-loading-component"]],inputs:{template:"template",node:"node"},decls:2,vars:5,consts:[[4,"ngIf"],[3,"ngTemplateOutlet","ngTemplateOutletContext"]],template:function(e,o){1&e&&(a.DNE(0,Ee,2,0,"span",0),a.eu8(1,1)),2&e&&(a.Y8G("ngIf",!o.template),a.R7$(),a.Y8G("ngTemplateOutlet",o.template)("ngTemplateOutletContext",a.eq3(3,Ce,o.node)))},dependencies:[y.bT,y.T3],encapsulation:2})}}return t})(),to=(()=>{class t{constructor(n,e){this.elementRef=n,this.virtualScroll=e,this.setViewport=this.throttle(()=>{this.virtualScroll.setViewport(this.elementRef.nativeElement)},17),this.scrollEventHandler=this.setViewport.bind(this)}ngOnInit(){this.virtualScroll.init()}ngAfterViewInit(){setTimeout(()=>{this.setViewport(),this.virtualScroll.fireEvent({eventName:E.initialized})}),this.elementRef.nativeElement.addEventListener("scroll",this.scrollEventHandler)}ngOnDestroy(){this.virtualScroll.clear(),this.elementRef.nativeElement.removeEventListener("scroll",this.scrollEventHandler)}getTotalHeight(){return this.virtualScroll.isEnabled()&&this.virtualScroll.totalHeight+"px"||"auto"}throttle(n,e){let o=0;return function(){let p=Date.now();p-o>=e&&(n(),o=p)}}static{this.\u0275fac=function(e){return new(e||t)(a.rXU(a.aKT),a.rXU(K))}}static{this.\u0275cmp=a.VBU({type:t,selectors:[["tree-viewport"]],features:[a.Jv_([K])],ngContentSelectors:Te,decls:1,vars:2,consts:[[4,"treeMobxAutorun"]],template:function(e,o){1&e&&(a.NAR(),a.DNE(0,De,3,2,"ng-container",0)),2&e&&a.Y8G("treeMobxAutorun",a.lJ4(1,Tn))},dependencies:[Dn],encapsulation:2})}}return t})();const ao=Object.assign(function so(...t){return k(...t)},k),oo=Object.assign(function eo(...t){return D(...t)},D),Xs=Object.assign(function po(...t){return g(...t)},g),zs="is-dragging-over",Ws="is-dragging-over-disabled";let Ks=(()=>{class t{set treeAllowDrop(n){this._allowDrop=n instanceof Function?n:(e,o)=>n}allowDrop(n){return this._allowDrop(this.treeDraggedElement.get(),n)}constructor(n,e,o,p){this.el=n,this.renderer=e,this.treeDraggedElement=o,this.ngZone=p,this.allowDragoverStyling=!0,this.onDropCallback=new a.bkB,this.onDragOverCallback=new a.bkB,this.onDragLeaveCallback=new a.bkB,this.onDragEnterCallback=new a.bkB,this._allowDrop=(r,c)=>!0,this.dragOverEventHandler=this.onDragOver.bind(this),this.dragEnterEventHandler=this.onDragEnter.bind(this),this.dragLeaveEventHandler=this.onDragLeave.bind(this)}ngAfterViewInit(){let n=this.el.nativeElement;this.ngZone.runOutsideAngular(()=>{n.addEventListener("dragover",this.dragOverEventHandler),n.addEventListener("dragenter",this.dragEnterEventHandler),n.addEventListener("dragleave",this.dragLeaveEventHandler)})}ngOnDestroy(){let n=this.el.nativeElement;n.removeEventListener("dragover",this.dragOverEventHandler),n.removeEventListener("dragenter",this.dragEnterEventHandler),n.removeEventListener("dragleave",this.dragLeaveEventHandler)}onDragOver(n){if(!this.allowDrop(n))return this.allowDragoverStyling?this.addDisabledClass():void 0;this.onDragOverCallback.emit({event:n,element:this.treeDraggedElement.get()}),n.preventDefault(),this.allowDragoverStyling&&this.addClass()}onDragEnter(n){this.allowDrop(n)&&(n.preventDefault(),this.onDragEnterCallback.emit({event:n,element:this.treeDraggedElement.get()}))}onDragLeave(n){if(!this.allowDrop(n))return this.allowDragoverStyling?this.removeDisabledClass():void 0;this.onDragLeaveCallback.emit({event:n,element:this.treeDraggedElement.get()}),this.allowDragoverStyling&&this.removeClass()}onDrop(n){this.allowDrop(n)&&(n.preventDefault(),this.onDropCallback.emit({event:n,element:this.treeDraggedElement.get()}),this.allowDragoverStyling&&this.removeClass(),this.treeDraggedElement.set(null))}addClass(){this.renderer.addClass(this.el.nativeElement,zs)}removeClass(){this.renderer.removeClass(this.el.nativeElement,zs)}addDisabledClass(){this.renderer.addClass(this.el.nativeElement,Ws)}removeDisabledClass(){this.renderer.removeClass(this.el.nativeElement,Ws)}static{this.\u0275fac=function(e){return new(e||t)(a.rXU(a.aKT),a.rXU(a.sFG),a.rXU(Nt),a.rXU(a.SKi))}}static{this.\u0275dir=a.FsC({type:t,selectors:[["","treeDrop",""]],hostBindings:function(e,o){1&e&&a.bIt("drop",function(r){return o.onDrop(r)})},inputs:{allowDragoverStyling:"allowDragoverStyling",treeAllowDrop:"treeAllowDrop"},outputs:{onDropCallback:"treeDrop",onDragOverCallback:"treeDropDragOver",onDragLeaveCallback:"treeDropDragLeave",onDragEnterCallback:"treeDropDragEnter"}})}}return t})(),Js=(()=>{class t{onDrop(n){this.node.mouseAction("drop",n.event,{from:n.element,to:{parent:this.node,index:this.dropIndex}})}allowDrop(n,e){return this.node.options.allowDrop(n,{parent:this.node,index:this.dropIndex},e)}static{this.\u0275fac=function(e){return new(e||t)}}static{this.\u0275cmp=a.VBU({type:t,selectors:[["TreeNodeDropSlot"],["tree-node-drop-slot"]],inputs:{node:"node",dropIndex:"dropIndex"},decls:1,vars:2,consts:[[1,"node-drop-slot",3,"treeDrop","treeAllowDrop","allowDragoverStyling"]],template:function(e,o){1&e&&(a.j41(0,"div",0),a.bIt("treeDrop",function(r){return o.onDrop(r)}),a.k0s()),2&e&&a.Y8G("treeAllowDrop",o.allowDrop.bind(o))("allowDragoverStyling",!0)},dependencies:[Ks],encapsulation:2})}}return t})(),ro=(()=>{class t{static{this.\u0275fac=function(e){return new(e||t)}}static{this.\u0275cmp=a.VBU({type:t,selectors:[["tree-node-checkbox"]],inputs:{node:"node"},decls:1,vars:2,consts:[[4,"treeMobxAutorun"],["type","checkbox",1,"tree-node-checkbox",3,"click","checked","indeterminate"]],template:function(e,o){1&e&&a.DNE(0,Ne,2,2,"ng-container",0),2&e&&a.Y8G("treeMobxAutorun",a.lJ4(1,Tn))},dependencies:[Dn],encapsulation:2})}}return t})(),Ft=(()=>{class t{static{this.\u0275fac=function(e){return new(e||t)}}static{this.\u0275cmp=a.VBU({type:t,selectors:[["tree-node-expander"]],inputs:{node:"node"},decls:1,vars:2,consts:[[4,"treeMobxAutorun"],["class","toggle-children-wrapper",3,"toggle-children-wrapper-expanded","toggle-children-wrapper-collapsed","click",4,"ngIf"],["class","toggle-children-placeholder",4,"ngIf"],[1,"toggle-children-wrapper",3,"click"],[1,"toggle-children"],[1,"toggle-children-placeholder"]],template:function(e,o){1&e&&a.DNE(0,Ae,3,2,"ng-container",0),2&e&&a.Y8G("treeMobxAutorun",a.lJ4(1,Tn))},dependencies:[Dn,y.bT],encapsulation:2})}}return t})(),co=(()=>{class t{constructor(n,e,o,p){this.el=n,this.renderer=e,this.treeDraggedElement=o,this.ngZone=p,this.dragEventHandler=this.onDrag.bind(this)}ngAfterViewInit(){let n=this.el.nativeElement;this.ngZone.runOutsideAngular(()=>{n.addEventListener("drag",this.dragEventHandler)})}ngDoCheck(){this.renderer.setAttribute(this.el.nativeElement,"draggable",this.treeDragEnabled?"true":"false")}ngOnDestroy(){this.el.nativeElement.removeEventListener("drag",this.dragEventHandler)}onDragStart(n){n.dataTransfer.setData("text",n.target.id),this.treeDraggedElement.set(this.draggedElement),this.draggedElement.mouseAction&&this.draggedElement.mouseAction("dragStart",n)}onDrag(n){this.draggedElement.mouseAction&&this.draggedElement.mouseAction("drag",n)}onDragEnd(){this.draggedElement.mouseAction&&this.draggedElement.mouseAction("dragEnd"),this.treeDraggedElement.set(null)}static{this.\u0275fac=function(e){return new(e||t)(a.rXU(a.aKT),a.rXU(a.sFG),a.rXU(Nt),a.rXU(a.SKi))}}static{this.\u0275dir=a.FsC({type:t,selectors:[["","treeDrag",""]],hostBindings:function(e,o){1&e&&a.bIt("dragstart",function(r){return o.onDragStart(r)})("dragend",function(){return o.onDragEnd()})},inputs:{draggedElement:[0,"treeDrag","draggedElement"],treeDragEnabled:"treeDragEnabled"}})}}return t})(),io=(()=>{class t{static{this.\u0275fac=function(e){return new(e||t)}}static{this.\u0275cmp=a.VBU({type:t,selectors:[["tree-node-content"]],inputs:{node:"node",index:"index",template:"template"},decls:2,vars:7,consts:[[4,"ngIf"],[3,"ngTemplateOutlet","ngTemplateOutletContext"]],template:function(e,o){1&e&&(a.DNE(0,Ie,2,1,"span",0),a.eu8(1,1)),2&e&&(a.Y8G("ngIf",!o.template),a.R7$(),a.Y8G("ngTemplateOutlet",o.template)("ngTemplateOutletContext",a.sMw(3,Se,o.node,o.node,o.index)))},dependencies:[y.bT,y.T3],encapsulation:2})}}return t})(),lo=(()=>{class t{static{this.\u0275fac=function(e){return new(e||t)}}static{this.\u0275cmp=a.VBU({type:t,selectors:[["tree-node-wrapper"]],inputs:{node:"node",index:"index",templates:"templates"},decls:2,vars:8,consts:[["class","node-wrapper",3,"padding-left",4,"ngIf"],[3,"ngTemplateOutlet","ngTemplateOutletContext"],[1,"node-wrapper"],[3,"node",4,"ngIf"],[3,"node"],[1,"node-content-wrapper",3,"click","dblclick","mouseover","mouseout","contextmenu","treeDrop","treeDropDragOver","treeDropDragLeave","treeDropDragEnter","treeAllowDrop","allowDragoverStyling","treeDrag","treeDragEnabled"],[3,"node","index","template"]],template:function(e,o){1&e&&(a.DNE(0,Ge,5,15,"div",0),a.eu8(1,1)),2&e&&(a.Y8G("ngIf",!o.templates.treeNodeWrapperTemplate),a.R7$(),a.Y8G("ngTemplateOutlet",o.templates.treeNodeWrapperTemplate)("ngTemplateOutletContext",a.ziG(3,qs,o.node,o.node,o.index,o.templates)))},dependencies:[y.bT,ro,Ft,co,Ks,io,y.T3],encapsulation:2})}}return t})(),uo=(()=>{class t{set isOpen(n){n?(this._show(),this.isEnabled&&!1===this._isOpen&&this._animateOpen()):this.isEnabled?this._animateClose():this._hide(),this._isOpen=!!n}constructor(n,e,o){this.renderer=n,this.templateRef=e,this.viewContainerRef=o}_show(){this.innerElement||(this.innerElement=this.viewContainerRef.createEmbeddedView(this.templateRef).rootNodes[0])}_hide(){this.viewContainerRef.clear(),this.innerElement=null}_animateOpen(){let n=this.animateSpeed,e=this.animateAcceleration,o=0;this.renderer.setStyle(this.innerElement,"max-height","0"),setTimeout(()=>{const p=setInterval(()=>{if(!this._isOpen||!this.innerElement)return clearInterval(p);o+=n;const r=Math.round(o);this.renderer.setStyle(this.innerElement,"max-height",`${r}px`);const c=this.innerElement.getBoundingClientRect?this.innerElement.getBoundingClientRect().height:0;n*=e,e*=1.005,c<r&&(this.renderer.setStyle(this.innerElement,"max-height",null),clearInterval(p))},17)})}_animateClose(){if(!this.innerElement)return;let n=this.animateSpeed,e=this.animateAcceleration,o=this.innerElement.getBoundingClientRect().height;const p=setInterval(()=>{if(this._isOpen||!this.innerElement)return clearInterval(p);o-=n,this.renderer.setStyle(this.innerElement,"max-height",`${o}px`),n*=e,e*=1.005,o<=0&&(this.viewContainerRef.clear(),this.innerElement=null,clearInterval(p))},17)}static{this.\u0275fac=function(e){return new(e||t)(a.rXU(a.sFG),a.rXU(a.C4Q),a.rXU(a.c1b))}}static{this.\u0275dir=a.FsC({type:t,selectors:[["","treeAnimateOpen",""]],inputs:{animateSpeed:[0,"treeAnimateOpenSpeed","animateSpeed"],animateAcceleration:[0,"treeAnimateOpenAcceleration","animateAcceleration"],isEnabled:[0,"treeAnimateOpenEnabled","isEnabled"],isOpen:[0,"treeAnimateOpen","isOpen"]}})}}return t})();var pt=function(t,s,n,e){var r,o=arguments.length,p=o<3?s:null===e?e=Object.getOwnPropertyDescriptor(s,n):e;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)p=Reflect.decorate(t,s,n,e);else for(var c=t.length-1;c>=0;c--)(r=t[c])&&(p=(o<3?r(p):o>3?r(s,n,p):r(s,n))||p);return o>3&&p&&Object.defineProperty(s,n,p),p};let Ot=(()=>{class t{static{this.\u0275fac=function(e){return new(e||t)}}static{this.\u0275cmp=a.VBU({type:t,selectors:[["tree-node-children"]],inputs:{node:"node",templates:"templates"},decls:1,vars:2,consts:[[4,"treeMobxAutorun"],[3,"tree-children","tree-children-no-padding",4,"treeAnimateOpen","treeAnimateOpenSpeed","treeAnimateOpenAcceleration","treeAnimateOpenEnabled"],[3,"nodes","templates","treeModel",4,"ngIf"],["class","tree-node-loading",3,"padding-left","template","node",4,"ngIf"],[3,"nodes","templates","treeModel"],[1,"tree-node-loading",3,"template","node"]],template:function(e,o){1&e&&a.DNE(0,Pe,2,4,"ng-container",0),2&e&&a.Y8G("treeMobxAutorun",a.lJ4(1,Tn))},dependencies:()=>[Dn,uo,y.bT,Zs,no],encapsulation:2})}}return t})(),Zs=(()=>{class t{constructor(){this._dispose=[]}get nodes(){return this._nodes}set nodes(n){this.setNodes(n)}get marginTop(){const n=this.viewportNodes&&this.viewportNodes.length&&this.viewportNodes[0];return(n&&n.parent?n.position-n.parent.position-n.parent.getSelfHeight():0)+"px"}setNodes(n){this._nodes=n}ngOnInit(){this.virtualScroll=this.treeModel.virtualScroll,this._dispose=[Cn(()=>this.virtualScroll.getViewportNodes(this.nodes).map(n=>n.index),n=>{this.viewportNodes=n.map(e=>this.nodes[e])},{compareStructural:!0,fireImmediately:!0}),Cn(()=>this.nodes,n=>{this.viewportNodes=this.virtualScroll.getViewportNodes(n)})]}ngOnDestroy(){this._dispose.forEach(n=>n())}trackNode(n,e){return e.id}static{this.\u0275fac=function(e){return new(e||t)}}static{this.\u0275cmp=a.VBU({type:t,selectors:[["tree-node-collection"]],inputs:{nodes:"nodes",treeModel:"treeModel",templates:"templates"},decls:1,vars:2,consts:[[4,"treeMobxAutorun"],[3,"node","index","templates",4,"ngFor","ngForOf","ngForTrackBy"],[3,"node","index","templates"]],template:function(e,o){1&e&&a.DNE(0,Le,3,4,"ng-container",0),2&e&&a.Y8G("treeMobxAutorun",a.lJ4(1,Tn))},dependencies:()=>[Dn,y.Sq,ko],encapsulation:2})}}return pt([Xs],t.prototype,"_nodes",void 0),pt([Xs],t.prototype,"viewportNodes",void 0),pt([oo],t.prototype,"marginTop",null),pt([ao],t.prototype,"setNodes",null),t})(),ko=(()=>{class t{static{this.\u0275fac=function(e){return new(e||t)}}static{this.\u0275cmp=a.VBU({type:t,selectors:[["TreeNode"],["tree-node"]],inputs:{node:"node",index:"index",templates:"templates"},decls:1,vars:2,consts:[[4,"treeMobxAutorun"],[3,"class","tree-node","tree-node-expanded","tree-node-collapsed","tree-node-leaf","tree-node-active","tree-node-focused",4,"ngIf"],[3,"ngTemplateOutlet","ngTemplateOutletContext"],[3,"dropIndex","node",4,"ngIf"],[3,"node","index","templates"],[3,"node","templates"],[3,"dropIndex","node"]],template:function(e,o){1&e&&a.DNE(0,He,3,8,"ng-container",0),2&e&&a.Y8G("treeMobxAutorun",a.lJ4(1,Tn))},dependencies:[Dn,y.bT,Js,lo,Ot,y.T3],encapsulation:2})}}return t})(),na=(()=>{class t{set nodes(n){}set options(n){}set focused(n){this.treeModel.setFocus(n)}set state(n){this.treeModel.setState(n)}constructor(n,e){this.treeModel=n,this.treeDraggedElement=e,n.eventNames.forEach(o=>this[o]=new a.bkB),n.subscribeToState(o=>this.stateChange.emit(o))}onKeydown(n){if(!this.treeModel.isFocused||["input","textarea"].includes(document.activeElement.tagName.toLowerCase()))return;const e=this.treeModel.getFocusedNode();this.treeModel.performKeyAction(e,n)}onMousedown(n){(function e(o,p){return!o||o.localName!==p&&e(o.parentElement,p)})(n.target,"tree-root")&&this.treeModel.setFocus(!1)}ngOnChanges(n){(n.options||n.nodes)&&this.treeModel.setData({options:n.options&&n.options.currentValue,nodes:n.nodes&&n.nodes.currentValue,events:this.pick(this,this.treeModel.eventNames)})}sizeChanged(){this.viewportComponent.setViewport()}pick(n,e){return e.reduce((o,p)=>(n&&n.hasOwnProperty(p)&&(o[p]=n[p]),o),{})}static{this.\u0275fac=function(e){return new(e||t)(a.rXU(h),a.rXU(Nt))}}static{this.\u0275cmp=a.VBU({type:t,selectors:[["Tree"],["tree-root"]],contentQueries:function(e,o,p){if(1&e&&(a.wni(p,Ue,5),a.wni(p,Ye,5),a.wni(p,Xe,5),a.wni(p,ze,5)),2&e){let r;a.mGM(r=a.lsd())&&(o.loadingTemplate=r.first),a.mGM(r=a.lsd())&&(o.treeNodeTemplate=r.first),a.mGM(r=a.lsd())&&(o.treeNodeWrapperTemplate=r.first),a.mGM(r=a.lsd())&&(o.treeNodeFullTemplate=r.first)}},viewQuery:function(e,o){if(1&e&&a.GBs(We,5),2&e){let p;a.mGM(p=a.lsd())&&(o.viewportComponent=p.first)}},hostBindings:function(e,o){1&e&&a.bIt("keydown",function(r){return o.onKeydown(r)},!1,a.N_X)("mousedown",function(r){return o.onMousedown(r)},!1,a.N_X)},inputs:{nodes:"nodes",options:"options",focused:"focused",state:"state"},outputs:{toggleExpanded:"toggleExpanded",activate:"activate",deactivate:"deactivate",nodeActivate:"nodeActivate",nodeDeactivate:"nodeDeactivate",select:"select",deselect:"deselect",focus:"focus",blur:"blur",updateData:"updateData",initialized:"initialized",moveNode:"moveNode",copyNode:"copyNode",loadNodeChildren:"loadNodeChildren",changeFilter:"changeFilter",event:"event",stateChange:"stateChange"},features:[a.Jv_([h]),a.OA$],decls:5,vars:6,consts:[["viewport",""],[1,"angular-tree-component"],[3,"nodes","treeModel","templates",4,"ngIf"],["class","empty-tree-drop-slot",3,"dropIndex","node",4,"ngIf"],[3,"nodes","treeModel","templates"],[1,"empty-tree-drop-slot",3,"dropIndex","node"]],template:function(e,o){1&e&&(a.j41(0,"tree-viewport",null,0)(2,"div",1),a.DNE(3,Je,1,8,"tree-node-collection",2)(4,Qe,1,2,"tree-node-drop-slot",3),a.k0s()()),2&e&&(a.R7$(2),a.AVh("node-dragging",o.treeDraggedElement.isDragging())("angular-tree-component-rtl",o.treeModel.options.rtl),a.R7$(),a.Y8G("ngIf",o.treeModel.roots),a.R7$(),a.Y8G("ngIf",o.treeModel.isEmptyTree()))},dependencies:[to,y.bT,Zs,Js],encapsulation:2})}}return t})(),ho=(()=>{class t{static{this.\u0275fac=function(e){return new(e||t)}}static{this.\u0275mod=a.$C({type:t})}static{this.\u0275inj=a.G2t({imports:[y.MD]})}}return t})();var fo=u(28212),ta=u(82312),x=u(5779),mo=u(26059),go=u(67647),At=u(893),St=u(38052),vo=(u(45489),u(62329)),yo=u(3725),It=u(16488),Rt=u(81367),Gt=u(27185),bo=u(12954),wo=u(13363),jt=u(37055),Mt=u(26760),Vt=u(70964),Pt=u(61049),xo=u(2227);class _o{constructor(s,n,e){this.level=s,this.setSize=n,this.positionInSet=e,this.loading$=new Pt.t(!1)}}let $t=(()=>{class t{constructor(){this.data$=new Pt.t([]),this.rows$=new Pt.t([]),this._onDestroy=new jt.B7,this.data$.pipe((0,Mt.Q)(this._onDestroy)).subscribe(n=>this.rows$.next(this.getFlattenedTree(n)))}ngOnDestroy(){this._onDestroy.next(),this._onDestroy.complete()}setExpanded(n,e){var o=this;return(0,Vt.A)(function*(){e?(yield o.getChildren(n),o.insertChildren(n)):o.removeChildren(n)})()}getFlattenedTree(n,e){return n.reduce((o,p,r)=>(p.state=new _o(e?e.state.level+1:0,n.length,r+1),[...o,p,...p.children&&p.expanded?this.getFlattenedTree(p.children,p):[]]),[])}getChildren(n){var e=this;return(0,Vt.A)(function*(){if(!n.children&&e.loadChildren){n.state.loading$.next(!0);try{n.children=yield e.getNormalizedChildren(e.loadChildren(n))}finally{n.state.loading$.next(!1)}}})()}getNormalizedChildren(n){return(0,Vt.A)(function*(){return(0,xo.A)(n)?yield n.toPromise():n instanceof Promise?yield n:n})()}insertChildren(n){if(!n.children)return;const e=[...this.rows$.getValue()],o=e.indexOf(n);if(o<0)return;const p=n.children.filter(c=>-1===e.indexOf(c)),r=this.getFlattenedTree(p,n);e.splice(o+1,0,...r),this.rows$.next(e)}removeChildren(n){const e=[...this.rows$.getValue()],o=e.indexOf(n);if(!(o<0)){for(;o+1<e.length&&e[o+1].state.level>n.state.level;)e.splice(o+1,1);this.rows$.next(e)}}static{this.\u0275fac=function(e){return new(e||t)}}static{this.\u0275prov=a.jDH({token:t,factory:t.\u0275fac})}}return t})(),Co=(()=>{class t{constructor(){this._changeDetector=(0,a.WQX)(a.gRc),this._treeGridService=(0,a.WQX)($t),this.rowsChange=new a.bkB,this._onDestroy=new jt.B7}set data(n){this._treeGridService.data$.next(n)}set loadChildren(n){this._treeGridService.loadChildren=n}ngOnInit(){this._treeGridService.rows$.pipe((0,Mt.Q)(this._onDestroy)).subscribe(n=>{this.rowsChange.emit(n),this._changeDetector.detectChanges()})}ngOnDestroy(){this._onDestroy.next(),this._onDestroy.complete()}static{this.\u0275fac=function(e){return new(e||t)}}static{this.\u0275dir=a.FsC({type:t,selectors:[["","uxTreeGrid",""]],hostAttrs:[1,"treegrid"],inputs:{data:[0,"uxTreeGrid","data"],loadChildren:"loadChildren"},outputs:{rowsChange:"rowsChange"},standalone:!1,features:[a.Jv_([$t])]})}}return t})();var Eo=u(4578);let sa=(()=>{class t{constructor(){this._treeGridService=(0,a.WQX)($t),this.expandedChange=new a.bkB,this.loading=!1,this._expanded=!1,this._onDestroy=new jt.B7}set expanded(n){const e=(0,Eo.c)(n);e!==this._expanded&&(this._expanded=e,this._treeGridService.setExpanded(this.item,e))}get expanded(){return this._expanded}ngOnInit(){if(!this.item||!this.item.state)throw new Error("uxTreeGridRow should be configured with an object emitted by uxTreeGrid.rows.");this.item.state.loading$.pipe((0,Mt.Q)(this._onDestroy)).subscribe(n=>this.loading=n)}ngOnDestroy(){this._onDestroy.next(),this._onDestroy.complete()}collapse(n){this.expanded=!1,this.expandedChange.emit(!1),n&&n.preventDefault()}expand(n){this.canExpand&&(this.expanded=!0,this.expandedChange.emit(!0),n&&n.preventDefault())}toggle(){this.expanded?this.collapse():this.expand()}static{this.\u0275fac=function(e){return new(e||t)}}static{this.\u0275dir=a.FsC({type:t,selectors:[["","uxTreeGridRow",""]],hostVars:6,hostBindings:function(e,o){1&e&&a.bIt("keydown.ArrowLeft",function(r){return o.collapse(r)})("keydown.ArrowRight",function(r){return o.expand(r)}),2&e&&a.AVh("treegrid-row",!0)("treegrid-row-expanded",o.expanded)("treegrid-row-loading",o.loading)},inputs:{item:[0,"uxTreeGridRow","item"],canExpand:"canExpand",expanded:"expanded"},outputs:{expandedChange:"expandedChange"},exportAs:["uxTreeGridRow"],standalone:!1})}}return t})();var To=u(5087);let Do=(()=>{class t{constructor(){this._row=(0,a.WQX)(sa)}set uxTreeGridIndent(n){this._indent=(0,To.c)(n,25)}get uxTreeGridIndent(){return this._indent}get indentation(){return this._row&&this._row.item?7+this._row.item.state.level*this._indent:7}static{this.\u0275fac=function(e){return new(e||t)}}static{this.\u0275dir=a.FsC({type:t,selectors:[["","uxTreeGridIndent",""]],hostVars:2,hostBindings:function(e,o){2&e&&a.xc7("padding-left",o.indentation,"px")},inputs:{uxTreeGridIndent:"uxTreeGridIndent"},standalone:!1})}}return t})();var aa=u(34554),No=u(17782),Fo=u(2854),Lt=u(78170),Bt=u(79017),qt=u(32034),Ht=u(81838);function Oo(t,s){1&t&&a.nrm(0,"ux-icon",52)}function Ao(t,s){1&t&&a.nrm(0,"span",53)}function So(t,s){if(1&t){const n=a.RV6();a.j41(0,"button",49),a.bIt("click",function(o){return a.eBV(n),a.XpG(),a.sdS(1).toggle(),a.Njj(o.stopPropagation())}),a.DNE(1,Oo,1,0,"ux-icon",50)(2,Ao,1,0,"span",51),a.k0s()}if(2&t){a.XpG();const n=a.sdS(1);a.R7$(),a.Y8G("ngIf",!n.loading),a.R7$(),a.Y8G("ngIf",n.loading)}}function Io(t,s){if(1&t){const n=a.RV6();a.j41(0,"tr",42,0),a.mxI("expandedChange",function(o){const p=a.eBV(n).$implicit;return a.DH7(p.expanded,o)||(p.expanded=o),a.Njj(o)}),a.bIt("selectedChange",function(o){const p=a.eBV(n).$implicit,r=a.XpG();return a.Njj(o?r.select(p):r.deselect(p))}),a.j41(2,"td",43)(3,"span",44),a.DNE(4,So,3,2,"button",45),a.k0s(),a.j41(5,"ux-checkbox",46),a.bIt("valueChange",function(o){const p=a.eBV(n).$implicit,r=a.XpG();return a.Njj(o?r.select(p):r.deselect(p))}),a.k0s(),a.j41(6,"span",47),a.nrm(7,"ux-icon",48),a.k0s(),a.j41(8,"span"),a.EFF(9),a.k0s()(),a.j41(10,"td")(11,"span"),a.EFF(12),a.nI1(13,"date"),a.k0s()()()}if(2&t){const n=s.$implicit,e=a.XpG();a.Y8G("uxTreeGridRow",n)("canExpand","folder"===n.type),a.R50("expanded",n.expanded),a.Y8G("uxSelectionItem",n)("selected",e.isSelected(n)),a.BMQ("aria-expanded",n.expanded)("aria-level",n.state.level+1)("aria-setsize",n.state.setSize)("aria-posinset",n.state.positionInSet),a.R7$(4),a.Y8G("ngIf",n.children&&n.children.length>0),a.R7$(),a.Y8G("value",e.isSelected(n)),a.R7$(2),a.Y8G("name",e.getIcon(n)),a.R7$(2),a.JRh(n.title),a.R7$(3),a.JRh(a.bMT(13,14,n.date))}}function Ro(t,s){if(1&t&&(a.j41(0,"span"),a.EFF(1),a.k0s()),2&t){const n=s.$implicit,e=s.last;a.R7$(),a.SpI(" ",n.title+(e?".":", ")," ")}}function Go(t,s){1&t&&(a.j41(0,"em"),a.EFF(1,"none"),a.k0s())}function jo(t,s){1&t&&a.nrm(0,"ux-icon",52)}function Mo(t,s){1&t&&a.nrm(0,"span",53)}function Vo(t,s){if(1&t){const n=a.RV6();a.j41(0,"button",49),a.bIt("click",function(o){return a.eBV(n),a.XpG(),a.sdS(1).toggle(),a.Njj(o.stopPropagation())}),a.DNE(1,jo,1,0,"ux-icon",50)(2,Mo,1,0,"span",51),a.k0s()}if(2&t){a.XpG();const n=a.sdS(1);a.R7$(),a.Y8G("ngIf",!n.loading),a.R7$(),a.Y8G("ngIf",n.loading)}}function Po(t,s){if(1&t){const n=a.RV6();a.j41(0,"tr",54,0),a.mxI("expandedChange",function(o){const p=a.eBV(n).$implicit;return a.DH7(p.expanded,o)||(p.expanded=o),a.Njj(o)}),a.j41(2,"td",43)(3,"span",44),a.DNE(4,Vo,3,2,"button",45),a.k0s(),a.j41(5,"span",47),a.nrm(6,"ux-icon",48),a.k0s(),a.j41(7,"span"),a.EFF(8),a.k0s()(),a.j41(9,"td")(10,"span"),a.EFF(11),a.k0s()(),a.j41(12,"td")(13,"span"),a.EFF(14),a.nI1(15,"date"),a.k0s()()()}if(2&t){const n=s.$implicit,e=a.XpG();a.Y8G("uxTreeGridRow",n)("canExpand","folder"===n.type),a.R50("expanded",n.expanded),a.Y8G("uxSelectionItem",n),a.BMQ("aria-expanded",n.expanded)("aria-level",n.state.level+1)("aria-setsize",n.state.setSize)("aria-posinset",n.state.positionInSet),a.R7$(4),a.Y8G("ngIf","folder"===n.type),a.R7$(2),a.Y8G("name",e.getIcon(n)),a.R7$(2),a.JRh(n.title),a.R7$(3),a.JRh(n.author),a.R7$(3),a.JRh(a.bMT(15,13,n.date))}}function $o(t,s){if(1&t&&(a.j41(0,"span"),a.EFF(1),a.k0s()),2&t){const n=s.$implicit,e=s.last;a.R7$(),a.SpI(" ",n.title+(e?".":", ")," ")}}function Lo(t,s){1&t&&(a.j41(0,"em"),a.EFF(1,"none"),a.k0s())}let Ut=class Wt extends It.j{set selectAll(s){!1===s?this.selected=[]:!0===s&&(this.selected=[...this.itemsFlat])}get selectAll(){return 0!==this.selected.length&&(this.selected.length===this.itemsFlat.length||-1)}constructor(){super(u(23018)),this.selected=[],this.rows=[],this.items=[{title:"Documents",date:new Date("2013-02-16"),type:"folder",children:[{title:"Pictures",date:new Date("2013-05-28"),type:"folder",children:[{title:"Alcazar",date:new Date("2014-05-15"),type:"file"},{title:"Citadel",date:new Date("2015-09-02"),type:"file"},{title:"Donjon",date:new Date("2014-04-10"),type:"file"}]},{title:"Word files",date:new Date("2013-09-25"),type:"folder",children:[{title:"Accounts",date:new Date("2013-10-04"),type:"folder",children:[{title:"Castle",date:new Date("2014-05-15"),type:"file"},{title:"Estate",date:new Date("2015-08-03"),type:"file"},{title:"Manor",date:new Date("2014-05-30"),type:"file"},{title:"Mansion",date:new Date("2014-04-23"),type:"file"},{title:"Villa",date:new Date("2015-09-21"),type:"file"}]}]}]},{title:"Emails",date:new Date("2013-03-17"),type:"folder",children:[{title:"Inbox",date:new Date("2013-03-17"),type:"folder"},{title:"Outbox",date:new Date("2013-03-17"),type:"folder"}]},{title:"Empty",date:new Date("2016-06-02"),type:"folder"}],this.itemsFlat=this.flatten(this.items),this.asyncSelected=[],this.asyncRows=[],this.asyncItems=[{title:"Folder 1",type:"folder"},{title:"Folder 2",type:"folder"},{title:"Folder 3",type:"folder"}],this.loadChildrenFn=this.loadChildren.bind(this),this.playground={files:{"app.component.html":this.snippets.raw.appHtml,"app.component.ts":this.snippets.raw.appTs},modules:[{imports:["AccordionModule","CheckboxModule","SelectionModule","TreeGridModule"],library:"@ux-aspects/ux-aspects"}]}}select(s){-1===this.selected.indexOf(s)&&(this.selected=[...this.selected,s]),s.children&&s.children.forEach(n=>this.select(n))}deselect(s){this.selected=this.selected.filter(n=>n!==s),s.children&&s.children.forEach(n=>this.deselect(n)),this.checkChildren()}checkChildren(){for(const s of this.selected)s.hasOwnProperty("children")&&(s.children.some(e=>this.isSelected(e))||(this.selected=this.selected.filter(e=>e!==s)))}isSelected(s){return-1!==this.selected.indexOf(s)}loadChildren(s){return new Promise(n=>{setTimeout(()=>{const e=this.asyncItems.indexOf(s),o=[];for(let p=0;p<10;p+=1)o.push({title:`Document ${10*e+p+1}`,author:chance.name(),date:chance.date(),type:"file"});n(o)},2e3)})}flatten(s){return s.reduce((n,e)=>[...n,e,...e.children?this.flatten(e.children):[]],[])}clearChildren(){for(const s of this.asyncItems)s.expanded=!1,delete s.children}setExpanded(s,n){for(const e of s)e.expanded=n}getIcon(s){return"folder"!==s.type||s.expanded?"folder"===s.type&&s.expanded?"folder-open":"file"===s.type?"document":void 0:"folder"}static{this.\u0275fac=function(n){return new(n||Wt)}}static{this.\u0275cmp=a.VBU({type:Wt,selectors:[["uxd-tree-grid"]],features:[a.Vt3],decls:177,vars:19,consts:[["treeGridRow","uxTreeGridRow"],[3,"collapseOthers"],["heading","Tree Grid with Preloaded Data",1,"accordion-chevron",3,"expanded"],["role","treegrid","aria-multiselectable","true",1,"table","table-hover",3,"rowsChange","uxTreeGrid"],[1,"treegrid-header","table-header-dark"],["aria-label","Select all rows",3,"valueChange","value"],[1,"treegrid-header-text"],["mode","simple",3,"uxSelection"],["role","row","class","clickable",3,"uxTreeGridRow","canExpand","expanded","uxSelectionItem","selected","expandedChange","selectedChange",4,"ngFor","ngForOf"],[1,"m-t-md"],[4,"ngFor","ngForOf"],[4,"ngIf"],["heading","Tree Grid with Asynchronous Loading",1,"accordion-chevron"],[1,"btn-container"],["type","button",1,"btn","button-secondary",3,"click"],["name","chevron-down"],["name","chevron-right"],["name","close"],["role","treegrid","aria-multiselectable","true",1,"table","table-hover",3,"rowsChange","uxTreeGrid","loadChildren"],["mode","row",3,"uxSelectionChange","uxSelection"],["role","row","class","clickable",3,"uxTreeGridRow","canExpand","expanded","uxSelectionItem","expandedChange",4,"ngFor","ngForOf"],["routerLink","/components/tables","fragment","fixed-header-table"],["routerLink","/components/scrollbar","fragment","virtual-for"],["tableTitle","Inputs"],["uxd-api-property","","name","uxTreeGrid","type","TreeGridItem[]",3,"required"],["uxd-api-property","","name","loadChildren","type","(parent: TreeGridItem) => TreeGridItem[] | Promise<TreeGridItem[]> | Observable<TreeGridItem[]>"],["tableTitle","Outputs"],["uxd-api-property","","name","rowsChange","type","TreeGridItem[]"],["uxd-api-property","","name","uxTreeGridRow","type","TreeGridItem",3,"required"],["uxd-api-property","","name","canExpand","type","boolean"],["uxd-api-property","","name","expanded","type","boolean"],["uxd-api-property","","name","expandedChange","type","boolean"],["tableTitle","Functions"],["uxd-api-property","","name","toggle"],["uxd-api-property","","name","collapse"],["uxd-api-property","","name","expand"],["uxd-api-property","","name","children","type","TreeGridItem[]"],["uxd-api-property","","name","state","type","TreeGridState"],[3,"minimal"],["heading","HTML"],[3,"content"],["heading","TypeScript"],["role","row",1,"clickable",3,"expandedChange","selectedChange","uxTreeGridRow","canExpand","expanded","uxSelectionItem","selected"],["uxTreeGridIndent",""],[1,"treegrid-expander"],["aria-hidden","true","type","button","tabindex","-1",3,"click",4,"ngIf"],["aria-label","Toggle row selection",3,"valueChange","value"],[1,"treegrid-icon"],[3,"name"],["aria-hidden","true","type","button","tabindex","-1",3,"click"],["name","chevron-right","class","treegrid-expander-icon",4,"ngIf"],["class","spinner spinner-accent spinner-bounce-middle",4,"ngIf"],["name","chevron-right",1,"treegrid-expander-icon"],[1,"spinner","spinner-accent","spinner-bounce-middle"],["role","row",1,"clickable",3,"expandedChange","uxTreeGridRow","canExpand","expanded","uxSelectionItem"]],template:function(n,e){1&n&&(a.j41(0,"ux-accordion",1)(1,"ux-accordion-panel",2)(2,"table",3),a.bIt("rowsChange",function(p){return e.rows=p}),a.j41(3,"thead")(4,"tr",4)(5,"th")(6,"ux-checkbox",5),a.mxI("valueChange",function(p){return a.DH7(e.selectAll,p)||(e.selectAll=p),p}),a.k0s(),a.j41(7,"span",6),a.EFF(8,"Title"),a.k0s()(),a.j41(9,"th"),a.EFF(10,"Date"),a.k0s()()(),a.j41(11,"tbody",7),a.DNE(12,Io,14,16,"tr",8),a.k0s()(),a.j41(13,"p",9),a.EFF(14," Selected items: "),a.DNE(15,Ro,2,1,"span",10)(16,Go,2,0,"em",11),a.k0s()(),a.j41(17,"ux-accordion-panel",12)(18,"div",13)(19,"button",14),a.bIt("click",function(){return e.setExpanded(e.asyncItems,!0)}),a.nrm(20,"ux-icon",15),a.EFF(21," Expand All "),a.k0s(),a.j41(22,"button",14),a.bIt("click",function(){return e.setExpanded(e.asyncItems,!1)}),a.nrm(23,"ux-icon",16),a.EFF(24," Contract All "),a.k0s(),a.j41(25,"button",14),a.bIt("click",function(){return e.clearChildren()}),a.nrm(26,"ux-icon",17),a.EFF(27," Clear Cached Data "),a.k0s()(),a.j41(28,"table",18),a.bIt("rowsChange",function(p){return e.asyncRows=p}),a.j41(29,"thead")(30,"tr",4)(31,"th")(32,"span",6),a.EFF(33,"Name"),a.k0s()(),a.j41(34,"th"),a.EFF(35,"Author"),a.k0s(),a.j41(36,"th"),a.EFF(37,"Date"),a.k0s()()(),a.j41(38,"tbody",19),a.mxI("uxSelectionChange",function(p){return a.DH7(e.asyncSelected,p)||(e.asyncSelected=p),p}),a.DNE(39,Po,16,15,"tr",20),a.k0s()(),a.j41(40,"p",9),a.EFF(41," Selected items: "),a.DNE(42,$o,2,1,"span",10)(43,Lo,2,0,"em",11),a.k0s()()(),a.nrm(44,"hr"),a.j41(45,"p"),a.EFF(46," A tree grid allows hierarchical data to be displayed and navigated along with the benefits of a tabular presentation. A tree grid is created by applying the "),a.j41(47,"code"),a.EFF(48,"uxTreeGrid"),a.k0s(),a.EFF(49," directive to a "),a.j41(50,"code"),a.EFF(51,"table"),a.k0s(),a.EFF(52," element, and the "),a.j41(53,"code"),a.EFF(54,"uxTreeGridRow"),a.k0s(),a.EFF(55," to each of the rows. Many of the table components and directives can also be applied to a tree grid, such as selection and column sorting.\n"),a.k0s(),a.j41(56,"p"),a.EFF(57,' The tree grid also supports lazy loading of data, as illustrated in the "Tree Grid with Asynchronous Loading" example above. This allows a function to be called when expanding certain rows, which can return the child items either synchronously or asynchronously. By doing so, the initial load time of a component containing a large tree grid can be reduced.\n'),a.k0s(),a.j41(58,"p")(59,"code"),a.EFF(60,"uxTreeGrid"),a.k0s(),a.EFF(61," can be combined with "),a.j41(62,"a",21),a.EFF(63,"Fixed Header Table"),a.k0s(),a.EFF(64," and "),a.j41(65,"a",22),a.EFF(66,"Virtual For"),a.k0s(),a.EFF(67," to enable virtual scrolling. This may help performance when rendering a tree grid with a large number of potential rows.\n"),a.k0s(),a.j41(68,"h4"),a.EFF(69,"uxTreeGrid"),a.k0s(),a.j41(70,"p"),a.EFF(71,"The following properties are available to configure the "),a.j41(72,"code"),a.EFF(73,"uxTreeGrid"),a.k0s(),a.EFF(74," directive."),a.k0s(),a.j41(75,"uxd-api-properties",23)(76,"tr",24),a.EFF(77," The items to display in the tree grid. See below for details of the "),a.j41(78,"code"),a.EFF(79,"TreeGridItem"),a.k0s(),a.EFF(80," interface. "),a.k0s(),a.j41(81,"tr",25)(82,"p"),a.EFF(83," A function which provides the array of child items of a particular row. This can be used for lazy loading of tree content, and supports observables and promises to allow loading data asynchronously. "),a.k0s(),a.j41(84,"p"),a.EFF(85," Use this in combination with "),a.j41(86,"code"),a.EFF(87,"canExpand"),a.k0s(),a.EFF(88," on the "),a.j41(89,"code"),a.EFF(90,"uxTreeGridRow"),a.k0s(),a.EFF(91," to specify which rows can potentially have child items. "),a.k0s()()(),a.j41(92,"uxd-api-properties",26)(93,"tr",27),a.EFF(94," Provides an array of the currently visible rows, based on the expanded/collapsed states. Bind this array to an "),a.j41(95,"code"),a.EFF(96,"ngFor"),a.k0s(),a.EFF(97," directive to populate the table rows, after applying any required filtering. "),a.k0s()(),a.j41(98,"h4"),a.EFF(99,"uxTreeGridRow"),a.k0s(),a.j41(100,"p"),a.EFF(101,"The following properties are available to configure the "),a.j41(102,"code"),a.EFF(103,"uxTreeGridRow"),a.k0s(),a.EFF(104," directive."),a.k0s(),a.j41(105,"uxd-api-properties",23)(106,"tr",28),a.EFF(107," The item that the row displays. This should be a member of the array emitted by the "),a.j41(108,"code"),a.EFF(109,"rowsChange"),a.k0s(),a.EFF(110," output of the "),a.j41(111,"code"),a.EFF(112,"uxTreeGrid"),a.k0s(),a.EFF(113," directive, which manages the visible rows and their states. "),a.k0s(),a.j41(114,"tr",29),a.EFF(115," Whether the row can expand or not. "),a.k0s(),a.j41(116,"tr",30),a.EFF(117," Whether the row is expanded or not. This expression can used to programmatically control the expanded state of rows. "),a.k0s()(),a.j41(118,"uxd-api-properties",26)(119,"tr",31),a.EFF(120," Emitted when the expanded state of the row changes. "),a.k0s()(),a.j41(121,"uxd-api-properties",32)(122,"tr",33),a.EFF(123," Toggles the expanded state of the row. "),a.k0s(),a.j41(124,"tr",34),a.EFF(125," Collapses the row, if it is expanded. "),a.k0s(),a.j41(126,"tr",35),a.EFF(127," Expands the row, if it can be expanded. "),a.k0s()(),a.j41(128,"h4"),a.EFF(129,"uxTreeGridIndent"),a.k0s(),a.j41(130,"p"),a.EFF(131," Apply the "),a.j41(132,"code"),a.EFF(133,"uxTreeGridIndent"),a.k0s(),a.EFF(134," attribute directive to the first "),a.j41(135,"code"),a.EFF(136,"td"),a.k0s(),a.EFF(137," of every row to apply the correct level of indentation. By default the indentation is "),a.j41(138,"code"),a.EFF(139,"25px"),a.k0s(),a.EFF(140," however you can provide the attribute with a value indicating how many pixels it should indent.\n"),a.k0s(),a.j41(141,"h4"),a.EFF(142,"TreeGridItem"),a.k0s(),a.j41(143,"p"),a.EFF(144," The tree grid directives use the "),a.j41(145,"code"),a.EFF(146,"TreeGridItem"),a.k0s(),a.EFF(147," interface to define objects which can be displayed as rows. When defining a type for the data to load into a tree grid, ensure that it implements "),a.j41(148,"code"),a.EFF(149,"TreeGridItem"),a.k0s(),a.EFF(150,".\n"),a.k0s(),a.j41(151,"uxd-api-properties")(152,"tr",36)(153,"p"),a.EFF(154," The child items. Providing this array will allow the row to be expanded, displaying the child items. "),a.k0s(),a.j41(155,"p"),a.EFF(156," If the child items are to be lazy loaded when the user attempts to expand the row, leave this property unset and specify a "),a.j41(157,"code"),a.EFF(158,"loadChildren"),a.k0s(),a.EFF(159," function. The tree grid will automatically populate this array when the data is successfully loaded. "),a.k0s(),a.j41(160,"p"),a.EFF(161," Set this property to undefined or null to trigger a subsequent call to "),a.j41(162,"code"),a.EFF(163,"loadChildren"),a.k0s(),a.EFF(164," when the user next expands the row. "),a.k0s()(),a.j41(165,"tr",37),a.EFF(166," This property will be set by the tree grid to store the row's current state. For example, the "),a.j41(167,"code"),a.EFF(168,"level"),a.k0s(),a.EFF(169," property will indicate the row's depth within the tree hierarchy. "),a.k0s()(),a.j41(170,"h4"),a.EFF(171,"Example Code"),a.k0s(),a.j41(172,"ux-tabset",38)(173,"ux-tab",39),a.nrm(174,"uxd-snippet",40),a.k0s(),a.j41(175,"ux-tab",41),a.nrm(176,"uxd-snippet",40),a.k0s()()),2&n&&(a.Y8G("collapseOthers",!0),a.R7$(),a.Y8G("expanded",!0),a.R7$(),a.Y8G("uxTreeGrid",e.items),a.R7$(4),a.R50("value",e.selectAll),a.R7$(5),a.Y8G("uxSelection",e.selected),a.R7$(),a.Y8G("ngForOf",e.rows),a.R7$(3),a.Y8G("ngForOf",e.selected),a.R7$(),a.Y8G("ngIf",0===(null==e.selected?null:e.selected.length)),a.R7$(12),a.Y8G("uxTreeGrid",e.asyncItems)("loadChildren",e.loadChildrenFn),a.R7$(10),a.R50("uxSelection",e.asyncSelected),a.R7$(),a.Y8G("ngForOf",e.asyncRows),a.R7$(3),a.Y8G("ngForOf",e.asyncSelected),a.R7$(),a.Y8G("ngIf",0===(null==e.asyncSelected?null:e.asyncSelected.length)),a.R7$(33),a.Y8G("required",!0),a.R7$(30),a.Y8G("required",!0),a.R7$(66),a.Y8G("minimal",!1),a.R7$(2),a.Y8G("content",e.snippets.compiled.appHtml),a.R7$(2),a.Y8G("content",e.snippets.compiled.appTs))},dependencies:[x.h6p,bo.M,wo.k,x.fPv,Co,sa,Do,x.q4,aa.P,x.Rkw,No.s,Fo.D,y.Sq,y.bT,x.opy,Lt.R,x.NhY,Bt.G,ta.Wk,vo.H,yo.p,x.w9h,qt.f,Ht.j,Rt.N,y.vh],encapsulation:2})}};Ut=(0,St.Cg)([(0,Gt.zo)("ComponentsTreeGridComponent")],Ut);let Bo=(()=>{class t{getDocuments(){return new Promise(n=>{setTimeout(()=>{const e=[];for(let o=0;o<50;o++)e.push({name:`Document ${o}`});n(e)},1e3)})}getPictures(){return new Promise(n=>{setTimeout(()=>{const e=[];for(let o=0;o<50;o++)e.push({name:`IMG_${chance.pad(o,4)}`});n(e)},1e3)})}static{this.\u0275fac=function(e){return new(e||t)}}static{this.\u0275prov=a.jDH({token:t,factory:t.\u0275fac,providedIn:"root"})}}return t})();var ea=u(61384),oa=u(20260);function qo(t,s){if(1&t){const n=a.RV6();a.j41(0,"div",16)(1,"div",17)(2,"ux-checkbox",18),a.bIt("valueChange",function(o){const p=a.eBV(n).$implicit,r=a.XpG();return a.Njj(r.setChecked(p,o))}),a.k0s(),a.nrm(3,"tree-node-expander",19),a.j41(4,"div",20),a.bIt("focus",function(){const o=a.eBV(n).$implicit,p=a.XpG();return a.Njj(p.focus(o))})("click",function(){const o=a.eBV(n).$implicit,p=a.XpG();return a.Njj(p.setChecked(o,!o.data.checked))})("keydown",function(o){const p=a.eBV(n).$implicit,r=a.XpG();return a.Njj(r.setChecked(p,!p.data.checked,o))}),a.nrm(5,"ux-icon",21),a.j41(6,"span"),a.EFF(7),a.k0s()()(),a.nrm(8,"tree-node-children",22),a.k0s()}if(2&t){const n=s.$implicit,e=s.templates,o=a.XpG();a.R7$(2),a.Mz_("aria-label","Toggle selection of ",n.data.name,""),a.Y8G("value",n.data.checked)("indeterminateValue",-1),a.R7$(),a.Y8G("node",n),a.R7$(),a.AVh("node-content-wrapper-active",n.data.checked)("node-content-wrapper-focused",n.data.checked||n.isFocused),a.Y8G("tabindex",n===o.focused||!o.focused&&n.isRoot&&0===n.index?0:-1)("focusIf",n===o.focused),a.BMQ("aria-expanded",n.isExpanded)("aria-level",n.level)("aria-selected",n.data.checked),a.R7$(),a.Y8G("name",o.getIcon(n)),a.R7$(),a.AVh("title",!0),a.R7$(),a.JRh(n.data.name),a.R7$(),a.Y8G("node",n)("templates",e)}}function Ho(t,s){1&t&&a.nrm(0,"div",23)}let Yt=class Kt extends It.j{constructor(s){super(u(48048)),this._treeViewService=s,this.nodes=[{name:"Documents",hasChildren:!0,source:this._treeViewService.getDocuments},{name:"Pictures",hasChildren:!0,source:this._treeViewService.getPictures}],this.options={getChildren:n=>n.data.source?n.data.source():[]}}setChecked(s,n=s.data.checked,e){s.data.checked===n||e&&32!==e.keyCode||(this.setChildrenState(s,n),this.setParentNodeState(s.realParent),e&&e.preventDefault())}setChildrenState(s,n=s.data.checked){s.data.checked=n,s.children&&s.children.forEach(e=>this.setChildrenState(e,n))}setParentNodeState(s){if(!s)return;const n=s.children.every(o=>o.data.checked),e=s.children.every(o=>!o.data.checked);s.data.checked=!!n||!e&&-1,this.setParentNodeState(s.parent)}onChildrenLoaded(s){this.setChildrenState(s)}focus(s){s.focus(),s.treeModel.setFocus(!0)}updatedFocusedItem(){this.focused&&!this.isNodeVisible(this.focused)&&(this.focused=null)}isNodeVisible(s){return!!s.isRoot||!s.parent.isCollapsed&&this.isNodeVisible(s.parent)}getIcon(s){return s.hasChildren&&!s.isExpanded?"folder":s.hasChildren&&s.isExpanded?"folder-open":s.hasChildren?void 0:"document"}static{this.\u0275fac=function(n){return new(n||Kt)(a.rXU(Bo))}}static{this.\u0275cmp=a.VBU({type:Kt,selectors:[["uxd-components-tree-view-custom-node"]],features:[a.Vt3],decls:49,vars:7,consts:[["tree",""],["treeNodeFullTemplate",""],["loadingTemplate",""],[1,"tree-view-example-container"],["role","tree",3,"focus","stateChange","loadNodeChildren","nodes","options"],[1,"btn-container"],[1,"btn","button-secondary",3,"click"],[3,"minimal"],["heading","HTML"],[3,"content"],["heading","TypeScript"],["heading","CSS"],["heading","Service"],[1,"m-b-nil"],["href","https://github.com/CirclonGroup/angular-tree-component",1,"hyperlink"],["href","https://angular2-tree.readme.io/docs/",1,"hyperlink"],[1,"tree-node"],[1,"node-wrapper"],["tabindex","-1",3,"valueChange","aria-label","value","indeterminateValue"],[3,"node"],["uxFocusIndicator","","role","treeitem",1,"node-content-wrapper",3,"focus","click","keydown","tabindex","focusIf"],[3,"name"],["role","group",3,"node","templates"],[1,"spinner","spinner-accent","spinner-bounce-middle"]],template:function(n,e){if(1&n){const o=a.RV6();a.j41(0,"div",3)(1,"tree-root",4,0),a.bIt("focus",function(r){return a.eBV(o),a.Njj(e.focused=r.node)})("stateChange",function(){return a.eBV(o),a.Njj(e.updatedFocusedItem())})("loadNodeChildren",function(r){return a.eBV(o),a.Njj(e.onChildrenLoaded(r.node))}),a.DNE(3,qo,9,20,"ng-template",null,1,a.C5r)(5,Ho,1,0,"ng-template",null,2,a.C5r),a.k0s()(),a.j41(7,"div",5)(8,"button",6),a.bIt("click",function(){a.eBV(o);const r=a.sdS(2);return a.Njj(r.treeModel.expandAll())}),a.EFF(9," Expand All Nodes "),a.k0s(),a.j41(10,"button",6),a.bIt("click",function(){a.eBV(o);const r=a.sdS(2);return a.Njj(r.treeModel.collapseAll())}),a.EFF(11," Collapse All Nodes "),a.k0s()(),a.nrm(12,"hr"),a.j41(13,"p"),a.EFF(14," The tree view component supports custom templates which can be used to further enhance its capabilities. One example of this is to add checkboxes to nodes making it possible to select multiple nodes, or even select/deselect an entire subtree.\n"),a.k0s(),a.j41(15,"p"),a.EFF(16," The example above also shows how it is possible to lazy load child nodes only when the user expands the parent node.\n"),a.k0s(),a.j41(17,"p"),a.EFF(18," The tree view also exposes a "),a.j41(19,"code"),a.EFF(20,"treeModel"),a.k0s(),a.EFF(21," object which provides functions to allow programmatic selection, expanding and contracting of nodes.\n"),a.k0s(),a.j41(22,"p"),a.EFF(23,"The example above can be created using the following sample code:"),a.k0s(),a.j41(24,"ux-tabset",7)(25,"ux-tab",8),a.nrm(26,"uxd-snippet",9),a.k0s(),a.j41(27,"ux-tab",10),a.nrm(28,"uxd-snippet",9),a.k0s(),a.j41(29,"ux-tab",11),a.nrm(30,"uxd-snippet",9),a.k0s(),a.j41(31,"ux-tab",12),a.nrm(32,"uxd-snippet",9),a.k0s()(),a.j41(33,"blockquote")(34,"p",13)(35,"b"),a.EFF(36,"Dependencies: "),a.k0s(),a.j41(37,"a",14),a.EFF(38,"@circlon/angular-tree-component"),a.k0s()(),a.j41(39,"p",13)(40,"b"),a.EFF(41,"Modules: "),a.k0s(),a.j41(42,"span"),a.EFF(43,"TreeModule"),a.k0s()(),a.j41(44,"p",13)(45,"b"),a.EFF(46,"Documentation: "),a.k0s(),a.j41(47,"a",15),a.EFF(48,"Angular Component Documentation"),a.k0s()()()}2&n&&(a.R7$(),a.Y8G("nodes",e.nodes)("options",e.options),a.R7$(23),a.Y8G("minimal",!1),a.R7$(2),a.Y8G("content",e.snippets.compiled.appSnippetHtml),a.R7$(2),a.Y8G("content",e.snippets.compiled.appSnippetTs),a.R7$(2),a.Y8G("content",e.snippets.compiled.appSnippetCss),a.R7$(2),a.Y8G("content",e.snippets.compiled.serviceSnippetTs))},dependencies:[na,x.q4,aa.P,Ft,x.NhY,Bt.G,ea.b,x.aqz,oa.J,x.opy,Lt.R,Ot,x.w9h,qt.f,Ht.j,Rt.N],styles:[".tree-view-example-container[_ngcontent-%COMP%]{height:250px}.node-content-wrapper[_ngcontent-%COMP%]{outline:none}.node-content-wrapper[_ngcontent-%COMP%]:focus{outline:1px dotted;outline:auto -webkit-focus-ring-color;outline-color:#00a7a2;outline-offset:0}.node-content-wrapper[_ngcontent-%COMP%]   .title[_ngcontent-%COMP%]{margin-left:5px}.node-content-wrapper-focused[_ngcontent-%COMP%]{background-color:#e7f1f9}"]})}};Yt=(0,St.Cg)([(0,Gt.zo)("ComponentsTreeViewCustomNodeComponent")],Yt);var Uo=u(13050);function Yo(t,s){if(1&t){const n=a.RV6();a.j41(0,"div",13),a.bIt("focus",function(){const o=a.eBV(n).$implicit,p=a.XpG();return a.Njj(p.focus(o))})("blur",function(){const o=a.eBV(n).$implicit,p=a.XpG();return a.Njj(p.blur(o))}),a.j41(1,"div",14),a.nrm(2,"tree-node-expander",15)(3,"ux-icon",16),a.j41(4,"span"),a.EFF(5),a.k0s()(),a.nrm(6,"tree-node-children",17),a.k0s()}if(2&t){const n=s.$implicit,e=s.templates,o=a.XpG();a.Y8G("tabindex",n===o.focused||!o.focused&&n.isRoot&&0===n.index?0:-1)("focusIf",n===o.focused),a.BMQ("aria-level",n.level)("aria-expanded",n.hasChildren?n.isExpanded||!1:null),a.R7$(),a.AVh("node-content-wrapper-active",n.isActive)("node-content-wrapper-focused",n.isFocused),a.R7$(),a.Y8G("node",n),a.R7$(),a.Y8G("name",o.getIcon(n)),a.R7$(2),a.JRh(n.data.name),a.R7$(),a.Y8G("node",n)("templates",e)}}let Xt=class Jt extends It.j{constructor(){super(u(70669)),this.nodes=[{id:1,name:"Documents",children:[{id:12,name:"Profiles",children:[{name:"Alcazar"},{name:"Citadel"},{name:"Donjon"}]},{id:11,name:"Word files",children:[{id:111,name:"Accounts",children:[{name:"Castle"},{name:"Estate"},{name:"Manor"},{name:"Mansion"},{name:"Villa"}]}]}]},{id:2,name:"Emails",children:[{id:21,name:"Inbox",children:[{name:"Invoice"},{name:"Order Confirmation"}]},{id:22,name:"Outbox",children:[{name:"Customer Support"}]}]},{id:3,name:"Pictures",children:[{name:"IMG_001.jpg"},{name:"IMG_002.jpg"},{name:"IMG_003.jpg"}]}]}focus(s){s.focus(),s.treeModel.setFocus(!0)}blur(s){this.focused===s&&(s.blur(),s.treeModel.setFocus(!1))}getIcon(s){return s.hasChildren&&!s.isExpanded?"folder":s.hasChildren&&s.isExpanded?"folder-open":s.hasChildren?void 0:"document"}static{this.\u0275fac=function(n){return new(n||Jt)}}static{this.\u0275cmp=a.VBU({type:Jt,selectors:[["uxd-components-tree-view"]],features:[a.Vt3],decls:81,vars:5,consts:[["treeNodeFullTemplate",""],["type","warning"],[1,"tree-view-example-container"],["role","tree",3,"focus","nodes"],["href","https://angular2-tree.readme.io/docs/"],[3,"minimal"],["heading","HTML"],[3,"content"],["heading","TypeScript"],["heading","CSS"],[1,"m-b-nil"],["href","https://github.com/ali-hm/angular-tree-component",1,"hyperlink"],["href","https://angular2-tree.readme.io/docs/",1,"hyperlink"],["uxFocusIndicator","","role","treeitem",1,"tree-view-node",3,"focus","blur","tabindex","focusIf"],[1,"node-content-wrapper"],[1,"m-r-xs",3,"node"],[1,"m-r-xxs",3,"name"],["role","group",3,"node","templates"]],template:function(n,e){if(1&n){const o=a.RV6();a.j41(0,"ux-alert",1)(1,"p")(2,"b"),a.EFF(3,"Action Required: Angular Tree Component Compatibility Update"),a.k0s()(),a.j41(4,"p")(5,"code"),a.EFF(6,"@circlon/angular-tree-component"),a.k0s(),a.EFF(7," library is no longer maintained and is not compatible with Angular 16. "),a.k0s(),a.j41(8,"p"),a.EFF(9," To ensure continued compatibility with Angular 17 & 18, we recommend using a patched version of the Angular Tree Component library: "),a.k0s(),a.j41(10,"ul")(11,"li")(12,"code"),a.EFF(13,"@ali-hm/angular-tree-component"),a.k0s()()()(),a.nrm(14,"br"),a.j41(15,"div",2)(16,"tree-root",3),a.bIt("focus",function(r){return a.eBV(o),a.Njj(e.focused=r.node)}),a.DNE(17,Yo,7,13,"ng-template",null,0,a.C5r),a.k0s()(),a.j41(19,"p"),a.EFF(20," The Tree View component can be created by using the "),a.j41(21,"code"),a.EFF(22,"tree-root"),a.k0s(),a.EFF(23," tag. It allows tree content to be displayed in a familiar Explorer-like format. The component is highly extensible and supports the following features:\n"),a.k0s(),a.j41(24,"ul")(25,"li"),a.EFF(26,"Custom Templates"),a.k0s(),a.j41(27,"li"),a.EFF(28,"Drag & Drop"),a.k0s(),a.j41(29,"li"),a.EFF(30,"Filtering"),a.k0s(),a.j41(31,"li"),a.EFF(32,"Lazy Loading"),a.k0s(),a.j41(33,"li"),a.EFF(34,"Virtual Scrolling"),a.k0s()(),a.j41(35,"p"),a.EFF(36," The data to be displayed in the Tree View should be set by using the "),a.j41(37,"code"),a.EFF(38,"nodes"),a.k0s(),a.EFF(39," input on the component. Each node should have a "),a.j41(40,"code"),a.EFF(41,"name"),a.k0s(),a.EFF(42," property which will define the text displayed in the node.\n"),a.k0s(),a.j41(43,"p"),a.EFF(44," A node may have child nodes by adding a "),a.j41(45,"code"),a.EFF(46,"children"),a.k0s(),a.EFF(47," property to the node object. Additional custom properties can also be added to a node object, for example an "),a.j41(48,"code"),a.EFF(49,"id"),a.k0s(),a.EFF(50,".\n"),a.k0s(),a.j41(51,"p"),a.EFF(52," Full documentation on how to implement all the features listed above, and more, can be found on the "),a.j41(53,"a",4),a.EFF(54,"component's website"),a.k0s(),a.EFF(55,".\n"),a.k0s(),a.j41(56,"p"),a.EFF(57,"The following sample code can be used to create the example shown above:"),a.k0s(),a.j41(58,"ux-tabset",5)(59,"ux-tab",6),a.nrm(60,"uxd-snippet",7),a.k0s(),a.j41(61,"ux-tab",8),a.nrm(62,"uxd-snippet",7),a.k0s(),a.j41(63,"ux-tab",9),a.nrm(64,"uxd-snippet",7),a.k0s()(),a.j41(65,"blockquote")(66,"p",10)(67,"b"),a.EFF(68,"Dependencies: "),a.k0s(),a.j41(69,"a",11),a.EFF(70,"@ali-hm/angular-tree-component"),a.k0s()(),a.j41(71,"p",10)(72,"b"),a.EFF(73,"Modules: "),a.k0s(),a.j41(74,"span"),a.EFF(75,"TreeModule"),a.k0s()(),a.j41(76,"p",10)(77,"b"),a.EFF(78,"Documentation: "),a.k0s(),a.j41(79,"a",12),a.EFF(80,"Angular Component Documentation"),a.k0s()()()}2&n&&(a.R7$(16),a.Y8G("nodes",e.nodes),a.R7$(42),a.Y8G("minimal",!1),a.R7$(2),a.Y8G("content",e.snippets.compiled.appSnippetHtml),a.R7$(2),a.Y8G("content",e.snippets.compiled.appSnippetTs),a.R7$(2),a.Y8G("content",e.snippets.compiled.appSnippetCss))},dependencies:[x.Zic,Uo.C,na,x.NhY,Bt.G,ea.b,x.aqz,oa.J,Ft,x.opy,Lt.R,Ot,x.w9h,qt.f,Ht.j,Rt.N],styles:[".tree-view-example-container[_ngcontent-%COMP%]{height:250px}.tree-view-node[_ngcontent-%COMP%]{outline:none}.tree-view-node.ux-focus-indicator-active[_ngcontent-%COMP%] > .node-content-wrapper[_ngcontent-%COMP%]{outline:1px dotted;outline:auto -webkit-focus-ring-color;outline-color:#00a7a2;outline-offset:0}.node-content-wrapper[_ngcontent-%COMP%]{display:flex;align-items:center}"]})}};Xt=(0,St.Cg)([(0,Gt.zo)("ComponentsTreeViewComponent")],Xt);const pa=[Ut,Xt,Yt],Xo=[{path:"**",component:go.i,data:{category:At.a.resolveCategoryData(At.E.Components,"Tree View")}}];let zo=(()=>{class t{constructor(n,e){e.registerResolver(n,pa)}static{this.\u0275fac=function(e){return new(e||t)(a.KVO(a.OM3),a.KVO(At.a))}}static{this.\u0275mod=a.$C({type:t})}static{this.\u0275inj=a.G2t({imports:[x.NhY,x.h6p,x.q4,y.MD,mo.f,x.aqz,fo.YN,x.opy,ta.iI.forChild(Xo),x.Rkw,x.w9h,x.fPv,ho,x.Zic,pa]})}}return t})()},70669:(_,Fn,u)=>{var a={"./app.snippet.css":49713,"./app.snippet.html":94491,"./app.snippet.ts":38499,"docs/app/pages/components/components-sections/tree-view/tree-view/snippets/app.snippet.css":49713,"docs/app/pages/components/components-sections/tree-view/tree-view/snippets/app.snippet.html":94491,"docs/app/pages/components/components-sections/tree-view/tree-view/snippets/app.snippet.ts":38499};function y(C){var w=L(C);return u(w)}function L(C){if(!u.o(a,C)){var w=new Error("Cannot find module '"+C+"'");throw w.code="MODULE_NOT_FOUND",w}return a[C]}y.keys=function(){return Object.keys(a)},y.resolve=L,_.exports=y,y.id=70669},92230:_=>{_.exports={snippet:'<span class="token keyword">import</span> <span class="token punctuation">{</span> Injectable <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@angular/core\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token string">\'chance\'</span><span class="token punctuation">;</span>\n\n@<span class="token function">Injectable</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">TreeViewService</span> <span class="token punctuation">{</span>\n  <span class="token function">getDocuments</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> Promise<span class="token operator">&lt;</span>TreeViewExampleNode<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">></span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token operator">&lt;</span>TreeViewExampleNode<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token parameter">resolve</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n      <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n        <span class="token keyword">const</span> <span class="token literal-property property">output</span><span class="token operator">:</span> TreeViewExampleNode<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> idx <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> idx <span class="token operator">&lt;</span> <span class="token number">50</span><span class="token punctuation">;</span> idx<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n          output<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">Document </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>idx<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n\n        <span class="token function">resolve</span><span class="token punctuation">(</span>output<span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token function">getPictures</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> Promise<span class="token operator">&lt;</span>TreeViewExampleNode<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">></span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token operator">&lt;</span>TreeViewExampleNode<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token parameter">resolve</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n      <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n        <span class="token keyword">const</span> <span class="token literal-property property">output</span><span class="token operator">:</span> TreeViewExampleNode<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> idx <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> idx <span class="token operator">&lt;</span> <span class="token number">50</span><span class="token punctuation">;</span> idx<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n          output<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">IMG_</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>chance<span class="token punctuation">.</span><span class="token function">pad</span><span class="token punctuation">(</span>idx<span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n\n        <span class="token function">resolve</span><span class="token punctuation">(</span>output<span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">export</span> <span class="token keyword">interface</span> <span class="token class-name">TreeViewExampleNode</span> <span class="token punctuation">{</span>\n  <span class="token literal-property property">name</span><span class="token operator">:</span> string<span class="token punctuation">;</span>\n  children<span class="token operator">?</span><span class="token operator">:</span> TreeViewExampleNode<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n'}},94491:_=>{_.exports={snippet:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>tree-view-example-container<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tree-root</span> <span class="token attr-name">[nodes]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>nodes<span class="token punctuation">"</span></span> <span class="token attr-name">(focus)</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>focused = $event.node<span class="token punctuation">"</span></span> <span class="token attr-name">role</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>tree<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ng-template</span> <span class="token attr-name">#treeNodeFullTemplate</span> <span class="token attr-name">let-node</span> <span class="token attr-name">let-index</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>index<span class="token punctuation">"</span></span> <span class="token attr-name">let-templates</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>templates<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span>\n        <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>tree-view-node<span class="token punctuation">"</span></span>\n        <span class="token attr-name">uxFocusIndicator</span>\n        <span class="token attr-name">role</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>treeitem<span class="token punctuation">"</span></span>\n        <span class="token attr-name">[attr.aria-level]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>node.level<span class="token punctuation">"</span></span>\n        <span class="token attr-name">[attr.aria-expanded]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>node.isExpanded<span class="token punctuation">"</span></span>\n        <span class="token attr-name">[tabindex]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>node === focused || !focused &amp;&amp; node.isRoot &amp;&amp; node.index === 0 ? 0 : -1<span class="token punctuation">"</span></span>\n        <span class="token attr-name">(focus)</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>focus(node)<span class="token punctuation">"</span></span>\n        <span class="token attr-name">(blur)</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>blur(node)<span class="token punctuation">"</span></span>\n        <span class="token attr-name">[focusIf]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>node === focused<span class="token punctuation">"</span></span>\n      <span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span>\n          <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>node-content-wrapper<span class="token punctuation">"</span></span>\n          <span class="token attr-name">[class.node-content-wrapper-active]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>node.isActive<span class="token punctuation">"</span></span>\n          <span class="token attr-name">[class.node-content-wrapper-focused]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>node.isFocused<span class="token punctuation">"</span></span>\n        <span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tree-node-expander</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>m-r-xs<span class="token punctuation">"</span></span> <span class="token attr-name">[node]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>node<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tree-node-expander</span><span class="token punctuation">></span></span>\n\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ux-icon</span> <span class="token attr-name">[name]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>getIcon(node)<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>m-r-xxs<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ux-icon</span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>{{ node.data.name }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tree-node-children</span> <span class="token attr-name">role</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>group<span class="token punctuation">"</span></span> <span class="token attr-name">[node]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>node<span class="token punctuation">"</span></span> <span class="token attr-name">[templates]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>templates<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tree-node-children</span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ng-template</span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tree-root</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n'}}}]);
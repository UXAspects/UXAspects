(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[2952],{2131:s=>{s.exports={example:"import { Component, OnInit } from '@angular/core';\nimport { ColorService, ThemeColor } from '@ux-aspects/ux-aspects';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n})\nexport class AppComponent implements OnInit {\n  // color list\n  public colorSet = [\n    'primary',\n    'accent',\n    'secondary',\n    'alternate1',\n    'alternate2',\n    'alternate3',\n    'vibrant1',\n    'vibrant2',\n    'grey1',\n    'grey2',\n    'grey3',\n    'grey4',\n    'grey5',\n    'grey6',\n    'grey7',\n    'grey8',\n    'chart1',\n    'chart2',\n    'chart3',\n    'chart4',\n    'chart5',\n    'chart6',\n    'ok',\n    'warning',\n    'critical',\n  ];\n\n  salesColorNames = ['chart1', 'chart2', 'chart3'];\n  salesColorValues = this.salesColorNames.map(color => this.colorService.getColor(color).toHex());\n\n  // configure the directive data\n  donutChartData: Chart.ChartData = [\n    {\n      data: [33, 34, 33],\n      borderWidth: 0,\n    },\n  ];\n\n  donutChartOptions: Chart.ChartOptions;\n  donutChartColors: any = [];\n\n  constructor(public colorService: ColorService) {\n    const tooltipBackgroundColor = colorService.getColor('grey2').toHex();\n\n    this.donutChartOptions = {\n      maintainAspectRatio: false,\n      responsive: true,\n      cutoutPercentage: 70,\n      tooltips: {\n        callbacks: {\n          title: (item: Chart.ChartTooltipItem[]) => {\n            return;\n          },\n          label: (item: Chart.ChartTooltipItem, data: any) => {\n            return `Sales ${item.index + 1}`;\n          },\n        },\n        backgroundColor: tooltipBackgroundColor,\n        cornerRadius: 0,\n        displayColors: false,\n      } as any,\n    };\n  }\n\n  ngOnInit() {\n    this.colorNamesUpdated();\n  }\n\n  colorNamesUpdated() {\n    this.salesColorValues = this.salesColorNames.map((colorName, index) =>\n      colorName ? this.colorService.getColor(colorName).toHex() : this.salesColorValues[index]\n    );\n    this.colorValuesUpdated();\n  }\n\n  colorValuesUpdated() {\n    // check if all colors are valid\n    for (const value of this.salesColorValues) {\n      try {\n        ThemeColor.parse(value);\n      } catch (err) {\n        return;\n      }\n    }\n\n    const chartColors = this.salesColorValues.slice();\n    const chartHoverColors = this.salesColorValues.map(color =>\n      ThemeColor.parse(color).setAlpha(0.3).toRgba()\n    );\n    this.donutChartColors = [\n      {\n        backgroundColor: chartColors,\n        hoverBackgroundColor: chartHoverColors,\n      },\n    ];\n\n    this.salesColorValues.forEach((color, index) => {\n      if (\n        !this.colorSet.find(colorName => this.colorService.getColor(colorName).toHex() === color)\n      ) {\n        this.salesColorNames[index] = '';\n      }\n    });\n  }\n}\n"}},2476:s=>{s.exports={snippet:'<span class="token keyword">import</span> <span class="token punctuation">{</span> Component <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@angular/core\'</span><span class="token punctuation">;</span>\n\n@<span class="token function">Component</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token literal-property property">selector</span><span class="token operator">:</span> <span class="token string">\'app-root\'</span><span class="token punctuation">,</span>\n  <span class="token literal-property property">templateUrl</span><span class="token operator">:</span> <span class="token string">\'./app.component.html\'</span><span class="token punctuation">,</span>\n  <span class="token literal-property property">styleUrls</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">\'./app.component.css\'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">AppComponent</span> <span class="token punctuation">{</span>\n  <span class="token literal-property property">focus</span><span class="token operator">:</span> boolean <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n',example:"import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n})\nexport class AppComponent {\n  focus: boolean = false;\n}\n"}},3672:s=>{s.exports={snippet:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span>\n  <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>focus-demo-box aspects-focus-outline<span class="token punctuation">"</span></span>\n  <span class="token attr-name">tabindex</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span>\n  <span class="token attr-name">[focusIf]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>focused<span class="token punctuation">"</span></span>\n  <span class="token attr-name">(blur)</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>focused = false<span class="token punctuation">"</span></span>\n<span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>p-sm<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Click the button below to focus on this box<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>btn button button-primary m-t-md<span class="token punctuation">"</span></span> <span class="token attr-name">(click)</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>focused = true; $event.stopPropagation()<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n  Click\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>\n',example:'<div\n  class="focus-demo-box aspects-focus-outline"\n  tabindex="0"\n  [focusIf]="focused"\n  (blur)="focused = false"\n>\n  <p class="p-sm">Click the button below to focus on this box</p>\n</div>\n\n<button class="btn button button-primary m-t-md" (click)="focused = true; $event.stopPropagation()">\n  Click\n</button>\n'}},10481:(s,d,a)=>{var l={"./app.css":67916,"./app.html":72156,"./app.ts":2476,"docs/app/pages/components/components-sections/utilities/focus/snippets/app.css":67916,"docs/app/pages/components/components-sections/utilities/focus/snippets/app.html":72156,"docs/app/pages/components/components-sections/utilities/focus/snippets/app.ts":2476};function e(p){var c=u(p);return a(c)}function u(p){if(!a.o(l,p)){var c=new Error("Cannot find module '"+p+"'");throw c.code="MODULE_NOT_FOUND",c}return l[p]}e.keys=function(){return Object.keys(l)},e.resolve=u,s.exports=e,e.id=10481},10690:s=>{s.exports={snippet:'<span class="token keyword">import</span> <span class="token punctuation">{</span> Component <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@angular/core\'</span><span class="token punctuation">;</span>\n\n@<span class="token function">Component</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token literal-property property">selector</span><span class="token operator">:</span> <span class="token string">\'app-root\'</span><span class="token punctuation">,</span>\n  <span class="token literal-property property">templateUrl</span><span class="token operator">:</span> <span class="token string">\'./app.component.html\'</span><span class="token punctuation">,</span>\n  <span class="token literal-property property">styleUrls</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">\'./app.component.css\'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">AppComponent</span> <span class="token punctuation">{</span>\n  <span class="token literal-property property">posts</span><span class="token operator">:</span> Post<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>\n    <span class="token punctuation">{</span>\n      <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">\'Getting Started with UX Aspects\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">date</span><span class="token operator">:</span> chance<span class="token punctuation">.</span><span class="token function">date</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">year</span><span class="token operator">:</span> <span class="token number">2018</span> <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token keyword">as</span> Date<span class="token punctuation">,</span>\n      <span class="token literal-property property">content</span><span class="token operator">:</span> chance<span class="token punctuation">.</span><span class="token function">sentence</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span>\n      <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">\'Ivy: A look at the New Render Engine for Angular\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">date</span><span class="token operator">:</span> chance<span class="token punctuation">.</span><span class="token function">date</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">year</span><span class="token operator">:</span> <span class="token number">2018</span> <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token keyword">as</span> Date<span class="token punctuation">,</span>\n      <span class="token literal-property property">content</span><span class="token operator">:</span> chance<span class="token punctuation">.</span><span class="token function">sentence</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span>\n      <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">\'Angular Console\u200a\u2014\u200aThe UI for the Angular CLI\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">date</span><span class="token operator">:</span> chance<span class="token punctuation">.</span><span class="token function">date</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">year</span><span class="token operator">:</span> <span class="token number">2018</span> <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token keyword">as</span> Date<span class="token punctuation">,</span>\n      <span class="token literal-property property">content</span><span class="token operator">:</span> chance<span class="token punctuation">.</span><span class="token function">sentence</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span>\n      <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">\'Angular Ngrx DevTools\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">date</span><span class="token operator">:</span> chance<span class="token punctuation">.</span><span class="token function">date</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">year</span><span class="token operator">:</span> <span class="token number">2018</span> <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token keyword">as</span> Date<span class="token punctuation">,</span>\n      <span class="token literal-property property">content</span><span class="token operator">:</span> chance<span class="token punctuation">.</span><span class="token function">sentence</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">]</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">export</span> <span class="token keyword">interface</span> <span class="token class-name">Post</span> <span class="token punctuation">{</span>\n  <span class="token literal-property property">title</span><span class="token operator">:</span> string<span class="token punctuation">;</span>\n  <span class="token literal-property property">date</span><span class="token operator">:</span> Date<span class="token punctuation">;</span>\n  <span class="token literal-property property">content</span><span class="token operator">:</span> string<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n',example:"import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n})\nexport class AppComponent {\n  posts: Post[] = [\n    {\n      title: 'Getting Started with UX Aspects',\n      date: chance.date({ year: 2018 }) as Date,\n      content: chance.sentence(),\n    },\n    {\n      title: 'Ivy: A look at the New Render Engine for Angular',\n      date: chance.date({ year: 2018 }) as Date,\n      content: chance.sentence(),\n    },\n    {\n      title: 'Angular Console\u200a\u2014\u200aThe UI for the Angular CLI',\n      date: chance.date({ year: 2018 }) as Date,\n      content: chance.sentence(),\n    },\n    {\n      title: 'Angular Ngrx DevTools',\n      date: chance.date({ year: 2018 }) as Date,\n      content: chance.sentence(),\n    },\n  ];\n}\n\nexport interface Post {\n  title: string;\n  date: Date;\n  content: string;\n}\n"}},11081:s=>{s.exports={snippet:'<span class="token selector">.demo-chart-container</span> <span class="token punctuation">{</span>\n  <span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">;</span>\n  <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>\n  <span class="token property">height</span><span class="token punctuation">:</span> 200px<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n',example:".demo-chart-container {\n  display: block;\n  position: relative;\n  height: 200px;\n}\n"}},12648:s=>{s.exports={snippet:'<span class="token keyword">import</span> <span class="token punctuation">{</span> Component <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@angular/core\'</span><span class="token punctuation">;</span>\n\n@<span class="token function">Component</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token literal-property property">selector</span><span class="token operator">:</span> <span class="token string">\'app-root\'</span><span class="token punctuation">,</span>\n  <span class="token literal-property property">templateUrl</span><span class="token operator">:</span> <span class="token string">\'./app.component.html\'</span><span class="token punctuation">,</span>\n  <span class="token literal-property property">styleUrls</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">\'./app.component.css\'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">AppComponent</span> <span class="token punctuation">{</span>\n  focused <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n',example:"import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n})\nexport class AppComponent {\n  focused = false;\n}\n"}},13408:s=>{s.exports={snippet:'<span class="token keyword">import</span> <span class="token punctuation">{</span> Component <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@angular/core\'</span><span class="token punctuation">;</span>\n\n@<span class="token function">Component</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token literal-property property">selector</span><span class="token operator">:</span> <span class="token string">\'app-root\'</span><span class="token punctuation">,</span>\n  <span class="token literal-property property">templateUrl</span><span class="token operator">:</span> <span class="token string">\'./app.component.html\'</span><span class="token punctuation">,</span>\n  <span class="token literal-property property">styleUrls</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">\'./app.component.css\'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">AppComponent</span> <span class="token punctuation">{</span>\n  <span class="token literal-property property">isFocused</span><span class="token operator">:</span> boolean <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\n  <span class="token literal-property property">hasIndicator</span><span class="token operator">:</span> boolean <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\n  <span class="token literal-property property">mouseFocusIndicator</span><span class="token operator">:</span> boolean <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\n  <span class="token literal-property property">keyboardFocusIndicator</span><span class="token operator">:</span> boolean <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">get</span> <span class="token function">buttonText</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> string <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token punctuation">(</span>\n      <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>isFocused <span class="token operator">?</span> <span class="token string">\'Focused\'</span> <span class="token operator">:</span> <span class="token string">\'Blurred\'</span><span class="token punctuation">)</span> <span class="token operator">+</span>\n      <span class="token string">\' - \'</span> <span class="token operator">+</span>\n      <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>hasIndicator <span class="token operator">?</span> <span class="token string">\'With Indicator\'</span> <span class="token operator">:</span> <span class="token string">\'No Indicator\'</span><span class="token punctuation">)</span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n',example:"import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n})\nexport class AppComponent {\n  isFocused: boolean = false;\n  hasIndicator: boolean = false;\n  mouseFocusIndicator: boolean = false;\n  keyboardFocusIndicator: boolean = true;\n\n  get buttonText(): string {\n    return (\n      (this.isFocused ? 'Focused' : 'Blurred') +\n      ' - ' +\n      (this.hasIndicator ? 'With Indicator' : 'No Indicator')\n    );\n  }\n}\n"}},17779:s=>{s.exports={snippet:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>demo-chart-container<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>canvas</span>\n    <span class="token attr-name">baseChart</span>\n    <span class="token attr-name">[datasets]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>donutChartData<span class="token punctuation">"</span></span>\n    <span class="token attr-name">[options]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>donutChartOptions<span class="token punctuation">"</span></span>\n    <span class="token attr-name">[colors]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>donutChartColors<span class="token punctuation">"</span></span>\n    <span class="token attr-name">chartType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>doughnut<span class="token punctuation">"</span></span>\n  <span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>canvas</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>row<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>col-sm-4 col-xs-4<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>form-group m-nil<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span><span class="token punctuation">></span></span>Sales 1:<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ux-select</span>\n        <span class="token attr-name">[(value)]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>salesColorNames[0]<span class="token punctuation">"</span></span>\n        <span class="token attr-name">(valueChange)</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>colorNamesUpdated()<span class="token punctuation">"</span></span>\n        <span class="token attr-name">[options]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>colorSet<span class="token punctuation">"</span></span>\n        <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Select Color<span class="token punctuation">"</span></span>\n      <span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ux-select</span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span>\n        <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>form-control<span class="token punctuation">"</span></span>\n        <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span>\n        <span class="token attr-name">[(ngModel)]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>salesColorValues[0]<span class="token punctuation">"</span></span>\n        <span class="token attr-name">(keyup.enter)</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>colorValuesUpdated()<span class="token punctuation">"</span></span>\n        <span class="token attr-name">(blur)</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>colorValuesUpdated()<span class="token punctuation">"</span></span>\n      <span class="token punctuation">/></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>col-sm-4 col-xs-4<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>form-group m-nil<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span><span class="token punctuation">></span></span>Sales 2:<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ux-select</span>\n        <span class="token attr-name">[(value)]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>salesColorNames[1]<span class="token punctuation">"</span></span>\n        <span class="token attr-name">(valueChange)</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>colorNamesUpdated()<span class="token punctuation">"</span></span>\n        <span class="token attr-name">[options]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>colorSet<span class="token punctuation">"</span></span>\n        <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Select Color<span class="token punctuation">"</span></span>\n      <span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ux-select</span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span>\n        <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>form-control<span class="token punctuation">"</span></span>\n        <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span>\n        <span class="token attr-name">[(ngModel)]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>salesColorValues[1]<span class="token punctuation">"</span></span>\n        <span class="token attr-name">(keyup.enter)</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>colorValuesUpdated()<span class="token punctuation">"</span></span>\n        <span class="token attr-name">(blur)</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>colorValuesUpdated()<span class="token punctuation">"</span></span>\n      <span class="token punctuation">/></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>col-sm-4 col-xs-4<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>form-group m-nil<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span><span class="token punctuation">></span></span>Sales 3:<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ux-select</span>\n        <span class="token attr-name">[(value)]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>salesColorNames[2]<span class="token punctuation">"</span></span>\n        <span class="token attr-name">(valueChange)</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>colorNamesUpdated()<span class="token punctuation">"</span></span>\n        <span class="token attr-name">[options]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>colorSet<span class="token punctuation">"</span></span>\n        <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Select Color<span class="token punctuation">"</span></span>\n      <span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ux-select</span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span>\n        <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>form-control<span class="token punctuation">"</span></span>\n        <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span>\n        <span class="token attr-name">[(ngModel)]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>salesColorValues[2]<span class="token punctuation">"</span></span>\n        <span class="token attr-name">(keyup.enter)</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>colorValuesUpdated()<span class="token punctuation">"</span></span>\n        <span class="token attr-name">(blur)</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>colorValuesUpdated()<span class="token punctuation">"</span></span>\n      <span class="token punctuation">/></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n',example:'<div class="demo-chart-container">\n  <canvas\n    baseChart\n    [datasets]="donutChartData"\n    [options]="donutChartOptions"\n    [colors]="donutChartColors"\n    chartType="doughnut"\n  >\n  </canvas>\n</div>\n<div class="row">\n  <div class="col-sm-4 col-xs-4">\n    <div class="form-group m-nil">\n      <label>Sales 1:</label>\n      <ux-select\n        [(value)]="salesColorNames[0]"\n        (valueChange)="colorNamesUpdated()"\n        [options]="colorSet"\n        placeholder="Select Color"\n      >\n      </ux-select>\n      <input\n        class="form-control"\n        type="text"\n        [(ngModel)]="salesColorValues[0]"\n        (keyup.enter)="colorValuesUpdated()"\n        (blur)="colorValuesUpdated()"\n      />\n    </div>\n  </div>\n  <div class="col-sm-4 col-xs-4">\n    <div class="form-group m-nil">\n      <label>Sales 2:</label>\n      <ux-select\n        [(value)]="salesColorNames[1]"\n        (valueChange)="colorNamesUpdated()"\n        [options]="colorSet"\n        placeholder="Select Color"\n      >\n      </ux-select>\n      <input\n        class="form-control"\n        type="text"\n        [(ngModel)]="salesColorValues[1]"\n        (keyup.enter)="colorValuesUpdated()"\n        (blur)="colorValuesUpdated()"\n      />\n    </div>\n  </div>\n  <div class="col-sm-4 col-xs-4">\n    <div class="form-group m-nil">\n      <label>Sales 3:</label>\n      <ux-select\n        [(value)]="salesColorNames[2]"\n        (valueChange)="colorNamesUpdated()"\n        [options]="colorSet"\n        placeholder="Select Color"\n      >\n      </ux-select>\n      <input\n        class="form-control"\n        type="text"\n        [(ngModel)]="salesColorValues[2]"\n        (keyup.enter)="colorValuesUpdated()"\n        (blur)="colorValuesUpdated()"\n      />\n    </div>\n  </div>\n</div>\n'}},18192:s=>{s.exports={snippet:'<span class="token selector">.focus-indicator-demo</span> <span class="token punctuation">{</span>\n  <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>\n  <span class="token property">justify-content</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n',example:".focus-indicator-demo {\n  display: flex;\n  justify-content: center;\n}\n"}},18459:(s,d,a)=>{var l={"./app.css":78632,"./app.html":3672,"./app.ts":12648,"docs/app/pages/components/components-sections/utilities/focus-if/snippets/app.css":78632,"docs/app/pages/components/components-sections/utilities/focus-if/snippets/app.html":3672,"docs/app/pages/components/components-sections/utilities/focus-if/snippets/app.ts":12648};function e(p){var c=u(p);return a(c)}function u(p){if(!a.o(l,p)){var c=new Error("Cannot find module '"+p+"'");throw c.code="MODULE_NOT_FOUND",c}return l[p]}e.keys=function(){return Object.keys(l)},e.resolve=u,s.exports=e,e.id=18459},23299:(s,d,a)=>{var l={"./app.css":26646,"./app.html":41558,"./app.ts":10690,"docs/app/pages/components/components-sections/utilities/tabbable-list/snippets/app.css":26646,"docs/app/pages/components/components-sections/utilities/tabbable-list/snippets/app.html":41558,"docs/app/pages/components/components-sections/utilities/tabbable-list/snippets/app.ts":10690};function e(p){var c=u(p);return a(c)}function u(p){if(!a.o(l,p)){var c=new Error("Cannot find module '"+p+"'");throw c.code="MODULE_NOT_FOUND",c}return l[p]}e.keys=function(){return Object.keys(l)},e.resolve=u,s.exports=e,e.id=23299},26646:s=>{s.exports={snippet:'<span class="token selector">.list-group-item:focus</span> <span class="token punctuation">{</span>\n  <span class="token property">z-index</span><span class="token punctuation">:</span> 1<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.list-group-item-heading</span> <span class="token punctuation">{</span>\n  <span class="token property">color</span><span class="token punctuation">:</span> #000<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.list-group-item-subheading</span> <span class="token punctuation">{</span>\n  <span class="token property">color</span><span class="token punctuation">:</span> #888<span class="token punctuation">;</span>\n  <span class="token property">font-size</span><span class="token punctuation">:</span> 14px<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.list-group-item-checkbox</span> <span class="token punctuation">{</span>\n  <span class="token property">margin-top</span><span class="token punctuation">:</span> 4px<span class="token punctuation">;</span>\n  <span class="token property">text-align</span><span class="token punctuation">:</span> right<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n',example:".list-group-item:focus {\n  z-index: 1;\n}\n\n.list-group-item-heading {\n  color: #000;\n}\n\n.list-group-item-subheading {\n  color: #888;\n  font-size: 14px;\n}\n\n.list-group-item-checkbox {\n  margin-top: 4px;\n  text-align: right;\n}\n"}},33307:s=>{s.exports={snippet:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">uxFocusIndicatorOptions</span> <span class="token attr-name">[mouseFocusIndicator]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n  <span class="token comment">&lt;!-- Child elements with uxFocusIndicator will show indicator on click by default --\x3e</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n',example:'<div uxFocusIndicatorOptions [mouseFocusIndicator]="true">\n  \x3c!-- Child elements with uxFocusIndicator will show indicator on click by default --\x3e\n</div>\n'}},38112:s=>{s.exports={snippet:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>focus-indicator-demo<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span>\n    <span class="token attr-name">uxFocusIndicator</span>\n    <span class="token attr-name">[mouseFocusIndicator]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>mouseFocusIndicator<span class="token punctuation">"</span></span>\n    <span class="token attr-name">[keyboardFocusIndicator]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>keyboardFocusIndicator<span class="token punctuation">"</span></span>\n    <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>btn button-secondary<span class="token punctuation">"</span></span>\n    <span class="token attr-name">(focus)</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>isFocused = true<span class="token punctuation">"</span></span>\n    <span class="token attr-name">(blur)</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>isFocused = false<span class="token punctuation">"</span></span>\n    <span class="token attr-name">(indicator)</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>hasIndicator = $event<span class="token punctuation">"</span></span>\n  <span class="token punctuation">></span></span>\n    {{ buttonText }}\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ux-accordion</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>uxd-customize-example<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ux-accordion-panel</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>accordion-chevron<span class="token punctuation">"</span></span> <span class="token attr-name">heading</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Customize Example...<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>row uxd-customize-row<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>col-sm-6<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ux-checkbox</span> <span class="token attr-name">[(value)]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>mouseFocusIndicator<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>mouseFocusIndicator<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ux-checkbox</span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>col-sm-6<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ux-checkbox</span> <span class="token attr-name">[(value)]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>keyboardFocusIndicator<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>keyboardFocusIndicator<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ux-checkbox</span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ux-accordion-panel</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ux-accordion</span><span class="token punctuation">></span></span>\n',example:'<div class="focus-indicator-demo">\n  <button\n    uxFocusIndicator\n    [mouseFocusIndicator]="mouseFocusIndicator"\n    [keyboardFocusIndicator]="keyboardFocusIndicator"\n    class="btn button-secondary"\n    (focus)="isFocused = true"\n    (blur)="isFocused = false"\n    (indicator)="hasIndicator = $event"\n  >\n    {{ buttonText }}\n  </button>\n</div>\n\n<ux-accordion class="uxd-customize-example">\n  <ux-accordion-panel class="accordion-chevron" heading="Customize Example...">\n    <div class="row uxd-customize-row">\n      <div class="col-sm-6">\n        <ux-checkbox [(value)]="mouseFocusIndicator">mouseFocusIndicator</ux-checkbox>\n      </div>\n      <div class="col-sm-6">\n        <ux-checkbox [(value)]="keyboardFocusIndicator">keyboardFocusIndicator</ux-checkbox>\n      </div>\n    </div>\n  </ux-accordion-panel>\n</ux-accordion>\n'}},39654:s=>{s.exports={snippet:'<span class="token keyword">import</span> <span class="token punctuation">{</span> Component <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@angular/core\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> PersistentDataService<span class="token punctuation">,</span> PersistentDataStorageType <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@ux-aspects/ux-aspects\'</span><span class="token punctuation">;</span>\n\n@<span class="token function">Component</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token literal-property property">selector</span><span class="token operator">:</span> <span class="token string">\'app-root\'</span><span class="token punctuation">,</span>\n  <span class="token literal-property property">templateUrl</span><span class="token operator">:</span> <span class="token string">\'./app.component.html\'</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">AppComponent</span> <span class="token punctuation">{</span>\n  searches <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">\'checkbox\'</span><span class="token punctuation">,</span> <span class="token string">\'toggle switch\'</span><span class="token punctuation">,</span> <span class="token string">\'tree grid\'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter"><span class="token keyword">private</span> readonly _persistentDataService<span class="token operator">:</span> PersistentDataService</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span>_persistentDataService<span class="token punctuation">.</span><span class="token function">setItem</span><span class="token punctuation">(</span>\n      <span class="token string">\'mySearches\'</span><span class="token punctuation">,</span>\n      <span class="token keyword">this</span><span class="token punctuation">.</span>searches<span class="token punctuation">,</span>\n      PersistentDataStorageType<span class="token punctuation">.</span>LocalStorage\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">const</span> mySearches <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>_persistentDataService<span class="token punctuation">.</span><span class="token function">getItem</span><span class="token punctuation">(</span>\n      <span class="token string">\'mySearches\'</span><span class="token punctuation">,</span>\n      PersistentDataStorageType<span class="token punctuation">.</span>LocalStorage\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span>_persistentDataService<span class="token punctuation">.</span><span class="token function">removeItem</span><span class="token punctuation">(</span><span class="token string">\'mySearches\'</span><span class="token punctuation">,</span> PersistentDataStorageType<span class="token punctuation">.</span>LocalStorage<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span>_persistentDataService<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span>PersistentDataStorageType<span class="token punctuation">.</span>LocalStorage<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n',example:"import { Component } from '@angular/core';\nimport { PersistentDataService, PersistentDataStorageType } from '@ux-aspects/ux-aspects';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n})\nexport class AppComponent {\n  searches = ['checkbox', 'toggle switch', 'tree grid'];\n\n  constructor(private readonly _persistentDataService: PersistentDataService) {\n    this._persistentDataService.setItem(\n      'mySearches',\n      this.searches,\n      PersistentDataStorageType.LocalStorage\n    );\n    const mySearches = this._persistentDataService.getItem(\n      'mySearches',\n      PersistentDataStorageType.LocalStorage\n    );\n    this._persistentDataService.removeItem('mySearches', PersistentDataStorageType.LocalStorage);\n    this._persistentDataService.clear(PersistentDataStorageType.LocalStorage);\n  }\n}\n"}},40381:(s,d,a)=>{var l={"./app.css":18192,"./app.html":38112,"./app.ts":13408,"./config.ts":54549,"./local-options.html":33307,"./service.ts":42024,"docs/app/pages/components/components-sections/utilities/focus-indicator/snippets/app.css":18192,"docs/app/pages/components/components-sections/utilities/focus-indicator/snippets/app.html":38112,"docs/app/pages/components/components-sections/utilities/focus-indicator/snippets/app.ts":13408,"docs/app/pages/components/components-sections/utilities/focus-indicator/snippets/config.ts":54549,"docs/app/pages/components/components-sections/utilities/focus-indicator/snippets/local-options.html":33307,"docs/app/pages/components/components-sections/utilities/focus-indicator/snippets/service.ts":42024};function e(p){var c=u(p);return a(c)}function u(p){if(!a.o(l,p)){var c=new Error("Cannot find module '"+p+"'");throw c.code="MODULE_NOT_FOUND",c}return l[p]}e.keys=function(){return Object.keys(l)},e.resolve=u,s.exports=e,e.id=40381},41558:s=>{s.exports={snippet:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>list-group<span class="token punctuation">"</span></span> <span class="token attr-name">uxTabbableList</span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>list-group-item<span class="token punctuation">"</span></span> <span class="token attr-name">uxTabbableListItem</span> <span class="token attr-name">*ngFor</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>let post of posts<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h4</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>list-group-item-heading<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>{{ post.title }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h4</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>list-group-item-subheading<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>{{ post.date | date }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>list-group-item-text<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>{{ post.content }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>list-group-item-checkbox<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ux-checkbox</span><span class="token punctuation">></span></span>Archive post<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ux-checkbox</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span>\n',example:'<ul class="list-group" uxTabbableList>\n  <li class="list-group-item" uxTabbableListItem *ngFor="let post of posts">\n    <h4 class="list-group-item-heading">{{ post.title }}</h4>\n    <p class="list-group-item-subheading">{{ post.date | date }}</p>\n    <p class="list-group-item-text">{{ post.content }}</p>\n    <div class="list-group-item-checkbox">\n      <ux-checkbox>Archive post</ux-checkbox>\n    </div>\n  </li>\n</ul>\n'}},42024:s=>{s.exports={snippet:'@<span class="token function">Component</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token literal-property property">selector</span><span class="token operator">:</span> <span class="token string">\'app-button\'</span><span class="token punctuation">,</span>\n  <span class="token literal-property property">templateUrl</span><span class="token operator">:</span> <span class="token string">\'button.component.html\'</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">ButtonComponent</span> <span class="token keyword">implements</span> <span class="token class-name">OnDestroy</span> <span class="token punctuation">{</span>\n  <span class="token keyword">private</span> readonly _focusIndicator<span class="token operator">:</span> FocusIndicator<span class="token punctuation">;</span>\n\n  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">focusIndicatorService</span><span class="token operator">:</span> FocusIndicatorService<span class="token punctuation">,</span> <span class="token literal-property property">elementRef</span><span class="token operator">:</span> ElementRef</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token comment">// begin controlling focus indicator with defined options</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span>_focusIndicator <span class="token operator">=</span> focusIndicatorService<span class="token punctuation">.</span><span class="token function">monitor</span><span class="token punctuation">(</span>elementRef<span class="token punctuation">.</span>nativeElement<span class="token punctuation">,</span> <span class="token punctuation">{</span>\n      <span class="token literal-property property">mouseFocusIndicator</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">touchFocusIndicator</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">keyboardFocusIndicator</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">programmaticFocusIndicator</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token function">ngOnDestroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>\n    <span class="token comment">// stop monitoring focus when component is destroyed</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span>_focusIndicator<span class="token punctuation">.</span><span class="token function">destroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n',example:"@Component({\n  selector: 'app-button',\n  templateUrl: 'button.component.html',\n})\nexport class ButtonComponent implements OnDestroy {\n  private readonly _focusIndicator: FocusIndicator;\n\n  constructor(focusIndicatorService: FocusIndicatorService, elementRef: ElementRef) {\n    // begin controlling focus indicator with defined options\n    this._focusIndicator = focusIndicatorService.monitor(elementRef.nativeElement, {\n      mouseFocusIndicator: true,\n      touchFocusIndicator: true,\n      keyboardFocusIndicator: true,\n      programmaticFocusIndicator: true,\n    });\n  }\n\n  ngOnDestroy(): void {\n    // stop monitoring focus when component is destroyed\n    this._focusIndicator.destroy();\n  }\n}\n"}},42952:(s,d,a)=>{"use strict";a.r(d),a.d(d,{ComponentsUtilitiesModule:()=>Z});var l=a(93965),e=a(82312),u=a(5779),p=a(26059),c=a(67647),w=a(893),h=a(38052),g=a(16488),f=a(27185),n=a(17931),b=a(62329),F=a(3725),y=a(81367);let E=class U extends g.j{constructor(){super(a(66214)),this.focused=!1,this.playground={files:{"app.component.ts":this.snippets.raw.appExampleTs,"app.component.html":this.snippets.raw.appHtml,"app.component.css":this.snippets.raw.appCss},modules:[{library:"chart.js"},{imports:["NgChartsModule"],library:"ng2-charts"},{imports:["SelectModule"],library:"@ux-aspects/ux-aspects"}]}}static{this.\u0275fac=function(o){return new(o||U)}}static{this.\u0275cmp=n.VBU({type:U,selectors:[["uxd-components-color-service"]],standalone:!1,features:[n.Vt3],decls:85,vars:1,consts:[["routerLink","/css/color-palette"],["uxd-api-property","","name","getColor","args","string","returns","ThemeColor"],["uxd-api-property","","name","setRed","args","number"],["uxd-api-property","","name","setGreen","args","number"],["uxd-api-property","","name","setBlue","args","number"],["uxd-api-property","","name","setAlpha","args","number"],["uxd-api-property","","name","toRgb","returns","string"],["uxd-api-property","","name","toRgba","returns","string"],["uxd-api-property","","name","toHex","returns","string"],["language","javascript",3,"content"]],template:function(o,t){1&o&&(n.j41(0,"p"),n.EFF(1," The "),n.j41(2,"code"),n.EFF(3,"ColorService"),n.k0s(),n.EFF(4," can be used to get the Hex, RGB or RGBA value for a color in the "),n.j41(5,"a",0),n.EFF(6,"Color Palette"),n.k0s(),n.EFF(7,".\n"),n.k0s(),n.j41(8,"uxd-api-properties")(9,"tr",1),n.EFF(10," This method will accept a string parameter for a color from the Color Palette and return a "),n.j41(11,"code"),n.EFF(12,"ThemeColor"),n.k0s(),n.EFF(13," object. "),n.k0s()(),n.j41(14,"h4"),n.EFF(15,"ThemeColor Object"),n.k0s(),n.j41(16,"p"),n.EFF(17," The "),n.j41(18,"code"),n.EFF(19,"ThemeColor"),n.k0s(),n.EFF(20," object is used to provide the selected color from the Color Palette.\n"),n.k0s(),n.j41(21,"p"),n.EFF(22,"The following functions can be used on the "),n.j41(23,"code"),n.EFF(24,"ThemeColor"),n.k0s(),n.EFF(25," object:"),n.k0s(),n.j41(26,"uxd-api-properties")(27,"tr",2),n.EFF(28," This method will set the red value of the "),n.j41(29,"code"),n.EFF(30,"ThemeColor"),n.k0s(),n.EFF(31,". The valid range is 0-255. "),n.k0s(),n.j41(32,"tr",3),n.EFF(33," This method will set the green value of the "),n.j41(34,"code"),n.EFF(35,"ThemeColor"),n.k0s(),n.EFF(36,". The valid range is 0-255. "),n.k0s(),n.j41(37,"tr",4),n.EFF(38," This method will set the blue value of the "),n.j41(39,"code"),n.EFF(40,"ThemeColor"),n.k0s(),n.EFF(41,". The valid range is 0-255. "),n.k0s(),n.j41(42,"tr",5),n.EFF(43," This method will set the alpha value of the "),n.j41(44,"code"),n.EFF(45,"ThemeColor"),n.k0s(),n.EFF(46,". The valid range is 0.0-1.0. "),n.k0s(),n.j41(47,"tr",6),n.EFF(48," This method will return the RGB value of the "),n.j41(49,"code"),n.EFF(50,"ThemeColor"),n.k0s(),n.EFF(51," in the following arrangement: "),n.j41(52,"code"),n.EFF(53,"rgb(0, 167, 162)"),n.k0s(),n.EFF(54,". "),n.k0s(),n.j41(55,"tr",7),n.EFF(56," This method will return the RGBA value of the "),n.j41(57,"code"),n.EFF(58,"ThemeColor"),n.k0s(),n.EFF(59," in the following arrangement: "),n.j41(60,"code"),n.EFF(61,"rgb(0, 167, 162, 0.5)"),n.k0s(),n.EFF(62,". "),n.k0s(),n.j41(63,"tr",8),n.EFF(64," This method will return the hexadecimal value of the "),n.j41(65,"code"),n.EFF(66,"ThemeColor"),n.k0s(),n.EFF(67," in the following arrangement: "),n.j41(68,"code"),n.EFF(69,"#00a7a2"),n.k0s(),n.EFF(70,". "),n.k0s()(),n.j41(71,"blockquote")(72,"p")(73,"strong"),n.EFF(74,"Note"),n.k0s(),n.EFF(75,": Refer to the "),n.j41(76,"a",0),n.EFF(77,"Color Palette"),n.k0s(),n.EFF(78," page for details about available colors. "),n.k0s()(),n.j41(79,"p"),n.EFF(80,"Below is an example of how the "),n.j41(81,"code"),n.EFF(82,"ColorService"),n.k0s(),n.EFF(83," can be used:"),n.k0s(),n.nrm(84,"uxd-snippet",9)),2&o&&(n.R7$(84),n.Y8G("content",t.snippets.compiled.appSnippetTs))},dependencies:[b.H,F.p,y.N,e.Wk],styles:[".color-box-container[_ngcontent-%COMP%]{width:100px;height:120px}.color-box[_ngcontent-%COMP%]{width:80px;height:80px}"]})}};E=(0,h.Cg)([(0,f.zo)("ComponentsColorServiceComponent")],E);var P=a(79017),M=a(20260),v=a(32034),x=a(81838);let I=class R extends g.j{constructor(){super(a(18459)),this.focused=!1,this.playground={files:{"app.component.ts":this.snippets.raw.appTs,"app.component.html":this.snippets.raw.appHtml,"app.component.css":this.snippets.raw.appCss},modules:[{imports:["FocusIfModule"],library:"@ux-aspects/ux-aspects"}]}}static{this.\u0275fac=function(o){return new(o||R)}}static{this.\u0275cmp=n.VBU({type:R,selectors:[["uxd-components-focus-if"]],standalone:!1,features:[n.Vt3],decls:21,vars:5,consts:[["tabindex","0",1,"focus-demo-box","aspects-focus-outline",3,"blur","focusIf"],[1,"p-sm"],[1,"btn","button","button-primary","m-t-md",3,"click"],[3,"minimal"],["heading","HTML"],["language","html",3,"content"],["heading","TypeScript"],["language","javascript",3,"content"],["heading","CSS"],["language","css",3,"content"]],template:function(o,t){1&o&&(n.j41(0,"div",0),n.bIt("blur",function(){return t.focused=!1}),n.j41(1,"p",1),n.EFF(2,"Click the button below to focus on this box"),n.k0s()(),n.j41(3,"button",2),n.bIt("click",function(k){return t.focused=!0,k.stopPropagation()}),n.EFF(4," Click\n"),n.k0s(),n.nrm(5,"hr"),n.j41(6,"p"),n.EFF(7," The "),n.j41(8,"code"),n.EFF(9,"focusIf"),n.k0s(),n.EFF(10," directive should be used as an attribute. When the attribute value is true the element will gain focus. In the above example when we click the button a variable is updated and the box will get focus.\n"),n.k0s(),n.j41(11,"p"),n.EFF(12,"The code to produce the example is below:"),n.k0s(),n.j41(13,"p")(14,"ux-tabset",3)(15,"ux-tab",4),n.nrm(16,"uxd-snippet",5),n.k0s(),n.j41(17,"ux-tab",6),n.nrm(18,"uxd-snippet",7),n.k0s(),n.j41(19,"ux-tab",8),n.nrm(20,"uxd-snippet",9),n.k0s()()()),2&o&&(n.Y8G("focusIf",t.focused),n.R7$(14),n.Y8G("minimal",!1),n.R7$(2),n.Y8G("content",t.snippets.compiled.appHtml),n.R7$(2),n.Y8G("content",t.snippets.compiled.appTs),n.R7$(2),n.Y8G("content",t.snippets.compiled.appCss))},dependencies:[P.G,y.N,M.J,v.f,x.j],styles:[".focus-demo-box[_ngcontent-%COMP%]{width:210px;height:80px;border:2px solid #f1f1f1;border-radius:3px}"]})}};I=(0,h.Cg)([(0,f.zo)("ComponentsFocusIfComponent")],I);var L=a(61384),G=a(12954),$=a(13363),q=a(34554);let T=class N extends g.j{get buttonText(){return`${this.isFocused?"Focused":"Blurred"} - ${this.hasIndicator?"With Indicator":"No Indicator"}`}constructor(){super(a(40381)),this.isFocused=!1,this.hasIndicator=!1,this.mouseFocusIndicator=!1,this.keyboardFocusIndicator=!0,this.playground={files:{"app.component.html":this.snippets.raw.appHtml,"app.component.ts":this.snippets.raw.appTs,"app.component.css":this.snippets.raw.appCss},modules:[{imports:["AccordionModule","CheckboxModule"],library:"@ux-aspects/ux-aspects"}]}}static{this.\u0275fac=function(o){return new(o||N)}}static{this.\u0275cmp=n.VBU({type:N,selectors:[["uxd-components-focus-indicator"]],standalone:!1,features:[n.Vt3],decls:108,vars:12,consts:[[1,"focus-indicator-demo"],["uxFocusIndicator","",1,"btn","button-secondary",3,"focus","blur","indicator","mouseFocusIndicator","keyboardFocusIndicator"],[1,"uxd-customize-example"],["heading","Customize Example...",1,"accordion-chevron"],[1,"row","uxd-customize-row"],[1,"col-sm-6"],[3,"valueChange","value"],["tableTitle","Inputs"],["uxd-api-property","","name","checkChildren","type","boolean","defaultValue","false"],["uxd-api-property","","name","mouseFocusIndicator","type","boolean","defaultValue","false"],["uxd-api-property","","name","keyboardFocusIndicator","type","boolean","defaultValue","true"],["uxd-api-property","","name","touchFocusIndicator","type","boolean","defaultValue","false"],["uxd-api-property","","name","programmaticFocusIndicator","type","boolean","defaultValue","false"],["tableTitle","Outputs"],["uxd-api-property","","name","indicator","type","boolean"],[3,"minimal"],["heading","HTML"],[3,"content"],["heading","TypeScript"],["heading","CSS"],["tableTitle","Methods"],["uxd-api-property","","name","monitor","args","HTMLElement, FocusIndicatorOptions?","returns","FocusIndicator"]],template:function(o,t){1&o&&(n.j41(0,"div",0)(1,"button",1),n.bIt("focus",function(){return t.isFocused=!0})("blur",function(){return t.isFocused=!1})("indicator",function(k){return t.hasIndicator=k}),n.EFF(2),n.k0s()(),n.j41(3,"ux-accordion",2)(4,"ux-accordion-panel",3)(5,"div",4)(6,"div",5)(7,"ux-checkbox",6),n.mxI("valueChange",function(k){return n.DH7(t.mouseFocusIndicator,k)||(t.mouseFocusIndicator=k),k}),n.EFF(8,"mouseFocusIndicator"),n.k0s()(),n.j41(9,"div",5)(10,"ux-checkbox",6),n.mxI("valueChange",function(k){return n.DH7(t.keyboardFocusIndicator,k)||(t.keyboardFocusIndicator=k),k}),n.EFF(11,"keyboardFocusIndicator"),n.k0s()()()()(),n.nrm(12,"hr"),n.j41(13,"p"),n.EFF(14," The "),n.j41(15,"code"),n.EFF(16,"uxFocusIndicator"),n.k0s(),n.EFF(17," directive allows you to easily determine when an element should receive focus indicator styling. By default browsers will display a focus ring on any focusable element when it is clicked, navigated to via the keyboard or programmatically focused. A common use case is to only show the focus ring when the user has navigated to an element by using the keyboard and preventing the focus ring from appearing when the user has clicked on it.\n"),n.k0s(),n.j41(18,"p"),n.EFF(19,"The following options can be used to customize the behavior of the directive:"),n.k0s(),n.j41(20,"uxd-api-properties",7)(21,"tr",8),n.EFF(22," If "),n.j41(23,"code"),n.EFF(24,"true"),n.k0s(),n.EFF(25,", this element will receive a focus indicator when any child element has focus. "),n.k0s(),n.j41(26,"tr",9),n.EFF(27," If "),n.j41(28,"code"),n.EFF(29,"true"),n.k0s(),n.EFF(30,", this element will receive a focus indicator when the element is clicked on. "),n.k0s(),n.j41(31,"tr",10),n.EFF(32," If "),n.j41(33,"code"),n.EFF(34,"true"),n.k0s(),n.EFF(35,", this element will receive a focus indicator when the element is focused using the keyboard. "),n.k0s(),n.j41(36,"tr",11),n.EFF(37," If "),n.j41(38,"code"),n.EFF(39,"true"),n.k0s(),n.EFF(40,", this element will receive a focus indicator when the element is touched. "),n.k0s(),n.j41(41,"tr",12),n.EFF(42," If "),n.j41(43,"code"),n.EFF(44,"true"),n.k0s(),n.EFF(45,", this element will receive a focus indicator when the element is programmatically focused. "),n.k0s()(),n.j41(46,"uxd-api-properties",13)(47,"tr",14),n.EFF(48," This will emit a boolean value indicating whether or not the focus ring is visible on the element. "),n.k0s()(),n.j41(49,"p"),n.EFF(50,"The example above can be created using the following:"),n.k0s(),n.j41(51,"ux-tabset",15)(52,"ux-tab",16),n.nrm(53,"uxd-snippet",17),n.k0s(),n.j41(54,"ux-tab",18),n.nrm(55,"uxd-snippet",17),n.k0s(),n.j41(56,"ux-tab",19),n.nrm(57,"uxd-snippet",17),n.k0s()(),n.j41(58,"h4"),n.EFF(59,"Focus Indicator Service"),n.k0s(),n.j41(60,"p"),n.EFF(61," Alternatively, we provide a "),n.j41(62,"code"),n.EFF(63,"FocusIndicatorService"),n.k0s(),n.EFF(64," service for you to manually apply the focus indicator settings to an element. This can be useful when creating a custom component and you which to target the host element.\n"),n.k0s(),n.j41(65,"p"),n.EFF(66,"The following functions are available in the service:"),n.k0s(),n.j41(67,"uxd-api-properties",20)(68,"tr",21),n.EFF(69," This will begin controlling the focus indicator on the specified element. "),n.k0s()(),n.j41(70,"p"),n.EFF(71,"Below is an example of using the service:"),n.k0s(),n.nrm(72,"uxd-snippet",17),n.j41(73,"h4"),n.EFF(74,"Focus Origin"),n.k0s(),n.j41(75,"p"),n.EFF(76," There are occasions where an element is focused when it is first shown, for example when a modal is launched the primary button might receive focus. Ideally the button would only show a focus indicator when the modal was opened using the keyboard and not when trigged using a click. To achieve this behavior you can add the "),n.j41(77,"code"),n.EFF(78,"uxFocusIndicatorOrigin"),n.k0s(),n.EFF(79," directive to the element that indirectly causes the focus, e.g. the button that launches the modal.\n"),n.k0s(),n.j41(80,"h4"),n.EFF(81,"Global Defaults"),n.k0s(),n.j41(82,"p"),n.EFF(83," The default options for the directive and service can optionally be configured for your entire application by importing the "),n.j41(84,"code"),n.EFF(85,"AccessibilityModule"),n.k0s(),n.EFF(86," in your "),n.j41(87,"code"),n.EFF(88,"AppModule"),n.k0s(),n.EFF(89," and calling the static "),n.j41(90,"code"),n.EFF(91,"forRoot"),n.k0s(),n.EFF(92," function, passing it the desired "),n.j41(93,"code"),n.EFF(94,"AccessibilityOptions"),n.k0s(),n.EFF(95,".\n"),n.k0s(),n.nrm(96,"uxd-snippet",17),n.j41(97,"h4"),n.EFF(98,"Local Defaults"),n.k0s(),n.j41(99,"p"),n.EFF(100," The global configuration can be overriden on a element level by adding a "),n.j41(101,"code"),n.EFF(102,"uxFocusIndicatorOptions"),n.k0s(),n.EFF(103," to an element. This will provide all the inputs available to the "),n.j41(104,"code"),n.EFF(105,"uxFocusIndicator"),n.k0s(),n.EFF(106,". These options will be applied to any child elements using the focus indicator.\n"),n.k0s(),n.nrm(107,"uxd-snippet",17)),2&o&&(n.R7$(),n.Y8G("mouseFocusIndicator",t.mouseFocusIndicator)("keyboardFocusIndicator",t.keyboardFocusIndicator),n.R7$(),n.SpI(" ",t.buttonText," "),n.R7$(5),n.R50("value",t.mouseFocusIndicator),n.R7$(3),n.R50("value",t.keyboardFocusIndicator),n.R7$(41),n.Y8G("minimal",!1),n.R7$(2),n.Y8G("content",t.snippets.compiled.appHtml),n.R7$(2),n.Y8G("content",t.snippets.compiled.appTs),n.R7$(2),n.Y8G("content",t.snippets.compiled.appCss),n.R7$(15),n.Y8G("content",t.snippets.compiled.serviceTs),n.R7$(24),n.Y8G("content",t.snippets.compiled.configTs),n.R7$(11),n.Y8G("content",t.snippets.compiled.localOptionsHtml))},dependencies:[L.b,G.M,$.k,q.P,b.H,F.p,y.N,v.f,x.j],styles:[".focus-indicator-demo[_ngcontent-%COMP%]{display:flex;justify-content:center}"],changeDetection:0})}};T=(0,h.Cg)([(0,f.zo)("ComponentsFocusIndicatorComponent")],T);var B=a(87143);function H(r,i){1&r&&(n.j41(0,"p",16),n.EFF(1,"Element Focused"),n.k0s())}function Y(r,i){1&r&&(n.j41(0,"p",17),n.EFF(1,"No Element Focused"),n.k0s())}let j=class O extends g.j{constructor(){super(a(10481)),this.focus=!1,this.playground={files:{"app.component.html":this.snippets.raw.appHtml,"app.component.ts":this.snippets.raw.appTs,"app.component.css":this.snippets.raw.appCss}}}static{this.\u0275fac=function(o){return new(o||O)}}static{this.\u0275cmp=n.VBU({type:O,selectors:[["uxd-components-focus"]],standalone:!1,features:[n.Vt3],decls:33,vars:7,consts:[[1,"focus-container",3,"uxFocusWithin","uxBlurWithin"],[1,"form-group"],["for","full-name",1,"form-label"],["type","text","id","full-name","placeholder","Enter full name",1,"form-control"],["for","email-address",1,"form-label"],["type","email","id","email-address","placeholder","Enter email",1,"form-control"],[1,"clearfix"],["type","submit",1,"btn","button-primary","pull-right"],[3,"ngSwitch"],["class","focus-label text-primary",4,"ngSwitchCase"],["class","focus-label text-danger",4,"ngSwitchCase"],[3,"minimal"],["heading","HTML"],[3,"content"],["heading","TypeScript"],["heading","CSS"],[1,"focus-label","text-primary"],[1,"focus-label","text-danger"]],template:function(o,t){1&o&&(n.j41(0,"div",0),n.bIt("uxFocusWithin",function(){return t.focus=!0})("uxBlurWithin",function(){return t.focus=!1}),n.j41(1,"div",1)(2,"label",2),n.EFF(3,"Full Name"),n.k0s(),n.nrm(4,"input",3),n.k0s(),n.j41(5,"div",1)(6,"label",4),n.EFF(7,"Email"),n.k0s(),n.nrm(8,"input",5),n.k0s(),n.j41(9,"div",6)(10,"button",7),n.EFF(11,"Submit"),n.k0s()()(),n.qex(12,8),n.DNE(13,H,2,0,"p",9)(14,Y,2,0,"p",10),n.bVm(),n.nrm(15,"hr"),n.j41(16,"p"),n.EFF(17," The "),n.j41(18,"code"),n.EFF(19,"uxFocusWithin"),n.k0s(),n.EFF(20," and "),n.j41(21,"code"),n.EFF(22,"uxBlurWithin"),n.k0s(),n.EFF(23," directives can be used to identify when any child of an element gains or loses focus. This can be particularly useful when it comes to making your components more accessible.\n"),n.k0s(),n.j41(24,"p"),n.EFF(25,"The following code can be used to create the example above:"),n.k0s(),n.j41(26,"ux-tabset",11)(27,"ux-tab",12),n.nrm(28,"uxd-snippet",13),n.k0s(),n.j41(29,"ux-tab",14),n.nrm(30,"uxd-snippet",13),n.k0s(),n.j41(31,"ux-tab",15),n.nrm(32,"uxd-snippet",13),n.k0s()()),2&o&&(n.R7$(12),n.Y8G("ngSwitch",t.focus),n.R7$(),n.Y8G("ngSwitchCase",!0),n.R7$(),n.Y8G("ngSwitchCase",!1),n.R7$(12),n.Y8G("minimal",!1),n.R7$(2),n.Y8G("content",t.snippets.compiled.appHtml),n.R7$(2),n.Y8G("content",t.snippets.compiled.appTs),n.R7$(2),n.Y8G("content",t.snippets.compiled.appCss))},dependencies:[P.G,B.x,l.ux,l.e1,y.N,v.f,x.j],styles:[".focus-container[_ngcontent-%COMP%]{border-style:dashed;border-width:1px;padding:20px;width:450px;max-width:100%}.focus-label[_ngcontent-%COMP%]{width:450px;max-width:100%;text-align:center;margin:10px 0 0}"],changeDetection:0})}};j=(0,h.Cg)([(0,f.zo)("ComponentsFocusComponent")],j);let S=class A extends g.j{constructor(){super(a(71931))}static{this.\u0275fac=function(o){return new(o||A)}}static{this.\u0275cmp=n.VBU({type:A,selectors:[["uxd-components-persistent-data-service"]],standalone:!1,features:[n.Vt3],decls:40,vars:1,consts:[["uxd-api-property","","name","setItem","args","string, string, PersistentDataStorageType?"],["uxd-api-property","","name","getItem","args","string, PersistentDataStorageType?","returns","string"],["uxd-api-property","","name","removeItem","args","string, PersistentDataStorageType?","returns","string"],["uxd-api-property","","name","clear","args","PersistentDataStorageType?","returns","string"],["language","javascript",3,"content"]],template:function(o,t){1&o&&(n.j41(0,"p"),n.EFF(1," The "),n.j41(2,"code"),n.EFF(3,"PersistentDataService"),n.k0s(),n.EFF(4," can be used to set and get data in "),n.j41(5,"code"),n.EFF(6,"localStorage"),n.k0s(),n.EFF(7,", "),n.j41(8,"code"),n.EFF(9,"Cookies"),n.k0s(),n.EFF(10," or "),n.j41(11,"code"),n.EFF(12,"sessionStorage"),n.k0s(),n.EFF(13,". The service can be used to choose which to set or will attempt to use "),n.j41(14,"code"),n.EFF(15,"localStorage"),n.k0s(),n.EFF(16," by default, falling back to "),n.j41(17,"code"),n.EFF(18,"Cookies"),n.k0s(),n.EFF(19," if this fails.\n"),n.k0s(),n.j41(20,"p"),n.EFF(21,"The "),n.j41(22,"code"),n.EFF(23,"PersistentDataStorageType"),n.k0s(),n.EFF(24," enum is used when setting the storage type."),n.k0s(),n.j41(25,"uxd-api-properties")(26,"tr",0),n.EFF(27," This method expects a key and value parameter as strings and can also accept a PersistentDataStorageType if you wish to set the storage type, otherwise it will follow default behaviour. "),n.k0s(),n.j41(28,"tr",1),n.EFF(29," This method will accept a string parameter for the key and will return a string containing the value associated with that key. It will also accept a PersistentDataStorageType parameter which is required if this was used when setting the data. "),n.k0s(),n.j41(30,"tr",2),n.EFF(31," This method will accept a string parameter for the key and will remove that item from Storage. It will also accept a PersistentDataStorageType parameter which is required if this was used when setting the data. "),n.k0s(),n.j41(32,"tr",3),n.EFF(33," This method will clear the default storage type or a specific storage type if one is specified. "),n.k0s()(),n.j41(34,"p"),n.EFF(35,"Below is an example of how the "),n.j41(36,"code"),n.EFF(37,"PersistentDataService"),n.k0s(),n.EFF(38," can be used:"),n.k0s(),n.nrm(39,"uxd-snippet",4)),2&o&&(n.R7$(39),n.Y8G("content",t.snippets.compiled.appTs))},dependencies:[b.H,F.p,y.N],encapsulation:2})}};S=(0,h.Cg)([(0,f.zo)("ComponentsPersistentDataServiceComponent")],S);var z=a(45489),W=a(64465),K=a(4079);function J(r,i){if(1&r&&(n.j41(0,"li",21)(1,"h4",22),n.EFF(2),n.k0s(),n.j41(3,"p",23),n.EFF(4),n.nI1(5,"date"),n.k0s(),n.j41(6,"p",24),n.EFF(7),n.k0s(),n.j41(8,"div",25)(9,"ux-checkbox"),n.EFF(10,"Archive post"),n.k0s()()()),2&r){const o=i.$implicit;n.R7$(2),n.JRh(o.title),n.R7$(2),n.JRh(n.bMT(5,3,o.date)),n.R7$(3),n.JRh(o.content)}}const C=new z.Chance;let D=class V extends g.j{constructor(){super(a(23299)),this.posts=[{title:"Getting Started with UX Aspects",date:C.date({year:2018}),content:"UX Aspects is the only open source user interface framework for building modern, responsive, mobile big data applications on the web."},{title:"Ivy: A look at the New Render Engine for Angular",date:C.date({year:2018}),content:"Ivy is the next generation of Angular Renderer. It is third in line after the original compiler (for Angular 2) and Renderer2 (for Angular 4 and above)."},{title:"Angular Console\u200a\u2014\u200aThe UI for the Angular CLI",date:C.date({year:2018}),content:"Angular CLI transformed the Angular ecosystem. We no longer have to spend time maintaining our webpack configurations, figuring out how to make tests run, fixing source maps\u200a\u2014\u200athe CLI does this for us."},{title:"Angular Ngrx DevTools",date:C.date({year:2018}),content:"This post is a step-by-step guide for setting up your Ngrx Development environment, namely the Ngrx DevTools, but not only: we will also talk about some best practices for developing Ngrx applications in general."}],this.playground={files:{"app.component.html":this.snippets.raw.appHtml,"app.component.ts":this.snippets.raw.appTs,"app.component.css":this.snippets.raw.appCss},modules:[{imports:["CheckboxModule"],library:"@ux-aspects/ux-aspects"},{library:"chance"}]}}static{this.\u0275fac=function(o){return new(o||V)}}static{this.\u0275cmp=n.VBU({type:V,selectors:[["uxd-components-tabbable-list"]],standalone:!1,features:[n.Vt3],decls:55,vars:5,consts:[["uxTabbableList","",1,"list-group"],["class","list-group-item","uxTabbableListItem","",4,"ngFor","ngForOf"],["tableTitle","Inputs"],["uxd-api-property","","name","direction","type","'horizontal' | 'vertical'","defaultValue","vertical"],["uxd-api-property","","name","wrap","type","boolean","defaultValue","true"],["uxd-api-property","","name","focusOnShow","type","boolean","defaultValue","false"],["uxd-api-property","","name","returnFocus","type","boolean","defaultValue","false"],["uxd-api-property","","name","hierarchy","type","boolean","defaultValue","false"],["uxd-api-property","","name","allowAltModifier","type","boolean","defaultValue","true"],["uxd-api-property","","name","allowCtrlModifier","type","boolean","defaultValue","true"],["uxd-api-property","","name","allowBoundaryKeys","type","boolean","defaultValue","false"],["uxd-api-property","","name","parent","type","TabbableListItemDirective"],["uxd-api-property","","name","expanded","type","boolean","defaultValue","false"],["uxd-api-property","","name","key","type","any"],["tableTitle","Outputs"],["uxd-api-property","","name","expandedChange","type","boolean"],[3,"minimal"],["heading","HTML"],[3,"content"],["heading","TypeScript"],["heading","CSS"],["uxTabbableListItem","",1,"list-group-item"],[1,"list-group-item-heading"],[1,"list-group-item-subheading"],[1,"list-group-item-text"],[1,"list-group-item-checkbox"]],template:function(o,t){1&o&&(n.j41(0,"ul",0),n.DNE(1,J,11,5,"li",1),n.k0s(),n.nrm(2,"hr"),n.j41(3,"p"),n.EFF(4," The "),n.j41(5,"code"),n.EFF(6,"uxTabbableList"),n.k0s(),n.EFF(7," directive can be used to easily make a list of items keyboard accessible. It will automatically make only one item focusable at any given time and provide arrow key functionality to shift focus between items.\n"),n.k0s(),n.j41(8,"p"),n.EFF(9," It supports lists of items presented both horizontally and vertically and can wrap focus, so whenever the user reaches the end of a the list, pressing the down arrow would return focus to the first item in the list.\n"),n.k0s(),n.j41(10,"p"),n.EFF(11," Hierarchical lists are also possible, for example a menu that has options that can be expanded to reveal child elements.\n"),n.k0s(),n.j41(12,"h4"),n.EFF(13,"uxTabbableList"),n.k0s(),n.j41(14,"uxd-api-properties",2)(15,"tr",3),n.EFF(16," Indicate if the list is displayed horizontally or vertically. "),n.k0s(),n.j41(17,"tr",4),n.EFF(18," Indicate whether or not focus should loop back to the first element after the last. "),n.k0s(),n.j41(19,"tr",5),n.EFF(20," Indicate whether or not the first item should receive focus on show. This is useful when displaying the list in a modal or popover. "),n.k0s(),n.j41(21,"tr",6),n.EFF(22," Indicate whether or not focus should be returned to the previous element when the list is destroyed (only applicable when using focusOnShow). "),n.k0s(),n.j41(23,"tr",7),n.EFF(24," Enabling handling of hierarchical lists via use of the "),n.j41(25,"code"),n.EFF(26,"TabbableListItemDirective.parent"),n.k0s(),n.EFF(27," property. "),n.k0s(),n.j41(28,"tr",8),n.EFF(29," Prevent keyboard interaction when alt modifier key is pressed. "),n.k0s(),n.j41(30,"tr",9),n.EFF(31," Prevent keyboard interaction when ctrl modifier key is pressed. "),n.k0s(),n.j41(32,"tr",10),n.EFF(33," If enabled, pressing the Home or End key will focus the first or last item respectively. "),n.k0s()(),n.j41(34,"h4"),n.EFF(35,"uxTabbableListItem"),n.k0s(),n.j41(36,"uxd-api-properties",2)(37,"tr",11),n.EFF(38," Indicate the parent tabbable list item if one is present. "),n.k0s(),n.j41(39,"tr",12),n.EFF(40," Indicate if the item is expanded if used as a hierarchical item. "),n.k0s(),n.j41(41,"tr",13),n.EFF(42," Specify a unique identifier for the tabbable item. This should be used if using a tabbable list in a virtual scroll component. "),n.k0s()(),n.j41(43,"uxd-api-properties",14)(44,"tr",15),n.EFF(45," Emit when the expanded state changes. "),n.k0s()(),n.j41(46,"p"),n.EFF(47,"The example above can created using the following code:"),n.k0s(),n.j41(48,"ux-tabset",16)(49,"ux-tab",17),n.nrm(50,"uxd-snippet",18),n.k0s(),n.j41(51,"ux-tab",19),n.nrm(52,"uxd-snippet",18),n.k0s(),n.j41(53,"ux-tab",20),n.nrm(54,"uxd-snippet",18),n.k0s()()),2&o&&(n.R7$(),n.Y8G("ngForOf",t.posts),n.R7$(47),n.Y8G("minimal",!1),n.R7$(2),n.Y8G("content",t.snippets.compiled.appHtml),n.R7$(2),n.Y8G("content",t.snippets.compiled.appTs),n.R7$(2),n.Y8G("content",t.snippets.compiled.appCss))},dependencies:[W.z,K.a,q.P,l.Sq,b.H,F.p,y.N,v.f,x.j,l.vh],styles:[".list-group-item[_ngcontent-%COMP%]:focus{z-index:1}.list-group-item-heading[_ngcontent-%COMP%]{color:#000}.list-group-item-subheading[_ngcontent-%COMP%]{color:#888;font-size:14px}.list-group-item-checkbox[_ngcontent-%COMP%]{margin-top:4px;text-align:right}"],changeDetection:0})}};D=(0,h.Cg)([(0,f.zo)("ComponentsTabbableListComponent")],D);const X=[I,E,S,D,j,T],Q=[{path:"**",component:c.i,data:{category:w.a.resolveCategoryData(w.E.Components,"Utilities")}}];let Z=(()=>{class r{constructor(o,t){t.registerResolver(o,X)}static{this.\u0275fac=function(t){return new(t||r)(n.KVO(n.OM3),n.KVO(w.a))}}static{this.\u0275mod=n.$C({type:r})}static{this.\u0275inj=n.G2t({imports:[u.NhY,u.h6p,u.q4,l.MD,p.f,u.aqz,e.iI.forChild(Q),u.w9h]})}}return r})()},54549:s=>{s.exports={snippet:'@<span class="token function">NgModule</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  AccessibilityModule<span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">AppModule</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>\n',example:"@NgModule({\n  AccessibilityModule,\n})\nexport class AppModule {}\n"}},66214:(s,d,a)=>{var l={"./app.css":11081,"./app.example.ts":2131,"./app.html":17779,"./app.snippet.ts":99712,"docs/app/pages/components/components-sections/utilities/color-service/snippets/app.css":11081,"docs/app/pages/components/components-sections/utilities/color-service/snippets/app.example.ts":2131,"docs/app/pages/components/components-sections/utilities/color-service/snippets/app.html":17779,"docs/app/pages/components/components-sections/utilities/color-service/snippets/app.snippet.ts":99712};function e(p){var c=u(p);return a(c)}function u(p){if(!a.o(l,p)){var c=new Error("Cannot find module '"+p+"'");throw c.code="MODULE_NOT_FOUND",c}return l[p]}e.keys=function(){return Object.keys(l)},e.resolve=u,s.exports=e,e.id=66214},67916:s=>{s.exports={snippet:'<span class="token selector">.focus-container</span> <span class="token punctuation">{</span>\n  <span class="token property">border-style</span><span class="token punctuation">:</span> dashed<span class="token punctuation">;</span>\n  <span class="token property">border-width</span><span class="token punctuation">:</span> 1px<span class="token punctuation">;</span>\n  <span class="token property">padding</span><span class="token punctuation">:</span> 20px<span class="token punctuation">;</span>\n  <span class="token property">width</span><span class="token punctuation">:</span> 450px<span class="token punctuation">;</span>\n  <span class="token property">max-width</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.focus-label</span> <span class="token punctuation">{</span>\n  <span class="token property">width</span><span class="token punctuation">:</span> 450px<span class="token punctuation">;</span>\n  <span class="token property">max-width</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>\n  <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>\n  <span class="token property">margin</span><span class="token punctuation">:</span> 10px 0 0<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n',example:".focus-container {\n  border-style: dashed;\n  border-width: 1px;\n  padding: 20px;\n  width: 450px;\n  max-width: 100%;\n}\n\n.focus-label {\n  width: 450px;\n  max-width: 100%;\n  text-align: center;\n  margin: 10px 0 0;\n}\n"}},71931:(s,d,a)=>{var l={"./app.ts":39654,"docs/app/pages/components/components-sections/utilities/persistent-data-service/snippets/app.ts":39654};function e(p){var c=u(p);return a(c)}function u(p){if(!a.o(l,p)){var c=new Error("Cannot find module '"+p+"'");throw c.code="MODULE_NOT_FOUND",c}return l[p]}e.keys=function(){return Object.keys(l)},e.resolve=u,s.exports=e,e.id=71931},72156:s=>{s.exports={snippet:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>focus-container<span class="token punctuation">"</span></span> <span class="token attr-name">(uxFocusWithin)</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>focus = true<span class="token punctuation">"</span></span> <span class="token attr-name">(uxBlurWithin)</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>focus = false<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>form-group<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>form-label<span class="token punctuation">"</span></span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>full-name<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Full Name<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>full-name<span class="token punctuation">"</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Enter full name<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>form-control<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>form-group<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>form-label<span class="token punctuation">"</span></span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>email-address<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Email<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>email<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>email-address<span class="token punctuation">"</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Enter email<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>form-control<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>clearfix<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>btn button-primary pull-right<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Submit<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ng-container</span> <span class="token attr-name">[ngSwitch]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>focus<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">*ngSwitchCase</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>focus-label text-primary<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Element Focused<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">*ngSwitchCase</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>false<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>focus-label text-danger<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>No Element Focused<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ng-container</span><span class="token punctuation">></span></span>\n',example:'<div class="focus-container" (uxFocusWithin)="focus = true" (uxBlurWithin)="focus = false">\n  <div class="form-group">\n    <label class="form-label" for="full-name">Full Name</label>\n    <input type="text" id="full-name" placeholder="Enter full name" class="form-control" />\n  </div>\n\n  <div class="form-group">\n    <label class="form-label" for="email-address">Email</label>\n    <input type="email" id="email-address" placeholder="Enter email" class="form-control" />\n  </div>\n\n  <div class="clearfix">\n    <button class="btn button-primary pull-right" type="submit">Submit</button>\n  </div>\n</div>\n\n<ng-container [ngSwitch]="focus">\n  <p *ngSwitchCase="true" class="focus-label text-primary">Element Focused</p>\n  <p *ngSwitchCase="false" class="focus-label text-danger">No Element Focused</p>\n</ng-container>\n'}},78632:s=>{s.exports={snippet:'<span class="token selector">.focus-demo-box</span> <span class="token punctuation">{</span>\n  <span class="token property">width</span><span class="token punctuation">:</span> 210px<span class="token punctuation">;</span>\n  <span class="token property">height</span><span class="token punctuation">:</span> 80px<span class="token punctuation">;</span>\n  <span class="token property">border</span><span class="token punctuation">:</span> 2px solid #f1f1f1<span class="token punctuation">;</span>\n  <span class="token property">border-radius</span><span class="token punctuation">:</span> 3px<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n',example:".focus-demo-box {\n  width: 210px;\n  height: 80px;\n  border: 2px solid #f1f1f1;\n  border-radius: 3px;\n}\n"}},99712:s=>{s.exports={snippet:'<span class="token keyword">import</span> <span class="token punctuation">{</span> Component <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@angular/core\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> ColorService<span class="token punctuation">,</span> ThemeColor <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@ux-aspects/ux-aspects\'</span><span class="token punctuation">;</span>\n\n@<span class="token function">Component</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token literal-property property">selector</span><span class="token operator">:</span> <span class="token string">\'app-root\'</span><span class="token punctuation">,</span>\n  <span class="token literal-property property">templateUrl</span><span class="token operator">:</span> <span class="token string">\'./app.component.html\'</span><span class="token punctuation">,</span>\n  <span class="token literal-property property">styleUrls</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">\'./app.component.css\'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">AppComponent</span> <span class="token punctuation">{</span>\n  <span class="token comment">// ...</span>\n\n  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter"><span class="token keyword">public</span> <span class="token literal-property property">colorService</span><span class="token operator">:</span> ColorService</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span>donutChartColors <span class="token operator">=</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        <span class="token literal-property property">backgroundColor</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n          colorService<span class="token punctuation">.</span><span class="token function">getColor</span><span class="token punctuation">(</span><span class="token string">\'chart1\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toRgb</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n          colorService<span class="token punctuation">.</span><span class="token function">getColor</span><span class="token punctuation">(</span><span class="token string">\'chart2\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toRgb</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n          colorService<span class="token punctuation">.</span><span class="token function">getColor</span><span class="token punctuation">(</span><span class="token string">\'chart3\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toRgb</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        <span class="token punctuation">]</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">hoverBackgroundColor</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n          colorService<span class="token punctuation">.</span><span class="token function">getColor</span><span class="token punctuation">(</span><span class="token string">\'chart1\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setAlpha</span><span class="token punctuation">(</span><span class="token number">0.3</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toRgba</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n          colorService<span class="token punctuation">.</span><span class="token function">getColor</span><span class="token punctuation">(</span><span class="token string">\'chart2\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setAlpha</span><span class="token punctuation">(</span><span class="token number">0.3</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toRgba</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n          colorService<span class="token punctuation">.</span><span class="token function">getColor</span><span class="token punctuation">(</span><span class="token string">\'chart3\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setAlpha</span><span class="token punctuation">(</span><span class="token number">0.3</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toRgba</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        <span class="token punctuation">]</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n'}}}]);